record `com.mastercard.mcbp.core.mpplite.states.b` @kind class @AccessFlag PUBLIC extends `com.mastercard.mcbp.core.mpplite.states.d` @kind class {
  `e.c.a.a.d` `com.mastercard.mcbp.core.mpplite.states.b.c` @AccessFlag PRIVATE_FINAL;
  `com.mastercard.api.crypto.b` `com.mastercard.mcbp.core.mpplite.states.b.d` @AccessFlag PRIVATE_FINAL;
  `e.c.a.a.c` `com.mastercard.mcbp.core.mpplite.states.b.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.mastercard.mcbp.core.mpplite.states.b` v0 @kind this, `com.mastercard.mcbp.core.mpplite.states.h` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.<init>:(Lcom/mastercard/mcbp/core/mpplite/states/h;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L164428.  call `<init>`(v0, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.<init>:(Lcom/mastercard/mcbp/core/mpplite/states/h;)V` @kind direct;
  #L16442e.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L164434.  v1:= temp @kind object;
  #L164436.  v0.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` := v1 @kind object;
  #L16443a.  call temp:= `getInstance`() @signature `Lcom/mastercard/api/crypto/b;.getInstance:()Lcom/mastercard/api/crypto/b;` @kind static;
  #L164440.  v1:= temp @kind object;
  #L164442.  v0.`com.mastercard.mcbp.core.mpplite.states.b.d` @type ^`com.mastercard.api.crypto.b` := v1 @kind object;
  #L164446.  return @kind void;
}
procedure `e.c.a.a.c` `a`(`com.mastercard.mcbp.core.mpplite.states.b` v2 @kind this, `e.c.a.d.c.c.b` v3 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.a:(Le/c/a/d/c/c/b;)Le/c/a/a/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1635d4.  v0:= v2.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L1635d8.  call temp:= `getClContext`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L1635de.  v0:= temp @kind object;
  #L1635e0.  call temp:= `getTransactionContext`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L1635e6.  v0:= temp @kind object;
  #L1635e8.  v1:= 0I;
  #L1635ea.  call `setCid`(v0, v1) @signature `Le/c/b/a/d/b;.setCid:(B)V` @kind virtual;
  #L1635f0.  call temp:= `getMobileSupportIndicator`(v3) @signature `Le/c/a/d/c/c/b;.getMobileSupportIndicator:()Le/c/a/a/c;` @kind virtual;
  #L1635f6.  v3:= temp @kind object;
  #L1635f8.  call temp:= `getByte`(v3, v1) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L1635fe.  v3:= temp;
  #L163600.  v0:= 1I;
  #L163602.  v3:= v3 ^& v0 @kind int;
  #L163604.  if v3 == v0 then goto L16361a;
  #L163608.  v3:= v2.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L16360c.  v0:= 27010I;
  #L163610.  call temp:= `getFromWord`(v3, v0) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L163616.  v3:= temp @kind object;
  #L163618.  goto L163696;
  #L16361a.  v3:= v2.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L16361e.  v0:= -24778I;
  #L163622.  call temp:= `getFromWord`(v3, v0) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L163628.  v3:= temp @kind object;
  #L16362a.  v0:= 2I;
  #L16362c.  call temp:= `appendByte`(v3, v0) @signature `Le/c/a/a/c;.appendByte:(B)Le/c/a/a/c;` @kind interface;
  #L163632.  v0:= v2.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163636.  call temp:= `getCredentials`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getCredentials:()Le/c/b/a/e/f;` @kind virtual;
  #L16363c.  v0:= temp @kind object;
  #L16363e.  call temp:= `getATC`(v0) @signature `Le/c/b/a/e/f;.getATC:()Le/c/a/a/c;` @kind virtual;
  #L163644.  v0:= temp @kind object;
  #L163646.  call temp:= `append`(v3, v0) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L16364c.  v0:= v2.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L163650.  v1:= -8373I;
  #L163654.  call temp:= `getFromWord`(v0, v1) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L16365a.  v0:= temp @kind object;
  #L16365c.  call temp:= `append`(v3, v0) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L163662.  v0:= 3I;
  #L163664.  call temp:= `appendByte`(v3, v0) @signature `Le/c/a/a/c;.appendByte:(B)Le/c/a/a/c;` @kind interface;
  #L16366a.  v0:= v2.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L16366e.  call temp:= `getClContext`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163674.  v0:= temp @kind object;
  #L163676.  call temp:= `getPOSCII`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getPOSCII:()Le/c/a/a/c;` @kind virtual;
  #L16367c.  v0:= temp @kind object;
  #L16367e.  call temp:= `append`(v3, v0) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L163684.  v0:= new `e.c.a.d.c.c.a`;
  #L163688.  call `<init>`(v0, v3) @signature `Le/c/a/d/c/c/a;.<init>:(Le/c/a/a/c;)V` @kind direct;
  #L16368e.  call temp:= `getByteArray`(v0) @signature `Le/c/a/d/c/b;.getByteArray:()Le/c/a/a/c;` @kind virtual;
  #L163694.  v3:= temp @kind object;
  #L163696.  v0:= v2.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L16369a.  call temp:= `getClContext`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L1636a0.  v0:= temp @kind object;
  #L1636a2.  call temp:= `getTransactionListener`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionListener:()Le/c/b/a/e/a;` @kind virtual;
  #L1636a8.  v0:= temp @kind object;
  #L1636aa.  v1:= v2.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L1636ae.  call temp:= `getClContext`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L1636b4.  v1:= temp @kind object;
  #L1636b6.  call temp:= `getTransactionContext`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L1636bc.  v1:= temp @kind object;
  #L1636be.  call `onContactlessTransactionCompleted`(v0, v1) @signature `Le/c/b/a/e/a;.onContactlessTransactionCompleted:(Le/c/b/a/d/b;)V` @kind interface;
  #L1636c4.  call temp:= `cancelPayment`(v2) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.cancelPayment:()Le/c/b/a/e/e;` @kind virtual;
  #L1636ca.  return v3 @kind object;
}
procedure `e.c.a.a.c` `a`(`com.mastercard.mcbp.core.mpplite.states.b` v5 @kind this, `e.c.a.d.c.c.d` v6 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.a:(Le/c/a/d/c/c/d;)Le/c/a/a/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L162e80.  call temp:= `getP1`(v6) @signature `Le/c/a/d/c/a;.getP1:()B` @kind virtual;
  #L162e86.  v0:= temp;
  #L162e88.  v1:= v5.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` @kind object;
  #L162e8c.  v2:= 0I;
  #L162e8e.  call temp:= `getByte`(v1, v2) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L162e94.  v1:= temp;
  #L162e96.  v3:= v5.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` @kind object;
  #L162e9a.  v4:= 16I;
  #L162e9e.  v1:= v1 ^| v4 @kind int;
  #L162ea0.  v1:= (`byte`) v1 @kind i2b;
  #L162ea2.  call `setByte`(v3, v2, v1) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L162ea8.  v1:= v5.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L162eac.  call temp:= `getClContext`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L162eb2.  v1:= temp @kind object;
  #L162eb4.  call temp:= `getCryptoOut`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getCryptoOut:()Le/c/b/a/e/b;` @kind virtual;
  #L162eba.  v1:= temp @kind object;
  #L162ebc.  call `setCid`(v1, v2) @signature `Le/c/b/a/e/b;.setCid:(B)V` @kind virtual;
  #L162ec2.  v1:= v5.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L162ec6.  call temp:= `getClContext`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L162ecc.  v1:= temp @kind object;
  #L162ece.  call temp:= `getTransactionContext`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L162ed4.  v1:= temp @kind object;
  #L162ed6.  call `setCid`(v1, v2) @signature `Le/c/b/a/d/b;.setCid:(B)V` @kind virtual;
  #L162edc.  if v0 != v4 then goto L162f2e;
  #L162ee0.  v0:= v5.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L162ee4.  call temp:= `getClContext`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L162eea.  v0:= temp @kind object;
  #L162eec.  call temp:= `isCvmEntered`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.isCvmEntered:()Z` @kind virtual;
  #L162ef2.  v0:= temp;
  #L162ef4.  if v0 != 0 then goto L162f10;
  #L162ef8.  v0:= v5.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L162efc.  call temp:= `getClContext`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L162f02.  v0:= temp @kind object;
  #L162f04.  call temp:= `isCVMRequired`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.isCVMRequired:()Z` @kind virtual;
  #L162f0a.  v0:= temp;
  #L162f0c.  if v0 != 0 then goto L162f2e;
  #L162f10.  v0:= v5.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` @kind object;
  #L162f14.  v1:= 3I;
  #L162f16.  call temp:= `getByte`(v0, v1) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L162f1c.  v0:= temp;
  #L162f1e.  v2:= v5.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` @kind object;
  #L162f22.  v0:= v0 ^| 64;
  #L162f26.  v0:= (`byte`) v0 @kind i2b;
  #L162f28.  call `setByte`(v2, v1, v0) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L162f2e.  call temp:= `b`(v5, v6) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.b:(Le/c/a/d/c/c/d;)Le/c/a/a/c;` @kind direct;
  #L162f34.  v6:= temp @kind object;
  #L162f36.  return v6 @kind object;
}
procedure `e.c.a.a.c` `a`(`com.mastercard.mcbp.core.mpplite.states.b` v9 @kind this, `e.c.a.d.c.c.d` v10 @kind object, `e.c.a.a.c` v11 @kind object, `e.c.a.a.c` v12 @kind object, `byte` v13 , `e.c.a.a.c` v14 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.a:(Le/c/a/d/c/c/d;Le/c/a/a/c;Le/c/a/a/c;BLe/c/a/a/c;)Le/c/a/a/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L16337c.  call temp:= `getCDOL`(v10) @signature `Le/c/a/d/c/c/d;.getCDOL:()Le/c/a/a/c;` @kind virtual;
  #L163382.  v0:= temp @kind object;
  #L163384.  call temp:= `getLength`(v14) @signature `Le/c/a/a/c;.getLength:()I` @kind interface;
  #L16338a.  v1:= temp;
  #L16338c.  v1:= v1 + -8;
  #L163390.  call temp:= `getLength`(v14) @signature `Le/c/a/a/c;.getLength:()I` @kind interface;
  #L163396.  v2:= temp;
  #L163398.  call temp:= `copyOfRange`(v14, v1, v2) @signature `Le/c/a/a/c;.copyOfRange:(II)Le/c/a/a/c;` @kind interface;
  #L16339e.  v14:= temp @kind object;
  #L1633a0.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L1633a6.  v1:= temp @kind object;
  #L1633a8.  v2:= v9.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L1633ac.  call temp:= `getClContext`(v2) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L1633b2.  v2:= temp @kind object;
  #L1633b4.  call temp:= `getPdol`(v2) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getPdol:()Le/c/a/a/c;` @kind virtual;
  #L1633ba.  v2:= temp @kind object;
  #L1633bc.  call temp:= `getFromByteArray`(v1, v2) @signature `Le/c/a/a/d;.getFromByteArray:(Le/c/a/a/c;)Le/c/a/a/c;` @kind virtual;
  #L1633c2.  v1:= temp @kind object;
  #L1633c4.  call temp:= `append`(v1, v0) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L1633ca.  v0:= v9.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L1633ce.  v2:= -24793I;
  #L1633d2.  call temp:= `getFromWord`(v0, v2) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L1633d8.  v0:= temp @kind object;
  #L1633da.  call temp:= `append`(v1, v0) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L1633e0.  v0:= 1I;
  #L1633e2.  call temp:= `appendByte`(v1, v0) @signature `Le/c/a/a/c;.appendByte:(B)Le/c/a/a/c;` @kind interface;
  #L1633e8.  call temp:= `appendByte`(v1, v13) @signature `Le/c/a/a/c;.appendByte:(B)Le/c/a/a/c;` @kind interface;
  #L1633ee.  v2:= v9.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L1633f2.  v3:= -24778I;
  #L1633f6.  call temp:= `getFromWord`(v2, v3) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L1633fc.  v2:= temp @kind object;
  #L1633fe.  call temp:= `append`(v1, v2) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L163404.  v2:= 2I;
  #L163406.  call temp:= `appendByte`(v1, v2) @signature `Le/c/a/a/c;.appendByte:(B)Le/c/a/a/c;` @kind interface;
  #L16340c.  v3:= v9.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163410.  call temp:= `getCredentials`(v3) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getCredentials:()Le/c/b/a/e/f;` @kind virtual;
  #L163416.  v3:= temp @kind object;
  #L163418.  call temp:= `getATC`(v3) @signature `Le/c/b/a/e/f;.getATC:()Le/c/a/a/c;` @kind virtual;
  #L16341e.  v3:= temp @kind object;
  #L163420.  call temp:= `append`(v1, v3) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L163426.  v3:= v9.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L16342a.  v4:= -24816I;
  #L16342e.  call temp:= `getFromWord`(v3, v4) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L163434.  v3:= temp @kind object;
  #L163436.  call temp:= `create`(v3, v12) @signature `Le/c/a/d/a;.create:(Le/c/a/a/c;Le/c/a/a/c;)Le/c/a/a/c;` @kind static;
  #L16343c.  v12:= temp @kind object;
  #L16343e.  call temp:= `append`(v1, v12) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L163444.  v12:= v9.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163448.  call temp:= `getClContext`(v12) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L16344e.  v12:= temp @kind object;
  #L163450.  call temp:= `getPOSCII`(v12) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getPOSCII:()Le/c/a/a/c;` @kind virtual;
  #L163456.  v12:= temp @kind object;
  #L163458.  if v12 == 0 then goto L163496;
  #L16345c.  v12:= v9.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L163460.  v3:= -8373I;
  #L163464.  call temp:= `getFromWord`(v12, v3) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L16346a.  v12:= temp @kind object;
  #L16346c.  v3:= v9.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163470.  call temp:= `getClContext`(v3) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163476.  v3:= temp @kind object;
  #L163478.  call temp:= `getPOSCII`(v3) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getPOSCII:()Le/c/a/a/c;` @kind virtual;
  #L16347e.  v3:= temp @kind object;
  #L163480.  call temp:= `clone`(v3) @signature `Le/c/a/a/c;.clone:()Le/c/a/a/c;` @kind interface;
  #L163486.  v3:= temp @kind object;
  #L163488.  call temp:= `create`(v12, v3) @signature `Le/c/a/d/a;.create:(Le/c/a/a/c;Le/c/a/a/c;)Le/c/a/a/c;` @kind static;
  #L16348e.  v12:= temp @kind object;
  #L163490.  call temp:= `append`(v1, v12) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L163496.  v12:= v9.`com.mastercard.mcbp.core.mpplite.states.b.d` @type ^`com.mastercard.api.crypto.b` @kind object;
  #L16349a.  call temp:= `SHA1`(v12, v1) @signature `Lcom/mastercard/api/crypto/b;.SHA1:(Le/c/a/a/c;)Le/c/a/a/c;` @kind virtual;
  #L1634a0.  v12:= temp @kind object;
  #L1634a2.  v1:= v9.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L1634a6.  call temp:= `getProfile`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getProfile:()Le/c/b/a/d/h/e;` @kind virtual;
  #L1634ac.  v1:= temp @kind object;
  #L1634ae.  call temp:= `getContactlessPaymentData`(v1) @signature `Le/c/b/a/d/h/e;.getContactlessPaymentData:()Le/c/b/a/d/h/c;` @kind virtual;
  #L1634b4.  v1:= temp @kind object;
  #L1634b6.  v3:= v9.`com.mastercard.mcbp.core.mpplite.states.b.d` @type ^`com.mastercard.api.crypto.b` @kind object;
  #L1634ba.  call temp:= `getICC_privateKey_p`(v1) @signature `Le/c/b/a/d/h/c;.getICC_privateKey_p:()Le/c/a/a/c;` @kind virtual;
  #L1634c0.  v4:= temp @kind object;
  #L1634c2.  call temp:= `getICC_privateKey_q`(v1) @signature `Le/c/b/a/d/h/c;.getICC_privateKey_q:()Le/c/a/a/c;` @kind virtual;
  #L1634c8.  v5:= temp @kind object;
  #L1634ca.  call temp:= `getICC_privateKey_dp`(v1) @signature `Le/c/b/a/d/h/c;.getICC_privateKey_dp:()Le/c/a/a/c;` @kind virtual;
  #L1634d0.  v6:= temp @kind object;
  #L1634d2.  call temp:= `getICC_privateKey_dq`(v1) @signature `Le/c/b/a/d/h/c;.getICC_privateKey_dq:()Le/c/a/a/c;` @kind virtual;
  #L1634d8.  v7:= temp @kind object;
  #L1634da.  call temp:= `getICC_privateKey_a`(v1) @signature `Le/c/b/a/d/h/c;.getICC_privateKey_a:()Le/c/a/a/c;` @kind virtual;
  #L1634e0.  v8:= temp @kind object;
  #L1634e2.  call temp:= `initRSAPrivateKey`(v3, v4, v5, v6, v7, v8) @signature `Lcom/mastercard/api/crypto/b;.initRSAPrivateKey:(Le/c/a/a/c;Le/c/a/a/c;Le/c/a/a/c;Le/c/a/a/c;Le/c/a/a/c;)I` @kind virtual;
  #L1634e8.  v1:= temp;
  #L1634ea.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L1634f0.  v3:= temp @kind object;
  #L1634f2.  v4:= v1 + -63;
  #L1634f6.  call temp:= `getByteArray`(v3, v4) @signature `Le/c/a/a/d;.getByteArray:(I)Le/c/a/a/c;` @kind virtual;
  #L1634fc.  v3:= temp @kind object;
  #L1634fe.  v4:= -69I;
  #L163502.  call temp:= `fill`(v3, v4) @signature `Le/c/a/a/c;.fill:(B)Le/c/a/a/c;` @kind interface;
  #L163508.  v4:= v9.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L16350c.  call temp:= `getByteArray`(v4, v0) @signature `Le/c/a/a/d;.getByteArray:(I)Le/c/a/a/c;` @kind virtual;
  #L163512.  v4:= temp @kind object;
  #L163514.  v5:= 5I;
  #L163516.  v6:= 0I;
  #L163518.  call `setByte`(v4, v6, v5) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L16351e.  call temp:= `appendByte`(v4, v0) @signature `Le/c/a/a/c;.appendByte:(B)Le/c/a/a/c;` @kind interface;
  #L163524.  v5:= 38I;
  #L163528.  call temp:= `appendByte`(v4, v5) @signature `Le/c/a/a/c;.appendByte:(B)Le/c/a/a/c;` @kind interface;
  #L16352e.  call temp:= `getLength`(v14) @signature `Le/c/a/a/c;.getLength:()I` @kind interface;
  #L163534.  v5:= temp;
  #L163536.  v5:= (`byte`) v5 @kind i2b;
  #L163538.  call temp:= `appendByte`(v4, v5) @signature `Le/c/a/a/c;.appendByte:(B)Le/c/a/a/c;` @kind interface;
  #L16353e.  call temp:= `append`(v4, v14) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L163544.  call temp:= `appendByte`(v4, v13) @signature `Le/c/a/a/c;.appendByte:(B)Le/c/a/a/c;` @kind interface;
  #L16354a.  call temp:= `append`(v4, v11) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L163550.  call temp:= `append`(v4, v12) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L163556.  call temp:= `append`(v4, v3) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L16355c.  call temp:= `getUnpredictableNumber`(v10) @signature `Le/c/a/d/c/c/d;.getUnpredictableNumber:()Le/c/a/a/c;` @kind virtual;
  #L163562.  v10:= temp @kind object;
  #L163564.  call temp:= `append`(v4, v10) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L16356a.  v10:= v9.`com.mastercard.mcbp.core.mpplite.states.b.d` @type ^`com.mastercard.api.crypto.b` @kind object;
  #L16356e.  call temp:= `SHA1`(v10, v4) @signature `Lcom/mastercard/api/crypto/b;.SHA1:(Le/c/a/a/c;)Le/c/a/a/c;` @kind virtual;
  #L163574.  v10:= temp @kind object;
  #L163576.  v11:= v9.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L16357a.  call temp:= `getByteArray`(v11, v0) @signature `Le/c/a/a/d;.getByteArray:(I)Le/c/a/a/c;` @kind virtual;
  #L163580.  v11:= temp @kind object;
  #L163582.  v12:= 106I;
  #L163586.  call `setByte`(v11, v6, v12) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L16358c.  call temp:= `getLength`(v10) @signature `Le/c/a/a/c;.getLength:()I` @kind interface;
  #L163592.  v12:= temp;
  #L163594.  v1:= v1 - v12 @kind int;
  #L163596.  v1:= v1 - v2 @kind int;
  #L163598.  call temp:= `copyOfRange`(v4, v6, v1) @signature `Le/c/a/a/c;.copyOfRange:(II)Le/c/a/a/c;` @kind interface;
  #L16359e.  v12:= temp @kind object;
  #L1635a0.  call temp:= `append`(v11, v12) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L1635a6.  call temp:= `append`(v11, v10) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L1635ac.  v10:= -68I;
  #L1635b0.  call temp:= `appendByte`(v11, v10) @signature `Le/c/a/a/c;.appendByte:(B)Le/c/a/a/c;` @kind interface;
  #L1635b6.  v10:= v9.`com.mastercard.mcbp.core.mpplite.states.b.d` @type ^`com.mastercard.api.crypto.b` @kind object;
  #L1635ba.  call temp:= `RSA`(v10, v11) @signature `Lcom/mastercard/api/crypto/b;.RSA:(Le/c/a/a/c;)Le/c/a/a/c;` @kind virtual;
  #L1635c0.  v10:= temp @kind object;
  #L1635c2.  return v10 @kind object;
}
procedure `void` `a`(`com.mastercard.mcbp.core.mpplite.states.b` v3 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1646c0.  v0:= new `e.c.b.a.e.b`;
  #L1646c4.  call `<init>`(v0) @signature `Le/c/b/a/e/b;.<init>:()V` @kind direct;
  #L1646ca.  v1:= v3.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L1646ce.  call temp:= `getCredentials`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getCredentials:()Le/c/b/a/e/f;` @kind virtual;
  #L1646d4.  v1:= temp @kind object;
  #L1646d6.  if v1 == 0 then goto L1646fe;
  #L1646da.  v1:= v3.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L1646de.  call temp:= `getCredentials`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getCredentials:()Le/c/b/a/e/f;` @kind virtual;
  #L1646e4.  v1:= temp @kind object;
  #L1646e6.  call temp:= `getATC`(v1) @signature `Le/c/b/a/e/f;.getATC:()Le/c/a/a/c;` @kind virtual;
  #L1646ec.  v1:= temp @kind object;
  #L1646ee.  call temp:= `clone`(v1) @signature `Le/c/a/a/c;.clone:()Le/c/a/a/c;` @kind interface;
  #L1646f4.  v1:= temp @kind object;
  #L1646f6.  call `setATC`(v0, v1) @signature `Le/c/b/a/e/b;.setATC:(Le/c/a/a/c;)V` @kind virtual;
  #L1646fc.  goto L164712;
  #L1646fe.  v1:= v3.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L164702.  v2:= 2I;
  #L164704.  call temp:= `getByteArray`(v1, v2) @signature `Le/c/a/a/d;.getByteArray:(I)Le/c/a/a/c;` @kind virtual;
  #L16470a.  v1:= temp @kind object;
  #L16470c.  call `setATC`(v0, v1) @signature `Le/c/b/a/e/b;.setATC:(Le/c/a/a/c;)V` @kind virtual;
  #L164712.  v1:= v3.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164716.  call temp:= `getProfile`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getProfile:()Le/c/b/a/d/h/e;` @kind virtual;
  #L16471c.  v1:= temp @kind object;
  #L16471e.  call temp:= `getContactlessPaymentData`(v1) @signature `Le/c/b/a/d/h/e;.getContactlessPaymentData:()Le/c/b/a/d/h/c;` @kind virtual;
  #L164724.  v1:= temp @kind object;
  #L164726.  call temp:= `getIssuerApplicationData`(v1) @signature `Le/c/b/a/d/h/c;.getIssuerApplicationData:()Le/c/a/a/c;` @kind virtual;
  #L16472c.  v1:= temp @kind object;
  #L16472e.  call temp:= `clone`(v1) @signature `Le/c/a/a/c;.clone:()Le/c/a/a/c;` @kind interface;
  #L164734.  v1:= temp @kind object;
  #L164736.  call `setIssuerApplicationData`(v0, v1) @signature `Le/c/b/a/e/b;.setIssuerApplicationData:(Le/c/a/a/c;)V` @kind virtual;
  #L16473c.  v1:= v3.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164740.  call temp:= `getClContext`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L164746.  v1:= temp @kind object;
  #L164748.  call `setCryptoOut`(v1, v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setCryptoOut:(Le/c/b/a/e/b;)V` @kind virtual;
  #L16474e.  return @kind void;
}
procedure `void` `a`(`com.mastercard.mcbp.core.mpplite.states.b` v4 @kind this, `com.mastercard.mcbp.core.mpplite.states.a` v5 @kind object, `e.c.a.a.c` v6 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.a:(Lcom/mastercard/mcbp/core/mpplite/states/a;Le/c/a/a/c;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L164490.  call temp:= `getTransactionContext`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L164496.  v0:= temp @kind object;
  #L164498.  call temp:= `getAmount`(v0) @signature `Le/c/b/a/d/b;.getAmount:()Le/c/a/a/c;` @kind virtual;
  #L16449e.  v0:= temp @kind object;
  #L1644a0.  call temp:= `isZero`(v0) @signature `Le/c/a/d/b;.isZero:(Le/c/a/a/c;)Z` @kind static;
  #L1644a6.  v0:= temp;
  #L1644a8.  v1:= 3I;
  #L1644aa.  if v0 == 0 then goto L164516;
  #L1644ae.  call temp:= `getBytes`(v6) @signature `Le/c/a/a/c;.getBytes:()[B` @kind interface;
  #L1644b4.  v6:= temp @kind object;
  #L1644b6.  v0:= 0I;
  #L1644b8.  call temp:= `readShort`(v6, v0) @signature `Le/c/a/d/b;.readShort:([BI)S` @kind static;
  #L1644be.  v6:= temp;
  #L1644c0.  v0:= 16657I;
  #L1644c4.  if v6 == v0 then goto L1644e2;
  #L1644c8.  v0:= 16689I;
  #L1644cc.  if v6 == v0 then goto L1644e2;
  #L1644d0.  v0:= 18308I;
  #L1644d4.  if v6 == v0 then goto L1644e2;
  #L1644d8.  v0:= 29987I;
  #L1644dc.  if v6 == v0 then goto L1644e2;
  #L1644e0.  goto L164516;
  #L1644e2.  call temp:= `getTransactionContext`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L1644e8.  v6:= temp @kind object;
  #L1644ea.  v0:= `@@e.c.b.a.d.c.k` @type ^`e.c.b.a.d.c` @kind object;
  #L1644ee.  call `setResult`(v6, v0) @signature `Le/c/b/a/d/b;.setResult:(Le/c/b/a/d/c;)V` @kind virtual;
  #L1644f4.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L1644fa.  v6:= temp @kind object;
  #L1644fc.  call temp:= `getByteArray`(v6, v1) @signature `Le/c/a/a/d;.getByteArray:(I)Le/c/a/a/c;` @kind virtual;
  #L164502.  v6:= temp @kind object;
  #L164504.  call `setPOSCII`(v5, v6) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setPOSCII:(Le/c/a/a/c;)V` @kind virtual;
  #L16450a.  v5:= new `com.mastercard.mcbp.core.mpplite.states.AACException`;
  #L16450e.  call `<init>`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/AACException;.<init>:()V` @kind direct;
  #L164514.  throw v5;
  #L164516.  call temp:= `getBlAmount`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getBlAmount:()Le/c/a/a/c;` @kind virtual;
  #L16451c.  v6:= temp @kind object;
  #L16451e.  if v6 == 0 then goto L164616;
  #L164522.  call temp:= `getTransactionContext`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L164528.  v6:= temp @kind object;
  #L16452a.  call temp:= `getCurrencyCode`(v6) @signature `Le/c/b/a/d/b;.getCurrencyCode:()Le/c/a/a/c;` @kind virtual;
  #L164530.  v6:= temp @kind object;
  #L164532.  call temp:= `getBlCurrency`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getBlCurrency:()Le/c/a/a/c;` @kind virtual;
  #L164538.  v0:= temp @kind object;
  #L16453a.  call temp:= `isEqual`(v6, v0) @signature `Le/c/a/a/c;.isEqual:(Le/c/a/a/c;)Z` @kind interface;
  #L164540.  v6:= temp;
  #L164542.  v0:= 8I;
  #L164546.  v2:= 1I;
  #L164548.  if v6 == 0 then goto L1645dc;
  #L16454c.  call temp:= `isBlExactAmount`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.isBlExactAmount:()Z` @kind virtual;
  #L164552.  v6:= temp;
  #L164554.  if v6 != 0 then goto L16457c;
  #L164558.  call temp:= `getBlAmount`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getBlAmount:()Le/c/a/a/c;` @kind virtual;
  #L16455e.  v6:= temp @kind object;
  #L164560.  call temp:= `getTransactionContext`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L164566.  v3:= temp @kind object;
  #L164568.  call temp:= `getAmount`(v3) @signature `Le/c/b/a/d/b;.getAmount:()Le/c/a/a/c;` @kind virtual;
  #L16456e.  v3:= temp @kind object;
  #L164570.  call temp:= `superior`(v6, v3) @signature `Le/c/a/d/b;.superior:(Le/c/a/a/c;Le/c/a/a/c;)Z` @kind static;
  #L164576.  v6:= temp;
  #L164578.  if v6 != 0 then goto L164616;
  #L16457c.  call temp:= `getBlAmount`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getBlAmount:()Le/c/a/a/c;` @kind virtual;
  #L164582.  v6:= temp @kind object;
  #L164584.  call temp:= `getTransactionContext`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L16458a.  v3:= temp @kind object;
  #L16458c.  call temp:= `getAmount`(v3) @signature `Le/c/b/a/d/b;.getAmount:()Le/c/a/a/c;` @kind virtual;
  #L164592.  v3:= temp @kind object;
  #L164594.  call temp:= `isEqual`(v6, v3) @signature `Le/c/a/a/c;.isEqual:(Le/c/a/a/c;)Z` @kind interface;
  #L16459a.  v6:= temp;
  #L16459c.  if v6 == 0 then goto L1645a2;
  #L1645a0.  goto L164616;
  #L1645a2.  call temp:= `getTransactionContext`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L1645a8.  v6:= temp @kind object;
  #L1645aa.  v3:= `@@e.c.b.a.d.c.j` @type ^`e.c.b.a.d.c` @kind object;
  #L1645ae.  call `setResult`(v6, v3) @signature `Le/c/b/a/d/b;.setResult:(Le/c/b/a/d/c;)V` @kind virtual;
  #L1645b4.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L1645ba.  v6:= temp @kind object;
  #L1645bc.  call temp:= `getByteArray`(v6, v1) @signature `Le/c/a/a/d;.getByteArray:(I)Le/c/a/a/c;` @kind virtual;
  #L1645c2.  v6:= temp @kind object;
  #L1645c4.  call `setByte`(v6, v2, v0) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L1645ca.  call `setPOSCII`(v5, v6) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setPOSCII:(Le/c/a/a/c;)V` @kind virtual;
  #L1645d0.  v5:= new `com.mastercard.mcbp.core.mpplite.states.AACException`;
  #L1645d4.  call `<init>`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/AACException;.<init>:()V` @kind direct;
  #L1645da.  throw v5;
  #L1645dc.  call temp:= `getTransactionContext`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L1645e2.  v6:= temp @kind object;
  #L1645e4.  v3:= `@@e.c.b.a.d.c.j` @type ^`e.c.b.a.d.c` @kind object;
  #L1645e8.  call `setResult`(v6, v3) @signature `Le/c/b/a/d/b;.setResult:(Le/c/b/a/d/c;)V` @kind virtual;
  #L1645ee.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L1645f4.  v6:= temp @kind object;
  #L1645f6.  call temp:= `getByteArray`(v6, v1) @signature `Le/c/a/a/d;.getByteArray:(I)Le/c/a/a/c;` @kind virtual;
  #L1645fc.  v6:= temp @kind object;
  #L1645fe.  call `setByte`(v6, v2, v0) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L164604.  call `setPOSCII`(v5, v6) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setPOSCII:(Le/c/a/a/c;)V` @kind virtual;
  #L16460a.  v5:= new `com.mastercard.mcbp.core.mpplite.states.AACException`;
  #L16460e.  call `<init>`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/AACException;.<init>:()V` @kind direct;
  #L164614.  throw v5;
  #L164616.  return @kind void;
}
procedure `void` `a`(`com.mastercard.mcbp.core.mpplite.states.b` v1 @kind this, `e.c.a.d.c.c.d` v2 @kind object, `e.c.b.a.e.f` v3 @kind object, `e.c.b.a.d.b` v4 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.a:(Le/c/a/d/c/c/d;Le/c/b/a/e/f;Le/c/b/a/d/b;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L164760.  if v3 != 0 then goto L16477a;
  #L164764.  v3:= v1.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L164768.  v0:= 2I;
  #L16476a.  call temp:= `getByteArray`(v3, v0) @signature `Le/c/a/a/d;.getByteArray:(I)Le/c/a/a/c;` @kind virtual;
  #L164770.  v3:= temp @kind object;
  #L164772.  call `setATC`(v4, v3) @signature `Le/c/b/a/d/b;.setATC:(Le/c/a/a/c;)V` @kind virtual;
  #L164778.  goto L164790;
  #L16477a.  call temp:= `getATC`(v3) @signature `Le/c/b/a/e/f;.getATC:()Le/c/a/a/c;` @kind virtual;
  #L164780.  v3:= temp @kind object;
  #L164782.  call temp:= `clone`(v3) @signature `Le/c/a/a/c;.clone:()Le/c/a/a/c;` @kind interface;
  #L164788.  v3:= temp @kind object;
  #L16478a.  call `setATC`(v4, v3) @signature `Le/c/b/a/d/b;.setATC:(Le/c/a/a/c;)V` @kind virtual;
  #L164790.  call temp:= `getAuthorizedAmount`(v2) @signature `Le/c/a/d/c/c/d;.getAuthorizedAmount:()Le/c/a/a/c;` @kind virtual;
  #L164796.  v3:= temp @kind object;
  #L164798.  call `setAmount`(v4, v3) @signature `Le/c/b/a/d/b;.setAmount:(Le/c/a/a/c;)V` @kind virtual;
  #L16479e.  call temp:= `getTransactionCurrencyCode`(v2) @signature `Le/c/a/d/c/c/d;.getTransactionCurrencyCode:()Le/c/a/a/c;` @kind virtual;
  #L1647a4.  v3:= temp @kind object;
  #L1647a6.  call `setCurrencyCode`(v4, v3) @signature `Le/c/b/a/d/b;.setCurrencyCode:(Le/c/a/a/c;)V` @kind virtual;
  #L1647ac.  call temp:= `getTransactionDate`(v2) @signature `Le/c/a/d/c/c/d;.getTransactionDate:()Le/c/a/a/c;` @kind virtual;
  #L1647b2.  v3:= temp @kind object;
  #L1647b4.  call `setTrxDate`(v4, v3) @signature `Le/c/b/a/d/b;.setTrxDate:(Le/c/a/a/c;)V` @kind virtual;
  #L1647ba.  call temp:= `getTransactionType`(v2) @signature `Le/c/a/d/c/c/d;.getTransactionType:()Le/c/a/a/c;` @kind virtual;
  #L1647c0.  v3:= temp @kind object;
  #L1647c2.  call `setTrxType`(v4, v3) @signature `Le/c/b/a/d/b;.setTrxType:(Le/c/a/a/c;)V` @kind virtual;
  #L1647c8.  call temp:= `getUnpredictableNumber`(v2) @signature `Le/c/a/d/c/c/d;.getUnpredictableNumber:()Le/c/a/a/c;` @kind virtual;
  #L1647ce.  v2:= temp @kind object;
  #L1647d0.  call `setUN`(v4, v2) @signature `Le/c/b/a/d/b;.setUN:(Le/c/a/a/c;)V` @kind virtual;
  #L1647d6.  return @kind void;
}
procedure `boolean` `a`(`com.mastercard.mcbp.core.mpplite.states.b` v1 @kind this, `e.c.b.a.d.h.e` v2 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.a:(Le/c/b/a/d/h/e;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L162e30.  call temp:= `getContactlessPaymentData`(v2) @signature `Le/c/b/a/d/h/e;.getContactlessPaymentData:()Le/c/b/a/d/h/c;` @kind virtual;
  #L162e36.  v2:= temp @kind object;
  #L162e38.  call temp:= `getCIAC_Decline`(v2) @signature `Le/c/b/a/d/h/c;.getCIAC_Decline:()Le/c/a/a/c;` @kind virtual;
  #L162e3e.  v0:= temp @kind object;
  #L162e40.  if v0 == 0 then goto L162e6c;
  #L162e44.  call temp:= `getCVR_MaskAnd`(v2) @signature `Le/c/b/a/d/h/c;.getCVR_MaskAnd:()Le/c/a/a/c;` @kind virtual;
  #L162e4a.  v0:= temp @kind object;
  #L162e4c.  if v0 == 0 then goto L162e6c;
  #L162e50.  call temp:= `getIssuerApplicationData`(v2) @signature `Le/c/b/a/d/h/c;.getIssuerApplicationData:()Le/c/a/a/c;` @kind virtual;
  #L162e56.  v0:= temp @kind object;
  #L162e58.  if v0 == 0 then goto L162e6c;
  #L162e5c.  call temp:= `getICC_privateKey_a`(v2) @signature `Le/c/b/a/d/h/c;.getICC_privateKey_a:()Le/c/a/a/c;` @kind virtual;
  #L162e62.  v2:= temp @kind object;
  #L162e64.  if v2 == 0 then goto L162e6c;
  #L162e68.  v2:= 1I;
  #L162e6a.  goto L162e6e;
  #L162e6c.  v2:= 0I;
  #L162e6e.  return v2;
}
procedure `e.c.a.a.c` `b`(`com.mastercard.mcbp.core.mpplite.states.b` v12 @kind this, `e.c.a.d.c.c.b` v13 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.b:(Le/c/a/d/c/c/b;)Le/c/a/a/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1636dc.  v0:= v12.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L1636e0.  call temp:= `getClContext`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L1636e6.  v0:= temp @kind object;
  #L1636e8.  call temp:= `getTransactionContext`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L1636ee.  v0:= temp @kind object;
  #L1636f0.  v1:= -128I;
  #L1636f4.  call `setCid`(v0, v1) @signature `Le/c/b/a/d/b;.setCid:(B)V` @kind virtual;
  #L1636fa.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L163700.  v0:= temp @kind object;
  #L163702.  v1:= v12.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163706.  call temp:= `getProfile`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getProfile:()Le/c/b/a/d/h/e;` @kind virtual;
  #L16370c.  v1:= temp @kind object;
  #L16370e.  call temp:= `getContactlessPaymentData`(v1) @signature `Le/c/b/a/d/h/e;.getContactlessPaymentData:()Le/c/b/a/d/h/c;` @kind virtual;
  #L163714.  v1:= temp @kind object;
  #L163716.  call temp:= `getPIN_IV_CVC3_Track2`(v1) @signature `Le/c/b/a/d/h/c;.getPIN_IV_CVC3_Track2:()Le/c/a/a/c;` @kind virtual;
  #L16371c.  v1:= temp @kind object;
  #L16371e.  call temp:= `getFromByteArray`(v0, v1) @signature `Le/c/a/a/d;.getFromByteArray:(Le/c/a/a/c;)Le/c/a/a/c;` @kind virtual;
  #L163724.  v0:= temp @kind object;
  #L163726.  call temp:= `getUnpredictableNumber`(v13) @signature `Le/c/a/d/c/c/b;.getUnpredictableNumber:()Le/c/a/a/c;` @kind virtual;
  #L16372c.  v1:= temp @kind object;
  #L16372e.  call temp:= `append`(v0, v1) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L163734.  v1:= v12.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163738.  call temp:= `getCredentials`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getCredentials:()Le/c/b/a/e/f;` @kind virtual;
  #L16373e.  v1:= temp @kind object;
  #L163740.  call temp:= `getATC`(v1) @signature `Le/c/b/a/e/f;.getATC:()Le/c/a/a/c;` @kind virtual;
  #L163746.  v1:= temp @kind object;
  #L163748.  call temp:= `append`(v0, v1) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L16374e.  v2:= v12.`com.mastercard.mcbp.core.mpplite.states.b.d` @type ^`com.mastercard.api.crypto.b` @kind object;
  #L163752.  v3:= v12.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163756.  call temp:= `getCredentials`(v3) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getCredentials:()Le/c/b/a/e/f;` @kind virtual;
  #L16375c.  v3:= temp @kind object;
  #L16375e.  call temp:= `getUMDSessionKey`(v3) @signature `Le/c/b/a/e/f;.getUMDSessionKey:()Le/c/a/a/c;` @kind virtual;
  #L163764.  v3:= temp @kind object;
  #L163766.  call temp:= `clone`(v3) @signature `Le/c/a/a/c;.clone:()Le/c/a/a/c;` @kind interface;
  #L16376c.  v3:= temp @kind object;
  #L16376e.  v4:= 1I;
  #L163770.  call temp:= `DES3`(v2, v0, v3, v4) @signature `Lcom/mastercard/api/crypto/b;.DES3:(Le/c/a/a/c;Le/c/a/a/c;Z)Le/c/a/a/c;` @kind virtual;
  #L163776.  v2:= temp @kind object;
  #L163778.  v3:= v12.`com.mastercard.mcbp.core.mpplite.states.b.d` @type ^`com.mastercard.api.crypto.b` @kind object;
  #L16377c.  v5:= v12.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163780.  call temp:= `getCredentials`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getCredentials:()Le/c/b/a/e/f;` @kind virtual;
  #L163786.  v5:= temp @kind object;
  #L163788.  call temp:= `getMDSessionKey`(v5) @signature `Le/c/b/a/e/f;.getMDSessionKey:()Le/c/a/a/c;` @kind virtual;
  #L16378e.  v5:= temp @kind object;
  #L163790.  call temp:= `clone`(v5) @signature `Le/c/a/a/c;.clone:()Le/c/a/a/c;` @kind interface;
  #L163796.  v5:= temp @kind object;
  #L163798.  call temp:= `DES3`(v3, v0, v5, v4) @signature `Lcom/mastercard/api/crypto/b;.DES3:(Le/c/a/a/c;Le/c/a/a/c;Z)Le/c/a/a/c;` @kind virtual;
  #L16379e.  v0:= temp @kind object;
  #L1637a0.  v3:= 2I;
  #L1637a2.  v5:= 0I;
  #L1637a4.  call temp:= `copyOfRange`(v0, v5, v3) @signature `Le/c/a/a/c;.copyOfRange:(II)Le/c/a/a/c;` @kind interface;
  #L1637aa.  v0:= temp @kind object;
  #L1637ac.  call temp:= `getHexString`(v0) @signature `Le/c/a/a/c;.getHexString:()Ljava/lang/String;` @kind interface;
  #L1637b2.  v0:= temp @kind object;
  #L1637b4.  v6:= 16I;
  #L1637b8.  call temp:= `parseInt`(v0, v6) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;I)I` @kind static;
  #L1637be.  v0:= temp;
  #L1637c0.  v7:= 8I;
  #L1637c4.  v8:= 6I;
  #L1637c6.  call temp:= `copyOfRange`(v2, v8, v7) @signature `Le/c/a/a/c;.copyOfRange:(II)Le/c/a/a/c;` @kind interface;
  #L1637cc.  v2:= temp @kind object;
  #L1637ce.  call temp:= `getHexString`(v2) @signature `Le/c/a/a/c;.getHexString:()Ljava/lang/String;` @kind interface;
  #L1637d4.  v2:= temp @kind object;
  #L1637d6.  call temp:= `parseInt`(v2, v6) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;I)I` @kind static;
  #L1637dc.  v2:= temp;
  #L1637de.  call temp:= `getHexString`(v1) @signature `Le/c/a/a/c;.getHexString:()Ljava/lang/String;` @kind interface;
  #L1637e4.  v1:= temp @kind object;
  #L1637e6.  call temp:= `parseInt`(v1, v6) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;I)I` @kind static;
  #L1637ec.  v1:= temp;
  #L1637ee.  v0:= v0 %% 1000;
  #L1637f2.  v2:= v2 %% 1000;
  #L1637f6.  v1:= v1 %% 1000;
  #L1637fa.  v9:= v1 / 10;
  #L1637fe.  v9:= v9 * 1000;
  #L163802.  v0:= v0 + v9 @kind int;
  #L163804.  v1:= v1 %% 10;
  #L163808.  v1:= v1 * 1000;
  #L16380c.  v2:= v2 + v1 @kind int;
  #L16380e.  v1:= 4I;
  #L163810.  call temp:= `allocate`(v1) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L163816.  v9:= temp @kind object;
  #L163818.  v10:= `@@java.nio.ByteOrder.BIG_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L16381c.  call temp:= `order`(v9, v10) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L163822.  v9:= temp @kind object;
  #L163824.  call temp:= `putInt`(v9, v0) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L16382a.  v0:= temp @kind object;
  #L16382c.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L163832.  v0:= temp @kind object;
  #L163834.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L16383a.  v9:= temp @kind object;
  #L16383c.  call temp:= `getByteArray`(v9, v3) @signature `Le/c/a/a/d;.getByteArray:(I)Le/c/a/a/c;` @kind virtual;
  #L163842.  v9:= temp @kind object;
  #L163844.  v10:= v0[v3] @kind byte;
  #L163848.  call `setByte`(v9, v5, v10) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L16384e.  v10:= 3I;
  #L163850.  v0:= v0[v10] @kind byte;
  #L163854.  call `setByte`(v9, v4, v0) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L16385a.  call temp:= `allocate`(v1) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L163860.  v0:= temp @kind object;
  #L163862.  v11:= `@@java.nio.ByteOrder.BIG_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L163866.  call temp:= `order`(v0, v11) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L16386c.  v0:= temp @kind object;
  #L16386e.  call temp:= `putInt`(v0, v2) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L163874.  v0:= temp @kind object;
  #L163876.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L16387c.  v0:= temp @kind object;
  #L16387e.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L163884.  v2:= temp @kind object;
  #L163886.  call temp:= `getByteArray`(v2, v3) @signature `Le/c/a/a/d;.getByteArray:(I)Le/c/a/a/c;` @kind virtual;
  #L16388c.  v2:= temp @kind object;
  #L16388e.  v11:= v0[v3] @kind byte;
  #L163892.  call `setByte`(v2, v5, v11) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L163898.  v0:= v0[v10] @kind byte;
  #L16389c.  call `setByte`(v2, v4, v0) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L1638a2.  v0:= new `byte`[v7];
  #L1638a6.  call temp:= `getByte`(v2, v5) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L1638ac.  v7:= temp;
  #L1638ae.  v0[v5]:= v7 @kind byte;
  #L1638b2.  call temp:= `getByte`(v2, v4) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L1638b8.  v7:= temp;
  #L1638ba.  v0[v4]:= v7 @kind byte;
  #L1638be.  call temp:= `getByte`(v9, v5) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L1638c4.  v7:= temp;
  #L1638c6.  v0[v3]:= v7 @kind byte;
  #L1638ca.  call temp:= `getByte`(v9, v4) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L1638d0.  v7:= temp;
  #L1638d2.  v0[v10]:= v7 @kind byte;
  #L1638d6.  v0[v1]:= v5 @kind byte;
  #L1638da.  v1:= 5I;
  #L1638dc.  v0[v1]:= v5 @kind byte;
  #L1638e0.  v0[v8]:= v5 @kind byte;
  #L1638e4.  v1:= 7I;
  #L1638e6.  v0[v1]:= v5 @kind byte;
  #L1638ea.  v1:= v12.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L1638ee.  call temp:= `getClContext`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L1638f4.  v1:= temp @kind object;
  #L1638f6.  call temp:= `getTransactionContext`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L1638fc.  v1:= temp @kind object;
  #L1638fe.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L163904.  v7:= temp @kind object;
  #L163906.  v8:= length @variable v0;
  #L163908.  call temp:= `getByteArray`(v7, v0, v8) @signature `Le/c/a/a/d;.getByteArray:([BI)Le/c/a/a/c;` @kind virtual;
  #L16390e.  v0:= temp @kind object;
  #L163910.  call `setCryptoGram`(v1, v0) @signature `Le/c/b/a/d/b;.setCryptoGram:(Le/c/a/a/c;)V` @kind virtual;
  #L163916.  v0:= v12.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L16391a.  v1:= -24735I;
  #L16391e.  call temp:= `getFromWord`(v0, v1) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L163924.  v0:= temp @kind object;
  #L163926.  call temp:= `appendByte`(v0, v3) @signature `Le/c/a/a/c;.appendByte:(B)Le/c/a/a/c;` @kind interface;
  #L16392c.  call temp:= `append`(v0, v2) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L163932.  v1:= v12.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L163936.  v7:= -24736I;
  #L16393a.  call temp:= `getFromWord`(v1, v7) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L163940.  v1:= temp @kind object;
  #L163942.  call temp:= `append`(v0, v1) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L163948.  call temp:= `appendByte`(v0, v3) @signature `Le/c/a/a/c;.appendByte:(B)Le/c/a/a/c;` @kind interface;
  #L16394e.  call temp:= `append`(v0, v2) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L163954.  v1:= v12.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L163958.  v2:= -24778I;
  #L16395c.  call temp:= `getFromWord`(v1, v2) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L163962.  v1:= temp @kind object;
  #L163964.  call temp:= `append`(v0, v1) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L16396a.  call temp:= `appendByte`(v0, v3) @signature `Le/c/a/a/c;.appendByte:(B)Le/c/a/a/c;` @kind interface;
  #L163970.  call temp:= `append`(v0, v9) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L163976.  call temp:= `getMobileSupportIndicator`(v13) @signature `Le/c/a/d/c/c/b;.getMobileSupportIndicator:()Le/c/a/a/c;` @kind virtual;
  #L16397c.  v13:= temp @kind object;
  #L16397e.  call temp:= `getByte`(v13, v5) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L163984.  v13:= temp;
  #L163986.  v13:= v13 ^& v4 @kind int;
  #L163988.  if v13 != v4 then goto L163a00;
  #L16398c.  v13:= v12.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163990.  call temp:= `getClContext`(v13) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163996.  v13:= temp @kind object;
  #L163998.  call temp:= `getPOSCII`(v13) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getPOSCII:()Le/c/a/a/c;` @kind virtual;
  #L16399e.  v13:= temp @kind object;
  #L1639a0.  call temp:= `getByte`(v13, v4) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L1639a6.  v13:= temp;
  #L1639a8.  v13:= v13 ^| v6 @kind int;
  #L1639aa.  v13:= (`byte`) v13 @kind i2b;
  #L1639ac.  v1:= v12.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L1639b0.  call temp:= `getClContext`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L1639b6.  v1:= temp @kind object;
  #L1639b8.  call temp:= `getPOSCII`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getPOSCII:()Le/c/a/a/c;` @kind virtual;
  #L1639be.  v1:= temp @kind object;
  #L1639c0.  call `setByte`(v1, v4, v13) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L1639c6.  v13:= v12.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L1639ca.  v1:= -8373I;
  #L1639ce.  call temp:= `getFromWord`(v13, v1) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L1639d4.  v13:= temp @kind object;
  #L1639d6.  v1:= v12.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L1639da.  call temp:= `getClContext`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L1639e0.  v1:= temp @kind object;
  #L1639e2.  call temp:= `getPOSCII`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getPOSCII:()Le/c/a/a/c;` @kind virtual;
  #L1639e8.  v1:= temp @kind object;
  #L1639ea.  call temp:= `clone`(v1) @signature `Le/c/a/a/c;.clone:()Le/c/a/a/c;` @kind interface;
  #L1639f0.  v1:= temp @kind object;
  #L1639f2.  call temp:= `create`(v13, v1) @signature `Le/c/a/d/a;.create:(Le/c/a/a/c;Le/c/a/a/c;)Le/c/a/a/c;` @kind static;
  #L1639f8.  v13:= temp @kind object;
  #L1639fa.  call temp:= `append`(v0, v13) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L163a00.  v13:= v12.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163a04.  call temp:= `getClContext`(v13) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163a0a.  v13:= temp @kind object;
  #L163a0c.  call temp:= `getTransactionListener`(v13) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionListener:()Le/c/b/a/e/a;` @kind virtual;
  #L163a12.  v13:= temp @kind object;
  #L163a14.  v1:= v12.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163a18.  call temp:= `getClContext`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163a1e.  v1:= temp @kind object;
  #L163a20.  call temp:= `getTransactionContext`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L163a26.  v1:= temp @kind object;
  #L163a28.  call `onContactlessTransactionCompleted`(v13, v1) @signature `Le/c/b/a/e/a;.onContactlessTransactionCompleted:(Le/c/b/a/d/b;)V` @kind interface;
  #L163a2e.  call temp:= `cancelPayment`(v12) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.cancelPayment:()Le/c/b/a/e/e;` @kind virtual;
  #L163a34.  v13:= new `e.c.a.d.c.c.a`;
  #L163a38.  call `<init>`(v13, v0) @signature `Le/c/a/d/c/c/a;.<init>:(Le/c/a/a/c;)V` @kind direct;
  #L163a3e.  call temp:= `getByteArray`(v13) @signature `Le/c/a/d/c/b;.getByteArray:()Le/c/a/a/c;` @kind virtual;
  #L163a44.  v13:= temp @kind object;
  #L163a46.  return v13 @kind object;
  #L163a48.  call temp:= `cancelPayment`(v12) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.cancelPayment:()Le/c/b/a/e/e;` @kind virtual;
  #L163a4e.  v13:= v12.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L163a52.  v0:= 28416I;
  #L163a56.  call temp:= `getFromWord`(v13, v0) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L163a5c.  v13:= temp @kind object;
  #L163a5e.  return v13 @kind object;
  catch `com.mastercard.api.crypto.MMPPCryptoException` @[L1636fa..L163a46] goto L163a48;
}
procedure `e.c.a.a.c` `b`(`com.mastercard.mcbp.core.mpplite.states.b` v13 @kind this, `e.c.a.d.c.c.d` v14 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.b:(Le/c/a/d/c/c/d;)Le/c/a/a/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L162f48.  v0:= v13.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L162f4c.  call temp:= `getClContext`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L162f52.  v0:= temp @kind object;
  #L162f54.  call temp:= `isAlternateAID`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.isAlternateAID:()Z` @kind virtual;
  #L162f5a.  v0:= temp;
  #L162f5c.  if v0 == 0 then goto L162fce;
  #L162f60.  v0:= v13.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L162f64.  call temp:= `getProfile`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getProfile:()Le/c/b/a/d/h/e;` @kind virtual;
  #L162f6a.  v0:= temp @kind object;
  #L162f6c.  call temp:= `getContactlessPaymentData`(v0) @signature `Le/c/b/a/d/h/e;.getContactlessPaymentData:()Le/c/b/a/d/h/c;` @kind virtual;
  #L162f72.  v0:= temp @kind object;
  #L162f74.  call temp:= `getAlternateContactlessPaymentData`(v0) @signature `Le/c/b/a/d/h/c;.getAlternateContactlessPaymentData:()Le/c/b/a/d/h/a;` @kind virtual;
  #L162f7a.  v0:= temp @kind object;
  #L162f7c.  v1:= new `e.c.b.a.d.h.c`;
  #L162f80.  call `<init>`(v1) @signature `Le/c/b/a/d/h/c;.<init>:()V` @kind direct;
  #L162f86.  call temp:= `getAID`(v0) @signature `Le/c/b/a/d/h/a;.getAID:()Le/c/a/a/c;` @kind virtual;
  #L162f8c.  v2:= temp @kind object;
  #L162f8e.  call `setAID`(v1, v2) @signature `Le/c/b/a/d/h/c;.setAID:(Le/c/a/a/c;)V` @kind virtual;
  #L162f94.  call temp:= `getPaymentFCI`(v0) @signature `Le/c/b/a/d/h/a;.getPaymentFCI:()Le/c/a/a/c;` @kind virtual;
  #L162f9a.  v2:= temp @kind object;
  #L162f9c.  call `setPaymentFCI`(v1, v2) @signature `Le/c/b/a/d/h/c;.setPaymentFCI:(Le/c/a/a/c;)V` @kind virtual;
  #L162fa2.  call temp:= `getGPO_Response`(v0) @signature `Le/c/b/a/d/h/a;.getGPO_Response:()Le/c/a/a/c;` @kind virtual;
  #L162fa8.  v2:= temp @kind object;
  #L162faa.  call `setGPO_Response`(v1, v2) @signature `Le/c/b/a/d/h/c;.setGPO_Response:(Le/c/a/a/c;)V` @kind virtual;
  #L162fb0.  call temp:= `getCVR_MaskAnd`(v0) @signature `Le/c/b/a/d/h/a;.getCVR_MaskAnd:()Le/c/a/a/c;` @kind virtual;
  #L162fb6.  v2:= temp @kind object;
  #L162fb8.  call `setCVR_MaskAnd`(v1, v2) @signature `Le/c/b/a/d/h/c;.setCVR_MaskAnd:(Le/c/a/a/c;)V` @kind virtual;
  #L162fbe.  call temp:= `getCIAC_Decline`(v0) @signature `Le/c/b/a/d/h/a;.getCIAC_Decline:()Le/c/a/a/c;` @kind virtual;
  #L162fc4.  v0:= temp @kind object;
  #L162fc6.  call `setCIAC_Decline`(v1, v0) @signature `Le/c/b/a/d/h/c;.setCIAC_Decline:(Le/c/a/a/c;)V` @kind virtual;
  #L162fcc.  goto L162fe2;
  #L162fce.  v0:= v13.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L162fd2.  call temp:= `getProfile`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getProfile:()Le/c/b/a/d/h/e;` @kind virtual;
  #L162fd8.  v0:= temp @kind object;
  #L162fda.  call temp:= `getContactlessPaymentData`(v0) @signature `Le/c/b/a/d/h/e;.getContactlessPaymentData:()Le/c/b/a/d/h/c;` @kind virtual;
  #L162fe0.  v1:= temp @kind object;
  #L162fe2.  v0:= v13.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` @kind object;
  #L162fe6.  call temp:= `getCVR_MaskAnd`(v1) @signature `Le/c/b/a/d/h/c;.getCVR_MaskAnd:()Le/c/a/a/c;` @kind virtual;
  #L162fec.  v1:= temp @kind object;
  #L162fee.  call temp:= `bitWiseAnd`(v0, v1) @signature `Le/c/a/a/c;.bitWiseAnd:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L162ff4.  v0:= temp @kind object;
  #L162ff6.  v13.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` := v0 @kind object;
  #L162ffa.  call temp:= `getCDOL`(v14) @signature `Le/c/a/d/c/c/d;.getCDOL:()Le/c/a/a/c;` @kind virtual;
  #L163000.  v0:= temp @kind object;
  #L163002.  v1:= v13.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L163006.  v2:= 29I;
  #L16300a.  v3:= 0I;
  #L16300c.  call temp:= `copyOfRange`(v0, v3, v2) @signature `Le/c/a/a/c;.copyOfRange:(II)Le/c/a/a/c;` @kind interface;
  #L163012.  v2:= temp @kind object;
  #L163014.  call temp:= `getFromByteArray`(v1, v2) @signature `Le/c/a/a/d;.getFromByteArray:(Le/c/a/a/c;)Le/c/a/a/c;` @kind virtual;
  #L16301a.  v1:= temp @kind object;
  #L16301c.  v2:= v13.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` @kind object;
  #L163020.  call temp:= `clone`(v2) @signature `Le/c/a/a/c;.clone:()Le/c/a/a/c;` @kind interface;
  #L163026.  v2:= temp @kind object;
  #L163028.  v4:= v13.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L16302c.  call temp:= `getClContext`(v4) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163032.  v4:= temp @kind object;
  #L163034.  call temp:= `getAIP`(v4) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getAIP:()Le/c/a/a/c;` @kind virtual;
  #L16303a.  v4:= temp @kind object;
  #L16303c.  call temp:= `append`(v1, v4) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L163042.  v4:= v13.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163046.  call temp:= `getCredentials`(v4) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getCredentials:()Le/c/b/a/e/f;` @kind virtual;
  #L16304c.  v4:= temp @kind object;
  #L16304e.  call temp:= `getATC`(v4) @signature `Le/c/b/a/e/f;.getATC:()Le/c/a/a/c;` @kind virtual;
  #L163054.  v4:= temp @kind object;
  #L163056.  call temp:= `append`(v1, v4) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L16305c.  call temp:= `append`(v1, v2) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L163062.  v4:= v13.`com.mastercard.mcbp.core.mpplite.states.b.d` @type ^`com.mastercard.api.crypto.b` @kind object;
  #L163066.  v5:= v13.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L16306a.  call temp:= `getCredentials`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getCredentials:()Le/c/b/a/e/f;` @kind virtual;
  #L163070.  v5:= temp @kind object;
  #L163072.  call temp:= `getUMDSessionKey`(v5) @signature `Le/c/b/a/e/f;.getUMDSessionKey:()Le/c/a/a/c;` @kind virtual;
  #L163078.  v5:= temp @kind object;
  #L16307a.  call temp:= `mac`(v4, v1, v5) @signature `Lcom/mastercard/api/crypto/b;.mac:(Le/c/a/a/c;Le/c/a/a/c;)Le/c/a/a/c;` @kind virtual;
  #L163080.  v4:= temp @kind object;
  #L163082.  v5:= v13.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163086.  call temp:= `getClContext`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L16308c.  v5:= temp @kind object;
  #L16308e.  call temp:= `getCryptoOut`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getCryptoOut:()Le/c/b/a/e/b;` @kind virtual;
  #L163094.  v5:= temp @kind object;
  #L163096.  call `setCryptogram`(v5, v4) @signature `Le/c/b/a/e/b;.setCryptogram:(Le/c/a/a/c;)V` @kind virtual;
  #L16309c.  v5:= v13.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L1630a0.  call temp:= `getClContext`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L1630a6.  v5:= temp @kind object;
  #L1630a8.  call temp:= `getTransactionContext`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L1630ae.  v5:= temp @kind object;
  #L1630b0.  call `setCryptoGram`(v5, v4) @signature `Le/c/b/a/d/b;.setCryptoGram:(Le/c/a/a/c;)V` @kind virtual;
  #L1630b6.  v5:= v13.`com.mastercard.mcbp.core.mpplite.states.b.d` @type ^`com.mastercard.api.crypto.b` @kind object;
  #L1630ba.  v6:= v13.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L1630be.  call temp:= `getCredentials`(v6) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getCredentials:()Le/c/b/a/e/f;` @kind virtual;
  #L1630c4.  v6:= temp @kind object;
  #L1630c6.  call temp:= `getMDSessionKey`(v6) @signature `Le/c/b/a/e/f;.getMDSessionKey:()Le/c/a/a/c;` @kind virtual;
  #L1630cc.  v6:= temp @kind object;
  #L1630ce.  call temp:= `mac`(v5, v1, v6) @signature `Lcom/mastercard/api/crypto/b;.mac:(Le/c/a/a/c;Le/c/a/a/c;)Le/c/a/a/c;` @kind virtual;
  #L1630d4.  v1:= temp @kind object;
  #L1630d6.  v5:= v13.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L1630da.  call temp:= `getProfile`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getProfile:()Le/c/b/a/d/h/e;` @kind virtual;
  #L1630e0.  v5:= temp @kind object;
  #L1630e2.  call temp:= `getContactlessPaymentData`(v5) @signature `Le/c/b/a/d/h/e;.getContactlessPaymentData:()Le/c/b/a/d/h/c;` @kind virtual;
  #L1630e8.  v5:= temp @kind object;
  #L1630ea.  call temp:= `getIssuerApplicationData`(v5) @signature `Le/c/b/a/d/h/c;.getIssuerApplicationData:()Le/c/a/a/c;` @kind virtual;
  #L1630f0.  v5:= temp @kind object;
  #L1630f2.  call temp:= `clone`(v5) @signature `Le/c/a/a/c;.clone:()Le/c/a/a/c;` @kind interface;
  #L1630f8.  v11:= temp @kind object;
  #L1630fa.  v5:= 0I;
  #L1630fc.  v6:= 6I;
  #L1630fe.  if v5 >= v6 then goto L16311a;
  #L163102.  v6:= v5 + 2;
  #L163106.  call temp:= `getByte`(v2, v5) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L16310c.  v7:= temp;
  #L16310e.  call `setByte`(v11, v6, v7) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L163114.  v5:= v5 + 1;
  #L163118.  goto L1630fc;
  #L16311a.  v2:= 40I;
  #L16311e.  v5:= 32I;
  #L163122.  call temp:= `copyOfRange`(v0, v5, v2) @signature `Le/c/a/a/c;.copyOfRange:(II)Le/c/a/a/c;` @kind interface;
  #L163128.  v2:= temp @kind object;
  #L16312a.  call temp:= `isZero`(v2) @signature `Le/c/a/d/b;.isZero:(Le/c/a/a/c;)Z` @kind static;
  #L163130.  v2:= temp;
  #L163132.  v6:= 2I;
  #L163134.  if v2 == 0 then goto L16315e;
  #L163138.  v0:= 0I;
  #L16313a.  if v0 >= v6 then goto L163188;
  #L16313e.  v2:= v0 + 8;
  #L163142.  call temp:= `getDataAuthenticationCode`(v14) @signature `Le/c/a/d/c/c/d;.getDataAuthenticationCode:()Le/c/a/a/c;` @kind virtual;
  #L163148.  v5:= temp @kind object;
  #L16314a.  call temp:= `getByte`(v5, v0) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L163150.  v5:= temp;
  #L163152.  call `setByte`(v11, v2, v5) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L163158.  v0:= v0 + 1;
  #L16315c.  goto L16313a;
  #L16315e.  v2:= 0I;
  #L163160.  if v2 >= v6 then goto L163188;
  #L163164.  v7:= v2 + 8;
  #L163168.  v8:= 34I;
  #L16316c.  call temp:= `copyOfRange`(v0, v5, v8) @signature `Le/c/a/a/c;.copyOfRange:(II)Le/c/a/a/c;` @kind interface;
  #L163172.  v8:= temp @kind object;
  #L163174.  call temp:= `getByte`(v8, v2) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L16317a.  v8:= temp;
  #L16317c.  call `setByte`(v11, v7, v8) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L163182.  v2:= v2 + 1;
  #L163186.  goto L163160;
  #L163188.  v0:= 0I;
  #L16318a.  v2:= 5I;
  #L16318c.  if v0 >= v2 then goto L1631b0;
  #L163190.  v5:= v0 + 11;
  #L163194.  call temp:= `copyOfRange`(v1, v3, v2) @signature `Le/c/a/a/c;.copyOfRange:(II)Le/c/a/a/c;` @kind interface;
  #L16319a.  v2:= temp @kind object;
  #L16319c.  call temp:= `getByte`(v2, v0) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L1631a2.  v2:= temp;
  #L1631a4.  call `setByte`(v11, v5, v2) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L1631aa.  v0:= v0 + 1;
  #L1631ae.  goto L16318a;
  #L1631b0.  v0:= v13.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` @kind object;
  #L1631b4.  v6:= 1I;
  #L1631b6.  call temp:= `getByte`(v0, v6) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L1631bc.  v0:= temp;
  #L1631be.  v1:= 64I;
  #L1631c2.  v0:= v0 ^& v1 @kind int;
  #L1631c4.  if v0 != v1 then goto L163212;
  #L1631c8.  v0:= v13.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L1631cc.  call temp:= `getClContext`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L1631d2.  v0:= temp @kind object;
  #L1631d4.  call temp:= `getCryptoOut`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getCryptoOut:()Le/c/b/a/e/b;` @kind virtual;
  #L1631da.  v0:= temp @kind object;
  #L1631dc.  call temp:= `getCid`(v0) @signature `Le/c/b/a/e/b;.getCid:()B` @kind virtual;
  #L1631e2.  v5:= temp;
  #L1631e4.  v0:= v13.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L1631e8.  call temp:= `getCredentials`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getCredentials:()Le/c/b/a/e/f;` @kind virtual;
  #L1631ee.  v0:= temp @kind object;
  #L1631f0.  call temp:= `getIDN`(v0) @signature `Le/c/b/a/e/f;.getIDN:()Le/c/a/a/c;` @kind virtual;
  #L1631f6.  v7:= temp @kind object;
  #L1631f8.  v0:= v13 @kind object;
  #L1631fa.  v1:= v14 @kind object;
  #L1631fc.  v2:= v4 @kind object;
  #L1631fe.  v3:= v11 @kind object;
  #L163200.  v4:= v5;
  #L163202.  v5:= v7 @kind object;
  #L163204.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.a:(Le/c/a/d/c/c/d;Le/c/a/a/c;Le/c/a/a/c;BLe/c/a/a/c;)Le/c/a/a/c;` @kind direct;
  #L16320a.  v4:= temp @kind object;
  #L16320c.  v8:= v4 @kind object;
  #L16320e.  v7:= 1I;
  #L163210.  goto L163216;
  #L163212.  v8:= v4 @kind object;
  #L163214.  v7:= 0I;
  #L163216.  v0:= v13.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L16321a.  call temp:= `getClContext`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163220.  v0:= temp @kind object;
  #L163222.  call temp:= `getPOSCII`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getPOSCII:()Le/c/a/a/c;` @kind virtual;
  #L163228.  v12:= temp @kind object;
  #L16322a.  v0:= new `e.c.a.d.c.c.c`;
  #L16322e.  v1:= v13.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163232.  call temp:= `getCredentials`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getCredentials:()Le/c/b/a/e/f;` @kind virtual;
  #L163238.  v1:= temp @kind object;
  #L16323a.  call temp:= `getATC`(v1) @signature `Le/c/b/a/e/f;.getATC:()Le/c/a/a/c;` @kind virtual;
  #L163240.  v9:= temp @kind object;
  #L163242.  v1:= v13.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163246.  call temp:= `getClContext`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L16324c.  v1:= temp @kind object;
  #L16324e.  call temp:= `getCryptoOut`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getCryptoOut:()Le/c/b/a/e/b;` @kind virtual;
  #L163254.  v1:= temp @kind object;
  #L163256.  call temp:= `getCid`(v1) @signature `Le/c/b/a/e/b;.getCid:()B` @kind virtual;
  #L16325c.  v10:= temp;
  #L16325e.  v6:= v0 @kind object;
  #L163260.  call `<init>`(v6, v7, v8, v9, v10, v11, v12) @signature `Le/c/a/d/c/c/c;.<init>:(ZLe/c/a/a/c;Le/c/a/a/c;BLe/c/a/a/c;Le/c/a/a/c;)V` @kind direct;
  #L163266.  v1:= v13.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L16326a.  call temp:= `getClContext`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163270.  v1:= temp @kind object;
  #L163272.  call temp:= `getTransactionListener`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionListener:()Le/c/b/a/e/a;` @kind virtual;
  #L163278.  v1:= temp @kind object;
  #L16327a.  v2:= v13.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L16327e.  call temp:= `getClContext`(v2) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163284.  v2:= temp @kind object;
  #L163286.  call temp:= `getTransactionContext`(v2) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L16328c.  v2:= temp @kind object;
  #L16328e.  call `onContactlessTransactionCompleted`(v1, v2) @signature `Le/c/b/a/e/a;.onContactlessTransactionCompleted:(Le/c/b/a/d/b;)V` @kind interface;
  #L163294.  call temp:= `cancelPayment`(v13) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.cancelPayment:()Le/c/b/a/e/e;` @kind virtual;
  #L16329a.  call temp:= `getByteArray`(v0) @signature `Le/c/a/d/c/b;.getByteArray:()Le/c/a/a/c;` @kind virtual;
  #L1632a0.  v0:= temp @kind object;
  #L1632a2.  return v0 @kind object;
  #L1632a4.  call temp:= `cancelPayment`(v13) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.cancelPayment:()Le/c/b/a/e/e;` @kind virtual;
  #L1632aa.  v0:= v13.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L1632ae.  v1:= 28416I;
  #L1632b2.  call temp:= `getFromWord`(v0, v1) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L1632b8.  v0:= temp @kind object;
  #L1632ba.  return v0 @kind object;
  catch `com.mastercard.api.crypto.MMPPCryptoException` @[L163062..L1632a2] goto L1632a4;
}
procedure `e.c.a.a.c` `c`(`com.mastercard.mcbp.core.mpplite.states.b` v4 @kind this, `e.c.a.d.c.c.d` v5 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.c:(Le/c/a/d/c/c/d;)Le/c/a/a/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1632dc.  call temp:= `getP1`(v5) @signature `Le/c/a/d/c/a;.getP1:()B` @kind virtual;
  #L1632e2.  v0:= temp;
  #L1632e4.  v1:= v4.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` @kind object;
  #L1632e8.  v2:= 0I;
  #L1632ea.  call temp:= `getByte`(v1, v2) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L1632f0.  v1:= temp;
  #L1632f2.  v3:= v4.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` @kind object;
  #L1632f6.  v1:= v1 ^| -96;
  #L1632fa.  v1:= (`byte`) v1 @kind i2b;
  #L1632fc.  call `setByte`(v3, v2, v1) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L163302.  v1:= v4.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163306.  call temp:= `getClContext`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L16330c.  v1:= temp @kind object;
  #L16330e.  call temp:= `getCryptoOut`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getCryptoOut:()Le/c/b/a/e/b;` @kind virtual;
  #L163314.  v1:= temp @kind object;
  #L163316.  v2:= -128I;
  #L16331a.  call `setCid`(v1, v2) @signature `Le/c/b/a/e/b;.setCid:(B)V` @kind virtual;
  #L163320.  v1:= v4.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163324.  call temp:= `getClContext`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L16332a.  v1:= temp @kind object;
  #L16332c.  call temp:= `getTransactionContext`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L163332.  v1:= temp @kind object;
  #L163334.  call `setCid`(v1, v2) @signature `Le/c/b/a/d/b;.setCid:(B)V` @kind virtual;
  #L16333a.  v1:= 16I;
  #L16333e.  v0:= v0 ^& v1 @kind int;
  #L163340.  if v0 != v1 then goto L163362;
  #L163344.  v0:= v4.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` @kind object;
  #L163348.  v1:= 1I;
  #L16334a.  call temp:= `getByte`(v0, v1) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L163350.  v0:= temp;
  #L163352.  v2:= v4.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` @kind object;
  #L163356.  v0:= v0 ^| 64;
  #L16335a.  v0:= (`byte`) v0 @kind i2b;
  #L16335c.  call `setByte`(v2, v1, v0) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L163362.  call temp:= `b`(v4, v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.b:(Le/c/a/d/c/c/d;)Le/c/a/a/c;` @kind direct;
  #L163368.  v5:= temp @kind object;
  #L16336a.  return v5 @kind object;
}
procedure `void` `checkCCContext`(`com.mastercard.mcbp.core.mpplite.states.b` v0 @kind this, `com.mastercard.mcbp.core.mpplite.states.a` v1 @kind object, `e.c.a.a.c` v2 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.checkCCContext:(Lcom/mastercard/mcbp/core/mpplite/states/a;Le/c/a/a/c;)V` @AccessFlag PUBLIC {
    temp;

  #L164458.  call `a`(v0, v1, v2) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.a:(Lcom/mastercard/mcbp/core/mpplite/states/a;Le/c/a/a/c;)V` @kind direct;
  #L16445e.  return @kind void;
  #L164460.  v1:= Exception @type ^`com.mastercard.mcbp.core.mpplite.states.AACException` @kind object;
  #L164462.  v2:= new `com.mastercard.mcbp.core.mpplite.states.DeclineException`;
  #L164466.  call `<init>`(v2, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/DeclineException;.<init>:(Ljava/lang/Exception;)V` @kind direct;
  #L16446c.  throw v2;
  catch `com.mastercard.mcbp.core.mpplite.states.AACException` @[L164458..L16445e] goto L164460;
}
procedure `void` `initCCCTransactionContext`(`com.mastercard.mcbp.core.mpplite.states.b` v2 @kind this, `e.c.a.d.c.c.b` v3 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.initCCCTransactionContext:(Le/c/a/d/c/c/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L164628.  v0:= v2.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L16462c.  call temp:= `getClContext`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L164632.  v0:= temp @kind object;
  #L164634.  call temp:= `getTransactionContext`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L16463a.  v0:= temp @kind object;
  #L16463c.  call temp:= `getAuthorizedAmount`(v3) @signature `Le/c/a/d/c/c/b;.getAuthorizedAmount:()Le/c/a/a/c;` @kind virtual;
  #L164642.  v1:= temp @kind object;
  #L164644.  call temp:= `clone`(v1) @signature `Le/c/a/a/c;.clone:()Le/c/a/a/c;` @kind interface;
  #L16464a.  v1:= temp @kind object;
  #L16464c.  call `setAmount`(v0, v1) @signature `Le/c/b/a/d/b;.setAmount:(Le/c/a/a/c;)V` @kind virtual;
  #L164652.  v1:= v2.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164656.  call temp:= `getCredentials`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getCredentials:()Le/c/b/a/e/f;` @kind virtual;
  #L16465c.  v1:= temp @kind object;
  #L16465e.  call temp:= `getATC`(v1) @signature `Le/c/b/a/e/f;.getATC:()Le/c/a/a/c;` @kind virtual;
  #L164664.  v1:= temp @kind object;
  #L164666.  call temp:= `clone`(v1) @signature `Le/c/a/a/c;.clone:()Le/c/a/a/c;` @kind interface;
  #L16466c.  v1:= temp @kind object;
  #L16466e.  call `setATC`(v0, v1) @signature `Le/c/b/a/d/b;.setATC:(Le/c/a/a/c;)V` @kind virtual;
  #L164674.  call temp:= `getTransactionCurrencyCode`(v3) @signature `Le/c/a/d/c/c/b;.getTransactionCurrencyCode:()Le/c/a/a/c;` @kind virtual;
  #L16467a.  v1:= temp @kind object;
  #L16467c.  call `setCurrencyCode`(v0, v1) @signature `Le/c/b/a/d/b;.setCurrencyCode:(Le/c/a/a/c;)V` @kind virtual;
  #L164682.  call temp:= `getTransactionDate`(v3) @signature `Le/c/a/d/c/c/b;.getTransactionDate:()Le/c/a/a/c;` @kind virtual;
  #L164688.  v1:= temp @kind object;
  #L16468a.  call `setTrxDate`(v0, v1) @signature `Le/c/b/a/d/b;.setTrxDate:(Le/c/a/a/c;)V` @kind virtual;
  #L164690.  call temp:= `getTransactionType`(v3) @signature `Le/c/a/d/c/c/b;.getTransactionType:()Le/c/a/a/c;` @kind virtual;
  #L164696.  v1:= temp @kind object;
  #L164698.  call `setTrxType`(v0, v1) @signature `Le/c/b/a/d/b;.setTrxType:(Le/c/a/a/c;)V` @kind virtual;
  #L16469e.  call temp:= `getUnpredictableNumber`(v3) @signature `Le/c/a/d/c/c/b;.getUnpredictableNumber:()Le/c/a/a/c;` @kind virtual;
  #L1646a4.  v3:= temp @kind object;
  #L1646a6.  call `setUN`(v0, v3) @signature `Le/c/b/a/d/b;.setUN:(Le/c/a/a/c;)V` @kind virtual;
  #L1646ac.  return @kind void;
}
procedure `e.c.a.a.c` `processComputeCC`(`com.mastercard.mcbp.core.mpplite.states.b` v8 @kind this, `e.c.a.a.c` v9 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.processComputeCC:(Le/c/a/a/c;)Le/c/a/a/c;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L163a80.  v0:= new `e.c.a.d.c.c.b`;
  #L163a84.  call `<init>`(v0, v9) @signature `Le/c/a/d/c/c/b;.<init>:(Le/c/a/a/c;)V` @kind direct;
  #L163a8a.  v1:= 2I;
  #L163a8c.  call temp:= `getByte`(v9, v1) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L163a92.  v2:= temp;
  #L163a94.  v3:= 3I;
  #L163a96.  call temp:= `getByte`(v9, v3) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L163a9c.  v4:= temp;
  #L163a9e.  v5:= 4I;
  #L163aa0.  call temp:= `getByte`(v9, v5) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L163aa6.  v9:= temp;
  #L163aa8.  v9:= v9 ^& 255;
  #L163aac.  v5:= v8.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163ab0.  call temp:= `getProfile`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getProfile:()Le/c/b/a/d/h/e;` @kind virtual;
  #L163ab6.  v5:= temp @kind object;
  #L163ab8.  call temp:= `getContactlessPaymentData`(v5) @signature `Le/c/b/a/d/h/e;.getContactlessPaymentData:()Le/c/b/a/d/h/c;` @kind virtual;
  #L163abe.  v5:= temp @kind object;
  #L163ac0.  call temp:= `getPIN_IV_CVC3_Track2`(v5) @signature `Le/c/b/a/d/h/c;.getPIN_IV_CVC3_Track2:()Le/c/a/a/c;` @kind virtual;
  #L163ac6.  v6:= temp @kind object;
  #L163ac8.  v7:= 27013I;
  #L163acc.  if v6 == 0 then goto L163e02;
  #L163ad0.  call temp:= `getCIAC_DeclineOnPPMS`(v5) @signature `Le/c/b/a/d/h/c;.getCIAC_DeclineOnPPMS:()Le/c/a/a/c;` @kind virtual;
  #L163ad6.  v5:= temp @kind object;
  #L163ad8.  if v5 != 0 then goto L163ae0;
  #L163adc.  goto L163e02;
  #L163ae0.  v5:= -114I;
  #L163ae4.  if v2 != v5 then goto L163dea;
  #L163ae8.  v2:= -128I;
  #L163aec.  if v4 == v2 then goto L163af4;
  #L163af0.  goto L163dea;
  #L163af4.  v2:= 22I;
  #L163af8.  v4:= 16I;
  #L163afc.  if v9 == v2 then goto L163b1c;
  #L163b00.  if v9 == v4 then goto L163b1c;
  #L163b04.  call temp:= `cancelPayment`(v8) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.cancelPayment:()Le/c/b/a/e/e;` @kind virtual;
  #L163b0a.  v9:= v8.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L163b0e.  v0:= 26368I;
  #L163b12.  call temp:= `getFromWord`(v9, v0) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L163b18.  v9:= temp @kind object;
  #L163b1a.  return v9 @kind object;
  #L163b1c.  call temp:= `getTerminalType`(v0) @signature `Le/c/a/d/c/c/b;.getTerminalType:()B` @kind virtual;
  #L163b22.  v9:= temp;
  #L163b24.  call temp:= `isTerminalOffline`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.isTerminalOffline:(B)Z` @kind static;
  #L163b2a.  v9:= temp;
  #L163b2c.  if v9 == 0 then goto L163b44;
  #L163b30.  call temp:= `cancelPayment`(v8) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.cancelPayment:()Le/c/b/a/e/e;` @kind virtual;
  #L163b36.  v9:= v8.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L163b3a.  call temp:= `getFromWord`(v9, v7) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L163b40.  v9:= temp @kind object;
  #L163b42.  return v9 @kind object;
  #L163b44.  call `initCCCTransactionContext`(v8, v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.initCCCTransactionContext:(Le/c/a/d/c/c/b;)V` @kind virtual;
  #L163b4a.  v9:= v8.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L163b4e.  call temp:= `getByteArray`(v9, v3) @signature `Le/c/a/a/d;.getByteArray:(I)Le/c/a/a/c;` @kind virtual;
  #L163b54.  v9:= temp @kind object;
  #L163b56.  v2:= v8.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163b5a.  call temp:= `getClContext`(v2) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163b60.  v2:= temp @kind object;
  #L163b62.  call temp:= `isCvmEntered`(v2) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.isCvmEntered:()Z` @kind virtual;
  #L163b68.  v2:= temp;
  #L163b6a.  v3:= 1I;
  #L163b6c.  if v2 == 0 then goto L163b76;
  #L163b70.  call `setByte`(v9, v3, v4) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L163b76.  v2:= v8.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163b7a.  call temp:= `getClContext`(v2) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163b80.  v2:= temp @kind object;
  #L163b82.  call `setPOSCII`(v2, v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setPOSCII:(Le/c/a/a/c;)V` @kind virtual;
  #L163b88.  v9:= v8.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163b8c.  call temp:= `getClContext`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163b92.  v9:= temp @kind object;
  #L163b94.  call temp:= `getMerchantCategoryCode`(v0) @signature `Le/c/a/d/c/c/b;.getMerchantCategoryCode:()Le/c/a/a/c;` @kind virtual;
  #L163b9a.  v2:= temp @kind object;
  #L163b9c.  call `checkCCContext`(v8, v9, v2) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.checkCCContext:(Lcom/mastercard/mcbp/core/mpplite/states/a;Le/c/a/a/c;)V` @kind virtual;
  #L163ba2.  v9:= v8.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163ba6.  call temp:= `getProfile`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getProfile:()Le/c/b/a/d/h/e;` @kind virtual;
  #L163bac.  v9:= temp @kind object;
  #L163bae.  call temp:= `getCardRiskManagementData`(v9) @signature `Le/c/b/a/d/h/e;.getCardRiskManagementData:()Le/c/b/a/d/h/b;` @kind virtual;
  #L163bb4.  v2:= temp @kind object;
  #L163bb6.  call temp:= `getCRM_CountryCode`(v2) @signature `Le/c/b/a/d/h/b;.getCRM_CountryCode:()Le/c/a/a/c;` @kind virtual;
  #L163bbc.  v2:= temp @kind object;
  #L163bbe.  call temp:= `getTerminalCountryCode`(v0) @signature `Le/c/a/d/c/c/b;.getTerminalCountryCode:()Le/c/a/a/c;` @kind virtual;
  #L163bc4.  v4:= temp @kind object;
  #L163bc6.  call temp:= `isEqual`(v2, v4) @signature `Le/c/a/a/c;.isEqual:(Le/c/a/a/c;)Z` @kind interface;
  #L163bcc.  v2:= temp;
  #L163bce.  if v2 == 0 then goto L163c2e;
  #L163bd2.  v2:= v8.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L163bd6.  v4:= 512I;
  #L163bda.  call temp:= `getFromWord`(v2, v4) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L163be0.  v2:= temp @kind object;
  #L163be2.  call temp:= `getContactlessPaymentData`(v9) @signature `Le/c/b/a/d/h/e;.getContactlessPaymentData:()Le/c/b/a/d/h/c;` @kind virtual;
  #L163be8.  v9:= temp @kind object;
  #L163bea.  call temp:= `getCIAC_DeclineOnPPMS`(v9) @signature `Le/c/b/a/d/h/c;.getCIAC_DeclineOnPPMS:()Le/c/a/a/c;` @kind virtual;
  #L163bf0.  v9:= temp @kind object;
  #L163bf2.  call temp:= `bitWiseAnd`(v9, v2) @signature `Le/c/a/a/c;.bitWiseAnd:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L163bf8.  v9:= temp @kind object;
  #L163bfa.  call temp:= `isEqual`(v9, v2) @signature `Le/c/a/a/c;.isEqual:(Le/c/a/a/c;)Z` @kind interface;
  #L163c00.  v9:= temp;
  #L163c02.  if v9 == 0 then goto L163c8a;
  #L163c06.  v9:= v8.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163c0a.  call temp:= `getClContext`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163c10.  v9:= temp @kind object;
  #L163c12.  call temp:= `getTransactionContext`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L163c18.  v9:= temp @kind object;
  #L163c1a.  v1:= `@@e.c.b.a.d.c.i` @type ^`e.c.b.a.d.c` @kind object;
  #L163c1e.  call `setResult`(v9, v1) @signature `Le/c/b/a/d/b;.setResult:(Le/c/b/a/d/c;)V` @kind virtual;
  #L163c24.  call temp:= `a`(v8, v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.a:(Le/c/a/d/c/c/b;)Le/c/a/a/c;` @kind direct;
  #L163c2a.  v9:= temp @kind object;
  #L163c2c.  return v9 @kind object;
  #L163c2e.  v2:= v8.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L163c32.  v4:= 1024I;
  #L163c36.  call temp:= `getFromWord`(v2, v4) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L163c3c.  v2:= temp @kind object;
  #L163c3e.  call temp:= `getContactlessPaymentData`(v9) @signature `Le/c/b/a/d/h/e;.getContactlessPaymentData:()Le/c/b/a/d/h/c;` @kind virtual;
  #L163c44.  v9:= temp @kind object;
  #L163c46.  call temp:= `getCIAC_DeclineOnPPMS`(v9) @signature `Le/c/b/a/d/h/c;.getCIAC_DeclineOnPPMS:()Le/c/a/a/c;` @kind virtual;
  #L163c4c.  v9:= temp @kind object;
  #L163c4e.  call temp:= `bitWiseAnd`(v9, v2) @signature `Le/c/a/a/c;.bitWiseAnd:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L163c54.  v9:= temp @kind object;
  #L163c56.  call temp:= `isEqual`(v9, v2) @signature `Le/c/a/a/c;.isEqual:(Le/c/a/a/c;)Z` @kind interface;
  #L163c5c.  v9:= temp;
  #L163c5e.  if v9 == 0 then goto L163c8a;
  #L163c62.  v9:= v8.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163c66.  call temp:= `getClContext`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163c6c.  v9:= temp @kind object;
  #L163c6e.  call temp:= `getTransactionContext`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L163c74.  v9:= temp @kind object;
  #L163c76.  v1:= `@@e.c.b.a.d.c.i` @type ^`e.c.b.a.d.c` @kind object;
  #L163c7a.  call `setResult`(v9, v1) @signature `Le/c/b/a/d/b;.setResult:(Le/c/b/a/d/c;)V` @kind virtual;
  #L163c80.  call temp:= `a`(v8, v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.a:(Le/c/a/d/c/c/b;)Le/c/a/a/c;` @kind direct;
  #L163c86.  v9:= temp @kind object;
  #L163c88.  return v9 @kind object;
  #L163c8a.  v9:= v8.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163c8e.  call temp:= `getClContext`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163c94.  v9:= temp @kind object;
  #L163c96.  call temp:= `isCvmEntered`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.isCvmEntered:()Z` @kind virtual;
  #L163c9c.  v9:= temp;
  #L163c9e.  if v9 != 0 then goto L163d96;
  #L163ca2.  call temp:= `getMobileSupportIndicator`(v0) @signature `Le/c/a/d/c/c/b;.getMobileSupportIndicator:()Le/c/a/a/c;` @kind virtual;
  #L163ca8.  v9:= temp @kind object;
  #L163caa.  v2:= 0I;
  #L163cac.  call temp:= `getByte`(v9, v2) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L163cb2.  v9:= temp;
  #L163cb4.  v9:= v9 ^& v1 @kind int;
  #L163cb6.  if v9 != v1 then goto L163d1c;
  #L163cba.  v9:= v8.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163cbe.  call temp:= `getClContext`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163cc4.  v9:= temp @kind object;
  #L163cc6.  call temp:= `getTransactionContext`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L163ccc.  v9:= temp @kind object;
  #L163cce.  v1:= `@@e.c.b.a.d.c.h` @type ^`e.c.b.a.d.c` @kind object;
  #L163cd2.  call `setResult`(v9, v1) @signature `Le/c/b/a/d/b;.setResult:(Le/c/b/a/d/c;)V` @kind virtual;
  #L163cd8.  v9:= v8.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163cdc.  call temp:= `getClContext`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163ce2.  v9:= temp @kind object;
  #L163ce4.  call temp:= `getPOSCII`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getPOSCII:()Le/c/a/a/c;` @kind virtual;
  #L163cea.  v9:= temp @kind object;
  #L163cec.  call temp:= `getByte`(v9, v3) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L163cf2.  v9:= temp;
  #L163cf4.  v9:= v9 ^| v3 @kind int;
  #L163cf6.  v9:= (`byte`) v9 @kind i2b;
  #L163cf8.  v1:= v8.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163cfc.  call temp:= `getClContext`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163d02.  v1:= temp @kind object;
  #L163d04.  call temp:= `getPOSCII`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getPOSCII:()Le/c/a/a/c;` @kind virtual;
  #L163d0a.  v1:= temp @kind object;
  #L163d0c.  call `setByte`(v1, v3, v9) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L163d12.  call temp:= `a`(v8, v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.a:(Le/c/a/d/c/c/b;)Le/c/a/a/c;` @kind direct;
  #L163d18.  v9:= temp @kind object;
  #L163d1a.  return v9 @kind object;
  #L163d1c.  v9:= v8.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163d20.  call temp:= `getClContext`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163d26.  v9:= temp @kind object;
  #L163d28.  call temp:= `isCVMRequired`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.isCVMRequired:()Z` @kind virtual;
  #L163d2e.  v9:= temp;
  #L163d30.  if v9 == 0 then goto L163d96;
  #L163d34.  v9:= v8.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163d38.  call temp:= `getClContext`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163d3e.  v9:= temp @kind object;
  #L163d40.  call temp:= `getTransactionContext`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L163d46.  v9:= temp @kind object;
  #L163d48.  v1:= `@@e.c.b.a.d.c.h` @type ^`e.c.b.a.d.c` @kind object;
  #L163d4c.  call `setResult`(v9, v1) @signature `Le/c/b/a/d/b;.setResult:(Le/c/b/a/d/c;)V` @kind virtual;
  #L163d52.  v9:= v8.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163d56.  call temp:= `getClContext`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163d5c.  v9:= temp @kind object;
  #L163d5e.  call temp:= `getPOSCII`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getPOSCII:()Le/c/a/a/c;` @kind virtual;
  #L163d64.  v9:= temp @kind object;
  #L163d66.  call temp:= `getByte`(v9, v3) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L163d6c.  v9:= temp;
  #L163d6e.  v9:= v9 ^| v3 @kind int;
  #L163d70.  v9:= (`byte`) v9 @kind i2b;
  #L163d72.  v1:= v8.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163d76.  call temp:= `getClContext`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163d7c.  v1:= temp @kind object;
  #L163d7e.  call temp:= `getPOSCII`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getPOSCII:()Le/c/a/a/c;` @kind virtual;
  #L163d84.  v1:= temp @kind object;
  #L163d86.  call `setByte`(v1, v3, v9) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L163d8c.  call temp:= `a`(v8, v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.a:(Le/c/a/d/c/c/b;)Le/c/a/a/c;` @kind direct;
  #L163d92.  v9:= temp @kind object;
  #L163d94.  return v9 @kind object;
  #L163d96.  v9:= v8.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163d9a.  call temp:= `getClContext`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163da0.  v9:= temp @kind object;
  #L163da2.  call temp:= `getTransactionContext`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L163da8.  v9:= temp @kind object;
  #L163daa.  v1:= `@@e.c.b.a.d.c.i` @type ^`e.c.b.a.d.c` @kind object;
  #L163dae.  call `setResult`(v9, v1) @signature `Le/c/b/a/d/b;.setResult:(Le/c/b/a/d/c;)V` @kind virtual;
  #L163db4.  v9:= v8.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163db8.  call temp:= `getClContext`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163dbe.  v9:= temp @kind object;
  #L163dc0.  call temp:= `isOnlineAllowed`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.isOnlineAllowed:()Z` @kind virtual;
  #L163dc6.  v9:= temp;
  #L163dc8.  if v9 != 0 then goto L163dd6;
  #L163dcc.  call temp:= `a`(v8, v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.a:(Le/c/a/d/c/c/b;)Le/c/a/a/c;` @kind direct;
  #L163dd2.  v9:= temp @kind object;
  #L163dd4.  return v9 @kind object;
  #L163dd6.  call temp:= `b`(v8, v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.b:(Le/c/a/d/c/c/b;)Le/c/a/a/c;` @kind direct;
  #L163ddc.  v9:= temp @kind object;
  #L163dde.  return v9 @kind object;
  #L163de0.  call temp:= `a`(v8, v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.a:(Le/c/a/d/c/c/b;)Le/c/a/a/c;` @kind direct;
  #L163de6.  v9:= temp @kind object;
  #L163de8.  return v9 @kind object;
  #L163dea.  call temp:= `cancelPayment`(v8) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.cancelPayment:()Le/c/b/a/e/e;` @kind virtual;
  #L163df0.  v9:= v8.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L163df4.  v0:= 27270I;
  #L163df8.  call temp:= `getFromWord`(v9, v0) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L163dfe.  v9:= temp @kind object;
  #L163e00.  return v9 @kind object;
  #L163e02.  call temp:= `cancelPayment`(v8) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.cancelPayment:()Le/c/b/a/e/e;` @kind virtual;
  #L163e08.  v9:= v8.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L163e0c.  call temp:= `getFromWord`(v9, v7) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L163e12.  v9:= temp @kind object;
  #L163e14.  return v9 @kind object;
  catch `com.mastercard.mcbp.core.mpplite.states.DeclineException` @[L163b88..L163ba2] goto L163de0;
}
procedure `e.c.a.a.c` `processGPO`(`com.mastercard.mcbp.core.mpplite.states.b` v1 @kind this, `e.c.a.a.c` v2 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.processGPO:(Le/c/a/a/c;)Le/c/a/a/c;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L163e38.  v2:= v1.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L163e3c.  v0:= 27013I;
  #L163e40.  call temp:= `getFromWord`(v2, v0) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L163e46.  v2:= temp @kind object;
  #L163e48.  return v2 @kind object;
}
procedure `e.c.a.a.c` `processGenAC`(`com.mastercard.mcbp.core.mpplite.states.b` v10 @kind this, `e.c.a.a.c` v11 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.processGenAC:(Le/c/a/a/c;)Le/c/a/a/c;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L163e5c.  v0:= 2I;
  #L163e5e.  call temp:= `getByte`(v11, v0) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L163e64.  v1:= temp;
  #L163e66.  v2:= 3I;
  #L163e68.  call temp:= `getByte`(v11, v2) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L163e6e.  v3:= temp;
  #L163e70.  v4:= 4I;
  #L163e72.  call temp:= `getByte`(v11, v4) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L163e78.  v5:= temp;
  #L163e7a.  v5:= v5 ^& 255;
  #L163e7e.  v6:= v10.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163e82.  call temp:= `getProfile`(v6) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getProfile:()Le/c/b/a/d/h/e;` @kind virtual;
  #L163e88.  v6:= temp @kind object;
  #L163e8a.  v7:= v10.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163e8e.  call temp:= `getClContext`(v7) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163e94.  v7:= temp @kind object;
  #L163e96.  call temp:= `isAlternateAID`(v7) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.isAlternateAID:()Z` @kind virtual;
  #L163e9c.  v7:= temp;
  #L163e9e.  if v7 == 0 then goto L163f04;
  #L163ea2.  call temp:= `getContactlessPaymentData`(v6) @signature `Le/c/b/a/d/h/e;.getContactlessPaymentData:()Le/c/b/a/d/h/c;` @kind virtual;
  #L163ea8.  v7:= temp @kind object;
  #L163eaa.  call temp:= `getAlternateContactlessPaymentData`(v7) @signature `Le/c/b/a/d/h/c;.getAlternateContactlessPaymentData:()Le/c/b/a/d/h/a;` @kind virtual;
  #L163eb0.  v7:= temp @kind object;
  #L163eb2.  v8:= new `e.c.b.a.d.h.c`;
  #L163eb6.  call `<init>`(v8) @signature `Le/c/b/a/d/h/c;.<init>:()V` @kind direct;
  #L163ebc.  call temp:= `getAID`(v7) @signature `Le/c/b/a/d/h/a;.getAID:()Le/c/a/a/c;` @kind virtual;
  #L163ec2.  v9:= temp @kind object;
  #L163ec4.  call `setAID`(v8, v9) @signature `Le/c/b/a/d/h/c;.setAID:(Le/c/a/a/c;)V` @kind virtual;
  #L163eca.  call temp:= `getPaymentFCI`(v7) @signature `Le/c/b/a/d/h/a;.getPaymentFCI:()Le/c/a/a/c;` @kind virtual;
  #L163ed0.  v9:= temp @kind object;
  #L163ed2.  call `setPaymentFCI`(v8, v9) @signature `Le/c/b/a/d/h/c;.setPaymentFCI:(Le/c/a/a/c;)V` @kind virtual;
  #L163ed8.  call temp:= `getGPO_Response`(v7) @signature `Le/c/b/a/d/h/a;.getGPO_Response:()Le/c/a/a/c;` @kind virtual;
  #L163ede.  v9:= temp @kind object;
  #L163ee0.  call `setGPO_Response`(v8, v9) @signature `Le/c/b/a/d/h/c;.setGPO_Response:(Le/c/a/a/c;)V` @kind virtual;
  #L163ee6.  call temp:= `getCVR_MaskAnd`(v7) @signature `Le/c/b/a/d/h/a;.getCVR_MaskAnd:()Le/c/a/a/c;` @kind virtual;
  #L163eec.  v9:= temp @kind object;
  #L163eee.  call `setCVR_MaskAnd`(v8, v9) @signature `Le/c/b/a/d/h/c;.setCVR_MaskAnd:(Le/c/a/a/c;)V` @kind virtual;
  #L163ef4.  call temp:= `getCIAC_Decline`(v7) @signature `Le/c/b/a/d/h/a;.getCIAC_Decline:()Le/c/a/a/c;` @kind virtual;
  #L163efa.  v7:= temp @kind object;
  #L163efc.  call `setCIAC_Decline`(v8, v7) @signature `Le/c/b/a/d/h/c;.setCIAC_Decline:(Le/c/a/a/c;)V` @kind virtual;
  #L163f02.  goto L163f0c;
  #L163f04.  call temp:= `getContactlessPaymentData`(v6) @signature `Le/c/b/a/d/h/e;.getContactlessPaymentData:()Le/c/b/a/d/h/c;` @kind virtual;
  #L163f0a.  v8:= temp @kind object;
  #L163f0c.  call temp:= `a`(v10, v6) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.a:(Le/c/b/a/d/h/e;)Z` @kind direct;
  #L163f12.  v7:= temp;
  #L163f14.  v9:= 27013I;
  #L163f18.  if v7 != 0 then goto L163f5e;
  #L163f1c.  call temp:= `cancelPayment`(v10) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.cancelPayment:()Le/c/b/a/e/e;` @kind virtual;
  #L163f22.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163f26.  call temp:= `getClContext`(v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163f2c.  v11:= temp @kind object;
  #L163f2e.  call temp:= `getTransactionListener`(v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionListener:()Le/c/b/a/e/a;` @kind virtual;
  #L163f34.  v11:= temp @kind object;
  #L163f36.  v0:= v10.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163f3a.  call temp:= `getClContext`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163f40.  v0:= temp @kind object;
  #L163f42.  call temp:= `getTransactionContext`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L163f48.  v0:= temp @kind object;
  #L163f4a.  call `onContactlessTransactionCompleted`(v11, v0) @signature `Le/c/b/a/e/a;.onContactlessTransactionCompleted:(Le/c/b/a/d/b;)V` @kind interface;
  #L163f50.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L163f54.  call temp:= `getFromWord`(v11, v9) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L163f5a.  v11:= temp @kind object;
  #L163f5c.  return v11 @kind object;
  #L163f5e.  v7:= v1 ^& 47;
  #L163f62.  if v7 != 0 then goto L1643a6;
  #L163f66.  if v3 != 0 then goto L1643a6;
  #L163f6a.  v3:= v1 ^& 192;
  #L163f6e.  v7:= 192I;
  #L163f72.  if v3 != v7 then goto L163f7a;
  #L163f76.  goto L1643a6;
  #L163f7a.  if v5 == 0 then goto L16438e;
  #L163f7e.  call temp:= `getLength`(v11) @signature `Le/c/a/a/c;.getLength:()I` @kind interface;
  #L163f84.  v3:= temp;
  #L163f86.  v3:= v3 + -6;
  #L163f8a.  if v3 == v5 then goto L163f92;
  #L163f8e.  goto L16438e;
  #L163f92.  v3:= new `e.c.a.d.c.c.d`;
  #L163f96.  call `<init>`(v3, v11) @signature `Le/c/a/d/c/c/d;.<init>:(Le/c/a/a/c;)V` @kind direct;
  #L163f9c.  call temp:= `getTerminalType`(v3) @signature `Le/c/a/d/c/c/d;.getTerminalType:()B` @kind virtual;
  #L163fa2.  v11:= temp;
  #L163fa4.  call temp:= `isTerminalOffline`(v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.isTerminalOffline:(B)Z` @kind static;
  #L163faa.  v11:= temp;
  #L163fac.  if v11 == 0 then goto L163fc4;
  #L163fb0.  call temp:= `cancelPayment`(v10) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.cancelPayment:()Le/c/b/a/e/e;` @kind virtual;
  #L163fb6.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L163fba.  call temp:= `getFromWord`(v11, v9) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L163fc0.  v11:= temp @kind object;
  #L163fc2.  return v11 @kind object;
  #L163fc4.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163fc8.  call temp:= `getCredentials`(v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getCredentials:()Le/c/b/a/e/f;` @kind virtual;
  #L163fce.  v11:= temp @kind object;
  #L163fd0.  v5:= v10.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L163fd4.  call temp:= `getClContext`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L163fda.  v5:= temp @kind object;
  #L163fdc.  call temp:= `getTransactionContext`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L163fe2.  v5:= temp @kind object;
  #L163fe4.  call `a`(v10, v3, v11, v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.a:(Le/c/a/d/c/c/d;Le/c/b/a/e/f;Le/c/b/a/d/b;)V` @kind direct;
  #L163fea.  call `a`(v10) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.a:()V` @kind direct;
  #L163ff0.  call temp:= `getContactlessPaymentData`(v6) @signature `Le/c/b/a/d/h/e;.getContactlessPaymentData:()Le/c/b/a/d/h/c;` @kind virtual;
  #L163ff6.  v11:= temp @kind object;
  #L163ff8.  call temp:= `getIssuerApplicationData`(v11) @signature `Le/c/b/a/d/h/c;.getIssuerApplicationData:()Le/c/a/a/c;` @kind virtual;
  #L163ffe.  v11:= temp @kind object;
  #L164000.  call temp:= `clone`(v11) @signature `Le/c/a/a/c;.clone:()Le/c/a/a/c;` @kind interface;
  #L164006.  v11:= temp @kind object;
  #L164008.  v5:= 8I;
  #L16400c.  call temp:= `copyOfRange`(v11, v0, v5) @signature `Le/c/a/a/c;.copyOfRange:(II)Le/c/a/a/c;` @kind interface;
  #L164012.  v11:= temp @kind object;
  #L164014.  v10.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` := v11 @kind object;
  #L164018.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` @kind object;
  #L16401c.  call temp:= `getByte`(v11, v2) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L164022.  v11:= temp;
  #L164024.  call temp:= `getCardRiskManagementData`(v6) @signature `Le/c/b/a/d/h/e;.getCardRiskManagementData:()Le/c/b/a/d/h/b;` @kind virtual;
  #L16402a.  v7:= temp @kind object;
  #L16402c.  call temp:= `getCRM_CountryCode`(v7) @signature `Le/c/b/a/d/h/b;.getCRM_CountryCode:()Le/c/a/a/c;` @kind virtual;
  #L164032.  v7:= temp @kind object;
  #L164034.  call temp:= `getTerminalCountryCode`(v3) @signature `Le/c/a/d/c/c/d;.getTerminalCountryCode:()Le/c/a/a/c;` @kind virtual;
  #L16403a.  v9:= temp @kind object;
  #L16403c.  call temp:= `isEqual`(v7, v9) @signature `Le/c/a/a/c;.isEqual:(Le/c/a/a/c;)Z` @kind interface;
  #L164042.  v7:= temp;
  #L164044.  if v7 == 0 then goto L164058;
  #L164048.  v7:= v10.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` @kind object;
  #L16404c.  v11:= v11 ^| v0 @kind int;
  #L16404e.  v11:= (`byte`) v11 @kind i2b;
  #L164050.  call `setByte`(v7, v2, v11) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L164056.  goto L164066;
  #L164058.  v7:= v10.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` @kind object;
  #L16405c.  v11:= v11 ^| v4 @kind int;
  #L16405e.  v11:= (`byte`) v11 @kind i2b;
  #L164060.  call `setByte`(v7, v2, v11) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L164066.  call temp:= `getCVR_MaskAnd`(v8) @signature `Le/c/b/a/d/h/c;.getCVR_MaskAnd:()Le/c/a/a/c;` @kind virtual;
  #L16406c.  v11:= temp @kind object;
  #L16406e.  v7:= 5I;
  #L164070.  call temp:= `getByte`(v11, v7) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L164076.  v11:= temp;
  #L164078.  v11:= v11 ^& v2 @kind int;
  #L16407a.  if v11 != 0 then goto L164094;
  #L16407e.  call temp:= `getCIAC_Decline`(v8) @signature `Le/c/b/a/d/h/c;.getCIAC_Decline:()Le/c/a/a/c;` @kind virtual;
  #L164084.  v11:= temp @kind object;
  #L164086.  call temp:= `getByte`(v11, v0) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L16408c.  v11:= temp;
  #L16408e.  v11:= v11 ^& v2 @kind int;
  #L164090.  if v11 == 0 then goto L1640b6;
  #L164094.  call temp:= `getCDOL`(v3) @signature `Le/c/a/d/c/c/d;.getCDOL:()Le/c/a/a/c;` @kind virtual;
  #L16409a.  v11:= temp @kind object;
  #L16409c.  call temp:= `getCardRiskManagementData`(v6) @signature `Le/c/b/a/d/h/e;.getCardRiskManagementData:()Le/c/b/a/d/h/b;` @kind virtual;
  #L1640a2.  v6:= temp @kind object;
  #L1640a4.  call temp:= `getAdditionalCheckTable`(v6) @signature `Le/c/b/a/d/h/b;.getAdditionalCheckTable:()Le/c/a/a/c;` @kind virtual;
  #L1640aa.  v6:= temp @kind object;
  #L1640ac.  v9:= v10.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` @kind object;
  #L1640b0.  call `processAddCheckTable`(v11, v6, v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/f;.processAddCheckTable:(Le/c/a/a/c;Le/c/a/a/c;Le/c/a/a/c;)V` @kind static;
  #L1640b6.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` @kind object;
  #L1640ba.  v6:= 0I;
  #L1640bc.  call temp:= `getByte`(v11, v6) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L1640c2.  v11:= temp;
  #L1640c4.  v9:= v10.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L1640c8.  call temp:= `getClContext`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L1640ce.  v9:= temp @kind object;
  #L1640d0.  call temp:= `isCvmEntered`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.isCvmEntered:()Z` @kind virtual;
  #L1640d6.  v9:= temp;
  #L1640d8.  if v9 == 0 then goto L1640ec;
  #L1640dc.  v9:= v10.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` @kind object;
  #L1640e0.  v11:= v11 ^| v7 @kind int;
  #L1640e2.  v11:= (`byte`) v11 @kind i2b;
  #L1640e4.  call `setByte`(v9, v6, v11) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L1640ea.  goto L1640fc;
  #L1640ec.  v9:= v10.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` @kind object;
  #L1640f0.  v11:= v11 ^| 32;
  #L1640f4.  v11:= (`byte`) v11 @kind i2b;
  #L1640f6.  call `setByte`(v9, v2, v11) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L1640fc.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164100.  call temp:= `getClContext`(v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L164106.  v11:= temp @kind object;
  #L164108.  call temp:= `getMerchantCategoryCode`(v3) @signature `Le/c/a/d/c/c/d;.getMerchantCategoryCode:()Le/c/a/a/c;` @kind virtual;
  #L16410e.  v9:= temp @kind object;
  #L164110.  call `a`(v10, v11, v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.a:(Lcom/mastercard/mcbp/core/mpplite/states/a;Le/c/a/a/c;)V` @kind direct;
  #L164116.  v11:= v1 ^& -64;
  #L16411a.  v11:= (`byte`) v11 @kind i2b;
  #L16411c.  if v11 != 0 then goto L164166;
  #L164120.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164124.  call temp:= `getClContext`(v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L16412a.  v11:= temp @kind object;
  #L16412c.  call temp:= `getTransactionContext`(v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L164132.  v11:= temp @kind object;
  #L164134.  v0:= `@@e.c.b.a.d.c.g` @type ^`e.c.b.a.d.c` @kind object;
  #L164138.  call `setResult`(v11, v0) @signature `Le/c/b/a/d/b;.setResult:(Le/c/b/a/d/c;)V` @kind virtual;
  #L16413e.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164142.  call temp:= `getClContext`(v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L164148.  v11:= temp @kind object;
  #L16414a.  v0:= v10.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L16414e.  call temp:= `getByteArray`(v0, v2) @signature `Le/c/a/a/d;.getByteArray:(I)Le/c/a/a/c;` @kind virtual;
  #L164154.  v0:= temp @kind object;
  #L164156.  call `setPOSCII`(v11, v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setPOSCII:(Le/c/a/a/c;)V` @kind virtual;
  #L16415c.  call temp:= `a`(v10, v3) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.a:(Le/c/a/d/c/c/d;)Le/c/a/a/c;` @kind direct;
  #L164162.  v11:= temp @kind object;
  #L164164.  return v11 @kind object;
  #L164166.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` @kind object;
  #L16416a.  call temp:= `copyOfRange`(v11, v2, v7) @signature `Le/c/a/a/c;.copyOfRange:(II)Le/c/a/a/c;` @kind interface;
  #L164170.  v11:= temp @kind object;
  #L164172.  call temp:= `getCIAC_Decline`(v8) @signature `Le/c/b/a/d/h/c;.getCIAC_Decline:()Le/c/a/a/c;` @kind virtual;
  #L164178.  v1:= temp @kind object;
  #L16417a.  call temp:= `bitWiseAnd`(v11, v1) @signature `Le/c/a/a/c;.bitWiseAnd:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L164180.  v11:= temp @kind object;
  #L164182.  call temp:= `isZero`(v11) @signature `Le/c/a/d/b;.isZero:(Le/c/a/a/c;)Z` @kind static;
  #L164188.  v11:= temp;
  #L16418a.  if v11 != 0 then goto L1641d4;
  #L16418e.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164192.  call temp:= `getClContext`(v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L164198.  v11:= temp @kind object;
  #L16419a.  call temp:= `getTransactionContext`(v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L1641a0.  v11:= temp @kind object;
  #L1641a2.  v0:= `@@e.c.b.a.d.c.g` @type ^`e.c.b.a.d.c` @kind object;
  #L1641a6.  call `setResult`(v11, v0) @signature `Le/c/b/a/d/b;.setResult:(Le/c/b/a/d/c;)V` @kind virtual;
  #L1641ac.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L1641b0.  call temp:= `getClContext`(v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L1641b6.  v11:= temp @kind object;
  #L1641b8.  v0:= v10.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L1641bc.  call temp:= `getByteArray`(v0, v2) @signature `Le/c/a/a/d;.getByteArray:(I)Le/c/a/a/c;` @kind virtual;
  #L1641c2.  v0:= temp @kind object;
  #L1641c4.  call `setPOSCII`(v11, v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setPOSCII:(Le/c/a/a/c;)V` @kind virtual;
  #L1641ca.  call temp:= `a`(v10, v3) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.a:(Le/c/a/d/c/c/d;)Le/c/a/a/c;` @kind direct;
  #L1641d0.  v11:= temp @kind object;
  #L1641d2.  return v11 @kind object;
  #L1641d4.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L1641d8.  call temp:= `getClContext`(v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L1641de.  v11:= temp @kind object;
  #L1641e0.  call temp:= `isCvmEntered`(v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.isCvmEntered:()Z` @kind virtual;
  #L1641e6.  v11:= temp;
  #L1641e8.  if v11 != 0 then goto L16431c;
  #L1641ec.  call temp:= `getCvmResults`(v3) @signature `Le/c/a/d/c/c/d;.getCvmResults:()Le/c/a/a/c;` @kind virtual;
  #L1641f2.  v11:= temp @kind object;
  #L1641f4.  call temp:= `getByte`(v11, v6) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L1641fa.  v1:= temp;
  #L1641fc.  v1:= v1 ^& 63;
  #L164200.  v1:= (`byte`) v1 @kind i2b;
  #L164202.  v8:= 1I;
  #L164204.  if v1 == v8 then goto L16420c;
  #L164208.  if v1 != v4 then goto L16421a;
  #L16420c.  call temp:= `getByte`(v11, v0) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L164212.  v11:= temp;
  #L164214.  if v11 != v0 then goto L16421a;
  #L164218.  v6:= 1I;
  #L16421a.  if v6 == 0 then goto L16429e;
  #L16421e.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` @kind object;
  #L164222.  call temp:= `getByte`(v11, v2) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L164228.  v11:= temp;
  #L16422a.  v0:= v10.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` @kind object;
  #L16422e.  v11:= v11 ^| v8 @kind int;
  #L164230.  v11:= (`byte`) v11 @kind i2b;
  #L164232.  call `setByte`(v0, v2, v11) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L164238.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` @kind object;
  #L16423c.  call temp:= `getByte`(v11, v7) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L164242.  v11:= temp;
  #L164244.  v0:= v10.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` @kind object;
  #L164248.  v11:= v11 ^| v5 @kind int;
  #L16424a.  v11:= (`byte`) v11 @kind i2b;
  #L16424c.  call `setByte`(v0, v7, v11) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L164252.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164256.  call temp:= `getClContext`(v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L16425c.  v11:= temp @kind object;
  #L16425e.  call temp:= `getTransactionContext`(v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L164264.  v11:= temp @kind object;
  #L164266.  v0:= `@@e.c.b.a.d.c.f` @type ^`e.c.b.a.d.c` @kind object;
  #L16426a.  call `setResult`(v11, v0) @signature `Le/c/b/a/d/b;.setResult:(Le/c/b/a/d/c;)V` @kind virtual;
  #L164270.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L164274.  call temp:= `getByteArray`(v11, v2) @signature `Le/c/a/a/d;.getByteArray:(I)Le/c/a/a/c;` @kind virtual;
  #L16427a.  v11:= temp @kind object;
  #L16427c.  call `setByte`(v11, v8, v8) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L164282.  v0:= v10.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164286.  call temp:= `getClContext`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L16428c.  v0:= temp @kind object;
  #L16428e.  call `setPOSCII`(v0, v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setPOSCII:(Le/c/a/a/c;)V` @kind virtual;
  #L164294.  call temp:= `a`(v10, v3) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.a:(Le/c/a/d/c/c/d;)Le/c/a/a/c;` @kind direct;
  #L16429a.  v11:= temp @kind object;
  #L16429c.  return v11 @kind object;
  #L16429e.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L1642a2.  call temp:= `getClContext`(v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L1642a8.  v11:= temp @kind object;
  #L1642aa.  call temp:= `isCVMRequired`(v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.isCVMRequired:()Z` @kind virtual;
  #L1642b0.  v11:= temp;
  #L1642b2.  if v11 == 0 then goto L16431c;
  #L1642b6.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` @kind object;
  #L1642ba.  call temp:= `getByte`(v11, v7) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L1642c0.  v11:= temp;
  #L1642c2.  v0:= v10.`com.mastercard.mcbp.core.mpplite.states.b.e` @type ^`e.c.a.a.c` @kind object;
  #L1642c6.  v11:= v11 ^| v5 @kind int;
  #L1642c8.  v11:= (`byte`) v11 @kind i2b;
  #L1642ca.  call `setByte`(v0, v7, v11) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L1642d0.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L1642d4.  call temp:= `getClContext`(v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L1642da.  v11:= temp @kind object;
  #L1642dc.  call temp:= `getTransactionContext`(v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L1642e2.  v11:= temp @kind object;
  #L1642e4.  v0:= `@@e.c.b.a.d.c.f` @type ^`e.c.b.a.d.c` @kind object;
  #L1642e8.  call `setResult`(v11, v0) @signature `Le/c/b/a/d/b;.setResult:(Le/c/b/a/d/c;)V` @kind virtual;
  #L1642ee.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L1642f2.  call temp:= `getByteArray`(v11, v2) @signature `Le/c/a/a/d;.getByteArray:(I)Le/c/a/a/c;` @kind virtual;
  #L1642f8.  v11:= temp @kind object;
  #L1642fa.  call `setByte`(v11, v8, v8) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L164300.  v0:= v10.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164304.  call temp:= `getClContext`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L16430a.  v0:= temp @kind object;
  #L16430c.  call `setPOSCII`(v0, v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setPOSCII:(Le/c/a/a/c;)V` @kind virtual;
  #L164312.  call temp:= `a`(v10, v3) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.a:(Le/c/a/d/c/c/d;)Le/c/a/a/c;` @kind direct;
  #L164318.  v11:= temp @kind object;
  #L16431a.  return v11 @kind object;
  #L16431c.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164320.  call temp:= `getClContext`(v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L164326.  v11:= temp @kind object;
  #L164328.  call temp:= `getTransactionContext`(v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L16432e.  v11:= temp @kind object;
  #L164330.  v0:= `@@e.c.b.a.d.c.g` @type ^`e.c.b.a.d.c` @kind object;
  #L164334.  call `setResult`(v11, v0) @signature `Le/c/b/a/d/b;.setResult:(Le/c/b/a/d/c;)V` @kind virtual;
  #L16433a.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L16433e.  call temp:= `getClContext`(v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L164344.  v11:= temp @kind object;
  #L164346.  call temp:= `isOnlineAllowed`(v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.isOnlineAllowed:()Z` @kind virtual;
  #L16434c.  v11:= temp;
  #L16434e.  if v11 != 0 then goto L16437a;
  #L164352.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164356.  call temp:= `getClContext`(v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L16435c.  v11:= temp @kind object;
  #L16435e.  v0:= v10.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L164362.  call temp:= `getByteArray`(v0, v2) @signature `Le/c/a/a/d;.getByteArray:(I)Le/c/a/a/c;` @kind virtual;
  #L164368.  v0:= temp @kind object;
  #L16436a.  call `setPOSCII`(v11, v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setPOSCII:(Le/c/a/a/c;)V` @kind virtual;
  #L164370.  call temp:= `a`(v10, v3) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.a:(Le/c/a/d/c/c/d;)Le/c/a/a/c;` @kind direct;
  #L164376.  v11:= temp @kind object;
  #L164378.  return v11 @kind object;
  #L16437a.  call temp:= `c`(v10, v3) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.c:(Le/c/a/d/c/c/d;)Le/c/a/a/c;` @kind direct;
  #L164380.  v11:= temp @kind object;
  #L164382.  return v11 @kind object;
  #L164384.  call temp:= `a`(v10, v3) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.a:(Le/c/a/d/c/c/d;)Le/c/a/a/c;` @kind direct;
  #L16438a.  v11:= temp @kind object;
  #L16438c.  return v11 @kind object;
  #L16438e.  call temp:= `cancelPayment`(v10) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.cancelPayment:()Le/c/b/a/e/e;` @kind virtual;
  #L164394.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L164398.  v0:= 26368I;
  #L16439c.  call temp:= `getFromWord`(v11, v0) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L1643a2.  v11:= temp @kind object;
  #L1643a4.  return v11 @kind object;
  #L1643a6.  call temp:= `cancelPayment`(v10) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.cancelPayment:()Le/c/b/a/e/e;` @kind virtual;
  #L1643ac.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L1643b0.  call temp:= `getClContext`(v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L1643b6.  v11:= temp @kind object;
  #L1643b8.  call temp:= `getTransactionListener`(v11) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionListener:()Le/c/b/a/e/a;` @kind virtual;
  #L1643be.  v11:= temp @kind object;
  #L1643c0.  v0:= v10.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L1643c4.  call temp:= `getClContext`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L1643ca.  v0:= temp @kind object;
  #L1643cc.  call temp:= `getTransactionContext`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getTransactionContext:()Le/c/b/a/d/b;` @kind virtual;
  #L1643d2.  v0:= temp @kind object;
  #L1643d4.  call `onContactlessTransactionCompleted`(v11, v0) @signature `Le/c/b/a/e/a;.onContactlessTransactionCompleted:(Le/c/b/a/d/b;)V` @kind interface;
  #L1643da.  v11:= v10.`com.mastercard.mcbp.core.mpplite.states.b.c` @type ^`e.c.a.a.d` @kind object;
  #L1643de.  v0:= 27270I;
  #L1643e2.  call temp:= `getFromWord`(v11, v0) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L1643e8.  v11:= temp @kind object;
  #L1643ea.  return v11 @kind object;
  catch `com.mastercard.mcbp.core.mpplite.states.AACException` @[L1640fc..L164116] goto L164384;
}
procedure `e.c.a.a.c` `processReadRecord`(`com.mastercard.mcbp.core.mpplite.states.b` v0 @kind this, `e.c.a.a.c` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.processReadRecord:(Le/c/a/a/c;)Le/c/a/a/c;` @AccessFlag PROTECTED {
    temp;

  #L16440c.  call temp:= `readRecord`(v0, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.readRecord:(Le/c/a/a/c;)Le/c/a/a/c;` @kind virtual;
  #L164412.  v1:= temp @kind object;
  #L164414.  return v1 @kind object;
}
