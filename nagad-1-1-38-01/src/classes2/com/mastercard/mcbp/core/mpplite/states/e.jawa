record `com.mastercard.mcbp.core.mpplite.states.e` @kind class @AccessFlag PUBLIC extends `com.mastercard.mcbp.core.mpplite.states.d` @kind class {
}
procedure `void` `<init>`(`com.mastercard.mcbp.core.mpplite.states.e` v0 @kind this, `com.mastercard.mcbp.core.mpplite.states.h` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/e;.<init>:(Lcom/mastercard/mcbp/core/mpplite/states/h;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L16517c.  call `<init>`(v0, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.<init>:(Lcom/mastercard/mcbp/core/mpplite/states/h;)V` @kind direct;
  #L165182.  return @kind void;
}
procedure `e.c.a.a.c` `processComputeCC`(`com.mastercard.mcbp.core.mpplite.states.e` v1 @kind this, `e.c.a.a.c` v2 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/e;.processComputeCC:(Le/c/a/a/c;)Le/c/a/a/c;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L164dac.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L164db2.  v2:= temp @kind object;
  #L164db4.  v0:= 27013I;
  #L164db8.  call temp:= `getFromWord`(v2, v0) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L164dbe.  v2:= temp @kind object;
  #L164dc0.  return v2 @kind object;
}
procedure `e.c.a.a.c` `processGPO`(`com.mastercard.mcbp.core.mpplite.states.e` v9 @kind this, `e.c.a.a.c` v10 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/e;.processGPO:(Le/c/a/a/c;)Le/c/a/a/c;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L164dd4.  v0:= 2I;
  #L164dd6.  call temp:= `getByte`(v10, v0) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L164ddc.  v0:= temp;
  #L164dde.  v1:= 3I;
  #L164de0.  call temp:= `getByte`(v10, v1) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L164de6.  v2:= temp;
  #L164de8.  v3:= 4I;
  #L164dea.  call temp:= `getByte`(v10, v3) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L164df0.  v4:= temp;
  #L164df2.  v4:= v4 ^& 255;
  #L164df6.  if v0 != 0 then goto L165112;
  #L164dfa.  if v2 == 0 then goto L164e02;
  #L164dfe.  goto L165112;
  #L164e02.  v0:= v9.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164e06.  call temp:= `getClContext`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L164e0c.  v0:= temp @kind object;
  #L164e0e.  v2:= -125I;
  #L164e12.  v5:= 5I;
  #L164e14.  v6:= 7I;
  #L164e16.  v7:= 27013I;
  #L164e1a.  v8:= 6I;
  #L164e1c.  if v4 != v1 then goto L164ee2;
  #L164e20.  call temp:= `getByte`(v10, v5) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L164e26.  v1:= temp;
  #L164e28.  if v1 != v2 then goto L164ed0;
  #L164e2c.  call temp:= `getByte`(v10, v8) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L164e32.  v1:= temp;
  #L164e34.  v2:= 1I;
  #L164e36.  if v1 == v2 then goto L164e3c;
  #L164e3a.  goto L164ed0;
  #L164e3c.  call temp:= `getByte`(v10, v6) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L164e42.  v10:= temp;
  #L164e44.  call temp:= `isAlternateAID`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.isAlternateAID:()Z` @kind virtual;
  #L164e4a.  v1:= temp;
  #L164e4c.  if v1 == 0 then goto L164e84;
  #L164e50.  v1:= v9.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164e54.  call temp:= `getProfile`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getProfile:()Le/c/b/a/d/h/e;` @kind virtual;
  #L164e5a.  v1:= temp @kind object;
  #L164e5c.  call temp:= `getContactlessPaymentData`(v1) @signature `Le/c/b/a/d/h/e;.getContactlessPaymentData:()Le/c/b/a/d/h/c;` @kind virtual;
  #L164e62.  v1:= temp @kind object;
  #L164e64.  call temp:= `getAlternateContactlessPaymentData`(v1) @signature `Le/c/b/a/d/h/c;.getAlternateContactlessPaymentData:()Le/c/b/a/d/h/a;` @kind virtual;
  #L164e6a.  v1:= temp @kind object;
  #L164e6c.  call temp:= `getGPO_Response`(v1) @signature `Le/c/b/a/d/h/a;.getGPO_Response:()Le/c/a/a/c;` @kind virtual;
  #L164e72.  v1:= temp @kind object;
  #L164e74.  call temp:= `copyOfRange`(v1, v3, v8) @signature `Le/c/a/a/c;.copyOfRange:(II)Le/c/a/a/c;` @kind interface;
  #L164e7a.  v1:= temp @kind object;
  #L164e7c.  call `setAIP`(v0, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setAIP:(Le/c/a/a/c;)V` @kind virtual;
  #L164e82.  goto L164eae;
  #L164e84.  v1:= v9.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164e88.  call temp:= `getProfile`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getProfile:()Le/c/b/a/d/h/e;` @kind virtual;
  #L164e8e.  v1:= temp @kind object;
  #L164e90.  call temp:= `getContactlessPaymentData`(v1) @signature `Le/c/b/a/d/h/e;.getContactlessPaymentData:()Le/c/b/a/d/h/c;` @kind virtual;
  #L164e96.  v1:= temp @kind object;
  #L164e98.  call temp:= `getGPO_Response`(v1) @signature `Le/c/b/a/d/h/c;.getGPO_Response:()Le/c/a/a/c;` @kind virtual;
  #L164e9e.  v1:= temp @kind object;
  #L164ea0.  call temp:= `copyOfRange`(v1, v3, v8) @signature `Le/c/a/a/c;.copyOfRange:(II)Le/c/a/a/c;` @kind interface;
  #L164ea6.  v1:= temp @kind object;
  #L164ea8.  call `setAIP`(v0, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setAIP:(Le/c/a/a/c;)V` @kind virtual;
  #L164eae.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L164eb4.  v1:= temp @kind object;
  #L164eb6.  call temp:= `getByteArray`(v1, v2) @signature `Le/c/a/a/d;.getByteArray:(I)Le/c/a/a/c;` @kind virtual;
  #L164ebc.  v1:= temp @kind object;
  #L164ebe.  v2:= 0I;
  #L164ec0.  call `setByte`(v1, v2, v10) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L164ec6.  call `setPDOL`(v0, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setPDOL:(Le/c/a/a/c;)V` @kind virtual;
  #L164ecc.  goto L165012;
  #L164ed0.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L164ed6.  v10:= temp @kind object;
  #L164ed8.  call temp:= `getFromWord`(v10, v7) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L164ede.  v10:= temp @kind object;
  #L164ee0.  return v10 @kind object;
  #L164ee2.  v1:= 13I;
  #L164ee6.  if v4 != v1 then goto L1650fc;
  #L164eea.  call temp:= `getByte`(v10, v5) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L164ef0.  v1:= temp;
  #L164ef2.  if v1 != v2 then goto L1650ea;
  #L164ef6.  call temp:= `getByte`(v10, v8) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L164efc.  v1:= temp;
  #L164efe.  v2:= 11I;
  #L164f02.  if v1 == v2 then goto L164f0a;
  #L164f06.  goto L1650ea;
  #L164f0a.  v1:= 17I;
  #L164f0e.  call temp:= `getByte`(v10, v1) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L164f14.  v3:= temp;
  #L164f16.  call temp:= `copyOfRange`(v10, v6, v1) @signature `Le/c/a/a/c;.copyOfRange:(II)Le/c/a/a/c;` @kind interface;
  #L164f1c.  v1:= temp @kind object;
  #L164f1e.  v4:= 15I;
  #L164f22.  v5:= 16I;
  #L164f26.  call temp:= `copyOfRange`(v10, v4, v5) @signature `Le/c/a/a/c;.copyOfRange:(II)Le/c/a/a/c;` @kind interface;
  #L164f2c.  v4:= temp @kind object;
  #L164f2e.  call temp:= `isAlternateAID`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.isAlternateAID:()Z` @kind virtual;
  #L164f34.  v5:= temp;
  #L164f36.  v8:= 9I;
  #L164f3a.  if v5 == 0 then goto L164f72;
  #L164f3e.  v5:= v9.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164f42.  call temp:= `getProfile`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getProfile:()Le/c/b/a/d/h/e;` @kind virtual;
  #L164f48.  v5:= temp @kind object;
  #L164f4a.  call temp:= `getContactlessPaymentData`(v5) @signature `Le/c/b/a/d/h/e;.getContactlessPaymentData:()Le/c/b/a/d/h/c;` @kind virtual;
  #L164f50.  v5:= temp @kind object;
  #L164f52.  call temp:= `getAlternateContactlessPaymentData`(v5) @signature `Le/c/b/a/d/h/c;.getAlternateContactlessPaymentData:()Le/c/b/a/d/h/a;` @kind virtual;
  #L164f58.  v5:= temp @kind object;
  #L164f5a.  call temp:= `getGPO_Response`(v5) @signature `Le/c/b/a/d/h/a;.getGPO_Response:()Le/c/a/a/c;` @kind virtual;
  #L164f60.  v5:= temp @kind object;
  #L164f62.  call temp:= `copyOfRange`(v5, v8, v2) @signature `Le/c/a/a/c;.copyOfRange:(II)Le/c/a/a/c;` @kind interface;
  #L164f68.  v2:= temp @kind object;
  #L164f6a.  call `setAIP`(v0, v2) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setAIP:(Le/c/a/a/c;)V` @kind virtual;
  #L164f70.  goto L164f9c;
  #L164f72.  v5:= v9.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164f76.  call temp:= `getProfile`(v5) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getProfile:()Le/c/b/a/d/h/e;` @kind virtual;
  #L164f7c.  v5:= temp @kind object;
  #L164f7e.  call temp:= `getContactlessPaymentData`(v5) @signature `Le/c/b/a/d/h/e;.getContactlessPaymentData:()Le/c/b/a/d/h/c;` @kind virtual;
  #L164f84.  v5:= temp @kind object;
  #L164f86.  call temp:= `getGPO_Response`(v5) @signature `Le/c/b/a/d/h/c;.getGPO_Response:()Le/c/a/a/c;` @kind virtual;
  #L164f8c.  v5:= temp @kind object;
  #L164f8e.  call temp:= `copyOfRange`(v5, v8, v2) @signature `Le/c/a/a/c;.copyOfRange:(II)Le/c/a/a/c;` @kind interface;
  #L164f94.  v2:= temp @kind object;
  #L164f96.  call `setAIP`(v0, v2) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setAIP:(Le/c/a/a/c;)V` @kind virtual;
  #L164f9c.  v2:= 19I;
  #L164fa0.  call temp:= `copyOfRange`(v10, v6, v2) @signature `Le/c/a/a/c;.copyOfRange:(II)Le/c/a/a/c;` @kind interface;
  #L164fa6.  v10:= temp @kind object;
  #L164fa8.  call `setPDOL`(v0, v10) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setPDOL:(Le/c/a/a/c;)V` @kind virtual;
  #L164fae.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L164fb4.  v10:= temp @kind object;
  #L164fb6.  v2:= 2112I;
  #L164fba.  call temp:= `getFromWord`(v10, v2) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L164fc0.  v10:= temp @kind object;
  #L164fc2.  call temp:= `isEqual`(v4, v10) @signature `Le/c/a/a/c;.isEqual:(Le/c/a/a/c;)Z` @kind interface;
  #L164fc8.  v10:= temp;
  #L164fca.  if v10 != 0 then goto L164fda;
  #L164fce.  call temp:= `isZero`(v4) @signature `Le/c/a/d/b;.isZero:(Le/c/a/a/c;)Z` @kind static;
  #L164fd4.  v10:= temp;
  #L164fd6.  if v10 == 0 then goto L165010;
  #L164fda.  call temp:= `isZero`(v1) @signature `Le/c/a/d/b;.isZero:(Le/c/a/a/c;)Z` @kind static;
  #L164fe0.  v10:= temp;
  #L164fe2.  if v10 == 0 then goto L165010;
  #L164fe6.  call temp:= `getAIP`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.getAIP:()Le/c/a/a/c;` @kind virtual;
  #L164fec.  v10:= temp @kind object;
  #L164fee.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L164ff4.  v1:= temp @kind object;
  #L164ff6.  v2:= -129I;
  #L164ffa.  call temp:= `getFromWord`(v1, v2) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L165000.  v1:= temp @kind object;
  #L165002.  call temp:= `bitWiseAnd`(v10, v1) @signature `Le/c/a/a/c;.bitWiseAnd:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L165008.  v10:= temp @kind object;
  #L16500a.  call `setAIP`(v0, v10) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setAIP:(Le/c/a/a/c;)V` @kind virtual;
  #L165010.  v10:= v3;
  #L165012.  call temp:= `isTerminalOffline`(v10) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.isTerminalOffline:(B)Z` @kind static;
  #L165018.  v10:= temp;
  #L16501a.  if v10 == 0 then goto L165036;
  #L16501e.  call temp:= `cancelPayment`(v9) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.cancelPayment:()Le/c/b/a/e/e;` @kind virtual;
  #L165024.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L16502a.  v10:= temp @kind object;
  #L16502c.  call temp:= `getFromWord`(v10, v7) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L165032.  v10:= temp @kind object;
  #L165034.  return v10 @kind object;
  #L165036.  v10:= v9.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L16503a.  v0:= new `com.mastercard.mcbp.core.mpplite.states.b`;
  #L16503e.  call `<init>`(v0, v10) @signature `Lcom/mastercard/mcbp/core/mpplite/states/b;.<init>:(Lcom/mastercard/mcbp/core/mpplite/states/h;)V` @kind direct;
  #L165044.  call `setState`(v10, v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.setState:(Le/c/b/a/e/d;)V` @kind virtual;
  #L16504a.  v10:= v9.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L16504e.  call temp:= `getClContext`(v10) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L165054.  v10:= temp @kind object;
  #L165056.  call temp:= `isAlternateAID`(v10) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.isAlternateAID:()Z` @kind virtual;
  #L16505c.  v10:= temp;
  #L16505e.  v0:= -28672I;
  #L165062.  if v10 == 0 then goto L1650ac;
  #L165066.  v10:= v9.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L16506a.  call temp:= `getProfile`(v10) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getProfile:()Le/c/b/a/d/h/e;` @kind virtual;
  #L165070.  v10:= temp @kind object;
  #L165072.  call temp:= `getContactlessPaymentData`(v10) @signature `Le/c/b/a/d/h/e;.getContactlessPaymentData:()Le/c/b/a/d/h/c;` @kind virtual;
  #L165078.  v10:= temp @kind object;
  #L16507a.  call temp:= `getAlternateContactlessPaymentData`(v10) @signature `Le/c/b/a/d/h/c;.getAlternateContactlessPaymentData:()Le/c/b/a/d/h/a;` @kind virtual;
  #L165080.  v10:= temp @kind object;
  #L165082.  call temp:= `getGPO_Response`(v10) @signature `Le/c/b/a/d/h/a;.getGPO_Response:()Le/c/a/a/c;` @kind virtual;
  #L165088.  v10:= temp @kind object;
  #L16508a.  call temp:= `clone`(v10) @signature `Le/c/a/a/c;.clone:()Le/c/a/a/c;` @kind interface;
  #L165090.  v10:= temp @kind object;
  #L165092.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L165098.  v1:= temp @kind object;
  #L16509a.  call temp:= `getFromWord`(v1, v0) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L1650a0.  v0:= temp @kind object;
  #L1650a2.  call temp:= `append`(v10, v0) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L1650a8.  v10:= temp @kind object;
  #L1650aa.  return v10 @kind object;
  #L1650ac.  v10:= v9.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L1650b0.  call temp:= `getProfile`(v10) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getProfile:()Le/c/b/a/d/h/e;` @kind virtual;
  #L1650b6.  v10:= temp @kind object;
  #L1650b8.  call temp:= `getContactlessPaymentData`(v10) @signature `Le/c/b/a/d/h/e;.getContactlessPaymentData:()Le/c/b/a/d/h/c;` @kind virtual;
  #L1650be.  v10:= temp @kind object;
  #L1650c0.  call temp:= `getGPO_Response`(v10) @signature `Le/c/b/a/d/h/c;.getGPO_Response:()Le/c/a/a/c;` @kind virtual;
  #L1650c6.  v10:= temp @kind object;
  #L1650c8.  call temp:= `clone`(v10) @signature `Le/c/a/a/c;.clone:()Le/c/a/a/c;` @kind interface;
  #L1650ce.  v10:= temp @kind object;
  #L1650d0.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L1650d6.  v1:= temp @kind object;
  #L1650d8.  call temp:= `getFromWord`(v1, v0) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L1650de.  v0:= temp @kind object;
  #L1650e0.  call temp:= `append`(v10, v0) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L1650e6.  v10:= temp @kind object;
  #L1650e8.  return v10 @kind object;
  #L1650ea.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L1650f0.  v10:= temp @kind object;
  #L1650f2.  call temp:= `getFromWord`(v10, v7) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L1650f8.  v10:= temp @kind object;
  #L1650fa.  return v10 @kind object;
  #L1650fc.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L165102.  v10:= temp @kind object;
  #L165104.  v0:= 26368I;
  #L165108.  call temp:= `getFromWord`(v10, v0) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L16510e.  v10:= temp @kind object;
  #L165110.  return v10 @kind object;
  #L165112.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L165118.  v10:= temp @kind object;
  #L16511a.  v0:= 27270I;
  #L16511e.  call temp:= `getFromWord`(v10, v0) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L165124.  v10:= temp @kind object;
  #L165126.  return v10 @kind object;
}
procedure `e.c.a.a.c` `processGenAC`(`com.mastercard.mcbp.core.mpplite.states.e` v1 @kind this, `e.c.a.a.c` v2 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/e;.processGenAC:(Le/c/a/a/c;)Le/c/a/a/c;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L165138.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L16513e.  v2:= temp @kind object;
  #L165140.  v0:= 27013I;
  #L165144.  call temp:= `getFromWord`(v2, v0) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L16514a.  v2:= temp @kind object;
  #L16514c.  return v2 @kind object;
}
procedure `e.c.a.a.c` `processReadRecord`(`com.mastercard.mcbp.core.mpplite.states.e` v0 @kind this, `e.c.a.a.c` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/e;.processReadRecord:(Le/c/a/a/c;)Le/c/a/a/c;` @AccessFlag PROTECTED {
    temp;

  #L165160.  call temp:= `readRecord`(v0, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.readRecord:(Le/c/a/a/c;)Le/c/a/a/c;` @kind virtual;
  #L165166.  v1:= temp @kind object;
  #L165168.  return v1 @kind object;
}
