record `com.mastercard.mcbp.core.mpplite.states.d` @kind class @AccessFlag PUBLIC_ABSTRACT extends `e.c.b.a.e.d` @kind interface {
  `com.mastercard.mcbp.core.mpplite.states.h` `com.mastercard.mcbp.core.mpplite.states.d.a` @AccessFlag PROTECTED_FINAL;
}
global `e.c.a.a.c` `@@com.mastercard.mcbp.core.mpplite.states.d.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L164d64.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L164d6a.  v0:= temp @kind object;
  #L164d6c.  v1:= "325041592E5359532E4444463031" @kind object;
  #L164d70.  call temp:= `fromHexString`(v0, v1) @signature `Le/c/a/a/d;.fromHexString:(Ljava/lang/String;)Le/c/a/a/c;` @kind virtual;
  #L164d76.  v0:= temp @kind object;
  #L164d78.  `@@com.mastercard.mcbp.core.mpplite.states.d.b` @type ^`e.c.a.a.c` := v0 @kind object;
  #L164d7c.  return @kind void;
}
procedure `void` `<init>`(`com.mastercard.mcbp.core.mpplite.states.d` v0 @kind this, `com.mastercard.mcbp.core.mpplite.states.h` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.<init>:(Lcom/mastercard/mcbp/core/mpplite/states/h;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L164d90.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L164d96.  v0.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` := v1 @kind object;
  #L164d9a.  return @kind void;
}
procedure `e.c.a.a.c` `a`(`com.mastercard.mcbp.core.mpplite.states.d` v3 @kind this, `e.c.a.a.c` v4 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.a:(Le/c/a/a/c;)Le/c/a/a/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L164994.  v0:= 2I;
  #L164996.  call temp:= `getByte`(v4, v0) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L16499c.  v0:= temp;
  #L16499e.  v1:= 3I;
  #L1649a0.  call temp:= `getByte`(v4, v1) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L1649a6.  v1:= temp;
  #L1649a8.  v2:= 4I;
  #L1649aa.  if v0 != v2 then goto L164b2e;
  #L1649ae.  if v1 == 0 then goto L1649b6;
  #L1649b2.  goto L164b2e;
  #L1649b6.  call temp:= `parseSelectAID`(v3, v4) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.parseSelectAID:(Le/c/a/a/c;)Le/c/a/a/c;` @kind virtual;
  #L1649bc.  v4:= temp @kind object;
  #L1649be.  v0:= v3.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L1649c2.  call temp:= `getProfile`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getProfile:()Le/c/b/a/d/h/e;` @kind virtual;
  #L1649c8.  v0:= temp @kind object;
  #L1649ca.  v1:= `@@com.mastercard.mcbp.core.mpplite.states.d.b` @type ^`e.c.a.a.c` @kind object;
  #L1649ce.  call temp:= `isEqual`(v4, v1) @signature `Le/c/a/a/c;.isEqual:(Le/c/a/a/c;)Z` @kind interface;
  #L1649d4.  v1:= temp;
  #L1649d6.  v2:= -28672I;
  #L1649da.  if v1 == 0 then goto L164a24;
  #L1649de.  v4:= v3.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L1649e2.  v1:= new `com.mastercard.mcbp.core.mpplite.states.c`;
  #L1649e6.  call `<init>`(v1, v4) @signature `Lcom/mastercard/mcbp/core/mpplite/states/c;.<init>:(Lcom/mastercard/mcbp/core/mpplite/states/h;)V` @kind direct;
  #L1649ec.  call `setState`(v4, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.setState:(Le/c/b/a/e/d;)V` @kind virtual;
  #L1649f2.  call temp:= `getContactlessPaymentData`(v0) @signature `Le/c/b/a/d/h/e;.getContactlessPaymentData:()Le/c/b/a/d/h/c;` @kind virtual;
  #L1649f8.  v4:= temp @kind object;
  #L1649fa.  call temp:= `getPPSE_FCI`(v4) @signature `Le/c/b/a/d/h/c;.getPPSE_FCI:()Le/c/a/a/c;` @kind virtual;
  #L164a00.  v4:= temp @kind object;
  #L164a02.  call temp:= `clone`(v4) @signature `Le/c/a/a/c;.clone:()Le/c/a/a/c;` @kind interface;
  #L164a08.  v4:= temp @kind object;
  #L164a0a.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L164a10.  v0:= temp @kind object;
  #L164a12.  call temp:= `getFromWord`(v0, v2) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L164a18.  v0:= temp @kind object;
  #L164a1a.  call temp:= `append`(v4, v0) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L164a20.  v4:= temp @kind object;
  #L164a22.  return v4 @kind object;
  #L164a24.  call temp:= `getContactlessPaymentData`(v0) @signature `Le/c/b/a/d/h/e;.getContactlessPaymentData:()Le/c/b/a/d/h/c;` @kind virtual;
  #L164a2a.  v1:= temp @kind object;
  #L164a2c.  call temp:= `getAID`(v1) @signature `Le/c/b/a/d/h/c;.getAID:()Le/c/a/a/c;` @kind virtual;
  #L164a32.  v1:= temp @kind object;
  #L164a34.  call temp:= `isEqual`(v4, v1) @signature `Le/c/a/a/c;.isEqual:(Le/c/a/a/c;)Z` @kind interface;
  #L164a3a.  v1:= temp;
  #L164a3c.  if v1 == 0 then goto L164a86;
  #L164a40.  v4:= v3.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164a44.  v1:= new `com.mastercard.mcbp.core.mpplite.states.e`;
  #L164a48.  call `<init>`(v1, v4) @signature `Lcom/mastercard/mcbp/core/mpplite/states/e;.<init>:(Lcom/mastercard/mcbp/core/mpplite/states/h;)V` @kind direct;
  #L164a4e.  call `setState`(v4, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.setState:(Le/c/b/a/e/d;)V` @kind virtual;
  #L164a54.  call temp:= `getContactlessPaymentData`(v0) @signature `Le/c/b/a/d/h/e;.getContactlessPaymentData:()Le/c/b/a/d/h/c;` @kind virtual;
  #L164a5a.  v4:= temp @kind object;
  #L164a5c.  call temp:= `getPaymentFCI`(v4) @signature `Le/c/b/a/d/h/c;.getPaymentFCI:()Le/c/a/a/c;` @kind virtual;
  #L164a62.  v4:= temp @kind object;
  #L164a64.  call temp:= `clone`(v4) @signature `Le/c/a/a/c;.clone:()Le/c/a/a/c;` @kind interface;
  #L164a6a.  v4:= temp @kind object;
  #L164a6c.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L164a72.  v0:= temp @kind object;
  #L164a74.  call temp:= `getFromWord`(v0, v2) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L164a7a.  v0:= temp @kind object;
  #L164a7c.  call temp:= `append`(v4, v0) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L164a82.  v4:= temp @kind object;
  #L164a84.  return v4 @kind object;
  #L164a86.  call temp:= `getContactlessPaymentData`(v0) @signature `Le/c/b/a/d/h/e;.getContactlessPaymentData:()Le/c/b/a/d/h/c;` @kind virtual;
  #L164a8c.  v0:= temp @kind object;
  #L164a8e.  call temp:= `getAlternateContactlessPaymentData`(v0) @signature `Le/c/b/a/d/h/c;.getAlternateContactlessPaymentData:()Le/c/b/a/d/h/a;` @kind virtual;
  #L164a94.  v0:= temp @kind object;
  #L164a96.  if v0 == 0 then goto L164b02;
  #L164a9a.  call temp:= `getAID`(v0) @signature `Le/c/b/a/d/h/a;.getAID:()Le/c/a/a/c;` @kind virtual;
  #L164aa0.  v1:= temp @kind object;
  #L164aa2.  call temp:= `isEqual`(v4, v1) @signature `Le/c/a/a/c;.isEqual:(Le/c/a/a/c;)Z` @kind interface;
  #L164aa8.  v4:= temp;
  #L164aaa.  if v4 != 0 then goto L164ab0;
  #L164aae.  goto L164b02;
  #L164ab0.  v4:= v3.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164ab4.  call temp:= `getClContext`(v4) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L164aba.  v4:= temp @kind object;
  #L164abc.  v1:= 1I;
  #L164abe.  call `setAlternateAID`(v4, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.setAlternateAID:(Z)V` @kind virtual;
  #L164ac4.  v4:= v3.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164ac8.  v1:= new `com.mastercard.mcbp.core.mpplite.states.e`;
  #L164acc.  call `<init>`(v1, v4) @signature `Lcom/mastercard/mcbp/core/mpplite/states/e;.<init>:(Lcom/mastercard/mcbp/core/mpplite/states/h;)V` @kind direct;
  #L164ad2.  call `setState`(v4, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.setState:(Le/c/b/a/e/d;)V` @kind virtual;
  #L164ad8.  call temp:= `getPaymentFCI`(v0) @signature `Le/c/b/a/d/h/a;.getPaymentFCI:()Le/c/a/a/c;` @kind virtual;
  #L164ade.  v4:= temp @kind object;
  #L164ae0.  call temp:= `clone`(v4) @signature `Le/c/a/a/c;.clone:()Le/c/a/a/c;` @kind interface;
  #L164ae6.  v4:= temp @kind object;
  #L164ae8.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L164aee.  v0:= temp @kind object;
  #L164af0.  call temp:= `getFromWord`(v0, v2) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L164af6.  v0:= temp @kind object;
  #L164af8.  call temp:= `append`(v4, v0) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L164afe.  v4:= temp @kind object;
  #L164b00.  return v4 @kind object;
  #L164b02.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L164b08.  v4:= temp @kind object;
  #L164b0a.  v0:= 27266I;
  #L164b0e.  call temp:= `getFromWord`(v4, v0) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L164b14.  v4:= temp @kind object;
  #L164b16.  return v4 @kind object;
  #L164b18.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L164b1e.  v4:= temp @kind object;
  #L164b20.  v0:= 26368I;
  #L164b24.  call temp:= `getFromWord`(v4, v0) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L164b2a.  v4:= temp @kind object;
  #L164b2c.  return v4 @kind object;
  #L164b2e.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L164b34.  v4:= temp @kind object;
  #L164b36.  v0:= 27270I;
  #L164b3a.  call temp:= `getFromWord`(v4, v0) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L164b40.  v4:= temp @kind object;
  #L164b42.  return v4 @kind object;
  catch `java.lang.Exception` @[L1649b6..L1649be] goto L164b18;
}
procedure `boolean` `isTerminalOffline`(`byte` v1 ) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.isTerminalOffline:(B)Z` @AccessFlag PROTECTED_STATIC {
    temp;
    v0;

  #L1648a0.  v1:= v1 ^& 15;
  #L1648a4.  v0:= 3I;
  #L1648a6.  if v1 == v0 then goto L1648b6;
  #L1648aa.  v0:= 6I;
  #L1648ac.  if v1 != v0 then goto L1648b2;
  #L1648b0.  goto L1648b6;
  #L1648b2.  v1:= 0I;
  #L1648b4.  return v1;
  #L1648b6.  v1:= 1I;
  #L1648b8.  return v1;
}
procedure `e.c.b.a.e.e` `cancelPayment`(`com.mastercard.mcbp.core.mpplite.states.d` v3 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.cancelPayment:()Le/c/b/a/e/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L164c90.  v0:= v3.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164c94.  call `clearCredentials`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.clearCredentials:()V` @kind virtual;
  #L164c9a.  v0:= v3.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164c9e.  call temp:= `getClContext`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getClContext:()Lcom/mastercard/mcbp/core/mpplite/states/a;` @kind virtual;
  #L164ca4.  v0:= temp @kind object;
  #L164ca6.  call `wipe`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/a;.wipe:()V` @kind virtual;
  #L164cac.  v0:= v3.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164cb0.  v1:= new `com.mastercard.mcbp.core.mpplite.states.g`;
  #L164cb4.  call temp:= `getProfile`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getProfile:()Le/c/b/a/d/h/e;` @kind virtual;
  #L164cba.  v2:= temp @kind object;
  #L164cbc.  call `<init>`(v1, v0, v2) @signature `Lcom/mastercard/mcbp/core/mpplite/states/g;.<init>:(Lcom/mastercard/mcbp/core/mpplite/states/h;Le/c/b/a/d/h/e;)V` @kind direct;
  #L164cc2.  call `setState`(v0, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.setState:(Le/c/b/a/e/d;)V` @kind virtual;
  #L164cc8.  v0:= `@@e.c.b.a.e.e.f` @type ^`e.c.b.a.e.e` @kind object;
  #L164ccc.  return v0 @kind object;
}
procedure `e.c.b.a.e.e` `initialize`(`com.mastercard.mcbp.core.mpplite.states.d` v0 @kind this, `e.c.b.a.d.h.e` v1 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.initialize:(Le/c/b/a/d/h/e;)Le/c/b/a/e/e;` @AccessFlag PUBLIC {
    temp;

  #L164ce0.  v1:= `@@e.c.b.a.e.e.k` @type ^`e.c.b.a.e.e` @kind object;
  #L164ce4.  return v1 @kind object;
}
procedure `e.c.a.a.c` `parseSelectAID`(`com.mastercard.mcbp.core.mpplite.states.d` v4 @kind this, `e.c.a.a.c` v5 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.parseSelectAID:(Le/c/a/a/c;)Le/c/a/a/c;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1648cc.  v0:= 4I;
  #L1648ce.  call temp:= `getByte`(v5, v0) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L1648d4.  v0:= temp;
  #L1648d6.  v0:= v0 ^& 255;
  #L1648da.  v0:= (`byte`) v0 @kind i2b;
  #L1648dc.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L1648e2.  v1:= temp @kind object;
  #L1648e4.  call temp:= `getByteArray`(v1, v0) @signature `Le/c/a/a/d;.getByteArray:(I)Le/c/a/a/c;` @kind virtual;
  #L1648ea.  v1:= temp @kind object;
  #L1648ec.  v2:= 5I;
  #L1648ee.  v3:= 0I;
  #L1648f0.  call `copyBytes`(v1, v5, v2, v3, v0) @signature `Le/c/a/a/c;.copyBytes:(Le/c/a/a/c;III)V` @kind interface;
  #L1648f6.  return v1 @kind object;
}
procedure `e.c.a.a.c` `processApdu`(`com.mastercard.mcbp.core.mpplite.states.d` v2 @kind this, `e.c.a.a.c` v3 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.processApdu:(Le/c/a/a/c;)Le/c/a/a/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L164908.  v0:= 1I;
  #L16490a.  call temp:= `getByte`(v3, v0) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L164910.  v0:= temp;
  #L164912.  v1:= -92I;
  #L164916.  if v0 == v1 then goto L164978;
  #L16491a.  v1:= -88I;
  #L16491e.  if v0 == v1 then goto L16496e;
  #L164922.  v1:= -82I;
  #L164926.  if v0 == v1 then goto L164964;
  #L16492a.  v1:= -78I;
  #L16492e.  if v0 == v1 then goto L16495a;
  #L164932.  v1:= 42I;
  #L164936.  if v0 == v1 then goto L164950;
  #L16493a.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L164940.  v3:= temp @kind object;
  #L164942.  v0:= 27904I;
  #L164946.  call temp:= `getFromWord`(v3, v0) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L16494c.  v3:= temp @kind object;
  #L16494e.  return v3 @kind object;
  #L164950.  call temp:= `processComputeCC`(v2, v3) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.processComputeCC:(Le/c/a/a/c;)Le/c/a/a/c;` @kind virtual;
  #L164956.  v3:= temp @kind object;
  #L164958.  return v3 @kind object;
  #L16495a.  call temp:= `processReadRecord`(v2, v3) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.processReadRecord:(Le/c/a/a/c;)Le/c/a/a/c;` @kind virtual;
  #L164960.  v3:= temp @kind object;
  #L164962.  return v3 @kind object;
  #L164964.  call temp:= `processGenAC`(v2, v3) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.processGenAC:(Le/c/a/a/c;)Le/c/a/a/c;` @kind virtual;
  #L16496a.  v3:= temp @kind object;
  #L16496c.  return v3 @kind object;
  #L16496e.  call temp:= `processGPO`(v2, v3) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.processGPO:(Le/c/a/a/c;)Le/c/a/a/c;` @kind virtual;
  #L164974.  v3:= temp @kind object;
  #L164976.  return v3 @kind object;
  #L164978.  call temp:= `a`(v2, v3) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.a:(Le/c/a/a/c;)Le/c/a/a/c;` @kind direct;
  #L16497e.  v3:= temp @kind object;
  #L164980.  return v3 @kind object;
}
procedure `e.c.a.a.c` `processComputeCC`(`e.c.a.a.c` v0 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.processComputeCC:(Le/c/a/a/c;)Le/c/a/a/c;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `e.c.a.a.c` `processGPO`(`e.c.a.a.c` v0 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.processGPO:(Le/c/a/a/c;)Le/c/a/a/c;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `e.c.a.a.c` `processGenAC`(`e.c.a.a.c` v0 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.processGenAC:(Le/c/a/a/c;)Le/c/a/a/c;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `e.c.a.a.c` `processReadRecord`(`e.c.a.a.c` v0 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.processReadRecord:(Le/c/a/a/c;)Le/c/a/a/c;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `e.c.a.a.c` `readRecord`(`com.mastercard.mcbp.core.mpplite.states.d` v8 @kind this, `e.c.a.a.c` v9 @kind object) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.readRecord:(Le/c/a/a/c;)Le/c/a/a/c;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L164b64.  v0:= new `e.c.a.d.c.c.e`;
  #L164b68.  call `<init>`(v0, v9) @signature `Le/c/a/d/c/c/e;.<init>:(Le/c/a/a/c;)V` @kind direct;
  #L164b6e.  v1:= 2I;
  #L164b70.  call temp:= `getByte`(v9, v1) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L164b76.  v1:= temp;
  #L164b78.  v2:= 3I;
  #L164b7a.  call temp:= `getByte`(v9, v2) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L164b80.  v9:= temp;
  #L164b82.  if v1 == 0 then goto L164c68;
  #L164b86.  v9:= v9 ^& 7;
  #L164b8a.  v1:= 4I;
  #L164b8c.  if v9 == v1 then goto L164b92;
  #L164b90.  goto L164c68;
  #L164b92.  call temp:= `getRecordNumber`(v0) @signature `Le/c/a/d/c/c/e;.getRecordNumber:()B` @kind virtual;
  #L164b98.  v9:= temp;
  #L164b9a.  call temp:= `getSfiNumber`(v0) @signature `Le/c/a/d/c/c/e;.getSfiNumber:()B` @kind virtual;
  #L164ba0.  v0:= temp;
  #L164ba2.  v1:= -1I;
  #L164ba4.  v2:= 27272I;
  #L164ba8.  if v9 == v1 then goto L164c56;
  #L164bac.  v1:= v8.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164bb0.  call temp:= `getProfile`(v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getProfile:()Le/c/b/a/d/h/e;` @kind virtual;
  #L164bb6.  v1:= temp @kind object;
  #L164bb8.  call temp:= `getContactlessPaymentData`(v1) @signature `Le/c/b/a/d/h/e;.getContactlessPaymentData:()Le/c/b/a/d/h/c;` @kind virtual;
  #L164bbe.  v1:= temp @kind object;
  #L164bc0.  call temp:= `getRecords`(v1) @signature `Le/c/b/a/d/h/c;.getRecords:()[Le/c/b/a/d/h/f;` @kind virtual;
  #L164bc6.  v1:= temp @kind object;
  #L164bc8.  if v1 == 0 then goto L164c44;
  #L164bcc.  v3:= length @variable v1;
  #L164bce.  if v3 != 0 then goto L164bd4;
  #L164bd2.  goto L164c44;
  #L164bd4.  v3:= 0I;
  #L164bd6.  v4:= length @variable v1;
  #L164bd8.  v5:= 0I;
  #L164bda.  if v5 >= v4 then goto L164c08;
  #L164bde.  v6:= v1[v5] @kind object;
  #L164be2.  call temp:= `getRecordNumber`(v6) @signature `Le/c/b/a/d/h/f;.getRecordNumber:()B` @kind virtual;
  #L164be8.  v7:= temp;
  #L164bea.  if v7 != v9 then goto L164c02;
  #L164bee.  call temp:= `getSFI`(v6) @signature `Le/c/b/a/d/h/f;.getSFI:()B` @kind virtual;
  #L164bf4.  v7:= temp;
  #L164bf6.  if v7 != v0 then goto L164c02;
  #L164bfa.  call temp:= `getRecordValue`(v6) @signature `Le/c/b/a/d/h/f;.getRecordValue:()Le/c/a/a/c;` @kind virtual;
  #L164c00.  v3:= temp @kind object;
  #L164c02.  v5:= v5 + 1;
  #L164c06.  goto L164bda;
  #L164c08.  if v3 != 0 then goto L164c1e;
  #L164c0c.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L164c12.  v9:= temp @kind object;
  #L164c14.  call temp:= `getFromWord`(v9, v2) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L164c1a.  v9:= temp @kind object;
  #L164c1c.  return v9 @kind object;
  #L164c1e.  call temp:= `clone`(v3) @signature `Le/c/a/a/c;.clone:()Le/c/a/a/c;` @kind interface;
  #L164c24.  v9:= temp @kind object;
  #L164c26.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L164c2c.  v0:= temp @kind object;
  #L164c2e.  v1:= -28672I;
  #L164c32.  call temp:= `getFromWord`(v0, v1) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L164c38.  v0:= temp @kind object;
  #L164c3a.  call temp:= `append`(v9, v0) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L164c40.  v9:= temp @kind object;
  #L164c42.  return v9 @kind object;
  #L164c44.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L164c4a.  v9:= temp @kind object;
  #L164c4c.  call temp:= `getFromWord`(v9, v2) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L164c52.  v9:= temp @kind object;
  #L164c54.  return v9 @kind object;
  #L164c56.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L164c5c.  v9:= temp @kind object;
  #L164c5e.  call temp:= `getFromWord`(v9, v2) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L164c64.  v9:= temp @kind object;
  #L164c66.  return v9 @kind object;
  #L164c68.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L164c6e.  v9:= temp @kind object;
  #L164c70.  v0:= 27270I;
  #L164c74.  call temp:= `getFromWord`(v9, v0) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @kind virtual;
  #L164c7a.  v9:= temp @kind object;
  #L164c7c.  return v9 @kind object;
}
procedure `e.c.b.a.e.e` `startContactLessPayment`(`com.mastercard.mcbp.core.mpplite.states.d` v0 @kind this, `e.c.b.a.e.f` v1 @kind object, `e.c.b.a.e.a` v2 @kind object, `e.c.b.a.d.g` v3 @kind object, `boolean` v4 , `boolean` v5 , `boolean` v6 ) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.startContactLessPayment:(Le/c/b/a/e/f;Le/c/b/a/e/a;Le/c/b/a/d/g;ZZZ)Le/c/b/a/e/e;` @AccessFlag PUBLIC {
    temp;

  #L164cf8.  v1:= `@@e.c.b.a.e.e.k` @type ^`e.c.b.a.e.e` @kind object;
  #L164cfc.  return v1 @kind object;
}
procedure `e.c.b.a.e.e` `stop`(`com.mastercard.mcbp.core.mpplite.states.d` v2 @kind this) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.stop:()Le/c/b/a/e/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L164d10.  call temp:= `cancelPayment`(v2) @signature `Lcom/mastercard/mcbp/core/mpplite/states/d;.cancelPayment:()Le/c/b/a/e/e;` @kind virtual;
  #L164d16.  v0:= v2.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164d1a.  call temp:= `getProfile`(v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.getProfile:()Le/c/b/a/d/h/e;` @kind virtual;
  #L164d20.  v0:= temp @kind object;
  #L164d22.  if v0 == 0 then goto L164d38;
  #L164d26.  call `wipe`(v0) @signature `Le/c/b/a/d/h/e;.wipe:()V` @kind virtual;
  #L164d2c.  v0:= v2.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164d30.  v1:= 0I;
  #L164d32.  call `setProfile`(v0, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.setProfile:(Le/c/b/a/d/h/e;)V` @kind virtual;
  #L164d38.  v0:= v2.`com.mastercard.mcbp.core.mpplite.states.d.a` @type ^`com.mastercard.mcbp.core.mpplite.states.h` @kind object;
  #L164d3c.  v1:= new `com.mastercard.mcbp.core.mpplite.states.i`;
  #L164d40.  call `<init>`(v1, v0) @signature `Lcom/mastercard/mcbp/core/mpplite/states/i;.<init>:(Lcom/mastercard/mcbp/core/mpplite/states/h;)V` @kind direct;
  #L164d46.  call `setState`(v0, v1) @signature `Lcom/mastercard/mcbp/core/mpplite/states/h;.setState:(Le/c/b/a/e/d;)V` @kind virtual;
  #L164d4c.  v0:= `@@e.c.b.a.e.e.f` @type ^`e.c.b.a.e.e` @kind object;
  #L164d50.  return v0 @kind object;
}
