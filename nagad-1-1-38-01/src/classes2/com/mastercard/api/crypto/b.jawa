record `com.mastercard.api.crypto.b` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `com.mastercard.api.crypto.b` `@@com.mastercard.api.crypto.b.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`com.mastercard.api.crypto.b` v0 @kind this) @signature `Lcom/mastercard/api/crypto/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15d9cc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15d9d2.  return @kind void;
}
procedure `com.mastercard.api.crypto.b` `getInstance`() @signature `Lcom/mastercard/api/crypto/b;.getInstance:()Lcom/mastercard/api/crypto/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L15d9b4.  v0:= `@@com.mastercard.api.crypto.b.a` @type ^`com.mastercard.api.crypto.b` @kind object;
  #L15d9b8.  return v0 @kind object;
}
procedure `void` `setInstance`(`com.mastercard.api.crypto.b` v0 @kind object) @signature `Lcom/mastercard/api/crypto/b;.setInstance:(Lcom/mastercard/api/crypto/b;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L15d9e4.  `@@com.mastercard.api.crypto.b.a` @type ^`com.mastercard.api.crypto.b` := v0 @kind object;
  #L15d9e8.  return @kind void;
}
procedure `e.c.a.a.c` `DES3`(`e.c.a.a.c` v0 @kind object, `e.c.a.a.c` v1 @kind object, `boolean` v2 ) @signature `Lcom/mastercard/api/crypto/b;.DES3:(Le/c/a/a/c;Le/c/a/a/c;Z)Le/c/a/a/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `e.c.a.a.c` `RSA`(`e.c.a.a.c` v0 @kind object) @signature `Lcom/mastercard/api/crypto/b;.RSA:(Le/c/a/a/c;)Le/c/a/a/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `e.c.a.a.c` `SHA1`(`e.c.a.a.c` v0 @kind object) @signature `Lcom/mastercard/api/crypto/b;.SHA1:(Le/c/a/a/c;)Le/c/a/a/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `e.c.a.a.c` `generateRandom`(`int` v0 ) @signature `Lcom/mastercard/api/crypto/b;.generateRandom:(I)Le/c/a/a/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `initRSAPrivateKey`(`e.c.a.a.c` v0 @kind object, `e.c.a.a.c` v1 @kind object, `e.c.a.a.c` v2 @kind object, `e.c.a.a.c` v3 @kind object, `e.c.a.a.c` v4 @kind object) @signature `Lcom/mastercard/api/crypto/b;.initRSAPrivateKey:(Le/c/a/a/c;Le/c/a/a/c;Le/c/a/a/c;Le/c/a/a/c;Le/c/a/a/c;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `e.c.a.a.c` `mac`(`e.c.a.a.c` v0 @kind object, `e.c.a.a.c` v1 @kind object) @signature `Lcom/mastercard/api/crypto/b;.mac:(Le/c/a/a/c;Le/c/a/a/c;)Le/c/a/a/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
