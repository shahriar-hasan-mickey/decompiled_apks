record `i.q` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.r.b` @kind class, `java.util.RandomAccess` @kind interface {
  `i.h`[] `i.q.g` @AccessFlag PRIVATE_FINAL;
  `int`[] `i.q.h` @AccessFlag PRIVATE_FINAL;
}
global `i.q$a` `@@i.q.i` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Li/q;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2152b4.  v0:= new `i.q$a`;
  #L2152b8.  v1:= 0I;
  #L2152ba.  call `<init>`(v0, v1) @signature `Li/q$a;.<init>:(Lkotlin/v/c/f;)V` @kind direct;
  #L2152c0.  `@@i.q.i` @type ^`i.q$a` := v0 @kind object;
  #L2152c4.  return @kind void;
}
procedure `void` `<init>`(`i.q` v0 @kind this, `i.h`[] v1 @kind object, `int`[] v2 @kind object) @signature `Li/q;.<init>:([Li/h;[I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2152d8.  call `<init>`(v0) @signature `Lkotlin/r/b;.<init>:()V` @kind direct;
  #L2152de.  v0.`i.q.g` @type ^`i.h`[] := v1 @kind object;
  #L2152e2.  v0.`i.q.h` @type ^`int`[] := v2 @kind object;
  #L2152e6.  return @kind void;
}
procedure `void` `<init>`(`i.q` v0 @kind this, `i.h`[] v1 @kind object, `int`[] v2 @kind object, `kotlin.v.c.f` v3 @kind object) @signature `Li/q;.<init>:([Li/h;[ILkotlin/v/c/f;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2152f8.  call `<init>`(v0, v1, v2) @signature `Li/q;.<init>:([Li/h;[I)V` @kind direct;
  #L2152fe.  return @kind void;
}
procedure `i.q` `of`(`i.h`[] v1 @kind object) @signature `Li/q;.of:([Li/h;)Li/q;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L215294.  v0:= `@@i.q.i` @type ^`i.q$a` @kind object;
  #L215298.  call temp:= `of`(v0, v1) @signature `Li/q$a;.of:([Li/h;)Li/q;` @kind virtual;
  #L21529e.  v1:= temp @kind object;
  #L2152a0.  return v1 @kind object;
}
procedure `boolean` `contains`(`i.q` v0 @kind this, `i.h` v1 @kind object) @signature `Li/q;.contains:(Li/h;)Z` @AccessFlag PUBLIC {
    temp;

  #L215168.  call temp:= `contains`(v0, v1) @signature `Lkotlin/r/a;.contains:(Ljava/lang/Object;)Z` @kind super;
  #L21516e.  v1:= temp;
  #L215170.  return v1;
}
procedure `boolean` `contains`(`i.q` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Li/q;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L21513c.  v0:= instanceof @variable v2 @type ^`i.h` @kind boolean;
  #L215140.  if v0 == 0 then goto L215152;
  #L215144.  v2:= (`i.h`) v2 @kind object;
  #L215148.  call temp:= `contains`(v1, v2) @signature `Li/q;.contains:(Li/h;)Z` @kind virtual;
  #L21514e.  v2:= temp;
  #L215150.  return v2;
  #L215152.  v2:= 0I;
  #L215154.  return v2;
}
procedure `i.h` `get`(`i.q` v1 @kind this, `int` v2 ) @signature `Li/q;.get:(I)Li/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215260.  v0:= v1.`i.q.g` @type ^`i.h`[] @kind object;
  #L215264.  v2:= v0[v2] @kind object;
  #L215268.  return v2 @kind object;
}
procedure `java.lang.Object` `get`(`i.q` v0 @kind this, `int` v1 ) @signature `Li/q;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L215244.  call temp:= `get`(v0, v1) @signature `Li/q;.get:(I)Li/h;` @kind virtual;
  #L21524a.  v1:= temp @kind object;
  #L21524c.  return v1 @kind object;
}
procedure `i.h`[] `getByteStrings$okio`(`i.q` v1 @kind this) @signature `Li/q;.getByteStrings$okio:()[Li/h;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L21527c.  v0:= v1.`i.q.g` @type ^`i.h`[] @kind object;
  #L215280.  return v0 @kind object;
}
procedure `int` `getSize`(`i.q` v1 @kind this) @signature `Li/q;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L215184.  v0:= v1.`i.q.g` @type ^`i.h`[] @kind object;
  #L215188.  v0:= length @variable v0;
  #L21518a.  return v0;
}
procedure `int`[] `getTrie$okio`(`i.q` v1 @kind this) @signature `Li/q;.getTrie$okio:()[I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L21522c.  v0:= v1.`i.q.h` @type ^`int`[] @kind object;
  #L215230.  return v0 @kind object;
}
procedure `int` `indexOf`(`i.q` v0 @kind this, `i.h` v1 @kind object) @signature `Li/q;.indexOf:(Li/h;)I` @AccessFlag PUBLIC {
    temp;

  #L2151c8.  call temp:= `indexOf`(v0, v1) @signature `Lkotlin/r/b;.indexOf:(Ljava/lang/Object;)I` @kind super;
  #L2151ce.  v1:= temp;
  #L2151d0.  return v1;
}
procedure `int` `indexOf`(`i.q` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Li/q;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L21519c.  v0:= instanceof @variable v2 @type ^`i.h` @kind boolean;
  #L2151a0.  if v0 == 0 then goto L2151b2;
  #L2151a4.  v2:= (`i.h`) v2 @kind object;
  #L2151a8.  call temp:= `indexOf`(v1, v2) @signature `Li/q;.indexOf:(Li/h;)I` @kind virtual;
  #L2151ae.  v2:= temp;
  #L2151b0.  return v2;
  #L2151b2.  v2:= -1I;
  #L2151b4.  return v2;
}
procedure `int` `lastIndexOf`(`i.q` v0 @kind this, `i.h` v1 @kind object) @signature `Li/q;.lastIndexOf:(Li/h;)I` @AccessFlag PUBLIC {
    temp;

  #L215210.  call temp:= `lastIndexOf`(v0, v1) @signature `Lkotlin/r/b;.lastIndexOf:(Ljava/lang/Object;)I` @kind super;
  #L215216.  v1:= temp;
  #L215218.  return v1;
}
procedure `int` `lastIndexOf`(`i.q` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Li/q;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2151e4.  v0:= instanceof @variable v2 @type ^`i.h` @kind boolean;
  #L2151e8.  if v0 == 0 then goto L2151fa;
  #L2151ec.  v2:= (`i.h`) v2 @kind object;
  #L2151f0.  call temp:= `lastIndexOf`(v1, v2) @signature `Li/q;.lastIndexOf:(Li/h;)I` @kind virtual;
  #L2151f6.  v2:= temp;
  #L2151f8.  return v2;
  #L2151fa.  v2:= -1I;
  #L2151fc.  return v2;
}
