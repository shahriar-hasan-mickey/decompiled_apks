record `i.l` @kind class @AccessFlag PUBLIC extends `i.a0` @kind class {
  `i.a0` `i.l.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`i.l` v1 @kind this, `i.a0` v2 @kind object) @signature `Li/l;.<init>:(Li/a0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L213d80.  v0:= "delegate" @kind object;
  #L213d84.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L213d8a.  call `<init>`(v1) @signature `Li/a0;.<init>:()V` @kind direct;
  #L213d90.  v1.`i.l.a` @type ^`i.a0` := v2 @kind object;
  #L213d94.  return @kind void;
}
procedure `i.a0` `clearDeadline`(`i.l` v1 @kind this) @signature `Li/l;.clearDeadline:()Li/a0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213ce0.  v0:= v1.`i.l.a` @type ^`i.a0` @kind object;
  #L213ce4.  call temp:= `clearDeadline`(v0) @signature `Li/a0;.clearDeadline:()Li/a0;` @kind virtual;
  #L213cea.  v0:= temp @kind object;
  #L213cec.  return v0 @kind object;
}
procedure `i.a0` `clearTimeout`(`i.l` v1 @kind this) @signature `Li/l;.clearTimeout:()Li/a0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213d00.  v0:= v1.`i.l.a` @type ^`i.a0` @kind object;
  #L213d04.  call temp:= `clearTimeout`(v0) @signature `Li/a0;.clearTimeout:()Li/a0;` @kind virtual;
  #L213d0a.  v0:= temp @kind object;
  #L213d0c.  return v0 @kind object;
}
procedure `long` `deadlineNanoTime`(`i.l` v2 @kind this) @signature `Li/l;.deadlineNanoTime:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L213c80.  v0:= v2.`i.l.a` @type ^`i.a0` @kind object;
  #L213c84.  call temp:= `deadlineNanoTime`(v0) @signature `Li/a0;.deadlineNanoTime:()J` @kind virtual;
  #L213c8a.  v0:= temp @kind wide;
  #L213c8c.  return v0 @kind wide;
}
procedure `i.a0` `deadlineNanoTime`(`i.l` v1 @kind this, `long` v2 ) @signature `Li/l;.deadlineNanoTime:(J)Li/a0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213d20.  v0:= v1.`i.l.a` @type ^`i.a0` @kind object;
  #L213d24.  call temp:= `deadlineNanoTime`(v0, v2) @signature `Li/a0;.deadlineNanoTime:(J)Li/a0;` @kind virtual;
  #L213d2a.  v2:= temp @kind object;
  #L213d2c.  return v2 @kind object;
}
procedure `i.a0` `delegate`(`i.l` v1 @kind this) @signature `Li/l;.delegate:()Li/a0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L213d40.  v0:= v1.`i.l.a` @type ^`i.a0` @kind object;
  #L213d44.  return v0 @kind object;
}
procedure `boolean` `hasDeadline`(`i.l` v1 @kind this) @signature `Li/l;.hasDeadline:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213c60.  v0:= v1.`i.l.a` @type ^`i.a0` @kind object;
  #L213c64.  call temp:= `hasDeadline`(v0) @signature `Li/a0;.hasDeadline:()Z` @kind virtual;
  #L213c6a.  v0:= temp;
  #L213c6c.  return v0;
}
procedure `i.l` `setDelegate`(`i.l` v1 @kind this, `i.a0` v2 @kind object) @signature `Li/l;.setDelegate:(Li/a0;)Li/l;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L213cc0.  v0:= "delegate" @kind object;
  #L213cc4.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L213cca.  v1.`i.l.a` @type ^`i.a0` := v2 @kind object;
  #L213cce.  return v1 @kind object;
}
procedure `void` `throwIfReached`(`i.l` v1 @kind this) @signature `Li/l;.throwIfReached:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213da8.  v0:= v1.`i.l.a` @type ^`i.a0` @kind object;
  #L213dac.  call `throwIfReached`(v0) @signature `Li/a0;.throwIfReached:()V` @kind virtual;
  #L213db2.  return @kind void;
}
procedure `i.a0` `timeout`(`i.l` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Li/l;.timeout:(JLjava/util/concurrent/TimeUnit;)Li/a0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213d58.  v0:= "unit" @kind object;
  #L213d5c.  call `checkParameterIsNotNull`(v4, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L213d62.  v0:= v1.`i.l.a` @type ^`i.a0` @kind object;
  #L213d66.  call temp:= `timeout`(v0, v2, v4) @signature `Li/a0;.timeout:(JLjava/util/concurrent/TimeUnit;)Li/a0;` @kind virtual;
  #L213d6c.  v2:= temp @kind object;
  #L213d6e.  return v2 @kind object;
}
procedure `long` `timeoutNanos`(`i.l` v2 @kind this) @signature `Li/l;.timeoutNanos:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L213ca0.  v0:= v2.`i.l.a` @type ^`i.a0` @kind object;
  #L213ca4.  call temp:= `timeoutNanos`(v0) @signature `Li/a0;.timeoutNanos:()J` @kind virtual;
  #L213caa.  v0:= temp @kind wide;
  #L213cac.  return v0 @kind wide;
}
