record `i.i` @kind class @AccessFlag PUBLIC_FINAL extends `i.x` @kind interface {
  `boolean` `i.i.f` @AccessFlag PRIVATE;
  `i.f` `i.i.g` @AccessFlag PRIVATE_FINAL;
  `java.util.zip.Deflater` `i.i.h` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`i.i` v1 @kind this, `i.f` v2 @kind object, `java.util.zip.Deflater` v3 @kind object) @signature `Li/i;.<init>:(Li/f;Ljava/util/zip/Deflater;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L213770.  v0:= "sink" @kind object;
  #L213774.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L21377a.  v0:= "deflater" @kind object;
  #L21377e.  call `checkParameterIsNotNull`(v3, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L213784.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L21378a.  v1.`i.i.g` @type ^`i.f` := v2 @kind object;
  #L21378e.  v1.`i.i.h` @type ^`java.util.zip.Deflater` := v3 @kind object;
  #L213792.  return @kind void;
}
procedure `void` `<init>`(`i.i` v1 @kind this, `i.x` v2 @kind object, `java.util.zip.Deflater` v3 @kind object) @signature `Li/i;.<init>:(Li/x;Ljava/util/zip/Deflater;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2137a4.  v0:= "sink" @kind object;
  #L2137a8.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2137ae.  v0:= "deflater" @kind object;
  #L2137b2.  call `checkParameterIsNotNull`(v3, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L2137b8.  call temp:= `buffer`(v2) @signature `Li/p;.buffer:(Li/x;)Li/f;` @kind static;
  #L2137be.  v2:= temp @kind object;
  #L2137c0.  call `<init>`(v1, v2, v3) @signature `Li/i;.<init>:(Li/f;Ljava/util/zip/Deflater;)V` @kind direct;
  #L2137c6.  return @kind void;
}
procedure `void` `a`(`i.i` v7 @kind this, `boolean` v8 ) @signature `Li/i;.a:(Z)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L213854.  v0:= v7.`i.i.g` @type ^`i.f` @kind object;
  #L213858.  call temp:= `getBuffer`(v0) @signature `Li/f;.getBuffer:()Li/e;` @kind interface;
  #L21385e.  v0:= temp @kind object;
  #L213860.  v1:= 1I;
  #L213862.  call temp:= `writableSegment$okio`(v0, v1) @signature `Li/e;.writableSegment$okio:(I)Li/u;` @kind virtual;
  #L213868.  v1:= temp @kind object;
  #L21386a.  if v8 == 0 then goto L21388a;
  #L21386e.  v2:= v7.`i.i.h` @type ^`java.util.zip.Deflater` @kind object;
  #L213872.  v3:= v1.`i.u.a` @type ^`byte`[] @kind object;
  #L213876.  v4:= v1.`i.u.c` @type ^`int`;
  #L21387a.  v5:= v4 - 8192;
  #L21387e.  v6:= 2I;
  #L213880.  call temp:= `deflate`(v2, v3, v4, v5, v6) @signature `Ljava/util/zip/Deflater;.deflate:([BIII)I` @kind virtual;
  #L213886.  v2:= temp;
  #L213888.  goto L2138a2;
  #L21388a.  v2:= v7.`i.i.h` @type ^`java.util.zip.Deflater` @kind object;
  #L21388e.  v3:= v1.`i.u.a` @type ^`byte`[] @kind object;
  #L213892.  v4:= v1.`i.u.c` @type ^`int`;
  #L213896.  v5:= v4 - 8192;
  #L21389a.  call temp:= `deflate`(v2, v3, v4, v5) @signature `Ljava/util/zip/Deflater;.deflate:([BII)I` @kind virtual;
  #L2138a0.  v2:= temp;
  #L2138a2.  if v2 <= 0 then goto L2138ce;
  #L2138a6.  v3:= v1.`i.u.c` @type ^`int`;
  #L2138aa.  v3:= v3 + v2 @kind int;
  #L2138ac.  v1.`i.u.c` @type ^`int` := v3;
  #L2138b0.  call temp:= `size`(v0) @signature `Li/e;.size:()J` @kind virtual;
  #L2138b6.  v3:= temp @kind wide;
  #L2138b8.  v1:= (`long`) v2 @kind i2l;
  #L2138ba.  v3:= v3 + v1 @kind long;
  #L2138bc.  call `setSize$okio`(v0, v3) @signature `Li/e;.setSize$okio:(J)V` @kind virtual;
  #L2138c2.  v1:= v7.`i.i.g` @type ^`i.f` @kind object;
  #L2138c6.  call temp:= `emitCompleteSegments`(v1) @signature `Li/f;.emitCompleteSegments:()Li/f;` @kind interface;
  #L2138cc.  goto L213860;
  #L2138ce.  v2:= v7.`i.i.h` @type ^`java.util.zip.Deflater` @kind object;
  #L2138d2.  call temp:= `needsInput`(v2) @signature `Ljava/util/zip/Deflater;.needsInput:()Z` @kind virtual;
  #L2138d8.  v2:= temp;
  #L2138da.  if v2 == 0 then goto L213860;
  #L2138de.  v8:= v1.`i.u.b` @type ^`int`;
  #L2138e2.  v2:= v1.`i.u.c` @type ^`int`;
  #L2138e6.  if v8 != v2 then goto L213900;
  #L2138ea.  call temp:= `pop`(v1) @signature `Li/u;.pop:()Li/u;` @kind virtual;
  #L2138f0.  v8:= temp @kind object;
  #L2138f2.  v0.`i.e.f` @type ^`i.u` := v8 @kind object;
  #L2138f6.  v8:= `@@i.v.c` @type ^`i.v` @kind object;
  #L2138fa.  call `recycle`(v8, v1) @signature `Li/v;.recycle:(Li/u;)V` @kind virtual;
  #L213900.  return @kind void;
}
procedure `void` `close`(`i.i` v2 @kind this) @signature `Li/i;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2137d8.  v0:= v2.`i.i.f` @type ^`boolean` @kind boolean;
  #L2137dc.  if v0 == 0 then goto L2137e2;
  #L2137e0.  return @kind void;
  #L2137e2.  v0:= 0I;
  #L2137e4.  call `finishDeflate$okio`(v2) @signature `Li/i;.finishDeflate$okio:()V` @kind virtual;
  #L2137ea.  goto L2137ee;
  #L2137ec.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2137ee.  v1:= v2.`i.i.h` @type ^`java.util.zip.Deflater` @kind object;
  #L2137f2.  call `end`(v1) @signature `Ljava/util/zip/Deflater;.end:()V` @kind virtual;
  #L2137f8.  goto L213802;
  #L2137fa.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2137fc.  if v0 != 0 then goto L213802;
  #L213800.  v0:= v1 @kind object;
  #L213802.  v1:= v2.`i.i.g` @type ^`i.f` @kind object;
  #L213806.  call `close`(v1) @signature `Li/x;.close:()V` @kind interface;
  #L21380c.  goto L213816;
  #L21380e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L213810.  if v0 != 0 then goto L213816;
  #L213814.  v0:= v1 @kind object;
  #L213816.  v1:= 1I;
  #L213818.  v2.`i.i.f` @type ^`boolean` := v1 @kind boolean;
  #L21381c.  if v0 != 0 then goto L213822;
  #L213820.  return @kind void;
  #L213822.  throw v0;
  catch `java.lang.Throwable` @[L2137e4..L2137ea] goto L2137ec;
  catch `java.lang.Throwable` @[L2137ee..L2137f8] goto L2137fa;
  catch `java.lang.Throwable` @[L213802..L21380c] goto L21380e;
}
procedure `void` `finishDeflate$okio`(`i.i` v1 @kind this) @signature `Li/i;.finishDeflate$okio:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L213914.  v0:= v1.`i.i.h` @type ^`java.util.zip.Deflater` @kind object;
  #L213918.  call `finish`(v0) @signature `Ljava/util/zip/Deflater;.finish:()V` @kind virtual;
  #L21391e.  v0:= 0I;
  #L213920.  call `a`(v1, v0) @signature `Li/i;.a:(Z)V` @kind direct;
  #L213926.  return @kind void;
}
procedure `void` `flush`(`i.i` v1 @kind this) @signature `Li/i;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213938.  v0:= 1I;
  #L21393a.  call `a`(v1, v0) @signature `Li/i;.a:(Z)V` @kind direct;
  #L213940.  v0:= v1.`i.i.g` @type ^`i.f` @kind object;
  #L213944.  call `flush`(v0) @signature `Li/f;.flush:()V` @kind interface;
  #L21394a.  return @kind void;
}
procedure `i.a0` `timeout`(`i.i` v1 @kind this) @signature `Li/i;.timeout:()Li/a0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213750.  v0:= v1.`i.i.g` @type ^`i.f` @kind object;
  #L213754.  call temp:= `timeout`(v0) @signature `Li/x;.timeout:()Li/a0;` @kind interface;
  #L21375a.  v0:= temp @kind object;
  #L21375c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`i.i` v2 @kind this) @signature `Li/i;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21370c.  v0:= new `java.lang.StringBuilder`;
  #L213710.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L213716.  v1:= "DeflaterSink(" @kind object;
  #L21371a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L213720.  v1:= v2.`i.i.g` @type ^`i.f` @kind object;
  #L213724.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21372a.  v1:= 41I;
  #L21372e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L213734.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21373a.  v0:= temp @kind object;
  #L21373c.  return v0 @kind object;
}
procedure `void` `write`(`i.i` v7 @kind this, `i.e` v8 @kind object, `long` v9 ) @signature `Li/i;.write:(Li/e;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L21395c.  v0:= "source" @kind object;
  #L213960.  call `checkParameterIsNotNull`(v8, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L213966.  call temp:= `size`(v8) @signature `Li/e;.size:()J` @kind virtual;
  #L21396c.  v1:= temp @kind wide;
  #L21396e.  v3:= 0L;
  #L213972.  v5:= v9 @kind wide;
  #L213974.  call `checkOffsetAndCount`(v1, v3, v5) @signature `Li/c;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L21397a.  v0:= 0L;
  #L21397e.  v2:= lcmp(v9, v0);
  #L213982.  if v2 <= 0 then goto L213a0a;
  #L213986.  v0:= v8.`i.e.f` @type ^`i.u` @kind object;
  #L21398a.  if v0 == 0 then goto L213a00;
  #L21398e.  v1:= v0.`i.u.c` @type ^`int`;
  #L213992.  v2:= v0.`i.u.b` @type ^`int`;
  #L213996.  v1:= v1 - v2 @kind int;
  #L213998.  v1:= (`long`) v1 @kind i2l;
  #L21399a.  call temp:= `min`(v9, v1) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L2139a0.  v1:= temp @kind wide;
  #L2139a2.  v2:= (`int`) v1 @kind l2i;
  #L2139a4.  v1:= v7.`i.i.h` @type ^`java.util.zip.Deflater` @kind object;
  #L2139a8.  v3:= v0.`i.u.a` @type ^`byte`[] @kind object;
  #L2139ac.  v4:= v0.`i.u.b` @type ^`int`;
  #L2139b0.  call `setInput`(v1, v3, v4, v2) @signature `Ljava/util/zip/Deflater;.setInput:([BII)V` @kind virtual;
  #L2139b6.  v1:= 0I;
  #L2139b8.  call `a`(v7, v1) @signature `Li/i;.a:(Z)V` @kind direct;
  #L2139be.  call temp:= `size`(v8) @signature `Li/e;.size:()J` @kind virtual;
  #L2139c4.  v3:= temp @kind wide;
  #L2139c6.  v5:= (`long`) v2 @kind i2l;
  #L2139c8.  v3:= v3 - v5 @kind long;
  #L2139ca.  call `setSize$okio`(v8, v3) @signature `Li/e;.setSize$okio:(J)V` @kind virtual;
  #L2139d0.  v1:= v0.`i.u.b` @type ^`int`;
  #L2139d4.  v1:= v1 + v2 @kind int;
  #L2139d6.  v0.`i.u.b` @type ^`int` := v1;
  #L2139da.  v1:= v0.`i.u.b` @type ^`int`;
  #L2139de.  v2:= v0.`i.u.c` @type ^`int`;
  #L2139e2.  if v1 != v2 then goto L2139fc;
  #L2139e6.  call temp:= `pop`(v0) @signature `Li/u;.pop:()Li/u;` @kind virtual;
  #L2139ec.  v1:= temp @kind object;
  #L2139ee.  v8.`i.e.f` @type ^`i.u` := v1 @kind object;
  #L2139f2.  v1:= `@@i.v.c` @type ^`i.v` @kind object;
  #L2139f6.  call `recycle`(v1, v0) @signature `Li/v;.recycle:(Li/u;)V` @kind virtual;
  #L2139fc.  v9:= v9 - v5 @kind long;
  #L2139fe.  goto L21397a;
  #L213a00.  call `throwNpe`() @signature `Lkotlin/v/c/i;.throwNpe:()V` @kind static;
  #L213a06.  v8:= 0I;
  #L213a08.  throw v8;
  #L213a0a.  return @kind void;
}
