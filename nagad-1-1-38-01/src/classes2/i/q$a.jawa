record `i.q$a` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`i.q$a` v0 @kind this) @signature `Li/q$a;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L214cd8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L214cde.  return @kind void;
}
procedure `void` `<init>`(`i.q$a` v0 @kind this, `kotlin.v.c.f` v1 @kind object) @signature `Li/q$a;.<init>:(Lkotlin/v/c/f;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L214cf0.  call `<init>`(v0) @signature `Li/q$a;.<init>:()V` @kind direct;
  #L214cf6.  return @kind void;
}
procedure `long` `a`(`i.q$a` v4 @kind this, `i.e` v5 @kind object) @signature `Li/q$a;.a:(Li/e;)J` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L214a08.  call temp:= `size`(v5) @signature `Li/e;.size:()J` @kind virtual;
  #L214a0e.  v0:= temp @kind wide;
  #L214a10.  v5:= 4I;
  #L214a12.  v2:= (`long`) v5 @kind i2l;
  #L214a14.  v0:= v0 / v2 @kind long;
  #L214a16.  return v0 @kind wide;
}
procedure `void` `a`(`i.q$a` v19 @kind this, `long` v20 , `i.e` v22 @kind object, `int` v23 , `java.util.List` v24 @kind object, `int` v25 , `int` v26 , `java.util.List` v27 @kind object) @signature `Li/q$a;.a:(JLi/e;ILjava/util/List;IILjava/util/List;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;

  #L214d78.  v9:= v19 @kind object;
  #L214d7c.  v10:= v22 @kind object;
  #L214d80.  v11:= v23;
  #L214d84.  v12:= v24 @kind object;
  #L214d88.  v0:= v25;
  #L214d8c.  v13:= v26;
  #L214d90.  v14:= v27 @kind object;
  #L214d94.  if v0 >= v13 then goto L214d9c;
  #L214d98.  v3:= 1I;
  #L214d9a.  goto L214d9e;
  #L214d9c.  v3:= 0I;
  #L214d9e.  v4:= "Failed requirement." @kind object;
  #L214da2.  if v3 == 0 then goto L215118;
  #L214da6.  v3:= v0;
  #L214da8.  if v3 >= v13 then goto L214de8;
  #L214dac.  call temp:= `get`(v12, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L214db2.  v5:= temp @kind object;
  #L214db4.  v5:= (`i.h`) v5 @kind object;
  #L214db8.  call temp:= `size`(v5) @signature `Li/h;.size:()I` @kind virtual;
  #L214dbe.  v5:= temp;
  #L214dc0.  if v5 < v11 then goto L214dc8;
  #L214dc4.  v5:= 1I;
  #L214dc6.  goto L214dca;
  #L214dc8.  v5:= 0I;
  #L214dca.  if v5 == 0 then goto L214dd4;
  #L214dce.  v3:= v3 + 1;
  #L214dd2.  goto L214da8;
  #L214dd4.  v0:= new `java.lang.IllegalArgumentException`;
  #L214dd8.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L214dde.  v1:= temp @kind object;
  #L214de0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L214de6.  throw v0;
  #L214de8.  call temp:= `get`(v24, v25) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L214dee.  v3:= temp @kind object;
  #L214df0.  v3:= (`i.h`) v3 @kind object;
  #L214df4.  v4:= v13 + -1;
  #L214df8.  call temp:= `get`(v12, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L214dfe.  v4:= temp @kind object;
  #L214e00.  v4:= (`i.h`) v4 @kind object;
  #L214e04.  call temp:= `size`(v3) @signature `Li/h;.size:()I` @kind virtual;
  #L214e0a.  v5:= temp;
  #L214e0c.  v15:= -1I;
  #L214e0e.  if v11 != v5 then goto L214e3e;
  #L214e12.  call temp:= `get`(v14, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L214e18.  v3:= temp @kind object;
  #L214e1a.  v3:= (`java.lang.Number`) v3 @kind object;
  #L214e1e.  call temp:= `intValue`(v3) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L214e24.  v3:= temp;
  #L214e26.  v0:= v0 + 1;
  #L214e2a.  call temp:= `get`(v12, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L214e30.  v5:= temp @kind object;
  #L214e32.  v5:= (`i.h`) v5 @kind object;
  #L214e36.  v6:= v0;
  #L214e38.  v0:= v3;
  #L214e3a.  v3:= v5 @kind object;
  #L214e3c.  goto L214e42;
  #L214e3e.  v6:= v0;
  #L214e40.  v0:= -1I;
  #L214e42.  call temp:= `getByte`(v3, v11) @signature `Li/h;.getByte:(I)B` @kind virtual;
  #L214e48.  v5:= temp;
  #L214e4a.  call temp:= `getByte`(v4, v11) @signature `Li/h;.getByte:(I)B` @kind virtual;
  #L214e50.  v7:= temp;
  #L214e52.  v8:= 2I;
  #L214e54.  if v5 == v7 then goto L214fee;
  #L214e58.  v1:= v6 + 1;
  #L214e5c.  v2:= 1I;
  #L214e5e.  if v1 >= v13 then goto L214e9c;
  #L214e62.  v3:= v1 + -1;
  #L214e66.  call temp:= `get`(v12, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L214e6c.  v3:= temp @kind object;
  #L214e6e.  v3:= (`i.h`) v3 @kind object;
  #L214e72.  call temp:= `getByte`(v3, v11) @signature `Li/h;.getByte:(I)B` @kind virtual;
  #L214e78.  v3:= temp;
  #L214e7a.  call temp:= `get`(v12, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L214e80.  v4:= temp @kind object;
  #L214e82.  v4:= (`i.h`) v4 @kind object;
  #L214e86.  call temp:= `getByte`(v4, v11) @signature `Li/h;.getByte:(I)B` @kind virtual;
  #L214e8c.  v4:= temp;
  #L214e8e.  if v3 == v4 then goto L214e96;
  #L214e92.  v2:= v2 + 1;
  #L214e96.  v1:= v1 + 1;
  #L214e9a.  goto L214e5e;
  #L214e9c.  call temp:= `a`(v9, v10) @signature `Li/q$a;.a:(Li/e;)J` @kind direct;
  #L214ea2.  v3:= temp @kind wide;
  #L214ea4.  v3:= v20 + v3 @kind long;
  #L214ea8.  v7:= (`long`) v8 @kind i2l;
  #L214eaa.  v3:= v3 + v7 @kind long;
  #L214eac.  v1:= v2 * 2;
  #L214eb0.  v7:= (`long`) v1 @kind i2l;
  #L214eb2.  v16:= v3 + v7 @kind long;
  #L214eb6.  call temp:= `writeInt`(v10, v2) @signature `Li/e;.writeInt:(I)Li/e;` @kind virtual;
  #L214ebc.  call temp:= `writeInt`(v10, v0) @signature `Li/e;.writeInt:(I)Li/e;` @kind virtual;
  #L214ec2.  v0:= v6;
  #L214ec4.  if v0 >= v13 then goto L214f0c;
  #L214ec8.  call temp:= `get`(v12, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L214ece.  v1:= temp @kind object;
  #L214ed0.  v1:= (`i.h`) v1 @kind object;
  #L214ed4.  call temp:= `getByte`(v1, v11) @signature `Li/h;.getByte:(I)B` @kind virtual;
  #L214eda.  v1:= temp;
  #L214edc.  if v0 == v6 then goto L214efc;
  #L214ee0.  v2:= v0 + -1;
  #L214ee4.  call temp:= `get`(v12, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L214eea.  v2:= temp @kind object;
  #L214eec.  v2:= (`i.h`) v2 @kind object;
  #L214ef0.  call temp:= `getByte`(v2, v11) @signature `Li/h;.getByte:(I)B` @kind virtual;
  #L214ef6.  v2:= temp;
  #L214ef8.  if v1 == v2 then goto L214f06;
  #L214efc.  v1:= v1 ^& 255;
  #L214f00.  call temp:= `writeInt`(v10, v1) @signature `Li/e;.writeInt:(I)Li/e;` @kind virtual;
  #L214f06.  v0:= v0 + 1;
  #L214f0a.  goto L214ec4;
  #L214f0c.  v8:= new `i.e`;
  #L214f10.  call `<init>`(v8) @signature `Li/e;.<init>:()V` @kind direct;
  #L214f16.  if v6 >= v13 then goto L214fe2;
  #L214f1a.  call temp:= `get`(v12, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L214f20.  v0:= temp @kind object;
  #L214f22.  v0:= (`i.h`) v0 @kind object;
  #L214f26.  call temp:= `getByte`(v0, v11) @signature `Li/h;.getByte:(I)B` @kind virtual;
  #L214f2c.  v0:= temp;
  #L214f2e.  v1:= v6 + 1;
  #L214f32.  v2:= v1;
  #L214f34.  if v2 >= v13 then goto L214f5a;
  #L214f38.  call temp:= `get`(v12, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L214f3e.  v3:= temp @kind object;
  #L214f40.  v3:= (`i.h`) v3 @kind object;
  #L214f44.  call temp:= `getByte`(v3, v11) @signature `Li/h;.getByte:(I)B` @kind virtual;
  #L214f4a.  v3:= temp;
  #L214f4c.  if v0 == v3 then goto L214f54;
  #L214f50.  v7:= v2;
  #L214f52.  goto L214f5c;
  #L214f54.  v2:= v2 + 1;
  #L214f58.  goto L214f34;
  #L214f5a.  v7:= v13;
  #L214f5c.  if v1 != v7 then goto L214f9e;
  #L214f60.  v0:= v11 + 1;
  #L214f64.  call temp:= `get`(v12, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L214f6a.  v1:= temp @kind object;
  #L214f6c.  v1:= (`i.h`) v1 @kind object;
  #L214f70.  call temp:= `size`(v1) @signature `Li/h;.size:()I` @kind virtual;
  #L214f76.  v1:= temp;
  #L214f78.  if v0 != v1 then goto L214f9e;
  #L214f7c.  call temp:= `get`(v14, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L214f82.  v0:= temp @kind object;
  #L214f84.  v0:= (`java.lang.Number`) v0 @kind object;
  #L214f88.  call temp:= `intValue`(v0) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L214f8e.  v0:= temp;
  #L214f90.  call temp:= `writeInt`(v10, v0) @signature `Li/e;.writeInt:(I)Li/e;` @kind virtual;
  #L214f96.  v18:= v7;
  #L214f9a.  v15:= v8 @kind object;
  #L214f9c.  goto L214fd8;
  #L214f9e.  call temp:= `a`(v9, v8) @signature `Li/q$a;.a:(Li/e;)J` @kind direct;
  #L214fa4.  v0:= temp @kind wide;
  #L214fa6.  v0:= v16 + v0 @kind long;
  #L214faa.  v1:= (`int`) v0 @kind l2i;
  #L214fac.  v1:= v1 * -1;
  #L214fb0.  call temp:= `writeInt`(v10, v1) @signature `Li/e;.writeInt:(I)Li/e;` @kind virtual;
  #L214fb6.  v4:= v11 + 1;
  #L214fba.  v0:= v19 @kind object;
  #L214fbe.  v1:= v16 @kind wide;
  #L214fc2.  v3:= v8 @kind object;
  #L214fc4.  v5:= v24 @kind object;
  #L214fc8.  v18:= v7;
  #L214fcc.  v15:= v8 @kind object;
  #L214fce.  v8:= v27 @kind object;
  #L214fd2.  call `a`(v0, v1, v3, v4, v5, v6, v7, v8) @signature `Li/q$a;.a:(JLi/e;ILjava/util/List;IILjava/util/List;)V` @kind direct;
  #L214fd8.  v8:= v15 @kind object;
  #L214fda.  v6:= v18;
  #L214fde.  v15:= -1I;
  #L214fe0.  goto L214f16;
  #L214fe2.  v15:= v8 @kind object;
  #L214fe4.  call temp:= `writeAll`(v10, v15) @signature `Li/e;.writeAll:(Li/z;)J` @kind virtual;
  #L214fea.  goto L215116;
  #L214fee.  call temp:= `size`(v3) @signature `Li/h;.size:()I` @kind virtual;
  #L214ff4.  v5:= temp;
  #L214ff6.  call temp:= `size`(v4) @signature `Li/h;.size:()I` @kind virtual;
  #L214ffc.  v7:= temp;
  #L214ffe.  call temp:= `min`(v5, v7) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L215004.  v5:= temp;
  #L215006.  v7:= v11;
  #L215008.  v15:= 0I;
  #L21500a.  if v7 >= v5 then goto L21502c;
  #L21500e.  call temp:= `getByte`(v3, v7) @signature `Li/h;.getByte:(I)B` @kind virtual;
  #L215014.  v1:= temp;
  #L215016.  call temp:= `getByte`(v4, v7) @signature `Li/h;.getByte:(I)B` @kind virtual;
  #L21501c.  v2:= temp;
  #L21501e.  if v1 != v2 then goto L21502c;
  #L215022.  v15:= v15 + 1;
  #L215026.  v7:= v7 + 1;
  #L21502a.  goto L21500a;
  #L21502c.  call temp:= `a`(v9, v10) @signature `Li/q$a;.a:(Li/e;)J` @kind direct;
  #L215032.  v1:= temp @kind wide;
  #L215034.  v1:= v20 + v1 @kind long;
  #L215038.  v4:= (`long`) v8 @kind i2l;
  #L21503a.  v1:= v1 + v4 @kind long;
  #L21503c.  v4:= (`long`) v15 @kind i2l;
  #L21503e.  v1:= v1 + v4 @kind long;
  #L215040.  v4:= 1L;
  #L215044.  v1:= v1 + v4 @kind long;
  #L215046.  v4:= -v15 @kind int;
  #L215048.  call temp:= `writeInt`(v10, v4) @signature `Li/e;.writeInt:(I)Li/e;` @kind virtual;
  #L21504e.  call temp:= `writeInt`(v10, v0) @signature `Li/e;.writeInt:(I)Li/e;` @kind virtual;
  #L215054.  v4:= v11 + v15 @kind int;
  #L215058.  if v11 >= v4 then goto L215074;
  #L21505c.  call temp:= `getByte`(v3, v11) @signature `Li/h;.getByte:(I)B` @kind virtual;
  #L215062.  v0:= temp;
  #L215064.  v0:= v0 ^& 255;
  #L215068.  call temp:= `writeInt`(v10, v0) @signature `Li/e;.writeInt:(I)Li/e;` @kind virtual;
  #L21506e.  v11:= v11 + 1;
  #L215072.  goto L215058;
  #L215074.  v0:= v6 + 1;
  #L215078.  if v0 != v13 then goto L2150d6;
  #L21507c.  call temp:= `get`(v12, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L215082.  v0:= temp @kind object;
  #L215084.  v0:= (`i.h`) v0 @kind object;
  #L215088.  call temp:= `size`(v0) @signature `Li/h;.size:()I` @kind virtual;
  #L21508e.  v0:= temp;
  #L215090.  if v4 != v0 then goto L21509a;
  #L215094.  v16:= 1I;
  #L215098.  goto L21509e;
  #L21509a.  v16:= 0I;
  #L21509e.  if v16 == 0 then goto L2150be;
  #L2150a2.  call temp:= `get`(v14, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2150a8.  v0:= temp @kind object;
  #L2150aa.  v0:= (`java.lang.Number`) v0 @kind object;
  #L2150ae.  call temp:= `intValue`(v0) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L2150b4.  v0:= temp;
  #L2150b6.  call temp:= `writeInt`(v10, v0) @signature `Li/e;.writeInt:(I)Li/e;` @kind virtual;
  #L2150bc.  goto L215116;
  #L2150be.  v0:= new `java.lang.IllegalStateException`;
  #L2150c2.  v1:= "Check failed." @kind object;
  #L2150c6.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2150cc.  v1:= temp @kind object;
  #L2150ce.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2150d4.  throw v0;
  #L2150d6.  v11:= new `i.e`;
  #L2150da.  call `<init>`(v11) @signature `Li/e;.<init>:()V` @kind direct;
  #L2150e0.  call temp:= `a`(v9, v11) @signature `Li/q$a;.a:(Li/e;)J` @kind direct;
  #L2150e6.  v7:= temp @kind wide;
  #L2150e8.  v7:= v7 + v1 @kind long;
  #L2150ea.  v0:= (`int`) v7 @kind l2i;
  #L2150ec.  v3:= -1I;
  #L2150ee.  v0:= v0 * -1;
  #L2150f2.  call temp:= `writeInt`(v10, v0) @signature `Li/e;.writeInt:(I)Li/e;` @kind virtual;
  #L2150f8.  v0:= v19 @kind object;
  #L2150fc.  v3:= v11 @kind object;
  #L2150fe.  v5:= v24 @kind object;
  #L215102.  v7:= v26;
  #L215106.  v8:= v27 @kind object;
  #L21510a.  call `a`(v0, v1, v3, v4, v5, v6, v7, v8) @signature `Li/q$a;.a:(JLi/e;ILjava/util/List;IILjava/util/List;)V` @kind direct;
  #L215110.  call temp:= `writeAll`(v10, v11) @signature `Li/e;.writeAll:(Li/z;)J` @kind virtual;
  #L215116.  return @kind void;
  #L215118.  v0:= new `java.lang.IllegalArgumentException`;
  #L21511c.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L215122.  v1:= temp @kind object;
  #L215124.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21512a.  throw v0;
}
procedure `void` `a`(`i.q$a` v11 @kind object, `long` v12 , `i.e` v14 @kind object, `int` v15 , `java.util.List` v16 @kind object, `int` v17 , `int` v18 , `java.util.List` v19 @kind object, `int` v20 , `java.lang.Object` v21 @kind object) @signature `Li/q$a;.a:(Li/q$a;JLi/e;ILjava/util/List;IILjava/util/List;ILjava/lang/Object;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L214d08.  v0:= v20 ^& 1;
  #L214d0c.  if v0 == 0 then goto L214d18;
  #L214d10.  v0:= 0L;
  #L214d14.  v3:= v0 @kind wide;
  #L214d16.  goto L214d1a;
  #L214d18.  v3:= v12 @kind wide;
  #L214d1a.  v0:= v20 ^& 4;
  #L214d1e.  v1:= 0I;
  #L214d20.  if v0 == 0 then goto L214d28;
  #L214d24.  v6:= 0I;
  #L214d26.  goto L214d2a;
  #L214d28.  v6:= v15;
  #L214d2a.  v0:= v20 ^& 16;
  #L214d2e.  if v0 == 0 then goto L214d36;
  #L214d32.  v8:= 0I;
  #L214d34.  goto L214d3a;
  #L214d36.  v8:= v17;
  #L214d3a.  v0:= v20 ^& 32;
  #L214d3e.  if v0 == 0 then goto L214d4e;
  #L214d42.  call temp:= `size`(v16) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L214d48.  v0:= temp;
  #L214d4a.  v9:= v0;
  #L214d4c.  goto L214d52;
  #L214d4e.  v9:= v18;
  #L214d52.  v2:= v11 @kind object;
  #L214d54.  v5:= v14 @kind object;
  #L214d56.  v7:= v16 @kind object;
  #L214d5a.  v10:= v19 @kind object;
  #L214d5e.  call `a`(v2, v3, v5, v6, v7, v8, v9, v10) @signature `Li/q$a;.a:(JLi/e;ILjava/util/List;IILjava/util/List;)V` @kind direct;
  #L214d64.  return @kind void;
}
procedure `i.q` `of`(`i.q$a` v16 @kind this, `i.h`[] v17 @kind object) @signature `Li/q$a;.of:([Li/h;)Li/q;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L214a28.  v0:= v17 @kind object;
  #L214a2c.  v1:= "byteStrings" @kind object;
  #L214a30.  call `checkParameterIsNotNull`(v0, v1) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L214a36.  v1:= length @variable v0;
  #L214a38.  v2:= 1I;
  #L214a3a.  v3:= 0I;
  #L214a3c.  if v1 != 0 then goto L214a44;
  #L214a40.  v1:= 1I;
  #L214a42.  goto L214a46;
  #L214a44.  v1:= 0I;
  #L214a46.  v4:= 0I;
  #L214a48.  if v1 == 0 then goto L214a68;
  #L214a4c.  v0:= new `i.q`;
  #L214a50.  v1:= new `i.h`[v3];
  #L214a54.  v2:= 2I;
  #L214a56.  v2:= new `int`[v2];
  #L214a5a.  goto L214cb8;
  #L214a60.  call `<init>`(v0, v1, v2, v4) @signature `Li/q;.<init>:([Li/h;[ILkotlin/v/c/f;)V` @kind direct;
  #L214a66.  return v0 @kind object;
  #L214a68.  call temp:= `toMutableList`(v17) @signature `Lkotlin/r/d;.toMutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L214a6e.  v1:= temp @kind object;
  #L214a70.  call `sort`(v1) @signature `Lkotlin/r/j;.sort:(Ljava/util/List;)V` @kind static;
  #L214a76.  v5:= new `java.util.ArrayList`;
  #L214a7a.  v6:= length @variable v0;
  #L214a7c.  call `<init>`(v5, v6) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L214a82.  v6:= length @variable v0;
  #L214a84.  v7:= 0I;
  #L214a86.  if v7 >= v6 then goto L214aa4;
  #L214a8a.  v8:= v0[v7] @kind object;
  #L214a8e.  v8:= -1I;
  #L214a90.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L214a96.  v8:= temp @kind object;
  #L214a98.  call temp:= `add`(v5, v8) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L214a9e.  v7:= v7 + 1;
  #L214aa2.  goto L214a86;
  #L214aa4.  v6:= new `java.lang.Integer`[v3];
  #L214aa8.  call temp:= `toArray`(v5, v6) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L214aae.  v5:= temp @kind object;
  #L214ab0.  if v5 == 0 then goto L214ca2;
  #L214ab4.  v5:= (`java.lang.Integer`[]) v5 @kind object;
  #L214ab8.  v6:= length @variable v5;
  #L214aba.  call temp:= `copyOf`(v5, v6) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L214ac0.  v5:= temp @kind object;
  #L214ac2.  v5:= (`java.lang.Integer`[]) v5 @kind object;
  #L214ac6.  call temp:= `mutableListOf`(v5) @signature `Lkotlin/r/j;.mutableListOf:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L214acc.  v13:= temp @kind object;
  #L214ace.  v11:= length @variable v0;
  #L214ad0.  v12:= 0I;
  #L214ad2.  v14:= 0I;
  #L214ad4.  if v12 >= v11 then goto L214b08;
  #L214ad8.  v6:= v0[v12] @kind object;
  #L214adc.  v15:= v14 + 1;
  #L214ae0.  v7:= 0I;
  #L214ae2.  v8:= 0I;
  #L214ae4.  v9:= 6I;
  #L214ae6.  v10:= 0I;
  #L214ae8.  v5:= v1 @kind object;
  #L214aea.  call temp:= `binarySearch$default`(v5, v6, v7, v8, v9, v10) @signature `Lkotlin/r/j;.binarySearch$default:(Ljava/util/List;Ljava/lang/Comparable;IIILjava/lang/Object;)I` @kind static;
  #L214af0.  v5:= temp;
  #L214af2.  call temp:= `valueOf`(v14) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L214af8.  v6:= temp @kind object;
  #L214afa.  call temp:= `set`(v13, v5, v6) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L214b00.  v12:= v12 + 1;
  #L214b04.  v14:= v15;
  #L214b06.  goto L214ad4;
  #L214b08.  call temp:= `get`(v1, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L214b0e.  v5:= temp @kind object;
  #L214b10.  v5:= (`i.h`) v5 @kind object;
  #L214b14.  call temp:= `size`(v5) @signature `Li/h;.size:()I` @kind virtual;
  #L214b1a.  v5:= temp;
  #L214b1c.  if v5 <= 0 then goto L214b24;
  #L214b20.  v5:= 1I;
  #L214b22.  goto L214b26;
  #L214b24.  v5:= 0I;
  #L214b26.  if v5 == 0 then goto L214c86;
  #L214b2a.  v5:= 0I;
  #L214b2c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L214b32.  v6:= temp;
  #L214b34.  if v5 >= v6 then goto L214c08;
  #L214b38.  call temp:= `get`(v1, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L214b3e.  v6:= temp @kind object;
  #L214b40.  v6:= (`i.h`) v6 @kind object;
  #L214b44.  v7:= v5 + 1;
  #L214b48.  v8:= v7;
  #L214b4a.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L214b50.  v9:= temp;
  #L214b52.  if v8 >= v9 then goto L214c04;
  #L214b56.  call temp:= `get`(v1, v8) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L214b5c.  v9:= temp @kind object;
  #L214b5e.  v9:= (`i.h`) v9 @kind object;
  #L214b62.  call temp:= `startsWith`(v9, v6) @signature `Li/h;.startsWith:(Li/h;)Z` @kind virtual;
  #L214b68.  v10:= temp;
  #L214b6a.  if v10 != 0 then goto L214b70;
  #L214b6e.  goto L214c04;
  #L214b70.  call temp:= `size`(v9) @signature `Li/h;.size:()I` @kind virtual;
  #L214b76.  v10:= temp;
  #L214b78.  call temp:= `size`(v6) @signature `Li/h;.size:()I` @kind virtual;
  #L214b7e.  v11:= temp;
  #L214b80.  if v10 == v11 then goto L214b88;
  #L214b84.  v10:= 1I;
  #L214b86.  goto L214b8a;
  #L214b88.  v10:= 0I;
  #L214b8a.  if v10 == 0 then goto L214bce;
  #L214b8e.  call temp:= `get`(v13, v8) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L214b94.  v9:= temp @kind object;
  #L214b96.  v9:= (`java.lang.Number`) v9 @kind object;
  #L214b9a.  call temp:= `intValue`(v9) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L214ba0.  v9:= temp;
  #L214ba2.  call temp:= `get`(v13, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L214ba8.  v10:= temp @kind object;
  #L214baa.  v10:= (`java.lang.Number`) v10 @kind object;
  #L214bae.  call temp:= `intValue`(v10) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L214bb4.  v10:= temp;
  #L214bb6.  if v9 <= v10 then goto L214bc8;
  #L214bba.  call temp:= `remove`(v1, v8) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L214bc0.  call temp:= `remove`(v13, v8) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L214bc6.  goto L214b4a;
  #L214bc8.  v8:= v8 + 1;
  #L214bcc.  goto L214b4a;
  #L214bce.  v0:= new `java.lang.StringBuilder`;
  #L214bd2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L214bd8.  v1:= "duplicate option: " @kind object;
  #L214bdc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L214be2.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L214be8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L214bee.  v0:= temp @kind object;
  #L214bf0.  v1:= new `java.lang.IllegalArgumentException`;
  #L214bf4.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L214bfa.  v0:= temp @kind object;
  #L214bfc.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L214c02.  throw v1;
  #L214c04.  v5:= v7;
  #L214c06.  goto L214b2c;
  #L214c08.  v2:= new `i.e`;
  #L214c0c.  call `<init>`(v2) @signature `Li/e;.<init>:()V` @kind direct;
  #L214c12.  v6:= 0L;
  #L214c16.  v9:= 0I;
  #L214c18.  v11:= 0I;
  #L214c1a.  v12:= 0I;
  #L214c1c.  v14:= 53I;
  #L214c20.  v15:= 0I;
  #L214c22.  v5:= v16 @kind object;
  #L214c26.  v8:= v2 @kind object;
  #L214c28.  v10:= v1 @kind object;
  #L214c2a.  call `a`(v5, v6, v8, v9, v10, v11, v12, v13, v14, v15) @signature `Li/q$a;.a:(Li/q$a;JLi/e;ILjava/util/List;IILjava/util/List;ILjava/lang/Object;)V` @kind static;
  #L214c30.  v1:= v16 @kind object;
  #L214c34.  call temp:= `a`(v1, v2) @signature `Li/q$a;.a:(Li/e;)J` @kind direct;
  #L214c3a.  v5:= temp @kind wide;
  #L214c3c.  v6:= (`int`) v5 @kind l2i;
  #L214c3e.  v5:= new `int`[v6];
  #L214c42.  call temp:= `exhausted`(v2) @signature `Li/e;.exhausted:()Z` @kind virtual;
  #L214c48.  v6:= temp;
  #L214c4a.  if v6 != 0 then goto L214c62;
  #L214c4e.  v6:= v3 + 1;
  #L214c52.  call temp:= `readInt`(v2) @signature `Li/e;.readInt:()I` @kind virtual;
  #L214c58.  v7:= temp;
  #L214c5a.  v5[v3]:= v7;
  #L214c5e.  v3:= v6;
  #L214c60.  goto L214c42;
  #L214c62.  v2:= length @variable v0;
  #L214c64.  call temp:= `copyOf`(v0, v2) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L214c6a.  v0:= temp @kind object;
  #L214c6c.  v2:= "java.util.Arrays.copyOf(this, size)" @kind object;
  #L214c70.  call `checkExpressionValueIsNotNull`(v0, v2) @signature `Lkotlin/v/c/i;.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L214c76.  v0:= (`i.h`[]) v0 @kind object;
  #L214c7a.  v2:= new `i.q`;
  #L214c7e.  call `<init>`(v2, v0, v5, v4) @signature `Li/q;.<init>:([Li/h;[ILkotlin/v/c/f;)V` @kind direct;
  #L214c84.  return v2 @kind object;
  #L214c86.  v1:= v16 @kind object;
  #L214c8a.  v0:= new `java.lang.IllegalArgumentException`;
  #L214c8e.  v2:= "the empty byte string is not a supported option" @kind object;
  #L214c92.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L214c98.  v2:= temp @kind object;
  #L214c9a.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L214ca0.  throw v0;
  #L214ca2.  v1:= v16 @kind object;
  #L214ca6.  v0:= new `kotlin.TypeCastException`;
  #L214caa.  v2:= "null cannot be cast to non-null type kotlin.Array<T>" @kind object;
  #L214cae.  call `<init>`(v0, v2) @signature `Lkotlin/TypeCastException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L214cb4.  throw v0;
  #L214cb6.  
  #L214cb8.  v2:= (0I, -1I) @kind object;
  #L214cc7.  goto L214a60;
}
