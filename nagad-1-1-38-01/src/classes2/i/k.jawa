record `i.k` @kind class @AccessFlag PUBLIC_ABSTRACT extends `i.z` @kind interface {
  `i.z` `i.k.delegate` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`i.k` v1 @kind this, `i.z` v2 @kind object) @signature `Li/k;.<init>:(Li/z;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L213c1c.  v0:= "delegate" @kind object;
  #L213c20.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L213c26.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L213c2c.  v1.`i.k.delegate` @type ^`i.z` := v2 @kind object;
  #L213c30.  return @kind void;
}
procedure `i.z` `-deprecated_delegate`(`i.k` v1 @kind this) @signature `Li/k;.-deprecated_delegate:()Li/z;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L213bcc.  v0:= v1.`i.k.delegate` @type ^`i.z` @kind object;
  #L213bd0.  return v0 @kind object;
}
procedure `void` `close`(`i.k` v1 @kind this) @signature `Li/k;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213c44.  v0:= v1.`i.k.delegate` @type ^`i.z` @kind object;
  #L213c48.  call `close`(v0) @signature `Li/z;.close:()V` @kind interface;
  #L213c4e.  return @kind void;
}
procedure `i.z` `delegate`(`i.k` v1 @kind this) @signature `Li/k;.delegate:()Li/z;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L213be4.  v0:= v1.`i.k.delegate` @type ^`i.z` @kind object;
  #L213be8.  return v0 @kind object;
}
procedure `long` `read`(`i.k` v1 @kind this, `i.e` v2 @kind object, `long` v3 ) @signature `Li/k;.read:(Li/e;J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213ba4.  v0:= "sink" @kind object;
  #L213ba8.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L213bae.  v0:= v1.`i.k.delegate` @type ^`i.z` @kind object;
  #L213bb2.  call temp:= `read`(v0, v2, v3) @signature `Li/z;.read:(Li/e;J)J` @kind interface;
  #L213bb8.  v2:= temp @kind wide;
  #L213bba.  return v2 @kind wide;
}
procedure `i.a0` `timeout`(`i.k` v1 @kind this) @signature `Li/k;.timeout:()Li/a0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213bfc.  v0:= v1.`i.k.delegate` @type ^`i.z` @kind object;
  #L213c00.  call temp:= `timeout`(v0) @signature `Li/z;.timeout:()Li/a0;` @kind interface;
  #L213c06.  v0:= temp @kind object;
  #L213c08.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`i.k` v2 @kind this) @signature `Li/k;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L213b4c.  v0:= new `java.lang.StringBuilder`;
  #L213b50.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L213b56.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L213b5c.  v1:= temp @kind object;
  #L213b5e.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L213b64.  v1:= temp @kind object;
  #L213b66.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L213b6c.  v1:= 40I;
  #L213b70.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L213b76.  v1:= v2.`i.k.delegate` @type ^`i.z` @kind object;
  #L213b7a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L213b80.  v1:= 41I;
  #L213b84.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L213b8a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L213b90.  v0:= temp @kind object;
  #L213b92.  return v0 @kind object;
}
