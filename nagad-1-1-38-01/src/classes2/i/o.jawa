record `i.o` @kind class @AccessFlag FINAL extends `i.z` @kind interface {
  `java.io.InputStream` `i.o.f` @AccessFlag PRIVATE_FINAL;
  `i.a0` `i.o.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`i.o` v1 @kind this, `java.io.InputStream` v2 @kind object, `i.a0` v3 @kind object) @signature `Li/o;.<init>:(Ljava/io/InputStream;Li/a0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L21474c.  v0:= "input" @kind object;
  #L214750.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L214756.  v0:= "timeout" @kind object;
  #L21475a.  call `checkParameterIsNotNull`(v3, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L214760.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L214766.  v1.`i.o.f` @type ^`java.io.InputStream` := v2 @kind object;
  #L21476a.  v1.`i.o.g` @type ^`i.a0` := v3 @kind object;
  #L21476e.  return @kind void;
}
procedure `void` `close`(`i.o` v1 @kind this) @signature `Li/o;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214780.  v0:= v1.`i.o.f` @type ^`java.io.InputStream` @kind object;
  #L214784.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L21478a.  return @kind void;
}
procedure `long` `read`(`i.o` v3 @kind this, `i.e` v4 @kind object, `long` v5 ) @signature `Li/o;.read:(Li/e;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L214634.  v0:= "sink" @kind object;
  #L214638.  call `checkParameterIsNotNull`(v4, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L21463e.  v0:= 0L;
  #L214642.  v2:= lcmp(v5, v0);
  #L214646.  if v2 != 0 then goto L21464c;
  #L21464a.  return v0 @kind wide;
  #L21464c.  v0:= 1I;
  #L21464e.  if v2 < 0 then goto L214656;
  #L214652.  v1:= 1I;
  #L214654.  goto L214658;
  #L214656.  v1:= 0I;
  #L214658.  if v1 == 0 then goto L2146dc;
  #L21465c.  v1:= v3.`i.o.g` @type ^`i.a0` @kind object;
  #L214660.  call `throwIfReached`(v1) @signature `Li/a0;.throwIfReached:()V` @kind virtual;
  #L214666.  call temp:= `writableSegment$okio`(v4, v0) @signature `Li/e;.writableSegment$okio:(I)Li/u;` @kind virtual;
  #L21466c.  v0:= temp @kind object;
  #L21466e.  v1:= v0.`i.u.c` @type ^`int`;
  #L214672.  v1:= v1 - 8192;
  #L214676.  v1:= (`long`) v1 @kind i2l;
  #L214678.  call temp:= `min`(v5, v1) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L21467e.  v5:= temp @kind wide;
  #L214680.  v6:= (`int`) v5 @kind l2i;
  #L214682.  v5:= v3.`i.o.f` @type ^`java.io.InputStream` @kind object;
  #L214686.  v1:= v0.`i.u.a` @type ^`byte`[] @kind object;
  #L21468a.  v2:= v0.`i.u.c` @type ^`int`;
  #L21468e.  call temp:= `read`(v5, v1, v2, v6) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L214694.  v5:= temp;
  #L214696.  v6:= -1I;
  #L214698.  if v5 != v6 then goto L2146a2;
  #L21469c.  v4:= -1L;
  #L2146a0.  return v4 @kind wide;
  #L2146a2.  v6:= v0.`i.u.c` @type ^`int`;
  #L2146a6.  v6:= v6 + v5 @kind int;
  #L2146a8.  v0.`i.u.c` @type ^`int` := v6;
  #L2146ac.  call temp:= `size`(v4) @signature `Li/e;.size:()J` @kind virtual;
  #L2146b2.  v0:= temp @kind wide;
  #L2146b4.  v5:= (`long`) v5 @kind i2l;
  #L2146b6.  v0:= v0 + v5 @kind long;
  #L2146b8.  call `setSize$okio`(v4, v0) @signature `Li/e;.setSize$okio:(J)V` @kind virtual;
  #L2146be.  return v5 @kind wide;
  #L2146c0.  v4:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L2146c2.  call temp:= `isAndroidGetsocknameError`(v4) @signature `Li/p;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @kind static;
  #L2146c8.  v5:= temp;
  #L2146ca.  if v5 == 0 then goto L2146da;
  #L2146ce.  v5:= new `java.io.IOException`;
  #L2146d2.  call `<init>`(v5, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2146d8.  throw v5;
  #L2146da.  throw v4;
  #L2146dc.  v4:= new `java.lang.StringBuilder`;
  #L2146e0.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2146e6.  v0:= "byteCount < 0: " @kind object;
  #L2146ea.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2146f0.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2146f6.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2146fc.  v4:= temp @kind object;
  #L2146fe.  v5:= new `java.lang.IllegalArgumentException`;
  #L214702.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L214708.  v4:= temp @kind object;
  #L21470a.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L214710.  throw v5;
  catch `java.lang.AssertionError` @[L21465c..L2146be] goto L2146c0;
}
procedure `i.a0` `timeout`(`i.o` v1 @kind this) @signature `Li/o;.timeout:()Li/a0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L214734.  v0:= v1.`i.o.g` @type ^`i.a0` @kind object;
  #L214738.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`i.o` v2 @kind this) @signature `Li/o;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2145f0.  v0:= new `java.lang.StringBuilder`;
  #L2145f4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2145fa.  v1:= "source(" @kind object;
  #L2145fe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L214604.  v1:= v2.`i.o.f` @type ^`java.io.InputStream` @kind object;
  #L214608.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L21460e.  v1:= 41I;
  #L214612.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L214618.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L21461e.  v0:= temp @kind object;
  #L214620.  return v0 @kind object;
}
