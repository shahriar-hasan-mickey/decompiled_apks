record `i.d$d` @kind class @AccessFlag PUBLIC_FINAL extends `i.z` @kind interface {
  `i.d` `i.d$d.f` @AccessFlag FINAL_SYNTHETIC;
  `i.z` `i.d$d.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`i.d$d` v0 @kind this, `i.d` v1 @kind object, `i.z` v2 @kind object) @signature `Li/d$d;.<init>:(Li/d;Li/z;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L20fd00.  v0.`i.d$d.f` @type ^`i.d` := v1 @kind object;
  #L20fd04.  v0.`i.d$d.g` @type ^`i.z` := v2 @kind object;
  #L20fd08.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20fd0e.  return @kind void;
}
procedure `void` `close`(`i.d$d` v3 @kind this) @signature `Li/d$d;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L20fd20.  v0:= v3.`i.d$d.f` @type ^`i.d` @kind object;
  #L20fd24.  call `enter`(v0) @signature `Li/d;.enter:()V` @kind virtual;
  #L20fd2a.  v0:= v3.`i.d$d.g` @type ^`i.z` @kind object;
  #L20fd2e.  call `close`(v0) @signature `Li/z;.close:()V` @kind interface;
  #L20fd34.  v0:= 1I;
  #L20fd36.  v1:= v3.`i.d$d.f` @type ^`i.d` @kind object;
  #L20fd3a.  call `exit$okio`(v1, v0) @signature `Li/d;.exit$okio:(Z)V` @kind virtual;
  #L20fd40.  return @kind void;
  #L20fd42.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20fd44.  goto L20fd56;
  #L20fd46.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L20fd48.  v1:= v3.`i.d$d.f` @type ^`i.d` @kind object;
  #L20fd4c.  call temp:= `exit$okio`(v1, v0) @signature `Li/d;.exit$okio:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L20fd52.  v0:= temp @kind object;
  #L20fd54.  throw v0;
  #L20fd56.  v1:= v3.`i.d$d.f` @type ^`i.d` @kind object;
  #L20fd5a.  v2:= 0I;
  #L20fd5c.  call `exit$okio`(v1, v2) @signature `Li/d;.exit$okio:(Z)V` @kind virtual;
  #L20fd62.  throw v0;
  catch `java.io.IOException` @[L20fd2a..L20fd34] goto L20fd46;
  catch `java.lang.Throwable` @[L20fd2a..L20fd34] goto L20fd42;
  catch `java.lang.Throwable` @[L20fd48..L20fd56] goto L20fd42;
}
procedure `long` `read`(`i.d$d` v1 @kind this, `i.e` v2 @kind object, `long` v3 ) @signature `Li/d$d;.read:(Li/e;J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20fc54.  v0:= "sink" @kind object;
  #L20fc58.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L20fc5e.  v0:= v1.`i.d$d.f` @type ^`i.d` @kind object;
  #L20fc62.  call `enter`(v0) @signature `Li/d;.enter:()V` @kind virtual;
  #L20fc68.  v0:= v1.`i.d$d.g` @type ^`i.z` @kind object;
  #L20fc6c.  call temp:= `read`(v0, v2, v3) @signature `Li/z;.read:(Li/e;J)J` @kind interface;
  #L20fc72.  v2:= temp @kind wide;
  #L20fc74.  v4:= 1I;
  #L20fc76.  v0:= v1.`i.d$d.f` @type ^`i.d` @kind object;
  #L20fc7a.  call `exit$okio`(v0, v4) @signature `Li/d;.exit$okio:(Z)V` @kind virtual;
  #L20fc80.  return v2 @kind wide;
  #L20fc82.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20fc84.  goto L20fc96;
  #L20fc86.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L20fc88.  v3:= v1.`i.d$d.f` @type ^`i.d` @kind object;
  #L20fc8c.  call temp:= `exit$okio`(v3, v2) @signature `Li/d;.exit$okio:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L20fc92.  v2:= temp @kind object;
  #L20fc94.  throw v2;
  #L20fc96.  v3:= v1.`i.d$d.f` @type ^`i.d` @kind object;
  #L20fc9a.  v4:= 0I;
  #L20fc9c.  call `exit$okio`(v3, v4) @signature `Li/d;.exit$okio:(Z)V` @kind virtual;
  #L20fca2.  throw v2;
  catch `java.io.IOException` @[L20fc68..L20fc74] goto L20fc86;
  catch `java.lang.Throwable` @[L20fc68..L20fc74] goto L20fc82;
  catch `java.lang.Throwable` @[L20fc88..L20fc96] goto L20fc82;
}
procedure `i.a0` `timeout`(`i.d$d` v1 @kind this) @signature `Li/d$d;.timeout:()Li/a0;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L20fce4.  call temp:= `timeout`(v1) @signature `Li/d$d;.timeout:()Li/d;` @kind virtual;
  #L20fcea.  v0:= temp @kind object;
  #L20fcec.  return v0 @kind object;
}
procedure `i.d` `timeout`(`i.d$d` v1 @kind this) @signature `Li/d$d;.timeout:()Li/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20fccc.  v0:= v1.`i.d$d.f` @type ^`i.d` @kind object;
  #L20fcd0.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`i.d$d` v2 @kind this) @signature `Li/d$d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20fc10.  v0:= new `java.lang.StringBuilder`;
  #L20fc14.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20fc1a.  v1:= "AsyncTimeout.source(" @kind object;
  #L20fc1e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20fc24.  v1:= v2.`i.d$d.g` @type ^`i.z` @kind object;
  #L20fc28.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20fc2e.  v1:= 41I;
  #L20fc32.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L20fc38.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20fc3e.  v0:= temp @kind object;
  #L20fc40.  return v0 @kind object;
}
