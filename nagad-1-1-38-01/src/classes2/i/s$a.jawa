record `i.s$a` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.OutputStream` @kind class {
  `i.s` `i.s$a.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`i.s$a` v0 @kind this, `i.s` v1 @kind object) @signature `Li/s$a;.<init>:(Li/s;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2154d4.  v0.`i.s$a.f` @type ^`i.s` := v1 @kind object;
  #L2154d8.  call `<init>`(v0) @signature `Ljava/io/OutputStream;.<init>:()V` @kind direct;
  #L2154de.  return @kind void;
}
procedure `void` `close`(`i.s$a` v1 @kind this) @signature `Li/s$a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2154f0.  v0:= v1.`i.s$a.f` @type ^`i.s` @kind object;
  #L2154f4.  call `close`(v0) @signature `Li/s;.close:()V` @kind virtual;
  #L2154fa.  return @kind void;
}
procedure `void` `flush`(`i.s$a` v2 @kind this) @signature `Li/s$a;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21550c.  v0:= v2.`i.s$a.f` @type ^`i.s` @kind object;
  #L215510.  v1:= v0.`i.s.g` @type ^`boolean` @kind boolean;
  #L215514.  if v1 != 0 then goto L21551e;
  #L215518.  call `flush`(v0) @signature `Li/s;.flush:()V` @kind virtual;
  #L21551e.  return @kind void;
}
procedure `java.lang.String` `toString`(`i.s$a` v2 @kind this) @signature `Li/s$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21549c.  v0:= new `java.lang.StringBuilder`;
  #L2154a0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2154a6.  v1:= v2.`i.s$a.f` @type ^`i.s` @kind object;
  #L2154aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2154b0.  v1:= ".outputStream()" @kind object;
  #L2154b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2154ba.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2154c0.  v0:= temp @kind object;
  #L2154c2.  return v0 @kind object;
}
procedure `void` `write`(`i.s$a` v2 @kind this, `int` v3 ) @signature `Li/s$a;.write:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L21557c.  v0:= v2.`i.s$a.f` @type ^`i.s` @kind object;
  #L215580.  v1:= v0.`i.s.g` @type ^`boolean` @kind boolean;
  #L215584.  if v1 != 0 then goto L2155a0;
  #L215588.  v0:= v0.`i.s.f` @type ^`i.e` @kind object;
  #L21558c.  v3:= (`byte`) v3 @kind i2b;
  #L21558e.  call temp:= `writeByte`(v0, v3) @signature `Li/e;.writeByte:(I)Li/e;` @kind virtual;
  #L215594.  v3:= v2.`i.s$a.f` @type ^`i.s` @kind object;
  #L215598.  call temp:= `emitCompleteSegments`(v3) @signature `Li/s;.emitCompleteSegments:()Li/f;` @kind virtual;
  #L21559e.  return @kind void;
  #L2155a0.  v3:= new `java.io.IOException`;
  #L2155a4.  v0:= "closed" @kind object;
  #L2155a8.  call `<init>`(v3, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2155ae.  throw v3;
}
procedure `void` `write`(`i.s$a` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Li/s$a;.write:([BII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L215530.  v0:= "data" @kind object;
  #L215534.  call `checkParameterIsNotNull`(v3, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L21553a.  v0:= v2.`i.s$a.f` @type ^`i.s` @kind object;
  #L21553e.  v1:= v0.`i.s.g` @type ^`boolean` @kind boolean;
  #L215542.  if v1 != 0 then goto L21555c;
  #L215546.  v0:= v0.`i.s.f` @type ^`i.e` @kind object;
  #L21554a.  call temp:= `write`(v0, v3, v4, v5) @signature `Li/e;.write:([BII)Li/e;` @kind virtual;
  #L215550.  v3:= v2.`i.s$a.f` @type ^`i.s` @kind object;
  #L215554.  call temp:= `emitCompleteSegments`(v3) @signature `Li/s;.emitCompleteSegments:()Li/f;` @kind virtual;
  #L21555a.  return @kind void;
  #L21555c.  v3:= new `java.io.IOException`;
  #L215560.  v4:= "closed" @kind object;
  #L215564.  call `<init>`(v3, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L21556a.  throw v3;
}
