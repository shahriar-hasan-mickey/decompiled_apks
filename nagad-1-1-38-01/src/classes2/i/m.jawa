record `i.m` @kind class @AccessFlag PUBLIC_FINAL extends `i.z` @kind interface {
  `byte` `i.m.f` @AccessFlag PRIVATE;
  `i.t` `i.m.g` @AccessFlag PRIVATE_FINAL;
  `java.util.zip.Inflater` `i.m.h` @AccessFlag PRIVATE_FINAL;
  `i.n` `i.m.i` @AccessFlag PRIVATE_FINAL;
  `java.util.zip.CRC32` `i.m.j` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`i.m` v2 @kind this, `i.z` v3 @kind object) @signature `Li/m;.<init>:(Li/z;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L213ed8.  v0:= "source" @kind object;
  #L213edc.  call `checkParameterIsNotNull`(v3, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L213ee2.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L213ee8.  v0:= new `i.t`;
  #L213eec.  call `<init>`(v0, v3) @signature `Li/t;.<init>:(Li/z;)V` @kind direct;
  #L213ef2.  v2.`i.m.g` @type ^`i.t` := v0 @kind object;
  #L213ef6.  v3:= new `java.util.zip.Inflater`;
  #L213efa.  v0:= 1I;
  #L213efc.  call `<init>`(v3, v0) @signature `Ljava/util/zip/Inflater;.<init>:(Z)V` @kind direct;
  #L213f02.  v2.`i.m.h` @type ^`java.util.zip.Inflater` := v3 @kind object;
  #L213f06.  v3:= new `i.n`;
  #L213f0a.  v0:= v2.`i.m.g` @type ^`i.t` @kind object;
  #L213f0e.  v1:= v2.`i.m.h` @type ^`java.util.zip.Inflater` @kind object;
  #L213f12.  call `<init>`(v3, v0, v1) @signature `Li/n;.<init>:(Li/g;Ljava/util/zip/Inflater;)V` @kind direct;
  #L213f18.  v2.`i.m.i` @type ^`i.n` := v3 @kind object;
  #L213f1c.  v3:= new `java.util.zip.CRC32`;
  #L213f20.  call `<init>`(v3) @signature `Ljava/util/zip/CRC32;.<init>:()V` @kind direct;
  #L213f26.  v2.`i.m.j` @type ^`java.util.zip.CRC32` := v3 @kind object;
  #L213f2a.  return @kind void;
}
procedure `void` `a`(`i.m` v17 @kind this) @signature `Li/m;.a:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L213fc4.  v6:= v17 @kind object;
  #L213fc8.  v0:= v6.`i.m.g` @type ^`i.t` @kind object;
  #L213fcc.  v1:= 10L;
  #L213fd0.  call `require`(v0, v1) @signature `Li/t;.require:(J)V` @kind virtual;
  #L213fd6.  v0:= v6.`i.m.g` @type ^`i.t` @kind object;
  #L213fda.  v0:= v0.`i.t.f` @type ^`i.e` @kind object;
  #L213fde.  v1:= 3L;
  #L213fe2.  call temp:= `getByte`(v0, v1) @signature `Li/e;.getByte:(J)B` @kind virtual;
  #L213fe8.  v7:= temp;
  #L213fea.  v0:= v7 ^> 1;
  #L213fee.  v8:= 1I;
  #L213ff0.  v0:= v0 ^& v8 @kind int;
  #L213ff2.  v9:= 0I;
  #L213ff4.  if v0 != v8 then goto L213ffc;
  #L213ff8.  v10:= 1I;
  #L213ffa.  goto L213ffe;
  #L213ffc.  v10:= 0I;
  #L213ffe.  if v10 == 0 then goto L21401c;
  #L214002.  v0:= v6.`i.m.g` @type ^`i.t` @kind object;
  #L214006.  v1:= v0.`i.t.f` @type ^`i.e` @kind object;
  #L21400a.  v2:= 0L;
  #L21400e.  v4:= 10L;
  #L214012.  v0:= v17 @kind object;
  #L214016.  call `a`(v0, v1, v2, v4) @signature `Li/m;.a:(Li/e;JJ)V` @kind direct;
  #L21401c.  v0:= v6.`i.m.g` @type ^`i.t` @kind object;
  #L214020.  call temp:= `readShort`(v0) @signature `Li/t;.readShort:()S` @kind virtual;
  #L214026.  v0:= temp;
  #L214028.  v1:= 8075I;
  #L21402c.  v2:= "ID1ID2" @kind object;
  #L214030.  call `a`(v6, v2, v1, v0) @signature `Li/m;.a:(Ljava/lang/String;II)V` @kind direct;
  #L214036.  v0:= v6.`i.m.g` @type ^`i.t` @kind object;
  #L21403a.  v1:= 8L;
  #L21403e.  call `skip`(v0, v1) @signature `Li/t;.skip:(J)V` @kind virtual;
  #L214044.  v0:= v7 ^> 2;
  #L214048.  v0:= v0 ^& v8 @kind int;
  #L21404a.  if v0 != v8 then goto L214052;
  #L21404e.  v0:= 1I;
  #L214050.  goto L214054;
  #L214052.  v0:= 0I;
  #L214054.  if v0 == 0 then goto L2140c6;
  #L214058.  v0:= v6.`i.m.g` @type ^`i.t` @kind object;
  #L21405c.  v1:= 2L;
  #L214060.  call `require`(v0, v1) @signature `Li/t;.require:(J)V` @kind virtual;
  #L214066.  if v10 == 0 then goto L214084;
  #L21406a.  v0:= v6.`i.m.g` @type ^`i.t` @kind object;
  #L21406e.  v1:= v0.`i.t.f` @type ^`i.e` @kind object;
  #L214072.  v2:= 0L;
  #L214076.  v4:= 2L;
  #L21407a.  v0:= v17 @kind object;
  #L21407e.  call `a`(v0, v1, v2, v4) @signature `Li/m;.a:(Li/e;JJ)V` @kind direct;
  #L214084.  v0:= v6.`i.m.g` @type ^`i.t` @kind object;
  #L214088.  v0:= v0.`i.t.f` @type ^`i.e` @kind object;
  #L21408c.  call temp:= `readShortLe`(v0) @signature `Li/e;.readShortLe:()S` @kind virtual;
  #L214092.  v0:= temp;
  #L214094.  v11:= (`long`) v0 @kind i2l;
  #L214096.  v0:= v6.`i.m.g` @type ^`i.t` @kind object;
  #L21409a.  call `require`(v0, v11) @signature `Li/t;.require:(J)V` @kind virtual;
  #L2140a0.  if v10 == 0 then goto L2140bc;
  #L2140a4.  v0:= v6.`i.m.g` @type ^`i.t` @kind object;
  #L2140a8.  v1:= v0.`i.t.f` @type ^`i.e` @kind object;
  #L2140ac.  v2:= 0L;
  #L2140b0.  v0:= v17 @kind object;
  #L2140b4.  v4:= v11 @kind wide;
  #L2140b6.  call `a`(v0, v1, v2, v4) @signature `Li/m;.a:(Li/e;JJ)V` @kind direct;
  #L2140bc.  v0:= v6.`i.m.g` @type ^`i.t` @kind object;
  #L2140c0.  call `skip`(v0, v11) @signature `Li/t;.skip:(J)V` @kind virtual;
  #L2140c6.  v0:= v7 ^> 3;
  #L2140ca.  v0:= v0 ^& v8 @kind int;
  #L2140cc.  if v0 != v8 then goto L2140d4;
  #L2140d0.  v0:= 1I;
  #L2140d2.  goto L2140d6;
  #L2140d4.  v0:= 0I;
  #L2140d6.  v11:= -1L;
  #L2140da.  v13:= 1L;
  #L2140de.  if v0 == 0 then goto L214130;
  #L2140e2.  v0:= v6.`i.m.g` @type ^`i.t` @kind object;
  #L2140e6.  call temp:= `indexOf`(v0, v9) @signature `Li/t;.indexOf:(B)J` @kind virtual;
  #L2140ec.  v15:= temp @kind wide;
  #L2140ee.  v0:= lcmp(v15, v11);
  #L2140f2.  if v0 == 0 then goto L214124;
  #L2140f6.  if v10 == 0 then goto L214114;
  #L2140fa.  v0:= v6.`i.m.g` @type ^`i.t` @kind object;
  #L2140fe.  v1:= v0.`i.t.f` @type ^`i.e` @kind object;
  #L214102.  v2:= 0L;
  #L214106.  v4:= v15 + v13 @kind long;
  #L21410a.  v0:= v17 @kind object;
  #L21410e.  call `a`(v0, v1, v2, v4) @signature `Li/m;.a:(Li/e;JJ)V` @kind direct;
  #L214114.  v0:= v6.`i.m.g` @type ^`i.t` @kind object;
  #L214118.  v1:= v15 + v13 @kind long;
  #L21411c.  call `skip`(v0, v1) @signature `Li/t;.skip:(J)V` @kind virtual;
  #L214122.  goto L214130;
  #L214124.  v0:= new `java.io.EOFException`;
  #L214128.  call `<init>`(v0) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L21412e.  throw v0;
  #L214130.  v0:= v7 ^> 4;
  #L214134.  v0:= v0 ^& v8 @kind int;
  #L214136.  if v0 != v8 then goto L21413c;
  #L21413a.  goto L21413e;
  #L21413c.  v8:= 0I;
  #L21413e.  if v8 == 0 then goto L21418e;
  #L214142.  v0:= v6.`i.m.g` @type ^`i.t` @kind object;
  #L214146.  call temp:= `indexOf`(v0, v9) @signature `Li/t;.indexOf:(B)J` @kind virtual;
  #L21414c.  v7:= temp @kind wide;
  #L21414e.  v0:= lcmp(v7, v11);
  #L214152.  if v0 == 0 then goto L214182;
  #L214156.  if v10 == 0 then goto L214174;
  #L21415a.  v0:= v6.`i.m.g` @type ^`i.t` @kind object;
  #L21415e.  v1:= v0.`i.t.f` @type ^`i.e` @kind object;
  #L214162.  v2:= 0L;
  #L214166.  v4:= v7 + v13 @kind long;
  #L21416a.  v0:= v17 @kind object;
  #L21416e.  call `a`(v0, v1, v2, v4) @signature `Li/m;.a:(Li/e;JJ)V` @kind direct;
  #L214174.  v0:= v6.`i.m.g` @type ^`i.t` @kind object;
  #L214178.  v7:= v7 + v13 @kind long;
  #L21417a.  call `skip`(v0, v7) @signature `Li/t;.skip:(J)V` @kind virtual;
  #L214180.  goto L21418e;
  #L214182.  v0:= new `java.io.EOFException`;
  #L214186.  call `<init>`(v0) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L21418c.  throw v0;
  #L21418e.  if v10 == 0 then goto L2141c2;
  #L214192.  v0:= v6.`i.m.g` @type ^`i.t` @kind object;
  #L214196.  call temp:= `readShortLe`(v0) @signature `Li/t;.readShortLe:()S` @kind virtual;
  #L21419c.  v0:= temp;
  #L21419e.  v1:= v6.`i.m.j` @type ^`java.util.zip.CRC32` @kind object;
  #L2141a2.  call temp:= `getValue`(v1) @signature `Ljava/util/zip/CRC32;.getValue:()J` @kind virtual;
  #L2141a8.  v1:= temp @kind wide;
  #L2141aa.  v2:= (`int`) v1 @kind l2i;
  #L2141ac.  v1:= (`short`) v2 @kind i2s;
  #L2141ae.  v2:= "FHCRC" @kind object;
  #L2141b2.  call `a`(v6, v2, v0, v1) @signature `Li/m;.a:(Ljava/lang/String;II)V` @kind direct;
  #L2141b8.  v0:= v6.`i.m.j` @type ^`java.util.zip.CRC32` @kind object;
  #L2141bc.  call `reset`(v0) @signature `Ljava/util/zip/CRC32;.reset:()V` @kind virtual;
  #L2141c2.  return @kind void;
}
procedure `void` `a`(`i.m` v6 @kind this, `i.e` v7 @kind object, `long` v8 , `long` v10 ) @signature `Li/m;.a:(Li/e;JJ)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L214230.  v7:= v7.`i.e.f` @type ^`i.u` @kind object;
  #L214234.  v0:= 0I;
  #L214236.  if v7 == 0 then goto L2142b8;
  #L21423a.  v1:= v7.`i.u.c` @type ^`int`;
  #L21423e.  v2:= v7.`i.u.b` @type ^`int`;
  #L214242.  v3:= v1 - v2 @kind int;
  #L214246.  v3:= (`long`) v3 @kind i2l;
  #L214248.  v5:= lcmp(v8, v3);
  #L21424c.  if v5 < 0 then goto L214268;
  #L214250.  v1:= v1 - v2 @kind int;
  #L214252.  v1:= (`long`) v1 @kind i2l;
  #L214254.  v8:= v8 - v1 @kind long;
  #L214256.  v7:= v7.`i.u.f` @type ^`i.u` @kind object;
  #L21425a.  if v7 == 0 then goto L214260;
  #L21425e.  goto L21423a;
  #L214260.  call `throwNpe`() @signature `Lkotlin/v/c/i;.throwNpe:()V` @kind static;
  #L214266.  throw v0;
  #L214268.  v1:= 0L;
  #L21426c.  v3:= lcmp(v10, v1);
  #L214270.  if v3 <= 0 then goto L2142b6;
  #L214274.  v3:= v7.`i.u.b` @type ^`int`;
  #L214278.  v3:= (`long`) v3 @kind i2l;
  #L21427a.  v3:= v3 + v8 @kind long;
  #L21427c.  v8:= (`int`) v3 @kind l2i;
  #L21427e.  v9:= v7.`i.u.c` @type ^`int`;
  #L214282.  v9:= v9 - v8 @kind int;
  #L214284.  v3:= (`long`) v9 @kind i2l;
  #L214286.  call temp:= `min`(v3, v10) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L21428c.  v3:= temp @kind wide;
  #L21428e.  v9:= (`int`) v3 @kind l2i;
  #L214290.  v3:= v6.`i.m.j` @type ^`java.util.zip.CRC32` @kind object;
  #L214294.  v4:= v7.`i.u.a` @type ^`byte`[] @kind object;
  #L214298.  call `update`(v3, v4, v8, v9) @signature `Ljava/util/zip/CRC32;.update:([BII)V` @kind virtual;
  #L21429e.  v8:= (`long`) v9 @kind i2l;
  #L2142a0.  v10:= v10 - v8 @kind long;
  #L2142a2.  v7:= v7.`i.u.f` @type ^`i.u` @kind object;
  #L2142a6.  if v7 == 0 then goto L2142ae;
  #L2142aa.  v8:= v1 @kind wide;
  #L2142ac.  goto L21426c;
  #L2142ae.  call `throwNpe`() @signature `Lkotlin/v/c/i;.throwNpe:()V` @kind static;
  #L2142b4.  throw v0;
  #L2142b6.  return @kind void;
  #L2142b8.  call `throwNpe`() @signature `Lkotlin/v/c/i;.throwNpe:()V` @kind static;
  #L2142be.  throw v0;
}
procedure `void` `a`(`i.m` v2 @kind this, `java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `Li/m;.a:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L213f3c.  if v5 != v4 then goto L213f42;
  #L213f40.  return @kind void;
  #L213f42.  v0:= 3I;
  #L213f44.  v0:= new `java.lang.Object`[v0];
  #L213f48.  v1:= 0I;
  #L213f4a.  v0[v1]:= v3 @kind object;
  #L213f4e.  v3:= 1I;
  #L213f50.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L213f56.  v5:= temp @kind object;
  #L213f58.  v0[v3]:= v5 @kind object;
  #L213f5c.  v3:= 2I;
  #L213f5e.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L213f64.  v4:= temp @kind object;
  #L213f66.  v0[v3]:= v4 @kind object;
  #L213f6a.  v3:= length @variable v0;
  #L213f6c.  call temp:= `copyOf`(v0, v3) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L213f72.  v3:= temp @kind object;
  #L213f74.  v4:= "%s: actual 0x%08x != expected 0x%08x" @kind object;
  #L213f78.  call temp:= `format`(v4, v3) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L213f7e.  v3:= temp @kind object;
  #L213f80.  v4:= "java.lang.String.format(this, *args)" @kind object;
  #L213f84.  call `checkExpressionValueIsNotNull`(v3, v4) @signature `Lkotlin/v/c/i;.checkExpressionValueIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L213f8a.  v4:= new `java.io.IOException`;
  #L213f8e.  call `<init>`(v4, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L213f94.  throw v4;
}
procedure `void` `b`(`i.m` v3 @kind this) @signature `Li/m;.b:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2141d4.  v0:= v3.`i.m.g` @type ^`i.t` @kind object;
  #L2141d8.  call temp:= `readIntLe`(v0) @signature `Li/t;.readIntLe:()I` @kind virtual;
  #L2141de.  v0:= temp;
  #L2141e0.  v1:= v3.`i.m.j` @type ^`java.util.zip.CRC32` @kind object;
  #L2141e4.  call temp:= `getValue`(v1) @signature `Ljava/util/zip/CRC32;.getValue:()J` @kind virtual;
  #L2141ea.  v1:= temp @kind wide;
  #L2141ec.  v2:= (`int`) v1 @kind l2i;
  #L2141ee.  v1:= "CRC" @kind object;
  #L2141f2.  call `a`(v3, v1, v0, v2) @signature `Li/m;.a:(Ljava/lang/String;II)V` @kind direct;
  #L2141f8.  v0:= v3.`i.m.g` @type ^`i.t` @kind object;
  #L2141fc.  call temp:= `readIntLe`(v0) @signature `Li/t;.readIntLe:()I` @kind virtual;
  #L214202.  v0:= temp;
  #L214204.  v1:= v3.`i.m.h` @type ^`java.util.zip.Inflater` @kind object;
  #L214208.  call temp:= `getBytesWritten`(v1) @signature `Ljava/util/zip/Inflater;.getBytesWritten:()J` @kind virtual;
  #L21420e.  v1:= temp @kind wide;
  #L214210.  v2:= (`int`) v1 @kind l2i;
  #L214212.  v1:= "ISIZE" @kind object;
  #L214216.  call `a`(v3, v1, v0, v2) @signature `Li/m;.a:(Ljava/lang/String;II)V` @kind direct;
  #L21421c.  return @kind void;
}
procedure `void` `close`(`i.m` v1 @kind this) @signature `Li/m;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213fa8.  v0:= v1.`i.m.i` @type ^`i.n` @kind object;
  #L213fac.  call `close`(v0) @signature `Li/n;.close:()V` @kind virtual;
  #L213fb2.  return @kind void;
}
procedure `long` `read`(`i.m` v11 @kind this, `i.e` v12 @kind object, `long` v13 ) @signature `Li/m;.read:(Li/e;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L213dc4.  v0:= "sink" @kind object;
  #L213dc8.  call `checkParameterIsNotNull`(v12, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L213dce.  v0:= 0L;
  #L213dd2.  v2:= 1I;
  #L213dd4.  v3:= lcmp(v13, v0);
  #L213dd8.  if v3 < 0 then goto L213de0;
  #L213ddc.  v4:= 1I;
  #L213dde.  goto L213de2;
  #L213de0.  v4:= 0I;
  #L213de2.  if v4 == 0 then goto L213e72;
  #L213de6.  if v3 != 0 then goto L213dec;
  #L213dea.  return v0 @kind wide;
  #L213dec.  v0:= v11.`i.m.f` @type ^`byte` @kind byte;
  #L213df0.  if v0 != 0 then goto L213dfe;
  #L213df4.  call `a`(v11) @signature `Li/m;.a:()V` @kind direct;
  #L213dfa.  v11.`i.m.f` @type ^`byte` := v2 @kind byte;
  #L213dfe.  v0:= v11.`i.m.f` @type ^`byte` @kind byte;
  #L213e02.  v3:= -1L;
  #L213e06.  v1:= 2I;
  #L213e08.  if v0 != v2 then goto L213e3a;
  #L213e0c.  call temp:= `size`(v12) @signature `Li/e;.size:()J` @kind virtual;
  #L213e12.  v7:= temp @kind wide;
  #L213e14.  v0:= v11.`i.m.i` @type ^`i.n` @kind object;
  #L213e18.  call temp:= `read`(v0, v12, v13) @signature `Li/n;.read:(Li/e;J)J` @kind virtual;
  #L213e1e.  v13:= temp @kind wide;
  #L213e20.  v0:= lcmp(v13, v3);
  #L213e24.  if v0 == 0 then goto L213e36;
  #L213e28.  v5:= v11 @kind object;
  #L213e2a.  v6:= v12 @kind object;
  #L213e2c.  v9:= v13 @kind wide;
  #L213e2e.  call `a`(v5, v6, v7, v9) @signature `Li/m;.a:(Li/e;JJ)V` @kind direct;
  #L213e34.  return v13 @kind wide;
  #L213e36.  v11.`i.m.f` @type ^`byte` := v1 @kind byte;
  #L213e3a.  v12:= v11.`i.m.f` @type ^`byte` @kind byte;
  #L213e3e.  if v12 != v1 then goto L213e70;
  #L213e42.  call `b`(v11) @signature `Li/m;.b:()V` @kind direct;
  #L213e48.  v12:= 3I;
  #L213e4a.  v11.`i.m.f` @type ^`byte` := v12 @kind byte;
  #L213e4e.  v12:= v11.`i.m.g` @type ^`i.t` @kind object;
  #L213e52.  call temp:= `exhausted`(v12) @signature `Li/t;.exhausted:()Z` @kind virtual;
  #L213e58.  v12:= temp;
  #L213e5a.  if v12 == 0 then goto L213e60;
  #L213e5e.  goto L213e70;
  #L213e60.  v12:= new `java.io.IOException`;
  #L213e64.  v13:= "gzip finished without exhausting source" @kind object;
  #L213e68.  call `<init>`(v12, v13) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L213e6e.  throw v12;
  #L213e70.  return v3 @kind wide;
  #L213e72.  v12:= new `java.lang.StringBuilder`;
  #L213e76.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L213e7c.  v0:= "byteCount < 0: " @kind object;
  #L213e80.  call temp:= `append`(v12, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L213e86.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L213e8c.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L213e92.  v12:= temp @kind object;
  #L213e94.  v13:= new `java.lang.IllegalArgumentException`;
  #L213e98.  call temp:= `toString`(v12) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L213e9e.  v12:= temp @kind object;
  #L213ea0.  call `<init>`(v13, v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L213ea6.  throw v13;
}
procedure `i.a0` `timeout`(`i.m` v1 @kind this) @signature `Li/m;.timeout:()Li/a0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L213eb8.  v0:= v1.`i.m.g` @type ^`i.t` @kind object;
  #L213ebc.  call temp:= `timeout`(v0) @signature `Li/t;.timeout:()Li/a0;` @kind virtual;
  #L213ec2.  v0:= temp @kind object;
  #L213ec4.  return v0 @kind object;
}
