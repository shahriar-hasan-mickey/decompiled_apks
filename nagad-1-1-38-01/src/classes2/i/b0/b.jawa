record `i.b0.b` @kind class @AccessFlag PUBLIC_FINAL {
}
global `char`[] `@@i.b0.b.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Li/b0/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L21832c.  v0:= 16I;
  #L218330.  v0:= new `char`[v0];
  #L218334.  goto L218340;
  #L21833a.  `@@i.b0.b.a` @type ^`char`[] := v0 @kind object;
  #L21833e.  return @kind void;
  #L218340.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 97I, 98I, 99I, 100I, 101I, 102I) @kind object;
  #L218367.  goto L21833a;
}
procedure `int` `a`(`char` v3 ) @signature `Li/b0/b;.a:(C)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2182a8.  v0:= 48I;
  #L2182ac.  if v0 <= v3 then goto L2182b2;
  #L2182b0.  goto L2182be;
  #L2182b2.  v1:= 57I;
  #L2182b6.  if v1 < v3 then goto L2182be;
  #L2182ba.  v3:= v3 - v0 @kind int;
  #L2182bc.  goto L2182ea;
  #L2182be.  v0:= 102I;
  #L2182c2.  v1:= 97I;
  #L2182c6.  if v1 <= v3 then goto L2182cc;
  #L2182ca.  goto L2182d8;
  #L2182cc.  if v0 < v3 then goto L2182d8;
  #L2182d0.  v3:= v3 - v1 @kind int;
  #L2182d2.  v3:= v3 + 10;
  #L2182d6.  goto L2182ea;
  #L2182d8.  v0:= 70I;
  #L2182dc.  v1:= 65I;
  #L2182e0.  if v1 > v3 then goto L2182ec;
  #L2182e4.  if v0 < v3 then goto L2182ec;
  #L2182e8.  goto L2182d0;
  #L2182ea.  return v3;
  #L2182ec.  v0:= new `java.lang.IllegalArgumentException`;
  #L2182f0.  v1:= new `java.lang.StringBuilder`;
  #L2182f4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2182fa.  v2:= "Unexpected hex digit: " @kind object;
  #L2182fe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L218304.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L21830a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L218310.  v3:= temp @kind object;
  #L218312.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L218318.  throw v0;
}
procedure `int` `a`(`byte`[] v20 @kind object, `int` v21 ) @signature `Li/b0/b;.a:([BI)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;

  #L217ed8.  v0:= v20 @kind object;
  #L217edc.  v1:= v21;
  #L217ee0.  v2:= length @variable v0;
  #L217ee2.  v4:= 0I;
  #L217ee4.  v5:= 0I;
  #L217ee6.  v6:= 0I;
  #L217ee8.  if v4 >= v2 then goto L218296;
  #L217eec.  v7:= v0[v4] @kind byte;
  #L217ef0.  v8:= 127I;
  #L217ef4.  v9:= 159I;
  #L217ef8.  v10:= 31I;
  #L217efc.  v11:= 13I;
  #L217f00.  v12:= 65533I;
  #L217f06.  v13:= 10I;
  #L217f0a.  v14:= 65536I;
  #L217f0e.  v16:= -1I;
  #L217f12.  v17:= 1I;
  #L217f16.  if v7 < 0 then goto L217fc8;
  #L217f1a.  v18:= v6 + 1;
  #L217f1e.  if v6 != v1 then goto L217f24;
  #L217f22.  return v5;
  #L217f24.  if v7 == v13 then goto L217f48;
  #L217f28.  if v7 == v11 then goto L217f48;
  #L217f2c.  if v7 < 0 then goto L217f34;
  #L217f30.  if v10 >= v7 then goto L217f3e;
  #L217f34.  if v8 <= v7 then goto L217f3a;
  #L217f38.  goto L217f42;
  #L217f3a.  if v9 < v7 then goto L217f42;
  #L217f3e.  v6:= 1I;
  #L217f40.  goto L217f44;
  #L217f42.  v6:= 0I;
  #L217f44.  if v6 != 0 then goto L217f4c;
  #L217f48.  if v7 != v12 then goto L217f4e;
  #L217f4c.  return v16;
  #L217f4e.  if v7 >= v14 then goto L217f56;
  #L217f52.  v6:= 1I;
  #L217f54.  goto L217f58;
  #L217f56.  v6:= 2I;
  #L217f58.  v5:= v5 + v6 @kind int;
  #L217f5a.  v4:= v4 + 1;
  #L217f5e.  v6:= v5;
  #L217f60.  v5:= v18;
  #L217f64.  if v4 >= v2 then goto L217fbc;
  #L217f68.  v7:= v0[v4] @kind byte;
  #L217f6c.  if v7 < 0 then goto L217fbc;
  #L217f70.  v7:= v4 + 1;
  #L217f74.  v4:= v0[v4] @kind byte;
  #L217f78.  v18:= v5 + 1;
  #L217f7c.  if v5 != v1 then goto L217f82;
  #L217f80.  return v6;
  #L217f82.  if v4 == v13 then goto L217fa6;
  #L217f86.  if v4 == v11 then goto L217fa6;
  #L217f8a.  if v4 < 0 then goto L217f92;
  #L217f8e.  if v10 >= v4 then goto L217f9c;
  #L217f92.  if v8 <= v4 then goto L217f98;
  #L217f96.  goto L217fa0;
  #L217f98.  if v9 < v4 then goto L217fa0;
  #L217f9c.  v5:= 1I;
  #L217f9e.  goto L217fa2;
  #L217fa0.  v5:= 0I;
  #L217fa2.  if v5 != 0 then goto L217faa;
  #L217fa6.  if v4 != v12 then goto L217fac;
  #L217faa.  return v16;
  #L217fac.  if v4 >= v14 then goto L217fb4;
  #L217fb0.  v4:= 1I;
  #L217fb2.  goto L217fb6;
  #L217fb4.  v4:= 2I;
  #L217fb6.  v6:= v6 + v4 @kind int;
  #L217fb8.  v4:= v7;
  #L217fba.  goto L217f60;
  #L217fbc.  v19:= v6;
  #L217fc0.  v6:= v5;
  #L217fc2.  v5:= v19;
  #L217fc6.  goto L217ee8;
  #L217fc8.  v3:= v7 ^> 5;
  #L217fcc.  v15:= -2I;
  #L217fce.  v14:= 128I;
  #L217fd2.  if v3 != v15 then goto L21806e;
  #L217fd6.  v3:= v4 + 1;
  #L217fda.  if v2 > v3 then goto L217fe6;
  #L217fde.  if v6 != v1 then goto L217fe4;
  #L217fe2.  return v5;
  #L217fe4.  return v16;
  #L217fe6.  v7:= v0[v4] @kind byte;
  #L217fea.  v3:= v0[v3] @kind byte;
  #L217fee.  v15:= v3 ^& 192;
  #L217ff2.  if v15 != v14 then goto L217ffa;
  #L217ff6.  v15:= 1I;
  #L217ff8.  goto L217ffc;
  #L217ffa.  v15:= 0I;
  #L217ffc.  if v15 != 0 then goto L218008;
  #L218000.  if v6 != v1 then goto L218006;
  #L218004.  return v5;
  #L218006.  return v16;
  #L218008.  v3:= v3 ^~ 3968;
  #L21800c.  v7:= v7 ^< 6;
  #L218010.  v3:= v3 ^~ v7 @kind int;
  #L218012.  if v3 >= v14 then goto L21801e;
  #L218016.  if v6 != v1 then goto L21801c;
  #L21801a.  return v5;
  #L21801c.  return v16;
  #L21801e.  v7:= v6 + 1;
  #L218022.  if v6 != v1 then goto L218028;
  #L218026.  return v5;
  #L218028.  if v3 == v13 then goto L21804c;
  #L21802c.  if v3 == v11 then goto L21804c;
  #L218030.  if v3 < 0 then goto L218038;
  #L218034.  if v10 >= v3 then goto L218042;
  #L218038.  if v8 <= v3 then goto L21803e;
  #L21803c.  goto L218046;
  #L21803e.  if v9 < v3 then goto L218046;
  #L218042.  v6:= 1I;
  #L218044.  goto L218048;
  #L218046.  v6:= 0I;
  #L218048.  if v6 != 0 then goto L218050;
  #L21804c.  if v3 != v12 then goto L218052;
  #L218050.  return v16;
  #L218052.  v6:= 65536I;
  #L218056.  if v3 >= v6 then goto L21805c;
  #L21805a.  goto L218060;
  #L21805c.  v17:= 2I;
  #L218060.  v5:= v5 + v17 @kind int;
  #L218064.  v4:= v4 + 2;
  #L218068.  v6:= v7;
  #L21806a.  goto L217ee8;
  #L21806e.  v3:= v7 ^> 4;
  #L218072.  if v3 != v15 then goto L21815e;
  #L218076.  v3:= v4 + 2;
  #L21807a.  if v2 > v3 then goto L218086;
  #L21807e.  if v6 != v1 then goto L218084;
  #L218082.  return v5;
  #L218084.  return v16;
  #L218086.  v7:= v0[v4] @kind byte;
  #L21808a.  v15:= v4 + 1;
  #L21808e.  v15:= v0[v15] @kind byte;
  #L218092.  v12:= v15 ^& 192;
  #L218096.  if v12 != v14 then goto L21809e;
  #L21809a.  v12:= 1I;
  #L21809c.  goto L2180a0;
  #L21809e.  v12:= 0I;
  #L2180a0.  if v12 != 0 then goto L2180ac;
  #L2180a4.  if v6 != v1 then goto L2180aa;
  #L2180a8.  return v5;
  #L2180aa.  return v16;
  #L2180ac.  v3:= v0[v3] @kind byte;
  #L2180b0.  v12:= v3 ^& 192;
  #L2180b4.  if v12 != v14 then goto L2180bc;
  #L2180b8.  v12:= 1I;
  #L2180ba.  goto L2180be;
  #L2180bc.  v12:= 0I;
  #L2180be.  if v12 != 0 then goto L2180ca;
  #L2180c2.  if v6 != v1 then goto L2180c8;
  #L2180c6.  return v5;
  #L2180c8.  return v16;
  #L2180ca.  v12:= -123008I;
  #L2180d0.  v3:= v3 ^~ v12 @kind int;
  #L2180d2.  v12:= v15 ^< 6;
  #L2180d6.  v3:= v3 ^~ v12 @kind int;
  #L2180d8.  v7:= v7 ^< 12;
  #L2180dc.  v3:= v3 ^~ v7 @kind int;
  #L2180de.  v7:= 2048I;
  #L2180e2.  if v3 >= v7 then goto L2180ee;
  #L2180e6.  if v6 != v1 then goto L2180ec;
  #L2180ea.  return v5;
  #L2180ec.  return v16;
  #L2180ee.  v7:= 57343I;
  #L2180f4.  v12:= 55296I;
  #L2180fa.  if v12 <= v3 then goto L218100;
  #L2180fe.  goto L21810c;
  #L218100.  if v7 < v3 then goto L21810c;
  #L218104.  if v6 != v1 then goto L21810a;
  #L218108.  return v5;
  #L21810a.  return v16;
  #L21810c.  v7:= v6 + 1;
  #L218110.  if v6 != v1 then goto L218116;
  #L218114.  return v5;
  #L218116.  if v3 == v13 then goto L21813a;
  #L21811a.  if v3 == v11 then goto L21813a;
  #L21811e.  if v3 < 0 then goto L218126;
  #L218122.  if v10 >= v3 then goto L218130;
  #L218126.  if v8 <= v3 then goto L21812c;
  #L21812a.  goto L218134;
  #L21812c.  if v9 < v3 then goto L218134;
  #L218130.  v6:= 1I;
  #L218132.  goto L218136;
  #L218134.  v6:= 0I;
  #L218136.  if v6 != 0 then goto L218144;
  #L21813a.  v6:= 65533I;
  #L218140.  if v3 != v6 then goto L218146;
  #L218144.  return v16;
  #L218146.  v6:= 65536I;
  #L21814a.  if v3 >= v6 then goto L218150;
  #L21814e.  goto L218154;
  #L218150.  v17:= 2I;
  #L218154.  v5:= v5 + v17 @kind int;
  #L218158.  v4:= v4 + 3;
  #L21815c.  goto L218068;
  #L21815e.  v3:= v7 ^> 3;
  #L218162.  if v3 != v15 then goto L21828e;
  #L218166.  v3:= v4 + 3;
  #L21816a.  if v2 > v3 then goto L218176;
  #L21816e.  if v6 != v1 then goto L218174;
  #L218172.  return v5;
  #L218174.  return v16;
  #L218176.  v7:= v0[v4] @kind byte;
  #L21817a.  v12:= v4 + 1;
  #L21817e.  v12:= v0[v12] @kind byte;
  #L218182.  v15:= v12 ^& 192;
  #L218186.  if v15 != v14 then goto L21818e;
  #L21818a.  v15:= 1I;
  #L21818c.  goto L218190;
  #L21818e.  v15:= 0I;
  #L218190.  if v15 != 0 then goto L21819c;
  #L218194.  if v6 != v1 then goto L21819a;
  #L218198.  return v5;
  #L21819a.  return v16;
  #L21819c.  v15:= v4 + 2;
  #L2181a0.  v15:= v0[v15] @kind byte;
  #L2181a4.  v9:= v15 ^& 192;
  #L2181a8.  if v9 != v14 then goto L2181b0;
  #L2181ac.  v9:= 1I;
  #L2181ae.  goto L2181b2;
  #L2181b0.  v9:= 0I;
  #L2181b2.  if v9 != 0 then goto L2181be;
  #L2181b6.  if v6 != v1 then goto L2181bc;
  #L2181ba.  return v5;
  #L2181bc.  return v16;
  #L2181be.  v3:= v0[v3] @kind byte;
  #L2181c2.  v9:= v3 ^& 192;
  #L2181c6.  if v9 != v14 then goto L2181ce;
  #L2181ca.  v9:= 1I;
  #L2181cc.  goto L2181d0;
  #L2181ce.  v9:= 0I;
  #L2181d0.  if v9 != 0 then goto L2181dc;
  #L2181d4.  if v6 != v1 then goto L2181da;
  #L2181d8.  return v5;
  #L2181da.  return v16;
  #L2181dc.  v9:= 3678080I;
  #L2181e2.  v3:= v3 ^~ v9 @kind int;
  #L2181e4.  v9:= v15 ^< 6;
  #L2181e8.  v3:= v3 ^~ v9 @kind int;
  #L2181ea.  v9:= v12 ^< 12;
  #L2181ee.  v3:= v3 ^~ v9 @kind int;
  #L2181f0.  v7:= v7 ^< 18;
  #L2181f4.  v3:= v3 ^~ v7 @kind int;
  #L2181f6.  v7:= 1114111I;
  #L2181fc.  if v3 <= v7 then goto L218208;
  #L218200.  if v6 != v1 then goto L218206;
  #L218204.  return v5;
  #L218206.  return v16;
  #L218208.  v7:= 57343I;
  #L21820e.  v9:= 55296I;
  #L218214.  if v9 <= v3 then goto L21821a;
  #L218218.  goto L218226;
  #L21821a.  if v7 < v3 then goto L218226;
  #L21821e.  if v6 != v1 then goto L218224;
  #L218222.  return v5;
  #L218224.  return v16;
  #L218226.  v7:= 65536I;
  #L21822a.  if v3 >= v7 then goto L218236;
  #L21822e.  if v6 != v1 then goto L218234;
  #L218232.  return v5;
  #L218234.  return v16;
  #L218236.  v7:= v6 + 1;
  #L21823a.  if v6 != v1 then goto L218240;
  #L21823e.  return v5;
  #L218240.  if v3 == v13 then goto L218268;
  #L218244.  if v3 == v11 then goto L218268;
  #L218248.  if v3 < 0 then goto L218250;
  #L21824c.  if v10 >= v3 then goto L21825e;
  #L218250.  if v8 <= v3 then goto L218256;
  #L218254.  goto L218262;
  #L218256.  v6:= 159I;
  #L21825a.  if v6 < v3 then goto L218262;
  #L21825e.  v6:= 1I;
  #L218260.  goto L218264;
  #L218262.  v6:= 0I;
  #L218264.  if v6 != 0 then goto L218272;
  #L218268.  v6:= 65533I;
  #L21826e.  if v3 != v6 then goto L218274;
  #L218272.  return v16;
  #L218274.  v6:= 65536I;
  #L218278.  if v3 >= v6 then goto L21827e;
  #L21827c.  goto L218282;
  #L21827e.  v17:= 2I;
  #L218282.  v5:= v5 + v17 @kind int;
  #L218286.  v4:= v4 + 4;
  #L21828a.  goto L218068;
  #L21828e.  if v6 != v1 then goto L218294;
  #L218292.  return v5;
  #L218294.  return v16;
  #L218296.  return v5;
}
procedure `int` `access$codePointIndexToCharIndex`(`byte`[] v0 @kind object, `int` v1 ) @signature `Li/b0/b;.access$codePointIndexToCharIndex:([BI)I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L217ea0.  call temp:= `a`(v0, v1) @signature `Li/b0/b;.a:([BI)I` @kind static;
  #L217ea6.  v0:= temp;
  #L217ea8.  return v0;
}
procedure `int` `access$decodeHexDigit`(`char` v0 ) @signature `Li/b0/b;.access$decodeHexDigit:(C)I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L217ebc.  call temp:= `a`(v0) @signature `Li/b0/b;.a:(C)I` @kind static;
  #L217ec2.  v0:= temp;
  #L217ec4.  return v0;
}
procedure `void` `commonWrite`(`i.h` v2 @kind object, `i.e` v3 @kind object) @signature `Li/b0/b;.commonWrite:(Li/h;Li/e;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L218378.  v0:= "$this$commonWrite" @kind object;
  #L21837c.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L218382.  v0:= "buffer" @kind object;
  #L218386.  call `checkParameterIsNotNull`(v3, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L21838c.  call temp:= `getData$okio`(v2) @signature `Li/h;.getData$okio:()[B` @kind virtual;
  #L218392.  v0:= temp @kind object;
  #L218394.  call temp:= `getData$okio`(v2) @signature `Li/h;.getData$okio:()[B` @kind virtual;
  #L21839a.  v2:= temp @kind object;
  #L21839c.  v2:= length @variable v2;
  #L21839e.  v1:= 0I;
  #L2183a0.  call temp:= `write`(v3, v0, v1, v2) @signature `Li/e;.write:([BII)Li/e;` @kind virtual;
  #L2183a6.  return @kind void;
}
procedure `char`[] `getHEX_DIGIT_CHARS`() @signature `Li/b0/b;.getHEX_DIGIT_CHARS:()[C` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L217e88.  v0:= `@@i.b0.b.a` @type ^`char`[] @kind object;
  #L217e8c.  return v0 @kind object;
}
