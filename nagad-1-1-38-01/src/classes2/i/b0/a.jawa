record `i.b0.a` @kind class @AccessFlag PUBLIC_FINAL {
}
global `byte`[] `@@i.b0.a.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Li/b0/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L217e64.  v0:= "0123456789abcdef" @kind object;
  #L217e68.  call temp:= `asUtf8ToByteArray`(v0) @signature `Li/b;.asUtf8ToByteArray:(Ljava/lang/String;)[B` @kind static;
  #L217e6e.  v0:= temp @kind object;
  #L217e70.  `@@i.b0.a.a` @type ^`byte`[] := v0 @kind object;
  #L217e74.  return @kind void;
}
procedure `byte`[] `getHEX_DIGIT_BYTES`() @signature `Li/b0/a;.getHEX_DIGIT_BYTES:()[B` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L217c4c.  v0:= `@@i.b0.a.a` @type ^`byte`[] @kind object;
  #L217c50.  return v0 @kind object;
}
procedure `java.lang.String` `readUtf8Line`(`i.e` v6 @kind object, `long` v7 ) @signature `Li/b0/a;.readUtf8Line:(Li/e;J)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L217e00.  v0:= "$this$readUtf8Line" @kind object;
  #L217e04.  call `checkParameterIsNotNull`(v6, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L217e0a.  v0:= 1L;
  #L217e0e.  v2:= 0L;
  #L217e12.  v4:= lcmp(v7, v2);
  #L217e16.  if v4 <= 0 then goto L217e44;
  #L217e1a.  v2:= v7 - v0 @kind long;
  #L217e1e.  call temp:= `getByte`(v6, v2) @signature `Li/e;.getByte:(J)B` @kind virtual;
  #L217e24.  v4:= temp;
  #L217e26.  v5:= 13I;
  #L217e2a.  v5:= (`byte`) v5 @kind i2b;
  #L217e2c.  if v4 != v5 then goto L217e44;
  #L217e30.  call temp:= `readUtf8`(v6, v2) @signature `Li/e;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L217e36.  v7:= temp @kind object;
  #L217e38.  v0:= 2L;
  #L217e3c.  call `skip`(v6, v0) @signature `Li/e;.skip:(J)V` @kind virtual;
  #L217e42.  goto L217e52;
  #L217e44.  call temp:= `readUtf8`(v6, v7) @signature `Li/e;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L217e4a.  v7:= temp @kind object;
  #L217e4c.  call `skip`(v6, v0) @signature `Li/e;.skip:(J)V` @kind virtual;
  #L217e52.  return v7 @kind object;
}
procedure `int` `selectPrefix`(`i.e` v17 @kind object, `i.q` v18 @kind object, `boolean` v19 ) @signature `Li/b0/a;.selectPrefix:(Li/e;Li/q;Z)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L217c88.  v0:= v17 @kind object;
  #L217c8c.  v1:= "$this$selectPrefix" @kind object;
  #L217c90.  call `checkParameterIsNotNull`(v0, v1) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L217c96.  v1:= "options" @kind object;
  #L217c9a.  v2:= v18 @kind object;
  #L217c9e.  call `checkParameterIsNotNull`(v2, v1) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L217ca4.  v0:= v0.`i.e.f` @type ^`i.u` @kind object;
  #L217ca8.  v1:= -2I;
  #L217caa.  v3:= -1I;
  #L217cac.  if v0 == 0 then goto L217de6;
  #L217cb0.  v4:= v0.`i.u.a` @type ^`byte`[] @kind object;
  #L217cb4.  v5:= v0.`i.u.b` @type ^`int`;
  #L217cb8.  v6:= v0.`i.u.c` @type ^`int`;
  #L217cbc.  call temp:= `getTrie$okio`(v18) @signature `Li/q;.getTrie$okio:()[I` @kind virtual;
  #L217cc2.  v2:= temp @kind object;
  #L217cc4.  v7:= 0I;
  #L217cc6.  v8:= v5;
  #L217cc8.  v10:= v6;
  #L217cca.  v9:= -1I;
  #L217ccc.  v5:= v0 @kind object;
  #L217cce.  v6:= v4 @kind object;
  #L217cd0.  v4:= 0I;
  #L217cd2.  v11:= v4 + 1;
  #L217cd6.  v4:= v2[v4];
  #L217cda.  v12:= v11 + 1;
  #L217cde.  v11:= v2[v11];
  #L217ce2.  if v11 == v3 then goto L217ce8;
  #L217ce6.  v9:= v11;
  #L217ce8.  if v5 != 0 then goto L217cee;
  #L217cec.  goto L217d44;
  #L217cee.  v11:= 0I;
  #L217cf0.  if v4 >= 0 then goto L217d80;
  #L217cf4.  v4:= v4 * -1;
  #L217cf8.  v13:= v12 + v4 @kind int;
  #L217cfc.  v4:= v8 + 1;
  #L217d00.  v8:= v6[v8] @kind byte;
  #L217d04.  v8:= v8 ^& 255;
  #L217d08.  v14:= v12 + 1;
  #L217d0c.  v12:= v2[v12];
  #L217d10.  if v8 == v12 then goto L217d16;
  #L217d14.  return v9;
  #L217d16.  if v14 != v13 then goto L217d1e;
  #L217d1a.  v8:= 1I;
  #L217d1c.  goto L217d20;
  #L217d1e.  v8:= 0I;
  #L217d20.  if v4 != v10 then goto L217d6e;
  #L217d24.  if v5 == 0 then goto L217d66;
  #L217d28.  v4:= v5.`i.u.f` @type ^`i.u` @kind object;
  #L217d2c.  if v4 == 0 then goto L217d5e;
  #L217d30.  v5:= v4.`i.u.b` @type ^`int`;
  #L217d34.  v6:= v4.`i.u.a` @type ^`byte`[] @kind object;
  #L217d38.  v10:= v4.`i.u.c` @type ^`int`;
  #L217d3c.  if v4 != v0 then goto L217d52;
  #L217d40.  if v8 != 0 then goto L217d4c;
  #L217d44.  if v19 == 0 then goto L217d4a;
  #L217d48.  return v1;
  #L217d4a.  return v9;
  #L217d4c.  v4:= v5;
  #L217d4e.  v5:= v11 @kind object;
  #L217d50.  goto L217d6e;
  #L217d52.  v16:= v5;
  #L217d56.  v5:= v4 @kind object;
  #L217d58.  v4:= v16;
  #L217d5c.  goto L217d6e;
  #L217d5e.  call `throwNpe`() @signature `Lkotlin/v/c/i;.throwNpe:()V` @kind static;
  #L217d64.  throw v11;
  #L217d66.  call `throwNpe`() @signature `Lkotlin/v/c/i;.throwNpe:()V` @kind static;
  #L217d6c.  throw v11;
  #L217d6e.  if v8 == 0 then goto L217d7a;
  #L217d72.  v8:= v2[v14];
  #L217d76.  v13:= v4;
  #L217d78.  goto L217dd2;
  #L217d7a.  v8:= v4;
  #L217d7c.  v12:= v14;
  #L217d7e.  goto L217cfc;
  #L217d80.  v13:= v8 + 1;
  #L217d84.  v8:= v6[v8] @kind byte;
  #L217d88.  v8:= v8 ^& 255;
  #L217d8c.  v14:= v12 + v4 @kind int;
  #L217d90.  if v12 != v14 then goto L217d96;
  #L217d94.  return v9;
  #L217d96.  v15:= v2[v12];
  #L217d9a.  if v8 != v15 then goto L217de0;
  #L217d9e.  v12:= v12 + v4 @kind int;
  #L217da0.  v8:= v2[v12];
  #L217da4.  if v13 != v10 then goto L217dd2;
  #L217da8.  v4:= v5.`i.u.f` @type ^`i.u` @kind object;
  #L217dac.  if v4 == 0 then goto L217dca;
  #L217db0.  v5:= v4.`i.u.b` @type ^`int`;
  #L217db4.  v6:= v4.`i.u.a` @type ^`byte`[] @kind object;
  #L217db8.  v10:= v4.`i.u.c` @type ^`int`;
  #L217dbc.  v13:= v5;
  #L217dbe.  if v4 != v0 then goto L217dc6;
  #L217dc2.  v5:= v11 @kind object;
  #L217dc4.  goto L217dd2;
  #L217dc6.  v5:= v4 @kind object;
  #L217dc8.  goto L217dd2;
  #L217dca.  call `throwNpe`() @signature `Lkotlin/v/c/i;.throwNpe:()V` @kind static;
  #L217dd0.  throw v11;
  #L217dd2.  if v8 < 0 then goto L217dd8;
  #L217dd6.  return v8;
  #L217dd8.  v4:= -v8 @kind int;
  #L217dda.  v8:= v13;
  #L217ddc.  goto L217cd2;
  #L217de0.  v12:= v12 + 1;
  #L217de4.  goto L217d90;
  #L217de6.  if v19 == 0 then goto L217dec;
  #L217dea.  goto L217dee;
  #L217dec.  v1:= -1I;
  #L217dee.  return v1;
}
procedure `int` `selectPrefix$default`(`i.e` v0 @kind object, `i.q` v1 @kind object, `boolean` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Li/b0/a;.selectPrefix$default:(Li/e;Li/q;ZILjava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L217c64.  v3:= v3 ^& 2;
  #L217c68.  if v3 == 0 then goto L217c6e;
  #L217c6c.  v2:= 0I;
  #L217c6e.  call temp:= `selectPrefix`(v0, v1, v2) @signature `Li/b0/a;.selectPrefix:(Li/e;Li/q;Z)I` @kind static;
  #L217c74.  v0:= temp;
  #L217c76.  return v0;
}
