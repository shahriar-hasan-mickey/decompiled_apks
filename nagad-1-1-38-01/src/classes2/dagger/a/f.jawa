record `dagger.a.f` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Map` `dagger.a.f.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`dagger.a.f` v0 @kind this, `int` v1 ) @signature `Ldagger/a/f;.<init>:(I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1c1b34.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c1b3a.  call temp:= `newLinkedHashMapWithExpectedSize`(v1) @signature `Ldagger/a/b;.newLinkedHashMapWithExpectedSize:(I)Ljava/util/LinkedHashMap;` @kind static;
  #L1c1b40.  v1:= temp @kind object;
  #L1c1b42.  v0.`dagger.a.f.a` @type ^`java.util.Map` := v1 @kind object;
  #L1c1b46.  return @kind void;
}
procedure `dagger.a.f` `newMapBuilder`(`int` v1 ) @signature `Ldagger/a/f;.newMapBuilder:(I)Ldagger/a/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1c1ac4.  v0:= new `dagger.a.f`;
  #L1c1ac8.  call `<init>`(v0, v1) @signature `Ldagger/a/f;.<init>:(I)V` @kind direct;
  #L1c1ace.  return v0 @kind object;
}
procedure `java.util.Map` `build`(`dagger.a.f` v1 @kind this) @signature `Ldagger/a/f;.build:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1afc.  v0:= v1.`dagger.a.f.a` @type ^`java.util.Map` @kind object;
  #L1c1b00.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L1c1b06.  v0:= temp;
  #L1c1b08.  if v0 == 0 then goto L1c1b1a;
  #L1c1b0c.  v0:= v1.`dagger.a.f.a` @type ^`java.util.Map` @kind object;
  #L1c1b10.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L1c1b16.  v0:= temp @kind object;
  #L1c1b18.  return v0 @kind object;
  #L1c1b1a.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L1c1b20.  v0:= temp @kind object;
  #L1c1b22.  return v0 @kind object;
}
procedure `dagger.a.f` `put`(`dagger.a.f` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Ldagger/a/f;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ldagger/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1ae0.  v0:= v1.`dagger.a.f.a` @type ^`java.util.Map` @kind object;
  #L1c1ae4.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1c1aea.  return v1 @kind object;
}
