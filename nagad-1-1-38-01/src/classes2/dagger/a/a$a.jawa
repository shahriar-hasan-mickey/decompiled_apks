record `dagger.a.a$a` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `java.util.LinkedHashMap` `dagger.a.a$a.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`dagger.a.a$a` v0 @kind this, `int` v1 ) @signature `Ldagger/a/a$a;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c1808.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c180e.  call temp:= `newLinkedHashMapWithExpectedSize`(v1) @signature `Ldagger/a/b;.newLinkedHashMapWithExpectedSize:(I)Ljava/util/LinkedHashMap;` @kind static;
  #L1c1814.  v1:= temp @kind object;
  #L1c1816.  v0.`dagger.a.a$a.a` @type ^`java.util.LinkedHashMap` := v1 @kind object;
  #L1c181a.  return @kind void;
}
procedure `dagger.a.a$a` `put`(`dagger.a.a$a` v2 @kind this, `java.lang.Object` v3 @kind object, `javax.inject.Provider` v4 @kind object) @signature `Ldagger/a/a$a;.put:(Ljava/lang/Object;Ljavax/inject/Provider;)Ldagger/a/a$a;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1c17d8.  v0:= v2.`dagger.a.a$a.a` @type ^`java.util.LinkedHashMap` @kind object;
  #L1c17dc.  v1:= "key" @kind object;
  #L1c17e0.  call temp:= `checkNotNull`(v3, v1) @signature `Ldagger/a/h;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1c17e6.  v1:= "provider" @kind object;
  #L1c17ea.  call temp:= `checkNotNull`(v4, v1) @signature `Ldagger/a/h;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1c17f0.  call temp:= `put`(v0, v3, v4) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1c17f6.  return v2 @kind object;
}
