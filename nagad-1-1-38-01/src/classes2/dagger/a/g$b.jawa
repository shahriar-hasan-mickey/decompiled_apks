record `dagger.a.g$b` @kind class @AccessFlag PUBLIC_FINAL extends `dagger.a.a$a` @kind class {
}
procedure `void` `<init>`(`dagger.a.g$b` v0 @kind this, `int` v1 ) @signature `Ldagger/a/g$b;.<init>:(I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1c1b94.  call `<init>`(v0, v1) @signature `Ldagger/a/a$a;.<init>:(I)V` @kind direct;
  #L1c1b9a.  return @kind void;
}
procedure `void` `<init>`(`dagger.a.g$b` v0 @kind this, `int` v1 , `dagger.a.g$a` v2 @kind object) @signature `Ldagger/a/g$b;.<init>:(ILdagger/a/g$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1c1bac.  call `<init>`(v0, v1) @signature `Ldagger/a/g$b;.<init>:(I)V` @kind direct;
  #L1c1bb2.  return @kind void;
}
procedure `dagger.a.g` `build`(`dagger.a.g$b` v3 @kind this) @signature `Ldagger/a/g$b;.build:()Ldagger/a/g;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c1b58.  v0:= new `dagger.a.g`;
  #L1c1b5c.  v1:= v3.`dagger.a.a$a.a` @type ^`java.util.LinkedHashMap` @kind object;
  #L1c1b60.  v2:= 0I;
  #L1c1b62.  call `<init>`(v0, v1, v2) @signature `Ldagger/a/g;.<init>:(Ljava/util/Map;Ldagger/a/g$a;)V` @kind direct;
  #L1c1b68.  return v0 @kind object;
}
procedure `dagger.a.g$b` `put`(`dagger.a.g$b` v0 @kind this, `java.lang.Object` v1 @kind object, `javax.inject.Provider` v2 @kind object) @signature `Ldagger/a/g$b;.put:(Ljava/lang/Object;Ljavax/inject/Provider;)Ldagger/a/g$b;` @AccessFlag PUBLIC {
    temp;

  #L1c1b7c.  call temp:= `put`(v0, v1, v2) @signature `Ldagger/a/a$a;.put:(Ljava/lang/Object;Ljavax/inject/Provider;)Ldagger/a/a$a;` @kind super;
  #L1c1b82.  return v0 @kind object;
}
