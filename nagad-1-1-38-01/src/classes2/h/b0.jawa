record `h.b0` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `h.b0.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `h.b0.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `h.b0.c` @AccessFlag PRIVATE_FINAL;
}
global `java.util.regex.Pattern` `@@h.b0.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@h.b0.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lh/b0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1fa4c0.  v0:= "([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)/([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)" @kind object;
  #L1fa4c4.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L1fa4ca.  v0:= temp @kind object;
  #L1fa4cc.  `@@h.b0.d` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L1fa4d0.  v0:= ";\\s*(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)=(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)|\"([^\"]*)\"))?" @kind object;
  #L1fa4d4.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L1fa4da.  v0:= temp @kind object;
  #L1fa4dc.  `@@h.b0.e` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L1fa4e0.  return @kind void;
}
procedure `void` `<init>`(`h.b0` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lh/b0;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1fa4f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1fa4fa.  v0.`h.b0.a` @type ^`java.lang.String` := v1 @kind object;
  #L1fa4fe.  v0.`h.b0.b` @type ^`java.lang.String` := v2 @kind object;
  #L1fa502.  v0.`h.b0.c` @type ^`java.lang.String` := v4 @kind object;
  #L1fa506.  return @kind void;
}
procedure `h.b0` `get`(`java.lang.String` v11 @kind object) @signature `Lh/b0;.get:(Ljava/lang/String;)Lh/b0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1fa290.  v0:= `@@h.b0.d` @type ^`java.util.regex.Pattern` @kind object;
  #L1fa294.  call temp:= `matcher`(v0, v11) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L1fa29a.  v0:= temp @kind object;
  #L1fa29c.  call temp:= `lookingAt`(v0) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L1fa2a2.  v1:= temp;
  #L1fa2a4.  v2:= 34I;
  #L1fa2a8.  if v1 == 0 then goto L1fa44c;
  #L1fa2ac.  v1:= 1I;
  #L1fa2ae.  call temp:= `group`(v0, v1) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L1fa2b4.  v3:= temp @kind object;
  #L1fa2b6.  v4:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L1fa2ba.  call temp:= `toLowerCase`(v3, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L1fa2c0.  v3:= temp @kind object;
  #L1fa2c2.  v4:= 2I;
  #L1fa2c4.  call temp:= `group`(v0, v4) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L1fa2ca.  v5:= temp @kind object;
  #L1fa2cc.  v6:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L1fa2d0.  call temp:= `toLowerCase`(v5, v6) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L1fa2d6.  v5:= temp @kind object;
  #L1fa2d8.  v6:= 0I;
  #L1fa2da.  v7:= `@@h.b0.e` @type ^`java.util.regex.Pattern` @kind object;
  #L1fa2de.  call temp:= `matcher`(v7, v11) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L1fa2e4.  v7:= temp @kind object;
  #L1fa2e6.  call temp:= `end`(v0) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L1fa2ec.  v0:= temp;
  #L1fa2ee.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1fa2f4.  v8:= temp;
  #L1fa2f6.  if v0 >= v8 then goto L1fa440;
  #L1fa2fa.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1fa300.  v8:= temp;
  #L1fa302.  call temp:= `region`(v7, v0, v8) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L1fa308.  call temp:= `lookingAt`(v7) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L1fa30e.  v8:= temp;
  #L1fa310.  v9:= "\" for: \"" @kind object;
  #L1fa314.  if v8 == 0 then goto L1fa3f8;
  #L1fa318.  call temp:= `group`(v7, v1) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L1fa31e.  v0:= temp @kind object;
  #L1fa320.  if v0 == 0 then goto L1fa3ec;
  #L1fa324.  v8:= "charset" @kind object;
  #L1fa328.  call temp:= `equalsIgnoreCase`(v0, v8) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1fa32e.  v0:= temp;
  #L1fa330.  if v0 != 0 then goto L1fa336;
  #L1fa334.  goto L1fa3ec;
  #L1fa336.  call temp:= `group`(v7, v4) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L1fa33c.  v0:= temp @kind object;
  #L1fa33e.  if v0 == 0 then goto L1fa37e;
  #L1fa342.  v8:= "'" @kind object;
  #L1fa346.  call temp:= `startsWith`(v0, v8) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1fa34c.  v10:= temp;
  #L1fa34e.  if v10 == 0 then goto L1fa388;
  #L1fa352.  call temp:= `endsWith`(v0, v8) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1fa358.  v8:= temp;
  #L1fa35a.  if v8 == 0 then goto L1fa388;
  #L1fa35e.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1fa364.  v8:= temp;
  #L1fa366.  if v8 <= v4 then goto L1fa388;
  #L1fa36a.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1fa370.  v8:= temp;
  #L1fa372.  v8:= v8 - v1 @kind int;
  #L1fa374.  call temp:= `substring`(v0, v1, v8) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1fa37a.  v0:= temp @kind object;
  #L1fa37c.  goto L1fa388;
  #L1fa37e.  v0:= 3I;
  #L1fa380.  call temp:= `group`(v7, v0) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L1fa386.  v0:= temp @kind object;
  #L1fa388.  if v6 == 0 then goto L1fa3ea;
  #L1fa38c.  call temp:= `equalsIgnoreCase`(v0, v6) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1fa392.  v8:= temp;
  #L1fa394.  if v8 == 0 then goto L1fa39a;
  #L1fa398.  goto L1fa3ea;
  #L1fa39a.  v1:= new `java.lang.IllegalArgumentException`;
  #L1fa39e.  v3:= new `java.lang.StringBuilder`;
  #L1fa3a2.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fa3a8.  v4:= "Multiple charsets defined: \"" @kind object;
  #L1fa3ac.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fa3b2.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fa3b8.  v4:= "\" and: \"" @kind object;
  #L1fa3bc.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fa3c2.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fa3c8.  call temp:= `append`(v3, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fa3ce.  call temp:= `append`(v3, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fa3d4.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fa3da.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fa3e0.  v11:= temp @kind object;
  #L1fa3e2.  call `<init>`(v1, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fa3e8.  throw v1;
  #L1fa3ea.  v6:= v0 @kind object;
  #L1fa3ec.  call temp:= `end`(v7) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L1fa3f2.  v0:= temp;
  #L1fa3f4.  goto L1fa2ee;
  #L1fa3f8.  v1:= new `java.lang.IllegalArgumentException`;
  #L1fa3fc.  v3:= new `java.lang.StringBuilder`;
  #L1fa400.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fa406.  v4:= "Parameter is not formatted correctly: \"" @kind object;
  #L1fa40a.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fa410.  call temp:= `substring`(v11, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1fa416.  v0:= temp @kind object;
  #L1fa418.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fa41e.  call temp:= `append`(v3, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fa424.  call temp:= `append`(v3, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fa42a.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fa430.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fa436.  v11:= temp @kind object;
  #L1fa438.  call `<init>`(v1, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fa43e.  throw v1;
  #L1fa440.  v0:= new `h.b0`;
  #L1fa444.  call `<init>`(v0, v11, v3, v5, v6) @signature `Lh/b0;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L1fa44a.  return v0 @kind object;
  #L1fa44c.  v0:= new `java.lang.IllegalArgumentException`;
  #L1fa450.  v1:= new `java.lang.StringBuilder`;
  #L1fa454.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fa45a.  v3:= "No subtype found for: \"" @kind object;
  #L1fa45e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fa464.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fa46a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fa470.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fa476.  v11:= temp @kind object;
  #L1fa478.  call `<init>`(v0, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fa47e.  throw v0;
}
procedure `h.b0` `parse`(`java.lang.String` v0 @kind object) @signature `Lh/b0;.parse:(Ljava/lang/String;)Lh/b0;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1fa490.  call temp:= `get`(v0) @signature `Lh/b0;.get:(Ljava/lang/String;)Lh/b0;` @kind static;
  #L1fa496.  v0:= temp @kind object;
  #L1fa498.  return v0 @kind object;
  #L1fa49a.  v0:= 0I;
  #L1fa49c.  return v0 @kind object;
  catch `java.lang.IllegalArgumentException` @[L1fa490..L1fa498] goto L1fa49a;
}
procedure `java.nio.charset.Charset` `charset`(`h.b0` v1 @kind this) @signature `Lh/b0;.charset:()Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fa23c.  v0:= 0I;
  #L1fa23e.  call temp:= `charset`(v1, v0) @signature `Lh/b0;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind virtual;
  #L1fa244.  v0:= temp @kind object;
  #L1fa246.  return v0 @kind object;
}
procedure `java.nio.charset.Charset` `charset`(`h.b0` v1 @kind this, `java.nio.charset.Charset` v2 @kind object) @signature `Lh/b0;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fa258.  v0:= v1.`h.b0.c` @type ^`java.lang.String` @kind object;
  #L1fa25c.  if v0 == 0 then goto L1fa26c;
  #L1fa260.  v0:= v1.`h.b0.c` @type ^`java.lang.String` @kind object;
  #L1fa264.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L1fa26a.  v2:= temp @kind object;
  #L1fa26c.  return v2 @kind object;
  catch `java.lang.IllegalArgumentException` @[L1fa258..L1fa26c] goto L1fa26c;
}
procedure `boolean` `equals`(`h.b0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lh/b0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fa1b4.  v0:= instanceof @variable v2 @type ^`h.b0` @kind boolean;
  #L1fa1b8.  if v0 == 0 then goto L1fa1d8;
  #L1fa1bc.  v2:= (`h.b0`) v2 @kind object;
  #L1fa1c0.  v2:= v2.`h.b0.a` @type ^`java.lang.String` @kind object;
  #L1fa1c4.  v0:= v1.`h.b0.a` @type ^`java.lang.String` @kind object;
  #L1fa1c8.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1fa1ce.  v2:= temp;
  #L1fa1d0.  if v2 == 0 then goto L1fa1d8;
  #L1fa1d4.  v2:= 1I;
  #L1fa1d6.  goto L1fa1da;
  #L1fa1d8.  v2:= 0I;
  #L1fa1da.  return v2;
}
procedure `int` `hashCode`(`h.b0` v1 @kind this) @signature `Lh/b0;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fa1ec.  v0:= v1.`h.b0.a` @type ^`java.lang.String` @kind object;
  #L1fa1f0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L1fa1f6.  v0:= temp;
  #L1fa1f8.  return v0;
}
procedure `java.lang.String` `toString`(`h.b0` v1 @kind this) @signature `Lh/b0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fa20c.  v0:= v1.`h.b0.a` @type ^`java.lang.String` @kind object;
  #L1fa210.  return v0 @kind object;
}
procedure `java.lang.String` `type`(`h.b0` v1 @kind this) @signature `Lh/b0;.type:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fa224.  v0:= v1.`h.b0.b` @type ^`java.lang.String` @kind object;
  #L1fa228.  return v0 @kind object;
}
