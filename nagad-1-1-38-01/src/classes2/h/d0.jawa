record `h.d0` @kind class @AccessFlag PUBLIC extends `java.lang.Cloneable` @kind interface, `h.j$a` @kind interface, `h.m0` @kind interface {
  `boolean` `h.d0.A` @AccessFlag FINAL;
  `boolean` `h.d0.B` @AccessFlag FINAL;
  `int` `h.d0.C` @AccessFlag FINAL;
  `int` `h.d0.D` @AccessFlag FINAL;
  `int` `h.d0.E` @AccessFlag FINAL;
  `int` `h.d0.F` @AccessFlag FINAL;
  `int` `h.d0.G` @AccessFlag FINAL;
  `h.s` `h.d0.f` @AccessFlag FINAL;
  `java.net.Proxy` `h.d0.g` @AccessFlag FINAL;
  `java.util.List` `h.d0.h` @AccessFlag FINAL;
  `java.util.List` `h.d0.i` @AccessFlag FINAL;
  `java.util.List` `h.d0.j` @AccessFlag FINAL;
  `java.util.List` `h.d0.k` @AccessFlag FINAL;
  `h.v$b` `h.d0.l` @AccessFlag FINAL;
  `java.net.ProxySelector` `h.d0.m` @AccessFlag FINAL;
  `h.r` `h.d0.n` @AccessFlag FINAL;
  `h.h` `h.d0.o` @AccessFlag FINAL;
  `h.n0.g.d` `h.d0.p` @AccessFlag FINAL;
  `javax.net.SocketFactory` `h.d0.q` @AccessFlag FINAL;
  `javax.net.ssl.SSLSocketFactory` `h.d0.r` @AccessFlag FINAL;
  `h.n0.l.c` `h.d0.s` @AccessFlag FINAL;
  `javax.net.ssl.HostnameVerifier` `h.d0.t` @AccessFlag FINAL;
  `h.l` `h.d0.u` @AccessFlag FINAL;
  `h.g` `h.d0.v` @AccessFlag FINAL;
  `h.g` `h.d0.w` @AccessFlag FINAL;
  `h.o` `h.d0.x` @AccessFlag FINAL;
  `h.u` `h.d0.y` @AccessFlag FINAL;
  `boolean` `h.d0.z` @AccessFlag FINAL;
}
global `java.util.List` `@@h.d0.H` @AccessFlag STATIC_FINAL;
global `java.util.List` `@@h.d0.I` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lh/d0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1fb304.  v0:= 2I;
  #L1fb306.  v1:= new `h.e0`[v0];
  #L1fb30a.  v2:= `@@h.e0.j` @type ^`h.e0` @kind object;
  #L1fb30e.  v3:= 0I;
  #L1fb310.  v1[v3]:= v2 @kind object;
  #L1fb314.  v2:= `@@h.e0.h` @type ^`h.e0` @kind object;
  #L1fb318.  v4:= 1I;
  #L1fb31a.  v1[v4]:= v2 @kind object;
  #L1fb31e.  call temp:= `immutableList`(v1) @signature `Lh/n0/e;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1fb324.  v1:= temp @kind object;
  #L1fb326.  `@@h.d0.H` @type ^`java.util.List` := v1 @kind object;
  #L1fb32a.  v0:= new `h.p`[v0];
  #L1fb32e.  v1:= `@@h.p.g` @type ^`h.p` @kind object;
  #L1fb332.  v0[v3]:= v1 @kind object;
  #L1fb336.  v1:= `@@h.p.h` @type ^`h.p` @kind object;
  #L1fb33a.  v0[v4]:= v1 @kind object;
  #L1fb33e.  call temp:= `immutableList`(v0) @signature `Lh/n0/e;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1fb344.  v0:= temp @kind object;
  #L1fb346.  `@@h.d0.I` @type ^`java.util.List` := v0 @kind object;
  #L1fb34a.  v0:= new `h.d0$a`;
  #L1fb34e.  call `<init>`(v0) @signature `Lh/d0$a;.<init>:()V` @kind direct;
  #L1fb354.  `@@h.n0.c.a` @type ^`h.n0.c` := v0 @kind object;
  #L1fb358.  return @kind void;
}
procedure `void` `<init>`(`h.d0` v1 @kind this) @signature `Lh/d0;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1fb36c.  v0:= new `h.d0$b`;
  #L1fb370.  call `<init>`(v0) @signature `Lh/d0$b;.<init>:()V` @kind direct;
  #L1fb376.  call `<init>`(v1, v0) @signature `Lh/d0;.<init>:(Lh/d0$b;)V` @kind direct;
  #L1fb37c.  return @kind void;
}
procedure `void` `<init>`(`h.d0` v4 @kind this, `h.d0$b` v5 @kind object) @signature `Lh/d0;.<init>:(Lh/d0$b;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1fb390.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1fb396.  v0:= v5.`h.d0$b.a` @type ^`h.s` @kind object;
  #L1fb39a.  v4.`h.d0.f` @type ^`h.s` := v0 @kind object;
  #L1fb39e.  v0:= v5.`h.d0$b.b` @type ^`java.net.Proxy` @kind object;
  #L1fb3a2.  v4.`h.d0.g` @type ^`java.net.Proxy` := v0 @kind object;
  #L1fb3a6.  v0:= v5.`h.d0$b.c` @type ^`java.util.List` @kind object;
  #L1fb3aa.  v4.`h.d0.h` @type ^`java.util.List` := v0 @kind object;
  #L1fb3ae.  v0:= v5.`h.d0$b.d` @type ^`java.util.List` @kind object;
  #L1fb3b2.  v4.`h.d0.i` @type ^`java.util.List` := v0 @kind object;
  #L1fb3b6.  v0:= v5.`h.d0$b.e` @type ^`java.util.List` @kind object;
  #L1fb3ba.  call temp:= `immutableList`(v0) @signature `Lh/n0/e;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L1fb3c0.  v0:= temp @kind object;
  #L1fb3c2.  v4.`h.d0.j` @type ^`java.util.List` := v0 @kind object;
  #L1fb3c6.  v0:= v5.`h.d0$b.f` @type ^`java.util.List` @kind object;
  #L1fb3ca.  call temp:= `immutableList`(v0) @signature `Lh/n0/e;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L1fb3d0.  v0:= temp @kind object;
  #L1fb3d2.  v4.`h.d0.k` @type ^`java.util.List` := v0 @kind object;
  #L1fb3d6.  v0:= v5.`h.d0$b.g` @type ^`h.v$b` @kind object;
  #L1fb3da.  v4.`h.d0.l` @type ^`h.v$b` := v0 @kind object;
  #L1fb3de.  v0:= v5.`h.d0$b.h` @type ^`java.net.ProxySelector` @kind object;
  #L1fb3e2.  v4.`h.d0.m` @type ^`java.net.ProxySelector` := v0 @kind object;
  #L1fb3e6.  v0:= v5.`h.d0$b.i` @type ^`h.r` @kind object;
  #L1fb3ea.  v4.`h.d0.n` @type ^`h.r` := v0 @kind object;
  #L1fb3ee.  v0:= v5.`h.d0$b.j` @type ^`h.h` @kind object;
  #L1fb3f2.  v4.`h.d0.o` @type ^`h.h` := v0 @kind object;
  #L1fb3f6.  v0:= v5.`h.d0$b.k` @type ^`h.n0.g.d` @kind object;
  #L1fb3fa.  v4.`h.d0.p` @type ^`h.n0.g.d` := v0 @kind object;
  #L1fb3fe.  v0:= v5.`h.d0$b.l` @type ^`javax.net.SocketFactory` @kind object;
  #L1fb402.  v4.`h.d0.q` @type ^`javax.net.SocketFactory` := v0 @kind object;
  #L1fb406.  v0:= v4.`h.d0.i` @type ^`java.util.List` @kind object;
  #L1fb40a.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1fb410.  v0:= temp @kind object;
  #L1fb412.  v1:= 0I;
  #L1fb414.  v2:= 0I;
  #L1fb416.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1fb41c.  v3:= temp;
  #L1fb41e.  if v3 == 0 then goto L1fb442;
  #L1fb422.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1fb428.  v3:= temp @kind object;
  #L1fb42a.  v3:= (`h.p`) v3 @kind object;
  #L1fb42e.  if v2 != 0 then goto L1fb43e;
  #L1fb432.  call temp:= `isTls`(v3) @signature `Lh/p;.isTls:()Z` @kind virtual;
  #L1fb438.  v2:= temp;
  #L1fb43a.  if v2 == 0 then goto L1fb414;
  #L1fb43e.  v2:= 1I;
  #L1fb440.  goto L1fb416;
  #L1fb442.  v0:= v5.`h.d0$b.m` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L1fb446.  if v0 != 0 then goto L1fb472;
  #L1fb44a.  if v2 != 0 then goto L1fb450;
  #L1fb44e.  goto L1fb472;
  #L1fb450.  call temp:= `platformTrustManager`() @signature `Lh/n0/e;.platformTrustManager:()Ljavax/net/ssl/X509TrustManager;` @kind static;
  #L1fb456.  v0:= temp @kind object;
  #L1fb458.  call temp:= `a`(v0) @signature `Lh/d0;.a:(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @kind static;
  #L1fb45e.  v1:= temp @kind object;
  #L1fb460.  v4.`h.d0.r` @type ^`javax.net.ssl.SSLSocketFactory` := v1 @kind object;
  #L1fb464.  call temp:= `get`(v0) @signature `Lh/n0/l/c;.get:(Ljavax/net/ssl/X509TrustManager;)Lh/n0/l/c;` @kind static;
  #L1fb46a.  v0:= temp @kind object;
  #L1fb46c.  v4.`h.d0.s` @type ^`h.n0.l.c` := v0 @kind object;
  #L1fb470.  goto L1fb482;
  #L1fb472.  v0:= v5.`h.d0$b.m` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L1fb476.  v4.`h.d0.r` @type ^`javax.net.ssl.SSLSocketFactory` := v0 @kind object;
  #L1fb47a.  v0:= v5.`h.d0$b.n` @type ^`h.n0.l.c` @kind object;
  #L1fb47e.  v4.`h.d0.s` @type ^`h.n0.l.c` := v0 @kind object;
  #L1fb482.  v0:= v4.`h.d0.r` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L1fb486.  if v0 == 0 then goto L1fb49c;
  #L1fb48a.  call temp:= `get`() @signature `Lh/n0/j/f;.get:()Lh/n0/j/f;` @kind static;
  #L1fb490.  v0:= temp @kind object;
  #L1fb492.  v1:= v4.`h.d0.r` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L1fb496.  call `configureSslSocketFactory`(v0, v1) @signature `Lh/n0/j/f;.configureSslSocketFactory:(Ljavax/net/ssl/SSLSocketFactory;)V` @kind virtual;
  #L1fb49c.  v0:= v5.`h.d0$b.o` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L1fb4a0.  v4.`h.d0.t` @type ^`javax.net.ssl.HostnameVerifier` := v0 @kind object;
  #L1fb4a4.  v0:= v5.`h.d0$b.p` @type ^`h.l` @kind object;
  #L1fb4a8.  v1:= v4.`h.d0.s` @type ^`h.n0.l.c` @kind object;
  #L1fb4ac.  call temp:= `a`(v0, v1) @signature `Lh/l;.a:(Lh/n0/l/c;)Lh/l;` @kind virtual;
  #L1fb4b2.  v0:= temp @kind object;
  #L1fb4b4.  v4.`h.d0.u` @type ^`h.l` := v0 @kind object;
  #L1fb4b8.  v0:= v5.`h.d0$b.q` @type ^`h.g` @kind object;
  #L1fb4bc.  v4.`h.d0.v` @type ^`h.g` := v0 @kind object;
  #L1fb4c0.  v0:= v5.`h.d0$b.r` @type ^`h.g` @kind object;
  #L1fb4c4.  v4.`h.d0.w` @type ^`h.g` := v0 @kind object;
  #L1fb4c8.  v0:= v5.`h.d0$b.s` @type ^`h.o` @kind object;
  #L1fb4cc.  v4.`h.d0.x` @type ^`h.o` := v0 @kind object;
  #L1fb4d0.  v0:= v5.`h.d0$b.t` @type ^`h.u` @kind object;
  #L1fb4d4.  v4.`h.d0.y` @type ^`h.u` := v0 @kind object;
  #L1fb4d8.  v0:= v5.`h.d0$b.u` @type ^`boolean` @kind boolean;
  #L1fb4dc.  v4.`h.d0.z` @type ^`boolean` := v0 @kind boolean;
  #L1fb4e0.  v0:= v5.`h.d0$b.v` @type ^`boolean` @kind boolean;
  #L1fb4e4.  v4.`h.d0.A` @type ^`boolean` := v0 @kind boolean;
  #L1fb4e8.  v0:= v5.`h.d0$b.w` @type ^`boolean` @kind boolean;
  #L1fb4ec.  v4.`h.d0.B` @type ^`boolean` := v0 @kind boolean;
  #L1fb4f0.  v0:= v5.`h.d0$b.x` @type ^`int`;
  #L1fb4f4.  v4.`h.d0.C` @type ^`int` := v0;
  #L1fb4f8.  v0:= v5.`h.d0$b.y` @type ^`int`;
  #L1fb4fc.  v4.`h.d0.D` @type ^`int` := v0;
  #L1fb500.  v0:= v5.`h.d0$b.z` @type ^`int`;
  #L1fb504.  v4.`h.d0.E` @type ^`int` := v0;
  #L1fb508.  v0:= v5.`h.d0$b.A` @type ^`int`;
  #L1fb50c.  v4.`h.d0.F` @type ^`int` := v0;
  #L1fb510.  v5:= v5.`h.d0$b.B` @type ^`int`;
  #L1fb514.  v4.`h.d0.G` @type ^`int` := v5;
  #L1fb518.  v5:= v4.`h.d0.j` @type ^`java.util.List` @kind object;
  #L1fb51c.  v0:= 0I;
  #L1fb51e.  call temp:= `contains`(v5, v0) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1fb524.  v5:= temp;
  #L1fb526.  if v5 != 0 then goto L1fb56e;
  #L1fb52a.  v5:= v4.`h.d0.k` @type ^`java.util.List` @kind object;
  #L1fb52e.  call temp:= `contains`(v5, v0) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1fb534.  v5:= temp;
  #L1fb536.  if v5 != 0 then goto L1fb53c;
  #L1fb53a.  return @kind void;
  #L1fb53c.  v5:= new `java.lang.IllegalStateException`;
  #L1fb540.  v0:= new `java.lang.StringBuilder`;
  #L1fb544.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fb54a.  v1:= "Null network interceptor: " @kind object;
  #L1fb54e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fb554.  v1:= v4.`h.d0.k` @type ^`java.util.List` @kind object;
  #L1fb558.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fb55e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fb564.  v0:= temp @kind object;
  #L1fb566.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fb56c.  throw v5;
  #L1fb56e.  v5:= new `java.lang.IllegalStateException`;
  #L1fb572.  v0:= new `java.lang.StringBuilder`;
  #L1fb576.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fb57c.  v1:= "Null interceptor: " @kind object;
  #L1fb580.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fb586.  v1:= v4.`h.d0.j` @type ^`java.util.List` @kind object;
  #L1fb58a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fb590.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fb596.  v0:= temp @kind object;
  #L1fb598.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fb59e.  throw v5;
}
procedure `javax.net.ssl.SSLSocketFactory` `a`(`javax.net.ssl.X509TrustManager` v3 @kind object) @signature `Lh/d0;.a:(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1fb170.  call temp:= `get`() @signature `Lh/n0/j/f;.get:()Lh/n0/j/f;` @kind static;
  #L1fb176.  v0:= temp @kind object;
  #L1fb178.  call temp:= `getSSLContext`(v0) @signature `Lh/n0/j/f;.getSSLContext:()Ljavax/net/ssl/SSLContext;` @kind virtual;
  #L1fb17e.  v0:= temp @kind object;
  #L1fb180.  v1:= 1I;
  #L1fb182.  v1:= new `javax.net.ssl.TrustManager`[v1];
  #L1fb186.  v2:= 0I;
  #L1fb188.  v1[v2]:= v3 @kind object;
  #L1fb18c.  v3:= 0I;
  #L1fb18e.  call `init`(v0, v3, v1, v3) @signature `Ljavax/net/ssl/SSLContext;.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V` @kind virtual;
  #L1fb194.  call temp:= `getSocketFactory`(v0) @signature `Ljavax/net/ssl/SSLContext;.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L1fb19a.  v3:= temp @kind object;
  #L1fb19c.  return v3 @kind object;
  #L1fb19e.  v3:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L1fb1a0.  v0:= new `java.lang.AssertionError`;
  #L1fb1a4.  v1:= "No System TLS" @kind object;
  #L1fb1a8.  call `<init>`(v0, v1, v3) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1fb1ae.  throw v0;
  catch `java.security.GeneralSecurityException` @[L1fb170..L1fb19c] goto L1fb19e;
}
procedure `h.n0.g.d` `a`(`h.d0` v1 @kind this) @signature `Lh/d0;.a:()Lh/n0/g/d;` @AccessFlag  {
    temp;
    v0;

  #L1fb2e0.  v0:= v1.`h.d0.o` @type ^`h.h` @kind object;
  #L1fb2e4.  if v0 == 0 then goto L1fb2ee;
  #L1fb2e8.  v0:= v0.`h.h.f` @type ^`h.n0.g.d` @kind object;
  #L1fb2ec.  goto L1fb2f2;
  #L1fb2ee.  v0:= v1.`h.d0.p` @type ^`h.n0.g.d` @kind object;
  #L1fb2f2.  return v0 @kind object;
}
procedure `h.g` `authenticator`(`h.d0` v1 @kind this) @signature `Lh/d0;.authenticator:()Lh/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb1e8.  v0:= v1.`h.d0.w` @type ^`h.g` @kind object;
  #L1fb1ec.  return v0 @kind object;
}
procedure `int` `callTimeoutMillis`(`h.d0` v1 @kind this) @signature `Lh/d0;.callTimeoutMillis:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb038.  v0:= v1.`h.d0.C` @type ^`int`;
  #L1fb03c.  return v0;
}
procedure `h.l` `certificatePinner`(`h.d0` v1 @kind this) @signature `Lh/d0;.certificatePinner:()Lh/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb234.  v0:= v1.`h.d0.u` @type ^`h.l` @kind object;
  #L1fb238.  return v0 @kind object;
}
procedure `int` `connectTimeoutMillis`(`h.d0` v1 @kind this) @signature `Lh/d0;.connectTimeoutMillis:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb050.  v0:= v1.`h.d0.D` @type ^`int`;
  #L1fb054.  return v0;
}
procedure `h.o` `connectionPool`(`h.d0` v1 @kind this) @signature `Lh/d0;.connectionPool:()Lh/o;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb24c.  v0:= v1.`h.d0.x` @type ^`h.o` @kind object;
  #L1fb250.  return v0 @kind object;
}
procedure `java.util.List` `connectionSpecs`(`h.d0` v1 @kind this) @signature `Lh/d0;.connectionSpecs:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb0e0.  v0:= v1.`h.d0.i` @type ^`java.util.List` @kind object;
  #L1fb0e4.  return v0 @kind object;
}
procedure `h.r` `cookieJar`(`h.d0` v1 @kind this) @signature `Lh/d0;.cookieJar:()Lh/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb264.  v0:= v1.`h.d0.n` @type ^`h.r` @kind object;
  #L1fb268.  return v0 @kind object;
}
procedure `h.s` `dispatcher`(`h.d0` v1 @kind this) @signature `Lh/d0;.dispatcher:()Lh/s;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb27c.  v0:= v1.`h.d0.f` @type ^`h.s` @kind object;
  #L1fb280.  return v0 @kind object;
}
procedure `h.u` `dns`(`h.d0` v1 @kind this) @signature `Lh/d0;.dns:()Lh/u;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb294.  v0:= v1.`h.d0.y` @type ^`h.u` @kind object;
  #L1fb298.  return v0 @kind object;
}
procedure `h.v$b` `eventListenerFactory`(`h.d0` v1 @kind this) @signature `Lh/d0;.eventListenerFactory:()Lh/v$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb2ac.  v0:= v1.`h.d0.l` @type ^`h.v$b` @kind object;
  #L1fb2b0.  return v0 @kind object;
}
procedure `boolean` `followRedirects`(`h.d0` v1 @kind this) @signature `Lh/d0;.followRedirects:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1faff0.  v0:= v1.`h.d0.A` @type ^`boolean` @kind boolean;
  #L1faff4.  return v0;
}
procedure `boolean` `followSslRedirects`(`h.d0` v1 @kind this) @signature `Lh/d0;.followSslRedirects:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb008.  v0:= v1.`h.d0.z` @type ^`boolean` @kind boolean;
  #L1fb00c.  return v0;
}
procedure `javax.net.ssl.HostnameVerifier` `hostnameVerifier`(`h.d0` v1 @kind this) @signature `Lh/d0;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb158.  v0:= v1.`h.d0.t` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L1fb15c.  return v0 @kind object;
}
procedure `java.util.List` `interceptors`(`h.d0` v1 @kind this) @signature `Lh/d0;.interceptors:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb0f8.  v0:= v1.`h.d0.j` @type ^`java.util.List` @kind object;
  #L1fb0fc.  return v0 @kind object;
}
procedure `java.util.List` `networkInterceptors`(`h.d0` v1 @kind this) @signature `Lh/d0;.networkInterceptors:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb110.  v0:= v1.`h.d0.k` @type ^`java.util.List` @kind object;
  #L1fb114.  return v0 @kind object;
}
procedure `h.d0$b` `newBuilder`(`h.d0` v1 @kind this) @signature `Lh/d0;.newBuilder:()Lh/d0$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb2c4.  v0:= new `h.d0$b`;
  #L1fb2c8.  call `<init>`(v0, v1) @signature `Lh/d0$b;.<init>:(Lh/d0;)V` @kind direct;
  #L1fb2ce.  return v0 @kind object;
}
procedure `h.j` `newCall`(`h.d0` v1 @kind this, `h.g0` v2 @kind object) @signature `Lh/d0;.newCall:(Lh/g0;)Lh/j;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb218.  v0:= 0I;
  #L1fb21a.  call temp:= `a`(v1, v2, v0) @signature `Lh/f0;.a:(Lh/d0;Lh/g0;Z)Lh/f0;` @kind static;
  #L1fb220.  v2:= temp @kind object;
  #L1fb222.  return v2 @kind object;
}
procedure `int` `pingIntervalMillis`(`h.d0` v1 @kind this) @signature `Lh/d0;.pingIntervalMillis:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb068.  v0:= v1.`h.d0.G` @type ^`int`;
  #L1fb06c.  return v0;
}
procedure `java.util.List` `protocols`(`h.d0` v1 @kind this) @signature `Lh/d0;.protocols:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb128.  v0:= v1.`h.d0.h` @type ^`java.util.List` @kind object;
  #L1fb12c.  return v0 @kind object;
}
procedure `java.net.Proxy` `proxy`(`h.d0` v1 @kind this) @signature `Lh/d0;.proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb0b0.  v0:= v1.`h.d0.g` @type ^`java.net.Proxy` @kind object;
  #L1fb0b4.  return v0 @kind object;
}
procedure `h.g` `proxyAuthenticator`(`h.d0` v1 @kind this) @signature `Lh/d0;.proxyAuthenticator:()Lh/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb200.  v0:= v1.`h.d0.v` @type ^`h.g` @kind object;
  #L1fb204.  return v0 @kind object;
}
procedure `java.net.ProxySelector` `proxySelector`(`h.d0` v1 @kind this) @signature `Lh/d0;.proxySelector:()Ljava/net/ProxySelector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb0c8.  v0:= v1.`h.d0.m` @type ^`java.net.ProxySelector` @kind object;
  #L1fb0cc.  return v0 @kind object;
}
procedure `int` `readTimeoutMillis`(`h.d0` v1 @kind this) @signature `Lh/d0;.readTimeoutMillis:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb080.  v0:= v1.`h.d0.E` @type ^`int`;
  #L1fb084.  return v0;
}
procedure `boolean` `retryOnConnectionFailure`(`h.d0` v1 @kind this) @signature `Lh/d0;.retryOnConnectionFailure:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb020.  v0:= v1.`h.d0.B` @type ^`boolean` @kind boolean;
  #L1fb024.  return v0;
}
procedure `javax.net.SocketFactory` `socketFactory`(`h.d0` v1 @kind this) @signature `Lh/d0;.socketFactory:()Ljavax/net/SocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb140.  v0:= v1.`h.d0.q` @type ^`javax.net.SocketFactory` @kind object;
  #L1fb144.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `sslSocketFactory`(`h.d0` v1 @kind this) @signature `Lh/d0;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb1d0.  v0:= v1.`h.d0.r` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L1fb1d4.  return v0 @kind object;
}
procedure `int` `writeTimeoutMillis`(`h.d0` v1 @kind this) @signature `Lh/d0;.writeTimeoutMillis:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb098.  v0:= v1.`h.d0.F` @type ^`int`;
  #L1fb09c.  return v0;
}
