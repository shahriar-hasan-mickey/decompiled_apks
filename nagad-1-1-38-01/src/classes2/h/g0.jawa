record `h.g0` @kind class @AccessFlag PUBLIC_FINAL {
  `h.z` `h.g0.a` @AccessFlag FINAL;
  `java.lang.String` `h.g0.b` @AccessFlag FINAL;
  `h.y` `h.g0.c` @AccessFlag FINAL;
  `h.h0` `h.g0.d` @AccessFlag FINAL;
  `java.util.Map` `h.g0.e` @AccessFlag FINAL;
  `h.i` `h.g0.f` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`h.g0` v1 @kind this, `h.g0$a` v2 @kind object) @signature `Lh/g0;.<init>:(Lh/g0$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1fc7b4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1fc7ba.  v0:= v2.`h.g0$a.a` @type ^`h.z` @kind object;
  #L1fc7be.  v1.`h.g0.a` @type ^`h.z` := v0 @kind object;
  #L1fc7c2.  v0:= v2.`h.g0$a.b` @type ^`java.lang.String` @kind object;
  #L1fc7c6.  v1.`h.g0.b` @type ^`java.lang.String` := v0 @kind object;
  #L1fc7ca.  v0:= v2.`h.g0$a.c` @type ^`h.y$a` @kind object;
  #L1fc7ce.  call temp:= `build`(v0) @signature `Lh/y$a;.build:()Lh/y;` @kind virtual;
  #L1fc7d4.  v0:= temp @kind object;
  #L1fc7d6.  v1.`h.g0.c` @type ^`h.y` := v0 @kind object;
  #L1fc7da.  v0:= v2.`h.g0$a.d` @type ^`h.h0` @kind object;
  #L1fc7de.  v1.`h.g0.d` @type ^`h.h0` := v0 @kind object;
  #L1fc7e2.  v2:= v2.`h.g0$a.e` @type ^`java.util.Map` @kind object;
  #L1fc7e6.  call temp:= `immutableMap`(v2) @signature `Lh/n0/e;.immutableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L1fc7ec.  v2:= temp @kind object;
  #L1fc7ee.  v1.`h.g0.e` @type ^`java.util.Map` := v2 @kind object;
  #L1fc7f2.  return @kind void;
}
procedure `h.h0` `body`(`h.g0` v1 @kind this) @signature `Lh/g0;.body:()Lh/h0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fc79c.  v0:= v1.`h.g0.d` @type ^`h.h0` @kind object;
  #L1fc7a0.  return v0 @kind object;
}
procedure `h.i` `cacheControl`(`h.g0` v1 @kind this) @signature `Lh/g0;.cacheControl:()Lh/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fc724.  v0:= v1.`h.g0.f` @type ^`h.i` @kind object;
  #L1fc728.  if v0 == 0 then goto L1fc72e;
  #L1fc72c.  goto L1fc73e;
  #L1fc72e.  v0:= v1.`h.g0.c` @type ^`h.y` @kind object;
  #L1fc732.  call temp:= `parse`(v0) @signature `Lh/i;.parse:(Lh/y;)Lh/i;` @kind static;
  #L1fc738.  v0:= temp @kind object;
  #L1fc73a.  v1.`h.g0.f` @type ^`h.i` := v0 @kind object;
  #L1fc73e.  return v0 @kind object;
}
procedure `java.lang.String` `header`(`h.g0` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lh/g0;.header:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fc680.  v0:= v1.`h.g0.c` @type ^`h.y` @kind object;
  #L1fc684.  call temp:= `get`(v0, v2) @signature `Lh/y;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1fc68a.  v2:= temp @kind object;
  #L1fc68c.  return v2 @kind object;
}
procedure `h.y` `headers`(`h.g0` v1 @kind this) @signature `Lh/g0;.headers:()Lh/y;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fc750.  v0:= v1.`h.g0.c` @type ^`h.y` @kind object;
  #L1fc754.  return v0 @kind object;
}
procedure `boolean` `isHttps`(`h.g0` v1 @kind this) @signature `Lh/g0;.isHttps:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fc618.  v0:= v1.`h.g0.a` @type ^`h.z` @kind object;
  #L1fc61c.  call temp:= `isHttps`(v0) @signature `Lh/z;.isHttps:()Z` @kind virtual;
  #L1fc622.  v0:= temp;
  #L1fc624.  return v0;
}
procedure `java.lang.String` `method`(`h.g0` v1 @kind this) @signature `Lh/g0;.method:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fc6a0.  v0:= v1.`h.g0.b` @type ^`java.lang.String` @kind object;
  #L1fc6a4.  return v0 @kind object;
}
procedure `h.g0$a` `newBuilder`(`h.g0` v1 @kind this) @signature `Lh/g0;.newBuilder:()Lh/g0$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fc780.  v0:= new `h.g0$a`;
  #L1fc784.  call `<init>`(v0, v1) @signature `Lh/g0$a;.<init>:(Lh/g0;)V` @kind direct;
  #L1fc78a.  return v0 @kind object;
}
procedure `java.lang.Object` `tag`(`h.g0` v1 @kind this) @signature `Lh/g0;.tag:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fc638.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L1fc63c.  call temp:= `tag`(v1, v0) @signature `Lh/g0;.tag:(Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L1fc642.  v0:= temp @kind object;
  #L1fc644.  return v0 @kind object;
}
procedure `java.lang.Object` `tag`(`h.g0` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lh/g0;.tag:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fc658.  v0:= v1.`h.g0.e` @type ^`java.util.Map` @kind object;
  #L1fc65c.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1fc662.  v0:= temp @kind object;
  #L1fc664.  call temp:= `cast`(v2, v0) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1fc66a.  v2:= temp @kind object;
  #L1fc66c.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`h.g0` v2 @kind this) @signature `Lh/g0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1fc6b8.  v0:= new `java.lang.StringBuilder`;
  #L1fc6bc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fc6c2.  v1:= "Request{method=" @kind object;
  #L1fc6c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fc6cc.  v1:= v2.`h.g0.b` @type ^`java.lang.String` @kind object;
  #L1fc6d0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fc6d6.  v1:= ", url=" @kind object;
  #L1fc6da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fc6e0.  v1:= v2.`h.g0.a` @type ^`h.z` @kind object;
  #L1fc6e4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fc6ea.  v1:= ", tags=" @kind object;
  #L1fc6ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fc6f4.  v1:= v2.`h.g0.e` @type ^`java.util.Map` @kind object;
  #L1fc6f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fc6fe.  v1:= 125I;
  #L1fc702.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fc708.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fc70e.  v0:= temp @kind object;
  #L1fc710.  return v0 @kind object;
}
procedure `h.z` `url`(`h.g0` v1 @kind this) @signature `Lh/g0;.url:()Lh/z;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fc768.  v0:= v1.`h.g0.a` @type ^`h.z` @kind object;
  #L1fc76c.  return v0 @kind object;
}
