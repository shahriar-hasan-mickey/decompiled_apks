record `h.p` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `h.p.a` @AccessFlag FINAL;
  `boolean` `h.p.b` @AccessFlag FINAL;
  `java.lang.String`[] `h.p.c` @AccessFlag FINAL;
  `java.lang.String`[] `h.p.d` @AccessFlag FINAL;
}
global `h.m`[] `@@h.p.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `h.m`[] `@@h.p.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `h.p` `@@h.p.g` @AccessFlag PUBLIC_STATIC_FINAL;
global `h.p` `@@h.p.h` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lh/p;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1f65fc.  v0:= 9I;
  #L1f6600.  v1:= new `h.m`[v0];
  #L1f6604.  v2:= `@@h.m.q` @type ^`h.m` @kind object;
  #L1f6608.  v3:= 0I;
  #L1f660a.  v1[v3]:= v2 @kind object;
  #L1f660e.  v2:= `@@h.m.r` @type ^`h.m` @kind object;
  #L1f6612.  v4:= 1I;
  #L1f6614.  v1[v4]:= v2 @kind object;
  #L1f6618.  v2:= `@@h.m.s` @type ^`h.m` @kind object;
  #L1f661c.  v5:= 2I;
  #L1f661e.  v1[v5]:= v2 @kind object;
  #L1f6622.  v2:= `@@h.m.k` @type ^`h.m` @kind object;
  #L1f6626.  v6:= 3I;
  #L1f6628.  v1[v6]:= v2 @kind object;
  #L1f662c.  v2:= `@@h.m.m` @type ^`h.m` @kind object;
  #L1f6630.  v7:= 4I;
  #L1f6632.  v1[v7]:= v2 @kind object;
  #L1f6636.  v2:= `@@h.m.l` @type ^`h.m` @kind object;
  #L1f663a.  v8:= 5I;
  #L1f663c.  v1[v8]:= v2 @kind object;
  #L1f6640.  v2:= `@@h.m.n` @type ^`h.m` @kind object;
  #L1f6644.  v9:= 6I;
  #L1f6646.  v1[v9]:= v2 @kind object;
  #L1f664a.  v2:= `@@h.m.p` @type ^`h.m` @kind object;
  #L1f664e.  v10:= 7I;
  #L1f6650.  v1[v10]:= v2 @kind object;
  #L1f6654.  v2:= `@@h.m.o` @type ^`h.m` @kind object;
  #L1f6658.  v11:= 8I;
  #L1f665c.  v1[v11]:= v2 @kind object;
  #L1f6660.  `@@h.p.e` @type ^`h.m`[] := v1 @kind object;
  #L1f6664.  v1:= 16I;
  #L1f6668.  v1:= new `h.m`[v1];
  #L1f666c.  v2:= `@@h.m.q` @type ^`h.m` @kind object;
  #L1f6670.  v1[v3]:= v2 @kind object;
  #L1f6674.  v2:= `@@h.m.r` @type ^`h.m` @kind object;
  #L1f6678.  v1[v4]:= v2 @kind object;
  #L1f667c.  v2:= `@@h.m.s` @type ^`h.m` @kind object;
  #L1f6680.  v1[v5]:= v2 @kind object;
  #L1f6684.  v2:= `@@h.m.k` @type ^`h.m` @kind object;
  #L1f6688.  v1[v6]:= v2 @kind object;
  #L1f668c.  v2:= `@@h.m.m` @type ^`h.m` @kind object;
  #L1f6690.  v1[v7]:= v2 @kind object;
  #L1f6694.  v2:= `@@h.m.l` @type ^`h.m` @kind object;
  #L1f6698.  v1[v8]:= v2 @kind object;
  #L1f669c.  v2:= `@@h.m.n` @type ^`h.m` @kind object;
  #L1f66a0.  v1[v9]:= v2 @kind object;
  #L1f66a4.  v2:= `@@h.m.p` @type ^`h.m` @kind object;
  #L1f66a8.  v1[v10]:= v2 @kind object;
  #L1f66ac.  v2:= `@@h.m.o` @type ^`h.m` @kind object;
  #L1f66b0.  v1[v11]:= v2 @kind object;
  #L1f66b4.  v2:= `@@h.m.i` @type ^`h.m` @kind object;
  #L1f66b8.  v1[v0]:= v2 @kind object;
  #L1f66bc.  v0:= `@@h.m.j` @type ^`h.m` @kind object;
  #L1f66c0.  v2:= 10I;
  #L1f66c4.  v1[v2]:= v0 @kind object;
  #L1f66c8.  v0:= `@@h.m.g` @type ^`h.m` @kind object;
  #L1f66cc.  v2:= 11I;
  #L1f66d0.  v1[v2]:= v0 @kind object;
  #L1f66d4.  v0:= `@@h.m.h` @type ^`h.m` @kind object;
  #L1f66d8.  v2:= 12I;
  #L1f66dc.  v1[v2]:= v0 @kind object;
  #L1f66e0.  v0:= `@@h.m.e` @type ^`h.m` @kind object;
  #L1f66e4.  v2:= 13I;
  #L1f66e8.  v1[v2]:= v0 @kind object;
  #L1f66ec.  v0:= `@@h.m.f` @type ^`h.m` @kind object;
  #L1f66f0.  v2:= 14I;
  #L1f66f4.  v1[v2]:= v0 @kind object;
  #L1f66f8.  v0:= `@@h.m.d` @type ^`h.m` @kind object;
  #L1f66fc.  v2:= 15I;
  #L1f6700.  v1[v2]:= v0 @kind object;
  #L1f6704.  `@@h.p.f` @type ^`h.m`[] := v1 @kind object;
  #L1f6708.  v0:= new `h.p$a`;
  #L1f670c.  call `<init>`(v0, v4) @signature `Lh/p$a;.<init>:(Z)V` @kind direct;
  #L1f6712.  v1:= `@@h.p.e` @type ^`h.m`[] @kind object;
  #L1f6716.  call temp:= `cipherSuites`(v0, v1) @signature `Lh/p$a;.cipherSuites:([Lh/m;)Lh/p$a;` @kind virtual;
  #L1f671c.  v1:= new `h.l0`[v5];
  #L1f6720.  v2:= `@@h.l0.g` @type ^`h.l0` @kind object;
  #L1f6724.  v1[v3]:= v2 @kind object;
  #L1f6728.  v2:= `@@h.l0.h` @type ^`h.l0` @kind object;
  #L1f672c.  v1[v4]:= v2 @kind object;
  #L1f6730.  call temp:= `tlsVersions`(v0, v1) @signature `Lh/p$a;.tlsVersions:([Lh/l0;)Lh/p$a;` @kind virtual;
  #L1f6736.  call temp:= `supportsTlsExtensions`(v0, v4) @signature `Lh/p$a;.supportsTlsExtensions:(Z)Lh/p$a;` @kind virtual;
  #L1f673c.  call temp:= `build`(v0) @signature `Lh/p$a;.build:()Lh/p;` @kind virtual;
  #L1f6742.  v0:= new `h.p$a`;
  #L1f6746.  call `<init>`(v0, v4) @signature `Lh/p$a;.<init>:(Z)V` @kind direct;
  #L1f674c.  v1:= `@@h.p.f` @type ^`h.m`[] @kind object;
  #L1f6750.  call temp:= `cipherSuites`(v0, v1) @signature `Lh/p$a;.cipherSuites:([Lh/m;)Lh/p$a;` @kind virtual;
  #L1f6756.  v1:= new `h.l0`[v5];
  #L1f675a.  v2:= `@@h.l0.g` @type ^`h.l0` @kind object;
  #L1f675e.  v1[v3]:= v2 @kind object;
  #L1f6762.  v2:= `@@h.l0.h` @type ^`h.l0` @kind object;
  #L1f6766.  v1[v4]:= v2 @kind object;
  #L1f676a.  call temp:= `tlsVersions`(v0, v1) @signature `Lh/p$a;.tlsVersions:([Lh/l0;)Lh/p$a;` @kind virtual;
  #L1f6770.  call temp:= `supportsTlsExtensions`(v0, v4) @signature `Lh/p$a;.supportsTlsExtensions:(Z)Lh/p$a;` @kind virtual;
  #L1f6776.  call temp:= `build`(v0) @signature `Lh/p$a;.build:()Lh/p;` @kind virtual;
  #L1f677c.  v0:= temp @kind object;
  #L1f677e.  `@@h.p.g` @type ^`h.p` := v0 @kind object;
  #L1f6782.  v0:= new `h.p$a`;
  #L1f6786.  call `<init>`(v0, v4) @signature `Lh/p$a;.<init>:(Z)V` @kind direct;
  #L1f678c.  v1:= `@@h.p.f` @type ^`h.m`[] @kind object;
  #L1f6790.  call temp:= `cipherSuites`(v0, v1) @signature `Lh/p$a;.cipherSuites:([Lh/m;)Lh/p$a;` @kind virtual;
  #L1f6796.  v1:= new `h.l0`[v7];
  #L1f679a.  v2:= `@@h.l0.g` @type ^`h.l0` @kind object;
  #L1f679e.  v1[v3]:= v2 @kind object;
  #L1f67a2.  v2:= `@@h.l0.h` @type ^`h.l0` @kind object;
  #L1f67a6.  v1[v4]:= v2 @kind object;
  #L1f67aa.  v2:= `@@h.l0.i` @type ^`h.l0` @kind object;
  #L1f67ae.  v1[v5]:= v2 @kind object;
  #L1f67b2.  v2:= `@@h.l0.j` @type ^`h.l0` @kind object;
  #L1f67b6.  v1[v6]:= v2 @kind object;
  #L1f67ba.  call temp:= `tlsVersions`(v0, v1) @signature `Lh/p$a;.tlsVersions:([Lh/l0;)Lh/p$a;` @kind virtual;
  #L1f67c0.  call temp:= `supportsTlsExtensions`(v0, v4) @signature `Lh/p$a;.supportsTlsExtensions:(Z)Lh/p$a;` @kind virtual;
  #L1f67c6.  call temp:= `build`(v0) @signature `Lh/p$a;.build:()Lh/p;` @kind virtual;
  #L1f67cc.  v0:= new `h.p$a`;
  #L1f67d0.  call `<init>`(v0, v3) @signature `Lh/p$a;.<init>:(Z)V` @kind direct;
  #L1f67d6.  call temp:= `build`(v0) @signature `Lh/p$a;.build:()Lh/p;` @kind virtual;
  #L1f67dc.  v0:= temp @kind object;
  #L1f67de.  `@@h.p.h` @type ^`h.p` := v0 @kind object;
  #L1f67e2.  return @kind void;
}
procedure `void` `<init>`(`h.p` v1 @kind this, `h.p$a` v2 @kind object) @signature `Lh/p;.<init>:(Lh/p$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1f67f4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f67fa.  v0:= v2.`h.p$a.a` @type ^`boolean` @kind boolean;
  #L1f67fe.  v1.`h.p.a` @type ^`boolean` := v0 @kind boolean;
  #L1f6802.  v0:= v2.`h.p$a.b` @type ^`java.lang.String`[] @kind object;
  #L1f6806.  v1.`h.p.c` @type ^`java.lang.String`[] := v0 @kind object;
  #L1f680a.  v0:= v2.`h.p$a.c` @type ^`java.lang.String`[] @kind object;
  #L1f680e.  v1.`h.p.d` @type ^`java.lang.String`[] := v0 @kind object;
  #L1f6812.  v2:= v2.`h.p$a.d` @type ^`boolean` @kind boolean;
  #L1f6816.  v1.`h.p.b` @type ^`boolean` := v2 @kind boolean;
  #L1f681a.  return @kind void;
}
procedure `h.p` `b`(`h.p` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object, `boolean` v6 ) @signature `Lh/p;.b:(Ljavax/net/ssl/SSLSocket;Z)Lh/p;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1f6548.  v0:= v4.`h.p.c` @type ^`java.lang.String`[] @kind object;
  #L1f654c.  if v0 == 0 then goto L1f656a;
  #L1f6550.  v0:= `@@h.m.b` @type ^`java.util.Comparator` @kind object;
  #L1f6554.  call temp:= `getEnabledCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L1f655a.  v1:= temp @kind object;
  #L1f655c.  v2:= v4.`h.p.c` @type ^`java.lang.String`[] @kind object;
  #L1f6560.  call temp:= `intersect`(v0, v1, v2) @signature `Lh/n0/e;.intersect:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L1f6566.  v0:= temp @kind object;
  #L1f6568.  goto L1f6572;
  #L1f656a.  call temp:= `getEnabledCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L1f6570.  v0:= temp @kind object;
  #L1f6572.  v1:= v4.`h.p.d` @type ^`java.lang.String`[] @kind object;
  #L1f6576.  if v1 == 0 then goto L1f6594;
  #L1f657a.  v1:= `@@h.n0.e.i` @type ^`java.util.Comparator` @kind object;
  #L1f657e.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L1f6584.  v2:= temp @kind object;
  #L1f6586.  v3:= v4.`h.p.d` @type ^`java.lang.String`[] @kind object;
  #L1f658a.  call temp:= `intersect`(v1, v2, v3) @signature `Lh/n0/e;.intersect:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L1f6590.  v1:= temp @kind object;
  #L1f6592.  goto L1f659c;
  #L1f6594.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L1f659a.  v1:= temp @kind object;
  #L1f659c.  call temp:= `getSupportedCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getSupportedCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L1f65a2.  v5:= temp @kind object;
  #L1f65a4.  v2:= `@@h.m.b` @type ^`java.util.Comparator` @kind object;
  #L1f65a8.  v3:= "TLS_FALLBACK_SCSV" @kind object;
  #L1f65ac.  call temp:= `indexOf`(v2, v5, v3) @signature `Lh/n0/e;.indexOf:(Ljava/util/Comparator;[Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1f65b2.  v2:= temp;
  #L1f65b4.  if v6 == 0 then goto L1f65ca;
  #L1f65b8.  v6:= -1I;
  #L1f65ba.  if v2 == v6 then goto L1f65ca;
  #L1f65be.  v5:= v5[v2] @kind object;
  #L1f65c2.  call temp:= `concat`(v0, v5) @signature `Lh/n0/e;.concat:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L1f65c8.  v0:= temp @kind object;
  #L1f65ca.  v5:= new `h.p$a`;
  #L1f65ce.  call `<init>`(v5, v4) @signature `Lh/p$a;.<init>:(Lh/p;)V` @kind direct;
  #L1f65d4.  call temp:= `cipherSuites`(v5, v0) @signature `Lh/p$a;.cipherSuites:([Ljava/lang/String;)Lh/p$a;` @kind virtual;
  #L1f65da.  call temp:= `tlsVersions`(v5, v1) @signature `Lh/p$a;.tlsVersions:([Ljava/lang/String;)Lh/p$a;` @kind virtual;
  #L1f65e0.  call temp:= `build`(v5) @signature `Lh/p$a;.build:()Lh/p;` @kind virtual;
  #L1f65e6.  v5:= temp @kind object;
  #L1f65e8.  return v5 @kind object;
}
procedure `void` `a`(`h.p` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object, `boolean` v3 ) @signature `Lh/p;.a:(Ljavax/net/ssl/SSLSocket;Z)V` @AccessFlag  {
    temp;
    v0;

  #L1f682c.  call temp:= `b`(v1, v2, v3) @signature `Lh/p;.b:(Ljavax/net/ssl/SSLSocket;Z)Lh/p;` @kind direct;
  #L1f6832.  v3:= temp @kind object;
  #L1f6834.  v0:= v3.`h.p.d` @type ^`java.lang.String`[] @kind object;
  #L1f6838.  if v0 == 0 then goto L1f6842;
  #L1f683c.  call `setEnabledProtocols`(v2, v0) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledProtocols:([Ljava/lang/String;)V` @kind virtual;
  #L1f6842.  v3:= v3.`h.p.c` @type ^`java.lang.String`[] @kind object;
  #L1f6846.  if v3 == 0 then goto L1f6850;
  #L1f684a.  call `setEnabledCipherSuites`(v2, v3) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledCipherSuites:([Ljava/lang/String;)V` @kind virtual;
  #L1f6850.  return @kind void;
}
procedure `java.util.List` `cipherSuites`(`h.p` v1 @kind this) @signature `Lh/p;.cipherSuites:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f64f8.  v0:= v1.`h.p.c` @type ^`java.lang.String`[] @kind object;
  #L1f64fc.  if v0 == 0 then goto L1f650a;
  #L1f6500.  call temp:= `a`(v0) @signature `Lh/m;.a:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L1f6506.  v0:= temp @kind object;
  #L1f6508.  goto L1f650c;
  #L1f650a.  v0:= 0I;
  #L1f650c.  return v0 @kind object;
}
procedure `boolean` `equals`(`h.p` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lh/p;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1f6304.  v0:= instanceof @variable v5 @type ^`h.p` @kind boolean;
  #L1f6308.  v1:= 0I;
  #L1f630a.  if v0 != 0 then goto L1f6310;
  #L1f630e.  return v1;
  #L1f6310.  v0:= 1I;
  #L1f6312.  if v5 != v4 then goto L1f6318;
  #L1f6316.  return v0;
  #L1f6318.  v5:= (`h.p`) v5 @kind object;
  #L1f631c.  v2:= v4.`h.p.a` @type ^`boolean` @kind boolean;
  #L1f6320.  v3:= v5.`h.p.a` @type ^`boolean` @kind boolean;
  #L1f6324.  if v2 == v3 then goto L1f632a;
  #L1f6328.  return v1;
  #L1f632a.  if v2 == 0 then goto L1f6368;
  #L1f632e.  v2:= v4.`h.p.c` @type ^`java.lang.String`[] @kind object;
  #L1f6332.  v3:= v5.`h.p.c` @type ^`java.lang.String`[] @kind object;
  #L1f6336.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L1f633c.  v2:= temp;
  #L1f633e.  if v2 != 0 then goto L1f6344;
  #L1f6342.  return v1;
  #L1f6344.  v2:= v4.`h.p.d` @type ^`java.lang.String`[] @kind object;
  #L1f6348.  v3:= v5.`h.p.d` @type ^`java.lang.String`[] @kind object;
  #L1f634c.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L1f6352.  v2:= temp;
  #L1f6354.  if v2 != 0 then goto L1f635a;
  #L1f6358.  return v1;
  #L1f635a.  v2:= v4.`h.p.b` @type ^`boolean` @kind boolean;
  #L1f635e.  v5:= v5.`h.p.b` @type ^`boolean` @kind boolean;
  #L1f6362.  if v2 == v5 then goto L1f6368;
  #L1f6366.  return v1;
  #L1f6368.  return v0;
}
procedure `int` `hashCode`(`h.p` v2 @kind this) @signature `Lh/p;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1f6410.  v0:= v2.`h.p.a` @type ^`boolean` @kind boolean;
  #L1f6414.  if v0 == 0 then goto L1f644c;
  #L1f6418.  v0:= 527I;
  #L1f641c.  v1:= v2.`h.p.c` @type ^`java.lang.String`[] @kind object;
  #L1f6420.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L1f6426.  v1:= temp;
  #L1f6428.  v0:= v0 + v1 @kind int;
  #L1f642a.  v0:= v0 * 31;
  #L1f642e.  v1:= v2.`h.p.d` @type ^`java.lang.String`[] @kind object;
  #L1f6432.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L1f6438.  v1:= temp;
  #L1f643a.  v0:= v0 + v1 @kind int;
  #L1f643c.  v0:= v0 * 31;
  #L1f6440.  v1:= v2.`h.p.b` @type ^`boolean` @kind boolean;
  #L1f6444.  v1:= v1 ^~ 1;
  #L1f6448.  v0:= v0 + v1 @kind int;
  #L1f644a.  goto L1f6450;
  #L1f644c.  v0:= 17I;
  #L1f6450.  return v0;
}
procedure `boolean` `isCompatible`(`h.p` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object) @signature `Lh/p;.isCompatible:(Ljavax/net/ssl/SSLSocket;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1f637c.  v0:= v4.`h.p.a` @type ^`boolean` @kind boolean;
  #L1f6380.  v1:= 0I;
  #L1f6382.  if v0 != 0 then goto L1f6388;
  #L1f6386.  return v1;
  #L1f6388.  v0:= v4.`h.p.d` @type ^`java.lang.String`[] @kind object;
  #L1f638c.  if v0 == 0 then goto L1f63aa;
  #L1f6390.  v2:= `@@h.n0.e.i` @type ^`java.util.Comparator` @kind object;
  #L1f6394.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L1f639a.  v3:= temp @kind object;
  #L1f639c.  call temp:= `nonEmptyIntersection`(v2, v0, v3) @signature `Lh/n0/e;.nonEmptyIntersection:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)Z` @kind static;
  #L1f63a2.  v0:= temp;
  #L1f63a4.  if v0 != 0 then goto L1f63aa;
  #L1f63a8.  return v1;
  #L1f63aa.  v0:= v4.`h.p.c` @type ^`java.lang.String`[] @kind object;
  #L1f63ae.  if v0 == 0 then goto L1f63cc;
  #L1f63b2.  v2:= `@@h.m.b` @type ^`java.util.Comparator` @kind object;
  #L1f63b6.  call temp:= `getEnabledCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L1f63bc.  v5:= temp @kind object;
  #L1f63be.  call temp:= `nonEmptyIntersection`(v2, v0, v5) @signature `Lh/n0/e;.nonEmptyIntersection:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)Z` @kind static;
  #L1f63c4.  v5:= temp;
  #L1f63c6.  if v5 != 0 then goto L1f63cc;
  #L1f63ca.  return v1;
  #L1f63cc.  v5:= 1I;
  #L1f63ce.  return v5;
}
procedure `boolean` `isTls`(`h.p` v1 @kind this) @signature `Lh/p;.isTls:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f63e0.  v0:= v1.`h.p.a` @type ^`boolean` @kind boolean;
  #L1f63e4.  return v0;
}
procedure `boolean` `supportsTlsExtensions`(`h.p` v1 @kind this) @signature `Lh/p;.supportsTlsExtensions:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f63f8.  v0:= v1.`h.p.b` @type ^`boolean` @kind boolean;
  #L1f63fc.  return v0;
}
procedure `java.util.List` `tlsVersions`(`h.p` v1 @kind this) @signature `Lh/p;.tlsVersions:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f6520.  v0:= v1.`h.p.d` @type ^`java.lang.String`[] @kind object;
  #L1f6524.  if v0 == 0 then goto L1f6532;
  #L1f6528.  call temp:= `a`(v0) @signature `Lh/l0;.a:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L1f652e.  v0:= temp @kind object;
  #L1f6530.  goto L1f6534;
  #L1f6532.  v0:= 0I;
  #L1f6534.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`h.p` v3 @kind this) @signature `Lh/p;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1f6464.  v0:= v3.`h.p.a` @type ^`boolean` @kind boolean;
  #L1f6468.  if v0 != 0 then goto L1f6472;
  #L1f646c.  v0:= "ConnectionSpec()" @kind object;
  #L1f6470.  return v0 @kind object;
  #L1f6472.  v0:= new `java.lang.StringBuilder`;
  #L1f6476.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f647c.  v1:= "ConnectionSpec(cipherSuites=" @kind object;
  #L1f6480.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f6486.  call temp:= `cipherSuites`(v3) @signature `Lh/p;.cipherSuites:()Ljava/util/List;` @kind virtual;
  #L1f648c.  v1:= temp @kind object;
  #L1f648e.  v2:= "[all enabled]" @kind object;
  #L1f6492.  call temp:= `toString`(v1, v2) @signature `Ljava/util/Objects;.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1f6498.  v1:= temp @kind object;
  #L1f649a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f64a0.  v1:= ", tlsVersions=" @kind object;
  #L1f64a4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f64aa.  call temp:= `tlsVersions`(v3) @signature `Lh/p;.tlsVersions:()Ljava/util/List;` @kind virtual;
  #L1f64b0.  v1:= temp @kind object;
  #L1f64b2.  call temp:= `toString`(v1, v2) @signature `Ljava/util/Objects;.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1f64b8.  v1:= temp @kind object;
  #L1f64ba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f64c0.  v1:= ", supportsTlsExtensions=" @kind object;
  #L1f64c4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f64ca.  v1:= v3.`h.p.b` @type ^`boolean` @kind boolean;
  #L1f64ce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f64d4.  v1:= ")" @kind object;
  #L1f64d8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f64de.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f64e4.  v0:= temp @kind object;
  #L1f64e6.  return v0 @kind object;
}
