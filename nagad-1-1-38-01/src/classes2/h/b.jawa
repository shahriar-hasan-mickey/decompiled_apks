record `h.b` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.util.Comparator` @kind interface {
}
global `h.b` `@@h.b.f` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lh/b;.<clinit>:()V` @AccessFlag STATIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L1f44e4.  v0:= new `h.b`;
  #L1f44e8.  call `<init>`(v0) @signature `Lh/b;.<init>:()V` @kind direct;
  #L1f44ee.  `@@h.b.f` @type ^`h.b` := v0 @kind object;
  #L1f44f2.  return @kind void;
}
procedure `void` `<init>`(`h.b` v0 @kind this) @signature `Lh/b;.<init>:()V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1f4504.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f450a.  return @kind void;
}
procedure `int` `compare`(`h.b` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lh/b;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1f44c0.  v1:= (`java.lang.String`) v1 @kind object;
  #L1f44c4.  v2:= (`java.lang.String`) v2 @kind object;
  #L1f44c8.  call temp:= `a`(v1, v2) @signature `Lh/m;.a:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1f44ce.  v1:= temp;
  #L1f44d0.  return v1;
}
