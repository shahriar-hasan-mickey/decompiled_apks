record `h.i0$a` @kind class @AccessFlag PUBLIC {
  `h.g0` `h.i0$a.a` @AccessFlag ;
  `h.e0` `h.i0$a.b` @AccessFlag ;
  `int` `h.i0$a.c` @AccessFlag ;
  `java.lang.String` `h.i0$a.d` @AccessFlag ;
  `h.x` `h.i0$a.e` @AccessFlag ;
  `h.y$a` `h.i0$a.f` @AccessFlag ;
  `h.j0` `h.i0$a.g` @AccessFlag ;
  `h.i0` `h.i0$a.h` @AccessFlag ;
  `h.i0` `h.i0$a.i` @AccessFlag ;
  `h.i0` `h.i0$a.j` @AccessFlag ;
  `long` `h.i0$a.k` @AccessFlag ;
  `long` `h.i0$a.l` @AccessFlag ;
  `okhttp3.internal.connection.d` `h.i0$a.m` @AccessFlag ;
}
procedure `void` `<init>`(`h.i0$a` v1 @kind this) @signature `Lh/i0$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1fca24.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1fca2a.  v0:= -1I;
  #L1fca2c.  v1.`h.i0$a.c` @type ^`int` := v0;
  #L1fca30.  v0:= new `h.y$a`;
  #L1fca34.  call `<init>`(v0) @signature `Lh/y$a;.<init>:()V` @kind direct;
  #L1fca3a.  v1.`h.i0$a.f` @type ^`h.y$a` := v0 @kind object;
  #L1fca3e.  return @kind void;
}
procedure `void` `<init>`(`h.i0$a` v2 @kind this, `h.i0` v3 @kind object) @signature `Lh/i0$a;.<init>:(Lh/i0;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1fca50.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1fca56.  v0:= -1I;
  #L1fca58.  v2.`h.i0$a.c` @type ^`int` := v0;
  #L1fca5c.  v0:= v3.`h.i0.f` @type ^`h.g0` @kind object;
  #L1fca60.  v2.`h.i0$a.a` @type ^`h.g0` := v0 @kind object;
  #L1fca64.  v0:= v3.`h.i0.g` @type ^`h.e0` @kind object;
  #L1fca68.  v2.`h.i0$a.b` @type ^`h.e0` := v0 @kind object;
  #L1fca6c.  v0:= v3.`h.i0.h` @type ^`int`;
  #L1fca70.  v2.`h.i0$a.c` @type ^`int` := v0;
  #L1fca74.  v0:= v3.`h.i0.i` @type ^`java.lang.String` @kind object;
  #L1fca78.  v2.`h.i0$a.d` @type ^`java.lang.String` := v0 @kind object;
  #L1fca7c.  v0:= v3.`h.i0.j` @type ^`h.x` @kind object;
  #L1fca80.  v2.`h.i0$a.e` @type ^`h.x` := v0 @kind object;
  #L1fca84.  v0:= v3.`h.i0.k` @type ^`h.y` @kind object;
  #L1fca88.  call temp:= `newBuilder`(v0) @signature `Lh/y;.newBuilder:()Lh/y$a;` @kind virtual;
  #L1fca8e.  v0:= temp @kind object;
  #L1fca90.  v2.`h.i0$a.f` @type ^`h.y$a` := v0 @kind object;
  #L1fca94.  v0:= v3.`h.i0.l` @type ^`h.j0` @kind object;
  #L1fca98.  v2.`h.i0$a.g` @type ^`h.j0` := v0 @kind object;
  #L1fca9c.  v0:= v3.`h.i0.m` @type ^`h.i0` @kind object;
  #L1fcaa0.  v2.`h.i0$a.h` @type ^`h.i0` := v0 @kind object;
  #L1fcaa4.  v0:= v3.`h.i0.n` @type ^`h.i0` @kind object;
  #L1fcaa8.  v2.`h.i0$a.i` @type ^`h.i0` := v0 @kind object;
  #L1fcaac.  v0:= v3.`h.i0.o` @type ^`h.i0` @kind object;
  #L1fcab0.  v2.`h.i0$a.j` @type ^`h.i0` := v0 @kind object;
  #L1fcab4.  v0:= v3.`h.i0.p` @type ^`long` @kind wide;
  #L1fcab8.  v2.`h.i0$a.k` @type ^`long` := v0 @kind wide;
  #L1fcabc.  v0:= v3.`h.i0.q` @type ^`long` @kind wide;
  #L1fcac0.  v2.`h.i0$a.l` @type ^`long` := v0 @kind wide;
  #L1fcac4.  v3:= v3.`h.i0.r` @type ^`okhttp3.internal.connection.d` @kind object;
  #L1fcac8.  v2.`h.i0$a.m` @type ^`okhttp3.internal.connection.d` := v3 @kind object;
  #L1fcacc.  return @kind void;
}
procedure `void` `a`(`h.i0$a` v1 @kind this, `h.i0` v2 @kind object) @signature `Lh/i0$a;.a:(Lh/i0;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1fcae0.  v2:= v2.`h.i0.l` @type ^`h.j0` @kind object;
  #L1fcae4.  if v2 != 0 then goto L1fcaea;
  #L1fcae8.  return @kind void;
  #L1fcaea.  v2:= new `java.lang.IllegalArgumentException`;
  #L1fcaee.  v0:= "priorResponse.body != null" @kind object;
  #L1fcaf2.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fcaf8.  throw v2;
}
procedure `void` `a`(`h.i0$a` v1 @kind this, `java.lang.String` v2 @kind object, `h.i0` v3 @kind object) @signature `Lh/i0$a;.a:(Ljava/lang/String;Lh/i0;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1fcb0c.  v0:= v3.`h.i0.l` @type ^`h.j0` @kind object;
  #L1fcb10.  if v0 != 0 then goto L1fcbb8;
  #L1fcb14.  v0:= v3.`h.i0.m` @type ^`h.i0` @kind object;
  #L1fcb18.  if v0 != 0 then goto L1fcb8a;
  #L1fcb1c.  v0:= v3.`h.i0.n` @type ^`h.i0` @kind object;
  #L1fcb20.  if v0 != 0 then goto L1fcb5c;
  #L1fcb24.  v3:= v3.`h.i0.o` @type ^`h.i0` @kind object;
  #L1fcb28.  if v3 != 0 then goto L1fcb2e;
  #L1fcb2c.  return @kind void;
  #L1fcb2e.  v3:= new `java.lang.IllegalArgumentException`;
  #L1fcb32.  v0:= new `java.lang.StringBuilder`;
  #L1fcb36.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fcb3c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fcb42.  v2:= ".priorResponse != null" @kind object;
  #L1fcb46.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fcb4c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fcb52.  v2:= temp @kind object;
  #L1fcb54.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fcb5a.  throw v3;
  #L1fcb5c.  v3:= new `java.lang.IllegalArgumentException`;
  #L1fcb60.  v0:= new `java.lang.StringBuilder`;
  #L1fcb64.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fcb6a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fcb70.  v2:= ".cacheResponse != null" @kind object;
  #L1fcb74.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fcb7a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fcb80.  v2:= temp @kind object;
  #L1fcb82.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fcb88.  throw v3;
  #L1fcb8a.  v3:= new `java.lang.IllegalArgumentException`;
  #L1fcb8e.  v0:= new `java.lang.StringBuilder`;
  #L1fcb92.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fcb98.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fcb9e.  v2:= ".networkResponse != null" @kind object;
  #L1fcba2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fcba8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fcbae.  v2:= temp @kind object;
  #L1fcbb0.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fcbb6.  throw v3;
  #L1fcbb8.  v3:= new `java.lang.IllegalArgumentException`;
  #L1fcbbc.  v0:= new `java.lang.StringBuilder`;
  #L1fcbc0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fcbc6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fcbcc.  v2:= ".body != null" @kind object;
  #L1fcbd0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fcbd6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fcbdc.  v2:= temp @kind object;
  #L1fcbde.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fcbe4.  throw v3;
}
procedure `void` `a`(`h.i0$a` v0 @kind this, `okhttp3.internal.connection.d` v1 @kind object) @signature `Lh/i0$a;.a:(Lokhttp3/internal/connection/d;)V` @AccessFlag  {
    temp;

  #L1fcbf8.  v0.`h.i0$a.m` @type ^`okhttp3.internal.connection.d` := v1 @kind object;
  #L1fcbfc.  return @kind void;
}
procedure `h.i0$a` `addHeader`(`h.i0$a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lh/i0$a;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lh/i0$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fc8a4.  v0:= v1.`h.i0$a.f` @type ^`h.y$a` @kind object;
  #L1fc8a8.  call temp:= `add`(v0, v2, v3) @signature `Lh/y$a;.add:(Ljava/lang/String;Ljava/lang/String;)Lh/y$a;` @kind virtual;
  #L1fc8ae.  return v1 @kind object;
}
procedure `h.i0$a` `body`(`h.i0$a` v0 @kind this, `h.j0` v1 @kind object) @signature `Lh/i0$a;.body:(Lh/j0;)Lh/i0$a;` @AccessFlag PUBLIC {
    temp;

  #L1fc8c0.  v0.`h.i0$a.g` @type ^`h.j0` := v1 @kind object;
  #L1fc8c4.  return v0 @kind object;
}
procedure `h.i0` `build`(`h.i0$a` v3 @kind this) @signature `Lh/i0$a;.build:()Lh/i0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1fc804.  v0:= v3.`h.i0$a.a` @type ^`h.g0` @kind object;
  #L1fc808.  if v0 == 0 then goto L1fc882;
  #L1fc80c.  v0:= v3.`h.i0$a.b` @type ^`h.e0` @kind object;
  #L1fc810.  if v0 == 0 then goto L1fc872;
  #L1fc814.  v0:= v3.`h.i0$a.c` @type ^`int`;
  #L1fc818.  if v0 < 0 then goto L1fc840;
  #L1fc81c.  v0:= v3.`h.i0$a.d` @type ^`java.lang.String` @kind object;
  #L1fc820.  if v0 == 0 then goto L1fc830;
  #L1fc824.  v0:= new `h.i0`;
  #L1fc828.  call `<init>`(v0, v3) @signature `Lh/i0;.<init>:(Lh/i0$a;)V` @kind direct;
  #L1fc82e.  return v0 @kind object;
  #L1fc830.  v0:= new `java.lang.IllegalStateException`;
  #L1fc834.  v1:= "message == null" @kind object;
  #L1fc838.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fc83e.  throw v0;
  #L1fc840.  v0:= new `java.lang.IllegalStateException`;
  #L1fc844.  v1:= new `java.lang.StringBuilder`;
  #L1fc848.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fc84e.  v2:= "code < 0: " @kind object;
  #L1fc852.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fc858.  v2:= v3.`h.i0$a.c` @type ^`int`;
  #L1fc85c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fc862.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fc868.  v1:= temp @kind object;
  #L1fc86a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fc870.  throw v0;
  #L1fc872.  v0:= new `java.lang.IllegalStateException`;
  #L1fc876.  v1:= "protocol == null" @kind object;
  #L1fc87a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fc880.  throw v0;
  #L1fc882.  v0:= new `java.lang.IllegalStateException`;
  #L1fc886.  v1:= "request == null" @kind object;
  #L1fc88a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fc890.  throw v0;
}
procedure `h.i0$a` `cacheResponse`(`h.i0$a` v1 @kind this, `h.i0` v2 @kind object) @signature `Lh/i0$a;.cacheResponse:(Lh/i0;)Lh/i0$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fc8d8.  if v2 == 0 then goto L1fc8e6;
  #L1fc8dc.  v0:= "cacheResponse" @kind object;
  #L1fc8e0.  call `a`(v1, v0, v2) @signature `Lh/i0$a;.a:(Ljava/lang/String;Lh/i0;)V` @kind direct;
  #L1fc8e6.  v1.`h.i0$a.i` @type ^`h.i0` := v2 @kind object;
  #L1fc8ea.  return v1 @kind object;
}
procedure `h.i0$a` `code`(`h.i0$a` v0 @kind this, `int` v1 ) @signature `Lh/i0$a;.code:(I)Lh/i0$a;` @AccessFlag PUBLIC {
    temp;

  #L1fc8fc.  v0.`h.i0$a.c` @type ^`int` := v1;
  #L1fc900.  return v0 @kind object;
}
procedure `h.i0$a` `handshake`(`h.i0$a` v0 @kind this, `h.x` v1 @kind object) @signature `Lh/i0$a;.handshake:(Lh/x;)Lh/i0$a;` @AccessFlag PUBLIC {
    temp;

  #L1fc914.  v0.`h.i0$a.e` @type ^`h.x` := v1 @kind object;
  #L1fc918.  return v0 @kind object;
}
procedure `h.i0$a` `header`(`h.i0$a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lh/i0$a;.header:(Ljava/lang/String;Ljava/lang/String;)Lh/i0$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fc92c.  v0:= v1.`h.i0$a.f` @type ^`h.y$a` @kind object;
  #L1fc930.  call temp:= `set`(v0, v2, v3) @signature `Lh/y$a;.set:(Ljava/lang/String;Ljava/lang/String;)Lh/y$a;` @kind virtual;
  #L1fc936.  return v1 @kind object;
}
procedure `h.i0$a` `headers`(`h.i0$a` v0 @kind this, `h.y` v1 @kind object) @signature `Lh/i0$a;.headers:(Lh/y;)Lh/i0$a;` @AccessFlag PUBLIC {
    temp;

  #L1fc948.  call temp:= `newBuilder`(v1) @signature `Lh/y;.newBuilder:()Lh/y$a;` @kind virtual;
  #L1fc94e.  v1:= temp @kind object;
  #L1fc950.  v0.`h.i0$a.f` @type ^`h.y$a` := v1 @kind object;
  #L1fc954.  return v0 @kind object;
}
procedure `h.i0$a` `message`(`h.i0$a` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lh/i0$a;.message:(Ljava/lang/String;)Lh/i0$a;` @AccessFlag PUBLIC {
    temp;

  #L1fc968.  v0.`h.i0$a.d` @type ^`java.lang.String` := v1 @kind object;
  #L1fc96c.  return v0 @kind object;
}
procedure `h.i0$a` `networkResponse`(`h.i0$a` v1 @kind this, `h.i0` v2 @kind object) @signature `Lh/i0$a;.networkResponse:(Lh/i0;)Lh/i0$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fc980.  if v2 == 0 then goto L1fc98e;
  #L1fc984.  v0:= "networkResponse" @kind object;
  #L1fc988.  call `a`(v1, v0, v2) @signature `Lh/i0$a;.a:(Ljava/lang/String;Lh/i0;)V` @kind direct;
  #L1fc98e.  v1.`h.i0$a.h` @type ^`h.i0` := v2 @kind object;
  #L1fc992.  return v1 @kind object;
}
procedure `h.i0$a` `priorResponse`(`h.i0$a` v0 @kind this, `h.i0` v1 @kind object) @signature `Lh/i0$a;.priorResponse:(Lh/i0;)Lh/i0$a;` @AccessFlag PUBLIC {
    temp;

  #L1fc9a4.  if v1 == 0 then goto L1fc9ae;
  #L1fc9a8.  call `a`(v0, v1) @signature `Lh/i0$a;.a:(Lh/i0;)V` @kind direct;
  #L1fc9ae.  v0.`h.i0$a.j` @type ^`h.i0` := v1 @kind object;
  #L1fc9b2.  return v0 @kind object;
}
procedure `h.i0$a` `protocol`(`h.i0$a` v0 @kind this, `h.e0` v1 @kind object) @signature `Lh/i0$a;.protocol:(Lh/e0;)Lh/i0$a;` @AccessFlag PUBLIC {
    temp;

  #L1fc9c4.  v0.`h.i0$a.b` @type ^`h.e0` := v1 @kind object;
  #L1fc9c8.  return v0 @kind object;
}
procedure `h.i0$a` `receivedResponseAtMillis`(`h.i0$a` v0 @kind this, `long` v1 ) @signature `Lh/i0$a;.receivedResponseAtMillis:(J)Lh/i0$a;` @AccessFlag PUBLIC {
    temp;

  #L1fc9dc.  v0.`h.i0$a.l` @type ^`long` := v1 @kind wide;
  #L1fc9e0.  return v0 @kind object;
}
procedure `h.i0$a` `request`(`h.i0$a` v0 @kind this, `h.g0` v1 @kind object) @signature `Lh/i0$a;.request:(Lh/g0;)Lh/i0$a;` @AccessFlag PUBLIC {
    temp;

  #L1fc9f4.  v0.`h.i0$a.a` @type ^`h.g0` := v1 @kind object;
  #L1fc9f8.  return v0 @kind object;
}
procedure `h.i0$a` `sentRequestAtMillis`(`h.i0$a` v0 @kind this, `long` v1 ) @signature `Lh/i0$a;.sentRequestAtMillis:(J)Lh/i0$a;` @AccessFlag PUBLIC {
    temp;

  #L1fca0c.  v0.`h.i0$a.k` @type ^`long` := v1 @kind wide;
  #L1fca10.  return v0 @kind object;
}
