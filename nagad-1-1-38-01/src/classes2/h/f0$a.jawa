record `h.f0$a` @kind class @AccessFlag FINAL extends `h.n0.d` @kind class {
  `h.k` `h.f0$a.g` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicInteger` `h.f0$a.h` @AccessFlag PRIVATE_VOLATILE;
  `h.f0` `h.f0$a.i` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<clinit>`() @signature `Lh/f0$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1fb840.  v0:= constclass @type ^`h.f0` @kind object;
  #L1fb844.  return @kind void;
}
procedure `void` `<init>`(`h.f0$a` v2 @kind this, `h.f0` v3 @kind object, `h.k` v4 @kind object) @signature `Lh/f0$a;.<init>:(Lh/f0;Lh/k;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1fb858.  v2.`h.f0$a.i` @type ^`h.f0` := v3 @kind object;
  #L1fb85c.  v0:= 1I;
  #L1fb85e.  v0:= new `java.lang.Object`[v0];
  #L1fb862.  call temp:= `b`(v3) @signature `Lh/f0;.b:()Ljava/lang/String;` @kind virtual;
  #L1fb868.  v3:= temp @kind object;
  #L1fb86a.  v1:= 0I;
  #L1fb86c.  v0[v1]:= v3 @kind object;
  #L1fb870.  v3:= "OkHttp %s" @kind object;
  #L1fb874.  call `<init>`(v2, v3, v0) @signature `Lh/n0/d;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L1fb87a.  v3:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L1fb87e.  call `<init>`(v3, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:(I)V` @kind direct;
  #L1fb884.  v2.`h.f0$a.h` @type ^`java.util.concurrent.atomic.AtomicInteger` := v3 @kind object;
  #L1fb888.  v2.`h.f0$a.g` @type ^`h.k` := v4 @kind object;
  #L1fb88c.  return @kind void;
}
procedure `java.util.concurrent.atomic.AtomicInteger` `a`(`h.f0$a` v1 @kind this) @signature `Lh/f0$a;.a:()Ljava/util/concurrent/atomic/AtomicInteger;` @AccessFlag  {
    temp;
    v0;

  #L1fb810.  v0:= v1.`h.f0$a.h` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L1fb814.  return v0 @kind object;
}
procedure `void` `a`(`h.f0$a` v0 @kind this, `h.f0$a` v1 @kind object) @signature `Lh/f0$a;.a:(Lh/f0$a;)V` @AccessFlag  {
    temp;

  #L1fba94.  v1:= v1.`h.f0$a.h` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L1fba98.  v0.`h.f0$a.h` @type ^`java.util.concurrent.atomic.AtomicInteger` := v1 @kind object;
  #L1fba9c.  return @kind void;
}
procedure `void` `a`(`h.f0$a` v2 @kind this, `java.util.concurrent.ExecutorService` v3 @kind object) @signature `Lh/f0$a;.a:(Ljava/util/concurrent/ExecutorService;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1fb9f8.  call `execute`(v3, v2) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L1fb9fe.  goto L1fba50;
  #L1fba00.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1fba02.  goto L1fba52;
  #L1fba04.  v3:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L1fba06.  v0:= new `java.io.InterruptedIOException`;
  #L1fba0a.  v1:= "executor rejected" @kind object;
  #L1fba0e.  call `<init>`(v0, v1) @signature `Ljava/io/InterruptedIOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fba14.  call temp:= `initCause`(v0, v3) @signature `Ljava/io/InterruptedIOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L1fba1a.  v3:= v2.`h.f0$a.i` @type ^`h.f0` @kind object;
  #L1fba1e.  call temp:= `a`(v3) @signature `Lh/f0;.a:(Lh/f0;)Lokhttp3/internal/connection/j;` @kind static;
  #L1fba24.  v3:= temp @kind object;
  #L1fba26.  call temp:= `noMoreExchanges`(v3, v0) @signature `Lokhttp3/internal/connection/j;.noMoreExchanges:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L1fba2c.  v3:= v2.`h.f0$a.g` @type ^`h.k` @kind object;
  #L1fba30.  v1:= v2.`h.f0$a.i` @type ^`h.f0` @kind object;
  #L1fba34.  call `onFailure`(v3, v1, v0) @signature `Lh/k;.onFailure:(Lh/j;Ljava/io/IOException;)V` @kind interface;
  #L1fba3a.  v3:= v2.`h.f0$a.i` @type ^`h.f0` @kind object;
  #L1fba3e.  v3:= v3.`h.f0.f` @type ^`h.d0` @kind object;
  #L1fba42.  call temp:= `dispatcher`(v3) @signature `Lh/d0;.dispatcher:()Lh/s;` @kind virtual;
  #L1fba48.  v3:= temp @kind object;
  #L1fba4a.  call `b`(v3, v2) @signature `Lh/s;.b:(Lh/f0$a;)V` @kind virtual;
  #L1fba50.  return @kind void;
  #L1fba52.  v0:= v2.`h.f0$a.i` @type ^`h.f0` @kind object;
  #L1fba56.  v0:= v0.`h.f0.f` @type ^`h.d0` @kind object;
  #L1fba5a.  call temp:= `dispatcher`(v0) @signature `Lh/d0;.dispatcher:()Lh/s;` @kind virtual;
  #L1fba60.  v0:= temp @kind object;
  #L1fba62.  call `b`(v0, v2) @signature `Lh/s;.b:(Lh/f0$a;)V` @kind virtual;
  #L1fba68.  throw v3;
  catch `java.util.concurrent.RejectedExecutionException` @[L1fb9f8..L1fb9fe] goto L1fba04;
  catch `java.lang.Throwable` @[L1fb9f8..L1fb9fe] goto L1fba00;
  catch `java.lang.Throwable` @[L1fba06..L1fba3a] goto L1fba00;
}
procedure `h.f0` `b`(`h.f0$a` v1 @kind this) @signature `Lh/f0$a;.b:()Lh/f0;` @AccessFlag  {
    temp;
    v0;

  #L1fb828.  v0:= v1.`h.f0$a.i` @type ^`h.f0` @kind object;
  #L1fb82c.  return v0 @kind object;
}
procedure `java.lang.String` `c`(`h.f0$a` v1 @kind this) @signature `Lh/f0$a;.c:()Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;

  #L1fb7e4.  v0:= v1.`h.f0$a.i` @type ^`h.f0` @kind object;
  #L1fb7e8.  v0:= v0.`h.f0.h` @type ^`h.g0` @kind object;
  #L1fb7ec.  call temp:= `url`(v0) @signature `Lh/g0;.url:()Lh/z;` @kind virtual;
  #L1fb7f2.  v0:= temp @kind object;
  #L1fb7f4.  call temp:= `host`(v0) @signature `Lh/z;.host:()Ljava/lang/String;` @kind virtual;
  #L1fb7fa.  v0:= temp @kind object;
  #L1fb7fc.  return v0 @kind object;
}
procedure `void` `execute`(`h.f0$a` v5 @kind this) @signature `Lh/f0$a;.execute:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1fb8a0.  v0:= v5.`h.f0$a.i` @type ^`h.f0` @kind object;
  #L1fb8a4.  call temp:= `a`(v0) @signature `Lh/f0;.a:(Lh/f0;)Lokhttp3/internal/connection/j;` @kind static;
  #L1fb8aa.  v0:= temp @kind object;
  #L1fb8ac.  call `timeoutEnter`(v0) @signature `Lokhttp3/internal/connection/j;.timeoutEnter:()V` @kind virtual;
  #L1fb8b2.  v0:= 0I;
  #L1fb8b4.  v1:= v5.`h.f0$a.i` @type ^`h.f0` @kind object;
  #L1fb8b8.  call temp:= `a`(v1) @signature `Lh/f0;.a:()Lh/i0;` @kind virtual;
  #L1fb8be.  v0:= temp @kind object;
  #L1fb8c0.  v1:= 1I;
  #L1fb8c2.  v2:= v5.`h.f0$a.g` @type ^`h.k` @kind object;
  #L1fb8c6.  v3:= v5.`h.f0$a.i` @type ^`h.f0` @kind object;
  #L1fb8ca.  call `onResponse`(v2, v3, v0) @signature `Lh/k;.onResponse:(Lh/j;Lh/i0;)V` @kind interface;
  #L1fb8d0.  v0:= v5.`h.f0$a.i` @type ^`h.f0` @kind object;
  #L1fb8d4.  v0:= v0.`h.f0.f` @type ^`h.d0` @kind object;
  #L1fb8d8.  call temp:= `dispatcher`(v0) @signature `Lh/d0;.dispatcher:()Lh/s;` @kind virtual;
  #L1fb8de.  v0:= temp @kind object;
  #L1fb8e0.  call `b`(v0, v5) @signature `Lh/s;.b:(Lh/f0$a;)V` @kind virtual;
  #L1fb8e6.  goto L1fb9a4;
  #L1fb8e8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1fb8ea.  goto L1fb8f6;
  #L1fb8ec.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1fb8ee.  goto L1fb950;
  #L1fb8f0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1fb8f2.  v0:= v1 @kind object;
  #L1fb8f4.  v1:= 0I;
  #L1fb8f6.  v2:= v5.`h.f0$a.i` @type ^`h.f0` @kind object;
  #L1fb8fa.  call `cancel`(v2) @signature `Lh/f0;.cancel:()V` @kind virtual;
  #L1fb900.  if v1 != 0 then goto L1fb944;
  #L1fb904.  v1:= new `java.io.IOException`;
  #L1fb908.  v2:= new `java.lang.StringBuilder`;
  #L1fb90c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fb912.  v3:= "canceled due to " @kind object;
  #L1fb916.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fb91c.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fb922.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fb928.  v2:= temp @kind object;
  #L1fb92a.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fb930.  call `addSuppressed`(v1, v0) @signature `Ljava/io/IOException;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1fb936.  v2:= v5.`h.f0$a.g` @type ^`h.k` @kind object;
  #L1fb93a.  v3:= v5.`h.f0$a.i` @type ^`h.f0` @kind object;
  #L1fb93e.  call `onFailure`(v2, v3, v1) @signature `Lh/k;.onFailure:(Lh/j;Ljava/io/IOException;)V` @kind interface;
  #L1fb944.  throw v0;
  #L1fb946.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1fb948.  goto L1fb9a6;
  #L1fb94a.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L1fb94c.  v0:= v1 @kind object;
  #L1fb94e.  v1:= 0I;
  #L1fb950.  if v1 == 0 then goto L1fb994;
  #L1fb954.  call temp:= `get`() @signature `Lh/n0/j/f;.get:()Lh/n0/j/f;` @kind static;
  #L1fb95a.  v1:= temp @kind object;
  #L1fb95c.  v2:= 4I;
  #L1fb95e.  v3:= new `java.lang.StringBuilder`;
  #L1fb962.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fb968.  v4:= "Callback failure for " @kind object;
  #L1fb96c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fb972.  v4:= v5.`h.f0$a.i` @type ^`h.f0` @kind object;
  #L1fb976.  call temp:= `c`(v4) @signature `Lh/f0;.c:()Ljava/lang/String;` @kind virtual;
  #L1fb97c.  v4:= temp @kind object;
  #L1fb97e.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fb984.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fb98a.  v3:= temp @kind object;
  #L1fb98c.  call `log`(v1, v2, v3, v0) @signature `Lh/n0/j/f;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L1fb992.  goto L1fb8d0;
  #L1fb994.  v1:= v5.`h.f0$a.g` @type ^`h.k` @kind object;
  #L1fb998.  v2:= v5.`h.f0$a.i` @type ^`h.f0` @kind object;
  #L1fb99c.  call `onFailure`(v1, v2, v0) @signature `Lh/k;.onFailure:(Lh/j;Ljava/io/IOException;)V` @kind interface;
  #L1fb9a2.  goto L1fb8d0;
  #L1fb9a4.  return @kind void;
  #L1fb9a6.  v1:= v5.`h.f0$a.i` @type ^`h.f0` @kind object;
  #L1fb9aa.  v1:= v1.`h.f0.f` @type ^`h.d0` @kind object;
  #L1fb9ae.  call temp:= `dispatcher`(v1) @signature `Lh/d0;.dispatcher:()Lh/s;` @kind virtual;
  #L1fb9b4.  v1:= temp @kind object;
  #L1fb9b6.  call `b`(v1, v5) @signature `Lh/s;.b:(Lh/f0$a;)V` @kind virtual;
  #L1fb9bc.  throw v0;
  catch `java.io.IOException` @[L1fb8b4..L1fb8c0] goto L1fb94a;
  catch `java.lang.Throwable` @[L1fb8b4..L1fb8c0] goto L1fb8f0;
  catch `java.io.IOException` @[L1fb8c2..L1fb8d0] goto L1fb8ec;
  catch `java.lang.Throwable` @[L1fb8c2..L1fb8d0] goto L1fb8e8;
  catch `java.lang.Throwable` @[L1fb8f6..L1fb9a2] goto L1fb946;
}
