record `h.c0$a` @kind class @AccessFlag PUBLIC_FINAL {
  `i.h` `h.c0$a.a` @AccessFlag PRIVATE_FINAL;
  `h.b0` `h.c0$a.b` @AccessFlag PRIVATE;
  `java.util.List` `h.c0$a.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`h.c0$a` v1 @kind this) @signature `Lh/c0$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1fa660.  call temp:= `randomUUID`() @signature `Ljava/util/UUID;.randomUUID:()Ljava/util/UUID;` @kind static;
  #L1fa666.  v0:= temp @kind object;
  #L1fa668.  call temp:= `toString`(v0) @signature `Ljava/util/UUID;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fa66e.  v0:= temp @kind object;
  #L1fa670.  call `<init>`(v1, v0) @signature `Lh/c0$a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fa676.  return @kind void;
}
procedure `void` `<init>`(`h.c0$a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lh/c0$a;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1fa688.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1fa68e.  v0:= `@@h.c0.e` @type ^`h.b0` @kind object;
  #L1fa692.  v1.`h.c0$a.b` @type ^`h.b0` := v0 @kind object;
  #L1fa696.  v0:= new `java.util.ArrayList`;
  #L1fa69a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1fa6a0.  v1.`h.c0$a.c` @type ^`java.util.List` := v0 @kind object;
  #L1fa6a4.  call temp:= `encodeUtf8`(v2) @signature `Li/h;.encodeUtf8:(Ljava/lang/String;)Li/h;` @kind static;
  #L1fa6aa.  v2:= temp @kind object;
  #L1fa6ac.  v1.`h.c0$a.a` @type ^`i.h` := v2 @kind object;
  #L1fa6b0.  return @kind void;
}
procedure `h.c0$a` `addFormDataPart`(`h.c0$a` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lh/c0$a;.addFormDataPart:(Ljava/lang/String;Ljava/lang/String;)Lh/c0$a;` @AccessFlag PUBLIC {
    temp;

  #L1fa560.  call temp:= `createFormData`(v1, v2) @signature `Lh/c0$b;.createFormData:(Ljava/lang/String;Ljava/lang/String;)Lh/c0$b;` @kind static;
  #L1fa566.  v1:= temp @kind object;
  #L1fa568.  call temp:= `addPart`(v0, v1) @signature `Lh/c0$a;.addPart:(Lh/c0$b;)Lh/c0$a;` @kind virtual;
  #L1fa56e.  return v0 @kind object;
}
procedure `h.c0$a` `addFormDataPart`(`h.c0$a` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `h.h0` v3 @kind object) @signature `Lh/c0$a;.addFormDataPart:(Ljava/lang/String;Ljava/lang/String;Lh/h0;)Lh/c0$a;` @AccessFlag PUBLIC {
    temp;

  #L1fa580.  call temp:= `createFormData`(v1, v2, v3) @signature `Lh/c0$b;.createFormData:(Ljava/lang/String;Ljava/lang/String;Lh/h0;)Lh/c0$b;` @kind static;
  #L1fa586.  v1:= temp @kind object;
  #L1fa588.  call temp:= `addPart`(v0, v1) @signature `Lh/c0$a;.addPart:(Lh/c0$b;)Lh/c0$a;` @kind virtual;
  #L1fa58e.  return v0 @kind object;
}
procedure `h.c0$a` `addPart`(`h.c0$a` v1 @kind this, `h.c0$b` v2 @kind object) @signature `Lh/c0$a;.addPart:(Lh/c0$b;)Lh/c0$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fa5c0.  if v2 == 0 then goto L1fa5d0;
  #L1fa5c4.  v0:= v1.`h.c0$a.c` @type ^`java.util.List` @kind object;
  #L1fa5c8.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1fa5ce.  return v1 @kind object;
  #L1fa5d0.  v2:= new `java.lang.NullPointerException`;
  #L1fa5d4.  v0:= "part == null" @kind object;
  #L1fa5d8.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fa5de.  throw v2;
}
procedure `h.c0$a` `addPart`(`h.c0$a` v0 @kind this, `h.y` v1 @kind object, `h.h0` v2 @kind object) @signature `Lh/c0$a;.addPart:(Lh/y;Lh/h0;)Lh/c0$a;` @AccessFlag PUBLIC {
    temp;

  #L1fa5a0.  call temp:= `create`(v1, v2) @signature `Lh/c0$b;.create:(Lh/y;Lh/h0;)Lh/c0$b;` @kind static;
  #L1fa5a6.  v1:= temp @kind object;
  #L1fa5a8.  call temp:= `addPart`(v0, v1) @signature `Lh/c0$a;.addPart:(Lh/c0$b;)Lh/c0$a;` @kind virtual;
  #L1fa5ae.  return v0 @kind object;
}
procedure `h.c0` `build`(`h.c0$a` v4 @kind this) @signature `Lh/c0$a;.build:()Lh/c0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1fa518.  v0:= v4.`h.c0$a.c` @type ^`java.util.List` @kind object;
  #L1fa51c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1fa522.  v0:= temp;
  #L1fa524.  if v0 != 0 then goto L1fa540;
  #L1fa528.  v0:= new `h.c0`;
  #L1fa52c.  v1:= v4.`h.c0$a.a` @type ^`i.h` @kind object;
  #L1fa530.  v2:= v4.`h.c0$a.b` @type ^`h.b0` @kind object;
  #L1fa534.  v3:= v4.`h.c0$a.c` @type ^`java.util.List` @kind object;
  #L1fa538.  call `<init>`(v0, v1, v2, v3) @signature `Lh/c0;.<init>:(Li/h;Lh/b0;Ljava/util/List;)V` @kind direct;
  #L1fa53e.  return v0 @kind object;
  #L1fa540.  v0:= new `java.lang.IllegalStateException`;
  #L1fa544.  v1:= "Multipart body must have at least one part." @kind object;
  #L1fa548.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fa54e.  throw v0;
}
procedure `h.c0$a` `setType`(`h.c0$a` v3 @kind this, `h.b0` v4 @kind object) @signature `Lh/c0$a;.setType:(Lh/b0;)Lh/c0$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1fa5f0.  if v4 == 0 then goto L1fa640;
  #L1fa5f4.  call temp:= `type`(v4) @signature `Lh/b0;.type:()Ljava/lang/String;` @kind virtual;
  #L1fa5fa.  v0:= temp @kind object;
  #L1fa5fc.  v1:= "multipart" @kind object;
  #L1fa600.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1fa606.  v0:= temp;
  #L1fa608.  if v0 == 0 then goto L1fa612;
  #L1fa60c.  v3.`h.c0$a.b` @type ^`h.b0` := v4 @kind object;
  #L1fa610.  return v3 @kind object;
  #L1fa612.  v0:= new `java.lang.IllegalArgumentException`;
  #L1fa616.  v1:= new `java.lang.StringBuilder`;
  #L1fa61a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fa620.  v2:= "multipart != " @kind object;
  #L1fa624.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fa62a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fa630.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fa636.  v4:= temp @kind object;
  #L1fa638.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fa63e.  throw v0;
  #L1fa640.  v4:= new `java.lang.NullPointerException`;
  #L1fa644.  v0:= "type == null" @kind object;
  #L1fa648.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fa64e.  throw v4;
}
