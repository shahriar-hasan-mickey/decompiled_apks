record `h.e` @kind class @AccessFlag PUBLIC_FINAL {
  `h.z` `h.e.a` @AccessFlag FINAL;
  `h.u` `h.e.b` @AccessFlag FINAL;
  `javax.net.SocketFactory` `h.e.c` @AccessFlag FINAL;
  `h.g` `h.e.d` @AccessFlag FINAL;
  `java.util.List` `h.e.e` @AccessFlag FINAL;
  `java.util.List` `h.e.f` @AccessFlag FINAL;
  `java.net.ProxySelector` `h.e.g` @AccessFlag FINAL;
  `java.net.Proxy` `h.e.h` @AccessFlag FINAL;
  `javax.net.ssl.SSLSocketFactory` `h.e.i` @AccessFlag FINAL;
  `javax.net.ssl.HostnameVerifier` `h.e.j` @AccessFlag FINAL;
  `h.l` `h.e.k` @AccessFlag FINAL;
}
procedure `void` `<init>`(`h.e` v2 @kind this, `java.lang.String` v3 @kind object, `int` v4 , `h.u` v5 @kind object, `javax.net.SocketFactory` v6 @kind object, `javax.net.ssl.SSLSocketFactory` v7 @kind object, `javax.net.ssl.HostnameVerifier` v8 @kind object, `h.l` v9 @kind object, `h.g` v10 @kind object, `java.net.Proxy` v11 @kind object, `java.util.List` v12 @kind object, `java.util.List` v13 @kind object, `java.net.ProxySelector` v14 @kind object) @signature `Lh/e;.<init>:(Ljava/lang/String;ILh/u;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;Lh/l;Lh/g;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1f4944.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f494a.  v0:= new `h.z$a`;
  #L1f494e.  call `<init>`(v0) @signature `Lh/z$a;.<init>:()V` @kind direct;
  #L1f4954.  if v7 == 0 then goto L1f495e;
  #L1f4958.  v1:= "https" @kind object;
  #L1f495c.  goto L1f4962;
  #L1f495e.  v1:= "http" @kind object;
  #L1f4962.  call temp:= `scheme`(v0, v1) @signature `Lh/z$a;.scheme:(Ljava/lang/String;)Lh/z$a;` @kind virtual;
  #L1f4968.  call temp:= `host`(v0, v3) @signature `Lh/z$a;.host:(Ljava/lang/String;)Lh/z$a;` @kind virtual;
  #L1f496e.  call temp:= `port`(v0, v4) @signature `Lh/z$a;.port:(I)Lh/z$a;` @kind virtual;
  #L1f4974.  call temp:= `build`(v0) @signature `Lh/z$a;.build:()Lh/z;` @kind virtual;
  #L1f497a.  v3:= temp @kind object;
  #L1f497c.  v2.`h.e.a` @type ^`h.z` := v3 @kind object;
  #L1f4980.  if v5 == 0 then goto L1f4a22;
  #L1f4984.  v2.`h.e.b` @type ^`h.u` := v5 @kind object;
  #L1f4988.  if v6 == 0 then goto L1f4a12;
  #L1f498c.  v2.`h.e.c` @type ^`javax.net.SocketFactory` := v6 @kind object;
  #L1f4990.  if v10 == 0 then goto L1f4a02;
  #L1f4994.  v2.`h.e.d` @type ^`h.g` := v10 @kind object;
  #L1f4998.  if v12 == 0 then goto L1f49f2;
  #L1f499c.  call temp:= `immutableList`(v12) @signature `Lh/n0/e;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L1f49a2.  v3:= temp @kind object;
  #L1f49a4.  v2.`h.e.e` @type ^`java.util.List` := v3 @kind object;
  #L1f49a8.  if v13 == 0 then goto L1f49e2;
  #L1f49ac.  call temp:= `immutableList`(v13) @signature `Lh/n0/e;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L1f49b2.  v3:= temp @kind object;
  #L1f49b4.  v2.`h.e.f` @type ^`java.util.List` := v3 @kind object;
  #L1f49b8.  if v14 == 0 then goto L1f49d2;
  #L1f49bc.  v2.`h.e.g` @type ^`java.net.ProxySelector` := v14 @kind object;
  #L1f49c0.  v2.`h.e.h` @type ^`java.net.Proxy` := v11 @kind object;
  #L1f49c4.  v2.`h.e.i` @type ^`javax.net.ssl.SSLSocketFactory` := v7 @kind object;
  #L1f49c8.  v2.`h.e.j` @type ^`javax.net.ssl.HostnameVerifier` := v8 @kind object;
  #L1f49cc.  v2.`h.e.k` @type ^`h.l` := v9 @kind object;
  #L1f49d0.  return @kind void;
  #L1f49d2.  v3:= new `java.lang.NullPointerException`;
  #L1f49d6.  v4:= "proxySelector == null" @kind object;
  #L1f49da.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f49e0.  throw v3;
  #L1f49e2.  v3:= new `java.lang.NullPointerException`;
  #L1f49e6.  v4:= "connectionSpecs == null" @kind object;
  #L1f49ea.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f49f0.  throw v3;
  #L1f49f2.  v3:= new `java.lang.NullPointerException`;
  #L1f49f6.  v4:= "protocols == null" @kind object;
  #L1f49fa.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f4a00.  throw v3;
  #L1f4a02.  v3:= new `java.lang.NullPointerException`;
  #L1f4a06.  v4:= "proxyAuthenticator == null" @kind object;
  #L1f4a0a.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f4a10.  throw v3;
  #L1f4a12.  v3:= new `java.lang.NullPointerException`;
  #L1f4a16.  v4:= "socketFactory == null" @kind object;
  #L1f4a1a.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f4a20.  throw v3;
  #L1f4a22.  v3:= new `java.lang.NullPointerException`;
  #L1f4a26.  v4:= "dns == null" @kind object;
  #L1f4a2a.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f4a30.  throw v3;
}
procedure `boolean` `a`(`h.e` v2 @kind this, `h.e` v3 @kind object) @signature `Lh/e;.a:(Lh/e;)Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1f45ec.  v0:= v2.`h.e.b` @type ^`h.u` @kind object;
  #L1f45f0.  v1:= v3.`h.e.b` @type ^`h.u` @kind object;
  #L1f45f4.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f45fa.  v0:= temp;
  #L1f45fc.  if v0 == 0 then goto L1f46c8;
  #L1f4600.  v0:= v2.`h.e.d` @type ^`h.g` @kind object;
  #L1f4604.  v1:= v3.`h.e.d` @type ^`h.g` @kind object;
  #L1f4608.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f460e.  v0:= temp;
  #L1f4610.  if v0 == 0 then goto L1f46c8;
  #L1f4614.  v0:= v2.`h.e.e` @type ^`java.util.List` @kind object;
  #L1f4618.  v1:= v3.`h.e.e` @type ^`java.util.List` @kind object;
  #L1f461c.  call temp:= `equals`(v0, v1) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L1f4622.  v0:= temp;
  #L1f4624.  if v0 == 0 then goto L1f46c8;
  #L1f4628.  v0:= v2.`h.e.f` @type ^`java.util.List` @kind object;
  #L1f462c.  v1:= v3.`h.e.f` @type ^`java.util.List` @kind object;
  #L1f4630.  call temp:= `equals`(v0, v1) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L1f4636.  v0:= temp;
  #L1f4638.  if v0 == 0 then goto L1f46c8;
  #L1f463c.  v0:= v2.`h.e.g` @type ^`java.net.ProxySelector` @kind object;
  #L1f4640.  v1:= v3.`h.e.g` @type ^`java.net.ProxySelector` @kind object;
  #L1f4644.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f464a.  v0:= temp;
  #L1f464c.  if v0 == 0 then goto L1f46c8;
  #L1f4650.  v0:= v2.`h.e.h` @type ^`java.net.Proxy` @kind object;
  #L1f4654.  v1:= v3.`h.e.h` @type ^`java.net.Proxy` @kind object;
  #L1f4658.  call temp:= `equals`(v0, v1) @signature `Ljava/util/Objects;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1f465e.  v0:= temp;
  #L1f4660.  if v0 == 0 then goto L1f46c8;
  #L1f4664.  v0:= v2.`h.e.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L1f4668.  v1:= v3.`h.e.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L1f466c.  call temp:= `equals`(v0, v1) @signature `Ljava/util/Objects;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1f4672.  v0:= temp;
  #L1f4674.  if v0 == 0 then goto L1f46c8;
  #L1f4678.  v0:= v2.`h.e.j` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L1f467c.  v1:= v3.`h.e.j` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L1f4680.  call temp:= `equals`(v0, v1) @signature `Ljava/util/Objects;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1f4686.  v0:= temp;
  #L1f4688.  if v0 == 0 then goto L1f46c8;
  #L1f468c.  v0:= v2.`h.e.k` @type ^`h.l` @kind object;
  #L1f4690.  v1:= v3.`h.e.k` @type ^`h.l` @kind object;
  #L1f4694.  call temp:= `equals`(v0, v1) @signature `Ljava/util/Objects;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1f469a.  v0:= temp;
  #L1f469c.  if v0 == 0 then goto L1f46c8;
  #L1f46a0.  call temp:= `url`(v2) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L1f46a6.  v0:= temp @kind object;
  #L1f46a8.  call temp:= `port`(v0) @signature `Lh/z;.port:()I` @kind virtual;
  #L1f46ae.  v0:= temp;
  #L1f46b0.  call temp:= `url`(v3) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L1f46b6.  v3:= temp @kind object;
  #L1f46b8.  call temp:= `port`(v3) @signature `Lh/z;.port:()I` @kind virtual;
  #L1f46be.  v3:= temp;
  #L1f46c0.  if v0 != v3 then goto L1f46c8;
  #L1f46c4.  v3:= 1I;
  #L1f46c6.  goto L1f46ca;
  #L1f46c8.  v3:= 0I;
  #L1f46ca.  return v3;
}
procedure `h.l` `certificatePinner`(`h.e` v1 @kind this) @signature `Lh/e;.certificatePinner:()Lh/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f48fc.  v0:= v1.`h.e.k` @type ^`h.l` @kind object;
  #L1f4900.  return v0 @kind object;
}
procedure `java.util.List` `connectionSpecs`(`h.e` v1 @kind this) @signature `Lh/e;.connectionSpecs:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f486c.  v0:= v1.`h.e.f` @type ^`java.util.List` @kind object;
  #L1f4870.  return v0 @kind object;
}
procedure `h.u` `dns`(`h.e` v1 @kind this) @signature `Lh/e;.dns:()Lh/u;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f4914.  v0:= v1.`h.e.b` @type ^`h.u` @kind object;
  #L1f4918.  return v0 @kind object;
}
procedure `boolean` `equals`(`h.e` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lh/e;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1f45a8.  v0:= instanceof @variable v3 @type ^`h.e` @kind boolean;
  #L1f45ac.  if v0 == 0 then goto L1f45d8;
  #L1f45b0.  v0:= v2.`h.e.a` @type ^`h.z` @kind object;
  #L1f45b4.  v3:= (`h.e`) v3 @kind object;
  #L1f45b8.  v1:= v3.`h.e.a` @type ^`h.z` @kind object;
  #L1f45bc.  call temp:= `equals`(v0, v1) @signature `Lh/z;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f45c2.  v0:= temp;
  #L1f45c4.  if v0 == 0 then goto L1f45d8;
  #L1f45c8.  call temp:= `a`(v2, v3) @signature `Lh/e;.a:(Lh/e;)Z` @kind virtual;
  #L1f45ce.  v3:= temp;
  #L1f45d0.  if v3 == 0 then goto L1f45d8;
  #L1f45d4.  v3:= 1I;
  #L1f45d6.  goto L1f45da;
  #L1f45d8.  v3:= 0I;
  #L1f45da.  return v3;
}
procedure `int` `hashCode`(`h.e` v2 @kind this) @signature `Lh/e;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1f46dc.  v0:= v2.`h.e.a` @type ^`h.z` @kind object;
  #L1f46e0.  call temp:= `hashCode`(v0) @signature `Lh/z;.hashCode:()I` @kind virtual;
  #L1f46e6.  v0:= temp;
  #L1f46e8.  v1:= 527I;
  #L1f46ec.  v1:= v1 + v0 @kind int;
  #L1f46ee.  v1:= v1 * 31;
  #L1f46f2.  v0:= v2.`h.e.b` @type ^`h.u` @kind object;
  #L1f46f6.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1f46fc.  v0:= temp;
  #L1f46fe.  v1:= v1 + v0 @kind int;
  #L1f4700.  v1:= v1 * 31;
  #L1f4704.  v0:= v2.`h.e.d` @type ^`h.g` @kind object;
  #L1f4708.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1f470e.  v0:= temp;
  #L1f4710.  v1:= v1 + v0 @kind int;
  #L1f4712.  v1:= v1 * 31;
  #L1f4716.  v0:= v2.`h.e.e` @type ^`java.util.List` @kind object;
  #L1f471a.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L1f4720.  v0:= temp;
  #L1f4722.  v1:= v1 + v0 @kind int;
  #L1f4724.  v1:= v1 * 31;
  #L1f4728.  v0:= v2.`h.e.f` @type ^`java.util.List` @kind object;
  #L1f472c.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L1f4732.  v0:= temp;
  #L1f4734.  v1:= v1 + v0 @kind int;
  #L1f4736.  v1:= v1 * 31;
  #L1f473a.  v0:= v2.`h.e.g` @type ^`java.net.ProxySelector` @kind object;
  #L1f473e.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1f4744.  v0:= temp;
  #L1f4746.  v1:= v1 + v0 @kind int;
  #L1f4748.  v1:= v1 * 31;
  #L1f474c.  v0:= v2.`h.e.h` @type ^`java.net.Proxy` @kind object;
  #L1f4750.  call temp:= `hashCode`(v0) @signature `Ljava/util/Objects;.hashCode:(Ljava/lang/Object;)I` @kind static;
  #L1f4756.  v0:= temp;
  #L1f4758.  v1:= v1 + v0 @kind int;
  #L1f475a.  v1:= v1 * 31;
  #L1f475e.  v0:= v2.`h.e.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L1f4762.  call temp:= `hashCode`(v0) @signature `Ljava/util/Objects;.hashCode:(Ljava/lang/Object;)I` @kind static;
  #L1f4768.  v0:= temp;
  #L1f476a.  v1:= v1 + v0 @kind int;
  #L1f476c.  v1:= v1 * 31;
  #L1f4770.  v0:= v2.`h.e.j` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L1f4774.  call temp:= `hashCode`(v0) @signature `Ljava/util/Objects;.hashCode:(Ljava/lang/Object;)I` @kind static;
  #L1f477a.  v0:= temp;
  #L1f477c.  v1:= v1 + v0 @kind int;
  #L1f477e.  v1:= v1 * 31;
  #L1f4782.  v0:= v2.`h.e.k` @type ^`h.l` @kind object;
  #L1f4786.  call temp:= `hashCode`(v0) @signature `Ljava/util/Objects;.hashCode:(Ljava/lang/Object;)I` @kind static;
  #L1f478c.  v0:= temp;
  #L1f478e.  v1:= v1 + v0 @kind int;
  #L1f4790.  return v1;
}
procedure `javax.net.ssl.HostnameVerifier` `hostnameVerifier`(`h.e` v1 @kind this) @signature `Lh/e;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f48b4.  v0:= v1.`h.e.j` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L1f48b8.  return v0 @kind object;
}
procedure `java.util.List` `protocols`(`h.e` v1 @kind this) @signature `Lh/e;.protocols:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f4884.  v0:= v1.`h.e.e` @type ^`java.util.List` @kind object;
  #L1f4888.  return v0 @kind object;
}
procedure `java.net.Proxy` `proxy`(`h.e` v1 @kind this) @signature `Lh/e;.proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f483c.  v0:= v1.`h.e.h` @type ^`java.net.Proxy` @kind object;
  #L1f4840.  return v0 @kind object;
}
procedure `h.g` `proxyAuthenticator`(`h.e` v1 @kind this) @signature `Lh/e;.proxyAuthenticator:()Lh/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f48e4.  v0:= v1.`h.e.d` @type ^`h.g` @kind object;
  #L1f48e8.  return v0 @kind object;
}
procedure `java.net.ProxySelector` `proxySelector`(`h.e` v1 @kind this) @signature `Lh/e;.proxySelector:()Ljava/net/ProxySelector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f4854.  v0:= v1.`h.e.g` @type ^`java.net.ProxySelector` @kind object;
  #L1f4858.  return v0 @kind object;
}
procedure `javax.net.SocketFactory` `socketFactory`(`h.e` v1 @kind this) @signature `Lh/e;.socketFactory:()Ljavax/net/SocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f489c.  v0:= v1.`h.e.c` @type ^`javax.net.SocketFactory` @kind object;
  #L1f48a0.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `sslSocketFactory`(`h.e` v1 @kind this) @signature `Lh/e;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f48cc.  v0:= v1.`h.e.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L1f48d0.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`h.e` v2 @kind this) @signature `Lh/e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1f47a4.  v0:= new `java.lang.StringBuilder`;
  #L1f47a8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f47ae.  v1:= "Address{" @kind object;
  #L1f47b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f47b8.  v1:= v2.`h.e.a` @type ^`h.z` @kind object;
  #L1f47bc.  call temp:= `host`(v1) @signature `Lh/z;.host:()Ljava/lang/String;` @kind virtual;
  #L1f47c2.  v1:= temp @kind object;
  #L1f47c4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f47ca.  v1:= ":" @kind object;
  #L1f47ce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f47d4.  v1:= v2.`h.e.a` @type ^`h.z` @kind object;
  #L1f47d8.  call temp:= `port`(v1) @signature `Lh/z;.port:()I` @kind virtual;
  #L1f47de.  v1:= temp;
  #L1f47e0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f47e6.  v1:= v2.`h.e.h` @type ^`java.net.Proxy` @kind object;
  #L1f47ea.  if v1 == 0 then goto L1f4804;
  #L1f47ee.  v1:= ", proxy=" @kind object;
  #L1f47f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f47f8.  v1:= v2.`h.e.h` @type ^`java.net.Proxy` @kind object;
  #L1f47fc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f4802.  goto L1f4818;
  #L1f4804.  v1:= ", proxySelector=" @kind object;
  #L1f4808.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f480e.  v1:= v2.`h.e.g` @type ^`java.net.ProxySelector` @kind object;
  #L1f4812.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f4818.  v1:= "}" @kind object;
  #L1f481c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f4822.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f4828.  v0:= temp @kind object;
  #L1f482a.  return v0 @kind object;
}
procedure `h.z` `url`(`h.e` v1 @kind this) @signature `Lh/e;.url:()Lh/z;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f492c.  v0:= v1.`h.e.a` @type ^`h.z` @kind object;
  #L1f4930.  return v0 @kind object;
}
