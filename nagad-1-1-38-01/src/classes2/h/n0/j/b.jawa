record `h.n0.j.b` @kind class @AccessFlag  extends `h.n0.j.f` @kind class {
  `java.lang.Class` `h.n0.j.b.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `h.n0.j.b.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `h.n0.j.b.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `h.n0.j.b.f` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `h.n0.j.b.g` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `h.n0.j.b.h` @AccessFlag PRIVATE_FINAL;
  `h.n0.j.b$b` `h.n0.j.b.i` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`h.n0.j.b` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object, `java.lang.reflect.Method` v4 @kind object, `java.lang.reflect.Method` v5 @kind object, `java.lang.reflect.Method` v6 @kind object, `java.lang.reflect.Method` v7 @kind object) @signature `Lh/n0/j/b;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L20c708.  call `<init>`(v1) @signature `Lh/n0/j/f;.<init>:()V` @kind direct;
  #L20c70e.  call temp:= `a`() @signature `Lh/n0/j/b$b;.a:()Lh/n0/j/b$b;` @kind static;
  #L20c714.  v0:= temp @kind object;
  #L20c716.  v1.`h.n0.j.b.i` @type ^`h.n0.j.b$b` := v0 @kind object;
  #L20c71a.  v1.`h.n0.j.b.c` @type ^`java.lang.Class` := v2 @kind object;
  #L20c71e.  v1.`h.n0.j.b.d` @type ^`java.lang.Class` := v3 @kind object;
  #L20c722.  v1.`h.n0.j.b.e` @type ^`java.lang.reflect.Method` := v4 @kind object;
  #L20c726.  v1.`h.n0.j.b.f` @type ^`java.lang.reflect.Method` := v5 @kind object;
  #L20c72a.  v1.`h.n0.j.b.g` @type ^`java.lang.reflect.Method` := v6 @kind object;
  #L20c72e.  v1.`h.n0.j.b.h` @type ^`java.lang.reflect.Method` := v7 @kind object;
  #L20c732.  return @kind void;
}
procedure `int` `a`() @signature `Lh/n0/j/b;.a:()I` @AccessFlag STATIC {
    temp;
    v0;

  #L20c328.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L20c32c.  return v0;
  #L20c32e.  v0:= 0I;
  #L20c330.  return v0;
  catch `java.lang.NoClassDefFoundError` @[L20c328..L20c32c] goto L20c32e;
}
procedure `boolean` `a`(`h.n0.j.b` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.Class` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lh/n0/j/b;.a:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L20c1e4.  v0:= "isCleartextTrafficPermitted" @kind object;
  #L20c1e8.  v1:= 0I;
  #L20c1ea.  v2:= new `java.lang.Class`[v1];
  #L20c1ee.  call temp:= `getMethod`(v5, v0, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20c1f4.  v5:= temp @kind object;
  #L20c1f6.  v0:= new `java.lang.Object`[v1];
  #L20c1fa.  call temp:= `invoke`(v5, v6, v0) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L20c200.  v5:= temp @kind object;
  #L20c202.  v5:= (`java.lang.Boolean`) v5 @kind object;
  #L20c206.  call temp:= `booleanValue`(v5) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L20c20c.  v4:= temp;
  #L20c20e.  return v4;
  #L20c210.  call temp:= `isCleartextTrafficPermitted`(v3, v4) @signature `Lh/n0/j/f;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @kind super;
  #L20c216.  v4:= temp;
  #L20c218.  return v4;
  catch `java.lang.NoSuchMethodException` @[L20c1e4..L20c20e] goto L20c210;
}
procedure `boolean` `b`(`h.n0.j.b` v5 @kind this, `java.lang.String` v6 @kind object, `java.lang.Class` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lh/n0/j/b;.b:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L20c23c.  v0:= "isCleartextTrafficPermitted" @kind object;
  #L20c240.  v1:= 1I;
  #L20c242.  v2:= new `java.lang.Class`[v1];
  #L20c246.  v3:= constclass @type ^`java.lang.String` @kind object;
  #L20c24a.  v4:= 0I;
  #L20c24c.  v2[v4]:= v3 @kind object;
  #L20c250.  call temp:= `getMethod`(v7, v0, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20c256.  v0:= temp @kind object;
  #L20c258.  v1:= new `java.lang.Object`[v1];
  #L20c25c.  v1[v4]:= v6 @kind object;
  #L20c260.  call temp:= `invoke`(v0, v8, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L20c266.  v0:= temp @kind object;
  #L20c268.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L20c26c.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L20c272.  v6:= temp;
  #L20c274.  return v6;
  #L20c276.  call temp:= `a`(v5, v6, v7, v8) @signature `Lh/n0/j/b;.a:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @kind direct;
  #L20c27c.  v6:= temp;
  #L20c27e.  return v6;
  catch `java.lang.NoSuchMethodException` @[L20c23c..L20c274] goto L20c276;
}
procedure `h.n0.j.f` `buildIfSupported`() @signature `Lh/n0/j/b;.buildIfSupported:()Lh/n0/j/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L20c508.  call temp:= `isAndroid`() @signature `Lh/n0/j/f;.isAndroid:()Z` @kind static;
  #L20c50e.  v0:= temp;
  #L20c510.  v1:= 0I;
  #L20c512.  if v0 != 0 then goto L20c518;
  #L20c516.  return v1 @kind object;
  #L20c518.  v0:= "com.android.org.conscrypt.SSLParametersImpl" @kind object;
  #L20c51c.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L20c522.  v3:= temp @kind object;
  #L20c524.  v0:= "com.android.org.conscrypt.OpenSSLSocketImpl" @kind object;
  #L20c528.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L20c52e.  v4:= temp @kind object;
  #L20c530.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L20c534.  v1:= 21I;
  #L20c538.  if v0 < v1 then goto L20c5a8;
  #L20c53c.  v0:= "setUseSessionTickets" @kind object;
  #L20c540.  v1:= 1I;
  #L20c542.  v2:= new `java.lang.Class`[v1];
  #L20c546.  v5:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L20c54a.  v6:= 0I;
  #L20c54c.  v2[v6]:= v5 @kind object;
  #L20c550.  call temp:= `getDeclaredMethod`(v4, v0, v2) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20c556.  v5:= temp @kind object;
  #L20c558.  v0:= "setHostname" @kind object;
  #L20c55c.  v2:= new `java.lang.Class`[v1];
  #L20c560.  v7:= constclass @type ^`java.lang.String` @kind object;
  #L20c564.  v2[v6]:= v7 @kind object;
  #L20c568.  call temp:= `getMethod`(v4, v0, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20c56e.  v0:= temp @kind object;
  #L20c570.  v2:= "getAlpnSelectedProtocol" @kind object;
  #L20c574.  v7:= new `java.lang.Class`[v6];
  #L20c578.  call temp:= `getMethod`(v4, v2, v7) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20c57e.  v7:= temp @kind object;
  #L20c580.  v2:= "setAlpnProtocols" @kind object;
  #L20c584.  v1:= new `java.lang.Class`[v1];
  #L20c588.  v8:= constclass @type ^`byte`[] @kind object;
  #L20c58c.  v1[v6]:= v8 @kind object;
  #L20c590.  call temp:= `getMethod`(v4, v2, v1) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20c596.  v8:= temp @kind object;
  #L20c598.  v1:= new `h.n0.j.b`;
  #L20c59c.  v2:= v1 @kind object;
  #L20c59e.  v6:= v0 @kind object;
  #L20c5a0.  call `<init>`(v2, v3, v4, v5, v6, v7, v8) @signature `Lh/n0/j/b;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @kind direct;
  #L20c5a6.  return v1 @kind object;
  #L20c5a8.  v0:= new `java.lang.IllegalStateException`;
  #L20c5ac.  v1:= new `java.lang.StringBuilder`;
  #L20c5b0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20c5b6.  v2:= "Expected Android API level 21+ but was " @kind object;
  #L20c5ba.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20c5c0.  v2:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L20c5c4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L20c5ca.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20c5d0.  v1:= temp @kind object;
  #L20c5d2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20c5d8.  throw v0;
  #L20c5da.  return v1 @kind object;
  catch `java.lang.ClassNotFoundException` @[L20c51c..L20c524] goto L20c5da;
  catch `java.lang.ClassNotFoundException` @[L20c528..L20c530] goto L20c5da;
  catch `java.lang.NoSuchMethodException` @[L20c53c..L20c5a6] goto L20c5a8;
}
procedure `h.n0.l.c` `buildCertificateChainCleaner`(`h.n0.j.b` v7 @kind this, `javax.net.ssl.X509TrustManager` v8 @kind object) @signature `Lh/n0/j/b;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lh/n0/l/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L20c610.  v0:= "android.net.http.X509TrustManagerExtensions" @kind object;
  #L20c614.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L20c61a.  v0:= temp @kind object;
  #L20c61c.  v1:= 1I;
  #L20c61e.  v2:= new `java.lang.Class`[v1];
  #L20c622.  v3:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L20c626.  v4:= 0I;
  #L20c628.  v2[v4]:= v3 @kind object;
  #L20c62c.  call temp:= `getConstructor`(v0, v2) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L20c632.  v2:= temp @kind object;
  #L20c634.  v3:= new `java.lang.Object`[v1];
  #L20c638.  v3[v4]:= v8 @kind object;
  #L20c63c.  call temp:= `newInstance`(v2, v3) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L20c642.  v2:= temp @kind object;
  #L20c644.  v3:= "checkServerTrusted" @kind object;
  #L20c648.  v5:= 3I;
  #L20c64a.  v5:= new `java.lang.Class`[v5];
  #L20c64e.  v6:= constclass @type ^`java.security.cert.X509Certificate`[] @kind object;
  #L20c652.  v5[v4]:= v6 @kind object;
  #L20c656.  v4:= constclass @type ^`java.lang.String` @kind object;
  #L20c65a.  v5[v1]:= v4 @kind object;
  #L20c65e.  v1:= 2I;
  #L20c660.  v4:= constclass @type ^`java.lang.String` @kind object;
  #L20c664.  v5[v1]:= v4 @kind object;
  #L20c668.  call temp:= `getMethod`(v0, v3, v5) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20c66e.  v0:= temp @kind object;
  #L20c670.  v1:= new `h.n0.j.b$a`;
  #L20c674.  call `<init>`(v1, v2, v0) @signature `Lh/n0/j/b$a;.<init>:(Ljava/lang/Object;Ljava/lang/reflect/Method;)V` @kind direct;
  #L20c67a.  return v1 @kind object;
  #L20c67c.  call temp:= `buildCertificateChainCleaner`(v7, v8) @signature `Lh/n0/j/f;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lh/n0/l/c;` @kind super;
  #L20c682.  v8:= temp @kind object;
  #L20c684.  return v8 @kind object;
  catch `java.lang.Exception` @[L20c614..L20c67a] goto L20c67c;
}
procedure `h.n0.l.e` `buildTrustRootIndex`(`h.n0.j.b` v6 @kind this, `javax.net.ssl.X509TrustManager` v7 @kind object) @signature `Lh/n0/j/b;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lh/n0/l/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L20c6a8.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L20c6ae.  v0:= temp @kind object;
  #L20c6b0.  v1:= "findTrustAnchorByIssuerAndSignature" @kind object;
  #L20c6b4.  v2:= 1I;
  #L20c6b6.  v3:= new `java.lang.Class`[v2];
  #L20c6ba.  v4:= 0I;
  #L20c6bc.  v5:= constclass @type ^`java.security.cert.X509Certificate` @kind object;
  #L20c6c0.  v3[v4]:= v5 @kind object;
  #L20c6c4.  call temp:= `getDeclaredMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20c6ca.  v0:= temp @kind object;
  #L20c6cc.  call `setAccessible`(v0, v2) @signature `Ljava/lang/reflect/Method;.setAccessible:(Z)V` @kind virtual;
  #L20c6d2.  v1:= new `h.n0.j.b$c`;
  #L20c6d6.  call `<init>`(v1, v7, v0) @signature `Lh/n0/j/b$c;.<init>:(Ljavax/net/ssl/X509TrustManager;Ljava/lang/reflect/Method;)V` @kind direct;
  #L20c6dc.  return v1 @kind object;
  #L20c6de.  call temp:= `buildTrustRootIndex`(v6, v7) @signature `Lh/n0/j/f;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lh/n0/l/e;` @kind super;
  #L20c6e4.  v7:= temp @kind object;
  #L20c6e6.  return v7 @kind object;
  catch `java.lang.NoSuchMethodException` @[L20c6a8..L20c6dc] goto L20c6de;
}
procedure `void` `configureTlsExtensions`(`h.n0.j.b` v5 @kind this, `javax.net.ssl.SSLSocket` v6 @kind object, `java.lang.String` v7 @kind object, `java.util.List` v8 @kind object) @signature `Lh/n0/j/b;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L20c744.  v0:= v5.`h.n0.j.b.d` @type ^`java.lang.Class` @kind object;
  #L20c748.  call temp:= `isInstance`(v0, v6) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L20c74e.  v0:= temp;
  #L20c750.  if v0 != 0 then goto L20c756;
  #L20c754.  return @kind void;
  #L20c756.  v0:= 0I;
  #L20c758.  v1:= 1I;
  #L20c75a.  if v7 == 0 then goto L20c78a;
  #L20c75e.  v2:= v5.`h.n0.j.b.e` @type ^`java.lang.reflect.Method` @kind object;
  #L20c762.  v3:= new `java.lang.Object`[v1];
  #L20c766.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L20c76c.  v4:= temp @kind object;
  #L20c76e.  v3[v0]:= v4 @kind object;
  #L20c772.  call temp:= `invoke`(v2, v6, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L20c778.  v2:= v5.`h.n0.j.b.f` @type ^`java.lang.reflect.Method` @kind object;
  #L20c77c.  v3:= new `java.lang.Object`[v1];
  #L20c780.  v3[v0]:= v7 @kind object;
  #L20c784.  call temp:= `invoke`(v2, v6, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L20c78a.  v7:= v5.`h.n0.j.b.h` @type ^`java.lang.reflect.Method` @kind object;
  #L20c78e.  v1:= new `java.lang.Object`[v1];
  #L20c792.  call temp:= `a`(v8) @signature `Lh/n0/j/f;.a:(Ljava/util/List;)[B` @kind static;
  #L20c798.  v8:= temp @kind object;
  #L20c79a.  v1[v0]:= v8 @kind object;
  #L20c79e.  call temp:= `invoke`(v7, v6, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L20c7a4.  return @kind void;
  #L20c7a6.  v6:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L20c7a8.  goto L20c7ac;
  #L20c7aa.  v6:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L20c7ac.  v7:= new `java.lang.AssertionError`;
  #L20c7b0.  call `<init>`(v7, v6) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L20c7b6.  throw v7;
  catch `java.lang.IllegalAccessException` @[L20c75e..L20c7a4] goto L20c7aa;
  catch `java.lang.reflect.InvocationTargetException` @[L20c75e..L20c7a4] goto L20c7a6;
}
procedure `void` `connectSocket`(`h.n0.j.b` v0 @kind this, `java.net.Socket` v1 @kind object, `java.net.InetSocketAddress` v2 @kind object, `int` v3 ) @signature `Lh/n0/j/b;.connectSocket:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;

  #L20c7d8.  call `connect`(v1, v2, v3) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #L20c7de.  return @kind void;
  #L20c7e0.  v1:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L20c7e2.  v2:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L20c7e6.  v3:= 26I;
  #L20c7ea.  if v2 != v3 then goto L20c7fe;
  #L20c7ee.  v2:= new `java.io.IOException`;
  #L20c7f2.  v3:= "Exception in connect" @kind object;
  #L20c7f6.  call `<init>`(v2, v3, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L20c7fc.  throw v2;
  #L20c7fe.  throw v1;
  #L20c800.  v1:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L20c802.  call temp:= `isAndroidGetsocknameError`(v1) @signature `Lh/n0/e;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @kind static;
  #L20c808.  v2:= temp;
  #L20c80a.  if v2 == 0 then goto L20c81a;
  #L20c80e.  v2:= new `java.io.IOException`;
  #L20c812.  call `<init>`(v2, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L20c818.  throw v2;
  #L20c81a.  throw v1;
  catch `java.lang.AssertionError` @[L20c7d8..L20c7de] goto L20c800;
  catch `java.lang.ClassCastException` @[L20c7d8..L20c7de] goto L20c7e0;
}
procedure `javax.net.ssl.SSLContext` `getSSLContext`(`h.n0.j.b` v3 @kind this) @signature `Lh/n0/j/b;.getSSLContext:()Ljavax/net/ssl/SSLContext;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L20c3e4.  v0:= 1I;
  #L20c3e6.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L20c3ea.  v2:= 16I;
  #L20c3ee.  if v1 < v2 then goto L20c400;
  #L20c3f2.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L20c3f6.  v2:= 22I;
  #L20c3fa.  if v1 >= v2 then goto L20c400;
  #L20c3fe.  goto L20c406;
  #L20c400.  v0:= 0I;
  #L20c402.  goto L20c406;
  #L20c404.  
  #L20c406.  if v0 == 0 then goto L20c418;
  #L20c40a.  v0:= "TLSv1.2" @kind object;
  #L20c40e.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L20c414.  v0:= temp @kind object;
  #L20c416.  return v0 @kind object;
  #L20c418.  v0:= "TLS" @kind object;
  #L20c41c.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L20c422.  v0:= temp @kind object;
  #L20c424.  return v0 @kind object;
  #L20c426.  v0:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L20c428.  v1:= new `java.lang.IllegalStateException`;
  #L20c42c.  v2:= "No TLS provider" @kind object;
  #L20c430.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L20c436.  throw v1;
  catch `java.lang.NoClassDefFoundError` @[L20c3e6..L20c3f6] goto L20c404;
  catch `java.security.NoSuchAlgorithmException` @[L20c40a..L20c416] goto L20c418;
  catch `java.security.NoSuchAlgorithmException` @[L20c418..L20c424] goto L20c426;
}
procedure `java.lang.String` `getSelectedProtocol`(`h.n0.j.b` v3 @kind this, `javax.net.ssl.SSLSocket` v4 @kind object) @signature `Lh/n0/j/b;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L20c374.  v0:= v3.`h.n0.j.b.d` @type ^`java.lang.Class` @kind object;
  #L20c378.  call temp:= `isInstance`(v0, v4) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L20c37e.  v0:= temp;
  #L20c380.  v1:= 0I;
  #L20c382.  if v0 != 0 then goto L20c388;
  #L20c386.  return v1 @kind object;
  #L20c388.  v0:= v3.`h.n0.j.b.g` @type ^`java.lang.reflect.Method` @kind object;
  #L20c38c.  v2:= 0I;
  #L20c38e.  v2:= new `java.lang.Object`[v2];
  #L20c392.  call temp:= `invoke`(v0, v4, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L20c398.  v4:= temp @kind object;
  #L20c39a.  v4:= (`byte`[]) v4 @kind object;
  #L20c39e.  if v4 == 0 then goto L20c3b0;
  #L20c3a2.  v1:= new `java.lang.String`;
  #L20c3a6.  v0:= `@@java.nio.charset.StandardCharsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L20c3aa.  call `<init>`(v1, v4, v0) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L20c3b0.  return v1 @kind object;
  #L20c3b2.  v4:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L20c3b4.  goto L20c3b8;
  #L20c3b6.  v4:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L20c3b8.  v0:= new `java.lang.AssertionError`;
  #L20c3bc.  call `<init>`(v0, v4) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L20c3c2.  throw v0;
  catch `java.lang.IllegalAccessException` @[L20c388..L20c3b0] goto L20c3b6;
  catch `java.lang.reflect.InvocationTargetException` @[L20c388..L20c3b0] goto L20c3b2;
}
procedure `java.lang.Object` `getStackTraceForCloseable`(`h.n0.j.b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lh/n0/j/b;.getStackTraceForCloseable:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20c354.  v0:= v1.`h.n0.j.b.i` @type ^`h.n0.j.b$b` @kind object;
  #L20c358.  call temp:= `a`(v0, v2) @signature `Lh/n0/j/b$b;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L20c35e.  v2:= temp @kind object;
  #L20c360.  return v2 @kind object;
}
procedure `boolean` `isCleartextTrafficPermitted`(`h.n0.j.b` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lh/n0/j/b;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20c2a0.  v0:= "android.security.NetworkSecurityPolicy" @kind object;
  #L20c2a4.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L20c2aa.  v0:= temp @kind object;
  #L20c2ac.  v1:= "getInstance" @kind object;
  #L20c2b0.  v2:= 0I;
  #L20c2b2.  v3:= new `java.lang.Class`[v2];
  #L20c2b6.  call temp:= `getMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L20c2bc.  v1:= temp @kind object;
  #L20c2be.  v3:= 0I;
  #L20c2c0.  v2:= new `java.lang.Object`[v2];
  #L20c2c4.  call temp:= `invoke`(v1, v3, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L20c2ca.  v1:= temp @kind object;
  #L20c2cc.  call temp:= `b`(v4, v5, v0, v1) @signature `Lh/n0/j/b;.b:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @kind direct;
  #L20c2d2.  v5:= temp;
  #L20c2d4.  return v5;
  #L20c2d6.  v5:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L20c2d8.  goto L20c2e0;
  #L20c2da.  v5:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L20c2dc.  goto L20c2e0;
  #L20c2de.  v5:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L20c2e0.  v0:= new `java.lang.AssertionError`;
  #L20c2e4.  v1:= "unable to determine cleartext support" @kind object;
  #L20c2e8.  call `<init>`(v0, v1, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L20c2ee.  throw v0;
  #L20c2f0.  call temp:= `isCleartextTrafficPermitted`(v4, v5) @signature `Lh/n0/j/f;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @kind super;
  #L20c2f6.  v5:= temp;
  #L20c2f8.  return v5;
  catch `java.lang.ClassNotFoundException` @[L20c2a4..L20c2d4] goto L20c2f0;
  catch `java.lang.NoSuchMethodException` @[L20c2a4..L20c2d4] goto L20c2f0;
  catch `java.lang.IllegalAccessException` @[L20c2a4..L20c2d4] goto L20c2de;
  catch `java.lang.IllegalArgumentException` @[L20c2a4..L20c2d4] goto L20c2da;
  catch `java.lang.reflect.InvocationTargetException` @[L20c2a4..L20c2d4] goto L20c2d6;
}
procedure `void` `log`(`h.n0.j.b` v5 @kind this, `int` v6 , `java.lang.String` v7 @kind object, `java.lang.Throwable` v8 @kind object) @signature `Lh/n0/j/b;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L20c83c.  v0:= 5I;
  #L20c83e.  if v6 != v0 then goto L20c844;
  #L20c842.  goto L20c846;
  #L20c844.  v0:= 3I;
  #L20c846.  v6:= 10I;
  #L20c84a.  if v8 == 0 then goto L20c87a;
  #L20c84e.  v1:= new `java.lang.StringBuilder`;
  #L20c852.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20c858.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20c85e.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L20c864.  call temp:= `getStackTraceString`(v8) @signature `Landroid/util/Log;.getStackTraceString:(Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L20c86a.  v7:= temp @kind object;
  #L20c86c.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20c872.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20c878.  v7:= temp @kind object;
  #L20c87a.  v8:= 0I;
  #L20c87c.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L20c882.  v1:= temp;
  #L20c884.  if v8 >= v1 then goto L20c8c6;
  #L20c888.  call temp:= `indexOf`(v7, v6, v8) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L20c88e.  v2:= temp;
  #L20c890.  v3:= -1I;
  #L20c892.  if v2 == v3 then goto L20c898;
  #L20c896.  goto L20c89a;
  #L20c898.  v2:= v1;
  #L20c89a.  v3:= v8 + 4000;
  #L20c89e.  call temp:= `min`(v2, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L20c8a4.  v3:= temp;
  #L20c8a6.  call temp:= `substring`(v7, v8, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L20c8ac.  v8:= temp @kind object;
  #L20c8ae.  v4:= "OkHttp" @kind object;
  #L20c8b2.  call temp:= `println`(v0, v4, v8) @signature `Landroid/util/Log;.println:(ILjava/lang/String;Ljava/lang/String;)I` @kind static;
  #L20c8b8.  if v3 < v2 then goto L20c8c2;
  #L20c8bc.  v8:= v3 + 1;
  #L20c8c0.  goto L20c884;
  #L20c8c2.  v8:= v3;
  #L20c8c4.  goto L20c89a;
  #L20c8c6.  return @kind void;
}
procedure `void` `logCloseableLeak`(`h.n0.j.b` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lh/n0/j/b;.logCloseableLeak:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20c8d8.  v0:= v1.`h.n0.j.b.i` @type ^`h.n0.j.b$b` @kind object;
  #L20c8dc.  call temp:= `a`(v0, v3) @signature `Lh/n0/j/b$b;.a:(Ljava/lang/Object;)Z` @kind virtual;
  #L20c8e2.  v3:= temp;
  #L20c8e4.  if v3 != 0 then goto L20c8f2;
  #L20c8e8.  v3:= 5I;
  #L20c8ea.  v0:= 0I;
  #L20c8ec.  call `log`(v1, v3, v2, v0) @signature `Lh/n0/j/b;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L20c8f2.  return @kind void;
}
procedure `javax.net.ssl.X509TrustManager` `trustManager`(`h.n0.j.b` v4 @kind this, `javax.net.ssl.SSLSocketFactory` v5 @kind object) @signature `Lh/n0/j/b;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20c470.  v0:= v4.`h.n0.j.b.c` @type ^`java.lang.Class` @kind object;
  #L20c474.  v1:= "sslParameters" @kind object;
  #L20c478.  call temp:= `a`(v5, v0, v1) @signature `Lh/n0/j/f;.a:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L20c47e.  v0:= temp @kind object;
  #L20c480.  if v0 != 0 then goto L20c4b6;
  #L20c484.  v0:= "com.google.android.gms.org.conscrypt.SSLParametersImpl" @kind object;
  #L20c488.  v2:= 0I;
  #L20c48a.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L20c490.  v3:= temp @kind object;
  #L20c492.  call temp:= `getClassLoader`(v3) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L20c498.  v3:= temp @kind object;
  #L20c49a.  call temp:= `forName`(v0, v2, v3) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L20c4a0.  v0:= temp @kind object;
  #L20c4a2.  call temp:= `a`(v5, v0, v1) @signature `Lh/n0/j/f;.a:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L20c4a8.  v0:= temp @kind object;
  #L20c4aa.  goto L20c4b6;
  #L20c4ac.  call temp:= `trustManager`(v4, v5) @signature `Lh/n0/j/f;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @kind super;
  #L20c4b2.  v5:= temp @kind object;
  #L20c4b4.  return v5 @kind object;
  #L20c4b6.  v5:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L20c4ba.  v1:= "x509TrustManager" @kind object;
  #L20c4be.  call temp:= `a`(v0, v5, v1) @signature `Lh/n0/j/f;.a:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L20c4c4.  v5:= temp @kind object;
  #L20c4c6.  v5:= (`javax.net.ssl.X509TrustManager`) v5 @kind object;
  #L20c4ca.  if v5 == 0 then goto L20c4d0;
  #L20c4ce.  return v5 @kind object;
  #L20c4d0.  v5:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L20c4d4.  v1:= "trustManager" @kind object;
  #L20c4d8.  call temp:= `a`(v0, v5, v1) @signature `Lh/n0/j/f;.a:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L20c4de.  v5:= temp @kind object;
  #L20c4e0.  v5:= (`javax.net.ssl.X509TrustManager`) v5 @kind object;
  #L20c4e4.  return v5 @kind object;
  catch `java.lang.ClassNotFoundException` @[L20c484..L20c4aa] goto L20c4ac;
}
