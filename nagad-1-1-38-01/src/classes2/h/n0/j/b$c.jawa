record `h.n0.j.b$c` @kind class @AccessFlag FINAL extends `h.n0.l.e` @kind interface {
  `javax.net.ssl.X509TrustManager` `h.n0.j.b$c.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `h.n0.j.b$c.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`h.n0.j.b$c` v0 @kind this, `javax.net.ssl.X509TrustManager` v1 @kind object, `java.lang.reflect.Method` v2 @kind object) @signature `Lh/n0/j/b$c;.<init>:(Ljavax/net/ssl/X509TrustManager;Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L20c1c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20c1ca.  v0.`h.n0.j.b$c.b` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L20c1ce.  v0.`h.n0.j.b$c.a` @type ^`javax.net.ssl.X509TrustManager` := v1 @kind object;
  #L20c1d2.  return @kind void;
}
procedure `boolean` `equals`(`h.n0.j.b$c` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lh/n0/j/b$c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20c0d8.  v0:= 1I;
  #L20c0da.  if v5 != v4 then goto L20c0e0;
  #L20c0de.  return v0;
  #L20c0e0.  v1:= instanceof @variable v5 @type ^`h.n0.j.b$c` @kind boolean;
  #L20c0e4.  v2:= 0I;
  #L20c0e6.  if v1 != 0 then goto L20c0ec;
  #L20c0ea.  return v2;
  #L20c0ec.  v5:= (`h.n0.j.b$c`) v5 @kind object;
  #L20c0f0.  v1:= v4.`h.n0.j.b$c.a` @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L20c0f4.  v3:= v5.`h.n0.j.b$c.a` @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L20c0f8.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L20c0fe.  v1:= temp;
  #L20c100.  if v1 == 0 then goto L20c11a;
  #L20c104.  v1:= v4.`h.n0.j.b$c.b` @type ^`java.lang.reflect.Method` @kind object;
  #L20c108.  v5:= v5.`h.n0.j.b$c.b` @type ^`java.lang.reflect.Method` @kind object;
  #L20c10c.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/reflect/Method;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L20c112.  v5:= temp;
  #L20c114.  if v5 == 0 then goto L20c11a;
  #L20c118.  goto L20c11c;
  #L20c11a.  v0:= 0I;
  #L20c11c.  return v0;
}
procedure `java.security.cert.X509Certificate` `findByIssuerAndSignature`(`h.n0.j.b$c` v5 @kind this, `java.security.cert.X509Certificate` v6 @kind object) @signature `Lh/n0/j/b$c;.findByIssuerAndSignature:(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L20c160.  v0:= 0I;
  #L20c162.  v1:= v5.`h.n0.j.b$c.b` @type ^`java.lang.reflect.Method` @kind object;
  #L20c166.  v2:= v5.`h.n0.j.b$c.a` @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L20c16a.  v3:= 1I;
  #L20c16c.  v3:= new `java.lang.Object`[v3];
  #L20c170.  v4:= 0I;
  #L20c172.  v3[v4]:= v6 @kind object;
  #L20c176.  call temp:= `invoke`(v1, v2, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L20c17c.  v6:= temp @kind object;
  #L20c17e.  v6:= (`java.security.cert.TrustAnchor`) v6 @kind object;
  #L20c182.  if v6 == 0 then goto L20c18e;
  #L20c186.  call temp:= `getTrustedCert`(v6) @signature `Ljava/security/cert/TrustAnchor;.getTrustedCert:()Ljava/security/cert/X509Certificate;` @kind virtual;
  #L20c18c.  v0:= temp @kind object;
  #L20c18e.  return v0 @kind object;
  #L20c190.  v6:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L20c192.  v0:= new `java.lang.AssertionError`;
  #L20c196.  v1:= "unable to get issues and signature" @kind object;
  #L20c19a.  call `<init>`(v0, v1, v6) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L20c1a0.  throw v0;
  catch `java.lang.IllegalAccessException` @[L20c162..L20c18e] goto L20c190;
  catch `java.lang.reflect.InvocationTargetException` @[L20c162..L20c18e] goto L20c18e;
}
procedure `int` `hashCode`(`h.n0.j.b$c` v2 @kind this) @signature `Lh/n0/j/b$c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20c130.  v0:= v2.`h.n0.j.b$c.a` @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L20c134.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L20c13a.  v0:= temp;
  #L20c13c.  v1:= v2.`h.n0.j.b$c.b` @type ^`java.lang.reflect.Method` @kind object;
  #L20c140.  call temp:= `hashCode`(v1) @signature `Ljava/lang/reflect/Method;.hashCode:()I` @kind virtual;
  #L20c146.  v1:= temp;
  #L20c148.  v1:= v1 * 31;
  #L20c14c.  v0:= v0 + v1 @kind int;
  #L20c14e.  return v0;
}
