record `h.n0.j.a` @kind class @AccessFlag  extends `h.n0.j.b` @kind class {
}
procedure `void` `<init>`(`h.n0.j.a` v7 @kind this, `java.lang.Class` v8 @kind object) @signature `Lh/n0/j/a;.<init>:(Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L20be14.  v2:= 0I;
  #L20be16.  v3:= 0I;
  #L20be18.  v4:= 0I;
  #L20be1a.  v5:= 0I;
  #L20be1c.  v6:= 0I;
  #L20be1e.  v0:= v7 @kind object;
  #L20be20.  v1:= v8 @kind object;
  #L20be22.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lh/n0/j/b;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @kind direct;
  #L20be28.  return @kind void;
}
procedure `void` `a`(`h.n0.j.a` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object) @signature `Lh/n0/j/a;.a:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L20bea4.  call temp:= `isSupportedSocket`(v2) @signature `Landroid/net/ssl/SSLSockets;.isSupportedSocket:(Ljavax/net/ssl/SSLSocket;)Z` @kind static;
  #L20beaa.  v0:= temp;
  #L20beac.  if v0 == 0 then goto L20beb8;
  #L20beb0.  v0:= 1I;
  #L20beb2.  call `setUseSessionTickets`(v2, v0) @signature `Landroid/net/ssl/SSLSockets;.setUseSessionTickets:(Ljavax/net/ssl/SSLSocket;Z)V` @kind static;
  #L20beb8.  return @kind void;
}
procedure `h.n0.j.f` `buildIfSupported`() @signature `Lh/n0/j/a;.buildIfSupported:()Lh/n0/j/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L20bdb0.  call temp:= `isAndroid`() @signature `Lh/n0/j/f;.isAndroid:()Z` @kind static;
  #L20bdb6.  v0:= temp;
  #L20bdb8.  v1:= 0I;
  #L20bdba.  if v0 != 0 then goto L20bdc0;
  #L20bdbe.  return v1 @kind object;
  #L20bdc0.  call temp:= `a`() @signature `Lh/n0/j/b;.a:()I` @kind static;
  #L20bdc6.  v0:= temp;
  #L20bdc8.  v2:= 29I;
  #L20bdcc.  if v0 < v2 then goto L20bde8;
  #L20bdd0.  v0:= "com.android.org.conscrypt.SSLParametersImpl" @kind object;
  #L20bdd4.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L20bdda.  v0:= temp @kind object;
  #L20bddc.  v2:= new `h.n0.j.a`;
  #L20bde0.  call `<init>`(v2, v0) @signature `Lh/n0/j/a;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L20bde6.  return v2 @kind object;
  #L20bde8.  return v1 @kind object;
  catch `java.lang.ReflectiveOperationException` @[L20bdc0..L20bdc8] goto L20bde8;
  catch `java.lang.ReflectiveOperationException` @[L20bdd4..L20bde6] goto L20bde8;
}
procedure `void` `configureTlsExtensions`(`h.n0.j.a` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object, `java.lang.String` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lh/n0/j/a;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20be3c.  call `a`(v1, v2) @signature `Lh/n0/j/a;.a:(Ljavax/net/ssl/SSLSocket;)V` @kind direct;
  #L20be42.  call temp:= `getSSLParameters`(v2) @signature `Ljavax/net/ssl/SSLSocket;.getSSLParameters:()Ljavax/net/ssl/SSLParameters;` @kind virtual;
  #L20be48.  v3:= temp @kind object;
  #L20be4a.  call temp:= `alpnProtocolNames`(v4) @signature `Lh/n0/j/f;.alpnProtocolNames:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L20be50.  v4:= temp @kind object;
  #L20be52.  v0:= 0I;
  #L20be54.  v0:= new `java.lang.String`[v0];
  #L20be58.  call temp:= `toArray`(v4, v0) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L20be5e.  v4:= temp @kind object;
  #L20be60.  v4:= (`java.lang.String`[]) v4 @kind object;
  #L20be64.  call `setApplicationProtocols`(v3, v4) @signature `Ljavax/net/ssl/SSLParameters;.setApplicationProtocols:([Ljava/lang/String;)V` @kind virtual;
  #L20be6a.  call `setSSLParameters`(v2, v3) @signature `Ljavax/net/ssl/SSLSocket;.setSSLParameters:(Ljavax/net/ssl/SSLParameters;)V` @kind virtual;
  #L20be70.  return @kind void;
  #L20be72.  v2:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L20be74.  v3:= new `java.io.IOException`;
  #L20be78.  v4:= "Android internal error" @kind object;
  #L20be7c.  call `<init>`(v3, v4, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L20be82.  throw v3;
  catch `java.lang.IllegalArgumentException` @[L20be3c..L20be70] goto L20be72;
}
procedure `java.lang.String` `getSelectedProtocol`(`h.n0.j.a` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object) @signature `Lh/n0/j/a;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20bd80.  call temp:= `getApplicationProtocol`(v2) @signature `Ljavax/net/ssl/SSLSocket;.getApplicationProtocol:()Ljava/lang/String;` @kind virtual;
  #L20bd86.  v2:= temp @kind object;
  #L20bd88.  if v2 == 0 then goto L20bd9c;
  #L20bd8c.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L20bd92.  v0:= temp;
  #L20bd94.  if v0 == 0 then goto L20bd9a;
  #L20bd98.  goto L20bd9c;
  #L20bd9a.  return v2 @kind object;
  #L20bd9c.  v2:= 0I;
  #L20bd9e.  return v2 @kind object;
}
