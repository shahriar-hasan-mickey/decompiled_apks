record `h.n0.h.b` @kind class @AccessFlag PUBLIC_FINAL extends `h.a0` @kind interface {
  `boolean` `h.n0.h.b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`h.n0.h.b` v0 @kind this, `boolean` v1 ) @signature `Lh/n0/h/b;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2030ac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2030b2.  v0.`h.n0.h.b.a` @type ^`boolean` := v1 @kind boolean;
  #L2030b6.  return @kind void;
}
procedure `h.i0` `intercept`(`h.n0.h.b` v8 @kind this, `h.a0$a` v9 @kind object) @signature `Lh/n0/h/b;.intercept:(Lh/a0$a;)Lh/i0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L202db8.  v9:= (`h.n0.h.g`) v9 @kind object;
  #L202dbc.  call temp:= `exchange`(v9) @signature `Lh/n0/h/g;.exchange:()Lokhttp3/internal/connection/d;` @kind virtual;
  #L202dc2.  v0:= temp @kind object;
  #L202dc4.  call temp:= `request`(v9) @signature `Lh/n0/h/g;.request:()Lh/g0;` @kind virtual;
  #L202dca.  v9:= temp @kind object;
  #L202dcc.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L202dd2.  v1:= temp @kind wide;
  #L202dd4.  call `writeRequestHeaders`(v0, v9) @signature `Lokhttp3/internal/connection/d;.writeRequestHeaders:(Lh/g0;)V` @kind virtual;
  #L202dda.  call temp:= `method`(v9) @signature `Lh/g0;.method:()Ljava/lang/String;` @kind virtual;
  #L202de0.  v3:= temp @kind object;
  #L202de2.  call temp:= `permitsRequestBody`(v3) @signature `Lh/n0/h/f;.permitsRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L202de8.  v3:= temp;
  #L202dea.  v4:= 0I;
  #L202dec.  v5:= 0I;
  #L202dee.  if v3 == 0 then goto L202ebc;
  #L202df2.  call temp:= `body`(v9) @signature `Lh/g0;.body:()Lh/h0;` @kind virtual;
  #L202df8.  v3:= temp @kind object;
  #L202dfa.  if v3 == 0 then goto L202ebc;
  #L202dfe.  v3:= "Expect" @kind object;
  #L202e02.  call temp:= `header`(v9, v3) @signature `Lh/g0;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L202e08.  v3:= temp @kind object;
  #L202e0a.  v6:= "100-continue" @kind object;
  #L202e0e.  call temp:= `equalsIgnoreCase`(v6, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L202e14.  v3:= temp;
  #L202e16.  v6:= 1I;
  #L202e18.  if v3 == 0 then goto L202e34;
  #L202e1c.  call `flushRequest`(v0) @signature `Lokhttp3/internal/connection/d;.flushRequest:()V` @kind virtual;
  #L202e22.  call `responseHeadersStart`(v0) @signature `Lokhttp3/internal/connection/d;.responseHeadersStart:()V` @kind virtual;
  #L202e28.  call temp:= `readResponseHeaders`(v0, v6) @signature `Lokhttp3/internal/connection/d;.readResponseHeaders:(Z)Lh/i0$a;` @kind virtual;
  #L202e2e.  v5:= temp @kind object;
  #L202e30.  v3:= 1I;
  #L202e32.  goto L202e36;
  #L202e34.  v3:= 0I;
  #L202e36.  if v5 != 0 then goto L202e9a;
  #L202e3a.  call temp:= `body`(v9) @signature `Lh/g0;.body:()Lh/h0;` @kind virtual;
  #L202e40.  v7:= temp @kind object;
  #L202e42.  call temp:= `isDuplex`(v7) @signature `Lh/h0;.isDuplex:()Z` @kind virtual;
  #L202e48.  v7:= temp;
  #L202e4a.  if v7 == 0 then goto L202e74;
  #L202e4e.  call `flushRequest`(v0) @signature `Lokhttp3/internal/connection/d;.flushRequest:()V` @kind virtual;
  #L202e54.  call temp:= `createRequestBody`(v0, v9, v6) @signature `Lokhttp3/internal/connection/d;.createRequestBody:(Lh/g0;Z)Li/x;` @kind virtual;
  #L202e5a.  v6:= temp @kind object;
  #L202e5c.  call temp:= `buffer`(v6) @signature `Li/p;.buffer:(Li/x;)Li/f;` @kind static;
  #L202e62.  v6:= temp @kind object;
  #L202e64.  call temp:= `body`(v9) @signature `Lh/g0;.body:()Lh/h0;` @kind virtual;
  #L202e6a.  v7:= temp @kind object;
  #L202e6c.  call `writeTo`(v7, v6) @signature `Lh/h0;.writeTo:(Li/f;)V` @kind virtual;
  #L202e72.  goto L202ec4;
  #L202e74.  call temp:= `createRequestBody`(v0, v9, v4) @signature `Lokhttp3/internal/connection/d;.createRequestBody:(Lh/g0;Z)Li/x;` @kind virtual;
  #L202e7a.  v6:= temp @kind object;
  #L202e7c.  call temp:= `buffer`(v6) @signature `Li/p;.buffer:(Li/x;)Li/f;` @kind static;
  #L202e82.  v6:= temp @kind object;
  #L202e84.  call temp:= `body`(v9) @signature `Lh/g0;.body:()Lh/h0;` @kind virtual;
  #L202e8a.  v7:= temp @kind object;
  #L202e8c.  call `writeTo`(v7, v6) @signature `Lh/h0;.writeTo:(Li/f;)V` @kind virtual;
  #L202e92.  call `close`(v6) @signature `Li/x;.close:()V` @kind interface;
  #L202e98.  goto L202ec4;
  #L202e9a.  call `noRequestBody`(v0) @signature `Lokhttp3/internal/connection/d;.noRequestBody:()V` @kind virtual;
  #L202ea0.  call temp:= `connection`(v0) @signature `Lokhttp3/internal/connection/d;.connection:()Lokhttp3/internal/connection/f;` @kind virtual;
  #L202ea6.  v6:= temp @kind object;
  #L202ea8.  call temp:= `isMultiplexed`(v6) @signature `Lokhttp3/internal/connection/f;.isMultiplexed:()Z` @kind virtual;
  #L202eae.  v6:= temp;
  #L202eb0.  if v6 != 0 then goto L202ec4;
  #L202eb4.  call `noNewExchangesOnConnection`(v0) @signature `Lokhttp3/internal/connection/d;.noNewExchangesOnConnection:()V` @kind virtual;
  #L202eba.  goto L202ec4;
  #L202ebc.  call `noRequestBody`(v0) @signature `Lokhttp3/internal/connection/d;.noRequestBody:()V` @kind virtual;
  #L202ec2.  v3:= 0I;
  #L202ec4.  call temp:= `body`(v9) @signature `Lh/g0;.body:()Lh/h0;` @kind virtual;
  #L202eca.  v6:= temp @kind object;
  #L202ecc.  if v6 == 0 then goto L202ee4;
  #L202ed0.  call temp:= `body`(v9) @signature `Lh/g0;.body:()Lh/h0;` @kind virtual;
  #L202ed6.  v6:= temp @kind object;
  #L202ed8.  call temp:= `isDuplex`(v6) @signature `Lh/h0;.isDuplex:()Z` @kind virtual;
  #L202ede.  v6:= temp;
  #L202ee0.  if v6 != 0 then goto L202eea;
  #L202ee4.  call `finishRequest`(v0) @signature `Lokhttp3/internal/connection/d;.finishRequest:()V` @kind virtual;
  #L202eea.  if v3 != 0 then goto L202ef4;
  #L202eee.  call `responseHeadersStart`(v0) @signature `Lokhttp3/internal/connection/d;.responseHeadersStart:()V` @kind virtual;
  #L202ef4.  if v5 != 0 then goto L202f00;
  #L202ef8.  call temp:= `readResponseHeaders`(v0, v4) @signature `Lokhttp3/internal/connection/d;.readResponseHeaders:(Z)Lh/i0$a;` @kind virtual;
  #L202efe.  v5:= temp @kind object;
  #L202f00.  call temp:= `request`(v5, v9) @signature `Lh/i0$a;.request:(Lh/g0;)Lh/i0$a;` @kind virtual;
  #L202f06.  call temp:= `connection`(v0) @signature `Lokhttp3/internal/connection/d;.connection:()Lokhttp3/internal/connection/f;` @kind virtual;
  #L202f0c.  v3:= temp @kind object;
  #L202f0e.  call temp:= `handshake`(v3) @signature `Lokhttp3/internal/connection/f;.handshake:()Lh/x;` @kind virtual;
  #L202f14.  v3:= temp @kind object;
  #L202f16.  call temp:= `handshake`(v5, v3) @signature `Lh/i0$a;.handshake:(Lh/x;)Lh/i0$a;` @kind virtual;
  #L202f1c.  call temp:= `sentRequestAtMillis`(v5, v1) @signature `Lh/i0$a;.sentRequestAtMillis:(J)Lh/i0$a;` @kind virtual;
  #L202f22.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L202f28.  v6:= temp @kind wide;
  #L202f2a.  call temp:= `receivedResponseAtMillis`(v5, v6) @signature `Lh/i0$a;.receivedResponseAtMillis:(J)Lh/i0$a;` @kind virtual;
  #L202f30.  call temp:= `build`(v5) @signature `Lh/i0$a;.build:()Lh/i0;` @kind virtual;
  #L202f36.  v3:= temp @kind object;
  #L202f38.  call temp:= `code`(v3) @signature `Lh/i0;.code:()I` @kind virtual;
  #L202f3e.  v5:= temp;
  #L202f40.  v6:= 100I;
  #L202f44.  if v5 != v6 then goto L202f90;
  #L202f48.  call temp:= `readResponseHeaders`(v0, v4) @signature `Lokhttp3/internal/connection/d;.readResponseHeaders:(Z)Lh/i0$a;` @kind virtual;
  #L202f4e.  v3:= temp @kind object;
  #L202f50.  call temp:= `request`(v3, v9) @signature `Lh/i0$a;.request:(Lh/g0;)Lh/i0$a;` @kind virtual;
  #L202f56.  call temp:= `connection`(v0) @signature `Lokhttp3/internal/connection/d;.connection:()Lokhttp3/internal/connection/f;` @kind virtual;
  #L202f5c.  v9:= temp @kind object;
  #L202f5e.  call temp:= `handshake`(v9) @signature `Lokhttp3/internal/connection/f;.handshake:()Lh/x;` @kind virtual;
  #L202f64.  v9:= temp @kind object;
  #L202f66.  call temp:= `handshake`(v3, v9) @signature `Lh/i0$a;.handshake:(Lh/x;)Lh/i0$a;` @kind virtual;
  #L202f6c.  call temp:= `sentRequestAtMillis`(v3, v1) @signature `Lh/i0$a;.sentRequestAtMillis:(J)Lh/i0$a;` @kind virtual;
  #L202f72.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L202f78.  v1:= temp @kind wide;
  #L202f7a.  call temp:= `receivedResponseAtMillis`(v3, v1) @signature `Lh/i0$a;.receivedResponseAtMillis:(J)Lh/i0$a;` @kind virtual;
  #L202f80.  call temp:= `build`(v3) @signature `Lh/i0$a;.build:()Lh/i0;` @kind virtual;
  #L202f86.  v3:= temp @kind object;
  #L202f88.  call temp:= `code`(v3) @signature `Lh/i0;.code:()I` @kind virtual;
  #L202f8e.  v5:= temp;
  #L202f90.  call `responseHeadersEnd`(v0, v3) @signature `Lokhttp3/internal/connection/d;.responseHeadersEnd:(Lh/i0;)V` @kind virtual;
  #L202f96.  v9:= v8.`h.n0.h.b.a` @type ^`boolean` @kind boolean;
  #L202f9a.  if v9 == 0 then goto L202fc2;
  #L202f9e.  v9:= 101I;
  #L202fa2.  if v5 != v9 then goto L202fc2;
  #L202fa6.  call temp:= `newBuilder`(v3) @signature `Lh/i0;.newBuilder:()Lh/i0$a;` @kind virtual;
  #L202fac.  v9:= temp @kind object;
  #L202fae.  v1:= `@@h.n0.e.d` @type ^`h.j0` @kind object;
  #L202fb2.  call temp:= `body`(v9, v1) @signature `Lh/i0$a;.body:(Lh/j0;)Lh/i0$a;` @kind virtual;
  #L202fb8.  call temp:= `build`(v9) @signature `Lh/i0$a;.build:()Lh/i0;` @kind virtual;
  #L202fbe.  v9:= temp @kind object;
  #L202fc0.  goto L202fe0;
  #L202fc2.  call temp:= `newBuilder`(v3) @signature `Lh/i0;.newBuilder:()Lh/i0$a;` @kind virtual;
  #L202fc8.  v9:= temp @kind object;
  #L202fca.  call temp:= `openResponseBody`(v0, v3) @signature `Lokhttp3/internal/connection/d;.openResponseBody:(Lh/i0;)Lh/j0;` @kind virtual;
  #L202fd0.  v1:= temp @kind object;
  #L202fd2.  call temp:= `body`(v9, v1) @signature `Lh/i0$a;.body:(Lh/j0;)Lh/i0$a;` @kind virtual;
  #L202fd8.  call temp:= `build`(v9) @signature `Lh/i0$a;.build:()Lh/i0;` @kind virtual;
  #L202fde.  v9:= temp @kind object;
  #L202fe0.  call temp:= `request`(v9) @signature `Lh/i0;.request:()Lh/g0;` @kind virtual;
  #L202fe6.  v1:= temp @kind object;
  #L202fe8.  v2:= "Connection" @kind object;
  #L202fec.  call temp:= `header`(v1, v2) @signature `Lh/g0;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L202ff2.  v1:= temp @kind object;
  #L202ff4.  v3:= "close" @kind object;
  #L202ff8.  call temp:= `equalsIgnoreCase`(v3, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L202ffe.  v1:= temp;
  #L203000.  if v1 != 0 then goto L203018;
  #L203004.  call temp:= `header`(v9, v2) @signature `Lh/i0;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L20300a.  v1:= temp @kind object;
  #L20300c.  call temp:= `equalsIgnoreCase`(v3, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L203012.  v1:= temp;
  #L203014.  if v1 == 0 then goto L20301e;
  #L203018.  call `noNewExchangesOnConnection`(v0) @signature `Lokhttp3/internal/connection/d;.noNewExchangesOnConnection:()V` @kind virtual;
  #L20301e.  v0:= 204I;
  #L203022.  if v5 == v0 then goto L20302e;
  #L203026.  v0:= 205I;
  #L20302a.  if v5 != v0 then goto L20304a;
  #L20302e.  call temp:= `body`(v9) @signature `Lh/i0;.body:()Lh/j0;` @kind virtual;
  #L203034.  v0:= temp @kind object;
  #L203036.  call temp:= `contentLength`(v0) @signature `Lh/j0;.contentLength:()J` @kind virtual;
  #L20303c.  v0:= temp @kind wide;
  #L20303e.  v2:= 0L;
  #L203042.  v4:= lcmp(v0, v2);
  #L203046.  if v4 > 0 then goto L20304c;
  #L20304a.  return v9 @kind object;
  #L20304c.  v0:= new `java.net.ProtocolException`;
  #L203050.  v1:= new `java.lang.StringBuilder`;
  #L203054.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20305a.  v2:= "HTTP " @kind object;
  #L20305e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L203064.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L20306a.  v2:= " had non-zero Content-Length: " @kind object;
  #L20306e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L203074.  call temp:= `body`(v9) @signature `Lh/i0;.body:()Lh/j0;` @kind virtual;
  #L20307a.  v9:= temp @kind object;
  #L20307c.  call temp:= `contentLength`(v9) @signature `Lh/j0;.contentLength:()J` @kind virtual;
  #L203082.  v2:= temp @kind wide;
  #L203084.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L20308a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L203090.  v9:= temp @kind object;
  #L203092.  call `<init>`(v0, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L203098.  throw v0;
}
