record `h.n0.h.k` @kind class @AccessFlag PUBLIC_FINAL {
  `h.e0` `h.n0.h.k.a` @AccessFlag PUBLIC_FINAL;
  `int` `h.n0.h.k.b` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `h.n0.h.k.c` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`h.n0.h.k` v0 @kind this, `h.e0` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lh/n0/h/k;.<init>:(Lh/e0;ILjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L204368.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20436e.  v0.`h.n0.h.k.a` @type ^`h.e0` := v1 @kind object;
  #L204372.  v0.`h.n0.h.k.b` @type ^`int` := v2;
  #L204376.  v0.`h.n0.h.k.c` @type ^`java.lang.String` := v3 @kind object;
  #L20437a.  return @kind void;
}
procedure `h.n0.h.k` `parse`(`java.lang.String` v8 @kind object) @signature `Lh/n0/h/k;.parse:(Ljava/lang/String;)Lh/n0/h/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L204184.  v0:= "HTTP/1." @kind object;
  #L204188.  call temp:= `startsWith`(v8, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L20418e.  v0:= temp;
  #L204190.  v1:= 32I;
  #L204194.  v2:= 4I;
  #L204196.  v3:= 9I;
  #L20419a.  v4:= "Unexpected status line: " @kind object;
  #L20419e.  if v0 == 0 then goto L204236;
  #L2041a2.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2041a8.  v0:= temp;
  #L2041aa.  if v0 < v3 then goto L20420c;
  #L2041ae.  v0:= 8I;
  #L2041b2.  call temp:= `charAt`(v8, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2041b8.  v0:= temp;
  #L2041ba.  if v0 != v1 then goto L20420c;
  #L2041be.  v0:= 7I;
  #L2041c0.  call temp:= `charAt`(v8, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2041c6.  v0:= temp;
  #L2041c8.  v0:= v0 + -48;
  #L2041cc.  if v0 != 0 then goto L2041d6;
  #L2041d0.  v0:= `@@h.e0.g` @type ^`h.e0` @kind object;
  #L2041d4.  goto L20424c;
  #L2041d6.  v5:= 1I;
  #L2041d8.  if v0 != v5 then goto L2041e2;
  #L2041dc.  v0:= `@@h.e0.h` @type ^`h.e0` @kind object;
  #L2041e0.  goto L20424c;
  #L2041e2.  v0:= new `java.net.ProtocolException`;
  #L2041e6.  v1:= new `java.lang.StringBuilder`;
  #L2041ea.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2041f0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2041f6.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2041fc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L204202.  v8:= temp @kind object;
  #L204204.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20420a.  throw v0;
  #L20420c.  v0:= new `java.net.ProtocolException`;
  #L204210.  v1:= new `java.lang.StringBuilder`;
  #L204214.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20421a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L204220.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L204226.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20422c.  v8:= temp @kind object;
  #L20422e.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L204234.  throw v0;
  #L204236.  v0:= "ICY " @kind object;
  #L20423a.  call temp:= `startsWith`(v8, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L204240.  v0:= temp;
  #L204242.  if v0 == 0 then goto L20431e;
  #L204246.  v0:= `@@h.e0.g` @type ^`h.e0` @kind object;
  #L20424a.  v3:= 4I;
  #L20424c.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L204252.  v5:= temp;
  #L204254.  v6:= v3 + 3;
  #L204258.  if v5 < v6 then goto L2042f4;
  #L20425c.  call temp:= `substring`(v8, v3, v6) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L204262.  v5:= temp @kind object;
  #L204264.  call temp:= `parseInt`(v5) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L20426a.  v5:= temp;
  #L20426c.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L204272.  v7:= temp;
  #L204274.  if v7 <= v6 then goto L2042ba;
  #L204278.  call temp:= `charAt`(v8, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L20427e.  v6:= temp;
  #L204280.  if v6 != v1 then goto L204290;
  #L204284.  v3:= v3 + v2 @kind int;
  #L204286.  call temp:= `substring`(v8, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L20428c.  v8:= temp @kind object;
  #L20428e.  goto L2042be;
  #L204290.  v0:= new `java.net.ProtocolException`;
  #L204294.  v1:= new `java.lang.StringBuilder`;
  #L204298.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20429e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2042a4.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2042aa.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2042b0.  v8:= temp @kind object;
  #L2042b2.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2042b8.  throw v0;
  #L2042ba.  v8:= "" @kind object;
  #L2042be.  v1:= new `h.n0.h.k`;
  #L2042c2.  call `<init>`(v1, v0, v5, v8) @signature `Lh/n0/h/k;.<init>:(Lh/e0;ILjava/lang/String;)V` @kind direct;
  #L2042c8.  return v1 @kind object;
  #L2042ca.  v0:= new `java.net.ProtocolException`;
  #L2042ce.  v1:= new `java.lang.StringBuilder`;
  #L2042d2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2042d8.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2042de.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2042e4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2042ea.  v8:= temp @kind object;
  #L2042ec.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2042f2.  throw v0;
  #L2042f4.  v0:= new `java.net.ProtocolException`;
  #L2042f8.  v1:= new `java.lang.StringBuilder`;
  #L2042fc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L204302.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L204308.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20430e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L204314.  v8:= temp @kind object;
  #L204316.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20431c.  throw v0;
  #L20431e.  v0:= new `java.net.ProtocolException`;
  #L204322.  v1:= new `java.lang.StringBuilder`;
  #L204326.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20432c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L204332.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L204338.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20433e.  v8:= temp @kind object;
  #L204340.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L204346.  throw v0;
  catch `java.lang.NumberFormatException` @[L20425c..L20426c] goto L2042ca;
}
procedure `java.lang.String` `toString`(`h.n0.h.k` v3 @kind this) @signature `Lh/n0/h/k;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L204118.  v0:= new `java.lang.StringBuilder`;
  #L20411c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L204122.  v1:= v3.`h.n0.h.k.a` @type ^`h.e0` @kind object;
  #L204126.  v2:= `@@h.e0.g` @type ^`h.e0` @kind object;
  #L20412a.  if v1 != v2 then goto L204134;
  #L20412e.  v1:= "HTTP/1.0" @kind object;
  #L204132.  goto L204138;
  #L204134.  v1:= "HTTP/1.1" @kind object;
  #L204138.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20413e.  v1:= 32I;
  #L204142.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L204148.  v2:= v3.`h.n0.h.k.b` @type ^`int`;
  #L20414c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L204152.  v2:= v3.`h.n0.h.k.c` @type ^`java.lang.String` @kind object;
  #L204156.  if v2 == 0 then goto L20416a;
  #L20415a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L204160.  v1:= v3.`h.n0.h.k.c` @type ^`java.lang.String` @kind object;
  #L204164.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20416a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L204170.  v0:= temp @kind object;
  #L204172.  return v0 @kind object;
}
