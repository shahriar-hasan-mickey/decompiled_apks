record `h.n0.h.g` @kind class @AccessFlag PUBLIC_FINAL extends `h.a0$a` @kind interface {
  `java.util.List` `h.n0.h.g.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.j` `h.n0.h.g.b` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.d` `h.n0.h.g.c` @AccessFlag PRIVATE_FINAL;
  `int` `h.n0.h.g.d` @AccessFlag PRIVATE_FINAL;
  `h.g0` `h.n0.h.g.e` @AccessFlag PRIVATE_FINAL;
  `h.j` `h.n0.h.g.f` @AccessFlag PRIVATE_FINAL;
  `int` `h.n0.h.g.g` @AccessFlag PRIVATE_FINAL;
  `int` `h.n0.h.g.h` @AccessFlag PRIVATE_FINAL;
  `int` `h.n0.h.g.i` @AccessFlag PRIVATE_FINAL;
  `int` `h.n0.h.g.j` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`h.n0.h.g` v0 @kind this, `java.util.List` v1 @kind object, `okhttp3.internal.connection.j` v2 @kind object, `okhttp3.internal.connection.d` v3 @kind object, `int` v4 , `h.g0` v5 @kind object, `h.j` v6 @kind object, `int` v7 , `int` v8 , `int` v9 ) @signature `Lh/n0/h/g;.<init>:(Ljava/util/List;Lokhttp3/internal/connection/j;Lokhttp3/internal/connection/d;ILh/g0;Lh/j;III)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L203964.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20396a.  v0.`h.n0.h.g.a` @type ^`java.util.List` := v1 @kind object;
  #L20396e.  v0.`h.n0.h.g.b` @type ^`okhttp3.internal.connection.j` := v2 @kind object;
  #L203972.  v0.`h.n0.h.g.c` @type ^`okhttp3.internal.connection.d` := v3 @kind object;
  #L203976.  v0.`h.n0.h.g.d` @type ^`int` := v4;
  #L20397a.  v0.`h.n0.h.g.e` @type ^`h.g0` := v5 @kind object;
  #L20397e.  v0.`h.n0.h.g.f` @type ^`h.j` := v6 @kind object;
  #L203982.  v0.`h.n0.h.g.g` @type ^`int` := v7;
  #L203986.  v0.`h.n0.h.g.h` @type ^`int` := v8;
  #L20398a.  v0.`h.n0.h.g.i` @type ^`int` := v9;
  #L20398e.  return @kind void;
}
procedure `int` `connectTimeoutMillis`(`h.n0.h.g` v1 @kind this) @signature `Lh/n0/h/g;.connectTimeoutMillis:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L203650.  v0:= v1.`h.n0.h.g.g` @type ^`int`;
  #L203654.  return v0;
}
procedure `h.n` `connection`(`h.n0.h.g` v1 @kind this) @signature `Lh/n0/h/g;.connection:()Lh/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L203698.  v0:= v1.`h.n0.h.g.c` @type ^`okhttp3.internal.connection.d` @kind object;
  #L20369c.  if v0 == 0 then goto L2036aa;
  #L2036a0.  call temp:= `connection`(v0) @signature `Lokhttp3/internal/connection/d;.connection:()Lokhttp3/internal/connection/f;` @kind virtual;
  #L2036a6.  v0:= temp @kind object;
  #L2036a8.  goto L2036ac;
  #L2036aa.  v0:= 0I;
  #L2036ac.  return v0 @kind object;
}
procedure `okhttp3.internal.connection.d` `exchange`(`h.n0.h.g` v1 @kind this) @signature `Lh/n0/h/g;.exchange:()Lokhttp3/internal/connection/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L203924.  v0:= v1.`h.n0.h.g.c` @type ^`okhttp3.internal.connection.d` @kind object;
  #L203928.  if v0 == 0 then goto L20392e;
  #L20392c.  return v0 @kind object;
  #L20392e.  v0:= new `java.lang.IllegalStateException`;
  #L203932.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L203938.  throw v0;
}
procedure `h.i0` `proceed`(`h.n0.h.g` v2 @kind this, `h.g0` v3 @kind object) @signature `Lh/n0/h/g;.proceed:(Lh/g0;)Lh/i0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2036d8.  v0:= v2.`h.n0.h.g.b` @type ^`okhttp3.internal.connection.j` @kind object;
  #L2036dc.  v1:= v2.`h.n0.h.g.c` @type ^`okhttp3.internal.connection.d` @kind object;
  #L2036e0.  call temp:= `proceed`(v2, v3, v0, v1) @signature `Lh/n0/h/g;.proceed:(Lh/g0;Lokhttp3/internal/connection/j;Lokhttp3/internal/connection/d;)Lh/i0;` @kind virtual;
  #L2036e6.  v3:= temp @kind object;
  #L2036e8.  return v3 @kind object;
}
procedure `h.i0` `proceed`(`h.n0.h.g` v15 @kind this, `h.g0` v16 @kind object, `okhttp3.internal.connection.j` v17 @kind object, `okhttp3.internal.connection.d` v18 @kind object) @signature `Lh/n0/h/g;.proceed:(Lh/g0;Lokhttp3/internal/connection/j;Lokhttp3/internal/connection/d;)Lh/i0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L2036fc.  v0:= v15 @kind object;
  #L2036fe.  v1:= v0.`h.n0.h.g.d` @type ^`int`;
  #L203702.  v2:= v0.`h.n0.h.g.a` @type ^`java.util.List` @kind object;
  #L203706.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20370c.  v2:= temp;
  #L20370e.  if v1 >= v2 then goto L203908;
  #L203712.  v1:= v0.`h.n0.h.g.j` @type ^`int`;
  #L203716.  v2:= 1I;
  #L203718.  v1:= v1 + v2 @kind int;
  #L20371a.  v0.`h.n0.h.g.j` @type ^`int` := v1;
  #L20371e.  v1:= v0.`h.n0.h.g.c` @type ^`okhttp3.internal.connection.d` @kind object;
  #L203722.  v3:= "network interceptor " @kind object;
  #L203726.  if v1 == 0 then goto L20378e;
  #L20372a.  call temp:= `connection`(v1) @signature `Lokhttp3/internal/connection/d;.connection:()Lokhttp3/internal/connection/f;` @kind virtual;
  #L203730.  v1:= temp @kind object;
  #L203732.  call temp:= `url`(v16) @signature `Lh/g0;.url:()Lh/z;` @kind virtual;
  #L203738.  v4:= temp @kind object;
  #L20373a.  call temp:= `supportsUrl`(v1, v4) @signature `Lokhttp3/internal/connection/f;.supportsUrl:(Lh/z;)Z` @kind virtual;
  #L203740.  v1:= temp;
  #L203742.  if v1 == 0 then goto L203748;
  #L203746.  goto L20378e;
  #L203748.  v1:= new `java.lang.IllegalStateException`;
  #L20374c.  v4:= new `java.lang.StringBuilder`;
  #L203750.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L203756.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20375c.  v3:= v0.`h.n0.h.g.a` @type ^`java.util.List` @kind object;
  #L203760.  v5:= v0.`h.n0.h.g.d` @type ^`int`;
  #L203764.  v5:= v5 - v2 @kind int;
  #L203766.  call temp:= `get`(v3, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L20376c.  v2:= temp @kind object;
  #L20376e.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L203774.  v2:= " must retain the same host and port" @kind object;
  #L203778.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20377e.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L203784.  v2:= temp @kind object;
  #L203786.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20378c.  throw v1;
  #L20378e.  v1:= v0.`h.n0.h.g.c` @type ^`okhttp3.internal.connection.d` @kind object;
  #L203792.  v4:= " must call proceed() exactly once" @kind object;
  #L203796.  if v1 == 0 then goto L2037e6;
  #L20379a.  v1:= v0.`h.n0.h.g.j` @type ^`int`;
  #L20379e.  if v1 > v2 then goto L2037a4;
  #L2037a2.  goto L2037e6;
  #L2037a4.  v1:= new `java.lang.IllegalStateException`;
  #L2037a8.  v5:= new `java.lang.StringBuilder`;
  #L2037ac.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2037b2.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2037b8.  v3:= v0.`h.n0.h.g.a` @type ^`java.util.List` @kind object;
  #L2037bc.  v6:= v0.`h.n0.h.g.d` @type ^`int`;
  #L2037c0.  v6:= v6 - v2 @kind int;
  #L2037c2.  call temp:= `get`(v3, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2037c8.  v2:= temp @kind object;
  #L2037ca.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2037d0.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2037d6.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2037dc.  v2:= temp @kind object;
  #L2037de.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2037e4.  throw v1;
  #L2037e6.  v1:= new `h.n0.h.g`;
  #L2037ea.  v6:= v0.`h.n0.h.g.a` @type ^`java.util.List` @kind object;
  #L2037ee.  v5:= v0.`h.n0.h.g.d` @type ^`int`;
  #L2037f2.  v9:= v5 + 1;
  #L2037f6.  v11:= v0.`h.n0.h.g.f` @type ^`h.j` @kind object;
  #L2037fa.  v12:= v0.`h.n0.h.g.g` @type ^`int`;
  #L2037fe.  v13:= v0.`h.n0.h.g.h` @type ^`int`;
  #L203802.  v14:= v0.`h.n0.h.g.i` @type ^`int`;
  #L203806.  v5:= v1 @kind object;
  #L203808.  v7:= v17 @kind object;
  #L20380c.  v8:= v18 @kind object;
  #L203810.  v10:= v16 @kind object;
  #L203814.  call `<init>`(v5, v6, v7, v8, v9, v10, v11, v12, v13, v14) @signature `Lh/n0/h/g;.<init>:(Ljava/util/List;Lokhttp3/internal/connection/j;Lokhttp3/internal/connection/d;ILh/g0;Lh/j;III)V` @kind direct;
  #L20381a.  v5:= v0.`h.n0.h.g.a` @type ^`java.util.List` @kind object;
  #L20381e.  v6:= v0.`h.n0.h.g.d` @type ^`int`;
  #L203822.  call temp:= `get`(v5, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L203828.  v5:= temp @kind object;
  #L20382a.  v5:= (`h.a0`) v5 @kind object;
  #L20382e.  call temp:= `intercept`(v5, v1) @signature `Lh/a0;.intercept:(Lh/a0$a;)Lh/i0;` @kind interface;
  #L203834.  v6:= temp @kind object;
  #L203836.  if v18 == 0 then goto L20388a;
  #L20383a.  v7:= v0.`h.n0.h.g.d` @type ^`int`;
  #L20383e.  v7:= v7 + v2 @kind int;
  #L203840.  v8:= v0.`h.n0.h.g.a` @type ^`java.util.List` @kind object;
  #L203844.  call temp:= `size`(v8) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20384a.  v8:= temp;
  #L20384c.  if v7 >= v8 then goto L20388a;
  #L203850.  v1:= v1.`h.n0.h.g.j` @type ^`int`;
  #L203854.  if v1 != v2 then goto L20385a;
  #L203858.  goto L20388a;
  #L20385a.  v1:= new `java.lang.IllegalStateException`;
  #L20385e.  v2:= new `java.lang.StringBuilder`;
  #L203862.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L203868.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20386e.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L203874.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20387a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L203880.  v2:= temp @kind object;
  #L203882.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L203888.  throw v1;
  #L20388a.  v1:= "interceptor " @kind object;
  #L20388e.  if v6 == 0 then goto L2038d4;
  #L203892.  call temp:= `body`(v6) @signature `Lh/i0;.body:()Lh/j0;` @kind virtual;
  #L203898.  v2:= temp @kind object;
  #L20389a.  if v2 == 0 then goto L2038a0;
  #L20389e.  return v6 @kind object;
  #L2038a0.  v2:= new `java.lang.IllegalStateException`;
  #L2038a4.  v3:= new `java.lang.StringBuilder`;
  #L2038a8.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2038ae.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2038b4.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2038ba.  v1:= " returned a response with no body" @kind object;
  #L2038be.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2038c4.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2038ca.  v1:= temp @kind object;
  #L2038cc.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2038d2.  throw v2;
  #L2038d4.  v2:= new `java.lang.NullPointerException`;
  #L2038d8.  v3:= new `java.lang.StringBuilder`;
  #L2038dc.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2038e2.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2038e8.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2038ee.  v1:= " returned null" @kind object;
  #L2038f2.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2038f8.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2038fe.  v1:= temp @kind object;
  #L203900.  call `<init>`(v2, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L203906.  throw v2;
  #L203908.  v1:= new `java.lang.AssertionError`;
  #L20390c.  call `<init>`(v1) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L203912.  throw v1;
}
procedure `int` `readTimeoutMillis`(`h.n0.h.g` v1 @kind this) @signature `Lh/n0/h/g;.readTimeoutMillis:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L203668.  v0:= v1.`h.n0.h.g.h` @type ^`int`;
  #L20366c.  return v0;
}
procedure `h.g0` `request`(`h.n0.h.g` v1 @kind this) @signature `Lh/n0/h/g;.request:()Lh/g0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2036c0.  v0:= v1.`h.n0.h.g.e` @type ^`h.g0` @kind object;
  #L2036c4.  return v0 @kind object;
}
procedure `okhttp3.internal.connection.j` `transmitter`(`h.n0.h.g` v1 @kind this) @signature `Lh/n0/h/g;.transmitter:()Lokhttp3/internal/connection/j;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20394c.  v0:= v1.`h.n0.h.g.b` @type ^`okhttp3.internal.connection.j` @kind object;
  #L203950.  return v0 @kind object;
}
procedure `int` `writeTimeoutMillis`(`h.n0.h.g` v1 @kind this) @signature `Lh/n0/h/g;.writeTimeoutMillis:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L203680.  v0:= v1.`h.n0.h.g.i` @type ^`int`;
  #L203684.  return v0;
}
