record `h.n0.h.c` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `void` `cancel`() @signature `Lh/n0/h/c;.cancel:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okhttp3.internal.connection.f` `connection`() @signature `Lh/n0/h/c;.connection:()Lokhttp3/internal/connection/f;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `i.x` `createRequestBody`(`h.g0` v0 @kind object, `long` v1 ) @signature `Lh/n0/h/c;.createRequestBody:(Lh/g0;J)Li/x;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `finishRequest`() @signature `Lh/n0/h/c;.finishRequest:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `flushRequest`() @signature `Lh/n0/h/c;.flushRequest:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `i.z` `openResponseBodySource`(`h.i0` v0 @kind object) @signature `Lh/n0/h/c;.openResponseBodySource:(Lh/i0;)Li/z;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `h.i0$a` `readResponseHeaders`(`boolean` v0 ) @signature `Lh/n0/h/c;.readResponseHeaders:(Z)Lh/i0$a;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `reportedContentLength`(`h.i0` v0 @kind object) @signature `Lh/n0/h/c;.reportedContentLength:(Lh/i0;)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `writeRequestHeaders`(`h.g0` v0 @kind object) @signature `Lh/n0/h/c;.writeRequestHeaders:(Lh/g0;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
