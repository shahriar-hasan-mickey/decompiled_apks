record `h.n0.i.a$e` @kind class @AccessFlag  extends `h.n0.i.a$b` @kind class {
  `long` `h.n0.i.a$e.i` @AccessFlag PRIVATE;
  `h.n0.i.a` `h.n0.i.a$e.j` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`h.n0.i.a$e` v2 @kind this, `h.n0.i.a` v3 @kind object, `long` v4 ) @signature `Lh/n0/i/a$e;.<init>:(Lh/n0/i/a;J)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L204a14.  v2.`h.n0.i.a$e.j` @type ^`h.n0.i.a` := v3 @kind object;
  #L204a18.  v0:= 0I;
  #L204a1a.  call `<init>`(v2, v3, v0) @signature `Lh/n0/i/a$b;.<init>:(Lh/n0/i/a;Lh/n0/i/a$a;)V` @kind direct;
  #L204a20.  v2.`h.n0.i.a$e.i` @type ^`long` := v4 @kind wide;
  #L204a24.  v3:= v2.`h.n0.i.a$e.i` @type ^`long` @kind wide;
  #L204a28.  v0:= 0L;
  #L204a2c.  v5:= lcmp(v3, v0);
  #L204a30.  if v5 != 0 then goto L204a3a;
  #L204a34.  call `a`(v2) @signature `Lh/n0/i/a$b;.a:()V` @kind virtual;
  #L204a3a.  return @kind void;
}
procedure `void` `close`(`h.n0.i.a$e` v5 @kind this) @signature `Lh/n0/i/a$e;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L204a4c.  v0:= v5.`h.n0.i.a$b.g` @type ^`boolean` @kind boolean;
  #L204a50.  if v0 == 0 then goto L204a56;
  #L204a54.  return @kind void;
  #L204a56.  v0:= v5.`h.n0.i.a$e.i` @type ^`long` @kind wide;
  #L204a5a.  v2:= 0L;
  #L204a5e.  v4:= lcmp(v0, v2);
  #L204a62.  if v4 == 0 then goto L204a92;
  #L204a66.  v0:= 100I;
  #L204a6a.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L204a6e.  call temp:= `discard`(v5, v0, v1) @signature `Lh/n0/e;.discard:(Li/z;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L204a74.  v0:= temp;
  #L204a76.  if v0 != 0 then goto L204a92;
  #L204a7a.  v0:= v5.`h.n0.i.a$e.j` @type ^`h.n0.i.a` @kind object;
  #L204a7e.  call temp:= `e`(v0) @signature `Lh/n0/i/a;.e:(Lh/n0/i/a;)Lokhttp3/internal/connection/f;` @kind static;
  #L204a84.  v0:= temp @kind object;
  #L204a86.  call `noNewExchanges`(v0) @signature `Lokhttp3/internal/connection/f;.noNewExchanges:()V` @kind virtual;
  #L204a8c.  call `a`(v5) @signature `Lh/n0/i/a$b;.a:()V` @kind virtual;
  #L204a92.  v0:= 1I;
  #L204a94.  v5.`h.n0.i.a$b.g` @type ^`boolean` := v0 @kind boolean;
  #L204a98.  return @kind void;
}
procedure `long` `read`(`h.n0.i.a$e` v7 @kind this, `i.e` v8 @kind object, `long` v9 ) @signature `Lh/n0/i/a$e;.read:(Li/e;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L204940.  v0:= 0L;
  #L204944.  v2:= lcmp(v9, v0);
  #L204948.  if v2 < 0 then goto L2049d4;
  #L20494c.  v2:= v7.`h.n0.i.a$b.g` @type ^`boolean` @kind boolean;
  #L204950.  if v2 != 0 then goto L2049c4;
  #L204954.  v2:= v7.`h.n0.i.a$e.i` @type ^`long` @kind wide;
  #L204958.  v4:= -1L;
  #L20495c.  v6:= lcmp(v2, v0);
  #L204960.  if v6 != 0 then goto L204966;
  #L204964.  return v4 @kind wide;
  #L204966.  call temp:= `min`(v2, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L20496c.  v9:= temp @kind wide;
  #L20496e.  call temp:= `read`(v7, v8, v9) @signature `Lh/n0/i/a$b;.read:(Li/e;J)J` @kind super;
  #L204974.  v8:= temp @kind wide;
  #L204976.  v10:= lcmp(v8, v4);
  #L20497a.  if v10 == 0 then goto L20499c;
  #L20497e.  v2:= v7.`h.n0.i.a$e.i` @type ^`long` @kind wide;
  #L204982.  v2:= v2 - v8 @kind long;
  #L204984.  v7.`h.n0.i.a$e.i` @type ^`long` := v2 @kind wide;
  #L204988.  v2:= v7.`h.n0.i.a$e.i` @type ^`long` @kind wide;
  #L20498c.  v10:= lcmp(v2, v0);
  #L204990.  if v10 != 0 then goto L20499a;
  #L204994.  call `a`(v7) @signature `Lh/n0/i/a$b;.a:()V` @kind virtual;
  #L20499a.  return v8 @kind wide;
  #L20499c.  v8:= v7.`h.n0.i.a$e.j` @type ^`h.n0.i.a` @kind object;
  #L2049a0.  call temp:= `e`(v8) @signature `Lh/n0/i/a;.e:(Lh/n0/i/a;)Lokhttp3/internal/connection/f;` @kind static;
  #L2049a6.  v8:= temp @kind object;
  #L2049a8.  call `noNewExchanges`(v8) @signature `Lokhttp3/internal/connection/f;.noNewExchanges:()V` @kind virtual;
  #L2049ae.  v8:= new `java.net.ProtocolException`;
  #L2049b2.  v9:= "unexpected end of stream" @kind object;
  #L2049b6.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2049bc.  call `a`(v7) @signature `Lh/n0/i/a$b;.a:()V` @kind virtual;
  #L2049c2.  throw v8;
  #L2049c4.  v8:= new `java.lang.IllegalStateException`;
  #L2049c8.  v9:= "closed" @kind object;
  #L2049cc.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2049d2.  throw v8;
  #L2049d4.  v8:= new `java.lang.IllegalArgumentException`;
  #L2049d8.  v0:= new `java.lang.StringBuilder`;
  #L2049dc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2049e2.  v1:= "byteCount < 0: " @kind object;
  #L2049e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2049ec.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2049f2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2049f8.  v9:= temp @kind object;
  #L2049fa.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L204a00.  throw v8;
}
