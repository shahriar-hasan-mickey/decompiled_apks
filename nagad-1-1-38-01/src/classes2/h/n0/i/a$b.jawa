record `h.n0.i.a$b` @kind class @AccessFlag ABSTRACT extends `i.z` @kind interface {
  `i.l` `h.n0.i.a$b.f` @AccessFlag PROTECTED_FINAL;
  `boolean` `h.n0.i.a$b.g` @AccessFlag PROTECTED;
  `h.n0.i.a` `h.n0.i.a$b.h` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`h.n0.i.a$b` v1 @kind this, `h.n0.i.a` v2 @kind object) @signature `Lh/n0/i/a$b;.<init>:(Lh/n0/i/a;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L2043f8.  v1.`h.n0.i.a$b.h` @type ^`h.n0.i.a` := v2 @kind object;
  #L2043fc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L204402.  v2:= new `i.l`;
  #L204406.  v0:= v1.`h.n0.i.a$b.h` @type ^`h.n0.i.a` @kind object;
  #L20440a.  call temp:= `d`(v0) @signature `Lh/n0/i/a;.d:(Lh/n0/i/a;)Li/g;` @kind static;
  #L204410.  v0:= temp @kind object;
  #L204412.  call temp:= `timeout`(v0) @signature `Li/z;.timeout:()Li/a0;` @kind interface;
  #L204418.  v0:= temp @kind object;
  #L20441a.  call `<init>`(v2, v0) @signature `Li/l;.<init>:(Li/a0;)V` @kind direct;
  #L204420.  v1.`h.n0.i.a$b.f` @type ^`i.l` := v2 @kind object;
  #L204424.  return @kind void;
}
procedure `void` `<init>`(`h.n0.i.a$b` v0 @kind this, `h.n0.i.a` v1 @kind object, `h.n0.i.a$a` v2 @kind object) @signature `Lh/n0/i/a$b;.<init>:(Lh/n0/i/a;Lh/n0/i/a$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L204438.  call `<init>`(v0, v1) @signature `Lh/n0/i/a$b;.<init>:(Lh/n0/i/a;)V` @kind direct;
  #L20443e.  return @kind void;
}
procedure `void` `a`(`h.n0.i.a$b` v3 @kind this) @signature `Lh/n0/i/a$b;.a:()V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L204450.  v0:= v3.`h.n0.i.a$b.h` @type ^`h.n0.i.a` @kind object;
  #L204454.  call temp:= `c`(v0) @signature `Lh/n0/i/a;.c:(Lh/n0/i/a;)I` @kind static;
  #L20445a.  v0:= temp;
  #L20445c.  v1:= 6I;
  #L20445e.  if v0 != v1 then goto L204464;
  #L204462.  return @kind void;
  #L204464.  v0:= v3.`h.n0.i.a$b.h` @type ^`h.n0.i.a` @kind object;
  #L204468.  call temp:= `c`(v0) @signature `Lh/n0/i/a;.c:(Lh/n0/i/a;)I` @kind static;
  #L20446e.  v0:= temp;
  #L204470.  v2:= 5I;
  #L204472.  if v0 != v2 then goto L204490;
  #L204476.  v0:= v3.`h.n0.i.a$b.h` @type ^`h.n0.i.a` @kind object;
  #L20447a.  v2:= v3.`h.n0.i.a$b.f` @type ^`i.l` @kind object;
  #L20447e.  call `a`(v0, v2) @signature `Lh/n0/i/a;.a:(Lh/n0/i/a;Li/l;)V` @kind static;
  #L204484.  v0:= v3.`h.n0.i.a$b.h` @type ^`h.n0.i.a` @kind object;
  #L204488.  call temp:= `a`(v0, v1) @signature `Lh/n0/i/a;.a:(Lh/n0/i/a;I)I` @kind static;
  #L20448e.  return @kind void;
  #L204490.  v0:= new `java.lang.IllegalStateException`;
  #L204494.  v1:= new `java.lang.StringBuilder`;
  #L204498.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20449e.  v2:= "state: " @kind object;
  #L2044a2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2044a8.  v2:= v3.`h.n0.i.a$b.h` @type ^`h.n0.i.a` @kind object;
  #L2044ac.  call temp:= `c`(v2) @signature `Lh/n0/i/a;.c:(Lh/n0/i/a;)I` @kind static;
  #L2044b2.  v2:= temp;
  #L2044b4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2044ba.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2044c0.  v1:= temp @kind object;
  #L2044c2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2044c8.  throw v0;
}
procedure `long` `read`(`h.n0.i.a$b` v1 @kind this, `i.e` v2 @kind object, `long` v3 ) @signature `Lh/n0/i/a$b;.read:(Li/e;J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20438c.  v0:= v1.`h.n0.i.a$b.h` @type ^`h.n0.i.a` @kind object;
  #L204390.  call temp:= `d`(v0) @signature `Lh/n0/i/a;.d:(Lh/n0/i/a;)Li/g;` @kind static;
  #L204396.  v0:= temp @kind object;
  #L204398.  call temp:= `read`(v0, v2, v3) @signature `Li/z;.read:(Li/e;J)J` @kind interface;
  #L20439e.  v2:= temp @kind wide;
  #L2043a0.  return v2 @kind wide;
  #L2043a2.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L2043a4.  v3:= v1.`h.n0.i.a$b.h` @type ^`h.n0.i.a` @kind object;
  #L2043a8.  call temp:= `e`(v3) @signature `Lh/n0/i/a;.e:(Lh/n0/i/a;)Lokhttp3/internal/connection/f;` @kind static;
  #L2043ae.  v3:= temp @kind object;
  #L2043b0.  call `noNewExchanges`(v3) @signature `Lokhttp3/internal/connection/f;.noNewExchanges:()V` @kind virtual;
  #L2043b6.  call `a`(v1) @signature `Lh/n0/i/a$b;.a:()V` @kind virtual;
  #L2043bc.  throw v2;
  catch `java.io.IOException` @[L20438c..L2043a0] goto L2043a2;
}
procedure `i.a0` `timeout`(`h.n0.i.a$b` v1 @kind this) @signature `Lh/n0/i/a$b;.timeout:()Li/a0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2043e0.  v0:= v1.`h.n0.i.a$b.f` @type ^`i.l` @kind object;
  #L2043e4.  return v0 @kind object;
}
