record `h.n0.g.a` @kind class @AccessFlag PUBLIC_FINAL extends `h.a0` @kind interface {
  `h.n0.g.d` `h.n0.g.a.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`h.n0.g.a` v0 @kind this, `h.n0.g.d` v1 @kind object) @signature `Lh/n0/g/a;.<init>:(Lh/n0/g/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1fefd0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1fefd6.  v0.`h.n0.g.a.a` @type ^`h.n0.g.d` := v1 @kind object;
  #L1fefda.  return @kind void;
}
procedure `h.i0` `a`(`h.i0` v1 @kind object) @signature `Lh/n0/g/a;.a:(Lh/i0;)Lh/i0;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1fef94.  if v1 == 0 then goto L1fefbc;
  #L1fef98.  call temp:= `body`(v1) @signature `Lh/i0;.body:()Lh/j0;` @kind virtual;
  #L1fef9e.  v0:= temp @kind object;
  #L1fefa0.  if v0 == 0 then goto L1fefbc;
  #L1fefa4.  call temp:= `newBuilder`(v1) @signature `Lh/i0;.newBuilder:()Lh/i0$a;` @kind virtual;
  #L1fefaa.  v1:= temp @kind object;
  #L1fefac.  v0:= 0I;
  #L1fefae.  call temp:= `body`(v1, v0) @signature `Lh/i0$a;.body:(Lh/j0;)Lh/i0$a;` @kind virtual;
  #L1fefb4.  call temp:= `build`(v1) @signature `Lh/i0$a;.build:()Lh/i0;` @kind virtual;
  #L1fefba.  v1:= temp @kind object;
  #L1fefbc.  return v1 @kind object;
}
procedure `h.i0` `a`(`h.n0.g.a` v4 @kind this, `h.n0.g.b` v5 @kind object, `h.i0` v6 @kind object) @signature `Lh/n0/g/a;.a:(Lh/n0/g/b;Lh/i0;)Lh/i0;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1fec80.  if v5 != 0 then goto L1fec86;
  #L1fec84.  return v6 @kind object;
  #L1fec86.  call temp:= `body`(v5) @signature `Lh/n0/g/b;.body:()Li/x;` @kind interface;
  #L1fec8c.  v0:= temp @kind object;
  #L1fec8e.  if v0 != 0 then goto L1fec94;
  #L1fec92.  return v6 @kind object;
  #L1fec94.  call temp:= `body`(v6) @signature `Lh/i0;.body:()Lh/j0;` @kind virtual;
  #L1fec9a.  v1:= temp @kind object;
  #L1fec9c.  call temp:= `source`(v1) @signature `Lh/j0;.source:()Li/g;` @kind virtual;
  #L1feca2.  v1:= temp @kind object;
  #L1feca4.  call temp:= `buffer`(v0) @signature `Li/p;.buffer:(Li/x;)Li/f;` @kind static;
  #L1fecaa.  v0:= temp @kind object;
  #L1fecac.  v2:= new `h.n0.g.a$a`;
  #L1fecb0.  call `<init>`(v2, v4, v1, v5, v0) @signature `Lh/n0/g/a$a;.<init>:(Lh/n0/g/a;Li/g;Lh/n0/g/b;Li/f;)V` @kind direct;
  #L1fecb6.  v5:= "Content-Type" @kind object;
  #L1fecba.  call temp:= `header`(v6, v5) @signature `Lh/i0;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1fecc0.  v5:= temp @kind object;
  #L1fecc2.  call temp:= `body`(v6) @signature `Lh/i0;.body:()Lh/j0;` @kind virtual;
  #L1fecc8.  v0:= temp @kind object;
  #L1fecca.  call temp:= `contentLength`(v0) @signature `Lh/j0;.contentLength:()J` @kind virtual;
  #L1fecd0.  v0:= temp @kind wide;
  #L1fecd2.  call temp:= `newBuilder`(v6) @signature `Lh/i0;.newBuilder:()Lh/i0$a;` @kind virtual;
  #L1fecd8.  v6:= temp @kind object;
  #L1fecda.  v3:= new `h.n0.h.h`;
  #L1fecde.  call temp:= `buffer`(v2) @signature `Li/p;.buffer:(Li/z;)Li/g;` @kind static;
  #L1fece4.  v2:= temp @kind object;
  #L1fece6.  call `<init>`(v3, v5, v0, v2) @signature `Lh/n0/h/h;.<init>:(Ljava/lang/String;JLi/g;)V` @kind direct;
  #L1fecec.  call temp:= `body`(v6, v3) @signature `Lh/i0$a;.body:(Lh/j0;)Lh/i0$a;` @kind virtual;
  #L1fecf2.  call temp:= `build`(v6) @signature `Lh/i0$a;.build:()Lh/i0;` @kind virtual;
  #L1fecf8.  v5:= temp @kind object;
  #L1fecfa.  return v5 @kind object;
}
procedure `h.y` `a`(`h.y` v7 @kind object, `h.y` v8 @kind object) @signature `Lh/n0/g/a;.a:(Lh/y;Lh/y;)Lh/y;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1feba0.  v0:= new `h.y$a`;
  #L1feba4.  call `<init>`(v0) @signature `Lh/y$a;.<init>:()V` @kind direct;
  #L1febaa.  call temp:= `size`(v7) @signature `Lh/y;.size:()I` @kind virtual;
  #L1febb0.  v1:= temp;
  #L1febb2.  v2:= 0I;
  #L1febb4.  v3:= 0I;
  #L1febb6.  if v3 >= v1 then goto L1fec20;
  #L1febba.  call temp:= `name`(v7, v3) @signature `Lh/y;.name:(I)Ljava/lang/String;` @kind virtual;
  #L1febc0.  v4:= temp @kind object;
  #L1febc2.  call temp:= `value`(v7, v3) @signature `Lh/y;.value:(I)Ljava/lang/String;` @kind virtual;
  #L1febc8.  v5:= temp @kind object;
  #L1febca.  v6:= "Warning" @kind object;
  #L1febce.  call temp:= `equalsIgnoreCase`(v6, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1febd4.  v6:= temp;
  #L1febd6.  if v6 == 0 then goto L1febec;
  #L1febda.  v6:= "1" @kind object;
  #L1febde.  call temp:= `startsWith`(v5, v6) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1febe4.  v6:= temp;
  #L1febe6.  if v6 == 0 then goto L1febec;
  #L1febea.  goto L1fec1a;
  #L1febec.  call temp:= `a`(v4) @signature `Lh/n0/g/a;.a:(Ljava/lang/String;)Z` @kind static;
  #L1febf2.  v6:= temp;
  #L1febf4.  if v6 != 0 then goto L1fec10;
  #L1febf8.  call temp:= `b`(v4) @signature `Lh/n0/g/a;.b:(Ljava/lang/String;)Z` @kind static;
  #L1febfe.  v6:= temp;
  #L1fec00.  if v6 == 0 then goto L1fec10;
  #L1fec04.  call temp:= `get`(v8, v4) @signature `Lh/y;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1fec0a.  v6:= temp @kind object;
  #L1fec0c.  if v6 != 0 then goto L1fec1a;
  #L1fec10.  v6:= `@@h.n0.c.a` @type ^`h.n0.c` @kind object;
  #L1fec14.  call `addLenient`(v6, v0, v4, v5) @signature `Lh/n0/c;.addLenient:(Lh/y$a;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L1fec1a.  v3:= v3 + 1;
  #L1fec1e.  goto L1febb6;
  #L1fec20.  call temp:= `size`(v8) @signature `Lh/y;.size:()I` @kind virtual;
  #L1fec26.  v7:= temp;
  #L1fec28.  if v2 >= v7 then goto L1fec64;
  #L1fec2c.  call temp:= `name`(v8, v2) @signature `Lh/y;.name:(I)Ljava/lang/String;` @kind virtual;
  #L1fec32.  v1:= temp @kind object;
  #L1fec34.  call temp:= `a`(v1) @signature `Lh/n0/g/a;.a:(Ljava/lang/String;)Z` @kind static;
  #L1fec3a.  v3:= temp;
  #L1fec3c.  if v3 != 0 then goto L1fec5e;
  #L1fec40.  call temp:= `b`(v1) @signature `Lh/n0/g/a;.b:(Ljava/lang/String;)Z` @kind static;
  #L1fec46.  v3:= temp;
  #L1fec48.  if v3 == 0 then goto L1fec5e;
  #L1fec4c.  v3:= `@@h.n0.c.a` @type ^`h.n0.c` @kind object;
  #L1fec50.  call temp:= `value`(v8, v2) @signature `Lh/y;.value:(I)Ljava/lang/String;` @kind virtual;
  #L1fec56.  v4:= temp @kind object;
  #L1fec58.  call `addLenient`(v3, v0, v1, v4) @signature `Lh/n0/c;.addLenient:(Lh/y$a;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L1fec5e.  v2:= v2 + 1;
  #L1fec62.  goto L1fec28;
  #L1fec64.  call temp:= `build`(v0) @signature `Lh/y$a;.build:()Lh/y;` @kind virtual;
  #L1fec6a.  v7:= temp @kind object;
  #L1fec6c.  return v7 @kind object;
}
procedure `boolean` `a`(`java.lang.String` v1 @kind object) @signature `Lh/n0/g/a;.a:(Ljava/lang/String;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L1feabc.  v0:= "Content-Length" @kind object;
  #L1feac0.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1feac6.  v0:= temp;
  #L1feac8.  if v0 != 0 then goto L1feaf2;
  #L1feacc.  v0:= "Content-Encoding" @kind object;
  #L1fead0.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1fead6.  v0:= temp;
  #L1fead8.  if v0 != 0 then goto L1feaf2;
  #L1feadc.  v0:= "Content-Type" @kind object;
  #L1feae0.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1feae6.  v1:= temp;
  #L1feae8.  if v1 == 0 then goto L1feaee;
  #L1feaec.  goto L1feaf2;
  #L1feaee.  v1:= 0I;
  #L1feaf0.  goto L1feaf4;
  #L1feaf2.  v1:= 1I;
  #L1feaf4.  return v1;
}
procedure `boolean` `b`(`java.lang.String` v1 @kind object) @signature `Lh/n0/g/a;.b:(Ljava/lang/String;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L1feb08.  v0:= "Connection" @kind object;
  #L1feb0c.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1feb12.  v0:= temp;
  #L1feb14.  if v0 != 0 then goto L1feb8c;
  #L1feb18.  v0:= "Keep-Alive" @kind object;
  #L1feb1c.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1feb22.  v0:= temp;
  #L1feb24.  if v0 != 0 then goto L1feb8c;
  #L1feb28.  v0:= "Proxy-Authenticate" @kind object;
  #L1feb2c.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1feb32.  v0:= temp;
  #L1feb34.  if v0 != 0 then goto L1feb8c;
  #L1feb38.  v0:= "Proxy-Authorization" @kind object;
  #L1feb3c.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1feb42.  v0:= temp;
  #L1feb44.  if v0 != 0 then goto L1feb8c;
  #L1feb48.  v0:= "TE" @kind object;
  #L1feb4c.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1feb52.  v0:= temp;
  #L1feb54.  if v0 != 0 then goto L1feb8c;
  #L1feb58.  v0:= "Trailers" @kind object;
  #L1feb5c.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1feb62.  v0:= temp;
  #L1feb64.  if v0 != 0 then goto L1feb8c;
  #L1feb68.  v0:= "Transfer-Encoding" @kind object;
  #L1feb6c.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1feb72.  v0:= temp;
  #L1feb74.  if v0 != 0 then goto L1feb8c;
  #L1feb78.  v0:= "Upgrade" @kind object;
  #L1feb7c.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1feb82.  v1:= temp;
  #L1feb84.  if v1 != 0 then goto L1feb8c;
  #L1feb88.  v1:= 1I;
  #L1feb8a.  goto L1feb8e;
  #L1feb8c.  v1:= 0I;
  #L1feb8e.  return v1;
}
procedure `h.i0` `intercept`(`h.n0.g.a` v5 @kind this, `h.a0$a` v6 @kind object) @signature `Lh/n0/g/a;.intercept:(Lh/a0$a;)Lh/i0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1fed0c.  v0:= v5.`h.n0.g.a.a` @type ^`h.n0.g.d` @kind object;
  #L1fed10.  if v0 == 0 then goto L1fed26;
  #L1fed14.  call temp:= `request`(v6) @signature `Lh/a0$a;.request:()Lh/g0;` @kind interface;
  #L1fed1a.  v1:= temp @kind object;
  #L1fed1c.  call temp:= `get`(v0, v1) @signature `Lh/n0/g/d;.get:(Lh/g0;)Lh/i0;` @kind interface;
  #L1fed22.  v0:= temp @kind object;
  #L1fed24.  goto L1fed28;
  #L1fed26.  v0:= 0I;
  #L1fed28.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L1fed2e.  v1:= temp @kind wide;
  #L1fed30.  v3:= new `h.n0.g.c$a`;
  #L1fed34.  call temp:= `request`(v6) @signature `Lh/a0$a;.request:()Lh/g0;` @kind interface;
  #L1fed3a.  v4:= temp @kind object;
  #L1fed3c.  call `<init>`(v3, v1, v4, v0) @signature `Lh/n0/g/c$a;.<init>:(JLh/g0;Lh/i0;)V` @kind direct;
  #L1fed42.  call temp:= `get`(v3) @signature `Lh/n0/g/c$a;.get:()Lh/n0/g/c;` @kind virtual;
  #L1fed48.  v1:= temp @kind object;
  #L1fed4a.  v2:= v1.`h.n0.g.c.a` @type ^`h.g0` @kind object;
  #L1fed4e.  v3:= v1.`h.n0.g.c.b` @type ^`h.i0` @kind object;
  #L1fed52.  v4:= v5.`h.n0.g.a.a` @type ^`h.n0.g.d` @kind object;
  #L1fed56.  if v4 == 0 then goto L1fed60;
  #L1fed5a.  call `trackResponse`(v4, v1) @signature `Lh/n0/g/d;.trackResponse:(Lh/n0/g/c;)V` @kind interface;
  #L1fed60.  if v0 == 0 then goto L1fed76;
  #L1fed64.  if v3 != 0 then goto L1fed76;
  #L1fed68.  call temp:= `body`(v0) @signature `Lh/i0;.body:()Lh/j0;` @kind virtual;
  #L1fed6e.  v1:= temp @kind object;
  #L1fed70.  call `closeQuietly`(v1) @signature `Lh/n0/e;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1fed76.  if v2 != 0 then goto L1fede0;
  #L1fed7a.  if v3 != 0 then goto L1fede0;
  #L1fed7e.  v0:= new `h.i0$a`;
  #L1fed82.  call `<init>`(v0) @signature `Lh/i0$a;.<init>:()V` @kind direct;
  #L1fed88.  call temp:= `request`(v6) @signature `Lh/a0$a;.request:()Lh/g0;` @kind interface;
  #L1fed8e.  v6:= temp @kind object;
  #L1fed90.  call temp:= `request`(v0, v6) @signature `Lh/i0$a;.request:(Lh/g0;)Lh/i0$a;` @kind virtual;
  #L1fed96.  v6:= `@@h.e0.h` @type ^`h.e0` @kind object;
  #L1fed9a.  call temp:= `protocol`(v0, v6) @signature `Lh/i0$a;.protocol:(Lh/e0;)Lh/i0$a;` @kind virtual;
  #L1feda0.  v6:= 504I;
  #L1feda4.  call temp:= `code`(v0, v6) @signature `Lh/i0$a;.code:(I)Lh/i0$a;` @kind virtual;
  #L1fedaa.  v6:= "Unsatisfiable Request (only-if-cached)" @kind object;
  #L1fedae.  call temp:= `message`(v0, v6) @signature `Lh/i0$a;.message:(Ljava/lang/String;)Lh/i0$a;` @kind virtual;
  #L1fedb4.  v6:= `@@h.n0.e.d` @type ^`h.j0` @kind object;
  #L1fedb8.  call temp:= `body`(v0, v6) @signature `Lh/i0$a;.body:(Lh/j0;)Lh/i0$a;` @kind virtual;
  #L1fedbe.  v1:= -1L;
  #L1fedc2.  call temp:= `sentRequestAtMillis`(v0, v1) @signature `Lh/i0$a;.sentRequestAtMillis:(J)Lh/i0$a;` @kind virtual;
  #L1fedc8.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L1fedce.  v1:= temp @kind wide;
  #L1fedd0.  call temp:= `receivedResponseAtMillis`(v0, v1) @signature `Lh/i0$a;.receivedResponseAtMillis:(J)Lh/i0$a;` @kind virtual;
  #L1fedd6.  call temp:= `build`(v0) @signature `Lh/i0$a;.build:()Lh/i0;` @kind virtual;
  #L1feddc.  v6:= temp @kind object;
  #L1fedde.  return v6 @kind object;
  #L1fede0.  if v2 != 0 then goto L1fee04;
  #L1fede4.  call temp:= `newBuilder`(v3) @signature `Lh/i0;.newBuilder:()Lh/i0$a;` @kind virtual;
  #L1fedea.  v6:= temp @kind object;
  #L1fedec.  call temp:= `a`(v3) @signature `Lh/n0/g/a;.a:(Lh/i0;)Lh/i0;` @kind static;
  #L1fedf2.  v0:= temp @kind object;
  #L1fedf4.  call temp:= `cacheResponse`(v6, v0) @signature `Lh/i0$a;.cacheResponse:(Lh/i0;)Lh/i0$a;` @kind virtual;
  #L1fedfa.  call temp:= `build`(v6) @signature `Lh/i0$a;.build:()Lh/i0;` @kind virtual;
  #L1fee00.  v6:= temp @kind object;
  #L1fee02.  return v6 @kind object;
  #L1fee04.  call temp:= `proceed`(v6, v2) @signature `Lh/a0$a;.proceed:(Lh/g0;)Lh/i0;` @kind interface;
  #L1fee0a.  v6:= temp @kind object;
  #L1fee0c.  if v6 != 0 then goto L1fee22;
  #L1fee10.  if v0 == 0 then goto L1fee22;
  #L1fee14.  call temp:= `body`(v0) @signature `Lh/i0;.body:()Lh/j0;` @kind virtual;
  #L1fee1a.  v0:= temp @kind object;
  #L1fee1c.  call `closeQuietly`(v0) @signature `Lh/n0/e;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1fee22.  if v3 == 0 then goto L1feece;
  #L1fee26.  call temp:= `code`(v6) @signature `Lh/i0;.code:()I` @kind virtual;
  #L1fee2c.  v0:= temp;
  #L1fee2e.  v1:= 304I;
  #L1fee32.  if v0 != v1 then goto L1feec0;
  #L1fee36.  call temp:= `newBuilder`(v3) @signature `Lh/i0;.newBuilder:()Lh/i0$a;` @kind virtual;
  #L1fee3c.  v0:= temp @kind object;
  #L1fee3e.  call temp:= `headers`(v3) @signature `Lh/i0;.headers:()Lh/y;` @kind virtual;
  #L1fee44.  v1:= temp @kind object;
  #L1fee46.  call temp:= `headers`(v6) @signature `Lh/i0;.headers:()Lh/y;` @kind virtual;
  #L1fee4c.  v2:= temp @kind object;
  #L1fee4e.  call temp:= `a`(v1, v2) @signature `Lh/n0/g/a;.a:(Lh/y;Lh/y;)Lh/y;` @kind static;
  #L1fee54.  v1:= temp @kind object;
  #L1fee56.  call temp:= `headers`(v0, v1) @signature `Lh/i0$a;.headers:(Lh/y;)Lh/i0$a;` @kind virtual;
  #L1fee5c.  call temp:= `sentRequestAtMillis`(v6) @signature `Lh/i0;.sentRequestAtMillis:()J` @kind virtual;
  #L1fee62.  v1:= temp @kind wide;
  #L1fee64.  call temp:= `sentRequestAtMillis`(v0, v1) @signature `Lh/i0$a;.sentRequestAtMillis:(J)Lh/i0$a;` @kind virtual;
  #L1fee6a.  call temp:= `receivedResponseAtMillis`(v6) @signature `Lh/i0;.receivedResponseAtMillis:()J` @kind virtual;
  #L1fee70.  v1:= temp @kind wide;
  #L1fee72.  call temp:= `receivedResponseAtMillis`(v0, v1) @signature `Lh/i0$a;.receivedResponseAtMillis:(J)Lh/i0$a;` @kind virtual;
  #L1fee78.  call temp:= `a`(v3) @signature `Lh/n0/g/a;.a:(Lh/i0;)Lh/i0;` @kind static;
  #L1fee7e.  v1:= temp @kind object;
  #L1fee80.  call temp:= `cacheResponse`(v0, v1) @signature `Lh/i0$a;.cacheResponse:(Lh/i0;)Lh/i0$a;` @kind virtual;
  #L1fee86.  call temp:= `a`(v6) @signature `Lh/n0/g/a;.a:(Lh/i0;)Lh/i0;` @kind static;
  #L1fee8c.  v1:= temp @kind object;
  #L1fee8e.  call temp:= `networkResponse`(v0, v1) @signature `Lh/i0$a;.networkResponse:(Lh/i0;)Lh/i0$a;` @kind virtual;
  #L1fee94.  call temp:= `build`(v0) @signature `Lh/i0$a;.build:()Lh/i0;` @kind virtual;
  #L1fee9a.  v0:= temp @kind object;
  #L1fee9c.  call temp:= `body`(v6) @signature `Lh/i0;.body:()Lh/j0;` @kind virtual;
  #L1feea2.  v6:= temp @kind object;
  #L1feea4.  call `close`(v6) @signature `Lh/j0;.close:()V` @kind virtual;
  #L1feeaa.  v6:= v5.`h.n0.g.a.a` @type ^`h.n0.g.d` @kind object;
  #L1feeae.  call `trackConditionalCacheHit`(v6) @signature `Lh/n0/g/d;.trackConditionalCacheHit:()V` @kind interface;
  #L1feeb4.  v6:= v5.`h.n0.g.a.a` @type ^`h.n0.g.d` @kind object;
  #L1feeb8.  call `update`(v6, v3, v0) @signature `Lh/n0/g/d;.update:(Lh/i0;Lh/i0;)V` @kind interface;
  #L1feebe.  return v0 @kind object;
  #L1feec0.  call temp:= `body`(v3) @signature `Lh/i0;.body:()Lh/j0;` @kind virtual;
  #L1feec6.  v0:= temp @kind object;
  #L1feec8.  call `closeQuietly`(v0) @signature `Lh/n0/e;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1feece.  call temp:= `newBuilder`(v6) @signature `Lh/i0;.newBuilder:()Lh/i0$a;` @kind virtual;
  #L1feed4.  v0:= temp @kind object;
  #L1feed6.  call temp:= `a`(v3) @signature `Lh/n0/g/a;.a:(Lh/i0;)Lh/i0;` @kind static;
  #L1feedc.  v1:= temp @kind object;
  #L1feede.  call temp:= `cacheResponse`(v0, v1) @signature `Lh/i0$a;.cacheResponse:(Lh/i0;)Lh/i0$a;` @kind virtual;
  #L1feee4.  call temp:= `a`(v6) @signature `Lh/n0/g/a;.a:(Lh/i0;)Lh/i0;` @kind static;
  #L1feeea.  v6:= temp @kind object;
  #L1feeec.  call temp:= `networkResponse`(v0, v6) @signature `Lh/i0$a;.networkResponse:(Lh/i0;)Lh/i0$a;` @kind virtual;
  #L1feef2.  call temp:= `build`(v0) @signature `Lh/i0$a;.build:()Lh/i0;` @kind virtual;
  #L1feef8.  v6:= temp @kind object;
  #L1feefa.  v0:= v5.`h.n0.g.a.a` @type ^`h.n0.g.d` @kind object;
  #L1feefe.  if v0 == 0 then goto L1fef4e;
  #L1fef02.  call temp:= `hasBody`(v6) @signature `Lh/n0/h/e;.hasBody:(Lh/i0;)Z` @kind static;
  #L1fef08.  v0:= temp;
  #L1fef0a.  if v0 == 0 then goto L1fef30;
  #L1fef0e.  call temp:= `isCacheable`(v6, v2) @signature `Lh/n0/g/c;.isCacheable:(Lh/i0;Lh/g0;)Z` @kind static;
  #L1fef14.  v0:= temp;
  #L1fef16.  if v0 == 0 then goto L1fef30;
  #L1fef1a.  v0:= v5.`h.n0.g.a.a` @type ^`h.n0.g.d` @kind object;
  #L1fef1e.  call temp:= `put`(v0, v6) @signature `Lh/n0/g/d;.put:(Lh/i0;)Lh/n0/g/b;` @kind interface;
  #L1fef24.  v0:= temp @kind object;
  #L1fef26.  call temp:= `a`(v5, v0, v6) @signature `Lh/n0/g/a;.a:(Lh/n0/g/b;Lh/i0;)Lh/i0;` @kind direct;
  #L1fef2c.  v6:= temp @kind object;
  #L1fef2e.  return v6 @kind object;
  #L1fef30.  call temp:= `method`(v2) @signature `Lh/g0;.method:()Ljava/lang/String;` @kind virtual;
  #L1fef36.  v0:= temp @kind object;
  #L1fef38.  call temp:= `invalidatesCache`(v0) @signature `Lh/n0/h/f;.invalidatesCache:(Ljava/lang/String;)Z` @kind static;
  #L1fef3e.  v0:= temp;
  #L1fef40.  if v0 == 0 then goto L1fef4e;
  #L1fef44.  v0:= v5.`h.n0.g.a.a` @type ^`h.n0.g.d` @kind object;
  #L1fef48.  call `remove`(v0, v2) @signature `Lh/n0/g/d;.remove:(Lh/g0;)V` @kind interface;
  #L1fef4e.  return v6 @kind object;
  #L1fef50.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1fef52.  if v0 == 0 then goto L1fef64;
  #L1fef56.  call temp:= `body`(v0) @signature `Lh/i0;.body:()Lh/j0;` @kind virtual;
  #L1fef5c.  v0:= temp @kind object;
  #L1fef5e.  call `closeQuietly`(v0) @signature `Lh/n0/e;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1fef64.  throw v6;
  catch `java.lang.Throwable` @[L1fee04..L1fee0c] goto L1fef50;
  catch `java.io.IOException` @[L1fef44..L1fef4e] goto L1fef4e;
}
