record `h.n0.g.c$a` @kind class @AccessFlag PUBLIC {
  `long` `h.n0.g.c$a.a` @AccessFlag FINAL;
  `h.g0` `h.n0.g.c$a.b` @AccessFlag FINAL;
  `h.i0` `h.n0.g.c$a.c` @AccessFlag FINAL;
  `java.util.Date` `h.n0.g.c$a.d` @AccessFlag PRIVATE;
  `java.lang.String` `h.n0.g.c$a.e` @AccessFlag PRIVATE;
  `java.util.Date` `h.n0.g.c$a.f` @AccessFlag PRIVATE;
  `java.lang.String` `h.n0.g.c$a.g` @AccessFlag PRIVATE;
  `java.util.Date` `h.n0.g.c$a.h` @AccessFlag PRIVATE;
  `long` `h.n0.g.c$a.i` @AccessFlag PRIVATE;
  `long` `h.n0.g.c$a.j` @AccessFlag PRIVATE;
  `java.lang.String` `h.n0.g.c$a.k` @AccessFlag PRIVATE;
  `int` `h.n0.g.c$a.l` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`h.n0.g.c$a` v3 @kind this, `long` v4 , `h.g0` v6 @kind object, `h.i0` v7 @kind object) @signature `Lh/n0/g/c$a;.<init>:(JLh/g0;Lh/i0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1ff450.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ff456.  v0:= -1I;
  #L1ff458.  v3.`h.n0.g.c$a.l` @type ^`int` := v0;
  #L1ff45c.  v3.`h.n0.g.c$a.a` @type ^`long` := v4 @kind wide;
  #L1ff460.  v3.`h.n0.g.c$a.b` @type ^`h.g0` := v6 @kind object;
  #L1ff464.  v3.`h.n0.g.c$a.c` @type ^`h.i0` := v7 @kind object;
  #L1ff468.  if v7 == 0 then goto L1ff544;
  #L1ff46c.  call temp:= `sentRequestAtMillis`(v7) @signature `Lh/i0;.sentRequestAtMillis:()J` @kind virtual;
  #L1ff472.  v4:= temp @kind wide;
  #L1ff474.  v3.`h.n0.g.c$a.i` @type ^`long` := v4 @kind wide;
  #L1ff478.  call temp:= `receivedResponseAtMillis`(v7) @signature `Lh/i0;.receivedResponseAtMillis:()J` @kind virtual;
  #L1ff47e.  v4:= temp @kind wide;
  #L1ff480.  v3.`h.n0.g.c$a.j` @type ^`long` := v4 @kind wide;
  #L1ff484.  call temp:= `headers`(v7) @signature `Lh/i0;.headers:()Lh/y;` @kind virtual;
  #L1ff48a.  v4:= temp @kind object;
  #L1ff48c.  v5:= 0I;
  #L1ff48e.  call temp:= `size`(v4) @signature `Lh/y;.size:()I` @kind virtual;
  #L1ff494.  v6:= temp;
  #L1ff496.  if v5 >= v6 then goto L1ff544;
  #L1ff49a.  call temp:= `name`(v4, v5) @signature `Lh/y;.name:(I)Ljava/lang/String;` @kind virtual;
  #L1ff4a0.  v7:= temp @kind object;
  #L1ff4a2.  call temp:= `value`(v4, v5) @signature `Lh/y;.value:(I)Ljava/lang/String;` @kind virtual;
  #L1ff4a8.  v1:= temp @kind object;
  #L1ff4aa.  v2:= "Date" @kind object;
  #L1ff4ae.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1ff4b4.  v2:= temp;
  #L1ff4b6.  if v2 == 0 then goto L1ff4cc;
  #L1ff4ba.  call temp:= `parse`(v1) @signature `Lh/n0/h/d;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L1ff4c0.  v7:= temp @kind object;
  #L1ff4c2.  v3.`h.n0.g.c$a.d` @type ^`java.util.Date` := v7 @kind object;
  #L1ff4c6.  v3.`h.n0.g.c$a.e` @type ^`java.lang.String` := v1 @kind object;
  #L1ff4ca.  goto L1ff53e;
  #L1ff4cc.  v2:= "Expires" @kind object;
  #L1ff4d0.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1ff4d6.  v2:= temp;
  #L1ff4d8.  if v2 == 0 then goto L1ff4ea;
  #L1ff4dc.  call temp:= `parse`(v1) @signature `Lh/n0/h/d;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L1ff4e2.  v7:= temp @kind object;
  #L1ff4e4.  v3.`h.n0.g.c$a.h` @type ^`java.util.Date` := v7 @kind object;
  #L1ff4e8.  goto L1ff53e;
  #L1ff4ea.  v2:= "Last-Modified" @kind object;
  #L1ff4ee.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1ff4f4.  v2:= temp;
  #L1ff4f6.  if v2 == 0 then goto L1ff50c;
  #L1ff4fa.  call temp:= `parse`(v1) @signature `Lh/n0/h/d;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L1ff500.  v7:= temp @kind object;
  #L1ff502.  v3.`h.n0.g.c$a.f` @type ^`java.util.Date` := v7 @kind object;
  #L1ff506.  v3.`h.n0.g.c$a.g` @type ^`java.lang.String` := v1 @kind object;
  #L1ff50a.  goto L1ff53e;
  #L1ff50c.  v2:= "ETag" @kind object;
  #L1ff510.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1ff516.  v2:= temp;
  #L1ff518.  if v2 == 0 then goto L1ff522;
  #L1ff51c.  v3.`h.n0.g.c$a.k` @type ^`java.lang.String` := v1 @kind object;
  #L1ff520.  goto L1ff53e;
  #L1ff522.  v2:= "Age" @kind object;
  #L1ff526.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1ff52c.  v7:= temp;
  #L1ff52e.  if v7 == 0 then goto L1ff53e;
  #L1ff532.  call temp:= `parseSeconds`(v1, v0) @signature `Lh/n0/h/e;.parseSeconds:(Ljava/lang/String;I)I` @kind static;
  #L1ff538.  v7:= temp;
  #L1ff53a.  v3.`h.n0.g.c$a.l` @type ^`int` := v7;
  #L1ff53e.  v5:= v5 + 1;
  #L1ff542.  goto L1ff496;
  #L1ff544.  return @kind void;
}
procedure `long` `a`(`h.n0.g.c$a` v9 @kind this) @signature `Lh/n0/g/c$a;.a:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1ff064.  v0:= v9.`h.n0.g.c$a.d` @type ^`java.util.Date` @kind object;
  #L1ff068.  v1:= 0L;
  #L1ff06c.  if v0 == 0 then goto L1ff086;
  #L1ff070.  v3:= v9.`h.n0.g.c$a.j` @type ^`long` @kind wide;
  #L1ff074.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L1ff07a.  v5:= temp @kind wide;
  #L1ff07c.  v3:= v3 - v5 @kind long;
  #L1ff07e.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L1ff084.  v1:= temp @kind wide;
  #L1ff086.  v0:= v9.`h.n0.g.c$a.l` @type ^`int`;
  #L1ff08a.  v3:= -1I;
  #L1ff08c.  if v0 == v3 then goto L1ff0a6;
  #L1ff090.  v3:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1ff094.  v4:= (`long`) v0 @kind i2l;
  #L1ff096.  call temp:= `toMillis`(v3, v4) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L1ff09c.  v3:= temp @kind wide;
  #L1ff09e.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L1ff0a4.  v1:= temp @kind wide;
  #L1ff0a6.  v3:= v9.`h.n0.g.c$a.j` @type ^`long` @kind wide;
  #L1ff0aa.  v5:= v9.`h.n0.g.c$a.i` @type ^`long` @kind wide;
  #L1ff0ae.  v5:= v3 - v5 @kind long;
  #L1ff0b2.  v7:= v9.`h.n0.g.c$a.a` @type ^`long` @kind wide;
  #L1ff0b6.  v7:= v7 - v3 @kind long;
  #L1ff0b8.  v1:= v1 + v5 @kind long;
  #L1ff0ba.  v1:= v1 + v7 @kind long;
  #L1ff0bc.  return v1 @kind wide;
}
procedure `boolean` `a`(`h.g0` v1 @kind object) @signature `Lh/n0/g/c$a;.a:(Lh/g0;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1fefec.  v0:= "If-Modified-Since" @kind object;
  #L1feff0.  call temp:= `header`(v1, v0) @signature `Lh/g0;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1feff6.  v0:= temp @kind object;
  #L1feff8.  if v0 != 0 then goto L1ff012;
  #L1feffc.  v0:= "If-None-Match" @kind object;
  #L1ff000.  call temp:= `header`(v1, v0) @signature `Lh/g0;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1ff006.  v1:= temp @kind object;
  #L1ff008.  if v1 == 0 then goto L1ff00e;
  #L1ff00c.  goto L1ff012;
  #L1ff00e.  v1:= 0I;
  #L1ff010.  goto L1ff014;
  #L1ff012.  v1:= 1I;
  #L1ff014.  return v1;
}
procedure `long` `b`(`h.n0.g.c$a` v7 @kind this) @signature `Lh/n0/g/c$a;.b:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1ff0d0.  v0:= v7.`h.n0.g.c$a.c` @type ^`h.i0` @kind object;
  #L1ff0d4.  call temp:= `cacheControl`(v0) @signature `Lh/i0;.cacheControl:()Lh/i;` @kind virtual;
  #L1ff0da.  v0:= temp @kind object;
  #L1ff0dc.  call temp:= `maxAgeSeconds`(v0) @signature `Lh/i;.maxAgeSeconds:()I` @kind virtual;
  #L1ff0e2.  v1:= temp;
  #L1ff0e4.  v2:= -1I;
  #L1ff0e6.  if v1 == v2 then goto L1ff102;
  #L1ff0ea.  v1:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1ff0ee.  call temp:= `maxAgeSeconds`(v0) @signature `Lh/i;.maxAgeSeconds:()I` @kind virtual;
  #L1ff0f4.  v0:= temp;
  #L1ff0f6.  v2:= (`long`) v0 @kind i2l;
  #L1ff0f8.  call temp:= `toMillis`(v1, v2) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L1ff0fe.  v0:= temp @kind wide;
  #L1ff100.  return v0 @kind wide;
  #L1ff102.  v0:= v7.`h.n0.g.c$a.h` @type ^`java.util.Date` @kind object;
  #L1ff106.  v1:= 0L;
  #L1ff10a.  if v0 == 0 then goto L1ff140;
  #L1ff10e.  v0:= v7.`h.n0.g.c$a.d` @type ^`java.util.Date` @kind object;
  #L1ff112.  if v0 == 0 then goto L1ff120;
  #L1ff116.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L1ff11c.  v3:= temp @kind wide;
  #L1ff11e.  goto L1ff124;
  #L1ff120.  v3:= v7.`h.n0.g.c$a.j` @type ^`long` @kind wide;
  #L1ff124.  v0:= v7.`h.n0.g.c$a.h` @type ^`java.util.Date` @kind object;
  #L1ff128.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L1ff12e.  v5:= temp @kind wide;
  #L1ff130.  v3:= v5 - v3 @kind long;
  #L1ff134.  v0:= lcmp(v3, v1);
  #L1ff138.  if v0 <= 0 then goto L1ff13e;
  #L1ff13c.  v1:= v3 @kind wide;
  #L1ff13e.  return v1 @kind wide;
  #L1ff140.  v0:= v7.`h.n0.g.c$a.f` @type ^`java.util.Date` @kind object;
  #L1ff144.  if v0 == 0 then goto L1ff19c;
  #L1ff148.  v0:= v7.`h.n0.g.c$a.c` @type ^`h.i0` @kind object;
  #L1ff14c.  call temp:= `request`(v0) @signature `Lh/i0;.request:()Lh/g0;` @kind virtual;
  #L1ff152.  v0:= temp @kind object;
  #L1ff154.  call temp:= `url`(v0) @signature `Lh/g0;.url:()Lh/z;` @kind virtual;
  #L1ff15a.  v0:= temp @kind object;
  #L1ff15c.  call temp:= `query`(v0) @signature `Lh/z;.query:()Ljava/lang/String;` @kind virtual;
  #L1ff162.  v0:= temp @kind object;
  #L1ff164.  if v0 != 0 then goto L1ff19c;
  #L1ff168.  v0:= v7.`h.n0.g.c$a.d` @type ^`java.util.Date` @kind object;
  #L1ff16c.  if v0 == 0 then goto L1ff17a;
  #L1ff170.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L1ff176.  v3:= temp @kind wide;
  #L1ff178.  goto L1ff17e;
  #L1ff17a.  v3:= v7.`h.n0.g.c$a.i` @type ^`long` @kind wide;
  #L1ff17e.  v0:= v7.`h.n0.g.c$a.f` @type ^`java.util.Date` @kind object;
  #L1ff182.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L1ff188.  v5:= temp @kind wide;
  #L1ff18a.  v3:= v3 - v5 @kind long;
  #L1ff18c.  v0:= lcmp(v3, v1);
  #L1ff190.  if v0 <= 0 then goto L1ff19c;
  #L1ff194.  v0:= 10L;
  #L1ff198.  v1:= v3 / v0 @kind long;
  #L1ff19c.  return v1 @kind wide;
}
procedure `h.n0.g.c` `c`(`h.n0.g.c$a` v13 @kind this) @signature `Lh/n0/g/c$a;.c:()Lh/n0/g/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L1ff1f8.  v0:= v13.`h.n0.g.c$a.c` @type ^`h.i0` @kind object;
  #L1ff1fc.  v1:= 0I;
  #L1ff1fe.  if v0 != 0 then goto L1ff212;
  #L1ff202.  v0:= new `h.n0.g.c`;
  #L1ff206.  v2:= v13.`h.n0.g.c$a.b` @type ^`h.g0` @kind object;
  #L1ff20a.  call `<init>`(v0, v2, v1) @signature `Lh/n0/g/c;.<init>:(Lh/g0;Lh/i0;)V` @kind direct;
  #L1ff210.  return v0 @kind object;
  #L1ff212.  v0:= v13.`h.n0.g.c$a.b` @type ^`h.g0` @kind object;
  #L1ff216.  call temp:= `isHttps`(v0) @signature `Lh/g0;.isHttps:()Z` @kind virtual;
  #L1ff21c.  v0:= temp;
  #L1ff21e.  if v0 == 0 then goto L1ff242;
  #L1ff222.  v0:= v13.`h.n0.g.c$a.c` @type ^`h.i0` @kind object;
  #L1ff226.  call temp:= `handshake`(v0) @signature `Lh/i0;.handshake:()Lh/x;` @kind virtual;
  #L1ff22c.  v0:= temp @kind object;
  #L1ff22e.  if v0 != 0 then goto L1ff242;
  #L1ff232.  v0:= new `h.n0.g.c`;
  #L1ff236.  v2:= v13.`h.n0.g.c$a.b` @type ^`h.g0` @kind object;
  #L1ff23a.  call `<init>`(v0, v2, v1) @signature `Lh/n0/g/c;.<init>:(Lh/g0;Lh/i0;)V` @kind direct;
  #L1ff240.  return v0 @kind object;
  #L1ff242.  v0:= v13.`h.n0.g.c$a.c` @type ^`h.i0` @kind object;
  #L1ff246.  v2:= v13.`h.n0.g.c$a.b` @type ^`h.g0` @kind object;
  #L1ff24a.  call temp:= `isCacheable`(v0, v2) @signature `Lh/n0/g/c;.isCacheable:(Lh/i0;Lh/g0;)Z` @kind static;
  #L1ff250.  v0:= temp;
  #L1ff252.  if v0 != 0 then goto L1ff266;
  #L1ff256.  v0:= new `h.n0.g.c`;
  #L1ff25a.  v2:= v13.`h.n0.g.c$a.b` @type ^`h.g0` @kind object;
  #L1ff25e.  call `<init>`(v0, v2, v1) @signature `Lh/n0/g/c;.<init>:(Lh/g0;Lh/i0;)V` @kind direct;
  #L1ff264.  return v0 @kind object;
  #L1ff266.  v0:= v13.`h.n0.g.c$a.b` @type ^`h.g0` @kind object;
  #L1ff26a.  call temp:= `cacheControl`(v0) @signature `Lh/g0;.cacheControl:()Lh/i;` @kind virtual;
  #L1ff270.  v0:= temp @kind object;
  #L1ff272.  call temp:= `noCache`(v0) @signature `Lh/i;.noCache:()Z` @kind virtual;
  #L1ff278.  v2:= temp;
  #L1ff27a.  if v2 != 0 then goto L1ff430;
  #L1ff27e.  v2:= v13.`h.n0.g.c$a.b` @type ^`h.g0` @kind object;
  #L1ff282.  call temp:= `a`(v2) @signature `Lh/n0/g/c$a;.a:(Lh/g0;)Z` @kind static;
  #L1ff288.  v2:= temp;
  #L1ff28a.  if v2 == 0 then goto L1ff292;
  #L1ff28e.  goto L1ff430;
  #L1ff292.  v2:= v13.`h.n0.g.c$a.c` @type ^`h.i0` @kind object;
  #L1ff296.  call temp:= `cacheControl`(v2) @signature `Lh/i0;.cacheControl:()Lh/i;` @kind virtual;
  #L1ff29c.  v2:= temp @kind object;
  #L1ff29e.  call temp:= `a`(v13) @signature `Lh/n0/g/c$a;.a:()J` @kind direct;
  #L1ff2a4.  v3:= temp @kind wide;
  #L1ff2a6.  call temp:= `b`(v13) @signature `Lh/n0/g/c$a;.b:()J` @kind direct;
  #L1ff2ac.  v5:= temp @kind wide;
  #L1ff2ae.  call temp:= `maxAgeSeconds`(v0) @signature `Lh/i;.maxAgeSeconds:()I` @kind virtual;
  #L1ff2b4.  v7:= temp;
  #L1ff2b6.  v8:= -1I;
  #L1ff2b8.  if v7 == v8 then goto L1ff2da;
  #L1ff2bc.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1ff2c0.  call temp:= `maxAgeSeconds`(v0) @signature `Lh/i;.maxAgeSeconds:()I` @kind virtual;
  #L1ff2c6.  v9:= temp;
  #L1ff2c8.  v9:= (`long`) v9 @kind i2l;
  #L1ff2ca.  call temp:= `toMillis`(v7, v9) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L1ff2d0.  v9:= temp @kind wide;
  #L1ff2d2.  call temp:= `min`(v5, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L1ff2d8.  v5:= temp @kind wide;
  #L1ff2da.  call temp:= `minFreshSeconds`(v0) @signature `Lh/i;.minFreshSeconds:()I` @kind virtual;
  #L1ff2e0.  v7:= temp;
  #L1ff2e2.  v9:= 0L;
  #L1ff2e6.  if v7 == v8 then goto L1ff302;
  #L1ff2ea.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1ff2ee.  call temp:= `minFreshSeconds`(v0) @signature `Lh/i;.minFreshSeconds:()I` @kind virtual;
  #L1ff2f4.  v11:= temp;
  #L1ff2f6.  v11:= (`long`) v11 @kind i2l;
  #L1ff2f8.  call temp:= `toMillis`(v7, v11) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L1ff2fe.  v11:= temp @kind wide;
  #L1ff300.  goto L1ff304;
  #L1ff302.  v11:= v9 @kind wide;
  #L1ff304.  call temp:= `mustRevalidate`(v2) @signature `Lh/i;.mustRevalidate:()Z` @kind virtual;
  #L1ff30a.  v7:= temp;
  #L1ff30c.  if v7 != 0 then goto L1ff332;
  #L1ff310.  call temp:= `maxStaleSeconds`(v0) @signature `Lh/i;.maxStaleSeconds:()I` @kind virtual;
  #L1ff316.  v7:= temp;
  #L1ff318.  if v7 == v8 then goto L1ff332;
  #L1ff31c.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1ff320.  call temp:= `maxStaleSeconds`(v0) @signature `Lh/i;.maxStaleSeconds:()I` @kind virtual;
  #L1ff326.  v0:= temp;
  #L1ff328.  v8:= (`long`) v0 @kind i2l;
  #L1ff32a.  call temp:= `toMillis`(v7, v8) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L1ff330.  v9:= temp @kind wide;
  #L1ff332.  call temp:= `noCache`(v2) @signature `Lh/i;.noCache:()Z` @kind virtual;
  #L1ff338.  v0:= temp;
  #L1ff33a.  if v0 != 0 then goto L1ff3a4;
  #L1ff33e.  v11:= v11 + v3 @kind long;
  #L1ff340.  v9:= v9 + v5 @kind long;
  #L1ff342.  v0:= lcmp(v11, v9);
  #L1ff346.  if v0 >= 0 then goto L1ff3a4;
  #L1ff34a.  v0:= v13.`h.n0.g.c$a.c` @type ^`h.i0` @kind object;
  #L1ff34e.  call temp:= `newBuilder`(v0) @signature `Lh/i0;.newBuilder:()Lh/i0$a;` @kind virtual;
  #L1ff354.  v0:= temp @kind object;
  #L1ff356.  v2:= "Warning" @kind object;
  #L1ff35a.  v7:= lcmp(v11, v5);
  #L1ff35e.  if v7 < 0 then goto L1ff36c;
  #L1ff362.  v5:= "110 HttpURLConnection \"Response is stale\"" @kind object;
  #L1ff366.  call temp:= `addHeader`(v0, v2, v5) @signature `Lh/i0$a;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lh/i0$a;` @kind virtual;
  #L1ff36c.  v5:= 86400000L;
  #L1ff372.  v7:= lcmp(v3, v5);
  #L1ff376.  if v7 <= 0 then goto L1ff390;
  #L1ff37a.  call temp:= `d`(v13) @signature `Lh/n0/g/c$a;.d:()Z` @kind direct;
  #L1ff380.  v3:= temp;
  #L1ff382.  if v3 == 0 then goto L1ff390;
  #L1ff386.  v3:= "113 HttpURLConnection \"Heuristic expiration\"" @kind object;
  #L1ff38a.  call temp:= `addHeader`(v0, v2, v3) @signature `Lh/i0$a;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lh/i0$a;` @kind virtual;
  #L1ff390.  v2:= new `h.n0.g.c`;
  #L1ff394.  call temp:= `build`(v0) @signature `Lh/i0$a;.build:()Lh/i0;` @kind virtual;
  #L1ff39a.  v0:= temp @kind object;
  #L1ff39c.  call `<init>`(v2, v1, v0) @signature `Lh/n0/g/c;.<init>:(Lh/g0;Lh/i0;)V` @kind direct;
  #L1ff3a2.  return v2 @kind object;
  #L1ff3a4.  v0:= v13.`h.n0.g.c$a.k` @type ^`java.lang.String` @kind object;
  #L1ff3a8.  v2:= "If-Modified-Since" @kind object;
  #L1ff3ac.  if v0 == 0 then goto L1ff3b6;
  #L1ff3b0.  v2:= "If-None-Match" @kind object;
  #L1ff3b4.  goto L1ff3d0;
  #L1ff3b6.  v0:= v13.`h.n0.g.c$a.f` @type ^`java.util.Date` @kind object;
  #L1ff3ba.  if v0 == 0 then goto L1ff3c4;
  #L1ff3be.  v0:= v13.`h.n0.g.c$a.g` @type ^`java.lang.String` @kind object;
  #L1ff3c2.  goto L1ff3d0;
  #L1ff3c4.  v0:= v13.`h.n0.g.c$a.d` @type ^`java.util.Date` @kind object;
  #L1ff3c8.  if v0 == 0 then goto L1ff420;
  #L1ff3cc.  v0:= v13.`h.n0.g.c$a.e` @type ^`java.lang.String` @kind object;
  #L1ff3d0.  v1:= v13.`h.n0.g.c$a.b` @type ^`h.g0` @kind object;
  #L1ff3d4.  call temp:= `headers`(v1) @signature `Lh/g0;.headers:()Lh/y;` @kind virtual;
  #L1ff3da.  v1:= temp @kind object;
  #L1ff3dc.  call temp:= `newBuilder`(v1) @signature `Lh/y;.newBuilder:()Lh/y$a;` @kind virtual;
  #L1ff3e2.  v1:= temp @kind object;
  #L1ff3e4.  v3:= `@@h.n0.c.a` @type ^`h.n0.c` @kind object;
  #L1ff3e8.  call `addLenient`(v3, v1, v2, v0) @signature `Lh/n0/c;.addLenient:(Lh/y$a;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L1ff3ee.  v0:= v13.`h.n0.g.c$a.b` @type ^`h.g0` @kind object;
  #L1ff3f2.  call temp:= `newBuilder`(v0) @signature `Lh/g0;.newBuilder:()Lh/g0$a;` @kind virtual;
  #L1ff3f8.  v0:= temp @kind object;
  #L1ff3fa.  call temp:= `build`(v1) @signature `Lh/y$a;.build:()Lh/y;` @kind virtual;
  #L1ff400.  v1:= temp @kind object;
  #L1ff402.  call temp:= `headers`(v0, v1) @signature `Lh/g0$a;.headers:(Lh/y;)Lh/g0$a;` @kind virtual;
  #L1ff408.  call temp:= `build`(v0) @signature `Lh/g0$a;.build:()Lh/g0;` @kind virtual;
  #L1ff40e.  v0:= temp @kind object;
  #L1ff410.  v1:= new `h.n0.g.c`;
  #L1ff414.  v2:= v13.`h.n0.g.c$a.c` @type ^`h.i0` @kind object;
  #L1ff418.  call `<init>`(v1, v0, v2) @signature `Lh/n0/g/c;.<init>:(Lh/g0;Lh/i0;)V` @kind direct;
  #L1ff41e.  return v1 @kind object;
  #L1ff420.  v0:= new `h.n0.g.c`;
  #L1ff424.  v2:= v13.`h.n0.g.c$a.b` @type ^`h.g0` @kind object;
  #L1ff428.  call `<init>`(v0, v2, v1) @signature `Lh/n0/g/c;.<init>:(Lh/g0;Lh/i0;)V` @kind direct;
  #L1ff42e.  return v0 @kind object;
  #L1ff430.  v0:= new `h.n0.g.c`;
  #L1ff434.  v2:= v13.`h.n0.g.c$a.b` @type ^`h.g0` @kind object;
  #L1ff438.  call `<init>`(v0, v2, v1) @signature `Lh/n0/g/c;.<init>:(Lh/g0;Lh/i0;)V` @kind direct;
  #L1ff43e.  return v0 @kind object;
}
procedure `boolean` `d`(`h.n0.g.c$a` v2 @kind this) @signature `Lh/n0/g/c$a;.d:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1ff028.  v0:= v2.`h.n0.g.c$a.c` @type ^`h.i0` @kind object;
  #L1ff02c.  call temp:= `cacheControl`(v0) @signature `Lh/i0;.cacheControl:()Lh/i;` @kind virtual;
  #L1ff032.  v0:= temp @kind object;
  #L1ff034.  call temp:= `maxAgeSeconds`(v0) @signature `Lh/i;.maxAgeSeconds:()I` @kind virtual;
  #L1ff03a.  v0:= temp;
  #L1ff03c.  v1:= -1I;
  #L1ff03e.  if v0 != v1 then goto L1ff04e;
  #L1ff042.  v0:= v2.`h.n0.g.c$a.h` @type ^`java.util.Date` @kind object;
  #L1ff046.  if v0 != 0 then goto L1ff04e;
  #L1ff04a.  v0:= 1I;
  #L1ff04c.  goto L1ff050;
  #L1ff04e.  v0:= 0I;
  #L1ff050.  return v0;
}
procedure `h.n0.g.c` `get`(`h.n0.g.c$a` v2 @kind this) @signature `Lh/n0/g/c$a;.get:()Lh/n0/g/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ff1b0.  call temp:= `c`(v2) @signature `Lh/n0/g/c$a;.c:()Lh/n0/g/c;` @kind direct;
  #L1ff1b6.  v0:= temp @kind object;
  #L1ff1b8.  v1:= v0.`h.n0.g.c.a` @type ^`h.g0` @kind object;
  #L1ff1bc.  if v1 == 0 then goto L1ff1e4;
  #L1ff1c0.  v1:= v2.`h.n0.g.c$a.b` @type ^`h.g0` @kind object;
  #L1ff1c4.  call temp:= `cacheControl`(v1) @signature `Lh/g0;.cacheControl:()Lh/i;` @kind virtual;
  #L1ff1ca.  v1:= temp @kind object;
  #L1ff1cc.  call temp:= `onlyIfCached`(v1) @signature `Lh/i;.onlyIfCached:()Z` @kind virtual;
  #L1ff1d2.  v1:= temp;
  #L1ff1d4.  if v1 == 0 then goto L1ff1e4;
  #L1ff1d8.  v0:= new `h.n0.g.c`;
  #L1ff1dc.  v1:= 0I;
  #L1ff1de.  call `<init>`(v0, v1, v1) @signature `Lh/n0/g/c;.<init>:(Lh/g0;Lh/i0;)V` @kind direct;
  #L1ff1e4.  return v0 @kind object;
}
