record `h.n0.g.a$a` @kind class @AccessFlag  extends `i.z` @kind interface {
  `boolean` `h.n0.g.a$a.f` @AccessFlag ;
  `i.g` `h.n0.g.a$a.g` @AccessFlag FINAL_SYNTHETIC;
  `h.n0.g.b` `h.n0.g.a$a.h` @AccessFlag FINAL_SYNTHETIC;
  `i.f` `h.n0.g.a$a.i` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`h.n0.g.a$a` v0 @kind this, `h.n0.g.a` v1 @kind object, `i.g` v2 @kind object, `h.n0.g.b` v3 @kind object, `i.f` v4 @kind object) @signature `Lh/n0/g/a$a;.<init>:(Lh/n0/g/a;Li/g;Lh/n0/g/b;Li/f;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1fea50.  v0.`h.n0.g.a$a.g` @type ^`i.g` := v2 @kind object;
  #L1fea54.  v0.`h.n0.g.a$a.h` @type ^`h.n0.g.b` := v3 @kind object;
  #L1fea58.  v0.`h.n0.g.a$a.i` @type ^`i.f` := v4 @kind object;
  #L1fea5c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1fea62.  return @kind void;
}
procedure `void` `close`(`h.n0.g.a$a` v2 @kind this) @signature `Lh/n0/g/a$a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1fea74.  v0:= v2.`h.n0.g.a$a.f` @type ^`boolean` @kind boolean;
  #L1fea78.  if v0 != 0 then goto L1feaa0;
  #L1fea7c.  v0:= 100I;
  #L1fea80.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1fea84.  call temp:= `discard`(v2, v0, v1) @signature `Lh/n0/e;.discard:(Li/z;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L1fea8a.  v0:= temp;
  #L1fea8c.  if v0 != 0 then goto L1feaa0;
  #L1fea90.  v0:= 1I;
  #L1fea92.  v2.`h.n0.g.a$a.f` @type ^`boolean` := v0 @kind boolean;
  #L1fea96.  v0:= v2.`h.n0.g.a$a.h` @type ^`h.n0.g.b` @kind object;
  #L1fea9a.  call `abort`(v0) @signature `Lh/n0/g/b;.abort:()V` @kind interface;
  #L1feaa0.  v0:= v2.`h.n0.g.a$a.g` @type ^`i.g` @kind object;
  #L1feaa4.  call `close`(v0) @signature `Li/z;.close:()V` @kind interface;
  #L1feaaa.  return @kind void;
}
procedure `long` `read`(`h.n0.g.a$a` v8 @kind this, `i.e` v9 @kind object, `long` v10 ) @signature `Lh/n0/g/a$a;.read:(Li/e;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1fe994.  v0:= 1I;
  #L1fe996.  v1:= v8.`h.n0.g.a$a.g` @type ^`i.g` @kind object;
  #L1fe99a.  call temp:= `read`(v1, v9, v10) @signature `Li/z;.read:(Li/e;J)J` @kind interface;
  #L1fe9a0.  v10:= temp @kind wide;
  #L1fe9a2.  v1:= -1L;
  #L1fe9a6.  v3:= lcmp(v10, v1);
  #L1fe9aa.  if v3 != 0 then goto L1fe9c6;
  #L1fe9ae.  v9:= v8.`h.n0.g.a$a.f` @type ^`boolean` @kind boolean;
  #L1fe9b2.  if v9 != 0 then goto L1fe9c4;
  #L1fe9b6.  v8.`h.n0.g.a$a.f` @type ^`boolean` := v0 @kind boolean;
  #L1fe9ba.  v9:= v8.`h.n0.g.a$a.i` @type ^`i.f` @kind object;
  #L1fe9be.  call `close`(v9) @signature `Li/x;.close:()V` @kind interface;
  #L1fe9c4.  return v1 @kind wide;
  #L1fe9c6.  v0:= v8.`h.n0.g.a$a.i` @type ^`i.f` @kind object;
  #L1fe9ca.  call temp:= `buffer`(v0) @signature `Li/f;.buffer:()Li/e;` @kind interface;
  #L1fe9d0.  v3:= temp @kind object;
  #L1fe9d2.  call temp:= `size`(v9) @signature `Li/e;.size:()J` @kind virtual;
  #L1fe9d8.  v0:= temp @kind wide;
  #L1fe9da.  v4:= v0 - v10 @kind long;
  #L1fe9de.  v2:= v9 @kind object;
  #L1fe9e0.  v6:= v10 @kind wide;
  #L1fe9e2.  call temp:= `copyTo`(v2, v3, v4, v6) @signature `Li/e;.copyTo:(Li/e;JJ)Li/e;` @kind virtual;
  #L1fe9e8.  v9:= v8.`h.n0.g.a$a.i` @type ^`i.f` @kind object;
  #L1fe9ec.  call temp:= `emitCompleteSegments`(v9) @signature `Li/f;.emitCompleteSegments:()Li/f;` @kind interface;
  #L1fe9f2.  return v10 @kind wide;
  #L1fe9f4.  v9:= Exception @type ^`java.io.IOException` @kind object;
  #L1fe9f6.  v10:= v8.`h.n0.g.a$a.f` @type ^`boolean` @kind boolean;
  #L1fe9fa.  if v10 != 0 then goto L1fea0c;
  #L1fe9fe.  v8.`h.n0.g.a$a.f` @type ^`boolean` := v0 @kind boolean;
  #L1fea02.  v10:= v8.`h.n0.g.a$a.h` @type ^`h.n0.g.b` @kind object;
  #L1fea06.  call `abort`(v10) @signature `Lh/n0/g/b;.abort:()V` @kind interface;
  #L1fea0c.  throw v9;
  catch `java.io.IOException` @[L1fe996..L1fe9a2] goto L1fe9f4;
}
procedure `i.a0` `timeout`(`h.n0.g.a$a` v1 @kind this) @signature `Lh/n0/g/a$a;.timeout:()Li/a0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fea30.  v0:= v1.`h.n0.g.a$a.g` @type ^`i.g` @kind object;
  #L1fea34.  call temp:= `timeout`(v0) @signature `Li/z;.timeout:()Li/a0;` @kind interface;
  #L1fea3a.  v0:= temp @kind object;
  #L1fea3c.  return v0 @kind object;
}
