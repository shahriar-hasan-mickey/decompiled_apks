record `h.n0.g.d` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `h.i0` `get`(`h.g0` v0 @kind object) @signature `Lh/n0/g/d;.get:(Lh/g0;)Lh/i0;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `h.n0.g.b` `put`(`h.i0` v0 @kind object) @signature `Lh/n0/g/d;.put:(Lh/i0;)Lh/n0/g/b;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `remove`(`h.g0` v0 @kind object) @signature `Lh/n0/g/d;.remove:(Lh/g0;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `trackConditionalCacheHit`() @signature `Lh/n0/g/d;.trackConditionalCacheHit:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `trackResponse`(`h.n0.g.c` v0 @kind object) @signature `Lh/n0/g/d;.trackResponse:(Lh/n0/g/c;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `update`(`h.i0` v0 @kind object, `h.i0` v1 @kind object) @signature `Lh/n0/g/d;.update:(Lh/i0;Lh/i0;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
