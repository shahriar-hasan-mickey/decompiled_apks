record `h.n0.a` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.util.Comparator` @kind interface {
}
global `h.n0.a` `@@h.n0.a.f` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lh/n0/a;.<clinit>:()V` @AccessFlag STATIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L1fd834.  v0:= new `h.n0.a`;
  #L1fd838.  call `<init>`(v0) @signature `Lh/n0/a;.<init>:()V` @kind direct;
  #L1fd83e.  `@@h.n0.a.f` @type ^`h.n0.a` := v0 @kind object;
  #L1fd842.  return @kind void;
}
procedure `void` `<init>`(`h.n0.a` v0 @kind this) @signature `Lh/n0/a;.<init>:()V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1fd854.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1fd85a.  return @kind void;
}
procedure `int` `compare`(`h.n0.a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lh/n0/a;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1fd810.  v1:= (`java.lang.String`) v1 @kind object;
  #L1fd814.  v2:= (`java.lang.String`) v2 @kind object;
  #L1fd818.  call temp:= `compareTo`(v1, v2) @signature `Ljava/lang/String;.compareTo:(Ljava/lang/String;)I` @kind virtual;
  #L1fd81e.  v1:= temp;
  #L1fd820.  return v1;
}
