record `h.n0.d` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Runnable` @kind interface {
  `java.lang.String` `h.n0.d.f` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`h.n0.d` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lh/n0/d;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1fd8c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1fd8ce.  call temp:= `format`(v1, v2) @signature `Lh/n0/e;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1fd8d4.  v1:= temp @kind object;
  #L1fd8d6.  v0.`h.n0.d.f` @type ^`java.lang.String` := v1 @kind object;
  #L1fd8da.  return @kind void;
}
procedure `void` `execute`() @signature `Lh/n0/d;.execute:()V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `run`(`h.n0.d` v3 @kind this) @signature `Lh/n0/d;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1fd8ec.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1fd8f2.  v0:= temp @kind object;
  #L1fd8f4.  call temp:= `getName`(v0) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L1fd8fa.  v0:= temp @kind object;
  #L1fd8fc.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1fd902.  v1:= temp @kind object;
  #L1fd904.  v2:= v3.`h.n0.d.f` @type ^`java.lang.String` @kind object;
  #L1fd908.  call `setName`(v1, v2) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L1fd90e.  call `execute`(v3) @signature `Lh/n0/d;.execute:()V` @kind virtual;
  #L1fd914.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1fd91a.  v1:= temp @kind object;
  #L1fd91c.  call `setName`(v1, v0) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L1fd922.  return @kind void;
  #L1fd924.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1fd926.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1fd92c.  v2:= temp @kind object;
  #L1fd92e.  call `setName`(v2, v0) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L1fd934.  throw v1;
  catch `java.lang.Throwable` @[L1fd90e..L1fd914] goto L1fd924;
}
