record `h.n0.l.d` @kind class @AccessFlag PUBLIC_FINAL extends `javax.net.ssl.HostnameVerifier` @kind interface {
}
global `h.n0.l.d` `@@h.n0.l.d.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lh/n0/l/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L20e408.  v0:= new `h.n0.l.d`;
  #L20e40c.  call `<init>`(v0) @signature `Lh/n0/l/d;.<init>:()V` @kind direct;
  #L20e412.  `@@h.n0.l.d.a` @type ^`h.n0.l.d` := v0 @kind object;
  #L20e416.  return @kind void;
}
procedure `void` `<init>`(`h.n0.l.d` v0 @kind this) @signature `Lh/n0/l/d;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L20e428.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20e42e.  return @kind void;
}
procedure `java.util.List` `a`(`java.security.cert.X509Certificate` v4 @kind object, `int` v5 ) @signature `Lh/n0/l/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20e34c.  v0:= new `java.util.ArrayList`;
  #L20e350.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L20e356.  call temp:= `getSubjectAlternativeNames`(v4) @signature `Ljava/security/cert/X509Certificate;.getSubjectAlternativeNames:()Ljava/util/Collection;` @kind virtual;
  #L20e35c.  v4:= temp @kind object;
  #L20e35e.  if v4 != 0 then goto L20e36c;
  #L20e362.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L20e368.  v4:= temp @kind object;
  #L20e36a.  return v4 @kind object;
  #L20e36c.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L20e372.  v4:= temp @kind object;
  #L20e374.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L20e37a.  v1:= temp;
  #L20e37c.  if v1 == 0 then goto L20e3da;
  #L20e380.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L20e386.  v1:= temp @kind object;
  #L20e388.  v1:= (`java.util.List`) v1 @kind object;
  #L20e38c.  if v1 == 0 then goto L20e374;
  #L20e390.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20e396.  v2:= temp;
  #L20e398.  v3:= 2I;
  #L20e39a.  if v2 >= v3 then goto L20e3a0;
  #L20e39e.  goto L20e374;
  #L20e3a0.  v2:= 0I;
  #L20e3a2.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L20e3a8.  v2:= temp @kind object;
  #L20e3aa.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L20e3ae.  if v2 != 0 then goto L20e3b4;
  #L20e3b2.  goto L20e374;
  #L20e3b4.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L20e3ba.  v2:= temp;
  #L20e3bc.  if v2 != v5 then goto L20e374;
  #L20e3c0.  v2:= 1I;
  #L20e3c2.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L20e3c8.  v1:= temp @kind object;
  #L20e3ca.  v1:= (`java.lang.String`) v1 @kind object;
  #L20e3ce.  if v1 == 0 then goto L20e374;
  #L20e3d2.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L20e3d8.  goto L20e374;
  #L20e3da.  return v0 @kind object;
  #L20e3dc.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L20e3e2.  v4:= temp @kind object;
  #L20e3e4.  return v4 @kind object;
  catch `java.security.cert.CertificateParsingException` @[L20e356..L20e3d8] goto L20e3dc;
}
procedure `boolean` `a`(`h.n0.l.d` v1 @kind this, `java.lang.String` v2 @kind object, `java.security.cert.X509Certificate` v3 @kind object) @signature `Lh/n0/l/d;.a:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L20e250.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L20e254.  call temp:= `toLowerCase`(v2, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L20e25a.  v2:= temp @kind object;
  #L20e25c.  v0:= 2I;
  #L20e25e.  call temp:= `a`(v3, v0) @signature `Lh/n0/l/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L20e264.  v3:= temp @kind object;
  #L20e266.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L20e26c.  v3:= temp @kind object;
  #L20e26e.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L20e274.  v0:= temp;
  #L20e276.  if v0 == 0 then goto L20e296;
  #L20e27a.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L20e280.  v0:= temp @kind object;
  #L20e282.  v0:= (`java.lang.String`) v0 @kind object;
  #L20e286.  call temp:= `verifyHostname`(v1, v2, v0) @signature `Lh/n0/l/d;.verifyHostname:(Ljava/lang/String;Ljava/lang/String;)Z` @kind virtual;
  #L20e28c.  v0:= temp;
  #L20e28e.  if v0 == 0 then goto L20e26e;
  #L20e292.  v2:= 1I;
  #L20e294.  return v2;
  #L20e296.  v2:= 0I;
  #L20e298.  return v2;
}
procedure `java.util.List` `allSubjectAltNames`(`java.security.cert.X509Certificate` v4 @kind object) @signature `Lh/n0/l/d;.allSubjectAltNames:(Ljava/security/cert/X509Certificate;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20e2fc.  v0:= 7I;
  #L20e2fe.  call temp:= `a`(v4, v0) @signature `Lh/n0/l/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L20e304.  v0:= temp @kind object;
  #L20e306.  v1:= 2I;
  #L20e308.  call temp:= `a`(v4, v1) @signature `Lh/n0/l/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L20e30e.  v4:= temp @kind object;
  #L20e310.  v1:= new `java.util.ArrayList`;
  #L20e314.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20e31a.  v2:= temp;
  #L20e31c.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20e322.  v3:= temp;
  #L20e324.  v2:= v2 + v3 @kind int;
  #L20e326.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L20e32c.  call temp:= `addAll`(v1, v0) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L20e332.  call temp:= `addAll`(v1, v4) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L20e338.  return v1 @kind object;
}
procedure `boolean` `b`(`h.n0.l.d` v4 @kind this, `java.lang.String` v5 @kind object, `java.security.cert.X509Certificate` v6 @kind object) @signature `Lh/n0/l/d;.b:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20e2ac.  v0:= 7I;
  #L20e2ae.  call temp:= `a`(v6, v0) @signature `Lh/n0/l/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L20e2b4.  v6:= temp @kind object;
  #L20e2b6.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20e2bc.  v0:= temp;
  #L20e2be.  v1:= 0I;
  #L20e2c0.  v2:= 0I;
  #L20e2c2.  if v2 >= v0 then goto L20e2e8;
  #L20e2c6.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L20e2cc.  v3:= temp @kind object;
  #L20e2ce.  v3:= (`java.lang.String`) v3 @kind object;
  #L20e2d2.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L20e2d8.  v3:= temp;
  #L20e2da.  if v3 == 0 then goto L20e2e2;
  #L20e2de.  v5:= 1I;
  #L20e2e0.  return v5;
  #L20e2e2.  v2:= v2 + 1;
  #L20e2e6.  goto L20e2c2;
  #L20e2e8.  return v1;
}
procedure `boolean` `verify`(`h.n0.l.d` v1 @kind this, `java.lang.String` v2 @kind object, `java.security.cert.X509Certificate` v3 @kind object) @signature `Lh/n0/l/d;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20e064.  call temp:= `verifyAsIpAddress`(v2) @signature `Lh/n0/e;.verifyAsIpAddress:(Ljava/lang/String;)Z` @kind static;
  #L20e06a.  v0:= temp;
  #L20e06c.  if v0 == 0 then goto L20e07a;
  #L20e070.  call temp:= `b`(v1, v2, v3) @signature `Lh/n0/l/d;.b:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L20e076.  v2:= temp;
  #L20e078.  goto L20e082;
  #L20e07a.  call temp:= `a`(v1, v2, v3) @signature `Lh/n0/l/d;.a:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L20e080.  v2:= temp;
  #L20e082.  return v2;
}
procedure `boolean` `verify`(`h.n0.l.d` v1 @kind this, `java.lang.String` v2 @kind object, `javax.net.ssl.SSLSession` v3 @kind object) @signature `Lh/n0/l/d;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20e094.  v0:= 0I;
  #L20e096.  call temp:= `getPeerCertificates`(v3) @signature `Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L20e09c.  v3:= temp @kind object;
  #L20e09e.  v3:= v3[v0] @kind object;
  #L20e0a2.  v3:= (`java.security.cert.X509Certificate`) v3 @kind object;
  #L20e0a6.  call temp:= `verify`(v1, v2, v3) @signature `Lh/n0/l/d;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind virtual;
  #L20e0ac.  v2:= temp;
  #L20e0ae.  return v2;
  #L20e0b0.  return v0;
  catch `javax.net.ssl.SSLException` @[L20e096..L20e0ae] goto L20e0b0;
}
procedure `boolean` `verifyHostname`(`h.n0.l.d` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Lh/n0/l/d;.verifyHostname:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L20e0d4.  v0:= 0I;
  #L20e0d6.  if v8 == 0 then goto L20e23c;
  #L20e0da.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L20e0e0.  v1:= temp;
  #L20e0e2.  if v1 == 0 then goto L20e23c;
  #L20e0e6.  v1:= "." @kind object;
  #L20e0ea.  call temp:= `startsWith`(v8, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L20e0f0.  v2:= temp;
  #L20e0f2.  if v2 != 0 then goto L20e23c;
  #L20e0f6.  v2:= ".." @kind object;
  #L20e0fa.  call temp:= `endsWith`(v8, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L20e100.  v3:= temp;
  #L20e102.  if v3 == 0 then goto L20e10a;
  #L20e106.  goto L20e23c;
  #L20e10a.  if v9 == 0 then goto L20e23c;
  #L20e10e.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L20e114.  v3:= temp;
  #L20e116.  if v3 == 0 then goto L20e23c;
  #L20e11a.  call temp:= `startsWith`(v9, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L20e120.  v3:= temp;
  #L20e122.  if v3 != 0 then goto L20e23c;
  #L20e126.  call temp:= `endsWith`(v9, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L20e12c.  v2:= temp;
  #L20e12e.  if v2 == 0 then goto L20e136;
  #L20e132.  goto L20e23c;
  #L20e136.  call temp:= `endsWith`(v8, v1) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L20e13c.  v2:= temp;
  #L20e13e.  v3:= 46I;
  #L20e142.  if v2 != 0 then goto L20e164;
  #L20e146.  v2:= new `java.lang.StringBuilder`;
  #L20e14a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20e150.  call temp:= `append`(v2, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e156.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e15c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20e162.  v8:= temp @kind object;
  #L20e164.  call temp:= `endsWith`(v9, v1) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L20e16a.  v1:= temp;
  #L20e16c.  if v1 != 0 then goto L20e18e;
  #L20e170.  v1:= new `java.lang.StringBuilder`;
  #L20e174.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20e17a.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e180.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e186.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20e18c.  v9:= temp @kind object;
  #L20e18e.  v1:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L20e192.  call temp:= `toLowerCase`(v9, v1) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L20e198.  v9:= temp @kind object;
  #L20e19a.  v1:= "*" @kind object;
  #L20e19e.  call temp:= `contains`(v9, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L20e1a4.  v1:= temp;
  #L20e1a6.  if v1 != 0 then goto L20e1b4;
  #L20e1aa.  call temp:= `equals`(v8, v9) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L20e1b0.  v8:= temp;
  #L20e1b2.  return v8;
  #L20e1b4.  v1:= "*." @kind object;
  #L20e1b8.  call temp:= `startsWith`(v9, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L20e1be.  v2:= temp;
  #L20e1c0.  if v2 == 0 then goto L20e23c;
  #L20e1c4.  v2:= 42I;
  #L20e1c8.  v4:= 1I;
  #L20e1ca.  call temp:= `indexOf`(v9, v2, v4) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L20e1d0.  v2:= temp;
  #L20e1d2.  v5:= -1I;
  #L20e1d4.  if v2 == v5 then goto L20e1da;
  #L20e1d8.  goto L20e23c;
  #L20e1da.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L20e1e0.  v2:= temp;
  #L20e1e2.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L20e1e8.  v6:= temp;
  #L20e1ea.  if v2 >= v6 then goto L20e1f0;
  #L20e1ee.  return v0;
  #L20e1f0.  call temp:= `equals`(v1, v9) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L20e1f6.  v1:= temp;
  #L20e1f8.  if v1 == 0 then goto L20e1fe;
  #L20e1fc.  return v0;
  #L20e1fe.  call temp:= `substring`(v9, v4) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L20e204.  v9:= temp @kind object;
  #L20e206.  call temp:= `endsWith`(v8, v9) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L20e20c.  v1:= temp;
  #L20e20e.  if v1 != 0 then goto L20e214;
  #L20e212.  return v0;
  #L20e214.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L20e21a.  v1:= temp;
  #L20e21c.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L20e222.  v9:= temp;
  #L20e224.  v1:= v1 - v9 @kind int;
  #L20e226.  if v1 <= 0 then goto L20e23a;
  #L20e22a.  v1:= v1 - v4 @kind int;
  #L20e22c.  call temp:= `lastIndexOf`(v8, v3, v1) @signature `Ljava/lang/String;.lastIndexOf:(II)I` @kind virtual;
  #L20e232.  v8:= temp;
  #L20e234.  if v8 == v5 then goto L20e23a;
  #L20e238.  return v0;
  #L20e23a.  return v4;
  #L20e23c.  return v0;
}
