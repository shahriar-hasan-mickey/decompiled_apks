record `h.n0.l.b` @kind class @AccessFlag PUBLIC_FINAL extends `h.n0.l.e` @kind interface {
  `java.util.Map` `h.n0.l.b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`h.n0.l.b` v6 @kind this, `java.security.cert.X509Certificate`[] v7 @kind object) @signature `Lh/n0/l/b;.<init>:([Ljava/security/cert/X509Certificate;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L20dfb8.  call `<init>`(v6) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20dfbe.  v0:= new `java.util.LinkedHashMap`;
  #L20dfc2.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L20dfc8.  v6.`h.n0.l.b.a` @type ^`java.util.Map` := v0 @kind object;
  #L20dfcc.  v0:= length @variable v7;
  #L20dfce.  v1:= 0I;
  #L20dfd0.  if v1 >= v0 then goto L20e016;
  #L20dfd4.  v2:= v7[v1] @kind object;
  #L20dfd8.  call temp:= `getSubjectX500Principal`(v2) @signature `Ljava/security/cert/X509Certificate;.getSubjectX500Principal:()Ljavax/security/auth/x500/X500Principal;` @kind virtual;
  #L20dfde.  v3:= temp @kind object;
  #L20dfe0.  v4:= v6.`h.n0.l.b.a` @type ^`java.util.Map` @kind object;
  #L20dfe4.  call temp:= `get`(v4, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L20dfea.  v4:= temp @kind object;
  #L20dfec.  v4:= (`java.util.Set`) v4 @kind object;
  #L20dff0.  if v4 != 0 then goto L20e00a;
  #L20dff4.  v4:= new `java.util.LinkedHashSet`;
  #L20dff8.  v5:= 1I;
  #L20dffa.  call `<init>`(v4, v5) @signature `Ljava/util/LinkedHashSet;.<init>:(I)V` @kind direct;
  #L20e000.  v5:= v6.`h.n0.l.b.a` @type ^`java.util.Map` @kind object;
  #L20e004.  call temp:= `put`(v5, v3, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L20e00a.  call temp:= `add`(v4, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L20e010.  v1:= v1 + 1;
  #L20e014.  goto L20dfd0;
  #L20e016.  return @kind void;
}
procedure `boolean` `equals`(`h.n0.l.b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lh/n0/l/b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20dee0.  v0:= 1I;
  #L20dee2.  if v3 != v2 then goto L20dee8;
  #L20dee6.  return v0;
  #L20dee8.  v1:= instanceof @variable v3 @type ^`h.n0.l.b` @kind boolean;
  #L20deec.  if v1 == 0 then goto L20df0a;
  #L20def0.  v3:= (`h.n0.l.b`) v3 @kind object;
  #L20def4.  v3:= v3.`h.n0.l.b.a` @type ^`java.util.Map` @kind object;
  #L20def8.  v1:= v2.`h.n0.l.b.a` @type ^`java.util.Map` @kind object;
  #L20defc.  call temp:= `equals`(v3, v1) @signature `Ljava/util/Map;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L20df02.  v3:= temp;
  #L20df04.  if v3 == 0 then goto L20df0a;
  #L20df08.  goto L20df0c;
  #L20df0a.  v0:= 0I;
  #L20df0c.  return v0;
}
procedure `java.security.cert.X509Certificate` `findByIssuerAndSignature`(`h.n0.l.b` v4 @kind this, `java.security.cert.X509Certificate` v5 @kind object) @signature `Lh/n0/l/b;.findByIssuerAndSignature:(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20df40.  call temp:= `getIssuerX500Principal`(v5) @signature `Ljava/security/cert/X509Certificate;.getIssuerX500Principal:()Ljavax/security/auth/x500/X500Principal;` @kind virtual;
  #L20df46.  v0:= temp @kind object;
  #L20df48.  v1:= v4.`h.n0.l.b.a` @type ^`java.util.Map` @kind object;
  #L20df4c.  call temp:= `get`(v1, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L20df52.  v0:= temp @kind object;
  #L20df54.  v0:= (`java.util.Set`) v0 @kind object;
  #L20df58.  v1:= 0I;
  #L20df5a.  if v0 != 0 then goto L20df60;
  #L20df5e.  return v1 @kind object;
  #L20df60.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L20df66.  v0:= temp @kind object;
  #L20df68.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L20df6e.  v2:= temp;
  #L20df70.  if v2 == 0 then goto L20df94;
  #L20df74.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L20df7a.  v2:= temp @kind object;
  #L20df7c.  v2:= (`java.security.cert.X509Certificate`) v2 @kind object;
  #L20df80.  call temp:= `getPublicKey`(v2) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L20df86.  v3:= temp @kind object;
  #L20df88.  call `verify`(v5, v3) @signature `Ljava/security/cert/X509Certificate;.verify:(Ljava/security/PublicKey;)V` @kind virtual;
  #L20df8e.  return v2 @kind object;
  #L20df90.  
  #L20df92.  goto L20df68;
  #L20df94.  return v1 @kind object;
  catch `java.lang.Exception` @[L20df88..L20df8e] goto L20df90;
}
procedure `int` `hashCode`(`h.n0.l.b` v1 @kind this) @signature `Lh/n0/l/b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20df20.  v0:= v1.`h.n0.l.b.a` @type ^`java.util.Map` @kind object;
  #L20df24.  call temp:= `hashCode`(v0) @signature `Ljava/util/Map;.hashCode:()I` @kind interface;
  #L20df2a.  v0:= temp;
  #L20df2c.  return v0;
}
