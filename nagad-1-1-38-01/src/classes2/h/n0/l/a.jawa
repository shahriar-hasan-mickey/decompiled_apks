record `h.n0.l.a` @kind class @AccessFlag PUBLIC_FINAL extends `h.n0.l.c` @kind class {
  `h.n0.l.e` `h.n0.l.a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`h.n0.l.a` v0 @kind this, `h.n0.l.e` v1 @kind object) @signature `Lh/n0/l/a;.<init>:(Lh/n0/l/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L20dec4.  call `<init>`(v0) @signature `Lh/n0/l/c;.<init>:()V` @kind direct;
  #L20deca.  v0.`h.n0.l.a.a` @type ^`h.n0.l.e` := v1 @kind object;
  #L20dece.  return @kind void;
}
procedure `boolean` `a`(`h.n0.l.a` v2 @kind this, `java.security.cert.X509Certificate` v3 @kind object, `java.security.cert.X509Certificate` v4 @kind object) @signature `Lh/n0/l/a;.a:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L20dd14.  call temp:= `getIssuerDN`(v3) @signature `Ljava/security/cert/X509Certificate;.getIssuerDN:()Ljava/security/Principal;` @kind virtual;
  #L20dd1a.  v0:= temp @kind object;
  #L20dd1c.  call temp:= `getSubjectDN`(v4) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L20dd22.  v1:= temp @kind object;
  #L20dd24.  call temp:= `equals`(v0, v1) @signature `Ljava/security/Principal;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L20dd2a.  v0:= temp;
  #L20dd2c.  v1:= 0I;
  #L20dd2e.  if v0 != 0 then goto L20dd34;
  #L20dd32.  return v1;
  #L20dd34.  call temp:= `getPublicKey`(v4) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L20dd3a.  v4:= temp @kind object;
  #L20dd3c.  call `verify`(v3, v4) @signature `Ljava/security/cert/X509Certificate;.verify:(Ljava/security/PublicKey;)V` @kind virtual;
  #L20dd42.  v3:= 1I;
  #L20dd44.  return v3;
  #L20dd46.  return v1;
  catch `java.security.GeneralSecurityException` @[L20dd34..L20dd42] goto L20dd46;
}
procedure `java.util.List` `clean`(`h.n0.l.a` v6 @kind this, `java.util.List` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lh/n0/l/a;.clean:(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L20dd88.  v8:= new `java.util.ArrayDeque`;
  #L20dd8c.  call `<init>`(v8, v7) @signature `Ljava/util/ArrayDeque;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L20dd92.  v7:= new `java.util.ArrayList`;
  #L20dd96.  call `<init>`(v7) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L20dd9c.  call temp:= `removeFirst`(v8) @signature `Ljava/util/Deque;.removeFirst:()Ljava/lang/Object;` @kind interface;
  #L20dda2.  v0:= temp @kind object;
  #L20dda4.  v0:= (`java.security.cert.Certificate`) v0 @kind object;
  #L20dda8.  call temp:= `add`(v7, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L20ddae.  v0:= 0I;
  #L20ddb0.  v1:= 0I;
  #L20ddb2.  v2:= 9I;
  #L20ddb6.  if v0 >= v2 then goto L20de84;
  #L20ddba.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20ddc0.  v2:= temp;
  #L20ddc2.  v3:= 1I;
  #L20ddc4.  v2:= v2 - v3 @kind int;
  #L20ddc6.  call temp:= `get`(v7, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L20ddcc.  v2:= temp @kind object;
  #L20ddce.  v2:= (`java.security.cert.X509Certificate`) v2 @kind object;
  #L20ddd2.  v4:= v6.`h.n0.l.a.a` @type ^`h.n0.l.e` @kind object;
  #L20ddd6.  call temp:= `findByIssuerAndSignature`(v4, v2) @signature `Lh/n0/l/e;.findByIssuerAndSignature:(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;` @kind interface;
  #L20dddc.  v4:= temp @kind object;
  #L20ddde.  if v4 == 0 then goto L20de12;
  #L20dde2.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L20dde8.  v1:= temp;
  #L20ddea.  if v1 > v3 then goto L20ddfa;
  #L20ddee.  call temp:= `equals`(v2, v4) @signature `Ljava/security/cert/X509Certificate;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L20ddf4.  v1:= temp;
  #L20ddf6.  if v1 != 0 then goto L20de00;
  #L20ddfa.  call temp:= `add`(v7, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L20de00.  call temp:= `a`(v6, v4, v4) @signature `Lh/n0/l/a;.a:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L20de06.  v1:= temp;
  #L20de08.  if v1 == 0 then goto L20de0e;
  #L20de0c.  return v7 @kind object;
  #L20de0e.  v1:= 1I;
  #L20de10.  goto L20de4a;
  #L20de12.  call temp:= `iterator`(v8) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L20de18.  v3:= temp @kind object;
  #L20de1a.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L20de20.  v4:= temp;
  #L20de22.  if v4 == 0 then goto L20de50;
  #L20de26.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L20de2c.  v4:= temp @kind object;
  #L20de2e.  v4:= (`java.security.cert.X509Certificate`) v4 @kind object;
  #L20de32.  call temp:= `a`(v6, v2, v4) @signature `Lh/n0/l/a;.a:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L20de38.  v5:= temp;
  #L20de3a.  if v5 == 0 then goto L20de1a;
  #L20de3e.  call `remove`(v3) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L20de44.  call temp:= `add`(v7, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L20de4a.  v0:= v0 + 1;
  #L20de4e.  goto L20ddb2;
  #L20de50.  if v1 == 0 then goto L20de56;
  #L20de54.  return v7 @kind object;
  #L20de56.  v7:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L20de5a.  v8:= new `java.lang.StringBuilder`;
  #L20de5e.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20de64.  v0:= "Failed to find a trusted cert that signed " @kind object;
  #L20de68.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20de6e.  call temp:= `append`(v8, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20de74.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20de7a.  v8:= temp @kind object;
  #L20de7c.  call `<init>`(v7, v8) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20de82.  throw v7;
  #L20de84.  v8:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L20de88.  v0:= new `java.lang.StringBuilder`;
  #L20de8c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20de92.  v1:= "Certificate chain too long: " @kind object;
  #L20de96.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20de9c.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20dea2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20dea8.  v7:= temp @kind object;
  #L20deaa.  call `<init>`(v8, v7) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20deb0.  throw v8;
}
procedure `boolean` `equals`(`h.n0.l.a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lh/n0/l/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20dcd4.  v0:= 1I;
  #L20dcd6.  if v3 != v2 then goto L20dcdc;
  #L20dcda.  return v0;
  #L20dcdc.  v1:= instanceof @variable v3 @type ^`h.n0.l.a` @kind boolean;
  #L20dce0.  if v1 == 0 then goto L20dcfe;
  #L20dce4.  v3:= (`h.n0.l.a`) v3 @kind object;
  #L20dce8.  v3:= v3.`h.n0.l.a.a` @type ^`h.n0.l.e` @kind object;
  #L20dcec.  v1:= v2.`h.n0.l.a.a` @type ^`h.n0.l.e` @kind object;
  #L20dcf0.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L20dcf6.  v3:= temp;
  #L20dcf8.  if v3 == 0 then goto L20dcfe;
  #L20dcfc.  goto L20dd00;
  #L20dcfe.  v0:= 0I;
  #L20dd00.  return v0;
}
procedure `int` `hashCode`(`h.n0.l.a` v1 @kind this) @signature `Lh/n0/l/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20dd68.  v0:= v1.`h.n0.l.a.a` @type ^`h.n0.l.e` @kind object;
  #L20dd6c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L20dd72.  v0:= temp;
  #L20dd74.  return v0;
}
