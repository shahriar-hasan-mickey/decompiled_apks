record `h.n0.c` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `h.n0.c` `@@h.n0.c.a` @AccessFlag PUBLIC_STATIC;
procedure `void` `<init>`(`h.n0.c` v0 @kind this) @signature `Lh/n0/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1fd8b0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1fd8b6.  return @kind void;
}
procedure `void` `addLenient`(`h.y$a` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lh/n0/c;.addLenient:(Lh/y$a;Ljava/lang/String;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `addLenient`(`h.y$a` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lh/n0/c;.addLenient:(Lh/y$a;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `apply`(`h.p` v0 @kind object, `javax.net.ssl.SSLSocket` v1 @kind object, `boolean` v2 ) @signature `Lh/n0/c;.apply:(Lh/p;Ljavax/net/ssl/SSLSocket;Z)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `code`(`h.i0$a` v0 @kind object) @signature `Lh/n0/c;.code:(Lh/i0$a;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `equalsNonHost`(`h.e` v0 @kind object, `h.e` v1 @kind object) @signature `Lh/n0/c;.equalsNonHost:(Lh/e;Lh/e;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okhttp3.internal.connection.d` `exchange`(`h.i0` v0 @kind object) @signature `Lh/n0/c;.exchange:(Lh/i0;)Lokhttp3/internal/connection/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `initExchange`(`h.i0$a` v0 @kind object, `okhttp3.internal.connection.d` v1 @kind object) @signature `Lh/n0/c;.initExchange:(Lh/i0$a;Lokhttp3/internal/connection/d;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okhttp3.internal.connection.g` `realConnectionPool`(`h.o` v0 @kind object) @signature `Lh/n0/c;.realConnectionPool:(Lh/o;)Lokhttp3/internal/connection/g;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
