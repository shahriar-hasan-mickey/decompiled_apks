record `h.g0$a` @kind class @AccessFlag PUBLIC {
  `h.z` `h.g0$a.a` @AccessFlag ;
  `java.lang.String` `h.g0$a.b` @AccessFlag ;
  `h.y$a` `h.g0$a.c` @AccessFlag ;
  `h.h0` `h.g0$a.d` @AccessFlag ;
  `java.util.Map` `h.g0$a.e` @AccessFlag ;
}
procedure `void` `<init>`(`h.g0$a` v1 @kind this) @signature `Lh/g0$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1fc248.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1fc24e.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L1fc254.  v0:= temp @kind object;
  #L1fc256.  v1.`h.g0$a.e` @type ^`java.util.Map` := v0 @kind object;
  #L1fc25a.  v0:= "GET" @kind object;
  #L1fc25e.  v1.`h.g0$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L1fc262.  v0:= new `h.y$a`;
  #L1fc266.  call `<init>`(v0) @signature `Lh/y$a;.<init>:()V` @kind direct;
  #L1fc26c.  v1.`h.g0$a.c` @type ^`h.y$a` := v0 @kind object;
  #L1fc270.  return @kind void;
}
procedure `void` `<init>`(`h.g0$a` v2 @kind this, `h.g0` v3 @kind object) @signature `Lh/g0$a;.<init>:(Lh/g0;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1fc284.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1fc28a.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L1fc290.  v0:= temp @kind object;
  #L1fc292.  v2.`h.g0$a.e` @type ^`java.util.Map` := v0 @kind object;
  #L1fc296.  v0:= v3.`h.g0.a` @type ^`h.z` @kind object;
  #L1fc29a.  v2.`h.g0$a.a` @type ^`h.z` := v0 @kind object;
  #L1fc29e.  v0:= v3.`h.g0.b` @type ^`java.lang.String` @kind object;
  #L1fc2a2.  v2.`h.g0$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L1fc2a6.  v0:= v3.`h.g0.d` @type ^`h.h0` @kind object;
  #L1fc2aa.  v2.`h.g0$a.d` @type ^`h.h0` := v0 @kind object;
  #L1fc2ae.  v0:= v3.`h.g0.e` @type ^`java.util.Map` @kind object;
  #L1fc2b2.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L1fc2b8.  v0:= temp;
  #L1fc2ba.  if v0 == 0 then goto L1fc2c8;
  #L1fc2be.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L1fc2c4.  v0:= temp @kind object;
  #L1fc2c6.  goto L1fc2d6;
  #L1fc2c8.  v0:= new `java.util.LinkedHashMap`;
  #L1fc2cc.  v1:= v3.`h.g0.e` @type ^`java.util.Map` @kind object;
  #L1fc2d0.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L1fc2d6.  v2.`h.g0$a.e` @type ^`java.util.Map` := v0 @kind object;
  #L1fc2da.  v3:= v3.`h.g0.c` @type ^`h.y` @kind object;
  #L1fc2de.  call temp:= `newBuilder`(v3) @signature `Lh/y;.newBuilder:()Lh/y$a;` @kind virtual;
  #L1fc2e4.  v3:= temp @kind object;
  #L1fc2e6.  v2.`h.g0$a.c` @type ^`h.y$a` := v3 @kind object;
  #L1fc2ea.  return @kind void;
}
procedure `h.g0$a` `addHeader`(`h.g0$a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lh/g0$a;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lh/g0$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fbf4c.  v0:= v1.`h.g0$a.c` @type ^`h.y$a` @kind object;
  #L1fbf50.  call temp:= `add`(v0, v2, v3) @signature `Lh/y$a;.add:(Ljava/lang/String;Ljava/lang/String;)Lh/y$a;` @kind virtual;
  #L1fbf56.  return v1 @kind object;
}
procedure `h.g0` `build`(`h.g0$a` v2 @kind this) @signature `Lh/g0$a;.build:()Lh/g0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1fbf18.  v0:= v2.`h.g0$a.a` @type ^`h.z` @kind object;
  #L1fbf1c.  if v0 == 0 then goto L1fbf2c;
  #L1fbf20.  v0:= new `h.g0`;
  #L1fbf24.  call `<init>`(v0, v2) @signature `Lh/g0;.<init>:(Lh/g0$a;)V` @kind direct;
  #L1fbf2a.  return v0 @kind object;
  #L1fbf2c.  v0:= new `java.lang.IllegalStateException`;
  #L1fbf30.  v1:= "url == null" @kind object;
  #L1fbf34.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fbf3a.  throw v0;
}
procedure `h.g0$a` `cacheControl`(`h.g0$a` v2 @kind this, `h.i` v3 @kind object) @signature `Lh/g0$a;.cacheControl:(Lh/i;)Lh/g0$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1fbf68.  call temp:= `toString`(v3) @signature `Lh/i;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fbf6e.  v3:= temp @kind object;
  #L1fbf70.  call temp:= `isEmpty`(v3) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L1fbf76.  v0:= temp;
  #L1fbf78.  v1:= "Cache-Control" @kind object;
  #L1fbf7c.  if v0 == 0 then goto L1fbf88;
  #L1fbf80.  call temp:= `removeHeader`(v2, v1) @signature `Lh/g0$a;.removeHeader:(Ljava/lang/String;)Lh/g0$a;` @kind virtual;
  #L1fbf86.  return v2 @kind object;
  #L1fbf88.  call temp:= `header`(v2, v1, v3) @signature `Lh/g0$a;.header:(Ljava/lang/String;Ljava/lang/String;)Lh/g0$a;` @kind virtual;
  #L1fbf8e.  return v2 @kind object;
}
procedure `h.g0$a` `header`(`h.g0$a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lh/g0$a;.header:(Ljava/lang/String;Ljava/lang/String;)Lh/g0$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fbfa0.  v0:= v1.`h.g0$a.c` @type ^`h.y$a` @kind object;
  #L1fbfa4.  call temp:= `set`(v0, v2, v3) @signature `Lh/y$a;.set:(Ljava/lang/String;Ljava/lang/String;)Lh/y$a;` @kind virtual;
  #L1fbfaa.  return v1 @kind object;
}
procedure `h.g0$a` `headers`(`h.g0$a` v0 @kind this, `h.y` v1 @kind object) @signature `Lh/g0$a;.headers:(Lh/y;)Lh/g0$a;` @AccessFlag PUBLIC {
    temp;

  #L1fbfbc.  call temp:= `newBuilder`(v1) @signature `Lh/y;.newBuilder:()Lh/y$a;` @kind virtual;
  #L1fbfc2.  v1:= temp @kind object;
  #L1fbfc4.  v0.`h.g0$a.c` @type ^`h.y$a` := v1 @kind object;
  #L1fbfc8.  return v0 @kind object;
}
procedure `h.g0$a` `method`(`h.g0$a` v2 @kind this, `java.lang.String` v3 @kind object, `h.h0` v4 @kind object) @signature `Lh/g0$a;.method:(Ljava/lang/String;Lh/h0;)Lh/g0$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1fbfdc.  if v3 == 0 then goto L1fc096;
  #L1fbfe0.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1fbfe6.  v0:= temp;
  #L1fbfe8.  if v0 == 0 then goto L1fc086;
  #L1fbfec.  v0:= "method " @kind object;
  #L1fbff0.  if v4 == 0 then goto L1fc036;
  #L1fbff4.  call temp:= `permitsRequestBody`(v3) @signature `Lh/n0/h/f;.permitsRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L1fbffa.  v1:= temp;
  #L1fbffc.  if v1 == 0 then goto L1fc002;
  #L1fc000.  goto L1fc036;
  #L1fc002.  v4:= new `java.lang.IllegalArgumentException`;
  #L1fc006.  v1:= new `java.lang.StringBuilder`;
  #L1fc00a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fc010.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fc016.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fc01c.  v3:= " must not have a request body." @kind object;
  #L1fc020.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fc026.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fc02c.  v3:= temp @kind object;
  #L1fc02e.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fc034.  throw v4;
  #L1fc036.  if v4 != 0 then goto L1fc07c;
  #L1fc03a.  call temp:= `requiresRequestBody`(v3) @signature `Lh/n0/h/f;.requiresRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L1fc040.  v1:= temp;
  #L1fc042.  if v1 != 0 then goto L1fc048;
  #L1fc046.  goto L1fc07c;
  #L1fc048.  v4:= new `java.lang.IllegalArgumentException`;
  #L1fc04c.  v1:= new `java.lang.StringBuilder`;
  #L1fc050.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fc056.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fc05c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fc062.  v3:= " must have a request body." @kind object;
  #L1fc066.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fc06c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fc072.  v3:= temp @kind object;
  #L1fc074.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fc07a.  throw v4;
  #L1fc07c.  v2.`h.g0$a.b` @type ^`java.lang.String` := v3 @kind object;
  #L1fc080.  v2.`h.g0$a.d` @type ^`h.h0` := v4 @kind object;
  #L1fc084.  return v2 @kind object;
  #L1fc086.  v3:= new `java.lang.IllegalArgumentException`;
  #L1fc08a.  v4:= "method.length() == 0" @kind object;
  #L1fc08e.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fc094.  throw v3;
  #L1fc096.  v3:= new `java.lang.NullPointerException`;
  #L1fc09a.  v4:= "method == null" @kind object;
  #L1fc09e.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fc0a4.  throw v3;
}
procedure `h.g0$a` `removeHeader`(`h.g0$a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lh/g0$a;.removeHeader:(Ljava/lang/String;)Lh/g0$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fc0b8.  v0:= v1.`h.g0$a.c` @type ^`h.y$a` @kind object;
  #L1fc0bc.  call temp:= `removeAll`(v0, v2) @signature `Lh/y$a;.removeAll:(Ljava/lang/String;)Lh/y$a;` @kind virtual;
  #L1fc0c2.  return v1 @kind object;
}
procedure `h.g0$a` `tag`(`h.g0$a` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lh/g0$a;.tag:(Ljava/lang/Class;Ljava/lang/Object;)Lh/g0$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fc0d4.  if v2 == 0 then goto L1fc11a;
  #L1fc0d8.  if v3 != 0 then goto L1fc0e8;
  #L1fc0dc.  v3:= v1.`h.g0$a.e` @type ^`java.util.Map` @kind object;
  #L1fc0e0.  call temp:= `remove`(v3, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1fc0e6.  goto L1fc118;
  #L1fc0e8.  v0:= v1.`h.g0$a.e` @type ^`java.util.Map` @kind object;
  #L1fc0ec.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L1fc0f2.  v0:= temp;
  #L1fc0f4.  if v0 == 0 then goto L1fc106;
  #L1fc0f8.  v0:= new `java.util.LinkedHashMap`;
  #L1fc0fc.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L1fc102.  v1.`h.g0$a.e` @type ^`java.util.Map` := v0 @kind object;
  #L1fc106.  v0:= v1.`h.g0$a.e` @type ^`java.util.Map` @kind object;
  #L1fc10a.  call temp:= `cast`(v2, v3) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1fc110.  v3:= temp @kind object;
  #L1fc112.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1fc118.  return v1 @kind object;
  #L1fc11a.  v2:= new `java.lang.NullPointerException`;
  #L1fc11e.  v3:= "type == null" @kind object;
  #L1fc122.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fc128.  throw v2;
}
procedure `h.g0$a` `tag`(`h.g0$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lh/g0$a;.tag:(Ljava/lang/Object;)Lh/g0$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fc13c.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L1fc140.  call temp:= `tag`(v1, v0, v2) @signature `Lh/g0$a;.tag:(Ljava/lang/Class;Ljava/lang/Object;)Lh/g0$a;` @kind virtual;
  #L1fc146.  return v1 @kind object;
}
procedure `h.g0$a` `url`(`h.g0$a` v1 @kind this, `h.z` v2 @kind object) @signature `Lh/g0$a;.url:(Lh/z;)Lh/g0$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fc21c.  if v2 == 0 then goto L1fc226;
  #L1fc220.  v1.`h.g0$a.a` @type ^`h.z` := v2 @kind object;
  #L1fc224.  return v1 @kind object;
  #L1fc226.  v2:= new `java.lang.NullPointerException`;
  #L1fc22a.  v0:= "url == null" @kind object;
  #L1fc22e.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fc234.  throw v2;
}
procedure `h.g0$a` `url`(`h.g0$a` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lh/g0$a;.url:(Ljava/lang/String;)Lh/g0$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1fc158.  if v7 == 0 then goto L1fc1fa;
  #L1fc15c.  v1:= 1I;
  #L1fc15e.  v2:= 0I;
  #L1fc160.  v4:= 0I;
  #L1fc162.  v5:= 3I;
  #L1fc164.  v3:= "ws:" @kind object;
  #L1fc168.  v0:= v7 @kind object;
  #L1fc16a.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L1fc170.  v0:= temp;
  #L1fc172.  if v0 == 0 then goto L1fc1a4;
  #L1fc176.  v0:= new `java.lang.StringBuilder`;
  #L1fc17a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fc180.  v1:= "http:" @kind object;
  #L1fc184.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fc18a.  v1:= 3I;
  #L1fc18c.  call temp:= `substring`(v7, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1fc192.  v7:= temp @kind object;
  #L1fc194.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fc19a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fc1a0.  v7:= temp @kind object;
  #L1fc1a2.  goto L1fc1ea;
  #L1fc1a4.  v1:= 1I;
  #L1fc1a6.  v2:= 0I;
  #L1fc1a8.  v4:= 0I;
  #L1fc1aa.  v5:= 4I;
  #L1fc1ac.  v3:= "wss:" @kind object;
  #L1fc1b0.  v0:= v7 @kind object;
  #L1fc1b2.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L1fc1b8.  v0:= temp;
  #L1fc1ba.  if v0 == 0 then goto L1fc1ea;
  #L1fc1be.  v0:= new `java.lang.StringBuilder`;
  #L1fc1c2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fc1c8.  v1:= "https:" @kind object;
  #L1fc1cc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fc1d2.  v1:= 4I;
  #L1fc1d4.  call temp:= `substring`(v7, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1fc1da.  v7:= temp @kind object;
  #L1fc1dc.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fc1e2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fc1e8.  v7:= temp @kind object;
  #L1fc1ea.  call temp:= `get`(v7) @signature `Lh/z;.get:(Ljava/lang/String;)Lh/z;` @kind static;
  #L1fc1f0.  v7:= temp @kind object;
  #L1fc1f2.  call temp:= `url`(v6, v7) @signature `Lh/g0$a;.url:(Lh/z;)Lh/g0$a;` @kind virtual;
  #L1fc1f8.  return v6 @kind object;
  #L1fc1fa.  v7:= new `java.lang.NullPointerException`;
  #L1fc1fe.  v0:= "url == null" @kind object;
  #L1fc202.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fc208.  throw v7;
}
