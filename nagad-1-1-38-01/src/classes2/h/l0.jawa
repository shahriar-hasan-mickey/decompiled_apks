record `h.l0` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `h.l0.f` @AccessFlag FINAL;
}
global `h.l0` `@@h.l0.g` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `h.l0` `@@h.l0.h` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `h.l0` `@@h.l0.i` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `h.l0` `@@h.l0.j` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `h.l0` `@@h.l0.k` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `h.l0`[] `@@h.l0.l` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lh/l0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1fd738.  v0:= new `h.l0`;
  #L1fd73c.  v1:= 0I;
  #L1fd73e.  v2:= "TLS_1_3" @kind object;
  #L1fd742.  v3:= "TLSv1.3" @kind object;
  #L1fd746.  call `<init>`(v0, v2, v1, v3) @signature `Lh/l0;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L1fd74c.  `@@h.l0.g` @type ^`h.l0` := v0 @kind object;
  #L1fd750.  v0:= new `h.l0`;
  #L1fd754.  v2:= 1I;
  #L1fd756.  v3:= "TLS_1_2" @kind object;
  #L1fd75a.  v4:= "TLSv1.2" @kind object;
  #L1fd75e.  call `<init>`(v0, v3, v2, v4) @signature `Lh/l0;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L1fd764.  `@@h.l0.h` @type ^`h.l0` := v0 @kind object;
  #L1fd768.  v0:= new `h.l0`;
  #L1fd76c.  v3:= 2I;
  #L1fd76e.  v4:= "TLS_1_1" @kind object;
  #L1fd772.  v5:= "TLSv1.1" @kind object;
  #L1fd776.  call `<init>`(v0, v4, v3, v5) @signature `Lh/l0;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L1fd77c.  `@@h.l0.i` @type ^`h.l0` := v0 @kind object;
  #L1fd780.  v0:= new `h.l0`;
  #L1fd784.  v4:= 3I;
  #L1fd786.  v5:= "TLS_1_0" @kind object;
  #L1fd78a.  v6:= "TLSv1" @kind object;
  #L1fd78e.  call `<init>`(v0, v5, v4, v6) @signature `Lh/l0;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L1fd794.  `@@h.l0.j` @type ^`h.l0` := v0 @kind object;
  #L1fd798.  v0:= new `h.l0`;
  #L1fd79c.  v5:= 4I;
  #L1fd79e.  v6:= "SSL_3_0" @kind object;
  #L1fd7a2.  v7:= "SSLv3" @kind object;
  #L1fd7a6.  call `<init>`(v0, v6, v5, v7) @signature `Lh/l0;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L1fd7ac.  `@@h.l0.k` @type ^`h.l0` := v0 @kind object;
  #L1fd7b0.  v0:= 5I;
  #L1fd7b2.  v0:= new `h.l0`[v0];
  #L1fd7b6.  v6:= `@@h.l0.g` @type ^`h.l0` @kind object;
  #L1fd7ba.  v0[v1]:= v6 @kind object;
  #L1fd7be.  v1:= `@@h.l0.h` @type ^`h.l0` @kind object;
  #L1fd7c2.  v0[v2]:= v1 @kind object;
  #L1fd7c6.  v1:= `@@h.l0.i` @type ^`h.l0` @kind object;
  #L1fd7ca.  v0[v3]:= v1 @kind object;
  #L1fd7ce.  v1:= `@@h.l0.j` @type ^`h.l0` @kind object;
  #L1fd7d2.  v0[v4]:= v1 @kind object;
  #L1fd7d6.  v1:= `@@h.l0.k` @type ^`h.l0` @kind object;
  #L1fd7da.  v0[v5]:= v1 @kind object;
  #L1fd7de.  `@@h.l0.l` @type ^`h.l0`[] := v0 @kind object;
  #L1fd7e2.  return @kind void;
}
procedure `void` `<init>`(`h.l0` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lh/l0;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1fd7f4.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1fd7fa.  v0.`h.l0.f` @type ^`java.lang.String` := v3 @kind object;
  #L1fd7fe.  return @kind void;
}
procedure `java.util.List` `a`(`java.lang.String`[] v4 @kind object) @signature `Lh/l0;.a:([Ljava/lang/String;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1fd590.  v0:= new `java.util.ArrayList`;
  #L1fd594.  v1:= length @variable v4;
  #L1fd596.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L1fd59c.  v1:= length @variable v4;
  #L1fd59e.  v2:= 0I;
  #L1fd5a0.  if v2 >= v1 then goto L1fd5bc;
  #L1fd5a4.  v3:= v4[v2] @kind object;
  #L1fd5a8.  call temp:= `forJavaName`(v3) @signature `Lh/l0;.forJavaName:(Ljava/lang/String;)Lh/l0;` @kind static;
  #L1fd5ae.  v3:= temp @kind object;
  #L1fd5b0.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1fd5b6.  v2:= v2 + 1;
  #L1fd5ba.  goto L1fd5a0;
  #L1fd5bc.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L1fd5c2.  v4:= temp @kind object;
  #L1fd5c4.  return v4 @kind object;
}
procedure `h.l0` `forJavaName`(`java.lang.String` v6 @kind object) @signature `Lh/l0;.forJavaName:(Ljava/lang/String;)Lh/l0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1fd5d8.  call temp:= `hashCode`(v6) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L1fd5de.  v0:= temp;
  #L1fd5e0.  v1:= 79201641I;
  #L1fd5e6.  v2:= 4I;
  #L1fd5e8.  v3:= 3I;
  #L1fd5ea.  v4:= 2I;
  #L1fd5ec.  v5:= 1I;
  #L1fd5ee.  if v0 == v1 then goto L1fd654;
  #L1fd5f2.  v1:= 79923350I;
  #L1fd5f8.  if v0 == v1 then goto L1fd640;
  #L1fd5fc.  goto L1fd6cc;
  #L1fd602.  goto L1fd668;
  #L1fd604.  v0:= "TLSv1.3" @kind object;
  #L1fd608.  call temp:= `equals`(v6, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1fd60e.  v0:= temp;
  #L1fd610.  if v0 == 0 then goto L1fd668;
  #L1fd614.  v0:= 0I;
  #L1fd616.  goto L1fd66a;
  #L1fd618.  v0:= "TLSv1.2" @kind object;
  #L1fd61c.  call temp:= `equals`(v6, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1fd622.  v0:= temp;
  #L1fd624.  if v0 == 0 then goto L1fd668;
  #L1fd628.  v0:= 1I;
  #L1fd62a.  goto L1fd66a;
  #L1fd62c.  v0:= "TLSv1.1" @kind object;
  #L1fd630.  call temp:= `equals`(v6, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1fd636.  v0:= temp;
  #L1fd638.  if v0 == 0 then goto L1fd668;
  #L1fd63c.  v0:= 2I;
  #L1fd63e.  goto L1fd66a;
  #L1fd640.  v0:= "TLSv1" @kind object;
  #L1fd644.  call temp:= `equals`(v6, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1fd64a.  v0:= temp;
  #L1fd64c.  if v0 == 0 then goto L1fd668;
  #L1fd650.  v0:= 3I;
  #L1fd652.  goto L1fd66a;
  #L1fd654.  v0:= "SSLv3" @kind object;
  #L1fd658.  call temp:= `equals`(v6, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1fd65e.  v0:= temp;
  #L1fd660.  if v0 == 0 then goto L1fd668;
  #L1fd664.  v0:= 4I;
  #L1fd666.  goto L1fd66a;
  #L1fd668.  v0:= -1I;
  #L1fd66a.  if v0 == 0 then goto L1fd6c4;
  #L1fd66e.  if v0 == v5 then goto L1fd6be;
  #L1fd672.  if v0 == v4 then goto L1fd6b8;
  #L1fd676.  if v0 == v3 then goto L1fd6b2;
  #L1fd67a.  if v0 != v2 then goto L1fd684;
  #L1fd67e.  v6:= `@@h.l0.k` @type ^`h.l0` @kind object;
  #L1fd682.  return v6 @kind object;
  #L1fd684.  v0:= new `java.lang.IllegalArgumentException`;
  #L1fd688.  v1:= new `java.lang.StringBuilder`;
  #L1fd68c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fd692.  v2:= "Unexpected TLS version: " @kind object;
  #L1fd696.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fd69c.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fd6a2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fd6a8.  v6:= temp @kind object;
  #L1fd6aa.  call `<init>`(v0, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fd6b0.  throw v0;
  #L1fd6b2.  v6:= `@@h.l0.j` @type ^`h.l0` @kind object;
  #L1fd6b6.  return v6 @kind object;
  #L1fd6b8.  v6:= `@@h.l0.i` @type ^`h.l0` @kind object;
  #L1fd6bc.  return v6 @kind object;
  #L1fd6be.  v6:= `@@h.l0.h` @type ^`h.l0` @kind object;
  #L1fd6c2.  return v6 @kind object;
  #L1fd6c4.  v6:= `@@h.l0.g` @type ^`h.l0` @kind object;
  #L1fd6c8.  return v6 @kind object;
  #L1fd6ca.  
  #L1fd6cc.  switch v0
                  | -503070503 => goto L1fd62c
                  | -503070502 => goto L1fd618
                  | -503070501 => goto L1fd604
                  | else => goto L1fd602;
}
procedure `h.l0` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lh/l0;.valueOf:(Ljava/lang/String;)Lh/l0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1fd6f0.  v0:= constclass @type ^`h.l0` @kind object;
  #L1fd6f4.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L1fd6fa.  v1:= temp @kind object;
  #L1fd6fc.  v1:= (`h.l0`) v1 @kind object;
  #L1fd700.  return v1 @kind object;
}
procedure `h.l0`[] `values`() @signature `Lh/l0;.values:()[Lh/l0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1fd714.  v0:= `@@h.l0.l` @type ^`h.l0`[] @kind object;
  #L1fd718.  call temp:= `clone`(v0) @signature `[Lh/l0;.clone:()Ljava/lang/Object;` @kind virtual;
  #L1fd71e.  v0:= temp @kind object;
  #L1fd720.  v0:= (`h.l0`[]) v0 @kind object;
  #L1fd724.  return v0 @kind object;
}
