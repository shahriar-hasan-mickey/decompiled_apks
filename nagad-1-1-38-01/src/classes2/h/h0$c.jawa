record `h.h0$c` @kind class @AccessFlag  extends `h.h0` @kind class {
  `h.b0` `h.h0$c.a` @AccessFlag FINAL_SYNTHETIC;
  `java.io.File` `h.h0$c.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`h.h0$c` v0 @kind this, `h.b0` v1 @kind object, `java.io.File` v2 @kind object) @signature `Lh/h0$c;.<init>:(Lh/b0;Ljava/io/File;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1fc424.  v0.`h.h0$c.a` @type ^`h.b0` := v1 @kind object;
  #L1fc428.  v0.`h.h0$c.b` @type ^`java.io.File` := v2 @kind object;
  #L1fc42c.  call `<init>`(v0) @signature `Lh/h0;.<init>:()V` @kind direct;
  #L1fc432.  return @kind void;
}
procedure `long` `contentLength`(`h.h0$c` v2 @kind this) @signature `Lh/h0$c;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1fc3ec.  v0:= v2.`h.h0$c.b` @type ^`java.io.File` @kind object;
  #L1fc3f0.  call temp:= `length`(v0) @signature `Ljava/io/File;.length:()J` @kind virtual;
  #L1fc3f6.  v0:= temp @kind wide;
  #L1fc3f8.  return v0 @kind wide;
}
procedure `h.b0` `contentType`(`h.h0$c` v1 @kind this) @signature `Lh/h0$c;.contentType:()Lh/b0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fc40c.  v0:= v1.`h.h0$c.a` @type ^`h.b0` @kind object;
  #L1fc410.  return v0 @kind object;
}
procedure `void` `writeTo`(`h.h0$c` v2 @kind this, `i.f` v3 @kind object) @signature `Lh/h0$c;.writeTo:(Li/f;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1fc444.  v0:= v2.`h.h0$c.b` @type ^`java.io.File` @kind object;
  #L1fc448.  call temp:= `source`(v0) @signature `Li/p;.source:(Ljava/io/File;)Li/z;` @kind static;
  #L1fc44e.  v0:= temp @kind object;
  #L1fc450.  call temp:= `writeAll`(v3, v0) @signature `Li/f;.writeAll:(Li/z;)J` @kind interface;
  #L1fc456.  if v0 == 0 then goto L1fc460;
  #L1fc45a.  call `close`(v0) @signature `Li/z;.close:()V` @kind interface;
  #L1fc460.  return @kind void;
  #L1fc462.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1fc464.  throw v3;
  #L1fc466.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1fc468.  if v0 == 0 then goto L1fc47c;
  #L1fc46c.  call `close`(v0) @signature `Li/z;.close:()V` @kind interface;
  #L1fc472.  goto L1fc47c;
  #L1fc474.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1fc476.  call `addSuppressed`(v3, v0) @signature `Ljava/lang/Throwable;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1fc47c.  throw v1;
  catch `java.lang.Throwable` @[L1fc450..L1fc456] goto L1fc462;
  catch `java.lang.Throwable` @[L1fc464..L1fc466] goto L1fc466;
  catch `java.lang.Throwable` @[L1fc46c..L1fc472] goto L1fc474;
}
