record `h.j0` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.io.Closeable` @kind interface {
  `java.io.Reader` `h.j0.reader` @AccessFlag PRIVATE;
}
procedure `void` `$closeResource`(`java.lang.Throwable` v0 @kind object, `java.lang.AutoCloseable` v1 @kind object) @signature `Lh/j0;.$closeResource:(Ljava/lang/Throwable;Ljava/lang/AutoCloseable;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;

  #L1fd038.  if v0 == 0 then goto L1fd04e;
  #L1fd03c.  call `close`(v1) @signature `Ljava/lang/AutoCloseable;.close:()V` @kind interface;
  #L1fd042.  goto L1fd054;
  #L1fd044.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1fd046.  call `addSuppressed`(v0, v1) @signature `Ljava/lang/Throwable;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1fd04c.  goto L1fd054;
  #L1fd04e.  call `close`(v1) @signature `Ljava/lang/AutoCloseable;.close:()V` @kind interface;
  #L1fd054.  return @kind void;
  catch `java.lang.Throwable` @[L1fd03c..L1fd042] goto L1fd044;
}
procedure `void` `<init>`(`h.j0` v0 @kind this) @signature `Lh/j0;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1fd074.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1fd07a.  return @kind void;
}
procedure `java.nio.charset.Charset` `charset`(`h.j0` v2 @kind this) @signature `Lh/j0;.charset:()Ljava/nio/charset/Charset;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1fcf00.  call temp:= `contentType`(v2) @signature `Lh/j0;.contentType:()Lh/b0;` @kind virtual;
  #L1fcf06.  v0:= temp @kind object;
  #L1fcf08.  if v0 == 0 then goto L1fcf1a;
  #L1fcf0c.  v1:= `@@java.nio.charset.StandardCharsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L1fcf10.  call temp:= `charset`(v0, v1) @signature `Lh/b0;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind virtual;
  #L1fcf16.  v0:= temp @kind object;
  #L1fcf18.  goto L1fcf1e;
  #L1fcf1a.  v0:= `@@java.nio.charset.StandardCharsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L1fcf1e.  return v0 @kind object;
}
procedure `h.j0` `create`(`h.b0` v1 @kind object, `long` v2 , `i.g` v4 @kind object) @signature `Lh/j0;.create:(Lh/b0;JLi/g;)Lh/j0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1fcfd4.  if v4 == 0 then goto L1fcfe4;
  #L1fcfd8.  v0:= new `h.j0$a`;
  #L1fcfdc.  call `<init>`(v0, v1, v2, v4) @signature `Lh/j0$a;.<init>:(Lh/b0;JLi/g;)V` @kind direct;
  #L1fcfe2.  return v0 @kind object;
  #L1fcfe4.  v1:= new `java.lang.NullPointerException`;
  #L1fcfe8.  v2:= "source == null" @kind object;
  #L1fcfec.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fcff2.  throw v1;
}
procedure `h.j0` `create`(`h.b0` v3 @kind object, `i.h` v4 @kind object) @signature `Lh/j0;.create:(Lh/b0;Li/h;)Lh/j0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1fd004.  v0:= new `i.e`;
  #L1fd008.  call `<init>`(v0) @signature `Li/e;.<init>:()V` @kind direct;
  #L1fd00e.  call temp:= `write`(v0, v4) @signature `Li/e;.write:(Li/h;)Li/e;` @kind virtual;
  #L1fd014.  call temp:= `size`(v4) @signature `Li/h;.size:()I` @kind virtual;
  #L1fd01a.  v4:= temp;
  #L1fd01c.  v1:= (`long`) v4 @kind i2l;
  #L1fd01e.  call temp:= `create`(v3, v1, v0) @signature `Lh/j0;.create:(Lh/b0;JLi/g;)Lh/j0;` @kind static;
  #L1fd024.  v3:= temp @kind object;
  #L1fd026.  return v3 @kind object;
}
procedure `h.j0` `create`(`h.b0` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lh/j0;.create:(Lh/b0;Ljava/lang/String;)Lh/j0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1fcf60.  v0:= `@@java.nio.charset.StandardCharsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L1fcf64.  if v4 == 0 then goto L1fcfa2;
  #L1fcf68.  call temp:= `charset`(v4) @signature `Lh/b0;.charset:()Ljava/nio/charset/Charset;` @kind virtual;
  #L1fcf6e.  v0:= temp @kind object;
  #L1fcf70.  if v0 != 0 then goto L1fcfa2;
  #L1fcf74.  v0:= `@@java.nio.charset.StandardCharsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L1fcf78.  v1:= new `java.lang.StringBuilder`;
  #L1fcf7c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fcf82.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fcf88.  v4:= "; charset=utf-8" @kind object;
  #L1fcf8c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fcf92.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fcf98.  v4:= temp @kind object;
  #L1fcf9a.  call temp:= `parse`(v4) @signature `Lh/b0;.parse:(Ljava/lang/String;)Lh/b0;` @kind static;
  #L1fcfa0.  v4:= temp @kind object;
  #L1fcfa2.  v1:= new `i.e`;
  #L1fcfa6.  call `<init>`(v1) @signature `Li/e;.<init>:()V` @kind direct;
  #L1fcfac.  call temp:= `writeString`(v1, v5, v0) @signature `Li/e;.writeString:(Ljava/lang/String;Ljava/nio/charset/Charset;)Li/e;` @kind virtual;
  #L1fcfb2.  call temp:= `size`(v1) @signature `Li/e;.size:()J` @kind virtual;
  #L1fcfb8.  v2:= temp @kind wide;
  #L1fcfba.  call temp:= `create`(v4, v2, v1) @signature `Lh/j0;.create:(Lh/b0;JLi/g;)Lh/j0;` @kind static;
  #L1fcfc0.  v4:= temp @kind object;
  #L1fcfc2.  return v4 @kind object;
}
procedure `h.j0` `create`(`h.b0` v3 @kind object, `byte`[] v4 @kind object) @signature `Lh/j0;.create:(Lh/b0;[B)Lh/j0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1fcf30.  v0:= new `i.e`;
  #L1fcf34.  call `<init>`(v0) @signature `Li/e;.<init>:()V` @kind direct;
  #L1fcf3a.  call temp:= `write`(v0, v4) @signature `Li/e;.write:([B)Li/e;` @kind virtual;
  #L1fcf40.  v4:= length @variable v4;
  #L1fcf42.  v1:= (`long`) v4 @kind i2l;
  #L1fcf44.  call temp:= `create`(v3, v1, v0) @signature `Lh/j0;.create:(Lh/b0;JLi/g;)Lh/j0;` @kind static;
  #L1fcf4a.  v3:= temp @kind object;
  #L1fcf4c.  return v3 @kind object;
}
procedure `java.io.InputStream` `byteStream`(`h.j0` v1 @kind this) @signature `Lh/j0;.byteStream:()Ljava/io/InputStream;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1fce38.  call temp:= `source`(v1) @signature `Lh/j0;.source:()Li/g;` @kind virtual;
  #L1fce3e.  v0:= temp @kind object;
  #L1fce40.  call temp:= `inputStream`(v0) @signature `Li/g;.inputStream:()Ljava/io/InputStream;` @kind interface;
  #L1fce46.  v0:= temp @kind object;
  #L1fce48.  return v0 @kind object;
}
procedure `byte`[] `bytes`(`h.j0` v6 @kind this) @signature `Lh/j0;.bytes:()[B` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1fcd38.  call temp:= `contentLength`(v6) @signature `Lh/j0;.contentLength:()J` @kind virtual;
  #L1fcd3e.  v0:= temp @kind wide;
  #L1fcd40.  v2:= 2147483647L;
  #L1fcd46.  v4:= lcmp(v0, v2);
  #L1fcd4a.  if v4 > 0 then goto L1fcde2;
  #L1fcd4e.  call temp:= `source`(v6) @signature `Lh/j0;.source:()Li/g;` @kind virtual;
  #L1fcd54.  v2:= temp @kind object;
  #L1fcd56.  v3:= 0I;
  #L1fcd58.  call temp:= `readByteArray`(v2) @signature `Li/g;.readByteArray:()[B` @kind interface;
  #L1fcd5e.  v4:= temp @kind object;
  #L1fcd60.  if v2 == 0 then goto L1fcd6a;
  #L1fcd64.  call `$closeResource`(v3, v2) @signature `Lh/j0;.$closeResource:(Ljava/lang/Throwable;Ljava/lang/AutoCloseable;)V` @kind static;
  #L1fcd6a.  v2:= -1L;
  #L1fcd6e.  v5:= lcmp(v0, v2);
  #L1fcd72.  if v5 == 0 then goto L1fcdce;
  #L1fcd76.  v2:= length @variable v4;
  #L1fcd78.  v2:= (`long`) v2 @kind i2l;
  #L1fcd7a.  v5:= lcmp(v0, v2);
  #L1fcd7e.  if v5 != 0 then goto L1fcd84;
  #L1fcd82.  goto L1fcdce;
  #L1fcd84.  v2:= new `java.io.IOException`;
  #L1fcd88.  v3:= new `java.lang.StringBuilder`;
  #L1fcd8c.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fcd92.  v5:= "Content-Length (" @kind object;
  #L1fcd96.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fcd9c.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fcda2.  v0:= ") and stream length (" @kind object;
  #L1fcda6.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fcdac.  v0:= length @variable v4;
  #L1fcdae.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fcdb4.  v0:= ") disagree" @kind object;
  #L1fcdb8.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fcdbe.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fcdc4.  v0:= temp @kind object;
  #L1fcdc6.  call `<init>`(v2, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fcdcc.  throw v2;
  #L1fcdce.  return v4 @kind object;
  #L1fcdd0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1fcdd2.  throw v0;
  #L1fcdd4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1fcdd6.  if v2 == 0 then goto L1fcde0;
  #L1fcdda.  call `$closeResource`(v0, v2) @signature `Lh/j0;.$closeResource:(Ljava/lang/Throwable;Ljava/lang/AutoCloseable;)V` @kind static;
  #L1fcde0.  throw v1;
  #L1fcde2.  v2:= new `java.io.IOException`;
  #L1fcde6.  v3:= new `java.lang.StringBuilder`;
  #L1fcdea.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fcdf0.  v4:= "Cannot buffer entire body for content length: " @kind object;
  #L1fcdf4.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fcdfa.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fce00.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fce06.  v0:= temp @kind object;
  #L1fce08.  call `<init>`(v2, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fce0e.  throw v2;
  catch `java.lang.Throwable` @[L1fcd58..L1fcd60] goto L1fcdd0;
  catch `java.lang.Throwable` @[L1fcdd2..L1fcdd4] goto L1fcdd4;
}
procedure `java.io.Reader` `charStream`(`h.j0` v3 @kind this) @signature `Lh/j0;.charStream:()Ljava/io/Reader;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1fce5c.  v0:= v3.`h.j0.reader` @type ^`java.io.Reader` @kind object;
  #L1fce60.  if v0 == 0 then goto L1fce66;
  #L1fce64.  goto L1fce84;
  #L1fce66.  v0:= new `h.j0$b`;
  #L1fce6a.  call temp:= `source`(v3) @signature `Lh/j0;.source:()Li/g;` @kind virtual;
  #L1fce70.  v1:= temp @kind object;
  #L1fce72.  call temp:= `charset`(v3) @signature `Lh/j0;.charset:()Ljava/nio/charset/Charset;` @kind direct;
  #L1fce78.  v2:= temp @kind object;
  #L1fce7a.  call `<init>`(v0, v1, v2) @signature `Lh/j0$b;.<init>:(Li/g;Ljava/nio/charset/Charset;)V` @kind direct;
  #L1fce80.  v3.`h.j0.reader` @type ^`java.io.Reader` := v0 @kind object;
  #L1fce84.  return v0 @kind object;
}
procedure `void` `close`(`h.j0` v1 @kind this) @signature `Lh/j0;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fd08c.  call temp:= `source`(v1) @signature `Lh/j0;.source:()Li/g;` @kind virtual;
  #L1fd092.  v0:= temp @kind object;
  #L1fd094.  call `closeQuietly`(v0) @signature `Lh/n0/e;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1fd09a.  return @kind void;
}
procedure `long` `contentLength`() @signature `Lh/j0;.contentLength:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `h.b0` `contentType`() @signature `Lh/j0;.contentType:()Lh/b0;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `i.g` `source`() @signature `Lh/j0;.source:()Li/g;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `string`(`h.j0` v3 @kind this) @signature `Lh/j0;.string:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1fce98.  call temp:= `source`(v3) @signature `Lh/j0;.source:()Li/g;` @kind virtual;
  #L1fce9e.  v0:= temp @kind object;
  #L1fcea0.  call temp:= `charset`(v3) @signature `Lh/j0;.charset:()Ljava/nio/charset/Charset;` @kind direct;
  #L1fcea6.  v1:= temp @kind object;
  #L1fcea8.  call temp:= `bomAwareCharset`(v0, v1) @signature `Lh/n0/e;.bomAwareCharset:(Li/g;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind static;
  #L1fceae.  v1:= temp @kind object;
  #L1fceb0.  call temp:= `readString`(v0, v1) @signature `Li/g;.readString:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind interface;
  #L1fceb6.  v1:= temp @kind object;
  #L1fceb8.  if v0 == 0 then goto L1fcec4;
  #L1fcebc.  v2:= 0I;
  #L1fcebe.  call `$closeResource`(v2, v0) @signature `Lh/j0;.$closeResource:(Ljava/lang/Throwable;Ljava/lang/AutoCloseable;)V` @kind static;
  #L1fcec4.  return v1 @kind object;
  #L1fcec6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1fcec8.  throw v1;
  #L1fceca.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1fcecc.  if v0 == 0 then goto L1fced6;
  #L1fced0.  call `$closeResource`(v1, v0) @signature `Lh/j0;.$closeResource:(Ljava/lang/Throwable;Ljava/lang/AutoCloseable;)V` @kind static;
  #L1fced6.  throw v2;
  catch `java.lang.Throwable` @[L1fcea0..L1fceb8] goto L1fcec6;
  catch `java.lang.Throwable` @[L1fcec8..L1fceca] goto L1fceca;
}
