record `h.z$a` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `h.z$a.a` @AccessFlag ;
  `java.lang.String` `h.z$a.b` @AccessFlag ;
  `java.lang.String` `h.z$a.c` @AccessFlag ;
  `java.lang.String` `h.z$a.d` @AccessFlag ;
  `int` `h.z$a.e` @AccessFlag ;
  `java.util.List` `h.z$a.f` @AccessFlag FINAL;
  `java.util.List` `h.z$a.g` @AccessFlag ;
  `java.lang.String` `h.z$a.h` @AccessFlag ;
}
procedure `void` `<init>`(`h.z$a` v2 @kind this) @signature `Lh/z$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1f9368.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f936e.  v0:= "" @kind object;
  #L1f9372.  v2.`h.z$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L1f9376.  v2.`h.z$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L1f937a.  v1:= -1I;
  #L1f937c.  v2.`h.z$a.e` @type ^`int` := v1;
  #L1f9380.  v1:= new `java.util.ArrayList`;
  #L1f9384.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1f938a.  v2.`h.z$a.f` @type ^`java.util.List` := v1 @kind object;
  #L1f938e.  v1:= v2.`h.z$a.f` @type ^`java.util.List` @kind object;
  #L1f9392.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1f9398.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lh/z$a;.a:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1f8970.  v0:= 0I;
  #L1f8972.  call temp:= `a`(v1, v2, v3, v0) @signature `Lh/z;.a:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L1f8978.  v1:= temp @kind object;
  #L1f897a.  call temp:= `canonicalizeHost`(v1) @signature `Lh/n0/e;.canonicalizeHost:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1f8980.  v1:= temp @kind object;
  #L1f8982.  return v1 @kind object;
}
procedure `void` `a`(`h.z$a` v9 @kind this, `java.lang.String` v10 @kind object, `int` v11 , `int` v12 , `boolean` v13 , `boolean` v14 ) @signature `Lh/z$a;.a:(Ljava/lang/String;IIZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1f941c.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L1f9420.  v5:= 0I;
  #L1f9422.  v6:= 0I;
  #L1f9424.  v7:= 1I;
  #L1f9426.  v8:= 0I;
  #L1f9428.  v0:= v10 @kind object;
  #L1f942a.  v1:= v11;
  #L1f942c.  v2:= v12;
  #L1f942e.  v4:= v14;
  #L1f9430.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lh/z;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L1f9436.  v10:= temp @kind object;
  #L1f9438.  call temp:= `a`(v9, v10) @signature `Lh/z$a;.a:(Ljava/lang/String;)Z` @kind direct;
  #L1f943e.  v11:= temp;
  #L1f9440.  if v11 == 0 then goto L1f9446;
  #L1f9444.  return @kind void;
  #L1f9446.  call temp:= `b`(v9, v10) @signature `Lh/z$a;.b:(Ljava/lang/String;)Z` @kind direct;
  #L1f944c.  v11:= temp;
  #L1f944e.  if v11 == 0 then goto L1f945a;
  #L1f9452.  call `c`(v9) @signature `Lh/z$a;.c:()V` @kind direct;
  #L1f9458.  return @kind void;
  #L1f945a.  v11:= v9.`h.z$a.f` @type ^`java.util.List` @kind object;
  #L1f945e.  call temp:= `size`(v11) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1f9464.  v12:= temp;
  #L1f9466.  v12:= v12 + -1;
  #L1f946a.  call temp:= `get`(v11, v12) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1f9470.  v11:= temp @kind object;
  #L1f9472.  v11:= (`java.lang.String`) v11 @kind object;
  #L1f9476.  call temp:= `isEmpty`(v11) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L1f947c.  v11:= temp;
  #L1f947e.  if v11 == 0 then goto L1f949a;
  #L1f9482.  v11:= v9.`h.z$a.f` @type ^`java.util.List` @kind object;
  #L1f9486.  call temp:= `size`(v11) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1f948c.  v12:= temp;
  #L1f948e.  v12:= v12 + -1;
  #L1f9492.  call temp:= `set`(v11, v12, v10) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1f9498.  goto L1f94a4;
  #L1f949a.  v11:= v9.`h.z$a.f` @type ^`java.util.List` @kind object;
  #L1f949e.  call temp:= `add`(v11, v10) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1f94a4.  if v13 == 0 then goto L1f94b6;
  #L1f94a8.  v10:= v9.`h.z$a.f` @type ^`java.util.List` @kind object;
  #L1f94ac.  v11:= "" @kind object;
  #L1f94b0.  call temp:= `add`(v10, v11) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1f94b6.  return @kind void;
}
procedure `boolean` `a`(`h.z$a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lh/z$a;.a:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1f8728.  v0:= "." @kind object;
  #L1f872c.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f8732.  v0:= temp;
  #L1f8734.  if v0 != 0 then goto L1f874e;
  #L1f8738.  v0:= "%2e" @kind object;
  #L1f873c.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1f8742.  v2:= temp;
  #L1f8744.  if v2 == 0 then goto L1f874a;
  #L1f8748.  goto L1f874e;
  #L1f874a.  v2:= 0I;
  #L1f874c.  goto L1f8750;
  #L1f874e.  v2:= 1I;
  #L1f8750.  return v2;
}
procedure `int` `b`(`java.lang.String` v10 @kind object, `int` v11 , `int` v12 ) @signature `Lh/z$a;.b:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1f87ec.  v0:= -1I;
  #L1f87ee.  v4:= "" @kind object;
  #L1f87f2.  v5:= 0I;
  #L1f87f4.  v6:= 0I;
  #L1f87f6.  v7:= 0I;
  #L1f87f8.  v8:= 1I;
  #L1f87fa.  v9:= 0I;
  #L1f87fc.  v1:= v10 @kind object;
  #L1f87fe.  v2:= v11;
  #L1f8800.  v3:= v12;
  #L1f8802.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lh/z;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L1f8808.  v10:= temp @kind object;
  #L1f880a.  call temp:= `parseInt`(v10) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L1f8810.  v10:= temp;
  #L1f8812.  if v10 <= 0 then goto L1f8822;
  #L1f8816.  v11:= 65535I;
  #L1f881c.  if v10 > v11 then goto L1f8822;
  #L1f8820.  return v10;
  #L1f8822.  return v0;
  catch `java.lang.NumberFormatException` @[L1f87ee..L1f8812] goto L1f8822;
}
procedure `boolean` `b`(`h.z$a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lh/z$a;.b:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1f8764.  v0:= ".." @kind object;
  #L1f8768.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f876e.  v0:= temp;
  #L1f8770.  if v0 != 0 then goto L1f87aa;
  #L1f8774.  v0:= "%2e." @kind object;
  #L1f8778.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1f877e.  v0:= temp;
  #L1f8780.  if v0 != 0 then goto L1f87aa;
  #L1f8784.  v0:= ".%2e" @kind object;
  #L1f8788.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1f878e.  v0:= temp;
  #L1f8790.  if v0 != 0 then goto L1f87aa;
  #L1f8794.  v0:= "%2e%2e" @kind object;
  #L1f8798.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1f879e.  v2:= temp;
  #L1f87a0.  if v2 == 0 then goto L1f87a6;
  #L1f87a4.  goto L1f87aa;
  #L1f87a6.  v2:= 0I;
  #L1f87a8.  goto L1f87ac;
  #L1f87aa.  v2:= 1I;
  #L1f87ac.  return v2;
}
procedure `int` `c`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lh/z$a;.c:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1f8844.  if v3 >= v4 then goto L1f8882;
  #L1f8848.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1f884e.  v0:= temp;
  #L1f8850.  v1:= 58I;
  #L1f8854.  if v0 == v1 then goto L1f8880;
  #L1f8858.  v1:= 91I;
  #L1f885c.  if v0 == v1 then goto L1f8862;
  #L1f8860.  goto L1f887a;
  #L1f8862.  v3:= v3 + 1;
  #L1f8866.  if v3 >= v4 then goto L1f887a;
  #L1f886a.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1f8870.  v0:= temp;
  #L1f8872.  v1:= 93I;
  #L1f8876.  if v0 != v1 then goto L1f8862;
  #L1f887a.  v3:= v3 + 1;
  #L1f887e.  goto L1f8844;
  #L1f8880.  return v3;
  #L1f8882.  return v4;
}
procedure `void` `c`(`h.z$a` v3 @kind this) @signature `Lh/z$a;.c:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1f93ac.  v0:= v3.`h.z$a.f` @type ^`java.util.List` @kind object;
  #L1f93b0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1f93b6.  v1:= temp;
  #L1f93b8.  v1:= v1 + -1;
  #L1f93bc.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L1f93c2.  v0:= temp @kind object;
  #L1f93c4.  v0:= (`java.lang.String`) v0 @kind object;
  #L1f93c8.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L1f93ce.  v0:= temp;
  #L1f93d0.  v1:= "" @kind object;
  #L1f93d4.  if v0 == 0 then goto L1f9400;
  #L1f93d8.  v0:= v3.`h.z$a.f` @type ^`java.util.List` @kind object;
  #L1f93dc.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1f93e2.  v0:= temp;
  #L1f93e4.  if v0 != 0 then goto L1f9400;
  #L1f93e8.  v0:= v3.`h.z$a.f` @type ^`java.util.List` @kind object;
  #L1f93ec.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1f93f2.  v2:= temp;
  #L1f93f4.  v2:= v2 + -1;
  #L1f93f8.  call temp:= `set`(v0, v2, v1) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1f93fe.  goto L1f940a;
  #L1f9400.  v0:= v3.`h.z$a.f` @type ^`java.util.List` @kind object;
  #L1f9404.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1f940a.  return @kind void;
}
procedure `void` `d`(`h.z$a` v10 @kind this, `java.lang.String` v11 @kind object, `int` v12 , `int` v13 ) @signature `Lh/z$a;.d:(Ljava/lang/String;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1f94c8.  if v12 != v13 then goto L1f94ce;
  #L1f94cc.  return @kind void;
  #L1f94ce.  call temp:= `charAt`(v11, v12) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1f94d4.  v0:= temp;
  #L1f94d6.  v1:= 47I;
  #L1f94da.  v2:= "" @kind object;
  #L1f94de.  v3:= 1I;
  #L1f94e0.  if v0 == v1 then goto L1f9504;
  #L1f94e4.  v1:= 92I;
  #L1f94e8.  if v0 != v1 then goto L1f94ee;
  #L1f94ec.  goto L1f9504;
  #L1f94ee.  v0:= v10.`h.z$a.f` @type ^`java.util.List` @kind object;
  #L1f94f2.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1f94f8.  v1:= temp;
  #L1f94fa.  v1:= v1 - v3 @kind int;
  #L1f94fc.  call temp:= `set`(v0, v1, v2) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1f9502.  goto L1f951a;
  #L1f9504.  v0:= v10.`h.z$a.f` @type ^`java.util.List` @kind object;
  #L1f9508.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L1f950e.  v0:= v10.`h.z$a.f` @type ^`java.util.List` @kind object;
  #L1f9512.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1f9518.  goto L1f954a;
  #L1f951a.  v6:= v12;
  #L1f951c.  if v6 >= v13 then goto L1f9550;
  #L1f9520.  v12:= "/\\" @kind object;
  #L1f9524.  call temp:= `delimiterOffset`(v11, v6, v13, v12) @signature `Lh/n0/e;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L1f952a.  v12:= temp;
  #L1f952c.  if v12 >= v13 then goto L1f9534;
  #L1f9530.  v0:= 1I;
  #L1f9532.  goto L1f9536;
  #L1f9534.  v0:= 0I;
  #L1f9536.  v9:= 1I;
  #L1f9538.  v4:= v10 @kind object;
  #L1f953a.  v5:= v11 @kind object;
  #L1f953c.  v7:= v12;
  #L1f953e.  v8:= v0;
  #L1f9540.  call `a`(v4, v5, v6, v7, v8, v9) @signature `Lh/z$a;.a:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L1f9546.  if v0 == 0 then goto L1f951a;
  #L1f954a.  v12:= v12 + 1;
  #L1f954e.  goto L1f951a;
  #L1f9550.  return @kind void;
}
procedure `int` `e`(`java.lang.String` v7 @kind object, `int` v8 , `int` v9 ) @signature `Lh/z$a;.e:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1f8894.  v0:= v9 - v8 @kind int;
  #L1f8898.  v1:= -1I;
  #L1f889a.  v2:= 2I;
  #L1f889c.  if v0 >= v2 then goto L1f88a2;
  #L1f88a0.  return v1;
  #L1f88a2.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1f88a8.  v0:= temp;
  #L1f88aa.  v2:= 90I;
  #L1f88ae.  v3:= 122I;
  #L1f88b2.  v4:= 65I;
  #L1f88b6.  v5:= 97I;
  #L1f88ba.  if v0 < v5 then goto L1f88c2;
  #L1f88be.  if v0 <= v3 then goto L1f88cc;
  #L1f88c2.  if v0 < v4 then goto L1f8920;
  #L1f88c6.  if v0 <= v2 then goto L1f88cc;
  #L1f88ca.  goto L1f8920;
  #L1f88cc.  v8:= v8 + 1;
  #L1f88d0.  if v8 >= v9 then goto L1f8920;
  #L1f88d4.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1f88da.  v0:= temp;
  #L1f88dc.  if v0 < v5 then goto L1f88e4;
  #L1f88e0.  if v0 <= v3 then goto L1f88cc;
  #L1f88e4.  if v0 < v4 then goto L1f88ec;
  #L1f88e8.  if v0 <= v2 then goto L1f88cc;
  #L1f88ec.  v6:= 48I;
  #L1f88f0.  if v0 < v6 then goto L1f88fc;
  #L1f88f4.  v6:= 57I;
  #L1f88f8.  if v0 <= v6 then goto L1f88cc;
  #L1f88fc.  v6:= 43I;
  #L1f8900.  if v0 == v6 then goto L1f88cc;
  #L1f8904.  v6:= 45I;
  #L1f8908.  if v0 == v6 then goto L1f88cc;
  #L1f890c.  v6:= 46I;
  #L1f8910.  if v0 != v6 then goto L1f8916;
  #L1f8914.  goto L1f88cc;
  #L1f8916.  v7:= 58I;
  #L1f891a.  if v0 != v7 then goto L1f8920;
  #L1f891e.  return v8;
  #L1f8920.  return v1;
}
procedure `int` `f`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lh/z$a;.f:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1f8934.  v0:= 0I;
  #L1f8936.  if v4 >= v5 then goto L1f895c;
  #L1f893a.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1f8940.  v1:= temp;
  #L1f8942.  v2:= 92I;
  #L1f8946.  if v1 == v2 then goto L1f8952;
  #L1f894a.  v2:= 47I;
  #L1f894e.  if v1 != v2 then goto L1f895c;
  #L1f8952.  v0:= v0 + 1;
  #L1f8956.  v4:= v4 + 1;
  #L1f895a.  goto L1f8936;
  #L1f895c.  return v0;
}
procedure `int` `a`(`h.z$a` v2 @kind this) @signature `Lh/z$a;.a:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1f87c0.  v0:= v2.`h.z$a.e` @type ^`int`;
  #L1f87c4.  v1:= -1I;
  #L1f87c6.  if v0 == v1 then goto L1f87cc;
  #L1f87ca.  goto L1f87d8;
  #L1f87cc.  v0:= v2.`h.z$a.a` @type ^`java.lang.String` @kind object;
  #L1f87d0.  call temp:= `defaultPort`(v0) @signature `Lh/z;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L1f87d6.  v0:= temp;
  #L1f87d8.  return v0;
}
procedure `h.z$a` `a`(`h.z$a` v21 @kind this, `h.z` v22 @kind object, `java.lang.String` v23 @kind object) @signature `Lh/z$a;.a:(Lh/z;Ljava/lang/String;)Lh/z$a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;

  #L1f8cf0.  v0:= v21 @kind object;
  #L1f8cf4.  v1:= v22 @kind object;
  #L1f8cf8.  v10:= v23 @kind object;
  #L1f8cfc.  call temp:= `length`(v23) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1f8d02.  v2:= temp;
  #L1f8d04.  v8:= 0I;
  #L1f8d06.  call temp:= `skipLeadingAsciiWhitespace`(v10, v8, v2) @signature `Lh/n0/e;.skipLeadingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L1f8d0c.  v9:= temp;
  #L1f8d0e.  call temp:= `length`(v23) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1f8d14.  v2:= temp;
  #L1f8d16.  call temp:= `skipTrailingAsciiWhitespace`(v10, v9, v2) @signature `Lh/n0/e;.skipTrailingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L1f8d1c.  v11:= temp;
  #L1f8d1e.  call temp:= `e`(v10, v9, v11) @signature `Lh/z$a;.e:(Ljava/lang/String;II)I` @kind static;
  #L1f8d24.  v12:= temp;
  #L1f8d26.  v13:= -1I;
  #L1f8d28.  if v12 == v13 then goto L1f8dc0;
  #L1f8d2c.  v3:= 1I;
  #L1f8d2e.  v6:= 0I;
  #L1f8d30.  v7:= 6I;
  #L1f8d32.  v5:= "https:" @kind object;
  #L1f8d36.  v2:= v23 @kind object;
  #L1f8d3a.  v4:= v9;
  #L1f8d3c.  call temp:= `regionMatches`(v2, v3, v4, v5, v6, v7) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L1f8d42.  v2:= temp;
  #L1f8d44.  if v2 == 0 then goto L1f8d56;
  #L1f8d48.  v2:= "https" @kind object;
  #L1f8d4c.  v0.`h.z$a.a` @type ^`java.lang.String` := v2 @kind object;
  #L1f8d50.  v9:= v9 + 6;
  #L1f8d54.  goto L1f8dcc;
  #L1f8d56.  v3:= 1I;
  #L1f8d58.  v6:= 0I;
  #L1f8d5a.  v7:= 5I;
  #L1f8d5c.  v5:= "http:" @kind object;
  #L1f8d60.  v2:= v23 @kind object;
  #L1f8d64.  v4:= v9;
  #L1f8d66.  call temp:= `regionMatches`(v2, v3, v4, v5, v6, v7) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L1f8d6c.  v2:= temp;
  #L1f8d6e.  if v2 == 0 then goto L1f8d80;
  #L1f8d72.  v2:= "http" @kind object;
  #L1f8d76.  v0.`h.z$a.a` @type ^`java.lang.String` := v2 @kind object;
  #L1f8d7a.  v9:= v9 + 5;
  #L1f8d7e.  goto L1f8dcc;
  #L1f8d80.  v1:= new `java.lang.IllegalArgumentException`;
  #L1f8d84.  v2:= new `java.lang.StringBuilder`;
  #L1f8d88.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f8d8e.  v3:= "Expected URL scheme 'http' or 'https' but was '" @kind object;
  #L1f8d92.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f8d98.  call temp:= `substring`(v10, v8, v12) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1f8d9e.  v3:= temp @kind object;
  #L1f8da0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f8da6.  v3:= "'" @kind object;
  #L1f8daa.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f8db0.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f8db6.  v2:= temp @kind object;
  #L1f8db8.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f8dbe.  throw v1;
  #L1f8dc0.  if v1 == 0 then goto L1f9128;
  #L1f8dc4.  v2:= v1.`h.z.a` @type ^`java.lang.String` @kind object;
  #L1f8dc8.  v0.`h.z$a.a` @type ^`java.lang.String` := v2 @kind object;
  #L1f8dcc.  call temp:= `f`(v10, v9, v11) @signature `Lh/z$a;.f:(Ljava/lang/String;II)I` @kind static;
  #L1f8dd2.  v2:= temp;
  #L1f8dd4.  v3:= 2I;
  #L1f8dd6.  v12:= 63I;
  #L1f8dda.  v14:= 35I;
  #L1f8dde.  if v2 >= v3 then goto L1f8e62;
  #L1f8de2.  if v1 == 0 then goto L1f8e62;
  #L1f8de6.  v3:= v1.`h.z.a` @type ^`java.lang.String` @kind object;
  #L1f8dea.  v4:= v0.`h.z$a.a` @type ^`java.lang.String` @kind object;
  #L1f8dee.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f8df4.  v3:= temp;
  #L1f8df6.  if v3 != 0 then goto L1f8dfc;
  #L1f8dfa.  goto L1f8e62;
  #L1f8dfc.  call temp:= `encodedUsername`(v22) @signature `Lh/z;.encodedUsername:()Ljava/lang/String;` @kind virtual;
  #L1f8e02.  v2:= temp @kind object;
  #L1f8e04.  v0.`h.z$a.b` @type ^`java.lang.String` := v2 @kind object;
  #L1f8e08.  call temp:= `encodedPassword`(v22) @signature `Lh/z;.encodedPassword:()Ljava/lang/String;` @kind virtual;
  #L1f8e0e.  v2:= temp @kind object;
  #L1f8e10.  v0.`h.z$a.c` @type ^`java.lang.String` := v2 @kind object;
  #L1f8e14.  v2:= v1.`h.z.d` @type ^`java.lang.String` @kind object;
  #L1f8e18.  v0.`h.z$a.d` @type ^`java.lang.String` := v2 @kind object;
  #L1f8e1c.  v2:= v1.`h.z.e` @type ^`int`;
  #L1f8e20.  v0.`h.z$a.e` @type ^`int` := v2;
  #L1f8e24.  v2:= v0.`h.z$a.f` @type ^`java.util.List` @kind object;
  #L1f8e28.  call `clear`(v2) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L1f8e2e.  v2:= v0.`h.z$a.f` @type ^`java.util.List` @kind object;
  #L1f8e32.  call temp:= `encodedPathSegments`(v22) @signature `Lh/z;.encodedPathSegments:()Ljava/util/List;` @kind virtual;
  #L1f8e38.  v3:= temp @kind object;
  #L1f8e3a.  call temp:= `addAll`(v2, v3) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L1f8e40.  if v9 == v11 then goto L1f8e50;
  #L1f8e44.  call temp:= `charAt`(v10, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1f8e4a.  v2:= temp;
  #L1f8e4c.  if v2 != v14 then goto L1f9052;
  #L1f8e50.  call temp:= `encodedQuery`(v22) @signature `Lh/z;.encodedQuery:()Ljava/lang/String;` @kind virtual;
  #L1f8e56.  v1:= temp @kind object;
  #L1f8e58.  call temp:= `encodedQuery`(v0, v1) @signature `Lh/z$a;.encodedQuery:(Ljava/lang/String;)Lh/z$a;` @kind virtual;
  #L1f8e5e.  goto L1f9052;
  #L1f8e62.  v9:= v9 + v2 @kind int;
  #L1f8e64.  v2:= v9;
  #L1f8e66.  v16:= 0I;
  #L1f8e6a.  v17:= 0I;
  #L1f8e6e.  v1:= "@/\\?#" @kind object;
  #L1f8e72.  call temp:= `delimiterOffset`(v10, v2, v11, v1) @signature `Lh/n0/e;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L1f8e78.  v9:= temp;
  #L1f8e7a.  if v9 == v11 then goto L1f8e88;
  #L1f8e7e.  call temp:= `charAt`(v10, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1f8e84.  v1:= temp;
  #L1f8e86.  goto L1f8e8a;
  #L1f8e88.  v1:= -1I;
  #L1f8e8a.  if v1 == v13 then goto L1f8fb8;
  #L1f8e8e.  if v1 == v14 then goto L1f8fb8;
  #L1f8e92.  v3:= 47I;
  #L1f8e96.  if v1 == v3 then goto L1f8fb8;
  #L1f8e9a.  v3:= 92I;
  #L1f8e9e.  if v1 == v3 then goto L1f8fb8;
  #L1f8ea2.  if v1 == v12 then goto L1f8fb8;
  #L1f8ea6.  v3:= 64I;
  #L1f8eaa.  if v1 == v3 then goto L1f8eb2;
  #L1f8eae.  goto L1f8fac;
  #L1f8eb2.  v8:= "%40" @kind object;
  #L1f8eb6.  if v16 != 0 then goto L1f8f5c;
  #L1f8eba.  v1:= 58I;
  #L1f8ebe.  call temp:= `delimiterOffset`(v10, v2, v9, v1) @signature `Lh/n0/e;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L1f8ec4.  v7:= temp;
  #L1f8ec6.  v5:= 1I;
  #L1f8ec8.  v6:= 0I;
  #L1f8eca.  v18:= 0I;
  #L1f8ece.  v19:= 1I;
  #L1f8ed2.  v20:= 0I;
  #L1f8ed6.  v4:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L1f8eda.  v1:= v23 @kind object;
  #L1f8ede.  v3:= v7;
  #L1f8ee0.  v15:= v7;
  #L1f8ee2.  v7:= v18;
  #L1f8ee6.  v14:= v8 @kind object;
  #L1f8ee8.  v8:= v19;
  #L1f8eec.  v12:= v9;
  #L1f8eee.  v9:= v20 @kind object;
  #L1f8ef2.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lh/z;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L1f8ef8.  v1:= temp @kind object;
  #L1f8efa.  if v17 == 0 then goto L1f8f26;
  #L1f8efe.  v2:= new `java.lang.StringBuilder`;
  #L1f8f02.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f8f08.  v3:= v0.`h.z$a.b` @type ^`java.lang.String` @kind object;
  #L1f8f0c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f8f12.  call temp:= `append`(v2, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f8f18.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f8f1e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f8f24.  v1:= temp @kind object;
  #L1f8f26.  v0.`h.z$a.b` @type ^`java.lang.String` := v1 @kind object;
  #L1f8f2a.  if v15 == v12 then goto L1f8f56;
  #L1f8f2e.  v2:= v15 + 1;
  #L1f8f32.  v5:= 1I;
  #L1f8f34.  v6:= 0I;
  #L1f8f36.  v7:= 0I;
  #L1f8f38.  v8:= 1I;
  #L1f8f3a.  v9:= 0I;
  #L1f8f3c.  v4:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L1f8f40.  v1:= v23 @kind object;
  #L1f8f44.  v3:= v12;
  #L1f8f46.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lh/z;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L1f8f4c.  v1:= temp @kind object;
  #L1f8f4e.  v0.`h.z$a.c` @type ^`java.lang.String` := v1 @kind object;
  #L1f8f52.  v16:= 1I;
  #L1f8f56.  v17:= 1I;
  #L1f8f5a.  goto L1f8fa8;
  #L1f8f5c.  v14:= v8 @kind object;
  #L1f8f5e.  v12:= v9;
  #L1f8f60.  v15:= new `java.lang.StringBuilder`;
  #L1f8f64.  call `<init>`(v15) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f8f6a.  v1:= v0.`h.z$a.c` @type ^`java.lang.String` @kind object;
  #L1f8f6e.  call temp:= `append`(v15, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f8f74.  call temp:= `append`(v15, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f8f7a.  v5:= 1I;
  #L1f8f7c.  v6:= 0I;
  #L1f8f7e.  v7:= 0I;
  #L1f8f80.  v8:= 1I;
  #L1f8f82.  v9:= 0I;
  #L1f8f84.  v4:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L1f8f88.  v1:= v23 @kind object;
  #L1f8f8c.  v3:= v12;
  #L1f8f8e.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lh/z;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L1f8f94.  v1:= temp @kind object;
  #L1f8f96.  call temp:= `append`(v15, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f8f9c.  call temp:= `toString`(v15) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f8fa2.  v1:= temp @kind object;
  #L1f8fa4.  v0.`h.z$a.c` @type ^`java.lang.String` := v1 @kind object;
  #L1f8fa8.  v2:= v12 + 1;
  #L1f8fac.  v12:= 63I;
  #L1f8fb0.  v14:= 35I;
  #L1f8fb4.  goto L1f8e6e;
  #L1f8fb8.  v12:= v9;
  #L1f8fba.  call temp:= `c`(v10, v2, v12) @signature `Lh/z$a;.c:(Ljava/lang/String;II)I` @kind static;
  #L1f8fc0.  v1:= temp;
  #L1f8fc2.  v3:= v1 + 1;
  #L1f8fc6.  v4:= 34I;
  #L1f8fca.  if v3 >= v12 then goto L1f902c;
  #L1f8fce.  call temp:= `a`(v10, v2, v1) @signature `Lh/z$a;.a:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L1f8fd4.  v5:= temp @kind object;
  #L1f8fd6.  v0.`h.z$a.d` @type ^`java.lang.String` := v5 @kind object;
  #L1f8fda.  call temp:= `b`(v10, v3, v12) @signature `Lh/z$a;.b:(Ljava/lang/String;II)I` @kind static;
  #L1f8fe0.  v5:= temp;
  #L1f8fe2.  v0.`h.z$a.e` @type ^`int` := v5;
  #L1f8fe6.  v5:= v0.`h.z$a.e` @type ^`int`;
  #L1f8fea.  if v5 == v13 then goto L1f8ff0;
  #L1f8fee.  goto L1f9048;
  #L1f8ff0.  v1:= new `java.lang.IllegalArgumentException`;
  #L1f8ff4.  v2:= new `java.lang.StringBuilder`;
  #L1f8ff8.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f8ffe.  v5:= "Invalid URL port: \"" @kind object;
  #L1f9002.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f9008.  call temp:= `substring`(v10, v3, v12) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1f900e.  v3:= temp @kind object;
  #L1f9010.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f9016.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f901c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f9022.  v2:= temp @kind object;
  #L1f9024.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f902a.  throw v1;
  #L1f902c.  call temp:= `a`(v10, v2, v1) @signature `Lh/z$a;.a:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L1f9032.  v3:= temp @kind object;
  #L1f9034.  v0.`h.z$a.d` @type ^`java.lang.String` := v3 @kind object;
  #L1f9038.  v3:= v0.`h.z$a.a` @type ^`java.lang.String` @kind object;
  #L1f903c.  call temp:= `defaultPort`(v3) @signature `Lh/z;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L1f9042.  v3:= temp;
  #L1f9044.  v0.`h.z$a.e` @type ^`int` := v3;
  #L1f9048.  v3:= v0.`h.z$a.d` @type ^`java.lang.String` @kind object;
  #L1f904c.  if v3 == 0 then goto L1f90ec;
  #L1f9050.  v9:= v12;
  #L1f9052.  v1:= "?#" @kind object;
  #L1f9056.  call temp:= `delimiterOffset`(v10, v9, v11, v1) @signature `Lh/n0/e;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L1f905c.  v1:= temp;
  #L1f905e.  call `d`(v0, v10, v9, v1) @signature `Lh/z$a;.d:(Ljava/lang/String;II)V` @kind direct;
  #L1f9064.  if v1 >= v11 then goto L1f90b2;
  #L1f9068.  call temp:= `charAt`(v10, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1f906e.  v2:= temp;
  #L1f9070.  v3:= 63I;
  #L1f9074.  if v2 != v3 then goto L1f90b2;
  #L1f9078.  v2:= 35I;
  #L1f907c.  call temp:= `delimiterOffset`(v10, v1, v11, v2) @signature `Lh/n0/e;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L1f9082.  v12:= temp;
  #L1f9084.  v2:= v1 + 1;
  #L1f9088.  v5:= 1I;
  #L1f908a.  v6:= 0I;
  #L1f908c.  v7:= 1I;
  #L1f908e.  v8:= 1I;
  #L1f9090.  v9:= 0I;
  #L1f9092.  v4:= " \"'<>#" @kind object;
  #L1f9096.  v1:= v23 @kind object;
  #L1f909a.  v3:= v12;
  #L1f909c.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lh/z;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L1f90a2.  v1:= temp @kind object;
  #L1f90a4.  call temp:= `a`(v1) @signature `Lh/z;.a:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L1f90aa.  v1:= temp @kind object;
  #L1f90ac.  v0.`h.z$a.g` @type ^`java.util.List` := v1 @kind object;
  #L1f90b0.  v1:= v12;
  #L1f90b2.  if v1 >= v11 then goto L1f90ea;
  #L1f90b6.  call temp:= `charAt`(v10, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1f90bc.  v2:= temp;
  #L1f90be.  v3:= 35I;
  #L1f90c2.  if v2 != v3 then goto L1f90ea;
  #L1f90c6.  v2:= 1I;
  #L1f90c8.  v2:= v2 + v1 @kind int;
  #L1f90ca.  v5:= 1I;
  #L1f90cc.  v6:= 0I;
  #L1f90ce.  v7:= 0I;
  #L1f90d0.  v8:= 0I;
  #L1f90d2.  v9:= 0I;
  #L1f90d4.  v4:= "" @kind object;
  #L1f90d8.  v1:= v23 @kind object;
  #L1f90dc.  v3:= v11;
  #L1f90de.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lh/z;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L1f90e4.  v1:= temp @kind object;
  #L1f90e6.  v0.`h.z$a.h` @type ^`java.lang.String` := v1 @kind object;
  #L1f90ea.  return v0 @kind object;
  #L1f90ec.  v3:= new `java.lang.IllegalArgumentException`;
  #L1f90f0.  v5:= new `java.lang.StringBuilder`;
  #L1f90f4.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f90fa.  v6:= "Invalid URL host: \"" @kind object;
  #L1f90fe.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f9104.  call temp:= `substring`(v10, v2, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1f910a.  v1:= temp @kind object;
  #L1f910c.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f9112.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f9118.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f911e.  v1:= temp @kind object;
  #L1f9120.  call `<init>`(v3, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f9126.  throw v3;
  #L1f9128.  v1:= new `java.lang.IllegalArgumentException`;
  #L1f912c.  v2:= "Expected URL scheme 'http' or 'https' but no colon was found" @kind object;
  #L1f9130.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f9136.  throw v1;
}
procedure `h.z$a` `addEncodedQueryParameter`(`h.z$a` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Lh/z$a;.addEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lh/z$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1f8b3c.  if v8 == 0 then goto L1f8ba0;
  #L1f8b40.  v0:= v7.`h.z$a.g` @type ^`java.util.List` @kind object;
  #L1f8b44.  if v0 != 0 then goto L1f8b56;
  #L1f8b48.  v0:= new `java.util.ArrayList`;
  #L1f8b4c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1f8b52.  v7.`h.z$a.g` @type ^`java.util.List` := v0 @kind object;
  #L1f8b56.  v0:= v7.`h.z$a.g` @type ^`java.util.List` @kind object;
  #L1f8b5a.  v3:= 1I;
  #L1f8b5c.  v4:= 0I;
  #L1f8b5e.  v5:= 1I;
  #L1f8b60.  v6:= 1I;
  #L1f8b62.  v2:= " \"'<>#&=" @kind object;
  #L1f8b66.  v1:= v8 @kind object;
  #L1f8b68.  call temp:= `a`(v1, v2, v3, v4, v5, v6) @signature `Lh/z;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L1f8b6e.  v8:= temp @kind object;
  #L1f8b70.  call temp:= `add`(v0, v8) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1f8b76.  v8:= v7.`h.z$a.g` @type ^`java.util.List` @kind object;
  #L1f8b7a.  if v9 == 0 then goto L1f8b96;
  #L1f8b7e.  v2:= 1I;
  #L1f8b80.  v3:= 0I;
  #L1f8b82.  v4:= 1I;
  #L1f8b84.  v5:= 1I;
  #L1f8b86.  v1:= " \"'<>#&=" @kind object;
  #L1f8b8a.  v0:= v9 @kind object;
  #L1f8b8c.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `Lh/z;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L1f8b92.  v9:= temp @kind object;
  #L1f8b94.  goto L1f8b98;
  #L1f8b96.  v9:= 0I;
  #L1f8b98.  call temp:= `add`(v8, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1f8b9e.  return v7 @kind object;
  #L1f8ba0.  v8:= new `java.lang.NullPointerException`;
  #L1f8ba4.  v9:= "encodedName == null" @kind object;
  #L1f8ba8.  call `<init>`(v8, v9) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f8bae.  throw v8;
}
procedure `h.z$a` `addQueryParameter`(`h.z$a` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Lh/z$a;.addQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lh/z$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1f8bc0.  if v8 == 0 then goto L1f8c24;
  #L1f8bc4.  v0:= v7.`h.z$a.g` @type ^`java.util.List` @kind object;
  #L1f8bc8.  if v0 != 0 then goto L1f8bda;
  #L1f8bcc.  v0:= new `java.util.ArrayList`;
  #L1f8bd0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1f8bd6.  v7.`h.z$a.g` @type ^`java.util.List` := v0 @kind object;
  #L1f8bda.  v0:= v7.`h.z$a.g` @type ^`java.util.List` @kind object;
  #L1f8bde.  v3:= 0I;
  #L1f8be0.  v4:= 0I;
  #L1f8be2.  v5:= 1I;
  #L1f8be4.  v6:= 1I;
  #L1f8be6.  v2:= " !\"#$&'(),/:;<=>?@[]\\^`{|}~" @kind object;
  #L1f8bea.  v1:= v8 @kind object;
  #L1f8bec.  call temp:= `a`(v1, v2, v3, v4, v5, v6) @signature `Lh/z;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L1f8bf2.  v8:= temp @kind object;
  #L1f8bf4.  call temp:= `add`(v0, v8) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1f8bfa.  v8:= v7.`h.z$a.g` @type ^`java.util.List` @kind object;
  #L1f8bfe.  if v9 == 0 then goto L1f8c1a;
  #L1f8c02.  v2:= 0I;
  #L1f8c04.  v3:= 0I;
  #L1f8c06.  v4:= 1I;
  #L1f8c08.  v5:= 1I;
  #L1f8c0a.  v1:= " !\"#$&'(),/:;<=>?@[]\\^`{|}~" @kind object;
  #L1f8c0e.  v0:= v9 @kind object;
  #L1f8c10.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `Lh/z;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L1f8c16.  v9:= temp @kind object;
  #L1f8c18.  goto L1f8c1c;
  #L1f8c1a.  v9:= 0I;
  #L1f8c1c.  call temp:= `add`(v8, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1f8c22.  return v7 @kind object;
  #L1f8c24.  v8:= new `java.lang.NullPointerException`;
  #L1f8c28.  v9:= "name == null" @kind object;
  #L1f8c2c.  call `<init>`(v8, v9) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f8c32.  throw v8;
}
procedure `h.z$a` `b`(`h.z$a` v10 @kind this) @signature `Lh/z$a;.b:()Lh/z$a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1f91dc.  v0:= v10.`h.z$a.f` @type ^`java.util.List` @kind object;
  #L1f91e0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1f91e6.  v0:= temp;
  #L1f91e8.  v1:= 0I;
  #L1f91ea.  v2:= 0I;
  #L1f91ec.  if v2 >= v0 then goto L1f9226;
  #L1f91f0.  v3:= v10.`h.z$a.f` @type ^`java.util.List` @kind object;
  #L1f91f4.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1f91fa.  v3:= temp @kind object;
  #L1f91fc.  v4:= v3 @kind object;
  #L1f91fe.  v4:= (`java.lang.String`) v4 @kind object;
  #L1f9202.  v3:= v10.`h.z$a.f` @type ^`java.util.List` @kind object;
  #L1f9206.  v6:= 1I;
  #L1f9208.  v7:= 1I;
  #L1f920a.  v8:= 0I;
  #L1f920c.  v9:= 1I;
  #L1f920e.  v5:= "[]" @kind object;
  #L1f9212.  call temp:= `a`(v4, v5, v6, v7, v8, v9) @signature `Lh/z;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L1f9218.  v4:= temp @kind object;
  #L1f921a.  call temp:= `set`(v3, v2, v4) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1f9220.  v2:= v2 + 1;
  #L1f9224.  goto L1f91ec;
  #L1f9226.  v0:= v10.`h.z$a.g` @type ^`java.util.List` @kind object;
  #L1f922a.  if v0 == 0 then goto L1f9274;
  #L1f922e.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1f9234.  v0:= temp;
  #L1f9236.  if v1 >= v0 then goto L1f9274;
  #L1f923a.  v2:= v10.`h.z$a.g` @type ^`java.util.List` @kind object;
  #L1f923e.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1f9244.  v2:= temp @kind object;
  #L1f9246.  v3:= v2 @kind object;
  #L1f9248.  v3:= (`java.lang.String`) v3 @kind object;
  #L1f924c.  if v3 == 0 then goto L1f926e;
  #L1f9250.  v2:= v10.`h.z$a.g` @type ^`java.util.List` @kind object;
  #L1f9254.  v5:= 1I;
  #L1f9256.  v6:= 1I;
  #L1f9258.  v7:= 1I;
  #L1f925a.  v8:= 1I;
  #L1f925c.  v4:= "\\^`{|}" @kind object;
  #L1f9260.  call temp:= `a`(v3, v4, v5, v6, v7, v8) @signature `Lh/z;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L1f9266.  v3:= temp @kind object;
  #L1f9268.  call temp:= `set`(v2, v1, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1f926e.  v1:= v1 + 1;
  #L1f9272.  goto L1f9236;
  #L1f9274.  v2:= v10.`h.z$a.h` @type ^`java.lang.String` @kind object;
  #L1f9278.  if v2 == 0 then goto L1f9294;
  #L1f927c.  v4:= 1I;
  #L1f927e.  v5:= 1I;
  #L1f9280.  v6:= 0I;
  #L1f9282.  v7:= 0I;
  #L1f9284.  v3:= " \"#<>\\^`{|}" @kind object;
  #L1f9288.  call temp:= `a`(v2, v3, v4, v5, v6, v7) @signature `Lh/z;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L1f928e.  v0:= temp @kind object;
  #L1f9290.  v10.`h.z$a.h` @type ^`java.lang.String` := v0 @kind object;
  #L1f9294.  return v10 @kind object;
}
procedure `h.z` `build`(`h.z$a` v2 @kind this) @signature `Lh/z$a;.build:()Lh/z;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1f8af0.  v0:= v2.`h.z$a.a` @type ^`java.lang.String` @kind object;
  #L1f8af4.  if v0 == 0 then goto L1f8b1c;
  #L1f8af8.  v0:= v2.`h.z$a.d` @type ^`java.lang.String` @kind object;
  #L1f8afc.  if v0 == 0 then goto L1f8b0c;
  #L1f8b00.  v0:= new `h.z`;
  #L1f8b04.  call `<init>`(v0, v2) @signature `Lh/z;.<init>:(Lh/z$a;)V` @kind direct;
  #L1f8b0a.  return v0 @kind object;
  #L1f8b0c.  v0:= new `java.lang.IllegalStateException`;
  #L1f8b10.  v1:= "host == null" @kind object;
  #L1f8b14.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f8b1a.  throw v0;
  #L1f8b1c.  v0:= new `java.lang.IllegalStateException`;
  #L1f8b20.  v1:= "scheme == null" @kind object;
  #L1f8b24.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f8b2a.  throw v0;
}
procedure `h.z$a` `encodedQuery`(`h.z$a` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lh/z$a;.encodedQuery:(Ljava/lang/String;)Lh/z$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1f8c44.  if v7 == 0 then goto L1f8c68;
  #L1f8c48.  v2:= 1I;
  #L1f8c4a.  v3:= 0I;
  #L1f8c4c.  v4:= 1I;
  #L1f8c4e.  v5:= 1I;
  #L1f8c50.  v1:= " \"'<>#" @kind object;
  #L1f8c54.  v0:= v7 @kind object;
  #L1f8c56.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `Lh/z;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L1f8c5c.  v7:= temp @kind object;
  #L1f8c5e.  call temp:= `a`(v7) @signature `Lh/z;.a:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L1f8c64.  v7:= temp @kind object;
  #L1f8c66.  goto L1f8c6a;
  #L1f8c68.  v7:= 0I;
  #L1f8c6a.  v6.`h.z$a.g` @type ^`java.util.List` := v7 @kind object;
  #L1f8c6e.  return v6 @kind object;
}
procedure `h.z$a` `host`(`h.z$a` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lh/z$a;.host:(Ljava/lang/String;)Lh/z$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1f8c80.  if v4 == 0 then goto L1f8cce;
  #L1f8c84.  v0:= 0I;
  #L1f8c86.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1f8c8c.  v1:= temp;
  #L1f8c8e.  call temp:= `a`(v4, v0, v1) @signature `Lh/z$a;.a:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L1f8c94.  v0:= temp @kind object;
  #L1f8c96.  if v0 == 0 then goto L1f8ca0;
  #L1f8c9a.  v3.`h.z$a.d` @type ^`java.lang.String` := v0 @kind object;
  #L1f8c9e.  return v3 @kind object;
  #L1f8ca0.  v0:= new `java.lang.IllegalArgumentException`;
  #L1f8ca4.  v1:= new `java.lang.StringBuilder`;
  #L1f8ca8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f8cae.  v2:= "unexpected host: " @kind object;
  #L1f8cb2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f8cb8.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f8cbe.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f8cc4.  v4:= temp @kind object;
  #L1f8cc6.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f8ccc.  throw v0;
  #L1f8cce.  v4:= new `java.lang.NullPointerException`;
  #L1f8cd2.  v0:= "host == null" @kind object;
  #L1f8cd6.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f8cdc.  throw v4;
}
procedure `h.z$a` `password`(`h.z$a` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lh/z$a;.password:(Ljava/lang/String;)Lh/z$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1f9148.  if v7 == 0 then goto L1f9168;
  #L1f914c.  v2:= 0I;
  #L1f914e.  v3:= 0I;
  #L1f9150.  v4:= 0I;
  #L1f9152.  v5:= 1I;
  #L1f9154.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L1f9158.  v0:= v7 @kind object;
  #L1f915a.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `Lh/z;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L1f9160.  v7:= temp @kind object;
  #L1f9162.  v6.`h.z$a.c` @type ^`java.lang.String` := v7 @kind object;
  #L1f9166.  return v6 @kind object;
  #L1f9168.  v7:= new `java.lang.NullPointerException`;
  #L1f916c.  v0:= "password == null" @kind object;
  #L1f9170.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f9176.  throw v7;
}
procedure `h.z$a` `port`(`h.z$a` v3 @kind this, `int` v4 ) @signature `Lh/z$a;.port:(I)Lh/z$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1f9188.  if v4 <= 0 then goto L1f919c;
  #L1f918c.  v0:= 65535I;
  #L1f9192.  if v4 > v0 then goto L1f919c;
  #L1f9196.  v3.`h.z$a.e` @type ^`int` := v4;
  #L1f919a.  return v3 @kind object;
  #L1f919c.  v0:= new `java.lang.IllegalArgumentException`;
  #L1f91a0.  v1:= new `java.lang.StringBuilder`;
  #L1f91a4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f91aa.  v2:= "unexpected port: " @kind object;
  #L1f91ae.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f91b4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f91ba.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f91c0.  v4:= temp @kind object;
  #L1f91c2.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f91c8.  throw v0;
}
procedure `h.z$a` `scheme`(`h.z$a` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lh/z$a;.scheme:(Ljava/lang/String;)Lh/z$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1f92a8.  if v4 == 0 then goto L1f9306;
  #L1f92ac.  v0:= "http" @kind object;
  #L1f92b0.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1f92b6.  v1:= temp;
  #L1f92b8.  if v1 == 0 then goto L1f92c2;
  #L1f92bc.  v3.`h.z$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L1f92c0.  goto L1f92d6;
  #L1f92c2.  v0:= "https" @kind object;
  #L1f92c6.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1f92cc.  v1:= temp;
  #L1f92ce.  if v1 == 0 then goto L1f92d8;
  #L1f92d2.  v3.`h.z$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L1f92d6.  return v3 @kind object;
  #L1f92d8.  v0:= new `java.lang.IllegalArgumentException`;
  #L1f92dc.  v1:= new `java.lang.StringBuilder`;
  #L1f92e0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f92e6.  v2:= "unexpected scheme: " @kind object;
  #L1f92ea.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f92f0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f92f6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f92fc.  v4:= temp @kind object;
  #L1f92fe.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f9304.  throw v0;
  #L1f9306.  v4:= new `java.lang.NullPointerException`;
  #L1f930a.  v0:= "scheme == null" @kind object;
  #L1f930e.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f9314.  throw v4;
}
procedure `java.lang.String` `toString`(`h.z$a` v4 @kind this) @signature `Lh/z$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1f8994.  v0:= new `java.lang.StringBuilder`;
  #L1f8998.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f899e.  v1:= v4.`h.z$a.a` @type ^`java.lang.String` @kind object;
  #L1f89a2.  if v1 == 0 then goto L1f89b8;
  #L1f89a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f89ac.  v1:= "://" @kind object;
  #L1f89b0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f89b6.  goto L1f89c2;
  #L1f89b8.  v1:= "//" @kind object;
  #L1f89bc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f89c2.  v1:= v4.`h.z$a.b` @type ^`java.lang.String` @kind object;
  #L1f89c6.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L1f89cc.  v1:= temp;
  #L1f89ce.  v2:= 58I;
  #L1f89d2.  if v1 == 0 then goto L1f89e6;
  #L1f89d6.  v1:= v4.`h.z$a.c` @type ^`java.lang.String` @kind object;
  #L1f89da.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L1f89e0.  v1:= temp;
  #L1f89e2.  if v1 != 0 then goto L1f8a1a;
  #L1f89e6.  v1:= v4.`h.z$a.b` @type ^`java.lang.String` @kind object;
  #L1f89ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f89f0.  v1:= v4.`h.z$a.c` @type ^`java.lang.String` @kind object;
  #L1f89f4.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L1f89fa.  v1:= temp;
  #L1f89fc.  if v1 != 0 then goto L1f8a10;
  #L1f8a00.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f8a06.  v1:= v4.`h.z$a.c` @type ^`java.lang.String` @kind object;
  #L1f8a0a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f8a10.  v1:= 64I;
  #L1f8a14.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f8a1a.  v1:= v4.`h.z$a.d` @type ^`java.lang.String` @kind object;
  #L1f8a1e.  v3:= -1I;
  #L1f8a20.  if v1 == 0 then goto L1f8a5a;
  #L1f8a24.  call temp:= `indexOf`(v1, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L1f8a2a.  v1:= temp;
  #L1f8a2c.  if v1 == v3 then goto L1f8a50;
  #L1f8a30.  v1:= 91I;
  #L1f8a34.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f8a3a.  v1:= v4.`h.z$a.d` @type ^`java.lang.String` @kind object;
  #L1f8a3e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f8a44.  v1:= 93I;
  #L1f8a48.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f8a4e.  goto L1f8a5a;
  #L1f8a50.  v1:= v4.`h.z$a.d` @type ^`java.lang.String` @kind object;
  #L1f8a54.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f8a5a.  v1:= v4.`h.z$a.e` @type ^`int`;
  #L1f8a5e.  if v1 != v3 then goto L1f8a6a;
  #L1f8a62.  v1:= v4.`h.z$a.a` @type ^`java.lang.String` @kind object;
  #L1f8a66.  if v1 == 0 then goto L1f8a92;
  #L1f8a6a.  call temp:= `a`(v4) @signature `Lh/z$a;.a:()I` @kind virtual;
  #L1f8a70.  v1:= temp;
  #L1f8a72.  v3:= v4.`h.z$a.a` @type ^`java.lang.String` @kind object;
  #L1f8a76.  if v3 == 0 then goto L1f8a86;
  #L1f8a7a.  call temp:= `defaultPort`(v3) @signature `Lh/z;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L1f8a80.  v3:= temp;
  #L1f8a82.  if v1 == v3 then goto L1f8a92;
  #L1f8a86.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f8a8c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f8a92.  v1:= v4.`h.z$a.f` @type ^`java.util.List` @kind object;
  #L1f8a96.  call `b`(v0, v1) @signature `Lh/z;.b:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L1f8a9c.  v1:= v4.`h.z$a.g` @type ^`java.util.List` @kind object;
  #L1f8aa0.  if v1 == 0 then goto L1f8ab8;
  #L1f8aa4.  v1:= 63I;
  #L1f8aa8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f8aae.  v1:= v4.`h.z$a.g` @type ^`java.util.List` @kind object;
  #L1f8ab2.  call `a`(v0, v1) @signature `Lh/z;.a:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L1f8ab8.  v1:= v4.`h.z$a.h` @type ^`java.lang.String` @kind object;
  #L1f8abc.  if v1 == 0 then goto L1f8ad4;
  #L1f8ac0.  v1:= 35I;
  #L1f8ac4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f8aca.  v1:= v4.`h.z$a.h` @type ^`java.lang.String` @kind object;
  #L1f8ace.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f8ad4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f8ada.  v0:= temp @kind object;
  #L1f8adc.  return v0 @kind object;
}
procedure `h.z$a` `username`(`h.z$a` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lh/z$a;.username:(Ljava/lang/String;)Lh/z$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1f9328.  if v7 == 0 then goto L1f9348;
  #L1f932c.  v2:= 0I;
  #L1f932e.  v3:= 0I;
  #L1f9330.  v4:= 0I;
  #L1f9332.  v5:= 1I;
  #L1f9334.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L1f9338.  v0:= v7 @kind object;
  #L1f933a.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `Lh/z;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L1f9340.  v7:= temp @kind object;
  #L1f9342.  v6.`h.z$a.b` @type ^`java.lang.String` := v7 @kind object;
  #L1f9346.  return v6 @kind object;
  #L1f9348.  v7:= new `java.lang.NullPointerException`;
  #L1f934c.  v0:= "username == null" @kind object;
  #L1f9350.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f9356.  throw v7;
}
