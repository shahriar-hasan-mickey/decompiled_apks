record `h.l` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Set` `h.l.a` @AccessFlag PRIVATE_FINAL;
  `h.n0.l.c` `h.l.b` @AccessFlag PRIVATE_FINAL;
}
global `h.l` `@@h.l.c` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lh/l;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1f552c.  v0:= new `h.l$a`;
  #L1f5530.  call `<init>`(v0) @signature `Lh/l$a;.<init>:()V` @kind direct;
  #L1f5536.  call temp:= `build`(v0) @signature `Lh/l$a;.build:()Lh/l;` @kind virtual;
  #L1f553c.  v0:= temp @kind object;
  #L1f553e.  `@@h.l.c` @type ^`h.l` := v0 @kind object;
  #L1f5542.  return @kind void;
}
procedure `void` `<init>`(`h.l` v0 @kind this, `java.util.Set` v1 @kind object, `h.n0.l.c` v2 @kind object) @signature `Lh/l;.<init>:(Ljava/util/Set;Lh/n0/l/c;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1f5554.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f555a.  v0.`h.l.a` @type ^`java.util.Set` := v1 @kind object;
  #L1f555e.  v0.`h.l.b` @type ^`h.n0.l.c` := v2 @kind object;
  #L1f5562.  return @kind void;
}
procedure `i.h` `a`(`java.security.cert.X509Certificate` v0 @kind object) @signature `Lh/l;.a:(Ljava/security/cert/X509Certificate;)Li/h;` @AccessFlag STATIC {
    temp;

  #L1f54c4.  call temp:= `getPublicKey`(v0) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L1f54ca.  v0:= temp @kind object;
  #L1f54cc.  call temp:= `getEncoded`(v0) @signature `Ljava/security/PublicKey;.getEncoded:()[B` @kind interface;
  #L1f54d2.  v0:= temp @kind object;
  #L1f54d4.  call temp:= `of`(v0) @signature `Li/h;.of:([B)Li/h;` @kind static;
  #L1f54da.  v0:= temp @kind object;
  #L1f54dc.  call temp:= `sha1`(v0) @signature `Li/h;.sha1:()Li/h;` @kind virtual;
  #L1f54e2.  v0:= temp @kind object;
  #L1f54e4.  return v0 @kind object;
}
procedure `i.h` `b`(`java.security.cert.X509Certificate` v0 @kind object) @signature `Lh/l;.b:(Ljava/security/cert/X509Certificate;)Li/h;` @AccessFlag STATIC {
    temp;

  #L1f54f8.  call temp:= `getPublicKey`(v0) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L1f54fe.  v0:= temp @kind object;
  #L1f5500.  call temp:= `getEncoded`(v0) @signature `Ljava/security/PublicKey;.getEncoded:()[B` @kind interface;
  #L1f5506.  v0:= temp @kind object;
  #L1f5508.  call temp:= `of`(v0) @signature `Li/h;.of:([B)Li/h;` @kind static;
  #L1f550e.  v0:= temp @kind object;
  #L1f5510.  call temp:= `sha256`(v0) @signature `Li/h;.sha256:()Li/h;` @kind virtual;
  #L1f5516.  v0:= temp @kind object;
  #L1f5518.  return v0 @kind object;
}
procedure `java.lang.String` `pin`(`java.security.cert.Certificate` v2 @kind object) @signature `Lh/l;.pin:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1f53c8.  v0:= instanceof @variable v2 @type ^`java.security.cert.X509Certificate` @kind boolean;
  #L1f53cc.  if v0 == 0 then goto L1f5408;
  #L1f53d0.  v0:= new `java.lang.StringBuilder`;
  #L1f53d4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f53da.  v1:= "sha256/" @kind object;
  #L1f53de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f53e4.  v2:= (`java.security.cert.X509Certificate`) v2 @kind object;
  #L1f53e8.  call temp:= `b`(v2) @signature `Lh/l;.b:(Ljava/security/cert/X509Certificate;)Li/h;` @kind static;
  #L1f53ee.  v2:= temp @kind object;
  #L1f53f0.  call temp:= `base64`(v2) @signature `Li/h;.base64:()Ljava/lang/String;` @kind virtual;
  #L1f53f6.  v2:= temp @kind object;
  #L1f53f8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f53fe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f5404.  v2:= temp @kind object;
  #L1f5406.  return v2 @kind object;
  #L1f5408.  v2:= new `java.lang.IllegalArgumentException`;
  #L1f540c.  v0:= "Certificate pinning requires X509 certificates" @kind object;
  #L1f5410.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f5416.  throw v2;
}
procedure `h.l` `a`(`h.l` v2 @kind this, `h.n0.l.c` v3 @kind object) @signature `Lh/l;.a:(Lh/n0/l/c;)Lh/l;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1f5490.  v0:= v2.`h.l.b` @type ^`h.n0.l.c` @kind object;
  #L1f5494.  call temp:= `equals`(v0, v3) @signature `Ljava/util/Objects;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1f549a.  v0:= temp;
  #L1f549c.  if v0 == 0 then goto L1f54a4;
  #L1f54a0.  v0:= v2 @kind object;
  #L1f54a2.  goto L1f54b2;
  #L1f54a4.  v0:= new `h.l`;
  #L1f54a8.  v1:= v2.`h.l.a` @type ^`java.util.Set` @kind object;
  #L1f54ac.  call `<init>`(v0, v1, v3) @signature `Lh/l;.<init>:(Ljava/util/Set;Lh/n0/l/c;)V` @kind direct;
  #L1f54b2.  return v0 @kind object;
}
procedure `java.util.List` `a`(`h.l` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lh/l;.a:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1f5428.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L1f542e.  v0:= temp @kind object;
  #L1f5430.  v1:= v4.`h.l.a` @type ^`java.util.Set` @kind object;
  #L1f5434.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1f543a.  v1:= temp @kind object;
  #L1f543c.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1f5442.  v2:= temp;
  #L1f5444.  if v2 == 0 then goto L1f547e;
  #L1f5448.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1f544e.  v2:= temp @kind object;
  #L1f5450.  v2:= (`h.l$b`) v2 @kind object;
  #L1f5454.  call temp:= `a`(v2, v5) @signature `Lh/l$b;.a:(Ljava/lang/String;)Z` @kind virtual;
  #L1f545a.  v3:= temp;
  #L1f545c.  if v3 == 0 then goto L1f543c;
  #L1f5460.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1f5466.  v3:= temp;
  #L1f5468.  if v3 == 0 then goto L1f5476;
  #L1f546c.  v0:= new `java.util.ArrayList`;
  #L1f5470.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1f5476.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1f547c.  goto L1f543c;
  #L1f547e.  return v0 @kind object;
}
procedure `void` `check`(`h.l` v12 @kind this, `java.lang.String` v13 @kind object, `java.util.List` v14 @kind object) @signature `Lh/l;.check:(Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1f5574.  call temp:= `a`(v12, v13) @signature `Lh/l;.a:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L1f557a.  v0:= temp @kind object;
  #L1f557c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1f5582.  v1:= temp;
  #L1f5584.  if v1 == 0 then goto L1f558a;
  #L1f5588.  return @kind void;
  #L1f558a.  v1:= v12.`h.l.b` @type ^`h.n0.l.c` @kind object;
  #L1f558e.  if v1 == 0 then goto L1f559a;
  #L1f5592.  call temp:= `clean`(v1, v14, v13) @signature `Lh/n0/l/c;.clean:(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L1f5598.  v14:= temp @kind object;
  #L1f559a.  call temp:= `size`(v14) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1f55a0.  v1:= temp;
  #L1f55a2.  v2:= 0I;
  #L1f55a4.  v3:= 0I;
  #L1f55a6.  if v3 >= v1 then goto L1f5678;
  #L1f55aa.  call temp:= `get`(v14, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1f55b0.  v4:= temp @kind object;
  #L1f55b2.  v4:= (`java.security.cert.X509Certificate`) v4 @kind object;
  #L1f55b6.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1f55bc.  v5:= temp;
  #L1f55be.  v6:= 0I;
  #L1f55c0.  v7:= v6 @kind object;
  #L1f55c2.  v8:= v7 @kind object;
  #L1f55c4.  v6:= 0I;
  #L1f55c6.  if v6 >= v5 then goto L1f5672;
  #L1f55ca.  call temp:= `get`(v0, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1f55d0.  v9:= temp @kind object;
  #L1f55d2.  v9:= (`h.l$b`) v9 @kind object;
  #L1f55d6.  v10:= v9.`h.l$b.c` @type ^`java.lang.String` @kind object;
  #L1f55da.  v11:= "sha256/" @kind object;
  #L1f55de.  call temp:= `equals`(v10, v11) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f55e4.  v10:= temp;
  #L1f55e6.  if v10 == 0 then goto L1f5608;
  #L1f55ea.  if v7 != 0 then goto L1f55f6;
  #L1f55ee.  call temp:= `b`(v4) @signature `Lh/l;.b:(Ljava/security/cert/X509Certificate;)Li/h;` @kind static;
  #L1f55f4.  v7:= temp @kind object;
  #L1f55f6.  v9:= v9.`h.l$b.d` @type ^`i.h` @kind object;
  #L1f55fa.  call temp:= `equals`(v9, v7) @signature `Li/h;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f5600.  v9:= temp;
  #L1f5602.  if v9 == 0 then goto L1f563a;
  #L1f5606.  return @kind void;
  #L1f5608.  v10:= v9.`h.l$b.c` @type ^`java.lang.String` @kind object;
  #L1f560c.  v11:= "sha1/" @kind object;
  #L1f5610.  call temp:= `equals`(v10, v11) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f5616.  v10:= temp;
  #L1f5618.  if v10 == 0 then goto L1f5640;
  #L1f561c.  if v8 != 0 then goto L1f5628;
  #L1f5620.  call temp:= `a`(v4) @signature `Lh/l;.a:(Ljava/security/cert/X509Certificate;)Li/h;` @kind static;
  #L1f5626.  v8:= temp @kind object;
  #L1f5628.  v9:= v9.`h.l$b.d` @type ^`i.h` @kind object;
  #L1f562c.  call temp:= `equals`(v9, v8) @signature `Li/h;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1f5632.  v9:= temp;
  #L1f5634.  if v9 == 0 then goto L1f563a;
  #L1f5638.  return @kind void;
  #L1f563a.  v6:= v6 + 1;
  #L1f563e.  goto L1f55c6;
  #L1f5640.  v13:= new `java.lang.AssertionError`;
  #L1f5644.  v14:= new `java.lang.StringBuilder`;
  #L1f5648.  call `<init>`(v14) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f564e.  v0:= "unsupported hashAlgorithm: " @kind object;
  #L1f5652.  call temp:= `append`(v14, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f5658.  v0:= v9.`h.l$b.c` @type ^`java.lang.String` @kind object;
  #L1f565c.  call temp:= `append`(v14, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f5662.  call temp:= `toString`(v14) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f5668.  v14:= temp @kind object;
  #L1f566a.  call `<init>`(v13, v14) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1f5670.  throw v13;
  #L1f5672.  v3:= v3 + 1;
  #L1f5676.  goto L1f55a6;
  #L1f5678.  v1:= new `java.lang.StringBuilder`;
  #L1f567c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f5682.  v3:= "Certificate pinning failure!" @kind object;
  #L1f5686.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f568c.  v3:= "\n  Peer certificate chain:" @kind object;
  #L1f5690.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f5696.  call temp:= `size`(v14) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1f569c.  v3:= temp;
  #L1f569e.  v4:= 0I;
  #L1f56a0.  v5:= "\n    " @kind object;
  #L1f56a4.  if v4 >= v3 then goto L1f56ee;
  #L1f56a8.  call temp:= `get`(v14, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1f56ae.  v6:= temp @kind object;
  #L1f56b0.  v6:= (`java.security.cert.X509Certificate`) v6 @kind object;
  #L1f56b4.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f56ba.  call temp:= `pin`(v6) @signature `Lh/l;.pin:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @kind static;
  #L1f56c0.  v5:= temp @kind object;
  #L1f56c2.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f56c8.  v5:= ": " @kind object;
  #L1f56cc.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f56d2.  call temp:= `getSubjectDN`(v6) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L1f56d8.  v5:= temp @kind object;
  #L1f56da.  call temp:= `getName`(v5) @signature `Ljava/security/Principal;.getName:()Ljava/lang/String;` @kind interface;
  #L1f56e0.  v5:= temp @kind object;
  #L1f56e2.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f56e8.  v4:= v4 + 1;
  #L1f56ec.  goto L1f56a0;
  #L1f56ee.  v14:= "\n  Pinned certificates for " @kind object;
  #L1f56f2.  call temp:= `append`(v1, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f56f8.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f56fe.  v13:= ":" @kind object;
  #L1f5702.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f5708.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1f570e.  v13:= temp;
  #L1f5710.  if v2 >= v13 then goto L1f5732;
  #L1f5714.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1f571a.  v14:= temp @kind object;
  #L1f571c.  v14:= (`h.l$b`) v14 @kind object;
  #L1f5720.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f5726.  call temp:= `append`(v1, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f572c.  v2:= v2 + 1;
  #L1f5730.  goto L1f5710;
  #L1f5732.  v13:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L1f5736.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f573c.  v14:= temp @kind object;
  #L1f573e.  call `<init>`(v13, v14) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f5744.  throw v13;
}
procedure `boolean` `equals`(`h.l` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lh/l;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1f5344.  v0:= 1I;
  #L1f5346.  if v4 != v3 then goto L1f534c;
  #L1f534a.  return v0;
  #L1f534c.  v1:= instanceof @variable v4 @type ^`h.l` @kind boolean;
  #L1f5350.  if v1 == 0 then goto L1f5382;
  #L1f5354.  v1:= v3.`h.l.b` @type ^`h.n0.l.c` @kind object;
  #L1f5358.  v4:= (`h.l`) v4 @kind object;
  #L1f535c.  v2:= v4.`h.l.b` @type ^`h.n0.l.c` @kind object;
  #L1f5360.  call temp:= `equals`(v1, v2) @signature `Ljava/util/Objects;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1f5366.  v1:= temp;
  #L1f5368.  if v1 == 0 then goto L1f5382;
  #L1f536c.  v1:= v3.`h.l.a` @type ^`java.util.Set` @kind object;
  #L1f5370.  v4:= v4.`h.l.a` @type ^`java.util.Set` @kind object;
  #L1f5374.  call temp:= `equals`(v1, v4) @signature `Ljava/util/Set;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L1f537a.  v4:= temp;
  #L1f537c.  if v4 == 0 then goto L1f5382;
  #L1f5380.  goto L1f5384;
  #L1f5382.  v0:= 0I;
  #L1f5384.  return v0;
}
procedure `int` `hashCode`(`h.l` v2 @kind this) @signature `Lh/l;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1f5398.  v0:= v2.`h.l.b` @type ^`h.n0.l.c` @kind object;
  #L1f539c.  call temp:= `hashCode`(v0) @signature `Ljava/util/Objects;.hashCode:(Ljava/lang/Object;)I` @kind static;
  #L1f53a2.  v0:= temp;
  #L1f53a4.  v0:= v0 * 31;
  #L1f53a8.  v1:= v2.`h.l.a` @type ^`java.util.Set` @kind object;
  #L1f53ac.  call temp:= `hashCode`(v1) @signature `Ljava/util/Set;.hashCode:()I` @kind interface;
  #L1f53b2.  v1:= temp;
  #L1f53b4.  v0:= v0 + v1 @kind int;
  #L1f53b6.  return v0;
}
