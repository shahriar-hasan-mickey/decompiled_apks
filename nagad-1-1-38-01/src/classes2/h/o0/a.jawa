record `h.o0.a` @kind class @AccessFlag PUBLIC_FINAL extends `h.a0` @kind interface {
  `h.o0.a$b` `h.o0.a.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `h.o0.a.b` @AccessFlag PRIVATE_VOLATILE;
  `h.o0.a$a` `h.o0.a.c` @AccessFlag PRIVATE_VOLATILE;
}
global `java.nio.charset.Charset` `@@h.o0.a.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lh/o0/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L20ee2c.  v0:= "UTF-8" @kind object;
  #L20ee30.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L20ee36.  v0:= temp @kind object;
  #L20ee38.  `@@h.o0.a.d` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L20ee3c.  return @kind void;
}
procedure `void` `<init>`(`h.o0.a` v1 @kind this) @signature `Lh/o0/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L20ee50.  v0:= `@@h.o0.a$b.a` @type ^`h.o0.a$b` @kind object;
  #L20ee54.  call `<init>`(v1, v0) @signature `Lh/o0/a;.<init>:(Lh/o0/a$b;)V` @kind direct;
  #L20ee5a.  return @kind void;
}
procedure `void` `<init>`(`h.o0.a` v1 @kind this, `h.o0.a$b` v2 @kind object) @signature `Lh/o0/a;.<init>:(Lh/o0/a$b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L20ee6c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20ee72.  call temp:= `emptySet`() @signature `Ljava/util/Collections;.emptySet:()Ljava/util/Set;` @kind static;
  #L20ee78.  v0:= temp @kind object;
  #L20ee7a.  v1.`h.o0.a.b` @type ^`java.util.Set` := v0 @kind object;
  #L20ee7e.  v0:= `@@h.o0.a$a.f` @type ^`h.o0.a$a` @kind object;
  #L20ee82.  v1.`h.o0.a.c` @type ^`h.o0.a$a` := v0 @kind object;
  #L20ee86.  v1.`h.o0.a.a` @type ^`h.o0.a$b` := v2 @kind object;
  #L20ee8a.  return @kind void;
}
procedure `void` `a`(`h.o0.a` v3 @kind this, `h.y` v4 @kind object, `int` v5 ) @signature `Lh/o0/a;.a:(Lh/y;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L20ee9c.  v0:= v3.`h.o0.a.b` @type ^`java.util.Set` @kind object;
  #L20eea0.  call temp:= `name`(v4, v5) @signature `Lh/y;.name:(I)Ljava/lang/String;` @kind virtual;
  #L20eea6.  v1:= temp @kind object;
  #L20eea8.  call temp:= `contains`(v0, v1) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L20eeae.  v0:= temp;
  #L20eeb0.  if v0 == 0 then goto L20eeba;
  #L20eeb4.  v0:= "██" @kind object;
  #L20eeb8.  goto L20eec2;
  #L20eeba.  call temp:= `value`(v4, v5) @signature `Lh/y;.value:(I)Ljava/lang/String;` @kind virtual;
  #L20eec0.  v0:= temp @kind object;
  #L20eec2.  v1:= v3.`h.o0.a.a` @type ^`h.o0.a$b` @kind object;
  #L20eec6.  v2:= new `java.lang.StringBuilder`;
  #L20eeca.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20eed0.  call temp:= `name`(v4, v5) @signature `Lh/y;.name:(I)Ljava/lang/String;` @kind virtual;
  #L20eed6.  v4:= temp @kind object;
  #L20eed8.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20eede.  v4:= ": " @kind object;
  #L20eee2.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20eee8.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20eeee.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20eef4.  v4:= temp @kind object;
  #L20eef6.  call `log`(v1, v4) @signature `Lh/o0/a$b;.log:(Ljava/lang/String;)V` @kind interface;
  #L20eefc.  return @kind void;
}
procedure `boolean` `a`(`h.y` v1 @kind object) @signature `Lh/o0/a;.a:(Lh/y;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L20e588.  v0:= "Content-Encoding" @kind object;
  #L20e58c.  call temp:= `get`(v1, v0) @signature `Lh/y;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L20e592.  v1:= temp @kind object;
  #L20e594.  if v1 == 0 then goto L20e5bc;
  #L20e598.  v0:= "identity" @kind object;
  #L20e59c.  call temp:= `equalsIgnoreCase`(v1, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L20e5a2.  v0:= temp;
  #L20e5a4.  if v0 != 0 then goto L20e5bc;
  #L20e5a8.  v0:= "gzip" @kind object;
  #L20e5ac.  call temp:= `equalsIgnoreCase`(v1, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L20e5b2.  v1:= temp;
  #L20e5b4.  if v1 != 0 then goto L20e5bc;
  #L20e5b8.  v1:= 1I;
  #L20e5ba.  goto L20e5be;
  #L20e5bc.  v1:= 0I;
  #L20e5be.  return v1;
}
procedure `boolean` `a`(`i.e` v8 @kind object) @signature `Lh/o0/a;.a:(Li/e;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L20e5d0.  v0:= 0I;
  #L20e5d2.  v7:= new `i.e`;
  #L20e5d6.  call `<init>`(v7) @signature `Li/e;.<init>:()V` @kind direct;
  #L20e5dc.  call temp:= `size`(v8) @signature `Li/e;.size:()J` @kind virtual;
  #L20e5e2.  v1:= temp @kind wide;
  #L20e5e4.  v3:= 64L;
  #L20e5e8.  v5:= lcmp(v1, v3);
  #L20e5ec.  if v5 >= 0 then goto L20e5fc;
  #L20e5f0.  call temp:= `size`(v8) @signature `Li/e;.size:()J` @kind virtual;
  #L20e5f6.  v1:= temp @kind wide;
  #L20e5f8.  v5:= v1 @kind wide;
  #L20e5fa.  goto L20e5fe;
  #L20e5fc.  v5:= v3 @kind wide;
  #L20e5fe.  v3:= 0L;
  #L20e602.  v1:= v8 @kind object;
  #L20e604.  v2:= v7 @kind object;
  #L20e606.  call temp:= `copyTo`(v1, v2, v3, v5) @signature `Li/e;.copyTo:(Li/e;JJ)Li/e;` @kind virtual;
  #L20e60c.  v8:= 0I;
  #L20e60e.  v1:= 16I;
  #L20e612.  if v8 >= v1 then goto L20e64c;
  #L20e616.  call temp:= `exhausted`(v7) @signature `Li/e;.exhausted:()Z` @kind virtual;
  #L20e61c.  v1:= temp;
  #L20e61e.  if v1 == 0 then goto L20e624;
  #L20e622.  goto L20e64c;
  #L20e624.  call temp:= `readUtf8CodePoint`(v7) @signature `Li/e;.readUtf8CodePoint:()I` @kind virtual;
  #L20e62a.  v1:= temp;
  #L20e62c.  call temp:= `isISOControl`(v1) @signature `Ljava/lang/Character;.isISOControl:(I)Z` @kind static;
  #L20e632.  v2:= temp;
  #L20e634.  if v2 == 0 then goto L20e646;
  #L20e638.  call temp:= `isWhitespace`(v1) @signature `Ljava/lang/Character;.isWhitespace:(I)Z` @kind static;
  #L20e63e.  v1:= temp;
  #L20e640.  if v1 != 0 then goto L20e646;
  #L20e644.  return v0;
  #L20e646.  v8:= v8 + 1;
  #L20e64a.  goto L20e60e;
  #L20e64c.  v8:= 1I;
  #L20e64e.  return v8;
  #L20e650.  return v0;
  catch `java.io.EOFException` @[L20e5d2..L20e640] goto L20e650;
}
procedure `h.i0` `intercept`(`h.o0.a` v19 @kind this, `h.a0$a` v20 @kind object) @signature `Lh/o0/a;.intercept:(Lh/a0$a;)Lh/i0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;

  #L20e674.  v1:= v19 @kind object;
  #L20e678.  v0:= v20 @kind object;
  #L20e67c.  v2:= v1.`h.o0.a.c` @type ^`h.o0.a$a` @kind object;
  #L20e680.  call temp:= `request`(v20) @signature `Lh/a0$a;.request:()Lh/g0;` @kind interface;
  #L20e686.  v3:= temp @kind object;
  #L20e688.  v4:= `@@h.o0.a$a.f` @type ^`h.o0.a$a` @kind object;
  #L20e68c.  if v2 != v4 then goto L20e69a;
  #L20e690.  call temp:= `proceed`(v0, v3) @signature `Lh/a0$a;.proceed:(Lh/g0;)Lh/i0;` @kind interface;
  #L20e696.  v0:= temp @kind object;
  #L20e698.  return v0 @kind object;
  #L20e69a.  v4:= `@@h.o0.a$a.i` @type ^`h.o0.a$a` @kind object;
  #L20e69e.  v5:= 1I;
  #L20e6a0.  if v2 != v4 then goto L20e6a8;
  #L20e6a4.  v4:= 1I;
  #L20e6a6.  goto L20e6aa;
  #L20e6a8.  v4:= 0I;
  #L20e6aa.  if v4 != 0 then goto L20e6bc;
  #L20e6ae.  v7:= `@@h.o0.a$a.h` @type ^`h.o0.a$a` @kind object;
  #L20e6b2.  if v2 != v7 then goto L20e6b8;
  #L20e6b6.  goto L20e6bc;
  #L20e6b8.  v2:= 0I;
  #L20e6ba.  goto L20e6be;
  #L20e6bc.  v2:= 1I;
  #L20e6be.  call temp:= `body`(v3) @signature `Lh/g0;.body:()Lh/h0;` @kind virtual;
  #L20e6c4.  v7:= temp @kind object;
  #L20e6c6.  if v7 == 0 then goto L20e6cc;
  #L20e6ca.  goto L20e6ce;
  #L20e6cc.  v5:= 0I;
  #L20e6ce.  call temp:= `connection`(v20) @signature `Lh/a0$a;.connection:()Lh/n;` @kind interface;
  #L20e6d4.  v8:= temp @kind object;
  #L20e6d6.  v9:= new `java.lang.StringBuilder`;
  #L20e6da.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20e6e0.  v10:= "--> " @kind object;
  #L20e6e4.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e6ea.  call temp:= `method`(v3) @signature `Lh/g0;.method:()Ljava/lang/String;` @kind virtual;
  #L20e6f0.  v10:= temp @kind object;
  #L20e6f2.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e6f8.  v10:= 32I;
  #L20e6fc.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e702.  call temp:= `url`(v3) @signature `Lh/g0;.url:()Lh/z;` @kind virtual;
  #L20e708.  v11:= temp @kind object;
  #L20e70a.  call temp:= `append`(v9, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e710.  v11:= "" @kind object;
  #L20e714.  if v8 == 0 then goto L20e744;
  #L20e718.  v12:= new `java.lang.StringBuilder`;
  #L20e71c.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20e722.  v13:= " " @kind object;
  #L20e726.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e72c.  call temp:= `protocol`(v8) @signature `Lh/n;.protocol:()Lh/e0;` @kind interface;
  #L20e732.  v8:= temp @kind object;
  #L20e734.  call temp:= `append`(v12, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e73a.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20e740.  v8:= temp @kind object;
  #L20e742.  goto L20e746;
  #L20e744.  v8:= v11 @kind object;
  #L20e746.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e74c.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20e752.  v8:= temp @kind object;
  #L20e754.  v9:= "-byte body)" @kind object;
  #L20e758.  v12:= " (" @kind object;
  #L20e75c.  if v2 != 0 then goto L20e796;
  #L20e760.  if v5 == 0 then goto L20e796;
  #L20e764.  v13:= new `java.lang.StringBuilder`;
  #L20e768.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20e76e.  call temp:= `append`(v13, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e774.  call temp:= `append`(v13, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e77a.  call temp:= `contentLength`(v7) @signature `Lh/h0;.contentLength:()J` @kind virtual;
  #L20e780.  v14:= temp @kind wide;
  #L20e782.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e788.  call temp:= `append`(v13, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e78e.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20e794.  v8:= temp @kind object;
  #L20e796.  v13:= v1.`h.o0.a.a` @type ^`h.o0.a$b` @kind object;
  #L20e79a.  call `log`(v13, v8) @signature `Lh/o0/a$b;.log:(Ljava/lang/String;)V` @kind interface;
  #L20e7a0.  v8:= "-byte body omitted)" @kind object;
  #L20e7a4.  v13:= -1L;
  #L20e7a8.  if v2 == 0 then goto L20ea00;
  #L20e7ac.  if v5 == 0 then goto L20e834;
  #L20e7b0.  call temp:= `contentType`(v7) @signature `Lh/h0;.contentType:()Lh/b0;` @kind virtual;
  #L20e7b6.  v15:= temp @kind object;
  #L20e7b8.  if v15 == 0 then goto L20e7f0;
  #L20e7bc.  v15:= v1.`h.o0.a.a` @type ^`h.o0.a$b` @kind object;
  #L20e7c0.  v6:= new `java.lang.StringBuilder`;
  #L20e7c4.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20e7ca.  v10:= "Content-Type: " @kind object;
  #L20e7ce.  call temp:= `append`(v6, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e7d4.  call temp:= `contentType`(v7) @signature `Lh/h0;.contentType:()Lh/b0;` @kind virtual;
  #L20e7da.  v10:= temp @kind object;
  #L20e7dc.  call temp:= `append`(v6, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e7e2.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20e7e8.  v6:= temp @kind object;
  #L20e7ea.  call `log`(v15, v6) @signature `Lh/o0/a$b;.log:(Ljava/lang/String;)V` @kind interface;
  #L20e7f0.  call temp:= `contentLength`(v7) @signature `Lh/h0;.contentLength:()J` @kind virtual;
  #L20e7f6.  v16:= temp @kind wide;
  #L20e7f8.  v6:= lcmp(v16, v13);
  #L20e7fc.  if v6 == 0 then goto L20e834;
  #L20e800.  v6:= v1.`h.o0.a.a` @type ^`h.o0.a$b` @kind object;
  #L20e804.  v10:= new `java.lang.StringBuilder`;
  #L20e808.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20e80e.  v15:= "Content-Length: " @kind object;
  #L20e812.  call temp:= `append`(v10, v15) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e818.  call temp:= `contentLength`(v7) @signature `Lh/h0;.contentLength:()J` @kind virtual;
  #L20e81e.  v13:= temp @kind wide;
  #L20e820.  call temp:= `append`(v10, v13) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e826.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20e82c.  v10:= temp @kind object;
  #L20e82e.  call `log`(v6, v10) @signature `Lh/o0/a$b;.log:(Ljava/lang/String;)V` @kind interface;
  #L20e834.  call temp:= `headers`(v3) @signature `Lh/g0;.headers:()Lh/y;` @kind virtual;
  #L20e83a.  v6:= temp @kind object;
  #L20e83c.  call temp:= `size`(v6) @signature `Lh/y;.size:()I` @kind virtual;
  #L20e842.  v10:= temp;
  #L20e844.  v13:= 0I;
  #L20e846.  if v13 >= v10 then goto L20e87e;
  #L20e84a.  call temp:= `name`(v6, v13) @signature `Lh/y;.name:(I)Ljava/lang/String;` @kind virtual;
  #L20e850.  v14:= temp @kind object;
  #L20e852.  v15:= "Content-Type" @kind object;
  #L20e856.  call temp:= `equalsIgnoreCase`(v15, v14) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L20e85c.  v15:= temp;
  #L20e85e.  if v15 != 0 then goto L20e878;
  #L20e862.  v15:= "Content-Length" @kind object;
  #L20e866.  call temp:= `equalsIgnoreCase`(v15, v14) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L20e86c.  v14:= temp;
  #L20e86e.  if v14 != 0 then goto L20e878;
  #L20e872.  call `a`(v1, v6, v13) @signature `Lh/o0/a;.a:(Lh/y;I)V` @kind direct;
  #L20e878.  v13:= v13 + 1;
  #L20e87c.  goto L20e846;
  #L20e87e.  v6:= "--> END " @kind object;
  #L20e882.  if v4 == 0 then goto L20e9d0;
  #L20e886.  if v5 != 0 then goto L20e88e;
  #L20e88a.  goto L20e9d0;
  #L20e88e.  call temp:= `headers`(v3) @signature `Lh/g0;.headers:()Lh/y;` @kind virtual;
  #L20e894.  v5:= temp @kind object;
  #L20e896.  call temp:= `a`(v5) @signature `Lh/o0/a;.a:(Lh/y;)Z` @kind static;
  #L20e89c.  v5:= temp;
  #L20e89e.  if v5 == 0 then goto L20e8e0;
  #L20e8a2.  v5:= v1.`h.o0.a.a` @type ^`h.o0.a$b` @kind object;
  #L20e8a6.  v7:= new `java.lang.StringBuilder`;
  #L20e8aa.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20e8b0.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e8b6.  call temp:= `method`(v3) @signature `Lh/g0;.method:()Ljava/lang/String;` @kind virtual;
  #L20e8bc.  v6:= temp @kind object;
  #L20e8be.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e8c4.  v6:= " (encoded body omitted)" @kind object;
  #L20e8c8.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e8ce.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20e8d4.  v6:= temp @kind object;
  #L20e8d6.  call `log`(v5, v6) @signature `Lh/o0/a$b;.log:(Ljava/lang/String;)V` @kind interface;
  #L20e8dc.  goto L20ea00;
  #L20e8e0.  v5:= new `i.e`;
  #L20e8e4.  call `<init>`(v5) @signature `Li/e;.<init>:()V` @kind direct;
  #L20e8ea.  call `writeTo`(v7, v5) @signature `Lh/h0;.writeTo:(Li/f;)V` @kind virtual;
  #L20e8f0.  v10:= `@@h.o0.a.d` @type ^`java.nio.charset.Charset` @kind object;
  #L20e8f4.  call temp:= `contentType`(v7) @signature `Lh/h0;.contentType:()Lh/b0;` @kind virtual;
  #L20e8fa.  v13:= temp @kind object;
  #L20e8fc.  if v13 == 0 then goto L20e90c;
  #L20e900.  v10:= `@@h.o0.a.d` @type ^`java.nio.charset.Charset` @kind object;
  #L20e904.  call temp:= `charset`(v13, v10) @signature `Lh/b0;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind virtual;
  #L20e90a.  v10:= temp @kind object;
  #L20e90c.  v13:= v1.`h.o0.a.a` @type ^`h.o0.a$b` @kind object;
  #L20e910.  call `log`(v13, v11) @signature `Lh/o0/a$b;.log:(Ljava/lang/String;)V` @kind interface;
  #L20e916.  call temp:= `a`(v5) @signature `Lh/o0/a;.a:(Li/e;)Z` @kind static;
  #L20e91c.  v13:= temp;
  #L20e91e.  if v13 == 0 then goto L20e980;
  #L20e922.  v13:= v1.`h.o0.a.a` @type ^`h.o0.a$b` @kind object;
  #L20e926.  call temp:= `readString`(v5, v10) @signature `Li/e;.readString:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L20e92c.  v5:= temp @kind object;
  #L20e92e.  call `log`(v13, v5) @signature `Lh/o0/a$b;.log:(Ljava/lang/String;)V` @kind interface;
  #L20e934.  v5:= v1.`h.o0.a.a` @type ^`h.o0.a$b` @kind object;
  #L20e938.  v10:= new `java.lang.StringBuilder`;
  #L20e93c.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20e942.  call temp:= `append`(v10, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e948.  call temp:= `method`(v3) @signature `Lh/g0;.method:()Ljava/lang/String;` @kind virtual;
  #L20e94e.  v6:= temp @kind object;
  #L20e950.  call temp:= `append`(v10, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e956.  call temp:= `append`(v10, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e95c.  call temp:= `contentLength`(v7) @signature `Lh/h0;.contentLength:()J` @kind virtual;
  #L20e962.  v6:= temp @kind wide;
  #L20e964.  call temp:= `append`(v10, v6) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e96a.  call temp:= `append`(v10, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e970.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20e976.  v6:= temp @kind object;
  #L20e978.  call `log`(v5, v6) @signature `Lh/o0/a$b;.log:(Ljava/lang/String;)V` @kind interface;
  #L20e97e.  goto L20ea00;
  #L20e980.  v5:= v1.`h.o0.a.a` @type ^`h.o0.a$b` @kind object;
  #L20e984.  v10:= new `java.lang.StringBuilder`;
  #L20e988.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20e98e.  call temp:= `append`(v10, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e994.  call temp:= `method`(v3) @signature `Lh/g0;.method:()Ljava/lang/String;` @kind virtual;
  #L20e99a.  v6:= temp @kind object;
  #L20e99c.  call temp:= `append`(v10, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e9a2.  v6:= " (binary " @kind object;
  #L20e9a6.  call temp:= `append`(v10, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e9ac.  call temp:= `contentLength`(v7) @signature `Lh/h0;.contentLength:()J` @kind virtual;
  #L20e9b2.  v6:= temp @kind wide;
  #L20e9b4.  call temp:= `append`(v10, v6) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e9ba.  call temp:= `append`(v10, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e9c0.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20e9c6.  v6:= temp @kind object;
  #L20e9c8.  call `log`(v5, v6) @signature `Lh/o0/a$b;.log:(Ljava/lang/String;)V` @kind interface;
  #L20e9ce.  goto L20ea00;
  #L20e9d0.  v5:= v1.`h.o0.a.a` @type ^`h.o0.a$b` @kind object;
  #L20e9d4.  v7:= new `java.lang.StringBuilder`;
  #L20e9d8.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20e9de.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e9e4.  call temp:= `method`(v3) @signature `Lh/g0;.method:()Ljava/lang/String;` @kind virtual;
  #L20e9ea.  v6:= temp @kind object;
  #L20e9ec.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20e9f2.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20e9f8.  v6:= temp @kind object;
  #L20e9fa.  call `log`(v5, v6) @signature `Lh/o0/a$b;.log:(Ljava/lang/String;)V` @kind interface;
  #L20ea00.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L20ea06.  v5:= temp @kind wide;
  #L20ea08.  call temp:= `proceed`(v0, v3) @signature `Lh/a0$a;.proceed:(Lh/g0;)Lh/i0;` @kind interface;
  #L20ea0e.  v0:= temp @kind object;
  #L20ea10.  v3:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L20ea14.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L20ea1a.  v13:= temp @kind wide;
  #L20ea1c.  v13:= v13 - v5 @kind long;
  #L20ea1e.  call temp:= `toMillis`(v3, v13) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L20ea24.  v5:= temp @kind wide;
  #L20ea26.  call temp:= `body`(v0) @signature `Lh/i0;.body:()Lh/j0;` @kind virtual;
  #L20ea2c.  v3:= temp @kind object;
  #L20ea2e.  call temp:= `contentLength`(v3) @signature `Lh/j0;.contentLength:()J` @kind virtual;
  #L20ea34.  v13:= temp @kind wide;
  #L20ea36.  v16:= -1L;
  #L20ea3a.  v7:= lcmp(v13, v16);
  #L20ea3e.  if v7 == 0 then goto L20ea66;
  #L20ea42.  v7:= new `java.lang.StringBuilder`;
  #L20ea46.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20ea4c.  call temp:= `append`(v7, v13) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L20ea52.  v10:= "-byte" @kind object;
  #L20ea56.  call temp:= `append`(v7, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20ea5c.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20ea62.  v7:= temp @kind object;
  #L20ea64.  goto L20ea6a;
  #L20ea66.  v7:= "unknown-length" @kind object;
  #L20ea6a.  v10:= v1.`h.o0.a.a` @type ^`h.o0.a$b` @kind object;
  #L20ea6e.  v15:= new `java.lang.StringBuilder`;
  #L20ea72.  call `<init>`(v15) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20ea78.  v16:= v9 @kind object;
  #L20ea7c.  v9:= "<-- " @kind object;
  #L20ea80.  call temp:= `append`(v15, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20ea86.  call temp:= `code`(v0) @signature `Lh/i0;.code:()I` @kind virtual;
  #L20ea8c.  v9:= temp;
  #L20ea8e.  call temp:= `append`(v15, v9) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L20ea94.  call temp:= `message`(v0) @signature `Lh/i0;.message:()Ljava/lang/String;` @kind virtual;
  #L20ea9a.  v9:= temp @kind object;
  #L20ea9c.  call temp:= `isEmpty`(v9) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L20eaa2.  v9:= temp;
  #L20eaa4.  if v9 == 0 then goto L20eab4;
  #L20eaa8.  v9:= v11 @kind object;
  #L20eaaa.  v17:= v13 @kind wide;
  #L20eaae.  v13:= 32I;
  #L20eab2.  goto L20eae2;
  #L20eab4.  v9:= new `java.lang.StringBuilder`;
  #L20eab8.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20eabe.  v17:= v13 @kind wide;
  #L20eac2.  v13:= 32I;
  #L20eac6.  call temp:= `append`(v9, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L20eacc.  call temp:= `message`(v0) @signature `Lh/i0;.message:()Ljava/lang/String;` @kind virtual;
  #L20ead2.  v14:= temp @kind object;
  #L20ead4.  call temp:= `append`(v9, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20eada.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20eae0.  v9:= temp @kind object;
  #L20eae2.  call temp:= `append`(v15, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20eae8.  call temp:= `append`(v15, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L20eaee.  call temp:= `request`(v0) @signature `Lh/i0;.request:()Lh/g0;` @kind virtual;
  #L20eaf4.  v9:= temp @kind object;
  #L20eaf6.  call temp:= `url`(v9) @signature `Lh/g0;.url:()Lh/z;` @kind virtual;
  #L20eafc.  v9:= temp @kind object;
  #L20eafe.  call temp:= `append`(v15, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20eb04.  call temp:= `append`(v15, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20eb0a.  call temp:= `append`(v15, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L20eb10.  v5:= "ms" @kind object;
  #L20eb14.  call temp:= `append`(v15, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20eb1a.  if v2 != 0 then goto L20eb4c;
  #L20eb1e.  v5:= new `java.lang.StringBuilder`;
  #L20eb22.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20eb28.  v6:= ", " @kind object;
  #L20eb2c.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20eb32.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20eb38.  v6:= " body" @kind object;
  #L20eb3c.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20eb42.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20eb48.  v5:= temp @kind object;
  #L20eb4a.  goto L20eb4e;
  #L20eb4c.  v5:= v11 @kind object;
  #L20eb4e.  call temp:= `append`(v15, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20eb54.  v5:= 41I;
  #L20eb58.  call temp:= `append`(v15, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L20eb5e.  call temp:= `toString`(v15) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20eb64.  v5:= temp @kind object;
  #L20eb66.  call `log`(v10, v5) @signature `Lh/o0/a$b;.log:(Ljava/lang/String;)V` @kind interface;
  #L20eb6c.  if v2 == 0 then goto L20ed96;
  #L20eb70.  call temp:= `headers`(v0) @signature `Lh/i0;.headers:()Lh/y;` @kind virtual;
  #L20eb76.  v2:= temp @kind object;
  #L20eb78.  call temp:= `size`(v2) @signature `Lh/y;.size:()I` @kind virtual;
  #L20eb7e.  v5:= temp;
  #L20eb80.  v6:= 0I;
  #L20eb82.  if v6 >= v5 then goto L20eb92;
  #L20eb86.  call `a`(v1, v2, v6) @signature `Lh/o0/a;.a:(Lh/y;I)V` @kind direct;
  #L20eb8c.  v6:= v6 + 1;
  #L20eb90.  goto L20eb82;
  #L20eb92.  if v4 == 0 then goto L20ed88;
  #L20eb96.  call temp:= `hasBody`(v0) @signature `Lh/n0/h/e;.hasBody:(Lh/i0;)Z` @kind static;
  #L20eb9c.  v4:= temp;
  #L20eb9e.  if v4 != 0 then goto L20eba6;
  #L20eba2.  goto L20ed88;
  #L20eba6.  call temp:= `headers`(v0) @signature `Lh/i0;.headers:()Lh/y;` @kind virtual;
  #L20ebac.  v4:= temp @kind object;
  #L20ebae.  call temp:= `a`(v4) @signature `Lh/o0/a;.a:(Lh/y;)Z` @kind static;
  #L20ebb4.  v4:= temp;
  #L20ebb6.  if v4 == 0 then goto L20ebcc;
  #L20ebba.  v2:= v1.`h.o0.a.a` @type ^`h.o0.a$b` @kind object;
  #L20ebbe.  v3:= "<-- END HTTP (encoded body omitted)" @kind object;
  #L20ebc2.  call `log`(v2, v3) @signature `Lh/o0/a$b;.log:(Ljava/lang/String;)V` @kind interface;
  #L20ebc8.  goto L20ed96;
  #L20ebcc.  call temp:= `source`(v3) @signature `Lh/j0;.source:()Li/g;` @kind virtual;
  #L20ebd2.  v4:= temp @kind object;
  #L20ebd4.  v5:= 9223372036854775807L;
  #L20ebde.  call temp:= `request`(v4, v5) @signature `Li/g;.request:(J)Z` @kind interface;
  #L20ebe4.  call temp:= `buffer`(v4) @signature `Li/g;.buffer:()Li/e;` @kind interface;
  #L20ebea.  v4:= temp @kind object;
  #L20ebec.  v5:= "Content-Encoding" @kind object;
  #L20ebf0.  call temp:= `get`(v2, v5) @signature `Lh/y;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L20ebf6.  v2:= temp @kind object;
  #L20ebf8.  v5:= "gzip" @kind object;
  #L20ebfc.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L20ec02.  v2:= temp;
  #L20ec04.  v5:= 0I;
  #L20ec06.  if v2 == 0 then goto L20ec58;
  #L20ec0a.  call temp:= `size`(v4) @signature `Li/e;.size:()J` @kind virtual;
  #L20ec10.  v6:= temp @kind wide;
  #L20ec12.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L20ec18.  v2:= temp @kind object;
  #L20ec1a.  v6:= new `i.m`;
  #L20ec1e.  call temp:= `clone`(v4) @signature `Li/e;.clone:()Li/e;` @kind virtual;
  #L20ec24.  v4:= temp @kind object;
  #L20ec26.  call `<init>`(v6, v4) @signature `Li/m;.<init>:(Li/z;)V` @kind direct;
  #L20ec2c.  v4:= new `i.e`;
  #L20ec30.  call `<init>`(v4) @signature `Li/e;.<init>:()V` @kind direct;
  #L20ec36.  call temp:= `writeAll`(v4, v6) @signature `Li/e;.writeAll:(Li/z;)J` @kind virtual;
  #L20ec3c.  call `close`(v6) @signature `Li/m;.close:()V` @kind virtual;
  #L20ec42.  goto L20ec5a;
  #L20ec44.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20ec46.  v5:= v6 @kind object;
  #L20ec48.  goto L20ec4c;
  #L20ec4a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20ec4c.  if v5 == 0 then goto L20ec56;
  #L20ec50.  call `close`(v5) @signature `Li/m;.close:()V` @kind virtual;
  #L20ec56.  throw v0;
  #L20ec58.  v2:= v5 @kind object;
  #L20ec5a.  v5:= `@@h.o0.a.d` @type ^`java.nio.charset.Charset` @kind object;
  #L20ec5e.  call temp:= `contentType`(v3) @signature `Lh/j0;.contentType:()Lh/b0;` @kind virtual;
  #L20ec64.  v3:= temp @kind object;
  #L20ec66.  if v3 == 0 then goto L20ec76;
  #L20ec6a.  v5:= `@@h.o0.a.d` @type ^`java.nio.charset.Charset` @kind object;
  #L20ec6e.  call temp:= `charset`(v3, v5) @signature `Lh/b0;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind virtual;
  #L20ec74.  v5:= temp @kind object;
  #L20ec76.  call temp:= `a`(v4) @signature `Lh/o0/a;.a:(Li/e;)Z` @kind static;
  #L20ec7c.  v3:= temp;
  #L20ec7e.  if v3 != 0 then goto L20ecc8;
  #L20ec82.  v2:= v1.`h.o0.a.a` @type ^`h.o0.a$b` @kind object;
  #L20ec86.  call `log`(v2, v11) @signature `Lh/o0/a$b;.log:(Ljava/lang/String;)V` @kind interface;
  #L20ec8c.  v2:= v1.`h.o0.a.a` @type ^`h.o0.a$b` @kind object;
  #L20ec90.  v3:= new `java.lang.StringBuilder`;
  #L20ec94.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20ec9a.  v5:= "<-- END HTTP (binary " @kind object;
  #L20ec9e.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20eca4.  call temp:= `size`(v4) @signature `Li/e;.size:()J` @kind virtual;
  #L20ecaa.  v4:= temp @kind wide;
  #L20ecac.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L20ecb2.  call temp:= `append`(v3, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20ecb8.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20ecbe.  v3:= temp @kind object;
  #L20ecc0.  call `log`(v2, v3) @signature `Lh/o0/a$b;.log:(Ljava/lang/String;)V` @kind interface;
  #L20ecc6.  return v0 @kind object;
  #L20ecc8.  v6:= 0L;
  #L20eccc.  v3:= lcmp(v17, v6);
  #L20ecd0.  if v3 == 0 then goto L20ecf8;
  #L20ecd4.  v3:= v1.`h.o0.a.a` @type ^`h.o0.a$b` @kind object;
  #L20ecd8.  call `log`(v3, v11) @signature `Lh/o0/a$b;.log:(Ljava/lang/String;)V` @kind interface;
  #L20ecde.  v3:= v1.`h.o0.a.a` @type ^`h.o0.a$b` @kind object;
  #L20ece2.  call temp:= `clone`(v4) @signature `Li/e;.clone:()Li/e;` @kind virtual;
  #L20ece8.  v6:= temp @kind object;
  #L20ecea.  call temp:= `readString`(v6, v5) @signature `Li/e;.readString:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L20ecf0.  v5:= temp @kind object;
  #L20ecf2.  call `log`(v3, v5) @signature `Lh/o0/a$b;.log:(Ljava/lang/String;)V` @kind interface;
  #L20ecf8.  v3:= "<-- END HTTP (" @kind object;
  #L20ecfc.  if v2 == 0 then goto L20ed4c;
  #L20ed00.  v5:= v1.`h.o0.a.a` @type ^`h.o0.a$b` @kind object;
  #L20ed04.  v6:= new `java.lang.StringBuilder`;
  #L20ed08.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20ed0e.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20ed14.  call temp:= `size`(v4) @signature `Li/e;.size:()J` @kind virtual;
  #L20ed1a.  v3:= temp @kind wide;
  #L20ed1c.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L20ed22.  v3:= "-byte, " @kind object;
  #L20ed26.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20ed2c.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20ed32.  v2:= "-gzipped-byte body)" @kind object;
  #L20ed36.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20ed3c.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20ed42.  v2:= temp @kind object;
  #L20ed44.  call `log`(v5, v2) @signature `Lh/o0/a$b;.log:(Ljava/lang/String;)V` @kind interface;
  #L20ed4a.  goto L20ed96;
  #L20ed4c.  v2:= v1.`h.o0.a.a` @type ^`h.o0.a$b` @kind object;
  #L20ed50.  v5:= new `java.lang.StringBuilder`;
  #L20ed54.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20ed5a.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20ed60.  call temp:= `size`(v4) @signature `Li/e;.size:()J` @kind virtual;
  #L20ed66.  v3:= temp @kind wide;
  #L20ed68.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L20ed6e.  v3:= v16 @kind object;
  #L20ed72.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20ed78.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20ed7e.  v3:= temp @kind object;
  #L20ed80.  call `log`(v2, v3) @signature `Lh/o0/a$b;.log:(Ljava/lang/String;)V` @kind interface;
  #L20ed86.  goto L20ed96;
  #L20ed88.  v2:= v1.`h.o0.a.a` @type ^`h.o0.a$b` @kind object;
  #L20ed8c.  v3:= "<-- END HTTP" @kind object;
  #L20ed90.  call `log`(v2, v3) @signature `Lh/o0/a$b;.log:(Ljava/lang/String;)V` @kind interface;
  #L20ed96.  return v0 @kind object;
  #L20ed98.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L20ed9a.  v2:= v0 @kind object;
  #L20ed9c.  v0:= v1.`h.o0.a.a` @type ^`h.o0.a$b` @kind object;
  #L20eda0.  v3:= new `java.lang.StringBuilder`;
  #L20eda4.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20edaa.  v4:= "<-- HTTP FAILED: " @kind object;
  #L20edae.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20edb4.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20edba.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20edc0.  v3:= temp @kind object;
  #L20edc2.  call `log`(v0, v3) @signature `Lh/o0/a$b;.log:(Ljava/lang/String;)V` @kind interface;
  #L20edc8.  throw v2;
  catch `java.lang.Exception` @[L20ea08..L20ea10] goto L20ed98;
  catch `java.lang.Throwable` @[L20ec1a..L20ec2c] goto L20ec4a;
  catch `java.lang.Throwable` @[L20ec2c..L20ec3c] goto L20ec44;
}
procedure `h.o0.a` `setLevel`(`h.o0.a` v1 @kind this, `h.o0.a$a` v2 @kind object) @signature `Lh/o0/a;.setLevel:(Lh/o0/a$a;)Lh/o0/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20ee00.  if v2 == 0 then goto L20ee0a;
  #L20ee04.  v1.`h.o0.a.c` @type ^`h.o0.a$a` := v2 @kind object;
  #L20ee08.  return v1 @kind object;
  #L20ee0a.  v2:= new `java.lang.NullPointerException`;
  #L20ee0e.  v0:= "level == null. Use Level.NONE instead." @kind object;
  #L20ee12.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20ee18.  throw v2;
}
