record `g.a.e` @kind class @AccessFlag  extends `java.lang.ClassLoader` @kind class {
  `java.lang.String` `g.a.e.a` @AccessFlag PRIVATE_FINAL;
  `java.io.File` `g.a.e.b` @AccessFlag PRIVATE_FINAL;
  `int` `g.a.e.c` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `g.a.e.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `g.a.e.e` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `g.a.e.f` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `g.a.e.g` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `g.a.e.h` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `g.a.e.i` @AccessFlag PRIVATE;
  `java.util.Map` `g.a.e.j` @AccessFlag PRIVATE;
}
global `java.util.concurrent.ConcurrentMap` `@@g.a.e.k` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Map` `@@g.a.e.l` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Map` `@@g.a.e.m` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lg/a/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1edefc.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L1edf00.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L1edf06.  `@@g.a.e.k` @type ^`java.util.concurrent.ConcurrentMap` := v0 @kind object;
  #L1edf0a.  v0:= new `java.util.WeakHashMap`;
  #L1edf0e.  call `<init>`(v0) @signature `Ljava/util/WeakHashMap;.<init>:()V` @kind direct;
  #L1edf14.  `@@g.a.e.l` @type ^`java.util.Map` := v0 @kind object;
  #L1edf18.  v0:= new `java.util.WeakHashMap`;
  #L1edf1c.  call `<init>`(v0) @signature `Ljava/util/WeakHashMap;.<init>:()V` @kind direct;
  #L1edf22.  `@@g.a.e.m` @type ^`java.util.Map` := v0 @kind object;
  #L1edf26.  return @kind void;
}
procedure `void` `<init>`(`g.a.e` v2 @kind this, `java.lang.ClassLoader` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object, `java.util.List` v6 @kind object, `java.util.List` v7 @kind object) @signature `Lg/a/e;.<init>:(Ljava/lang/ClassLoader;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1edf38.  call `<init>`(v2, v3) @signature `Ljava/lang/ClassLoader;.<init>:(Ljava/lang/ClassLoader;)V` @kind direct;
  #L1edf3e.  v3:= new `java.util.ArrayList`;
  #L1edf42.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1edf48.  v2.`g.a.e.d` @type ^`java.util.List` := v3 @kind object;
  #L1edf4c.  v3:= new `java.util.ArrayList`;
  #L1edf50.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1edf56.  v2.`g.a.e.f` @type ^`java.util.List` := v3 @kind object;
  #L1edf5a.  v3:= new `java.util.ArrayList`;
  #L1edf5e.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1edf64.  v2.`g.a.e.g` @type ^`java.util.List` := v3 @kind object;
  #L1edf68.  v3:= new `java.util.HashMap`;
  #L1edf6c.  call `<init>`(v3) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L1edf72.  v2.`g.a.e.h` @type ^`java.util.Map` := v3 @kind object;
  #L1edf76.  v3:= new `java.util.HashMap`;
  #L1edf7a.  call `<init>`(v3) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L1edf80.  v2.`g.a.e.i` @type ^`java.util.Map` := v3 @kind object;
  #L1edf84.  v3:= new `java.util.HashMap`;
  #L1edf88.  call `<init>`(v3) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L1edf8e.  v2.`g.a.e.j` @type ^`java.util.Map` := v3 @kind object;
  #L1edf92.  v2.`g.a.e.e` @type ^`java.lang.String` := v4 @kind object;
  #L1edf96.  if v6 == 0 then goto L1ee004;
  #L1edf9a.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1edfa0.  v3:= temp @kind object;
  #L1edfa2.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1edfa8.  v6:= temp;
  #L1edfaa.  if v6 != 0 then goto L1edfb0;
  #L1edfae.  goto L1ee004;
  #L1edfb0.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1edfb6.  v6:= temp @kind object;
  #L1edfb8.  v6:= (`java.lang.String`) v6 @kind object;
  #L1edfbc.  v0:= "/" @kind object;
  #L1edfc0.  v1:= "." @kind object;
  #L1edfc4.  call temp:= `replace`(v6, v1, v0) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L1edfca.  v6:= temp @kind object;
  #L1edfcc.  call temp:= `endsWith`(v6, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1edfd2.  v1:= temp;
  #L1edfd4.  if v1 != 0 then goto L1edff8;
  #L1edfd8.  v1:= new `java.lang.StringBuilder`;
  #L1edfdc.  call temp:= `valueOf`(v6) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1edfe2.  v6:= temp @kind object;
  #L1edfe4.  call `<init>`(v1, v6) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1edfea.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1edff0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1edff6.  v6:= temp @kind object;
  #L1edff8.  v0:= v2.`g.a.e.f` @type ^`java.util.List` @kind object;
  #L1edffc.  call temp:= `add`(v0, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1ee002.  goto L1edfa2;
  #L1ee004.  if v7 == 0 then goto L1ee036;
  #L1ee008.  call temp:= `iterator`(v7) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1ee00e.  v3:= temp @kind object;
  #L1ee010.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1ee016.  v6:= temp;
  #L1ee018.  if v6 != 0 then goto L1ee01e;
  #L1ee01c.  goto L1ee036;
  #L1ee01e.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1ee024.  v6:= temp @kind object;
  #L1ee026.  v6:= (`java.lang.String`) v6 @kind object;
  #L1ee02a.  v7:= v2.`g.a.e.g` @type ^`java.util.List` @kind object;
  #L1ee02e.  call temp:= `add`(v7, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1ee034.  goto L1ee010;
  #L1ee036.  v3:= 0I;
  #L1ee038.  if v5 == 0 then goto L1ee04e;
  #L1ee03c.  v2.`g.a.e.a` @type ^`java.lang.String` := v5 @kind object;
  #L1ee040.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1ee046.  v5:= temp;
  #L1ee048.  v2.`g.a.e.c` @type ^`int` := v5;
  #L1ee04c.  goto L1ee0ae;
  #L1ee04e.  v5:= constclass @type ^`g.a.e` @kind object;
  #L1ee052.  v6:= "ShadowClassLoader.class" @kind object;
  #L1ee056.  call temp:= `getResource`(v5, v6) @signature `Ljava/lang/Class;.getResource:(Ljava/lang/String;)Ljava/net/URL;` @kind virtual;
  #L1ee05c.  v5:= temp @kind object;
  #L1ee05e.  if v5 != 0 then goto L1ee066;
  #L1ee062.  v5:= 0I;
  #L1ee064.  goto L1ee06e;
  #L1ee066.  call temp:= `toString`(v5) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ee06c.  v5:= temp @kind object;
  #L1ee06e.  if v5 == 0 then goto L1ee238;
  #L1ee072.  v6:= "lombok/launch/ShadowClassLoader.class" @kind object;
  #L1ee076.  call temp:= `endsWith`(v5, v6) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1ee07c.  v6:= temp;
  #L1ee07e.  if v6 != 0 then goto L1ee086;
  #L1ee082.  goto L1ee238;
  #L1ee086.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1ee08c.  v6:= temp;
  #L1ee08e.  v6:= v6 + -37;
  #L1ee092.  v2.`g.a.e.c` @type ^`int` := v6;
  #L1ee096.  v6:= v2.`g.a.e.c` @type ^`int`;
  #L1ee09a.  call temp:= `substring`(v5, v3, v6) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1ee0a0.  v5:= temp @kind object;
  #L1ee0a2.  call temp:= `e`(v5) @signature `Lg/a/e;.e:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1ee0a8.  v5:= temp @kind object;
  #L1ee0aa.  v2.`g.a.e.a` @type ^`java.lang.String` := v5 @kind object;
  #L1ee0ae.  v5:= v2.`g.a.e.a` @type ^`java.lang.String` @kind object;
  #L1ee0b2.  v6:= "jar:file:" @kind object;
  #L1ee0b6.  call temp:= `startsWith`(v5, v6) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1ee0bc.  v5:= temp;
  #L1ee0be.  if v5 == 0 then goto L1ee102;
  #L1ee0c2.  v5:= v2.`g.a.e.a` @type ^`java.lang.String` @kind object;
  #L1ee0c6.  v6:= "!/" @kind object;
  #L1ee0ca.  call temp:= `endsWith`(v5, v6) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1ee0d0.  v5:= temp;
  #L1ee0d2.  if v5 == 0 then goto L1ee102;
  #L1ee0d6.  v5:= new `java.io.File`;
  #L1ee0da.  v6:= v2.`g.a.e.a` @type ^`java.lang.String` @kind object;
  #L1ee0de.  v7:= 9I;
  #L1ee0e2.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1ee0e8.  v0:= temp;
  #L1ee0ea.  v0:= v0 + -2;
  #L1ee0ee.  call temp:= `substring`(v6, v7, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1ee0f4.  v6:= temp @kind object;
  #L1ee0f6.  call `<init>`(v5, v6) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ee0fc.  v2.`g.a.e.b` @type ^`java.io.File` := v5 @kind object;
  #L1ee100.  goto L1ee146;
  #L1ee102.  v5:= v2.`g.a.e.a` @type ^`java.lang.String` @kind object;
  #L1ee106.  v6:= "file:" @kind object;
  #L1ee10a.  call temp:= `startsWith`(v5, v6) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1ee110.  v5:= temp;
  #L1ee112.  if v5 == 0 then goto L1ee134;
  #L1ee116.  v5:= new `java.io.File`;
  #L1ee11a.  v6:= v2.`g.a.e.a` @type ^`java.lang.String` @kind object;
  #L1ee11e.  v7:= 5I;
  #L1ee120.  call temp:= `substring`(v6, v7) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1ee126.  v6:= temp @kind object;
  #L1ee128.  call `<init>`(v5, v6) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ee12e.  v2.`g.a.e.b` @type ^`java.io.File` := v5 @kind object;
  #L1ee132.  goto L1ee146;
  #L1ee134.  v5:= new `java.io.File`;
  #L1ee138.  v6:= v2.`g.a.e.a` @type ^`java.lang.String` @kind object;
  #L1ee13c.  call `<init>`(v5, v6) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ee142.  v2.`g.a.e.b` @type ^`java.io.File` := v5 @kind object;
  #L1ee146.  v5:= new `java.lang.StringBuilder`;
  #L1ee14a.  v6:= "shadow.override." @kind object;
  #L1ee14e.  call `<init>`(v5, v6) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ee154.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ee15a.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ee160.  v4:= temp @kind object;
  #L1ee162.  call temp:= `getProperty`(v4) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1ee168.  v4:= temp @kind object;
  #L1ee16a.  if v4 == 0 then goto L1ee236;
  #L1ee16e.  call temp:= `isEmpty`(v4) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L1ee174.  v5:= temp;
  #L1ee176.  if v5 != 0 then goto L1ee236;
  #L1ee17a.  v5:= new `java.lang.StringBuilder`;
  #L1ee17e.  v6:= "\\s*" @kind object;
  #L1ee182.  call `<init>`(v5, v6) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ee188.  v7:= `@@java.io.File.pathSeparatorChar` @type ^`char` @kind char;
  #L1ee18c.  v0:= 59I;
  #L1ee190.  if v7 != v0 then goto L1ee19a;
  #L1ee194.  v7:= ";" @kind object;
  #L1ee198.  goto L1ee19e;
  #L1ee19a.  v7:= ":" @kind object;
  #L1ee19e.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ee1a4.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ee1aa.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ee1b0.  v5:= temp @kind object;
  #L1ee1b2.  call temp:= `split`(v4, v5) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L1ee1b8.  v4:= temp @kind object;
  #L1ee1ba.  v5:= length @variable v4;
  #L1ee1bc.  v6:= 0I;
  #L1ee1be.  if v6 < v5 then goto L1ee1c4;
  #L1ee1c2.  goto L1ee236;
  #L1ee1c4.  v7:= v4[v6] @kind object;
  #L1ee1c8.  v0:= "/*" @kind object;
  #L1ee1cc.  call temp:= `endsWith`(v7, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1ee1d2.  v0:= temp;
  #L1ee1d4.  if v0 != 0 then goto L1ee216;
  #L1ee1d8.  v0:= new `java.lang.StringBuilder`;
  #L1ee1dc.  v1:= `@@java.io.File.separator` @type ^`java.lang.String` @kind object;
  #L1ee1e0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1ee1e6.  v1:= temp @kind object;
  #L1ee1e8.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ee1ee.  v1:= "*" @kind object;
  #L1ee1f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ee1f8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ee1fe.  v0:= temp @kind object;
  #L1ee200.  call temp:= `endsWith`(v7, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1ee206.  v0:= temp;
  #L1ee208.  if v0 == 0 then goto L1ee20e;
  #L1ee20c.  goto L1ee216;
  #L1ee20e.  call `addOverrideClasspathEntry`(v2, v7) @signature `Lg/a/e;.addOverrideClasspathEntry:(Ljava/lang/String;)V` @kind virtual;
  #L1ee214.  goto L1ee230;
  #L1ee216.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1ee21c.  v0:= temp;
  #L1ee21e.  v0:= v0 + -2;
  #L1ee222.  call temp:= `substring`(v7, v3, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1ee228.  v7:= temp @kind object;
  #L1ee22a.  call `addOverrideJarDir`(v2, v7) @signature `Lg/a/e;.addOverrideJarDir:(Ljava/lang/String;)V` @kind virtual;
  #L1ee230.  v6:= v6 + 1;
  #L1ee234.  goto L1ee1be;
  #L1ee236.  return @kind void;
  #L1ee238.  v3:= constclass @type ^`g.a.e` @kind object;
  #L1ee23c.  call temp:= `getClassLoader`(v3) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L1ee242.  v3:= temp @kind object;
  #L1ee244.  v4:= new `java.lang.RuntimeException`;
  #L1ee248.  v5:= new `java.lang.StringBuilder`;
  #L1ee24c.  v6:= "ShadowLoader can't find itself. SCL loader type: " @kind object;
  #L1ee250.  call `<init>`(v5, v6) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ee256.  if v3 != 0 then goto L1ee260;
  #L1ee25a.  v3:= "*NULL*" @kind object;
  #L1ee25e.  goto L1ee270;
  #L1ee260.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1ee266.  v3:= temp @kind object;
  #L1ee268.  call temp:= `toString`(v3) @signature `Ljava/lang/Class;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ee26e.  v3:= temp @kind object;
  #L1ee270.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ee276.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ee27c.  v3:= temp @kind object;
  #L1ee27e.  call `<init>`(v4, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ee284.  throw v4;
}
procedure `java.net.URL` `a`(`g.a.e` v6 @kind this, `java.lang.String` v7 @kind object, `java.lang.String` v8 @kind object, `java.io.File` v9 @kind object) @signature `Lg/a/e;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/net/URL;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1ed86c.  v0:= "!/" @kind object;
  #L1ed870.  v1:= "jar:" @kind object;
  #L1ed874.  call temp:= `isDirectory`(v9) @signature `Ljava/io/File;.isDirectory:()Z` @kind virtual;
  #L1ed87a.  v2:= temp;
  #L1ed87c.  v3:= 0I;
  #L1ed87e.  if v2 == 0 then goto L1ed8f0;
  #L1ed882.  if v8 == 0 then goto L1ed8ba;
  #L1ed886.  v0:= new `java.io.File`;
  #L1ed88a.  call `<init>`(v0, v9, v8) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L1ed890.  call temp:= `isFile`(v0) @signature `Ljava/io/File;.isFile:()Z` @kind virtual;
  #L1ed896.  v8:= temp;
  #L1ed898.  if v8 == 0 then goto L1ed8ba;
  #L1ed89c.  call temp:= `canRead`(v0) @signature `Ljava/io/File;.canRead:()Z` @kind virtual;
  #L1ed8a2.  v8:= temp;
  #L1ed8a4.  if v8 == 0 then goto L1ed8ba;
  #L1ed8a8.  call temp:= `toURI`(v0) @signature `Ljava/io/File;.toURI:()Ljava/net/URI;` @kind virtual;
  #L1ed8ae.  v7:= temp @kind object;
  #L1ed8b0.  call temp:= `toURL`(v7) @signature `Ljava/net/URI;.toURL:()Ljava/net/URL;` @kind virtual;
  #L1ed8b6.  v7:= temp @kind object;
  #L1ed8b8.  return v7 @kind object;
  #L1ed8ba.  v8:= new `java.io.File`;
  #L1ed8be.  call `<init>`(v8, v9, v7) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L1ed8c4.  call temp:= `isFile`(v8) @signature `Ljava/io/File;.isFile:()Z` @kind virtual;
  #L1ed8ca.  v7:= temp;
  #L1ed8cc.  if v7 == 0 then goto L1ed8ee;
  #L1ed8d0.  call temp:= `canRead`(v8) @signature `Ljava/io/File;.canRead:()Z` @kind virtual;
  #L1ed8d6.  v7:= temp;
  #L1ed8d8.  if v7 == 0 then goto L1ed8ee;
  #L1ed8dc.  call temp:= `toURI`(v8) @signature `Ljava/io/File;.toURI:()Ljava/net/URI;` @kind virtual;
  #L1ed8e2.  v7:= temp @kind object;
  #L1ed8e4.  call temp:= `toURL`(v7) @signature `Ljava/net/URI;.toURL:()Ljava/net/URL;` @kind virtual;
  #L1ed8ea.  v7:= temp @kind object;
  #L1ed8ec.  return v7 @kind object;
  #L1ed8ee.  return v3 @kind object;
  #L1ed8f0.  call temp:= `isFile`(v9) @signature `Ljava/io/File;.isFile:()Z` @kind virtual;
  #L1ed8f6.  v2:= temp;
  #L1ed8f8.  if v2 == 0 then goto L1ed9c4;
  #L1ed8fc.  call temp:= `canRead`(v9) @signature `Ljava/io/File;.canRead:()Z` @kind virtual;
  #L1ed902.  v2:= temp;
  #L1ed904.  if v2 != 0 then goto L1ed90a;
  #L1ed908.  goto L1ed9c4;
  #L1ed90a.  call temp:= `getCanonicalFile`(v9) @signature `Ljava/io/File;.getCanonicalFile:()Ljava/io/File;` @kind virtual;
  #L1ed910.  v9:= temp @kind object;
  #L1ed912.  goto L1ed91c;
  #L1ed914.  call temp:= `getAbsoluteFile`(v9) @signature `Ljava/io/File;.getAbsoluteFile:()Ljava/io/File;` @kind virtual;
  #L1ed91a.  v9:= temp @kind object;
  #L1ed91c.  call temp:= `getAbsolutePath`(v9) @signature `Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;` @kind virtual;
  #L1ed922.  v2:= temp @kind object;
  #L1ed924.  call temp:= `c`(v6, v2) @signature `Lg/a/e;.c:(Ljava/lang/String;)Ljava/util/Set;` @kind direct;
  #L1ed92a.  v2:= temp @kind object;
  #L1ed92c.  call temp:= `toURI`(v9) @signature `Ljava/io/File;.toURI:()Ljava/net/URI;` @kind virtual;
  #L1ed932.  v9:= temp @kind object;
  #L1ed934.  call temp:= `toString`(v9) @signature `Ljava/net/URI;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ed93a.  v9:= temp @kind object;
  #L1ed93c.  call temp:= `contains`(v2, v8) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1ed942.  v4:= temp;
  #L1ed944.  if v4 == 0 then goto L1ed980;
  #L1ed948.  v4:= new `java.net.URI`;
  #L1ed94c.  v5:= new `java.lang.StringBuilder`;
  #L1ed950.  call `<init>`(v5, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ed956.  call temp:= `append`(v5, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed95c.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed962.  call temp:= `append`(v5, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed968.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ed96e.  v8:= temp @kind object;
  #L1ed970.  call `<init>`(v4, v8) @signature `Ljava/net/URI;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ed976.  call temp:= `toURL`(v4) @signature `Ljava/net/URI;.toURL:()Ljava/net/URL;` @kind virtual;
  #L1ed97c.  v7:= temp @kind object;
  #L1ed97e.  return v7 @kind object;
  #L1ed980.  call temp:= `contains`(v2, v7) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1ed986.  v8:= temp;
  #L1ed988.  if v8 == 0 then goto L1ed9c4;
  #L1ed98c.  v8:= new `java.net.URI`;
  #L1ed990.  v2:= new `java.lang.StringBuilder`;
  #L1ed994.  call `<init>`(v2, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ed99a.  call temp:= `append`(v2, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed9a0.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed9a6.  call temp:= `append`(v2, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed9ac.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ed9b2.  v7:= temp @kind object;
  #L1ed9b4.  call `<init>`(v8, v7) @signature `Ljava/net/URI;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ed9ba.  call temp:= `toURL`(v8) @signature `Ljava/net/URI;.toURL:()Ljava/net/URL;` @kind virtual;
  #L1ed9c0.  v7:= temp @kind object;
  #L1ed9c2.  return v7 @kind object;
  #L1ed9c4.  return v3 @kind object;
  catch `java.net.MalformedURLException` @[L1ed886..L1ed8ec] goto L1ed8ee;
  catch `java.lang.Exception` @[L1ed90a..L1ed912] goto L1ed914;
  catch `java.lang.Exception` @[L1ed93c..L1ed97e] goto L1ed980;
  catch `java.lang.Exception` @[L1ed980..L1ed9c2] goto L1ed9c4;
}
procedure `java.net.URL` `a`(`g.a.e` v4 @kind this, `java.lang.String` v5 @kind object, `boolean` v6 ) @signature `Lg/a/e;.a:(Ljava/lang/String;Z)Ljava/net/URL;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1eda7c.  v0:= ".class" @kind object;
  #L1eda80.  call temp:= `endsWith`(v5, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1eda86.  v0:= temp;
  #L1eda88.  v1:= 0I;
  #L1eda8a.  if v0 == 0 then goto L1edad4;
  #L1eda8e.  v0:= new `java.lang.StringBuilder`;
  #L1eda92.  v2:= 0I;
  #L1eda94.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1eda9a.  v3:= temp;
  #L1eda9c.  v3:= v3 + -6;
  #L1edaa0.  call temp:= `substring`(v5, v2, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1edaa6.  v2:= temp @kind object;
  #L1edaa8.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1edaae.  v2:= temp @kind object;
  #L1edab0.  call `<init>`(v0, v2) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1edab6.  v2:= ".SCL." @kind object;
  #L1edaba.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1edac0.  v2:= v4.`g.a.e.e` @type ^`java.lang.String` @kind object;
  #L1edac4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1edaca.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1edad0.  v0:= temp @kind object;
  #L1edad2.  goto L1edad6;
  #L1edad4.  v0:= v1 @kind object;
  #L1edad6.  v2:= v4.`g.a.e.d` @type ^`java.util.List` @kind object;
  #L1edada.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1edae0.  v2:= temp @kind object;
  #L1edae2.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1edae8.  v3:= temp;
  #L1edaea.  if v3 != 0 then goto L1edb86;
  #L1edaee.  v2:= v4.`g.a.e.d` @type ^`java.util.List` @kind object;
  #L1edaf2.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1edaf8.  v2:= temp;
  #L1edafa.  if v2 != 0 then goto L1edb22;
  #L1edafe.  if v6 == 0 then goto L1edb04;
  #L1edb02.  return v1 @kind object;
  #L1edb04.  if v0 == 0 then goto L1edb16;
  #L1edb08.  call temp:= `d`(v4, v0) @signature `Lg/a/e;.d:(Ljava/lang/String;)Ljava/net/URL;` @kind direct;
  #L1edb0e.  v6:= temp @kind object;
  #L1edb10.  if v6 == 0 then goto L1edb16;
  #L1edb14.  return v6 @kind object;
  #L1edb16.  call temp:= `d`(v4, v5) @signature `Lg/a/e;.d:(Ljava/lang/String;)Ljava/net/URL;` @kind direct;
  #L1edb1c.  v5:= temp @kind object;
  #L1edb1e.  return v5 @kind object;
  #L1edb20.  return v1 @kind object;
  #L1edb22.  v2:= v4.`g.a.e.b` @type ^`java.io.File` @kind object;
  #L1edb26.  call temp:= `a`(v4, v5, v0, v2) @signature `Lg/a/e;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/net/URL;` @kind direct;
  #L1edb2c.  v2:= temp @kind object;
  #L1edb2e.  if v2 == 0 then goto L1edb34;
  #L1edb32.  return v2 @kind object;
  #L1edb34.  if v0 == 0 then goto L1edb5e;
  #L1edb38.  call temp:= `getResource`(v4, v0) @signature `Ljava/lang/ClassLoader;.getResource:(Ljava/lang/String;)Ljava/net/URL;` @kind super;
  #L1edb3e.  v2:= temp @kind object;
  #L1edb40.  if v2 == 0 then goto L1edb5e;
  #L1edb44.  if v6 == 0 then goto L1edb5c;
  #L1edb48.  call temp:= `toString`(v2) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L1edb4e.  v3:= temp @kind object;
  #L1edb50.  call temp:= `d`(v4, v3, v0) @signature `Lg/a/e;.d:(Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L1edb56.  v0:= temp;
  #L1edb58.  if v0 == 0 then goto L1edb5e;
  #L1edb5c.  return v2 @kind object;
  #L1edb5e.  call temp:= `getResource`(v4, v5) @signature `Ljava/lang/ClassLoader;.getResource:(Ljava/lang/String;)Ljava/net/URL;` @kind super;
  #L1edb64.  v0:= temp @kind object;
  #L1edb66.  if v0 == 0 then goto L1edb84;
  #L1edb6a.  if v6 == 0 then goto L1edb82;
  #L1edb6e.  call temp:= `toString`(v0) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L1edb74.  v6:= temp @kind object;
  #L1edb76.  call temp:= `d`(v4, v6, v5) @signature `Lg/a/e;.d:(Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L1edb7c.  v5:= temp;
  #L1edb7e.  if v5 == 0 then goto L1edb84;
  #L1edb82.  return v0 @kind object;
  #L1edb84.  return v1 @kind object;
  #L1edb86.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1edb8c.  v3:= temp @kind object;
  #L1edb8e.  v3:= (`java.io.File`) v3 @kind object;
  #L1edb92.  call temp:= `a`(v4, v5, v0, v3) @signature `Lg/a/e;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/net/URL;` @kind direct;
  #L1edb98.  v3:= temp @kind object;
  #L1edb9a.  if v3 == 0 then goto L1edae2;
  #L1edb9e.  return v3 @kind object;
  catch `java.io.IOException` @[L1edb08..L1edb10] goto L1edb16;
  catch `java.io.IOException` @[L1edb16..L1edb1e] goto L1edb20;
}
procedure `boolean` `a`(`java.io.InputStream` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lg/a/e;.a:(Ljava/io/InputStream;Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1ed54c.  v0:= new `java.io.BufferedReader`;
  #L1ed550.  v1:= new `java.io.InputStreamReader`;
  #L1ed554.  v2:= "UTF-8" @kind object;
  #L1ed558.  call `<init>`(v1, v3, v2) @signature `Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;Ljava/lang/String;)V` @kind direct;
  #L1ed55e.  call `<init>`(v0, v1) @signature `Ljava/io/BufferedReader;.<init>:(Ljava/io/Reader;)V` @kind direct;
  #L1ed564.  call temp:= `readLine`(v0) @signature `Ljava/io/BufferedReader;.readLine:()Ljava/lang/String;` @kind virtual;
  #L1ed56a.  v3:= temp @kind object;
  #L1ed56c.  v1:= 0I;
  #L1ed56e.  if v3 != 0 then goto L1ed574;
  #L1ed572.  return v1;
  #L1ed574.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L1ed57a.  v3:= temp @kind object;
  #L1ed57c.  call temp:= `isEmpty`(v3) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L1ed582.  v2:= temp;
  #L1ed584.  if v2 != 0 then goto L1ed564;
  #L1ed588.  call temp:= `charAt`(v3, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1ed58e.  v1:= temp;
  #L1ed590.  v2:= 35I;
  #L1ed594.  if v1 != v2 then goto L1ed59a;
  #L1ed598.  goto L1ed564;
  #L1ed59a.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1ed5a0.  v3:= temp;
  #L1ed5a2.  if v3 == 0 then goto L1ed564;
  #L1ed5a6.  v3:= 1I;
  #L1ed5a8.  return v3;
}
procedure `boolean` `a`(`g.a.e` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lg/a/e;.a:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1ed0d4.  v0:= v2.`g.a.e.f` @type ^`java.util.List` @kind object;
  #L1ed0d8.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1ed0de.  v0:= temp @kind object;
  #L1ed0e0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1ed0e6.  v1:= temp;
  #L1ed0e8.  if v1 != 0 then goto L1ed0f0;
  #L1ed0ec.  v3:= 0I;
  #L1ed0ee.  return v3;
  #L1ed0f0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1ed0f6.  v1:= temp @kind object;
  #L1ed0f8.  v1:= (`java.lang.String`) v1 @kind object;
  #L1ed0fc.  call temp:= `startsWith`(v3, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1ed102.  v1:= temp;
  #L1ed104.  if v1 == 0 then goto L1ed0e0;
  #L1ed108.  v3:= 1I;
  #L1ed10a.  return v3;
}
procedure `boolean` `a`(`g.a.e` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lg/a/e;.a:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1ed11c.  v0:= 0I;
  #L1ed11e.  if v4 != 0 then goto L1ed124;
  #L1ed122.  return v0;
  #L1ed124.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1ed12a.  v1:= temp;
  #L1ed12c.  v2:= v3.`g.a.e.c` @type ^`int`;
  #L1ed130.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1ed136.  v5:= temp;
  #L1ed138.  v2:= v2 + v5 @kind int;
  #L1ed13a.  if v1 != v2 then goto L1ed156;
  #L1ed13e.  v5:= v3.`g.a.e.a` @type ^`java.lang.String` @kind object;
  #L1ed142.  v1:= v3.`g.a.e.c` @type ^`int`;
  #L1ed146.  call temp:= `regionMatches`(v5, v0, v4, v0, v1) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L1ed14c.  v4:= temp;
  #L1ed14e.  if v4 == 0 then goto L1ed156;
  #L1ed152.  v4:= 1I;
  #L1ed154.  return v4;
  #L1ed156.  return v0;
}
procedure `boolean` `a`(`g.a.e` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lg/a/e;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1ed168.  v0:= 0I;
  #L1ed16a.  if v4 != 0 then goto L1ed170;
  #L1ed16e.  return v0;
  #L1ed170.  v1:= "file:/" @kind object;
  #L1ed174.  call temp:= `startsWith`(v4, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1ed17a.  v1:= temp;
  #L1ed17c.  if v1 == 0 then goto L1ed204;
  #L1ed180.  v1:= 5I;
  #L1ed182.  call temp:= `substring`(v4, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1ed188.  v4:= temp @kind object;
  #L1ed18a.  call temp:= `e`(v4) @signature `Lg/a/e;.e:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1ed190.  v4:= temp @kind object;
  #L1ed192.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1ed198.  v1:= temp;
  #L1ed19a.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1ed1a0.  v2:= temp;
  #L1ed1a2.  if v1 <= v2 then goto L1ed202;
  #L1ed1a6.  call temp:= `endsWith`(v4, v5) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1ed1ac.  v1:= temp;
  #L1ed1ae.  if v1 == 0 then goto L1ed202;
  #L1ed1b2.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1ed1b8.  v1:= temp;
  #L1ed1ba.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1ed1c0.  v2:= temp;
  #L1ed1c2.  v1:= v1 - v2 @kind int;
  #L1ed1c4.  v1:= v1 + -1;
  #L1ed1c8.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1ed1ce.  v1:= temp;
  #L1ed1d0.  v2:= 47I;
  #L1ed1d4.  if v1 == v2 then goto L1ed1da;
  #L1ed1d8.  goto L1ed202;
  #L1ed1da.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1ed1e0.  v1:= temp;
  #L1ed1e2.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1ed1e8.  v5:= temp;
  #L1ed1ea.  v1:= v1 - v5 @kind int;
  #L1ed1ec.  v1:= v1 + -1;
  #L1ed1f0.  call temp:= `substring`(v4, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1ed1f6.  v4:= temp @kind object;
  #L1ed1f8.  call temp:= `b`(v3, v4, v6) @signature `Lg/a/e;.b:(Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L1ed1fe.  v4:= temp;
  #L1ed200.  return v4;
  #L1ed202.  return v0;
  #L1ed204.  v5:= "jar:" @kind object;
  #L1ed208.  call temp:= `startsWith`(v4, v5) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1ed20e.  v5:= temp;
  #L1ed210.  if v5 == 0 then goto L1ed23c;
  #L1ed214.  v5:= 33I;
  #L1ed218.  call temp:= `indexOf`(v4, v5) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L1ed21e.  v5:= temp;
  #L1ed220.  v1:= -1I;
  #L1ed222.  if v5 != v1 then goto L1ed228;
  #L1ed226.  return v0;
  #L1ed228.  v0:= 4I;
  #L1ed22a.  call temp:= `substring`(v4, v0, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1ed230.  v4:= temp @kind object;
  #L1ed232.  call temp:= `c`(v3, v4, v6) @signature `Lg/a/e;.c:(Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L1ed238.  v4:= temp;
  #L1ed23a.  return v4;
  #L1ed23c.  return v0;
}
procedure `java.util.Set` `b`(`g.a.e` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lg/a/e;.b:(Ljava/lang/String;)Ljava/util/Set;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1edd2c.  v0:= new `java.util.jar.JarFile`;
  #L1edd30.  call `<init>`(v0, v5) @signature `Ljava/util/jar/JarFile;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1edd36.  call temp:= `size`(v0) @signature `Ljava/util/jar/JarFile;.size:()I` @kind virtual;
  #L1edd3c.  v5:= temp;
  #L1edd3e.  call temp:= `highestOneBit`(v5) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L1edd44.  v5:= temp;
  #L1edd46.  call temp:= `size`(v0) @signature `Ljava/util/jar/JarFile;.size:()I` @kind virtual;
  #L1edd4c.  v1:= temp;
  #L1edd4e.  if v5 == v1 then goto L1edd56;
  #L1edd52.  v5:= v5 ^< 1;
  #L1edd56.  v1:= 1I;
  #L1edd58.  if v5 != 0 then goto L1edd5e;
  #L1edd5c.  v5:= 1I;
  #L1edd5e.  v2:= new `java.util.HashSet`;
  #L1edd62.  v5:= v5 ^> v1 @kind int;
  #L1edd64.  v1:= 2I;
  #L1edd66.  v1:= (`float`) v1 @kind i2f;
  #L1edd68.  call `<init>`(v2, v5, v1) @signature `Ljava/util/HashSet;.<init>:(IF)V` @kind direct;
  #L1edd6e.  call temp:= `entries`(v0) @signature `Ljava/util/jar/JarFile;.entries:()Ljava/util/Enumeration;` @kind virtual;
  #L1edd74.  v5:= temp @kind object;
  #L1edd76.  call temp:= `hasMoreElements`(v5) @signature `Ljava/util/Enumeration;.hasMoreElements:()Z` @kind interface;
  #L1edd7c.  v1:= temp;
  #L1edd7e.  if v1 != 0 then goto L1edd8a;
  #L1edd82.  call `close`(v0) @signature `Ljava/util/jar/JarFile;.close:()V` @kind virtual;
  #L1edd88.  goto L1eddbe;
  #L1edd8a.  call temp:= `nextElement`(v5) @signature `Ljava/util/Enumeration;.nextElement:()Ljava/lang/Object;` @kind interface;
  #L1edd90.  v1:= temp @kind object;
  #L1edd92.  v1:= (`java.util.jar.JarEntry`) v1 @kind object;
  #L1edd96.  call temp:= `isDirectory`(v1) @signature `Ljava/util/jar/JarEntry;.isDirectory:()Z` @kind virtual;
  #L1edd9c.  v3:= temp;
  #L1edd9e.  if v3 == 0 then goto L1edda4;
  #L1edda2.  goto L1edd76;
  #L1edda4.  call temp:= `getName`(v1) @signature `Ljava/util/jar/JarEntry;.getName:()Ljava/lang/String;` @kind virtual;
  #L1eddaa.  v1:= temp @kind object;
  #L1eddac.  call temp:= `add`(v2, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1eddb2.  goto L1edd76;
  #L1eddb4.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1eddb6.  call `close`(v0) @signature `Ljava/util/jar/JarFile;.close:()V` @kind virtual;
  #L1eddbc.  throw v5;
  #L1eddbe.  return v2 @kind object;
  #L1eddc0.  call temp:= `emptySet`() @signature `Ljava/util/Collections;.emptySet:()Ljava/util/Set;` @kind static;
  #L1eddc6.  v5:= temp @kind object;
  #L1eddc8.  return v5 @kind object;
  catch `java.lang.Exception` @[L1edd2c..L1edd6e] goto L1eddc0;
  catch `java.lang.Exception` @[L1edd6e..L1edd7e] goto L1edd82;
  catch `java.lang.Throwable` @[L1edd6e..L1edd7e] goto L1eddb4;
  catch `java.lang.Exception` @[L1edd82..L1edd88] goto L1eddc0;
  catch `java.lang.Exception` @[L1edd8a..L1eddb2] goto L1edd82;
  catch `java.lang.Throwable` @[L1edd8a..L1eddb2] goto L1eddb4;
  catch `java.lang.Exception` @[L1eddb6..L1eddbe] goto L1eddc0;
}
procedure `boolean` `b`(`g.a.e` v4 @kind this, `java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lg/a/e;.b:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ed250.  v0:= new `java.lang.StringBuilder`;
  #L1ed254.  call temp:= `valueOf`(v5) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1ed25a.  v1:= temp @kind object;
  #L1ed25c.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ed262.  v1:= "::" @kind object;
  #L1ed266.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed26c.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed272.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ed278.  v0:= temp @kind object;
  #L1ed27a.  v1:= v4.`g.a.e.i` @type ^`java.util.Map` @kind object;
  #L1ed27e.  call temp:= `get`(v1, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1ed284.  v1:= temp @kind object;
  #L1ed286.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L1ed28a.  if v1 == 0 then goto L1ed298;
  #L1ed28e.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L1ed294.  v5:= temp;
  #L1ed296.  return v5;
  #L1ed298.  v1:= new `java.io.File`;
  #L1ed29c.  v2:= new `java.lang.StringBuilder`;
  #L1ed2a0.  call temp:= `valueOf`(v5) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1ed2a6.  v5:= temp @kind object;
  #L1ed2a8.  call `<init>`(v2, v5) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ed2ae.  v5:= "/META-INF/ShadowClassLoader" @kind object;
  #L1ed2b2.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed2b8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ed2be.  v5:= temp @kind object;
  #L1ed2c0.  call `<init>`(v1, v5) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ed2c6.  v5:= 0I;
  #L1ed2c8.  v2:= new `java.io.FileInputStream`;
  #L1ed2cc.  call `<init>`(v2, v1) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L1ed2d2.  call temp:= `a`(v2, v6) @signature `Lg/a/e;.a:(Ljava/io/InputStream;Ljava/lang/String;)Z` @kind static;
  #L1ed2d8.  v6:= temp;
  #L1ed2da.  v1:= v4.`g.a.e.i` @type ^`java.util.Map` @kind object;
  #L1ed2de.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L1ed2e4.  v3:= temp @kind object;
  #L1ed2e6.  call temp:= `put`(v1, v0, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1ed2ec.  call `close`(v2) @signature `Ljava/io/FileInputStream;.close:()V` @kind virtual;
  #L1ed2f2.  return v6;
  #L1ed2f4.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ed2f6.  call `close`(v2) @signature `Ljava/io/FileInputStream;.close:()V` @kind virtual;
  #L1ed2fc.  throw v6;
  #L1ed2fe.  v6:= v4.`g.a.e.i` @type ^`java.util.Map` @kind object;
  #L1ed302.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L1ed308.  v1:= temp @kind object;
  #L1ed30a.  call temp:= `put`(v6, v0, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1ed310.  return v5;
  #L1ed312.  v6:= v4.`g.a.e.i` @type ^`java.util.Map` @kind object;
  #L1ed316.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L1ed31c.  v1:= temp @kind object;
  #L1ed31e.  call temp:= `put`(v6, v0, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1ed324.  return v5;
  catch `java.io.FileNotFoundException` @[L1ed2c8..L1ed2d2] goto L1ed312;
  catch `java.io.IOException` @[L1ed2c8..L1ed2d2] goto L1ed2fe;
  catch `java.lang.Throwable` @[L1ed2d2..L1ed2ec] goto L1ed2f4;
  catch `java.io.FileNotFoundException` @[L1ed2ec..L1ed2fe] goto L1ed312;
  catch `java.io.IOException` @[L1ed2ec..L1ed2fe] goto L1ed2fe;
}
procedure `java.util.Set` `c`(`g.a.e` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lg/a/e;.c:(Ljava/lang/String;)Ljava/util/Set;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ede10.  v0:= `@@g.a.e.l` @type ^`java.util.Map` @kind object;
  #L1ede14.  @monitorenter v0
  #L1ede16.  v1:= v4.`g.a.e.h` @type ^`java.util.Map` @kind object;
  #L1ede1a.  call temp:= `get`(v1, v5) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1ede20.  v1:= temp @kind object;
  #L1ede22.  if v1 == 0 then goto L1ede3a;
  #L1ede26.  v5:= `@@g.a.e.m` @type ^`java.util.Map` @kind object;
  #L1ede2a.  call temp:= `get`(v5, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1ede30.  v5:= temp @kind object;
  #L1ede32.  v5:= (`java.util.Set`) v5 @kind object;
  #L1ede36.  @monitorexit v0
  #L1ede38.  return v5 @kind object;
  #L1ede3a.  v1:= `@@g.a.e.l` @type ^`java.util.Map` @kind object;
  #L1ede3e.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L1ede44.  v1:= temp @kind object;
  #L1ede46.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1ede4c.  v1:= temp @kind object;
  #L1ede4e.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1ede54.  v2:= temp;
  #L1ede56.  if v2 != 0 then goto L1ede8e;
  #L1ede5a.  v1:= new `java.lang.Object`;
  #L1ede5e.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ede64.  call temp:= `b`(v4, v5) @signature `Lg/a/e;.b:(Ljava/lang/String;)Ljava/util/Set;` @kind direct;
  #L1ede6a.  v2:= temp @kind object;
  #L1ede6c.  v3:= `@@g.a.e.m` @type ^`java.util.Map` @kind object;
  #L1ede70.  call temp:= `put`(v3, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1ede76.  v3:= `@@g.a.e.l` @type ^`java.util.Map` @kind object;
  #L1ede7a.  call temp:= `put`(v3, v1, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1ede80.  v3:= v4.`g.a.e.h` @type ^`java.util.Map` @kind object;
  #L1ede84.  call temp:= `put`(v3, v5, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1ede8a.  @monitorexit v0
  #L1ede8c.  return v2 @kind object;
  #L1ede8e.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1ede94.  v2:= temp @kind object;
  #L1ede96.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L1ede9a.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L1edea0.  v3:= temp @kind object;
  #L1edea2.  v3:= (`java.lang.String`) v3 @kind object;
  #L1edea6.  call temp:= `equals`(v3, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1edeac.  v3:= temp;
  #L1edeae.  if v3 == 0 then goto L1ede4e;
  #L1edeb2.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L1edeb8.  v1:= temp @kind object;
  #L1edeba.  v2:= v4.`g.a.e.h` @type ^`java.util.Map` @kind object;
  #L1edebe.  call temp:= `put`(v2, v5, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1edec4.  v5:= `@@g.a.e.m` @type ^`java.util.Map` @kind object;
  #L1edec8.  call temp:= `get`(v5, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1edece.  v5:= temp @kind object;
  #L1eded0.  v5:= (`java.util.Set`) v5 @kind object;
  #L1eded4.  @monitorexit v0
  #L1eded6.  return v5 @kind object;
  #L1eded8.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ededa.  @monitorexit v0
  #L1ededc.  throw v5;
  catch `java.lang.Throwable` @[L1ede16..L1ededc] goto L1eded8;
}
procedure `boolean` `c`(`g.a.e` v5 @kind this, `java.lang.String` v6 @kind object, `java.lang.String` v7 @kind object) @signature `Lg/a/e;.c:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1ed35c.  v0:= new `java.lang.StringBuilder`;
  #L1ed360.  call temp:= `valueOf`(v6) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1ed366.  v1:= temp @kind object;
  #L1ed368.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ed36e.  v1:= "::" @kind object;
  #L1ed372.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed378.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed37e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ed384.  v0:= temp @kind object;
  #L1ed386.  v1:= v5.`g.a.e.j` @type ^`java.util.Map` @kind object;
  #L1ed38a.  call temp:= `get`(v1, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1ed390.  v1:= temp @kind object;
  #L1ed392.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L1ed396.  if v1 == 0 then goto L1ed3a4;
  #L1ed39a.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L1ed3a0.  v6:= temp;
  #L1ed3a2.  return v6;
  #L1ed3a4.  v1:= "file:/" @kind object;
  #L1ed3a8.  call temp:= `startsWith`(v6, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1ed3ae.  v1:= temp;
  #L1ed3b0.  if v1 == 0 then goto L1ed3c6;
  #L1ed3b4.  v1:= 5I;
  #L1ed3b6.  call temp:= `substring`(v6, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1ed3bc.  v6:= temp @kind object;
  #L1ed3be.  call temp:= `e`(v6) @signature `Lg/a/e;.e:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1ed3c4.  v6:= temp @kind object;
  #L1ed3c6.  v1:= 0I;
  #L1ed3c8.  v2:= new `java.io.FileInputStream`;
  #L1ed3cc.  call `<init>`(v2, v6) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ed3d2.  v6:= new `java.util.zip.ZipInputStream`;
  #L1ed3d6.  call `<init>`(v6, v2) @signature `Ljava/util/zip/ZipInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L1ed3dc.  call temp:= `getNextEntry`(v6) @signature `Ljava/util/zip/ZipInputStream;.getNextEntry:()Ljava/util/zip/ZipEntry;` @kind virtual;
  #L1ed3e2.  v3:= temp @kind object;
  #L1ed3e4.  if v3 != 0 then goto L1ed408;
  #L1ed3e8.  v7:= v5.`g.a.e.j` @type ^`java.util.Map` @kind object;
  #L1ed3ec.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L1ed3f2.  v3:= temp @kind object;
  #L1ed3f4.  call temp:= `put`(v7, v0, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1ed3fa.  call `close`(v6) @signature `Ljava/util/zip/ZipInputStream;.close:()V` @kind virtual;
  #L1ed400.  call `close`(v2) @signature `Ljava/io/FileInputStream;.close:()V` @kind virtual;
  #L1ed406.  return v1;
  #L1ed408.  v4:= "META-INF/ShadowClassLoader" @kind object;
  #L1ed40c.  call temp:= `getName`(v3) @signature `Ljava/util/zip/ZipEntry;.getName:()Ljava/lang/String;` @kind virtual;
  #L1ed412.  v3:= temp @kind object;
  #L1ed414.  call temp:= `equals`(v4, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1ed41a.  v3:= temp;
  #L1ed41c.  if v3 != 0 then goto L1ed422;
  #L1ed420.  goto L1ed3dc;
  #L1ed422.  call temp:= `a`(v6, v7) @signature `Lg/a/e;.a:(Ljava/io/InputStream;Ljava/lang/String;)Z` @kind static;
  #L1ed428.  v7:= temp;
  #L1ed42a.  v3:= v5.`g.a.e.j` @type ^`java.util.Map` @kind object;
  #L1ed42e.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L1ed434.  v4:= temp @kind object;
  #L1ed436.  call temp:= `put`(v3, v0, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1ed43c.  call `close`(v6) @signature `Ljava/util/zip/ZipInputStream;.close:()V` @kind virtual;
  #L1ed442.  call `close`(v2) @signature `Ljava/io/FileInputStream;.close:()V` @kind virtual;
  #L1ed448.  return v7;
  #L1ed44a.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ed44c.  call `close`(v6) @signature `Ljava/util/zip/ZipInputStream;.close:()V` @kind virtual;
  #L1ed452.  throw v7;
  #L1ed454.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ed456.  call `close`(v2) @signature `Ljava/io/FileInputStream;.close:()V` @kind virtual;
  #L1ed45c.  throw v6;
  #L1ed45e.  v6:= v5.`g.a.e.j` @type ^`java.util.Map` @kind object;
  #L1ed462.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L1ed468.  v7:= temp @kind object;
  #L1ed46a.  call temp:= `put`(v6, v0, v7) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1ed470.  return v1;
  #L1ed472.  v6:= v5.`g.a.e.j` @type ^`java.util.Map` @kind object;
  #L1ed476.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L1ed47c.  v7:= temp @kind object;
  #L1ed47e.  call temp:= `put`(v6, v0, v7) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1ed484.  return v1;
  catch `java.io.FileNotFoundException` @[L1ed3c8..L1ed3d2] goto L1ed472;
  catch `java.io.IOException` @[L1ed3c8..L1ed3d2] goto L1ed45e;
  catch `java.lang.Throwable` @[L1ed3d2..L1ed3dc] goto L1ed454;
  catch `java.lang.Throwable` @[L1ed3dc..L1ed3fa] goto L1ed44a;
  catch `java.lang.Throwable` @[L1ed3fa..L1ed400] goto L1ed454;
  catch `java.io.FileNotFoundException` @[L1ed400..L1ed406] goto L1ed472;
  catch `java.io.IOException` @[L1ed400..L1ed406] goto L1ed45e;
  catch `java.lang.Throwable` @[L1ed408..L1ed43c] goto L1ed44a;
  catch `java.lang.Throwable` @[L1ed43c..L1ed442] goto L1ed454;
  catch `java.io.FileNotFoundException` @[L1ed442..L1ed448] goto L1ed472;
  catch `java.io.IOException` @[L1ed442..L1ed448] goto L1ed45e;
  catch `java.lang.Throwable` @[L1ed44c..L1ed454] goto L1ed454;
  catch `java.io.FileNotFoundException` @[L1ed456..L1ed45e] goto L1ed472;
  catch `java.io.IOException` @[L1ed456..L1ed45e] goto L1ed45e;
}
procedure `java.net.URL` `d`(`g.a.e` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lg/a/e;.d:(Ljava/lang/String;)Ljava/net/URL;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1eda0c.  call temp:= `getResource`(v4, v5) @signature `Ljava/lang/ClassLoader;.getResource:(Ljava/lang/String;)Ljava/net/URL;` @kind super;
  #L1eda12.  v0:= temp @kind object;
  #L1eda14.  v1:= 0I;
  #L1eda16.  if v0 != 0 then goto L1eda1c;
  #L1eda1a.  return v1 @kind object;
  #L1eda1c.  call temp:= `toString`(v0) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L1eda22.  v2:= temp @kind object;
  #L1eda24.  call temp:= `d`(v4, v2, v5) @signature `Lg/a/e;.d:(Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L1eda2a.  v2:= temp;
  #L1eda2c.  if v2 != 0 then goto L1eda32;
  #L1eda30.  return v0 @kind object;
  #L1eda32.  call temp:= `getResources`(v4, v5) @signature `Ljava/lang/ClassLoader;.getResources:(Ljava/lang/String;)Ljava/util/Enumeration;` @kind super;
  #L1eda38.  v0:= temp @kind object;
  #L1eda3a.  call temp:= `hasMoreElements`(v0) @signature `Ljava/util/Enumeration;.hasMoreElements:()Z` @kind interface;
  #L1eda40.  v2:= temp;
  #L1eda42.  if v2 != 0 then goto L1eda48;
  #L1eda46.  return v1 @kind object;
  #L1eda48.  call temp:= `nextElement`(v0) @signature `Ljava/util/Enumeration;.nextElement:()Ljava/lang/Object;` @kind interface;
  #L1eda4e.  v2:= temp @kind object;
  #L1eda50.  v2:= (`java.net.URL`) v2 @kind object;
  #L1eda54.  call temp:= `toString`(v2) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L1eda5a.  v3:= temp @kind object;
  #L1eda5c.  call temp:= `d`(v4, v3, v5) @signature `Lg/a/e;.d:(Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L1eda62.  v3:= temp;
  #L1eda64.  if v3 != 0 then goto L1eda3a;
  #L1eda68.  return v2 @kind object;
}
procedure `boolean` `d`(`g.a.e` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lg/a/e;.d:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1ed4f8.  v0:= "java/" @kind object;
  #L1ed4fc.  call temp:= `startsWith`(v3, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1ed502.  v0:= temp;
  #L1ed504.  if v0 != 0 then goto L1ed538;
  #L1ed508.  v0:= "sun/" @kind object;
  #L1ed50c.  call temp:= `startsWith`(v3, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1ed512.  v0:= temp;
  #L1ed514.  if v0 != 0 then goto L1ed538;
  #L1ed518.  call temp:= `a`(v1, v2, v3) @signature `Lg/a/e;.a:(Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L1ed51e.  v0:= temp;
  #L1ed520.  if v0 != 0 then goto L1ed534;
  #L1ed524.  v0:= v1.`g.a.e.e` @type ^`java.lang.String` @kind object;
  #L1ed528.  call temp:= `a`(v1, v2, v3, v0) @signature `Lg/a/e;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L1ed52e.  v2:= temp;
  #L1ed530.  if v2 == 0 then goto L1ed538;
  #L1ed534.  v2:= 1I;
  #L1ed536.  return v2;
  #L1ed538.  v2:= 0I;
  #L1ed53a.  return v2;
}
procedure `java.lang.String` `e`(`java.lang.String` v1 @kind object) @signature `Lg/a/e;.e:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1ed810.  v0:= "UTF-8" @kind object;
  #L1ed814.  call temp:= `decode`(v1, v0) @signature `Ljava/net/URLDecoder;.decode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1ed81a.  v1:= temp @kind object;
  #L1ed81c.  return v1 @kind object;
  #L1ed81e.  v1:= new `java.lang.InternalError`;
  #L1ed822.  v0:= "UTF-8 not supported" @kind object;
  #L1ed826.  call `<init>`(v1, v0) @signature `Ljava/lang/InternalError;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ed82c.  throw v1;
  catch `java.io.UnsupportedEncodingException` @[L1ed810..L1ed81c] goto L1ed81e;
}
procedure `void` `addOverrideClasspathEntry`(`g.a.e` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lg/a/e;.addOverrideClasspathEntry:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ee298.  v0:= v2.`g.a.e.d` @type ^`java.util.List` @kind object;
  #L1ee29c.  v1:= new `java.io.File`;
  #L1ee2a0.  call `<init>`(v1, v3) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ee2a6.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1ee2ac.  return @kind void;
}
procedure `void` `addOverrideJarDir`(`g.a.e` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lg/a/e;.addOverrideJarDir:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1ee2c0.  v0:= new `java.io.File`;
  #L1ee2c4.  call `<init>`(v0, v6) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ee2ca.  call temp:= `listFiles`(v0) @signature `Ljava/io/File;.listFiles:()[Ljava/io/File;` @kind virtual;
  #L1ee2d0.  v6:= temp @kind object;
  #L1ee2d2.  v0:= length @variable v6;
  #L1ee2d4.  v1:= 0I;
  #L1ee2d6.  if v1 < v0 then goto L1ee2dc;
  #L1ee2da.  return @kind void;
  #L1ee2dc.  v2:= v6[v1] @kind object;
  #L1ee2e0.  call temp:= `getName`(v2) @signature `Ljava/io/File;.getName:()Ljava/lang/String;` @kind virtual;
  #L1ee2e6.  v3:= temp @kind object;
  #L1ee2e8.  call temp:= `toLowerCase`(v3) @signature `Ljava/lang/String;.toLowerCase:()Ljava/lang/String;` @kind virtual;
  #L1ee2ee.  v3:= temp @kind object;
  #L1ee2f0.  v4:= ".jar" @kind object;
  #L1ee2f4.  call temp:= `endsWith`(v3, v4) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1ee2fa.  v3:= temp;
  #L1ee2fc.  if v3 == 0 then goto L1ee322;
  #L1ee300.  call temp:= `canRead`(v2) @signature `Ljava/io/File;.canRead:()Z` @kind virtual;
  #L1ee306.  v3:= temp;
  #L1ee308.  if v3 == 0 then goto L1ee322;
  #L1ee30c.  call temp:= `isFile`(v2) @signature `Ljava/io/File;.isFile:()Z` @kind virtual;
  #L1ee312.  v3:= temp;
  #L1ee314.  if v3 == 0 then goto L1ee322;
  #L1ee318.  v3:= v5.`g.a.e.d` @type ^`java.util.List` @kind object;
  #L1ee31c.  call temp:= `add`(v3, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1ee322.  v1:= v1 + 1;
  #L1ee326.  goto L1ee2d6;
}
procedure `java.net.URL` `getResource`(`g.a.e` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lg/a/e;.getResource:(Ljava/lang/String;)Ljava/net/URL;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ed850.  v0:= 0I;
  #L1ed852.  call temp:= `a`(v1, v2, v0) @signature `Lg/a/e;.a:(Ljava/lang/String;Z)Ljava/net/URL;` @kind direct;
  #L1ed858.  v2:= temp @kind object;
  #L1ed85a.  return v2 @kind object;
}
procedure `java.util.Enumeration` `getResources`(`g.a.e` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lg/a/e;.getResources:(Ljava/lang/String;)Ljava/util/Enumeration;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1edbcc.  v0:= ".class" @kind object;
  #L1edbd0.  call temp:= `endsWith`(v7, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1edbd6.  v0:= temp;
  #L1edbd8.  if v0 == 0 then goto L1edc22;
  #L1edbdc.  v0:= new `java.lang.StringBuilder`;
  #L1edbe0.  v1:= 0I;
  #L1edbe2.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1edbe8.  v2:= temp;
  #L1edbea.  v2:= v2 + -6;
  #L1edbee.  call temp:= `substring`(v7, v1, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1edbf4.  v1:= temp @kind object;
  #L1edbf6.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1edbfc.  v1:= temp @kind object;
  #L1edbfe.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1edc04.  v1:= ".SCL." @kind object;
  #L1edc08.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1edc0e.  v1:= v6.`g.a.e.e` @type ^`java.lang.String` @kind object;
  #L1edc12.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1edc18.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1edc1e.  v0:= temp @kind object;
  #L1edc20.  goto L1edc24;
  #L1edc22.  v0:= 0I;
  #L1edc24.  v1:= new `java.util.Vector`;
  #L1edc28.  call `<init>`(v1) @signature `Ljava/util/Vector;.<init>:()V` @kind direct;
  #L1edc2e.  v2:= v6.`g.a.e.d` @type ^`java.util.List` @kind object;
  #L1edc32.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1edc38.  v2:= temp @kind object;
  #L1edc3a.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1edc40.  v3:= temp;
  #L1edc42.  if v3 != 0 then goto L1edcfc;
  #L1edc46.  v2:= v6.`g.a.e.d` @type ^`java.util.List` @kind object;
  #L1edc4a.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1edc50.  v2:= temp;
  #L1edc52.  if v2 == 0 then goto L1edc6c;
  #L1edc56.  v2:= v6.`g.a.e.b` @type ^`java.io.File` @kind object;
  #L1edc5a.  call temp:= `a`(v6, v7, v0, v2) @signature `Lg/a/e;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/net/URL;` @kind direct;
  #L1edc60.  v2:= temp @kind object;
  #L1edc62.  if v2 == 0 then goto L1edc6c;
  #L1edc66.  call temp:= `add`(v1, v2) @signature `Ljava/util/Vector;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1edc6c.  call temp:= `getResources`(v6, v7) @signature `Ljava/lang/ClassLoader;.getResources:(Ljava/lang/String;)Ljava/util/Enumeration;` @kind super;
  #L1edc72.  v3:= temp @kind object;
  #L1edc74.  call temp:= `hasMoreElements`(v3) @signature `Ljava/util/Enumeration;.hasMoreElements:()Z` @kind interface;
  #L1edc7a.  v2:= temp;
  #L1edc7c.  if v2 != 0 then goto L1edcd0;
  #L1edc80.  if v0 == 0 then goto L1edcc6;
  #L1edc84.  call temp:= `getResources`(v6, v0) @signature `Ljava/lang/ClassLoader;.getResources:(Ljava/lang/String;)Ljava/util/Enumeration;` @kind super;
  #L1edc8a.  v7:= temp @kind object;
  #L1edc8c.  call temp:= `hasMoreElements`(v7) @signature `Ljava/util/Enumeration;.hasMoreElements:()Z` @kind interface;
  #L1edc92.  v2:= temp;
  #L1edc94.  if v2 != 0 then goto L1edc9a;
  #L1edc98.  goto L1edcc6;
  #L1edc9a.  call temp:= `nextElement`(v7) @signature `Ljava/util/Enumeration;.nextElement:()Ljava/lang/Object;` @kind interface;
  #L1edca0.  v2:= temp @kind object;
  #L1edca2.  v2:= (`java.net.URL`) v2 @kind object;
  #L1edca6.  call temp:= `toString`(v2) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L1edcac.  v3:= temp @kind object;
  #L1edcae.  v4:= v6.`g.a.e.e` @type ^`java.lang.String` @kind object;
  #L1edcb2.  call temp:= `a`(v6, v3, v0, v4) @signature `Lg/a/e;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L1edcb8.  v3:= temp;
  #L1edcba.  if v3 == 0 then goto L1edc8c;
  #L1edcbe.  call temp:= `add`(v1, v2) @signature `Ljava/util/Vector;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1edcc4.  goto L1edc8c;
  #L1edcc6.  call temp:= `elements`(v1) @signature `Ljava/util/Vector;.elements:()Ljava/util/Enumeration;` @kind virtual;
  #L1edccc.  v7:= temp @kind object;
  #L1edcce.  return v7 @kind object;
  #L1edcd0.  call temp:= `nextElement`(v3) @signature `Ljava/util/Enumeration;.nextElement:()Ljava/lang/Object;` @kind interface;
  #L1edcd6.  v2:= temp @kind object;
  #L1edcd8.  v2:= (`java.net.URL`) v2 @kind object;
  #L1edcdc.  call temp:= `toString`(v2) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L1edce2.  v4:= temp @kind object;
  #L1edce4.  v5:= v6.`g.a.e.e` @type ^`java.lang.String` @kind object;
  #L1edce8.  call temp:= `a`(v6, v4, v7, v5) @signature `Lg/a/e;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L1edcee.  v4:= temp;
  #L1edcf0.  if v4 == 0 then goto L1edc74;
  #L1edcf4.  call temp:= `add`(v1, v2) @signature `Ljava/util/Vector;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1edcfa.  goto L1edc74;
  #L1edcfc.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1edd02.  v3:= temp @kind object;
  #L1edd04.  v3:= (`java.io.File`) v3 @kind object;
  #L1edd08.  call temp:= `a`(v6, v7, v0, v3) @signature `Lg/a/e;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/net/URL;` @kind direct;
  #L1edd0e.  v3:= temp @kind object;
  #L1edd10.  if v3 == 0 then goto L1edc3a;
  #L1edd14.  call temp:= `add`(v1, v3) @signature `Ljava/util/Vector;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1edd1a.  goto L1edc3a;
}
procedure `java.lang.Class` `loadClass`(`g.a.e` v6 @kind this, `java.lang.String` v7 @kind object, `boolean` v8 ) @signature `Lg/a/e;.loadClass:(Ljava/lang/String;Z)Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1ed5bc.  call temp:= `findLoadedClass`(v6, v7) @signature `Ljava/lang/ClassLoader;.findLoadedClass:(Ljava/lang/String;)Ljava/lang/Class;` @kind virtual;
  #L1ed5c2.  v0:= temp @kind object;
  #L1ed5c4.  if v0 == 0 then goto L1ed5ca;
  #L1ed5c8.  return v0 @kind object;
  #L1ed5ca.  v0:= v6.`g.a.e.g` @type ^`java.util.List` @kind object;
  #L1ed5ce.  call temp:= `contains`(v0, v7) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1ed5d4.  v0:= temp;
  #L1ed5d6.  if v0 == 0 then goto L1ed5f0;
  #L1ed5da.  v0:= `@@g.a.e.k` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L1ed5de.  call temp:= `get`(v0, v7) @signature `Ljava/util/concurrent/ConcurrentMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1ed5e4.  v0:= temp @kind object;
  #L1ed5e6.  v0:= (`java.lang.Class`) v0 @kind object;
  #L1ed5ea.  if v0 == 0 then goto L1ed5f0;
  #L1ed5ee.  return v0 @kind object;
  #L1ed5f0.  v0:= new `java.lang.StringBuilder`;
  #L1ed5f4.  v1:= "." @kind object;
  #L1ed5f8.  v2:= "/" @kind object;
  #L1ed5fc.  call temp:= `replace`(v7, v1, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L1ed602.  v3:= temp @kind object;
  #L1ed604.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1ed60a.  v3:= temp @kind object;
  #L1ed60c.  call `<init>`(v0, v3) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ed612.  v3:= ".class" @kind object;
  #L1ed616.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed61c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ed622.  v0:= temp @kind object;
  #L1ed624.  v3:= 1I;
  #L1ed626.  call temp:= `a`(v6, v0, v3) @signature `Lg/a/e;.a:(Ljava/lang/String;Z)Ljava/net/URL;` @kind direct;
  #L1ed62c.  v4:= temp @kind object;
  #L1ed62e.  if v4 != 0 then goto L1ed6a2;
  #L1ed632.  call temp:= `a`(v6, v0) @signature `Lg/a/e;.a:(Ljava/lang/String;)Z` @kind direct;
  #L1ed638.  v0:= temp;
  #L1ed63a.  if v0 != 0 then goto L1ed6a2;
  #L1ed63e.  call temp:= `loadClass`(v6, v7, v8) @signature `Ljava/lang/ClassLoader;.loadClass:(Ljava/lang/String;Z)Ljava/lang/Class;` @kind super;
  #L1ed644.  v7:= temp @kind object;
  #L1ed646.  return v7 @kind object;
  #L1ed648.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L1ed64a.  v4:= new `java.lang.StringBuilder`;
  #L1ed64e.  v5:= "secondaryLoading.SCL." @kind object;
  #L1ed652.  call `<init>`(v4, v5) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ed658.  v5:= v6.`g.a.e.e` @type ^`java.lang.String` @kind object;
  #L1ed65c.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed662.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed668.  call temp:= `replace`(v7, v1, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L1ed66e.  v1:= temp @kind object;
  #L1ed670.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed676.  v1:= ".SCL." @kind object;
  #L1ed67a.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed680.  v1:= v6.`g.a.e.e` @type ^`java.lang.String` @kind object;
  #L1ed684.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed68a.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ed690.  v1:= temp @kind object;
  #L1ed692.  call temp:= `a`(v6, v1, v3) @signature `Lg/a/e;.a:(Ljava/lang/String;Z)Ljava/net/URL;` @kind direct;
  #L1ed698.  v4:= temp @kind object;
  #L1ed69a.  if v4 == 0 then goto L1ed6a0;
  #L1ed69e.  goto L1ed6a2;
  #L1ed6a0.  throw v0;
  #L1ed6a2.  if v4 == 0 then goto L1ed79a;
  #L1ed6a6.  call temp:= `openStream`(v4) @signature `Ljava/net/URL;.openStream:()Ljava/io/InputStream;` @kind virtual;
  #L1ed6ac.  v0:= temp @kind object;
  #L1ed6ae.  v1:= 65536I;
  #L1ed6b2.  v1:= new `byte`[v1];
  #L1ed6b6.  v2:= 0I;
  #L1ed6b8.  v3:= 0I;
  #L1ed6ba.  v4:= length @variable v1;
  #L1ed6bc.  v4:= v4 - v3 @kind int;
  #L1ed6be.  call temp:= `read`(v0, v1, v3, v4) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L1ed6c4.  v4:= temp;
  #L1ed6c6.  v5:= -1I;
  #L1ed6c8.  if v4 != v5 then goto L1ed74a;
  #L1ed6cc.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L1ed6d2.  call temp:= `defineClass`(v6, v7, v1, v2, v3) @signature `Ljava/lang/ClassLoader;.defineClass:(Ljava/lang/String;[BII)Ljava/lang/Class;` @kind virtual;
  #L1ed6d8.  v0:= temp @kind object;
  #L1ed6da.  goto L1ed712;
  #L1ed6dc.  v0:= Exception @type ^`java.lang.LinkageError` @kind object;
  #L1ed6de.  v1:= v6.`g.a.e.g` @type ^`java.util.List` @kind object;
  #L1ed6e2.  call temp:= `contains`(v1, v7) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1ed6e8.  v1:= temp;
  #L1ed6ea.  if v1 == 0 then goto L1ed704;
  #L1ed6ee.  v1:= `@@g.a.e.k` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L1ed6f2.  call temp:= `get`(v1, v7) @signature `Ljava/util/concurrent/ConcurrentMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1ed6f8.  v1:= temp @kind object;
  #L1ed6fa.  v1:= (`java.lang.Class`) v1 @kind object;
  #L1ed6fe.  if v1 == 0 then goto L1ed704;
  #L1ed702.  return v1 @kind object;
  #L1ed704.  call temp:= `findLoadedClass`(v6, v7) @signature `Ljava/lang/ClassLoader;.findLoadedClass:(Ljava/lang/String;)Ljava/lang/Class;` @kind virtual;
  #L1ed70a.  v1:= temp @kind object;
  #L1ed70c.  if v1 == 0 then goto L1ed746;
  #L1ed710.  v0:= v1 @kind object;
  #L1ed712.  v1:= v6.`g.a.e.g` @type ^`java.util.List` @kind object;
  #L1ed716.  call temp:= `contains`(v1, v7) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1ed71c.  v1:= temp;
  #L1ed71e.  if v1 == 0 then goto L1ed738;
  #L1ed722.  v1:= `@@g.a.e.k` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L1ed726.  call temp:= `putIfAbsent`(v1, v7, v0) @signature `Ljava/util/concurrent/ConcurrentMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1ed72c.  v7:= temp @kind object;
  #L1ed72e.  v7:= (`java.lang.Class`) v7 @kind object;
  #L1ed732.  if v7 == 0 then goto L1ed738;
  #L1ed736.  goto L1ed73a;
  #L1ed738.  v7:= v0 @kind object;
  #L1ed73a.  if v8 == 0 then goto L1ed744;
  #L1ed73e.  call `resolveClass`(v6, v7) @signature `Ljava/lang/ClassLoader;.resolveClass:(Ljava/lang/Class;)V` @kind virtual;
  #L1ed744.  return v7 @kind object;
  #L1ed746.  throw v0;
  #L1ed748.  throw v0;
  #L1ed74a.  v3:= v3 + v4 @kind int;
  #L1ed74c.  v4:= length @variable v1;
  #L1ed74e.  if v3 != v4 then goto L1ed6ba;
  #L1ed752.  v4:= length @variable v1;
  #L1ed754.  v4:= v4 * 2;
  #L1ed758.  v4:= new `byte`[v4];
  #L1ed75c.  call `arraycopy`(v1, v2, v4, v2, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1ed762.  v1:= v4 @kind object;
  #L1ed764.  goto L1ed6ba;
  #L1ed766.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ed768.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L1ed76e.  throw v8;
  #L1ed770.  v8:= Exception @type ^`java.io.IOException` @kind object;
  #L1ed772.  v0:= new `java.lang.ClassNotFoundException`;
  #L1ed776.  v1:= new `java.lang.StringBuilder`;
  #L1ed77a.  v2:= "I/O exception reading class " @kind object;
  #L1ed77e.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ed784.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ed78a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ed790.  v7:= temp @kind object;
  #L1ed792.  call `<init>`(v0, v7, v8) @signature `Ljava/lang/ClassNotFoundException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1ed798.  throw v0;
  #L1ed79a.  v8:= new `java.lang.ClassNotFoundException`;
  #L1ed79e.  call `<init>`(v8, v7) @signature `Ljava/lang/ClassNotFoundException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ed7a4.  throw v8;
  catch `java.lang.ClassNotFoundException` @[L1ed63e..L1ed646] goto L1ed648;
  catch `java.io.IOException` @[L1ed6a6..L1ed6ae] goto L1ed770;
  catch `java.lang.Throwable` @[L1ed6b2..L1ed6c6] goto L1ed766;
  catch `java.io.IOException` @[L1ed6cc..L1ed6d2] goto L1ed770;
  catch `java.lang.LinkageError` @[L1ed6d2..L1ed6da] goto L1ed6dc;
  catch `java.lang.LinkageError` @[L1ed704..L1ed70c] goto L1ed748;
  catch `java.lang.Throwable` @[L1ed74c..L1ed762] goto L1ed766;
  catch `java.io.IOException` @[L1ed768..L1ed770] goto L1ed770;
}
