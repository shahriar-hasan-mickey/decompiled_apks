record `kotlinx.coroutines.a0` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.t.a` @kind class, `kotlinx.coroutines.u1` @kind interface {
  `long` `kotlinx.coroutines.a0.f` @AccessFlag PRIVATE_FINAL;
}
global `kotlinx.coroutines.a0$a` `@@kotlinx.coroutines.a0.g` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/a0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1e154c.  v0:= new `kotlinx.coroutines.a0$a`;
  #L1e1550.  v1:= 0I;
  #L1e1552.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/a0$a;.<init>:(Lkotlin/v/c/f;)V` @kind direct;
  #L1e1558.  `@@kotlinx.coroutines.a0.g` @type ^`kotlinx.coroutines.a0$a` := v0 @kind object;
  #L1e155c.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.a0` v1 @kind this, `long` v2 ) @signature `Lkotlinx/coroutines/a0;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1e1570.  v0:= `@@kotlinx.coroutines.a0.g` @type ^`kotlinx.coroutines.a0$a` @kind object;
  #L1e1574.  call `<init>`(v1, v0) @signature `Lkotlin/t/a;.<init>:(Lkotlin/t/g$c;)V` @kind direct;
  #L1e157a.  v1.`kotlinx.coroutines.a0.f` @type ^`long` := v2 @kind wide;
  #L1e157e.  return @kind void;
}
procedure `boolean` `equals`(`kotlinx.coroutines.a0` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/a0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1e1314.  if v4 == v5 then goto L1e133a;
  #L1e1318.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.a0` @kind boolean;
  #L1e131c.  if v0 == 0 then goto L1e1336;
  #L1e1320.  v5:= (`kotlinx.coroutines.a0`) v5 @kind object;
  #L1e1324.  v0:= v4.`kotlinx.coroutines.a0.f` @type ^`long` @kind wide;
  #L1e1328.  v2:= v5.`kotlinx.coroutines.a0.f` @type ^`long` @kind wide;
  #L1e132c.  v5:= lcmp(v0, v2);
  #L1e1330.  if v5 != 0 then goto L1e1336;
  #L1e1334.  goto L1e133a;
  #L1e1336.  v5:= 0I;
  #L1e1338.  return v5;
  #L1e133a.  v5:= 1I;
  #L1e133c.  return v5;
}
procedure `java.lang.Object` `fold`(`kotlinx.coroutines.a0` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.v.b.p` v2 @kind object) @signature `Lkotlinx/coroutines/a0;.fold:(Ljava/lang/Object;Lkotlin/v/b/p;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L1e1374.  call temp:= `fold`(v0, v1, v2) @signature `Lkotlinx/coroutines/u1$a;.fold:(Lkotlinx/coroutines/u1;Ljava/lang/Object;Lkotlin/v/b/p;)Ljava/lang/Object;` @kind static;
  #L1e137a.  v1:= temp @kind object;
  #L1e137c.  return v1 @kind object;
}
procedure `kotlin.t.g$b` `get`(`kotlinx.coroutines.a0` v0 @kind this, `kotlin.t.g$c` v1 @kind object) @signature `Lkotlinx/coroutines/a0;.get:(Lkotlin/t/g$c;)Lkotlin/t/g$b;` @AccessFlag PUBLIC {
    temp;

  #L1e1518.  call temp:= `get`(v0, v1) @signature `Lkotlinx/coroutines/u1$a;.get:(Lkotlinx/coroutines/u1;Lkotlin/t/g$c;)Lkotlin/t/g$b;` @kind static;
  #L1e151e.  v1:= temp @kind object;
  #L1e1520.  return v1 @kind object;
}
procedure `long` `getId`(`kotlinx.coroutines.a0` v2 @kind this) @signature `Lkotlinx/coroutines/a0;.getId:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1e1534.  v0:= v2.`kotlinx.coroutines.a0.f` @type ^`long` @kind wide;
  #L1e1538.  return v0 @kind wide;
}
procedure `int` `hashCode`(`kotlinx.coroutines.a0` v4 @kind this) @signature `Lkotlinx/coroutines/a0;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1e1350.  v0:= v4.`kotlinx.coroutines.a0.f` @type ^`long` @kind wide;
  #L1e1354.  v2:= 32I;
  #L1e1358.  v2:= v0 ^>> v2 @kind long;
  #L1e135c.  v0:= v0 ^~ v2 @kind long;
  #L1e135e.  v1:= (`int`) v0 @kind l2i;
  #L1e1360.  return v1;
}
procedure `kotlin.t.g` `minusKey`(`kotlinx.coroutines.a0` v0 @kind this, `kotlin.t.g$c` v1 @kind object) @signature `Lkotlinx/coroutines/a0;.minusKey:(Lkotlin/t/g$c;)Lkotlin/t/g;` @AccessFlag PUBLIC {
    temp;

  #L1e14e0.  call temp:= `minusKey`(v0, v1) @signature `Lkotlinx/coroutines/u1$a;.minusKey:(Lkotlinx/coroutines/u1;Lkotlin/t/g$c;)Lkotlin/t/g;` @kind static;
  #L1e14e6.  v1:= temp @kind object;
  #L1e14e8.  return v1 @kind object;
}
procedure `kotlin.t.g` `plus`(`kotlinx.coroutines.a0` v0 @kind this, `kotlin.t.g` v1 @kind object) @signature `Lkotlinx/coroutines/a0;.plus:(Lkotlin/t/g;)Lkotlin/t/g;` @AccessFlag PUBLIC {
    temp;

  #L1e14fc.  call temp:= `plus`(v0, v1) @signature `Lkotlinx/coroutines/u1$a;.plus:(Lkotlinx/coroutines/u1;Lkotlin/t/g;)Lkotlin/t/g;` @kind static;
  #L1e1502.  v1:= temp @kind object;
  #L1e1504.  return v1 @kind object;
}
procedure `void` `restoreThreadContext`(`kotlinx.coroutines.a0` v0 @kind this, `kotlin.t.g` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/a0;.restoreThreadContext:(Lkotlin/t/g;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1e1590.  v2:= (`java.lang.String`) v2 @kind object;
  #L1e1594.  call `restoreThreadContext`(v0, v1, v2) @signature `Lkotlinx/coroutines/a0;.restoreThreadContext:(Lkotlin/t/g;Ljava/lang/String;)V` @kind virtual;
  #L1e159a.  return @kind void;
}
procedure `void` `restoreThreadContext`(`kotlinx.coroutines.a0` v0 @kind this, `kotlin.t.g` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlinx/coroutines/a0;.restoreThreadContext:(Lkotlin/t/g;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L1e15ac.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1e15b2.  v1:= temp @kind object;
  #L1e15b4.  call `setName`(v1, v2) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L1e15ba.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.a0` v3 @kind this) @signature `Lkotlinx/coroutines/a0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1e13ac.  v0:= new `java.lang.StringBuilder`;
  #L1e13b0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e13b6.  v1:= "CoroutineId(" @kind object;
  #L1e13ba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e13c0.  v1:= v3.`kotlinx.coroutines.a0.f` @type ^`long` @kind wide;
  #L1e13c4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e13ca.  v1:= 41I;
  #L1e13ce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e13d4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e13da.  v0:= temp @kind object;
  #L1e13dc.  return v0 @kind object;
}
procedure `java.lang.Object` `updateThreadContext`(`kotlinx.coroutines.a0` v0 @kind this, `kotlin.t.g` v1 @kind object) @signature `Lkotlinx/coroutines/a0;.updateThreadContext:(Lkotlin/t/g;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1e1390.  call temp:= `updateThreadContext`(v0, v1) @signature `Lkotlinx/coroutines/a0;.updateThreadContext:(Lkotlin/t/g;)Ljava/lang/String;` @kind virtual;
  #L1e1396.  v1:= temp @kind object;
  #L1e1398.  return v1 @kind object;
}
procedure `java.lang.String` `updateThreadContext`(`kotlinx.coroutines.a0` v8 @kind this, `kotlin.t.g` v9 @kind object) @signature `Lkotlinx/coroutines/a0;.updateThreadContext:(Lkotlin/t/g;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1e13f0.  v0:= `@@kotlinx.coroutines.b0.g` @type ^`kotlinx.coroutines.b0$a` @kind object;
  #L1e13f4.  call temp:= `get`(v9, v0) @signature `Lkotlin/t/g;.get:(Lkotlin/t/g$c;)Lkotlin/t/g$b;` @kind interface;
  #L1e13fa.  v9:= temp @kind object;
  #L1e13fc.  v9:= (`kotlinx.coroutines.b0`) v9 @kind object;
  #L1e1400.  if v9 == 0 then goto L1e1412;
  #L1e1404.  call temp:= `getName`(v9) @signature `Lkotlinx/coroutines/b0;.getName:()Ljava/lang/String;` @kind virtual;
  #L1e140a.  v9:= temp @kind object;
  #L1e140c.  if v9 == 0 then goto L1e1412;
  #L1e1410.  goto L1e1416;
  #L1e1412.  v9:= "coroutine" @kind object;
  #L1e1416.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1e141c.  v0:= temp @kind object;
  #L1e141e.  call temp:= `getName`(v0) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L1e1424.  v7:= temp @kind object;
  #L1e1426.  v3:= 0I;
  #L1e1428.  v4:= 0I;
  #L1e142a.  v5:= 6I;
  #L1e142c.  v6:= 0I;
  #L1e142e.  v2:= " @" @kind object;
  #L1e1432.  v1:= v7 @kind object;
  #L1e1434.  call temp:= `lastIndexOf$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/a0/h;.lastIndexOf$default:(Ljava/lang/CharSequence;Ljava/lang/String;IZILjava/lang/Object;)I` @kind static;
  #L1e143a.  v1:= temp;
  #L1e143c.  if v1 >= 0 then goto L1e1448;
  #L1e1440.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1e1446.  v1:= temp;
  #L1e1448.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1e144e.  v2:= temp;
  #L1e1450.  v2:= v2 + v1 @kind int;
  #L1e1452.  v2:= v2 + 10;
  #L1e1456.  v3:= new `java.lang.StringBuilder`;
  #L1e145a.  call `<init>`(v3, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L1e1460.  v2:= 0I;
  #L1e1462.  if v7 == 0 then goto L1e14c0;
  #L1e1466.  call temp:= `substring`(v7, v2, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1e146c.  v1:= temp @kind object;
  #L1e146e.  v2:= "(this as java.lang.Strinâ€¦ing(startIndex, endIndex)" @kind object;
  #L1e1472.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/v/c/i;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1e1478.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e147e.  v1:= " @" @kind object;
  #L1e1482.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e1488.  call temp:= `append`(v3, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e148e.  v9:= 35I;
  #L1e1492.  call temp:= `append`(v3, v9) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e1498.  v1:= v8.`kotlinx.coroutines.a0.f` @type ^`long` @kind wide;
  #L1e149c.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e14a2.  v9:= `@@kotlin.q.a` @type ^`kotlin.q` @kind object;
  #L1e14a6.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e14ac.  v9:= temp @kind object;
  #L1e14ae.  v1:= "StringBuilder(capacity).â€¦builderAction).toString()" @kind object;
  #L1e14b2.  call `checkNotNullExpressionValue`(v9, v1) @signature `Lkotlin/v/c/i;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1e14b8.  call `setName`(v0, v9) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L1e14be.  return v7 @kind object;
  #L1e14c0.  v9:= new `java.lang.NullPointerException`;
  #L1e14c4.  v0:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L1e14c8.  call `<init>`(v9, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e14ce.  throw v9;
}
