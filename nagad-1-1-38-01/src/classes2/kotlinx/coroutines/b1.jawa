record `kotlinx.coroutines.b1` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.e1` @kind class {
  `int` `kotlinx.coroutines.b1._invoked` @AccessFlag PRIVATE_VOLATILE;
  `kotlin.v.b.l` `kotlinx.coroutines.b1.j` @AccessFlag PRIVATE_FINAL;
}
global `java.util.concurrent.atomic.AtomicIntegerFieldUpdater` `@@kotlinx.coroutines.b1.k` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/b1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1e37d0.  v0:= constclass @type ^`kotlinx.coroutines.b1` @kind object;
  #L1e37d4.  v1:= "_invoked" @kind object;
  #L1e37d8.  call temp:= `newUpdater`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;` @kind static;
  #L1e37de.  v0:= temp @kind object;
  #L1e37e0.  `@@kotlinx.coroutines.b1.k` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` := v0 @kind object;
  #L1e37e4.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.b1` v0 @kind this, `kotlinx.coroutines.d1` v1 @kind object, `kotlin.v.b.l` v2 @kind object) @signature `Lkotlinx/coroutines/b1;.<init>:(Lkotlinx/coroutines/d1;Lkotlin/v/b/l;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1e37f8.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/e1;.<init>:(Lkotlinx/coroutines/d1;)V` @kind direct;
  #L1e37fe.  v0.`kotlinx.coroutines.b1.j` @type ^`kotlin.v.b.l` := v2 @kind object;
  #L1e3802.  v1:= 0I;
  #L1e3804.  v0.`kotlinx.coroutines.b1._invoked` @type ^`int` := v1;
  #L1e3808.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.b1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/b1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1e3750.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L1e3754.  call `invoke`(v0, v1) @signature `Lkotlinx/coroutines/b1;.invoke:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1e375a.  v1:= `@@kotlin.q.a` @type ^`kotlin.q` @kind object;
  #L1e375e.  return v1 @kind object;
}
procedure `void` `invoke`(`kotlinx.coroutines.b1` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/b1;.invoke:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1e381c.  v0:= `@@kotlinx.coroutines.b1.k` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L1e3820.  v1:= 0I;
  #L1e3822.  v2:= 1I;
  #L1e3824.  call temp:= `compareAndSet`(v0, v3, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L1e382a.  v0:= temp;
  #L1e382c.  if v0 == 0 then goto L1e383a;
  #L1e3830.  v0:= v3.`kotlinx.coroutines.b1.j` @type ^`kotlin.v.b.l` @kind object;
  #L1e3834.  call temp:= `invoke`(v0, v4) @signature `Lkotlin/v/b/l;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1e383a.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.b1` v2 @kind this) @signature `Lkotlinx/coroutines/b1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e3770.  v0:= new `java.lang.StringBuilder`;
  #L1e3774.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e377a.  v1:= "InvokeOnCancelling[" @kind object;
  #L1e377e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e3784.  call temp:= `getClassSimpleName`(v2) @signature `Lkotlinx/coroutines/i0;.getClassSimpleName:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1e378a.  v1:= temp @kind object;
  #L1e378c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e3792.  v1:= 64I;
  #L1e3796.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e379c.  call temp:= `getHexAddress`(v2) @signature `Lkotlinx/coroutines/i0;.getHexAddress:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1e37a2.  v1:= temp @kind object;
  #L1e37a4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e37aa.  v1:= 93I;
  #L1e37ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e37b4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e37ba.  v0:= temp @kind object;
  #L1e37bc.  return v0 @kind object;
}
