record `kotlinx.coroutines.v0` @kind class @AccessFlag PUBLIC_FINAL {
}
global `kotlinx.coroutines.internal.v` `@@kotlinx.coroutines.v0.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.internal.v` `@@kotlinx.coroutines.v0.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/v0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1e32e4.  v0:= new `kotlinx.coroutines.internal.v`;
  #L1e32e8.  v1:= "REMOVED_TASK" @kind object;
  #L1e32ec.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/v;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e32f2.  `@@kotlinx.coroutines.v0.a` @type ^`kotlinx.coroutines.internal.v` := v0 @kind object;
  #L1e32f6.  v0:= new `kotlinx.coroutines.internal.v`;
  #L1e32fa.  v1:= "CLOSED_EMPTY" @kind object;
  #L1e32fe.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/v;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e3304.  `@@kotlinx.coroutines.v0.b` @type ^`kotlinx.coroutines.internal.v` := v0 @kind object;
  #L1e3308.  return @kind void;
}
procedure `kotlinx.coroutines.internal.v` `access$getCLOSED_EMPTY$p`() @signature `Lkotlinx/coroutines/v0;.access$getCLOSED_EMPTY$p:()Lkotlinx/coroutines/internal/v;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L1e32b4.  v0:= `@@kotlinx.coroutines.v0.b` @type ^`kotlinx.coroutines.internal.v` @kind object;
  #L1e32b8.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.v` `access$getDISPOSED_TASK$p`() @signature `Lkotlinx/coroutines/v0;.access$getDISPOSED_TASK$p:()Lkotlinx/coroutines/internal/v;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L1e32cc.  v0:= `@@kotlinx.coroutines.v0.a` @type ^`kotlinx.coroutines.internal.v` @kind object;
  #L1e32d0.  return v0 @kind object;
}
