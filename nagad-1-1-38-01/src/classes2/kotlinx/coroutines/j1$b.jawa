record `kotlinx.coroutines.j1$b` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.y0` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.j1$b._exceptionsHolder` @AccessFlag PRIVATE_VOLATILE;
  `int` `kotlinx.coroutines.j1$b._isCompleting` @AccessFlag PRIVATE_VOLATILE;
  `java.lang.Object` `kotlinx.coroutines.j1$b._rootCause` @AccessFlag PRIVATE_VOLATILE;
  `kotlinx.coroutines.n1` `kotlinx.coroutines.j1$b.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.j1$b` v0 @kind this, `kotlinx.coroutines.n1` v1 @kind object, `boolean` v2 , `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/j1$b;.<init>:(Lkotlinx/coroutines/n1;ZLjava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1e41b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1e41ba.  v0.`kotlinx.coroutines.j1$b.f` @type ^`kotlinx.coroutines.n1` := v1 @kind object;
  #L1e41be.  v0.`kotlinx.coroutines.j1$b._isCompleting` @type ^`int` := v2;
  #L1e41c2.  v0.`kotlinx.coroutines.j1$b._rootCause` @type ^`java.lang.Object` := v3 @kind object;
  #L1e41c6.  v1:= 0I;
  #L1e41c8.  v0.`kotlinx.coroutines.j1$b._exceptionsHolder` @type ^`java.lang.Object` := v1 @kind object;
  #L1e41cc.  return @kind void;
}
procedure `java.util.ArrayList` `a`(`kotlinx.coroutines.j1$b` v2 @kind this) @signature `Lkotlinx/coroutines/j1$b;.a:()Ljava/util/ArrayList;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1e40bc.  v0:= new `java.util.ArrayList`;
  #L1e40c0.  v1:= 4I;
  #L1e40c2.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L1e40c8.  return v0 @kind object;
}
procedure `void` `a`(`kotlinx.coroutines.j1$b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/j1$b;.a:(Ljava/lang/Object;)V` @AccessFlag PRIVATE_FINAL {
    temp;

  #L1e42b0.  v0.`kotlinx.coroutines.j1$b._exceptionsHolder` @type ^`java.lang.Object` := v1 @kind object;
  #L1e42b4.  return @kind void;
}
procedure `java.lang.Object` `b`(`kotlinx.coroutines.j1$b` v1 @kind this) @signature `Lkotlinx/coroutines/j1$b;.b:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L1e3fe0.  v0:= v1.`kotlinx.coroutines.j1$b._exceptionsHolder` @type ^`java.lang.Object` @kind object;
  #L1e3fe4.  return v0 @kind object;
}
procedure `void` `addExceptionLocked`(`kotlinx.coroutines.j1$b` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/j1$b;.addExceptionLocked:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1e41e0.  call temp:= `getRootCause`(v2) @signature `Lkotlinx/coroutines/j1$b;.getRootCause:()Ljava/lang/Throwable;` @kind virtual;
  #L1e41e6.  v0:= temp @kind object;
  #L1e41e8.  if v0 != 0 then goto L1e41f4;
  #L1e41ec.  call `setRootCause`(v2, v3) @signature `Lkotlinx/coroutines/j1$b;.setRootCause:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1e41f2.  return @kind void;
  #L1e41f4.  if v3 != v0 then goto L1e41fa;
  #L1e41f8.  return @kind void;
  #L1e41fa.  call temp:= `b`(v2) @signature `Lkotlinx/coroutines/j1$b;.b:()Ljava/lang/Object;` @kind direct;
  #L1e4200.  v0:= temp @kind object;
  #L1e4202.  if v0 != 0 then goto L1e420e;
  #L1e4206.  call `a`(v2, v3) @signature `Lkotlinx/coroutines/j1$b;.a:(Ljava/lang/Object;)V` @kind direct;
  #L1e420c.  goto L1e424e;
  #L1e420e.  v1:= instanceof @variable v0 @type ^`java.lang.Throwable` @kind boolean;
  #L1e4212.  if v1 == 0 then goto L1e423c;
  #L1e4216.  if v3 != v0 then goto L1e421c;
  #L1e421a.  return @kind void;
  #L1e421c.  call temp:= `a`(v2) @signature `Lkotlinx/coroutines/j1$b;.a:()Ljava/util/ArrayList;` @kind direct;
  #L1e4222.  v1:= temp @kind object;
  #L1e4224.  call temp:= `add`(v1, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1e422a.  call temp:= `add`(v1, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1e4230.  v3:= `@@kotlin.q.a` @type ^`kotlin.q` @kind object;
  #L1e4234.  call `a`(v2, v1) @signature `Lkotlinx/coroutines/j1$b;.a:(Ljava/lang/Object;)V` @kind direct;
  #L1e423a.  goto L1e424e;
  #L1e423c.  v1:= instanceof @variable v0 @type ^`java.util.ArrayList` @kind boolean;
  #L1e4240.  if v1 == 0 then goto L1e4250;
  #L1e4244.  v0:= (`java.util.ArrayList`) v0 @kind object;
  #L1e4248.  call temp:= `add`(v0, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1e424e.  return @kind void;
  #L1e4250.  v3:= new `java.lang.StringBuilder`;
  #L1e4254.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e425a.  v1:= "State is " @kind object;
  #L1e425e.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e4264.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e426a.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e4270.  v3:= temp @kind object;
  #L1e4272.  v0:= new `java.lang.IllegalStateException`;
  #L1e4276.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e427c.  v3:= temp @kind object;
  #L1e427e.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e4284.  throw v0;
}
procedure `kotlinx.coroutines.n1` `getList`(`kotlinx.coroutines.j1$b` v1 @kind this) @signature `Lkotlinx/coroutines/j1$b;.getList:()Lkotlinx/coroutines/n1;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e419c.  v0:= v1.`kotlinx.coroutines.j1$b.f` @type ^`kotlinx.coroutines.n1` @kind object;
  #L1e41a0.  return v0 @kind object;
}
procedure `java.lang.Throwable` `getRootCause`(`kotlinx.coroutines.j1$b` v1 @kind this) @signature `Lkotlinx/coroutines/j1$b;.getRootCause:()Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1e40a0.  v0:= v1.`kotlinx.coroutines.j1$b._rootCause` @type ^`java.lang.Object` @kind object;
  #L1e40a4.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L1e40a8.  return v0 @kind object;
}
procedure `boolean` `isActive`(`kotlinx.coroutines.j1$b` v1 @kind this) @signature `Lkotlinx/coroutines/j1$b;.isActive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e3f54.  call temp:= `getRootCause`(v1) @signature `Lkotlinx/coroutines/j1$b;.getRootCause:()Ljava/lang/Throwable;` @kind virtual;
  #L1e3f5a.  v0:= temp @kind object;
  #L1e3f5c.  if v0 != 0 then goto L1e3f64;
  #L1e3f60.  v0:= 1I;
  #L1e3f62.  goto L1e3f66;
  #L1e3f64.  v0:= 0I;
  #L1e3f66.  return v0;
}
procedure `boolean` `isCancelling`(`kotlinx.coroutines.j1$b` v1 @kind this) @signature `Lkotlinx/coroutines/j1$b;.isCancelling:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1e3f78.  call temp:= `getRootCause`(v1) @signature `Lkotlinx/coroutines/j1$b;.getRootCause:()Ljava/lang/Throwable;` @kind virtual;
  #L1e3f7e.  v0:= temp @kind object;
  #L1e3f80.  if v0 == 0 then goto L1e3f88;
  #L1e3f84.  v0:= 1I;
  #L1e3f86.  goto L1e3f8a;
  #L1e3f88.  v0:= 0I;
  #L1e3f8a.  return v0;
}
procedure `boolean` `isCompleting`(`kotlinx.coroutines.j1$b` v1 @kind this) @signature `Lkotlinx/coroutines/j1$b;.isCompleting:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1e3f9c.  v0:= v1.`kotlinx.coroutines.j1$b._isCompleting` @type ^`int`;
  #L1e3fa0.  return v0;
}
procedure `boolean` `isSealed`(`kotlinx.coroutines.j1$b` v2 @kind this) @signature `Lkotlinx/coroutines/j1$b;.isSealed:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1e3fb4.  call temp:= `b`(v2) @signature `Lkotlinx/coroutines/j1$b;.b:()Ljava/lang/Object;` @kind direct;
  #L1e3fba.  v0:= temp @kind object;
  #L1e3fbc.  call temp:= `access$getSEALED$p`() @signature `Lkotlinx/coroutines/k1;.access$getSEALED$p:()Lkotlinx/coroutines/internal/v;` @kind static;
  #L1e3fc2.  v1:= temp @kind object;
  #L1e3fc4.  if v0 != v1 then goto L1e3fcc;
  #L1e3fc8.  v0:= 1I;
  #L1e3fca.  goto L1e3fce;
  #L1e3fcc.  v0:= 0I;
  #L1e3fce.  return v0;
}
procedure `java.util.List` `sealLocked`(`kotlinx.coroutines.j1$b` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/j1$b;.sealLocked:(Ljava/lang/Throwable;)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1e40dc.  call temp:= `b`(v3) @signature `Lkotlinx/coroutines/j1$b;.b:()Ljava/lang/Object;` @kind direct;
  #L1e40e2.  v0:= temp @kind object;
  #L1e40e4.  if v0 != 0 then goto L1e40f2;
  #L1e40e8.  call temp:= `a`(v3) @signature `Lkotlinx/coroutines/j1$b;.a:()Ljava/util/ArrayList;` @kind direct;
  #L1e40ee.  v0:= temp @kind object;
  #L1e40f0.  goto L1e4118;
  #L1e40f2.  v1:= instanceof @variable v0 @type ^`java.lang.Throwable` @kind boolean;
  #L1e40f6.  if v1 == 0 then goto L1e410c;
  #L1e40fa.  call temp:= `a`(v3) @signature `Lkotlinx/coroutines/j1$b;.a:()Ljava/util/ArrayList;` @kind direct;
  #L1e4100.  v1:= temp @kind object;
  #L1e4102.  call temp:= `add`(v1, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1e4108.  v0:= v1 @kind object;
  #L1e410a.  goto L1e4118;
  #L1e410c.  v1:= instanceof @variable v0 @type ^`java.util.ArrayList` @kind boolean;
  #L1e4110.  if v1 == 0 then goto L1e4156;
  #L1e4114.  v0:= (`java.util.ArrayList`) v0 @kind object;
  #L1e4118.  call temp:= `getRootCause`(v3) @signature `Lkotlinx/coroutines/j1$b;.getRootCause:()Ljava/lang/Throwable;` @kind virtual;
  #L1e411e.  v1:= temp @kind object;
  #L1e4120.  if v1 == 0 then goto L1e412c;
  #L1e4124.  v2:= 0I;
  #L1e4126.  call `add`(v0, v2, v1) @signature `Ljava/util/ArrayList;.add:(ILjava/lang/Object;)V` @kind virtual;
  #L1e412c.  if v4 == 0 then goto L1e4146;
  #L1e4130.  call temp:= `areEqual`(v4, v1) @signature `Lkotlin/v/c/i;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1e4136.  v1:= temp;
  #L1e4138.  v1:= v1 ^~ 1;
  #L1e413c.  if v1 == 0 then goto L1e4146;
  #L1e4140.  call temp:= `add`(v0, v4) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1e4146.  call temp:= `access$getSEALED$p`() @signature `Lkotlinx/coroutines/k1;.access$getSEALED$p:()Lkotlinx/coroutines/internal/v;` @kind static;
  #L1e414c.  v4:= temp @kind object;
  #L1e414e.  call `a`(v3, v4) @signature `Lkotlinx/coroutines/j1$b;.a:(Ljava/lang/Object;)V` @kind direct;
  #L1e4154.  return v0 @kind object;
  #L1e4156.  v4:= new `java.lang.StringBuilder`;
  #L1e415a.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e4160.  v1:= "State is " @kind object;
  #L1e4164.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e416a.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e4170.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e4176.  v4:= temp @kind object;
  #L1e4178.  v0:= new `java.lang.IllegalStateException`;
  #L1e417c.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e4182.  v4:= temp @kind object;
  #L1e4184.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e418a.  throw v0;
}
procedure `void` `setCompleting`(`kotlinx.coroutines.j1$b` v0 @kind this, `boolean` v1 ) @signature `Lkotlinx/coroutines/j1$b;.setCompleting:(Z)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1e4298.  v0.`kotlinx.coroutines.j1$b._isCompleting` @type ^`int` := v1;
  #L1e429c.  return @kind void;
}
procedure `void` `setRootCause`(`kotlinx.coroutines.j1$b` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/j1$b;.setRootCause:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1e42c8.  v0.`kotlinx.coroutines.j1$b._rootCause` @type ^`java.lang.Object` := v1 @kind object;
  #L1e42cc.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.j1$b` v2 @kind this) @signature `Lkotlinx/coroutines/j1$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e3ff8.  v0:= new `java.lang.StringBuilder`;
  #L1e3ffc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e4002.  v1:= "Finishing[cancelling=" @kind object;
  #L1e4006.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e400c.  call temp:= `isCancelling`(v2) @signature `Lkotlinx/coroutines/j1$b;.isCancelling:()Z` @kind virtual;
  #L1e4012.  v1:= temp;
  #L1e4014.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e401a.  v1:= ", completing=" @kind object;
  #L1e401e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e4024.  call temp:= `isCompleting`(v2) @signature `Lkotlinx/coroutines/j1$b;.isCompleting:()Z` @kind virtual;
  #L1e402a.  v1:= temp;
  #L1e402c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e4032.  v1:= ", rootCause=" @kind object;
  #L1e4036.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e403c.  call temp:= `getRootCause`(v2) @signature `Lkotlinx/coroutines/j1$b;.getRootCause:()Ljava/lang/Throwable;` @kind virtual;
  #L1e4042.  v1:= temp @kind object;
  #L1e4044.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e404a.  v1:= ", exceptions=" @kind object;
  #L1e404e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e4054.  call temp:= `b`(v2) @signature `Lkotlinx/coroutines/j1$b;.b:()Ljava/lang/Object;` @kind direct;
  #L1e405a.  v1:= temp @kind object;
  #L1e405c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e4062.  v1:= ", list=" @kind object;
  #L1e4066.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e406c.  call temp:= `getList`(v2) @signature `Lkotlinx/coroutines/j1$b;.getList:()Lkotlinx/coroutines/n1;` @kind virtual;
  #L1e4072.  v1:= temp @kind object;
  #L1e4074.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e407a.  v1:= 93I;
  #L1e407e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e4084.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e408a.  v0:= temp @kind object;
  #L1e408c.  return v0 @kind object;
}
