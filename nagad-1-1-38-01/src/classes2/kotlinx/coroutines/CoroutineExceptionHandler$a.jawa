record `kotlinx.coroutines.CoroutineExceptionHandler$a` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.t.g$c` @kind interface {
}
global `kotlinx.coroutines.CoroutineExceptionHandler$a` `@@kotlinx.coroutines.CoroutineExceptionHandler$a.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/CoroutineExceptionHandler$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1e1140.  v0:= new `kotlinx.coroutines.CoroutineExceptionHandler$a`;
  #L1e1144.  call `<init>`(v0) @signature `Lkotlinx/coroutines/CoroutineExceptionHandler$a;.<init>:()V` @kind direct;
  #L1e114a.  `@@kotlinx.coroutines.CoroutineExceptionHandler$a.a` @type ^`kotlinx.coroutines.CoroutineExceptionHandler$a` := v0 @kind object;
  #L1e114e.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.CoroutineExceptionHandler$a` v0 @kind this) @signature `Lkotlinx/coroutines/CoroutineExceptionHandler$a;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1e1160.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1e1166.  return @kind void;
}
