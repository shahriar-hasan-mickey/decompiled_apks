record `kotlinx.coroutines.f0` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `kotlinx.coroutines.f0` `@@kotlinx.coroutines.f0.f` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.f0` `@@kotlinx.coroutines.f0.g` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.f0` `@@kotlinx.coroutines.f0.h` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.f0` `@@kotlinx.coroutines.f0.i` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.f0`[] `@@kotlinx.coroutines.f0.j` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/f0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1e1900.  v0:= 4I;
  #L1e1902.  v0:= new `kotlinx.coroutines.f0`[v0];
  #L1e1906.  v1:= new `kotlinx.coroutines.f0`;
  #L1e190a.  v2:= 0I;
  #L1e190c.  v3:= "DEFAULT" @kind object;
  #L1e1910.  call `<init>`(v1, v3, v2) @signature `Lkotlinx/coroutines/f0;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1e1916.  `@@kotlinx.coroutines.f0.f` @type ^`kotlinx.coroutines.f0` := v1 @kind object;
  #L1e191a.  v0[v2]:= v1 @kind object;
  #L1e191e.  v1:= new `kotlinx.coroutines.f0`;
  #L1e1922.  v2:= 1I;
  #L1e1924.  v3:= "LAZY" @kind object;
  #L1e1928.  call `<init>`(v1, v3, v2) @signature `Lkotlinx/coroutines/f0;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1e192e.  `@@kotlinx.coroutines.f0.g` @type ^`kotlinx.coroutines.f0` := v1 @kind object;
  #L1e1932.  v0[v2]:= v1 @kind object;
  #L1e1936.  v1:= new `kotlinx.coroutines.f0`;
  #L1e193a.  v2:= 2I;
  #L1e193c.  v3:= "ATOMIC" @kind object;
  #L1e1940.  call `<init>`(v1, v3, v2) @signature `Lkotlinx/coroutines/f0;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1e1946.  `@@kotlinx.coroutines.f0.h` @type ^`kotlinx.coroutines.f0` := v1 @kind object;
  #L1e194a.  v0[v2]:= v1 @kind object;
  #L1e194e.  v1:= new `kotlinx.coroutines.f0`;
  #L1e1952.  v2:= 3I;
  #L1e1954.  v3:= "UNDISPATCHED" @kind object;
  #L1e1958.  call `<init>`(v1, v3, v2) @signature `Lkotlinx/coroutines/f0;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1e195e.  `@@kotlinx.coroutines.f0.i` @type ^`kotlinx.coroutines.f0` := v1 @kind object;
  #L1e1962.  v0[v2]:= v1 @kind object;
  #L1e1966.  `@@kotlinx.coroutines.f0.j` @type ^`kotlinx.coroutines.f0`[] := v0 @kind object;
  #L1e196a.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.f0` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlinx/coroutines/f0;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1e197c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1e1982.  return @kind void;
}
procedure `kotlinx.coroutines.f0` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkotlinx/coroutines/f0;.valueOf:(Ljava/lang/String;)Lkotlinx/coroutines/f0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1e18b8.  v0:= constclass @type ^`kotlinx.coroutines.f0` @kind object;
  #L1e18bc.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L1e18c2.  v1:= temp @kind object;
  #L1e18c4.  v1:= (`kotlinx.coroutines.f0`) v1 @kind object;
  #L1e18c8.  return v1 @kind object;
}
procedure `kotlinx.coroutines.f0`[] `values`() @signature `Lkotlinx/coroutines/f0;.values:()[Lkotlinx/coroutines/f0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1e18dc.  v0:= `@@kotlinx.coroutines.f0.j` @type ^`kotlinx.coroutines.f0`[] @kind object;
  #L1e18e0.  call temp:= `clone`(v0) @signature `[Lkotlinx/coroutines/f0;.clone:()Ljava/lang/Object;` @kind virtual;
  #L1e18e6.  v0:= temp @kind object;
  #L1e18e8.  v0:= (`kotlinx.coroutines.f0`[]) v0 @kind object;
  #L1e18ec.  return v0 @kind object;
}
procedure `void` `invoke`(`kotlinx.coroutines.f0` v6 @kind this, `kotlin.v.b.p` v7 @kind object, `java.lang.Object` v8 @kind object, `kotlin.t.d` v9 @kind object) @signature `Lkotlinx/coroutines/f0;.invoke:(Lkotlin/v/b/p;Ljava/lang/Object;Lkotlin/t/d;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1e1994.  v0:= `@@kotlinx.coroutines.e0.b` @type ^`int`[] @kind object;
  #L1e1998.  call temp:= `ordinal`(v6) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L1e199e.  v1:= temp;
  #L1e19a0.  v0:= v0[v1];
  #L1e19a4.  v1:= 1I;
  #L1e19a6.  if v0 == v1 then goto L1e19da;
  #L1e19aa.  v1:= 2I;
  #L1e19ac.  if v0 == v1 then goto L1e19d2;
  #L1e19b0.  v1:= 3I;
  #L1e19b2.  if v0 == v1 then goto L1e19ca;
  #L1e19b6.  v7:= 4I;
  #L1e19b8.  if v0 != v7 then goto L1e19be;
  #L1e19bc.  goto L1e19ec;
  #L1e19be.  v7:= new `kotlin.NoWhenBranchMatchedException`;
  #L1e19c2.  call `<init>`(v7) @signature `Lkotlin/NoWhenBranchMatchedException;.<init>:()V` @kind direct;
  #L1e19c8.  throw v7;
  #L1e19ca.  call `startCoroutineUndispatched`(v7, v8, v9) @signature `Lkotlinx/coroutines/c2/b;.startCoroutineUndispatched:(Lkotlin/v/b/p;Ljava/lang/Object;Lkotlin/t/d;)V` @kind static;
  #L1e19d0.  goto L1e19ec;
  #L1e19d2.  call `startCoroutine`(v7, v8, v9) @signature `Lkotlin/t/f;.startCoroutine:(Lkotlin/v/b/p;Ljava/lang/Object;Lkotlin/t/d;)V` @kind static;
  #L1e19d8.  goto L1e19ec;
  #L1e19da.  v3:= 0I;
  #L1e19dc.  v4:= 4I;
  #L1e19de.  v5:= 0I;
  #L1e19e0.  v0:= v7 @kind object;
  #L1e19e2.  v1:= v8 @kind object;
  #L1e19e4.  v2:= v9 @kind object;
  #L1e19e6.  call `startCoroutineCancellable$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/c2/a;.startCoroutineCancellable$default:(Lkotlin/v/b/p;Ljava/lang/Object;Lkotlin/t/d;Lkotlin/v/b/l;ILjava/lang/Object;)V` @kind static;
  #L1e19ec.  return @kind void;
}
procedure `boolean` `isLazy`(`kotlinx.coroutines.f0` v1 @kind this) @signature `Lkotlinx/coroutines/f0;.isLazy:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1e1898.  v0:= `@@kotlinx.coroutines.f0.g` @type ^`kotlinx.coroutines.f0` @kind object;
  #L1e189c.  if v1 != v0 then goto L1e18a4;
  #L1e18a0.  v0:= 1I;
  #L1e18a2.  goto L1e18a6;
  #L1e18a4.  v0:= 0I;
  #L1e18a6.  return v0;
}
