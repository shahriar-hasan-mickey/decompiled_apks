record `kotlinx.coroutines.y` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.util.List` `@@kotlinx.coroutines.y.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/y;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1e1178.  v0:= 1I;
  #L1e117a.  v0:= new `kotlinx.coroutines.CoroutineExceptionHandler`[v0];
  #L1e117e.  v1:= new `kotlinx.coroutines.android.AndroidExceptionPreHandler`;
  #L1e1182.  call `<init>`(v1) @signature `Lkotlinx/coroutines/android/AndroidExceptionPreHandler;.<init>:()V` @kind direct;
  #L1e1188.  v2:= 0I;
  #L1e118a.  v0[v2]:= v1 @kind object;
  #L1e118e.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1e1194.  v0:= temp @kind object;
  #L1e1196.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1e119c.  v0:= temp @kind object;
  #L1e119e.  call temp:= `asSequence`(v0) @signature `Lkotlin/z/c;.asSequence:(Ljava/util/Iterator;)Lkotlin/z/b;` @kind static;
  #L1e11a4.  v0:= temp @kind object;
  #L1e11a6.  call temp:= `toList`(v0) @signature `Lkotlin/z/c;.toList:(Lkotlin/z/b;)Ljava/util/List;` @kind static;
  #L1e11ac.  v0:= temp @kind object;
  #L1e11ae.  `@@kotlinx.coroutines.y.a` @type ^`java.util.List` := v0 @kind object;
  #L1e11b2.  return @kind void;
}
procedure `void` `handleCoroutineExceptionImpl`(`kotlin.t.g` v4 @kind object, `java.lang.Throwable` v5 @kind object) @signature `Lkotlinx/coroutines/y;.handleCoroutineExceptionImpl:(Lkotlin/t/g;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1e11c4.  v0:= `@@kotlinx.coroutines.y.a` @type ^`java.util.List` @kind object;
  #L1e11c8.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1e11ce.  v0:= temp @kind object;
  #L1e11d0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1e11d6.  v1:= temp;
  #L1e11d8.  if v1 == 0 then goto L1e1212;
  #L1e11dc.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1e11e2.  v1:= temp @kind object;
  #L1e11e4.  v1:= (`kotlinx.coroutines.CoroutineExceptionHandler`) v1 @kind object;
  #L1e11e8.  call `handleException`(v1, v4, v5) @signature `Lkotlinx/coroutines/CoroutineExceptionHandler;.handleException:(Lkotlin/t/g;Ljava/lang/Throwable;)V` @kind interface;
  #L1e11ee.  goto L1e11d0;
  #L1e11f0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e11f2.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1e11f8.  v2:= temp @kind object;
  #L1e11fa.  call temp:= `getUncaughtExceptionHandler`(v2) @signature `Ljava/lang/Thread;.getUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;` @kind virtual;
  #L1e1200.  v3:= temp @kind object;
  #L1e1202.  call temp:= `handlerException`(v5, v1) @signature `Lkotlinx/coroutines/z;.handlerException:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L1e1208.  v1:= temp @kind object;
  #L1e120a.  call `uncaughtException`(v3, v2, v1) @signature `Ljava/lang/Thread$UncaughtExceptionHandler;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V` @kind interface;
  #L1e1210.  goto L1e11d0;
  #L1e1212.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1e1218.  v4:= temp @kind object;
  #L1e121a.  call temp:= `getUncaughtExceptionHandler`(v4) @signature `Ljava/lang/Thread;.getUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;` @kind virtual;
  #L1e1220.  v0:= temp @kind object;
  #L1e1222.  call `uncaughtException`(v0, v4, v5) @signature `Ljava/lang/Thread$UncaughtExceptionHandler;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V` @kind interface;
  #L1e1228.  return @kind void;
  catch `java.lang.Throwable` @[L1e11e8..L1e11ee] goto L1e11f0;
}
