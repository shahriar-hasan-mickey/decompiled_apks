record `kotlinx.coroutines.d2.h` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.d2.j` @kind interface {
}
global `int` `@@kotlinx.coroutines.d2.h.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.d2.h` `@@kotlinx.coroutines.d2.h.g` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/d2/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1ec808.  v0:= new `kotlinx.coroutines.d2.h`;
  #L1ec80c.  call `<init>`(v0) @signature `Lkotlinx/coroutines/d2/h;.<init>:()V` @kind direct;
  #L1ec812.  `@@kotlinx.coroutines.d2.h.g` @type ^`kotlinx.coroutines.d2.h` := v0 @kind object;
  #L1ec816.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.d2.h` v0 @kind this) @signature `Lkotlinx/coroutines/d2/h;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1ec828.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ec82e.  return @kind void;
}
procedure `void` `afterTask`(`kotlinx.coroutines.d2.h` v0 @kind this) @signature `Lkotlinx/coroutines/d2/h;.afterTask:()V` @AccessFlag PUBLIC {
    temp;

  #L1ec840.  return @kind void;
}
procedure `int` `getTaskMode`(`kotlinx.coroutines.d2.h` v1 @kind this) @signature `Lkotlinx/coroutines/d2/h;.getTaskMode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ec7f0.  v0:= `@@kotlinx.coroutines.d2.h.f` @type ^`int`;
  #L1ec7f4.  return v0;
}
