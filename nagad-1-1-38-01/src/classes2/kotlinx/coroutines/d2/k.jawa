record `kotlinx.coroutines.d2.k` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.d2.i` @kind class {
  `java.lang.Runnable` `kotlinx.coroutines.d2.k.h` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.d2.k` v0 @kind this, `java.lang.Runnable` v1 @kind object, `long` v2 , `kotlinx.coroutines.d2.j` v4 @kind object) @signature `Lkotlinx/coroutines/d2/k;.<init>:(Ljava/lang/Runnable;JLkotlinx/coroutines/d2/j;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1ec8e0.  call `<init>`(v0, v2, v4) @signature `Lkotlinx/coroutines/d2/i;.<init>:(JLkotlinx/coroutines/d2/j;)V` @kind direct;
  #L1ec8e6.  v0.`kotlinx.coroutines.d2.k.h` @type ^`java.lang.Runnable` := v1 @kind object;
  #L1ec8ea.  return @kind void;
}
procedure `void` `run`(`kotlinx.coroutines.d2.k` v2 @kind this) @signature `Lkotlinx/coroutines/d2/k;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ec8fc.  v0:= v2.`kotlinx.coroutines.d2.k.h` @type ^`java.lang.Runnable` @kind object;
  #L1ec900.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L1ec906.  v0:= v2.`kotlinx.coroutines.d2.i.g` @type ^`kotlinx.coroutines.d2.j` @kind object;
  #L1ec90a.  call `afterTask`(v0) @signature `Lkotlinx/coroutines/d2/j;.afterTask:()V` @kind interface;
  #L1ec910.  return @kind void;
  #L1ec912.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ec914.  v1:= v2.`kotlinx.coroutines.d2.i.g` @type ^`kotlinx.coroutines.d2.j` @kind object;
  #L1ec918.  call `afterTask`(v1) @signature `Lkotlinx/coroutines/d2/j;.afterTask:()V` @kind interface;
  #L1ec91e.  throw v0;
  catch `java.lang.Throwable` @[L1ec8fc..L1ec906] goto L1ec912;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.d2.k` v4 @kind this) @signature `Lkotlinx/coroutines/d2/k;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ec854.  v0:= new `java.lang.StringBuilder`;
  #L1ec858.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ec85e.  v1:= "Task[" @kind object;
  #L1ec862.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ec868.  v1:= v4.`kotlinx.coroutines.d2.k.h` @type ^`java.lang.Runnable` @kind object;
  #L1ec86c.  call temp:= `getClassSimpleName`(v1) @signature `Lkotlinx/coroutines/i0;.getClassSimpleName:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1ec872.  v1:= temp @kind object;
  #L1ec874.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ec87a.  v1:= 64I;
  #L1ec87e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ec884.  v1:= v4.`kotlinx.coroutines.d2.k.h` @type ^`java.lang.Runnable` @kind object;
  #L1ec888.  call temp:= `getHexAddress`(v1) @signature `Lkotlinx/coroutines/i0;.getHexAddress:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1ec88e.  v1:= temp @kind object;
  #L1ec890.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ec896.  v1:= ", " @kind object;
  #L1ec89a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ec8a0.  v2:= v4.`kotlinx.coroutines.d2.i.f` @type ^`long` @kind wide;
  #L1ec8a4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ec8aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ec8b0.  v1:= v4.`kotlinx.coroutines.d2.i.g` @type ^`kotlinx.coroutines.d2.j` @kind object;
  #L1ec8b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ec8ba.  v1:= 93I;
  #L1ec8be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ec8c4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ec8ca.  v0:= temp @kind object;
  #L1ec8cc.  return v0 @kind object;
}
