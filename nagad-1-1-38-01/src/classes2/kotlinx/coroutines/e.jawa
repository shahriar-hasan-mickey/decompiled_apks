record `kotlinx.coroutines.e` @kind class @AccessFlag FINAL_SYNTHETIC {
}
procedure `kotlinx.coroutines.d1` `launch`(`kotlinx.coroutines.c0` v1 @kind object, `kotlin.t.g` v2 @kind object, `kotlinx.coroutines.f0` v3 @kind object, `kotlin.v.b.p` v4 @kind object) @signature `Lkotlinx/coroutines/e;.launch:(Lkotlinx/coroutines/c0;Lkotlin/t/g;Lkotlinx/coroutines/f0;Lkotlin/v/b/p;)Lkotlinx/coroutines/d1;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1df34c.  call temp:= `newCoroutineContext`(v1, v2) @signature `Lkotlinx/coroutines/w;.newCoroutineContext:(Lkotlinx/coroutines/c0;Lkotlin/t/g;)Lkotlin/t/g;` @kind static;
  #L1df352.  v1:= temp @kind object;
  #L1df354.  call temp:= `isLazy`(v3) @signature `Lkotlinx/coroutines/f0;.isLazy:()Z` @kind virtual;
  #L1df35a.  v2:= temp;
  #L1df35c.  if v2 == 0 then goto L1df36c;
  #L1df360.  v2:= new `kotlinx.coroutines.l1`;
  #L1df364.  call `<init>`(v2, v1, v4) @signature `Lkotlinx/coroutines/l1;.<init>:(Lkotlin/t/g;Lkotlin/v/b/p;)V` @kind direct;
  #L1df36a.  goto L1df378;
  #L1df36c.  v2:= new `kotlinx.coroutines.r1`;
  #L1df370.  v0:= 1I;
  #L1df372.  call `<init>`(v2, v1, v0) @signature `Lkotlinx/coroutines/r1;.<init>:(Lkotlin/t/g;Z)V` @kind direct;
  #L1df378.  call `start`(v2, v3, v2, v4) @signature `Lkotlinx/coroutines/a;.start:(Lkotlinx/coroutines/f0;Ljava/lang/Object;Lkotlin/v/b/p;)V` @kind virtual;
  #L1df37e.  return v2 @kind object;
}
procedure `kotlinx.coroutines.d1` `launch$default`(`kotlinx.coroutines.c0` v0 @kind object, `kotlin.t.g` v1 @kind object, `kotlinx.coroutines.f0` v2 @kind object, `kotlin.v.b.p` v3 @kind object, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/e;.launch$default:(Lkotlinx/coroutines/c0;Lkotlin/t/g;Lkotlinx/coroutines/f0;Lkotlin/v/b/p;ILjava/lang/Object;)Lkotlinx/coroutines/d1;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1df318.  v5:= v4 ^& 1;
  #L1df31c.  if v5 == 0 then goto L1df324;
  #L1df320.  v1:= `@@kotlin.t.h.f` @type ^`kotlin.t.h` @kind object;
  #L1df324.  v4:= v4 ^& 2;
  #L1df328.  if v4 == 0 then goto L1df330;
  #L1df32c.  v2:= `@@kotlinx.coroutines.f0.f` @type ^`kotlinx.coroutines.f0` @kind object;
  #L1df330.  call temp:= `launch`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/d;.launch:(Lkotlinx/coroutines/c0;Lkotlin/t/g;Lkotlinx/coroutines/f0;Lkotlin/v/b/p;)Lkotlinx/coroutines/d1;` @kind static;
  #L1df336.  v0:= temp @kind object;
  #L1df338.  return v0 @kind object;
}
procedure `java.lang.Object` `withContext`(`kotlin.t.g` v8 @kind object, `kotlin.v.b.p` v9 @kind object, `kotlin.t.d` v10 @kind object) @signature `Lkotlinx/coroutines/e;.withContext:(Lkotlin/t/g;Lkotlin/v/b/p;Lkotlin/t/d;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1df234.  call temp:= `getContext`(v10) @signature `Lkotlin/t/d;.getContext:()Lkotlin/t/g;` @kind interface;
  #L1df23a.  v0:= temp @kind object;
  #L1df23c.  call temp:= `plus`(v0, v8) @signature `Lkotlin/t/g;.plus:(Lkotlin/t/g;)Lkotlin/t/g;` @kind interface;
  #L1df242.  v8:= temp @kind object;
  #L1df244.  call `checkCompletion`(v8) @signature `Lkotlinx/coroutines/b2;.checkCompletion:(Lkotlin/t/g;)V` @kind static;
  #L1df24a.  if v8 != v0 then goto L1df262;
  #L1df24e.  v0:= new `kotlinx.coroutines.internal.t`;
  #L1df252.  call `<init>`(v0, v8, v10) @signature `Lkotlinx/coroutines/internal/t;.<init>:(Lkotlin/t/g;Lkotlin/t/d;)V` @kind direct;
  #L1df258.  call temp:= `startUndispatchedOrReturn`(v0, v0, v9) @signature `Lkotlinx/coroutines/c2/b;.startUndispatchedOrReturn:(Lkotlinx/coroutines/internal/t;Ljava/lang/Object;Lkotlin/v/b/p;)Ljava/lang/Object;` @kind static;
  #L1df25e.  v8:= temp @kind object;
  #L1df260.  goto L1df2e8;
  #L1df262.  v1:= `@@kotlin.t.e.c` @type ^`kotlin.t.e$b` @kind object;
  #L1df266.  call temp:= `get`(v8, v1) @signature `Lkotlin/t/g;.get:(Lkotlin/t/g$c;)Lkotlin/t/g$b;` @kind interface;
  #L1df26c.  v1:= temp @kind object;
  #L1df26e.  v1:= (`kotlin.t.e`) v1 @kind object;
  #L1df272.  v2:= `@@kotlin.t.e.c` @type ^`kotlin.t.e$b` @kind object;
  #L1df276.  call temp:= `get`(v0, v2) @signature `Lkotlin/t/g;.get:(Lkotlin/t/g$c;)Lkotlin/t/g$b;` @kind interface;
  #L1df27c.  v0:= temp @kind object;
  #L1df27e.  v0:= (`kotlin.t.e`) v0 @kind object;
  #L1df282.  call temp:= `areEqual`(v1, v0) @signature `Lkotlin/v/c/i;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1df288.  v0:= temp;
  #L1df28a.  if v0 == 0 then goto L1df2be;
  #L1df28e.  v0:= new `kotlinx.coroutines.z1`;
  #L1df292.  call `<init>`(v0, v8, v10) @signature `Lkotlinx/coroutines/z1;.<init>:(Lkotlin/t/g;Lkotlin/t/d;)V` @kind direct;
  #L1df298.  v1:= 0I;
  #L1df29a.  call temp:= `updateThreadContext`(v8, v1) @signature `Lkotlinx/coroutines/internal/z;.updateThreadContext:(Lkotlin/t/g;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1df2a0.  v1:= temp @kind object;
  #L1df2a2.  call temp:= `startUndispatchedOrReturn`(v0, v0, v9) @signature `Lkotlinx/coroutines/c2/b;.startUndispatchedOrReturn:(Lkotlinx/coroutines/internal/t;Ljava/lang/Object;Lkotlin/v/b/p;)Ljava/lang/Object;` @kind static;
  #L1df2a8.  v9:= temp @kind object;
  #L1df2aa.  call `restoreThreadContext`(v8, v1) @signature `Lkotlinx/coroutines/internal/z;.restoreThreadContext:(Lkotlin/t/g;Ljava/lang/Object;)V` @kind static;
  #L1df2b0.  v8:= v9 @kind object;
  #L1df2b2.  goto L1df2e8;
  #L1df2b4.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1df2b6.  call `restoreThreadContext`(v8, v1) @signature `Lkotlinx/coroutines/internal/z;.restoreThreadContext:(Lkotlin/t/g;Ljava/lang/Object;)V` @kind static;
  #L1df2bc.  throw v9;
  #L1df2be.  v0:= new `kotlinx.coroutines.l0`;
  #L1df2c2.  call `<init>`(v0, v8, v10) @signature `Lkotlinx/coroutines/l0;.<init>:(Lkotlin/t/g;Lkotlin/t/d;)V` @kind direct;
  #L1df2c8.  call `initParentJob$kotlinx_coroutines_core`(v0) @signature `Lkotlinx/coroutines/a;.initParentJob$kotlinx_coroutines_core:()V` @kind virtual;
  #L1df2ce.  v5:= 0I;
  #L1df2d0.  v6:= 4I;
  #L1df2d2.  v7:= 0I;
  #L1df2d4.  v2:= v9 @kind object;
  #L1df2d6.  v3:= v0 @kind object;
  #L1df2d8.  v4:= v0 @kind object;
  #L1df2da.  call `startCoroutineCancellable$default`(v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/c2/a;.startCoroutineCancellable$default:(Lkotlin/v/b/p;Ljava/lang/Object;Lkotlin/t/d;Lkotlin/v/b/l;ILjava/lang/Object;)V` @kind static;
  #L1df2e0.  call temp:= `getResult`(v0) @signature `Lkotlinx/coroutines/l0;.getResult:()Ljava/lang/Object;` @kind virtual;
  #L1df2e6.  v8:= temp @kind object;
  #L1df2e8.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/t/i/b;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L1df2ee.  v9:= temp @kind object;
  #L1df2f0.  if v8 != v9 then goto L1df2fa;
  #L1df2f4.  call `probeCoroutineSuspended`(v10) @signature `Lkotlin/t/j/a/g;.probeCoroutineSuspended:(Lkotlin/t/d;)V` @kind static;
  #L1df2fa.  return v8 @kind object;
  catch `java.lang.Throwable` @[L1df2a2..L1df2aa] goto L1df2b4;
}
