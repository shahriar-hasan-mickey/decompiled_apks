record `kotlinx.coroutines.internal.g$c` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.v.c.j` @kind class, `kotlin.v.b.l` @kind interface {
  `java.lang.reflect.Constructor` `kotlinx.coroutines.internal.g$c.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.g$c` v0 @kind this, `java.lang.reflect.Constructor` v1 @kind object) @signature `Lkotlinx/coroutines/internal/g$c;.<init>:(Ljava/lang/reflect/Constructor;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1e7694.  v0.`kotlinx.coroutines.internal.g$c.f` @type ^`java.lang.reflect.Constructor` := v1 @kind object;
  #L1e7698.  v1:= 1I;
  #L1e769a.  call `<init>`(v0, v1) @signature `Lkotlin/v/c/j;.<init>:(I)V` @kind direct;
  #L1e76a0.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.internal.g$c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/internal/g$c;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1e75e4.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L1e75e8.  call temp:= `invoke`(v0, v1) @signature `Lkotlinx/coroutines/internal/g$c;.invoke:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L1e75ee.  v1:= temp @kind object;
  #L1e75f0.  return v1 @kind object;
}
procedure `java.lang.Throwable` `invoke`(`kotlinx.coroutines.internal.g$c` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lkotlinx/coroutines/internal/g$c;.invoke:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1e7604.  v0:= `@@kotlin.l.f` @type ^`kotlin.l$a` @kind object;
  #L1e7608.  v0:= v4.`kotlinx.coroutines.internal.g$c.f` @type ^`java.lang.reflect.Constructor` @kind object;
  #L1e760c.  v1:= 1I;
  #L1e760e.  v1:= new `java.lang.Object`[v1];
  #L1e7612.  v2:= 0I;
  #L1e7614.  call temp:= `getMessage`(v5) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1e761a.  v3:= temp @kind object;
  #L1e761c.  v1[v2]:= v3 @kind object;
  #L1e7620.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1e7626.  v0:= temp @kind object;
  #L1e7628.  if v0 == 0 then goto L1e763e;
  #L1e762c.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L1e7630.  call temp:= `initCause`(v0, v5) @signature `Ljava/lang/Throwable;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L1e7636.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/l;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1e763c.  goto L1e7662;
  #L1e763e.  v5:= new `java.lang.NullPointerException`;
  #L1e7642.  v0:= "null cannot be cast to non-null type kotlin.Throwable" @kind object;
  #L1e7646.  call `<init>`(v5, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e764c.  throw v5;
  #L1e764e.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e7650.  v0:= `@@kotlin.l.f` @type ^`kotlin.l$a` @kind object;
  #L1e7654.  call temp:= `createFailure`(v5) @signature `Lkotlin/m;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L1e765a.  v0:= temp @kind object;
  #L1e765c.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/l;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1e7662.  call temp:= `isFailure-impl`(v0) @signature `Lkotlin/l;.isFailure-impl:(Ljava/lang/Object;)Z` @kind static;
  #L1e7668.  v5:= temp;
  #L1e766a.  if v5 == 0 then goto L1e7670;
  #L1e766e.  v0:= 0I;
  #L1e7670.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L1e7674.  return v0 @kind object;
  catch `java.lang.Throwable` @[L1e7604..L1e764e] goto L1e764e;
}
