record `kotlinx.coroutines.internal.u` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String` `@@kotlinx.coroutines.internal.u.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/u;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1e9a1c.  v0:= `@@kotlin.l.f` @type ^`kotlin.l$a` @kind object;
  #L1e9a20.  v0:= "kotlin.t.j.a.a" @kind object;
  #L1e9a24.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L1e9a2a.  v0:= temp @kind object;
  #L1e9a2c.  call temp:= `getCanonicalName`(v0) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L1e9a32.  v0:= temp @kind object;
  #L1e9a34.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/l;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1e9a3a.  goto L1e9a50;
  #L1e9a3c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e9a3e.  v1:= `@@kotlin.l.f` @type ^`kotlin.l$a` @kind object;
  #L1e9a42.  call temp:= `createFailure`(v0) @signature `Lkotlin/m;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L1e9a48.  v0:= temp @kind object;
  #L1e9a4a.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/l;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1e9a50.  call temp:= `exceptionOrNull-impl`(v0) @signature `Lkotlin/l;.exceptionOrNull-impl:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L1e9a56.  v1:= temp @kind object;
  #L1e9a58.  if v1 != 0 then goto L1e9a5e;
  #L1e9a5c.  goto L1e9a62;
  #L1e9a5e.  v0:= "kotlin.coroutines.jvm.internal.BaseContinuationImpl" @kind object;
  #L1e9a62.  v0:= (`java.lang.String`) v0 @kind object;
  #L1e9a66.  `@@kotlinx.coroutines.internal.u.a` @type ^`java.lang.String` := v0 @kind object;
  #L1e9a6a.  v0:= `@@kotlin.l.f` @type ^`kotlin.l$a` @kind object;
  #L1e9a6e.  v0:= "kotlinx.coroutines.internal.u" @kind object;
  #L1e9a72.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L1e9a78.  v0:= temp @kind object;
  #L1e9a7a.  call temp:= `getCanonicalName`(v0) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L1e9a80.  v0:= temp @kind object;
  #L1e9a82.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/l;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1e9a88.  goto L1e9a9e;
  #L1e9a8a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e9a8c.  v1:= `@@kotlin.l.f` @type ^`kotlin.l$a` @kind object;
  #L1e9a90.  call temp:= `createFailure`(v0) @signature `Lkotlin/m;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L1e9a96.  v0:= temp @kind object;
  #L1e9a98.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/l;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1e9a9e.  call temp:= `exceptionOrNull-impl`(v0) @signature `Lkotlin/l;.exceptionOrNull-impl:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L1e9aa4.  v1:= temp @kind object;
  #L1e9aa6.  if v1 != 0 then goto L1e9aac;
  #L1e9aaa.  goto L1e9ab0;
  #L1e9aac.  v0:= "kotlinx.coroutines.internal.StackTraceRecoveryKt" @kind object;
  #L1e9ab0.  v0:= (`java.lang.String`) v0 @kind object;
  #L1e9ab4.  return @kind void;
  catch `java.lang.Throwable` @[L1e9a1c..L1e9a20] goto L1e9a3c;
  catch `java.lang.Throwable` @[L1e9a24..L1e9a3a] goto L1e9a3c;
  catch `java.lang.Throwable` @[L1e9a6a..L1e9a6e] goto L1e9a8a;
  catch `java.lang.Throwable` @[L1e9a72..L1e9a88] goto L1e9a8a;
}
procedure `int` `a`(`java.lang.StackTraceElement`[] v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lkotlinx/coroutines/internal/u;.a:([Ljava/lang/StackTraceElement;Ljava/lang/String;)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1e96d4.  v0:= length @variable v3;
  #L1e96d6.  v1:= 0I;
  #L1e96d8.  if v1 >= v0 then goto L1e96fc;
  #L1e96dc.  v2:= v3[v1] @kind object;
  #L1e96e0.  call temp:= `getClassName`(v2) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L1e96e6.  v2:= temp @kind object;
  #L1e96e8.  call temp:= `areEqual`(v4, v2) @signature `Lkotlin/v/c/i;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1e96ee.  v2:= temp;
  #L1e96f0.  if v2 == 0 then goto L1e96f6;
  #L1e96f4.  goto L1e96fe;
  #L1e96f6.  v1:= v1 + 1;
  #L1e96fa.  goto L1e96d8;
  #L1e96fc.  v1:= -1I;
  #L1e96fe.  return v1;
}
procedure `java.lang.Throwable` `a`(`java.lang.Throwable` v5 @kind object, `java.lang.Throwable` v6 @kind object, `java.util.ArrayDeque` v7 @kind object) @signature `Lkotlinx/coroutines/internal/u;.a:(Ljava/lang/Throwable;Ljava/lang/Throwable;Ljava/util/ArrayDeque;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1e9770.  v0:= "Coroutine boundary" @kind object;
  #L1e9774.  call temp:= `artificialFrame`(v0) @signature `Lkotlinx/coroutines/internal/u;.artificialFrame:(Ljava/lang/String;)Ljava/lang/StackTraceElement;` @kind static;
  #L1e977a.  v0:= temp @kind object;
  #L1e977c.  call `addFirst`(v7, v0) @signature `Ljava/util/ArrayDeque;.addFirst:(Ljava/lang/Object;)V` @kind virtual;
  #L1e9782.  call temp:= `getStackTrace`(v5) @signature `Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L1e9788.  v5:= temp @kind object;
  #L1e978a.  v0:= `@@kotlinx.coroutines.internal.u.a` @type ^`java.lang.String` @kind object;
  #L1e978e.  call temp:= `a`(v5, v0) @signature `Lkotlinx/coroutines/internal/u;.a:([Ljava/lang/StackTraceElement;Ljava/lang/String;)I` @kind static;
  #L1e9794.  v0:= temp;
  #L1e9796.  v1:= 0I;
  #L1e9798.  v2:= -1I;
  #L1e979a.  if v0 != v2 then goto L1e97ca;
  #L1e979e.  v5:= new `java.lang.StackTraceElement`[v1];
  #L1e97a2.  call temp:= `toArray`(v7, v5) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L1e97a8.  v5:= temp @kind object;
  #L1e97aa.  if v5 == 0 then goto L1e97ba;
  #L1e97ae.  v5:= (`java.lang.StackTraceElement`[]) v5 @kind object;
  #L1e97b2.  call `setStackTrace`(v6, v5) @signature `Ljava/lang/Throwable;.setStackTrace:([Ljava/lang/StackTraceElement;)V` @kind virtual;
  #L1e97b8.  return v6 @kind object;
  #L1e97ba.  v5:= new `java.lang.NullPointerException`;
  #L1e97be.  v6:= "null cannot be cast to non-null type kotlin.Array<T>" @kind object;
  #L1e97c2.  call `<init>`(v5, v6) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e97c8.  throw v5;
  #L1e97ca.  call temp:= `size`(v7) @signature `Ljava/util/ArrayDeque;.size:()I` @kind virtual;
  #L1e97d0.  v2:= temp;
  #L1e97d2.  v2:= v2 + v0 @kind int;
  #L1e97d4.  v2:= new `java.lang.StackTraceElement`[v2];
  #L1e97d8.  v3:= 0I;
  #L1e97da.  if v3 >= v0 then goto L1e97ec;
  #L1e97de.  v4:= v5[v3] @kind object;
  #L1e97e2.  v2[v3]:= v4 @kind object;
  #L1e97e6.  v3:= v3 + 1;
  #L1e97ea.  goto L1e97da;
  #L1e97ec.  call temp:= `iterator`(v7) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1e97f2.  v5:= temp @kind object;
  #L1e97f4.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1e97fa.  v7:= temp;
  #L1e97fc.  if v7 == 0 then goto L1e981a;
  #L1e9800.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1e9806.  v7:= temp @kind object;
  #L1e9808.  v7:= (`java.lang.StackTraceElement`) v7 @kind object;
  #L1e980c.  v3:= v0 + v1 @kind int;
  #L1e9810.  v2[v3]:= v7 @kind object;
  #L1e9814.  v1:= v1 + 1;
  #L1e9818.  goto L1e97f4;
  #L1e981a.  call `setStackTrace`(v6, v2) @signature `Ljava/lang/Throwable;.setStackTrace:([Ljava/lang/StackTraceElement;)V` @kind virtual;
  #L1e9820.  return v6 @kind object;
}
procedure `java.lang.Throwable` `a`(`java.lang.Throwable` v5 @kind object, `kotlin.t.j.a.d` v6 @kind object) @signature `Lkotlinx/coroutines/internal/u;.a:(Ljava/lang/Throwable;Lkotlin/t/j/a/d;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1e9834.  call temp:= `a`(v5) @signature `Lkotlinx/coroutines/internal/u;.a:(Ljava/lang/Throwable;)Lkotlin/k;` @kind static;
  #L1e983a.  v0:= temp @kind object;
  #L1e983c.  call temp:= `component1`(v0) @signature `Lkotlin/k;.component1:()Ljava/lang/Object;` @kind virtual;
  #L1e9842.  v1:= temp @kind object;
  #L1e9844.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L1e9848.  call temp:= `component2`(v0) @signature `Lkotlin/k;.component2:()Ljava/lang/Object;` @kind virtual;
  #L1e984e.  v0:= temp @kind object;
  #L1e9850.  v0:= (`java.lang.StackTraceElement`[]) v0 @kind object;
  #L1e9854.  call temp:= `tryCopyException`(v1) @signature `Lkotlinx/coroutines/internal/g;.tryCopyException:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L1e985a.  v2:= temp @kind object;
  #L1e985c.  if v2 == 0 then goto L1e98aa;
  #L1e9860.  call temp:= `getMessage`(v2) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1e9866.  v3:= temp @kind object;
  #L1e9868.  call temp:= `getMessage`(v1) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1e986e.  v4:= temp @kind object;
  #L1e9870.  call temp:= `areEqual`(v3, v4) @signature `Lkotlin/v/c/i;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1e9876.  v3:= temp;
  #L1e9878.  v3:= v3 ^~ 1;
  #L1e987c.  if v3 == 0 then goto L1e9882;
  #L1e9880.  return v5 @kind object;
  #L1e9882.  call temp:= `a`(v6) @signature `Lkotlinx/coroutines/internal/u;.a:(Lkotlin/t/j/a/d;)Ljava/util/ArrayDeque;` @kind static;
  #L1e9888.  v6:= temp @kind object;
  #L1e988a.  call temp:= `isEmpty`(v6) @signature `Ljava/util/ArrayDeque;.isEmpty:()Z` @kind virtual;
  #L1e9890.  v3:= temp;
  #L1e9892.  if v3 == 0 then goto L1e9898;
  #L1e9896.  return v5 @kind object;
  #L1e9898.  if v1 == v5 then goto L1e98a2;
  #L1e989c.  call `a`(v0, v6) @signature `Lkotlinx/coroutines/internal/u;.a:([Ljava/lang/StackTraceElement;Ljava/util/ArrayDeque;)V` @kind static;
  #L1e98a2.  call temp:= `a`(v1, v2, v6) @signature `Lkotlinx/coroutines/internal/u;.a:(Ljava/lang/Throwable;Ljava/lang/Throwable;Ljava/util/ArrayDeque;)Ljava/lang/Throwable;` @kind static;
  #L1e98a8.  return v2 @kind object;
  #L1e98aa.  return v5 @kind object;
}
procedure `java.util.ArrayDeque` `a`(`kotlin.t.j.a.d` v2 @kind object) @signature `Lkotlinx/coroutines/internal/u;.a:(Lkotlin/t/j/a/d;)Ljava/util/ArrayDeque;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1e9930.  v0:= new `java.util.ArrayDeque`;
  #L1e9934.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L1e993a.  call temp:= `getStackTraceElement`(v2) @signature `Lkotlin/t/j/a/d;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @kind interface;
  #L1e9940.  v1:= temp @kind object;
  #L1e9942.  if v1 == 0 then goto L1e994c;
  #L1e9946.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayDeque;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1e994c.  v1:= instanceof @variable v2 @type ^`kotlin.t.j.a.d` @kind boolean;
  #L1e9950.  if v1 != 0 then goto L1e9956;
  #L1e9954.  v2:= 0I;
  #L1e9956.  if v2 == 0 then goto L1e997a;
  #L1e995a.  call temp:= `getCallerFrame`(v2) @signature `Lkotlin/t/j/a/d;.getCallerFrame:()Lkotlin/t/j/a/d;` @kind interface;
  #L1e9960.  v2:= temp @kind object;
  #L1e9962.  if v2 == 0 then goto L1e997a;
  #L1e9966.  call temp:= `getStackTraceElement`(v2) @signature `Lkotlin/t/j/a/d;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @kind interface;
  #L1e996c.  v1:= temp @kind object;
  #L1e996e.  if v1 == 0 then goto L1e994c;
  #L1e9972.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayDeque;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1e9978.  goto L1e994c;
  #L1e997a.  return v0 @kind object;
}
procedure `kotlin.k` `a`(`java.lang.Throwable` v6 @kind object) @signature `Lkotlinx/coroutines/internal/u;.a:(Ljava/lang/Throwable;)Lkotlin/k;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1e998c.  call temp:= `getCause`(v6) @signature `Ljava/lang/Throwable;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L1e9992.  v0:= temp @kind object;
  #L1e9994.  v1:= 0I;
  #L1e9996.  if v0 == 0 then goto L1e99fe;
  #L1e999a.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1e99a0.  v2:= temp @kind object;
  #L1e99a2.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1e99a8.  v3:= temp @kind object;
  #L1e99aa.  call temp:= `areEqual`(v2, v3) @signature `Lkotlin/v/c/i;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1e99b0.  v2:= temp;
  #L1e99b2.  if v2 == 0 then goto L1e99fe;
  #L1e99b6.  call temp:= `getStackTrace`(v6) @signature `Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L1e99bc.  v2:= temp @kind object;
  #L1e99be.  v3:= length @variable v2;
  #L1e99c0.  v4:= 0I;
  #L1e99c2.  if v4 >= v3 then goto L1e99e0;
  #L1e99c6.  v5:= v2[v4] @kind object;
  #L1e99ca.  call temp:= `isArtificial`(v5) @signature `Lkotlinx/coroutines/internal/u;.isArtificial:(Ljava/lang/StackTraceElement;)Z` @kind static;
  #L1e99d0.  v5:= temp;
  #L1e99d2.  if v5 == 0 then goto L1e99da;
  #L1e99d6.  v3:= 1I;
  #L1e99d8.  goto L1e99e2;
  #L1e99da.  v4:= v4 + 1;
  #L1e99de.  goto L1e99c2;
  #L1e99e0.  v3:= 0I;
  #L1e99e2.  if v3 == 0 then goto L1e99f0;
  #L1e99e6.  call temp:= `to`(v0, v2) @signature `Lkotlin/o;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/k;` @kind static;
  #L1e99ec.  v6:= temp @kind object;
  #L1e99ee.  goto L1e9a0a;
  #L1e99f0.  v0:= new `java.lang.StackTraceElement`[v1];
  #L1e99f4.  call temp:= `to`(v6, v0) @signature `Lkotlin/o;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/k;` @kind static;
  #L1e99fa.  v6:= temp @kind object;
  #L1e99fc.  goto L1e9a0a;
  #L1e99fe.  v0:= new `java.lang.StackTraceElement`[v1];
  #L1e9a02.  call temp:= `to`(v6, v0) @signature `Lkotlin/o;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/k;` @kind static;
  #L1e9a08.  v6:= temp @kind object;
  #L1e9a0a.  return v6 @kind object;
}
procedure `void` `a`(`java.lang.StackTraceElement`[] v4 @kind object, `java.util.ArrayDeque` v5 @kind object) @signature `Lkotlinx/coroutines/internal/u;.a:([Ljava/lang/StackTraceElement;Ljava/util/ArrayDeque;)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1e9af0.  v0:= length @variable v4;
  #L1e9af2.  v1:= 0I;
  #L1e9af4.  if v1 >= v0 then goto L1e9b10;
  #L1e9af8.  v2:= v4[v1] @kind object;
  #L1e9afc.  call temp:= `isArtificial`(v2) @signature `Lkotlinx/coroutines/internal/u;.isArtificial:(Ljava/lang/StackTraceElement;)Z` @kind static;
  #L1e9b02.  v2:= temp;
  #L1e9b04.  if v2 == 0 then goto L1e9b0a;
  #L1e9b08.  goto L1e9b12;
  #L1e9b0a.  v1:= v1 + 1;
  #L1e9b0e.  goto L1e9af4;
  #L1e9b10.  v1:= -1I;
  #L1e9b12.  v1:= v1 + 1;
  #L1e9b16.  v0:= length @variable v4;
  #L1e9b18.  v0:= v0 + -1;
  #L1e9b1c.  if v0 < v1 then goto L1e9b56;
  #L1e9b20.  v2:= v4[v0] @kind object;
  #L1e9b24.  call temp:= `getLast`(v5) @signature `Ljava/util/ArrayDeque;.getLast:()Ljava/lang/Object;` @kind virtual;
  #L1e9b2a.  v3:= temp @kind object;
  #L1e9b2c.  v3:= (`java.lang.StackTraceElement`) v3 @kind object;
  #L1e9b30.  call temp:= `a`(v2, v3) @signature `Lkotlinx/coroutines/internal/u;.a:(Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z` @kind static;
  #L1e9b36.  v2:= temp;
  #L1e9b38.  if v2 == 0 then goto L1e9b42;
  #L1e9b3c.  call temp:= `removeLast`(v5) @signature `Ljava/util/ArrayDeque;.removeLast:()Ljava/lang/Object;` @kind virtual;
  #L1e9b42.  v2:= v4[v0] @kind object;
  #L1e9b46.  call `addFirst`(v5, v2) @signature `Ljava/util/ArrayDeque;.addFirst:(Ljava/lang/Object;)V` @kind virtual;
  #L1e9b4c.  if v0 == v1 then goto L1e9b56;
  #L1e9b50.  v0:= v0 + -1;
  #L1e9b54.  goto L1e9b20;
  #L1e9b56.  return @kind void;
}
procedure `boolean` `a`(`java.lang.StackTraceElement` v2 @kind object, `java.lang.StackTraceElement` v3 @kind object) @signature `Lkotlinx/coroutines/internal/u;.a:(Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1e9628.  call temp:= `getLineNumber`(v2) @signature `Ljava/lang/StackTraceElement;.getLineNumber:()I` @kind virtual;
  #L1e962e.  v0:= temp;
  #L1e9630.  call temp:= `getLineNumber`(v3) @signature `Ljava/lang/StackTraceElement;.getLineNumber:()I` @kind virtual;
  #L1e9636.  v1:= temp;
  #L1e9638.  if v0 != v1 then goto L1e9694;
  #L1e963c.  call temp:= `getMethodName`(v2) @signature `Ljava/lang/StackTraceElement;.getMethodName:()Ljava/lang/String;` @kind virtual;
  #L1e9642.  v0:= temp @kind object;
  #L1e9644.  call temp:= `getMethodName`(v3) @signature `Ljava/lang/StackTraceElement;.getMethodName:()Ljava/lang/String;` @kind virtual;
  #L1e964a.  v1:= temp @kind object;
  #L1e964c.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/v/c/i;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1e9652.  v0:= temp;
  #L1e9654.  if v0 == 0 then goto L1e9694;
  #L1e9658.  call temp:= `getFileName`(v2) @signature `Ljava/lang/StackTraceElement;.getFileName:()Ljava/lang/String;` @kind virtual;
  #L1e965e.  v0:= temp @kind object;
  #L1e9660.  call temp:= `getFileName`(v3) @signature `Ljava/lang/StackTraceElement;.getFileName:()Ljava/lang/String;` @kind virtual;
  #L1e9666.  v1:= temp @kind object;
  #L1e9668.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/v/c/i;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1e966e.  v0:= temp;
  #L1e9670.  if v0 == 0 then goto L1e9694;
  #L1e9674.  call temp:= `getClassName`(v2) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L1e967a.  v2:= temp @kind object;
  #L1e967c.  call temp:= `getClassName`(v3) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L1e9682.  v3:= temp @kind object;
  #L1e9684.  call temp:= `areEqual`(v2, v3) @signature `Lkotlin/v/c/i;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1e968a.  v2:= temp;
  #L1e968c.  if v2 == 0 then goto L1e9694;
  #L1e9690.  v2:= 1I;
  #L1e9692.  goto L1e9696;
  #L1e9694.  v2:= 0I;
  #L1e9696.  return v2;
}
procedure `java.lang.Throwable` `access$recoverFromStackFrame`(`java.lang.Throwable` v0 @kind object, `kotlin.t.j.a.d` v1 @kind object) @signature `Lkotlinx/coroutines/internal/u;.access$recoverFromStackFrame:(Ljava/lang/Throwable;Lkotlin/t/j/a/d;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1e9754.  call temp:= `a`(v0, v1) @signature `Lkotlinx/coroutines/internal/u;.a:(Ljava/lang/Throwable;Lkotlin/t/j/a/d;)Ljava/lang/Throwable;` @kind static;
  #L1e975a.  v0:= temp @kind object;
  #L1e975c.  return v0 @kind object;
}
procedure `java.lang.StackTraceElement` `artificialFrame`(`java.lang.String` v3 @kind object) @signature `Lkotlinx/coroutines/internal/u;.artificialFrame:(Ljava/lang/String;)Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1e9710.  v0:= new `java.lang.StackTraceElement`;
  #L1e9714.  v1:= new `java.lang.StringBuilder`;
  #L1e9718.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e971e.  v2:= "\b\b\b(" @kind object;
  #L1e9722.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e9728.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e972e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e9734.  v3:= temp @kind object;
  #L1e9736.  v1:= "\b" @kind object;
  #L1e973a.  v2:= -1I;
  #L1e973c.  call `<init>`(v0, v3, v1, v1, v2) @signature `Ljava/lang/StackTraceElement;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L1e9742.  return v0 @kind object;
}
procedure `boolean` `isArtificial`(`java.lang.StackTraceElement` v4 @kind object) @signature `Lkotlinx/coroutines/internal/u;.isArtificial:(Ljava/lang/StackTraceElement;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1e96a8.  call temp:= `getClassName`(v4) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L1e96ae.  v4:= temp @kind object;
  #L1e96b0.  v0:= "\b\b\b" @kind object;
  #L1e96b4.  v1:= 0I;
  #L1e96b6.  v2:= 2I;
  #L1e96b8.  v3:= 0I;
  #L1e96ba.  call temp:= `startsWith$default`(v4, v0, v1, v2, v3) @signature `Lkotlin/a0/h;.startsWith$default:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L1e96c0.  v4:= temp;
  #L1e96c2.  return v4;
}
procedure `java.lang.Throwable` `unwrapImpl`(`java.lang.Throwable` v7 @kind object) @signature `Lkotlinx/coroutines/internal/u;.unwrapImpl:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1e98bc.  call temp:= `getCause`(v7) @signature `Ljava/lang/Throwable;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L1e98c2.  v0:= temp @kind object;
  #L1e98c4.  if v0 == 0 then goto L1e991c;
  #L1e98c8.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1e98ce.  v1:= temp @kind object;
  #L1e98d0.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1e98d6.  v2:= temp @kind object;
  #L1e98d8.  call temp:= `areEqual`(v1, v2) @signature `Lkotlin/v/c/i;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1e98de.  v1:= temp;
  #L1e98e0.  v2:= 1I;
  #L1e98e2.  v1:= v1 ^~ v2 @kind int;
  #L1e98e4.  if v1 == 0 then goto L1e98ea;
  #L1e98e8.  goto L1e991c;
  #L1e98ea.  call temp:= `getStackTrace`(v7) @signature `Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L1e98f0.  v1:= temp @kind object;
  #L1e98f2.  v3:= length @variable v1;
  #L1e98f4.  v4:= 0I;
  #L1e98f6.  v5:= 0I;
  #L1e98f8.  if v5 >= v3 then goto L1e9914;
  #L1e98fc.  v6:= v1[v5] @kind object;
  #L1e9900.  call temp:= `isArtificial`(v6) @signature `Lkotlinx/coroutines/internal/u;.isArtificial:(Ljava/lang/StackTraceElement;)Z` @kind static;
  #L1e9906.  v6:= temp;
  #L1e9908.  if v6 == 0 then goto L1e990e;
  #L1e990c.  goto L1e9916;
  #L1e990e.  v5:= v5 + 1;
  #L1e9912.  goto L1e98f8;
  #L1e9914.  v2:= 0I;
  #L1e9916.  if v2 == 0 then goto L1e991c;
  #L1e991a.  return v0 @kind object;
  #L1e991c.  return v7 @kind object;
}
