record `kotlinx.coroutines.internal.a` @kind class @AccessFlag PUBLIC {
  `java.lang.Object`[] `kotlinx.coroutines.internal.a.a` @AccessFlag PRIVATE;
  `int` `kotlinx.coroutines.internal.a.b` @AccessFlag PRIVATE;
  `int` `kotlinx.coroutines.internal.a.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.a` v1 @kind this) @signature `Lkotlinx/coroutines/internal/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1e6bb4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1e6bba.  v0:= 16I;
  #L1e6bbe.  v0:= new `java.lang.Object`[v0];
  #L1e6bc2.  v1.`kotlinx.coroutines.internal.a.a` @type ^`java.lang.Object`[] := v0 @kind object;
  #L1e6bc6.  return @kind void;
}
procedure `void` `a`(`kotlinx.coroutines.internal.a` v16 @kind this) @signature `Lkotlinx/coroutines/internal/a;.a:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L1e6c18.  v0:= v16 @kind object;
  #L1e6c1c.  v1:= v0.`kotlinx.coroutines.internal.a.a` @type ^`java.lang.Object`[] @kind object;
  #L1e6c20.  v8:= length @variable v1;
  #L1e6c22.  v2:= v8 ^< 1;
  #L1e6c26.  v15:= new `java.lang.Object`[v2];
  #L1e6c2a.  v4:= v0.`kotlinx.coroutines.internal.a.b` @type ^`int`;
  #L1e6c2e.  v3:= 0I;
  #L1e6c30.  v5:= 0I;
  #L1e6c32.  v6:= 10I;
  #L1e6c36.  v7:= 0I;
  #L1e6c38.  v2:= v15 @kind object;
  #L1e6c3a.  call temp:= `copyInto$default`(v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlin/r/d;.copyInto$default:([Ljava/lang/Object;[Ljava/lang/Object;IIIILjava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L1e6c40.  v9:= v0.`kotlinx.coroutines.internal.a.a` @type ^`java.lang.Object`[] @kind object;
  #L1e6c44.  v1:= length @variable v9;
  #L1e6c46.  v13:= v0.`kotlinx.coroutines.internal.a.b` @type ^`int`;
  #L1e6c4a.  v11:= v1 - v13 @kind int;
  #L1e6c4e.  v12:= 0I;
  #L1e6c50.  v14:= 4I;
  #L1e6c52.  v1:= 0I;
  #L1e6c54.  v10:= v15 @kind object;
  #L1e6c56.  v15:= v1 @kind object;
  #L1e6c58.  call temp:= `copyInto$default`(v9, v10, v11, v12, v13, v14, v15) @signature `Lkotlin/r/d;.copyInto$default:([Ljava/lang/Object;[Ljava/lang/Object;IIIILjava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L1e6c5e.  v0.`kotlinx.coroutines.internal.a.a` @type ^`java.lang.Object`[] := v2 @kind object;
  #L1e6c62.  v1:= 0I;
  #L1e6c64.  v0.`kotlinx.coroutines.internal.a.b` @type ^`int` := v1;
  #L1e6c68.  v0.`kotlinx.coroutines.internal.a.c` @type ^`int` := v8;
  #L1e6c6c.  return @kind void;
}
procedure `void` `addLast`(`kotlinx.coroutines.internal.a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/internal/a;.addLast:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1e6bd8.  v0:= v2.`kotlinx.coroutines.internal.a.a` @type ^`java.lang.Object`[] @kind object;
  #L1e6bdc.  v1:= v2.`kotlinx.coroutines.internal.a.c` @type ^`int`;
  #L1e6be0.  v0[v1]:= v3 @kind object;
  #L1e6be4.  v1:= v1 + 1;
  #L1e6be8.  v3:= length @variable v0;
  #L1e6bea.  v3:= v3 + -1;
  #L1e6bee.  v3:= v3 ^& v1 @kind int;
  #L1e6bf0.  v2.`kotlinx.coroutines.internal.a.c` @type ^`int` := v3;
  #L1e6bf4.  v3:= v2.`kotlinx.coroutines.internal.a.c` @type ^`int`;
  #L1e6bf8.  v0:= v2.`kotlinx.coroutines.internal.a.b` @type ^`int`;
  #L1e6bfc.  if v3 != v0 then goto L1e6c06;
  #L1e6c00.  call `a`(v2) @signature `Lkotlinx/coroutines/internal/a;.a:()V` @kind direct;
  #L1e6c06.  return @kind void;
}
procedure `boolean` `isEmpty`(`kotlinx.coroutines.internal.a` v2 @kind this) @signature `Lkotlinx/coroutines/internal/a;.isEmpty:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1e6b3c.  v0:= v2.`kotlinx.coroutines.internal.a.b` @type ^`int`;
  #L1e6b40.  v1:= v2.`kotlinx.coroutines.internal.a.c` @type ^`int`;
  #L1e6b44.  if v0 != v1 then goto L1e6b4c;
  #L1e6b48.  v0:= 1I;
  #L1e6b4a.  goto L1e6b4e;
  #L1e6b4c.  v0:= 0I;
  #L1e6b4e.  return v0;
}
procedure `java.lang.Object` `removeFirstOrNull`(`kotlinx.coroutines.internal.a` v4 @kind this) @signature `Lkotlinx/coroutines/internal/a;.removeFirstOrNull:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1e6b60.  v0:= v4.`kotlinx.coroutines.internal.a.b` @type ^`int`;
  #L1e6b64.  v1:= v4.`kotlinx.coroutines.internal.a.c` @type ^`int`;
  #L1e6b68.  v2:= 0I;
  #L1e6b6a.  if v0 != v1 then goto L1e6b70;
  #L1e6b6e.  return v2 @kind object;
  #L1e6b70.  v1:= v4.`kotlinx.coroutines.internal.a.a` @type ^`java.lang.Object`[] @kind object;
  #L1e6b74.  v3:= v1[v0] @kind object;
  #L1e6b78.  v1[v0]:= v2 @kind object;
  #L1e6b7c.  v0:= v0 + 1;
  #L1e6b80.  v1:= length @variable v1;
  #L1e6b82.  v1:= v1 + -1;
  #L1e6b86.  v0:= v0 ^& v1 @kind int;
  #L1e6b88.  v4.`kotlinx.coroutines.internal.a.b` @type ^`int` := v0;
  #L1e6b8c.  if v3 == 0 then goto L1e6b92;
  #L1e6b90.  return v3 @kind object;
  #L1e6b92.  v0:= new `java.lang.NullPointerException`;
  #L1e6b96.  v1:= "null cannot be cast to non-null type T" @kind object;
  #L1e6b9a.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e6ba0.  throw v0;
}
