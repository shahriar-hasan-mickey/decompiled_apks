record `kotlinx.coroutines.internal.e` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.m0` @kind class, `kotlin.t.j.a.d` @kind interface, `kotlin.t.d` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.internal.e._reusableCancellableContinuation` @AccessFlag PRIVATE_VOLATILE;
  `java.lang.Object` `kotlinx.coroutines.internal.e.i` @AccessFlag PUBLIC;
  `kotlin.t.j.a.d` `kotlinx.coroutines.internal.e.j` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `kotlinx.coroutines.internal.e.k` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.x` `kotlinx.coroutines.internal.e.l` @AccessFlag PUBLIC_FINAL;
  `kotlin.t.d` `kotlinx.coroutines.internal.e.m` @AccessFlag PUBLIC_FINAL;
}
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.internal.e.n` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1e7298.  v0:= constclass @type ^`kotlinx.coroutines.internal.e` @kind object;
  #L1e729c.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L1e72a0.  v2:= "_reusableCancellableContinuation" @kind object;
  #L1e72a4.  call temp:= `newUpdater`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L1e72aa.  v0:= temp @kind object;
  #L1e72ac.  `@@kotlinx.coroutines.internal.e.n` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v0 @kind object;
  #L1e72b0.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.e` v1 @kind this, `kotlinx.coroutines.x` v2 @kind object, `kotlin.t.d` v3 @kind object) @signature `Lkotlinx/coroutines/internal/e;.<init>:(Lkotlinx/coroutines/x;Lkotlin/t/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1e72c4.  v0:= -1I;
  #L1e72c6.  call `<init>`(v1, v0) @signature `Lkotlinx/coroutines/m0;.<init>:(I)V` @kind direct;
  #L1e72cc.  v1.`kotlinx.coroutines.internal.e.l` @type ^`kotlinx.coroutines.x` := v2 @kind object;
  #L1e72d0.  v1.`kotlinx.coroutines.internal.e.m` @type ^`kotlin.t.d` := v3 @kind object;
  #L1e72d4.  call temp:= `access$getUNDEFINED$p`() @signature `Lkotlinx/coroutines/internal/f;.access$getUNDEFINED$p:()Lkotlinx/coroutines/internal/v;` @kind static;
  #L1e72da.  v2:= temp @kind object;
  #L1e72dc.  v1.`kotlinx.coroutines.internal.e.i` @type ^`java.lang.Object` := v2 @kind object;
  #L1e72e0.  v2:= v1.`kotlinx.coroutines.internal.e.m` @type ^`kotlin.t.d` @kind object;
  #L1e72e4.  v3:= instanceof @variable v2 @type ^`kotlin.t.j.a.d` @kind boolean;
  #L1e72e8.  v0:= 0I;
  #L1e72ea.  if v3 != 0 then goto L1e72f0;
  #L1e72ee.  v2:= v0 @kind object;
  #L1e72f0.  v2:= (`kotlin.t.j.a.d`) v2 @kind object;
  #L1e72f4.  v1.`kotlinx.coroutines.internal.e.j` @type ^`kotlin.t.j.a.d` := v2 @kind object;
  #L1e72f8.  call temp:= `getContext`(v1) @signature `Lkotlinx/coroutines/internal/e;.getContext:()Lkotlin/t/g;` @kind virtual;
  #L1e72fe.  v2:= temp @kind object;
  #L1e7300.  call temp:= `threadContextElements`(v2) @signature `Lkotlinx/coroutines/internal/z;.threadContextElements:(Lkotlin/t/g;)Ljava/lang/Object;` @kind static;
  #L1e7306.  v2:= temp @kind object;
  #L1e7308.  v1.`kotlinx.coroutines.internal.e.k` @type ^`java.lang.Object` := v2 @kind object;
  #L1e730c.  v1.`kotlinx.coroutines.internal.e._reusableCancellableContinuation` @type ^`java.lang.Object` := v0 @kind object;
  #L1e7310.  return @kind void;
}
procedure `void` `cancelCompletedResult$kotlinx_coroutines_core`(`kotlinx.coroutines.internal.e` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/internal/e;.cancelCompletedResult$kotlinx_coroutines_core:(Ljava/lang/Object;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e7324.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.s` @kind boolean;
  #L1e7328.  if v0 == 0 then goto L1e733a;
  #L1e732c.  v2:= (`kotlinx.coroutines.s`) v2 @kind object;
  #L1e7330.  v2:= v2.`kotlinx.coroutines.s.b` @type ^`kotlin.v.b.l` @kind object;
  #L1e7334.  call temp:= `invoke`(v2, v3) @signature `Lkotlin/v/b/l;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1e733a.  return @kind void;
}
procedure `java.lang.Throwable` `checkPostponedCancellation`(`kotlinx.coroutines.internal.e` v3 @kind this, `kotlinx.coroutines.h` v4 @kind object) @signature `Lkotlinx/coroutines/internal/e;.checkPostponedCancellation:(Lkotlinx/coroutines/h;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1e7184.  v0:= v3.`kotlinx.coroutines.internal.e._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L1e7188.  v1:= `@@kotlinx.coroutines.internal.f.b` @type ^`kotlinx.coroutines.internal.v` @kind object;
  #L1e718c.  v2:= 0I;
  #L1e718e.  if v0 != v1 then goto L1e71a4;
  #L1e7192.  v0:= `@@kotlinx.coroutines.internal.e.n` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1e7196.  call temp:= `compareAndSet`(v0, v3, v1, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1e719c.  v0:= temp;
  #L1e719e.  if v0 == 0 then goto L1e7184;
  #L1e71a2.  return v2 @kind object;
  #L1e71a4.  if v0 != 0 then goto L1e71aa;
  #L1e71a8.  return v2 @kind object;
  #L1e71aa.  v4:= instanceof @variable v0 @type ^`java.lang.Throwable` @kind boolean;
  #L1e71ae.  if v4 == 0 then goto L1e71e0;
  #L1e71b2.  v4:= `@@kotlinx.coroutines.internal.e.n` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1e71b6.  call temp:= `compareAndSet`(v4, v3, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1e71bc.  v4:= temp;
  #L1e71be.  if v4 == 0 then goto L1e71c8;
  #L1e71c2.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L1e71c6.  return v0 @kind object;
  #L1e71c8.  v4:= new `java.lang.IllegalArgumentException`;
  #L1e71cc.  v0:= "Failed requirement." @kind object;
  #L1e71d0.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e71d6.  v0:= temp @kind object;
  #L1e71d8.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e71de.  throw v4;
  #L1e71e0.  v4:= new `java.lang.StringBuilder`;
  #L1e71e4.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e71ea.  v1:= "Inconsistent state " @kind object;
  #L1e71ee.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e71f4.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e71fa.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e7200.  v4:= temp @kind object;
  #L1e7202.  v0:= new `java.lang.IllegalStateException`;
  #L1e7206.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e720c.  v4:= temp @kind object;
  #L1e720e.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e7214.  throw v0;
}
procedure `kotlin.t.j.a.d` `getCallerFrame`(`kotlinx.coroutines.internal.e` v1 @kind this) @signature `Lkotlinx/coroutines/internal/e;.getCallerFrame:()Lkotlin/t/j/a/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e725c.  v0:= v1.`kotlinx.coroutines.internal.e.j` @type ^`kotlin.t.j.a.d` @kind object;
  #L1e7260.  return v0 @kind object;
}
procedure `kotlin.t.g` `getContext`(`kotlinx.coroutines.internal.e` v1 @kind this) @signature `Lkotlinx/coroutines/internal/e;.getContext:()Lkotlin/t/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e723c.  v0:= v1.`kotlinx.coroutines.internal.e.m` @type ^`kotlin.t.d` @kind object;
  #L1e7240.  call temp:= `getContext`(v0) @signature `Lkotlin/t/d;.getContext:()Lkotlin/t/g;` @kind interface;
  #L1e7246.  v0:= temp @kind object;
  #L1e7248.  return v0 @kind object;
}
procedure `kotlin.t.d` `getDelegate$kotlinx_coroutines_core`(`kotlinx.coroutines.internal.e` v0 @kind this) @signature `Lkotlinx/coroutines/internal/e;.getDelegate$kotlinx_coroutines_core:()Lkotlin/t/d;` @AccessFlag PUBLIC {
    temp;

  #L1e7228.  return v0 @kind object;
}
procedure `kotlinx.coroutines.i` `getReusableCancellableContinuation`(`kotlinx.coroutines.internal.e` v2 @kind this) @signature `Lkotlinx/coroutines/internal/e;.getReusableCancellableContinuation:()Lkotlinx/coroutines/i;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1e7274.  v0:= v2.`kotlinx.coroutines.internal.e._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L1e7278.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.i` @kind boolean;
  #L1e727c.  if v1 != 0 then goto L1e7282;
  #L1e7280.  v0:= 0I;
  #L1e7282.  v0:= (`kotlinx.coroutines.i`) v0 @kind object;
  #L1e7286.  return v0 @kind object;
}
procedure `java.lang.StackTraceElement` `getStackTraceElement`(`kotlinx.coroutines.internal.e` v1 @kind this) @signature `Lkotlinx/coroutines/internal/e;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e7110.  v0:= 0I;
  #L1e7112.  return v0 @kind object;
}
procedure `boolean` `isReusable`(`kotlinx.coroutines.internal.e` v4 @kind this, `kotlinx.coroutines.i` v5 @kind object) @signature `Lkotlinx/coroutines/internal/e;.isReusable:(Lkotlinx/coroutines/i;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1e7030.  v0:= v4.`kotlinx.coroutines.internal.e._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L1e7034.  v1:= 0I;
  #L1e7036.  if v0 == 0 then goto L1e704e;
  #L1e703a.  v2:= instanceof @variable v0 @type ^`kotlinx.coroutines.i` @kind boolean;
  #L1e703e.  v3:= 1I;
  #L1e7040.  if v2 == 0 then goto L1e704c;
  #L1e7044.  if v0 != v5 then goto L1e704a;
  #L1e7048.  v1:= 1I;
  #L1e704a.  return v1;
  #L1e704c.  return v3;
  #L1e704e.  return v1;
}
procedure `boolean` `postponeCancellation`(`kotlinx.coroutines.internal.e` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/internal/e;.postponeCancellation:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1e7060.  v0:= v3.`kotlinx.coroutines.internal.e._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L1e7064.  v1:= `@@kotlinx.coroutines.internal.f.b` @type ^`kotlinx.coroutines.internal.v` @kind object;
  #L1e7068.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/v/c/i;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1e706e.  v1:= temp;
  #L1e7070.  v2:= 1I;
  #L1e7072.  if v1 == 0 then goto L1e708c;
  #L1e7076.  v0:= `@@kotlinx.coroutines.internal.e.n` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1e707a.  v1:= `@@kotlinx.coroutines.internal.f.b` @type ^`kotlinx.coroutines.internal.v` @kind object;
  #L1e707e.  call temp:= `compareAndSet`(v0, v3, v1, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1e7084.  v0:= temp;
  #L1e7086.  if v0 == 0 then goto L1e7060;
  #L1e708a.  return v2;
  #L1e708c.  v1:= instanceof @variable v0 @type ^`java.lang.Throwable` @kind boolean;
  #L1e7090.  if v1 == 0 then goto L1e7096;
  #L1e7094.  return v2;
  #L1e7096.  v1:= `@@kotlinx.coroutines.internal.e.n` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1e709a.  v2:= 0I;
  #L1e709c.  call temp:= `compareAndSet`(v1, v3, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1e70a2.  v0:= temp;
  #L1e70a4.  if v0 == 0 then goto L1e7060;
  #L1e70a8.  v4:= 0I;
  #L1e70aa.  return v4;
}
procedure `void` `resumeWith`(`kotlinx.coroutines.internal.e` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/internal/e;.resumeWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1e734c.  v0:= v6.`kotlinx.coroutines.internal.e.m` @type ^`kotlin.t.d` @kind object;
  #L1e7350.  call temp:= `getContext`(v0) @signature `Lkotlin/t/d;.getContext:()Lkotlin/t/g;` @kind interface;
  #L1e7356.  v0:= temp @kind object;
  #L1e7358.  v1:= 0I;
  #L1e735a.  v2:= 1I;
  #L1e735c.  call temp:= `toState$default`(v7, v1, v2, v1) @signature `Lkotlinx/coroutines/u;.toState$default:(Ljava/lang/Object;Lkotlin/v/b/l;ILjava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1e7362.  v3:= temp @kind object;
  #L1e7364.  v4:= v6.`kotlinx.coroutines.internal.e.l` @type ^`kotlinx.coroutines.x` @kind object;
  #L1e7368.  call temp:= `isDispatchNeeded`(v4, v0) @signature `Lkotlinx/coroutines/x;.isDispatchNeeded:(Lkotlin/t/g;)Z` @kind virtual;
  #L1e736e.  v4:= temp;
  #L1e7370.  v5:= 0I;
  #L1e7372.  if v4 == 0 then goto L1e738a;
  #L1e7376.  v6.`kotlinx.coroutines.internal.e.i` @type ^`java.lang.Object` := v3 @kind object;
  #L1e737a.  v6.`kotlinx.coroutines.m0.h` @type ^`int` := v5;
  #L1e737e.  v7:= v6.`kotlinx.coroutines.internal.e.l` @type ^`kotlinx.coroutines.x` @kind object;
  #L1e7382.  call `dispatch`(v7, v0, v6) @signature `Lkotlinx/coroutines/x;.dispatch:(Lkotlin/t/g;Ljava/lang/Runnable;)V` @kind virtual;
  #L1e7388.  goto L1e740e;
  #L1e738a.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/h0;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L1e7390.  v0:= temp;
  #L1e7392.  v0:= `@@kotlinx.coroutines.v1.b` @type ^`kotlinx.coroutines.v1` @kind object;
  #L1e7396.  call temp:= `getEventLoop$kotlinx_coroutines_core`(v0) @signature `Lkotlinx/coroutines/v1;.getEventLoop$kotlinx_coroutines_core:()Lkotlinx/coroutines/r0;` @kind virtual;
  #L1e739c.  v0:= temp @kind object;
  #L1e739e.  call temp:= `isUnconfinedLoopActive`(v0) @signature `Lkotlinx/coroutines/r0;.isUnconfinedLoopActive:()Z` @kind virtual;
  #L1e73a4.  v4:= temp;
  #L1e73a6.  if v4 == 0 then goto L1e73ba;
  #L1e73aa.  v6.`kotlinx.coroutines.internal.e.i` @type ^`java.lang.Object` := v3 @kind object;
  #L1e73ae.  v6.`kotlinx.coroutines.m0.h` @type ^`int` := v5;
  #L1e73b2.  call `dispatchUnconfined`(v0, v6) @signature `Lkotlinx/coroutines/r0;.dispatchUnconfined:(Lkotlinx/coroutines/m0;)V` @kind virtual;
  #L1e73b8.  goto L1e740e;
  #L1e73ba.  call `incrementUseCount`(v0, v2) @signature `Lkotlinx/coroutines/r0;.incrementUseCount:(Z)V` @kind virtual;
  #L1e73c0.  call temp:= `getContext`(v6) @signature `Lkotlinx/coroutines/internal/e;.getContext:()Lkotlin/t/g;` @kind virtual;
  #L1e73c6.  v3:= temp @kind object;
  #L1e73c8.  v4:= v6.`kotlinx.coroutines.internal.e.k` @type ^`java.lang.Object` @kind object;
  #L1e73cc.  call temp:= `updateThreadContext`(v3, v4) @signature `Lkotlinx/coroutines/internal/z;.updateThreadContext:(Lkotlin/t/g;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1e73d2.  v4:= temp @kind object;
  #L1e73d4.  v5:= v6.`kotlinx.coroutines.internal.e.m` @type ^`kotlin.t.d` @kind object;
  #L1e73d8.  call `resumeWith`(v5, v7) @signature `Lkotlin/t/d;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L1e73de.  v7:= `@@kotlin.q.a` @type ^`kotlin.q` @kind object;
  #L1e73e2.  call `restoreThreadContext`(v3, v4) @signature `Lkotlinx/coroutines/internal/z;.restoreThreadContext:(Lkotlin/t/g;Ljava/lang/Object;)V` @kind static;
  #L1e73e8.  call temp:= `processUnconfinedEvent`(v0) @signature `Lkotlinx/coroutines/r0;.processUnconfinedEvent:()Z` @kind virtual;
  #L1e73ee.  v7:= temp;
  #L1e73f0.  if v7 != 0 then goto L1e73e8;
  #L1e73f4.  goto L1e7408;
  #L1e73f6.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e73f8.  call `restoreThreadContext`(v3, v4) @signature `Lkotlinx/coroutines/internal/z;.restoreThreadContext:(Lkotlin/t/g;Ljava/lang/Object;)V` @kind static;
  #L1e73fe.  throw v7;
  #L1e7400.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e7402.  call `handleFatalException$kotlinx_coroutines_core`(v6, v7, v1) @signature `Lkotlinx/coroutines/m0;.handleFatalException$kotlinx_coroutines_core:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind virtual;
  #L1e7408.  call `decrementUseCount`(v0, v2) @signature `Lkotlinx/coroutines/r0;.decrementUseCount:(Z)V` @kind virtual;
  #L1e740e.  return @kind void;
  #L1e7410.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e7412.  call `decrementUseCount`(v0, v2) @signature `Lkotlinx/coroutines/r0;.decrementUseCount:(Z)V` @kind virtual;
  #L1e7418.  throw v7;
  catch `java.lang.Throwable` @[L1e73c0..L1e73d4] goto L1e7400;
  catch `java.lang.Throwable` @[L1e73d4..L1e73e2] goto L1e73f6;
  catch `java.lang.Throwable` @[L1e73e2..L1e7400] goto L1e7400;
  catch `java.lang.Throwable` @[L1e7402..L1e7408] goto L1e7410;
}
procedure `java.lang.Object` `takeState$kotlinx_coroutines_core`(`kotlinx.coroutines.internal.e` v2 @kind this) @signature `Lkotlinx/coroutines/internal/e;.takeState$kotlinx_coroutines_core:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e70bc.  v0:= v2.`kotlinx.coroutines.internal.e.i` @type ^`java.lang.Object` @kind object;
  #L1e70c0.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/h0;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L1e70c6.  v1:= temp;
  #L1e70c8.  if v1 == 0 then goto L1e70f0;
  #L1e70cc.  call temp:= `access$getUNDEFINED$p`() @signature `Lkotlinx/coroutines/internal/f;.access$getUNDEFINED$p:()Lkotlinx/coroutines/internal/v;` @kind static;
  #L1e70d2.  v1:= temp @kind object;
  #L1e70d4.  if v0 == v1 then goto L1e70dc;
  #L1e70d8.  v1:= 1I;
  #L1e70da.  goto L1e70de;
  #L1e70dc.  v1:= 0I;
  #L1e70de.  if v1 == 0 then goto L1e70e4;
  #L1e70e2.  goto L1e70f0;
  #L1e70e4.  v0:= new `java.lang.AssertionError`;
  #L1e70e8.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1e70ee.  throw v0;
  #L1e70f0.  call temp:= `access$getUNDEFINED$p`() @signature `Lkotlinx/coroutines/internal/f;.access$getUNDEFINED$p:()Lkotlinx/coroutines/internal/v;` @kind static;
  #L1e70f6.  v1:= temp @kind object;
  #L1e70f8.  v2.`kotlinx.coroutines.internal.e.i` @type ^`java.lang.Object` := v1 @kind object;
  #L1e70fc.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.internal.e` v2 @kind this) @signature `Lkotlinx/coroutines/internal/e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e7124.  v0:= new `java.lang.StringBuilder`;
  #L1e7128.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e712e.  v1:= "DispatchedContinuation[" @kind object;
  #L1e7132.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e7138.  v1:= v2.`kotlinx.coroutines.internal.e.l` @type ^`kotlinx.coroutines.x` @kind object;
  #L1e713c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e7142.  v1:= ", " @kind object;
  #L1e7146.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e714c.  v1:= v2.`kotlinx.coroutines.internal.e.m` @type ^`kotlin.t.d` @kind object;
  #L1e7150.  call temp:= `toDebugString`(v1) @signature `Lkotlinx/coroutines/i0;.toDebugString:(Lkotlin/t/d;)Ljava/lang/String;` @kind static;
  #L1e7156.  v1:= temp @kind object;
  #L1e7158.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e715e.  v1:= 93I;
  #L1e7162.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e7168.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e716e.  v0:= temp @kind object;
  #L1e7170.  return v0 @kind object;
}
