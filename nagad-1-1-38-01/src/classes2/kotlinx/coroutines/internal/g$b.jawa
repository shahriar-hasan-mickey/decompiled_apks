record `kotlinx.coroutines.internal.g$b` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.v.c.j` @kind class, `kotlin.v.b.l` @kind interface {
  `java.lang.reflect.Constructor` `kotlinx.coroutines.internal.g$b.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.g$b` v0 @kind this, `java.lang.reflect.Constructor` v1 @kind object) @signature `Lkotlinx/coroutines/internal/g$b;.<init>:(Ljava/lang/reflect/Constructor;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1e75c4.  v0.`kotlinx.coroutines.internal.g$b.f` @type ^`java.lang.reflect.Constructor` := v1 @kind object;
  #L1e75c8.  v1:= 1I;
  #L1e75ca.  call `<init>`(v0, v1) @signature `Lkotlin/v/c/j;.<init>:(I)V` @kind direct;
  #L1e75d0.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.internal.g$b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/internal/g$b;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1e7524.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L1e7528.  call temp:= `invoke`(v0, v1) @signature `Lkotlinx/coroutines/internal/g$b;.invoke:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L1e752e.  v1:= temp @kind object;
  #L1e7530.  return v1 @kind object;
}
procedure `java.lang.Throwable` `invoke`(`kotlinx.coroutines.internal.g$b` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/internal/g$b;.invoke:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1e7544.  v0:= `@@kotlin.l.f` @type ^`kotlin.l$a` @kind object;
  #L1e7548.  v0:= v3.`kotlinx.coroutines.internal.g$b.f` @type ^`java.lang.reflect.Constructor` @kind object;
  #L1e754c.  v1:= 1I;
  #L1e754e.  v1:= new `java.lang.Object`[v1];
  #L1e7552.  v2:= 0I;
  #L1e7554.  v1[v2]:= v4 @kind object;
  #L1e7558.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1e755e.  v4:= temp @kind object;
  #L1e7560.  if v4 == 0 then goto L1e7570;
  #L1e7564.  v4:= (`java.lang.Throwable`) v4 @kind object;
  #L1e7568.  call temp:= `constructor-impl`(v4) @signature `Lkotlin/l;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1e756e.  goto L1e7594;
  #L1e7570.  v4:= new `java.lang.NullPointerException`;
  #L1e7574.  v0:= "null cannot be cast to non-null type kotlin.Throwable" @kind object;
  #L1e7578.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e757e.  throw v4;
  #L1e7580.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e7582.  v0:= `@@kotlin.l.f` @type ^`kotlin.l$a` @kind object;
  #L1e7586.  call temp:= `createFailure`(v4) @signature `Lkotlin/m;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L1e758c.  v4:= temp @kind object;
  #L1e758e.  call temp:= `constructor-impl`(v4) @signature `Lkotlin/l;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1e7594.  call temp:= `isFailure-impl`(v4) @signature `Lkotlin/l;.isFailure-impl:(Ljava/lang/Object;)Z` @kind static;
  #L1e759a.  v0:= temp;
  #L1e759c.  if v0 == 0 then goto L1e75a2;
  #L1e75a0.  v4:= 0I;
  #L1e75a2.  v4:= (`java.lang.Throwable`) v4 @kind object;
  #L1e75a6.  return v4 @kind object;
  catch `java.lang.Throwable` @[L1e7544..L1e7580] goto L1e7580;
}
