record `kotlinx.coroutines.internal.d` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.c0` @kind interface {
  `kotlin.t.g` `kotlinx.coroutines.internal.d.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.d` v0 @kind this, `kotlin.t.g` v1 @kind object) @signature `Lkotlinx/coroutines/internal/d;.<init>:(Lkotlin/t/g;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1e6e24.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1e6e2a.  v0.`kotlinx.coroutines.internal.d.f` @type ^`kotlin.t.g` := v1 @kind object;
  #L1e6e2e.  return @kind void;
}
procedure `kotlin.t.g` `getCoroutineContext`(`kotlinx.coroutines.internal.d` v1 @kind this) @signature `Lkotlinx/coroutines/internal/d;.getCoroutineContext:()Lkotlin/t/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e6e0c.  v0:= v1.`kotlinx.coroutines.internal.d.f` @type ^`kotlin.t.g` @kind object;
  #L1e6e10.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.internal.d` v2 @kind this) @signature `Lkotlinx/coroutines/internal/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e6dc4.  v0:= new `java.lang.StringBuilder`;
  #L1e6dc8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e6dce.  v1:= "CoroutineScope(coroutineContext=" @kind object;
  #L1e6dd2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e6dd8.  call temp:= `getCoroutineContext`(v2) @signature `Lkotlinx/coroutines/internal/d;.getCoroutineContext:()Lkotlin/t/g;` @kind virtual;
  #L1e6dde.  v1:= temp @kind object;
  #L1e6de0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e6de6.  v1:= 41I;
  #L1e6dea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e6df0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e6df6.  v0:= temp @kind object;
  #L1e6df8.  return v0 @kind object;
}
