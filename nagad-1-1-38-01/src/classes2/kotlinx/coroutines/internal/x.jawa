record `kotlinx.coroutines.internal.x` @kind class @AccessFlag FINAL_SYNTHETIC {
}
global `int` `@@kotlinx.coroutines.internal.x.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/x;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1e9be4.  call temp:= `getRuntime`() @signature `Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;` @kind static;
  #L1e9bea.  v0:= temp @kind object;
  #L1e9bec.  call temp:= `availableProcessors`(v0) @signature `Ljava/lang/Runtime;.availableProcessors:()I` @kind virtual;
  #L1e9bf2.  v0:= temp;
  #L1e9bf4.  `@@kotlinx.coroutines.internal.x.a` @type ^`int` := v0;
  #L1e9bf8.  return @kind void;
}
procedure `int` `getAVAILABLE_PROCESSORS`() @signature `Lkotlinx/coroutines/internal/x;.getAVAILABLE_PROCESSORS:()I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1e9b9c.  v0:= `@@kotlinx.coroutines.internal.x.a` @type ^`int`;
  #L1e9ba0.  return v0;
}
procedure `java.lang.String` `systemProp`(`java.lang.String` v0 @kind object) @signature `Lkotlinx/coroutines/internal/x;.systemProp:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L1e9bb4.  call temp:= `getProperty`(v0) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1e9bba.  v0:= temp @kind object;
  #L1e9bbc.  goto L1e9bc0;
  #L1e9bbe.  v0:= 0I;
  #L1e9bc0.  return v0 @kind object;
  catch `java.lang.SecurityException` @[L1e9bb4..L1e9bbc] goto L1e9bbe;
}
