record `kotlinx.coroutines.internal.p` @kind class @AccessFlag PUBLIC_FINAL {
}
global `boolean` `@@kotlinx.coroutines.internal.p.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `kotlinx.coroutines.internal.q` `a`(`java.lang.Throwable` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlinx/coroutines/internal/p;.a:(Ljava/lang/Throwable;Ljava/lang/String;)Lkotlinx/coroutines/internal/q;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L1e92a8.  v0:= `@@kotlinx.coroutines.internal.p.a` @type ^`boolean` @kind boolean;
  #L1e92ac.  if v0 == 0 then goto L1e92bc;
  #L1e92b0.  v0:= new `kotlinx.coroutines.internal.q`;
  #L1e92b4.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/internal/q;.<init>:(Ljava/lang/Throwable;Ljava/lang/String;)V` @kind direct;
  #L1e92ba.  return v0 @kind object;
  #L1e92bc.  if v1 == 0 then goto L1e92c2;
  #L1e92c0.  throw v1;
  #L1e92c2.  call temp:= `throwMissingMainDispatcherException`() @signature `Lkotlinx/coroutines/internal/p;.throwMissingMainDispatcherException:()Ljava/lang/Void;` @kind static;
  #L1e92c8.  v1:= 0I;
  #L1e92ca.  throw v1;
}
procedure `kotlinx.coroutines.internal.q` `a`(`java.lang.Throwable` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/internal/p;.a:(Ljava/lang/Throwable;Ljava/lang/String;ILjava/lang/Object;)Lkotlinx/coroutines/internal/q;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L1e9278.  v4:= v3 ^& 1;
  #L1e927c.  v0:= 0I;
  #L1e927e.  if v4 == 0 then goto L1e9284;
  #L1e9282.  v1:= v0 @kind object;
  #L1e9284.  v3:= v3 ^& 2;
  #L1e9288.  if v3 == 0 then goto L1e928e;
  #L1e928c.  v2:= v0 @kind object;
  #L1e928e.  call temp:= `a`(v1, v2) @signature `Lkotlinx/coroutines/internal/p;.a:(Ljava/lang/Throwable;Ljava/lang/String;)Lkotlinx/coroutines/internal/q;` @kind static;
  #L1e9294.  v1:= temp @kind object;
  #L1e9296.  return v1 @kind object;
}
procedure `java.lang.Void` `throwMissingMainDispatcherException`() @signature `Lkotlinx/coroutines/internal/p;.throwMissingMainDispatcherException:()Ljava/lang/Void;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1e921c.  v0:= new `java.lang.IllegalStateException`;
  #L1e9220.  v1:= "Module with the Main dispatcher is missing. Add dependency providing the Main dispatcher, e.g. 'kotlinx-coroutines-android' and ensure it has the same version as 'kotlinx-coroutines-core'" @kind object;
  #L1e9224.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e922a.  throw v0;
}
procedure `kotlinx.coroutines.m1` `tryCreateDispatcher`(`kotlinx.coroutines.internal.MainDispatcherFactory` v0 @kind object, `java.util.List` v1 @kind object) @signature `Lkotlinx/coroutines/internal/p;.tryCreateDispatcher:(Lkotlinx/coroutines/internal/MainDispatcherFactory;Ljava/util/List;)Lkotlinx/coroutines/m1;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L1e923c.  call temp:= `createDispatcher`(v0, v1) @signature `Lkotlinx/coroutines/internal/MainDispatcherFactory;.createDispatcher:(Ljava/util/List;)Lkotlinx/coroutines/m1;` @kind interface;
  #L1e9242.  v0:= temp @kind object;
  #L1e9244.  goto L1e9258;
  #L1e9246.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e9248.  call temp:= `hintOnError`(v0) @signature `Lkotlinx/coroutines/internal/MainDispatcherFactory;.hintOnError:()Ljava/lang/String;` @kind interface;
  #L1e924e.  v0:= temp @kind object;
  #L1e9250.  call temp:= `a`(v1, v0) @signature `Lkotlinx/coroutines/internal/p;.a:(Ljava/lang/Throwable;Ljava/lang/String;)Lkotlinx/coroutines/internal/q;` @kind static;
  #L1e9256.  v0:= temp @kind object;
  #L1e9258.  return v0 @kind object;
  catch `java.lang.Throwable` @[L1e923c..L1e9244] goto L1e9246;
}
