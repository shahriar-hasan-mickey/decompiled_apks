record `kotlinx.coroutines.internal.i` @kind class @AccessFlag PUBLIC_FINAL {
}
global `boolean` `@@kotlinx.coroutines.internal.i.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/i;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1e7d2c.  v0:= `@@kotlin.l.f` @type ^`kotlin.l$a` @kind object;
  #L1e7d30.  v0:= "android.os.Build" @kind object;
  #L1e7d34.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L1e7d3a.  v0:= temp @kind object;
  #L1e7d3c.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/l;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1e7d42.  goto L1e7d58;
  #L1e7d44.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e7d46.  v1:= `@@kotlin.l.f` @type ^`kotlin.l$a` @kind object;
  #L1e7d4a.  call temp:= `createFailure`(v0) @signature `Lkotlin/m;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L1e7d50.  v0:= temp @kind object;
  #L1e7d52.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/l;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1e7d58.  call temp:= `isSuccess-impl`(v0) @signature `Lkotlin/l;.isSuccess-impl:(Ljava/lang/Object;)Z` @kind static;
  #L1e7d5e.  v0:= temp;
  #L1e7d60.  `@@kotlinx.coroutines.internal.i.a` @type ^`boolean` := v0 @kind boolean;
  #L1e7d64.  return @kind void;
  catch `java.lang.Throwable` @[L1e7d2c..L1e7d30] goto L1e7d44;
  catch `java.lang.Throwable` @[L1e7d34..L1e7d42] goto L1e7d44;
}
procedure `boolean` `getANDROID_DETECTED`() @signature `Lkotlinx/coroutines/internal/i;.getANDROID_DETECTED:()Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1e7d14.  v0:= `@@kotlinx.coroutines.internal.i.a` @type ^`boolean` @kind boolean;
  #L1e7d18.  return v0;
}
