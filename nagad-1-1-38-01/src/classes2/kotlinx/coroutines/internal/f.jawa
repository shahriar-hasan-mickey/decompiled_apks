record `kotlinx.coroutines.internal.f` @kind class @AccessFlag PUBLIC_FINAL {
}
global `kotlinx.coroutines.internal.v` `@@kotlinx.coroutines.internal.f.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.internal.v` `@@kotlinx.coroutines.internal.f.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1e6e58.  v0:= new `kotlinx.coroutines.internal.v`;
  #L1e6e5c.  v1:= "UNDEFINED" @kind object;
  #L1e6e60.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/v;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e6e66.  `@@kotlinx.coroutines.internal.f.a` @type ^`kotlinx.coroutines.internal.v` := v0 @kind object;
  #L1e6e6a.  v0:= new `kotlinx.coroutines.internal.v`;
  #L1e6e6e.  v1:= "REUSABLE_CLAIMED" @kind object;
  #L1e6e72.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/v;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e6e78.  `@@kotlinx.coroutines.internal.f.b` @type ^`kotlinx.coroutines.internal.v` := v0 @kind object;
  #L1e6e7c.  return @kind void;
}
procedure `kotlinx.coroutines.internal.v` `access$getUNDEFINED$p`() @signature `Lkotlinx/coroutines/internal/f;.access$getUNDEFINED$p:()Lkotlinx/coroutines/internal/v;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L1e6e40.  v0:= `@@kotlinx.coroutines.internal.f.a` @type ^`kotlinx.coroutines.internal.v` @kind object;
  #L1e6e44.  return v0 @kind object;
}
procedure `void` `resumeCancellableWith`(`kotlin.t.d` v4 @kind object, `java.lang.Object` v5 @kind object, `kotlin.v.b.l` v6 @kind object) @signature `Lkotlinx/coroutines/internal/f;.resumeCancellableWith:(Lkotlin/t/d;Ljava/lang/Object;Lkotlin/v/b/l;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1e6eb4.  v0:= instanceof @variable v4 @type ^`kotlinx.coroutines.internal.e` @kind boolean;
  #L1e6eb8.  if v0 == 0 then goto L1e6fec;
  #L1e6ebc.  v4:= (`kotlinx.coroutines.internal.e`) v4 @kind object;
  #L1e6ec0.  call temp:= `toState`(v5, v6) @signature `Lkotlinx/coroutines/u;.toState:(Ljava/lang/Object;Lkotlin/v/b/l;)Ljava/lang/Object;` @kind static;
  #L1e6ec6.  v6:= temp @kind object;
  #L1e6ec8.  v0:= v4.`kotlinx.coroutines.internal.e.l` @type ^`kotlinx.coroutines.x` @kind object;
  #L1e6ecc.  call temp:= `getContext`(v4) @signature `Lkotlinx/coroutines/internal/e;.getContext:()Lkotlin/t/g;` @kind virtual;
  #L1e6ed2.  v1:= temp @kind object;
  #L1e6ed4.  call temp:= `isDispatchNeeded`(v0, v1) @signature `Lkotlinx/coroutines/x;.isDispatchNeeded:(Lkotlin/t/g;)Z` @kind virtual;
  #L1e6eda.  v0:= temp;
  #L1e6edc.  v1:= 1I;
  #L1e6ede.  if v0 == 0 then goto L1e6f00;
  #L1e6ee2.  v4.`kotlinx.coroutines.internal.e.i` @type ^`java.lang.Object` := v6 @kind object;
  #L1e6ee6.  v4.`kotlinx.coroutines.m0.h` @type ^`int` := v1;
  #L1e6eea.  v5:= v4.`kotlinx.coroutines.internal.e.l` @type ^`kotlinx.coroutines.x` @kind object;
  #L1e6eee.  call temp:= `getContext`(v4) @signature `Lkotlinx/coroutines/internal/e;.getContext:()Lkotlin/t/g;` @kind virtual;
  #L1e6ef4.  v6:= temp @kind object;
  #L1e6ef6.  call `dispatch`(v5, v6, v4) @signature `Lkotlinx/coroutines/x;.dispatch:(Lkotlin/t/g;Ljava/lang/Runnable;)V` @kind virtual;
  #L1e6efc.  goto L1e6ff2;
  #L1e6f00.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/h0;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L1e6f06.  v0:= temp;
  #L1e6f08.  v0:= `@@kotlinx.coroutines.v1.b` @type ^`kotlinx.coroutines.v1` @kind object;
  #L1e6f0c.  call temp:= `getEventLoop$kotlinx_coroutines_core`(v0) @signature `Lkotlinx/coroutines/v1;.getEventLoop$kotlinx_coroutines_core:()Lkotlinx/coroutines/r0;` @kind virtual;
  #L1e6f12.  v0:= temp @kind object;
  #L1e6f14.  call temp:= `isUnconfinedLoopActive`(v0) @signature `Lkotlinx/coroutines/r0;.isUnconfinedLoopActive:()Z` @kind virtual;
  #L1e6f1a.  v2:= temp;
  #L1e6f1c.  if v2 == 0 then goto L1e6f30;
  #L1e6f20.  v4.`kotlinx.coroutines.internal.e.i` @type ^`java.lang.Object` := v6 @kind object;
  #L1e6f24.  v4.`kotlinx.coroutines.m0.h` @type ^`int` := v1;
  #L1e6f28.  call `dispatchUnconfined`(v0, v4) @signature `Lkotlinx/coroutines/r0;.dispatchUnconfined:(Lkotlinx/coroutines/m0;)V` @kind virtual;
  #L1e6f2e.  goto L1e6ff2;
  #L1e6f30.  call `incrementUseCount`(v0, v1) @signature `Lkotlinx/coroutines/r0;.incrementUseCount:(Z)V` @kind virtual;
  #L1e6f36.  call temp:= `getContext`(v4) @signature `Lkotlinx/coroutines/internal/e;.getContext:()Lkotlin/t/g;` @kind virtual;
  #L1e6f3c.  v2:= temp @kind object;
  #L1e6f3e.  v3:= `@@kotlinx.coroutines.d1.e` @type ^`kotlinx.coroutines.d1$b` @kind object;
  #L1e6f42.  call temp:= `get`(v2, v3) @signature `Lkotlin/t/g;.get:(Lkotlin/t/g$c;)Lkotlin/t/g$b;` @kind interface;
  #L1e6f48.  v2:= temp @kind object;
  #L1e6f4a.  v2:= (`kotlinx.coroutines.d1`) v2 @kind object;
  #L1e6f4e.  if v2 == 0 then goto L1e6f88;
  #L1e6f52.  call temp:= `isActive`(v2) @signature `Lkotlinx/coroutines/d1;.isActive:()Z` @kind interface;
  #L1e6f58.  v3:= temp;
  #L1e6f5a.  if v3 != 0 then goto L1e6f88;
  #L1e6f5e.  call temp:= `getCancellationException`(v2) @signature `Lkotlinx/coroutines/d1;.getCancellationException:()Ljava/util/concurrent/CancellationException;` @kind interface;
  #L1e6f64.  v2:= temp @kind object;
  #L1e6f66.  call `cancelCompletedResult$kotlinx_coroutines_core`(v4, v6, v2) @signature `Lkotlinx/coroutines/internal/e;.cancelCompletedResult$kotlinx_coroutines_core:(Ljava/lang/Object;Ljava/lang/Throwable;)V` @kind virtual;
  #L1e6f6c.  v6:= `@@kotlin.l.f` @type ^`kotlin.l$a` @kind object;
  #L1e6f70.  call temp:= `createFailure`(v2) @signature `Lkotlin/m;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L1e6f76.  v6:= temp @kind object;
  #L1e6f78.  call temp:= `constructor-impl`(v6) @signature `Lkotlin/l;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1e6f7e.  call `resumeWith`(v4, v6) @signature `Lkotlin/t/d;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L1e6f84.  v6:= 1I;
  #L1e6f86.  goto L1e6f8a;
  #L1e6f88.  v6:= 0I;
  #L1e6f8a.  if v6 != 0 then goto L1e6fc2;
  #L1e6f8e.  call temp:= `getContext`(v4) @signature `Lkotlinx/coroutines/internal/e;.getContext:()Lkotlin/t/g;` @kind virtual;
  #L1e6f94.  v6:= temp @kind object;
  #L1e6f96.  v2:= v4.`kotlinx.coroutines.internal.e.k` @type ^`java.lang.Object` @kind object;
  #L1e6f9a.  call temp:= `updateThreadContext`(v6, v2) @signature `Lkotlinx/coroutines/internal/z;.updateThreadContext:(Lkotlin/t/g;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1e6fa0.  v2:= temp @kind object;
  #L1e6fa2.  v3:= v4.`kotlinx.coroutines.internal.e.m` @type ^`kotlin.t.d` @kind object;
  #L1e6fa6.  call `resumeWith`(v3, v5) @signature `Lkotlin/t/d;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L1e6fac.  v5:= `@@kotlin.q.a` @type ^`kotlin.q` @kind object;
  #L1e6fb0.  call `restoreThreadContext`(v6, v2) @signature `Lkotlinx/coroutines/internal/z;.restoreThreadContext:(Lkotlin/t/g;Ljava/lang/Object;)V` @kind static;
  #L1e6fb6.  goto L1e6fc2;
  #L1e6fb8.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e6fba.  call `restoreThreadContext`(v6, v2) @signature `Lkotlinx/coroutines/internal/z;.restoreThreadContext:(Lkotlin/t/g;Ljava/lang/Object;)V` @kind static;
  #L1e6fc0.  throw v5;
  #L1e6fc2.  call temp:= `processUnconfinedEvent`(v0) @signature `Lkotlinx/coroutines/r0;.processUnconfinedEvent:()Z` @kind virtual;
  #L1e6fc8.  v5:= temp;
  #L1e6fca.  if v5 != 0 then goto L1e6fc2;
  #L1e6fce.  goto L1e6fda;
  #L1e6fd0.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e6fd2.  v6:= 0I;
  #L1e6fd4.  call `handleFatalException$kotlinx_coroutines_core`(v4, v5, v6) @signature `Lkotlinx/coroutines/m0;.handleFatalException$kotlinx_coroutines_core:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind virtual;
  #L1e6fda.  call `decrementUseCount`(v0, v1) @signature `Lkotlinx/coroutines/r0;.decrementUseCount:(Z)V` @kind virtual;
  #L1e6fe0.  goto L1e6ff2;
  #L1e6fe2.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e6fe4.  call `decrementUseCount`(v0, v1) @signature `Lkotlinx/coroutines/r0;.decrementUseCount:(Z)V` @kind virtual;
  #L1e6fea.  throw v4;
  #L1e6fec.  call `resumeWith`(v4, v5) @signature `Lkotlin/t/d;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L1e6ff2.  return @kind void;
  catch `java.lang.Throwable` @[L1e6f36..L1e6fa2] goto L1e6fd0;
  catch `java.lang.Throwable` @[L1e6fa2..L1e6fb0] goto L1e6fb8;
  catch `java.lang.Throwable` @[L1e6fb0..L1e6fca] goto L1e6fd0;
  catch `java.lang.Throwable` @[L1e6fd4..L1e6fda] goto L1e6fe2;
}
procedure `void` `resumeCancellableWith$default`(`kotlin.t.d` v0 @kind object, `java.lang.Object` v1 @kind object, `kotlin.v.b.l` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/internal/f;.resumeCancellableWith$default:(Lkotlin/t/d;Ljava/lang/Object;Lkotlin/v/b/l;ILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1e6e90.  v3:= v3 ^& 2;
  #L1e6e94.  if v3 == 0 then goto L1e6e9a;
  #L1e6e98.  v2:= 0I;
  #L1e6e9a.  call `resumeCancellableWith`(v0, v1, v2) @signature `Lkotlinx/coroutines/internal/f;.resumeCancellableWith:(Lkotlin/t/d;Ljava/lang/Object;Lkotlin/v/b/l;)V` @kind static;
  #L1e6ea0.  return @kind void;
}
