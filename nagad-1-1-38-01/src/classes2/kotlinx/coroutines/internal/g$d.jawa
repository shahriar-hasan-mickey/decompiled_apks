record `kotlinx.coroutines.internal.g$d` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.v.c.j` @kind class, `kotlin.v.b.l` @kind interface {
  `java.lang.reflect.Constructor` `kotlinx.coroutines.internal.g$d.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.g$d` v0 @kind this, `java.lang.reflect.Constructor` v1 @kind object) @signature `Lkotlinx/coroutines/internal/g$d;.<init>:(Ljava/lang/reflect/Constructor;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1e7754.  v0.`kotlinx.coroutines.internal.g$d.f` @type ^`java.lang.reflect.Constructor` := v1 @kind object;
  #L1e7758.  v1:= 1I;
  #L1e775a.  call `<init>`(v0, v1) @signature `Lkotlin/v/c/j;.<init>:(I)V` @kind direct;
  #L1e7760.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.internal.g$d` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/internal/g$d;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1e76b4.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L1e76b8.  call temp:= `invoke`(v0, v1) @signature `Lkotlinx/coroutines/internal/g$d;.invoke:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L1e76be.  v1:= temp @kind object;
  #L1e76c0.  return v1 @kind object;
}
procedure `java.lang.Throwable` `invoke`(`kotlinx.coroutines.internal.g$d` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/internal/g$d;.invoke:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1e76d4.  v0:= `@@kotlin.l.f` @type ^`kotlin.l$a` @kind object;
  #L1e76d8.  v0:= v2.`kotlinx.coroutines.internal.g$d.f` @type ^`java.lang.reflect.Constructor` @kind object;
  #L1e76dc.  v1:= 0I;
  #L1e76de.  v1:= new `java.lang.Object`[v1];
  #L1e76e2.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1e76e8.  v0:= temp @kind object;
  #L1e76ea.  if v0 == 0 then goto L1e7700;
  #L1e76ee.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L1e76f2.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/Throwable;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L1e76f8.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/l;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1e76fe.  goto L1e7724;
  #L1e7700.  v3:= new `java.lang.NullPointerException`;
  #L1e7704.  v0:= "null cannot be cast to non-null type kotlin.Throwable" @kind object;
  #L1e7708.  call `<init>`(v3, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e770e.  throw v3;
  #L1e7710.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e7712.  v0:= `@@kotlin.l.f` @type ^`kotlin.l$a` @kind object;
  #L1e7716.  call temp:= `createFailure`(v3) @signature `Lkotlin/m;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L1e771c.  v0:= temp @kind object;
  #L1e771e.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/l;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1e7724.  call temp:= `isFailure-impl`(v0) @signature `Lkotlin/l;.isFailure-impl:(Ljava/lang/Object;)Z` @kind static;
  #L1e772a.  v3:= temp;
  #L1e772c.  if v3 == 0 then goto L1e7732;
  #L1e7730.  v0:= 0I;
  #L1e7732.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L1e7736.  return v0 @kind object;
  catch `java.lang.Throwable` @[L1e76d4..L1e7710] goto L1e7710;
}
