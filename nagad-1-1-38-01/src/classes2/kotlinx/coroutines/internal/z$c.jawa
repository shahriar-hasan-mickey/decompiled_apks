record `kotlinx.coroutines.internal.z$c` @kind class @AccessFlag FINAL extends `kotlin.v.c.j` @kind class, `kotlin.v.b.p` @kind interface {
}
global `kotlinx.coroutines.internal.z$c` `@@kotlinx.coroutines.internal.z$c.f` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/z$c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1ea010.  v0:= new `kotlinx.coroutines.internal.z$c`;
  #L1ea014.  call `<init>`(v0) @signature `Lkotlinx/coroutines/internal/z$c;.<init>:()V` @kind direct;
  #L1ea01a.  `@@kotlinx.coroutines.internal.z$c.f` @type ^`kotlinx.coroutines.internal.z$c` := v0 @kind object;
  #L1ea01e.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.z$c` v1 @kind this) @signature `Lkotlinx/coroutines/internal/z$c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1ea030.  v0:= 2I;
  #L1ea032.  call `<init>`(v1, v0) @signature `Lkotlin/v/c/j;.<init>:(I)V` @kind direct;
  #L1ea038.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.internal.z$c` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/internal/z$c;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1e9fbc.  v1:= (`kotlinx.coroutines.internal.c0`) v1 @kind object;
  #L1e9fc0.  v2:= (`kotlin.t.g$b`) v2 @kind object;
  #L1e9fc4.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/internal/z$c;.invoke:(Lkotlinx/coroutines/internal/c0;Lkotlin/t/g$b;)Lkotlinx/coroutines/internal/c0;` @kind virtual;
  #L1e9fca.  return v1 @kind object;
}
procedure `kotlinx.coroutines.internal.c0` `invoke`(`kotlinx.coroutines.internal.z$c` v2 @kind this, `kotlinx.coroutines.internal.c0` v3 @kind object, `kotlin.t.g$b` v4 @kind object) @signature `Lkotlinx/coroutines/internal/z$c;.invoke:(Lkotlinx/coroutines/internal/c0;Lkotlin/t/g$b;)Lkotlinx/coroutines/internal/c0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1e9fdc.  v0:= instanceof @variable v4 @type ^`kotlinx.coroutines.u1` @kind boolean;
  #L1e9fe0.  if v0 == 0 then goto L1e9ffe;
  #L1e9fe4.  v4:= (`kotlinx.coroutines.u1`) v4 @kind object;
  #L1e9fe8.  call temp:= `getContext`(v3) @signature `Lkotlinx/coroutines/internal/c0;.getContext:()Lkotlin/t/g;` @kind virtual;
  #L1e9fee.  v0:= temp @kind object;
  #L1e9ff0.  call temp:= `take`(v3) @signature `Lkotlinx/coroutines/internal/c0;.take:()Ljava/lang/Object;` @kind virtual;
  #L1e9ff6.  v1:= temp @kind object;
  #L1e9ff8.  call `restoreThreadContext`(v4, v0, v1) @signature `Lkotlinx/coroutines/u1;.restoreThreadContext:(Lkotlin/t/g;Ljava/lang/Object;)V` @kind interface;
  #L1e9ffe.  return v3 @kind object;
}
