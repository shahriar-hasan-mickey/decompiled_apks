record `kotlinx.coroutines.internal.c0` @kind class @AccessFlag FINAL {
  `java.lang.Object`[] `kotlinx.coroutines.internal.c0.a` @AccessFlag PRIVATE;
  `int` `kotlinx.coroutines.internal.c0.b` @AccessFlag PRIVATE;
  `kotlin.t.g` `kotlinx.coroutines.internal.c0.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.c0` v0 @kind this, `kotlin.t.g` v1 @kind object, `int` v2 ) @signature `Lkotlinx/coroutines/internal/c0;.<init>:(Lkotlin/t/g;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1ea710.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ea716.  v0.`kotlinx.coroutines.internal.c0.c` @type ^`kotlin.t.g` := v1 @kind object;
  #L1ea71a.  v1:= new `java.lang.Object`[v2];
  #L1ea71e.  v0.`kotlinx.coroutines.internal.c0.a` @type ^`java.lang.Object`[] := v1 @kind object;
  #L1ea722.  return @kind void;
}
procedure `void` `append`(`kotlinx.coroutines.internal.c0` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/internal/c0;.append:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1ea734.  v0:= v3.`kotlinx.coroutines.internal.c0.a` @type ^`java.lang.Object`[] @kind object;
  #L1ea738.  v1:= v3.`kotlinx.coroutines.internal.c0.b` @type ^`int`;
  #L1ea73c.  v2:= v1 + 1;
  #L1ea740.  v3.`kotlinx.coroutines.internal.c0.b` @type ^`int` := v2;
  #L1ea744.  v0[v1]:= v4 @kind object;
  #L1ea748.  return @kind void;
}
procedure `kotlin.t.g` `getContext`(`kotlinx.coroutines.internal.c0` v1 @kind this) @signature `Lkotlinx/coroutines/internal/c0;.getContext:()Lkotlin/t/g;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1ea6f8.  v0:= v1.`kotlinx.coroutines.internal.c0.c` @type ^`kotlin.t.g` @kind object;
  #L1ea6fc.  return v0 @kind object;
}
procedure `void` `start`(`kotlinx.coroutines.internal.c0` v1 @kind this) @signature `Lkotlinx/coroutines/internal/c0;.start:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1ea75c.  v0:= 0I;
  #L1ea75e.  v1.`kotlinx.coroutines.internal.c0.b` @type ^`int` := v0;
  #L1ea762.  return @kind void;
}
procedure `java.lang.Object` `take`(`kotlinx.coroutines.internal.c0` v3 @kind this) @signature `Lkotlinx/coroutines/internal/c0;.take:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1ea6d0.  v0:= v3.`kotlinx.coroutines.internal.c0.a` @type ^`java.lang.Object`[] @kind object;
  #L1ea6d4.  v1:= v3.`kotlinx.coroutines.internal.c0.b` @type ^`int`;
  #L1ea6d8.  v2:= v1 + 1;
  #L1ea6dc.  v3.`kotlinx.coroutines.internal.c0.b` @type ^`int` := v2;
  #L1ea6e0.  v0:= v0[v1] @kind object;
  #L1ea6e4.  return v0 @kind object;
}
