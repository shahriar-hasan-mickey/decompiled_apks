record `kotlinx.coroutines.z1` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.internal.t` @kind class {
}
procedure `void` `<init>`(`kotlinx.coroutines.z1` v0 @kind this, `kotlin.t.g` v1 @kind object, `kotlin.t.d` v2 @kind object) @signature `Lkotlinx/coroutines/z1;.<init>:(Lkotlin/t/g;Lkotlin/t/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1e6478.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/internal/t;.<init>:(Lkotlin/t/g;Lkotlin/t/d;)V` @kind direct;
  #L1e647e.  return @kind void;
}
procedure `void` `afterResume`(`kotlinx.coroutines.z1` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/z1;.afterResume:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L1e6490.  v0:= v3.`kotlinx.coroutines.internal.t.i` @type ^`kotlin.t.d` @kind object;
  #L1e6494.  call temp:= `recoverResult`(v4, v0) @signature `Lkotlinx/coroutines/u;.recoverResult:(Ljava/lang/Object;Lkotlin/t/d;)Ljava/lang/Object;` @kind static;
  #L1e649a.  v4:= temp @kind object;
  #L1e649c.  v0:= v3.`kotlinx.coroutines.internal.t.i` @type ^`kotlin.t.d` @kind object;
  #L1e64a0.  call temp:= `getContext`(v0) @signature `Lkotlin/t/d;.getContext:()Lkotlin/t/g;` @kind interface;
  #L1e64a6.  v0:= temp @kind object;
  #L1e64a8.  v1:= 0I;
  #L1e64aa.  call temp:= `updateThreadContext`(v0, v1) @signature `Lkotlinx/coroutines/internal/z;.updateThreadContext:(Lkotlin/t/g;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1e64b0.  v1:= temp @kind object;
  #L1e64b2.  v2:= v3.`kotlinx.coroutines.internal.t.i` @type ^`kotlin.t.d` @kind object;
  #L1e64b6.  call `resumeWith`(v2, v4) @signature `Lkotlin/t/d;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L1e64bc.  v4:= `@@kotlin.q.a` @type ^`kotlin.q` @kind object;
  #L1e64c0.  call `restoreThreadContext`(v0, v1) @signature `Lkotlinx/coroutines/internal/z;.restoreThreadContext:(Lkotlin/t/g;Ljava/lang/Object;)V` @kind static;
  #L1e64c6.  return @kind void;
  #L1e64c8.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e64ca.  call `restoreThreadContext`(v0, v1) @signature `Lkotlinx/coroutines/internal/z;.restoreThreadContext:(Lkotlin/t/g;Ljava/lang/Object;)V` @kind static;
  #L1e64d0.  throw v4;
  catch `java.lang.Throwable` @[L1e64b2..L1e64c0] goto L1e64c8;
}
