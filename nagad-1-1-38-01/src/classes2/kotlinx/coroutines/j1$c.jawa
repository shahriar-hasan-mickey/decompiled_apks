record `kotlinx.coroutines.j1$c` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.internal.l$a` @kind class {
  `kotlinx.coroutines.j1` `kotlinx.coroutines.j1$c.d` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.j1$c.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.j1$c` v0 @kind this, `kotlinx.coroutines.internal.l` v1 @kind object, `kotlinx.coroutines.internal.l` v2 @kind object, `kotlinx.coroutines.j1` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/j1$c;.<init>:(Lkotlinx/coroutines/internal/l;Lkotlinx/coroutines/internal/l;Lkotlinx/coroutines/j1;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1e433c.  v0.`kotlinx.coroutines.j1$c.d` @type ^`kotlinx.coroutines.j1` := v3 @kind object;
  #L1e4340.  v0.`kotlinx.coroutines.j1$c.e` @type ^`java.lang.Object` := v4 @kind object;
  #L1e4344.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/internal/l$a;.<init>:(Lkotlinx/coroutines/internal/l;)V` @kind direct;
  #L1e434a.  return @kind void;
}
procedure `java.lang.Object` `prepare`(`kotlinx.coroutines.j1$c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/j1$c;.prepare:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1e42e0.  v1:= (`kotlinx.coroutines.internal.l`) v1 @kind object;
  #L1e42e4.  call temp:= `prepare`(v0, v1) @signature `Lkotlinx/coroutines/j1$c;.prepare:(Lkotlinx/coroutines/internal/l;)Ljava/lang/Object;` @kind virtual;
  #L1e42ea.  v1:= temp @kind object;
  #L1e42ec.  return v1 @kind object;
}
procedure `java.lang.Object` `prepare`(`kotlinx.coroutines.j1$c` v1 @kind this, `kotlinx.coroutines.internal.l` v2 @kind object) @signature `Lkotlinx/coroutines/j1$c;.prepare:(Lkotlinx/coroutines/internal/l;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e4300.  v2:= v1.`kotlinx.coroutines.j1$c.d` @type ^`kotlinx.coroutines.j1` @kind object;
  #L1e4304.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/j1;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L1e430a.  v2:= temp @kind object;
  #L1e430c.  v0:= v1.`kotlinx.coroutines.j1$c.e` @type ^`java.lang.Object` @kind object;
  #L1e4310.  if v2 != v0 then goto L1e4318;
  #L1e4314.  v2:= 1I;
  #L1e4316.  goto L1e431a;
  #L1e4318.  v2:= 0I;
  #L1e431a.  if v2 == 0 then goto L1e4322;
  #L1e431e.  v2:= 0I;
  #L1e4320.  goto L1e432a;
  #L1e4322.  call temp:= `getCONDITION_FALSE`() @signature `Lkotlinx/coroutines/internal/k;.getCONDITION_FALSE:()Ljava/lang/Object;` @kind static;
  #L1e4328.  v2:= temp @kind object;
  #L1e432a.  return v2 @kind object;
}
