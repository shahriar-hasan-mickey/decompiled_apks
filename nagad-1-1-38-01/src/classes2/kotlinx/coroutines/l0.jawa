record `kotlinx.coroutines.l0` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.internal.t` @kind class {
  `int` `kotlinx.coroutines.l0._decision` @AccessFlag PRIVATE_VOLATILE;
}
global `java.util.concurrent.atomic.AtomicIntegerFieldUpdater` `@@kotlinx.coroutines.l0.j` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/l0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1e212c.  v0:= constclass @type ^`kotlinx.coroutines.l0` @kind object;
  #L1e2130.  v1:= "_decision" @kind object;
  #L1e2134.  call temp:= `newUpdater`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;` @kind static;
  #L1e213a.  v0:= temp @kind object;
  #L1e213c.  `@@kotlinx.coroutines.l0.j` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` := v0 @kind object;
  #L1e2140.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.l0` v0 @kind this, `kotlin.t.g` v1 @kind object, `kotlin.t.d` v2 @kind object) @signature `Lkotlinx/coroutines/l0;.<init>:(Lkotlin/t/g;Lkotlin/t/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1e2154.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/internal/t;.<init>:(Lkotlin/t/g;Lkotlin/t/d;)V` @kind direct;
  #L1e215a.  v1:= 0I;
  #L1e215c.  v0.`kotlinx.coroutines.l0._decision` @type ^`int` := v1;
  #L1e2160.  return @kind void;
}
procedure `boolean` `a`(`kotlinx.coroutines.l0` v4 @kind this) @signature `Lkotlinx/coroutines/l0;.a:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1e2040.  v0:= v4.`kotlinx.coroutines.l0._decision` @type ^`int`;
  #L1e2044.  v1:= 0I;
  #L1e2046.  v2:= 1I;
  #L1e2048.  if v0 == 0 then goto L1e206a;
  #L1e204c.  if v0 != v2 then goto L1e2052;
  #L1e2050.  return v1;
  #L1e2052.  v0:= new `java.lang.IllegalStateException`;
  #L1e2056.  v1:= "Already resumed" @kind object;
  #L1e205a.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e2060.  v1:= temp @kind object;
  #L1e2062.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e2068.  throw v0;
  #L1e206a.  v0:= `@@kotlinx.coroutines.l0.j` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L1e206e.  v3:= 2I;
  #L1e2070.  call temp:= `compareAndSet`(v0, v4, v1, v3) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L1e2076.  v0:= temp;
  #L1e2078.  if v0 == 0 then goto L1e2040;
  #L1e207c.  return v2;
}
procedure `boolean` `b`(`kotlinx.coroutines.l0` v3 @kind this) @signature `Lkotlinx/coroutines/l0;.b:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1e2090.  v0:= v3.`kotlinx.coroutines.l0._decision` @type ^`int`;
  #L1e2094.  v1:= 0I;
  #L1e2096.  if v0 == 0 then goto L1e20ba;
  #L1e209a.  v2:= 2I;
  #L1e209c.  if v0 != v2 then goto L1e20a2;
  #L1e20a0.  return v1;
  #L1e20a2.  v0:= new `java.lang.IllegalStateException`;
  #L1e20a6.  v1:= "Already suspended" @kind object;
  #L1e20aa.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e20b0.  v1:= temp @kind object;
  #L1e20b2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e20b8.  throw v0;
  #L1e20ba.  v0:= `@@kotlinx.coroutines.l0.j` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L1e20be.  v2:= 1I;
  #L1e20c0.  call temp:= `compareAndSet`(v0, v3, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L1e20c6.  v0:= temp;
  #L1e20c8.  if v0 == 0 then goto L1e2090;
  #L1e20cc.  return v2;
}
procedure `void` `afterCompletion`(`kotlinx.coroutines.l0` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/l0;.afterCompletion:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;

  #L1e2174.  call `afterResume`(v0, v1) @signature `Lkotlinx/coroutines/l0;.afterResume:(Ljava/lang/Object;)V` @kind virtual;
  #L1e217a.  return @kind void;
}
procedure `void` `afterResume`(`kotlinx.coroutines.l0` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/l0;.afterResume:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L1e218c.  call temp:= `a`(v3) @signature `Lkotlinx/coroutines/l0;.a:()Z` @kind direct;
  #L1e2192.  v0:= temp;
  #L1e2194.  if v0 == 0 then goto L1e219a;
  #L1e2198.  return @kind void;
  #L1e219a.  v0:= v3.`kotlinx.coroutines.internal.t.i` @type ^`kotlin.t.d` @kind object;
  #L1e219e.  call temp:= `intercepted`(v0) @signature `Lkotlin/t/i/b;.intercepted:(Lkotlin/t/d;)Lkotlin/t/d;` @kind static;
  #L1e21a4.  v0:= temp @kind object;
  #L1e21a6.  v1:= v3.`kotlinx.coroutines.internal.t.i` @type ^`kotlin.t.d` @kind object;
  #L1e21aa.  call temp:= `recoverResult`(v4, v1) @signature `Lkotlinx/coroutines/u;.recoverResult:(Ljava/lang/Object;Lkotlin/t/d;)Ljava/lang/Object;` @kind static;
  #L1e21b0.  v4:= temp @kind object;
  #L1e21b2.  v1:= 2I;
  #L1e21b4.  v2:= 0I;
  #L1e21b6.  call `resumeCancellableWith$default`(v0, v4, v2, v1, v2) @signature `Lkotlinx/coroutines/internal/f;.resumeCancellableWith$default:(Lkotlin/t/d;Ljava/lang/Object;Lkotlin/v/b/l;ILjava/lang/Object;)V` @kind static;
  #L1e21bc.  return @kind void;
}
procedure `java.lang.Object` `getResult`(`kotlinx.coroutines.l0` v2 @kind this) @signature `Lkotlinx/coroutines/l0;.getResult:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1e20e0.  call temp:= `b`(v2) @signature `Lkotlinx/coroutines/l0;.b:()Z` @kind direct;
  #L1e20e6.  v0:= temp;
  #L1e20e8.  if v0 == 0 then goto L1e20f6;
  #L1e20ec.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/t/i/b;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L1e20f2.  v0:= temp @kind object;
  #L1e20f4.  return v0 @kind object;
  #L1e20f6.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/j1;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L1e20fc.  v0:= temp @kind object;
  #L1e20fe.  call temp:= `unboxState`(v0) @signature `Lkotlinx/coroutines/k1;.unboxState:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1e2104.  v0:= temp @kind object;
  #L1e2106.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.r` @kind boolean;
  #L1e210a.  if v1 != 0 then goto L1e2110;
  #L1e210e.  return v0 @kind object;
  #L1e2110.  v0:= (`kotlinx.coroutines.r`) v0 @kind object;
  #L1e2114.  v0:= v0.`kotlinx.coroutines.r.a` @type ^`java.lang.Throwable` @kind object;
  #L1e2118.  throw v0;
}
