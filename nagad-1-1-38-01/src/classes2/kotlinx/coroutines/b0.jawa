record `kotlinx.coroutines.b0` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.t.a` @kind class {
  `java.lang.String` `kotlinx.coroutines.b0.f` @AccessFlag PRIVATE_FINAL;
}
global `kotlinx.coroutines.b0$a` `@@kotlinx.coroutines.b0.g` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/b0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1e16c0.  v0:= new `kotlinx.coroutines.b0$a`;
  #L1e16c4.  v1:= 0I;
  #L1e16c6.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/b0$a;.<init>:(Lkotlin/v/c/f;)V` @kind direct;
  #L1e16cc.  `@@kotlinx.coroutines.b0.g` @type ^`kotlinx.coroutines.b0$a` := v0 @kind object;
  #L1e16d0.  return @kind void;
}
procedure `boolean` `equals`(`kotlinx.coroutines.b0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/b0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e15fc.  if v1 == v2 then goto L1e1626;
  #L1e1600.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.b0` @kind boolean;
  #L1e1604.  if v0 == 0 then goto L1e1622;
  #L1e1608.  v2:= (`kotlinx.coroutines.b0`) v2 @kind object;
  #L1e160c.  v0:= v1.`kotlinx.coroutines.b0.f` @type ^`java.lang.String` @kind object;
  #L1e1610.  v2:= v2.`kotlinx.coroutines.b0.f` @type ^`java.lang.String` @kind object;
  #L1e1614.  call temp:= `areEqual`(v0, v2) @signature `Lkotlin/v/c/i;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1e161a.  v2:= temp;
  #L1e161c.  if v2 == 0 then goto L1e1622;
  #L1e1620.  goto L1e1626;
  #L1e1622.  v2:= 0I;
  #L1e1624.  return v2;
  #L1e1626.  v2:= 1I;
  #L1e1628.  return v2;
}
procedure `java.lang.String` `getName`(`kotlinx.coroutines.b0` v1 @kind this) @signature `Lkotlinx/coroutines/b0;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1e1664.  v0:= v1.`kotlinx.coroutines.b0.f` @type ^`java.lang.String` @kind object;
  #L1e1668.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlinx.coroutines.b0` v1 @kind this) @signature `Lkotlinx/coroutines/b0;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e163c.  v0:= v1.`kotlinx.coroutines.b0.f` @type ^`java.lang.String` @kind object;
  #L1e1640.  if v0 == 0 then goto L1e164e;
  #L1e1644.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1e164a.  v0:= temp;
  #L1e164c.  goto L1e1650;
  #L1e164e.  v0:= 0I;
  #L1e1650.  return v0;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.b0` v2 @kind this) @signature `Lkotlinx/coroutines/b0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e167c.  v0:= new `java.lang.StringBuilder`;
  #L1e1680.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e1686.  v1:= "CoroutineName(" @kind object;
  #L1e168a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e1690.  v1:= v2.`kotlinx.coroutines.b0.f` @type ^`java.lang.String` @kind object;
  #L1e1694.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e169a.  v1:= 41I;
  #L1e169e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e16a4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e16aa.  v0:= temp @kind object;
  #L1e16ac.  return v0 @kind object;
}
