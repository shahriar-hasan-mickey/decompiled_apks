record `kotlinx.coroutines.b` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.p1` @kind interface {
}
global `kotlinx.coroutines.b` `@@kotlinx.coroutines.b.f` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1df1c8.  v0:= new `kotlinx.coroutines.b`;
  #L1df1cc.  call `<init>`(v0) @signature `Lkotlinx/coroutines/b;.<init>:()V` @kind direct;
  #L1df1d2.  `@@kotlinx.coroutines.b.f` @type ^`kotlinx.coroutines.b` := v0 @kind object;
  #L1df1d6.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.b` v0 @kind this) @signature `Lkotlinx/coroutines/b;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1df1e8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1df1ee.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.b` v1 @kind this) @signature `Lkotlinx/coroutines/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1df1b0.  v0:= "Active" @kind object;
  #L1df1b4.  return v0 @kind object;
}
