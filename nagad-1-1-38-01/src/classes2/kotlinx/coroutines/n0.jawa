record `kotlinx.coroutines.n0` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `a`(`kotlinx.coroutines.m0` v4 @kind object) @signature `Lkotlinx/coroutines/n0;.a:(Lkotlinx/coroutines/m0;)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1e2368.  v0:= `@@kotlinx.coroutines.v1.b` @type ^`kotlinx.coroutines.v1` @kind object;
  #L1e236c.  call temp:= `getEventLoop$kotlinx_coroutines_core`(v0) @signature `Lkotlinx/coroutines/v1;.getEventLoop$kotlinx_coroutines_core:()Lkotlinx/coroutines/r0;` @kind virtual;
  #L1e2372.  v0:= temp @kind object;
  #L1e2374.  call temp:= `isUnconfinedLoopActive`(v0) @signature `Lkotlinx/coroutines/r0;.isUnconfinedLoopActive:()Z` @kind virtual;
  #L1e237a.  v1:= temp;
  #L1e237c.  if v1 == 0 then goto L1e2388;
  #L1e2380.  call `dispatchUnconfined`(v0, v4) @signature `Lkotlinx/coroutines/r0;.dispatchUnconfined:(Lkotlinx/coroutines/m0;)V` @kind virtual;
  #L1e2386.  goto L1e23bc;
  #L1e2388.  v1:= 1I;
  #L1e238a.  call `incrementUseCount`(v0, v1) @signature `Lkotlinx/coroutines/r0;.incrementUseCount:(Z)V` @kind virtual;
  #L1e2390.  call temp:= `getDelegate$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/m0;.getDelegate$kotlinx_coroutines_core:()Lkotlin/t/d;` @kind virtual;
  #L1e2396.  v2:= temp @kind object;
  #L1e2398.  call `resume`(v4, v2, v1) @signature `Lkotlinx/coroutines/n0;.resume:(Lkotlinx/coroutines/m0;Lkotlin/t/d;Z)V` @kind static;
  #L1e239e.  call temp:= `processUnconfinedEvent`(v0) @signature `Lkotlinx/coroutines/r0;.processUnconfinedEvent:()Z` @kind virtual;
  #L1e23a4.  v2:= temp;
  #L1e23a6.  if v2 != 0 then goto L1e239e;
  #L1e23aa.  goto L1e23b6;
  #L1e23ac.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e23ae.  v3:= 0I;
  #L1e23b0.  call `handleFatalException$kotlinx_coroutines_core`(v4, v2, v3) @signature `Lkotlinx/coroutines/m0;.handleFatalException$kotlinx_coroutines_core:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind virtual;
  #L1e23b6.  call `decrementUseCount`(v0, v1) @signature `Lkotlinx/coroutines/r0;.decrementUseCount:(Z)V` @kind virtual;
  #L1e23bc.  return @kind void;
  #L1e23be.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e23c0.  call `decrementUseCount`(v0, v1) @signature `Lkotlinx/coroutines/r0;.decrementUseCount:(Z)V` @kind virtual;
  #L1e23c6.  throw v4;
  catch `java.lang.Throwable` @[L1e2390..L1e23a6] goto L1e23ac;
  catch `java.lang.Throwable` @[L1e23b0..L1e23b6] goto L1e23be;
}
procedure `void` `dispatch`(`kotlinx.coroutines.m0` v4 @kind object, `int` v5 ) @signature `Lkotlinx/coroutines/n0;.dispatch:(Lkotlinx/coroutines/m0;I)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1e2214.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/h0;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L1e221a.  v0:= temp;
  #L1e221c.  v1:= 1I;
  #L1e221e.  v2:= 0I;
  #L1e2220.  if v0 == 0 then goto L1e2242;
  #L1e2224.  v0:= -1I;
  #L1e2226.  if v5 == v0 then goto L1e222e;
  #L1e222a.  v0:= 1I;
  #L1e222c.  goto L1e2230;
  #L1e222e.  v0:= 0I;
  #L1e2230.  if v0 == 0 then goto L1e2236;
  #L1e2234.  goto L1e2242;
  #L1e2236.  v4:= new `java.lang.AssertionError`;
  #L1e223a.  call `<init>`(v4) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1e2240.  throw v4;
  #L1e2242.  call temp:= `getDelegate$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/m0;.getDelegate$kotlinx_coroutines_core:()Lkotlin/t/d;` @kind virtual;
  #L1e2248.  v0:= temp @kind object;
  #L1e224a.  v3:= 4I;
  #L1e224c.  if v5 != v3 then goto L1e2252;
  #L1e2250.  goto L1e2254;
  #L1e2252.  v1:= 0I;
  #L1e2254.  if v1 != 0 then goto L1e22a6;
  #L1e2258.  v2:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.e` @kind boolean;
  #L1e225c.  if v2 == 0 then goto L1e22a6;
  #L1e2260.  call temp:= `isCancellableMode`(v5) @signature `Lkotlinx/coroutines/n0;.isCancellableMode:(I)Z` @kind static;
  #L1e2266.  v5:= temp;
  #L1e2268.  v2:= v4.`kotlinx.coroutines.m0.h` @type ^`int`;
  #L1e226c.  call temp:= `isCancellableMode`(v2) @signature `Lkotlinx/coroutines/n0;.isCancellableMode:(I)Z` @kind static;
  #L1e2272.  v2:= temp;
  #L1e2274.  if v5 != v2 then goto L1e22a6;
  #L1e2278.  v5:= v0 @kind object;
  #L1e227a.  v5:= (`kotlinx.coroutines.internal.e`) v5 @kind object;
  #L1e227e.  v5:= v5.`kotlinx.coroutines.internal.e.l` @type ^`kotlinx.coroutines.x` @kind object;
  #L1e2282.  call temp:= `getContext`(v0) @signature `Lkotlin/t/d;.getContext:()Lkotlin/t/g;` @kind interface;
  #L1e2288.  v0:= temp @kind object;
  #L1e228a.  call temp:= `isDispatchNeeded`(v5, v0) @signature `Lkotlinx/coroutines/x;.isDispatchNeeded:(Lkotlin/t/g;)Z` @kind virtual;
  #L1e2290.  v1:= temp;
  #L1e2292.  if v1 == 0 then goto L1e229e;
  #L1e2296.  call `dispatch`(v5, v0, v4) @signature `Lkotlinx/coroutines/x;.dispatch:(Lkotlin/t/g;Ljava/lang/Runnable;)V` @kind virtual;
  #L1e229c.  goto L1e22ac;
  #L1e229e.  call `a`(v4) @signature `Lkotlinx/coroutines/n0;.a:(Lkotlinx/coroutines/m0;)V` @kind static;
  #L1e22a4.  goto L1e22ac;
  #L1e22a6.  call `resume`(v4, v0, v1) @signature `Lkotlinx/coroutines/n0;.resume:(Lkotlinx/coroutines/m0;Lkotlin/t/d;Z)V` @kind static;
  #L1e22ac.  return @kind void;
}
procedure `boolean` `isCancellableMode`(`int` v2 ) @signature `Lkotlinx/coroutines/n0;.isCancellableMode:(I)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1e21d0.  v0:= 1I;
  #L1e21d2.  if v2 == v0 then goto L1e21e0;
  #L1e21d6.  v1:= 2I;
  #L1e21d8.  if v2 != v1 then goto L1e21de;
  #L1e21dc.  goto L1e21e0;
  #L1e21de.  v0:= 0I;
  #L1e21e0.  return v0;
}
procedure `boolean` `isReusableMode`(`int` v1 ) @signature `Lkotlinx/coroutines/n0;.isReusableMode:(I)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1e21f4.  v0:= 2I;
  #L1e21f6.  if v1 != v0 then goto L1e21fe;
  #L1e21fa.  v1:= 1I;
  #L1e21fc.  goto L1e2200;
  #L1e21fe.  v1:= 0I;
  #L1e2200.  return v1;
}
procedure `void` `resume`(`kotlinx.coroutines.m0` v2 @kind object, `kotlin.t.d` v3 @kind object, `boolean` v4 ) @signature `Lkotlinx/coroutines/n0;.resume:(Lkotlinx/coroutines/m0;Lkotlin/t/d;Z)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1e22c0.  call temp:= `takeState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/m0;.takeState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L1e22c6.  v0:= temp @kind object;
  #L1e22c8.  call temp:= `getExceptionalResult$kotlinx_coroutines_core`(v2, v0) @signature `Lkotlinx/coroutines/m0;.getExceptionalResult$kotlinx_coroutines_core:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind virtual;
  #L1e22ce.  v1:= temp @kind object;
  #L1e22d0.  if v1 == 0 then goto L1e22e2;
  #L1e22d4.  v2:= `@@kotlin.l.f` @type ^`kotlin.l$a` @kind object;
  #L1e22d8.  call temp:= `createFailure`(v1) @signature `Lkotlin/m;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L1e22de.  v2:= temp @kind object;
  #L1e22e0.  goto L1e22ee;
  #L1e22e2.  v1:= `@@kotlin.l.f` @type ^`kotlin.l$a` @kind object;
  #L1e22e6.  call temp:= `getSuccessfulResult$kotlinx_coroutines_core`(v2, v0) @signature `Lkotlinx/coroutines/m0;.getSuccessfulResult$kotlinx_coroutines_core:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1e22ec.  v2:= temp @kind object;
  #L1e22ee.  call temp:= `constructor-impl`(v2) @signature `Lkotlin/l;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1e22f4.  if v4 == 0 then goto L1e2344;
  #L1e22f8.  if v3 == 0 then goto L1e2334;
  #L1e22fc.  v3:= (`kotlinx.coroutines.internal.e`) v3 @kind object;
  #L1e2300.  call temp:= `getContext`(v3) @signature `Lkotlinx/coroutines/internal/e;.getContext:()Lkotlin/t/g;` @kind virtual;
  #L1e2306.  v4:= temp @kind object;
  #L1e2308.  v0:= v3.`kotlinx.coroutines.internal.e.k` @type ^`java.lang.Object` @kind object;
  #L1e230c.  call temp:= `updateThreadContext`(v4, v0) @signature `Lkotlinx/coroutines/internal/z;.updateThreadContext:(Lkotlin/t/g;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1e2312.  v0:= temp @kind object;
  #L1e2314.  v3:= v3.`kotlinx.coroutines.internal.e.m` @type ^`kotlin.t.d` @kind object;
  #L1e2318.  call `resumeWith`(v3, v2) @signature `Lkotlin/t/d;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L1e231e.  v2:= `@@kotlin.q.a` @type ^`kotlin.q` @kind object;
  #L1e2322.  call `restoreThreadContext`(v4, v0) @signature `Lkotlinx/coroutines/internal/z;.restoreThreadContext:(Lkotlin/t/g;Ljava/lang/Object;)V` @kind static;
  #L1e2328.  goto L1e234a;
  #L1e232a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e232c.  call `restoreThreadContext`(v4, v0) @signature `Lkotlinx/coroutines/internal/z;.restoreThreadContext:(Lkotlin/t/g;Ljava/lang/Object;)V` @kind static;
  #L1e2332.  throw v2;
  #L1e2334.  v2:= new `java.lang.NullPointerException`;
  #L1e2338.  v3:= "null cannot be cast to non-null type kotlinx.coroutines.internal.DispatchedContinuation<T>" @kind object;
  #L1e233c.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e2342.  throw v2;
  #L1e2344.  call `resumeWith`(v3, v2) @signature `Lkotlin/t/d;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L1e234a.  return @kind void;
  catch `java.lang.Throwable` @[L1e2314..L1e2322] goto L1e232a;
}
