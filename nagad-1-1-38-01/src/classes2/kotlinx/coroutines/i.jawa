record `kotlinx.coroutines.i` @kind class @AccessFlag PUBLIC extends `kotlinx.coroutines.m0` @kind class, `kotlinx.coroutines.h` @kind interface, `kotlin.t.j.a.d` @kind interface {
  `int` `kotlinx.coroutines.i._decision` @AccessFlag PRIVATE_VOLATILE;
  `java.lang.Object` `kotlinx.coroutines.i._parentHandle` @AccessFlag PRIVATE_VOLATILE;
  `java.lang.Object` `kotlinx.coroutines.i._state` @AccessFlag PRIVATE_VOLATILE;
  `kotlin.t.g` `kotlinx.coroutines.i.i` @AccessFlag PRIVATE_FINAL;
  `kotlin.t.d` `kotlinx.coroutines.i.j` @AccessFlag PRIVATE_FINAL;
}
global `java.util.concurrent.atomic.AtomicIntegerFieldUpdater` `@@kotlinx.coroutines.i.k` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.i.l` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/i;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1df9e0.  v0:= constclass @type ^`kotlinx.coroutines.i` @kind object;
  #L1df9e4.  v1:= "_decision" @kind object;
  #L1df9e8.  call temp:= `newUpdater`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;` @kind static;
  #L1df9ee.  v0:= temp @kind object;
  #L1df9f0.  `@@kotlinx.coroutines.i.k` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` := v0 @kind object;
  #L1df9f4.  v0:= constclass @type ^`kotlinx.coroutines.i` @kind object;
  #L1df9f8.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L1df9fc.  v2:= "_state" @kind object;
  #L1dfa00.  call temp:= `newUpdater`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L1dfa06.  v0:= temp @kind object;
  #L1dfa08.  `@@kotlinx.coroutines.i.l` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v0 @kind object;
  #L1dfa0c.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.i` v1 @kind this, `kotlin.t.d` v2 @kind object, `int` v3 ) @signature `Lkotlinx/coroutines/i;.<init>:(Lkotlin/t/d;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1dfa20.  call `<init>`(v1, v3) @signature `Lkotlinx/coroutines/m0;.<init>:(I)V` @kind direct;
  #L1dfa26.  v1.`kotlinx.coroutines.i.j` @type ^`kotlin.t.d` := v2 @kind object;
  #L1dfa2a.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/h0;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L1dfa30.  v2:= temp;
  #L1dfa32.  v0:= 0I;
  #L1dfa34.  if v2 == 0 then goto L1dfa56;
  #L1dfa38.  v2:= -1I;
  #L1dfa3a.  if v3 == v2 then goto L1dfa42;
  #L1dfa3e.  v2:= 1I;
  #L1dfa40.  goto L1dfa44;
  #L1dfa42.  v2:= 0I;
  #L1dfa44.  if v2 == 0 then goto L1dfa4a;
  #L1dfa48.  goto L1dfa56;
  #L1dfa4a.  v2:= new `java.lang.AssertionError`;
  #L1dfa4e.  call `<init>`(v2) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1dfa54.  throw v2;
  #L1dfa56.  v2:= v1.`kotlinx.coroutines.i.j` @type ^`kotlin.t.d` @kind object;
  #L1dfa5a.  call temp:= `getContext`(v2) @signature `Lkotlin/t/d;.getContext:()Lkotlin/t/g;` @kind interface;
  #L1dfa60.  v2:= temp @kind object;
  #L1dfa62.  v1.`kotlinx.coroutines.i.i` @type ^`kotlin.t.g` := v2 @kind object;
  #L1dfa66.  v1.`kotlinx.coroutines.i._decision` @type ^`int` := v0;
  #L1dfa6a.  v2:= `@@kotlinx.coroutines.b.f` @type ^`kotlinx.coroutines.b` @kind object;
  #L1dfa6e.  v1.`kotlinx.coroutines.i._state` @type ^`java.lang.Object` := v2 @kind object;
  #L1dfa72.  v2:= 0I;
  #L1dfa74.  v1.`kotlinx.coroutines.i._parentHandle` @type ^`java.lang.Object` := v2 @kind object;
  #L1dfa78.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.i` v8 @kind this, `kotlinx.coroutines.p1` v9 @kind object, `java.lang.Object` v10 @kind object, `int` v11 , `kotlin.v.b.l` v12 @kind object, `java.lang.Object` v13 @kind object) @signature `Lkotlinx/coroutines/i;.a:(Lkotlinx/coroutines/p1;Ljava/lang/Object;ILkotlin/v/b/l;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1df714.  v0:= instanceof @variable v10 @type ^`kotlinx.coroutines.r` @kind boolean;
  #L1df718.  if v0 == 0 then goto L1df76e;
  #L1df71c.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/h0;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L1df722.  v9:= temp;
  #L1df724.  v11:= 1I;
  #L1df726.  v0:= 0I;
  #L1df728.  if v9 == 0 then goto L1df748;
  #L1df72c.  if v13 != 0 then goto L1df734;
  #L1df730.  v9:= 1I;
  #L1df732.  goto L1df736;
  #L1df734.  v9:= 0I;
  #L1df736.  if v9 == 0 then goto L1df73c;
  #L1df73a.  goto L1df748;
  #L1df73c.  v9:= new `java.lang.AssertionError`;
  #L1df740.  call `<init>`(v9) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1df746.  throw v9;
  #L1df748.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/h0;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L1df74e.  v9:= temp;
  #L1df750.  if v9 == 0 then goto L1df7be;
  #L1df754.  if v12 != 0 then goto L1df75a;
  #L1df758.  goto L1df75c;
  #L1df75a.  v11:= 0I;
  #L1df75c.  if v11 == 0 then goto L1df762;
  #L1df760.  goto L1df7be;
  #L1df762.  v9:= new `java.lang.AssertionError`;
  #L1df766.  call `<init>`(v9) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1df76c.  throw v9;
  #L1df76e.  call temp:= `isCancellableMode`(v11) @signature `Lkotlinx/coroutines/n0;.isCancellableMode:(I)Z` @kind static;
  #L1df774.  v11:= temp;
  #L1df776.  if v11 != 0 then goto L1df780;
  #L1df77a.  if v13 != 0 then goto L1df780;
  #L1df77e.  goto L1df7be;
  #L1df780.  if v12 != 0 then goto L1df792;
  #L1df784.  v11:= instanceof @variable v9 @type ^`kotlinx.coroutines.f` @kind boolean;
  #L1df788.  if v11 == 0 then goto L1df78e;
  #L1df78c.  goto L1df792;
  #L1df78e.  if v13 == 0 then goto L1df7be;
  #L1df792.  v11:= new `kotlinx.coroutines.q`;
  #L1df796.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.f` @kind boolean;
  #L1df79a.  if v0 != 0 then goto L1df7a0;
  #L1df79e.  v9:= 0I;
  #L1df7a0.  v2:= v9 @kind object;
  #L1df7a2.  v2:= (`kotlinx.coroutines.f`) v2 @kind object;
  #L1df7a6.  v5:= 0I;
  #L1df7a8.  v6:= 16I;
  #L1df7ac.  v7:= 0I;
  #L1df7ae.  v0:= v11 @kind object;
  #L1df7b0.  v1:= v10 @kind object;
  #L1df7b2.  v3:= v12 @kind object;
  #L1df7b4.  v4:= v13 @kind object;
  #L1df7b6.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/q;.<init>:(Ljava/lang/Object;Lkotlinx/coroutines/f;Lkotlin/v/b/l;Ljava/lang/Object;Ljava/lang/Throwable;ILkotlin/v/c/f;)V` @kind direct;
  #L1df7bc.  v10:= v11 @kind object;
  #L1df7be.  return v10 @kind object;
}
procedure `java.lang.Void` `a`(`kotlinx.coroutines.i` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/i;.a:(Ljava/lang/Object;)Ljava/lang/Void;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1df8fc.  v0:= new `java.lang.StringBuilder`;
  #L1df900.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1df906.  v1:= "Already resumed, but proposed with update " @kind object;
  #L1df90a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df910.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df916.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1df91c.  v3:= temp @kind object;
  #L1df91e.  v0:= new `java.lang.IllegalStateException`;
  #L1df922.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1df928.  v3:= temp @kind object;
  #L1df92a.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1df930.  throw v0;
}
procedure `kotlinx.coroutines.f` `a`(`kotlinx.coroutines.i` v1 @kind this, `kotlin.v.b.l` v2 @kind object) @signature `Lkotlinx/coroutines/i;.a:(Lkotlin/v/b/l;)Lkotlinx/coroutines/f;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L1df998.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.f` @kind boolean;
  #L1df99c.  if v0 == 0 then goto L1df9a6;
  #L1df9a0.  v2:= (`kotlinx.coroutines.f`) v2 @kind object;
  #L1df9a4.  goto L1df9b2;
  #L1df9a6.  v0:= new `kotlinx.coroutines.a1`;
  #L1df9aa.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/a1;.<init>:(Lkotlin/v/b/l;)V` @kind direct;
  #L1df9b0.  v2:= v0 @kind object;
  #L1df9b2.  return v2 @kind object;
}
procedure `void` `a`(`kotlinx.coroutines.i` v1 @kind this, `int` v2 ) @signature `Lkotlinx/coroutines/i;.a:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L1dfce0.  call temp:= `f`(v1) @signature `Lkotlinx/coroutines/i;.f:()Z` @kind direct;
  #L1dfce6.  v0:= temp;
  #L1dfce8.  if v0 == 0 then goto L1dfcee;
  #L1dfcec.  return @kind void;
  #L1dfcee.  call `dispatch`(v1, v2) @signature `Lkotlinx/coroutines/n0;.dispatch:(Lkotlinx/coroutines/m0;I)V` @kind static;
  #L1dfcf4.  return @kind void;
}
procedure `void` `a`(`kotlinx.coroutines.i` v8 @kind this, `java.lang.Object` v9 @kind object, `int` v10 , `kotlin.v.b.l` v11 @kind object) @signature `Lkotlinx/coroutines/i;.a:(Ljava/lang/Object;ILkotlin/v/b/l;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1dfee0.  v0:= v8.`kotlinx.coroutines.i._state` @type ^`java.lang.Object` @kind object;
  #L1dfee4.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.p1` @kind boolean;
  #L1dfee8.  if v1 == 0 then goto L1dff24;
  #L1dfeec.  v3:= v0 @kind object;
  #L1dfeee.  v3:= (`kotlinx.coroutines.p1`) v3 @kind object;
  #L1dfef2.  v7:= 0I;
  #L1dfef4.  v2:= v8 @kind object;
  #L1dfef6.  v4:= v9 @kind object;
  #L1dfef8.  v5:= v10;
  #L1dfefa.  v6:= v11 @kind object;
  #L1dfefc.  call temp:= `a`(v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/i;.a:(Lkotlinx/coroutines/p1;Ljava/lang/Object;ILkotlin/v/b/l;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L1dff02.  v1:= temp @kind object;
  #L1dff04.  v2:= `@@kotlinx.coroutines.i.l` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1dff08.  call temp:= `compareAndSet`(v2, v8, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1dff0e.  v0:= temp;
  #L1dff10.  if v0 != 0 then goto L1dff16;
  #L1dff14.  goto L1dfee0;
  #L1dff16.  call `b`(v8) @signature `Lkotlinx/coroutines/i;.b:()V` @kind direct;
  #L1dff1c.  call `a`(v8, v10) @signature `Lkotlinx/coroutines/i;.a:(I)V` @kind direct;
  #L1dff22.  return @kind void;
  #L1dff24.  v10:= instanceof @variable v0 @type ^`kotlinx.coroutines.j` @kind boolean;
  #L1dff28.  if v10 == 0 then goto L1dff4c;
  #L1dff2c.  v0:= (`kotlinx.coroutines.j`) v0 @kind object;
  #L1dff30.  call temp:= `makeResumed`(v0) @signature `Lkotlinx/coroutines/j;.makeResumed:()Z` @kind virtual;
  #L1dff36.  v10:= temp;
  #L1dff38.  if v10 == 0 then goto L1dff4c;
  #L1dff3c.  if v11 == 0 then goto L1dff4a;
  #L1dff40.  v9:= v0.`kotlinx.coroutines.r.a` @type ^`java.lang.Throwable` @kind object;
  #L1dff44.  call `callOnCancellation`(v8, v11, v9) @signature `Lkotlinx/coroutines/i;.callOnCancellation:(Lkotlin/v/b/l;Ljava/lang/Throwable;)V` @kind virtual;
  #L1dff4a.  return @kind void;
  #L1dff4c.  call temp:= `a`(v8, v9) @signature `Lkotlinx/coroutines/i;.a:(Ljava/lang/Object;)Ljava/lang/Void;` @kind direct;
  #L1dff52.  v9:= 0I;
  #L1dff54.  throw v9;
}
procedure `void` `a`(`kotlinx.coroutines.i` v2 @kind this, `kotlin.v.b.l` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/i;.a:(Lkotlin/v/b/l;Ljava/lang/Object;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1dfe24.  v0:= new `java.lang.StringBuilder`;
  #L1dfe28.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1dfe2e.  v1:= "It's prohibited to register multiple handlers, tried to register " @kind object;
  #L1dfe32.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dfe38.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dfe3e.  v3:= ", already has " @kind object;
  #L1dfe42.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dfe48.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dfe4e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dfe54.  v3:= temp @kind object;
  #L1dfe56.  v4:= new `java.lang.IllegalStateException`;
  #L1dfe5a.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dfe60.  v3:= temp @kind object;
  #L1dfe62.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dfe68.  throw v4;
}
procedure `void` `a`(`kotlinx.coroutines.i` v3 @kind this, `kotlin.v.b.l` v4 @kind object, `java.lang.Throwable` v5 @kind object) @signature `Lkotlinx/coroutines/i;.a:(Lkotlin/v/b/l;Ljava/lang/Throwable;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1dfa8c.  call temp:= `invoke`(v4, v5) @signature `Lkotlin/v/b/l;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1dfa92.  goto L1dfad0;
  #L1dfa94.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1dfa96.  call temp:= `getContext`(v3) @signature `Lkotlinx/coroutines/i;.getContext:()Lkotlin/t/g;` @kind virtual;
  #L1dfa9c.  v5:= temp @kind object;
  #L1dfa9e.  v0:= new `kotlinx.coroutines.CompletionHandlerException`;
  #L1dfaa2.  v1:= new `java.lang.StringBuilder`;
  #L1dfaa6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1dfaac.  v2:= "Exception in invokeOnCancellation handler for " @kind object;
  #L1dfab0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dfab6.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dfabc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dfac2.  v1:= temp @kind object;
  #L1dfac4.  call `<init>`(v0, v1, v4) @signature `Lkotlinx/coroutines/CompletionHandlerException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1dfaca.  call `handleCoroutineException`(v5, v0) @signature `Lkotlinx/coroutines/z;.handleCoroutineException:(Lkotlin/t/g;Ljava/lang/Throwable;)V` @kind static;
  #L1dfad0.  return @kind void;
  catch `java.lang.Throwable` @[L1dfa8c..L1dfa92] goto L1dfa94;
}
procedure `void` `a`(`kotlinx.coroutines.i` v0 @kind object, `java.lang.Object` v1 @kind object, `int` v2 , `kotlin.v.b.l` v3 @kind object, `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/i;.a:(Lkotlinx/coroutines/i;Ljava/lang/Object;ILkotlin/v/b/l;ILjava/lang/Object;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1dfea8.  if v5 != 0 then goto L1dfebe;
  #L1dfeac.  v4:= v4 ^& 4;
  #L1dfeb0.  if v4 == 0 then goto L1dfeb6;
  #L1dfeb4.  v3:= 0I;
  #L1dfeb6.  call `a`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/i;.a:(Ljava/lang/Object;ILkotlin/v/b/l;)V` @kind direct;
  #L1dfebc.  return @kind void;
  #L1dfebe.  v0:= new `java.lang.UnsupportedOperationException`;
  #L1dfec2.  v1:= "Super calls with default arguments not supported in this target, function: resumeImpl" @kind object;
  #L1dfec6.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dfecc.  throw v0;
}
procedure `void` `a`(`kotlinx.coroutines.i` v0 @kind this, `kotlinx.coroutines.p0` v1 @kind object) @signature `Lkotlinx/coroutines/i;.a:(Lkotlinx/coroutines/p0;)V` @AccessFlag PRIVATE_FINAL {
    temp;

  #L1dff94.  v0.`kotlinx.coroutines.i._parentHandle` @type ^`java.lang.Object` := v1 @kind object;
  #L1dff98.  return @kind void;
}
procedure `boolean` `a`(`kotlinx.coroutines.i` v3 @kind this) @signature `Lkotlinx/coroutines/i;.a:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1df4c4.  call temp:= `isCompleted`(v3) @signature `Lkotlinx/coroutines/i;.isCompleted:()Z` @kind virtual;
  #L1df4ca.  v0:= temp;
  #L1df4cc.  v1:= v3.`kotlinx.coroutines.m0.h` @type ^`int`;
  #L1df4d0.  call temp:= `isReusableMode`(v1) @signature `Lkotlinx/coroutines/n0;.isReusableMode:(I)Z` @kind static;
  #L1df4d6.  v1:= temp;
  #L1df4d8.  if v1 != 0 then goto L1df4de;
  #L1df4dc.  return v0;
  #L1df4de.  v1:= v3.`kotlinx.coroutines.i.j` @type ^`kotlin.t.d` @kind object;
  #L1df4e2.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.internal.e` @kind boolean;
  #L1df4e6.  if v2 != 0 then goto L1df4ec;
  #L1df4ea.  v1:= 0I;
  #L1df4ec.  v1:= (`kotlinx.coroutines.internal.e`) v1 @kind object;
  #L1df4f0.  if v1 == 0 then goto L1df50c;
  #L1df4f4.  call temp:= `checkPostponedCancellation`(v1, v3) @signature `Lkotlinx/coroutines/internal/e;.checkPostponedCancellation:(Lkotlinx/coroutines/h;)Ljava/lang/Throwable;` @kind virtual;
  #L1df4fa.  v1:= temp @kind object;
  #L1df4fc.  if v1 == 0 then goto L1df50c;
  #L1df500.  if v0 != 0 then goto L1df50a;
  #L1df504.  call temp:= `cancel`(v3, v1) @signature `Lkotlinx/coroutines/i;.cancel:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L1df50a.  v0:= 1I;
  #L1df50c.  return v0;
}
procedure `boolean` `a`(`kotlinx.coroutines.i` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/i;.a:(Ljava/lang/Throwable;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1df47c.  v0:= v3.`kotlinx.coroutines.m0.h` @type ^`int`;
  #L1df480.  call temp:= `isReusableMode`(v0) @signature `Lkotlinx/coroutines/n0;.isReusableMode:(I)Z` @kind static;
  #L1df486.  v0:= temp;
  #L1df488.  v1:= 0I;
  #L1df48a.  if v0 != 0 then goto L1df490;
  #L1df48e.  return v1;
  #L1df490.  v0:= v3.`kotlinx.coroutines.i.j` @type ^`kotlin.t.d` @kind object;
  #L1df494.  v2:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.e` @kind boolean;
  #L1df498.  if v2 != 0 then goto L1df49e;
  #L1df49c.  v0:= 0I;
  #L1df49e.  v0:= (`kotlinx.coroutines.internal.e`) v0 @kind object;
  #L1df4a2.  if v0 == 0 then goto L1df4b0;
  #L1df4a6.  call temp:= `postponeCancellation`(v0, v4) @signature `Lkotlinx/coroutines/internal/e;.postponeCancellation:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L1df4ac.  v4:= temp;
  #L1df4ae.  return v4;
  #L1df4b0.  return v1;
}
procedure `void` `b`(`kotlinx.coroutines.i` v1 @kind this) @signature `Lkotlinx/coroutines/i;.b:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L1dfcbc.  call temp:= `d`(v1) @signature `Lkotlinx/coroutines/i;.d:()Z` @kind direct;
  #L1dfcc2.  v0:= temp;
  #L1dfcc4.  if v0 != 0 then goto L1dfcce;
  #L1dfcc8.  call `detachChild$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/i;.detachChild$kotlinx_coroutines_core:()V` @kind virtual;
  #L1dfcce.  return @kind void;
}
procedure `kotlinx.coroutines.p0` `c`(`kotlinx.coroutines.i` v1 @kind this) @signature `Lkotlinx/coroutines/i;.c:()Lkotlinx/coroutines/p0;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L1df9c4.  v0:= v1.`kotlinx.coroutines.i._parentHandle` @type ^`java.lang.Object` @kind object;
  #L1df9c8.  v0:= (`kotlinx.coroutines.p0`) v0 @kind object;
  #L1df9cc.  return v0 @kind object;
}
procedure `boolean` `d`(`kotlinx.coroutines.i` v2 @kind this) @signature `Lkotlinx/coroutines/i;.d:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1df544.  v0:= v2.`kotlinx.coroutines.i.j` @type ^`kotlin.t.d` @kind object;
  #L1df548.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.e` @kind boolean;
  #L1df54c.  if v1 == 0 then goto L1df564;
  #L1df550.  v0:= (`kotlinx.coroutines.internal.e`) v0 @kind object;
  #L1df554.  call temp:= `isReusable`(v0, v2) @signature `Lkotlinx/coroutines/internal/e;.isReusable:(Lkotlinx/coroutines/i;)Z` @kind virtual;
  #L1df55a.  v0:= temp;
  #L1df55c.  if v0 == 0 then goto L1df564;
  #L1df560.  v0:= 1I;
  #L1df562.  goto L1df566;
  #L1df564.  v0:= 0I;
  #L1df566.  return v0;
}
procedure `void` `e`(`kotlinx.coroutines.i` v7 @kind this) @signature `Lkotlinx/coroutines/i;.e:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1dffac.  call temp:= `a`(v7) @signature `Lkotlinx/coroutines/i;.a:()Z` @kind direct;
  #L1dffb2.  v0:= temp;
  #L1dffb4.  if v0 == 0 then goto L1dffba;
  #L1dffb8.  return @kind void;
  #L1dffba.  call temp:= `c`(v7) @signature `Lkotlinx/coroutines/i;.c:()Lkotlinx/coroutines/p0;` @kind direct;
  #L1dffc0.  v0:= temp @kind object;
  #L1dffc2.  if v0 == 0 then goto L1dffc8;
  #L1dffc6.  return @kind void;
  #L1dffc8.  v0:= v7.`kotlinx.coroutines.i.j` @type ^`kotlin.t.d` @kind object;
  #L1dffcc.  call temp:= `getContext`(v0) @signature `Lkotlin/t/d;.getContext:()Lkotlin/t/g;` @kind interface;
  #L1dffd2.  v0:= temp @kind object;
  #L1dffd4.  v1:= `@@kotlinx.coroutines.d1.e` @type ^`kotlinx.coroutines.d1$b` @kind object;
  #L1dffd8.  call temp:= `get`(v0, v1) @signature `Lkotlin/t/g;.get:(Lkotlin/t/g$c;)Lkotlin/t/g$b;` @kind interface;
  #L1dffde.  v0:= temp @kind object;
  #L1dffe0.  v1:= v0 @kind object;
  #L1dffe2.  v1:= (`kotlinx.coroutines.d1`) v1 @kind object;
  #L1dffe6.  if v1 == 0 then goto L1e0032;
  #L1dffea.  v2:= 1I;
  #L1dffec.  v3:= 0I;
  #L1dffee.  v4:= new `kotlinx.coroutines.k`;
  #L1dfff2.  call `<init>`(v4, v1, v7) @signature `Lkotlinx/coroutines/k;.<init>:(Lkotlinx/coroutines/d1;Lkotlinx/coroutines/i;)V` @kind direct;
  #L1dfff8.  v5:= 2I;
  #L1dfffa.  v6:= 0I;
  #L1dfffc.  call temp:= `invokeOnCompletion$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlinx/coroutines/d1$a;.invokeOnCompletion$default:(Lkotlinx/coroutines/d1;ZZLkotlin/v/b/l;ILjava/lang/Object;)Lkotlinx/coroutines/p0;` @kind static;
  #L1e0002.  v0:= temp @kind object;
  #L1e0004.  call `a`(v7, v0) @signature `Lkotlinx/coroutines/i;.a:(Lkotlinx/coroutines/p0;)V` @kind direct;
  #L1e000a.  call temp:= `isCompleted`(v7) @signature `Lkotlinx/coroutines/i;.isCompleted:()Z` @kind virtual;
  #L1e0010.  v1:= temp;
  #L1e0012.  if v1 == 0 then goto L1e0032;
  #L1e0016.  call temp:= `d`(v7) @signature `Lkotlinx/coroutines/i;.d:()Z` @kind direct;
  #L1e001c.  v1:= temp;
  #L1e001e.  if v1 != 0 then goto L1e0032;
  #L1e0022.  call `dispose`(v0) @signature `Lkotlinx/coroutines/p0;.dispose:()V` @kind interface;
  #L1e0028.  v0:= `@@kotlinx.coroutines.o1.f` @type ^`kotlinx.coroutines.o1` @kind object;
  #L1e002c.  call `a`(v7, v0) @signature `Lkotlinx/coroutines/i;.a:(Lkotlinx/coroutines/p0;)V` @kind direct;
  #L1e0032.  return @kind void;
}
procedure `boolean` `f`(`kotlinx.coroutines.i` v4 @kind this) @signature `Lkotlinx/coroutines/i;.f:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1df578.  v0:= v4.`kotlinx.coroutines.i._decision` @type ^`int`;
  #L1df57c.  v1:= 0I;
  #L1df57e.  v2:= 1I;
  #L1df580.  if v0 == 0 then goto L1df5a2;
  #L1df584.  if v0 != v2 then goto L1df58a;
  #L1df588.  return v1;
  #L1df58a.  v0:= new `java.lang.IllegalStateException`;
  #L1df58e.  v1:= "Already resumed" @kind object;
  #L1df592.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1df598.  v1:= temp @kind object;
  #L1df59a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1df5a0.  throw v0;
  #L1df5a2.  v0:= `@@kotlinx.coroutines.i.k` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L1df5a6.  v3:= 2I;
  #L1df5a8.  call temp:= `compareAndSet`(v0, v4, v1, v3) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L1df5ae.  v0:= temp;
  #L1df5b0.  if v0 == 0 then goto L1df578;
  #L1df5b4.  return v2;
}
procedure `boolean` `g`(`kotlinx.coroutines.i` v3 @kind this) @signature `Lkotlinx/coroutines/i;.g:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1df5c8.  v0:= v3.`kotlinx.coroutines.i._decision` @type ^`int`;
  #L1df5cc.  v1:= 0I;
  #L1df5ce.  if v0 == 0 then goto L1df5f2;
  #L1df5d2.  v2:= 2I;
  #L1df5d4.  if v0 != v2 then goto L1df5da;
  #L1df5d8.  return v1;
  #L1df5da.  v0:= new `java.lang.IllegalStateException`;
  #L1df5de.  v1:= "Already suspended" @kind object;
  #L1df5e2.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1df5e8.  v1:= temp @kind object;
  #L1df5ea.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1df5f0.  throw v0;
  #L1df5f2.  v0:= `@@kotlinx.coroutines.i.k` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L1df5f6.  v2:= 1I;
  #L1df5f8.  call temp:= `compareAndSet`(v0, v3, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L1df5fe.  v0:= temp;
  #L1df600.  if v0 == 0 then goto L1df5c8;
  #L1df604.  return v2;
}
procedure `void` `callCancelHandler`(`kotlinx.coroutines.i` v3 @kind this, `kotlinx.coroutines.f` v4 @kind object, `java.lang.Throwable` v5 @kind object) @signature `Lkotlinx/coroutines/i;.callCancelHandler:(Lkotlinx/coroutines/f;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1dfaf0.  call `invoke`(v4, v5) @signature `Lkotlinx/coroutines/g;.invoke:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1dfaf6.  goto L1dfb34;
  #L1dfaf8.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1dfafa.  call temp:= `getContext`(v3) @signature `Lkotlinx/coroutines/i;.getContext:()Lkotlin/t/g;` @kind virtual;
  #L1dfb00.  v5:= temp @kind object;
  #L1dfb02.  v0:= new `kotlinx.coroutines.CompletionHandlerException`;
  #L1dfb06.  v1:= new `java.lang.StringBuilder`;
  #L1dfb0a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1dfb10.  v2:= "Exception in invokeOnCancellation handler for " @kind object;
  #L1dfb14.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dfb1a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dfb20.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dfb26.  v1:= temp @kind object;
  #L1dfb28.  call `<init>`(v0, v1, v4) @signature `Lkotlinx/coroutines/CompletionHandlerException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1dfb2e.  call `handleCoroutineException`(v5, v0) @signature `Lkotlinx/coroutines/z;.handleCoroutineException:(Lkotlin/t/g;Ljava/lang/Throwable;)V` @kind static;
  #L1dfb34.  return @kind void;
  catch `java.lang.Throwable` @[L1dfaf0..L1dfaf6] goto L1dfaf8;
}
procedure `void` `callOnCancellation`(`kotlinx.coroutines.i` v3 @kind this, `kotlin.v.b.l` v4 @kind object, `java.lang.Throwable` v5 @kind object) @signature `Lkotlinx/coroutines/i;.callOnCancellation:(Lkotlin/v/b/l;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1dfb54.  call temp:= `invoke`(v4, v5) @signature `Lkotlin/v/b/l;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1dfb5a.  goto L1dfb98;
  #L1dfb5c.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1dfb5e.  call temp:= `getContext`(v3) @signature `Lkotlinx/coroutines/i;.getContext:()Lkotlin/t/g;` @kind virtual;
  #L1dfb64.  v5:= temp @kind object;
  #L1dfb66.  v0:= new `kotlinx.coroutines.CompletionHandlerException`;
  #L1dfb6a.  v1:= new `java.lang.StringBuilder`;
  #L1dfb6e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1dfb74.  v2:= "Exception in resume onCancellation handler for " @kind object;
  #L1dfb78.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dfb7e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dfb84.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dfb8a.  v1:= temp @kind object;
  #L1dfb8c.  call `<init>`(v0, v1, v4) @signature `Lkotlinx/coroutines/CompletionHandlerException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1dfb92.  call `handleCoroutineException`(v5, v0) @signature `Lkotlinx/coroutines/z;.handleCoroutineException:(Lkotlin/t/g;Ljava/lang/Throwable;)V` @kind static;
  #L1dfb98.  return @kind void;
  catch `java.lang.Throwable` @[L1dfb54..L1dfb5a] goto L1dfb5c;
}
procedure `boolean` `cancel`(`kotlinx.coroutines.i` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lkotlinx/coroutines/i;.cancel:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1df414.  v0:= v4.`kotlinx.coroutines.i._state` @type ^`java.lang.Object` @kind object;
  #L1df418.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.p1` @kind boolean;
  #L1df41c.  if v1 != 0 then goto L1df424;
  #L1df420.  v5:= 0I;
  #L1df422.  return v5;
  #L1df424.  v1:= new `kotlinx.coroutines.j`;
  #L1df428.  v2:= instanceof @variable v0 @type ^`kotlinx.coroutines.f` @kind boolean;
  #L1df42c.  call `<init>`(v1, v4, v5, v2) @signature `Lkotlinx/coroutines/j;.<init>:(Lkotlin/t/d;Ljava/lang/Throwable;Z)V` @kind direct;
  #L1df432.  v3:= `@@kotlinx.coroutines.i.l` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1df436.  call temp:= `compareAndSet`(v3, v4, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1df43c.  v1:= temp;
  #L1df43e.  if v1 != 0 then goto L1df444;
  #L1df442.  goto L1df414;
  #L1df444.  if v2 != 0 then goto L1df44a;
  #L1df448.  v0:= 0I;
  #L1df44a.  v0:= (`kotlinx.coroutines.f`) v0 @kind object;
  #L1df44e.  if v0 == 0 then goto L1df458;
  #L1df452.  call `callCancelHandler`(v4, v0, v5) @signature `Lkotlinx/coroutines/i;.callCancelHandler:(Lkotlinx/coroutines/f;Ljava/lang/Throwable;)V` @kind virtual;
  #L1df458.  call `b`(v4) @signature `Lkotlinx/coroutines/i;.b:()V` @kind direct;
  #L1df45e.  v5:= v4.`kotlinx.coroutines.m0.h` @type ^`int`;
  #L1df462.  call `a`(v4, v5) @signature `Lkotlinx/coroutines/i;.a:(I)V` @kind direct;
  #L1df468.  v5:= 1I;
  #L1df46a.  return v5;
}
procedure `void` `cancelCompletedResult$kotlinx_coroutines_core`(`kotlinx.coroutines.i` v10 @kind this, `java.lang.Object` v11 @kind object, `java.lang.Throwable` v12 @kind object) @signature `Lkotlinx/coroutines/i;.cancelCompletedResult$kotlinx_coroutines_core:(Ljava/lang/Object;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1dfbb8.  v11:= v10.`kotlinx.coroutines.i._state` @type ^`java.lang.Object` @kind object;
  #L1dfbbc.  v0:= instanceof @variable v11 @type ^`kotlinx.coroutines.p1` @kind boolean;
  #L1dfbc0.  if v0 != 0 then goto L1dfc64;
  #L1dfbc4.  v0:= instanceof @variable v11 @type ^`kotlinx.coroutines.r` @kind boolean;
  #L1dfbc8.  if v0 == 0 then goto L1dfbce;
  #L1dfbcc.  return @kind void;
  #L1dfbce.  v0:= instanceof @variable v11 @type ^`kotlinx.coroutines.q` @kind boolean;
  #L1dfbd2.  if v0 == 0 then goto L1dfc36;
  #L1dfbd6.  v0:= v11 @kind object;
  #L1dfbd8.  v0:= (`kotlinx.coroutines.q`) v0 @kind object;
  #L1dfbdc.  call temp:= `getCancelled`(v0) @signature `Lkotlinx/coroutines/q;.getCancelled:()Z` @kind virtual;
  #L1dfbe2.  v1:= temp;
  #L1dfbe4.  v1:= v1 ^~ 1;
  #L1dfbe8.  if v1 == 0 then goto L1dfc1e;
  #L1dfbec.  v2:= 0I;
  #L1dfbee.  v3:= 0I;
  #L1dfbf0.  v4:= 0I;
  #L1dfbf2.  v5:= 0I;
  #L1dfbf4.  v7:= 15I;
  #L1dfbf8.  v8:= 0I;
  #L1dfbfa.  v1:= v0 @kind object;
  #L1dfbfc.  v6:= v12 @kind object;
  #L1dfbfe.  call temp:= `copy$default`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lkotlinx/coroutines/q;.copy$default:(Lkotlinx/coroutines/q;Ljava/lang/Object;Lkotlinx/coroutines/f;Lkotlin/v/b/l;Ljava/lang/Object;Ljava/lang/Throwable;ILjava/lang/Object;)Lkotlinx/coroutines/q;` @kind static;
  #L1dfc04.  v1:= temp @kind object;
  #L1dfc06.  v2:= `@@kotlinx.coroutines.i.l` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1dfc0a.  call temp:= `compareAndSet`(v2, v10, v11, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1dfc10.  v11:= temp;
  #L1dfc12.  if v11 == 0 then goto L1dfbb8;
  #L1dfc16.  call `invokeHandlers`(v0, v10, v12) @signature `Lkotlinx/coroutines/q;.invokeHandlers:(Lkotlinx/coroutines/i;Ljava/lang/Throwable;)V` @kind virtual;
  #L1dfc1c.  return @kind void;
  #L1dfc1e.  v11:= new `java.lang.IllegalStateException`;
  #L1dfc22.  v12:= "Must be called at most once" @kind object;
  #L1dfc26.  call temp:= `toString`(v12) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dfc2c.  v12:= temp @kind object;
  #L1dfc2e.  call `<init>`(v11, v12) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dfc34.  throw v11;
  #L1dfc36.  v8:= `@@kotlinx.coroutines.i.l` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1dfc3a.  v9:= new `kotlinx.coroutines.q`;
  #L1dfc3e.  v2:= 0I;
  #L1dfc40.  v3:= 0I;
  #L1dfc42.  v4:= 0I;
  #L1dfc44.  v6:= 14I;
  #L1dfc48.  v7:= 0I;
  #L1dfc4a.  v0:= v9 @kind object;
  #L1dfc4c.  v1:= v11 @kind object;
  #L1dfc4e.  v5:= v12 @kind object;
  #L1dfc50.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/q;.<init>:(Ljava/lang/Object;Lkotlinx/coroutines/f;Lkotlin/v/b/l;Ljava/lang/Object;Ljava/lang/Throwable;ILkotlin/v/c/f;)V` @kind direct;
  #L1dfc56.  call temp:= `compareAndSet`(v8, v10, v11, v9) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1dfc5c.  v11:= temp;
  #L1dfc5e.  if v11 == 0 then goto L1dfbb8;
  #L1dfc62.  return @kind void;
  #L1dfc64.  v11:= new `java.lang.IllegalStateException`;
  #L1dfc68.  v12:= "Not completed" @kind object;
  #L1dfc6c.  call temp:= `toString`(v12) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dfc72.  v12:= temp @kind object;
  #L1dfc74.  call `<init>`(v11, v12) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dfc7a.  throw v11;
}
procedure `void` `detachChild$kotlinx_coroutines_core`(`kotlinx.coroutines.i` v1 @kind this) @signature `Lkotlinx/coroutines/i;.detachChild$kotlinx_coroutines_core:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1dfc8c.  call temp:= `c`(v1) @signature `Lkotlinx/coroutines/i;.c:()Lkotlinx/coroutines/p0;` @kind direct;
  #L1dfc92.  v0:= temp @kind object;
  #L1dfc94.  if v0 == 0 then goto L1dfc9e;
  #L1dfc98.  call `dispose`(v0) @signature `Lkotlinx/coroutines/p0;.dispose:()V` @kind interface;
  #L1dfc9e.  v0:= `@@kotlinx.coroutines.o1.f` @type ^`kotlinx.coroutines.o1` @kind object;
  #L1dfca2.  call `a`(v1, v0) @signature `Lkotlinx/coroutines/i;.a:(Lkotlinx/coroutines/p0;)V` @kind direct;
  #L1dfca8.  return @kind void;
}
procedure `kotlin.t.j.a.d` `getCallerFrame`(`kotlinx.coroutines.i` v2 @kind this) @signature `Lkotlinx/coroutines/i;.getCallerFrame:()Lkotlin/t/j/a/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1df974.  v0:= v2.`kotlinx.coroutines.i.j` @type ^`kotlin.t.d` @kind object;
  #L1df978.  v1:= instanceof @variable v0 @type ^`kotlin.t.j.a.d` @kind boolean;
  #L1df97c.  if v1 != 0 then goto L1df982;
  #L1df980.  v0:= 0I;
  #L1df982.  v0:= (`kotlin.t.j.a.d`) v0 @kind object;
  #L1df986.  return v0 @kind object;
}
procedure `kotlin.t.g` `getContext`(`kotlinx.coroutines.i` v1 @kind this) @signature `Lkotlinx/coroutines/i;.getContext:()Lkotlin/t/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1df95c.  v0:= v1.`kotlinx.coroutines.i.i` @type ^`kotlin.t.g` @kind object;
  #L1df960.  return v0 @kind object;
}
procedure `java.lang.Throwable` `getContinuationCancellationCause`(`kotlinx.coroutines.i` v0 @kind this, `kotlinx.coroutines.d1` v1 @kind object) @signature `Lkotlinx/coroutines/i;.getContinuationCancellationCause:(Lkotlinx/coroutines/d1;)Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;

  #L1df898.  call temp:= `getCancellationException`(v1) @signature `Lkotlinx/coroutines/d1;.getCancellationException:()Ljava/util/concurrent/CancellationException;` @kind interface;
  #L1df89e.  v1:= temp @kind object;
  #L1df8a0.  return v1 @kind object;
}
procedure `kotlin.t.d` `getDelegate$kotlinx_coroutines_core`(`kotlinx.coroutines.i` v1 @kind this) @signature `Lkotlinx/coroutines/i;.getDelegate$kotlinx_coroutines_core:()Lkotlin/t/d;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1df944.  v0:= v1.`kotlinx.coroutines.i.j` @type ^`kotlin.t.d` @kind object;
  #L1df948.  return v0 @kind object;
}
procedure `java.lang.Throwable` `getExceptionalResult$kotlinx_coroutines_core`(`kotlinx.coroutines.i` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/i;.getExceptionalResult$kotlinx_coroutines_core:(Ljava/lang/Object;)Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1df8b4.  call temp:= `getExceptionalResult$kotlinx_coroutines_core`(v2, v3) @signature `Lkotlinx/coroutines/m0;.getExceptionalResult$kotlinx_coroutines_core:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind super;
  #L1df8ba.  v3:= temp @kind object;
  #L1df8bc.  if v3 == 0 then goto L1df8e8;
  #L1df8c0.  v0:= v2.`kotlinx.coroutines.i.j` @type ^`kotlin.t.d` @kind object;
  #L1df8c4.  call temp:= `getRECOVER_STACK_TRACES`() @signature `Lkotlinx/coroutines/h0;.getRECOVER_STACK_TRACES:()Z` @kind static;
  #L1df8ca.  v1:= temp;
  #L1df8cc.  if v1 == 0 then goto L1df8ea;
  #L1df8d0.  v1:= instanceof @variable v0 @type ^`kotlin.t.j.a.d` @kind boolean;
  #L1df8d4.  if v1 != 0 then goto L1df8da;
  #L1df8d8.  goto L1df8ea;
  #L1df8da.  v0:= (`kotlin.t.j.a.d`) v0 @kind object;
  #L1df8de.  call temp:= `access$recoverFromStackFrame`(v3, v0) @signature `Lkotlinx/coroutines/internal/u;.access$recoverFromStackFrame:(Ljava/lang/Throwable;Lkotlin/t/j/a/d;)Ljava/lang/Throwable;` @kind static;
  #L1df8e4.  v3:= temp @kind object;
  #L1df8e6.  goto L1df8ea;
  #L1df8e8.  v3:= 0I;
  #L1df8ea.  return v3 @kind object;
}
procedure `java.lang.Object` `getResult`(`kotlinx.coroutines.i` v3 @kind this) @signature `Lkotlinx/coroutines/i;.getResult:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1df618.  call `e`(v3) @signature `Lkotlinx/coroutines/i;.e:()V` @kind direct;
  #L1df61e.  call temp:= `g`(v3) @signature `Lkotlinx/coroutines/i;.g:()Z` @kind direct;
  #L1df624.  v0:= temp;
  #L1df626.  if v0 == 0 then goto L1df634;
  #L1df62a.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/t/i/b;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L1df630.  v0:= temp @kind object;
  #L1df632.  return v0 @kind object;
  #L1df634.  call temp:= `getState$kotlinx_coroutines_core`(v3) @signature `Lkotlinx/coroutines/i;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L1df63a.  v0:= temp @kind object;
  #L1df63c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.r` @kind boolean;
  #L1df640.  if v1 == 0 then goto L1df662;
  #L1df644.  v0:= (`kotlinx.coroutines.r`) v0 @kind object;
  #L1df648.  v0:= v0.`kotlinx.coroutines.r.a` @type ^`java.lang.Throwable` @kind object;
  #L1df64c.  call temp:= `getRECOVER_STACK_TRACES`() @signature `Lkotlinx/coroutines/h0;.getRECOVER_STACK_TRACES:()Z` @kind static;
  #L1df652.  v1:= temp;
  #L1df654.  if v1 == 0 then goto L1df660;
  #L1df658.  call temp:= `access$recoverFromStackFrame`(v0, v3) @signature `Lkotlinx/coroutines/internal/u;.access$recoverFromStackFrame:(Ljava/lang/Throwable;Lkotlin/t/j/a/d;)Ljava/lang/Throwable;` @kind static;
  #L1df65e.  v0:= temp @kind object;
  #L1df660.  throw v0;
  #L1df662.  v1:= v3.`kotlinx.coroutines.m0.h` @type ^`int`;
  #L1df666.  call temp:= `isCancellableMode`(v1) @signature `Lkotlinx/coroutines/n0;.isCancellableMode:(I)Z` @kind static;
  #L1df66c.  v1:= temp;
  #L1df66e.  if v1 == 0 then goto L1df6be;
  #L1df672.  call temp:= `getContext`(v3) @signature `Lkotlinx/coroutines/i;.getContext:()Lkotlin/t/g;` @kind virtual;
  #L1df678.  v1:= temp @kind object;
  #L1df67a.  v2:= `@@kotlinx.coroutines.d1.e` @type ^`kotlinx.coroutines.d1$b` @kind object;
  #L1df67e.  call temp:= `get`(v1, v2) @signature `Lkotlin/t/g;.get:(Lkotlin/t/g$c;)Lkotlin/t/g$b;` @kind interface;
  #L1df684.  v1:= temp @kind object;
  #L1df686.  v1:= (`kotlinx.coroutines.d1`) v1 @kind object;
  #L1df68a.  if v1 == 0 then goto L1df6be;
  #L1df68e.  call temp:= `isActive`(v1) @signature `Lkotlinx/coroutines/d1;.isActive:()Z` @kind interface;
  #L1df694.  v2:= temp;
  #L1df696.  if v2 != 0 then goto L1df6be;
  #L1df69a.  call temp:= `getCancellationException`(v1) @signature `Lkotlinx/coroutines/d1;.getCancellationException:()Ljava/util/concurrent/CancellationException;` @kind interface;
  #L1df6a0.  v1:= temp @kind object;
  #L1df6a2.  call `cancelCompletedResult$kotlinx_coroutines_core`(v3, v0, v1) @signature `Lkotlinx/coroutines/i;.cancelCompletedResult$kotlinx_coroutines_core:(Ljava/lang/Object;Ljava/lang/Throwable;)V` @kind virtual;
  #L1df6a8.  call temp:= `getRECOVER_STACK_TRACES`() @signature `Lkotlinx/coroutines/h0;.getRECOVER_STACK_TRACES:()Z` @kind static;
  #L1df6ae.  v0:= temp;
  #L1df6b0.  if v0 == 0 then goto L1df6bc;
  #L1df6b4.  call temp:= `access$recoverFromStackFrame`(v1, v3) @signature `Lkotlinx/coroutines/internal/u;.access$recoverFromStackFrame:(Ljava/lang/Throwable;Lkotlin/t/j/a/d;)Ljava/lang/Throwable;` @kind static;
  #L1df6ba.  v1:= temp @kind object;
  #L1df6bc.  throw v1;
  #L1df6be.  call temp:= `getSuccessfulResult$kotlinx_coroutines_core`(v3, v0) @signature `Lkotlinx/coroutines/i;.getSuccessfulResult$kotlinx_coroutines_core:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1df6c4.  v0:= temp @kind object;
  #L1df6c6.  return v0 @kind object;
}
procedure `java.lang.StackTraceElement` `getStackTraceElement`(`kotlinx.coroutines.i` v1 @kind this) @signature `Lkotlinx/coroutines/i;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1df7ec.  v0:= 0I;
  #L1df7ee.  return v0 @kind object;
}
procedure `java.lang.Object` `getState$kotlinx_coroutines_core`(`kotlinx.coroutines.i` v1 @kind this) @signature `Lkotlinx/coroutines/i;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1df6d8.  v0:= v1.`kotlinx.coroutines.i._state` @type ^`java.lang.Object` @kind object;
  #L1df6dc.  return v0 @kind object;
}
procedure `java.lang.Object` `getSuccessfulResult$kotlinx_coroutines_core`(`kotlinx.coroutines.i` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/i;.getSuccessfulResult$kotlinx_coroutines_core:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1df6f0.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.q` @kind boolean;
  #L1df6f4.  if v0 == 0 then goto L1df700;
  #L1df6f8.  v2:= (`kotlinx.coroutines.q`) v2 @kind object;
  #L1df6fc.  v2:= v2.`kotlinx.coroutines.q.a` @type ^`java.lang.Object` @kind object;
  #L1df700.  return v2 @kind object;
}
procedure `void` `invokeOnCancellation`(`kotlinx.coroutines.i` v11 @kind this, `kotlin.v.b.l` v12 @kind object) @signature `Lkotlinx/coroutines/i;.invokeOnCancellation:(Lkotlin/v/b/l;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1dfd08.  call temp:= `a`(v11, v12) @signature `Lkotlinx/coroutines/i;.a:(Lkotlin/v/b/l;)Lkotlinx/coroutines/f;` @kind direct;
  #L1dfd0e.  v8:= temp @kind object;
  #L1dfd10.  v9:= v11.`kotlinx.coroutines.i._state` @type ^`java.lang.Object` @kind object;
  #L1dfd14.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.b` @kind boolean;
  #L1dfd18.  if v0 == 0 then goto L1dfd2e;
  #L1dfd1c.  v0:= `@@kotlinx.coroutines.i.l` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1dfd20.  call temp:= `compareAndSet`(v0, v11, v9, v8) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1dfd26.  v0:= temp;
  #L1dfd28.  if v0 == 0 then goto L1dfd10;
  #L1dfd2c.  return @kind void;
  #L1dfd2e.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.f` @kind boolean;
  #L1dfd32.  v1:= 0I;
  #L1dfd34.  if v0 != 0 then goto L1dfe0a;
  #L1dfd38.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.r` @kind boolean;
  #L1dfd3c.  if v0 == 0 then goto L1dfd7c;
  #L1dfd40.  v2:= v9 @kind object;
  #L1dfd42.  v2:= (`kotlinx.coroutines.r`) v2 @kind object;
  #L1dfd46.  call temp:= `makeHandled`(v2) @signature `Lkotlinx/coroutines/r;.makeHandled:()Z` @kind virtual;
  #L1dfd4c.  v2:= temp;
  #L1dfd4e.  if v2 == 0 then goto L1dfd74;
  #L1dfd52.  v2:= instanceof @variable v9 @type ^`kotlinx.coroutines.j` @kind boolean;
  #L1dfd56.  if v2 == 0 then goto L1dfd72;
  #L1dfd5a.  if v0 != 0 then goto L1dfd60;
  #L1dfd5e.  v9:= v1 @kind object;
  #L1dfd60.  v9:= (`kotlinx.coroutines.r`) v9 @kind object;
  #L1dfd64.  if v9 == 0 then goto L1dfd6c;
  #L1dfd68.  v1:= v9.`kotlinx.coroutines.r.a` @type ^`java.lang.Throwable` @kind object;
  #L1dfd6c.  call `a`(v11, v12, v1) @signature `Lkotlinx/coroutines/i;.a:(Lkotlin/v/b/l;Ljava/lang/Throwable;)V` @kind direct;
  #L1dfd72.  return @kind void;
  #L1dfd74.  call `a`(v11, v12, v9) @signature `Lkotlinx/coroutines/i;.a:(Lkotlin/v/b/l;Ljava/lang/Object;)V` @kind direct;
  #L1dfd7a.  throw v1;
  #L1dfd7c.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.q` @kind boolean;
  #L1dfd80.  if v0 == 0 then goto L1dfddc;
  #L1dfd84.  v0:= v9 @kind object;
  #L1dfd86.  v0:= (`kotlinx.coroutines.q`) v0 @kind object;
  #L1dfd8a.  v2:= v0.`kotlinx.coroutines.q.b` @type ^`kotlinx.coroutines.f` @kind object;
  #L1dfd8e.  if v2 != 0 then goto L1dfdd4;
  #L1dfd92.  call temp:= `getCancelled`(v0) @signature `Lkotlinx/coroutines/q;.getCancelled:()Z` @kind virtual;
  #L1dfd98.  v1:= temp;
  #L1dfd9a.  if v1 == 0 then goto L1dfdaa;
  #L1dfd9e.  v0:= v0.`kotlinx.coroutines.q.e` @type ^`java.lang.Throwable` @kind object;
  #L1dfda2.  call `a`(v11, v12, v0) @signature `Lkotlinx/coroutines/i;.a:(Lkotlin/v/b/l;Ljava/lang/Throwable;)V` @kind direct;
  #L1dfda8.  return @kind void;
  #L1dfdaa.  v1:= 0I;
  #L1dfdac.  v3:= 0I;
  #L1dfdae.  v4:= 0I;
  #L1dfdb0.  v5:= 0I;
  #L1dfdb2.  v6:= 29I;
  #L1dfdb6.  v7:= 0I;
  #L1dfdb8.  v2:= v8 @kind object;
  #L1dfdba.  call temp:= `copy$default`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/q;.copy$default:(Lkotlinx/coroutines/q;Ljava/lang/Object;Lkotlinx/coroutines/f;Lkotlin/v/b/l;Ljava/lang/Object;Ljava/lang/Throwable;ILjava/lang/Object;)Lkotlinx/coroutines/q;` @kind static;
  #L1dfdc0.  v0:= temp @kind object;
  #L1dfdc2.  v1:= `@@kotlinx.coroutines.i.l` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1dfdc6.  call temp:= `compareAndSet`(v1, v11, v9, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1dfdcc.  v0:= temp;
  #L1dfdce.  if v0 == 0 then goto L1dfd10;
  #L1dfdd2.  return @kind void;
  #L1dfdd4.  call `a`(v11, v12, v9) @signature `Lkotlinx/coroutines/i;.a:(Lkotlin/v/b/l;Ljava/lang/Object;)V` @kind direct;
  #L1dfdda.  throw v1;
  #L1dfddc.  v10:= new `kotlinx.coroutines.q`;
  #L1dfde0.  v3:= 0I;
  #L1dfde2.  v4:= 0I;
  #L1dfde4.  v5:= 0I;
  #L1dfde6.  v6:= 28I;
  #L1dfdea.  v7:= 0I;
  #L1dfdec.  v0:= v10 @kind object;
  #L1dfdee.  v1:= v9 @kind object;
  #L1dfdf0.  v2:= v8 @kind object;
  #L1dfdf2.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lkotlinx/coroutines/q;.<init>:(Ljava/lang/Object;Lkotlinx/coroutines/f;Lkotlin/v/b/l;Ljava/lang/Object;Ljava/lang/Throwable;ILkotlin/v/c/f;)V` @kind direct;
  #L1dfdf8.  v0:= `@@kotlinx.coroutines.i.l` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1dfdfc.  call temp:= `compareAndSet`(v0, v11, v9, v10) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1dfe02.  v0:= temp;
  #L1dfe04.  if v0 == 0 then goto L1dfd10;
  #L1dfe08.  return @kind void;
  #L1dfe0a.  call `a`(v11, v12, v9) @signature `Lkotlinx/coroutines/i;.a:(Lkotlin/v/b/l;Ljava/lang/Object;)V` @kind direct;
  #L1dfe10.  throw v1;
}
procedure `boolean` `isCompleted`(`kotlinx.coroutines.i` v1 @kind this) @signature `Lkotlinx/coroutines/i;.isCompleted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1df520.  call temp:= `getState$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/i;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L1df526.  v0:= temp @kind object;
  #L1df528.  v0:= instanceof @variable v0 @type ^`kotlinx.coroutines.p1` @kind boolean;
  #L1df52c.  v0:= v0 ^~ 1;
  #L1df530.  return v0;
}
procedure `java.lang.String` `nameString`(`kotlinx.coroutines.i` v1 @kind this) @signature `Lkotlinx/coroutines/i;.nameString:()Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1df800.  v0:= "CancellableContinuation" @kind object;
  #L1df804.  return v0 @kind object;
}
procedure `void` `parentCancelled$kotlinx_coroutines_core`(`kotlinx.coroutines.i` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/i;.parentCancelled$kotlinx_coroutines_core:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1dfe7c.  call temp:= `a`(v1, v2) @signature `Lkotlinx/coroutines/i;.a:(Ljava/lang/Throwable;)Z` @kind direct;
  #L1dfe82.  v0:= temp;
  #L1dfe84.  if v0 == 0 then goto L1dfe8a;
  #L1dfe88.  return @kind void;
  #L1dfe8a.  call temp:= `cancel`(v1, v2) @signature `Lkotlinx/coroutines/i;.cancel:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L1dfe90.  call `b`(v1) @signature `Lkotlinx/coroutines/i;.b:()V` @kind direct;
  #L1dfe96.  return @kind void;
}
procedure `void` `resumeWith`(`kotlinx.coroutines.i` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/i;.resumeWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1dff68.  call temp:= `toState`(v7, v6) @signature `Lkotlinx/coroutines/u;.toState:(Ljava/lang/Object;Lkotlinx/coroutines/h;)Ljava/lang/Object;` @kind static;
  #L1dff6e.  v1:= temp @kind object;
  #L1dff70.  v2:= v6.`kotlinx.coroutines.m0.h` @type ^`int`;
  #L1dff74.  v3:= 0I;
  #L1dff76.  v4:= 4I;
  #L1dff78.  v5:= 0I;
  #L1dff7a.  v0:= v6 @kind object;
  #L1dff7c.  call `a`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/i;.a:(Lkotlinx/coroutines/i;Ljava/lang/Object;ILkotlin/v/b/l;ILjava/lang/Object;)V` @kind static;
  #L1dff82.  return @kind void;
}
procedure `java.lang.Object` `takeState$kotlinx_coroutines_core`(`kotlinx.coroutines.i` v1 @kind this) @signature `Lkotlinx/coroutines/i;.takeState$kotlinx_coroutines_core:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1df7d0.  call temp:= `getState$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/i;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L1df7d6.  v0:= temp @kind object;
  #L1df7d8.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.i` v2 @kind this) @signature `Lkotlinx/coroutines/i;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1df818.  v0:= new `java.lang.StringBuilder`;
  #L1df81c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1df822.  call temp:= `nameString`(v2) @signature `Lkotlinx/coroutines/i;.nameString:()Ljava/lang/String;` @kind virtual;
  #L1df828.  v1:= temp @kind object;
  #L1df82a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df830.  v1:= 40I;
  #L1df834.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df83a.  v1:= v2.`kotlinx.coroutines.i.j` @type ^`kotlin.t.d` @kind object;
  #L1df83e.  call temp:= `toDebugString`(v1) @signature `Lkotlinx/coroutines/i0;.toDebugString:(Lkotlin/t/d;)Ljava/lang/String;` @kind static;
  #L1df844.  v1:= temp @kind object;
  #L1df846.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df84c.  v1:= "){" @kind object;
  #L1df850.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df856.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/i;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L1df85c.  v1:= temp @kind object;
  #L1df85e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df864.  v1:= "}@" @kind object;
  #L1df868.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df86e.  call temp:= `getHexAddress`(v2) @signature `Lkotlinx/coroutines/i0;.getHexAddress:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1df874.  v1:= temp @kind object;
  #L1df876.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1df87c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1df882.  v0:= temp @kind object;
  #L1df884.  return v0 @kind object;
}
