record `kotlinx.coroutines.n1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.internal.j` @kind class, `kotlinx.coroutines.y0` @kind interface {
}
procedure `void` `<init>`(`kotlinx.coroutines.n1` v0 @kind this) @signature `Lkotlinx/coroutines/n1;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1e60e8.  call `<init>`(v0) @signature `Lkotlinx/coroutines/internal/j;.<init>:()V` @kind direct;
  #L1e60ee.  return @kind void;
}
procedure `kotlinx.coroutines.n1` `getList`(`kotlinx.coroutines.n1` v0 @kind this) @signature `Lkotlinx/coroutines/n1;.getList:()Lkotlinx/coroutines/n1;` @AccessFlag PUBLIC {
    temp;

  #L1e60d4.  return v0 @kind object;
}
procedure `java.lang.String` `getString`(`kotlinx.coroutines.n1` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lkotlinx/coroutines/n1;.getString:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1e5fec.  v0:= new `java.lang.StringBuilder`;
  #L1e5ff0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e5ff6.  v1:= "List{" @kind object;
  #L1e5ffa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e6000.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e6006.  v6:= "}[" @kind object;
  #L1e600a.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e6010.  call temp:= `getNext`(v5) @signature `Lkotlinx/coroutines/internal/l;.getNext:()Ljava/lang/Object;` @kind virtual;
  #L1e6016.  v6:= temp @kind object;
  #L1e6018.  if v6 == 0 then goto L1e6080;
  #L1e601c.  v6:= (`kotlinx.coroutines.internal.l`) v6 @kind object;
  #L1e6020.  v1:= 1I;
  #L1e6022.  v2:= 1I;
  #L1e6024.  call temp:= `areEqual`(v6, v5) @signature `Lkotlin/v/c/i;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1e602a.  v3:= temp;
  #L1e602c.  v3:= v3 ^~ v1 @kind int;
  #L1e602e.  if v3 == 0 then goto L1e6062;
  #L1e6032.  v3:= instanceof @variable v6 @type ^`kotlinx.coroutines.i1` @kind boolean;
  #L1e6036.  if v3 == 0 then goto L1e6058;
  #L1e603a.  v3:= v6 @kind object;
  #L1e603c.  v3:= (`kotlinx.coroutines.i1`) v3 @kind object;
  #L1e6040.  if v2 == 0 then goto L1e6048;
  #L1e6044.  v2:= 0I;
  #L1e6046.  goto L1e6052;
  #L1e6048.  v4:= ", " @kind object;
  #L1e604c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e6052.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e6058.  call temp:= `getNextNode`(v6) @signature `Lkotlinx/coroutines/internal/l;.getNextNode:()Lkotlinx/coroutines/internal/l;` @kind virtual;
  #L1e605e.  v6:= temp @kind object;
  #L1e6060.  goto L1e6024;
  #L1e6062.  v6:= "]" @kind object;
  #L1e6066.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e606c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e6072.  v6:= temp @kind object;
  #L1e6074.  v0:= "StringBuilder().apply(builderAction).toString()" @kind object;
  #L1e6078.  call `checkNotNullExpressionValue`(v6, v0) @signature `Lkotlin/v/c/i;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1e607e.  return v6 @kind object;
  #L1e6080.  v6:= new `java.lang.NullPointerException`;
  #L1e6084.  v0:= "null cannot be cast to non-null type kotlinx.coroutines.internal.Node /* = kotlinx.coroutines.internal.LockFreeLinkedListNode */" @kind object;
  #L1e6088.  call `<init>`(v6, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e608e.  throw v6;
}
procedure `boolean` `isActive`(`kotlinx.coroutines.n1` v1 @kind this) @signature `Lkotlinx/coroutines/n1;.isActive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e5fd8.  v0:= 1I;
  #L1e5fda.  return v0;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.n1` v1 @kind this) @signature `Lkotlinx/coroutines/n1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e60a0.  call temp:= `getDEBUG`() @signature `Lkotlinx/coroutines/h0;.getDEBUG:()Z` @kind static;
  #L1e60a6.  v0:= temp;
  #L1e60a8.  if v0 == 0 then goto L1e60ba;
  #L1e60ac.  v0:= "Active" @kind object;
  #L1e60b0.  call temp:= `getString`(v1, v0) @signature `Lkotlinx/coroutines/n1;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L1e60b6.  v0:= temp @kind object;
  #L1e60b8.  goto L1e60c2;
  #L1e60ba.  call temp:= `toString`(v1) @signature `Lkotlinx/coroutines/internal/l;.toString:()Ljava/lang/String;` @kind super;
  #L1e60c0.  v0:= temp @kind object;
  #L1e60c2.  return v0 @kind object;
}
