record `kotlinx.coroutines.w1` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `long` `nanoTime`() @signature `Lkotlinx/coroutines/w1;.nanoTime:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `parkNanos`(`java.lang.Object` v0 @kind object, `long` v1 ) @signature `Lkotlinx/coroutines/w1;.parkNanos:(Ljava/lang/Object;J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `registerTimeLoopThread`() @signature `Lkotlinx/coroutines/w1;.registerTimeLoopThread:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `trackTask`() @signature `Lkotlinx/coroutines/w1;.trackTask:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `unTrackTask`() @signature `Lkotlinx/coroutines/w1;.unTrackTask:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `unpark`(`java.lang.Thread` v0 @kind object) @signature `Lkotlinx/coroutines/w1;.unpark:(Ljava/lang/Thread;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `unregisterTimeLoopThread`() @signature `Lkotlinx/coroutines/w1;.unregisterTimeLoopThread:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Runnable` `wrapTask`(`java.lang.Runnable` v0 @kind object) @signature `Lkotlinx/coroutines/w1;.wrapTask:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
