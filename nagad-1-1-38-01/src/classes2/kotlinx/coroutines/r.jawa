record `kotlinx.coroutines.r` @kind class @AccessFlag PUBLIC {
  `int` `kotlinx.coroutines.r._handled` @AccessFlag PRIVATE_VOLATILE;
  `java.lang.Throwable` `kotlinx.coroutines.r.a` @AccessFlag PUBLIC_FINAL;
}
global `java.util.concurrent.atomic.AtomicIntegerFieldUpdater` `@@kotlinx.coroutines.r.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/r;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1e0aa4.  v0:= constclass @type ^`kotlinx.coroutines.r` @kind object;
  #L1e0aa8.  v1:= "_handled" @kind object;
  #L1e0aac.  call temp:= `newUpdater`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;` @kind static;
  #L1e0ab2.  v0:= temp @kind object;
  #L1e0ab4.  `@@kotlinx.coroutines.r.b` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` := v0 @kind object;
  #L1e0ab8.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.r` v0 @kind this, `java.lang.Throwable` v1 @kind object, `boolean` v2 ) @signature `Lkotlinx/coroutines/r;.<init>:(Ljava/lang/Throwable;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1e0acc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1e0ad2.  v0.`kotlinx.coroutines.r.a` @type ^`java.lang.Throwable` := v1 @kind object;
  #L1e0ad6.  v0.`kotlinx.coroutines.r._handled` @type ^`int` := v2;
  #L1e0ada.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.r` v0 @kind this, `java.lang.Throwable` v1 @kind object, `boolean` v2 , `int` v3 , `kotlin.v.c.f` v4 @kind object) @signature `Lkotlinx/coroutines/r;.<init>:(Ljava/lang/Throwable;ZILkotlin/v/c/f;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1e0aec.  v3:= v3 ^& 2;
  #L1e0af0.  if v3 == 0 then goto L1e0af6;
  #L1e0af4.  v2:= 0I;
  #L1e0af6.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/r;.<init>:(Ljava/lang/Throwable;Z)V` @kind direct;
  #L1e0afc.  return @kind void;
}
procedure `boolean` `getHandled`(`kotlinx.coroutines.r` v1 @kind this) @signature `Lkotlinx/coroutines/r;.getHandled:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1e0a18.  v0:= v1.`kotlinx.coroutines.r._handled` @type ^`int`;
  #L1e0a1c.  return v0;
}
procedure `boolean` `makeHandled`(`kotlinx.coroutines.r` v3 @kind this) @signature `Lkotlinx/coroutines/r;.makeHandled:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1e0a30.  v0:= `@@kotlinx.coroutines.r.b` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L1e0a34.  v1:= 0I;
  #L1e0a36.  v2:= 1I;
  #L1e0a38.  call temp:= `compareAndSet`(v0, v3, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L1e0a3e.  v0:= temp;
  #L1e0a40.  return v0;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.r` v2 @kind this) @signature `Lkotlinx/coroutines/r;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e0a54.  v0:= new `java.lang.StringBuilder`;
  #L1e0a58.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e0a5e.  call temp:= `getClassSimpleName`(v2) @signature `Lkotlinx/coroutines/i0;.getClassSimpleName:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1e0a64.  v1:= temp @kind object;
  #L1e0a66.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e0a6c.  v1:= 91I;
  #L1e0a70.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e0a76.  v1:= v2.`kotlinx.coroutines.r.a` @type ^`java.lang.Throwable` @kind object;
  #L1e0a7a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e0a80.  v1:= 93I;
  #L1e0a84.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e0a8a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e0a90.  v0:= temp @kind object;
  #L1e0a92.  return v0 @kind object;
}
