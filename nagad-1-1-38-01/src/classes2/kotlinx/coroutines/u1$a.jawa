record `kotlinx.coroutines.u1$a` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `fold`(`kotlinx.coroutines.u1` v0 @kind object, `java.lang.Object` v1 @kind object, `kotlin.v.b.p` v2 @kind object) @signature `Lkotlinx/coroutines/u1$a;.fold:(Lkotlinx/coroutines/u1;Ljava/lang/Object;Lkotlin/v/b/p;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1e6220.  call temp:= `fold`(v0, v1, v2) @signature `Lkotlin/t/g$b$a;.fold:(Lkotlin/t/g$b;Ljava/lang/Object;Lkotlin/v/b/p;)Ljava/lang/Object;` @kind static;
  #L1e6226.  v0:= temp @kind object;
  #L1e6228.  return v0 @kind object;
}
procedure `kotlin.t.g$b` `get`(`kotlinx.coroutines.u1` v0 @kind object, `kotlin.t.g$c` v1 @kind object) @signature `Lkotlinx/coroutines/u1$a;.get:(Lkotlinx/coroutines/u1;Lkotlin/t/g$c;)Lkotlin/t/g$b;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1e6274.  call temp:= `get`(v0, v1) @signature `Lkotlin/t/g$b$a;.get:(Lkotlin/t/g$b;Lkotlin/t/g$c;)Lkotlin/t/g$b;` @kind static;
  #L1e627a.  v0:= temp @kind object;
  #L1e627c.  return v0 @kind object;
}
procedure `kotlin.t.g` `minusKey`(`kotlinx.coroutines.u1` v0 @kind object, `kotlin.t.g$c` v1 @kind object) @signature `Lkotlinx/coroutines/u1$a;.minusKey:(Lkotlinx/coroutines/u1;Lkotlin/t/g$c;)Lkotlin/t/g;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1e623c.  call temp:= `minusKey`(v0, v1) @signature `Lkotlin/t/g$b$a;.minusKey:(Lkotlin/t/g$b;Lkotlin/t/g$c;)Lkotlin/t/g;` @kind static;
  #L1e6242.  v0:= temp @kind object;
  #L1e6244.  return v0 @kind object;
}
procedure `kotlin.t.g` `plus`(`kotlinx.coroutines.u1` v0 @kind object, `kotlin.t.g` v1 @kind object) @signature `Lkotlinx/coroutines/u1$a;.plus:(Lkotlinx/coroutines/u1;Lkotlin/t/g;)Lkotlin/t/g;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1e6258.  call temp:= `plus`(v0, v1) @signature `Lkotlin/t/g$b$a;.plus:(Lkotlin/t/g$b;Lkotlin/t/g;)Lkotlin/t/g;` @kind static;
  #L1e625e.  v0:= temp @kind object;
  #L1e6260.  return v0 @kind object;
}
