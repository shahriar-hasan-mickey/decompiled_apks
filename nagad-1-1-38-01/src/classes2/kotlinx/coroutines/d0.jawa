record `kotlinx.coroutines.d0` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `kotlinx.coroutines.c0` `CoroutineScope`(`kotlin.t.g` v3 @kind object) @signature `Lkotlinx/coroutines/d0;.CoroutineScope:(Lkotlin/t/g;)Lkotlinx/coroutines/c0;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1e16e4.  v0:= new `kotlinx.coroutines.internal.d`;
  #L1e16e8.  v1:= `@@kotlinx.coroutines.d1.e` @type ^`kotlinx.coroutines.d1$b` @kind object;
  #L1e16ec.  call temp:= `get`(v3, v1) @signature `Lkotlin/t/g;.get:(Lkotlin/t/g$c;)Lkotlin/t/g$b;` @kind interface;
  #L1e16f2.  v1:= temp @kind object;
  #L1e16f4.  if v1 == 0 then goto L1e16fa;
  #L1e16f8.  goto L1e170e;
  #L1e16fa.  v1:= 1I;
  #L1e16fc.  v2:= 0I;
  #L1e16fe.  call temp:= `Job$default`(v2, v1, v2) @signature `Lkotlinx/coroutines/g1;.Job$default:(Lkotlinx/coroutines/d1;ILjava/lang/Object;)Lkotlinx/coroutines/p;` @kind static;
  #L1e1704.  v1:= temp @kind object;
  #L1e1706.  call temp:= `plus`(v3, v1) @signature `Lkotlin/t/g;.plus:(Lkotlin/t/g;)Lkotlin/t/g;` @kind interface;
  #L1e170c.  v3:= temp @kind object;
  #L1e170e.  call `<init>`(v0, v3) @signature `Lkotlinx/coroutines/internal/d;.<init>:(Lkotlin/t/g;)V` @kind direct;
  #L1e1714.  return v0 @kind object;
}
procedure `void` `cancel`(`kotlinx.coroutines.c0` v2 @kind object, `java.util.concurrent.CancellationException` v3 @kind object) @signature `Lkotlinx/coroutines/d0;.cancel:(Lkotlinx/coroutines/c0;Ljava/util/concurrent/CancellationException;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1e174c.  call temp:= `getCoroutineContext`(v2) @signature `Lkotlinx/coroutines/c0;.getCoroutineContext:()Lkotlin/t/g;` @kind interface;
  #L1e1752.  v0:= temp @kind object;
  #L1e1754.  v1:= `@@kotlinx.coroutines.d1.e` @type ^`kotlinx.coroutines.d1$b` @kind object;
  #L1e1758.  call temp:= `get`(v0, v1) @signature `Lkotlin/t/g;.get:(Lkotlin/t/g$c;)Lkotlin/t/g$b;` @kind interface;
  #L1e175e.  v0:= temp @kind object;
  #L1e1760.  v0:= (`kotlinx.coroutines.d1`) v0 @kind object;
  #L1e1764.  if v0 == 0 then goto L1e1770;
  #L1e1768.  call `cancel`(v0, v3) @signature `Lkotlinx/coroutines/d1;.cancel:(Ljava/util/concurrent/CancellationException;)V` @kind interface;
  #L1e176e.  return @kind void;
  #L1e1770.  v3:= new `java.lang.StringBuilder`;
  #L1e1774.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e177a.  v0:= "Scope cannot be cancelled because it does not have a job: " @kind object;
  #L1e177e.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e1784.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e178a.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e1790.  v2:= temp @kind object;
  #L1e1792.  v3:= new `java.lang.IllegalStateException`;
  #L1e1796.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e179c.  v2:= temp @kind object;
  #L1e179e.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e17a4.  throw v3;
}
procedure `void` `cancel$default`(`kotlinx.coroutines.c0` v0 @kind object, `java.util.concurrent.CancellationException` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/d0;.cancel$default:(Lkotlinx/coroutines/c0;Ljava/util/concurrent/CancellationException;ILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1e1728.  v2:= v2 ^& 1;
  #L1e172c.  if v2 == 0 then goto L1e1732;
  #L1e1730.  v1:= 0I;
  #L1e1732.  call `cancel`(v0, v1) @signature `Lkotlinx/coroutines/d0;.cancel:(Lkotlinx/coroutines/c0;Ljava/util/concurrent/CancellationException;)V` @kind static;
  #L1e1738.  return @kind void;
}
