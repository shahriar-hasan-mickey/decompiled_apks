record `kotlinx.coroutines.x` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlin.t.a` @kind class, `kotlin.t.e` @kind interface {
}
global `kotlinx.coroutines.x$a` `@@kotlinx.coroutines.x.f` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/x;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1e10c4.  v0:= new `kotlinx.coroutines.x$a`;
  #L1e10c8.  v1:= 0I;
  #L1e10ca.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/x$a;.<init>:(Lkotlin/v/c/f;)V` @kind direct;
  #L1e10d0.  `@@kotlinx.coroutines.x.f` @type ^`kotlinx.coroutines.x$a` := v0 @kind object;
  #L1e10d4.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.x` v1 @kind this) @signature `Lkotlinx/coroutines/x;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1e10e8.  v0:= `@@kotlin.t.e.c` @type ^`kotlin.t.e$b` @kind object;
  #L1e10ec.  call `<init>`(v1, v0) @signature `Lkotlin/t/a;.<init>:(Lkotlin/t/g$c;)V` @kind direct;
  #L1e10f2.  return @kind void;
}
procedure `void` `dispatch`(`kotlin.t.g` v0 @kind object, `java.lang.Runnable` v1 @kind object) @signature `Lkotlinx/coroutines/x;.dispatch:(Lkotlin/t/g;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `kotlin.t.g$b` `get`(`kotlinx.coroutines.x` v0 @kind this, `kotlin.t.g$c` v1 @kind object) @signature `Lkotlinx/coroutines/x;.get:(Lkotlin/t/g$c;)Lkotlin/t/g$b;` @AccessFlag PUBLIC {
    temp;

  #L1e10a8.  call temp:= `get`(v0, v1) @signature `Lkotlin/t/e$a;.get:(Lkotlin/t/e;Lkotlin/t/g$c;)Lkotlin/t/g$b;` @kind static;
  #L1e10ae.  v1:= temp @kind object;
  #L1e10b0.  return v1 @kind object;
}
procedure `kotlin.t.d` `interceptContinuation`(`kotlinx.coroutines.x` v1 @kind this, `kotlin.t.d` v2 @kind object) @signature `Lkotlinx/coroutines/x;.interceptContinuation:(Lkotlin/t/d;)Lkotlin/t/d;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1e1070.  v0:= new `kotlinx.coroutines.internal.e`;
  #L1e1074.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/internal/e;.<init>:(Lkotlinx/coroutines/x;Lkotlin/t/d;)V` @kind direct;
  #L1e107a.  return v0 @kind object;
}
procedure `boolean` `isDispatchNeeded`(`kotlinx.coroutines.x` v0 @kind this, `kotlin.t.g` v1 @kind object) @signature `Lkotlinx/coroutines/x;.isDispatchNeeded:(Lkotlin/t/g;)Z` @AccessFlag PUBLIC {
    temp;

  #L1e1010.  v1:= 1I;
  #L1e1012.  return v1;
}
procedure `kotlin.t.g` `minusKey`(`kotlinx.coroutines.x` v0 @kind this, `kotlin.t.g$c` v1 @kind object) @signature `Lkotlinx/coroutines/x;.minusKey:(Lkotlin/t/g$c;)Lkotlin/t/g;` @AccessFlag PUBLIC {
    temp;

  #L1e108c.  call temp:= `minusKey`(v0, v1) @signature `Lkotlin/t/e$a;.minusKey:(Lkotlin/t/e;Lkotlin/t/g$c;)Lkotlin/t/g;` @kind static;
  #L1e1092.  v1:= temp @kind object;
  #L1e1094.  return v1 @kind object;
}
procedure `void` `releaseInterceptedContinuation`(`kotlinx.coroutines.x` v1 @kind this, `kotlin.t.d` v2 @kind object) @signature `Lkotlinx/coroutines/x;.releaseInterceptedContinuation:(Lkotlin/t/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e1104.  if v2 == 0 then goto L1e1120;
  #L1e1108.  v2:= (`kotlinx.coroutines.internal.e`) v2 @kind object;
  #L1e110c.  call temp:= `getReusableCancellableContinuation`(v2) @signature `Lkotlinx/coroutines/internal/e;.getReusableCancellableContinuation:()Lkotlinx/coroutines/i;` @kind virtual;
  #L1e1112.  v2:= temp @kind object;
  #L1e1114.  if v2 == 0 then goto L1e111e;
  #L1e1118.  call `detachChild$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/i;.detachChild$kotlinx_coroutines_core:()V` @kind virtual;
  #L1e111e.  return @kind void;
  #L1e1120.  v2:= new `java.lang.NullPointerException`;
  #L1e1124.  v0:= "null cannot be cast to non-null type kotlinx.coroutines.internal.DispatchedContinuation<*>" @kind object;
  #L1e1128.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e112e.  throw v2;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.x` v2 @kind this) @signature `Lkotlinx/coroutines/x;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e1024.  v0:= new `java.lang.StringBuilder`;
  #L1e1028.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e102e.  call temp:= `getClassSimpleName`(v2) @signature `Lkotlinx/coroutines/i0;.getClassSimpleName:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1e1034.  v1:= temp @kind object;
  #L1e1036.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e103c.  v1:= 64I;
  #L1e1040.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e1046.  call temp:= `getHexAddress`(v2) @signature `Lkotlinx/coroutines/i0;.getHexAddress:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1e104c.  v1:= temp @kind object;
  #L1e104e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e1054.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e105a.  v0:= temp @kind object;
  #L1e105c.  return v0 @kind object;
}
