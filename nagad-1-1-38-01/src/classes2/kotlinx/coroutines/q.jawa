record `kotlinx.coroutines.q` @kind class @AccessFlag FINAL {
  `java.lang.Object` `kotlinx.coroutines.q.a` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.f` `kotlinx.coroutines.q.b` @AccessFlag PUBLIC_FINAL;
  `kotlin.v.b.l` `kotlinx.coroutines.q.c` @AccessFlag PUBLIC_FINAL;
  `java.lang.Object` `kotlinx.coroutines.q.d` @AccessFlag PUBLIC_FINAL;
  `java.lang.Throwable` `kotlinx.coroutines.q.e` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.q` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlinx.coroutines.f` v2 @kind object, `kotlin.v.b.l` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Throwable` v5 @kind object) @signature `Lkotlinx/coroutines/q;.<init>:(Ljava/lang/Object;Lkotlinx/coroutines/f;Lkotlin/v/b/l;Ljava/lang/Object;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1e0964.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1e096a.  v0.`kotlinx.coroutines.q.a` @type ^`java.lang.Object` := v1 @kind object;
  #L1e096e.  v0.`kotlinx.coroutines.q.b` @type ^`kotlinx.coroutines.f` := v2 @kind object;
  #L1e0972.  v0.`kotlinx.coroutines.q.c` @type ^`kotlin.v.b.l` := v3 @kind object;
  #L1e0976.  v0.`kotlinx.coroutines.q.d` @type ^`java.lang.Object` := v4 @kind object;
  #L1e097a.  v0.`kotlinx.coroutines.q.e` @type ^`java.lang.Throwable` := v5 @kind object;
  #L1e097e.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.q` v7 @kind this, `java.lang.Object` v8 @kind object, `kotlinx.coroutines.f` v9 @kind object, `kotlin.v.b.l` v10 @kind object, `java.lang.Object` v11 @kind object, `java.lang.Throwable` v12 @kind object, `int` v13 , `kotlin.v.c.f` v14 @kind object) @signature `Lkotlinx/coroutines/q;.<init>:(Ljava/lang/Object;Lkotlinx/coroutines/f;Lkotlin/v/b/l;Ljava/lang/Object;Ljava/lang/Throwable;ILkotlin/v/c/f;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1e0990.  v14:= v13 ^& 2;
  #L1e0994.  v0:= 0I;
  #L1e0996.  if v14 == 0 then goto L1e099e;
  #L1e099a.  v3:= v0 @kind object;
  #L1e099c.  goto L1e09a0;
  #L1e099e.  v3:= v9 @kind object;
  #L1e09a0.  v9:= v13 ^& 4;
  #L1e09a4.  if v9 == 0 then goto L1e09ac;
  #L1e09a8.  v4:= v0 @kind object;
  #L1e09aa.  goto L1e09ae;
  #L1e09ac.  v4:= v10 @kind object;
  #L1e09ae.  v9:= v13 ^& 8;
  #L1e09b2.  if v9 == 0 then goto L1e09ba;
  #L1e09b6.  v5:= v0 @kind object;
  #L1e09b8.  goto L1e09bc;
  #L1e09ba.  v5:= v11 @kind object;
  #L1e09bc.  v9:= v13 ^& 16;
  #L1e09c0.  if v9 == 0 then goto L1e09c8;
  #L1e09c4.  v6:= v0 @kind object;
  #L1e09c6.  goto L1e09ca;
  #L1e09c8.  v6:= v12 @kind object;
  #L1e09ca.  v1:= v7 @kind object;
  #L1e09cc.  v2:= v8 @kind object;
  #L1e09ce.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lkotlinx/coroutines/q;.<init>:(Ljava/lang/Object;Lkotlinx/coroutines/f;Lkotlin/v/b/l;Ljava/lang/Object;Ljava/lang/Throwable;)V` @kind direct;
  #L1e09d4.  return @kind void;
}
procedure `kotlinx.coroutines.q` `copy$default`(`kotlinx.coroutines.q` v3 @kind object, `java.lang.Object` v4 @kind object, `kotlinx.coroutines.f` v5 @kind object, `kotlin.v.b.l` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Throwable` v8 @kind object, `int` v9 , `java.lang.Object` v10 @kind object) @signature `Lkotlinx/coroutines/q;.copy$default:(Lkotlinx/coroutines/q;Ljava/lang/Object;Lkotlinx/coroutines/f;Lkotlin/v/b/l;Ljava/lang/Object;Ljava/lang/Throwable;ILjava/lang/Object;)Lkotlinx/coroutines/q;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L1e08d0.  v10:= v9 ^& 1;
  #L1e08d4.  if v10 == 0 then goto L1e08dc;
  #L1e08d8.  v4:= v3.`kotlinx.coroutines.q.a` @type ^`java.lang.Object` @kind object;
  #L1e08dc.  v10:= v9 ^& 2;
  #L1e08e0.  if v10 == 0 then goto L1e08e8;
  #L1e08e4.  v5:= v3.`kotlinx.coroutines.q.b` @type ^`kotlinx.coroutines.f` @kind object;
  #L1e08e8.  v10:= v5 @kind object;
  #L1e08ea.  v5:= v9 ^& 4;
  #L1e08ee.  if v5 == 0 then goto L1e08f6;
  #L1e08f2.  v6:= v3.`kotlinx.coroutines.q.c` @type ^`kotlin.v.b.l` @kind object;
  #L1e08f6.  v0:= v6 @kind object;
  #L1e08f8.  v5:= v9 ^& 8;
  #L1e08fc.  if v5 == 0 then goto L1e0904;
  #L1e0900.  v7:= v3.`kotlinx.coroutines.q.d` @type ^`java.lang.Object` @kind object;
  #L1e0904.  v1:= v7 @kind object;
  #L1e0906.  v5:= v9 ^& 16;
  #L1e090a.  if v5 == 0 then goto L1e0912;
  #L1e090e.  v8:= v3.`kotlinx.coroutines.q.e` @type ^`java.lang.Throwable` @kind object;
  #L1e0912.  v2:= v8 @kind object;
  #L1e0914.  v5:= v3 @kind object;
  #L1e0916.  v6:= v4 @kind object;
  #L1e0918.  v7:= v10 @kind object;
  #L1e091a.  v8:= v0 @kind object;
  #L1e091c.  v9:= v1 @kind object;
  #L1e091e.  v10:= v2 @kind object;
  #L1e0920.  call temp:= `copy`(v5, v6, v7, v8, v9, v10) @signature `Lkotlinx/coroutines/q;.copy:(Ljava/lang/Object;Lkotlinx/coroutines/f;Lkotlin/v/b/l;Ljava/lang/Object;Ljava/lang/Throwable;)Lkotlinx/coroutines/q;` @kind virtual;
  #L1e0926.  v3:= temp @kind object;
  #L1e0928.  return v3 @kind object;
}
procedure `kotlinx.coroutines.q` `copy`(`kotlinx.coroutines.q` v7 @kind this, `java.lang.Object` v8 @kind object, `kotlinx.coroutines.f` v9 @kind object, `kotlin.v.b.l` v10 @kind object, `java.lang.Object` v11 @kind object, `java.lang.Throwable` v12 @kind object) @signature `Lkotlinx/coroutines/q;.copy:(Ljava/lang/Object;Lkotlinx/coroutines/f;Lkotlin/v/b/l;Ljava/lang/Object;Ljava/lang/Throwable;)Lkotlinx/coroutines/q;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1e093c.  v6:= new `kotlinx.coroutines.q`;
  #L1e0940.  v0:= v6 @kind object;
  #L1e0942.  v1:= v8 @kind object;
  #L1e0944.  v2:= v9 @kind object;
  #L1e0946.  v3:= v10 @kind object;
  #L1e0948.  v4:= v11 @kind object;
  #L1e094a.  v5:= v12 @kind object;
  #L1e094c.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/q;.<init>:(Ljava/lang/Object;Lkotlinx/coroutines/f;Lkotlin/v/b/l;Ljava/lang/Object;Ljava/lang/Throwable;)V` @kind direct;
  #L1e0952.  return v6 @kind object;
}
procedure `boolean` `equals`(`kotlinx.coroutines.q` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/q;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e0700.  if v2 == v3 then goto L1e077a;
  #L1e0704.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.q` @kind boolean;
  #L1e0708.  if v0 == 0 then goto L1e0776;
  #L1e070c.  v3:= (`kotlinx.coroutines.q`) v3 @kind object;
  #L1e0710.  v0:= v2.`kotlinx.coroutines.q.a` @type ^`java.lang.Object` @kind object;
  #L1e0714.  v1:= v3.`kotlinx.coroutines.q.a` @type ^`java.lang.Object` @kind object;
  #L1e0718.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/v/c/i;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1e071e.  v0:= temp;
  #L1e0720.  if v0 == 0 then goto L1e0776;
  #L1e0724.  v0:= v2.`kotlinx.coroutines.q.b` @type ^`kotlinx.coroutines.f` @kind object;
  #L1e0728.  v1:= v3.`kotlinx.coroutines.q.b` @type ^`kotlinx.coroutines.f` @kind object;
  #L1e072c.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/v/c/i;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1e0732.  v0:= temp;
  #L1e0734.  if v0 == 0 then goto L1e0776;
  #L1e0738.  v0:= v2.`kotlinx.coroutines.q.c` @type ^`kotlin.v.b.l` @kind object;
  #L1e073c.  v1:= v3.`kotlinx.coroutines.q.c` @type ^`kotlin.v.b.l` @kind object;
  #L1e0740.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/v/c/i;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1e0746.  v0:= temp;
  #L1e0748.  if v0 == 0 then goto L1e0776;
  #L1e074c.  v0:= v2.`kotlinx.coroutines.q.d` @type ^`java.lang.Object` @kind object;
  #L1e0750.  v1:= v3.`kotlinx.coroutines.q.d` @type ^`java.lang.Object` @kind object;
  #L1e0754.  call temp:= `areEqual`(v0, v1) @signature `Lkotlin/v/c/i;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1e075a.  v0:= temp;
  #L1e075c.  if v0 == 0 then goto L1e0776;
  #L1e0760.  v0:= v2.`kotlinx.coroutines.q.e` @type ^`java.lang.Throwable` @kind object;
  #L1e0764.  v3:= v3.`kotlinx.coroutines.q.e` @type ^`java.lang.Throwable` @kind object;
  #L1e0768.  call temp:= `areEqual`(v0, v3) @signature `Lkotlin/v/c/i;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1e076e.  v3:= temp;
  #L1e0770.  if v3 == 0 then goto L1e0776;
  #L1e0774.  goto L1e077a;
  #L1e0776.  v3:= 0I;
  #L1e0778.  return v3;
  #L1e077a.  v3:= 1I;
  #L1e077c.  return v3;
}
procedure `boolean` `getCancelled`(`kotlinx.coroutines.q` v1 @kind this) @signature `Lkotlinx/coroutines/q;.getCancelled:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1e0790.  v0:= v1.`kotlinx.coroutines.q.e` @type ^`java.lang.Throwable` @kind object;
  #L1e0794.  if v0 == 0 then goto L1e079c;
  #L1e0798.  v0:= 1I;
  #L1e079a.  goto L1e079e;
  #L1e079c.  v0:= 0I;
  #L1e079e.  return v0;
}
procedure `int` `hashCode`(`kotlinx.coroutines.q` v3 @kind this) @signature `Lkotlinx/coroutines/q;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1e07b0.  v0:= v3.`kotlinx.coroutines.q.a` @type ^`java.lang.Object` @kind object;
  #L1e07b4.  v1:= 0I;
  #L1e07b6.  if v0 == 0 then goto L1e07c4;
  #L1e07ba.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1e07c0.  v0:= temp;
  #L1e07c2.  goto L1e07c6;
  #L1e07c4.  v0:= 0I;
  #L1e07c6.  v0:= v0 * 31;
  #L1e07ca.  v2:= v3.`kotlinx.coroutines.q.b` @type ^`kotlinx.coroutines.f` @kind object;
  #L1e07ce.  if v2 == 0 then goto L1e07dc;
  #L1e07d2.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1e07d8.  v2:= temp;
  #L1e07da.  goto L1e07de;
  #L1e07dc.  v2:= 0I;
  #L1e07de.  v0:= v0 + v2 @kind int;
  #L1e07e0.  v0:= v0 * 31;
  #L1e07e4.  v2:= v3.`kotlinx.coroutines.q.c` @type ^`kotlin.v.b.l` @kind object;
  #L1e07e8.  if v2 == 0 then goto L1e07f6;
  #L1e07ec.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1e07f2.  v2:= temp;
  #L1e07f4.  goto L1e07f8;
  #L1e07f6.  v2:= 0I;
  #L1e07f8.  v0:= v0 + v2 @kind int;
  #L1e07fa.  v0:= v0 * 31;
  #L1e07fe.  v2:= v3.`kotlinx.coroutines.q.d` @type ^`java.lang.Object` @kind object;
  #L1e0802.  if v2 == 0 then goto L1e0810;
  #L1e0806.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1e080c.  v2:= temp;
  #L1e080e.  goto L1e0812;
  #L1e0810.  v2:= 0I;
  #L1e0812.  v0:= v0 + v2 @kind int;
  #L1e0814.  v0:= v0 * 31;
  #L1e0818.  v2:= v3.`kotlinx.coroutines.q.e` @type ^`java.lang.Throwable` @kind object;
  #L1e081c.  if v2 == 0 then goto L1e0828;
  #L1e0820.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1e0826.  v1:= temp;
  #L1e0828.  v0:= v0 + v1 @kind int;
  #L1e082a.  return v0;
}
procedure `void` `invokeHandlers`(`kotlinx.coroutines.q` v1 @kind this, `kotlinx.coroutines.i` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/q;.invokeHandlers:(Lkotlinx/coroutines/i;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1e09e8.  v0:= v1.`kotlinx.coroutines.q.b` @type ^`kotlinx.coroutines.f` @kind object;
  #L1e09ec.  if v0 == 0 then goto L1e09f6;
  #L1e09f0.  call `callCancelHandler`(v2, v0, v3) @signature `Lkotlinx/coroutines/i;.callCancelHandler:(Lkotlinx/coroutines/f;Ljava/lang/Throwable;)V` @kind virtual;
  #L1e09f6.  v0:= v1.`kotlinx.coroutines.q.c` @type ^`kotlin.v.b.l` @kind object;
  #L1e09fa.  if v0 == 0 then goto L1e0a04;
  #L1e09fe.  call `callOnCancellation`(v2, v0, v3) @signature `Lkotlinx/coroutines/i;.callOnCancellation:(Lkotlin/v/b/l;Ljava/lang/Throwable;)V` @kind virtual;
  #L1e0a04.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.q` v2 @kind this) @signature `Lkotlinx/coroutines/q;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e083c.  v0:= new `java.lang.StringBuilder`;
  #L1e0840.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e0846.  v1:= "CompletedContinuation(result=" @kind object;
  #L1e084a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e0850.  v1:= v2.`kotlinx.coroutines.q.a` @type ^`java.lang.Object` @kind object;
  #L1e0854.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e085a.  v1:= ", cancelHandler=" @kind object;
  #L1e085e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e0864.  v1:= v2.`kotlinx.coroutines.q.b` @type ^`kotlinx.coroutines.f` @kind object;
  #L1e0868.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e086e.  v1:= ", onCancellation=" @kind object;
  #L1e0872.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e0878.  v1:= v2.`kotlinx.coroutines.q.c` @type ^`kotlin.v.b.l` @kind object;
  #L1e087c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e0882.  v1:= ", idempotentResume=" @kind object;
  #L1e0886.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e088c.  v1:= v2.`kotlinx.coroutines.q.d` @type ^`java.lang.Object` @kind object;
  #L1e0890.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e0896.  v1:= ", cancelCause=" @kind object;
  #L1e089a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e08a0.  v1:= v2.`kotlinx.coroutines.q.e` @type ^`java.lang.Throwable` @kind object;
  #L1e08a4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e08aa.  v1:= ")" @kind object;
  #L1e08ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e08b4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e08ba.  v0:= temp @kind object;
  #L1e08bc.  return v0 @kind object;
}
