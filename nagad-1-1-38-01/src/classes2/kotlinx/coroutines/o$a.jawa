record `kotlinx.coroutines.o$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.ThreadFactory` @kind interface {
  `java.util.concurrent.atomic.AtomicInteger` `kotlinx.coroutines.o$a.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.o$a` v0 @kind this, `java.util.concurrent.atomic.AtomicInteger` v1 @kind object) @signature `Lkotlinx/coroutines/o$a;.<init>:(Ljava/util/concurrent/atomic/AtomicInteger;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1e02b0.  v0.`kotlinx.coroutines.o$a.f` @type ^`java.util.concurrent.atomic.AtomicInteger` := v1 @kind object;
  #L1e02b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1e02ba.  return @kind void;
}
procedure `java.lang.Thread` `newThread`(`kotlinx.coroutines.o$a` v3 @kind this, `java.lang.Runnable` v4 @kind object) @signature `Lkotlinx/coroutines/o$a;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1e025c.  v0:= new `java.lang.Thread`;
  #L1e0260.  v1:= new `java.lang.StringBuilder`;
  #L1e0264.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e026a.  v2:= "CommonPool-worker-" @kind object;
  #L1e026e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e0274.  v2:= v3.`kotlinx.coroutines.o$a.f` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L1e0278.  call temp:= `incrementAndGet`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.incrementAndGet:()I` @kind virtual;
  #L1e027e.  v2:= temp;
  #L1e0280.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e0286.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e028c.  v1:= temp @kind object;
  #L1e028e.  call `<init>`(v0, v4, v1) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/Runnable;Ljava/lang/String;)V` @kind direct;
  #L1e0294.  v4:= 1I;
  #L1e0296.  call `setDaemon`(v0, v4) @signature `Ljava/lang/Thread;.setDaemon:(Z)V` @kind virtual;
  #L1e029c.  return v0 @kind object;
}
