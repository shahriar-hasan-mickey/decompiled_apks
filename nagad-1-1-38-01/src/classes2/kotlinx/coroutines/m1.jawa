record `kotlinx.coroutines.m1` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlinx.coroutines.x` @kind class {
}
procedure `void` `<init>`(`kotlinx.coroutines.m1` v0 @kind this) @signature `Lkotlinx/coroutines/m1;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1e5fc0.  call `<init>`(v0) @signature `Lkotlinx/coroutines/x;.<init>:()V` @kind direct;
  #L1e5fc6.  return @kind void;
}
procedure `kotlinx.coroutines.m1` `getImmediate`() @signature `Lkotlinx/coroutines/m1;.getImmediate:()Lkotlinx/coroutines/m1;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.m1` v2 @kind this) @signature `Lkotlinx/coroutines/m1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e5f1c.  call temp:= `toStringInternalImpl`(v2) @signature `Lkotlinx/coroutines/m1;.toStringInternalImpl:()Ljava/lang/String;` @kind virtual;
  #L1e5f22.  v0:= temp @kind object;
  #L1e5f24.  if v0 == 0 then goto L1e5f2a;
  #L1e5f28.  goto L1e5f62;
  #L1e5f2a.  v0:= new `java.lang.StringBuilder`;
  #L1e5f2e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e5f34.  call temp:= `getClassSimpleName`(v2) @signature `Lkotlinx/coroutines/i0;.getClassSimpleName:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1e5f3a.  v1:= temp @kind object;
  #L1e5f3c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e5f42.  v1:= 64I;
  #L1e5f46.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e5f4c.  call temp:= `getHexAddress`(v2) @signature `Lkotlinx/coroutines/i0;.getHexAddress:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1e5f52.  v1:= temp @kind object;
  #L1e5f54.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e5f5a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e5f60.  v0:= temp @kind object;
  #L1e5f62.  return v0 @kind object;
}
procedure `java.lang.String` `toStringInternalImpl`(`kotlinx.coroutines.m1` v2 @kind this) @signature `Lkotlinx/coroutines/m1;.toStringInternalImpl:()Ljava/lang/String;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;

  #L1e5f74.  call temp:= `getMain`() @signature `Lkotlinx/coroutines/o0;.getMain:()Lkotlinx/coroutines/m1;` @kind static;
  #L1e5f7a.  v0:= temp @kind object;
  #L1e5f7c.  if v2 != v0 then goto L1e5f86;
  #L1e5f80.  v0:= "Dispatchers.Main" @kind object;
  #L1e5f84.  return v0 @kind object;
  #L1e5f86.  v1:= 0I;
  #L1e5f88.  call temp:= `getImmediate`(v0) @signature `Lkotlinx/coroutines/m1;.getImmediate:()Lkotlinx/coroutines/m1;` @kind virtual;
  #L1e5f8e.  v0:= temp @kind object;
  #L1e5f90.  goto L1e5f94;
  #L1e5f92.  v0:= v1 @kind object;
  #L1e5f94.  if v2 != v0 then goto L1e5f9e;
  #L1e5f98.  v0:= "Dispatchers.Main.immediate" @kind object;
  #L1e5f9c.  return v0 @kind object;
  #L1e5f9e.  return v1 @kind object;
  catch `java.lang.UnsupportedOperationException` @[L1e5f88..L1e5f90] goto L1e5f92;
}
