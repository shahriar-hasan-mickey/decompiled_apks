record `kotlinx.coroutines.j1` @kind class @AccessFlag PUBLIC extends `kotlinx.coroutines.d1` @kind interface, `kotlinx.coroutines.n` @kind interface, `kotlinx.coroutines.q1` @kind interface, `kotlinx.coroutines.e2.a` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.j1._parentHandle` @AccessFlag PRIVATE_VOLATILE;
  `java.lang.Object` `kotlinx.coroutines.j1._state` @AccessFlag PRIVATE_VOLATILE;
}
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.j1.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/j1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1e5888.  v0:= constclass @type ^`kotlinx.coroutines.j1` @kind object;
  #L1e588c.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L1e5890.  v2:= "_state" @kind object;
  #L1e5894.  call temp:= `newUpdater`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L1e589a.  v0:= temp @kind object;
  #L1e589c.  `@@kotlinx.coroutines.j1.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v0 @kind object;
  #L1e58a0.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.j1` v0 @kind this, `boolean` v1 ) @signature `Lkotlinx/coroutines/j1;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1e58b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1e58ba.  if v1 == 0 then goto L1e58c8;
  #L1e58be.  call temp:= `access$getEMPTY_ACTIVE$p`() @signature `Lkotlinx/coroutines/k1;.access$getEMPTY_ACTIVE$p:()Lkotlinx/coroutines/q0;` @kind static;
  #L1e58c4.  v1:= temp @kind object;
  #L1e58c6.  goto L1e58d0;
  #L1e58c8.  call temp:= `access$getEMPTY_NEW$p`() @signature `Lkotlinx/coroutines/k1;.access$getEMPTY_NEW$p:()Lkotlinx/coroutines/q0;` @kind static;
  #L1e58ce.  v1:= temp @kind object;
  #L1e58d0.  v0.`kotlinx.coroutines.j1._state` @type ^`java.lang.Object` := v1 @kind object;
  #L1e58d4.  v1:= 0I;
  #L1e58d6.  v0.`kotlinx.coroutines.j1._parentHandle` @type ^`java.lang.Object` := v1 @kind object;
  #L1e58da.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.j1` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/j1;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1e4904.  call temp:= `getState$kotlinx_coroutines_core`(v6) @signature `Lkotlinx/coroutines/j1;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L1e490a.  v0:= temp @kind object;
  #L1e490c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.y0` @kind boolean;
  #L1e4910.  if v1 == 0 then goto L1e495e;
  #L1e4914.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.j1$b` @kind boolean;
  #L1e4918.  if v1 == 0 then goto L1e4930;
  #L1e491c.  v1:= v0 @kind object;
  #L1e491e.  v1:= (`kotlinx.coroutines.j1$b`) v1 @kind object;
  #L1e4922.  call temp:= `isCompleting`(v1) @signature `Lkotlinx/coroutines/j1$b;.isCompleting:()Z` @kind virtual;
  #L1e4928.  v1:= temp;
  #L1e492a.  if v1 == 0 then goto L1e4930;
  #L1e492e.  goto L1e495e;
  #L1e4930.  v1:= new `kotlinx.coroutines.r`;
  #L1e4934.  call temp:= `b`(v6, v7) @signature `Lkotlinx/coroutines/j1;.b:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind direct;
  #L1e493a.  v2:= temp @kind object;
  #L1e493c.  v3:= 0I;
  #L1e493e.  v4:= 2I;
  #L1e4940.  v5:= 0I;
  #L1e4942.  call `<init>`(v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/r;.<init>:(Ljava/lang/Throwable;ZILkotlin/v/c/f;)V` @kind direct;
  #L1e4948.  call temp:= `a`(v6, v0, v1) @signature `Lkotlinx/coroutines/j1;.a:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L1e494e.  v0:= temp @kind object;
  #L1e4950.  call temp:= `access$getCOMPLETING_RETRY$p`() @signature `Lkotlinx/coroutines/k1;.access$getCOMPLETING_RETRY$p:()Lkotlinx/coroutines/internal/v;` @kind static;
  #L1e4956.  v1:= temp @kind object;
  #L1e4958.  if v0 == v1 then goto L1e4904;
  #L1e495c.  return v0 @kind object;
  #L1e495e.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/k1;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/v;` @kind static;
  #L1e4964.  v7:= temp @kind object;
  #L1e4966.  return v7 @kind object;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.j1` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/j1;.a:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L1e4d5c.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.y0` @kind boolean;
  #L1e4d60.  if v0 != 0 then goto L1e4d6e;
  #L1e4d64.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/k1;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/v;` @kind static;
  #L1e4d6a.  v2:= temp @kind object;
  #L1e4d6c.  return v2 @kind object;
  #L1e4d6e.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.q0` @kind boolean;
  #L1e4d72.  if v0 != 0 then goto L1e4d7e;
  #L1e4d76.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.i1` @kind boolean;
  #L1e4d7a.  if v0 == 0 then goto L1e4daa;
  #L1e4d7e.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.m` @kind boolean;
  #L1e4d82.  if v0 != 0 then goto L1e4daa;
  #L1e4d86.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.r` @kind boolean;
  #L1e4d8a.  if v0 != 0 then goto L1e4daa;
  #L1e4d8e.  v2:= (`kotlinx.coroutines.y0`) v2 @kind object;
  #L1e4d92.  call temp:= `b`(v1, v2, v3) @signature `Lkotlinx/coroutines/j1;.b:(Lkotlinx/coroutines/y0;Ljava/lang/Object;)Z` @kind direct;
  #L1e4d98.  v2:= temp;
  #L1e4d9a.  if v2 == 0 then goto L1e4da0;
  #L1e4d9e.  return v3 @kind object;
  #L1e4da0.  call temp:= `access$getCOMPLETING_RETRY$p`() @signature `Lkotlinx/coroutines/k1;.access$getCOMPLETING_RETRY$p:()Lkotlinx/coroutines/internal/v;` @kind static;
  #L1e4da6.  v2:= temp @kind object;
  #L1e4da8.  return v2 @kind object;
  #L1e4daa.  v2:= (`kotlinx.coroutines.y0`) v2 @kind object;
  #L1e4dae.  call temp:= `c`(v1, v2, v3) @signature `Lkotlinx/coroutines/j1;.c:(Lkotlinx/coroutines/y0;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L1e4db4.  v2:= temp @kind object;
  #L1e4db6.  return v2 @kind object;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.j1` v7 @kind this, `kotlinx.coroutines.j1$b` v8 @kind object, `java.lang.Object` v9 @kind object) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/j1$b;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1e4978.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/h0;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L1e497e.  v0:= temp;
  #L1e4980.  v1:= 1I;
  #L1e4982.  v2:= 0I;
  #L1e4984.  if v0 == 0 then goto L1e49ac;
  #L1e4988.  call temp:= `getState$kotlinx_coroutines_core`(v7) @signature `Lkotlinx/coroutines/j1;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L1e498e.  v0:= temp @kind object;
  #L1e4990.  if v0 != v8 then goto L1e4998;
  #L1e4994.  v0:= 1I;
  #L1e4996.  goto L1e499a;
  #L1e4998.  v0:= 0I;
  #L1e499a.  if v0 == 0 then goto L1e49a0;
  #L1e499e.  goto L1e49ac;
  #L1e49a0.  v8:= new `java.lang.AssertionError`;
  #L1e49a4.  call `<init>`(v8) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1e49aa.  throw v8;
  #L1e49ac.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/h0;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L1e49b2.  v0:= temp;
  #L1e49b4.  if v0 == 0 then goto L1e49d4;
  #L1e49b8.  call temp:= `isSealed`(v8) @signature `Lkotlinx/coroutines/j1$b;.isSealed:()Z` @kind virtual;
  #L1e49be.  v0:= temp;
  #L1e49c0.  v0:= v0 ^~ v1 @kind int;
  #L1e49c2.  if v0 == 0 then goto L1e49c8;
  #L1e49c6.  goto L1e49d4;
  #L1e49c8.  v8:= new `java.lang.AssertionError`;
  #L1e49cc.  call `<init>`(v8) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1e49d2.  throw v8;
  #L1e49d4.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/h0;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L1e49da.  v0:= temp;
  #L1e49dc.  if v0 == 0 then goto L1e49fa;
  #L1e49e0.  call temp:= `isCompleting`(v8) @signature `Lkotlinx/coroutines/j1$b;.isCompleting:()Z` @kind virtual;
  #L1e49e6.  v0:= temp;
  #L1e49e8.  if v0 == 0 then goto L1e49ee;
  #L1e49ec.  goto L1e49fa;
  #L1e49ee.  v8:= new `java.lang.AssertionError`;
  #L1e49f2.  call `<init>`(v8) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1e49f8.  throw v8;
  #L1e49fa.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.r` @kind boolean;
  #L1e49fe.  v3:= 0I;
  #L1e4a00.  if v0 != 0 then goto L1e4a08;
  #L1e4a04.  v0:= v3 @kind object;
  #L1e4a06.  goto L1e4a0a;
  #L1e4a08.  v0:= v9 @kind object;
  #L1e4a0a.  v0:= (`kotlinx.coroutines.r`) v0 @kind object;
  #L1e4a0e.  if v0 == 0 then goto L1e4a18;
  #L1e4a12.  v0:= v0.`kotlinx.coroutines.r.a` @type ^`java.lang.Throwable` @kind object;
  #L1e4a16.  goto L1e4a1a;
  #L1e4a18.  v0:= v3 @kind object;
  #L1e4a1a.  @monitorenter v8
  #L1e4a1c.  call temp:= `isCancelling`(v8) @signature `Lkotlinx/coroutines/j1$b;.isCancelling:()Z` @kind virtual;
  #L1e4a22.  v4:= temp;
  #L1e4a24.  call temp:= `sealLocked`(v8, v0) @signature `Lkotlinx/coroutines/j1$b;.sealLocked:(Ljava/lang/Throwable;)Ljava/util/List;` @kind virtual;
  #L1e4a2a.  v5:= temp @kind object;
  #L1e4a2c.  call temp:= `a`(v7, v8, v5) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/j1$b;Ljava/util/List;)Ljava/lang/Throwable;` @kind direct;
  #L1e4a32.  v6:= temp @kind object;
  #L1e4a34.  if v6 == 0 then goto L1e4a3e;
  #L1e4a38.  call `a`(v7, v6, v5) @signature `Lkotlinx/coroutines/j1;.a:(Ljava/lang/Throwable;Ljava/util/List;)V` @kind direct;
  #L1e4a3e.  @monitorexit v8
  #L1e4a40.  if v6 != 0 then goto L1e4a46;
  #L1e4a44.  goto L1e4a58;
  #L1e4a46.  if v6 != v0 then goto L1e4a4c;
  #L1e4a4a.  goto L1e4a58;
  #L1e4a4c.  v9:= new `kotlinx.coroutines.r`;
  #L1e4a50.  v0:= 2I;
  #L1e4a52.  call `<init>`(v9, v6, v2, v0, v3) @signature `Lkotlinx/coroutines/r;.<init>:(Ljava/lang/Throwable;ZILkotlin/v/c/f;)V` @kind direct;
  #L1e4a58.  if v6 == 0 then goto L1e4a9e;
  #L1e4a5c.  call temp:= `a`(v7, v6) @signature `Lkotlinx/coroutines/j1;.a:(Ljava/lang/Throwable;)Z` @kind direct;
  #L1e4a62.  v0:= temp;
  #L1e4a64.  if v0 != 0 then goto L1e4a78;
  #L1e4a68.  call temp:= `handleJobException`(v7, v6) @signature `Lkotlinx/coroutines/j1;.handleJobException:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L1e4a6e.  v0:= temp;
  #L1e4a70.  if v0 == 0 then goto L1e4a76;
  #L1e4a74.  goto L1e4a78;
  #L1e4a76.  v1:= 0I;
  #L1e4a78.  if v1 == 0 then goto L1e4a9e;
  #L1e4a7c.  if v9 == 0 then goto L1e4a8e;
  #L1e4a80.  v0:= v9 @kind object;
  #L1e4a82.  v0:= (`kotlinx.coroutines.r`) v0 @kind object;
  #L1e4a86.  call temp:= `makeHandled`(v0) @signature `Lkotlinx/coroutines/r;.makeHandled:()Z` @kind virtual;
  #L1e4a8c.  goto L1e4a9e;
  #L1e4a8e.  v8:= new `java.lang.NullPointerException`;
  #L1e4a92.  v9:= "null cannot be cast to non-null type kotlinx.coroutines.CompletedExceptionally" @kind object;
  #L1e4a96.  call `<init>`(v8, v9) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e4a9c.  throw v8;
  #L1e4a9e.  if v4 != 0 then goto L1e4aa8;
  #L1e4aa2.  call `onCancelling`(v7, v6) @signature `Lkotlinx/coroutines/j1;.onCancelling:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1e4aa8.  call `onCompletionInternal`(v7, v9) @signature `Lkotlinx/coroutines/j1;.onCompletionInternal:(Ljava/lang/Object;)V` @kind virtual;
  #L1e4aae.  v0:= `@@kotlinx.coroutines.j1.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1e4ab2.  call temp:= `boxIncomplete`(v9) @signature `Lkotlinx/coroutines/k1;.boxIncomplete:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1e4ab8.  v1:= temp @kind object;
  #L1e4aba.  call temp:= `compareAndSet`(v0, v7, v8, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1e4ac0.  v0:= temp;
  #L1e4ac2.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/h0;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L1e4ac8.  v1:= temp;
  #L1e4aca.  if v1 == 0 then goto L1e4ae0;
  #L1e4ace.  if v0 == 0 then goto L1e4ad4;
  #L1e4ad2.  goto L1e4ae0;
  #L1e4ad4.  v8:= new `java.lang.AssertionError`;
  #L1e4ad8.  call `<init>`(v8) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1e4ade.  throw v8;
  #L1e4ae0.  call `a`(v7, v8, v9) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/y0;Ljava/lang/Object;)V` @kind direct;
  #L1e4ae6.  return v9 @kind object;
  #L1e4ae8.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e4aea.  @monitorexit v8
  #L1e4aec.  throw v9;
  catch `java.lang.Throwable` @[L1e4a1c..L1e4a3e] goto L1e4ae8;
}
procedure `java.lang.Throwable` `a`(`kotlinx.coroutines.j1` v5 @kind this, `kotlinx.coroutines.j1$b` v6 @kind object, `java.util.List` v7 @kind object) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/j1$b;Ljava/util/List;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1e5110.  call temp:= `isEmpty`(v7) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1e5116.  v0:= temp;
  #L1e5118.  v1:= 0I;
  #L1e511a.  if v0 == 0 then goto L1e5140;
  #L1e511e.  call temp:= `isCancelling`(v6) @signature `Lkotlinx/coroutines/j1$b;.isCancelling:()Z` @kind virtual;
  #L1e5124.  v6:= temp;
  #L1e5126.  if v6 == 0 then goto L1e513e;
  #L1e512a.  v6:= new `kotlinx.coroutines.JobCancellationException`;
  #L1e512e.  call temp:= `access$cancellationExceptionMessage`(v5) @signature `Lkotlinx/coroutines/j1;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/j1;)Ljava/lang/String;` @kind static;
  #L1e5134.  v7:= temp @kind object;
  #L1e5136.  call `<init>`(v6, v7, v1, v5) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/d1;)V` @kind direct;
  #L1e513c.  return v6 @kind object;
  #L1e513e.  return v1 @kind object;
  #L1e5140.  call temp:= `iterator`(v7) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1e5146.  v6:= temp @kind object;
  #L1e5148.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1e514e.  v0:= temp;
  #L1e5150.  v2:= 1I;
  #L1e5152.  if v0 == 0 then goto L1e5170;
  #L1e5156.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1e515c.  v0:= temp @kind object;
  #L1e515e.  v3:= v0 @kind object;
  #L1e5160.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L1e5164.  v3:= instanceof @variable v3 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L1e5168.  v3:= v3 ^~ v2 @kind int;
  #L1e516a.  if v3 == 0 then goto L1e5148;
  #L1e516e.  goto L1e5172;
  #L1e5170.  v0:= v1 @kind object;
  #L1e5172.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L1e5176.  if v0 == 0 then goto L1e517c;
  #L1e517a.  return v0 @kind object;
  #L1e517c.  v6:= 0I;
  #L1e517e.  call temp:= `get`(v7, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1e5184.  v0:= temp @kind object;
  #L1e5186.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L1e518a.  v3:= instanceof @variable v0 @type ^`kotlinx.coroutines.TimeoutCancellationException` @kind boolean;
  #L1e518e.  if v3 == 0 then goto L1e51d6;
  #L1e5192.  call temp:= `iterator`(v7) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1e5198.  v7:= temp @kind object;
  #L1e519a.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1e51a0.  v3:= temp;
  #L1e51a2.  if v3 == 0 then goto L1e51cc;
  #L1e51a6.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1e51ac.  v3:= temp @kind object;
  #L1e51ae.  v4:= v3 @kind object;
  #L1e51b0.  v4:= (`java.lang.Throwable`) v4 @kind object;
  #L1e51b4.  if v4 == v0 then goto L1e51c4;
  #L1e51b8.  v4:= instanceof @variable v4 @type ^`kotlinx.coroutines.TimeoutCancellationException` @kind boolean;
  #L1e51bc.  if v4 == 0 then goto L1e51c4;
  #L1e51c0.  v4:= 1I;
  #L1e51c2.  goto L1e51c6;
  #L1e51c4.  v4:= 0I;
  #L1e51c6.  if v4 == 0 then goto L1e519a;
  #L1e51ca.  v1:= v3 @kind object;
  #L1e51cc.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L1e51d0.  if v1 == 0 then goto L1e51d6;
  #L1e51d4.  return v1 @kind object;
  #L1e51d6.  return v0 @kind object;
}
procedure `kotlinx.coroutines.i1` `a`(`kotlinx.coroutines.j1` v3 @kind this, `kotlin.v.b.l` v4 @kind object, `boolean` v5 ) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlin/v/b/l;Z)Lkotlinx/coroutines/i1;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1e5744.  v0:= 1I;
  #L1e5746.  v1:= 0I;
  #L1e5748.  v2:= 0I;
  #L1e574a.  if v5 == 0 then goto L1e579e;
  #L1e574e.  v5:= instanceof @variable v4 @type ^`kotlinx.coroutines.e1` @kind boolean;
  #L1e5752.  if v5 != 0 then goto L1e5758;
  #L1e5756.  goto L1e575a;
  #L1e5758.  v2:= v4 @kind object;
  #L1e575a.  v2:= (`kotlinx.coroutines.e1`) v2 @kind object;
  #L1e575e.  if v2 == 0 then goto L1e5792;
  #L1e5762.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/h0;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L1e5768.  v5:= temp;
  #L1e576a.  if v5 == 0 then goto L1e578c;
  #L1e576e.  v5:= v2.`kotlinx.coroutines.i1.i` @type ^`kotlinx.coroutines.d1` @kind object;
  #L1e5772.  if v5 != v3 then goto L1e5778;
  #L1e5776.  goto L1e577a;
  #L1e5778.  v0:= 0I;
  #L1e577a.  if v0 == 0 then goto L1e5780;
  #L1e577e.  goto L1e578c;
  #L1e5780.  v4:= new `java.lang.AssertionError`;
  #L1e5784.  call `<init>`(v4) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1e578a.  throw v4;
  #L1e578c.  if v2 == 0 then goto L1e5792;
  #L1e5790.  goto L1e57f4;
  #L1e5792.  v2:= new `kotlinx.coroutines.b1`;
  #L1e5796.  call `<init>`(v2, v3, v4) @signature `Lkotlinx/coroutines/b1;.<init>:(Lkotlinx/coroutines/d1;Lkotlin/v/b/l;)V` @kind direct;
  #L1e579c.  goto L1e57f4;
  #L1e579e.  v5:= instanceof @variable v4 @type ^`kotlinx.coroutines.i1` @kind boolean;
  #L1e57a2.  if v5 != 0 then goto L1e57a8;
  #L1e57a6.  goto L1e57aa;
  #L1e57a8.  v2:= v4 @kind object;
  #L1e57aa.  v2:= (`kotlinx.coroutines.i1`) v2 @kind object;
  #L1e57ae.  if v2 == 0 then goto L1e57ea;
  #L1e57b2.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/h0;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L1e57b8.  v5:= temp;
  #L1e57ba.  if v5 == 0 then goto L1e57e4;
  #L1e57be.  v5:= v2.`kotlinx.coroutines.i1.i` @type ^`kotlinx.coroutines.d1` @kind object;
  #L1e57c2.  if v5 != v3 then goto L1e57d0;
  #L1e57c6.  v5:= instanceof @variable v2 @type ^`kotlinx.coroutines.e1` @kind boolean;
  #L1e57ca.  if v5 != 0 then goto L1e57d0;
  #L1e57ce.  goto L1e57d2;
  #L1e57d0.  v0:= 0I;
  #L1e57d2.  if v0 == 0 then goto L1e57d8;
  #L1e57d6.  goto L1e57e4;
  #L1e57d8.  v4:= new `java.lang.AssertionError`;
  #L1e57dc.  call `<init>`(v4) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1e57e2.  throw v4;
  #L1e57e4.  if v2 == 0 then goto L1e57ea;
  #L1e57e8.  goto L1e57f4;
  #L1e57ea.  v2:= new `kotlinx.coroutines.c1`;
  #L1e57ee.  call `<init>`(v2, v3, v4) @signature `Lkotlinx/coroutines/c1;.<init>:(Lkotlinx/coroutines/d1;Lkotlin/v/b/l;)V` @kind direct;
  #L1e57f4.  return v2 @kind object;
}
procedure `kotlinx.coroutines.m` `a`(`kotlinx.coroutines.j1` v1 @kind this, `kotlinx.coroutines.internal.l` v2 @kind object) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/internal/l;)Lkotlinx/coroutines/m;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L1e5578.  call temp:= `isRemoved`(v2) @signature `Lkotlinx/coroutines/internal/l;.isRemoved:()Z` @kind virtual;
  #L1e557e.  v0:= temp;
  #L1e5580.  if v0 == 0 then goto L1e558e;
  #L1e5584.  call temp:= `getPrevNode`(v2) @signature `Lkotlinx/coroutines/internal/l;.getPrevNode:()Lkotlinx/coroutines/internal/l;` @kind virtual;
  #L1e558a.  v2:= temp @kind object;
  #L1e558c.  goto L1e5578;
  #L1e558e.  call temp:= `getNextNode`(v2) @signature `Lkotlinx/coroutines/internal/l;.getNextNode:()Lkotlinx/coroutines/internal/l;` @kind virtual;
  #L1e5594.  v2:= temp @kind object;
  #L1e5596.  call temp:= `isRemoved`(v2) @signature `Lkotlinx/coroutines/internal/l;.isRemoved:()Z` @kind virtual;
  #L1e559c.  v0:= temp;
  #L1e559e.  if v0 == 0 then goto L1e55a4;
  #L1e55a2.  goto L1e558e;
  #L1e55a4.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.m` @kind boolean;
  #L1e55a8.  if v0 == 0 then goto L1e55b2;
  #L1e55ac.  v2:= (`kotlinx.coroutines.m`) v2 @kind object;
  #L1e55b0.  return v2 @kind object;
  #L1e55b2.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.n1` @kind boolean;
  #L1e55b6.  if v0 == 0 then goto L1e558e;
  #L1e55ba.  v2:= 0I;
  #L1e55bc.  return v2 @kind object;
}
procedure `kotlinx.coroutines.m` `a`(`kotlinx.coroutines.j1` v2 @kind this, `kotlinx.coroutines.y0` v3 @kind object) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/y0;)Lkotlinx/coroutines/m;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1e5534.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.m` @kind boolean;
  #L1e5538.  v1:= 0I;
  #L1e553a.  if v0 != 0 then goto L1e5542;
  #L1e553e.  v0:= v1 @kind object;
  #L1e5540.  goto L1e5544;
  #L1e5542.  v0:= v3 @kind object;
  #L1e5544.  v0:= (`kotlinx.coroutines.m`) v0 @kind object;
  #L1e5548.  if v0 == 0 then goto L1e5550;
  #L1e554c.  v1:= v0 @kind object;
  #L1e554e.  goto L1e5564;
  #L1e5550.  call temp:= `getList`(v3) @signature `Lkotlinx/coroutines/y0;.getList:()Lkotlinx/coroutines/n1;` @kind interface;
  #L1e5556.  v3:= temp @kind object;
  #L1e5558.  if v3 == 0 then goto L1e5564;
  #L1e555c.  call temp:= `a`(v2, v3) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/internal/l;)Lkotlinx/coroutines/m;` @kind direct;
  #L1e5562.  v1:= temp @kind object;
  #L1e5564.  return v1 @kind object;
}
procedure `void` `a`(`kotlinx.coroutines.j1` v4 @kind this, `java.lang.Throwable` v5 @kind object, `java.util.List` v6 @kind object) @signature `Lkotlinx/coroutines/j1;.a:(Ljava/lang/Throwable;Ljava/util/List;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1e5904.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1e590a.  v0:= temp;
  #L1e590c.  v1:= 1I;
  #L1e590e.  if v0 > v1 then goto L1e5914;
  #L1e5912.  return @kind void;
  #L1e5914.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1e591a.  v0:= temp;
  #L1e591c.  v1:= new `java.util.IdentityHashMap`;
  #L1e5920.  call `<init>`(v1, v0) @signature `Ljava/util/IdentityHashMap;.<init>:(I)V` @kind direct;
  #L1e5926.  call temp:= `newSetFromMap`(v1) @signature `Ljava/util/Collections;.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;` @kind static;
  #L1e592c.  v0:= temp @kind object;
  #L1e592e.  call temp:= `getRECOVER_STACK_TRACES`() @signature `Lkotlinx/coroutines/h0;.getRECOVER_STACK_TRACES:()Z` @kind static;
  #L1e5934.  v1:= temp;
  #L1e5936.  if v1 != 0 then goto L1e593e;
  #L1e593a.  v1:= v5 @kind object;
  #L1e593c.  goto L1e5946;
  #L1e593e.  call temp:= `unwrapImpl`(v5) @signature `Lkotlinx/coroutines/internal/u;.unwrapImpl:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L1e5944.  v1:= temp @kind object;
  #L1e5946.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1e594c.  v6:= temp @kind object;
  #L1e594e.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1e5954.  v2:= temp;
  #L1e5956.  if v2 == 0 then goto L1e59a0;
  #L1e595a.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1e5960.  v2:= temp @kind object;
  #L1e5962.  v2:= (`java.lang.Throwable`) v2 @kind object;
  #L1e5966.  call temp:= `getRECOVER_STACK_TRACES`() @signature `Lkotlinx/coroutines/h0;.getRECOVER_STACK_TRACES:()Z` @kind static;
  #L1e596c.  v3:= temp;
  #L1e596e.  if v3 != 0 then goto L1e5974;
  #L1e5972.  goto L1e597c;
  #L1e5974.  call temp:= `unwrapImpl`(v2) @signature `Lkotlinx/coroutines/internal/u;.unwrapImpl:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L1e597a.  v2:= temp @kind object;
  #L1e597c.  if v2 == v5 then goto L1e594e;
  #L1e5980.  if v2 == v1 then goto L1e594e;
  #L1e5984.  v3:= instanceof @variable v2 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L1e5988.  if v3 != 0 then goto L1e594e;
  #L1e598c.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1e5992.  v3:= temp;
  #L1e5994.  if v3 == 0 then goto L1e594e;
  #L1e5998.  call `addSuppressed`(v5, v2) @signature `Lkotlin/a;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L1e599e.  goto L1e594e;
  #L1e59a0.  return @kind void;
}
procedure `void` `a`(`kotlinx.coroutines.j1` v2 @kind this, `kotlinx.coroutines.i1` v3 @kind object) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/i1;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1e5e10.  v0:= new `kotlinx.coroutines.n1`;
  #L1e5e14.  call `<init>`(v0) @signature `Lkotlinx/coroutines/n1;.<init>:()V` @kind direct;
  #L1e5e1a.  call temp:= `addOneIfEmpty`(v3, v0) @signature `Lkotlinx/coroutines/internal/l;.addOneIfEmpty:(Lkotlinx/coroutines/internal/l;)Z` @kind virtual;
  #L1e5e20.  call temp:= `getNextNode`(v3) @signature `Lkotlinx/coroutines/internal/l;.getNextNode:()Lkotlinx/coroutines/internal/l;` @kind virtual;
  #L1e5e26.  v0:= temp @kind object;
  #L1e5e28.  v1:= `@@kotlinx.coroutines.j1.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1e5e2c.  call temp:= `compareAndSet`(v1, v2, v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1e5e32.  return @kind void;
}
procedure `void` `a`(`kotlinx.coroutines.j1` v1 @kind this, `kotlinx.coroutines.j1$b` v2 @kind object, `kotlinx.coroutines.m` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/j1$b;Lkotlinx/coroutines/m;Ljava/lang/Object;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L1e5ad4.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/h0;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L1e5ada.  v0:= temp;
  #L1e5adc.  if v0 == 0 then goto L1e5b04;
  #L1e5ae0.  call temp:= `getState$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/j1;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L1e5ae6.  v0:= temp @kind object;
  #L1e5ae8.  if v0 != v2 then goto L1e5af0;
  #L1e5aec.  v0:= 1I;
  #L1e5aee.  goto L1e5af2;
  #L1e5af0.  v0:= 0I;
  #L1e5af2.  if v0 == 0 then goto L1e5af8;
  #L1e5af6.  goto L1e5b04;
  #L1e5af8.  v2:= new `java.lang.AssertionError`;
  #L1e5afc.  call `<init>`(v2) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1e5b02.  throw v2;
  #L1e5b04.  call temp:= `a`(v1, v3) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/internal/l;)Lkotlinx/coroutines/m;` @kind direct;
  #L1e5b0a.  v3:= temp @kind object;
  #L1e5b0c.  if v3 == 0 then goto L1e5b1e;
  #L1e5b10.  call temp:= `b`(v1, v2, v3, v4) @signature `Lkotlinx/coroutines/j1;.b:(Lkotlinx/coroutines/j1$b;Lkotlinx/coroutines/m;Ljava/lang/Object;)Z` @kind direct;
  #L1e5b16.  v3:= temp;
  #L1e5b18.  if v3 == 0 then goto L1e5b1e;
  #L1e5b1c.  return @kind void;
  #L1e5b1e.  call temp:= `a`(v1, v2, v4) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/j1$b;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L1e5b24.  v2:= temp @kind object;
  #L1e5b26.  call `afterCompletion`(v1, v2) @signature `Lkotlinx/coroutines/j1;.afterCompletion:(Ljava/lang/Object;)V` @kind virtual;
  #L1e5b2c.  return @kind void;
}
procedure `void` `a`(`kotlinx.coroutines.j1` v6 @kind this, `kotlinx.coroutines.n1` v7 @kind object, `java.lang.Throwable` v8 @kind object) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/n1;Ljava/lang/Throwable;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1e5bd8.  call `onCancelling`(v6, v8) @signature `Lkotlinx/coroutines/j1;.onCancelling:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1e5bde.  call temp:= `getNext`(v7) @signature `Lkotlinx/coroutines/internal/l;.getNext:()Ljava/lang/Object;` @kind virtual;
  #L1e5be4.  v0:= temp @kind object;
  #L1e5be6.  if v0 == 0 then goto L1e5c84;
  #L1e5bea.  v0:= (`kotlinx.coroutines.internal.l`) v0 @kind object;
  #L1e5bee.  v1:= 0I;
  #L1e5bf0.  call temp:= `areEqual`(v0, v7) @signature `Lkotlin/v/c/i;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1e5bf6.  v2:= temp;
  #L1e5bf8.  v2:= v2 ^~ 1;
  #L1e5bfc.  if v2 == 0 then goto L1e5c72;
  #L1e5c00.  v2:= instanceof @variable v0 @type ^`kotlinx.coroutines.e1` @kind boolean;
  #L1e5c04.  if v2 == 0 then goto L1e5c68;
  #L1e5c08.  v2:= v0 @kind object;
  #L1e5c0a.  v2:= (`kotlinx.coroutines.i1`) v2 @kind object;
  #L1e5c0e.  call `invoke`(v2, v8) @signature `Lkotlinx/coroutines/t;.invoke:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1e5c14.  goto L1e5c68;
  #L1e5c16.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e5c18.  if v1 == 0 then goto L1e5c28;
  #L1e5c1c.  call `addSuppressed`(v1, v3) @signature `Lkotlin/a;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L1e5c22.  if v1 == 0 then goto L1e5c28;
  #L1e5c26.  goto L1e5c68;
  #L1e5c28.  v1:= new `kotlinx.coroutines.CompletionHandlerException`;
  #L1e5c2c.  v4:= new `java.lang.StringBuilder`;
  #L1e5c30.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e5c36.  v5:= "Exception in completion handler " @kind object;
  #L1e5c3a.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e5c40.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e5c46.  v2:= " for " @kind object;
  #L1e5c4a.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e5c50.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e5c56.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e5c5c.  v2:= temp @kind object;
  #L1e5c5e.  call `<init>`(v1, v2, v3) @signature `Lkotlinx/coroutines/CompletionHandlerException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1e5c64.  v2:= `@@kotlin.q.a` @type ^`kotlin.q` @kind object;
  #L1e5c68.  call temp:= `getNextNode`(v0) @signature `Lkotlinx/coroutines/internal/l;.getNextNode:()Lkotlinx/coroutines/internal/l;` @kind virtual;
  #L1e5c6e.  v0:= temp @kind object;
  #L1e5c70.  goto L1e5bf0;
  #L1e5c72.  if v1 == 0 then goto L1e5c7c;
  #L1e5c76.  call `handleOnCompletionException$kotlinx_coroutines_core`(v6, v1) @signature `Lkotlinx/coroutines/j1;.handleOnCompletionException$kotlinx_coroutines_core:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1e5c7c.  call temp:= `a`(v6, v8) @signature `Lkotlinx/coroutines/j1;.a:(Ljava/lang/Throwable;)Z` @kind direct;
  #L1e5c82.  return @kind void;
  #L1e5c84.  v7:= new `java.lang.NullPointerException`;
  #L1e5c88.  v8:= "null cannot be cast to non-null type kotlinx.coroutines.internal.Node /* = kotlinx.coroutines.internal.LockFreeLinkedListNode */" @kind object;
  #L1e5c8c.  call `<init>`(v7, v8) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e5c92.  throw v7;
  catch `java.lang.Throwable` @[L1e5c0e..L1e5c14] goto L1e5c16;
}
procedure `void` `a`(`kotlinx.coroutines.j1` v2 @kind this, `kotlinx.coroutines.q0` v3 @kind object) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/q0;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1e5dd0.  v0:= new `kotlinx.coroutines.n1`;
  #L1e5dd4.  call `<init>`(v0) @signature `Lkotlinx/coroutines/n1;.<init>:()V` @kind direct;
  #L1e5dda.  call temp:= `isActive`(v3) @signature `Lkotlinx/coroutines/q0;.isActive:()Z` @kind virtual;
  #L1e5de0.  v1:= temp;
  #L1e5de2.  if v1 == 0 then goto L1e5de8;
  #L1e5de6.  goto L1e5df4;
  #L1e5de8.  v1:= new `kotlinx.coroutines.x0`;
  #L1e5dec.  call `<init>`(v1, v0) @signature `Lkotlinx/coroutines/x0;.<init>:(Lkotlinx/coroutines/n1;)V` @kind direct;
  #L1e5df2.  v0:= v1 @kind object;
  #L1e5df4.  v1:= `@@kotlinx.coroutines.j1.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1e5df8.  call temp:= `compareAndSet`(v1, v2, v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1e5dfe.  return @kind void;
}
procedure `void` `a`(`kotlinx.coroutines.j1` v3 @kind this, `kotlinx.coroutines.y0` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/y0;Ljava/lang/Object;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1e5a14.  call temp:= `getParentHandle$kotlinx_coroutines_core`(v3) @signature `Lkotlinx/coroutines/j1;.getParentHandle$kotlinx_coroutines_core:()Lkotlinx/coroutines/l;` @kind virtual;
  #L1e5a1a.  v0:= temp @kind object;
  #L1e5a1c.  if v0 == 0 then goto L1e5a30;
  #L1e5a20.  call `dispose`(v0) @signature `Lkotlinx/coroutines/p0;.dispose:()V` @kind interface;
  #L1e5a26.  v0:= `@@kotlinx.coroutines.o1.f` @type ^`kotlinx.coroutines.o1` @kind object;
  #L1e5a2a.  call `setParentHandle$kotlinx_coroutines_core`(v3, v0) @signature `Lkotlinx/coroutines/j1;.setParentHandle$kotlinx_coroutines_core:(Lkotlinx/coroutines/l;)V` @kind virtual;
  #L1e5a30.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.r` @kind boolean;
  #L1e5a34.  v1:= 0I;
  #L1e5a36.  if v0 != 0 then goto L1e5a3c;
  #L1e5a3a.  v5:= v1 @kind object;
  #L1e5a3c.  v5:= (`kotlinx.coroutines.r`) v5 @kind object;
  #L1e5a40.  if v5 == 0 then goto L1e5a48;
  #L1e5a44.  v1:= v5.`kotlinx.coroutines.r.a` @type ^`java.lang.Throwable` @kind object;
  #L1e5a48.  v5:= instanceof @variable v4 @type ^`kotlinx.coroutines.i1` @kind boolean;
  #L1e5a4c.  if v5 == 0 then goto L1e5aa4;
  #L1e5a50.  v5:= v4 @kind object;
  #L1e5a52.  v5:= (`kotlinx.coroutines.i1`) v5 @kind object;
  #L1e5a56.  call `invoke`(v5, v1) @signature `Lkotlinx/coroutines/t;.invoke:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1e5a5c.  goto L1e5ab6;
  #L1e5a5e.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e5a60.  v0:= new `kotlinx.coroutines.CompletionHandlerException`;
  #L1e5a64.  v1:= new `java.lang.StringBuilder`;
  #L1e5a68.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e5a6e.  v2:= "Exception in completion handler " @kind object;
  #L1e5a72.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e5a78.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e5a7e.  v4:= " for " @kind object;
  #L1e5a82.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e5a88.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e5a8e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e5a94.  v4:= temp @kind object;
  #L1e5a96.  call `<init>`(v0, v4, v5) @signature `Lkotlinx/coroutines/CompletionHandlerException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1e5a9c.  call `handleOnCompletionException$kotlinx_coroutines_core`(v3, v0) @signature `Lkotlinx/coroutines/j1;.handleOnCompletionException$kotlinx_coroutines_core:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1e5aa2.  goto L1e5ab6;
  #L1e5aa4.  call temp:= `getList`(v4) @signature `Lkotlinx/coroutines/y0;.getList:()Lkotlinx/coroutines/n1;` @kind interface;
  #L1e5aaa.  v4:= temp @kind object;
  #L1e5aac.  if v4 == 0 then goto L1e5ab6;
  #L1e5ab0.  call `b`(v3, v4, v1) @signature `Lkotlinx/coroutines/j1;.b:(Lkotlinx/coroutines/n1;Ljava/lang/Throwable;)V` @kind direct;
  #L1e5ab6.  return @kind void;
  catch `java.lang.Throwable` @[L1e5a50..L1e5a5c] goto L1e5a5e;
}
procedure `boolean` `a`(`kotlinx.coroutines.j1` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlinx.coroutines.n1` v4 @kind object, `kotlinx.coroutines.i1` v5 @kind object) @signature `Lkotlinx/coroutines/j1;.a:(Ljava/lang/Object;Lkotlinx/coroutines/n1;Lkotlinx/coroutines/i1;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1e44d8.  v0:= new `kotlinx.coroutines.j1$c`;
  #L1e44dc.  call `<init>`(v0, v5, v5, v2, v3) @signature `Lkotlinx/coroutines/j1$c;.<init>:(Lkotlinx/coroutines/internal/l;Lkotlinx/coroutines/internal/l;Lkotlinx/coroutines/j1;Ljava/lang/Object;)V` @kind direct;
  #L1e44e2.  call temp:= `getPrevNode`(v4) @signature `Lkotlinx/coroutines/internal/l;.getPrevNode:()Lkotlinx/coroutines/internal/l;` @kind virtual;
  #L1e44e8.  v3:= temp @kind object;
  #L1e44ea.  call temp:= `tryCondAddNext`(v3, v5, v4, v0) @signature `Lkotlinx/coroutines/internal/l;.tryCondAddNext:(Lkotlinx/coroutines/internal/l;Lkotlinx/coroutines/internal/l;Lkotlinx/coroutines/internal/l$a;)I` @kind virtual;
  #L1e44f0.  v3:= temp;
  #L1e44f2.  v1:= 1I;
  #L1e44f4.  if v3 == v1 then goto L1e4502;
  #L1e44f8.  v1:= 2I;
  #L1e44fa.  if v3 == v1 then goto L1e4500;
  #L1e44fe.  goto L1e44e2;
  #L1e4500.  v1:= 0I;
  #L1e4502.  return v1;
}
procedure `boolean` `a`(`kotlinx.coroutines.j1` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lkotlinx/coroutines/j1;.a:(Ljava/lang/Throwable;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1e4590.  call temp:= `isScopedCoroutine`(v4) @signature `Lkotlinx/coroutines/j1;.isScopedCoroutine:()Z` @kind virtual;
  #L1e4596.  v0:= temp;
  #L1e4598.  v1:= 1I;
  #L1e459a.  if v0 == 0 then goto L1e45a0;
  #L1e459e.  return v1;
  #L1e45a0.  v0:= instanceof @variable v5 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L1e45a4.  call temp:= `getParentHandle$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/j1;.getParentHandle$kotlinx_coroutines_core:()Lkotlinx/coroutines/l;` @kind virtual;
  #L1e45aa.  v2:= temp @kind object;
  #L1e45ac.  if v2 == 0 then goto L1e45d0;
  #L1e45b0.  v3:= `@@kotlinx.coroutines.o1.f` @type ^`kotlinx.coroutines.o1` @kind object;
  #L1e45b4.  if v2 != v3 then goto L1e45ba;
  #L1e45b8.  goto L1e45d0;
  #L1e45ba.  call temp:= `childCancelled`(v2, v5) @signature `Lkotlinx/coroutines/l;.childCancelled:(Ljava/lang/Throwable;)Z` @kind interface;
  #L1e45c0.  v5:= temp;
  #L1e45c2.  if v5 != 0 then goto L1e45ce;
  #L1e45c6.  if v0 == 0 then goto L1e45cc;
  #L1e45ca.  goto L1e45ce;
  #L1e45cc.  v1:= 0I;
  #L1e45ce.  return v1;
  #L1e45d0.  return v0;
}
procedure `boolean` `a`(`kotlinx.coroutines.j1` v5 @kind this, `kotlinx.coroutines.y0` v6 @kind object, `java.lang.Throwable` v7 @kind object) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/y0;Ljava/lang/Throwable;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1e47a0.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/h0;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L1e47a6.  v0:= temp;
  #L1e47a8.  v1:= 1I;
  #L1e47aa.  if v0 == 0 then goto L1e47c6;
  #L1e47ae.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.j1$b` @kind boolean;
  #L1e47b2.  v0:= v0 ^~ v1 @kind int;
  #L1e47b4.  if v0 == 0 then goto L1e47ba;
  #L1e47b8.  goto L1e47c6;
  #L1e47ba.  v6:= new `java.lang.AssertionError`;
  #L1e47be.  call `<init>`(v6) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1e47c4.  throw v6;
  #L1e47c6.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/h0;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L1e47cc.  v0:= temp;
  #L1e47ce.  if v0 == 0 then goto L1e47ec;
  #L1e47d2.  call temp:= `isActive`(v6) @signature `Lkotlinx/coroutines/y0;.isActive:()Z` @kind interface;
  #L1e47d8.  v0:= temp;
  #L1e47da.  if v0 == 0 then goto L1e47e0;
  #L1e47de.  goto L1e47ec;
  #L1e47e0.  v6:= new `java.lang.AssertionError`;
  #L1e47e4.  call `<init>`(v6) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1e47ea.  throw v6;
  #L1e47ec.  call temp:= `b`(v5, v6) @signature `Lkotlinx/coroutines/j1;.b:(Lkotlinx/coroutines/y0;)Lkotlinx/coroutines/n1;` @kind direct;
  #L1e47f2.  v0:= temp @kind object;
  #L1e47f4.  v2:= 0I;
  #L1e47f6.  if v0 == 0 then goto L1e481e;
  #L1e47fa.  v3:= new `kotlinx.coroutines.j1$b`;
  #L1e47fe.  call `<init>`(v3, v0, v2, v7) @signature `Lkotlinx/coroutines/j1$b;.<init>:(Lkotlinx/coroutines/n1;ZLjava/lang/Throwable;)V` @kind direct;
  #L1e4804.  v4:= `@@kotlinx.coroutines.j1.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1e4808.  call temp:= `compareAndSet`(v4, v5, v6, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1e480e.  v6:= temp;
  #L1e4810.  if v6 != 0 then goto L1e4816;
  #L1e4814.  return v2;
  #L1e4816.  call `a`(v5, v0, v7) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/n1;Ljava/lang/Throwable;)V` @kind direct;
  #L1e481c.  return v1;
  #L1e481e.  return v2;
}
procedure `java.lang.String` `access$cancellationExceptionMessage`(`kotlinx.coroutines.j1` v0 @kind object) @signature `Lkotlinx/coroutines/j1;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/j1;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1e4f10.  call temp:= `cancellationExceptionMessage`(v0) @signature `Lkotlinx/coroutines/j1;.cancellationExceptionMessage:()Ljava/lang/String;` @kind virtual;
  #L1e4f16.  v0:= temp @kind object;
  #L1e4f18.  return v0 @kind object;
}
procedure `void` `access$continueCompleting`(`kotlinx.coroutines.j1` v0 @kind object, `kotlinx.coroutines.j1$b` v1 @kind object, `kotlinx.coroutines.m` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/j1;.access$continueCompleting:(Lkotlinx/coroutines/j1;Lkotlinx/coroutines/j1$b;Lkotlinx/coroutines/m;Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1e58ec.  call `a`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/j1$b;Lkotlinx/coroutines/m;Ljava/lang/Object;)V` @kind direct;
  #L1e58f2.  return @kind void;
}
procedure `java.lang.Throwable` `b`(`kotlinx.coroutines.j1` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/j1;.b:(Ljava/lang/Object;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1e5080.  if v3 == 0 then goto L1e508a;
  #L1e5084.  v0:= instanceof @variable v3 @type ^`java.lang.Throwable` @kind boolean;
  #L1e5088.  goto L1e508c;
  #L1e508a.  v0:= 1I;
  #L1e508c.  if v0 == 0 then goto L1e50b2;
  #L1e5090.  if v3 == 0 then goto L1e509a;
  #L1e5094.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L1e5098.  goto L1e50c2;
  #L1e509a.  v3:= 0I;
  #L1e509c.  v0:= new `kotlinx.coroutines.JobCancellationException`;
  #L1e50a0.  call temp:= `access$cancellationExceptionMessage`(v2) @signature `Lkotlinx/coroutines/j1;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/j1;)Ljava/lang/String;` @kind static;
  #L1e50a6.  v1:= temp @kind object;
  #L1e50a8.  call `<init>`(v0, v1, v3, v2) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/d1;)V` @kind direct;
  #L1e50ae.  v3:= v0 @kind object;
  #L1e50b0.  goto L1e50c2;
  #L1e50b2.  if v3 == 0 then goto L1e50c4;
  #L1e50b6.  v3:= (`kotlinx.coroutines.q1`) v3 @kind object;
  #L1e50ba.  call temp:= `getChildJobCancellationCause`(v3) @signature `Lkotlinx/coroutines/q1;.getChildJobCancellationCause:()Ljava/util/concurrent/CancellationException;` @kind interface;
  #L1e50c0.  v3:= temp @kind object;
  #L1e50c2.  return v3 @kind object;
  #L1e50c4.  v3:= new `java.lang.NullPointerException`;
  #L1e50c8.  v0:= "null cannot be cast to non-null type kotlinx.coroutines.ParentJob" @kind object;
  #L1e50cc.  call `<init>`(v3, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e50d2.  throw v3;
}
procedure `kotlinx.coroutines.n1` `b`(`kotlinx.coroutines.j1` v2 @kind this, `kotlinx.coroutines.y0` v3 @kind object) @signature `Lkotlinx/coroutines/j1;.b:(Lkotlinx/coroutines/y0;)Lkotlinx/coroutines/n1;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1e5808.  call temp:= `getList`(v3) @signature `Lkotlinx/coroutines/y0;.getList:()Lkotlinx/coroutines/n1;` @kind interface;
  #L1e580e.  v0:= temp @kind object;
  #L1e5810.  if v0 == 0 then goto L1e5816;
  #L1e5814.  goto L1e583e;
  #L1e5816.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.q0` @kind boolean;
  #L1e581a.  if v0 == 0 then goto L1e582a;
  #L1e581e.  v0:= new `kotlinx.coroutines.n1`;
  #L1e5822.  call `<init>`(v0) @signature `Lkotlinx/coroutines/n1;.<init>:()V` @kind direct;
  #L1e5828.  goto L1e583e;
  #L1e582a.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.i1` @kind boolean;
  #L1e582e.  if v0 == 0 then goto L1e5840;
  #L1e5832.  v3:= (`kotlinx.coroutines.i1`) v3 @kind object;
  #L1e5836.  call `a`(v2, v3) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/i1;)V` @kind direct;
  #L1e583c.  v0:= 0I;
  #L1e583e.  return v0 @kind object;
  #L1e5840.  v0:= new `java.lang.StringBuilder`;
  #L1e5844.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e584a.  v1:= "State should have list: " @kind object;
  #L1e584e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e5854.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e585a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e5860.  v3:= temp @kind object;
  #L1e5862.  v0:= new `java.lang.IllegalStateException`;
  #L1e5866.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e586c.  v3:= temp @kind object;
  #L1e586e.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e5874.  throw v0;
}
procedure `void` `b`(`kotlinx.coroutines.j1` v6 @kind this, `kotlinx.coroutines.n1` v7 @kind object, `java.lang.Throwable` v8 @kind object) @signature `Lkotlinx/coroutines/j1;.b:(Lkotlinx/coroutines/n1;Ljava/lang/Throwable;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1e5cb0.  call temp:= `getNext`(v7) @signature `Lkotlinx/coroutines/internal/l;.getNext:()Ljava/lang/Object;` @kind virtual;
  #L1e5cb6.  v0:= temp @kind object;
  #L1e5cb8.  if v0 == 0 then goto L1e5d50;
  #L1e5cbc.  v0:= (`kotlinx.coroutines.internal.l`) v0 @kind object;
  #L1e5cc0.  v1:= 0I;
  #L1e5cc2.  call temp:= `areEqual`(v0, v7) @signature `Lkotlin/v/c/i;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1e5cc8.  v2:= temp;
  #L1e5cca.  v2:= v2 ^~ 1;
  #L1e5cce.  if v2 == 0 then goto L1e5d44;
  #L1e5cd2.  v2:= instanceof @variable v0 @type ^`kotlinx.coroutines.i1` @kind boolean;
  #L1e5cd6.  if v2 == 0 then goto L1e5d3a;
  #L1e5cda.  v2:= v0 @kind object;
  #L1e5cdc.  v2:= (`kotlinx.coroutines.i1`) v2 @kind object;
  #L1e5ce0.  call `invoke`(v2, v8) @signature `Lkotlinx/coroutines/t;.invoke:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1e5ce6.  goto L1e5d3a;
  #L1e5ce8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e5cea.  if v1 == 0 then goto L1e5cfa;
  #L1e5cee.  call `addSuppressed`(v1, v3) @signature `Lkotlin/a;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L1e5cf4.  if v1 == 0 then goto L1e5cfa;
  #L1e5cf8.  goto L1e5d3a;
  #L1e5cfa.  v1:= new `kotlinx.coroutines.CompletionHandlerException`;
  #L1e5cfe.  v4:= new `java.lang.StringBuilder`;
  #L1e5d02.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e5d08.  v5:= "Exception in completion handler " @kind object;
  #L1e5d0c.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e5d12.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e5d18.  v2:= " for " @kind object;
  #L1e5d1c.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e5d22.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e5d28.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e5d2e.  v2:= temp @kind object;
  #L1e5d30.  call `<init>`(v1, v2, v3) @signature `Lkotlinx/coroutines/CompletionHandlerException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1e5d36.  v2:= `@@kotlin.q.a` @type ^`kotlin.q` @kind object;
  #L1e5d3a.  call temp:= `getNextNode`(v0) @signature `Lkotlinx/coroutines/internal/l;.getNextNode:()Lkotlinx/coroutines/internal/l;` @kind virtual;
  #L1e5d40.  v0:= temp @kind object;
  #L1e5d42.  goto L1e5cc2;
  #L1e5d44.  if v1 == 0 then goto L1e5d4e;
  #L1e5d48.  call `handleOnCompletionException$kotlinx_coroutines_core`(v6, v1) @signature `Lkotlinx/coroutines/j1;.handleOnCompletionException$kotlinx_coroutines_core:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1e5d4e.  return @kind void;
  #L1e5d50.  v7:= new `java.lang.NullPointerException`;
  #L1e5d54.  v8:= "null cannot be cast to non-null type kotlinx.coroutines.internal.Node /* = kotlinx.coroutines.internal.LockFreeLinkedListNode */" @kind object;
  #L1e5d58.  call `<init>`(v7, v8) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e5d5e.  throw v7;
  catch `java.lang.Throwable` @[L1e5ce0..L1e5ce6] goto L1e5ce8;
}
procedure `boolean` `b`(`kotlinx.coroutines.j1` v6 @kind this, `kotlinx.coroutines.j1$b` v7 @kind object, `kotlinx.coroutines.m` v8 @kind object, `java.lang.Object` v9 @kind object) @signature `Lkotlinx/coroutines/j1;.b:(Lkotlinx/coroutines/j1$b;Lkotlinx/coroutines/m;Ljava/lang/Object;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1e4830.  v0:= v8.`kotlinx.coroutines.m.j` @type ^`kotlinx.coroutines.n` @kind object;
  #L1e4834.  v1:= 0I;
  #L1e4836.  v2:= 0I;
  #L1e4838.  v3:= new `kotlinx.coroutines.j1$a`;
  #L1e483c.  call `<init>`(v3, v6, v7, v8, v9) @signature `Lkotlinx/coroutines/j1$a;.<init>:(Lkotlinx/coroutines/j1;Lkotlinx/coroutines/j1$b;Lkotlinx/coroutines/m;Ljava/lang/Object;)V` @kind direct;
  #L1e4842.  v4:= 1I;
  #L1e4844.  v5:= 0I;
  #L1e4846.  call temp:= `invokeOnCompletion$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/d1$a;.invokeOnCompletion$default:(Lkotlinx/coroutines/d1;ZZLkotlin/v/b/l;ILjava/lang/Object;)Lkotlinx/coroutines/p0;` @kind static;
  #L1e484c.  v0:= temp @kind object;
  #L1e484e.  v1:= `@@kotlinx.coroutines.o1.f` @type ^`kotlinx.coroutines.o1` @kind object;
  #L1e4852.  if v0 == v1 then goto L1e485a;
  #L1e4856.  v7:= 1I;
  #L1e4858.  return v7;
  #L1e485a.  call temp:= `a`(v6, v8) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/internal/l;)Lkotlinx/coroutines/m;` @kind direct;
  #L1e4860.  v8:= temp @kind object;
  #L1e4862.  if v8 == 0 then goto L1e4868;
  #L1e4866.  goto L1e4830;
  #L1e4868.  v7:= 0I;
  #L1e486a.  return v7;
}
procedure `boolean` `b`(`kotlinx.coroutines.j1` v4 @kind this, `kotlinx.coroutines.y0` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/j1;.b:(Lkotlinx/coroutines/y0;Ljava/lang/Object;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1e4700.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/h0;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L1e4706.  v0:= temp;
  #L1e4708.  v1:= 0I;
  #L1e470a.  v2:= 1I;
  #L1e470c.  if v0 == 0 then goto L1e473a;
  #L1e4710.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.q0` @kind boolean;
  #L1e4714.  if v0 != 0 then goto L1e4726;
  #L1e4718.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.i1` @kind boolean;
  #L1e471c.  if v0 == 0 then goto L1e4722;
  #L1e4720.  goto L1e4726;
  #L1e4722.  v0:= 0I;
  #L1e4724.  goto L1e4728;
  #L1e4726.  v0:= 1I;
  #L1e4728.  if v0 == 0 then goto L1e472e;
  #L1e472c.  goto L1e473a;
  #L1e472e.  v5:= new `java.lang.AssertionError`;
  #L1e4732.  call `<init>`(v5) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1e4738.  throw v5;
  #L1e473a.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/h0;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L1e4740.  v0:= temp;
  #L1e4742.  if v0 == 0 then goto L1e475e;
  #L1e4746.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.r` @kind boolean;
  #L1e474a.  v0:= v0 ^~ v2 @kind int;
  #L1e474c.  if v0 == 0 then goto L1e4752;
  #L1e4750.  goto L1e475e;
  #L1e4752.  v5:= new `java.lang.AssertionError`;
  #L1e4756.  call `<init>`(v5) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1e475c.  throw v5;
  #L1e475e.  v0:= `@@kotlinx.coroutines.j1.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1e4762.  call temp:= `boxIncomplete`(v6) @signature `Lkotlinx/coroutines/k1;.boxIncomplete:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1e4768.  v3:= temp @kind object;
  #L1e476a.  call temp:= `compareAndSet`(v0, v4, v5, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1e4770.  v0:= temp;
  #L1e4772.  if v0 != 0 then goto L1e4778;
  #L1e4776.  return v1;
  #L1e4778.  v0:= 0I;
  #L1e477a.  call `onCancelling`(v4, v0) @signature `Lkotlinx/coroutines/j1;.onCancelling:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1e4780.  call `onCompletionInternal`(v4, v6) @signature `Lkotlinx/coroutines/j1;.onCompletionInternal:(Ljava/lang/Object;)V` @kind virtual;
  #L1e4786.  call `a`(v4, v5, v6) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/y0;Ljava/lang/Object;)V` @kind direct;
  #L1e478c.  return v2;
}
procedure `java.lang.Object` `c`(`kotlinx.coroutines.j1` v6 @kind this, `kotlinx.coroutines.y0` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lkotlinx/coroutines/j1;.c:(Lkotlinx/coroutines/y0;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1e4dc8.  call temp:= `b`(v6, v7) @signature `Lkotlinx/coroutines/j1;.b:(Lkotlinx/coroutines/y0;)Lkotlinx/coroutines/n1;` @kind direct;
  #L1e4dce.  v0:= temp @kind object;
  #L1e4dd0.  if v0 == 0 then goto L1e4eda;
  #L1e4dd4.  v1:= instanceof @variable v7 @type ^`kotlinx.coroutines.j1$b` @kind boolean;
  #L1e4dd8.  v2:= 0I;
  #L1e4dda.  if v1 != 0 then goto L1e4de2;
  #L1e4dde.  v1:= v2 @kind object;
  #L1e4de0.  goto L1e4de4;
  #L1e4de2.  v1:= v7 @kind object;
  #L1e4de4.  v1:= (`kotlinx.coroutines.j1$b`) v1 @kind object;
  #L1e4de8.  if v1 == 0 then goto L1e4dee;
  #L1e4dec.  goto L1e4dfa;
  #L1e4dee.  v1:= new `kotlinx.coroutines.j1$b`;
  #L1e4df2.  v3:= 0I;
  #L1e4df4.  call `<init>`(v1, v0, v3, v2) @signature `Lkotlinx/coroutines/j1$b;.<init>:(Lkotlinx/coroutines/n1;ZLjava/lang/Throwable;)V` @kind direct;
  #L1e4dfa.  @monitorenter v1
  #L1e4dfc.  call temp:= `isCompleting`(v1) @signature `Lkotlinx/coroutines/j1$b;.isCompleting:()Z` @kind virtual;
  #L1e4e02.  v3:= temp;
  #L1e4e04.  if v3 == 0 then goto L1e4e14;
  #L1e4e08.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/k1;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/v;` @kind static;
  #L1e4e0e.  v7:= temp @kind object;
  #L1e4e10.  @monitorexit v1
  #L1e4e12.  return v7 @kind object;
  #L1e4e14.  v3:= 1I;
  #L1e4e16.  call `setCompleting`(v1, v3) @signature `Lkotlinx/coroutines/j1$b;.setCompleting:(Z)V` @kind virtual;
  #L1e4e1c.  if v1 == v7 then goto L1e4e3c;
  #L1e4e20.  v4:= `@@kotlinx.coroutines.j1.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1e4e24.  call temp:= `compareAndSet`(v4, v6, v7, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1e4e2a.  v4:= temp;
  #L1e4e2c.  if v4 != 0 then goto L1e4e3c;
  #L1e4e30.  call temp:= `access$getCOMPLETING_RETRY$p`() @signature `Lkotlinx/coroutines/k1;.access$getCOMPLETING_RETRY$p:()Lkotlinx/coroutines/internal/v;` @kind static;
  #L1e4e36.  v7:= temp @kind object;
  #L1e4e38.  @monitorexit v1
  #L1e4e3a.  return v7 @kind object;
  #L1e4e3c.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/h0;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L1e4e42.  v4:= temp;
  #L1e4e44.  if v4 == 0 then goto L1e4e64;
  #L1e4e48.  call temp:= `isSealed`(v1) @signature `Lkotlinx/coroutines/j1$b;.isSealed:()Z` @kind virtual;
  #L1e4e4e.  v4:= temp;
  #L1e4e50.  v4:= v4 ^~ v3 @kind int;
  #L1e4e52.  if v4 == 0 then goto L1e4e58;
  #L1e4e56.  goto L1e4e64;
  #L1e4e58.  v7:= new `java.lang.AssertionError`;
  #L1e4e5c.  call `<init>`(v7) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1e4e62.  throw v7;
  #L1e4e64.  call temp:= `isCancelling`(v1) @signature `Lkotlinx/coroutines/j1$b;.isCancelling:()Z` @kind virtual;
  #L1e4e6a.  v4:= temp;
  #L1e4e6c.  v5:= instanceof @variable v8 @type ^`kotlinx.coroutines.r` @kind boolean;
  #L1e4e70.  if v5 != 0 then goto L1e4e78;
  #L1e4e74.  v5:= v2 @kind object;
  #L1e4e76.  goto L1e4e7a;
  #L1e4e78.  v5:= v8 @kind object;
  #L1e4e7a.  v5:= (`kotlinx.coroutines.r`) v5 @kind object;
  #L1e4e7e.  if v5 == 0 then goto L1e4e8c;
  #L1e4e82.  v5:= v5.`kotlinx.coroutines.r.a` @type ^`java.lang.Throwable` @kind object;
  #L1e4e86.  call `addExceptionLocked`(v1, v5) @signature `Lkotlinx/coroutines/j1$b;.addExceptionLocked:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1e4e8c.  call temp:= `getRootCause`(v1) @signature `Lkotlinx/coroutines/j1$b;.getRootCause:()Ljava/lang/Throwable;` @kind virtual;
  #L1e4e92.  v5:= temp @kind object;
  #L1e4e94.  v3:= v3 ^~ v4 @kind int;
  #L1e4e96.  if v3 == 0 then goto L1e4e9c;
  #L1e4e9a.  v2:= v5 @kind object;
  #L1e4e9c.  v3:= `@@kotlin.q.a` @type ^`kotlin.q` @kind object;
  #L1e4ea0.  @monitorexit v1
  #L1e4ea2.  if v2 == 0 then goto L1e4eac;
  #L1e4ea6.  call `a`(v6, v0, v2) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/n1;Ljava/lang/Throwable;)V` @kind direct;
  #L1e4eac.  call temp:= `a`(v6, v7) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/y0;)Lkotlinx/coroutines/m;` @kind direct;
  #L1e4eb2.  v7:= temp @kind object;
  #L1e4eb4.  if v7 == 0 then goto L1e4eca;
  #L1e4eb8.  call temp:= `b`(v6, v1, v7, v8) @signature `Lkotlinx/coroutines/j1;.b:(Lkotlinx/coroutines/j1$b;Lkotlinx/coroutines/m;Ljava/lang/Object;)Z` @kind direct;
  #L1e4ebe.  v7:= temp;
  #L1e4ec0.  if v7 == 0 then goto L1e4eca;
  #L1e4ec4.  v7:= `@@kotlinx.coroutines.k1.b` @type ^`kotlinx.coroutines.internal.v` @kind object;
  #L1e4ec8.  return v7 @kind object;
  #L1e4eca.  call temp:= `a`(v6, v1, v8) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/j1$b;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L1e4ed0.  v7:= temp @kind object;
  #L1e4ed2.  return v7 @kind object;
  #L1e4ed4.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e4ed6.  @monitorexit v1
  #L1e4ed8.  throw v7;
  #L1e4eda.  call temp:= `access$getCOMPLETING_RETRY$p`() @signature `Lkotlinx/coroutines/k1;.access$getCOMPLETING_RETRY$p:()Lkotlinx/coroutines/internal/v;` @kind static;
  #L1e4ee0.  v7:= temp @kind object;
  #L1e4ee2.  return v7 @kind object;
  catch `java.lang.Throwable` @[L1e4dfc..L1e4e10] goto L1e4ed4;
  catch `java.lang.Throwable` @[L1e4e16..L1e4e38] goto L1e4ed4;
  catch `java.lang.Throwable` @[L1e4e3c..L1e4ea0] goto L1e4ed4;
}
procedure `java.lang.Throwable` `c`(`kotlinx.coroutines.j1` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/j1;.c:(Ljava/lang/Object;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1e50e4.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.r` @kind boolean;
  #L1e50e8.  v1:= 0I;
  #L1e50ea.  if v0 != 0 then goto L1e50f0;
  #L1e50ee.  v3:= v1 @kind object;
  #L1e50f0.  v3:= (`kotlinx.coroutines.r`) v3 @kind object;
  #L1e50f4.  if v3 == 0 then goto L1e50fc;
  #L1e50f8.  v1:= v3.`kotlinx.coroutines.r.a` @type ^`java.lang.Throwable` @kind object;
  #L1e50fc.  return v1 @kind object;
}
procedure `java.lang.Object` `d`(`kotlinx.coroutines.j1` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/j1;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1e4b54.  v0:= 0I;
  #L1e4b56.  v1:= v0 @kind object;
  #L1e4b58.  call temp:= `getState$kotlinx_coroutines_core`(v6) @signature `Lkotlinx/coroutines/j1;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L1e4b5e.  v2:= temp @kind object;
  #L1e4b60.  v3:= instanceof @variable v2 @type ^`kotlinx.coroutines.j1$b` @kind boolean;
  #L1e4b64.  if v3 == 0 then goto L1e4bfa;
  #L1e4b68.  @monitorenter v2
  #L1e4b6a.  v3:= v2 @kind object;
  #L1e4b6c.  v3:= (`kotlinx.coroutines.j1$b`) v3 @kind object;
  #L1e4b70.  call temp:= `isSealed`(v3) @signature `Lkotlinx/coroutines/j1$b;.isSealed:()Z` @kind virtual;
  #L1e4b76.  v3:= temp;
  #L1e4b78.  if v3 == 0 then goto L1e4b88;
  #L1e4b7c.  call temp:= `access$getTOO_LATE_TO_CANCEL$p`() @signature `Lkotlinx/coroutines/k1;.access$getTOO_LATE_TO_CANCEL$p:()Lkotlinx/coroutines/internal/v;` @kind static;
  #L1e4b82.  v7:= temp @kind object;
  #L1e4b84.  @monitorexit v2
  #L1e4b86.  return v7 @kind object;
  #L1e4b88.  v3:= v2 @kind object;
  #L1e4b8a.  v3:= (`kotlinx.coroutines.j1$b`) v3 @kind object;
  #L1e4b8e.  call temp:= `isCancelling`(v3) @signature `Lkotlinx/coroutines/j1$b;.isCancelling:()Z` @kind virtual;
  #L1e4b94.  v3:= temp;
  #L1e4b96.  if v7 != 0 then goto L1e4b9e;
  #L1e4b9a.  if v3 != 0 then goto L1e4bb8;
  #L1e4b9e.  if v1 == 0 then goto L1e4ba4;
  #L1e4ba2.  goto L1e4bac;
  #L1e4ba4.  call temp:= `b`(v6, v7) @signature `Lkotlinx/coroutines/j1;.b:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind direct;
  #L1e4baa.  v1:= temp @kind object;
  #L1e4bac.  v7:= v2 @kind object;
  #L1e4bae.  v7:= (`kotlinx.coroutines.j1$b`) v7 @kind object;
  #L1e4bb2.  call `addExceptionLocked`(v7, v1) @signature `Lkotlinx/coroutines/j1$b;.addExceptionLocked:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1e4bb8.  v7:= v2 @kind object;
  #L1e4bba.  v7:= (`kotlinx.coroutines.j1$b`) v7 @kind object;
  #L1e4bbe.  call temp:= `getRootCause`(v7) @signature `Lkotlinx/coroutines/j1$b;.getRootCause:()Ljava/lang/Throwable;` @kind virtual;
  #L1e4bc4.  v7:= temp @kind object;
  #L1e4bc6.  v1:= v3 ^~ 1;
  #L1e4bca.  if v1 == 0 then goto L1e4bd0;
  #L1e4bce.  goto L1e4bd2;
  #L1e4bd0.  v7:= v0 @kind object;
  #L1e4bd2.  @monitorexit v2
  #L1e4bd4.  if v7 == 0 then goto L1e4bea;
  #L1e4bd8.  v2:= (`kotlinx.coroutines.j1$b`) v2 @kind object;
  #L1e4bdc.  call temp:= `getList`(v2) @signature `Lkotlinx/coroutines/j1$b;.getList:()Lkotlinx/coroutines/n1;` @kind virtual;
  #L1e4be2.  v0:= temp @kind object;
  #L1e4be4.  call `a`(v6, v0, v7) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/n1;Ljava/lang/Throwable;)V` @kind direct;
  #L1e4bea.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/k1;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/v;` @kind static;
  #L1e4bf0.  v7:= temp @kind object;
  #L1e4bf2.  return v7 @kind object;
  #L1e4bf4.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e4bf6.  @monitorexit v2
  #L1e4bf8.  throw v7;
  #L1e4bfa.  v3:= instanceof @variable v2 @type ^`kotlinx.coroutines.y0` @kind boolean;
  #L1e4bfe.  if v3 == 0 then goto L1e4ca2;
  #L1e4c02.  if v1 == 0 then goto L1e4c08;
  #L1e4c06.  goto L1e4c10;
  #L1e4c08.  call temp:= `b`(v6, v7) @signature `Lkotlinx/coroutines/j1;.b:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind direct;
  #L1e4c0e.  v1:= temp @kind object;
  #L1e4c10.  v3:= v2 @kind object;
  #L1e4c12.  v3:= (`kotlinx.coroutines.y0`) v3 @kind object;
  #L1e4c16.  call temp:= `isActive`(v3) @signature `Lkotlinx/coroutines/y0;.isActive:()Z` @kind interface;
  #L1e4c1c.  v4:= temp;
  #L1e4c1e.  if v4 == 0 then goto L1e4c38;
  #L1e4c22.  call temp:= `a`(v6, v3, v1) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/y0;Ljava/lang/Throwable;)Z` @kind direct;
  #L1e4c28.  v2:= temp;
  #L1e4c2a.  if v2 == 0 then goto L1e4b58;
  #L1e4c2e.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/k1;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/v;` @kind static;
  #L1e4c34.  v7:= temp @kind object;
  #L1e4c36.  return v7 @kind object;
  #L1e4c38.  v3:= new `kotlinx.coroutines.r`;
  #L1e4c3c.  v4:= 0I;
  #L1e4c3e.  v5:= 2I;
  #L1e4c40.  call `<init>`(v3, v1, v4, v5, v0) @signature `Lkotlinx/coroutines/r;.<init>:(Ljava/lang/Throwable;ZILkotlin/v/c/f;)V` @kind direct;
  #L1e4c46.  call temp:= `a`(v6, v2, v3) @signature `Lkotlinx/coroutines/j1;.a:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L1e4c4c.  v3:= temp @kind object;
  #L1e4c4e.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/k1;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/v;` @kind static;
  #L1e4c54.  v4:= temp @kind object;
  #L1e4c56.  if v3 == v4 then goto L1e4c6c;
  #L1e4c5a.  call temp:= `access$getCOMPLETING_RETRY$p`() @signature `Lkotlinx/coroutines/k1;.access$getCOMPLETING_RETRY$p:()Lkotlinx/coroutines/internal/v;` @kind static;
  #L1e4c60.  v2:= temp @kind object;
  #L1e4c62.  if v3 != v2 then goto L1e4c6a;
  #L1e4c66.  goto L1e4b58;
  #L1e4c6a.  return v3 @kind object;
  #L1e4c6c.  v7:= new `java.lang.StringBuilder`;
  #L1e4c70.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e4c76.  v0:= "Cannot happen in " @kind object;
  #L1e4c7a.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e4c80.  call temp:= `append`(v7, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e4c86.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e4c8c.  v7:= temp @kind object;
  #L1e4c8e.  v0:= new `java.lang.IllegalStateException`;
  #L1e4c92.  call temp:= `toString`(v7) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e4c98.  v7:= temp @kind object;
  #L1e4c9a.  call `<init>`(v0, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e4ca0.  throw v0;
  #L1e4ca2.  call temp:= `access$getTOO_LATE_TO_CANCEL$p`() @signature `Lkotlinx/coroutines/k1;.access$getTOO_LATE_TO_CANCEL$p:()Lkotlinx/coroutines/internal/v;` @kind static;
  #L1e4ca8.  v7:= temp @kind object;
  #L1e4caa.  return v7 @kind object;
  catch `java.lang.Throwable` @[L1e4b6a..L1e4b84] goto L1e4bf4;
  catch `java.lang.Throwable` @[L1e4b88..L1e4bc6] goto L1e4bf4;
}
procedure `int` `e`(`kotlinx.coroutines.j1` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/j1;.e:(Ljava/lang/Object;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1e487c.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.q0` @kind boolean;
  #L1e4880.  v1:= -1I;
  #L1e4882.  v2:= 1I;
  #L1e4884.  v3:= 0I;
  #L1e4886.  if v0 == 0 then goto L1e48c0;
  #L1e488a.  v0:= v5 @kind object;
  #L1e488c.  v0:= (`kotlinx.coroutines.q0`) v0 @kind object;
  #L1e4890.  call temp:= `isActive`(v0) @signature `Lkotlinx/coroutines/q0;.isActive:()Z` @kind virtual;
  #L1e4896.  v0:= temp;
  #L1e4898.  if v0 == 0 then goto L1e489e;
  #L1e489c.  return v3;
  #L1e489e.  v0:= `@@kotlinx.coroutines.j1.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1e48a2.  call temp:= `access$getEMPTY_ACTIVE$p`() @signature `Lkotlinx/coroutines/k1;.access$getEMPTY_ACTIVE$p:()Lkotlinx/coroutines/q0;` @kind static;
  #L1e48a8.  v3:= temp @kind object;
  #L1e48aa.  call temp:= `compareAndSet`(v0, v4, v5, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1e48b0.  v5:= temp;
  #L1e48b2.  if v5 != 0 then goto L1e48b8;
  #L1e48b6.  return v1;
  #L1e48b8.  call `onStartInternal$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/j1;.onStartInternal$kotlinx_coroutines_core:()V` @kind virtual;
  #L1e48be.  return v2;
  #L1e48c0.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.x0` @kind boolean;
  #L1e48c4.  if v0 == 0 then goto L1e48f0;
  #L1e48c8.  v0:= `@@kotlinx.coroutines.j1.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1e48cc.  v3:= v5 @kind object;
  #L1e48ce.  v3:= (`kotlinx.coroutines.x0`) v3 @kind object;
  #L1e48d2.  call temp:= `getList`(v3) @signature `Lkotlinx/coroutines/x0;.getList:()Lkotlinx/coroutines/n1;` @kind virtual;
  #L1e48d8.  v3:= temp @kind object;
  #L1e48da.  call temp:= `compareAndSet`(v0, v4, v5, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1e48e0.  v5:= temp;
  #L1e48e2.  if v5 != 0 then goto L1e48e8;
  #L1e48e6.  return v1;
  #L1e48e8.  call `onStartInternal$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/j1;.onStartInternal$kotlinx_coroutines_core:()V` @kind virtual;
  #L1e48ee.  return v2;
  #L1e48f0.  return v3;
}
procedure `java.lang.String` `f`(`kotlinx.coroutines.j1` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/j1;.f:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L1e4f60.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.j1$b` @kind boolean;
  #L1e4f64.  v1:= "Active" @kind object;
  #L1e4f68.  if v0 == 0 then goto L1e4f94;
  #L1e4f6c.  v3:= (`kotlinx.coroutines.j1$b`) v3 @kind object;
  #L1e4f70.  call temp:= `isCancelling`(v3) @signature `Lkotlinx/coroutines/j1$b;.isCancelling:()Z` @kind virtual;
  #L1e4f76.  v0:= temp;
  #L1e4f78.  if v0 == 0 then goto L1e4f82;
  #L1e4f7c.  v1:= "Cancelling" @kind object;
  #L1e4f80.  goto L1e4fc6;
  #L1e4f82.  call temp:= `isCompleting`(v3) @signature `Lkotlinx/coroutines/j1$b;.isCompleting:()Z` @kind virtual;
  #L1e4f88.  v3:= temp;
  #L1e4f8a.  if v3 == 0 then goto L1e4fc6;
  #L1e4f8e.  v1:= "Completing" @kind object;
  #L1e4f92.  goto L1e4fc6;
  #L1e4f94.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.y0` @kind boolean;
  #L1e4f98.  if v0 == 0 then goto L1e4fb4;
  #L1e4f9c.  v3:= (`kotlinx.coroutines.y0`) v3 @kind object;
  #L1e4fa0.  call temp:= `isActive`(v3) @signature `Lkotlinx/coroutines/y0;.isActive:()Z` @kind interface;
  #L1e4fa6.  v3:= temp;
  #L1e4fa8.  if v3 == 0 then goto L1e4fae;
  #L1e4fac.  goto L1e4fc6;
  #L1e4fae.  v1:= "New" @kind object;
  #L1e4fb2.  goto L1e4fc6;
  #L1e4fb4.  v3:= instanceof @variable v3 @type ^`kotlinx.coroutines.r` @kind boolean;
  #L1e4fb8.  if v3 == 0 then goto L1e4fc2;
  #L1e4fbc.  v1:= "Cancelled" @kind object;
  #L1e4fc0.  goto L1e4fc6;
  #L1e4fc2.  v1:= "Completed" @kind object;
  #L1e4fc6.  return v1 @kind object;
}
procedure `java.util.concurrent.CancellationException` `toCancellationException$default`(`kotlinx.coroutines.j1` v0 @kind object, `java.lang.Throwable` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/j1;.toCancellationException$default:(Lkotlinx/coroutines/j1;Ljava/lang/Throwable;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/concurrent/CancellationException;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1e53e8.  if v4 != 0 then goto L1e5400;
  #L1e53ec.  v3:= v3 ^& 1;
  #L1e53f0.  if v3 == 0 then goto L1e53f6;
  #L1e53f4.  v2:= 0I;
  #L1e53f6.  call temp:= `toCancellationException`(v0, v1, v2) @signature `Lkotlinx/coroutines/j1;.toCancellationException:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/util/concurrent/CancellationException;` @kind virtual;
  #L1e53fc.  v0:= temp @kind object;
  #L1e53fe.  return v0 @kind object;
  #L1e5400.  v0:= new `java.lang.UnsupportedOperationException`;
  #L1e5404.  v1:= "Super calls with default arguments not supported in this target, function: toCancellationException" @kind object;
  #L1e5408.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e540e.  throw v0;
}
procedure `void` `afterCompletion`(`kotlinx.coroutines.j1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/j1;.afterCompletion:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;

  #L1e59b4.  return @kind void;
}
procedure `kotlinx.coroutines.l` `attachChild`(`kotlinx.coroutines.j1` v6 @kind this, `kotlinx.coroutines.n` v7 @kind object) @signature `Lkotlinx/coroutines/j1;.attachChild:(Lkotlinx/coroutines/n;)Lkotlinx/coroutines/l;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1e54d0.  v3:= new `kotlinx.coroutines.m`;
  #L1e54d4.  call `<init>`(v3, v6, v7) @signature `Lkotlinx/coroutines/m;.<init>:(Lkotlinx/coroutines/j1;Lkotlinx/coroutines/n;)V` @kind direct;
  #L1e54da.  v1:= 1I;
  #L1e54dc.  v2:= 0I;
  #L1e54de.  v4:= 2I;
  #L1e54e0.  v5:= 0I;
  #L1e54e2.  v0:= v6 @kind object;
  #L1e54e4.  call temp:= `invokeOnCompletion$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/d1$a;.invokeOnCompletion$default:(Lkotlinx/coroutines/d1;ZZLkotlin/v/b/l;ILjava/lang/Object;)Lkotlinx/coroutines/p0;` @kind static;
  #L1e54ea.  v7:= temp @kind object;
  #L1e54ec.  if v7 == 0 then goto L1e54f6;
  #L1e54f0.  v7:= (`kotlinx.coroutines.l`) v7 @kind object;
  #L1e54f4.  return v7 @kind object;
  #L1e54f6.  v7:= new `java.lang.NullPointerException`;
  #L1e54fa.  v0:= "null cannot be cast to non-null type kotlinx.coroutines.ChildHandle" @kind object;
  #L1e54fe.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e5504.  throw v7;
}
procedure `void` `cancel`(`kotlinx.coroutines.j1` v2 @kind this, `java.util.concurrent.CancellationException` v3 @kind object) @signature `Lkotlinx/coroutines/j1;.cancel:(Ljava/util/concurrent/CancellationException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e59c8.  if v3 == 0 then goto L1e59ce;
  #L1e59cc.  goto L1e59e4;
  #L1e59ce.  v3:= 0I;
  #L1e59d0.  v0:= new `kotlinx.coroutines.JobCancellationException`;
  #L1e59d4.  call temp:= `access$cancellationExceptionMessage`(v2) @signature `Lkotlinx/coroutines/j1;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/j1;)Ljava/lang/String;` @kind static;
  #L1e59da.  v1:= temp @kind object;
  #L1e59dc.  call `<init>`(v0, v1, v3, v2) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/d1;)V` @kind direct;
  #L1e59e2.  v3:= v0 @kind object;
  #L1e59e4.  call `cancelInternal`(v2, v3) @signature `Lkotlinx/coroutines/j1;.cancelInternal:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1e59ea.  return @kind void;
}
procedure `boolean` `cancelImpl$kotlinx_coroutines_core`(`kotlinx.coroutines.j1` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/j1;.cancelImpl$kotlinx_coroutines_core:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1e4514.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/k1;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/v;` @kind static;
  #L1e451a.  v0:= temp @kind object;
  #L1e451c.  call temp:= `getOnCancelComplete$kotlinx_coroutines_core`(v3) @signature `Lkotlinx/coroutines/j1;.getOnCancelComplete$kotlinx_coroutines_core:()Z` @kind virtual;
  #L1e4522.  v1:= temp;
  #L1e4524.  v2:= 1I;
  #L1e4526.  if v1 == 0 then goto L1e453c;
  #L1e452a.  call temp:= `a`(v3, v4) @signature `Lkotlinx/coroutines/j1;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L1e4530.  v0:= temp @kind object;
  #L1e4532.  v1:= `@@kotlinx.coroutines.k1.b` @type ^`kotlinx.coroutines.internal.v` @kind object;
  #L1e4536.  if v0 != v1 then goto L1e453c;
  #L1e453a.  return v2;
  #L1e453c.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/k1;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/v;` @kind static;
  #L1e4542.  v1:= temp @kind object;
  #L1e4544.  if v0 != v1 then goto L1e4550;
  #L1e4548.  call temp:= `d`(v3, v4) @signature `Lkotlinx/coroutines/j1;.d:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L1e454e.  v0:= temp @kind object;
  #L1e4550.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/k1;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/v;` @kind static;
  #L1e4556.  v4:= temp @kind object;
  #L1e4558.  if v0 != v4 then goto L1e455e;
  #L1e455c.  goto L1e457e;
  #L1e455e.  v4:= `@@kotlinx.coroutines.k1.b` @type ^`kotlinx.coroutines.internal.v` @kind object;
  #L1e4562.  if v0 != v4 then goto L1e4568;
  #L1e4566.  goto L1e457e;
  #L1e4568.  call temp:= `access$getTOO_LATE_TO_CANCEL$p`() @signature `Lkotlinx/coroutines/k1;.access$getTOO_LATE_TO_CANCEL$p:()Lkotlinx/coroutines/internal/v;` @kind static;
  #L1e456e.  v4:= temp @kind object;
  #L1e4570.  if v0 != v4 then goto L1e4578;
  #L1e4574.  v2:= 0I;
  #L1e4576.  goto L1e457e;
  #L1e4578.  call `afterCompletion`(v3, v0) @signature `Lkotlinx/coroutines/j1;.afterCompletion:(Ljava/lang/Object;)V` @kind virtual;
  #L1e457e.  return v2;
}
procedure `void` `cancelInternal`(`kotlinx.coroutines.j1` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/j1;.cancelInternal:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L1e59fc.  call temp:= `cancelImpl$kotlinx_coroutines_core`(v0, v1) @signature `Lkotlinx/coroutines/j1;.cancelImpl$kotlinx_coroutines_core:(Ljava/lang/Object;)Z` @kind virtual;
  #L1e5a02.  return @kind void;
}
procedure `java.lang.String` `cancellationExceptionMessage`(`kotlinx.coroutines.j1` v1 @kind this) @signature `Lkotlinx/coroutines/j1;.cancellationExceptionMessage:()Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1e4f2c.  v0:= "Job was cancelled" @kind object;
  #L1e4f30.  return v0 @kind object;
}
procedure `boolean` `childCancelled`(`kotlinx.coroutines.j1` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/j1;.childCancelled:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e45e4.  v0:= instanceof @variable v3 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L1e45e8.  v1:= 1I;
  #L1e45ea.  if v0 == 0 then goto L1e45f0;
  #L1e45ee.  return v1;
  #L1e45f0.  call temp:= `cancelImpl$kotlinx_coroutines_core`(v2, v3) @signature `Lkotlinx/coroutines/j1;.cancelImpl$kotlinx_coroutines_core:(Ljava/lang/Object;)Z` @kind virtual;
  #L1e45f6.  v3:= temp;
  #L1e45f8.  if v3 == 0 then goto L1e460a;
  #L1e45fc.  call temp:= `getHandlesException$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/j1;.getHandlesException$kotlinx_coroutines_core:()Z` @kind virtual;
  #L1e4602.  v3:= temp;
  #L1e4604.  if v3 == 0 then goto L1e460a;
  #L1e4608.  goto L1e460c;
  #L1e460a.  v1:= 0I;
  #L1e460c.  return v1;
}
procedure `java.lang.Object` `fold`(`kotlinx.coroutines.j1` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.v.b.p` v2 @kind object) @signature `Lkotlinx/coroutines/j1;.fold:(Ljava/lang/Object;Lkotlin/v/b/p;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L1e4b0c.  call temp:= `fold`(v0, v1, v2) @signature `Lkotlinx/coroutines/d1$a;.fold:(Lkotlinx/coroutines/d1;Ljava/lang/Object;Lkotlin/v/b/p;)Ljava/lang/Object;` @kind static;
  #L1e4b12.  v1:= temp @kind object;
  #L1e4b14.  return v1 @kind object;
}
procedure `kotlin.t.g$b` `get`(`kotlinx.coroutines.j1` v0 @kind this, `kotlin.t.g$c` v1 @kind object) @signature `Lkotlinx/coroutines/j1;.get:(Lkotlin/t/g$c;)Lkotlin/t/g$b;` @AccessFlag PUBLIC {
    temp;

  #L1e549c.  call temp:= `get`(v0, v1) @signature `Lkotlinx/coroutines/d1$a;.get:(Lkotlinx/coroutines/d1;Lkotlin/t/g$c;)Lkotlin/t/g$b;` @kind static;
  #L1e54a2.  v1:= temp @kind object;
  #L1e54a4.  return v1 @kind object;
}
procedure `java.util.concurrent.CancellationException` `getCancellationException`(`kotlinx.coroutines.j1` v4 @kind this) @signature `Lkotlinx/coroutines/j1;.getCancellationException:()Ljava/util/concurrent/CancellationException;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1e51e8.  call temp:= `getState$kotlinx_coroutines_core`(v4) @signature `Lkotlinx/coroutines/j1;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L1e51ee.  v0:= temp @kind object;
  #L1e51f0.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.j1$b` @kind boolean;
  #L1e51f4.  v2:= "Job is still new or active: " @kind object;
  #L1e51f8.  if v1 == 0 then goto L1e5276;
  #L1e51fc.  v0:= (`kotlinx.coroutines.j1$b`) v0 @kind object;
  #L1e5200.  call temp:= `getRootCause`(v0) @signature `Lkotlinx/coroutines/j1$b;.getRootCause:()Ljava/lang/Throwable;` @kind virtual;
  #L1e5206.  v0:= temp @kind object;
  #L1e5208.  if v0 == 0 then goto L1e5244;
  #L1e520c.  v1:= new `java.lang.StringBuilder`;
  #L1e5210.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e5216.  call temp:= `getClassSimpleName`(v4) @signature `Lkotlinx/coroutines/i0;.getClassSimpleName:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1e521c.  v3:= temp @kind object;
  #L1e521e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e5224.  v3:= " is cancelling" @kind object;
  #L1e5228.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e522e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e5234.  v1:= temp @kind object;
  #L1e5236.  call temp:= `toCancellationException`(v4, v0, v1) @signature `Lkotlinx/coroutines/j1;.toCancellationException:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/util/concurrent/CancellationException;` @kind virtual;
  #L1e523c.  v0:= temp @kind object;
  #L1e523e.  if v0 == 0 then goto L1e5244;
  #L1e5242.  goto L1e52d0;
  #L1e5244.  v0:= new `java.lang.StringBuilder`;
  #L1e5248.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e524e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e5254.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e525a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e5260.  v0:= temp @kind object;
  #L1e5262.  v1:= new `java.lang.IllegalStateException`;
  #L1e5266.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e526c.  v0:= temp @kind object;
  #L1e526e.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e5274.  throw v1;
  #L1e5276.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.y0` @kind boolean;
  #L1e527a.  if v1 != 0 then goto L1e52d2;
  #L1e527e.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.r` @kind boolean;
  #L1e5282.  v2:= 0I;
  #L1e5284.  if v1 == 0 then goto L1e529c;
  #L1e5288.  v0:= (`kotlinx.coroutines.r`) v0 @kind object;
  #L1e528c.  v0:= v0.`kotlinx.coroutines.r.a` @type ^`java.lang.Throwable` @kind object;
  #L1e5290.  v1:= 1I;
  #L1e5292.  call temp:= `toCancellationException$default`(v4, v0, v2, v1, v2) @signature `Lkotlinx/coroutines/j1;.toCancellationException$default:(Lkotlinx/coroutines/j1;Ljava/lang/Throwable;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/concurrent/CancellationException;` @kind static;
  #L1e5298.  v0:= temp @kind object;
  #L1e529a.  goto L1e52d0;
  #L1e529c.  v0:= new `kotlinx.coroutines.JobCancellationException`;
  #L1e52a0.  v1:= new `java.lang.StringBuilder`;
  #L1e52a4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e52aa.  call temp:= `getClassSimpleName`(v4) @signature `Lkotlinx/coroutines/i0;.getClassSimpleName:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1e52b0.  v3:= temp @kind object;
  #L1e52b2.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e52b8.  v3:= " has completed normally" @kind object;
  #L1e52bc.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e52c2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e52c8.  v1:= temp @kind object;
  #L1e52ca.  call `<init>`(v0, v1, v2, v4) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/d1;)V` @kind direct;
  #L1e52d0.  return v0 @kind object;
  #L1e52d2.  v0:= new `java.lang.StringBuilder`;
  #L1e52d6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e52dc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e52e2.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e52e8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e52ee.  v0:= temp @kind object;
  #L1e52f0.  v1:= new `java.lang.IllegalStateException`;
  #L1e52f4.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e52fa.  v0:= temp @kind object;
  #L1e52fc.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e5302.  throw v1;
}
procedure `java.util.concurrent.CancellationException` `getChildJobCancellationCause`(`kotlinx.coroutines.j1` v5 @kind this) @signature `Lkotlinx/coroutines/j1;.getChildJobCancellationCause:()Ljava/util/concurrent/CancellationException;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1e5314.  call temp:= `getState$kotlinx_coroutines_core`(v5) @signature `Lkotlinx/coroutines/j1;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L1e531a.  v0:= temp @kind object;
  #L1e531c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.j1$b` @kind boolean;
  #L1e5320.  v2:= 0I;
  #L1e5322.  if v1 == 0 then goto L1e5336;
  #L1e5326.  v1:= v0 @kind object;
  #L1e5328.  v1:= (`kotlinx.coroutines.j1$b`) v1 @kind object;
  #L1e532c.  call temp:= `getRootCause`(v1) @signature `Lkotlinx/coroutines/j1$b;.getRootCause:()Ljava/lang/Throwable;` @kind virtual;
  #L1e5332.  v1:= temp @kind object;
  #L1e5334.  goto L1e5354;
  #L1e5336.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.r` @kind boolean;
  #L1e533a.  if v1 == 0 then goto L1e534a;
  #L1e533e.  v1:= v0 @kind object;
  #L1e5340.  v1:= (`kotlinx.coroutines.r`) v1 @kind object;
  #L1e5344.  v1:= v1.`kotlinx.coroutines.r.a` @type ^`java.lang.Throwable` @kind object;
  #L1e5348.  goto L1e5354;
  #L1e534a.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.y0` @kind boolean;
  #L1e534e.  if v1 != 0 then goto L1e53a0;
  #L1e5352.  v1:= v2 @kind object;
  #L1e5354.  v3:= instanceof @variable v1 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L1e5358.  if v3 != 0 then goto L1e535e;
  #L1e535c.  goto L1e5360;
  #L1e535e.  v2:= v1 @kind object;
  #L1e5360.  v2:= (`java.util.concurrent.CancellationException`) v2 @kind object;
  #L1e5364.  if v2 == 0 then goto L1e536a;
  #L1e5368.  goto L1e539e;
  #L1e536a.  v2:= new `kotlinx.coroutines.JobCancellationException`;
  #L1e536e.  v3:= new `java.lang.StringBuilder`;
  #L1e5372.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e5378.  v4:= "Parent job is " @kind object;
  #L1e537c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e5382.  call temp:= `f`(v5, v0) @signature `Lkotlinx/coroutines/j1;.f:(Ljava/lang/Object;)Ljava/lang/String;` @kind direct;
  #L1e5388.  v0:= temp @kind object;
  #L1e538a.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e5390.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e5396.  v0:= temp @kind object;
  #L1e5398.  call `<init>`(v2, v0, v1, v5) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/d1;)V` @kind direct;
  #L1e539e.  return v2 @kind object;
  #L1e53a0.  v1:= new `java.lang.StringBuilder`;
  #L1e53a4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e53aa.  v2:= "Cannot be cancelling child in this state: " @kind object;
  #L1e53ae.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e53b4.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e53ba.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e53c0.  v0:= temp @kind object;
  #L1e53c2.  v1:= new `java.lang.IllegalStateException`;
  #L1e53c6.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e53cc.  v0:= temp @kind object;
  #L1e53ce.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e53d4.  throw v1;
}
procedure `boolean` `getHandlesException$kotlinx_coroutines_core`(`kotlinx.coroutines.j1` v1 @kind this) @signature `Lkotlinx/coroutines/j1;.getHandlesException$kotlinx_coroutines_core:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e4620.  v0:= 1I;
  #L1e4622.  return v0;
}
procedure `kotlin.t.g$c` `getKey`(`kotlinx.coroutines.j1` v1 @kind this) @signature `Lkotlinx/coroutines/j1;.getKey:()Lkotlin/t/g$c;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1e54b8.  v0:= `@@kotlinx.coroutines.d1.e` @type ^`kotlinx.coroutines.d1$b` @kind object;
  #L1e54bc.  return v0 @kind object;
}
procedure `boolean` `getOnCancelComplete$kotlinx_coroutines_core`(`kotlinx.coroutines.j1` v1 @kind this) @signature `Lkotlinx/coroutines/j1;.getOnCancelComplete$kotlinx_coroutines_core:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e4634.  v0:= 0I;
  #L1e4636.  return v0;
}
procedure `kotlinx.coroutines.l` `getParentHandle$kotlinx_coroutines_core`(`kotlinx.coroutines.j1` v1 @kind this) @signature `Lkotlinx/coroutines/j1;.getParentHandle$kotlinx_coroutines_core:()Lkotlinx/coroutines/l;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1e5518.  v0:= v1.`kotlinx.coroutines.j1._parentHandle` @type ^`java.lang.Object` @kind object;
  #L1e551c.  v0:= (`kotlinx.coroutines.l`) v0 @kind object;
  #L1e5520.  return v0 @kind object;
}
procedure `java.lang.Object` `getState$kotlinx_coroutines_core`(`kotlinx.coroutines.j1` v2 @kind this) @signature `Lkotlinx/coroutines/j1;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1e4b28.  v0:= v2.`kotlinx.coroutines.j1._state` @type ^`java.lang.Object` @kind object;
  #L1e4b2c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.r` @kind boolean;
  #L1e4b30.  if v1 != 0 then goto L1e4b36;
  #L1e4b34.  return v0 @kind object;
  #L1e4b36.  v0:= (`kotlinx.coroutines.internal.r`) v0 @kind object;
  #L1e4b3a.  call temp:= `perform`(v0, v2) @signature `Lkotlinx/coroutines/internal/r;.perform:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1e4b40.  goto L1e4b28;
}
procedure `boolean` `handleJobException`(`kotlinx.coroutines.j1` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/j1;.handleJobException:(Ljava/lang/Throwable;)Z` @AccessFlag PROTECTED {
    temp;

  #L1e4648.  v1:= 0I;
  #L1e464a.  return v1;
}
procedure `void` `handleOnCompletionException$kotlinx_coroutines_core`(`kotlinx.coroutines.j1` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/j1;.handleOnCompletionException$kotlinx_coroutines_core:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L1e5b40.  throw v1;
}
procedure `void` `initParentJobInternal$kotlinx_coroutines_core`(`kotlinx.coroutines.j1` v1 @kind this, `kotlinx.coroutines.d1` v2 @kind object) @signature `Lkotlinx/coroutines/j1;.initParentJobInternal$kotlinx_coroutines_core:(Lkotlinx/coroutines/d1;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1e5b54.  call temp:= `getASSERTIONS_ENABLED`() @signature `Lkotlinx/coroutines/h0;.getASSERTIONS_ENABLED:()Z` @kind static;
  #L1e5b5a.  v0:= temp;
  #L1e5b5c.  if v0 == 0 then goto L1e5b84;
  #L1e5b60.  call temp:= `getParentHandle$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/j1;.getParentHandle$kotlinx_coroutines_core:()Lkotlinx/coroutines/l;` @kind virtual;
  #L1e5b66.  v0:= temp @kind object;
  #L1e5b68.  if v0 != 0 then goto L1e5b70;
  #L1e5b6c.  v0:= 1I;
  #L1e5b6e.  goto L1e5b72;
  #L1e5b70.  v0:= 0I;
  #L1e5b72.  if v0 == 0 then goto L1e5b78;
  #L1e5b76.  goto L1e5b84;
  #L1e5b78.  v2:= new `java.lang.AssertionError`;
  #L1e5b7c.  call `<init>`(v2) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L1e5b82.  throw v2;
  #L1e5b84.  if v2 != 0 then goto L1e5b94;
  #L1e5b88.  v2:= `@@kotlinx.coroutines.o1.f` @type ^`kotlinx.coroutines.o1` @kind object;
  #L1e5b8c.  call `setParentHandle$kotlinx_coroutines_core`(v1, v2) @signature `Lkotlinx/coroutines/j1;.setParentHandle$kotlinx_coroutines_core:(Lkotlinx/coroutines/l;)V` @kind virtual;
  #L1e5b92.  return @kind void;
  #L1e5b94.  call temp:= `start`(v2) @signature `Lkotlinx/coroutines/d1;.start:()Z` @kind interface;
  #L1e5b9a.  call temp:= `attachChild`(v2, v1) @signature `Lkotlinx/coroutines/d1;.attachChild:(Lkotlinx/coroutines/n;)Lkotlinx/coroutines/l;` @kind interface;
  #L1e5ba0.  v2:= temp @kind object;
  #L1e5ba2.  call `setParentHandle$kotlinx_coroutines_core`(v1, v2) @signature `Lkotlinx/coroutines/j1;.setParentHandle$kotlinx_coroutines_core:(Lkotlinx/coroutines/l;)V` @kind virtual;
  #L1e5ba8.  call temp:= `isCompleted`(v1) @signature `Lkotlinx/coroutines/j1;.isCompleted:()Z` @kind virtual;
  #L1e5bae.  v0:= temp;
  #L1e5bb0.  if v0 == 0 then goto L1e5bc4;
  #L1e5bb4.  call `dispose`(v2) @signature `Lkotlinx/coroutines/p0;.dispose:()V` @kind interface;
  #L1e5bba.  v2:= `@@kotlinx.coroutines.o1.f` @type ^`kotlinx.coroutines.o1` @kind object;
  #L1e5bbe.  call `setParentHandle$kotlinx_coroutines_core`(v1, v2) @signature `Lkotlinx/coroutines/j1;.setParentHandle$kotlinx_coroutines_core:(Lkotlinx/coroutines/l;)V` @kind virtual;
  #L1e5bc4.  return @kind void;
}
procedure `kotlinx.coroutines.p0` `invokeOnCompletion`(`kotlinx.coroutines.j1` v7 @kind this, `boolean` v8 , `boolean` v9 , `kotlin.v.b.l` v10 @kind object) @signature `Lkotlinx/coroutines/j1;.invokeOnCompletion:(ZZLkotlin/v/b/l;)Lkotlinx/coroutines/p0;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1e55d0.  v0:= 0I;
  #L1e55d2.  v1:= v0 @kind object;
  #L1e55d4.  call temp:= `getState$kotlinx_coroutines_core`(v7) @signature `Lkotlinx/coroutines/j1;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L1e55da.  v2:= temp @kind object;
  #L1e55dc.  v3:= instanceof @variable v2 @type ^`kotlinx.coroutines.q0` @kind boolean;
  #L1e55e0.  if v3 == 0 then goto L1e561e;
  #L1e55e4.  v3:= v2 @kind object;
  #L1e55e6.  v3:= (`kotlinx.coroutines.q0`) v3 @kind object;
  #L1e55ea.  call temp:= `isActive`(v3) @signature `Lkotlinx/coroutines/q0;.isActive:()Z` @kind virtual;
  #L1e55f0.  v4:= temp;
  #L1e55f2.  if v4 == 0 then goto L1e5616;
  #L1e55f6.  if v1 == 0 then goto L1e55fc;
  #L1e55fa.  goto L1e5604;
  #L1e55fc.  call temp:= `a`(v7, v10, v8) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlin/v/b/l;Z)Lkotlinx/coroutines/i1;` @kind direct;
  #L1e5602.  v1:= temp @kind object;
  #L1e5604.  v3:= `@@kotlinx.coroutines.j1.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1e5608.  call temp:= `compareAndSet`(v3, v7, v2, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1e560e.  v2:= temp;
  #L1e5610.  if v2 == 0 then goto L1e55d4;
  #L1e5614.  return v1 @kind object;
  #L1e5616.  call `a`(v7, v3) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/q0;)V` @kind direct;
  #L1e561c.  goto L1e55d4;
  #L1e561e.  v3:= instanceof @variable v2 @type ^`kotlinx.coroutines.y0` @kind boolean;
  #L1e5622.  if v3 == 0 then goto L1e56fa;
  #L1e5626.  v3:= v2 @kind object;
  #L1e5628.  v3:= (`kotlinx.coroutines.y0`) v3 @kind object;
  #L1e562c.  call temp:= `getList`(v3) @signature `Lkotlinx/coroutines/y0;.getList:()Lkotlinx/coroutines/n1;` @kind interface;
  #L1e5632.  v3:= temp @kind object;
  #L1e5634.  if v3 != 0 then goto L1e5658;
  #L1e5638.  if v2 == 0 then goto L1e5648;
  #L1e563c.  v2:= (`kotlinx.coroutines.i1`) v2 @kind object;
  #L1e5640.  call `a`(v7, v2) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlinx/coroutines/i1;)V` @kind direct;
  #L1e5646.  goto L1e55d4;
  #L1e5648.  v8:= new `java.lang.NullPointerException`;
  #L1e564c.  v9:= "null cannot be cast to non-null type kotlinx.coroutines.JobNode<*>" @kind object;
  #L1e5650.  call `<init>`(v8, v9) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1e5656.  throw v8;
  #L1e5658.  v4:= `@@kotlinx.coroutines.o1.f` @type ^`kotlinx.coroutines.o1` @kind object;
  #L1e565c.  if v8 == 0 then goto L1e56cc;
  #L1e5660.  v5:= instanceof @variable v2 @type ^`kotlinx.coroutines.j1$b` @kind boolean;
  #L1e5664.  if v5 == 0 then goto L1e56cc;
  #L1e5668.  @monitorenter v2
  #L1e566a.  v5:= v2 @kind object;
  #L1e566c.  v5:= (`kotlinx.coroutines.j1$b`) v5 @kind object;
  #L1e5670.  call temp:= `getRootCause`(v5) @signature `Lkotlinx/coroutines/j1$b;.getRootCause:()Ljava/lang/Throwable;` @kind virtual;
  #L1e5676.  v5:= temp @kind object;
  #L1e5678.  if v5 == 0 then goto L1e5696;
  #L1e567c.  v6:= instanceof @variable v10 @type ^`kotlinx.coroutines.m` @kind boolean;
  #L1e5680.  if v6 == 0 then goto L1e56be;
  #L1e5684.  v6:= v2 @kind object;
  #L1e5686.  v6:= (`kotlinx.coroutines.j1$b`) v6 @kind object;
  #L1e568a.  call temp:= `isCompleting`(v6) @signature `Lkotlinx/coroutines/j1$b;.isCompleting:()Z` @kind virtual;
  #L1e5690.  v6:= temp;
  #L1e5692.  if v6 != 0 then goto L1e56be;
  #L1e5696.  if v1 == 0 then goto L1e569c;
  #L1e569a.  goto L1e56a4;
  #L1e569c.  call temp:= `a`(v7, v10, v8) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlin/v/b/l;Z)Lkotlinx/coroutines/i1;` @kind direct;
  #L1e56a2.  v1:= temp @kind object;
  #L1e56a4.  call temp:= `a`(v7, v2, v3, v1) @signature `Lkotlinx/coroutines/j1;.a:(Ljava/lang/Object;Lkotlinx/coroutines/n1;Lkotlinx/coroutines/i1;)Z` @kind direct;
  #L1e56aa.  v4:= temp;
  #L1e56ac.  if v4 != 0 then goto L1e56b4;
  #L1e56b0.  @monitorexit v2
  #L1e56b2.  goto L1e55d4;
  #L1e56b4.  if v5 != 0 then goto L1e56bc;
  #L1e56b8.  @monitorexit v2
  #L1e56ba.  return v1 @kind object;
  #L1e56bc.  v4:= v1 @kind object;
  #L1e56be.  v6:= `@@kotlin.q.a` @type ^`kotlin.q` @kind object;
  #L1e56c2.  @monitorexit v2
  #L1e56c4.  goto L1e56ce;
  #L1e56c6.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1e56c8.  @monitorexit v2
  #L1e56ca.  throw v8;
  #L1e56cc.  v5:= v0 @kind object;
  #L1e56ce.  if v5 == 0 then goto L1e56de;
  #L1e56d2.  if v9 == 0 then goto L1e56dc;
  #L1e56d6.  call temp:= `invoke`(v10, v5) @signature `Lkotlin/v/b/l;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1e56dc.  return v4 @kind object;
  #L1e56de.  if v1 == 0 then goto L1e56e4;
  #L1e56e2.  goto L1e56ec;
  #L1e56e4.  call temp:= `a`(v7, v10, v8) @signature `Lkotlinx/coroutines/j1;.a:(Lkotlin/v/b/l;Z)Lkotlinx/coroutines/i1;` @kind direct;
  #L1e56ea.  v1:= temp @kind object;
  #L1e56ec.  call temp:= `a`(v7, v2, v3, v1) @signature `Lkotlinx/coroutines/j1;.a:(Ljava/lang/Object;Lkotlinx/coroutines/n1;Lkotlinx/coroutines/i1;)Z` @kind direct;
  #L1e56f2.  v2:= temp;
  #L1e56f4.  if v2 == 0 then goto L1e55d4;
  #L1e56f8.  return v1 @kind object;
  #L1e56fa.  if v9 == 0 then goto L1e571a;
  #L1e56fe.  v8:= instanceof @variable v2 @type ^`kotlinx.coroutines.r` @kind boolean;
  #L1e5702.  if v8 != 0 then goto L1e5708;
  #L1e5706.  v2:= v0 @kind object;
  #L1e5708.  v2:= (`kotlinx.coroutines.r`) v2 @kind object;
  #L1e570c.  if v2 == 0 then goto L1e5714;
  #L1e5710.  v0:= v2.`kotlinx.coroutines.r.a` @type ^`java.lang.Throwable` @kind object;
  #L1e5714.  call temp:= `invoke`(v10, v0) @signature `Lkotlin/v/b/l;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1e571a.  v8:= `@@kotlinx.coroutines.o1.f` @type ^`kotlinx.coroutines.o1` @kind object;
  #L1e571e.  return v8 @kind object;
  catch `java.lang.Throwable` @[L1e566a..L1e56ac] goto L1e56c6;
  catch `java.lang.Throwable` @[L1e56be..L1e56c2] goto L1e56c6;
}
procedure `boolean` `isActive`(`kotlinx.coroutines.j1` v2 @kind this) @signature `Lkotlinx/coroutines/j1;.isActive:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e465c.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/j1;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L1e4662.  v0:= temp @kind object;
  #L1e4664.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.y0` @kind boolean;
  #L1e4668.  if v1 == 0 then goto L1e4680;
  #L1e466c.  v0:= (`kotlinx.coroutines.y0`) v0 @kind object;
  #L1e4670.  call temp:= `isActive`(v0) @signature `Lkotlinx/coroutines/y0;.isActive:()Z` @kind interface;
  #L1e4676.  v0:= temp;
  #L1e4678.  if v0 == 0 then goto L1e4680;
  #L1e467c.  v0:= 1I;
  #L1e467e.  goto L1e4682;
  #L1e4680.  v0:= 0I;
  #L1e4682.  return v0;
}
procedure `boolean` `isCompleted`(`kotlinx.coroutines.j1` v1 @kind this) @signature `Lkotlinx/coroutines/j1;.isCompleted:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1e4694.  call temp:= `getState$kotlinx_coroutines_core`(v1) @signature `Lkotlinx/coroutines/j1;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L1e469a.  v0:= temp @kind object;
  #L1e469c.  v0:= instanceof @variable v0 @type ^`kotlinx.coroutines.y0` @kind boolean;
  #L1e46a0.  v0:= v0 ^~ 1;
  #L1e46a4.  return v0;
}
procedure `boolean` `isScopedCoroutine`(`kotlinx.coroutines.j1` v1 @kind this) @signature `Lkotlinx/coroutines/j1;.isScopedCoroutine:()Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1e46b8.  v0:= 0I;
  #L1e46ba.  return v0;
}
procedure `java.lang.Object` `makeCompletingOnce$kotlinx_coroutines_core`(`kotlinx.coroutines.j1` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/j1;.makeCompletingOnce$kotlinx_coroutines_core:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1e4cd0.  call temp:= `getState$kotlinx_coroutines_core`(v3) @signature `Lkotlinx/coroutines/j1;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L1e4cd6.  v0:= temp @kind object;
  #L1e4cd8.  call temp:= `a`(v3, v0, v4) @signature `Lkotlinx/coroutines/j1;.a:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L1e4cde.  v0:= temp @kind object;
  #L1e4ce0.  call temp:= `access$getCOMPLETING_ALREADY$p`() @signature `Lkotlinx/coroutines/k1;.access$getCOMPLETING_ALREADY$p:()Lkotlinx/coroutines/internal/v;` @kind static;
  #L1e4ce6.  v1:= temp @kind object;
  #L1e4ce8.  if v0 == v1 then goto L1e4cfc;
  #L1e4cec.  call temp:= `access$getCOMPLETING_RETRY$p`() @signature `Lkotlinx/coroutines/k1;.access$getCOMPLETING_RETRY$p:()Lkotlinx/coroutines/internal/v;` @kind static;
  #L1e4cf2.  v1:= temp @kind object;
  #L1e4cf4.  if v0 != v1 then goto L1e4cfa;
  #L1e4cf8.  goto L1e4cd0;
  #L1e4cfa.  return v0 @kind object;
  #L1e4cfc.  v0:= new `java.lang.IllegalStateException`;
  #L1e4d00.  v1:= new `java.lang.StringBuilder`;
  #L1e4d04.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e4d0a.  v2:= "Job " @kind object;
  #L1e4d0e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e4d14.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e4d1a.  v2:= " is already complete or completing, " @kind object;
  #L1e4d1e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e4d24.  v2:= "but is being completed with " @kind object;
  #L1e4d28.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e4d2e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e4d34.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e4d3a.  v1:= temp @kind object;
  #L1e4d3c.  call temp:= `c`(v3, v4) @signature `Lkotlinx/coroutines/j1;.c:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind direct;
  #L1e4d42.  v4:= temp @kind object;
  #L1e4d44.  call `<init>`(v0, v1, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1e4d4a.  throw v0;
}
procedure `kotlin.t.g` `minusKey`(`kotlinx.coroutines.j1` v0 @kind this, `kotlin.t.g$c` v1 @kind object) @signature `Lkotlinx/coroutines/j1;.minusKey:(Lkotlin/t/g$c;)Lkotlin/t/g;` @AccessFlag PUBLIC {
    temp;

  #L1e5464.  call temp:= `minusKey`(v0, v1) @signature `Lkotlinx/coroutines/d1$a;.minusKey:(Lkotlinx/coroutines/d1;Lkotlin/t/g$c;)Lkotlin/t/g;` @kind static;
  #L1e546a.  v1:= temp @kind object;
  #L1e546c.  return v1 @kind object;
}
procedure `java.lang.String` `nameString$kotlinx_coroutines_core`(`kotlinx.coroutines.j1` v1 @kind this) @signature `Lkotlinx/coroutines/j1;.nameString$kotlinx_coroutines_core:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1e4f44.  call temp:= `getClassSimpleName`(v1) @signature `Lkotlinx/coroutines/i0;.getClassSimpleName:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1e4f4a.  v0:= temp @kind object;
  #L1e4f4c.  return v0 @kind object;
}
procedure `void` `onCancelling`(`kotlinx.coroutines.j1` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/j1;.onCancelling:(Ljava/lang/Throwable;)V` @AccessFlag PROTECTED {
    temp;

  #L1e5d7c.  return @kind void;
}
procedure `void` `onCompletionInternal`(`kotlinx.coroutines.j1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/j1;.onCompletionInternal:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;

  #L1e5d90.  return @kind void;
}
procedure `void` `onStartInternal$kotlinx_coroutines_core`(`kotlinx.coroutines.j1` v0 @kind this) @signature `Lkotlinx/coroutines/j1;.onStartInternal$kotlinx_coroutines_core:()V` @AccessFlag PUBLIC {
    temp;

  #L1e5da4.  return @kind void;
}
procedure `void` `parentCancelled`(`kotlinx.coroutines.j1` v0 @kind this, `kotlinx.coroutines.q1` v1 @kind object) @signature `Lkotlinx/coroutines/j1;.parentCancelled:(Lkotlinx/coroutines/q1;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1e5db8.  call temp:= `cancelImpl$kotlinx_coroutines_core`(v0, v1) @signature `Lkotlinx/coroutines/j1;.cancelImpl$kotlinx_coroutines_core:(Ljava/lang/Object;)Z` @kind virtual;
  #L1e5dbe.  return @kind void;
}
procedure `kotlin.t.g` `plus`(`kotlinx.coroutines.j1` v0 @kind this, `kotlin.t.g` v1 @kind object) @signature `Lkotlinx/coroutines/j1;.plus:(Lkotlin/t/g;)Lkotlin/t/g;` @AccessFlag PUBLIC {
    temp;

  #L1e5480.  call temp:= `plus`(v0, v1) @signature `Lkotlinx/coroutines/d1$a;.plus:(Lkotlinx/coroutines/d1;Lkotlin/t/g;)Lkotlin/t/g;` @kind static;
  #L1e5486.  v1:= temp @kind object;
  #L1e5488.  return v1 @kind object;
}
procedure `void` `removeNode$kotlinx_coroutines_core`(`kotlinx.coroutines.j1` v3 @kind this, `kotlinx.coroutines.i1` v4 @kind object) @signature `Lkotlinx/coroutines/j1;.removeNode$kotlinx_coroutines_core:(Lkotlinx/coroutines/i1;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1e5e44.  call temp:= `getState$kotlinx_coroutines_core`(v3) @signature `Lkotlinx/coroutines/j1;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L1e5e4a.  v0:= temp @kind object;
  #L1e5e4c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.i1` @kind boolean;
  #L1e5e50.  if v1 == 0 then goto L1e5e74;
  #L1e5e54.  if v0 == v4 then goto L1e5e5a;
  #L1e5e58.  return @kind void;
  #L1e5e5a.  v1:= `@@kotlinx.coroutines.j1.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L1e5e5e.  call temp:= `access$getEMPTY_ACTIVE$p`() @signature `Lkotlinx/coroutines/k1;.access$getEMPTY_ACTIVE$p:()Lkotlinx/coroutines/q0;` @kind static;
  #L1e5e64.  v2:= temp @kind object;
  #L1e5e66.  call temp:= `compareAndSet`(v1, v3, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L1e5e6c.  v0:= temp;
  #L1e5e6e.  if v0 == 0 then goto L1e5e44;
  #L1e5e72.  return @kind void;
  #L1e5e74.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.y0` @kind boolean;
  #L1e5e78.  if v1 == 0 then goto L1e5e92;
  #L1e5e7c.  v0:= (`kotlinx.coroutines.y0`) v0 @kind object;
  #L1e5e80.  call temp:= `getList`(v0) @signature `Lkotlinx/coroutines/y0;.getList:()Lkotlinx/coroutines/n1;` @kind interface;
  #L1e5e86.  v0:= temp @kind object;
  #L1e5e88.  if v0 == 0 then goto L1e5e92;
  #L1e5e8c.  call temp:= `remove`(v4) @signature `Lkotlinx/coroutines/internal/l;.remove:()Z` @kind virtual;
  #L1e5e92.  return @kind void;
}
procedure `void` `setParentHandle$kotlinx_coroutines_core`(`kotlinx.coroutines.j1` v0 @kind this, `kotlinx.coroutines.l` v1 @kind object) @signature `Lkotlinx/coroutines/j1;.setParentHandle$kotlinx_coroutines_core:(Lkotlinx/coroutines/l;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L1e5ea4.  v0.`kotlinx.coroutines.j1._parentHandle` @type ^`java.lang.Object` := v1 @kind object;
  #L1e5ea8.  return @kind void;
}
procedure `boolean` `start`(`kotlinx.coroutines.j1` v2 @kind this) @signature `Lkotlinx/coroutines/j1;.start:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1e46cc.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/j1;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L1e46d2.  v0:= temp @kind object;
  #L1e46d4.  call temp:= `e`(v2, v0) @signature `Lkotlinx/coroutines/j1;.e:(Ljava/lang/Object;)I` @kind direct;
  #L1e46da.  v0:= temp;
  #L1e46dc.  if v0 == 0 then goto L1e46ea;
  #L1e46e0.  v1:= 1I;
  #L1e46e2.  if v0 == v1 then goto L1e46e8;
  #L1e46e6.  goto L1e46cc;
  #L1e46e8.  return v1;
  #L1e46ea.  v0:= 0I;
  #L1e46ec.  return v0;
}
procedure `java.util.concurrent.CancellationException` `toCancellationException`(`kotlinx.coroutines.j1` v1 @kind this, `java.lang.Throwable` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lkotlinx/coroutines/j1;.toCancellationException:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/util/concurrent/CancellationException;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L1e5420.  v0:= instanceof @variable v2 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L1e5424.  if v0 != 0 then goto L1e542c;
  #L1e5428.  v0:= 0I;
  #L1e542a.  goto L1e542e;
  #L1e542c.  v0:= v2 @kind object;
  #L1e542e.  v0:= (`java.util.concurrent.CancellationException`) v0 @kind object;
  #L1e5432.  if v0 == 0 then goto L1e5438;
  #L1e5436.  goto L1e5450;
  #L1e5438.  v0:= new `kotlinx.coroutines.JobCancellationException`;
  #L1e543c.  if v3 == 0 then goto L1e5442;
  #L1e5440.  goto L1e544a;
  #L1e5442.  call temp:= `access$cancellationExceptionMessage`(v1) @signature `Lkotlinx/coroutines/j1;.access$cancellationExceptionMessage:(Lkotlinx/coroutines/j1;)Ljava/lang/String;` @kind static;
  #L1e5448.  v3:= temp @kind object;
  #L1e544a.  call `<init>`(v0, v3, v2, v1) @signature `Lkotlinx/coroutines/JobCancellationException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/d1;)V` @kind direct;
  #L1e5450.  return v0 @kind object;
}
procedure `java.lang.String` `toDebugString`(`kotlinx.coroutines.j1` v2 @kind this) @signature `Lkotlinx/coroutines/j1;.toDebugString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1e4fd8.  v0:= new `java.lang.StringBuilder`;
  #L1e4fdc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e4fe2.  call temp:= `nameString$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/j1;.nameString$kotlinx_coroutines_core:()Ljava/lang/String;` @kind virtual;
  #L1e4fe8.  v1:= temp @kind object;
  #L1e4fea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e4ff0.  v1:= 123I;
  #L1e4ff4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e4ffa.  call temp:= `getState$kotlinx_coroutines_core`(v2) @signature `Lkotlinx/coroutines/j1;.getState$kotlinx_coroutines_core:()Ljava/lang/Object;` @kind virtual;
  #L1e5000.  v1:= temp @kind object;
  #L1e5002.  call temp:= `f`(v2, v1) @signature `Lkotlinx/coroutines/j1;.f:(Ljava/lang/Object;)Ljava/lang/String;` @kind direct;
  #L1e5008.  v1:= temp @kind object;
  #L1e500a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e5010.  v1:= 125I;
  #L1e5014.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e501a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e5020.  v0:= temp @kind object;
  #L1e5022.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.j1` v2 @kind this) @signature `Lkotlinx/coroutines/j1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e5034.  v0:= new `java.lang.StringBuilder`;
  #L1e5038.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e503e.  call temp:= `toDebugString`(v2) @signature `Lkotlinx/coroutines/j1;.toDebugString:()Ljava/lang/String;` @kind virtual;
  #L1e5044.  v1:= temp @kind object;
  #L1e5046.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e504c.  v1:= 64I;
  #L1e5050.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e5056.  call temp:= `getHexAddress`(v2) @signature `Lkotlinx/coroutines/i0;.getHexAddress:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1e505c.  v1:= temp @kind object;
  #L1e505e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e5064.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e506a.  v0:= temp @kind object;
  #L1e506c.  return v0 @kind object;
}
