record `kotlinx.coroutines.j1$a` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.i1` @kind class {
  `kotlinx.coroutines.j1` `kotlinx.coroutines.j1$a.j` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.j1$b` `kotlinx.coroutines.j1$a.k` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.m` `kotlinx.coroutines.j1$a.l` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `kotlinx.coroutines.j1$a.m` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.j1$a` v1 @kind this, `kotlinx.coroutines.j1` v2 @kind object, `kotlinx.coroutines.j1$b` v3 @kind object, `kotlinx.coroutines.m` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/j1$a;.<init>:(Lkotlinx/coroutines/j1;Lkotlinx/coroutines/j1$b;Lkotlinx/coroutines/m;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1e3f00.  v0:= v4.`kotlinx.coroutines.m.j` @type ^`kotlinx.coroutines.n` @kind object;
  #L1e3f04.  call `<init>`(v1, v0) @signature `Lkotlinx/coroutines/i1;.<init>:(Lkotlinx/coroutines/d1;)V` @kind direct;
  #L1e3f0a.  v1.`kotlinx.coroutines.j1$a.j` @type ^`kotlinx.coroutines.j1` := v2 @kind object;
  #L1e3f0e.  v1.`kotlinx.coroutines.j1$a.k` @type ^`kotlinx.coroutines.j1$b` := v3 @kind object;
  #L1e3f12.  v1.`kotlinx.coroutines.j1$a.l` @type ^`kotlinx.coroutines.m` := v4 @kind object;
  #L1e3f16.  v1.`kotlinx.coroutines.j1$a.m` @type ^`java.lang.Object` := v5 @kind object;
  #L1e3f1a.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.j1$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/j1$a;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1e3e88.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L1e3e8c.  call `invoke`(v0, v1) @signature `Lkotlinx/coroutines/j1$a;.invoke:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1e3e92.  v1:= `@@kotlin.q.a` @type ^`kotlin.q` @kind object;
  #L1e3e96.  return v1 @kind object;
}
procedure `void` `invoke`(`kotlinx.coroutines.j1$a` v3 @kind this, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/j1$a;.invoke:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1e3f2c.  v4:= v3.`kotlinx.coroutines.j1$a.j` @type ^`kotlinx.coroutines.j1` @kind object;
  #L1e3f30.  v0:= v3.`kotlinx.coroutines.j1$a.k` @type ^`kotlinx.coroutines.j1$b` @kind object;
  #L1e3f34.  v1:= v3.`kotlinx.coroutines.j1$a.l` @type ^`kotlinx.coroutines.m` @kind object;
  #L1e3f38.  v2:= v3.`kotlinx.coroutines.j1$a.m` @type ^`java.lang.Object` @kind object;
  #L1e3f3c.  call `access$continueCompleting`(v4, v0, v1, v2) @signature `Lkotlinx/coroutines/j1;.access$continueCompleting:(Lkotlinx/coroutines/j1;Lkotlinx/coroutines/j1$b;Lkotlinx/coroutines/m;Ljava/lang/Object;)V` @kind static;
  #L1e3f42.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.j1$a` v2 @kind this) @signature `Lkotlinx/coroutines/j1$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e3ea8.  v0:= new `java.lang.StringBuilder`;
  #L1e3eac.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1e3eb2.  v1:= "ChildCompletion[" @kind object;
  #L1e3eb6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e3ebc.  v1:= v2.`kotlinx.coroutines.j1$a.l` @type ^`kotlinx.coroutines.m` @kind object;
  #L1e3ec0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e3ec6.  v1:= ", " @kind object;
  #L1e3eca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e3ed0.  v1:= v2.`kotlinx.coroutines.j1$a.m` @type ^`java.lang.Object` @kind object;
  #L1e3ed4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e3eda.  v1:= 93I;
  #L1e3ede.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1e3ee4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1e3eea.  v0:= temp @kind object;
  #L1e3eec.  return v0 @kind object;
}
