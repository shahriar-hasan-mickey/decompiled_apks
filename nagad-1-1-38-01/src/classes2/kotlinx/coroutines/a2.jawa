record `kotlinx.coroutines.a2` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.t.a` @kind class {
  `boolean` `kotlinx.coroutines.a2.f` @AccessFlag PUBLIC;
}
global `kotlinx.coroutines.a2$a` `@@kotlinx.coroutines.a2.g` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/a2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1e6520.  v0:= new `kotlinx.coroutines.a2$a`;
  #L1e6524.  v1:= 0I;
  #L1e6526.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/a2$a;.<init>:(Lkotlin/v/c/f;)V` @kind direct;
  #L1e652c.  `@@kotlinx.coroutines.a2.g` @type ^`kotlinx.coroutines.a2$a` := v0 @kind object;
  #L1e6530.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.a2` v1 @kind this) @signature `Lkotlinx/coroutines/a2;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1e6544.  v0:= `@@kotlinx.coroutines.a2.g` @type ^`kotlinx.coroutines.a2$a` @kind object;
  #L1e6548.  call `<init>`(v1, v0) @signature `Lkotlin/t/a;.<init>:(Lkotlin/t/g$c;)V` @kind direct;
  #L1e654e.  return @kind void;
}
