record `org.eclipse.paho.client.mqttv3.MqttConnectOptions` @kind class @AccessFlag PUBLIC {
  `int` `org.eclipse.paho.client.mqttv3.MqttConnectOptions.MqttVersion` @AccessFlag PRIVATE;
  `boolean` `org.eclipse.paho.client.mqttv3.MqttConnectOptions.automaticReconnect` @AccessFlag PRIVATE;
  `boolean` `org.eclipse.paho.client.mqttv3.MqttConnectOptions.cleanSession` @AccessFlag PRIVATE;
  `int` `org.eclipse.paho.client.mqttv3.MqttConnectOptions.connectionTimeout` @AccessFlag PRIVATE;
  `int` `org.eclipse.paho.client.mqttv3.MqttConnectOptions.keepAliveInterval` @AccessFlag PRIVATE;
  `int` `org.eclipse.paho.client.mqttv3.MqttConnectOptions.maxInflight` @AccessFlag PRIVATE;
  `char`[] `org.eclipse.paho.client.mqttv3.MqttConnectOptions.password` @AccessFlag PRIVATE;
  `java.lang.String`[] `org.eclipse.paho.client.mqttv3.MqttConnectOptions.serverURIs` @AccessFlag PRIVATE;
  `javax.net.SocketFactory` `org.eclipse.paho.client.mqttv3.MqttConnectOptions.socketFactory` @AccessFlag PRIVATE;
  `java.util.Properties` `org.eclipse.paho.client.mqttv3.MqttConnectOptions.sslClientProps` @AccessFlag PRIVATE;
  `javax.net.ssl.HostnameVerifier` `org.eclipse.paho.client.mqttv3.MqttConnectOptions.sslHostnameVerifier` @AccessFlag PRIVATE;
  `java.lang.String` `org.eclipse.paho.client.mqttv3.MqttConnectOptions.userName` @AccessFlag PRIVATE;
  `java.lang.String` `org.eclipse.paho.client.mqttv3.MqttConnectOptions.willDestination` @AccessFlag PRIVATE;
  `org.eclipse.paho.client.mqttv3.MqttMessage` `org.eclipse.paho.client.mqttv3.MqttConnectOptions.willMessage` @AccessFlag PRIVATE;
}
global `boolean` `@@org.eclipse.paho.client.mqttv3.MqttConnectOptions.CLEAN_SESSION_DEFAULT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.eclipse.paho.client.mqttv3.MqttConnectOptions.CONNECTION_TIMEOUT_DEFAULT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.eclipse.paho.client.mqttv3.MqttConnectOptions.KEEP_ALIVE_INTERVAL_DEFAULT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.eclipse.paho.client.mqttv3.MqttConnectOptions.MAX_INFLIGHT_DEFAULT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.eclipse.paho.client.mqttv3.MqttConnectOptions.MQTT_VERSION_3_1` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.eclipse.paho.client.mqttv3.MqttConnectOptions.MQTT_VERSION_3_1_1` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.eclipse.paho.client.mqttv3.MqttConnectOptions.MQTT_VERSION_DEFAULT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.eclipse.paho.client.mqttv3.MqttConnectOptions.URI_TYPE_LOCAL` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@org.eclipse.paho.client.mqttv3.MqttConnectOptions.URI_TYPE_SSL` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@org.eclipse.paho.client.mqttv3.MqttConnectOptions.URI_TYPE_TCP` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@org.eclipse.paho.client.mqttv3.MqttConnectOptions.URI_TYPE_WS` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@org.eclipse.paho.client.mqttv3.MqttConnectOptions.URI_TYPE_WSS` @AccessFlag PROTECTED_STATIC_FINAL;
procedure `void` `<init>`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v2 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L22a330.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L22a336.  v0:= 60I;
  #L22a33a.  v2.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.keepAliveInterval` @type ^`int` := v0;
  #L22a33e.  v0:= 10I;
  #L22a342.  v2.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.maxInflight` @type ^`int` := v0;
  #L22a346.  v0:= 0I;
  #L22a348.  v2.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.willDestination` @type ^`java.lang.String` := v0 @kind object;
  #L22a34c.  v2.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.willMessage` @type ^`org.eclipse.paho.client.mqttv3.MqttMessage` := v0 @kind object;
  #L22a350.  v2.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.sslClientProps` @type ^`java.util.Properties` := v0 @kind object;
  #L22a354.  v2.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.sslHostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` := v0 @kind object;
  #L22a358.  v1:= 1I;
  #L22a35a.  v2.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.cleanSession` @type ^`boolean` := v1 @kind boolean;
  #L22a35e.  v1:= 30I;
  #L22a362.  v2.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.connectionTimeout` @type ^`int` := v1;
  #L22a366.  v2.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.serverURIs` @type ^`java.lang.String`[] := v0 @kind object;
  #L22a36a.  v0:= 0I;
  #L22a36c.  v2.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.MqttVersion` @type ^`int` := v0;
  #L22a370.  v2.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.automaticReconnect` @type ^`boolean` := v0 @kind boolean;
  #L22a374.  return @kind void;
}
procedure `int` `validateURI`(`java.lang.String` v3 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.validateURI:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L22a044.  v0:= new `java.net.URI`;
  #L22a048.  call `<init>`(v0, v3) @signature `Ljava/net/URI;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22a04e.  v1:= "ws" @kind object;
  #L22a052.  call temp:= `getScheme`(v0) @signature `Ljava/net/URI;.getScheme:()Ljava/lang/String;` @kind virtual;
  #L22a058.  v2:= temp @kind object;
  #L22a05a.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22a060.  v1:= temp;
  #L22a062.  if v1 == 0 then goto L22a06a;
  #L22a066.  v3:= 3I;
  #L22a068.  return v3;
  #L22a06a.  v1:= "wss" @kind object;
  #L22a06e.  call temp:= `getScheme`(v0) @signature `Ljava/net/URI;.getScheme:()Ljava/lang/String;` @kind virtual;
  #L22a074.  v2:= temp @kind object;
  #L22a076.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22a07c.  v1:= temp;
  #L22a07e.  if v1 == 0 then goto L22a086;
  #L22a082.  v3:= 4I;
  #L22a084.  return v3;
  #L22a086.  call temp:= `getPath`(v0) @signature `Ljava/net/URI;.getPath:()Ljava/lang/String;` @kind virtual;
  #L22a08c.  v1:= temp @kind object;
  #L22a08e.  if v1 == 0 then goto L22a0b4;
  #L22a092.  call temp:= `getPath`(v0) @signature `Ljava/net/URI;.getPath:()Ljava/lang/String;` @kind virtual;
  #L22a098.  v1:= temp @kind object;
  #L22a09a.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L22a0a0.  v1:= temp;
  #L22a0a2.  if v1 == 0 then goto L22a0a8;
  #L22a0a6.  goto L22a0b4;
  #L22a0a8.  v0:= new `java.lang.IllegalArgumentException`;
  #L22a0ac.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22a0b2.  throw v0;
  #L22a0b4.  v1:= "tcp" @kind object;
  #L22a0b8.  call temp:= `getScheme`(v0) @signature `Ljava/net/URI;.getScheme:()Ljava/lang/String;` @kind virtual;
  #L22a0be.  v2:= temp @kind object;
  #L22a0c0.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22a0c6.  v1:= temp;
  #L22a0c8.  if v1 == 0 then goto L22a0d0;
  #L22a0cc.  v3:= 0I;
  #L22a0ce.  return v3;
  #L22a0d0.  v1:= "ssl" @kind object;
  #L22a0d4.  call temp:= `getScheme`(v0) @signature `Ljava/net/URI;.getScheme:()Ljava/lang/String;` @kind virtual;
  #L22a0da.  v2:= temp @kind object;
  #L22a0dc.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22a0e2.  v1:= temp;
  #L22a0e4.  if v1 == 0 then goto L22a0ec;
  #L22a0e8.  v3:= 1I;
  #L22a0ea.  return v3;
  #L22a0ec.  v1:= "local" @kind object;
  #L22a0f0.  call temp:= `getScheme`(v0) @signature `Ljava/net/URI;.getScheme:()Ljava/lang/String;` @kind virtual;
  #L22a0f6.  v0:= temp @kind object;
  #L22a0f8.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22a0fe.  v0:= temp;
  #L22a100.  if v0 == 0 then goto L22a108;
  #L22a104.  v3:= 2I;
  #L22a106.  return v3;
  #L22a108.  v0:= new `java.lang.IllegalArgumentException`;
  #L22a10c.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22a112.  throw v0;
  #L22a114.  v0:= new `java.lang.IllegalArgumentException`;
  #L22a118.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L22a11e.  throw v0;
  catch `java.net.URISyntaxException` @[L22a044..L22a114] goto L22a114;
}
procedure `void` `validateWill`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.validateWill:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;

  #L22a5c8.  if v1 == 0 then goto L22a5da;
  #L22a5cc.  if v2 == 0 then goto L22a5da;
  #L22a5d0.  v2:= 0I;
  #L22a5d2.  call `validate`(v1, v2) @signature `Lorg/eclipse/paho/client/mqttv3/MqttTopic;.validate:(Ljava/lang/String;Z)V` @kind static;
  #L22a5d8.  return @kind void;
  #L22a5da.  v1:= new `java.lang.IllegalArgumentException`;
  #L22a5de.  call `<init>`(v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L22a5e4.  throw v1;
}
procedure `int` `getConnectionTimeout`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getConnectionTimeout:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L229fe4.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.connectionTimeout` @type ^`int`;
  #L229fe8.  return v0;
}
procedure `java.util.Properties` `getDebug`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v4 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getDebug:()Ljava/util/Properties;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L22a1b0.  v0:= new `java.util.Properties`;
  #L22a1b4.  call `<init>`(v0) @signature `Ljava/util/Properties;.<init>:()V` @kind direct;
  #L22a1ba.  v1:= new `java.lang.Integer`;
  #L22a1be.  call temp:= `getMqttVersion`(v4) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getMqttVersion:()I` @kind virtual;
  #L22a1c4.  v2:= temp;
  #L22a1c6.  call `<init>`(v1, v2) @signature `Ljava/lang/Integer;.<init>:(I)V` @kind direct;
  #L22a1cc.  v2:= "MqttVersion" @kind object;
  #L22a1d0.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L22a1d6.  call temp:= `isCleanSession`(v4) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.isCleanSession:()Z` @kind virtual;
  #L22a1dc.  v1:= temp;
  #L22a1de.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L22a1e4.  v1:= temp @kind object;
  #L22a1e6.  v2:= "CleanSession" @kind object;
  #L22a1ea.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L22a1f0.  v1:= new `java.lang.Integer`;
  #L22a1f4.  call temp:= `getConnectionTimeout`(v4) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getConnectionTimeout:()I` @kind virtual;
  #L22a1fa.  v2:= temp;
  #L22a1fc.  call `<init>`(v1, v2) @signature `Ljava/lang/Integer;.<init>:(I)V` @kind direct;
  #L22a202.  v2:= "ConTimeout" @kind object;
  #L22a206.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L22a20c.  v1:= new `java.lang.Integer`;
  #L22a210.  call temp:= `getKeepAliveInterval`(v4) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getKeepAliveInterval:()I` @kind virtual;
  #L22a216.  v2:= temp;
  #L22a218.  call `<init>`(v1, v2) @signature `Ljava/lang/Integer;.<init>:(I)V` @kind direct;
  #L22a21e.  v2:= "KeepAliveInterval" @kind object;
  #L22a222.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L22a228.  call temp:= `getUserName`(v4) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getUserName:()Ljava/lang/String;` @kind virtual;
  #L22a22e.  v1:= temp @kind object;
  #L22a230.  v2:= "null" @kind object;
  #L22a234.  if v1 != 0 then goto L22a23c;
  #L22a238.  v1:= v2 @kind object;
  #L22a23a.  goto L22a244;
  #L22a23c.  call temp:= `getUserName`(v4) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getUserName:()Ljava/lang/String;` @kind virtual;
  #L22a242.  v1:= temp @kind object;
  #L22a244.  v3:= "UserName" @kind object;
  #L22a248.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L22a24e.  call temp:= `getWillDestination`(v4) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getWillDestination:()Ljava/lang/String;` @kind virtual;
  #L22a254.  v1:= temp @kind object;
  #L22a256.  if v1 != 0 then goto L22a25e;
  #L22a25a.  v1:= v2 @kind object;
  #L22a25c.  goto L22a266;
  #L22a25e.  call temp:= `getWillDestination`(v4) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getWillDestination:()Ljava/lang/String;` @kind virtual;
  #L22a264.  v1:= temp @kind object;
  #L22a266.  v3:= "WillDestination" @kind object;
  #L22a26a.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L22a270.  call temp:= `getSocketFactory`(v4) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getSocketFactory:()Ljavax/net/SocketFactory;` @kind virtual;
  #L22a276.  v1:= temp @kind object;
  #L22a278.  v3:= "SocketFactory" @kind object;
  #L22a27c.  if v1 != 0 then goto L22a288;
  #L22a280.  call temp:= `put`(v0, v3, v2) @signature `Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L22a286.  goto L22a296;
  #L22a288.  call temp:= `getSocketFactory`(v4) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getSocketFactory:()Ljavax/net/SocketFactory;` @kind virtual;
  #L22a28e.  v1:= temp @kind object;
  #L22a290.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L22a296.  call temp:= `getSSLProperties`(v4) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getSSLProperties:()Ljava/util/Properties;` @kind virtual;
  #L22a29c.  v1:= temp @kind object;
  #L22a29e.  v3:= "SSLProperties" @kind object;
  #L22a2a2.  if v1 != 0 then goto L22a2ae;
  #L22a2a6.  call temp:= `put`(v0, v3, v2) @signature `Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L22a2ac.  goto L22a2bc;
  #L22a2ae.  call temp:= `getSSLProperties`(v4) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getSSLProperties:()Ljava/util/Properties;` @kind virtual;
  #L22a2b4.  v1:= temp @kind object;
  #L22a2b6.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/Properties;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L22a2bc.  return v0 @kind object;
}
procedure `int` `getKeepAliveInterval`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getKeepAliveInterval:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L229ffc.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.keepAliveInterval` @type ^`int`;
  #L22a000.  return v0;
}
procedure `int` `getMaxInflight`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getMaxInflight:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a014.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.maxInflight` @type ^`int`;
  #L22a018.  return v0;
}
procedure `int` `getMqttVersion`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getMqttVersion:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a02c.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.MqttVersion` @type ^`int`;
  #L22a030.  return v0;
}
procedure `char`[] `getPassword`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getPassword:()[C` @AccessFlag PUBLIC {
    temp;
    v0;

  #L229fcc.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.password` @type ^`char`[] @kind object;
  #L229fd0.  return v0 @kind object;
}
procedure `javax.net.ssl.HostnameVerifier` `getSSLHostnameVerifier`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getSSLHostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a300.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.sslHostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L22a304.  return v0 @kind object;
}
procedure `java.util.Properties` `getSSLProperties`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getSSLProperties:()Ljava/util/Properties;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a2d0.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.sslClientProps` @type ^`java.util.Properties` @kind object;
  #L22a2d4.  return v0 @kind object;
}
procedure `java.lang.String`[] `getServerURIs`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getServerURIs:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a198.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.serverURIs` @type ^`java.lang.String`[] @kind object;
  #L22a19c.  return v0 @kind object;
}
procedure `javax.net.SocketFactory` `getSocketFactory`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getSocketFactory:()Ljavax/net/SocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a2e8.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.socketFactory` @type ^`javax.net.SocketFactory` @kind object;
  #L22a2ec.  return v0 @kind object;
}
procedure `java.lang.String` `getUserName`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getUserName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a140.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.userName` @type ^`java.lang.String` @kind object;
  #L22a144.  return v0 @kind object;
}
procedure `java.lang.String` `getWillDestination`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getWillDestination:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a158.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.willDestination` @type ^`java.lang.String` @kind object;
  #L22a15c.  return v0 @kind object;
}
procedure `org.eclipse.paho.client.mqttv3.MqttMessage` `getWillMessage`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getWillMessage:()Lorg/eclipse/paho/client/mqttv3/MqttMessage;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a318.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.willMessage` @type ^`org.eclipse.paho.client.mqttv3.MqttMessage` @kind object;
  #L22a31c.  return v0 @kind object;
}
procedure `boolean` `isAutomaticReconnect`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.isAutomaticReconnect:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L229f9c.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.automaticReconnect` @type ^`boolean` @kind boolean;
  #L229fa0.  return v0;
}
procedure `boolean` `isCleanSession`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.isCleanSession:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L229fb4.  v0:= v1.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.cleanSession` @type ^`boolean` @kind boolean;
  #L229fb8.  return v0;
}
procedure `void` `setAutomaticReconnect`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v0 @kind this, `boolean` v1 ) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setAutomaticReconnect:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L22a388.  v0.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.automaticReconnect` @type ^`boolean` := v1 @kind boolean;
  #L22a38c.  return @kind void;
}
procedure `void` `setCleanSession`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v0 @kind this, `boolean` v1 ) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setCleanSession:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L22a3a0.  v0.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.cleanSession` @type ^`boolean` := v1 @kind boolean;
  #L22a3a4.  return @kind void;
}
procedure `void` `setConnectionTimeout`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v0 @kind this, `int` v1 ) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setConnectionTimeout:(I)V` @AccessFlag PUBLIC {
    temp;

  #L22a3b8.  if v1 < 0 then goto L22a3c2;
  #L22a3bc.  v0.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.connectionTimeout` @type ^`int` := v1;
  #L22a3c0.  return @kind void;
  #L22a3c2.  v1:= new `java.lang.IllegalArgumentException`;
  #L22a3c6.  call `<init>`(v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L22a3cc.  throw v1;
}
procedure `void` `setKeepAliveInterval`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v0 @kind this, `int` v1 ) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setKeepAliveInterval:(I)V` @AccessFlag PUBLIC {
    temp;

  #L22a3e0.  if v1 < 0 then goto L22a3ea;
  #L22a3e4.  v0.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.keepAliveInterval` @type ^`int` := v1;
  #L22a3e8.  return @kind void;
  #L22a3ea.  v1:= new `java.lang.IllegalArgumentException`;
  #L22a3ee.  call `<init>`(v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L22a3f4.  throw v1;
}
procedure `void` `setMaxInflight`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v0 @kind this, `int` v1 ) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setMaxInflight:(I)V` @AccessFlag PUBLIC {
    temp;

  #L22a408.  if v1 < 0 then goto L22a412;
  #L22a40c.  v0.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.maxInflight` @type ^`int` := v1;
  #L22a410.  return @kind void;
  #L22a412.  v1:= new `java.lang.IllegalArgumentException`;
  #L22a416.  call `<init>`(v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L22a41c.  throw v1;
}
procedure `void` `setMqttVersion`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this, `int` v2 ) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setMqttVersion:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a430.  if v2 == 0 then goto L22a44e;
  #L22a434.  v0:= 3I;
  #L22a436.  if v2 == v0 then goto L22a44e;
  #L22a43a.  v0:= 4I;
  #L22a43c.  if v2 != v0 then goto L22a442;
  #L22a440.  goto L22a44e;
  #L22a442.  v2:= new `java.lang.IllegalArgumentException`;
  #L22a446.  call `<init>`(v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L22a44c.  throw v2;
  #L22a44e.  v1.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.MqttVersion` @type ^`int` := v2;
  #L22a452.  return @kind void;
}
procedure `void` `setPassword`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v0 @kind this, `char`[] v1 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setPassword:([C)V` @AccessFlag PUBLIC {
    temp;

  #L22a464.  v0.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.password` @type ^`char`[] := v1 @kind object;
  #L22a468.  return @kind void;
}
procedure `void` `setSSLHostnameVerifier`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v0 @kind this, `javax.net.ssl.HostnameVerifier` v1 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setSSLHostnameVerifier:(Ljavax/net/ssl/HostnameVerifier;)V` @AccessFlag PUBLIC {
    temp;

  #L22a47c.  v0.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.sslHostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` := v1 @kind object;
  #L22a480.  return @kind void;
}
procedure `void` `setSSLProperties`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v0 @kind this, `java.util.Properties` v1 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setSSLProperties:(Ljava/util/Properties;)V` @AccessFlag PUBLIC {
    temp;

  #L22a494.  v0.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.sslClientProps` @type ^`java.util.Properties` := v1 @kind object;
  #L22a498.  return @kind void;
}
procedure `void` `setServerURIs`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v2 @kind this, `java.lang.String`[] v3 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setServerURIs:([Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22a4ac.  v0:= 0I;
  #L22a4ae.  v1:= length @variable v3;
  #L22a4b0.  if v0 < v1 then goto L22a4ba;
  #L22a4b4.  v2.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.serverURIs` @type ^`java.lang.String`[] := v3 @kind object;
  #L22a4b8.  return @kind void;
  #L22a4ba.  v1:= v3[v0] @kind object;
  #L22a4be.  call temp:= `validateURI`(v1) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.validateURI:(Ljava/lang/String;)I` @kind static;
  #L22a4c4.  v0:= v0 + 1;
  #L22a4c8.  goto L22a4ae;
}
procedure `void` `setSocketFactory`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v0 @kind this, `javax.net.SocketFactory` v1 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setSocketFactory:(Ljavax/net/SocketFactory;)V` @AccessFlag PUBLIC {
    temp;

  #L22a4dc.  v0.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.socketFactory` @type ^`javax.net.SocketFactory` := v1 @kind object;
  #L22a4e0.  return @kind void;
}
procedure `void` `setUserName`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setUserName:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22a4f4.  if v3 == 0 then goto L22a51e;
  #L22a4f8.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L22a4fe.  v0:= temp @kind object;
  #L22a500.  v1:= "" @kind object;
  #L22a504.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L22a50a.  v0:= temp;
  #L22a50c.  if v0 != 0 then goto L22a512;
  #L22a510.  goto L22a51e;
  #L22a512.  v3:= new `java.lang.IllegalArgumentException`;
  #L22a516.  call `<init>`(v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L22a51c.  throw v3;
  #L22a51e.  v2.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.userName` @type ^`java.lang.String` := v3 @kind object;
  #L22a522.  return @kind void;
}
procedure `void` `setWill`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v0 @kind this, `java.lang.String` v1 @kind object, `org.eclipse.paho.client.mqttv3.MqttMessage` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setWill:(Ljava/lang/String;Lorg/eclipse/paho/client/mqttv3/MqttMessage;IZ)V` @AccessFlag PROTECTED {
    temp;

  #L22a55c.  v0.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.willDestination` @type ^`java.lang.String` := v1 @kind object;
  #L22a560.  v0.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.willMessage` @type ^`org.eclipse.paho.client.mqttv3.MqttMessage` := v2 @kind object;
  #L22a564.  v1:= v0.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.willMessage` @type ^`org.eclipse.paho.client.mqttv3.MqttMessage` @kind object;
  #L22a568.  call `setQos`(v1, v3) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.setQos:(I)V` @kind virtual;
  #L22a56e.  v1:= v0.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.willMessage` @type ^`org.eclipse.paho.client.mqttv3.MqttMessage` @kind object;
  #L22a572.  call `setRetained`(v1, v4) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.setRetained:(Z)V` @kind virtual;
  #L22a578.  v1:= v0.`org.eclipse.paho.client.mqttv3.MqttConnectOptions.willMessage` @type ^`org.eclipse.paho.client.mqttv3.MqttMessage` @kind object;
  #L22a57c.  v2:= 0I;
  #L22a57e.  call `setMutable`(v1, v2) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.setMutable:(Z)V` @kind virtual;
  #L22a584.  return @kind void;
}
procedure `void` `setWill`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this, `java.lang.String` v2 @kind object, `byte`[] v3 @kind object, `int` v4 , `boolean` v5 ) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setWill:(Ljava/lang/String;[BIZ)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a534.  call `validateWill`(v1, v2, v3) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.validateWill:(Ljava/lang/String;Ljava/lang/Object;)V` @kind direct;
  #L22a53a.  v0:= new `org.eclipse.paho.client.mqttv3.MqttMessage`;
  #L22a53e.  call `<init>`(v0, v3) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.<init>:([B)V` @kind direct;
  #L22a544.  call `setWill`(v1, v2, v0, v4, v5) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setWill:(Ljava/lang/String;Lorg/eclipse/paho/client/mqttv3/MqttMessage;IZ)V` @kind virtual;
  #L22a54a.  return @kind void;
}
procedure `void` `setWill`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v1 @kind this, `org.eclipse.paho.client.mqttv3.MqttTopic` v2 @kind object, `byte`[] v3 @kind object, `int` v4 , `boolean` v5 ) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setWill:(Lorg/eclipse/paho/client/mqttv3/MqttTopic;[BIZ)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L22a598.  call temp:= `getName`(v2) @signature `Lorg/eclipse/paho/client/mqttv3/MqttTopic;.getName:()Ljava/lang/String;` @kind virtual;
  #L22a59e.  v2:= temp @kind object;
  #L22a5a0.  call `validateWill`(v1, v2, v3) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.validateWill:(Ljava/lang/String;Ljava/lang/Object;)V` @kind direct;
  #L22a5a6.  v0:= new `org.eclipse.paho.client.mqttv3.MqttMessage`;
  #L22a5aa.  call `<init>`(v0, v3) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.<init>:([B)V` @kind direct;
  #L22a5b0.  call `setWill`(v1, v2, v0, v4, v5) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.setWill:(Ljava/lang/String;Lorg/eclipse/paho/client/mqttv3/MqttMessage;IZ)V` @kind virtual;
  #L22a5b6.  return @kind void;
}
procedure `java.lang.String` `toString`(`org.eclipse.paho.client.mqttv3.MqttConnectOptions` v2 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L22a170.  call temp:= `getDebug`(v2) @signature `Lorg/eclipse/paho/client/mqttv3/MqttConnectOptions;.getDebug:()Ljava/util/Properties;` @kind virtual;
  #L22a176.  v0:= temp @kind object;
  #L22a178.  v1:= "Connection options" @kind object;
  #L22a17c.  call temp:= `dumpProperties`(v0, v1) @signature `Lorg/eclipse/paho/client/mqttv3/util/Debug;.dumpProperties:(Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L22a182.  v0:= temp @kind object;
  #L22a184.  return v0 @kind object;
}
