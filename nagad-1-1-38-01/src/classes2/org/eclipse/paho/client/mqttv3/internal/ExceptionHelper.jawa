record `org.eclipse.paho.client.mqttv3.internal.ExceptionHelper` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`org.eclipse.paho.client.mqttv3.internal.ExceptionHelper` v0 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/internal/ExceptionHelper;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2315b8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2315be.  return @kind void;
}
procedure `org.eclipse.paho.client.mqttv3.MqttException` `createMqttException`(`int` v1 ) @signature `Lorg/eclipse/paho/client/mqttv3/internal/ExceptionHelper;.createMqttException:(I)Lorg/eclipse/paho/client/mqttv3/MqttException;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L231538.  v0:= 4I;
  #L23153a.  if v1 == v0 then goto L231552;
  #L23153e.  v0:= 5I;
  #L231540.  if v1 != v0 then goto L231546;
  #L231544.  goto L231552;
  #L231546.  v0:= new `org.eclipse.paho.client.mqttv3.MqttException`;
  #L23154a.  call `<init>`(v0, v1) @signature `Lorg/eclipse/paho/client/mqttv3/MqttException;.<init>:(I)V` @kind direct;
  #L231550.  return v0 @kind object;
  #L231552.  v0:= new `org.eclipse.paho.client.mqttv3.MqttSecurityException`;
  #L231556.  call `<init>`(v0, v1) @signature `Lorg/eclipse/paho/client/mqttv3/MqttSecurityException;.<init>:(I)V` @kind direct;
  #L23155c.  return v0 @kind object;
}
procedure `org.eclipse.paho.client.mqttv3.MqttException` `createMqttException`(`java.lang.Throwable` v2 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/internal/ExceptionHelper;.createMqttException:(Ljava/lang/Throwable;)Lorg/eclipse/paho/client/mqttv3/MqttException;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L231570.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L231576.  v0:= temp @kind object;
  #L231578.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L23157e.  v0:= temp @kind object;
  #L231580.  v1:= "java.security.GeneralSecurityException" @kind object;
  #L231584.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L23158a.  v0:= temp;
  #L23158c.  if v0 == 0 then goto L23159c;
  #L231590.  v0:= new `org.eclipse.paho.client.mqttv3.MqttSecurityException`;
  #L231594.  call `<init>`(v0, v2) @signature `Lorg/eclipse/paho/client/mqttv3/MqttSecurityException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L23159a.  return v0 @kind object;
  #L23159c.  v0:= new `org.eclipse.paho.client.mqttv3.MqttException`;
  #L2315a0.  call `<init>`(v0, v2) @signature `Lorg/eclipse/paho/client/mqttv3/MqttException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2315a6.  return v0 @kind object;
}
procedure `boolean` `isClassAvailable`(`java.lang.String` v0 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/internal/ExceptionHelper;.isClassAvailable:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L231508.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L23150e.  v0:= 1I;
  #L231510.  goto L231514;
  #L231512.  v0:= 0I;
  #L231514.  return v0;
  catch `java.lang.ClassNotFoundException` @[L231508..L23150e] goto L231512;
}
