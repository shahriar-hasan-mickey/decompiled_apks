record `org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect` @kind class @AccessFlag PUBLIC extends `org.eclipse.paho.client.mqttv3.internal.wire.MqttWireMessage` @kind class {
  `int` `org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.MqttVersion` @AccessFlag PRIVATE;
  `boolean` `org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.cleanSession` @AccessFlag PRIVATE;
  `java.lang.String` `org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.clientId` @AccessFlag PRIVATE;
  `int` `org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.keepAliveInterval` @AccessFlag PRIVATE;
  `char`[] `org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.password` @AccessFlag PRIVATE;
  `java.lang.String` `org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.userName` @AccessFlag PRIVATE;
  `java.lang.String` `org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.willDestination` @AccessFlag PRIVATE;
  `org.eclipse.paho.client.mqttv3.MqttMessage` `org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.willMessage` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.KEY` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect` v0 @kind this, `byte` v1 , `byte`[] v2 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/internal/wire/MqttConnect;.<init>:(B[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L235214.  v1:= 1I;
  #L235216.  call `<init>`(v0, v1) @signature `Lorg/eclipse/paho/client/mqttv3/internal/wire/MqttWireMessage;.<init>:(B)V` @kind direct;
  #L23521c.  v1:= new `java.io.ByteArrayInputStream`;
  #L235220.  call `<init>`(v1, v2) @signature `Ljava/io/ByteArrayInputStream;.<init>:([B)V` @kind direct;
  #L235226.  v2:= new `java.io.DataInputStream`;
  #L23522a.  call `<init>`(v2, v1) @signature `Ljava/io/DataInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L235230.  call temp:= `decodeUTF8`(v0, v2) @signature `Lorg/eclipse/paho/client/mqttv3/internal/wire/MqttWireMessage;.decodeUTF8:(Ljava/io/DataInputStream;)Ljava/lang/String;` @kind virtual;
  #L235236.  call temp:= `readByte`(v2) @signature `Ljava/io/DataInputStream;.readByte:()B` @kind virtual;
  #L23523c.  call temp:= `readByte`(v2) @signature `Ljava/io/DataInputStream;.readByte:()B` @kind virtual;
  #L235242.  call temp:= `readUnsignedShort`(v2) @signature `Ljava/io/DataInputStream;.readUnsignedShort:()I` @kind virtual;
  #L235248.  v1:= temp;
  #L23524a.  v0.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.keepAliveInterval` @type ^`int` := v1;
  #L23524e.  call temp:= `decodeUTF8`(v0, v2) @signature `Lorg/eclipse/paho/client/mqttv3/internal/wire/MqttWireMessage;.decodeUTF8:(Ljava/io/DataInputStream;)Ljava/lang/String;` @kind virtual;
  #L235254.  v1:= temp @kind object;
  #L235256.  v0.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.clientId` @type ^`java.lang.String` := v1 @kind object;
  #L23525a.  call `close`(v2) @signature `Ljava/io/DataInputStream;.close:()V` @kind virtual;
  #L235260.  return @kind void;
}
procedure `void` `<init>`(`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 , `boolean` v4 , `int` v5 , `java.lang.String` v6 @kind object, `char`[] v7 @kind object, `org.eclipse.paho.client.mqttv3.MqttMessage` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/internal/wire/MqttConnect;.<init>:(Ljava/lang/String;IZILjava/lang/String;[CLorg/eclipse/paho/client/mqttv3/MqttMessage;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L235274.  v0:= 1I;
  #L235276.  call `<init>`(v1, v0) @signature `Lorg/eclipse/paho/client/mqttv3/internal/wire/MqttWireMessage;.<init>:(B)V` @kind direct;
  #L23527c.  v1.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.clientId` @type ^`java.lang.String` := v2 @kind object;
  #L235280.  v1.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.cleanSession` @type ^`boolean` := v4 @kind boolean;
  #L235284.  v1.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.keepAliveInterval` @type ^`int` := v5;
  #L235288.  v1.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.userName` @type ^`java.lang.String` := v6 @kind object;
  #L23528c.  v1.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.password` @type ^`char`[] := v7 @kind object;
  #L235290.  v1.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.willMessage` @type ^`org.eclipse.paho.client.mqttv3.MqttMessage` := v8 @kind object;
  #L235294.  v1.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.willDestination` @type ^`java.lang.String` := v9 @kind object;
  #L235298.  v1.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.MqttVersion` @type ^`int` := v3;
  #L23529c.  return @kind void;
}
procedure `java.lang.String` `getKey`(`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/internal/wire/MqttConnect;.getKey:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2351a0.  v0:= "Con" @kind object;
  #L2351a4.  return v0 @kind object;
}
procedure `byte` `getMessageInfo`(`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/internal/wire/MqttConnect;.getMessageInfo:()B` @AccessFlag PROTECTED {
    temp;
    v0;

  #L234fd0.  v0:= 0I;
  #L234fd2.  return v0;
}
procedure `byte`[] `getPayload`(`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect` v4 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/internal/wire/MqttConnect;.getPayload:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L234fe4.  v0:= new `java.io.ByteArrayOutputStream`;
  #L234fe8.  call `<init>`(v0) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L234fee.  v1:= new `java.io.DataOutputStream`;
  #L234ff2.  call `<init>`(v1, v0) @signature `Ljava/io/DataOutputStream;.<init>:(Ljava/io/OutputStream;)V` @kind direct;
  #L234ff8.  v2:= v4.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.clientId` @type ^`java.lang.String` @kind object;
  #L234ffc.  call `encodeUTF8`(v4, v1, v2) @signature `Lorg/eclipse/paho/client/mqttv3/internal/wire/MqttWireMessage;.encodeUTF8:(Ljava/io/DataOutputStream;Ljava/lang/String;)V` @kind virtual;
  #L235002.  v2:= v4.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.willMessage` @type ^`org.eclipse.paho.client.mqttv3.MqttMessage` @kind object;
  #L235006.  if v2 == 0 then goto L23503a;
  #L23500a.  v2:= v4.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.willDestination` @type ^`java.lang.String` @kind object;
  #L23500e.  call `encodeUTF8`(v4, v1, v2) @signature `Lorg/eclipse/paho/client/mqttv3/internal/wire/MqttWireMessage;.encodeUTF8:(Ljava/io/DataOutputStream;Ljava/lang/String;)V` @kind virtual;
  #L235014.  v2:= v4.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.willMessage` @type ^`org.eclipse.paho.client.mqttv3.MqttMessage` @kind object;
  #L235018.  call temp:= `getPayload`(v2) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.getPayload:()[B` @kind virtual;
  #L23501e.  v2:= temp @kind object;
  #L235020.  v2:= length @variable v2;
  #L235022.  call `writeShort`(v1, v2) @signature `Ljava/io/DataOutputStream;.writeShort:(I)V` @kind virtual;
  #L235028.  v2:= v4.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.willMessage` @type ^`org.eclipse.paho.client.mqttv3.MqttMessage` @kind object;
  #L23502c.  call temp:= `getPayload`(v2) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.getPayload:()[B` @kind virtual;
  #L235032.  v2:= temp @kind object;
  #L235034.  call `write`(v1, v2) @signature `Ljava/io/DataOutputStream;.write:([B)V` @kind virtual;
  #L23503a.  v2:= v4.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.userName` @type ^`java.lang.String` @kind object;
  #L23503e.  if v2 == 0 then goto L235068;
  #L235042.  v2:= v4.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.userName` @type ^`java.lang.String` @kind object;
  #L235046.  call `encodeUTF8`(v4, v1, v2) @signature `Lorg/eclipse/paho/client/mqttv3/internal/wire/MqttWireMessage;.encodeUTF8:(Ljava/io/DataOutputStream;Ljava/lang/String;)V` @kind virtual;
  #L23504c.  v2:= v4.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.password` @type ^`char`[] @kind object;
  #L235050.  if v2 == 0 then goto L235068;
  #L235054.  v2:= new `java.lang.String`;
  #L235058.  v3:= v4.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.password` @type ^`char`[] @kind object;
  #L23505c.  call `<init>`(v2, v3) @signature `Ljava/lang/String;.<init>:([C)V` @kind direct;
  #L235062.  call `encodeUTF8`(v4, v1, v2) @signature `Lorg/eclipse/paho/client/mqttv3/internal/wire/MqttWireMessage;.encodeUTF8:(Ljava/io/DataOutputStream;Ljava/lang/String;)V` @kind virtual;
  #L235068.  call `flush`(v1) @signature `Ljava/io/DataOutputStream;.flush:()V` @kind virtual;
  #L23506e.  call temp:= `toByteArray`(v0) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L235074.  v0:= temp @kind object;
  #L235076.  return v0 @kind object;
  #L235078.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L23507a.  v1:= new `org.eclipse.paho.client.mqttv3.MqttException`;
  #L23507e.  call `<init>`(v1, v0) @signature `Lorg/eclipse/paho/client/mqttv3/MqttException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L235084.  throw v1;
  catch `java.io.IOException` @[L234fe4..L235076] goto L235078;
}
procedure `byte`[] `getVariableHeader`(`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect` v5 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/internal/wire/MqttConnect;.getVariableHeader:()[B` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2350a8.  v0:= new `java.io.ByteArrayOutputStream`;
  #L2350ac.  call `<init>`(v0) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L2350b2.  v1:= new `java.io.DataOutputStream`;
  #L2350b6.  call `<init>`(v1, v0) @signature `Ljava/io/DataOutputStream;.<init>:(Ljava/io/OutputStream;)V` @kind direct;
  #L2350bc.  v2:= v5.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.MqttVersion` @type ^`int`;
  #L2350c0.  v3:= 3I;
  #L2350c2.  if v2 != v3 then goto L2350d2;
  #L2350c6.  v2:= "MQIsdp" @kind object;
  #L2350ca.  call `encodeUTF8`(v5, v1, v2) @signature `Lorg/eclipse/paho/client/mqttv3/internal/wire/MqttWireMessage;.encodeUTF8:(Ljava/io/DataOutputStream;Ljava/lang/String;)V` @kind virtual;
  #L2350d0.  goto L2350e6;
  #L2350d2.  v2:= v5.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.MqttVersion` @type ^`int`;
  #L2350d6.  v4:= 4I;
  #L2350d8.  if v2 != v4 then goto L2350e6;
  #L2350dc.  v2:= "MQTT" @kind object;
  #L2350e0.  call `encodeUTF8`(v5, v1, v2) @signature `Lorg/eclipse/paho/client/mqttv3/internal/wire/MqttWireMessage;.encodeUTF8:(Ljava/io/DataOutputStream;Ljava/lang/String;)V` @kind virtual;
  #L2350e6.  v2:= v5.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.MqttVersion` @type ^`int`;
  #L2350ea.  call `write`(v1, v2) @signature `Ljava/io/DataOutputStream;.write:(I)V` @kind virtual;
  #L2350f0.  v2:= 0I;
  #L2350f2.  v4:= v5.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.cleanSession` @type ^`boolean` @kind boolean;
  #L2350f6.  if v4 == 0 then goto L2350fe;
  #L2350fa.  v2:= 2I;
  #L2350fc.  v2:= (`byte`) v2 @kind i2b;
  #L2350fe.  v4:= v5.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.willMessage` @type ^`org.eclipse.paho.client.mqttv3.MqttMessage` @kind object;
  #L235102.  if v4 == 0 then goto L235136;
  #L235106.  v2:= v2 ^| 4;
  #L23510a.  v2:= (`byte`) v2 @kind i2b;
  #L23510c.  v4:= v5.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.willMessage` @type ^`org.eclipse.paho.client.mqttv3.MqttMessage` @kind object;
  #L235110.  call temp:= `getQos`(v4) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.getQos:()I` @kind virtual;
  #L235116.  v4:= temp;
  #L235118.  v3:= v4 ^< 3;
  #L23511c.  v2:= v2 ^| v3 @kind int;
  #L23511e.  v2:= (`byte`) v2 @kind i2b;
  #L235120.  v3:= v5.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.willMessage` @type ^`org.eclipse.paho.client.mqttv3.MqttMessage` @kind object;
  #L235124.  call temp:= `isRetained`(v3) @signature `Lorg/eclipse/paho/client/mqttv3/MqttMessage;.isRetained:()Z` @kind virtual;
  #L23512a.  v3:= temp;
  #L23512c.  if v3 == 0 then goto L235136;
  #L235130.  v2:= v2 ^| 32;
  #L235134.  v2:= (`byte`) v2 @kind i2b;
  #L235136.  v3:= v5.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.userName` @type ^`java.lang.String` @kind object;
  #L23513a.  if v3 == 0 then goto L235152;
  #L23513e.  v2:= v2 ^| 128;
  #L235142.  v2:= (`byte`) v2 @kind i2b;
  #L235144.  v3:= v5.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.password` @type ^`char`[] @kind object;
  #L235148.  if v3 == 0 then goto L235152;
  #L23514c.  v2:= v2 ^| 64;
  #L235150.  v2:= (`byte`) v2 @kind i2b;
  #L235152.  call `write`(v1, v2) @signature `Ljava/io/DataOutputStream;.write:(I)V` @kind virtual;
  #L235158.  v2:= v5.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.keepAliveInterval` @type ^`int`;
  #L23515c.  call `writeShort`(v1, v2) @signature `Ljava/io/DataOutputStream;.writeShort:(I)V` @kind virtual;
  #L235162.  call `flush`(v1) @signature `Ljava/io/DataOutputStream;.flush:()V` @kind virtual;
  #L235168.  call temp:= `toByteArray`(v0) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L23516e.  v0:= temp @kind object;
  #L235170.  return v0 @kind object;
  #L235172.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L235174.  v1:= new `org.eclipse.paho.client.mqttv3.MqttException`;
  #L235178.  call `<init>`(v1, v0) @signature `Lorg/eclipse/paho/client/mqttv3/MqttException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L23517e.  throw v1;
  catch `java.io.IOException` @[L2350a8..L235170] goto L235172;
}
procedure `boolean` `isCleanSession`(`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/internal/wire/MqttConnect;.isCleanSession:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L234fa4.  v0:= v1.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.cleanSession` @type ^`boolean` @kind boolean;
  #L234fa8.  return v0;
}
procedure `boolean` `isMessageIdRequired`(`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect` v1 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/internal/wire/MqttConnect;.isMessageIdRequired:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L234fbc.  v0:= 0I;
  #L234fbe.  return v0;
}
procedure `java.lang.String` `toString`(`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect` v2 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/internal/wire/MqttConnect;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2351b8.  call temp:= `toString`(v2) @signature `Lorg/eclipse/paho/client/mqttv3/internal/wire/MqttWireMessage;.toString:()Ljava/lang/String;` @kind super;
  #L2351be.  v0:= temp @kind object;
  #L2351c0.  v1:= new `java.lang.StringBuilder`;
  #L2351c4.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2351ca.  v0:= temp @kind object;
  #L2351cc.  call `<init>`(v1, v0) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2351d2.  v0:= " clientId " @kind object;
  #L2351d6.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2351dc.  v0:= v2.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.clientId` @type ^`java.lang.String` @kind object;
  #L2351e0.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2351e6.  v0:= " keepAliveInterval " @kind object;
  #L2351ea.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2351f0.  v0:= v2.`org.eclipse.paho.client.mqttv3.internal.wire.MqttConnect.keepAliveInterval` @type ^`int`;
  #L2351f4.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2351fa.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L235200.  v0:= temp @kind object;
  #L235202.  return v0 @kind object;
}
