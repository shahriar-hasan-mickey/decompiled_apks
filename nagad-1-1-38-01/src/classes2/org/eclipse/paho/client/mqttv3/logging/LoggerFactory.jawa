record `org.eclipse.paho.client.mqttv3.logging.LoggerFactory` @kind class @AccessFlag PUBLIC {
}
global `java.lang.String` `@@org.eclipse.paho.client.mqttv3.logging.LoggerFactory.CLASS_NAME` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@org.eclipse.paho.client.mqttv3.logging.LoggerFactory.MQTT_CLIENT_MSG_CAT` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@org.eclipse.paho.client.mqttv3.logging.LoggerFactory.jsr47LoggerClassName` @AccessFlag PRIVATE_STATIC;
global `java.lang.String` `@@org.eclipse.paho.client.mqttv3.logging.LoggerFactory.overrideloggerClassName` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lorg/eclipse/paho/client/mqttv3/logging/LoggerFactory;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L237620.  v0:= constclass @type ^`org.eclipse.paho.client.mqttv3.logging.JSR47Logger` @kind object;
  #L237624.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L23762a.  v0:= temp @kind object;
  #L23762c.  `@@org.eclipse.paho.client.mqttv3.logging.LoggerFactory.jsr47LoggerClassName` @type ^`java.lang.String` := v0 @kind object;
  #L237630.  return @kind void;
}
procedure `void` `<init>`(`org.eclipse.paho.client.mqttv3.logging.LoggerFactory` v0 @kind this) @signature `Lorg/eclipse/paho/client/mqttv3/logging/LoggerFactory;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L237644.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23764a.  return @kind void;
}
procedure `org.eclipse.paho.client.mqttv3.logging.Logger` `getLogger`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/logging/LoggerFactory;.getLogger:(Ljava/lang/String;Ljava/lang/String;)Lorg/eclipse/paho/client/mqttv3/logging/Logger;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L237574.  v0:= `@@org.eclipse.paho.client.mqttv3.logging.LoggerFactory.overrideloggerClassName` @type ^`java.lang.String` @kind object;
  #L237578.  if v0 != 0 then goto L237580;
  #L23757c.  v0:= `@@org.eclipse.paho.client.mqttv3.logging.LoggerFactory.jsr47LoggerClassName` @type ^`java.lang.String` @kind object;
  #L237580.  call temp:= `getBundle`(v2) @signature `Ljava/util/ResourceBundle;.getBundle:(Ljava/lang/String;)Ljava/util/ResourceBundle;` @kind static;
  #L237586.  v2:= temp @kind object;
  #L237588.  v1:= 0I;
  #L23758a.  call temp:= `getLogger`(v0, v2, v3, v1) @signature `Lorg/eclipse/paho/client/mqttv3/logging/LoggerFactory;.getLogger:(Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/String;)Lorg/eclipse/paho/client/mqttv3/logging/Logger;` @kind static;
  #L237590.  v2:= temp @kind object;
  #L237592.  if v2 == 0 then goto L237598;
  #L237596.  return v2 @kind object;
  #L237598.  v2:= new `java.util.MissingResourceException`;
  #L23759c.  v0:= `@@org.eclipse.paho.client.mqttv3.logging.LoggerFactory.CLASS_NAME` @type ^`java.lang.String` @kind object;
  #L2375a0.  v1:= "Error locating the logging class" @kind object;
  #L2375a4.  call `<init>`(v2, v1, v0, v3) @signature `Ljava/util/MissingResourceException;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L2375aa.  throw v2;
}
procedure `org.eclipse.paho.client.mqttv3.logging.Logger` `getLogger`(`java.lang.String` v1 @kind object, `java.util.ResourceBundle` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/logging/LoggerFactory;.getLogger:(Ljava/lang/String;Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/String;)Lorg/eclipse/paho/client/mqttv3/logging/Logger;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2375bc.  v0:= 0I;
  #L2375be.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L2375c4.  v1:= temp @kind object;
  #L2375c6.  if v1 == 0 then goto L2375e0;
  #L2375ca.  call temp:= `newInstance`(v1) @signature `Ljava/lang/Class;.newInstance:()Ljava/lang/Object;` @kind virtual;
  #L2375d0.  v1:= temp @kind object;
  #L2375d2.  v1:= (`org.eclipse.paho.client.mqttv3.logging.Logger`) v1 @kind object;
  #L2375d6.  call `initialise`(v1, v2, v3, v4) @signature `Lorg/eclipse/paho/client/mqttv3/logging/Logger;.initialise:(Ljava/util/ResourceBundle;Ljava/lang/String;Ljava/lang/String;)V` @kind interface;
  #L2375dc.  goto L2375e2;
  #L2375de.  return v0 @kind object;
  #L2375e0.  v1:= v0 @kind object;
  #L2375e2.  return v1 @kind object;
  #L2375e4.  return v0 @kind object;
  catch `java.lang.NoClassDefFoundError` @[L2375be..L2375c6] goto L2375e4;
  catch `java.lang.ClassNotFoundException` @[L2375be..L2375c6] goto L2375e4;
  catch `java.lang.IllegalAccessException` @[L2375ca..L2375d6] goto L2375de;
  catch `java.lang.InstantiationException` @[L2375ca..L2375d6] goto L2375de;
  catch `java.lang.ExceptionInInitializerError` @[L2375ca..L2375d6] goto L2375de;
  catch `java.lang.SecurityException` @[L2375ca..L2375d6] goto L2375de;
}
procedure `java.lang.String` `getLoggingProperty`(`java.lang.String` v8 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/logging/LoggerFactory;.getLoggingProperty:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2374f8.  v0:= "java.util.logging.LogManager" @kind object;
  #L2374fc.  v1:= 0I;
  #L2374fe.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L237504.  v0:= temp @kind object;
  #L237506.  v2:= "getLogManager" @kind object;
  #L23750a.  v3:= 0I;
  #L23750c.  v4:= new `java.lang.Class`[v3];
  #L237510.  call temp:= `getMethod`(v0, v2, v4) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L237516.  v2:= temp @kind object;
  #L237518.  call temp:= `invoke`(v2, v1, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L23751e.  v2:= temp @kind object;
  #L237520.  v4:= "getProperty" @kind object;
  #L237524.  v5:= 1I;
  #L237526.  v6:= new `java.lang.Class`[v5];
  #L23752a.  v7:= constclass @type ^`java.lang.String` @kind object;
  #L23752e.  v6[v3]:= v7 @kind object;
  #L237532.  call temp:= `getMethod`(v0, v4, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L237538.  v0:= temp @kind object;
  #L23753a.  v4:= new `java.lang.Object`[v5];
  #L23753e.  v4[v3]:= v8 @kind object;
  #L237542.  call temp:= `invoke`(v0, v2, v4) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L237548.  v8:= temp @kind object;
  #L23754a.  v8:= (`java.lang.String`) v8 @kind object;
  #L23754e.  goto L237552;
  #L237550.  v8:= v1 @kind object;
  #L237552.  return v8 @kind object;
  catch `java.lang.Exception` @[L2374fe..L23754e] goto L237550;
}
procedure `void` `setLogger`(`java.lang.String` v0 @kind object) @signature `Lorg/eclipse/paho/client/mqttv3/logging/LoggerFactory;.setLogger:(Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L23765c.  `@@org.eclipse.paho.client.mqttv3.logging.LoggerFactory.overrideloggerClassName` @type ^`java.lang.String` := v0 @kind object;
  #L237660.  return @kind void;
}
