record `e.b.a.a.a.a.a$b` @kind class @AccessFlag PUBLIC {
  `e.b.a.a.a.a.b.a` `e.b.a.a.a.a.a$b.a` @AccessFlag PRIVATE;
  `java.lang.String` `e.b.a.a.a.a.a$b.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.b.a.a.a.a.a$b` v0 @kind this) @signature `Le/b/a/a/a/a/a$b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L102570.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L102576.  return @kind void;
}
procedure `e.b.a.a.a.a.a` `parse`(`e.b.a.a.a.a.a$b` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Le/b/a/a/a/a/a$b;.parse:(Ljava/lang/String;)Le/b/a/a/a/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L10246c.  v0:= new `e.b.a.a.a.a.b.c`;
  #L102470.  call `<init>`(v0) @signature `Le/b/a/a/a/a/b/c;.<init>:()V` @kind direct;
  #L102476.  v1:= 14I;
  #L10247a.  if v5 == 0 then goto L102528;
  #L10247e.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L102484.  v2:= temp;
  #L102486.  if v2 < v1 then goto L102528;
  #L10248a.  v1:= 0I;
  #L10248c.  v2:= 2I;
  #L10248e.  call temp:= `substring`(v5, v1, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L102494.  v1:= temp @kind object;
  #L102496.  v3:= "00" @kind object;
  #L10249a.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1024a0.  v1:= temp;
  #L1024a2.  if v1 == 0 then goto L102518;
  #L1024a6.  v1:= 4I;
  #L1024a8.  call temp:= `substring`(v5, v2, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1024ae.  v3:= temp @kind object;
  #L1024b0.  call temp:= `parseAsDeLength`(v3) @signature `Le/b/a/a/a/a/b/d;.parseAsDeLength:(Ljava/lang/String;)I` @kind static;
  #L1024b6.  v3:= temp;
  #L1024b8.  if v3 != v2 then goto L102508;
  #L1024bc.  v3:= v3 + v1 @kind int;
  #L1024be.  call temp:= `substring`(v5, v1, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1024c4.  v1:= temp @kind object;
  #L1024c6.  v2:= v4.`e.b.a.a.a.a.a$b.b` @type ^`java.lang.String` @kind object;
  #L1024ca.  if v2 != 0 then goto L1024d8;
  #L1024ce.  call temp:= `validateAndParseQrDefaultCodeSchema`(v0, v1) @signature `Le/b/a/a/a/a/b/c;.validateAndParseQrDefaultCodeSchema:(Ljava/lang/String;)Lcom/konasl/emv/merchant/qr/code/internal/model/b;` @kind virtual;
  #L1024d4.  v0:= temp @kind object;
  #L1024d6.  goto L1024e0;
  #L1024d8.  call temp:= `validateAndParseQrCodeSchema`(v0, v2) @signature `Le/b/a/a/a/a/b/c;.validateAndParseQrCodeSchema:(Ljava/lang/String;)Lcom/konasl/emv/merchant/qr/code/internal/model/b;` @kind virtual;
  #L1024de.  v0:= temp @kind object;
  #L1024e0.  v1:= new `e.b.a.a.a.a.b.a`;
  #L1024e4.  call `<init>`(v1, v0) @signature `Le/b/a/a/a/a/b/a;.<init>:(Lcom/konasl/emv/merchant/qr/code/internal/model/b;)V` @kind direct;
  #L1024ea.  v4.`e.b.a.a.a.a.a$b.a` @type ^`e.b.a.a.a.a.b.a` := v1 @kind object;
  #L1024ee.  v0:= new `e.b.a.a.a.a.a`;
  #L1024f2.  v1:= v4.`e.b.a.a.a.a.a$b.a` @type ^`e.b.a.a.a.a.b.a` @kind object;
  #L1024f6.  call temp:= `parseEncodedQrCode`(v1, v5) @signature `Le/b/a/a/a/a/b/a;.parseEncodedQrCode:(Ljava/lang/String;)Lcom/konasl/emv/merchant/qr/code/internal/model/a;` @kind virtual;
  #L1024fc.  v5:= temp @kind object;
  #L1024fe.  v1:= 0I;
  #L102500.  call `<init>`(v0, v5, v1) @signature `Le/b/a/a/a/a/a;.<init>:(Lcom/konasl/emv/merchant/qr/code/internal/model/a;Le/b/a/a/a/a/a$a;)V` @kind direct;
  #L102506.  return v0 @kind object;
  #L102508.  v5:= new `com.konasl.emv.merchant.qr.code.exception.DeFormatException`;
  #L10250c.  v0:= "Payload format indicator length must be 2 digits" @kind object;
  #L102510.  call `<init>`(v5, v0) @signature `Lcom/konasl/emv/merchant/qr/code/exception/DeFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L102516.  throw v5;
  #L102518.  v5:= new `com.konasl.emv.merchant.qr.code.exception.DeFormatException`;
  #L10251c.  v0:= "The very first data element ID of QR code must be 00" @kind object;
  #L102520.  call `<init>`(v5, v0) @signature `Lcom/konasl/emv/merchant/qr/code/exception/DeFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L102526.  throw v5;
  #L102528.  v5:= new `com.konasl.emv.merchant.qr.code.exception.DeFormatException`;
  #L10252c.  v0:= new `java.lang.StringBuilder`;
  #L102530.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L102536.  v2:= "QR Code must have at least " @kind object;
  #L10253a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L102540.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L102546.  v1:= " chars" @kind object;
  #L10254a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L102550.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L102556.  v0:= temp @kind object;
  #L102558.  call `<init>`(v5, v0) @signature `Lcom/konasl/emv/merchant/qr/code/exception/DeFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10255e.  throw v5;
}
