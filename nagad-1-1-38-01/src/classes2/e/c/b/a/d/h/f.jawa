record `e.c.b.a.d.h.f` @kind class @AccessFlag PUBLIC {
  `e.c.a.a.c` `e.c.b.a.d.h.f.a` @AccessFlag PRIVATE;
  `e.c.a.a.c` `e.c.b.a.d.h.f.b` @AccessFlag PRIVATE;
  `e.c.a.a.c` `e.c.b.a.d.h.f.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.c.b.a.d.h.f` v0 @kind this) @signature `Le/c/b/a/d/h/f;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L162310.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L162316.  return @kind void;
}
procedure `byte` `getRecordNumber`(`e.c.b.a.d.h.f` v2 @kind this) @signature `Le/c/b/a/d/h/f;.getRecordNumber:()B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1622b0.  v0:= v2.`e.c.b.a.d.h.f.a` @type ^`e.c.a.a.c` @kind object;
  #L1622b4.  v1:= 0I;
  #L1622b6.  call temp:= `getByte`(v0, v1) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L1622bc.  v0:= temp;
  #L1622be.  return v0;
}
procedure `e.c.a.a.c` `getRecordValue`(`e.c.b.a.d.h.f` v1 @kind this) @signature `Le/c/b/a/d/h/f;.getRecordValue:()Le/c/a/a/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1622f8.  v0:= v1.`e.c.b.a.d.h.f.c` @type ^`e.c.a.a.c` @kind object;
  #L1622fc.  return v0 @kind object;
}
procedure `byte` `getSFI`(`e.c.b.a.d.h.f` v2 @kind this) @signature `Le/c/b/a/d/h/f;.getSFI:()B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1622d0.  v0:= v2.`e.c.b.a.d.h.f.b` @type ^`e.c.a.a.c` @kind object;
  #L1622d4.  v1:= 0I;
  #L1622d6.  call temp:= `getByte`(v0, v1) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L1622dc.  v0:= temp;
  #L1622de.  v0:= v0 ^> 3;
  #L1622e2.  v0:= (`byte`) v0 @kind i2b;
  #L1622e4.  return v0;
}
procedure `void` `setRecordNumber`(`e.c.b.a.d.h.f` v0 @kind this, `e.c.a.a.c` v1 @kind object) @signature `Le/c/b/a/d/h/f;.setRecordNumber:(Le/c/a/a/c;)V` @AccessFlag PUBLIC {
    temp;

  #L162328.  v0.`e.c.b.a.d.h.f.a` @type ^`e.c.a.a.c` := v1 @kind object;
  #L16232c.  return @kind void;
}
procedure `void` `setRecordValue`(`e.c.b.a.d.h.f` v0 @kind this, `e.c.a.a.c` v1 @kind object) @signature `Le/c/b/a/d/h/f;.setRecordValue:(Le/c/a/a/c;)V` @AccessFlag PUBLIC {
    temp;

  #L162340.  v0.`e.c.b.a.d.h.f.c` @type ^`e.c.a.a.c` := v1 @kind object;
  #L162344.  return @kind void;
}
procedure `void` `setSFI`(`e.c.b.a.d.h.f` v0 @kind this, `e.c.a.a.c` v1 @kind object) @signature `Le/c/b/a/d/h/f;.setSFI:(Le/c/a/a/c;)V` @AccessFlag PUBLIC {
    temp;

  #L162358.  v0.`e.c.b.a.d.h.f.b` @type ^`e.c.a.a.c` := v1 @kind object;
  #L16235c.  return @kind void;
}
procedure `void` `wipe`(`e.c.b.a.d.h.f` v1 @kind this) @signature `Le/c/b/a/d/h/f;.wipe:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L162370.  v0:= v1.`e.c.b.a.d.h.f.a` @type ^`e.c.a.a.c` @kind object;
  #L162374.  call `clearByteArray`(v0) @signature `Le/c/a/d/b;.clearByteArray:(Le/c/a/a/c;)V` @kind static;
  #L16237a.  v0:= v1.`e.c.b.a.d.h.f.c` @type ^`e.c.a.a.c` @kind object;
  #L16237e.  call `clearByteArray`(v0) @signature `Le/c/a/d/b;.clearByteArray:(Le/c/a/a/c;)V` @kind static;
  #L162384.  v0:= v1.`e.c.b.a.d.h.f.b` @type ^`e.c.a.a.c` @kind object;
  #L162388.  call `clearByteArray`(v0) @signature `Le/c/a/d/b;.clearByteArray:(Le/c/a/a/c;)V` @kind static;
  #L16238e.  return @kind void;
}
