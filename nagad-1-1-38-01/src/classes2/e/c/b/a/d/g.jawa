record `e.c.b.a.d.g` @kind class @AccessFlag PUBLIC {
  `long` `e.c.b.a.d.g.a` @AccessFlag PRIVATE;
  `int` `e.c.b.a.d.g.b` @AccessFlag PRIVATE;
  `boolean` `e.c.b.a.d.g.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.c.b.a.d.g` v0 @kind this) @signature `Le/c/b/a/d/g;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1619b8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1619be.  return @kind void;
}
procedure `long` `getAmount`(`e.c.b.a.d.g` v2 @kind this) @signature `Le/c/b/a/d/g;.getAmount:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1619a0.  v0:= v2.`e.c.b.a.d.g.a` @type ^`long` @kind wide;
  #L1619a4.  return v0 @kind wide;
}
procedure `int` `getCurrencyCode`(`e.c.b.a.d.g` v1 @kind this) @signature `Le/c/b/a/d/g;.getCurrencyCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L161988.  v0:= v1.`e.c.b.a.d.g.b` @type ^`int`;
  #L16198c.  return v0;
}
procedure `boolean` `isExactAmount`(`e.c.b.a.d.g` v1 @kind this) @signature `Le/c/b/a/d/g;.isExactAmount:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L161970.  v0:= v1.`e.c.b.a.d.g.c` @type ^`boolean` @kind boolean;
  #L161974.  return v0;
}
procedure `void` `setAmount`(`e.c.b.a.d.g` v0 @kind this, `long` v1 ) @signature `Le/c/b/a/d/g;.setAmount:(J)V` @AccessFlag PUBLIC {
    temp;

  #L1619d0.  v0.`e.c.b.a.d.g.a` @type ^`long` := v1 @kind wide;
  #L1619d4.  return @kind void;
}
procedure `void` `setCurrencyCode`(`e.c.b.a.d.g` v0 @kind this, `int` v1 ) @signature `Le/c/b/a/d/g;.setCurrencyCode:(I)V` @AccessFlag PUBLIC {
    temp;

  #L1619e8.  v0.`e.c.b.a.d.g.b` @type ^`int` := v1;
  #L1619ec.  return @kind void;
}
procedure `void` `setExactAmount`(`e.c.b.a.d.g` v0 @kind this, `boolean` v1 ) @signature `Le/c/b/a/d/g;.setExactAmount:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L161a00.  v0.`e.c.b.a.d.g.c` @type ^`boolean` := v1 @kind boolean;
  #L161a04.  return @kind void;
}
