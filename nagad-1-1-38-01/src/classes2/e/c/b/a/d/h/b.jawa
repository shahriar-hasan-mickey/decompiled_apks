record `e.c.b.a.d.h.b` @kind class @AccessFlag PUBLIC {
  `e.c.a.a.c` `e.c.b.a.d.h.b.a` @AccessFlag PRIVATE;
  `e.c.a.a.c` `e.c.b.a.d.h.b.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.c.b.a.d.h.b` v0 @kind this) @signature `Le/c/b/a/d/h/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L161bec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L161bf2.  return @kind void;
}
procedure `e.c.a.a.c` `getAdditionalCheckTable`(`e.c.b.a.d.h.b` v1 @kind this) @signature `Le/c/b/a/d/h/b;.getAdditionalCheckTable:()Le/c/a/a/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L161b64.  v0:= v1.`e.c.b.a.d.h.b.a` @type ^`e.c.a.a.c` @kind object;
  #L161b68.  return v0 @kind object;
}
procedure `e.c.a.a.c` `getCRM_CountryCode`(`e.c.b.a.d.h.b` v1 @kind this) @signature `Le/c/b/a/d/h/b;.getCRM_CountryCode:()Le/c/a/a/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L161b7c.  v0:= v1.`e.c.b.a.d.h.b.b` @type ^`e.c.a.a.c` @kind object;
  #L161b80.  return v0 @kind object;
}
procedure `void` `setAdditionalCheckTable`(`e.c.b.a.d.h.b` v0 @kind this, `e.c.a.a.c` v1 @kind object) @signature `Le/c/b/a/d/h/b;.setAdditionalCheckTable:(Le/c/a/a/c;)V` @AccessFlag PUBLIC {
    temp;

  #L161c04.  v0.`e.c.b.a.d.h.b.a` @type ^`e.c.a.a.c` := v1 @kind object;
  #L161c08.  return @kind void;
}
procedure `void` `setCRM_CountryCode`(`e.c.b.a.d.h.b` v0 @kind this, `e.c.a.a.c` v1 @kind object) @signature `Le/c/b/a/d/h/b;.setCRM_CountryCode:(Le/c/a/a/c;)V` @AccessFlag PUBLIC {
    temp;

  #L161c1c.  v0.`e.c.b.a.d.h.b.b` @type ^`e.c.a.a.c` := v1 @kind object;
  #L161c20.  return @kind void;
}
procedure `java.lang.String` `toString`(`e.c.b.a.d.h.b` v2 @kind this) @signature `Le/c/b/a/d/h/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L161b94.  v0:= new `java.lang.StringBuilder`;
  #L161b98.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L161b9e.  v1:= "CardRiskManagementData [additionalCheckTable=" @kind object;
  #L161ba2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L161ba8.  v1:= v2.`e.c.b.a.d.h.b.a` @type ^`e.c.a.a.c` @kind object;
  #L161bac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L161bb2.  v1:= ", CRM_CountryCode=" @kind object;
  #L161bb6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L161bbc.  v1:= v2.`e.c.b.a.d.h.b.b` @type ^`e.c.a.a.c` @kind object;
  #L161bc0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L161bc6.  v1:= "]" @kind object;
  #L161bca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L161bd0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L161bd6.  v0:= temp @kind object;
  #L161bd8.  return v0 @kind object;
}
procedure `void` `wipe`(`e.c.b.a.d.h.b` v1 @kind this) @signature `Le/c/b/a/d/h/b;.wipe:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L161c34.  v0:= v1.`e.c.b.a.d.h.b.a` @type ^`e.c.a.a.c` @kind object;
  #L161c38.  call `clearByteArray`(v0) @signature `Le/c/a/d/b;.clearByteArray:(Le/c/a/a/c;)V` @kind static;
  #L161c3e.  v0:= v1.`e.c.b.a.d.h.b.b` @type ^`e.c.a.a.c` @kind object;
  #L161c42.  call `clearByteArray`(v0) @signature `Le/c/a/d/b;.clearByteArray:(Le/c/a/a/c;)V` @kind static;
  #L161c48.  return @kind void;
}
