record `e.c.b.a.e.b` @kind class @AccessFlag PUBLIC {
  `e.c.a.a.c` `e.c.b.a.e.b.a` @AccessFlag PRIVATE;
  `e.c.a.a.c` `e.c.b.a.e.b.b` @AccessFlag PRIVATE;
  `e.c.a.a.c` `e.c.b.a.e.b.c` @AccessFlag PRIVATE;
  `byte` `e.c.b.a.e.b.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.c.b.a.e.b` v0 @kind this) @signature `Le/c/b/a/e/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L16269c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1626a2.  return @kind void;
}
procedure `byte` `getCid`(`e.c.b.a.e.b` v1 @kind this) @signature `Le/c/b/a/e/b;.getCid:()B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1625ec.  v0:= v1.`e.c.b.a.e.b.d` @type ^`byte` @kind byte;
  #L1625f0.  return v0;
}
procedure `void` `setATC`(`e.c.b.a.e.b` v0 @kind this, `e.c.a.a.c` v1 @kind object) @signature `Le/c/b/a/e/b;.setATC:(Le/c/a/a/c;)V` @AccessFlag PUBLIC {
    temp;

  #L1626b4.  v0.`e.c.b.a.e.b.a` @type ^`e.c.a.a.c` := v1 @kind object;
  #L1626b8.  return @kind void;
}
procedure `void` `setCid`(`e.c.b.a.e.b` v0 @kind this, `byte` v1 ) @signature `Le/c/b/a/e/b;.setCid:(B)V` @AccessFlag PUBLIC {
    temp;

  #L1626cc.  v0.`e.c.b.a.e.b.d` @type ^`byte` := v1 @kind byte;
  #L1626d0.  return @kind void;
}
procedure `void` `setCryptogram`(`e.c.b.a.e.b` v0 @kind this, `e.c.a.a.c` v1 @kind object) @signature `Le/c/b/a/e/b;.setCryptogram:(Le/c/a/a/c;)V` @AccessFlag PUBLIC {
    temp;

  #L1626e4.  v0.`e.c.b.a.e.b.c` @type ^`e.c.a.a.c` := v1 @kind object;
  #L1626e8.  return @kind void;
}
procedure `void` `setIssuerApplicationData`(`e.c.b.a.e.b` v0 @kind this, `e.c.a.a.c` v1 @kind object) @signature `Le/c/b/a/e/b;.setIssuerApplicationData:(Le/c/a/a/c;)V` @AccessFlag PUBLIC {
    temp;

  #L1626fc.  v0.`e.c.b.a.e.b.b` @type ^`e.c.a.a.c` := v1 @kind object;
  #L162700.  return @kind void;
}
procedure `java.lang.String` `toString`(`e.c.b.a.e.b` v2 @kind this) @signature `Le/c/b/a/e/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L162604.  v0:= new `java.lang.StringBuilder`;
  #L162608.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L16260e.  v1:= "CryptogramOutput{ATC=" @kind object;
  #L162612.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L162618.  v1:= v2.`e.c.b.a.e.b.a` @type ^`e.c.a.a.c` @kind object;
  #L16261c.  call temp:= `getHexString`(v1) @signature `Le/c/a/a/c;.getHexString:()Ljava/lang/String;` @kind interface;
  #L162622.  v1:= temp @kind object;
  #L162624.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16262a.  v1:= ", issuerApplicationData=" @kind object;
  #L16262e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L162634.  v1:= v2.`e.c.b.a.e.b.b` @type ^`e.c.a.a.c` @kind object;
  #L162638.  call temp:= `getHexString`(v1) @signature `Le/c/a/a/c;.getHexString:()Ljava/lang/String;` @kind interface;
  #L16263e.  v1:= temp @kind object;
  #L162640.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L162646.  v1:= ", cryptogram=" @kind object;
  #L16264a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L162650.  v1:= v2.`e.c.b.a.e.b.c` @type ^`e.c.a.a.c` @kind object;
  #L162654.  call temp:= `getHexString`(v1) @signature `Le/c/a/a/c;.getHexString:()Ljava/lang/String;` @kind interface;
  #L16265a.  v1:= temp @kind object;
  #L16265c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L162662.  v1:= ", cid=" @kind object;
  #L162666.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L16266c.  v1:= v2.`e.c.b.a.e.b.d` @type ^`byte` @kind byte;
  #L162670.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L162676.  v1:= 125I;
  #L16267a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L162680.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L162686.  v0:= temp @kind object;
  #L162688.  return v0 @kind object;
}
