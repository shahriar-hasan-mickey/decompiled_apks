record `e.c.b.a.b` @kind class @AccessFlag PUBLIC {
}
procedure `int` `getCurrencyCode`(`e.c.a.a.c` v0 @kind object) @signature `Le/c/b/a/b;.getCurrencyCode:(Le/c/a/a/c;)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L161358.  call temp:= `readShort`(v0) @signature `Le/c/a/d/b;.readShort:(Le/c/a/a/c;)I` @kind static;
  #L16135e.  v0:= temp;
  #L161360.  return v0;
}
procedure `java.lang.String` `getDisplayableAmount`(`e.c.a.a.c` v0 @kind object) @signature `Le/c/b/a/b;.getDisplayableAmount:(Le/c/a/a/c;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L161374.  call temp:= `bcdAmountArrayToString`(v0) @signature `Le/c/a/d/b;.bcdAmountArrayToString:(Le/c/a/a/c;)Ljava/lang/String;` @kind static;
  #L16137a.  v0:= temp @kind object;
  #L16137c.  return v0 @kind object;
}
procedure `java.lang.String` `getDisplayableAmountAndCurrency`(`e.c.a.a.c` v1 @kind object, `e.c.a.a.c` v2 @kind object) @signature `Le/c/b/a/b;.getDisplayableAmountAndCurrency:(Le/c/a/a/c;Le/c/a/a/c;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L161390.  call temp:= `bcdAmountArrayToString`(v1) @signature `Le/c/a/d/b;.bcdAmountArrayToString:(Le/c/a/a/c;)Ljava/lang/String;` @kind static;
  #L161396.  v1:= temp @kind object;
  #L161398.  call temp:= `readShort`(v2) @signature `Le/c/a/d/b;.readShort:(Le/c/a/a/c;)I` @kind static;
  #L16139e.  v2:= temp;
  #L1613a0.  call temp:= `getCurrency`(v2) @signature `Le/c/a/b/a;.getCurrency:(I)Ljava/lang/String;` @kind static;
  #L1613a6.  v2:= temp @kind object;
  #L1613a8.  if v2 != 0 then goto L1613ae;
  #L1613ac.  return v1 @kind object;
  #L1613ae.  v0:= new `java.lang.StringBuilder`;
  #L1613b2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1613b8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1613be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1613c4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1613ca.  v1:= temp @kind object;
  #L1613cc.  return v1 @kind object;
}
procedure `e.c.b.a.f.b` `getDisplayableTransactionInformation`(`e.c.b.a.d.b` v1 @kind object) @signature `Le/c/b/a/b;.getDisplayableTransactionInformation:(Le/c/b/a/d/b;)Le/c/b/a/f/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L16133c.  v0:= new `e.c.b.a.b$a`;
  #L161340.  call `<init>`(v0, v1) @signature `Le/c/b/a/b$a;.<init>:(Le/c/b/a/d/b;)V` @kind direct;
  #L161346.  return v0 @kind object;
}
