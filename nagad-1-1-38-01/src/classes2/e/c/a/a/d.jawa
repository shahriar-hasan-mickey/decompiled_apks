record `e.c.a.a.d` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `e.c.a.a.d` `@@e.c.a.a.d.a` @AccessFlag STATIC;
procedure `void` `<init>`(`e.c.a.a.d` v0 @kind this) @signature `Le/c/a/a/d;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15c974.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15c97a.  return @kind void;
}
procedure `e.c.a.a.d` `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L15c95c.  v0:= `@@e.c.a.a.d.a` @type ^`e.c.a.a.d` @kind object;
  #L15c960.  return v0 @kind object;
}
procedure `void` `setInstance`(`e.c.a.a.d` v0 @kind object) @signature `Le/c/a/a/d;.setInstance:(Le/c/a/a/d;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L15c98c.  `@@e.c.a.a.d.a` @type ^`e.c.a.a.d` := v0 @kind object;
  #L15c990.  return @kind void;
}
procedure `e.c.a.a.c` `fromHexString`(`java.lang.String` v0 @kind object) @signature `Le/c/a/a/d;.fromHexString:(Ljava/lang/String;)Le/c/a/a/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `e.c.a.a.c` `getByteArray`(`int` v0 ) @signature `Le/c/a/a/d;.getByteArray:(I)Le/c/a/a/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `e.c.a.a.c` `getByteArray`(`byte`[] v0 @kind object, `int` v1 ) @signature `Le/c/a/a/d;.getByteArray:([BI)Le/c/a/a/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `e.c.a.a.c` `getFromByteArray`(`e.c.a.a.c` v0 @kind object) @signature `Le/c/a/a/d;.getFromByteArray:(Le/c/a/a/c;)Le/c/a/a/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `e.c.a.a.c` `getFromWord`(`int` v0 ) @signature `Le/c/a/a/d;.getFromWord:(I)Le/c/a/a/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `integerToHex`(`int` v0 ) @signature `Le/c/a/a/d;.integerToHex:(I)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
