record `e.c.a.d.c.a` @kind class @AccessFlag PUBLIC {
  `e.c.a.a.c` `e.c.a.d.c.a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.c.a.d.c.a` v1 @kind this, `e.c.a.a.c` v2 @kind object) @signature `Le/c/a/d/c/a;.<init>:(Le/c/a/a/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L160024.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L16002a.  v0:= new `e.c.a.a.e`;
  #L16002e.  call temp:= `getBytes`(v2) @signature `Le/c/a/a/c;.getBytes:()[B` @kind interface;
  #L160034.  v2:= temp @kind object;
  #L160036.  call `<init>`(v0, v2) @signature `Le/c/a/a/e;.<init>:([B)V` @kind direct;
  #L16003c.  v1.`e.c.a.d.c.a.a` @type ^`e.c.a.a.c` := v0 @kind object;
  #L160040.  return @kind void;
}
procedure `int` `getLc`(`e.c.a.d.c.a` v2 @kind this) @signature `Le/c/a/d/c/a;.getLc:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15ffe0.  v0:= v2.`e.c.a.d.c.a.a` @type ^`e.c.a.a.c` @kind object;
  #L15ffe4.  v1:= 4I;
  #L15ffe6.  call temp:= `getByte`(v0, v1) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L15ffec.  v0:= temp;
  #L15ffee.  v0:= v0 ^& 255;
  #L15fff2.  return v0;
}
procedure `byte` `getP1`(`e.c.a.d.c.a` v2 @kind this) @signature `Le/c/a/d/c/a;.getP1:()B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15ffa0.  v0:= v2.`e.c.a.d.c.a.a` @type ^`e.c.a.a.c` @kind object;
  #L15ffa4.  v1:= 2I;
  #L15ffa6.  call temp:= `getByte`(v0, v1) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L15ffac.  v0:= temp;
  #L15ffae.  return v0;
}
procedure `byte` `getP2`(`e.c.a.d.c.a` v2 @kind this) @signature `Le/c/a/d/c/a;.getP2:()B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L15ffc0.  v0:= v2.`e.c.a.d.c.a.a` @type ^`e.c.a.a.c` @kind object;
  #L15ffc4.  v1:= 3I;
  #L15ffc6.  call temp:= `getByte`(v0, v1) @signature `Le/c/a/a/c;.getByte:(I)B` @kind interface;
  #L15ffcc.  v0:= temp;
  #L15ffce.  return v0;
}
procedure `java.lang.String` `toString`(`e.c.a.d.c.a` v1 @kind this) @signature `Le/c/a/d/c/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L160004.  v0:= v1.`e.c.a.d.c.a.a` @type ^`e.c.a.a.c` @kind object;
  #L160008.  call temp:= `getHexString`(v0) @signature `Le/c/a/a/c;.getHexString:()Ljava/lang/String;` @kind interface;
  #L16000e.  v0:= temp @kind object;
  #L160010.  return v0 @kind object;
}
