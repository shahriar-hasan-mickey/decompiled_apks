record `e.c.a.d.c.b` @kind class @AccessFlag PUBLIC {
  `e.c.a.a.c` `e.c.a.d.c.b.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.c.a.d.c.b` v0 @kind this) @signature `Le/c/a/d/c/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L16006c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L160072.  return @kind void;
}
procedure `e.c.a.a.c` `getByteArray`(`e.c.a.d.c.b` v1 @kind this) @signature `Le/c/a/d/c/b;.getByteArray:()Le/c/a/a/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L160054.  v0:= v1.`e.c.a.d.c.b.a` @type ^`e.c.a.a.c` @kind object;
  #L160058.  return v0 @kind object;
}
procedure `void` `setValueAndSuccess`(`e.c.a.d.c.b` v2 @kind this, `e.c.a.a.c` v3 @kind object) @signature `Le/c/a/d/c/b;.setValueAndSuccess:(Le/c/a/a/c;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L160084.  v2.`e.c.a.d.c.b.a` @type ^`e.c.a.a.c` := v3 @kind object;
  #L160088.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L16008e.  v3:= temp @kind object;
  #L160090.  v0:= 2I;
  #L160092.  call temp:= `getByteArray`(v3, v0) @signature `Le/c/a/a/d;.getByteArray:(I)Le/c/a/a/c;` @kind virtual;
  #L160098.  v3:= temp @kind object;
  #L16009a.  v0:= 0I;
  #L16009c.  v1:= -112I;
  #L1600a0.  call `setByte`(v3, v0, v1) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L1600a6.  v1:= 1I;
  #L1600a8.  call `setByte`(v3, v1, v0) @signature `Le/c/a/a/c;.setByte:(IB)V` @kind interface;
  #L1600ae.  v0:= v2.`e.c.a.d.c.b.a` @type ^`e.c.a.a.c` @kind object;
  #L1600b2.  call temp:= `append`(v0, v3) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L1600b8.  return @kind void;
}
