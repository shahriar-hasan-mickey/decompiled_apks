record `e.c.a.d.c.c.c` @kind class @AccessFlag PUBLIC extends `e.c.a.d.c.b` @kind class {
}
procedure `void` `<init>`(`e.c.a.d.c.c.c` v5 @kind this, `boolean` v6 , `e.c.a.a.c` v7 @kind object, `e.c.a.a.c` v8 @kind object, `byte` v9 , `e.c.a.a.c` v10 @kind object, `e.c.a.a.c` v11 @kind object) @signature `Le/c/a/d/c/c/c;.<init>:(ZLe/c/a/a/c;Le/c/a/a/c;BLe/c/a/a/c;Le/c/a/a/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L160308.  call `<init>`(v5) @signature `Le/c/a/d/c/b;.<init>:()V` @kind direct;
  #L16030e.  v0:= 7I;
  #L160310.  v1:= new `byte`[v0];
  #L160314.  v2:= -97I;
  #L160318.  v3:= 0I;
  #L16031a.  v1[v3]:= v2 @kind byte;
  #L16031e.  v3:= 1I;
  #L160320.  v4:= 39I;
  #L160324.  v1[v3]:= v4 @kind byte;
  #L160328.  v4:= 2I;
  #L16032a.  v1[v4]:= v3 @kind byte;
  #L16032e.  v3:= 3I;
  #L160330.  v1[v3]:= v9 @kind byte;
  #L160334.  v9:= 4I;
  #L160336.  v1[v9]:= v2 @kind byte;
  #L16033a.  v9:= 5I;
  #L16033c.  v2:= 54I;
  #L160340.  v1[v9]:= v2 @kind byte;
  #L160344.  v9:= 6I;
  #L160346.  v1[v9]:= v4 @kind byte;
  #L16034a.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L160350.  v9:= temp @kind object;
  #L160352.  call temp:= `getByteArray`(v9, v1, v0) @signature `Le/c/a/a/d;.getByteArray:([BI)Le/c/a/a/c;` @kind virtual;
  #L160358.  v9:= temp @kind object;
  #L16035a.  call temp:= `append`(v9, v8) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L160360.  if v6 == 0 then goto L160386;
  #L160364.  v6:= new `byte`[v4];
  #L160368.  goto L160424;
  #L16036e.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L160374.  v8:= temp @kind object;
  #L160376.  call temp:= `getByteArray`(v8, v6, v4) @signature `Le/c/a/a/d;.getByteArray:([BI)Le/c/a/a/c;` @kind virtual;
  #L16037c.  v6:= temp @kind object;
  #L16037e.  call temp:= `append`(v9, v6) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L160384.  goto L1603a6;
  #L160386.  v6:= new `byte`[v4];
  #L16038a.  goto L160430;
  #L160390.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L160396.  v8:= temp @kind object;
  #L160398.  call temp:= `getByteArray`(v8, v6, v4) @signature `Le/c/a/a/d;.getByteArray:([BI)Le/c/a/a/c;` @kind virtual;
  #L16039e.  v6:= temp @kind object;
  #L1603a0.  call temp:= `append`(v9, v6) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L1603a6.  call temp:= `lengthBytes`(v7) @signature `Le/c/a/d/a;.lengthBytes:(Le/c/a/a/c;)Le/c/a/a/c;` @kind static;
  #L1603ac.  v6:= temp @kind object;
  #L1603ae.  call temp:= `append`(v9, v6) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L1603b4.  call temp:= `append`(v9, v7) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L1603ba.  v6:= new `byte`[v4];
  #L1603be.  goto L16043c;
  #L1603c4.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L1603ca.  v7:= temp @kind object;
  #L1603cc.  call temp:= `getByteArray`(v7, v6, v4) @signature `Le/c/a/a/d;.getByteArray:([BI)Le/c/a/a/c;` @kind virtual;
  #L1603d2.  v6:= temp @kind object;
  #L1603d4.  call temp:= `create`(v6, v10) @signature `Le/c/a/d/a;.create:(Le/c/a/a/c;Le/c/a/a/c;)Le/c/a/a/c;` @kind static;
  #L1603da.  v6:= temp @kind object;
  #L1603dc.  call temp:= `append`(v9, v6) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L1603e2.  if v11 == 0 then goto L16040e;
  #L1603e6.  v6:= new `byte`[v4];
  #L1603ea.  goto L160448;
  #L1603f0.  call temp:= `getInstance`() @signature `Le/c/a/a/d;.getInstance:()Le/c/a/a/d;` @kind static;
  #L1603f6.  v7:= temp @kind object;
  #L1603f8.  call temp:= `getByteArray`(v7, v6, v4) @signature `Le/c/a/a/d;.getByteArray:([BI)Le/c/a/a/c;` @kind virtual;
  #L1603fe.  v6:= temp @kind object;
  #L160400.  call temp:= `create`(v6, v11) @signature `Le/c/a/d/a;.create:(Le/c/a/a/c;Le/c/a/a/c;)Le/c/a/a/c;` @kind static;
  #L160406.  v6:= temp @kind object;
  #L160408.  call temp:= `append`(v9, v6) @signature `Le/c/a/a/c;.append:(Le/c/a/a/c;)Le/c/a/a/c;` @kind interface;
  #L16040e.  v6:= 119I;
  #L160412.  call temp:= `create`(v6, v9) @signature `Le/c/a/d/a;.create:(BLe/c/a/a/c;)Le/c/a/a/c;` @kind static;
  #L160418.  v6:= temp @kind object;
  #L16041a.  call `setValueAndSuccess`(v5, v6) @signature `Le/c/a/d/c/b;.setValueAndSuccess:(Le/c/a/a/c;)V` @kind virtual;
  #L160420.  return @kind void;
  #L160422.  
  #L160424.  v6:= (-97I, 75I) @kind object;
  #L16042d.  goto L16036e;
  #L16042e.  
  #L160430.  v6:= (-97I, 38I) @kind object;
  #L160439.  goto L160390;
  #L16043a.  
  #L16043c.  v6:= (-97I, 16I) @kind object;
  #L160445.  goto L1603c4;
  #L160446.  
  #L160448.  v6:= (-33I, 75I) @kind object;
  #L160451.  goto L1603f0;
}
