record `e.c.a.c.c` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`e.c.a.c.c` v0 @kind this) @signature `Le/c/a/c/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L15f8bc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15f8c2.  return @kind void;
}
procedure `org.bouncycastle.asn1.b2.d` `a`(`e.c.a.c.c` v3 @kind this, `byte`[] v4 @kind object) @signature `Le/c/a/c/c;.a:([B)Lorg/bouncycastle/asn1/b2/d;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L15f868.  v0:= new `org.bouncycastle.asn1.k2.a`;
  #L15f86c.  v1:= `@@org.bouncycastle.asn1.h2.d.q` @type ^`org.bouncycastle.asn1.l` @kind object;
  #L15f870.  call `<init>`(v0, v1) @signature `Lorg/bouncycastle/asn1/k2/a;.<init>:(Lorg/bouncycastle/asn1/l;)V` @kind direct;
  #L15f876.  v1:= new `org.bouncycastle.asn1.b1`;
  #L15f87a.  call `<init>`(v1, v4) @signature `Lorg/bouncycastle/asn1/b1;.<init>:([B)V` @kind direct;
  #L15f880.  v4:= new `org.bouncycastle.asn1.b2.d`;
  #L15f884.  v2:= `@@org.bouncycastle.asn1.h2.d.B` @type ^`org.bouncycastle.asn1.l` @kind object;
  #L15f888.  call `<init>`(v4, v2, v0, v1) @signature `Lorg/bouncycastle/asn1/b2/d;.<init>:(Lorg/bouncycastle/asn1/l;Lorg/bouncycastle/asn1/k2/a;Lorg/bouncycastle/asn1/m;)V` @kind direct;
  #L15f88e.  return v4 @kind object;
}
procedure `org.bouncycastle.asn1.s` `a`(`e.c.a.c.c` v3 @kind this, `org.bouncycastle.asn1.k2.h` v4 @kind object, `byte`[] v5 @kind object) @signature `Le/c/a/c/c;.a:(Lorg/bouncycastle/asn1/k2/h;[B)Lorg/bouncycastle/asn1/s;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L15f7f4.  v0:= new `org.bouncycastle.asn1.b2.q`;
  #L15f7f8.  v1:= new `org.bouncycastle.asn1.b2.f`;
  #L15f7fc.  call temp:= `getIssuer`(v4) @signature `Lorg/bouncycastle/asn1/k2/h;.getIssuer:()Lorg/bouncycastle/asn1/j2/c;` @kind virtual;
  #L15f802.  v2:= temp @kind object;
  #L15f804.  call temp:= `getSerialNumber`(v4) @signature `Lorg/bouncycastle/asn1/k2/h;.getSerialNumber:()Lorg/bouncycastle/asn1/i;` @kind virtual;
  #L15f80a.  v4:= temp @kind object;
  #L15f80c.  call temp:= `getValue`(v4) @signature `Lorg/bouncycastle/asn1/x0;.getValue:()Ljava/math/BigInteger;` @kind virtual;
  #L15f812.  v4:= temp @kind object;
  #L15f814.  call `<init>`(v1, v2, v4) @signature `Lorg/bouncycastle/asn1/b2/f;.<init>:(Lorg/bouncycastle/asn1/j2/c;Ljava/math/BigInteger;)V` @kind direct;
  #L15f81a.  call `<init>`(v0, v1) @signature `Lorg/bouncycastle/asn1/b2/q;.<init>:(Lorg/bouncycastle/asn1/b2/f;)V` @kind direct;
  #L15f820.  v4:= new `org.bouncycastle.asn1.k2.a`;
  #L15f824.  v1:= `@@org.bouncycastle.asn1.h2.d.c` @type ^`org.bouncycastle.asn1.l` @kind object;
  #L15f828.  call `<init>`(v4, v1) @signature `Lorg/bouncycastle/asn1/k2/a;.<init>:(Lorg/bouncycastle/asn1/l;)V` @kind direct;
  #L15f82e.  v1:= new `org.bouncycastle.asn1.b1`;
  #L15f832.  call `<init>`(v1, v5) @signature `Lorg/bouncycastle/asn1/b1;.<init>:([B)V` @kind direct;
  #L15f838.  v5:= new `org.bouncycastle.asn1.b2.j`;
  #L15f83c.  call `<init>`(v5, v0, v4, v1) @signature `Lorg/bouncycastle/asn1/b2/j;.<init>:(Lorg/bouncycastle/asn1/b2/q;Lorg/bouncycastle/asn1/k2/a;Lorg/bouncycastle/asn1/m;)V` @kind direct;
  #L15f842.  v4:= new `org.bouncycastle.asn1.b2.r`;
  #L15f846.  call `<init>`(v4, v5) @signature `Lorg/bouncycastle/asn1/b2/r;.<init>:(Lorg/bouncycastle/asn1/b2/j;)V` @kind direct;
  #L15f84c.  v5:= new `org.bouncycastle.asn1.h1`;
  #L15f850.  call `<init>`(v5, v4) @signature `Lorg/bouncycastle/asn1/h1;.<init>:(Lorg/bouncycastle/asn1/d;)V` @kind direct;
  #L15f856.  return v5 @kind object;
}
procedure `byte`[] `a`(`e.c.a.c.c` v2 @kind this) @signature `Le/c/a/c/c;.a:()[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L15f454.  v0:= 16I;
  #L15f458.  v0:= new `byte`[v0];
  #L15f45c.  v1:= new `java.security.SecureRandom`;
  #L15f460.  call `<init>`(v1) @signature `Ljava/security/SecureRandom;.<init>:()V` @kind direct;
  #L15f466.  call `nextBytes`(v1, v0) @signature `Ljava/security/SecureRandom;.nextBytes:([B)V` @kind virtual;
  #L15f46c.  return v0 @kind object;
}
procedure `org.bouncycastle.asn1.k2.h` `b`(`e.c.a.c.c` v0 @kind this, `byte`[] v1 @kind object) @signature `Le/c/a/c/c;.b:([B)Lorg/bouncycastle/asn1/k2/h;` @AccessFlag PRIVATE {
    temp;

  #L15f8a0.  call temp:= `getInstance`(v1) @signature `Lorg/bouncycastle/asn1/k2/h;.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/k2/h;` @kind static;
  #L15f8a6.  v1:= temp @kind object;
  #L15f8a8.  return v1 @kind object;
}
procedure `byte`[] `getPkcs7EncodedEnvelopedData`(`e.c.a.c.c` v10 @kind this, `byte`[] v11 @kind object, `byte`[] v12 @kind object) @signature `Le/c/a/c/c;.getPkcs7EncodedEnvelopedData:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L15f480.  v0:= 0I;
  #L15f482.  v1:= new `byte`[v0];
  #L15f486.  v2:= new `e.c.a.c.a`;
  #L15f48a.  call `<init>`(v2) @signature `Le/c/a/c/a;.<init>:()V` @kind direct;
  #L15f490.  call temp:= `b`(v10, v12) @signature `Le/c/a/c/c;.b:([B)Lorg/bouncycastle/asn1/k2/h;` @kind direct;
  #L15f496.  v3:= temp @kind object;
  #L15f498.  call temp:= `a`(v10) @signature `Le/c/a/c/c;.a:()[B` @kind direct;
  #L15f49e.  v4:= temp @kind object;
  #L15f4a0.  v5:= new `java.lang.StringBuilder`;
  #L15f4a4.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15f4aa.  v6:= "Generated Encryption Key " @kind object;
  #L15f4ae.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f4b4.  call temp:= `getAsHexString`(v4) @signature `Le/c/a/d/b;.getAsHexString:([B)Ljava/lang/String;` @kind static;
  #L15f4ba.  v6:= temp @kind object;
  #L15f4bc.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f4c2.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15f4c8.  v5:= temp @kind object;
  #L15f4ca.  v6:= "PKCS#7Encoder" @kind object;
  #L15f4ce.  call `log`(v6, v5) @signature `Le/c/a/d/d/a;.log:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L15f4d4.  v5:= new `byte`[v0];
  #L15f4d8.  v0:= new `byte`[v0];
  #L15f4dc.  v7:= 0I;
  #L15f4de.  v8:= new `java.lang.StringBuilder`;
  #L15f4e2.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15f4e8.  v9:= "Plain Data " @kind object;
  #L15f4ec.  call temp:= `append`(v8, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f4f2.  call temp:= `getAsHexString`(v11) @signature `Le/c/a/d/b;.getAsHexString:([B)Ljava/lang/String;` @kind static;
  #L15f4f8.  v9:= temp @kind object;
  #L15f4fa.  call temp:= `append`(v8, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f500.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15f506.  v8:= temp @kind object;
  #L15f508.  call `log`(v6, v8) @signature `Le/c/a/d/d/a;.log:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L15f50e.  call temp:= `encryptData`(v2, v11, v4) @signature `Le/c/a/c/a;.encryptData:([B[B)[B` @kind virtual;
  #L15f514.  v5:= temp @kind object;
  #L15f516.  v8:= new `java.lang.StringBuilder`;
  #L15f51a.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15f520.  v9:= "Encrypted Data " @kind object;
  #L15f524.  call temp:= `append`(v8, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f52a.  call temp:= `getAsHexString`(v11) @signature `Le/c/a/d/b;.getAsHexString:([B)Ljava/lang/String;` @kind static;
  #L15f530.  v11:= temp @kind object;
  #L15f532.  call temp:= `append`(v8, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f538.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15f53e.  v11:= temp @kind object;
  #L15f540.  call `log`(v6, v11) @signature `Le/c/a/d/d/a;.log:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L15f546.  v11:= "X.509" @kind object;
  #L15f54a.  call temp:= `getInstance`(v11) @signature `Ljava/security/cert/CertificateFactory;.getInstance:(Ljava/lang/String;)Ljava/security/cert/CertificateFactory;` @kind static;
  #L15f550.  v11:= temp @kind object;
  #L15f552.  v8:= new `java.io.ByteArrayInputStream`;
  #L15f556.  call `<init>`(v8, v12) @signature `Ljava/io/ByteArrayInputStream;.<init>:([B)V` @kind direct;
  #L15f55c.  call temp:= `generateCertificate`(v11, v8) @signature `Ljava/security/cert/CertificateFactory;.generateCertificate:(Ljava/io/InputStream;)Ljava/security/cert/Certificate;` @kind virtual;
  #L15f562.  v11:= temp @kind object;
  #L15f564.  call temp:= `encryptWithCertificate`(v2, v4, v11) @signature `Le/c/a/c/a;.encryptWithCertificate:([BLjava/security/cert/Certificate;)[B` @kind virtual;
  #L15f56a.  v0:= temp @kind object;
  #L15f56c.  v11:= new `java.lang.StringBuilder`;
  #L15f570.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15f576.  v12:= "Encrypted Key" @kind object;
  #L15f57a.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f580.  call temp:= `getAsHexString`(v0) @signature `Le/c/a/d/b;.getAsHexString:([B)Ljava/lang/String;` @kind static;
  #L15f586.  v12:= temp @kind object;
  #L15f588.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f58e.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15f594.  v11:= temp @kind object;
  #L15f596.  call `log`(v6, v11) @signature `Le/c/a/d/d/a;.log:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L15f59c.  call `close`(v8) @signature `Ljava/io/ByteArrayInputStream;.close:()V` @kind virtual;
  #L15f5a2.  goto L15f652;
  #L15f5a6.  v11:= Exception @type ^`java.io.IOException` @kind object;
  #L15f5a8.  call temp:= `getMessage`(v11) @signature `Ljava/io/IOException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L15f5ae.  v11:= temp @kind object;
  #L15f5b0.  call `log`(v6, v11) @signature `Le/c/a/d/d/a;.log:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L15f5b6.  goto L15f652;
  #L15f5ba.  v11:= Exception @type ^`java.security.cert.CertificateException` @kind object;
  #L15f5bc.  goto L15f642;
  #L15f5be.  v11:= Exception @type ^`java.security.cert.CertificateParsingException` @kind object;
  #L15f5c0.  v7:= v8 @kind object;
  #L15f5c2.  goto L15f69c;
  #L15f5c6.  v11:= Exception @type ^`javax.crypto.ShortBufferException` @kind object;
  #L15f5c8.  v7:= v8 @kind object;
  #L15f5ca.  goto L15f6a8;
  #L15f5ce.  v11:= Exception @type ^`java.security.NoSuchProviderException` @kind object;
  #L15f5d0.  v7:= v8 @kind object;
  #L15f5d2.  goto L15f6b4;
  #L15f5d6.  v11:= Exception @type ^`java.security.spec.InvalidKeySpecException` @kind object;
  #L15f5d8.  v7:= v8 @kind object;
  #L15f5da.  goto L15f6c0;
  #L15f5de.  v11:= Exception @type ^`java.security.InvalidKeyException` @kind object;
  #L15f5e0.  v7:= v8 @kind object;
  #L15f5e2.  goto L15f6cc;
  #L15f5e6.  v11:= Exception @type ^`javax.crypto.BadPaddingException` @kind object;
  #L15f5e8.  v7:= v8 @kind object;
  #L15f5ea.  goto L15f6d8;
  #L15f5ee.  v11:= Exception @type ^`javax.crypto.IllegalBlockSizeException` @kind object;
  #L15f5f0.  v7:= v8 @kind object;
  #L15f5f2.  goto L15f6e4;
  #L15f5f6.  v11:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L15f5f8.  v7:= v8 @kind object;
  #L15f5fa.  goto L15f6f0;
  #L15f5fe.  v11:= Exception @type ^`java.security.InvalidAlgorithmParameterException` @kind object;
  #L15f600.  v7:= v8 @kind object;
  #L15f602.  goto L15f6fc;
  #L15f606.  v11:= Exception @type ^`javax.crypto.NoSuchPaddingException` @kind object;
  #L15f608.  v7:= v8 @kind object;
  #L15f60a.  goto L15f708;
  #L15f60e.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15f610.  goto L15f714;
  #L15f614.  v11:= Exception @type ^`java.security.cert.CertificateException` @kind object;
  #L15f616.  v8:= v7 @kind object;
  #L15f618.  goto L15f642;
  #L15f61a.  v11:= Exception @type ^`java.security.cert.CertificateParsingException` @kind object;
  #L15f61c.  goto L15f69c;
  #L15f61e.  v11:= Exception @type ^`javax.crypto.ShortBufferException` @kind object;
  #L15f620.  goto L15f6a8;
  #L15f622.  v11:= Exception @type ^`java.security.NoSuchProviderException` @kind object;
  #L15f624.  goto L15f6b4;
  #L15f626.  v11:= Exception @type ^`java.security.spec.InvalidKeySpecException` @kind object;
  #L15f628.  goto L15f6c0;
  #L15f62a.  v11:= Exception @type ^`java.security.InvalidKeyException` @kind object;
  #L15f62c.  goto L15f6cc;
  #L15f62e.  v11:= Exception @type ^`javax.crypto.BadPaddingException` @kind object;
  #L15f630.  goto L15f6d8;
  #L15f632.  v11:= Exception @type ^`javax.crypto.IllegalBlockSizeException` @kind object;
  #L15f634.  goto L15f6e4;
  #L15f636.  v11:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L15f638.  goto L15f6f0;
  #L15f63a.  v11:= Exception @type ^`java.security.InvalidAlgorithmParameterException` @kind object;
  #L15f63c.  goto L15f6fc;
  #L15f63e.  v11:= Exception @type ^`javax.crypto.NoSuchPaddingException` @kind object;
  #L15f640.  goto L15f708;
  #L15f642.  v12:= "Exception Certificate." @kind object;
  #L15f646.  call `log`(v6, v12, v11) @signature `Le/c/a/d/d/a;.log:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L15f64c.  call `close`(v8) @signature `Ljava/io/ByteArrayInputStream;.close:()V` @kind virtual;
  #L15f652.  call temp:= `a`(v10, v3, v0) @signature `Le/c/a/c/c;.a:(Lorg/bouncycastle/asn1/k2/h;[B)Lorg/bouncycastle/asn1/s;` @kind direct;
  #L15f658.  v11:= temp @kind object;
  #L15f65a.  call temp:= `a`(v10, v5) @signature `Le/c/a/c/c;.a:([B)Lorg/bouncycastle/asn1/b2/d;` @kind direct;
  #L15f660.  v12:= temp @kind object;
  #L15f662.  v0:= new `org.bouncycastle.asn1.b2.e`;
  #L15f666.  call `<init>`(v0, v7, v11, v12, v7) @signature `Lorg/bouncycastle/asn1/b2/e;.<init>:(Lorg/bouncycastle/asn1/b2/l;Lorg/bouncycastle/asn1/s;Lorg/bouncycastle/asn1/b2/d;Lorg/bouncycastle/asn1/s;)V` @kind direct;
  #L15f66c.  v11:= new `org.bouncycastle.asn1.b2.b`;
  #L15f670.  v12:= `@@org.bouncycastle.asn1.h2.d.y` @type ^`org.bouncycastle.asn1.l` @kind object;
  #L15f674.  call `<init>`(v11, v12, v0) @signature `Lorg/bouncycastle/asn1/b2/b;.<init>:(Lorg/bouncycastle/asn1/l;Lorg/bouncycastle/asn1/d;)V` @kind direct;
  #L15f67a.  v12:= "DER" @kind object;
  #L15f67e.  call temp:= `getEncoded`(v11, v12) @signature `Lorg/bouncycastle/asn1/k;.getEncoded:(Ljava/lang/String;)[B` @kind virtual;
  #L15f684.  v1:= temp @kind object;
  #L15f686.  goto L15f694;
  #L15f688.  v11:= Exception @type ^`java.io.IOException` @kind object;
  #L15f68a.  v12:= "Error Creating Envelop Data from data." @kind object;
  #L15f68e.  call `log`(v6, v12, v11) @signature `Le/c/a/d/d/a;.log:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L15f694.  return v1 @kind object;
  #L15f696.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L15f698.  v7:= v8 @kind object;
  #L15f69a.  goto L15f714;
  #L15f69c.  v12:= new `com.mastercard.api.exception.CryptoOperationFailedException`;
  #L15f6a0.  call `<init>`(v12, v11) @signature `Lcom/mastercard/api/exception/CryptoOperationFailedException;.<init>:(Ljava/lang/Exception;)V` @kind direct;
  #L15f6a6.  throw v12;
  #L15f6a8.  v12:= new `com.mastercard.api.exception.CryptoOperationFailedException`;
  #L15f6ac.  call `<init>`(v12, v11) @signature `Lcom/mastercard/api/exception/CryptoOperationFailedException;.<init>:(Ljava/lang/Exception;)V` @kind direct;
  #L15f6b2.  throw v12;
  #L15f6b4.  v12:= new `com.mastercard.api.exception.CryptoOperationFailedException`;
  #L15f6b8.  call `<init>`(v12, v11) @signature `Lcom/mastercard/api/exception/CryptoOperationFailedException;.<init>:(Ljava/lang/Exception;)V` @kind direct;
  #L15f6be.  throw v12;
  #L15f6c0.  v12:= new `com.mastercard.api.exception.CryptoOperationFailedException`;
  #L15f6c4.  call `<init>`(v12, v11) @signature `Lcom/mastercard/api/exception/CryptoOperationFailedException;.<init>:(Ljava/lang/Exception;)V` @kind direct;
  #L15f6ca.  throw v12;
  #L15f6cc.  v12:= new `com.mastercard.api.exception.CryptoOperationFailedException`;
  #L15f6d0.  call `<init>`(v12, v11) @signature `Lcom/mastercard/api/exception/CryptoOperationFailedException;.<init>:(Ljava/lang/Exception;)V` @kind direct;
  #L15f6d6.  throw v12;
  #L15f6d8.  v12:= new `com.mastercard.api.exception.CryptoOperationFailedException`;
  #L15f6dc.  call `<init>`(v12, v11) @signature `Lcom/mastercard/api/exception/CryptoOperationFailedException;.<init>:(Ljava/lang/Exception;)V` @kind direct;
  #L15f6e2.  throw v12;
  #L15f6e4.  v12:= new `com.mastercard.api.exception.CryptoOperationFailedException`;
  #L15f6e8.  call `<init>`(v12, v11) @signature `Lcom/mastercard/api/exception/CryptoOperationFailedException;.<init>:(Ljava/lang/Exception;)V` @kind direct;
  #L15f6ee.  throw v12;
  #L15f6f0.  v12:= new `com.mastercard.api.exception.CryptoOperationFailedException`;
  #L15f6f4.  call `<init>`(v12, v11) @signature `Lcom/mastercard/api/exception/CryptoOperationFailedException;.<init>:(Ljava/lang/Exception;)V` @kind direct;
  #L15f6fa.  throw v12;
  #L15f6fc.  v12:= new `com.mastercard.api.exception.CryptoOperationFailedException`;
  #L15f700.  call `<init>`(v12, v11) @signature `Lcom/mastercard/api/exception/CryptoOperationFailedException;.<init>:(Ljava/lang/Exception;)V` @kind direct;
  #L15f706.  throw v12;
  #L15f708.  v12:= new `com.mastercard.api.exception.CryptoOperationFailedException`;
  #L15f70c.  call `<init>`(v12, v11) @signature `Lcom/mastercard/api/exception/CryptoOperationFailedException;.<init>:(Ljava/lang/Exception;)V` @kind direct;
  #L15f712.  throw v12;
  #L15f714.  call `close`(v7) @signature `Ljava/io/ByteArrayInputStream;.close:()V` @kind virtual;
  #L15f71a.  goto L15f72c;
  #L15f71c.  v12:= Exception @type ^`java.io.IOException` @kind object;
  #L15f71e.  call temp:= `getMessage`(v12) @signature `Ljava/io/IOException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L15f724.  v12:= temp @kind object;
  #L15f726.  call `log`(v6, v12) @signature `Le/c/a/d/d/a;.log:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L15f72c.  throw v11;
  catch `javax.crypto.NoSuchPaddingException` @[L15f4de..L15f55c] goto L15f63e;
  catch `java.security.InvalidAlgorithmParameterException` @[L15f4de..L15f55c] goto L15f63a;
  catch `java.security.NoSuchAlgorithmException` @[L15f4de..L15f55c] goto L15f636;
  catch `javax.crypto.IllegalBlockSizeException` @[L15f4de..L15f55c] goto L15f632;
  catch `javax.crypto.BadPaddingException` @[L15f4de..L15f55c] goto L15f62e;
  catch `java.security.InvalidKeyException` @[L15f4de..L15f55c] goto L15f62a;
  catch `java.security.spec.InvalidKeySpecException` @[L15f4de..L15f55c] goto L15f626;
  catch `java.security.NoSuchProviderException` @[L15f4de..L15f55c] goto L15f622;
  catch `javax.crypto.ShortBufferException` @[L15f4de..L15f55c] goto L15f61e;
  catch `java.security.cert.CertificateParsingException` @[L15f4de..L15f55c] goto L15f61a;
  catch `java.security.cert.CertificateException` @[L15f4de..L15f55c] goto L15f614;
  catch `java.lang.Throwable` @[L15f4de..L15f55c] goto L15f60e;
  catch `javax.crypto.NoSuchPaddingException` @[L15f55c..L15f59c] goto L15f606;
  catch `java.security.InvalidAlgorithmParameterException` @[L15f55c..L15f59c] goto L15f5fe;
  catch `java.security.NoSuchAlgorithmException` @[L15f55c..L15f59c] goto L15f5f6;
  catch `javax.crypto.IllegalBlockSizeException` @[L15f55c..L15f59c] goto L15f5ee;
  catch `javax.crypto.BadPaddingException` @[L15f55c..L15f59c] goto L15f5e6;
  catch `java.security.InvalidKeyException` @[L15f55c..L15f59c] goto L15f5de;
  catch `java.security.spec.InvalidKeySpecException` @[L15f55c..L15f59c] goto L15f5d6;
  catch `java.security.NoSuchProviderException` @[L15f55c..L15f59c] goto L15f5ce;
  catch `javax.crypto.ShortBufferException` @[L15f55c..L15f59c] goto L15f5c6;
  catch `java.security.cert.CertificateParsingException` @[L15f55c..L15f59c] goto L15f5be;
  catch `java.security.cert.CertificateException` @[L15f55c..L15f59c] goto L15f5ba;
  catch `java.lang.Throwable` @[L15f55c..L15f59c] goto L15f696;
  catch `java.io.IOException` @[L15f59c..L15f5a2] goto L15f5a6;
  catch `java.lang.Throwable` @[L15f642..L15f64c] goto L15f696;
  catch `java.io.IOException` @[L15f64c..L15f652] goto L15f5a6;
  catch `java.io.IOException` @[L15f66c..L15f686] goto L15f688;
  catch `java.lang.Throwable` @[L15f69c..L15f714] goto L15f60e;
  catch `java.io.IOException` @[L15f714..L15f71a] goto L15f71c;
}
