record `e.c.a.c.b` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `e.c.a.c.b.a` @AccessFlag PRIVATE_FINAL;
  `org.bouncycastle.asn1.b2.e` `e.c.a.c.b.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.c.a.c.b` v2 @kind this, `byte`[] v3 @kind object) @signature `Le/c/a/c/b;.<init>:([B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L15f3d0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L15f3d6.  v0:= constclass @type ^`e.c.a.c.b` @kind object;
  #L15f3da.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L15f3e0.  v0:= temp @kind object;
  #L15f3e2.  v2.`e.c.a.c.b.a` @type ^`java.lang.String` := v0 @kind object;
  #L15f3e6.  v0:= new `org.bouncycastle.asn1.u`;
  #L15f3ea.  call `<init>`(v0, v3) @signature `Lorg/bouncycastle/asn1/u;.<init>:([B)V` @kind direct;
  #L15f3f0.  v3:= new `org.bouncycastle.asn1.b2.c`;
  #L15f3f4.  call temp:= `readObject`(v0) @signature `Lorg/bouncycastle/asn1/u;.readObject:()Lorg/bouncycastle/asn1/d;` @kind virtual;
  #L15f3fa.  v0:= temp @kind object;
  #L15f3fc.  v0:= (`org.bouncycastle.asn1.r`) v0 @kind object;
  #L15f400.  call `<init>`(v3, v0) @signature `Lorg/bouncycastle/asn1/b2/c;.<init>:(Lorg/bouncycastle/asn1/r;)V` @kind direct;
  #L15f406.  v0:= 16I;
  #L15f40a.  call temp:= `getContent`(v3, v0) @signature `Lorg/bouncycastle/asn1/b2/c;.getContent:(I)Lorg/bouncycastle/asn1/d;` @kind virtual;
  #L15f410.  v3:= temp @kind object;
  #L15f412.  call temp:= `getInstance`(v3) @signature `Lorg/bouncycastle/asn1/b2/e;.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/b2/e;` @kind static;
  #L15f418.  v3:= temp @kind object;
  #L15f41a.  v2.`e.c.a.c.b.b` @type ^`org.bouncycastle.asn1.b2.e` := v3 @kind object;
  #L15f41e.  return @kind void;
  #L15f420.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L15f422.  v0:= new `com.mastercard.api.exception.Pkcs7DecodingException`;
  #L15f426.  v1:= "Invalid Transaction Data " @kind object;
  #L15f42a.  call `<init>`(v0, v1, v3) @signature `Lcom/mastercard/api/exception/Pkcs7DecodingException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L15f430.  throw v0;
  catch `java.lang.Exception` @[L15f3e6..L15f41e] goto L15f420;
}
procedure `byte`[] `getEncryptedContentInfo`(`e.c.a.c.b` v3 @kind this) @signature `Le/c/a/c/b;.getEncryptedContentInfo:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L15f12c.  v0:= v3.`e.c.a.c.b.b` @type ^`org.bouncycastle.asn1.b2.e` @kind object;
  #L15f130.  call temp:= `getEncryptedContentInfo`(v0) @signature `Lorg/bouncycastle/asn1/b2/e;.getEncryptedContentInfo:()Lorg/bouncycastle/asn1/b2/d;` @kind virtual;
  #L15f136.  v0:= temp @kind object;
  #L15f138.  call temp:= `getEncryptedContent`(v0) @signature `Lorg/bouncycastle/asn1/b2/d;.getEncryptedContent:()Lorg/bouncycastle/asn1/m;` @kind virtual;
  #L15f13e.  v0:= temp @kind object;
  #L15f140.  call temp:= `getOctets`(v0) @signature `Lorg/bouncycastle/asn1/m;.getOctets:()[B` @kind virtual;
  #L15f146.  v0:= temp @kind object;
  #L15f148.  return v0 @kind object;
  #L15f14a.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L15f14c.  v1:= new `com.mastercard.api.exception.Pkcs7DecodingException`;
  #L15f150.  v2:= "Encrypted data found is corrupted or missed." @kind object;
  #L15f154.  call `<init>`(v1, v2, v0) @signature `Lcom/mastercard/api/exception/Pkcs7DecodingException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L15f15a.  throw v1;
  catch `java.lang.Exception` @[L15f12c..L15f140] goto L15f14a;
}
procedure `byte`[] `getPkcs7DecodedEncryptedKey`(`e.c.a.c.b` v4 @kind this) @signature `Le/c/a/c/b;.getPkcs7DecodedEncryptedKey:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L15f17c.  v0:= v4.`e.c.a.c.b.b` @type ^`org.bouncycastle.asn1.b2.e` @kind object;
  #L15f180.  call temp:= `getEncryptedContentInfo`(v0) @signature `Lorg/bouncycastle/asn1/b2/e;.getEncryptedContentInfo:()Lorg/bouncycastle/asn1/b2/d;` @kind virtual;
  #L15f186.  v0:= v4.`e.c.a.c.b.b` @type ^`org.bouncycastle.asn1.b2.e` @kind object;
  #L15f18a.  call temp:= `getRecipientInfos`(v0) @signature `Lorg/bouncycastle/asn1/b2/e;.getRecipientInfos:()Lorg/bouncycastle/asn1/s;` @kind virtual;
  #L15f190.  v0:= temp @kind object;
  #L15f192.  v1:= 0I;
  #L15f194.  call temp:= `getObjectAt`(v0, v1) @signature `Lorg/bouncycastle/asn1/s;.getObjectAt:(I)Lorg/bouncycastle/asn1/d;` @kind virtual;
  #L15f19a.  v0:= temp @kind object;
  #L15f19c.  call temp:= `getInstance`(v0) @signature `Lorg/bouncycastle/asn1/b2/r;.getInstance:(Ljava/lang/Object;)Lorg/bouncycastle/asn1/b2/r;` @kind static;
  #L15f1a2.  v0:= temp @kind object;
  #L15f1a4.  call temp:= `getInfo`(v0) @signature `Lorg/bouncycastle/asn1/b2/r;.getInfo:()Lorg/bouncycastle/asn1/d;` @kind virtual;
  #L15f1aa.  v0:= temp @kind object;
  #L15f1ac.  call temp:= `toASN1Primitive`(v0) @signature `Lorg/bouncycastle/asn1/d;.toASN1Primitive:()Lorg/bouncycastle/asn1/p;` @kind interface;
  #L15f1b2.  v0:= temp @kind object;
  #L15f1b4.  v0:= (`org.bouncycastle.asn1.f1`) v0 @kind object;
  #L15f1b8.  v1:= 3I;
  #L15f1ba.  call temp:= `getObjectAt`(v0, v1) @signature `Lorg/bouncycastle/asn1/q;.getObjectAt:(I)Lorg/bouncycastle/asn1/d;` @kind virtual;
  #L15f1c0.  v0:= temp @kind object;
  #L15f1c2.  v0:= (`org.bouncycastle.asn1.b1`) v0 @kind object;
  #L15f1c6.  v1:= v4.`e.c.a.c.b.a` @type ^`java.lang.String` @kind object;
  #L15f1ca.  v2:= new `java.lang.StringBuilder`;
  #L15f1ce.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15f1d4.  v3:= "Encrypted Key " @kind object;
  #L15f1d8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f1de.  call temp:= `getOctets`(v0) @signature `Lorg/bouncycastle/asn1/m;.getOctets:()[B` @kind virtual;
  #L15f1e4.  v3:= temp @kind object;
  #L15f1e6.  call temp:= `getAsHexString`(v3) @signature `Le/c/a/d/b;.getAsHexString:([B)Ljava/lang/String;` @kind static;
  #L15f1ec.  v3:= temp @kind object;
  #L15f1ee.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f1f4.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15f1fa.  v2:= temp @kind object;
  #L15f1fc.  call `log`(v1, v2) @signature `Le/c/a/d/d/a;.log:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L15f202.  if v0 == 0 then goto L15f21e;
  #L15f206.  call temp:= `getOctets`(v0) @signature `Lorg/bouncycastle/asn1/m;.getOctets:()[B` @kind virtual;
  #L15f20c.  v1:= temp @kind object;
  #L15f20e.  v1:= length @variable v1;
  #L15f210.  if v1 == 0 then goto L15f21e;
  #L15f214.  call temp:= `getOctets`(v0) @signature `Lorg/bouncycastle/asn1/m;.getOctets:()[B` @kind virtual;
  #L15f21a.  v0:= temp @kind object;
  #L15f21c.  return v0 @kind object;
  #L15f21e.  v0:= new `com.mastercard.api.exception.Pkcs7DecodingException`;
  #L15f222.  v1:= "Invalid Secrete Key. Key is null or Key length is 0" @kind object;
  #L15f226.  call `<init>`(v0, v1) @signature `Lcom/mastercard/api/exception/Pkcs7DecodingException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L15f22c.  throw v0;
  #L15f22e.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L15f230.  v1:= new `com.mastercard.api.exception.Pkcs7DecodingException`;
  #L15f234.  v2:= "Encrypted data found is corrupted or missed." @kind object;
  #L15f238.  call `<init>`(v1, v2, v0) @signature `Lcom/mastercard/api/exception/Pkcs7DecodingException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L15f23e.  throw v1;
  catch `java.lang.Exception` @[L15f17c..L15f210] goto L15f22e;
  catch `java.lang.Exception` @[L15f21e..L15f22e] goto L15f22e;
}
procedure `byte`[] `getPkcs7DecryptEnvelopedData`(`e.c.a.c.b` v5 @kind this, `byte`[] v6 @kind object) @signature `Le/c/a/c/b;.getPkcs7DecryptEnvelopedData:([B)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L15f268.  call temp:= `getPkcs7DecodedEncryptedKey`(v5) @signature `Le/c/a/c/b;.getPkcs7DecodedEncryptedKey:()[B` @kind virtual;
  #L15f26e.  v0:= temp @kind object;
  #L15f270.  v1:= v5.`e.c.a.c.b.a` @type ^`java.lang.String` @kind object;
  #L15f274.  v2:= new `java.lang.StringBuilder`;
  #L15f278.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15f27e.  v3:= "encryptedEncryptionKey " @kind object;
  #L15f282.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f288.  call temp:= `getAsHexString`(v0) @signature `Le/c/a/d/b;.getAsHexString:([B)Ljava/lang/String;` @kind static;
  #L15f28e.  v3:= temp @kind object;
  #L15f290.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f296.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15f29c.  v2:= temp @kind object;
  #L15f29e.  call `log`(v1, v2) @signature `Le/c/a/d/d/a;.log:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L15f2a4.  v1:= v5.`e.c.a.c.b.a` @type ^`java.lang.String` @kind object;
  #L15f2a8.  v2:= new `java.lang.StringBuilder`;
  #L15f2ac.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15f2b2.  v3:= "Private key length " @kind object;
  #L15f2b6.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f2bc.  v3:= length @variable v6;
  #L15f2be.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f2c4.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15f2ca.  v2:= temp @kind object;
  #L15f2cc.  call `log`(v1, v2) @signature `Le/c/a/d/d/a;.log:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L15f2d2.  call temp:= `getEncryptedContentInfo`(v5) @signature `Le/c/a/c/b;.getEncryptedContentInfo:()[B` @kind virtual;
  #L15f2d8.  v1:= temp @kind object;
  #L15f2da.  v2:= v5.`e.c.a.c.b.a` @type ^`java.lang.String` @kind object;
  #L15f2de.  v3:= new `java.lang.StringBuilder`;
  #L15f2e2.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15f2e8.  v4:= "Encrypted Data " @kind object;
  #L15f2ec.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f2f2.  call temp:= `getAsHexString`(v1) @signature `Le/c/a/d/b;.getAsHexString:([B)Ljava/lang/String;` @kind static;
  #L15f2f8.  v4:= temp @kind object;
  #L15f2fa.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f300.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15f306.  v3:= temp @kind object;
  #L15f308.  call `log`(v2, v3) @signature `Le/c/a/d/d/a;.log:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L15f30e.  v2:= new `e.c.a.c.a`;
  #L15f312.  call `<init>`(v2) @signature `Le/c/a/c/a;.<init>:()V` @kind direct;
  #L15f318.  call temp:= `decryptWithPrivateKey`(v2, v0, v6) @signature `Le/c/a/c/a;.decryptWithPrivateKey:([B[B)[B` @kind virtual;
  #L15f31e.  v6:= temp @kind object;
  #L15f320.  v0:= v5.`e.c.a.c.b.a` @type ^`java.lang.String` @kind object;
  #L15f324.  v3:= new `java.lang.StringBuilder`;
  #L15f328.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15f32e.  v4:= "decryptedSecreteKey " @kind object;
  #L15f332.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f338.  call temp:= `getAsHexString`(v6) @signature `Le/c/a/d/b;.getAsHexString:([B)Ljava/lang/String;` @kind static;
  #L15f33e.  v4:= temp @kind object;
  #L15f340.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f346.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15f34c.  v3:= temp @kind object;
  #L15f34e.  call `log`(v0, v3) @signature `Le/c/a/d/d/a;.log:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L15f354.  v0:= v5.`e.c.a.c.b.a` @type ^`java.lang.String` @kind object;
  #L15f358.  v3:= new `java.lang.StringBuilder`;
  #L15f35c.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15f362.  v4:= "decryptedSecreteKey length " @kind object;
  #L15f366.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f36c.  v4:= length @variable v6;
  #L15f36e.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f374.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15f37a.  v3:= temp @kind object;
  #L15f37c.  call `log`(v0, v3) @signature `Le/c/a/d/d/a;.log:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L15f382.  call temp:= `decryptData`(v2, v1, v6) @signature `Le/c/a/c/a;.decryptData:([B[B)[B` @kind virtual;
  #L15f388.  v6:= temp @kind object;
  #L15f38a.  v0:= v5.`e.c.a.c.b.a` @type ^`java.lang.String` @kind object;
  #L15f38e.  v1:= new `java.lang.StringBuilder`;
  #L15f392.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L15f398.  v2:= "decryptedSensitiveData  " @kind object;
  #L15f39c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f3a2.  call temp:= `getAsHexString`(v6) @signature `Le/c/a/d/b;.getAsHexString:([B)Ljava/lang/String;` @kind static;
  #L15f3a8.  v2:= temp @kind object;
  #L15f3aa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L15f3b0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L15f3b6.  v1:= temp @kind object;
  #L15f3b8.  call `log`(v0, v1) @signature `Le/c/a/d/d/a;.log:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L15f3be.  return v6 @kind object;
}
