record `io.fabric.sdk.android.services.concurrency.f` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `io.fabric.sdk.android.services.concurrency.f` `@@io.fabric.sdk.android.services.concurrency.f.f` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.fabric.sdk.android.services.concurrency.f` `@@io.fabric.sdk.android.services.concurrency.f.g` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.fabric.sdk.android.services.concurrency.f` `@@io.fabric.sdk.android.services.concurrency.f.h` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.fabric.sdk.android.services.concurrency.f` `@@io.fabric.sdk.android.services.concurrency.f.i` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.fabric.sdk.android.services.concurrency.f`[] `@@io.fabric.sdk.android.services.concurrency.f.j` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/fabric/sdk/android/services/concurrency/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1c9c70.  v0:= new `io.fabric.sdk.android.services.concurrency.f`;
  #L1c9c74.  v1:= 0I;
  #L1c9c76.  v2:= "LOW" @kind object;
  #L1c9c7a.  call `<init>`(v0, v2, v1) @signature `Lio/fabric/sdk/android/services/concurrency/f;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1c9c80.  `@@io.fabric.sdk.android.services.concurrency.f.f` @type ^`io.fabric.sdk.android.services.concurrency.f` := v0 @kind object;
  #L1c9c84.  v0:= new `io.fabric.sdk.android.services.concurrency.f`;
  #L1c9c88.  v2:= 1I;
  #L1c9c8a.  v3:= "NORMAL" @kind object;
  #L1c9c8e.  call `<init>`(v0, v3, v2) @signature `Lio/fabric/sdk/android/services/concurrency/f;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1c9c94.  `@@io.fabric.sdk.android.services.concurrency.f.g` @type ^`io.fabric.sdk.android.services.concurrency.f` := v0 @kind object;
  #L1c9c98.  v0:= new `io.fabric.sdk.android.services.concurrency.f`;
  #L1c9c9c.  v3:= 2I;
  #L1c9c9e.  v4:= "HIGH" @kind object;
  #L1c9ca2.  call `<init>`(v0, v4, v3) @signature `Lio/fabric/sdk/android/services/concurrency/f;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1c9ca8.  `@@io.fabric.sdk.android.services.concurrency.f.h` @type ^`io.fabric.sdk.android.services.concurrency.f` := v0 @kind object;
  #L1c9cac.  v0:= new `io.fabric.sdk.android.services.concurrency.f`;
  #L1c9cb0.  v4:= 3I;
  #L1c9cb2.  v5:= "IMMEDIATE" @kind object;
  #L1c9cb6.  call `<init>`(v0, v5, v4) @signature `Lio/fabric/sdk/android/services/concurrency/f;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1c9cbc.  `@@io.fabric.sdk.android.services.concurrency.f.i` @type ^`io.fabric.sdk.android.services.concurrency.f` := v0 @kind object;
  #L1c9cc0.  v0:= 4I;
  #L1c9cc2.  v0:= new `io.fabric.sdk.android.services.concurrency.f`[v0];
  #L1c9cc6.  v5:= `@@io.fabric.sdk.android.services.concurrency.f.f` @type ^`io.fabric.sdk.android.services.concurrency.f` @kind object;
  #L1c9cca.  v0[v1]:= v5 @kind object;
  #L1c9cce.  v1:= `@@io.fabric.sdk.android.services.concurrency.f.g` @type ^`io.fabric.sdk.android.services.concurrency.f` @kind object;
  #L1c9cd2.  v0[v2]:= v1 @kind object;
  #L1c9cd6.  v1:= `@@io.fabric.sdk.android.services.concurrency.f.h` @type ^`io.fabric.sdk.android.services.concurrency.f` @kind object;
  #L1c9cda.  v0[v3]:= v1 @kind object;
  #L1c9cde.  v1:= `@@io.fabric.sdk.android.services.concurrency.f.i` @type ^`io.fabric.sdk.android.services.concurrency.f` @kind object;
  #L1c9ce2.  v0[v4]:= v1 @kind object;
  #L1c9ce6.  `@@io.fabric.sdk.android.services.concurrency.f.j` @type ^`io.fabric.sdk.android.services.concurrency.f`[] := v0 @kind object;
  #L1c9cea.  return @kind void;
}
procedure `void` `<init>`(`io.fabric.sdk.android.services.concurrency.f` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lio/fabric/sdk/android/services/concurrency/f;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1c9cfc.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1c9d02.  return @kind void;
}
procedure `int` `a`(`io.fabric.sdk.android.services.concurrency.j` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/f;.a:(Lio/fabric/sdk/android/services/concurrency/j;Ljava/lang/Object;)I` @AccessFlag STATIC {
    temp;
    v0;

  #L1c9be0.  v0:= instanceof @variable v2 @type ^`io.fabric.sdk.android.services.concurrency.j` @kind boolean;
  #L1c9be4.  if v0 == 0 then goto L1c9bf6;
  #L1c9be8.  v2:= (`io.fabric.sdk.android.services.concurrency.j`) v2 @kind object;
  #L1c9bec.  call temp:= `getPriority`(v2) @signature `Lio/fabric/sdk/android/services/concurrency/j;.getPriority:()Lio/fabric/sdk/android/services/concurrency/f;` @kind interface;
  #L1c9bf2.  v2:= temp @kind object;
  #L1c9bf4.  goto L1c9bfa;
  #L1c9bf6.  v2:= `@@io.fabric.sdk.android.services.concurrency.f.g` @type ^`io.fabric.sdk.android.services.concurrency.f` @kind object;
  #L1c9bfa.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L1c9c00.  v2:= temp;
  #L1c9c02.  call temp:= `getPriority`(v1) @signature `Lio/fabric/sdk/android/services/concurrency/j;.getPriority:()Lio/fabric/sdk/android/services/concurrency/f;` @kind interface;
  #L1c9c08.  v1:= temp @kind object;
  #L1c9c0a.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L1c9c10.  v1:= temp;
  #L1c9c12.  v2:= v2 - v1 @kind int;
  #L1c9c14.  return v2;
}
procedure `io.fabric.sdk.android.services.concurrency.f` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/f;.valueOf:(Ljava/lang/String;)Lio/fabric/sdk/android/services/concurrency/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1c9c28.  v0:= constclass @type ^`io.fabric.sdk.android.services.concurrency.f` @kind object;
  #L1c9c2c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L1c9c32.  v1:= temp @kind object;
  #L1c9c34.  v1:= (`io.fabric.sdk.android.services.concurrency.f`) v1 @kind object;
  #L1c9c38.  return v1 @kind object;
}
procedure `io.fabric.sdk.android.services.concurrency.f`[] `values`() @signature `Lio/fabric/sdk/android/services/concurrency/f;.values:()[Lio/fabric/sdk/android/services/concurrency/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1c9c4c.  v0:= `@@io.fabric.sdk.android.services.concurrency.f.j` @type ^`io.fabric.sdk.android.services.concurrency.f`[] @kind object;
  #L1c9c50.  call temp:= `clone`(v0) @signature `[Lio/fabric/sdk/android/services/concurrency/f;.clone:()Ljava/lang/Object;` @kind virtual;
  #L1c9c56.  v0:= temp @kind object;
  #L1c9c58.  v0:= (`io.fabric.sdk.android.services.concurrency.f`[]) v0 @kind object;
  #L1c9c5c.  return v0 @kind object;
}
