record `io.fabric.sdk.android.services.concurrency.a` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `io.fabric.sdk.android.services.concurrency.a$i` `io.fabric.sdk.android.services.concurrency.a.f` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.FutureTask` `io.fabric.sdk.android.services.concurrency.a.g` @AccessFlag PRIVATE_FINAL;
  `io.fabric.sdk.android.services.concurrency.a$h` `io.fabric.sdk.android.services.concurrency.a.h` @AccessFlag PRIVATE_VOLATILE;
  `java.util.concurrent.atomic.AtomicBoolean` `io.fabric.sdk.android.services.concurrency.a.i` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicBoolean` `io.fabric.sdk.android.services.concurrency.a.j` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@io.fabric.sdk.android.services.concurrency.a.k` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@io.fabric.sdk.android.services.concurrency.a.l` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@io.fabric.sdk.android.services.concurrency.a.m` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.ThreadFactory` `@@io.fabric.sdk.android.services.concurrency.a.n` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.BlockingQueue` `@@io.fabric.sdk.android.services.concurrency.a.o` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.Executor` `@@io.fabric.sdk.android.services.concurrency.a.p` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.concurrent.Executor` `@@io.fabric.sdk.android.services.concurrency.a.q` @AccessFlag PUBLIC_STATIC_FINAL;
global `io.fabric.sdk.android.services.concurrency.a$f` `@@io.fabric.sdk.android.services.concurrency.a.r` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/fabric/sdk/android/services/concurrency/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1c8b14.  call temp:= `getRuntime`() @signature `Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;` @kind static;
  #L1c8b1a.  v0:= temp @kind object;
  #L1c8b1c.  call temp:= `availableProcessors`(v0) @signature `Ljava/lang/Runtime;.availableProcessors:()I` @kind virtual;
  #L1c8b22.  v0:= temp;
  #L1c8b24.  `@@io.fabric.sdk.android.services.concurrency.a.k` @type ^`int` := v0;
  #L1c8b28.  v0:= `@@io.fabric.sdk.android.services.concurrency.a.k` @type ^`int`;
  #L1c8b2c.  v1:= v0 + 1;
  #L1c8b30.  `@@io.fabric.sdk.android.services.concurrency.a.l` @type ^`int` := v1;
  #L1c8b34.  v0:= v0 * 2;
  #L1c8b38.  v0:= v0 + 1;
  #L1c8b3c.  `@@io.fabric.sdk.android.services.concurrency.a.m` @type ^`int` := v0;
  #L1c8b40.  v0:= new `io.fabric.sdk.android.services.concurrency.a$a`;
  #L1c8b44.  call `<init>`(v0) @signature `Lio/fabric/sdk/android/services/concurrency/a$a;.<init>:()V` @kind direct;
  #L1c8b4a.  `@@io.fabric.sdk.android.services.concurrency.a.n` @type ^`java.util.concurrent.ThreadFactory` := v0 @kind object;
  #L1c8b4e.  v0:= new `java.util.concurrent.LinkedBlockingQueue`;
  #L1c8b52.  v1:= 128I;
  #L1c8b56.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/LinkedBlockingQueue;.<init>:(I)V` @kind direct;
  #L1c8b5c.  `@@io.fabric.sdk.android.services.concurrency.a.o` @type ^`java.util.concurrent.BlockingQueue` := v0 @kind object;
  #L1c8b60.  v0:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L1c8b64.  v3:= `@@io.fabric.sdk.android.services.concurrency.a.l` @type ^`int`;
  #L1c8b68.  v4:= `@@io.fabric.sdk.android.services.concurrency.a.m` @type ^`int`;
  #L1c8b6c.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1c8b70.  v8:= `@@io.fabric.sdk.android.services.concurrency.a.o` @type ^`java.util.concurrent.BlockingQueue` @kind object;
  #L1c8b74.  v9:= `@@io.fabric.sdk.android.services.concurrency.a.n` @type ^`java.util.concurrent.ThreadFactory` @kind object;
  #L1c8b78.  v5:= 1L;
  #L1c8b7c.  v2:= v0 @kind object;
  #L1c8b7e.  call `<init>`(v2, v3, v4, v5, v7, v8, v9) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L1c8b84.  `@@io.fabric.sdk.android.services.concurrency.a.p` @type ^`java.util.concurrent.Executor` := v0 @kind object;
  #L1c8b88.  v0:= new `io.fabric.sdk.android.services.concurrency.a$g`;
  #L1c8b8c.  v1:= 0I;
  #L1c8b8e.  call `<init>`(v0, v1) @signature `Lio/fabric/sdk/android/services/concurrency/a$g;.<init>:(Lio/fabric/sdk/android/services/concurrency/a$a;)V` @kind direct;
  #L1c8b94.  `@@io.fabric.sdk.android.services.concurrency.a.q` @type ^`java.util.concurrent.Executor` := v0 @kind object;
  #L1c8b98.  v0:= new `io.fabric.sdk.android.services.concurrency.a$f`;
  #L1c8b9c.  call `<init>`(v0) @signature `Lio/fabric/sdk/android/services/concurrency/a$f;.<init>:()V` @kind direct;
  #L1c8ba2.  `@@io.fabric.sdk.android.services.concurrency.a.r` @type ^`io.fabric.sdk.android.services.concurrency.a$f` := v0 @kind object;
  #L1c8ba6.  return @kind void;
}
procedure `void` `<init>`(`io.fabric.sdk.android.services.concurrency.a` v2 @kind this) @signature `Lio/fabric/sdk/android/services/concurrency/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1c8bb8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c8bbe.  v0:= `@@io.fabric.sdk.android.services.concurrency.a$h.f` @type ^`io.fabric.sdk.android.services.concurrency.a$h` @kind object;
  #L1c8bc2.  v2.`io.fabric.sdk.android.services.concurrency.a.h` @type ^`io.fabric.sdk.android.services.concurrency.a$h` := v0 @kind object;
  #L1c8bc6.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L1c8bca.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L1c8bd0.  v2.`io.fabric.sdk.android.services.concurrency.a.i` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L1c8bd4.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L1c8bd8.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:()V` @kind direct;
  #L1c8bde.  v2.`io.fabric.sdk.android.services.concurrency.a.j` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L1c8be2.  v0:= new `io.fabric.sdk.android.services.concurrency.a$b`;
  #L1c8be6.  call `<init>`(v0, v2) @signature `Lio/fabric/sdk/android/services/concurrency/a$b;.<init>:(Lio/fabric/sdk/android/services/concurrency/a;)V` @kind direct;
  #L1c8bec.  v2.`io.fabric.sdk.android.services.concurrency.a.f` @type ^`io.fabric.sdk.android.services.concurrency.a$i` := v0 @kind object;
  #L1c8bf0.  v0:= new `io.fabric.sdk.android.services.concurrency.a$c`;
  #L1c8bf4.  v1:= v2.`io.fabric.sdk.android.services.concurrency.a.f` @type ^`io.fabric.sdk.android.services.concurrency.a$i` @kind object;
  #L1c8bf8.  call `<init>`(v0, v2, v1) @signature `Lio/fabric/sdk/android/services/concurrency/a$c;.<init>:(Lio/fabric/sdk/android/services/concurrency/a;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L1c8bfe.  v2.`io.fabric.sdk.android.services.concurrency.a.g` @type ^`java.util.concurrent.FutureTask` := v0 @kind object;
  #L1c8c02.  return @kind void;
}
procedure `java.lang.Object` `a`(`io.fabric.sdk.android.services.concurrency.a` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/a;.a:(Lio/fabric/sdk/android/services/concurrency/a;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c8aa8.  call temp:= `b`(v0, v1) @signature `Lio/fabric/sdk/android/services/concurrency/a;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L1c8aae.  return v1 @kind object;
}
procedure `java.util.concurrent.atomic.AtomicBoolean` `a`(`io.fabric.sdk.android.services.concurrency.a` v0 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/a;.a:(Lio/fabric/sdk/android/services/concurrency/a;)Ljava/util/concurrent/atomic/AtomicBoolean;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c8afc.  v0:= v0.`io.fabric.sdk.android.services.concurrency.a.j` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L1c8b00.  return v0 @kind object;
}
procedure `void` `a`(`io.fabric.sdk.android.services.concurrency.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/a;.a:(Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1c8c44.  call temp:= `isCancelled`(v1) @signature `Lio/fabric/sdk/android/services/concurrency/a;.isCancelled:()Z` @kind virtual;
  #L1c8c4a.  v0:= temp;
  #L1c8c4c.  if v0 == 0 then goto L1c8c58;
  #L1c8c50.  call `onCancelled`(v1, v2) @signature `Lio/fabric/sdk/android/services/concurrency/a;.onCancelled:(Ljava/lang/Object;)V` @kind virtual;
  #L1c8c56.  goto L1c8c5e;
  #L1c8c58.  call `onPostExecute`(v1, v2) @signature `Lio/fabric/sdk/android/services/concurrency/a;.onPostExecute:(Ljava/lang/Object;)V` @kind virtual;
  #L1c8c5e.  v2:= `@@io.fabric.sdk.android.services.concurrency.a$h.h` @type ^`io.fabric.sdk.android.services.concurrency.a$h` @kind object;
  #L1c8c62.  v1.`io.fabric.sdk.android.services.concurrency.a.h` @type ^`io.fabric.sdk.android.services.concurrency.a$h` := v2 @kind object;
  #L1c8c66.  return @kind void;
}
procedure `java.lang.Object` `b`(`io.fabric.sdk.android.services.concurrency.a` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/a;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1c8ac0.  v0:= `@@io.fabric.sdk.android.services.concurrency.a.r` @type ^`io.fabric.sdk.android.services.concurrency.a$f` @kind object;
  #L1c8ac4.  v1:= new `io.fabric.sdk.android.services.concurrency.a$e`;
  #L1c8ac8.  v2:= 1I;
  #L1c8aca.  v3:= new `java.lang.Object`[v2];
  #L1c8ace.  v4:= 0I;
  #L1c8ad0.  v3[v4]:= v6 @kind object;
  #L1c8ad4.  call `<init>`(v1, v5, v3) @signature `Lio/fabric/sdk/android/services/concurrency/a$e;.<init>:(Lio/fabric/sdk/android/services/concurrency/a;[Ljava/lang/Object;)V` @kind direct;
  #L1c8ada.  call temp:= `obtainMessage`(v0, v2, v1) @signature `Landroid/os/Handler;.obtainMessage:(ILjava/lang/Object;)Landroid/os/Message;` @kind virtual;
  #L1c8ae0.  v0:= temp @kind object;
  #L1c8ae2.  call `sendToTarget`(v0) @signature `Landroid/os/Message;.sendToTarget:()V` @kind virtual;
  #L1c8ae8.  return v6 @kind object;
}
procedure `void` `b`(`io.fabric.sdk.android.services.concurrency.a` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/a;.b:(Lio/fabric/sdk/android/services/concurrency/a;Ljava/lang/Object;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c8c14.  call `c`(v0, v1) @signature `Lio/fabric/sdk/android/services/concurrency/a;.c:(Ljava/lang/Object;)V` @kind direct;
  #L1c8c1a.  return @kind void;
}
procedure `void` `c`(`io.fabric.sdk.android.services.concurrency.a` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/a;.c:(Lio/fabric/sdk/android/services/concurrency/a;Ljava/lang/Object;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c8c2c.  call `a`(v0, v1) @signature `Lio/fabric/sdk/android/services/concurrency/a;.a:(Ljava/lang/Object;)V` @kind direct;
  #L1c8c32.  return @kind void;
}
procedure `void` `c`(`io.fabric.sdk.android.services.concurrency.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/a;.c:(Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1c8ca0.  v0:= v1.`io.fabric.sdk.android.services.concurrency.a.j` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L1c8ca4.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L1c8caa.  v0:= temp;
  #L1c8cac.  if v0 != 0 then goto L1c8cb6;
  #L1c8cb0.  call temp:= `b`(v1, v2) @signature `Lio/fabric/sdk/android/services/concurrency/a;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L1c8cb6.  return @kind void;
}
procedure `boolean` `cancel`(`io.fabric.sdk.android.services.concurrency.a` v2 @kind this, `boolean` v3 ) @signature `Lio/fabric/sdk/android/services/concurrency/a;.cancel:(Z)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c89c4.  v0:= v2.`io.fabric.sdk.android.services.concurrency.a.i` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L1c89c8.  v1:= 1I;
  #L1c89ca.  call `set`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.set:(Z)V` @kind virtual;
  #L1c89d0.  v0:= v2.`io.fabric.sdk.android.services.concurrency.a.g` @type ^`java.util.concurrent.FutureTask` @kind object;
  #L1c89d4.  call temp:= `cancel`(v0, v3) @signature `Ljava/util/concurrent/FutureTask;.cancel:(Z)Z` @kind virtual;
  #L1c89da.  v3:= temp;
  #L1c89dc.  return v3;
}
procedure `java.lang.Object` `doInBackground`(`java.lang.Object`[] v0 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/a;.doInBackground:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `io.fabric.sdk.android.services.concurrency.a` `executeOnExecutor`(`io.fabric.sdk.android.services.concurrency.a` v2 @kind this, `java.util.concurrent.Executor` v3 @kind object, `java.lang.Object`[] v4 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/a;.executeOnExecutor:(Ljava/util/concurrent/Executor;[Ljava/lang/Object;)Lio/fabric/sdk/android/services/concurrency/a;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1c8a10.  v0:= v2.`io.fabric.sdk.android.services.concurrency.a.h` @type ^`io.fabric.sdk.android.services.concurrency.a$h` @kind object;
  #L1c8a14.  v1:= `@@io.fabric.sdk.android.services.concurrency.a$h.f` @type ^`io.fabric.sdk.android.services.concurrency.a$h` @kind object;
  #L1c8a18.  if v0 == v1 then goto L1c8a5e;
  #L1c8a1c.  v0:= `@@io.fabric.sdk.android.services.concurrency.a$d.a` @type ^`int`[] @kind object;
  #L1c8a20.  v1:= v2.`io.fabric.sdk.android.services.concurrency.a.h` @type ^`io.fabric.sdk.android.services.concurrency.a$h` @kind object;
  #L1c8a24.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L1c8a2a.  v1:= temp;
  #L1c8a2c.  v0:= v0[v1];
  #L1c8a30.  v1:= 1I;
  #L1c8a32.  if v0 == v1 then goto L1c8a4e;
  #L1c8a36.  v1:= 2I;
  #L1c8a38.  if v0 == v1 then goto L1c8a3e;
  #L1c8a3c.  goto L1c8a5e;
  #L1c8a3e.  v3:= new `java.lang.IllegalStateException`;
  #L1c8a42.  v4:= "Cannot execute task: the task has already been executed (a task can be executed only once)" @kind object;
  #L1c8a46.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c8a4c.  throw v3;
  #L1c8a4e.  v3:= new `java.lang.IllegalStateException`;
  #L1c8a52.  v4:= "Cannot execute task: the task is already running." @kind object;
  #L1c8a56.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c8a5c.  throw v3;
  #L1c8a5e.  v0:= `@@io.fabric.sdk.android.services.concurrency.a$h.g` @type ^`io.fabric.sdk.android.services.concurrency.a$h` @kind object;
  #L1c8a62.  v2.`io.fabric.sdk.android.services.concurrency.a.h` @type ^`io.fabric.sdk.android.services.concurrency.a$h` := v0 @kind object;
  #L1c8a66.  call `onPreExecute`(v2) @signature `Lio/fabric/sdk/android/services/concurrency/a;.onPreExecute:()V` @kind virtual;
  #L1c8a6c.  v0:= v2.`io.fabric.sdk.android.services.concurrency.a.f` @type ^`io.fabric.sdk.android.services.concurrency.a$i` @kind object;
  #L1c8a70.  v0.`io.fabric.sdk.android.services.concurrency.a$i.f` @type ^`java.lang.Object`[] := v4 @kind object;
  #L1c8a74.  v4:= v2.`io.fabric.sdk.android.services.concurrency.a.g` @type ^`java.util.concurrent.FutureTask` @kind object;
  #L1c8a78.  call `execute`(v3, v4) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L1c8a7e.  return v2 @kind object;
}
procedure `io.fabric.sdk.android.services.concurrency.a$h` `getStatus`(`io.fabric.sdk.android.services.concurrency.a` v1 @kind this) @signature `Lio/fabric/sdk/android/services/concurrency/a;.getStatus:()Lio/fabric/sdk/android/services/concurrency/a$h;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c8a90.  v0:= v1.`io.fabric.sdk.android.services.concurrency.a.h` @type ^`io.fabric.sdk.android.services.concurrency.a$h` @kind object;
  #L1c8a94.  return v0 @kind object;
}
procedure `boolean` `isCancelled`(`io.fabric.sdk.android.services.concurrency.a` v1 @kind this) @signature `Lio/fabric/sdk/android/services/concurrency/a;.isCancelled:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c89f0.  v0:= v1.`io.fabric.sdk.android.services.concurrency.a.i` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L1c89f4.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L1c89fa.  v0:= temp;
  #L1c89fc.  return v0;
}
procedure `void` `onCancelled`(`java.lang.Object` v0 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/a;.onCancelled:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `onPostExecute`(`java.lang.Object` v0 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/a;.onPostExecute:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `onPreExecute`(`io.fabric.sdk.android.services.concurrency.a` v0 @kind this) @signature `Lio/fabric/sdk/android/services/concurrency/a;.onPreExecute:()V` @AccessFlag PROTECTED {
    temp;

  #L1c8c78.  return @kind void;
}
procedure `void` `onProgressUpdate`(`io.fabric.sdk.android.services.concurrency.a` v0 @kind this, `java.lang.Object`[] v1 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/a;.onProgressUpdate:([Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;

  #L1c8c8c.  return @kind void;
}
