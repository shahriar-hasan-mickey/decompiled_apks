record `io.fabric.sdk.android.services.concurrency.a$g` @kind class @AccessFlag  extends `java.util.concurrent.Executor` @kind interface {
  `java.util.LinkedList` `io.fabric.sdk.android.services.concurrency.a$g.f` @AccessFlag FINAL;
  `java.lang.Runnable` `io.fabric.sdk.android.services.concurrency.a$g.g` @AccessFlag ;
}
procedure `void` `<init>`(`io.fabric.sdk.android.services.concurrency.a$g` v1 @kind this) @signature `Lio/fabric/sdk/android/services/concurrency/a$g;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L1c87e8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c87ee.  v0:= new `java.util.LinkedList`;
  #L1c87f2.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L1c87f8.  v1.`io.fabric.sdk.android.services.concurrency.a$g.f` @type ^`java.util.LinkedList` := v0 @kind object;
  #L1c87fc.  return @kind void;
}
procedure `void` `<init>`(`io.fabric.sdk.android.services.concurrency.a$g` v0 @kind this, `io.fabric.sdk.android.services.concurrency.a$a` v1 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/a$g;.<init>:(Lio/fabric/sdk/android/services/concurrency/a$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1c8810.  call `<init>`(v0) @signature `Lio/fabric/sdk/android/services/concurrency/a$g;.<init>:()V` @kind direct;
  #L1c8816.  return @kind void;
}
procedure `void` `execute`(`io.fabric.sdk.android.services.concurrency.a$g` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/a$g;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c8828.  @monitorenter v2
  #L1c882a.  v0:= v2.`io.fabric.sdk.android.services.concurrency.a$g.f` @type ^`java.util.LinkedList` @kind object;
  #L1c882e.  v1:= new `io.fabric.sdk.android.services.concurrency.a$g$a`;
  #L1c8832.  call `<init>`(v1, v2, v3) @signature `Lio/fabric/sdk/android/services/concurrency/a$g$a;.<init>:(Lio/fabric/sdk/android/services/concurrency/a$g;Ljava/lang/Runnable;)V` @kind direct;
  #L1c8838.  call temp:= `offer`(v0, v1) @signature `Ljava/util/LinkedList;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L1c883e.  v3:= v2.`io.fabric.sdk.android.services.concurrency.a$g.g` @type ^`java.lang.Runnable` @kind object;
  #L1c8842.  if v3 != 0 then goto L1c884c;
  #L1c8846.  call `scheduleNext`(v2) @signature `Lio/fabric/sdk/android/services/concurrency/a$g;.scheduleNext:()V` @kind virtual;
  #L1c884c.  @monitorexit v2
  #L1c884e.  return @kind void;
  #L1c8850.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c8852.  @monitorexit v2
  #L1c8854.  throw v3;
  catch `java.lang.Throwable` @[L1c882a..L1c884c] goto L1c8850;
}
procedure `void` `scheduleNext`(`io.fabric.sdk.android.services.concurrency.a$g` v2 @kind this) @signature `Lio/fabric/sdk/android/services/concurrency/a$g;.scheduleNext:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1c8874.  @monitorenter v2
  #L1c8876.  v0:= v2.`io.fabric.sdk.android.services.concurrency.a$g.f` @type ^`java.util.LinkedList` @kind object;
  #L1c887a.  call temp:= `poll`(v0) @signature `Ljava/util/LinkedList;.poll:()Ljava/lang/Object;` @kind virtual;
  #L1c8880.  v0:= temp @kind object;
  #L1c8882.  v0:= (`java.lang.Runnable`) v0 @kind object;
  #L1c8886.  v2.`io.fabric.sdk.android.services.concurrency.a$g.g` @type ^`java.lang.Runnable` := v0 @kind object;
  #L1c888a.  if v0 == 0 then goto L1c889c;
  #L1c888e.  v0:= `@@io.fabric.sdk.android.services.concurrency.a.p` @type ^`java.util.concurrent.Executor` @kind object;
  #L1c8892.  v1:= v2.`io.fabric.sdk.android.services.concurrency.a$g.g` @type ^`java.lang.Runnable` @kind object;
  #L1c8896.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L1c889c.  @monitorexit v2
  #L1c889e.  return @kind void;
  #L1c88a0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c88a2.  @monitorexit v2
  #L1c88a4.  throw v0;
  catch `java.lang.Throwable` @[L1c8876..L1c889c] goto L1c88a0;
}
