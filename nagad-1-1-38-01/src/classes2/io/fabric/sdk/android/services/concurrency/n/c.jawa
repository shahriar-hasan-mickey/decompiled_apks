record `io.fabric.sdk.android.services.concurrency.n.c` @kind class @AccessFlag PUBLIC extends `io.fabric.sdk.android.services.concurrency.n.a` @kind interface {
  `long` `io.fabric.sdk.android.services.concurrency.n.c.a` @AccessFlag PRIVATE_FINAL;
  `int` `io.fabric.sdk.android.services.concurrency.n.c.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.fabric.sdk.android.services.concurrency.n.c` v0 @kind this, `long` v1 , `int` v3 ) @signature `Lio/fabric/sdk/android/services/concurrency/n/c;.<init>:(JI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1c9d8c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c9d92.  v0.`io.fabric.sdk.android.services.concurrency.n.c.a` @type ^`long` := v1 @kind wide;
  #L1c9d96.  v0.`io.fabric.sdk.android.services.concurrency.n.c.b` @type ^`int` := v3;
  #L1c9d9a.  return @kind void;
}
procedure `long` `getDelayMillis`(`io.fabric.sdk.android.services.concurrency.n.c` v6 @kind this, `int` v7 ) @signature `Lio/fabric/sdk/android/services/concurrency/n/c;.getDelayMillis:(I)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1c9d5c.  v0:= v6.`io.fabric.sdk.android.services.concurrency.n.c.a` @type ^`long` @kind wide;
  #L1c9d60.  v0:= (`double`) v0 @kind l2d;
  #L1c9d62.  v2:= v6.`io.fabric.sdk.android.services.concurrency.n.c.b` @type ^`int`;
  #L1c9d66.  v2:= (`double`) v2 @kind i2d;
  #L1c9d68.  v4:= (`double`) v7 @kind i2d;
  #L1c9d6a.  call temp:= `pow`(v2, v4) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L1c9d70.  v2:= temp @kind wide;
  #L1c9d72.  v0:= v0 * v2 @kind double;
  #L1c9d76.  v0:= (`long`) v0 @kind d2l;
  #L1c9d78.  return v0 @kind wide;
}
