record `io.fabric.sdk.android.services.concurrency.g` @kind class @AccessFlag PUBLIC_ABSTRACT extends `io.fabric.sdk.android.services.concurrency.a` @kind class, `io.fabric.sdk.android.services.concurrency.c` @kind interface, `io.fabric.sdk.android.services.concurrency.j` @kind interface, `io.fabric.sdk.android.services.concurrency.m` @kind interface, `io.fabric.sdk.android.services.concurrency.b` @kind interface {
  `io.fabric.sdk.android.services.concurrency.k` `io.fabric.sdk.android.services.concurrency.g.s` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.fabric.sdk.android.services.concurrency.g` v1 @kind this) @signature `Lio/fabric/sdk/android/services/concurrency/g;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c94ac.  call `<init>`(v1) @signature `Lio/fabric/sdk/android/services/concurrency/a;.<init>:()V` @kind direct;
  #L1c94b2.  v0:= new `io.fabric.sdk.android.services.concurrency.k`;
  #L1c94b6.  call `<init>`(v0) @signature `Lio/fabric/sdk/android/services/concurrency/k;.<init>:()V` @kind direct;
  #L1c94bc.  v1.`io.fabric.sdk.android.services.concurrency.g.s` @type ^`io.fabric.sdk.android.services.concurrency.k` := v0 @kind object;
  #L1c94c0.  return @kind void;
}
procedure `void` `addDependency`(`io.fabric.sdk.android.services.concurrency.g` v2 @kind this, `io.fabric.sdk.android.services.concurrency.m` v3 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/g;.addDependency:(Lio/fabric/sdk/android/services/concurrency/m;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c94d4.  call temp:= `getStatus`(v2) @signature `Lio/fabric/sdk/android/services/concurrency/a;.getStatus:()Lio/fabric/sdk/android/services/concurrency/a$h;` @kind virtual;
  #L1c94da.  v0:= temp @kind object;
  #L1c94dc.  v1:= `@@io.fabric.sdk.android.services.concurrency.a$h.f` @type ^`io.fabric.sdk.android.services.concurrency.a$h` @kind object;
  #L1c94e0.  if v0 != v1 then goto L1c94fc;
  #L1c94e4.  call temp:= `getDelegate`(v2) @signature `Lio/fabric/sdk/android/services/concurrency/g;.getDelegate:()Lio/fabric/sdk/android/services/concurrency/c;` @kind virtual;
  #L1c94ea.  v0:= temp @kind object;
  #L1c94ec.  v0:= (`io.fabric.sdk.android.services.concurrency.j`) v0 @kind object;
  #L1c94f0.  v0:= (`io.fabric.sdk.android.services.concurrency.c`) v0 @kind object;
  #L1c94f4.  call `addDependency`(v0, v3) @signature `Lio/fabric/sdk/android/services/concurrency/c;.addDependency:(Ljava/lang/Object;)V` @kind interface;
  #L1c94fa.  return @kind void;
  #L1c94fc.  v3:= new `java.lang.IllegalStateException`;
  #L1c9500.  v0:= "Must not add Dependency after task is running" @kind object;
  #L1c9504.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c950a.  throw v3;
}
procedure `void` `addDependency`(`io.fabric.sdk.android.services.concurrency.g` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/g;.addDependency:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1c951c.  v1:= (`io.fabric.sdk.android.services.concurrency.m`) v1 @kind object;
  #L1c9520.  call `addDependency`(v0, v1) @signature `Lio/fabric/sdk/android/services/concurrency/g;.addDependency:(Lio/fabric/sdk/android/services/concurrency/m;)V` @kind virtual;
  #L1c9526.  return @kind void;
}
procedure `boolean` `areDependenciesMet`(`io.fabric.sdk.android.services.concurrency.g` v1 @kind this) @signature `Lio/fabric/sdk/android/services/concurrency/g;.areDependenciesMet:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c93f4.  call temp:= `getDelegate`(v1) @signature `Lio/fabric/sdk/android/services/concurrency/g;.getDelegate:()Lio/fabric/sdk/android/services/concurrency/c;` @kind virtual;
  #L1c93fa.  v0:= temp @kind object;
  #L1c93fc.  v0:= (`io.fabric.sdk.android.services.concurrency.j`) v0 @kind object;
  #L1c9400.  v0:= (`io.fabric.sdk.android.services.concurrency.c`) v0 @kind object;
  #L1c9404.  call temp:= `areDependenciesMet`(v0) @signature `Lio/fabric/sdk/android/services/concurrency/c;.areDependenciesMet:()Z` @kind interface;
  #L1c940a.  v0:= temp;
  #L1c940c.  return v0;
}
procedure `int` `compareTo`(`io.fabric.sdk.android.services.concurrency.g` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/g;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;

  #L1c944c.  call temp:= `a`(v0, v1) @signature `Lio/fabric/sdk/android/services/concurrency/f;.a:(Lio/fabric/sdk/android/services/concurrency/j;Ljava/lang/Object;)I` @kind static;
  #L1c9452.  v1:= temp;
  #L1c9454.  return v1;
}
procedure `void` `executeOnExecutor`(`io.fabric.sdk.android.services.concurrency.g` v1 @kind this, `java.util.concurrent.ExecutorService` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/g;.executeOnExecutor:(Ljava/util/concurrent/ExecutorService;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1c9538.  v0:= new `io.fabric.sdk.android.services.concurrency.g$a`;
  #L1c953c.  call `<init>`(v0, v2, v1) @signature `Lio/fabric/sdk/android/services/concurrency/g$a;.<init>:(Ljava/util/concurrent/Executor;Lio/fabric/sdk/android/services/concurrency/g;)V` @kind direct;
  #L1c9542.  call temp:= `executeOnExecutor`(v1, v0, v3) @signature `Lio/fabric/sdk/android/services/concurrency/a;.executeOnExecutor:(Ljava/util/concurrent/Executor;[Ljava/lang/Object;)Lio/fabric/sdk/android/services/concurrency/a;` @kind super;
  #L1c9548.  return @kind void;
}
procedure `io.fabric.sdk.android.services.concurrency.c` `getDelegate`(`io.fabric.sdk.android.services.concurrency.g` v1 @kind this) @signature `Lio/fabric/sdk/android/services/concurrency/g;.getDelegate:()Lio/fabric/sdk/android/services/concurrency/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c9468.  v0:= v1.`io.fabric.sdk.android.services.concurrency.g.s` @type ^`io.fabric.sdk.android.services.concurrency.k` @kind object;
  #L1c946c.  return v0 @kind object;
}
procedure `java.util.Collection` `getDependencies`(`io.fabric.sdk.android.services.concurrency.g` v1 @kind this) @signature `Lio/fabric/sdk/android/services/concurrency/g;.getDependencies:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c9480.  call temp:= `getDelegate`(v1) @signature `Lio/fabric/sdk/android/services/concurrency/g;.getDelegate:()Lio/fabric/sdk/android/services/concurrency/c;` @kind virtual;
  #L1c9486.  v0:= temp @kind object;
  #L1c9488.  v0:= (`io.fabric.sdk.android.services.concurrency.j`) v0 @kind object;
  #L1c948c.  v0:= (`io.fabric.sdk.android.services.concurrency.c`) v0 @kind object;
  #L1c9490.  call temp:= `getDependencies`(v0) @signature `Lio/fabric/sdk/android/services/concurrency/c;.getDependencies:()Ljava/util/Collection;` @kind interface;
  #L1c9496.  v0:= temp @kind object;
  #L1c9498.  return v0 @kind object;
}
procedure `boolean` `isFinished`(`io.fabric.sdk.android.services.concurrency.g` v1 @kind this) @signature `Lio/fabric/sdk/android/services/concurrency/g;.isFinished:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c9420.  call temp:= `getDelegate`(v1) @signature `Lio/fabric/sdk/android/services/concurrency/g;.getDelegate:()Lio/fabric/sdk/android/services/concurrency/c;` @kind virtual;
  #L1c9426.  v0:= temp @kind object;
  #L1c9428.  v0:= (`io.fabric.sdk.android.services.concurrency.j`) v0 @kind object;
  #L1c942c.  v0:= (`io.fabric.sdk.android.services.concurrency.m`) v0 @kind object;
  #L1c9430.  call temp:= `isFinished`(v0) @signature `Lio/fabric/sdk/android/services/concurrency/m;.isFinished:()Z` @kind interface;
  #L1c9436.  v0:= temp;
  #L1c9438.  return v0;
}
procedure `void` `setError`(`io.fabric.sdk.android.services.concurrency.g` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/g;.setError:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c955c.  call temp:= `getDelegate`(v1) @signature `Lio/fabric/sdk/android/services/concurrency/g;.getDelegate:()Lio/fabric/sdk/android/services/concurrency/c;` @kind virtual;
  #L1c9562.  v0:= temp @kind object;
  #L1c9564.  v0:= (`io.fabric.sdk.android.services.concurrency.j`) v0 @kind object;
  #L1c9568.  v0:= (`io.fabric.sdk.android.services.concurrency.m`) v0 @kind object;
  #L1c956c.  call `setError`(v0, v2) @signature `Lio/fabric/sdk/android/services/concurrency/m;.setError:(Ljava/lang/Throwable;)V` @kind interface;
  #L1c9572.  return @kind void;
}
procedure `void` `setFinished`(`io.fabric.sdk.android.services.concurrency.g` v1 @kind this, `boolean` v2 ) @signature `Lio/fabric/sdk/android/services/concurrency/g;.setFinished:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c9584.  call temp:= `getDelegate`(v1) @signature `Lio/fabric/sdk/android/services/concurrency/g;.getDelegate:()Lio/fabric/sdk/android/services/concurrency/c;` @kind virtual;
  #L1c958a.  v0:= temp @kind object;
  #L1c958c.  v0:= (`io.fabric.sdk.android.services.concurrency.j`) v0 @kind object;
  #L1c9590.  v0:= (`io.fabric.sdk.android.services.concurrency.m`) v0 @kind object;
  #L1c9594.  call `setFinished`(v0, v2) @signature `Lio/fabric/sdk/android/services/concurrency/m;.setFinished:(Z)V` @kind interface;
  #L1c959a.  return @kind void;
}
