record `io.fabric.sdk.android.services.network.HttpRequest$a` @kind class @AccessFlag  extends `io.fabric.sdk.android.services.network.HttpRequest$b` @kind class {
  `java.io.InputStream` `io.fabric.sdk.android.services.network.HttpRequest$a.h` @AccessFlag FINAL_SYNTHETIC;
  `java.io.OutputStream` `io.fabric.sdk.android.services.network.HttpRequest$a.i` @AccessFlag FINAL_SYNTHETIC;
  `io.fabric.sdk.android.services.network.HttpRequest` `io.fabric.sdk.android.services.network.HttpRequest$a.j` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.fabric.sdk.android.services.network.HttpRequest$a` v0 @kind this, `io.fabric.sdk.android.services.network.HttpRequest` v1 @kind object, `java.io.Closeable` v2 @kind object, `boolean` v3 , `java.io.InputStream` v4 @kind object, `java.io.OutputStream` v5 @kind object) @signature `Lio/fabric/sdk/android/services/network/HttpRequest$a;.<init>:(Lio/fabric/sdk/android/services/network/HttpRequest;Ljava/io/Closeable;ZLjava/io/InputStream;Ljava/io/OutputStream;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1cac60.  v0.`io.fabric.sdk.android.services.network.HttpRequest$a.j` @type ^`io.fabric.sdk.android.services.network.HttpRequest` := v1 @kind object;
  #L1cac64.  v0.`io.fabric.sdk.android.services.network.HttpRequest$a.h` @type ^`java.io.InputStream` := v4 @kind object;
  #L1cac68.  v0.`io.fabric.sdk.android.services.network.HttpRequest$a.i` @type ^`java.io.OutputStream` := v5 @kind object;
  #L1cac6c.  call `<init>`(v0, v2, v3) @signature `Lio/fabric/sdk/android/services/network/HttpRequest$b;.<init>:(Ljava/io/Closeable;Z)V` @kind direct;
  #L1cac72.  return @kind void;
}
procedure `io.fabric.sdk.android.services.network.HttpRequest` `run`(`io.fabric.sdk.android.services.network.HttpRequest$a` v4 @kind this) @signature `Lio/fabric/sdk/android/services/network/HttpRequest$a;.run:()Lio/fabric/sdk/android/services/network/HttpRequest;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1cabfc.  v0:= v4.`io.fabric.sdk.android.services.network.HttpRequest$a.j` @type ^`io.fabric.sdk.android.services.network.HttpRequest` @kind object;
  #L1cac00.  call temp:= `a`(v0) @signature `Lio/fabric/sdk/android/services/network/HttpRequest;.a:(Lio/fabric/sdk/android/services/network/HttpRequest;)I` @kind static;
  #L1cac06.  v0:= temp;
  #L1cac08.  v0:= new `byte`[v0];
  #L1cac0c.  v1:= v4.`io.fabric.sdk.android.services.network.HttpRequest$a.h` @type ^`java.io.InputStream` @kind object;
  #L1cac10.  call temp:= `read`(v1, v0) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L1cac16.  v1:= temp;
  #L1cac18.  v2:= -1I;
  #L1cac1a.  if v1 == v2 then goto L1cac2c;
  #L1cac1e.  v2:= v4.`io.fabric.sdk.android.services.network.HttpRequest$a.i` @type ^`java.io.OutputStream` @kind object;
  #L1cac22.  v3:= 0I;
  #L1cac24.  call `write`(v2, v0, v3, v1) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L1cac2a.  goto L1cac0c;
  #L1cac2c.  v0:= v4.`io.fabric.sdk.android.services.network.HttpRequest$a.j` @type ^`io.fabric.sdk.android.services.network.HttpRequest` @kind object;
  #L1cac30.  return v0 @kind object;
}
procedure `java.lang.Object` `run`(`io.fabric.sdk.android.services.network.HttpRequest$a` v1 @kind this) @signature `Lio/fabric/sdk/android/services/network/HttpRequest$a;.run:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1cac44.  call temp:= `run`(v1) @signature `Lio/fabric/sdk/android/services/network/HttpRequest$a;.run:()Lio/fabric/sdk/android/services/network/HttpRequest;` @kind virtual;
  #L1cac4a.  v0:= temp @kind object;
  #L1cac4c.  return v0 @kind object;
}
