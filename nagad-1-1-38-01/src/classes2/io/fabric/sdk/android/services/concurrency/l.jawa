record `io.fabric.sdk.android.services.concurrency.l` @kind class @AccessFlag PUBLIC extends `java.util.concurrent.ThreadPoolExecutor` @kind class {
}
global `int` `@@io.fabric.sdk.android.services.concurrency.l.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@io.fabric.sdk.android.services.concurrency.l.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@io.fabric.sdk.android.services.concurrency.l.h` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/fabric/sdk/android/services/concurrency/l;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1c9b0c.  call temp:= `getRuntime`() @signature `Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;` @kind static;
  #L1c9b12.  v0:= temp @kind object;
  #L1c9b14.  call temp:= `availableProcessors`(v0) @signature `Ljava/lang/Runtime;.availableProcessors:()I` @kind virtual;
  #L1c9b1a.  v0:= temp;
  #L1c9b1c.  `@@io.fabric.sdk.android.services.concurrency.l.f` @type ^`int` := v0;
  #L1c9b20.  v0:= `@@io.fabric.sdk.android.services.concurrency.l.f` @type ^`int`;
  #L1c9b24.  v1:= v0 + 1;
  #L1c9b28.  `@@io.fabric.sdk.android.services.concurrency.l.g` @type ^`int` := v1;
  #L1c9b2c.  v0:= v0 * 2;
  #L1c9b30.  v0:= v0 + 1;
  #L1c9b34.  `@@io.fabric.sdk.android.services.concurrency.l.h` @type ^`int` := v0;
  #L1c9b38.  return @kind void;
}
procedure `void` `<init>`(`io.fabric.sdk.android.services.concurrency.l` v0 @kind this, `int` v1 , `int` v2 , `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object, `io.fabric.sdk.android.services.concurrency.d` v6 @kind object, `java.util.concurrent.ThreadFactory` v7 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/l;.<init>:(IIJLjava/util/concurrent/TimeUnit;Lio/fabric/sdk/android/services/concurrency/d;Ljava/util/concurrent/ThreadFactory;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c9b4c.  call `<init>`(v0, v1, v2, v3, v5, v6, v7) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L1c9b52.  call temp:= `prestartAllCoreThreads`(v0) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.prestartAllCoreThreads:()I` @kind virtual;
  #L1c9b58.  return @kind void;
}
procedure `io.fabric.sdk.android.services.concurrency.l` `create`() @signature `Lio/fabric/sdk/android/services/concurrency/l;.create:()Lio/fabric/sdk/android/services/concurrency/l;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1c9a50.  v0:= `@@io.fabric.sdk.android.services.concurrency.l.g` @type ^`int`;
  #L1c9a54.  v1:= `@@io.fabric.sdk.android.services.concurrency.l.h` @type ^`int`;
  #L1c9a58.  call temp:= `create`(v0, v1) @signature `Lio/fabric/sdk/android/services/concurrency/l;.create:(II)Lio/fabric/sdk/android/services/concurrency/l;` @kind static;
  #L1c9a5e.  v0:= temp @kind object;
  #L1c9a60.  return v0 @kind object;
}
procedure `io.fabric.sdk.android.services.concurrency.l` `create`(`int` v9 , `int` v10 ) @signature `Lio/fabric/sdk/android/services/concurrency/l;.create:(II)Lio/fabric/sdk/android/services/concurrency/l;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1c9a74.  v8:= new `io.fabric.sdk.android.services.concurrency.l`;
  #L1c9a78.  v5:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1c9a7c.  v6:= new `io.fabric.sdk.android.services.concurrency.d`;
  #L1c9a80.  call `<init>`(v6) @signature `Lio/fabric/sdk/android/services/concurrency/d;.<init>:()V` @kind direct;
  #L1c9a86.  v7:= new `io.fabric.sdk.android.services.concurrency.l$a`;
  #L1c9a8a.  v0:= 10I;
  #L1c9a8e.  call `<init>`(v7, v0) @signature `Lio/fabric/sdk/android/services/concurrency/l$a;.<init>:(I)V` @kind direct;
  #L1c9a94.  v3:= 1L;
  #L1c9a98.  v0:= v8 @kind object;
  #L1c9a9a.  v1:= v9;
  #L1c9a9c.  v2:= v10;
  #L1c9a9e.  call `<init>`(v0, v1, v2, v3, v5, v6, v7) @signature `Lio/fabric/sdk/android/services/concurrency/l;.<init>:(IIJLjava/util/concurrent/TimeUnit;Lio/fabric/sdk/android/services/concurrency/d;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L1c9aa4.  return v8 @kind object;
}
procedure `void` `afterExecute`(`io.fabric.sdk.android.services.concurrency.l` v2 @kind this, `java.lang.Runnable` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/l;.afterExecute:(Ljava/lang/Runnable;Ljava/lang/Throwable;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1c9b6c.  v0:= v3 @kind object;
  #L1c9b6e.  v0:= (`io.fabric.sdk.android.services.concurrency.m`) v0 @kind object;
  #L1c9b72.  v1:= 1I;
  #L1c9b74.  call `setFinished`(v0, v1) @signature `Lio/fabric/sdk/android/services/concurrency/m;.setFinished:(Z)V` @kind interface;
  #L1c9b7a.  call `setError`(v0, v4) @signature `Lio/fabric/sdk/android/services/concurrency/m;.setError:(Ljava/lang/Throwable;)V` @kind interface;
  #L1c9b80.  call temp:= `getQueue`(v2) @signature `Lio/fabric/sdk/android/services/concurrency/l;.getQueue:()Lio/fabric/sdk/android/services/concurrency/d;` @kind virtual;
  #L1c9b86.  v0:= temp @kind object;
  #L1c9b88.  call `recycleBlockedQueue`(v0) @signature `Lio/fabric/sdk/android/services/concurrency/d;.recycleBlockedQueue:()V` @kind virtual;
  #L1c9b8e.  call `afterExecute`(v2, v3, v4) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.afterExecute:(Ljava/lang/Runnable;Ljava/lang/Throwable;)V` @kind super;
  #L1c9b94.  return @kind void;
}
procedure `void` `execute`(`io.fabric.sdk.android.services.concurrency.l` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/l;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c9ba8.  call temp:= `isProperDelegate`(v2) @signature `Lio/fabric/sdk/android/services/concurrency/k;.isProperDelegate:(Ljava/lang/Object;)Z` @kind static;
  #L1c9bae.  v0:= temp;
  #L1c9bb0.  if v0 == 0 then goto L1c9bbc;
  #L1c9bb4.  call `execute`(v1, v2) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.execute:(Ljava/lang/Runnable;)V` @kind super;
  #L1c9bba.  goto L1c9bcc;
  #L1c9bbc.  v0:= 0I;
  #L1c9bbe.  call temp:= `newTaskFor`(v1, v2, v0) @signature `Lio/fabric/sdk/android/services/concurrency/l;.newTaskFor:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/RunnableFuture;` @kind virtual;
  #L1c9bc4.  v2:= temp @kind object;
  #L1c9bc6.  call `execute`(v1, v2) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.execute:(Ljava/lang/Runnable;)V` @kind super;
  #L1c9bcc.  return @kind void;
}
procedure `io.fabric.sdk.android.services.concurrency.d` `getQueue`(`io.fabric.sdk.android.services.concurrency.l` v1 @kind this) @signature `Lio/fabric/sdk/android/services/concurrency/l;.getQueue:()Lio/fabric/sdk/android/services/concurrency/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c9a30.  call temp:= `getQueue`(v1) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.getQueue:()Ljava/util/concurrent/BlockingQueue;` @kind super;
  #L1c9a36.  v0:= temp @kind object;
  #L1c9a38.  v0:= (`io.fabric.sdk.android.services.concurrency.d`) v0 @kind object;
  #L1c9a3c.  return v0 @kind object;
}
procedure `java.util.concurrent.BlockingQueue` `getQueue`(`io.fabric.sdk.android.services.concurrency.l` v1 @kind this) @signature `Lio/fabric/sdk/android/services/concurrency/l;.getQueue:()Ljava/util/concurrent/BlockingQueue;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1c9ab8.  call temp:= `getQueue`(v1) @signature `Lio/fabric/sdk/android/services/concurrency/l;.getQueue:()Lio/fabric/sdk/android/services/concurrency/d;` @kind virtual;
  #L1c9abe.  v0:= temp @kind object;
  #L1c9ac0.  return v0 @kind object;
}
procedure `java.util.concurrent.RunnableFuture` `newTaskFor`(`io.fabric.sdk.android.services.concurrency.l` v1 @kind this, `java.lang.Runnable` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/l;.newTaskFor:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/RunnableFuture;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1c9ad4.  v0:= new `io.fabric.sdk.android.services.concurrency.i`;
  #L1c9ad8.  call `<init>`(v0, v2, v3) @signature `Lio/fabric/sdk/android/services/concurrency/i;.<init>:(Ljava/lang/Runnable;Ljava/lang/Object;)V` @kind direct;
  #L1c9ade.  return v0 @kind object;
}
procedure `java.util.concurrent.RunnableFuture` `newTaskFor`(`io.fabric.sdk.android.services.concurrency.l` v1 @kind this, `java.util.concurrent.Callable` v2 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/l;.newTaskFor:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/RunnableFuture;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1c9af0.  v0:= new `io.fabric.sdk.android.services.concurrency.i`;
  #L1c9af4.  call `<init>`(v0, v2) @signature `Lio/fabric/sdk/android/services/concurrency/i;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L1c9afa.  return v0 @kind object;
}
