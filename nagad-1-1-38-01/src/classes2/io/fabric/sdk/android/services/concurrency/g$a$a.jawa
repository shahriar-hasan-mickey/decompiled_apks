record `io.fabric.sdk.android.services.concurrency.g$a$a` @kind class @AccessFlag  extends `io.fabric.sdk.android.services.concurrency.i` @kind class {
  `io.fabric.sdk.android.services.concurrency.g$a` `io.fabric.sdk.android.services.concurrency.g$a$a.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.fabric.sdk.android.services.concurrency.g$a$a` v0 @kind this, `io.fabric.sdk.android.services.concurrency.g$a` v1 @kind object, `java.lang.Runnable` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/g$a$a;.<init>:(Lio/fabric/sdk/android/services/concurrency/g$a;Ljava/lang/Runnable;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c9378.  v0.`io.fabric.sdk.android.services.concurrency.g$a$a.g` @type ^`io.fabric.sdk.android.services.concurrency.g$a` := v1 @kind object;
  #L1c937c.  call `<init>`(v0, v2, v3) @signature `Lio/fabric/sdk/android/services/concurrency/i;.<init>:(Ljava/lang/Runnable;Ljava/lang/Object;)V` @kind direct;
  #L1c9382.  return @kind void;
}
procedure `io.fabric.sdk.android.services.concurrency.c` `getDelegate`(`io.fabric.sdk.android.services.concurrency.g$a$a` v1 @kind this) @signature `Lio/fabric/sdk/android/services/concurrency/g$a$a;.getDelegate:()Lio/fabric/sdk/android/services/concurrency/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c9358.  v0:= v1.`io.fabric.sdk.android.services.concurrency.g$a$a.g` @type ^`io.fabric.sdk.android.services.concurrency.g$a` @kind object;
  #L1c935c.  call temp:= `a`(v0) @signature `Lio/fabric/sdk/android/services/concurrency/g$a;.a:(Lio/fabric/sdk/android/services/concurrency/g$a;)Lio/fabric/sdk/android/services/concurrency/g;` @kind static;
  #L1c9362.  v0:= temp @kind object;
  #L1c9364.  return v0 @kind object;
}
