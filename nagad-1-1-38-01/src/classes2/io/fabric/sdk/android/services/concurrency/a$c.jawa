record `io.fabric.sdk.android.services.concurrency.a$c` @kind class @AccessFlag  extends `java.util.concurrent.FutureTask` @kind class {
  `io.fabric.sdk.android.services.concurrency.a` `io.fabric.sdk.android.services.concurrency.a$c.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.fabric.sdk.android.services.concurrency.a$c` v0 @kind this, `io.fabric.sdk.android.services.concurrency.a` v1 @kind object, `java.util.concurrent.Callable` v2 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/a$c;.<init>:(Lio/fabric/sdk/android/services/concurrency/a;Ljava/util/concurrent/Callable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c8600.  v0.`io.fabric.sdk.android.services.concurrency.a$c.f` @type ^`io.fabric.sdk.android.services.concurrency.a` := v1 @kind object;
  #L1c8604.  call `<init>`(v0, v2) @signature `Ljava/util/concurrent/FutureTask;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L1c860a.  return @kind void;
}
procedure `void` `done`(`io.fabric.sdk.android.services.concurrency.a$c` v3 @kind this) @signature `Lio/fabric/sdk/android/services/concurrency/a$c;.done:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L1c861c.  v0:= v3.`io.fabric.sdk.android.services.concurrency.a$c.f` @type ^`io.fabric.sdk.android.services.concurrency.a` @kind object;
  #L1c8620.  call temp:= `get`(v3) @signature `Ljava/util/concurrent/FutureTask;.get:()Ljava/lang/Object;` @kind virtual;
  #L1c8626.  v1:= temp @kind object;
  #L1c8628.  call `b`(v0, v1) @signature `Lio/fabric/sdk/android/services/concurrency/a;.b:(Lio/fabric/sdk/android/services/concurrency/a;Ljava/lang/Object;)V` @kind static;
  #L1c862e.  goto L1c8664;
  #L1c8630.  v0:= v3.`io.fabric.sdk.android.services.concurrency.a$c.f` @type ^`io.fabric.sdk.android.services.concurrency.a` @kind object;
  #L1c8634.  v1:= 0I;
  #L1c8636.  call `b`(v0, v1) @signature `Lio/fabric/sdk/android/services/concurrency/a;.b:(Lio/fabric/sdk/android/services/concurrency/a;Ljava/lang/Object;)V` @kind static;
  #L1c863c.  goto L1c8664;
  #L1c863e.  v0:= Exception @type ^`java.util.concurrent.ExecutionException` @kind object;
  #L1c8640.  v1:= new `java.lang.RuntimeException`;
  #L1c8644.  call temp:= `getCause`(v0) @signature `Ljava/util/concurrent/ExecutionException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L1c864a.  v0:= temp @kind object;
  #L1c864c.  v2:= "An error occured while executing doInBackground()" @kind object;
  #L1c8650.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L1c8656.  throw v1;
  #L1c8658.  v0:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L1c865a.  v1:= "AsyncTask" @kind object;
  #L1c865e.  call temp:= `w`(v1, v0) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L1c8664.  return @kind void;
  catch `java.lang.InterruptedException` @[L1c861c..L1c862e] goto L1c8658;
  catch `java.util.concurrent.ExecutionException` @[L1c861c..L1c862e] goto L1c863e;
  catch `java.util.concurrent.CancellationException` @[L1c861c..L1c862e] goto L1c8630;
}
