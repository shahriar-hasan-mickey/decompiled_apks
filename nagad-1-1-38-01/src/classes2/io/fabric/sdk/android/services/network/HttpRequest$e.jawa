record `io.fabric.sdk.android.services.network.HttpRequest$e` @kind class @AccessFlag PUBLIC extends `java.io.BufferedOutputStream` @kind class {
  `java.nio.charset.CharsetEncoder` `io.fabric.sdk.android.services.network.HttpRequest$e.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.fabric.sdk.android.services.network.HttpRequest$e` v0 @kind this, `java.io.OutputStream` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lio/fabric/sdk/android/services/network/HttpRequest$e;.<init>:(Ljava/io/OutputStream;Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1caec0.  call `<init>`(v0, v1, v3) @signature `Ljava/io/BufferedOutputStream;.<init>:(Ljava/io/OutputStream;I)V` @kind direct;
  #L1caec6.  call temp:= `a`(v2) @signature `Lio/fabric/sdk/android/services/network/HttpRequest;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1caecc.  v1:= temp @kind object;
  #L1caece.  call temp:= `forName`(v1) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L1caed4.  v1:= temp @kind object;
  #L1caed6.  call temp:= `newEncoder`(v1) @signature `Ljava/nio/charset/Charset;.newEncoder:()Ljava/nio/charset/CharsetEncoder;` @kind virtual;
  #L1caedc.  v1:= temp @kind object;
  #L1caede.  v0.`io.fabric.sdk.android.services.network.HttpRequest$e.f` @type ^`java.nio.charset.CharsetEncoder` := v1 @kind object;
  #L1caee2.  return @kind void;
}
procedure `io.fabric.sdk.android.services.network.HttpRequest$e` `write`(`io.fabric.sdk.android.services.network.HttpRequest$e` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lio/fabric/sdk/android/services/network/HttpRequest$e;.write:(Ljava/lang/String;)Lio/fabric/sdk/android/services/network/HttpRequest$e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1cae80.  v0:= v2.`io.fabric.sdk.android.services.network.HttpRequest$e.f` @type ^`java.nio.charset.CharsetEncoder` @kind object;
  #L1cae84.  call temp:= `wrap`(v3) @signature `Ljava/nio/CharBuffer;.wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;` @kind static;
  #L1cae8a.  v3:= temp @kind object;
  #L1cae8c.  call temp:= `encode`(v0, v3) @signature `Ljava/nio/charset/CharsetEncoder;.encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L1cae92.  v3:= temp @kind object;
  #L1cae94.  call temp:= `array`(v3) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L1cae9a.  v0:= temp @kind object;
  #L1cae9c.  call temp:= `limit`(v3) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L1caea2.  v3:= temp;
  #L1caea4.  v1:= 0I;
  #L1caea6.  call `write`(v2, v0, v1, v3) @signature `Ljava/io/BufferedOutputStream;.write:([BII)V` @kind super;
  #L1caeac.  return v2 @kind object;
}
