record `io.fabric.sdk.android.services.network.h` @kind class @AccessFlag  {
  `java.security.KeyStore` `io.fabric.sdk.android.services.network.h.a` @AccessFlag FINAL;
  `java.util.HashMap` `io.fabric.sdk.android.services.network.h.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.fabric.sdk.android.services.network.h` v0 @kind this, `java.io.InputStream` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lio/fabric/sdk/android/services/network/h;.<init>:(Ljava/io/InputStream;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1cc3d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1cc3de.  call temp:= `a`(v0, v1, v2) @signature `Lio/fabric/sdk/android/services/network/h;.a:(Ljava/io/InputStream;Ljava/lang/String;)Ljava/security/KeyStore;` @kind direct;
  #L1cc3e4.  v1:= temp @kind object;
  #L1cc3e6.  call temp:= `a`(v0, v1) @signature `Lio/fabric/sdk/android/services/network/h;.a:(Ljava/security/KeyStore;)Ljava/util/HashMap;` @kind direct;
  #L1cc3ec.  v2:= temp @kind object;
  #L1cc3ee.  v0.`io.fabric.sdk.android.services.network.h.b` @type ^`java.util.HashMap` := v2 @kind object;
  #L1cc3f2.  v0.`io.fabric.sdk.android.services.network.h.a` @type ^`java.security.KeyStore` := v1 @kind object;
  #L1cc3f6.  return @kind void;
}
procedure `java.security.KeyStore` `a`(`io.fabric.sdk.android.services.network.h` v2 @kind this, `java.io.InputStream` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lio/fabric/sdk/android/services/network/h;.a:(Ljava/io/InputStream;Ljava/lang/String;)Ljava/security/KeyStore;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1cc244.  v0:= "BKS" @kind object;
  #L1cc248.  call temp:= `getInstance`(v0) @signature `Ljava/security/KeyStore;.getInstance:(Ljava/lang/String;)Ljava/security/KeyStore;` @kind static;
  #L1cc24e.  v0:= temp @kind object;
  #L1cc250.  v1:= new `java.io.BufferedInputStream`;
  #L1cc254.  call `<init>`(v1, v3) @signature `Ljava/io/BufferedInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L1cc25a.  call temp:= `toCharArray`(v4) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L1cc260.  v3:= temp @kind object;
  #L1cc262.  call `load`(v0, v1, v3) @signature `Ljava/security/KeyStore;.load:(Ljava/io/InputStream;[C)V` @kind virtual;
  #L1cc268.  call `close`(v1) @signature `Ljava/io/BufferedInputStream;.close:()V` @kind virtual;
  #L1cc26e.  return v0 @kind object;
  #L1cc270.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1cc272.  call `close`(v1) @signature `Ljava/io/BufferedInputStream;.close:()V` @kind virtual;
  #L1cc278.  throw v3;
  #L1cc27a.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L1cc27c.  v4:= new `java.lang.AssertionError`;
  #L1cc280.  call `<init>`(v4, v3) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1cc286.  throw v4;
  #L1cc288.  v3:= Exception @type ^`java.security.cert.CertificateException` @kind object;
  #L1cc28a.  v4:= new `java.lang.AssertionError`;
  #L1cc28e.  call `<init>`(v4, v3) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1cc294.  throw v4;
  #L1cc296.  v3:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L1cc298.  v4:= new `java.lang.AssertionError`;
  #L1cc29c.  call `<init>`(v4, v3) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1cc2a2.  throw v4;
  #L1cc2a4.  v3:= Exception @type ^`java.security.KeyStoreException` @kind object;
  #L1cc2a6.  v4:= new `java.lang.AssertionError`;
  #L1cc2aa.  call `<init>`(v4, v3) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1cc2b0.  throw v4;
  catch `java.security.KeyStoreException` @[L1cc244..L1cc25a] goto L1cc2a4;
  catch `java.security.NoSuchAlgorithmException` @[L1cc244..L1cc25a] goto L1cc296;
  catch `java.security.cert.CertificateException` @[L1cc244..L1cc25a] goto L1cc288;
  catch `java.io.IOException` @[L1cc244..L1cc25a] goto L1cc27a;
  catch `java.lang.Throwable` @[L1cc25a..L1cc268] goto L1cc270;
  catch `java.security.KeyStoreException` @[L1cc268..L1cc27a] goto L1cc2a4;
  catch `java.security.NoSuchAlgorithmException` @[L1cc268..L1cc27a] goto L1cc296;
  catch `java.security.cert.CertificateException` @[L1cc268..L1cc27a] goto L1cc288;
  catch `java.io.IOException` @[L1cc268..L1cc27a] goto L1cc27a;
}
procedure `java.util.HashMap` `a`(`io.fabric.sdk.android.services.network.h` v4 @kind this, `java.security.KeyStore` v5 @kind object) @signature `Lio/fabric/sdk/android/services/network/h;.a:(Ljava/security/KeyStore;)Ljava/util/HashMap;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1cc35c.  v0:= new `java.util.HashMap`;
  #L1cc360.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L1cc366.  call temp:= `aliases`(v5) @signature `Ljava/security/KeyStore;.aliases:()Ljava/util/Enumeration;` @kind virtual;
  #L1cc36c.  v1:= temp @kind object;
  #L1cc36e.  call temp:= `hasMoreElements`(v1) @signature `Ljava/util/Enumeration;.hasMoreElements:()Z` @kind interface;
  #L1cc374.  v2:= temp;
  #L1cc376.  if v2 == 0 then goto L1cc3a6;
  #L1cc37a.  call temp:= `nextElement`(v1) @signature `Ljava/util/Enumeration;.nextElement:()Ljava/lang/Object;` @kind interface;
  #L1cc380.  v2:= temp @kind object;
  #L1cc382.  v2:= (`java.lang.String`) v2 @kind object;
  #L1cc386.  call temp:= `getCertificate`(v5, v2) @signature `Ljava/security/KeyStore;.getCertificate:(Ljava/lang/String;)Ljava/security/cert/Certificate;` @kind virtual;
  #L1cc38c.  v2:= temp @kind object;
  #L1cc38e.  v2:= (`java.security.cert.X509Certificate`) v2 @kind object;
  #L1cc392.  if v2 == 0 then goto L1cc36e;
  #L1cc396.  call temp:= `getSubjectX500Principal`(v2) @signature `Ljava/security/cert/X509Certificate;.getSubjectX500Principal:()Ljavax/security/auth/x500/X500Principal;` @kind virtual;
  #L1cc39c.  v3:= temp @kind object;
  #L1cc39e.  call temp:= `put`(v0, v3, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1cc3a4.  goto L1cc36e;
  #L1cc3a6.  return v0 @kind object;
  #L1cc3a8.  v5:= Exception @type ^`java.security.KeyStoreException` @kind object;
  #L1cc3aa.  v0:= new `java.lang.AssertionError`;
  #L1cc3ae.  call `<init>`(v0, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1cc3b4.  throw v0;
  catch `java.security.KeyStoreException` @[L1cc35c..L1cc3a4] goto L1cc3a8;
}
procedure `java.security.cert.X509Certificate` `getTrustRootFor`(`io.fabric.sdk.android.services.network.h` v4 @kind this, `java.security.cert.X509Certificate` v5 @kind object) @signature `Lio/fabric/sdk/android/services/network/h;.getTrustRootFor:(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1cc2ec.  v0:= v4.`io.fabric.sdk.android.services.network.h.b` @type ^`java.util.HashMap` @kind object;
  #L1cc2f0.  call temp:= `getIssuerX500Principal`(v5) @signature `Ljava/security/cert/X509Certificate;.getIssuerX500Principal:()Ljavax/security/auth/x500/X500Principal;` @kind virtual;
  #L1cc2f6.  v1:= temp @kind object;
  #L1cc2f8.  call temp:= `get`(v0, v1) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1cc2fe.  v0:= temp @kind object;
  #L1cc300.  v0:= (`java.security.cert.X509Certificate`) v0 @kind object;
  #L1cc304.  v1:= 0I;
  #L1cc306.  if v0 != 0 then goto L1cc30c;
  #L1cc30a.  return v1 @kind object;
  #L1cc30c.  call temp:= `getSubjectX500Principal`(v0) @signature `Ljava/security/cert/X509Certificate;.getSubjectX500Principal:()Ljavax/security/auth/x500/X500Principal;` @kind virtual;
  #L1cc312.  v2:= temp @kind object;
  #L1cc314.  call temp:= `getSubjectX500Principal`(v5) @signature `Ljava/security/cert/X509Certificate;.getSubjectX500Principal:()Ljavax/security/auth/x500/X500Principal;` @kind virtual;
  #L1cc31a.  v3:= temp @kind object;
  #L1cc31c.  call temp:= `equals`(v2, v3) @signature `Ljavax/security/auth/x500/X500Principal;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1cc322.  v2:= temp;
  #L1cc324.  if v2 == 0 then goto L1cc32a;
  #L1cc328.  return v1 @kind object;
  #L1cc32a.  call temp:= `getPublicKey`(v0) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L1cc330.  v2:= temp @kind object;
  #L1cc332.  call `verify`(v5, v2) @signature `Ljava/security/cert/X509Certificate;.verify:(Ljava/security/PublicKey;)V` @kind virtual;
  #L1cc338.  return v0 @kind object;
  #L1cc33a.  return v1 @kind object;
  catch `java.security.GeneralSecurityException` @[L1cc32a..L1cc338] goto L1cc33a;
}
procedure `boolean` `isTrustRoot`(`io.fabric.sdk.android.services.network.h` v2 @kind this, `java.security.cert.X509Certificate` v3 @kind object) @signature `Lio/fabric/sdk/android/services/network/h;.isTrustRoot:(Ljava/security/cert/X509Certificate;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1cc1f4.  v0:= v2.`io.fabric.sdk.android.services.network.h.b` @type ^`java.util.HashMap` @kind object;
  #L1cc1f8.  call temp:= `getSubjectX500Principal`(v3) @signature `Ljava/security/cert/X509Certificate;.getSubjectX500Principal:()Ljavax/security/auth/x500/X500Principal;` @kind virtual;
  #L1cc1fe.  v1:= temp @kind object;
  #L1cc200.  call temp:= `get`(v0, v1) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1cc206.  v0:= temp @kind object;
  #L1cc208.  v0:= (`java.security.cert.X509Certificate`) v0 @kind object;
  #L1cc20c.  if v0 == 0 then goto L1cc230;
  #L1cc210.  call temp:= `getPublicKey`(v0) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L1cc216.  v0:= temp @kind object;
  #L1cc218.  call temp:= `getPublicKey`(v3) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L1cc21e.  v3:= temp @kind object;
  #L1cc220.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1cc226.  v3:= temp;
  #L1cc228.  if v3 == 0 then goto L1cc230;
  #L1cc22c.  v3:= 1I;
  #L1cc22e.  goto L1cc232;
  #L1cc230.  v3:= 0I;
  #L1cc232.  return v3;
}
