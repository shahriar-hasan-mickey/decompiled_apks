record `io.fabric.sdk.android.services.network.HttpRequest$d` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.util.concurrent.Callable` @kind interface {
}
procedure `void` `<init>`(`io.fabric.sdk.android.services.network.HttpRequest$d` v0 @kind this) @signature `Lio/fabric/sdk/android/services/network/HttpRequest$d;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L1cae68.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1cae6e.  return @kind void;
}
procedure `java.lang.Object` `call`(`io.fabric.sdk.android.services.network.HttpRequest$d` v3 @kind this) @signature `Lio/fabric/sdk/android/services/network/HttpRequest$d;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1cadc8.  v0:= 1I;
  #L1cadca.  call temp:= `run`(v3) @signature `Lio/fabric/sdk/android/services/network/HttpRequest$d;.run:()Ljava/lang/Object;` @kind virtual;
  #L1cadd0.  v0:= temp @kind object;
  #L1cadd2.  call `done`(v3) @signature `Lio/fabric/sdk/android/services/network/HttpRequest$d;.done:()V` @kind virtual;
  #L1cadd8.  return v0 @kind object;
  #L1cadda.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1caddc.  v1:= new `io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException`;
  #L1cade0.  call `<init>`(v1, v0) @signature `Lio/fabric/sdk/android/services/network/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L1cade6.  throw v1;
  #L1cade8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1cadea.  v1:= 0I;
  #L1cadec.  v1:= v0 @kind object;
  #L1cadee.  v0:= 0I;
  #L1cadf0.  goto L1cae06;
  #L1cadf2.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L1cadf4.  v2:= new `io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException`;
  #L1cadf8.  call `<init>`(v2, v1) @signature `Lio/fabric/sdk/android/services/network/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L1cadfe.  throw v2;
  #L1cae00.  v1:= Exception @type ^`io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException` @kind object;
  #L1cae02.  throw v1;
  #L1cae04.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1cae06.  call `done`(v3) @signature `Lio/fabric/sdk/android/services/network/HttpRequest$d;.done:()V` @kind virtual;
  #L1cae0c.  goto L1cae20;
  #L1cae0e.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L1cae10.  if v0 != 0 then goto L1cae20;
  #L1cae14.  v0:= new `io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException`;
  #L1cae18.  call `<init>`(v0, v2) @signature `Lio/fabric/sdk/android/services/network/HttpRequest$HttpRequestException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L1cae1e.  throw v0;
  #L1cae20.  throw v1;
  catch `io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException` @[L1cadca..L1cadd2] goto L1cae00;
  catch `java.io.IOException` @[L1cadca..L1cadd2] goto L1cadf2;
  catch `java.lang.Throwable` @[L1cadca..L1cadd2] goto L1cade8;
  catch `java.io.IOException` @[L1cadd2..L1cadd8] goto L1cadda;
  catch `java.lang.Throwable` @[L1cadf4..L1cae04] goto L1cae04;
  catch `java.io.IOException` @[L1cae06..L1cae0c] goto L1cae0e;
}
procedure `void` `done`() @signature `Lio/fabric/sdk/android/services/network/HttpRequest$d;.done:()V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `run`() @signature `Lio/fabric/sdk/android/services/network/HttpRequest$d;.run:()Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
