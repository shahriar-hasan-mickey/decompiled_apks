record `io.fabric.sdk.android.services.network.g` @kind class @AccessFlag  extends `javax.net.ssl.X509TrustManager` @kind interface {
  `javax.net.ssl.TrustManager`[] `io.fabric.sdk.android.services.network.g.a` @AccessFlag PRIVATE_FINAL;
  `io.fabric.sdk.android.services.network.h` `io.fabric.sdk.android.services.network.g.b` @AccessFlag PRIVATE_FINAL;
  `long` `io.fabric.sdk.android.services.network.g.c` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `io.fabric.sdk.android.services.network.g.d` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `io.fabric.sdk.android.services.network.g.e` @AccessFlag PRIVATE_FINAL;
}
global `java.security.cert.X509Certificate`[] `@@io.fabric.sdk.android.services.network.g.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/fabric/sdk/android/services/network/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1cbfe0.  v0:= 0I;
  #L1cbfe2.  v0:= new `java.security.cert.X509Certificate`[v0];
  #L1cbfe6.  `@@io.fabric.sdk.android.services.network.g.f` @type ^`java.security.cert.X509Certificate`[] := v0 @kind object;
  #L1cbfea.  return @kind void;
}
procedure `void` `<init>`(`io.fabric.sdk.android.services.network.g` v3 @kind this, `io.fabric.sdk.android.services.network.h` v4 @kind object, `io.fabric.sdk.android.services.network.f` v5 @kind object) @signature `Lio/fabric/sdk/android/services/network/g;.<init>:(Lio/fabric/sdk/android/services/network/h;Lio/fabric/sdk/android/services/network/f;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1cbffc.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1cc002.  v0:= new `java.util.LinkedList`;
  #L1cc006.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L1cc00c.  v3.`io.fabric.sdk.android.services.network.g.d` @type ^`java.util.List` := v0 @kind object;
  #L1cc010.  v0:= new `java.util.HashSet`;
  #L1cc014.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L1cc01a.  call temp:= `synchronizedSet`(v0) @signature `Ljava/util/Collections;.synchronizedSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L1cc020.  v0:= temp @kind object;
  #L1cc022.  v3.`io.fabric.sdk.android.services.network.g.e` @type ^`java.util.Set` := v0 @kind object;
  #L1cc026.  call temp:= `a`(v3, v4) @signature `Lio/fabric/sdk/android/services/network/g;.a:(Lio/fabric/sdk/android/services/network/h;)[Ljavax/net/ssl/TrustManager;` @kind direct;
  #L1cc02c.  v0:= temp @kind object;
  #L1cc02e.  v3.`io.fabric.sdk.android.services.network.g.a` @type ^`javax.net.ssl.TrustManager`[] := v0 @kind object;
  #L1cc032.  v3.`io.fabric.sdk.android.services.network.g.b` @type ^`io.fabric.sdk.android.services.network.h` := v4 @kind object;
  #L1cc036.  call temp:= `getPinCreationTimeInMillis`(v5) @signature `Lio/fabric/sdk/android/services/network/f;.getPinCreationTimeInMillis:()J` @kind interface;
  #L1cc03c.  v0:= temp @kind wide;
  #L1cc03e.  v3.`io.fabric.sdk.android.services.network.g.c` @type ^`long` := v0 @kind wide;
  #L1cc042.  call temp:= `getPins`(v5) @signature `Lio/fabric/sdk/android/services/network/f;.getPins:()[Ljava/lang/String;` @kind interface;
  #L1cc048.  v4:= temp @kind object;
  #L1cc04a.  v5:= length @variable v4;
  #L1cc04c.  v0:= 0I;
  #L1cc04e.  if v0 >= v5 then goto L1cc06e;
  #L1cc052.  v1:= v4[v0] @kind object;
  #L1cc056.  v2:= v3.`io.fabric.sdk.android.services.network.g.d` @type ^`java.util.List` @kind object;
  #L1cc05a.  call temp:= `a`(v3, v1) @signature `Lio/fabric/sdk/android/services/network/g;.a:(Ljava/lang/String;)[B` @kind direct;
  #L1cc060.  v1:= temp @kind object;
  #L1cc062.  call temp:= `add`(v2, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1cc068.  v0:= v0 + 1;
  #L1cc06c.  goto L1cc04e;
  #L1cc06e.  return @kind void;
}
procedure `void` `a`(`io.fabric.sdk.android.services.network.g` v8 @kind this, `java.security.cert.X509Certificate`[] v9 @kind object) @signature `Lio/fabric/sdk/android/services/network/g;.a:([Ljava/security/cert/X509Certificate;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1cc0a0.  v0:= v8.`io.fabric.sdk.android.services.network.g.c` @type ^`long` @kind wide;
  #L1cc0a4.  v2:= -1L;
  #L1cc0a8.  v4:= lcmp(v0, v2);
  #L1cc0ac.  if v4 == 0 then goto L1cc12e;
  #L1cc0b0.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L1cc0b6.  v0:= temp @kind wide;
  #L1cc0b8.  v2:= v8.`io.fabric.sdk.android.services.network.g.c` @type ^`long` @kind wide;
  #L1cc0bc.  v0:= v0 - v2 @kind long;
  #L1cc0be.  v2:= 15552000000L;
  #L1cc0c8.  v4:= lcmp(v0, v2);
  #L1cc0cc.  if v4 <= 0 then goto L1cc12e;
  #L1cc0d0.  call temp:= `getLogger`() @signature `Lio/fabric/sdk/android/c;.getLogger:()Lio/fabric/sdk/android/k;` @kind static;
  #L1cc0d6.  v9:= temp @kind object;
  #L1cc0d8.  v0:= new `java.lang.StringBuilder`;
  #L1cc0dc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1cc0e2.  v1:= "Certificate pins are stale, (" @kind object;
  #L1cc0e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cc0ec.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L1cc0f2.  v4:= temp @kind wide;
  #L1cc0f4.  v6:= v8.`io.fabric.sdk.android.services.network.g.c` @type ^`long` @kind wide;
  #L1cc0f8.  v4:= v4 - v6 @kind long;
  #L1cc0fa.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cc100.  v1:= " millis vs " @kind object;
  #L1cc104.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cc10a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cc110.  v1:= " millis) falling back to system trust." @kind object;
  #L1cc114.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1cc11a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1cc120.  v0:= temp @kind object;
  #L1cc122.  v1:= "Fabric" @kind object;
  #L1cc126.  call `w`(v9, v1, v0) @signature `Lio/fabric/sdk/android/k;.w:(Ljava/lang/String;Ljava/lang/String;)V` @kind interface;
  #L1cc12c.  return @kind void;
  #L1cc12e.  v0:= v8.`io.fabric.sdk.android.services.network.g.b` @type ^`io.fabric.sdk.android.services.network.h` @kind object;
  #L1cc132.  call temp:= `getCleanChain`(v9, v0) @signature `Lio/fabric/sdk/android/services/network/a;.getCleanChain:([Ljava/security/cert/X509Certificate;Lio/fabric/sdk/android/services/network/h;)[Ljava/security/cert/X509Certificate;` @kind static;
  #L1cc138.  v9:= temp @kind object;
  #L1cc13a.  v0:= length @variable v9;
  #L1cc13c.  v1:= 0I;
  #L1cc13e.  if v1 >= v0 then goto L1cc15a;
  #L1cc142.  v2:= v9[v1] @kind object;
  #L1cc146.  call temp:= `a`(v8, v2) @signature `Lio/fabric/sdk/android/services/network/g;.a:(Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L1cc14c.  v2:= temp;
  #L1cc14e.  if v2 == 0 then goto L1cc154;
  #L1cc152.  return @kind void;
  #L1cc154.  v1:= v1 + 1;
  #L1cc158.  goto L1cc13e;
  #L1cc15a.  v9:= new `java.security.cert.CertificateException`;
  #L1cc15e.  v0:= "No valid pins found in chain!" @kind object;
  #L1cc162.  call `<init>`(v9, v0) @signature `Ljava/security/cert/CertificateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1cc168.  throw v9;
}
procedure `void` `a`(`io.fabric.sdk.android.services.network.g` v4 @kind this, `java.security.cert.X509Certificate`[] v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lio/fabric/sdk/android/services/network/g;.a:([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1cc1c0.  v0:= v4.`io.fabric.sdk.android.services.network.g.a` @type ^`javax.net.ssl.TrustManager`[] @kind object;
  #L1cc1c4.  v1:= length @variable v0;
  #L1cc1c6.  v2:= 0I;
  #L1cc1c8.  if v2 >= v1 then goto L1cc1e0;
  #L1cc1cc.  v3:= v0[v2] @kind object;
  #L1cc1d0.  v3:= (`javax.net.ssl.X509TrustManager`) v3 @kind object;
  #L1cc1d4.  call `checkServerTrusted`(v3, v5, v6) @signature `Ljavax/net/ssl/X509TrustManager;.checkServerTrusted:([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V` @kind interface;
  #L1cc1da.  v2:= v2 + 1;
  #L1cc1de.  goto L1cc1c8;
  #L1cc1e0.  return @kind void;
}
procedure `boolean` `a`(`io.fabric.sdk.android.services.network.g` v2 @kind this, `java.security.cert.X509Certificate` v3 @kind object) @signature `Lio/fabric/sdk/android/services/network/g;.a:(Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1cbe78.  v0:= "SHA1" @kind object;
  #L1cbe7c.  call temp:= `getInstance`(v0) @signature `Ljava/security/MessageDigest;.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;` @kind static;
  #L1cbe82.  v0:= temp @kind object;
  #L1cbe84.  call temp:= `getPublicKey`(v3) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L1cbe8a.  v3:= temp @kind object;
  #L1cbe8c.  call temp:= `getEncoded`(v3) @signature `Ljava/security/PublicKey;.getEncoded:()[B` @kind interface;
  #L1cbe92.  v3:= temp @kind object;
  #L1cbe94.  call temp:= `digest`(v0, v3) @signature `Ljava/security/MessageDigest;.digest:([B)[B` @kind virtual;
  #L1cbe9a.  v3:= temp @kind object;
  #L1cbe9c.  v0:= v2.`io.fabric.sdk.android.services.network.g.d` @type ^`java.util.List` @kind object;
  #L1cbea0.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1cbea6.  v0:= temp @kind object;
  #L1cbea8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1cbeae.  v1:= temp;
  #L1cbeb0.  if v1 == 0 then goto L1cbed0;
  #L1cbeb4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1cbeba.  v1:= temp @kind object;
  #L1cbebc.  v1:= (`byte`[]) v1 @kind object;
  #L1cbec0.  call temp:= `equals`(v1, v3) @signature `Ljava/util/Arrays;.equals:([B[B)Z` @kind static;
  #L1cbec6.  v1:= temp;
  #L1cbec8.  if v1 == 0 then goto L1cbea8;
  #L1cbecc.  v3:= 1I;
  #L1cbece.  return v3;
  #L1cbed0.  v3:= 0I;
  #L1cbed2.  return v3;
  #L1cbed4.  v3:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L1cbed6.  v0:= new `java.security.cert.CertificateException`;
  #L1cbeda.  call `<init>`(v0, v3) @signature `Ljava/security/cert/CertificateException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1cbee0.  throw v0;
  catch `java.security.NoSuchAlgorithmException` @[L1cbe78..L1cbec8] goto L1cbed4;
}
procedure `byte`[] `a`(`io.fabric.sdk.android.services.network.g` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lio/fabric/sdk/android/services/network/g;.a:(Ljava/lang/String;)[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1cbf04.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1cbf0a.  v0:= temp;
  #L1cbf0c.  v1:= v0 / 2;
  #L1cbf10.  v1:= new `byte`[v1];
  #L1cbf14.  v2:= 0I;
  #L1cbf16.  if v2 >= v0 then goto L1cbf58;
  #L1cbf1a.  v3:= v2 / 2;
  #L1cbf1e.  call temp:= `charAt`(v8, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1cbf24.  v4:= temp;
  #L1cbf26.  v5:= 16I;
  #L1cbf2a.  call temp:= `digit`(v4, v5) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L1cbf30.  v4:= temp;
  #L1cbf32.  v4:= v4 ^< 4;
  #L1cbf36.  v6:= v2 + 1;
  #L1cbf3a.  call temp:= `charAt`(v8, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1cbf40.  v6:= temp;
  #L1cbf42.  call temp:= `digit`(v6, v5) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L1cbf48.  v5:= temp;
  #L1cbf4a.  v4:= v4 + v5 @kind int;
  #L1cbf4c.  v4:= (`byte`) v4 @kind i2b;
  #L1cbf4e.  v1[v3]:= v4 @kind byte;
  #L1cbf52.  v2:= v2 + 2;
  #L1cbf56.  goto L1cbf16;
  #L1cbf58.  return v1 @kind object;
}
procedure `javax.net.ssl.TrustManager`[] `a`(`io.fabric.sdk.android.services.network.g` v1 @kind this, `io.fabric.sdk.android.services.network.h` v2 @kind object) @signature `Lio/fabric/sdk/android/services/network/g;.a:(Lio/fabric/sdk/android/services/network/h;)[Ljavax/net/ssl/TrustManager;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1cbf84.  v0:= "X509" @kind object;
  #L1cbf88.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;` @kind static;
  #L1cbf8e.  v0:= temp @kind object;
  #L1cbf90.  v2:= v2.`io.fabric.sdk.android.services.network.h.a` @type ^`java.security.KeyStore` @kind object;
  #L1cbf94.  call `init`(v0, v2) @signature `Ljavax/net/ssl/TrustManagerFactory;.init:(Ljava/security/KeyStore;)V` @kind virtual;
  #L1cbf9a.  call temp:= `getTrustManagers`(v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.getTrustManagers:()[Ljavax/net/ssl/TrustManager;` @kind virtual;
  #L1cbfa0.  v2:= temp @kind object;
  #L1cbfa2.  return v2 @kind object;
  #L1cbfa4.  v2:= Exception @type ^`java.security.KeyStoreException` @kind object;
  #L1cbfa6.  v0:= new `java.lang.AssertionError`;
  #L1cbfaa.  call `<init>`(v0, v2) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1cbfb0.  throw v0;
  #L1cbfb2.  v2:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L1cbfb4.  v0:= new `java.lang.AssertionError`;
  #L1cbfb8.  call `<init>`(v0, v2) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1cbfbe.  throw v0;
  catch `java.security.NoSuchAlgorithmException` @[L1cbf84..L1cbfa2] goto L1cbfb2;
  catch `java.security.KeyStoreException` @[L1cbf84..L1cbfa2] goto L1cbfa4;
}
procedure `void` `checkClientTrusted`(`io.fabric.sdk.android.services.network.g` v0 @kind this, `java.security.cert.X509Certificate`[] v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lio/fabric/sdk/android/services/network/g;.checkClientTrusted:([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L1cc080.  v1:= new `java.security.cert.CertificateException`;
  #L1cc084.  v2:= "Client certificates not supported!" @kind object;
  #L1cc088.  call `<init>`(v1, v2) @signature `Ljava/security/cert/CertificateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1cc08e.  throw v1;
}
procedure `void` `checkServerTrusted`(`io.fabric.sdk.android.services.network.g` v3 @kind this, `java.security.cert.X509Certificate`[] v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lio/fabric/sdk/android/services/network/g;.checkServerTrusted:([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1cc17c.  v0:= v3.`io.fabric.sdk.android.services.network.g.e` @type ^`java.util.Set` @kind object;
  #L1cc180.  v1:= 0I;
  #L1cc182.  v2:= v4[v1] @kind object;
  #L1cc186.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1cc18c.  v0:= temp;
  #L1cc18e.  if v0 == 0 then goto L1cc194;
  #L1cc192.  return @kind void;
  #L1cc194.  call `a`(v3, v4, v5) @signature `Lio/fabric/sdk/android/services/network/g;.a:([Ljava/security/cert/X509Certificate;Ljava/lang/String;)V` @kind direct;
  #L1cc19a.  call `a`(v3, v4) @signature `Lio/fabric/sdk/android/services/network/g;.a:([Ljava/security/cert/X509Certificate;)V` @kind direct;
  #L1cc1a0.  v5:= v3.`io.fabric.sdk.android.services.network.g.e` @type ^`java.util.Set` @kind object;
  #L1cc1a4.  v4:= v4[v1] @kind object;
  #L1cc1a8.  call temp:= `add`(v5, v4) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1cc1ae.  return @kind void;
}
procedure `java.security.cert.X509Certificate`[] `getAcceptedIssuers`(`io.fabric.sdk.android.services.network.g` v1 @kind this) @signature `Lio/fabric/sdk/android/services/network/g;.getAcceptedIssuers:()[Ljava/security/cert/X509Certificate;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1cbf6c.  v0:= `@@io.fabric.sdk.android.services.network.g.f` @type ^`java.security.cert.X509Certificate`[] @kind object;
  #L1cbf70.  return v0 @kind object;
}
