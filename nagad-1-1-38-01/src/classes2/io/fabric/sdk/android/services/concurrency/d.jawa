record `io.fabric.sdk.android.services.concurrency.d` @kind class @AccessFlag PUBLIC extends `java.util.concurrent.PriorityBlockingQueue` @kind class {
  `java.util.Queue` `io.fabric.sdk.android.services.concurrency.d.f` @AccessFlag FINAL;
  `java.util.concurrent.locks.ReentrantLock` `io.fabric.sdk.android.services.concurrency.d.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.fabric.sdk.android.services.concurrency.d` v1 @kind this) @signature `Lio/fabric/sdk/android/services/concurrency/d;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c9254.  call `<init>`(v1) @signature `Ljava/util/concurrent/PriorityBlockingQueue;.<init>:()V` @kind direct;
  #L1c925a.  v0:= new `java.util.LinkedList`;
  #L1c925e.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L1c9264.  v1.`io.fabric.sdk.android.services.concurrency.d.f` @type ^`java.util.Queue` := v0 @kind object;
  #L1c9268.  v0:= new `java.util.concurrent.locks.ReentrantLock`;
  #L1c926c.  call `<init>`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V` @kind direct;
  #L1c9272.  v1.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` := v0 @kind object;
  #L1c9276.  return @kind void;
}
procedure `io.fabric.sdk.android.services.concurrency.c` `a`(`io.fabric.sdk.android.services.concurrency.d` v2 @kind this, `int` v3 , `java.lang.Long` v4 @kind object, `java.util.concurrent.TimeUnit` v5 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/d;.a:(ILjava/lang/Long;Ljava/util/concurrent/TimeUnit;)Lio/fabric/sdk/android/services/concurrency/c;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1c8fa4.  call temp:= `b`(v2, v3, v4, v5) @signature `Lio/fabric/sdk/android/services/concurrency/d;.b:(ILjava/lang/Long;Ljava/util/concurrent/TimeUnit;)Lio/fabric/sdk/android/services/concurrency/c;` @kind virtual;
  #L1c8faa.  v0:= temp @kind object;
  #L1c8fac.  if v0 == 0 then goto L1c8fc6;
  #L1c8fb0.  call temp:= `a`(v2, v0) @signature `Lio/fabric/sdk/android/services/concurrency/d;.a:(Lio/fabric/sdk/android/services/concurrency/c;)Z` @kind virtual;
  #L1c8fb6.  v1:= temp;
  #L1c8fb8.  if v1 == 0 then goto L1c8fbe;
  #L1c8fbc.  goto L1c8fc6;
  #L1c8fbe.  call temp:= `a`(v2, v3, v0) @signature `Lio/fabric/sdk/android/services/concurrency/d;.a:(ILio/fabric/sdk/android/services/concurrency/c;)Z` @kind virtual;
  #L1c8fc4.  goto L1c8fa4;
  #L1c8fc6.  return v0 @kind object;
}
procedure `boolean` `a`(`io.fabric.sdk.android.services.concurrency.d` v1 @kind this, `int` v2 , `io.fabric.sdk.android.services.concurrency.c` v3 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/d;.a:(ILio/fabric/sdk/android/services/concurrency/c;)Z` @AccessFlag  {
    temp;
    v0;

  #L1c8d48.  v0:= v1.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c8d4c.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L1c8d52.  v0:= 1I;
  #L1c8d54.  if v2 != v0 then goto L1c8d5e;
  #L1c8d58.  call temp:= `remove`(v1, v3) @signature `Ljava/util/concurrent/PriorityBlockingQueue;.remove:(Ljava/lang/Object;)Z` @kind super;
  #L1c8d5e.  v2:= v1.`io.fabric.sdk.android.services.concurrency.d.f` @type ^`java.util.Queue` @kind object;
  #L1c8d62.  call temp:= `offer`(v2, v3) @signature `Ljava/util/Queue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L1c8d68.  v2:= temp;
  #L1c8d6a.  v3:= v1.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c8d6e.  call `unlock`(v3) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L1c8d74.  return v2;
  #L1c8d76.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c8d78.  v3:= v1.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c8d7c.  call `unlock`(v3) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L1c8d82.  throw v2;
  catch `java.lang.Throwable` @[L1c8d48..L1c8d6a] goto L1c8d76;
}
procedure `boolean` `a`(`io.fabric.sdk.android.services.concurrency.d` v0 @kind this, `io.fabric.sdk.android.services.concurrency.c` v1 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/d;.a:(Lio/fabric/sdk/android/services/concurrency/c;)Z` @AccessFlag  {
    temp;

  #L1c8cc8.  call temp:= `areDependenciesMet`(v1) @signature `Lio/fabric/sdk/android/services/concurrency/c;.areDependenciesMet:()Z` @kind interface;
  #L1c8cce.  v1:= temp;
  #L1c8cd0.  return v1;
}
procedure `java.lang.Object`[] `a`(`io.fabric.sdk.android.services.concurrency.d` v4 @kind this, `java.lang.Object`[] v5 @kind object, `java.lang.Object`[] v6 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/d;.a:([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c9158.  v0:= length @variable v5;
  #L1c915a.  v1:= length @variable v6;
  #L1c915c.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1c9162.  v2:= temp @kind object;
  #L1c9164.  call temp:= `getComponentType`(v2) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1c916a.  v2:= temp @kind object;
  #L1c916c.  v3:= v0 + v1 @kind int;
  #L1c9170.  call temp:= `newInstance`(v2, v3) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L1c9176.  v2:= temp @kind object;
  #L1c9178.  v2:= (`java.lang.Object`[]) v2 @kind object;
  #L1c917c.  v3:= 0I;
  #L1c917e.  call `arraycopy`(v5, v3, v2, v3, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1c9184.  call `arraycopy`(v6, v3, v2, v0, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1c918a.  return v2 @kind object;
}
procedure `io.fabric.sdk.android.services.concurrency.c` `b`(`io.fabric.sdk.android.services.concurrency.d` v1 @kind this, `int` v2 , `java.lang.Long` v3 @kind object, `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/d;.b:(ILjava/lang/Long;Ljava/util/concurrent/TimeUnit;)Lio/fabric/sdk/android/services/concurrency/c;` @AccessFlag  {
    temp;
    v0;

  #L1c9008.  if v2 == 0 then goto L1c9054;
  #L1c900c.  v0:= 1I;
  #L1c900e.  if v2 == v0 then goto L1c9046;
  #L1c9012.  v0:= 2I;
  #L1c9014.  if v2 == v0 then goto L1c9038;
  #L1c9018.  v0:= 3I;
  #L1c901a.  if v2 == v0 then goto L1c9022;
  #L1c901e.  v2:= 0I;
  #L1c9020.  return v2 @kind object;
  #L1c9022.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L1c9028.  v2:= temp @kind wide;
  #L1c902a.  call temp:= `poll`(v1, v2, v4) @signature `Ljava/util/concurrent/PriorityBlockingQueue;.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @kind super;
  #L1c9030.  v2:= temp @kind object;
  #L1c9032.  v2:= (`io.fabric.sdk.android.services.concurrency.c`) v2 @kind object;
  #L1c9036.  goto L1c9060;
  #L1c9038.  call temp:= `poll`(v1) @signature `Ljava/util/concurrent/PriorityBlockingQueue;.poll:()Ljava/lang/Object;` @kind super;
  #L1c903e.  v2:= temp @kind object;
  #L1c9040.  v2:= (`io.fabric.sdk.android.services.concurrency.c`) v2 @kind object;
  #L1c9044.  goto L1c9060;
  #L1c9046.  call temp:= `peek`(v1) @signature `Ljava/util/concurrent/PriorityBlockingQueue;.peek:()Ljava/lang/Object;` @kind super;
  #L1c904c.  v2:= temp @kind object;
  #L1c904e.  v2:= (`io.fabric.sdk.android.services.concurrency.c`) v2 @kind object;
  #L1c9052.  goto L1c9060;
  #L1c9054.  call temp:= `take`(v1) @signature `Ljava/util/concurrent/PriorityBlockingQueue;.take:()Ljava/lang/Object;` @kind super;
  #L1c905a.  v2:= temp @kind object;
  #L1c905c.  v2:= (`io.fabric.sdk.android.services.concurrency.c`) v2 @kind object;
  #L1c9060.  return v2 @kind object;
}
procedure `void` `clear`(`io.fabric.sdk.android.services.concurrency.d` v2 @kind this) @signature `Lio/fabric/sdk/android/services/concurrency/d;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c9288.  v0:= v2.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c928c.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L1c9292.  v0:= v2.`io.fabric.sdk.android.services.concurrency.d.f` @type ^`java.util.Queue` @kind object;
  #L1c9296.  call `clear`(v0) @signature `Ljava/util/Queue;.clear:()V` @kind interface;
  #L1c929c.  call `clear`(v2) @signature `Ljava/util/concurrent/PriorityBlockingQueue;.clear:()V` @kind super;
  #L1c92a2.  v0:= v2.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c92a6.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L1c92ac.  return @kind void;
  #L1c92ae.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c92b0.  v1:= v2.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c92b4.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L1c92ba.  throw v0;
  catch `java.lang.Throwable` @[L1c9288..L1c92a2] goto L1c92ae;
}
procedure `boolean` `contains`(`io.fabric.sdk.android.services.concurrency.d` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/d;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c8ce4.  v0:= v1.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c8ce8.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L1c8cee.  call temp:= `contains`(v1, v2) @signature `Ljava/util/concurrent/PriorityBlockingQueue;.contains:(Ljava/lang/Object;)Z` @kind super;
  #L1c8cf4.  v0:= temp;
  #L1c8cf6.  if v0 != 0 then goto L1c8d10;
  #L1c8cfa.  v0:= v1.`io.fabric.sdk.android.services.concurrency.d.f` @type ^`java.util.Queue` @kind object;
  #L1c8cfe.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Queue;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1c8d04.  v2:= temp;
  #L1c8d06.  if v2 == 0 then goto L1c8d0c;
  #L1c8d0a.  goto L1c8d10;
  #L1c8d0c.  v2:= 0I;
  #L1c8d0e.  goto L1c8d12;
  #L1c8d10.  v2:= 1I;
  #L1c8d12.  v0:= v1.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c8d16.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L1c8d1c.  return v2;
  #L1c8d1e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c8d20.  v0:= v1.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c8d24.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L1c8d2a.  throw v2;
  catch `java.lang.Throwable` @[L1c8ce4..L1c8d06] goto L1c8d1e;
}
procedure `int` `drainTo`(`io.fabric.sdk.android.services.concurrency.d` v2 @kind this, `java.util.Collection` v3 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/d;.drainTo:(Ljava/util/Collection;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c8e5c.  v0:= v2.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c8e60.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L1c8e66.  call temp:= `drainTo`(v2, v3) @signature `Ljava/util/concurrent/PriorityBlockingQueue;.drainTo:(Ljava/util/Collection;)I` @kind super;
  #L1c8e6c.  v0:= temp;
  #L1c8e6e.  v1:= v2.`io.fabric.sdk.android.services.concurrency.d.f` @type ^`java.util.Queue` @kind object;
  #L1c8e72.  call temp:= `size`(v1) @signature `Ljava/util/Queue;.size:()I` @kind interface;
  #L1c8e78.  v1:= temp;
  #L1c8e7a.  v0:= v0 + v1 @kind int;
  #L1c8e7c.  v1:= v2.`io.fabric.sdk.android.services.concurrency.d.f` @type ^`java.util.Queue` @kind object;
  #L1c8e80.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Queue;.isEmpty:()Z` @kind interface;
  #L1c8e86.  v1:= temp;
  #L1c8e88.  if v1 != 0 then goto L1c8ea0;
  #L1c8e8c.  v1:= v2.`io.fabric.sdk.android.services.concurrency.d.f` @type ^`java.util.Queue` @kind object;
  #L1c8e90.  call temp:= `poll`(v1) @signature `Ljava/util/Queue;.poll:()Ljava/lang/Object;` @kind interface;
  #L1c8e96.  v1:= temp @kind object;
  #L1c8e98.  call temp:= `add`(v3, v1) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1c8e9e.  goto L1c8e7c;
  #L1c8ea0.  v3:= v2.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c8ea4.  call `unlock`(v3) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L1c8eaa.  return v0;
  #L1c8eac.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c8eae.  v0:= v2.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c8eb2.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L1c8eb8.  throw v3;
  catch `java.lang.Throwable` @[L1c8e5c..L1c8e9e] goto L1c8eac;
}
procedure `int` `drainTo`(`io.fabric.sdk.android.services.concurrency.d` v2 @kind this, `java.util.Collection` v3 @kind object, `int` v4 ) @signature `Lio/fabric/sdk/android/services/concurrency/d;.drainTo:(Ljava/util/Collection;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c8ed8.  v0:= v2.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c8edc.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L1c8ee2.  call temp:= `drainTo`(v2, v3, v4) @signature `Ljava/util/concurrent/PriorityBlockingQueue;.drainTo:(Ljava/util/Collection;I)I` @kind super;
  #L1c8ee8.  v0:= temp;
  #L1c8eea.  v1:= v2.`io.fabric.sdk.android.services.concurrency.d.f` @type ^`java.util.Queue` @kind object;
  #L1c8eee.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Queue;.isEmpty:()Z` @kind interface;
  #L1c8ef4.  v1:= temp;
  #L1c8ef6.  if v1 != 0 then goto L1c8f16;
  #L1c8efa.  if v0 > v4 then goto L1c8f16;
  #L1c8efe.  v1:= v2.`io.fabric.sdk.android.services.concurrency.d.f` @type ^`java.util.Queue` @kind object;
  #L1c8f02.  call temp:= `poll`(v1) @signature `Ljava/util/Queue;.poll:()Ljava/lang/Object;` @kind interface;
  #L1c8f08.  v1:= temp @kind object;
  #L1c8f0a.  call temp:= `add`(v3, v1) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1c8f10.  v0:= v0 + 1;
  #L1c8f14.  goto L1c8eea;
  #L1c8f16.  v3:= v2.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c8f1a.  call `unlock`(v3) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L1c8f20.  return v0;
  #L1c8f22.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c8f24.  v4:= v2.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c8f28.  call `unlock`(v4) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L1c8f2e.  throw v3;
  catch `java.lang.Throwable` @[L1c8ed8..L1c8f10] goto L1c8f22;
}
procedure `io.fabric.sdk.android.services.concurrency.c` `peek`(`io.fabric.sdk.android.services.concurrency.d` v2 @kind this) @signature `Lio/fabric/sdk/android/services/concurrency/d;.peek:()Lio/fabric/sdk/android/services/concurrency/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c8fd8.  v0:= 1I;
  #L1c8fda.  v1:= 0I;
  #L1c8fdc.  call temp:= `a`(v2, v0, v1, v1) @signature `Lio/fabric/sdk/android/services/concurrency/d;.a:(ILjava/lang/Long;Ljava/util/concurrent/TimeUnit;)Lio/fabric/sdk/android/services/concurrency/c;` @kind virtual;
  #L1c8fe2.  v0:= temp @kind object;
  #L1c8fe4.  return v0 @kind object;
  #L1c8fe6.  return v1 @kind object;
  catch `java.lang.InterruptedException` @[L1c8fdc..L1c8fe4] goto L1c8fe6;
}
procedure `java.lang.Object` `peek`(`io.fabric.sdk.android.services.concurrency.d` v1 @kind this) @signature `Lio/fabric/sdk/android/services/concurrency/d;.peek:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1c90e8.  call temp:= `peek`(v1) @signature `Lio/fabric/sdk/android/services/concurrency/d;.peek:()Lio/fabric/sdk/android/services/concurrency/c;` @kind virtual;
  #L1c90ee.  v0:= temp @kind object;
  #L1c90f0.  return v0 @kind object;
}
procedure `io.fabric.sdk.android.services.concurrency.c` `poll`(`io.fabric.sdk.android.services.concurrency.d` v2 @kind this) @signature `Lio/fabric/sdk/android/services/concurrency/d;.poll:()Lio/fabric/sdk/android/services/concurrency/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c9074.  v0:= 2I;
  #L1c9076.  v1:= 0I;
  #L1c9078.  call temp:= `a`(v2, v0, v1, v1) @signature `Lio/fabric/sdk/android/services/concurrency/d;.a:(ILjava/lang/Long;Ljava/util/concurrent/TimeUnit;)Lio/fabric/sdk/android/services/concurrency/c;` @kind virtual;
  #L1c907e.  v0:= temp @kind object;
  #L1c9080.  return v0 @kind object;
  #L1c9082.  return v1 @kind object;
  catch `java.lang.InterruptedException` @[L1c9078..L1c9080] goto L1c9082;
}
procedure `io.fabric.sdk.android.services.concurrency.c` `poll`(`io.fabric.sdk.android.services.concurrency.d` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/d;.poll:(JLjava/util/concurrent/TimeUnit;)Lio/fabric/sdk/android/services/concurrency/c;` @AccessFlag PUBLIC {
    temp;

  #L1c90a4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L1c90aa.  v1:= temp @kind object;
  #L1c90ac.  v2:= 3I;
  #L1c90ae.  call temp:= `a`(v0, v2, v1, v3) @signature `Lio/fabric/sdk/android/services/concurrency/d;.a:(ILjava/lang/Long;Ljava/util/concurrent/TimeUnit;)Lio/fabric/sdk/android/services/concurrency/c;` @kind virtual;
  #L1c90b4.  v1:= temp @kind object;
  #L1c90b6.  return v1 @kind object;
}
procedure `java.lang.Object` `poll`(`io.fabric.sdk.android.services.concurrency.d` v1 @kind this) @signature `Lio/fabric/sdk/android/services/concurrency/d;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1c9104.  call temp:= `poll`(v1) @signature `Lio/fabric/sdk/android/services/concurrency/d;.poll:()Lio/fabric/sdk/android/services/concurrency/c;` @kind virtual;
  #L1c910a.  v0:= temp @kind object;
  #L1c910c.  return v0 @kind object;
}
procedure `java.lang.Object` `poll`(`io.fabric.sdk.android.services.concurrency.d` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/d;.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1c9120.  call temp:= `poll`(v0, v1, v3) @signature `Lio/fabric/sdk/android/services/concurrency/d;.poll:(JLjava/util/concurrent/TimeUnit;)Lio/fabric/sdk/android/services/concurrency/c;` @kind virtual;
  #L1c9126.  v1:= temp @kind object;
  #L1c9128.  return v1 @kind object;
}
procedure `void` `recycleBlockedQueue`(`io.fabric.sdk.android.services.concurrency.d` v3 @kind this) @signature `Lio/fabric/sdk/android/services/concurrency/d;.recycleBlockedQueue:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c92d8.  v0:= v3.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c92dc.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L1c92e2.  v0:= v3.`io.fabric.sdk.android.services.concurrency.d.f` @type ^`java.util.Queue` @kind object;
  #L1c92e6.  call temp:= `iterator`(v0) @signature `Ljava/util/Queue;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1c92ec.  v0:= temp @kind object;
  #L1c92ee.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1c92f4.  v1:= temp;
  #L1c92f6.  if v1 == 0 then goto L1c9320;
  #L1c92fa.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1c9300.  v1:= temp @kind object;
  #L1c9302.  v1:= (`io.fabric.sdk.android.services.concurrency.c`) v1 @kind object;
  #L1c9306.  call temp:= `a`(v3, v1) @signature `Lio/fabric/sdk/android/services/concurrency/d;.a:(Lio/fabric/sdk/android/services/concurrency/c;)Z` @kind virtual;
  #L1c930c.  v2:= temp;
  #L1c930e.  if v2 == 0 then goto L1c92ee;
  #L1c9312.  call temp:= `offer`(v3, v1) @signature `Ljava/util/concurrent/PriorityBlockingQueue;.offer:(Ljava/lang/Object;)Z` @kind super;
  #L1c9318.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L1c931e.  goto L1c92ee;
  #L1c9320.  v0:= v3.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c9324.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L1c932a.  return @kind void;
  #L1c932c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c932e.  v1:= v3.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c9332.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L1c9338.  throw v0;
  catch `java.lang.Throwable` @[L1c92d8..L1c931e] goto L1c932c;
}
procedure `boolean` `remove`(`io.fabric.sdk.android.services.concurrency.d` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/d;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c8da0.  v0:= v1.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c8da4.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L1c8daa.  call temp:= `remove`(v1, v2) @signature `Ljava/util/concurrent/PriorityBlockingQueue;.remove:(Ljava/lang/Object;)Z` @kind super;
  #L1c8db0.  v0:= temp;
  #L1c8db2.  if v0 != 0 then goto L1c8dcc;
  #L1c8db6.  v0:= v1.`io.fabric.sdk.android.services.concurrency.d.f` @type ^`java.util.Queue` @kind object;
  #L1c8dba.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Queue;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L1c8dc0.  v2:= temp;
  #L1c8dc2.  if v2 == 0 then goto L1c8dc8;
  #L1c8dc6.  goto L1c8dcc;
  #L1c8dc8.  v2:= 0I;
  #L1c8dca.  goto L1c8dce;
  #L1c8dcc.  v2:= 1I;
  #L1c8dce.  v0:= v1.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c8dd2.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L1c8dd8.  return v2;
  #L1c8dda.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c8ddc.  v0:= v1.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c8de0.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L1c8de6.  throw v2;
  catch `java.lang.Throwable` @[L1c8da0..L1c8dc2] goto L1c8dda;
}
procedure `boolean` `removeAll`(`io.fabric.sdk.android.services.concurrency.d` v2 @kind this, `java.util.Collection` v3 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/d;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c8e04.  v0:= v2.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c8e08.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L1c8e0e.  call temp:= `removeAll`(v2, v3) @signature `Ljava/util/concurrent/PriorityBlockingQueue;.removeAll:(Ljava/util/Collection;)Z` @kind super;
  #L1c8e14.  v0:= temp;
  #L1c8e16.  v1:= v2.`io.fabric.sdk.android.services.concurrency.d.f` @type ^`java.util.Queue` @kind object;
  #L1c8e1a.  call temp:= `removeAll`(v1, v3) @signature `Ljava/util/Queue;.removeAll:(Ljava/util/Collection;)Z` @kind interface;
  #L1c8e20.  v3:= temp;
  #L1c8e22.  v3:= v3 ^| v0 @kind int;
  #L1c8e24.  v0:= v2.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c8e28.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L1c8e2e.  return v3;
  #L1c8e30.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c8e32.  v0:= v2.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c8e36.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L1c8e3c.  throw v3;
  catch `java.lang.Throwable` @[L1c8e04..L1c8e22] goto L1c8e30;
}
procedure `int` `size`(`io.fabric.sdk.android.services.concurrency.d` v2 @kind this) @signature `Lio/fabric/sdk/android/services/concurrency/d;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c8f4c.  v0:= v2.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c8f50.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L1c8f56.  v0:= v2.`io.fabric.sdk.android.services.concurrency.d.f` @type ^`java.util.Queue` @kind object;
  #L1c8f5a.  call temp:= `size`(v0) @signature `Ljava/util/Queue;.size:()I` @kind interface;
  #L1c8f60.  v0:= temp;
  #L1c8f62.  call temp:= `size`(v2) @signature `Ljava/util/concurrent/PriorityBlockingQueue;.size:()I` @kind super;
  #L1c8f68.  v1:= temp;
  #L1c8f6a.  v0:= v0 + v1 @kind int;
  #L1c8f6c.  v1:= v2.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c8f70.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L1c8f76.  return v0;
  #L1c8f78.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c8f7a.  v1:= v2.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c8f7e.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L1c8f84.  throw v0;
  catch `java.lang.Throwable` @[L1c8f4c..L1c8f6a] goto L1c8f78;
}
procedure `io.fabric.sdk.android.services.concurrency.c` `take`(`io.fabric.sdk.android.services.concurrency.d` v2 @kind this) @signature `Lio/fabric/sdk/android/services/concurrency/d;.take:()Lio/fabric/sdk/android/services/concurrency/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c90c8.  v0:= 0I;
  #L1c90ca.  v1:= 0I;
  #L1c90cc.  call temp:= `a`(v2, v1, v0, v0) @signature `Lio/fabric/sdk/android/services/concurrency/d;.a:(ILjava/lang/Long;Ljava/util/concurrent/TimeUnit;)Lio/fabric/sdk/android/services/concurrency/c;` @kind virtual;
  #L1c90d2.  v0:= temp @kind object;
  #L1c90d4.  return v0 @kind object;
}
procedure `java.lang.Object` `take`(`io.fabric.sdk.android.services.concurrency.d` v1 @kind this) @signature `Lio/fabric/sdk/android/services/concurrency/d;.take:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1c913c.  call temp:= `take`(v1) @signature `Lio/fabric/sdk/android/services/concurrency/d;.take:()Lio/fabric/sdk/android/services/concurrency/c;` @kind virtual;
  #L1c9142.  v0:= temp @kind object;
  #L1c9144.  return v0 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`io.fabric.sdk.android.services.concurrency.d` v2 @kind this) @signature `Lio/fabric/sdk/android/services/concurrency/d;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c919c.  v0:= v2.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c91a0.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L1c91a6.  call temp:= `toArray`(v2) @signature `Ljava/util/concurrent/PriorityBlockingQueue;.toArray:()[Ljava/lang/Object;` @kind super;
  #L1c91ac.  v0:= temp @kind object;
  #L1c91ae.  v1:= v2.`io.fabric.sdk.android.services.concurrency.d.f` @type ^`java.util.Queue` @kind object;
  #L1c91b2.  call temp:= `toArray`(v1) @signature `Ljava/util/Queue;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L1c91b8.  v1:= temp @kind object;
  #L1c91ba.  call temp:= `a`(v2, v0, v1) @signature `Lio/fabric/sdk/android/services/concurrency/d;.a:([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L1c91c0.  v0:= temp @kind object;
  #L1c91c2.  v1:= v2.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c91c6.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L1c91cc.  return v0 @kind object;
  #L1c91ce.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c91d0.  v1:= v2.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c91d4.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L1c91da.  throw v0;
  catch `java.lang.Throwable` @[L1c919c..L1c91c2] goto L1c91ce;
}
procedure `java.lang.Object`[] `toArray`(`io.fabric.sdk.android.services.concurrency.d` v2 @kind this, `java.lang.Object`[] v3 @kind object) @signature `Lio/fabric/sdk/android/services/concurrency/d;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c91f8.  v0:= v2.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c91fc.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L1c9202.  call temp:= `toArray`(v2, v3) @signature `Ljava/util/concurrent/PriorityBlockingQueue;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind super;
  #L1c9208.  v0:= temp @kind object;
  #L1c920a.  v1:= v2.`io.fabric.sdk.android.services.concurrency.d.f` @type ^`java.util.Queue` @kind object;
  #L1c920e.  call temp:= `toArray`(v1, v3) @signature `Ljava/util/Queue;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L1c9214.  v3:= temp @kind object;
  #L1c9216.  call temp:= `a`(v2, v0, v3) @signature `Lio/fabric/sdk/android/services/concurrency/d;.a:([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L1c921c.  v3:= temp @kind object;
  #L1c921e.  v0:= v2.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c9222.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L1c9228.  return v3 @kind object;
  #L1c922a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c922c.  v0:= v2.`io.fabric.sdk.android.services.concurrency.d.g` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L1c9230.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L1c9236.  throw v3;
  catch `java.lang.Throwable` @[L1c91f8..L1c921e] goto L1c922a;
}
