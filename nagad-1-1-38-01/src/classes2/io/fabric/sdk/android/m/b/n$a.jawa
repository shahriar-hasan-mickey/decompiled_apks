record `io.fabric.sdk.android.m.b.n$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.ThreadFactory` @kind interface {
  `java.lang.String` `io.fabric.sdk.android.m.b.n$a.f` @AccessFlag FINAL_SYNTHETIC;
  `java.util.concurrent.atomic.AtomicLong` `io.fabric.sdk.android.m.b.n$a.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.fabric.sdk.android.m.b.n$a` v0 @kind this, `java.lang.String` v1 @kind object, `java.util.concurrent.atomic.AtomicLong` v2 @kind object) @signature `Lio/fabric/sdk/android/m/b/n$a;.<init>:(Ljava/lang/String;Ljava/util/concurrent/atomic/AtomicLong;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c69f4.  v0.`io.fabric.sdk.android.m.b.n$a.f` @type ^`java.lang.String` := v1 @kind object;
  #L1c69f8.  v0.`io.fabric.sdk.android.m.b.n$a.g` @type ^`java.util.concurrent.atomic.AtomicLong` := v2 @kind object;
  #L1c69fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c6a02.  return @kind void;
}
procedure `java.lang.Thread` `newThread`(`io.fabric.sdk.android.m.b.n$a` v3 @kind this, `java.lang.Runnable` v4 @kind object) @signature `Lio/fabric/sdk/android/m/b/n$a;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c6994.  call temp:= `defaultThreadFactory`() @signature `Ljava/util/concurrent/Executors;.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L1c699a.  v0:= temp @kind object;
  #L1c699c.  v1:= new `io.fabric.sdk.android.m.b.n$a$a`;
  #L1c69a0.  call `<init>`(v1, v3, v4) @signature `Lio/fabric/sdk/android/m/b/n$a$a;.<init>:(Lio/fabric/sdk/android/m/b/n$a;Ljava/lang/Runnable;)V` @kind direct;
  #L1c69a6.  call temp:= `newThread`(v0, v1) @signature `Ljava/util/concurrent/ThreadFactory;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @kind interface;
  #L1c69ac.  v4:= temp @kind object;
  #L1c69ae.  v0:= new `java.lang.StringBuilder`;
  #L1c69b2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c69b8.  v1:= v3.`io.fabric.sdk.android.m.b.n$a.f` @type ^`java.lang.String` @kind object;
  #L1c69bc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c69c2.  v1:= v3.`io.fabric.sdk.android.m.b.n$a.g` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L1c69c6.  call temp:= `getAndIncrement`(v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.getAndIncrement:()J` @kind virtual;
  #L1c69cc.  v1:= temp @kind wide;
  #L1c69ce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c69d4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c69da.  v0:= temp @kind object;
  #L1c69dc.  call `setName`(v4, v0) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L1c69e2.  return v4 @kind object;
}
