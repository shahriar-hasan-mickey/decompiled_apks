record `io.fabric.sdk.android.m.b.r` @kind class @AccessFlag PUBLIC extends `java.io.Closeable` @kind interface {
  `java.io.RandomAccessFile` `io.fabric.sdk.android.m.b.r.f` @AccessFlag PRIVATE_FINAL;
  `int` `io.fabric.sdk.android.m.b.r.g` @AccessFlag ;
  `int` `io.fabric.sdk.android.m.b.r.h` @AccessFlag PRIVATE;
  `io.fabric.sdk.android.m.b.r$b` `io.fabric.sdk.android.m.b.r.i` @AccessFlag PRIVATE;
  `io.fabric.sdk.android.m.b.r$b` `io.fabric.sdk.android.m.b.r.j` @AccessFlag PRIVATE;
  `byte`[] `io.fabric.sdk.android.m.b.r.k` @AccessFlag PRIVATE_FINAL;
}
global `java.util.logging.Logger` `@@io.fabric.sdk.android.m.b.r.l` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/fabric/sdk/android/m/b/r;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c7b44.  v0:= constclass @type ^`io.fabric.sdk.android.m.b.r` @kind object;
  #L1c7b48.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1c7b4e.  v0:= temp @kind object;
  #L1c7b50.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L1c7b56.  v0:= temp @kind object;
  #L1c7b58.  `@@io.fabric.sdk.android.m.b.r.l` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L1c7b5c.  return @kind void;
}
procedure `void` `<init>`(`io.fabric.sdk.android.m.b.r` v1 @kind this, `java.io.File` v2 @kind object) @signature `Lio/fabric/sdk/android/m/b/r;.<init>:(Ljava/io/File;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c7b70.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c7b76.  v0:= 16I;
  #L1c7b7a.  v0:= new `byte`[v0];
  #L1c7b7e.  v1.`io.fabric.sdk.android.m.b.r.k` @type ^`byte`[] := v0 @kind object;
  #L1c7b82.  call temp:= `exists`(v2) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L1c7b88.  v0:= temp;
  #L1c7b8a.  if v0 != 0 then goto L1c7b94;
  #L1c7b8e.  call `a`(v2) @signature `Lio/fabric/sdk/android/m/b/r;.a:(Ljava/io/File;)V` @kind static;
  #L1c7b94.  call temp:= `b`(v2) @signature `Lio/fabric/sdk/android/m/b/r;.b:(Ljava/io/File;)Ljava/io/RandomAccessFile;` @kind static;
  #L1c7b9a.  v2:= temp @kind object;
  #L1c7b9c.  v1.`io.fabric.sdk.android.m.b.r.f` @type ^`java.io.RandomAccessFile` := v2 @kind object;
  #L1c7ba0.  call `a`(v1) @signature `Lio/fabric/sdk/android/m/b/r;.a:()V` @kind direct;
  #L1c7ba6.  return @kind void;
}
procedure `int` `a`(`io.fabric.sdk.android.m.b.r` v0 @kind object, `int` v1 ) @signature `Lio/fabric/sdk/android/m/b/r;.a:(Lio/fabric/sdk/android/m/b/r;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c78ac.  call temp:= `d`(v0, v1) @signature `Lio/fabric/sdk/android/m/b/r;.d:(I)I` @kind direct;
  #L1c78b2.  v0:= temp;
  #L1c78b4.  return v0;
}
procedure `int` `a`(`byte`[] v2 @kind object, `int` v3 ) @signature `Lio/fabric/sdk/android/m/b/r;.a:([BI)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1c78c8.  v0:= v2[v3] @kind byte;
  #L1c78cc.  v0:= v0 ^& 255;
  #L1c78d0.  v0:= v0 ^< 24;
  #L1c78d4.  v1:= v3 + 1;
  #L1c78d8.  v1:= v2[v1] @kind byte;
  #L1c78dc.  v1:= v1 ^& 255;
  #L1c78e0.  v1:= v1 ^< 16;
  #L1c78e4.  v0:= v0 + v1 @kind int;
  #L1c78e6.  v1:= v3 + 2;
  #L1c78ea.  v1:= v2[v1] @kind byte;
  #L1c78ee.  v1:= v1 ^& 255;
  #L1c78f2.  v1:= v1 ^< 8;
  #L1c78f6.  v0:= v0 + v1 @kind int;
  #L1c78f8.  v3:= v3 + 3;
  #L1c78fc.  v2:= v2[v3] @kind byte;
  #L1c7900.  v2:= v2 ^& 255;
  #L1c7904.  v0:= v0 + v2 @kind int;
  #L1c7906.  return v0;
}
procedure `java.io.RandomAccessFile` `a`(`io.fabric.sdk.android.m.b.r` v0 @kind object) @signature `Lio/fabric/sdk/android/m/b/r;.a:(Lio/fabric/sdk/android/m/b/r;)Ljava/io/RandomAccessFile;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c79f4.  v0:= v0.`io.fabric.sdk.android.m.b.r.f` @type ^`java.io.RandomAccessFile` @kind object;
  #L1c79f8.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lio/fabric/sdk/android/m/b/r;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c7a2c.  call temp:= `b`(v0, v1) @signature `Lio/fabric/sdk/android/m/b/r;.b:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1c7a32.  return v0 @kind object;
}
procedure `void` `a`(`io.fabric.sdk.android.m.b.r` v5 @kind this) @signature `Lio/fabric/sdk/android/m/b/r;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1c7fb4.  v0:= v5.`io.fabric.sdk.android.m.b.r.f` @type ^`java.io.RandomAccessFile` @kind object;
  #L1c7fb8.  v1:= 0L;
  #L1c7fbc.  call `seek`(v0, v1) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L1c7fc2.  v0:= v5.`io.fabric.sdk.android.m.b.r.f` @type ^`java.io.RandomAccessFile` @kind object;
  #L1c7fc6.  v1:= v5.`io.fabric.sdk.android.m.b.r.k` @type ^`byte`[] @kind object;
  #L1c7fca.  call `readFully`(v0, v1) @signature `Ljava/io/RandomAccessFile;.readFully:([B)V` @kind virtual;
  #L1c7fd0.  v0:= v5.`io.fabric.sdk.android.m.b.r.k` @type ^`byte`[] @kind object;
  #L1c7fd4.  v1:= 0I;
  #L1c7fd6.  call temp:= `a`(v0, v1) @signature `Lio/fabric/sdk/android/m/b/r;.a:([BI)I` @kind static;
  #L1c7fdc.  v0:= temp;
  #L1c7fde.  v5.`io.fabric.sdk.android.m.b.r.g` @type ^`int` := v0;
  #L1c7fe2.  v0:= v5.`io.fabric.sdk.android.m.b.r.g` @type ^`int`;
  #L1c7fe6.  v0:= (`long`) v0 @kind i2l;
  #L1c7fe8.  v2:= v5.`io.fabric.sdk.android.m.b.r.f` @type ^`java.io.RandomAccessFile` @kind object;
  #L1c7fec.  call temp:= `length`(v2) @signature `Ljava/io/RandomAccessFile;.length:()J` @kind virtual;
  #L1c7ff2.  v2:= temp @kind wide;
  #L1c7ff4.  v4:= lcmp(v0, v2);
  #L1c7ff8.  if v4 > 0 then goto L1c8048;
  #L1c7ffc.  v0:= v5.`io.fabric.sdk.android.m.b.r.k` @type ^`byte`[] @kind object;
  #L1c8000.  v1:= 4I;
  #L1c8002.  call temp:= `a`(v0, v1) @signature `Lio/fabric/sdk/android/m/b/r;.a:([BI)I` @kind static;
  #L1c8008.  v0:= temp;
  #L1c800a.  v5.`io.fabric.sdk.android.m.b.r.h` @type ^`int` := v0;
  #L1c800e.  v0:= v5.`io.fabric.sdk.android.m.b.r.k` @type ^`byte`[] @kind object;
  #L1c8012.  v1:= 8I;
  #L1c8016.  call temp:= `a`(v0, v1) @signature `Lio/fabric/sdk/android/m/b/r;.a:([BI)I` @kind static;
  #L1c801c.  v0:= temp;
  #L1c801e.  v1:= v5.`io.fabric.sdk.android.m.b.r.k` @type ^`byte`[] @kind object;
  #L1c8022.  v2:= 12I;
  #L1c8026.  call temp:= `a`(v1, v2) @signature `Lio/fabric/sdk/android/m/b/r;.a:([BI)I` @kind static;
  #L1c802c.  v1:= temp;
  #L1c802e.  call temp:= `b`(v5, v0) @signature `Lio/fabric/sdk/android/m/b/r;.b:(I)Lio/fabric/sdk/android/m/b/r$b;` @kind direct;
  #L1c8034.  v0:= temp @kind object;
  #L1c8036.  v5.`io.fabric.sdk.android.m.b.r.i` @type ^`io.fabric.sdk.android.m.b.r$b` := v0 @kind object;
  #L1c803a.  call temp:= `b`(v5, v1) @signature `Lio/fabric/sdk/android/m/b/r;.b:(I)Lio/fabric/sdk/android/m/b/r$b;` @kind direct;
  #L1c8040.  v0:= temp @kind object;
  #L1c8042.  v5.`io.fabric.sdk.android.m.b.r.j` @type ^`io.fabric.sdk.android.m.b.r$b` := v0 @kind object;
  #L1c8046.  return @kind void;
  #L1c8048.  v0:= new `java.io.IOException`;
  #L1c804c.  v1:= new `java.lang.StringBuilder`;
  #L1c8050.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c8056.  v2:= "File is truncated. Expected length: " @kind object;
  #L1c805a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c8060.  v2:= v5.`io.fabric.sdk.android.m.b.r.g` @type ^`int`;
  #L1c8064.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c806a.  v2:= ", Actual length: " @kind object;
  #L1c806e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c8074.  v2:= v5.`io.fabric.sdk.android.m.b.r.f` @type ^`java.io.RandomAccessFile` @kind object;
  #L1c8078.  call temp:= `length`(v2) @signature `Ljava/io/RandomAccessFile;.length:()J` @kind virtual;
  #L1c807e.  v2:= temp @kind wide;
  #L1c8080.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c8086.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c808c.  v1:= temp @kind object;
  #L1c808e.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c8094.  throw v0;
}
procedure `void` `a`(`io.fabric.sdk.android.m.b.r` v10 @kind this, `int` v11 ) @signature `Lio/fabric/sdk/android/m/b/r;.a:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1c7d7c.  v11:= v11 + 4;
  #L1c7d80.  call temp:= `b`(v10) @signature `Lio/fabric/sdk/android/m/b/r;.b:()I` @kind direct;
  #L1c7d86.  v0:= temp;
  #L1c7d88.  if v0 < v11 then goto L1c7d8e;
  #L1c7d8c.  return @kind void;
  #L1c7d8e.  v1:= v10.`io.fabric.sdk.android.m.b.r.g` @type ^`int`;
  #L1c7d92.  v0:= v0 + v1 @kind int;
  #L1c7d94.  v1:= v1 ^< 1;
  #L1c7d98.  if v0 < v11 then goto L1c7d92;
  #L1c7d9c.  call `c`(v10, v1) @signature `Lio/fabric/sdk/android/m/b/r;.c:(I)V` @kind direct;
  #L1c7da2.  v11:= v10.`io.fabric.sdk.android.m.b.r.j` @type ^`io.fabric.sdk.android.m.b.r$b` @kind object;
  #L1c7da6.  v0:= v11.`io.fabric.sdk.android.m.b.r$b.a` @type ^`int`;
  #L1c7daa.  v0:= v0 + 4;
  #L1c7dae.  v11:= v11.`io.fabric.sdk.android.m.b.r$b.b` @type ^`int`;
  #L1c7db2.  v0:= v0 + v11 @kind int;
  #L1c7db4.  call temp:= `d`(v10, v0) @signature `Lio/fabric/sdk/android/m/b/r;.d:(I)I` @kind direct;
  #L1c7dba.  v11:= temp;
  #L1c7dbc.  v0:= v10.`io.fabric.sdk.android.m.b.r.i` @type ^`io.fabric.sdk.android.m.b.r$b` @kind object;
  #L1c7dc0.  v0:= v0.`io.fabric.sdk.android.m.b.r$b.a` @type ^`int`;
  #L1c7dc4.  if v11 >= v0 then goto L1c7e10;
  #L1c7dc8.  v0:= v10.`io.fabric.sdk.android.m.b.r.f` @type ^`java.io.RandomAccessFile` @kind object;
  #L1c7dcc.  call temp:= `getChannel`(v0) @signature `Ljava/io/RandomAccessFile;.getChannel:()Ljava/nio/channels/FileChannel;` @kind virtual;
  #L1c7dd2.  v7:= temp @kind object;
  #L1c7dd4.  v0:= v10.`io.fabric.sdk.android.m.b.r.g` @type ^`int`;
  #L1c7dd8.  v2:= (`long`) v0 @kind i2l;
  #L1c7dda.  call temp:= `position`(v7, v2) @signature `Ljava/nio/channels/FileChannel;.position:(J)Ljava/nio/channels/FileChannel;` @kind virtual;
  #L1c7de0.  v11:= v11 + -4;
  #L1c7de4.  v3:= 16L;
  #L1c7de8.  v8:= (`long`) v11 @kind i2l;
  #L1c7dea.  v2:= v7 @kind object;
  #L1c7dec.  v5:= v8 @kind wide;
  #L1c7dee.  call temp:= `transferTo`(v2, v3, v5, v7) @signature `Ljava/nio/channels/FileChannel;.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J` @kind virtual;
  #L1c7df4.  v2:= temp @kind wide;
  #L1c7df6.  v11:= lcmp(v2, v8);
  #L1c7dfa.  if v11 != 0 then goto L1c7e00;
  #L1c7dfe.  goto L1c7e10;
  #L1c7e00.  v11:= new `java.lang.AssertionError`;
  #L1c7e04.  v0:= "Copied insufficient number of bytes!" @kind object;
  #L1c7e08.  call `<init>`(v11, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1c7e0e.  throw v11;
  #L1c7e10.  v11:= v10.`io.fabric.sdk.android.m.b.r.j` @type ^`io.fabric.sdk.android.m.b.r$b` @kind object;
  #L1c7e14.  v11:= v11.`io.fabric.sdk.android.m.b.r$b.a` @type ^`int`;
  #L1c7e18.  v0:= v10.`io.fabric.sdk.android.m.b.r.i` @type ^`io.fabric.sdk.android.m.b.r$b` @kind object;
  #L1c7e1c.  v0:= v0.`io.fabric.sdk.android.m.b.r$b.a` @type ^`int`;
  #L1c7e20.  if v11 >= v0 then goto L1c7e50;
  #L1c7e24.  v2:= v10.`io.fabric.sdk.android.m.b.r.g` @type ^`int`;
  #L1c7e28.  v2:= v2 + v11 @kind int;
  #L1c7e2a.  v2:= v2 + -16;
  #L1c7e2e.  v11:= v10.`io.fabric.sdk.android.m.b.r.h` @type ^`int`;
  #L1c7e32.  call `a`(v10, v1, v11, v0, v2) @signature `Lio/fabric/sdk/android/m/b/r;.a:(IIII)V` @kind direct;
  #L1c7e38.  v11:= new `io.fabric.sdk.android.m.b.r$b`;
  #L1c7e3c.  v0:= v10.`io.fabric.sdk.android.m.b.r.j` @type ^`io.fabric.sdk.android.m.b.r$b` @kind object;
  #L1c7e40.  v0:= v0.`io.fabric.sdk.android.m.b.r$b.b` @type ^`int`;
  #L1c7e44.  call `<init>`(v11, v2, v0) @signature `Lio/fabric/sdk/android/m/b/r$b;.<init>:(II)V` @kind direct;
  #L1c7e4a.  v10.`io.fabric.sdk.android.m.b.r.j` @type ^`io.fabric.sdk.android.m.b.r$b` := v11 @kind object;
  #L1c7e4e.  goto L1c7e5a;
  #L1c7e50.  v2:= v10.`io.fabric.sdk.android.m.b.r.h` @type ^`int`;
  #L1c7e54.  call `a`(v10, v1, v2, v0, v11) @signature `Lio/fabric/sdk/android/m/b/r;.a:(IIII)V` @kind direct;
  #L1c7e5a.  v10.`io.fabric.sdk.android.m.b.r.g` @type ^`int` := v1;
  #L1c7e5e.  return @kind void;
}
procedure `void` `a`(`io.fabric.sdk.android.m.b.r` v3 @kind this, `int` v4 , `int` v5 , `int` v6 , `int` v7 ) @signature `Lio/fabric/sdk/android/m/b/r;.a:(IIII)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1c8284.  v0:= v3.`io.fabric.sdk.android.m.b.r.k` @type ^`byte`[] @kind object;
  #L1c8288.  v1:= 4I;
  #L1c828a.  v1:= new `int`[v1];
  #L1c828e.  v2:= 0I;
  #L1c8290.  v1[v2]:= v4;
  #L1c8294.  v4:= 1I;
  #L1c8296.  v1[v4]:= v5;
  #L1c829a.  v4:= 2I;
  #L1c829c.  v1[v4]:= v6;
  #L1c82a0.  v4:= 3I;
  #L1c82a2.  v1[v4]:= v7;
  #L1c82a6.  call `a`(v0, v1) @signature `Lio/fabric/sdk/android/m/b/r;.a:([B[I)V` @kind static;
  #L1c82ac.  v4:= v3.`io.fabric.sdk.android.m.b.r.f` @type ^`java.io.RandomAccessFile` @kind object;
  #L1c82b0.  v5:= 0L;
  #L1c82b4.  call `seek`(v4, v5) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L1c82ba.  v4:= v3.`io.fabric.sdk.android.m.b.r.f` @type ^`java.io.RandomAccessFile` @kind object;
  #L1c82be.  v5:= v3.`io.fabric.sdk.android.m.b.r.k` @type ^`byte`[] @kind object;
  #L1c82c2.  call `write`(v4, v5) @signature `Ljava/io/RandomAccessFile;.write:([B)V` @kind virtual;
  #L1c82c8.  return @kind void;
}
procedure `void` `a`(`io.fabric.sdk.android.m.b.r` v4 @kind this, `int` v5 , `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lio/fabric/sdk/android/m/b/r;.a:(I[BII)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c8168.  call temp:= `d`(v4, v5) @signature `Lio/fabric/sdk/android/m/b/r;.d:(I)I` @kind direct;
  #L1c816e.  v5:= temp;
  #L1c8170.  v0:= v5 + v8 @kind int;
  #L1c8174.  v1:= v4.`io.fabric.sdk.android.m.b.r.g` @type ^`int`;
  #L1c8178.  if v0 > v1 then goto L1c8194;
  #L1c817c.  v0:= v4.`io.fabric.sdk.android.m.b.r.f` @type ^`java.io.RandomAccessFile` @kind object;
  #L1c8180.  v1:= (`long`) v5 @kind i2l;
  #L1c8182.  call `seek`(v0, v1) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L1c8188.  v5:= v4.`io.fabric.sdk.android.m.b.r.f` @type ^`java.io.RandomAccessFile` @kind object;
  #L1c818c.  call `readFully`(v5, v6, v7, v8) @signature `Ljava/io/RandomAccessFile;.readFully:([BII)V` @kind virtual;
  #L1c8192.  goto L1c81c8;
  #L1c8194.  v1:= v1 - v5 @kind int;
  #L1c8196.  v0:= v4.`io.fabric.sdk.android.m.b.r.f` @type ^`java.io.RandomAccessFile` @kind object;
  #L1c819a.  v2:= (`long`) v5 @kind i2l;
  #L1c819c.  call `seek`(v0, v2) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L1c81a2.  v5:= v4.`io.fabric.sdk.android.m.b.r.f` @type ^`java.io.RandomAccessFile` @kind object;
  #L1c81a6.  call `readFully`(v5, v6, v7, v1) @signature `Ljava/io/RandomAccessFile;.readFully:([BII)V` @kind virtual;
  #L1c81ac.  v5:= v4.`io.fabric.sdk.android.m.b.r.f` @type ^`java.io.RandomAccessFile` @kind object;
  #L1c81b0.  v2:= 16L;
  #L1c81b4.  call `seek`(v5, v2) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L1c81ba.  v5:= v4.`io.fabric.sdk.android.m.b.r.f` @type ^`java.io.RandomAccessFile` @kind object;
  #L1c81be.  v7:= v7 + v1 @kind int;
  #L1c81c0.  v8:= v8 - v1 @kind int;
  #L1c81c2.  call `readFully`(v5, v6, v7, v8) @signature `Ljava/io/RandomAccessFile;.readFully:([BII)V` @kind virtual;
  #L1c81c8.  return @kind void;
}
procedure `void` `a`(`io.fabric.sdk.android.m.b.r` v0 @kind object, `int` v1 , `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/fabric/sdk/android/m/b/r;.a:(Lio/fabric/sdk/android/m/b/r;I[BII)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c7bb8.  call `a`(v0, v1, v2, v3, v4) @signature `Lio/fabric/sdk/android/m/b/r;.a:(I[BII)V` @kind direct;
  #L1c7bbe.  return @kind void;
}
procedure `void` `a`(`java.io.File` v6 @kind object) @signature `Lio/fabric/sdk/android/m/b/r;.a:(Ljava/io/File;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1c7ee4.  v0:= new `java.io.File`;
  #L1c7ee8.  v1:= new `java.lang.StringBuilder`;
  #L1c7eec.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c7ef2.  call temp:= `getPath`(v6) @signature `Ljava/io/File;.getPath:()Ljava/lang/String;` @kind virtual;
  #L1c7ef8.  v2:= temp @kind object;
  #L1c7efa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c7f00.  v2:= ".tmp" @kind object;
  #L1c7f04.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c7f0a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c7f10.  v1:= temp @kind object;
  #L1c7f12.  call `<init>`(v0, v1) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c7f18.  call temp:= `b`(v0) @signature `Lio/fabric/sdk/android/m/b/r;.b:(Ljava/io/File;)Ljava/io/RandomAccessFile;` @kind static;
  #L1c7f1e.  v1:= temp @kind object;
  #L1c7f20.  v2:= 4096L;
  #L1c7f24.  call `setLength`(v1, v2) @signature `Ljava/io/RandomAccessFile;.setLength:(J)V` @kind virtual;
  #L1c7f2a.  v2:= 0L;
  #L1c7f2e.  call `seek`(v1, v2) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L1c7f34.  v2:= 16I;
  #L1c7f38.  v2:= new `byte`[v2];
  #L1c7f3c.  v3:= 4I;
  #L1c7f3e.  v3:= new `int`[v3];
  #L1c7f42.  v4:= 4096I;
  #L1c7f46.  v5:= 0I;
  #L1c7f48.  v3[v5]:= v4;
  #L1c7f4c.  v4:= 1I;
  #L1c7f4e.  v3[v4]:= v5;
  #L1c7f52.  v4:= 2I;
  #L1c7f54.  v3[v4]:= v5;
  #L1c7f58.  v4:= 3I;
  #L1c7f5a.  v3[v4]:= v5;
  #L1c7f5e.  call `a`(v2, v3) @signature `Lio/fabric/sdk/android/m/b/r;.a:([B[I)V` @kind static;
  #L1c7f64.  call `write`(v1, v2) @signature `Ljava/io/RandomAccessFile;.write:([B)V` @kind virtual;
  #L1c7f6a.  call `close`(v1) @signature `Ljava/io/RandomAccessFile;.close:()V` @kind virtual;
  #L1c7f70.  call temp:= `renameTo`(v0, v6) @signature `Ljava/io/File;.renameTo:(Ljava/io/File;)Z` @kind virtual;
  #L1c7f76.  v6:= temp;
  #L1c7f78.  if v6 == 0 then goto L1c7f7e;
  #L1c7f7c.  return @kind void;
  #L1c7f7e.  v6:= new `java.io.IOException`;
  #L1c7f82.  v0:= "Rename failed!" @kind object;
  #L1c7f86.  call `<init>`(v6, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c7f8c.  throw v6;
  #L1c7f8e.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c7f90.  call `close`(v1) @signature `Ljava/io/RandomAccessFile;.close:()V` @kind virtual;
  #L1c7f96.  throw v6;
  catch `java.lang.Throwable` @[L1c7f24..L1c7f6a] goto L1c7f8e;
}
procedure `void` `a`(`byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lio/fabric/sdk/android/m/b/r;.a:([BII)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1c82dc.  v0:= v4 ^> 24;
  #L1c82e0.  v0:= (`byte`) v0 @kind i2b;
  #L1c82e2.  v2[v3]:= v0 @kind byte;
  #L1c82e6.  v0:= v3 + 1;
  #L1c82ea.  v1:= v4 ^> 16;
  #L1c82ee.  v1:= (`byte`) v1 @kind i2b;
  #L1c82f0.  v2[v0]:= v1 @kind byte;
  #L1c82f4.  v0:= v3 + 2;
  #L1c82f8.  v1:= v4 ^> 8;
  #L1c82fc.  v1:= (`byte`) v1 @kind i2b;
  #L1c82fe.  v2[v0]:= v1 @kind byte;
  #L1c8302.  v3:= v3 + 3;
  #L1c8306.  v4:= (`byte`) v4 @kind i2b;
  #L1c8308.  v2[v3]:= v4 @kind byte;
  #L1c830c.  return @kind void;
}
procedure `void` `a`(`byte`[] v4 @kind object, `int`[] v5 @kind object) @signature `Lio/fabric/sdk/android/m/b/r;.a:([B[I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c8320.  v0:= length @variable v5;
  #L1c8322.  v1:= 0I;
  #L1c8324.  v2:= 0I;
  #L1c8326.  if v1 >= v0 then goto L1c833e;
  #L1c832a.  v3:= v5[v1];
  #L1c832e.  call `a`(v4, v2, v3) @signature `Lio/fabric/sdk/android/m/b/r;.a:([BII)V` @kind static;
  #L1c8334.  v2:= v2 + 4;
  #L1c8338.  v1:= v1 + 1;
  #L1c833c.  goto L1c8326;
  #L1c833e.  return @kind void;
}
procedure `int` `b`(`io.fabric.sdk.android.m.b.r` v2 @kind this) @signature `Lio/fabric/sdk/android/m/b/r;.b:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1c7918.  v0:= v2.`io.fabric.sdk.android.m.b.r.g` @type ^`int`;
  #L1c791c.  call temp:= `usedBytes`(v2) @signature `Lio/fabric/sdk/android/m/b/r;.usedBytes:()I` @kind virtual;
  #L1c7922.  v1:= temp;
  #L1c7924.  v0:= v0 - v1 @kind int;
  #L1c7926.  return v0;
}
procedure `io.fabric.sdk.android.m.b.r$b` `b`(`io.fabric.sdk.android.m.b.r` v3 @kind this, `int` v4 ) @signature `Lio/fabric/sdk/android/m/b/r;.b:(I)Lio/fabric/sdk/android/m/b/r$b;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1c79b4.  if v4 != 0 then goto L1c79be;
  #L1c79b8.  v4:= `@@io.fabric.sdk.android.m.b.r$b.c` @type ^`io.fabric.sdk.android.m.b.r$b` @kind object;
  #L1c79bc.  return v4 @kind object;
  #L1c79be.  v0:= v3.`io.fabric.sdk.android.m.b.r.f` @type ^`java.io.RandomAccessFile` @kind object;
  #L1c79c2.  v1:= (`long`) v4 @kind i2l;
  #L1c79c4.  call `seek`(v0, v1) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L1c79ca.  v0:= new `io.fabric.sdk.android.m.b.r$b`;
  #L1c79ce.  v1:= v3.`io.fabric.sdk.android.m.b.r.f` @type ^`java.io.RandomAccessFile` @kind object;
  #L1c79d2.  call temp:= `readInt`(v1) @signature `Ljava/io/RandomAccessFile;.readInt:()I` @kind virtual;
  #L1c79d8.  v1:= temp;
  #L1c79da.  call `<init>`(v0, v4, v1) @signature `Lio/fabric/sdk/android/m/b/r$b;.<init>:(II)V` @kind direct;
  #L1c79e0.  return v0 @kind object;
}
procedure `java.io.RandomAccessFile` `b`(`java.io.File` v2 @kind object) @signature `Lio/fabric/sdk/android/m/b/r;.b:(Ljava/io/File;)Ljava/io/RandomAccessFile;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1c7a0c.  v0:= new `java.io.RandomAccessFile`;
  #L1c7a10.  v1:= "rwd" @kind object;
  #L1c7a14.  call `<init>`(v0, v2, v1) @signature `Ljava/io/RandomAccessFile;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L1c7a1a.  return v0 @kind object;
}
procedure `java.lang.Object` `b`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lio/fabric/sdk/android/m/b/r;.b:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L1c7a44.  if v0 == 0 then goto L1c7a4a;
  #L1c7a48.  return v0 @kind object;
  #L1c7a4a.  v0:= new `java.lang.NullPointerException`;
  #L1c7a4e.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c7a54.  throw v0;
}
procedure `void` `b`(`io.fabric.sdk.android.m.b.r` v4 @kind this, `int` v5 , `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lio/fabric/sdk/android/m/b/r;.b:(I[BII)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c81dc.  call temp:= `d`(v4, v5) @signature `Lio/fabric/sdk/android/m/b/r;.d:(I)I` @kind direct;
  #L1c81e2.  v5:= temp;
  #L1c81e4.  v0:= v5 + v8 @kind int;
  #L1c81e8.  v1:= v4.`io.fabric.sdk.android.m.b.r.g` @type ^`int`;
  #L1c81ec.  if v0 > v1 then goto L1c8208;
  #L1c81f0.  v0:= v4.`io.fabric.sdk.android.m.b.r.f` @type ^`java.io.RandomAccessFile` @kind object;
  #L1c81f4.  v1:= (`long`) v5 @kind i2l;
  #L1c81f6.  call `seek`(v0, v1) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L1c81fc.  v5:= v4.`io.fabric.sdk.android.m.b.r.f` @type ^`java.io.RandomAccessFile` @kind object;
  #L1c8200.  call `write`(v5, v6, v7, v8) @signature `Ljava/io/RandomAccessFile;.write:([BII)V` @kind virtual;
  #L1c8206.  goto L1c823c;
  #L1c8208.  v1:= v1 - v5 @kind int;
  #L1c820a.  v0:= v4.`io.fabric.sdk.android.m.b.r.f` @type ^`java.io.RandomAccessFile` @kind object;
  #L1c820e.  v2:= (`long`) v5 @kind i2l;
  #L1c8210.  call `seek`(v0, v2) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L1c8216.  v5:= v4.`io.fabric.sdk.android.m.b.r.f` @type ^`java.io.RandomAccessFile` @kind object;
  #L1c821a.  call `write`(v5, v6, v7, v1) @signature `Ljava/io/RandomAccessFile;.write:([BII)V` @kind virtual;
  #L1c8220.  v5:= v4.`io.fabric.sdk.android.m.b.r.f` @type ^`java.io.RandomAccessFile` @kind object;
  #L1c8224.  v2:= 16L;
  #L1c8228.  call `seek`(v5, v2) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L1c822e.  v5:= v4.`io.fabric.sdk.android.m.b.r.f` @type ^`java.io.RandomAccessFile` @kind object;
  #L1c8232.  v7:= v7 + v1 @kind int;
  #L1c8234.  v8:= v8 - v1 @kind int;
  #L1c8236.  call `write`(v5, v6, v7, v8) @signature `Ljava/io/RandomAccessFile;.write:([BII)V` @kind virtual;
  #L1c823c.  return @kind void;
}
procedure `void` `c`(`io.fabric.sdk.android.m.b.r` v3 @kind this, `int` v4 ) @signature `Lio/fabric/sdk/android/m/b/r;.c:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1c8250.  v0:= v3.`io.fabric.sdk.android.m.b.r.f` @type ^`java.io.RandomAccessFile` @kind object;
  #L1c8254.  v1:= (`long`) v4 @kind i2l;
  #L1c8256.  call `setLength`(v0, v1) @signature `Ljava/io/RandomAccessFile;.setLength:(J)V` @kind virtual;
  #L1c825c.  v4:= v3.`io.fabric.sdk.android.m.b.r.f` @type ^`java.io.RandomAccessFile` @kind object;
  #L1c8260.  call temp:= `getChannel`(v4) @signature `Ljava/io/RandomAccessFile;.getChannel:()Ljava/nio/channels/FileChannel;` @kind virtual;
  #L1c8266.  v4:= temp @kind object;
  #L1c8268.  v0:= 1I;
  #L1c826a.  call `force`(v4, v0) @signature `Ljava/nio/channels/FileChannel;.force:(Z)V` @kind virtual;
  #L1c8270.  return @kind void;
}
procedure `int` `d`(`io.fabric.sdk.android.m.b.r` v1 @kind this, `int` v2 ) @signature `Lio/fabric/sdk/android/m/b/r;.d:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1c7990.  v0:= v1.`io.fabric.sdk.android.m.b.r.g` @type ^`int`;
  #L1c7994.  if v2 >= v0 then goto L1c799a;
  #L1c7998.  goto L1c79a0;
  #L1c799a.  v2:= v2 + 16;
  #L1c799e.  v2:= v2 - v0 @kind int;
  #L1c79a0.  return v2;
}
procedure `void` `add`(`io.fabric.sdk.android.m.b.r` v2 @kind this, `byte`[] v3 @kind object) @signature `Lio/fabric/sdk/android/m/b/r;.add:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c7bd0.  v0:= length @variable v3;
  #L1c7bd2.  v1:= 0I;
  #L1c7bd4.  call `add`(v2, v3, v1, v0) @signature `Lio/fabric/sdk/android/m/b/r;.add:([BII)V` @kind virtual;
  #L1c7bda.  return @kind void;
}
procedure `void` `add`(`io.fabric.sdk.android.m.b.r` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lio/fabric/sdk/android/m/b/r;.add:([BII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1c7bec.  @monitorenter v6
  #L1c7bee.  v0:= "buffer" @kind object;
  #L1c7bf2.  call temp:= `b`(v7, v0) @signature `Lio/fabric/sdk/android/m/b/r;.b:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1c7bf8.  v0:= v8 ^| v9 @kind int;
  #L1c7bfc.  if v0 < 0 then goto L1c7cb6;
  #L1c7c00.  v0:= length @variable v7;
  #L1c7c02.  v0:= v0 - v8 @kind int;
  #L1c7c04.  if v9 > v0 then goto L1c7cb6;
  #L1c7c08.  call `a`(v6, v9) @signature `Lio/fabric/sdk/android/m/b/r;.a:(I)V` @kind direct;
  #L1c7c0e.  call temp:= `isEmpty`(v6) @signature `Lio/fabric/sdk/android/m/b/r;.isEmpty:()Z` @kind virtual;
  #L1c7c14.  v0:= temp;
  #L1c7c16.  v1:= 4I;
  #L1c7c18.  if v0 == 0 then goto L1c7c22;
  #L1c7c1c.  v2:= 16I;
  #L1c7c20.  goto L1c7c3e;
  #L1c7c22.  v2:= v6.`io.fabric.sdk.android.m.b.r.j` @type ^`io.fabric.sdk.android.m.b.r$b` @kind object;
  #L1c7c26.  v2:= v2.`io.fabric.sdk.android.m.b.r$b.a` @type ^`int`;
  #L1c7c2a.  v2:= v2 + v1 @kind int;
  #L1c7c2c.  v3:= v6.`io.fabric.sdk.android.m.b.r.j` @type ^`io.fabric.sdk.android.m.b.r$b` @kind object;
  #L1c7c30.  v3:= v3.`io.fabric.sdk.android.m.b.r$b.b` @type ^`int`;
  #L1c7c34.  v2:= v2 + v3 @kind int;
  #L1c7c36.  call temp:= `d`(v6, v2) @signature `Lio/fabric/sdk/android/m/b/r;.d:(I)I` @kind direct;
  #L1c7c3c.  v2:= temp;
  #L1c7c3e.  v3:= new `io.fabric.sdk.android.m.b.r$b`;
  #L1c7c42.  call `<init>`(v3, v2, v9) @signature `Lio/fabric/sdk/android/m/b/r$b;.<init>:(II)V` @kind direct;
  #L1c7c48.  v2:= v6.`io.fabric.sdk.android.m.b.r.k` @type ^`byte`[] @kind object;
  #L1c7c4c.  v4:= 0I;
  #L1c7c4e.  call `a`(v2, v4, v9) @signature `Lio/fabric/sdk/android/m/b/r;.a:([BII)V` @kind static;
  #L1c7c54.  v2:= v3.`io.fabric.sdk.android.m.b.r$b.a` @type ^`int`;
  #L1c7c58.  v5:= v6.`io.fabric.sdk.android.m.b.r.k` @type ^`byte`[] @kind object;
  #L1c7c5c.  call `b`(v6, v2, v5, v4, v1) @signature `Lio/fabric/sdk/android/m/b/r;.b:(I[BII)V` @kind direct;
  #L1c7c62.  v2:= v3.`io.fabric.sdk.android.m.b.r$b.a` @type ^`int`;
  #L1c7c66.  v2:= v2 + v1 @kind int;
  #L1c7c68.  call `b`(v6, v2, v7, v8, v9) @signature `Lio/fabric/sdk/android/m/b/r;.b:(I[BII)V` @kind direct;
  #L1c7c6e.  if v0 == 0 then goto L1c7c78;
  #L1c7c72.  v7:= v3.`io.fabric.sdk.android.m.b.r$b.a` @type ^`int`;
  #L1c7c76.  goto L1c7c80;
  #L1c7c78.  v7:= v6.`io.fabric.sdk.android.m.b.r.i` @type ^`io.fabric.sdk.android.m.b.r$b` @kind object;
  #L1c7c7c.  v7:= v7.`io.fabric.sdk.android.m.b.r$b.a` @type ^`int`;
  #L1c7c80.  v8:= v6.`io.fabric.sdk.android.m.b.r.g` @type ^`int`;
  #L1c7c84.  v9:= v6.`io.fabric.sdk.android.m.b.r.h` @type ^`int`;
  #L1c7c88.  v9:= v9 + 1;
  #L1c7c8c.  v1:= v3.`io.fabric.sdk.android.m.b.r$b.a` @type ^`int`;
  #L1c7c90.  call `a`(v6, v8, v9, v7, v1) @signature `Lio/fabric/sdk/android/m/b/r;.a:(IIII)V` @kind direct;
  #L1c7c96.  v6.`io.fabric.sdk.android.m.b.r.j` @type ^`io.fabric.sdk.android.m.b.r$b` := v3 @kind object;
  #L1c7c9a.  v7:= v6.`io.fabric.sdk.android.m.b.r.h` @type ^`int`;
  #L1c7c9e.  v7:= v7 + 1;
  #L1c7ca2.  v6.`io.fabric.sdk.android.m.b.r.h` @type ^`int` := v7;
  #L1c7ca6.  if v0 == 0 then goto L1c7cb2;
  #L1c7caa.  v7:= v6.`io.fabric.sdk.android.m.b.r.j` @type ^`io.fabric.sdk.android.m.b.r$b` @kind object;
  #L1c7cae.  v6.`io.fabric.sdk.android.m.b.r.i` @type ^`io.fabric.sdk.android.m.b.r$b` := v7 @kind object;
  #L1c7cb2.  @monitorexit v6
  #L1c7cb4.  return @kind void;
  #L1c7cb6.  v7:= new `java.lang.IndexOutOfBoundsException`;
  #L1c7cba.  call `<init>`(v7) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L1c7cc0.  throw v7;
  #L1c7cc2.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c7cc4.  @monitorexit v6
  #L1c7cc6.  throw v7;
  catch `java.lang.Throwable` @[L1c7bee..L1c7cb2] goto L1c7cc2;
  catch `java.lang.Throwable` @[L1c7cb6..L1c7cc2] goto L1c7cc2;
}
procedure `void` `clear`(`io.fabric.sdk.android.m.b.r` v2 @kind this) @signature `Lio/fabric/sdk/android/m/b/r;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c7cec.  @monitorenter v2
  #L1c7cee.  v0:= 0I;
  #L1c7cf0.  v1:= 4096I;
  #L1c7cf4.  call `a`(v2, v1, v0, v0, v0) @signature `Lio/fabric/sdk/android/m/b/r;.a:(IIII)V` @kind direct;
  #L1c7cfa.  v2.`io.fabric.sdk.android.m.b.r.h` @type ^`int` := v0;
  #L1c7cfe.  v0:= `@@io.fabric.sdk.android.m.b.r$b.c` @type ^`io.fabric.sdk.android.m.b.r$b` @kind object;
  #L1c7d02.  v2.`io.fabric.sdk.android.m.b.r.i` @type ^`io.fabric.sdk.android.m.b.r$b` := v0 @kind object;
  #L1c7d06.  v0:= `@@io.fabric.sdk.android.m.b.r$b.c` @type ^`io.fabric.sdk.android.m.b.r$b` @kind object;
  #L1c7d0a.  v2.`io.fabric.sdk.android.m.b.r.j` @type ^`io.fabric.sdk.android.m.b.r$b` := v0 @kind object;
  #L1c7d0e.  v0:= v2.`io.fabric.sdk.android.m.b.r.g` @type ^`int`;
  #L1c7d12.  if v0 <= v1 then goto L1c7d1c;
  #L1c7d16.  call `c`(v2, v1) @signature `Lio/fabric/sdk/android/m/b/r;.c:(I)V` @kind direct;
  #L1c7d1c.  v2.`io.fabric.sdk.android.m.b.r.g` @type ^`int` := v1;
  #L1c7d20.  @monitorexit v2
  #L1c7d22.  return @kind void;
  #L1c7d24.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c7d26.  @monitorexit v2
  #L1c7d28.  throw v0;
  catch `java.lang.Throwable` @[L1c7cf4..L1c7d20] goto L1c7d24;
}
procedure `void` `close`(`io.fabric.sdk.android.m.b.r` v1 @kind this) @signature `Lio/fabric/sdk/android/m/b/r;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c7d48.  @monitorenter v1
  #L1c7d4a.  v0:= v1.`io.fabric.sdk.android.m.b.r.f` @type ^`java.io.RandomAccessFile` @kind object;
  #L1c7d4e.  call `close`(v0) @signature `Ljava/io/RandomAccessFile;.close:()V` @kind virtual;
  #L1c7d54.  @monitorexit v1
  #L1c7d56.  return @kind void;
  #L1c7d58.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c7d5a.  @monitorexit v1
  #L1c7d5c.  throw v0;
  catch `java.lang.Throwable` @[L1c7d4a..L1c7d54] goto L1c7d58;
}
procedure `void` `forEach`(`io.fabric.sdk.android.m.b.r` v4 @kind this, `io.fabric.sdk.android.m.b.r$d` v5 @kind object) @signature `Lio/fabric/sdk/android/m/b/r;.forEach:(Lio/fabric/sdk/android/m/b/r$d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c7e70.  @monitorenter v4
  #L1c7e72.  v0:= v4.`io.fabric.sdk.android.m.b.r.i` @type ^`io.fabric.sdk.android.m.b.r$b` @kind object;
  #L1c7e76.  v0:= v0.`io.fabric.sdk.android.m.b.r$b.a` @type ^`int`;
  #L1c7e7a.  v1:= 0I;
  #L1c7e7c.  v2:= v4.`io.fabric.sdk.android.m.b.r.h` @type ^`int`;
  #L1c7e80.  if v1 >= v2 then goto L1c7ebe;
  #L1c7e84.  call temp:= `b`(v4, v0) @signature `Lio/fabric/sdk/android/m/b/r;.b:(I)Lio/fabric/sdk/android/m/b/r$b;` @kind direct;
  #L1c7e8a.  v0:= temp @kind object;
  #L1c7e8c.  v2:= new `io.fabric.sdk.android.m.b.r$c`;
  #L1c7e90.  v3:= 0I;
  #L1c7e92.  call `<init>`(v2, v4, v0, v3) @signature `Lio/fabric/sdk/android/m/b/r$c;.<init>:(Lio/fabric/sdk/android/m/b/r;Lio/fabric/sdk/android/m/b/r$b;Lio/fabric/sdk/android/m/b/r$a;)V` @kind direct;
  #L1c7e98.  v3:= v0.`io.fabric.sdk.android.m.b.r$b.b` @type ^`int`;
  #L1c7e9c.  call `read`(v5, v2, v3) @signature `Lio/fabric/sdk/android/m/b/r$d;.read:(Ljava/io/InputStream;I)V` @kind interface;
  #L1c7ea2.  v2:= v0.`io.fabric.sdk.android.m.b.r$b.a` @type ^`int`;
  #L1c7ea6.  v2:= v2 + 4;
  #L1c7eaa.  v0:= v0.`io.fabric.sdk.android.m.b.r$b.b` @type ^`int`;
  #L1c7eae.  v2:= v2 + v0 @kind int;
  #L1c7eb0.  call temp:= `d`(v4, v2) @signature `Lio/fabric/sdk/android/m/b/r;.d:(I)I` @kind direct;
  #L1c7eb6.  v0:= temp;
  #L1c7eb8.  v1:= v1 + 1;
  #L1c7ebc.  goto L1c7e7c;
  #L1c7ebe.  @monitorexit v4
  #L1c7ec0.  return @kind void;
  #L1c7ec2.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c7ec4.  @monitorexit v4
  #L1c7ec6.  throw v5;
  catch `java.lang.Throwable` @[L1c7e72..L1c7eb8] goto L1c7ec2;
}
procedure `boolean` `hasSpaceFor`(`io.fabric.sdk.android.m.b.r` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lio/fabric/sdk/android/m/b/r;.hasSpaceFor:(II)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c7848.  call temp:= `usedBytes`(v1) @signature `Lio/fabric/sdk/android/m/b/r;.usedBytes:()I` @kind virtual;
  #L1c784e.  v0:= temp;
  #L1c7850.  v0:= v0 + 4;
  #L1c7854.  v0:= v0 + v2 @kind int;
  #L1c7856.  if v0 > v3 then goto L1c785e;
  #L1c785a.  v2:= 1I;
  #L1c785c.  goto L1c7860;
  #L1c785e.  v2:= 0I;
  #L1c7860.  return v2;
}
procedure `boolean` `isEmpty`(`io.fabric.sdk.android.m.b.r` v1 @kind this) @signature `Lio/fabric/sdk/android/m/b/r;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c7874.  @monitorenter v1
  #L1c7876.  v0:= v1.`io.fabric.sdk.android.m.b.r.h` @type ^`int`;
  #L1c787a.  if v0 != 0 then goto L1c7882;
  #L1c787e.  v0:= 1I;
  #L1c7880.  goto L1c7884;
  #L1c7882.  v0:= 0I;
  #L1c7884.  @monitorexit v1
  #L1c7886.  return v0;
  #L1c7888.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c788a.  @monitorexit v1
  #L1c788c.  throw v0;
  catch `java.lang.Throwable` @[L1c7876..L1c787a] goto L1c7888;
}
procedure `void` `remove`(`io.fabric.sdk.android.m.b.r` v6 @kind this) @signature `Lio/fabric/sdk/android/m/b/r;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1c80a8.  @monitorenter v6
  #L1c80aa.  call temp:= `isEmpty`(v6) @signature `Lio/fabric/sdk/android/m/b/r;.isEmpty:()Z` @kind virtual;
  #L1c80b0.  v0:= temp;
  #L1c80b2.  if v0 != 0 then goto L1c8132;
  #L1c80b6.  v0:= v6.`io.fabric.sdk.android.m.b.r.h` @type ^`int`;
  #L1c80ba.  v1:= 1I;
  #L1c80bc.  if v0 != v1 then goto L1c80c8;
  #L1c80c0.  call `clear`(v6) @signature `Lio/fabric/sdk/android/m/b/r;.clear:()V` @kind virtual;
  #L1c80c6.  goto L1c812e;
  #L1c80c8.  v0:= v6.`io.fabric.sdk.android.m.b.r.i` @type ^`io.fabric.sdk.android.m.b.r$b` @kind object;
  #L1c80cc.  v0:= v0.`io.fabric.sdk.android.m.b.r$b.a` @type ^`int`;
  #L1c80d0.  v2:= 4I;
  #L1c80d2.  v0:= v0 + v2 @kind int;
  #L1c80d4.  v3:= v6.`io.fabric.sdk.android.m.b.r.i` @type ^`io.fabric.sdk.android.m.b.r$b` @kind object;
  #L1c80d8.  v3:= v3.`io.fabric.sdk.android.m.b.r$b.b` @type ^`int`;
  #L1c80dc.  v0:= v0 + v3 @kind int;
  #L1c80de.  call temp:= `d`(v6, v0) @signature `Lio/fabric/sdk/android/m/b/r;.d:(I)I` @kind direct;
  #L1c80e4.  v0:= temp;
  #L1c80e6.  v3:= v6.`io.fabric.sdk.android.m.b.r.k` @type ^`byte`[] @kind object;
  #L1c80ea.  v4:= 0I;
  #L1c80ec.  call `a`(v6, v0, v3, v4, v2) @signature `Lio/fabric/sdk/android/m/b/r;.a:(I[BII)V` @kind direct;
  #L1c80f2.  v2:= v6.`io.fabric.sdk.android.m.b.r.k` @type ^`byte`[] @kind object;
  #L1c80f6.  call temp:= `a`(v2, v4) @signature `Lio/fabric/sdk/android/m/b/r;.a:([BI)I` @kind static;
  #L1c80fc.  v2:= temp;
  #L1c80fe.  v3:= v6.`io.fabric.sdk.android.m.b.r.g` @type ^`int`;
  #L1c8102.  v4:= v6.`io.fabric.sdk.android.m.b.r.h` @type ^`int`;
  #L1c8106.  v4:= v4 - v1 @kind int;
  #L1c8108.  v5:= v6.`io.fabric.sdk.android.m.b.r.j` @type ^`io.fabric.sdk.android.m.b.r$b` @kind object;
  #L1c810c.  v5:= v5.`io.fabric.sdk.android.m.b.r$b.a` @type ^`int`;
  #L1c8110.  call `a`(v6, v3, v4, v0, v5) @signature `Lio/fabric/sdk/android/m/b/r;.a:(IIII)V` @kind direct;
  #L1c8116.  v3:= v6.`io.fabric.sdk.android.m.b.r.h` @type ^`int`;
  #L1c811a.  v3:= v3 - v1 @kind int;
  #L1c811c.  v6.`io.fabric.sdk.android.m.b.r.h` @type ^`int` := v3;
  #L1c8120.  v1:= new `io.fabric.sdk.android.m.b.r$b`;
  #L1c8124.  call `<init>`(v1, v0, v2) @signature `Lio/fabric/sdk/android/m/b/r$b;.<init>:(II)V` @kind direct;
  #L1c812a.  v6.`io.fabric.sdk.android.m.b.r.i` @type ^`io.fabric.sdk.android.m.b.r$b` := v1 @kind object;
  #L1c812e.  @monitorexit v6
  #L1c8130.  return @kind void;
  #L1c8132.  v0:= new `java.util.NoSuchElementException`;
  #L1c8136.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L1c813c.  throw v0;
  #L1c813e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c8140.  @monitorexit v6
  #L1c8142.  throw v0;
  catch `java.lang.Throwable` @[L1c80aa..L1c812e] goto L1c813e;
  catch `java.lang.Throwable` @[L1c8132..L1c813e] goto L1c813e;
}
procedure `java.lang.String` `toString`(`io.fabric.sdk.android.m.b.r` v5 @kind this) @signature `Lio/fabric/sdk/android/m/b/r;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1c7a68.  v0:= new `java.lang.StringBuilder`;
  #L1c7a6c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c7a72.  v1:= constclass @type ^`io.fabric.sdk.android.m.b.r` @kind object;
  #L1c7a76.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1c7a7c.  v1:= temp @kind object;
  #L1c7a7e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c7a84.  v1:= 91I;
  #L1c7a88.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c7a8e.  v1:= "fileLength=" @kind object;
  #L1c7a92.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c7a98.  v1:= v5.`io.fabric.sdk.android.m.b.r.g` @type ^`int`;
  #L1c7a9c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c7aa2.  v1:= ", size=" @kind object;
  #L1c7aa6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c7aac.  v1:= v5.`io.fabric.sdk.android.m.b.r.h` @type ^`int`;
  #L1c7ab0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c7ab6.  v1:= ", first=" @kind object;
  #L1c7aba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c7ac0.  v1:= v5.`io.fabric.sdk.android.m.b.r.i` @type ^`io.fabric.sdk.android.m.b.r$b` @kind object;
  #L1c7ac4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c7aca.  v1:= ", last=" @kind object;
  #L1c7ace.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c7ad4.  v1:= v5.`io.fabric.sdk.android.m.b.r.j` @type ^`io.fabric.sdk.android.m.b.r$b` @kind object;
  #L1c7ad8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c7ade.  v1:= ", element lengths=[" @kind object;
  #L1c7ae2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c7ae8.  v1:= new `io.fabric.sdk.android.m.b.r$a`;
  #L1c7aec.  call `<init>`(v1, v5, v0) @signature `Lio/fabric/sdk/android/m/b/r$a;.<init>:(Lio/fabric/sdk/android/m/b/r;Ljava/lang/StringBuilder;)V` @kind direct;
  #L1c7af2.  call `forEach`(v5, v1) @signature `Lio/fabric/sdk/android/m/b/r;.forEach:(Lio/fabric/sdk/android/m/b/r$d;)V` @kind virtual;
  #L1c7af8.  goto L1c7b0e;
  #L1c7afa.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L1c7afc.  v2:= `@@io.fabric.sdk.android.m.b.r.l` @type ^`java.util.logging.Logger` @kind object;
  #L1c7b00.  v3:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L1c7b04.  v4:= "read error" @kind object;
  #L1c7b08.  call `log`(v2, v3, v4, v1) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L1c7b0e.  v1:= "]]" @kind object;
  #L1c7b12.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c7b18.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c7b1e.  v0:= temp @kind object;
  #L1c7b20.  return v0 @kind object;
  catch `java.io.IOException` @[L1c7ae8..L1c7af8] goto L1c7afa;
}
procedure `int` `usedBytes`(`io.fabric.sdk.android.m.b.r` v4 @kind this) @signature `Lio/fabric/sdk/android/m/b/r;.usedBytes:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c7938.  v0:= v4.`io.fabric.sdk.android.m.b.r.h` @type ^`int`;
  #L1c793c.  v1:= 16I;
  #L1c7940.  if v0 != 0 then goto L1c7946;
  #L1c7944.  return v1;
  #L1c7946.  v0:= v4.`io.fabric.sdk.android.m.b.r.j` @type ^`io.fabric.sdk.android.m.b.r$b` @kind object;
  #L1c794a.  v2:= v0.`io.fabric.sdk.android.m.b.r$b.a` @type ^`int`;
  #L1c794e.  v3:= v4.`io.fabric.sdk.android.m.b.r.i` @type ^`io.fabric.sdk.android.m.b.r$b` @kind object;
  #L1c7952.  v3:= v3.`io.fabric.sdk.android.m.b.r$b.a` @type ^`int`;
  #L1c7956.  if v2 < v3 then goto L1c796a;
  #L1c795a.  v2:= v2 - v3 @kind int;
  #L1c795c.  v2:= v2 + 4;
  #L1c7960.  v0:= v0.`io.fabric.sdk.android.m.b.r$b.b` @type ^`int`;
  #L1c7964.  v2:= v2 + v0 @kind int;
  #L1c7966.  v2:= v2 + v1 @kind int;
  #L1c7968.  return v2;
  #L1c796a.  v2:= v2 + 4;
  #L1c796e.  v0:= v0.`io.fabric.sdk.android.m.b.r$b.b` @type ^`int`;
  #L1c7972.  v2:= v2 + v0 @kind int;
  #L1c7974.  v0:= v4.`io.fabric.sdk.android.m.b.r.g` @type ^`int`;
  #L1c7978.  v2:= v2 + v0 @kind int;
  #L1c797a.  v2:= v2 - v3 @kind int;
  #L1c797c.  return v2;
}
