record `okhttp3.internal.http2.c$b` @kind class @AccessFlag FINAL {
  `i.e` `okhttp3.internal.http2.c$b.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.http2.c$b.b` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.internal.http2.c$b.c` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.http2.c$b.d` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.http2.c$b.e` @AccessFlag ;
  `okhttp3.internal.http2.b`[] `okhttp3.internal.http2.c$b.f` @AccessFlag ;
  `int` `okhttp3.internal.http2.c$b.g` @AccessFlag ;
  `int` `okhttp3.internal.http2.c$b.h` @AccessFlag ;
  `int` `okhttp3.internal.http2.c$b.i` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.internal.http2.c$b` v1 @kind this, `int` v2 , `boolean` v3 , `i.e` v4 @kind object) @signature `Lokhttp3/internal/http2/c$b;.<init>:(IZLi/e;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L206028.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20602e.  v0:= 2147483647I;
  #L206034.  v1.`okhttp3.internal.http2.c$b.c` @type ^`int` := v0;
  #L206038.  v0:= 8I;
  #L20603c.  v0:= new `okhttp3.internal.http2.b`[v0];
  #L206040.  v1.`okhttp3.internal.http2.c$b.f` @type ^`okhttp3.internal.http2.b`[] := v0 @kind object;
  #L206044.  v0:= v1.`okhttp3.internal.http2.c$b.f` @type ^`okhttp3.internal.http2.b`[] @kind object;
  #L206048.  v0:= length @variable v0;
  #L20604a.  v0:= v0 + -1;
  #L20604e.  v1.`okhttp3.internal.http2.c$b.g` @type ^`int` := v0;
  #L206052.  v0:= 0I;
  #L206054.  v1.`okhttp3.internal.http2.c$b.h` @type ^`int` := v0;
  #L206058.  v1.`okhttp3.internal.http2.c$b.i` @type ^`int` := v0;
  #L20605c.  v1.`okhttp3.internal.http2.c$b.e` @type ^`int` := v2;
  #L206060.  v1.`okhttp3.internal.http2.c$b.b` @type ^`boolean` := v3 @kind boolean;
  #L206064.  v1.`okhttp3.internal.http2.c$b.a` @type ^`i.e` := v4 @kind object;
  #L206068.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.c$b` v2 @kind this, `i.e` v3 @kind object) @signature `Lokhttp3/internal/http2/c$b;.<init>:(Li/e;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L20607c.  v0:= 4096I;
  #L206080.  v1:= 1I;
  #L206082.  call `<init>`(v2, v0, v1, v3) @signature `Lokhttp3/internal/http2/c$b;.<init>:(IZLi/e;)V` @kind direct;
  #L206088.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.http2.c$b` v2 @kind this) @signature `Lokhttp3/internal/http2/c$b;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L20609c.  v0:= v2.`okhttp3.internal.http2.c$b.e` @type ^`int`;
  #L2060a0.  v1:= v2.`okhttp3.internal.http2.c$b.i` @type ^`int`;
  #L2060a4.  if v0 >= v1 then goto L2060bc;
  #L2060a8.  if v0 != 0 then goto L2060b4;
  #L2060ac.  call `b`(v2) @signature `Lokhttp3/internal/http2/c$b;.b:()V` @kind direct;
  #L2060b2.  goto L2060bc;
  #L2060b4.  v1:= v1 - v0 @kind int;
  #L2060b6.  call temp:= `b`(v2, v1) @signature `Lokhttp3/internal/http2/c$b;.b:(I)I` @kind direct;
  #L2060bc.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.http2.c$b` v6 @kind this, `okhttp3.internal.http2.b` v7 @kind object) @signature `Lokhttp3/internal/http2/c$b;.a:(Lokhttp3/internal/http2/b;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L206108.  v0:= v7.`okhttp3.internal.http2.b.c` @type ^`int`;
  #L20610c.  v1:= v6.`okhttp3.internal.http2.c$b.e` @type ^`int`;
  #L206110.  if v0 <= v1 then goto L20611c;
  #L206114.  call `b`(v6) @signature `Lokhttp3/internal/http2/c$b;.b:()V` @kind direct;
  #L20611a.  return @kind void;
  #L20611c.  v2:= v6.`okhttp3.internal.http2.c$b.i` @type ^`int`;
  #L206120.  v2:= v2 + v0 @kind int;
  #L206122.  v2:= v2 - v1 @kind int;
  #L206124.  call temp:= `b`(v6, v2) @signature `Lokhttp3/internal/http2/c$b;.b:(I)I` @kind direct;
  #L20612a.  v1:= v6.`okhttp3.internal.http2.c$b.h` @type ^`int`;
  #L20612e.  v1:= v1 + 1;
  #L206132.  v2:= v6.`okhttp3.internal.http2.c$b.f` @type ^`okhttp3.internal.http2.b`[] @kind object;
  #L206136.  v3:= length @variable v2;
  #L206138.  if v1 <= v3 then goto L206164;
  #L20613c.  v1:= length @variable v2;
  #L20613e.  v1:= v1 * 2;
  #L206142.  v1:= new `okhttp3.internal.http2.b`[v1];
  #L206146.  v3:= 0I;
  #L206148.  v4:= length @variable v2;
  #L20614a.  v5:= length @variable v2;
  #L20614c.  call `arraycopy`(v2, v3, v1, v4, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L206152.  v2:= v6.`okhttp3.internal.http2.c$b.f` @type ^`okhttp3.internal.http2.b`[] @kind object;
  #L206156.  v2:= length @variable v2;
  #L206158.  v2:= v2 + -1;
  #L20615c.  v6.`okhttp3.internal.http2.c$b.g` @type ^`int` := v2;
  #L206160.  v6.`okhttp3.internal.http2.c$b.f` @type ^`okhttp3.internal.http2.b`[] := v1 @kind object;
  #L206164.  v1:= v6.`okhttp3.internal.http2.c$b.g` @type ^`int`;
  #L206168.  v2:= v1 + -1;
  #L20616c.  v6.`okhttp3.internal.http2.c$b.g` @type ^`int` := v2;
  #L206170.  v2:= v6.`okhttp3.internal.http2.c$b.f` @type ^`okhttp3.internal.http2.b`[] @kind object;
  #L206174.  v2[v1]:= v7 @kind object;
  #L206178.  v7:= v6.`okhttp3.internal.http2.c$b.h` @type ^`int`;
  #L20617c.  v7:= v7 + 1;
  #L206180.  v6.`okhttp3.internal.http2.c$b.h` @type ^`int` := v7;
  #L206184.  v7:= v6.`okhttp3.internal.http2.c$b.i` @type ^`int`;
  #L206188.  v7:= v7 + v0 @kind int;
  #L20618a.  v6.`okhttp3.internal.http2.c$b.i` @type ^`int` := v7;
  #L20618e.  return @kind void;
}
procedure `int` `b`(`okhttp3.internal.http2.c$b` v4 @kind this, `int` v5 ) @signature `Lokhttp3/internal/http2/c$b;.b:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L205f84.  v0:= 0I;
  #L205f86.  if v5 <= 0 then goto L206016;
  #L205f8a.  v1:= v4.`okhttp3.internal.http2.c$b.f` @type ^`okhttp3.internal.http2.b`[] @kind object;
  #L205f8e.  v1:= length @variable v1;
  #L205f90.  v1:= v1 + -1;
  #L205f94.  v2:= v4.`okhttp3.internal.http2.c$b.g` @type ^`int`;
  #L205f98.  if v1 < v2 then goto L205fd6;
  #L205f9c.  if v5 <= 0 then goto L205fd6;
  #L205fa0.  v2:= v4.`okhttp3.internal.http2.c$b.f` @type ^`okhttp3.internal.http2.b`[] @kind object;
  #L205fa4.  v3:= v2[v1] @kind object;
  #L205fa8.  v3:= v3.`okhttp3.internal.http2.b.c` @type ^`int`;
  #L205fac.  v5:= v5 - v3 @kind int;
  #L205fae.  v3:= v4.`okhttp3.internal.http2.c$b.i` @type ^`int`;
  #L205fb2.  v2:= v2[v1] @kind object;
  #L205fb6.  v2:= v2.`okhttp3.internal.http2.b.c` @type ^`int`;
  #L205fba.  v3:= v3 - v2 @kind int;
  #L205fbc.  v4.`okhttp3.internal.http2.c$b.i` @type ^`int` := v3;
  #L205fc0.  v2:= v4.`okhttp3.internal.http2.c$b.h` @type ^`int`;
  #L205fc4.  v2:= v2 + -1;
  #L205fc8.  v4.`okhttp3.internal.http2.c$b.h` @type ^`int` := v2;
  #L205fcc.  v0:= v0 + 1;
  #L205fd0.  v1:= v1 + -1;
  #L205fd4.  goto L205f94;
  #L205fd6.  v5:= v4.`okhttp3.internal.http2.c$b.f` @type ^`okhttp3.internal.http2.b`[] @kind object;
  #L205fda.  v1:= v4.`okhttp3.internal.http2.c$b.g` @type ^`int`;
  #L205fde.  v2:= v1 + 1;
  #L205fe2.  v1:= v1 + 1;
  #L205fe6.  v1:= v1 + v0 @kind int;
  #L205fe8.  v3:= v4.`okhttp3.internal.http2.c$b.h` @type ^`int`;
  #L205fec.  call `arraycopy`(v5, v2, v5, v1, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L205ff2.  v5:= v4.`okhttp3.internal.http2.c$b.f` @type ^`okhttp3.internal.http2.b`[] @kind object;
  #L205ff6.  v1:= v4.`okhttp3.internal.http2.c$b.g` @type ^`int`;
  #L205ffa.  v2:= v1 + 1;
  #L205ffe.  v1:= v1 + 1;
  #L206002.  v1:= v1 + v0 @kind int;
  #L206004.  v3:= 0I;
  #L206006.  call `fill`(v5, v2, v1, v3) @signature `Ljava/util/Arrays;.fill:([Ljava/lang/Object;IILjava/lang/Object;)V` @kind static;
  #L20600c.  v5:= v4.`okhttp3.internal.http2.c$b.g` @type ^`int`;
  #L206010.  v5:= v5 + v0 @kind int;
  #L206012.  v4.`okhttp3.internal.http2.c$b.g` @type ^`int` := v5;
  #L206016.  return v0;
}
procedure `void` `b`(`okhttp3.internal.http2.c$b` v2 @kind this) @signature `Lokhttp3/internal/http2/c$b;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2060d0.  v0:= v2.`okhttp3.internal.http2.c$b.f` @type ^`okhttp3.internal.http2.b`[] @kind object;
  #L2060d4.  v1:= 0I;
  #L2060d6.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L2060dc.  v0:= v2.`okhttp3.internal.http2.c$b.f` @type ^`okhttp3.internal.http2.b`[] @kind object;
  #L2060e0.  v0:= length @variable v0;
  #L2060e2.  v0:= v0 + -1;
  #L2060e6.  v2.`okhttp3.internal.http2.c$b.g` @type ^`int` := v0;
  #L2060ea.  v0:= 0I;
  #L2060ec.  v2.`okhttp3.internal.http2.c$b.h` @type ^`int` := v0;
  #L2060f0.  v2.`okhttp3.internal.http2.c$b.i` @type ^`int` := v0;
  #L2060f4.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.http2.c$b` v1 @kind this, `int` v2 ) @signature `Lokhttp3/internal/http2/c$b;.a:(I)V` @AccessFlag  {
    temp;
    v0;

  #L2061a0.  v0:= 16384I;
  #L2061a4.  call temp:= `min`(v2, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L2061aa.  v2:= temp;
  #L2061ac.  v0:= v1.`okhttp3.internal.http2.c$b.e` @type ^`int`;
  #L2061b0.  if v0 != v2 then goto L2061b6;
  #L2061b4.  return @kind void;
  #L2061b6.  if v2 >= v0 then goto L2061ca;
  #L2061ba.  v0:= v1.`okhttp3.internal.http2.c$b.c` @type ^`int`;
  #L2061be.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L2061c4.  v0:= temp;
  #L2061c6.  v1.`okhttp3.internal.http2.c$b.c` @type ^`int` := v0;
  #L2061ca.  v0:= 1I;
  #L2061cc.  v1.`okhttp3.internal.http2.c$b.d` @type ^`boolean` := v0 @kind boolean;
  #L2061d0.  v1.`okhttp3.internal.http2.c$b.e` @type ^`int` := v2;
  #L2061d4.  call `a`(v1) @signature `Lokhttp3/internal/http2/c$b;.a:()V` @kind direct;
  #L2061da.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.http2.c$b` v1 @kind this, `int` v2 , `int` v3 , `int` v4 ) @signature `Lokhttp3/internal/http2/c$b;.a:(III)V` @AccessFlag  {
    temp;
    v0;

  #L20646c.  if v2 >= v3 then goto L20647e;
  #L206470.  v3:= v1.`okhttp3.internal.http2.c$b.a` @type ^`i.e` @kind object;
  #L206474.  v2:= v2 ^| v4 @kind int;
  #L206476.  call temp:= `writeByte`(v3, v2) @signature `Li/e;.writeByte:(I)Li/e;` @kind virtual;
  #L20647c.  return @kind void;
  #L20647e.  v0:= v1.`okhttp3.internal.http2.c$b.a` @type ^`i.e` @kind object;
  #L206482.  v4:= v4 ^| v3 @kind int;
  #L206484.  call temp:= `writeByte`(v0, v4) @signature `Li/e;.writeByte:(I)Li/e;` @kind virtual;
  #L20648a.  v2:= v2 - v3 @kind int;
  #L20648c.  v3:= 128I;
  #L206490.  if v2 < v3 then goto L2064aa;
  #L206494.  v4:= v2 ^& 127;
  #L206498.  v0:= v1.`okhttp3.internal.http2.c$b.a` @type ^`i.e` @kind object;
  #L20649c.  v3:= v3 ^| v4 @kind int;
  #L20649e.  call temp:= `writeByte`(v0, v3) @signature `Li/e;.writeByte:(I)Li/e;` @kind virtual;
  #L2064a4.  v2:= v2 ^>> 7;
  #L2064a8.  goto L20648c;
  #L2064aa.  v3:= v1.`okhttp3.internal.http2.c$b.a` @type ^`i.e` @kind object;
  #L2064ae.  call temp:= `writeByte`(v3, v2) @signature `Li/e;.writeByte:(I)Li/e;` @kind virtual;
  #L2064b4.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.http2.c$b` v3 @kind this, `i.h` v4 @kind object) @signature `Lokhttp3/internal/http2/c$b;.a:(Li/h;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L2061ec.  v0:= v3.`okhttp3.internal.http2.c$b.b` @type ^`boolean` @kind boolean;
  #L2061f0.  v1:= 127I;
  #L2061f4.  if v0 == 0 then goto L206252;
  #L2061f8.  call temp:= `get`() @signature `Lokhttp3/internal/http2/j;.get:()Lokhttp3/internal/http2/j;` @kind static;
  #L2061fe.  v0:= temp @kind object;
  #L206200.  call temp:= `a`(v0, v4) @signature `Lokhttp3/internal/http2/j;.a:(Li/h;)I` @kind virtual;
  #L206206.  v0:= temp;
  #L206208.  call temp:= `size`(v4) @signature `Li/h;.size:()I` @kind virtual;
  #L20620e.  v2:= temp;
  #L206210.  if v0 >= v2 then goto L206252;
  #L206214.  v0:= new `i.e`;
  #L206218.  call `<init>`(v0) @signature `Li/e;.<init>:()V` @kind direct;
  #L20621e.  call temp:= `get`() @signature `Lokhttp3/internal/http2/j;.get:()Lokhttp3/internal/http2/j;` @kind static;
  #L206224.  v2:= temp @kind object;
  #L206226.  call `a`(v2, v4, v0) @signature `Lokhttp3/internal/http2/j;.a:(Li/h;Li/f;)V` @kind virtual;
  #L20622c.  call temp:= `readByteString`(v0) @signature `Li/e;.readByteString:()Li/h;` @kind virtual;
  #L206232.  v4:= temp @kind object;
  #L206234.  call temp:= `size`(v4) @signature `Li/h;.size:()I` @kind virtual;
  #L20623a.  v0:= temp;
  #L20623c.  v2:= 128I;
  #L206240.  call `a`(v3, v0, v1, v2) @signature `Lokhttp3/internal/http2/c$b;.a:(III)V` @kind virtual;
  #L206246.  v0:= v3.`okhttp3.internal.http2.c$b.a` @type ^`i.e` @kind object;
  #L20624a.  call temp:= `write`(v0, v4) @signature `Li/e;.write:(Li/h;)Li/e;` @kind virtual;
  #L206250.  goto L20626c;
  #L206252.  call temp:= `size`(v4) @signature `Li/h;.size:()I` @kind virtual;
  #L206258.  v0:= temp;
  #L20625a.  v2:= 0I;
  #L20625c.  call `a`(v3, v0, v1, v2) @signature `Lokhttp3/internal/http2/c$b;.a:(III)V` @kind virtual;
  #L206262.  v0:= v3.`okhttp3.internal.http2.c$b.a` @type ^`i.e` @kind object;
  #L206266.  call temp:= `write`(v0, v4) @signature `Li/e;.write:(Li/h;)Li/e;` @kind virtual;
  #L20626c.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.http2.c$b` v13 @kind this, `java.util.List` v14 @kind object) @signature `Lokhttp3/internal/http2/c$b;.a:(Ljava/util/List;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L206280.  v0:= v13.`okhttp3.internal.http2.c$b.d` @type ^`boolean` @kind boolean;
  #L206284.  v1:= 0I;
  #L206286.  if v0 == 0 then goto L2062bc;
  #L20628a.  v0:= v13.`okhttp3.internal.http2.c$b.c` @type ^`int`;
  #L20628e.  v2:= v13.`okhttp3.internal.http2.c$b.e` @type ^`int`;
  #L206292.  v3:= 32I;
  #L206296.  v4:= 31I;
  #L20629a.  if v0 >= v2 then goto L2062a4;
  #L20629e.  call `a`(v13, v0, v4, v3) @signature `Lokhttp3/internal/http2/c$b;.a:(III)V` @kind virtual;
  #L2062a4.  v13.`okhttp3.internal.http2.c$b.d` @type ^`boolean` := v1 @kind boolean;
  #L2062a8.  v0:= 2147483647I;
  #L2062ae.  v13.`okhttp3.internal.http2.c$b.c` @type ^`int` := v0;
  #L2062b2.  v0:= v13.`okhttp3.internal.http2.c$b.e` @type ^`int`;
  #L2062b6.  call `a`(v13, v0, v4, v3) @signature `Lokhttp3/internal/http2/c$b;.a:(III)V` @kind virtual;
  #L2062bc.  call temp:= `size`(v14) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2062c2.  v0:= temp;
  #L2062c4.  v2:= 0I;
  #L2062c6.  if v2 >= v0 then goto L20645a;
  #L2062ca.  call temp:= `get`(v14, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2062d0.  v3:= temp @kind object;
  #L2062d2.  v3:= (`okhttp3.internal.http2.b`) v3 @kind object;
  #L2062d6.  v4:= v3.`okhttp3.internal.http2.b.a` @type ^`i.h` @kind object;
  #L2062da.  call temp:= `toAsciiLowercase`(v4) @signature `Li/h;.toAsciiLowercase:()Li/h;` @kind virtual;
  #L2062e0.  v4:= temp @kind object;
  #L2062e2.  v5:= v3.`okhttp3.internal.http2.b.b` @type ^`i.h` @kind object;
  #L2062e6.  v6:= `@@okhttp3.internal.http2.c.b` @type ^`java.util.Map` @kind object;
  #L2062ea.  call temp:= `get`(v6, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2062f0.  v6:= temp @kind object;
  #L2062f2.  v6:= (`java.lang.Integer`) v6 @kind object;
  #L2062f6.  v7:= -1I;
  #L2062f8.  v8:= 1I;
  #L2062fa.  if v6 == 0 then goto L20635e;
  #L2062fe.  call temp:= `intValue`(v6) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L206304.  v6:= temp;
  #L206306.  v6:= v6 + v8 @kind int;
  #L206308.  if v6 <= v8 then goto L206358;
  #L20630c.  v9:= 8I;
  #L206310.  if v6 >= v9 then goto L206358;
  #L206314.  v9:= `@@okhttp3.internal.http2.c.a` @type ^`okhttp3.internal.http2.b`[] @kind object;
  #L206318.  v10:= v6 + -1;
  #L20631c.  v9:= v9[v10] @kind object;
  #L206320.  v9:= v9.`okhttp3.internal.http2.b.b` @type ^`i.h` @kind object;
  #L206324.  call temp:= `equals`(v9, v5) @signature `Ljava/util/Objects;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L20632a.  v9:= temp;
  #L20632c.  if v9 == 0 then goto L206334;
  #L206330.  v9:= v6;
  #L206332.  goto L206362;
  #L206334.  v9:= `@@okhttp3.internal.http2.c.a` @type ^`okhttp3.internal.http2.b`[] @kind object;
  #L206338.  v9:= v9[v6] @kind object;
  #L20633c.  v9:= v9.`okhttp3.internal.http2.b.b` @type ^`i.h` @kind object;
  #L206340.  call temp:= `equals`(v9, v5) @signature `Ljava/util/Objects;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L206346.  v9:= temp;
  #L206348.  if v9 == 0 then goto L206358;
  #L20634c.  v9:= v6 + 1;
  #L206350.  v12:= v9;
  #L206352.  v9:= v6;
  #L206354.  v6:= v12;
  #L206356.  goto L206362;
  #L206358.  v9:= v6;
  #L20635a.  v6:= -1I;
  #L20635c.  goto L206362;
  #L20635e.  v6:= -1I;
  #L206360.  v9:= -1I;
  #L206362.  if v6 != v7 then goto L2063d0;
  #L206366.  v10:= v13.`okhttp3.internal.http2.c$b.g` @type ^`int`;
  #L20636a.  v10:= v10 + v8 @kind int;
  #L20636c.  v8:= v13.`okhttp3.internal.http2.c$b.f` @type ^`okhttp3.internal.http2.b`[] @kind object;
  #L206370.  v8:= length @variable v8;
  #L206372.  if v10 >= v8 then goto L2063d0;
  #L206376.  v11:= v13.`okhttp3.internal.http2.c$b.f` @type ^`okhttp3.internal.http2.b`[] @kind object;
  #L20637a.  v11:= v11[v10] @kind object;
  #L20637e.  v11:= v11.`okhttp3.internal.http2.b.a` @type ^`i.h` @kind object;
  #L206382.  call temp:= `equals`(v11, v4) @signature `Ljava/util/Objects;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L206388.  v11:= temp;
  #L20638a.  if v11 == 0 then goto L2063ca;
  #L20638e.  v11:= v13.`okhttp3.internal.http2.c$b.f` @type ^`okhttp3.internal.http2.b`[] @kind object;
  #L206392.  v11:= v11[v10] @kind object;
  #L206396.  v11:= v11.`okhttp3.internal.http2.b.b` @type ^`i.h` @kind object;
  #L20639a.  call temp:= `equals`(v11, v5) @signature `Ljava/util/Objects;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2063a0.  v11:= temp;
  #L2063a2.  if v11 == 0 then goto L2063b6;
  #L2063a6.  v6:= v13.`okhttp3.internal.http2.c$b.g` @type ^`int`;
  #L2063aa.  v10:= v10 - v6 @kind int;
  #L2063ac.  v6:= `@@okhttp3.internal.http2.c.a` @type ^`okhttp3.internal.http2.b`[] @kind object;
  #L2063b0.  v6:= length @variable v6;
  #L2063b2.  v6:= v6 + v10 @kind int;
  #L2063b4.  goto L2063d0;
  #L2063b6.  if v9 != v7 then goto L2063ca;
  #L2063ba.  v9:= v13.`okhttp3.internal.http2.c$b.g` @type ^`int`;
  #L2063be.  v9:= v10 - v9 @kind int;
  #L2063c2.  v11:= `@@okhttp3.internal.http2.c.a` @type ^`okhttp3.internal.http2.b`[] @kind object;
  #L2063c6.  v11:= length @variable v11;
  #L2063c8.  v9:= v9 + v11 @kind int;
  #L2063ca.  v10:= v10 + 1;
  #L2063ce.  goto L206372;
  #L2063d0.  if v6 == v7 then goto L2063e4;
  #L2063d4.  v3:= 127I;
  #L2063d8.  v4:= 128I;
  #L2063dc.  call `a`(v13, v6, v3, v4) @signature `Lokhttp3/internal/http2/c$b;.a:(III)V` @kind virtual;
  #L2063e2.  goto L206452;
  #L2063e4.  v6:= 64I;
  #L2063e8.  if v9 != v7 then goto L20640a;
  #L2063ec.  v7:= v13.`okhttp3.internal.http2.c$b.a` @type ^`i.e` @kind object;
  #L2063f0.  call temp:= `writeByte`(v7, v6) @signature `Li/e;.writeByte:(I)Li/e;` @kind virtual;
  #L2063f6.  call `a`(v13, v4) @signature `Lokhttp3/internal/http2/c$b;.a:(Li/h;)V` @kind virtual;
  #L2063fc.  call `a`(v13, v5) @signature `Lokhttp3/internal/http2/c$b;.a:(Li/h;)V` @kind virtual;
  #L206402.  call `a`(v13, v3) @signature `Lokhttp3/internal/http2/c$b;.a:(Lokhttp3/internal/http2/b;)V` @kind direct;
  #L206408.  goto L206452;
  #L20640a.  v7:= `@@okhttp3.internal.http2.b.d` @type ^`i.h` @kind object;
  #L20640e.  call temp:= `startsWith`(v4, v7) @signature `Li/h;.startsWith:(Li/h;)Z` @kind virtual;
  #L206414.  v7:= temp;
  #L206416.  if v7 == 0 then goto L20643c;
  #L20641a.  v7:= `@@okhttp3.internal.http2.b.i` @type ^`i.h` @kind object;
  #L20641e.  call temp:= `equals`(v7, v4) @signature `Li/h;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L206424.  v4:= temp;
  #L206426.  if v4 != 0 then goto L20643c;
  #L20642a.  v3:= 15I;
  #L20642e.  call `a`(v13, v9, v3, v1) @signature `Lokhttp3/internal/http2/c$b;.a:(III)V` @kind virtual;
  #L206434.  call `a`(v13, v5) @signature `Lokhttp3/internal/http2/c$b;.a:(Li/h;)V` @kind virtual;
  #L20643a.  goto L206452;
  #L20643c.  v4:= 63I;
  #L206440.  call `a`(v13, v9, v4, v6) @signature `Lokhttp3/internal/http2/c$b;.a:(III)V` @kind virtual;
  #L206446.  call `a`(v13, v5) @signature `Lokhttp3/internal/http2/c$b;.a:(Li/h;)V` @kind virtual;
  #L20644c.  call `a`(v13, v3) @signature `Lokhttp3/internal/http2/c$b;.a:(Lokhttp3/internal/http2/b;)V` @kind direct;
  #L206452.  v2:= v2 + 1;
  #L206456.  goto L2062c6;
  #L20645a.  return @kind void;
}
