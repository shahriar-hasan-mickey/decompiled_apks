record `okhttp3.internal.http2.f` @kind class @AccessFlag PUBLIC_FINAL extends `h.n0.h.c` @kind interface {
  `h.a0$a` `okhttp3.internal.http2.f.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.f` `okhttp3.internal.http2.f.b` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.http2.e` `okhttp3.internal.http2.f.c` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.http2.h` `okhttp3.internal.http2.f.d` @AccessFlag PRIVATE_VOLATILE;
  `h.e0` `okhttp3.internal.http2.f.e` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.http2.f.f` @AccessFlag PRIVATE_VOLATILE;
}
global `java.util.List` `@@okhttp3.internal.http2.f.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.List` `@@okhttp3.internal.http2.f.h` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L208a28.  v0:= "connection" @kind object;
  #L208a2c.  v1:= "host" @kind object;
  #L208a30.  v2:= "keep-alive" @kind object;
  #L208a34.  v3:= "proxy-connection" @kind object;
  #L208a38.  v4:= "te" @kind object;
  #L208a3c.  v5:= "transfer-encoding" @kind object;
  #L208a40.  v6:= "encoding" @kind object;
  #L208a44.  v7:= "upgrade" @kind object;
  #L208a48.  v8:= ":method" @kind object;
  #L208a4c.  v9:= ":path" @kind object;
  #L208a50.  v10:= ":scheme" @kind object;
  #L208a54.  v11:= ":authority" @kind object;
  #L208a58.  temp:= new `java.lang.String`[v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11];
  #L208a5e.  v0:= temp @kind object;
  #L208a60.  call temp:= `immutableList`(v0) @signature `Lh/n0/e;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L208a66.  v0:= temp @kind object;
  #L208a68.  `@@okhttp3.internal.http2.f.g` @type ^`java.util.List` := v0 @kind object;
  #L208a6c.  v1:= "connection" @kind object;
  #L208a70.  v2:= "host" @kind object;
  #L208a74.  v3:= "keep-alive" @kind object;
  #L208a78.  v4:= "proxy-connection" @kind object;
  #L208a7c.  v5:= "te" @kind object;
  #L208a80.  v6:= "transfer-encoding" @kind object;
  #L208a84.  v7:= "encoding" @kind object;
  #L208a88.  v8:= "upgrade" @kind object;
  #L208a8c.  temp:= new `java.lang.String`[v1, v2, v3, v4, v5, v6, v7, v8];
  #L208a92.  v0:= temp @kind object;
  #L208a94.  call temp:= `immutableList`(v0) @signature `Lh/n0/e;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L208a9a.  v0:= temp @kind object;
  #L208a9c.  `@@okhttp3.internal.http2.f.h` @type ^`java.util.List` := v0 @kind object;
  #L208aa0.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.f` v0 @kind this, `h.d0` v1 @kind object, `okhttp3.internal.connection.f` v2 @kind object, `h.a0$a` v3 @kind object, `okhttp3.internal.http2.e` v4 @kind object) @signature `Lokhttp3/internal/http2/f;.<init>:(Lh/d0;Lokhttp3/internal/connection/f;Lh/a0$a;Lokhttp3/internal/http2/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L208ab4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L208aba.  v0.`okhttp3.internal.http2.f.b` @type ^`okhttp3.internal.connection.f` := v2 @kind object;
  #L208abe.  v0.`okhttp3.internal.http2.f.a` @type ^`h.a0$a` := v3 @kind object;
  #L208ac2.  v0.`okhttp3.internal.http2.f.c` @type ^`okhttp3.internal.http2.e` := v4 @kind object;
  #L208ac6.  call temp:= `protocols`(v1) @signature `Lh/d0;.protocols:()Ljava/util/List;` @kind virtual;
  #L208acc.  v1:= temp @kind object;
  #L208ace.  v2:= `@@h.e0.k` @type ^`h.e0` @kind object;
  #L208ad2.  call temp:= `contains`(v1, v2) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L208ad8.  v1:= temp;
  #L208ada.  if v1 == 0 then goto L208ae4;
  #L208ade.  v1:= `@@h.e0.k` @type ^`h.e0` @kind object;
  #L208ae2.  goto L208ae8;
  #L208ae4.  v1:= `@@h.e0.j` @type ^`h.e0` @kind object;
  #L208ae8.  v0.`okhttp3.internal.http2.f.e` @type ^`h.e0` := v1 @kind object;
  #L208aec.  return @kind void;
}
procedure `java.util.List` `http2HeadersList`(`h.g0` v6 @kind object) @signature `Lokhttp3/internal/http2/f;.http2HeadersList:(Lh/g0;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L20875c.  call temp:= `headers`(v6) @signature `Lh/g0;.headers:()Lh/y;` @kind virtual;
  #L208762.  v0:= temp @kind object;
  #L208764.  v1:= new `java.util.ArrayList`;
  #L208768.  call temp:= `size`(v0) @signature `Lh/y;.size:()I` @kind virtual;
  #L20876e.  v2:= temp;
  #L208770.  v2:= v2 + 4;
  #L208774.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L20877a.  v2:= new `okhttp3.internal.http2.b`;
  #L20877e.  v3:= `@@okhttp3.internal.http2.b.f` @type ^`i.h` @kind object;
  #L208782.  call temp:= `method`(v6) @signature `Lh/g0;.method:()Ljava/lang/String;` @kind virtual;
  #L208788.  v4:= temp @kind object;
  #L20878a.  call `<init>`(v2, v3, v4) @signature `Lokhttp3/internal/http2/b;.<init>:(Li/h;Ljava/lang/String;)V` @kind direct;
  #L208790.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L208796.  v2:= new `okhttp3.internal.http2.b`;
  #L20879a.  v3:= `@@okhttp3.internal.http2.b.g` @type ^`i.h` @kind object;
  #L20879e.  call temp:= `url`(v6) @signature `Lh/g0;.url:()Lh/z;` @kind virtual;
  #L2087a4.  v4:= temp @kind object;
  #L2087a6.  call temp:= `requestPath`(v4) @signature `Lh/n0/h/i;.requestPath:(Lh/z;)Ljava/lang/String;` @kind static;
  #L2087ac.  v4:= temp @kind object;
  #L2087ae.  call `<init>`(v2, v3, v4) @signature `Lokhttp3/internal/http2/b;.<init>:(Li/h;Ljava/lang/String;)V` @kind direct;
  #L2087b4.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2087ba.  v2:= "Host" @kind object;
  #L2087be.  call temp:= `header`(v6, v2) @signature `Lh/g0;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2087c4.  v2:= temp @kind object;
  #L2087c6.  if v2 == 0 then goto L2087de;
  #L2087ca.  v3:= new `okhttp3.internal.http2.b`;
  #L2087ce.  v4:= `@@okhttp3.internal.http2.b.i` @type ^`i.h` @kind object;
  #L2087d2.  call `<init>`(v3, v4, v2) @signature `Lokhttp3/internal/http2/b;.<init>:(Li/h;Ljava/lang/String;)V` @kind direct;
  #L2087d8.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2087de.  v2:= new `okhttp3.internal.http2.b`;
  #L2087e2.  v3:= `@@okhttp3.internal.http2.b.h` @type ^`i.h` @kind object;
  #L2087e6.  call temp:= `url`(v6) @signature `Lh/g0;.url:()Lh/z;` @kind virtual;
  #L2087ec.  v6:= temp @kind object;
  #L2087ee.  call temp:= `scheme`(v6) @signature `Lh/z;.scheme:()Ljava/lang/String;` @kind virtual;
  #L2087f4.  v6:= temp @kind object;
  #L2087f6.  call `<init>`(v2, v3, v6) @signature `Lokhttp3/internal/http2/b;.<init>:(Li/h;Ljava/lang/String;)V` @kind direct;
  #L2087fc.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L208802.  v6:= 0I;
  #L208804.  call temp:= `size`(v0) @signature `Lh/y;.size:()I` @kind virtual;
  #L20880a.  v2:= temp;
  #L20880c.  if v6 >= v2 then goto L20887a;
  #L208810.  call temp:= `name`(v0, v6) @signature `Lh/y;.name:(I)Ljava/lang/String;` @kind virtual;
  #L208816.  v3:= temp @kind object;
  #L208818.  v4:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L20881c.  call temp:= `toLowerCase`(v3, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L208822.  v3:= temp @kind object;
  #L208824.  v4:= `@@okhttp3.internal.http2.f.g` @type ^`java.util.List` @kind object;
  #L208828.  call temp:= `contains`(v4, v3) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L20882e.  v4:= temp;
  #L208830.  if v4 == 0 then goto L20885c;
  #L208834.  v4:= "te" @kind object;
  #L208838.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L20883e.  v4:= temp;
  #L208840.  if v4 == 0 then goto L208874;
  #L208844.  call temp:= `value`(v0, v6) @signature `Lh/y;.value:(I)Ljava/lang/String;` @kind virtual;
  #L20884a.  v4:= temp @kind object;
  #L20884c.  v5:= "trailers" @kind object;
  #L208850.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L208856.  v4:= temp;
  #L208858.  if v4 == 0 then goto L208874;
  #L20885c.  v4:= new `okhttp3.internal.http2.b`;
  #L208860.  call temp:= `value`(v0, v6) @signature `Lh/y;.value:(I)Ljava/lang/String;` @kind virtual;
  #L208866.  v5:= temp @kind object;
  #L208868.  call `<init>`(v4, v3, v5) @signature `Lokhttp3/internal/http2/b;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L20886e.  call temp:= `add`(v1, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L208874.  v6:= v6 + 1;
  #L208878.  goto L20880c;
  #L20887a.  return v1 @kind object;
}
procedure `h.i0$a` `readHttp2HeadersList`(`h.y` v7 @kind object, `h.e0` v8 @kind object) @signature `Lokhttp3/internal/http2/f;.readHttp2HeadersList:(Lh/y;Lh/e0;)Lh/i0$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2088a8.  v0:= new `h.y$a`;
  #L2088ac.  call `<init>`(v0) @signature `Lh/y$a;.<init>:()V` @kind direct;
  #L2088b2.  call temp:= `size`(v7) @signature `Lh/y;.size:()I` @kind virtual;
  #L2088b8.  v1:= temp;
  #L2088ba.  v2:= 0I;
  #L2088bc.  v3:= 0I;
  #L2088be.  if v3 >= v1 then goto L20892e;
  #L2088c2.  call temp:= `name`(v7, v3) @signature `Lh/y;.name:(I)Ljava/lang/String;` @kind virtual;
  #L2088c8.  v4:= temp @kind object;
  #L2088ca.  call temp:= `value`(v7, v3) @signature `Lh/y;.value:(I)Ljava/lang/String;` @kind virtual;
  #L2088d0.  v5:= temp @kind object;
  #L2088d2.  v6:= ":status" @kind object;
  #L2088d6.  call temp:= `equals`(v4, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2088dc.  v6:= temp;
  #L2088de.  if v6 == 0 then goto L20890e;
  #L2088e2.  v2:= new `java.lang.StringBuilder`;
  #L2088e6.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2088ec.  v4:= "HTTP/1.1 " @kind object;
  #L2088f0.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2088f6.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2088fc.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L208902.  v2:= temp @kind object;
  #L208904.  call temp:= `parse`(v2) @signature `Lh/n0/h/k;.parse:(Ljava/lang/String;)Lh/n0/h/k;` @kind static;
  #L20890a.  v2:= temp @kind object;
  #L20890c.  goto L208928;
  #L20890e.  v6:= `@@okhttp3.internal.http2.f.h` @type ^`java.util.List` @kind object;
  #L208912.  call temp:= `contains`(v6, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L208918.  v6:= temp;
  #L20891a.  if v6 != 0 then goto L208928;
  #L20891e.  v6:= `@@h.n0.c.a` @type ^`h.n0.c` @kind object;
  #L208922.  call `addLenient`(v6, v0, v4, v5) @signature `Lh/n0/c;.addLenient:(Lh/y$a;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L208928.  v3:= v3 + 1;
  #L20892c.  goto L2088be;
  #L20892e.  if v2 == 0 then goto L208966;
  #L208932.  v7:= new `h.i0$a`;
  #L208936.  call `<init>`(v7) @signature `Lh/i0$a;.<init>:()V` @kind direct;
  #L20893c.  call temp:= `protocol`(v7, v8) @signature `Lh/i0$a;.protocol:(Lh/e0;)Lh/i0$a;` @kind virtual;
  #L208942.  v8:= v2.`h.n0.h.k.b` @type ^`int`;
  #L208946.  call temp:= `code`(v7, v8) @signature `Lh/i0$a;.code:(I)Lh/i0$a;` @kind virtual;
  #L20894c.  v8:= v2.`h.n0.h.k.c` @type ^`java.lang.String` @kind object;
  #L208950.  call temp:= `message`(v7, v8) @signature `Lh/i0$a;.message:(Ljava/lang/String;)Lh/i0$a;` @kind virtual;
  #L208956.  call temp:= `build`(v0) @signature `Lh/y$a;.build:()Lh/y;` @kind virtual;
  #L20895c.  v8:= temp @kind object;
  #L20895e.  call temp:= `headers`(v7, v8) @signature `Lh/i0$a;.headers:(Lh/y;)Lh/i0$a;` @kind virtual;
  #L208964.  return v7 @kind object;
  #L208966.  v7:= new `java.net.ProtocolException`;
  #L20896a.  v8:= "Expected ':status' header not present" @kind object;
  #L20896e.  call `<init>`(v7, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L208974.  throw v7;
}
procedure `void` `cancel`(`okhttp3.internal.http2.f` v2 @kind this) @signature `Lokhttp3/internal/http2/f;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L208b00.  v0:= 1I;
  #L208b02.  v2.`okhttp3.internal.http2.f.f` @type ^`boolean` := v0 @kind boolean;
  #L208b06.  v0:= v2.`okhttp3.internal.http2.f.d` @type ^`okhttp3.internal.http2.h` @kind object;
  #L208b0a.  if v0 == 0 then goto L208b1c;
  #L208b0e.  v0:= v2.`okhttp3.internal.http2.f.d` @type ^`okhttp3.internal.http2.h` @kind object;
  #L208b12.  v1:= `@@okhttp3.internal.http2.a.l` @type ^`okhttp3.internal.http2.a` @kind object;
  #L208b16.  call `closeLater`(v0, v1) @signature `Lokhttp3/internal/http2/h;.closeLater:(Lokhttp3/internal/http2/a;)V` @kind virtual;
  #L208b1c.  return @kind void;
}
procedure `okhttp3.internal.connection.f` `connection`(`okhttp3.internal.http2.f` v1 @kind this) @signature `Lokhttp3/internal/http2/f;.connection:()Lokhttp3/internal/connection/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2089d0.  v0:= v1.`okhttp3.internal.http2.f.b` @type ^`okhttp3.internal.connection.f` @kind object;
  #L2089d4.  return v0 @kind object;
}
procedure `i.x` `createRequestBody`(`okhttp3.internal.http2.f` v0 @kind this, `h.g0` v1 @kind object, `long` v2 ) @signature `Lokhttp3/internal/http2/f;.createRequestBody:(Lh/g0;J)Li/x;` @AccessFlag PUBLIC {
    temp;

  #L2089e8.  v1:= v0.`okhttp3.internal.http2.f.d` @type ^`okhttp3.internal.http2.h` @kind object;
  #L2089ec.  call temp:= `getSink`(v1) @signature `Lokhttp3/internal/http2/h;.getSink:()Li/x;` @kind virtual;
  #L2089f2.  v1:= temp @kind object;
  #L2089f4.  return v1 @kind object;
}
procedure `void` `finishRequest`(`okhttp3.internal.http2.f` v1 @kind this) @signature `Lokhttp3/internal/http2/f;.finishRequest:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L208b30.  v0:= v1.`okhttp3.internal.http2.f.d` @type ^`okhttp3.internal.http2.h` @kind object;
  #L208b34.  call temp:= `getSink`(v0) @signature `Lokhttp3/internal/http2/h;.getSink:()Li/x;` @kind virtual;
  #L208b3a.  v0:= temp @kind object;
  #L208b3c.  call `close`(v0) @signature `Li/x;.close:()V` @kind interface;
  #L208b42.  return @kind void;
}
procedure `void` `flushRequest`(`okhttp3.internal.http2.f` v1 @kind this) @signature `Lokhttp3/internal/http2/f;.flushRequest:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L208b54.  v0:= v1.`okhttp3.internal.http2.f.c` @type ^`okhttp3.internal.http2.e` @kind object;
  #L208b58.  call `flush`(v0) @signature `Lokhttp3/internal/http2/e;.flush:()V` @kind virtual;
  #L208b5e.  return @kind void;
}
procedure `i.z` `openResponseBodySource`(`okhttp3.internal.http2.f` v0 @kind this, `h.i0` v1 @kind object) @signature `Lokhttp3/internal/http2/f;.openResponseBodySource:(Lh/i0;)Li/z;` @AccessFlag PUBLIC {
    temp;

  #L208a08.  v1:= v0.`okhttp3.internal.http2.f.d` @type ^`okhttp3.internal.http2.h` @kind object;
  #L208a0c.  call temp:= `getSource`(v1) @signature `Lokhttp3/internal/http2/h;.getSource:()Li/z;` @kind virtual;
  #L208a12.  v1:= temp @kind object;
  #L208a14.  return v1 @kind object;
}
procedure `h.i0$a` `readResponseHeaders`(`okhttp3.internal.http2.f` v2 @kind this, `boolean` v3 ) @signature `Lokhttp3/internal/http2/f;.readResponseHeaders:(Z)Lh/i0$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L208988.  v0:= v2.`okhttp3.internal.http2.f.d` @type ^`okhttp3.internal.http2.h` @kind object;
  #L20898c.  call temp:= `takeHeaders`(v0) @signature `Lokhttp3/internal/http2/h;.takeHeaders:()Lh/y;` @kind virtual;
  #L208992.  v0:= temp @kind object;
  #L208994.  v1:= v2.`okhttp3.internal.http2.f.e` @type ^`h.e0` @kind object;
  #L208998.  call temp:= `readHttp2HeadersList`(v0, v1) @signature `Lokhttp3/internal/http2/f;.readHttp2HeadersList:(Lh/y;Lh/e0;)Lh/i0$a;` @kind static;
  #L20899e.  v0:= temp @kind object;
  #L2089a0.  if v3 == 0 then goto L2089bc;
  #L2089a4.  v3:= `@@h.n0.c.a` @type ^`h.n0.c` @kind object;
  #L2089a8.  call temp:= `code`(v3, v0) @signature `Lh/n0/c;.code:(Lh/i0$a;)I` @kind virtual;
  #L2089ae.  v3:= temp;
  #L2089b0.  v1:= 100I;
  #L2089b4.  if v3 != v1 then goto L2089bc;
  #L2089b8.  v3:= 0I;
  #L2089ba.  return v3 @kind object;
  #L2089bc.  return v0 @kind object;
}
procedure `long` `reportedContentLength`(`okhttp3.internal.http2.f` v2 @kind this, `h.i0` v3 @kind object) @signature `Lokhttp3/internal/http2/f;.reportedContentLength:(Lh/i0;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20888c.  call temp:= `contentLength`(v3) @signature `Lh/n0/h/e;.contentLength:(Lh/i0;)J` @kind static;
  #L208892.  v0:= temp @kind wide;
  #L208894.  return v0 @kind wide;
}
procedure `void` `writeRequestHeaders`(`okhttp3.internal.http2.f` v3 @kind this, `h.g0` v4 @kind object) @signature `Lokhttp3/internal/http2/f;.writeRequestHeaders:(Lh/g0;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L208b70.  v0:= v3.`okhttp3.internal.http2.f.d` @type ^`okhttp3.internal.http2.h` @kind object;
  #L208b74.  if v0 == 0 then goto L208b7a;
  #L208b78.  return @kind void;
  #L208b7a.  call temp:= `body`(v4) @signature `Lh/g0;.body:()Lh/h0;` @kind virtual;
  #L208b80.  v0:= temp @kind object;
  #L208b82.  if v0 == 0 then goto L208b8a;
  #L208b86.  v0:= 1I;
  #L208b88.  goto L208b8c;
  #L208b8a.  v0:= 0I;
  #L208b8c.  call temp:= `http2HeadersList`(v4) @signature `Lokhttp3/internal/http2/f;.http2HeadersList:(Lh/g0;)Ljava/util/List;` @kind static;
  #L208b92.  v4:= temp @kind object;
  #L208b94.  v1:= v3.`okhttp3.internal.http2.f.c` @type ^`okhttp3.internal.http2.e` @kind object;
  #L208b98.  call temp:= `newStream`(v1, v4, v0) @signature `Lokhttp3/internal/http2/e;.newStream:(Ljava/util/List;Z)Lokhttp3/internal/http2/h;` @kind virtual;
  #L208b9e.  v4:= temp @kind object;
  #L208ba0.  v3.`okhttp3.internal.http2.f.d` @type ^`okhttp3.internal.http2.h` := v4 @kind object;
  #L208ba4.  v4:= v3.`okhttp3.internal.http2.f.f` @type ^`boolean` @kind boolean;
  #L208ba8.  if v4 != 0 then goto L208bf6;
  #L208bac.  v4:= v3.`okhttp3.internal.http2.f.d` @type ^`okhttp3.internal.http2.h` @kind object;
  #L208bb0.  call temp:= `readTimeout`(v4) @signature `Lokhttp3/internal/http2/h;.readTimeout:()Li/a0;` @kind virtual;
  #L208bb6.  v4:= temp @kind object;
  #L208bb8.  v0:= v3.`okhttp3.internal.http2.f.a` @type ^`h.a0$a` @kind object;
  #L208bbc.  call temp:= `readTimeoutMillis`(v0) @signature `Lh/a0$a;.readTimeoutMillis:()I` @kind interface;
  #L208bc2.  v0:= temp;
  #L208bc4.  v0:= (`long`) v0 @kind i2l;
  #L208bc6.  v2:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L208bca.  call temp:= `timeout`(v4, v0, v2) @signature `Li/a0;.timeout:(JLjava/util/concurrent/TimeUnit;)Li/a0;` @kind virtual;
  #L208bd0.  v4:= v3.`okhttp3.internal.http2.f.d` @type ^`okhttp3.internal.http2.h` @kind object;
  #L208bd4.  call temp:= `writeTimeout`(v4) @signature `Lokhttp3/internal/http2/h;.writeTimeout:()Li/a0;` @kind virtual;
  #L208bda.  v4:= temp @kind object;
  #L208bdc.  v0:= v3.`okhttp3.internal.http2.f.a` @type ^`h.a0$a` @kind object;
  #L208be0.  call temp:= `writeTimeoutMillis`(v0) @signature `Lh/a0$a;.writeTimeoutMillis:()I` @kind interface;
  #L208be6.  v0:= temp;
  #L208be8.  v0:= (`long`) v0 @kind i2l;
  #L208bea.  v2:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L208bee.  call temp:= `timeout`(v4, v0, v2) @signature `Li/a0;.timeout:(JLjava/util/concurrent/TimeUnit;)Li/a0;` @kind virtual;
  #L208bf4.  return @kind void;
  #L208bf6.  v4:= v3.`okhttp3.internal.http2.f.d` @type ^`okhttp3.internal.http2.h` @kind object;
  #L208bfa.  v0:= `@@okhttp3.internal.http2.a.l` @type ^`okhttp3.internal.http2.a` @kind object;
  #L208bfe.  call `closeLater`(v4, v0) @signature `Lokhttp3/internal/http2/h;.closeLater:(Lokhttp3/internal/http2/a;)V` @kind virtual;
  #L208c04.  v4:= new `java.io.IOException`;
  #L208c08.  v0:= "Canceled" @kind object;
  #L208c0c.  call `<init>`(v4, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L208c12.  throw v4;
}
