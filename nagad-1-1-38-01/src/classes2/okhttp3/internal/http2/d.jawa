record `okhttp3.internal.http2.d` @kind class @AccessFlag PUBLIC_FINAL {
}
global `i.h` `@@okhttp3.internal.http2.d.a` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.http2.d.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.http2.d.c` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.http2.d.d` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L20b028.  v0:= "PRI * HTTP/2.0\r\n\r\nSM\r\n\r\n" @kind object;
  #L20b02c.  call temp:= `encodeUtf8`(v0) @signature `Li/h;.encodeUtf8:(Ljava/lang/String;)Li/h;` @kind static;
  #L20b032.  v0:= temp @kind object;
  #L20b034.  `@@okhttp3.internal.http2.d.a` @type ^`i.h` := v0 @kind object;
  #L20b038.  v1:= "DATA" @kind object;
  #L20b03c.  v2:= "HEADERS" @kind object;
  #L20b040.  v3:= "PRIORITY" @kind object;
  #L20b044.  v4:= "RST_STREAM" @kind object;
  #L20b048.  v5:= "SETTINGS" @kind object;
  #L20b04c.  v6:= "PUSH_PROMISE" @kind object;
  #L20b050.  v7:= "PING" @kind object;
  #L20b054.  v8:= "GOAWAY" @kind object;
  #L20b058.  v9:= "WINDOW_UPDATE" @kind object;
  #L20b05c.  v10:= "CONTINUATION" @kind object;
  #L20b060.  temp:= new `java.lang.String`[v1, v2, v3, v4, v5, v6, v7, v8, v9, v10];
  #L20b066.  v0:= temp @kind object;
  #L20b068.  `@@okhttp3.internal.http2.d.b` @type ^`java.lang.String`[] := v0 @kind object;
  #L20b06c.  v0:= 64I;
  #L20b070.  v0:= new `java.lang.String`[v0];
  #L20b074.  `@@okhttp3.internal.http2.d.c` @type ^`java.lang.String`[] := v0 @kind object;
  #L20b078.  v0:= 256I;
  #L20b07c.  v0:= new `java.lang.String`[v0];
  #L20b080.  `@@okhttp3.internal.http2.d.d` @type ^`java.lang.String`[] := v0 @kind object;
  #L20b084.  v0:= 0I;
  #L20b086.  v1:= 0I;
  #L20b088.  v2:= `@@okhttp3.internal.http2.d.d` @type ^`java.lang.String`[] @kind object;
  #L20b08c.  v3:= length @variable v2;
  #L20b08e.  v4:= 32I;
  #L20b092.  v5:= 1I;
  #L20b094.  if v1 >= v3 then goto L20b0ca;
  #L20b098.  v3:= new `java.lang.Object`[v5];
  #L20b09c.  call temp:= `toBinaryString`(v1) @signature `Ljava/lang/Integer;.toBinaryString:(I)Ljava/lang/String;` @kind static;
  #L20b0a2.  v5:= temp @kind object;
  #L20b0a4.  v3[v0]:= v5 @kind object;
  #L20b0a8.  v5:= "%8s" @kind object;
  #L20b0ac.  call temp:= `format`(v5, v3) @signature `Lh/n0/e;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L20b0b2.  v3:= temp @kind object;
  #L20b0b4.  v5:= 48I;
  #L20b0b8.  call temp:= `replace`(v3, v4, v5) @signature `Ljava/lang/String;.replace:(CC)Ljava/lang/String;` @kind virtual;
  #L20b0be.  v3:= temp @kind object;
  #L20b0c0.  v2[v1]:= v3 @kind object;
  #L20b0c4.  v1:= v1 + 1;
  #L20b0c8.  goto L20b088;
  #L20b0ca.  v1:= `@@okhttp3.internal.http2.d.c` @type ^`java.lang.String`[] @kind object;
  #L20b0ce.  v2:= "" @kind object;
  #L20b0d2.  v1[v0]:= v2 @kind object;
  #L20b0d6.  v2:= "END_STREAM" @kind object;
  #L20b0da.  v1[v5]:= v2 @kind object;
  #L20b0de.  v2:= new `int`[v5];
  #L20b0e2.  v2[v0]:= v5;
  #L20b0e6.  v3:= 8I;
  #L20b0ea.  v5:= "PADDED" @kind object;
  #L20b0ee.  v1[v3]:= v5 @kind object;
  #L20b0f2.  v1:= length @variable v2;
  #L20b0f4.  v5:= 0I;
  #L20b0f6.  v6:= "|PADDED" @kind object;
  #L20b0fa.  if v5 >= v1 then goto L20b13a;
  #L20b0fe.  v7:= v2[v5];
  #L20b102.  v8:= `@@okhttp3.internal.http2.d.c` @type ^`java.lang.String`[] @kind object;
  #L20b106.  v9:= v7 ^| 8;
  #L20b10a.  v10:= new `java.lang.StringBuilder`;
  #L20b10e.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20b114.  v11:= `@@okhttp3.internal.http2.d.c` @type ^`java.lang.String`[] @kind object;
  #L20b118.  v7:= v11[v7] @kind object;
  #L20b11c.  call temp:= `append`(v10, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20b122.  call temp:= `append`(v10, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20b128.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20b12e.  v6:= temp @kind object;
  #L20b130.  v8[v9]:= v6 @kind object;
  #L20b134.  v5:= v5 + 1;
  #L20b138.  goto L20b0f6;
  #L20b13a.  v1:= `@@okhttp3.internal.http2.d.c` @type ^`java.lang.String`[] @kind object;
  #L20b13e.  v5:= 4I;
  #L20b140.  v7:= "END_HEADERS" @kind object;
  #L20b144.  v1[v5]:= v7 @kind object;
  #L20b148.  v5:= "PRIORITY" @kind object;
  #L20b14c.  v1[v4]:= v5 @kind object;
  #L20b150.  v4:= 36I;
  #L20b154.  v5:= "END_HEADERS|PRIORITY" @kind object;
  #L20b158.  v1[v4]:= v5 @kind object;
  #L20b15c.  v1:= 3I;
  #L20b15e.  v1:= new `int`[v1];
  #L20b162.  goto L20b23c;
  #L20b168.  v4:= length @variable v1;
  #L20b16a.  v5:= 0I;
  #L20b16c.  if v5 >= v4 then goto L20b214;
  #L20b170.  v7:= v1[v5];
  #L20b174.  v8:= length @variable v2;
  #L20b176.  v9:= 0I;
  #L20b178.  if v9 >= v8 then goto L20b20e;
  #L20b17c.  v10:= v2[v9];
  #L20b180.  v11:= `@@okhttp3.internal.http2.d.c` @type ^`java.lang.String`[] @kind object;
  #L20b184.  v12:= v10 ^| v7 @kind int;
  #L20b188.  v13:= new `java.lang.StringBuilder`;
  #L20b18c.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20b192.  v14:= `@@okhttp3.internal.http2.d.c` @type ^`java.lang.String`[] @kind object;
  #L20b196.  v14:= v14[v10] @kind object;
  #L20b19a.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20b1a0.  v14:= 124I;
  #L20b1a4.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L20b1aa.  v15:= `@@okhttp3.internal.http2.d.c` @type ^`java.lang.String`[] @kind object;
  #L20b1ae.  v15:= v15[v7] @kind object;
  #L20b1b2.  call temp:= `append`(v13, v15) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20b1b8.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20b1be.  v13:= temp @kind object;
  #L20b1c0.  v11[v12]:= v13 @kind object;
  #L20b1c4.  v11:= `@@okhttp3.internal.http2.d.c` @type ^`java.lang.String`[] @kind object;
  #L20b1c8.  v12:= v12 ^| v3 @kind int;
  #L20b1ca.  v13:= new `java.lang.StringBuilder`;
  #L20b1ce.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20b1d4.  v15:= `@@okhttp3.internal.http2.d.c` @type ^`java.lang.String`[] @kind object;
  #L20b1d8.  v10:= v15[v10] @kind object;
  #L20b1dc.  call temp:= `append`(v13, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20b1e2.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L20b1e8.  v10:= `@@okhttp3.internal.http2.d.c` @type ^`java.lang.String`[] @kind object;
  #L20b1ec.  v10:= v10[v7] @kind object;
  #L20b1f0.  call temp:= `append`(v13, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20b1f6.  call temp:= `append`(v13, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20b1fc.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20b202.  v10:= temp @kind object;
  #L20b204.  v11[v12]:= v10 @kind object;
  #L20b208.  v9:= v9 + 1;
  #L20b20c.  goto L20b178;
  #L20b20e.  v5:= v5 + 1;
  #L20b212.  goto L20b16c;
  #L20b214.  v1:= `@@okhttp3.internal.http2.d.c` @type ^`java.lang.String`[] @kind object;
  #L20b218.  v2:= length @variable v1;
  #L20b21a.  if v0 >= v2 then goto L20b238;
  #L20b21e.  v2:= v1[v0] @kind object;
  #L20b222.  if v2 != 0 then goto L20b232;
  #L20b226.  v2:= `@@okhttp3.internal.http2.d.d` @type ^`java.lang.String`[] @kind object;
  #L20b22a.  v2:= v2[v0] @kind object;
  #L20b22e.  v1[v0]:= v2 @kind object;
  #L20b232.  v0:= v0 + 1;
  #L20b236.  goto L20b214;
  #L20b238.  return @kind void;
  #L20b23a.  
  #L20b23c.  v1:= (4I, 32I, 36I) @kind object;
  #L20b24f.  goto L20b168;
}
procedure `void` `<init>`(`okhttp3.internal.http2.d` v0 @kind this) @signature `Lokhttp3/internal/http2/d;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L20b260.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20b266.  return @kind void;
}
procedure `java.lang.IllegalArgumentException` `a`(`java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lokhttp3/internal/http2/d;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @AccessFlag STATIC {
    temp;
    v0;

  #L20aeb8.  v0:= new `java.lang.IllegalArgumentException`;
  #L20aebc.  call temp:= `format`(v1, v2) @signature `Lh/n0/e;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L20aec2.  v1:= temp @kind object;
  #L20aec4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20aeca.  throw v0;
}
procedure `java.lang.String` `a`(`byte` v2 , `byte` v3 ) @signature `Lokhttp3/internal/http2/d;.a:(BB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L20aedc.  if v3 != 0 then goto L20aee6;
  #L20aee0.  v2:= "" @kind object;
  #L20aee4.  return v2 @kind object;
  #L20aee6.  v0:= 2I;
  #L20aee8.  if v2 == v0 then goto L20af7a;
  #L20aeec.  v0:= 3I;
  #L20aeee.  if v2 == v0 then goto L20af7a;
  #L20aef2.  v0:= 4I;
  #L20aef4.  if v2 == v0 then goto L20af64;
  #L20aef8.  v0:= 6I;
  #L20aefa.  if v2 == v0 then goto L20af64;
  #L20aefe.  v0:= 7I;
  #L20af00.  if v2 == v0 then goto L20af7a;
  #L20af04.  v0:= 8I;
  #L20af08.  if v2 == v0 then goto L20af7a;
  #L20af0c.  v0:= `@@okhttp3.internal.http2.d.c` @type ^`java.lang.String`[] @kind object;
  #L20af10.  v1:= length @variable v0;
  #L20af12.  if v3 >= v1 then goto L20af1c;
  #L20af16.  v0:= v0[v3] @kind object;
  #L20af1a.  goto L20af24;
  #L20af1c.  v0:= `@@okhttp3.internal.http2.d.d` @type ^`java.lang.String`[] @kind object;
  #L20af20.  v0:= v0[v3] @kind object;
  #L20af24.  v1:= 5I;
  #L20af26.  if v2 != v1 then goto L20af44;
  #L20af2a.  v1:= v3 ^& 4;
  #L20af2e.  if v1 == 0 then goto L20af44;
  #L20af32.  v2:= "HEADERS" @kind object;
  #L20af36.  v3:= "PUSH_PROMISE" @kind object;
  #L20af3a.  call temp:= `replace`(v0, v2, v3) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L20af40.  v2:= temp @kind object;
  #L20af42.  return v2 @kind object;
  #L20af44.  if v2 != 0 then goto L20af62;
  #L20af48.  v2:= v3 ^& 32;
  #L20af4c.  if v2 == 0 then goto L20af62;
  #L20af50.  v2:= "PRIORITY" @kind object;
  #L20af54.  v3:= "COMPRESSED" @kind object;
  #L20af58.  call temp:= `replace`(v0, v2, v3) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L20af5e.  v2:= temp @kind object;
  #L20af60.  return v2 @kind object;
  #L20af62.  return v0 @kind object;
  #L20af64.  v2:= 1I;
  #L20af66.  if v3 != v2 then goto L20af70;
  #L20af6a.  v2:= "ACK" @kind object;
  #L20af6e.  goto L20af78;
  #L20af70.  v2:= `@@okhttp3.internal.http2.d.d` @type ^`java.lang.String`[] @kind object;
  #L20af74.  v2:= v2[v3] @kind object;
  #L20af78.  return v2 @kind object;
  #L20af7a.  v2:= `@@okhttp3.internal.http2.d.d` @type ^`java.lang.String`[] @kind object;
  #L20af7e.  v2:= v2[v3] @kind object;
  #L20af82.  return v2 @kind object;
}
procedure `java.lang.String` `a`(`boolean` v4 , `int` v5 , `int` v6 , `byte` v7 , `byte` v8 ) @signature `Lokhttp3/internal/http2/d;.a:(ZIIBB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20af94.  v0:= `@@okhttp3.internal.http2.d.b` @type ^`java.lang.String`[] @kind object;
  #L20af98.  v1:= length @variable v0;
  #L20af9a.  v2:= 0I;
  #L20af9c.  v3:= 1I;
  #L20af9e.  if v7 >= v1 then goto L20afa8;
  #L20afa2.  v0:= v0[v7] @kind object;
  #L20afa6.  goto L20afc4;
  #L20afa8.  v0:= new `java.lang.Object`[v3];
  #L20afac.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L20afb2.  v1:= temp @kind object;
  #L20afb4.  v0[v2]:= v1 @kind object;
  #L20afb8.  v1:= "0x%02x" @kind object;
  #L20afbc.  call temp:= `format`(v1, v0) @signature `Lh/n0/e;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L20afc2.  v0:= temp @kind object;
  #L20afc4.  call temp:= `a`(v7, v8) @signature `Lokhttp3/internal/http2/d;.a:(BB)Ljava/lang/String;` @kind static;
  #L20afca.  v7:= temp @kind object;
  #L20afcc.  v8:= 5I;
  #L20afce.  v8:= new `java.lang.Object`[v8];
  #L20afd2.  if v4 == 0 then goto L20afdc;
  #L20afd6.  v4:= "<<" @kind object;
  #L20afda.  goto L20afe0;
  #L20afdc.  v4:= ">>" @kind object;
  #L20afe0.  v8[v2]:= v4 @kind object;
  #L20afe4.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L20afea.  v4:= temp @kind object;
  #L20afec.  v8[v3]:= v4 @kind object;
  #L20aff0.  v4:= 2I;
  #L20aff2.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L20aff8.  v5:= temp @kind object;
  #L20affa.  v8[v4]:= v5 @kind object;
  #L20affe.  v4:= 3I;
  #L20b000.  v8[v4]:= v0 @kind object;
  #L20b004.  v4:= 4I;
  #L20b006.  v8[v4]:= v7 @kind object;
  #L20b00a.  v4:= "%s 0x%08x %5d %-13s %s" @kind object;
  #L20b00e.  call temp:= `format`(v4, v8) @signature `Lh/n0/e;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L20b014.  v4:= temp @kind object;
  #L20b016.  return v4 @kind object;
}
procedure `java.io.IOException` `b`(`java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lokhttp3/internal/http2/d;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @AccessFlag STATIC {
    temp;
    v0;

  #L20ae94.  v0:= new `java.io.IOException`;
  #L20ae98.  call temp:= `format`(v1, v2) @signature `Lh/n0/e;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L20ae9e.  v1:= temp @kind object;
  #L20aea0.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20aea6.  throw v0;
}
