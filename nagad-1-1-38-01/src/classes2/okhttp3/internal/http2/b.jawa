record `okhttp3.internal.http2.b` @kind class @AccessFlag PUBLIC_FINAL {
  `i.h` `okhttp3.internal.http2.b.a` @AccessFlag PUBLIC_FINAL;
  `i.h` `okhttp3.internal.http2.b.b` @AccessFlag PUBLIC_FINAL;
  `int` `okhttp3.internal.http2.b.c` @AccessFlag FINAL;
}
global `i.h` `@@okhttp3.internal.http2.b.d` @AccessFlag PUBLIC_STATIC_FINAL;
global `i.h` `@@okhttp3.internal.http2.b.e` @AccessFlag PUBLIC_STATIC_FINAL;
global `i.h` `@@okhttp3.internal.http2.b.f` @AccessFlag PUBLIC_STATIC_FINAL;
global `i.h` `@@okhttp3.internal.http2.b.g` @AccessFlag PUBLIC_STATIC_FINAL;
global `i.h` `@@okhttp3.internal.http2.b.h` @AccessFlag PUBLIC_STATIC_FINAL;
global `i.h` `@@okhttp3.internal.http2.b.i` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2057c4.  v0:= ":" @kind object;
  #L2057c8.  call temp:= `encodeUtf8`(v0) @signature `Li/h;.encodeUtf8:(Ljava/lang/String;)Li/h;` @kind static;
  #L2057ce.  v0:= temp @kind object;
  #L2057d0.  `@@okhttp3.internal.http2.b.d` @type ^`i.h` := v0 @kind object;
  #L2057d4.  v0:= ":status" @kind object;
  #L2057d8.  call temp:= `encodeUtf8`(v0) @signature `Li/h;.encodeUtf8:(Ljava/lang/String;)Li/h;` @kind static;
  #L2057de.  v0:= temp @kind object;
  #L2057e0.  `@@okhttp3.internal.http2.b.e` @type ^`i.h` := v0 @kind object;
  #L2057e4.  v0:= ":method" @kind object;
  #L2057e8.  call temp:= `encodeUtf8`(v0) @signature `Li/h;.encodeUtf8:(Ljava/lang/String;)Li/h;` @kind static;
  #L2057ee.  v0:= temp @kind object;
  #L2057f0.  `@@okhttp3.internal.http2.b.f` @type ^`i.h` := v0 @kind object;
  #L2057f4.  v0:= ":path" @kind object;
  #L2057f8.  call temp:= `encodeUtf8`(v0) @signature `Li/h;.encodeUtf8:(Ljava/lang/String;)Li/h;` @kind static;
  #L2057fe.  v0:= temp @kind object;
  #L205800.  `@@okhttp3.internal.http2.b.g` @type ^`i.h` := v0 @kind object;
  #L205804.  v0:= ":scheme" @kind object;
  #L205808.  call temp:= `encodeUtf8`(v0) @signature `Li/h;.encodeUtf8:(Ljava/lang/String;)Li/h;` @kind static;
  #L20580e.  v0:= temp @kind object;
  #L205810.  `@@okhttp3.internal.http2.b.h` @type ^`i.h` := v0 @kind object;
  #L205814.  v0:= ":authority" @kind object;
  #L205818.  call temp:= `encodeUtf8`(v0) @signature `Li/h;.encodeUtf8:(Ljava/lang/String;)Li/h;` @kind static;
  #L20581e.  v0:= temp @kind object;
  #L205820.  `@@okhttp3.internal.http2.b.i` @type ^`i.h` := v0 @kind object;
  #L205824.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.b` v0 @kind this, `i.h` v1 @kind object, `i.h` v2 @kind object) @signature `Lokhttp3/internal/http2/b;.<init>:(Li/h;Li/h;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L205880.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L205886.  v0.`okhttp3.internal.http2.b.a` @type ^`i.h` := v1 @kind object;
  #L20588a.  v0.`okhttp3.internal.http2.b.b` @type ^`i.h` := v2 @kind object;
  #L20588e.  call temp:= `size`(v1) @signature `Li/h;.size:()I` @kind virtual;
  #L205894.  v1:= temp;
  #L205896.  v1:= v1 + 32;
  #L20589a.  call temp:= `size`(v2) @signature `Li/h;.size:()I` @kind virtual;
  #L2058a0.  v2:= temp;
  #L2058a2.  v1:= v1 + v2 @kind int;
  #L2058a4.  v0.`okhttp3.internal.http2.b.c` @type ^`int` := v1;
  #L2058a8.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.b` v0 @kind this, `i.h` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/http2/b;.<init>:(Li/h;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L205860.  call temp:= `encodeUtf8`(v2) @signature `Li/h;.encodeUtf8:(Ljava/lang/String;)Li/h;` @kind static;
  #L205866.  v2:= temp @kind object;
  #L205868.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/http2/b;.<init>:(Li/h;Li/h;)V` @kind direct;
  #L20586e.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.b` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/http2/b;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L205838.  call temp:= `encodeUtf8`(v1) @signature `Li/h;.encodeUtf8:(Ljava/lang/String;)Li/h;` @kind static;
  #L20583e.  v1:= temp @kind object;
  #L205840.  call temp:= `encodeUtf8`(v2) @signature `Li/h;.encodeUtf8:(Ljava/lang/String;)Li/h;` @kind static;
  #L205846.  v2:= temp @kind object;
  #L205848.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/http2/b;.<init>:(Li/h;Li/h;)V` @kind direct;
  #L20584e.  return @kind void;
}
procedure `boolean` `equals`(`okhttp3.internal.http2.b` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lokhttp3/internal/http2/b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2056f8.  v0:= instanceof @variable v4 @type ^`okhttp3.internal.http2.b` @kind boolean;
  #L2056fc.  v1:= 0I;
  #L2056fe.  if v0 == 0 then goto L205730;
  #L205702.  v4:= (`okhttp3.internal.http2.b`) v4 @kind object;
  #L205706.  v0:= v3.`okhttp3.internal.http2.b.a` @type ^`i.h` @kind object;
  #L20570a.  v2:= v4.`okhttp3.internal.http2.b.a` @type ^`i.h` @kind object;
  #L20570e.  call temp:= `equals`(v0, v2) @signature `Li/h;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L205714.  v0:= temp;
  #L205716.  if v0 == 0 then goto L205730;
  #L20571a.  v0:= v3.`okhttp3.internal.http2.b.b` @type ^`i.h` @kind object;
  #L20571e.  v4:= v4.`okhttp3.internal.http2.b.b` @type ^`i.h` @kind object;
  #L205722.  call temp:= `equals`(v0, v4) @signature `Li/h;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L205728.  v4:= temp;
  #L20572a.  if v4 == 0 then goto L205730;
  #L20572e.  v1:= 1I;
  #L205730.  return v1;
}
procedure `int` `hashCode`(`okhttp3.internal.http2.b` v2 @kind this) @signature `Lokhttp3/internal/http2/b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L205744.  v0:= v2.`okhttp3.internal.http2.b.a` @type ^`i.h` @kind object;
  #L205748.  call temp:= `hashCode`(v0) @signature `Li/h;.hashCode:()I` @kind virtual;
  #L20574e.  v0:= temp;
  #L205750.  v1:= 527I;
  #L205754.  v1:= v1 + v0 @kind int;
  #L205756.  v1:= v1 * 31;
  #L20575a.  v0:= v2.`okhttp3.internal.http2.b.b` @type ^`i.h` @kind object;
  #L20575e.  call temp:= `hashCode`(v0) @signature `Li/h;.hashCode:()I` @kind virtual;
  #L205764.  v0:= temp;
  #L205766.  v1:= v1 + v0 @kind int;
  #L205768.  return v1;
}
procedure `java.lang.String` `toString`(`okhttp3.internal.http2.b` v3 @kind this) @signature `Lokhttp3/internal/http2/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L20577c.  v0:= 2I;
  #L20577e.  v0:= new `java.lang.Object`[v0];
  #L205782.  v1:= v3.`okhttp3.internal.http2.b.a` @type ^`i.h` @kind object;
  #L205786.  call temp:= `utf8`(v1) @signature `Li/h;.utf8:()Ljava/lang/String;` @kind virtual;
  #L20578c.  v1:= temp @kind object;
  #L20578e.  v2:= 0I;
  #L205790.  v0[v2]:= v1 @kind object;
  #L205794.  v1:= v3.`okhttp3.internal.http2.b.b` @type ^`i.h` @kind object;
  #L205798.  call temp:= `utf8`(v1) @signature `Li/h;.utf8:()Ljava/lang/String;` @kind virtual;
  #L20579e.  v1:= temp @kind object;
  #L2057a0.  v2:= 1I;
  #L2057a2.  v0[v2]:= v1 @kind object;
  #L2057a6.  v1:= "%s: %s" @kind object;
  #L2057aa.  call temp:= `format`(v1, v0) @signature `Lh/n0/e;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2057b0.  v0:= temp @kind object;
  #L2057b2.  return v0 @kind object;
}
