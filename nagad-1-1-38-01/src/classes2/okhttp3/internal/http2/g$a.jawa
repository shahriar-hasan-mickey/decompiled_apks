record `okhttp3.internal.http2.g$a` @kind class @AccessFlag FINAL extends `i.z` @kind interface {
  `i.g` `okhttp3.internal.http2.g$a.f` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.internal.http2.g$a.g` @AccessFlag ;
  `byte` `okhttp3.internal.http2.g$a.h` @AccessFlag ;
  `int` `okhttp3.internal.http2.g$a.i` @AccessFlag ;
  `int` `okhttp3.internal.http2.g$a.j` @AccessFlag ;
  `short` `okhttp3.internal.http2.g$a.k` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.internal.http2.g$a` v0 @kind this, `i.g` v1 @kind object) @signature `Lokhttp3/internal/http2/g$a;.<init>:(Li/g;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L208cbc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L208cc2.  v0.`okhttp3.internal.http2.g$a.f` @type ^`i.g` := v1 @kind object;
  #L208cc6.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.http2.g$a` v7 @kind this) @signature `Lokhttp3/internal/http2/g$a;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L208cec.  v0:= v7.`okhttp3.internal.http2.g$a.i` @type ^`int`;
  #L208cf0.  v1:= v7.`okhttp3.internal.http2.g$a.f` @type ^`i.g` @kind object;
  #L208cf4.  call temp:= `a`(v1) @signature `Lokhttp3/internal/http2/g;.a:(Li/g;)I` @kind static;
  #L208cfa.  v1:= temp;
  #L208cfc.  v7.`okhttp3.internal.http2.g$a.j` @type ^`int` := v1;
  #L208d00.  v7.`okhttp3.internal.http2.g$a.g` @type ^`int` := v1;
  #L208d04.  v1:= v7.`okhttp3.internal.http2.g$a.f` @type ^`i.g` @kind object;
  #L208d08.  call temp:= `readByte`(v1) @signature `Li/g;.readByte:()B` @kind interface;
  #L208d0e.  v1:= temp;
  #L208d10.  v1:= v1 ^& 255;
  #L208d14.  v1:= (`byte`) v1 @kind i2b;
  #L208d16.  v2:= v7.`okhttp3.internal.http2.g$a.f` @type ^`i.g` @kind object;
  #L208d1a.  call temp:= `readByte`(v2) @signature `Li/g;.readByte:()B` @kind interface;
  #L208d20.  v2:= temp;
  #L208d22.  v2:= v2 ^& 255;
  #L208d26.  v2:= (`byte`) v2 @kind i2b;
  #L208d28.  v7.`okhttp3.internal.http2.g$a.h` @type ^`byte` := v2 @kind byte;
  #L208d2c.  v2:= `@@okhttp3.internal.http2.g.j` @type ^`java.util.logging.Logger` @kind object;
  #L208d30.  v3:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L208d34.  call temp:= `isLoggable`(v2, v3) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L208d3a.  v2:= temp;
  #L208d3c.  v3:= 1I;
  #L208d3e.  if v2 == 0 then goto L208d60;
  #L208d42.  v2:= `@@okhttp3.internal.http2.g.j` @type ^`java.util.logging.Logger` @kind object;
  #L208d46.  v4:= v7.`okhttp3.internal.http2.g$a.i` @type ^`int`;
  #L208d4a.  v5:= v7.`okhttp3.internal.http2.g$a.g` @type ^`int`;
  #L208d4e.  v6:= v7.`okhttp3.internal.http2.g$a.h` @type ^`byte` @kind byte;
  #L208d52.  call temp:= `a`(v3, v4, v5, v1, v6) @signature `Lokhttp3/internal/http2/d;.a:(ZIIBB)Ljava/lang/String;` @kind static;
  #L208d58.  v4:= temp @kind object;
  #L208d5a.  call `fine`(v2, v4) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L208d60.  v2:= v7.`okhttp3.internal.http2.g$a.f` @type ^`i.g` @kind object;
  #L208d64.  call temp:= `readInt`(v2) @signature `Li/g;.readInt:()I` @kind interface;
  #L208d6a.  v2:= temp;
  #L208d6c.  v4:= 2147483647I;
  #L208d72.  v2:= v2 ^& v4 @kind int;
  #L208d74.  v7.`okhttp3.internal.http2.g$a.i` @type ^`int` := v2;
  #L208d78.  v2:= 9I;
  #L208d7c.  v4:= 0I;
  #L208d7e.  v5:= 0I;
  #L208d80.  if v1 != v2 then goto L208d9e;
  #L208d84.  v1:= v7.`okhttp3.internal.http2.g$a.i` @type ^`int`;
  #L208d88.  if v1 != v0 then goto L208d8e;
  #L208d8c.  return @kind void;
  #L208d8e.  v0:= new `java.lang.Object`[v5];
  #L208d92.  v1:= "TYPE_CONTINUATION streamId changed" @kind object;
  #L208d96.  call temp:= `b`(v1, v0) @signature `Lokhttp3/internal/http2/d;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L208d9c.  throw v4;
  #L208d9e.  v0:= new `java.lang.Object`[v3];
  #L208da2.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L208da8.  v1:= temp @kind object;
  #L208daa.  v0[v5]:= v1 @kind object;
  #L208dae.  v1:= "%s != TYPE_CONTINUATION" @kind object;
  #L208db2.  call temp:= `b`(v1, v0) @signature `Lokhttp3/internal/http2/d;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L208db8.  throw v4;
}
procedure `void` `close`(`okhttp3.internal.http2.g$a` v0 @kind this) @signature `Lokhttp3/internal/http2/g$a;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L208cd8.  return @kind void;
}
procedure `long` `read`(`okhttp3.internal.http2.g$a` v6 @kind this, `i.e` v7 @kind object, `long` v8 ) @signature `Lokhttp3/internal/http2/g$a;.read:(Li/e;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L208c24.  v0:= v6.`okhttp3.internal.http2.g$a.j` @type ^`int`;
  #L208c28.  v1:= -1L;
  #L208c2c.  if v0 != 0 then goto L208c5c;
  #L208c30.  v0:= v6.`okhttp3.internal.http2.g$a.f` @type ^`i.g` @kind object;
  #L208c34.  v3:= v6.`okhttp3.internal.http2.g$a.k` @type ^`short` @kind short;
  #L208c38.  v3:= (`long`) v3 @kind i2l;
  #L208c3a.  call `skip`(v0, v3) @signature `Li/g;.skip:(J)V` @kind interface;
  #L208c40.  v0:= 0I;
  #L208c42.  v6.`okhttp3.internal.http2.g$a.k` @type ^`short` := v0 @kind char;
  #L208c46.  v0:= v6.`okhttp3.internal.http2.g$a.h` @type ^`byte` @kind byte;
  #L208c4a.  v0:= v0 ^& 4;
  #L208c4e.  if v0 == 0 then goto L208c54;
  #L208c52.  return v1 @kind wide;
  #L208c54.  call `a`(v6) @signature `Lokhttp3/internal/http2/g$a;.a:()V` @kind direct;
  #L208c5a.  goto L208c24;
  #L208c5c.  v3:= v6.`okhttp3.internal.http2.g$a.f` @type ^`i.g` @kind object;
  #L208c60.  v4:= (`long`) v0 @kind i2l;
  #L208c62.  call temp:= `min`(v8, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L208c68.  v8:= temp @kind wide;
  #L208c6a.  call temp:= `read`(v3, v7, v8) @signature `Li/z;.read:(Li/e;J)J` @kind interface;
  #L208c70.  v7:= temp @kind wide;
  #L208c72.  v9:= lcmp(v7, v1);
  #L208c76.  if v9 != 0 then goto L208c7c;
  #L208c7a.  return v1 @kind wide;
  #L208c7c.  v9:= v6.`okhttp3.internal.http2.g$a.j` @type ^`int`;
  #L208c80.  v0:= (`long`) v9 @kind i2l;
  #L208c82.  v0:= v0 - v7 @kind long;
  #L208c84.  v9:= (`int`) v0 @kind l2i;
  #L208c86.  v6.`okhttp3.internal.http2.g$a.j` @type ^`int` := v9;
  #L208c8a.  return v7 @kind wide;
}
procedure `i.a0` `timeout`(`okhttp3.internal.http2.g$a` v1 @kind this) @signature `Lokhttp3/internal/http2/g$a;.timeout:()Li/a0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L208c9c.  v0:= v1.`okhttp3.internal.http2.g$a.f` @type ^`i.g` @kind object;
  #L208ca0.  call temp:= `timeout`(v0) @signature `Li/z;.timeout:()Li/a0;` @kind interface;
  #L208ca6.  v0:= temp @kind object;
  #L208ca8.  return v0 @kind object;
}
