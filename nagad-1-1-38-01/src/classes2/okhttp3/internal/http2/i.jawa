record `okhttp3.internal.http2.i` @kind class @AccessFlag FINAL extends `java.io.Closeable` @kind interface {
  `i.f` `okhttp3.internal.http2.i.f` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.http2.i.g` @AccessFlag PRIVATE_FINAL;
  `i.e` `okhttp3.internal.http2.i.h` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.internal.http2.i.i` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.http2.i.j` @AccessFlag PRIVATE;
  `okhttp3.internal.http2.c$b` `okhttp3.internal.http2.i.k` @AccessFlag FINAL;
}
global `java.util.logging.Logger` `@@okhttp3.internal.http2.i.l` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/i;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L20a5e0.  v0:= constclass @type ^`okhttp3.internal.http2.d` @kind object;
  #L20a5e4.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L20a5ea.  v0:= temp @kind object;
  #L20a5ec.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L20a5f2.  v0:= temp @kind object;
  #L20a5f4.  `@@okhttp3.internal.http2.i.l` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L20a5f8.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.i` v0 @kind this, `i.f` v1 @kind object, `boolean` v2 ) @signature `Lokhttp3/internal/http2/i;.<init>:(Li/f;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L20a60c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20a612.  v0.`okhttp3.internal.http2.i.f` @type ^`i.f` := v1 @kind object;
  #L20a616.  v0.`okhttp3.internal.http2.i.g` @type ^`boolean` := v2 @kind boolean;
  #L20a61a.  v1:= new `i.e`;
  #L20a61e.  call `<init>`(v1) @signature `Li/e;.<init>:()V` @kind direct;
  #L20a624.  v0.`okhttp3.internal.http2.i.h` @type ^`i.e` := v1 @kind object;
  #L20a628.  v1:= new `okhttp3.internal.http2.c$b`;
  #L20a62c.  v2:= v0.`okhttp3.internal.http2.i.h` @type ^`i.e` @kind object;
  #L20a630.  call `<init>`(v1, v2) @signature `Lokhttp3/internal/http2/c$b;.<init>:(Li/e;)V` @kind direct;
  #L20a636.  v0.`okhttp3.internal.http2.i.k` @type ^`okhttp3.internal.http2.c$b` := v1 @kind object;
  #L20a63a.  v1:= 16384I;
  #L20a63e.  v0.`okhttp3.internal.http2.i.i` @type ^`int` := v1;
  #L20a642.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.http2.i` v7 @kind this, `int` v8 , `long` v9 ) @signature `Lokhttp3/internal/http2/i;.a:(IJ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L20ae00.  v0:= 0L;
  #L20ae04.  v2:= lcmp(v9, v0);
  #L20ae08.  if v2 <= 0 then goto L20ae48;
  #L20ae0c.  v2:= v7.`okhttp3.internal.http2.i.i` @type ^`int`;
  #L20ae10.  v2:= (`long`) v2 @kind i2l;
  #L20ae12.  call temp:= `min`(v2, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L20ae18.  v2:= temp @kind wide;
  #L20ae1a.  v3:= (`int`) v2 @kind l2i;
  #L20ae1c.  v4:= (`long`) v3 @kind i2l;
  #L20ae1e.  v9:= v9 - v4 @kind long;
  #L20ae20.  v2:= 9I;
  #L20ae24.  v6:= lcmp(v9, v0);
  #L20ae28.  if v6 != 0 then goto L20ae30;
  #L20ae2c.  v0:= 4I;
  #L20ae2e.  goto L20ae32;
  #L20ae30.  v0:= 0I;
  #L20ae32.  call `frameHeader`(v7, v8, v3, v2, v0) @signature `Lokhttp3/internal/http2/i;.frameHeader:(IIBB)V` @kind virtual;
  #L20ae38.  v0:= v7.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20ae3c.  v1:= v7.`okhttp3.internal.http2.i.h` @type ^`i.e` @kind object;
  #L20ae40.  call `write`(v0, v1, v4) @signature `Li/x;.write:(Li/e;J)V` @kind interface;
  #L20ae46.  goto L20ae00;
  #L20ae48.  return @kind void;
}
procedure `void` `a`(`i.f` v1 @kind object, `int` v2 ) @signature `Lokhttp3/internal/http2/i;.a:(Li/f;I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L20ae5c.  v0:= v2 ^>> 16;
  #L20ae60.  v0:= v0 ^& 255;
  #L20ae64.  call temp:= `writeByte`(v1, v0) @signature `Li/f;.writeByte:(I)Li/f;` @kind interface;
  #L20ae6a.  v0:= v2 ^>> 8;
  #L20ae6e.  v0:= v0 ^& 255;
  #L20ae72.  call temp:= `writeByte`(v1, v0) @signature `Li/f;.writeByte:(I)Li/f;` @kind interface;
  #L20ae78.  v2:= v2 ^& 255;
  #L20ae7c.  call temp:= `writeByte`(v1, v2) @signature `Li/f;.writeByte:(I)Li/f;` @kind interface;
  #L20ae82.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.http2.i` v2 @kind this, `int` v3 , `byte` v4 , `i.e` v5 @kind object, `int` v6 ) @signature `Lokhttp3/internal/http2/i;.a:(IBLi/e;I)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L20a834.  v0:= 0I;
  #L20a836.  call `frameHeader`(v2, v3, v6, v0, v4) @signature `Lokhttp3/internal/http2/i;.frameHeader:(IIBB)V` @kind virtual;
  #L20a83c.  if v6 <= 0 then goto L20a84c;
  #L20a840.  v3:= v2.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20a844.  v0:= (`long`) v6 @kind i2l;
  #L20a846.  call `write`(v3, v5, v0) @signature `Li/x;.write:(Li/e;J)V` @kind interface;
  #L20a84c.  return @kind void;
}
procedure `void` `applyAndAckSettings`(`okhttp3.internal.http2.i` v2 @kind this, `okhttp3.internal.http2.l` v3 @kind object) @signature `Lokhttp3/internal/http2/i;.applyAndAckSettings:(Lokhttp3/internal/http2/l;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20a654.  @monitorenter v2
  #L20a656.  v0:= v2.`okhttp3.internal.http2.i.j` @type ^`boolean` @kind boolean;
  #L20a65a.  if v0 != 0 then goto L20a6a8;
  #L20a65e.  v0:= v2.`okhttp3.internal.http2.i.i` @type ^`int`;
  #L20a662.  call temp:= `c`(v3, v0) @signature `Lokhttp3/internal/http2/l;.c:(I)I` @kind virtual;
  #L20a668.  v0:= temp;
  #L20a66a.  v2.`okhttp3.internal.http2.i.i` @type ^`int` := v0;
  #L20a66e.  call temp:= `b`(v3) @signature `Lokhttp3/internal/http2/l;.b:()I` @kind virtual;
  #L20a674.  v0:= temp;
  #L20a676.  v1:= -1I;
  #L20a678.  if v0 == v1 then goto L20a68e;
  #L20a67c.  v0:= v2.`okhttp3.internal.http2.i.k` @type ^`okhttp3.internal.http2.c$b` @kind object;
  #L20a680.  call temp:= `b`(v3) @signature `Lokhttp3/internal/http2/l;.b:()I` @kind virtual;
  #L20a686.  v3:= temp;
  #L20a688.  call `a`(v0, v3) @signature `Lokhttp3/internal/http2/c$b;.a:(I)V` @kind virtual;
  #L20a68e.  v3:= 4I;
  #L20a690.  v0:= 1I;
  #L20a692.  v1:= 0I;
  #L20a694.  call `frameHeader`(v2, v1, v1, v3, v0) @signature `Lokhttp3/internal/http2/i;.frameHeader:(IIBB)V` @kind virtual;
  #L20a69a.  v3:= v2.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20a69e.  call `flush`(v3) @signature `Li/f;.flush:()V` @kind interface;
  #L20a6a4.  @monitorexit v2
  #L20a6a6.  return @kind void;
  #L20a6a8.  v3:= new `java.io.IOException`;
  #L20a6ac.  v0:= "closed" @kind object;
  #L20a6b0.  call `<init>`(v3, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20a6b6.  throw v3;
  #L20a6b8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20a6ba.  @monitorexit v2
  #L20a6bc.  throw v3;
  catch `java.lang.Throwable` @[L20a656..L20a6a4] goto L20a6b8;
  catch `java.lang.Throwable` @[L20a6a8..L20a6b8] goto L20a6b8;
}
procedure `void` `close`(`okhttp3.internal.http2.i` v1 @kind this) @signature `Lokhttp3/internal/http2/i;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20a6e4.  @monitorenter v1
  #L20a6e6.  v0:= 1I;
  #L20a6e8.  v1.`okhttp3.internal.http2.i.j` @type ^`boolean` := v0 @kind boolean;
  #L20a6ec.  v0:= v1.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20a6f0.  call `close`(v0) @signature `Li/x;.close:()V` @kind interface;
  #L20a6f6.  @monitorexit v1
  #L20a6f8.  return @kind void;
  #L20a6fa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20a6fc.  @monitorexit v1
  #L20a6fe.  throw v0;
  catch `java.lang.Throwable` @[L20a6e8..L20a6f6] goto L20a6fa;
}
procedure `void` `connectionPreface`(`okhttp3.internal.http2.i` v5 @kind this) @signature `Lokhttp3/internal/http2/i;.connectionPreface:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L20a71c.  @monitorenter v5
  #L20a71e.  v0:= v5.`okhttp3.internal.http2.i.j` @type ^`boolean` @kind boolean;
  #L20a722.  if v0 != 0 then goto L20a798;
  #L20a726.  v0:= v5.`okhttp3.internal.http2.i.g` @type ^`boolean` @kind boolean;
  #L20a72a.  if v0 != 0 then goto L20a732;
  #L20a72e.  @monitorexit v5
  #L20a730.  return @kind void;
  #L20a732.  v0:= `@@okhttp3.internal.http2.i.l` @type ^`java.util.logging.Logger` @kind object;
  #L20a736.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L20a73a.  call temp:= `isLoggable`(v0, v1) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L20a740.  v0:= temp;
  #L20a742.  if v0 == 0 then goto L20a774;
  #L20a746.  v0:= `@@okhttp3.internal.http2.i.l` @type ^`java.util.logging.Logger` @kind object;
  #L20a74a.  v1:= ">> CONNECTION %s" @kind object;
  #L20a74e.  v2:= 1I;
  #L20a750.  v2:= new `java.lang.Object`[v2];
  #L20a754.  v3:= 0I;
  #L20a756.  v4:= `@@okhttp3.internal.http2.d.a` @type ^`i.h` @kind object;
  #L20a75a.  call temp:= `hex`(v4) @signature `Li/h;.hex:()Ljava/lang/String;` @kind virtual;
  #L20a760.  v4:= temp @kind object;
  #L20a762.  v2[v3]:= v4 @kind object;
  #L20a766.  call temp:= `format`(v1, v2) @signature `Lh/n0/e;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L20a76c.  v1:= temp @kind object;
  #L20a76e.  call `fine`(v0, v1) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L20a774.  v0:= v5.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20a778.  v1:= `@@okhttp3.internal.http2.d.a` @type ^`i.h` @kind object;
  #L20a77c.  call temp:= `toByteArray`(v1) @signature `Li/h;.toByteArray:()[B` @kind virtual;
  #L20a782.  v1:= temp @kind object;
  #L20a784.  call temp:= `write`(v0, v1) @signature `Li/f;.write:([B)Li/f;` @kind interface;
  #L20a78a.  v0:= v5.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20a78e.  call `flush`(v0) @signature `Li/f;.flush:()V` @kind interface;
  #L20a794.  @monitorexit v5
  #L20a796.  return @kind void;
  #L20a798.  v0:= new `java.io.IOException`;
  #L20a79c.  v1:= "closed" @kind object;
  #L20a7a0.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20a7a6.  throw v0;
  #L20a7a8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20a7aa.  @monitorexit v5
  #L20a7ac.  throw v0;
  catch `java.lang.Throwable` @[L20a71e..L20a72a] goto L20a7a8;
  catch `java.lang.Throwable` @[L20a732..L20a794] goto L20a7a8;
  catch `java.lang.Throwable` @[L20a798..L20a7a8] goto L20a7a8;
}
procedure `void` `data`(`okhttp3.internal.http2.i` v1 @kind this, `boolean` v2 , `int` v3 , `i.e` v4 @kind object, `int` v5 ) @signature `Lokhttp3/internal/http2/i;.data:(ZILi/e;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20a7dc.  @monitorenter v1
  #L20a7de.  v0:= v1.`okhttp3.internal.http2.i.j` @type ^`boolean` @kind boolean;
  #L20a7e2.  if v0 != 0 then goto L20a7fa;
  #L20a7e6.  v0:= 0I;
  #L20a7e8.  if v2 == 0 then goto L20a7f0;
  #L20a7ec.  v2:= 1I;
  #L20a7ee.  v0:= (`byte`) v2 @kind i2b;
  #L20a7f0.  call `a`(v1, v3, v0, v4, v5) @signature `Lokhttp3/internal/http2/i;.a:(IBLi/e;I)V` @kind virtual;
  #L20a7f6.  @monitorexit v1
  #L20a7f8.  return @kind void;
  #L20a7fa.  v2:= new `java.io.IOException`;
  #L20a7fe.  v3:= "closed" @kind object;
  #L20a802.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20a808.  throw v2;
  #L20a80a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20a80c.  @monitorexit v1
  #L20a80e.  throw v2;
  catch `java.lang.Throwable` @[L20a7de..L20a7f6] goto L20a80a;
  catch `java.lang.Throwable` @[L20a7fa..L20a80a] goto L20a80a;
}
procedure `void` `flush`(`okhttp3.internal.http2.i` v2 @kind this) @signature `Lokhttp3/internal/http2/i;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20a860.  @monitorenter v2
  #L20a862.  v0:= v2.`okhttp3.internal.http2.i.j` @type ^`boolean` @kind boolean;
  #L20a866.  if v0 != 0 then goto L20a878;
  #L20a86a.  v0:= v2.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20a86e.  call `flush`(v0) @signature `Li/f;.flush:()V` @kind interface;
  #L20a874.  @monitorexit v2
  #L20a876.  return @kind void;
  #L20a878.  v0:= new `java.io.IOException`;
  #L20a87c.  v1:= "closed" @kind object;
  #L20a880.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20a886.  throw v0;
  #L20a888.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20a88a.  @monitorexit v2
  #L20a88c.  throw v0;
  catch `java.lang.Throwable` @[L20a862..L20a874] goto L20a888;
  catch `java.lang.Throwable` @[L20a878..L20a888] goto L20a888;
}
procedure `void` `frameHeader`(`okhttp3.internal.http2.i` v4 @kind this, `int` v5 , `int` v6 , `byte` v7 , `byte` v8 ) @signature `Lokhttp3/internal/http2/i;.frameHeader:(IIBB)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20a8b4.  v0:= `@@okhttp3.internal.http2.i.l` @type ^`java.util.logging.Logger` @kind object;
  #L20a8b8.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L20a8bc.  call temp:= `isLoggable`(v0, v1) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L20a8c2.  v0:= temp;
  #L20a8c4.  v1:= 0I;
  #L20a8c6.  if v0 == 0 then goto L20a8dc;
  #L20a8ca.  v0:= `@@okhttp3.internal.http2.i.l` @type ^`java.util.logging.Logger` @kind object;
  #L20a8ce.  call temp:= `a`(v1, v5, v6, v7, v8) @signature `Lokhttp3/internal/http2/d;.a:(ZIIBB)Ljava/lang/String;` @kind static;
  #L20a8d4.  v2:= temp @kind object;
  #L20a8d6.  call `fine`(v0, v2) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L20a8dc.  v0:= v4.`okhttp3.internal.http2.i.i` @type ^`int`;
  #L20a8e0.  v2:= 0I;
  #L20a8e2.  v3:= 1I;
  #L20a8e4.  if v6 > v0 then goto L20a948;
  #L20a8e8.  v0:= -2147483648I;
  #L20a8ec.  v0:= v0 ^& v5 @kind int;
  #L20a8ee.  if v0 != 0 then goto L20a92c;
  #L20a8f2.  v0:= v4.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20a8f6.  call `a`(v0, v6) @signature `Lokhttp3/internal/http2/i;.a:(Li/f;I)V` @kind static;
  #L20a8fc.  v6:= v4.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20a900.  v7:= v7 ^& 255;
  #L20a904.  call temp:= `writeByte`(v6, v7) @signature `Li/f;.writeByte:(I)Li/f;` @kind interface;
  #L20a90a.  v6:= v4.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20a90e.  v7:= v8 ^& 255;
  #L20a912.  call temp:= `writeByte`(v6, v7) @signature `Li/f;.writeByte:(I)Li/f;` @kind interface;
  #L20a918.  v6:= v4.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20a91c.  v7:= 2147483647I;
  #L20a922.  v5:= v5 ^& v7 @kind int;
  #L20a924.  call temp:= `writeInt`(v6, v5) @signature `Li/f;.writeInt:(I)Li/f;` @kind interface;
  #L20a92a.  return @kind void;
  #L20a92c.  v6:= new `java.lang.Object`[v3];
  #L20a930.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L20a936.  v5:= temp @kind object;
  #L20a938.  v6[v1]:= v5 @kind object;
  #L20a93c.  v5:= "reserved bit set: %s" @kind object;
  #L20a940.  call temp:= `a`(v5, v6) @signature `Lokhttp3/internal/http2/d;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @kind static;
  #L20a946.  throw v2;
  #L20a948.  v5:= 2I;
  #L20a94a.  v5:= new `java.lang.Object`[v5];
  #L20a94e.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L20a954.  v7:= temp @kind object;
  #L20a956.  v5[v1]:= v7 @kind object;
  #L20a95a.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L20a960.  v6:= temp @kind object;
  #L20a962.  v5[v3]:= v6 @kind object;
  #L20a966.  v6:= "FRAME_SIZE_ERROR length > %d: %d" @kind object;
  #L20a96a.  call temp:= `a`(v6, v5) @signature `Lokhttp3/internal/http2/d;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @kind static;
  #L20a970.  throw v2;
}
procedure `void` `goAway`(`okhttp3.internal.http2.i` v3 @kind this, `int` v4 , `okhttp3.internal.http2.a` v5 @kind object, `byte`[] v6 @kind object) @signature `Lokhttp3/internal/http2/i;.goAway:(ILokhttp3/internal/http2/a;[B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L20a984.  @monitorenter v3
  #L20a986.  v0:= v3.`okhttp3.internal.http2.i.j` @type ^`boolean` @kind boolean;
  #L20a98a.  if v0 != 0 then goto L20a9f0;
  #L20a98e.  v0:= v5.`okhttp3.internal.http2.a.f` @type ^`int`;
  #L20a992.  v1:= -1I;
  #L20a994.  v2:= 0I;
  #L20a996.  if v0 == v1 then goto L20a9de;
  #L20a99a.  v0:= length @variable v6;
  #L20a99c.  v0:= v0 + 8;
  #L20a9a0.  v1:= 7I;
  #L20a9a2.  call `frameHeader`(v3, v2, v0, v1, v2) @signature `Lokhttp3/internal/http2/i;.frameHeader:(IIBB)V` @kind virtual;
  #L20a9a8.  v0:= v3.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20a9ac.  call temp:= `writeInt`(v0, v4) @signature `Li/f;.writeInt:(I)Li/f;` @kind interface;
  #L20a9b2.  v4:= v3.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20a9b6.  v5:= v5.`okhttp3.internal.http2.a.f` @type ^`int`;
  #L20a9ba.  call temp:= `writeInt`(v4, v5) @signature `Li/f;.writeInt:(I)Li/f;` @kind interface;
  #L20a9c0.  v4:= length @variable v6;
  #L20a9c2.  if v4 <= 0 then goto L20a9d0;
  #L20a9c6.  v4:= v3.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20a9ca.  call temp:= `write`(v4, v6) @signature `Li/f;.write:([B)Li/f;` @kind interface;
  #L20a9d0.  v4:= v3.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20a9d4.  call `flush`(v4) @signature `Li/f;.flush:()V` @kind interface;
  #L20a9da.  @monitorexit v3
  #L20a9dc.  return @kind void;
  #L20a9de.  v4:= "errorCode.httpCode == -1" @kind object;
  #L20a9e2.  v5:= new `java.lang.Object`[v2];
  #L20a9e6.  call temp:= `a`(v4, v5) @signature `Lokhttp3/internal/http2/d;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @kind static;
  #L20a9ec.  v4:= 0I;
  #L20a9ee.  throw v4;
  #L20a9f0.  v4:= new `java.io.IOException`;
  #L20a9f4.  v5:= "closed" @kind object;
  #L20a9f8.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20a9fe.  throw v4;
  #L20aa00.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20aa02.  @monitorexit v3
  #L20aa04.  throw v4;
  catch `java.lang.Throwable` @[L20a986..L20a9da] goto L20aa00;
  catch `java.lang.Throwable` @[L20a9de..L20a9ec] goto L20aa00;
  catch `java.lang.Throwable` @[L20a9f0..L20aa00] goto L20aa00;
}
procedure `void` `headers`(`okhttp3.internal.http2.i` v6 @kind this, `boolean` v7 , `int` v8 , `java.util.List` v9 @kind object) @signature `Lokhttp3/internal/http2/i;.headers:(ZILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L20aa34.  @monitorenter v6
  #L20aa36.  v0:= v6.`okhttp3.internal.http2.i.j` @type ^`boolean` @kind boolean;
  #L20aa3a.  if v0 != 0 then goto L20aaa4;
  #L20aa3e.  v0:= v6.`okhttp3.internal.http2.i.k` @type ^`okhttp3.internal.http2.c$b` @kind object;
  #L20aa42.  call `a`(v0, v9) @signature `Lokhttp3/internal/http2/c$b;.a:(Ljava/util/List;)V` @kind virtual;
  #L20aa48.  v9:= v6.`okhttp3.internal.http2.i.h` @type ^`i.e` @kind object;
  #L20aa4c.  call temp:= `size`(v9) @signature `Li/e;.size:()J` @kind virtual;
  #L20aa52.  v0:= temp @kind wide;
  #L20aa54.  v9:= v6.`okhttp3.internal.http2.i.i` @type ^`int`;
  #L20aa58.  v2:= (`long`) v9 @kind i2l;
  #L20aa5a.  call temp:= `min`(v2, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L20aa60.  v2:= temp @kind wide;
  #L20aa62.  v9:= (`int`) v2 @kind l2i;
  #L20aa64.  v2:= (`long`) v9 @kind i2l;
  #L20aa66.  v4:= lcmp(v0, v2);
  #L20aa6a.  if v4 != 0 then goto L20aa72;
  #L20aa6e.  v5:= 4I;
  #L20aa70.  goto L20aa74;
  #L20aa72.  v5:= 0I;
  #L20aa74.  if v7 == 0 then goto L20aa7e;
  #L20aa78.  v7:= v5 ^| 1;
  #L20aa7c.  v5:= (`byte`) v7 @kind i2b;
  #L20aa7e.  v7:= 1I;
  #L20aa80.  call `frameHeader`(v6, v8, v9, v7, v5) @signature `Lokhttp3/internal/http2/i;.frameHeader:(IIBB)V` @kind virtual;
  #L20aa86.  v7:= v6.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20aa8a.  v9:= v6.`okhttp3.internal.http2.i.h` @type ^`i.e` @kind object;
  #L20aa8e.  call `write`(v7, v9, v2) @signature `Li/x;.write:(Li/e;J)V` @kind interface;
  #L20aa94.  if v4 <= 0 then goto L20aaa0;
  #L20aa98.  v0:= v0 - v2 @kind long;
  #L20aa9a.  call `a`(v6, v8, v0) @signature `Lokhttp3/internal/http2/i;.a:(IJ)V` @kind direct;
  #L20aaa0.  @monitorexit v6
  #L20aaa2.  return @kind void;
  #L20aaa4.  v7:= new `java.io.IOException`;
  #L20aaa8.  v8:= "closed" @kind object;
  #L20aaac.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20aab2.  throw v7;
  #L20aab4.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20aab6.  @monitorexit v6
  #L20aab8.  throw v7;
  catch `java.lang.Throwable` @[L20aa36..L20aaa0] goto L20aab4;
  catch `java.lang.Throwable` @[L20aaa4..L20aab4] goto L20aab4;
}
procedure `int` `maxDataLength`(`okhttp3.internal.http2.i` v1 @kind this) @signature `Lokhttp3/internal/http2/i;.maxDataLength:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20a5c8.  v0:= v1.`okhttp3.internal.http2.i.i` @type ^`int`;
  #L20a5cc.  return v0;
}
procedure `void` `ping`(`okhttp3.internal.http2.i` v3 @kind this, `boolean` v4 , `int` v5 , `int` v6 ) @signature `Lokhttp3/internal/http2/i;.ping:(ZII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L20aae0.  @monitorenter v3
  #L20aae2.  v0:= v3.`okhttp3.internal.http2.i.j` @type ^`boolean` @kind boolean;
  #L20aae6.  if v0 != 0 then goto L20ab24;
  #L20aaea.  v0:= 8I;
  #L20aaee.  v1:= 6I;
  #L20aaf0.  v2:= 0I;
  #L20aaf2.  if v4 == 0 then goto L20aafa;
  #L20aaf6.  v4:= 1I;
  #L20aaf8.  goto L20aafc;
  #L20aafa.  v4:= 0I;
  #L20aafc.  call `frameHeader`(v3, v2, v0, v1, v4) @signature `Lokhttp3/internal/http2/i;.frameHeader:(IIBB)V` @kind virtual;
  #L20ab02.  v4:= v3.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20ab06.  call temp:= `writeInt`(v4, v5) @signature `Li/f;.writeInt:(I)Li/f;` @kind interface;
  #L20ab0c.  v4:= v3.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20ab10.  call temp:= `writeInt`(v4, v6) @signature `Li/f;.writeInt:(I)Li/f;` @kind interface;
  #L20ab16.  v4:= v3.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20ab1a.  call `flush`(v4) @signature `Li/f;.flush:()V` @kind interface;
  #L20ab20.  @monitorexit v3
  #L20ab22.  return @kind void;
  #L20ab24.  v4:= new `java.io.IOException`;
  #L20ab28.  v5:= "closed" @kind object;
  #L20ab2c.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20ab32.  throw v4;
  #L20ab34.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20ab36.  @monitorexit v3
  #L20ab38.  throw v4;
  catch `java.lang.Throwable` @[L20aae2..L20ab20] goto L20ab34;
  catch `java.lang.Throwable` @[L20ab24..L20ab34] goto L20ab34;
}
procedure `void` `pushPromise`(`okhttp3.internal.http2.i` v8 @kind this, `int` v9 , `int` v10 , `java.util.List` v11 @kind object) @signature `Lokhttp3/internal/http2/i;.pushPromise:(IILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L20ab60.  @monitorenter v8
  #L20ab62.  v0:= v8.`okhttp3.internal.http2.i.j` @type ^`boolean` @kind boolean;
  #L20ab66.  if v0 != 0 then goto L20abde;
  #L20ab6a.  v0:= v8.`okhttp3.internal.http2.i.k` @type ^`okhttp3.internal.http2.c$b` @kind object;
  #L20ab6e.  call `a`(v0, v11) @signature `Lokhttp3/internal/http2/c$b;.a:(Ljava/util/List;)V` @kind virtual;
  #L20ab74.  v11:= v8.`okhttp3.internal.http2.i.h` @type ^`i.e` @kind object;
  #L20ab78.  call temp:= `size`(v11) @signature `Li/e;.size:()J` @kind virtual;
  #L20ab7e.  v0:= temp @kind wide;
  #L20ab80.  v11:= v8.`okhttp3.internal.http2.i.i` @type ^`int`;
  #L20ab84.  v2:= 4I;
  #L20ab86.  v11:= v11 - v2 @kind int;
  #L20ab88.  v3:= (`long`) v11 @kind i2l;
  #L20ab8a.  call temp:= `min`(v3, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L20ab90.  v3:= temp @kind wide;
  #L20ab92.  v11:= (`int`) v3 @kind l2i;
  #L20ab94.  v3:= 5I;
  #L20ab96.  v4:= (`long`) v11 @kind i2l;
  #L20ab98.  v6:= lcmp(v0, v4);
  #L20ab9c.  if v6 != 0 then goto L20aba4;
  #L20aba0.  v7:= 4I;
  #L20aba2.  goto L20aba6;
  #L20aba4.  v7:= 0I;
  #L20aba6.  v11:= v11 + v2 @kind int;
  #L20aba8.  call `frameHeader`(v8, v9, v11, v3, v7) @signature `Lokhttp3/internal/http2/i;.frameHeader:(IIBB)V` @kind virtual;
  #L20abae.  v11:= v8.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20abb2.  v2:= 2147483647I;
  #L20abb8.  v10:= v10 ^& v2 @kind int;
  #L20abba.  call temp:= `writeInt`(v11, v10) @signature `Li/f;.writeInt:(I)Li/f;` @kind interface;
  #L20abc0.  v10:= v8.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20abc4.  v11:= v8.`okhttp3.internal.http2.i.h` @type ^`i.e` @kind object;
  #L20abc8.  call `write`(v10, v11, v4) @signature `Li/x;.write:(Li/e;J)V` @kind interface;
  #L20abce.  if v6 <= 0 then goto L20abda;
  #L20abd2.  v0:= v0 - v4 @kind long;
  #L20abd4.  call `a`(v8, v9, v0) @signature `Lokhttp3/internal/http2/i;.a:(IJ)V` @kind direct;
  #L20abda.  @monitorexit v8
  #L20abdc.  return @kind void;
  #L20abde.  v9:= new `java.io.IOException`;
  #L20abe2.  v10:= "closed" @kind object;
  #L20abe6.  call `<init>`(v9, v10) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20abec.  throw v9;
  #L20abee.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20abf0.  @monitorexit v8
  #L20abf2.  throw v9;
  catch `java.lang.Throwable` @[L20ab62..L20abda] goto L20abee;
  catch `java.lang.Throwable` @[L20abde..L20abee] goto L20abee;
}
procedure `void` `rstStream`(`okhttp3.internal.http2.i` v3 @kind this, `int` v4 , `okhttp3.internal.http2.a` v5 @kind object) @signature `Lokhttp3/internal/http2/i;.rstStream:(ILokhttp3/internal/http2/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L20ac18.  @monitorenter v3
  #L20ac1a.  v0:= v3.`okhttp3.internal.http2.i.j` @type ^`boolean` @kind boolean;
  #L20ac1e.  if v0 != 0 then goto L20ac60;
  #L20ac22.  v0:= v5.`okhttp3.internal.http2.a.f` @type ^`int`;
  #L20ac26.  v1:= -1I;
  #L20ac28.  if v0 == v1 then goto L20ac54;
  #L20ac2c.  v0:= 4I;
  #L20ac2e.  v1:= 3I;
  #L20ac30.  v2:= 0I;
  #L20ac32.  call `frameHeader`(v3, v4, v0, v1, v2) @signature `Lokhttp3/internal/http2/i;.frameHeader:(IIBB)V` @kind virtual;
  #L20ac38.  v4:= v3.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20ac3c.  v5:= v5.`okhttp3.internal.http2.a.f` @type ^`int`;
  #L20ac40.  call temp:= `writeInt`(v4, v5) @signature `Li/f;.writeInt:(I)Li/f;` @kind interface;
  #L20ac46.  v4:= v3.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20ac4a.  call `flush`(v4) @signature `Li/f;.flush:()V` @kind interface;
  #L20ac50.  @monitorexit v3
  #L20ac52.  return @kind void;
  #L20ac54.  v4:= new `java.lang.IllegalArgumentException`;
  #L20ac58.  call `<init>`(v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L20ac5e.  throw v4;
  #L20ac60.  v4:= new `java.io.IOException`;
  #L20ac64.  v5:= "closed" @kind object;
  #L20ac68.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20ac6e.  throw v4;
  #L20ac70.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20ac72.  @monitorexit v3
  #L20ac74.  throw v4;
  catch `java.lang.Throwable` @[L20ac1a..L20ac50] goto L20ac70;
  catch `java.lang.Throwable` @[L20ac54..L20ac70] goto L20ac70;
}
procedure `void` `settings`(`okhttp3.internal.http2.i` v4 @kind this, `okhttp3.internal.http2.l` v5 @kind object) @signature `Lokhttp3/internal/http2/i;.settings:(Lokhttp3/internal/http2/l;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20ac9c.  @monitorenter v4
  #L20ac9e.  v0:= v4.`okhttp3.internal.http2.i.j` @type ^`boolean` @kind boolean;
  #L20aca2.  if v0 != 0 then goto L20ad16;
  #L20aca6.  call temp:= `d`(v5) @signature `Lokhttp3/internal/http2/l;.d:()I` @kind virtual;
  #L20acac.  v0:= temp;
  #L20acae.  v0:= v0 * 6;
  #L20acb2.  v1:= 0I;
  #L20acb4.  v2:= 4I;
  #L20acb6.  call `frameHeader`(v4, v1, v0, v2, v1) @signature `Lokhttp3/internal/http2/i;.frameHeader:(IIBB)V` @kind virtual;
  #L20acbc.  v0:= 10I;
  #L20acc0.  if v1 >= v0 then goto L20ad08;
  #L20acc4.  call temp:= `d`(v5, v1) @signature `Lokhttp3/internal/http2/l;.d:(I)Z` @kind virtual;
  #L20acca.  v0:= temp;
  #L20accc.  if v0 != 0 then goto L20acd2;
  #L20acd0.  goto L20ad02;
  #L20acd2.  if v1 != v2 then goto L20acda;
  #L20acd6.  v0:= 3I;
  #L20acd8.  goto L20ace6;
  #L20acda.  v0:= 7I;
  #L20acdc.  if v1 != v0 then goto L20ace4;
  #L20ace0.  v0:= 4I;
  #L20ace2.  goto L20ace6;
  #L20ace4.  v0:= v1;
  #L20ace6.  v3:= v4.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20acea.  call temp:= `writeShort`(v3, v0) @signature `Li/f;.writeShort:(I)Li/f;` @kind interface;
  #L20acf0.  v0:= v4.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20acf4.  call temp:= `a`(v5, v1) @signature `Lokhttp3/internal/http2/l;.a:(I)I` @kind virtual;
  #L20acfa.  v3:= temp;
  #L20acfc.  call temp:= `writeInt`(v0, v3) @signature `Li/f;.writeInt:(I)Li/f;` @kind interface;
  #L20ad02.  v1:= v1 + 1;
  #L20ad06.  goto L20acbc;
  #L20ad08.  v5:= v4.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20ad0c.  call `flush`(v5) @signature `Li/f;.flush:()V` @kind interface;
  #L20ad12.  @monitorexit v4
  #L20ad14.  return @kind void;
  #L20ad16.  v5:= new `java.io.IOException`;
  #L20ad1a.  v0:= "closed" @kind object;
  #L20ad1e.  call `<init>`(v5, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20ad24.  throw v5;
  #L20ad26.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20ad28.  @monitorexit v4
  #L20ad2a.  throw v5;
  catch `java.lang.Throwable` @[L20ac9e..L20ad12] goto L20ad26;
  catch `java.lang.Throwable` @[L20ad16..L20ad26] goto L20ad26;
}
procedure `void` `windowUpdate`(`okhttp3.internal.http2.i` v4 @kind this, `int` v5 , `long` v6 ) @signature `Lokhttp3/internal/http2/i;.windowUpdate:(IJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20ad50.  @monitorenter v4
  #L20ad52.  v0:= v4.`okhttp3.internal.http2.i.j` @type ^`boolean` @kind boolean;
  #L20ad56.  if v0 != 0 then goto L20adbc;
  #L20ad5a.  v0:= 0L;
  #L20ad5e.  v2:= 0I;
  #L20ad60.  v3:= lcmp(v6, v0);
  #L20ad64.  if v3 == 0 then goto L20ad9c;
  #L20ad68.  v0:= 2147483647L;
  #L20ad6e.  v3:= lcmp(v6, v0);
  #L20ad72.  if v3 > 0 then goto L20ad9c;
  #L20ad76.  v0:= 4I;
  #L20ad78.  v1:= 8I;
  #L20ad7c.  call `frameHeader`(v4, v5, v0, v1, v2) @signature `Lokhttp3/internal/http2/i;.frameHeader:(IIBB)V` @kind virtual;
  #L20ad82.  v5:= v4.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20ad86.  v7:= (`int`) v6 @kind l2i;
  #L20ad88.  call temp:= `writeInt`(v5, v7) @signature `Li/f;.writeInt:(I)Li/f;` @kind interface;
  #L20ad8e.  v5:= v4.`okhttp3.internal.http2.i.f` @type ^`i.f` @kind object;
  #L20ad92.  call `flush`(v5) @signature `Li/f;.flush:()V` @kind interface;
  #L20ad98.  @monitorexit v4
  #L20ad9a.  return @kind void;
  #L20ad9c.  v5:= "windowSizeIncrement == 0 || windowSizeIncrement > 0x7fffffffL: %s" @kind object;
  #L20ada0.  v0:= 1I;
  #L20ada2.  v0:= new `java.lang.Object`[v0];
  #L20ada6.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L20adac.  v6:= temp @kind object;
  #L20adae.  v0[v2]:= v6 @kind object;
  #L20adb2.  call temp:= `a`(v5, v0) @signature `Lokhttp3/internal/http2/d;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @kind static;
  #L20adb8.  v5:= 0I;
  #L20adba.  throw v5;
  #L20adbc.  v5:= new `java.io.IOException`;
  #L20adc0.  v6:= "closed" @kind object;
  #L20adc4.  call `<init>`(v5, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20adca.  throw v5;
  #L20adcc.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20adce.  @monitorexit v4
  #L20add0.  throw v5;
  catch `java.lang.Throwable` @[L20ad52..L20ad98] goto L20adcc;
  catch `java.lang.Throwable` @[L20ad9c..L20adb8] goto L20adcc;
  catch `java.lang.Throwable` @[L20adbc..L20adcc] goto L20adcc;
}
