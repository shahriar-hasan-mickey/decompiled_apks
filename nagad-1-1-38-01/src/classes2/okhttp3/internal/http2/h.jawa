record `okhttp3.internal.http2.h` @kind class @AccessFlag PUBLIC_FINAL {
  `long` `okhttp3.internal.http2.h.a` @AccessFlag ;
  `long` `okhttp3.internal.http2.h.b` @AccessFlag ;
  `int` `okhttp3.internal.http2.h.c` @AccessFlag FINAL;
  `okhttp3.internal.http2.e` `okhttp3.internal.http2.h.d` @AccessFlag FINAL;
  `java.util.Deque` `okhttp3.internal.http2.h.e` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.http2.h.f` @AccessFlag PRIVATE;
  `okhttp3.internal.http2.h$b` `okhttp3.internal.http2.h.g` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.http2.h$a` `okhttp3.internal.http2.h.h` @AccessFlag FINAL;
  `okhttp3.internal.http2.h$c` `okhttp3.internal.http2.h.i` @AccessFlag FINAL;
  `okhttp3.internal.http2.h$c` `okhttp3.internal.http2.h.j` @AccessFlag FINAL;
  `okhttp3.internal.http2.a` `okhttp3.internal.http2.h.k` @AccessFlag ;
  `java.io.IOException` `okhttp3.internal.http2.h.l` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.internal.http2.h` v2 @kind this, `int` v3 , `okhttp3.internal.http2.e` v4 @kind object, `boolean` v5 , `boolean` v6 , `h.y` v7 @kind object) @signature `Lokhttp3/internal/http2/h;.<init>:(ILokhttp3/internal/http2/e;ZZLh/y;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L20a214.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20a21a.  v0:= 0L;
  #L20a21e.  v2.`okhttp3.internal.http2.h.a` @type ^`long` := v0 @kind wide;
  #L20a222.  v0:= new `java.util.ArrayDeque`;
  #L20a226.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L20a22c.  v2.`okhttp3.internal.http2.h.e` @type ^`java.util.Deque` := v0 @kind object;
  #L20a230.  v0:= new `okhttp3.internal.http2.h$c`;
  #L20a234.  call `<init>`(v0, v2) @signature `Lokhttp3/internal/http2/h$c;.<init>:(Lokhttp3/internal/http2/h;)V` @kind direct;
  #L20a23a.  v2.`okhttp3.internal.http2.h.i` @type ^`okhttp3.internal.http2.h$c` := v0 @kind object;
  #L20a23e.  v0:= new `okhttp3.internal.http2.h$c`;
  #L20a242.  call `<init>`(v0, v2) @signature `Lokhttp3/internal/http2/h$c;.<init>:(Lokhttp3/internal/http2/h;)V` @kind direct;
  #L20a248.  v2.`okhttp3.internal.http2.h.j` @type ^`okhttp3.internal.http2.h$c` := v0 @kind object;
  #L20a24c.  if v4 == 0 then goto L20a2f8;
  #L20a250.  v2.`okhttp3.internal.http2.h.c` @type ^`int` := v3;
  #L20a254.  v2.`okhttp3.internal.http2.h.d` @type ^`okhttp3.internal.http2.e` := v4 @kind object;
  #L20a258.  v3:= v4.`okhttp3.internal.http2.e.y` @type ^`okhttp3.internal.http2.l` @kind object;
  #L20a25c.  call temp:= `c`(v3) @signature `Lokhttp3/internal/http2/l;.c:()I` @kind virtual;
  #L20a262.  v3:= temp;
  #L20a264.  v0:= (`long`) v3 @kind i2l;
  #L20a266.  v2.`okhttp3.internal.http2.h.b` @type ^`long` := v0 @kind wide;
  #L20a26a.  v3:= new `okhttp3.internal.http2.h$b`;
  #L20a26e.  v4:= v4.`okhttp3.internal.http2.e.x` @type ^`okhttp3.internal.http2.l` @kind object;
  #L20a272.  call temp:= `c`(v4) @signature `Lokhttp3/internal/http2/l;.c:()I` @kind virtual;
  #L20a278.  v4:= temp;
  #L20a27a.  v0:= (`long`) v4 @kind i2l;
  #L20a27c.  call `<init>`(v3, v2, v0) @signature `Lokhttp3/internal/http2/h$b;.<init>:(Lokhttp3/internal/http2/h;J)V` @kind direct;
  #L20a282.  v2.`okhttp3.internal.http2.h.g` @type ^`okhttp3.internal.http2.h$b` := v3 @kind object;
  #L20a286.  v3:= new `okhttp3.internal.http2.h$a`;
  #L20a28a.  call `<init>`(v3, v2) @signature `Lokhttp3/internal/http2/h$a;.<init>:(Lokhttp3/internal/http2/h;)V` @kind direct;
  #L20a290.  v2.`okhttp3.internal.http2.h.h` @type ^`okhttp3.internal.http2.h$a` := v3 @kind object;
  #L20a294.  v3:= v2.`okhttp3.internal.http2.h.g` @type ^`okhttp3.internal.http2.h$b` @kind object;
  #L20a298.  v3.`okhttp3.internal.http2.h$b.k` @type ^`boolean` := v6 @kind boolean;
  #L20a29c.  v3:= v2.`okhttp3.internal.http2.h.h` @type ^`okhttp3.internal.http2.h$a` @kind object;
  #L20a2a0.  v3.`okhttp3.internal.http2.h$a.i` @type ^`boolean` := v5 @kind boolean;
  #L20a2a4.  if v7 == 0 then goto L20a2b2;
  #L20a2a8.  v3:= v2.`okhttp3.internal.http2.h.e` @type ^`java.util.Deque` @kind object;
  #L20a2ac.  call temp:= `add`(v3, v7) @signature `Ljava/util/Deque;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L20a2b2.  call temp:= `isLocallyInitiated`(v2) @signature `Lokhttp3/internal/http2/h;.isLocallyInitiated:()Z` @kind virtual;
  #L20a2b8.  v3:= temp;
  #L20a2ba.  if v3 == 0 then goto L20a2d4;
  #L20a2be.  if v7 != 0 then goto L20a2c4;
  #L20a2c2.  goto L20a2d4;
  #L20a2c4.  v3:= new `java.lang.IllegalStateException`;
  #L20a2c8.  v4:= "locally-initiated streams shouldn't have headers yet" @kind object;
  #L20a2cc.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20a2d2.  throw v3;
  #L20a2d4.  call temp:= `isLocallyInitiated`(v2) @signature `Lokhttp3/internal/http2/h;.isLocallyInitiated:()Z` @kind virtual;
  #L20a2da.  v3:= temp;
  #L20a2dc.  if v3 != 0 then goto L20a2f6;
  #L20a2e0.  if v7 == 0 then goto L20a2e6;
  #L20a2e4.  goto L20a2f6;
  #L20a2e6.  v3:= new `java.lang.IllegalStateException`;
  #L20a2ea.  v4:= "remotely-initiated streams should have headers" @kind object;
  #L20a2ee.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20a2f4.  throw v3;
  #L20a2f6.  return @kind void;
  #L20a2f8.  v3:= new `java.lang.NullPointerException`;
  #L20a2fc.  v4:= "connection == null" @kind object;
  #L20a300.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20a306.  throw v3;
}
procedure `boolean` `a`(`okhttp3.internal.http2.h` v2 @kind this, `okhttp3.internal.http2.a` v3 @kind object, `java.io.IOException` v4 @kind object) @signature `Lokhttp3/internal/http2/h;.a:(Lokhttp3/internal/http2/a;Ljava/io/IOException;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L209f68.  @monitorenter v2
  #L209f6a.  v0:= v2.`okhttp3.internal.http2.h.k` @type ^`okhttp3.internal.http2.a` @kind object;
  #L209f6e.  v1:= 0I;
  #L209f70.  if v0 == 0 then goto L209f78;
  #L209f74.  @monitorexit v2
  #L209f76.  return v1;
  #L209f78.  v0:= v2.`okhttp3.internal.http2.h.g` @type ^`okhttp3.internal.http2.h$b` @kind object;
  #L209f7c.  v0:= v0.`okhttp3.internal.http2.h$b.k` @type ^`boolean` @kind boolean;
  #L209f80.  if v0 == 0 then goto L209f94;
  #L209f84.  v0:= v2.`okhttp3.internal.http2.h.h` @type ^`okhttp3.internal.http2.h$a` @kind object;
  #L209f88.  v0:= v0.`okhttp3.internal.http2.h$a.i` @type ^`boolean` @kind boolean;
  #L209f8c.  if v0 == 0 then goto L209f94;
  #L209f90.  @monitorexit v2
  #L209f92.  return v1;
  #L209f94.  v2.`okhttp3.internal.http2.h.k` @type ^`okhttp3.internal.http2.a` := v3 @kind object;
  #L209f98.  v2.`okhttp3.internal.http2.h.l` @type ^`java.io.IOException` := v4 @kind object;
  #L209f9c.  call `notifyAll`(v2) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L209fa2.  @monitorexit v2
  #L209fa4.  v3:= v2.`okhttp3.internal.http2.h.d` @type ^`okhttp3.internal.http2.e` @kind object;
  #L209fa8.  v4:= v2.`okhttp3.internal.http2.h.c` @type ^`int`;
  #L209fac.  call temp:= `c`(v3, v4) @signature `Lokhttp3/internal/http2/e;.c:(I)Lokhttp3/internal/http2/h;` @kind virtual;
  #L209fb2.  v3:= 1I;
  #L209fb4.  return v3;
  #L209fb6.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L209fb8.  @monitorexit v2
  #L209fba.  throw v3;
  catch `java.lang.Throwable` @[L209f6a..L209fa4] goto L209fb6;
  catch `java.lang.Throwable` @[L209fb8..L209fba] goto L209fb6;
}
procedure `void` `a`(`okhttp3.internal.http2.h` v2 @kind this) @signature `Lokhttp3/internal/http2/h;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L20a348.  @monitorenter v2
  #L20a34a.  v0:= v2.`okhttp3.internal.http2.h.g` @type ^`okhttp3.internal.http2.h$b` @kind object;
  #L20a34e.  v0:= v0.`okhttp3.internal.http2.h$b.k` @type ^`boolean` @kind boolean;
  #L20a352.  if v0 != 0 then goto L20a37e;
  #L20a356.  v0:= v2.`okhttp3.internal.http2.h.g` @type ^`okhttp3.internal.http2.h$b` @kind object;
  #L20a35a.  v0:= v0.`okhttp3.internal.http2.h$b.j` @type ^`boolean` @kind boolean;
  #L20a35e.  if v0 == 0 then goto L20a37e;
  #L20a362.  v0:= v2.`okhttp3.internal.http2.h.h` @type ^`okhttp3.internal.http2.h$a` @kind object;
  #L20a366.  v0:= v0.`okhttp3.internal.http2.h$a.i` @type ^`boolean` @kind boolean;
  #L20a36a.  if v0 != 0 then goto L20a37a;
  #L20a36e.  v0:= v2.`okhttp3.internal.http2.h.h` @type ^`okhttp3.internal.http2.h$a` @kind object;
  #L20a372.  v0:= v0.`okhttp3.internal.http2.h$a.h` @type ^`boolean` @kind boolean;
  #L20a376.  if v0 == 0 then goto L20a37e;
  #L20a37a.  v0:= 1I;
  #L20a37c.  goto L20a380;
  #L20a37e.  v0:= 0I;
  #L20a380.  call temp:= `isOpen`(v2) @signature `Lokhttp3/internal/http2/h;.isOpen:()Z` @kind virtual;
  #L20a386.  v1:= temp;
  #L20a388.  @monitorexit v2
  #L20a38a.  if v0 == 0 then goto L20a39c;
  #L20a38e.  v0:= `@@okhttp3.internal.http2.a.l` @type ^`okhttp3.internal.http2.a` @kind object;
  #L20a392.  v1:= 0I;
  #L20a394.  call `close`(v2, v0, v1) @signature `Lokhttp3/internal/http2/h;.close:(Lokhttp3/internal/http2/a;Ljava/io/IOException;)V` @kind virtual;
  #L20a39a.  goto L20a3ae;
  #L20a39c.  if v1 != 0 then goto L20a3ae;
  #L20a3a0.  v0:= v2.`okhttp3.internal.http2.h.d` @type ^`okhttp3.internal.http2.e` @kind object;
  #L20a3a4.  v1:= v2.`okhttp3.internal.http2.h.c` @type ^`int`;
  #L20a3a8.  call temp:= `c`(v0, v1) @signature `Lokhttp3/internal/http2/e;.c:(I)Lokhttp3/internal/http2/h;` @kind virtual;
  #L20a3ae.  return @kind void;
  #L20a3b0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20a3b2.  @monitorexit v2
  #L20a3b4.  throw v0;
  catch `java.lang.Throwable` @[L20a34a..L20a38a] goto L20a3b0;
  catch `java.lang.Throwable` @[L20a3b2..L20a3b4] goto L20a3b0;
}
procedure `void` `a`(`okhttp3.internal.http2.h` v3 @kind this, `long` v4 ) @signature `Lokhttp3/internal/http2/h;.a:(J)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L20a318.  v0:= v3.`okhttp3.internal.http2.h.b` @type ^`long` @kind wide;
  #L20a31c.  v0:= v0 + v4 @kind long;
  #L20a31e.  v3.`okhttp3.internal.http2.h.b` @type ^`long` := v0 @kind wide;
  #L20a322.  v0:= 0L;
  #L20a326.  v2:= lcmp(v4, v0);
  #L20a32a.  if v2 <= 0 then goto L20a334;
  #L20a32e.  call `notifyAll`(v3) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L20a334.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.http2.h` v2 @kind this, `h.y` v3 @kind object, `boolean` v4 ) @signature `Lokhttp3/internal/http2/h;.a:(Lh/y;Z)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L20a4c0.  @monitorenter v2
  #L20a4c2.  v0:= v2.`okhttp3.internal.http2.h.f` @type ^`boolean` @kind boolean;
  #L20a4c6.  v1:= 1I;
  #L20a4c8.  if v0 == 0 then goto L20a4de;
  #L20a4cc.  if v4 != 0 then goto L20a4d2;
  #L20a4d0.  goto L20a4de;
  #L20a4d2.  v0:= v2.`okhttp3.internal.http2.h.g` @type ^`okhttp3.internal.http2.h$b` @kind object;
  #L20a4d6.  call temp:= `a`(v0, v3) @signature `Lokhttp3/internal/http2/h$b;.a:(Lokhttp3/internal/http2/h$b;Lh/y;)Lh/y;` @kind static;
  #L20a4dc.  goto L20a4ec;
  #L20a4de.  v2.`okhttp3.internal.http2.h.f` @type ^`boolean` := v1 @kind boolean;
  #L20a4e2.  v0:= v2.`okhttp3.internal.http2.h.e` @type ^`java.util.Deque` @kind object;
  #L20a4e6.  call temp:= `add`(v0, v3) @signature `Ljava/util/Deque;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L20a4ec.  if v4 == 0 then goto L20a4f8;
  #L20a4f0.  v3:= v2.`okhttp3.internal.http2.h.g` @type ^`okhttp3.internal.http2.h$b` @kind object;
  #L20a4f4.  v3.`okhttp3.internal.http2.h$b.k` @type ^`boolean` := v1 @kind boolean;
  #L20a4f8.  call temp:= `isOpen`(v2) @signature `Lokhttp3/internal/http2/h;.isOpen:()Z` @kind virtual;
  #L20a4fe.  v3:= temp;
  #L20a500.  call `notifyAll`(v2) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L20a506.  @monitorexit v2
  #L20a508.  if v3 != 0 then goto L20a51a;
  #L20a50c.  v3:= v2.`okhttp3.internal.http2.h.d` @type ^`okhttp3.internal.http2.e` @kind object;
  #L20a510.  v4:= v2.`okhttp3.internal.http2.h.c` @type ^`int`;
  #L20a514.  call temp:= `c`(v3, v4) @signature `Lokhttp3/internal/http2/e;.c:(I)Lokhttp3/internal/http2/h;` @kind virtual;
  #L20a51a.  return @kind void;
  #L20a51c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20a51e.  @monitorexit v2
  #L20a520.  throw v3;
  catch `java.lang.Throwable` @[L20a4c2..L20a508] goto L20a51c;
  catch `java.lang.Throwable` @[L20a51e..L20a520] goto L20a51c;
}
procedure `void` `a`(`okhttp3.internal.http2.h` v3 @kind this, `i.g` v4 @kind object, `int` v5 ) @signature `Lokhttp3/internal/http2/h;.a:(Li/g;I)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L20a4a0.  v0:= v3.`okhttp3.internal.http2.h.g` @type ^`okhttp3.internal.http2.h$b` @kind object;
  #L20a4a4.  v1:= (`long`) v5 @kind i2l;
  #L20a4a6.  call `a`(v0, v4, v1) @signature `Lokhttp3/internal/http2/h$b;.a:(Li/g;J)V` @kind virtual;
  #L20a4ac.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.http2.h` v1 @kind this, `okhttp3.internal.http2.a` v2 @kind object) @signature `Lokhttp3/internal/http2/h;.a:(Lokhttp3/internal/http2/a;)V` @AccessFlag  {
    temp;
    v0;

  #L20a548.  @monitorenter v1
  #L20a54a.  v0:= v1.`okhttp3.internal.http2.h.k` @type ^`okhttp3.internal.http2.a` @kind object;
  #L20a54e.  if v0 != 0 then goto L20a55c;
  #L20a552.  v1.`okhttp3.internal.http2.h.k` @type ^`okhttp3.internal.http2.a` := v2 @kind object;
  #L20a556.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L20a55c.  @monitorexit v1
  #L20a55e.  return @kind void;
  #L20a560.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20a562.  @monitorexit v1
  #L20a564.  throw v2;
  catch `java.lang.Throwable` @[L20a54a..L20a55c] goto L20a560;
}
procedure `void` `b`(`okhttp3.internal.http2.h` v2 @kind this) @signature `Lokhttp3/internal/http2/h;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L20a3dc.  v0:= v2.`okhttp3.internal.http2.h.h` @type ^`okhttp3.internal.http2.h$a` @kind object;
  #L20a3e0.  v1:= v0.`okhttp3.internal.http2.h$a.h` @type ^`boolean` @kind boolean;
  #L20a3e4.  if v1 != 0 then goto L20a420;
  #L20a3e8.  v0:= v0.`okhttp3.internal.http2.h$a.i` @type ^`boolean` @kind boolean;
  #L20a3ec.  if v0 != 0 then goto L20a410;
  #L20a3f0.  v0:= v2.`okhttp3.internal.http2.h.k` @type ^`okhttp3.internal.http2.a` @kind object;
  #L20a3f4.  if v0 == 0 then goto L20a40e;
  #L20a3f8.  v1:= v2.`okhttp3.internal.http2.h.l` @type ^`java.io.IOException` @kind object;
  #L20a3fc.  if v1 == 0 then goto L20a402;
  #L20a400.  goto L20a40c;
  #L20a402.  v1:= new `okhttp3.internal.http2.StreamResetException`;
  #L20a406.  call `<init>`(v1, v0) @signature `Lokhttp3/internal/http2/StreamResetException;.<init>:(Lokhttp3/internal/http2/a;)V` @kind direct;
  #L20a40c.  throw v1;
  #L20a40e.  return @kind void;
  #L20a410.  v0:= new `java.io.IOException`;
  #L20a414.  v1:= "stream finished" @kind object;
  #L20a418.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20a41e.  throw v0;
  #L20a420.  v0:= new `java.io.IOException`;
  #L20a424.  v1:= "stream closed" @kind object;
  #L20a428.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20a42e.  throw v0;
}
procedure `void` `c`(`okhttp3.internal.http2.h` v1 @kind this) @signature `Lokhttp3/internal/http2/h;.c:()V` @AccessFlag  {
    temp;
    v0;

  #L20a584.  call `wait`(v1) @signature `Ljava/lang/Object;.wait:()V` @kind virtual;
  #L20a58a.  return @kind void;
  #L20a58c.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L20a592.  v0:= temp @kind object;
  #L20a594.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L20a59a.  v0:= new `java.io.InterruptedIOException`;
  #L20a59e.  call `<init>`(v0) @signature `Ljava/io/InterruptedIOException;.<init>:()V` @kind direct;
  #L20a5a4.  throw v0;
  catch `java.lang.InterruptedException` @[L20a584..L20a58a] goto L20a58c;
}
procedure `void` `close`(`okhttp3.internal.http2.h` v1 @kind this, `okhttp3.internal.http2.a` v2 @kind object, `java.io.IOException` v3 @kind object) @signature `Lokhttp3/internal/http2/h;.close:(Lokhttp3/internal/http2/a;Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20a440.  call temp:= `a`(v1, v2, v3) @signature `Lokhttp3/internal/http2/h;.a:(Lokhttp3/internal/http2/a;Ljava/io/IOException;)Z` @kind direct;
  #L20a446.  v3:= temp;
  #L20a448.  if v3 != 0 then goto L20a44e;
  #L20a44c.  return @kind void;
  #L20a44e.  v3:= v1.`okhttp3.internal.http2.h.d` @type ^`okhttp3.internal.http2.e` @kind object;
  #L20a452.  v0:= v1.`okhttp3.internal.http2.h.c` @type ^`int`;
  #L20a456.  call `b`(v3, v0, v2) @signature `Lokhttp3/internal/http2/e;.b:(ILokhttp3/internal/http2/a;)V` @kind virtual;
  #L20a45c.  return @kind void;
}
procedure `void` `closeLater`(`okhttp3.internal.http2.h` v2 @kind this, `okhttp3.internal.http2.a` v3 @kind object) @signature `Lokhttp3/internal/http2/h;.closeLater:(Lokhttp3/internal/http2/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20a470.  v0:= 0I;
  #L20a472.  call temp:= `a`(v2, v3, v0) @signature `Lokhttp3/internal/http2/h;.a:(Lokhttp3/internal/http2/a;Ljava/io/IOException;)Z` @kind direct;
  #L20a478.  v0:= temp;
  #L20a47a.  if v0 != 0 then goto L20a480;
  #L20a47e.  return @kind void;
  #L20a480.  v0:= v2.`okhttp3.internal.http2.h.d` @type ^`okhttp3.internal.http2.e` @kind object;
  #L20a484.  v1:= v2.`okhttp3.internal.http2.h.c` @type ^`int`;
  #L20a488.  call `c`(v0, v1, v3) @signature `Lokhttp3/internal/http2/e;.c:(ILokhttp3/internal/http2/a;)V` @kind virtual;
  #L20a48e.  return @kind void;
}
procedure `int` `getId`(`okhttp3.internal.http2.h` v1 @kind this) @signature `Lokhttp3/internal/http2/h;.getId:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20a094.  v0:= v1.`okhttp3.internal.http2.h.c` @type ^`int`;
  #L20a098.  return v0;
}
procedure `i.x` `getSink`(`okhttp3.internal.http2.h` v2 @kind this) @signature `Lokhttp3/internal/http2/h;.getSink:()Li/x;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20a170.  @monitorenter v2
  #L20a172.  v0:= v2.`okhttp3.internal.http2.h.f` @type ^`boolean` @kind boolean;
  #L20a176.  if v0 != 0 then goto L20a198;
  #L20a17a.  call temp:= `isLocallyInitiated`(v2) @signature `Lokhttp3/internal/http2/h;.isLocallyInitiated:()Z` @kind virtual;
  #L20a180.  v0:= temp;
  #L20a182.  if v0 == 0 then goto L20a188;
  #L20a186.  goto L20a198;
  #L20a188.  v0:= new `java.lang.IllegalStateException`;
  #L20a18c.  v1:= "reply before requesting the sink" @kind object;
  #L20a190.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20a196.  throw v0;
  #L20a198.  @monitorexit v2
  #L20a19a.  v0:= v2.`okhttp3.internal.http2.h.h` @type ^`okhttp3.internal.http2.h$a` @kind object;
  #L20a19e.  return v0 @kind object;
  #L20a1a0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20a1a2.  @monitorexit v2
  #L20a1a4.  throw v0;
  catch `java.lang.Throwable` @[L20a172..L20a19a] goto L20a1a0;
  catch `java.lang.Throwable` @[L20a1a2..L20a1a4] goto L20a1a0;
}
procedure `i.z` `getSource`(`okhttp3.internal.http2.h` v1 @kind this) @signature `Lokhttp3/internal/http2/h;.getSource:()Li/z;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20a1cc.  v0:= v1.`okhttp3.internal.http2.h.g` @type ^`okhttp3.internal.http2.h$b` @kind object;
  #L20a1d0.  return v0 @kind object;
}
procedure `boolean` `isLocallyInitiated`(`okhttp3.internal.http2.h` v4 @kind this) @signature `Lokhttp3/internal/http2/h;.isLocallyInitiated:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L209fe0.  v0:= v4.`okhttp3.internal.http2.h.c` @type ^`int`;
  #L209fe4.  v1:= 1I;
  #L209fe6.  v0:= v0 ^& v1 @kind int;
  #L209fe8.  v2:= 0I;
  #L209fea.  if v0 != v1 then goto L209ff2;
  #L209fee.  v0:= 1I;
  #L209ff0.  goto L209ff4;
  #L209ff2.  v0:= 0I;
  #L209ff4.  v3:= v4.`okhttp3.internal.http2.h.d` @type ^`okhttp3.internal.http2.e` @kind object;
  #L209ff8.  v3:= v3.`okhttp3.internal.http2.e.f` @type ^`boolean` @kind boolean;
  #L209ffc.  if v3 != v0 then goto L20a002;
  #L20a000.  goto L20a004;
  #L20a002.  v1:= 0I;
  #L20a004.  return v1;
}
procedure `boolean` `isOpen`(`okhttp3.internal.http2.h` v2 @kind this) @signature `Lokhttp3/internal/http2/h;.isOpen:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20a018.  @monitorenter v2
  #L20a01a.  v0:= v2.`okhttp3.internal.http2.h.k` @type ^`okhttp3.internal.http2.a` @kind object;
  #L20a01e.  v1:= 0I;
  #L20a020.  if v0 == 0 then goto L20a028;
  #L20a024.  @monitorexit v2
  #L20a026.  return v1;
  #L20a028.  v0:= v2.`okhttp3.internal.http2.h.g` @type ^`okhttp3.internal.http2.h$b` @kind object;
  #L20a02c.  v0:= v0.`okhttp3.internal.http2.h$b.k` @type ^`boolean` @kind boolean;
  #L20a030.  if v0 != 0 then goto L20a040;
  #L20a034.  v0:= v2.`okhttp3.internal.http2.h.g` @type ^`okhttp3.internal.http2.h$b` @kind object;
  #L20a038.  v0:= v0.`okhttp3.internal.http2.h$b.j` @type ^`boolean` @kind boolean;
  #L20a03c.  if v0 == 0 then goto L20a064;
  #L20a040.  v0:= v2.`okhttp3.internal.http2.h.h` @type ^`okhttp3.internal.http2.h$a` @kind object;
  #L20a044.  v0:= v0.`okhttp3.internal.http2.h$a.i` @type ^`boolean` @kind boolean;
  #L20a048.  if v0 != 0 then goto L20a058;
  #L20a04c.  v0:= v2.`okhttp3.internal.http2.h.h` @type ^`okhttp3.internal.http2.h$a` @kind object;
  #L20a050.  v0:= v0.`okhttp3.internal.http2.h$a.h` @type ^`boolean` @kind boolean;
  #L20a054.  if v0 == 0 then goto L20a064;
  #L20a058.  v0:= v2.`okhttp3.internal.http2.h.f` @type ^`boolean` @kind boolean;
  #L20a05c.  if v0 == 0 then goto L20a064;
  #L20a060.  @monitorexit v2
  #L20a062.  return v1;
  #L20a064.  v0:= 1I;
  #L20a066.  @monitorexit v2
  #L20a068.  return v0;
  #L20a06a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20a06c.  @monitorexit v2
  #L20a06e.  throw v0;
  catch `java.lang.Throwable` @[L20a01a..L20a01e] goto L20a06a;
  catch `java.lang.Throwable` @[L20a028..L20a05c] goto L20a06a;
}
procedure `i.a0` `readTimeout`(`okhttp3.internal.http2.h` v1 @kind this) @signature `Lokhttp3/internal/http2/h;.readTimeout:()Li/a0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20a1e4.  v0:= v1.`okhttp3.internal.http2.h.i` @type ^`okhttp3.internal.http2.h$c` @kind object;
  #L20a1e8.  return v0 @kind object;
}
procedure `h.y` `takeHeaders`(`okhttp3.internal.http2.h` v2 @kind this) @signature `Lokhttp3/internal/http2/h;.takeHeaders:()Lh/y;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20a0ac.  @monitorenter v2
  #L20a0ae.  v0:= v2.`okhttp3.internal.http2.h.i` @type ^`okhttp3.internal.http2.h$c` @kind object;
  #L20a0b2.  call `enter`(v0) @signature `Li/d;.enter:()V` @kind virtual;
  #L20a0b8.  v0:= v2.`okhttp3.internal.http2.h.e` @type ^`java.util.Deque` @kind object;
  #L20a0bc.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Deque;.isEmpty:()Z` @kind interface;
  #L20a0c2.  v0:= temp;
  #L20a0c4.  if v0 == 0 then goto L20a0d8;
  #L20a0c8.  v0:= v2.`okhttp3.internal.http2.h.k` @type ^`okhttp3.internal.http2.a` @kind object;
  #L20a0cc.  if v0 != 0 then goto L20a0d8;
  #L20a0d0.  call `c`(v2) @signature `Lokhttp3/internal/http2/h;.c:()V` @kind virtual;
  #L20a0d6.  goto L20a0b8;
  #L20a0d8.  v0:= v2.`okhttp3.internal.http2.h.i` @type ^`okhttp3.internal.http2.h$c` @kind object;
  #L20a0dc.  call `exitAndThrowIfTimedOut`(v0) @signature `Lokhttp3/internal/http2/h$c;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L20a0e2.  v0:= v2.`okhttp3.internal.http2.h.e` @type ^`java.util.Deque` @kind object;
  #L20a0e6.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Deque;.isEmpty:()Z` @kind interface;
  #L20a0ec.  v0:= temp;
  #L20a0ee.  if v0 != 0 then goto L20a106;
  #L20a0f2.  v0:= v2.`okhttp3.internal.http2.h.e` @type ^`java.util.Deque` @kind object;
  #L20a0f6.  call temp:= `removeFirst`(v0) @signature `Ljava/util/Deque;.removeFirst:()Ljava/lang/Object;` @kind interface;
  #L20a0fc.  v0:= temp @kind object;
  #L20a0fe.  v0:= (`h.y`) v0 @kind object;
  #L20a102.  @monitorexit v2
  #L20a104.  return v0 @kind object;
  #L20a106.  v0:= v2.`okhttp3.internal.http2.h.l` @type ^`java.io.IOException` @kind object;
  #L20a10a.  if v0 == 0 then goto L20a114;
  #L20a10e.  v0:= v2.`okhttp3.internal.http2.h.l` @type ^`java.io.IOException` @kind object;
  #L20a112.  goto L20a122;
  #L20a114.  v0:= new `okhttp3.internal.http2.StreamResetException`;
  #L20a118.  v1:= v2.`okhttp3.internal.http2.h.k` @type ^`okhttp3.internal.http2.a` @kind object;
  #L20a11c.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/http2/StreamResetException;.<init>:(Lokhttp3/internal/http2/a;)V` @kind direct;
  #L20a122.  throw v0;
  #L20a124.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20a126.  v1:= v2.`okhttp3.internal.http2.h.i` @type ^`okhttp3.internal.http2.h$c` @kind object;
  #L20a12a.  call `exitAndThrowIfTimedOut`(v1) @signature `Lokhttp3/internal/http2/h$c;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L20a130.  throw v0;
  #L20a132.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20a134.  @monitorexit v2
  #L20a136.  throw v0;
  catch `java.lang.Throwable` @[L20a0ae..L20a0b8] goto L20a132;
  catch `java.lang.Throwable` @[L20a0b8..L20a0d6] goto L20a124;
  catch `java.lang.Throwable` @[L20a0d8..L20a102] goto L20a132;
  catch `java.lang.Throwable` @[L20a106..L20a132] goto L20a132;
}
procedure `i.a0` `writeTimeout`(`okhttp3.internal.http2.h` v1 @kind this) @signature `Lokhttp3/internal/http2/h;.writeTimeout:()Li/a0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L20a1fc.  v0:= v1.`okhttp3.internal.http2.h.j` @type ^`okhttp3.internal.http2.h$c` @kind object;
  #L20a200.  return v0 @kind object;
}
