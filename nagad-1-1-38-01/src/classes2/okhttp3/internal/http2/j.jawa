record `okhttp3.internal.http2.j` @kind class @AccessFlag  {
  `okhttp3.internal.http2.j$a` `okhttp3.internal.http2.j.a` @AccessFlag PRIVATE_FINAL;
}
global `int`[] `@@okhttp3.internal.http2.j.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@okhttp3.internal.http2.j.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.internal.http2.j` `@@okhttp3.internal.http2.j.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/j;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L20b414.  v0:= 256I;
  #L20b418.  v1:= new `int`[v0];
  #L20b41c.  goto L20b444;
  #L20b422.  `@@okhttp3.internal.http2.j.b` @type ^`int`[] := v1 @kind object;
  #L20b426.  v0:= new `byte`[v0];
  #L20b42a.  goto L20b84c;
  #L20b430.  `@@okhttp3.internal.http2.j.c` @type ^`byte`[] := v0 @kind object;
  #L20b434.  v0:= new `okhttp3.internal.http2.j`;
  #L20b438.  call `<init>`(v0) @signature `Lokhttp3/internal/http2/j;.<init>:()V` @kind direct;
  #L20b43e.  `@@okhttp3.internal.http2.j.d` @type ^`okhttp3.internal.http2.j` := v0 @kind object;
  #L20b442.  return @kind void;
  #L20b444.  v1:= (8184I, 8388568I, 268435426I, 268435427I, 268435428I, 268435429I, 268435430I, 268435431I, 268435432I, 16777194I, 1073741820I, 268435433I, 268435434I, 1073741821I, 268435435I, 268435436I, 268435437I, 268435438I, 268435439I, 268435440I, 268435441I, 268435442I, 1073741822I, 268435443I, 268435444I, 268435445I, 268435446I, 268435447I, 268435448I, 268435449I, 268435450I, 268435451I, 20I, 1016I, 1017I, 4090I, 8185I, 21I, 248I, 2042I, 1018I, 1019I, 249I, 2043I, 250I, 22I, 23I, 24I, 0I, 1I, 2I, 25I, 26I, 27I, 28I, 29I, 30I, 31I, 92I, 251I, 32764I, 32I, 4091I, 1020I, 8186I, 33I, 93I, 94I, 95I, 96I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 252I, 115I, 253I, 8187I, 524272I, 8188I, 16380I, 34I, 32765I, 3I, 35I, 4I, 36I, 5I, 37I, 38I, 39I, 6I, 116I, 117I, 40I, 41I, 42I, 7I, 43I, 118I, 44I, 8I, 9I, 45I, 119I, 120I, 121I, 122I, 123I, 32766I, 2044I, 16381I, 8189I, 268435452I, 1048550I, 4194258I, 1048551I, 1048552I, 4194259I, 4194260I, 4194261I, 8388569I, 4194262I, 8388570I, 8388571I, 8388572I, 8388573I, 8388574I, 16777195I, 8388575I, 16777196I, 16777197I, 4194263I, 8388576I, 16777198I, 8388577I, 8388578I, 8388579I, 8388580I, 2097116I, 4194264I, 8388581I, 4194265I, 8388582I, 8388583I, 16777199I, 4194266I, 2097117I, 1048553I, 4194267I, 4194268I, 8388584I, 8388585I, 2097118I, 8388586I, 4194269I, 4194270I, 16777200I, 2097119I, 4194271I, 8388587I, 8388588I, 2097120I, 2097121I, 4194272I, 2097122I, 8388589I, 4194273I, 8388590I, 8388591I, 1048554I, 4194274I, 4194275I, 4194276I, 8388592I, 4194277I, 4194278I, 8388593I, 67108832I, 67108833I, 1048555I, 524273I, 4194279I, 8388594I, 4194280I, 33554412I, 67108834I, 67108835I, 67108836I, 134217694I, 134217695I, 67108837I, 16777201I, 33554413I, 524274I, 2097123I, 67108838I, 134217696I, 134217697I, 67108839I, 134217698I, 16777202I, 2097124I, 2097125I, 67108840I, 67108841I, 268435453I, 134217699I, 134217700I, 134217701I, 1048556I, 16777203I, 1048557I, 2097126I, 4194281I, 2097127I, 2097128I, 8388595I, 4194282I, 4194283I, 33554414I, 33554415I, 16777204I, 16777205I, 67108842I, 8388596I, 67108843I, 134217702I, 67108844I, 67108845I, 134217703I, 134217704I, 134217705I, 134217706I, 134217707I, 268435454I, 134217708I, 134217709I, 134217710I, 134217711I, 134217712I, 67108846I) @kind object;
  #L20b84b.  goto L20b422;
  #L20b84c.  v0:= (13I, 23I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 24I, 30I, 28I, 28I, 30I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 30I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 6I, 10I, 10I, 12I, 13I, 6I, 8I, 11I, 10I, 10I, 8I, 11I, 8I, 6I, 6I, 6I, 5I, 5I, 5I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 7I, 8I, 15I, 6I, 12I, 10I, 13I, 6I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 8I, 7I, 8I, 13I, 19I, 13I, 14I, 6I, 15I, 5I, 6I, 5I, 6I, 5I, 6I, 6I, 6I, 5I, 7I, 7I, 6I, 6I, 6I, 5I, 6I, 7I, 6I, 5I, 5I, 6I, 7I, 7I, 7I, 7I, 7I, 15I, 11I, 14I, 13I, 28I, 20I, 22I, 20I, 20I, 22I, 22I, 22I, 23I, 22I, 23I, 23I, 23I, 23I, 23I, 24I, 23I, 24I, 24I, 22I, 23I, 24I, 23I, 23I, 23I, 23I, 21I, 22I, 23I, 22I, 23I, 23I, 24I, 22I, 21I, 20I, 22I, 22I, 23I, 23I, 21I, 23I, 22I, 22I, 24I, 21I, 22I, 23I, 23I, 21I, 21I, 22I, 21I, 23I, 22I, 23I, 23I, 20I, 22I, 22I, 22I, 23I, 22I, 22I, 23I, 26I, 26I, 20I, 19I, 22I, 23I, 22I, 25I, 26I, 26I, 26I, 27I, 27I, 26I, 24I, 25I, 19I, 21I, 26I, 27I, 27I, 26I, 27I, 24I, 21I, 21I, 26I, 26I, 28I, 27I, 27I, 27I, 20I, 24I, 20I, 21I, 22I, 21I, 21I, 23I, 22I, 22I, 25I, 25I, 24I, 24I, 26I, 23I, 26I, 27I, 26I, 26I, 27I, 27I, 27I, 27I, 27I, 28I, 27I, 27I, 27I, 27I, 27I, 26I) @kind object;
  #L20b953.  goto L20b430;
}
procedure `void` `<init>`(`okhttp3.internal.http2.j` v1 @kind this) @signature `Lokhttp3/internal/http2/j;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L20b964.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20b96a.  v0:= new `okhttp3.internal.http2.j$a`;
  #L20b96e.  call `<init>`(v0) @signature `Lokhttp3/internal/http2/j$a;.<init>:()V` @kind direct;
  #L20b974.  v1.`okhttp3.internal.http2.j.a` @type ^`okhttp3.internal.http2.j$a` := v0 @kind object;
  #L20b978.  call `a`(v1) @signature `Lokhttp3/internal/http2/j;.a:()V` @kind direct;
  #L20b97e.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.http2.j` v3 @kind this) @signature `Lokhttp3/internal/http2/j;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L20ba24.  v0:= 0I;
  #L20ba26.  v1:= `@@okhttp3.internal.http2.j.c` @type ^`byte`[] @kind object;
  #L20ba2a.  v2:= length @variable v1;
  #L20ba2c.  if v0 >= v2 then goto L20ba48;
  #L20ba30.  v2:= `@@okhttp3.internal.http2.j.b` @type ^`int`[] @kind object;
  #L20ba34.  v2:= v2[v0];
  #L20ba38.  v1:= v1[v0] @kind byte;
  #L20ba3c.  call `a`(v3, v0, v2, v1) @signature `Lokhttp3/internal/http2/j;.a:(IIB)V` @kind direct;
  #L20ba42.  v0:= v0 + 1;
  #L20ba46.  goto L20ba26;
  #L20ba48.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.http2.j` v4 @kind this, `int` v5 , `int` v6 , `byte` v7 ) @signature `Lokhttp3/internal/http2/j;.a:(IIB)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20b990.  v0:= new `okhttp3.internal.http2.j$a`;
  #L20b994.  call `<init>`(v0, v5, v7) @signature `Lokhttp3/internal/http2/j$a;.<init>:(II)V` @kind direct;
  #L20b99a.  v5:= v4.`okhttp3.internal.http2.j.a` @type ^`okhttp3.internal.http2.j$a` @kind object;
  #L20b99e.  v1:= 8I;
  #L20b9a2.  if v7 <= v1 then goto L20b9ec;
  #L20b9a6.  v7:= v7 + -8;
  #L20b9aa.  v7:= (`byte`) v7 @kind i2b;
  #L20b9ac.  v1:= v6 ^>> v7 @kind int;
  #L20b9b0.  v1:= v1 ^& 255;
  #L20b9b4.  v2:= v5.`okhttp3.internal.http2.j$a.a` @type ^`okhttp3.internal.http2.j$a`[] @kind object;
  #L20b9b8.  if v2 == 0 then goto L20b9dc;
  #L20b9bc.  v3:= v2[v1] @kind object;
  #L20b9c0.  if v3 != 0 then goto L20b9d2;
  #L20b9c4.  v3:= new `okhttp3.internal.http2.j$a`;
  #L20b9c8.  call `<init>`(v3) @signature `Lokhttp3/internal/http2/j$a;.<init>:()V` @kind direct;
  #L20b9ce.  v2[v1]:= v3 @kind object;
  #L20b9d2.  v5:= v5.`okhttp3.internal.http2.j$a.a` @type ^`okhttp3.internal.http2.j$a`[] @kind object;
  #L20b9d6.  v5:= v5[v1] @kind object;
  #L20b9da.  goto L20b99e;
  #L20b9dc.  v5:= new `java.lang.IllegalStateException`;
  #L20b9e0.  v6:= "invalid dictionary: prefix not unique" @kind object;
  #L20b9e4.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20b9ea.  throw v5;
  #L20b9ec.  v1:= v1 - v7 @kind int;
  #L20b9ee.  v6:= v6 ^< v1 @kind int;
  #L20b9f0.  v6:= v6 ^& 255;
  #L20b9f4.  v7:= 1I;
  #L20b9f6.  v7:= v7 ^< v1 @kind int;
  #L20b9f8.  v1:= v6;
  #L20b9fa.  v2:= v6 + v7 @kind int;
  #L20b9fe.  if v1 >= v2 then goto L20ba10;
  #L20ba02.  v2:= v5.`okhttp3.internal.http2.j$a.a` @type ^`okhttp3.internal.http2.j$a`[] @kind object;
  #L20ba06.  v2[v1]:= v0 @kind object;
  #L20ba0a.  v1:= v1 + 1;
  #L20ba0e.  goto L20b9fa;
  #L20ba10.  return @kind void;
}
procedure `okhttp3.internal.http2.j` `get`() @signature `Lokhttp3/internal/http2/j;.get:()Lokhttp3/internal/http2/j;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L20b3fc.  v0:= `@@okhttp3.internal.http2.j.d` @type ^`okhttp3.internal.http2.j` @kind object;
  #L20b400.  return v0 @kind object;
}
procedure `int` `a`(`okhttp3.internal.http2.j` v5 @kind this, `i.h` v6 @kind object) @signature `Lokhttp3/internal/http2/j;.a:(Li/h;)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L20b3ac.  v0:= 0L;
  #L20b3b0.  v2:= 0I;
  #L20b3b2.  call temp:= `size`(v6) @signature `Li/h;.size:()I` @kind virtual;
  #L20b3b8.  v3:= temp;
  #L20b3ba.  if v2 >= v3 then goto L20b3dc;
  #L20b3be.  call temp:= `getByte`(v6, v2) @signature `Li/h;.getByte:(I)B` @kind virtual;
  #L20b3c4.  v3:= temp;
  #L20b3c6.  v3:= v3 ^& 255;
  #L20b3ca.  v4:= `@@okhttp3.internal.http2.j.c` @type ^`byte`[] @kind object;
  #L20b3ce.  v3:= v4[v3] @kind byte;
  #L20b3d2.  v3:= (`long`) v3 @kind i2l;
  #L20b3d4.  v0:= v0 + v3 @kind long;
  #L20b3d6.  v2:= v2 + 1;
  #L20b3da.  goto L20b3b2;
  #L20b3dc.  v2:= 7L;
  #L20b3e0.  v0:= v0 + v2 @kind long;
  #L20b3e2.  v6:= 3I;
  #L20b3e4.  v0:= v0 ^> v6 @kind long;
  #L20b3e6.  v6:= (`int`) v0 @kind l2i;
  #L20b3e8.  return v6;
}
procedure `void` `a`(`okhttp3.internal.http2.j` v8 @kind this, `i.h` v9 @kind object, `i.f` v10 @kind object) @signature `Lokhttp3/internal/http2/j;.a:(Li/h;Li/f;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L20ba5c.  v0:= 0I;
  #L20ba5e.  v1:= 0L;
  #L20ba62.  v2:= v1 @kind wide;
  #L20ba64.  v1:= 0I;
  #L20ba66.  call temp:= `size`(v9) @signature `Li/h;.size:()I` @kind virtual;
  #L20ba6c.  v4:= temp;
  #L20ba6e.  v5:= 8I;
  #L20ba72.  v6:= 255I;
  #L20ba76.  if v0 >= v4 then goto L20bab8;
  #L20ba7a.  call temp:= `getByte`(v9, v0) @signature `Li/h;.getByte:(I)B` @kind virtual;
  #L20ba80.  v4:= temp;
  #L20ba82.  v4:= v4 ^& v6 @kind int;
  #L20ba84.  v6:= `@@okhttp3.internal.http2.j.b` @type ^`int`[] @kind object;
  #L20ba88.  v6:= v6[v4];
  #L20ba8c.  v7:= `@@okhttp3.internal.http2.j.c` @type ^`byte`[] @kind object;
  #L20ba90.  v4:= v7[v4] @kind byte;
  #L20ba94.  v2:= v2 ^< v4 @kind long;
  #L20ba96.  v6:= (`long`) v6 @kind i2l;
  #L20ba98.  v2:= v2 ^| v6 @kind long;
  #L20ba9a.  v1:= v1 + v4 @kind int;
  #L20ba9c.  if v1 < v5 then goto L20bab2;
  #L20baa0.  v1:= v1 + -8;
  #L20baa4.  v6:= v2 ^> v1 @kind long;
  #L20baa8.  v4:= (`int`) v6 @kind l2i;
  #L20baaa.  call temp:= `writeByte`(v10, v4) @signature `Li/f;.writeByte:(I)Li/f;` @kind interface;
  #L20bab0.  goto L20ba9c;
  #L20bab2.  v0:= v0 + 1;
  #L20bab6.  goto L20ba66;
  #L20bab8.  if v1 <= 0 then goto L20bad0;
  #L20babc.  v5:= v5 - v1 @kind int;
  #L20babe.  v2:= v2 ^< v5 @kind long;
  #L20bac0.  v9:= v6 ^>> v1 @kind int;
  #L20bac4.  v0:= (`long`) v9 @kind i2l;
  #L20bac6.  v0:= v0 ^| v2 @kind long;
  #L20bac8.  v9:= (`int`) v0 @kind l2i;
  #L20baca.  call temp:= `writeByte`(v10, v9) @signature `Li/f;.writeByte:(I)Li/f;` @kind interface;
  #L20bad0.  return @kind void;
}
procedure `byte`[] `a`(`okhttp3.internal.http2.j` v7 @kind this, `byte`[] v8 @kind object) @signature `Lokhttp3/internal/http2/j;.a:([B)[B` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L20b2dc.  v0:= new `java.io.ByteArrayOutputStream`;
  #L20b2e0.  call `<init>`(v0) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L20b2e6.  v1:= v7.`okhttp3.internal.http2.j.a` @type ^`okhttp3.internal.http2.j$a` @kind object;
  #L20b2ea.  v2:= 0I;
  #L20b2ec.  v4:= v1 @kind object;
  #L20b2ee.  v1:= 0I;
  #L20b2f0.  v3:= 0I;
  #L20b2f2.  v5:= length @variable v8;
  #L20b2f4.  v6:= 8I;
  #L20b2f8.  if v2 >= v5 then goto L20b350;
  #L20b2fc.  v5:= v8[v2] @kind byte;
  #L20b300.  v5:= v5 ^& 255;
  #L20b304.  v1:= v1 ^< 8;
  #L20b308.  v1:= v1 ^| v5 @kind int;
  #L20b30a.  v3:= v3 + 8;
  #L20b30e.  if v3 < v6 then goto L20b34a;
  #L20b312.  v5:= v3 + -8;
  #L20b316.  v5:= v1 ^>> v5 @kind int;
  #L20b31a.  v5:= v5 ^& 255;
  #L20b31e.  v4:= v4.`okhttp3.internal.http2.j$a.a` @type ^`okhttp3.internal.http2.j$a`[] @kind object;
  #L20b322.  v4:= v4[v5] @kind object;
  #L20b326.  v5:= v4.`okhttp3.internal.http2.j$a.a` @type ^`okhttp3.internal.http2.j$a`[] @kind object;
  #L20b32a.  if v5 != 0 then goto L20b344;
  #L20b32e.  v5:= v4.`okhttp3.internal.http2.j$a.b` @type ^`int`;
  #L20b332.  call `write`(v0, v5) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L20b338.  v4:= v4.`okhttp3.internal.http2.j$a.c` @type ^`int`;
  #L20b33c.  v3:= v3 - v4 @kind int;
  #L20b33e.  v4:= v7.`okhttp3.internal.http2.j.a` @type ^`okhttp3.internal.http2.j$a` @kind object;
  #L20b342.  goto L20b30e;
  #L20b344.  v3:= v3 + -8;
  #L20b348.  goto L20b30e;
  #L20b34a.  v2:= v2 + 1;
  #L20b34e.  goto L20b2f2;
  #L20b350.  if v3 <= 0 then goto L20b390;
  #L20b354.  v8:= v3 - 8;
  #L20b358.  v8:= v1 ^< v8 @kind int;
  #L20b35c.  v8:= v8 ^& 255;
  #L20b360.  v2:= v4.`okhttp3.internal.http2.j$a.a` @type ^`okhttp3.internal.http2.j$a`[] @kind object;
  #L20b364.  v8:= v2[v8] @kind object;
  #L20b368.  v2:= v8.`okhttp3.internal.http2.j$a.a` @type ^`okhttp3.internal.http2.j$a`[] @kind object;
  #L20b36c.  if v2 != 0 then goto L20b390;
  #L20b370.  v2:= v8.`okhttp3.internal.http2.j$a.c` @type ^`int`;
  #L20b374.  if v2 <= v3 then goto L20b37a;
  #L20b378.  goto L20b390;
  #L20b37a.  v2:= v8.`okhttp3.internal.http2.j$a.b` @type ^`int`;
  #L20b37e.  call `write`(v0, v2) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L20b384.  v8:= v8.`okhttp3.internal.http2.j$a.c` @type ^`int`;
  #L20b388.  v3:= v3 - v8 @kind int;
  #L20b38a.  v4:= v7.`okhttp3.internal.http2.j.a` @type ^`okhttp3.internal.http2.j$a` @kind object;
  #L20b38e.  goto L20b350;
  #L20b390.  call temp:= `toByteArray`(v0) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L20b396.  v8:= temp @kind object;
  #L20b398.  return v8 @kind object;
}
