record `okhttp3.internal.http2.e$f` @kind class @AccessFlag  extends `h.n0.d` @kind class {
  `int` `okhttp3.internal.http2.e$f.g` @AccessFlag FINAL_SYNTHETIC;
  `i.e` `okhttp3.internal.http2.e$f.h` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.internal.http2.e$f.i` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `okhttp3.internal.http2.e$f.j` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.internal.http2.e` `okhttp3.internal.http2.e$f.k` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.e$f` v0 @kind this, `okhttp3.internal.http2.e` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `int` v4 , `i.e` v5 @kind object, `int` v6 , `boolean` v7 ) @signature `Lokhttp3/internal/http2/e$f;.<init>:(Lokhttp3/internal/http2/e;Ljava/lang/String;[Ljava/lang/Object;ILi/e;IZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L206dcc.  v0.`okhttp3.internal.http2.e$f.k` @type ^`okhttp3.internal.http2.e` := v1 @kind object;
  #L206dd0.  v0.`okhttp3.internal.http2.e$f.g` @type ^`int` := v4;
  #L206dd4.  v0.`okhttp3.internal.http2.e$f.h` @type ^`i.e` := v5 @kind object;
  #L206dd8.  v0.`okhttp3.internal.http2.e$f.i` @type ^`int` := v6;
  #L206ddc.  v0.`okhttp3.internal.http2.e$f.j` @type ^`boolean` := v7 @kind boolean;
  #L206de0.  call `<init>`(v0, v2, v3) @signature `Lh/n0/d;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L206de6.  return @kind void;
}
procedure `void` `execute`(`okhttp3.internal.http2.e$f` v5 @kind this) @signature `Lokhttp3/internal/http2/e$f;.execute:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L206df8.  v0:= v5.`okhttp3.internal.http2.e$f.k` @type ^`okhttp3.internal.http2.e` @kind object;
  #L206dfc.  v0:= v0.`okhttp3.internal.http2.e.o` @type ^`okhttp3.internal.http2.k` @kind object;
  #L206e00.  v1:= v5.`okhttp3.internal.http2.e$f.g` @type ^`int`;
  #L206e04.  v2:= v5.`okhttp3.internal.http2.e$f.h` @type ^`i.e` @kind object;
  #L206e08.  v3:= v5.`okhttp3.internal.http2.e$f.i` @type ^`int`;
  #L206e0c.  v4:= v5.`okhttp3.internal.http2.e$f.j` @type ^`boolean` @kind boolean;
  #L206e10.  call temp:= `onData`(v0, v1, v2, v3, v4) @signature `Lokhttp3/internal/http2/k;.onData:(ILi/g;IZ)Z` @kind interface;
  #L206e16.  v0:= temp;
  #L206e18.  if v0 == 0 then goto L206e32;
  #L206e1c.  v1:= v5.`okhttp3.internal.http2.e$f.k` @type ^`okhttp3.internal.http2.e` @kind object;
  #L206e20.  v1:= v1.`okhttp3.internal.http2.e.A` @type ^`okhttp3.internal.http2.i` @kind object;
  #L206e24.  v2:= v5.`okhttp3.internal.http2.e$f.g` @type ^`int`;
  #L206e28.  v3:= `@@okhttp3.internal.http2.a.l` @type ^`okhttp3.internal.http2.a` @kind object;
  #L206e2c.  call `rstStream`(v1, v2, v3) @signature `Lokhttp3/internal/http2/i;.rstStream:(ILokhttp3/internal/http2/a;)V` @kind virtual;
  #L206e32.  if v0 != 0 then goto L206e3e;
  #L206e36.  v0:= v5.`okhttp3.internal.http2.e$f.j` @type ^`boolean` @kind boolean;
  #L206e3a.  if v0 == 0 then goto L206e68;
  #L206e3e.  v0:= v5.`okhttp3.internal.http2.e$f.k` @type ^`okhttp3.internal.http2.e` @kind object;
  #L206e42.  @monitorenter v0
  #L206e44.  v1:= v5.`okhttp3.internal.http2.e$f.k` @type ^`okhttp3.internal.http2.e` @kind object;
  #L206e48.  v1:= v1.`okhttp3.internal.http2.e.C` @type ^`java.util.Set` @kind object;
  #L206e4c.  v2:= v5.`okhttp3.internal.http2.e$f.g` @type ^`int`;
  #L206e50.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L206e56.  v2:= temp @kind object;
  #L206e58.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L206e5e.  @monitorexit v0
  #L206e60.  goto L206e68;
  #L206e62.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L206e64.  @monitorexit v0
  #L206e66.  throw v1;
  #L206e68.  return @kind void;
  catch `java.io.IOException` @[L206df8..L206e44] goto L206e68;
  catch `java.lang.Throwable` @[L206e44..L206e66] goto L206e62;
  catch `java.io.IOException` @[L206e66..L206e68] goto L206e68;
}
