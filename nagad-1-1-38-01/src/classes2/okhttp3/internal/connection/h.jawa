record `okhttp3.internal.connection.h` @kind class @AccessFlag FINAL {
  `java.util.Set` `okhttp3.internal.connection.h.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.h` v1 @kind this) @signature `Lokhttp3/internal/connection/h;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L201c64.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L201c6a.  v0:= new `java.util.LinkedHashSet`;
  #L201c6e.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L201c74.  v1.`okhttp3.internal.connection.h.a` @type ^`java.util.Set` := v0 @kind object;
  #L201c78.  return @kind void;
}
procedure `void` `connected`(`okhttp3.internal.connection.h` v1 @kind this, `h.k0` v2 @kind object) @signature `Lokhttp3/internal/connection/h;.connected:(Lh/k0;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L201c8c.  @monitorenter v1
  #L201c8e.  v0:= v1.`okhttp3.internal.connection.h.a` @type ^`java.util.Set` @kind object;
  #L201c92.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L201c98.  @monitorexit v1
  #L201c9a.  return @kind void;
  #L201c9c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L201c9e.  @monitorexit v1
  #L201ca0.  throw v2;
  catch `java.lang.Throwable` @[L201c8e..L201c98] goto L201c9c;
}
procedure `void` `failed`(`okhttp3.internal.connection.h` v1 @kind this, `h.k0` v2 @kind object) @signature `Lokhttp3/internal/connection/h;.failed:(Lh/k0;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L201cc0.  @monitorenter v1
  #L201cc2.  v0:= v1.`okhttp3.internal.connection.h.a` @type ^`java.util.Set` @kind object;
  #L201cc6.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L201ccc.  @monitorexit v1
  #L201cce.  return @kind void;
  #L201cd0.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L201cd2.  @monitorexit v1
  #L201cd4.  throw v2;
  catch `java.lang.Throwable` @[L201cc2..L201ccc] goto L201cd0;
}
procedure `boolean` `shouldPostpone`(`okhttp3.internal.connection.h` v1 @kind this, `h.k0` v2 @kind object) @signature `Lokhttp3/internal/connection/h;.shouldPostpone:(Lh/k0;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L201c30.  @monitorenter v1
  #L201c32.  v0:= v1.`okhttp3.internal.connection.h.a` @type ^`java.util.Set` @kind object;
  #L201c36.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L201c3c.  v2:= temp;
  #L201c3e.  @monitorexit v1
  #L201c40.  return v2;
  #L201c42.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L201c44.  @monitorexit v1
  #L201c46.  throw v2;
  catch `java.lang.Throwable` @[L201c32..L201c3e] goto L201c42;
}
