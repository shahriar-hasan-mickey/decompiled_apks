record `okhttp3.internal.connection.f` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.http2.e$j` @kind class, `h.n` @kind interface {
  `okhttp3.internal.connection.g` `okhttp3.internal.connection.f.b` @AccessFlag PUBLIC_FINAL;
  `h.k0` `okhttp3.internal.connection.f.c` @AccessFlag PRIVATE_FINAL;
  `java.net.Socket` `okhttp3.internal.connection.f.d` @AccessFlag PRIVATE;
  `java.net.Socket` `okhttp3.internal.connection.f.e` @AccessFlag PRIVATE;
  `h.x` `okhttp3.internal.connection.f.f` @AccessFlag PRIVATE;
  `h.e0` `okhttp3.internal.connection.f.g` @AccessFlag PRIVATE;
  `okhttp3.internal.http2.e` `okhttp3.internal.connection.f.h` @AccessFlag PRIVATE;
  `i.g` `okhttp3.internal.connection.f.i` @AccessFlag PRIVATE;
  `i.f` `okhttp3.internal.connection.f.j` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.f.k` @AccessFlag ;
  `int` `okhttp3.internal.connection.f.l` @AccessFlag ;
  `int` `okhttp3.internal.connection.f.m` @AccessFlag ;
  `int` `okhttp3.internal.connection.f.n` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.f.o` @AccessFlag PRIVATE;
  `java.util.List` `okhttp3.internal.connection.f.p` @AccessFlag FINAL;
  `long` `okhttp3.internal.connection.f.q` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.internal.connection.f` v2 @kind this, `okhttp3.internal.connection.g` v3 @kind object, `h.k0` v4 @kind object) @signature `Lokhttp3/internal/connection/f;.<init>:(Lokhttp3/internal/connection/g;Lh/k0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2011bc.  call `<init>`(v2) @signature `Lokhttp3/internal/http2/e$j;.<init>:()V` @kind direct;
  #L2011c2.  v0:= 1I;
  #L2011c4.  v2.`okhttp3.internal.connection.f.o` @type ^`int` := v0;
  #L2011c8.  v0:= new `java.util.ArrayList`;
  #L2011cc.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2011d2.  v2.`okhttp3.internal.connection.f.p` @type ^`java.util.List` := v0 @kind object;
  #L2011d6.  v0:= 9223372036854775807L;
  #L2011e0.  v2.`okhttp3.internal.connection.f.q` @type ^`long` := v0 @kind wide;
  #L2011e4.  v2.`okhttp3.internal.connection.f.b` @type ^`okhttp3.internal.connection.g` := v3 @kind object;
  #L2011e8.  v2.`okhttp3.internal.connection.f.c` @type ^`h.k0` := v4 @kind object;
  #L2011ec.  return @kind void;
}
procedure `h.g0` `a`(`okhttp3.internal.connection.f` v4 @kind this) @signature `Lokhttp3/internal/connection/f;.a:()Lh/g0;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L201000.  v0:= new `h.g0$a`;
  #L201004.  call `<init>`(v0) @signature `Lh/g0$a;.<init>:()V` @kind direct;
  #L20100a.  v1:= v4.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L20100e.  call temp:= `address`(v1) @signature `Lh/k0;.address:()Lh/e;` @kind virtual;
  #L201014.  v1:= temp @kind object;
  #L201016.  call temp:= `url`(v1) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L20101c.  v1:= temp @kind object;
  #L20101e.  call temp:= `url`(v0, v1) @signature `Lh/g0$a;.url:(Lh/z;)Lh/g0$a;` @kind virtual;
  #L201024.  v1:= "CONNECT" @kind object;
  #L201028.  v2:= 0I;
  #L20102a.  call temp:= `method`(v0, v1, v2) @signature `Lh/g0$a;.method:(Ljava/lang/String;Lh/h0;)Lh/g0$a;` @kind virtual;
  #L201030.  v1:= v4.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L201034.  call temp:= `address`(v1) @signature `Lh/k0;.address:()Lh/e;` @kind virtual;
  #L20103a.  v1:= temp @kind object;
  #L20103c.  call temp:= `url`(v1) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L201042.  v1:= temp @kind object;
  #L201044.  v2:= 1I;
  #L201046.  call temp:= `hostHeader`(v1, v2) @signature `Lh/n0/e;.hostHeader:(Lh/z;Z)Ljava/lang/String;` @kind static;
  #L20104c.  v1:= temp @kind object;
  #L20104e.  v2:= "Host" @kind object;
  #L201052.  call temp:= `header`(v0, v2, v1) @signature `Lh/g0$a;.header:(Ljava/lang/String;Ljava/lang/String;)Lh/g0$a;` @kind virtual;
  #L201058.  v1:= "Proxy-Connection" @kind object;
  #L20105c.  v2:= "Keep-Alive" @kind object;
  #L201060.  call temp:= `header`(v0, v1, v2) @signature `Lh/g0$a;.header:(Ljava/lang/String;Ljava/lang/String;)Lh/g0$a;` @kind virtual;
  #L201066.  call temp:= `userAgent`() @signature `Lh/n0/f;.userAgent:()Ljava/lang/String;` @kind static;
  #L20106c.  v1:= temp @kind object;
  #L20106e.  v2:= "User-Agent" @kind object;
  #L201072.  call temp:= `header`(v0, v2, v1) @signature `Lh/g0$a;.header:(Ljava/lang/String;Ljava/lang/String;)Lh/g0$a;` @kind virtual;
  #L201078.  call temp:= `build`(v0) @signature `Lh/g0$a;.build:()Lh/g0;` @kind virtual;
  #L20107e.  v0:= temp @kind object;
  #L201080.  v1:= new `h.i0$a`;
  #L201084.  call `<init>`(v1) @signature `Lh/i0$a;.<init>:()V` @kind direct;
  #L20108a.  call temp:= `request`(v1, v0) @signature `Lh/i0$a;.request:(Lh/g0;)Lh/i0$a;` @kind virtual;
  #L201090.  v2:= `@@h.e0.h` @type ^`h.e0` @kind object;
  #L201094.  call temp:= `protocol`(v1, v2) @signature `Lh/i0$a;.protocol:(Lh/e0;)Lh/i0$a;` @kind virtual;
  #L20109a.  v2:= 407I;
  #L20109e.  call temp:= `code`(v1, v2) @signature `Lh/i0$a;.code:(I)Lh/i0$a;` @kind virtual;
  #L2010a4.  v2:= "Preemptive Authenticate" @kind object;
  #L2010a8.  call temp:= `message`(v1, v2) @signature `Lh/i0$a;.message:(Ljava/lang/String;)Lh/i0$a;` @kind virtual;
  #L2010ae.  v2:= `@@h.n0.e.d` @type ^`h.j0` @kind object;
  #L2010b2.  call temp:= `body`(v1, v2) @signature `Lh/i0$a;.body:(Lh/j0;)Lh/i0$a;` @kind virtual;
  #L2010b8.  v2:= -1L;
  #L2010bc.  call temp:= `sentRequestAtMillis`(v1, v2) @signature `Lh/i0$a;.sentRequestAtMillis:(J)Lh/i0$a;` @kind virtual;
  #L2010c2.  call temp:= `receivedResponseAtMillis`(v1, v2) @signature `Lh/i0$a;.receivedResponseAtMillis:(J)Lh/i0$a;` @kind virtual;
  #L2010c8.  v2:= "Proxy-Authenticate" @kind object;
  #L2010cc.  v3:= "OkHttp-Preemptive" @kind object;
  #L2010d0.  call temp:= `header`(v1, v2, v3) @signature `Lh/i0$a;.header:(Ljava/lang/String;Ljava/lang/String;)Lh/i0$a;` @kind virtual;
  #L2010d6.  call temp:= `build`(v1) @signature `Lh/i0$a;.build:()Lh/i0;` @kind virtual;
  #L2010dc.  v1:= temp @kind object;
  #L2010de.  v2:= v4.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L2010e2.  call temp:= `address`(v2) @signature `Lh/k0;.address:()Lh/e;` @kind virtual;
  #L2010e8.  v2:= temp @kind object;
  #L2010ea.  call temp:= `proxyAuthenticator`(v2) @signature `Lh/e;.proxyAuthenticator:()Lh/g;` @kind virtual;
  #L2010f0.  v2:= temp @kind object;
  #L2010f2.  v3:= v4.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L2010f6.  call temp:= `authenticate`(v2, v3, v1) @signature `Lh/g;.authenticate:(Lh/k0;Lh/i0;)Lh/g0;` @kind interface;
  #L2010fc.  v1:= temp @kind object;
  #L2010fe.  if v1 == 0 then goto L201104;
  #L201102.  v0:= v1 @kind object;
  #L201104.  return v0 @kind object;
}
procedure `h.g0` `a`(`okhttp3.internal.connection.f` v6 @kind this, `int` v7 , `int` v8 , `h.g0` v9 @kind object, `h.z` v10 @kind object) @signature `Lokhttp3/internal/connection/f;.a:(IILh/g0;Lh/z;)Lh/g0;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L200e5c.  v0:= new `java.lang.StringBuilder`;
  #L200e60.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L200e66.  v1:= "CONNECT " @kind object;
  #L200e6a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L200e70.  v1:= 1I;
  #L200e72.  call temp:= `hostHeader`(v10, v1) @signature `Lh/n0/e;.hostHeader:(Lh/z;Z)Ljava/lang/String;` @kind static;
  #L200e78.  v10:= temp @kind object;
  #L200e7a.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L200e80.  v10:= " HTTP/1.1" @kind object;
  #L200e84.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L200e8a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L200e90.  v10:= temp @kind object;
  #L200e92.  v0:= new `h.n0.i.a`;
  #L200e96.  v1:= v6.`okhttp3.internal.connection.f.i` @type ^`i.g` @kind object;
  #L200e9a.  v2:= v6.`okhttp3.internal.connection.f.j` @type ^`i.f` @kind object;
  #L200e9e.  v3:= 0I;
  #L200ea0.  call `<init>`(v0, v3, v3, v1, v2) @signature `Lh/n0/i/a;.<init>:(Lh/d0;Lokhttp3/internal/connection/f;Li/g;Li/f;)V` @kind direct;
  #L200ea6.  v1:= v6.`okhttp3.internal.connection.f.i` @type ^`i.g` @kind object;
  #L200eaa.  call temp:= `timeout`(v1) @signature `Li/z;.timeout:()Li/a0;` @kind interface;
  #L200eb0.  v1:= temp @kind object;
  #L200eb2.  v4:= (`long`) v7 @kind i2l;
  #L200eb4.  v2:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L200eb8.  call temp:= `timeout`(v1, v4, v2) @signature `Li/a0;.timeout:(JLjava/util/concurrent/TimeUnit;)Li/a0;` @kind virtual;
  #L200ebe.  v1:= v6.`okhttp3.internal.connection.f.j` @type ^`i.f` @kind object;
  #L200ec2.  call temp:= `timeout`(v1) @signature `Li/x;.timeout:()Li/a0;` @kind interface;
  #L200ec8.  v1:= temp @kind object;
  #L200eca.  v4:= (`long`) v8 @kind i2l;
  #L200ecc.  v2:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L200ed0.  call temp:= `timeout`(v1, v4, v2) @signature `Li/a0;.timeout:(JLjava/util/concurrent/TimeUnit;)Li/a0;` @kind virtual;
  #L200ed6.  call temp:= `headers`(v9) @signature `Lh/g0;.headers:()Lh/y;` @kind virtual;
  #L200edc.  v1:= temp @kind object;
  #L200ede.  call `writeRequest`(v0, v1, v10) @signature `Lh/n0/i/a;.writeRequest:(Lh/y;Ljava/lang/String;)V` @kind virtual;
  #L200ee4.  call `finishRequest`(v0) @signature `Lh/n0/i/a;.finishRequest:()V` @kind virtual;
  #L200eea.  v1:= 0I;
  #L200eec.  call temp:= `readResponseHeaders`(v0, v1) @signature `Lh/n0/i/a;.readResponseHeaders:(Z)Lh/i0$a;` @kind virtual;
  #L200ef2.  v1:= temp @kind object;
  #L200ef4.  call temp:= `request`(v1, v9) @signature `Lh/i0$a;.request:(Lh/g0;)Lh/i0$a;` @kind virtual;
  #L200efa.  call temp:= `build`(v1) @signature `Lh/i0$a;.build:()Lh/i0;` @kind virtual;
  #L200f00.  v9:= temp @kind object;
  #L200f02.  call `skipConnectBody`(v0, v9) @signature `Lh/n0/i/a;.skipConnectBody:(Lh/i0;)V` @kind virtual;
  #L200f08.  call temp:= `code`(v9) @signature `Lh/i0;.code:()I` @kind virtual;
  #L200f0e.  v0:= temp;
  #L200f10.  v1:= 200I;
  #L200f14.  if v0 == v1 then goto L200fac;
  #L200f18.  v1:= 407I;
  #L200f1c.  if v0 != v1 then goto L200f76;
  #L200f20.  v0:= v6.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L200f24.  call temp:= `address`(v0) @signature `Lh/k0;.address:()Lh/e;` @kind virtual;
  #L200f2a.  v0:= temp @kind object;
  #L200f2c.  call temp:= `proxyAuthenticator`(v0) @signature `Lh/e;.proxyAuthenticator:()Lh/g;` @kind virtual;
  #L200f32.  v0:= temp @kind object;
  #L200f34.  v1:= v6.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L200f38.  call temp:= `authenticate`(v0, v1, v9) @signature `Lh/g;.authenticate:(Lh/k0;Lh/i0;)Lh/g0;` @kind interface;
  #L200f3e.  v0:= temp @kind object;
  #L200f40.  if v0 == 0 then goto L200f66;
  #L200f44.  v1:= "Connection" @kind object;
  #L200f48.  call temp:= `header`(v9, v1) @signature `Lh/i0;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L200f4e.  v9:= temp @kind object;
  #L200f50.  v1:= "close" @kind object;
  #L200f54.  call temp:= `equalsIgnoreCase`(v1, v9) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L200f5a.  v9:= temp;
  #L200f5c.  if v9 == 0 then goto L200f62;
  #L200f60.  return v0 @kind object;
  #L200f62.  v9:= v0 @kind object;
  #L200f64.  goto L200e92;
  #L200f66.  v7:= new `java.io.IOException`;
  #L200f6a.  v8:= "Failed to authenticate with proxy" @kind object;
  #L200f6e.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L200f74.  throw v7;
  #L200f76.  v7:= new `java.io.IOException`;
  #L200f7a.  v8:= new `java.lang.StringBuilder`;
  #L200f7e.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L200f84.  v10:= "Unexpected response code for CONNECT: " @kind object;
  #L200f88.  call temp:= `append`(v8, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L200f8e.  call temp:= `code`(v9) @signature `Lh/i0;.code:()I` @kind virtual;
  #L200f94.  v9:= temp;
  #L200f96.  call temp:= `append`(v8, v9) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L200f9c.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L200fa2.  v8:= temp @kind object;
  #L200fa4.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L200faa.  throw v7;
  #L200fac.  v7:= v6.`okhttp3.internal.connection.f.i` @type ^`i.g` @kind object;
  #L200fb0.  call temp:= `getBuffer`(v7) @signature `Li/g;.getBuffer:()Li/e;` @kind interface;
  #L200fb6.  v7:= temp @kind object;
  #L200fb8.  call temp:= `exhausted`(v7) @signature `Li/e;.exhausted:()Z` @kind virtual;
  #L200fbe.  v7:= temp;
  #L200fc0.  if v7 == 0 then goto L200fde;
  #L200fc4.  v7:= v6.`okhttp3.internal.connection.f.j` @type ^`i.f` @kind object;
  #L200fc8.  call temp:= `buffer`(v7) @signature `Li/f;.buffer:()Li/e;` @kind interface;
  #L200fce.  v7:= temp @kind object;
  #L200fd0.  call temp:= `exhausted`(v7) @signature `Li/e;.exhausted:()Z` @kind virtual;
  #L200fd6.  v7:= temp;
  #L200fd8.  if v7 == 0 then goto L200fde;
  #L200fdc.  return v3 @kind object;
  #L200fde.  v7:= new `java.io.IOException`;
  #L200fe2.  v8:= "TLS tunnel buffered too many bytes!" @kind object;
  #L200fe6.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L200fec.  throw v7;
}
procedure `void` `a`(`okhttp3.internal.connection.f` v5 @kind this, `int` v6 ) @signature `Lokhttp3/internal/connection/f;.a:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L201af8.  v0:= v5.`okhttp3.internal.connection.f.e` @type ^`java.net.Socket` @kind object;
  #L201afc.  v1:= 0I;
  #L201afe.  call `setSoTimeout`(v0, v1) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L201b04.  v0:= new `okhttp3.internal.http2.e$h`;
  #L201b08.  v1:= 1I;
  #L201b0a.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/http2/e$h;.<init>:(Z)V` @kind direct;
  #L201b10.  v1:= v5.`okhttp3.internal.connection.f.e` @type ^`java.net.Socket` @kind object;
  #L201b14.  v2:= v5.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L201b18.  call temp:= `address`(v2) @signature `Lh/k0;.address:()Lh/e;` @kind virtual;
  #L201b1e.  v2:= temp @kind object;
  #L201b20.  call temp:= `url`(v2) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L201b26.  v2:= temp @kind object;
  #L201b28.  call temp:= `host`(v2) @signature `Lh/z;.host:()Ljava/lang/String;` @kind virtual;
  #L201b2e.  v2:= temp @kind object;
  #L201b30.  v3:= v5.`okhttp3.internal.connection.f.i` @type ^`i.g` @kind object;
  #L201b34.  v4:= v5.`okhttp3.internal.connection.f.j` @type ^`i.f` @kind object;
  #L201b38.  call temp:= `socket`(v0, v1, v2, v3, v4) @signature `Lokhttp3/internal/http2/e$h;.socket:(Ljava/net/Socket;Ljava/lang/String;Li/g;Li/f;)Lokhttp3/internal/http2/e$h;` @kind virtual;
  #L201b3e.  call temp:= `listener`(v0, v5) @signature `Lokhttp3/internal/http2/e$h;.listener:(Lokhttp3/internal/http2/e$j;)Lokhttp3/internal/http2/e$h;` @kind virtual;
  #L201b44.  call temp:= `pingIntervalMillis`(v0, v6) @signature `Lokhttp3/internal/http2/e$h;.pingIntervalMillis:(I)Lokhttp3/internal/http2/e$h;` @kind virtual;
  #L201b4a.  call temp:= `build`(v0) @signature `Lokhttp3/internal/http2/e$h;.build:()Lokhttp3/internal/http2/e;` @kind virtual;
  #L201b50.  v6:= temp @kind object;
  #L201b52.  v5.`okhttp3.internal.connection.f.h` @type ^`okhttp3.internal.http2.e` := v6 @kind object;
  #L201b56.  v6:= v5.`okhttp3.internal.connection.f.h` @type ^`okhttp3.internal.http2.e` @kind object;
  #L201b5a.  call `start`(v6) @signature `Lokhttp3/internal/http2/e;.start:()V` @kind virtual;
  #L201b60.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.connection.f` v6 @kind this, `int` v7 , `int` v8 , `int` v9 , `h.j` v10 @kind object, `h.v` v11 @kind object) @signature `Lokhttp3/internal/connection/f;.a:(IIILh/j;Lh/v;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L201950.  call temp:= `a`(v6) @signature `Lokhttp3/internal/connection/f;.a:()Lh/g0;` @kind direct;
  #L201956.  v0:= temp @kind object;
  #L201958.  call temp:= `url`(v0) @signature `Lh/g0;.url:()Lh/z;` @kind virtual;
  #L20195e.  v1:= temp @kind object;
  #L201960.  v2:= 0I;
  #L201962.  v3:= 21I;
  #L201966.  if v2 >= v3 then goto L2019ba;
  #L20196a.  call `a`(v6, v7, v8, v10, v11) @signature `Lokhttp3/internal/connection/f;.a:(IILh/j;Lh/v;)V` @kind direct;
  #L201970.  call temp:= `a`(v6, v8, v9, v0, v1) @signature `Lokhttp3/internal/connection/f;.a:(IILh/g0;Lh/z;)Lh/g0;` @kind direct;
  #L201976.  v0:= temp @kind object;
  #L201978.  if v0 != 0 then goto L20197e;
  #L20197c.  goto L2019ba;
  #L20197e.  v3:= v6.`okhttp3.internal.connection.f.d` @type ^`java.net.Socket` @kind object;
  #L201982.  call `closeQuietly`(v3) @signature `Lh/n0/e;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L201988.  v3:= 0I;
  #L20198a.  v6.`okhttp3.internal.connection.f.d` @type ^`java.net.Socket` := v3 @kind object;
  #L20198e.  v6.`okhttp3.internal.connection.f.j` @type ^`i.f` := v3 @kind object;
  #L201992.  v6.`okhttp3.internal.connection.f.i` @type ^`i.g` := v3 @kind object;
  #L201996.  v4:= v6.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L20199a.  call temp:= `socketAddress`(v4) @signature `Lh/k0;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L2019a0.  v4:= temp @kind object;
  #L2019a2.  v5:= v6.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L2019a6.  call temp:= `proxy`(v5) @signature `Lh/k0;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L2019ac.  v5:= temp @kind object;
  #L2019ae.  call `connectEnd`(v11, v10, v4, v5, v3) @signature `Lh/v;.connectEnd:(Lh/j;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lh/e0;)V` @kind virtual;
  #L2019b4.  v2:= v2 + 1;
  #L2019b8.  goto L201962;
  #L2019ba.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.connection.f` v4 @kind this, `int` v5 , `int` v6 , `h.j` v7 @kind object, `h.v` v8 @kind object) @signature `Lokhttp3/internal/connection/f;.a:(IILh/j;Lh/v;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L201514.  v0:= v4.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L201518.  call temp:= `proxy`(v0) @signature `Lh/k0;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L20151e.  v0:= temp @kind object;
  #L201520.  v1:= v4.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L201524.  call temp:= `address`(v1) @signature `Lh/k0;.address:()Lh/e;` @kind virtual;
  #L20152a.  v1:= temp @kind object;
  #L20152c.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L201532.  v2:= temp @kind object;
  #L201534.  v3:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L201538.  if v2 == v3 then goto L20155a;
  #L20153c.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L201542.  v2:= temp @kind object;
  #L201544.  v3:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L201548.  if v2 != v3 then goto L20154e;
  #L20154c.  goto L20155a;
  #L20154e.  v1:= new `java.net.Socket`;
  #L201552.  call `<init>`(v1, v0) @signature `Ljava/net/Socket;.<init>:(Ljava/net/Proxy;)V` @kind direct;
  #L201558.  goto L20156a;
  #L20155a.  call temp:= `socketFactory`(v1) @signature `Lh/e;.socketFactory:()Ljavax/net/SocketFactory;` @kind virtual;
  #L201560.  v1:= temp @kind object;
  #L201562.  call temp:= `createSocket`(v1) @signature `Ljavax/net/SocketFactory;.createSocket:()Ljava/net/Socket;` @kind virtual;
  #L201568.  v1:= temp @kind object;
  #L20156a.  v4.`okhttp3.internal.connection.f.d` @type ^`java.net.Socket` := v1 @kind object;
  #L20156e.  v1:= v4.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L201572.  call temp:= `socketAddress`(v1) @signature `Lh/k0;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L201578.  v1:= temp @kind object;
  #L20157a.  call `connectStart`(v8, v7, v1, v0) @signature `Lh/v;.connectStart:(Lh/j;Ljava/net/InetSocketAddress;Ljava/net/Proxy;)V` @kind virtual;
  #L201580.  v7:= v4.`okhttp3.internal.connection.f.d` @type ^`java.net.Socket` @kind object;
  #L201584.  call `setSoTimeout`(v7, v6) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L20158a.  call temp:= `get`() @signature `Lh/n0/j/f;.get:()Lh/n0/j/f;` @kind static;
  #L201590.  v6:= temp @kind object;
  #L201592.  v7:= v4.`okhttp3.internal.connection.f.d` @type ^`java.net.Socket` @kind object;
  #L201596.  v8:= v4.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L20159a.  call temp:= `socketAddress`(v8) @signature `Lh/k0;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L2015a0.  v8:= temp @kind object;
  #L2015a2.  call `connectSocket`(v6, v7, v8, v5) @signature `Lh/n0/j/f;.connectSocket:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @kind virtual;
  #L2015a8.  v5:= v4.`okhttp3.internal.connection.f.d` @type ^`java.net.Socket` @kind object;
  #L2015ac.  call temp:= `source`(v5) @signature `Li/p;.source:(Ljava/net/Socket;)Li/z;` @kind static;
  #L2015b2.  v5:= temp @kind object;
  #L2015b4.  call temp:= `buffer`(v5) @signature `Li/p;.buffer:(Li/z;)Li/g;` @kind static;
  #L2015ba.  v5:= temp @kind object;
  #L2015bc.  v4.`okhttp3.internal.connection.f.i` @type ^`i.g` := v5 @kind object;
  #L2015c0.  v5:= v4.`okhttp3.internal.connection.f.d` @type ^`java.net.Socket` @kind object;
  #L2015c4.  call temp:= `sink`(v5) @signature `Li/p;.sink:(Ljava/net/Socket;)Li/x;` @kind static;
  #L2015ca.  v5:= temp @kind object;
  #L2015cc.  call temp:= `buffer`(v5) @signature `Li/p;.buffer:(Li/x;)Li/f;` @kind static;
  #L2015d2.  v5:= temp @kind object;
  #L2015d4.  v4.`okhttp3.internal.connection.f.j` @type ^`i.f` := v5 @kind object;
  #L2015d8.  goto L2015f4;
  #L2015da.  v5:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L2015dc.  call temp:= `getMessage`(v5) @signature `Ljava/lang/NullPointerException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2015e2.  v6:= temp @kind object;
  #L2015e4.  v7:= "throw with null exception" @kind object;
  #L2015e8.  call temp:= `equals`(v7, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2015ee.  v6:= temp;
  #L2015f0.  if v6 != 0 then goto L2015f6;
  #L2015f4.  return @kind void;
  #L2015f6.  v6:= new `java.io.IOException`;
  #L2015fa.  call `<init>`(v6, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L201600.  throw v6;
  #L201602.  v5:= Exception @type ^`java.net.ConnectException` @kind object;
  #L201604.  v6:= new `java.net.ConnectException`;
  #L201608.  v7:= new `java.lang.StringBuilder`;
  #L20160c.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L201612.  v8:= "Failed to connect to " @kind object;
  #L201616.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20161c.  v8:= v4.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L201620.  call temp:= `socketAddress`(v8) @signature `Lh/k0;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L201626.  v8:= temp @kind object;
  #L201628.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20162e.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L201634.  v7:= temp @kind object;
  #L201636.  call `<init>`(v6, v7) @signature `Ljava/net/ConnectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20163c.  call temp:= `initCause`(v6, v5) @signature `Ljava/net/ConnectException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L201642.  throw v6;
  catch `java.net.ConnectException` @[L20158a..L2015a8] goto L201602;
  catch `java.lang.NullPointerException` @[L2015a8..L2015d8] goto L2015da;
}
procedure `void` `a`(`okhttp3.internal.connection.f` v7 @kind this, `okhttp3.internal.connection.c` v8 @kind object) @signature `Lokhttp3/internal/connection/f;.a:(Lokhttp3/internal/connection/c;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L201670.  v0:= v7.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L201674.  call temp:= `address`(v0) @signature `Lh/k0;.address:()Lh/e;` @kind virtual;
  #L20167a.  v0:= temp @kind object;
  #L20167c.  call temp:= `sslSocketFactory`(v0) @signature `Lh/e;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L201682.  v1:= temp @kind object;
  #L201684.  v2:= 0I;
  #L201686.  v3:= v7.`okhttp3.internal.connection.f.d` @type ^`java.net.Socket` @kind object;
  #L20168a.  call temp:= `url`(v0) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L201690.  v4:= temp @kind object;
  #L201692.  call temp:= `host`(v4) @signature `Lh/z;.host:()Ljava/lang/String;` @kind virtual;
  #L201698.  v4:= temp @kind object;
  #L20169a.  call temp:= `url`(v0) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L2016a0.  v5:= temp @kind object;
  #L2016a2.  call temp:= `port`(v5) @signature `Lh/z;.port:()I` @kind virtual;
  #L2016a8.  v5:= temp;
  #L2016aa.  v6:= 1I;
  #L2016ac.  call temp:= `createSocket`(v1, v3, v4, v5, v6) @signature `Ljavax/net/ssl/SSLSocketFactory;.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;` @kind virtual;
  #L2016b2.  v1:= temp @kind object;
  #L2016b4.  v1:= (`javax.net.ssl.SSLSocket`) v1 @kind object;
  #L2016b8.  call temp:= `a`(v8, v1) @signature `Lokhttp3/internal/connection/c;.a:(Ljavax/net/ssl/SSLSocket;)Lh/p;` @kind virtual;
  #L2016be.  v8:= temp @kind object;
  #L2016c0.  call temp:= `supportsTlsExtensions`(v8) @signature `Lh/p;.supportsTlsExtensions:()Z` @kind virtual;
  #L2016c6.  v3:= temp;
  #L2016c8.  if v3 == 0 then goto L2016f2;
  #L2016cc.  call temp:= `get`() @signature `Lh/n0/j/f;.get:()Lh/n0/j/f;` @kind static;
  #L2016d2.  v3:= temp @kind object;
  #L2016d4.  call temp:= `url`(v0) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L2016da.  v4:= temp @kind object;
  #L2016dc.  call temp:= `host`(v4) @signature `Lh/z;.host:()Ljava/lang/String;` @kind virtual;
  #L2016e2.  v4:= temp @kind object;
  #L2016e4.  call temp:= `protocols`(v0) @signature `Lh/e;.protocols:()Ljava/util/List;` @kind virtual;
  #L2016ea.  v5:= temp @kind object;
  #L2016ec.  call `configureTlsExtensions`(v3, v1, v4, v5) @signature `Lh/n0/j/f;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L2016f2.  call `startHandshake`(v1) @signature `Ljavax/net/ssl/SSLSocket;.startHandshake:()V` @kind virtual;
  #L2016f8.  call temp:= `getSession`(v1) @signature `Ljavax/net/ssl/SSLSocket;.getSession:()Ljavax/net/ssl/SSLSession;` @kind virtual;
  #L2016fe.  v3:= temp @kind object;
  #L201700.  call temp:= `get`(v3) @signature `Lh/x;.get:(Ljavax/net/ssl/SSLSession;)Lh/x;` @kind static;
  #L201706.  v4:= temp @kind object;
  #L201708.  call temp:= `hostnameVerifier`(v0) @signature `Lh/e;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L20170e.  v5:= temp @kind object;
  #L201710.  call temp:= `url`(v0) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L201716.  v6:= temp @kind object;
  #L201718.  call temp:= `host`(v6) @signature `Lh/z;.host:()Ljava/lang/String;` @kind virtual;
  #L20171e.  v6:= temp @kind object;
  #L201720.  call temp:= `verify`(v5, v6, v3) @signature `Ljavax/net/ssl/HostnameVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @kind interface;
  #L201726.  v3:= temp;
  #L201728.  if v3 != 0 then goto L201820;
  #L20172c.  call temp:= `peerCertificates`(v4) @signature `Lh/x;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L201732.  v8:= temp @kind object;
  #L201734.  call temp:= `isEmpty`(v8) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L20173a.  v2:= temp;
  #L20173c.  v3:= "Hostname " @kind object;
  #L201740.  if v2 != 0 then goto L2017dc;
  #L201744.  v2:= 0I;
  #L201746.  call temp:= `get`(v8, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L20174c.  v8:= temp @kind object;
  #L20174e.  v8:= (`java.security.cert.X509Certificate`) v8 @kind object;
  #L201752.  v2:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L201756.  v4:= new `java.lang.StringBuilder`;
  #L20175a.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L201760.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L201766.  call temp:= `url`(v0) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L20176c.  v0:= temp @kind object;
  #L20176e.  call temp:= `host`(v0) @signature `Lh/z;.host:()Ljava/lang/String;` @kind virtual;
  #L201774.  v0:= temp @kind object;
  #L201776.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20177c.  v0:= " not verified:\n    certificate: " @kind object;
  #L201780.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L201786.  call temp:= `pin`(v8) @signature `Lh/l;.pin:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @kind static;
  #L20178c.  v0:= temp @kind object;
  #L20178e.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L201794.  v0:= "\n    DN: " @kind object;
  #L201798.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20179e.  call temp:= `getSubjectDN`(v8) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L2017a4.  v0:= temp @kind object;
  #L2017a6.  call temp:= `getName`(v0) @signature `Ljava/security/Principal;.getName:()Ljava/lang/String;` @kind interface;
  #L2017ac.  v0:= temp @kind object;
  #L2017ae.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2017b4.  v0:= "\n    subjectAltNames: " @kind object;
  #L2017b8.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2017be.  call temp:= `allSubjectAltNames`(v8) @signature `Lh/n0/l/d;.allSubjectAltNames:(Ljava/security/cert/X509Certificate;)Ljava/util/List;` @kind static;
  #L2017c4.  v8:= temp @kind object;
  #L2017c6.  call temp:= `append`(v4, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2017cc.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2017d2.  v8:= temp @kind object;
  #L2017d4.  call `<init>`(v2, v8) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2017da.  throw v2;
  #L2017dc.  v8:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L2017e0.  v2:= new `java.lang.StringBuilder`;
  #L2017e4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2017ea.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2017f0.  call temp:= `url`(v0) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L2017f6.  v0:= temp @kind object;
  #L2017f8.  call temp:= `host`(v0) @signature `Lh/z;.host:()Ljava/lang/String;` @kind virtual;
  #L2017fe.  v0:= temp @kind object;
  #L201800.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L201806.  v0:= " not verified (no certificates)" @kind object;
  #L20180a.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L201810.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L201816.  v0:= temp @kind object;
  #L201818.  call `<init>`(v8, v0) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20181e.  throw v8;
  #L201820.  call temp:= `certificatePinner`(v0) @signature `Lh/e;.certificatePinner:()Lh/l;` @kind virtual;
  #L201826.  v3:= temp @kind object;
  #L201828.  call temp:= `url`(v0) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L20182e.  v0:= temp @kind object;
  #L201830.  call temp:= `host`(v0) @signature `Lh/z;.host:()Ljava/lang/String;` @kind virtual;
  #L201836.  v0:= temp @kind object;
  #L201838.  call temp:= `peerCertificates`(v4) @signature `Lh/x;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L20183e.  v5:= temp @kind object;
  #L201840.  call `check`(v3, v0, v5) @signature `Lh/l;.check:(Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L201846.  call temp:= `supportsTlsExtensions`(v8) @signature `Lh/p;.supportsTlsExtensions:()Z` @kind virtual;
  #L20184c.  v8:= temp;
  #L20184e.  if v8 == 0 then goto L201862;
  #L201852.  call temp:= `get`() @signature `Lh/n0/j/f;.get:()Lh/n0/j/f;` @kind static;
  #L201858.  v8:= temp @kind object;
  #L20185a.  call temp:= `getSelectedProtocol`(v8, v1) @signature `Lh/n0/j/f;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @kind virtual;
  #L201860.  v2:= temp @kind object;
  #L201862.  v7.`okhttp3.internal.connection.f.e` @type ^`java.net.Socket` := v1 @kind object;
  #L201866.  v8:= v7.`okhttp3.internal.connection.f.e` @type ^`java.net.Socket` @kind object;
  #L20186a.  call temp:= `source`(v8) @signature `Li/p;.source:(Ljava/net/Socket;)Li/z;` @kind static;
  #L201870.  v8:= temp @kind object;
  #L201872.  call temp:= `buffer`(v8) @signature `Li/p;.buffer:(Li/z;)Li/g;` @kind static;
  #L201878.  v8:= temp @kind object;
  #L20187a.  v7.`okhttp3.internal.connection.f.i` @type ^`i.g` := v8 @kind object;
  #L20187e.  v8:= v7.`okhttp3.internal.connection.f.e` @type ^`java.net.Socket` @kind object;
  #L201882.  call temp:= `sink`(v8) @signature `Li/p;.sink:(Ljava/net/Socket;)Li/x;` @kind static;
  #L201888.  v8:= temp @kind object;
  #L20188a.  call temp:= `buffer`(v8) @signature `Li/p;.buffer:(Li/x;)Li/f;` @kind static;
  #L201890.  v8:= temp @kind object;
  #L201892.  v7.`okhttp3.internal.connection.f.j` @type ^`i.f` := v8 @kind object;
  #L201896.  v7.`okhttp3.internal.connection.f.f` @type ^`h.x` := v4 @kind object;
  #L20189a.  if v2 == 0 then goto L2018a8;
  #L20189e.  call temp:= `get`(v2) @signature `Lh/e0;.get:(Ljava/lang/String;)Lh/e0;` @kind static;
  #L2018a4.  v8:= temp @kind object;
  #L2018a6.  goto L2018ac;
  #L2018a8.  v8:= `@@h.e0.h` @type ^`h.e0` @kind object;
  #L2018ac.  v7.`okhttp3.internal.connection.f.g` @type ^`h.e0` := v8 @kind object;
  #L2018b0.  if v1 == 0 then goto L2018c2;
  #L2018b4.  call temp:= `get`() @signature `Lh/n0/j/f;.get:()Lh/n0/j/f;` @kind static;
  #L2018ba.  v8:= temp @kind object;
  #L2018bc.  call `afterHandshake`(v8, v1) @signature `Lh/n0/j/f;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @kind virtual;
  #L2018c2.  return @kind void;
  #L2018c4.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2018c6.  goto L2018f0;
  #L2018c8.  v8:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L2018ca.  v2:= v1 @kind object;
  #L2018cc.  goto L2018d6;
  #L2018ce.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2018d0.  v1:= v2 @kind object;
  #L2018d2.  goto L2018f0;
  #L2018d4.  v8:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L2018d6.  call temp:= `isAndroidGetsocknameError`(v8) @signature `Lh/n0/e;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @kind static;
  #L2018dc.  v0:= temp;
  #L2018de.  if v0 == 0 then goto L2018ee;
  #L2018e2.  v0:= new `java.io.IOException`;
  #L2018e6.  call `<init>`(v0, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2018ec.  throw v0;
  #L2018ee.  throw v8;
  #L2018f0.  if v1 == 0 then goto L201902;
  #L2018f4.  call temp:= `get`() @signature `Lh/n0/j/f;.get:()Lh/n0/j/f;` @kind static;
  #L2018fa.  v0:= temp @kind object;
  #L2018fc.  call `afterHandshake`(v0, v1) @signature `Lh/n0/j/f;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @kind virtual;
  #L201902.  call `closeQuietly`(v1) @signature `Lh/n0/e;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L201908.  throw v8;
  catch `java.lang.AssertionError` @[L201686..L2016b8] goto L2018d4;
  catch `java.lang.Throwable` @[L201686..L2016b8] goto L2018ce;
  catch `java.lang.AssertionError` @[L2016b8..L20173c] goto L2018c8;
  catch `java.lang.Throwable` @[L2016b8..L20173c] goto L2018c4;
  catch `java.lang.AssertionError` @[L201746..L2018b0] goto L2018c8;
  catch `java.lang.Throwable` @[L201746..L2018b0] goto L2018c4;
  catch `java.lang.Throwable` @[L2018d6..L2018f0] goto L2018ce;
}
procedure `void` `a`(`okhttp3.internal.connection.f` v1 @kind this, `okhttp3.internal.connection.c` v2 @kind object, `int` v3 , `h.j` v4 @kind object, `h.v` v5 @kind object) @signature `Lokhttp3/internal/connection/f;.a:(Lokhttp3/internal/connection/c;ILh/j;Lh/v;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2019cc.  v0:= v1.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L2019d0.  call temp:= `address`(v0) @signature `Lh/k0;.address:()Lh/e;` @kind virtual;
  #L2019d6.  v0:= temp @kind object;
  #L2019d8.  call temp:= `sslSocketFactory`(v0) @signature `Lh/e;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L2019de.  v0:= temp @kind object;
  #L2019e0.  if v0 != 0 then goto L201a32;
  #L2019e4.  v2:= v1.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L2019e8.  call temp:= `address`(v2) @signature `Lh/k0;.address:()Lh/e;` @kind virtual;
  #L2019ee.  v2:= temp @kind object;
  #L2019f0.  call temp:= `protocols`(v2) @signature `Lh/e;.protocols:()Ljava/util/List;` @kind virtual;
  #L2019f6.  v2:= temp @kind object;
  #L2019f8.  v4:= `@@h.e0.k` @type ^`h.e0` @kind object;
  #L2019fc.  call temp:= `contains`(v2, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L201a02.  v2:= temp;
  #L201a04.  if v2 == 0 then goto L201a20;
  #L201a08.  v2:= v1.`okhttp3.internal.connection.f.d` @type ^`java.net.Socket` @kind object;
  #L201a0c.  v1.`okhttp3.internal.connection.f.e` @type ^`java.net.Socket` := v2 @kind object;
  #L201a10.  v2:= `@@h.e0.k` @type ^`h.e0` @kind object;
  #L201a14.  v1.`okhttp3.internal.connection.f.g` @type ^`h.e0` := v2 @kind object;
  #L201a18.  call `a`(v1, v3) @signature `Lokhttp3/internal/connection/f;.a:(I)V` @kind direct;
  #L201a1e.  return @kind void;
  #L201a20.  v2:= v1.`okhttp3.internal.connection.f.d` @type ^`java.net.Socket` @kind object;
  #L201a24.  v1.`okhttp3.internal.connection.f.e` @type ^`java.net.Socket` := v2 @kind object;
  #L201a28.  v2:= `@@h.e0.h` @type ^`h.e0` @kind object;
  #L201a2c.  v1.`okhttp3.internal.connection.f.g` @type ^`h.e0` := v2 @kind object;
  #L201a30.  return @kind void;
  #L201a32.  call `secureConnectStart`(v5, v4) @signature `Lh/v;.secureConnectStart:(Lh/j;)V` @kind virtual;
  #L201a38.  call `a`(v1, v2) @signature `Lokhttp3/internal/connection/f;.a:(Lokhttp3/internal/connection/c;)V` @kind direct;
  #L201a3e.  v2:= v1.`okhttp3.internal.connection.f.f` @type ^`h.x` @kind object;
  #L201a42.  call `secureConnectEnd`(v5, v4, v2) @signature `Lh/v;.secureConnectEnd:(Lh/j;Lh/x;)V` @kind virtual;
  #L201a48.  v2:= v1.`okhttp3.internal.connection.f.g` @type ^`h.e0` @kind object;
  #L201a4c.  v4:= `@@h.e0.j` @type ^`h.e0` @kind object;
  #L201a50.  if v2 != v4 then goto L201a5a;
  #L201a54.  call `a`(v1, v3) @signature `Lokhttp3/internal/connection/f;.a:(I)V` @kind direct;
  #L201a5a.  return @kind void;
}
procedure `boolean` `a`(`okhttp3.internal.connection.f` v6 @kind this, `java.util.List` v7 @kind object) @signature `Lokhttp3/internal/connection/f;.a:(Ljava/util/List;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L200be4.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L200bea.  v0:= temp;
  #L200bec.  v1:= 0I;
  #L200bee.  v2:= 0I;
  #L200bf0.  if v2 >= v0 then goto L200c5e;
  #L200bf4.  call temp:= `get`(v7, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L200bfa.  v3:= temp @kind object;
  #L200bfc.  v3:= (`h.k0`) v3 @kind object;
  #L200c00.  call temp:= `proxy`(v3) @signature `Lh/k0;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L200c06.  v4:= temp @kind object;
  #L200c08.  call temp:= `type`(v4) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L200c0e.  v4:= temp @kind object;
  #L200c10.  v5:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L200c14.  if v4 != v5 then goto L200c58;
  #L200c18.  v4:= v6.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L200c1c.  call temp:= `proxy`(v4) @signature `Lh/k0;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L200c22.  v4:= temp @kind object;
  #L200c24.  call temp:= `type`(v4) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L200c2a.  v4:= temp @kind object;
  #L200c2c.  v5:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L200c30.  if v4 != v5 then goto L200c58;
  #L200c34.  v4:= v6.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L200c38.  call temp:= `socketAddress`(v4) @signature `Lh/k0;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L200c3e.  v4:= temp @kind object;
  #L200c40.  call temp:= `socketAddress`(v3) @signature `Lh/k0;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L200c46.  v3:= temp @kind object;
  #L200c48.  call temp:= `equals`(v4, v3) @signature `Ljava/net/InetSocketAddress;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L200c4e.  v3:= temp;
  #L200c50.  if v3 == 0 then goto L200c58;
  #L200c54.  v7:= 1I;
  #L200c56.  return v7;
  #L200c58.  v2:= v2 + 1;
  #L200c5c.  goto L200bf0;
  #L200c5e.  return v1;
}
procedure `h.n0.h.c` `a`(`okhttp3.internal.connection.f` v4 @kind this, `h.d0` v5 @kind object, `h.a0$a` v6 @kind object) @signature `Lokhttp3/internal/connection/f;.a:(Lh/d0;Lh/a0$a;)Lh/n0/h/c;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L201130.  v0:= v4.`okhttp3.internal.connection.f.h` @type ^`okhttp3.internal.http2.e` @kind object;
  #L201134.  if v0 == 0 then goto L201144;
  #L201138.  v1:= new `okhttp3.internal.http2.f`;
  #L20113c.  call `<init>`(v1, v5, v4, v6, v0) @signature `Lokhttp3/internal/http2/f;.<init>:(Lh/d0;Lokhttp3/internal/connection/f;Lh/a0$a;Lokhttp3/internal/http2/e;)V` @kind direct;
  #L201142.  return v1 @kind object;
  #L201144.  v0:= v4.`okhttp3.internal.connection.f.e` @type ^`java.net.Socket` @kind object;
  #L201148.  call temp:= `readTimeoutMillis`(v6) @signature `Lh/a0$a;.readTimeoutMillis:()I` @kind interface;
  #L20114e.  v1:= temp;
  #L201150.  call `setSoTimeout`(v0, v1) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L201156.  v0:= v4.`okhttp3.internal.connection.f.i` @type ^`i.g` @kind object;
  #L20115a.  call temp:= `timeout`(v0) @signature `Li/z;.timeout:()Li/a0;` @kind interface;
  #L201160.  v0:= temp @kind object;
  #L201162.  call temp:= `readTimeoutMillis`(v6) @signature `Lh/a0$a;.readTimeoutMillis:()I` @kind interface;
  #L201168.  v1:= temp;
  #L20116a.  v1:= (`long`) v1 @kind i2l;
  #L20116c.  v3:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L201170.  call temp:= `timeout`(v0, v1, v3) @signature `Li/a0;.timeout:(JLjava/util/concurrent/TimeUnit;)Li/a0;` @kind virtual;
  #L201176.  v0:= v4.`okhttp3.internal.connection.f.j` @type ^`i.f` @kind object;
  #L20117a.  call temp:= `timeout`(v0) @signature `Li/x;.timeout:()Li/a0;` @kind interface;
  #L201180.  v0:= temp @kind object;
  #L201182.  call temp:= `writeTimeoutMillis`(v6) @signature `Lh/a0$a;.writeTimeoutMillis:()I` @kind interface;
  #L201188.  v6:= temp;
  #L20118a.  v1:= (`long`) v6 @kind i2l;
  #L20118c.  v6:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L201190.  call temp:= `timeout`(v0, v1, v6) @signature `Li/a0;.timeout:(JLjava/util/concurrent/TimeUnit;)Li/a0;` @kind virtual;
  #L201196.  v6:= new `h.n0.i.a`;
  #L20119a.  v0:= v4.`okhttp3.internal.connection.f.i` @type ^`i.g` @kind object;
  #L20119e.  v1:= v4.`okhttp3.internal.connection.f.j` @type ^`i.f` @kind object;
  #L2011a2.  call `<init>`(v6, v5, v4, v0, v1) @signature `Lh/n0/i/a;.<init>:(Lh/d0;Lokhttp3/internal/connection/f;Li/g;Li/f;)V` @kind direct;
  #L2011a8.  return v6 @kind object;
}
procedure `void` `a`(`okhttp3.internal.connection.f` v4 @kind this, `java.io.IOException` v5 @kind object) @signature `Lokhttp3/internal/connection/f;.a:(Ljava/io/IOException;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L201b74.  v0:= v4.`okhttp3.internal.connection.f.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L201b78.  @monitorenter v0
  #L201b7a.  v1:= instanceof @variable v5 @type ^`okhttp3.internal.http2.StreamResetException` @kind boolean;
  #L201b7e.  v2:= 1I;
  #L201b80.  if v1 == 0 then goto L201bce;
  #L201b84.  v5:= (`okhttp3.internal.http2.StreamResetException`) v5 @kind object;
  #L201b88.  v5:= v5.`okhttp3.internal.http2.StreamResetException.f` @type ^`okhttp3.internal.http2.a` @kind object;
  #L201b8c.  v1:= `@@okhttp3.internal.http2.a.k` @type ^`okhttp3.internal.http2.a` @kind object;
  #L201b90.  if v5 != v1 then goto L201bb6;
  #L201b94.  v5:= v4.`okhttp3.internal.connection.f.n` @type ^`int`;
  #L201b98.  v5:= v5 + v2 @kind int;
  #L201b9a.  v4.`okhttp3.internal.connection.f.n` @type ^`int` := v5;
  #L201b9e.  v5:= v4.`okhttp3.internal.connection.f.n` @type ^`int`;
  #L201ba2.  if v5 <= v2 then goto L201c0a;
  #L201ba6.  v4.`okhttp3.internal.connection.f.k` @type ^`boolean` := v2 @kind boolean;
  #L201baa.  v5:= v4.`okhttp3.internal.connection.f.l` @type ^`int`;
  #L201bae.  v5:= v5 + v2 @kind int;
  #L201bb0.  v4.`okhttp3.internal.connection.f.l` @type ^`int` := v5;
  #L201bb4.  goto L201c0a;
  #L201bb6.  v1:= `@@okhttp3.internal.http2.a.l` @type ^`okhttp3.internal.http2.a` @kind object;
  #L201bba.  if v5 == v1 then goto L201c0a;
  #L201bbe.  v4.`okhttp3.internal.connection.f.k` @type ^`boolean` := v2 @kind boolean;
  #L201bc2.  v5:= v4.`okhttp3.internal.connection.f.l` @type ^`int`;
  #L201bc6.  v5:= v5 + v2 @kind int;
  #L201bc8.  v4.`okhttp3.internal.connection.f.l` @type ^`int` := v5;
  #L201bcc.  goto L201c0a;
  #L201bce.  call temp:= `isMultiplexed`(v4) @signature `Lokhttp3/internal/connection/f;.isMultiplexed:()Z` @kind virtual;
  #L201bd4.  v1:= temp;
  #L201bd6.  if v1 == 0 then goto L201be2;
  #L201bda.  v1:= instanceof @variable v5 @type ^`okhttp3.internal.http2.ConnectionShutdownException` @kind boolean;
  #L201bde.  if v1 == 0 then goto L201c0a;
  #L201be2.  v4.`okhttp3.internal.connection.f.k` @type ^`boolean` := v2 @kind boolean;
  #L201be6.  v1:= v4.`okhttp3.internal.connection.f.m` @type ^`int`;
  #L201bea.  if v1 != 0 then goto L201c0a;
  #L201bee.  if v5 == 0 then goto L201c00;
  #L201bf2.  v1:= v4.`okhttp3.internal.connection.f.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L201bf6.  v3:= v4.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L201bfa.  call `connectFailed`(v1, v3, v5) @signature `Lokhttp3/internal/connection/g;.connectFailed:(Lh/k0;Ljava/io/IOException;)V` @kind virtual;
  #L201c00.  v5:= v4.`okhttp3.internal.connection.f.l` @type ^`int`;
  #L201c04.  v5:= v5 + v2 @kind int;
  #L201c06.  v4.`okhttp3.internal.connection.f.l` @type ^`int` := v5;
  #L201c0a.  @monitorexit v0
  #L201c0c.  return @kind void;
  #L201c0e.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L201c10.  @monitorexit v0
  #L201c12.  throw v5;
  catch `java.lang.Throwable` @[L201b7a..L201c12] goto L201c0e;
}
procedure `boolean` `a`(`okhttp3.internal.connection.f` v3 @kind this, `h.e` v4 @kind object, `java.util.List` v5 @kind object) @signature `Lokhttp3/internal/connection/f;.a:(Lh/e;Ljava/util/List;)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L2009d4.  v0:= v3.`okhttp3.internal.connection.f.p` @type ^`java.util.List` @kind object;
  #L2009d8.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2009de.  v0:= temp;
  #L2009e0.  v1:= v3.`okhttp3.internal.connection.f.o` @type ^`int`;
  #L2009e4.  v2:= 0I;
  #L2009e6.  if v0 >= v1 then goto L200ac6;
  #L2009ea.  v0:= v3.`okhttp3.internal.connection.f.k` @type ^`boolean` @kind boolean;
  #L2009ee.  if v0 == 0 then goto L2009f4;
  #L2009f2.  goto L200ac6;
  #L2009f4.  v0:= `@@h.n0.c.a` @type ^`h.n0.c` @kind object;
  #L2009f8.  v1:= v3.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L2009fc.  call temp:= `address`(v1) @signature `Lh/k0;.address:()Lh/e;` @kind virtual;
  #L200a02.  v1:= temp @kind object;
  #L200a04.  call temp:= `equalsNonHost`(v0, v1, v4) @signature `Lh/n0/c;.equalsNonHost:(Lh/e;Lh/e;)Z` @kind virtual;
  #L200a0a.  v0:= temp;
  #L200a0c.  if v0 != 0 then goto L200a12;
  #L200a10.  return v2;
  #L200a12.  call temp:= `url`(v4) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L200a18.  v0:= temp @kind object;
  #L200a1a.  call temp:= `host`(v0) @signature `Lh/z;.host:()Ljava/lang/String;` @kind virtual;
  #L200a20.  v0:= temp @kind object;
  #L200a22.  call temp:= `route`(v3) @signature `Lokhttp3/internal/connection/f;.route:()Lh/k0;` @kind virtual;
  #L200a28.  v1:= temp @kind object;
  #L200a2a.  call temp:= `address`(v1) @signature `Lh/k0;.address:()Lh/e;` @kind virtual;
  #L200a30.  v1:= temp @kind object;
  #L200a32.  call temp:= `url`(v1) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L200a38.  v1:= temp @kind object;
  #L200a3a.  call temp:= `host`(v1) @signature `Lh/z;.host:()Ljava/lang/String;` @kind virtual;
  #L200a40.  v1:= temp @kind object;
  #L200a42.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L200a48.  v0:= temp;
  #L200a4a.  v1:= 1I;
  #L200a4c.  if v0 == 0 then goto L200a52;
  #L200a50.  return v1;
  #L200a52.  v0:= v3.`okhttp3.internal.connection.f.h` @type ^`okhttp3.internal.http2.e` @kind object;
  #L200a56.  if v0 != 0 then goto L200a5c;
  #L200a5a.  return v2;
  #L200a5c.  if v5 == 0 then goto L200ac6;
  #L200a60.  call temp:= `a`(v3, v5) @signature `Lokhttp3/internal/connection/f;.a:(Ljava/util/List;)Z` @kind direct;
  #L200a66.  v5:= temp;
  #L200a68.  if v5 != 0 then goto L200a6e;
  #L200a6c.  goto L200ac6;
  #L200a6e.  call temp:= `hostnameVerifier`(v4) @signature `Lh/e;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L200a74.  v5:= temp @kind object;
  #L200a76.  v0:= `@@h.n0.l.d.a` @type ^`h.n0.l.d` @kind object;
  #L200a7a.  if v5 == v0 then goto L200a80;
  #L200a7e.  return v2;
  #L200a80.  call temp:= `url`(v4) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L200a86.  v5:= temp @kind object;
  #L200a88.  call temp:= `supportsUrl`(v3, v5) @signature `Lokhttp3/internal/connection/f;.supportsUrl:(Lh/z;)Z` @kind virtual;
  #L200a8e.  v5:= temp;
  #L200a90.  if v5 != 0 then goto L200a96;
  #L200a94.  return v2;
  #L200a96.  call temp:= `certificatePinner`(v4) @signature `Lh/e;.certificatePinner:()Lh/l;` @kind virtual;
  #L200a9c.  v5:= temp @kind object;
  #L200a9e.  call temp:= `url`(v4) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L200aa4.  v4:= temp @kind object;
  #L200aa6.  call temp:= `host`(v4) @signature `Lh/z;.host:()Ljava/lang/String;` @kind virtual;
  #L200aac.  v4:= temp @kind object;
  #L200aae.  call temp:= `handshake`(v3) @signature `Lokhttp3/internal/connection/f;.handshake:()Lh/x;` @kind virtual;
  #L200ab4.  v0:= temp @kind object;
  #L200ab6.  call temp:= `peerCertificates`(v0) @signature `Lh/x;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L200abc.  v0:= temp @kind object;
  #L200abe.  call `check`(v5, v4, v0) @signature `Lh/l;.check:(Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L200ac4.  return v1;
  #L200ac6.  return v2;
  catch `javax.net.ssl.SSLPeerUnverifiedException` @[L200a96..L200ac4] goto L200ac6;
}
procedure `void` `cancel`(`okhttp3.internal.connection.f` v1 @kind this) @signature `Lokhttp3/internal/connection/f;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L201200.  v0:= v1.`okhttp3.internal.connection.f.d` @type ^`java.net.Socket` @kind object;
  #L201204.  call `closeQuietly`(v0) @signature `Lh/n0/e;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L20120a.  return @kind void;
}
procedure `void` `connect`(`okhttp3.internal.connection.f` v16 @kind this, `int` v17 , `int` v18 , `int` v19 , `int` v20 , `boolean` v21 , `h.j` v22 @kind object, `h.v` v23 @kind object) @signature `Lokhttp3/internal/connection/f;.connect:(IIIIZLh/j;Lh/v;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L20121c.  v7:= v16 @kind object;
  #L201220.  v8:= v22 @kind object;
  #L201224.  v9:= v23 @kind object;
  #L201228.  v0:= v7.`okhttp3.internal.connection.f.g` @type ^`h.e0` @kind object;
  #L20122c.  if v0 != 0 then goto L2014be;
  #L201230.  v0:= v7.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L201234.  call temp:= `address`(v0) @signature `Lh/k0;.address:()Lh/e;` @kind virtual;
  #L20123a.  v0:= temp @kind object;
  #L20123c.  call temp:= `connectionSpecs`(v0) @signature `Lh/e;.connectionSpecs:()Ljava/util/List;` @kind virtual;
  #L201242.  v0:= temp @kind object;
  #L201244.  v10:= new `okhttp3.internal.connection.c`;
  #L201248.  call `<init>`(v10, v0) @signature `Lokhttp3/internal/connection/c;.<init>:(Ljava/util/List;)V` @kind direct;
  #L20124e.  v1:= v7.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L201252.  call temp:= `address`(v1) @signature `Lh/k0;.address:()Lh/e;` @kind virtual;
  #L201258.  v1:= temp @kind object;
  #L20125a.  call temp:= `sslSocketFactory`(v1) @signature `Lh/e;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L201260.  v1:= temp @kind object;
  #L201262.  if v1 != 0 then goto L201304;
  #L201266.  v1:= `@@h.p.h` @type ^`h.p` @kind object;
  #L20126a.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L201270.  v0:= temp;
  #L201272.  if v0 == 0 then goto L2012ea;
  #L201276.  v0:= v7.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L20127a.  call temp:= `address`(v0) @signature `Lh/k0;.address:()Lh/e;` @kind virtual;
  #L201280.  v0:= temp @kind object;
  #L201282.  call temp:= `url`(v0) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L201288.  v0:= temp @kind object;
  #L20128a.  call temp:= `host`(v0) @signature `Lh/z;.host:()Ljava/lang/String;` @kind virtual;
  #L201290.  v0:= temp @kind object;
  #L201292.  call temp:= `get`() @signature `Lh/n0/j/f;.get:()Lh/n0/j/f;` @kind static;
  #L201298.  v1:= temp @kind object;
  #L20129a.  call temp:= `isCleartextTrafficPermitted`(v1, v0) @signature `Lh/n0/j/f;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @kind virtual;
  #L2012a0.  v1:= temp;
  #L2012a2.  if v1 == 0 then goto L2012a8;
  #L2012a6.  goto L201328;
  #L2012a8.  v1:= new `okhttp3.internal.connection.RouteException`;
  #L2012ac.  v2:= new `java.net.UnknownServiceException`;
  #L2012b0.  v3:= new `java.lang.StringBuilder`;
  #L2012b4.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2012ba.  v4:= "CLEARTEXT communication to " @kind object;
  #L2012be.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2012c4.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2012ca.  v0:= " not permitted by network security policy" @kind object;
  #L2012ce.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2012d4.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2012da.  v0:= temp @kind object;
  #L2012dc.  call `<init>`(v2, v0) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2012e2.  call `<init>`(v1, v2) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L2012e8.  throw v1;
  #L2012ea.  v0:= new `okhttp3.internal.connection.RouteException`;
  #L2012ee.  v1:= new `java.net.UnknownServiceException`;
  #L2012f2.  v2:= "CLEARTEXT communication not enabled for client" @kind object;
  #L2012f6.  call `<init>`(v1, v2) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2012fc.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L201302.  throw v0;
  #L201304.  v0:= v7.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L201308.  call temp:= `address`(v0) @signature `Lh/k0;.address:()Lh/e;` @kind virtual;
  #L20130e.  v0:= temp @kind object;
  #L201310.  call temp:= `protocols`(v0) @signature `Lh/e;.protocols:()Ljava/util/List;` @kind virtual;
  #L201316.  v0:= temp @kind object;
  #L201318.  v1:= `@@h.e0.k` @type ^`h.e0` @kind object;
  #L20131c.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L201322.  v0:= temp;
  #L201324.  if v0 != 0 then goto L2014a4;
  #L201328.  v11:= 0I;
  #L20132a.  v12:= v11 @kind object;
  #L20132c.  v0:= v7.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L201330.  call temp:= `requiresTunnel`(v0) @signature `Lh/k0;.requiresTunnel:()Z` @kind virtual;
  #L201336.  v0:= temp;
  #L201338.  if v0 == 0 then goto L20136e;
  #L20133c.  v1:= v16 @kind object;
  #L201340.  v2:= v17;
  #L201344.  v3:= v18;
  #L201348.  v4:= v19;
  #L20134c.  v5:= v22 @kind object;
  #L201350.  v6:= v23 @kind object;
  #L201354.  call `a`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/connection/f;.a:(IIILh/j;Lh/v;)V` @kind direct;
  #L20135a.  v0:= v7.`okhttp3.internal.connection.f.d` @type ^`java.net.Socket` @kind object;
  #L20135e.  if v0 != 0 then goto L201364;
  #L201362.  goto L2013a8;
  #L201364.  v13:= v17;
  #L201368.  v14:= v18;
  #L20136c.  goto L20137c;
  #L20136e.  v13:= v17;
  #L201372.  v14:= v18;
  #L201376.  call `a`(v7, v13, v14, v8, v9) @signature `Lokhttp3/internal/connection/f;.a:(IILh/j;Lh/v;)V` @kind direct;
  #L20137c.  v15:= v20;
  #L201380.  call `a`(v7, v10, v15, v8, v9) @signature `Lokhttp3/internal/connection/f;.a:(Lokhttp3/internal/connection/c;ILh/j;Lh/v;)V` @kind direct;
  #L201386.  v0:= v7.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L20138a.  call temp:= `socketAddress`(v0) @signature `Lh/k0;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L201390.  v0:= temp @kind object;
  #L201392.  v1:= v7.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L201396.  call temp:= `proxy`(v1) @signature `Lh/k0;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L20139c.  v1:= temp @kind object;
  #L20139e.  v2:= v7.`okhttp3.internal.connection.f.g` @type ^`h.e0` @kind object;
  #L2013a2.  call `connectEnd`(v9, v8, v0, v1, v2) @signature `Lh/v;.connectEnd:(Lh/j;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lh/e0;)V` @kind virtual;
  #L2013a8.  v0:= v7.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L2013ac.  call temp:= `requiresTunnel`(v0) @signature `Lh/k0;.requiresTunnel:()Z` @kind virtual;
  #L2013b2.  v0:= temp;
  #L2013b4.  if v0 == 0 then goto L2013dc;
  #L2013b8.  v0:= v7.`okhttp3.internal.connection.f.d` @type ^`java.net.Socket` @kind object;
  #L2013bc.  if v0 == 0 then goto L2013c2;
  #L2013c0.  goto L2013dc;
  #L2013c2.  v0:= new `java.net.ProtocolException`;
  #L2013c6.  v1:= "Too many tunnel connections attempted: 21" @kind object;
  #L2013ca.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2013d0.  v1:= new `okhttp3.internal.connection.RouteException`;
  #L2013d4.  call `<init>`(v1, v0) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L2013da.  throw v1;
  #L2013dc.  v0:= v7.`okhttp3.internal.connection.f.h` @type ^`okhttp3.internal.http2.e` @kind object;
  #L2013e0.  if v0 == 0 then goto L201404;
  #L2013e4.  v1:= v7.`okhttp3.internal.connection.f.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L2013e8.  @monitorenter v1
  #L2013ea.  v0:= v7.`okhttp3.internal.connection.f.h` @type ^`okhttp3.internal.http2.e` @kind object;
  #L2013ee.  call temp:= `maxConcurrentStreams`(v0) @signature `Lokhttp3/internal/http2/e;.maxConcurrentStreams:()I` @kind virtual;
  #L2013f4.  v0:= temp;
  #L2013f6.  v7.`okhttp3.internal.connection.f.o` @type ^`int` := v0;
  #L2013fa.  @monitorexit v1
  #L2013fc.  goto L201404;
  #L2013fe.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L201400.  @monitorexit v1
  #L201402.  throw v0;
  #L201404.  return @kind void;
  #L201406.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L201408.  goto L20141c;
  #L20140a.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L20140c.  goto L201418;
  #L20140e.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L201410.  v13:= v17;
  #L201414.  v14:= v18;
  #L201418.  v15:= v20;
  #L20141c.  v1:= v7.`okhttp3.internal.connection.f.e` @type ^`java.net.Socket` @kind object;
  #L201420.  call `closeQuietly`(v1) @signature `Lh/n0/e;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L201426.  v1:= v7.`okhttp3.internal.connection.f.d` @type ^`java.net.Socket` @kind object;
  #L20142a.  call `closeQuietly`(v1) @signature `Lh/n0/e;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L201430.  v7.`okhttp3.internal.connection.f.e` @type ^`java.net.Socket` := v11 @kind object;
  #L201434.  v7.`okhttp3.internal.connection.f.d` @type ^`java.net.Socket` := v11 @kind object;
  #L201438.  v7.`okhttp3.internal.connection.f.i` @type ^`i.g` := v11 @kind object;
  #L20143c.  v7.`okhttp3.internal.connection.f.j` @type ^`i.f` := v11 @kind object;
  #L201440.  v7.`okhttp3.internal.connection.f.f` @type ^`h.x` := v11 @kind object;
  #L201444.  v7.`okhttp3.internal.connection.f.g` @type ^`h.e0` := v11 @kind object;
  #L201448.  v7.`okhttp3.internal.connection.f.h` @type ^`okhttp3.internal.http2.e` := v11 @kind object;
  #L20144c.  v1:= v7.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L201450.  call temp:= `socketAddress`(v1) @signature `Lh/k0;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L201456.  v3:= temp @kind object;
  #L201458.  v1:= v7.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L20145c.  call temp:= `proxy`(v1) @signature `Lh/k0;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L201462.  v4:= temp @kind object;
  #L201464.  v5:= 0I;
  #L201466.  v1:= v23 @kind object;
  #L20146a.  v2:= v22 @kind object;
  #L20146e.  v6:= v0 @kind object;
  #L201470.  call `connectFailed`(v1, v2, v3, v4, v5, v6) @signature `Lh/v;.connectFailed:(Lh/j;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lh/e0;Ljava/io/IOException;)V` @kind virtual;
  #L201476.  if v12 != 0 then goto L201488;
  #L20147a.  v1:= new `okhttp3.internal.connection.RouteException`;
  #L20147e.  call `<init>`(v1, v0) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L201484.  v12:= v1 @kind object;
  #L201486.  goto L20148e;
  #L201488.  call `a`(v12, v0) @signature `Lokhttp3/internal/connection/RouteException;.a:(Ljava/io/IOException;)V` @kind virtual;
  #L20148e.  if v21 == 0 then goto L2014a2;
  #L201492.  call temp:= `a`(v10, v0) @signature `Lokhttp3/internal/connection/c;.a:(Ljava/io/IOException;)Z` @kind virtual;
  #L201498.  v0:= temp;
  #L20149a.  if v0 == 0 then goto L2014a2;
  #L20149e.  goto L20132c;
  #L2014a2.  throw v12;
  #L2014a4.  v0:= new `okhttp3.internal.connection.RouteException`;
  #L2014a8.  v1:= new `java.net.UnknownServiceException`;
  #L2014ac.  v2:= "H2_PRIOR_KNOWLEDGE cannot be used with HTTPS" @kind object;
  #L2014b0.  call `<init>`(v1, v2) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2014b6.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L2014bc.  throw v0;
  #L2014be.  v0:= new `java.lang.IllegalStateException`;
  #L2014c2.  v1:= "already connected" @kind object;
  #L2014c6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2014cc.  throw v0;
  catch `java.io.IOException` @[L20132c..L20135e] goto L20140e;
  catch `java.io.IOException` @[L201376..L20137c] goto L20140a;
  catch `java.io.IOException` @[L201380..L2013a8] goto L201406;
  catch `java.lang.Throwable` @[L2013ea..L201402] goto L2013fe;
}
procedure `h.x` `handshake`(`okhttp3.internal.connection.f` v1 @kind this) @signature `Lokhttp3/internal/connection/f;.handshake:()Lh/x;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L200e2c.  v0:= v1.`okhttp3.internal.connection.f.f` @type ^`h.x` @kind object;
  #L200e30.  return v0 @kind object;
}
procedure `boolean` `isHealthy`(`okhttp3.internal.connection.f` v4 @kind this, `boolean` v5 ) @signature `Lokhttp3/internal/connection/f;.isHealthy:(Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L200ae8.  v0:= v4.`okhttp3.internal.connection.f.e` @type ^`java.net.Socket` @kind object;
  #L200aec.  call temp:= `isClosed`(v0) @signature `Ljava/net/Socket;.isClosed:()Z` @kind virtual;
  #L200af2.  v0:= temp;
  #L200af4.  v1:= 0I;
  #L200af6.  if v0 != 0 then goto L200b8c;
  #L200afa.  v0:= v4.`okhttp3.internal.connection.f.e` @type ^`java.net.Socket` @kind object;
  #L200afe.  call temp:= `isInputShutdown`(v0) @signature `Ljava/net/Socket;.isInputShutdown:()Z` @kind virtual;
  #L200b04.  v0:= temp;
  #L200b06.  if v0 != 0 then goto L200b8c;
  #L200b0a.  v0:= v4.`okhttp3.internal.connection.f.e` @type ^`java.net.Socket` @kind object;
  #L200b0e.  call temp:= `isOutputShutdown`(v0) @signature `Ljava/net/Socket;.isOutputShutdown:()Z` @kind virtual;
  #L200b14.  v0:= temp;
  #L200b16.  if v0 == 0 then goto L200b1c;
  #L200b1a.  goto L200b8c;
  #L200b1c.  v0:= v4.`okhttp3.internal.connection.f.h` @type ^`okhttp3.internal.http2.e` @kind object;
  #L200b20.  if v0 == 0 then goto L200b36;
  #L200b24.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L200b2a.  v1:= temp @kind wide;
  #L200b2c.  call temp:= `isHealthy`(v0, v1) @signature `Lokhttp3/internal/http2/e;.isHealthy:(J)Z` @kind virtual;
  #L200b32.  v5:= temp;
  #L200b34.  return v5;
  #L200b36.  v0:= 1I;
  #L200b38.  if v5 == 0 then goto L200b8a;
  #L200b3c.  v5:= v4.`okhttp3.internal.connection.f.e` @type ^`java.net.Socket` @kind object;
  #L200b40.  call temp:= `getSoTimeout`(v5) @signature `Ljava/net/Socket;.getSoTimeout:()I` @kind virtual;
  #L200b46.  v5:= temp;
  #L200b48.  v2:= v4.`okhttp3.internal.connection.f.e` @type ^`java.net.Socket` @kind object;
  #L200b4c.  call `setSoTimeout`(v2, v0) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L200b52.  v2:= v4.`okhttp3.internal.connection.f.i` @type ^`i.g` @kind object;
  #L200b56.  call temp:= `exhausted`(v2) @signature `Li/g;.exhausted:()Z` @kind interface;
  #L200b5c.  v2:= temp;
  #L200b5e.  if v2 == 0 then goto L200b6e;
  #L200b62.  v2:= v4.`okhttp3.internal.connection.f.e` @type ^`java.net.Socket` @kind object;
  #L200b66.  call `setSoTimeout`(v2, v5) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L200b6c.  return v1;
  #L200b6e.  v2:= v4.`okhttp3.internal.connection.f.e` @type ^`java.net.Socket` @kind object;
  #L200b72.  call `setSoTimeout`(v2, v5) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L200b78.  return v0;
  #L200b7a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L200b7c.  v3:= v4.`okhttp3.internal.connection.f.e` @type ^`java.net.Socket` @kind object;
  #L200b80.  call `setSoTimeout`(v3, v5) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L200b86.  throw v2;
  #L200b88.  return v1;
  #L200b8a.  return v0;
  #L200b8c.  return v1;
  catch `java.net.SocketTimeoutException` @[L200b3c..L200b48] goto L200b8a;
  catch `java.io.IOException` @[L200b3c..L200b48] goto L200b88;
  catch `java.lang.Throwable` @[L200b48..L200b5e] goto L200b7a;
  catch `java.net.SocketTimeoutException` @[L200b62..L200b88] goto L200b8a;
  catch `java.io.IOException` @[L200b62..L200b88] goto L200b88;
}
procedure `boolean` `isMultiplexed`(`okhttp3.internal.connection.f` v1 @kind this) @signature `Lokhttp3/internal/connection/f;.isMultiplexed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L200bc4.  v0:= v1.`okhttp3.internal.connection.f.h` @type ^`okhttp3.internal.http2.e` @kind object;
  #L200bc8.  if v0 == 0 then goto L200bd0;
  #L200bcc.  v0:= 1I;
  #L200bce.  goto L200bd2;
  #L200bd0.  v0:= 0I;
  #L200bd2.  return v0;
}
procedure `void` `noNewExchanges`(`okhttp3.internal.connection.f` v2 @kind this) @signature `Lokhttp3/internal/connection/f;.noNewExchanges:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L201a6c.  v0:= v2.`okhttp3.internal.connection.f.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L201a70.  @monitorenter v0
  #L201a72.  v1:= 1I;
  #L201a74.  v2.`okhttp3.internal.connection.f.k` @type ^`boolean` := v1 @kind boolean;
  #L201a78.  @monitorexit v0
  #L201a7a.  return @kind void;
  #L201a7c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L201a7e.  @monitorexit v0
  #L201a80.  throw v1;
  catch `java.lang.Throwable` @[L201a74..L201a80] goto L201a7c;
}
procedure `void` `onSettings`(`okhttp3.internal.connection.f` v1 @kind this, `okhttp3.internal.http2.e` v2 @kind object) @signature `Lokhttp3/internal/connection/f;.onSettings:(Lokhttp3/internal/http2/e;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L201aa0.  v0:= v1.`okhttp3.internal.connection.f.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L201aa4.  @monitorenter v0
  #L201aa6.  call temp:= `maxConcurrentStreams`(v2) @signature `Lokhttp3/internal/http2/e;.maxConcurrentStreams:()I` @kind virtual;
  #L201aac.  v2:= temp;
  #L201aae.  v1.`okhttp3.internal.connection.f.o` @type ^`int` := v2;
  #L201ab2.  @monitorexit v0
  #L201ab4.  return @kind void;
  #L201ab6.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L201ab8.  @monitorexit v0
  #L201aba.  throw v2;
  catch `java.lang.Throwable` @[L201aa6..L201aba] goto L201ab6;
}
procedure `void` `onStream`(`okhttp3.internal.connection.f` v2 @kind this, `okhttp3.internal.http2.h` v3 @kind object) @signature `Lokhttp3/internal/connection/f;.onStream:(Lokhttp3/internal/http2/h;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L201ad8.  v0:= `@@okhttp3.internal.http2.a.k` @type ^`okhttp3.internal.http2.a` @kind object;
  #L201adc.  v1:= 0I;
  #L201ade.  call `close`(v3, v0, v1) @signature `Lokhttp3/internal/http2/h;.close:(Lokhttp3/internal/http2/a;Ljava/io/IOException;)V` @kind virtual;
  #L201ae4.  return @kind void;
}
procedure `h.e0` `protocol`(`okhttp3.internal.connection.f` v1 @kind this) @signature `Lokhttp3/internal/connection/f;.protocol:()Lh/e0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L200e44.  v0:= v1.`okhttp3.internal.connection.f.g` @type ^`h.e0` @kind object;
  #L200e48.  return v0 @kind object;
}
procedure `h.k0` `route`(`okhttp3.internal.connection.f` v1 @kind this) @signature `Lokhttp3/internal/connection/f;.route:()Lh/k0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L201118.  v0:= v1.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L20111c.  return v0 @kind object;
}
procedure `java.net.Socket` `socket`(`okhttp3.internal.connection.f` v1 @kind this) @signature `Lokhttp3/internal/connection/f;.socket:()Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L200e14.  v0:= v1.`okhttp3.internal.connection.f.e` @type ^`java.net.Socket` @kind object;
  #L200e18.  return v0 @kind object;
}
procedure `boolean` `supportsUrl`(`okhttp3.internal.connection.f` v4 @kind this, `h.z` v5 @kind object) @signature `Lokhttp3/internal/connection/f;.supportsUrl:(Lh/z;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L200c70.  call temp:= `port`(v5) @signature `Lh/z;.port:()I` @kind virtual;
  #L200c76.  v0:= temp;
  #L200c78.  v1:= v4.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L200c7c.  call temp:= `address`(v1) @signature `Lh/k0;.address:()Lh/e;` @kind virtual;
  #L200c82.  v1:= temp @kind object;
  #L200c84.  call temp:= `url`(v1) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L200c8a.  v1:= temp @kind object;
  #L200c8c.  call temp:= `port`(v1) @signature `Lh/z;.port:()I` @kind virtual;
  #L200c92.  v1:= temp;
  #L200c94.  v2:= 0I;
  #L200c96.  if v0 == v1 then goto L200c9c;
  #L200c9a.  return v2;
  #L200c9c.  call temp:= `host`(v5) @signature `Lh/z;.host:()Ljava/lang/String;` @kind virtual;
  #L200ca2.  v0:= temp @kind object;
  #L200ca4.  v1:= v4.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L200ca8.  call temp:= `address`(v1) @signature `Lh/k0;.address:()Lh/e;` @kind virtual;
  #L200cae.  v1:= temp @kind object;
  #L200cb0.  call temp:= `url`(v1) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L200cb6.  v1:= temp @kind object;
  #L200cb8.  call temp:= `host`(v1) @signature `Lh/z;.host:()Ljava/lang/String;` @kind virtual;
  #L200cbe.  v1:= temp @kind object;
  #L200cc0.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L200cc6.  v0:= temp;
  #L200cc8.  v1:= 1I;
  #L200cca.  if v0 != 0 then goto L200d0a;
  #L200cce.  v0:= v4.`okhttp3.internal.connection.f.f` @type ^`h.x` @kind object;
  #L200cd2.  if v0 == 0 then goto L200d08;
  #L200cd6.  v0:= `@@h.n0.l.d.a` @type ^`h.n0.l.d` @kind object;
  #L200cda.  call temp:= `host`(v5) @signature `Lh/z;.host:()Ljava/lang/String;` @kind virtual;
  #L200ce0.  v5:= temp @kind object;
  #L200ce2.  v3:= v4.`okhttp3.internal.connection.f.f` @type ^`h.x` @kind object;
  #L200ce6.  call temp:= `peerCertificates`(v3) @signature `Lh/x;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L200cec.  v3:= temp @kind object;
  #L200cee.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L200cf4.  v3:= temp @kind object;
  #L200cf6.  v3:= (`java.security.cert.X509Certificate`) v3 @kind object;
  #L200cfa.  call temp:= `verify`(v0, v5, v3) @signature `Lh/n0/l/d;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind virtual;
  #L200d00.  v5:= temp;
  #L200d02.  if v5 == 0 then goto L200d08;
  #L200d06.  goto L200d0a;
  #L200d08.  v1:= 0I;
  #L200d0a.  return v1;
}
procedure `java.lang.String` `toString`(`okhttp3.internal.connection.f` v2 @kind this) @signature `Lokhttp3/internal/connection/f;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L200d1c.  v0:= new `java.lang.StringBuilder`;
  #L200d20.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L200d26.  v1:= "Connection{" @kind object;
  #L200d2a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L200d30.  v1:= v2.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L200d34.  call temp:= `address`(v1) @signature `Lh/k0;.address:()Lh/e;` @kind virtual;
  #L200d3a.  v1:= temp @kind object;
  #L200d3c.  call temp:= `url`(v1) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L200d42.  v1:= temp @kind object;
  #L200d44.  call temp:= `host`(v1) @signature `Lh/z;.host:()Ljava/lang/String;` @kind virtual;
  #L200d4a.  v1:= temp @kind object;
  #L200d4c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L200d52.  v1:= ":" @kind object;
  #L200d56.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L200d5c.  v1:= v2.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L200d60.  call temp:= `address`(v1) @signature `Lh/k0;.address:()Lh/e;` @kind virtual;
  #L200d66.  v1:= temp @kind object;
  #L200d68.  call temp:= `url`(v1) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L200d6e.  v1:= temp @kind object;
  #L200d70.  call temp:= `port`(v1) @signature `Lh/z;.port:()I` @kind virtual;
  #L200d76.  v1:= temp;
  #L200d78.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L200d7e.  v1:= ", proxy=" @kind object;
  #L200d82.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L200d88.  v1:= v2.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L200d8c.  call temp:= `proxy`(v1) @signature `Lh/k0;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L200d92.  v1:= temp @kind object;
  #L200d94.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L200d9a.  v1:= " hostAddress=" @kind object;
  #L200d9e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L200da4.  v1:= v2.`okhttp3.internal.connection.f.c` @type ^`h.k0` @kind object;
  #L200da8.  call temp:= `socketAddress`(v1) @signature `Lh/k0;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L200dae.  v1:= temp @kind object;
  #L200db0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L200db6.  v1:= " cipherSuite=" @kind object;
  #L200dba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L200dc0.  v1:= v2.`okhttp3.internal.connection.f.f` @type ^`h.x` @kind object;
  #L200dc4.  if v1 == 0 then goto L200dd2;
  #L200dc8.  call temp:= `cipherSuite`(v1) @signature `Lh/x;.cipherSuite:()Lh/m;` @kind virtual;
  #L200dce.  v1:= temp @kind object;
  #L200dd0.  goto L200dd6;
  #L200dd2.  v1:= "none" @kind object;
  #L200dd6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L200ddc.  v1:= " protocol=" @kind object;
  #L200de0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L200de6.  v1:= v2.`okhttp3.internal.connection.f.g` @type ^`h.e0` @kind object;
  #L200dea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L200df0.  v1:= 125I;
  #L200df4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L200dfa.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L200e00.  v0:= temp @kind object;
  #L200e02.  return v0 @kind object;
}
