record `okhttp3.internal.connection.b` @kind class @AccessFlag PUBLIC_FINAL extends `h.a0` @kind interface {
}
procedure `void` `<init>`(`okhttp3.internal.connection.b` v0 @kind this, `h.d0` v1 @kind object) @signature `Lokhttp3/internal/connection/b;.<init>:(Lh/d0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1ff704.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ff70a.  return @kind void;
}
procedure `h.i0` `intercept`(`okhttp3.internal.connection.b` v5 @kind this, `h.a0$a` v6 @kind object) @signature `Lokhttp3/internal/connection/b;.intercept:(Lh/a0$a;)Lh/i0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1ff6b4.  v0:= v6 @kind object;
  #L1ff6b6.  v0:= (`h.n0.h.g`) v0 @kind object;
  #L1ff6ba.  call temp:= `request`(v0) @signature `Lh/n0/h/g;.request:()Lh/g0;` @kind virtual;
  #L1ff6c0.  v1:= temp @kind object;
  #L1ff6c2.  call temp:= `transmitter`(v0) @signature `Lh/n0/h/g;.transmitter:()Lokhttp3/internal/connection/j;` @kind virtual;
  #L1ff6c8.  v2:= temp @kind object;
  #L1ff6ca.  call temp:= `method`(v1) @signature `Lh/g0;.method:()Ljava/lang/String;` @kind virtual;
  #L1ff6d0.  v3:= temp @kind object;
  #L1ff6d2.  v4:= "GET" @kind object;
  #L1ff6d6.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1ff6dc.  v3:= temp;
  #L1ff6de.  v3:= v3 ^~ 1;
  #L1ff6e2.  call temp:= `a`(v2, v6, v3) @signature `Lokhttp3/internal/connection/j;.a:(Lh/a0$a;Z)Lokhttp3/internal/connection/d;` @kind virtual;
  #L1ff6e8.  v6:= temp @kind object;
  #L1ff6ea.  call temp:= `proceed`(v0, v1, v2, v6) @signature `Lh/n0/h/g;.proceed:(Lh/g0;Lokhttp3/internal/connection/j;Lokhttp3/internal/connection/d;)Lh/i0;` @kind virtual;
  #L1ff6f0.  v6:= temp @kind object;
  #L1ff6f2.  return v6 @kind object;
}
