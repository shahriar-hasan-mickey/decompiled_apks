record `okhttp3.internal.connection.d$b` @kind class @AccessFlag FINAL extends `i.k` @kind class {
  `long` `okhttp3.internal.connection.d$b.f` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.internal.connection.d$b.g` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.d$b.h` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.d$b.i` @AccessFlag PRIVATE;
  `okhttp3.internal.connection.d` `okhttp3.internal.connection.d$b.j` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.connection.d$b` v1 @kind this, `okhttp3.internal.connection.d` v2 @kind object, `i.z` v3 @kind object, `long` v4 ) @signature `Lokhttp3/internal/connection/d$b;.<init>:(Lokhttp3/internal/connection/d;Li/z;J)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1ffbac.  v1.`okhttp3.internal.connection.d$b.j` @type ^`okhttp3.internal.connection.d` := v2 @kind object;
  #L1ffbb0.  call `<init>`(v1, v3) @signature `Li/k;.<init>:(Li/z;)V` @kind direct;
  #L1ffbb6.  v1.`okhttp3.internal.connection.d$b.f` @type ^`long` := v4 @kind wide;
  #L1ffbba.  v2:= 0L;
  #L1ffbbe.  v0:= lcmp(v4, v2);
  #L1ffbc2.  if v0 != 0 then goto L1ffbce;
  #L1ffbc6.  v2:= 0I;
  #L1ffbc8.  call temp:= `a`(v1, v2) @signature `Lokhttp3/internal/connection/d$b;.a:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L1ffbce.  return @kind void;
}
procedure `java.io.IOException` `a`(`okhttp3.internal.connection.d$b` v7 @kind this, `java.io.IOException` v8 @kind object) @signature `Lokhttp3/internal/connection/d$b;.a:(Ljava/io/IOException;)Ljava/io/IOException;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1ffa90.  v0:= v7.`okhttp3.internal.connection.d$b.h` @type ^`boolean` @kind boolean;
  #L1ffa94.  if v0 == 0 then goto L1ffa9a;
  #L1ffa98.  return v8 @kind object;
  #L1ffa9a.  v0:= 1I;
  #L1ffa9c.  v7.`okhttp3.internal.connection.d$b.h` @type ^`boolean` := v0 @kind boolean;
  #L1ffaa0.  v1:= v7.`okhttp3.internal.connection.d$b.j` @type ^`okhttp3.internal.connection.d` @kind object;
  #L1ffaa4.  v2:= v7.`okhttp3.internal.connection.d$b.g` @type ^`long` @kind wide;
  #L1ffaa8.  v4:= 1I;
  #L1ffaaa.  v5:= 0I;
  #L1ffaac.  v6:= v8 @kind object;
  #L1ffaae.  call temp:= `a`(v1, v2, v4, v5, v6) @signature `Lokhttp3/internal/connection/d;.a:(JZZLjava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L1ffab4.  v8:= temp @kind object;
  #L1ffab6.  return v8 @kind object;
}
procedure `void` `close`(`okhttp3.internal.connection.d$b` v1 @kind this) @signature `Lokhttp3/internal/connection/d$b;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ffbe0.  v0:= v1.`okhttp3.internal.connection.d$b.i` @type ^`boolean` @kind boolean;
  #L1ffbe4.  if v0 == 0 then goto L1ffbea;
  #L1ffbe8.  return @kind void;
  #L1ffbea.  v0:= 1I;
  #L1ffbec.  v1.`okhttp3.internal.connection.d$b.i` @type ^`boolean` := v0 @kind boolean;
  #L1ffbf0.  call `close`(v1) @signature `Li/k;.close:()V` @kind super;
  #L1ffbf6.  v0:= 0I;
  #L1ffbf8.  call temp:= `a`(v1, v0) @signature `Lokhttp3/internal/connection/d$b;.a:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L1ffbfe.  return @kind void;
  #L1ffc00.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1ffc02.  call temp:= `a`(v1, v0) @signature `Lokhttp3/internal/connection/d$b;.a:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L1ffc08.  v0:= temp @kind object;
  #L1ffc0a.  throw v0;
  catch `java.io.IOException` @[L1ffbf0..L1ffbfe] goto L1ffc00;
}
procedure `long` `read`(`okhttp3.internal.connection.d$b` v7 @kind this, `i.e` v8 @kind object, `long` v9 ) @signature `Lokhttp3/internal/connection/d$b;.read:(Li/e;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1ffac8.  v0:= v7.`okhttp3.internal.connection.d$b.i` @type ^`boolean` @kind boolean;
  #L1ffacc.  if v0 != 0 then goto L1ffb7c;
  #L1ffad0.  call temp:= `delegate`(v7) @signature `Li/k;.delegate:()Li/z;` @kind virtual;
  #L1ffad6.  v0:= temp @kind object;
  #L1ffad8.  call temp:= `read`(v0, v8, v9) @signature `Li/z;.read:(Li/e;J)J` @kind interface;
  #L1ffade.  v8:= temp @kind wide;
  #L1ffae0.  v10:= 0I;
  #L1ffae2.  v0:= -1L;
  #L1ffae6.  v2:= lcmp(v8, v0);
  #L1ffaea.  if v2 != 0 then goto L1ffaf6;
  #L1ffaee.  call temp:= `a`(v7, v10) @signature `Lokhttp3/internal/connection/d$b;.a:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L1ffaf4.  return v0 @kind wide;
  #L1ffaf6.  v2:= v7.`okhttp3.internal.connection.d$b.g` @type ^`long` @kind wide;
  #L1ffafa.  v2:= v2 + v8 @kind long;
  #L1ffafc.  v4:= v7.`okhttp3.internal.connection.d$b.f` @type ^`long` @kind wide;
  #L1ffb00.  v6:= lcmp(v4, v0);
  #L1ffb04.  if v6 == 0 then goto L1ffb58;
  #L1ffb08.  v0:= v7.`okhttp3.internal.connection.d$b.f` @type ^`long` @kind wide;
  #L1ffb0c.  v4:= lcmp(v2, v0);
  #L1ffb10.  if v4 > 0 then goto L1ffb16;
  #L1ffb14.  goto L1ffb58;
  #L1ffb16.  v8:= new `java.net.ProtocolException`;
  #L1ffb1a.  v9:= new `java.lang.StringBuilder`;
  #L1ffb1e.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1ffb24.  v10:= "expected " @kind object;
  #L1ffb28.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ffb2e.  v0:= v7.`okhttp3.internal.connection.d$b.f` @type ^`long` @kind wide;
  #L1ffb32.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ffb38.  v10:= " bytes but received " @kind object;
  #L1ffb3c.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ffb42.  call temp:= `append`(v9, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L1ffb48.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1ffb4e.  v9:= temp @kind object;
  #L1ffb50.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ffb56.  throw v8;
  #L1ffb58.  v7.`okhttp3.internal.connection.d$b.g` @type ^`long` := v2 @kind wide;
  #L1ffb5c.  v0:= v7.`okhttp3.internal.connection.d$b.f` @type ^`long` @kind wide;
  #L1ffb60.  v4:= lcmp(v2, v0);
  #L1ffb64.  if v4 != 0 then goto L1ffb6e;
  #L1ffb68.  call temp:= `a`(v7, v10) @signature `Lokhttp3/internal/connection/d$b;.a:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L1ffb6e.  return v8 @kind wide;
  #L1ffb70.  v8:= Exception @type ^`java.io.IOException` @kind object;
  #L1ffb72.  call temp:= `a`(v7, v8) @signature `Lokhttp3/internal/connection/d$b;.a:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L1ffb78.  v8:= temp @kind object;
  #L1ffb7a.  throw v8;
  #L1ffb7c.  v8:= new `java.lang.IllegalStateException`;
  #L1ffb80.  v9:= "closed" @kind object;
  #L1ffb84.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ffb8a.  throw v8;
  catch `java.io.IOException` @[L1ffad0..L1ffb6e] goto L1ffb70;
}
