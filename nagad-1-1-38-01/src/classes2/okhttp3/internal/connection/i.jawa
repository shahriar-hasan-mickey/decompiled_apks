record `okhttp3.internal.connection.i` @kind class @AccessFlag FINAL {
  `h.e` `okhttp3.internal.connection.i.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.h` `okhttp3.internal.connection.i.b` @AccessFlag PRIVATE_FINAL;
  `h.j` `okhttp3.internal.connection.i.c` @AccessFlag PRIVATE_FINAL;
  `h.v` `okhttp3.internal.connection.i.d` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.internal.connection.i.e` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.i.f` @AccessFlag PRIVATE;
  `java.util.List` `okhttp3.internal.connection.i.g` @AccessFlag PRIVATE;
  `java.util.List` `okhttp3.internal.connection.i.h` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.i` v1 @kind this, `h.e` v2 @kind object, `okhttp3.internal.connection.h` v3 @kind object, `h.j` v4 @kind object, `h.v` v5 @kind object) @signature `Lokhttp3/internal/connection/i;.<init>:(Lh/e;Lokhttp3/internal/connection/h;Lh/j;Lh/v;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L202020.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L202026.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L20202c.  v0:= temp @kind object;
  #L20202e.  v1.`okhttp3.internal.connection.i.e` @type ^`java.util.List` := v0 @kind object;
  #L202032.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L202038.  v0:= temp @kind object;
  #L20203a.  v1.`okhttp3.internal.connection.i.g` @type ^`java.util.List` := v0 @kind object;
  #L20203e.  v0:= new `java.util.ArrayList`;
  #L202042.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L202048.  v1.`okhttp3.internal.connection.i.h` @type ^`java.util.List` := v0 @kind object;
  #L20204c.  v1.`okhttp3.internal.connection.i.a` @type ^`h.e` := v2 @kind object;
  #L202050.  v1.`okhttp3.internal.connection.i.b` @type ^`okhttp3.internal.connection.h` := v3 @kind object;
  #L202054.  v1.`okhttp3.internal.connection.i.c` @type ^`h.j` := v4 @kind object;
  #L202058.  v1.`okhttp3.internal.connection.i.d` @type ^`h.v` := v5 @kind object;
  #L20205c.  call temp:= `url`(v2) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L202062.  v3:= temp @kind object;
  #L202064.  call temp:= `proxy`(v2) @signature `Lh/e;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L20206a.  v2:= temp @kind object;
  #L20206c.  call `a`(v1, v3, v2) @signature `Lokhttp3/internal/connection/i;.a:(Lh/z;Ljava/net/Proxy;)V` @kind direct;
  #L202072.  return @kind void;
}
procedure `java.lang.String` `a`(`java.net.InetSocketAddress` v1 @kind object) @signature `Lokhttp3/internal/connection/i;.a:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;

  #L201e80.  call temp:= `getAddress`(v1) @signature `Ljava/net/InetSocketAddress;.getAddress:()Ljava/net/InetAddress;` @kind virtual;
  #L201e86.  v0:= temp @kind object;
  #L201e88.  if v0 != 0 then goto L201e96;
  #L201e8c.  call temp:= `getHostName`(v1) @signature `Ljava/net/InetSocketAddress;.getHostName:()Ljava/lang/String;` @kind virtual;
  #L201e92.  v1:= temp @kind object;
  #L201e94.  return v1 @kind object;
  #L201e96.  call temp:= `getHostAddress`(v0) @signature `Ljava/net/InetAddress;.getHostAddress:()Ljava/lang/String;` @kind virtual;
  #L201e9c.  v1:= temp @kind object;
  #L201e9e.  return v1 @kind object;
}
procedure `void` `a`(`okhttp3.internal.connection.i` v1 @kind this, `h.z` v2 @kind object, `java.net.Proxy` v3 @kind object) @signature `Lokhttp3/internal/connection/i;.a:(Lh/z;Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L202278.  v0:= 0I;
  #L20227a.  if v3 == 0 then goto L20228c;
  #L20227e.  call temp:= `singletonList`(v3) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L202284.  v2:= temp @kind object;
  #L202286.  v1.`okhttp3.internal.connection.i.e` @type ^`java.util.List` := v2 @kind object;
  #L20228a.  goto L2022dc;
  #L20228c.  v3:= v1.`okhttp3.internal.connection.i.a` @type ^`h.e` @kind object;
  #L202290.  call temp:= `proxySelector`(v3) @signature `Lh/e;.proxySelector:()Ljava/net/ProxySelector;` @kind virtual;
  #L202296.  v3:= temp @kind object;
  #L202298.  call temp:= `uri`(v2) @signature `Lh/z;.uri:()Ljava/net/URI;` @kind virtual;
  #L20229e.  v2:= temp @kind object;
  #L2022a0.  call temp:= `select`(v3, v2) @signature `Ljava/net/ProxySelector;.select:(Ljava/net/URI;)Ljava/util/List;` @kind virtual;
  #L2022a6.  v2:= temp @kind object;
  #L2022a8.  if v2 == 0 then goto L2022c2;
  #L2022ac.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2022b2.  v3:= temp;
  #L2022b4.  if v3 != 0 then goto L2022c2;
  #L2022b8.  call temp:= `immutableList`(v2) @signature `Lh/n0/e;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L2022be.  v2:= temp @kind object;
  #L2022c0.  goto L2022d8;
  #L2022c2.  v2:= 1I;
  #L2022c4.  v2:= new `java.net.Proxy`[v2];
  #L2022c8.  v3:= `@@java.net.Proxy.NO_PROXY` @type ^`java.net.Proxy` @kind object;
  #L2022cc.  v2[v0]:= v3 @kind object;
  #L2022d0.  call temp:= `immutableList`(v2) @signature `Lh/n0/e;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2022d6.  v2:= temp @kind object;
  #L2022d8.  v1.`okhttp3.internal.connection.i.e` @type ^`java.util.List` := v2 @kind object;
  #L2022dc.  v1.`okhttp3.internal.connection.i.f` @type ^`int` := v0;
  #L2022e0.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.connection.i` v6 @kind this, `java.net.Proxy` v7 @kind object) @signature `Lokhttp3/internal/connection/i;.a:(Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L202084.  v0:= new `java.util.ArrayList`;
  #L202088.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L20208e.  v6.`okhttp3.internal.connection.i.g` @type ^`java.util.List` := v0 @kind object;
  #L202092.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L202098.  v0:= temp @kind object;
  #L20209a.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L20209e.  if v0 == v1 then goto L202110;
  #L2020a2.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L2020a8.  v0:= temp @kind object;
  #L2020aa.  v1:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L2020ae.  if v0 != v1 then goto L2020b4;
  #L2020b2.  goto L202110;
  #L2020b4.  call temp:= `address`(v7) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L2020ba.  v0:= temp @kind object;
  #L2020bc.  v1:= instanceof @variable v0 @type ^`java.net.InetSocketAddress` @kind boolean;
  #L2020c0.  if v1 == 0 then goto L2020da;
  #L2020c4.  v0:= (`java.net.InetSocketAddress`) v0 @kind object;
  #L2020c8.  call temp:= `a`(v0) @signature `Lokhttp3/internal/connection/i;.a:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @kind static;
  #L2020ce.  v1:= temp @kind object;
  #L2020d0.  call temp:= `getPort`(v0) @signature `Ljava/net/InetSocketAddress;.getPort:()I` @kind virtual;
  #L2020d6.  v0:= temp;
  #L2020d8.  goto L202138;
  #L2020da.  v7:= new `java.lang.IllegalArgumentException`;
  #L2020de.  v1:= new `java.lang.StringBuilder`;
  #L2020e2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2020e8.  v2:= "Proxy.address() is not an InetSocketAddress: " @kind object;
  #L2020ec.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2020f2.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2020f8.  v0:= temp @kind object;
  #L2020fa.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L202100.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L202106.  v0:= temp @kind object;
  #L202108.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20210e.  throw v7;
  #L202110.  v0:= v6.`okhttp3.internal.connection.i.a` @type ^`h.e` @kind object;
  #L202114.  call temp:= `url`(v0) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L20211a.  v0:= temp @kind object;
  #L20211c.  call temp:= `host`(v0) @signature `Lh/z;.host:()Ljava/lang/String;` @kind virtual;
  #L202122.  v1:= temp @kind object;
  #L202124.  v0:= v6.`okhttp3.internal.connection.i.a` @type ^`h.e` @kind object;
  #L202128.  call temp:= `url`(v0) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L20212e.  v0:= temp @kind object;
  #L202130.  call temp:= `port`(v0) @signature `Lh/z;.port:()I` @kind virtual;
  #L202136.  v0:= temp;
  #L202138.  v2:= 1I;
  #L20213a.  if v0 < v2 then goto L20221e;
  #L20213e.  v2:= 65535I;
  #L202144.  if v0 > v2 then goto L20221e;
  #L202148.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L20214e.  v7:= temp @kind object;
  #L202150.  v2:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L202154.  if v7 != v2 then goto L20216c;
  #L202158.  v7:= v6.`okhttp3.internal.connection.i.g` @type ^`java.util.List` @kind object;
  #L20215c.  call temp:= `createUnresolved`(v1, v0) @signature `Ljava/net/InetSocketAddress;.createUnresolved:(Ljava/lang/String;I)Ljava/net/InetSocketAddress;` @kind static;
  #L202162.  v0:= temp @kind object;
  #L202164.  call temp:= `add`(v7, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L20216a.  goto L2021dc;
  #L20216c.  v7:= v6.`okhttp3.internal.connection.i.d` @type ^`h.v` @kind object;
  #L202170.  v2:= v6.`okhttp3.internal.connection.i.c` @type ^`h.j` @kind object;
  #L202174.  call `dnsStart`(v7, v2, v1) @signature `Lh/v;.dnsStart:(Lh/j;Ljava/lang/String;)V` @kind virtual;
  #L20217a.  v7:= v6.`okhttp3.internal.connection.i.a` @type ^`h.e` @kind object;
  #L20217e.  call temp:= `dns`(v7) @signature `Lh/e;.dns:()Lh/u;` @kind virtual;
  #L202184.  v7:= temp @kind object;
  #L202186.  call temp:= `lookup`(v7, v1) @signature `Lh/u;.lookup:(Ljava/lang/String;)Ljava/util/List;` @kind interface;
  #L20218c.  v7:= temp @kind object;
  #L20218e.  call temp:= `isEmpty`(v7) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L202194.  v2:= temp;
  #L202196.  if v2 != 0 then goto L2021de;
  #L20219a.  v2:= v6.`okhttp3.internal.connection.i.d` @type ^`h.v` @kind object;
  #L20219e.  v3:= v6.`okhttp3.internal.connection.i.c` @type ^`h.j` @kind object;
  #L2021a2.  call `dnsEnd`(v2, v3, v1, v7) @signature `Lh/v;.dnsEnd:(Lh/j;Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L2021a8.  v1:= 0I;
  #L2021aa.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2021b0.  v2:= temp;
  #L2021b2.  if v1 >= v2 then goto L2021dc;
  #L2021b6.  call temp:= `get`(v7, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2021bc.  v3:= temp @kind object;
  #L2021be.  v3:= (`java.net.InetAddress`) v3 @kind object;
  #L2021c2.  v4:= v6.`okhttp3.internal.connection.i.g` @type ^`java.util.List` @kind object;
  #L2021c6.  v5:= new `java.net.InetSocketAddress`;
  #L2021ca.  call `<init>`(v5, v3, v0) @signature `Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V` @kind direct;
  #L2021d0.  call temp:= `add`(v4, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2021d6.  v1:= v1 + 1;
  #L2021da.  goto L2021b2;
  #L2021dc.  return @kind void;
  #L2021de.  v7:= new `java.net.UnknownHostException`;
  #L2021e2.  v0:= new `java.lang.StringBuilder`;
  #L2021e6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2021ec.  v2:= v6.`okhttp3.internal.connection.i.a` @type ^`h.e` @kind object;
  #L2021f0.  call temp:= `dns`(v2) @signature `Lh/e;.dns:()Lh/u;` @kind virtual;
  #L2021f6.  v2:= temp @kind object;
  #L2021f8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2021fe.  v2:= " returned no addresses for " @kind object;
  #L202202.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L202208.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20220e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L202214.  v0:= temp @kind object;
  #L202216.  call `<init>`(v7, v0) @signature `Ljava/net/UnknownHostException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20221c.  throw v7;
  #L20221e.  v7:= new `java.net.SocketException`;
  #L202222.  v2:= new `java.lang.StringBuilder`;
  #L202226.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20222c.  v3:= "No route to " @kind object;
  #L202230.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L202236.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20223c.  v1:= ":" @kind object;
  #L202240.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L202246.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L20224c.  v0:= "; port is out of range" @kind object;
  #L202250.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L202256.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20225c.  v0:= temp @kind object;
  #L20225e.  call `<init>`(v7, v0) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L202264.  throw v7;
}
procedure `boolean` `a`(`okhttp3.internal.connection.i` v2 @kind this) @signature `Lokhttp3/internal/connection/i;.a:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L201e54.  v0:= v2.`okhttp3.internal.connection.i.f` @type ^`int`;
  #L201e58.  v1:= v2.`okhttp3.internal.connection.i.e` @type ^`java.util.List` @kind object;
  #L201e5c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L201e62.  v1:= temp;
  #L201e64.  if v0 >= v1 then goto L201e6c;
  #L201e68.  v0:= 1I;
  #L201e6a.  goto L201e6e;
  #L201e6c.  v0:= 0I;
  #L201e6e.  return v0;
}
procedure `java.net.Proxy` `b`(`okhttp3.internal.connection.i` v3 @kind this) @signature `Lokhttp3/internal/connection/i;.b:()Ljava/net/Proxy;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L201eb0.  call temp:= `a`(v3) @signature `Lokhttp3/internal/connection/i;.a:()Z` @kind direct;
  #L201eb6.  v0:= temp;
  #L201eb8.  if v0 == 0 then goto L201ee0;
  #L201ebc.  v0:= v3.`okhttp3.internal.connection.i.e` @type ^`java.util.List` @kind object;
  #L201ec0.  v1:= v3.`okhttp3.internal.connection.i.f` @type ^`int`;
  #L201ec4.  v2:= v1 + 1;
  #L201ec8.  v3.`okhttp3.internal.connection.i.f` @type ^`int` := v2;
  #L201ecc.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L201ed2.  v0:= temp @kind object;
  #L201ed4.  v0:= (`java.net.Proxy`) v0 @kind object;
  #L201ed8.  call `a`(v3, v0) @signature `Lokhttp3/internal/connection/i;.a:(Ljava/net/Proxy;)V` @kind direct;
  #L201ede.  return v0 @kind object;
  #L201ee0.  v0:= new `java.net.SocketException`;
  #L201ee4.  v1:= new `java.lang.StringBuilder`;
  #L201ee8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L201eee.  v2:= "No route to " @kind object;
  #L201ef2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L201ef8.  v2:= v3.`okhttp3.internal.connection.i.a` @type ^`h.e` @kind object;
  #L201efc.  call temp:= `url`(v2) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L201f02.  v2:= temp @kind object;
  #L201f04.  call temp:= `host`(v2) @signature `Lh/z;.host:()Ljava/lang/String;` @kind virtual;
  #L201f0a.  v2:= temp @kind object;
  #L201f0c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L201f12.  v2:= "; exhausted proxy configurations: " @kind object;
  #L201f16.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L201f1c.  v2:= v3.`okhttp3.internal.connection.i.e` @type ^`java.util.List` @kind object;
  #L201f20.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L201f26.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L201f2c.  v1:= temp @kind object;
  #L201f2e.  call `<init>`(v0, v1) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L201f34.  throw v0;
}
procedure `boolean` `hasNext`(`okhttp3.internal.connection.i` v1 @kind this) @signature `Lokhttp3/internal/connection/i;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L201e1c.  call temp:= `a`(v1) @signature `Lokhttp3/internal/connection/i;.a:()Z` @kind direct;
  #L201e22.  v0:= temp;
  #L201e24.  if v0 != 0 then goto L201e3e;
  #L201e28.  v0:= v1.`okhttp3.internal.connection.i.h` @type ^`java.util.List` @kind object;
  #L201e2c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L201e32.  v0:= temp;
  #L201e34.  if v0 != 0 then goto L201e3a;
  #L201e38.  goto L201e3e;
  #L201e3a.  v0:= 0I;
  #L201e3c.  goto L201e40;
  #L201e3e.  v0:= 1I;
  #L201e40.  return v0;
}
procedure `okhttp3.internal.connection.i$a` `next`(`okhttp3.internal.connection.i` v7 @kind this) @signature `Lokhttp3/internal/connection/i;.next:()Lokhttp3/internal/connection/i$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L201f48.  call temp:= `hasNext`(v7) @signature `Lokhttp3/internal/connection/i;.hasNext:()Z` @kind virtual;
  #L201f4e.  v0:= temp;
  #L201f50.  if v0 == 0 then goto L202002;
  #L201f54.  v0:= new `java.util.ArrayList`;
  #L201f58.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L201f5e.  call temp:= `a`(v7) @signature `Lokhttp3/internal/connection/i;.a:()Z` @kind direct;
  #L201f64.  v1:= temp;
  #L201f66.  if v1 == 0 then goto L201fd6;
  #L201f6a.  call temp:= `b`(v7) @signature `Lokhttp3/internal/connection/i;.b:()Ljava/net/Proxy;` @kind direct;
  #L201f70.  v1:= temp @kind object;
  #L201f72.  v2:= 0I;
  #L201f74.  v3:= v7.`okhttp3.internal.connection.i.g` @type ^`java.util.List` @kind object;
  #L201f78.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L201f7e.  v3:= temp;
  #L201f80.  if v2 >= v3 then goto L201fca;
  #L201f84.  v4:= new `h.k0`;
  #L201f88.  v5:= v7.`okhttp3.internal.connection.i.a` @type ^`h.e` @kind object;
  #L201f8c.  v6:= v7.`okhttp3.internal.connection.i.g` @type ^`java.util.List` @kind object;
  #L201f90.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L201f96.  v6:= temp @kind object;
  #L201f98.  v6:= (`java.net.InetSocketAddress`) v6 @kind object;
  #L201f9c.  call `<init>`(v4, v5, v1, v6) @signature `Lh/k0;.<init>:(Lh/e;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @kind direct;
  #L201fa2.  v5:= v7.`okhttp3.internal.connection.i.b` @type ^`okhttp3.internal.connection.h` @kind object;
  #L201fa6.  call temp:= `shouldPostpone`(v5, v4) @signature `Lokhttp3/internal/connection/h;.shouldPostpone:(Lh/k0;)Z` @kind virtual;
  #L201fac.  v5:= temp;
  #L201fae.  if v5 == 0 then goto L201fbe;
  #L201fb2.  v5:= v7.`okhttp3.internal.connection.i.h` @type ^`java.util.List` @kind object;
  #L201fb6.  call temp:= `add`(v5, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L201fbc.  goto L201fc4;
  #L201fbe.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L201fc4.  v2:= v2 + 1;
  #L201fc8.  goto L201f80;
  #L201fca.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L201fd0.  v1:= temp;
  #L201fd2.  if v1 != 0 then goto L201f5e;
  #L201fd6.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L201fdc.  v1:= temp;
  #L201fde.  if v1 == 0 then goto L201ff6;
  #L201fe2.  v1:= v7.`okhttp3.internal.connection.i.h` @type ^`java.util.List` @kind object;
  #L201fe6.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L201fec.  v1:= v7.`okhttp3.internal.connection.i.h` @type ^`java.util.List` @kind object;
  #L201ff0.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L201ff6.  v1:= new `okhttp3.internal.connection.i$a`;
  #L201ffa.  call `<init>`(v1, v0) @signature `Lokhttp3/internal/connection/i$a;.<init>:(Ljava/util/List;)V` @kind direct;
  #L202000.  return v1 @kind object;
  #L202002.  v0:= new `java.util.NoSuchElementException`;
  #L202006.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L20200c.  throw v0;
}
