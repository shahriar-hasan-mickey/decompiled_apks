record `okhttp3.internal.connection.j` @kind class @AccessFlag PUBLIC_FINAL {
  `h.d0` `okhttp3.internal.connection.j.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.g` `okhttp3.internal.connection.j.b` @AccessFlag PRIVATE_FINAL;
  `h.j` `okhttp3.internal.connection.j.c` @AccessFlag PRIVATE_FINAL;
  `h.v` `okhttp3.internal.connection.j.d` @AccessFlag PRIVATE_FINAL;
  `i.d` `okhttp3.internal.connection.j.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `okhttp3.internal.connection.j.f` @AccessFlag PRIVATE;
  `h.g0` `okhttp3.internal.connection.j.g` @AccessFlag PRIVATE;
  `okhttp3.internal.connection.e` `okhttp3.internal.connection.j.h` @AccessFlag PRIVATE;
  `okhttp3.internal.connection.f` `okhttp3.internal.connection.j.i` @AccessFlag PUBLIC;
  `okhttp3.internal.connection.d` `okhttp3.internal.connection.j.j` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.j.k` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.j.l` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.j.m` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.j.n` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.j.o` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.internal.connection.j` v2 @kind this, `h.d0` v3 @kind object, `h.j` v4 @kind object) @signature `Lokhttp3/internal/connection/j;.<init>:(Lh/d0;Lh/j;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L202858.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20285e.  v0:= new `okhttp3.internal.connection.j$a`;
  #L202862.  call `<init>`(v0, v2) @signature `Lokhttp3/internal/connection/j$a;.<init>:(Lokhttp3/internal/connection/j;)V` @kind direct;
  #L202868.  v2.`okhttp3.internal.connection.j.e` @type ^`i.d` := v0 @kind object;
  #L20286c.  v2.`okhttp3.internal.connection.j.a` @type ^`h.d0` := v3 @kind object;
  #L202870.  v0:= `@@h.n0.c.a` @type ^`h.n0.c` @kind object;
  #L202874.  call temp:= `connectionPool`(v3) @signature `Lh/d0;.connectionPool:()Lh/o;` @kind virtual;
  #L20287a.  v1:= temp @kind object;
  #L20287c.  call temp:= `realConnectionPool`(v0, v1) @signature `Lh/n0/c;.realConnectionPool:(Lh/o;)Lokhttp3/internal/connection/g;` @kind virtual;
  #L202882.  v0:= temp @kind object;
  #L202884.  v2.`okhttp3.internal.connection.j.b` @type ^`okhttp3.internal.connection.g` := v0 @kind object;
  #L202888.  v2.`okhttp3.internal.connection.j.c` @type ^`h.j` := v4 @kind object;
  #L20288c.  call temp:= `eventListenerFactory`(v3) @signature `Lh/d0;.eventListenerFactory:()Lh/v$b;` @kind virtual;
  #L202892.  v0:= temp @kind object;
  #L202894.  call temp:= `create`(v0, v4) @signature `Lh/v$b;.create:(Lh/j;)Lh/v;` @kind interface;
  #L20289a.  v4:= temp @kind object;
  #L20289c.  v2.`okhttp3.internal.connection.j.d` @type ^`h.v` := v4 @kind object;
  #L2028a0.  v4:= v2.`okhttp3.internal.connection.j.e` @type ^`i.d` @kind object;
  #L2028a4.  call temp:= `callTimeoutMillis`(v3) @signature `Lh/d0;.callTimeoutMillis:()I` @kind virtual;
  #L2028aa.  v3:= temp;
  #L2028ac.  v0:= (`long`) v3 @kind i2l;
  #L2028ae.  v3:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2028b2.  call temp:= `timeout`(v4, v0, v3) @signature `Li/a0;.timeout:(JLjava/util/concurrent/TimeUnit;)Li/a0;` @kind virtual;
  #L2028b8.  return @kind void;
}
procedure `h.e` `a`(`okhttp3.internal.connection.j` v17 @kind this, `h.z` v18 @kind object) @signature `Lokhttp3/internal/connection/j;.a:(Lh/z;)Lh/e;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L2026c0.  v0:= v17 @kind object;
  #L2026c4.  call temp:= `isHttps`(v18) @signature `Lh/z;.isHttps:()Z` @kind virtual;
  #L2026ca.  v1:= temp;
  #L2026cc.  v2:= 0I;
  #L2026ce.  if v1 == 0 then goto L2026fe;
  #L2026d2.  v1:= v0.`okhttp3.internal.connection.j.a` @type ^`h.d0` @kind object;
  #L2026d6.  call temp:= `sslSocketFactory`(v1) @signature `Lh/d0;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L2026dc.  v2:= temp @kind object;
  #L2026de.  v1:= v0.`okhttp3.internal.connection.j.a` @type ^`h.d0` @kind object;
  #L2026e2.  call temp:= `hostnameVerifier`(v1) @signature `Lh/d0;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L2026e8.  v1:= temp @kind object;
  #L2026ea.  v3:= v0.`okhttp3.internal.connection.j.a` @type ^`h.d0` @kind object;
  #L2026ee.  call temp:= `certificatePinner`(v3) @signature `Lh/d0;.certificatePinner:()Lh/l;` @kind virtual;
  #L2026f4.  v3:= temp @kind object;
  #L2026f6.  v10:= v1 @kind object;
  #L2026f8.  v9:= v2 @kind object;
  #L2026fa.  v11:= v3 @kind object;
  #L2026fc.  goto L202704;
  #L2026fe.  v9:= v2 @kind object;
  #L202700.  v10:= v9 @kind object;
  #L202702.  v11:= v10 @kind object;
  #L202704.  v1:= new `h.e`;
  #L202708.  call temp:= `host`(v18) @signature `Lh/z;.host:()Ljava/lang/String;` @kind virtual;
  #L20270e.  v5:= temp @kind object;
  #L202710.  call temp:= `port`(v18) @signature `Lh/z;.port:()I` @kind virtual;
  #L202716.  v6:= temp;
  #L202718.  v2:= v0.`okhttp3.internal.connection.j.a` @type ^`h.d0` @kind object;
  #L20271c.  call temp:= `dns`(v2) @signature `Lh/d0;.dns:()Lh/u;` @kind virtual;
  #L202722.  v7:= temp @kind object;
  #L202724.  v2:= v0.`okhttp3.internal.connection.j.a` @type ^`h.d0` @kind object;
  #L202728.  call temp:= `socketFactory`(v2) @signature `Lh/d0;.socketFactory:()Ljavax/net/SocketFactory;` @kind virtual;
  #L20272e.  v8:= temp @kind object;
  #L202730.  v2:= v0.`okhttp3.internal.connection.j.a` @type ^`h.d0` @kind object;
  #L202734.  call temp:= `proxyAuthenticator`(v2) @signature `Lh/d0;.proxyAuthenticator:()Lh/g;` @kind virtual;
  #L20273a.  v12:= temp @kind object;
  #L20273c.  v2:= v0.`okhttp3.internal.connection.j.a` @type ^`h.d0` @kind object;
  #L202740.  call temp:= `proxy`(v2) @signature `Lh/d0;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L202746.  v13:= temp @kind object;
  #L202748.  v2:= v0.`okhttp3.internal.connection.j.a` @type ^`h.d0` @kind object;
  #L20274c.  call temp:= `protocols`(v2) @signature `Lh/d0;.protocols:()Ljava/util/List;` @kind virtual;
  #L202752.  v14:= temp @kind object;
  #L202754.  v2:= v0.`okhttp3.internal.connection.j.a` @type ^`h.d0` @kind object;
  #L202758.  call temp:= `connectionSpecs`(v2) @signature `Lh/d0;.connectionSpecs:()Ljava/util/List;` @kind virtual;
  #L20275e.  v15:= temp @kind object;
  #L202760.  v2:= v0.`okhttp3.internal.connection.j.a` @type ^`h.d0` @kind object;
  #L202764.  call temp:= `proxySelector`(v2) @signature `Lh/d0;.proxySelector:()Ljava/net/ProxySelector;` @kind virtual;
  #L20276a.  v16:= temp @kind object;
  #L20276c.  v4:= v1 @kind object;
  #L20276e.  call `<init>`(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16) @signature `Lh/e;.<init>:(Ljava/lang/String;ILh/u;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;Lh/l;Lh/g;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V` @kind direct;
  #L202774.  return v1 @kind object;
}
procedure `java.io.IOException` `a`(`okhttp3.internal.connection.j` v2 @kind this, `java.io.IOException` v3 @kind object) @signature `Lokhttp3/internal/connection/j;.a:(Ljava/io/IOException;)Ljava/io/IOException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2025cc.  v0:= v2.`okhttp3.internal.connection.j.n` @type ^`boolean` @kind boolean;
  #L2025d0.  if v0 == 0 then goto L2025d6;
  #L2025d4.  return v3 @kind object;
  #L2025d6.  v0:= v2.`okhttp3.internal.connection.j.e` @type ^`i.d` @kind object;
  #L2025da.  call temp:= `exit`(v0) @signature `Li/d;.exit:()Z` @kind virtual;
  #L2025e0.  v0:= temp;
  #L2025e2.  if v0 != 0 then goto L2025e8;
  #L2025e6.  return v3 @kind object;
  #L2025e8.  v0:= new `java.io.InterruptedIOException`;
  #L2025ec.  v1:= "timeout" @kind object;
  #L2025f0.  call `<init>`(v0, v1) @signature `Ljava/io/InterruptedIOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2025f6.  if v3 == 0 then goto L202600;
  #L2025fa.  call temp:= `initCause`(v0, v3) @signature `Ljava/io/InterruptedIOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L202600.  return v0 @kind object;
}
procedure `java.io.IOException` `a`(`okhttp3.internal.connection.j` v5 @kind this, `java.io.IOException` v6 @kind object, `boolean` v7 ) @signature `Lokhttp3/internal/connection/j;.a:(Ljava/io/IOException;Z)Ljava/io/IOException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L202494.  v0:= v5.`okhttp3.internal.connection.j.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L202498.  @monitorenter v0
  #L20249a.  if v7 == 0 then goto L2024b8;
  #L20249e.  v1:= v5.`okhttp3.internal.connection.j.j` @type ^`okhttp3.internal.connection.d` @kind object;
  #L2024a2.  if v1 != 0 then goto L2024a8;
  #L2024a6.  goto L2024b8;
  #L2024a8.  v6:= new `java.lang.IllegalStateException`;
  #L2024ac.  v7:= "cannot release connection while it is in use" @kind object;
  #L2024b0.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2024b6.  throw v6;
  #L2024b8.  v1:= v5.`okhttp3.internal.connection.j.i` @type ^`okhttp3.internal.connection.f` @kind object;
  #L2024bc.  v2:= v5.`okhttp3.internal.connection.j.i` @type ^`okhttp3.internal.connection.f` @kind object;
  #L2024c0.  v3:= 0I;
  #L2024c2.  if v2 == 0 then goto L2024e4;
  #L2024c6.  v2:= v5.`okhttp3.internal.connection.j.j` @type ^`okhttp3.internal.connection.d` @kind object;
  #L2024ca.  if v2 != 0 then goto L2024e4;
  #L2024ce.  if v7 != 0 then goto L2024da;
  #L2024d2.  v7:= v5.`okhttp3.internal.connection.j.o` @type ^`boolean` @kind boolean;
  #L2024d6.  if v7 == 0 then goto L2024e4;
  #L2024da.  call temp:= `a`(v5) @signature `Lokhttp3/internal/connection/j;.a:()Ljava/net/Socket;` @kind virtual;
  #L2024e0.  v7:= temp @kind object;
  #L2024e2.  goto L2024e6;
  #L2024e4.  v7:= v3 @kind object;
  #L2024e6.  v2:= v5.`okhttp3.internal.connection.j.i` @type ^`okhttp3.internal.connection.f` @kind object;
  #L2024ea.  if v2 == 0 then goto L2024f0;
  #L2024ee.  v1:= v3 @kind object;
  #L2024f0.  v2:= v5.`okhttp3.internal.connection.j.o` @type ^`boolean` @kind boolean;
  #L2024f4.  v3:= 1I;
  #L2024f6.  v4:= 0I;
  #L2024f8.  if v2 == 0 then goto L202508;
  #L2024fc.  v2:= v5.`okhttp3.internal.connection.j.j` @type ^`okhttp3.internal.connection.d` @kind object;
  #L202500.  if v2 != 0 then goto L202508;
  #L202504.  v2:= 1I;
  #L202506.  goto L20250a;
  #L202508.  v2:= 0I;
  #L20250a.  @monitorexit v0
  #L20250c.  call `closeQuietly`(v7) @signature `Lh/n0/e;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L202512.  if v1 == 0 then goto L202524;
  #L202516.  v7:= v5.`okhttp3.internal.connection.j.d` @type ^`h.v` @kind object;
  #L20251a.  v0:= v5.`okhttp3.internal.connection.j.c` @type ^`h.j` @kind object;
  #L20251e.  call `connectionReleased`(v7, v0, v1) @signature `Lh/v;.connectionReleased:(Lh/j;Lh/n;)V` @kind virtual;
  #L202524.  if v2 == 0 then goto L20255a;
  #L202528.  if v6 == 0 then goto L20252e;
  #L20252c.  goto L202530;
  #L20252e.  v3:= 0I;
  #L202530.  call temp:= `a`(v5, v6) @signature `Lokhttp3/internal/connection/j;.a:(Ljava/io/IOException;)Ljava/io/IOException;` @kind direct;
  #L202536.  v6:= temp @kind object;
  #L202538.  if v3 == 0 then goto L20254c;
  #L20253c.  v7:= v5.`okhttp3.internal.connection.j.d` @type ^`h.v` @kind object;
  #L202540.  v0:= v5.`okhttp3.internal.connection.j.c` @type ^`h.j` @kind object;
  #L202544.  call `callFailed`(v7, v0, v6) @signature `Lh/v;.callFailed:(Lh/j;Ljava/io/IOException;)V` @kind virtual;
  #L20254a.  goto L20255a;
  #L20254c.  v7:= v5.`okhttp3.internal.connection.j.d` @type ^`h.v` @kind object;
  #L202550.  v0:= v5.`okhttp3.internal.connection.j.c` @type ^`h.j` @kind object;
  #L202554.  call `callEnd`(v7, v0) @signature `Lh/v;.callEnd:(Lh/j;)V` @kind virtual;
  #L20255a.  return v6 @kind object;
  #L20255c.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20255e.  @monitorexit v0
  #L202560.  throw v6;
  catch `java.lang.Throwable` @[L20249e..L20250c] goto L20255c;
  catch `java.lang.Throwable` @[L20255e..L202560] goto L20255c;
}
procedure `java.io.IOException` `a`(`okhttp3.internal.connection.j` v2 @kind this, `okhttp3.internal.connection.d` v3 @kind object, `boolean` v4 , `boolean` v5 , `java.io.IOException` v6 @kind object) @signature `Lokhttp3/internal/connection/j;.a:(Lokhttp3/internal/connection/d;ZZLjava/io/IOException;)Ljava/io/IOException;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2023ec.  v0:= v2.`okhttp3.internal.connection.j.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L2023f0.  @monitorenter v0
  #L2023f2.  v1:= v2.`okhttp3.internal.connection.j.j` @type ^`okhttp3.internal.connection.d` @kind object;
  #L2023f6.  if v3 == v1 then goto L2023fe;
  #L2023fa.  @monitorexit v0
  #L2023fc.  return v6 @kind object;
  #L2023fe.  v3:= 0I;
  #L202400.  v1:= 1I;
  #L202402.  if v4 == 0 then goto L202412;
  #L202406.  v4:= v2.`okhttp3.internal.connection.j.k` @type ^`boolean` @kind boolean;
  #L20240a.  v4:= v4 ^~ v1 @kind int;
  #L20240c.  v2.`okhttp3.internal.connection.j.k` @type ^`boolean` := v1 @kind boolean;
  #L202410.  goto L202414;
  #L202412.  v4:= 0I;
  #L202414.  if v5 == 0 then goto L202426;
  #L202418.  v5:= v2.`okhttp3.internal.connection.j.l` @type ^`boolean` @kind boolean;
  #L20241c.  if v5 != 0 then goto L202422;
  #L202420.  v4:= 1I;
  #L202422.  v2.`okhttp3.internal.connection.j.l` @type ^`boolean` := v1 @kind boolean;
  #L202426.  v5:= v2.`okhttp3.internal.connection.j.k` @type ^`boolean` @kind boolean;
  #L20242a.  if v5 == 0 then goto L202458;
  #L20242e.  v5:= v2.`okhttp3.internal.connection.j.l` @type ^`boolean` @kind boolean;
  #L202432.  if v5 == 0 then goto L202458;
  #L202436.  if v4 == 0 then goto L202458;
  #L20243a.  v4:= v2.`okhttp3.internal.connection.j.j` @type ^`okhttp3.internal.connection.d` @kind object;
  #L20243e.  call temp:= `connection`(v4) @signature `Lokhttp3/internal/connection/d;.connection:()Lokhttp3/internal/connection/f;` @kind virtual;
  #L202444.  v4:= temp @kind object;
  #L202446.  v5:= v4.`okhttp3.internal.connection.f.m` @type ^`int`;
  #L20244a.  v5:= v5 + v1 @kind int;
  #L20244c.  v4.`okhttp3.internal.connection.f.m` @type ^`int` := v5;
  #L202450.  v4:= 0I;
  #L202452.  v2.`okhttp3.internal.connection.j.j` @type ^`okhttp3.internal.connection.d` := v4 @kind object;
  #L202456.  goto L20245a;
  #L202458.  v1:= 0I;
  #L20245a.  @monitorexit v0
  #L20245c.  if v1 == 0 then goto L202468;
  #L202460.  call temp:= `a`(v2, v6, v3) @signature `Lokhttp3/internal/connection/j;.a:(Ljava/io/IOException;Z)Ljava/io/IOException;` @kind direct;
  #L202466.  v6:= temp @kind object;
  #L202468.  return v6 @kind object;
  #L20246a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20246c.  @monitorexit v0
  #L20246e.  throw v3;
  catch `java.lang.Throwable` @[L2023f2..L20245c] goto L20246a;
  catch `java.lang.Throwable` @[L20246c..L20246e] goto L20246a;
}
procedure `java.net.Socket` `a`(`okhttp3.internal.connection.j` v4 @kind this) @signature `Lokhttp3/internal/connection/j;.a:()Ljava/net/Socket;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L202614.  v0:= 0I;
  #L202616.  v1:= v4.`okhttp3.internal.connection.j.i` @type ^`okhttp3.internal.connection.f` @kind object;
  #L20261a.  v1:= v1.`okhttp3.internal.connection.f.p` @type ^`java.util.List` @kind object;
  #L20261e.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L202624.  v1:= temp;
  #L202626.  v2:= -1I;
  #L202628.  if v0 >= v1 then goto L202654;
  #L20262c.  v3:= v4.`okhttp3.internal.connection.j.i` @type ^`okhttp3.internal.connection.f` @kind object;
  #L202630.  v3:= v3.`okhttp3.internal.connection.f.p` @type ^`java.util.List` @kind object;
  #L202634.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L20263a.  v3:= temp @kind object;
  #L20263c.  v3:= (`java.lang.ref.Reference`) v3 @kind object;
  #L202640.  call temp:= `get`(v3) @signature `Ljava/lang/ref/Reference;.get:()Ljava/lang/Object;` @kind virtual;
  #L202646.  v3:= temp @kind object;
  #L202648.  if v3 != v4 then goto L20264e;
  #L20264c.  goto L202656;
  #L20264e.  v0:= v0 + 1;
  #L202652.  goto L202626;
  #L202654.  v0:= -1I;
  #L202656.  if v0 == v2 then goto L2026a4;
  #L20265a.  v1:= v4.`okhttp3.internal.connection.j.i` @type ^`okhttp3.internal.connection.f` @kind object;
  #L20265e.  v2:= v1.`okhttp3.internal.connection.f.p` @type ^`java.util.List` @kind object;
  #L202662.  call temp:= `remove`(v2, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L202668.  v0:= 0I;
  #L20266a.  v4.`okhttp3.internal.connection.j.i` @type ^`okhttp3.internal.connection.f` := v0 @kind object;
  #L20266e.  v2:= v1.`okhttp3.internal.connection.f.p` @type ^`java.util.List` @kind object;
  #L202672.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L202678.  v2:= temp;
  #L20267a.  if v2 == 0 then goto L2026a2;
  #L20267e.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L202684.  v2:= temp @kind wide;
  #L202686.  v1.`okhttp3.internal.connection.f.q` @type ^`long` := v2 @kind wide;
  #L20268a.  v2:= v4.`okhttp3.internal.connection.j.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L20268e.  call temp:= `a`(v2, v1) @signature `Lokhttp3/internal/connection/g;.a:(Lokhttp3/internal/connection/f;)Z` @kind virtual;
  #L202694.  v2:= temp;
  #L202696.  if v2 == 0 then goto L2026a2;
  #L20269a.  call temp:= `socket`(v1) @signature `Lokhttp3/internal/connection/f;.socket:()Ljava/net/Socket;` @kind virtual;
  #L2026a0.  v0:= temp @kind object;
  #L2026a2.  return v0 @kind object;
  #L2026a4.  v0:= new `java.lang.IllegalStateException`;
  #L2026a8.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L2026ae.  throw v0;
}
procedure `okhttp3.internal.connection.d` `a`(`okhttp3.internal.connection.j` v8 @kind this, `h.a0$a` v9 @kind object, `boolean` v10 ) @signature `Lokhttp3/internal/connection/j;.a:(Lh/a0$a;Z)Lokhttp3/internal/connection/d;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L202788.  v0:= v8.`okhttp3.internal.connection.j.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L20278c.  @monitorenter v0
  #L20278e.  v1:= v8.`okhttp3.internal.connection.j.o` @type ^`boolean` @kind boolean;
  #L202792.  if v1 != 0 then goto L2027f8;
  #L202796.  v1:= v8.`okhttp3.internal.connection.j.j` @type ^`okhttp3.internal.connection.d` @kind object;
  #L20279a.  if v1 != 0 then goto L2027e8;
  #L20279e.  @monitorexit v0
  #L2027a0.  v0:= v8.`okhttp3.internal.connection.j.h` @type ^`okhttp3.internal.connection.e` @kind object;
  #L2027a4.  v1:= v8.`okhttp3.internal.connection.j.a` @type ^`h.d0` @kind object;
  #L2027a8.  call temp:= `find`(v0, v1, v9, v10) @signature `Lokhttp3/internal/connection/e;.find:(Lh/d0;Lh/a0$a;Z)Lh/n0/h/c;` @kind virtual;
  #L2027ae.  v7:= temp @kind object;
  #L2027b0.  v9:= new `okhttp3.internal.connection.d`;
  #L2027b4.  v4:= v8.`okhttp3.internal.connection.j.c` @type ^`h.j` @kind object;
  #L2027b8.  v5:= v8.`okhttp3.internal.connection.j.d` @type ^`h.v` @kind object;
  #L2027bc.  v6:= v8.`okhttp3.internal.connection.j.h` @type ^`okhttp3.internal.connection.e` @kind object;
  #L2027c0.  v2:= v9 @kind object;
  #L2027c2.  v3:= v8 @kind object;
  #L2027c4.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Lokhttp3/internal/connection/d;.<init>:(Lokhttp3/internal/connection/j;Lh/j;Lh/v;Lokhttp3/internal/connection/e;Lh/n0/h/c;)V` @kind direct;
  #L2027ca.  v10:= v8.`okhttp3.internal.connection.j.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L2027ce.  @monitorenter v10
  #L2027d0.  v8.`okhttp3.internal.connection.j.j` @type ^`okhttp3.internal.connection.d` := v9 @kind object;
  #L2027d4.  v0:= 0I;
  #L2027d6.  v8.`okhttp3.internal.connection.j.k` @type ^`boolean` := v0 @kind boolean;
  #L2027da.  v8.`okhttp3.internal.connection.j.l` @type ^`boolean` := v0 @kind boolean;
  #L2027de.  @monitorexit v10
  #L2027e0.  return v9 @kind object;
  #L2027e2.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2027e4.  @monitorexit v10
  #L2027e6.  throw v9;
  #L2027e8.  v9:= new `java.lang.IllegalStateException`;
  #L2027ec.  v10:= "cannot make a new request because the previous response is still open: please call response.close()" @kind object;
  #L2027f0.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2027f6.  throw v9;
  #L2027f8.  v9:= new `java.lang.IllegalStateException`;
  #L2027fc.  v10:= "released" @kind object;
  #L202800.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L202806.  throw v9;
  #L202808.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20280a.  @monitorexit v0
  #L20280c.  throw v9;
  catch `java.lang.Throwable` @[L20278e..L2027a0] goto L202808;
  catch `java.lang.Throwable` @[L2027d0..L2027e6] goto L2027e2;
  catch `java.lang.Throwable` @[L2027e8..L20280c] goto L202808;
}
procedure `void` `a`(`okhttp3.internal.connection.j` v2 @kind this, `okhttp3.internal.connection.f` v3 @kind object) @signature `Lokhttp3/internal/connection/j;.a:(Lokhttp3/internal/connection/f;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2028cc.  v0:= v2.`okhttp3.internal.connection.j.i` @type ^`okhttp3.internal.connection.f` @kind object;
  #L2028d0.  if v0 != 0 then goto L2028f2;
  #L2028d4.  v2.`okhttp3.internal.connection.j.i` @type ^`okhttp3.internal.connection.f` := v3 @kind object;
  #L2028d8.  v3:= v3.`okhttp3.internal.connection.f.p` @type ^`java.util.List` @kind object;
  #L2028dc.  v0:= new `okhttp3.internal.connection.j$b`;
  #L2028e0.  v1:= v2.`okhttp3.internal.connection.j.f` @type ^`java.lang.Object` @kind object;
  #L2028e4.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/internal/connection/j$b;.<init>:(Lokhttp3/internal/connection/j;Ljava/lang/Object;)V` @kind direct;
  #L2028ea.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2028f0.  return @kind void;
  #L2028f2.  v3:= new `java.lang.IllegalStateException`;
  #L2028f6.  call `<init>`(v3) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L2028fc.  throw v3;
}
procedure `void` `callStart`(`okhttp3.internal.connection.j` v2 @kind this) @signature `Lokhttp3/internal/connection/j;.callStart:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L202910.  call temp:= `get`() @signature `Lh/n0/j/f;.get:()Lh/n0/j/f;` @kind static;
  #L202916.  v0:= temp @kind object;
  #L202918.  v1:= "response.body().close()" @kind object;
  #L20291c.  call temp:= `getStackTraceForCloseable`(v0, v1) @signature `Lh/n0/j/f;.getStackTraceForCloseable:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L202922.  v0:= temp @kind object;
  #L202924.  v2.`okhttp3.internal.connection.j.f` @type ^`java.lang.Object` := v0 @kind object;
  #L202928.  v0:= v2.`okhttp3.internal.connection.j.d` @type ^`h.v` @kind object;
  #L20292c.  v1:= v2.`okhttp3.internal.connection.j.c` @type ^`h.j` @kind object;
  #L202930.  call `callStart`(v0, v1) @signature `Lh/v;.callStart:(Lh/j;)V` @kind virtual;
  #L202936.  return @kind void;
}
procedure `boolean` `canRetry`(`okhttp3.internal.connection.j` v1 @kind this) @signature `Lokhttp3/internal/connection/j;.canRetry:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L202348.  v0:= v1.`okhttp3.internal.connection.j.h` @type ^`okhttp3.internal.connection.e` @kind object;
  #L20234c.  call temp:= `c`(v0) @signature `Lokhttp3/internal/connection/e;.c:()Z` @kind virtual;
  #L202352.  v0:= temp;
  #L202354.  if v0 == 0 then goto L20236c;
  #L202358.  v0:= v1.`okhttp3.internal.connection.j.h` @type ^`okhttp3.internal.connection.e` @kind object;
  #L20235c.  call temp:= `b`(v0) @signature `Lokhttp3/internal/connection/e;.b:()Z` @kind virtual;
  #L202362.  v0:= temp;
  #L202364.  if v0 == 0 then goto L20236c;
  #L202368.  v0:= 1I;
  #L20236a.  goto L20236e;
  #L20236c.  v0:= 0I;
  #L20236e.  return v0;
}
procedure `void` `cancel`(`okhttp3.internal.connection.j` v3 @kind this) @signature `Lokhttp3/internal/connection/j;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L202948.  v0:= v3.`okhttp3.internal.connection.j.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L20294c.  @monitorenter v0
  #L20294e.  v1:= 1I;
  #L202950.  v3.`okhttp3.internal.connection.j.m` @type ^`boolean` := v1 @kind boolean;
  #L202954.  v1:= v3.`okhttp3.internal.connection.j.j` @type ^`okhttp3.internal.connection.d` @kind object;
  #L202958.  v2:= v3.`okhttp3.internal.connection.j.h` @type ^`okhttp3.internal.connection.e` @kind object;
  #L20295c.  if v2 == 0 then goto L20297e;
  #L202960.  v2:= v3.`okhttp3.internal.connection.j.h` @type ^`okhttp3.internal.connection.e` @kind object;
  #L202964.  call temp:= `a`(v2) @signature `Lokhttp3/internal/connection/e;.a:()Lokhttp3/internal/connection/f;` @kind virtual;
  #L20296a.  v2:= temp @kind object;
  #L20296c.  if v2 == 0 then goto L20297e;
  #L202970.  v2:= v3.`okhttp3.internal.connection.j.h` @type ^`okhttp3.internal.connection.e` @kind object;
  #L202974.  call temp:= `a`(v2) @signature `Lokhttp3/internal/connection/e;.a:()Lokhttp3/internal/connection/f;` @kind virtual;
  #L20297a.  v2:= temp @kind object;
  #L20297c.  goto L202982;
  #L20297e.  v2:= v3.`okhttp3.internal.connection.j.i` @type ^`okhttp3.internal.connection.f` @kind object;
  #L202982.  @monitorexit v0
  #L202984.  if v1 == 0 then goto L202990;
  #L202988.  call `cancel`(v1) @signature `Lokhttp3/internal/connection/d;.cancel:()V` @kind virtual;
  #L20298e.  goto L20299a;
  #L202990.  if v2 == 0 then goto L20299a;
  #L202994.  call `cancel`(v2) @signature `Lokhttp3/internal/connection/f;.cancel:()V` @kind virtual;
  #L20299a.  return @kind void;
  #L20299c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20299e.  @monitorexit v0
  #L2029a0.  throw v1;
  catch `java.lang.Throwable` @[L202950..L202984] goto L20299c;
  catch `java.lang.Throwable` @[L20299e..L2029a0] goto L20299c;
}
procedure `void` `exchangeDoneDueToException`(`okhttp3.internal.connection.j` v2 @kind this) @signature `Lokhttp3/internal/connection/j;.exchangeDoneDueToException:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2029c8.  v0:= v2.`okhttp3.internal.connection.j.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L2029cc.  @monitorenter v0
  #L2029ce.  v1:= v2.`okhttp3.internal.connection.j.o` @type ^`boolean` @kind boolean;
  #L2029d2.  if v1 != 0 then goto L2029e0;
  #L2029d6.  v1:= 0I;
  #L2029d8.  v2.`okhttp3.internal.connection.j.j` @type ^`okhttp3.internal.connection.d` := v1 @kind object;
  #L2029dc.  @monitorexit v0
  #L2029de.  return @kind void;
  #L2029e0.  v1:= new `java.lang.IllegalStateException`;
  #L2029e4.  call `<init>`(v1) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L2029ea.  throw v1;
  #L2029ec.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2029ee.  @monitorexit v0
  #L2029f0.  throw v1;
  catch `java.lang.Throwable` @[L2029ce..L2029f0] goto L2029ec;
}
procedure `boolean` `hasExchange`(`okhttp3.internal.connection.j` v2 @kind this) @signature `Lokhttp3/internal/connection/j;.hasExchange:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L202380.  v0:= v2.`okhttp3.internal.connection.j.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L202384.  @monitorenter v0
  #L202386.  v1:= v2.`okhttp3.internal.connection.j.j` @type ^`okhttp3.internal.connection.d` @kind object;
  #L20238a.  if v1 == 0 then goto L202392;
  #L20238e.  v1:= 1I;
  #L202390.  goto L202394;
  #L202392.  v1:= 0I;
  #L202394.  @monitorexit v0
  #L202396.  return v1;
  #L202398.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20239a.  @monitorexit v0
  #L20239c.  throw v1;
  catch `java.lang.Throwable` @[L202386..L20239c] goto L202398;
}
procedure `boolean` `isCanceled`(`okhttp3.internal.connection.j` v2 @kind this) @signature `Lokhttp3/internal/connection/j;.isCanceled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2023bc.  v0:= v2.`okhttp3.internal.connection.j.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L2023c0.  @monitorenter v0
  #L2023c2.  v1:= v2.`okhttp3.internal.connection.j.m` @type ^`boolean` @kind boolean;
  #L2023c6.  @monitorexit v0
  #L2023c8.  return v1;
  #L2023ca.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2023cc.  @monitorexit v0
  #L2023ce.  throw v1;
  catch `java.lang.Throwable` @[L2023c2..L2023ce] goto L2023ca;
}
procedure `java.io.IOException` `noMoreExchanges`(`okhttp3.internal.connection.j` v2 @kind this, `java.io.IOException` v3 @kind object) @signature `Lokhttp3/internal/connection/j;.noMoreExchanges:(Ljava/io/IOException;)Ljava/io/IOException;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L202588.  v0:= v2.`okhttp3.internal.connection.j.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L20258c.  @monitorenter v0
  #L20258e.  v1:= 1I;
  #L202590.  v2.`okhttp3.internal.connection.j.o` @type ^`boolean` := v1 @kind boolean;
  #L202594.  @monitorexit v0
  #L202596.  v0:= 0I;
  #L202598.  call temp:= `a`(v2, v3, v0) @signature `Lokhttp3/internal/connection/j;.a:(Ljava/io/IOException;Z)Ljava/io/IOException;` @kind direct;
  #L20259e.  v3:= temp @kind object;
  #L2025a0.  return v3 @kind object;
  #L2025a2.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2025a4.  @monitorexit v0
  #L2025a6.  throw v3;
  catch `java.lang.Throwable` @[L202590..L202596] goto L2025a2;
  catch `java.lang.Throwable` @[L2025a4..L2025a6] goto L2025a2;
}
procedure `void` `prepareToConnect`(`okhttp3.internal.connection.j` v7 @kind this, `h.g0` v8 @kind object) @signature `Lokhttp3/internal/connection/j;.prepareToConnect:(Lh/g0;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L202a10.  v0:= v7.`okhttp3.internal.connection.j.g` @type ^`h.g0` @kind object;
  #L202a14.  if v0 == 0 then goto L202a72;
  #L202a18.  call temp:= `url`(v0) @signature `Lh/g0;.url:()Lh/z;` @kind virtual;
  #L202a1e.  v0:= temp @kind object;
  #L202a20.  call temp:= `url`(v8) @signature `Lh/g0;.url:()Lh/z;` @kind virtual;
  #L202a26.  v1:= temp @kind object;
  #L202a28.  call temp:= `sameConnection`(v0, v1) @signature `Lh/n0/e;.sameConnection:(Lh/z;Lh/z;)Z` @kind static;
  #L202a2e.  v0:= temp;
  #L202a30.  if v0 == 0 then goto L202a46;
  #L202a34.  v0:= v7.`okhttp3.internal.connection.j.h` @type ^`okhttp3.internal.connection.e` @kind object;
  #L202a38.  call temp:= `b`(v0) @signature `Lokhttp3/internal/connection/e;.b:()Z` @kind virtual;
  #L202a3e.  v0:= temp;
  #L202a40.  if v0 == 0 then goto L202a46;
  #L202a44.  return @kind void;
  #L202a46.  v0:= v7.`okhttp3.internal.connection.j.j` @type ^`okhttp3.internal.connection.d` @kind object;
  #L202a4a.  if v0 != 0 then goto L202a66;
  #L202a4e.  v0:= v7.`okhttp3.internal.connection.j.h` @type ^`okhttp3.internal.connection.e` @kind object;
  #L202a52.  if v0 == 0 then goto L202a72;
  #L202a56.  v0:= 1I;
  #L202a58.  v1:= 0I;
  #L202a5a.  call temp:= `a`(v7, v1, v0) @signature `Lokhttp3/internal/connection/j;.a:(Ljava/io/IOException;Z)Ljava/io/IOException;` @kind direct;
  #L202a60.  v7.`okhttp3.internal.connection.j.h` @type ^`okhttp3.internal.connection.e` := v1 @kind object;
  #L202a64.  goto L202a72;
  #L202a66.  v8:= new `java.lang.IllegalStateException`;
  #L202a6a.  call `<init>`(v8) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L202a70.  throw v8;
  #L202a72.  v7.`okhttp3.internal.connection.j.g` @type ^`h.g0` := v8 @kind object;
  #L202a76.  v6:= new `okhttp3.internal.connection.e`;
  #L202a7a.  v2:= v7.`okhttp3.internal.connection.j.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L202a7e.  call temp:= `url`(v8) @signature `Lh/g0;.url:()Lh/z;` @kind virtual;
  #L202a84.  v8:= temp @kind object;
  #L202a86.  call temp:= `a`(v7, v8) @signature `Lokhttp3/internal/connection/j;.a:(Lh/z;)Lh/e;` @kind direct;
  #L202a8c.  v3:= temp @kind object;
  #L202a8e.  v4:= v7.`okhttp3.internal.connection.j.c` @type ^`h.j` @kind object;
  #L202a92.  v5:= v7.`okhttp3.internal.connection.j.d` @type ^`h.v` @kind object;
  #L202a96.  v0:= v6 @kind object;
  #L202a98.  v1:= v7 @kind object;
  #L202a9a.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/internal/connection/e;.<init>:(Lokhttp3/internal/connection/j;Lokhttp3/internal/connection/g;Lh/e;Lh/j;Lh/v;)V` @kind direct;
  #L202aa0.  v7.`okhttp3.internal.connection.j.h` @type ^`okhttp3.internal.connection.e` := v6 @kind object;
  #L202aa4.  return @kind void;
}
procedure `i.a0` `timeout`(`okhttp3.internal.connection.j` v1 @kind this) @signature `Lokhttp3/internal/connection/j;.timeout:()Li/a0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L202840.  v0:= v1.`okhttp3.internal.connection.j.e` @type ^`i.d` @kind object;
  #L202844.  return v0 @kind object;
}
procedure `void` `timeoutEarlyExit`(`okhttp3.internal.connection.j` v1 @kind this) @signature `Lokhttp3/internal/connection/j;.timeoutEarlyExit:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L202ab8.  v0:= v1.`okhttp3.internal.connection.j.n` @type ^`boolean` @kind boolean;
  #L202abc.  if v0 != 0 then goto L202ad2;
  #L202ac0.  v0:= 1I;
  #L202ac2.  v1.`okhttp3.internal.connection.j.n` @type ^`boolean` := v0 @kind boolean;
  #L202ac6.  v0:= v1.`okhttp3.internal.connection.j.e` @type ^`i.d` @kind object;
  #L202aca.  call temp:= `exit`(v0) @signature `Li/d;.exit:()Z` @kind virtual;
  #L202ad0.  return @kind void;
  #L202ad2.  v0:= new `java.lang.IllegalStateException`;
  #L202ad6.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L202adc.  throw v0;
}
procedure `void` `timeoutEnter`(`okhttp3.internal.connection.j` v1 @kind this) @signature `Lokhttp3/internal/connection/j;.timeoutEnter:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L202af0.  v0:= v1.`okhttp3.internal.connection.j.e` @type ^`i.d` @kind object;
  #L202af4.  call `enter`(v0) @signature `Li/d;.enter:()V` @kind virtual;
  #L202afa.  return @kind void;
}
