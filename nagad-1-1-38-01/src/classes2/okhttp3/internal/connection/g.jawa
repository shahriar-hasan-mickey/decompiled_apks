record `okhttp3.internal.connection.g` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `okhttp3.internal.connection.g.a` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.internal.connection.g.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Runnable` `okhttp3.internal.connection.g.c` @AccessFlag PRIVATE_FINAL;
  `java.util.Deque` `okhttp3.internal.connection.g.d` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.h` `okhttp3.internal.connection.g.e` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.connection.g.f` @AccessFlag ;
}
global `java.util.concurrent.Executor` `@@okhttp3.internal.connection.g.g` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/connection/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2007dc.  v8:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L2007e0.  v1:= 0I;
  #L2007e2.  v2:= 2147483647I;
  #L2007e8.  v3:= 60L;
  #L2007ec.  v5:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2007f0.  v6:= new `java.util.concurrent.SynchronousQueue`;
  #L2007f4.  call `<init>`(v6) @signature `Ljava/util/concurrent/SynchronousQueue;.<init>:()V` @kind direct;
  #L2007fa.  v0:= 1I;
  #L2007fc.  v7:= "OkHttp ConnectionPool" @kind object;
  #L200800.  call temp:= `threadFactory`(v7, v0) @signature `Lh/n0/e;.threadFactory:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L200806.  v7:= temp @kind object;
  #L200808.  v0:= v8 @kind object;
  #L20080a.  call `<init>`(v0, v1, v2, v3, v5, v6, v7) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L200810.  `@@okhttp3.internal.connection.g.g` @type ^`java.util.concurrent.Executor` := v8 @kind object;
  #L200814.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.connection.g` v2 @kind this, `int` v3 , `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object) @signature `Lokhttp3/internal/connection/g;.<init>:(IJLjava/util/concurrent/TimeUnit;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L200828.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20082e.  v0:= new `okhttp3.internal.connection.a`;
  #L200832.  call `<init>`(v0, v2) @signature `Lokhttp3/internal/connection/a;.<init>:(Lokhttp3/internal/connection/g;)V` @kind direct;
  #L200838.  v2.`okhttp3.internal.connection.g.c` @type ^`java.lang.Runnable` := v0 @kind object;
  #L20083c.  v0:= new `java.util.ArrayDeque`;
  #L200840.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L200846.  v2.`okhttp3.internal.connection.g.d` @type ^`java.util.Deque` := v0 @kind object;
  #L20084a.  v0:= new `okhttp3.internal.connection.h`;
  #L20084e.  call `<init>`(v0) @signature `Lokhttp3/internal/connection/h;.<init>:()V` @kind direct;
  #L200854.  v2.`okhttp3.internal.connection.g.e` @type ^`okhttp3.internal.connection.h` := v0 @kind object;
  #L200858.  v2.`okhttp3.internal.connection.g.a` @type ^`int` := v3;
  #L20085c.  call temp:= `toNanos`(v6, v4) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L200862.  v0:= temp @kind wide;
  #L200864.  v2.`okhttp3.internal.connection.g.b` @type ^`long` := v0 @kind wide;
  #L200868.  v0:= 0L;
  #L20086c.  v3:= lcmp(v4, v0);
  #L200870.  if v3 <= 0 then goto L200876;
  #L200874.  return @kind void;
  #L200876.  v3:= new `java.lang.IllegalArgumentException`;
  #L20087a.  v6:= new `java.lang.StringBuilder`;
  #L20087e.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L200884.  v0:= "keepAliveDuration <= 0: " @kind object;
  #L200888.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20088e.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L200894.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20089a.  v4:= temp @kind object;
  #L20089c.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2008a2.  throw v3;
}
procedure `int` `a`(`okhttp3.internal.connection.g` v6 @kind this, `okhttp3.internal.connection.f` v7 @kind object, `long` v8 ) @signature `Lokhttp3/internal/connection/g;.a:(Lokhttp3/internal/connection/f;J)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L200628.  v0:= v7.`okhttp3.internal.connection.f.p` @type ^`java.util.List` @kind object;
  #L20062c.  v1:= 0I;
  #L20062e.  v2:= 0I;
  #L200630.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L200636.  v3:= temp;
  #L200638.  if v2 >= v3 then goto L2006d8;
  #L20063c.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L200642.  v3:= temp @kind object;
  #L200644.  v3:= (`java.lang.ref.Reference`) v3 @kind object;
  #L200648.  call temp:= `get`(v3) @signature `Ljava/lang/ref/Reference;.get:()Ljava/lang/Object;` @kind virtual;
  #L20064e.  v4:= temp @kind object;
  #L200650.  if v4 == 0 then goto L20065a;
  #L200654.  v2:= v2 + 1;
  #L200658.  goto L200630;
  #L20065a.  v3:= (`okhttp3.internal.connection.j$b`) v3 @kind object;
  #L20065e.  v4:= new `java.lang.StringBuilder`;
  #L200662.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L200668.  v5:= "A connection to " @kind object;
  #L20066c.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L200672.  call temp:= `route`(v7) @signature `Lokhttp3/internal/connection/f;.route:()Lh/k0;` @kind virtual;
  #L200678.  v5:= temp @kind object;
  #L20067a.  call temp:= `address`(v5) @signature `Lh/k0;.address:()Lh/e;` @kind virtual;
  #L200680.  v5:= temp @kind object;
  #L200682.  call temp:= `url`(v5) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L200688.  v5:= temp @kind object;
  #L20068a.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L200690.  v5:= " was leaked. Did you forget to close a response body?" @kind object;
  #L200694.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20069a.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2006a0.  v4:= temp @kind object;
  #L2006a2.  call temp:= `get`() @signature `Lh/n0/j/f;.get:()Lh/n0/j/f;` @kind static;
  #L2006a8.  v5:= temp @kind object;
  #L2006aa.  v3:= v3.`okhttp3.internal.connection.j$b.a` @type ^`java.lang.Object` @kind object;
  #L2006ae.  call `logCloseableLeak`(v5, v4, v3) @signature `Lh/n0/j/f;.logCloseableLeak:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L2006b4.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L2006ba.  v3:= 1I;
  #L2006bc.  v7.`okhttp3.internal.connection.f.k` @type ^`boolean` := v3 @kind boolean;
  #L2006c0.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2006c6.  v3:= temp;
  #L2006c8.  if v3 == 0 then goto L200630;
  #L2006cc.  v2:= v6.`okhttp3.internal.connection.g.b` @type ^`long` @kind wide;
  #L2006d0.  v8:= v8 - v2 @kind long;
  #L2006d2.  v7.`okhttp3.internal.connection.f.q` @type ^`long` := v8 @kind wide;
  #L2006d6.  return v1;
  #L2006d8.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2006de.  v7:= temp;
  #L2006e0.  return v7;
}
procedure `long` `a`(`okhttp3.internal.connection.g` v11 @kind this, `long` v12 ) @signature `Lokhttp3/internal/connection/g;.a:(J)J` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2006f4.  @monitorenter v11
  #L2006f6.  v0:= v11.`okhttp3.internal.connection.g.d` @type ^`java.util.Deque` @kind object;
  #L2006fa.  call temp:= `iterator`(v0) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L200700.  v0:= temp @kind object;
  #L200702.  v1:= 0I;
  #L200704.  v2:= 0I;
  #L200706.  v3:= -9223372036854775808L;
  #L20070a.  v5:= v2 @kind object;
  #L20070c.  v2:= 0I;
  #L20070e.  v6:= 0I;
  #L200710.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L200716.  v7:= temp;
  #L200718.  if v7 == 0 then goto L200754;
  #L20071c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L200722.  v7:= temp @kind object;
  #L200724.  v7:= (`okhttp3.internal.connection.f`) v7 @kind object;
  #L200728.  call temp:= `a`(v11, v7, v12) @signature `Lokhttp3/internal/connection/g;.a:(Lokhttp3/internal/connection/f;J)I` @kind direct;
  #L20072e.  v8:= temp;
  #L200730.  if v8 <= 0 then goto L20073a;
  #L200734.  v6:= v6 + 1;
  #L200738.  goto L200710;
  #L20073a.  v2:= v2 + 1;
  #L20073e.  v8:= v7.`okhttp3.internal.connection.f.q` @type ^`long` @kind wide;
  #L200742.  v8:= v12 - v8 @kind long;
  #L200746.  v10:= lcmp(v8, v3);
  #L20074a.  if v10 <= 0 then goto L200710;
  #L20074e.  v5:= v7 @kind object;
  #L200750.  v3:= v8 @kind wide;
  #L200752.  goto L200710;
  #L200754.  v12:= v11.`okhttp3.internal.connection.g.b` @type ^`long` @kind wide;
  #L200758.  v0:= lcmp(v3, v12);
  #L20075c.  if v0 >= 0 then goto L200790;
  #L200760.  v12:= v11.`okhttp3.internal.connection.g.a` @type ^`int`;
  #L200764.  if v2 <= v12 then goto L20076a;
  #L200768.  goto L200790;
  #L20076a.  if v2 <= 0 then goto L200778;
  #L20076e.  v12:= v11.`okhttp3.internal.connection.g.b` @type ^`long` @kind wide;
  #L200772.  v12:= v12 - v3 @kind long;
  #L200774.  @monitorexit v11
  #L200776.  return v12 @kind wide;
  #L200778.  if v6 <= 0 then goto L200784;
  #L20077c.  v12:= v11.`okhttp3.internal.connection.g.b` @type ^`long` @kind wide;
  #L200780.  @monitorexit v11
  #L200782.  return v12 @kind wide;
  #L200784.  v11.`okhttp3.internal.connection.g.f` @type ^`boolean` := v1 @kind boolean;
  #L200788.  v12:= -1L;
  #L20078c.  @monitorexit v11
  #L20078e.  return v12 @kind wide;
  #L200790.  v12:= v11.`okhttp3.internal.connection.g.d` @type ^`java.util.Deque` @kind object;
  #L200794.  call temp:= `remove`(v12, v5) @signature `Ljava/util/Deque;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L20079a.  @monitorexit v11
  #L20079c.  call temp:= `socket`(v5) @signature `Lokhttp3/internal/connection/f;.socket:()Ljava/net/Socket;` @kind virtual;
  #L2007a2.  v12:= temp @kind object;
  #L2007a4.  call `closeQuietly`(v12) @signature `Lh/n0/e;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L2007aa.  v12:= 0L;
  #L2007ae.  return v12 @kind wide;
  #L2007b0.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2007b2.  @monitorexit v11
  #L2007b4.  throw v12;
  catch `java.lang.Throwable` @[L2006f6..L20079c] goto L2007b0;
  catch `java.lang.Throwable` @[L2007b2..L2007b4] goto L2007b0;
}
procedure `void` `a`(`okhttp3.internal.connection.g` v6 @kind this) @signature `Lokhttp3/internal/connection/g;.a:()V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L200920.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L200926.  v0:= temp @kind wide;
  #L200928.  call temp:= `a`(v6, v0) @signature `Lokhttp3/internal/connection/g;.a:(J)J` @kind virtual;
  #L20092e.  v0:= temp @kind wide;
  #L200930.  v2:= -1L;
  #L200934.  v4:= lcmp(v0, v2);
  #L200938.  if v4 != 0 then goto L20093e;
  #L20093c.  return @kind void;
  #L20093e.  v2:= 0L;
  #L200942.  v4:= lcmp(v0, v2);
  #L200946.  if v4 <= 0 then goto L200920;
  #L20094a.  v2:= 1000000L;
  #L200950.  v4:= v0 / v2 @kind long;
  #L200954.  v2:= v2 * v4 @kind long;
  #L200958.  v0:= v0 - v2 @kind long;
  #L20095a.  @monitorenter v6
  #L20095c.  v1:= (`int`) v0 @kind l2i;
  #L20095e.  call `wait`(v6, v4, v1) @signature `Ljava/lang/Object;.wait:(JI)V` @kind virtual;
  #L200964.  goto L20096a;
  #L200966.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L200968.  goto L20096e;
  #L20096a.  @monitorexit v6
  #L20096c.  goto L200920;
  #L20096e.  @monitorexit v6
  #L200970.  throw v0;
  catch `java.lang.InterruptedException` @[L20095e..L200964] goto L20096a;
  catch `java.lang.Throwable` @[L20095e..L200964] goto L200966;
  catch `java.lang.Throwable` @[L20096a..L200970] goto L200966;
}
procedure `boolean` `a`(`okhttp3.internal.connection.g` v3 @kind this, `h.e` v4 @kind object, `okhttp3.internal.connection.j` v5 @kind object, `java.util.List` v6 @kind object, `boolean` v7 ) @signature `Lokhttp3/internal/connection/g;.a:(Lh/e;Lokhttp3/internal/connection/j;Ljava/util/List;Z)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L2005c4.  v0:= v3.`okhttp3.internal.connection.g.d` @type ^`java.util.Deque` @kind object;
  #L2005c8.  call temp:= `iterator`(v0) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2005ce.  v0:= temp @kind object;
  #L2005d0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2005d6.  v1:= temp;
  #L2005d8.  if v1 == 0 then goto L200612;
  #L2005dc.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2005e2.  v1:= temp @kind object;
  #L2005e4.  v1:= (`okhttp3.internal.connection.f`) v1 @kind object;
  #L2005e8.  if v7 == 0 then goto L2005fa;
  #L2005ec.  call temp:= `isMultiplexed`(v1) @signature `Lokhttp3/internal/connection/f;.isMultiplexed:()Z` @kind virtual;
  #L2005f2.  v2:= temp;
  #L2005f4.  if v2 != 0 then goto L2005fa;
  #L2005f8.  goto L2005d0;
  #L2005fa.  call temp:= `a`(v1, v4, v6) @signature `Lokhttp3/internal/connection/f;.a:(Lh/e;Ljava/util/List;)Z` @kind virtual;
  #L200600.  v2:= temp;
  #L200602.  if v2 != 0 then goto L200608;
  #L200606.  goto L2005d0;
  #L200608.  call `a`(v5, v1) @signature `Lokhttp3/internal/connection/j;.a:(Lokhttp3/internal/connection/f;)V` @kind virtual;
  #L20060e.  v4:= 1I;
  #L200610.  return v4;
  #L200612.  v4:= 0I;
  #L200614.  return v4;
}
procedure `boolean` `a`(`okhttp3.internal.connection.g` v1 @kind this, `okhttp3.internal.connection.f` v2 @kind object) @signature `Lokhttp3/internal/connection/g;.a:(Lokhttp3/internal/connection/f;)Z` @AccessFlag  {
    temp;
    v0;

  #L200588.  v0:= v2.`okhttp3.internal.connection.f.k` @type ^`boolean` @kind boolean;
  #L20058c.  if v0 != 0 then goto L2005a4;
  #L200590.  v0:= v1.`okhttp3.internal.connection.g.a` @type ^`int`;
  #L200594.  if v0 != 0 then goto L20059a;
  #L200598.  goto L2005a4;
  #L20059a.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L2005a0.  v2:= 0I;
  #L2005a2.  return v2;
  #L2005a4.  v0:= v1.`okhttp3.internal.connection.g.d` @type ^`java.util.Deque` @kind object;
  #L2005a8.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Deque;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L2005ae.  v2:= 1I;
  #L2005b0.  return v2;
}
procedure `void` `b`(`okhttp3.internal.connection.g` v2 @kind this, `okhttp3.internal.connection.f` v3 @kind object) @signature `Lokhttp3/internal/connection/g;.b:(Lokhttp3/internal/connection/f;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L20099c.  v0:= v2.`okhttp3.internal.connection.g.f` @type ^`boolean` @kind boolean;
  #L2009a0.  if v0 != 0 then goto L2009b8;
  #L2009a4.  v0:= 1I;
  #L2009a6.  v2.`okhttp3.internal.connection.g.f` @type ^`boolean` := v0 @kind boolean;
  #L2009aa.  v0:= `@@okhttp3.internal.connection.g.g` @type ^`java.util.concurrent.Executor` @kind object;
  #L2009ae.  v1:= v2.`okhttp3.internal.connection.g.c` @type ^`java.lang.Runnable` @kind object;
  #L2009b2.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L2009b8.  v0:= v2.`okhttp3.internal.connection.g.d` @type ^`java.util.Deque` @kind object;
  #L2009bc.  call temp:= `add`(v0, v3) @signature `Ljava/util/Deque;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2009c2.  return @kind void;
}
procedure `void` `connectFailed`(`okhttp3.internal.connection.g` v3 @kind this, `h.k0` v4 @kind object, `java.io.IOException` v5 @kind object) @signature `Lokhttp3/internal/connection/g;.connectFailed:(Lh/k0;Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2008b4.  call temp:= `proxy`(v4) @signature `Lh/k0;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L2008ba.  v0:= temp @kind object;
  #L2008bc.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L2008c2.  v0:= temp @kind object;
  #L2008c4.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L2008c8.  if v0 == v1 then goto L200902;
  #L2008cc.  call temp:= `address`(v4) @signature `Lh/k0;.address:()Lh/e;` @kind virtual;
  #L2008d2.  v0:= temp @kind object;
  #L2008d4.  call temp:= `proxySelector`(v0) @signature `Lh/e;.proxySelector:()Ljava/net/ProxySelector;` @kind virtual;
  #L2008da.  v1:= temp @kind object;
  #L2008dc.  call temp:= `url`(v0) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L2008e2.  v0:= temp @kind object;
  #L2008e4.  call temp:= `uri`(v0) @signature `Lh/z;.uri:()Ljava/net/URI;` @kind virtual;
  #L2008ea.  v0:= temp @kind object;
  #L2008ec.  call temp:= `proxy`(v4) @signature `Lh/k0;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L2008f2.  v2:= temp @kind object;
  #L2008f4.  call temp:= `address`(v2) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L2008fa.  v2:= temp @kind object;
  #L2008fc.  call `connectFailed`(v1, v0, v2, v5) @signature `Ljava/net/ProxySelector;.connectFailed:(Ljava/net/URI;Ljava/net/SocketAddress;Ljava/io/IOException;)V` @kind virtual;
  #L200902.  v5:= v3.`okhttp3.internal.connection.g.e` @type ^`okhttp3.internal.connection.h` @kind object;
  #L200906.  call `failed`(v5, v4) @signature `Lokhttp3/internal/connection/h;.failed:(Lh/k0;)V` @kind virtual;
  #L20090c.  return @kind void;
}
