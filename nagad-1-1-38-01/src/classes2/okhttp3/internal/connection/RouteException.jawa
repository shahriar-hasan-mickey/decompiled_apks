record `okhttp3.internal.connection.RouteException` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.RuntimeException` @kind class {
  `java.io.IOException` `okhttp3.internal.connection.RouteException.f` @AccessFlag PRIVATE;
  `java.io.IOException` `okhttp3.internal.connection.RouteException.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RouteException` v0 @kind this, `java.io.IOException` v1 @kind object) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L201d24.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L201d2a.  v0.`okhttp3.internal.connection.RouteException.f` @type ^`java.io.IOException` := v1 @kind object;
  #L201d2e.  v0.`okhttp3.internal.connection.RouteException.g` @type ^`java.io.IOException` := v1 @kind object;
  #L201d32.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.connection.RouteException` v1 @kind this, `java.io.IOException` v2 @kind object) @signature `Lokhttp3/internal/connection/RouteException;.a:(Ljava/io/IOException;)V` @AccessFlag  {
    temp;
    v0;

  #L201d44.  v0:= v1.`okhttp3.internal.connection.RouteException.f` @type ^`java.io.IOException` @kind object;
  #L201d48.  call `addSuppressedIfPossible`(v0, v2) @signature `Lh/n0/e;.addSuppressedIfPossible:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L201d4e.  v1.`okhttp3.internal.connection.RouteException.g` @type ^`java.io.IOException` := v2 @kind object;
  #L201d52.  return @kind void;
}
procedure `java.io.IOException` `getFirstConnectException`(`okhttp3.internal.connection.RouteException` v1 @kind this) @signature `Lokhttp3/internal/connection/RouteException;.getFirstConnectException:()Ljava/io/IOException;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L201cf4.  v0:= v1.`okhttp3.internal.connection.RouteException.f` @type ^`java.io.IOException` @kind object;
  #L201cf8.  return v0 @kind object;
}
procedure `java.io.IOException` `getLastConnectException`(`okhttp3.internal.connection.RouteException` v1 @kind this) @signature `Lokhttp3/internal/connection/RouteException;.getLastConnectException:()Ljava/io/IOException;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L201d0c.  v0:= v1.`okhttp3.internal.connection.RouteException.g` @type ^`java.io.IOException` @kind object;
  #L201d10.  return v0 @kind object;
}
