record `okhttp3.internal.connection.e` @kind class @AccessFlag FINAL {
  `okhttp3.internal.connection.j` `okhttp3.internal.connection.e.a` @AccessFlag PRIVATE_FINAL;
  `h.e` `okhttp3.internal.connection.e.b` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.g` `okhttp3.internal.connection.e.c` @AccessFlag PRIVATE_FINAL;
  `h.j` `okhttp3.internal.connection.e.d` @AccessFlag PRIVATE_FINAL;
  `h.v` `okhttp3.internal.connection.e.e` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.i$a` `okhttp3.internal.connection.e.f` @AccessFlag PRIVATE;
  `okhttp3.internal.connection.i` `okhttp3.internal.connection.e.g` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.f` `okhttp3.internal.connection.e.h` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.e.i` @AccessFlag PRIVATE;
  `h.k0` `okhttp3.internal.connection.e.j` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.internal.connection.e` v0 @kind this, `okhttp3.internal.connection.j` v1 @kind object, `okhttp3.internal.connection.g` v2 @kind object, `h.e` v3 @kind object, `h.j` v4 @kind object, `h.v` v5 @kind object) @signature `Lokhttp3/internal/connection/e;.<init>:(Lokhttp3/internal/connection/j;Lokhttp3/internal/connection/g;Lh/e;Lh/j;Lh/v;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L20012c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L200132.  v0.`okhttp3.internal.connection.e.a` @type ^`okhttp3.internal.connection.j` := v1 @kind object;
  #L200136.  v0.`okhttp3.internal.connection.e.c` @type ^`okhttp3.internal.connection.g` := v2 @kind object;
  #L20013a.  v0.`okhttp3.internal.connection.e.b` @type ^`h.e` := v3 @kind object;
  #L20013e.  v0.`okhttp3.internal.connection.e.d` @type ^`h.j` := v4 @kind object;
  #L200142.  v0.`okhttp3.internal.connection.e.e` @type ^`h.v` := v5 @kind object;
  #L200146.  v1:= new `okhttp3.internal.connection.i`;
  #L20014a.  v2:= v2.`okhttp3.internal.connection.g.e` @type ^`okhttp3.internal.connection.h` @kind object;
  #L20014e.  call `<init>`(v1, v3, v2, v4, v5) @signature `Lokhttp3/internal/connection/i;.<init>:(Lh/e;Lokhttp3/internal/connection/h;Lh/j;Lh/v;)V` @kind direct;
  #L200154.  v0.`okhttp3.internal.connection.e.g` @type ^`okhttp3.internal.connection.i` := v1 @kind object;
  #L200158.  return @kind void;
}
procedure `okhttp3.internal.connection.f` `a`(`okhttp3.internal.connection.e` v18 @kind this, `int` v19 , `int` v20 , `int` v21 , `int` v22 , `boolean` v23 ) @signature `Lokhttp3/internal/connection/e;.a:(IIIIZ)Lokhttp3/internal/connection/f;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L1ffd5c.  v1:= v18 @kind object;
  #L1ffd60.  v2:= v1.`okhttp3.internal.connection.e.c` @type ^`okhttp3.internal.connection.g` @kind object;
  #L1ffd64.  @monitorenter v2
  #L1ffd66.  v0:= v1.`okhttp3.internal.connection.e.a` @type ^`okhttp3.internal.connection.j` @kind object;
  #L1ffd6a.  call temp:= `isCanceled`(v0) @signature `Lokhttp3/internal/connection/j;.isCanceled:()Z` @kind virtual;
  #L1ffd70.  v0:= temp;
  #L1ffd72.  if v0 != 0 then goto L1fffe4;
  #L1ffd76.  v0:= 0I;
  #L1ffd78.  v1.`okhttp3.internal.connection.e.i` @type ^`boolean` := v0 @kind boolean;
  #L1ffd7c.  v3:= v1.`okhttp3.internal.connection.e.a` @type ^`okhttp3.internal.connection.j` @kind object;
  #L1ffd80.  v3:= v3.`okhttp3.internal.connection.j.i` @type ^`okhttp3.internal.connection.f` @kind object;
  #L1ffd84.  v4:= v1.`okhttp3.internal.connection.e.a` @type ^`okhttp3.internal.connection.j` @kind object;
  #L1ffd88.  v4:= v4.`okhttp3.internal.connection.j.i` @type ^`okhttp3.internal.connection.f` @kind object;
  #L1ffd8c.  v5:= 0I;
  #L1ffd8e.  if v4 == 0 then goto L1ffdb0;
  #L1ffd92.  v4:= v1.`okhttp3.internal.connection.e.a` @type ^`okhttp3.internal.connection.j` @kind object;
  #L1ffd96.  v4:= v4.`okhttp3.internal.connection.j.i` @type ^`okhttp3.internal.connection.f` @kind object;
  #L1ffd9a.  v4:= v4.`okhttp3.internal.connection.f.k` @type ^`boolean` @kind boolean;
  #L1ffd9e.  if v4 == 0 then goto L1ffdb0;
  #L1ffda2.  v4:= v1.`okhttp3.internal.connection.e.a` @type ^`okhttp3.internal.connection.j` @kind object;
  #L1ffda6.  call temp:= `a`(v4) @signature `Lokhttp3/internal/connection/j;.a:()Ljava/net/Socket;` @kind virtual;
  #L1ffdac.  v4:= temp @kind object;
  #L1ffdae.  goto L1ffdb2;
  #L1ffdb0.  v4:= v5 @kind object;
  #L1ffdb2.  v6:= v1.`okhttp3.internal.connection.e.a` @type ^`okhttp3.internal.connection.j` @kind object;
  #L1ffdb6.  v6:= v6.`okhttp3.internal.connection.j.i` @type ^`okhttp3.internal.connection.f` @kind object;
  #L1ffdba.  if v6 == 0 then goto L1ffdca;
  #L1ffdbe.  v3:= v1.`okhttp3.internal.connection.e.a` @type ^`okhttp3.internal.connection.j` @kind object;
  #L1ffdc2.  v3:= v3.`okhttp3.internal.connection.j.i` @type ^`okhttp3.internal.connection.f` @kind object;
  #L1ffdc6.  v6:= v5 @kind object;
  #L1ffdc8.  goto L1ffdce;
  #L1ffdca.  v6:= v3 @kind object;
  #L1ffdcc.  v3:= v5 @kind object;
  #L1ffdce.  v7:= 1I;
  #L1ffdd0.  if v3 != 0 then goto L1ffe30;
  #L1ffdd4.  v8:= v1.`okhttp3.internal.connection.e.c` @type ^`okhttp3.internal.connection.g` @kind object;
  #L1ffdd8.  v9:= v1.`okhttp3.internal.connection.e.b` @type ^`h.e` @kind object;
  #L1ffddc.  v10:= v1.`okhttp3.internal.connection.e.a` @type ^`okhttp3.internal.connection.j` @kind object;
  #L1ffde0.  call temp:= `a`(v8, v9, v10, v5, v0) @signature `Lokhttp3/internal/connection/g;.a:(Lh/e;Lokhttp3/internal/connection/j;Ljava/util/List;Z)Z` @kind virtual;
  #L1ffde6.  v8:= temp;
  #L1ffde8.  if v8 == 0 then goto L1ffdfc;
  #L1ffdec.  v3:= v1.`okhttp3.internal.connection.e.a` @type ^`okhttp3.internal.connection.j` @kind object;
  #L1ffdf0.  v3:= v3.`okhttp3.internal.connection.j.i` @type ^`okhttp3.internal.connection.f` @kind object;
  #L1ffdf4.  v8:= v3 @kind object;
  #L1ffdf6.  v9:= v5 @kind object;
  #L1ffdf8.  v3:= 1I;
  #L1ffdfa.  goto L1ffe36;
  #L1ffdfc.  v8:= v1.`okhttp3.internal.connection.e.j` @type ^`h.k0` @kind object;
  #L1ffe00.  if v8 == 0 then goto L1ffe12;
  #L1ffe04.  v8:= v1.`okhttp3.internal.connection.e.j` @type ^`h.k0` @kind object;
  #L1ffe08.  v1.`okhttp3.internal.connection.e.j` @type ^`h.k0` := v5 @kind object;
  #L1ffe0c.  v9:= v8 @kind object;
  #L1ffe0e.  v8:= v3 @kind object;
  #L1ffe10.  goto L1ffe34;
  #L1ffe12.  call temp:= `e`(v18) @signature `Lokhttp3/internal/connection/e;.e:()Z` @kind direct;
  #L1ffe18.  v8:= temp;
  #L1ffe1a.  if v8 == 0 then goto L1ffe30;
  #L1ffe1e.  v8:= v1.`okhttp3.internal.connection.e.a` @type ^`okhttp3.internal.connection.j` @kind object;
  #L1ffe22.  v8:= v8.`okhttp3.internal.connection.j.i` @type ^`okhttp3.internal.connection.f` @kind object;
  #L1ffe26.  call temp:= `route`(v8) @signature `Lokhttp3/internal/connection/f;.route:()Lh/k0;` @kind virtual;
  #L1ffe2c.  v8:= temp @kind object;
  #L1ffe2e.  goto L1ffe0c;
  #L1ffe30.  v8:= v3 @kind object;
  #L1ffe32.  v9:= v5 @kind object;
  #L1ffe34.  v3:= 0I;
  #L1ffe36.  @monitorexit v2
  #L1ffe38.  call `closeQuietly`(v4) @signature `Lh/n0/e;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L1ffe3e.  if v6 == 0 then goto L1ffe50;
  #L1ffe42.  v2:= v1.`okhttp3.internal.connection.e.e` @type ^`h.v` @kind object;
  #L1ffe46.  v4:= v1.`okhttp3.internal.connection.e.d` @type ^`h.j` @kind object;
  #L1ffe4a.  call `connectionReleased`(v2, v4, v6) @signature `Lh/v;.connectionReleased:(Lh/j;Lh/n;)V` @kind virtual;
  #L1ffe50.  if v3 == 0 then goto L1ffe62;
  #L1ffe54.  v2:= v1.`okhttp3.internal.connection.e.e` @type ^`h.v` @kind object;
  #L1ffe58.  v4:= v1.`okhttp3.internal.connection.e.d` @type ^`h.j` @kind object;
  #L1ffe5c.  call `connectionAcquired`(v2, v4, v8) @signature `Lh/v;.connectionAcquired:(Lh/j;Lh/n;)V` @kind virtual;
  #L1ffe62.  if v8 == 0 then goto L1ffe68;
  #L1ffe66.  return v8 @kind object;
  #L1ffe68.  if v9 != 0 then goto L1ffe94;
  #L1ffe6c.  v2:= v1.`okhttp3.internal.connection.e.f` @type ^`okhttp3.internal.connection.i$a` @kind object;
  #L1ffe70.  if v2 == 0 then goto L1ffe80;
  #L1ffe74.  call temp:= `hasNext`(v2) @signature `Lokhttp3/internal/connection/i$a;.hasNext:()Z` @kind virtual;
  #L1ffe7a.  v2:= temp;
  #L1ffe7c.  if v2 != 0 then goto L1ffe94;
  #L1ffe80.  v2:= v1.`okhttp3.internal.connection.e.g` @type ^`okhttp3.internal.connection.i` @kind object;
  #L1ffe84.  call temp:= `next`(v2) @signature `Lokhttp3/internal/connection/i;.next:()Lokhttp3/internal/connection/i$a;` @kind virtual;
  #L1ffe8a.  v2:= temp @kind object;
  #L1ffe8c.  v1.`okhttp3.internal.connection.e.f` @type ^`okhttp3.internal.connection.i$a` := v2 @kind object;
  #L1ffe90.  v2:= 1I;
  #L1ffe92.  goto L1ffe96;
  #L1ffe94.  v2:= 0I;
  #L1ffe96.  v4:= v1.`okhttp3.internal.connection.e.c` @type ^`okhttp3.internal.connection.g` @kind object;
  #L1ffe9a.  @monitorenter v4
  #L1ffe9c.  v6:= v1.`okhttp3.internal.connection.e.a` @type ^`okhttp3.internal.connection.j` @kind object;
  #L1ffea0.  call temp:= `isCanceled`(v6) @signature `Lokhttp3/internal/connection/j;.isCanceled:()Z` @kind virtual;
  #L1ffea6.  v6:= temp;
  #L1ffea8.  if v6 != 0 then goto L1fffce;
  #L1ffeac.  if v2 == 0 then goto L1ffee0;
  #L1ffeb0.  v2:= v1.`okhttp3.internal.connection.e.f` @type ^`okhttp3.internal.connection.i$a` @kind object;
  #L1ffeb4.  call temp:= `getAll`(v2) @signature `Lokhttp3/internal/connection/i$a;.getAll:()Ljava/util/List;` @kind virtual;
  #L1ffeba.  v2:= temp @kind object;
  #L1ffebc.  v6:= v1.`okhttp3.internal.connection.e.c` @type ^`okhttp3.internal.connection.g` @kind object;
  #L1ffec0.  v10:= v1.`okhttp3.internal.connection.e.b` @type ^`h.e` @kind object;
  #L1ffec4.  v11:= v1.`okhttp3.internal.connection.e.a` @type ^`okhttp3.internal.connection.j` @kind object;
  #L1ffec8.  call temp:= `a`(v6, v10, v11, v2, v0) @signature `Lokhttp3/internal/connection/g;.a:(Lh/e;Lokhttp3/internal/connection/j;Ljava/util/List;Z)Z` @kind virtual;
  #L1ffece.  v0:= temp;
  #L1ffed0.  if v0 == 0 then goto L1ffee2;
  #L1ffed4.  v0:= v1.`okhttp3.internal.connection.e.a` @type ^`okhttp3.internal.connection.j` @kind object;
  #L1ffed8.  v8:= v0.`okhttp3.internal.connection.j.i` @type ^`okhttp3.internal.connection.f` @kind object;
  #L1ffedc.  v3:= 1I;
  #L1ffede.  goto L1ffee2;
  #L1ffee0.  v2:= v5 @kind object;
  #L1ffee2.  if v3 != 0 then goto L1fff08;
  #L1ffee6.  if v9 != 0 then goto L1ffef6;
  #L1ffeea.  v0:= v1.`okhttp3.internal.connection.e.f` @type ^`okhttp3.internal.connection.i$a` @kind object;
  #L1ffeee.  call temp:= `next`(v0) @signature `Lokhttp3/internal/connection/i$a;.next:()Lh/k0;` @kind virtual;
  #L1ffef4.  v9:= temp @kind object;
  #L1ffef6.  v8:= new `okhttp3.internal.connection.f`;
  #L1ffefa.  v0:= v1.`okhttp3.internal.connection.e.c` @type ^`okhttp3.internal.connection.g` @kind object;
  #L1ffefe.  call `<init>`(v8, v0, v9) @signature `Lokhttp3/internal/connection/f;.<init>:(Lokhttp3/internal/connection/g;Lh/k0;)V` @kind direct;
  #L1fff04.  v1.`okhttp3.internal.connection.e.h` @type ^`okhttp3.internal.connection.f` := v8 @kind object;
  #L1fff08.  @monitorexit v4
  #L1fff0a.  if v3 == 0 then goto L1fff1e;
  #L1fff0e.  v0:= v1.`okhttp3.internal.connection.e.e` @type ^`h.v` @kind object;
  #L1fff12.  v2:= v1.`okhttp3.internal.connection.e.d` @type ^`h.j` @kind object;
  #L1fff16.  call `connectionAcquired`(v0, v2, v8) @signature `Lh/v;.connectionAcquired:(Lh/j;Lh/n;)V` @kind virtual;
  #L1fff1c.  return v8 @kind object;
  #L1fff1e.  v0:= v1.`okhttp3.internal.connection.e.d` @type ^`h.j` @kind object;
  #L1fff22.  v3:= v1.`okhttp3.internal.connection.e.e` @type ^`h.v` @kind object;
  #L1fff26.  v10:= v8 @kind object;
  #L1fff28.  v11:= v19;
  #L1fff2c.  v12:= v20;
  #L1fff30.  v13:= v21;
  #L1fff34.  v14:= v22;
  #L1fff38.  v15:= v23;
  #L1fff3c.  v16:= v0 @kind object;
  #L1fff40.  v17:= v3 @kind object;
  #L1fff44.  call `connect`(v10, v11, v12, v13, v14, v15, v16, v17) @signature `Lokhttp3/internal/connection/f;.connect:(IIIIZLh/j;Lh/v;)V` @kind virtual;
  #L1fff4a.  v0:= v1.`okhttp3.internal.connection.e.c` @type ^`okhttp3.internal.connection.g` @kind object;
  #L1fff4e.  v0:= v0.`okhttp3.internal.connection.g.e` @type ^`okhttp3.internal.connection.h` @kind object;
  #L1fff52.  call temp:= `route`(v8) @signature `Lokhttp3/internal/connection/f;.route:()Lh/k0;` @kind virtual;
  #L1fff58.  v3:= temp @kind object;
  #L1fff5a.  call `connected`(v0, v3) @signature `Lokhttp3/internal/connection/h;.connected:(Lh/k0;)V` @kind virtual;
  #L1fff60.  v3:= v1.`okhttp3.internal.connection.e.c` @type ^`okhttp3.internal.connection.g` @kind object;
  #L1fff64.  @monitorenter v3
  #L1fff66.  v1.`okhttp3.internal.connection.e.h` @type ^`okhttp3.internal.connection.f` := v5 @kind object;
  #L1fff6a.  v0:= v1.`okhttp3.internal.connection.e.c` @type ^`okhttp3.internal.connection.g` @kind object;
  #L1fff6e.  v4:= v1.`okhttp3.internal.connection.e.b` @type ^`h.e` @kind object;
  #L1fff72.  v6:= v1.`okhttp3.internal.connection.e.a` @type ^`okhttp3.internal.connection.j` @kind object;
  #L1fff76.  call temp:= `a`(v0, v4, v6, v2, v7) @signature `Lokhttp3/internal/connection/g;.a:(Lh/e;Lokhttp3/internal/connection/j;Ljava/util/List;Z)Z` @kind virtual;
  #L1fff7c.  v0:= temp;
  #L1fff7e.  if v0 == 0 then goto L1fff9c;
  #L1fff82.  v8.`okhttp3.internal.connection.f.k` @type ^`boolean` := v7 @kind boolean;
  #L1fff86.  call temp:= `socket`(v8) @signature `Lokhttp3/internal/connection/f;.socket:()Ljava/net/Socket;` @kind virtual;
  #L1fff8c.  v5:= temp @kind object;
  #L1fff8e.  v0:= v1.`okhttp3.internal.connection.e.a` @type ^`okhttp3.internal.connection.j` @kind object;
  #L1fff92.  v8:= v0.`okhttp3.internal.connection.j.i` @type ^`okhttp3.internal.connection.f` @kind object;
  #L1fff96.  v1.`okhttp3.internal.connection.e.j` @type ^`h.k0` := v9 @kind object;
  #L1fff9a.  goto L1fffb0;
  #L1fff9c.  v0:= v1.`okhttp3.internal.connection.e.c` @type ^`okhttp3.internal.connection.g` @kind object;
  #L1fffa0.  call `b`(v0, v8) @signature `Lokhttp3/internal/connection/g;.b:(Lokhttp3/internal/connection/f;)V` @kind virtual;
  #L1fffa6.  v0:= v1.`okhttp3.internal.connection.e.a` @type ^`okhttp3.internal.connection.j` @kind object;
  #L1fffaa.  call `a`(v0, v8) @signature `Lokhttp3/internal/connection/j;.a:(Lokhttp3/internal/connection/f;)V` @kind virtual;
  #L1fffb0.  @monitorexit v3
  #L1fffb2.  call `closeQuietly`(v5) @signature `Lh/n0/e;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L1fffb8.  v0:= v1.`okhttp3.internal.connection.e.e` @type ^`h.v` @kind object;
  #L1fffbc.  v2:= v1.`okhttp3.internal.connection.e.d` @type ^`h.j` @kind object;
  #L1fffc0.  call `connectionAcquired`(v0, v2, v8) @signature `Lh/v;.connectionAcquired:(Lh/j;Lh/n;)V` @kind virtual;
  #L1fffc6.  return v8 @kind object;
  #L1fffc8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1fffca.  @monitorexit v3
  #L1fffcc.  throw v0;
  #L1fffce.  v0:= new `java.io.IOException`;
  #L1fffd2.  v2:= "Canceled" @kind object;
  #L1fffd6.  call `<init>`(v0, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fffdc.  throw v0;
  #L1fffde.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1fffe0.  @monitorexit v4
  #L1fffe2.  throw v0;
  #L1fffe4.  v0:= new `java.io.IOException`;
  #L1fffe8.  v3:= "Canceled" @kind object;
  #L1fffec.  call `<init>`(v0, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1ffff2.  throw v0;
  #L1ffff4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ffff6.  @monitorexit v2
  #L1ffff8.  throw v0;
  catch `java.lang.Throwable` @[L1ffd66..L1ffe38] goto L1ffff4;
  catch `java.lang.Throwable` @[L1ffe9c..L1fff0a] goto L1fffde;
  catch `java.lang.Throwable` @[L1fff66..L1fffb2] goto L1fffc8;
  catch `java.lang.Throwable` @[L1fffca..L1fffcc] goto L1fffc8;
  catch `java.lang.Throwable` @[L1fffce..L1fffe2] goto L1fffde;
  catch `java.lang.Throwable` @[L1fffe4..L1ffff8] goto L1ffff4;
}
procedure `okhttp3.internal.connection.f` `a`(`okhttp3.internal.connection.e` v3 @kind this, `int` v4 , `int` v5 , `int` v6 , `int` v7 , `boolean` v8 , `boolean` v9 ) @signature `Lokhttp3/internal/connection/e;.a:(IIIIZZ)Lokhttp3/internal/connection/f;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L200048.  call temp:= `a`(v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/internal/connection/e;.a:(IIIIZ)Lokhttp3/internal/connection/f;` @kind direct;
  #L20004e.  v0:= temp @kind object;
  #L200050.  v1:= v3.`okhttp3.internal.connection.e.c` @type ^`okhttp3.internal.connection.g` @kind object;
  #L200054.  @monitorenter v1
  #L200056.  v2:= v0.`okhttp3.internal.connection.f.m` @type ^`int`;
  #L20005a.  if v2 != 0 then goto L20006e;
  #L20005e.  call temp:= `isMultiplexed`(v0) @signature `Lokhttp3/internal/connection/f;.isMultiplexed:()Z` @kind virtual;
  #L200064.  v2:= temp;
  #L200066.  if v2 != 0 then goto L20006e;
  #L20006a.  @monitorexit v1
  #L20006c.  return v0 @kind object;
  #L20006e.  @monitorexit v1
  #L200070.  call temp:= `isHealthy`(v0, v9) @signature `Lokhttp3/internal/connection/f;.isHealthy:(Z)Z` @kind virtual;
  #L200076.  v1:= temp;
  #L200078.  if v1 != 0 then goto L200084;
  #L20007c.  call `noNewExchanges`(v0) @signature `Lokhttp3/internal/connection/f;.noNewExchanges:()V` @kind virtual;
  #L200082.  goto L200048;
  #L200084.  return v0 @kind object;
  #L200086.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L200088.  @monitorexit v1
  #L20008a.  throw v4;
  catch `java.lang.Throwable` @[L200056..L200070] goto L200086;
  catch `java.lang.Throwable` @[L200088..L20008a] goto L200086;
}
procedure `boolean` `e`(`okhttp3.internal.connection.e` v2 @kind this) @signature `Lokhttp3/internal/connection/e;.e:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1ffce8.  v0:= v2.`okhttp3.internal.connection.e.a` @type ^`okhttp3.internal.connection.j` @kind object;
  #L1ffcec.  v0:= v0.`okhttp3.internal.connection.j.i` @type ^`okhttp3.internal.connection.f` @kind object;
  #L1ffcf0.  if v0 == 0 then goto L1ffd30;
  #L1ffcf4.  v1:= v0.`okhttp3.internal.connection.f.l` @type ^`int`;
  #L1ffcf8.  if v1 != 0 then goto L1ffd30;
  #L1ffcfc.  call temp:= `route`(v0) @signature `Lokhttp3/internal/connection/f;.route:()Lh/k0;` @kind virtual;
  #L1ffd02.  v0:= temp @kind object;
  #L1ffd04.  call temp:= `address`(v0) @signature `Lh/k0;.address:()Lh/e;` @kind virtual;
  #L1ffd0a.  v0:= temp @kind object;
  #L1ffd0c.  call temp:= `url`(v0) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L1ffd12.  v0:= temp @kind object;
  #L1ffd14.  v1:= v2.`okhttp3.internal.connection.e.b` @type ^`h.e` @kind object;
  #L1ffd18.  call temp:= `url`(v1) @signature `Lh/e;.url:()Lh/z;` @kind virtual;
  #L1ffd1e.  v1:= temp @kind object;
  #L1ffd20.  call temp:= `sameConnection`(v0, v1) @signature `Lh/n0/e;.sameConnection:(Lh/z;Lh/z;)Z` @kind static;
  #L1ffd26.  v0:= temp;
  #L1ffd28.  if v0 == 0 then goto L1ffd30;
  #L1ffd2c.  v0:= 1I;
  #L1ffd2e.  goto L1ffd32;
  #L1ffd30.  v0:= 0I;
  #L1ffd32.  return v0;
}
procedure `okhttp3.internal.connection.f` `a`(`okhttp3.internal.connection.e` v1 @kind this) @signature `Lokhttp3/internal/connection/e;.a:()Lokhttp3/internal/connection/f;` @AccessFlag  {
    temp;
    v0;

  #L1ffd44.  v0:= v1.`okhttp3.internal.connection.e.h` @type ^`okhttp3.internal.connection.f` @kind object;
  #L1ffd48.  return v0 @kind object;
}
procedure `boolean` `b`(`okhttp3.internal.connection.e` v3 @kind this) @signature `Lokhttp3/internal/connection/e;.b:()Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L1ffc2c.  v0:= v3.`okhttp3.internal.connection.e.c` @type ^`okhttp3.internal.connection.g` @kind object;
  #L1ffc30.  @monitorenter v0
  #L1ffc32.  v1:= v3.`okhttp3.internal.connection.e.j` @type ^`h.k0` @kind object;
  #L1ffc36.  v2:= 1I;
  #L1ffc38.  if v1 == 0 then goto L1ffc40;
  #L1ffc3c.  @monitorexit v0
  #L1ffc3e.  return v2;
  #L1ffc40.  call temp:= `e`(v3) @signature `Lokhttp3/internal/connection/e;.e:()Z` @kind direct;
  #L1ffc46.  v1:= temp;
  #L1ffc48.  if v1 == 0 then goto L1ffc64;
  #L1ffc4c.  v1:= v3.`okhttp3.internal.connection.e.a` @type ^`okhttp3.internal.connection.j` @kind object;
  #L1ffc50.  v1:= v1.`okhttp3.internal.connection.j.i` @type ^`okhttp3.internal.connection.f` @kind object;
  #L1ffc54.  call temp:= `route`(v1) @signature `Lokhttp3/internal/connection/f;.route:()Lh/k0;` @kind virtual;
  #L1ffc5a.  v1:= temp @kind object;
  #L1ffc5c.  v3.`okhttp3.internal.connection.e.j` @type ^`h.k0` := v1 @kind object;
  #L1ffc60.  @monitorexit v0
  #L1ffc62.  return v2;
  #L1ffc64.  v1:= v3.`okhttp3.internal.connection.e.f` @type ^`okhttp3.internal.connection.i$a` @kind object;
  #L1ffc68.  if v1 == 0 then goto L1ffc7c;
  #L1ffc6c.  v1:= v3.`okhttp3.internal.connection.e.f` @type ^`okhttp3.internal.connection.i$a` @kind object;
  #L1ffc70.  call temp:= `hasNext`(v1) @signature `Lokhttp3/internal/connection/i$a;.hasNext:()Z` @kind virtual;
  #L1ffc76.  v1:= temp;
  #L1ffc78.  if v1 != 0 then goto L1ffc90;
  #L1ffc7c.  v1:= v3.`okhttp3.internal.connection.e.g` @type ^`okhttp3.internal.connection.i` @kind object;
  #L1ffc80.  call temp:= `hasNext`(v1) @signature `Lokhttp3/internal/connection/i;.hasNext:()Z` @kind virtual;
  #L1ffc86.  v1:= temp;
  #L1ffc88.  if v1 == 0 then goto L1ffc8e;
  #L1ffc8c.  goto L1ffc90;
  #L1ffc8e.  v2:= 0I;
  #L1ffc90.  @monitorexit v0
  #L1ffc92.  return v2;
  #L1ffc94.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ffc96.  @monitorexit v0
  #L1ffc98.  throw v1;
  catch `java.lang.Throwable` @[L1ffc32..L1ffc98] goto L1ffc94;
}
procedure `boolean` `c`(`okhttp3.internal.connection.e` v2 @kind this) @signature `Lokhttp3/internal/connection/e;.c:()Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1ffcb8.  v0:= v2.`okhttp3.internal.connection.e.c` @type ^`okhttp3.internal.connection.g` @kind object;
  #L1ffcbc.  @monitorenter v0
  #L1ffcbe.  v1:= v2.`okhttp3.internal.connection.e.i` @type ^`boolean` @kind boolean;
  #L1ffcc2.  @monitorexit v0
  #L1ffcc4.  return v1;
  #L1ffcc6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ffcc8.  @monitorexit v0
  #L1ffcca.  throw v1;
  catch `java.lang.Throwable` @[L1ffcbe..L1ffcca] goto L1ffcc6;
}
procedure `void` `d`(`okhttp3.internal.connection.e` v2 @kind this) @signature `Lokhttp3/internal/connection/e;.d:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L20016c.  v0:= v2.`okhttp3.internal.connection.e.c` @type ^`okhttp3.internal.connection.g` @kind object;
  #L200170.  @monitorenter v0
  #L200172.  v1:= 1I;
  #L200174.  v2.`okhttp3.internal.connection.e.i` @type ^`boolean` := v1 @kind boolean;
  #L200178.  @monitorexit v0
  #L20017a.  return @kind void;
  #L20017c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20017e.  @monitorexit v0
  #L200180.  throw v1;
  catch `java.lang.Throwable` @[L200174..L200180] goto L20017c;
}
procedure `h.n0.h.c` `find`(`okhttp3.internal.connection.e` v7 @kind this, `h.d0` v8 @kind object, `h.a0$a` v9 @kind object, `boolean` v10 ) @signature `Lokhttp3/internal/connection/e;.find:(Lh/d0;Lh/a0$a;Z)Lh/n0/h/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2000b0.  call temp:= `connectTimeoutMillis`(v9) @signature `Lh/a0$a;.connectTimeoutMillis:()I` @kind interface;
  #L2000b6.  v1:= temp;
  #L2000b8.  call temp:= `readTimeoutMillis`(v9) @signature `Lh/a0$a;.readTimeoutMillis:()I` @kind interface;
  #L2000be.  v2:= temp;
  #L2000c0.  call temp:= `writeTimeoutMillis`(v9) @signature `Lh/a0$a;.writeTimeoutMillis:()I` @kind interface;
  #L2000c6.  v3:= temp;
  #L2000c8.  call temp:= `pingIntervalMillis`(v8) @signature `Lh/d0;.pingIntervalMillis:()I` @kind virtual;
  #L2000ce.  v4:= temp;
  #L2000d0.  call temp:= `retryOnConnectionFailure`(v8) @signature `Lh/d0;.retryOnConnectionFailure:()Z` @kind virtual;
  #L2000d6.  v5:= temp;
  #L2000d8.  v0:= v7 @kind object;
  #L2000da.  v6:= v10;
  #L2000dc.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/connection/e;.a:(IIIIZZ)Lokhttp3/internal/connection/f;` @kind direct;
  #L2000e2.  v10:= temp @kind object;
  #L2000e4.  call temp:= `a`(v10, v8, v9) @signature `Lokhttp3/internal/connection/f;.a:(Lh/d0;Lh/a0$a;)Lh/n0/h/c;` @kind virtual;
  #L2000ea.  v8:= temp @kind object;
  #L2000ec.  return v8 @kind object;
  #L2000ee.  v8:= Exception @type ^`java.io.IOException` @kind object;
  #L2000f0.  call `d`(v7) @signature `Lokhttp3/internal/connection/e;.d:()V` @kind virtual;
  #L2000f6.  v9:= new `okhttp3.internal.connection.RouteException`;
  #L2000fa.  call `<init>`(v9, v8) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L200100.  throw v9;
  #L200102.  v8:= Exception @type ^`okhttp3.internal.connection.RouteException` @kind object;
  #L200104.  call `d`(v7) @signature `Lokhttp3/internal/connection/e;.d:()V` @kind virtual;
  #L20010a.  throw v8;
  catch `okhttp3.internal.connection.RouteException` @[L2000dc..L2000ec] goto L200102;
  catch `java.io.IOException` @[L2000dc..L2000ec] goto L2000ee;
}
