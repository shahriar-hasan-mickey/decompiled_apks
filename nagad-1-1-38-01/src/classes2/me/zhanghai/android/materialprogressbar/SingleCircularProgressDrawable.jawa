record `me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable` @kind class @AccessFlag  extends `me.zhanghai.android.materialprogressbar.BaseSingleCircularProgressDrawable` @kind class, `me.zhanghai.android.materialprogressbar.ShowBackgroundDrawable` @kind interface {
  `boolean` `me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable.mShowBackground` @AccessFlag PRIVATE;
  `float` `me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable.mStartAngleMax` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable.LEVEL_MAX` @AccessFlag PRIVATE_STATIC_FINAL;
global `float` `@@me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable.START_ANGLE_MAX_DYNAMIC` @AccessFlag PRIVATE_STATIC_FINAL;
global `float` `@@me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable.START_ANGLE_MAX_NORMAL` @AccessFlag PRIVATE_STATIC_FINAL;
global `float` `@@me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable.SWEEP_ANGLE_MAX` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable` v1 @kind this, `int` v2 ) @signature `Lme/zhanghai/android/materialprogressbar/SingleCircularProgressDrawable;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1f3d38.  call `<init>`(v1) @signature `Lme/zhanghai/android/materialprogressbar/BaseSingleCircularProgressDrawable;.<init>:()V` @kind direct;
  #L1f3d3e.  if v2 == 0 then goto L1f3d62;
  #L1f3d42.  v0:= 1I;
  #L1f3d44.  if v2 != v0 then goto L1f3d52;
  #L1f3d48.  v2:= 360.0F;
  #L1f3d4c.  v1.`me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable.mStartAngleMax` @type ^`float` := v2;
  #L1f3d50.  goto L1f3d68;
  #L1f3d52.  v2:= new `java.lang.IllegalArgumentException`;
  #L1f3d56.  v0:= "Invalid value for style" @kind object;
  #L1f3d5a.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f3d60.  throw v2;
  #L1f3d62.  v2:= 0I;
  #L1f3d64.  v1.`me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable.mStartAngleMax` @type ^`float` := v2;
  #L1f3d68.  return @kind void;
}
procedure `boolean` `getShowBackground`(`me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable` v1 @kind this) @signature `Lme/zhanghai/android/materialprogressbar/SingleCircularProgressDrawable;.getShowBackground:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f3d04.  v0:= v1.`me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable.mShowBackground` @type ^`boolean` @kind boolean;
  #L1f3d08.  return v0;
}
procedure `void` `onDrawRing`(`me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable` v3 @kind this, `android.graphics.Canvas` v4 @kind object, `android.graphics.Paint` v5 @kind object) @signature `Lme/zhanghai/android/materialprogressbar/SingleCircularProgressDrawable;.onDrawRing:(Landroid/graphics/Canvas;Landroid/graphics/Paint;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L1f3d7c.  call temp:= `getLevel`(v3) @signature `Landroid/graphics/drawable/Drawable;.getLevel:()I` @kind virtual;
  #L1f3d82.  v0:= temp;
  #L1f3d84.  if v0 != 0 then goto L1f3d8a;
  #L1f3d88.  return @kind void;
  #L1f3d8a.  v0:= (`float`) v0 @kind i2f;
  #L1f3d8c.  v1:= 1176256512I;
  #L1f3d92.  v0:= v0 / v1 @kind float;
  #L1f3d94.  v1:= v3.`me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable.mStartAngleMax` @type ^`float`;
  #L1f3d98.  v1:= v1 * v0 @kind float;
  #L1f3d9c.  v2:= 360.0F;
  #L1f3da0.  v0:= v0 * v2 @kind float;
  #L1f3da4.  call `drawRing`(v3, v4, v5, v1, v0) @signature `Lme/zhanghai/android/materialprogressbar/BaseSingleCircularProgressDrawable;.drawRing:(Landroid/graphics/Canvas;Landroid/graphics/Paint;FF)V` @kind virtual;
  #L1f3daa.  v2:= v3.`me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable.mShowBackground` @type ^`boolean` @kind boolean;
  #L1f3dae.  if v2 == 0 then goto L1f3db8;
  #L1f3db2.  call `drawRing`(v3, v4, v5, v1, v0) @signature `Lme/zhanghai/android/materialprogressbar/BaseSingleCircularProgressDrawable;.drawRing:(Landroid/graphics/Canvas;Landroid/graphics/Paint;FF)V` @kind virtual;
  #L1f3db8.  return @kind void;
}
procedure `boolean` `onLevelChange`(`me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable` v0 @kind this, `int` v1 ) @signature `Lme/zhanghai/android/materialprogressbar/SingleCircularProgressDrawable;.onLevelChange:(I)Z` @AccessFlag PROTECTED {
    temp;

  #L1f3d1c.  call `invalidateSelf`(v0) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind virtual;
  #L1f3d22.  v1:= 1I;
  #L1f3d24.  return v1;
}
procedure `void` `setShowBackground`(`me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable` v1 @kind this, `boolean` v2 ) @signature `Lme/zhanghai/android/materialprogressbar/SingleCircularProgressDrawable;.setShowBackground:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f3dcc.  v0:= v1.`me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable.mShowBackground` @type ^`boolean` @kind boolean;
  #L1f3dd0.  if v0 == v2 then goto L1f3dde;
  #L1f3dd4.  v1.`me.zhanghai.android.materialprogressbar.SingleCircularProgressDrawable.mShowBackground` @type ^`boolean` := v2 @kind boolean;
  #L1f3dd8.  call `invalidateSelf`(v1) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind virtual;
  #L1f3dde.  return @kind void;
}
