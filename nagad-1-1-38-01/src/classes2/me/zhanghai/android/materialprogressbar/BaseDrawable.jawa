record `me.zhanghai.android.materialprogressbar.BaseDrawable` @kind class @AccessFlag ABSTRACT extends `android.graphics.drawable.Drawable` @kind class, `me.zhanghai.android.materialprogressbar.TintableDrawable` @kind interface {
  `int` `me.zhanghai.android.materialprogressbar.BaseDrawable.mAlpha` @AccessFlag PROTECTED;
  `android.graphics.ColorFilter` `me.zhanghai.android.materialprogressbar.BaseDrawable.mColorFilter` @AccessFlag PROTECTED;
  `me.zhanghai.android.materialprogressbar.BaseDrawable$DummyConstantState` `me.zhanghai.android.materialprogressbar.BaseDrawable.mConstantState` @AccessFlag PRIVATE;
  `android.graphics.PorterDuffColorFilter` `me.zhanghai.android.materialprogressbar.BaseDrawable.mTintFilter` @AccessFlag PROTECTED;
  `android.content.res.ColorStateList` `me.zhanghai.android.materialprogressbar.BaseDrawable.mTintList` @AccessFlag PROTECTED;
  `android.graphics.PorterDuff$Mode` `me.zhanghai.android.materialprogressbar.BaseDrawable.mTintMode` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`me.zhanghai.android.materialprogressbar.BaseDrawable` v2 @kind this) @signature `Lme/zhanghai/android/materialprogressbar/BaseDrawable;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1f0bf4.  call `<init>`(v2) @signature `Landroid/graphics/drawable/Drawable;.<init>:()V` @kind direct;
  #L1f0bfa.  v0:= 255I;
  #L1f0bfe.  v2.`me.zhanghai.android.materialprogressbar.BaseDrawable.mAlpha` @type ^`int` := v0;
  #L1f0c02.  v0:= `@@android.graphics.PorterDuff$Mode.SRC_IN` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L1f0c06.  v2.`me.zhanghai.android.materialprogressbar.BaseDrawable.mTintMode` @type ^`android.graphics.PorterDuff$Mode` := v0 @kind object;
  #L1f0c0a.  v0:= new `me.zhanghai.android.materialprogressbar.BaseDrawable$DummyConstantState`;
  #L1f0c0e.  v1:= 0I;
  #L1f0c10.  call `<init>`(v0, v2, v1) @signature `Lme/zhanghai/android/materialprogressbar/BaseDrawable$DummyConstantState;.<init>:(Lme/zhanghai/android/materialprogressbar/BaseDrawable;Lme/zhanghai/android/materialprogressbar/BaseDrawable$1;)V` @kind direct;
  #L1f0c16.  v2.`me.zhanghai.android.materialprogressbar.BaseDrawable.mConstantState` @type ^`me.zhanghai.android.materialprogressbar.BaseDrawable$DummyConstantState` := v0 @kind object;
  #L1f0c1a.  return @kind void;
}
procedure `boolean` `updateTintFilter`(`me.zhanghai.android.materialprogressbar.BaseDrawable` v4 @kind this) @signature `Lme/zhanghai/android/materialprogressbar/BaseDrawable;.updateTintFilter:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1f0b68.  v0:= v4.`me.zhanghai.android.materialprogressbar.BaseDrawable.mTintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L1f0b6c.  v1:= 1I;
  #L1f0b6e.  v2:= 0I;
  #L1f0b70.  if v0 == 0 then goto L1f0ba2;
  #L1f0b74.  v3:= v4.`me.zhanghai.android.materialprogressbar.BaseDrawable.mTintMode` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L1f0b78.  if v3 != 0 then goto L1f0b7e;
  #L1f0b7c.  goto L1f0ba2;
  #L1f0b7e.  call temp:= `getState`(v4) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L1f0b84.  v3:= temp @kind object;
  #L1f0b86.  call temp:= `getColorForState`(v0, v3, v2) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L1f0b8c.  v0:= temp;
  #L1f0b8e.  v2:= new `android.graphics.PorterDuffColorFilter`;
  #L1f0b92.  v3:= v4.`me.zhanghai.android.materialprogressbar.BaseDrawable.mTintMode` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L1f0b96.  call `<init>`(v2, v0, v3) @signature `Landroid/graphics/PorterDuffColorFilter;.<init>:(ILandroid/graphics/PorterDuff$Mode;)V` @kind direct;
  #L1f0b9c.  v4.`me.zhanghai.android.materialprogressbar.BaseDrawable.mTintFilter` @type ^`android.graphics.PorterDuffColorFilter` := v2 @kind object;
  #L1f0ba0.  return v1;
  #L1f0ba2.  v0:= v4.`me.zhanghai.android.materialprogressbar.BaseDrawable.mTintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L1f0ba6.  if v0 == 0 then goto L1f0bac;
  #L1f0baa.  goto L1f0bae;
  #L1f0bac.  v1:= 0I;
  #L1f0bae.  v0:= 0I;
  #L1f0bb0.  v4.`me.zhanghai.android.materialprogressbar.BaseDrawable.mTintFilter` @type ^`android.graphics.PorterDuffColorFilter` := v0 @kind object;
  #L1f0bb4.  return v1;
}
procedure `void` `draw`(`me.zhanghai.android.materialprogressbar.BaseDrawable` v4 @kind this, `android.graphics.Canvas` v5 @kind object) @signature `Lme/zhanghai/android/materialprogressbar/BaseDrawable;.draw:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1f0c2c.  call temp:= `getBounds`(v4) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L1f0c32.  v0:= temp @kind object;
  #L1f0c34.  call temp:= `width`(v0) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L1f0c3a.  v1:= temp;
  #L1f0c3c.  if v1 == 0 then goto L1f0c84;
  #L1f0c40.  call temp:= `height`(v0) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L1f0c46.  v1:= temp;
  #L1f0c48.  if v1 != 0 then goto L1f0c4e;
  #L1f0c4c.  goto L1f0c84;
  #L1f0c4e.  call temp:= `save`(v5) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L1f0c54.  v1:= temp;
  #L1f0c56.  v2:= v0.`android.graphics.Rect.left` @type ^`int`;
  #L1f0c5a.  v2:= (`float`) v2 @kind i2f;
  #L1f0c5c.  v3:= v0.`android.graphics.Rect.top` @type ^`int`;
  #L1f0c60.  v3:= (`float`) v3 @kind i2f;
  #L1f0c62.  call `translate`(v5, v2, v3) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L1f0c68.  call temp:= `width`(v0) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L1f0c6e.  v2:= temp;
  #L1f0c70.  call temp:= `height`(v0) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L1f0c76.  v0:= temp;
  #L1f0c78.  call `onDraw`(v4, v5, v2, v0) @signature `Lme/zhanghai/android/materialprogressbar/BaseDrawable;.onDraw:(Landroid/graphics/Canvas;II)V` @kind virtual;
  #L1f0c7e.  call `restoreToCount`(v5, v1) @signature `Landroid/graphics/Canvas;.restoreToCount:(I)V` @kind virtual;
  #L1f0c84.  return @kind void;
}
procedure `int` `getAlpha`(`me.zhanghai.android.materialprogressbar.BaseDrawable` v1 @kind this) @signature `Lme/zhanghai/android/materialprogressbar/BaseDrawable;.getAlpha:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f0bc8.  v0:= v1.`me.zhanghai.android.materialprogressbar.BaseDrawable.mAlpha` @type ^`int`;
  #L1f0bcc.  return v0;
}
procedure `android.graphics.ColorFilter` `getColorFilter`(`me.zhanghai.android.materialprogressbar.BaseDrawable` v1 @kind this) @signature `Lme/zhanghai/android/materialprogressbar/BaseDrawable;.getColorFilter:()Landroid/graphics/ColorFilter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f0ad0.  v0:= v1.`me.zhanghai.android.materialprogressbar.BaseDrawable.mColorFilter` @type ^`android.graphics.ColorFilter` @kind object;
  #L1f0ad4.  return v0 @kind object;
}
procedure `android.graphics.ColorFilter` `getColorFilterForDrawing`(`me.zhanghai.android.materialprogressbar.BaseDrawable` v1 @kind this) @signature `Lme/zhanghai/android/materialprogressbar/BaseDrawable;.getColorFilterForDrawing:()Landroid/graphics/ColorFilter;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1f0ae8.  v0:= v1.`me.zhanghai.android.materialprogressbar.BaseDrawable.mColorFilter` @type ^`android.graphics.ColorFilter` @kind object;
  #L1f0aec.  if v0 == 0 then goto L1f0af2;
  #L1f0af0.  goto L1f0af6;
  #L1f0af2.  v0:= v1.`me.zhanghai.android.materialprogressbar.BaseDrawable.mTintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L1f0af6.  return v0 @kind object;
}
procedure `android.graphics.drawable.Drawable$ConstantState` `getConstantState`(`me.zhanghai.android.materialprogressbar.BaseDrawable` v1 @kind this) @signature `Lme/zhanghai/android/materialprogressbar/BaseDrawable;.getConstantState:()Landroid/graphics/drawable/Drawable$ConstantState;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f0b08.  v0:= v1.`me.zhanghai.android.materialprogressbar.BaseDrawable.mConstantState` @type ^`me.zhanghai.android.materialprogressbar.BaseDrawable$DummyConstantState` @kind object;
  #L1f0b0c.  return v0 @kind object;
}
procedure `int` `getOpacity`(`me.zhanghai.android.materialprogressbar.BaseDrawable` v1 @kind this) @signature `Lme/zhanghai/android/materialprogressbar/BaseDrawable;.getOpacity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f0be0.  v0:= -3I;
  #L1f0be2.  return v0;
}
procedure `boolean` `isStateful`(`me.zhanghai.android.materialprogressbar.BaseDrawable` v1 @kind this) @signature `Lme/zhanghai/android/materialprogressbar/BaseDrawable;.isStateful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f0b20.  v0:= v1.`me.zhanghai.android.materialprogressbar.BaseDrawable.mTintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L1f0b24.  if v0 == 0 then goto L1f0b38;
  #L1f0b28.  call temp:= `isStateful`(v0) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L1f0b2e.  v0:= temp;
  #L1f0b30.  if v0 == 0 then goto L1f0b38;
  #L1f0b34.  v0:= 1I;
  #L1f0b36.  goto L1f0b3a;
  #L1f0b38.  v0:= 0I;
  #L1f0b3a.  return v0;
}
procedure `void` `onDraw`(`android.graphics.Canvas` v0 @kind object, `int` v1 , `int` v2 ) @signature `Lme/zhanghai/android/materialprogressbar/BaseDrawable;.onDraw:(Landroid/graphics/Canvas;II)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `onStateChange`(`me.zhanghai.android.materialprogressbar.BaseDrawable` v0 @kind this, `int`[] v1 @kind object) @signature `Lme/zhanghai/android/materialprogressbar/BaseDrawable;.onStateChange:([I)Z` @AccessFlag PROTECTED {
    temp;

  #L1f0b4c.  call temp:= `updateTintFilter`(v0) @signature `Lme/zhanghai/android/materialprogressbar/BaseDrawable;.updateTintFilter:()Z` @kind direct;
  #L1f0b52.  v1:= temp;
  #L1f0b54.  return v1;
}
procedure `void` `setAlpha`(`me.zhanghai.android.materialprogressbar.BaseDrawable` v1 @kind this, `int` v2 ) @signature `Lme/zhanghai/android/materialprogressbar/BaseDrawable;.setAlpha:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f0c98.  v0:= v1.`me.zhanghai.android.materialprogressbar.BaseDrawable.mAlpha` @type ^`int`;
  #L1f0c9c.  if v0 == v2 then goto L1f0caa;
  #L1f0ca0.  v1.`me.zhanghai.android.materialprogressbar.BaseDrawable.mAlpha` @type ^`int` := v2;
  #L1f0ca4.  call `invalidateSelf`(v1) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind virtual;
  #L1f0caa.  return @kind void;
}
procedure `void` `setColorFilter`(`me.zhanghai.android.materialprogressbar.BaseDrawable` v0 @kind this, `android.graphics.ColorFilter` v1 @kind object) @signature `Lme/zhanghai/android/materialprogressbar/BaseDrawable;.setColorFilter:(Landroid/graphics/ColorFilter;)V` @AccessFlag PUBLIC {
    temp;

  #L1f0cbc.  v0.`me.zhanghai.android.materialprogressbar.BaseDrawable.mColorFilter` @type ^`android.graphics.ColorFilter` := v1 @kind object;
  #L1f0cc0.  call `invalidateSelf`(v0) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind virtual;
  #L1f0cc6.  return @kind void;
}
procedure `void` `setTint`(`me.zhanghai.android.materialprogressbar.BaseDrawable` v0 @kind this, `int` v1 ) @signature `Lme/zhanghai/android/materialprogressbar/BaseDrawable;.setTint:(I)V` @AccessFlag PUBLIC {
    temp;

  #L1f0cd8.  call temp:= `valueOf`(v1) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L1f0cde.  v1:= temp @kind object;
  #L1f0ce0.  call `setTintList`(v0, v1) @signature `Lme/zhanghai/android/materialprogressbar/BaseDrawable;.setTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1f0ce6.  return @kind void;
}
procedure `void` `setTintList`(`me.zhanghai.android.materialprogressbar.BaseDrawable` v0 @kind this, `android.content.res.ColorStateList` v1 @kind object) @signature `Lme/zhanghai/android/materialprogressbar/BaseDrawable;.setTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;

  #L1f0cf8.  v0.`me.zhanghai.android.materialprogressbar.BaseDrawable.mTintList` @type ^`android.content.res.ColorStateList` := v1 @kind object;
  #L1f0cfc.  call temp:= `updateTintFilter`(v0) @signature `Lme/zhanghai/android/materialprogressbar/BaseDrawable;.updateTintFilter:()Z` @kind direct;
  #L1f0d02.  v1:= temp;
  #L1f0d04.  if v1 == 0 then goto L1f0d0e;
  #L1f0d08.  call `invalidateSelf`(v0) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind virtual;
  #L1f0d0e.  return @kind void;
}
procedure `void` `setTintMode`(`me.zhanghai.android.materialprogressbar.BaseDrawable` v0 @kind this, `android.graphics.PorterDuff$Mode` v1 @kind object) @signature `Lme/zhanghai/android/materialprogressbar/BaseDrawable;.setTintMode:(Landroid/graphics/PorterDuff$Mode;)V` @AccessFlag PUBLIC {
    temp;

  #L1f0d20.  v0.`me.zhanghai.android.materialprogressbar.BaseDrawable.mTintMode` @type ^`android.graphics.PorterDuff$Mode` := v1 @kind object;
  #L1f0d24.  call temp:= `updateTintFilter`(v0) @signature `Lme/zhanghai/android/materialprogressbar/BaseDrawable;.updateTintFilter:()Z` @kind direct;
  #L1f0d2a.  v1:= temp;
  #L1f0d2c.  if v1 == 0 then goto L1f0d36;
  #L1f0d30.  call `invalidateSelf`(v0) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind virtual;
  #L1f0d36.  return @kind void;
}
