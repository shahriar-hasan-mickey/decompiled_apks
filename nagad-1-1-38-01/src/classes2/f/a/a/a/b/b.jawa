record `f.a.a.a.b.b` @kind class @AccessFlag PUBLIC_FINAL {
}
global `f.a.a.b.e` `@@f.a.a.a.b.b.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lf/a/a/a/b/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1ce148.  v0:= `@@f.a.a.a.b.a.f` @type ^`f.a.a.a.b.a` @kind object;
  #L1ce14c.  call temp:= `initMainThreadScheduler`(v0) @signature `Lf/a/a/a/a/a;.initMainThreadScheduler:(Ljava/util/concurrent/Callable;)Lf/a/a/b/e;` @kind static;
  #L1ce152.  v0:= temp @kind object;
  #L1ce154.  `@@f.a.a.a.b.b.a` @type ^`f.a.a.b.e` := v0 @kind object;
  #L1ce158.  return @kind void;
}
procedure `f.a.a.b.e` `a`() @signature `Lf/a/a/a/b/b;.a:()Lf/a/a/b/e;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L1ce110.  v0:= `@@f.a.a.a.b.b$a.a` @type ^`f.a.a.b.e` @kind object;
  #L1ce114.  return v0 @kind object;
}
procedure `f.a.a.b.e` `mainThread`() @signature `Lf/a/a/a/b/b;.mainThread:()Lf/a/a/b/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1ce128.  v0:= `@@f.a.a.a.b.b.a` @type ^`f.a.a.b.e` @kind object;
  #L1ce12c.  call temp:= `onMainThreadScheduler`(v0) @signature `Lf/a/a/a/a/a;.onMainThreadScheduler:(Lf/a/a/b/e;)Lf/a/a/b/e;` @kind static;
  #L1ce132.  v0:= temp @kind object;
  #L1ce134.  return v0 @kind object;
}
