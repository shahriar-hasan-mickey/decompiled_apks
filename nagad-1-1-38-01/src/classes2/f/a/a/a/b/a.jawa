record `f.a.a.a.b.a` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.util.concurrent.Callable` @kind interface {
}
global `f.a.a.a.b.a` `@@f.a.a.a.b.a.f` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lf/a/a/a/b/a;.<clinit>:()V` @AccessFlag STATIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L1ce0a4.  v0:= new `f.a.a.a.b.a`;
  #L1ce0a8.  call `<init>`(v0) @signature `Lf/a/a/a/b/a;.<init>:()V` @kind direct;
  #L1ce0ae.  `@@f.a.a.a.b.a.f` @type ^`f.a.a.a.b.a` := v0 @kind object;
  #L1ce0b2.  return @kind void;
}
procedure `void` `<init>`(`f.a.a.a.b.a` v0 @kind this) @signature `Lf/a/a/a/b/a;.<init>:()V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1ce0c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ce0ca.  return @kind void;
}
procedure `java.lang.Object` `call`(`f.a.a.a.b.a` v1 @kind this) @signature `Lf/a/a/a/b/a;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1ce088.  call temp:= `a`() @signature `Lf/a/a/a/b/b;.a:()Lf/a/a/b/e;` @kind static;
  #L1ce08e.  v0:= temp @kind object;
  #L1ce090.  return v0 @kind object;
}
