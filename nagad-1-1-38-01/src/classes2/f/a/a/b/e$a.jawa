record `f.a.a.b.e$a` @kind class @AccessFlag FINAL extends `f.a.a.c.c` @kind interface, `java.lang.Runnable` @kind interface, `f.a.a.h.a` @kind interface {
  `java.lang.Runnable` `f.a.a.b.e$a.f` @AccessFlag FINAL;
  `f.a.a.b.e$b` `f.a.a.b.e$a.g` @AccessFlag FINAL;
  `java.lang.Thread` `f.a.a.b.e$a.h` @AccessFlag ;
}
procedure `void` `<init>`(`f.a.a.b.e$a` v0 @kind this, `java.lang.Runnable` v1 @kind object, `f.a.a.b.e$b` v2 @kind object) @signature `Lf/a/a/b/e$a;.<init>:(Ljava/lang/Runnable;Lf/a/a/b/e$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1ce5b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ce5ba.  v0.`f.a.a.b.e$a.f` @type ^`java.lang.Runnable` := v1 @kind object;
  #L1ce5be.  v0.`f.a.a.b.e$a.g` @type ^`f.a.a.b.e$b` := v2 @kind object;
  #L1ce5c2.  return @kind void;
}
procedure `void` `dispose`(`f.a.a.b.e$a` v2 @kind this) @signature `Lf/a/a/b/e$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ce5d4.  v0:= v2.`f.a.a.b.e$a.h` @type ^`java.lang.Thread` @kind object;
  #L1ce5d8.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1ce5de.  v1:= temp @kind object;
  #L1ce5e0.  if v0 != v1 then goto L1ce5fc;
  #L1ce5e4.  v0:= v2.`f.a.a.b.e$a.g` @type ^`f.a.a.b.e$b` @kind object;
  #L1ce5e8.  v1:= instanceof @variable v0 @type ^`f.a.a.e.g.e` @kind boolean;
  #L1ce5ec.  if v1 == 0 then goto L1ce5fc;
  #L1ce5f0.  v0:= (`f.a.a.e.g.e`) v0 @kind object;
  #L1ce5f4.  call `shutdown`(v0) @signature `Lf/a/a/e/g/e;.shutdown:()V` @kind virtual;
  #L1ce5fa.  goto L1ce606;
  #L1ce5fc.  v0:= v2.`f.a.a.b.e$a.g` @type ^`f.a.a.b.e$b` @kind object;
  #L1ce600.  call `dispose`(v0) @signature `Lf/a/a/c/c;.dispose:()V` @kind interface;
  #L1ce606.  return @kind void;
}
procedure `void` `run`(`f.a.a.b.e$a` v2 @kind this) @signature `Lf/a/a/b/e$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ce618.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1ce61e.  v0:= temp @kind object;
  #L1ce620.  v2.`f.a.a.b.e$a.h` @type ^`java.lang.Thread` := v0 @kind object;
  #L1ce624.  v0:= 0I;
  #L1ce626.  v1:= v2.`f.a.a.b.e$a.f` @type ^`java.lang.Runnable` @kind object;
  #L1ce62a.  call `run`(v1) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L1ce630.  call `dispose`(v2) @signature `Lf/a/a/b/e$a;.dispose:()V` @kind virtual;
  #L1ce636.  v2.`f.a.a.b.e$a.h` @type ^`java.lang.Thread` := v0 @kind object;
  #L1ce63a.  return @kind void;
  #L1ce63c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1ce63e.  call `dispose`(v2) @signature `Lf/a/a/b/e$a;.dispose:()V` @kind virtual;
  #L1ce644.  v2.`f.a.a.b.e$a.h` @type ^`java.lang.Thread` := v0 @kind object;
  #L1ce648.  throw v1;
  catch `java.lang.Throwable` @[L1ce626..L1ce630] goto L1ce63c;
}
