record `f.a.a.b.e` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<clinit>`() @signature `Lf/a/a/b/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ce724.  v0:= `@@java.util.concurrent.TimeUnit.MINUTES` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1ce728.  v1:= "rx3.scheduler.drift-tolerance" @kind object;
  #L1ce72c.  v2:= 15L;
  #L1ce730.  call temp:= `getLong`(v1, v2) @signature `Ljava/lang/Long;.getLong:(Ljava/lang/String;J)Ljava/lang/Long;` @kind static;
  #L1ce736.  v1:= temp @kind object;
  #L1ce738.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L1ce73e.  v1:= temp @kind wide;
  #L1ce740.  call temp:= `toNanos`(v0, v1) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L1ce746.  return @kind void;
}
procedure `void` `<init>`(`f.a.a.b.e` v0 @kind this) @signature `Lf/a/a/b/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1ce758.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ce75e.  return @kind void;
}
procedure `f.a.a.b.e$b` `createWorker`() @signature `Lf/a/a/b/e;.createWorker:()Lf/a/a/b/e$b;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `f.a.a.c.c` `scheduleDirect`(`f.a.a.b.e` v3 @kind this, `java.lang.Runnable` v4 @kind object) @signature `Lf/a/a/b/e;.scheduleDirect:(Ljava/lang/Runnable;)Lf/a/a/c/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1ce6cc.  v0:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1ce6d0.  v1:= 0L;
  #L1ce6d4.  call temp:= `scheduleDirect`(v3, v4, v1, v0) @signature `Lf/a/a/b/e;.scheduleDirect:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lf/a/a/c/c;` @kind virtual;
  #L1ce6da.  v4:= temp @kind object;
  #L1ce6dc.  return v4 @kind object;
}
procedure `f.a.a.c.c` `scheduleDirect`(`f.a.a.b.e` v2 @kind this, `java.lang.Runnable` v3 @kind object, `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object) @signature `Lf/a/a/b/e;.scheduleDirect:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lf/a/a/c/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ce6f0.  call temp:= `createWorker`(v2) @signature `Lf/a/a/b/e;.createWorker:()Lf/a/a/b/e$b;` @kind virtual;
  #L1ce6f6.  v0:= temp @kind object;
  #L1ce6f8.  call temp:= `onSchedule`(v3) @signature `Lf/a/a/g/a;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L1ce6fe.  v3:= temp @kind object;
  #L1ce700.  v1:= new `f.a.a.b.e$a`;
  #L1ce704.  call `<init>`(v1, v3, v0) @signature `Lf/a/a/b/e$a;.<init>:(Ljava/lang/Runnable;Lf/a/a/b/e$b;)V` @kind direct;
  #L1ce70a.  call temp:= `schedule`(v0, v1, v4, v6) @signature `Lf/a/a/b/e$b;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lf/a/a/c/c;` @kind virtual;
  #L1ce710.  return v1 @kind object;
}
