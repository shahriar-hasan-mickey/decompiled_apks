record `f.a.a.c.e` @kind class @AccessFlag ABSTRACT extends `java.util.concurrent.atomic.AtomicReference` @kind class, `f.a.a.c.c` @kind interface {
}
global `long` `@@f.a.a.c.e.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`f.a.a.c.e` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lf/a/a/c/e;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1cea0c.  v0:= "value is null" @kind object;
  #L1cea10.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1cea16.  v2:= temp @kind object;
  #L1cea18.  call `<init>`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1cea1e.  return @kind void;
}
procedure `void` `dispose`(`f.a.a.c.e` v1 @kind this) @signature `Lf/a/a/c/e;.dispose:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1cea30.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L1cea36.  v0:= temp @kind object;
  #L1cea38.  if v0 == 0 then goto L1cea50;
  #L1cea3c.  v0:= 0I;
  #L1cea3e.  call temp:= `getAndSet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1cea44.  v0:= temp @kind object;
  #L1cea46.  if v0 == 0 then goto L1cea50;
  #L1cea4a.  call `onDisposed`(v1, v0) @signature `Lf/a/a/c/e;.onDisposed:(Ljava/lang/Object;)V` @kind virtual;
  #L1cea50.  return @kind void;
}
procedure `boolean` `isDisposed`(`f.a.a.c.e` v1 @kind this) @signature `Lf/a/a/c/e;.isDisposed:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1ce9e8.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L1ce9ee.  v0:= temp @kind object;
  #L1ce9f0.  if v0 != 0 then goto L1ce9f8;
  #L1ce9f4.  v0:= 1I;
  #L1ce9f6.  goto L1ce9fa;
  #L1ce9f8.  v0:= 0I;
  #L1ce9fa.  return v0;
}
procedure `void` `onDisposed`(`java.lang.Object` v0 @kind object) @signature `Lf/a/a/c/e;.onDisposed:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
