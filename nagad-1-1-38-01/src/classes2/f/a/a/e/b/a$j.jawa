record `f.a.a.e.b.a$j` @kind class @AccessFlag FINAL extends `f.a.a.d.d` @kind interface {
}
procedure `void` `<init>`(`f.a.a.e.b.a$j` v0 @kind this) @signature `Lf/a/a/e/b/a$j;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1cf988.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1cf98e.  return @kind void;
}
procedure `void` `accept`(`f.a.a.e.b.a$j` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lf/a/a/e/b/a$j;.accept:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1cf9a0.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L1cf9a4.  call `accept`(v0, v1) @signature `Lf/a/a/e/b/a$j;.accept:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1cf9aa.  return @kind void;
}
procedure `void` `accept`(`f.a.a.e.b.a$j` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lf/a/a/e/b/a$j;.accept:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1cf9bc.  v0:= new `io.reactivex.rxjava3.exceptions.OnErrorNotImplementedException`;
  #L1cf9c0.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/exceptions/OnErrorNotImplementedException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1cf9c6.  call `onError`(v0) @signature `Lf/a/a/g/a;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L1cf9cc.  return @kind void;
}
