record `f.a.a.e.b.a$e` @kind class @AccessFlag FINAL extends `f.a.a.d.d` @kind interface {
}
procedure `void` `<init>`(`f.a.a.e.b.a$e` v0 @kind this) @signature `Lf/a/a/e/b/a$e;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1cf85c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1cf862.  return @kind void;
}
procedure `void` `accept`(`f.a.a.e.b.a$e` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lf/a/a/e/b/a$e;.accept:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1cf874.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L1cf878.  call `accept`(v0, v1) @signature `Lf/a/a/e/b/a$e;.accept:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1cf87e.  return @kind void;
}
procedure `void` `accept`(`f.a.a.e.b.a$e` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lf/a/a/e/b/a$e;.accept:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L1cf890.  call `onError`(v1) @signature `Lf/a/a/g/a;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L1cf896.  return @kind void;
}
