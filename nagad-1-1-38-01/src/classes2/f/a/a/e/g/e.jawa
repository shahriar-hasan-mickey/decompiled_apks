record `f.a.a.e.g.e` @kind class @AccessFlag PUBLIC extends `f.a.a.b.e$b` @kind class, `f.a.a.c.c` @kind interface {
  `java.util.concurrent.ScheduledExecutorService` `f.a.a.e.g.e.f` @AccessFlag PRIVATE_FINAL;
  `boolean` `f.a.a.e.g.e.g` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`f.a.a.e.g.e` v0 @kind this, `java.util.concurrent.ThreadFactory` v1 @kind object) @signature `Lf/a/a/e/g/e;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1d15d4.  call `<init>`(v0) @signature `Lf/a/a/b/e$b;.<init>:()V` @kind direct;
  #L1d15da.  call temp:= `create`(v1) @signature `Lf/a/a/e/g/k;.create:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L1d15e0.  v1:= temp @kind object;
  #L1d15e2.  v0.`f.a.a.e.g.e.f` @type ^`java.util.concurrent.ScheduledExecutorService` := v1 @kind object;
  #L1d15e6.  return @kind void;
}
procedure `void` `dispose`(`f.a.a.e.g.e` v1 @kind this) @signature `Lf/a/a/e/g/e;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d15f8.  v0:= v1.`f.a.a.e.g.e.g` @type ^`boolean` @kind boolean;
  #L1d15fc.  if v0 != 0 then goto L1d1610;
  #L1d1600.  v0:= 1I;
  #L1d1602.  v1.`f.a.a.e.g.e.g` @type ^`boolean` := v0 @kind boolean;
  #L1d1606.  v0:= v1.`f.a.a.e.g.e.f` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L1d160a.  call temp:= `shutdownNow`(v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdownNow:()Ljava/util/List;` @kind interface;
  #L1d1610.  return @kind void;
}
procedure `f.a.a.c.c` `schedule`(`f.a.a.e.g.e` v3 @kind this, `java.lang.Runnable` v4 @kind object) @signature `Lf/a/a/e/g/e;.schedule:(Ljava/lang/Runnable;)Lf/a/a/c/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1d1488.  v0:= 0L;
  #L1d148c.  v2:= 0I;
  #L1d148e.  call temp:= `schedule`(v3, v4, v0, v2) @signature `Lf/a/a/e/g/e;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lf/a/a/c/c;` @kind virtual;
  #L1d1494.  v4:= temp @kind object;
  #L1d1496.  return v4 @kind object;
}
procedure `f.a.a.c.c` `schedule`(`f.a.a.e.g.e` v6 @kind this, `java.lang.Runnable` v7 @kind object, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object) @signature `Lf/a/a/e/g/e;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lf/a/a/c/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1d14a8.  v0:= v6.`f.a.a.e.g.e.g` @type ^`boolean` @kind boolean;
  #L1d14ac.  if v0 == 0 then goto L1d14b6;
  #L1d14b0.  v7:= `@@f.a.a.e.a.b.f` @type ^`f.a.a.e.a.b` @kind object;
  #L1d14b4.  return v7 @kind object;
  #L1d14b6.  v5:= 0I;
  #L1d14b8.  v0:= v6 @kind object;
  #L1d14ba.  v1:= v7 @kind object;
  #L1d14bc.  v2:= v8 @kind wide;
  #L1d14be.  v4:= v10 @kind object;
  #L1d14c0.  call temp:= `scheduleActual`(v0, v1, v2, v4, v5) @signature `Lf/a/a/e/g/e;.scheduleActual:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;Lf/a/a/c/d;)Lf/a/a/e/g/i;` @kind virtual;
  #L1d14c6.  v7:= temp @kind object;
  #L1d14c8.  return v7 @kind object;
}
procedure `f.a.a.e.g.i` `scheduleActual`(`f.a.a.e.g.e` v3 @kind this, `java.lang.Runnable` v4 @kind object, `long` v5 , `java.util.concurrent.TimeUnit` v7 @kind object, `f.a.a.c.d` v8 @kind object) @signature `Lf/a/a/e/g/e;.scheduleActual:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;Lf/a/a/c/d;)Lf/a/a/e/g/i;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1d154c.  call temp:= `onSchedule`(v4) @signature `Lf/a/a/g/a;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L1d1552.  v4:= temp @kind object;
  #L1d1554.  v0:= new `f.a.a.e.g.i`;
  #L1d1558.  call `<init>`(v0, v4, v8) @signature `Lf/a/a/e/g/i;.<init>:(Ljava/lang/Runnable;Lf/a/a/c/d;)V` @kind direct;
  #L1d155e.  if v8 == 0 then goto L1d1570;
  #L1d1562.  call temp:= `add`(v8, v0) @signature `Lf/a/a/c/d;.add:(Lf/a/a/c/c;)Z` @kind interface;
  #L1d1568.  v4:= temp;
  #L1d156a.  if v4 != 0 then goto L1d1570;
  #L1d156e.  return v0 @kind object;
  #L1d1570.  v1:= 0L;
  #L1d1574.  v4:= lcmp(v5, v1);
  #L1d1578.  if v4 > 0 then goto L1d158a;
  #L1d157c.  v4:= v3.`f.a.a.e.g.e.f` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L1d1580.  call temp:= `submit`(v4, v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind interface;
  #L1d1586.  v4:= temp @kind object;
  #L1d1588.  goto L1d1596;
  #L1d158a.  v4:= v3.`f.a.a.e.g.e.f` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L1d158e.  call temp:= `schedule`(v4, v0, v5, v7) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L1d1594.  v4:= temp @kind object;
  #L1d1596.  call `setFuture`(v0, v4) @signature `Lf/a/a/e/g/i;.setFuture:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L1d159c.  goto L1d15b0;
  #L1d159e.  v4:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L1d15a0.  if v8 == 0 then goto L1d15aa;
  #L1d15a4.  call temp:= `remove`(v8, v0) @signature `Lf/a/a/c/d;.remove:(Lf/a/a/c/c;)Z` @kind interface;
  #L1d15aa.  call `onError`(v4) @signature `Lf/a/a/g/a;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L1d15b0.  return v0 @kind object;
  catch `java.util.concurrent.RejectedExecutionException` @[L1d157c..L1d159c] goto L1d159e;
}
procedure `f.a.a.c.c` `scheduleDirect`(`f.a.a.e.g.e` v3 @kind this, `java.lang.Runnable` v4 @kind object, `long` v5 , `java.util.concurrent.TimeUnit` v7 @kind object) @signature `Lf/a/a/e/g/e;.scheduleDirect:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lf/a/a/c/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1d14dc.  v0:= new `f.a.a.e.g.h`;
  #L1d14e0.  call temp:= `onSchedule`(v4) @signature `Lf/a/a/g/a;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L1d14e6.  v4:= temp @kind object;
  #L1d14e8.  call `<init>`(v0, v4) @signature `Lf/a/a/e/g/h;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L1d14ee.  v1:= 0L;
  #L1d14f2.  v4:= lcmp(v5, v1);
  #L1d14f6.  if v4 > 0 then goto L1d1508;
  #L1d14fa.  v4:= v3.`f.a.a.e.g.e.f` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L1d14fe.  call temp:= `submit`(v4, v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind interface;
  #L1d1504.  v4:= temp @kind object;
  #L1d1506.  goto L1d1514;
  #L1d1508.  v4:= v3.`f.a.a.e.g.e.f` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L1d150c.  call temp:= `schedule`(v4, v0, v5, v7) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L1d1512.  v4:= temp @kind object;
  #L1d1514.  call `setFuture`(v0, v4) @signature `Lf/a/a/e/g/a;.setFuture:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L1d151a.  return v0 @kind object;
  #L1d151c.  v4:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L1d151e.  call `onError`(v4) @signature `Lf/a/a/g/a;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L1d1524.  v4:= `@@f.a.a.e.a.b.f` @type ^`f.a.a.e.a.b` @kind object;
  #L1d1528.  return v4 @kind object;
  catch `java.util.concurrent.RejectedExecutionException` @[L1d14fa..L1d151a] goto L1d151c;
}
procedure `void` `shutdown`(`f.a.a.e.g.e` v1 @kind this) @signature `Lf/a/a/e/g/e;.shutdown:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d1624.  v0:= v1.`f.a.a.e.g.e.g` @type ^`boolean` @kind boolean;
  #L1d1628.  if v0 != 0 then goto L1d163c;
  #L1d162c.  v0:= 1I;
  #L1d162e.  v1.`f.a.a.e.g.e.g` @type ^`boolean` := v0 @kind boolean;
  #L1d1632.  v0:= v1.`f.a.a.e.g.e.f` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L1d1636.  call `shutdown`(v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdown:()V` @kind interface;
  #L1d163c.  return @kind void;
}
