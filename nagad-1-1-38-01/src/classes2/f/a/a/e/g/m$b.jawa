record `f.a.a.e.g.m$b` @kind class @AccessFlag FINAL extends `java.lang.Comparable` @kind interface {
  `java.lang.Runnable` `f.a.a.e.g.m$b.f` @AccessFlag FINAL;
  `long` `f.a.a.e.g.m$b.g` @AccessFlag FINAL;
  `int` `f.a.a.e.g.m$b.h` @AccessFlag FINAL;
  `boolean` `f.a.a.e.g.m$b.i` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`f.a.a.e.g.m$b` v0 @kind this, `java.lang.Runnable` v1 @kind object, `java.lang.Long` v2 @kind object, `int` v3 ) @signature `Lf/a/a/e/g/m$b;.<init>:(Ljava/lang/Runnable;Ljava/lang/Long;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1d20dc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d20e2.  v0.`f.a.a.e.g.m$b.f` @type ^`java.lang.Runnable` := v1 @kind object;
  #L1d20e6.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L1d20ec.  v1:= temp @kind wide;
  #L1d20ee.  v0.`f.a.a.e.g.m$b.g` @type ^`long` := v1 @kind wide;
  #L1d20f2.  v0.`f.a.a.e.g.m$b.h` @type ^`int` := v3;
  #L1d20f6.  return @kind void;
}
procedure `int` `compareTo`(`f.a.a.e.g.m$b` v4 @kind this, `f.a.a.e.g.m$b` v5 @kind object) @signature `Lf/a/a/e/g/m$b;.compareTo:(Lf/a/a/e/g/m$b;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1d2084.  v0:= v4.`f.a.a.e.g.m$b.g` @type ^`long` @kind wide;
  #L1d2088.  v2:= v5.`f.a.a.e.g.m$b.g` @type ^`long` @kind wide;
  #L1d208c.  call temp:= `compare`(v0, v2) @signature `Ljava/lang/Long;.compare:(JJ)I` @kind static;
  #L1d2092.  v0:= temp;
  #L1d2094.  if v0 != 0 then goto L1d20aa;
  #L1d2098.  v0:= v4.`f.a.a.e.g.m$b.h` @type ^`int`;
  #L1d209c.  v5:= v5.`f.a.a.e.g.m$b.h` @type ^`int`;
  #L1d20a0.  call temp:= `compare`(v0, v5) @signature `Ljava/lang/Integer;.compare:(II)I` @kind static;
  #L1d20a6.  v5:= temp;
  #L1d20a8.  return v5;
  #L1d20aa.  return v0;
}
procedure `int` `compareTo`(`f.a.a.e.g.m$b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lf/a/a/e/g/m$b;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1d20bc.  v1:= (`f.a.a.e.g.m$b`) v1 @kind object;
  #L1d20c0.  call temp:= `compareTo`(v0, v1) @signature `Lf/a/a/e/g/m$b;.compareTo:(Lf/a/a/e/g/m$b;)I` @kind virtual;
  #L1d20c6.  v1:= temp;
  #L1d20c8.  return v1;
}
