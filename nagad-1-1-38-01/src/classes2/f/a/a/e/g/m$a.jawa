record `f.a.a.e.g.m$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `java.lang.Runnable` `f.a.a.e.g.m$a.f` @AccessFlag PRIVATE_FINAL;
  `f.a.a.e.g.m$c` `f.a.a.e.g.m$a.g` @AccessFlag PRIVATE_FINAL;
  `long` `f.a.a.e.g.m$a.h` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`f.a.a.e.g.m$a` v0 @kind this, `java.lang.Runnable` v1 @kind object, `f.a.a.e.g.m$c` v2 @kind object, `long` v3 ) @signature `Lf/a/a/e/g/m$a;.<init>:(Ljava/lang/Runnable;Lf/a/a/e/g/m$c;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1d1fdc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d1fe2.  v0.`f.a.a.e.g.m$a.f` @type ^`java.lang.Runnable` := v1 @kind object;
  #L1d1fe6.  v0.`f.a.a.e.g.m$a.g` @type ^`f.a.a.e.g.m$c` := v2 @kind object;
  #L1d1fea.  v0.`f.a.a.e.g.m$a.h` @type ^`long` := v3 @kind wide;
  #L1d1fee.  return @kind void;
}
procedure `void` `run`(`f.a.a.e.g.m$a` v5 @kind this) @signature `Lf/a/a/e/g/m$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1d2000.  v0:= v5.`f.a.a.e.g.m$a.g` @type ^`f.a.a.e.g.m$c` @kind object;
  #L1d2004.  v0:= v0.`f.a.a.e.g.m$c.i` @type ^`boolean` @kind boolean;
  #L1d2008.  if v0 != 0 then goto L1d2060;
  #L1d200c.  v0:= v5.`f.a.a.e.g.m$a.g` @type ^`f.a.a.e.g.m$c` @kind object;
  #L1d2010.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1d2014.  call temp:= `now`(v0, v1) @signature `Lf/a/a/b/e$b;.now:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L1d201a.  v0:= temp @kind wide;
  #L1d201c.  v2:= v5.`f.a.a.e.g.m$a.h` @type ^`long` @kind wide;
  #L1d2020.  v4:= lcmp(v2, v0);
  #L1d2024.  if v4 <= 0 then goto L1d204a;
  #L1d2028.  v2:= v2 - v0 @kind long;
  #L1d202a.  call `sleep`(v2) @signature `Ljava/lang/Thread;.sleep:(J)V` @kind static;
  #L1d2030.  goto L1d204a;
  #L1d2032.  v0:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L1d2034.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1d203a.  v1:= temp @kind object;
  #L1d203c.  call `interrupt`(v1) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L1d2042.  call `onError`(v0) @signature `Lf/a/a/g/a;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L1d2048.  return @kind void;
  #L1d204a.  v0:= v5.`f.a.a.e.g.m$a.g` @type ^`f.a.a.e.g.m$c` @kind object;
  #L1d204e.  v0:= v0.`f.a.a.e.g.m$c.i` @type ^`boolean` @kind boolean;
  #L1d2052.  if v0 != 0 then goto L1d2060;
  #L1d2056.  v0:= v5.`f.a.a.e.g.m$a.f` @type ^`java.lang.Runnable` @kind object;
  #L1d205a.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L1d2060.  return @kind void;
  catch `java.lang.InterruptedException` @[L1d202a..L1d2030] goto L1d2032;
}
