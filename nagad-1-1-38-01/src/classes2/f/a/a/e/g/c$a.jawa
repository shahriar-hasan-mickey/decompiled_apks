record `f.a.a.e.g.c$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `long` `f.a.a.e.g.c$a.f` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ConcurrentLinkedQueue` `f.a.a.e.g.c$a.g` @AccessFlag PRIVATE_FINAL;
  `f.a.a.c.a` `f.a.a.e.g.c$a.h` @AccessFlag FINAL;
  `java.util.concurrent.ScheduledExecutorService` `f.a.a.e.g.c$a.i` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.Future` `f.a.a.e.g.c$a.j` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ThreadFactory` `f.a.a.e.g.c$a.k` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`f.a.a.e.g.c$a` v7 @kind this, `long` v8 , `java.util.concurrent.TimeUnit` v10 @kind object, `java.util.concurrent.ThreadFactory` v11 @kind object) @signature `Lf/a/a/e/g/c$a;.<init>:(JLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/ThreadFactory;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1d0fc0.  call `<init>`(v7) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d0fc6.  if v10 == 0 then goto L1d0fd4;
  #L1d0fca.  call temp:= `toNanos`(v10, v8) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L1d0fd0.  v8:= temp @kind wide;
  #L1d0fd2.  goto L1d0fd8;
  #L1d0fd4.  v8:= 0L;
  #L1d0fd8.  v7.`f.a.a.e.g.c$a.f` @type ^`long` := v8 @kind wide;
  #L1d0fdc.  v8:= new `java.util.concurrent.ConcurrentLinkedQueue`;
  #L1d0fe0.  call `<init>`(v8) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.<init>:()V` @kind direct;
  #L1d0fe6.  v7.`f.a.a.e.g.c$a.g` @type ^`java.util.concurrent.ConcurrentLinkedQueue` := v8 @kind object;
  #L1d0fea.  v8:= new `f.a.a.c.a`;
  #L1d0fee.  call `<init>`(v8) @signature `Lf/a/a/c/a;.<init>:()V` @kind direct;
  #L1d0ff4.  v7.`f.a.a.e.g.c$a.h` @type ^`f.a.a.c.a` := v8 @kind object;
  #L1d0ff8.  v7.`f.a.a.e.g.c$a.k` @type ^`java.util.concurrent.ThreadFactory` := v11 @kind object;
  #L1d0ffc.  v8:= 0I;
  #L1d0ffe.  if v10 == 0 then goto L1d1028;
  #L1d1002.  v8:= 1I;
  #L1d1004.  v9:= `@@f.a.a.e.g.c.d` @type ^`f.a.a.e.g.g` @kind object;
  #L1d1008.  call temp:= `newScheduledThreadPool`(v8, v9) @signature `Ljava/util/concurrent/Executors;.newScheduledThreadPool:(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L1d100e.  v8:= temp @kind object;
  #L1d1010.  v4:= v7.`f.a.a.e.g.c$a.f` @type ^`long` @kind wide;
  #L1d1014.  v6:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1d1018.  v0:= v8 @kind object;
  #L1d101a.  v1:= v7 @kind object;
  #L1d101c.  v2:= v4 @kind wide;
  #L1d101e.  call temp:= `scheduleWithFixedDelay`(v0, v1, v2, v4, v6) @signature `Ljava/util/concurrent/ScheduledExecutorService;.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L1d1024.  v9:= temp @kind object;
  #L1d1026.  goto L1d102a;
  #L1d1028.  v9:= v8 @kind object;
  #L1d102a.  v7.`f.a.a.e.g.c$a.i` @type ^`java.util.concurrent.ScheduledExecutorService` := v8 @kind object;
  #L1d102e.  v7.`f.a.a.e.g.c$a.j` @type ^`java.util.concurrent.Future` := v9 @kind object;
  #L1d1032.  return @kind void;
}
procedure `void` `a`(`java.util.concurrent.ConcurrentLinkedQueue` v7 @kind object, `f.a.a.c.a` v8 @kind object) @signature `Lf/a/a/e/g/c$a;.a:(Ljava/util/concurrent/ConcurrentLinkedQueue;Lf/a/a/c/a;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1d1044.  call temp:= `isEmpty`(v7) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.isEmpty:()Z` @kind virtual;
  #L1d104a.  v0:= temp;
  #L1d104c.  if v0 != 0 then goto L1d109c;
  #L1d1050.  call temp:= `c`() @signature `Lf/a/a/e/g/c$a;.c:()J` @kind static;
  #L1d1056.  v0:= temp @kind wide;
  #L1d1058.  call temp:= `iterator`(v7) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1d105e.  v2:= temp @kind object;
  #L1d1060.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d1066.  v3:= temp;
  #L1d1068.  if v3 == 0 then goto L1d109c;
  #L1d106c.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d1072.  v3:= temp @kind object;
  #L1d1074.  v3:= (`f.a.a.e.g.c$c`) v3 @kind object;
  #L1d1078.  call temp:= `getExpirationTime`(v3) @signature `Lf/a/a/e/g/c$c;.getExpirationTime:()J` @kind virtual;
  #L1d107e.  v4:= temp @kind wide;
  #L1d1080.  v6:= lcmp(v4, v0);
  #L1d1084.  if v6 > 0 then goto L1d109c;
  #L1d1088.  call temp:= `remove`(v7, v3) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L1d108e.  v4:= temp;
  #L1d1090.  if v4 == 0 then goto L1d1060;
  #L1d1094.  call temp:= `remove`(v8, v3) @signature `Lf/a/a/c/a;.remove:(Lf/a/a/c/c;)Z` @kind virtual;
  #L1d109a.  goto L1d1060;
  #L1d109c.  return @kind void;
}
procedure `long` `c`() @signature `Lf/a/a/e/g/c$a;.c:()J` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1d0fa4.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L1d0faa.  v0:= temp @kind wide;
  #L1d0fac.  return v0 @kind wide;
}
procedure `f.a.a.e.g.c$c` `a`(`f.a.a.e.g.c$a` v2 @kind this) @signature `Lf/a/a/e/g/c$a;.a:()Lf/a/a/e/g/c$c;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1d0f3c.  v0:= v2.`f.a.a.e.g.c$a.h` @type ^`f.a.a.c.a` @kind object;
  #L1d0f40.  call temp:= `isDisposed`(v0) @signature `Lf/a/a/c/a;.isDisposed:()Z` @kind virtual;
  #L1d0f46.  v0:= temp;
  #L1d0f48.  if v0 == 0 then goto L1d0f52;
  #L1d0f4c.  v0:= `@@f.a.a.e.g.c.g` @type ^`f.a.a.e.g.c$c` @kind object;
  #L1d0f50.  return v0 @kind object;
  #L1d0f52.  v0:= v2.`f.a.a.e.g.c$a.g` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L1d0f56.  call temp:= `isEmpty`(v0) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.isEmpty:()Z` @kind virtual;
  #L1d0f5c.  v0:= temp;
  #L1d0f5e.  if v0 != 0 then goto L1d0f78;
  #L1d0f62.  v0:= v2.`f.a.a.e.g.c$a.g` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L1d0f66.  call temp:= `poll`(v0) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L1d0f6c.  v0:= temp @kind object;
  #L1d0f6e.  v0:= (`f.a.a.e.g.c$c`) v0 @kind object;
  #L1d0f72.  if v0 == 0 then goto L1d0f52;
  #L1d0f76.  return v0 @kind object;
  #L1d0f78.  v0:= new `f.a.a.e.g.c$c`;
  #L1d0f7c.  v1:= v2.`f.a.a.e.g.c$a.k` @type ^`java.util.concurrent.ThreadFactory` @kind object;
  #L1d0f80.  call `<init>`(v0, v1) @signature `Lf/a/a/e/g/c$c;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L1d0f86.  v1:= v2.`f.a.a.e.g.c$a.h` @type ^`f.a.a.c.a` @kind object;
  #L1d0f8a.  call temp:= `add`(v1, v0) @signature `Lf/a/a/c/a;.add:(Lf/a/a/c/c;)Z` @kind virtual;
  #L1d0f90.  return v0 @kind object;
}
procedure `void` `a`(`f.a.a.e.g.c$a` v4 @kind this, `f.a.a.e.g.c$c` v5 @kind object) @signature `Lf/a/a/e/g/c$a;.a:(Lf/a/a/e/g/c$c;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1d10b0.  call temp:= `c`() @signature `Lf/a/a/e/g/c$a;.c:()J` @kind static;
  #L1d10b6.  v0:= temp @kind wide;
  #L1d10b8.  v2:= v4.`f.a.a.e.g.c$a.f` @type ^`long` @kind wide;
  #L1d10bc.  v0:= v0 + v2 @kind long;
  #L1d10be.  call `setExpirationTime`(v5, v0) @signature `Lf/a/a/e/g/c$c;.setExpirationTime:(J)V` @kind virtual;
  #L1d10c4.  v0:= v4.`f.a.a.e.g.c$a.g` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L1d10c8.  call temp:= `offer`(v0, v5) @signature `Ljava/util/concurrent/ConcurrentLinkedQueue;.offer:(Ljava/lang/Object;)Z` @kind virtual;
  #L1d10ce.  return @kind void;
}
procedure `void` `b`(`f.a.a.e.g.c$a` v2 @kind this) @signature `Lf/a/a/e/g/c$a;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1d1100.  v0:= v2.`f.a.a.e.g.c$a.h` @type ^`f.a.a.c.a` @kind object;
  #L1d1104.  call `dispose`(v0) @signature `Lf/a/a/c/a;.dispose:()V` @kind virtual;
  #L1d110a.  v0:= v2.`f.a.a.e.g.c$a.j` @type ^`java.util.concurrent.Future` @kind object;
  #L1d110e.  if v0 == 0 then goto L1d111a;
  #L1d1112.  v1:= 1I;
  #L1d1114.  call temp:= `cancel`(v0, v1) @signature `Ljava/util/concurrent/Future;.cancel:(Z)Z` @kind interface;
  #L1d111a.  v0:= v2.`f.a.a.e.g.c$a.i` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L1d111e.  if v0 == 0 then goto L1d1128;
  #L1d1122.  call temp:= `shutdownNow`(v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdownNow:()Ljava/util/List;` @kind interface;
  #L1d1128.  return @kind void;
}
procedure `void` `run`(`f.a.a.e.g.c$a` v2 @kind this) @signature `Lf/a/a/e/g/c$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d10e0.  v0:= v2.`f.a.a.e.g.c$a.g` @type ^`java.util.concurrent.ConcurrentLinkedQueue` @kind object;
  #L1d10e4.  v1:= v2.`f.a.a.e.g.c$a.h` @type ^`f.a.a.c.a` @kind object;
  #L1d10e8.  call `a`(v0, v1) @signature `Lf/a/a/e/g/c$a;.a:(Ljava/util/concurrent/ConcurrentLinkedQueue;Lf/a/a/c/a;)V` @kind static;
  #L1d10ee.  return @kind void;
}
