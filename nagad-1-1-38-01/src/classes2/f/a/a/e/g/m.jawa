record `f.a.a.e.g.m` @kind class @AccessFlag PUBLIC_FINAL extends `f.a.a.b.e` @kind class {
}
global `f.a.a.e.g.m` `@@f.a.a.e.g.m.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lf/a/a/e/g/m;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1d2384.  v0:= new `f.a.a.e.g.m`;
  #L1d2388.  call `<init>`(v0) @signature `Lf/a/a/e/g/m;.<init>:()V` @kind direct;
  #L1d238e.  `@@f.a.a.e.g.m.a` @type ^`f.a.a.e.g.m` := v0 @kind object;
  #L1d2392.  return @kind void;
}
procedure `void` `<init>`(`f.a.a.e.g.m` v0 @kind this) @signature `Lf/a/a/e/g/m;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1d23a4.  call `<init>`(v0) @signature `Lf/a/a/b/e;.<init>:()V` @kind direct;
  #L1d23aa.  return @kind void;
}
procedure `f.a.a.e.g.m` `instance`() @signature `Lf/a/a/e/g/m;.instance:()Lf/a/a/e/g/m;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d236c.  v0:= `@@f.a.a.e.g.m.a` @type ^`f.a.a.e.g.m` @kind object;
  #L1d2370.  return v0 @kind object;
}
procedure `f.a.a.b.e$b` `createWorker`(`f.a.a.e.g.m` v1 @kind this) @signature `Lf/a/a/e/g/m;.createWorker:()Lf/a/a/b/e$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d22d8.  v0:= new `f.a.a.e.g.m$c`;
  #L1d22dc.  call `<init>`(v0) @signature `Lf/a/a/e/g/m$c;.<init>:()V` @kind direct;
  #L1d22e2.  return v0 @kind object;
}
procedure `f.a.a.c.c` `scheduleDirect`(`f.a.a.e.g.m` v0 @kind this, `java.lang.Runnable` v1 @kind object) @signature `Lf/a/a/e/g/m;.scheduleDirect:(Ljava/lang/Runnable;)Lf/a/a/c/c;` @AccessFlag PUBLIC {
    temp;

  #L1d22f4.  call temp:= `onSchedule`(v1) @signature `Lf/a/a/g/a;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L1d22fa.  v1:= temp @kind object;
  #L1d22fc.  call `run`(v1) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L1d2302.  v1:= `@@f.a.a.e.a.b.f` @type ^`f.a.a.e.a.b` @kind object;
  #L1d2306.  return v1 @kind object;
}
procedure `f.a.a.c.c` `scheduleDirect`(`f.a.a.e.g.m` v0 @kind this, `java.lang.Runnable` v1 @kind object, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lf/a/a/e/g/m;.scheduleDirect:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lf/a/a/c/c;` @AccessFlag PUBLIC {
    temp;

  #L1d2318.  call `sleep`(v4, v2) @signature `Ljava/util/concurrent/TimeUnit;.sleep:(J)V` @kind virtual;
  #L1d231e.  call temp:= `onSchedule`(v1) @signature `Lf/a/a/g/a;.onSchedule:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L1d2324.  v1:= temp @kind object;
  #L1d2326.  call `run`(v1) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L1d232c.  goto L1d2344;
  #L1d232e.  v1:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L1d2330.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1d2336.  v2:= temp @kind object;
  #L1d2338.  call `interrupt`(v2) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L1d233e.  call `onError`(v1) @signature `Lf/a/a/g/a;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L1d2344.  v1:= `@@f.a.a.e.a.b.f` @type ^`f.a.a.e.a.b` @kind object;
  #L1d2348.  return v1 @kind object;
  catch `java.lang.InterruptedException` @[L1d2318..L1d232c] goto L1d232e;
}
