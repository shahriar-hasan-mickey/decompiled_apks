record `f.a.a.e.g.h` @kind class @AccessFlag PUBLIC_FINAL extends `f.a.a.e.g.a` @kind class, `java.util.concurrent.Callable` @kind interface {
}
global `long` `@@f.a.a.e.g.h.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`f.a.a.e.g.h` v0 @kind this, `java.lang.Runnable` v1 @kind object) @signature `Lf/a/a/e/g/h;.<init>:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1d17ec.  call `<init>`(v0, v1) @signature `Lf/a/a/e/g/a;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L1d17f2.  return @kind void;
}
procedure `java.lang.Object` `call`(`f.a.a.e.g.h` v1 @kind this) @signature `Lf/a/a/e/g/h;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1d1778.  call temp:= `call`(v1) @signature `Lf/a/a/e/g/h;.call:()Ljava/lang/Void;` @kind virtual;
  #L1d177e.  v0:= temp @kind object;
  #L1d1780.  return v0 @kind object;
}
procedure `java.lang.Void` `call`(`f.a.a.e.g.h` v3 @kind this) @signature `Lf/a/a/e/g/h;.call:()Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1d1794.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1d179a.  v0:= temp @kind object;
  #L1d179c.  v3.`f.a.a.e.g.a.g` @type ^`java.lang.Thread` := v0 @kind object;
  #L1d17a0.  v0:= 0I;
  #L1d17a2.  v1:= v3.`f.a.a.e.g.a.f` @type ^`java.lang.Runnable` @kind object;
  #L1d17a6.  call `run`(v1) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L1d17ac.  v1:= `@@f.a.a.e.g.a.h` @type ^`java.util.concurrent.FutureTask` @kind object;
  #L1d17b0.  call `lazySet`(v3, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L1d17b6.  v3.`f.a.a.e.g.a.g` @type ^`java.lang.Thread` := v0 @kind object;
  #L1d17ba.  return v0 @kind object;
  #L1d17bc.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1d17be.  v2:= `@@f.a.a.e.g.a.h` @type ^`java.util.concurrent.FutureTask` @kind object;
  #L1d17c2.  call `lazySet`(v3, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L1d17c8.  v3.`f.a.a.e.g.a.g` @type ^`java.lang.Thread` := v0 @kind object;
  #L1d17cc.  throw v1;
  catch `java.lang.Throwable` @[L1d17a2..L1d17ac] goto L1d17bc;
}
