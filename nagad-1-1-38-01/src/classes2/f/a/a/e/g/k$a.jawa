record `f.a.a.e.g.k$a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
}
procedure `void` `<init>`(`f.a.a.e.g.k$a` v0 @kind this) @signature `Lf/a/a/e/g/k$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1d1aac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d1ab2.  return @kind void;
}
procedure `void` `run`(`f.a.a.e.g.k$a` v3 @kind this) @signature `Lf/a/a/e/g/k$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1d1ac4.  v0:= new `java.util.ArrayList`;
  #L1d1ac8.  v1:= `@@f.a.a.e.g.k.d` @type ^`java.util.Map` @kind object;
  #L1d1acc.  call temp:= `keySet`(v1) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L1d1ad2.  v1:= temp @kind object;
  #L1d1ad4.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L1d1ada.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1d1ae0.  v0:= temp @kind object;
  #L1d1ae2.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d1ae8.  v1:= temp;
  #L1d1aea.  if v1 == 0 then goto L1d1b1a;
  #L1d1aee.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d1af4.  v1:= temp @kind object;
  #L1d1af6.  v1:= (`java.util.concurrent.ScheduledThreadPoolExecutor`) v1 @kind object;
  #L1d1afa.  call temp:= `isShutdown`(v1) @signature `Ljava/util/concurrent/ScheduledThreadPoolExecutor;.isShutdown:()Z` @kind virtual;
  #L1d1b00.  v2:= temp;
  #L1d1b02.  if v2 == 0 then goto L1d1b12;
  #L1d1b06.  v2:= `@@f.a.a.e.g.k.d` @type ^`java.util.Map` @kind object;
  #L1d1b0a.  call temp:= `remove`(v2, v1) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d1b10.  goto L1d1ae2;
  #L1d1b12.  call `purge`(v1) @signature `Ljava/util/concurrent/ScheduledThreadPoolExecutor;.purge:()V` @kind virtual;
  #L1d1b18.  goto L1d1ae2;
  #L1d1b1a.  return @kind void;
}
