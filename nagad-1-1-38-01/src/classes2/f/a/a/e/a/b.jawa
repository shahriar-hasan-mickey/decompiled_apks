record `f.a.a.e.a.b` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `f.a.a.e.c.b` @kind interface {
}
global `f.a.a.e.a.b` `@@f.a.a.e.a.b.f` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `f.a.a.e.a.b` `@@f.a.a.e.a.b.g` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `f.a.a.e.a.b`[] `@@f.a.a.e.a.b.h` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lf/a/a/e/a/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1cf4c8.  v0:= new `f.a.a.e.a.b`;
  #L1cf4cc.  v1:= 0I;
  #L1cf4ce.  v2:= "INSTANCE" @kind object;
  #L1cf4d2.  call `<init>`(v0, v2, v1) @signature `Lf/a/a/e/a/b;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1cf4d8.  `@@f.a.a.e.a.b.f` @type ^`f.a.a.e.a.b` := v0 @kind object;
  #L1cf4dc.  v0:= new `f.a.a.e.a.b`;
  #L1cf4e0.  v2:= 1I;
  #L1cf4e2.  v3:= "NEVER" @kind object;
  #L1cf4e6.  call `<init>`(v0, v3, v2) @signature `Lf/a/a/e/a/b;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1cf4ec.  `@@f.a.a.e.a.b.g` @type ^`f.a.a.e.a.b` := v0 @kind object;
  #L1cf4f0.  v0:= 2I;
  #L1cf4f2.  v0:= new `f.a.a.e.a.b`[v0];
  #L1cf4f6.  v3:= `@@f.a.a.e.a.b.f` @type ^`f.a.a.e.a.b` @kind object;
  #L1cf4fa.  v0[v1]:= v3 @kind object;
  #L1cf4fe.  v1:= `@@f.a.a.e.a.b.g` @type ^`f.a.a.e.a.b` @kind object;
  #L1cf502.  v0[v2]:= v1 @kind object;
  #L1cf506.  `@@f.a.a.e.a.b.h` @type ^`f.a.a.e.a.b`[] := v0 @kind object;
  #L1cf50a.  return @kind void;
}
procedure `void` `<init>`(`f.a.a.e.a.b` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lf/a/a/e/a/b;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1cf51c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1cf522.  return @kind void;
}
procedure `f.a.a.e.a.b` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lf/a/a/e/a/b;.valueOf:(Ljava/lang/String;)Lf/a/a/e/a/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1cf46c.  v0:= constclass @type ^`f.a.a.e.a.b` @kind object;
  #L1cf470.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L1cf476.  v1:= temp @kind object;
  #L1cf478.  v1:= (`f.a.a.e.a.b`) v1 @kind object;
  #L1cf47c.  return v1 @kind object;
}
procedure `f.a.a.e.a.b`[] `values`() @signature `Lf/a/a/e/a/b;.values:()[Lf/a/a/e/a/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1cf490.  v0:= `@@f.a.a.e.a.b.h` @type ^`f.a.a.e.a.b`[] @kind object;
  #L1cf494.  call temp:= `clone`(v0) @signature `[Lf/a/a/e/a/b;.clone:()Ljava/lang/Object;` @kind virtual;
  #L1cf49a.  v0:= temp @kind object;
  #L1cf49c.  v0:= (`f.a.a.e.a.b`[]) v0 @kind object;
  #L1cf4a0.  return v0 @kind object;
}
procedure `void` `clear`(`f.a.a.e.a.b` v0 @kind this) @signature `Lf/a/a/e/a/b;.clear:()V` @AccessFlag PUBLIC {
    temp;

  #L1cf534.  return @kind void;
}
procedure `void` `dispose`(`f.a.a.e.a.b` v0 @kind this) @signature `Lf/a/a/e/a/b;.dispose:()V` @AccessFlag PUBLIC {
    temp;

  #L1cf548.  return @kind void;
}
procedure `boolean` `isEmpty`(`f.a.a.e.a.b` v1 @kind this) @signature `Lf/a/a/e/a/b;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1cf420.  v0:= 1I;
  #L1cf422.  return v0;
}
procedure `boolean` `offer`(`f.a.a.e.a.b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lf/a/a/e/a/b;.offer:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1cf434.  v2:= new `java.lang.UnsupportedOperationException`;
  #L1cf438.  v0:= "Should not be called!" @kind object;
  #L1cf43c.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1cf442.  throw v2;
}
procedure `java.lang.Object` `poll`(`f.a.a.e.a.b` v1 @kind this) @signature `Lf/a/a/e/a/b;.poll:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1cf4b4.  v0:= 0I;
  #L1cf4b6.  return v0 @kind object;
}
procedure `int` `requestFusion`(`f.a.a.e.a.b` v0 @kind this, `int` v1 ) @signature `Lf/a/a/e/a/b;.requestFusion:(I)I` @AccessFlag PUBLIC {
    temp;

  #L1cf454.  v1:= v1 ^& 2;
  #L1cf458.  return v1;
}
