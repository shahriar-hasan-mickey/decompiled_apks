record `f.a.a.e.e.a.b` @kind class @AccessFlag PUBLIC_FINAL extends `f.a.a.b.b` @kind class, `f.a.a.d.h` @kind interface {
  `java.util.concurrent.Callable` `f.a.a.e.e.a.b.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`f.a.a.e.e.a.b` v0 @kind this, `java.util.concurrent.Callable` v1 @kind object) @signature `Lf/a/a/e/e/a/b;.<init>:(Ljava/util/concurrent/Callable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1cfee8.  call `<init>`(v0) @signature `Lf/a/a/b/b;.<init>:()V` @kind direct;
  #L1cfeee.  v0.`f.a.a.e.e.a.b.a` @type ^`java.util.concurrent.Callable` := v1 @kind object;
  #L1cfef2.  return @kind void;
}
procedure `java.lang.Object` `get`(`f.a.a.e.e.a.b` v2 @kind this) @signature `Lf/a/a/e/e/a/b;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1cfec0.  v0:= v2.`f.a.a.e.e.a.b.a` @type ^`java.util.concurrent.Callable` @kind object;
  #L1cfec4.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L1cfeca.  v0:= temp @kind object;
  #L1cfecc.  v1:= "The Callable returned a null value." @kind object;
  #L1cfed0.  call temp:= `nullCheck`(v0, v1) @signature `Lf/a/a/e/h/a;.nullCheck:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1cfed6.  return v0 @kind object;
}
procedure `void` `subscribeActual`(`f.a.a.e.e.a.b` v3 @kind this, `f.a.a.b.d` v4 @kind object) @signature `Lf/a/a/e/e/a/b;.subscribeActual:(Lf/a/a/b/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1cff04.  v0:= new `f.a.a.e.d.b`;
  #L1cff08.  call `<init>`(v0, v4) @signature `Lf/a/a/e/d/b;.<init>:(Lf/a/a/b/d;)V` @kind direct;
  #L1cff0e.  call `onSubscribe`(v4, v0) @signature `Lf/a/a/b/d;.onSubscribe:(Lf/a/a/c/c;)V` @kind interface;
  #L1cff14.  call temp:= `isDisposed`(v0) @signature `Lf/a/a/e/d/b;.isDisposed:()Z` @kind virtual;
  #L1cff1a.  v1:= temp;
  #L1cff1c.  if v1 == 0 then goto L1cff22;
  #L1cff20.  return @kind void;
  #L1cff22.  v1:= v3.`f.a.a.e.e.a.b.a` @type ^`java.util.concurrent.Callable` @kind object;
  #L1cff26.  call temp:= `call`(v1) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L1cff2c.  v1:= temp @kind object;
  #L1cff2e.  v2:= "Callable returned a null value." @kind object;
  #L1cff32.  call temp:= `nullCheck`(v1, v2) @signature `Lf/a/a/e/h/a;.nullCheck:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L1cff38.  call `complete`(v0, v1) @signature `Lf/a/a/e/d/b;.complete:(Ljava/lang/Object;)V` @kind virtual;
  #L1cff3e.  return @kind void;
  #L1cff40.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1cff42.  call `throwIfFatal`(v1) @signature `Lio/reactivex/rxjava3/exceptions/a;.throwIfFatal:(Ljava/lang/Throwable;)V` @kind static;
  #L1cff48.  call temp:= `isDisposed`(v0) @signature `Lf/a/a/e/d/b;.isDisposed:()Z` @kind virtual;
  #L1cff4e.  v0:= temp;
  #L1cff50.  if v0 != 0 then goto L1cff5c;
  #L1cff54.  call `onError`(v4, v1) @signature `Lf/a/a/b/d;.onError:(Ljava/lang/Throwable;)V` @kind interface;
  #L1cff5a.  goto L1cff62;
  #L1cff5c.  call `onError`(v1) @signature `Lf/a/a/g/a;.onError:(Ljava/lang/Throwable;)V` @kind static;
  #L1cff62.  return @kind void;
  catch `java.lang.Throwable` @[L1cff22..L1cff38] goto L1cff40;
}
