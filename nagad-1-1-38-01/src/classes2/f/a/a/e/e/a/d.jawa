record `f.a.a.e.e.a.d` @kind class @AccessFlag PUBLIC_FINAL extends `f.a.a.e.e.a.a` @kind class {
  `f.a.a.b.e` `f.a.a.e.e.a.d.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`f.a.a.e.e.a.d` v0 @kind this, `f.a.a.b.c` v1 @kind object, `f.a.a.b.e` v2 @kind object) @signature `Lf/a/a/e/e/a/d;.<init>:(Lf/a/a/b/c;Lf/a/a/b/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1d0578.  call `<init>`(v0, v1) @signature `Lf/a/a/e/e/a/a;.<init>:(Lf/a/a/b/c;)V` @kind direct;
  #L1d057e.  v0.`f.a.a.e.e.a.d.b` @type ^`f.a.a.b.e` := v2 @kind object;
  #L1d0582.  return @kind void;
}
procedure `void` `subscribeActual`(`f.a.a.e.e.a.d` v2 @kind this, `f.a.a.b.d` v3 @kind object) @signature `Lf/a/a/e/e/a/d;.subscribeActual:(Lf/a/a/b/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d0594.  v0:= new `f.a.a.e.e.a.d$a`;
  #L1d0598.  call `<init>`(v0, v3) @signature `Lf/a/a/e/e/a/d$a;.<init>:(Lf/a/a/b/d;)V` @kind direct;
  #L1d059e.  call `onSubscribe`(v3, v0) @signature `Lf/a/a/b/d;.onSubscribe:(Lf/a/a/c/c;)V` @kind interface;
  #L1d05a4.  v3:= v2.`f.a.a.e.e.a.d.b` @type ^`f.a.a.b.e` @kind object;
  #L1d05a8.  v1:= new `f.a.a.e.e.a.d$b`;
  #L1d05ac.  call `<init>`(v1, v2, v0) @signature `Lf/a/a/e/e/a/d$b;.<init>:(Lf/a/a/e/e/a/d;Lf/a/a/e/e/a/d$a;)V` @kind direct;
  #L1d05b2.  call temp:= `scheduleDirect`(v3, v1) @signature `Lf/a/a/b/e;.scheduleDirect:(Ljava/lang/Runnable;)Lf/a/a/c/c;` @kind virtual;
  #L1d05b8.  v3:= temp @kind object;
  #L1d05ba.  call `a`(v0, v3) @signature `Lf/a/a/e/e/a/d$a;.a:(Lf/a/a/c/c;)V` @kind virtual;
  #L1d05c0.  return @kind void;
}
