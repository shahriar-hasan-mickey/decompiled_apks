record `retrofit2.ParameterHandler$2` @kind class @AccessFlag  extends `retrofit2.ParameterHandler` @kind class {
  `retrofit2.ParameterHandler` `retrofit2.ParameterHandler$2.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`retrofit2.ParameterHandler$2` v0 @kind this, `retrofit2.ParameterHandler` v1 @kind object) @signature `Lretrofit2/ParameterHandler$2;.<init>:(Lretrofit2/ParameterHandler;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L254f10.  v0.`retrofit2.ParameterHandler$2.this$0` @type ^`retrofit2.ParameterHandler` := v1 @kind object;
  #L254f14.  call `<init>`(v0) @signature `Lretrofit2/ParameterHandler;.<init>:()V` @kind direct;
  #L254f1a.  return @kind void;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$2` v4 @kind this, `retrofit2.RequestBuilder` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lretrofit2/ParameterHandler$2;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L254f2c.  if v6 != 0 then goto L254f32;
  #L254f30.  return @kind void;
  #L254f32.  v0:= 0I;
  #L254f34.  call temp:= `getLength`(v6) @signature `Ljava/lang/reflect/Array;.getLength:(Ljava/lang/Object;)I` @kind static;
  #L254f3a.  v1:= temp;
  #L254f3c.  if v0 >= v1 then goto L254f58;
  #L254f40.  v2:= v4.`retrofit2.ParameterHandler$2.this$0` @type ^`retrofit2.ParameterHandler` @kind object;
  #L254f44.  call temp:= `get`(v6, v0) @signature `Ljava/lang/reflect/Array;.get:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L254f4a.  v3:= temp @kind object;
  #L254f4c.  call `apply`(v2, v5, v3) @signature `Lretrofit2/ParameterHandler;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Object;)V` @kind virtual;
  #L254f52.  v0:= v0 + 1;
  #L254f56.  goto L254f3c;
  #L254f58.  return @kind void;
}
