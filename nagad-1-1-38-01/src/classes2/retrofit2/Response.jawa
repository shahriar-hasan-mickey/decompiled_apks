record `retrofit2.Response` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.Object` `retrofit2.Response.body` @AccessFlag PRIVATE_FINAL;
  `h.j0` `retrofit2.Response.errorBody` @AccessFlag PRIVATE_FINAL;
  `h.i0` `retrofit2.Response.rawResponse` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.Response` v0 @kind this, `h.i0` v1 @kind object, `java.lang.Object` v2 @kind object, `h.j0` v3 @kind object) @signature `Lretrofit2/Response;.<init>:(Lh/i0;Ljava/lang/Object;Lh/j0;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L258098.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L25809e.  v0.`retrofit2.Response.rawResponse` @type ^`h.i0` := v1 @kind object;
  #L2580a2.  v0.`retrofit2.Response.body` @type ^`java.lang.Object` := v2 @kind object;
  #L2580a6.  v0.`retrofit2.Response.errorBody` @type ^`h.j0` := v3 @kind object;
  #L2580aa.  return @kind void;
}
procedure `retrofit2.Response` `error`(`int` v5 , `h.j0` v6 @kind object) @signature `Lretrofit2/Response;.error:(ILh/j0;)Lretrofit2/Response;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L257dac.  v0:= "body == null" @kind object;
  #L257db0.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L257db6.  v0:= 400I;
  #L257dba.  if v5 < v0 then goto L257e36;
  #L257dbe.  v0:= new `h.i0$a`;
  #L257dc2.  call `<init>`(v0) @signature `Lh/i0$a;.<init>:()V` @kind direct;
  #L257dc8.  v1:= new `retrofit2.OkHttpCall$NoContentResponseBody`;
  #L257dcc.  call temp:= `contentType`(v6) @signature `Lh/j0;.contentType:()Lh/b0;` @kind virtual;
  #L257dd2.  v2:= temp @kind object;
  #L257dd4.  call temp:= `contentLength`(v6) @signature `Lh/j0;.contentLength:()J` @kind virtual;
  #L257dda.  v3:= temp @kind wide;
  #L257ddc.  call `<init>`(v1, v2, v3) @signature `Lretrofit2/OkHttpCall$NoContentResponseBody;.<init>:(Lh/b0;J)V` @kind direct;
  #L257de2.  call temp:= `body`(v0, v1) @signature `Lh/i0$a;.body:(Lh/j0;)Lh/i0$a;` @kind virtual;
  #L257de8.  call temp:= `code`(v0, v5) @signature `Lh/i0$a;.code:(I)Lh/i0$a;` @kind virtual;
  #L257dee.  v5:= "Response.error()" @kind object;
  #L257df2.  call temp:= `message`(v0, v5) @signature `Lh/i0$a;.message:(Ljava/lang/String;)Lh/i0$a;` @kind virtual;
  #L257df8.  v5:= `@@h.e0.h` @type ^`h.e0` @kind object;
  #L257dfc.  call temp:= `protocol`(v0, v5) @signature `Lh/i0$a;.protocol:(Lh/e0;)Lh/i0$a;` @kind virtual;
  #L257e02.  v5:= new `h.g0$a`;
  #L257e06.  call `<init>`(v5) @signature `Lh/g0$a;.<init>:()V` @kind direct;
  #L257e0c.  v1:= "http://localhost/" @kind object;
  #L257e10.  call temp:= `url`(v5, v1) @signature `Lh/g0$a;.url:(Ljava/lang/String;)Lh/g0$a;` @kind virtual;
  #L257e16.  call temp:= `build`(v5) @signature `Lh/g0$a;.build:()Lh/g0;` @kind virtual;
  #L257e1c.  v5:= temp @kind object;
  #L257e1e.  call temp:= `request`(v0, v5) @signature `Lh/i0$a;.request:(Lh/g0;)Lh/i0$a;` @kind virtual;
  #L257e24.  call temp:= `build`(v0) @signature `Lh/i0$a;.build:()Lh/i0;` @kind virtual;
  #L257e2a.  v5:= temp @kind object;
  #L257e2c.  call temp:= `error`(v6, v5) @signature `Lretrofit2/Response;.error:(Lh/j0;Lh/i0;)Lretrofit2/Response;` @kind static;
  #L257e32.  v5:= temp @kind object;
  #L257e34.  return v5 @kind object;
  #L257e36.  v6:= new `java.lang.IllegalArgumentException`;
  #L257e3a.  v0:= new `java.lang.StringBuilder`;
  #L257e3e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L257e44.  v1:= "code < 400: " @kind object;
  #L257e48.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L257e4e.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L257e54.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L257e5a.  v5:= temp @kind object;
  #L257e5c.  call `<init>`(v6, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L257e62.  throw v6;
}
procedure `retrofit2.Response` `error`(`h.j0` v2 @kind object, `h.i0` v3 @kind object) @signature `Lretrofit2/Response;.error:(Lh/j0;Lh/i0;)Lretrofit2/Response;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L257e74.  v0:= "body == null" @kind object;
  #L257e78.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L257e7e.  v0:= "rawResponse == null" @kind object;
  #L257e82.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L257e88.  call temp:= `isSuccessful`(v3) @signature `Lh/i0;.isSuccessful:()Z` @kind virtual;
  #L257e8e.  v0:= temp;
  #L257e90.  if v0 != 0 then goto L257ea2;
  #L257e94.  v0:= new `retrofit2.Response`;
  #L257e98.  v1:= 0I;
  #L257e9a.  call `<init>`(v0, v3, v1, v2) @signature `Lretrofit2/Response;.<init>:(Lh/i0;Ljava/lang/Object;Lh/j0;)V` @kind direct;
  #L257ea0.  return v0 @kind object;
  #L257ea2.  v2:= new `java.lang.IllegalArgumentException`;
  #L257ea6.  v3:= "rawResponse should not be successful response" @kind object;
  #L257eaa.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L257eb0.  throw v2;
}
procedure `retrofit2.Response` `success`(`int` v2 , `java.lang.Object` v3 @kind object) @signature `Lretrofit2/Response;.success:(ILjava/lang/Object;)Lretrofit2/Response;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L257ec4.  v0:= 200I;
  #L257ec8.  if v2 < v0 then goto L257f2c;
  #L257ecc.  v0:= 300I;
  #L257ed0.  if v2 >= v0 then goto L257f2c;
  #L257ed4.  v0:= new `h.i0$a`;
  #L257ed8.  call `<init>`(v0) @signature `Lh/i0$a;.<init>:()V` @kind direct;
  #L257ede.  call temp:= `code`(v0, v2) @signature `Lh/i0$a;.code:(I)Lh/i0$a;` @kind virtual;
  #L257ee4.  v2:= "Response.success()" @kind object;
  #L257ee8.  call temp:= `message`(v0, v2) @signature `Lh/i0$a;.message:(Ljava/lang/String;)Lh/i0$a;` @kind virtual;
  #L257eee.  v2:= `@@h.e0.h` @type ^`h.e0` @kind object;
  #L257ef2.  call temp:= `protocol`(v0, v2) @signature `Lh/i0$a;.protocol:(Lh/e0;)Lh/i0$a;` @kind virtual;
  #L257ef8.  v2:= new `h.g0$a`;
  #L257efc.  call `<init>`(v2) @signature `Lh/g0$a;.<init>:()V` @kind direct;
  #L257f02.  v1:= "http://localhost/" @kind object;
  #L257f06.  call temp:= `url`(v2, v1) @signature `Lh/g0$a;.url:(Ljava/lang/String;)Lh/g0$a;` @kind virtual;
  #L257f0c.  call temp:= `build`(v2) @signature `Lh/g0$a;.build:()Lh/g0;` @kind virtual;
  #L257f12.  v2:= temp @kind object;
  #L257f14.  call temp:= `request`(v0, v2) @signature `Lh/i0$a;.request:(Lh/g0;)Lh/i0$a;` @kind virtual;
  #L257f1a.  call temp:= `build`(v0) @signature `Lh/i0$a;.build:()Lh/i0;` @kind virtual;
  #L257f20.  v2:= temp @kind object;
  #L257f22.  call temp:= `success`(v3, v2) @signature `Lretrofit2/Response;.success:(Ljava/lang/Object;Lh/i0;)Lretrofit2/Response;` @kind static;
  #L257f28.  v2:= temp @kind object;
  #L257f2a.  return v2 @kind object;
  #L257f2c.  v3:= new `java.lang.IllegalArgumentException`;
  #L257f30.  v0:= new `java.lang.StringBuilder`;
  #L257f34.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L257f3a.  v1:= "code < 200 or >= 300: " @kind object;
  #L257f3e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L257f44.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L257f4a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L257f50.  v2:= temp @kind object;
  #L257f52.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L257f58.  throw v3;
}
procedure `retrofit2.Response` `success`(`java.lang.Object` v3 @kind object) @signature `Lretrofit2/Response;.success:(Ljava/lang/Object;)Lretrofit2/Response;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L257f6c.  v0:= new `h.i0$a`;
  #L257f70.  call `<init>`(v0) @signature `Lh/i0$a;.<init>:()V` @kind direct;
  #L257f76.  v1:= 200I;
  #L257f7a.  call temp:= `code`(v0, v1) @signature `Lh/i0$a;.code:(I)Lh/i0$a;` @kind virtual;
  #L257f80.  v1:= "OK" @kind object;
  #L257f84.  call temp:= `message`(v0, v1) @signature `Lh/i0$a;.message:(Ljava/lang/String;)Lh/i0$a;` @kind virtual;
  #L257f8a.  v1:= `@@h.e0.h` @type ^`h.e0` @kind object;
  #L257f8e.  call temp:= `protocol`(v0, v1) @signature `Lh/i0$a;.protocol:(Lh/e0;)Lh/i0$a;` @kind virtual;
  #L257f94.  v1:= new `h.g0$a`;
  #L257f98.  call `<init>`(v1) @signature `Lh/g0$a;.<init>:()V` @kind direct;
  #L257f9e.  v2:= "http://localhost/" @kind object;
  #L257fa2.  call temp:= `url`(v1, v2) @signature `Lh/g0$a;.url:(Ljava/lang/String;)Lh/g0$a;` @kind virtual;
  #L257fa8.  call temp:= `build`(v1) @signature `Lh/g0$a;.build:()Lh/g0;` @kind virtual;
  #L257fae.  v1:= temp @kind object;
  #L257fb0.  call temp:= `request`(v0, v1) @signature `Lh/i0$a;.request:(Lh/g0;)Lh/i0$a;` @kind virtual;
  #L257fb6.  call temp:= `build`(v0) @signature `Lh/i0$a;.build:()Lh/i0;` @kind virtual;
  #L257fbc.  v0:= temp @kind object;
  #L257fbe.  call temp:= `success`(v3, v0) @signature `Lretrofit2/Response;.success:(Ljava/lang/Object;Lh/i0;)Lretrofit2/Response;` @kind static;
  #L257fc4.  v3:= temp @kind object;
  #L257fc6.  return v3 @kind object;
}
procedure `retrofit2.Response` `success`(`java.lang.Object` v2 @kind object, `h.i0` v3 @kind object) @signature `Lretrofit2/Response;.success:(Ljava/lang/Object;Lh/i0;)Lretrofit2/Response;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L258054.  v0:= "rawResponse == null" @kind object;
  #L258058.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L25805e.  call temp:= `isSuccessful`(v3) @signature `Lh/i0;.isSuccessful:()Z` @kind virtual;
  #L258064.  v0:= temp;
  #L258066.  if v0 == 0 then goto L258078;
  #L25806a.  v0:= new `retrofit2.Response`;
  #L25806e.  v1:= 0I;
  #L258070.  call `<init>`(v0, v3, v2, v1) @signature `Lretrofit2/Response;.<init>:(Lh/i0;Ljava/lang/Object;Lh/j0;)V` @kind direct;
  #L258076.  return v0 @kind object;
  #L258078.  v2:= new `java.lang.IllegalArgumentException`;
  #L25807c.  v3:= "rawResponse must be successful response" @kind object;
  #L258080.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L258086.  throw v2;
}
procedure `retrofit2.Response` `success`(`java.lang.Object` v2 @kind object, `h.y` v3 @kind object) @signature `Lretrofit2/Response;.success:(Ljava/lang/Object;Lh/y;)Lretrofit2/Response;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L257fd8.  v0:= "headers == null" @kind object;
  #L257fdc.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L257fe2.  v0:= new `h.i0$a`;
  #L257fe6.  call `<init>`(v0) @signature `Lh/i0$a;.<init>:()V` @kind direct;
  #L257fec.  v1:= 200I;
  #L257ff0.  call temp:= `code`(v0, v1) @signature `Lh/i0$a;.code:(I)Lh/i0$a;` @kind virtual;
  #L257ff6.  v1:= "OK" @kind object;
  #L257ffa.  call temp:= `message`(v0, v1) @signature `Lh/i0$a;.message:(Ljava/lang/String;)Lh/i0$a;` @kind virtual;
  #L258000.  v1:= `@@h.e0.h` @type ^`h.e0` @kind object;
  #L258004.  call temp:= `protocol`(v0, v1) @signature `Lh/i0$a;.protocol:(Lh/e0;)Lh/i0$a;` @kind virtual;
  #L25800a.  call temp:= `headers`(v0, v3) @signature `Lh/i0$a;.headers:(Lh/y;)Lh/i0$a;` @kind virtual;
  #L258010.  v3:= new `h.g0$a`;
  #L258014.  call `<init>`(v3) @signature `Lh/g0$a;.<init>:()V` @kind direct;
  #L25801a.  v1:= "http://localhost/" @kind object;
  #L25801e.  call temp:= `url`(v3, v1) @signature `Lh/g0$a;.url:(Ljava/lang/String;)Lh/g0$a;` @kind virtual;
  #L258024.  call temp:= `build`(v3) @signature `Lh/g0$a;.build:()Lh/g0;` @kind virtual;
  #L25802a.  v3:= temp @kind object;
  #L25802c.  call temp:= `request`(v0, v3) @signature `Lh/i0$a;.request:(Lh/g0;)Lh/i0$a;` @kind virtual;
  #L258032.  call temp:= `build`(v0) @signature `Lh/i0$a;.build:()Lh/i0;` @kind virtual;
  #L258038.  v3:= temp @kind object;
  #L25803a.  call temp:= `success`(v2, v3) @signature `Lretrofit2/Response;.success:(Ljava/lang/Object;Lh/i0;)Lretrofit2/Response;` @kind static;
  #L258040.  v2:= temp @kind object;
  #L258042.  return v2 @kind object;
}
procedure `java.lang.Object` `body`(`retrofit2.Response` v1 @kind this) @signature `Lretrofit2/Response;.body:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L257d04.  v0:= v1.`retrofit2.Response.body` @type ^`java.lang.Object` @kind object;
  #L257d08.  return v0 @kind object;
}
procedure `int` `code`(`retrofit2.Response` v1 @kind this) @signature `Lretrofit2/Response;.code:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L257ce4.  v0:= v1.`retrofit2.Response.rawResponse` @type ^`h.i0` @kind object;
  #L257ce8.  call temp:= `code`(v0) @signature `Lh/i0;.code:()I` @kind virtual;
  #L257cee.  v0:= temp;
  #L257cf0.  return v0;
}
procedure `h.j0` `errorBody`(`retrofit2.Response` v1 @kind this) @signature `Lretrofit2/Response;.errorBody:()Lh/j0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L257d94.  v0:= v1.`retrofit2.Response.errorBody` @type ^`h.j0` @kind object;
  #L257d98.  return v0 @kind object;
}
procedure `h.y` `headers`(`retrofit2.Response` v1 @kind this) @signature `Lretrofit2/Response;.headers:()Lh/y;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L257d5c.  v0:= v1.`retrofit2.Response.rawResponse` @type ^`h.i0` @kind object;
  #L257d60.  call temp:= `headers`(v0) @signature `Lh/i0;.headers:()Lh/y;` @kind virtual;
  #L257d66.  v0:= temp @kind object;
  #L257d68.  return v0 @kind object;
}
procedure `boolean` `isSuccessful`(`retrofit2.Response` v1 @kind this) @signature `Lretrofit2/Response;.isSuccessful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L257cc4.  v0:= v1.`retrofit2.Response.rawResponse` @type ^`h.i0` @kind object;
  #L257cc8.  call temp:= `isSuccessful`(v0) @signature `Lh/i0;.isSuccessful:()Z` @kind virtual;
  #L257cce.  v0:= temp;
  #L257cd0.  return v0;
}
procedure `java.lang.String` `message`(`retrofit2.Response` v1 @kind this) @signature `Lretrofit2/Response;.message:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L257d1c.  v0:= v1.`retrofit2.Response.rawResponse` @type ^`h.i0` @kind object;
  #L257d20.  call temp:= `message`(v0) @signature `Lh/i0;.message:()Ljava/lang/String;` @kind virtual;
  #L257d26.  v0:= temp @kind object;
  #L257d28.  return v0 @kind object;
}
procedure `h.i0` `raw`(`retrofit2.Response` v1 @kind this) @signature `Lretrofit2/Response;.raw:()Lh/i0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L257d7c.  v0:= v1.`retrofit2.Response.rawResponse` @type ^`h.i0` @kind object;
  #L257d80.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`retrofit2.Response` v1 @kind this) @signature `Lretrofit2/Response;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L257d3c.  v0:= v1.`retrofit2.Response.rawResponse` @type ^`h.i0` @kind object;
  #L257d40.  call temp:= `toString`(v0) @signature `Lh/i0;.toString:()Ljava/lang/String;` @kind virtual;
  #L257d46.  v0:= temp @kind object;
  #L257d48.  return v0 @kind object;
}
