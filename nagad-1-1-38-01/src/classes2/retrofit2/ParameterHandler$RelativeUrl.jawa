record `retrofit2.ParameterHandler$RelativeUrl` @kind class @AccessFlag FINAL extends `retrofit2.ParameterHandler` @kind class {
  `java.lang.reflect.Method` `retrofit2.ParameterHandler$RelativeUrl.method` @AccessFlag PRIVATE_FINAL;
  `int` `retrofit2.ParameterHandler$RelativeUrl.p` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.ParameterHandler$RelativeUrl` v0 @kind this, `java.lang.reflect.Method` v1 @kind object, `int` v2 ) @signature `Lretrofit2/ParameterHandler$RelativeUrl;.<init>:(Ljava/lang/reflect/Method;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L255a24.  call `<init>`(v0) @signature `Lretrofit2/ParameterHandler;.<init>:()V` @kind direct;
  #L255a2a.  v0.`retrofit2.ParameterHandler$RelativeUrl.method` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L255a2e.  v0.`retrofit2.ParameterHandler$RelativeUrl.p` @type ^`int` := v2;
  #L255a32.  return @kind void;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$RelativeUrl` v2 @kind this, `retrofit2.RequestBuilder` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lretrofit2/ParameterHandler$RelativeUrl;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L255a44.  if v4 == 0 then goto L255a50;
  #L255a48.  call `setRelativeUrl`(v3, v4) @signature `Lretrofit2/RequestBuilder;.setRelativeUrl:(Ljava/lang/Object;)V` @kind virtual;
  #L255a4e.  return @kind void;
  #L255a50.  v3:= v2.`retrofit2.ParameterHandler$RelativeUrl.method` @type ^`java.lang.reflect.Method` @kind object;
  #L255a54.  v4:= v2.`retrofit2.ParameterHandler$RelativeUrl.p` @type ^`int`;
  #L255a58.  v0:= 0I;
  #L255a5a.  v0:= new `java.lang.Object`[v0];
  #L255a5e.  v1:= "@Url parameter is null." @kind object;
  #L255a62.  call temp:= `parameterError`(v3, v4, v1, v0) @signature `Lretrofit2/Utils;.parameterError:(Ljava/lang/reflect/Method;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L255a68.  v3:= temp @kind object;
  #L255a6a.  throw v3;
}
