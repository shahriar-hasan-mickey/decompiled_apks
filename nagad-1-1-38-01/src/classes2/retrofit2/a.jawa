record `retrofit2.a` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.lang.Runnable` @kind interface {
  `retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1` `retrofit2.a.f` @AccessFlag PRIVATE_FINAL_SYNTHETIC;
  `retrofit2.Callback` `retrofit2.a.g` @AccessFlag PRIVATE_FINAL_SYNTHETIC;
  `retrofit2.Response` `retrofit2.a.h` @AccessFlag PRIVATE_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`retrofit2.a` v0 @kind this, `retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1` v1 @kind object, `retrofit2.Callback` v2 @kind object, `retrofit2.Response` v3 @kind object) @signature `Lretrofit2/a;.<init>:(Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall$1;Lretrofit2/Callback;Lretrofit2/Response;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L252ee0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L252ee6.  v0.`retrofit2.a.f` @type ^`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1` := v1 @kind object;
  #L252eea.  v0.`retrofit2.a.g` @type ^`retrofit2.Callback` := v2 @kind object;
  #L252eee.  v0.`retrofit2.a.h` @type ^`retrofit2.Response` := v3 @kind object;
  #L252ef2.  return @kind void;
}
procedure `void` `run`(`retrofit2.a` v3 @kind this) @signature `Lretrofit2/a;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L252f04.  v0:= v3.`retrofit2.a.f` @type ^`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1` @kind object;
  #L252f08.  v1:= v3.`retrofit2.a.g` @type ^`retrofit2.Callback` @kind object;
  #L252f0c.  v2:= v3.`retrofit2.a.h` @type ^`retrofit2.Response` @kind object;
  #L252f10.  call `a`(v0, v1, v2) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall$1;.a:(Lretrofit2/Callback;Lretrofit2/Response;)V` @kind virtual;
  #L252f16.  return @kind void;
}
