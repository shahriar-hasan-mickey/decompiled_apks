record `retrofit2.Retrofit$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `h.z` `retrofit2.Retrofit$Builder.baseUrl` @AccessFlag PRIVATE;
  `java.util.List` `retrofit2.Retrofit$Builder.callAdapterFactories` @AccessFlag PRIVATE_FINAL;
  `h.j$a` `retrofit2.Retrofit$Builder.callFactory` @AccessFlag PRIVATE;
  `java.util.concurrent.Executor` `retrofit2.Retrofit$Builder.callbackExecutor` @AccessFlag PRIVATE;
  `java.util.List` `retrofit2.Retrofit$Builder.converterFactories` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Platform` `retrofit2.Retrofit$Builder.platform` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.Retrofit$Builder.validateEagerly` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`retrofit2.Retrofit$Builder` v1 @kind this) @signature `Lretrofit2/Retrofit$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L258444.  call temp:= `get`() @signature `Lretrofit2/Platform;.get:()Lretrofit2/Platform;` @kind static;
  #L25844a.  v0:= temp @kind object;
  #L25844c.  call `<init>`(v1, v0) @signature `Lretrofit2/Retrofit$Builder;.<init>:(Lretrofit2/Platform;)V` @kind direct;
  #L258452.  return @kind void;
}
procedure `void` `<init>`(`retrofit2.Retrofit$Builder` v1 @kind this, `retrofit2.Platform` v2 @kind object) @signature `Lretrofit2/Retrofit$Builder;.<init>:(Lretrofit2/Platform;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L258464.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L25846a.  v0:= new `java.util.ArrayList`;
  #L25846e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L258474.  v1.`retrofit2.Retrofit$Builder.converterFactories` @type ^`java.util.List` := v0 @kind object;
  #L258478.  v0:= new `java.util.ArrayList`;
  #L25847c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L258482.  v1.`retrofit2.Retrofit$Builder.callAdapterFactories` @type ^`java.util.List` := v0 @kind object;
  #L258486.  v1.`retrofit2.Retrofit$Builder.platform` @type ^`retrofit2.Platform` := v2 @kind object;
  #L25848a.  return @kind void;
}
procedure `void` `<init>`(`retrofit2.Retrofit$Builder` v4 @kind this, `retrofit2.Retrofit` v5 @kind object) @signature `Lretrofit2/Retrofit$Builder;.<init>:(Lretrofit2/Retrofit;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L25849c.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2584a2.  v0:= new `java.util.ArrayList`;
  #L2584a6.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2584ac.  v4.`retrofit2.Retrofit$Builder.converterFactories` @type ^`java.util.List` := v0 @kind object;
  #L2584b0.  v0:= new `java.util.ArrayList`;
  #L2584b4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2584ba.  v4.`retrofit2.Retrofit$Builder.callAdapterFactories` @type ^`java.util.List` := v0 @kind object;
  #L2584be.  call temp:= `get`() @signature `Lretrofit2/Platform;.get:()Lretrofit2/Platform;` @kind static;
  #L2584c4.  v0:= temp @kind object;
  #L2584c6.  v4.`retrofit2.Retrofit$Builder.platform` @type ^`retrofit2.Platform` := v0 @kind object;
  #L2584ca.  v0:= v5.`retrofit2.Retrofit.callFactory` @type ^`h.j$a` @kind object;
  #L2584ce.  v4.`retrofit2.Retrofit$Builder.callFactory` @type ^`h.j$a` := v0 @kind object;
  #L2584d2.  v0:= v5.`retrofit2.Retrofit.baseUrl` @type ^`h.z` @kind object;
  #L2584d6.  v4.`retrofit2.Retrofit$Builder.baseUrl` @type ^`h.z` := v0 @kind object;
  #L2584da.  v0:= v5.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L2584de.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2584e4.  v0:= temp;
  #L2584e6.  v1:= v4.`retrofit2.Retrofit$Builder.platform` @type ^`retrofit2.Platform` @kind object;
  #L2584ea.  call temp:= `defaultConverterFactoriesSize`(v1) @signature `Lretrofit2/Platform;.defaultConverterFactoriesSize:()I` @kind virtual;
  #L2584f0.  v1:= temp;
  #L2584f2.  v0:= v0 - v1 @kind int;
  #L2584f4.  v1:= 1I;
  #L2584f6.  if v1 >= v0 then goto L25851a;
  #L2584fa.  v2:= v4.`retrofit2.Retrofit$Builder.converterFactories` @type ^`java.util.List` @kind object;
  #L2584fe.  v3:= v5.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L258502.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L258508.  v3:= temp @kind object;
  #L25850a.  v3:= (`retrofit2.Converter$Factory`) v3 @kind object;
  #L25850e.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L258514.  v1:= v1 + 1;
  #L258518.  goto L2584f6;
  #L25851a.  v0:= 0I;
  #L25851c.  v1:= v5.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L258520.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L258526.  v1:= temp;
  #L258528.  v2:= v4.`retrofit2.Retrofit$Builder.platform` @type ^`retrofit2.Platform` @kind object;
  #L25852c.  call temp:= `defaultCallAdapterFactoriesSize`(v2) @signature `Lretrofit2/Platform;.defaultCallAdapterFactoriesSize:()I` @kind virtual;
  #L258532.  v2:= temp;
  #L258534.  v1:= v1 - v2 @kind int;
  #L258536.  if v0 >= v1 then goto L25855a;
  #L25853a.  v2:= v4.`retrofit2.Retrofit$Builder.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L25853e.  v3:= v5.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L258542.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L258548.  v3:= temp @kind object;
  #L25854a.  v3:= (`retrofit2.CallAdapter$Factory`) v3 @kind object;
  #L25854e.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L258554.  v0:= v0 + 1;
  #L258558.  goto L258536;
  #L25855a.  v0:= v5.`retrofit2.Retrofit.callbackExecutor` @type ^`java.util.concurrent.Executor` @kind object;
  #L25855e.  v4.`retrofit2.Retrofit$Builder.callbackExecutor` @type ^`java.util.concurrent.Executor` := v0 @kind object;
  #L258562.  v5:= v5.`retrofit2.Retrofit.validateEagerly` @type ^`boolean` @kind boolean;
  #L258566.  v4.`retrofit2.Retrofit$Builder.validateEagerly` @type ^`boolean` := v5 @kind boolean;
  #L25856a.  return @kind void;
}
procedure `retrofit2.Retrofit$Builder` `addCallAdapterFactory`(`retrofit2.Retrofit$Builder` v2 @kind this, `retrofit2.CallAdapter$Factory` v3 @kind object) @signature `Lretrofit2/Retrofit$Builder;.addCallAdapterFactory:(Lretrofit2/CallAdapter$Factory;)Lretrofit2/Retrofit$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L25827c.  v0:= v2.`retrofit2.Retrofit$Builder.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L258280.  v1:= "factory == null" @kind object;
  #L258284.  call temp:= `requireNonNull`(v3, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L25828a.  v3:= temp @kind object;
  #L25828c.  v3:= (`retrofit2.CallAdapter$Factory`) v3 @kind object;
  #L258290.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L258296.  return v2 @kind object;
}
procedure `retrofit2.Retrofit$Builder` `addConverterFactory`(`retrofit2.Retrofit$Builder` v2 @kind this, `retrofit2.Converter$Factory` v3 @kind object) @signature `Lretrofit2/Retrofit$Builder;.addConverterFactory:(Lretrofit2/Converter$Factory;)Lretrofit2/Retrofit$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2582a8.  v0:= v2.`retrofit2.Retrofit$Builder.converterFactories` @type ^`java.util.List` @kind object;
  #L2582ac.  v1:= "factory == null" @kind object;
  #L2582b0.  call temp:= `requireNonNull`(v3, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2582b6.  v3:= temp @kind object;
  #L2582b8.  v3:= (`retrofit2.Converter$Factory`) v3 @kind object;
  #L2582bc.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2582c2.  return v2 @kind object;
}
procedure `retrofit2.Retrofit$Builder` `baseUrl`(`retrofit2.Retrofit$Builder` v3 @kind this, `h.z` v4 @kind object) @signature `Lretrofit2/Retrofit$Builder;.baseUrl:(Lh/z;)Lretrofit2/Retrofit$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L258334.  v0:= "baseUrl == null" @kind object;
  #L258338.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L25833e.  call temp:= `pathSegments`(v4) @signature `Lh/z;.pathSegments:()Ljava/util/List;` @kind virtual;
  #L258344.  v0:= temp @kind object;
  #L258346.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L25834c.  v1:= temp;
  #L25834e.  v1:= v1 + -1;
  #L258352.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L258358.  v0:= temp @kind object;
  #L25835a.  v1:= "" @kind object;
  #L25835e.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L258364.  v0:= temp;
  #L258366.  if v0 == 0 then goto L258370;
  #L25836a.  v3.`retrofit2.Retrofit$Builder.baseUrl` @type ^`h.z` := v4 @kind object;
  #L25836e.  return v3 @kind object;
  #L258370.  v0:= new `java.lang.IllegalArgumentException`;
  #L258374.  v1:= new `java.lang.StringBuilder`;
  #L258378.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L25837e.  v2:= "baseUrl must end in /: " @kind object;
  #L258382.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L258388.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25838e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L258394.  v4:= temp @kind object;
  #L258396.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25839c.  throw v0;
}
procedure `retrofit2.Retrofit$Builder` `baseUrl`(`retrofit2.Retrofit$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lretrofit2/Retrofit$Builder;.baseUrl:(Ljava/lang/String;)Lretrofit2/Retrofit$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2582d4.  v0:= "baseUrl == null" @kind object;
  #L2582d8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2582de.  call temp:= `get`(v2) @signature `Lh/z;.get:(Ljava/lang/String;)Lh/z;` @kind static;
  #L2582e4.  v2:= temp @kind object;
  #L2582e6.  call temp:= `baseUrl`(v1, v2) @signature `Lretrofit2/Retrofit$Builder;.baseUrl:(Lh/z;)Lretrofit2/Retrofit$Builder;` @kind virtual;
  #L2582ec.  v2:= temp @kind object;
  #L2582ee.  return v2 @kind object;
}
procedure `retrofit2.Retrofit$Builder` `baseUrl`(`retrofit2.Retrofit$Builder` v1 @kind this, `java.net.URL` v2 @kind object) @signature `Lretrofit2/Retrofit$Builder;.baseUrl:(Ljava/net/URL;)Lretrofit2/Retrofit$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L258300.  v0:= "baseUrl == null" @kind object;
  #L258304.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L25830a.  call temp:= `toString`(v2) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L258310.  v2:= temp @kind object;
  #L258312.  call temp:= `get`(v2) @signature `Lh/z;.get:(Ljava/lang/String;)Lh/z;` @kind static;
  #L258318.  v2:= temp @kind object;
  #L25831a.  call temp:= `baseUrl`(v1, v2) @signature `Lretrofit2/Retrofit$Builder;.baseUrl:(Lh/z;)Lretrofit2/Retrofit$Builder;` @kind virtual;
  #L258320.  v2:= temp @kind object;
  #L258322.  return v2 @kind object;
}
procedure `retrofit2.Retrofit` `build`(`retrofit2.Retrofit$Builder` v9 @kind this) @signature `Lretrofit2/Retrofit$Builder;.build:()Lretrofit2/Retrofit;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L258190.  v0:= v9.`retrofit2.Retrofit$Builder.baseUrl` @type ^`h.z` @kind object;
  #L258194.  if v0 == 0 then goto L25825c;
  #L258198.  v0:= v9.`retrofit2.Retrofit$Builder.callFactory` @type ^`h.j$a` @kind object;
  #L25819c.  if v0 != 0 then goto L2581aa;
  #L2581a0.  v0:= new `h.d0`;
  #L2581a4.  call `<init>`(v0) @signature `Lh/d0;.<init>:()V` @kind direct;
  #L2581aa.  v2:= v0 @kind object;
  #L2581ac.  v0:= v9.`retrofit2.Retrofit$Builder.callbackExecutor` @type ^`java.util.concurrent.Executor` @kind object;
  #L2581b0.  if v0 != 0 then goto L2581c0;
  #L2581b4.  v0:= v9.`retrofit2.Retrofit$Builder.platform` @type ^`retrofit2.Platform` @kind object;
  #L2581b8.  call temp:= `defaultCallbackExecutor`(v0) @signature `Lretrofit2/Platform;.defaultCallbackExecutor:()Ljava/util/concurrent/Executor;` @kind virtual;
  #L2581be.  v0:= temp @kind object;
  #L2581c0.  v6:= v0 @kind object;
  #L2581c2.  v0:= new `java.util.ArrayList`;
  #L2581c6.  v1:= v9.`retrofit2.Retrofit$Builder.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L2581ca.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L2581d0.  v1:= v9.`retrofit2.Retrofit$Builder.platform` @type ^`retrofit2.Platform` @kind object;
  #L2581d4.  call temp:= `defaultCallAdapterFactories`(v1, v6) @signature `Lretrofit2/Platform;.defaultCallAdapterFactories:(Ljava/util/concurrent/Executor;)Ljava/util/List;` @kind virtual;
  #L2581da.  v1:= temp @kind object;
  #L2581dc.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L2581e2.  v1:= new `java.util.ArrayList`;
  #L2581e6.  v3:= v9.`retrofit2.Retrofit$Builder.converterFactories` @type ^`java.util.List` @kind object;
  #L2581ea.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2581f0.  v3:= temp;
  #L2581f2.  v3:= v3 + 1;
  #L2581f6.  v4:= v9.`retrofit2.Retrofit$Builder.platform` @type ^`retrofit2.Platform` @kind object;
  #L2581fa.  call temp:= `defaultConverterFactoriesSize`(v4) @signature `Lretrofit2/Platform;.defaultConverterFactoriesSize:()I` @kind virtual;
  #L258200.  v4:= temp;
  #L258202.  v3:= v3 + v4 @kind int;
  #L258204.  call `<init>`(v1, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L25820a.  v3:= new `retrofit2.BuiltInConverters`;
  #L25820e.  call `<init>`(v3) @signature `Lretrofit2/BuiltInConverters;.<init>:()V` @kind direct;
  #L258214.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L25821a.  v3:= v9.`retrofit2.Retrofit$Builder.converterFactories` @type ^`java.util.List` @kind object;
  #L25821e.  call temp:= `addAll`(v1, v3) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L258224.  v3:= v9.`retrofit2.Retrofit$Builder.platform` @type ^`retrofit2.Platform` @kind object;
  #L258228.  call temp:= `defaultConverterFactories`(v3) @signature `Lretrofit2/Platform;.defaultConverterFactories:()Ljava/util/List;` @kind virtual;
  #L25822e.  v3:= temp @kind object;
  #L258230.  call temp:= `addAll`(v1, v3) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L258236.  v8:= new `retrofit2.Retrofit`;
  #L25823a.  v3:= v9.`retrofit2.Retrofit$Builder.baseUrl` @type ^`h.z` @kind object;
  #L25823e.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L258244.  v4:= temp @kind object;
  #L258246.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L25824c.  v5:= temp @kind object;
  #L25824e.  v7:= v9.`retrofit2.Retrofit$Builder.validateEagerly` @type ^`boolean` @kind boolean;
  #L258252.  v1:= v8 @kind object;
  #L258254.  call `<init>`(v1, v2, v3, v4, v5, v6, v7) @signature `Lretrofit2/Retrofit;.<init>:(Lh/j$a;Lh/z;Ljava/util/List;Ljava/util/List;Ljava/util/concurrent/Executor;Z)V` @kind direct;
  #L25825a.  return v8 @kind object;
  #L25825c.  v0:= new `java.lang.IllegalStateException`;
  #L258260.  v1:= "Base URL required." @kind object;
  #L258264.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25826a.  throw v0;
}
procedure `java.util.List` `callAdapterFactories`(`retrofit2.Retrofit$Builder` v1 @kind this) @signature `Lretrofit2/Retrofit$Builder;.callAdapterFactories:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L258160.  v0:= v1.`retrofit2.Retrofit$Builder.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L258164.  return v0 @kind object;
}
procedure `retrofit2.Retrofit$Builder` `callFactory`(`retrofit2.Retrofit$Builder` v1 @kind this, `h.j$a` v2 @kind object) @signature `Lretrofit2/Retrofit$Builder;.callFactory:(Lh/j$a;)Lretrofit2/Retrofit$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2583b0.  v0:= "factory == null" @kind object;
  #L2583b4.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2583ba.  v2:= temp @kind object;
  #L2583bc.  v2:= (`h.j$a`) v2 @kind object;
  #L2583c0.  v1.`retrofit2.Retrofit$Builder.callFactory` @type ^`h.j$a` := v2 @kind object;
  #L2583c4.  return v1 @kind object;
}
procedure `retrofit2.Retrofit$Builder` `callbackExecutor`(`retrofit2.Retrofit$Builder` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object) @signature `Lretrofit2/Retrofit$Builder;.callbackExecutor:(Ljava/util/concurrent/Executor;)Lretrofit2/Retrofit$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2583d8.  v0:= "executor == null" @kind object;
  #L2583dc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2583e2.  v2:= temp @kind object;
  #L2583e4.  v2:= (`java.util.concurrent.Executor`) v2 @kind object;
  #L2583e8.  v1.`retrofit2.Retrofit$Builder.callbackExecutor` @type ^`java.util.concurrent.Executor` := v2 @kind object;
  #L2583ec.  return v1 @kind object;
}
procedure `retrofit2.Retrofit$Builder` `client`(`retrofit2.Retrofit$Builder` v1 @kind this, `h.d0` v2 @kind object) @signature `Lretrofit2/Retrofit$Builder;.client:(Lh/d0;)Lretrofit2/Retrofit$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L258400.  v0:= "client == null" @kind object;
  #L258404.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L25840a.  v2:= temp @kind object;
  #L25840c.  v2:= (`h.j$a`) v2 @kind object;
  #L258410.  call temp:= `callFactory`(v1, v2) @signature `Lretrofit2/Retrofit$Builder;.callFactory:(Lh/j$a;)Lretrofit2/Retrofit$Builder;` @kind virtual;
  #L258416.  v2:= temp @kind object;
  #L258418.  return v2 @kind object;
}
procedure `java.util.List` `converterFactories`(`retrofit2.Retrofit$Builder` v1 @kind this) @signature `Lretrofit2/Retrofit$Builder;.converterFactories:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L258178.  v0:= v1.`retrofit2.Retrofit$Builder.converterFactories` @type ^`java.util.List` @kind object;
  #L25817c.  return v0 @kind object;
}
procedure `retrofit2.Retrofit$Builder` `validateEagerly`(`retrofit2.Retrofit$Builder` v0 @kind this, `boolean` v1 ) @signature `Lretrofit2/Retrofit$Builder;.validateEagerly:(Z)Lretrofit2/Retrofit$Builder;` @AccessFlag PUBLIC {
    temp;

  #L25842c.  v0.`retrofit2.Retrofit$Builder.validateEagerly` @type ^`boolean` := v1 @kind boolean;
  #L258430.  return v0 @kind object;
}
