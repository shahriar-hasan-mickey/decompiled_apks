record `retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall` @kind class @AccessFlag FINAL extends `retrofit2.Call` @kind interface {
  `java.util.concurrent.Executor` `retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall.callbackExecutor` @AccessFlag FINAL;
  `retrofit2.Call` `retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall.delegate` @AccessFlag FINAL;
}
procedure `void` `<init>`(`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object, `retrofit2.Call` v2 @kind object) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;.<init>:(Ljava/util/concurrent/Executor;Lretrofit2/Call;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L25390c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L253912.  v0.`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall.callbackExecutor` @type ^`java.util.concurrent.Executor` := v1 @kind object;
  #L253916.  v0.`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall.delegate` @type ^`retrofit2.Call` := v2 @kind object;
  #L25391a.  return @kind void;
}
procedure `void` `cancel`(`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall` v1 @kind this) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25392c.  v0:= v1.`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall.delegate` @type ^`retrofit2.Call` @kind object;
  #L253930.  call `cancel`(v0) @signature `Lretrofit2/Call;.cancel:()V` @kind interface;
  #L253936.  return @kind void;
}
procedure `java.lang.Object` `clone`(`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall` v1 @kind this) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L253864.  call temp:= `clone`(v1) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;.clone:()Lretrofit2/Call;` @kind virtual;
  #L25386a.  v0:= temp @kind object;
  #L25386c.  return v0 @kind object;
}
procedure `retrofit2.Call` `clone`(`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall` v3 @kind this) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;.clone:()Lretrofit2/Call;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2538c0.  v0:= new `retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall`;
  #L2538c4.  v1:= v3.`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall.callbackExecutor` @type ^`java.util.concurrent.Executor` @kind object;
  #L2538c8.  v2:= v3.`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall.delegate` @type ^`retrofit2.Call` @kind object;
  #L2538cc.  call temp:= `clone`(v2) @signature `Lretrofit2/Call;.clone:()Lretrofit2/Call;` @kind interface;
  #L2538d2.  v2:= temp @kind object;
  #L2538d4.  call `<init>`(v0, v1, v2) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;.<init>:(Ljava/util/concurrent/Executor;Lretrofit2/Call;)V` @kind direct;
  #L2538da.  return v0 @kind object;
}
procedure `void` `enqueue`(`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall` v2 @kind this, `retrofit2.Callback` v3 @kind object) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;.enqueue:(Lretrofit2/Callback;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L253948.  v0:= "callback == null" @kind object;
  #L25394c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L253952.  v0:= v2.`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall.delegate` @type ^`retrofit2.Call` @kind object;
  #L253956.  v1:= new `retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall$1`;
  #L25395a.  call `<init>`(v1, v2, v3) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall$1;.<init>:(Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;Lretrofit2/Callback;)V` @kind direct;
  #L253960.  call `enqueue`(v0, v1) @signature `Lretrofit2/Call;.enqueue:(Lretrofit2/Callback;)V` @kind interface;
  #L253966.  return @kind void;
}
procedure `retrofit2.Response` `execute`(`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall` v1 @kind this) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;.execute:()Lretrofit2/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2538ec.  v0:= v1.`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall.delegate` @type ^`retrofit2.Call` @kind object;
  #L2538f0.  call temp:= `execute`(v0) @signature `Lretrofit2/Call;.execute:()Lretrofit2/Response;` @kind interface;
  #L2538f6.  v0:= temp @kind object;
  #L2538f8.  return v0 @kind object;
}
procedure `boolean` `isCanceled`(`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall` v1 @kind this) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;.isCanceled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L253824.  v0:= v1.`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall.delegate` @type ^`retrofit2.Call` @kind object;
  #L253828.  call temp:= `isCanceled`(v0) @signature `Lretrofit2/Call;.isCanceled:()Z` @kind interface;
  #L25382e.  v0:= temp;
  #L253830.  return v0;
}
procedure `boolean` `isExecuted`(`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall` v1 @kind this) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;.isExecuted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L253844.  v0:= v1.`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall.delegate` @type ^`retrofit2.Call` @kind object;
  #L253848.  call temp:= `isExecuted`(v0) @signature `Lretrofit2/Call;.isExecuted:()Z` @kind interface;
  #L25384e.  v0:= temp;
  #L253850.  return v0;
}
procedure `h.g0` `request`(`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall` v1 @kind this) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;.request:()Lh/g0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L253880.  v0:= v1.`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall.delegate` @type ^`retrofit2.Call` @kind object;
  #L253884.  call temp:= `request`(v0) @signature `Lretrofit2/Call;.request:()Lh/g0;` @kind interface;
  #L25388a.  v0:= temp @kind object;
  #L25388c.  return v0 @kind object;
}
procedure `i.a0` `timeout`(`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall` v1 @kind this) @signature `Lretrofit2/DefaultCallAdapterFactory$ExecutorCallbackCall;.timeout:()Li/a0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2538a0.  v0:= v1.`retrofit2.DefaultCallAdapterFactory$ExecutorCallbackCall.delegate` @type ^`retrofit2.Call` @kind object;
  #L2538a4.  call temp:= `timeout`(v0) @signature `Lretrofit2/Call;.timeout:()Li/a0;` @kind interface;
  #L2538aa.  v0:= temp @kind object;
  #L2538ac.  return v0 @kind object;
}
