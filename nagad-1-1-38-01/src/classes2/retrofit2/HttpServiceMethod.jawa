record `retrofit2.HttpServiceMethod` @kind class @AccessFlag ABSTRACT extends `retrofit2.ServiceMethod` @kind class {
  `h.j$a` `retrofit2.HttpServiceMethod.callFactory` @AccessFlag PRIVATE_FINAL;
  `retrofit2.RequestFactory` `retrofit2.HttpServiceMethod.requestFactory` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Converter` `retrofit2.HttpServiceMethod.responseConverter` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.HttpServiceMethod` v0 @kind this, `retrofit2.RequestFactory` v1 @kind object, `h.j$a` v2 @kind object, `retrofit2.Converter` v3 @kind object) @signature `Lretrofit2/HttpServiceMethod;.<init>:(Lretrofit2/RequestFactory;Lh/j$a;Lretrofit2/Converter;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L253e6c.  call `<init>`(v0) @signature `Lretrofit2/ServiceMethod;.<init>:()V` @kind direct;
  #L253e72.  v0.`retrofit2.HttpServiceMethod.requestFactory` @type ^`retrofit2.RequestFactory` := v1 @kind object;
  #L253e76.  v0.`retrofit2.HttpServiceMethod.callFactory` @type ^`h.j$a` := v2 @kind object;
  #L253e7a.  v0.`retrofit2.HttpServiceMethod.responseConverter` @type ^`retrofit2.Converter` := v3 @kind object;
  #L253e7e.  return @kind void;
}
procedure `retrofit2.CallAdapter` `createCallAdapter`(`retrofit2.Retrofit` v1 @kind object, `java.lang.reflect.Method` v2 @kind object, `java.lang.reflect.Type` v3 @kind object, `java.lang.annotation.Annotation`[] v4 @kind object) @signature `Lretrofit2/HttpServiceMethod;.createCallAdapter:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L253c48.  call temp:= `callAdapter`(v1, v3, v4) @signature `Lretrofit2/Retrofit;.callAdapter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @kind virtual;
  #L253c4e.  v1:= temp @kind object;
  #L253c50.  return v1 @kind object;
  #L253c52.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L253c54.  v4:= 1I;
  #L253c56.  v4:= new `java.lang.Object`[v4];
  #L253c5a.  v0:= 0I;
  #L253c5c.  v4[v0]:= v3 @kind object;
  #L253c60.  v3:= "Unable to create call adapter for %s" @kind object;
  #L253c64.  call temp:= `methodError`(v2, v1, v3, v4) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L253c6a.  v1:= temp @kind object;
  #L253c6c.  throw v1;
  catch `java.lang.RuntimeException` @[L253c48..L253c50] goto L253c52;
}
procedure `retrofit2.Converter` `createResponseConverter`(`retrofit2.Retrofit` v2 @kind object, `java.lang.reflect.Method` v3 @kind object, `java.lang.reflect.Type` v4 @kind object) @signature `Lretrofit2/HttpServiceMethod;.createResponseConverter:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;Ljava/lang/reflect/Type;)Lretrofit2/Converter;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L253c90.  call temp:= `getAnnotations`(v3) @signature `Ljava/lang/reflect/Method;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L253c96.  v0:= temp @kind object;
  #L253c98.  call temp:= `responseBodyConverter`(v2, v4, v0) @signature `Lretrofit2/Retrofit;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L253c9e.  v2:= temp @kind object;
  #L253ca0.  return v2 @kind object;
  #L253ca2.  v2:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L253ca4.  v0:= 1I;
  #L253ca6.  v0:= new `java.lang.Object`[v0];
  #L253caa.  v1:= 0I;
  #L253cac.  v0[v1]:= v4 @kind object;
  #L253cb0.  v4:= "Unable to create converter for %s" @kind object;
  #L253cb4.  call temp:= `methodError`(v3, v2, v4, v0) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L253cba.  v2:= temp @kind object;
  #L253cbc.  throw v2;
  catch `java.lang.RuntimeException` @[L253c98..L253ca0] goto L253ca2;
}
procedure `retrofit2.HttpServiceMethod` `parseAnnotations`(`retrofit2.Retrofit` v13 @kind object, `java.lang.reflect.Method` v14 @kind object, `retrofit2.RequestFactory` v15 @kind object) @signature `Lretrofit2/HttpServiceMethod;.parseAnnotations:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;Lretrofit2/RequestFactory;)Lretrofit2/HttpServiceMethod;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L253ce0.  v3:= constclass @type ^`retrofit2.Response` @kind object;
  #L253ce4.  v4:= v15.`retrofit2.RequestFactory.isKotlinSuspendFunction` @type ^`boolean` @kind boolean;
  #L253ce8.  call temp:= `getAnnotations`(v14) @signature `Ljava/lang/reflect/Method;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L253cee.  v5:= temp @kind object;
  #L253cf0.  v6:= 0I;
  #L253cf2.  if v4 == 0 then goto L253d5c;
  #L253cf6.  call temp:= `getGenericParameterTypes`(v14) @signature `Ljava/lang/reflect/Method;.getGenericParameterTypes:()[Ljava/lang/reflect/Type;` @kind virtual;
  #L253cfc.  v7:= temp @kind object;
  #L253cfe.  v8:= length @variable v7;
  #L253d00.  v9:= 1I;
  #L253d02.  v8:= v8 - v9 @kind int;
  #L253d04.  v7:= v7[v8] @kind object;
  #L253d08.  v7:= (`java.lang.reflect.ParameterizedType`) v7 @kind object;
  #L253d0c.  call temp:= `getParameterLowerBound`(v6, v7) @signature `Lretrofit2/Utils;.getParameterLowerBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L253d12.  v7:= temp @kind object;
  #L253d14.  call temp:= `getRawType`(v7) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L253d1a.  v8:= temp @kind object;
  #L253d1c.  if v8 != v3 then goto L253d38;
  #L253d20.  v8:= instanceof @variable v7 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L253d24.  if v8 == 0 then goto L253d38;
  #L253d28.  v7:= (`java.lang.reflect.ParameterizedType`) v7 @kind object;
  #L253d2c.  call temp:= `getParameterUpperBound`(v6, v7) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L253d32.  v7:= temp @kind object;
  #L253d34.  v8:= 1I;
  #L253d36.  goto L253d3a;
  #L253d38.  v8:= 0I;
  #L253d3a.  v10:= new `retrofit2.Utils$ParameterizedTypeImpl`;
  #L253d3e.  v11:= 0I;
  #L253d40.  v12:= constclass @type ^`retrofit2.Call` @kind object;
  #L253d44.  v9:= new `java.lang.reflect.Type`[v9];
  #L253d48.  v9[v6]:= v7 @kind object;
  #L253d4c.  call `<init>`(v10, v11, v12, v9) @signature `Lretrofit2/Utils$ParameterizedTypeImpl;.<init>:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @kind direct;
  #L253d52.  call temp:= `ensurePresent`(v5) @signature `Lretrofit2/SkipCallbackExecutorImpl;.ensurePresent:([Ljava/lang/annotation/Annotation;)[Ljava/lang/annotation/Annotation;` @kind static;
  #L253d58.  v5:= temp @kind object;
  #L253d5a.  goto L253d66;
  #L253d5c.  call temp:= `getGenericReturnType`(v14) @signature `Ljava/lang/reflect/Method;.getGenericReturnType:()Ljava/lang/reflect/Type;` @kind virtual;
  #L253d62.  v10:= temp @kind object;
  #L253d64.  v8:= 0I;
  #L253d66.  call temp:= `createCallAdapter`(v13, v14, v10, v5) @signature `Lretrofit2/HttpServiceMethod;.createCallAdapter:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @kind static;
  #L253d6c.  v5:= temp @kind object;
  #L253d6e.  call temp:= `responseType`(v5) @signature `Lretrofit2/CallAdapter;.responseType:()Ljava/lang/reflect/Type;` @kind interface;
  #L253d74.  v7:= temp @kind object;
  #L253d76.  v9:= constclass @type ^`h.i0` @kind object;
  #L253d7a.  if v7 == v9 then goto L253e10;
  #L253d7e.  if v7 == v3 then goto L253dfe;
  #L253d82.  v3:= v15.`retrofit2.RequestFactory.httpMethod` @type ^`java.lang.String` @kind object;
  #L253d86.  v9:= "HEAD" @kind object;
  #L253d8a.  call temp:= `equals`(v3, v9) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L253d90.  v3:= temp;
  #L253d92.  if v3 == 0 then goto L253dba;
  #L253d96.  v3:= constclass @type ^`java.lang.Void` @kind object;
  #L253d9a.  call temp:= `equals`(v3, v7) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L253da0.  v3:= temp;
  #L253da2.  if v3 == 0 then goto L253da8;
  #L253da6.  goto L253dba;
  #L253da8.  v0:= new `java.lang.Object`[v6];
  #L253dac.  v2:= "HEAD method must use Void as response type." @kind object;
  #L253db0.  call temp:= `methodError`(v14, v2, v0) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L253db6.  v0:= temp @kind object;
  #L253db8.  throw v0;
  #L253dba.  call temp:= `createResponseConverter`(v13, v14, v7) @signature `Lretrofit2/HttpServiceMethod;.createResponseConverter:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;Ljava/lang/reflect/Type;)Lretrofit2/Converter;` @kind static;
  #L253dc0.  v3:= temp @kind object;
  #L253dc2.  v6:= v13.`retrofit2.Retrofit.callFactory` @type ^`h.j$a` @kind object;
  #L253dc6.  if v4 != 0 then goto L253dd6;
  #L253dca.  v0:= new `retrofit2.HttpServiceMethod$CallAdapted`;
  #L253dce.  call `<init>`(v0, v15, v6, v3, v5) @signature `Lretrofit2/HttpServiceMethod$CallAdapted;.<init>:(Lretrofit2/RequestFactory;Lh/j$a;Lretrofit2/Converter;Lretrofit2/CallAdapter;)V` @kind direct;
  #L253dd4.  return v0 @kind object;
  #L253dd6.  if v8 == 0 then goto L253de6;
  #L253dda.  v0:= new `retrofit2.HttpServiceMethod$SuspendForResponse`;
  #L253dde.  call `<init>`(v0, v15, v6, v3, v5) @signature `Lretrofit2/HttpServiceMethod$SuspendForResponse;.<init>:(Lretrofit2/RequestFactory;Lh/j$a;Lretrofit2/Converter;Lretrofit2/CallAdapter;)V` @kind direct;
  #L253de4.  return v0 @kind object;
  #L253de6.  v7:= new `retrofit2.HttpServiceMethod$SuspendForBody`;
  #L253dea.  v8:= 0I;
  #L253dec.  v0:= v7 @kind object;
  #L253dee.  v1:= v15 @kind object;
  #L253df0.  v2:= v6 @kind object;
  #L253df2.  v4:= v5 @kind object;
  #L253df4.  v5:= v8;
  #L253df6.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lretrofit2/HttpServiceMethod$SuspendForBody;.<init>:(Lretrofit2/RequestFactory;Lh/j$a;Lretrofit2/Converter;Lretrofit2/CallAdapter;Z)V` @kind direct;
  #L253dfc.  return v7 @kind object;
  #L253dfe.  v0:= new `java.lang.Object`[v6];
  #L253e02.  v2:= "Response must include generic type (e.g., Response<String>)" @kind object;
  #L253e06.  call temp:= `methodError`(v14, v2, v0) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L253e0c.  v0:= temp @kind object;
  #L253e0e.  throw v0;
  #L253e10.  v0:= new `java.lang.StringBuilder`;
  #L253e14.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L253e1a.  v2:= "'" @kind object;
  #L253e1e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L253e24.  call temp:= `getRawType`(v7) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L253e2a.  v2:= temp @kind object;
  #L253e2c.  call temp:= `getName`(v2) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L253e32.  v2:= temp @kind object;
  #L253e34.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L253e3a.  v2:= "' is not a valid response body type. Did you mean ResponseBody?" @kind object;
  #L253e3e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L253e44.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L253e4a.  v0:= temp @kind object;
  #L253e4c.  v2:= new `java.lang.Object`[v6];
  #L253e50.  call temp:= `methodError`(v14, v0, v2) @signature `Lretrofit2/Utils;.methodError:(Ljava/lang/reflect/Method;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind static;
  #L253e56.  v0:= temp @kind object;
  #L253e58.  throw v0;
}
procedure `java.lang.Object` `adapt`(`retrofit2.Call` v0 @kind object, `java.lang.Object`[] v1 @kind object) @signature `Lretrofit2/HttpServiceMethod;.adapt:(Lretrofit2/Call;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `invoke`(`retrofit2.HttpServiceMethod` v4 @kind this, `java.lang.Object`[] v5 @kind object) @signature `Lretrofit2/HttpServiceMethod;.invoke:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L253c18.  v0:= new `retrofit2.OkHttpCall`;
  #L253c1c.  v1:= v4.`retrofit2.HttpServiceMethod.requestFactory` @type ^`retrofit2.RequestFactory` @kind object;
  #L253c20.  v2:= v4.`retrofit2.HttpServiceMethod.callFactory` @type ^`h.j$a` @kind object;
  #L253c24.  v3:= v4.`retrofit2.HttpServiceMethod.responseConverter` @type ^`retrofit2.Converter` @kind object;
  #L253c28.  call `<init>`(v0, v1, v5, v2, v3) @signature `Lretrofit2/OkHttpCall;.<init>:(Lretrofit2/RequestFactory;[Ljava/lang/Object;Lh/j$a;Lretrofit2/Converter;)V` @kind direct;
  #L253c2e.  call temp:= `adapt`(v4, v0, v5) @signature `Lretrofit2/HttpServiceMethod;.adapt:(Lretrofit2/Call;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L253c34.  v5:= temp @kind object;
  #L253c36.  return v5 @kind object;
}
