record `retrofit2.ParameterHandler$Header` @kind class @AccessFlag FINAL extends `retrofit2.ParameterHandler` @kind class {
  `java.lang.String` `retrofit2.ParameterHandler$Header.name` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Converter` `retrofit2.ParameterHandler$Header.valueConverter` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.ParameterHandler$Header` v1 @kind this, `java.lang.String` v2 @kind object, `retrofit2.Converter` v3 @kind object) @signature `Lretrofit2/ParameterHandler$Header;.<init>:(Ljava/lang/String;Lretrofit2/Converter;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2553e4.  call `<init>`(v1) @signature `Lretrofit2/ParameterHandler;.<init>:()V` @kind direct;
  #L2553ea.  v0:= "name == null" @kind object;
  #L2553ee.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2553f4.  v2:= temp @kind object;
  #L2553f6.  v2:= (`java.lang.String`) v2 @kind object;
  #L2553fa.  v1.`retrofit2.ParameterHandler$Header.name` @type ^`java.lang.String` := v2 @kind object;
  #L2553fe.  v1.`retrofit2.ParameterHandler$Header.valueConverter` @type ^`retrofit2.Converter` := v3 @kind object;
  #L255402.  return @kind void;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$Header` v1 @kind this, `retrofit2.RequestBuilder` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lretrofit2/ParameterHandler$Header;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;

  #L255414.  if v3 != 0 then goto L25541a;
  #L255418.  return @kind void;
  #L25541a.  v0:= v1.`retrofit2.ParameterHandler$Header.valueConverter` @type ^`retrofit2.Converter` @kind object;
  #L25541e.  call temp:= `convert`(v0, v3) @signature `Lretrofit2/Converter;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L255424.  v3:= temp @kind object;
  #L255426.  v3:= (`java.lang.String`) v3 @kind object;
  #L25542a.  if v3 != 0 then goto L255430;
  #L25542e.  return @kind void;
  #L255430.  v0:= v1.`retrofit2.ParameterHandler$Header.name` @type ^`java.lang.String` @kind object;
  #L255434.  call `addHeader`(v2, v0, v3) @signature `Lretrofit2/RequestBuilder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L25543a.  return @kind void;
}
