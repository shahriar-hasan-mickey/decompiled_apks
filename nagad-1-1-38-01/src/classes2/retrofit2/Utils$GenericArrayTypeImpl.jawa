record `retrofit2.Utils$GenericArrayTypeImpl` @kind class @AccessFlag FINAL extends `java.lang.reflect.GenericArrayType` @kind interface {
  `java.lang.reflect.Type` `retrofit2.Utils$GenericArrayTypeImpl.componentType` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.Utils$GenericArrayTypeImpl` v0 @kind this, `java.lang.reflect.Type` v1 @kind object) @signature `Lretrofit2/Utils$GenericArrayTypeImpl;.<init>:(Ljava/lang/reflect/Type;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L258eb4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L258eba.  v0.`retrofit2.Utils$GenericArrayTypeImpl.componentType` @type ^`java.lang.reflect.Type` := v1 @kind object;
  #L258ebe.  return @kind void;
}
procedure `boolean` `equals`(`retrofit2.Utils$GenericArrayTypeImpl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lretrofit2/Utils$GenericArrayTypeImpl;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L258e0c.  v0:= instanceof @variable v2 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L258e10.  if v0 == 0 then goto L258e28;
  #L258e14.  v2:= (`java.lang.reflect.GenericArrayType`) v2 @kind object;
  #L258e18.  call temp:= `equals`(v1, v2) @signature `Lretrofit2/Utils;.equals:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z` @kind static;
  #L258e1e.  v2:= temp;
  #L258e20.  if v2 == 0 then goto L258e28;
  #L258e24.  v2:= 1I;
  #L258e26.  goto L258e2a;
  #L258e28.  v2:= 0I;
  #L258e2a.  return v2;
}
procedure `java.lang.reflect.Type` `getGenericComponentType`(`retrofit2.Utils$GenericArrayTypeImpl` v1 @kind this) @signature `Lretrofit2/Utils$GenericArrayTypeImpl;.getGenericComponentType:()Ljava/lang/reflect/Type;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L258e9c.  v0:= v1.`retrofit2.Utils$GenericArrayTypeImpl.componentType` @type ^`java.lang.reflect.Type` @kind object;
  #L258ea0.  return v0 @kind object;
}
procedure `int` `hashCode`(`retrofit2.Utils$GenericArrayTypeImpl` v1 @kind this) @signature `Lretrofit2/Utils$GenericArrayTypeImpl;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L258e3c.  v0:= v1.`retrofit2.Utils$GenericArrayTypeImpl.componentType` @type ^`java.lang.reflect.Type` @kind object;
  #L258e40.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L258e46.  v0:= temp;
  #L258e48.  return v0;
}
procedure `java.lang.String` `toString`(`retrofit2.Utils$GenericArrayTypeImpl` v2 @kind this) @signature `Lretrofit2/Utils$GenericArrayTypeImpl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L258e5c.  v0:= new `java.lang.StringBuilder`;
  #L258e60.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L258e66.  v1:= v2.`retrofit2.Utils$GenericArrayTypeImpl.componentType` @type ^`java.lang.reflect.Type` @kind object;
  #L258e6a.  call temp:= `typeToString`(v1) @signature `Lretrofit2/Utils;.typeToString:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @kind static;
  #L258e70.  v1:= temp @kind object;
  #L258e72.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L258e78.  v1:= "[]" @kind object;
  #L258e7c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L258e82.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L258e88.  v0:= temp @kind object;
  #L258e8a.  return v0 @kind object;
}
