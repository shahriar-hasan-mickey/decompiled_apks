record `retrofit2.KotlinExtensions$await$4$2` @kind class @AccessFlag PUBLIC_FINAL extends `retrofit2.Callback` @kind interface {
  `kotlinx.coroutines.h` `retrofit2.KotlinExtensions$await$4$2.$continuation` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`retrofit2.KotlinExtensions$await$4$2` v0 @kind this, `kotlinx.coroutines.h` v1 @kind object) @signature `Lretrofit2/KotlinExtensions$await$4$2;.<init>:(Lkotlinx/coroutines/h;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2541dc.  v0.`retrofit2.KotlinExtensions$await$4$2.$continuation` @type ^`kotlinx.coroutines.h` := v1 @kind object;
  #L2541e0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2541e6.  return @kind void;
}
procedure `void` `onFailure`(`retrofit2.KotlinExtensions$await$4$2` v1 @kind this, `retrofit2.Call` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lretrofit2/KotlinExtensions$await$4$2;.onFailure:(Lretrofit2/Call;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2541f8.  v0:= "call" @kind object;
  #L2541fc.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L254202.  v2:= "t" @kind object;
  #L254206.  call `checkParameterIsNotNull`(v3, v2) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L25420c.  v2:= v1.`retrofit2.KotlinExtensions$await$4$2.$continuation` @type ^`kotlinx.coroutines.h` @kind object;
  #L254210.  v0:= `@@kotlin.l.f` @type ^`kotlin.l$a` @kind object;
  #L254214.  call temp:= `createFailure`(v3) @signature `Lkotlin/m;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L25421a.  v3:= temp @kind object;
  #L25421c.  call temp:= `constructor-impl`(v3) @signature `Lkotlin/l;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L254222.  call `resumeWith`(v2, v3) @signature `Lkotlin/t/d;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L254228.  return @kind void;
}
procedure `void` `onResponse`(`retrofit2.KotlinExtensions$await$4$2` v1 @kind this, `retrofit2.Call` v2 @kind object, `retrofit2.Response` v3 @kind object) @signature `Lretrofit2/KotlinExtensions$await$4$2;.onResponse:(Lretrofit2/Call;Lretrofit2/Response;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25423c.  v0:= "call" @kind object;
  #L254240.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L254246.  v2:= "response" @kind object;
  #L25424a.  call `checkParameterIsNotNull`(v3, v2) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L254250.  call temp:= `isSuccessful`(v3) @signature `Lretrofit2/Response;.isSuccessful:()Z` @kind virtual;
  #L254256.  v2:= temp;
  #L254258.  if v2 == 0 then goto L25427a;
  #L25425c.  v2:= v1.`retrofit2.KotlinExtensions$await$4$2.$continuation` @type ^`kotlinx.coroutines.h` @kind object;
  #L254260.  call temp:= `body`(v3) @signature `Lretrofit2/Response;.body:()Ljava/lang/Object;` @kind virtual;
  #L254266.  v3:= temp @kind object;
  #L254268.  v0:= `@@kotlin.l.f` @type ^`kotlin.l$a` @kind object;
  #L25426c.  call temp:= `constructor-impl`(v3) @signature `Lkotlin/l;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L254272.  call `resumeWith`(v2, v3) @signature `Lkotlin/t/d;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L254278.  goto L2542a0;
  #L25427a.  v2:= v1.`retrofit2.KotlinExtensions$await$4$2.$continuation` @type ^`kotlinx.coroutines.h` @kind object;
  #L25427e.  v0:= new `retrofit2.HttpException`;
  #L254282.  call `<init>`(v0, v3) @signature `Lretrofit2/HttpException;.<init>:(Lretrofit2/Response;)V` @kind direct;
  #L254288.  v3:= `@@kotlin.l.f` @type ^`kotlin.l$a` @kind object;
  #L25428c.  call temp:= `createFailure`(v0) @signature `Lkotlin/m;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L254292.  v3:= temp @kind object;
  #L254294.  call temp:= `constructor-impl`(v3) @signature `Lkotlin/l;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L25429a.  call `resumeWith`(v2, v3) @signature `Lkotlin/t/d;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L2542a0.  return @kind void;
}
