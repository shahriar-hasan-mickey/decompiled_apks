record `retrofit2.Retrofit` @kind class @AccessFlag PUBLIC_FINAL {
  `h.z` `retrofit2.Retrofit.baseUrl` @AccessFlag FINAL;
  `java.util.List` `retrofit2.Retrofit.callAdapterFactories` @AccessFlag FINAL;
  `h.j$a` `retrofit2.Retrofit.callFactory` @AccessFlag FINAL;
  `java.util.concurrent.Executor` `retrofit2.Retrofit.callbackExecutor` @AccessFlag FINAL;
  `java.util.List` `retrofit2.Retrofit.converterFactories` @AccessFlag FINAL;
  `java.util.Map` `retrofit2.Retrofit.serviceMethodCache` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.Retrofit.validateEagerly` @AccessFlag FINAL;
}
procedure `void` `<init>`(`retrofit2.Retrofit` v1 @kind this, `h.j$a` v2 @kind object, `h.z` v3 @kind object, `java.util.List` v4 @kind object, `java.util.List` v5 @kind object, `java.util.concurrent.Executor` v6 @kind object, `boolean` v7 ) @signature `Lretrofit2/Retrofit;.<init>:(Lh/j$a;Lh/z;Ljava/util/List;Ljava/util/List;Ljava/util/concurrent/Executor;Z)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L258b2c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L258b32.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L258b36.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L258b3c.  v1.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` := v0 @kind object;
  #L258b40.  v1.`retrofit2.Retrofit.callFactory` @type ^`h.j$a` := v2 @kind object;
  #L258b44.  v1.`retrofit2.Retrofit.baseUrl` @type ^`h.z` := v3 @kind object;
  #L258b48.  v1.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` := v4 @kind object;
  #L258b4c.  v1.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` := v5 @kind object;
  #L258b50.  v1.`retrofit2.Retrofit.callbackExecutor` @type ^`java.util.concurrent.Executor` := v6 @kind object;
  #L258b54.  v1.`retrofit2.Retrofit.validateEagerly` @type ^`boolean` := v7 @kind boolean;
  #L258b58.  return @kind void;
}
procedure `void` `validateServiceInterface`(`retrofit2.Retrofit` v5 @kind this, `java.lang.Class` v6 @kind object) @signature `Lretrofit2/Retrofit;.validateServiceInterface:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L258b6c.  call temp:= `isInterface`(v6) @signature `Ljava/lang/Class;.isInterface:()Z` @kind virtual;
  #L258b72.  v0:= temp;
  #L258b74.  if v0 == 0 then goto L258c5e;
  #L258b78.  v0:= new `java.util.ArrayDeque`;
  #L258b7c.  v1:= 1I;
  #L258b7e.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayDeque;.<init>:(I)V` @kind direct;
  #L258b84.  call temp:= `add`(v0, v6) @signature `Ljava/util/Deque;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L258b8a.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Deque;.isEmpty:()Z` @kind interface;
  #L258b90.  v1:= temp;
  #L258b92.  if v1 != 0 then goto L258c0c;
  #L258b96.  call temp:= `removeFirst`(v0) @signature `Ljava/util/Deque;.removeFirst:()Ljava/lang/Object;` @kind interface;
  #L258b9c.  v1:= temp @kind object;
  #L258b9e.  v1:= (`java.lang.Class`) v1 @kind object;
  #L258ba2.  call temp:= `getTypeParameters`(v1) @signature `Ljava/lang/Class;.getTypeParameters:()[Ljava/lang/reflect/TypeVariable;` @kind virtual;
  #L258ba8.  v2:= temp @kind object;
  #L258baa.  v2:= length @variable v2;
  #L258bac.  if v2 == 0 then goto L258bfc;
  #L258bb0.  v0:= new `java.lang.StringBuilder`;
  #L258bb4.  v2:= "Type parameters are unsupported on " @kind object;
  #L258bb8.  call `<init>`(v0, v2) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L258bbe.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L258bc4.  v2:= temp @kind object;
  #L258bc6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L258bcc.  if v1 == v6 then goto L258be8;
  #L258bd0.  v1:= " which is an interface of " @kind object;
  #L258bd4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L258bda.  call temp:= `getName`(v6) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L258be0.  v6:= temp @kind object;
  #L258be2.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L258be8.  v6:= new `java.lang.IllegalArgumentException`;
  #L258bec.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L258bf2.  v0:= temp @kind object;
  #L258bf4.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L258bfa.  throw v6;
  #L258bfc.  call temp:= `getInterfaces`(v1) @signature `Ljava/lang/Class;.getInterfaces:()[Ljava/lang/Class;` @kind virtual;
  #L258c02.  v1:= temp @kind object;
  #L258c04.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/Collections;.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z` @kind static;
  #L258c0a.  goto L258b8a;
  #L258c0c.  v0:= v5.`retrofit2.Retrofit.validateEagerly` @type ^`boolean` @kind boolean;
  #L258c10.  if v0 == 0 then goto L258c5c;
  #L258c14.  call temp:= `get`() @signature `Lretrofit2/Platform;.get:()Lretrofit2/Platform;` @kind static;
  #L258c1a.  v0:= temp @kind object;
  #L258c1c.  call temp:= `getDeclaredMethods`(v6) @signature `Ljava/lang/Class;.getDeclaredMethods:()[Ljava/lang/reflect/Method;` @kind virtual;
  #L258c22.  v6:= temp @kind object;
  #L258c24.  v1:= length @variable v6;
  #L258c26.  v2:= 0I;
  #L258c28.  if v2 >= v1 then goto L258c5c;
  #L258c2c.  v3:= v6[v2] @kind object;
  #L258c30.  call temp:= `isDefaultMethod`(v0, v3) @signature `Lretrofit2/Platform;.isDefaultMethod:(Ljava/lang/reflect/Method;)Z` @kind virtual;
  #L258c36.  v4:= temp;
  #L258c38.  if v4 != 0 then goto L258c56;
  #L258c3c.  call temp:= `getModifiers`(v3) @signature `Ljava/lang/reflect/Method;.getModifiers:()I` @kind virtual;
  #L258c42.  v4:= temp;
  #L258c44.  call temp:= `isStatic`(v4) @signature `Ljava/lang/reflect/Modifier;.isStatic:(I)Z` @kind static;
  #L258c4a.  v4:= temp;
  #L258c4c.  if v4 != 0 then goto L258c56;
  #L258c50.  call temp:= `loadServiceMethod`(v5, v3) @signature `Lretrofit2/Retrofit;.loadServiceMethod:(Ljava/lang/reflect/Method;)Lretrofit2/ServiceMethod;` @kind virtual;
  #L258c56.  v2:= v2 + 1;
  #L258c5a.  goto L258c28;
  #L258c5c.  return @kind void;
  #L258c5e.  v6:= new `java.lang.IllegalArgumentException`;
  #L258c62.  v0:= "API declarations must be interfaces." @kind object;
  #L258c66.  call `<init>`(v6, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L258c6c.  throw v6;
}
procedure `h.z` `baseUrl`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.baseUrl:()Lh/z;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25861c.  v0:= v1.`retrofit2.Retrofit.baseUrl` @type ^`h.z` @kind object;
  #L258620.  return v0 @kind object;
}
procedure `retrofit2.CallAdapter` `callAdapter`(`retrofit2.Retrofit` v1 @kind this, `java.lang.reflect.Type` v2 @kind object, `java.lang.annotation.Annotation`[] v3 @kind object) @signature `Lretrofit2/Retrofit;.callAdapter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L258634.  v0:= 0I;
  #L258636.  call temp:= `nextCallAdapter`(v1, v0, v2, v3) @signature `Lretrofit2/Retrofit;.nextCallAdapter:(Lretrofit2/CallAdapter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @kind virtual;
  #L25863c.  v2:= temp @kind object;
  #L25863e.  return v2 @kind object;
}
procedure `java.util.List` `callAdapterFactories`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.callAdapterFactories:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2585bc.  v0:= v1.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L2585c0.  return v0 @kind object;
}
procedure `h.j$a` `callFactory`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.callFactory:()Lh/j$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L258604.  v0:= v1.`retrofit2.Retrofit.callFactory` @type ^`h.j$a` @kind object;
  #L258608.  return v0 @kind object;
}
procedure `java.util.concurrent.Executor` `callbackExecutor`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.callbackExecutor:()Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2585ec.  v0:= v1.`retrofit2.Retrofit.callbackExecutor` @type ^`java.util.concurrent.Executor` @kind object;
  #L2585f0.  return v0 @kind object;
}
procedure `java.util.List` `converterFactories`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.converterFactories:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2585d4.  v0:= v1.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L2585d8.  return v0 @kind object;
}
procedure `java.lang.Object` `create`(`retrofit2.Retrofit` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lretrofit2/Retrofit;.create:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L25857c.  call `validateServiceInterface`(v3, v4) @signature `Lretrofit2/Retrofit;.validateServiceInterface:(Ljava/lang/Class;)V` @kind direct;
  #L258582.  call temp:= `getClassLoader`(v4) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L258588.  v0:= temp @kind object;
  #L25858a.  v1:= 1I;
  #L25858c.  v1:= new `java.lang.Class`[v1];
  #L258590.  v2:= 0I;
  #L258592.  v1[v2]:= v4 @kind object;
  #L258596.  v2:= new `retrofit2.Retrofit$1`;
  #L25859a.  call `<init>`(v2, v3, v4) @signature `Lretrofit2/Retrofit$1;.<init>:(Lretrofit2/Retrofit;Ljava/lang/Class;)V` @kind direct;
  #L2585a0.  call temp:= `newProxyInstance`(v0, v1, v2) @signature `Ljava/lang/reflect/Proxy;.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;` @kind static;
  #L2585a6.  v4:= temp @kind object;
  #L2585a8.  return v4 @kind object;
}
procedure `retrofit2.ServiceMethod` `loadServiceMethod`(`retrofit2.Retrofit` v3 @kind this, `java.lang.reflect.Method` v4 @kind object) @signature `Lretrofit2/Retrofit;.loadServiceMethod:(Ljava/lang/reflect/Method;)Lretrofit2/ServiceMethod;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L258ac4.  v0:= v3.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L258ac8.  call temp:= `get`(v0, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L258ace.  v0:= temp @kind object;
  #L258ad0.  v0:= (`retrofit2.ServiceMethod`) v0 @kind object;
  #L258ad4.  if v0 == 0 then goto L258ada;
  #L258ad8.  return v0 @kind object;
  #L258ada.  v0:= v3.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L258ade.  @monitorenter v0
  #L258ae0.  v1:= v3.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L258ae4.  call temp:= `get`(v1, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L258aea.  v1:= temp @kind object;
  #L258aec.  v1:= (`retrofit2.ServiceMethod`) v1 @kind object;
  #L258af0.  if v1 != 0 then goto L258b06;
  #L258af4.  call temp:= `parseAnnotations`(v3, v4) @signature `Lretrofit2/ServiceMethod;.parseAnnotations:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;)Lretrofit2/ServiceMethod;` @kind static;
  #L258afa.  v1:= temp @kind object;
  #L258afc.  v2:= v3.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L258b00.  call temp:= `put`(v2, v4, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L258b06.  @monitorexit v0
  #L258b08.  return v1 @kind object;
  #L258b0a.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L258b0c.  @monitorexit v0
  #L258b0e.  throw v4;
  catch `java.lang.Throwable` @[L258ae0..L258b0e] goto L258b0a;
}
procedure `retrofit2.Retrofit$Builder` `newBuilder`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.newBuilder:()Lretrofit2/Retrofit$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L258aa8.  v0:= new `retrofit2.Retrofit$Builder`;
  #L258aac.  call `<init>`(v0, v1) @signature `Lretrofit2/Retrofit$Builder;.<init>:(Lretrofit2/Retrofit;)V` @kind direct;
  #L258ab2.  return v0 @kind object;
}
procedure `retrofit2.CallAdapter` `nextCallAdapter`(`retrofit2.Retrofit` v4 @kind this, `retrofit2.CallAdapter$Factory` v5 @kind object, `java.lang.reflect.Type` v6 @kind object, `java.lang.annotation.Annotation`[] v7 @kind object) @signature `Lretrofit2/Retrofit;.nextCallAdapter:(Lretrofit2/CallAdapter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L258650.  v0:= "returnType == null" @kind object;
  #L258654.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L25865a.  v0:= "annotations == null" @kind object;
  #L25865e.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L258664.  v0:= v4.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L258668.  call temp:= `indexOf`(v0, v5) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L25866e.  v0:= temp;
  #L258670.  v0:= v0 + 1;
  #L258674.  v1:= v4.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L258678.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L25867e.  v1:= temp;
  #L258680.  v2:= v0;
  #L258682.  if v2 >= v1 then goto L2586aa;
  #L258686.  v3:= v4.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L25868a.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L258690.  v3:= temp @kind object;
  #L258692.  v3:= (`retrofit2.CallAdapter$Factory`) v3 @kind object;
  #L258696.  call temp:= `get`(v3, v6, v7, v4) @signature `Lretrofit2/CallAdapter$Factory;.get:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/CallAdapter;` @kind virtual;
  #L25869c.  v3:= temp @kind object;
  #L25869e.  if v3 == 0 then goto L2586a4;
  #L2586a2.  return v3 @kind object;
  #L2586a4.  v2:= v2 + 1;
  #L2586a8.  goto L258682;
  #L2586aa.  v7:= new `java.lang.StringBuilder`;
  #L2586ae.  v1:= "Could not locate call adapter for " @kind object;
  #L2586b2.  call `<init>`(v7, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2586b8.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2586be.  v6:= ".\n" @kind object;
  #L2586c2.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2586c8.  v6:= "\n   * " @kind object;
  #L2586cc.  if v5 == 0 then goto L25871c;
  #L2586d0.  v5:= "  Skipped:" @kind object;
  #L2586d4.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2586da.  v5:= 0I;
  #L2586dc.  if v5 >= v0 then goto L258712;
  #L2586e0.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2586e6.  v1:= v4.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L2586ea.  call temp:= `get`(v1, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2586f0.  v1:= temp @kind object;
  #L2586f2.  v1:= (`retrofit2.CallAdapter$Factory`) v1 @kind object;
  #L2586f6.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2586fc.  v1:= temp @kind object;
  #L2586fe.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L258704.  v1:= temp @kind object;
  #L258706.  call temp:= `append`(v7, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25870c.  v5:= v5 + 1;
  #L258710.  goto L2586dc;
  #L258712.  v5:= 10I;
  #L258716.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L25871c.  v5:= "  Tried:" @kind object;
  #L258720.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L258726.  v5:= v4.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L25872a.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L258730.  v5:= temp;
  #L258732.  if v0 >= v5 then goto L258768;
  #L258736.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25873c.  v1:= v4.`retrofit2.Retrofit.callAdapterFactories` @type ^`java.util.List` @kind object;
  #L258740.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L258746.  v1:= temp @kind object;
  #L258748.  v1:= (`retrofit2.CallAdapter$Factory`) v1 @kind object;
  #L25874c.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L258752.  v1:= temp @kind object;
  #L258754.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L25875a.  v1:= temp @kind object;
  #L25875c.  call temp:= `append`(v7, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L258762.  v0:= v0 + 1;
  #L258766.  goto L258732;
  #L258768.  v5:= new `java.lang.IllegalArgumentException`;
  #L25876c.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L258772.  v6:= temp @kind object;
  #L258774.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25877a.  throw v5;
}
procedure `retrofit2.Converter` `nextRequestBodyConverter`(`retrofit2.Retrofit` v4 @kind this, `retrofit2.Converter$Factory` v5 @kind object, `java.lang.reflect.Type` v6 @kind object, `java.lang.annotation.Annotation`[] v7 @kind object, `java.lang.annotation.Annotation`[] v8 @kind object) @signature `Lretrofit2/Retrofit;.nextRequestBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L25878c.  v0:= "type == null" @kind object;
  #L258790.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L258796.  v0:= "parameterAnnotations == null" @kind object;
  #L25879a.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2587a0.  v0:= "methodAnnotations == null" @kind object;
  #L2587a4.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2587aa.  v0:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L2587ae.  call temp:= `indexOf`(v0, v5) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L2587b4.  v0:= temp;
  #L2587b6.  v0:= v0 + 1;
  #L2587ba.  v1:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L2587be.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2587c4.  v1:= temp;
  #L2587c6.  v2:= v0;
  #L2587c8.  if v2 >= v1 then goto L2587f0;
  #L2587cc.  v3:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L2587d0.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2587d6.  v3:= temp @kind object;
  #L2587d8.  v3:= (`retrofit2.Converter$Factory`) v3 @kind object;
  #L2587dc.  call temp:= `requestBodyConverter`(v3, v6, v7, v8, v4) @signature `Lretrofit2/Converter$Factory;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @kind virtual;
  #L2587e2.  v3:= temp @kind object;
  #L2587e4.  if v3 == 0 then goto L2587ea;
  #L2587e8.  return v3 @kind object;
  #L2587ea.  v2:= v2 + 1;
  #L2587ee.  goto L2587c8;
  #L2587f0.  v7:= new `java.lang.StringBuilder`;
  #L2587f4.  v8:= "Could not locate RequestBody converter for " @kind object;
  #L2587f8.  call `<init>`(v7, v8) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2587fe.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L258804.  v6:= ".\n" @kind object;
  #L258808.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25880e.  v6:= "\n   * " @kind object;
  #L258812.  if v5 == 0 then goto L258862;
  #L258816.  v5:= "  Skipped:" @kind object;
  #L25881a.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L258820.  v5:= 0I;
  #L258822.  if v5 >= v0 then goto L258858;
  #L258826.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25882c.  v8:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L258830.  call temp:= `get`(v8, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L258836.  v8:= temp @kind object;
  #L258838.  v8:= (`retrofit2.Converter$Factory`) v8 @kind object;
  #L25883c.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L258842.  v8:= temp @kind object;
  #L258844.  call temp:= `getName`(v8) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L25884a.  v8:= temp @kind object;
  #L25884c.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L258852.  v5:= v5 + 1;
  #L258856.  goto L258822;
  #L258858.  v5:= 10I;
  #L25885c.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L258862.  v5:= "  Tried:" @kind object;
  #L258866.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25886c.  v5:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L258870.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L258876.  v5:= temp;
  #L258878.  if v0 >= v5 then goto L2588ae;
  #L25887c.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L258882.  v8:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L258886.  call temp:= `get`(v8, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L25888c.  v8:= temp @kind object;
  #L25888e.  v8:= (`retrofit2.Converter$Factory`) v8 @kind object;
  #L258892.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L258898.  v8:= temp @kind object;
  #L25889a.  call temp:= `getName`(v8) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2588a0.  v8:= temp @kind object;
  #L2588a2.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2588a8.  v0:= v0 + 1;
  #L2588ac.  goto L258878;
  #L2588ae.  v5:= new `java.lang.IllegalArgumentException`;
  #L2588b2.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2588b8.  v6:= temp @kind object;
  #L2588ba.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2588c0.  throw v5;
}
procedure `retrofit2.Converter` `nextResponseBodyConverter`(`retrofit2.Retrofit` v4 @kind this, `retrofit2.Converter$Factory` v5 @kind object, `java.lang.reflect.Type` v6 @kind object, `java.lang.annotation.Annotation`[] v7 @kind object) @signature `Lretrofit2/Retrofit;.nextResponseBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2588d4.  v0:= "type == null" @kind object;
  #L2588d8.  call temp:= `requireNonNull`(v6, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2588de.  v0:= "annotations == null" @kind object;
  #L2588e2.  call temp:= `requireNonNull`(v7, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2588e8.  v0:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L2588ec.  call temp:= `indexOf`(v0, v5) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L2588f2.  v0:= temp;
  #L2588f4.  v0:= v0 + 1;
  #L2588f8.  v1:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L2588fc.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L258902.  v1:= temp;
  #L258904.  v2:= v0;
  #L258906.  if v2 >= v1 then goto L25892e;
  #L25890a.  v3:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L25890e.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L258914.  v3:= temp @kind object;
  #L258916.  v3:= (`retrofit2.Converter$Factory`) v3 @kind object;
  #L25891a.  call temp:= `responseBodyConverter`(v3, v6, v7, v4) @signature `Lretrofit2/Converter$Factory;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @kind virtual;
  #L258920.  v3:= temp @kind object;
  #L258922.  if v3 == 0 then goto L258928;
  #L258926.  return v3 @kind object;
  #L258928.  v2:= v2 + 1;
  #L25892c.  goto L258906;
  #L25892e.  v7:= new `java.lang.StringBuilder`;
  #L258932.  v1:= "Could not locate ResponseBody converter for " @kind object;
  #L258936.  call `<init>`(v7, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25893c.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L258942.  v6:= ".\n" @kind object;
  #L258946.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25894c.  v6:= "\n   * " @kind object;
  #L258950.  if v5 == 0 then goto L2589a0;
  #L258954.  v5:= "  Skipped:" @kind object;
  #L258958.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25895e.  v5:= 0I;
  #L258960.  if v5 >= v0 then goto L258996;
  #L258964.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25896a.  v1:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L25896e.  call temp:= `get`(v1, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L258974.  v1:= temp @kind object;
  #L258976.  v1:= (`retrofit2.Converter$Factory`) v1 @kind object;
  #L25897a.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L258980.  v1:= temp @kind object;
  #L258982.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L258988.  v1:= temp @kind object;
  #L25898a.  call temp:= `append`(v7, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L258990.  v5:= v5 + 1;
  #L258994.  goto L258960;
  #L258996.  v5:= 10I;
  #L25899a.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2589a0.  v5:= "  Tried:" @kind object;
  #L2589a4.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2589aa.  v5:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L2589ae.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2589b4.  v5:= temp;
  #L2589b6.  if v0 >= v5 then goto L2589ec;
  #L2589ba.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2589c0.  v1:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L2589c4.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2589ca.  v1:= temp @kind object;
  #L2589cc.  v1:= (`retrofit2.Converter$Factory`) v1 @kind object;
  #L2589d0.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2589d6.  v1:= temp @kind object;
  #L2589d8.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2589de.  v1:= temp @kind object;
  #L2589e0.  call temp:= `append`(v7, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2589e6.  v0:= v0 + 1;
  #L2589ea.  goto L2589b6;
  #L2589ec.  v5:= new `java.lang.IllegalArgumentException`;
  #L2589f0.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2589f6.  v6:= temp @kind object;
  #L2589f8.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2589fe.  throw v5;
}
procedure `retrofit2.Converter` `requestBodyConverter`(`retrofit2.Retrofit` v1 @kind this, `java.lang.reflect.Type` v2 @kind object, `java.lang.annotation.Annotation`[] v3 @kind object, `java.lang.annotation.Annotation`[] v4 @kind object) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L258a10.  v0:= 0I;
  #L258a12.  call temp:= `nextRequestBodyConverter`(v1, v0, v2, v3, v4) @signature `Lretrofit2/Retrofit;.nextRequestBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L258a18.  v2:= temp @kind object;
  #L258a1a.  return v2 @kind object;
}
procedure `retrofit2.Converter` `responseBodyConverter`(`retrofit2.Retrofit` v1 @kind this, `java.lang.reflect.Type` v2 @kind object, `java.lang.annotation.Annotation`[] v3 @kind object) @signature `Lretrofit2/Retrofit;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L258a2c.  v0:= 0I;
  #L258a2e.  call temp:= `nextResponseBodyConverter`(v1, v0, v2, v3) @signature `Lretrofit2/Retrofit;.nextResponseBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L258a34.  v2:= temp @kind object;
  #L258a36.  return v2 @kind object;
}
procedure `retrofit2.Converter` `stringConverter`(`retrofit2.Retrofit` v3 @kind this, `java.lang.reflect.Type` v4 @kind object, `java.lang.annotation.Annotation`[] v5 @kind object) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L258a48.  v0:= "type == null" @kind object;
  #L258a4c.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L258a52.  v0:= "annotations == null" @kind object;
  #L258a56.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L258a5c.  v0:= v3.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L258a60.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L258a66.  v0:= temp;
  #L258a68.  v1:= 0I;
  #L258a6a.  if v1 >= v0 then goto L258a92;
  #L258a6e.  v2:= v3.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L258a72.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L258a78.  v2:= temp @kind object;
  #L258a7a.  v2:= (`retrofit2.Converter$Factory`) v2 @kind object;
  #L258a7e.  call temp:= `stringConverter`(v2, v4, v5, v3) @signature `Lretrofit2/Converter$Factory;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @kind virtual;
  #L258a84.  v2:= temp @kind object;
  #L258a86.  if v2 == 0 then goto L258a8c;
  #L258a8a.  return v2 @kind object;
  #L258a8c.  v1:= v1 + 1;
  #L258a90.  goto L258a6a;
  #L258a92.  v4:= `@@retrofit2.BuiltInConverters$ToStringConverter.INSTANCE` @type ^`retrofit2.BuiltInConverters$ToStringConverter` @kind object;
  #L258a96.  return v4 @kind object;
}
