record `retrofit2.Call` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `java.lang.Cloneable` @kind interface {
}
procedure `void` `cancel`() @signature `Lretrofit2/Call;.cancel:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `retrofit2.Call` `clone`() @signature `Lretrofit2/Call;.clone:()Lretrofit2/Call;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `enqueue`(`retrofit2.Callback` v0 @kind object) @signature `Lretrofit2/Call;.enqueue:(Lretrofit2/Callback;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `retrofit2.Response` `execute`() @signature `Lretrofit2/Call;.execute:()Lretrofit2/Response;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isCanceled`() @signature `Lretrofit2/Call;.isCanceled:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isExecuted`() @signature `Lretrofit2/Call;.isExecuted:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `h.g0` `request`() @signature `Lretrofit2/Call;.request:()Lh/g0;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `i.a0` `timeout`() @signature `Lretrofit2/Call;.timeout:()Li/a0;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
