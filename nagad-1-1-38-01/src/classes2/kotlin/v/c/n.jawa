record `kotlin.v.c.n` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`kotlin.v.c.n` v0 @kind this) @signature `Lkotlin/v/c/n;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1db4d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1db4da.  return @kind void;
}
procedure `kotlin.y.b` `getOrCreateKotlinClass`(`kotlin.v.c.n` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lkotlin/v/c/n;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/y/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1db4b8.  v0:= new `kotlin.v.c.d`;
  #L1db4bc.  call `<init>`(v0, v2) @signature `Lkotlin/v/c/d;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L1db4c2.  return v0 @kind object;
}
procedure `java.lang.String` `renderLambdaToString`(`kotlin.v.c.n` v1 @kind this, `kotlin.v.c.g` v2 @kind object) @signature `Lkotlin/v/c/n;.renderLambdaToString:(Lkotlin/v/c/g;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1db450.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1db456.  v2:= temp @kind object;
  #L1db458.  call temp:= `getGenericInterfaces`(v2) @signature `Ljava/lang/Class;.getGenericInterfaces:()[Ljava/lang/reflect/Type;` @kind virtual;
  #L1db45e.  v2:= temp @kind object;
  #L1db460.  v0:= 0I;
  #L1db462.  v2:= v2[v0] @kind object;
  #L1db466.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1db46c.  v2:= temp @kind object;
  #L1db46e.  v0:= "kotlin.jvm.functions." @kind object;
  #L1db472.  call temp:= `startsWith`(v2, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L1db478.  v0:= temp;
  #L1db47a.  if v0 == 0 then goto L1db48a;
  #L1db47e.  v0:= 21I;
  #L1db482.  call temp:= `substring`(v2, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L1db488.  v2:= temp @kind object;
  #L1db48a.  return v2 @kind object;
}
procedure `java.lang.String` `renderLambdaToString`(`kotlin.v.c.n` v0 @kind this, `kotlin.v.c.j` v1 @kind object) @signature `Lkotlin/v/c/n;.renderLambdaToString:(Lkotlin/v/c/j;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L1db49c.  call temp:= `renderLambdaToString`(v0, v1) @signature `Lkotlin/v/c/n;.renderLambdaToString:(Lkotlin/v/c/g;)Ljava/lang/String;` @kind virtual;
  #L1db4a2.  v1:= temp @kind object;
  #L1db4a4.  return v1 @kind object;
}
