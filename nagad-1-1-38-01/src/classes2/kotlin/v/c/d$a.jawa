record `kotlin.v.c.d$a` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`kotlin.v.c.d$a` v0 @kind this) @signature `Lkotlin/v/c/d$a;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1da688.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1da68e.  return @kind void;
}
procedure `void` `<init>`(`kotlin.v.c.d$a` v0 @kind this, `kotlin.v.c.f` v1 @kind object) @signature `Lkotlin/v/c/d$a;.<init>:(Lkotlin/v/c/f;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1da6a0.  call `<init>`(v0) @signature `Lkotlin/v/c/d$a;.<init>:()V` @kind direct;
  #L1da6a6.  return @kind void;
}
procedure `java.lang.String` `getClassSimpleName`(`kotlin.v.c.d$a` v7 @kind this, `java.lang.Class` v8 @kind object) @signature `Lkotlin/v/c/d$a;.getClassSimpleName:(Ljava/lang/Class;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1da4fc.  v0:= "jClass" @kind object;
  #L1da500.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1da506.  call temp:= `isAnonymousClass`(v8) @signature `Ljava/lang/Class;.isAnonymousClass:()Z` @kind virtual;
  #L1da50c.  v0:= temp;
  #L1da50e.  v1:= "Array" @kind object;
  #L1da512.  v2:= 0I;
  #L1da514.  if v0 == 0 then goto L1da51e;
  #L1da518.  v1:= v2 @kind object;
  #L1da51a.  goto L1da676;
  #L1da51e.  call temp:= `isLocalClass`(v8) @signature `Ljava/lang/Class;.isLocalClass:()Z` @kind virtual;
  #L1da524.  v0:= temp;
  #L1da526.  if v0 == 0 then goto L1da5e2;
  #L1da52a.  call temp:= `getSimpleName`(v8) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1da530.  v0:= temp @kind object;
  #L1da532.  call temp:= `getEnclosingMethod`(v8) @signature `Ljava/lang/Class;.getEnclosingMethod:()Ljava/lang/reflect/Method;` @kind virtual;
  #L1da538.  v1:= temp @kind object;
  #L1da53a.  v3:= "$" @kind object;
  #L1da53e.  v4:= 2I;
  #L1da540.  v5:= "name" @kind object;
  #L1da544.  if v1 == 0 then goto L1da582;
  #L1da548.  call `checkNotNullExpressionValue`(v0, v5) @signature `Lkotlin/v/c/i;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1da54e.  v6:= new `java.lang.StringBuilder`;
  #L1da552.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1da558.  call temp:= `getName`(v1) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L1da55e.  v1:= temp @kind object;
  #L1da560.  call temp:= `append`(v6, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1da566.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1da56c.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1da572.  v1:= temp @kind object;
  #L1da574.  call temp:= `substringAfter$default`(v0, v1, v2, v4, v2) @signature `Lkotlin/a0/h;.substringAfter$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1da57a.  v1:= temp @kind object;
  #L1da57c.  if v1 == 0 then goto L1da582;
  #L1da580.  goto L1da5c8;
  #L1da582.  call temp:= `getEnclosingConstructor`(v8) @signature `Ljava/lang/Class;.getEnclosingConstructor:()Ljava/lang/reflect/Constructor;` @kind virtual;
  #L1da588.  v8:= temp @kind object;
  #L1da58a.  if v8 == 0 then goto L1da5c6;
  #L1da58e.  call `checkNotNullExpressionValue`(v0, v5) @signature `Lkotlin/v/c/i;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1da594.  v1:= new `java.lang.StringBuilder`;
  #L1da598.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1da59e.  call temp:= `getName`(v8) @signature `Ljava/lang/reflect/Constructor;.getName:()Ljava/lang/String;` @kind virtual;
  #L1da5a4.  v8:= temp @kind object;
  #L1da5a6.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1da5ac.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1da5b2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1da5b8.  v8:= temp @kind object;
  #L1da5ba.  call temp:= `substringAfter$default`(v0, v8, v2, v4, v2) @signature `Lkotlin/a0/h;.substringAfter$default:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1da5c0.  v8:= temp @kind object;
  #L1da5c2.  v1:= v8 @kind object;
  #L1da5c4.  goto L1da5c8;
  #L1da5c6.  v1:= v2 @kind object;
  #L1da5c8.  if v1 == 0 then goto L1da5ce;
  #L1da5cc.  goto L1da676;
  #L1da5ce.  call `checkNotNullExpressionValue`(v0, v5) @signature `Lkotlin/v/c/i;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1da5d4.  v8:= 36I;
  #L1da5d8.  call temp:= `substringAfter$default`(v0, v8, v2, v4, v2) @signature `Lkotlin/a0/h;.substringAfter$default:(Ljava/lang/String;CLjava/lang/String;ILjava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1da5de.  v1:= temp @kind object;
  #L1da5e0.  goto L1da676;
  #L1da5e2.  call temp:= `isArray`(v8) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L1da5e8.  v0:= temp;
  #L1da5ea.  if v0 == 0 then goto L1da64a;
  #L1da5ee.  call temp:= `getComponentType`(v8) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L1da5f4.  v8:= temp @kind object;
  #L1da5f6.  call temp:= `isPrimitive`(v8) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L1da5fc.  v0:= temp;
  #L1da5fe.  if v0 == 0 then goto L1da642;
  #L1da602.  call temp:= `access$getSimpleNames$cp`() @signature `Lkotlin/v/c/d;.access$getSimpleNames$cp:()Ljava/util/Map;` @kind static;
  #L1da608.  v0:= temp @kind object;
  #L1da60a.  call temp:= `getName`(v8) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1da610.  v8:= temp @kind object;
  #L1da612.  call temp:= `get`(v0, v8) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1da618.  v8:= temp @kind object;
  #L1da61a.  v8:= (`java.lang.String`) v8 @kind object;
  #L1da61e.  if v8 == 0 then goto L1da642;
  #L1da622.  v0:= new `java.lang.StringBuilder`;
  #L1da626.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1da62c.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1da632.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1da638.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1da63e.  v8:= temp @kind object;
  #L1da640.  v2:= v8 @kind object;
  #L1da642.  if v2 == 0 then goto L1da676;
  #L1da646.  goto L1da518;
  #L1da64a.  call temp:= `access$getSimpleNames$cp`() @signature `Lkotlin/v/c/d;.access$getSimpleNames$cp:()Ljava/util/Map;` @kind static;
  #L1da650.  v0:= temp @kind object;
  #L1da652.  call temp:= `getName`(v8) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1da658.  v1:= temp @kind object;
  #L1da65a.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1da660.  v0:= temp @kind object;
  #L1da662.  v1:= v0 @kind object;
  #L1da664.  v1:= (`java.lang.String`) v1 @kind object;
  #L1da668.  if v1 == 0 then goto L1da66e;
  #L1da66c.  goto L1da676;
  #L1da66e.  call temp:= `getSimpleName`(v8) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1da674.  v1:= temp @kind object;
  #L1da676.  return v1 @kind object;
}
