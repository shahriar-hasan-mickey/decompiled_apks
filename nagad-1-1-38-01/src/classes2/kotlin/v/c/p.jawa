record `kotlin.v.c.p` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`kotlin.v.c.p` v0 @kind this) @signature `Lkotlin/v/c/p;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1db8c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1db8ca.  return @kind void;
}
procedure `java.lang.Throwable` `a`(`java.lang.Throwable` v1 @kind object) @signature `Lkotlin/v/c/p;.a:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1db7d8.  v0:= constclass @type ^`kotlin.v.c.p` @kind object;
  #L1db7dc.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1db7e2.  v0:= temp @kind object;
  #L1db7e4.  call temp:= `a`(v1, v0) @signature `Lkotlin/v/c/i;.a:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;` @kind static;
  #L1db7ea.  return v1 @kind object;
}
procedure `java.util.Collection` `asMutableCollection`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/v/c/p;.asMutableCollection:(Ljava/lang/Object;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1db7fc.  v0:= instanceof @variable v1 @type ^`kotlin.v.c.q.a` @kind boolean;
  #L1db800.  if v0 == 0 then goto L1db812;
  #L1db804.  v0:= "kotlin.collections.MutableCollection" @kind object;
  #L1db808.  call `throwCce`(v1, v0) @signature `Lkotlin/v/c/p;.throwCce:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1db80e.  v1:= 0I;
  #L1db810.  throw v1;
  #L1db812.  call temp:= `castToCollection`(v1) @signature `Lkotlin/v/c/p;.castToCollection:(Ljava/lang/Object;)Ljava/util/Collection;` @kind static;
  #L1db818.  v1:= temp @kind object;
  #L1db81a.  return v1 @kind object;
}
procedure `java.util.List` `asMutableList`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/v/c/p;.asMutableList:(Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1db860.  v0:= instanceof @variable v1 @type ^`kotlin.v.c.q.a` @kind boolean;
  #L1db864.  if v0 == 0 then goto L1db876;
  #L1db868.  v0:= "kotlin.collections.MutableList" @kind object;
  #L1db86c.  call `throwCce`(v1, v0) @signature `Lkotlin/v/c/p;.throwCce:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1db872.  v1:= 0I;
  #L1db874.  throw v1;
  #L1db876.  call temp:= `castToList`(v1) @signature `Lkotlin/v/c/p;.castToList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1db87c.  v1:= temp @kind object;
  #L1db87e.  return v1 @kind object;
}
procedure `java.lang.Object` `beforeCheckcastToFunctionOfArity`(`java.lang.Object` v2 @kind object, `int` v3 ) @signature `Lkotlin/v/c/p;.beforeCheckcastToFunctionOfArity:(Ljava/lang/Object;I)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1db788.  if v2 == 0 then goto L1db7c6;
  #L1db78c.  call temp:= `isFunctionOfArity`(v2, v3) @signature `Lkotlin/v/c/p;.isFunctionOfArity:(Ljava/lang/Object;I)Z` @kind static;
  #L1db792.  v0:= temp;
  #L1db794.  if v0 == 0 then goto L1db79a;
  #L1db798.  goto L1db7c6;
  #L1db79a.  v0:= new `java.lang.StringBuilder`;
  #L1db79e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1db7a4.  v1:= "kotlin.jvm.functions.Function" @kind object;
  #L1db7a8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1db7ae.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1db7b4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1db7ba.  v3:= temp @kind object;
  #L1db7bc.  call `throwCce`(v2, v3) @signature `Lkotlin/v/c/p;.throwCce:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1db7c2.  v2:= 0I;
  #L1db7c4.  throw v2;
  #L1db7c6.  return v2 @kind object;
}
procedure `java.util.Collection` `castToCollection`(`java.lang.Object` v0 @kind object) @signature `Lkotlin/v/c/p;.castToCollection:(Ljava/lang/Object;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1db82c.  v0:= (`java.util.Collection`) v0 @kind object;
  #L1db830.  return v0 @kind object;
  #L1db832.  v0:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L1db834.  call temp:= `throwCce`(v0) @signature `Lkotlin/v/c/p;.throwCce:(Ljava/lang/ClassCastException;)Ljava/lang/ClassCastException;` @kind static;
  #L1db83a.  v0:= 0I;
  #L1db83c.  throw v0;
  catch `java.lang.ClassCastException` @[L1db82c..L1db830] goto L1db832;
}
procedure `java.util.List` `castToList`(`java.lang.Object` v0 @kind object) @signature `Lkotlin/v/c/p;.castToList:(Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1db890.  v0:= (`java.util.List`) v0 @kind object;
  #L1db894.  return v0 @kind object;
  #L1db896.  v0:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L1db898.  call temp:= `throwCce`(v0) @signature `Lkotlin/v/c/p;.throwCce:(Ljava/lang/ClassCastException;)Ljava/lang/ClassCastException;` @kind static;
  #L1db89e.  v0:= 0I;
  #L1db8a0.  throw v0;
  catch `java.lang.ClassCastException` @[L1db890..L1db894] goto L1db896;
}
procedure `int` `getFunctionArity`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/v/c/p;.getFunctionArity:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1db610.  v0:= instanceof @variable v1 @type ^`kotlin.v.c.g` @kind boolean;
  #L1db614.  if v0 == 0 then goto L1db626;
  #L1db618.  v1:= (`kotlin.v.c.g`) v1 @kind object;
  #L1db61c.  call temp:= `getArity`(v1) @signature `Lkotlin/v/c/g;.getArity:()I` @kind interface;
  #L1db622.  v1:= temp;
  #L1db624.  return v1;
  #L1db626.  v0:= instanceof @variable v1 @type ^`kotlin.v.b.a` @kind boolean;
  #L1db62a.  if v0 == 0 then goto L1db632;
  #L1db62e.  v1:= 0I;
  #L1db630.  return v1;
  #L1db632.  v0:= instanceof @variable v1 @type ^`kotlin.v.b.l` @kind boolean;
  #L1db636.  if v0 == 0 then goto L1db63e;
  #L1db63a.  v1:= 1I;
  #L1db63c.  return v1;
  #L1db63e.  v0:= instanceof @variable v1 @type ^`kotlin.v.b.p` @kind boolean;
  #L1db642.  if v0 == 0 then goto L1db64a;
  #L1db646.  v1:= 2I;
  #L1db648.  return v1;
  #L1db64a.  v0:= instanceof @variable v1 @type ^`kotlin.v.b.q` @kind boolean;
  #L1db64e.  if v0 == 0 then goto L1db656;
  #L1db652.  v1:= 3I;
  #L1db654.  return v1;
  #L1db656.  v0:= instanceof @variable v1 @type ^`kotlin.v.b.r` @kind boolean;
  #L1db65a.  if v0 == 0 then goto L1db662;
  #L1db65e.  v1:= 4I;
  #L1db660.  return v1;
  #L1db662.  v0:= instanceof @variable v1 @type ^`kotlin.v.b.s` @kind boolean;
  #L1db666.  if v0 == 0 then goto L1db66e;
  #L1db66a.  v1:= 5I;
  #L1db66c.  return v1;
  #L1db66e.  v0:= instanceof @variable v1 @type ^`kotlin.v.b.t` @kind boolean;
  #L1db672.  if v0 == 0 then goto L1db67a;
  #L1db676.  v1:= 6I;
  #L1db678.  return v1;
  #L1db67a.  v0:= instanceof @variable v1 @type ^`kotlin.v.b.u` @kind boolean;
  #L1db67e.  if v0 == 0 then goto L1db686;
  #L1db682.  v1:= 7I;
  #L1db684.  return v1;
  #L1db686.  v0:= instanceof @variable v1 @type ^`kotlin.v.b.v` @kind boolean;
  #L1db68a.  if v0 == 0 then goto L1db694;
  #L1db68e.  v1:= 8I;
  #L1db692.  return v1;
  #L1db694.  v0:= instanceof @variable v1 @type ^`kotlin.v.b.w` @kind boolean;
  #L1db698.  if v0 == 0 then goto L1db6a2;
  #L1db69c.  v1:= 9I;
  #L1db6a0.  return v1;
  #L1db6a2.  v0:= instanceof @variable v1 @type ^`kotlin.v.b.b` @kind boolean;
  #L1db6a6.  if v0 == 0 then goto L1db6b0;
  #L1db6aa.  v1:= 10I;
  #L1db6ae.  return v1;
  #L1db6b0.  v0:= instanceof @variable v1 @type ^`kotlin.v.b.c` @kind boolean;
  #L1db6b4.  if v0 == 0 then goto L1db6be;
  #L1db6b8.  v1:= 11I;
  #L1db6bc.  return v1;
  #L1db6be.  v0:= instanceof @variable v1 @type ^`kotlin.v.b.d` @kind boolean;
  #L1db6c2.  if v0 == 0 then goto L1db6cc;
  #L1db6c6.  v1:= 12I;
  #L1db6ca.  return v1;
  #L1db6cc.  v0:= instanceof @variable v1 @type ^`kotlin.v.b.e` @kind boolean;
  #L1db6d0.  if v0 == 0 then goto L1db6da;
  #L1db6d4.  v1:= 13I;
  #L1db6d8.  return v1;
  #L1db6da.  v0:= instanceof @variable v1 @type ^`kotlin.v.b.f` @kind boolean;
  #L1db6de.  if v0 == 0 then goto L1db6e8;
  #L1db6e2.  v1:= 14I;
  #L1db6e6.  return v1;
  #L1db6e8.  v0:= instanceof @variable v1 @type ^`kotlin.v.b.g` @kind boolean;
  #L1db6ec.  if v0 == 0 then goto L1db6f6;
  #L1db6f0.  v1:= 15I;
  #L1db6f4.  return v1;
  #L1db6f6.  v0:= instanceof @variable v1 @type ^`kotlin.v.b.h` @kind boolean;
  #L1db6fa.  if v0 == 0 then goto L1db704;
  #L1db6fe.  v1:= 16I;
  #L1db702.  return v1;
  #L1db704.  v0:= instanceof @variable v1 @type ^`kotlin.v.b.i` @kind boolean;
  #L1db708.  if v0 == 0 then goto L1db712;
  #L1db70c.  v1:= 17I;
  #L1db710.  return v1;
  #L1db712.  v0:= instanceof @variable v1 @type ^`kotlin.v.b.j` @kind boolean;
  #L1db716.  if v0 == 0 then goto L1db720;
  #L1db71a.  v1:= 18I;
  #L1db71e.  return v1;
  #L1db720.  v0:= instanceof @variable v1 @type ^`kotlin.v.b.k` @kind boolean;
  #L1db724.  if v0 == 0 then goto L1db72e;
  #L1db728.  v1:= 19I;
  #L1db72c.  return v1;
  #L1db72e.  v0:= instanceof @variable v1 @type ^`kotlin.v.b.m` @kind boolean;
  #L1db732.  if v0 == 0 then goto L1db73c;
  #L1db736.  v1:= 20I;
  #L1db73a.  return v1;
  #L1db73c.  v0:= instanceof @variable v1 @type ^`kotlin.v.b.n` @kind boolean;
  #L1db740.  if v0 == 0 then goto L1db74a;
  #L1db744.  v1:= 21I;
  #L1db748.  return v1;
  #L1db74a.  v1:= instanceof @variable v1 @type ^`kotlin.v.b.o` @kind boolean;
  #L1db74e.  if v1 == 0 then goto L1db758;
  #L1db752.  v1:= 22I;
  #L1db756.  return v1;
  #L1db758.  v1:= -1I;
  #L1db75a.  return v1;
}
procedure `boolean` `isFunctionOfArity`(`java.lang.Object` v1 @kind object, `int` v2 ) @signature `Lkotlin/v/c/p;.isFunctionOfArity:(Ljava/lang/Object;I)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1db5e4.  v0:= instanceof @variable v1 @type ^`kotlin.c` @kind boolean;
  #L1db5e8.  if v0 == 0 then goto L1db5fc;
  #L1db5ec.  call temp:= `getFunctionArity`(v1) @signature `Lkotlin/v/c/p;.getFunctionArity:(Ljava/lang/Object;)I` @kind static;
  #L1db5f2.  v1:= temp;
  #L1db5f4.  if v1 != v2 then goto L1db5fc;
  #L1db5f8.  v1:= 1I;
  #L1db5fa.  goto L1db5fe;
  #L1db5fc.  v1:= 0I;
  #L1db5fe.  return v1;
}
procedure `java.lang.ClassCastException` `throwCce`(`java.lang.ClassCastException` v0 @kind object) @signature `Lkotlin/v/c/p;.throwCce:(Ljava/lang/ClassCastException;)Ljava/lang/ClassCastException;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1db76c.  call temp:= `a`(v0) @signature `Lkotlin/v/c/p;.a:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L1db772.  v0:= (`java.lang.ClassCastException`) v0 @kind object;
  #L1db776.  throw v0;
}
procedure `void` `throwCce`(`java.lang.Object` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlin/v/c/p;.throwCce:(Ljava/lang/Object;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1db8dc.  if v1 != 0 then goto L1db8e6;
  #L1db8e0.  v1:= "null" @kind object;
  #L1db8e4.  goto L1db8f6;
  #L1db8e6.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1db8ec.  v1:= temp @kind object;
  #L1db8ee.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1db8f4.  v1:= temp @kind object;
  #L1db8f6.  v0:= new `java.lang.StringBuilder`;
  #L1db8fa.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1db900.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1db906.  v1:= " cannot be cast to " @kind object;
  #L1db90a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1db910.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1db916.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1db91c.  v1:= temp @kind object;
  #L1db91e.  call `throwCce`(v1) @signature `Lkotlin/v/c/p;.throwCce:(Ljava/lang/String;)V` @kind static;
  #L1db924.  v1:= 0I;
  #L1db926.  throw v1;
}
procedure `void` `throwCce`(`java.lang.String` v1 @kind object) @signature `Lkotlin/v/c/p;.throwCce:(Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1db938.  v0:= new `java.lang.ClassCastException`;
  #L1db93c.  call `<init>`(v0, v1) @signature `Ljava/lang/ClassCastException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1db942.  call temp:= `throwCce`(v0) @signature `Lkotlin/v/c/p;.throwCce:(Ljava/lang/ClassCastException;)Ljava/lang/ClassCastException;` @kind static;
  #L1db948.  v1:= 0I;
  #L1db94a.  throw v1;
}
