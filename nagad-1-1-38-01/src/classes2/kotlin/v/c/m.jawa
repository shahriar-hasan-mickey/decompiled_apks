record `kotlin.v.c.m` @kind class @AccessFlag PUBLIC {
}
global `kotlin.v.c.n` `@@kotlin.v.c.m.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/v/c/m;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1db54c.  v0:= "kotlin.reflect.jvm.internal.ReflectionFactoryImpl" @kind object;
  #L1db550.  v1:= 0I;
  #L1db552.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L1db558.  v0:= temp @kind object;
  #L1db55a.  call temp:= `newInstance`(v0) @signature `Ljava/lang/Class;.newInstance:()Ljava/lang/Object;` @kind virtual;
  #L1db560.  v0:= temp @kind object;
  #L1db562.  v0:= (`kotlin.v.c.n`) v0 @kind object;
  #L1db566.  v1:= v0 @kind object;
  #L1db568.  goto L1db56c;
  #L1db56a.  
  #L1db56c.  if v1 == 0 then goto L1db572;
  #L1db570.  goto L1db57c;
  #L1db572.  v1:= new `kotlin.v.c.n`;
  #L1db576.  call `<init>`(v1) @signature `Lkotlin/v/c/n;.<init>:()V` @kind direct;
  #L1db57c.  `@@kotlin.v.c.m.a` @type ^`kotlin.v.c.n` := v1 @kind object;
  #L1db580.  return @kind void;
  catch `java.lang.ClassCastException` @[L1db552..L1db566] goto L1db56a;
  catch `java.lang.ClassNotFoundException` @[L1db552..L1db566] goto L1db56a;
  catch `java.lang.InstantiationException` @[L1db552..L1db566] goto L1db56a;
  catch `java.lang.IllegalAccessException` @[L1db552..L1db566] goto L1db56a;
}
procedure `kotlin.y.b` `getOrCreateKotlinClass`(`java.lang.Class` v1 @kind object) @signature `Lkotlin/v/c/m;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/y/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1db52c.  v0:= `@@kotlin.v.c.m.a` @type ^`kotlin.v.c.n` @kind object;
  #L1db530.  call temp:= `getOrCreateKotlinClass`(v0, v1) @signature `Lkotlin/v/c/n;.getOrCreateKotlinClass:(Ljava/lang/Class;)Lkotlin/y/b;` @kind virtual;
  #L1db536.  v1:= temp @kind object;
  #L1db538.  return v1 @kind object;
}
procedure `java.lang.String` `renderLambdaToString`(`kotlin.v.c.g` v1 @kind object) @signature `Lkotlin/v/c/m;.renderLambdaToString:(Lkotlin/v/c/g;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1db4ec.  v0:= `@@kotlin.v.c.m.a` @type ^`kotlin.v.c.n` @kind object;
  #L1db4f0.  call temp:= `renderLambdaToString`(v0, v1) @signature `Lkotlin/v/c/n;.renderLambdaToString:(Lkotlin/v/c/g;)Ljava/lang/String;` @kind virtual;
  #L1db4f6.  v1:= temp @kind object;
  #L1db4f8.  return v1 @kind object;
}
procedure `java.lang.String` `renderLambdaToString`(`kotlin.v.c.j` v1 @kind object) @signature `Lkotlin/v/c/m;.renderLambdaToString:(Lkotlin/v/c/j;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1db50c.  v0:= `@@kotlin.v.c.m.a` @type ^`kotlin.v.c.n` @kind object;
  #L1db510.  call temp:= `renderLambdaToString`(v0, v1) @signature `Lkotlin/v/c/n;.renderLambdaToString:(Lkotlin/v/c/j;)Ljava/lang/String;` @kind virtual;
  #L1db516.  v1:= temp @kind object;
  #L1db518.  return v1 @kind object;
}
