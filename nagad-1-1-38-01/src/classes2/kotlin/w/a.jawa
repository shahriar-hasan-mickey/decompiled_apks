record `kotlin.w.a` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlin.w.c` @kind class {
}
procedure `void` `<init>`(`kotlin.w.a` v0 @kind this) @signature `Lkotlin/w/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1db980.  call `<init>`(v0) @signature `Lkotlin/w/c;.<init>:()V` @kind direct;
  #L1db986.  return @kind void;
}
procedure `java.util.Random` `getImpl`() @signature `Lkotlin/w/a;.getImpl:()Ljava/util/Random;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `nextInt`(`kotlin.w.a` v1 @kind this) @signature `Lkotlin/w/a;.nextInt:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1db95c.  call temp:= `getImpl`(v1) @signature `Lkotlin/w/a;.getImpl:()Ljava/util/Random;` @kind virtual;
  #L1db962.  v0:= temp @kind object;
  #L1db964.  call temp:= `nextInt`(v0) @signature `Ljava/util/Random;.nextInt:()I` @kind virtual;
  #L1db96a.  v0:= temp;
  #L1db96c.  return v0;
}
