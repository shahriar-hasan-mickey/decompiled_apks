record `kotlin.w.c$a` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.w.c` @kind class {
}
procedure `void` `<init>`(`kotlin.w.c$a` v0 @kind this) @signature `Lkotlin/w/c$a;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1dba60.  call `<init>`(v0) @signature `Lkotlin/w/c;.<init>:()V` @kind direct;
  #L1dba66.  return @kind void;
}
procedure `void` `<init>`(`kotlin.w.c$a` v0 @kind this, `kotlin.v.c.f` v1 @kind object) @signature `Lkotlin/w/c$a;.<init>:(Lkotlin/v/c/f;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1dba78.  call `<init>`(v0) @signature `Lkotlin/w/c$a;.<init>:()V` @kind direct;
  #L1dba7e.  return @kind void;
}
procedure `int` `nextInt`(`kotlin.w.c$a` v1 @kind this) @signature `Lkotlin/w/c$a;.nextInt:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dba3c.  call temp:= `access$getDefaultRandom$cp`() @signature `Lkotlin/w/c;.access$getDefaultRandom$cp:()Lkotlin/w/c;` @kind static;
  #L1dba42.  v0:= temp @kind object;
  #L1dba44.  call temp:= `nextInt`(v0) @signature `Lkotlin/w/c;.nextInt:()I` @kind virtual;
  #L1dba4a.  v0:= temp;
  #L1dba4c.  return v0;
}
