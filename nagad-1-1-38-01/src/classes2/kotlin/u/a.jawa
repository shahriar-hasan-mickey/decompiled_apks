record `kotlin.u.a` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`kotlin.u.a` v0 @kind this) @signature `Lkotlin/u/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1da0b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1da0ba.  return @kind void;
}
procedure `void` `addSuppressed`(`kotlin.u.a` v3 @kind this, `java.lang.Throwable` v4 @kind object, `java.lang.Throwable` v5 @kind object) @signature `Lkotlin/u/a;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1da0cc.  v0:= "cause" @kind object;
  #L1da0d0.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1da0d6.  v0:= "exception" @kind object;
  #L1da0da.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1da0e0.  v0:= `@@kotlin.u.a$a.a` @type ^`java.lang.reflect.Method` @kind object;
  #L1da0e4.  if v0 == 0 then goto L1da0fa;
  #L1da0e8.  v1:= 1I;
  #L1da0ea.  v1:= new `java.lang.Object`[v1];
  #L1da0ee.  v2:= 0I;
  #L1da0f0.  v1[v2]:= v5 @kind object;
  #L1da0f4.  call temp:= `invoke`(v0, v4, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1da0fa.  return @kind void;
}
procedure `kotlin.w.c` `defaultPlatformRandom`(`kotlin.u.a` v1 @kind this) @signature `Lkotlin/u/a;.defaultPlatformRandom:()Lkotlin/w/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1da098.  v0:= new `kotlin.w.b`;
  #L1da09c.  call `<init>`(v0) @signature `Lkotlin/w/b;.<init>:()V` @kind direct;
  #L1da0a2.  return v0 @kind object;
}
