record `kotlin.u.c` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `int` `a`(`int` v0 , `int` v1 ) @signature `Lkotlin/u/c;.a:(II)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L1da188.  v0:= v0 %% v1 @kind int;
  #L1da18a.  if v0 < 0 then goto L1da190;
  #L1da18e.  goto L1da192;
  #L1da190.  v0:= v0 + v1 @kind int;
  #L1da192.  return v0;
}
procedure `int` `a`(`int` v0 , `int` v1 , `int` v2 ) @signature `Lkotlin/u/c;.a:(III)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;

  #L1da10c.  call temp:= `a`(v0, v2) @signature `Lkotlin/u/c;.a:(II)I` @kind static;
  #L1da112.  v0:= temp;
  #L1da114.  call temp:= `a`(v1, v2) @signature `Lkotlin/u/c;.a:(II)I` @kind static;
  #L1da11a.  v1:= temp;
  #L1da11c.  v0:= v0 - v1 @kind int;
  #L1da11e.  call temp:= `a`(v0, v2) @signature `Lkotlin/u/c;.a:(II)I` @kind static;
  #L1da124.  v0:= temp;
  #L1da126.  return v0;
}
procedure `int` `getProgressionLastElement`(`int` v0 , `int` v1 , `int` v2 ) @signature `Lkotlin/u/c;.getProgressionLastElement:(III)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L1da138.  if v2 <= 0 then goto L1da14e;
  #L1da13c.  if v0 < v1 then goto L1da142;
  #L1da140.  goto L1da164;
  #L1da142.  call temp:= `a`(v1, v0, v2) @signature `Lkotlin/u/c;.a:(III)I` @kind static;
  #L1da148.  v0:= temp;
  #L1da14a.  v1:= v1 - v0 @kind int;
  #L1da14c.  goto L1da164;
  #L1da14e.  if v2 >= 0 then goto L1da166;
  #L1da152.  if v0 > v1 then goto L1da158;
  #L1da156.  goto L1da164;
  #L1da158.  v2:= -v2 @kind int;
  #L1da15a.  call temp:= `a`(v0, v1, v2) @signature `Lkotlin/u/c;.a:(III)I` @kind static;
  #L1da160.  v0:= temp;
  #L1da162.  v1:= v1 + v0 @kind int;
  #L1da164.  return v1;
  #L1da166.  v0:= new `java.lang.IllegalArgumentException`;
  #L1da16a.  v1:= "Step is zero." @kind object;
  #L1da16e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1da174.  throw v0;
}
