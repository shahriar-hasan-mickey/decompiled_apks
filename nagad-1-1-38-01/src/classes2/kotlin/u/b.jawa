record `kotlin.u.b` @kind class @AccessFlag PUBLIC_FINAL {
}
global `kotlin.u.a` `@@kotlin.u.b.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/u/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1d9d60.  v0:= constclass @type ^`kotlin.u.a` @kind object;
  #L1d9d64.  call temp:= `a`() @signature `Lkotlin/u/b;.a:()I` @kind static;
  #L1d9d6a.  v1:= temp;
  #L1d9d6c.  v2:= "ClassCastException(\"Inst…baseTypeCL\").initCause(e)" @kind object;
  #L1d9d70.  v3:= ", base type classloader: " @kind object;
  #L1d9d74.  v4:= "Instance classloader: " @kind object;
  #L1d9d78.  v5:= "null cannot be cast to non-null type kotlin.internal.PlatformImplementations" @kind object;
  #L1d9d7c.  v6:= "Class.forName(\"kotlin.in…entations\").newInstance()" @kind object;
  #L1d9d80.  v7:= 65544I;
  #L1d9d86.  if v1 < v7 then goto L1d9eb0;
  #L1d9d8a.  v7:= "kotlin.u.e.a" @kind object;
  #L1d9d8e.  call temp:= `forName`(v7) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L1d9d94.  v7:= temp @kind object;
  #L1d9d96.  call temp:= `newInstance`(v7) @signature `Ljava/lang/Class;.newInstance:()Ljava/lang/Object;` @kind virtual;
  #L1d9d9c.  v7:= temp @kind object;
  #L1d9d9e.  call `checkNotNullExpressionValue`(v7, v6) @signature `Lkotlin/v/c/i;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d9da4.  if v7 == 0 then goto L1d9db4;
  #L1d9da8.  v7:= (`kotlin.u.a`) v7 @kind object;
  #L1d9dac.  goto L1d9fea;
  #L1d9db0.  v8:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L1d9db2.  goto L1d9dc0;
  #L1d9db4.  v8:= new `java.lang.NullPointerException`;
  #L1d9db8.  call `<init>`(v8, v5) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d9dbe.  throw v8;
  #L1d9dc0.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1d9dc6.  v7:= temp @kind object;
  #L1d9dc8.  call temp:= `getClassLoader`(v7) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L1d9dce.  v7:= temp @kind object;
  #L1d9dd0.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L1d9dd6.  v9:= temp @kind object;
  #L1d9dd8.  v10:= new `java.lang.ClassCastException`;
  #L1d9ddc.  v11:= new `java.lang.StringBuilder`;
  #L1d9de0.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d9de6.  call temp:= `append`(v11, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9dec.  call temp:= `append`(v11, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9df2.  call temp:= `append`(v11, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9df8.  call temp:= `append`(v11, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9dfe.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d9e04.  v7:= temp @kind object;
  #L1d9e06.  call `<init>`(v10, v7) @signature `Ljava/lang/ClassCastException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d9e0c.  call temp:= `initCause`(v10, v8) @signature `Ljava/lang/ClassCastException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L1d9e12.  v7:= temp @kind object;
  #L1d9e14.  call `checkNotNullExpressionValue`(v7, v2) @signature `Lkotlin/v/c/i;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d9e1a.  throw v7;
  #L1d9e1c.  v7:= "kotlin.internal.JRE8PlatformImplementations" @kind object;
  #L1d9e20.  call temp:= `forName`(v7) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L1d9e26.  v7:= temp @kind object;
  #L1d9e28.  call temp:= `newInstance`(v7) @signature `Ljava/lang/Class;.newInstance:()Ljava/lang/Object;` @kind virtual;
  #L1d9e2e.  v7:= temp @kind object;
  #L1d9e30.  call `checkNotNullExpressionValue`(v7, v6) @signature `Lkotlin/v/c/i;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d9e36.  if v7 == 0 then goto L1d9e46;
  #L1d9e3a.  v7:= (`kotlin.u.a`) v7 @kind object;
  #L1d9e3e.  goto L1d9fea;
  #L1d9e42.  v8:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L1d9e44.  goto L1d9e52;
  #L1d9e46.  v8:= new `java.lang.NullPointerException`;
  #L1d9e4a.  call `<init>`(v8, v5) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d9e50.  throw v8;
  #L1d9e52.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1d9e58.  v7:= temp @kind object;
  #L1d9e5a.  call temp:= `getClassLoader`(v7) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L1d9e60.  v7:= temp @kind object;
  #L1d9e62.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L1d9e68.  v9:= temp @kind object;
  #L1d9e6a.  v10:= new `java.lang.ClassCastException`;
  #L1d9e6e.  v11:= new `java.lang.StringBuilder`;
  #L1d9e72.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d9e78.  call temp:= `append`(v11, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9e7e.  call temp:= `append`(v11, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9e84.  call temp:= `append`(v11, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9e8a.  call temp:= `append`(v11, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9e90.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d9e96.  v7:= temp @kind object;
  #L1d9e98.  call `<init>`(v10, v7) @signature `Ljava/lang/ClassCastException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d9e9e.  call temp:= `initCause`(v10, v8) @signature `Ljava/lang/ClassCastException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L1d9ea4.  v7:= temp @kind object;
  #L1d9ea6.  call `checkNotNullExpressionValue`(v7, v2) @signature `Lkotlin/v/c/i;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d9eac.  throw v7;
  #L1d9eae.  
  #L1d9eb0.  v7:= 65543I;
  #L1d9eb6.  if v1 < v7 then goto L1d9fe0;
  #L1d9eba.  v1:= "kotlin.u.d.a" @kind object;
  #L1d9ebe.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L1d9ec4.  v1:= temp @kind object;
  #L1d9ec6.  call temp:= `newInstance`(v1) @signature `Ljava/lang/Class;.newInstance:()Ljava/lang/Object;` @kind virtual;
  #L1d9ecc.  v1:= temp @kind object;
  #L1d9ece.  call `checkNotNullExpressionValue`(v1, v6) @signature `Lkotlin/v/c/i;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d9ed4.  if v1 == 0 then goto L1d9ee6;
  #L1d9ed8.  v7:= v1 @kind object;
  #L1d9eda.  v7:= (`kotlin.u.a`) v7 @kind object;
  #L1d9ede.  goto L1d9fea;
  #L1d9ee2.  v7:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L1d9ee4.  goto L1d9ef2;
  #L1d9ee6.  v7:= new `java.lang.NullPointerException`;
  #L1d9eea.  call `<init>`(v7, v5) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d9ef0.  throw v7;
  #L1d9ef2.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1d9ef8.  v1:= temp @kind object;
  #L1d9efa.  call temp:= `getClassLoader`(v1) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L1d9f00.  v1:= temp @kind object;
  #L1d9f02.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L1d9f08.  v8:= temp @kind object;
  #L1d9f0a.  v9:= new `java.lang.ClassCastException`;
  #L1d9f0e.  v10:= new `java.lang.StringBuilder`;
  #L1d9f12.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d9f18.  call temp:= `append`(v10, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9f1e.  call temp:= `append`(v10, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9f24.  call temp:= `append`(v10, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9f2a.  call temp:= `append`(v10, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9f30.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d9f36.  v1:= temp @kind object;
  #L1d9f38.  call `<init>`(v9, v1) @signature `Ljava/lang/ClassCastException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d9f3e.  call temp:= `initCause`(v9, v7) @signature `Ljava/lang/ClassCastException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L1d9f44.  v1:= temp @kind object;
  #L1d9f46.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/v/c/i;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d9f4c.  throw v1;
  #L1d9f4e.  v1:= "kotlin.internal.JRE7PlatformImplementations" @kind object;
  #L1d9f52.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L1d9f58.  v1:= temp @kind object;
  #L1d9f5a.  call temp:= `newInstance`(v1) @signature `Ljava/lang/Class;.newInstance:()Ljava/lang/Object;` @kind virtual;
  #L1d9f60.  v1:= temp @kind object;
  #L1d9f62.  call `checkNotNullExpressionValue`(v1, v6) @signature `Lkotlin/v/c/i;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d9f68.  if v1 == 0 then goto L1d9f78;
  #L1d9f6c.  v7:= v1 @kind object;
  #L1d9f6e.  v7:= (`kotlin.u.a`) v7 @kind object;
  #L1d9f72.  goto L1d9fea;
  #L1d9f74.  v5:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L1d9f76.  goto L1d9f84;
  #L1d9f78.  v6:= new `java.lang.NullPointerException`;
  #L1d9f7c.  call `<init>`(v6, v5) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d9f82.  throw v6;
  #L1d9f84.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1d9f8a.  v1:= temp @kind object;
  #L1d9f8c.  call temp:= `getClassLoader`(v1) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L1d9f92.  v1:= temp @kind object;
  #L1d9f94.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L1d9f9a.  v0:= temp @kind object;
  #L1d9f9c.  v6:= new `java.lang.ClassCastException`;
  #L1d9fa0.  v7:= new `java.lang.StringBuilder`;
  #L1d9fa4.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d9faa.  call temp:= `append`(v7, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9fb0.  call temp:= `append`(v7, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9fb6.  call temp:= `append`(v7, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9fbc.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9fc2.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d9fc8.  v0:= temp @kind object;
  #L1d9fca.  call `<init>`(v6, v0) @signature `Ljava/lang/ClassCastException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d9fd0.  call temp:= `initCause`(v6, v5) @signature `Ljava/lang/ClassCastException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L1d9fd6.  v0:= temp @kind object;
  #L1d9fd8.  call `checkNotNullExpressionValue`(v0, v2) @signature `Lkotlin/v/c/i;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d9fde.  throw v0;
  #L1d9fe0.  v7:= new `kotlin.u.a`;
  #L1d9fe4.  call `<init>`(v7) @signature `Lkotlin/u/a;.<init>:()V` @kind direct;
  #L1d9fea.  `@@kotlin.u.b.a` @type ^`kotlin.u.a` := v7 @kind object;
  #L1d9fee.  return @kind void;
  catch `java.lang.ClassNotFoundException` @[L1d9d8e..L1d9da4] goto L1d9e1c;
  catch `java.lang.ClassCastException` @[L1d9da8..L1d9dc0] goto L1d9db0;
  catch `java.lang.ClassNotFoundException` @[L1d9da8..L1d9dc0] goto L1d9e1c;
  catch `java.lang.ClassNotFoundException` @[L1d9dc0..L1d9e1c] goto L1d9e1c;
  catch `java.lang.ClassNotFoundException` @[L1d9e20..L1d9e36] goto L1d9eae;
  catch `java.lang.ClassCastException` @[L1d9e3a..L1d9e52] goto L1d9e42;
  catch `java.lang.ClassNotFoundException` @[L1d9e3a..L1d9e52] goto L1d9eae;
  catch `java.lang.ClassNotFoundException` @[L1d9e52..L1d9eae] goto L1d9eae;
  catch `java.lang.ClassNotFoundException` @[L1d9ebe..L1d9ed4] goto L1d9f4e;
  catch `java.lang.ClassCastException` @[L1d9ed8..L1d9ef2] goto L1d9ee2;
  catch `java.lang.ClassNotFoundException` @[L1d9ed8..L1d9ef2] goto L1d9f4e;
  catch `java.lang.ClassNotFoundException` @[L1d9ef2..L1d9f4e] goto L1d9f4e;
  catch `java.lang.ClassNotFoundException` @[L1d9f52..L1d9f68] goto L1d9fe0;
  catch `java.lang.ClassCastException` @[L1d9f6c..L1d9f84] goto L1d9f74;
  catch `java.lang.ClassNotFoundException` @[L1d9f6c..L1d9f84] goto L1d9fe0;
  catch `java.lang.ClassNotFoundException` @[L1d9f84..L1d9fe0] goto L1d9fe0;
}
procedure `int` `a`() @signature `Lkotlin/u/b;.a:()I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1d9c68.  v0:= "java.specification.version" @kind object;
  #L1d9c6c.  call temp:= `getProperty`(v0) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1d9c72.  v0:= temp @kind object;
  #L1d9c74.  v7:= 65542I;
  #L1d9c7a.  if v0 == 0 then goto L1d9d30;
  #L1d9c7e.  v2:= 46I;
  #L1d9c82.  v3:= 0I;
  #L1d9c84.  v4:= 0I;
  #L1d9c86.  v5:= 6I;
  #L1d9c88.  v6:= 0I;
  #L1d9c8a.  v1:= v0 @kind object;
  #L1d9c8c.  call temp:= `indexOf$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/a0/h;.indexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L1d9c92.  v8:= temp;
  #L1d9c94.  v9:= 65536I;
  #L1d9c98.  if v8 >= 0 then goto L1d9caa;
  #L1d9c9c.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L1d9ca2.  v0:= temp;
  #L1d9ca4.  v7:= v0 * v9 @kind int;
  #L1d9ca8.  return v7;
  #L1d9caa.  v2:= 46I;
  #L1d9cae.  v10:= v8 + 1;
  #L1d9cb2.  v4:= 0I;
  #L1d9cb4.  v5:= 4I;
  #L1d9cb6.  v6:= 0I;
  #L1d9cb8.  v1:= v0 @kind object;
  #L1d9cba.  v3:= v10;
  #L1d9cbc.  call temp:= `indexOf$default`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/a0/h;.indexOf$default:(Ljava/lang/CharSequence;CIZILjava/lang/Object;)I` @kind static;
  #L1d9cc2.  v1:= temp;
  #L1d9cc4.  if v1 >= 0 then goto L1d9cd0;
  #L1d9cc8.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1d9cce.  v1:= temp;
  #L1d9cd0.  v2:= 0I;
  #L1d9cd2.  v3:= "null cannot be cast to non-null type java.lang.String" @kind object;
  #L1d9cd6.  if v0 == 0 then goto L1d9d24;
  #L1d9cda.  call temp:= `substring`(v0, v2, v8) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1d9ce0.  v2:= temp @kind object;
  #L1d9ce2.  v4:= "(this as java.lang.Strin…ing(startIndex, endIndex)" @kind object;
  #L1d9ce6.  call `checkNotNullExpressionValue`(v2, v4) @signature `Lkotlin/v/c/i;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d9cec.  if v0 == 0 then goto L1d9d18;
  #L1d9cf0.  call temp:= `substring`(v0, v10, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L1d9cf6.  v0:= temp @kind object;
  #L1d9cf8.  call `checkNotNullExpressionValue`(v0, v4) @signature `Lkotlin/v/c/i;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d9cfe.  call temp:= `parseInt`(v2) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L1d9d04.  v1:= temp;
  #L1d9d06.  v1:= v1 * v9 @kind int;
  #L1d9d0a.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L1d9d10.  v0:= temp;
  #L1d9d12.  v7:= v1 + v0 @kind int;
  #L1d9d16.  return v7;
  #L1d9d18.  v0:= new `java.lang.NullPointerException`;
  #L1d9d1c.  call `<init>`(v0, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d9d22.  throw v0;
  #L1d9d24.  v0:= new `java.lang.NullPointerException`;
  #L1d9d28.  call `<init>`(v0, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d9d2e.  throw v0;
  #L1d9d30.  return v7;
  catch `java.lang.NumberFormatException` @[L1d9c9c..L1d9ca4] goto L1d9ca8;
  catch `java.lang.NumberFormatException` @[L1d9cfe..L1d9d12] goto L1d9d16;
}
