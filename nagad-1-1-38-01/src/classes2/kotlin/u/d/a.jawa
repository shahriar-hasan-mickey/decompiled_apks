record `kotlin.u.d.a` @kind class @AccessFlag PUBLIC extends `kotlin.u.a` @kind class {
}
procedure `void` `<init>`(`kotlin.u.d.a` v0 @kind this) @signature `Lkotlin/u/d/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1da1a4.  call `<init>`(v0) @signature `Lkotlin/u/a;.<init>:()V` @kind direct;
  #L1da1aa.  return @kind void;
}
procedure `void` `addSuppressed`(`kotlin.u.d.a` v1 @kind this, `java.lang.Throwable` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lkotlin/u/d/a;.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1da1bc.  v0:= "cause" @kind object;
  #L1da1c0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1da1c6.  v0:= "exception" @kind object;
  #L1da1ca.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1da1d0.  call `addSuppressed`(v2, v3) @signature `Ljava/lang/Throwable;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1da1d6.  return @kind void;
}
