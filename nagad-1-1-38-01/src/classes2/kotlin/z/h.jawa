record `kotlin.z.h` @kind class @AccessFlag  extends `kotlin.z.g` @kind class {
}
procedure `java.lang.Iterable` `asIterable`(`kotlin.z.b` v1 @kind object) @signature `Lkotlin/z/h;.asIterable:(Lkotlin/z/b;)Ljava/lang/Iterable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1dc4c8.  v0:= "$this$asIterable" @kind object;
  #L1dc4cc.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dc4d2.  v0:= new `kotlin.z.h$a`;
  #L1dc4d6.  call `<init>`(v0, v1) @signature `Lkotlin/z/h$a;.<init>:(Lkotlin/z/b;)V` @kind direct;
  #L1dc4dc.  return v0 @kind object;
}
procedure `kotlin.z.b` `map`(`kotlin.z.b` v1 @kind object, `kotlin.v.b.l` v2 @kind object) @signature `Lkotlin/z/h;.map:(Lkotlin/z/b;Lkotlin/v/b/l;)Lkotlin/z/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1dc598.  v0:= "$this$map" @kind object;
  #L1dc59c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dc5a2.  v0:= "transform" @kind object;
  #L1dc5a6.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dc5ac.  v0:= new `kotlin.z.i`;
  #L1dc5b0.  call `<init>`(v0, v1, v2) @signature `Lkotlin/z/i;.<init>:(Lkotlin/z/b;Lkotlin/v/b/l;)V` @kind direct;
  #L1dc5b6.  return v0 @kind object;
}
procedure `java.util.Collection` `toCollection`(`kotlin.z.b` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lkotlin/z/h;.toCollection:(Lkotlin/z/b;Ljava/util/Collection;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1dc4f0.  v0:= "$this$toCollection" @kind object;
  #L1dc4f4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dc4fa.  v0:= "destination" @kind object;
  #L1dc4fe.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dc504.  call temp:= `iterator`(v1) @signature `Lkotlin/z/b;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1dc50a.  v1:= temp @kind object;
  #L1dc50c.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1dc512.  v0:= temp;
  #L1dc514.  if v0 == 0 then goto L1dc528;
  #L1dc518.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1dc51e.  v0:= temp @kind object;
  #L1dc520.  call temp:= `add`(v2, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1dc526.  goto L1dc50c;
  #L1dc528.  return v2 @kind object;
}
procedure `java.util.List` `toList`(`kotlin.z.b` v1 @kind object) @signature `Lkotlin/z/h;.toList:(Lkotlin/z/b;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1dc53c.  v0:= "$this$toList" @kind object;
  #L1dc540.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dc546.  call temp:= `toMutableList`(v1) @signature `Lkotlin/z/h;.toMutableList:(Lkotlin/z/b;)Ljava/util/List;` @kind static;
  #L1dc54c.  v1:= temp @kind object;
  #L1dc54e.  call temp:= `optimizeReadOnlyList`(v1) @signature `Lkotlin/r/j;.optimizeReadOnlyList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L1dc554.  v1:= temp @kind object;
  #L1dc556.  return v1 @kind object;
}
procedure `java.util.List` `toMutableList`(`kotlin.z.b` v1 @kind object) @signature `Lkotlin/z/h;.toMutableList:(Lkotlin/z/b;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1dc568.  v0:= "$this$toMutableList" @kind object;
  #L1dc56c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dc572.  v0:= new `java.util.ArrayList`;
  #L1dc576.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1dc57c.  call temp:= `toCollection`(v1, v0) @signature `Lkotlin/z/h;.toCollection:(Lkotlin/z/b;Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L1dc582.  v0:= (`java.util.List`) v0 @kind object;
  #L1dc586.  return v0 @kind object;
}
