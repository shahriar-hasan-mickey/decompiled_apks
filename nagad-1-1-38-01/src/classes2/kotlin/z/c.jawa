record `kotlin.z.c` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.z.h` @kind class {
}
procedure `java.lang.Iterable` `asIterable`(`kotlin.z.b` v0 @kind object) @signature `Lkotlin/z/c;.asIterable:(Lkotlin/z/b;)Ljava/lang/Iterable;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1dc5c8.  call temp:= `asIterable`(v0) @signature `Lkotlin/z/h;.asIterable:(Lkotlin/z/b;)Ljava/lang/Iterable;` @kind static;
  #L1dc5ce.  v0:= temp @kind object;
  #L1dc5d0.  return v0 @kind object;
}
procedure `kotlin.z.b` `asSequence`(`java.util.Iterator` v0 @kind object) @signature `Lkotlin/z/c;.asSequence:(Ljava/util/Iterator;)Lkotlin/z/b;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1dc600.  call temp:= `asSequence`(v0) @signature `Lkotlin/z/f;.asSequence:(Ljava/util/Iterator;)Lkotlin/z/b;` @kind static;
  #L1dc606.  v0:= temp @kind object;
  #L1dc608.  return v0 @kind object;
}
procedure `kotlin.z.b` `map`(`kotlin.z.b` v0 @kind object, `kotlin.v.b.l` v1 @kind object) @signature `Lkotlin/z/c;.map:(Lkotlin/z/b;Lkotlin/v/b/l;)Lkotlin/z/b;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1dc61c.  call temp:= `map`(v0, v1) @signature `Lkotlin/z/h;.map:(Lkotlin/z/b;Lkotlin/v/b/l;)Lkotlin/z/b;` @kind static;
  #L1dc622.  v0:= temp @kind object;
  #L1dc624.  return v0 @kind object;
}
procedure `java.util.List` `toList`(`kotlin.z.b` v0 @kind object) @signature `Lkotlin/z/c;.toList:(Lkotlin/z/b;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1dc5e4.  call temp:= `toList`(v0) @signature `Lkotlin/z/h;.toList:(Lkotlin/z/b;)Ljava/util/List;` @kind static;
  #L1dc5ea.  v0:= temp @kind object;
  #L1dc5ec.  return v0 @kind object;
}
