record `kotlin.x.d` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.x.b` @kind class, `kotlin.x.a` @kind interface {
}
global `kotlin.x.d` `@@kotlin.x.d.j` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlin.x.d$a` `@@kotlin.x.d.k` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/x/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1dc06c.  v0:= new `kotlin.x.d$a`;
  #L1dc070.  v1:= 0I;
  #L1dc072.  call `<init>`(v0, v1) @signature `Lkotlin/x/d$a;.<init>:(Lkotlin/v/c/f;)V` @kind direct;
  #L1dc078.  `@@kotlin.x.d.k` @type ^`kotlin.x.d$a` := v0 @kind object;
  #L1dc07c.  v0:= new `kotlin.x.d`;
  #L1dc080.  v1:= 1I;
  #L1dc082.  v2:= 0I;
  #L1dc084.  call `<init>`(v0, v1, v2) @signature `Lkotlin/x/d;.<init>:(II)V` @kind direct;
  #L1dc08a.  `@@kotlin.x.d.j` @type ^`kotlin.x.d` := v0 @kind object;
  #L1dc08e.  return @kind void;
}
procedure `void` `<init>`(`kotlin.x.d` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lkotlin/x/d;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1dc0a0.  v0:= 1I;
  #L1dc0a2.  call `<init>`(v1, v2, v3, v0) @signature `Lkotlin/x/b;.<init>:(III)V` @kind direct;
  #L1dc0a8.  return @kind void;
}
procedure `kotlin.x.d` `access$getEMPTY$cp`() @signature `Lkotlin/x/d;.access$getEMPTY$cp:()Lkotlin/x/d;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L1dc054.  v0:= `@@kotlin.x.d.j` @type ^`kotlin.x.d` @kind object;
  #L1dc058.  return v0 @kind object;
}
procedure `boolean` `equals`(`kotlin.x.d` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/x/d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dbef0.  v0:= instanceof @variable v3 @type ^`kotlin.x.d` @kind boolean;
  #L1dbef4.  if v0 == 0 then goto L1dbf46;
  #L1dbef8.  call temp:= `isEmpty`(v2) @signature `Lkotlin/x/d;.isEmpty:()Z` @kind virtual;
  #L1dbefe.  v0:= temp;
  #L1dbf00.  if v0 == 0 then goto L1dbf16;
  #L1dbf04.  v0:= v3 @kind object;
  #L1dbf06.  v0:= (`kotlin.x.d`) v0 @kind object;
  #L1dbf0a.  call temp:= `isEmpty`(v0) @signature `Lkotlin/x/d;.isEmpty:()Z` @kind virtual;
  #L1dbf10.  v0:= temp;
  #L1dbf12.  if v0 != 0 then goto L1dbf42;
  #L1dbf16.  call temp:= `getFirst`(v2) @signature `Lkotlin/x/b;.getFirst:()I` @kind virtual;
  #L1dbf1c.  v0:= temp;
  #L1dbf1e.  v3:= (`kotlin.x.d`) v3 @kind object;
  #L1dbf22.  call temp:= `getFirst`(v3) @signature `Lkotlin/x/b;.getFirst:()I` @kind virtual;
  #L1dbf28.  v1:= temp;
  #L1dbf2a.  if v0 != v1 then goto L1dbf46;
  #L1dbf2e.  call temp:= `getLast`(v2) @signature `Lkotlin/x/b;.getLast:()I` @kind virtual;
  #L1dbf34.  v0:= temp;
  #L1dbf36.  call temp:= `getLast`(v3) @signature `Lkotlin/x/b;.getLast:()I` @kind virtual;
  #L1dbf3c.  v3:= temp;
  #L1dbf3e.  if v0 != v3 then goto L1dbf46;
  #L1dbf42.  v3:= 1I;
  #L1dbf44.  goto L1dbf48;
  #L1dbf46.  v3:= 0I;
  #L1dbf48.  return v3;
}
procedure `java.lang.Integer` `getEndInclusive`(`kotlin.x.d` v1 @kind this) @signature `Lkotlin/x/d;.getEndInclusive:()Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dbfc0.  call temp:= `getLast`(v1) @signature `Lkotlin/x/b;.getLast:()I` @kind virtual;
  #L1dbfc6.  v0:= temp;
  #L1dbfc8.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1dbfce.  v0:= temp @kind object;
  #L1dbfd0.  return v0 @kind object;
}
procedure `java.lang.Integer` `getStart`(`kotlin.x.d` v1 @kind this) @signature `Lkotlin/x/d;.getStart:()Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dbfe4.  call temp:= `getFirst`(v1) @signature `Lkotlin/x/b;.getFirst:()I` @kind virtual;
  #L1dbfea.  v0:= temp;
  #L1dbfec.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1dbff2.  v0:= temp @kind object;
  #L1dbff4.  return v0 @kind object;
}
procedure `int` `hashCode`(`kotlin.x.d` v2 @kind this) @signature `Lkotlin/x/d;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dbf88.  call temp:= `isEmpty`(v2) @signature `Lkotlin/x/d;.isEmpty:()Z` @kind virtual;
  #L1dbf8e.  v0:= temp;
  #L1dbf90.  if v0 == 0 then goto L1dbf98;
  #L1dbf94.  v0:= -1I;
  #L1dbf96.  goto L1dbfae;
  #L1dbf98.  call temp:= `getFirst`(v2) @signature `Lkotlin/x/b;.getFirst:()I` @kind virtual;
  #L1dbf9e.  v0:= temp;
  #L1dbfa0.  v0:= v0 * 31;
  #L1dbfa4.  call temp:= `getLast`(v2) @signature `Lkotlin/x/b;.getLast:()I` @kind virtual;
  #L1dbfaa.  v1:= temp;
  #L1dbfac.  v0:= v0 + v1 @kind int;
  #L1dbfae.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.x.d` v2 @kind this) @signature `Lkotlin/x/d;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dbf5c.  call temp:= `getFirst`(v2) @signature `Lkotlin/x/b;.getFirst:()I` @kind virtual;
  #L1dbf62.  v0:= temp;
  #L1dbf64.  call temp:= `getLast`(v2) @signature `Lkotlin/x/b;.getLast:()I` @kind virtual;
  #L1dbf6a.  v1:= temp;
  #L1dbf6c.  if v0 <= v1 then goto L1dbf74;
  #L1dbf70.  v0:= 1I;
  #L1dbf72.  goto L1dbf76;
  #L1dbf74.  v0:= 0I;
  #L1dbf76.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.x.d` v2 @kind this) @signature `Lkotlin/x/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dc008.  v0:= new `java.lang.StringBuilder`;
  #L1dc00c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1dc012.  call temp:= `getFirst`(v2) @signature `Lkotlin/x/b;.getFirst:()I` @kind virtual;
  #L1dc018.  v1:= temp;
  #L1dc01a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dc020.  v1:= ".." @kind object;
  #L1dc024.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dc02a.  call temp:= `getLast`(v2) @signature `Lkotlin/x/b;.getLast:()I` @kind virtual;
  #L1dc030.  v1:= temp;
  #L1dc032.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1dc038.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1dc03e.  v0:= temp @kind object;
  #L1dc040.  return v0 @kind object;
}
