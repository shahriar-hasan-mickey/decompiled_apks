record `kotlin.r.t` @kind class @AccessFlag  extends `kotlin.r.s` @kind class {
}
procedure `boolean` `contains`(`java.lang.Iterable` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/r/t;.contains:(Ljava/lang/Iterable;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d6960.  v0:= "$this$contains" @kind object;
  #L1d6964.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d696a.  v0:= instanceof @variable v1 @type ^`java.util.Collection` @kind boolean;
  #L1d696e.  if v0 == 0 then goto L1d6980;
  #L1d6972.  v1:= (`java.util.Collection`) v1 @kind object;
  #L1d6976.  call temp:= `contains`(v1, v2) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L1d697c.  v1:= temp;
  #L1d697e.  return v1;
  #L1d6980.  call temp:= `indexOf`(v1, v2) @signature `Lkotlin/r/t;.indexOf:(Ljava/lang/Iterable;Ljava/lang/Object;)I` @kind static;
  #L1d6986.  v1:= temp;
  #L1d6988.  if v1 < 0 then goto L1d6990;
  #L1d698c.  v1:= 1I;
  #L1d698e.  goto L1d6992;
  #L1d6990.  v1:= 0I;
  #L1d6992.  return v1;
}
procedure `java.lang.Object` `elementAtOrNull`(`java.lang.Iterable` v4 @kind object, `int` v5 ) @signature `Lkotlin/r/t;.elementAtOrNull:(Ljava/lang/Iterable;I)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1d6ac0.  v0:= "$this$elementAtOrNull" @kind object;
  #L1d6ac4.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6aca.  v0:= instanceof @variable v4 @type ^`java.util.List` @kind boolean;
  #L1d6ace.  if v0 == 0 then goto L1d6ae0;
  #L1d6ad2.  v4:= (`java.util.List`) v4 @kind object;
  #L1d6ad6.  call temp:= `getOrNull`(v4, v5) @signature `Lkotlin/r/t;.getOrNull:(Ljava/util/List;I)Ljava/lang/Object;` @kind static;
  #L1d6adc.  v4:= temp @kind object;
  #L1d6ade.  return v4 @kind object;
  #L1d6ae0.  v0:= 0I;
  #L1d6ae2.  if v5 >= 0 then goto L1d6ae8;
  #L1d6ae6.  return v0 @kind object;
  #L1d6ae8.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1d6aee.  v4:= temp @kind object;
  #L1d6af0.  v1:= 0I;
  #L1d6af2.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d6af8.  v2:= temp;
  #L1d6afa.  if v2 == 0 then goto L1d6b14;
  #L1d6afe.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d6b04.  v2:= temp @kind object;
  #L1d6b06.  v3:= v1 + 1;
  #L1d6b0a.  if v5 != v1 then goto L1d6b10;
  #L1d6b0e.  return v2 @kind object;
  #L1d6b10.  v1:= v3;
  #L1d6b12.  goto L1d6af2;
  #L1d6b14.  return v0 @kind object;
}
procedure `java.lang.Object` `first`(`java.util.List` v1 @kind object) @signature `Lkotlin/r/t;.first:(Ljava/util/List;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d6b28.  v0:= "$this$first" @kind object;
  #L1d6b2c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6b32.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1d6b38.  v0:= temp;
  #L1d6b3a.  if v0 != 0 then goto L1d6b4a;
  #L1d6b3e.  v0:= 0I;
  #L1d6b40.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d6b46.  v1:= temp @kind object;
  #L1d6b48.  return v1 @kind object;
  #L1d6b4a.  v1:= new `java.util.NoSuchElementException`;
  #L1d6b4e.  v0:= "List is empty." @kind object;
  #L1d6b52.  call `<init>`(v1, v0) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d6b58.  throw v1;
}
procedure `java.lang.Object` `firstOrNull`(`java.util.List` v1 @kind object) @signature `Lkotlin/r/t;.firstOrNull:(Ljava/util/List;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d6b6c.  v0:= "$this$firstOrNull" @kind object;
  #L1d6b70.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6b76.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1d6b7c.  v0:= temp;
  #L1d6b7e.  if v0 == 0 then goto L1d6b86;
  #L1d6b82.  v1:= 0I;
  #L1d6b84.  goto L1d6b90;
  #L1d6b86.  v0:= 0I;
  #L1d6b88.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d6b8e.  v1:= temp @kind object;
  #L1d6b90.  return v1 @kind object;
}
procedure `java.lang.Object` `getOrNull`(`java.util.List` v1 @kind object, `int` v2 ) @signature `Lkotlin/r/t;.getOrNull:(Ljava/util/List;I)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1d6ba4.  v0:= "$this$getOrNull" @kind object;
  #L1d6ba8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6bae.  if v2 < 0 then goto L1d6bc8;
  #L1d6bb2.  call temp:= `getLastIndex`(v1) @signature `Lkotlin/r/l;.getLastIndex:(Ljava/util/List;)I` @kind static;
  #L1d6bb8.  v0:= temp;
  #L1d6bba.  if v2 > v0 then goto L1d6bc8;
  #L1d6bbe.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d6bc4.  v1:= temp @kind object;
  #L1d6bc6.  goto L1d6bca;
  #L1d6bc8.  v1:= 0I;
  #L1d6bca.  return v1 @kind object;
}
procedure `int` `indexOf`(`java.lang.Iterable` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlin/r/t;.indexOf:(Ljava/lang/Iterable;Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1d69a4.  v0:= "$this$indexOf" @kind object;
  #L1d69a8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d69ae.  v0:= instanceof @variable v2 @type ^`java.util.List` @kind boolean;
  #L1d69b2.  if v0 == 0 then goto L1d69c4;
  #L1d69b6.  v2:= (`java.util.List`) v2 @kind object;
  #L1d69ba.  call temp:= `indexOf`(v2, v3) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L1d69c0.  v2:= temp;
  #L1d69c2.  return v2;
  #L1d69c4.  v0:= 0I;
  #L1d69c6.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1d69cc.  v2:= temp @kind object;
  #L1d69ce.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d69d4.  v1:= temp;
  #L1d69d6.  if v1 == 0 then goto L1d6a04;
  #L1d69da.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d69e0.  v1:= temp @kind object;
  #L1d69e2.  if v0 < 0 then goto L1d69fa;
  #L1d69e6.  call temp:= `areEqual`(v3, v1) @signature `Lkotlin/v/c/i;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1d69ec.  v1:= temp;
  #L1d69ee.  if v1 == 0 then goto L1d69f4;
  #L1d69f2.  return v0;
  #L1d69f4.  v0:= v0 + 1;
  #L1d69f8.  goto L1d69ce;
  #L1d69fa.  call `throwIndexOverflow`() @signature `Lkotlin/r/j;.throwIndexOverflow:()V` @kind static;
  #L1d6a00.  v2:= 0I;
  #L1d6a02.  throw v2;
  #L1d6a04.  v2:= -1I;
  #L1d6a06.  return v2;
}
procedure `java.lang.Appendable` `joinTo`(`java.lang.Iterable` v2 @kind object, `java.lang.Appendable` v3 @kind object, `java.lang.CharSequence` v4 @kind object, `java.lang.CharSequence` v5 @kind object, `java.lang.CharSequence` v6 @kind object, `int` v7 , `java.lang.CharSequence` v8 @kind object, `kotlin.v.b.l` v9 @kind object) @signature `Lkotlin/r/t;.joinTo:(Ljava/lang/Iterable;Ljava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/v/b/l;)Ljava/lang/Appendable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1d6a18.  v0:= "$this$joinTo" @kind object;
  #L1d6a1c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6a22.  v0:= "buffer" @kind object;
  #L1d6a26.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6a2c.  v0:= "separator" @kind object;
  #L1d6a30.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6a36.  v0:= "prefix" @kind object;
  #L1d6a3a.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6a40.  v0:= "postfix" @kind object;
  #L1d6a44.  call `checkNotNullParameter`(v6, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6a4a.  v0:= "truncated" @kind object;
  #L1d6a4e.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6a54.  call temp:= `append`(v3, v5) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L1d6a5a.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1d6a60.  v2:= temp @kind object;
  #L1d6a62.  v5:= 0I;
  #L1d6a64.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d6a6a.  v0:= temp;
  #L1d6a6c.  if v0 == 0 then goto L1d6a98;
  #L1d6a70.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d6a76.  v0:= temp @kind object;
  #L1d6a78.  v5:= v5 + 1;
  #L1d6a7c.  v1:= 1I;
  #L1d6a7e.  if v5 <= v1 then goto L1d6a88;
  #L1d6a82.  call temp:= `append`(v3, v4) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L1d6a88.  if v7 < 0 then goto L1d6a90;
  #L1d6a8c.  if v5 > v7 then goto L1d6a98;
  #L1d6a90.  call `appendElement`(v3, v0, v9) @signature `Lkotlin/a0/h;.appendElement:(Ljava/lang/Appendable;Ljava/lang/Object;Lkotlin/v/b/l;)V` @kind static;
  #L1d6a96.  goto L1d6a64;
  #L1d6a98.  if v7 < 0 then goto L1d6aa6;
  #L1d6a9c.  if v5 <= v7 then goto L1d6aa6;
  #L1d6aa0.  call temp:= `append`(v3, v8) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L1d6aa6.  call temp:= `append`(v3, v6) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L1d6aac.  return v3 @kind object;
}
procedure `java.lang.String` `joinToString`(`java.lang.Iterable` v9 @kind object, `java.lang.CharSequence` v10 @kind object, `java.lang.CharSequence` v11 @kind object, `java.lang.CharSequence` v12 @kind object, `int` v13 , `java.lang.CharSequence` v14 @kind object, `kotlin.v.b.l` v15 @kind object) @signature `Lkotlin/r/t;.joinToString:(Ljava/lang/Iterable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/v/b/l;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1d6d74.  v0:= "$this$joinToString" @kind object;
  #L1d6d78.  call `checkNotNullParameter`(v9, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6d7e.  v0:= "separator" @kind object;
  #L1d6d82.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6d88.  v0:= "prefix" @kind object;
  #L1d6d8c.  call `checkNotNullParameter`(v11, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6d92.  v0:= "postfix" @kind object;
  #L1d6d96.  call `checkNotNullParameter`(v12, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6d9c.  v0:= "truncated" @kind object;
  #L1d6da0.  call `checkNotNullParameter`(v14, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6da6.  v0:= new `java.lang.StringBuilder`;
  #L1d6daa.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d6db0.  v1:= v9 @kind object;
  #L1d6db2.  v2:= v0 @kind object;
  #L1d6db4.  v3:= v10 @kind object;
  #L1d6db6.  v4:= v11 @kind object;
  #L1d6db8.  v5:= v12 @kind object;
  #L1d6dba.  v6:= v13;
  #L1d6dbc.  v7:= v14 @kind object;
  #L1d6dbe.  v8:= v15 @kind object;
  #L1d6dc0.  call temp:= `joinTo`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lkotlin/r/t;.joinTo:(Ljava/lang/Iterable;Ljava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/v/b/l;)Ljava/lang/Appendable;` @kind static;
  #L1d6dc6.  v0:= (`java.lang.StringBuilder`) v0 @kind object;
  #L1d6dca.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d6dd0.  v9:= temp @kind object;
  #L1d6dd2.  v10:= "joinTo(StringBuilder(), …ed, transform).toString()" @kind object;
  #L1d6dd6.  call `checkNotNullExpressionValue`(v9, v10) @signature `Lkotlin/v/c/i;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6ddc.  return v9 @kind object;
}
procedure `java.lang.String` `joinToString$default`(`java.lang.Iterable` v4 @kind object, `java.lang.CharSequence` v5 @kind object, `java.lang.CharSequence` v6 @kind object, `java.lang.CharSequence` v7 @kind object, `int` v8 , `java.lang.CharSequence` v9 @kind object, `kotlin.v.b.l` v10 @kind object, `int` v11 , `java.lang.Object` v12 @kind object) @signature `Lkotlin/r/t;.joinToString$default:(Ljava/lang/Iterable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/v/b/l;ILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1d6cf8.  v12:= v11 ^& 1;
  #L1d6cfc.  if v12 == 0 then goto L1d6d04;
  #L1d6d00.  v5:= ", " @kind object;
  #L1d6d04.  v12:= v11 ^& 2;
  #L1d6d08.  v0:= "" @kind object;
  #L1d6d0c.  if v12 == 0 then goto L1d6d14;
  #L1d6d10.  v12:= v0 @kind object;
  #L1d6d12.  goto L1d6d16;
  #L1d6d14.  v12:= v6 @kind object;
  #L1d6d16.  v6:= v11 ^& 4;
  #L1d6d1a.  if v6 == 0 then goto L1d6d20;
  #L1d6d1e.  goto L1d6d22;
  #L1d6d20.  v0:= v7 @kind object;
  #L1d6d22.  v6:= v11 ^& 8;
  #L1d6d26.  if v6 == 0 then goto L1d6d30;
  #L1d6d2a.  v8:= -1I;
  #L1d6d2c.  v1:= -1I;
  #L1d6d2e.  goto L1d6d32;
  #L1d6d30.  v1:= v8;
  #L1d6d32.  v6:= v11 ^& 16;
  #L1d6d36.  if v6 == 0 then goto L1d6d3e;
  #L1d6d3a.  v9:= "..." @kind object;
  #L1d6d3e.  v2:= v9 @kind object;
  #L1d6d40.  v6:= v11 ^& 32;
  #L1d6d44.  if v6 == 0 then goto L1d6d4a;
  #L1d6d48.  v10:= 0I;
  #L1d6d4a.  v3:= v10 @kind object;
  #L1d6d4c.  v6:= v4 @kind object;
  #L1d6d4e.  v7:= v5 @kind object;
  #L1d6d50.  v8:= v12 @kind object;
  #L1d6d52.  v9:= v0 @kind object;
  #L1d6d54.  v10:= v1;
  #L1d6d56.  v11:= v2 @kind object;
  #L1d6d58.  v12:= v3 @kind object;
  #L1d6d5a.  call temp:= `joinToString`(v6, v7, v8, v9, v10, v11, v12) @signature `Lkotlin/r/t;.joinToString:(Ljava/lang/Iterable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lkotlin/v/b/l;)Ljava/lang/String;` @kind static;
  #L1d6d60.  v4:= temp @kind object;
  #L1d6d62.  return v4 @kind object;
}
procedure `java.lang.Object` `last`(`java.util.List` v1 @kind object) @signature `Lkotlin/r/t;.last:(Ljava/util/List;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d6bdc.  v0:= "$this$last" @kind object;
  #L1d6be0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6be6.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1d6bec.  v0:= temp;
  #L1d6bee.  if v0 != 0 then goto L1d6c04;
  #L1d6bf2.  call temp:= `getLastIndex`(v1) @signature `Lkotlin/r/l;.getLastIndex:(Ljava/util/List;)I` @kind static;
  #L1d6bf8.  v0:= temp;
  #L1d6bfa.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d6c00.  v1:= temp @kind object;
  #L1d6c02.  return v1 @kind object;
  #L1d6c04.  v1:= new `java.util.NoSuchElementException`;
  #L1d6c08.  v0:= "List is empty." @kind object;
  #L1d6c0c.  call `<init>`(v1, v0) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d6c12.  throw v1;
}
procedure `java.lang.Object` `single`(`java.lang.Iterable` v1 @kind object) @signature `Lkotlin/r/t;.single:(Ljava/lang/Iterable;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d6c24.  v0:= "$this$single" @kind object;
  #L1d6c28.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6c2e.  v0:= instanceof @variable v1 @type ^`java.util.List` @kind boolean;
  #L1d6c32.  if v0 == 0 then goto L1d6c44;
  #L1d6c36.  v1:= (`java.util.List`) v1 @kind object;
  #L1d6c3a.  call temp:= `single`(v1) @signature `Lkotlin/r/t;.single:(Ljava/util/List;)Ljava/lang/Object;` @kind static;
  #L1d6c40.  v1:= temp @kind object;
  #L1d6c42.  return v1 @kind object;
  #L1d6c44.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1d6c4a.  v1:= temp @kind object;
  #L1d6c4c.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d6c52.  v0:= temp;
  #L1d6c54.  if v0 == 0 then goto L1d6c7e;
  #L1d6c58.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d6c5e.  v0:= temp @kind object;
  #L1d6c60.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d6c66.  v1:= temp;
  #L1d6c68.  if v1 != 0 then goto L1d6c6e;
  #L1d6c6c.  return v0 @kind object;
  #L1d6c6e.  v1:= new `java.lang.IllegalArgumentException`;
  #L1d6c72.  v0:= "Collection has more than one element." @kind object;
  #L1d6c76.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d6c7c.  throw v1;
  #L1d6c7e.  v1:= new `java.util.NoSuchElementException`;
  #L1d6c82.  v0:= "Collection is empty." @kind object;
  #L1d6c86.  call `<init>`(v1, v0) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d6c8c.  throw v1;
}
procedure `java.lang.Object` `single`(`java.util.List` v2 @kind object) @signature `Lkotlin/r/t;.single:(Ljava/util/List;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1d6ca0.  v0:= "$this$single" @kind object;
  #L1d6ca4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6caa.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d6cb0.  v0:= temp;
  #L1d6cb2.  if v0 == 0 then goto L1d6cd8;
  #L1d6cb6.  v1:= 1I;
  #L1d6cb8.  if v0 != v1 then goto L1d6cc8;
  #L1d6cbc.  v0:= 0I;
  #L1d6cbe.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d6cc4.  v2:= temp @kind object;
  #L1d6cc6.  return v2 @kind object;
  #L1d6cc8.  v2:= new `java.lang.IllegalArgumentException`;
  #L1d6ccc.  v0:= "List has more than one element." @kind object;
  #L1d6cd0.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d6cd6.  throw v2;
  #L1d6cd8.  v2:= new `java.util.NoSuchElementException`;
  #L1d6cdc.  v0:= "List is empty." @kind object;
  #L1d6ce0.  call `<init>`(v2, v0) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d6ce6.  throw v2;
}
procedure `java.util.List` `sortedWith`(`java.lang.Iterable` v3 @kind object, `java.util.Comparator` v4 @kind object) @signature `Lkotlin/r/t;.sortedWith:(Ljava/lang/Iterable;Ljava/util/Comparator;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1d6e80.  v0:= "$this$sortedWith" @kind object;
  #L1d6e84.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6e8a.  v0:= "comparator" @kind object;
  #L1d6e8e.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6e94.  v0:= instanceof @variable v3 @type ^`java.util.Collection` @kind boolean;
  #L1d6e98.  if v0 == 0 then goto L1d6efc;
  #L1d6e9c.  v0:= v3 @kind object;
  #L1d6e9e.  v0:= (`java.util.Collection`) v0 @kind object;
  #L1d6ea2.  call temp:= `size`(v0) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L1d6ea8.  v1:= temp;
  #L1d6eaa.  v2:= 1I;
  #L1d6eac.  if v1 > v2 then goto L1d6eba;
  #L1d6eb0.  call temp:= `toList`(v3) @signature `Lkotlin/r/j;.toList:(Ljava/lang/Iterable;)Ljava/util/List;` @kind static;
  #L1d6eb6.  v3:= temp @kind object;
  #L1d6eb8.  return v3 @kind object;
  #L1d6eba.  v3:= 0I;
  #L1d6ebc.  v3:= new `java.lang.Object`[v3];
  #L1d6ec0.  call temp:= `toArray`(v0, v3) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L1d6ec6.  v3:= temp @kind object;
  #L1d6ec8.  v0:= "null cannot be cast to non-null type kotlin.Array<T>" @kind object;
  #L1d6ecc.  if v3 == 0 then goto L1d6ef0;
  #L1d6ed0.  if v3 == 0 then goto L1d6ee4;
  #L1d6ed4.  call `sortWith`(v3, v4) @signature `Lkotlin/r/g;.sortWith:([Ljava/lang/Object;Ljava/util/Comparator;)V` @kind static;
  #L1d6eda.  call temp:= `asList`(v3) @signature `Lkotlin/r/d;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1d6ee0.  v3:= temp @kind object;
  #L1d6ee2.  return v3 @kind object;
  #L1d6ee4.  v3:= new `java.lang.NullPointerException`;
  #L1d6ee8.  call `<init>`(v3, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d6eee.  throw v3;
  #L1d6ef0.  v3:= new `java.lang.NullPointerException`;
  #L1d6ef4.  call `<init>`(v3, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d6efa.  throw v3;
  #L1d6efc.  call temp:= `toMutableList`(v3) @signature `Lkotlin/r/t;.toMutableList:(Ljava/lang/Iterable;)Ljava/util/List;` @kind static;
  #L1d6f02.  v3:= temp @kind object;
  #L1d6f04.  call `sortWith`(v3, v4) @signature `Lkotlin/r/j;.sortWith:(Ljava/util/List;Ljava/util/Comparator;)V` @kind static;
  #L1d6f0a.  return v3 @kind object;
}
procedure `java.util.Collection` `toCollection`(`java.lang.Iterable` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lkotlin/r/t;.toCollection:(Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1d6df0.  v0:= "$this$toCollection" @kind object;
  #L1d6df4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6dfa.  v0:= "destination" @kind object;
  #L1d6dfe.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6e04.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1d6e0a.  v1:= temp @kind object;
  #L1d6e0c.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d6e12.  v0:= temp;
  #L1d6e14.  if v0 == 0 then goto L1d6e28;
  #L1d6e18.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d6e1e.  v0:= temp @kind object;
  #L1d6e20.  call temp:= `add`(v2, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1d6e26.  goto L1d6e0c;
  #L1d6e28.  return v2 @kind object;
}
procedure `java.util.HashSet` `toHashSet`(`java.lang.Iterable` v2 @kind object) @signature `Lkotlin/r/t;.toHashSet:(Ljava/lang/Iterable;)Ljava/util/HashSet;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1d6e3c.  v0:= "$this$toHashSet" @kind object;
  #L1d6e40.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6e46.  v0:= new `java.util.HashSet`;
  #L1d6e4a.  v1:= 12I;
  #L1d6e4e.  call temp:= `collectionSizeOrDefault`(v2, v1) @signature `Lkotlin/r/j;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @kind static;
  #L1d6e54.  v1:= temp;
  #L1d6e56.  call temp:= `mapCapacity`(v1) @signature `Lkotlin/r/a0;.mapCapacity:(I)I` @kind static;
  #L1d6e5c.  v1:= temp;
  #L1d6e5e.  call `<init>`(v0, v1) @signature `Ljava/util/HashSet;.<init>:(I)V` @kind direct;
  #L1d6e64.  call temp:= `toCollection`(v2, v0) @signature `Lkotlin/r/t;.toCollection:(Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L1d6e6a.  v0:= (`java.util.HashSet`) v0 @kind object;
  #L1d6e6e.  return v0 @kind object;
}
procedure `java.util.List` `toList`(`java.lang.Iterable` v3 @kind object) @signature `Lkotlin/r/t;.toList:(Ljava/lang/Iterable;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1d6f1c.  v0:= "$this$toList" @kind object;
  #L1d6f20.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6f26.  v0:= instanceof @variable v3 @type ^`java.util.Collection` @kind boolean;
  #L1d6f2a.  if v0 == 0 then goto L1d6f8c;
  #L1d6f2e.  v0:= v3 @kind object;
  #L1d6f30.  v0:= (`java.util.Collection`) v0 @kind object;
  #L1d6f34.  call temp:= `size`(v0) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L1d6f3a.  v1:= temp;
  #L1d6f3c.  if v1 == 0 then goto L1d6f82;
  #L1d6f40.  v2:= 1I;
  #L1d6f42.  if v1 == v2 then goto L1d6f50;
  #L1d6f46.  call temp:= `toMutableList`(v0) @signature `Lkotlin/r/j;.toMutableList:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L1d6f4c.  v3:= temp @kind object;
  #L1d6f4e.  goto L1d6f8a;
  #L1d6f50.  v0:= instanceof @variable v3 @type ^`java.util.List` @kind boolean;
  #L1d6f54.  if v0 == 0 then goto L1d6f68;
  #L1d6f58.  v3:= (`java.util.List`) v3 @kind object;
  #L1d6f5c.  v0:= 0I;
  #L1d6f5e.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d6f64.  v3:= temp @kind object;
  #L1d6f66.  goto L1d6f78;
  #L1d6f68.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1d6f6e.  v3:= temp @kind object;
  #L1d6f70.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d6f76.  v3:= temp @kind object;
  #L1d6f78.  call temp:= `listOf`(v3) @signature `Lkotlin/r/j;.listOf:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1d6f7e.  v3:= temp @kind object;
  #L1d6f80.  goto L1d6f8a;
  #L1d6f82.  call temp:= `emptyList`() @signature `Lkotlin/r/j;.emptyList:()Ljava/util/List;` @kind static;
  #L1d6f88.  v3:= temp @kind object;
  #L1d6f8a.  return v3 @kind object;
  #L1d6f8c.  call temp:= `toMutableList`(v3) @signature `Lkotlin/r/t;.toMutableList:(Ljava/lang/Iterable;)Ljava/util/List;` @kind static;
  #L1d6f92.  v3:= temp @kind object;
  #L1d6f94.  call temp:= `optimizeReadOnlyList`(v3) @signature `Lkotlin/r/j;.optimizeReadOnlyList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L1d6f9a.  v3:= temp @kind object;
  #L1d6f9c.  return v3 @kind object;
}
procedure `java.util.List` `toMutableList`(`java.lang.Iterable` v1 @kind object) @signature `Lkotlin/r/t;.toMutableList:(Ljava/lang/Iterable;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1d6fb0.  v0:= "$this$toMutableList" @kind object;
  #L1d6fb4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6fba.  v0:= instanceof @variable v1 @type ^`java.util.Collection` @kind boolean;
  #L1d6fbe.  if v0 == 0 then goto L1d6fd0;
  #L1d6fc2.  v1:= (`java.util.Collection`) v1 @kind object;
  #L1d6fc6.  call temp:= `toMutableList`(v1) @signature `Lkotlin/r/j;.toMutableList:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L1d6fcc.  v1:= temp @kind object;
  #L1d6fce.  return v1 @kind object;
  #L1d6fd0.  v0:= new `java.util.ArrayList`;
  #L1d6fd4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1d6fda.  call temp:= `toCollection`(v1, v0) @signature `Lkotlin/r/t;.toCollection:(Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L1d6fe0.  v0:= (`java.util.List`) v0 @kind object;
  #L1d6fe4.  return v0 @kind object;
}
procedure `java.util.List` `toMutableList`(`java.util.Collection` v1 @kind object) @signature `Lkotlin/r/t;.toMutableList:(Ljava/util/Collection;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d6ff8.  v0:= "$this$toMutableList" @kind object;
  #L1d6ffc.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d7002.  v0:= new `java.util.ArrayList`;
  #L1d7006.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L1d700c.  return v0 @kind object;
}
procedure `java.util.Set` `toSet`(`java.lang.Iterable` v3 @kind object) @signature `Lkotlin/r/t;.toSet:(Ljava/lang/Iterable;)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1d70b4.  v0:= "$this$toSet" @kind object;
  #L1d70b8.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d70be.  v0:= instanceof @variable v3 @type ^`java.util.Collection` @kind boolean;
  #L1d70c2.  if v0 == 0 then goto L1d7140;
  #L1d70c6.  v0:= v3 @kind object;
  #L1d70c8.  v0:= (`java.util.Collection`) v0 @kind object;
  #L1d70cc.  call temp:= `size`(v0) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L1d70d2.  v1:= temp;
  #L1d70d4.  if v1 == 0 then goto L1d7136;
  #L1d70d8.  v2:= 1I;
  #L1d70da.  if v1 == v2 then goto L1d7104;
  #L1d70de.  v1:= new `java.util.LinkedHashSet`;
  #L1d70e2.  call temp:= `size`(v0) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L1d70e8.  v0:= temp;
  #L1d70ea.  call temp:= `mapCapacity`(v0) @signature `Lkotlin/r/a0;.mapCapacity:(I)I` @kind static;
  #L1d70f0.  v0:= temp;
  #L1d70f2.  call `<init>`(v1, v0) @signature `Ljava/util/LinkedHashSet;.<init>:(I)V` @kind direct;
  #L1d70f8.  call temp:= `toCollection`(v3, v1) @signature `Lkotlin/r/t;.toCollection:(Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L1d70fe.  v1:= (`java.util.Set`) v1 @kind object;
  #L1d7102.  goto L1d713e;
  #L1d7104.  v0:= instanceof @variable v3 @type ^`java.util.List` @kind boolean;
  #L1d7108.  if v0 == 0 then goto L1d711c;
  #L1d710c.  v3:= (`java.util.List`) v3 @kind object;
  #L1d7110.  v0:= 0I;
  #L1d7112.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d7118.  v3:= temp @kind object;
  #L1d711a.  goto L1d712c;
  #L1d711c.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1d7122.  v3:= temp @kind object;
  #L1d7124.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d712a.  v3:= temp @kind object;
  #L1d712c.  call temp:= `setOf`(v3) @signature `Lkotlin/r/g0;.setOf:(Ljava/lang/Object;)Ljava/util/Set;` @kind static;
  #L1d7132.  v1:= temp @kind object;
  #L1d7134.  goto L1d713e;
  #L1d7136.  call temp:= `emptySet`() @signature `Lkotlin/r/h0;.emptySet:()Ljava/util/Set;` @kind static;
  #L1d713c.  v1:= temp @kind object;
  #L1d713e.  return v1 @kind object;
  #L1d7140.  v0:= new `java.util.LinkedHashSet`;
  #L1d7144.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L1d714a.  call temp:= `toCollection`(v3, v0) @signature `Lkotlin/r/t;.toCollection:(Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L1d7150.  v0:= (`java.util.Set`) v0 @kind object;
  #L1d7154.  call temp:= `optimizeReadOnlySet`(v0) @signature `Lkotlin/r/h0;.optimizeReadOnlySet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L1d715a.  v3:= temp @kind object;
  #L1d715c.  return v3 @kind object;
}
procedure `java.util.List` `zip`(`java.lang.Iterable` v4 @kind object, `java.lang.Iterable` v5 @kind object) @signature `Lkotlin/r/t;.zip:(Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1d7020.  v0:= "$this$zip" @kind object;
  #L1d7024.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d702a.  v0:= "other" @kind object;
  #L1d702e.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d7034.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1d703a.  v0:= temp @kind object;
  #L1d703c.  call temp:= `iterator`(v5) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1d7042.  v1:= temp @kind object;
  #L1d7044.  v2:= new `java.util.ArrayList`;
  #L1d7048.  v3:= 10I;
  #L1d704c.  call temp:= `collectionSizeOrDefault`(v4, v3) @signature `Lkotlin/r/j;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @kind static;
  #L1d7052.  v4:= temp;
  #L1d7054.  call temp:= `collectionSizeOrDefault`(v5, v3) @signature `Lkotlin/r/j;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @kind static;
  #L1d705a.  v5:= temp;
  #L1d705c.  call temp:= `min`(v4, v5) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1d7062.  v4:= temp;
  #L1d7064.  call `<init>`(v2, v4) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L1d706a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d7070.  v4:= temp;
  #L1d7072.  if v4 == 0 then goto L1d70a2;
  #L1d7076.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d707c.  v4:= temp;
  #L1d707e.  if v4 == 0 then goto L1d70a2;
  #L1d7082.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d7088.  v4:= temp @kind object;
  #L1d708a.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d7090.  v5:= temp @kind object;
  #L1d7092.  call temp:= `to`(v4, v5) @signature `Lkotlin/o;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/k;` @kind static;
  #L1d7098.  v4:= temp @kind object;
  #L1d709a.  call temp:= `add`(v2, v4) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1d70a0.  goto L1d706a;
  #L1d70a2.  return v2 @kind object;
}
