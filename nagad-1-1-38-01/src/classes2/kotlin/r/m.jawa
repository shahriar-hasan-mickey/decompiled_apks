record `kotlin.r.m` @kind class @AccessFlag  extends `kotlin.r.l` @kind class {
}
procedure `boolean` `a`(`java.util.Collection` v2 @kind object) @signature `Lkotlin/r/m;.a:(Ljava/util/Collection;)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1d6764.  call temp:= `size`(v2) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L1d676a.  v0:= temp;
  #L1d676c.  v1:= 2I;
  #L1d676e.  if v0 <= v1 then goto L1d677e;
  #L1d6772.  v2:= instanceof @variable v2 @type ^`java.util.ArrayList` @kind boolean;
  #L1d6776.  if v2 == 0 then goto L1d677e;
  #L1d677a.  v2:= 1I;
  #L1d677c.  goto L1d6780;
  #L1d677e.  v2:= 0I;
  #L1d6780.  return v2;
}
procedure `int` `collectionSizeOrDefault`(`java.lang.Iterable` v1 @kind object, `int` v2 ) @signature `Lkotlin/r/m;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d6794.  v0:= "$this$collectionSizeOrDefault" @kind object;
  #L1d6798.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d679e.  v0:= instanceof @variable v1 @type ^`java.util.Collection` @kind boolean;
  #L1d67a2.  if v0 == 0 then goto L1d67b2;
  #L1d67a6.  v1:= (`java.util.Collection`) v1 @kind object;
  #L1d67aa.  call temp:= `size`(v1) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L1d67b0.  v2:= temp;
  #L1d67b2.  return v2;
}
procedure `java.util.Collection` `convertToSetForSetOperationWith`(`java.lang.Iterable` v1 @kind object, `java.lang.Iterable` v2 @kind object) @signature `Lkotlin/r/m;.convertToSetForSetOperationWith:(Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1d67c4.  v0:= "$this$convertToSetForSetOperationWith" @kind object;
  #L1d67c8.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d67ce.  v0:= "source" @kind object;
  #L1d67d2.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d67d8.  v0:= instanceof @variable v1 @type ^`java.util.Set` @kind boolean;
  #L1d67dc.  if v0 == 0 then goto L1d67e6;
  #L1d67e0.  v1:= (`java.util.Collection`) v1 @kind object;
  #L1d67e4.  goto L1d6836;
  #L1d67e6.  v0:= instanceof @variable v1 @type ^`java.util.Collection` @kind boolean;
  #L1d67ea.  if v0 == 0 then goto L1d682e;
  #L1d67ee.  v0:= instanceof @variable v2 @type ^`java.util.Collection` @kind boolean;
  #L1d67f2.  if v0 == 0 then goto L1d680e;
  #L1d67f6.  v2:= (`java.util.Collection`) v2 @kind object;
  #L1d67fa.  call temp:= `size`(v2) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L1d6800.  v2:= temp;
  #L1d6802.  v0:= 2I;
  #L1d6804.  if v2 >= v0 then goto L1d680e;
  #L1d6808.  v1:= (`java.util.Collection`) v1 @kind object;
  #L1d680c.  goto L1d6836;
  #L1d680e.  v2:= v1 @kind object;
  #L1d6810.  v2:= (`java.util.Collection`) v2 @kind object;
  #L1d6814.  call temp:= `a`(v2) @signature `Lkotlin/r/m;.a:(Ljava/util/Collection;)Z` @kind static;
  #L1d681a.  v0:= temp;
  #L1d681c.  if v0 == 0 then goto L1d682a;
  #L1d6820.  call temp:= `toHashSet`(v1) @signature `Lkotlin/r/t;.toHashSet:(Ljava/lang/Iterable;)Ljava/util/HashSet;` @kind static;
  #L1d6826.  v1:= temp @kind object;
  #L1d6828.  goto L1d6836;
  #L1d682a.  v1:= v2 @kind object;
  #L1d682c.  goto L1d6836;
  #L1d682e.  call temp:= `toHashSet`(v1) @signature `Lkotlin/r/t;.toHashSet:(Ljava/lang/Iterable;)Ljava/util/HashSet;` @kind static;
  #L1d6834.  v1:= temp @kind object;
  #L1d6836.  return v1 @kind object;
}
