record `kotlin.r.g` @kind class @AccessFlag  extends `kotlin.r.f` @kind class {
}
procedure `java.util.List` `asList`(`java.lang.Object`[] v1 @kind object) @signature `Lkotlin/r/g;.asList:([Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d5d80.  v0:= "$this$asList" @kind object;
  #L1d5d84.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5d8a.  call temp:= `a`(v1) @signature `Lkotlin/r/i;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1d5d90.  v1:= temp @kind object;
  #L1d5d92.  v0:= "ArraysUtilJVM.asList(this)" @kind object;
  #L1d5d96.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5d9c.  return v1 @kind object;
}
procedure `byte`[] `copyInto`(`byte`[] v1 @kind object, `byte`[] v2 @kind object, `int` v3 , `int` v4 , `int` v5 ) @signature `Lkotlin/r/g;.copyInto:([B[BIII)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d5cb0.  v0:= "$this$copyInto" @kind object;
  #L1d5cb4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5cba.  v0:= "destination" @kind object;
  #L1d5cbe.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5cc4.  v5:= v5 - v4 @kind int;
  #L1d5cc6.  call `arraycopy`(v1, v4, v2, v3, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1d5ccc.  return v2 @kind object;
}
procedure `java.lang.Object`[] `copyInto`(`java.lang.Object`[] v1 @kind object, `java.lang.Object`[] v2 @kind object, `int` v3 , `int` v4 , `int` v5 ) @signature `Lkotlin/r/g;.copyInto:([Ljava/lang/Object;[Ljava/lang/Object;III)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1d5d50.  v0:= "$this$copyInto" @kind object;
  #L1d5d54.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5d5a.  v0:= "destination" @kind object;
  #L1d5d5e.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5d64.  v5:= v5 - v4 @kind int;
  #L1d5d66.  call `arraycopy`(v1, v4, v2, v3, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1d5d6c.  return v2 @kind object;
}
procedure `byte`[] `copyInto$default`(`byte`[] v1 @kind object, `byte`[] v2 @kind object, `int` v3 , `int` v4 , `int` v5 , `int` v6 , `java.lang.Object` v7 @kind object) @signature `Lkotlin/r/g;.copyInto$default:([B[BIIIILjava/lang/Object;)[B` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L1d5c78.  v7:= v6 ^& 2;
  #L1d5c7c.  v0:= 0I;
  #L1d5c7e.  if v7 == 0 then goto L1d5c84;
  #L1d5c82.  v3:= 0I;
  #L1d5c84.  v7:= v6 ^& 4;
  #L1d5c88.  if v7 == 0 then goto L1d5c8e;
  #L1d5c8c.  v4:= 0I;
  #L1d5c8e.  v6:= v6 ^& 8;
  #L1d5c92.  if v6 == 0 then goto L1d5c98;
  #L1d5c96.  v5:= length @variable v1;
  #L1d5c98.  call temp:= `copyInto`(v1, v2, v3, v4, v5) @signature `Lkotlin/r/d;.copyInto:([B[BIII)[B` @kind static;
  #L1d5c9e.  return v2 @kind object;
}
procedure `java.lang.Object`[] `copyInto$default`(`java.lang.Object`[] v1 @kind object, `java.lang.Object`[] v2 @kind object, `int` v3 , `int` v4 , `int` v5 , `int` v6 , `java.lang.Object` v7 @kind object) @signature `Lkotlin/r/g;.copyInto$default:([Ljava/lang/Object;[Ljava/lang/Object;IIIILjava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L1d5d18.  v7:= v6 ^& 2;
  #L1d5d1c.  v0:= 0I;
  #L1d5d1e.  if v7 == 0 then goto L1d5d24;
  #L1d5d22.  v3:= 0I;
  #L1d5d24.  v7:= v6 ^& 4;
  #L1d5d28.  if v7 == 0 then goto L1d5d2e;
  #L1d5d2c.  v4:= 0I;
  #L1d5d2e.  v6:= v6 ^& 8;
  #L1d5d32.  if v6 == 0 then goto L1d5d38;
  #L1d5d36.  v5:= length @variable v1;
  #L1d5d38.  call temp:= `copyInto`(v1, v2, v3, v4, v5) @signature `Lkotlin/r/g;.copyInto:([Ljava/lang/Object;[Ljava/lang/Object;III)[Ljava/lang/Object;` @kind static;
  #L1d5d3e.  return v2 @kind object;
}
procedure `byte`[] `copyOfRange`(`byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lkotlin/r/g;.copyOfRange:([BII)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d5ce0.  v0:= "$this$copyOfRangeImpl" @kind object;
  #L1d5ce4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5cea.  v0:= length @variable v1;
  #L1d5cec.  call `copyOfRangeToIndexCheck`(v3, v0) @signature `Lkotlin/r/e;.copyOfRangeToIndexCheck:(II)V` @kind static;
  #L1d5cf2.  call temp:= `copyOfRange`(v1, v2, v3) @signature `Ljava/util/Arrays;.copyOfRange:([BII)[B` @kind static;
  #L1d5cf8.  v1:= temp @kind object;
  #L1d5cfa.  v2:= "java.util.Arrays.copyOfRâ€¦this, fromIndex, toIndex)" @kind object;
  #L1d5cfe.  call `checkNotNullExpressionValue`(v1, v2) @signature `Lkotlin/v/c/i;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5d04.  return v1 @kind object;
}
procedure `void` `sort`(`java.lang.Object`[] v2 @kind object) @signature `Lkotlin/r/g;.sort:([Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1d5db0.  v0:= "$this$sort" @kind object;
  #L1d5db4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5dba.  v0:= length @variable v2;
  #L1d5dbc.  v1:= 1I;
  #L1d5dbe.  if v0 <= v1 then goto L1d5dc8;
  #L1d5dc2.  call `sort`(v2) @signature `Ljava/util/Arrays;.sort:([Ljava/lang/Object;)V` @kind static;
  #L1d5dc8.  return @kind void;
}
procedure `void` `sortWith`(`java.lang.Object`[] v2 @kind object, `java.util.Comparator` v3 @kind object) @signature `Lkotlin/r/g;.sortWith:([Ljava/lang/Object;Ljava/util/Comparator;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1d5ddc.  v0:= "$this$sortWith" @kind object;
  #L1d5de0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5de6.  v0:= "comparator" @kind object;
  #L1d5dea.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5df0.  v0:= length @variable v2;
  #L1d5df2.  v1:= 1I;
  #L1d5df4.  if v0 <= v1 then goto L1d5dfe;
  #L1d5df8.  call `sort`(v2, v3) @signature `Ljava/util/Arrays;.sort:([Ljava/lang/Object;Ljava/util/Comparator;)V` @kind static;
  #L1d5dfe.  return @kind void;
}
