record `kotlin.r.p` @kind class @AccessFlag  extends `kotlin.r.o` @kind class {
}
procedure `void` `sort`(`java.util.List` v2 @kind object) @signature `Lkotlin/r/p;.sort:(Ljava/util/List;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1d6848.  v0:= "$this$sort" @kind object;
  #L1d684c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6852.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d6858.  v0:= temp;
  #L1d685a.  v1:= 1I;
  #L1d685c.  if v0 <= v1 then goto L1d6866;
  #L1d6860.  call `sort`(v2) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;)V` @kind static;
  #L1d6866.  return @kind void;
}
procedure `void` `sortWith`(`java.util.List` v2 @kind object, `java.util.Comparator` v3 @kind object) @signature `Lkotlin/r/p;.sortWith:(Ljava/util/List;Ljava/util/Comparator;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1d6878.  v0:= "$this$sortWith" @kind object;
  #L1d687c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6882.  v0:= "comparator" @kind object;
  #L1d6886.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d688c.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d6892.  v0:= temp;
  #L1d6894.  v1:= 1I;
  #L1d6896.  if v0 <= v1 then goto L1d68a0;
  #L1d689a.  call `sort`(v2, v3) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;Ljava/util/Comparator;)V` @kind static;
  #L1d68a0.  return @kind void;
}
