record `kotlin.r.b$d` @kind class @AccessFlag FINAL extends `kotlin.r.b` @kind class, `java.util.RandomAccess` @kind interface {
  `int` `kotlin.r.b$d.g` @AccessFlag PRIVATE;
  `kotlin.r.b` `kotlin.r.b$d.h` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.r.b$d.i` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.r.b$d` v1 @kind this, `kotlin.r.b` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lkotlin/r/b$d;.<init>:(Lkotlin/r/b;II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1d578c.  v0:= "list" @kind object;
  #L1d5790.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5796.  call `<init>`(v1) @signature `Lkotlin/r/b;.<init>:()V` @kind direct;
  #L1d579c.  v1.`kotlin.r.b$d.h` @type ^`kotlin.r.b` := v2 @kind object;
  #L1d57a0.  v1.`kotlin.r.b$d.i` @type ^`int` := v3;
  #L1d57a4.  v2:= `@@kotlin.r.b.f` @type ^`kotlin.r.b$a` @kind object;
  #L1d57a8.  v3:= v1.`kotlin.r.b$d.i` @type ^`int`;
  #L1d57ac.  v0:= v1.`kotlin.r.b$d.h` @type ^`kotlin.r.b` @kind object;
  #L1d57b0.  call temp:= `size`(v0) @signature `Lkotlin/r/a;.size:()I` @kind virtual;
  #L1d57b6.  v0:= temp;
  #L1d57b8.  call `checkRangeIndexes$kotlin_stdlib`(v2, v3, v4, v0) @signature `Lkotlin/r/b$a;.checkRangeIndexes$kotlin_stdlib:(III)V` @kind virtual;
  #L1d57be.  v2:= v1.`kotlin.r.b$d.i` @type ^`int`;
  #L1d57c2.  v4:= v4 - v2 @kind int;
  #L1d57c4.  v1.`kotlin.r.b$d.g` @type ^`int` := v4;
  #L1d57c8.  return @kind void;
}
procedure `java.lang.Object` `get`(`kotlin.r.b$d` v2 @kind this, `int` v3 ) @signature `Lkotlin/r/b$d;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d5758.  v0:= `@@kotlin.r.b.f` @type ^`kotlin.r.b$a` @kind object;
  #L1d575c.  v1:= v2.`kotlin.r.b$d.g` @type ^`int`;
  #L1d5760.  call `checkElementIndex$kotlin_stdlib`(v0, v3, v1) @signature `Lkotlin/r/b$a;.checkElementIndex$kotlin_stdlib:(II)V` @kind virtual;
  #L1d5766.  v0:= v2.`kotlin.r.b$d.h` @type ^`kotlin.r.b` @kind object;
  #L1d576a.  v1:= v2.`kotlin.r.b$d.i` @type ^`int`;
  #L1d576e.  v1:= v1 + v3 @kind int;
  #L1d5770.  call temp:= `get`(v0, v1) @signature `Lkotlin/r/b;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L1d5776.  v3:= temp @kind object;
  #L1d5778.  return v3 @kind object;
}
procedure `int` `getSize`(`kotlin.r.b$d` v1 @kind this) @signature `Lkotlin/r/b$d;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d5740.  v0:= v1.`kotlin.r.b$d.g` @type ^`int`;
  #L1d5744.  return v0;
}
