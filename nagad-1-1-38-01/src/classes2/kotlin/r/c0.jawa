record `kotlin.r.c0` @kind class @AccessFlag  extends `kotlin.r.b0` @kind class {
}
procedure `int` `mapCapacity`(`int` v1 ) @signature `Lkotlin/r/c0;.mapCapacity:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d800c.  if v1 >= 0 then goto L1d8012;
  #L1d8010.  goto L1d803e;
  #L1d8012.  v0:= 3I;
  #L1d8014.  if v1 >= v0 then goto L1d801e;
  #L1d8018.  v1:= v1 + 1;
  #L1d801c.  goto L1d803e;
  #L1d801e.  v0:= 2.0F;
  #L1d8022.  if v1 >= v0 then goto L1d8038;
  #L1d8026.  v1:= (`float`) v1 @kind i2f;
  #L1d8028.  v0:= 0.75F;
  #L1d802c.  v1:= v1 / v0 @kind float;
  #L1d802e.  v0:= 1.0F;
  #L1d8032.  v1:= v1 + v0 @kind float;
  #L1d8034.  v1:= (`int`) v1 @kind f2i;
  #L1d8036.  goto L1d803e;
  #L1d8038.  v1:= 2147483647I;
  #L1d803e.  return v1;
}
procedure `java.util.Map` `mapOf`(`kotlin.k` v1 @kind object) @signature `Lkotlin/r/c0;.mapOf:(Lkotlin/k;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1d8050.  v0:= "pair" @kind object;
  #L1d8054.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d805a.  call temp:= `getFirst`(v1) @signature `Lkotlin/k;.getFirst:()Ljava/lang/Object;` @kind virtual;
  #L1d8060.  v0:= temp @kind object;
  #L1d8062.  call temp:= `getSecond`(v1) @signature `Lkotlin/k;.getSecond:()Ljava/lang/Object;` @kind virtual;
  #L1d8068.  v1:= temp @kind object;
  #L1d806a.  call temp:= `singletonMap`(v0, v1) @signature `Ljava/util/Collections;.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;` @kind static;
  #L1d8070.  v1:= temp @kind object;
  #L1d8072.  v0:= "java.util.Collections.si…(pair.first, pair.second)" @kind object;
  #L1d8076.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d807c.  return v1 @kind object;
}
procedure `java.util.Map` `toSingletonMap`(`java.util.Map` v1 @kind object) @signature `Lkotlin/r/c0;.toSingletonMap:(Ljava/util/Map;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1d8090.  v0:= "$this$toSingletonMap" @kind object;
  #L1d8094.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d809a.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L1d80a0.  v1:= temp @kind object;
  #L1d80a2.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1d80a8.  v1:= temp @kind object;
  #L1d80aa.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d80b0.  v1:= temp @kind object;
  #L1d80b2.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L1d80b6.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L1d80bc.  v0:= temp @kind object;
  #L1d80be.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L1d80c4.  v1:= temp @kind object;
  #L1d80c6.  call temp:= `singletonMap`(v0, v1) @signature `Ljava/util/Collections;.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;` @kind static;
  #L1d80cc.  v1:= temp @kind object;
  #L1d80ce.  v0:= "with(entries.iterator().…ingletonMap(key, value) }" @kind object;
  #L1d80d2.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d80d8.  return v1 @kind object;
}
