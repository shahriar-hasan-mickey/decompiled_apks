record `kotlin.r.q` @kind class @AccessFlag  extends `kotlin.r.p` @kind class {
}
procedure `boolean` `addAll`(`java.util.Collection` v2 @kind object, `java.lang.Iterable` v3 @kind object) @signature `Lkotlin/r/q;.addAll:(Ljava/util/Collection;Ljava/lang/Iterable;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1d68b4.  v0:= "$this$addAll" @kind object;
  #L1d68b8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d68be.  v0:= "elements" @kind object;
  #L1d68c2.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d68c8.  v0:= instanceof @variable v3 @type ^`java.util.Collection` @kind boolean;
  #L1d68cc.  if v0 == 0 then goto L1d68de;
  #L1d68d0.  v3:= (`java.util.Collection`) v3 @kind object;
  #L1d68d4.  call temp:= `addAll`(v2, v3) @signature `Ljava/util/Collection;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L1d68da.  v2:= temp;
  #L1d68dc.  return v2;
  #L1d68de.  v0:= 0I;
  #L1d68e0.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1d68e6.  v3:= temp @kind object;
  #L1d68e8.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d68ee.  v1:= temp;
  #L1d68f0.  if v1 == 0 then goto L1d690c;
  #L1d68f4.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d68fa.  v1:= temp @kind object;
  #L1d68fc.  call temp:= `add`(v2, v1) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1d6902.  v1:= temp;
  #L1d6904.  if v1 == 0 then goto L1d68e8;
  #L1d6908.  v0:= 1I;
  #L1d690a.  goto L1d68e8;
  #L1d690c.  return v0;
}
procedure `boolean` `removeAll`(`java.util.Collection` v1 @kind object, `java.lang.Iterable` v2 @kind object) @signature `Lkotlin/r/q;.removeAll:(Ljava/util/Collection;Ljava/lang/Iterable;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1d6920.  v0:= "$this$removeAll" @kind object;
  #L1d6924.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d692a.  v0:= "elements" @kind object;
  #L1d692e.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6934.  call temp:= `convertToSetForSetOperationWith`(v2, v1) @signature `Lkotlin/r/m;.convertToSetForSetOperationWith:(Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/util/Collection;` @kind static;
  #L1d693a.  v2:= temp @kind object;
  #L1d693c.  call temp:= `asMutableCollection`(v1) @signature `Lkotlin/v/c/p;.asMutableCollection:(Ljava/lang/Object;)Ljava/util/Collection;` @kind static;
  #L1d6942.  v1:= temp @kind object;
  #L1d6944.  call temp:= `removeAll`(v1, v2) @signature `Ljava/util/Collection;.removeAll:(Ljava/util/Collection;)Z` @kind interface;
  #L1d694a.  v1:= temp;
  #L1d694c.  return v1;
}
