record `kotlin.r.u` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.ListIterator` @kind interface, `kotlin.v.c.q.a` @kind interface {
}
global `kotlin.r.u` `@@kotlin.r.u.f` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/r/u;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1d74c8.  v0:= new `kotlin.r.u`;
  #L1d74cc.  call `<init>`(v0) @signature `Lkotlin/r/u;.<init>:()V` @kind direct;
  #L1d74d2.  `@@kotlin.r.u.f` @type ^`kotlin.r.u` := v0 @kind object;
  #L1d74d6.  return @kind void;
}
procedure `void` `<init>`(`kotlin.r.u` v0 @kind this) @signature `Lkotlin/r/u;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1d74e8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d74ee.  return @kind void;
}
procedure `void` `add`(`kotlin.r.u` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/r/u;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1d7500.  v2:= new `java.lang.UnsupportedOperationException`;
  #L1d7504.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L1d7508.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d750e.  throw v2;
}
procedure `boolean` `hasNext`(`kotlin.r.u` v1 @kind this) @signature `Lkotlin/r/u;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d7408.  v0:= 0I;
  #L1d740a.  return v0;
}
procedure `boolean` `hasPrevious`(`kotlin.r.u` v1 @kind this) @signature `Lkotlin/r/u;.hasPrevious:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d741c.  v0:= 0I;
  #L1d741e.  return v0;
}
procedure `java.lang.Object` `next`(`kotlin.r.u` v1 @kind this) @signature `Lkotlin/r/u;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1d7458.  call temp:= `next`(v1) @signature `Lkotlin/r/u;.next:()Ljava/lang/Void;` @kind virtual;
  #L1d745e.  v0:= 0I;
  #L1d7460.  throw v0;
}
procedure `java.lang.Void` `next`(`kotlin.r.u` v1 @kind this) @signature `Lkotlin/r/u;.next:()Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d7490.  v0:= new `java.util.NoSuchElementException`;
  #L1d7494.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L1d749a.  throw v0;
}
procedure `int` `nextIndex`(`kotlin.r.u` v1 @kind this) @signature `Lkotlin/r/u;.nextIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d7430.  v0:= 0I;
  #L1d7432.  return v0;
}
procedure `java.lang.Object` `previous`(`kotlin.r.u` v1 @kind this) @signature `Lkotlin/r/u;.previous:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1d7474.  call temp:= `previous`(v1) @signature `Lkotlin/r/u;.previous:()Ljava/lang/Void;` @kind virtual;
  #L1d747a.  v0:= 0I;
  #L1d747c.  throw v0;
}
procedure `java.lang.Void` `previous`(`kotlin.r.u` v1 @kind this) @signature `Lkotlin/r/u;.previous:()Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d74ac.  v0:= new `java.util.NoSuchElementException`;
  #L1d74b0.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L1d74b6.  throw v0;
}
procedure `int` `previousIndex`(`kotlin.r.u` v1 @kind this) @signature `Lkotlin/r/u;.previousIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d7444.  v0:= -1I;
  #L1d7446.  return v0;
}
procedure `void` `remove`(`kotlin.r.u` v2 @kind this) @signature `Lkotlin/r/u;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d7520.  v0:= new `java.lang.UnsupportedOperationException`;
  #L1d7524.  v1:= "Operation is not supported for read-only collection" @kind object;
  #L1d7528.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d752e.  throw v0;
}
procedure `void` `set`(`kotlin.r.u` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/r/u;.set:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1d7540.  v2:= new `java.lang.UnsupportedOperationException`;
  #L1d7544.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L1d7548.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d754e.  throw v2;
}
