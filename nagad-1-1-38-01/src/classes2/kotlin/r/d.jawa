record `kotlin.r.d` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.r.h` @kind class {
}
procedure `java.lang.Iterable` `asIterable`(`java.lang.Object`[] v0 @kind object) @signature `Lkotlin/r/d;.asIterable:([Ljava/lang/Object;)Ljava/lang/Iterable;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d628c.  call temp:= `asIterable`(v0) @signature `Lkotlin/r/h;.asIterable:([Ljava/lang/Object;)Ljava/lang/Iterable;` @kind static;
  #L1d6292.  v0:= temp @kind object;
  #L1d6294.  return v0 @kind object;
}
procedure `java.util.List` `asList`(`java.lang.Object`[] v0 @kind object) @signature `Lkotlin/r/d;.asList:([Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d62f4.  call temp:= `asList`(v0) @signature `Lkotlin/r/g;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1d62fa.  v0:= temp @kind object;
  #L1d62fc.  return v0 @kind object;
}
procedure `boolean` `contains`(`java.lang.Object`[] v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lkotlin/r/d;.contains:([Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d61d0.  call temp:= `contains`(v0, v1) @signature `Lkotlin/r/h;.contains:([Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1d61d6.  v0:= temp;
  #L1d61d8.  return v0;
}
procedure `byte`[] `copyInto`(`byte`[] v0 @kind object, `byte`[] v1 @kind object, `int` v2 , `int` v3 , `int` v4 ) @signature `Lkotlin/r/d;.copyInto:([B[BIII)[B` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d6204.  call temp:= `copyInto`(v0, v1, v2, v3, v4) @signature `Lkotlin/r/g;.copyInto:([B[BIII)[B` @kind static;
  #L1d620a.  return v1 @kind object;
}
procedure `byte`[] `copyInto$default`(`byte`[] v0 @kind object, `byte`[] v1 @kind object, `int` v2 , `int` v3 , `int` v4 , `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lkotlin/r/d;.copyInto$default:([B[BIIIILjava/lang/Object;)[B` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d61ec.  call temp:= `copyInto$default`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlin/r/g;.copyInto$default:([B[BIIIILjava/lang/Object;)[B` @kind static;
  #L1d61f2.  return v1 @kind object;
}
procedure `java.lang.Object`[] `copyInto$default`(`java.lang.Object`[] v0 @kind object, `java.lang.Object`[] v1 @kind object, `int` v2 , `int` v3 , `int` v4 , `int` v5 , `java.lang.Object` v6 @kind object) @signature `Lkotlin/r/d;.copyInto$default:([Ljava/lang/Object;[Ljava/lang/Object;IIIILjava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d62c4.  call temp:= `copyInto$default`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlin/r/g;.copyInto$default:([Ljava/lang/Object;[Ljava/lang/Object;IIIILjava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L1d62ca.  return v1 @kind object;
}
procedure `byte`[] `copyOfRange`(`byte`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Lkotlin/r/d;.copyOfRange:([BII)[B` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d621c.  call temp:= `copyOfRange`(v0, v1, v2) @signature `Lkotlin/r/g;.copyOfRange:([BII)[B` @kind static;
  #L1d6222.  v0:= temp @kind object;
  #L1d6224.  return v0 @kind object;
}
procedure `int` `getLastIndex`(`int`[] v0 @kind object) @signature `Lkotlin/r/d;.getLastIndex:([I)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d6254.  call temp:= `getLastIndex`(v0) @signature `Lkotlin/r/h;.getLastIndex:([I)I` @kind static;
  #L1d625a.  v0:= temp;
  #L1d625c.  return v0;
}
procedure `int` `indexOf`(`java.lang.Object`[] v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lkotlin/r/d;.indexOf:([Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d6270.  call temp:= `indexOf`(v0, v1) @signature `Lkotlin/r/h;.indexOf:([Ljava/lang/Object;Ljava/lang/Object;)I` @kind static;
  #L1d6276.  v0:= temp;
  #L1d6278.  return v0;
}
procedure `char` `single`(`char`[] v0 @kind object) @signature `Lkotlin/r/d;.single:([C)C` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d6238.  call temp:= `single`(v0) @signature `Lkotlin/r/h;.single:([C)C` @kind static;
  #L1d623e.  v0:= temp;
  #L1d6240.  return v0;
}
procedure `java.lang.Object` `singleOrNull`(`java.lang.Object`[] v0 @kind object) @signature `Lkotlin/r/d;.singleOrNull:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d62a8.  call temp:= `singleOrNull`(v0) @signature `Lkotlin/r/h;.singleOrNull:([Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1d62ae.  v0:= temp @kind object;
  #L1d62b0.  return v0 @kind object;
}
procedure `void` `sort`(`java.lang.Object`[] v0 @kind object) @signature `Lkotlin/r/d;.sort:([Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d6380.  call `sort`(v0) @signature `Lkotlin/r/g;.sort:([Ljava/lang/Object;)V` @kind static;
  #L1d6386.  return @kind void;
}
procedure `java.util.List` `sortedWith`(`java.lang.Object`[] v0 @kind object, `java.util.Comparator` v1 @kind object) @signature `Lkotlin/r/d;.sortedWith:([Ljava/lang/Object;Ljava/util/Comparator;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d6310.  call temp:= `sortedWith`(v0, v1) @signature `Lkotlin/r/h;.sortedWith:([Ljava/lang/Object;Ljava/util/Comparator;)Ljava/util/List;` @kind static;
  #L1d6316.  v0:= temp @kind object;
  #L1d6318.  return v0 @kind object;
}
procedure `java.util.Set` `subtract`(`java.lang.Object`[] v0 @kind object, `java.lang.Iterable` v1 @kind object) @signature `Lkotlin/r/d;.subtract:([Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d6364.  call temp:= `subtract`(v0, v1) @signature `Lkotlin/r/h;.subtract:([Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Set;` @kind static;
  #L1d636a.  v0:= temp @kind object;
  #L1d636c.  return v0 @kind object;
}
procedure `java.util.Collection` `toCollection`(`java.lang.Object`[] v0 @kind object, `java.util.Collection` v1 @kind object) @signature `Lkotlin/r/d;.toCollection:([Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d62dc.  call temp:= `toCollection`(v0, v1) @signature `Lkotlin/r/h;.toCollection:([Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L1d62e2.  return v1 @kind object;
}
procedure `java.util.List` `toList`(`java.lang.Object`[] v0 @kind object) @signature `Lkotlin/r/d;.toList:([Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d632c.  call temp:= `toList`(v0) @signature `Lkotlin/r/h;.toList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1d6332.  v0:= temp @kind object;
  #L1d6334.  return v0 @kind object;
}
procedure `java.util.List` `toMutableList`(`java.lang.Object`[] v0 @kind object) @signature `Lkotlin/r/d;.toMutableList:([Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d6348.  call temp:= `toMutableList`(v0) @signature `Lkotlin/r/h;.toMutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1d634e.  v0:= temp @kind object;
  #L1d6350.  return v0 @kind object;
}
