record `kotlin.r.k` @kind class @AccessFlag  {
}
procedure `java.lang.Object`[] `copyToArrayOfAny`(`java.lang.Object`[] v2 @kind object, `boolean` v3 ) @signature `Lkotlin/r/k;.copyToArrayOfAny:([Ljava/lang/Object;Z)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1d63b4.  v0:= constclass @type ^`java.lang.Object`[] @kind object;
  #L1d63b8.  v1:= "$this$copyToArrayOfAny" @kind object;
  #L1d63bc.  call `checkNotNullParameter`(v2, v1) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d63c2.  if v3 == 0 then goto L1d63dc;
  #L1d63c6.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1d63cc.  v3:= temp @kind object;
  #L1d63ce.  call temp:= `areEqual`(v3, v0) @signature `Lkotlin/v/c/i;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1d63d4.  v3:= temp;
  #L1d63d6.  if v3 == 0 then goto L1d63dc;
  #L1d63da.  goto L1d63e6;
  #L1d63dc.  v3:= length @variable v2;
  #L1d63de.  call temp:= `copyOf`(v2, v3, v0) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;ILjava/lang/Class;)[Ljava/lang/Object;` @kind static;
  #L1d63e4.  v2:= temp @kind object;
  #L1d63e6.  v3:= "if (isVarargs && this.jaâ€¦ Array<Any?>::class.java)" @kind object;
  #L1d63ea.  call `checkNotNullExpressionValue`(v2, v3) @signature `Lkotlin/v/c/i;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d63f0.  return v2 @kind object;
}
procedure `java.util.List` `listOf`(`java.lang.Object` v1 @kind object) @signature `Lkotlin/r/k;.listOf:(Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d6404.  call temp:= `singletonList`(v1) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1d640a.  v1:= temp @kind object;
  #L1d640c.  v0:= "java.util.Collections.singletonList(element)" @kind object;
  #L1d6410.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6416.  return v1 @kind object;
}
