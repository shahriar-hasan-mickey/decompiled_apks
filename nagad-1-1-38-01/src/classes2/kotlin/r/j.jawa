record `kotlin.r.j` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.r.t` @kind class {
}
procedure `boolean` `addAll`(`java.util.Collection` v0 @kind object, `java.lang.Iterable` v1 @kind object) @signature `Lkotlin/r/j;.addAll:(Ljava/util/Collection;Ljava/lang/Iterable;)Z` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d7170.  call temp:= `addAll`(v0, v1) @signature `Lkotlin/r/q;.addAll:(Ljava/util/Collection;Ljava/lang/Iterable;)Z` @kind static;
  #L1d7176.  v0:= temp;
  #L1d7178.  return v0;
}
procedure `java.util.ArrayList` `arrayListOf`(`java.lang.Object`[] v0 @kind object) @signature `Lkotlin/r/j;.arrayListOf:([Ljava/lang/Object;)Ljava/util/ArrayList;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d726c.  call temp:= `arrayListOf`(v0) @signature `Lkotlin/r/l;.arrayListOf:([Ljava/lang/Object;)Ljava/util/ArrayList;` @kind static;
  #L1d7272.  v0:= temp @kind object;
  #L1d7274.  return v0 @kind object;
}
procedure `int` `binarySearch$default`(`java.util.List` v0 @kind object, `java.lang.Comparable` v1 @kind object, `int` v2 , `int` v3 , `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlin/r/j;.binarySearch$default:(Ljava/util/List;Ljava/lang/Comparable;IIILjava/lang/Object;)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d71a8.  call temp:= `binarySearch$default`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/r/l;.binarySearch$default:(Ljava/util/List;Ljava/lang/Comparable;IIILjava/lang/Object;)I` @kind static;
  #L1d71ae.  v0:= temp;
  #L1d71b0.  return v0;
}
procedure `int` `collectionSizeOrDefault`(`java.lang.Iterable` v0 @kind object, `int` v1 ) @signature `Lkotlin/r/j;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d71c4.  call temp:= `collectionSizeOrDefault`(v0, v1) @signature `Lkotlin/r/m;.collectionSizeOrDefault:(Ljava/lang/Iterable;I)I` @kind static;
  #L1d71ca.  v0:= temp;
  #L1d71cc.  return v0;
}
procedure `boolean` `contains`(`java.lang.Iterable` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lkotlin/r/j;.contains:(Ljava/lang/Iterable;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d718c.  call temp:= `contains`(v0, v1) @signature `Lkotlin/r/t;.contains:(Ljava/lang/Iterable;Ljava/lang/Object;)Z` @kind static;
  #L1d7192.  v0:= temp;
  #L1d7194.  return v0;
}
procedure `java.lang.Object` `elementAtOrNull`(`java.lang.Iterable` v0 @kind object, `int` v1 ) @signature `Lkotlin/r/j;.elementAtOrNull:(Ljava/lang/Iterable;I)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d71e0.  call temp:= `elementAtOrNull`(v0, v1) @signature `Lkotlin/r/t;.elementAtOrNull:(Ljava/lang/Iterable;I)Ljava/lang/Object;` @kind static;
  #L1d71e6.  v0:= temp @kind object;
  #L1d71e8.  return v0 @kind object;
}
procedure `java.util.List` `emptyList`() @signature `Lkotlin/r/j;.emptyList:()Ljava/util/List;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L1d7288.  call temp:= `emptyList`() @signature `Lkotlin/r/l;.emptyList:()Ljava/util/List;` @kind static;
  #L1d728e.  v0:= temp @kind object;
  #L1d7290.  return v0 @kind object;
}
procedure `java.lang.Object` `first`(`java.util.List` v0 @kind object) @signature `Lkotlin/r/j;.first:(Ljava/util/List;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d71fc.  call temp:= `first`(v0) @signature `Lkotlin/r/t;.first:(Ljava/util/List;)Ljava/lang/Object;` @kind static;
  #L1d7202.  v0:= temp @kind object;
  #L1d7204.  return v0 @kind object;
}
procedure `java.lang.Object` `firstOrNull`(`java.util.List` v0 @kind object) @signature `Lkotlin/r/j;.firstOrNull:(Ljava/util/List;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d7218.  call temp:= `firstOrNull`(v0) @signature `Lkotlin/r/t;.firstOrNull:(Ljava/util/List;)Ljava/lang/Object;` @kind static;
  #L1d721e.  v0:= temp @kind object;
  #L1d7220.  return v0 @kind object;
}
procedure `java.lang.Object` `last`(`java.util.List` v0 @kind object) @signature `Lkotlin/r/j;.last:(Ljava/util/List;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d7234.  call temp:= `last`(v0) @signature `Lkotlin/r/t;.last:(Ljava/util/List;)Ljava/lang/Object;` @kind static;
  #L1d723a.  v0:= temp @kind object;
  #L1d723c.  return v0 @kind object;
}
procedure `java.util.List` `listOf`(`java.lang.Object` v0 @kind object) @signature `Lkotlin/r/j;.listOf:(Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d72a4.  call temp:= `listOf`(v0) @signature `Lkotlin/r/k;.listOf:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1d72aa.  v0:= temp @kind object;
  #L1d72ac.  return v0 @kind object;
}
procedure `java.util.List` `listOf`(`java.lang.Object`[] v0 @kind object) @signature `Lkotlin/r/j;.listOf:([Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d72c0.  call temp:= `listOf`(v0) @signature `Lkotlin/r/l;.listOf:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1d72c6.  v0:= temp @kind object;
  #L1d72c8.  return v0 @kind object;
}
procedure `java.util.List` `mutableListOf`(`java.lang.Object`[] v0 @kind object) @signature `Lkotlin/r/j;.mutableListOf:([Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d72dc.  call temp:= `mutableListOf`(v0) @signature `Lkotlin/r/l;.mutableListOf:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1d72e2.  v0:= temp @kind object;
  #L1d72e4.  return v0 @kind object;
}
procedure `java.util.List` `optimizeReadOnlyList`(`java.util.List` v0 @kind object) @signature `Lkotlin/r/j;.optimizeReadOnlyList:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d72f8.  call temp:= `optimizeReadOnlyList`(v0) @signature `Lkotlin/r/l;.optimizeReadOnlyList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L1d72fe.  v0:= temp @kind object;
  #L1d7300.  return v0 @kind object;
}
procedure `java.lang.Object` `single`(`java.lang.Iterable` v0 @kind object) @signature `Lkotlin/r/j;.single:(Ljava/lang/Iterable;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d7250.  call temp:= `single`(v0) @signature `Lkotlin/r/t;.single:(Ljava/lang/Iterable;)Ljava/lang/Object;` @kind static;
  #L1d7256.  v0:= temp @kind object;
  #L1d7258.  return v0 @kind object;
}
procedure `void` `sort`(`java.util.List` v0 @kind object) @signature `Lkotlin/r/j;.sort:(Ljava/util/List;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d73a0.  call `sort`(v0) @signature `Lkotlin/r/p;.sort:(Ljava/util/List;)V` @kind static;
  #L1d73a6.  return @kind void;
}
procedure `void` `sortWith`(`java.util.List` v0 @kind object, `java.util.Comparator` v1 @kind object) @signature `Lkotlin/r/j;.sortWith:(Ljava/util/List;Ljava/util/Comparator;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d73b8.  call `sortWith`(v0, v1) @signature `Lkotlin/r/p;.sortWith:(Ljava/util/List;Ljava/util/Comparator;)V` @kind static;
  #L1d73be.  return @kind void;
}
procedure `java.util.List` `sortedWith`(`java.lang.Iterable` v0 @kind object, `java.util.Comparator` v1 @kind object) @signature `Lkotlin/r/j;.sortedWith:(Ljava/lang/Iterable;Ljava/util/Comparator;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d7314.  call temp:= `sortedWith`(v0, v1) @signature `Lkotlin/r/t;.sortedWith:(Ljava/lang/Iterable;Ljava/util/Comparator;)Ljava/util/List;` @kind static;
  #L1d731a.  v0:= temp @kind object;
  #L1d731c.  return v0 @kind object;
}
procedure `void` `throwCountOverflow`() @signature `Lkotlin/r/j;.throwCountOverflow:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L1d73d0.  call `throwCountOverflow`() @signature `Lkotlin/r/l;.throwCountOverflow:()V` @kind static;
  #L1d73d6.  v0:= 0I;
  #L1d73d8.  throw v0;
}
procedure `void` `throwIndexOverflow`() @signature `Lkotlin/r/j;.throwIndexOverflow:()V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L1d73ec.  call `throwIndexOverflow`() @signature `Lkotlin/r/l;.throwIndexOverflow:()V` @kind static;
  #L1d73f2.  v0:= 0I;
  #L1d73f4.  throw v0;
}
procedure `java.util.List` `toList`(`java.lang.Iterable` v0 @kind object) @signature `Lkotlin/r/j;.toList:(Ljava/lang/Iterable;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d7330.  call temp:= `toList`(v0) @signature `Lkotlin/r/t;.toList:(Ljava/lang/Iterable;)Ljava/util/List;` @kind static;
  #L1d7336.  v0:= temp @kind object;
  #L1d7338.  return v0 @kind object;
}
procedure `java.util.List` `toMutableList`(`java.util.Collection` v0 @kind object) @signature `Lkotlin/r/j;.toMutableList:(Ljava/util/Collection;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d734c.  call temp:= `toMutableList`(v0) @signature `Lkotlin/r/t;.toMutableList:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L1d7352.  v0:= temp @kind object;
  #L1d7354.  return v0 @kind object;
}
procedure `java.util.Set` `toSet`(`java.lang.Iterable` v0 @kind object) @signature `Lkotlin/r/j;.toSet:(Ljava/lang/Iterable;)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d7384.  call temp:= `toSet`(v0) @signature `Lkotlin/r/t;.toSet:(Ljava/lang/Iterable;)Ljava/util/Set;` @kind static;
  #L1d738a.  v0:= temp @kind object;
  #L1d738c.  return v0 @kind object;
}
procedure `java.util.List` `zip`(`java.lang.Iterable` v0 @kind object, `java.lang.Iterable` v1 @kind object) @signature `Lkotlin/r/j;.zip:(Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L1d7368.  call temp:= `zip`(v0, v1) @signature `Lkotlin/r/t;.zip:(Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/util/List;` @kind static;
  #L1d736e.  v0:= temp @kind object;
  #L1d7370.  return v0 @kind object;
}
