record `kotlin.r.h` @kind class @AccessFlag  extends `kotlin.r.g` @kind class {
}
procedure `java.lang.Iterable` `asIterable`(`java.lang.Object`[] v1 @kind object) @signature `Lkotlin/r/h;.asIterable:([Ljava/lang/Object;)Ljava/lang/Iterable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d5f48.  v0:= "$this$asIterable" @kind object;
  #L1d5f4c.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5f52.  v0:= length @variable v1;
  #L1d5f54.  if v0 != 0 then goto L1d5f5c;
  #L1d5f58.  v0:= 1I;
  #L1d5f5a.  goto L1d5f5e;
  #L1d5f5c.  v0:= 0I;
  #L1d5f5e.  if v0 == 0 then goto L1d5f6c;
  #L1d5f62.  call temp:= `emptyList`() @signature `Lkotlin/r/j;.emptyList:()Ljava/util/List;` @kind static;
  #L1d5f68.  v1:= temp @kind object;
  #L1d5f6a.  return v1 @kind object;
  #L1d5f6c.  v0:= new `kotlin.r.h$a`;
  #L1d5f70.  call `<init>`(v0, v1) @signature `Lkotlin/r/h$a;.<init>:([Ljava/lang/Object;)V` @kind direct;
  #L1d5f76.  return v0 @kind object;
}
procedure `boolean` `contains`(`java.lang.Object`[] v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/r/h;.contains:([Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d5e4c.  v0:= "$this$contains" @kind object;
  #L1d5e50.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5e56.  call temp:= `indexOf`(v1, v2) @signature `Lkotlin/r/d;.indexOf:([Ljava/lang/Object;Ljava/lang/Object;)I` @kind static;
  #L1d5e5c.  v1:= temp;
  #L1d5e5e.  if v1 < 0 then goto L1d5e66;
  #L1d5e62.  v1:= 1I;
  #L1d5e64.  goto L1d5e68;
  #L1d5e66.  v1:= 0I;
  #L1d5e68.  return v1;
}
procedure `int` `getLastIndex`(`int`[] v1 @kind object) @signature `Lkotlin/r/h;.getLastIndex:([I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d5ecc.  v0:= "$this$lastIndex" @kind object;
  #L1d5ed0.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5ed6.  v1:= length @variable v1;
  #L1d5ed8.  v1:= v1 + -1;
  #L1d5edc.  return v1;
}
procedure `int` `indexOf`(`java.lang.Object`[] v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lkotlin/r/h;.indexOf:([Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1d5ef0.  v0:= "$this$indexOf" @kind object;
  #L1d5ef4.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5efa.  v0:= 0I;
  #L1d5efc.  if v4 != 0 then goto L1d5f16;
  #L1d5f00.  v4:= length @variable v3;
  #L1d5f02.  if v0 >= v4 then goto L1d5f34;
  #L1d5f06.  v1:= v3[v0] @kind object;
  #L1d5f0a.  if v1 != 0 then goto L1d5f10;
  #L1d5f0e.  return v0;
  #L1d5f10.  v0:= v0 + 1;
  #L1d5f14.  goto L1d5f02;
  #L1d5f16.  v1:= length @variable v3;
  #L1d5f18.  if v0 >= v1 then goto L1d5f34;
  #L1d5f1c.  v2:= v3[v0] @kind object;
  #L1d5f20.  call temp:= `areEqual`(v4, v2) @signature `Lkotlin/v/c/i;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1d5f26.  v2:= temp;
  #L1d5f28.  if v2 == 0 then goto L1d5f2e;
  #L1d5f2c.  return v0;
  #L1d5f2e.  v0:= v0 + 1;
  #L1d5f32.  goto L1d5f18;
  #L1d5f34.  v3:= -1I;
  #L1d5f36.  return v3;
}
procedure `char` `single`(`char`[] v2 @kind object) @signature `Lkotlin/r/h;.single:([C)C` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1d5e7c.  v0:= "$this$single" @kind object;
  #L1d5e80.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5e86.  v0:= length @variable v2;
  #L1d5e88.  if v0 == 0 then goto L1d5eaa;
  #L1d5e8c.  v1:= 1I;
  #L1d5e8e.  if v0 != v1 then goto L1d5e9a;
  #L1d5e92.  v0:= 0I;
  #L1d5e94.  v2:= v2[v0] @kind char;
  #L1d5e98.  return v2;
  #L1d5e9a.  v2:= new `java.lang.IllegalArgumentException`;
  #L1d5e9e.  v0:= "Array has more than one element." @kind object;
  #L1d5ea2.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d5ea8.  throw v2;
  #L1d5eaa.  v2:= new `java.util.NoSuchElementException`;
  #L1d5eae.  v0:= "Array is empty." @kind object;
  #L1d5eb2.  call `<init>`(v2, v0) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d5eb8.  throw v2;
}
procedure `java.lang.Object` `singleOrNull`(`java.lang.Object`[] v2 @kind object) @signature `Lkotlin/r/h;.singleOrNull:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1d5f88.  v0:= "$this$singleOrNull" @kind object;
  #L1d5f8c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5f92.  v0:= length @variable v2;
  #L1d5f94.  v1:= 1I;
  #L1d5f96.  if v0 != v1 then goto L1d5fa2;
  #L1d5f9a.  v0:= 0I;
  #L1d5f9c.  v2:= v2[v0] @kind object;
  #L1d5fa0.  goto L1d5fa4;
  #L1d5fa2.  v2:= 0I;
  #L1d5fa4.  return v2 @kind object;
}
procedure `java.lang.Object`[] `sortedArrayWith`(`java.lang.Object`[] v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lkotlin/r/h;.sortedArrayWith:([Ljava/lang/Object;Ljava/util/Comparator;)[Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L1d5fb8.  v0:= "$this$sortedArrayWith" @kind object;
  #L1d5fbc.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5fc2.  v0:= "comparator" @kind object;
  #L1d5fc6.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5fcc.  v0:= length @variable v1;
  #L1d5fce.  if v0 != 0 then goto L1d5fd6;
  #L1d5fd2.  v0:= 1I;
  #L1d5fd4.  goto L1d5fd8;
  #L1d5fd6.  v0:= 0I;
  #L1d5fd8.  if v0 == 0 then goto L1d5fde;
  #L1d5fdc.  return v1 @kind object;
  #L1d5fde.  v0:= length @variable v1;
  #L1d5fe0.  call temp:= `copyOf`(v1, v0) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L1d5fe6.  v1:= temp @kind object;
  #L1d5fe8.  v0:= "java.util.Arrays.copyOf(this, size)" @kind object;
  #L1d5fec.  call `checkNotNullExpressionValue`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d5ff2.  call `sortWith`(v1, v2) @signature `Lkotlin/r/g;.sortWith:([Ljava/lang/Object;Ljava/util/Comparator;)V` @kind static;
  #L1d5ff8.  return v1 @kind object;
}
procedure `java.util.List` `sortedWith`(`java.lang.Object`[] v1 @kind object, `java.util.Comparator` v2 @kind object) @signature `Lkotlin/r/h;.sortedWith:([Ljava/lang/Object;Ljava/util/Comparator;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d604c.  v0:= "$this$sortedWith" @kind object;
  #L1d6050.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6056.  v0:= "comparator" @kind object;
  #L1d605a.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6060.  call temp:= `sortedArrayWith`(v1, v2) @signature `Lkotlin/r/h;.sortedArrayWith:([Ljava/lang/Object;Ljava/util/Comparator;)[Ljava/lang/Object;` @kind static;
  #L1d6066.  v1:= temp @kind object;
  #L1d6068.  call temp:= `asList`(v1) @signature `Lkotlin/r/d;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1d606e.  v1:= temp @kind object;
  #L1d6070.  return v1 @kind object;
}
procedure `java.util.Set` `subtract`(`java.lang.Object`[] v1 @kind object, `java.lang.Iterable` v2 @kind object) @signature `Lkotlin/r/h;.subtract:([Ljava/lang/Object;Ljava/lang/Iterable;)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d6100.  v0:= "$this$subtract" @kind object;
  #L1d6104.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d610a.  v0:= "other" @kind object;
  #L1d610e.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6114.  call temp:= `toMutableSet`(v1) @signature `Lkotlin/r/h;.toMutableSet:([Ljava/lang/Object;)Ljava/util/Set;` @kind static;
  #L1d611a.  v1:= temp @kind object;
  #L1d611c.  call temp:= `removeAll`(v1, v2) @signature `Lkotlin/r/q;.removeAll:(Ljava/util/Collection;Ljava/lang/Iterable;)Z` @kind static;
  #L1d6122.  return v1 @kind object;
}
procedure `java.util.Collection` `toCollection`(`java.lang.Object`[] v3 @kind object, `java.util.Collection` v4 @kind object) @signature `Lkotlin/r/h;.toCollection:([Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1d600c.  v0:= "$this$toCollection" @kind object;
  #L1d6010.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6016.  v0:= "destination" @kind object;
  #L1d601a.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d6020.  v0:= length @variable v3;
  #L1d6022.  v1:= 0I;
  #L1d6024.  if v1 >= v0 then goto L1d6038;
  #L1d6028.  v2:= v3[v1] @kind object;
  #L1d602c.  call temp:= `add`(v4, v2) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1d6032.  v1:= v1 + 1;
  #L1d6036.  goto L1d6024;
  #L1d6038.  return v4 @kind object;
}
procedure `java.util.List` `toList`(`java.lang.Object`[] v2 @kind object) @signature `Lkotlin/r/h;.toList:([Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1d6084.  v0:= "$this$toList" @kind object;
  #L1d6088.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d608e.  v0:= length @variable v2;
  #L1d6090.  if v0 == 0 then goto L1d60b4;
  #L1d6094.  v1:= 1I;
  #L1d6096.  if v0 == v1 then goto L1d60a4;
  #L1d609a.  call temp:= `toMutableList`(v2) @signature `Lkotlin/r/d;.toMutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1d60a0.  v2:= temp @kind object;
  #L1d60a2.  goto L1d60bc;
  #L1d60a4.  v0:= 0I;
  #L1d60a6.  v2:= v2[v0] @kind object;
  #L1d60aa.  call temp:= `listOf`(v2) @signature `Lkotlin/r/j;.listOf:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L1d60b0.  v2:= temp @kind object;
  #L1d60b2.  goto L1d60bc;
  #L1d60b4.  call temp:= `emptyList`() @signature `Lkotlin/r/j;.emptyList:()Ljava/util/List;` @kind static;
  #L1d60ba.  v2:= temp @kind object;
  #L1d60bc.  return v2 @kind object;
}
procedure `java.util.List` `toMutableList`(`java.lang.Object`[] v1 @kind object) @signature `Lkotlin/r/h;.toMutableList:([Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d60d0.  v0:= "$this$toMutableList" @kind object;
  #L1d60d4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d60da.  v0:= new `java.util.ArrayList`;
  #L1d60de.  call temp:= `asCollection`(v1) @signature `Lkotlin/r/l;.asCollection:([Ljava/lang/Object;)Ljava/util/Collection;` @kind static;
  #L1d60e4.  v1:= temp @kind object;
  #L1d60e6.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L1d60ec.  return v0 @kind object;
}
procedure `java.util.Set` `toMutableSet`(`java.lang.Object`[] v2 @kind object) @signature `Lkotlin/r/h;.toMutableSet:([Ljava/lang/Object;)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1d6134.  v0:= "$this$toMutableSet" @kind object;
  #L1d6138.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d613e.  v0:= new `java.util.LinkedHashSet`;
  #L1d6142.  v1:= length @variable v2;
  #L1d6144.  call temp:= `mapCapacity`(v1) @signature `Lkotlin/r/a0;.mapCapacity:(I)I` @kind static;
  #L1d614a.  v1:= temp;
  #L1d614c.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashSet;.<init>:(I)V` @kind direct;
  #L1d6152.  call temp:= `toCollection`(v2, v0) @signature `Lkotlin/r/d;.toCollection:([Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L1d6158.  v0:= (`java.util.Set`) v0 @kind object;
  #L1d615c.  return v0 @kind object;
}
procedure `java.util.Set` `toSet`(`java.lang.Object`[] v2 @kind object) @signature `Lkotlin/r/h;.toSet:([Ljava/lang/Object;)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1d6170.  v0:= "$this$toSet" @kind object;
  #L1d6174.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d617a.  v0:= length @variable v2;
  #L1d617c.  if v0 == 0 then goto L1d61b6;
  #L1d6180.  v1:= 1I;
  #L1d6182.  if v0 == v1 then goto L1d61a6;
  #L1d6186.  v0:= new `java.util.LinkedHashSet`;
  #L1d618a.  v1:= length @variable v2;
  #L1d618c.  call temp:= `mapCapacity`(v1) @signature `Lkotlin/r/a0;.mapCapacity:(I)I` @kind static;
  #L1d6192.  v1:= temp;
  #L1d6194.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashSet;.<init>:(I)V` @kind direct;
  #L1d619a.  call temp:= `toCollection`(v2, v0) @signature `Lkotlin/r/d;.toCollection:([Ljava/lang/Object;Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L1d61a0.  v0:= (`java.util.Set`) v0 @kind object;
  #L1d61a4.  goto L1d61be;
  #L1d61a6.  v0:= 0I;
  #L1d61a8.  v2:= v2[v0] @kind object;
  #L1d61ac.  call temp:= `setOf`(v2) @signature `Lkotlin/r/g0;.setOf:(Ljava/lang/Object;)Ljava/util/Set;` @kind static;
  #L1d61b2.  v0:= temp @kind object;
  #L1d61b4.  goto L1d61be;
  #L1d61b6.  call temp:= `emptySet`() @signature `Lkotlin/r/h0;.emptySet:()Ljava/util/Set;` @kind static;
  #L1d61bc.  v0:= temp @kind object;
  #L1d61be.  return v0 @kind object;
}
