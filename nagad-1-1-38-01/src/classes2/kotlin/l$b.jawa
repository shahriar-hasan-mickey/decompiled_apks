record `kotlin.l$b` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Serializable` @kind interface {
  `java.lang.Throwable` `kotlin.l$b.f` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlin.l$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lkotlin/l$b;.<init>:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1d4cec.  v0:= "exception" @kind object;
  #L1d4cf0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d4cf6.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d4cfc.  v1.`kotlin.l$b.f` @type ^`java.lang.Throwable` := v2 @kind object;
  #L1d4d00.  return @kind void;
}
procedure `boolean` `equals`(`kotlin.l$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/l$b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d4c50.  v0:= instanceof @variable v2 @type ^`kotlin.l$b` @kind boolean;
  #L1d4c54.  if v0 == 0 then goto L1d4c74;
  #L1d4c58.  v0:= v1.`kotlin.l$b.f` @type ^`java.lang.Throwable` @kind object;
  #L1d4c5c.  v2:= (`kotlin.l$b`) v2 @kind object;
  #L1d4c60.  v2:= v2.`kotlin.l$b.f` @type ^`java.lang.Throwable` @kind object;
  #L1d4c64.  call temp:= `areEqual`(v0, v2) @signature `Lkotlin/v/c/i;.areEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1d4c6a.  v2:= temp;
  #L1d4c6c.  if v2 == 0 then goto L1d4c74;
  #L1d4c70.  v2:= 1I;
  #L1d4c72.  goto L1d4c76;
  #L1d4c74.  v2:= 0I;
  #L1d4c76.  return v2;
}
procedure `int` `hashCode`(`kotlin.l$b` v1 @kind this) @signature `Lkotlin/l$b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d4c88.  v0:= v1.`kotlin.l$b.f` @type ^`java.lang.Throwable` @kind object;
  #L1d4c8c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Throwable;.hashCode:()I` @kind virtual;
  #L1d4c92.  v0:= temp;
  #L1d4c94.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.l$b` v2 @kind this) @signature `Lkotlin/l$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d4ca8.  v0:= new `java.lang.StringBuilder`;
  #L1d4cac.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d4cb2.  v1:= "Failure(" @kind object;
  #L1d4cb6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d4cbc.  v1:= v2.`kotlin.l$b.f` @type ^`java.lang.Throwable` @kind object;
  #L1d4cc0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d4cc6.  v1:= 41I;
  #L1d4cca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d4cd0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d4cd6.  v0:= temp @kind object;
  #L1d4cd8.  return v0 @kind object;
}
