record `kotlin.a0.r$b` @kind class @AccessFlag FINAL extends `kotlin.v.c.j` @kind class, `kotlin.v.b.l` @kind interface {
  `java.lang.CharSequence` `kotlin.a0.r$b.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.a0.r$b` v0 @kind this, `java.lang.CharSequence` v1 @kind object) @signature `Lkotlin/a0/r$b;.<init>:(Ljava/lang/CharSequence;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1dda3c.  v0.`kotlin.a0.r$b.f` @type ^`java.lang.CharSequence` := v1 @kind object;
  #L1dda40.  v1:= 1I;
  #L1dda42.  call `<init>`(v0, v1) @signature `Lkotlin/v/c/j;.<init>:(I)V` @kind direct;
  #L1dda48.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlin.a0.r$b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlin/a0/r$b;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1dd9f4.  v1:= (`kotlin.x.d`) v1 @kind object;
  #L1dd9f8.  call temp:= `invoke`(v0, v1) @signature `Lkotlin/a0/r$b;.invoke:(Lkotlin/x/d;)Ljava/lang/String;` @kind virtual;
  #L1dd9fe.  v1:= temp @kind object;
  #L1dda00.  return v1 @kind object;
}
procedure `java.lang.String` `invoke`(`kotlin.a0.r$b` v1 @kind this, `kotlin.x.d` v2 @kind object) @signature `Lkotlin/a0/r$b;.invoke:(Lkotlin/x/d;)Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1dda14.  v0:= "it" @kind object;
  #L1dda18.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dda1e.  v0:= v1.`kotlin.a0.r$b.f` @type ^`java.lang.CharSequence` @kind object;
  #L1dda22.  call temp:= `substring`(v0, v2) @signature `Lkotlin/a0/r;.substring:(Ljava/lang/CharSequence;Lkotlin/x/d;)Ljava/lang/String;` @kind static;
  #L1dda28.  v2:= temp @kind object;
  #L1dda2a.  return v2 @kind object;
}
