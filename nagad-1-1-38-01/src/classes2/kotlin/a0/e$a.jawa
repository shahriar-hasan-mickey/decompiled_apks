record `kotlin.a0.e$a` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.Iterator` @kind interface, `kotlin.v.c.q.a` @kind interface {
  `int` `kotlin.a0.e$a.f` @AccessFlag PRIVATE;
  `int` `kotlin.a0.e$a.g` @AccessFlag PRIVATE;
  `int` `kotlin.a0.e$a.h` @AccessFlag PRIVATE;
  `kotlin.x.d` `kotlin.a0.e$a.i` @AccessFlag PRIVATE;
  `int` `kotlin.a0.e$a.j` @AccessFlag PRIVATE;
  `kotlin.a0.e` `kotlin.a0.e$a.k` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.a0.e$a` v2 @kind this, `kotlin.a0.e` v3 @kind object) @signature `Lkotlin/a0/e$a;.<init>:(Lkotlin/a0/e;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1dc9e0.  v2.`kotlin.a0.e$a.k` @type ^`kotlin.a0.e` := v3 @kind object;
  #L1dc9e4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1dc9ea.  v0:= -1I;
  #L1dc9ec.  v2.`kotlin.a0.e$a.f` @type ^`int` := v0;
  #L1dc9f0.  call temp:= `access$getStartIndex$p`(v3) @signature `Lkotlin/a0/e;.access$getStartIndex$p:(Lkotlin/a0/e;)I` @kind static;
  #L1dc9f6.  v0:= temp;
  #L1dc9f8.  call temp:= `access$getInput$p`(v3) @signature `Lkotlin/a0/e;.access$getInput$p:(Lkotlin/a0/e;)Ljava/lang/CharSequence;` @kind static;
  #L1dc9fe.  v3:= temp @kind object;
  #L1dca00.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L1dca06.  v3:= temp;
  #L1dca08.  v1:= 0I;
  #L1dca0a.  call temp:= `coerceIn`(v0, v1, v3) @signature `Lkotlin/x/e;.coerceIn:(III)I` @kind static;
  #L1dca10.  v3:= temp;
  #L1dca12.  v2.`kotlin.a0.e$a.g` @type ^`int` := v3;
  #L1dca16.  v3:= v2.`kotlin.a0.e$a.g` @type ^`int`;
  #L1dca1a.  v2.`kotlin.a0.e$a.h` @type ^`int` := v3;
  #L1dca1e.  return @kind void;
}
procedure `void` `a`(`kotlin.a0.e$a` v6 @kind this) @signature `Lkotlin/a0/e$a;.a:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1dca30.  v0:= v6.`kotlin.a0.e$a.h` @type ^`int`;
  #L1dca34.  v1:= 0I;
  #L1dca36.  if v0 >= 0 then goto L1dca48;
  #L1dca3a.  v6.`kotlin.a0.e$a.f` @type ^`int` := v1;
  #L1dca3e.  v0:= 0I;
  #L1dca40.  v6.`kotlin.a0.e$a.i` @type ^`kotlin.x.d` := v0 @kind object;
  #L1dca44.  goto L1dcb74;
  #L1dca48.  v0:= v6.`kotlin.a0.e$a.k` @type ^`kotlin.a0.e` @kind object;
  #L1dca4c.  call temp:= `access$getLimit$p`(v0) @signature `Lkotlin/a0/e;.access$getLimit$p:(Lkotlin/a0/e;)I` @kind static;
  #L1dca52.  v0:= temp;
  #L1dca54.  v2:= -1I;
  #L1dca56.  v3:= 1I;
  #L1dca58.  if v0 <= 0 then goto L1dca7a;
  #L1dca5c.  v0:= v6.`kotlin.a0.e$a.j` @type ^`int`;
  #L1dca60.  v0:= v0 + v3 @kind int;
  #L1dca62.  v6.`kotlin.a0.e$a.j` @type ^`int` := v0;
  #L1dca66.  v0:= v6.`kotlin.a0.e$a.j` @type ^`int`;
  #L1dca6a.  v4:= v6.`kotlin.a0.e$a.k` @type ^`kotlin.a0.e` @kind object;
  #L1dca6e.  call temp:= `access$getLimit$p`(v4) @signature `Lkotlin/a0/e;.access$getLimit$p:(Lkotlin/a0/e;)I` @kind static;
  #L1dca74.  v4:= temp;
  #L1dca76.  if v0 >= v4 then goto L1dca96;
  #L1dca7a.  v0:= v6.`kotlin.a0.e$a.h` @type ^`int`;
  #L1dca7e.  v4:= v6.`kotlin.a0.e$a.k` @type ^`kotlin.a0.e` @kind object;
  #L1dca82.  call temp:= `access$getInput$p`(v4) @signature `Lkotlin/a0/e;.access$getInput$p:(Lkotlin/a0/e;)Ljava/lang/CharSequence;` @kind static;
  #L1dca88.  v4:= temp @kind object;
  #L1dca8a.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L1dca90.  v4:= temp;
  #L1dca92.  if v0 <= v4 then goto L1dcac2;
  #L1dca96.  v0:= v6.`kotlin.a0.e$a.g` @type ^`int`;
  #L1dca9a.  v1:= new `kotlin.x.d`;
  #L1dca9e.  v4:= v6.`kotlin.a0.e$a.k` @type ^`kotlin.a0.e` @kind object;
  #L1dcaa2.  call temp:= `access$getInput$p`(v4) @signature `Lkotlin/a0/e;.access$getInput$p:(Lkotlin/a0/e;)Ljava/lang/CharSequence;` @kind static;
  #L1dcaa8.  v4:= temp @kind object;
  #L1dcaaa.  call temp:= `getLastIndex`(v4) @signature `Lkotlin/a0/r;.getLastIndex:(Ljava/lang/CharSequence;)I` @kind static;
  #L1dcab0.  v4:= temp;
  #L1dcab2.  call `<init>`(v1, v0, v4) @signature `Lkotlin/x/d;.<init>:(II)V` @kind direct;
  #L1dcab8.  v6.`kotlin.a0.e$a.i` @type ^`kotlin.x.d` := v1 @kind object;
  #L1dcabc.  v6.`kotlin.a0.e$a.h` @type ^`int` := v2;
  #L1dcac0.  goto L1dcb70;
  #L1dcac2.  v0:= v6.`kotlin.a0.e$a.k` @type ^`kotlin.a0.e` @kind object;
  #L1dcac6.  call temp:= `access$getGetNextMatch$p`(v0) @signature `Lkotlin/a0/e;.access$getGetNextMatch$p:(Lkotlin/a0/e;)Lkotlin/v/b/p;` @kind static;
  #L1dcacc.  v0:= temp @kind object;
  #L1dcace.  v4:= v6.`kotlin.a0.e$a.k` @type ^`kotlin.a0.e` @kind object;
  #L1dcad2.  call temp:= `access$getInput$p`(v4) @signature `Lkotlin/a0/e;.access$getInput$p:(Lkotlin/a0/e;)Ljava/lang/CharSequence;` @kind static;
  #L1dcad8.  v4:= temp @kind object;
  #L1dcada.  v5:= v6.`kotlin.a0.e$a.h` @type ^`int`;
  #L1dcade.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1dcae4.  v5:= temp @kind object;
  #L1dcae6.  call temp:= `invoke`(v0, v4, v5) @signature `Lkotlin/v/b/p;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1dcaec.  v0:= temp @kind object;
  #L1dcaee.  v0:= (`kotlin.k`) v0 @kind object;
  #L1dcaf2.  if v0 != 0 then goto L1dcb22;
  #L1dcaf6.  v0:= v6.`kotlin.a0.e$a.g` @type ^`int`;
  #L1dcafa.  v1:= new `kotlin.x.d`;
  #L1dcafe.  v4:= v6.`kotlin.a0.e$a.k` @type ^`kotlin.a0.e` @kind object;
  #L1dcb02.  call temp:= `access$getInput$p`(v4) @signature `Lkotlin/a0/e;.access$getInput$p:(Lkotlin/a0/e;)Ljava/lang/CharSequence;` @kind static;
  #L1dcb08.  v4:= temp @kind object;
  #L1dcb0a.  call temp:= `getLastIndex`(v4) @signature `Lkotlin/a0/r;.getLastIndex:(Ljava/lang/CharSequence;)I` @kind static;
  #L1dcb10.  v4:= temp;
  #L1dcb12.  call `<init>`(v1, v0, v4) @signature `Lkotlin/x/d;.<init>:(II)V` @kind direct;
  #L1dcb18.  v6.`kotlin.a0.e$a.i` @type ^`kotlin.x.d` := v1 @kind object;
  #L1dcb1c.  v6.`kotlin.a0.e$a.h` @type ^`int` := v2;
  #L1dcb20.  goto L1dcb70;
  #L1dcb22.  call temp:= `component1`(v0) @signature `Lkotlin/k;.component1:()Ljava/lang/Object;` @kind virtual;
  #L1dcb28.  v2:= temp @kind object;
  #L1dcb2a.  v2:= (`java.lang.Number`) v2 @kind object;
  #L1dcb2e.  call temp:= `intValue`(v2) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L1dcb34.  v2:= temp;
  #L1dcb36.  call temp:= `component2`(v0) @signature `Lkotlin/k;.component2:()Ljava/lang/Object;` @kind virtual;
  #L1dcb3c.  v0:= temp @kind object;
  #L1dcb3e.  v0:= (`java.lang.Number`) v0 @kind object;
  #L1dcb42.  call temp:= `intValue`(v0) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L1dcb48.  v0:= temp;
  #L1dcb4a.  v4:= v6.`kotlin.a0.e$a.g` @type ^`int`;
  #L1dcb4e.  call temp:= `until`(v4, v2) @signature `Lkotlin/x/e;.until:(II)Lkotlin/x/d;` @kind static;
  #L1dcb54.  v4:= temp @kind object;
  #L1dcb56.  v6.`kotlin.a0.e$a.i` @type ^`kotlin.x.d` := v4 @kind object;
  #L1dcb5a.  v2:= v2 + v0 @kind int;
  #L1dcb5c.  v6.`kotlin.a0.e$a.g` @type ^`int` := v2;
  #L1dcb60.  v2:= v6.`kotlin.a0.e$a.g` @type ^`int`;
  #L1dcb64.  if v0 != 0 then goto L1dcb6a;
  #L1dcb68.  v1:= 1I;
  #L1dcb6a.  v2:= v2 + v1 @kind int;
  #L1dcb6c.  v6.`kotlin.a0.e$a.h` @type ^`int` := v2;
  #L1dcb70.  v6.`kotlin.a0.e$a.f` @type ^`int` := v3;
  #L1dcb74.  return @kind void;
}
procedure `boolean` `hasNext`(`kotlin.a0.e$a` v2 @kind this) @signature `Lkotlin/a0/e$a;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dc93c.  v0:= v2.`kotlin.a0.e$a.f` @type ^`int`;
  #L1dc940.  v1:= -1I;
  #L1dc942.  if v0 != v1 then goto L1dc94c;
  #L1dc946.  call `a`(v2) @signature `Lkotlin/a0/e$a;.a:()V` @kind direct;
  #L1dc94c.  v0:= v2.`kotlin.a0.e$a.f` @type ^`int`;
  #L1dc950.  v1:= 1I;
  #L1dc952.  if v0 != v1 then goto L1dc958;
  #L1dc956.  goto L1dc95a;
  #L1dc958.  v1:= 0I;
  #L1dc95a.  return v1;
}
procedure `java.lang.Object` `next`(`kotlin.a0.e$a` v1 @kind this) @signature `Lkotlin/a0/e$a;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1dc96c.  call temp:= `next`(v1) @signature `Lkotlin/a0/e$a;.next:()Lkotlin/x/d;` @kind virtual;
  #L1dc972.  v0:= temp @kind object;
  #L1dc974.  return v0 @kind object;
}
procedure `kotlin.x.d` `next`(`kotlin.a0.e$a` v3 @kind this) @signature `Lkotlin/a0/e$a;.next:()Lkotlin/x/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1dc988.  v0:= v3.`kotlin.a0.e$a.f` @type ^`int`;
  #L1dc98c.  v1:= -1I;
  #L1dc98e.  if v0 != v1 then goto L1dc998;
  #L1dc992.  call `a`(v3) @signature `Lkotlin/a0/e$a;.a:()V` @kind direct;
  #L1dc998.  v0:= v3.`kotlin.a0.e$a.f` @type ^`int`;
  #L1dc99c.  if v0 == 0 then goto L1dc9c4;
  #L1dc9a0.  v0:= v3.`kotlin.a0.e$a.i` @type ^`kotlin.x.d` @kind object;
  #L1dc9a4.  if v0 == 0 then goto L1dc9b4;
  #L1dc9a8.  v2:= 0I;
  #L1dc9aa.  v3.`kotlin.a0.e$a.i` @type ^`kotlin.x.d` := v2 @kind object;
  #L1dc9ae.  v3.`kotlin.a0.e$a.f` @type ^`int` := v1;
  #L1dc9b2.  return v0 @kind object;
  #L1dc9b4.  v0:= new `java.lang.NullPointerException`;
  #L1dc9b8.  v1:= "null cannot be cast to non-null type kotlin.ranges.IntRange" @kind object;
  #L1dc9bc.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dc9c2.  throw v0;
  #L1dc9c4.  v0:= new `java.util.NoSuchElementException`;
  #L1dc9c8.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L1dc9ce.  throw v0;
}
procedure `void` `remove`(`kotlin.a0.e$a` v2 @kind this) @signature `Lkotlin/a0/e$a;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dcb88.  v0:= new `java.lang.UnsupportedOperationException`;
  #L1dcb8c.  v1:= "Operation is not supported for read-only collection" @kind object;
  #L1dcb90.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1dcb96.  throw v0;
}
