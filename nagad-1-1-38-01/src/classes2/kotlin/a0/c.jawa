record `kotlin.a0.c` @kind class @AccessFlag  extends `kotlin.a0.b` @kind class {
}
procedure `boolean` `equals`(`char` v3 , `char` v4 , `boolean` v5 ) @signature `Lkotlin/a0/c;.equals:(CCZ)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1dc814.  v0:= 1I;
  #L1dc816.  if v3 != v4 then goto L1dc81c;
  #L1dc81a.  return v0;
  #L1dc81c.  v1:= 0I;
  #L1dc81e.  if v5 != 0 then goto L1dc824;
  #L1dc822.  return v1;
  #L1dc824.  call temp:= `toUpperCase`(v3) @signature `Ljava/lang/Character;.toUpperCase:(C)C` @kind static;
  #L1dc82a.  v5:= temp;
  #L1dc82c.  call temp:= `toUpperCase`(v4) @signature `Ljava/lang/Character;.toUpperCase:(C)C` @kind static;
  #L1dc832.  v2:= temp;
  #L1dc834.  if v5 != v2 then goto L1dc83a;
  #L1dc838.  return v0;
  #L1dc83a.  call temp:= `toLowerCase`(v3) @signature `Ljava/lang/Character;.toLowerCase:(C)C` @kind static;
  #L1dc840.  v3:= temp;
  #L1dc842.  call temp:= `toLowerCase`(v4) @signature `Ljava/lang/Character;.toLowerCase:(C)C` @kind static;
  #L1dc848.  v4:= temp;
  #L1dc84a.  if v3 != v4 then goto L1dc850;
  #L1dc84e.  return v0;
  #L1dc850.  return v1;
}
