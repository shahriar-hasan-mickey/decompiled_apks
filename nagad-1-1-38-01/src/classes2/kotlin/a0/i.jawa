record `kotlin.a0.i` @kind class @AccessFlag  {
}
procedure `void` `appendElement`(`java.lang.Appendable` v1 @kind object, `java.lang.Object` v2 @kind object, `kotlin.v.b.l` v3 @kind object) @signature `Lkotlin/a0/i;.appendElement:(Ljava/lang/Appendable;Ljava/lang/Object;Lkotlin/v/b/l;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1dd13c.  v0:= "$this$appendElement" @kind object;
  #L1dd140.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dd146.  if v3 == 0 then goto L1dd15e;
  #L1dd14a.  call temp:= `invoke`(v3, v2) @signature `Lkotlin/v/b/l;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1dd150.  v2:= temp @kind object;
  #L1dd152.  v2:= (`java.lang.CharSequence`) v2 @kind object;
  #L1dd156.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L1dd15c.  goto L1dd1a4;
  #L1dd15e.  if v2 == 0 then goto L1dd168;
  #L1dd162.  v3:= instanceof @variable v2 @type ^`java.lang.CharSequence` @kind boolean;
  #L1dd166.  goto L1dd16a;
  #L1dd168.  v3:= 1I;
  #L1dd16a.  if v3 == 0 then goto L1dd17a;
  #L1dd16e.  v2:= (`java.lang.CharSequence`) v2 @kind object;
  #L1dd172.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L1dd178.  goto L1dd1a4;
  #L1dd17a.  v3:= instanceof @variable v2 @type ^`java.lang.Character` @kind boolean;
  #L1dd17e.  if v3 == 0 then goto L1dd196;
  #L1dd182.  v2:= (`java.lang.Character`) v2 @kind object;
  #L1dd186.  call temp:= `charValue`(v2) @signature `Ljava/lang/Character;.charValue:()C` @kind virtual;
  #L1dd18c.  v2:= temp;
  #L1dd18e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L1dd194.  goto L1dd1a4;
  #L1dd196.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L1dd19c.  v2:= temp @kind object;
  #L1dd19e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L1dd1a4.  return @kind void;
}
