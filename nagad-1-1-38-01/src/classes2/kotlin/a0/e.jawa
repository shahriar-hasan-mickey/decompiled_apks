record `kotlin.a0.e` @kind class @AccessFlag FINAL extends `kotlin.z.b` @kind interface {
  `java.lang.CharSequence` `kotlin.a0.e.a` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.a0.e.b` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.a0.e.c` @AccessFlag PRIVATE_FINAL;
  `kotlin.v.b.p` `kotlin.a0.e.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.a0.e` v1 @kind this, `java.lang.CharSequence` v2 @kind object, `int` v3 , `int` v4 , `kotlin.v.b.p` v5 @kind object) @signature `Lkotlin/a0/e;.<init>:(Ljava/lang/CharSequence;IILkotlin/v/b/p;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1dcc24.  v0:= "input" @kind object;
  #L1dcc28.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dcc2e.  v0:= "getNextMatch" @kind object;
  #L1dcc32.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dcc38.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1dcc3e.  v1.`kotlin.a0.e.a` @type ^`java.lang.CharSequence` := v2 @kind object;
  #L1dcc42.  v1.`kotlin.a0.e.b` @type ^`int` := v3;
  #L1dcc46.  v1.`kotlin.a0.e.c` @type ^`int` := v4;
  #L1dcc4a.  v1.`kotlin.a0.e.d` @type ^`kotlin.v.b.p` := v5 @kind object;
  #L1dcc4e.  return @kind void;
}
procedure `kotlin.v.b.p` `access$getGetNextMatch$p`(`kotlin.a0.e` v0 @kind object) @signature `Lkotlin/a0/e;.access$getGetNextMatch$p:(Lkotlin/a0/e;)Lkotlin/v/b/p;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1dcc0c.  v0:= v0.`kotlin.a0.e.d` @type ^`kotlin.v.b.p` @kind object;
  #L1dcc10.  return v0 @kind object;
}
procedure `java.lang.CharSequence` `access$getInput$p`(`kotlin.a0.e` v0 @kind object) @signature `Lkotlin/a0/e;.access$getInput$p:(Lkotlin/a0/e;)Ljava/lang/CharSequence;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1dcbd8.  v0:= v0.`kotlin.a0.e.a` @type ^`java.lang.CharSequence` @kind object;
  #L1dcbdc.  return v0 @kind object;
}
procedure `int` `access$getLimit$p`(`kotlin.a0.e` v0 @kind object) @signature `Lkotlin/a0/e;.access$getLimit$p:(Lkotlin/a0/e;)I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1dcba8.  v0:= v0.`kotlin.a0.e.c` @type ^`int`;
  #L1dcbac.  return v0;
}
procedure `int` `access$getStartIndex$p`(`kotlin.a0.e` v0 @kind object) @signature `Lkotlin/a0/e;.access$getStartIndex$p:(Lkotlin/a0/e;)I` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L1dcbc0.  v0:= v0.`kotlin.a0.e.b` @type ^`int`;
  #L1dcbc4.  return v0;
}
procedure `java.util.Iterator` `iterator`(`kotlin.a0.e` v1 @kind this) @signature `Lkotlin/a0/e;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dcbf0.  v0:= new `kotlin.a0.e$a`;
  #L1dcbf4.  call `<init>`(v0, v1) @signature `Lkotlin/a0/e$a;.<init>:(Lkotlin/a0/e;)V` @kind direct;
  #L1dcbfa.  return v0 @kind object;
}
