record `kotlin.a0.r$a` @kind class @AccessFlag FINAL extends `kotlin.v.c.j` @kind class, `kotlin.v.b.p` @kind interface {
  `java.util.List` `kotlin.a0.r$a.f` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `kotlin.a0.r$a.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.a0.r$a` v0 @kind this, `java.util.List` v1 @kind object, `boolean` v2 ) @signature `Lkotlin/a0/r$a;.<init>:(Ljava/util/List;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1dd9d0.  v0.`kotlin.a0.r$a.f` @type ^`java.util.List` := v1 @kind object;
  #L1dd9d4.  v0.`kotlin.a0.r$a.g` @type ^`boolean` := v2 @kind boolean;
  #L1dd9d8.  v1:= 2I;
  #L1dd9da.  call `<init>`(v0, v1) @signature `Lkotlin/v/c/j;.<init>:(I)V` @kind direct;
  #L1dd9e0.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlin.a0.r$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/a0/r$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1dd940.  v1:= (`java.lang.CharSequence`) v1 @kind object;
  #L1dd944.  v2:= (`java.lang.Number`) v2 @kind object;
  #L1dd948.  call temp:= `intValue`(v2) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L1dd94e.  v2:= temp;
  #L1dd950.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlin/a0/r$a;.invoke:(Ljava/lang/CharSequence;I)Lkotlin/k;` @kind virtual;
  #L1dd956.  v1:= temp @kind object;
  #L1dd958.  return v1 @kind object;
}
procedure `kotlin.k` `invoke`(`kotlin.a0.r$a` v3 @kind this, `java.lang.CharSequence` v4 @kind object, `int` v5 ) @signature `Lkotlin/a0/r$a;.invoke:(Ljava/lang/CharSequence;I)Lkotlin/k;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1dd96c.  v0:= "$receiver" @kind object;
  #L1dd970.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1dd976.  v0:= v3.`kotlin.a0.r$a.f` @type ^`java.util.List` @kind object;
  #L1dd97a.  v1:= v3.`kotlin.a0.r$a.g` @type ^`boolean` @kind boolean;
  #L1dd97e.  v2:= 0I;
  #L1dd980.  call temp:= `access$findAnyOf`(v4, v0, v5, v1, v2) @signature `Lkotlin/a0/r;.access$findAnyOf:(Ljava/lang/CharSequence;Ljava/util/Collection;IZZ)Lkotlin/k;` @kind static;
  #L1dd986.  v4:= temp @kind object;
  #L1dd988.  if v4 == 0 then goto L1dd9ba;
  #L1dd98c.  call temp:= `getFirst`(v4) @signature `Lkotlin/k;.getFirst:()Ljava/lang/Object;` @kind virtual;
  #L1dd992.  v5:= temp @kind object;
  #L1dd994.  call temp:= `getSecond`(v4) @signature `Lkotlin/k;.getSecond:()Ljava/lang/Object;` @kind virtual;
  #L1dd99a.  v4:= temp @kind object;
  #L1dd99c.  v4:= (`java.lang.String`) v4 @kind object;
  #L1dd9a0.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1dd9a6.  v4:= temp;
  #L1dd9a8.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1dd9ae.  v4:= temp @kind object;
  #L1dd9b0.  call temp:= `to`(v5, v4) @signature `Lkotlin/o;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/k;` @kind static;
  #L1dd9b6.  v4:= temp @kind object;
  #L1dd9b8.  goto L1dd9bc;
  #L1dd9ba.  v4:= 0I;
  #L1dd9bc.  return v4 @kind object;
}
