record `kotlin.t.h` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.t.g` @kind interface, `java.io.Serializable` @kind interface {
}
global `kotlin.t.h` `@@kotlin.t.h.f` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@kotlin.t.h.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/t/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1d9010.  v0:= new `kotlin.t.h`;
  #L1d9014.  call `<init>`(v0) @signature `Lkotlin/t/h;.<init>:()V` @kind direct;
  #L1d901a.  `@@kotlin.t.h.f` @type ^`kotlin.t.h` := v0 @kind object;
  #L1d901e.  return @kind void;
}
procedure `void` `<init>`(`kotlin.t.h` v0 @kind this) @signature `Lkotlin/t/h;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1d9030.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d9036.  return @kind void;
}
procedure `java.lang.Object` `readResolve`(`kotlin.t.h` v1 @kind this) @signature `Lkotlin/t/h;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L1d8f88.  v0:= `@@kotlin.t.h.f` @type ^`kotlin.t.h` @kind object;
  #L1d8f8c.  return v0 @kind object;
}
procedure `java.lang.Object` `fold`(`kotlin.t.h` v1 @kind this, `java.lang.Object` v2 @kind object, `kotlin.v.b.p` v3 @kind object) @signature `Lkotlin/t/h;.fold:(Ljava/lang/Object;Lkotlin/v/b/p;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d8f6c.  v0:= "operation" @kind object;
  #L1d8f70.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d8f76.  return v2 @kind object;
}
procedure `kotlin.t.g$b` `get`(`kotlin.t.h` v1 @kind this, `kotlin.t.g$c` v2 @kind object) @signature `Lkotlin/t/h;.get:(Lkotlin/t/g$c;)Lkotlin/t/g$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d8ff0.  v0:= "key" @kind object;
  #L1d8ff4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d8ffa.  v2:= 0I;
  #L1d8ffc.  return v2 @kind object;
}
procedure `int` `hashCode`(`kotlin.t.h` v1 @kind this) @signature `Lkotlin/t/h;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d8f58.  v0:= 0I;
  #L1d8f5a.  return v0;
}
procedure `kotlin.t.g` `minusKey`(`kotlin.t.h` v1 @kind this, `kotlin.t.g$c` v2 @kind object) @signature `Lkotlin/t/h;.minusKey:(Lkotlin/t/g$c;)Lkotlin/t/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d8fb8.  v0:= "key" @kind object;
  #L1d8fbc.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d8fc2.  return v1 @kind object;
}
procedure `kotlin.t.g` `plus`(`kotlin.t.h` v1 @kind this, `kotlin.t.g` v2 @kind object) @signature `Lkotlin/t/h;.plus:(Lkotlin/t/g;)Lkotlin/t/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d8fd4.  v0:= "context" @kind object;
  #L1d8fd8.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d8fde.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`kotlin.t.h` v1 @kind this) @signature `Lkotlin/t/h;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d8fa0.  v0:= "EmptyCoroutineContext" @kind object;
  #L1d8fa4.  return v0 @kind object;
}
