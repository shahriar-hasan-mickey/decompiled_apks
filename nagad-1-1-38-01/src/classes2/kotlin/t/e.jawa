record `kotlin.t.e` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `kotlin.t.g$b` @kind interface {
}
global `kotlin.t.e$b` `@@kotlin.t.e.c` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/t/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1d8cf8.  v0:= `@@kotlin.t.e$b.a` @type ^`kotlin.t.e$b` @kind object;
  #L1d8cfc.  `@@kotlin.t.e.c` @type ^`kotlin.t.e$b` := v0 @kind object;
  #L1d8d00.  return @kind void;
}
procedure `kotlin.t.d` `interceptContinuation`(`kotlin.t.d` v0 @kind object) @signature `Lkotlin/t/e;.interceptContinuation:(Lkotlin/t/d;)Lkotlin/t/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `releaseInterceptedContinuation`(`kotlin.t.d` v0 @kind object) @signature `Lkotlin/t/e;.releaseInterceptedContinuation:(Lkotlin/t/d;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
