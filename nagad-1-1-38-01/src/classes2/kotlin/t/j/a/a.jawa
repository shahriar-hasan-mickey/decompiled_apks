record `kotlin.t.j.a.a` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlin.t.d` @kind interface, `kotlin.t.j.a.d` @kind interface, `java.io.Serializable` @kind interface {
  `kotlin.t.d` `kotlin.t.j.a.a.completion` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.t.j.a.a` v0 @kind this, `kotlin.t.d` v1 @kind object) @signature `Lkotlin/t/j/a/a;.<init>:(Lkotlin/t/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1d9490.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d9496.  v0.`kotlin.t.j.a.a.completion` @type ^`kotlin.t.d` := v1 @kind object;
  #L1d949a.  return @kind void;
}
procedure `kotlin.t.d` `create`(`kotlin.t.j.a.a` v0 @kind this, `java.lang.Object` v1 @kind object, `kotlin.t.d` v2 @kind object) @signature `Lkotlin/t/j/a/a;.create:(Ljava/lang/Object;Lkotlin/t/d;)Lkotlin/t/d;` @AccessFlag PUBLIC {
    temp;

  #L1d93fc.  v1:= "completion" @kind object;
  #L1d9400.  call `checkNotNullParameter`(v2, v1) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d9406.  v1:= new `java.lang.UnsupportedOperationException`;
  #L1d940a.  v2:= "create(Any?;Continuation) has not been overridden" @kind object;
  #L1d940e.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d9414.  throw v1;
}
procedure `kotlin.t.d` `create`(`kotlin.t.j.a.a` v1 @kind this, `kotlin.t.d` v2 @kind object) @signature `Lkotlin/t/j/a/a;.create:(Lkotlin/t/d;)Lkotlin/t/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d9428.  v0:= "completion" @kind object;
  #L1d942c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d9432.  v2:= new `java.lang.UnsupportedOperationException`;
  #L1d9436.  v0:= "create(Continuation) has not been overridden" @kind object;
  #L1d943a.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d9440.  throw v2;
}
procedure `kotlin.t.j.a.d` `getCallerFrame`(`kotlin.t.j.a.a` v2 @kind this) @signature `Lkotlin/t/j/a/a;.getCallerFrame:()Lkotlin/t/j/a/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d946c.  v0:= v2.`kotlin.t.j.a.a.completion` @type ^`kotlin.t.d` @kind object;
  #L1d9470.  v1:= instanceof @variable v0 @type ^`kotlin.t.j.a.d` @kind boolean;
  #L1d9474.  if v1 != 0 then goto L1d947a;
  #L1d9478.  v0:= 0I;
  #L1d947a.  v0:= (`kotlin.t.j.a.d`) v0 @kind object;
  #L1d947e.  return v0 @kind object;
}
procedure `kotlin.t.d` `getCompletion`(`kotlin.t.j.a.a` v1 @kind this) @signature `Lkotlin/t/j/a/a;.getCompletion:()Lkotlin/t/d;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1d9454.  v0:= v1.`kotlin.t.j.a.a.completion` @type ^`kotlin.t.d` @kind object;
  #L1d9458.  return v0 @kind object;
}
procedure `java.lang.StackTraceElement` `getStackTraceElement`(`kotlin.t.j.a.a` v1 @kind this) @signature `Lkotlin/t/j/a/a;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d938c.  call temp:= `getStackTraceElement`(v1) @signature `Lkotlin/t/j/a/f;.getStackTraceElement:(Lkotlin/t/j/a/a;)Ljava/lang/StackTraceElement;` @kind static;
  #L1d9392.  v0:= temp @kind object;
  #L1d9394.  return v0 @kind object;
}
procedure `java.lang.Object` `invokeSuspend`(`java.lang.Object` v0 @kind object) @signature `Lkotlin/t/j/a/a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `releaseIntercepted`(`kotlin.t.j.a.a` v0 @kind this) @signature `Lkotlin/t/j/a/a;.releaseIntercepted:()V` @AccessFlag PROTECTED {
    temp;

  #L1d94ac.  return @kind void;
}
procedure `void` `resumeWith`(`kotlin.t.j.a.a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlin/t/j/a/a;.resumeWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1d94c0.  v0:= v4 @kind object;
  #L1d94c2.  v4:= v3 @kind object;
  #L1d94c4.  call `probeCoroutineResumed`(v4) @signature `Lkotlin/t/j/a/g;.probeCoroutineResumed:(Lkotlin/t/d;)V` @kind static;
  #L1d94ca.  v1:= v4.`kotlin.t.j.a.a.completion` @type ^`kotlin.t.d` @kind object;
  #L1d94ce.  call `checkNotNull`(v1) @signature `Lkotlin/v/c/i;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1d94d4.  call temp:= `invokeSuspend`(v4, v0) @signature `Lkotlin/t/j/a/a;.invokeSuspend:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1d94da.  v0:= temp @kind object;
  #L1d94dc.  call temp:= `getCOROUTINE_SUSPENDED`() @signature `Lkotlin/t/i/b;.getCOROUTINE_SUSPENDED:()Ljava/lang/Object;` @kind static;
  #L1d94e2.  v2:= temp @kind object;
  #L1d94e4.  if v0 != v2 then goto L1d94ea;
  #L1d94e8.  return @kind void;
  #L1d94ea.  v2:= `@@kotlin.l.f` @type ^`kotlin.l$a` @kind object;
  #L1d94ee.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/l;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1d94f4.  goto L1d950a;
  #L1d94f6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1d94f8.  v2:= `@@kotlin.l.f` @type ^`kotlin.l$a` @kind object;
  #L1d94fc.  call temp:= `createFailure`(v0) @signature `Lkotlin/m;.createFailure:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L1d9502.  v0:= temp @kind object;
  #L1d9504.  call temp:= `constructor-impl`(v0) @signature `Lkotlin/l;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1d950a.  call `releaseIntercepted`(v4) @signature `Lkotlin/t/j/a/a;.releaseIntercepted:()V` @kind virtual;
  #L1d9510.  v4:= instanceof @variable v1 @type ^`kotlin.t.j.a.a` @kind boolean;
  #L1d9514.  if v4 == 0 then goto L1d9520;
  #L1d9518.  v4:= v1 @kind object;
  #L1d951a.  v4:= (`kotlin.t.j.a.a`) v4 @kind object;
  #L1d951e.  goto L1d94c4;
  #L1d9520.  call `resumeWith`(v1, v0) @signature `Lkotlin/t/d;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L1d9526.  return @kind void;
  catch `java.lang.Throwable` @[L1d94d4..L1d94f4] goto L1d94f6;
}
procedure `java.lang.String` `toString`(`kotlin.t.j.a.a` v2 @kind this) @signature `Lkotlin/t/j/a/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d93a8.  v0:= new `java.lang.StringBuilder`;
  #L1d93ac.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d93b2.  v1:= "Continuation at " @kind object;
  #L1d93b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d93bc.  call temp:= `getStackTraceElement`(v2) @signature `Lkotlin/t/j/a/a;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @kind virtual;
  #L1d93c2.  v1:= temp @kind object;
  #L1d93c4.  if v1 == 0 then goto L1d93ca;
  #L1d93c8.  goto L1d93da;
  #L1d93ca.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1d93d0.  v1:= temp @kind object;
  #L1d93d2.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L1d93d8.  v1:= temp @kind object;
  #L1d93da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d93e0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d93e6.  v0:= temp @kind object;
  #L1d93e8.  return v0 @kind object;
}
