record `kotlin.t.j.a.c` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlin.t.j.a.a` @kind class {
  `kotlin.t.g` `kotlin.t.j.a.c._context` @AccessFlag PRIVATE_FINAL;
  `kotlin.t.d` `kotlin.t.j.a.c.intercepted` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`kotlin.t.j.a.c` v1 @kind this, `kotlin.t.d` v2 @kind object) @signature `Lkotlin/t/j/a/c;.<init>:(Lkotlin/t/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1d964c.  if v2 == 0 then goto L1d965a;
  #L1d9650.  call temp:= `getContext`(v2) @signature `Lkotlin/t/d;.getContext:()Lkotlin/t/g;` @kind interface;
  #L1d9656.  v0:= temp @kind object;
  #L1d9658.  goto L1d965c;
  #L1d965a.  v0:= 0I;
  #L1d965c.  call `<init>`(v1, v2, v0) @signature `Lkotlin/t/j/a/c;.<init>:(Lkotlin/t/d;Lkotlin/t/g;)V` @kind direct;
  #L1d9662.  return @kind void;
}
procedure `void` `<init>`(`kotlin.t.j.a.c` v0 @kind this, `kotlin.t.d` v1 @kind object, `kotlin.t.g` v2 @kind object) @signature `Lkotlin/t/j/a/c;.<init>:(Lkotlin/t/d;Lkotlin/t/g;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1d9674.  call `<init>`(v0, v1) @signature `Lkotlin/t/j/a/a;.<init>:(Lkotlin/t/d;)V` @kind direct;
  #L1d967a.  v0.`kotlin.t.j.a.c._context` @type ^`kotlin.t.g` := v2 @kind object;
  #L1d967e.  return @kind void;
}
procedure `kotlin.t.g` `getContext`(`kotlin.t.j.a.c` v1 @kind this) @signature `Lkotlin/t/j/a/c;.getContext:()Lkotlin/t/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d9630.  v0:= v1.`kotlin.t.j.a.c._context` @type ^`kotlin.t.g` @kind object;
  #L1d9634.  call `checkNotNull`(v0) @signature `Lkotlin/v/c/i;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1d963a.  return v0 @kind object;
}
procedure `kotlin.t.d` `intercepted`(`kotlin.t.j.a.c` v2 @kind this) @signature `Lkotlin/t/j/a/c;.intercepted:()Lkotlin/t/d;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L1d95e4.  v0:= v2.`kotlin.t.j.a.c.intercepted` @type ^`kotlin.t.d` @kind object;
  #L1d95e8.  if v0 == 0 then goto L1d95ee;
  #L1d95ec.  goto L1d961e;
  #L1d95ee.  call temp:= `getContext`(v2) @signature `Lkotlin/t/j/a/c;.getContext:()Lkotlin/t/g;` @kind virtual;
  #L1d95f4.  v0:= temp @kind object;
  #L1d95f6.  v1:= `@@kotlin.t.e.c` @type ^`kotlin.t.e$b` @kind object;
  #L1d95fa.  call temp:= `get`(v0, v1) @signature `Lkotlin/t/g;.get:(Lkotlin/t/g$c;)Lkotlin/t/g$b;` @kind interface;
  #L1d9600.  v0:= temp @kind object;
  #L1d9602.  v0:= (`kotlin.t.e`) v0 @kind object;
  #L1d9606.  if v0 == 0 then goto L1d9618;
  #L1d960a.  call temp:= `interceptContinuation`(v0, v2) @signature `Lkotlin/t/e;.interceptContinuation:(Lkotlin/t/d;)Lkotlin/t/d;` @kind interface;
  #L1d9610.  v0:= temp @kind object;
  #L1d9612.  if v0 == 0 then goto L1d9618;
  #L1d9616.  goto L1d961a;
  #L1d9618.  v0:= v2 @kind object;
  #L1d961a.  v2.`kotlin.t.j.a.c.intercepted` @type ^`kotlin.t.d` := v0 @kind object;
  #L1d961e.  return v0 @kind object;
}
procedure `void` `releaseIntercepted`(`kotlin.t.j.a.c` v3 @kind this) @signature `Lkotlin/t/j/a/c;.releaseIntercepted:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L1d9690.  v0:= v3.`kotlin.t.j.a.c.intercepted` @type ^`kotlin.t.d` @kind object;
  #L1d9694.  if v0 == 0 then goto L1d96c0;
  #L1d9698.  if v0 == v3 then goto L1d96c0;
  #L1d969c.  call temp:= `getContext`(v3) @signature `Lkotlin/t/j/a/c;.getContext:()Lkotlin/t/g;` @kind virtual;
  #L1d96a2.  v1:= temp @kind object;
  #L1d96a4.  v2:= `@@kotlin.t.e.c` @type ^`kotlin.t.e$b` @kind object;
  #L1d96a8.  call temp:= `get`(v1, v2) @signature `Lkotlin/t/g;.get:(Lkotlin/t/g$c;)Lkotlin/t/g$b;` @kind interface;
  #L1d96ae.  v1:= temp @kind object;
  #L1d96b0.  call `checkNotNull`(v1) @signature `Lkotlin/v/c/i;.checkNotNull:(Ljava/lang/Object;)V` @kind static;
  #L1d96b6.  v1:= (`kotlin.t.e`) v1 @kind object;
  #L1d96ba.  call `releaseInterceptedContinuation`(v1, v0) @signature `Lkotlin/t/e;.releaseInterceptedContinuation:(Lkotlin/t/d;)V` @kind interface;
  #L1d96c0.  v0:= `@@kotlin.t.j.a.b.f` @type ^`kotlin.t.j.a.b` @kind object;
  #L1d96c4.  v3.`kotlin.t.j.a.c.intercepted` @type ^`kotlin.t.d` := v0 @kind object;
  #L1d96c8.  return @kind void;
}
