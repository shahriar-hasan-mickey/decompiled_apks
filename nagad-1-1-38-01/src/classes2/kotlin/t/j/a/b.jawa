record `kotlin.t.j.a.b` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.t.d` @kind interface {
}
global `kotlin.t.j.a.b` `@@kotlin.t.j.a.b.f` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/t/j/a/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1d9584.  v0:= new `kotlin.t.j.a.b`;
  #L1d9588.  call `<init>`(v0) @signature `Lkotlin/t/j/a/b;.<init>:()V` @kind direct;
  #L1d958e.  `@@kotlin.t.j.a.b.f` @type ^`kotlin.t.j.a.b` := v0 @kind object;
  #L1d9592.  return @kind void;
}
procedure `void` `<init>`(`kotlin.t.j.a.b` v0 @kind this) @signature `Lkotlin/t/j/a/b;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1d95a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d95aa.  return @kind void;
}
procedure `kotlin.t.g` `getContext`(`kotlin.t.j.a.b` v2 @kind this) @signature `Lkotlin/t/j/a/b;.getContext:()Lkotlin/t/g;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d955c.  v0:= new `java.lang.IllegalStateException`;
  #L1d9560.  v1:= "This continuation is already complete" @kind object;
  #L1d9564.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d956a.  v1:= temp @kind object;
  #L1d956c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d9572.  throw v0;
}
procedure `void` `resumeWith`(`kotlin.t.j.a.b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlin/t/j/a/b;.resumeWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d95bc.  v2:= new `java.lang.IllegalStateException`;
  #L1d95c0.  v0:= "This continuation is already complete" @kind object;
  #L1d95c4.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d95ca.  v0:= temp @kind object;
  #L1d95cc.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d95d2.  throw v2;
}
procedure `java.lang.String` `toString`(`kotlin.t.j.a.b` v1 @kind this) @signature `Lkotlin/t/j/a/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d9544.  v0:= "This continuation is already complete" @kind object;
  #L1d9548.  return v0 @kind object;
}
