record `kotlin.t.j.a.f` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `kotlin.t.j.a.e` `a`(`kotlin.t.j.a.a` v1 @kind object) @signature `Lkotlin/t/j/a/f;.a:(Lkotlin/t/j/a/a;)Lkotlin/t/j/a/e;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;

  #L1d980c.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1d9812.  v1:= temp @kind object;
  #L1d9814.  v0:= constclass @type ^`kotlin.t.j.a.e` @kind object;
  #L1d9818.  call temp:= `getAnnotation`(v1, v0) @signature `Ljava/lang/Class;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L1d981e.  v1:= temp @kind object;
  #L1d9820.  v1:= (`kotlin.t.j.a.e`) v1 @kind object;
  #L1d9824.  return v1 @kind object;
}
procedure `void` `a`(`int` v2 , `int` v3 ) @signature `Lkotlin/t/j/a/f;.a:(II)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1d9838.  if v3 > v2 then goto L1d983e;
  #L1d983c.  return @kind void;
  #L1d983e.  v0:= new `java.lang.StringBuilder`;
  #L1d9842.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d9848.  v1:= "Debug metadata version mismatch. Expected: " @kind object;
  #L1d984c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9852.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9858.  v2:= ", got " @kind object;
  #L1d985c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9862.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9868.  v2:= ". Please update the Kotlin standard library." @kind object;
  #L1d986c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d9872.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d9878.  v2:= temp @kind object;
  #L1d987a.  v3:= new `java.lang.IllegalStateException`;
  #L1d987e.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d9884.  v2:= temp @kind object;
  #L1d9886.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d988c.  throw v3;
}
procedure `int` `b`(`kotlin.t.j.a.a` v2 @kind object) @signature `Lkotlin/t/j/a/f;.b:(Lkotlin/t/j/a/a;)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L1d96dc.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1d96e2.  v0:= temp @kind object;
  #L1d96e4.  v1:= "label" @kind object;
  #L1d96e8.  call temp:= `getDeclaredField`(v0, v1) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L1d96ee.  v0:= temp @kind object;
  #L1d96f0.  v1:= "field" @kind object;
  #L1d96f4.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/v/c/i;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d96fa.  v1:= 1I;
  #L1d96fc.  call `setAccessible`(v0, v1) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L1d9702.  call temp:= `get`(v0, v2) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1d9708.  v2:= temp @kind object;
  #L1d970a.  v0:= instanceof @variable v2 @type ^`java.lang.Integer` @kind boolean;
  #L1d970e.  if v0 != 0 then goto L1d9714;
  #L1d9712.  v2:= 0I;
  #L1d9714.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L1d9718.  if v2 == 0 then goto L1d9726;
  #L1d971c.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1d9722.  v2:= temp;
  #L1d9724.  goto L1d9728;
  #L1d9726.  v2:= 0I;
  #L1d9728.  v2:= v2 - v1 @kind int;
  #L1d972a.  goto L1d972e;
  #L1d972c.  v2:= -1I;
  #L1d972e.  return v2;
  catch `java.lang.Exception` @[L1d96dc..L1d9724] goto L1d972c;
}
procedure `java.lang.StackTraceElement` `getStackTraceElement`(`kotlin.t.j.a.a` v4 @kind object) @signature `Lkotlin/t/j/a/f;.getStackTraceElement:(Lkotlin/t/j/a/a;)Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1d9750.  v0:= "$this$getStackTraceElementImpl" @kind object;
  #L1d9754.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d975a.  call temp:= `a`(v4) @signature `Lkotlin/t/j/a/f;.a:(Lkotlin/t/j/a/a;)Lkotlin/t/j/a/e;` @kind static;
  #L1d9760.  v0:= temp @kind object;
  #L1d9762.  if v0 == 0 then goto L1d97f8;
  #L1d9766.  v1:= 1I;
  #L1d9768.  call temp:= `v`(v0) @signature `Lkotlin/t/j/a/e;.v:()I` @kind interface;
  #L1d976e.  v2:= temp;
  #L1d9770.  call `a`(v1, v2) @signature `Lkotlin/t/j/a/f;.a:(II)V` @kind static;
  #L1d9776.  call temp:= `b`(v4) @signature `Lkotlin/t/j/a/f;.b:(Lkotlin/t/j/a/a;)I` @kind static;
  #L1d977c.  v1:= temp;
  #L1d977e.  if v1 >= 0 then goto L1d9786;
  #L1d9782.  v1:= -1I;
  #L1d9784.  goto L1d9792;
  #L1d9786.  call temp:= `l`(v0) @signature `Lkotlin/t/j/a/e;.l:()[I` @kind interface;
  #L1d978c.  v2:= temp @kind object;
  #L1d978e.  v1:= v2[v1];
  #L1d9792.  v2:= `@@kotlin.t.j.a.h.c` @type ^`kotlin.t.j.a.h` @kind object;
  #L1d9796.  call temp:= `getModuleName`(v2, v4) @signature `Lkotlin/t/j/a/h;.getModuleName:(Lkotlin/t/j/a/a;)Ljava/lang/String;` @kind virtual;
  #L1d979c.  v4:= temp @kind object;
  #L1d979e.  if v4 != 0 then goto L1d97ac;
  #L1d97a2.  call temp:= `c`(v0) @signature `Lkotlin/t/j/a/e;.c:()Ljava/lang/String;` @kind interface;
  #L1d97a8.  v4:= temp @kind object;
  #L1d97aa.  goto L1d97dc;
  #L1d97ac.  v2:= new `java.lang.StringBuilder`;
  #L1d97b0.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d97b6.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d97bc.  v4:= 47I;
  #L1d97c0.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d97c6.  call temp:= `c`(v0) @signature `Lkotlin/t/j/a/e;.c:()Ljava/lang/String;` @kind interface;
  #L1d97cc.  v4:= temp @kind object;
  #L1d97ce.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d97d4.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d97da.  v4:= temp @kind object;
  #L1d97dc.  v2:= new `java.lang.StackTraceElement`;
  #L1d97e0.  call temp:= `m`(v0) @signature `Lkotlin/t/j/a/e;.m:()Ljava/lang/String;` @kind interface;
  #L1d97e6.  v3:= temp @kind object;
  #L1d97e8.  call temp:= `f`(v0) @signature `Lkotlin/t/j/a/e;.f:()Ljava/lang/String;` @kind interface;
  #L1d97ee.  v0:= temp @kind object;
  #L1d97f0.  call `<init>`(v2, v4, v3, v0, v1) @signature `Ljava/lang/StackTraceElement;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L1d97f6.  return v2 @kind object;
  #L1d97f8.  v4:= 0I;
  #L1d97fa.  return v4 @kind object;
}
