record `kotlin.t.j.a.k` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlin.t.j.a.c` @kind class, `kotlin.v.c.g` @kind interface, `kotlin.t.j.a.j` @kind interface {
  `int` `kotlin.t.j.a.k.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.t.j.a.k` v0 @kind this, `int` v1 , `kotlin.t.d` v2 @kind object) @signature `Lkotlin/t/j/a/k;.<init>:(ILkotlin/t/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1d9b60.  call `<init>`(v0, v2) @signature `Lkotlin/t/j/a/c;.<init>:(Lkotlin/t/d;)V` @kind direct;
  #L1d9b66.  v0.`kotlin.t.j.a.k.f` @type ^`int` := v1;
  #L1d9b6a.  return @kind void;
}
procedure `int` `getArity`(`kotlin.t.j.a.k` v1 @kind this) @signature `Lkotlin/t/j/a/k;.getArity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d9b0c.  v0:= v1.`kotlin.t.j.a.k.f` @type ^`int`;
  #L1d9b10.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.t.j.a.k` v2 @kind this) @signature `Lkotlin/t/j/a/k;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d9b24.  call temp:= `getCompletion`(v2) @signature `Lkotlin/t/j/a/a;.getCompletion:()Lkotlin/t/d;` @kind virtual;
  #L1d9b2a.  v0:= temp @kind object;
  #L1d9b2c.  if v0 != 0 then goto L1d9b44;
  #L1d9b30.  call temp:= `renderLambdaToString`(v2) @signature `Lkotlin/v/c/m;.renderLambdaToString:(Lkotlin/v/c/g;)Ljava/lang/String;` @kind static;
  #L1d9b36.  v0:= temp @kind object;
  #L1d9b38.  v1:= "Reflection.renderLambdaToString(this)" @kind object;
  #L1d9b3c.  call `checkNotNullExpressionValue`(v0, v1) @signature `Lkotlin/v/c/i;.checkNotNullExpressionValue:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d9b42.  goto L1d9b4c;
  #L1d9b44.  call temp:= `toString`(v2) @signature `Lkotlin/t/j/a/a;.toString:()Ljava/lang/String;` @kind super;
  #L1d9b4a.  v0:= temp @kind object;
  #L1d9b4c.  return v0 @kind object;
}
