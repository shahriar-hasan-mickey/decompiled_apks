record `kotlin.t.b` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlin.t.g$c` @kind interface {
  `kotlin.t.g$c` `kotlin.t.b.a` @AccessFlag PRIVATE_FINAL;
  `kotlin.v.b.l` `kotlin.t.b.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.t.b` v1 @kind this, `kotlin.t.g$c` v2 @kind object, `kotlin.v.b.l` v3 @kind object) @signature `Lkotlin/t/b;.<init>:(Lkotlin/t/g$c;Lkotlin/v/b/l;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1d8670.  v0:= "baseKey" @kind object;
  #L1d8674.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d867a.  v0:= "safeCast" @kind object;
  #L1d867e.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d8684.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d868a.  v1.`kotlin.t.b.b` @type ^`kotlin.v.b.l` := v3 @kind object;
  #L1d868e.  v3:= instanceof @variable v2 @type ^`kotlin.t.b` @kind boolean;
  #L1d8692.  if v3 == 0 then goto L1d869e;
  #L1d8696.  v2:= (`kotlin.t.b`) v2 @kind object;
  #L1d869a.  v2:= v2.`kotlin.t.b.a` @type ^`kotlin.t.g$c` @kind object;
  #L1d869e.  v1.`kotlin.t.b.a` @type ^`kotlin.t.g$c` := v2 @kind object;
  #L1d86a2.  return @kind void;
}
procedure `boolean` `isSubKey$kotlin_stdlib`(`kotlin.t.b` v1 @kind this, `kotlin.t.g$c` v2 @kind object) @signature `Lkotlin/t/b;.isSubKey$kotlin_stdlib:(Lkotlin/t/g$c;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1d8614.  v0:= "key" @kind object;
  #L1d8618.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d861e.  if v2 == v1 then goto L1d8630;
  #L1d8622.  v0:= v1.`kotlin.t.b.a` @type ^`kotlin.t.g$c` @kind object;
  #L1d8626.  if v0 != v2 then goto L1d862c;
  #L1d862a.  goto L1d8630;
  #L1d862c.  v2:= 0I;
  #L1d862e.  goto L1d8632;
  #L1d8630.  v2:= 1I;
  #L1d8632.  return v2;
}
procedure `kotlin.t.g$b` `tryCast$kotlin_stdlib`(`kotlin.t.b` v1 @kind this, `kotlin.t.g$b` v2 @kind object) @signature `Lkotlin/t/b;.tryCast$kotlin_stdlib:(Lkotlin/t/g$b;)Lkotlin/t/g$b;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L1d8644.  v0:= "element" @kind object;
  #L1d8648.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d864e.  v0:= v1.`kotlin.t.b.b` @type ^`kotlin.v.b.l` @kind object;
  #L1d8652.  call temp:= `invoke`(v0, v2) @signature `Lkotlin/v/b/l;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1d8658.  v2:= temp @kind object;
  #L1d865a.  v2:= (`kotlin.t.g$b`) v2 @kind object;
  #L1d865e.  return v2 @kind object;
}
