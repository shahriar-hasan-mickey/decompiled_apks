record `kotlin.t.c$a` @kind class @AccessFlag FINAL extends `java.io.Serializable` @kind interface {
  `kotlin.t.g`[] `kotlin.t.c$a.f` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@kotlin.t.c$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/t/c$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1d8718.  v0:= new `kotlin.t.c$a$a`;
  #L1d871c.  v1:= 0I;
  #L1d871e.  call `<init>`(v0, v1) @signature `Lkotlin/t/c$a$a;.<init>:(Lkotlin/v/c/f;)V` @kind direct;
  #L1d8724.  return @kind void;
}
procedure `void` `<init>`(`kotlin.t.c$a` v1 @kind this, `kotlin.t.g`[] v2 @kind object) @signature `Lkotlin/t/c$a;.<init>:([Lkotlin/t/g;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1d8738.  v0:= "elements" @kind object;
  #L1d873c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d8742.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d8748.  v1.`kotlin.t.c$a.f` @type ^`kotlin.t.g`[] := v2 @kind object;
  #L1d874c.  return @kind void;
}
procedure `java.lang.Object` `readResolve`(`kotlin.t.c$a` v5 @kind this) @signature `Lkotlin/t/c$a;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1d86e4.  v0:= v5.`kotlin.t.c$a.f` @type ^`kotlin.t.g`[] @kind object;
  #L1d86e8.  v1:= `@@kotlin.t.h.f` @type ^`kotlin.t.h` @kind object;
  #L1d86ec.  v2:= length @variable v0;
  #L1d86ee.  v3:= 0I;
  #L1d86f0.  if v3 >= v2 then goto L1d8706;
  #L1d86f4.  v4:= v0[v3] @kind object;
  #L1d86f8.  call temp:= `plus`(v1, v4) @signature `Lkotlin/t/g;.plus:(Lkotlin/t/g;)Lkotlin/t/g;` @kind interface;
  #L1d86fe.  v1:= temp @kind object;
  #L1d8700.  v3:= v3 + 1;
  #L1d8704.  goto L1d86f0;
  #L1d8706.  return v1 @kind object;
}
