record `kotlin.t.g$a$a` @kind class @AccessFlag FINAL extends `kotlin.v.c.j` @kind class, `kotlin.v.b.p` @kind interface {
}
global `kotlin.t.g$a$a` `@@kotlin.t.g$a$a.f` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/t/g$a$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1d8f1c.  v0:= new `kotlin.t.g$a$a`;
  #L1d8f20.  call `<init>`(v0) @signature `Lkotlin/t/g$a$a;.<init>:()V` @kind direct;
  #L1d8f26.  `@@kotlin.t.g$a$a.f` @type ^`kotlin.t.g$a$a` := v0 @kind object;
  #L1d8f2a.  return @kind void;
}
procedure `void` `<init>`(`kotlin.t.g$a$a` v1 @kind this) @signature `Lkotlin/t/g$a$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1d8f3c.  v0:= 2I;
  #L1d8f3e.  call `<init>`(v1, v0) @signature `Lkotlin/v/c/j;.<init>:(I)V` @kind direct;
  #L1d8f44.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlin.t.g$a$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlin/t/g$a$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1d8e5c.  v1:= (`kotlin.t.g`) v1 @kind object;
  #L1d8e60.  v2:= (`kotlin.t.g$b`) v2 @kind object;
  #L1d8e64.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlin/t/g$a$a;.invoke:(Lkotlin/t/g;Lkotlin/t/g$b;)Lkotlin/t/g;` @kind virtual;
  #L1d8e6a.  v1:= temp @kind object;
  #L1d8e6c.  return v1 @kind object;
}
procedure `kotlin.t.g` `invoke`(`kotlin.t.g$a$a` v3 @kind this, `kotlin.t.g` v4 @kind object, `kotlin.t.g$b` v5 @kind object) @signature `Lkotlin/t/g$a$a;.invoke:(Lkotlin/t/g;Lkotlin/t/g$b;)Lkotlin/t/g;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L1d8e80.  v0:= "acc" @kind object;
  #L1d8e84.  call `checkNotNullParameter`(v4, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d8e8a.  v0:= "element" @kind object;
  #L1d8e8e.  call `checkNotNullParameter`(v5, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d8e94.  call temp:= `getKey`(v5) @signature `Lkotlin/t/g$b;.getKey:()Lkotlin/t/g$c;` @kind interface;
  #L1d8e9a.  v0:= temp @kind object;
  #L1d8e9c.  call temp:= `minusKey`(v4, v0) @signature `Lkotlin/t/g;.minusKey:(Lkotlin/t/g$c;)Lkotlin/t/g;` @kind interface;
  #L1d8ea2.  v4:= temp @kind object;
  #L1d8ea4.  v0:= `@@kotlin.t.h.f` @type ^`kotlin.t.h` @kind object;
  #L1d8ea8.  if v4 != v0 then goto L1d8eae;
  #L1d8eac.  goto L1d8f08;
  #L1d8eae.  v0:= `@@kotlin.t.e.c` @type ^`kotlin.t.e$b` @kind object;
  #L1d8eb2.  call temp:= `get`(v4, v0) @signature `Lkotlin/t/g;.get:(Lkotlin/t/g$c;)Lkotlin/t/g$b;` @kind interface;
  #L1d8eb8.  v0:= temp @kind object;
  #L1d8eba.  v0:= (`kotlin.t.e`) v0 @kind object;
  #L1d8ebe.  if v0 != 0 then goto L1d8ed0;
  #L1d8ec2.  v0:= new `kotlin.t.c`;
  #L1d8ec6.  call `<init>`(v0, v4, v5) @signature `Lkotlin/t/c;.<init>:(Lkotlin/t/g;Lkotlin/t/g$b;)V` @kind direct;
  #L1d8ecc.  v5:= v0 @kind object;
  #L1d8ece.  goto L1d8f08;
  #L1d8ed0.  v1:= `@@kotlin.t.e.c` @type ^`kotlin.t.e$b` @kind object;
  #L1d8ed4.  call temp:= `minusKey`(v4, v1) @signature `Lkotlin/t/g;.minusKey:(Lkotlin/t/g$c;)Lkotlin/t/g;` @kind interface;
  #L1d8eda.  v4:= temp @kind object;
  #L1d8edc.  v1:= `@@kotlin.t.h.f` @type ^`kotlin.t.h` @kind object;
  #L1d8ee0.  if v4 != v1 then goto L1d8ef2;
  #L1d8ee4.  v4:= new `kotlin.t.c`;
  #L1d8ee8.  call `<init>`(v4, v5, v0) @signature `Lkotlin/t/c;.<init>:(Lkotlin/t/g;Lkotlin/t/g$b;)V` @kind direct;
  #L1d8eee.  v5:= v4 @kind object;
  #L1d8ef0.  goto L1d8f08;
  #L1d8ef2.  v1:= new `kotlin.t.c`;
  #L1d8ef6.  v2:= new `kotlin.t.c`;
  #L1d8efa.  call `<init>`(v2, v4, v5) @signature `Lkotlin/t/c;.<init>:(Lkotlin/t/g;Lkotlin/t/g$b;)V` @kind direct;
  #L1d8f00.  call `<init>`(v1, v2, v0) @signature `Lkotlin/t/c;.<init>:(Lkotlin/t/g;Lkotlin/t/g$b;)V` @kind direct;
  #L1d8f06.  v5:= v1 @kind object;
  #L1d8f08.  return v5 @kind object;
}
