record `kotlin.t.i.c` @kind class @AccessFlag  {
}
procedure `kotlin.t.d` `createCoroutineUnintercepted`(`kotlin.v.b.p` v8 @kind object, `java.lang.Object` v9 @kind object, `kotlin.t.d` v10 @kind object) @signature `Lkotlin/t/i/c;.createCoroutineUnintercepted:(Lkotlin/v/b/p;Ljava/lang/Object;Lkotlin/t/d;)Lkotlin/t/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1d9244.  v0:= "$this$createCoroutineUnintercepted" @kind object;
  #L1d9248.  call `checkNotNullParameter`(v8, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d924e.  v0:= "completion" @kind object;
  #L1d9252.  call `checkNotNullParameter`(v10, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d9258.  call temp:= `probeCoroutineCreated`(v10) @signature `Lkotlin/t/j/a/g;.probeCoroutineCreated:(Lkotlin/t/d;)Lkotlin/t/d;` @kind static;
  #L1d925e.  v0:= instanceof @variable v8 @type ^`kotlin.t.j.a.a` @kind boolean;
  #L1d9262.  if v0 == 0 then goto L1d9274;
  #L1d9266.  v8:= (`kotlin.t.j.a.a`) v8 @kind object;
  #L1d926a.  call temp:= `create`(v8, v9, v10) @signature `Lkotlin/t/j/a/a;.create:(Ljava/lang/Object;Lkotlin/t/d;)Lkotlin/t/d;` @kind virtual;
  #L1d9270.  v8:= temp @kind object;
  #L1d9272.  goto L1d92c2;
  #L1d9274.  call temp:= `getContext`(v10) @signature `Lkotlin/t/d;.getContext:()Lkotlin/t/g;` @kind interface;
  #L1d927a.  v4:= temp @kind object;
  #L1d927c.  v0:= `@@kotlin.t.h.f` @type ^`kotlin.t.h` @kind object;
  #L1d9280.  v1:= "null cannot be cast to non-null type kotlin.coroutines.Continuation<kotlin.Any?>" @kind object;
  #L1d9284.  if v4 != v0 then goto L1d92a6;
  #L1d9288.  v0:= new `kotlin.t.i.c$a`;
  #L1d928c.  if v10 == 0 then goto L1d929a;
  #L1d9290.  call `<init>`(v0, v10, v10, v8, v9) @signature `Lkotlin/t/i/c$a;.<init>:(Lkotlin/t/d;Lkotlin/t/d;Lkotlin/v/b/p;Ljava/lang/Object;)V` @kind direct;
  #L1d9296.  v8:= v0 @kind object;
  #L1d9298.  goto L1d92c2;
  #L1d929a.  v8:= new `java.lang.NullPointerException`;
  #L1d929e.  call `<init>`(v8, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d92a4.  throw v8;
  #L1d92a6.  v7:= new `kotlin.t.i.c$b`;
  #L1d92aa.  if v10 == 0 then goto L1d92c4;
  #L1d92ae.  v0:= v7 @kind object;
  #L1d92b0.  v1:= v10 @kind object;
  #L1d92b2.  v2:= v4 @kind object;
  #L1d92b4.  v3:= v10 @kind object;
  #L1d92b6.  v5:= v8 @kind object;
  #L1d92b8.  v6:= v9 @kind object;
  #L1d92ba.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lkotlin/t/i/c$b;.<init>:(Lkotlin/t/d;Lkotlin/t/g;Lkotlin/t/d;Lkotlin/t/g;Lkotlin/v/b/p;Ljava/lang/Object;)V` @kind direct;
  #L1d92c0.  v8:= v7 @kind object;
  #L1d92c2.  return v8 @kind object;
  #L1d92c4.  v8:= new `java.lang.NullPointerException`;
  #L1d92c8.  call `<init>`(v8, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d92ce.  throw v8;
}
procedure `kotlin.t.d` `intercepted`(`kotlin.t.d` v1 @kind object) @signature `Lkotlin/t/i/c;.intercepted:(Lkotlin/t/d;)Lkotlin/t/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d92e0.  v0:= "$this$intercepted" @kind object;
  #L1d92e4.  call `checkNotNullParameter`(v1, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d92ea.  v0:= instanceof @variable v1 @type ^`kotlin.t.j.a.c` @kind boolean;
  #L1d92ee.  if v0 != 0 then goto L1d92f6;
  #L1d92f2.  v0:= 0I;
  #L1d92f4.  goto L1d92f8;
  #L1d92f6.  v0:= v1 @kind object;
  #L1d92f8.  v0:= (`kotlin.t.j.a.c`) v0 @kind object;
  #L1d92fc.  if v0 == 0 then goto L1d930e;
  #L1d9300.  call temp:= `intercepted`(v0) @signature `Lkotlin/t/j/a/c;.intercepted:()Lkotlin/t/d;` @kind virtual;
  #L1d9306.  v0:= temp @kind object;
  #L1d9308.  if v0 == 0 then goto L1d930e;
  #L1d930c.  v1:= v0 @kind object;
  #L1d930e.  return v1 @kind object;
}
