record `kotlin.t.a` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlin.t.g$b` @kind interface {
  `kotlin.t.g$c` `kotlin.t.a.key` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.t.a` v1 @kind this, `kotlin.t.g$c` v2 @kind object) @signature `Lkotlin/t/a;.<init>:(Lkotlin/t/g$c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1d85ec.  v0:= "key" @kind object;
  #L1d85f0.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d85f6.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d85fc.  v1.`kotlin.t.a.key` @type ^`kotlin.t.g$c` := v2 @kind object;
  #L1d8600.  return @kind void;
}
procedure `java.lang.Object` `fold`(`kotlin.t.a` v1 @kind this, `java.lang.Object` v2 @kind object, `kotlin.v.b.p` v3 @kind object) @signature `Lkotlin/t/a;.fold:(Ljava/lang/Object;Lkotlin/v/b/p;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d8544.  v0:= "operation" @kind object;
  #L1d8548.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d854e.  call temp:= `fold`(v1, v2, v3) @signature `Lkotlin/t/g$b$a;.fold:(Lkotlin/t/g$b;Ljava/lang/Object;Lkotlin/v/b/p;)Ljava/lang/Object;` @kind static;
  #L1d8554.  v2:= temp @kind object;
  #L1d8556.  return v2 @kind object;
}
procedure `kotlin.t.g$b` `get`(`kotlin.t.a` v1 @kind this, `kotlin.t.g$c` v2 @kind object) @signature `Lkotlin/t/a;.get:(Lkotlin/t/g$c;)Lkotlin/t/g$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d85b0.  v0:= "key" @kind object;
  #L1d85b4.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d85ba.  call temp:= `get`(v1, v2) @signature `Lkotlin/t/g$b$a;.get:(Lkotlin/t/g$b;Lkotlin/t/g$c;)Lkotlin/t/g$b;` @kind static;
  #L1d85c0.  v2:= temp @kind object;
  #L1d85c2.  return v2 @kind object;
}
procedure `kotlin.t.g$c` `getKey`(`kotlin.t.a` v1 @kind this) @signature `Lkotlin/t/a;.getKey:()Lkotlin/t/g$c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d85d4.  v0:= v1.`kotlin.t.a.key` @type ^`kotlin.t.g$c` @kind object;
  #L1d85d8.  return v0 @kind object;
}
procedure `kotlin.t.g` `minusKey`(`kotlin.t.a` v1 @kind this, `kotlin.t.g$c` v2 @kind object) @signature `Lkotlin/t/a;.minusKey:(Lkotlin/t/g$c;)Lkotlin/t/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d8568.  v0:= "key" @kind object;
  #L1d856c.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d8572.  call temp:= `minusKey`(v1, v2) @signature `Lkotlin/t/g$b$a;.minusKey:(Lkotlin/t/g$b;Lkotlin/t/g$c;)Lkotlin/t/g;` @kind static;
  #L1d8578.  v2:= temp @kind object;
  #L1d857a.  return v2 @kind object;
}
procedure `kotlin.t.g` `plus`(`kotlin.t.a` v1 @kind this, `kotlin.t.g` v2 @kind object) @signature `Lkotlin/t/a;.plus:(Lkotlin/t/g;)Lkotlin/t/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d858c.  v0:= "context" @kind object;
  #L1d8590.  call `checkNotNullParameter`(v2, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d8596.  call temp:= `plus`(v1, v2) @signature `Lkotlin/t/g$b$a;.plus:(Lkotlin/t/g$b;Lkotlin/t/g;)Lkotlin/t/g;` @kind static;
  #L1d859c.  v2:= temp @kind object;
  #L1d859e.  return v2 @kind object;
}
