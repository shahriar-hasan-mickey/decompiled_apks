record `kotlin.i` @kind class @AccessFlag  {
}
procedure `kotlin.g` `lazy`(`kotlin.v.b.a` v3 @kind object) @signature `Lkotlin/i;.lazy:(Lkotlin/v/b/a;)Lkotlin/g;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1d4a54.  v0:= "initializer" @kind object;
  #L1d4a58.  call `checkNotNullParameter`(v3, v0) @signature `Lkotlin/v/c/i;.checkNotNullParameter:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L1d4a5e.  v0:= new `kotlin.n`;
  #L1d4a62.  v1:= 0I;
  #L1d4a64.  v2:= 2I;
  #L1d4a66.  call `<init>`(v0, v3, v1, v2, v1) @signature `Lkotlin/n;.<init>:(Lkotlin/v/b/a;Ljava/lang/Object;ILkotlin/v/c/f;)V` @kind direct;
  #L1d4a6c.  return v0 @kind object;
}
