record `e.a.a.c.c.g.d` @kind class @AccessFlag FINAL {
  `java.util.concurrent.ConcurrentHashMap` `e.a.a.c.c.g.d.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.ref.ReferenceQueue` `e.a.a.c.c.g.d.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.a.a.c.c.g.d` v4 @kind this) @signature `Le/a/a/c/c/g/d;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L34506c.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L345072.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L345076.  v1:= 16I;
  #L34507a.  v2:= 0.75F;
  #L34507e.  v3:= 10I;
  #L345082.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:(IFI)V` @kind direct;
  #L345088.  v4.`e.a.a.c.c.g.d.a` @type ^`java.util.concurrent.ConcurrentHashMap` := v0 @kind object;
  #L34508c.  v0:= new `java.lang.ref.ReferenceQueue`;
  #L345090.  call `<init>`(v0) @signature `Ljava/lang/ref/ReferenceQueue;.<init>:()V` @kind direct;
  #L345096.  v4.`e.a.a.c.c.g.d.b` @type ^`java.lang.ref.ReferenceQueue` := v0 @kind object;
  #L34509a.  return @kind void;
}
procedure `java.util.List` `zza`(`e.a.a.c.c.g.d` v3 @kind this, `java.lang.Throwable` v4 @kind object, `boolean` v5 ) @signature `Le/a/a/c/c/g/d;.zza:(Ljava/lang/Throwable;Z)Ljava/util/List;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L344fe0.  v5:= v3.`e.a.a.c.c.g.d.b` @type ^`java.lang.ref.ReferenceQueue` @kind object;
  #L344fe4.  call temp:= `poll`(v5) @signature `Ljava/lang/ref/ReferenceQueue;.poll:()Ljava/lang/ref/Reference;` @kind virtual;
  #L344fea.  v5:= temp @kind object;
  #L344fec.  if v5 == 0 then goto L345008;
  #L344ff0.  v0:= v3.`e.a.a.c.c.g.d.a` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L344ff4.  call temp:= `remove`(v0, v5) @signature `Ljava/util/concurrent/ConcurrentHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L344ffa.  v5:= v3.`e.a.a.c.c.g.d.b` @type ^`java.lang.ref.ReferenceQueue` @kind object;
  #L344ffe.  call temp:= `poll`(v5) @signature `Ljava/lang/ref/ReferenceQueue;.poll:()Ljava/lang/ref/Reference;` @kind virtual;
  #L345004.  v5:= temp @kind object;
  #L345006.  goto L344fec;
  #L345008.  v5:= new `e.a.a.c.c.g.e`;
  #L34500c.  v0:= 0I;
  #L34500e.  call `<init>`(v5, v4, v0) @signature `Le/a/a/c/c/g/e;.<init>:(Ljava/lang/Throwable;Ljava/lang/ref/ReferenceQueue;)V` @kind direct;
  #L345014.  v0:= v3.`e.a.a.c.c.g.d.a` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L345018.  call temp:= `get`(v0, v5) @signature `Ljava/util/concurrent/ConcurrentHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L34501e.  v5:= temp @kind object;
  #L345020.  v5:= (`java.util.List`) v5 @kind object;
  #L345024.  if v5 == 0 then goto L34502a;
  #L345028.  return v5 @kind object;
  #L34502a.  v5:= new `java.util.Vector`;
  #L34502e.  v0:= 2I;
  #L345030.  call `<init>`(v5, v0) @signature `Ljava/util/Vector;.<init>:(I)V` @kind direct;
  #L345036.  v0:= v3.`e.a.a.c.c.g.d.a` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L34503a.  v1:= new `e.a.a.c.c.g.e`;
  #L34503e.  v2:= v3.`e.a.a.c.c.g.d.b` @type ^`java.lang.ref.ReferenceQueue` @kind object;
  #L345042.  call `<init>`(v1, v4, v2) @signature `Le/a/a/c/c/g/e;.<init>:(Ljava/lang/Throwable;Ljava/lang/ref/ReferenceQueue;)V` @kind direct;
  #L345048.  call temp:= `putIfAbsent`(v0, v1, v5) @signature `Ljava/util/concurrent/ConcurrentHashMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L34504e.  v4:= temp @kind object;
  #L345050.  v4:= (`java.util.List`) v4 @kind object;
  #L345054.  if v4 != 0 then goto L34505a;
  #L345058.  return v5 @kind object;
  #L34505a.  return v4 @kind object;
}
