record `e.a.a.c.c.h.d` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `zza`(`java.util.concurrent.Callable` v2 @kind object) @signature `Le/a/a/c/c/h/d;.zza:(Ljava/util/concurrent/Callable;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L39a1bc.  call temp:= `getThreadPolicy`() @signature `Landroid/os/StrictMode;.getThreadPolicy:()Landroid/os/StrictMode$ThreadPolicy;` @kind static;
  #L39a1c2.  v0:= temp @kind object;
  #L39a1c4.  v1:= `@@android.os.StrictMode$ThreadPolicy.LAX` @type ^`android.os.StrictMode$ThreadPolicy` @kind object;
  #L39a1c8.  call `setThreadPolicy`(v1) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L39a1ce.  call temp:= `call`(v2) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L39a1d4.  v2:= temp @kind object;
  #L39a1d6.  call `setThreadPolicy`(v0) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L39a1dc.  return v2 @kind object;
  #L39a1de.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L39a1e0.  call `setThreadPolicy`(v0) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L39a1e6.  throw v2;
  catch `java.lang.Throwable` @[L39a1c4..L39a1d6] goto L39a1de;
}
