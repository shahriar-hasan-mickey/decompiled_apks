record `e.a.a.c.c.g.e` @kind class @AccessFlag FINAL extends `java.lang.ref.WeakReference` @kind class {
  `int` `e.a.a.c.c.g.e.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.a.a.c.c.g.e` v0 @kind this, `java.lang.Throwable` v1 @kind object, `java.lang.ref.ReferenceQueue` v2 @kind object) @signature `Le/a/a/c/c/g/e;.<init>:(Ljava/lang/Throwable;Ljava/lang/ref/ReferenceQueue;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L34511c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V` @kind direct;
  #L345122.  if v1 == 0 then goto L345134;
  #L345126.  call temp:= `identityHashCode`(v1) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L34512c.  v1:= temp;
  #L34512e.  v0.`e.a.a.c.c.g.e.a` @type ^`int` := v1;
  #L345132.  return @kind void;
  #L345134.  v1:= new `java.lang.NullPointerException`;
  #L345138.  v2:= "The referent cannot be null" @kind object;
  #L34513c.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L345142.  throw v1;
}
procedure `boolean` `equals`(`e.a.a.c.c.g.e` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le/a/a/c/c/g/e;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3450ac.  v0:= 0I;
  #L3450ae.  if v5 == 0 then goto L3450f2;
  #L3450b2.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3450b8.  v1:= temp @kind object;
  #L3450ba.  v2:= constclass @type ^`e.a.a.c.c.g.e` @kind object;
  #L3450be.  if v1 == v2 then goto L3450c4;
  #L3450c2.  goto L3450f2;
  #L3450c4.  v1:= 1I;
  #L3450c6.  if v4 != v5 then goto L3450cc;
  #L3450ca.  return v1;
  #L3450cc.  v5:= (`e.a.a.c.c.g.e`) v5 @kind object;
  #L3450d0.  v2:= v4.`e.a.a.c.c.g.e.a` @type ^`int`;
  #L3450d4.  v3:= v5.`e.a.a.c.c.g.e.a` @type ^`int`;
  #L3450d8.  if v2 != v3 then goto L3450f2;
  #L3450dc.  call temp:= `get`(v4) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3450e2.  v2:= temp @kind object;
  #L3450e4.  call temp:= `get`(v5) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3450ea.  v5:= temp @kind object;
  #L3450ec.  if v2 != v5 then goto L3450f2;
  #L3450f0.  return v1;
  #L3450f2.  return v0;
}
procedure `int` `hashCode`(`e.a.a.c.c.g.e` v1 @kind this) @signature `Le/a/a/c/c/g/e;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L345104.  v0:= v1.`e.a.a.c.c.g.e.a` @type ^`int`;
  #L345108.  return v0;
}
