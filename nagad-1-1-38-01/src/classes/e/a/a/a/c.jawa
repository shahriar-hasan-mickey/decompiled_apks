record `e.a.a.a.c` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<clinit>`() @signature `Le/a/a/a/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2f77e0.  v0:= constclass @type ^`e.a.a.a.c` @kind object;
  #L2f77e4.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L2f77ea.  return @kind void;
}
procedure `void` `<init>`(`e.a.a.a.c` v0 @kind this) @signature `Le/a/a/a/c;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2f77fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f7802.  return @kind void;
}
procedure `android.os.Parcelable` `a`(`android.os.Parcel` v1 @kind object, `android.os.Parcelable$Creator` v2 @kind object) @signature `Le/a/a/a/c;.a:(Landroid/os/Parcel;Landroid/os/Parcelable$Creator;)Landroid/os/Parcelable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2f77b0.  call temp:= `readInt`(v1) @signature `Landroid/os/Parcel;.readInt:()I` @kind virtual;
  #L2f77b6.  v0:= temp;
  #L2f77b8.  if v0 != 0 then goto L2f77c0;
  #L2f77bc.  v1:= 0I;
  #L2f77be.  return v1 @kind object;
  #L2f77c0.  call temp:= `createFromParcel`(v2, v1) @signature `Landroid/os/Parcelable$Creator;.createFromParcel:(Landroid/os/Parcel;)Ljava/lang/Object;` @kind interface;
  #L2f77c6.  v1:= temp @kind object;
  #L2f77c8.  v1:= (`android.os.Parcelable`) v1 @kind object;
  #L2f77cc.  return v1 @kind object;
}
procedure `void` `b`(`android.os.Parcel` v1 @kind object, `android.os.Parcelable` v2 @kind object) @signature `Le/a/a/a/c;.b:(Landroid/os/Parcel;Landroid/os/Parcelable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2f7814.  v0:= 1I;
  #L2f7816.  call `writeInt`(v1, v0) @signature `Landroid/os/Parcel;.writeInt:(I)V` @kind virtual;
  #L2f781c.  v0:= 0I;
  #L2f781e.  call `writeToParcel`(v2, v1, v0) @signature `Landroid/os/Parcelable;.writeToParcel:(Landroid/os/Parcel;I)V` @kind interface;
  #L2f7824.  return @kind void;
}
