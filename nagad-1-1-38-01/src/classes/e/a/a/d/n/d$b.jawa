record `e.a.a.d.n.d$b` @kind class @AccessFlag PUBLIC extends `android.animation.TypeEvaluator` @kind interface {
  `e.a.a.d.n.d$e` `e.a.a.d.n.d$b.a` @AccessFlag PRIVATE_FINAL;
}
global `android.animation.TypeEvaluator` `@@e.a.a.d.n.d$b.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/a/a/d/n/d$b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L42f2b4.  v0:= new `e.a.a.d.n.d$b`;
  #L42f2b8.  call `<init>`(v0) @signature `Le/a/a/d/n/d$b;.<init>:()V` @kind direct;
  #L42f2be.  `@@e.a.a.d.n.d$b.b` @type ^`android.animation.TypeEvaluator` := v0 @kind object;
  #L42f2c2.  return @kind void;
}
procedure `void` `<init>`(`e.a.a.d.n.d$b` v2 @kind this) @signature `Le/a/a/d/n/d$b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L42f2d4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42f2da.  v0:= new `e.a.a.d.n.d$e`;
  #L42f2de.  v1:= 0I;
  #L42f2e0.  call `<init>`(v0, v1) @signature `Le/a/a/d/n/d$e;.<init>:(Le/a/a/d/n/d$a;)V` @kind direct;
  #L42f2e6.  v2.`e.a.a.d.n.d$b.a` @type ^`e.a.a.d.n.d$e` := v0 @kind object;
  #L42f2ea.  return @kind void;
}
procedure `e.a.a.d.n.d$e` `evaluate`(`e.a.a.d.n.d$b` v4 @kind this, `float` v5 , `e.a.a.d.n.d$e` v6 @kind object, `e.a.a.d.n.d$e` v7 @kind object) @signature `Le/a/a/d/n/d$b;.evaluate:(FLe/a/a/d/n/d$e;Le/a/a/d/n/d$e;)Le/a/a/d/n/d$e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L42f240.  v0:= v4.`e.a.a.d.n.d$b.a` @type ^`e.a.a.d.n.d$e` @kind object;
  #L42f244.  v1:= v6.`e.a.a.d.n.d$e.a` @type ^`float`;
  #L42f248.  v2:= v7.`e.a.a.d.n.d$e.a` @type ^`float`;
  #L42f24c.  call temp:= `lerp`(v1, v2, v5) @signature `Le/a/a/d/p/a;.lerp:(FFF)F` @kind static;
  #L42f252.  v1:= temp;
  #L42f254.  v2:= v6.`e.a.a.d.n.d$e.b` @type ^`float`;
  #L42f258.  v3:= v7.`e.a.a.d.n.d$e.b` @type ^`float`;
  #L42f25c.  call temp:= `lerp`(v2, v3, v5) @signature `Le/a/a/d/p/a;.lerp:(FFF)F` @kind static;
  #L42f262.  v2:= temp;
  #L42f264.  v6:= v6.`e.a.a.d.n.d$e.c` @type ^`float`;
  #L42f268.  v7:= v7.`e.a.a.d.n.d$e.c` @type ^`float`;
  #L42f26c.  call temp:= `lerp`(v6, v7, v5) @signature `Le/a/a/d/p/a;.lerp:(FFF)F` @kind static;
  #L42f272.  v5:= temp;
  #L42f274.  call `set`(v0, v1, v2, v5) @signature `Le/a/a/d/n/d$e;.set:(FFF)V` @kind virtual;
  #L42f27a.  v5:= v4.`e.a.a.d.n.d$b.a` @type ^`e.a.a.d.n.d$e` @kind object;
  #L42f27e.  return v5 @kind object;
}
procedure `java.lang.Object` `evaluate`(`e.a.a.d.n.d$b` v0 @kind this, `float` v1 , `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Le/a/a/d/n/d$b;.evaluate:(FLjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L42f290.  v2:= (`e.a.a.d.n.d$e`) v2 @kind object;
  #L42f294.  v3:= (`e.a.a.d.n.d$e`) v3 @kind object;
  #L42f298.  call temp:= `evaluate`(v0, v1, v2, v3) @signature `Le/a/a/d/n/d$b;.evaluate:(FLe/a/a/d/n/d$e;Le/a/a/d/n/d$e;)Le/a/a/d/n/d$e;` @kind virtual;
  #L42f29e.  v1:= temp @kind object;
  #L42f2a0.  return v1 @kind object;
}
