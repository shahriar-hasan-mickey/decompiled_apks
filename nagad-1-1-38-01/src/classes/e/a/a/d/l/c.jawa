record `e.a.a.d.l.c` @kind class @AccessFlag PUBLIC extends `android.animation.TypeEvaluator` @kind interface {
}
global `e.a.a.d.l.c` `@@e.a.a.d.l.c.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/a/a/d/l/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L423da8.  v0:= new `e.a.a.d.l.c`;
  #L423dac.  call `<init>`(v0) @signature `Le/a/a/d/l/c;.<init>:()V` @kind direct;
  #L423db2.  `@@e.a.a.d.l.c.a` @type ^`e.a.a.d.l.c` := v0 @kind object;
  #L423db6.  return @kind void;
}
procedure `void` `<init>`(`e.a.a.d.l.c` v0 @kind this) @signature `Le/a/a/d/l/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L423dc8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L423dce.  return @kind void;
}
procedure `e.a.a.d.l.c` `getInstance`() @signature `Le/a/a/d/l/c;.getInstance:()Le/a/a/d/l/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L423c04.  v0:= `@@e.a.a.d.l.c.a` @type ^`e.a.a.d.l.c` @kind object;
  #L423c08.  return v0 @kind object;
}
procedure `java.lang.Integer` `evaluate`(`e.a.a.d.l.c` v11 @kind this, `float` v12 , `java.lang.Integer` v13 @kind object, `java.lang.Integer` v14 @kind object) @signature `Le/a/a/d/l/c;.evaluate:(FLjava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L423c1c.  call temp:= `intValue`(v13) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L423c22.  v13:= temp;
  #L423c24.  v0:= v13 ^> 24;
  #L423c28.  v0:= v0 ^& 255;
  #L423c2c.  v0:= (`float`) v0 @kind i2f;
  #L423c2e.  v1:= 255.0F;
  #L423c32.  v0:= v0 / v1 @kind float;
  #L423c34.  v2:= v13 ^> 16;
  #L423c38.  v2:= v2 ^& 255;
  #L423c3c.  v2:= (`float`) v2 @kind i2f;
  #L423c3e.  v2:= v2 / v1 @kind float;
  #L423c40.  v3:= v13 ^> 8;
  #L423c44.  v3:= v3 ^& 255;
  #L423c48.  v3:= (`float`) v3 @kind i2f;
  #L423c4a.  v3:= v3 / v1 @kind float;
  #L423c4c.  v13:= v13 ^& 255;
  #L423c50.  v13:= (`float`) v13 @kind i2f;
  #L423c52.  v13:= v13 / v1 @kind float;
  #L423c54.  call temp:= `intValue`(v14) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L423c5a.  v14:= temp;
  #L423c5c.  v4:= v14 ^> 24;
  #L423c60.  v4:= v4 ^& 255;
  #L423c64.  v4:= (`float`) v4 @kind i2f;
  #L423c66.  v4:= v4 / v1 @kind float;
  #L423c68.  v5:= v14 ^> 16;
  #L423c6c.  v5:= v5 ^& 255;
  #L423c70.  v5:= (`float`) v5 @kind i2f;
  #L423c72.  v5:= v5 / v1 @kind float;
  #L423c74.  v6:= v14 ^> 8;
  #L423c78.  v6:= v6 ^& 255;
  #L423c7c.  v6:= (`float`) v6 @kind i2f;
  #L423c7e.  v6:= v6 / v1 @kind float;
  #L423c80.  v14:= v14 ^& 255;
  #L423c84.  v14:= (`float`) v14 @kind i2f;
  #L423c86.  v14:= v14 / v1 @kind float;
  #L423c88.  v7:= (`double`) v2 @kind f2d;
  #L423c8a.  v9:= 2.2D;
  #L423c94.  call temp:= `pow`(v7, v9) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L423c9a.  v7:= temp @kind wide;
  #L423c9c.  v2:= (`float`) v7 @kind d2f;
  #L423c9e.  v7:= (`double`) v3 @kind f2d;
  #L423ca0.  call temp:= `pow`(v7, v9) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L423ca6.  v7:= temp @kind wide;
  #L423ca8.  v3:= (`float`) v7 @kind d2f;
  #L423caa.  v7:= (`double`) v13 @kind f2d;
  #L423cac.  call temp:= `pow`(v7, v9) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L423cb2.  v7:= temp @kind wide;
  #L423cb4.  v13:= (`float`) v7 @kind d2f;
  #L423cb6.  v7:= (`double`) v5 @kind f2d;
  #L423cb8.  call temp:= `pow`(v7, v9) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L423cbe.  v7:= temp @kind wide;
  #L423cc0.  v5:= (`float`) v7 @kind d2f;
  #L423cc2.  v6:= (`double`) v6 @kind f2d;
  #L423cc4.  call temp:= `pow`(v6, v9) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L423cca.  v6:= temp @kind wide;
  #L423ccc.  v6:= (`float`) v6 @kind d2f;
  #L423cce.  v7:= (`double`) v14 @kind f2d;
  #L423cd0.  call temp:= `pow`(v7, v9) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L423cd6.  v7:= temp @kind wide;
  #L423cd8.  v14:= (`float`) v7 @kind d2f;
  #L423cda.  v4:= v4 - v0 @kind float;
  #L423cdc.  v4:= v4 * v12 @kind float;
  #L423ce0.  v0:= v0 + v4 @kind float;
  #L423ce2.  v5:= v5 - v2 @kind float;
  #L423ce4.  v5:= v5 * v12 @kind float;
  #L423ce8.  v2:= v2 + v5 @kind float;
  #L423cea.  v6:= v6 - v3 @kind float;
  #L423cec.  v6:= v6 * v12 @kind float;
  #L423cf0.  v3:= v3 + v6 @kind float;
  #L423cf2.  v14:= v14 - v13 @kind float;
  #L423cf4.  v12:= v12 * v14 @kind float;
  #L423cf8.  v13:= v13 + v12 @kind float;
  #L423cfa.  v0:= v0 * v1 @kind float;
  #L423cfe.  v4:= (`double`) v2 @kind f2d;
  #L423d00.  v6:= 0.45454545454545453D;
  #L423d0a.  call temp:= `pow`(v4, v6) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L423d10.  v4:= temp @kind wide;
  #L423d12.  v12:= (`float`) v4 @kind d2f;
  #L423d14.  v12:= v12 * v1 @kind float;
  #L423d18.  v2:= (`double`) v3 @kind f2d;
  #L423d1a.  call temp:= `pow`(v2, v6) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L423d20.  v2:= temp @kind wide;
  #L423d22.  v14:= (`float`) v2 @kind d2f;
  #L423d24.  v14:= v14 * v1 @kind float;
  #L423d28.  v2:= (`double`) v13 @kind f2d;
  #L423d2a.  call temp:= `pow`(v2, v6) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L423d30.  v2:= temp @kind wide;
  #L423d32.  v13:= (`float`) v2 @kind d2f;
  #L423d34.  v13:= v13 * v1 @kind float;
  #L423d38.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L423d3e.  v0:= temp;
  #L423d40.  v0:= v0 ^< 24;
  #L423d44.  call temp:= `round`(v12) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L423d4a.  v12:= temp;
  #L423d4c.  v12:= v12 ^< 16;
  #L423d50.  v12:= v12 ^| v0 @kind int;
  #L423d52.  call temp:= `round`(v14) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L423d58.  v14:= temp;
  #L423d5a.  v14:= v14 ^< 8;
  #L423d5e.  v12:= v12 ^| v14 @kind int;
  #L423d60.  call temp:= `round`(v13) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L423d66.  v13:= temp;
  #L423d68.  v12:= v12 ^| v13 @kind int;
  #L423d6a.  call temp:= `valueOf`(v12) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L423d70.  v12:= temp @kind object;
  #L423d72.  return v12 @kind object;
}
procedure `java.lang.Object` `evaluate`(`e.a.a.d.l.c` v0 @kind this, `float` v1 , `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Le/a/a/d/l/c;.evaluate:(FLjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L423d84.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L423d88.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L423d8c.  call temp:= `evaluate`(v0, v1, v2, v3) @signature `Le/a/a/d/l/c;.evaluate:(FLjava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;` @kind virtual;
  #L423d92.  v1:= temp @kind object;
  #L423d94.  return v1 @kind object;
}
