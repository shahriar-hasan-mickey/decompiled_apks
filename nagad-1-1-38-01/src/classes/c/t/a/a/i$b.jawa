record `c.t.a.a.i$b` @kind class @AccessFlag  extends `c.t.a.a.i$f` @kind class {
}
procedure `void` `<init>`(`c.t.a.a.i$b` v0 @kind this) @signature `Lc/t/a/a/i$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2565c8.  call `<init>`(v0) @signature `Lc/t/a/a/i$f;.<init>:()V` @kind direct;
  #L2565ce.  return @kind void;
}
procedure `void` `<init>`(`c.t.a.a.i$b` v0 @kind this, `c.t.a.a.i$b` v1 @kind object) @signature `Lc/t/a/a/i$b;.<init>:(Lc/t/a/a/i$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2565e0.  call `<init>`(v0, v1) @signature `Lc/t/a/a/i$f;.<init>:(Lc/t/a/a/i$f;)V` @kind direct;
  #L2565e6.  return @kind void;
}
procedure `void` `a`(`c.t.a.a.i$b` v3 @kind this, `android.content.res.TypedArray` v4 @kind object, `org.xmlpull.v1.XmlPullParser` v5 @kind object) @signature `Lc/t/a/a/i$b;.a:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L256634.  v0:= 0I;
  #L256636.  call temp:= `getString`(v4, v0) @signature `Landroid/content/res/TypedArray;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L25663c.  v1:= temp @kind object;
  #L25663e.  if v1 == 0 then goto L256646;
  #L256642.  v3.`c.t.a.a.i$f.b` @type ^`java.lang.String` := v1 @kind object;
  #L256646.  v1:= 1I;
  #L256648.  call temp:= `getString`(v4, v1) @signature `Landroid/content/res/TypedArray;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L25664e.  v1:= temp @kind object;
  #L256650.  if v1 == 0 then goto L256660;
  #L256654.  call temp:= `createNodesFromPathData`(v1) @signature `Lc/h/d/c;.createNodesFromPathData:(Ljava/lang/String;)[Lc/h/d/c$b;` @kind static;
  #L25665a.  v1:= temp @kind object;
  #L25665c.  v3.`c.t.a.a.i$f.a` @type ^`c.h.d.c$b`[] := v1 @kind object;
  #L256660.  v1:= 2I;
  #L256662.  v2:= "fillType" @kind object;
  #L256666.  call temp:= `getNamedInt`(v4, v5, v2, v1, v0) @signature `Landroidx/core/content/c/g;.getNamedInt:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;II)I` @kind static;
  #L25666c.  v4:= temp;
  #L25666e.  v3.`c.t.a.a.i$f.c` @type ^`int` := v4;
  #L256672.  return @kind void;
}
procedure `void` `inflate`(`c.t.a.a.i$b` v1 @kind this, `android.content.res.Resources` v2 @kind object, `android.util.AttributeSet` v3 @kind object, `android.content.res.Resources$Theme` v4 @kind object, `org.xmlpull.v1.XmlPullParser` v5 @kind object) @signature `Lc/t/a/a/i$b;.inflate:(Landroid/content/res/Resources;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2565f8.  v0:= "pathData" @kind object;
  #L2565fc.  call temp:= `hasAttribute`(v5, v0) @signature `Landroidx/core/content/c/g;.hasAttribute:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z` @kind static;
  #L256602.  v0:= temp;
  #L256604.  if v0 != 0 then goto L25660a;
  #L256608.  return @kind void;
  #L25660a.  v0:= `@@c.t.a.a.a.d` @type ^`int`[] @kind object;
  #L25660e.  call temp:= `obtainAttributes`(v2, v4, v3, v0) @signature `Landroidx/core/content/c/g;.obtainAttributes:(Landroid/content/res/Resources;Landroid/content/res/Resources$Theme;Landroid/util/AttributeSet;[I)Landroid/content/res/TypedArray;` @kind static;
  #L256614.  v2:= temp @kind object;
  #L256616.  call `a`(v1, v2, v5) @signature `Lc/t/a/a/i$b;.a:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;)V` @kind direct;
  #L25661c.  call `recycle`(v2) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L256622.  return @kind void;
}
procedure `boolean` `isClipPath`(`c.t.a.a.i$b` v1 @kind this) @signature `Lc/t/a/a/i$b;.isClipPath:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2565b4.  v0:= 1I;
  #L2565b6.  return v0;
}
