record `c.t.a.a.i$c` @kind class @AccessFlag  extends `c.t.a.a.i$f` @kind class {
  `int`[] `c.t.a.a.i$c.e` @AccessFlag PRIVATE;
  `androidx.core.content.c.b` `c.t.a.a.i$c.f` @AccessFlag ;
  `float` `c.t.a.a.i$c.g` @AccessFlag ;
  `androidx.core.content.c.b` `c.t.a.a.i$c.h` @AccessFlag ;
  `float` `c.t.a.a.i$c.i` @AccessFlag ;
  `float` `c.t.a.a.i$c.j` @AccessFlag ;
  `float` `c.t.a.a.i$c.k` @AccessFlag ;
  `float` `c.t.a.a.i$c.l` @AccessFlag ;
  `float` `c.t.a.a.i$c.m` @AccessFlag ;
  `android.graphics.Paint$Cap` `c.t.a.a.i$c.n` @AccessFlag ;
  `android.graphics.Paint$Join` `c.t.a.a.i$c.o` @AccessFlag ;
  `float` `c.t.a.a.i$c.p` @AccessFlag ;
}
procedure `void` `<init>`(`c.t.a.a.i$c` v2 @kind this) @signature `Lc/t/a/a/i$c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L256824.  call `<init>`(v2) @signature `Lc/t/a/a/i$f;.<init>:()V` @kind direct;
  #L25682a.  v0:= 0I;
  #L25682c.  v2.`c.t.a.a.i$c.g` @type ^`float` := v0;
  #L256830.  v1:= 1.0F;
  #L256834.  v2.`c.t.a.a.i$c.i` @type ^`float` := v1;
  #L256838.  v2.`c.t.a.a.i$c.j` @type ^`float` := v1;
  #L25683c.  v2.`c.t.a.a.i$c.k` @type ^`float` := v0;
  #L256840.  v2.`c.t.a.a.i$c.l` @type ^`float` := v1;
  #L256844.  v2.`c.t.a.a.i$c.m` @type ^`float` := v0;
  #L256848.  v0:= `@@android.graphics.Paint$Cap.BUTT` @type ^`android.graphics.Paint$Cap` @kind object;
  #L25684c.  v2.`c.t.a.a.i$c.n` @type ^`android.graphics.Paint$Cap` := v0 @kind object;
  #L256850.  v0:= `@@android.graphics.Paint$Join.MITER` @type ^`android.graphics.Paint$Join` @kind object;
  #L256854.  v2.`c.t.a.a.i$c.o` @type ^`android.graphics.Paint$Join` := v0 @kind object;
  #L256858.  v0:= 4.0F;
  #L25685c.  v2.`c.t.a.a.i$c.p` @type ^`float` := v0;
  #L256860.  return @kind void;
}
procedure `void` `<init>`(`c.t.a.a.i$c` v2 @kind this, `c.t.a.a.i$c` v3 @kind object) @signature `Lc/t/a/a/i$c;.<init>:(Lc/t/a/a/i$c;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L256874.  call `<init>`(v2, v3) @signature `Lc/t/a/a/i$f;.<init>:(Lc/t/a/a/i$f;)V` @kind direct;
  #L25687a.  v0:= 0I;
  #L25687c.  v2.`c.t.a.a.i$c.g` @type ^`float` := v0;
  #L256880.  v1:= 1.0F;
  #L256884.  v2.`c.t.a.a.i$c.i` @type ^`float` := v1;
  #L256888.  v2.`c.t.a.a.i$c.j` @type ^`float` := v1;
  #L25688c.  v2.`c.t.a.a.i$c.k` @type ^`float` := v0;
  #L256890.  v2.`c.t.a.a.i$c.l` @type ^`float` := v1;
  #L256894.  v2.`c.t.a.a.i$c.m` @type ^`float` := v0;
  #L256898.  v0:= `@@android.graphics.Paint$Cap.BUTT` @type ^`android.graphics.Paint$Cap` @kind object;
  #L25689c.  v2.`c.t.a.a.i$c.n` @type ^`android.graphics.Paint$Cap` := v0 @kind object;
  #L2568a0.  v0:= `@@android.graphics.Paint$Join.MITER` @type ^`android.graphics.Paint$Join` @kind object;
  #L2568a4.  v2.`c.t.a.a.i$c.o` @type ^`android.graphics.Paint$Join` := v0 @kind object;
  #L2568a8.  v0:= 4.0F;
  #L2568ac.  v2.`c.t.a.a.i$c.p` @type ^`float` := v0;
  #L2568b0.  v0:= v3.`c.t.a.a.i$c.e` @type ^`int`[] @kind object;
  #L2568b4.  v2.`c.t.a.a.i$c.e` @type ^`int`[] := v0 @kind object;
  #L2568b8.  v0:= v3.`c.t.a.a.i$c.f` @type ^`androidx.core.content.c.b` @kind object;
  #L2568bc.  v2.`c.t.a.a.i$c.f` @type ^`androidx.core.content.c.b` := v0 @kind object;
  #L2568c0.  v0:= v3.`c.t.a.a.i$c.g` @type ^`float`;
  #L2568c4.  v2.`c.t.a.a.i$c.g` @type ^`float` := v0;
  #L2568c8.  v0:= v3.`c.t.a.a.i$c.i` @type ^`float`;
  #L2568cc.  v2.`c.t.a.a.i$c.i` @type ^`float` := v0;
  #L2568d0.  v0:= v3.`c.t.a.a.i$c.h` @type ^`androidx.core.content.c.b` @kind object;
  #L2568d4.  v2.`c.t.a.a.i$c.h` @type ^`androidx.core.content.c.b` := v0 @kind object;
  #L2568d8.  v0:= v3.`c.t.a.a.i$f.c` @type ^`int`;
  #L2568dc.  v2.`c.t.a.a.i$f.c` @type ^`int` := v0;
  #L2568e0.  v0:= v3.`c.t.a.a.i$c.j` @type ^`float`;
  #L2568e4.  v2.`c.t.a.a.i$c.j` @type ^`float` := v0;
  #L2568e8.  v0:= v3.`c.t.a.a.i$c.k` @type ^`float`;
  #L2568ec.  v2.`c.t.a.a.i$c.k` @type ^`float` := v0;
  #L2568f0.  v0:= v3.`c.t.a.a.i$c.l` @type ^`float`;
  #L2568f4.  v2.`c.t.a.a.i$c.l` @type ^`float` := v0;
  #L2568f8.  v0:= v3.`c.t.a.a.i$c.m` @type ^`float`;
  #L2568fc.  v2.`c.t.a.a.i$c.m` @type ^`float` := v0;
  #L256900.  v0:= v3.`c.t.a.a.i$c.n` @type ^`android.graphics.Paint$Cap` @kind object;
  #L256904.  v2.`c.t.a.a.i$c.n` @type ^`android.graphics.Paint$Cap` := v0 @kind object;
  #L256908.  v0:= v3.`c.t.a.a.i$c.o` @type ^`android.graphics.Paint$Join` @kind object;
  #L25690c.  v2.`c.t.a.a.i$c.o` @type ^`android.graphics.Paint$Join` := v0 @kind object;
  #L256910.  v3:= v3.`c.t.a.a.i$c.p` @type ^`float`;
  #L256914.  v2.`c.t.a.a.i$c.p` @type ^`float` := v3;
  #L256918.  return @kind void;
}
procedure `android.graphics.Paint$Cap` `a`(`c.t.a.a.i$c` v1 @kind this, `int` v2 , `android.graphics.Paint$Cap` v3 @kind object) @signature `Lc/t/a/a/i$c;.a:(ILandroid/graphics/Paint$Cap;)Landroid/graphics/Paint$Cap;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L256684.  if v2 == 0 then goto L2566a2;
  #L256688.  v0:= 1I;
  #L25668a.  if v2 == v0 then goto L25669c;
  #L25668e.  v0:= 2I;
  #L256690.  if v2 == v0 then goto L256696;
  #L256694.  return v3 @kind object;
  #L256696.  v2:= `@@android.graphics.Paint$Cap.SQUARE` @type ^`android.graphics.Paint$Cap` @kind object;
  #L25669a.  return v2 @kind object;
  #L25669c.  v2:= `@@android.graphics.Paint$Cap.ROUND` @type ^`android.graphics.Paint$Cap` @kind object;
  #L2566a0.  return v2 @kind object;
  #L2566a2.  v2:= `@@android.graphics.Paint$Cap.BUTT` @type ^`android.graphics.Paint$Cap` @kind object;
  #L2566a6.  return v2 @kind object;
}
procedure `android.graphics.Paint$Join` `a`(`c.t.a.a.i$c` v1 @kind this, `int` v2 , `android.graphics.Paint$Join` v3 @kind object) @signature `Lc/t/a/a/i$c;.a:(ILandroid/graphics/Paint$Join;)Landroid/graphics/Paint$Join;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2566b8.  if v2 == 0 then goto L2566d6;
  #L2566bc.  v0:= 1I;
  #L2566be.  if v2 == v0 then goto L2566d0;
  #L2566c2.  v0:= 2I;
  #L2566c4.  if v2 == v0 then goto L2566ca;
  #L2566c8.  return v3 @kind object;
  #L2566ca.  v2:= `@@android.graphics.Paint$Join.BEVEL` @type ^`android.graphics.Paint$Join` @kind object;
  #L2566ce.  return v2 @kind object;
  #L2566d0.  v2:= `@@android.graphics.Paint$Join.ROUND` @type ^`android.graphics.Paint$Join` @kind object;
  #L2566d4.  return v2 @kind object;
  #L2566d6.  v2:= `@@android.graphics.Paint$Join.MITER` @type ^`android.graphics.Paint$Join` @kind object;
  #L2566da.  return v2 @kind object;
}
procedure `void` `a`(`c.t.a.a.i$c` v7 @kind this, `android.content.res.TypedArray` v8 @kind object, `org.xmlpull.v1.XmlPullParser` v9 @kind object, `android.content.res.Resources$Theme` v10 @kind object) @signature `Lc/t/a/a/i$c;.a:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources$Theme;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L256a20.  v0:= 0I;
  #L256a22.  v7.`c.t.a.a.i$c.e` @type ^`int`[] := v0 @kind object;
  #L256a26.  v0:= "pathData" @kind object;
  #L256a2a.  call temp:= `hasAttribute`(v9, v0) @signature `Landroidx/core/content/c/g;.hasAttribute:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z` @kind static;
  #L256a30.  v0:= temp;
  #L256a32.  if v0 != 0 then goto L256a38;
  #L256a36.  return @kind void;
  #L256a38.  v0:= 0I;
  #L256a3a.  call temp:= `getString`(v8, v0) @signature `Landroid/content/res/TypedArray;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L256a40.  v0:= temp @kind object;
  #L256a42.  if v0 == 0 then goto L256a4a;
  #L256a46.  v7.`c.t.a.a.i$f.b` @type ^`java.lang.String` := v0 @kind object;
  #L256a4a.  v0:= 2I;
  #L256a4c.  call temp:= `getString`(v8, v0) @signature `Landroid/content/res/TypedArray;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L256a52.  v0:= temp @kind object;
  #L256a54.  if v0 == 0 then goto L256a64;
  #L256a58.  call temp:= `createNodesFromPathData`(v0) @signature `Lc/h/d/c;.createNodesFromPathData:(Ljava/lang/String;)[Lc/h/d/c$b;` @kind static;
  #L256a5e.  v0:= temp @kind object;
  #L256a60.  v7.`c.t.a.a.i$f.a` @type ^`c.h.d.c$b`[] := v0 @kind object;
  #L256a64.  v5:= 1I;
  #L256a66.  v6:= 0I;
  #L256a68.  v4:= "fillColor" @kind object;
  #L256a6c.  v1:= v8 @kind object;
  #L256a6e.  v2:= v9 @kind object;
  #L256a70.  v3:= v10 @kind object;
  #L256a72.  call temp:= `getNamedComplexColor`(v1, v2, v3, v4, v5, v6) @signature `Landroidx/core/content/c/g;.getNamedComplexColor:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources$Theme;Ljava/lang/String;II)Landroidx/core/content/c/b;` @kind static;
  #L256a78.  v0:= temp @kind object;
  #L256a7a.  v7.`c.t.a.a.i$c.h` @type ^`androidx.core.content.c.b` := v0 @kind object;
  #L256a7e.  v0:= 12I;
  #L256a82.  v1:= v7.`c.t.a.a.i$c.j` @type ^`float`;
  #L256a86.  v2:= "fillAlpha" @kind object;
  #L256a8a.  call temp:= `getNamedFloat`(v8, v9, v2, v0, v1) @signature `Landroidx/core/content/c/g;.getNamedFloat:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L256a90.  v0:= temp;
  #L256a92.  v7.`c.t.a.a.i$c.j` @type ^`float` := v0;
  #L256a96.  v0:= 8I;
  #L256a9a.  v1:= -1I;
  #L256a9c.  v2:= "strokeLineCap" @kind object;
  #L256aa0.  call temp:= `getNamedInt`(v8, v9, v2, v0, v1) @signature `Landroidx/core/content/c/g;.getNamedInt:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;II)I` @kind static;
  #L256aa6.  v0:= temp;
  #L256aa8.  v2:= v7.`c.t.a.a.i$c.n` @type ^`android.graphics.Paint$Cap` @kind object;
  #L256aac.  call temp:= `a`(v7, v0, v2) @signature `Lc/t/a/a/i$c;.a:(ILandroid/graphics/Paint$Cap;)Landroid/graphics/Paint$Cap;` @kind direct;
  #L256ab2.  v0:= temp @kind object;
  #L256ab4.  v7.`c.t.a.a.i$c.n` @type ^`android.graphics.Paint$Cap` := v0 @kind object;
  #L256ab8.  v0:= 9I;
  #L256abc.  v2:= "strokeLineJoin" @kind object;
  #L256ac0.  call temp:= `getNamedInt`(v8, v9, v2, v0, v1) @signature `Landroidx/core/content/c/g;.getNamedInt:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;II)I` @kind static;
  #L256ac6.  v0:= temp;
  #L256ac8.  v1:= v7.`c.t.a.a.i$c.o` @type ^`android.graphics.Paint$Join` @kind object;
  #L256acc.  call temp:= `a`(v7, v0, v1) @signature `Lc/t/a/a/i$c;.a:(ILandroid/graphics/Paint$Join;)Landroid/graphics/Paint$Join;` @kind direct;
  #L256ad2.  v0:= temp @kind object;
  #L256ad4.  v7.`c.t.a.a.i$c.o` @type ^`android.graphics.Paint$Join` := v0 @kind object;
  #L256ad8.  v0:= 10I;
  #L256adc.  v1:= v7.`c.t.a.a.i$c.p` @type ^`float`;
  #L256ae0.  v2:= "strokeMiterLimit" @kind object;
  #L256ae4.  call temp:= `getNamedFloat`(v8, v9, v2, v0, v1) @signature `Landroidx/core/content/c/g;.getNamedFloat:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L256aea.  v0:= temp;
  #L256aec.  v7.`c.t.a.a.i$c.p` @type ^`float` := v0;
  #L256af0.  v5:= 3I;
  #L256af2.  v4:= "strokeColor" @kind object;
  #L256af6.  v1:= v8 @kind object;
  #L256af8.  v2:= v9 @kind object;
  #L256afa.  call temp:= `getNamedComplexColor`(v1, v2, v3, v4, v5, v6) @signature `Landroidx/core/content/c/g;.getNamedComplexColor:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources$Theme;Ljava/lang/String;II)Landroidx/core/content/c/b;` @kind static;
  #L256b00.  v10:= temp @kind object;
  #L256b02.  v7.`c.t.a.a.i$c.f` @type ^`androidx.core.content.c.b` := v10 @kind object;
  #L256b06.  v10:= 11I;
  #L256b0a.  v0:= v7.`c.t.a.a.i$c.i` @type ^`float`;
  #L256b0e.  v1:= "strokeAlpha" @kind object;
  #L256b12.  call temp:= `getNamedFloat`(v8, v9, v1, v10, v0) @signature `Landroidx/core/content/c/g;.getNamedFloat:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L256b18.  v10:= temp;
  #L256b1a.  v7.`c.t.a.a.i$c.i` @type ^`float` := v10;
  #L256b1e.  v10:= 4I;
  #L256b20.  v0:= v7.`c.t.a.a.i$c.g` @type ^`float`;
  #L256b24.  v1:= "strokeWidth" @kind object;
  #L256b28.  call temp:= `getNamedFloat`(v8, v9, v1, v10, v0) @signature `Landroidx/core/content/c/g;.getNamedFloat:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L256b2e.  v10:= temp;
  #L256b30.  v7.`c.t.a.a.i$c.g` @type ^`float` := v10;
  #L256b34.  v10:= 6I;
  #L256b36.  v0:= v7.`c.t.a.a.i$c.l` @type ^`float`;
  #L256b3a.  v1:= "trimPathEnd" @kind object;
  #L256b3e.  call temp:= `getNamedFloat`(v8, v9, v1, v10, v0) @signature `Landroidx/core/content/c/g;.getNamedFloat:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L256b44.  v10:= temp;
  #L256b46.  v7.`c.t.a.a.i$c.l` @type ^`float` := v10;
  #L256b4a.  v10:= 7I;
  #L256b4c.  v0:= v7.`c.t.a.a.i$c.m` @type ^`float`;
  #L256b50.  v1:= "trimPathOffset" @kind object;
  #L256b54.  call temp:= `getNamedFloat`(v8, v9, v1, v10, v0) @signature `Landroidx/core/content/c/g;.getNamedFloat:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L256b5a.  v10:= temp;
  #L256b5c.  v7.`c.t.a.a.i$c.m` @type ^`float` := v10;
  #L256b60.  v10:= 5I;
  #L256b62.  v0:= v7.`c.t.a.a.i$c.k` @type ^`float`;
  #L256b66.  v1:= "trimPathStart" @kind object;
  #L256b6a.  call temp:= `getNamedFloat`(v8, v9, v1, v10, v0) @signature `Landroidx/core/content/c/g;.getNamedFloat:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L256b70.  v10:= temp;
  #L256b72.  v7.`c.t.a.a.i$c.k` @type ^`float` := v10;
  #L256b76.  v10:= 13I;
  #L256b7a.  v0:= v7.`c.t.a.a.i$f.c` @type ^`int`;
  #L256b7e.  v1:= "fillType" @kind object;
  #L256b82.  call temp:= `getNamedInt`(v8, v9, v1, v10, v0) @signature `Landroidx/core/content/c/g;.getNamedInt:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;II)I` @kind static;
  #L256b88.  v8:= temp;
  #L256b8a.  v7.`c.t.a.a.i$f.c` @type ^`int` := v8;
  #L256b8e.  return @kind void;
}
procedure `float` `getFillAlpha`(`c.t.a.a.i$c` v1 @kind this) @signature `Lc/t/a/a/i$c;.getFillAlpha:()F` @AccessFlag  {
    temp;
    v0;

  #L256754.  v0:= v1.`c.t.a.a.i$c.j` @type ^`float`;
  #L256758.  return v0;
}
procedure `int` `getFillColor`(`c.t.a.a.i$c` v1 @kind this) @signature `Lc/t/a/a/i$c;.getFillColor:()I` @AccessFlag  {
    temp;
    v0;

  #L2567e4.  v0:= v1.`c.t.a.a.i$c.h` @type ^`androidx.core.content.c.b` @kind object;
  #L2567e8.  call temp:= `getColor`(v0) @signature `Landroidx/core/content/c/b;.getColor:()I` @kind virtual;
  #L2567ee.  v0:= temp;
  #L2567f0.  return v0;
}
procedure `float` `getStrokeAlpha`(`c.t.a.a.i$c` v1 @kind this) @signature `Lc/t/a/a/i$c;.getStrokeAlpha:()F` @AccessFlag  {
    temp;
    v0;

  #L25676c.  v0:= v1.`c.t.a.a.i$c.i` @type ^`float`;
  #L256770.  return v0;
}
procedure `int` `getStrokeColor`(`c.t.a.a.i$c` v1 @kind this) @signature `Lc/t/a/a/i$c;.getStrokeColor:()I` @AccessFlag  {
    temp;
    v0;

  #L256804.  v0:= v1.`c.t.a.a.i$c.f` @type ^`androidx.core.content.c.b` @kind object;
  #L256808.  call temp:= `getColor`(v0) @signature `Landroidx/core/content/c/b;.getColor:()I` @kind virtual;
  #L25680e.  v0:= temp;
  #L256810.  return v0;
}
procedure `float` `getStrokeWidth`(`c.t.a.a.i$c` v1 @kind this) @signature `Lc/t/a/a/i$c;.getStrokeWidth:()F` @AccessFlag  {
    temp;
    v0;

  #L256784.  v0:= v1.`c.t.a.a.i$c.g` @type ^`float`;
  #L256788.  return v0;
}
procedure `float` `getTrimPathEnd`(`c.t.a.a.i$c` v1 @kind this) @signature `Lc/t/a/a/i$c;.getTrimPathEnd:()F` @AccessFlag  {
    temp;
    v0;

  #L25679c.  v0:= v1.`c.t.a.a.i$c.l` @type ^`float`;
  #L2567a0.  return v0;
}
procedure `float` `getTrimPathOffset`(`c.t.a.a.i$c` v1 @kind this) @signature `Lc/t/a/a/i$c;.getTrimPathOffset:()F` @AccessFlag  {
    temp;
    v0;

  #L2567b4.  v0:= v1.`c.t.a.a.i$c.m` @type ^`float`;
  #L2567b8.  return v0;
}
procedure `float` `getTrimPathStart`(`c.t.a.a.i$c` v1 @kind this) @signature `Lc/t/a/a/i$c;.getTrimPathStart:()F` @AccessFlag  {
    temp;
    v0;

  #L2567cc.  v0:= v1.`c.t.a.a.i$c.k` @type ^`float`;
  #L2567d0.  return v0;
}
procedure `void` `inflate`(`c.t.a.a.i$c` v1 @kind this, `android.content.res.Resources` v2 @kind object, `android.util.AttributeSet` v3 @kind object, `android.content.res.Resources$Theme` v4 @kind object, `org.xmlpull.v1.XmlPullParser` v5 @kind object) @signature `Lc/t/a/a/i$c;.inflate:(Landroid/content/res/Resources;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25692c.  v0:= `@@c.t.a.a.a.c` @type ^`int`[] @kind object;
  #L256930.  call temp:= `obtainAttributes`(v2, v4, v3, v0) @signature `Landroidx/core/content/c/g;.obtainAttributes:(Landroid/content/res/Resources;Landroid/content/res/Resources$Theme;Landroid/util/AttributeSet;[I)Landroid/content/res/TypedArray;` @kind static;
  #L256936.  v2:= temp @kind object;
  #L256938.  call `a`(v1, v2, v5, v4) @signature `Lc/t/a/a/i$c;.a:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources$Theme;)V` @kind direct;
  #L25693e.  call `recycle`(v2) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L256944.  return @kind void;
}
procedure `boolean` `isStateful`(`c.t.a.a.i$c` v1 @kind this) @signature `Lc/t/a/a/i$c;.isStateful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2566ec.  v0:= v1.`c.t.a.a.i$c.h` @type ^`androidx.core.content.c.b` @kind object;
  #L2566f0.  call temp:= `isStateful`(v0) @signature `Landroidx/core/content/c/b;.isStateful:()Z` @kind virtual;
  #L2566f6.  v0:= temp;
  #L2566f8.  if v0 != 0 then goto L256712;
  #L2566fc.  v0:= v1.`c.t.a.a.i$c.f` @type ^`androidx.core.content.c.b` @kind object;
  #L256700.  call temp:= `isStateful`(v0) @signature `Landroidx/core/content/c/b;.isStateful:()Z` @kind virtual;
  #L256706.  v0:= temp;
  #L256708.  if v0 == 0 then goto L25670e;
  #L25670c.  goto L256712;
  #L25670e.  v0:= 0I;
  #L256710.  goto L256714;
  #L256712.  v0:= 1I;
  #L256714.  return v0;
}
procedure `boolean` `onStateChanged`(`c.t.a.a.i$c` v2 @kind this, `int`[] v3 @kind object) @signature `Lc/t/a/a/i$c;.onStateChanged:([I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L256728.  v0:= v2.`c.t.a.a.i$c.h` @type ^`androidx.core.content.c.b` @kind object;
  #L25672c.  call temp:= `onStateChanged`(v0, v3) @signature `Landroidx/core/content/c/b;.onStateChanged:([I)Z` @kind virtual;
  #L256732.  v0:= temp;
  #L256734.  v1:= v2.`c.t.a.a.i$c.f` @type ^`androidx.core.content.c.b` @kind object;
  #L256738.  call temp:= `onStateChanged`(v1, v3) @signature `Landroidx/core/content/c/b;.onStateChanged:([I)Z` @kind virtual;
  #L25673e.  v3:= temp;
  #L256740.  v3:= v3 ^| v0 @kind int;
  #L256742.  return v3;
}
procedure `void` `setFillAlpha`(`c.t.a.a.i$c` v0 @kind this, `float` v1 ) @signature `Lc/t/a/a/i$c;.setFillAlpha:(F)V` @AccessFlag  {
    temp;

  #L256958.  v0.`c.t.a.a.i$c.j` @type ^`float` := v1;
  #L25695c.  return @kind void;
}
procedure `void` `setFillColor`(`c.t.a.a.i$c` v1 @kind this, `int` v2 ) @signature `Lc/t/a/a/i$c;.setFillColor:(I)V` @AccessFlag  {
    temp;
    v0;

  #L256970.  v0:= v1.`c.t.a.a.i$c.h` @type ^`androidx.core.content.c.b` @kind object;
  #L256974.  call `setColor`(v0, v2) @signature `Landroidx/core/content/c/b;.setColor:(I)V` @kind virtual;
  #L25697a.  return @kind void;
}
procedure `void` `setStrokeAlpha`(`c.t.a.a.i$c` v0 @kind this, `float` v1 ) @signature `Lc/t/a/a/i$c;.setStrokeAlpha:(F)V` @AccessFlag  {
    temp;

  #L25698c.  v0.`c.t.a.a.i$c.i` @type ^`float` := v1;
  #L256990.  return @kind void;
}
procedure `void` `setStrokeColor`(`c.t.a.a.i$c` v1 @kind this, `int` v2 ) @signature `Lc/t/a/a/i$c;.setStrokeColor:(I)V` @AccessFlag  {
    temp;
    v0;

  #L2569a4.  v0:= v1.`c.t.a.a.i$c.f` @type ^`androidx.core.content.c.b` @kind object;
  #L2569a8.  call `setColor`(v0, v2) @signature `Landroidx/core/content/c/b;.setColor:(I)V` @kind virtual;
  #L2569ae.  return @kind void;
}
procedure `void` `setStrokeWidth`(`c.t.a.a.i$c` v0 @kind this, `float` v1 ) @signature `Lc/t/a/a/i$c;.setStrokeWidth:(F)V` @AccessFlag  {
    temp;

  #L2569c0.  v0.`c.t.a.a.i$c.g` @type ^`float` := v1;
  #L2569c4.  return @kind void;
}
procedure `void` `setTrimPathEnd`(`c.t.a.a.i$c` v0 @kind this, `float` v1 ) @signature `Lc/t/a/a/i$c;.setTrimPathEnd:(F)V` @AccessFlag  {
    temp;

  #L2569d8.  v0.`c.t.a.a.i$c.l` @type ^`float` := v1;
  #L2569dc.  return @kind void;
}
procedure `void` `setTrimPathOffset`(`c.t.a.a.i$c` v0 @kind this, `float` v1 ) @signature `Lc/t/a/a/i$c;.setTrimPathOffset:(F)V` @AccessFlag  {
    temp;

  #L2569f0.  v0.`c.t.a.a.i$c.m` @type ^`float` := v1;
  #L2569f4.  return @kind void;
}
procedure `void` `setTrimPathStart`(`c.t.a.a.i$c` v0 @kind this, `float` v1 ) @signature `Lc/t/a/a/i$c;.setTrimPathStart:(F)V` @AccessFlag  {
    temp;

  #L256a08.  v0.`c.t.a.a.i$c.k` @type ^`float` := v1;
  #L256a0c.  return @kind void;
}
