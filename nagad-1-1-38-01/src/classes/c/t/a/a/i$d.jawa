record `c.t.a.a.i$d` @kind class @AccessFlag  extends `c.t.a.a.i$e` @kind class {
  `android.graphics.Matrix` `c.t.a.a.i$d.a` @AccessFlag FINAL;
  `java.util.ArrayList` `c.t.a.a.i$d.b` @AccessFlag FINAL;
  `float` `c.t.a.a.i$d.c` @AccessFlag ;
  `float` `c.t.a.a.i$d.d` @AccessFlag PRIVATE;
  `float` `c.t.a.a.i$d.e` @AccessFlag PRIVATE;
  `float` `c.t.a.a.i$d.f` @AccessFlag PRIVATE;
  `float` `c.t.a.a.i$d.g` @AccessFlag PRIVATE;
  `float` `c.t.a.a.i$d.h` @AccessFlag PRIVATE;
  `float` `c.t.a.a.i$d.i` @AccessFlag PRIVATE;
  `android.graphics.Matrix` `c.t.a.a.i$d.j` @AccessFlag FINAL;
  `int` `c.t.a.a.i$d.k` @AccessFlag ;
  `int`[] `c.t.a.a.i$d.l` @AccessFlag PRIVATE;
  `java.lang.String` `c.t.a.a.i$d.m` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`c.t.a.a.i$d` v3 @kind this) @signature `Lc/t/a/a/i$d;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L256d0c.  v0:= 0I;
  #L256d0e.  call `<init>`(v3, v0) @signature `Lc/t/a/a/i$e;.<init>:(Lc/t/a/a/i$a;)V` @kind direct;
  #L256d14.  v1:= new `android.graphics.Matrix`;
  #L256d18.  call `<init>`(v1) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L256d1e.  v3.`c.t.a.a.i$d.a` @type ^`android.graphics.Matrix` := v1 @kind object;
  #L256d22.  v1:= new `java.util.ArrayList`;
  #L256d26.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L256d2c.  v3.`c.t.a.a.i$d.b` @type ^`java.util.ArrayList` := v1 @kind object;
  #L256d30.  v1:= 0I;
  #L256d32.  v3.`c.t.a.a.i$d.c` @type ^`float` := v1;
  #L256d36.  v3.`c.t.a.a.i$d.d` @type ^`float` := v1;
  #L256d3a.  v3.`c.t.a.a.i$d.e` @type ^`float` := v1;
  #L256d3e.  v2:= 1.0F;
  #L256d42.  v3.`c.t.a.a.i$d.f` @type ^`float` := v2;
  #L256d46.  v3.`c.t.a.a.i$d.g` @type ^`float` := v2;
  #L256d4a.  v3.`c.t.a.a.i$d.h` @type ^`float` := v1;
  #L256d4e.  v3.`c.t.a.a.i$d.i` @type ^`float` := v1;
  #L256d52.  v1:= new `android.graphics.Matrix`;
  #L256d56.  call `<init>`(v1) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L256d5c.  v3.`c.t.a.a.i$d.j` @type ^`android.graphics.Matrix` := v1 @kind object;
  #L256d60.  v3.`c.t.a.a.i$d.m` @type ^`java.lang.String` := v0 @kind object;
  #L256d64.  return @kind void;
}
procedure `void` `<init>`(`c.t.a.a.i$d` v4 @kind this, `c.t.a.a.i$d` v5 @kind object, `c.e.a` v6 @kind object) @signature `Lc/t/a/a/i$d;.<init>:(Lc/t/a/a/i$d;Lc/e/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L256d78.  v0:= 0I;
  #L256d7a.  call `<init>`(v4, v0) @signature `Lc/t/a/a/i$e;.<init>:(Lc/t/a/a/i$a;)V` @kind direct;
  #L256d80.  v1:= new `android.graphics.Matrix`;
  #L256d84.  call `<init>`(v1) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L256d8a.  v4.`c.t.a.a.i$d.a` @type ^`android.graphics.Matrix` := v1 @kind object;
  #L256d8e.  v1:= new `java.util.ArrayList`;
  #L256d92.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L256d98.  v4.`c.t.a.a.i$d.b` @type ^`java.util.ArrayList` := v1 @kind object;
  #L256d9c.  v1:= 0I;
  #L256d9e.  v4.`c.t.a.a.i$d.c` @type ^`float` := v1;
  #L256da2.  v4.`c.t.a.a.i$d.d` @type ^`float` := v1;
  #L256da6.  v4.`c.t.a.a.i$d.e` @type ^`float` := v1;
  #L256daa.  v2:= 1.0F;
  #L256dae.  v4.`c.t.a.a.i$d.f` @type ^`float` := v2;
  #L256db2.  v4.`c.t.a.a.i$d.g` @type ^`float` := v2;
  #L256db6.  v4.`c.t.a.a.i$d.h` @type ^`float` := v1;
  #L256dba.  v4.`c.t.a.a.i$d.i` @type ^`float` := v1;
  #L256dbe.  v1:= new `android.graphics.Matrix`;
  #L256dc2.  call `<init>`(v1) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L256dc8.  v4.`c.t.a.a.i$d.j` @type ^`android.graphics.Matrix` := v1 @kind object;
  #L256dcc.  v4.`c.t.a.a.i$d.m` @type ^`java.lang.String` := v0 @kind object;
  #L256dd0.  v0:= v5.`c.t.a.a.i$d.c` @type ^`float`;
  #L256dd4.  v4.`c.t.a.a.i$d.c` @type ^`float` := v0;
  #L256dd8.  v0:= v5.`c.t.a.a.i$d.d` @type ^`float`;
  #L256ddc.  v4.`c.t.a.a.i$d.d` @type ^`float` := v0;
  #L256de0.  v0:= v5.`c.t.a.a.i$d.e` @type ^`float`;
  #L256de4.  v4.`c.t.a.a.i$d.e` @type ^`float` := v0;
  #L256de8.  v0:= v5.`c.t.a.a.i$d.f` @type ^`float`;
  #L256dec.  v4.`c.t.a.a.i$d.f` @type ^`float` := v0;
  #L256df0.  v0:= v5.`c.t.a.a.i$d.g` @type ^`float`;
  #L256df4.  v4.`c.t.a.a.i$d.g` @type ^`float` := v0;
  #L256df8.  v0:= v5.`c.t.a.a.i$d.h` @type ^`float`;
  #L256dfc.  v4.`c.t.a.a.i$d.h` @type ^`float` := v0;
  #L256e00.  v0:= v5.`c.t.a.a.i$d.i` @type ^`float`;
  #L256e04.  v4.`c.t.a.a.i$d.i` @type ^`float` := v0;
  #L256e08.  v0:= v5.`c.t.a.a.i$d.l` @type ^`int`[] @kind object;
  #L256e0c.  v4.`c.t.a.a.i$d.l` @type ^`int`[] := v0 @kind object;
  #L256e10.  v0:= v5.`c.t.a.a.i$d.m` @type ^`java.lang.String` @kind object;
  #L256e14.  v4.`c.t.a.a.i$d.m` @type ^`java.lang.String` := v0 @kind object;
  #L256e18.  v0:= v5.`c.t.a.a.i$d.k` @type ^`int`;
  #L256e1c.  v4.`c.t.a.a.i$d.k` @type ^`int` := v0;
  #L256e20.  v0:= v4.`c.t.a.a.i$d.m` @type ^`java.lang.String` @kind object;
  #L256e24.  if v0 == 0 then goto L256e2e;
  #L256e28.  call temp:= `put`(v6, v0, v4) @signature `Lc/e/g;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L256e2e.  v0:= v4.`c.t.a.a.i$d.j` @type ^`android.graphics.Matrix` @kind object;
  #L256e32.  v1:= v5.`c.t.a.a.i$d.j` @type ^`android.graphics.Matrix` @kind object;
  #L256e36.  call `set`(v0, v1) @signature `Landroid/graphics/Matrix;.set:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L256e3c.  v5:= v5.`c.t.a.a.i$d.b` @type ^`java.util.ArrayList` @kind object;
  #L256e40.  v0:= 0I;
  #L256e42.  call temp:= `size`(v5) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L256e48.  v1:= temp;
  #L256e4a.  if v0 >= v1 then goto L256ed4;
  #L256e4e.  call temp:= `get`(v5, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L256e54.  v1:= temp @kind object;
  #L256e56.  v2:= instanceof @variable v1 @type ^`c.t.a.a.i$d` @kind boolean;
  #L256e5a.  if v2 == 0 then goto L256e78;
  #L256e5e.  v1:= (`c.t.a.a.i$d`) v1 @kind object;
  #L256e62.  v2:= v4.`c.t.a.a.i$d.b` @type ^`java.util.ArrayList` @kind object;
  #L256e66.  v3:= new `c.t.a.a.i$d`;
  #L256e6a.  call `<init>`(v3, v1, v6) @signature `Lc/t/a/a/i$d;.<init>:(Lc/t/a/a/i$d;Lc/e/a;)V` @kind direct;
  #L256e70.  call temp:= `add`(v2, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L256e76.  goto L256ebe;
  #L256e78.  v2:= instanceof @variable v1 @type ^`c.t.a.a.i$c` @kind boolean;
  #L256e7c.  if v2 == 0 then goto L256e90;
  #L256e80.  v2:= new `c.t.a.a.i$c`;
  #L256e84.  v1:= (`c.t.a.a.i$c`) v1 @kind object;
  #L256e88.  call `<init>`(v2, v1) @signature `Lc/t/a/a/i$c;.<init>:(Lc/t/a/a/i$c;)V` @kind direct;
  #L256e8e.  goto L256ea6;
  #L256e90.  v2:= instanceof @variable v1 @type ^`c.t.a.a.i$b` @kind boolean;
  #L256e94.  if v2 == 0 then goto L256ec4;
  #L256e98.  v2:= new `c.t.a.a.i$b`;
  #L256e9c.  v1:= (`c.t.a.a.i$b`) v1 @kind object;
  #L256ea0.  call `<init>`(v2, v1) @signature `Lc/t/a/a/i$b;.<init>:(Lc/t/a/a/i$b;)V` @kind direct;
  #L256ea6.  v1:= v4.`c.t.a.a.i$d.b` @type ^`java.util.ArrayList` @kind object;
  #L256eaa.  call temp:= `add`(v1, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L256eb0.  v1:= v2.`c.t.a.a.i$f.b` @type ^`java.lang.String` @kind object;
  #L256eb4.  if v1 == 0 then goto L256ebe;
  #L256eb8.  call temp:= `put`(v6, v1, v2) @signature `Lc/e/g;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L256ebe.  v0:= v0 + 1;
  #L256ec2.  goto L256e42;
  #L256ec4.  v5:= new `java.lang.IllegalStateException`;
  #L256ec8.  v6:= "Unknown object in the tree!" @kind object;
  #L256ecc.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L256ed2.  throw v5;
  #L256ed4.  return @kind void;
}
procedure `void` `a`(`c.t.a.a.i$d` v4 @kind this) @signature `Lc/t/a/a/i$d;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L25702c.  v0:= v4.`c.t.a.a.i$d.j` @type ^`android.graphics.Matrix` @kind object;
  #L257030.  call `reset`(v0) @signature `Landroid/graphics/Matrix;.reset:()V` @kind virtual;
  #L257036.  v0:= v4.`c.t.a.a.i$d.j` @type ^`android.graphics.Matrix` @kind object;
  #L25703a.  v1:= v4.`c.t.a.a.i$d.d` @type ^`float`;
  #L25703e.  v1:= -v1 @kind float;
  #L257040.  v2:= v4.`c.t.a.a.i$d.e` @type ^`float`;
  #L257044.  v2:= -v2 @kind float;
  #L257046.  call temp:= `postTranslate`(v0, v1, v2) @signature `Landroid/graphics/Matrix;.postTranslate:(FF)Z` @kind virtual;
  #L25704c.  v0:= v4.`c.t.a.a.i$d.j` @type ^`android.graphics.Matrix` @kind object;
  #L257050.  v1:= v4.`c.t.a.a.i$d.f` @type ^`float`;
  #L257054.  v2:= v4.`c.t.a.a.i$d.g` @type ^`float`;
  #L257058.  call temp:= `postScale`(v0, v1, v2) @signature `Landroid/graphics/Matrix;.postScale:(FF)Z` @kind virtual;
  #L25705e.  v0:= v4.`c.t.a.a.i$d.j` @type ^`android.graphics.Matrix` @kind object;
  #L257062.  v1:= v4.`c.t.a.a.i$d.c` @type ^`float`;
  #L257066.  v2:= 0I;
  #L257068.  call temp:= `postRotate`(v0, v1, v2, v2) @signature `Landroid/graphics/Matrix;.postRotate:(FFF)Z` @kind virtual;
  #L25706e.  v0:= v4.`c.t.a.a.i$d.j` @type ^`android.graphics.Matrix` @kind object;
  #L257072.  v1:= v4.`c.t.a.a.i$d.h` @type ^`float`;
  #L257076.  v2:= v4.`c.t.a.a.i$d.d` @type ^`float`;
  #L25707a.  v1:= v1 + v2 @kind float;
  #L25707c.  v2:= v4.`c.t.a.a.i$d.i` @type ^`float`;
  #L257080.  v3:= v4.`c.t.a.a.i$d.e` @type ^`float`;
  #L257084.  v2:= v2 + v3 @kind float;
  #L257086.  call temp:= `postTranslate`(v0, v1, v2) @signature `Landroid/graphics/Matrix;.postTranslate:(FF)Z` @kind virtual;
  #L25708c.  return @kind void;
}
procedure `void` `a`(`c.t.a.a.i$d` v3 @kind this, `android.content.res.TypedArray` v4 @kind object, `org.xmlpull.v1.XmlPullParser` v5 @kind object) @signature `Lc/t/a/a/i$d;.a:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2570a0.  v0:= 0I;
  #L2570a2.  v3.`c.t.a.a.i$d.l` @type ^`int`[] := v0 @kind object;
  #L2570a6.  v0:= v3.`c.t.a.a.i$d.c` @type ^`float`;
  #L2570aa.  v1:= "rotation" @kind object;
  #L2570ae.  v2:= 5I;
  #L2570b0.  call temp:= `getNamedFloat`(v4, v5, v1, v2, v0) @signature `Landroidx/core/content/c/g;.getNamedFloat:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L2570b6.  v0:= temp;
  #L2570b8.  v3.`c.t.a.a.i$d.c` @type ^`float` := v0;
  #L2570bc.  v0:= v3.`c.t.a.a.i$d.d` @type ^`float`;
  #L2570c0.  v1:= 1I;
  #L2570c2.  call temp:= `getFloat`(v4, v1, v0) @signature `Landroid/content/res/TypedArray;.getFloat:(IF)F` @kind virtual;
  #L2570c8.  v0:= temp;
  #L2570ca.  v3.`c.t.a.a.i$d.d` @type ^`float` := v0;
  #L2570ce.  v0:= v3.`c.t.a.a.i$d.e` @type ^`float`;
  #L2570d2.  v1:= 2I;
  #L2570d4.  call temp:= `getFloat`(v4, v1, v0) @signature `Landroid/content/res/TypedArray;.getFloat:(IF)F` @kind virtual;
  #L2570da.  v0:= temp;
  #L2570dc.  v3.`c.t.a.a.i$d.e` @type ^`float` := v0;
  #L2570e0.  v0:= v3.`c.t.a.a.i$d.f` @type ^`float`;
  #L2570e4.  v1:= "scaleX" @kind object;
  #L2570e8.  v2:= 3I;
  #L2570ea.  call temp:= `getNamedFloat`(v4, v5, v1, v2, v0) @signature `Landroidx/core/content/c/g;.getNamedFloat:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L2570f0.  v0:= temp;
  #L2570f2.  v3.`c.t.a.a.i$d.f` @type ^`float` := v0;
  #L2570f6.  v0:= v3.`c.t.a.a.i$d.g` @type ^`float`;
  #L2570fa.  v1:= "scaleY" @kind object;
  #L2570fe.  v2:= 4I;
  #L257100.  call temp:= `getNamedFloat`(v4, v5, v1, v2, v0) @signature `Landroidx/core/content/c/g;.getNamedFloat:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L257106.  v0:= temp;
  #L257108.  v3.`c.t.a.a.i$d.g` @type ^`float` := v0;
  #L25710c.  v0:= v3.`c.t.a.a.i$d.h` @type ^`float`;
  #L257110.  v1:= "translateX" @kind object;
  #L257114.  v2:= 6I;
  #L257116.  call temp:= `getNamedFloat`(v4, v5, v1, v2, v0) @signature `Landroidx/core/content/c/g;.getNamedFloat:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L25711c.  v0:= temp;
  #L25711e.  v3.`c.t.a.a.i$d.h` @type ^`float` := v0;
  #L257122.  v0:= v3.`c.t.a.a.i$d.i` @type ^`float`;
  #L257126.  v1:= "translateY" @kind object;
  #L25712a.  v2:= 7I;
  #L25712c.  call temp:= `getNamedFloat`(v4, v5, v1, v2, v0) @signature `Landroidx/core/content/c/g;.getNamedFloat:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L257132.  v5:= temp;
  #L257134.  v3.`c.t.a.a.i$d.i` @type ^`float` := v5;
  #L257138.  v5:= 0I;
  #L25713a.  call temp:= `getString`(v4, v5) @signature `Landroid/content/res/TypedArray;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L257140.  v4:= temp @kind object;
  #L257142.  if v4 == 0 then goto L25714a;
  #L257146.  v3.`c.t.a.a.i$d.m` @type ^`java.lang.String` := v4 @kind object;
  #L25714a.  call `a`(v3) @signature `Lc/t/a/a/i$d;.a:()V` @kind direct;
  #L257150.  return @kind void;
}
procedure `java.lang.String` `getGroupName`(`c.t.a.a.i$d` v1 @kind this) @signature `Lc/t/a/a/i$d;.getGroupName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L256cf4.  v0:= v1.`c.t.a.a.i$d.m` @type ^`java.lang.String` @kind object;
  #L256cf8.  return v0 @kind object;
}
procedure `android.graphics.Matrix` `getLocalMatrix`(`c.t.a.a.i$d` v1 @kind this) @signature `Lc/t/a/a/i$d;.getLocalMatrix:()Landroid/graphics/Matrix;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L256ba0.  v0:= v1.`c.t.a.a.i$d.j` @type ^`android.graphics.Matrix` @kind object;
  #L256ba4.  return v0 @kind object;
}
procedure `float` `getPivotX`(`c.t.a.a.i$d` v1 @kind this) @signature `Lc/t/a/a/i$d;.getPivotX:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L256c4c.  v0:= v1.`c.t.a.a.i$d.d` @type ^`float`;
  #L256c50.  return v0;
}
procedure `float` `getPivotY`(`c.t.a.a.i$d` v1 @kind this) @signature `Lc/t/a/a/i$d;.getPivotY:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L256c64.  v0:= v1.`c.t.a.a.i$d.e` @type ^`float`;
  #L256c68.  return v0;
}
procedure `float` `getRotation`(`c.t.a.a.i$d` v1 @kind this) @signature `Lc/t/a/a/i$d;.getRotation:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L256c7c.  v0:= v1.`c.t.a.a.i$d.c` @type ^`float`;
  #L256c80.  return v0;
}
procedure `float` `getScaleX`(`c.t.a.a.i$d` v1 @kind this) @signature `Lc/t/a/a/i$d;.getScaleX:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L256c94.  v0:= v1.`c.t.a.a.i$d.f` @type ^`float`;
  #L256c98.  return v0;
}
procedure `float` `getScaleY`(`c.t.a.a.i$d` v1 @kind this) @signature `Lc/t/a/a/i$d;.getScaleY:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L256cac.  v0:= v1.`c.t.a.a.i$d.g` @type ^`float`;
  #L256cb0.  return v0;
}
procedure `float` `getTranslateX`(`c.t.a.a.i$d` v1 @kind this) @signature `Lc/t/a/a/i$d;.getTranslateX:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L256cc4.  v0:= v1.`c.t.a.a.i$d.h` @type ^`float`;
  #L256cc8.  return v0;
}
procedure `float` `getTranslateY`(`c.t.a.a.i$d` v1 @kind this) @signature `Lc/t/a/a/i$d;.getTranslateY:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L256cdc.  v0:= v1.`c.t.a.a.i$d.i` @type ^`float`;
  #L256ce0.  return v0;
}
procedure `void` `inflate`(`c.t.a.a.i$d` v1 @kind this, `android.content.res.Resources` v2 @kind object, `android.util.AttributeSet` v3 @kind object, `android.content.res.Resources$Theme` v4 @kind object, `org.xmlpull.v1.XmlPullParser` v5 @kind object) @signature `Lc/t/a/a/i$d;.inflate:(Landroid/content/res/Resources;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L256ee8.  v0:= `@@c.t.a.a.a.b` @type ^`int`[] @kind object;
  #L256eec.  call temp:= `obtainAttributes`(v2, v4, v3, v0) @signature `Landroidx/core/content/c/g;.obtainAttributes:(Landroid/content/res/Resources;Landroid/content/res/Resources$Theme;Landroid/util/AttributeSet;[I)Landroid/content/res/TypedArray;` @kind static;
  #L256ef2.  v2:= temp @kind object;
  #L256ef4.  call `a`(v1, v2, v5) @signature `Lc/t/a/a/i$d;.a:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;)V` @kind direct;
  #L256efa.  call `recycle`(v2) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L256f00.  return @kind void;
}
procedure `boolean` `isStateful`(`c.t.a.a.i$d` v3 @kind this) @signature `Lc/t/a/a/i$d;.isStateful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L256bb8.  v0:= 0I;
  #L256bba.  v1:= 0I;
  #L256bbc.  v2:= v3.`c.t.a.a.i$d.b` @type ^`java.util.ArrayList` @kind object;
  #L256bc0.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L256bc6.  v2:= temp;
  #L256bc8.  if v1 >= v2 then goto L256bf2;
  #L256bcc.  v2:= v3.`c.t.a.a.i$d.b` @type ^`java.util.ArrayList` @kind object;
  #L256bd0.  call temp:= `get`(v2, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L256bd6.  v2:= temp @kind object;
  #L256bd8.  v2:= (`c.t.a.a.i$e`) v2 @kind object;
  #L256bdc.  call temp:= `isStateful`(v2) @signature `Lc/t/a/a/i$e;.isStateful:()Z` @kind virtual;
  #L256be2.  v2:= temp;
  #L256be4.  if v2 == 0 then goto L256bec;
  #L256be8.  v0:= 1I;
  #L256bea.  return v0;
  #L256bec.  v1:= v1 + 1;
  #L256bf0.  goto L256bbc;
  #L256bf2.  return v0;
}
procedure `boolean` `onStateChanged`(`c.t.a.a.i$d` v3 @kind this, `int`[] v4 @kind object) @signature `Lc/t/a/a/i$d;.onStateChanged:([I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L256c04.  v0:= 0I;
  #L256c06.  v1:= 0I;
  #L256c08.  v2:= v3.`c.t.a.a.i$d.b` @type ^`java.util.ArrayList` @kind object;
  #L256c0c.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L256c12.  v2:= temp;
  #L256c14.  if v0 >= v2 then goto L256c38;
  #L256c18.  v2:= v3.`c.t.a.a.i$d.b` @type ^`java.util.ArrayList` @kind object;
  #L256c1c.  call temp:= `get`(v2, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L256c22.  v2:= temp @kind object;
  #L256c24.  v2:= (`c.t.a.a.i$e`) v2 @kind object;
  #L256c28.  call temp:= `onStateChanged`(v2, v4) @signature `Lc/t/a/a/i$e;.onStateChanged:([I)Z` @kind virtual;
  #L256c2e.  v2:= temp;
  #L256c30.  v1:= v1 ^| v2 @kind int;
  #L256c32.  v0:= v0 + 1;
  #L256c36.  goto L256c08;
  #L256c38.  return v1;
}
procedure `void` `setPivotX`(`c.t.a.a.i$d` v1 @kind this, `float` v2 ) @signature `Lc/t/a/a/i$d;.setPivotX:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L256f14.  v0:= v1.`c.t.a.a.i$d.d` @type ^`float`;
  #L256f18.  v0:= fcmpl(v2, v0);
  #L256f1c.  if v0 == 0 then goto L256f2a;
  #L256f20.  v1.`c.t.a.a.i$d.d` @type ^`float` := v2;
  #L256f24.  call `a`(v1) @signature `Lc/t/a/a/i$d;.a:()V` @kind direct;
  #L256f2a.  return @kind void;
}
procedure `void` `setPivotY`(`c.t.a.a.i$d` v1 @kind this, `float` v2 ) @signature `Lc/t/a/a/i$d;.setPivotY:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L256f3c.  v0:= v1.`c.t.a.a.i$d.e` @type ^`float`;
  #L256f40.  v0:= fcmpl(v2, v0);
  #L256f44.  if v0 == 0 then goto L256f52;
  #L256f48.  v1.`c.t.a.a.i$d.e` @type ^`float` := v2;
  #L256f4c.  call `a`(v1) @signature `Lc/t/a/a/i$d;.a:()V` @kind direct;
  #L256f52.  return @kind void;
}
procedure `void` `setRotation`(`c.t.a.a.i$d` v1 @kind this, `float` v2 ) @signature `Lc/t/a/a/i$d;.setRotation:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L256f64.  v0:= v1.`c.t.a.a.i$d.c` @type ^`float`;
  #L256f68.  v0:= fcmpl(v2, v0);
  #L256f6c.  if v0 == 0 then goto L256f7a;
  #L256f70.  v1.`c.t.a.a.i$d.c` @type ^`float` := v2;
  #L256f74.  call `a`(v1) @signature `Lc/t/a/a/i$d;.a:()V` @kind direct;
  #L256f7a.  return @kind void;
}
procedure `void` `setScaleX`(`c.t.a.a.i$d` v1 @kind this, `float` v2 ) @signature `Lc/t/a/a/i$d;.setScaleX:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L256f8c.  v0:= v1.`c.t.a.a.i$d.f` @type ^`float`;
  #L256f90.  v0:= fcmpl(v2, v0);
  #L256f94.  if v0 == 0 then goto L256fa2;
  #L256f98.  v1.`c.t.a.a.i$d.f` @type ^`float` := v2;
  #L256f9c.  call `a`(v1) @signature `Lc/t/a/a/i$d;.a:()V` @kind direct;
  #L256fa2.  return @kind void;
}
procedure `void` `setScaleY`(`c.t.a.a.i$d` v1 @kind this, `float` v2 ) @signature `Lc/t/a/a/i$d;.setScaleY:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L256fb4.  v0:= v1.`c.t.a.a.i$d.g` @type ^`float`;
  #L256fb8.  v0:= fcmpl(v2, v0);
  #L256fbc.  if v0 == 0 then goto L256fca;
  #L256fc0.  v1.`c.t.a.a.i$d.g` @type ^`float` := v2;
  #L256fc4.  call `a`(v1) @signature `Lc/t/a/a/i$d;.a:()V` @kind direct;
  #L256fca.  return @kind void;
}
procedure `void` `setTranslateX`(`c.t.a.a.i$d` v1 @kind this, `float` v2 ) @signature `Lc/t/a/a/i$d;.setTranslateX:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L256fdc.  v0:= v1.`c.t.a.a.i$d.h` @type ^`float`;
  #L256fe0.  v0:= fcmpl(v2, v0);
  #L256fe4.  if v0 == 0 then goto L256ff2;
  #L256fe8.  v1.`c.t.a.a.i$d.h` @type ^`float` := v2;
  #L256fec.  call `a`(v1) @signature `Lc/t/a/a/i$d;.a:()V` @kind direct;
  #L256ff2.  return @kind void;
}
procedure `void` `setTranslateY`(`c.t.a.a.i$d` v1 @kind this, `float` v2 ) @signature `Lc/t/a/a/i$d;.setTranslateY:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L257004.  v0:= v1.`c.t.a.a.i$d.i` @type ^`float`;
  #L257008.  v0:= fcmpl(v2, v0);
  #L25700c.  if v0 == 0 then goto L25701a;
  #L257010.  v1.`c.t.a.a.i$d.i` @type ^`float` := v2;
  #L257014.  call `a`(v1) @signature `Lc/t/a/a/i$d;.a:()V` @kind direct;
  #L25701a.  return @kind void;
}
