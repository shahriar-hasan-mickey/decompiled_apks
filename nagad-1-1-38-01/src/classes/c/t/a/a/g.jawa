record `c.t.a.a.g` @kind class @AccessFlag PUBLIC extends `android.view.animation.Interpolator` @kind interface {
  `float`[] `c.t.a.a.g.a` @AccessFlag PRIVATE;
  `float`[] `c.t.a.a.g.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`c.t.a.a.g` v1 @kind this, `android.content.Context` v2 @kind object, `android.util.AttributeSet` v3 @kind object, `org.xmlpull.v1.XmlPullParser` v4 @kind object) @signature `Lc/t/a/a/g;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L255f08.  call temp:= `getResources`(v2) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L255f0e.  v0:= temp @kind object;
  #L255f10.  call temp:= `getTheme`(v2) @signature `Landroid/content/Context;.getTheme:()Landroid/content/res/Resources$Theme;` @kind virtual;
  #L255f16.  v2:= temp @kind object;
  #L255f18.  call `<init>`(v1, v0, v2, v3, v4) @signature `Lc/t/a/a/g;.<init>:(Landroid/content/res/Resources;Landroid/content/res/Resources$Theme;Landroid/util/AttributeSet;Lorg/xmlpull/v1/XmlPullParser;)V` @kind direct;
  #L255f1e.  return @kind void;
}
procedure `void` `<init>`(`c.t.a.a.g` v1 @kind this, `android.content.res.Resources` v2 @kind object, `android.content.res.Resources$Theme` v3 @kind object, `android.util.AttributeSet` v4 @kind object, `org.xmlpull.v1.XmlPullParser` v5 @kind object) @signature `Lc/t/a/a/g;.<init>:(Landroid/content/res/Resources;Landroid/content/res/Resources$Theme;Landroid/util/AttributeSet;Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L255f30.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L255f36.  v0:= `@@c.t.a.a.a.l` @type ^`int`[] @kind object;
  #L255f3a.  call temp:= `obtainAttributes`(v2, v3, v4, v0) @signature `Landroidx/core/content/c/g;.obtainAttributes:(Landroid/content/res/Resources;Landroid/content/res/Resources$Theme;Landroid/util/AttributeSet;[I)Landroid/content/res/TypedArray;` @kind static;
  #L255f40.  v2:= temp @kind object;
  #L255f42.  call `a`(v1, v2, v5) @signature `Lc/t/a/a/g;.a:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;)V` @kind direct;
  #L255f48.  call `recycle`(v2) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L255f4e.  return @kind void;
}
procedure `void` `a`(`c.t.a.a.g` v2 @kind this, `float` v3 , `float` v4 ) @signature `Lc/t/a/a/g;.a:(FF)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2561d8.  v0:= new `android.graphics.Path`;
  #L2561dc.  call `<init>`(v0) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L2561e2.  v1:= 0I;
  #L2561e4.  call `moveTo`(v0, v1, v1) @signature `Landroid/graphics/Path;.moveTo:(FF)V` @kind virtual;
  #L2561ea.  v1:= 1.0F;
  #L2561ee.  call `quadTo`(v0, v3, v4, v1, v1) @signature `Landroid/graphics/Path;.quadTo:(FFFF)V` @kind virtual;
  #L2561f4.  call `a`(v2, v0) @signature `Lc/t/a/a/g;.a:(Landroid/graphics/Path;)V` @kind direct;
  #L2561fa.  return @kind void;
}
procedure `void` `a`(`c.t.a.a.g` v8 @kind this, `float` v9 , `float` v10 , `float` v11 , `float` v12 ) @signature `Lc/t/a/a/g;.a:(FFFF)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L255f60.  v7:= new `android.graphics.Path`;
  #L255f64.  call `<init>`(v7) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L255f6a.  v0:= 0I;
  #L255f6c.  call `moveTo`(v7, v0, v0) @signature `Landroid/graphics/Path;.moveTo:(FF)V` @kind virtual;
  #L255f72.  v5:= 1.0F;
  #L255f76.  v6:= 1.0F;
  #L255f7a.  v0:= v7 @kind object;
  #L255f7c.  v1:= v9;
  #L255f7e.  v2:= v10;
  #L255f80.  v3:= v11;
  #L255f82.  v4:= v12;
  #L255f84.  call `cubicTo`(v0, v1, v2, v3, v4, v5, v6) @signature `Landroid/graphics/Path;.cubicTo:(FFFFFF)V` @kind virtual;
  #L255f8a.  call `a`(v8, v7) @signature `Lc/t/a/a/g;.a:(Landroid/graphics/Path;)V` @kind direct;
  #L255f90.  return @kind void;
}
procedure `void` `a`(`c.t.a.a.g` v7 @kind this, `android.content.res.TypedArray` v8 @kind object, `org.xmlpull.v1.XmlPullParser` v9 @kind object) @signature `Lc/t/a/a/g;.a:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L25620c.  v0:= "pathData" @kind object;
  #L256210.  call temp:= `hasAttribute`(v9, v0) @signature `Landroidx/core/content/c/g;.hasAttribute:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z` @kind static;
  #L256216.  v1:= temp;
  #L256218.  if v1 == 0 then goto L256268;
  #L25621c.  v1:= 4I;
  #L25621e.  call temp:= `getNamedString`(v8, v9, v0, v1) @signature `Landroidx/core/content/c/g;.getNamedString:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L256224.  v8:= temp @kind object;
  #L256226.  call temp:= `createPathFromPathData`(v8) @signature `Lc/h/d/c;.createPathFromPathData:(Ljava/lang/String;)Landroid/graphics/Path;` @kind static;
  #L25622c.  v9:= temp @kind object;
  #L25622e.  if v9 == 0 then goto L25623a;
  #L256232.  call `a`(v7, v9) @signature `Lc/t/a/a/g;.a:(Landroid/graphics/Path;)V` @kind direct;
  #L256238.  goto L2562e0;
  #L25623a.  v9:= new `android.view.InflateException`;
  #L25623e.  v0:= new `java.lang.StringBuilder`;
  #L256242.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L256248.  v1:= "The path is null, which is created from " @kind object;
  #L25624c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L256252.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L256258.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L25625e.  v8:= temp @kind object;
  #L256260.  call `<init>`(v9, v8) @signature `Landroid/view/InflateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L256266.  throw v9;
  #L256268.  v0:= "controlX1" @kind object;
  #L25626c.  call temp:= `hasAttribute`(v9, v0) @signature `Landroidx/core/content/c/g;.hasAttribute:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z` @kind static;
  #L256272.  v1:= temp;
  #L256274.  if v1 == 0 then goto L256302;
  #L256278.  v1:= "controlY1" @kind object;
  #L25627c.  call temp:= `hasAttribute`(v9, v1) @signature `Landroidx/core/content/c/g;.hasAttribute:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z` @kind static;
  #L256282.  v2:= temp;
  #L256284.  if v2 == 0 then goto L2562f2;
  #L256288.  v2:= 0I;
  #L25628a.  v3:= 0I;
  #L25628c.  call temp:= `getNamedFloat`(v8, v9, v0, v2, v3) @signature `Landroidx/core/content/c/g;.getNamedFloat:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L256292.  v0:= temp;
  #L256294.  v2:= 1I;
  #L256296.  call temp:= `getNamedFloat`(v8, v9, v1, v2, v3) @signature `Landroidx/core/content/c/g;.getNamedFloat:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L25629c.  v1:= temp;
  #L25629e.  v2:= "controlX2" @kind object;
  #L2562a2.  call temp:= `hasAttribute`(v9, v2) @signature `Landroidx/core/content/c/g;.hasAttribute:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z` @kind static;
  #L2562a8.  v4:= temp;
  #L2562aa.  v5:= "controlY2" @kind object;
  #L2562ae.  call temp:= `hasAttribute`(v9, v5) @signature `Landroidx/core/content/c/g;.hasAttribute:(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z` @kind static;
  #L2562b4.  v6:= temp;
  #L2562b6.  if v4 != v6 then goto L2562e2;
  #L2562ba.  if v4 != 0 then goto L2562c6;
  #L2562be.  call `a`(v7, v0, v1) @signature `Lc/t/a/a/g;.a:(FF)V` @kind direct;
  #L2562c4.  goto L2562e0;
  #L2562c6.  v4:= 2I;
  #L2562c8.  call temp:= `getNamedFloat`(v8, v9, v2, v4, v3) @signature `Landroidx/core/content/c/g;.getNamedFloat:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L2562ce.  v2:= temp;
  #L2562d0.  v4:= 3I;
  #L2562d2.  call temp:= `getNamedFloat`(v8, v9, v5, v4, v3) @signature `Landroidx/core/content/c/g;.getNamedFloat:(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F` @kind static;
  #L2562d8.  v8:= temp;
  #L2562da.  call `a`(v7, v0, v1, v2, v8) @signature `Lc/t/a/a/g;.a:(FFFF)V` @kind direct;
  #L2562e0.  return @kind void;
  #L2562e2.  v8:= new `android.view.InflateException`;
  #L2562e6.  v9:= "pathInterpolator requires both controlX2 and controlY2 for cubic Beziers." @kind object;
  #L2562ea.  call `<init>`(v8, v9) @signature `Landroid/view/InflateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2562f0.  throw v8;
  #L2562f2.  v8:= new `android.view.InflateException`;
  #L2562f6.  v9:= "pathInterpolator requires the controlY1 attribute" @kind object;
  #L2562fa.  call `<init>`(v8, v9) @signature `Landroid/view/InflateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L256300.  throw v8;
  #L256302.  v8:= new `android.view.InflateException`;
  #L256306.  v9:= "pathInterpolator requires the controlX1 attribute" @kind object;
  #L25630a.  call `<init>`(v8, v9) @signature `Landroid/view/InflateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L256310.  throw v8;
}
procedure `void` `a`(`c.t.a.a.g` v10 @kind this, `android.graphics.Path` v11 @kind object) @signature `Lc/t/a/a/g;.a:(Landroid/graphics/Path;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L255fa4.  v0:= new `android.graphics.PathMeasure`;
  #L255fa8.  v1:= 0I;
  #L255faa.  call `<init>`(v0, v11, v1) @signature `Landroid/graphics/PathMeasure;.<init>:(Landroid/graphics/Path;Z)V` @kind direct;
  #L255fb0.  call temp:= `getLength`(v0) @signature `Landroid/graphics/PathMeasure;.getLength:()F` @kind virtual;
  #L255fb6.  v11:= temp;
  #L255fb8.  v2:= 990057071I;
  #L255fbe.  v2:= v11 / v2 @kind float;
  #L255fc2.  v2:= (`int`) v2 @kind f2i;
  #L255fc4.  v3:= 1I;
  #L255fc6.  v2:= v2 + v3 @kind int;
  #L255fc8.  v4:= 3000I;
  #L255fcc.  call temp:= `min`(v4, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L255fd2.  v2:= temp;
  #L255fd4.  if v2 <= 0 then goto L25619a;
  #L255fd8.  v4:= new `float`[v2];
  #L255fdc.  v10.`c.t.a.a.g.a` @type ^`float`[] := v4 @kind object;
  #L255fe0.  v4:= new `float`[v2];
  #L255fe4.  v10.`c.t.a.a.g.b` @type ^`float`[] := v4 @kind object;
  #L255fe8.  v4:= 2I;
  #L255fea.  v4:= new `float`[v4];
  #L255fee.  v5:= 0I;
  #L255ff0.  if v5 >= v2 then goto L256028;
  #L255ff4.  v6:= (`float`) v5 @kind i2f;
  #L255ff6.  v6:= v6 * v11 @kind float;
  #L255ffa.  v7:= v2 + -1;
  #L255ffe.  v7:= (`float`) v7 @kind i2f;
  #L256000.  v6:= v6 / v7 @kind float;
  #L256002.  v7:= 0I;
  #L256004.  call temp:= `getPosTan`(v0, v6, v4, v7) @signature `Landroid/graphics/PathMeasure;.getPosTan:(F[F[F)Z` @kind virtual;
  #L25600a.  v6:= v10.`c.t.a.a.g.a` @type ^`float`[] @kind object;
  #L25600e.  v7:= v4[v1];
  #L256012.  v6[v5]:= v7;
  #L256016.  v6:= v10.`c.t.a.a.g.b` @type ^`float`[] @kind object;
  #L25601a.  v7:= v4[v3];
  #L25601e.  v6[v5]:= v7;
  #L256022.  v5:= v5 + 1;
  #L256026.  goto L255ff0;
  #L256028.  v11:= v10.`c.t.a.a.g.a` @type ^`float`[] @kind object;
  #L25602c.  v11:= v11[v1];
  #L256030.  call temp:= `abs`(v11) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L256036.  v11:= temp;
  #L256038.  v4:= (`double`) v11 @kind f2d;
  #L25603a.  v6:= 1.0E-5D;
  #L256044.  v11:= dcmpl(v4, v6);
  #L256048.  if v11 > 0 then goto L25611e;
  #L25604c.  v11:= v10.`c.t.a.a.g.b` @type ^`float`[] @kind object;
  #L256050.  v11:= v11[v1];
  #L256054.  call temp:= `abs`(v11) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L25605a.  v11:= temp;
  #L25605c.  v4:= (`double`) v11 @kind f2d;
  #L25605e.  v11:= dcmpl(v4, v6);
  #L256062.  if v11 > 0 then goto L25611e;
  #L256066.  v11:= v10.`c.t.a.a.g.a` @type ^`float`[] @kind object;
  #L25606a.  v4:= v2 + -1;
  #L25606e.  v11:= v11[v4];
  #L256072.  v5:= 1.0F;
  #L256076.  v11:= v11 - v5 @kind float;
  #L256078.  call temp:= `abs`(v11) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L25607e.  v11:= temp;
  #L256080.  v8:= (`double`) v11 @kind f2d;
  #L256082.  v11:= dcmpl(v8, v6);
  #L256086.  if v11 > 0 then goto L25611e;
  #L25608a.  v11:= v10.`c.t.a.a.g.b` @type ^`float`[] @kind object;
  #L25608e.  v11:= v11[v4];
  #L256092.  v11:= v11 - v5 @kind float;
  #L256094.  call temp:= `abs`(v11) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L25609a.  v11:= temp;
  #L25609c.  v4:= (`double`) v11 @kind f2d;
  #L25609e.  v11:= dcmpl(v4, v6);
  #L2560a2.  if v11 > 0 then goto L25611e;
  #L2560a6.  v11:= 0I;
  #L2560a8.  v11:= 0I;
  #L2560aa.  v3:= 0I;
  #L2560ac.  if v1 >= v2 then goto L256100;
  #L2560b0.  v4:= v10.`c.t.a.a.g.a` @type ^`float`[] @kind object;
  #L2560b4.  v5:= v11 + 1;
  #L2560b8.  v11:= v4[v11];
  #L2560bc.  v3:= fcmpg(v11, v3);
  #L2560c0.  if v3 < 0 then goto L2560d2;
  #L2560c4.  v4[v1]:= v11;
  #L2560c8.  v1:= v1 + 1;
  #L2560cc.  v3:= v11;
  #L2560ce.  v11:= v5;
  #L2560d0.  goto L2560ac;
  #L2560d2.  v0:= new `java.lang.IllegalArgumentException`;
  #L2560d6.  v1:= new `java.lang.StringBuilder`;
  #L2560da.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2560e0.  v2:= "The Path cannot loop back on itself, x :" @kind object;
  #L2560e4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2560ea.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L2560f0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2560f6.  v11:= temp @kind object;
  #L2560f8.  call `<init>`(v0, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2560fe.  throw v0;
  #L256100.  call temp:= `nextContour`(v0) @signature `Landroid/graphics/PathMeasure;.nextContour:()Z` @kind virtual;
  #L256106.  v11:= temp;
  #L256108.  if v11 != 0 then goto L25610e;
  #L25610c.  return @kind void;
  #L25610e.  v11:= new `java.lang.IllegalArgumentException`;
  #L256112.  v0:= "The Path should be continuous, can't have 2+ contours" @kind object;
  #L256116.  call `<init>`(v11, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25611c.  throw v11;
  #L25611e.  v11:= new `java.lang.IllegalArgumentException`;
  #L256122.  v0:= new `java.lang.StringBuilder`;
  #L256126.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L25612c.  v4:= "The Path must start at (0,0) and end at (1,1) start: " @kind object;
  #L256130.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L256136.  v4:= v10.`c.t.a.a.g.a` @type ^`float`[] @kind object;
  #L25613a.  v4:= v4[v1];
  #L25613e.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L256144.  v4:= "," @kind object;
  #L256148.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25614e.  v5:= v10.`c.t.a.a.g.b` @type ^`float`[] @kind object;
  #L256152.  v1:= v5[v1];
  #L256156.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L25615c.  v1:= " end:" @kind object;
  #L256160.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L256166.  v1:= v10.`c.t.a.a.g.a` @type ^`float`[] @kind object;
  #L25616a.  v2:= v2 - v3 @kind int;
  #L25616c.  v1:= v1[v2];
  #L256170.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L256176.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25617c.  v1:= v10.`c.t.a.a.g.b` @type ^`float`[] @kind object;
  #L256180.  v1:= v1[v2];
  #L256184.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L25618a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L256190.  v0:= temp @kind object;
  #L256192.  call `<init>`(v11, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L256198.  throw v11;
  #L25619a.  v0:= new `java.lang.IllegalArgumentException`;
  #L25619e.  v1:= new `java.lang.StringBuilder`;
  #L2561a2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2561a8.  v2:= "The Path has a invalid length " @kind object;
  #L2561ac.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2561b2.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L2561b8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2561be.  v11:= temp @kind object;
  #L2561c0.  call `<init>`(v0, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2561c6.  throw v0;
}
procedure `float` `getInterpolation`(`c.t.a.a.g` v6 @kind this, `float` v7 ) @signature `Lc/t/a/a/g;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L255e6c.  v0:= 0I;
  #L255e6e.  v1:= fcmpg(v7, v0);
  #L255e72.  if v1 > 0 then goto L255e78;
  #L255e76.  return v0;
  #L255e78.  v1:= 1.0F;
  #L255e7c.  v2:= fcmpl(v7, v1);
  #L255e80.  if v2 < 0 then goto L255e86;
  #L255e84.  return v1;
  #L255e86.  v1:= 0I;
  #L255e88.  v2:= v6.`c.t.a.a.g.a` @type ^`float`[] @kind object;
  #L255e8c.  v2:= length @variable v2;
  #L255e8e.  v3:= 1I;
  #L255e90.  v2:= v2 - v3 @kind int;
  #L255e92.  v4:= v2 - v1 @kind int;
  #L255e96.  if v4 <= v3 then goto L255eba;
  #L255e9a.  v4:= v1 + v2 @kind int;
  #L255e9e.  v4:= v4 / 2;
  #L255ea2.  v5:= v6.`c.t.a.a.g.a` @type ^`float`[] @kind object;
  #L255ea6.  v5:= v5[v4];
  #L255eaa.  v5:= fcmpg(v7, v5);
  #L255eae.  if v5 >= 0 then goto L255eb6;
  #L255eb2.  v2:= v4;
  #L255eb4.  goto L255e92;
  #L255eb6.  v1:= v4;
  #L255eb8.  goto L255e92;
  #L255eba.  v3:= v6.`c.t.a.a.g.a` @type ^`float`[] @kind object;
  #L255ebe.  v4:= v3[v2];
  #L255ec2.  v5:= v3[v1];
  #L255ec6.  v4:= v4 - v5 @kind float;
  #L255ec8.  v0:= fcmpl(v4, v0);
  #L255ecc.  if v0 != 0 then goto L255eda;
  #L255ed0.  v7:= v6.`c.t.a.a.g.b` @type ^`float`[] @kind object;
  #L255ed4.  v7:= v7[v1];
  #L255ed8.  return v7;
  #L255eda.  v0:= v3[v1];
  #L255ede.  v7:= v7 - v0 @kind float;
  #L255ee0.  v7:= v7 / v4 @kind float;
  #L255ee2.  v0:= v6.`c.t.a.a.g.b` @type ^`float`[] @kind object;
  #L255ee6.  v1:= v0[v1];
  #L255eea.  v0:= v0[v2];
  #L255eee.  v0:= v0 - v1 @kind float;
  #L255ef0.  v7:= v7 * v0 @kind float;
  #L255ef4.  v1:= v1 + v7 @kind float;
  #L255ef6.  return v1;
}
