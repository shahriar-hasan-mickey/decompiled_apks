record `c.h.g.c$b` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `java.util.concurrent.Callable` `c.h.g.c$b.f` @AccessFlag FINAL_SYNTHETIC;
  `android.os.Handler` `c.h.g.c$b.g` @AccessFlag FINAL_SYNTHETIC;
  `c.h.g.c$d` `c.h.g.c$b.h` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`c.h.g.c$b` v0 @kind this, `c.h.g.c` v1 @kind object, `java.util.concurrent.Callable` v2 @kind object, `android.os.Handler` v3 @kind object, `c.h.g.c$d` v4 @kind object) @signature `Lc/h/g/c$b;.<init>:(Lc/h/g/c;Ljava/util/concurrent/Callable;Landroid/os/Handler;Lc/h/g/c$d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1f9288.  v0.`c.h.g.c$b.f` @type ^`java.util.concurrent.Callable` := v2 @kind object;
  #L1f928c.  v0.`c.h.g.c$b.g` @type ^`android.os.Handler` := v3 @kind object;
  #L1f9290.  v0.`c.h.g.c$b.h` @type ^`c.h.g.c$d` := v4 @kind object;
  #L1f9294.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f929a.  return @kind void;
}
procedure `void` `run`(`c.h.g.c$b` v3 @kind this) @signature `Lc/h/g/c$b;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1f92ac.  v0:= v3.`c.h.g.c$b.f` @type ^`java.util.concurrent.Callable` @kind object;
  #L1f92b0.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L1f92b6.  v0:= temp @kind object;
  #L1f92b8.  goto L1f92bc;
  #L1f92ba.  v0:= 0I;
  #L1f92bc.  v1:= v3.`c.h.g.c$b.g` @type ^`android.os.Handler` @kind object;
  #L1f92c0.  v2:= new `c.h.g.c$b$a`;
  #L1f92c4.  call `<init>`(v2, v3, v0) @signature `Lc/h/g/c$b$a;.<init>:(Lc/h/g/c$b;Ljava/lang/Object;)V` @kind direct;
  #L1f92ca.  call temp:= `post`(v1, v2) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L1f92d0.  return @kind void;
  catch `java.lang.Exception` @[L1f92ac..L1f92b8] goto L1f92ba;
}
