record `c.h.g.c` @kind class @AccessFlag PUBLIC {
  `java.lang.Object` `c.h.g.c.a` @AccessFlag PRIVATE_FINAL;
  `android.os.HandlerThread` `c.h.g.c.b` @AccessFlag PRIVATE;
  `android.os.Handler` `c.h.g.c.c` @AccessFlag PRIVATE;
  `int` `c.h.g.c.d` @AccessFlag PRIVATE;
  `android.os.Handler$Callback` `c.h.g.c.e` @AccessFlag PRIVATE;
  `int` `c.h.g.c.f` @AccessFlag PRIVATE_FINAL;
  `int` `c.h.g.c.g` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `c.h.g.c.h` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`c.h.g.c` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lc/h/g/c;.<init>:(Ljava/lang/String;II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1f949c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f94a2.  v0:= new `java.lang.Object`;
  #L1f94a6.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f94ac.  v1.`c.h.g.c.a` @type ^`java.lang.Object` := v0 @kind object;
  #L1f94b0.  v0:= new `c.h.g.c$a`;
  #L1f94b4.  call `<init>`(v0, v1) @signature `Lc/h/g/c$a;.<init>:(Lc/h/g/c;)V` @kind direct;
  #L1f94ba.  v1.`c.h.g.c.e` @type ^`android.os.Handler$Callback` := v0 @kind object;
  #L1f94be.  v1.`c.h.g.c.h` @type ^`java.lang.String` := v2 @kind object;
  #L1f94c2.  v1.`c.h.g.c.g` @type ^`int` := v3;
  #L1f94c6.  v1.`c.h.g.c.f` @type ^`int` := v4;
  #L1f94ca.  v2:= 0I;
  #L1f94cc.  v1.`c.h.g.c.d` @type ^`int` := v2;
  #L1f94d0.  return @kind void;
}
procedure `void` `b`(`c.h.g.c` v5 @kind this, `java.lang.Runnable` v6 @kind object) @signature `Lc/h/g/c;.b:(Ljava/lang/Runnable;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1f9598.  v0:= v5.`c.h.g.c.a` @type ^`java.lang.Object` @kind object;
  #L1f959c.  @monitorenter v0
  #L1f959e.  v1:= v5.`c.h.g.c.b` @type ^`android.os.HandlerThread` @kind object;
  #L1f95a2.  v2:= 1I;
  #L1f95a4.  if v1 != 0 then goto L1f95f0;
  #L1f95a8.  v1:= new `android.os.HandlerThread`;
  #L1f95ac.  v3:= v5.`c.h.g.c.h` @type ^`java.lang.String` @kind object;
  #L1f95b0.  v4:= v5.`c.h.g.c.g` @type ^`int`;
  #L1f95b4.  call `<init>`(v1, v3, v4) @signature `Landroid/os/HandlerThread;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1f95ba.  v5.`c.h.g.c.b` @type ^`android.os.HandlerThread` := v1 @kind object;
  #L1f95be.  v1:= v5.`c.h.g.c.b` @type ^`android.os.HandlerThread` @kind object;
  #L1f95c2.  call `start`(v1) @signature `Landroid/os/HandlerThread;.start:()V` @kind virtual;
  #L1f95c8.  v1:= new `android.os.Handler`;
  #L1f95cc.  v3:= v5.`c.h.g.c.b` @type ^`android.os.HandlerThread` @kind object;
  #L1f95d0.  call temp:= `getLooper`(v3) @signature `Landroid/os/HandlerThread;.getLooper:()Landroid/os/Looper;` @kind virtual;
  #L1f95d6.  v3:= temp @kind object;
  #L1f95d8.  v4:= v5.`c.h.g.c.e` @type ^`android.os.Handler$Callback` @kind object;
  #L1f95dc.  call `<init>`(v1, v3, v4) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;Landroid/os/Handler$Callback;)V` @kind direct;
  #L1f95e2.  v5.`c.h.g.c.c` @type ^`android.os.Handler` := v1 @kind object;
  #L1f95e6.  v1:= v5.`c.h.g.c.d` @type ^`int`;
  #L1f95ea.  v1:= v1 + v2 @kind int;
  #L1f95ec.  v5.`c.h.g.c.d` @type ^`int` := v1;
  #L1f95f0.  v1:= v5.`c.h.g.c.c` @type ^`android.os.Handler` @kind object;
  #L1f95f4.  v3:= 0I;
  #L1f95f6.  call `removeMessages`(v1, v3) @signature `Landroid/os/Handler;.removeMessages:(I)V` @kind virtual;
  #L1f95fc.  v1:= v5.`c.h.g.c.c` @type ^`android.os.Handler` @kind object;
  #L1f9600.  v3:= v5.`c.h.g.c.c` @type ^`android.os.Handler` @kind object;
  #L1f9604.  call temp:= `obtainMessage`(v3, v2, v6) @signature `Landroid/os/Handler;.obtainMessage:(ILjava/lang/Object;)Landroid/os/Message;` @kind virtual;
  #L1f960a.  v6:= temp @kind object;
  #L1f960c.  call temp:= `sendMessage`(v1, v6) @signature `Landroid/os/Handler;.sendMessage:(Landroid/os/Message;)Z` @kind virtual;
  #L1f9612.  @monitorexit v0
  #L1f9614.  return @kind void;
  #L1f9616.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f9618.  @monitorexit v0
  #L1f961a.  throw v6;
  catch `java.lang.Throwable` @[L1f959e..L1f961a] goto L1f9616;
}
procedure `void` `a`(`c.h.g.c` v3 @kind this) @signature `Lc/h/g/c;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L1f94e4.  v0:= v3.`c.h.g.c.a` @type ^`java.lang.Object` @kind object;
  #L1f94e8.  @monitorenter v0
  #L1f94ea.  v1:= v3.`c.h.g.c.c` @type ^`android.os.Handler` @kind object;
  #L1f94ee.  v2:= 1I;
  #L1f94f0.  call temp:= `hasMessages`(v1, v2) @signature `Landroid/os/Handler;.hasMessages:(I)Z` @kind virtual;
  #L1f94f6.  v1:= temp;
  #L1f94f8.  if v1 == 0 then goto L1f9500;
  #L1f94fc.  @monitorexit v0
  #L1f94fe.  return @kind void;
  #L1f9500.  v1:= v3.`c.h.g.c.b` @type ^`android.os.HandlerThread` @kind object;
  #L1f9504.  call temp:= `quit`(v1) @signature `Landroid/os/HandlerThread;.quit:()Z` @kind virtual;
  #L1f950a.  v1:= 0I;
  #L1f950c.  v3.`c.h.g.c.b` @type ^`android.os.HandlerThread` := v1 @kind object;
  #L1f9510.  v3.`c.h.g.c.c` @type ^`android.os.Handler` := v1 @kind object;
  #L1f9514.  @monitorexit v0
  #L1f9516.  return @kind void;
  #L1f9518.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f951a.  @monitorexit v0
  #L1f951c.  throw v1;
  catch `java.lang.Throwable` @[L1f94ea..L1f951c] goto L1f9518;
}
procedure `void` `a`(`c.h.g.c` v4 @kind this, `java.lang.Runnable` v5 @kind object) @signature `Lc/h/g/c;.a:(Ljava/lang/Runnable;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1f953c.  call `run`(v5) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L1f9542.  v5:= v4.`c.h.g.c.a` @type ^`java.lang.Object` @kind object;
  #L1f9546.  @monitorenter v5
  #L1f9548.  v0:= v4.`c.h.g.c.c` @type ^`android.os.Handler` @kind object;
  #L1f954c.  v1:= 0I;
  #L1f954e.  call `removeMessages`(v0, v1) @signature `Landroid/os/Handler;.removeMessages:(I)V` @kind virtual;
  #L1f9554.  v0:= v4.`c.h.g.c.c` @type ^`android.os.Handler` @kind object;
  #L1f9558.  v2:= v4.`c.h.g.c.c` @type ^`android.os.Handler` @kind object;
  #L1f955c.  call temp:= `obtainMessage`(v2, v1) @signature `Landroid/os/Handler;.obtainMessage:(I)Landroid/os/Message;` @kind virtual;
  #L1f9562.  v1:= temp @kind object;
  #L1f9564.  v2:= v4.`c.h.g.c.f` @type ^`int`;
  #L1f9568.  v2:= (`long`) v2 @kind i2l;
  #L1f956a.  call temp:= `sendMessageDelayed`(v0, v1, v2) @signature `Landroid/os/Handler;.sendMessageDelayed:(Landroid/os/Message;J)Z` @kind virtual;
  #L1f9570.  @monitorexit v5
  #L1f9572.  return @kind void;
  #L1f9574.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f9576.  @monitorexit v5
  #L1f9578.  throw v0;
  catch `java.lang.Throwable` @[L1f9548..L1f9578] goto L1f9574;
}
procedure `void` `postAndReply`(`c.h.g.c` v2 @kind this, `java.util.concurrent.Callable` v3 @kind object, `c.h.g.c$d` v4 @kind object) @signature `Lc/h/g/c;.postAndReply:(Ljava/util/concurrent/Callable;Lc/h/g/c$d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1f9638.  v0:= new `android.os.Handler`;
  #L1f963c.  call `<init>`(v0) @signature `Landroid/os/Handler;.<init>:()V` @kind direct;
  #L1f9642.  v1:= new `c.h.g.c$b`;
  #L1f9646.  call `<init>`(v1, v2, v3, v0, v4) @signature `Lc/h/g/c$b;.<init>:(Lc/h/g/c;Ljava/util/concurrent/Callable;Landroid/os/Handler;Lc/h/g/c$d;)V` @kind direct;
  #L1f964c.  call `b`(v2, v1) @signature `Lc/h/g/c;.b:(Ljava/lang/Runnable;)V` @kind direct;
  #L1f9652.  return @kind void;
}
procedure `java.lang.Object` `postAndWait`(`c.h.g.c` v12 @kind this, `java.util.concurrent.Callable` v13 @kind object, `int` v14 ) @signature `Lc/h/g/c;.postAndWait:(Ljava/util/concurrent/Callable;I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1f9398.  v7:= new `java.util.concurrent.locks.ReentrantLock`;
  #L1f939c.  call `<init>`(v7) @signature `Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V` @kind direct;
  #L1f93a2.  call temp:= `newCondition`(v7) @signature `Ljava/util/concurrent/locks/ReentrantLock;.newCondition:()Ljava/util/concurrent/locks/Condition;` @kind virtual;
  #L1f93a8.  v8:= temp @kind object;
  #L1f93aa.  v9:= new `java.util.concurrent.atomic.AtomicReference`;
  #L1f93ae.  call `<init>`(v9) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L1f93b4.  v10:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L1f93b8.  v0:= 1I;
  #L1f93ba.  call `<init>`(v10, v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:(Z)V` @kind direct;
  #L1f93c0.  v11:= new `c.h.g.c$c`;
  #L1f93c4.  v0:= v11 @kind object;
  #L1f93c6.  v1:= v12 @kind object;
  #L1f93c8.  v2:= v9 @kind object;
  #L1f93ca.  v3:= v13 @kind object;
  #L1f93cc.  v4:= v7 @kind object;
  #L1f93ce.  v5:= v10 @kind object;
  #L1f93d0.  v6:= v8 @kind object;
  #L1f93d2.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lc/h/g/c$c;.<init>:(Lc/h/g/c;Ljava/util/concurrent/atomic/AtomicReference;Ljava/util/concurrent/Callable;Ljava/util/concurrent/locks/ReentrantLock;Ljava/util/concurrent/atomic/AtomicBoolean;Ljava/util/concurrent/locks/Condition;)V` @kind direct;
  #L1f93d8.  call `b`(v12, v11) @signature `Lc/h/g/c;.b:(Ljava/lang/Runnable;)V` @kind direct;
  #L1f93de.  call `lock`(v7) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L1f93e4.  call temp:= `get`(v10) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L1f93ea.  v13:= temp;
  #L1f93ec.  if v13 != 0 then goto L1f9400;
  #L1f93f0.  call temp:= `get`(v9) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L1f93f6.  v13:= temp @kind object;
  #L1f93f8.  call `unlock`(v7) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L1f93fe.  return v13 @kind object;
  #L1f9400.  v13:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1f9404.  v0:= (`long`) v14 @kind i2l;
  #L1f9406.  call temp:= `toNanos`(v13, v0) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L1f940c.  v13:= temp @kind wide;
  #L1f940e.  call temp:= `awaitNanos`(v8, v13) @signature `Ljava/util/concurrent/locks/Condition;.awaitNanos:(J)J` @kind interface;
  #L1f9414.  v13:= temp @kind wide;
  #L1f9416.  call temp:= `get`(v10) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L1f941c.  v0:= temp;
  #L1f941e.  if v0 != 0 then goto L1f9432;
  #L1f9422.  call temp:= `get`(v9) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L1f9428.  v13:= temp @kind object;
  #L1f942a.  call `unlock`(v7) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L1f9430.  return v13 @kind object;
  #L1f9432.  v0:= 0L;
  #L1f9436.  v2:= lcmp(v13, v0);
  #L1f943a.  if v2 <= 0 then goto L1f9440;
  #L1f943e.  goto L1f940e;
  #L1f9440.  v13:= new `java.lang.InterruptedException`;
  #L1f9444.  v14:= "timeout" @kind object;
  #L1f9448.  call `<init>`(v13, v14) @signature `Ljava/lang/InterruptedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1f944e.  throw v13;
  #L1f9450.  v13:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f9452.  call `unlock`(v7) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L1f9458.  throw v13;
  catch `java.lang.Throwable` @[L1f93e4..L1f93f8] goto L1f9450;
  catch `java.lang.Throwable` @[L1f9400..L1f940e] goto L1f9450;
  catch `java.lang.InterruptedException` @[L1f940e..L1f9416] goto L1f9416;
  catch `java.lang.Throwable` @[L1f940e..L1f9416] goto L1f9450;
  catch `java.lang.Throwable` @[L1f9416..L1f942a] goto L1f9450;
  catch `java.lang.Throwable` @[L1f9440..L1f9450] goto L1f9450;
}
