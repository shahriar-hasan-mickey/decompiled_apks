record `c.h.g.b$f` @kind class @AccessFlag PUBLIC {
  `android.net.Uri` `c.h.g.b$f.a` @AccessFlag PRIVATE_FINAL;
  `int` `c.h.g.b$f.b` @AccessFlag PRIVATE_FINAL;
  `int` `c.h.g.b$f.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `c.h.g.b$f.d` @AccessFlag PRIVATE_FINAL;
  `int` `c.h.g.b$f.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`c.h.g.b$f` v0 @kind this, `android.net.Uri` v1 @kind object, `int` v2 , `int` v3 , `boolean` v4 , `int` v5 ) @signature `Lc/h/g/b$f;.<init>:(Landroid/net/Uri;IIZI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1f8a2c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f8a32.  call temp:= `checkNotNull`(v1) @signature `Lc/h/i/g;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L1f8a38.  v1:= (`android.net.Uri`) v1 @kind object;
  #L1f8a3c.  v0.`c.h.g.b$f.a` @type ^`android.net.Uri` := v1 @kind object;
  #L1f8a40.  v0.`c.h.g.b$f.b` @type ^`int` := v2;
  #L1f8a44.  v0.`c.h.g.b$f.c` @type ^`int` := v3;
  #L1f8a48.  v0.`c.h.g.b$f.d` @type ^`boolean` := v4 @kind boolean;
  #L1f8a4c.  v0.`c.h.g.b$f.e` @type ^`int` := v5;
  #L1f8a50.  return @kind void;
}
procedure `int` `getResultCode`(`c.h.g.b$f` v1 @kind this) @signature `Lc/h/g/b$f;.getResultCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f89e4.  v0:= v1.`c.h.g.b$f.e` @type ^`int`;
  #L1f89e8.  return v0;
}
procedure `int` `getTtcIndex`(`c.h.g.b$f` v1 @kind this) @signature `Lc/h/g/b$f;.getTtcIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f89fc.  v0:= v1.`c.h.g.b$f.b` @type ^`int`;
  #L1f8a00.  return v0;
}
procedure `android.net.Uri` `getUri`(`c.h.g.b$f` v1 @kind this) @signature `Lc/h/g/b$f;.getUri:()Landroid/net/Uri;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f89b4.  v0:= v1.`c.h.g.b$f.a` @type ^`android.net.Uri` @kind object;
  #L1f89b8.  return v0 @kind object;
}
procedure `int` `getWeight`(`c.h.g.b$f` v1 @kind this) @signature `Lc/h/g/b$f;.getWeight:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f8a14.  v0:= v1.`c.h.g.b$f.c` @type ^`int`;
  #L1f8a18.  return v0;
}
procedure `boolean` `isItalic`(`c.h.g.b$f` v1 @kind this) @signature `Lc/h/g/b$f;.isItalic:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f89cc.  v0:= v1.`c.h.g.b$f.d` @type ^`boolean` @kind boolean;
  #L1f89d0.  return v0;
}
