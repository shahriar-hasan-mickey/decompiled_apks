record `c.h.h.e` @kind class @AccessFlag PUBLIC_FINAL {
}
global `c.h.h.d` `@@c.h.h.e.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `c.h.h.d` `@@c.h.h.e.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc/h/h/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1fa8d8.  v0:= new `c.h.h.e$e`;
  #L1fa8dc.  v1:= 0I;
  #L1fa8de.  v2:= 0I;
  #L1fa8e0.  call `<init>`(v0, v1, v2) @signature `Lc/h/h/e$e;.<init>:(Lc/h/h/e$c;Z)V` @kind direct;
  #L1fa8e6.  v0:= new `c.h.h.e$e`;
  #L1fa8ea.  v3:= 1I;
  #L1fa8ec.  call `<init>`(v0, v1, v3) @signature `Lc/h/h/e$e;.<init>:(Lc/h/h/e$c;Z)V` @kind direct;
  #L1fa8f2.  v0:= new `c.h.h.e$e`;
  #L1fa8f6.  v1:= `@@c.h.h.e$b.a` @type ^`c.h.h.e$b` @kind object;
  #L1fa8fa.  call `<init>`(v0, v1, v2) @signature `Lc/h/h/e$e;.<init>:(Lc/h/h/e$c;Z)V` @kind direct;
  #L1fa900.  `@@c.h.h.e.a` @type ^`c.h.h.d` := v0 @kind object;
  #L1fa904.  v0:= new `c.h.h.e$e`;
  #L1fa908.  v1:= `@@c.h.h.e$b.a` @type ^`c.h.h.e$b` @kind object;
  #L1fa90c.  call `<init>`(v0, v1, v3) @signature `Lc/h/h/e$e;.<init>:(Lc/h/h/e$c;Z)V` @kind direct;
  #L1fa912.  `@@c.h.h.e.b` @type ^`c.h.h.d` := v0 @kind object;
  #L1fa916.  v0:= new `c.h.h.e$e`;
  #L1fa91a.  v1:= `@@c.h.h.e$a.b` @type ^`c.h.h.e$a` @kind object;
  #L1fa91e.  call `<init>`(v0, v1, v2) @signature `Lc/h/h/e$e;.<init>:(Lc/h/h/e$c;Z)V` @kind direct;
  #L1fa924.  v0:= `@@c.h.h.e$f.b` @type ^`c.h.h.e$f` @kind object;
  #L1fa928.  return @kind void;
}
procedure `int` `a`(`int` v1 ) @signature `Lc/h/h/e;.a:(I)I` @AccessFlag STATIC {
    temp;
    v0;

  #L1fa868.  v0:= 1I;
  #L1fa86a.  if v1 == 0 then goto L1fa87e;
  #L1fa86e.  if v1 == v0 then goto L1fa87a;
  #L1fa872.  v0:= 2I;
  #L1fa874.  if v1 == v0 then goto L1fa87a;
  #L1fa878.  return v0;
  #L1fa87a.  v1:= 0I;
  #L1fa87c.  return v1;
  #L1fa87e.  return v0;
}
procedure `int` `b`(`int` v2 ) @signature `Lc/h/h/e;.b:(I)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L1fa890.  v0:= 1I;
  #L1fa892.  if v2 == 0 then goto L1fa8ac;
  #L1fa896.  if v2 == v0 then goto L1fa8a8;
  #L1fa89a.  v1:= 2I;
  #L1fa89c.  if v2 == v1 then goto L1fa8a8;
  #L1fa8a0.  goto L1fa8b0;
  #L1fa8a6.  return v1;
  #L1fa8a8.  v2:= 0I;
  #L1fa8aa.  return v2;
  #L1fa8ac.  return v0;
  #L1fa8ae.  
  #L1fa8b0.  switch v2
                  | 14 => goto L1fa8ac
                  | 15 => goto L1fa8ac
                  | 16 => goto L1fa8a8
                  | 17 => goto L1fa8a8
                  | else => goto L1fa8a6;
}
