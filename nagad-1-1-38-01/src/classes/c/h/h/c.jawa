record `c.h.h.c` @kind class @AccessFlag PUBLIC extends `android.text.Spannable` @kind interface {
  `android.text.Spannable` `c.h.h.c.f` @AccessFlag PRIVATE_FINAL;
  `c.h.h.c$a` `c.h.h.c.g` @AccessFlag PRIVATE_FINAL;
  `android.text.PrecomputedText` `c.h.h.c.h` @AccessFlag PRIVATE_FINAL;
}
procedure `char` `charAt`(`c.h.h.c` v1 @kind this, `int` v2 ) @signature `Lc/h/h/c;.charAt:(I)C` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fa434.  v0:= v1.`c.h.h.c.f` @type ^`android.text.Spannable` @kind object;
  #L1fa438.  call temp:= `charAt`(v0, v2) @signature `Landroid/text/Spannable;.charAt:(I)C` @kind interface;
  #L1fa43e.  v2:= temp;
  #L1fa440.  return v2;
}
procedure `c.h.h.c$a` `getParams`(`c.h.h.c` v1 @kind this) @signature `Lc/h/h/c;.getParams:()Lc/h/h/c$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fa41c.  v0:= v1.`c.h.h.c.g` @type ^`c.h.h.c$a` @kind object;
  #L1fa420.  return v0 @kind object;
}
procedure `android.text.PrecomputedText` `getPrecomputedText`(`c.h.h.c` v2 @kind this) @signature `Lc/h/h/c;.getPrecomputedText:()Landroid/text/PrecomputedText;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1fa3f4.  v0:= v2.`c.h.h.c.f` @type ^`android.text.Spannable` @kind object;
  #L1fa3f8.  v1:= instanceof @variable v0 @type ^`android.text.PrecomputedText` @kind boolean;
  #L1fa3fc.  if v1 == 0 then goto L1fa406;
  #L1fa400.  v0:= (`android.text.PrecomputedText`) v0 @kind object;
  #L1fa404.  return v0 @kind object;
  #L1fa406.  v0:= 0I;
  #L1fa408.  return v0 @kind object;
}
procedure `int` `getSpanEnd`(`c.h.h.c` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lc/h/h/c;.getSpanEnd:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fa454.  v0:= v1.`c.h.h.c.f` @type ^`android.text.Spannable` @kind object;
  #L1fa458.  call temp:= `getSpanEnd`(v0, v2) @signature `Landroid/text/Spannable;.getSpanEnd:(Ljava/lang/Object;)I` @kind interface;
  #L1fa45e.  v2:= temp;
  #L1fa460.  return v2;
}
procedure `int` `getSpanFlags`(`c.h.h.c` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lc/h/h/c;.getSpanFlags:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fa474.  v0:= v1.`c.h.h.c.f` @type ^`android.text.Spannable` @kind object;
  #L1fa478.  call temp:= `getSpanFlags`(v0, v2) @signature `Landroid/text/Spannable;.getSpanFlags:(Ljava/lang/Object;)I` @kind interface;
  #L1fa47e.  v2:= temp;
  #L1fa480.  return v2;
}
procedure `int` `getSpanStart`(`c.h.h.c` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lc/h/h/c;.getSpanStart:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fa494.  v0:= v1.`c.h.h.c.f` @type ^`android.text.Spannable` @kind object;
  #L1fa498.  call temp:= `getSpanStart`(v0, v2) @signature `Landroid/text/Spannable;.getSpanStart:(Ljava/lang/Object;)I` @kind interface;
  #L1fa49e.  v2:= temp;
  #L1fa4a0.  return v2;
}
procedure `java.lang.Object`[] `getSpans`(`c.h.h.c` v2 @kind this, `int` v3 , `int` v4 , `java.lang.Class` v5 @kind object) @signature `Lc/h/h/c;.getSpans:(IILjava/lang/Class;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1fa514.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1fa518.  v1:= 29I;
  #L1fa51c.  if v0 < v1 then goto L1fa52e;
  #L1fa520.  v0:= v2.`c.h.h.c.h` @type ^`android.text.PrecomputedText` @kind object;
  #L1fa524.  call temp:= `getSpans`(v0, v3, v4, v5) @signature `Landroid/text/PrecomputedText;.getSpans:(IILjava/lang/Class;)[Ljava/lang/Object;` @kind virtual;
  #L1fa52a.  v3:= temp @kind object;
  #L1fa52c.  return v3 @kind object;
  #L1fa52e.  v0:= v2.`c.h.h.c.f` @type ^`android.text.Spannable` @kind object;
  #L1fa532.  call temp:= `getSpans`(v0, v3, v4, v5) @signature `Landroid/text/Spannable;.getSpans:(IILjava/lang/Class;)[Ljava/lang/Object;` @kind interface;
  #L1fa538.  v3:= temp @kind object;
  #L1fa53a.  return v3 @kind object;
}
procedure `int` `length`(`c.h.h.c` v1 @kind this) @signature `Lc/h/h/c;.length:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fa4b4.  v0:= v1.`c.h.h.c.f` @type ^`android.text.Spannable` @kind object;
  #L1fa4b8.  call temp:= `length`(v0) @signature `Landroid/text/Spannable;.length:()I` @kind interface;
  #L1fa4be.  v0:= temp;
  #L1fa4c0.  return v0;
}
procedure `int` `nextSpanTransition`(`c.h.h.c` v1 @kind this, `int` v2 , `int` v3 , `java.lang.Class` v4 @kind object) @signature `Lc/h/h/c;.nextSpanTransition:(IILjava/lang/Class;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fa4d4.  v0:= v1.`c.h.h.c.f` @type ^`android.text.Spannable` @kind object;
  #L1fa4d8.  call temp:= `nextSpanTransition`(v0, v2, v3, v4) @signature `Landroid/text/Spannable;.nextSpanTransition:(IILjava/lang/Class;)I` @kind interface;
  #L1fa4de.  v2:= temp;
  #L1fa4e0.  return v2;
}
procedure `void` `removeSpan`(`c.h.h.c` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lc/h/h/c;.removeSpan:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1fa56c.  v0:= instanceof @variable v3 @type ^`android.text.style.MetricAffectingSpan` @kind boolean;
  #L1fa570.  if v0 != 0 then goto L1fa598;
  #L1fa574.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1fa578.  v1:= 29I;
  #L1fa57c.  if v0 < v1 then goto L1fa58c;
  #L1fa580.  v0:= v2.`c.h.h.c.h` @type ^`android.text.PrecomputedText` @kind object;
  #L1fa584.  call `removeSpan`(v0, v3) @signature `Landroid/text/PrecomputedText;.removeSpan:(Ljava/lang/Object;)V` @kind virtual;
  #L1fa58a.  goto L1fa596;
  #L1fa58c.  v0:= v2.`c.h.h.c.f` @type ^`android.text.Spannable` @kind object;
  #L1fa590.  call `removeSpan`(v0, v3) @signature `Landroid/text/Spannable;.removeSpan:(Ljava/lang/Object;)V` @kind interface;
  #L1fa596.  return @kind void;
  #L1fa598.  v3:= new `java.lang.IllegalArgumentException`;
  #L1fa59c.  v0:= "MetricAffectingSpan can not be removed from PrecomputedText." @kind object;
  #L1fa5a0.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fa5a6.  throw v3;
}
procedure `void` `setSpan`(`c.h.h.c` v2 @kind this, `java.lang.Object` v3 @kind object, `int` v4 , `int` v5 , `int` v6 ) @signature `Lc/h/h/c;.setSpan:(Ljava/lang/Object;III)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1fa5b8.  v0:= instanceof @variable v3 @type ^`android.text.style.MetricAffectingSpan` @kind boolean;
  #L1fa5bc.  if v0 != 0 then goto L1fa5e4;
  #L1fa5c0.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1fa5c4.  v1:= 29I;
  #L1fa5c8.  if v0 < v1 then goto L1fa5d8;
  #L1fa5cc.  v0:= v2.`c.h.h.c.h` @type ^`android.text.PrecomputedText` @kind object;
  #L1fa5d0.  call `setSpan`(v0, v3, v4, v5, v6) @signature `Landroid/text/PrecomputedText;.setSpan:(Ljava/lang/Object;III)V` @kind virtual;
  #L1fa5d6.  goto L1fa5e2;
  #L1fa5d8.  v0:= v2.`c.h.h.c.f` @type ^`android.text.Spannable` @kind object;
  #L1fa5dc.  call `setSpan`(v0, v3, v4, v5, v6) @signature `Landroid/text/Spannable;.setSpan:(Ljava/lang/Object;III)V` @kind interface;
  #L1fa5e2.  return @kind void;
  #L1fa5e4.  v3:= new `java.lang.IllegalArgumentException`;
  #L1fa5e8.  v4:= "MetricAffectingSpan can not be set to PrecomputedText." @kind object;
  #L1fa5ec.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fa5f2.  throw v3;
}
procedure `java.lang.CharSequence` `subSequence`(`c.h.h.c` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lc/h/h/c;.subSequence:(II)Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fa4f4.  v0:= v1.`c.h.h.c.f` @type ^`android.text.Spannable` @kind object;
  #L1fa4f8.  call temp:= `subSequence`(v0, v2, v3) @signature `Landroid/text/Spannable;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L1fa4fe.  v2:= temp @kind object;
  #L1fa500.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`c.h.h.c` v1 @kind this) @signature `Lc/h/h/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fa54c.  v0:= v1.`c.h.h.c.f` @type ^`android.text.Spannable` @kind object;
  #L1fa550.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fa556.  v0:= temp @kind object;
  #L1fa558.  return v0 @kind object;
}
