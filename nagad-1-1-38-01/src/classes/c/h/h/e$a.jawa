record `c.h.h.e$a` @kind class @AccessFlag  extends `c.h.h.e$c` @kind interface {
  `boolean` `c.h.h.e$a.a` @AccessFlag PRIVATE_FINAL;
}
global `c.h.h.e$a` `@@c.h.h.e$a.b` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc/h/h/e$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1fa66c.  v0:= new `c.h.h.e$a`;
  #L1fa670.  v1:= 1I;
  #L1fa672.  call `<init>`(v0, v1) @signature `Lc/h/h/e$a;.<init>:(Z)V` @kind direct;
  #L1fa678.  `@@c.h.h.e$a.b` @type ^`c.h.h.e$a` := v0 @kind object;
  #L1fa67c.  return @kind void;
}
procedure `void` `<init>`(`c.h.h.e$a` v0 @kind this, `boolean` v1 ) @signature `Lc/h/h/e$a;.<init>:(Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1fa690.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1fa696.  v0.`c.h.h.e$a.a` @type ^`boolean` := v1 @kind boolean;
  #L1fa69a.  return @kind void;
}
procedure `int` `checkRtl`(`c.h.h.e$a` v4 @kind this, `java.lang.CharSequence` v5 @kind object, `int` v6 , `int` v7 ) @signature `Lc/h/h/e$a;.checkRtl:(Ljava/lang/CharSequence;II)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1fa604.  v7:= v7 + v6 @kind int;
  #L1fa606.  v0:= 0I;
  #L1fa608.  v1:= 0I;
  #L1fa60a.  if v6 >= v7 then goto L1fa64e;
  #L1fa60e.  call temp:= `charAt`(v5, v6) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L1fa614.  v2:= temp;
  #L1fa616.  call temp:= `getDirectionality`(v2) @signature `Ljava/lang/Character;.getDirectionality:(C)B` @kind static;
  #L1fa61c.  v2:= temp;
  #L1fa61e.  call temp:= `a`(v2) @signature `Lc/h/h/e;.a:(I)I` @kind static;
  #L1fa624.  v2:= temp;
  #L1fa626.  v3:= 1I;
  #L1fa628.  if v2 == 0 then goto L1fa63c;
  #L1fa62c.  if v2 == v3 then goto L1fa632;
  #L1fa630.  goto L1fa648;
  #L1fa632.  v1:= v4.`c.h.h.e$a.a` @type ^`boolean` @kind boolean;
  #L1fa636.  if v1 != 0 then goto L1fa646;
  #L1fa63a.  return v3;
  #L1fa63c.  v1:= v4.`c.h.h.e$a.a` @type ^`boolean` @kind boolean;
  #L1fa640.  if v1 == 0 then goto L1fa646;
  #L1fa644.  return v0;
  #L1fa646.  v1:= 1I;
  #L1fa648.  v6:= v6 + 1;
  #L1fa64c.  goto L1fa60a;
  #L1fa64e.  if v1 == 0 then goto L1fa658;
  #L1fa652.  v5:= v4.`c.h.h.e$a.a` @type ^`boolean` @kind boolean;
  #L1fa656.  return v5;
  #L1fa658.  v5:= 2I;
  #L1fa65a.  return v5;
}
