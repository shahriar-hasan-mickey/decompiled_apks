record `c.h.h.e$f` @kind class @AccessFlag  extends `c.h.h.e$d` @kind class {
}
global `c.h.h.e$f` `@@c.h.h.e$f.b` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc/h/h/e$f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1fa82c.  v0:= new `c.h.h.e$f`;
  #L1fa830.  call `<init>`(v0) @signature `Lc/h/h/e$f;.<init>:()V` @kind direct;
  #L1fa836.  `@@c.h.h.e$f.b` @type ^`c.h.h.e$f` := v0 @kind object;
  #L1fa83a.  return @kind void;
}
procedure `void` `<init>`(`c.h.h.e$f` v1 @kind this) @signature `Lc/h/h/e$f;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1fa84c.  v0:= 0I;
  #L1fa84e.  call `<init>`(v1, v0) @signature `Lc/h/h/e$d;.<init>:(Lc/h/h/e$c;)V` @kind direct;
  #L1fa854.  return @kind void;
}
procedure `boolean` `defaultIsRtl`(`c.h.h.e$f` v2 @kind this) @signature `Lc/h/h/e$f;.defaultIsRtl:()Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1fa800.  call temp:= `getDefault`() @signature `Ljava/util/Locale;.getDefault:()Ljava/util/Locale;` @kind static;
  #L1fa806.  v0:= temp @kind object;
  #L1fa808.  call temp:= `getLayoutDirectionFromLocale`(v0) @signature `Lc/h/h/f;.getLayoutDirectionFromLocale:(Ljava/util/Locale;)I` @kind static;
  #L1fa80e.  v0:= temp;
  #L1fa810.  v1:= 1I;
  #L1fa812.  if v0 != v1 then goto L1fa818;
  #L1fa816.  goto L1fa81a;
  #L1fa818.  v1:= 0I;
  #L1fa81a.  return v1;
}
