record `c.h.h.b` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.reflect.Method` `@@c.h.h.b.a` @AccessFlag PRIVATE_STATIC;
global `java.lang.reflect.Method` `@@c.h.h.b.b` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lc/h/h/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1f980c.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1f9810.  v1:= "addLikelySubtags" @kind object;
  #L1f9814.  v2:= 0I;
  #L1f9816.  v3:= 1I;
  #L1f9818.  v4:= 21I;
  #L1f981c.  if v0 >= v4 then goto L1f987e;
  #L1f9820.  v0:= "libcore.icu.ICU" @kind object;
  #L1f9824.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L1f982a.  v0:= temp @kind object;
  #L1f982c.  if v0 == 0 then goto L1f98ba;
  #L1f9830.  v4:= "getScript" @kind object;
  #L1f9834.  v5:= new `java.lang.Class`[v3];
  #L1f9838.  v6:= constclass @type ^`java.lang.String` @kind object;
  #L1f983c.  v5[v2]:= v6 @kind object;
  #L1f9840.  call temp:= `getMethod`(v0, v4, v5) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L1f9846.  v4:= temp @kind object;
  #L1f9848.  `@@c.h.h.b.a` @type ^`java.lang.reflect.Method` := v4 @kind object;
  #L1f984c.  v3:= new `java.lang.Class`[v3];
  #L1f9850.  v4:= constclass @type ^`java.lang.String` @kind object;
  #L1f9854.  v3[v2]:= v4 @kind object;
  #L1f9858.  call temp:= `getMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L1f985e.  v0:= temp @kind object;
  #L1f9860.  `@@c.h.h.b.b` @type ^`java.lang.reflect.Method` := v0 @kind object;
  #L1f9864.  goto L1f98ba;
  #L1f9866.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L1f9868.  v1:= 0I;
  #L1f986a.  `@@c.h.h.b.a` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L1f986e.  `@@c.h.h.b.b` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L1f9872.  v1:= "ICUCompat" @kind object;
  #L1f9876.  call temp:= `w`(v1, v0) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L1f987c.  goto L1f98ba;
  #L1f987e.  v4:= 24I;
  #L1f9882.  if v0 >= v4 then goto L1f98ba;
  #L1f9886.  v0:= "libcore.icu.ICU" @kind object;
  #L1f988a.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L1f9890.  v0:= temp @kind object;
  #L1f9892.  v3:= new `java.lang.Class`[v3];
  #L1f9896.  v4:= constclass @type ^`java.util.Locale` @kind object;
  #L1f989a.  v3[v2]:= v4 @kind object;
  #L1f989e.  call temp:= `getMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L1f98a4.  v0:= temp @kind object;
  #L1f98a6.  `@@c.h.h.b.b` @type ^`java.lang.reflect.Method` := v0 @kind object;
  #L1f98aa.  goto L1f98ba;
  #L1f98ac.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L1f98ae.  v1:= new `java.lang.IllegalStateException`;
  #L1f98b2.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L1f98b8.  throw v1;
  #L1f98ba.  return @kind void;
  catch `java.lang.Exception` @[L1f9824..L1f9864] goto L1f9866;
  catch `java.lang.Exception` @[L1f988a..L1f98aa] goto L1f98ac;
}
procedure `java.lang.String` `a`(`java.lang.String` v4 @kind object) @signature `Lc/h/h/b;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1f96fc.  v0:= "ICUCompat" @kind object;
  #L1f9700.  v1:= 0I;
  #L1f9702.  v2:= `@@c.h.h.b.a` @type ^`java.lang.reflect.Method` @kind object;
  #L1f9706.  if v2 == 0 then goto L1f973a;
  #L1f970a.  v2:= 1I;
  #L1f970c.  v2:= new `java.lang.Object`[v2];
  #L1f9710.  v3:= 0I;
  #L1f9712.  v2[v3]:= v4 @kind object;
  #L1f9716.  v4:= `@@c.h.h.b.a` @type ^`java.lang.reflect.Method` @kind object;
  #L1f971a.  call temp:= `invoke`(v4, v1, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1f9720.  v4:= temp @kind object;
  #L1f9722.  v4:= (`java.lang.String`) v4 @kind object;
  #L1f9726.  return v4 @kind object;
  #L1f9728.  v4:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L1f972a.  call temp:= `w`(v0, v4) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L1f9730.  goto L1f973a;
  #L1f9732.  v4:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L1f9734.  call temp:= `w`(v0, v4) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L1f973a.  return v1 @kind object;
  catch `java.lang.IllegalAccessException` @[L1f9702..L1f9726] goto L1f9732;
  catch `java.lang.reflect.InvocationTargetException` @[L1f9702..L1f9726] goto L1f9728;
}
procedure `java.lang.String` `a`(`java.util.Locale` v4 @kind object) @signature `Lc/h/h/b;.a:(Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1f9694.  v0:= "ICUCompat" @kind object;
  #L1f9698.  call temp:= `toString`(v4) @signature `Ljava/util/Locale;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f969e.  v4:= temp @kind object;
  #L1f96a0.  v1:= `@@c.h.h.b.b` @type ^`java.lang.reflect.Method` @kind object;
  #L1f96a4.  if v1 == 0 then goto L1f96da;
  #L1f96a8.  v1:= 1I;
  #L1f96aa.  v1:= new `java.lang.Object`[v1];
  #L1f96ae.  v2:= 0I;
  #L1f96b0.  v1[v2]:= v4 @kind object;
  #L1f96b4.  v2:= `@@c.h.h.b.b` @type ^`java.lang.reflect.Method` @kind object;
  #L1f96b8.  v3:= 0I;
  #L1f96ba.  call temp:= `invoke`(v2, v3, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1f96c0.  v1:= temp @kind object;
  #L1f96c2.  v1:= (`java.lang.String`) v1 @kind object;
  #L1f96c6.  return v1 @kind object;
  #L1f96c8.  v1:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L1f96ca.  call temp:= `w`(v0, v1) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L1f96d0.  goto L1f96da;
  #L1f96d2.  v1:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L1f96d4.  call temp:= `w`(v0, v1) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L1f96da.  return v4 @kind object;
  catch `java.lang.IllegalAccessException` @[L1f96a0..L1f96c6] goto L1f96d2;
  catch `java.lang.reflect.InvocationTargetException` @[L1f96a0..L1f96c6] goto L1f96c8;
}
procedure `java.lang.String` `maximizeAndGetScript`(`java.util.Locale` v4 @kind object) @signature `Lc/h/h/b;.maximizeAndGetScript:(Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1f975c.  v0:= "ICUCompat" @kind object;
  #L1f9760.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1f9764.  v2:= 24I;
  #L1f9768.  if v1 < v2 then goto L1f9786;
  #L1f976c.  call temp:= `forLocale`(v4) @signature `Landroid/icu/util/ULocale;.forLocale:(Ljava/util/Locale;)Landroid/icu/util/ULocale;` @kind static;
  #L1f9772.  v4:= temp @kind object;
  #L1f9774.  call temp:= `addLikelySubtags`(v4) @signature `Landroid/icu/util/ULocale;.addLikelySubtags:(Landroid/icu/util/ULocale;)Landroid/icu/util/ULocale;` @kind static;
  #L1f977a.  v4:= temp @kind object;
  #L1f977c.  call temp:= `getScript`(v4) @signature `Landroid/icu/util/ULocale;.getScript:()Ljava/lang/String;` @kind virtual;
  #L1f9782.  v4:= temp @kind object;
  #L1f9784.  return v4 @kind object;
  #L1f9786.  v2:= 21I;
  #L1f978a.  v3:= 0I;
  #L1f978c.  if v1 < v2 then goto L1f97d2;
  #L1f9790.  v1:= 1I;
  #L1f9792.  v1:= new `java.lang.Object`[v1];
  #L1f9796.  v2:= 0I;
  #L1f9798.  v1[v2]:= v4 @kind object;
  #L1f979c.  v2:= `@@c.h.h.b.b` @type ^`java.lang.reflect.Method` @kind object;
  #L1f97a0.  call temp:= `invoke`(v2, v3, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1f97a6.  v1:= temp @kind object;
  #L1f97a8.  v1:= (`java.util.Locale`) v1 @kind object;
  #L1f97ac.  call temp:= `getScript`(v1) @signature `Ljava/util/Locale;.getScript:()Ljava/lang/String;` @kind virtual;
  #L1f97b2.  v4:= temp @kind object;
  #L1f97b4.  return v4 @kind object;
  #L1f97b6.  v1:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L1f97b8.  call temp:= `w`(v0, v1) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L1f97be.  goto L1f97c8;
  #L1f97c0.  v1:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L1f97c2.  call temp:= `w`(v0, v1) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L1f97c8.  call temp:= `getScript`(v4) @signature `Ljava/util/Locale;.getScript:()Ljava/lang/String;` @kind virtual;
  #L1f97ce.  v4:= temp @kind object;
  #L1f97d0.  return v4 @kind object;
  #L1f97d2.  call temp:= `a`(v4) @signature `Lc/h/h/b;.a:(Ljava/util/Locale;)Ljava/lang/String;` @kind static;
  #L1f97d8.  v4:= temp @kind object;
  #L1f97da.  if v4 == 0 then goto L1f97e8;
  #L1f97de.  call temp:= `a`(v4) @signature `Lc/h/h/b;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L1f97e4.  v4:= temp @kind object;
  #L1f97e6.  return v4 @kind object;
  #L1f97e8.  return v3 @kind object;
  catch `java.lang.reflect.InvocationTargetException` @[L1f9792..L1f97b4] goto L1f97c0;
  catch `java.lang.IllegalAccessException` @[L1f9792..L1f97b4] goto L1f97b6;
}
