record `c.h.d.b` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `c.h.d.b.a` @AccessFlag PUBLIC_FINAL;
  `int` `c.h.d.b.b` @AccessFlag PUBLIC_FINAL;
  `int` `c.h.d.b.c` @AccessFlag PUBLIC_FINAL;
  `int` `c.h.d.b.d` @AccessFlag PUBLIC_FINAL;
}
global `c.h.d.b` `@@c.h.d.b.e` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc/h/d/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1f2c18.  v0:= new `c.h.d.b`;
  #L1f2c1c.  v1:= 0I;
  #L1f2c1e.  call `<init>`(v0, v1, v1, v1, v1) @signature `Lc/h/d/b;.<init>:(IIII)V` @kind direct;
  #L1f2c24.  `@@c.h.d.b.e` @type ^`c.h.d.b` := v0 @kind object;
  #L1f2c28.  return @kind void;
}
procedure `void` `<init>`(`c.h.d.b` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lc/h/d/b;.<init>:(IIII)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1f2c3c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f2c42.  v0.`c.h.d.b.a` @type ^`int` := v1;
  #L1f2c46.  v0.`c.h.d.b.b` @type ^`int` := v2;
  #L1f2c4a.  v0.`c.h.d.b.c` @type ^`int` := v3;
  #L1f2c4e.  v0.`c.h.d.b.d` @type ^`int` := v4;
  #L1f2c52.  return @kind void;
}
procedure `c.h.d.b` `of`(`int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lc/h/d/b;.of:(IIII)Lc/h/d/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1f2ac0.  if v1 != 0 then goto L1f2ad6;
  #L1f2ac4.  if v2 != 0 then goto L1f2ad6;
  #L1f2ac8.  if v3 != 0 then goto L1f2ad6;
  #L1f2acc.  if v4 != 0 then goto L1f2ad6;
  #L1f2ad0.  v1:= `@@c.h.d.b.e` @type ^`c.h.d.b` @kind object;
  #L1f2ad4.  return v1 @kind object;
  #L1f2ad6.  v0:= new `c.h.d.b`;
  #L1f2ada.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lc/h/d/b;.<init>:(IIII)V` @kind direct;
  #L1f2ae0.  return v0 @kind object;
}
procedure `boolean` `equals`(`c.h.d.b` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lc/h/d/b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1f2af4.  v0:= 1I;
  #L1f2af6.  if v4 != v5 then goto L1f2afc;
  #L1f2afa.  return v0;
  #L1f2afc.  v1:= 0I;
  #L1f2afe.  if v5 == 0 then goto L1f2b52;
  #L1f2b02.  v2:= constclass @type ^`c.h.d.b` @kind object;
  #L1f2b06.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1f2b0c.  v3:= temp @kind object;
  #L1f2b0e.  if v2 == v3 then goto L1f2b14;
  #L1f2b12.  goto L1f2b52;
  #L1f2b14.  v5:= (`c.h.d.b`) v5 @kind object;
  #L1f2b18.  v2:= v4.`c.h.d.b.d` @type ^`int`;
  #L1f2b1c.  v3:= v5.`c.h.d.b.d` @type ^`int`;
  #L1f2b20.  if v2 == v3 then goto L1f2b26;
  #L1f2b24.  return v1;
  #L1f2b26.  v2:= v4.`c.h.d.b.a` @type ^`int`;
  #L1f2b2a.  v3:= v5.`c.h.d.b.a` @type ^`int`;
  #L1f2b2e.  if v2 == v3 then goto L1f2b34;
  #L1f2b32.  return v1;
  #L1f2b34.  v2:= v4.`c.h.d.b.c` @type ^`int`;
  #L1f2b38.  v3:= v5.`c.h.d.b.c` @type ^`int`;
  #L1f2b3c.  if v2 == v3 then goto L1f2b42;
  #L1f2b40.  return v1;
  #L1f2b42.  v2:= v4.`c.h.d.b.b` @type ^`int`;
  #L1f2b46.  v5:= v5.`c.h.d.b.b` @type ^`int`;
  #L1f2b4a.  if v2 == v5 then goto L1f2b50;
  #L1f2b4e.  return v1;
  #L1f2b50.  return v0;
  #L1f2b52.  return v1;
}
procedure `int` `hashCode`(`c.h.d.b` v2 @kind this) @signature `Lc/h/d/b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1f2b64.  v0:= v2.`c.h.d.b.a` @type ^`int`;
  #L1f2b68.  v0:= v0 * 31;
  #L1f2b6c.  v1:= v2.`c.h.d.b.b` @type ^`int`;
  #L1f2b70.  v0:= v0 + v1 @kind int;
  #L1f2b72.  v0:= v0 * 31;
  #L1f2b76.  v1:= v2.`c.h.d.b.c` @type ^`int`;
  #L1f2b7a.  v0:= v0 + v1 @kind int;
  #L1f2b7c.  v0:= v0 * 31;
  #L1f2b80.  v1:= v2.`c.h.d.b.d` @type ^`int`;
  #L1f2b84.  v0:= v0 + v1 @kind int;
  #L1f2b86.  return v0;
}
procedure `android.graphics.Insets` `toPlatformInsets`(`c.h.d.b` v4 @kind this) @signature `Lc/h/d/b;.toPlatformInsets:()Landroid/graphics/Insets;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1f2a94.  v0:= v4.`c.h.d.b.a` @type ^`int`;
  #L1f2a98.  v1:= v4.`c.h.d.b.b` @type ^`int`;
  #L1f2a9c.  v2:= v4.`c.h.d.b.c` @type ^`int`;
  #L1f2aa0.  v3:= v4.`c.h.d.b.d` @type ^`int`;
  #L1f2aa4.  call temp:= `of`(v0, v1, v2, v3) @signature `Landroid/graphics/Insets;.of:(IIII)Landroid/graphics/Insets;` @kind static;
  #L1f2aaa.  v0:= temp @kind object;
  #L1f2aac.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`c.h.d.b` v2 @kind this) @signature `Lc/h/d/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1f2b98.  v0:= new `java.lang.StringBuilder`;
  #L1f2b9c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f2ba2.  v1:= "Insets{left=" @kind object;
  #L1f2ba6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f2bac.  v1:= v2.`c.h.d.b.a` @type ^`int`;
  #L1f2bb0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f2bb6.  v1:= ", top=" @kind object;
  #L1f2bba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f2bc0.  v1:= v2.`c.h.d.b.b` @type ^`int`;
  #L1f2bc4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f2bca.  v1:= ", right=" @kind object;
  #L1f2bce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f2bd4.  v1:= v2.`c.h.d.b.c` @type ^`int`;
  #L1f2bd8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f2bde.  v1:= ", bottom=" @kind object;
  #L1f2be2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f2be8.  v1:= v2.`c.h.d.b.d` @type ^`int`;
  #L1f2bec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f2bf2.  v1:= 125I;
  #L1f2bf6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f2bfc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f2c02.  v0:= temp @kind object;
  #L1f2c04.  return v0 @kind object;
}
