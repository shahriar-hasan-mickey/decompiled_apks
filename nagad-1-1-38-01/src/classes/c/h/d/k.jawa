record `c.h.d.k` @kind class @AccessFlag PUBLIC {
}
procedure `java.nio.ByteBuffer` `a`(`java.io.File` v7 @kind object) @signature `Lc/h/d/k;.a:(Ljava/io/File;)Ljava/nio/ByteBuffer;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1f5934.  v0:= new `java.io.FileInputStream`;
  #L1f5938.  call `<init>`(v0, v7) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L1f593e.  call temp:= `getChannel`(v0) @signature `Ljava/io/FileInputStream;.getChannel:()Ljava/nio/channels/FileChannel;` @kind virtual;
  #L1f5944.  v1:= temp @kind object;
  #L1f5946.  call temp:= `size`(v1) @signature `Ljava/nio/channels/FileChannel;.size:()J` @kind virtual;
  #L1f594c.  v5:= temp @kind wide;
  #L1f594e.  v2:= `@@java.nio.channels.FileChannel$MapMode.READ_ONLY` @type ^`java.nio.channels.FileChannel$MapMode` @kind object;
  #L1f5952.  v3:= 0L;
  #L1f5956.  call temp:= `map`(v1, v2, v3, v5) @signature `Ljava/nio/channels/FileChannel;.map:(Ljava/nio/channels/FileChannel$MapMode;JJ)Ljava/nio/MappedByteBuffer;` @kind virtual;
  #L1f595c.  v7:= temp @kind object;
  #L1f595e.  call `close`(v0) @signature `Ljava/io/FileInputStream;.close:()V` @kind virtual;
  #L1f5964.  return v7 @kind object;
  #L1f5966.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f5968.  call `close`(v0) @signature `Ljava/io/FileInputStream;.close:()V` @kind virtual;
  #L1f596e.  goto L1f5978;
  #L1f5970.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f5972.  call `addSuppressed`(v7, v0) @signature `Ljava/lang/Throwable;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1f5978.  throw v7;
  #L1f597a.  v7:= 0I;
  #L1f597c.  return v7 @kind object;
  catch `java.io.IOException` @[L1f5934..L1f593e] goto L1f597a;
  catch `java.lang.Throwable` @[L1f593e..L1f595e] goto L1f5966;
  catch `java.io.IOException` @[L1f595e..L1f5964] goto L1f597a;
  catch `java.lang.Throwable` @[L1f5968..L1f596e] goto L1f5970;
  catch `java.io.IOException` @[L1f5972..L1f597a] goto L1f597a;
}
procedure `void` `closeQuietly`(`java.io.Closeable` v0 @kind object) @signature `Lc/h/d/k;.closeQuietly:(Ljava/io/Closeable;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1f59c4.  if v0 == 0 then goto L1f59ce;
  #L1f59c8.  call `close`(v0) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #L1f59ce.  return @kind void;
  catch `java.io.IOException` @[L1f59c8..L1f59ce] goto L1f59ce;
}
procedure `java.nio.ByteBuffer` `copyToDirectBuffer`(`android.content.Context` v1 @kind object, `android.content.res.Resources` v2 @kind object, `int` v3 ) @signature `Lc/h/d/k;.copyToDirectBuffer:(Landroid/content/Context;Landroid/content/res/Resources;I)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1f57d0.  call temp:= `getTempFile`(v1) @signature `Lc/h/d/k;.getTempFile:(Landroid/content/Context;)Ljava/io/File;` @kind static;
  #L1f57d6.  v1:= temp @kind object;
  #L1f57d8.  v0:= 0I;
  #L1f57da.  if v1 != 0 then goto L1f57e0;
  #L1f57de.  return v0 @kind object;
  #L1f57e0.  call temp:= `copyToFile`(v1, v2, v3) @signature `Lc/h/d/k;.copyToFile:(Ljava/io/File;Landroid/content/res/Resources;I)Z` @kind static;
  #L1f57e6.  v2:= temp;
  #L1f57e8.  if v2 != 0 then goto L1f57f4;
  #L1f57ec.  call temp:= `delete`(v1) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L1f57f2.  return v0 @kind object;
  #L1f57f4.  call temp:= `a`(v1) @signature `Lc/h/d/k;.a:(Ljava/io/File;)Ljava/nio/ByteBuffer;` @kind static;
  #L1f57fa.  v2:= temp @kind object;
  #L1f57fc.  call temp:= `delete`(v1) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L1f5802.  return v2 @kind object;
  #L1f5804.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f5806.  call temp:= `delete`(v1) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L1f580c.  throw v2;
  catch `java.lang.Throwable` @[L1f57e0..L1f57e8] goto L1f5804;
  catch `java.lang.Throwable` @[L1f57f4..L1f57fc] goto L1f5804;
}
procedure `boolean` `copyToFile`(`java.io.File` v0 @kind object, `android.content.res.Resources` v1 @kind object, `int` v2 ) @signature `Lc/h/d/k;.copyToFile:(Ljava/io/File;Landroid/content/res/Resources;I)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1f55e0.  call temp:= `openRawResource`(v1, v2) @signature `Landroid/content/res/Resources;.openRawResource:(I)Ljava/io/InputStream;` @kind virtual;
  #L1f55e6.  v1:= temp @kind object;
  #L1f55e8.  call temp:= `copyToFile`(v0, v1) @signature `Lc/h/d/k;.copyToFile:(Ljava/io/File;Ljava/io/InputStream;)Z` @kind static;
  #L1f55ee.  v0:= temp;
  #L1f55f0.  call `closeQuietly`(v1) @signature `Lc/h/d/k;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1f55f6.  return v0;
  #L1f55f8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f55fa.  goto L1f5600;
  #L1f55fc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f55fe.  v1:= 0I;
  #L1f5600.  call `closeQuietly`(v1) @signature `Lc/h/d/k;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1f5606.  throw v0;
  catch `java.lang.Throwable` @[L1f55e0..L1f55e8] goto L1f55fc;
  catch `java.lang.Throwable` @[L1f55e8..L1f55f0] goto L1f55f8;
}
procedure `boolean` `copyToFile`(`java.io.File` v5 @kind object, `java.io.InputStream` v6 @kind object) @signature `Lc/h/d/k;.copyToFile:(Ljava/io/File;Ljava/io/InputStream;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1f5630.  call temp:= `allowThreadDiskWrites`() @signature `Landroid/os/StrictMode;.allowThreadDiskWrites:()Landroid/os/StrictMode$ThreadPolicy;` @kind static;
  #L1f5636.  v0:= temp @kind object;
  #L1f5638.  v1:= 0I;
  #L1f563a.  v2:= 0I;
  #L1f563c.  v3:= new `java.io.FileOutputStream`;
  #L1f5640.  call `<init>`(v3, v5, v1) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;Z)V` @kind direct;
  #L1f5646.  v5:= 1024I;
  #L1f564a.  v5:= new `byte`[v5];
  #L1f564e.  call temp:= `read`(v6, v5) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L1f5654.  v2:= temp;
  #L1f5656.  v4:= -1I;
  #L1f5658.  if v2 == v4 then goto L1f5664;
  #L1f565c.  call `write`(v3, v5, v1, v2) @signature `Ljava/io/FileOutputStream;.write:([BII)V` @kind virtual;
  #L1f5662.  goto L1f564e;
  #L1f5664.  v5:= 1I;
  #L1f5666.  call `closeQuietly`(v3) @signature `Lc/h/d/k;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1f566c.  call `setThreadPolicy`(v0) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L1f5672.  return v5;
  #L1f5674.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f5676.  v2:= v3 @kind object;
  #L1f5678.  goto L1f56c8;
  #L1f567a.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L1f567c.  v2:= v3 @kind object;
  #L1f567e.  goto L1f5686;
  #L1f5680.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f5682.  goto L1f56c8;
  #L1f5684.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L1f5686.  v6:= "TypefaceCompatUtil" @kind object;
  #L1f568a.  v3:= new `java.lang.StringBuilder`;
  #L1f568e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f5694.  v4:= "Error copying resource contents to temp file: " @kind object;
  #L1f5698.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f569e.  call temp:= `getMessage`(v5) @signature `Ljava/io/IOException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L1f56a4.  v5:= temp @kind object;
  #L1f56a6.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f56ac.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f56b2.  v5:= temp @kind object;
  #L1f56b4.  call temp:= `e`(v6, v5) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1f56ba.  call `closeQuietly`(v2) @signature `Lc/h/d/k;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1f56c0.  call `setThreadPolicy`(v0) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L1f56c6.  return v1;
  #L1f56c8.  call `closeQuietly`(v2) @signature `Lc/h/d/k;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L1f56ce.  call `setThreadPolicy`(v0) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L1f56d4.  throw v5;
  catch `java.io.IOException` @[L1f563c..L1f5646] goto L1f5684;
  catch `java.lang.Throwable` @[L1f563c..L1f5646] goto L1f5680;
  catch `java.io.IOException` @[L1f564a..L1f5662] goto L1f567a;
  catch `java.lang.Throwable` @[L1f564a..L1f5662] goto L1f5674;
  catch `java.lang.Throwable` @[L1f5686..L1f56ba] goto L1f5680;
}
procedure `java.io.File` `getTempFile`(`android.content.Context` v5 @kind object) @signature `Lc/h/d/k;.getTempFile:(Landroid/content/Context;)Ljava/io/File;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1f5710.  call temp:= `getCacheDir`(v5) @signature `Landroid/content/Context;.getCacheDir:()Ljava/io/File;` @kind virtual;
  #L1f5716.  v5:= temp @kind object;
  #L1f5718.  v0:= 0I;
  #L1f571a.  if v5 != 0 then goto L1f5720;
  #L1f571e.  return v0 @kind object;
  #L1f5720.  v1:= new `java.lang.StringBuilder`;
  #L1f5724.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f572a.  v2:= ".font" @kind object;
  #L1f572e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f5734.  call temp:= `myPid`() @signature `Landroid/os/Process;.myPid:()I` @kind static;
  #L1f573a.  v2:= temp;
  #L1f573c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f5742.  v2:= "-" @kind object;
  #L1f5746.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f574c.  call temp:= `myTid`() @signature `Landroid/os/Process;.myTid:()I` @kind static;
  #L1f5752.  v3:= temp;
  #L1f5754.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f575a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f5760.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f5766.  v1:= temp @kind object;
  #L1f5768.  v2:= 0I;
  #L1f576a.  v3:= 100I;
  #L1f576e.  if v2 >= v3 then goto L1f57ae;
  #L1f5772.  v3:= new `java.io.File`;
  #L1f5776.  v4:= new `java.lang.StringBuilder`;
  #L1f577a.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1f5780.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f5786.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1f578c.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1f5792.  v4:= temp @kind object;
  #L1f5794.  call `<init>`(v3, v5, v4) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L1f579a.  call temp:= `createNewFile`(v3) @signature `Ljava/io/File;.createNewFile:()Z` @kind virtual;
  #L1f57a0.  v4:= temp;
  #L1f57a2.  if v4 == 0 then goto L1f57a8;
  #L1f57a6.  return v3 @kind object;
  #L1f57a8.  v2:= v2 + 1;
  #L1f57ac.  goto L1f576a;
  #L1f57ae.  return v0 @kind object;
  catch `java.io.IOException` @[L1f579a..L1f57a2] goto L1f57a8;
}
procedure `java.nio.ByteBuffer` `mmap`(`android.content.Context` v7 @kind object, `android.os.CancellationSignal` v8 @kind object, `android.net.Uri` v9 @kind object) @signature `Lc/h/d/k;.mmap:(Landroid/content/Context;Landroid/os/CancellationSignal;Landroid/net/Uri;)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1f5834.  call temp:= `getContentResolver`(v7) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L1f583a.  v7:= temp @kind object;
  #L1f583c.  v0:= 0I;
  #L1f583e.  v1:= "r" @kind object;
  #L1f5842.  call temp:= `openFileDescriptor`(v7, v9, v1, v8) @signature `Landroid/content/ContentResolver;.openFileDescriptor:(Landroid/net/Uri;Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/os/ParcelFileDescriptor;` @kind virtual;
  #L1f5848.  v7:= temp @kind object;
  #L1f584a.  if v7 != 0 then goto L1f585a;
  #L1f584e.  if v7 == 0 then goto L1f5858;
  #L1f5852.  call `close`(v7) @signature `Landroid/os/ParcelFileDescriptor;.close:()V` @kind virtual;
  #L1f5858.  return v0 @kind object;
  #L1f585a.  v8:= new `java.io.FileInputStream`;
  #L1f585e.  call temp:= `getFileDescriptor`(v7) @signature `Landroid/os/ParcelFileDescriptor;.getFileDescriptor:()Ljava/io/FileDescriptor;` @kind virtual;
  #L1f5864.  v9:= temp @kind object;
  #L1f5866.  call `<init>`(v8, v9) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/FileDescriptor;)V` @kind direct;
  #L1f586c.  call temp:= `getChannel`(v8) @signature `Ljava/io/FileInputStream;.getChannel:()Ljava/nio/channels/FileChannel;` @kind virtual;
  #L1f5872.  v1:= temp @kind object;
  #L1f5874.  call temp:= `size`(v1) @signature `Ljava/nio/channels/FileChannel;.size:()J` @kind virtual;
  #L1f587a.  v5:= temp @kind wide;
  #L1f587c.  v2:= `@@java.nio.channels.FileChannel$MapMode.READ_ONLY` @type ^`java.nio.channels.FileChannel$MapMode` @kind object;
  #L1f5880.  v3:= 0L;
  #L1f5884.  call temp:= `map`(v1, v2, v3, v5) @signature `Ljava/nio/channels/FileChannel;.map:(Ljava/nio/channels/FileChannel$MapMode;JJ)Ljava/nio/MappedByteBuffer;` @kind virtual;
  #L1f588a.  v9:= temp @kind object;
  #L1f588c.  call `close`(v8) @signature `Ljava/io/FileInputStream;.close:()V` @kind virtual;
  #L1f5892.  if v7 == 0 then goto L1f589c;
  #L1f5896.  call `close`(v7) @signature `Landroid/os/ParcelFileDescriptor;.close:()V` @kind virtual;
  #L1f589c.  return v9 @kind object;
  #L1f589e.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f58a0.  call `close`(v8) @signature `Ljava/io/FileInputStream;.close:()V` @kind virtual;
  #L1f58a6.  goto L1f58b0;
  #L1f58a8.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f58aa.  call `addSuppressed`(v9, v8) @signature `Ljava/lang/Throwable;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1f58b0.  throw v9;
  #L1f58b2.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f58b4.  if v7 == 0 then goto L1f58c8;
  #L1f58b8.  call `close`(v7) @signature `Landroid/os/ParcelFileDescriptor;.close:()V` @kind virtual;
  #L1f58be.  goto L1f58c8;
  #L1f58c0.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1f58c2.  call `addSuppressed`(v8, v7) @signature `Ljava/lang/Throwable;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L1f58c8.  throw v8;
  #L1f58ca.  return v0 @kind object;
  catch `java.io.IOException` @[L1f583e..L1f5858] goto L1f58ca;
  catch `java.lang.Throwable` @[L1f585a..L1f586c] goto L1f58b2;
  catch `java.lang.Throwable` @[L1f586c..L1f588c] goto L1f589e;
  catch `java.lang.Throwable` @[L1f588c..L1f5892] goto L1f58b2;
  catch `java.io.IOException` @[L1f5896..L1f589c] goto L1f58ca;
  catch `java.lang.Throwable` @[L1f58a0..L1f58a6] goto L1f58a8;
  catch `java.lang.Throwable` @[L1f58aa..L1f58b2] goto L1f58b2;
  catch `java.lang.Throwable` @[L1f58b8..L1f58be] goto L1f58c0;
  catch `java.io.IOException` @[L1f58c2..L1f58ca] goto L1f58ca;
}
