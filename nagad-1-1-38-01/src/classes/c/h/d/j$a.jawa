record `c.h.d.j$a` @kind class @AccessFlag  extends `c.h.d.j$c` @kind interface {
}
procedure `void` `<init>`(`c.h.d.j$a` v0 @kind this, `c.h.d.j` v1 @kind object) @signature `Lc/h/d/j$a;.<init>:(Lc/h/d/j;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1f5184.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1f518a.  return @kind void;
}
procedure `int` `getWeight`(`c.h.d.j$a` v0 @kind this, `c.h.g.b$f` v1 @kind object) @signature `Lc/h/d/j$a;.getWeight:(Lc/h/g/b$f;)I` @AccessFlag PUBLIC {
    temp;

  #L1f5148.  call temp:= `getWeight`(v1) @signature `Lc/h/g/b$f;.getWeight:()I` @kind virtual;
  #L1f514e.  v1:= temp;
  #L1f5150.  return v1;
}
procedure `int` `getWeight`(`c.h.d.j$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lc/h/d/j$a;.getWeight:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1f5164.  v1:= (`c.h.g.b$f`) v1 @kind object;
  #L1f5168.  call temp:= `getWeight`(v0, v1) @signature `Lc/h/d/j$a;.getWeight:(Lc/h/g/b$f;)I` @kind virtual;
  #L1f516e.  v1:= temp;
  #L1f5170.  return v1;
}
procedure `boolean` `isItalic`(`c.h.d.j$a` v0 @kind this, `c.h.g.b$f` v1 @kind object) @signature `Lc/h/d/j$a;.isItalic:(Lc/h/g/b$f;)Z` @AccessFlag PUBLIC {
    temp;

  #L1f510c.  call temp:= `isItalic`(v1) @signature `Lc/h/g/b$f;.isItalic:()Z` @kind virtual;
  #L1f5112.  v1:= temp;
  #L1f5114.  return v1;
}
procedure `boolean` `isItalic`(`c.h.d.j$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lc/h/d/j$a;.isItalic:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L1f5128.  v1:= (`c.h.g.b$f`) v1 @kind object;
  #L1f512c.  call temp:= `isItalic`(v0, v1) @signature `Lc/h/d/j$a;.isItalic:(Lc/h/g/b$f;)Z` @kind virtual;
  #L1f5132.  v1:= temp;
  #L1f5134.  return v1;
}
