record `c.h.j.e0$i` @kind class @AccessFlag  {
  `c.h.j.e0` `c.h.j.e0$i.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`c.h.j.e0$i` v0 @kind this, `c.h.j.e0` v1 @kind object) @signature `Lc/h/j/e0$i;.<init>:(Lc/h/j/e0;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1ff828.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ff82e.  v0.`c.h.j.e0$i.a` @type ^`c.h.j.e0` := v1 @kind object;
  #L1ff832.  return @kind void;
}
procedure `c.h.j.e0` `a`(`c.h.j.e0$i` v1 @kind this) @signature `Lc/h/j/e0$i;.a:()Lc/h/j/e0;` @AccessFlag  {
    temp;
    v0;

  #L1ff67c.  v0:= v1.`c.h.j.e0$i.a` @type ^`c.h.j.e0` @kind object;
  #L1ff680.  return v0 @kind object;
}
procedure `c.h.j.e0` `a`(`c.h.j.e0$i` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lc/h/j/e0$i;.a:(IIII)Lc/h/j/e0;` @AccessFlag  {
    temp;

  #L1ff6c4.  v1:= `@@c.h.j.e0.b` @type ^`c.h.j.e0` @kind object;
  #L1ff6c8.  return v1 @kind object;
}
procedure `c.h.j.e0` `b`(`c.h.j.e0$i` v1 @kind this) @signature `Lc/h/j/e0$i;.b:()Lc/h/j/e0;` @AccessFlag  {
    temp;
    v0;

  #L1ff694.  v0:= v1.`c.h.j.e0$i.a` @type ^`c.h.j.e0` @kind object;
  #L1ff698.  return v0 @kind object;
}
procedure `c.h.j.e0` `c`(`c.h.j.e0$i` v1 @kind this) @signature `Lc/h/j/e0$i;.c:()Lc/h/j/e0;` @AccessFlag  {
    temp;
    v0;

  #L1ff6ac.  v0:= v1.`c.h.j.e0$i.a` @type ^`c.h.j.e0` @kind object;
  #L1ff6b0.  return v0 @kind object;
}
procedure `c.h.j.c` `d`(`c.h.j.e0$i` v1 @kind this) @signature `Lc/h/j/e0$i;.d:()Lc/h/j/c;` @AccessFlag  {
    temp;
    v0;

  #L1ff668.  v0:= 0I;
  #L1ff66a.  return v0 @kind object;
}
procedure `c.h.d.b` `e`(`c.h.j.e0$i` v1 @kind this) @signature `Lc/h/j/e0$i;.e:()Lc/h/d/b;` @AccessFlag  {
    temp;
    v0;

  #L1ff638.  v0:= `@@c.h.d.b.e` @type ^`c.h.d.b` @kind object;
  #L1ff63c.  return v0 @kind object;
}
procedure `boolean` `equals`(`c.h.j.e0$i` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lc/h/j/e0$i;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ff6dc.  v0:= 1I;
  #L1ff6de.  if v4 != v5 then goto L1ff6e4;
  #L1ff6e2.  return v0;
  #L1ff6e4.  v1:= instanceof @variable v5 @type ^`c.h.j.e0$i` @kind boolean;
  #L1ff6e8.  v2:= 0I;
  #L1ff6ea.  if v1 != 0 then goto L1ff6f0;
  #L1ff6ee.  return v2;
  #L1ff6f0.  v5:= (`c.h.j.e0$i`) v5 @kind object;
  #L1ff6f4.  call temp:= `h`(v4) @signature `Lc/h/j/e0$i;.h:()Z` @kind virtual;
  #L1ff6fa.  v1:= temp;
  #L1ff6fc.  call temp:= `h`(v5) @signature `Lc/h/j/e0$i;.h:()Z` @kind virtual;
  #L1ff702.  v3:= temp;
  #L1ff704.  if v1 != v3 then goto L1ff772;
  #L1ff708.  call temp:= `g`(v4) @signature `Lc/h/j/e0$i;.g:()Z` @kind virtual;
  #L1ff70e.  v1:= temp;
  #L1ff710.  call temp:= `g`(v5) @signature `Lc/h/j/e0$i;.g:()Z` @kind virtual;
  #L1ff716.  v3:= temp;
  #L1ff718.  if v1 != v3 then goto L1ff772;
  #L1ff71c.  call temp:= `f`(v4) @signature `Lc/h/j/e0$i;.f:()Lc/h/d/b;` @kind virtual;
  #L1ff722.  v1:= temp @kind object;
  #L1ff724.  call temp:= `f`(v5) @signature `Lc/h/j/e0$i;.f:()Lc/h/d/b;` @kind virtual;
  #L1ff72a.  v3:= temp @kind object;
  #L1ff72c.  call temp:= `equals`(v1, v3) @signature `Lc/h/i/c;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1ff732.  v1:= temp;
  #L1ff734.  if v1 == 0 then goto L1ff772;
  #L1ff738.  call temp:= `e`(v4) @signature `Lc/h/j/e0$i;.e:()Lc/h/d/b;` @kind virtual;
  #L1ff73e.  v1:= temp @kind object;
  #L1ff740.  call temp:= `e`(v5) @signature `Lc/h/j/e0$i;.e:()Lc/h/d/b;` @kind virtual;
  #L1ff746.  v3:= temp @kind object;
  #L1ff748.  call temp:= `equals`(v1, v3) @signature `Lc/h/i/c;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1ff74e.  v1:= temp;
  #L1ff750.  if v1 == 0 then goto L1ff772;
  #L1ff754.  call temp:= `d`(v4) @signature `Lc/h/j/e0$i;.d:()Lc/h/j/c;` @kind virtual;
  #L1ff75a.  v1:= temp @kind object;
  #L1ff75c.  call temp:= `d`(v5) @signature `Lc/h/j/e0$i;.d:()Lc/h/j/c;` @kind virtual;
  #L1ff762.  v5:= temp @kind object;
  #L1ff764.  call temp:= `equals`(v1, v5) @signature `Lc/h/i/c;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1ff76a.  v5:= temp;
  #L1ff76c.  if v5 == 0 then goto L1ff772;
  #L1ff770.  goto L1ff774;
  #L1ff772.  v0:= 0I;
  #L1ff774.  return v0;
}
procedure `c.h.d.b` `f`(`c.h.j.e0$i` v1 @kind this) @signature `Lc/h/j/e0$i;.f:()Lc/h/d/b;` @AccessFlag  {
    temp;
    v0;

  #L1ff650.  v0:= `@@c.h.d.b.e` @type ^`c.h.d.b` @kind object;
  #L1ff654.  return v0 @kind object;
}
procedure `boolean` `g`(`c.h.j.e0$i` v1 @kind this) @signature `Lc/h/j/e0$i;.g:()Z` @AccessFlag  {
    temp;
    v0;

  #L1ff788.  v0:= 0I;
  #L1ff78a.  return v0;
}
procedure `boolean` `h`(`c.h.j.e0$i` v1 @kind this) @signature `Lc/h/j/e0$i;.h:()Z` @AccessFlag  {
    temp;
    v0;

  #L1ff79c.  v0:= 0I;
  #L1ff79e.  return v0;
}
procedure `int` `hashCode`(`c.h.j.e0$i` v3 @kind this) @signature `Lc/h/j/e0$i;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1ff7b0.  v0:= 5I;
  #L1ff7b2.  v0:= new `java.lang.Object`[v0];
  #L1ff7b6.  call temp:= `h`(v3) @signature `Lc/h/j/e0$i;.h:()Z` @kind virtual;
  #L1ff7bc.  v1:= temp;
  #L1ff7be.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L1ff7c4.  v1:= temp @kind object;
  #L1ff7c6.  v2:= 0I;
  #L1ff7c8.  v0[v2]:= v1 @kind object;
  #L1ff7cc.  call temp:= `g`(v3) @signature `Lc/h/j/e0$i;.g:()Z` @kind virtual;
  #L1ff7d2.  v1:= temp;
  #L1ff7d4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L1ff7da.  v1:= temp @kind object;
  #L1ff7dc.  v2:= 1I;
  #L1ff7de.  v0[v2]:= v1 @kind object;
  #L1ff7e2.  call temp:= `f`(v3) @signature `Lc/h/j/e0$i;.f:()Lc/h/d/b;` @kind virtual;
  #L1ff7e8.  v1:= temp @kind object;
  #L1ff7ea.  v2:= 2I;
  #L1ff7ec.  v0[v2]:= v1 @kind object;
  #L1ff7f0.  call temp:= `e`(v3) @signature `Lc/h/j/e0$i;.e:()Lc/h/d/b;` @kind virtual;
  #L1ff7f6.  v1:= temp @kind object;
  #L1ff7f8.  v2:= 3I;
  #L1ff7fa.  v0[v2]:= v1 @kind object;
  #L1ff7fe.  call temp:= `d`(v3) @signature `Lc/h/j/e0$i;.d:()Lc/h/j/c;` @kind virtual;
  #L1ff804.  v1:= temp @kind object;
  #L1ff806.  v2:= 4I;
  #L1ff808.  v0[v2]:= v1 @kind object;
  #L1ff80c.  call temp:= `hash`(v0) @signature `Lc/h/i/c;.hash:([Ljava/lang/Object;)I` @kind static;
  #L1ff812.  v0:= temp;
  #L1ff814.  return v0;
}
