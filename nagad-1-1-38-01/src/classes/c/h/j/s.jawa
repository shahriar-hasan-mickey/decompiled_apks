record `c.h.j.s` @kind class @AccessFlag PUBLIC_FINAL extends `android.view.ViewTreeObserver$OnPreDrawListener` @kind interface, `android.view.View$OnAttachStateChangeListener` @kind interface {
  `android.view.View` `c.h.j.s.f` @AccessFlag PRIVATE_FINAL;
  `android.view.ViewTreeObserver` `c.h.j.s.g` @AccessFlag PRIVATE;
  `java.lang.Runnable` `c.h.j.s.h` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`c.h.j.s` v0 @kind this, `android.view.View` v1 @kind object, `java.lang.Runnable` v2 @kind object) @signature `Lc/h/j/s;.<init>:(Landroid/view/View;Ljava/lang/Runnable;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1fc560.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1fc566.  v0.`c.h.j.s.f` @type ^`android.view.View` := v1 @kind object;
  #L1fc56a.  call temp:= `getViewTreeObserver`(v1) @signature `Landroid/view/View;.getViewTreeObserver:()Landroid/view/ViewTreeObserver;` @kind virtual;
  #L1fc570.  v1:= temp @kind object;
  #L1fc572.  v0.`c.h.j.s.g` @type ^`android.view.ViewTreeObserver` := v1 @kind object;
  #L1fc576.  v0.`c.h.j.s.h` @type ^`java.lang.Runnable` := v2 @kind object;
  #L1fc57a.  return @kind void;
}
procedure `c.h.j.s` `add`(`android.view.View` v1 @kind object, `java.lang.Runnable` v2 @kind object) @signature `Lc/h/j/s;.add:(Landroid/view/View;Ljava/lang/Runnable;)Lc/h/j/s;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1fc4e4.  if v1 == 0 then goto L1fc51c;
  #L1fc4e8.  if v2 == 0 then goto L1fc50c;
  #L1fc4ec.  v0:= new `c.h.j.s`;
  #L1fc4f0.  call `<init>`(v0, v1, v2) @signature `Lc/h/j/s;.<init>:(Landroid/view/View;Ljava/lang/Runnable;)V` @kind direct;
  #L1fc4f6.  call temp:= `getViewTreeObserver`(v1) @signature `Landroid/view/View;.getViewTreeObserver:()Landroid/view/ViewTreeObserver;` @kind virtual;
  #L1fc4fc.  v2:= temp @kind object;
  #L1fc4fe.  call `addOnPreDrawListener`(v2, v0) @signature `Landroid/view/ViewTreeObserver;.addOnPreDrawListener:(Landroid/view/ViewTreeObserver$OnPreDrawListener;)V` @kind virtual;
  #L1fc504.  call `addOnAttachStateChangeListener`(v1, v0) @signature `Landroid/view/View;.addOnAttachStateChangeListener:(Landroid/view/View$OnAttachStateChangeListener;)V` @kind virtual;
  #L1fc50a.  return v0 @kind object;
  #L1fc50c.  v1:= new `java.lang.NullPointerException`;
  #L1fc510.  v2:= "runnable == null" @kind object;
  #L1fc514.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fc51a.  throw v1;
  #L1fc51c.  v1:= new `java.lang.NullPointerException`;
  #L1fc520.  v2:= "view == null" @kind object;
  #L1fc524.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1fc52a.  throw v1;
}
procedure `boolean` `onPreDraw`(`c.h.j.s` v1 @kind this) @signature `Lc/h/j/s;.onPreDraw:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fc53c.  call `removeListener`(v1) @signature `Lc/h/j/s;.removeListener:()V` @kind virtual;
  #L1fc542.  v0:= v1.`c.h.j.s.h` @type ^`java.lang.Runnable` @kind object;
  #L1fc546.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L1fc54c.  v0:= 1I;
  #L1fc54e.  return v0;
}
procedure `void` `onViewAttachedToWindow`(`c.h.j.s` v0 @kind this, `android.view.View` v1 @kind object) @signature `Lc/h/j/s;.onViewAttachedToWindow:(Landroid/view/View;)V` @AccessFlag PUBLIC {
    temp;

  #L1fc58c.  call temp:= `getViewTreeObserver`(v1) @signature `Landroid/view/View;.getViewTreeObserver:()Landroid/view/ViewTreeObserver;` @kind virtual;
  #L1fc592.  v1:= temp @kind object;
  #L1fc594.  v0.`c.h.j.s.g` @type ^`android.view.ViewTreeObserver` := v1 @kind object;
  #L1fc598.  return @kind void;
}
procedure `void` `onViewDetachedFromWindow`(`c.h.j.s` v0 @kind this, `android.view.View` v1 @kind object) @signature `Lc/h/j/s;.onViewDetachedFromWindow:(Landroid/view/View;)V` @AccessFlag PUBLIC {
    temp;

  #L1fc5ac.  call `removeListener`(v0) @signature `Lc/h/j/s;.removeListener:()V` @kind virtual;
  #L1fc5b2.  return @kind void;
}
procedure `void` `removeListener`(`c.h.j.s` v1 @kind this) @signature `Lc/h/j/s;.removeListener:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fc5c4.  v0:= v1.`c.h.j.s.g` @type ^`android.view.ViewTreeObserver` @kind object;
  #L1fc5c8.  call temp:= `isAlive`(v0) @signature `Landroid/view/ViewTreeObserver;.isAlive:()Z` @kind virtual;
  #L1fc5ce.  v0:= temp;
  #L1fc5d0.  if v0 == 0 then goto L1fc5e0;
  #L1fc5d4.  v0:= v1.`c.h.j.s.g` @type ^`android.view.ViewTreeObserver` @kind object;
  #L1fc5d8.  call `removeOnPreDrawListener`(v0, v1) @signature `Landroid/view/ViewTreeObserver;.removeOnPreDrawListener:(Landroid/view/ViewTreeObserver$OnPreDrawListener;)V` @kind virtual;
  #L1fc5de.  goto L1fc5f2;
  #L1fc5e0.  v0:= v1.`c.h.j.s.f` @type ^`android.view.View` @kind object;
  #L1fc5e4.  call temp:= `getViewTreeObserver`(v0) @signature `Landroid/view/View;.getViewTreeObserver:()Landroid/view/ViewTreeObserver;` @kind virtual;
  #L1fc5ea.  v0:= temp @kind object;
  #L1fc5ec.  call `removeOnPreDrawListener`(v0, v1) @signature `Landroid/view/ViewTreeObserver;.removeOnPreDrawListener:(Landroid/view/ViewTreeObserver$OnPreDrawListener;)V` @kind virtual;
  #L1fc5f2.  v0:= v1.`c.h.j.s.f` @type ^`android.view.View` @kind object;
  #L1fc5f6.  call `removeOnAttachStateChangeListener`(v0, v1) @signature `Landroid/view/View;.removeOnAttachStateChangeListener:(Landroid/view/View$OnAttachStateChangeListener;)V` @kind virtual;
  #L1fc5fc.  return @kind void;
}
