record `c.h.j.c` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.Object` `c.h.j.c.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`c.h.j.c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lc/h/j/c;.<init>:(Ljava/lang/Object;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1fb878.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1fb87e.  v0.`c.h.j.c.a` @type ^`java.lang.Object` := v1 @kind object;
  #L1fb882.  return @kind void;
}
procedure `c.h.j.c` `a`(`java.lang.Object` v1 @kind object) @signature `Lc/h/j/c;.a:(Ljava/lang/Object;)Lc/h/j/c;` @AccessFlag STATIC {
    temp;
    v0;

  #L1fb788.  if v1 != 0 then goto L1fb790;
  #L1fb78c.  v1:= 0I;
  #L1fb78e.  goto L1fb79c;
  #L1fb790.  v0:= new `c.h.j.c`;
  #L1fb794.  call `<init>`(v0, v1) @signature `Lc/h/j/c;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1fb79a.  v1:= v0 @kind object;
  #L1fb79c.  return v1 @kind object;
}
procedure `boolean` `equals`(`c.h.j.c` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lc/h/j/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1fb7b0.  v0:= 1I;
  #L1fb7b2.  if v4 != v5 then goto L1fb7b8;
  #L1fb7b6.  return v0;
  #L1fb7b8.  v1:= 0I;
  #L1fb7ba.  if v5 == 0 then goto L1fb7f8;
  #L1fb7be.  v2:= constclass @type ^`c.h.j.c` @kind object;
  #L1fb7c2.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L1fb7c8.  v3:= temp @kind object;
  #L1fb7ca.  if v2 == v3 then goto L1fb7d0;
  #L1fb7ce.  goto L1fb7f8;
  #L1fb7d0.  v5:= (`c.h.j.c`) v5 @kind object;
  #L1fb7d4.  v2:= v4.`c.h.j.c.a` @type ^`java.lang.Object` @kind object;
  #L1fb7d8.  if v2 != 0 then goto L1fb7ea;
  #L1fb7dc.  v5:= v5.`c.h.j.c.a` @type ^`java.lang.Object` @kind object;
  #L1fb7e0.  if v5 != 0 then goto L1fb7e6;
  #L1fb7e4.  goto L1fb7f6;
  #L1fb7e6.  v0:= 0I;
  #L1fb7e8.  goto L1fb7f6;
  #L1fb7ea.  v5:= v5.`c.h.j.c.a` @type ^`java.lang.Object` @kind object;
  #L1fb7ee.  call temp:= `equals`(v2, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1fb7f4.  v0:= temp;
  #L1fb7f6.  return v0;
  #L1fb7f8.  return v1;
}
procedure `int` `hashCode`(`c.h.j.c` v1 @kind this) @signature `Lc/h/j/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1fb80c.  v0:= v1.`c.h.j.c.a` @type ^`java.lang.Object` @kind object;
  #L1fb810.  if v0 != 0 then goto L1fb818;
  #L1fb814.  v0:= 0I;
  #L1fb816.  goto L1fb820;
  #L1fb818.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1fb81e.  v0:= temp;
  #L1fb820.  return v0;
}
procedure `java.lang.String` `toString`(`c.h.j.c` v2 @kind this) @signature `Lc/h/j/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1fb834.  v0:= new `java.lang.StringBuilder`;
  #L1fb838.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1fb83e.  v1:= "DisplayCutoutCompat{" @kind object;
  #L1fb842.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fb848.  v1:= v2.`c.h.j.c.a` @type ^`java.lang.Object` @kind object;
  #L1fb84c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fb852.  v1:= "}" @kind object;
  #L1fb856.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1fb85c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1fb862.  v0:= temp @kind object;
  #L1fb864.  return v0 @kind object;
}
