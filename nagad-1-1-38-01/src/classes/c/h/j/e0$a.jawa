record `c.h.j.e0$a` @kind class @AccessFlag PUBLIC_FINAL {
  `c.h.j.e0$d` `c.h.j.e0$a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`c.h.j.e0$a` v2 @kind this) @signature `Lc/h/j/e0$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1ff21c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ff222.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1ff226.  v1:= 29I;
  #L1ff22a.  if v0 < v1 then goto L1ff23e;
  #L1ff22e.  v0:= new `c.h.j.e0$c`;
  #L1ff232.  call `<init>`(v0) @signature `Lc/h/j/e0$c;.<init>:()V` @kind direct;
  #L1ff238.  v2.`c.h.j.e0$a.a` @type ^`c.h.j.e0$d` := v0 @kind object;
  #L1ff23c.  goto L1ff264;
  #L1ff23e.  v1:= 20I;
  #L1ff242.  if v0 < v1 then goto L1ff256;
  #L1ff246.  v0:= new `c.h.j.e0$b`;
  #L1ff24a.  call `<init>`(v0) @signature `Lc/h/j/e0$b;.<init>:()V` @kind direct;
  #L1ff250.  v2.`c.h.j.e0$a.a` @type ^`c.h.j.e0$d` := v0 @kind object;
  #L1ff254.  goto L1ff264;
  #L1ff256.  v0:= new `c.h.j.e0$d`;
  #L1ff25a.  call `<init>`(v0) @signature `Lc/h/j/e0$d;.<init>:()V` @kind direct;
  #L1ff260.  v2.`c.h.j.e0$a.a` @type ^`c.h.j.e0$d` := v0 @kind object;
  #L1ff264.  return @kind void;
}
procedure `void` `<init>`(`c.h.j.e0$a` v2 @kind this, `c.h.j.e0` v3 @kind object) @signature `Lc/h/j/e0$a;.<init>:(Lc/h/j/e0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1ff278.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1ff27e.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1ff282.  v1:= 29I;
  #L1ff286.  if v0 < v1 then goto L1ff29a;
  #L1ff28a.  v0:= new `c.h.j.e0$c`;
  #L1ff28e.  call `<init>`(v0, v3) @signature `Lc/h/j/e0$c;.<init>:(Lc/h/j/e0;)V` @kind direct;
  #L1ff294.  v2.`c.h.j.e0$a.a` @type ^`c.h.j.e0$d` := v0 @kind object;
  #L1ff298.  goto L1ff2c0;
  #L1ff29a.  v1:= 20I;
  #L1ff29e.  if v0 < v1 then goto L1ff2b2;
  #L1ff2a2.  v0:= new `c.h.j.e0$b`;
  #L1ff2a6.  call `<init>`(v0, v3) @signature `Lc/h/j/e0$b;.<init>:(Lc/h/j/e0;)V` @kind direct;
  #L1ff2ac.  v2.`c.h.j.e0$a.a` @type ^`c.h.j.e0$d` := v0 @kind object;
  #L1ff2b0.  goto L1ff2c0;
  #L1ff2b2.  v0:= new `c.h.j.e0$d`;
  #L1ff2b6.  call `<init>`(v0, v3) @signature `Lc/h/j/e0$d;.<init>:(Lc/h/j/e0;)V` @kind direct;
  #L1ff2bc.  v2.`c.h.j.e0$a.a` @type ^`c.h.j.e0$d` := v0 @kind object;
  #L1ff2c0.  return @kind void;
}
procedure `c.h.j.e0` `build`(`c.h.j.e0$a` v1 @kind this) @signature `Lc/h/j/e0$a;.build:()Lc/h/j/e0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ff1c4.  v0:= v1.`c.h.j.e0$a.a` @type ^`c.h.j.e0$d` @kind object;
  #L1ff1c8.  call temp:= `a`(v0) @signature `Lc/h/j/e0$d;.a:()Lc/h/j/e0;` @kind virtual;
  #L1ff1ce.  v0:= temp @kind object;
  #L1ff1d0.  return v0 @kind object;
}
procedure `c.h.j.e0$a` `setStableInsets`(`c.h.j.e0$a` v1 @kind this, `c.h.d.b` v2 @kind object) @signature `Lc/h/j/e0$a;.setStableInsets:(Lc/h/d/b;)Lc/h/j/e0$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ff1e4.  v0:= v1.`c.h.j.e0$a.a` @type ^`c.h.j.e0$d` @kind object;
  #L1ff1e8.  call `a`(v0, v2) @signature `Lc/h/j/e0$d;.a:(Lc/h/d/b;)V` @kind virtual;
  #L1ff1ee.  return v1 @kind object;
}
procedure `c.h.j.e0$a` `setSystemWindowInsets`(`c.h.j.e0$a` v1 @kind this, `c.h.d.b` v2 @kind object) @signature `Lc/h/j/e0$a;.setSystemWindowInsets:(Lc/h/d/b;)Lc/h/j/e0$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ff200.  v0:= v1.`c.h.j.e0$a.a` @type ^`c.h.j.e0$d` @kind object;
  #L1ff204.  call `b`(v0, v2) @signature `Lc/h/j/e0$d;.b:(Lc/h/d/b;)V` @kind virtual;
  #L1ff20a.  return v1 @kind object;
}
