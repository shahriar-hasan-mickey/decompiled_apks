record `c.h.i.h` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.Object` `@@c.h.i.h.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `char`[] `@@c.h.i.h.b` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lc/h/i/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1fb0e4.  v0:= new `java.lang.Object`;
  #L1fb0e8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1fb0ee.  `@@c.h.i.h.a` @type ^`java.lang.Object` := v0 @kind object;
  #L1fb0f2.  v0:= 24I;
  #L1fb0f6.  v0:= new `char`[v0];
  #L1fb0fa.  `@@c.h.i.h.b` @type ^`char`[] := v0 @kind object;
  #L1fb0fe.  return @kind void;
}
procedure `int` `a`(`int` v2 , `int` v3 , `boolean` v4 , `int` v5 ) @signature `Lc/h/i/h;.a:(IIZI)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1fadf8.  v0:= 3I;
  #L1fadfa.  v1:= 99I;
  #L1fadfe.  if v2 > v1 then goto L1fae38;
  #L1fae02.  if v4 == 0 then goto L1fae0c;
  #L1fae06.  if v5 < v0 then goto L1fae0c;
  #L1fae0a.  goto L1fae38;
  #L1fae0c.  v0:= 9I;
  #L1fae10.  v1:= 2I;
  #L1fae12.  if v2 > v0 then goto L1fae34;
  #L1fae16.  if v4 == 0 then goto L1fae20;
  #L1fae1a.  if v5 < v1 then goto L1fae20;
  #L1fae1e.  goto L1fae34;
  #L1fae20.  if v4 != 0 then goto L1fae2e;
  #L1fae24.  if v2 <= 0 then goto L1fae2a;
  #L1fae28.  goto L1fae2e;
  #L1fae2a.  v2:= 0I;
  #L1fae2c.  return v2;
  #L1fae2e.  v3:= v3 + 1;
  #L1fae32.  return v3;
  #L1fae34.  v3:= v3 + v1 @kind int;
  #L1fae36.  return v3;
  #L1fae38.  v3:= v3 + v0 @kind int;
  #L1fae3a.  return v3;
}
procedure `int` `a`(`long` v17 , `int` v19 ) @signature `Lc/h/i/h;.a:(JI)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L1fae4c.  v0:= v17 @kind wide;
  #L1fae50.  v2:= v19;
  #L1fae54.  v3:= `@@c.h.i.h.b` @type ^`char`[] @kind object;
  #L1fae58.  v3:= length @variable v3;
  #L1fae5a.  if v3 >= v2 then goto L1fae66;
  #L1fae5e.  v3:= new `char`[v2];
  #L1fae62.  `@@c.h.i.h.b` @type ^`char`[] := v3 @kind object;
  #L1fae66.  v3:= `@@c.h.i.h.b` @type ^`char`[] @kind object;
  #L1fae6a.  v4:= 0L;
  #L1fae6e.  v6:= 32I;
  #L1fae72.  v10:= 1I;
  #L1fae74.  v11:= 0I;
  #L1fae76.  v7:= lcmp(v0, v4);
  #L1fae7a.  if v7 != 0 then goto L1fae96;
  #L1fae7e.  v0:= v2 + -1;
  #L1fae82.  if v0 <= 0 then goto L1fae8c;
  #L1fae86.  v3[v11]:= v6 @kind char;
  #L1fae8a.  goto L1fae82;
  #L1fae8c.  v0:= 48I;
  #L1fae90.  v3[v11]:= v0 @kind char;
  #L1fae94.  return v10;
  #L1fae96.  if v7 <= 0 then goto L1faea0;
  #L1fae9a.  v4:= 43I;
  #L1fae9e.  goto L1faea6;
  #L1faea0.  v4:= 45I;
  #L1faea4.  v0:= -v0 @kind long;
  #L1faea6.  v7:= 1000L;
  #L1faeaa.  v12:= v0 %% v7 @kind long;
  #L1faeae.  v13:= (`int`) v12 @kind l2i;
  #L1faeb0.  v0:= v0 / v7 @kind long;
  #L1faeb2.  v0:= (`double`) v0 @kind l2d;
  #L1faeb4.  call temp:= `floor`(v0) @signature `Ljava/lang/Math;.floor:(D)D` @kind static;
  #L1faeba.  v0:= temp @kind wide;
  #L1faebc.  v0:= (`int`) v0 @kind d2i;
  #L1faebe.  v1:= 86400I;
  #L1faec4.  if v0 <= v1 then goto L1faed4;
  #L1faec8.  v5:= v0 / v1 @kind int;
  #L1faecc.  v1:= v1 * v5 @kind int;
  #L1faed0.  v0:= v0 - v1 @kind int;
  #L1faed2.  goto L1faed6;
  #L1faed4.  v5:= 0I;
  #L1faed6.  v1:= 3600I;
  #L1faeda.  if v0 <= v1 then goto L1faeea;
  #L1faede.  v1:= v0 / 3600;
  #L1faee2.  v7:= v1 * 3600;
  #L1faee6.  v0:= v0 - v7 @kind int;
  #L1faee8.  goto L1faeec;
  #L1faeea.  v1:= 0I;
  #L1faeec.  v7:= 60I;
  #L1faef0.  if v0 <= v7 then goto L1faf04;
  #L1faef4.  v7:= v0 / 60;
  #L1faef8.  v8:= v7 * 60;
  #L1faefc.  v0:= v0 - v8 @kind int;
  #L1faefe.  v12:= v0;
  #L1faf00.  v0:= v7;
  #L1faf02.  goto L1faf08;
  #L1faf04.  v12:= v0;
  #L1faf06.  v0:= 0I;
  #L1faf08.  v14:= 3I;
  #L1faf0a.  v15:= 2I;
  #L1faf0c.  if v2 == 0 then goto L1faf7e;
  #L1faf10.  call temp:= `a`(v5, v10, v11, v11) @signature `Lc/h/i/h;.a:(IIZI)I` @kind static;
  #L1faf16.  v7:= temp;
  #L1faf18.  if v7 <= 0 then goto L1faf20;
  #L1faf1c.  v8:= 1I;
  #L1faf1e.  goto L1faf22;
  #L1faf20.  v8:= 0I;
  #L1faf22.  call temp:= `a`(v1, v10, v8, v15) @signature `Lc/h/i/h;.a:(IIZI)I` @kind static;
  #L1faf28.  v8:= temp;
  #L1faf2a.  v7:= v7 + v8 @kind int;
  #L1faf2c.  if v7 <= 0 then goto L1faf34;
  #L1faf30.  v8:= 1I;
  #L1faf32.  goto L1faf36;
  #L1faf34.  v8:= 0I;
  #L1faf36.  call temp:= `a`(v0, v10, v8, v15) @signature `Lc/h/i/h;.a:(IIZI)I` @kind static;
  #L1faf3c.  v8:= temp;
  #L1faf3e.  v7:= v7 + v8 @kind int;
  #L1faf40.  if v7 <= 0 then goto L1faf48;
  #L1faf44.  v8:= 1I;
  #L1faf46.  goto L1faf4a;
  #L1faf48.  v8:= 0I;
  #L1faf4a.  call temp:= `a`(v12, v10, v8, v15) @signature `Lc/h/i/h;.a:(IIZI)I` @kind static;
  #L1faf50.  v8:= temp;
  #L1faf52.  v7:= v7 + v8 @kind int;
  #L1faf54.  if v7 <= 0 then goto L1faf5c;
  #L1faf58.  v8:= 3I;
  #L1faf5a.  goto L1faf5e;
  #L1faf5c.  v8:= 0I;
  #L1faf5e.  call temp:= `a`(v13, v15, v10, v8) @signature `Lc/h/i/h;.a:(IIZI)I` @kind static;
  #L1faf64.  v8:= temp;
  #L1faf66.  v8:= v8 + v10 @kind int;
  #L1faf68.  v7:= v7 + v8 @kind int;
  #L1faf6a.  v8:= 0I;
  #L1faf6c.  if v7 >= v2 then goto L1faf80;
  #L1faf70.  v3[v8]:= v6 @kind char;
  #L1faf74.  v8:= v8 + 1;
  #L1faf78.  v7:= v7 + 1;
  #L1faf7c.  goto L1faf6c;
  #L1faf7e.  v8:= 0I;
  #L1faf80.  v3[v8]:= v4 @kind char;
  #L1faf84.  v9:= v8 + 1;
  #L1faf88.  if v2 == 0 then goto L1faf90;
  #L1faf8c.  v2:= 1I;
  #L1faf8e.  goto L1faf92;
  #L1faf90.  v2:= 0I;
  #L1faf92.  v6:= 100I;
  #L1faf96.  v8:= 0I;
  #L1faf98.  v16:= 0I;
  #L1faf9c.  v4:= v3 @kind object;
  #L1faf9e.  v7:= v9;
  #L1fafa0.  v11:= v9;
  #L1fafa2.  v9:= v16;
  #L1fafa6.  call temp:= `a`(v4, v5, v6, v7, v8, v9) @signature `Lc/h/i/h;.a:([CICIZI)I` @kind static;
  #L1fafac.  v7:= temp;
  #L1fafae.  v6:= 104I;
  #L1fafb2.  if v7 == v11 then goto L1fafba;
  #L1fafb6.  v8:= 1I;
  #L1fafb8.  goto L1fafbc;
  #L1fafba.  v8:= 0I;
  #L1fafbc.  if v2 == 0 then goto L1fafc4;
  #L1fafc0.  v9:= 2I;
  #L1fafc2.  goto L1fafc6;
  #L1fafc4.  v9:= 0I;
  #L1fafc6.  v4:= v3 @kind object;
  #L1fafc8.  v5:= v1;
  #L1fafca.  call temp:= `a`(v4, v5, v6, v7, v8, v9) @signature `Lc/h/i/h;.a:([CICIZI)I` @kind static;
  #L1fafd0.  v7:= temp;
  #L1fafd2.  v6:= 109I;
  #L1fafd6.  if v7 == v11 then goto L1fafde;
  #L1fafda.  v8:= 1I;
  #L1fafdc.  goto L1fafe0;
  #L1fafde.  v8:= 0I;
  #L1fafe0.  if v2 == 0 then goto L1fafe8;
  #L1fafe4.  v9:= 2I;
  #L1fafe6.  goto L1fafea;
  #L1fafe8.  v9:= 0I;
  #L1fafea.  v4:= v3 @kind object;
  #L1fafec.  v5:= v0;
  #L1fafee.  call temp:= `a`(v4, v5, v6, v7, v8, v9) @signature `Lc/h/i/h;.a:([CICIZI)I` @kind static;
  #L1faff4.  v7:= temp;
  #L1faff6.  v6:= 115I;
  #L1faffa.  if v7 == v11 then goto L1fb002;
  #L1faffe.  v8:= 1I;
  #L1fb000.  goto L1fb004;
  #L1fb002.  v8:= 0I;
  #L1fb004.  if v2 == 0 then goto L1fb00c;
  #L1fb008.  v9:= 2I;
  #L1fb00a.  goto L1fb00e;
  #L1fb00c.  v9:= 0I;
  #L1fb00e.  v4:= v3 @kind object;
  #L1fb010.  v5:= v12;
  #L1fb012.  call temp:= `a`(v4, v5, v6, v7, v8, v9) @signature `Lc/h/i/h;.a:([CICIZI)I` @kind static;
  #L1fb018.  v7:= temp;
  #L1fb01a.  v6:= 109I;
  #L1fb01e.  v8:= 1I;
  #L1fb020.  if v2 == 0 then goto L1fb02c;
  #L1fb024.  if v7 == v11 then goto L1fb02c;
  #L1fb028.  v9:= 3I;
  #L1fb02a.  goto L1fb02e;
  #L1fb02c.  v9:= 0I;
  #L1fb02e.  v4:= v3 @kind object;
  #L1fb030.  v5:= v13;
  #L1fb032.  call temp:= `a`(v4, v5, v6, v7, v8, v9) @signature `Lc/h/i/h;.a:([CICIZI)I` @kind static;
  #L1fb038.  v0:= temp;
  #L1fb03a.  v1:= 115I;
  #L1fb03e.  v3[v0]:= v1 @kind char;
  #L1fb042.  v0:= v0 + v10 @kind int;
  #L1fb044.  return v0;
}
procedure `int` `a`(`char`[] v2 @kind object, `int` v3 , `char` v4 , `int` v5 , `boolean` v6 , `int` v7 ) @signature `Lc/h/i/h;.a:([CICIZI)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1fb058.  if v6 != 0 then goto L1fb060;
  #L1fb05c.  if v3 <= 0 then goto L1fb0d2;
  #L1fb060.  if v6 == 0 then goto L1fb06a;
  #L1fb064.  v0:= 3I;
  #L1fb066.  if v7 >= v0 then goto L1fb072;
  #L1fb06a.  v0:= 99I;
  #L1fb06e.  if v3 <= v0 then goto L1fb08c;
  #L1fb072.  v0:= v3 / 100;
  #L1fb076.  v1:= v0 + 48;
  #L1fb07a.  v1:= (`char`) v1 @kind i2c;
  #L1fb07c.  v2[v5]:= v1 @kind char;
  #L1fb080.  v1:= v5 + 1;
  #L1fb084.  v0:= v0 * 100;
  #L1fb088.  v3:= v3 - v0 @kind int;
  #L1fb08a.  goto L1fb08e;
  #L1fb08c.  v1:= v5;
  #L1fb08e.  if v6 == 0 then goto L1fb098;
  #L1fb092.  v6:= 2I;
  #L1fb094.  if v7 >= v6 then goto L1fb0a4;
  #L1fb098.  v6:= 9I;
  #L1fb09c.  if v3 > v6 then goto L1fb0a4;
  #L1fb0a0.  if v5 == v1 then goto L1fb0bc;
  #L1fb0a4.  v5:= v3 / 10;
  #L1fb0a8.  v6:= v5 + 48;
  #L1fb0ac.  v6:= (`char`) v6 @kind i2c;
  #L1fb0ae.  v2[v1]:= v6 @kind char;
  #L1fb0b2.  v1:= v1 + 1;
  #L1fb0b6.  v5:= v5 * 10;
  #L1fb0ba.  v3:= v3 - v5 @kind int;
  #L1fb0bc.  v3:= v3 + 48;
  #L1fb0c0.  v3:= (`char`) v3 @kind i2c;
  #L1fb0c2.  v2[v1]:= v3 @kind char;
  #L1fb0c6.  v1:= v1 + 1;
  #L1fb0ca.  v2[v1]:= v4 @kind char;
  #L1fb0ce.  v5:= v1 + 1;
  #L1fb0d2.  return v5;
}
procedure `void` `formatDuration`(`long` v3 , `long` v5 , `java.io.PrintWriter` v7 @kind object) @signature `Lc/h/i/h;.formatDuration:(JJLjava/io/PrintWriter;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1fb178.  v0:= 0L;
  #L1fb17c.  v2:= lcmp(v3, v0);
  #L1fb180.  if v2 != 0 then goto L1fb190;
  #L1fb184.  v3:= "--" @kind object;
  #L1fb188.  call `print`(v7, v3) @signature `Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V` @kind virtual;
  #L1fb18e.  return @kind void;
  #L1fb190.  v3:= v3 - v5 @kind long;
  #L1fb192.  v5:= 0I;
  #L1fb194.  call `formatDuration`(v3, v7, v5) @signature `Lc/h/i/h;.formatDuration:(JLjava/io/PrintWriter;I)V` @kind static;
  #L1fb19a.  return @kind void;
}
procedure `void` `formatDuration`(`long` v1 , `java.io.PrintWriter` v3 @kind object) @signature `Lc/h/i/h;.formatDuration:(JLjava/io/PrintWriter;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1fb110.  v0:= 0I;
  #L1fb112.  call `formatDuration`(v1, v3, v0) @signature `Lc/h/i/h;.formatDuration:(JLjava/io/PrintWriter;I)V` @kind static;
  #L1fb118.  return @kind void;
}
procedure `void` `formatDuration`(`long` v2 , `java.io.PrintWriter` v4 @kind object, `int` v5 ) @signature `Lc/h/i/h;.formatDuration:(JLjava/io/PrintWriter;I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1fb12c.  v0:= `@@c.h.i.h.a` @type ^`java.lang.Object` @kind object;
  #L1fb130.  @monitorenter v0
  #L1fb132.  call temp:= `a`(v2, v5) @signature `Lc/h/i/h;.a:(JI)I` @kind static;
  #L1fb138.  v2:= temp;
  #L1fb13a.  v3:= new `java.lang.String`;
  #L1fb13e.  v5:= `@@c.h.i.h.b` @type ^`char`[] @kind object;
  #L1fb142.  v1:= 0I;
  #L1fb144.  call `<init>`(v3, v5, v1, v2) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L1fb14a.  call `print`(v4, v3) @signature `Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V` @kind virtual;
  #L1fb150.  @monitorexit v0
  #L1fb152.  return @kind void;
  #L1fb154.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1fb156.  @monitorexit v0
  #L1fb158.  throw v2;
  catch `java.lang.Throwable` @[L1fb132..L1fb158] goto L1fb154;
}
