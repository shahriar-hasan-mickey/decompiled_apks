record `c.h.i.c` @kind class @AccessFlag PUBLIC {
}
procedure `boolean` `equals`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lc/h/i/c;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1fab94.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1fab98.  v1:= 19I;
  #L1fab9c.  if v0 < v1 then goto L1fabaa;
  #L1faba0.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Objects;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1faba6.  v2:= temp;
  #L1faba8.  return v2;
  #L1fabaa.  if v2 == v3 then goto L1fabc4;
  #L1fabae.  if v2 == 0 then goto L1fabc0;
  #L1fabb2.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1fabb8.  v2:= temp;
  #L1fabba.  if v2 == 0 then goto L1fabc0;
  #L1fabbe.  goto L1fabc4;
  #L1fabc0.  v2:= 0I;
  #L1fabc2.  goto L1fabc6;
  #L1fabc4.  v2:= 1I;
  #L1fabc6.  return v2;
}
procedure `int` `hash`(`java.lang.Object`[] v2 @kind object) @signature `Lc/h/i/c;.hash:([Ljava/lang/Object;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1fabd8.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1fabdc.  v1:= 19I;
  #L1fabe0.  if v0 < v1 then goto L1fabee;
  #L1fabe4.  call temp:= `hash`(v2) @signature `Ljava/util/Objects;.hash:([Ljava/lang/Object;)I` @kind static;
  #L1fabea.  v2:= temp;
  #L1fabec.  return v2;
  #L1fabee.  call temp:= `hashCode`(v2) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L1fabf4.  v2:= temp;
  #L1fabf6.  return v2;
}
