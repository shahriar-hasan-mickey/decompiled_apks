record `c.r.a.g.e` @kind class @AccessFlag  extends `c.r.a.g.d` @kind class, `c.r.a.f` @kind interface {
  `android.database.sqlite.SQLiteStatement` `c.r.a.g.e.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`c.r.a.g.e` v0 @kind this, `android.database.sqlite.SQLiteStatement` v1 @kind object) @signature `Lc/r/a/g/e;.<init>:(Landroid/database/sqlite/SQLiteStatement;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L24a9b4.  call `<init>`(v0, v1) @signature `Lc/r/a/g/d;.<init>:(Landroid/database/sqlite/SQLiteProgram;)V` @kind direct;
  #L24a9ba.  v0.`c.r.a.g.e.g` @type ^`android.database.sqlite.SQLiteStatement` := v1 @kind object;
  #L24a9be.  return @kind void;
}
procedure `long` `executeInsert`(`c.r.a.g.e` v2 @kind this) @signature `Lc/r/a/g/e;.executeInsert:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24a994.  v0:= v2.`c.r.a.g.e.g` @type ^`android.database.sqlite.SQLiteStatement` @kind object;
  #L24a998.  call temp:= `executeInsert`(v0) @signature `Landroid/database/sqlite/SQLiteStatement;.executeInsert:()J` @kind virtual;
  #L24a99e.  v0:= temp @kind wide;
  #L24a9a0.  return v0 @kind wide;
}
procedure `int` `executeUpdateDelete`(`c.r.a.g.e` v1 @kind this) @signature `Lc/r/a/g/e;.executeUpdateDelete:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24a974.  v0:= v1.`c.r.a.g.e.g` @type ^`android.database.sqlite.SQLiteStatement` @kind object;
  #L24a978.  call temp:= `executeUpdateDelete`(v0) @signature `Landroid/database/sqlite/SQLiteStatement;.executeUpdateDelete:()I` @kind virtual;
  #L24a97e.  v0:= temp;
  #L24a980.  return v0;
}
