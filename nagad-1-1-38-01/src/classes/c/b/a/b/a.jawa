record `c.b.a.b.a` @kind class @AccessFlag PUBLIC extends `c.b.a.b.b` @kind class {
  `java.util.HashMap` `c.b.a.b.a.j` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`c.b.a.b.a` v1 @kind this) @signature `Lc/b/a/b/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c1044.  call `<init>`(v1) @signature `Lc/b/a/b/b;.<init>:()V` @kind direct;
  #L1c104a.  v0:= new `java.util.HashMap`;
  #L1c104e.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L1c1054.  v1.`c.b.a.b.a.j` @type ^`java.util.HashMap` := v0 @kind object;
  #L1c1058.  return @kind void;
}
procedure `java.util.Map$Entry` `ceil`(`c.b.a.b.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lc/b/a/b/a;.ceil:(Ljava/lang/Object;)Ljava/util/Map$Entry;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c100c.  call temp:= `contains`(v1, v2) @signature `Lc/b/a/b/a;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L1c1012.  v0:= temp;
  #L1c1014.  if v0 == 0 then goto L1c102e;
  #L1c1018.  v0:= v1.`c.b.a.b.a.j` @type ^`java.util.HashMap` @kind object;
  #L1c101c.  call temp:= `get`(v0, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1c1022.  v2:= temp @kind object;
  #L1c1024.  v2:= (`c.b.a.b.b$c`) v2 @kind object;
  #L1c1028.  v2:= v2.`c.b.a.b.b$c.i` @type ^`c.b.a.b.b$c` @kind object;
  #L1c102c.  return v2 @kind object;
  #L1c102e.  v2:= 0I;
  #L1c1030.  return v2 @kind object;
}
procedure `boolean` `contains`(`c.b.a.b.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lc/b/a/b/a;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c0f90.  v0:= v1.`c.b.a.b.a.j` @type ^`java.util.HashMap` @kind object;
  #L1c0f94.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/HashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L1c0f9a.  v2:= temp;
  #L1c0f9c.  return v2;
}
procedure `c.b.a.b.b$c` `get`(`c.b.a.b.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lc/b/a/b/a;.get:(Ljava/lang/Object;)Lc/b/a/b/b$c;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1c0f6c.  v0:= v1.`c.b.a.b.a.j` @type ^`java.util.HashMap` @kind object;
  #L1c0f70.  call temp:= `get`(v0, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1c0f76.  v2:= temp @kind object;
  #L1c0f78.  v2:= (`c.b.a.b.b$c`) v2 @kind object;
  #L1c0f7c.  return v2 @kind object;
}
procedure `java.lang.Object` `putIfAbsent`(`c.b.a.b.a` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lc/b/a/b/a;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c0fb0.  call temp:= `get`(v1, v2) @signature `Lc/b/a/b/a;.get:(Ljava/lang/Object;)Lc/b/a/b/b$c;` @kind virtual;
  #L1c0fb6.  v0:= temp @kind object;
  #L1c0fb8.  if v0 == 0 then goto L1c0fc2;
  #L1c0fbc.  v2:= v0.`c.b.a.b.b$c.g` @type ^`java.lang.Object` @kind object;
  #L1c0fc0.  return v2 @kind object;
  #L1c0fc2.  v0:= v1.`c.b.a.b.a.j` @type ^`java.util.HashMap` @kind object;
  #L1c0fc6.  call temp:= `put`(v1, v2, v3) @signature `Lc/b/a/b/b;.put:(Ljava/lang/Object;Ljava/lang/Object;)Lc/b/a/b/b$c;` @kind virtual;
  #L1c0fcc.  v3:= temp @kind object;
  #L1c0fce.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1c0fd4.  v2:= 0I;
  #L1c0fd6.  return v2 @kind object;
}
procedure `java.lang.Object` `remove`(`c.b.a.b.a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lc/b/a/b/a;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c0fe8.  call temp:= `remove`(v2, v3) @signature `Lc/b/a/b/b;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind super;
  #L1c0fee.  v0:= temp @kind object;
  #L1c0ff0.  v1:= v2.`c.b.a.b.a.j` @type ^`java.util.HashMap` @kind object;
  #L1c0ff4.  call temp:= `remove`(v1, v3) @signature `Ljava/util/HashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1c0ffa.  return v0 @kind object;
}
