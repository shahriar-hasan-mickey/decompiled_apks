record `c.b.a.b.b$c` @kind class @AccessFlag  extends `java.util.Map$Entry` @kind interface {
  `java.lang.Object` `c.b.a.b.b$c.f` @AccessFlag FINAL;
  `java.lang.Object` `c.b.a.b.b$c.g` @AccessFlag FINAL;
  `c.b.a.b.b$c` `c.b.a.b.b$c.h` @AccessFlag ;
  `c.b.a.b.b$c` `c.b.a.b.b$c.i` @AccessFlag ;
}
procedure `void` `<init>`(`c.b.a.b.b$c` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lc/b/a/b/b$c;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c1214.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c121a.  v0.`c.b.a.b.b$c.f` @type ^`java.lang.Object` := v1 @kind object;
  #L1c121e.  v0.`c.b.a.b.b$c.g` @type ^`java.lang.Object` := v2 @kind object;
  #L1c1222.  return @kind void;
}
procedure `boolean` `equals`(`c.b.a.b.b$c` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lc/b/a/b/b$c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c10fc.  v0:= 1I;
  #L1c10fe.  if v5 != v4 then goto L1c1104;
  #L1c1102.  return v0;
  #L1c1104.  v1:= instanceof @variable v5 @type ^`c.b.a.b.b$c` @kind boolean;
  #L1c1108.  v2:= 0I;
  #L1c110a.  if v1 != 0 then goto L1c1110;
  #L1c110e.  return v2;
  #L1c1110.  v5:= (`c.b.a.b.b$c`) v5 @kind object;
  #L1c1114.  v1:= v4.`c.b.a.b.b$c.f` @type ^`java.lang.Object` @kind object;
  #L1c1118.  v3:= v5.`c.b.a.b.b$c.f` @type ^`java.lang.Object` @kind object;
  #L1c111c.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1c1122.  v1:= temp;
  #L1c1124.  if v1 == 0 then goto L1c113e;
  #L1c1128.  v1:= v4.`c.b.a.b.b$c.g` @type ^`java.lang.Object` @kind object;
  #L1c112c.  v5:= v5.`c.b.a.b.b$c.g` @type ^`java.lang.Object` @kind object;
  #L1c1130.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1c1136.  v5:= temp;
  #L1c1138.  if v5 == 0 then goto L1c113e;
  #L1c113c.  goto L1c1140;
  #L1c113e.  v0:= 0I;
  #L1c1140.  return v0;
}
procedure `java.lang.Object` `getKey`(`c.b.a.b.b$c` v1 @kind this) @signature `Lc/b/a/b/b$c;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1180.  v0:= v1.`c.b.a.b.b$c.f` @type ^`java.lang.Object` @kind object;
  #L1c1184.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`c.b.a.b.b$c` v1 @kind this) @signature `Lc/b/a/b/b$c;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1198.  v0:= v1.`c.b.a.b.b$c.g` @type ^`java.lang.Object` @kind object;
  #L1c119c.  return v0 @kind object;
}
procedure `int` `hashCode`(`c.b.a.b.b$c` v2 @kind this) @signature `Lc/b/a/b/b$c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c1154.  v0:= v2.`c.b.a.b.b$c.f` @type ^`java.lang.Object` @kind object;
  #L1c1158.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1c115e.  v0:= temp;
  #L1c1160.  v1:= v2.`c.b.a.b.b$c.g` @type ^`java.lang.Object` @kind object;
  #L1c1164.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L1c116a.  v1:= temp;
  #L1c116c.  v0:= v0 ^~ v1 @kind int;
  #L1c116e.  return v0;
}
procedure `java.lang.Object` `setValue`(`c.b.a.b.b$c` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lc/b/a/b/b$c;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c11b0.  v2:= new `java.lang.UnsupportedOperationException`;
  #L1c11b4.  v0:= "An entry modification is not supported" @kind object;
  #L1c11b8.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c11be.  throw v2;
}
procedure `java.lang.String` `toString`(`c.b.a.b.b$c` v2 @kind this) @signature `Lc/b/a/b/b$c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c11d0.  v0:= new `java.lang.StringBuilder`;
  #L1c11d4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1c11da.  v1:= v2.`c.b.a.b.b$c.f` @type ^`java.lang.Object` @kind object;
  #L1c11de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c11e4.  v1:= "=" @kind object;
  #L1c11e8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c11ee.  v1:= v2.`c.b.a.b.b$c.g` @type ^`java.lang.Object` @kind object;
  #L1c11f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c11f8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c11fe.  v0:= temp @kind object;
  #L1c1200.  return v0 @kind object;
}
