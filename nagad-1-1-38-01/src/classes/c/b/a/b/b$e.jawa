record `c.b.a.b.b$e` @kind class @AccessFlag ABSTRACT extends `java.util.Iterator` @kind interface, `c.b.a.b.b$f` @kind interface {
  `c.b.a.b.b$c` `c.b.a.b.b$e.f` @AccessFlag ;
  `c.b.a.b.b$c` `c.b.a.b.b$e.g` @AccessFlag ;
}
procedure `void` `<init>`(`c.b.a.b.b$e` v0 @kind this, `c.b.a.b.b$c` v1 @kind object, `c.b.a.b.b$c` v2 @kind object) @signature `Lc/b/a/b/b$e;.<init>:(Lc/b/a/b/b$c;Lc/b/a/b/b$c;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1c13c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c13ca.  v0.`c.b.a.b.b$e.f` @type ^`c.b.a.b.b$c` := v2 @kind object;
  #L1c13ce.  v0.`c.b.a.b.b$e.g` @type ^`c.b.a.b.b$c` := v1 @kind object;
  #L1c13d2.  return @kind void;
}
procedure `c.b.a.b.b$c` `a`(`c.b.a.b.b$e` v2 @kind this) @signature `Lc/b/a/b/b$e;.a:()Lc/b/a/b/b$c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1c1334.  v0:= v2.`c.b.a.b.b$e.g` @type ^`c.b.a.b.b$c` @kind object;
  #L1c1338.  v1:= v2.`c.b.a.b.b$e.f` @type ^`c.b.a.b.b$c` @kind object;
  #L1c133c.  if v0 == v1 then goto L1c1350;
  #L1c1340.  if v1 != 0 then goto L1c1346;
  #L1c1344.  goto L1c1350;
  #L1c1346.  call temp:= `b`(v2, v0) @signature `Lc/b/a/b/b$e;.b:(Lc/b/a/b/b$c;)Lc/b/a/b/b$c;` @kind virtual;
  #L1c134c.  v0:= temp @kind object;
  #L1c134e.  return v0 @kind object;
  #L1c1350.  v0:= 0I;
  #L1c1352.  return v0 @kind object;
}
procedure `c.b.a.b.b$c` `a`(`c.b.a.b.b$c` v0 @kind object) @signature `Lc/b/a/b/b$e;.a:(Lc/b/a/b/b$c;)Lc/b/a/b/b$c;` @AccessFlag ABSTRACT {

  # return;
}
procedure `c.b.a.b.b$c` `b`(`c.b.a.b.b$c` v0 @kind object) @signature `Lc/b/a/b/b$e;.b:(Lc/b/a/b/b$c;)Lc/b/a/b/b$c;` @AccessFlag ABSTRACT {

  # return;
}
procedure `boolean` `hasNext`(`c.b.a.b.b$e` v1 @kind this) @signature `Lc/b/a/b/b$e;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1364.  v0:= v1.`c.b.a.b.b$e.g` @type ^`c.b.a.b.b$c` @kind object;
  #L1c1368.  if v0 == 0 then goto L1c1370;
  #L1c136c.  v0:= 1I;
  #L1c136e.  goto L1c1372;
  #L1c1370.  v0:= 0I;
  #L1c1372.  return v0;
}
procedure `java.lang.Object` `next`(`c.b.a.b.b$e` v1 @kind this) @signature `Lc/b/a/b/b$e;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1c1384.  call temp:= `next`(v1) @signature `Lc/b/a/b/b$e;.next:()Ljava/util/Map$Entry;` @kind virtual;
  #L1c138a.  v0:= temp @kind object;
  #L1c138c.  return v0 @kind object;
}
procedure `java.util.Map$Entry` `next`(`c.b.a.b.b$e` v2 @kind this) @signature `Lc/b/a/b/b$e;.next:()Ljava/util/Map$Entry;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c13a0.  v0:= v2.`c.b.a.b.b$e.g` @type ^`c.b.a.b.b$c` @kind object;
  #L1c13a4.  call temp:= `a`(v2) @signature `Lc/b/a/b/b$e;.a:()Lc/b/a/b/b$c;` @kind direct;
  #L1c13aa.  v1:= temp @kind object;
  #L1c13ac.  v2.`c.b.a.b.b$e.g` @type ^`c.b.a.b.b$c` := v1 @kind object;
  #L1c13b0.  return v0 @kind object;
}
procedure `void` `supportRemove`(`c.b.a.b.b$e` v1 @kind this, `c.b.a.b.b$c` v2 @kind object) @signature `Lc/b/a/b/b$e;.supportRemove:(Lc/b/a/b/b$c;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c13e4.  v0:= v1.`c.b.a.b.b$e.f` @type ^`c.b.a.b.b$c` @kind object;
  #L1c13e8.  if v0 != v2 then goto L1c13fe;
  #L1c13ec.  v0:= v1.`c.b.a.b.b$e.g` @type ^`c.b.a.b.b$c` @kind object;
  #L1c13f0.  if v2 != v0 then goto L1c13fe;
  #L1c13f4.  v0:= 0I;
  #L1c13f6.  v1.`c.b.a.b.b$e.g` @type ^`c.b.a.b.b$c` := v0 @kind object;
  #L1c13fa.  v1.`c.b.a.b.b$e.f` @type ^`c.b.a.b.b$c` := v0 @kind object;
  #L1c13fe.  v0:= v1.`c.b.a.b.b$e.f` @type ^`c.b.a.b.b$c` @kind object;
  #L1c1402.  if v0 != v2 then goto L1c1412;
  #L1c1406.  call temp:= `a`(v1, v0) @signature `Lc/b/a/b/b$e;.a:(Lc/b/a/b/b$c;)Lc/b/a/b/b$c;` @kind virtual;
  #L1c140c.  v0:= temp @kind object;
  #L1c140e.  v1.`c.b.a.b.b$e.f` @type ^`c.b.a.b.b$c` := v0 @kind object;
  #L1c1412.  v0:= v1.`c.b.a.b.b$e.g` @type ^`c.b.a.b.b$c` @kind object;
  #L1c1416.  if v0 != v2 then goto L1c1426;
  #L1c141a.  call temp:= `a`(v1) @signature `Lc/b/a/b/b$e;.a:()Lc/b/a/b/b$c;` @kind direct;
  #L1c1420.  v2:= temp @kind object;
  #L1c1422.  v1.`c.b.a.b.b$e.g` @type ^`c.b.a.b.b$c` := v2 @kind object;
  #L1c1426.  return @kind void;
}
