record `c.b.a.a.b` @kind class @AccessFlag PUBLIC extends `c.b.a.a.c` @kind class {
  `java.lang.Object` `c.b.a.a.b.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ExecutorService` `c.b.a.a.b.b` @AccessFlag PRIVATE_FINAL;
  `android.os.Handler` `c.b.a.a.b.c` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`c.b.a.a.b` v2 @kind this) @signature `Lc/b/a/a/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1c0e9c.  call `<init>`(v2) @signature `Lc/b/a/a/c;.<init>:()V` @kind direct;
  #L1c0ea2.  v0:= new `java.lang.Object`;
  #L1c0ea6.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c0eac.  v2.`c.b.a.a.b.a` @type ^`java.lang.Object` := v0 @kind object;
  #L1c0eb0.  v0:= new `c.b.a.a.b$a`;
  #L1c0eb4.  call `<init>`(v0, v2) @signature `Lc/b/a/a/b$a;.<init>:(Lc/b/a/a/b;)V` @kind direct;
  #L1c0eba.  v1:= 4I;
  #L1c0ebc.  call temp:= `newFixedThreadPool`(v1, v0) @signature `Ljava/util/concurrent/Executors;.newFixedThreadPool:(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;` @kind static;
  #L1c0ec2.  v0:= temp @kind object;
  #L1c0ec4.  v2.`c.b.a.a.b.b` @type ^`java.util.concurrent.ExecutorService` := v0 @kind object;
  #L1c0ec8.  return @kind void;
}
procedure `android.os.Handler` `a`(`android.os.Looper` v7 @kind object) @signature `Lc/b/a/a/b;.a:(Landroid/os/Looper;)Landroid/os/Handler;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1c0db0.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1c0db4.  v1:= 28I;
  #L1c0db8.  if v0 < v1 then goto L1c0dc6;
  #L1c0dbc.  call temp:= `createAsync`(v7) @signature `Landroid/os/Handler;.createAsync:(Landroid/os/Looper;)Landroid/os/Handler;` @kind static;
  #L1c0dc2.  v7:= temp @kind object;
  #L1c0dc4.  return v7 @kind object;
  #L1c0dc6.  v1:= 16I;
  #L1c0dca.  if v0 < v1 then goto L1c0e32;
  #L1c0dce.  v0:= constclass @type ^`android.os.Handler` @kind object;
  #L1c0dd2.  v1:= 3I;
  #L1c0dd4.  v2:= new `java.lang.Class`[v1];
  #L1c0dd8.  v3:= constclass @type ^`android.os.Looper` @kind object;
  #L1c0ddc.  v4:= 0I;
  #L1c0dde.  v2[v4]:= v3 @kind object;
  #L1c0de2.  v3:= constclass @type ^`android.os.Handler$Callback` @kind object;
  #L1c0de6.  v5:= 1I;
  #L1c0de8.  v2[v5]:= v3 @kind object;
  #L1c0dec.  v3:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L1c0df0.  v6:= 2I;
  #L1c0df2.  v2[v6]:= v3 @kind object;
  #L1c0df6.  call temp:= `getDeclaredConstructor`(v0, v2) @signature `Ljava/lang/Class;.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L1c0dfc.  v0:= temp @kind object;
  #L1c0dfe.  v1:= new `java.lang.Object`[v1];
  #L1c0e02.  v1[v4]:= v7 @kind object;
  #L1c0e06.  v2:= 0I;
  #L1c0e08.  v1[v5]:= v2 @kind object;
  #L1c0e0c.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L1c0e12.  v2:= temp @kind object;
  #L1c0e14.  v1[v6]:= v2 @kind object;
  #L1c0e18.  call temp:= `newInstance`(v0, v1) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1c0e1e.  v0:= temp @kind object;
  #L1c0e20.  v0:= (`android.os.Handler`) v0 @kind object;
  #L1c0e24.  return v0 @kind object;
  #L1c0e26.  v0:= new `android.os.Handler`;
  #L1c0e2a.  call `<init>`(v0, v7) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L1c0e30.  return v0 @kind object;
  #L1c0e32.  v0:= new `android.os.Handler`;
  #L1c0e36.  call `<init>`(v0, v7) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L1c0e3c.  return v0 @kind object;
  catch `java.lang.IllegalAccessException` @[L1c0dce..L1c0e24] goto L1c0e32;
  catch `java.lang.InstantiationException` @[L1c0dce..L1c0e24] goto L1c0e32;
  catch `java.lang.NoSuchMethodException` @[L1c0dce..L1c0e24] goto L1c0e32;
  catch `java.lang.reflect.InvocationTargetException` @[L1c0dce..L1c0e24] goto L1c0e26;
}
procedure `void` `executeOnDiskIO`(`c.b.a.a.b` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lc/b/a/a/b;.executeOnDiskIO:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c0edc.  v0:= v1.`c.b.a.a.b.b` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L1c0ee0.  call `execute`(v0, v2) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L1c0ee6.  return @kind void;
}
procedure `boolean` `isMainThread`(`c.b.a.a.b` v2 @kind this) @signature `Lc/b/a/a/b;.isMainThread:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c0e68.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L1c0e6e.  v0:= temp @kind object;
  #L1c0e70.  call temp:= `getThread`(v0) @signature `Landroid/os/Looper;.getThread:()Ljava/lang/Thread;` @kind virtual;
  #L1c0e76.  v0:= temp @kind object;
  #L1c0e78.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L1c0e7e.  v1:= temp @kind object;
  #L1c0e80.  if v0 != v1 then goto L1c0e88;
  #L1c0e84.  v0:= 1I;
  #L1c0e86.  goto L1c0e8a;
  #L1c0e88.  v0:= 0I;
  #L1c0e8a.  return v0;
}
procedure `void` `postToMainThread`(`c.b.a.a.b` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lc/b/a/a/b;.postToMainThread:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c0ef8.  v0:= v2.`c.b.a.a.b.c` @type ^`android.os.Handler` @kind object;
  #L1c0efc.  if v0 != 0 then goto L1c0f2c;
  #L1c0f00.  v0:= v2.`c.b.a.a.b.a` @type ^`java.lang.Object` @kind object;
  #L1c0f04.  @monitorenter v0
  #L1c0f06.  v1:= v2.`c.b.a.a.b.c` @type ^`android.os.Handler` @kind object;
  #L1c0f0a.  if v1 != 0 then goto L1c0f22;
  #L1c0f0e.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L1c0f14.  v1:= temp @kind object;
  #L1c0f16.  call temp:= `a`(v1) @signature `Lc/b/a/a/b;.a:(Landroid/os/Looper;)Landroid/os/Handler;` @kind static;
  #L1c0f1c.  v1:= temp @kind object;
  #L1c0f1e.  v2.`c.b.a.a.b.c` @type ^`android.os.Handler` := v1 @kind object;
  #L1c0f22.  @monitorexit v0
  #L1c0f24.  goto L1c0f2c;
  #L1c0f26.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1c0f28.  @monitorexit v0
  #L1c0f2a.  throw v3;
  #L1c0f2c.  v0:= v2.`c.b.a.a.b.c` @type ^`android.os.Handler` @kind object;
  #L1c0f30.  call temp:= `post`(v0, v3) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L1c0f36.  return @kind void;
  catch `java.lang.Throwable` @[L1c0f06..L1c0f2a] goto L1c0f26;
}
