record `c.k.a.a$c` @kind class @AccessFlag  {
  `int` `c.k.a.a$c.a` @AccessFlag PUBLIC_FINAL;
  `int` `c.k.a.a$c.b` @AccessFlag PUBLIC_FINAL;
  `byte`[] `c.k.a.a$c.c` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`c.k.a.a$c` v0 @kind this, `int` v1 , `int` v2 , `byte`[] v3 @kind object) @signature `Lc/k/a/a$c;.<init>:(II[B)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L20c310.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L20c316.  v0.`c.k.a.a$c.a` @type ^`int` := v1;
  #L20c31a.  v0.`c.k.a.a$c.b` @type ^`int` := v2;
  #L20c31e.  v0.`c.k.a.a$c.c` @type ^`byte`[] := v3 @kind object;
  #L20c322.  return @kind void;
}
procedure `c.k.a.a$c` `createByte`(`java.lang.String` v5 @kind object) @signature `Lc/k/a/a$c;.createByte:(Ljava/lang/String;)Lc/k/a/a$c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L20b718.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L20b71e.  v0:= temp;
  #L20b720.  v1:= 1I;
  #L20b722.  if v0 != v1 then goto L20b76a;
  #L20b726.  v0:= 0I;
  #L20b728.  call temp:= `charAt`(v5, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L20b72e.  v2:= temp;
  #L20b730.  v3:= 48I;
  #L20b734.  if v2 < v3 then goto L20b76a;
  #L20b738.  call temp:= `charAt`(v5, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L20b73e.  v2:= temp;
  #L20b740.  v4:= 49I;
  #L20b744.  if v2 > v4 then goto L20b76a;
  #L20b748.  v2:= new `byte`[v1];
  #L20b74c.  call temp:= `charAt`(v5, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L20b752.  v5:= temp;
  #L20b754.  v5:= v5 - v3 @kind int;
  #L20b756.  v5:= (`byte`) v5 @kind i2b;
  #L20b758.  v2[v0]:= v5 @kind byte;
  #L20b75c.  v5:= new `c.k.a.a$c`;
  #L20b760.  v0:= length @variable v2;
  #L20b762.  call `<init>`(v5, v1, v0, v2) @signature `Lc/k/a/a$c;.<init>:(II[B)V` @kind direct;
  #L20b768.  return v5 @kind object;
  #L20b76a.  v0:= `@@c.k.a.a.S` @type ^`java.nio.charset.Charset` @kind object;
  #L20b76e.  call temp:= `getBytes`(v5, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L20b774.  v5:= temp @kind object;
  #L20b776.  v0:= new `c.k.a.a$c`;
  #L20b77a.  v2:= length @variable v5;
  #L20b77c.  call `<init>`(v0, v1, v2, v5) @signature `Lc/k/a/a$c;.<init>:(II[B)V` @kind direct;
  #L20b782.  return v0 @kind object;
}
procedure `c.k.a.a$c` `createDouble`(`double`[] v5 @kind object, `java.nio.ByteOrder` v6 @kind object) @signature `Lc/k/a/a$c;.createDouble:([DLjava/nio/ByteOrder;)Lc/k/a/a$c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L20b794.  v0:= `@@c.k.a.a.y` @type ^`int`[] @kind object;
  #L20b798.  v1:= 12I;
  #L20b79c.  v0:= v0[v1];
  #L20b7a0.  v2:= length @variable v5;
  #L20b7a2.  v0:= v0 * v2 @kind int;
  #L20b7a6.  v0:= new `byte`[v0];
  #L20b7aa.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L20b7b0.  v0:= temp @kind object;
  #L20b7b2.  call temp:= `order`(v0, v6) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L20b7b8.  v6:= length @variable v5;
  #L20b7ba.  v2:= 0I;
  #L20b7bc.  if v2 >= v6 then goto L20b7d0;
  #L20b7c0.  v3:= v5[v2] @kind wide;
  #L20b7c4.  call temp:= `putDouble`(v0, v3) @signature `Ljava/nio/ByteBuffer;.putDouble:(D)Ljava/nio/ByteBuffer;` @kind virtual;
  #L20b7ca.  v2:= v2 + 1;
  #L20b7ce.  goto L20b7bc;
  #L20b7d0.  v6:= new `c.k.a.a$c`;
  #L20b7d4.  v5:= length @variable v5;
  #L20b7d6.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L20b7dc.  v0:= temp @kind object;
  #L20b7de.  call `<init>`(v6, v1, v5, v0) @signature `Lc/k/a/a$c;.<init>:(II[B)V` @kind direct;
  #L20b7e4.  return v6 @kind object;
}
procedure `c.k.a.a$c` `createSLong`(`int`[] v4 @kind object, `java.nio.ByteOrder` v5 @kind object) @signature `Lc/k/a/a$c;.createSLong:([ILjava/nio/ByteOrder;)Lc/k/a/a$c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20b7f8.  v0:= `@@c.k.a.a.y` @type ^`int`[] @kind object;
  #L20b7fc.  v1:= 9I;
  #L20b800.  v0:= v0[v1];
  #L20b804.  v2:= length @variable v4;
  #L20b806.  v0:= v0 * v2 @kind int;
  #L20b80a.  v0:= new `byte`[v0];
  #L20b80e.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L20b814.  v0:= temp @kind object;
  #L20b816.  call temp:= `order`(v0, v5) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L20b81c.  v5:= length @variable v4;
  #L20b81e.  v2:= 0I;
  #L20b820.  if v2 >= v5 then goto L20b834;
  #L20b824.  v3:= v4[v2];
  #L20b828.  call temp:= `putInt`(v0, v3) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L20b82e.  v2:= v2 + 1;
  #L20b832.  goto L20b820;
  #L20b834.  v5:= new `c.k.a.a$c`;
  #L20b838.  v4:= length @variable v4;
  #L20b83a.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L20b840.  v0:= temp @kind object;
  #L20b842.  call `<init>`(v5, v1, v4, v0) @signature `Lc/k/a/a$c;.<init>:(II[B)V` @kind direct;
  #L20b848.  return v5 @kind object;
}
procedure `c.k.a.a$c` `createSRational`(`c.k.a.a$e`[] v6 @kind object, `java.nio.ByteOrder` v7 @kind object) @signature `Lc/k/a/a$c;.createSRational:([Lc/k/a/a$e;Ljava/nio/ByteOrder;)Lc/k/a/a$c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L20b85c.  v0:= `@@c.k.a.a.y` @type ^`int`[] @kind object;
  #L20b860.  v1:= 10I;
  #L20b864.  v0:= v0[v1];
  #L20b868.  v2:= length @variable v6;
  #L20b86a.  v0:= v0 * v2 @kind int;
  #L20b86e.  v0:= new `byte`[v0];
  #L20b872.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L20b878.  v0:= temp @kind object;
  #L20b87a.  call temp:= `order`(v0, v7) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L20b880.  v7:= length @variable v6;
  #L20b882.  v2:= 0I;
  #L20b884.  if v2 >= v7 then goto L20b8aa;
  #L20b888.  v3:= v6[v2] @kind object;
  #L20b88c.  v4:= v3.`c.k.a.a$e.a` @type ^`long` @kind wide;
  #L20b890.  v5:= (`int`) v4 @kind l2i;
  #L20b892.  call temp:= `putInt`(v0, v5) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L20b898.  v3:= v3.`c.k.a.a$e.b` @type ^`long` @kind wide;
  #L20b89c.  v4:= (`int`) v3 @kind l2i;
  #L20b89e.  call temp:= `putInt`(v0, v4) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L20b8a4.  v2:= v2 + 1;
  #L20b8a8.  goto L20b884;
  #L20b8aa.  v7:= new `c.k.a.a$c`;
  #L20b8ae.  v6:= length @variable v6;
  #L20b8b0.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L20b8b6.  v0:= temp @kind object;
  #L20b8b8.  call `<init>`(v7, v1, v6, v0) @signature `Lc/k/a/a$c;.<init>:(II[B)V` @kind direct;
  #L20b8be.  return v7 @kind object;
}
procedure `c.k.a.a$c` `createString`(`java.lang.String` v3 @kind object) @signature `Lc/k/a/a$c;.createString:(Ljava/lang/String;)Lc/k/a/a$c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L20b8d0.  v0:= new `java.lang.StringBuilder`;
  #L20b8d4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20b8da.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20b8e0.  v3:= 0I;
  #L20b8e2.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L20b8e8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20b8ee.  v3:= temp @kind object;
  #L20b8f0.  v0:= `@@c.k.a.a.S` @type ^`java.nio.charset.Charset` @kind object;
  #L20b8f4.  call temp:= `getBytes`(v3, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L20b8fa.  v3:= temp @kind object;
  #L20b8fc.  v0:= new `c.k.a.a$c`;
  #L20b900.  v1:= length @variable v3;
  #L20b902.  v2:= 2I;
  #L20b904.  call `<init>`(v0, v2, v1, v3) @signature `Lc/k/a/a$c;.<init>:(II[B)V` @kind direct;
  #L20b90a.  return v0 @kind object;
}
procedure `c.k.a.a$c` `createULong`(`long` v2 , `java.nio.ByteOrder` v4 @kind object) @signature `Lc/k/a/a$c;.createULong:(JLjava/nio/ByteOrder;)Lc/k/a/a$c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L20b91c.  v0:= 1I;
  #L20b91e.  v0:= new `long`[v0];
  #L20b922.  v1:= 0I;
  #L20b924.  v0[v1]:= v2 @kind wide;
  #L20b928.  call temp:= `createULong`(v0, v4) @signature `Lc/k/a/a$c;.createULong:([JLjava/nio/ByteOrder;)Lc/k/a/a$c;` @kind static;
  #L20b92e.  v2:= temp @kind object;
  #L20b930.  return v2 @kind object;
}
procedure `c.k.a.a$c` `createULong`(`long`[] v5 @kind object, `java.nio.ByteOrder` v6 @kind object) @signature `Lc/k/a/a$c;.createULong:([JLjava/nio/ByteOrder;)Lc/k/a/a$c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L20b944.  v0:= `@@c.k.a.a.y` @type ^`int`[] @kind object;
  #L20b948.  v1:= 4I;
  #L20b94a.  v0:= v0[v1];
  #L20b94e.  v2:= length @variable v5;
  #L20b950.  v0:= v0 * v2 @kind int;
  #L20b954.  v0:= new `byte`[v0];
  #L20b958.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L20b95e.  v0:= temp @kind object;
  #L20b960.  call temp:= `order`(v0, v6) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L20b966.  v6:= length @variable v5;
  #L20b968.  v2:= 0I;
  #L20b96a.  if v2 >= v6 then goto L20b980;
  #L20b96e.  v3:= v5[v2] @kind wide;
  #L20b972.  v4:= (`int`) v3 @kind l2i;
  #L20b974.  call temp:= `putInt`(v0, v4) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L20b97a.  v2:= v2 + 1;
  #L20b97e.  goto L20b96a;
  #L20b980.  v6:= new `c.k.a.a$c`;
  #L20b984.  v5:= length @variable v5;
  #L20b986.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L20b98c.  v0:= temp @kind object;
  #L20b98e.  call `<init>`(v6, v1, v5, v0) @signature `Lc/k/a/a$c;.<init>:(II[B)V` @kind direct;
  #L20b994.  return v6 @kind object;
}
procedure `c.k.a.a$c` `createURational`(`c.k.a.a$e` v2 @kind object, `java.nio.ByteOrder` v3 @kind object) @signature `Lc/k/a/a$c;.createURational:(Lc/k/a/a$e;Ljava/nio/ByteOrder;)Lc/k/a/a$c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L20b9a8.  v0:= 1I;
  #L20b9aa.  v0:= new `c.k.a.a$e`[v0];
  #L20b9ae.  v1:= 0I;
  #L20b9b0.  v0[v1]:= v2 @kind object;
  #L20b9b4.  call temp:= `createURational`(v0, v3) @signature `Lc/k/a/a$c;.createURational:([Lc/k/a/a$e;Ljava/nio/ByteOrder;)Lc/k/a/a$c;` @kind static;
  #L20b9ba.  v2:= temp @kind object;
  #L20b9bc.  return v2 @kind object;
}
procedure `c.k.a.a$c` `createURational`(`c.k.a.a$e`[] v6 @kind object, `java.nio.ByteOrder` v7 @kind object) @signature `Lc/k/a/a$c;.createURational:([Lc/k/a/a$e;Ljava/nio/ByteOrder;)Lc/k/a/a$c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L20b9d0.  v0:= `@@c.k.a.a.y` @type ^`int`[] @kind object;
  #L20b9d4.  v1:= 5I;
  #L20b9d6.  v0:= v0[v1];
  #L20b9da.  v2:= length @variable v6;
  #L20b9dc.  v0:= v0 * v2 @kind int;
  #L20b9e0.  v0:= new `byte`[v0];
  #L20b9e4.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L20b9ea.  v0:= temp @kind object;
  #L20b9ec.  call temp:= `order`(v0, v7) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L20b9f2.  v7:= length @variable v6;
  #L20b9f4.  v2:= 0I;
  #L20b9f6.  if v2 >= v7 then goto L20ba1c;
  #L20b9fa.  v3:= v6[v2] @kind object;
  #L20b9fe.  v4:= v3.`c.k.a.a$e.a` @type ^`long` @kind wide;
  #L20ba02.  v5:= (`int`) v4 @kind l2i;
  #L20ba04.  call temp:= `putInt`(v0, v5) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L20ba0a.  v3:= v3.`c.k.a.a$e.b` @type ^`long` @kind wide;
  #L20ba0e.  v4:= (`int`) v3 @kind l2i;
  #L20ba10.  call temp:= `putInt`(v0, v4) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L20ba16.  v2:= v2 + 1;
  #L20ba1a.  goto L20b9f6;
  #L20ba1c.  v7:= new `c.k.a.a$c`;
  #L20ba20.  v6:= length @variable v6;
  #L20ba22.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L20ba28.  v0:= temp @kind object;
  #L20ba2a.  call `<init>`(v7, v1, v6, v0) @signature `Lc/k/a/a$c;.<init>:(II[B)V` @kind direct;
  #L20ba30.  return v7 @kind object;
}
procedure `c.k.a.a$c` `createUShort`(`int` v2 , `java.nio.ByteOrder` v3 @kind object) @signature `Lc/k/a/a$c;.createUShort:(ILjava/nio/ByteOrder;)Lc/k/a/a$c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L20ba44.  v0:= 1I;
  #L20ba46.  v0:= new `int`[v0];
  #L20ba4a.  v1:= 0I;
  #L20ba4c.  v0[v1]:= v2;
  #L20ba50.  call temp:= `createUShort`(v0, v3) @signature `Lc/k/a/a$c;.createUShort:([ILjava/nio/ByteOrder;)Lc/k/a/a$c;` @kind static;
  #L20ba56.  v2:= temp @kind object;
  #L20ba58.  return v2 @kind object;
}
procedure `c.k.a.a$c` `createUShort`(`int`[] v4 @kind object, `java.nio.ByteOrder` v5 @kind object) @signature `Lc/k/a/a$c;.createUShort:([ILjava/nio/ByteOrder;)Lc/k/a/a$c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20ba6c.  v0:= `@@c.k.a.a.y` @type ^`int`[] @kind object;
  #L20ba70.  v1:= 3I;
  #L20ba72.  v0:= v0[v1];
  #L20ba76.  v2:= length @variable v4;
  #L20ba78.  v0:= v0 * v2 @kind int;
  #L20ba7c.  v0:= new `byte`[v0];
  #L20ba80.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L20ba86.  v0:= temp @kind object;
  #L20ba88.  call temp:= `order`(v0, v5) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L20ba8e.  v5:= length @variable v4;
  #L20ba90.  v2:= 0I;
  #L20ba92.  if v2 >= v5 then goto L20baa8;
  #L20ba96.  v3:= v4[v2];
  #L20ba9a.  v3:= (`short`) v3 @kind i2s;
  #L20ba9c.  call temp:= `putShort`(v0, v3) @signature `Ljava/nio/ByteBuffer;.putShort:(S)Ljava/nio/ByteBuffer;` @kind virtual;
  #L20baa2.  v2:= v2 + 1;
  #L20baa6.  goto L20ba92;
  #L20baa8.  v5:= new `c.k.a.a$c`;
  #L20baac.  v4:= length @variable v4;
  #L20baae.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L20bab4.  v0:= temp @kind object;
  #L20bab6.  call `<init>`(v5, v1, v4, v0) @signature `Lc/k/a/a$c;.<init>:(II[B)V` @kind direct;
  #L20babc.  return v5 @kind object;
}
procedure `java.lang.Object` `a`(`c.k.a.a$c` v10 @kind this, `java.nio.ByteOrder` v11 @kind object) @signature `Lc/k/a/a$c;.a:(Ljava/nio/ByteOrder;)Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L20bc94.  v0:= "IOException occurred while closing InputStream" @kind object;
  #L20bc98.  v1:= "ExifInterface" @kind object;
  #L20bc9c.  v2:= 0I;
  #L20bc9e.  v3:= new `c.k.a.a$a`;
  #L20bca2.  v4:= v10.`c.k.a.a$c.c` @type ^`byte`[] @kind object;
  #L20bca6.  call `<init>`(v3, v4) @signature `Lc/k/a/a$a;.<init>:([B)V` @kind direct;
  #L20bcac.  call `setByteOrder`(v3, v11) @signature `Lc/k/a/a$a;.setByteOrder:(Ljava/nio/ByteOrder;)V` @kind virtual;
  #L20bcb2.  v11:= v10.`c.k.a.a$c.a` @type ^`int`;
  #L20bcb6.  v4:= 1I;
  #L20bcb8.  v5:= 0I;
  #L20bcba.  goto L20bffc;
  #L20bcc0.  goto L20bfa4;
  #L20bcc4.  v11:= v10.`c.k.a.a$c.b` @type ^`int`;
  #L20bcc8.  v11:= new `double`[v11];
  #L20bccc.  v4:= v10.`c.k.a.a$c.b` @type ^`int`;
  #L20bcd0.  if v5 >= v4 then goto L20bce6;
  #L20bcd4.  call temp:= `readDouble`(v3) @signature `Lc/k/a/a$a;.readDouble:()D` @kind virtual;
  #L20bcda.  v6:= temp @kind wide;
  #L20bcdc.  v11[v5]:= v6 @kind wide;
  #L20bce0.  v5:= v5 + 1;
  #L20bce4.  goto L20bccc;
  #L20bce6.  call `close`(v3) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L20bcec.  goto L20bcf6;
  #L20bcee.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L20bcf0.  call temp:= `e`(v1, v0, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L20bcf6.  return v11 @kind object;
  #L20bcf8.  v11:= v10.`c.k.a.a$c.b` @type ^`int`;
  #L20bcfc.  v11:= new `double`[v11];
  #L20bd00.  v4:= v10.`c.k.a.a$c.b` @type ^`int`;
  #L20bd04.  if v5 >= v4 then goto L20bd1c;
  #L20bd08.  call temp:= `readFloat`(v3) @signature `Lc/k/a/a$a;.readFloat:()F` @kind virtual;
  #L20bd0e.  v4:= temp;
  #L20bd10.  v6:= (`double`) v4 @kind f2d;
  #L20bd12.  v11[v5]:= v6 @kind wide;
  #L20bd16.  v5:= v5 + 1;
  #L20bd1a.  goto L20bd00;
  #L20bd1c.  call `close`(v3) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L20bd22.  goto L20bd2c;
  #L20bd24.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L20bd26.  call temp:= `e`(v1, v0, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L20bd2c.  return v11 @kind object;
  #L20bd2e.  v11:= v10.`c.k.a.a$c.b` @type ^`int`;
  #L20bd32.  v11:= new `c.k.a.a$e`[v11];
  #L20bd36.  v4:= v10.`c.k.a.a$c.b` @type ^`int`;
  #L20bd3a.  if v5 >= v4 then goto L20bd66;
  #L20bd3e.  call temp:= `readInt`(v3) @signature `Lc/k/a/a$a;.readInt:()I` @kind virtual;
  #L20bd44.  v4:= temp;
  #L20bd46.  v6:= (`long`) v4 @kind i2l;
  #L20bd48.  call temp:= `readInt`(v3) @signature `Lc/k/a/a$a;.readInt:()I` @kind virtual;
  #L20bd4e.  v4:= temp;
  #L20bd50.  v8:= (`long`) v4 @kind i2l;
  #L20bd52.  v4:= new `c.k.a.a$e`;
  #L20bd56.  call `<init>`(v4, v6, v8) @signature `Lc/k/a/a$e;.<init>:(JJ)V` @kind direct;
  #L20bd5c.  v11[v5]:= v4 @kind object;
  #L20bd60.  v5:= v5 + 1;
  #L20bd64.  goto L20bd36;
  #L20bd66.  call `close`(v3) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L20bd6c.  goto L20bd76;
  #L20bd6e.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L20bd70.  call temp:= `e`(v1, v0, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L20bd76.  return v11 @kind object;
  #L20bd78.  v11:= v10.`c.k.a.a$c.b` @type ^`int`;
  #L20bd7c.  v11:= new `int`[v11];
  #L20bd80.  v4:= v10.`c.k.a.a$c.b` @type ^`int`;
  #L20bd84.  if v5 >= v4 then goto L20bd9a;
  #L20bd88.  call temp:= `readInt`(v3) @signature `Lc/k/a/a$a;.readInt:()I` @kind virtual;
  #L20bd8e.  v4:= temp;
  #L20bd90.  v11[v5]:= v4;
  #L20bd94.  v5:= v5 + 1;
  #L20bd98.  goto L20bd80;
  #L20bd9a.  call `close`(v3) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L20bda0.  goto L20bdaa;
  #L20bda2.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L20bda4.  call temp:= `e`(v1, v0, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L20bdaa.  return v11 @kind object;
  #L20bdac.  v11:= v10.`c.k.a.a$c.b` @type ^`int`;
  #L20bdb0.  v11:= new `int`[v11];
  #L20bdb4.  v4:= v10.`c.k.a.a$c.b` @type ^`int`;
  #L20bdb8.  if v5 >= v4 then goto L20bdce;
  #L20bdbc.  call temp:= `readShort`(v3) @signature `Lc/k/a/a$a;.readShort:()S` @kind virtual;
  #L20bdc2.  v4:= temp;
  #L20bdc4.  v11[v5]:= v4;
  #L20bdc8.  v5:= v5 + 1;
  #L20bdcc.  goto L20bdb4;
  #L20bdce.  call `close`(v3) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L20bdd4.  goto L20bdde;
  #L20bdd6.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L20bdd8.  call temp:= `e`(v1, v0, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L20bdde.  return v11 @kind object;
  #L20bde0.  v11:= v10.`c.k.a.a$c.b` @type ^`int`;
  #L20bde4.  v11:= new `c.k.a.a$e`[v11];
  #L20bde8.  v4:= v10.`c.k.a.a$c.b` @type ^`int`;
  #L20bdec.  if v5 >= v4 then goto L20be14;
  #L20bdf0.  call temp:= `readUnsignedInt`(v3) @signature `Lc/k/a/a$a;.readUnsignedInt:()J` @kind virtual;
  #L20bdf6.  v6:= temp @kind wide;
  #L20bdf8.  call temp:= `readUnsignedInt`(v3) @signature `Lc/k/a/a$a;.readUnsignedInt:()J` @kind virtual;
  #L20bdfe.  v8:= temp @kind wide;
  #L20be00.  v4:= new `c.k.a.a$e`;
  #L20be04.  call `<init>`(v4, v6, v8) @signature `Lc/k/a/a$e;.<init>:(JJ)V` @kind direct;
  #L20be0a.  v11[v5]:= v4 @kind object;
  #L20be0e.  v5:= v5 + 1;
  #L20be12.  goto L20bde8;
  #L20be14.  call `close`(v3) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L20be1a.  goto L20be24;
  #L20be1c.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L20be1e.  call temp:= `e`(v1, v0, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L20be24.  return v11 @kind object;
  #L20be26.  v11:= v10.`c.k.a.a$c.b` @type ^`int`;
  #L20be2a.  v11:= new `long`[v11];
  #L20be2e.  v4:= v10.`c.k.a.a$c.b` @type ^`int`;
  #L20be32.  if v5 >= v4 then goto L20be48;
  #L20be36.  call temp:= `readUnsignedInt`(v3) @signature `Lc/k/a/a$a;.readUnsignedInt:()J` @kind virtual;
  #L20be3c.  v6:= temp @kind wide;
  #L20be3e.  v11[v5]:= v6 @kind wide;
  #L20be42.  v5:= v5 + 1;
  #L20be46.  goto L20be2e;
  #L20be48.  call `close`(v3) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L20be4e.  goto L20be58;
  #L20be50.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L20be52.  call temp:= `e`(v1, v0, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L20be58.  return v11 @kind object;
  #L20be5a.  v11:= v10.`c.k.a.a$c.b` @type ^`int`;
  #L20be5e.  v11:= new `int`[v11];
  #L20be62.  v4:= v10.`c.k.a.a$c.b` @type ^`int`;
  #L20be66.  if v5 >= v4 then goto L20be7c;
  #L20be6a.  call temp:= `readUnsignedShort`(v3) @signature `Lc/k/a/a$a;.readUnsignedShort:()I` @kind virtual;
  #L20be70.  v4:= temp;
  #L20be72.  v11[v5]:= v4;
  #L20be76.  v5:= v5 + 1;
  #L20be7a.  goto L20be62;
  #L20be7c.  call `close`(v3) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L20be82.  goto L20be8c;
  #L20be84.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L20be86.  call temp:= `e`(v1, v0, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L20be8c.  return v11 @kind object;
  #L20be8e.  v11:= v10.`c.k.a.a$c.b` @type ^`int`;
  #L20be92.  v6:= `@@c.k.a.a.z` @type ^`byte`[] @kind object;
  #L20be96.  v6:= length @variable v6;
  #L20be98.  if v11 < v6 then goto L20bed0;
  #L20be9c.  v11:= 0I;
  #L20be9e.  v6:= `@@c.k.a.a.z` @type ^`byte`[] @kind object;
  #L20bea2.  v6:= length @variable v6;
  #L20bea4.  if v11 >= v6 then goto L20bec6;
  #L20bea8.  v6:= v10.`c.k.a.a$c.c` @type ^`byte`[] @kind object;
  #L20beac.  v6:= v6[v11] @kind byte;
  #L20beb0.  v7:= `@@c.k.a.a.z` @type ^`byte`[] @kind object;
  #L20beb4.  v7:= v7[v11] @kind byte;
  #L20beb8.  if v6 == v7 then goto L20bec0;
  #L20bebc.  v4:= 0I;
  #L20bebe.  goto L20bec6;
  #L20bec0.  v11:= v11 + 1;
  #L20bec4.  goto L20be9e;
  #L20bec6.  if v4 == 0 then goto L20bed0;
  #L20beca.  v11:= `@@c.k.a.a.z` @type ^`byte`[] @kind object;
  #L20bece.  v5:= length @variable v11;
  #L20bed0.  v11:= new `java.lang.StringBuilder`;
  #L20bed4.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20beda.  v4:= v10.`c.k.a.a$c.b` @type ^`int`;
  #L20bede.  if v5 >= v4 then goto L20bf12;
  #L20bee2.  v4:= v10.`c.k.a.a$c.c` @type ^`byte`[] @kind object;
  #L20bee6.  v4:= v4[v5] @kind byte;
  #L20beea.  if v4 != 0 then goto L20bef0;
  #L20beee.  goto L20bf12;
  #L20bef0.  v6:= 32I;
  #L20bef4.  if v4 < v6 then goto L20bf02;
  #L20bef8.  v4:= (`char`) v4 @kind i2c;
  #L20befa.  call temp:= `append`(v11, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L20bf00.  goto L20bf0c;
  #L20bf02.  v4:= 63I;
  #L20bf06.  call temp:= `append`(v11, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L20bf0c.  v5:= v5 + 1;
  #L20bf10.  goto L20beda;
  #L20bf12.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20bf18.  v11:= temp @kind object;
  #L20bf1a.  call `close`(v3) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L20bf20.  goto L20bf2a;
  #L20bf22.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L20bf24.  call temp:= `e`(v1, v0, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L20bf2a.  return v11 @kind object;
  #L20bf2c.  v11:= v10.`c.k.a.a$c.c` @type ^`byte`[] @kind object;
  #L20bf30.  v11:= length @variable v11;
  #L20bf32.  if v11 != v4 then goto L20bf80;
  #L20bf36.  v11:= v10.`c.k.a.a$c.c` @type ^`byte`[] @kind object;
  #L20bf3a.  v11:= v11[v5] @kind byte;
  #L20bf3e.  if v11 < 0 then goto L20bf80;
  #L20bf42.  v11:= v10.`c.k.a.a$c.c` @type ^`byte`[] @kind object;
  #L20bf46.  v11:= v11[v5] @kind byte;
  #L20bf4a.  if v11 > v4 then goto L20bf80;
  #L20bf4e.  v11:= new `java.lang.String`;
  #L20bf52.  v4:= new `char`[v4];
  #L20bf56.  v6:= v10.`c.k.a.a$c.c` @type ^`byte`[] @kind object;
  #L20bf5a.  v6:= v6[v5] @kind byte;
  #L20bf5e.  v6:= v6 + 48;
  #L20bf62.  v6:= (`char`) v6 @kind i2c;
  #L20bf64.  v4[v5]:= v6 @kind char;
  #L20bf68.  call `<init>`(v11, v4) @signature `Ljava/lang/String;.<init>:([C)V` @kind direct;
  #L20bf6e.  call `close`(v3) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L20bf74.  goto L20bf7e;
  #L20bf76.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L20bf78.  call temp:= `e`(v1, v0, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L20bf7e.  return v11 @kind object;
  #L20bf80.  v11:= new `java.lang.String`;
  #L20bf84.  v4:= v10.`c.k.a.a$c.c` @type ^`byte`[] @kind object;
  #L20bf88.  v5:= `@@c.k.a.a.S` @type ^`java.nio.charset.Charset` @kind object;
  #L20bf8c.  call `<init>`(v11, v4, v5) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L20bf92.  call `close`(v3) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L20bf98.  goto L20bfa2;
  #L20bf9a.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L20bf9c.  call temp:= `e`(v1, v0, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L20bfa2.  return v11 @kind object;
  #L20bfa4.  call `close`(v3) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L20bfaa.  goto L20bfb4;
  #L20bfac.  v11:= Exception @type ^`java.io.IOException` @kind object;
  #L20bfae.  call temp:= `e`(v1, v0, v11) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L20bfb4.  return v2 @kind object;
  #L20bfb6.  v11:= Exception @type ^`java.io.IOException` @kind object;
  #L20bfb8.  goto L20bfc4;
  #L20bfba.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20bfbc.  v3:= v2 @kind object;
  #L20bfbe.  goto L20bfe6;
  #L20bfc0.  v11:= Exception @type ^`java.io.IOException` @kind object;
  #L20bfc2.  v3:= v2 @kind object;
  #L20bfc4.  v4:= "IOException occurred during reading a value" @kind object;
  #L20bfc8.  call temp:= `w`(v1, v4, v11) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L20bfce.  if v3 == 0 then goto L20bfe2;
  #L20bfd2.  call `close`(v3) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L20bfd8.  goto L20bfe2;
  #L20bfda.  v11:= Exception @type ^`java.io.IOException` @kind object;
  #L20bfdc.  call temp:= `e`(v1, v0, v11) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L20bfe2.  return v2 @kind object;
  #L20bfe4.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L20bfe6.  if v3 == 0 then goto L20bffa;
  #L20bfea.  call `close`(v3) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L20bff0.  goto L20bffa;
  #L20bff2.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L20bff4.  call temp:= `e`(v1, v0, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L20bffa.  throw v11;
  #L20bffc.  switch v11
                  | 1 => goto L20bf2c
                  | 2 => goto L20be8e
                  | 3 => goto L20be5a
                  | 4 => goto L20be26
                  | 5 => goto L20bde0
                  | 6 => goto L20bf2c
                  | 7 => goto L20be8e
                  | 8 => goto L20bdac
                  | 9 => goto L20bd78
                  | 10 => goto L20bd2e
                  | 11 => goto L20bcf8
                  | 12 => goto L20bcc4
                  | else => goto L20bcc0;
  catch `java.io.IOException` @[L20bc9e..L20bcac] goto L20bfc0;
  catch `java.lang.Throwable` @[L20bc9e..L20bcac] goto L20bfba;
  catch `java.io.IOException` @[L20bcac..L20bce0] goto L20bfb6;
  catch `java.lang.Throwable` @[L20bcac..L20bce0] goto L20bfe4;
  catch `java.io.IOException` @[L20bce6..L20bcec] goto L20bcee;
  catch `java.io.IOException` @[L20bcf8..L20bd16] goto L20bfb6;
  catch `java.lang.Throwable` @[L20bcf8..L20bd16] goto L20bfe4;
  catch `java.io.IOException` @[L20bd1c..L20bd22] goto L20bd24;
  catch `java.io.IOException` @[L20bd2e..L20bd60] goto L20bfb6;
  catch `java.lang.Throwable` @[L20bd2e..L20bd60] goto L20bfe4;
  catch `java.io.IOException` @[L20bd66..L20bd6c] goto L20bd6e;
  catch `java.io.IOException` @[L20bd78..L20bd94] goto L20bfb6;
  catch `java.lang.Throwable` @[L20bd78..L20bd94] goto L20bfe4;
  catch `java.io.IOException` @[L20bd9a..L20bda0] goto L20bda2;
  catch `java.io.IOException` @[L20bdac..L20bdc8] goto L20bfb6;
  catch `java.lang.Throwable` @[L20bdac..L20bdc8] goto L20bfe4;
  catch `java.io.IOException` @[L20bdce..L20bdd4] goto L20bdd6;
  catch `java.io.IOException` @[L20bde0..L20be0e] goto L20bfb6;
  catch `java.lang.Throwable` @[L20bde0..L20be0e] goto L20bfe4;
  catch `java.io.IOException` @[L20be14..L20be1a] goto L20be1c;
  catch `java.io.IOException` @[L20be26..L20be42] goto L20bfb6;
  catch `java.lang.Throwable` @[L20be26..L20be42] goto L20bfe4;
  catch `java.io.IOException` @[L20be48..L20be4e] goto L20be50;
  catch `java.io.IOException` @[L20be5a..L20be76] goto L20bfb6;
  catch `java.lang.Throwable` @[L20be5a..L20be76] goto L20bfe4;
  catch `java.io.IOException` @[L20be7c..L20be82] goto L20be84;
  catch `java.io.IOException` @[L20be8e..L20bf1a] goto L20bfb6;
  catch `java.lang.Throwable` @[L20be8e..L20bf1a] goto L20bfe4;
  catch `java.io.IOException` @[L20bf1a..L20bf20] goto L20bf22;
  catch `java.io.IOException` @[L20bf2c..L20bf6e] goto L20bfb6;
  catch `java.lang.Throwable` @[L20bf2c..L20bf6e] goto L20bfe4;
  catch `java.io.IOException` @[L20bf6e..L20bf74] goto L20bf76;
  catch `java.io.IOException` @[L20bf80..L20bf92] goto L20bfb6;
  catch `java.lang.Throwable` @[L20bf80..L20bf92] goto L20bfe4;
  catch `java.io.IOException` @[L20bf92..L20bf98] goto L20bf9a;
  catch `java.io.IOException` @[L20bfa4..L20bfaa] goto L20bfac;
  catch `java.lang.Throwable` @[L20bfc4..L20bfce] goto L20bfe4;
  catch `java.io.IOException` @[L20bfd2..L20bfd8] goto L20bfda;
  catch `java.io.IOException` @[L20bfea..L20bff0] goto L20bff2;
}
procedure `double` `getDoubleValue`(`c.k.a.a$c` v4 @kind this, `java.nio.ByteOrder` v5 @kind object) @signature `Lc/k/a/a$c;.getDoubleValue:(Ljava/nio/ByteOrder;)D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20bad0.  call temp:= `a`(v4, v5) @signature `Lc/k/a/a$c;.a:(Ljava/nio/ByteOrder;)Ljava/lang/Object;` @kind virtual;
  #L20bad6.  v5:= temp @kind object;
  #L20bad8.  if v5 == 0 then goto L20bba6;
  #L20badc.  v0:= instanceof @variable v5 @type ^`java.lang.String` @kind boolean;
  #L20bae0.  if v0 == 0 then goto L20baf2;
  #L20bae4.  v5:= (`java.lang.String`) v5 @kind object;
  #L20bae8.  call temp:= `parseDouble`(v5) @signature `Ljava/lang/Double;.parseDouble:(Ljava/lang/String;)D` @kind static;
  #L20baee.  v0:= temp @kind wide;
  #L20baf0.  return v0 @kind wide;
  #L20baf2.  v0:= instanceof @variable v5 @type ^`long`[] @kind boolean;
  #L20baf6.  v1:= 0I;
  #L20baf8.  v2:= "There are more than one component" @kind object;
  #L20bafc.  v3:= 1I;
  #L20bafe.  if v0 == 0 then goto L20bb20;
  #L20bb02.  v5:= (`long`[]) v5 @kind object;
  #L20bb06.  v0:= length @variable v5;
  #L20bb08.  if v0 != v3 then goto L20bb14;
  #L20bb0c.  v0:= v5[v1] @kind wide;
  #L20bb10.  v0:= (`double`) v0 @kind l2d;
  #L20bb12.  return v0 @kind wide;
  #L20bb14.  v5:= new `java.lang.NumberFormatException`;
  #L20bb18.  call `<init>`(v5, v2) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20bb1e.  throw v5;
  #L20bb20.  v0:= instanceof @variable v5 @type ^`int`[] @kind boolean;
  #L20bb24.  if v0 == 0 then goto L20bb46;
  #L20bb28.  v5:= (`int`[]) v5 @kind object;
  #L20bb2c.  v0:= length @variable v5;
  #L20bb2e.  if v0 != v3 then goto L20bb3a;
  #L20bb32.  v5:= v5[v1];
  #L20bb36.  v0:= (`double`) v5 @kind i2d;
  #L20bb38.  return v0 @kind wide;
  #L20bb3a.  v5:= new `java.lang.NumberFormatException`;
  #L20bb3e.  call `<init>`(v5, v2) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20bb44.  throw v5;
  #L20bb46.  v0:= instanceof @variable v5 @type ^`double`[] @kind boolean;
  #L20bb4a.  if v0 == 0 then goto L20bb6a;
  #L20bb4e.  v5:= (`double`[]) v5 @kind object;
  #L20bb52.  v0:= length @variable v5;
  #L20bb54.  if v0 != v3 then goto L20bb5e;
  #L20bb58.  v0:= v5[v1] @kind wide;
  #L20bb5c.  return v0 @kind wide;
  #L20bb5e.  v5:= new `java.lang.NumberFormatException`;
  #L20bb62.  call `<init>`(v5, v2) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20bb68.  throw v5;
  #L20bb6a.  v0:= instanceof @variable v5 @type ^`c.k.a.a$e`[] @kind boolean;
  #L20bb6e.  if v0 == 0 then goto L20bb96;
  #L20bb72.  v5:= (`c.k.a.a$e`[]) v5 @kind object;
  #L20bb76.  v0:= length @variable v5;
  #L20bb78.  if v0 != v3 then goto L20bb8a;
  #L20bb7c.  v5:= v5[v1] @kind object;
  #L20bb80.  call temp:= `calculate`(v5) @signature `Lc/k/a/a$e;.calculate:()D` @kind virtual;
  #L20bb86.  v0:= temp @kind wide;
  #L20bb88.  return v0 @kind wide;
  #L20bb8a.  v5:= new `java.lang.NumberFormatException`;
  #L20bb8e.  call `<init>`(v5, v2) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20bb94.  throw v5;
  #L20bb96.  v5:= new `java.lang.NumberFormatException`;
  #L20bb9a.  v0:= "Couldn't find a double value" @kind object;
  #L20bb9e.  call `<init>`(v5, v0) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20bba4.  throw v5;
  #L20bba6.  v5:= new `java.lang.NumberFormatException`;
  #L20bbaa.  v0:= "NULL can't be converted to a double value" @kind object;
  #L20bbae.  call `<init>`(v5, v0) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20bbb4.  throw v5;
}
procedure `int` `getIntValue`(`c.k.a.a$c` v4 @kind this, `java.nio.ByteOrder` v5 @kind object) @signature `Lc/k/a/a$c;.getIntValue:(Ljava/nio/ByteOrder;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L20bbc8.  call temp:= `a`(v4, v5) @signature `Lc/k/a/a$c;.a:(Ljava/nio/ByteOrder;)Ljava/lang/Object;` @kind virtual;
  #L20bbce.  v5:= temp @kind object;
  #L20bbd0.  if v5 == 0 then goto L20bc4c;
  #L20bbd4.  v0:= instanceof @variable v5 @type ^`java.lang.String` @kind boolean;
  #L20bbd8.  if v0 == 0 then goto L20bbea;
  #L20bbdc.  v5:= (`java.lang.String`) v5 @kind object;
  #L20bbe0.  call temp:= `parseInt`(v5) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L20bbe6.  v5:= temp;
  #L20bbe8.  return v5;
  #L20bbea.  v0:= instanceof @variable v5 @type ^`long`[] @kind boolean;
  #L20bbee.  v1:= 0I;
  #L20bbf0.  v2:= "There are more than one component" @kind object;
  #L20bbf4.  v3:= 1I;
  #L20bbf6.  if v0 == 0 then goto L20bc18;
  #L20bbfa.  v5:= (`long`[]) v5 @kind object;
  #L20bbfe.  v0:= length @variable v5;
  #L20bc00.  if v0 != v3 then goto L20bc0c;
  #L20bc04.  v0:= v5[v1] @kind wide;
  #L20bc08.  v5:= (`int`) v0 @kind l2i;
  #L20bc0a.  return v5;
  #L20bc0c.  v5:= new `java.lang.NumberFormatException`;
  #L20bc10.  call `<init>`(v5, v2) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20bc16.  throw v5;
  #L20bc18.  v0:= instanceof @variable v5 @type ^`int`[] @kind boolean;
  #L20bc1c.  if v0 == 0 then goto L20bc3c;
  #L20bc20.  v5:= (`int`[]) v5 @kind object;
  #L20bc24.  v0:= length @variable v5;
  #L20bc26.  if v0 != v3 then goto L20bc30;
  #L20bc2a.  v5:= v5[v1];
  #L20bc2e.  return v5;
  #L20bc30.  v5:= new `java.lang.NumberFormatException`;
  #L20bc34.  call `<init>`(v5, v2) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20bc3a.  throw v5;
  #L20bc3c.  v5:= new `java.lang.NumberFormatException`;
  #L20bc40.  v0:= "Couldn't find a integer value" @kind object;
  #L20bc44.  call `<init>`(v5, v0) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20bc4a.  throw v5;
  #L20bc4c.  v5:= new `java.lang.NumberFormatException`;
  #L20bc50.  v0:= "NULL can't be converted to a integer value" @kind object;
  #L20bc54.  call `<init>`(v5, v0) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L20bc5a.  throw v5;
}
procedure `java.lang.String` `getStringValue`(`c.k.a.a$c` v7 @kind this, `java.nio.ByteOrder` v8 @kind object) @signature `Lc/k/a/a$c;.getStringValue:(Ljava/nio/ByteOrder;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L20c174.  call temp:= `a`(v7, v8) @signature `Lc/k/a/a$c;.a:(Ljava/nio/ByteOrder;)Ljava/lang/Object;` @kind virtual;
  #L20c17a.  v8:= temp @kind object;
  #L20c17c.  v0:= 0I;
  #L20c17e.  if v8 != 0 then goto L20c184;
  #L20c182.  return v0 @kind object;
  #L20c184.  v1:= instanceof @variable v8 @type ^`java.lang.String` @kind boolean;
  #L20c188.  if v1 == 0 then goto L20c192;
  #L20c18c.  v8:= (`java.lang.String`) v8 @kind object;
  #L20c190.  return v8 @kind object;
  #L20c192.  v1:= new `java.lang.StringBuilder`;
  #L20c196.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20c19c.  v2:= instanceof @variable v8 @type ^`long`[] @kind boolean;
  #L20c1a0.  v3:= "," @kind object;
  #L20c1a4.  v4:= 0I;
  #L20c1a6.  if v2 == 0 then goto L20c1da;
  #L20c1aa.  v8:= (`long`[]) v8 @kind object;
  #L20c1ae.  v0:= length @variable v8;
  #L20c1b0.  if v4 >= v0 then goto L20c1d0;
  #L20c1b4.  v5:= v8[v4] @kind wide;
  #L20c1b8.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L20c1be.  v4:= v4 + 1;
  #L20c1c2.  v0:= length @variable v8;
  #L20c1c4.  if v4 == v0 then goto L20c1ae;
  #L20c1c8.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20c1ce.  goto L20c1ae;
  #L20c1d0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20c1d6.  v8:= temp @kind object;
  #L20c1d8.  return v8 @kind object;
  #L20c1da.  v2:= instanceof @variable v8 @type ^`int`[] @kind boolean;
  #L20c1de.  if v2 == 0 then goto L20c212;
  #L20c1e2.  v8:= (`int`[]) v8 @kind object;
  #L20c1e6.  v0:= length @variable v8;
  #L20c1e8.  if v4 >= v0 then goto L20c208;
  #L20c1ec.  v0:= v8[v4];
  #L20c1f0.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L20c1f6.  v4:= v4 + 1;
  #L20c1fa.  v0:= length @variable v8;
  #L20c1fc.  if v4 == v0 then goto L20c1e6;
  #L20c200.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20c206.  goto L20c1e6;
  #L20c208.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20c20e.  v8:= temp @kind object;
  #L20c210.  return v8 @kind object;
  #L20c212.  v2:= instanceof @variable v8 @type ^`double`[] @kind boolean;
  #L20c216.  if v2 == 0 then goto L20c24a;
  #L20c21a.  v8:= (`double`[]) v8 @kind object;
  #L20c21e.  v0:= length @variable v8;
  #L20c220.  if v4 >= v0 then goto L20c240;
  #L20c224.  v5:= v8[v4] @kind wide;
  #L20c228.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L20c22e.  v4:= v4 + 1;
  #L20c232.  v0:= length @variable v8;
  #L20c234.  if v4 == v0 then goto L20c21e;
  #L20c238.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20c23e.  goto L20c21e;
  #L20c240.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20c246.  v8:= temp @kind object;
  #L20c248.  return v8 @kind object;
  #L20c24a.  v2:= instanceof @variable v8 @type ^`c.k.a.a$e`[] @kind boolean;
  #L20c24e.  if v2 == 0 then goto L20c29e;
  #L20c252.  v8:= (`c.k.a.a$e`[]) v8 @kind object;
  #L20c256.  v0:= length @variable v8;
  #L20c258.  if v4 >= v0 then goto L20c294;
  #L20c25c.  v0:= v8[v4] @kind object;
  #L20c260.  v5:= v0.`c.k.a.a$e.a` @type ^`long` @kind wide;
  #L20c264.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L20c26a.  v0:= 47I;
  #L20c26e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L20c274.  v0:= v8[v4] @kind object;
  #L20c278.  v5:= v0.`c.k.a.a$e.b` @type ^`long` @kind wide;
  #L20c27c.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L20c282.  v4:= v4 + 1;
  #L20c286.  v0:= length @variable v8;
  #L20c288.  if v4 == v0 then goto L20c256;
  #L20c28c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20c292.  goto L20c256;
  #L20c294.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20c29a.  v8:= temp @kind object;
  #L20c29c.  return v8 @kind object;
  #L20c29e.  return v0 @kind object;
}
procedure `int` `size`(`c.k.a.a$c` v2 @kind this) @signature `Lc/k/a/a$c;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L20bc6c.  v0:= `@@c.k.a.a.y` @type ^`int`[] @kind object;
  #L20bc70.  v1:= v2.`c.k.a.a$c.a` @type ^`int`;
  #L20bc74.  v0:= v0[v1];
  #L20bc78.  v1:= v2.`c.k.a.a$c.b` @type ^`int`;
  #L20bc7c.  v0:= v0 * v1 @kind int;
  #L20bc80.  return v0;
}
procedure `java.lang.String` `toString`(`c.k.a.a$c` v3 @kind this) @signature `Lc/k/a/a$c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L20c2b0.  v0:= new `java.lang.StringBuilder`;
  #L20c2b4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L20c2ba.  v1:= "(" @kind object;
  #L20c2be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20c2c4.  v1:= `@@c.k.a.a.x` @type ^`java.lang.String`[] @kind object;
  #L20c2c8.  v2:= v3.`c.k.a.a$c.a` @type ^`int`;
  #L20c2cc.  v1:= v1[v2] @kind object;
  #L20c2d0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20c2d6.  v1:= ", data length:" @kind object;
  #L20c2da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20c2e0.  v1:= v3.`c.k.a.a$c.c` @type ^`byte`[] @kind object;
  #L20c2e4.  v1:= length @variable v1;
  #L20c2e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L20c2ec.  v1:= ")" @kind object;
  #L20c2f0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L20c2f6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L20c2fc.  v0:= temp @kind object;
  #L20c2fe.  return v0 @kind object;
}
