record `c.o.b.b` @kind class @AccessFlag PUBLIC {
  `int` `c.o.b.b.a` @AccessFlag ;
  `c.o.b.b$b` `c.o.b.b.b` @AccessFlag ;
  `c.o.b.b$a` `c.o.b.b.c` @AccessFlag ;
  `boolean` `c.o.b.b.d` @AccessFlag ;
  `boolean` `c.o.b.b.e` @AccessFlag ;
  `boolean` `c.o.b.b.f` @AccessFlag ;
  `boolean` `c.o.b.b.g` @AccessFlag ;
  `boolean` `c.o.b.b.h` @AccessFlag ;
}
procedure `void` `<init>`(`c.o.b.b` v2 @kind this, `android.content.Context` v3 @kind object) @signature `Lc/o/b/b;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L226c50.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L226c56.  v0:= 0I;
  #L226c58.  v2.`c.o.b.b.d` @type ^`boolean` := v0 @kind boolean;
  #L226c5c.  v2.`c.o.b.b.e` @type ^`boolean` := v0 @kind boolean;
  #L226c60.  v1:= 1I;
  #L226c62.  v2.`c.o.b.b.f` @type ^`boolean` := v1 @kind boolean;
  #L226c66.  v2.`c.o.b.b.g` @type ^`boolean` := v0 @kind boolean;
  #L226c6a.  v2.`c.o.b.b.h` @type ^`boolean` := v0 @kind boolean;
  #L226c6e.  call temp:= `getApplicationContext`(v3) @signature `Landroid/content/Context;.getApplicationContext:()Landroid/content/Context;` @kind virtual;
  #L226c74.  return @kind void;
}
procedure `void` `abandon`(`c.o.b.b` v1 @kind this) @signature `Lc/o/b/b;.abandon:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L226c88.  v0:= 1I;
  #L226c8a.  v1.`c.o.b.b.e` @type ^`boolean` := v0 @kind boolean;
  #L226c8e.  call `onAbandon`(v1) @signature `Lc/o/b/b;.onAbandon:()V` @kind virtual;
  #L226c94.  return @kind void;
}
procedure `boolean` `cancelLoad`(`c.o.b.b` v1 @kind this) @signature `Lc/o/b/b;.cancelLoad:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L226b80.  call temp:= `onCancelLoad`(v1) @signature `Lc/o/b/b;.onCancelLoad:()Z` @kind virtual;
  #L226b86.  v0:= temp;
  #L226b88.  return v0;
}
procedure `void` `commitContentChanged`(`c.o.b.b` v1 @kind this) @signature `Lc/o/b/b;.commitContentChanged:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L226ca8.  v0:= 0I;
  #L226caa.  v1.`c.o.b.b.h` @type ^`boolean` := v0 @kind boolean;
  #L226cae.  return @kind void;
}
procedure `java.lang.String` `dataToString`(`c.o.b.b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lc/o/b/b;.dataToString:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L226bcc.  v0:= new `java.lang.StringBuilder`;
  #L226bd0.  v1:= 64I;
  #L226bd4.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L226bda.  call `buildShortClassTag`(v3, v0) @signature `Lc/h/i/a;.buildShortClassTag:(Ljava/lang/Object;Ljava/lang/StringBuilder;)V` @kind static;
  #L226be0.  v3:= "}" @kind object;
  #L226be4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L226bea.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L226bf0.  v3:= temp @kind object;
  #L226bf2.  return v3 @kind object;
}
procedure `void` `deliverCancellation`(`c.o.b.b` v1 @kind this) @signature `Lc/o/b/b;.deliverCancellation:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L226cc0.  v0:= v1.`c.o.b.b.c` @type ^`c.o.b.b$a` @kind object;
  #L226cc4.  if v0 == 0 then goto L226cce;
  #L226cc8.  call `onLoadCanceled`(v0, v1) @signature `Lc/o/b/b$a;.onLoadCanceled:(Lc/o/b/b;)V` @kind interface;
  #L226cce.  return @kind void;
}
procedure `void` `deliverResult`(`c.o.b.b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lc/o/b/b;.deliverResult:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L226ce0.  v0:= v1.`c.o.b.b.b` @type ^`c.o.b.b$b` @kind object;
  #L226ce4.  if v0 == 0 then goto L226cee;
  #L226ce8.  call `onLoadComplete`(v0, v1, v2) @signature `Lc/o/b/b$b;.onLoadComplete:(Lc/o/b/b;Ljava/lang/Object;)V` @kind interface;
  #L226cee.  return @kind void;
}
procedure `void` `dump`(`c.o.b.b` v0 @kind this, `java.lang.String` v1 @kind object, `java.io.FileDescriptor` v2 @kind object, `java.io.PrintWriter` v3 @kind object, `java.lang.String`[] v4 @kind object) @signature `Lc/o/b/b;.dump:(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L226d00.  call `print`(v3, v1) @signature `Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V` @kind virtual;
  #L226d06.  v2:= "mId=" @kind object;
  #L226d0a.  call `print`(v3, v2) @signature `Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V` @kind virtual;
  #L226d10.  v2:= v0.`c.o.b.b.a` @type ^`int`;
  #L226d14.  call `print`(v3, v2) @signature `Ljava/io/PrintWriter;.print:(I)V` @kind virtual;
  #L226d1a.  v2:= " mListener=" @kind object;
  #L226d1e.  call `print`(v3, v2) @signature `Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V` @kind virtual;
  #L226d24.  v2:= v0.`c.o.b.b.b` @type ^`c.o.b.b$b` @kind object;
  #L226d28.  call `println`(v3, v2) @signature `Ljava/io/PrintWriter;.println:(Ljava/lang/Object;)V` @kind virtual;
  #L226d2e.  v2:= v0.`c.o.b.b.d` @type ^`boolean` @kind boolean;
  #L226d32.  if v2 != 0 then goto L226d46;
  #L226d36.  v2:= v0.`c.o.b.b.g` @type ^`boolean` @kind boolean;
  #L226d3a.  if v2 != 0 then goto L226d46;
  #L226d3e.  v2:= v0.`c.o.b.b.h` @type ^`boolean` @kind boolean;
  #L226d42.  if v2 == 0 then goto L226d88;
  #L226d46.  call `print`(v3, v1) @signature `Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V` @kind virtual;
  #L226d4c.  v2:= "mStarted=" @kind object;
  #L226d50.  call `print`(v3, v2) @signature `Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V` @kind virtual;
  #L226d56.  v2:= v0.`c.o.b.b.d` @type ^`boolean` @kind boolean;
  #L226d5a.  call `print`(v3, v2) @signature `Ljava/io/PrintWriter;.print:(Z)V` @kind virtual;
  #L226d60.  v2:= " mContentChanged=" @kind object;
  #L226d64.  call `print`(v3, v2) @signature `Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V` @kind virtual;
  #L226d6a.  v2:= v0.`c.o.b.b.g` @type ^`boolean` @kind boolean;
  #L226d6e.  call `print`(v3, v2) @signature `Ljava/io/PrintWriter;.print:(Z)V` @kind virtual;
  #L226d74.  v2:= " mProcessingChange=" @kind object;
  #L226d78.  call `print`(v3, v2) @signature `Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V` @kind virtual;
  #L226d7e.  v2:= v0.`c.o.b.b.h` @type ^`boolean` @kind boolean;
  #L226d82.  call `println`(v3, v2) @signature `Ljava/io/PrintWriter;.println:(Z)V` @kind virtual;
  #L226d88.  v2:= v0.`c.o.b.b.e` @type ^`boolean` @kind boolean;
  #L226d8c.  if v2 != 0 then goto L226d98;
  #L226d90.  v2:= v0.`c.o.b.b.f` @type ^`boolean` @kind boolean;
  #L226d94.  if v2 == 0 then goto L226dc6;
  #L226d98.  call `print`(v3, v1) @signature `Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V` @kind virtual;
  #L226d9e.  v1:= "mAbandoned=" @kind object;
  #L226da2.  call `print`(v3, v1) @signature `Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V` @kind virtual;
  #L226da8.  v1:= v0.`c.o.b.b.e` @type ^`boolean` @kind boolean;
  #L226dac.  call `print`(v3, v1) @signature `Ljava/io/PrintWriter;.print:(Z)V` @kind virtual;
  #L226db2.  v1:= " mReset=" @kind object;
  #L226db6.  call `print`(v3, v1) @signature `Ljava/io/PrintWriter;.print:(Ljava/lang/String;)V` @kind virtual;
  #L226dbc.  v1:= v0.`c.o.b.b.f` @type ^`boolean` @kind boolean;
  #L226dc0.  call `println`(v3, v1) @signature `Ljava/io/PrintWriter;.println:(Z)V` @kind virtual;
  #L226dc6.  return @kind void;
}
procedure `void` `forceLoad`(`c.o.b.b` v0 @kind this) @signature `Lc/o/b/b;.forceLoad:()V` @AccessFlag PUBLIC {
    temp;

  #L226dd8.  call `onForceLoad`(v0) @signature `Lc/o/b/b;.onForceLoad:()V` @kind virtual;
  #L226dde.  return @kind void;
}
procedure `boolean` `isAbandoned`(`c.o.b.b` v1 @kind this) @signature `Lc/o/b/b;.isAbandoned:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L226b9c.  v0:= v1.`c.o.b.b.e` @type ^`boolean` @kind boolean;
  #L226ba0.  return v0;
}
procedure `void` `onAbandon`(`c.o.b.b` v0 @kind this) @signature `Lc/o/b/b;.onAbandon:()V` @AccessFlag PROTECTED {
    temp;

  #L226df0.  return @kind void;
}
procedure `boolean` `onCancelLoad`(`c.o.b.b` v0 @kind this) @signature `Lc/o/b/b;.onCancelLoad:()Z` @AccessFlag PROTECTED {
    temp;

  #L226bb4.  v0:= 0I;
  #L226bba.  throw v0;
}
procedure `void` `onContentChanged`(`c.o.b.b` v1 @kind this) @signature `Lc/o/b/b;.onContentChanged:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L226e04.  v0:= v1.`c.o.b.b.d` @type ^`boolean` @kind boolean;
  #L226e08.  if v0 == 0 then goto L226e14;
  #L226e0c.  call `forceLoad`(v1) @signature `Lc/o/b/b;.forceLoad:()V` @kind virtual;
  #L226e12.  goto L226e1a;
  #L226e14.  v0:= 1I;
  #L226e16.  v1.`c.o.b.b.g` @type ^`boolean` := v0 @kind boolean;
  #L226e1a.  return @kind void;
}
procedure `void` `onForceLoad`(`c.o.b.b` v0 @kind this) @signature `Lc/o/b/b;.onForceLoad:()V` @AccessFlag PROTECTED {
    temp;

  #L226e2c.  return @kind void;
}
procedure `void` `onReset`(`c.o.b.b` v0 @kind this) @signature `Lc/o/b/b;.onReset:()V` @AccessFlag PROTECTED {
    temp;

  #L226e40.  return @kind void;
}
procedure `void` `onStartLoading`(`c.o.b.b` v0 @kind this) @signature `Lc/o/b/b;.onStartLoading:()V` @AccessFlag PROTECTED {
    temp;

  #L226e54.  v0:= 0I;
  #L226e5a.  throw v0;
}
procedure `void` `onStopLoading`(`c.o.b.b` v0 @kind this) @signature `Lc/o/b/b;.onStopLoading:()V` @AccessFlag PROTECTED {
    temp;

  #L226e6c.  return @kind void;
}
procedure `void` `registerListener`(`c.o.b.b` v1 @kind this, `int` v2 , `c.o.b.b$b` v3 @kind object) @signature `Lc/o/b/b;.registerListener:(ILc/o/b/b$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L226e80.  v0:= v1.`c.o.b.b.b` @type ^`c.o.b.b$b` @kind object;
  #L226e84.  if v0 != 0 then goto L226e92;
  #L226e88.  v1.`c.o.b.b.b` @type ^`c.o.b.b$b` := v3 @kind object;
  #L226e8c.  v1.`c.o.b.b.a` @type ^`int` := v2;
  #L226e90.  return @kind void;
  #L226e92.  v2:= new `java.lang.IllegalStateException`;
  #L226e96.  v3:= "There is already a listener registered" @kind object;
  #L226e9a.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L226ea0.  throw v2;
}
procedure `void` `reset`(`c.o.b.b` v1 @kind this) @signature `Lc/o/b/b;.reset:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L226eb4.  call `onReset`(v1) @signature `Lc/o/b/b;.onReset:()V` @kind virtual;
  #L226eba.  v0:= 1I;
  #L226ebc.  v1.`c.o.b.b.f` @type ^`boolean` := v0 @kind boolean;
  #L226ec0.  v0:= 0I;
  #L226ec2.  v1.`c.o.b.b.d` @type ^`boolean` := v0 @kind boolean;
  #L226ec6.  v1.`c.o.b.b.e` @type ^`boolean` := v0 @kind boolean;
  #L226eca.  v1.`c.o.b.b.g` @type ^`boolean` := v0 @kind boolean;
  #L226ece.  v1.`c.o.b.b.h` @type ^`boolean` := v0 @kind boolean;
  #L226ed2.  return @kind void;
}
procedure `void` `rollbackContentChanged`(`c.o.b.b` v1 @kind this) @signature `Lc/o/b/b;.rollbackContentChanged:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L226ee4.  v0:= v1.`c.o.b.b.h` @type ^`boolean` @kind boolean;
  #L226ee8.  if v0 == 0 then goto L226ef2;
  #L226eec.  call `onContentChanged`(v1) @signature `Lc/o/b/b;.onContentChanged:()V` @kind virtual;
  #L226ef2.  return @kind void;
}
procedure `void` `startLoading`(`c.o.b.b` v1 @kind this) @signature `Lc/o/b/b;.startLoading:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L226f04.  v0:= 1I;
  #L226f06.  v1.`c.o.b.b.d` @type ^`boolean` := v0 @kind boolean;
  #L226f0a.  v0:= 0I;
  #L226f0c.  v1.`c.o.b.b.f` @type ^`boolean` := v0 @kind boolean;
  #L226f10.  v1.`c.o.b.b.e` @type ^`boolean` := v0 @kind boolean;
  #L226f14.  call `onStartLoading`(v1) @signature `Lc/o/b/b;.onStartLoading:()V` @kind virtual;
  #L226f1a.  return @kind void;
}
procedure `void` `stopLoading`(`c.o.b.b` v1 @kind this) @signature `Lc/o/b/b;.stopLoading:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L226f2c.  v0:= 0I;
  #L226f2e.  v1.`c.o.b.b.d` @type ^`boolean` := v0 @kind boolean;
  #L226f32.  call `onStopLoading`(v1) @signature `Lc/o/b/b;.onStopLoading:()V` @kind virtual;
  #L226f38.  return @kind void;
}
procedure `java.lang.String` `toString`(`c.o.b.b` v2 @kind this) @signature `Lc/o/b/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L226c04.  v0:= new `java.lang.StringBuilder`;
  #L226c08.  v1:= 64I;
  #L226c0c.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L226c12.  call `buildShortClassTag`(v2, v0) @signature `Lc/h/i/a;.buildShortClassTag:(Ljava/lang/Object;Ljava/lang/StringBuilder;)V` @kind static;
  #L226c18.  v1:= " id=" @kind object;
  #L226c1c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L226c22.  v1:= v2.`c.o.b.b.a` @type ^`int`;
  #L226c26.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L226c2c.  v1:= "}" @kind object;
  #L226c30.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L226c36.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L226c3c.  v0:= temp @kind object;
  #L226c3e.  return v0 @kind object;
}
procedure `void` `unregisterListener`(`c.o.b.b` v1 @kind this, `c.o.b.b$b` v2 @kind object) @signature `Lc/o/b/b;.unregisterListener:(Lc/o/b/b$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L226f4c.  v0:= v1.`c.o.b.b.b` @type ^`c.o.b.b$b` @kind object;
  #L226f50.  if v0 == 0 then goto L226f70;
  #L226f54.  if v0 != v2 then goto L226f60;
  #L226f58.  v2:= 0I;
  #L226f5a.  v1.`c.o.b.b.b` @type ^`c.o.b.b$b` := v2 @kind object;
  #L226f5e.  return @kind void;
  #L226f60.  v2:= new `java.lang.IllegalArgumentException`;
  #L226f64.  v0:= "Attempting to unregister the wrong listener" @kind object;
  #L226f68.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L226f6e.  throw v2;
  #L226f70.  v2:= new `java.lang.IllegalStateException`;
  #L226f74.  v0:= "No listener register" @kind object;
  #L226f78.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L226f7e.  throw v2;
}
