record `c.a.l.a.a$g` @kind class @AccessFlag ABSTRACT {
}
procedure `void` `<init>`(`c.a.l.a.a$g` v0 @kind this) @signature `Lc/a/l/a/a$g;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L198d9c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L198da2.  return @kind void;
}
procedure `void` `<init>`(`c.a.l.a.a$g` v0 @kind this, `c.a.l.a.a$a` v1 @kind object) @signature `Lc/a/l/a/a$g;.<init>:(Lc/a/l/a/a$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L198db4.  call `<init>`(v0) @signature `Lc/a/l/a/a$g;.<init>:()V` @kind direct;
  #L198dba.  return @kind void;
}
procedure `boolean` `canReverse`(`c.a.l.a.a$g` v1 @kind this) @signature `Lc/a/l/a/a$g;.canReverse:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L198d88.  v0:= 0I;
  #L198d8a.  return v0;
}
procedure `void` `reverse`(`c.a.l.a.a$g` v0 @kind this) @signature `Lc/a/l/a/a$g;.reverse:()V` @AccessFlag PUBLIC {
    temp;

  #L198dcc.  return @kind void;
}
procedure `void` `start`() @signature `Lc/a/l/a/a$g;.start:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `stop`() @signature `Lc/a/l/a/a$g;.stop:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
