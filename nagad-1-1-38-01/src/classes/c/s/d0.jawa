record `c.s.d0` @kind class @AccessFlag  {
}
global `c.s.h0` `@@c.s.d0.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.reflect.Field` `@@c.s.d0.b` @AccessFlag PRIVATE_STATIC;
global `boolean` `@@c.s.d0.c` @AccessFlag PRIVATE_STATIC;
global `android.util.Property` `@@c.s.d0.d` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc/s/d0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2530e0.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L2530e4.  v1:= 22I;
  #L2530e8.  if v0 < v1 then goto L2530fc;
  #L2530ec.  v0:= new `c.s.g0`;
  #L2530f0.  call `<init>`(v0) @signature `Lc/s/g0;.<init>:()V` @kind direct;
  #L2530f6.  `@@c.s.d0.a` @type ^`c.s.h0` := v0 @kind object;
  #L2530fa.  goto L25313a;
  #L2530fc.  v1:= 21I;
  #L253100.  if v0 < v1 then goto L253114;
  #L253104.  v0:= new `c.s.f0`;
  #L253108.  call `<init>`(v0) @signature `Lc/s/f0;.<init>:()V` @kind direct;
  #L25310e.  `@@c.s.d0.a` @type ^`c.s.h0` := v0 @kind object;
  #L253112.  goto L25313a;
  #L253114.  v1:= 19I;
  #L253118.  if v0 < v1 then goto L25312c;
  #L25311c.  v0:= new `c.s.e0`;
  #L253120.  call `<init>`(v0) @signature `Lc/s/e0;.<init>:()V` @kind direct;
  #L253126.  `@@c.s.d0.a` @type ^`c.s.h0` := v0 @kind object;
  #L25312a.  goto L25313a;
  #L25312c.  v0:= new `c.s.h0`;
  #L253130.  call `<init>`(v0) @signature `Lc/s/h0;.<init>:()V` @kind direct;
  #L253136.  `@@c.s.d0.a` @type ^`c.s.h0` := v0 @kind object;
  #L25313a.  v0:= new `c.s.d0$a`;
  #L25313e.  v1:= constclass @type ^`java.lang.Float` @kind object;
  #L253142.  v2:= "translationAlpha" @kind object;
  #L253146.  call `<init>`(v0, v1, v2) @signature `Lc/s/d0$a;.<init>:(Ljava/lang/Class;Ljava/lang/String;)V` @kind direct;
  #L25314c.  `@@c.s.d0.d` @type ^`android.util.Property` := v0 @kind object;
  #L253150.  v0:= new `c.s.d0$b`;
  #L253154.  v1:= constclass @type ^`android.graphics.Rect` @kind object;
  #L253158.  v2:= "clipBounds" @kind object;
  #L25315c.  call `<init>`(v0, v1, v2) @signature `Lc/s/d0$b;.<init>:(Ljava/lang/Class;Ljava/lang/String;)V` @kind direct;
  #L253162.  return @kind void;
}
procedure `void` `a`() @signature `Lc/s/d0;.a:()V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L253190.  v0:= `@@c.s.d0.c` @type ^`boolean` @kind boolean;
  #L253194.  if v0 != 0 then goto L2531cc;
  #L253198.  v0:= 1I;
  #L25319a.  v1:= constclass @type ^`android.view.View` @kind object;
  #L25319e.  v2:= "mViewFlags" @kind object;
  #L2531a2.  call temp:= `getDeclaredField`(v1, v2) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L2531a8.  v1:= temp @kind object;
  #L2531aa.  `@@c.s.d0.b` @type ^`java.lang.reflect.Field` := v1 @kind object;
  #L2531ae.  v1:= `@@c.s.d0.b` @type ^`java.lang.reflect.Field` @kind object;
  #L2531b2.  call `setAccessible`(v1, v0) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L2531b8.  goto L2531c8;
  #L2531ba.  v1:= "ViewUtils" @kind object;
  #L2531be.  v2:= "fetchViewFlagsField: " @kind object;
  #L2531c2.  call temp:= `i`(v1, v2) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2531c8.  `@@c.s.d0.c` @type ^`boolean` := v0 @kind boolean;
  #L2531cc.  return @kind void;
  catch `java.lang.NoSuchFieldException` @[L25319a..L2531b8] goto L2531ba;
}
procedure `void` `a`(`android.view.View` v1 @kind object) @signature `Lc/s/d0;.a:(Landroid/view/View;)V` @AccessFlag STATIC {
    temp;
    v0;

  #L253174.  v0:= `@@c.s.d0.a` @type ^`c.s.h0` @kind object;
  #L253178.  call `clearNonTransitionAlpha`(v0, v1) @signature `Lc/s/h0;.clearNonTransitionAlpha:(Landroid/view/View;)V` @kind virtual;
  #L25317e.  return @kind void;
}
procedure `void` `a`(`android.view.View` v1 @kind object, `float` v2 ) @signature `Lc/s/d0;.a:(Landroid/view/View;F)V` @AccessFlag STATIC {
    temp;
    v0;

  #L253234.  v0:= `@@c.s.d0.a` @type ^`c.s.h0` @kind object;
  #L253238.  call `setTransitionAlpha`(v0, v1, v2) @signature `Lc/s/h0;.setTransitionAlpha:(Landroid/view/View;F)V` @kind virtual;
  #L25323e.  return @kind void;
}
procedure `void` `a`(`android.view.View` v2 @kind object, `int` v3 ) @signature `Lc/s/d0;.a:(Landroid/view/View;I)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L253250.  call `a`() @signature `Lc/s/d0;.a:()V` @kind static;
  #L253256.  v0:= `@@c.s.d0.b` @type ^`java.lang.reflect.Field` @kind object;
  #L25325a.  if v0 == 0 then goto L253276;
  #L25325e.  call temp:= `getInt`(v0, v2) @signature `Ljava/lang/reflect/Field;.getInt:(Ljava/lang/Object;)I` @kind virtual;
  #L253264.  v0:= temp;
  #L253266.  v1:= `@@c.s.d0.b` @type ^`java.lang.reflect.Field` @kind object;
  #L25326a.  v0:= v0 ^& -13;
  #L25326e.  v3:= v3 ^| v0 @kind int;
  #L253270.  call `setInt`(v1, v2, v3) @signature `Ljava/lang/reflect/Field;.setInt:(Ljava/lang/Object;I)V` @kind virtual;
  #L253276.  return @kind void;
  catch `java.lang.IllegalAccessException` @[L25325e..L253276] goto L253276;
}
procedure `void` `a`(`android.view.View` v6 @kind object, `int` v7 , `int` v8 , `int` v9 , `int` v10 ) @signature `Lc/s/d0;.a:(Landroid/view/View;IIII)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L25320c.  v0:= `@@c.s.d0.a` @type ^`c.s.h0` @kind object;
  #L253210.  v1:= v6 @kind object;
  #L253212.  v2:= v7;
  #L253214.  v3:= v8;
  #L253216.  v4:= v9;
  #L253218.  v5:= v10;
  #L25321a.  call `setLeftTopRightBottom`(v0, v1, v2, v3, v4, v5) @signature `Lc/s/h0;.setLeftTopRightBottom:(Landroid/view/View;IIII)V` @kind virtual;
  #L253220.  return @kind void;
}
procedure `void` `a`(`android.view.View` v1 @kind object, `android.graphics.Matrix` v2 @kind object) @signature `Lc/s/d0;.a:(Landroid/view/View;Landroid/graphics/Matrix;)V` @AccessFlag STATIC {
    temp;
    v0;

  #L253298.  v0:= `@@c.s.d0.a` @type ^`c.s.h0` @kind object;
  #L25329c.  call `transformMatrixToGlobal`(v0, v1, v2) @signature `Lc/s/h0;.transformMatrixToGlobal:(Landroid/view/View;Landroid/graphics/Matrix;)V` @kind virtual;
  #L2532a2.  return @kind void;
}
procedure `c.s.c0` `b`(`android.view.View` v2 @kind object) @signature `Lc/s/d0;.b:(Landroid/view/View;)Lc/s/c0;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L253050.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L253054.  v1:= 18I;
  #L253058.  if v0 < v1 then goto L253068;
  #L25305c.  v0:= new `c.s.b0`;
  #L253060.  call `<init>`(v0, v2) @signature `Lc/s/b0;.<init>:(Landroid/view/View;)V` @kind direct;
  #L253066.  return v0 @kind object;
  #L253068.  call temp:= `a`(v2) @signature `Lc/s/a0;.a:(Landroid/view/View;)Lc/s/a0;` @kind static;
  #L25306e.  v2:= temp @kind object;
  #L253070.  return v2 @kind object;
}
procedure `void` `b`(`android.view.View` v1 @kind object, `android.graphics.Matrix` v2 @kind object) @signature `Lc/s/d0;.b:(Landroid/view/View;Landroid/graphics/Matrix;)V` @AccessFlag STATIC {
    temp;
    v0;

  #L2532b4.  v0:= `@@c.s.d0.a` @type ^`c.s.h0` @kind object;
  #L2532b8.  call `transformMatrixToLocal`(v0, v1, v2) @signature `Lc/s/h0;.transformMatrixToLocal:(Landroid/view/View;Landroid/graphics/Matrix;)V` @kind virtual;
  #L2532be.  return @kind void;
}
procedure `float` `c`(`android.view.View` v1 @kind object) @signature `Lc/s/d0;.c:(Landroid/view/View;)F` @AccessFlag STATIC {
    temp;
    v0;

  #L2530c0.  v0:= `@@c.s.d0.a` @type ^`c.s.h0` @kind object;
  #L2530c4.  call temp:= `getTransitionAlpha`(v0, v1) @signature `Lc/s/h0;.getTransitionAlpha:(Landroid/view/View;)F` @kind virtual;
  #L2530ca.  v1:= temp;
  #L2530cc.  return v1;
}
procedure `c.s.l0` `d`(`android.view.View` v2 @kind object) @signature `Lc/s/d0;.d:(Landroid/view/View;)Lc/s/l0;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L253084.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L253088.  v1:= 18I;
  #L25308c.  if v0 < v1 then goto L25309c;
  #L253090.  v0:= new `c.s.k0`;
  #L253094.  call `<init>`(v0, v2) @signature `Lc/s/k0;.<init>:(Landroid/view/View;)V` @kind direct;
  #L25309a.  return v0 @kind object;
  #L25309c.  v0:= new `c.s.j0`;
  #L2530a0.  call temp:= `getWindowToken`(v2) @signature `Landroid/view/View;.getWindowToken:()Landroid/os/IBinder;` @kind virtual;
  #L2530a6.  v2:= temp @kind object;
  #L2530a8.  call `<init>`(v0, v2) @signature `Lc/s/j0;.<init>:(Landroid/os/IBinder;)V` @kind direct;
  #L2530ae.  return v0 @kind object;
}
procedure `void` `e`(`android.view.View` v1 @kind object) @signature `Lc/s/d0;.e:(Landroid/view/View;)V` @AccessFlag STATIC {
    temp;
    v0;

  #L2531f0.  v0:= `@@c.s.d0.a` @type ^`c.s.h0` @kind object;
  #L2531f4.  call `saveNonTransitionAlpha`(v0, v1) @signature `Lc/s/h0;.saveNonTransitionAlpha:(Landroid/view/View;)V` @kind virtual;
  #L2531fa.  return @kind void;
}
