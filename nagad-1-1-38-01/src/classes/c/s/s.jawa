record `c.s.s` @kind class @AccessFlag PUBLIC {
  `java.util.Map` `c.s.s.a` @AccessFlag PUBLIC_FINAL;
  `android.view.View` `c.s.s.b` @AccessFlag PUBLIC;
  `java.util.ArrayList` `c.s.s.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`c.s.s` v1 @kind this) @signature `Lc/s/s;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L250240.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L250246.  v0:= new `java.util.HashMap`;
  #L25024a.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L250250.  v1.`c.s.s.a` @type ^`java.util.Map` := v0 @kind object;
  #L250254.  v0:= new `java.util.ArrayList`;
  #L250258.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L25025e.  v1.`c.s.s.c` @type ^`java.util.ArrayList` := v0 @kind object;
  #L250262.  return @kind void;
}
procedure `boolean` `equals`(`c.s.s` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lc/s/s;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2500ac.  v0:= instanceof @variable v3 @type ^`c.s.s` @kind boolean;
  #L2500b0.  if v0 == 0 then goto L2500dc;
  #L2500b4.  v0:= v2.`c.s.s.b` @type ^`android.view.View` @kind object;
  #L2500b8.  v3:= (`c.s.s`) v3 @kind object;
  #L2500bc.  v1:= v3.`c.s.s.b` @type ^`android.view.View` @kind object;
  #L2500c0.  if v0 != v1 then goto L2500dc;
  #L2500c4.  v0:= v2.`c.s.s.a` @type ^`java.util.Map` @kind object;
  #L2500c8.  v3:= v3.`c.s.s.a` @type ^`java.util.Map` @kind object;
  #L2500cc.  call temp:= `equals`(v0, v3) @signature `Ljava/util/Map;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L2500d2.  v3:= temp;
  #L2500d4.  if v3 == 0 then goto L2500dc;
  #L2500d8.  v3:= 1I;
  #L2500da.  return v3;
  #L2500dc.  v3:= 0I;
  #L2500de.  return v3;
}
procedure `int` `hashCode`(`c.s.s` v2 @kind this) @signature `Lc/s/s;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2500f0.  v0:= v2.`c.s.s.b` @type ^`android.view.View` @kind object;
  #L2500f4.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2500fa.  v0:= temp;
  #L2500fc.  v0:= v0 * 31;
  #L250100.  v1:= v2.`c.s.s.a` @type ^`java.util.Map` @kind object;
  #L250104.  call temp:= `hashCode`(v1) @signature `Ljava/util/Map;.hashCode:()I` @kind interface;
  #L25010a.  v1:= temp;
  #L25010c.  v0:= v0 + v1 @kind int;
  #L25010e.  return v0;
}
procedure `java.lang.String` `toString`(`c.s.s` v5 @kind this) @signature `Lc/s/s;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L250120.  v0:= new `java.lang.StringBuilder`;
  #L250124.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L25012a.  v1:= "TransitionValues@" @kind object;
  #L25012e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250134.  call temp:= `hashCode`(v5) @signature `Lc/s/s;.hashCode:()I` @kind virtual;
  #L25013a.  v1:= temp;
  #L25013c.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L250142.  v1:= temp @kind object;
  #L250144.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25014a.  v1:= ":\n" @kind object;
  #L25014e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250154.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L25015a.  v0:= temp @kind object;
  #L25015c.  v1:= new `java.lang.StringBuilder`;
  #L250160.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L250166.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25016c.  v0:= "    view = " @kind object;
  #L250170.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250176.  v0:= v5.`c.s.s.b` @type ^`android.view.View` @kind object;
  #L25017a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250180.  v0:= "\n" @kind object;
  #L250184.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25018a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L250190.  v1:= temp @kind object;
  #L250192.  v2:= new `java.lang.StringBuilder`;
  #L250196.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L25019c.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2501a2.  v1:= "    values:" @kind object;
  #L2501a6.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2501ac.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2501b2.  v1:= temp @kind object;
  #L2501b4.  v2:= v5.`c.s.s.a` @type ^`java.util.Map` @kind object;
  #L2501b8.  call temp:= `keySet`(v2) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L2501be.  v2:= temp @kind object;
  #L2501c0.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2501c6.  v2:= temp @kind object;
  #L2501c8.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2501ce.  v3:= temp;
  #L2501d0.  if v3 == 0 then goto L25022c;
  #L2501d4.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2501da.  v3:= temp @kind object;
  #L2501dc.  v3:= (`java.lang.String`) v3 @kind object;
  #L2501e0.  v4:= new `java.lang.StringBuilder`;
  #L2501e4.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2501ea.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2501f0.  v1:= "    " @kind object;
  #L2501f4.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2501fa.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250200.  v1:= ": " @kind object;
  #L250204.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25020a.  v1:= v5.`c.s.s.a` @type ^`java.util.Map` @kind object;
  #L25020e.  call temp:= `get`(v1, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L250214.  v1:= temp @kind object;
  #L250216.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25021c.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250222.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L250228.  v1:= temp @kind object;
  #L25022a.  goto L2501c8;
  #L25022c.  return v1 @kind object;
}
