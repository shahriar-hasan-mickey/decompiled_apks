record `c.s.e0` @kind class @AccessFlag  extends `c.s.h0` @kind class {
}
global `java.lang.reflect.Method` `@@c.s.e0.a` @AccessFlag PRIVATE_STATIC;
global `boolean` `@@c.s.e0.b` @AccessFlag PRIVATE_STATIC;
global `java.lang.reflect.Method` `@@c.s.e0.c` @AccessFlag PRIVATE_STATIC;
global `boolean` `@@c.s.e0.d` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`c.s.e0` v0 @kind this) @signature `Lc/s/e0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L252988.  call `<init>`(v0) @signature `Lc/s/h0;.<init>:()V` @kind direct;
  #L25298e.  return @kind void;
}
procedure `void` `a`(`c.s.e0` v4 @kind this) @signature `Lc/s/e0;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2529b4.  v0:= `@@c.s.e0.d` @type ^`boolean` @kind boolean;
  #L2529b8.  if v0 != 0 then goto L2529f8;
  #L2529bc.  v0:= 1I;
  #L2529be.  v1:= constclass @type ^`android.view.View` @kind object;
  #L2529c2.  v2:= 0I;
  #L2529c4.  v2:= new `java.lang.Class`[v2];
  #L2529c8.  v3:= "getTransitionAlpha" @kind object;
  #L2529cc.  call temp:= `getDeclaredMethod`(v1, v3, v2) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L2529d2.  v1:= temp @kind object;
  #L2529d4.  `@@c.s.e0.c` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L2529d8.  v1:= `@@c.s.e0.c` @type ^`java.lang.reflect.Method` @kind object;
  #L2529dc.  call `setAccessible`(v1, v0) @signature `Ljava/lang/reflect/Method;.setAccessible:(Z)V` @kind virtual;
  #L2529e2.  goto L2529f4;
  #L2529e4.  v1:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L2529e6.  v2:= "ViewUtilsApi19" @kind object;
  #L2529ea.  v3:= "Failed to retrieve getTransitionAlpha method" @kind object;
  #L2529ee.  call temp:= `i`(v2, v3, v1) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L2529f4.  `@@c.s.e0.d` @type ^`boolean` := v0 @kind boolean;
  #L2529f8.  return @kind void;
  catch `java.lang.NoSuchMethodException` @[L2529be..L2529c8] goto L2529e4;
  catch `java.lang.NoSuchMethodException` @[L2529cc..L2529e2] goto L2529e4;
}
procedure `void` `b`(`c.s.e0` v5 @kind this) @signature `Lc/s/e0;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L252a24.  v0:= `@@c.s.e0.b` @type ^`boolean` @kind boolean;
  #L252a28.  if v0 != 0 then goto L252a70;
  #L252a2c.  v0:= 1I;
  #L252a2e.  v1:= constclass @type ^`android.view.View` @kind object;
  #L252a32.  v2:= new `java.lang.Class`[v0];
  #L252a36.  v3:= 0I;
  #L252a38.  v4:= `@@java.lang.Float.TYPE` @type ^`java.lang.Class` @kind object;
  #L252a3c.  v2[v3]:= v4 @kind object;
  #L252a40.  v3:= "setTransitionAlpha" @kind object;
  #L252a44.  call temp:= `getDeclaredMethod`(v1, v3, v2) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L252a4a.  v1:= temp @kind object;
  #L252a4c.  `@@c.s.e0.a` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L252a50.  v1:= `@@c.s.e0.a` @type ^`java.lang.reflect.Method` @kind object;
  #L252a54.  call `setAccessible`(v1, v0) @signature `Ljava/lang/reflect/Method;.setAccessible:(Z)V` @kind virtual;
  #L252a5a.  goto L252a6c;
  #L252a5c.  v1:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L252a5e.  v2:= "ViewUtilsApi19" @kind object;
  #L252a62.  v3:= "Failed to retrieve setTransitionAlpha method" @kind object;
  #L252a66.  call temp:= `i`(v2, v3, v1) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L252a6c.  `@@c.s.e0.b` @type ^`boolean` := v0 @kind boolean;
  #L252a70.  return @kind void;
  catch `java.lang.NoSuchMethodException` @[L252a2e..L252a40] goto L252a5c;
  catch `java.lang.NoSuchMethodException` @[L252a44..L252a5a] goto L252a5c;
}
procedure `void` `clearNonTransitionAlpha`(`c.s.e0` v0 @kind this, `android.view.View` v1 @kind object) @signature `Lc/s/e0;.clearNonTransitionAlpha:(Landroid/view/View;)V` @AccessFlag PUBLIC {
    temp;

  #L2529a0.  return @kind void;
}
procedure `float` `getTransitionAlpha`(`c.s.e0` v2 @kind this, `android.view.View` v3 @kind object) @signature `Lc/s/e0;.getTransitionAlpha:(Landroid/view/View;)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L25291c.  call `a`(v2) @signature `Lc/s/e0;.a:()V` @kind direct;
  #L252922.  v0:= `@@c.s.e0.c` @type ^`java.lang.reflect.Method` @kind object;
  #L252926.  if v0 == 0 then goto L25295c;
  #L25292a.  v1:= 0I;
  #L25292c.  v1:= new `java.lang.Object`[v1];
  #L252930.  call temp:= `invoke`(v0, v3, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L252936.  v0:= temp @kind object;
  #L252938.  v0:= (`java.lang.Float`) v0 @kind object;
  #L25293c.  call temp:= `floatValue`(v0) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L252942.  v3:= temp;
  #L252944.  return v3;
  #L252946.  v3:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L252948.  v0:= new `java.lang.RuntimeException`;
  #L25294c.  call temp:= `getCause`(v3) @signature `Ljava/lang/reflect/InvocationTargetException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L252952.  v3:= temp @kind object;
  #L252954.  call `<init>`(v0, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L25295a.  throw v0;
  #L25295c.  call temp:= `getTransitionAlpha`(v2, v3) @signature `Lc/s/h0;.getTransitionAlpha:(Landroid/view/View;)F` @kind super;
  #L252962.  v3:= temp;
  #L252964.  return v3;
  catch `java.lang.IllegalAccessException` @[L25292c..L252944] goto L25295c;
  catch `java.lang.reflect.InvocationTargetException` @[L25292c..L252944] goto L252946;
}
procedure `void` `saveNonTransitionAlpha`(`c.s.e0` v0 @kind this, `android.view.View` v1 @kind object) @signature `Lc/s/e0;.saveNonTransitionAlpha:(Landroid/view/View;)V` @AccessFlag PUBLIC {
    temp;

  #L252a9c.  return @kind void;
}
procedure `void` `setTransitionAlpha`(`c.s.e0` v3 @kind this, `android.view.View` v4 @kind object, `float` v5 ) @signature `Lc/s/e0;.setTransitionAlpha:(Landroid/view/View;F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L252ab0.  call `b`(v3) @signature `Lc/s/e0;.b:()V` @kind direct;
  #L252ab6.  v0:= `@@c.s.e0.a` @type ^`java.lang.reflect.Method` @kind object;
  #L252aba.  if v0 == 0 then goto L252af0;
  #L252abe.  v1:= 1I;
  #L252ac0.  v1:= new `java.lang.Object`[v1];
  #L252ac4.  v2:= 0I;
  #L252ac6.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L252acc.  v5:= temp @kind object;
  #L252ace.  v1[v2]:= v5 @kind object;
  #L252ad2.  call temp:= `invoke`(v0, v4, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L252ad8.  goto L252af6;
  #L252ada.  v4:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L252adc.  v5:= new `java.lang.RuntimeException`;
  #L252ae0.  call temp:= `getCause`(v4) @signature `Ljava/lang/reflect/InvocationTargetException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L252ae6.  v4:= temp @kind object;
  #L252ae8.  call `<init>`(v5, v4) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L252aee.  throw v5;
  #L252af0.  call `setAlpha`(v4, v5) @signature `Landroid/view/View;.setAlpha:(F)V` @kind virtual;
  #L252af6.  return @kind void;
  catch `java.lang.IllegalAccessException` @[L252ac0..L252ad8] goto L252af6;
  catch `java.lang.reflect.InvocationTargetException` @[L252ac0..L252ad8] goto L252ada;
}
