record `c.s.q` @kind class @AccessFlag PUBLIC extends `c.s.m` @kind class {
  `java.util.ArrayList` `c.s.q.O` @AccessFlag PRIVATE;
  `boolean` `c.s.q.P` @AccessFlag PRIVATE;
  `int` `c.s.q.Q` @AccessFlag ;
  `boolean` `c.s.q.R` @AccessFlag ;
  `int` `c.s.q.S` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`c.s.q` v1 @kind this) @signature `Lc/s/q;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L24f8cc.  call `<init>`(v1) @signature `Lc/s/m;.<init>:()V` @kind direct;
  #L24f8d2.  v0:= new `java.util.ArrayList`;
  #L24f8d6.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L24f8dc.  v1.`c.s.q.O` @type ^`java.util.ArrayList` := v0 @kind object;
  #L24f8e0.  v0:= 1I;
  #L24f8e2.  v1.`c.s.q.P` @type ^`boolean` := v0 @kind boolean;
  #L24f8e6.  v0:= 0I;
  #L24f8e8.  v1.`c.s.q.R` @type ^`boolean` := v0 @kind boolean;
  #L24f8ec.  v1.`c.s.q.S` @type ^`int` := v0;
  #L24f8f0.  return @kind void;
}
procedure `void` `a`(`c.s.q` v3 @kind this) @signature `Lc/s/q;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L24fd10.  v0:= new `c.s.q$b`;
  #L24fd14.  call `<init>`(v0, v3) @signature `Lc/s/q$b;.<init>:(Lc/s/q;)V` @kind direct;
  #L24fd1a.  v1:= v3.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24fd1e.  call temp:= `iterator`(v1) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L24fd24.  v1:= temp @kind object;
  #L24fd26.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L24fd2c.  v2:= temp;
  #L24fd2e.  if v2 == 0 then goto L24fd46;
  #L24fd32.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L24fd38.  v2:= temp @kind object;
  #L24fd3a.  v2:= (`c.s.m`) v2 @kind object;
  #L24fd3e.  call temp:= `addListener`(v2, v0) @signature `Lc/s/m;.addListener:(Lc/s/m$f;)Lc/s/m;` @kind virtual;
  #L24fd44.  goto L24fd26;
  #L24fd46.  v0:= v3.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24fd4a.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L24fd50.  v0:= temp;
  #L24fd52.  v3.`c.s.q.Q` @type ^`int` := v0;
  #L24fd56.  return @kind void;
}
procedure `java.lang.String` `a`(`c.s.q` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lc/s/q;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L24f838.  call temp:= `a`(v5, v6) @signature `Lc/s/m;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind super;
  #L24f83e.  v0:= temp @kind object;
  #L24f840.  v1:= 0I;
  #L24f842.  v2:= v5.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24f846.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L24f84c.  v2:= temp;
  #L24f84e.  if v1 >= v2 then goto L24f8ba;
  #L24f852.  v2:= new `java.lang.StringBuilder`;
  #L24f856.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24f85c.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24f862.  v0:= "\n" @kind object;
  #L24f866.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24f86c.  v0:= v5.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24f870.  call temp:= `get`(v0, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L24f876.  v0:= temp @kind object;
  #L24f878.  v0:= (`c.s.m`) v0 @kind object;
  #L24f87c.  v3:= new `java.lang.StringBuilder`;
  #L24f880.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24f886.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24f88c.  v4:= "  " @kind object;
  #L24f890.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24f896.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24f89c.  v3:= temp @kind object;
  #L24f89e.  call temp:= `a`(v0, v3) @signature `Lc/s/m;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L24f8a4.  v0:= temp @kind object;
  #L24f8a6.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24f8ac.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24f8b2.  v0:= temp @kind object;
  #L24f8b4.  v1:= v1 + 1;
  #L24f8b8.  goto L24f842;
  #L24f8ba.  return v0 @kind object;
}
procedure `void` `a`(`c.s.q` v3 @kind this, `c.s.s` v4 @kind object) @signature `Lc/s/q;.a:(Lc/s/s;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L24f96c.  call `a`(v3, v4) @signature `Lc/s/m;.a:(Lc/s/s;)V` @kind super;
  #L24f972.  v0:= v3.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24f976.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L24f97c.  v0:= temp;
  #L24f97e.  v1:= 0I;
  #L24f980.  if v1 >= v0 then goto L24f9a0;
  #L24f984.  v2:= v3.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24f988.  call temp:= `get`(v2, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L24f98e.  v2:= temp @kind object;
  #L24f990.  v2:= (`c.s.m`) v2 @kind object;
  #L24f994.  call `a`(v2, v4) @signature `Lc/s/m;.a:(Lc/s/s;)V` @kind virtual;
  #L24f99a.  v1:= v1 + 1;
  #L24f99e.  goto L24f980;
  #L24f9a0.  return @kind void;
}
procedure `c.s.m` `addListener`(`c.s.q` v0 @kind this, `c.s.m$f` v1 @kind object) @signature `Lc/s/q;.addListener:(Lc/s/m$f;)Lc/s/m;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L24f3f8.  call temp:= `addListener`(v0, v1) @signature `Lc/s/q;.addListener:(Lc/s/m$f;)Lc/s/q;` @kind virtual;
  #L24f3fe.  v1:= temp @kind object;
  #L24f400.  return v1 @kind object;
}
procedure `c.s.q` `addListener`(`c.s.q` v0 @kind this, `c.s.m$f` v1 @kind object) @signature `Lc/s/q;.addListener:(Lc/s/m$f;)Lc/s/q;` @AccessFlag PUBLIC {
    temp;

  #L24f558.  call temp:= `addListener`(v0, v1) @signature `Lc/s/m;.addListener:(Lc/s/m$f;)Lc/s/m;` @kind super;
  #L24f55e.  v1:= v0 @kind object;
  #L24f560.  v1:= (`c.s.q`) v1 @kind object;
  #L24f564.  return v1 @kind object;
}
procedure `c.s.m` `addTarget`(`c.s.q` v0 @kind this, `android.view.View` v1 @kind object) @signature `Lc/s/q;.addTarget:(Landroid/view/View;)Lc/s/m;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L24f414.  call temp:= `addTarget`(v0, v1) @signature `Lc/s/q;.addTarget:(Landroid/view/View;)Lc/s/q;` @kind virtual;
  #L24f41a.  v1:= temp @kind object;
  #L24f41c.  return v1 @kind object;
}
procedure `c.s.q` `addTarget`(`c.s.q` v2 @kind this, `android.view.View` v3 @kind object) @signature `Lc/s/q;.addTarget:(Landroid/view/View;)Lc/s/q;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24f578.  v0:= 0I;
  #L24f57a.  v1:= v2.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24f57e.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L24f584.  v1:= temp;
  #L24f586.  if v0 >= v1 then goto L24f5a6;
  #L24f58a.  v1:= v2.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24f58e.  call temp:= `get`(v1, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L24f594.  v1:= temp @kind object;
  #L24f596.  v1:= (`c.s.m`) v1 @kind object;
  #L24f59a.  call temp:= `addTarget`(v1, v3) @signature `Lc/s/m;.addTarget:(Landroid/view/View;)Lc/s/m;` @kind virtual;
  #L24f5a0.  v0:= v0 + 1;
  #L24f5a4.  goto L24f57a;
  #L24f5a6.  call temp:= `addTarget`(v2, v3) @signature `Lc/s/m;.addTarget:(Landroid/view/View;)Lc/s/m;` @kind super;
  #L24f5ac.  v3:= v2 @kind object;
  #L24f5ae.  v3:= (`c.s.q`) v3 @kind object;
  #L24f5b2.  return v3 @kind object;
}
procedure `c.s.q` `addTransition`(`c.s.q` v5 @kind this, `c.s.m` v6 @kind object) @signature `Lc/s/q;.addTransition:(Lc/s/m;)Lc/s/q;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L24f5c4.  v0:= v5.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24f5c8.  call temp:= `add`(v0, v6) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L24f5ce.  v6.`c.s.m.w` @type ^`c.s.q` := v5 @kind object;
  #L24f5d2.  v0:= v5.`c.s.m.h` @type ^`long` @kind wide;
  #L24f5d6.  v2:= 0L;
  #L24f5da.  v4:= lcmp(v0, v2);
  #L24f5de.  if v4 < 0 then goto L24f5e8;
  #L24f5e2.  call temp:= `setDuration`(v6, v0) @signature `Lc/s/m;.setDuration:(J)Lc/s/m;` @kind virtual;
  #L24f5e8.  v0:= v5.`c.s.q.S` @type ^`int`;
  #L24f5ec.  v0:= v0 ^& 1;
  #L24f5f0.  if v0 == 0 then goto L24f602;
  #L24f5f4.  call temp:= `getInterpolator`(v5) @signature `Lc/s/m;.getInterpolator:()Landroid/animation/TimeInterpolator;` @kind virtual;
  #L24f5fa.  v0:= temp @kind object;
  #L24f5fc.  call temp:= `setInterpolator`(v6, v0) @signature `Lc/s/m;.setInterpolator:(Landroid/animation/TimeInterpolator;)Lc/s/m;` @kind virtual;
  #L24f602.  v0:= v5.`c.s.q.S` @type ^`int`;
  #L24f606.  v0:= v0 ^& 2;
  #L24f60a.  if v0 == 0 then goto L24f61c;
  #L24f60e.  call temp:= `getPropagation`(v5) @signature `Lc/s/m;.getPropagation:()Lc/s/p;` @kind virtual;
  #L24f614.  v0:= temp @kind object;
  #L24f616.  call `setPropagation`(v6, v0) @signature `Lc/s/m;.setPropagation:(Lc/s/p;)V` @kind virtual;
  #L24f61c.  v0:= v5.`c.s.q.S` @type ^`int`;
  #L24f620.  v0:= v0 ^& 4;
  #L24f624.  if v0 == 0 then goto L24f636;
  #L24f628.  call temp:= `getPathMotion`(v5) @signature `Lc/s/m;.getPathMotion:()Lc/s/g;` @kind virtual;
  #L24f62e.  v0:= temp @kind object;
  #L24f630.  call `setPathMotion`(v6, v0) @signature `Lc/s/m;.setPathMotion:(Lc/s/g;)V` @kind virtual;
  #L24f636.  v0:= v5.`c.s.q.S` @type ^`int`;
  #L24f63a.  v0:= v0 ^& 8;
  #L24f63e.  if v0 == 0 then goto L24f650;
  #L24f642.  call temp:= `getEpicenterCallback`(v5) @signature `Lc/s/m;.getEpicenterCallback:()Lc/s/m$e;` @kind virtual;
  #L24f648.  v0:= temp @kind object;
  #L24f64a.  call `setEpicenterCallback`(v6, v0) @signature `Lc/s/m;.setEpicenterCallback:(Lc/s/m$e;)V` @kind virtual;
  #L24f650.  return v5 @kind object;
}
procedure `void` `captureEndValues`(`c.s.q` v3 @kind this, `c.s.s` v4 @kind object) @signature `Lc/s/q;.captureEndValues:(Lc/s/s;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L24f904.  v0:= v4.`c.s.s.b` @type ^`android.view.View` @kind object;
  #L24f908.  call temp:= `a`(v3, v0) @signature `Lc/s/m;.a:(Landroid/view/View;)Z` @kind virtual;
  #L24f90e.  v0:= temp;
  #L24f910.  if v0 == 0 then goto L24f95a;
  #L24f914.  v0:= v3.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24f918.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L24f91e.  v0:= temp @kind object;
  #L24f920.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L24f926.  v1:= temp;
  #L24f928.  if v1 == 0 then goto L24f95a;
  #L24f92c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L24f932.  v1:= temp @kind object;
  #L24f934.  v1:= (`c.s.m`) v1 @kind object;
  #L24f938.  v2:= v4.`c.s.s.b` @type ^`android.view.View` @kind object;
  #L24f93c.  call temp:= `a`(v1, v2) @signature `Lc/s/m;.a:(Landroid/view/View;)Z` @kind virtual;
  #L24f942.  v2:= temp;
  #L24f944.  if v2 == 0 then goto L24f920;
  #L24f948.  call `captureEndValues`(v1, v4) @signature `Lc/s/m;.captureEndValues:(Lc/s/s;)V` @kind virtual;
  #L24f94e.  v2:= v4.`c.s.s.c` @type ^`java.util.ArrayList` @kind object;
  #L24f952.  call temp:= `add`(v2, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L24f958.  goto L24f920;
  #L24f95a.  return @kind void;
}
procedure `void` `captureStartValues`(`c.s.q` v3 @kind this, `c.s.s` v4 @kind object) @signature `Lc/s/q;.captureStartValues:(Lc/s/s;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L24f9b4.  v0:= v4.`c.s.s.b` @type ^`android.view.View` @kind object;
  #L24f9b8.  call temp:= `a`(v3, v0) @signature `Lc/s/m;.a:(Landroid/view/View;)Z` @kind virtual;
  #L24f9be.  v0:= temp;
  #L24f9c0.  if v0 == 0 then goto L24fa0a;
  #L24f9c4.  v0:= v3.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24f9c8.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L24f9ce.  v0:= temp @kind object;
  #L24f9d0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L24f9d6.  v1:= temp;
  #L24f9d8.  if v1 == 0 then goto L24fa0a;
  #L24f9dc.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L24f9e2.  v1:= temp @kind object;
  #L24f9e4.  v1:= (`c.s.m`) v1 @kind object;
  #L24f9e8.  v2:= v4.`c.s.s.b` @type ^`android.view.View` @kind object;
  #L24f9ec.  call temp:= `a`(v1, v2) @signature `Lc/s/m;.a:(Landroid/view/View;)Z` @kind virtual;
  #L24f9f2.  v2:= temp;
  #L24f9f4.  if v2 == 0 then goto L24f9d0;
  #L24f9f8.  call `captureStartValues`(v1, v4) @signature `Lc/s/m;.captureStartValues:(Lc/s/s;)V` @kind virtual;
  #L24f9fe.  v2:= v4.`c.s.s.c` @type ^`java.util.ArrayList` @kind object;
  #L24fa02.  call temp:= `add`(v2, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L24fa08.  goto L24f9d0;
  #L24fa0a.  return @kind void;
}
procedure `c.s.m` `clone`(`c.s.q` v4 @kind this) @signature `Lc/s/q;.clone:()Lc/s/m;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L24f430.  call temp:= `clone`(v4) @signature `Lc/s/m;.clone:()Lc/s/m;` @kind super;
  #L24f436.  v0:= temp @kind object;
  #L24f438.  v0:= (`c.s.q`) v0 @kind object;
  #L24f43c.  v1:= new `java.util.ArrayList`;
  #L24f440.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L24f446.  v0.`c.s.q.O` @type ^`java.util.ArrayList` := v1 @kind object;
  #L24f44a.  v1:= v4.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24f44e.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L24f454.  v1:= temp;
  #L24f456.  v2:= 0I;
  #L24f458.  if v2 >= v1 then goto L24f480;
  #L24f45c.  v3:= v4.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24f460.  call temp:= `get`(v3, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L24f466.  v3:= temp @kind object;
  #L24f468.  v3:= (`c.s.m`) v3 @kind object;
  #L24f46c.  call temp:= `clone`(v3) @signature `Lc/s/m;.clone:()Lc/s/m;` @kind virtual;
  #L24f472.  v3:= temp @kind object;
  #L24f474.  call temp:= `addTransition`(v0, v3) @signature `Lc/s/q;.addTransition:(Lc/s/m;)Lc/s/q;` @kind virtual;
  #L24f47a.  v2:= v2 + 1;
  #L24f47e.  goto L24f458;
  #L24f480.  return v0 @kind object;
}
procedure `java.lang.Object` `clone`(`c.s.q` v1 @kind this) @signature `Lc/s/q;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L24f81c.  call temp:= `clone`(v1) @signature `Lc/s/q;.clone:()Lc/s/m;` @kind virtual;
  #L24f822.  v0:= temp @kind object;
  #L24f824.  return v0 @kind object;
}
procedure `void` `createAnimators`(`c.s.q` v12 @kind this, `android.view.ViewGroup` v13 @kind object, `c.s.t` v14 @kind object, `c.s.t` v15 @kind object, `java.util.ArrayList` v16 @kind object, `java.util.ArrayList` v17 @kind object) @signature `Lc/s/q;.createAnimators:(Landroid/view/ViewGroup;Lc/s/t;Lc/s/t;Ljava/util/ArrayList;Ljava/util/ArrayList;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L24fa1c.  v0:= v12 @kind object;
  #L24fa1e.  call temp:= `getStartDelay`(v12) @signature `Lc/s/m;.getStartDelay:()J` @kind virtual;
  #L24fa24.  v1:= temp @kind wide;
  #L24fa26.  v3:= v0.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24fa2a.  call temp:= `size`(v3) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L24fa30.  v3:= temp;
  #L24fa32.  v4:= 0I;
  #L24fa34.  if v4 >= v3 then goto L24fa9c;
  #L24fa38.  v5:= v0.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24fa3c.  call temp:= `get`(v5, v4) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L24fa42.  v5:= temp @kind object;
  #L24fa44.  v6:= v5 @kind object;
  #L24fa46.  v6:= (`c.s.m`) v6 @kind object;
  #L24fa4a.  v7:= 0L;
  #L24fa4e.  v5:= lcmp(v1, v7);
  #L24fa52.  if v5 <= 0 then goto L24fa82;
  #L24fa56.  v5:= v0.`c.s.q.P` @type ^`boolean` @kind boolean;
  #L24fa5a.  if v5 != 0 then goto L24fa62;
  #L24fa5e.  if v4 != 0 then goto L24fa82;
  #L24fa62.  call temp:= `getStartDelay`(v6) @signature `Lc/s/m;.getStartDelay:()J` @kind virtual;
  #L24fa68.  v9:= temp @kind wide;
  #L24fa6a.  v5:= lcmp(v9, v7);
  #L24fa6e.  if v5 <= 0 then goto L24fa7c;
  #L24fa72.  v9:= v9 + v1 @kind long;
  #L24fa74.  call temp:= `setStartDelay`(v6, v9) @signature `Lc/s/m;.setStartDelay:(J)Lc/s/m;` @kind virtual;
  #L24fa7a.  goto L24fa82;
  #L24fa7c.  call temp:= `setStartDelay`(v6, v1) @signature `Lc/s/m;.setStartDelay:(J)Lc/s/m;` @kind virtual;
  #L24fa82.  v7:= v13 @kind object;
  #L24fa84.  v8:= v14 @kind object;
  #L24fa86.  v9:= v15 @kind object;
  #L24fa88.  v10:= v16 @kind object;
  #L24fa8c.  v11:= v17 @kind object;
  #L24fa90.  call `createAnimators`(v6, v7, v8, v9, v10, v11) @signature `Lc/s/m;.createAnimators:(Landroid/view/ViewGroup;Lc/s/t;Lc/s/t;Ljava/util/ArrayList;Ljava/util/ArrayList;)V` @kind virtual;
  #L24fa96.  v4:= v4 + 1;
  #L24fa9a.  goto L24fa34;
  #L24fa9c.  return @kind void;
}
procedure `c.s.m` `getTransitionAt`(`c.s.q` v1 @kind this, `int` v2 ) @signature `Lc/s/q;.getTransitionAt:(I)Lc/s/m;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24f494.  if v2 < 0 then goto L24f4bc;
  #L24f498.  v0:= v1.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24f49c.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L24f4a2.  v0:= temp;
  #L24f4a4.  if v2 < v0 then goto L24f4aa;
  #L24f4a8.  goto L24f4bc;
  #L24f4aa.  v0:= v1.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24f4ae.  call temp:= `get`(v0, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L24f4b4.  v2:= temp @kind object;
  #L24f4b6.  v2:= (`c.s.m`) v2 @kind object;
  #L24f4ba.  return v2 @kind object;
  #L24f4bc.  v2:= 0I;
  #L24f4be.  return v2 @kind object;
}
procedure `int` `getTransitionCount`(`c.s.q` v1 @kind this) @signature `Lc/s/q;.getTransitionCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24f7fc.  v0:= v1.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24f800.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L24f806.  v0:= temp;
  #L24f808.  return v0;
}
procedure `void` `pause`(`c.s.q` v3 @kind this, `android.view.View` v4 @kind object) @signature `Lc/s/q;.pause:(Landroid/view/View;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L24fab0.  call `pause`(v3, v4) @signature `Lc/s/m;.pause:(Landroid/view/View;)V` @kind super;
  #L24fab6.  v0:= v3.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24faba.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L24fac0.  v0:= temp;
  #L24fac2.  v1:= 0I;
  #L24fac4.  if v1 >= v0 then goto L24fae4;
  #L24fac8.  v2:= v3.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24facc.  call temp:= `get`(v2, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L24fad2.  v2:= temp @kind object;
  #L24fad4.  v2:= (`c.s.m`) v2 @kind object;
  #L24fad8.  call `pause`(v2, v4) @signature `Lc/s/m;.pause:(Landroid/view/View;)V` @kind virtual;
  #L24fade.  v1:= v1 + 1;
  #L24fae2.  goto L24fac4;
  #L24fae4.  return @kind void;
}
procedure `c.s.m` `removeListener`(`c.s.q` v0 @kind this, `c.s.m$f` v1 @kind object) @signature `Lc/s/q;.removeListener:(Lc/s/m$f;)Lc/s/m;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L24f4d0.  call temp:= `removeListener`(v0, v1) @signature `Lc/s/q;.removeListener:(Lc/s/m$f;)Lc/s/q;` @kind virtual;
  #L24f4d6.  v1:= temp @kind object;
  #L24f4d8.  return v1 @kind object;
}
procedure `c.s.q` `removeListener`(`c.s.q` v0 @kind this, `c.s.m$f` v1 @kind object) @signature `Lc/s/q;.removeListener:(Lc/s/m$f;)Lc/s/q;` @AccessFlag PUBLIC {
    temp;

  #L24f664.  call temp:= `removeListener`(v0, v1) @signature `Lc/s/m;.removeListener:(Lc/s/m$f;)Lc/s/m;` @kind super;
  #L24f66a.  v1:= v0 @kind object;
  #L24f66c.  v1:= (`c.s.q`) v1 @kind object;
  #L24f670.  return v1 @kind object;
}
procedure `c.s.m` `removeTarget`(`c.s.q` v0 @kind this, `android.view.View` v1 @kind object) @signature `Lc/s/q;.removeTarget:(Landroid/view/View;)Lc/s/m;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L24f4ec.  call temp:= `removeTarget`(v0, v1) @signature `Lc/s/q;.removeTarget:(Landroid/view/View;)Lc/s/q;` @kind virtual;
  #L24f4f2.  v1:= temp @kind object;
  #L24f4f4.  return v1 @kind object;
}
procedure `c.s.q` `removeTarget`(`c.s.q` v2 @kind this, `android.view.View` v3 @kind object) @signature `Lc/s/q;.removeTarget:(Landroid/view/View;)Lc/s/q;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24f684.  v0:= 0I;
  #L24f686.  v1:= v2.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24f68a.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L24f690.  v1:= temp;
  #L24f692.  if v0 >= v1 then goto L24f6b2;
  #L24f696.  v1:= v2.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24f69a.  call temp:= `get`(v1, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L24f6a0.  v1:= temp @kind object;
  #L24f6a2.  v1:= (`c.s.m`) v1 @kind object;
  #L24f6a6.  call temp:= `removeTarget`(v1, v3) @signature `Lc/s/m;.removeTarget:(Landroid/view/View;)Lc/s/m;` @kind virtual;
  #L24f6ac.  v0:= v0 + 1;
  #L24f6b0.  goto L24f686;
  #L24f6b2.  call temp:= `removeTarget`(v2, v3) @signature `Lc/s/m;.removeTarget:(Landroid/view/View;)Lc/s/m;` @kind super;
  #L24f6b8.  v3:= v2 @kind object;
  #L24f6ba.  v3:= (`c.s.q`) v3 @kind object;
  #L24f6be.  return v3 @kind object;
}
procedure `void` `resume`(`c.s.q` v3 @kind this, `android.view.View` v4 @kind object) @signature `Lc/s/q;.resume:(Landroid/view/View;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L24faf8.  call `resume`(v3, v4) @signature `Lc/s/m;.resume:(Landroid/view/View;)V` @kind super;
  #L24fafe.  v0:= v3.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24fb02.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L24fb08.  v0:= temp;
  #L24fb0a.  v1:= 0I;
  #L24fb0c.  if v1 >= v0 then goto L24fb2c;
  #L24fb10.  v2:= v3.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24fb14.  call temp:= `get`(v2, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L24fb1a.  v2:= temp @kind object;
  #L24fb1c.  v2:= (`c.s.m`) v2 @kind object;
  #L24fb20.  call `resume`(v2, v4) @signature `Lc/s/m;.resume:(Landroid/view/View;)V` @kind virtual;
  #L24fb26.  v1:= v1 + 1;
  #L24fb2a.  goto L24fb0c;
  #L24fb2c.  return @kind void;
}
procedure `void` `runAnimators`(`c.s.q` v4 @kind this) @signature `Lc/s/q;.runAnimators:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L24fb40.  v0:= v4.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24fb44.  call temp:= `isEmpty`(v0) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L24fb4a.  v0:= temp;
  #L24fb4c.  if v0 == 0 then goto L24fb5e;
  #L24fb50.  call `start`(v4) @signature `Lc/s/m;.start:()V` @kind virtual;
  #L24fb56.  call `end`(v4) @signature `Lc/s/m;.end:()V` @kind virtual;
  #L24fb5c.  return @kind void;
  #L24fb5e.  call `a`(v4) @signature `Lc/s/q;.a:()V` @kind direct;
  #L24fb64.  v0:= v4.`c.s.q.P` @type ^`boolean` @kind boolean;
  #L24fb68.  if v0 != 0 then goto L24fbd6;
  #L24fb6c.  v0:= 1I;
  #L24fb6e.  v1:= v4.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24fb72.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L24fb78.  v1:= temp;
  #L24fb7a.  if v0 >= v1 then goto L24fbb8;
  #L24fb7e.  v1:= v4.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24fb82.  v2:= v0 + -1;
  #L24fb86.  call temp:= `get`(v1, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L24fb8c.  v1:= temp @kind object;
  #L24fb8e.  v1:= (`c.s.m`) v1 @kind object;
  #L24fb92.  v2:= v4.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24fb96.  call temp:= `get`(v2, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L24fb9c.  v2:= temp @kind object;
  #L24fb9e.  v2:= (`c.s.m`) v2 @kind object;
  #L24fba2.  v3:= new `c.s.q$a`;
  #L24fba6.  call `<init>`(v3, v4, v2) @signature `Lc/s/q$a;.<init>:(Lc/s/q;Lc/s/m;)V` @kind direct;
  #L24fbac.  call temp:= `addListener`(v1, v3) @signature `Lc/s/m;.addListener:(Lc/s/m$f;)Lc/s/m;` @kind virtual;
  #L24fbb2.  v0:= v0 + 1;
  #L24fbb6.  goto L24fb6e;
  #L24fbb8.  v0:= v4.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24fbbc.  v1:= 0I;
  #L24fbbe.  call temp:= `get`(v0, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L24fbc4.  v0:= temp @kind object;
  #L24fbc6.  v0:= (`c.s.m`) v0 @kind object;
  #L24fbca.  if v0 == 0 then goto L24fc02;
  #L24fbce.  call `runAnimators`(v0) @signature `Lc/s/m;.runAnimators:()V` @kind virtual;
  #L24fbd4.  goto L24fc02;
  #L24fbd6.  v0:= v4.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24fbda.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L24fbe0.  v0:= temp @kind object;
  #L24fbe2.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L24fbe8.  v1:= temp;
  #L24fbea.  if v1 == 0 then goto L24fc02;
  #L24fbee.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L24fbf4.  v1:= temp @kind object;
  #L24fbf6.  v1:= (`c.s.m`) v1 @kind object;
  #L24fbfa.  call `runAnimators`(v1) @signature `Lc/s/m;.runAnimators:()V` @kind virtual;
  #L24fc00.  goto L24fbe2;
  #L24fc02.  return @kind void;
}
procedure `c.s.m` `setDuration`(`c.s.q` v0 @kind this, `long` v1 ) @signature `Lc/s/q;.setDuration:(J)Lc/s/m;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L24f508.  call temp:= `setDuration`(v0, v1) @signature `Lc/s/q;.setDuration:(J)Lc/s/q;` @kind virtual;
  #L24f50e.  return v0 @kind object;
}
procedure `c.s.q` `setDuration`(`c.s.q` v5 @kind this, `long` v6 ) @signature `Lc/s/q;.setDuration:(J)Lc/s/q;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L24f6d0.  call temp:= `setDuration`(v5, v6) @signature `Lc/s/m;.setDuration:(J)Lc/s/m;` @kind super;
  #L24f6d6.  v0:= v5.`c.s.m.h` @type ^`long` @kind wide;
  #L24f6da.  v2:= 0L;
  #L24f6de.  v4:= lcmp(v0, v2);
  #L24f6e2.  if v4 < 0 then goto L24f714;
  #L24f6e6.  v0:= v5.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24f6ea.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L24f6f0.  v0:= temp;
  #L24f6f2.  v1:= 0I;
  #L24f6f4.  if v1 >= v0 then goto L24f714;
  #L24f6f8.  v2:= v5.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24f6fc.  call temp:= `get`(v2, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L24f702.  v2:= temp @kind object;
  #L24f704.  v2:= (`c.s.m`) v2 @kind object;
  #L24f708.  call temp:= `setDuration`(v2, v6) @signature `Lc/s/m;.setDuration:(J)Lc/s/m;` @kind virtual;
  #L24f70e.  v1:= v1 + 1;
  #L24f712.  goto L24f6f4;
  #L24f714.  return v5 @kind object;
}
procedure `void` `setEpicenterCallback`(`c.s.q` v3 @kind this, `c.s.m$e` v4 @kind object) @signature `Lc/s/q;.setEpicenterCallback:(Lc/s/m$e;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L24fc14.  call `setEpicenterCallback`(v3, v4) @signature `Lc/s/m;.setEpicenterCallback:(Lc/s/m$e;)V` @kind super;
  #L24fc1a.  v0:= v3.`c.s.q.S` @type ^`int`;
  #L24fc1e.  v0:= v0 ^| 8;
  #L24fc22.  v3.`c.s.q.S` @type ^`int` := v0;
  #L24fc26.  v0:= v3.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24fc2a.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L24fc30.  v0:= temp;
  #L24fc32.  v1:= 0I;
  #L24fc34.  if v1 >= v0 then goto L24fc54;
  #L24fc38.  v2:= v3.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24fc3c.  call temp:= `get`(v2, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L24fc42.  v2:= temp @kind object;
  #L24fc44.  v2:= (`c.s.m`) v2 @kind object;
  #L24fc48.  call `setEpicenterCallback`(v2, v4) @signature `Lc/s/m;.setEpicenterCallback:(Lc/s/m$e;)V` @kind virtual;
  #L24fc4e.  v1:= v1 + 1;
  #L24fc52.  goto L24fc34;
  #L24fc54.  return @kind void;
}
procedure `c.s.m` `setInterpolator`(`c.s.q` v0 @kind this, `android.animation.TimeInterpolator` v1 @kind object) @signature `Lc/s/q;.setInterpolator:(Landroid/animation/TimeInterpolator;)Lc/s/m;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L24f520.  call temp:= `setInterpolator`(v0, v1) @signature `Lc/s/q;.setInterpolator:(Landroid/animation/TimeInterpolator;)Lc/s/q;` @kind virtual;
  #L24f526.  v1:= temp @kind object;
  #L24f528.  return v1 @kind object;
}
procedure `c.s.q` `setInterpolator`(`c.s.q` v3 @kind this, `android.animation.TimeInterpolator` v4 @kind object) @signature `Lc/s/q;.setInterpolator:(Landroid/animation/TimeInterpolator;)Lc/s/q;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L24f728.  v0:= v3.`c.s.q.S` @type ^`int`;
  #L24f72c.  v0:= v0 ^| 1;
  #L24f730.  v3.`c.s.q.S` @type ^`int` := v0;
  #L24f734.  v0:= v3.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24f738.  if v0 == 0 then goto L24f766;
  #L24f73c.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L24f742.  v0:= temp;
  #L24f744.  v1:= 0I;
  #L24f746.  if v1 >= v0 then goto L24f766;
  #L24f74a.  v2:= v3.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24f74e.  call temp:= `get`(v2, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L24f754.  v2:= temp @kind object;
  #L24f756.  v2:= (`c.s.m`) v2 @kind object;
  #L24f75a.  call temp:= `setInterpolator`(v2, v4) @signature `Lc/s/m;.setInterpolator:(Landroid/animation/TimeInterpolator;)Lc/s/m;` @kind virtual;
  #L24f760.  v1:= v1 + 1;
  #L24f764.  goto L24f746;
  #L24f766.  call temp:= `setInterpolator`(v3, v4) @signature `Lc/s/m;.setInterpolator:(Landroid/animation/TimeInterpolator;)Lc/s/m;` @kind super;
  #L24f76c.  v4:= v3 @kind object;
  #L24f76e.  v4:= (`c.s.q`) v4 @kind object;
  #L24f772.  return v4 @kind object;
}
procedure `c.s.q` `setOrdering`(`c.s.q` v3 @kind this, `int` v4 ) @signature `Lc/s/q;.setOrdering:(I)Lc/s/q;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L24f784.  v0:= 1I;
  #L24f786.  if v4 == 0 then goto L24f7c4;
  #L24f78a.  if v4 != v0 then goto L24f796;
  #L24f78e.  v4:= 0I;
  #L24f790.  v3.`c.s.q.P` @type ^`boolean` := v4 @kind boolean;
  #L24f794.  goto L24f7c8;
  #L24f796.  v0:= new `android.util.AndroidRuntimeException`;
  #L24f79a.  v1:= new `java.lang.StringBuilder`;
  #L24f79e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24f7a4.  v2:= "Invalid parameter for TransitionSet ordering: " @kind object;
  #L24f7a8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24f7ae.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L24f7b4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24f7ba.  v4:= temp @kind object;
  #L24f7bc.  call `<init>`(v0, v4) @signature `Landroid/util/AndroidRuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24f7c2.  throw v0;
  #L24f7c4.  v3.`c.s.q.P` @type ^`boolean` := v0 @kind boolean;
  #L24f7c8.  return v3 @kind object;
}
procedure `void` `setPathMotion`(`c.s.q` v2 @kind this, `c.s.g` v3 @kind object) @signature `Lc/s/q;.setPathMotion:(Lc/s/g;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24fc68.  call `setPathMotion`(v2, v3) @signature `Lc/s/m;.setPathMotion:(Lc/s/g;)V` @kind super;
  #L24fc6e.  v0:= v2.`c.s.q.S` @type ^`int`;
  #L24fc72.  v0:= v0 ^| 4;
  #L24fc76.  v2.`c.s.q.S` @type ^`int` := v0;
  #L24fc7a.  v0:= 0I;
  #L24fc7c.  v1:= v2.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24fc80.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L24fc86.  v1:= temp;
  #L24fc88.  if v0 >= v1 then goto L24fca8;
  #L24fc8c.  v1:= v2.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24fc90.  call temp:= `get`(v1, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L24fc96.  v1:= temp @kind object;
  #L24fc98.  v1:= (`c.s.m`) v1 @kind object;
  #L24fc9c.  call `setPathMotion`(v1, v3) @signature `Lc/s/m;.setPathMotion:(Lc/s/g;)V` @kind virtual;
  #L24fca2.  v0:= v0 + 1;
  #L24fca6.  goto L24fc7c;
  #L24fca8.  return @kind void;
}
procedure `void` `setPropagation`(`c.s.q` v3 @kind this, `c.s.p` v4 @kind object) @signature `Lc/s/q;.setPropagation:(Lc/s/p;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L24fcbc.  call `setPropagation`(v3, v4) @signature `Lc/s/m;.setPropagation:(Lc/s/p;)V` @kind super;
  #L24fcc2.  v0:= v3.`c.s.q.S` @type ^`int`;
  #L24fcc6.  v0:= v0 ^| 2;
  #L24fcca.  v3.`c.s.q.S` @type ^`int` := v0;
  #L24fcce.  v0:= v3.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24fcd2.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L24fcd8.  v0:= temp;
  #L24fcda.  v1:= 0I;
  #L24fcdc.  if v1 >= v0 then goto L24fcfc;
  #L24fce0.  v2:= v3.`c.s.q.O` @type ^`java.util.ArrayList` @kind object;
  #L24fce4.  call temp:= `get`(v2, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L24fcea.  v2:= temp @kind object;
  #L24fcec.  v2:= (`c.s.m`) v2 @kind object;
  #L24fcf0.  call `setPropagation`(v2, v4) @signature `Lc/s/m;.setPropagation:(Lc/s/p;)V` @kind virtual;
  #L24fcf6.  v1:= v1 + 1;
  #L24fcfa.  goto L24fcdc;
  #L24fcfc.  return @kind void;
}
procedure `c.s.m` `setStartDelay`(`c.s.q` v0 @kind this, `long` v1 ) @signature `Lc/s/q;.setStartDelay:(J)Lc/s/m;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L24f53c.  call temp:= `setStartDelay`(v0, v1) @signature `Lc/s/q;.setStartDelay:(J)Lc/s/q;` @kind virtual;
  #L24f542.  v1:= temp @kind object;
  #L24f544.  return v1 @kind object;
}
procedure `c.s.q` `setStartDelay`(`c.s.q` v0 @kind this, `long` v1 ) @signature `Lc/s/q;.setStartDelay:(J)Lc/s/q;` @AccessFlag PUBLIC {
    temp;

  #L24f7dc.  call temp:= `setStartDelay`(v0, v1) @signature `Lc/s/m;.setStartDelay:(J)Lc/s/m;` @kind super;
  #L24f7e2.  v1:= v0 @kind object;
  #L24f7e4.  v1:= (`c.s.q`) v1 @kind object;
  #L24f7e8.  return v1 @kind object;
}
