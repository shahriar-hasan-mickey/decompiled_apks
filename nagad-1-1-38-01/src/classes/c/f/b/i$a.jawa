record `c.f.b.i$a` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `c.f.b.i$a` `@@c.f.b.i$a.f` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `c.f.b.i$a` `@@c.f.b.i$a.g` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `c.f.b.i$a` `@@c.f.b.i$a.h` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `c.f.b.i$a` `@@c.f.b.i$a.i` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `c.f.b.i$a` `@@c.f.b.i$a.j` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `c.f.b.i$a`[] `@@c.f.b.i$a.k` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lc/f/b/i$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1cac88.  v0:= new `c.f.b.i$a`;
  #L1cac8c.  v1:= 0I;
  #L1cac8e.  v2:= "UNRESTRICTED" @kind object;
  #L1cac92.  call `<init>`(v0, v2, v1) @signature `Lc/f/b/i$a;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1cac98.  `@@c.f.b.i$a.f` @type ^`c.f.b.i$a` := v0 @kind object;
  #L1cac9c.  v0:= new `c.f.b.i$a`;
  #L1caca0.  v2:= 1I;
  #L1caca2.  v3:= "CONSTANT" @kind object;
  #L1caca6.  call `<init>`(v0, v3, v2) @signature `Lc/f/b/i$a;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1cacac.  `@@c.f.b.i$a.g` @type ^`c.f.b.i$a` := v0 @kind object;
  #L1cacb0.  v0:= new `c.f.b.i$a`;
  #L1cacb4.  v3:= 2I;
  #L1cacb6.  v4:= "SLACK" @kind object;
  #L1cacba.  call `<init>`(v0, v4, v3) @signature `Lc/f/b/i$a;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1cacc0.  `@@c.f.b.i$a.h` @type ^`c.f.b.i$a` := v0 @kind object;
  #L1cacc4.  v0:= new `c.f.b.i$a`;
  #L1cacc8.  v4:= 3I;
  #L1cacca.  v5:= "ERROR" @kind object;
  #L1cacce.  call `<init>`(v0, v5, v4) @signature `Lc/f/b/i$a;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1cacd4.  `@@c.f.b.i$a.i` @type ^`c.f.b.i$a` := v0 @kind object;
  #L1cacd8.  v0:= new `c.f.b.i$a`;
  #L1cacdc.  v5:= 4I;
  #L1cacde.  v6:= "UNKNOWN" @kind object;
  #L1cace2.  call `<init>`(v0, v6, v5) @signature `Lc/f/b/i$a;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1cace8.  `@@c.f.b.i$a.j` @type ^`c.f.b.i$a` := v0 @kind object;
  #L1cacec.  v0:= 5I;
  #L1cacee.  v0:= new `c.f.b.i$a`[v0];
  #L1cacf2.  v6:= `@@c.f.b.i$a.f` @type ^`c.f.b.i$a` @kind object;
  #L1cacf6.  v0[v1]:= v6 @kind object;
  #L1cacfa.  v1:= `@@c.f.b.i$a.g` @type ^`c.f.b.i$a` @kind object;
  #L1cacfe.  v0[v2]:= v1 @kind object;
  #L1cad02.  v1:= `@@c.f.b.i$a.h` @type ^`c.f.b.i$a` @kind object;
  #L1cad06.  v0[v3]:= v1 @kind object;
  #L1cad0a.  v1:= `@@c.f.b.i$a.i` @type ^`c.f.b.i$a` @kind object;
  #L1cad0e.  v0[v4]:= v1 @kind object;
  #L1cad12.  v1:= `@@c.f.b.i$a.j` @type ^`c.f.b.i$a` @kind object;
  #L1cad16.  v0[v5]:= v1 @kind object;
  #L1cad1a.  `@@c.f.b.i$a.k` @type ^`c.f.b.i$a`[] := v0 @kind object;
  #L1cad1e.  return @kind void;
}
procedure `void` `<init>`(`c.f.b.i$a` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lc/f/b/i$a;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1cad30.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1cad36.  return @kind void;
}
procedure `c.f.b.i$a` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lc/f/b/i$a;.valueOf:(Ljava/lang/String;)Lc/f/b/i$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1cac40.  v0:= constclass @type ^`c.f.b.i$a` @kind object;
  #L1cac44.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L1cac4a.  v1:= temp @kind object;
  #L1cac4c.  v1:= (`c.f.b.i$a`) v1 @kind object;
  #L1cac50.  return v1 @kind object;
}
procedure `c.f.b.i$a`[] `values`() @signature `Lc/f/b/i$a;.values:()[Lc/f/b/i$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1cac64.  v0:= `@@c.f.b.i$a.k` @type ^`c.f.b.i$a`[] @kind object;
  #L1cac68.  call temp:= `clone`(v0) @signature `[Lc/f/b/i$a;.clone:()Ljava/lang/Object;` @kind virtual;
  #L1cac6e.  v0:= temp @kind object;
  #L1cac70.  v0:= (`c.f.b.i$a`[]) v0 @kind object;
  #L1cac74.  return v0 @kind object;
}
