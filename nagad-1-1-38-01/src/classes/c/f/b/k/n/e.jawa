record `c.f.b.k.n.e` @kind class @AccessFlag PUBLIC {
  `c.f.b.k.f` `c.f.b.k.n.e.a` @AccessFlag PRIVATE;
  `boolean` `c.f.b.k.n.e.b` @AccessFlag PRIVATE;
  `boolean` `c.f.b.k.n.e.c` @AccessFlag PRIVATE;
  `c.f.b.k.f` `c.f.b.k.n.e.d` @AccessFlag PRIVATE;
  `java.util.ArrayList` `c.f.b.k.n.e.e` @AccessFlag PRIVATE;
  `c.f.b.k.n.b$b` `c.f.b.k.n.e.f` @AccessFlag PRIVATE;
  `c.f.b.k.n.b$a` `c.f.b.k.n.e.g` @AccessFlag PRIVATE;
  `java.util.ArrayList` `c.f.b.k.n.e.h` @AccessFlag ;
}
procedure `void` `<init>`(`c.f.b.k.n.e` v1 @kind this, `c.f.b.k.f` v2 @kind object) @signature `Lc/f/b/k/n/e;.<init>:(Lc/f/b/k/f;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1d7a40.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d7a46.  v0:= 1I;
  #L1d7a48.  v1.`c.f.b.k.n.e.b` @type ^`boolean` := v0 @kind boolean;
  #L1d7a4c.  v1.`c.f.b.k.n.e.c` @type ^`boolean` := v0 @kind boolean;
  #L1d7a50.  v0:= new `java.util.ArrayList`;
  #L1d7a54.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1d7a5a.  v1.`c.f.b.k.n.e.e` @type ^`java.util.ArrayList` := v0 @kind object;
  #L1d7a5e.  v0:= new `java.util.ArrayList`;
  #L1d7a62.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1d7a68.  v0:= 0I;
  #L1d7a6a.  v1.`c.f.b.k.n.e.f` @type ^`c.f.b.k.n.b$b` := v0 @kind object;
  #L1d7a6e.  v0:= new `c.f.b.k.n.b$a`;
  #L1d7a72.  call `<init>`(v0) @signature `Lc/f/b/k/n/b$a;.<init>:()V` @kind direct;
  #L1d7a78.  v1.`c.f.b.k.n.e.g` @type ^`c.f.b.k.n.b$a` := v0 @kind object;
  #L1d7a7c.  v0:= new `java.util.ArrayList`;
  #L1d7a80.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1d7a86.  v1.`c.f.b.k.n.e.h` @type ^`java.util.ArrayList` := v0 @kind object;
  #L1d7a8a.  v1.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` := v2 @kind object;
  #L1d7a8e.  v1.`c.f.b.k.n.e.d` @type ^`c.f.b.k.f` := v2 @kind object;
  #L1d7a92.  return @kind void;
}
procedure `int` `a`(`c.f.b.k.n.e` v6 @kind this, `c.f.b.k.f` v7 @kind object, `int` v8 ) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/f;I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1d79f0.  v0:= v6.`c.f.b.k.n.e.h` @type ^`java.util.ArrayList` @kind object;
  #L1d79f4.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L1d79fa.  v0:= temp;
  #L1d79fc.  v1:= 0L;
  #L1d7a00.  v3:= 0I;
  #L1d7a02.  if v3 >= v0 then goto L1d7a2c;
  #L1d7a06.  v4:= v6.`c.f.b.k.n.e.h` @type ^`java.util.ArrayList` @kind object;
  #L1d7a0a.  call temp:= `get`(v4, v3) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L1d7a10.  v4:= temp @kind object;
  #L1d7a12.  v4:= (`c.f.b.k.n.m`) v4 @kind object;
  #L1d7a16.  call temp:= `computeWrapSize`(v4, v7, v8) @signature `Lc/f/b/k/n/m;.computeWrapSize:(Lc/f/b/k/f;I)J` @kind virtual;
  #L1d7a1c.  v4:= temp @kind wide;
  #L1d7a1e.  call temp:= `max`(v1, v4) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L1d7a24.  v1:= temp @kind wide;
  #L1d7a26.  v3:= v3 + 1;
  #L1d7a2a.  goto L1d7a02;
  #L1d7a2c.  v7:= (`int`) v1 @kind l2i;
  #L1d7a2e.  return v7;
}
procedure `void` `a`(`c.f.b.k.n.e` v1 @kind this, `c.f.b.k.e` v2 @kind object, `c.f.b.k.e$b` v3 @kind object, `int` v4 , `c.f.b.k.e$b` v5 @kind object, `int` v6 ) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/e;Lc/f/b/k/e$b;ILc/f/b/k/e$b;I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1d8050.  v0:= v1.`c.f.b.k.n.e.g` @type ^`c.f.b.k.n.b$a` @kind object;
  #L1d8054.  v0.`c.f.b.k.n.b$a.a` @type ^`c.f.b.k.e$b` := v3 @kind object;
  #L1d8058.  v0.`c.f.b.k.n.b$a.b` @type ^`c.f.b.k.e$b` := v5 @kind object;
  #L1d805c.  v0.`c.f.b.k.n.b$a.c` @type ^`int` := v4;
  #L1d8060.  v0.`c.f.b.k.n.b$a.d` @type ^`int` := v6;
  #L1d8064.  v3:= v1.`c.f.b.k.n.e.f` @type ^`c.f.b.k.n.b$b` @kind object;
  #L1d8068.  call `measure`(v3, v2, v0) @signature `Lc/f/b/k/n/b$b;.measure:(Lc/f/b/k/e;Lc/f/b/k/n/b$a;)V` @kind interface;
  #L1d806e.  v3:= v1.`c.f.b.k.n.e.g` @type ^`c.f.b.k.n.b$a` @kind object;
  #L1d8072.  v3:= v3.`c.f.b.k.n.b$a.e` @type ^`int`;
  #L1d8076.  call `setWidth`(v2, v3) @signature `Lc/f/b/k/e;.setWidth:(I)V` @kind virtual;
  #L1d807c.  v3:= v1.`c.f.b.k.n.e.g` @type ^`c.f.b.k.n.b$a` @kind object;
  #L1d8080.  v3:= v3.`c.f.b.k.n.b$a.f` @type ^`int`;
  #L1d8084.  call `setHeight`(v2, v3) @signature `Lc/f/b/k/e;.setHeight:(I)V` @kind virtual;
  #L1d808a.  v3:= v1.`c.f.b.k.n.e.g` @type ^`c.f.b.k.n.b$a` @kind object;
  #L1d808e.  v3:= v3.`c.f.b.k.n.b$a.h` @type ^`boolean` @kind boolean;
  #L1d8092.  call `setHasBaseline`(v2, v3) @signature `Lc/f/b/k/e;.setHasBaseline:(Z)V` @kind virtual;
  #L1d8098.  v3:= v1.`c.f.b.k.n.e.g` @type ^`c.f.b.k.n.b$a` @kind object;
  #L1d809c.  v3:= v3.`c.f.b.k.n.b$a.g` @type ^`int`;
  #L1d80a0.  call `setBaselineDistance`(v2, v3) @signature `Lc/f/b/k/e;.setBaselineDistance:(I)V` @kind virtual;
  #L1d80a6.  return @kind void;
}
procedure `void` `a`(`c.f.b.k.n.e` v8 @kind this, `c.f.b.k.n.f` v9 @kind object, `int` v10 , `int` v11 , `c.f.b.k.n.f` v12 @kind object, `java.util.ArrayList` v13 @kind object, `c.f.b.k.n.m` v14 @kind object) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/n/f;IILc/f/b/k/n/f;Ljava/util/ArrayList;Lc/f/b/k/n/m;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1d7aa4.  v9:= v9.`c.f.b.k.n.f.d` @type ^`c.f.b.k.n.p` @kind object;
  #L1d7aa8.  v0:= v9.`c.f.b.k.n.p.c` @type ^`c.f.b.k.n.m` @kind object;
  #L1d7aac.  if v0 != 0 then goto L1d7cb2;
  #L1d7ab0.  v0:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7ab4.  v1:= v0.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d7ab8.  if v9 == v1 then goto L1d7cb2;
  #L1d7abc.  v0:= v0.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d7ac0.  if v9 != v0 then goto L1d7ac8;
  #L1d7ac4.  goto L1d7cb2;
  #L1d7ac8.  if v14 != 0 then goto L1d7adc;
  #L1d7acc.  v14:= new `c.f.b.k.n.m`;
  #L1d7ad0.  call `<init>`(v14, v9, v11) @signature `Lc/f/b/k/n/m;.<init>:(Lc/f/b/k/n/p;I)V` @kind direct;
  #L1d7ad6.  call temp:= `add`(v13, v14) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1d7adc.  v9.`c.f.b.k.n.p.c` @type ^`c.f.b.k.n.m` := v14 @kind object;
  #L1d7ae0.  call `add`(v14, v9) @signature `Lc/f/b/k/n/m;.add:(Lc/f/b/k/n/p;)V` @kind virtual;
  #L1d7ae6.  v11:= v9.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1d7aea.  v11:= v11.`c.f.b.k.n.f.k` @type ^`java.util.List` @kind object;
  #L1d7aee.  call temp:= `iterator`(v11) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1d7af4.  v11:= temp @kind object;
  #L1d7af6.  call temp:= `hasNext`(v11) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d7afc.  v0:= temp;
  #L1d7afe.  if v0 == 0 then goto L1d7b30;
  #L1d7b02.  call temp:= `next`(v11) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d7b08.  v0:= temp @kind object;
  #L1d7b0a.  v0:= (`c.f.b.k.n.d`) v0 @kind object;
  #L1d7b0e.  v1:= instanceof @variable v0 @type ^`c.f.b.k.n.f` @kind boolean;
  #L1d7b12.  if v1 == 0 then goto L1d7af6;
  #L1d7b16.  v1:= v0 @kind object;
  #L1d7b18.  v1:= (`c.f.b.k.n.f`) v1 @kind object;
  #L1d7b1c.  v3:= 0I;
  #L1d7b1e.  v0:= v8 @kind object;
  #L1d7b20.  v2:= v10;
  #L1d7b22.  v4:= v12 @kind object;
  #L1d7b24.  v5:= v13 @kind object;
  #L1d7b26.  v6:= v14 @kind object;
  #L1d7b28.  call `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/n/f;IILc/f/b/k/n/f;Ljava/util/ArrayList;Lc/f/b/k/n/m;)V` @kind direct;
  #L1d7b2e.  goto L1d7af6;
  #L1d7b30.  v11:= v9.`c.f.b.k.n.p.i` @type ^`c.f.b.k.n.f` @kind object;
  #L1d7b34.  v11:= v11.`c.f.b.k.n.f.k` @type ^`java.util.List` @kind object;
  #L1d7b38.  call temp:= `iterator`(v11) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1d7b3e.  v11:= temp @kind object;
  #L1d7b40.  call temp:= `hasNext`(v11) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d7b46.  v0:= temp;
  #L1d7b48.  if v0 == 0 then goto L1d7b7a;
  #L1d7b4c.  call temp:= `next`(v11) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d7b52.  v0:= temp @kind object;
  #L1d7b54.  v0:= (`c.f.b.k.n.d`) v0 @kind object;
  #L1d7b58.  v1:= instanceof @variable v0 @type ^`c.f.b.k.n.f` @kind boolean;
  #L1d7b5c.  if v1 == 0 then goto L1d7b40;
  #L1d7b60.  v1:= v0 @kind object;
  #L1d7b62.  v1:= (`c.f.b.k.n.f`) v1 @kind object;
  #L1d7b66.  v3:= 1I;
  #L1d7b68.  v0:= v8 @kind object;
  #L1d7b6a.  v2:= v10;
  #L1d7b6c.  v4:= v12 @kind object;
  #L1d7b6e.  v5:= v13 @kind object;
  #L1d7b70.  v6:= v14 @kind object;
  #L1d7b72.  call `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/n/f;IILc/f/b/k/n/f;Ljava/util/ArrayList;Lc/f/b/k/n/m;)V` @kind direct;
  #L1d7b78.  goto L1d7b40;
  #L1d7b7a.  v11:= 1I;
  #L1d7b7c.  if v10 != v11 then goto L1d7bd8;
  #L1d7b80.  v0:= instanceof @variable v9 @type ^`c.f.b.k.n.n` @kind boolean;
  #L1d7b84.  if v0 == 0 then goto L1d7bd8;
  #L1d7b88.  v0:= v9 @kind object;
  #L1d7b8a.  v0:= (`c.f.b.k.n.n`) v0 @kind object;
  #L1d7b8e.  v0:= v0.`c.f.b.k.n.n.k` @type ^`c.f.b.k.n.f` @kind object;
  #L1d7b92.  v0:= v0.`c.f.b.k.n.f.k` @type ^`java.util.List` @kind object;
  #L1d7b96.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1d7b9c.  v7:= temp @kind object;
  #L1d7b9e.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d7ba4.  v0:= temp;
  #L1d7ba6.  if v0 == 0 then goto L1d7bd8;
  #L1d7baa.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d7bb0.  v0:= temp @kind object;
  #L1d7bb2.  v0:= (`c.f.b.k.n.d`) v0 @kind object;
  #L1d7bb6.  v1:= instanceof @variable v0 @type ^`c.f.b.k.n.f` @kind boolean;
  #L1d7bba.  if v1 == 0 then goto L1d7b9e;
  #L1d7bbe.  v1:= v0 @kind object;
  #L1d7bc0.  v1:= (`c.f.b.k.n.f`) v1 @kind object;
  #L1d7bc4.  v3:= 2I;
  #L1d7bc6.  v0:= v8 @kind object;
  #L1d7bc8.  v2:= v10;
  #L1d7bca.  v4:= v12 @kind object;
  #L1d7bcc.  v5:= v13 @kind object;
  #L1d7bce.  v6:= v14 @kind object;
  #L1d7bd0.  call `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/n/f;IILc/f/b/k/n/f;Ljava/util/ArrayList;Lc/f/b/k/n/m;)V` @kind direct;
  #L1d7bd6.  goto L1d7b9e;
  #L1d7bd8.  v0:= v9.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1d7bdc.  v0:= v0.`c.f.b.k.n.f.l` @type ^`java.util.List` @kind object;
  #L1d7be0.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1d7be6.  v7:= temp @kind object;
  #L1d7be8.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d7bee.  v0:= temp;
  #L1d7bf0.  if v0 == 0 then goto L1d7c1e;
  #L1d7bf4.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d7bfa.  v0:= temp @kind object;
  #L1d7bfc.  v1:= v0 @kind object;
  #L1d7bfe.  v1:= (`c.f.b.k.n.f`) v1 @kind object;
  #L1d7c02.  if v1 != v12 then goto L1d7c0a;
  #L1d7c06.  v14.`c.f.b.k.n.m.a` @type ^`boolean` := v11 @kind boolean;
  #L1d7c0a.  v3:= 0I;
  #L1d7c0c.  v0:= v8 @kind object;
  #L1d7c0e.  v2:= v10;
  #L1d7c10.  v4:= v12 @kind object;
  #L1d7c12.  v5:= v13 @kind object;
  #L1d7c14.  v6:= v14 @kind object;
  #L1d7c16.  call `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/n/f;IILc/f/b/k/n/f;Ljava/util/ArrayList;Lc/f/b/k/n/m;)V` @kind direct;
  #L1d7c1c.  goto L1d7be8;
  #L1d7c1e.  v0:= v9.`c.f.b.k.n.p.i` @type ^`c.f.b.k.n.f` @kind object;
  #L1d7c22.  v0:= v0.`c.f.b.k.n.f.l` @type ^`java.util.List` @kind object;
  #L1d7c26.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1d7c2c.  v7:= temp @kind object;
  #L1d7c2e.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d7c34.  v0:= temp;
  #L1d7c36.  if v0 == 0 then goto L1d7c64;
  #L1d7c3a.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d7c40.  v0:= temp @kind object;
  #L1d7c42.  v1:= v0 @kind object;
  #L1d7c44.  v1:= (`c.f.b.k.n.f`) v1 @kind object;
  #L1d7c48.  if v1 != v12 then goto L1d7c50;
  #L1d7c4c.  v14.`c.f.b.k.n.m.a` @type ^`boolean` := v11 @kind boolean;
  #L1d7c50.  v3:= 1I;
  #L1d7c52.  v0:= v8 @kind object;
  #L1d7c54.  v2:= v10;
  #L1d7c56.  v4:= v12 @kind object;
  #L1d7c58.  v5:= v13 @kind object;
  #L1d7c5a.  v6:= v14 @kind object;
  #L1d7c5c.  call `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/n/f;IILc/f/b/k/n/f;Ljava/util/ArrayList;Lc/f/b/k/n/m;)V` @kind direct;
  #L1d7c62.  goto L1d7c2e;
  #L1d7c64.  if v10 != v11 then goto L1d7cb2;
  #L1d7c68.  v11:= instanceof @variable v9 @type ^`c.f.b.k.n.n` @kind boolean;
  #L1d7c6c.  if v11 == 0 then goto L1d7cb2;
  #L1d7c70.  v9:= (`c.f.b.k.n.n`) v9 @kind object;
  #L1d7c74.  v9:= v9.`c.f.b.k.n.n.k` @type ^`c.f.b.k.n.f` @kind object;
  #L1d7c78.  v9:= v9.`c.f.b.k.n.f.l` @type ^`java.util.List` @kind object;
  #L1d7c7c.  call temp:= `iterator`(v9) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1d7c82.  v9:= temp @kind object;
  #L1d7c84.  call temp:= `hasNext`(v9) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d7c8a.  v11:= temp;
  #L1d7c8c.  if v11 == 0 then goto L1d7cb2;
  #L1d7c90.  call temp:= `next`(v9) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d7c96.  v11:= temp @kind object;
  #L1d7c98.  v1:= v11 @kind object;
  #L1d7c9a.  v1:= (`c.f.b.k.n.f`) v1 @kind object;
  #L1d7c9e.  v3:= 2I;
  #L1d7ca0.  v0:= v8 @kind object;
  #L1d7ca2.  v2:= v10;
  #L1d7ca4.  v4:= v12 @kind object;
  #L1d7ca6.  v5:= v13 @kind object;
  #L1d7ca8.  v6:= v14 @kind object;
  #L1d7caa.  call `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/n/f;IILc/f/b/k/n/f;Ljava/util/ArrayList;Lc/f/b/k/n/m;)V` @kind direct;
  #L1d7cb0.  goto L1d7c84;
  #L1d7cb2.  return @kind void;
  #L1d7cb4.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1d7cb6.  throw v9;
  catch `java.lang.Throwable` @[L1d7caa..L1d7cb0] goto L1d7cb4;
}
procedure `void` `a`(`c.f.b.k.n.e` v10 @kind this, `c.f.b.k.n.p` v11 @kind object, `int` v12 , `java.util.ArrayList` v13 @kind object) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/n/p;ILjava/util/ArrayList;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1d7ed4.  v0:= v11.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1d7ed8.  v0:= v0.`c.f.b.k.n.f.k` @type ^`java.util.List` @kind object;
  #L1d7edc.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1d7ee2.  v0:= temp @kind object;
  #L1d7ee4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d7eea.  v1:= temp;
  #L1d7eec.  if v1 == 0 then goto L1d7f46;
  #L1d7ef0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d7ef6.  v1:= temp @kind object;
  #L1d7ef8.  v1:= (`c.f.b.k.n.d`) v1 @kind object;
  #L1d7efc.  v2:= instanceof @variable v1 @type ^`c.f.b.k.n.f` @kind boolean;
  #L1d7f00.  if v2 == 0 then goto L1d7f20;
  #L1d7f04.  v4:= v1 @kind object;
  #L1d7f06.  v4:= (`c.f.b.k.n.f`) v4 @kind object;
  #L1d7f0a.  v6:= 0I;
  #L1d7f0c.  v7:= v11.`c.f.b.k.n.p.i` @type ^`c.f.b.k.n.f` @kind object;
  #L1d7f10.  v9:= 0I;
  #L1d7f12.  v3:= v10 @kind object;
  #L1d7f14.  v5:= v12;
  #L1d7f16.  v8:= v13 @kind object;
  #L1d7f18.  call `a`(v3, v4, v5, v6, v7, v8, v9) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/n/f;IILc/f/b/k/n/f;Ljava/util/ArrayList;Lc/f/b/k/n/m;)V` @kind direct;
  #L1d7f1e.  goto L1d7ee4;
  #L1d7f20.  v2:= instanceof @variable v1 @type ^`c.f.b.k.n.p` @kind boolean;
  #L1d7f24.  if v2 == 0 then goto L1d7ee4;
  #L1d7f28.  v1:= (`c.f.b.k.n.p`) v1 @kind object;
  #L1d7f2c.  v3:= v1.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1d7f30.  v5:= 0I;
  #L1d7f32.  v6:= v11.`c.f.b.k.n.p.i` @type ^`c.f.b.k.n.f` @kind object;
  #L1d7f36.  v8:= 0I;
  #L1d7f38.  v2:= v10 @kind object;
  #L1d7f3a.  v4:= v12;
  #L1d7f3c.  v7:= v13 @kind object;
  #L1d7f3e.  call `a`(v2, v3, v4, v5, v6, v7, v8) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/n/f;IILc/f/b/k/n/f;Ljava/util/ArrayList;Lc/f/b/k/n/m;)V` @kind direct;
  #L1d7f44.  goto L1d7ee4;
  #L1d7f46.  v0:= v11.`c.f.b.k.n.p.i` @type ^`c.f.b.k.n.f` @kind object;
  #L1d7f4a.  v0:= v0.`c.f.b.k.n.f.k` @type ^`java.util.List` @kind object;
  #L1d7f4e.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1d7f54.  v0:= temp @kind object;
  #L1d7f56.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d7f5c.  v1:= temp;
  #L1d7f5e.  if v1 == 0 then goto L1d7fb8;
  #L1d7f62.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d7f68.  v1:= temp @kind object;
  #L1d7f6a.  v1:= (`c.f.b.k.n.d`) v1 @kind object;
  #L1d7f6e.  v2:= instanceof @variable v1 @type ^`c.f.b.k.n.f` @kind boolean;
  #L1d7f72.  if v2 == 0 then goto L1d7f92;
  #L1d7f76.  v4:= v1 @kind object;
  #L1d7f78.  v4:= (`c.f.b.k.n.f`) v4 @kind object;
  #L1d7f7c.  v6:= 1I;
  #L1d7f7e.  v7:= v11.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1d7f82.  v9:= 0I;
  #L1d7f84.  v3:= v10 @kind object;
  #L1d7f86.  v5:= v12;
  #L1d7f88.  v8:= v13 @kind object;
  #L1d7f8a.  call `a`(v3, v4, v5, v6, v7, v8, v9) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/n/f;IILc/f/b/k/n/f;Ljava/util/ArrayList;Lc/f/b/k/n/m;)V` @kind direct;
  #L1d7f90.  goto L1d7f56;
  #L1d7f92.  v2:= instanceof @variable v1 @type ^`c.f.b.k.n.p` @kind boolean;
  #L1d7f96.  if v2 == 0 then goto L1d7f56;
  #L1d7f9a.  v1:= (`c.f.b.k.n.p`) v1 @kind object;
  #L1d7f9e.  v3:= v1.`c.f.b.k.n.p.i` @type ^`c.f.b.k.n.f` @kind object;
  #L1d7fa2.  v5:= 1I;
  #L1d7fa4.  v6:= v11.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1d7fa8.  v8:= 0I;
  #L1d7faa.  v2:= v10 @kind object;
  #L1d7fac.  v4:= v12;
  #L1d7fae.  v7:= v13 @kind object;
  #L1d7fb0.  call `a`(v2, v3, v4, v5, v6, v7, v8) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/n/f;IILc/f/b/k/n/f;Ljava/util/ArrayList;Lc/f/b/k/n/m;)V` @kind direct;
  #L1d7fb6.  goto L1d7f56;
  #L1d7fb8.  v0:= 1I;
  #L1d7fba.  if v12 != v0 then goto L1d800c;
  #L1d7fbe.  v11:= (`c.f.b.k.n.n`) v11 @kind object;
  #L1d7fc2.  v11:= v11.`c.f.b.k.n.n.k` @type ^`c.f.b.k.n.f` @kind object;
  #L1d7fc6.  v11:= v11.`c.f.b.k.n.f.k` @type ^`java.util.List` @kind object;
  #L1d7fca.  call temp:= `iterator`(v11) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1d7fd0.  v11:= temp @kind object;
  #L1d7fd2.  call temp:= `hasNext`(v11) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d7fd8.  v0:= temp;
  #L1d7fda.  if v0 == 0 then goto L1d800c;
  #L1d7fde.  call temp:= `next`(v11) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d7fe4.  v0:= temp @kind object;
  #L1d7fe6.  v0:= (`c.f.b.k.n.d`) v0 @kind object;
  #L1d7fea.  v1:= instanceof @variable v0 @type ^`c.f.b.k.n.f` @kind boolean;
  #L1d7fee.  if v1 == 0 then goto L1d7fd2;
  #L1d7ff2.  v3:= v0 @kind object;
  #L1d7ff4.  v3:= (`c.f.b.k.n.f`) v3 @kind object;
  #L1d7ff8.  v5:= 2I;
  #L1d7ffa.  v6:= 0I;
  #L1d7ffc.  v8:= 0I;
  #L1d7ffe.  v2:= v10 @kind object;
  #L1d8000.  v4:= v12;
  #L1d8002.  v7:= v13 @kind object;
  #L1d8004.  call `a`(v2, v3, v4, v5, v6, v7, v8) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/n/f;IILc/f/b/k/n/f;Ljava/util/ArrayList;Lc/f/b/k/n/m;)V` @kind direct;
  #L1d800a.  goto L1d7fd2;
  #L1d800c.  return @kind void;
}
procedure `boolean` `a`(`c.f.b.k.n.e` v13 @kind this, `c.f.b.k.f` v14 @kind object) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/f;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L1d6bdc.  v0:= v14.`c.f.b.k.m.p0` @type ^`java.util.ArrayList` @kind object;
  #L1d6be0.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1d6be6.  v0:= temp @kind object;
  #L1d6be8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d6bee.  v1:= temp;
  #L1d6bf0.  v2:= 0I;
  #L1d6bf2.  if v1 == 0 then goto L1d7290;
  #L1d6bf6.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d6bfc.  v1:= temp @kind object;
  #L1d6bfe.  v1:= (`c.f.b.k.e`) v1 @kind object;
  #L1d6c02.  v3:= v1.`c.f.b.k.e.Q` @type ^`c.f.b.k.e$b`[] @kind object;
  #L1d6c06.  v4:= v3[v2] @kind object;
  #L1d6c0a.  v9:= 1I;
  #L1d6c0c.  v3:= v3[v9] @kind object;
  #L1d6c10.  call temp:= `getVisibility`(v1) @signature `Lc/f/b/k/e;.getVisibility:()I` @kind virtual;
  #L1d6c16.  v5:= temp;
  #L1d6c18.  v6:= 8I;
  #L1d6c1c.  if v5 != v6 then goto L1d6c26;
  #L1d6c20.  v1.`c.f.b.k.e.a` @type ^`boolean` := v9 @kind boolean;
  #L1d6c24.  goto L1d6be8;
  #L1d6c26.  v5:= v1.`c.f.b.k.e.s` @type ^`float`;
  #L1d6c2a.  v10:= 1.0F;
  #L1d6c2e.  v6:= 2I;
  #L1d6c30.  v5:= fcmpg(v5, v10);
  #L1d6c34.  if v5 >= 0 then goto L1d6c44;
  #L1d6c38.  v5:= `@@c.f.b.k.e$b.h` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6c3c.  if v4 != v5 then goto L1d6c44;
  #L1d6c40.  v1.`c.f.b.k.e.n` @type ^`int` := v6;
  #L1d6c44.  v5:= v1.`c.f.b.k.e.v` @type ^`float`;
  #L1d6c48.  v5:= fcmpg(v5, v10);
  #L1d6c4c.  if v5 >= 0 then goto L1d6c5c;
  #L1d6c50.  v5:= `@@c.f.b.k.e$b.h` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6c54.  if v3 != v5 then goto L1d6c5c;
  #L1d6c58.  v1.`c.f.b.k.e.o` @type ^`int` := v6;
  #L1d6c5c.  call temp:= `getDimensionRatio`(v1) @signature `Lc/f/b/k/e;.getDimensionRatio:()F` @kind virtual;
  #L1d6c62.  v5:= temp;
  #L1d6c64.  v7:= 0I;
  #L1d6c66.  v8:= 3I;
  #L1d6c68.  v5:= fcmpl(v5, v7);
  #L1d6c6c.  if v5 <= 0 then goto L1d6cd0;
  #L1d6c70.  v5:= `@@c.f.b.k.e$b.h` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6c74.  if v4 != v5 then goto L1d6c8e;
  #L1d6c78.  v5:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6c7c.  if v3 == v5 then goto L1d6c88;
  #L1d6c80.  v5:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6c84.  if v3 != v5 then goto L1d6c8e;
  #L1d6c88.  v1.`c.f.b.k.e.n` @type ^`int` := v8;
  #L1d6c8c.  goto L1d6cd0;
  #L1d6c8e.  v5:= `@@c.f.b.k.e$b.h` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6c92.  if v3 != v5 then goto L1d6cac;
  #L1d6c96.  v5:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6c9a.  if v4 == v5 then goto L1d6ca6;
  #L1d6c9e.  v5:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6ca2.  if v4 != v5 then goto L1d6cac;
  #L1d6ca6.  v1.`c.f.b.k.e.o` @type ^`int` := v8;
  #L1d6caa.  goto L1d6cd0;
  #L1d6cac.  v5:= `@@c.f.b.k.e$b.h` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6cb0.  if v4 != v5 then goto L1d6cd0;
  #L1d6cb4.  if v3 != v5 then goto L1d6cd0;
  #L1d6cb8.  v5:= v1.`c.f.b.k.e.n` @type ^`int`;
  #L1d6cbc.  if v5 != 0 then goto L1d6cc4;
  #L1d6cc0.  v1.`c.f.b.k.e.n` @type ^`int` := v8;
  #L1d6cc4.  v5:= v1.`c.f.b.k.e.o` @type ^`int`;
  #L1d6cc8.  if v5 != 0 then goto L1d6cd0;
  #L1d6ccc.  v1.`c.f.b.k.e.o` @type ^`int` := v8;
  #L1d6cd0.  v5:= `@@c.f.b.k.e$b.h` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6cd4.  if v4 != v5 then goto L1d6cfc;
  #L1d6cd8.  v5:= v1.`c.f.b.k.e.n` @type ^`int`;
  #L1d6cdc.  if v5 != v9 then goto L1d6cfc;
  #L1d6ce0.  v5:= v1.`c.f.b.k.e.F` @type ^`c.f.b.k.d` @kind object;
  #L1d6ce4.  v5:= v5.`c.f.b.k.d.f` @type ^`c.f.b.k.d` @kind object;
  #L1d6ce8.  if v5 == 0 then goto L1d6cf8;
  #L1d6cec.  v5:= v1.`c.f.b.k.e.H` @type ^`c.f.b.k.d` @kind object;
  #L1d6cf0.  v5:= v5.`c.f.b.k.d.f` @type ^`c.f.b.k.d` @kind object;
  #L1d6cf4.  if v5 != 0 then goto L1d6cfc;
  #L1d6cf8.  v4:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6cfc.  v5:= v4 @kind object;
  #L1d6cfe.  v4:= `@@c.f.b.k.e$b.h` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6d02.  if v3 != v4 then goto L1d6d2a;
  #L1d6d06.  v4:= v1.`c.f.b.k.e.o` @type ^`int`;
  #L1d6d0a.  if v4 != v9 then goto L1d6d2a;
  #L1d6d0e.  v4:= v1.`c.f.b.k.e.G` @type ^`c.f.b.k.d` @kind object;
  #L1d6d12.  v4:= v4.`c.f.b.k.d.f` @type ^`c.f.b.k.d` @kind object;
  #L1d6d16.  if v4 == 0 then goto L1d6d26;
  #L1d6d1a.  v4:= v1.`c.f.b.k.e.I` @type ^`c.f.b.k.d` @kind object;
  #L1d6d1e.  v4:= v4.`c.f.b.k.d.f` @type ^`c.f.b.k.d` @kind object;
  #L1d6d22.  if v4 != 0 then goto L1d6d2a;
  #L1d6d26.  v3:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6d2a.  v7:= v3 @kind object;
  #L1d6d2c.  v3:= v1.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d6d30.  v3.`c.f.b.k.n.p.d` @type ^`c.f.b.k.e$b` := v5 @kind object;
  #L1d6d34.  v4:= v1.`c.f.b.k.e.n` @type ^`int`;
  #L1d6d38.  v3.`c.f.b.k.n.p.a` @type ^`int` := v4;
  #L1d6d3c.  v3:= v1.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d6d40.  v3.`c.f.b.k.n.p.d` @type ^`c.f.b.k.e$b` := v7 @kind object;
  #L1d6d44.  v4:= v1.`c.f.b.k.e.o` @type ^`int`;
  #L1d6d48.  v3.`c.f.b.k.n.p.a` @type ^`int` := v4;
  #L1d6d4c.  v3:= `@@c.f.b.k.e$b.i` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6d50.  if v5 == v3 then goto L1d6d64;
  #L1d6d54.  v3:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6d58.  if v5 == v3 then goto L1d6d64;
  #L1d6d5c.  v3:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6d60.  if v5 != v3 then goto L1d6d80;
  #L1d6d64.  v3:= `@@c.f.b.k.e$b.i` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6d68.  if v7 == v3 then goto L1d71e2;
  #L1d6d6c.  v3:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6d70.  if v7 == v3 then goto L1d71e2;
  #L1d6d74.  v3:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6d78.  if v7 != v3 then goto L1d6d80;
  #L1d6d7c.  goto L1d71e2;
  #L1d6d80.  v3:= `@@c.f.b.k.e$b.h` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6d84.  v11:= 0.5F;
  #L1d6d88.  if v5 != v3 then goto L1d6f28;
  #L1d6d8c.  v3:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6d90.  if v7 == v3 then goto L1d6d9c;
  #L1d6d94.  v3:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6d98.  if v7 != v3 then goto L1d6f28;
  #L1d6d9c.  v3:= v1.`c.f.b.k.e.n` @type ^`int`;
  #L1d6da0.  if v3 != v8 then goto L1d6e18;
  #L1d6da4.  v2:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6da8.  if v7 != v2 then goto L1d6dbe;
  #L1d6dac.  v6:= 0I;
  #L1d6dae.  v8:= 0I;
  #L1d6db0.  v3:= v13 @kind object;
  #L1d6db2.  v4:= v1 @kind object;
  #L1d6db4.  v5:= v2 @kind object;
  #L1d6db6.  v7:= v2 @kind object;
  #L1d6db8.  call `a`(v3, v4, v5, v6, v7, v8) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/e;Lc/f/b/k/e$b;ILc/f/b/k/e$b;I)V` @kind direct;
  #L1d6dbe.  call temp:= `getHeight`(v1) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d6dc4.  v8:= temp;
  #L1d6dc6.  v2:= (`float`) v8 @kind i2f;
  #L1d6dc8.  v3:= v1.`c.f.b.k.e.U` @type ^`float`;
  #L1d6dcc.  v2:= v2 * v3 @kind float;
  #L1d6dd0.  v2:= v2 + v11 @kind float;
  #L1d6dd2.  v6:= (`int`) v2 @kind f2i;
  #L1d6dd4.  v7:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6dd8.  v3:= v13 @kind object;
  #L1d6dda.  v4:= v1 @kind object;
  #L1d6ddc.  v5:= v7 @kind object;
  #L1d6dde.  call `a`(v3, v4, v5, v6, v7, v8) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/e;Lc/f/b/k/e$b;ILc/f/b/k/e$b;I)V` @kind direct;
  #L1d6de4.  v2:= v1.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d6de8.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d6dec.  call temp:= `getWidth`(v1) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d6df2.  v3:= temp;
  #L1d6df4.  call `resolve`(v2, v3) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d6dfa.  v2:= v1.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d6dfe.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d6e02.  call temp:= `getHeight`(v1) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d6e08.  v3:= temp;
  #L1d6e0a.  call `resolve`(v2, v3) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d6e10.  v1.`c.f.b.k.e.a` @type ^`boolean` := v9 @kind boolean;
  #L1d6e14.  goto L1d6be8;
  #L1d6e18.  if v3 != v9 then goto L1d6e46;
  #L1d6e1c.  v5:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6e20.  v6:= 0I;
  #L1d6e22.  v8:= 0I;
  #L1d6e24.  v3:= v13 @kind object;
  #L1d6e26.  v4:= v1 @kind object;
  #L1d6e28.  call `a`(v3, v4, v5, v6, v7, v8) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/e;Lc/f/b/k/e$b;ILc/f/b/k/e$b;I)V` @kind direct;
  #L1d6e2e.  v2:= v1.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d6e32.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d6e36.  call temp:= `getWidth`(v1) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d6e3c.  v1:= temp;
  #L1d6e3e.  v2.`c.f.b.k.n.g.m` @type ^`int` := v1;
  #L1d6e42.  goto L1d6be8;
  #L1d6e46.  if v3 != v6 then goto L1d6ec6;
  #L1d6e4a.  v3:= v14.`c.f.b.k.e.Q` @type ^`c.f.b.k.e$b`[] @kind object;
  #L1d6e4e.  v4:= v3[v2] @kind object;
  #L1d6e52.  v12:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6e56.  if v4 == v12 then goto L1d6e66;
  #L1d6e5a.  v3:= v3[v2] @kind object;
  #L1d6e5e.  v4:= `@@c.f.b.k.e$b.i` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6e62.  if v3 != v4 then goto L1d6f28;
  #L1d6e66.  v2:= v1.`c.f.b.k.e.s` @type ^`float`;
  #L1d6e6a.  call temp:= `getWidth`(v14) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d6e70.  v3:= temp;
  #L1d6e72.  v3:= (`float`) v3 @kind i2f;
  #L1d6e74.  v2:= v2 * v3 @kind float;
  #L1d6e78.  v2:= v2 + v11 @kind float;
  #L1d6e7a.  v6:= (`int`) v2 @kind f2i;
  #L1d6e7c.  call temp:= `getHeight`(v1) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d6e82.  v8:= temp;
  #L1d6e84.  v5:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6e88.  v3:= v13 @kind object;
  #L1d6e8a.  v4:= v1 @kind object;
  #L1d6e8c.  call `a`(v3, v4, v5, v6, v7, v8) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/e;Lc/f/b/k/e$b;ILc/f/b/k/e$b;I)V` @kind direct;
  #L1d6e92.  v2:= v1.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d6e96.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d6e9a.  call temp:= `getWidth`(v1) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d6ea0.  v3:= temp;
  #L1d6ea2.  call `resolve`(v2, v3) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d6ea8.  v2:= v1.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d6eac.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d6eb0.  call temp:= `getHeight`(v1) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d6eb6.  v3:= temp;
  #L1d6eb8.  call `resolve`(v2, v3) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d6ebe.  v1.`c.f.b.k.e.a` @type ^`boolean` := v9 @kind boolean;
  #L1d6ec2.  goto L1d6be8;
  #L1d6ec6.  v3:= v1.`c.f.b.k.e.N` @type ^`c.f.b.k.d`[] @kind object;
  #L1d6eca.  v4:= v3[v2] @kind object;
  #L1d6ece.  v4:= v4.`c.f.b.k.d.f` @type ^`c.f.b.k.d` @kind object;
  #L1d6ed2.  if v4 == 0 then goto L1d6ee2;
  #L1d6ed6.  v3:= v3[v9] @kind object;
  #L1d6eda.  v3:= v3.`c.f.b.k.d.f` @type ^`c.f.b.k.d` @kind object;
  #L1d6ede.  if v3 != 0 then goto L1d6f28;
  #L1d6ee2.  v5:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6ee6.  v6:= 0I;
  #L1d6ee8.  v8:= 0I;
  #L1d6eea.  v3:= v13 @kind object;
  #L1d6eec.  v4:= v1 @kind object;
  #L1d6eee.  call `a`(v3, v4, v5, v6, v7, v8) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/e;Lc/f/b/k/e$b;ILc/f/b/k/e$b;I)V` @kind direct;
  #L1d6ef4.  v2:= v1.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d6ef8.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d6efc.  call temp:= `getWidth`(v1) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d6f02.  v3:= temp;
  #L1d6f04.  call `resolve`(v2, v3) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d6f0a.  v2:= v1.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d6f0e.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d6f12.  call temp:= `getHeight`(v1) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d6f18.  v3:= temp;
  #L1d6f1a.  call `resolve`(v2, v3) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d6f20.  v1.`c.f.b.k.e.a` @type ^`boolean` := v9 @kind boolean;
  #L1d6f24.  goto L1d6be8;
  #L1d6f28.  v3:= `@@c.f.b.k.e$b.h` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6f2c.  if v7 != v3 then goto L1d70dc;
  #L1d6f30.  v3:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6f34.  if v5 == v3 then goto L1d6f40;
  #L1d6f38.  v3:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6f3c.  if v5 != v3 then goto L1d70dc;
  #L1d6f40.  v3:= v1.`c.f.b.k.e.o` @type ^`int`;
  #L1d6f44.  if v3 != v8 then goto L1d6fcc;
  #L1d6f48.  v7:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6f4c.  if v5 != v7 then goto L1d6f60;
  #L1d6f50.  v6:= 0I;
  #L1d6f52.  v8:= 0I;
  #L1d6f54.  v3:= v13 @kind object;
  #L1d6f56.  v4:= v1 @kind object;
  #L1d6f58.  v5:= v7 @kind object;
  #L1d6f5a.  call `a`(v3, v4, v5, v6, v7, v8) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/e;Lc/f/b/k/e$b;ILc/f/b/k/e$b;I)V` @kind direct;
  #L1d6f60.  call temp:= `getWidth`(v1) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d6f66.  v6:= temp;
  #L1d6f68.  v2:= v1.`c.f.b.k.e.U` @type ^`float`;
  #L1d6f6c.  call temp:= `getDimensionRatioSide`(v1) @signature `Lc/f/b/k/e;.getDimensionRatioSide:()I` @kind virtual;
  #L1d6f72.  v3:= temp;
  #L1d6f74.  v4:= -1I;
  #L1d6f76.  if v3 != v4 then goto L1d6f7e;
  #L1d6f7a.  v2:= v10 / v2 @kind float;
  #L1d6f7e.  v3:= (`float`) v6 @kind i2f;
  #L1d6f80.  v3:= v3 * v2 @kind float;
  #L1d6f84.  v3:= v3 + v11 @kind float;
  #L1d6f86.  v8:= (`int`) v3 @kind f2i;
  #L1d6f88.  v7:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6f8c.  v3:= v13 @kind object;
  #L1d6f8e.  v4:= v1 @kind object;
  #L1d6f90.  v5:= v7 @kind object;
  #L1d6f92.  call `a`(v3, v4, v5, v6, v7, v8) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/e;Lc/f/b/k/e$b;ILc/f/b/k/e$b;I)V` @kind direct;
  #L1d6f98.  v2:= v1.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d6f9c.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d6fa0.  call temp:= `getWidth`(v1) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d6fa6.  v3:= temp;
  #L1d6fa8.  call `resolve`(v2, v3) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d6fae.  v2:= v1.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d6fb2.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d6fb6.  call temp:= `getHeight`(v1) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d6fbc.  v3:= temp;
  #L1d6fbe.  call `resolve`(v2, v3) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d6fc4.  v1.`c.f.b.k.e.a` @type ^`boolean` := v9 @kind boolean;
  #L1d6fc8.  goto L1d6be8;
  #L1d6fcc.  if v3 != v9 then goto L1d6ffa;
  #L1d6fd0.  v6:= 0I;
  #L1d6fd2.  v7:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d6fd6.  v8:= 0I;
  #L1d6fd8.  v3:= v13 @kind object;
  #L1d6fda.  v4:= v1 @kind object;
  #L1d6fdc.  call `a`(v3, v4, v5, v6, v7, v8) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/e;Lc/f/b/k/e$b;ILc/f/b/k/e$b;I)V` @kind direct;
  #L1d6fe2.  v2:= v1.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d6fe6.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d6fea.  call temp:= `getHeight`(v1) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d6ff0.  v1:= temp;
  #L1d6ff2.  v2.`c.f.b.k.n.g.m` @type ^`int` := v1;
  #L1d6ff6.  goto L1d6be8;
  #L1d6ffa.  if v3 != v6 then goto L1d707a;
  #L1d6ffe.  v3:= v14.`c.f.b.k.e.Q` @type ^`c.f.b.k.e$b`[] @kind object;
  #L1d7002.  v4:= v3[v9] @kind object;
  #L1d7006.  v8:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d700a.  if v4 == v8 then goto L1d701a;
  #L1d700e.  v3:= v3[v9] @kind object;
  #L1d7012.  v4:= `@@c.f.b.k.e$b.i` @type ^`c.f.b.k.e$b` @kind object;
  #L1d7016.  if v3 != v4 then goto L1d70dc;
  #L1d701a.  v2:= v1.`c.f.b.k.e.v` @type ^`float`;
  #L1d701e.  call temp:= `getWidth`(v1) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d7024.  v6:= temp;
  #L1d7026.  call temp:= `getHeight`(v14) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d702c.  v3:= temp;
  #L1d702e.  v3:= (`float`) v3 @kind i2f;
  #L1d7030.  v2:= v2 * v3 @kind float;
  #L1d7034.  v2:= v2 + v11 @kind float;
  #L1d7036.  v8:= (`int`) v2 @kind f2i;
  #L1d7038.  v7:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d703c.  v3:= v13 @kind object;
  #L1d703e.  v4:= v1 @kind object;
  #L1d7040.  call `a`(v3, v4, v5, v6, v7, v8) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/e;Lc/f/b/k/e$b;ILc/f/b/k/e$b;I)V` @kind direct;
  #L1d7046.  v2:= v1.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d704a.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d704e.  call temp:= `getWidth`(v1) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d7054.  v3:= temp;
  #L1d7056.  call `resolve`(v2, v3) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d705c.  v2:= v1.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d7060.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d7064.  call temp:= `getHeight`(v1) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d706a.  v3:= temp;
  #L1d706c.  call `resolve`(v2, v3) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d7072.  v1.`c.f.b.k.e.a` @type ^`boolean` := v9 @kind boolean;
  #L1d7076.  goto L1d6be8;
  #L1d707a.  v3:= v1.`c.f.b.k.e.N` @type ^`c.f.b.k.d`[] @kind object;
  #L1d707e.  v4:= v3[v6] @kind object;
  #L1d7082.  v4:= v4.`c.f.b.k.d.f` @type ^`c.f.b.k.d` @kind object;
  #L1d7086.  if v4 == 0 then goto L1d7096;
  #L1d708a.  v3:= v3[v8] @kind object;
  #L1d708e.  v3:= v3.`c.f.b.k.d.f` @type ^`c.f.b.k.d` @kind object;
  #L1d7092.  if v3 != 0 then goto L1d70dc;
  #L1d7096.  v5:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d709a.  v6:= 0I;
  #L1d709c.  v8:= 0I;
  #L1d709e.  v3:= v13 @kind object;
  #L1d70a0.  v4:= v1 @kind object;
  #L1d70a2.  call `a`(v3, v4, v5, v6, v7, v8) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/e;Lc/f/b/k/e$b;ILc/f/b/k/e$b;I)V` @kind direct;
  #L1d70a8.  v2:= v1.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d70ac.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d70b0.  call temp:= `getWidth`(v1) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d70b6.  v3:= temp;
  #L1d70b8.  call `resolve`(v2, v3) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d70be.  v2:= v1.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d70c2.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d70c6.  call temp:= `getHeight`(v1) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d70cc.  v3:= temp;
  #L1d70ce.  call `resolve`(v2, v3) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d70d4.  v1.`c.f.b.k.e.a` @type ^`boolean` := v9 @kind boolean;
  #L1d70d8.  goto L1d6be8;
  #L1d70dc.  v3:= `@@c.f.b.k.e$b.h` @type ^`c.f.b.k.e$b` @kind object;
  #L1d70e0.  if v5 != v3 then goto L1d6be8;
  #L1d70e4.  if v7 != v3 then goto L1d6be8;
  #L1d70e8.  v3:= v1.`c.f.b.k.e.n` @type ^`int`;
  #L1d70ec.  if v3 == v9 then goto L1d71a2;
  #L1d70f0.  v4:= v1.`c.f.b.k.e.o` @type ^`int`;
  #L1d70f4.  if v4 != v9 then goto L1d70fa;
  #L1d70f8.  goto L1d71a2;
  #L1d70fa.  if v4 != v6 then goto L1d6be8;
  #L1d70fe.  if v3 != v6 then goto L1d6be8;
  #L1d7102.  v3:= v14.`c.f.b.k.e.Q` @type ^`c.f.b.k.e$b`[] @kind object;
  #L1d7106.  v4:= v3[v2] @kind object;
  #L1d710a.  v5:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d710e.  if v4 == v5 then goto L1d711a;
  #L1d7112.  v2:= v3[v2] @kind object;
  #L1d7116.  if v2 != v5 then goto L1d6be8;
  #L1d711a.  v2:= v14.`c.f.b.k.e.Q` @type ^`c.f.b.k.e$b`[] @kind object;
  #L1d711e.  v3:= v2[v9] @kind object;
  #L1d7122.  v4:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d7126.  if v3 == v4 then goto L1d7132;
  #L1d712a.  v2:= v2[v9] @kind object;
  #L1d712e.  if v2 != v4 then goto L1d6be8;
  #L1d7132.  v2:= v1.`c.f.b.k.e.s` @type ^`float`;
  #L1d7136.  v3:= v1.`c.f.b.k.e.v` @type ^`float`;
  #L1d713a.  call temp:= `getWidth`(v14) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d7140.  v4:= temp;
  #L1d7142.  v4:= (`float`) v4 @kind i2f;
  #L1d7144.  v2:= v2 * v4 @kind float;
  #L1d7148.  v2:= v2 + v11 @kind float;
  #L1d714a.  v6:= (`int`) v2 @kind f2i;
  #L1d714c.  call temp:= `getHeight`(v14) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d7152.  v2:= temp;
  #L1d7154.  v2:= (`float`) v2 @kind i2f;
  #L1d7156.  v3:= v3 * v2 @kind float;
  #L1d715a.  v3:= v3 + v11 @kind float;
  #L1d715c.  v8:= (`int`) v3 @kind f2i;
  #L1d715e.  v7:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d7162.  v3:= v13 @kind object;
  #L1d7164.  v4:= v1 @kind object;
  #L1d7166.  v5:= v7 @kind object;
  #L1d7168.  call `a`(v3, v4, v5, v6, v7, v8) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/e;Lc/f/b/k/e$b;ILc/f/b/k/e$b;I)V` @kind direct;
  #L1d716e.  v2:= v1.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d7172.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d7176.  call temp:= `getWidth`(v1) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d717c.  v3:= temp;
  #L1d717e.  call `resolve`(v2, v3) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d7184.  v2:= v1.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d7188.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d718c.  call temp:= `getHeight`(v1) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d7192.  v3:= temp;
  #L1d7194.  call `resolve`(v2, v3) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d719a.  v1.`c.f.b.k.e.a` @type ^`boolean` := v9 @kind boolean;
  #L1d719e.  goto L1d6be8;
  #L1d71a2.  v7:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d71a6.  v6:= 0I;
  #L1d71a8.  v8:= 0I;
  #L1d71aa.  v3:= v13 @kind object;
  #L1d71ac.  v4:= v1 @kind object;
  #L1d71ae.  v5:= v7 @kind object;
  #L1d71b0.  call `a`(v3, v4, v5, v6, v7, v8) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/e;Lc/f/b/k/e$b;ILc/f/b/k/e$b;I)V` @kind direct;
  #L1d71b6.  v2:= v1.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d71ba.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d71be.  call temp:= `getWidth`(v1) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d71c4.  v3:= temp;
  #L1d71c6.  v2.`c.f.b.k.n.g.m` @type ^`int` := v3;
  #L1d71ca.  v2:= v1.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d71ce.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d71d2.  call temp:= `getHeight`(v1) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d71d8.  v1:= temp;
  #L1d71da.  v2.`c.f.b.k.n.g.m` @type ^`int` := v1;
  #L1d71de.  goto L1d6be8;
  #L1d71e2.  call temp:= `getWidth`(v1) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d71e8.  v2:= temp;
  #L1d71ea.  v3:= `@@c.f.b.k.e$b.i` @type ^`c.f.b.k.e$b` @kind object;
  #L1d71ee.  if v5 != v3 then goto L1d7218;
  #L1d71f2.  call temp:= `getWidth`(v14) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d71f8.  v2:= temp;
  #L1d71fa.  v3:= v1.`c.f.b.k.e.F` @type ^`c.f.b.k.d` @kind object;
  #L1d71fe.  v3:= v3.`c.f.b.k.d.g` @type ^`int`;
  #L1d7202.  v2:= v2 - v3 @kind int;
  #L1d7204.  v3:= v1.`c.f.b.k.e.H` @type ^`c.f.b.k.d` @kind object;
  #L1d7208.  v3:= v3.`c.f.b.k.d.g` @type ^`int`;
  #L1d720c.  v2:= v2 - v3 @kind int;
  #L1d720e.  v3:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d7212.  v6:= v2;
  #L1d7214.  v5:= v3 @kind object;
  #L1d7216.  goto L1d721a;
  #L1d7218.  v6:= v2;
  #L1d721a.  call temp:= `getHeight`(v1) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d7220.  v2:= temp;
  #L1d7222.  v3:= `@@c.f.b.k.e$b.i` @type ^`c.f.b.k.e$b` @kind object;
  #L1d7226.  if v7 != v3 then goto L1d7250;
  #L1d722a.  call temp:= `getHeight`(v14) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d7230.  v2:= temp;
  #L1d7232.  v3:= v1.`c.f.b.k.e.G` @type ^`c.f.b.k.d` @kind object;
  #L1d7236.  v3:= v3.`c.f.b.k.d.g` @type ^`int`;
  #L1d723a.  v2:= v2 - v3 @kind int;
  #L1d723c.  v3:= v1.`c.f.b.k.e.I` @type ^`c.f.b.k.d` @kind object;
  #L1d7240.  v3:= v3.`c.f.b.k.d.g` @type ^`int`;
  #L1d7244.  v2:= v2 - v3 @kind int;
  #L1d7246.  v3:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d724a.  v8:= v2;
  #L1d724c.  v7:= v3 @kind object;
  #L1d724e.  goto L1d7252;
  #L1d7250.  v8:= v2;
  #L1d7252.  v3:= v13 @kind object;
  #L1d7254.  v4:= v1 @kind object;
  #L1d7256.  call `a`(v3, v4, v5, v6, v7, v8) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/e;Lc/f/b/k/e$b;ILc/f/b/k/e$b;I)V` @kind direct;
  #L1d725c.  v2:= v1.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d7260.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d7264.  call temp:= `getWidth`(v1) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d726a.  v3:= temp;
  #L1d726c.  call `resolve`(v2, v3) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d7272.  v2:= v1.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d7276.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d727a.  call temp:= `getHeight`(v1) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d7280.  v3:= temp;
  #L1d7282.  call `resolve`(v2, v3) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d7288.  v1.`c.f.b.k.e.a` @type ^`boolean` := v9 @kind boolean;
  #L1d728c.  goto L1d6be8;
  #L1d7290.  return v2;
}
procedure `void` `buildGraph`(`c.f.b.k.n.e` v4 @kind this) @signature `Lc/f/b/k/n/e;.buildGraph:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1d7cd4.  v0:= v4.`c.f.b.k.n.e.e` @type ^`java.util.ArrayList` @kind object;
  #L1d7cd8.  call `buildGraph`(v4, v0) @signature `Lc/f/b/k/n/e;.buildGraph:(Ljava/util/ArrayList;)V` @kind virtual;
  #L1d7cde.  v0:= v4.`c.f.b.k.n.e.h` @type ^`java.util.ArrayList` @kind object;
  #L1d7ce2.  call `clear`(v0) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L1d7ce8.  v0:= 0I;
  #L1d7cea.  `@@c.f.b.k.n.m.d` @type ^`int` := v0;
  #L1d7cee.  v1:= v4.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7cf2.  v1:= v1.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d7cf6.  v2:= v4.`c.f.b.k.n.e.h` @type ^`java.util.ArrayList` @kind object;
  #L1d7cfa.  call `a`(v4, v1, v0, v2) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/n/p;ILjava/util/ArrayList;)V` @kind direct;
  #L1d7d00.  v1:= v4.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7d04.  v1:= v1.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d7d08.  v2:= v4.`c.f.b.k.n.e.h` @type ^`java.util.ArrayList` @kind object;
  #L1d7d0c.  v3:= 1I;
  #L1d7d0e.  call `a`(v4, v1, v3, v2) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/n/p;ILjava/util/ArrayList;)V` @kind direct;
  #L1d7d14.  v4.`c.f.b.k.n.e.b` @type ^`boolean` := v0 @kind boolean;
  #L1d7d18.  return @kind void;
}
procedure `void` `buildGraph`(`c.f.b.k.n.e` v5 @kind this, `java.util.ArrayList` v6 @kind object) @signature `Lc/f/b/k/n/e;.buildGraph:(Ljava/util/ArrayList;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1d7d2c.  call `clear`(v6) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L1d7d32.  v0:= v5.`c.f.b.k.n.e.d` @type ^`c.f.b.k.f` @kind object;
  #L1d7d36.  v0:= v0.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d7d3a.  call `b`(v0) @signature `Lc/f/b/k/n/l;.b:()V` @kind virtual;
  #L1d7d40.  v0:= v5.`c.f.b.k.n.e.d` @type ^`c.f.b.k.f` @kind object;
  #L1d7d44.  v0:= v0.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d7d48.  call `b`(v0) @signature `Lc/f/b/k/n/n;.b:()V` @kind virtual;
  #L1d7d4e.  v0:= v5.`c.f.b.k.n.e.d` @type ^`c.f.b.k.f` @kind object;
  #L1d7d52.  v0:= v0.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d7d56.  call temp:= `add`(v6, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1d7d5c.  v0:= v5.`c.f.b.k.n.e.d` @type ^`c.f.b.k.f` @kind object;
  #L1d7d60.  v0:= v0.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d7d64.  call temp:= `add`(v6, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1d7d6a.  v0:= v5.`c.f.b.k.n.e.d` @type ^`c.f.b.k.f` @kind object;
  #L1d7d6e.  v0:= v0.`c.f.b.k.m.p0` @type ^`java.util.ArrayList` @kind object;
  #L1d7d72.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1d7d78.  v0:= temp @kind object;
  #L1d7d7a.  v1:= 0I;
  #L1d7d7c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d7d82.  v2:= temp;
  #L1d7d84.  if v2 == 0 then goto L1d7e58;
  #L1d7d88.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d7d8e.  v2:= temp @kind object;
  #L1d7d90.  v2:= (`c.f.b.k.e`) v2 @kind object;
  #L1d7d94.  v3:= instanceof @variable v2 @type ^`c.f.b.k.h` @kind boolean;
  #L1d7d98.  if v3 == 0 then goto L1d7dae;
  #L1d7d9c.  v3:= new `c.f.b.k.n.j`;
  #L1d7da0.  call `<init>`(v3, v2) @signature `Lc/f/b/k/n/j;.<init>:(Lc/f/b/k/e;)V` @kind direct;
  #L1d7da6.  call temp:= `add`(v6, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1d7dac.  goto L1d7d7c;
  #L1d7dae.  call temp:= `isInHorizontalChain`(v2) @signature `Lc/f/b/k/e;.isInHorizontalChain:()Z` @kind virtual;
  #L1d7db4.  v3:= temp;
  #L1d7db6.  if v3 == 0 then goto L1d7dec;
  #L1d7dba.  v3:= v2.`c.f.b.k.e.b` @type ^`c.f.b.k.n.c` @kind object;
  #L1d7dbe.  if v3 != 0 then goto L1d7dd2;
  #L1d7dc2.  v3:= new `c.f.b.k.n.c`;
  #L1d7dc6.  v4:= 0I;
  #L1d7dc8.  call `<init>`(v3, v2, v4) @signature `Lc/f/b/k/n/c;.<init>:(Lc/f/b/k/e;I)V` @kind direct;
  #L1d7dce.  v2.`c.f.b.k.e.b` @type ^`c.f.b.k.n.c` := v3 @kind object;
  #L1d7dd2.  if v1 != 0 then goto L1d7de0;
  #L1d7dd6.  v1:= new `java.util.HashSet`;
  #L1d7dda.  call `<init>`(v1) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L1d7de0.  v3:= v2.`c.f.b.k.e.b` @type ^`c.f.b.k.n.c` @kind object;
  #L1d7de4.  call temp:= `add`(v1, v3) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1d7dea.  goto L1d7df6;
  #L1d7dec.  v3:= v2.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d7df0.  call temp:= `add`(v6, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1d7df6.  call temp:= `isInVerticalChain`(v2) @signature `Lc/f/b/k/e;.isInVerticalChain:()Z` @kind virtual;
  #L1d7dfc.  v3:= temp;
  #L1d7dfe.  if v3 == 0 then goto L1d7e34;
  #L1d7e02.  v3:= v2.`c.f.b.k.e.c` @type ^`c.f.b.k.n.c` @kind object;
  #L1d7e06.  if v3 != 0 then goto L1d7e1a;
  #L1d7e0a.  v3:= new `c.f.b.k.n.c`;
  #L1d7e0e.  v4:= 1I;
  #L1d7e10.  call `<init>`(v3, v2, v4) @signature `Lc/f/b/k/n/c;.<init>:(Lc/f/b/k/e;I)V` @kind direct;
  #L1d7e16.  v2.`c.f.b.k.e.c` @type ^`c.f.b.k.n.c` := v3 @kind object;
  #L1d7e1a.  if v1 != 0 then goto L1d7e28;
  #L1d7e1e.  v1:= new `java.util.HashSet`;
  #L1d7e22.  call `<init>`(v1) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L1d7e28.  v3:= v2.`c.f.b.k.e.c` @type ^`c.f.b.k.n.c` @kind object;
  #L1d7e2c.  call temp:= `add`(v1, v3) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1d7e32.  goto L1d7e3e;
  #L1d7e34.  v3:= v2.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d7e38.  call temp:= `add`(v6, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1d7e3e.  v3:= instanceof @variable v2 @type ^`c.f.b.k.j` @kind boolean;
  #L1d7e42.  if v3 == 0 then goto L1d7d7c;
  #L1d7e46.  v3:= new `c.f.b.k.n.k`;
  #L1d7e4a.  call `<init>`(v3, v2) @signature `Lc/f/b/k/n/k;.<init>:(Lc/f/b/k/e;)V` @kind direct;
  #L1d7e50.  call temp:= `add`(v6, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1d7e56.  goto L1d7d7c;
  #L1d7e58.  if v1 == 0 then goto L1d7e62;
  #L1d7e5c.  call temp:= `addAll`(v6, v1) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L1d7e62.  call temp:= `iterator`(v6) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1d7e68.  v0:= temp @kind object;
  #L1d7e6a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d7e70.  v1:= temp;
  #L1d7e72.  if v1 == 0 then goto L1d7e8a;
  #L1d7e76.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d7e7c.  v1:= temp @kind object;
  #L1d7e7e.  v1:= (`c.f.b.k.n.p`) v1 @kind object;
  #L1d7e82.  call `b`(v1) @signature `Lc/f/b/k/n/p;.b:()V` @kind virtual;
  #L1d7e88.  goto L1d7e6a;
  #L1d7e8a.  call temp:= `iterator`(v6) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1d7e90.  v6:= temp @kind object;
  #L1d7e92.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d7e98.  v0:= temp;
  #L1d7e9a.  if v0 == 0 then goto L1d7ec0;
  #L1d7e9e.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d7ea4.  v0:= temp @kind object;
  #L1d7ea6.  v0:= (`c.f.b.k.n.p`) v0 @kind object;
  #L1d7eaa.  v1:= v0.`c.f.b.k.n.p.b` @type ^`c.f.b.k.e` @kind object;
  #L1d7eae.  v2:= v5.`c.f.b.k.n.e.d` @type ^`c.f.b.k.f` @kind object;
  #L1d7eb2.  if v1 != v2 then goto L1d7eb8;
  #L1d7eb6.  goto L1d7e92;
  #L1d7eb8.  call `a`(v0) @signature `Lc/f/b/k/n/p;.a:()V` @kind virtual;
  #L1d7ebe.  goto L1d7e92;
  #L1d7ec0.  return @kind void;
}
procedure `boolean` `directMeasure`(`c.f.b.k.n.e` v8 @kind this, `boolean` v9 ) @signature `Lc/f/b/k/n/e;.directMeasure:(Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1d72a4.  v0:= 1I;
  #L1d72a6.  v9:= v9 ^& v0 @kind int;
  #L1d72a8.  v1:= v8.`c.f.b.k.n.e.b` @type ^`boolean` @kind boolean;
  #L1d72ac.  v2:= 0I;
  #L1d72ae.  if v1 != 0 then goto L1d72ba;
  #L1d72b2.  v1:= v8.`c.f.b.k.n.e.c` @type ^`boolean` @kind boolean;
  #L1d72b6.  if v1 == 0 then goto L1d7330;
  #L1d72ba.  v1:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d72be.  v1:= v1.`c.f.b.k.m.p0` @type ^`java.util.ArrayList` @kind object;
  #L1d72c2.  call temp:= `iterator`(v1) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1d72c8.  v1:= temp @kind object;
  #L1d72ca.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d72d0.  v3:= temp;
  #L1d72d2.  if v3 == 0 then goto L1d7302;
  #L1d72d6.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d72dc.  v3:= temp @kind object;
  #L1d72de.  v3:= (`c.f.b.k.e`) v3 @kind object;
  #L1d72e2.  call `ensureWidgetRuns`(v3) @signature `Lc/f/b/k/e;.ensureWidgetRuns:()V` @kind virtual;
  #L1d72e8.  v3.`c.f.b.k.e.a` @type ^`boolean` := v2 @kind boolean;
  #L1d72ec.  v4:= v3.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d72f0.  call `d`(v4) @signature `Lc/f/b/k/n/l;.d:()V` @kind virtual;
  #L1d72f6.  v3:= v3.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d72fa.  call `d`(v3) @signature `Lc/f/b/k/n/n;.d:()V` @kind virtual;
  #L1d7300.  goto L1d72ca;
  #L1d7302.  v1:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7306.  call `ensureWidgetRuns`(v1) @signature `Lc/f/b/k/e;.ensureWidgetRuns:()V` @kind virtual;
  #L1d730c.  v1:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7310.  v1.`c.f.b.k.e.a` @type ^`boolean` := v2 @kind boolean;
  #L1d7314.  v1:= v1.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d7318.  call `d`(v1) @signature `Lc/f/b/k/n/l;.d:()V` @kind virtual;
  #L1d731e.  v1:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7322.  v1:= v1.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d7326.  call `d`(v1) @signature `Lc/f/b/k/n/n;.d:()V` @kind virtual;
  #L1d732c.  v8.`c.f.b.k.n.e.c` @type ^`boolean` := v2 @kind boolean;
  #L1d7330.  v1:= v8.`c.f.b.k.n.e.d` @type ^`c.f.b.k.f` @kind object;
  #L1d7334.  call temp:= `a`(v8, v1) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/f;)Z` @kind direct;
  #L1d733a.  v1:= temp;
  #L1d733c.  if v1 == 0 then goto L1d7342;
  #L1d7340.  return v2;
  #L1d7342.  v1:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7346.  call `setX`(v1, v2) @signature `Lc/f/b/k/e;.setX:(I)V` @kind virtual;
  #L1d734c.  v1:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7350.  call `setY`(v1, v2) @signature `Lc/f/b/k/e;.setY:(I)V` @kind virtual;
  #L1d7356.  v1:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d735a.  call temp:= `getDimensionBehaviour`(v1, v2) @signature `Lc/f/b/k/e;.getDimensionBehaviour:(I)Lc/f/b/k/e$b;` @kind virtual;
  #L1d7360.  v1:= temp @kind object;
  #L1d7362.  v3:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7366.  call temp:= `getDimensionBehaviour`(v3, v0) @signature `Lc/f/b/k/e;.getDimensionBehaviour:(I)Lc/f/b/k/e$b;` @kind virtual;
  #L1d736c.  v3:= temp @kind object;
  #L1d736e.  v4:= v8.`c.f.b.k.n.e.b` @type ^`boolean` @kind boolean;
  #L1d7372.  if v4 == 0 then goto L1d737c;
  #L1d7376.  call `buildGraph`(v8) @signature `Lc/f/b/k/n/e;.buildGraph:()V` @kind virtual;
  #L1d737c.  v4:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7380.  call temp:= `getX`(v4) @signature `Lc/f/b/k/e;.getX:()I` @kind virtual;
  #L1d7386.  v4:= temp;
  #L1d7388.  v5:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d738c.  call temp:= `getY`(v5) @signature `Lc/f/b/k/e;.getY:()I` @kind virtual;
  #L1d7392.  v5:= temp;
  #L1d7394.  v6:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7398.  v6:= v6.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d739c.  v6:= v6.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1d73a0.  call `resolve`(v6, v4) @signature `Lc/f/b/k/n/f;.resolve:(I)V` @kind virtual;
  #L1d73a6.  v6:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d73aa.  v6:= v6.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d73ae.  v6:= v6.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1d73b2.  call `resolve`(v6, v5) @signature `Lc/f/b/k/n/f;.resolve:(I)V` @kind virtual;
  #L1d73b8.  call `measureWidgets`(v8) @signature `Lc/f/b/k/n/e;.measureWidgets:()V` @kind virtual;
  #L1d73be.  v6:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d73c2.  if v1 == v6 then goto L1d73ca;
  #L1d73c6.  if v3 != v6 then goto L1d748c;
  #L1d73ca.  if v9 == 0 then goto L1d7400;
  #L1d73ce.  v6:= v8.`c.f.b.k.n.e.e` @type ^`java.util.ArrayList` @kind object;
  #L1d73d2.  call temp:= `iterator`(v6) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1d73d8.  v6:= temp @kind object;
  #L1d73da.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d73e0.  v7:= temp;
  #L1d73e2.  if v7 == 0 then goto L1d7400;
  #L1d73e6.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d73ec.  v7:= temp @kind object;
  #L1d73ee.  v7:= (`c.f.b.k.n.p`) v7 @kind object;
  #L1d73f2.  call temp:= `c`(v7) @signature `Lc/f/b/k/n/p;.c:()Z` @kind virtual;
  #L1d73f8.  v7:= temp;
  #L1d73fa.  if v7 != 0 then goto L1d73da;
  #L1d73fe.  v9:= 0I;
  #L1d7400.  if v9 == 0 then goto L1d7446;
  #L1d7404.  v6:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d7408.  if v1 != v6 then goto L1d7446;
  #L1d740c.  v6:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7410.  v7:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d7414.  call `setHorizontalDimensionBehaviour`(v6, v7) @signature `Lc/f/b/k/e;.setHorizontalDimensionBehaviour:(Lc/f/b/k/e$b;)V` @kind virtual;
  #L1d741a.  v6:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d741e.  call temp:= `a`(v8, v6, v2) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/f;I)I` @kind direct;
  #L1d7424.  v7:= temp;
  #L1d7426.  call `setWidth`(v6, v7) @signature `Lc/f/b/k/e;.setWidth:(I)V` @kind virtual;
  #L1d742c.  v6:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7430.  v7:= v6.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d7434.  v7:= v7.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d7438.  call temp:= `getWidth`(v6) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d743e.  v6:= temp;
  #L1d7440.  call `resolve`(v7, v6) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d7446.  if v9 == 0 then goto L1d748c;
  #L1d744a.  v9:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d744e.  if v3 != v9 then goto L1d748c;
  #L1d7452.  v9:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7456.  v6:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d745a.  call `setVerticalDimensionBehaviour`(v9, v6) @signature `Lc/f/b/k/e;.setVerticalDimensionBehaviour:(Lc/f/b/k/e$b;)V` @kind virtual;
  #L1d7460.  v9:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7464.  call temp:= `a`(v8, v9, v0) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/f;I)I` @kind direct;
  #L1d746a.  v6:= temp;
  #L1d746c.  call `setHeight`(v9, v6) @signature `Lc/f/b/k/e;.setHeight:(I)V` @kind virtual;
  #L1d7472.  v9:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7476.  v6:= v9.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d747a.  v6:= v6.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d747e.  call temp:= `getHeight`(v9) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d7484.  v9:= temp;
  #L1d7486.  call `resolve`(v6, v9) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d748c.  v9:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7490.  v9:= v9.`c.f.b.k.e.Q` @type ^`c.f.b.k.e$b`[] @kind object;
  #L1d7494.  v6:= v9[v2] @kind object;
  #L1d7498.  v7:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d749c.  if v6 == v7 then goto L1d74b2;
  #L1d74a0.  v9:= v9[v2] @kind object;
  #L1d74a4.  v6:= `@@c.f.b.k.e$b.i` @type ^`c.f.b.k.e$b` @kind object;
  #L1d74a8.  if v9 != v6 then goto L1d74ae;
  #L1d74ac.  goto L1d74b2;
  #L1d74ae.  v9:= 0I;
  #L1d74b0.  goto L1d7548;
  #L1d74b2.  v9:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d74b6.  call temp:= `getWidth`(v9) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d74bc.  v9:= temp;
  #L1d74be.  v9:= v9 + v4 @kind int;
  #L1d74c0.  v6:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d74c4.  v6:= v6.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d74c8.  v6:= v6.`c.f.b.k.n.p.i` @type ^`c.f.b.k.n.f` @kind object;
  #L1d74cc.  call `resolve`(v6, v9) @signature `Lc/f/b/k/n/f;.resolve:(I)V` @kind virtual;
  #L1d74d2.  v6:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d74d6.  v6:= v6.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d74da.  v6:= v6.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d74de.  v9:= v9 - v4 @kind int;
  #L1d74e0.  call `resolve`(v6, v9) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d74e6.  call `measureWidgets`(v8) @signature `Lc/f/b/k/n/e;.measureWidgets:()V` @kind virtual;
  #L1d74ec.  v9:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d74f0.  v9:= v9.`c.f.b.k.e.Q` @type ^`c.f.b.k.e$b`[] @kind object;
  #L1d74f4.  v4:= v9[v0] @kind object;
  #L1d74f8.  v6:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d74fc.  if v4 == v6 then goto L1d750c;
  #L1d7500.  v9:= v9[v0] @kind object;
  #L1d7504.  v4:= `@@c.f.b.k.e$b.i` @type ^`c.f.b.k.e$b` @kind object;
  #L1d7508.  if v9 != v4 then goto L1d7540;
  #L1d750c.  v9:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7510.  call temp:= `getHeight`(v9) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d7516.  v9:= temp;
  #L1d7518.  v9:= v9 + v5 @kind int;
  #L1d751a.  v4:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d751e.  v4:= v4.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d7522.  v4:= v4.`c.f.b.k.n.p.i` @type ^`c.f.b.k.n.f` @kind object;
  #L1d7526.  call `resolve`(v4, v9) @signature `Lc/f/b/k/n/f;.resolve:(I)V` @kind virtual;
  #L1d752c.  v4:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7530.  v4:= v4.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d7534.  v4:= v4.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d7538.  v9:= v9 - v5 @kind int;
  #L1d753a.  call `resolve`(v4, v9) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d7540.  call `measureWidgets`(v8) @signature `Lc/f/b/k/n/e;.measureWidgets:()V` @kind virtual;
  #L1d7546.  v9:= 1I;
  #L1d7548.  v4:= v8.`c.f.b.k.n.e.e` @type ^`java.util.ArrayList` @kind object;
  #L1d754c.  call temp:= `iterator`(v4) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1d7552.  v4:= temp @kind object;
  #L1d7554.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d755a.  v5:= temp;
  #L1d755c.  if v5 == 0 then goto L1d758a;
  #L1d7560.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d7566.  v5:= temp @kind object;
  #L1d7568.  v5:= (`c.f.b.k.n.p`) v5 @kind object;
  #L1d756c.  v6:= v5.`c.f.b.k.n.p.b` @type ^`c.f.b.k.e` @kind object;
  #L1d7570.  v7:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7574.  if v6 != v7 then goto L1d7582;
  #L1d7578.  v6:= v5.`c.f.b.k.n.p.g` @type ^`boolean` @kind boolean;
  #L1d757c.  if v6 != 0 then goto L1d7582;
  #L1d7580.  goto L1d7554;
  #L1d7582.  call `applyToWidget`(v5) @signature `Lc/f/b/k/n/p;.applyToWidget:()V` @kind virtual;
  #L1d7588.  goto L1d7554;
  #L1d758a.  v4:= v8.`c.f.b.k.n.e.e` @type ^`java.util.ArrayList` @kind object;
  #L1d758e.  call temp:= `iterator`(v4) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1d7594.  v4:= temp @kind object;
  #L1d7596.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d759c.  v5:= temp;
  #L1d759e.  if v5 == 0 then goto L1d7602;
  #L1d75a2.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d75a8.  v5:= temp @kind object;
  #L1d75aa.  v5:= (`c.f.b.k.n.p`) v5 @kind object;
  #L1d75ae.  if v9 != 0 then goto L1d75c0;
  #L1d75b2.  v6:= v5.`c.f.b.k.n.p.b` @type ^`c.f.b.k.e` @kind object;
  #L1d75b6.  v7:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d75ba.  if v6 != v7 then goto L1d75c0;
  #L1d75be.  goto L1d7596;
  #L1d75c0.  v6:= v5.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1d75c4.  v6:= v6.`c.f.b.k.n.f.j` @type ^`boolean` @kind boolean;
  #L1d75c8.  if v6 != 0 then goto L1d75ce;
  #L1d75cc.  goto L1d7604;
  #L1d75ce.  v6:= v5.`c.f.b.k.n.p.i` @type ^`c.f.b.k.n.f` @kind object;
  #L1d75d2.  v6:= v6.`c.f.b.k.n.f.j` @type ^`boolean` @kind boolean;
  #L1d75d6.  if v6 != 0 then goto L1d75e4;
  #L1d75da.  v6:= instanceof @variable v5 @type ^`c.f.b.k.n.j` @kind boolean;
  #L1d75de.  if v6 != 0 then goto L1d75e4;
  #L1d75e2.  goto L1d7604;
  #L1d75e4.  v6:= v5.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d75e8.  v6:= v6.`c.f.b.k.n.f.j` @type ^`boolean` @kind boolean;
  #L1d75ec.  if v6 != 0 then goto L1d7596;
  #L1d75f0.  v6:= instanceof @variable v5 @type ^`c.f.b.k.n.c` @kind boolean;
  #L1d75f4.  if v6 != 0 then goto L1d7596;
  #L1d75f8.  v5:= instanceof @variable v5 @type ^`c.f.b.k.n.j` @kind boolean;
  #L1d75fc.  if v5 != 0 then goto L1d7596;
  #L1d7600.  goto L1d7604;
  #L1d7602.  v2:= 1I;
  #L1d7604.  v9:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7608.  call `setHorizontalDimensionBehaviour`(v9, v1) @signature `Lc/f/b/k/e;.setHorizontalDimensionBehaviour:(Lc/f/b/k/e$b;)V` @kind virtual;
  #L1d760e.  v9:= v8.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7612.  call `setVerticalDimensionBehaviour`(v9, v3) @signature `Lc/f/b/k/e;.setVerticalDimensionBehaviour:(Lc/f/b/k/e$b;)V` @kind virtual;
  #L1d7618.  return v2;
}
procedure `boolean` `directMeasureSetup`(`c.f.b.k.n.e` v4 @kind this, `boolean` v5 ) @signature `Lc/f/b/k/n/e;.directMeasureSetup:(Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1d762c.  v5:= v4.`c.f.b.k.n.e.b` @type ^`boolean` @kind boolean;
  #L1d7630.  v0:= 0I;
  #L1d7632.  if v5 == 0 then goto L1d76de;
  #L1d7636.  v5:= v4.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d763a.  v5:= v5.`c.f.b.k.m.p0` @type ^`java.util.ArrayList` @kind object;
  #L1d763e.  call temp:= `iterator`(v5) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1d7644.  v5:= temp @kind object;
  #L1d7646.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d764c.  v1:= temp;
  #L1d764e.  if v1 == 0 then goto L1d7696;
  #L1d7652.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d7658.  v1:= temp @kind object;
  #L1d765a.  v1:= (`c.f.b.k.e`) v1 @kind object;
  #L1d765e.  call `ensureWidgetRuns`(v1) @signature `Lc/f/b/k/e;.ensureWidgetRuns:()V` @kind virtual;
  #L1d7664.  v1.`c.f.b.k.e.a` @type ^`boolean` := v0 @kind boolean;
  #L1d7668.  v2:= v1.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d766c.  v3:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d7670.  v3.`c.f.b.k.n.f.j` @type ^`boolean` := v0 @kind boolean;
  #L1d7674.  v2.`c.f.b.k.n.p.g` @type ^`boolean` := v0 @kind boolean;
  #L1d7678.  call `d`(v2) @signature `Lc/f/b/k/n/l;.d:()V` @kind virtual;
  #L1d767e.  v1:= v1.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d7682.  v2:= v1.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d7686.  v2.`c.f.b.k.n.f.j` @type ^`boolean` := v0 @kind boolean;
  #L1d768a.  v1.`c.f.b.k.n.p.g` @type ^`boolean` := v0 @kind boolean;
  #L1d768e.  call `d`(v1) @signature `Lc/f/b/k/n/n;.d:()V` @kind virtual;
  #L1d7694.  goto L1d7646;
  #L1d7696.  v5:= v4.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d769a.  call `ensureWidgetRuns`(v5) @signature `Lc/f/b/k/e;.ensureWidgetRuns:()V` @kind virtual;
  #L1d76a0.  v5:= v4.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d76a4.  v5.`c.f.b.k.e.a` @type ^`boolean` := v0 @kind boolean;
  #L1d76a8.  v5:= v5.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d76ac.  v1:= v5.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d76b0.  v1.`c.f.b.k.n.f.j` @type ^`boolean` := v0 @kind boolean;
  #L1d76b4.  v5.`c.f.b.k.n.p.g` @type ^`boolean` := v0 @kind boolean;
  #L1d76b8.  call `d`(v5) @signature `Lc/f/b/k/n/l;.d:()V` @kind virtual;
  #L1d76be.  v5:= v4.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d76c2.  v5:= v5.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d76c6.  v1:= v5.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d76ca.  v1.`c.f.b.k.n.f.j` @type ^`boolean` := v0 @kind boolean;
  #L1d76ce.  v5.`c.f.b.k.n.p.g` @type ^`boolean` := v0 @kind boolean;
  #L1d76d2.  call `d`(v5) @signature `Lc/f/b/k/n/n;.d:()V` @kind virtual;
  #L1d76d8.  call `buildGraph`(v4) @signature `Lc/f/b/k/n/e;.buildGraph:()V` @kind virtual;
  #L1d76de.  v5:= v4.`c.f.b.k.n.e.d` @type ^`c.f.b.k.f` @kind object;
  #L1d76e2.  call temp:= `a`(v4, v5) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/f;)Z` @kind direct;
  #L1d76e8.  v5:= temp;
  #L1d76ea.  if v5 == 0 then goto L1d76f0;
  #L1d76ee.  return v0;
  #L1d76f0.  v5:= v4.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d76f4.  call `setX`(v5, v0) @signature `Lc/f/b/k/e;.setX:(I)V` @kind virtual;
  #L1d76fa.  v5:= v4.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d76fe.  call `setY`(v5, v0) @signature `Lc/f/b/k/e;.setY:(I)V` @kind virtual;
  #L1d7704.  v5:= v4.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7708.  v5:= v5.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d770c.  v5:= v5.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1d7710.  call `resolve`(v5, v0) @signature `Lc/f/b/k/n/f;.resolve:(I)V` @kind virtual;
  #L1d7716.  v5:= v4.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d771a.  v5:= v5.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d771e.  v5:= v5.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1d7722.  call `resolve`(v5, v0) @signature `Lc/f/b/k/n/f;.resolve:(I)V` @kind virtual;
  #L1d7728.  v5:= 1I;
  #L1d772a.  return v5;
}
procedure `boolean` `directMeasureWithOrientation`(`c.f.b.k.n.e` v9 @kind this, `boolean` v10 , `int` v11 ) @signature `Lc/f/b/k/n/e;.directMeasureWithOrientation:(ZI)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1d773c.  v0:= 1I;
  #L1d773e.  v10:= v10 ^& v0 @kind int;
  #L1d7740.  v1:= v9.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7744.  v2:= 0I;
  #L1d7746.  call temp:= `getDimensionBehaviour`(v1, v2) @signature `Lc/f/b/k/e;.getDimensionBehaviour:(I)Lc/f/b/k/e$b;` @kind virtual;
  #L1d774c.  v1:= temp @kind object;
  #L1d774e.  v3:= v9.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7752.  call temp:= `getDimensionBehaviour`(v3, v0) @signature `Lc/f/b/k/e;.getDimensionBehaviour:(I)Lc/f/b/k/e$b;` @kind virtual;
  #L1d7758.  v3:= temp @kind object;
  #L1d775a.  v4:= v9.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d775e.  call temp:= `getX`(v4) @signature `Lc/f/b/k/e;.getX:()I` @kind virtual;
  #L1d7764.  v4:= temp;
  #L1d7766.  v5:= v9.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d776a.  call temp:= `getY`(v5) @signature `Lc/f/b/k/e;.getY:()I` @kind virtual;
  #L1d7770.  v5:= temp;
  #L1d7772.  if v10 == 0 then goto L1d784e;
  #L1d7776.  v6:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d777a.  if v1 == v6 then goto L1d7782;
  #L1d777e.  if v3 != v6 then goto L1d784e;
  #L1d7782.  v6:= v9.`c.f.b.k.n.e.e` @type ^`java.util.ArrayList` @kind object;
  #L1d7786.  call temp:= `iterator`(v6) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1d778c.  v6:= temp @kind object;
  #L1d778e.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d7794.  v7:= temp;
  #L1d7796.  if v7 == 0 then goto L1d77bc;
  #L1d779a.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d77a0.  v7:= temp @kind object;
  #L1d77a2.  v7:= (`c.f.b.k.n.p`) v7 @kind object;
  #L1d77a6.  v8:= v7.`c.f.b.k.n.p.f` @type ^`int`;
  #L1d77aa.  if v8 != v11 then goto L1d778e;
  #L1d77ae.  call temp:= `c`(v7) @signature `Lc/f/b/k/n/p;.c:()Z` @kind virtual;
  #L1d77b4.  v7:= temp;
  #L1d77b6.  if v7 != 0 then goto L1d778e;
  #L1d77ba.  v10:= 0I;
  #L1d77bc.  if v11 != 0 then goto L1d7808;
  #L1d77c0.  if v10 == 0 then goto L1d784e;
  #L1d77c4.  v10:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d77c8.  if v1 != v10 then goto L1d784e;
  #L1d77cc.  v10:= v9.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d77d0.  v6:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d77d4.  call `setHorizontalDimensionBehaviour`(v10, v6) @signature `Lc/f/b/k/e;.setHorizontalDimensionBehaviour:(Lc/f/b/k/e$b;)V` @kind virtual;
  #L1d77da.  v10:= v9.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d77de.  call temp:= `a`(v9, v10, v2) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/f;I)I` @kind direct;
  #L1d77e4.  v6:= temp;
  #L1d77e6.  call `setWidth`(v10, v6) @signature `Lc/f/b/k/e;.setWidth:(I)V` @kind virtual;
  #L1d77ec.  v10:= v9.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d77f0.  v6:= v10.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d77f4.  v6:= v6.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d77f8.  call temp:= `getWidth`(v10) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d77fe.  v10:= temp;
  #L1d7800.  call `resolve`(v6, v10) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d7806.  goto L1d784e;
  #L1d7808.  if v10 == 0 then goto L1d784e;
  #L1d780c.  v10:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d7810.  if v3 != v10 then goto L1d784e;
  #L1d7814.  v10:= v9.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7818.  v6:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d781c.  call `setVerticalDimensionBehaviour`(v10, v6) @signature `Lc/f/b/k/e;.setVerticalDimensionBehaviour:(Lc/f/b/k/e$b;)V` @kind virtual;
  #L1d7822.  v10:= v9.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7826.  call temp:= `a`(v9, v10, v0) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/f;I)I` @kind direct;
  #L1d782c.  v6:= temp;
  #L1d782e.  call `setHeight`(v10, v6) @signature `Lc/f/b/k/e;.setHeight:(I)V` @kind virtual;
  #L1d7834.  v10:= v9.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7838.  v6:= v10.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d783c.  v6:= v6.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d7840.  call temp:= `getHeight`(v10) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d7846.  v10:= temp;
  #L1d7848.  call `resolve`(v6, v10) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d784e.  if v11 != 0 then goto L1d78a8;
  #L1d7852.  v10:= v9.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7856.  v10:= v10.`c.f.b.k.e.Q` @type ^`c.f.b.k.e$b`[] @kind object;
  #L1d785a.  v5:= v10[v2] @kind object;
  #L1d785e.  v6:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d7862.  if v5 == v6 then goto L1d7872;
  #L1d7866.  v10:= v10[v2] @kind object;
  #L1d786a.  v5:= `@@c.f.b.k.e$b.i` @type ^`c.f.b.k.e$b` @kind object;
  #L1d786e.  if v10 != v5 then goto L1d78ca;
  #L1d7872.  v10:= v9.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7876.  call temp:= `getWidth`(v10) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d787c.  v10:= temp;
  #L1d787e.  v10:= v10 + v4 @kind int;
  #L1d7880.  v5:= v9.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7884.  v5:= v5.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d7888.  v5:= v5.`c.f.b.k.n.p.i` @type ^`c.f.b.k.n.f` @kind object;
  #L1d788c.  call `resolve`(v5, v10) @signature `Lc/f/b/k/n/f;.resolve:(I)V` @kind virtual;
  #L1d7892.  v5:= v9.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7896.  v5:= v5.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d789a.  v5:= v5.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d789e.  v10:= v10 - v4 @kind int;
  #L1d78a0.  call `resolve`(v5, v10) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d78a6.  goto L1d7902;
  #L1d78a8.  v10:= v9.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d78ac.  v10:= v10.`c.f.b.k.e.Q` @type ^`c.f.b.k.e$b`[] @kind object;
  #L1d78b0.  v4:= v10[v0] @kind object;
  #L1d78b4.  v6:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d78b8.  if v4 == v6 then goto L1d78ce;
  #L1d78bc.  v10:= v10[v0] @kind object;
  #L1d78c0.  v4:= `@@c.f.b.k.e$b.i` @type ^`c.f.b.k.e$b` @kind object;
  #L1d78c4.  if v10 != v4 then goto L1d78ca;
  #L1d78c8.  goto L1d78ce;
  #L1d78ca.  v10:= 0I;
  #L1d78cc.  goto L1d7904;
  #L1d78ce.  v10:= v9.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d78d2.  call temp:= `getHeight`(v10) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d78d8.  v10:= temp;
  #L1d78da.  v10:= v10 + v5 @kind int;
  #L1d78dc.  v4:= v9.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d78e0.  v4:= v4.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d78e4.  v4:= v4.`c.f.b.k.n.p.i` @type ^`c.f.b.k.n.f` @kind object;
  #L1d78e8.  call `resolve`(v4, v10) @signature `Lc/f/b/k/n/f;.resolve:(I)V` @kind virtual;
  #L1d78ee.  v4:= v9.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d78f2.  v4:= v4.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d78f6.  v4:= v4.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d78fa.  v10:= v10 - v5 @kind int;
  #L1d78fc.  call `resolve`(v4, v10) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d7902.  v10:= 1I;
  #L1d7904.  call `measureWidgets`(v9) @signature `Lc/f/b/k/n/e;.measureWidgets:()V` @kind virtual;
  #L1d790a.  v4:= v9.`c.f.b.k.n.e.e` @type ^`java.util.ArrayList` @kind object;
  #L1d790e.  call temp:= `iterator`(v4) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1d7914.  v4:= temp @kind object;
  #L1d7916.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d791c.  v5:= temp;
  #L1d791e.  if v5 == 0 then goto L1d7956;
  #L1d7922.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d7928.  v5:= temp @kind object;
  #L1d792a.  v5:= (`c.f.b.k.n.p`) v5 @kind object;
  #L1d792e.  v6:= v5.`c.f.b.k.n.p.f` @type ^`int`;
  #L1d7932.  if v6 == v11 then goto L1d7938;
  #L1d7936.  goto L1d7916;
  #L1d7938.  v6:= v5.`c.f.b.k.n.p.b` @type ^`c.f.b.k.e` @kind object;
  #L1d793c.  v7:= v9.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7940.  if v6 != v7 then goto L1d794e;
  #L1d7944.  v6:= v5.`c.f.b.k.n.p.g` @type ^`boolean` @kind boolean;
  #L1d7948.  if v6 != 0 then goto L1d794e;
  #L1d794c.  goto L1d7916;
  #L1d794e.  call `applyToWidget`(v5) @signature `Lc/f/b/k/n/p;.applyToWidget:()V` @kind virtual;
  #L1d7954.  goto L1d7916;
  #L1d7956.  v4:= v9.`c.f.b.k.n.e.e` @type ^`java.util.ArrayList` @kind object;
  #L1d795a.  call temp:= `iterator`(v4) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1d7960.  v4:= temp @kind object;
  #L1d7962.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d7968.  v5:= temp;
  #L1d796a.  if v5 == 0 then goto L1d79c8;
  #L1d796e.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d7974.  v5:= temp @kind object;
  #L1d7976.  v5:= (`c.f.b.k.n.p`) v5 @kind object;
  #L1d797a.  v6:= v5.`c.f.b.k.n.p.f` @type ^`int`;
  #L1d797e.  if v6 == v11 then goto L1d7984;
  #L1d7982.  goto L1d7962;
  #L1d7984.  if v10 != 0 then goto L1d7996;
  #L1d7988.  v6:= v5.`c.f.b.k.n.p.b` @type ^`c.f.b.k.e` @kind object;
  #L1d798c.  v7:= v9.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d7990.  if v6 != v7 then goto L1d7996;
  #L1d7994.  goto L1d7962;
  #L1d7996.  v6:= v5.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1d799a.  v6:= v6.`c.f.b.k.n.f.j` @type ^`boolean` @kind boolean;
  #L1d799e.  if v6 != 0 then goto L1d79a4;
  #L1d79a2.  goto L1d79ca;
  #L1d79a4.  v6:= v5.`c.f.b.k.n.p.i` @type ^`c.f.b.k.n.f` @kind object;
  #L1d79a8.  v6:= v6.`c.f.b.k.n.f.j` @type ^`boolean` @kind boolean;
  #L1d79ac.  if v6 != 0 then goto L1d79b2;
  #L1d79b0.  goto L1d79ca;
  #L1d79b2.  v6:= instanceof @variable v5 @type ^`c.f.b.k.n.c` @kind boolean;
  #L1d79b6.  if v6 != 0 then goto L1d7962;
  #L1d79ba.  v5:= v5.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d79be.  v5:= v5.`c.f.b.k.n.f.j` @type ^`boolean` @kind boolean;
  #L1d79c2.  if v5 != 0 then goto L1d7962;
  #L1d79c6.  goto L1d79ca;
  #L1d79c8.  v2:= 1I;
  #L1d79ca.  v10:= v9.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d79ce.  call `setHorizontalDimensionBehaviour`(v10, v1) @signature `Lc/f/b/k/e;.setHorizontalDimensionBehaviour:(Lc/f/b/k/e$b;)V` @kind virtual;
  #L1d79d4.  v10:= v9.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d79d8.  call `setVerticalDimensionBehaviour`(v10, v3) @signature `Lc/f/b/k/e;.setVerticalDimensionBehaviour:(Lc/f/b/k/e$b;)V` @kind virtual;
  #L1d79de.  return v2;
}
procedure `void` `invalidateGraph`(`c.f.b.k.n.e` v1 @kind this) @signature `Lc/f/b/k/n/e;.invalidateGraph:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d8020.  v0:= 1I;
  #L1d8022.  v1.`c.f.b.k.n.e.b` @type ^`boolean` := v0 @kind boolean;
  #L1d8026.  return @kind void;
}
procedure `void` `invalidateMeasures`(`c.f.b.k.n.e` v1 @kind this) @signature `Lc/f/b/k/n/e;.invalidateMeasures:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d8038.  v0:= 1I;
  #L1d803a.  v1.`c.f.b.k.n.e.c` @type ^`boolean` := v0 @kind boolean;
  #L1d803e.  return @kind void;
}
procedure `void` `measureWidgets`(`c.f.b.k.n.e` v11 @kind this) @signature `Lc/f/b/k/n/e;.measureWidgets:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1d80b8.  v0:= v11.`c.f.b.k.n.e.a` @type ^`c.f.b.k.f` @kind object;
  #L1d80bc.  v0:= v0.`c.f.b.k.m.p0` @type ^`java.util.ArrayList` @kind object;
  #L1d80c0.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L1d80c6.  v0:= temp @kind object;
  #L1d80c8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d80ce.  v1:= temp;
  #L1d80d0.  if v1 == 0 then goto L1d8274;
  #L1d80d4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d80da.  v1:= temp @kind object;
  #L1d80dc.  v1:= (`c.f.b.k.e`) v1 @kind object;
  #L1d80e0.  v2:= v1.`c.f.b.k.e.a` @type ^`boolean` @kind boolean;
  #L1d80e4.  if v2 == 0 then goto L1d80ea;
  #L1d80e8.  goto L1d80c8;
  #L1d80ea.  v2:= v1.`c.f.b.k.e.Q` @type ^`c.f.b.k.e$b`[] @kind object;
  #L1d80ee.  v3:= 0I;
  #L1d80f0.  v8:= v2[v3] @kind object;
  #L1d80f4.  v9:= 1I;
  #L1d80f6.  v10:= v2[v9] @kind object;
  #L1d80fa.  v2:= v1.`c.f.b.k.e.n` @type ^`int`;
  #L1d80fe.  v4:= v1.`c.f.b.k.e.o` @type ^`int`;
  #L1d8102.  v5:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d8106.  if v8 == v5 then goto L1d811c;
  #L1d810a.  v5:= `@@c.f.b.k.e$b.h` @type ^`c.f.b.k.e$b` @kind object;
  #L1d810e.  if v8 != v5 then goto L1d8118;
  #L1d8112.  if v2 != v9 then goto L1d8118;
  #L1d8116.  goto L1d811c;
  #L1d8118.  v2:= 0I;
  #L1d811a.  goto L1d811e;
  #L1d811c.  v2:= 1I;
  #L1d811e.  v5:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d8122.  if v10 == v5 then goto L1d8132;
  #L1d8126.  v5:= `@@c.f.b.k.e$b.h` @type ^`c.f.b.k.e$b` @kind object;
  #L1d812a.  if v10 != v5 then goto L1d8134;
  #L1d812e.  if v4 != v9 then goto L1d8134;
  #L1d8132.  v3:= 1I;
  #L1d8134.  v4:= v1.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d8138.  v4:= v4.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d813c.  v5:= v4.`c.f.b.k.n.f.j` @type ^`boolean` @kind boolean;
  #L1d8140.  v6:= v1.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d8144.  v6:= v6.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d8148.  v7:= v6.`c.f.b.k.n.f.j` @type ^`boolean` @kind boolean;
  #L1d814c.  if v5 == 0 then goto L1d8178;
  #L1d8150.  if v7 == 0 then goto L1d8178;
  #L1d8154.  v7:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d8158.  v5:= v4.`c.f.b.k.n.f.g` @type ^`int`;
  #L1d815c.  v8:= v6.`c.f.b.k.n.f.g` @type ^`int`;
  #L1d8160.  v2:= v11 @kind object;
  #L1d8162.  v3:= v1 @kind object;
  #L1d8164.  v4:= v7 @kind object;
  #L1d8166.  v6:= v7 @kind object;
  #L1d8168.  v7:= v8;
  #L1d816a.  call `a`(v2, v3, v4, v5, v6, v7) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/e;Lc/f/b/k/e$b;ILc/f/b/k/e$b;I)V` @kind direct;
  #L1d8170.  v1.`c.f.b.k.e.a` @type ^`boolean` := v9 @kind boolean;
  #L1d8174.  goto L1d824e;
  #L1d8178.  if v5 == 0 then goto L1d81e4;
  #L1d817c.  if v3 == 0 then goto L1d81e4;
  #L1d8180.  v4:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d8184.  v2:= v1.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d8188.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d818c.  v5:= v2.`c.f.b.k.n.f.g` @type ^`int`;
  #L1d8190.  v6:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d8194.  v2:= v1.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d8198.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d819c.  v7:= v2.`c.f.b.k.n.f.g` @type ^`int`;
  #L1d81a0.  v2:= v11 @kind object;
  #L1d81a2.  v3:= v1 @kind object;
  #L1d81a4.  call `a`(v2, v3, v4, v5, v6, v7) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/e;Lc/f/b/k/e$b;ILc/f/b/k/e$b;I)V` @kind direct;
  #L1d81aa.  v2:= `@@c.f.b.k.e$b.h` @type ^`c.f.b.k.e$b` @kind object;
  #L1d81ae.  if v10 != v2 then goto L1d81c8;
  #L1d81b2.  v2:= v1.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d81b6.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d81ba.  call temp:= `getHeight`(v1) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d81c0.  v3:= temp;
  #L1d81c2.  v2.`c.f.b.k.n.g.m` @type ^`int` := v3;
  #L1d81c6.  goto L1d824e;
  #L1d81c8.  v2:= v1.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d81cc.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d81d0.  call temp:= `getHeight`(v1) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d81d6.  v3:= temp;
  #L1d81d8.  call `resolve`(v2, v3) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d81de.  v1.`c.f.b.k.e.a` @type ^`boolean` := v9 @kind boolean;
  #L1d81e2.  goto L1d824e;
  #L1d81e4.  if v7 == 0 then goto L1d824e;
  #L1d81e8.  if v2 == 0 then goto L1d824e;
  #L1d81ec.  v4:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d81f0.  v2:= v1.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d81f4.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d81f8.  v5:= v2.`c.f.b.k.n.f.g` @type ^`int`;
  #L1d81fc.  v6:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d8200.  v2:= v1.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d8204.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d8208.  v7:= v2.`c.f.b.k.n.f.g` @type ^`int`;
  #L1d820c.  v2:= v11 @kind object;
  #L1d820e.  v3:= v1 @kind object;
  #L1d8210.  call `a`(v2, v3, v4, v5, v6, v7) @signature `Lc/f/b/k/n/e;.a:(Lc/f/b/k/e;Lc/f/b/k/e$b;ILc/f/b/k/e$b;I)V` @kind direct;
  #L1d8216.  v2:= `@@c.f.b.k.e$b.h` @type ^`c.f.b.k.e$b` @kind object;
  #L1d821a.  if v8 != v2 then goto L1d8234;
  #L1d821e.  v2:= v1.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d8222.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d8226.  call temp:= `getWidth`(v1) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d822c.  v3:= temp;
  #L1d822e.  v2.`c.f.b.k.n.g.m` @type ^`int` := v3;
  #L1d8232.  goto L1d824e;
  #L1d8234.  v2:= v1.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d8238.  v2:= v2.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d823c.  call temp:= `getWidth`(v1) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d8242.  v3:= temp;
  #L1d8244.  call `resolve`(v2, v3) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d824a.  v1.`c.f.b.k.e.a` @type ^`boolean` := v9 @kind boolean;
  #L1d824e.  v2:= v1.`c.f.b.k.e.a` @type ^`boolean` @kind boolean;
  #L1d8252.  if v2 == 0 then goto L1d80c8;
  #L1d8256.  v2:= v1.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d825a.  v2:= v2.`c.f.b.k.n.n.l` @type ^`c.f.b.k.n.g` @kind object;
  #L1d825e.  if v2 == 0 then goto L1d80c8;
  #L1d8262.  call temp:= `getBaselineDistance`(v1) @signature `Lc/f/b/k/e;.getBaselineDistance:()I` @kind virtual;
  #L1d8268.  v1:= temp;
  #L1d826a.  call `resolve`(v2, v1) @signature `Lc/f/b/k/n/g;.resolve:(I)V` @kind virtual;
  #L1d8270.  goto L1d80c8;
  #L1d8274.  return @kind void;
}
procedure `void` `setMeasurer`(`c.f.b.k.n.e` v0 @kind this, `c.f.b.k.n.b$b` v1 @kind object) @signature `Lc/f/b/k/n/e;.setMeasurer:(Lc/f/b/k/n/b$b;)V` @AccessFlag PUBLIC {
    temp;

  #L1d8288.  v0.`c.f.b.k.n.e.f` @type ^`c.f.b.k.n.b$b` := v1 @kind object;
  #L1d828c.  return @kind void;
}
