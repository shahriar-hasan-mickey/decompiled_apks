record `c.f.b.k.n.b` @kind class @AccessFlag PUBLIC {
  `java.util.ArrayList` `c.f.b.k.n.b.a` @AccessFlag PRIVATE_FINAL;
  `c.f.b.k.n.b$a` `c.f.b.k.n.b.b` @AccessFlag PRIVATE;
  `c.f.b.k.f` `c.f.b.k.n.b.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`c.f.b.k.n.b` v1 @kind this, `c.f.b.k.f` v2 @kind object) @signature `Lc/f/b/k/n/b;.<init>:(Lc/f/b/k/f;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1d5b3c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d5b42.  v0:= new `java.util.ArrayList`;
  #L1d5b46.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1d5b4c.  v1.`c.f.b.k.n.b.a` @type ^`java.util.ArrayList` := v0 @kind object;
  #L1d5b50.  v0:= new `c.f.b.k.n.b$a`;
  #L1d5b54.  call `<init>`(v0) @signature `Lc/f/b/k/n/b$a;.<init>:()V` @kind direct;
  #L1d5b5a.  v1.`c.f.b.k.n.b.b` @type ^`c.f.b.k.n.b$a` := v0 @kind object;
  #L1d5b5e.  v1.`c.f.b.k.n.b.c` @type ^`c.f.b.k.f` := v2 @kind object;
  #L1d5b62.  return @kind void;
}
procedure `void` `a`(`c.f.b.k.n.b` v12 @kind this, `c.f.b.k.f` v13 @kind object) @signature `Lc/f/b/k/n/b;.a:(Lc/f/b/k/f;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1d5b74.  v0:= v13.`c.f.b.k.m.p0` @type ^`java.util.ArrayList` @kind object;
  #L1d5b78.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L1d5b7e.  v0:= temp;
  #L1d5b80.  v1:= 64I;
  #L1d5b84.  call temp:= `optimizeFor`(v13, v1) @signature `Lc/f/b/k/f;.optimizeFor:(I)Z` @kind virtual;
  #L1d5b8a.  v1:= temp;
  #L1d5b8c.  call temp:= `getMeasurer`(v13) @signature `Lc/f/b/k/f;.getMeasurer:()Lc/f/b/k/n/b$b;` @kind virtual;
  #L1d5b92.  v2:= temp @kind object;
  #L1d5b94.  v3:= 0I;
  #L1d5b96.  v4:= 0I;
  #L1d5b98.  if v4 >= v0 then goto L1d5cde;
  #L1d5b9c.  v5:= v13.`c.f.b.k.m.p0` @type ^`java.util.ArrayList` @kind object;
  #L1d5ba0.  call temp:= `get`(v5, v4) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L1d5ba6.  v5:= temp @kind object;
  #L1d5ba8.  v5:= (`c.f.b.k.e`) v5 @kind object;
  #L1d5bac.  v6:= instanceof @variable v5 @type ^`c.f.b.k.h` @kind boolean;
  #L1d5bb0.  if v6 == 0 then goto L1d5bb8;
  #L1d5bb4.  goto L1d5cd6;
  #L1d5bb8.  v6:= instanceof @variable v5 @type ^`c.f.b.k.a` @kind boolean;
  #L1d5bbc.  if v6 == 0 then goto L1d5bc4;
  #L1d5bc0.  goto L1d5cd6;
  #L1d5bc4.  call temp:= `isInVirtualLayout`(v5) @signature `Lc/f/b/k/e;.isInVirtualLayout:()Z` @kind virtual;
  #L1d5bca.  v6:= temp;
  #L1d5bcc.  if v6 == 0 then goto L1d5bd4;
  #L1d5bd0.  goto L1d5cd6;
  #L1d5bd4.  if v1 == 0 then goto L1d5c04;
  #L1d5bd8.  v6:= v5.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d5bdc.  if v6 == 0 then goto L1d5c04;
  #L1d5be0.  v7:= v5.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d5be4.  if v7 == 0 then goto L1d5c04;
  #L1d5be8.  v6:= v6.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d5bec.  v6:= v6.`c.f.b.k.n.f.j` @type ^`boolean` @kind boolean;
  #L1d5bf0.  if v6 == 0 then goto L1d5c04;
  #L1d5bf4.  v6:= v7.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d5bf8.  v6:= v6.`c.f.b.k.n.f.j` @type ^`boolean` @kind boolean;
  #L1d5bfc.  if v6 == 0 then goto L1d5c04;
  #L1d5c00.  goto L1d5cd6;
  #L1d5c04.  call temp:= `getDimensionBehaviour`(v5, v3) @signature `Lc/f/b/k/e;.getDimensionBehaviour:(I)Lc/f/b/k/e$b;` @kind virtual;
  #L1d5c0a.  v6:= temp @kind object;
  #L1d5c0c.  v7:= 1I;
  #L1d5c0e.  call temp:= `getDimensionBehaviour`(v5, v7) @signature `Lc/f/b/k/e;.getDimensionBehaviour:(I)Lc/f/b/k/e$b;` @kind virtual;
  #L1d5c14.  v8:= temp @kind object;
  #L1d5c16.  v9:= `@@c.f.b.k.e$b.h` @type ^`c.f.b.k.e$b` @kind object;
  #L1d5c1a.  if v6 != v9 then goto L1d5c36;
  #L1d5c1e.  v10:= v5.`c.f.b.k.e.n` @type ^`int`;
  #L1d5c22.  if v10 == v7 then goto L1d5c36;
  #L1d5c26.  if v8 != v9 then goto L1d5c36;
  #L1d5c2a.  v9:= v5.`c.f.b.k.e.o` @type ^`int`;
  #L1d5c2e.  if v9 == v7 then goto L1d5c36;
  #L1d5c32.  v9:= 1I;
  #L1d5c34.  goto L1d5c38;
  #L1d5c36.  v9:= 0I;
  #L1d5c38.  if v9 != 0 then goto L1d5cb0;
  #L1d5c3c.  call temp:= `optimizeFor`(v13, v7) @signature `Lc/f/b/k/f;.optimizeFor:(I)Z` @kind virtual;
  #L1d5c42.  v10:= temp;
  #L1d5c44.  if v10 == 0 then goto L1d5cb0;
  #L1d5c48.  v10:= instanceof @variable v5 @type ^`c.f.b.k.l` @kind boolean;
  #L1d5c4c.  if v10 != 0 then goto L1d5cb0;
  #L1d5c50.  v10:= `@@c.f.b.k.e$b.h` @type ^`c.f.b.k.e$b` @kind object;
  #L1d5c54.  if v6 != v10 then goto L1d5c72;
  #L1d5c58.  v11:= v5.`c.f.b.k.e.n` @type ^`int`;
  #L1d5c5c.  if v11 != 0 then goto L1d5c72;
  #L1d5c60.  if v8 == v10 then goto L1d5c72;
  #L1d5c64.  call temp:= `isInHorizontalChain`(v5) @signature `Lc/f/b/k/e;.isInHorizontalChain:()Z` @kind virtual;
  #L1d5c6a.  v10:= temp;
  #L1d5c6c.  if v10 != 0 then goto L1d5c72;
  #L1d5c70.  v9:= 1I;
  #L1d5c72.  v10:= `@@c.f.b.k.e$b.h` @type ^`c.f.b.k.e$b` @kind object;
  #L1d5c76.  if v8 != v10 then goto L1d5c94;
  #L1d5c7a.  v11:= v5.`c.f.b.k.e.o` @type ^`int`;
  #L1d5c7e.  if v11 != 0 then goto L1d5c94;
  #L1d5c82.  if v6 == v10 then goto L1d5c94;
  #L1d5c86.  call temp:= `isInHorizontalChain`(v5) @signature `Lc/f/b/k/e;.isInHorizontalChain:()Z` @kind virtual;
  #L1d5c8c.  v10:= temp;
  #L1d5c8e.  if v10 != 0 then goto L1d5c94;
  #L1d5c92.  v9:= 1I;
  #L1d5c94.  v10:= `@@c.f.b.k.e$b.h` @type ^`c.f.b.k.e$b` @kind object;
  #L1d5c98.  if v6 == v10 then goto L1d5ca0;
  #L1d5c9c.  if v8 != v10 then goto L1d5cb0;
  #L1d5ca0.  v6:= v5.`c.f.b.k.e.U` @type ^`float`;
  #L1d5ca4.  v8:= 0I;
  #L1d5ca6.  v6:= fcmpl(v6, v8);
  #L1d5caa.  if v6 <= 0 then goto L1d5cb0;
  #L1d5cae.  v9:= 1I;
  #L1d5cb0.  if v9 == 0 then goto L1d5cb6;
  #L1d5cb4.  goto L1d5cd6;
  #L1d5cb6.  v6:= `@@c.f.b.k.n.b$a.k` @type ^`int`;
  #L1d5cba.  call temp:= `a`(v12, v2, v5, v6) @signature `Lc/f/b/k/n/b;.a:(Lc/f/b/k/n/b$b;Lc/f/b/k/e;I)Z` @kind direct;
  #L1d5cc0.  v5:= v13.`c.f.b.k.f.u0` @type ^`c.f.b.e` @kind object;
  #L1d5cc4.  if v5 == 0 then goto L1d5cd6;
  #L1d5cc8.  v6:= v5.`c.f.b.e.a` @type ^`long` @kind wide;
  #L1d5ccc.  v8:= 1L;
  #L1d5cd0.  v6:= v6 + v8 @kind long;
  #L1d5cd2.  v5.`c.f.b.e.a` @type ^`long` := v6 @kind wide;
  #L1d5cd6.  v4:= v4 + 1;
  #L1d5cda.  goto L1d5b98;
  #L1d5cde.  call `didMeasures`(v2) @signature `Lc/f/b/k/n/b$b;.didMeasures:()V` @kind interface;
  #L1d5ce4.  return @kind void;
}
procedure `void` `a`(`c.f.b.k.n.b` v2 @kind this, `c.f.b.k.f` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lc/f/b/k/n/b;.a:(Lc/f/b/k/f;Ljava/lang/String;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1d5cf8.  call temp:= `getMinWidth`(v3) @signature `Lc/f/b/k/e;.getMinWidth:()I` @kind virtual;
  #L1d5cfe.  v4:= temp;
  #L1d5d00.  call temp:= `getMinHeight`(v3) @signature `Lc/f/b/k/e;.getMinHeight:()I` @kind virtual;
  #L1d5d06.  v0:= temp;
  #L1d5d08.  v1:= 0I;
  #L1d5d0a.  call `setMinWidth`(v3, v1) @signature `Lc/f/b/k/e;.setMinWidth:(I)V` @kind virtual;
  #L1d5d10.  call `setMinHeight`(v3, v1) @signature `Lc/f/b/k/e;.setMinHeight:(I)V` @kind virtual;
  #L1d5d16.  call `setWidth`(v3, v5) @signature `Lc/f/b/k/e;.setWidth:(I)V` @kind virtual;
  #L1d5d1c.  call `setHeight`(v3, v6) @signature `Lc/f/b/k/e;.setHeight:(I)V` @kind virtual;
  #L1d5d22.  call `setMinWidth`(v3, v4) @signature `Lc/f/b/k/e;.setMinWidth:(I)V` @kind virtual;
  #L1d5d28.  call `setMinHeight`(v3, v0) @signature `Lc/f/b/k/e;.setMinHeight:(I)V` @kind virtual;
  #L1d5d2e.  v3:= v2.`c.f.b.k.n.b.c` @type ^`c.f.b.k.f` @kind object;
  #L1d5d32.  call `layout`(v3) @signature `Lc/f/b/k/f;.layout:()V` @kind virtual;
  #L1d5d38.  return @kind void;
}
procedure `boolean` `a`(`c.f.b.k.n.b` v4 @kind this, `c.f.b.k.n.b$b` v5 @kind object, `c.f.b.k.e` v6 @kind object, `int` v7 ) @signature `Lc/f/b/k/n/b;.a:(Lc/f/b/k/n/b$b;Lc/f/b/k/e;I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1d537c.  v0:= v4.`c.f.b.k.n.b.b` @type ^`c.f.b.k.n.b$a` @kind object;
  #L1d5380.  call temp:= `getHorizontalDimensionBehaviour`(v6) @signature `Lc/f/b/k/e;.getHorizontalDimensionBehaviour:()Lc/f/b/k/e$b;` @kind virtual;
  #L1d5386.  v1:= temp @kind object;
  #L1d5388.  v0.`c.f.b.k.n.b$a.a` @type ^`c.f.b.k.e$b` := v1 @kind object;
  #L1d538c.  v0:= v4.`c.f.b.k.n.b.b` @type ^`c.f.b.k.n.b$a` @kind object;
  #L1d5390.  call temp:= `getVerticalDimensionBehaviour`(v6) @signature `Lc/f/b/k/e;.getVerticalDimensionBehaviour:()Lc/f/b/k/e$b;` @kind virtual;
  #L1d5396.  v1:= temp @kind object;
  #L1d5398.  v0.`c.f.b.k.n.b$a.b` @type ^`c.f.b.k.e$b` := v1 @kind object;
  #L1d539c.  v0:= v4.`c.f.b.k.n.b.b` @type ^`c.f.b.k.n.b$a` @kind object;
  #L1d53a0.  call temp:= `getWidth`(v6) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d53a6.  v1:= temp;
  #L1d53a8.  v0.`c.f.b.k.n.b$a.c` @type ^`int` := v1;
  #L1d53ac.  v0:= v4.`c.f.b.k.n.b.b` @type ^`c.f.b.k.n.b$a` @kind object;
  #L1d53b0.  call temp:= `getHeight`(v6) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d53b6.  v1:= temp;
  #L1d53b8.  v0.`c.f.b.k.n.b$a.d` @type ^`int` := v1;
  #L1d53bc.  v0:= v4.`c.f.b.k.n.b.b` @type ^`c.f.b.k.n.b$a` @kind object;
  #L1d53c0.  v1:= 0I;
  #L1d53c2.  v0.`c.f.b.k.n.b$a.i` @type ^`boolean` := v1 @kind boolean;
  #L1d53c6.  v0.`c.f.b.k.n.b$a.j` @type ^`int` := v7;
  #L1d53ca.  v7:= v0.`c.f.b.k.n.b$a.a` @type ^`c.f.b.k.e$b` @kind object;
  #L1d53ce.  v0:= `@@c.f.b.k.e$b.h` @type ^`c.f.b.k.e$b` @kind object;
  #L1d53d2.  v2:= 1I;
  #L1d53d4.  if v7 != v0 then goto L1d53dc;
  #L1d53d8.  v7:= 1I;
  #L1d53da.  goto L1d53de;
  #L1d53dc.  v7:= 0I;
  #L1d53de.  v0:= v4.`c.f.b.k.n.b.b` @type ^`c.f.b.k.n.b$a` @kind object;
  #L1d53e2.  v0:= v0.`c.f.b.k.n.b$a.b` @type ^`c.f.b.k.e$b` @kind object;
  #L1d53e6.  v3:= `@@c.f.b.k.e$b.h` @type ^`c.f.b.k.e$b` @kind object;
  #L1d53ea.  if v0 != v3 then goto L1d53f2;
  #L1d53ee.  v0:= 1I;
  #L1d53f0.  goto L1d53f4;
  #L1d53f2.  v0:= 0I;
  #L1d53f4.  v3:= 0I;
  #L1d53f6.  if v7 == 0 then goto L1d540a;
  #L1d53fa.  v7:= v6.`c.f.b.k.e.U` @type ^`float`;
  #L1d53fe.  v7:= fcmpl(v7, v3);
  #L1d5402.  if v7 <= 0 then goto L1d540a;
  #L1d5406.  v7:= 1I;
  #L1d5408.  goto L1d540c;
  #L1d540a.  v7:= 0I;
  #L1d540c.  if v0 == 0 then goto L1d5420;
  #L1d5410.  v0:= v6.`c.f.b.k.e.U` @type ^`float`;
  #L1d5414.  v0:= fcmpl(v0, v3);
  #L1d5418.  if v0 <= 0 then goto L1d5420;
  #L1d541c.  v0:= 1I;
  #L1d541e.  goto L1d5422;
  #L1d5420.  v0:= 0I;
  #L1d5422.  v3:= 4I;
  #L1d5424.  if v7 == 0 then goto L1d5440;
  #L1d5428.  v7:= v6.`c.f.b.k.e.p` @type ^`int`[] @kind object;
  #L1d542c.  v7:= v7[v1];
  #L1d5430.  if v7 != v3 then goto L1d5440;
  #L1d5434.  v7:= v4.`c.f.b.k.n.b.b` @type ^`c.f.b.k.n.b$a` @kind object;
  #L1d5438.  v1:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d543c.  v7.`c.f.b.k.n.b$a.a` @type ^`c.f.b.k.e$b` := v1 @kind object;
  #L1d5440.  if v0 == 0 then goto L1d545c;
  #L1d5444.  v7:= v6.`c.f.b.k.e.p` @type ^`int`[] @kind object;
  #L1d5448.  v7:= v7[v2];
  #L1d544c.  if v7 != v3 then goto L1d545c;
  #L1d5450.  v7:= v4.`c.f.b.k.n.b.b` @type ^`c.f.b.k.n.b$a` @kind object;
  #L1d5454.  v0:= `@@c.f.b.k.e$b.f` @type ^`c.f.b.k.e$b` @kind object;
  #L1d5458.  v7.`c.f.b.k.n.b$a.b` @type ^`c.f.b.k.e$b` := v0 @kind object;
  #L1d545c.  v7:= v4.`c.f.b.k.n.b.b` @type ^`c.f.b.k.n.b$a` @kind object;
  #L1d5460.  call `measure`(v5, v6, v7) @signature `Lc/f/b/k/n/b$b;.measure:(Lc/f/b/k/e;Lc/f/b/k/n/b$a;)V` @kind interface;
  #L1d5466.  v5:= v4.`c.f.b.k.n.b.b` @type ^`c.f.b.k.n.b$a` @kind object;
  #L1d546a.  v5:= v5.`c.f.b.k.n.b$a.e` @type ^`int`;
  #L1d546e.  call `setWidth`(v6, v5) @signature `Lc/f/b/k/e;.setWidth:(I)V` @kind virtual;
  #L1d5474.  v5:= v4.`c.f.b.k.n.b.b` @type ^`c.f.b.k.n.b$a` @kind object;
  #L1d5478.  v5:= v5.`c.f.b.k.n.b$a.f` @type ^`int`;
  #L1d547c.  call `setHeight`(v6, v5) @signature `Lc/f/b/k/e;.setHeight:(I)V` @kind virtual;
  #L1d5482.  v5:= v4.`c.f.b.k.n.b.b` @type ^`c.f.b.k.n.b$a` @kind object;
  #L1d5486.  v5:= v5.`c.f.b.k.n.b$a.h` @type ^`boolean` @kind boolean;
  #L1d548a.  call `setHasBaseline`(v6, v5) @signature `Lc/f/b/k/e;.setHasBaseline:(Z)V` @kind virtual;
  #L1d5490.  v5:= v4.`c.f.b.k.n.b.b` @type ^`c.f.b.k.n.b$a` @kind object;
  #L1d5494.  v5:= v5.`c.f.b.k.n.b$a.g` @type ^`int`;
  #L1d5498.  call `setBaselineDistance`(v6, v5) @signature `Lc/f/b/k/e;.setBaselineDistance:(I)V` @kind virtual;
  #L1d549e.  v5:= v4.`c.f.b.k.n.b.b` @type ^`c.f.b.k.n.b$a` @kind object;
  #L1d54a2.  v6:= `@@c.f.b.k.n.b$a.k` @type ^`int`;
  #L1d54a6.  v5.`c.f.b.k.n.b$a.j` @type ^`int` := v6;
  #L1d54aa.  v5:= v5.`c.f.b.k.n.b$a.i` @type ^`boolean` @kind boolean;
  #L1d54ae.  return v5;
}
procedure `long` `solverMeasure`(`c.f.b.k.n.b` v22 @kind this, `c.f.b.k.f` v23 @kind object, `int` v24 , `int` v25 , `int` v26 , `int` v27 , `int` v28 , `int` v29 , `int` v30 , `int` v31 , `int` v32 ) @signature `Lc/f/b/k/n/b;.solverMeasure:(Lc/f/b/k/f;IIIIIIIII)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L1d54c0.  v0:= v22 @kind object;
  #L1d54c4.  v1:= v23 @kind object;
  #L1d54c8.  v2:= v24;
  #L1d54cc.  v3:= v27;
  #L1d54d0.  v4:= v29;
  #L1d54d4.  call temp:= `getMeasurer`(v23) @signature `Lc/f/b/k/f;.getMeasurer:()Lc/f/b/k/n/b$b;` @kind virtual;
  #L1d54da.  v5:= temp @kind object;
  #L1d54dc.  v6:= v1.`c.f.b.k.m.p0` @type ^`java.util.ArrayList` @kind object;
  #L1d54e0.  call temp:= `size`(v6) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L1d54e6.  v6:= temp;
  #L1d54e8.  call temp:= `getWidth`(v23) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d54ee.  v7:= temp;
  #L1d54f0.  call temp:= `getHeight`(v23) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d54f6.  v8:= temp;
  #L1d54f8.  v9:= 128I;
  #L1d54fc.  call temp:= `enabled`(v2, v9) @signature `Lc/f/b/k/k;.enabled:(II)Z` @kind static;
  #L1d5502.  v9:= temp;
  #L1d5504.  v10:= 0I;
  #L1d5506.  if v9 != 0 then goto L1d5520;
  #L1d550a.  v12:= 64I;
  #L1d550e.  call temp:= `enabled`(v2, v12) @signature `Lc/f/b/k/k;.enabled:(II)Z` @kind static;
  #L1d5514.  v2:= temp;
  #L1d5516.  if v2 == 0 then goto L1d551c;
  #L1d551a.  goto L1d5520;
  #L1d551c.  v2:= 0I;
  #L1d551e.  goto L1d5522;
  #L1d5520.  v2:= 1I;
  #L1d5522.  if v2 == 0 then goto L1d55d8;
  #L1d5526.  v12:= 0I;
  #L1d5528.  if v12 >= v6 then goto L1d55d8;
  #L1d552c.  v13:= v1.`c.f.b.k.m.p0` @type ^`java.util.ArrayList` @kind object;
  #L1d5530.  call temp:= `get`(v13, v12) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L1d5536.  v13:= temp @kind object;
  #L1d5538.  v13:= (`c.f.b.k.e`) v13 @kind object;
  #L1d553c.  call temp:= `getHorizontalDimensionBehaviour`(v13) @signature `Lc/f/b/k/e;.getHorizontalDimensionBehaviour:()Lc/f/b/k/e$b;` @kind virtual;
  #L1d5542.  v14:= temp @kind object;
  #L1d5544.  v15:= `@@c.f.b.k.e$b.h` @type ^`c.f.b.k.e$b` @kind object;
  #L1d5548.  if v14 != v15 then goto L1d5550;
  #L1d554c.  v14:= 1I;
  #L1d554e.  goto L1d5552;
  #L1d5550.  v14:= 0I;
  #L1d5552.  call temp:= `getVerticalDimensionBehaviour`(v13) @signature `Lc/f/b/k/e;.getVerticalDimensionBehaviour:()Lc/f/b/k/e$b;` @kind virtual;
  #L1d5558.  v15:= temp @kind object;
  #L1d555a.  v11:= `@@c.f.b.k.e$b.h` @type ^`c.f.b.k.e$b` @kind object;
  #L1d555e.  if v15 != v11 then goto L1d5566;
  #L1d5562.  v11:= 1I;
  #L1d5564.  goto L1d5568;
  #L1d5566.  v11:= 0I;
  #L1d5568.  if v14 == 0 then goto L1d5586;
  #L1d556c.  if v11 == 0 then goto L1d5586;
  #L1d5570.  call temp:= `getDimensionRatio`(v13) @signature `Lc/f/b/k/e;.getDimensionRatio:()F` @kind virtual;
  #L1d5576.  v11:= temp;
  #L1d5578.  v14:= 0I;
  #L1d557a.  v11:= fcmpl(v11, v14);
  #L1d557e.  if v11 <= 0 then goto L1d5586;
  #L1d5582.  v11:= 1I;
  #L1d5584.  goto L1d5588;
  #L1d5586.  v11:= 0I;
  #L1d5588.  call temp:= `isInHorizontalChain`(v13) @signature `Lc/f/b/k/e;.isInHorizontalChain:()Z` @kind virtual;
  #L1d558e.  v14:= temp;
  #L1d5590.  if v14 == 0 then goto L1d559c;
  #L1d5594.  if v11 == 0 then goto L1d559c;
  #L1d5598.  v2:= 0I;
  #L1d559a.  goto L1d55d8;
  #L1d559c.  call temp:= `isInVerticalChain`(v13) @signature `Lc/f/b/k/e;.isInVerticalChain:()Z` @kind virtual;
  #L1d55a2.  v14:= temp;
  #L1d55a4.  if v14 == 0 then goto L1d55ae;
  #L1d55a8.  if v11 == 0 then goto L1d55ae;
  #L1d55ac.  goto L1d5598;
  #L1d55ae.  v11:= instanceof @variable v13 @type ^`c.f.b.k.l` @kind boolean;
  #L1d55b2.  if v11 == 0 then goto L1d55b8;
  #L1d55b6.  goto L1d5598;
  #L1d55b8.  call temp:= `isInHorizontalChain`(v13) @signature `Lc/f/b/k/e;.isInHorizontalChain:()Z` @kind virtual;
  #L1d55be.  v11:= temp;
  #L1d55c0.  if v11 != 0 then goto L1d5598;
  #L1d55c4.  call temp:= `isInVerticalChain`(v13) @signature `Lc/f/b/k/e;.isInVerticalChain:()Z` @kind virtual;
  #L1d55ca.  v11:= temp;
  #L1d55cc.  if v11 == 0 then goto L1d55d2;
  #L1d55d0.  goto L1d5598;
  #L1d55d2.  v12:= v12 + 1;
  #L1d55d6.  goto L1d5528;
  #L1d55d8.  v11:= 1L;
  #L1d55dc.  if v2 == 0 then goto L1d55f2;
  #L1d55e0.  v13:= `@@c.f.b.d.x` @type ^`c.f.b.e` @kind object;
  #L1d55e4.  if v13 == 0 then goto L1d55f2;
  #L1d55e8.  v14:= v13.`c.f.b.e.c` @type ^`long` @kind wide;
  #L1d55ec.  v14:= v14 + v11 @kind long;
  #L1d55ee.  v13.`c.f.b.e.c` @type ^`long` := v14 @kind wide;
  #L1d55f2.  v13:= 2.0F;
  #L1d55f6.  if v3 != v13 then goto L1d55fe;
  #L1d55fa.  if v4 == v13 then goto L1d5602;
  #L1d55fe.  if v9 == 0 then goto L1d5606;
  #L1d5602.  v14:= 1I;
  #L1d5604.  goto L1d5608;
  #L1d5606.  v14:= 0I;
  #L1d5608.  v2:= v2 ^& v14 @kind int;
  #L1d560a.  v14:= 2I;
  #L1d560c.  if v2 == 0 then goto L1d56d8;
  #L1d5610.  call temp:= `getMaxWidth`(v23) @signature `Lc/f/b/k/e;.getMaxWidth:()I` @kind virtual;
  #L1d5616.  v15:= temp;
  #L1d5618.  v11:= v28;
  #L1d561c.  call temp:= `min`(v15, v11) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1d5622.  v11:= temp;
  #L1d5624.  call temp:= `getMaxHeight`(v23) @signature `Lc/f/b/k/e;.getMaxHeight:()I` @kind virtual;
  #L1d562a.  v12:= temp;
  #L1d562c.  v15:= v30;
  #L1d5630.  call temp:= `min`(v12, v15) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1d5636.  v12:= temp;
  #L1d5638.  if v3 != v13 then goto L1d5654;
  #L1d563c.  call temp:= `getWidth`(v23) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d5642.  v15:= temp;
  #L1d5644.  if v15 == v11 then goto L1d5654;
  #L1d5648.  call `setWidth`(v1, v11) @signature `Lc/f/b/k/e;.setWidth:(I)V` @kind virtual;
  #L1d564e.  call `invalidateGraph`(v23) @signature `Lc/f/b/k/f;.invalidateGraph:()V` @kind virtual;
  #L1d5654.  if v4 != v13 then goto L1d5670;
  #L1d5658.  call temp:= `getHeight`(v23) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d565e.  v11:= temp;
  #L1d5660.  if v11 == v12 then goto L1d5670;
  #L1d5664.  call `setHeight`(v1, v12) @signature `Lc/f/b/k/e;.setHeight:(I)V` @kind virtual;
  #L1d566a.  call `invalidateGraph`(v23) @signature `Lc/f/b/k/f;.invalidateGraph:()V` @kind virtual;
  #L1d5670.  if v3 != v13 then goto L1d5684;
  #L1d5674.  if v4 != v13 then goto L1d5684;
  #L1d5678.  call temp:= `directMeasure`(v1, v9) @signature `Lc/f/b/k/f;.directMeasure:(Z)Z` @kind virtual;
  #L1d567e.  v9:= temp;
  #L1d5680.  v12:= 2I;
  #L1d5682.  goto L1d56b8;
  #L1d5684.  call temp:= `directMeasureSetup`(v1, v9) @signature `Lc/f/b/k/f;.directMeasureSetup:(Z)Z` @kind virtual;
  #L1d568a.  v11:= temp;
  #L1d568c.  if v3 != v13 then goto L1d569e;
  #L1d5690.  call temp:= `directMeasureWithOrientation`(v1, v9, v10) @signature `Lc/f/b/k/f;.directMeasureWithOrientation:(ZI)Z` @kind virtual;
  #L1d5696.  v12:= temp;
  #L1d5698.  v11:= v11 ^& v12 @kind int;
  #L1d569a.  v12:= 1I;
  #L1d569c.  goto L1d56a0;
  #L1d569e.  v12:= 0I;
  #L1d56a0.  if v4 != v13 then goto L1d56b6;
  #L1d56a4.  v15:= 1I;
  #L1d56a6.  call temp:= `directMeasureWithOrientation`(v1, v9, v15) @signature `Lc/f/b/k/f;.directMeasureWithOrientation:(ZI)Z` @kind virtual;
  #L1d56ac.  v9:= temp;
  #L1d56ae.  v9:= v9 ^& v11 @kind int;
  #L1d56b0.  v12:= v12 + 1;
  #L1d56b4.  goto L1d56b8;
  #L1d56b6.  v9:= v11;
  #L1d56b8.  if v9 == 0 then goto L1d56dc;
  #L1d56bc.  if v3 != v13 then goto L1d56c4;
  #L1d56c0.  v3:= 1I;
  #L1d56c2.  goto L1d56c6;
  #L1d56c4.  v3:= 0I;
  #L1d56c6.  if v4 != v13 then goto L1d56ce;
  #L1d56ca.  v4:= 1I;
  #L1d56cc.  goto L1d56d0;
  #L1d56ce.  v4:= 0I;
  #L1d56d0.  call `updateFromRuns`(v1, v3, v4) @signature `Lc/f/b/k/f;.updateFromRuns:(ZZ)V` @kind virtual;
  #L1d56d6.  goto L1d56dc;
  #L1d56d8.  v9:= 0I;
  #L1d56da.  v12:= 0I;
  #L1d56dc.  if v9 == 0 then goto L1d56e4;
  #L1d56e0.  if v12 == v14 then goto L1d5b24;
  #L1d56e4.  call temp:= `getOptimizationLevel`(v23) @signature `Lc/f/b/k/f;.getOptimizationLevel:()I` @kind virtual;
  #L1d56ea.  v3:= temp;
  #L1d56ec.  if v6 <= 0 then goto L1d56f6;
  #L1d56f0.  call `a`(v22, v23) @signature `Lc/f/b/k/n/b;.a:(Lc/f/b/k/f;)V` @kind direct;
  #L1d56f6.  call `updateHierarchy`(v22, v23) @signature `Lc/f/b/k/n/b;.updateHierarchy:(Lc/f/b/k/f;)V` @kind virtual;
  #L1d56fc.  v4:= v0.`c.f.b.k.n.b.a` @type ^`java.util.ArrayList` @kind object;
  #L1d5700.  call temp:= `size`(v4) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L1d5706.  v4:= temp;
  #L1d5708.  if v6 <= 0 then goto L1d5716;
  #L1d570c.  v6:= "First pass" @kind object;
  #L1d5710.  call `a`(v0, v1, v6, v7, v8) @signature `Lc/f/b/k/n/b;.a:(Lc/f/b/k/f;Ljava/lang/String;II)V` @kind direct;
  #L1d5716.  if v4 <= 0 then goto L1d5b1c;
  #L1d571a.  call temp:= `getHorizontalDimensionBehaviour`(v23) @signature `Lc/f/b/k/e;.getHorizontalDimensionBehaviour:()Lc/f/b/k/e$b;` @kind virtual;
  #L1d5720.  v6:= temp @kind object;
  #L1d5722.  v9:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d5726.  if v6 != v9 then goto L1d572e;
  #L1d572a.  v6:= 1I;
  #L1d572c.  goto L1d5730;
  #L1d572e.  v6:= 0I;
  #L1d5730.  call temp:= `getVerticalDimensionBehaviour`(v23) @signature `Lc/f/b/k/e;.getVerticalDimensionBehaviour:()Lc/f/b/k/e$b;` @kind virtual;
  #L1d5736.  v9:= temp @kind object;
  #L1d5738.  v11:= `@@c.f.b.k.e$b.g` @type ^`c.f.b.k.e$b` @kind object;
  #L1d573c.  if v9 != v11 then goto L1d5744;
  #L1d5740.  v9:= 1I;
  #L1d5742.  goto L1d5746;
  #L1d5744.  v9:= 0I;
  #L1d5746.  call temp:= `getWidth`(v23) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d574c.  v11:= temp;
  #L1d574e.  v12:= v0.`c.f.b.k.n.b.c` @type ^`c.f.b.k.f` @kind object;
  #L1d5752.  call temp:= `getMinWidth`(v12) @signature `Lc/f/b/k/e;.getMinWidth:()I` @kind virtual;
  #L1d5758.  v12:= temp;
  #L1d575a.  call temp:= `max`(v11, v12) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L1d5760.  v11:= temp;
  #L1d5762.  call temp:= `getHeight`(v23) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d5768.  v12:= temp;
  #L1d576a.  v13:= v0.`c.f.b.k.n.b.c` @type ^`c.f.b.k.f` @kind object;
  #L1d576e.  call temp:= `getMinHeight`(v13) @signature `Lc/f/b/k/e;.getMinHeight:()I` @kind virtual;
  #L1d5774.  v13:= temp;
  #L1d5776.  call temp:= `max`(v12, v13) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L1d577c.  v12:= temp;
  #L1d577e.  v13:= v11;
  #L1d5780.  v15:= v12;
  #L1d5782.  v11:= 0I;
  #L1d5784.  v12:= 0I;
  #L1d5786.  if v11 >= v4 then goto L1d58be;
  #L1d578a.  v10:= v0.`c.f.b.k.n.b.a` @type ^`java.util.ArrayList` @kind object;
  #L1d578e.  call temp:= `get`(v10, v11) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L1d5794.  v10:= temp @kind object;
  #L1d5796.  v10:= (`c.f.b.k.e`) v10 @kind object;
  #L1d579a.  v14:= instanceof @variable v10 @type ^`c.f.b.k.l` @kind boolean;
  #L1d579e.  if v14 != 0 then goto L1d57b2;
  #L1d57a2.  v27:= v3;
  #L1d57a6.  v16:= v7;
  #L1d57aa.  v17:= v8;
  #L1d57ae.  goto L1d58a6;
  #L1d57b2.  call temp:= `getWidth`(v10) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d57b8.  v14:= temp;
  #L1d57ba.  v27:= v3;
  #L1d57be.  call temp:= `getHeight`(v10) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d57c4.  v3:= temp;
  #L1d57c6.  v16:= v7;
  #L1d57ca.  v7:= `@@c.f.b.k.n.b$a.l` @type ^`int`;
  #L1d57ce.  call temp:= `a`(v0, v5, v10, v7) @signature `Lc/f/b/k/n/b;.a:(Lc/f/b/k/n/b$b;Lc/f/b/k/e;I)Z` @kind direct;
  #L1d57d4.  v7:= temp;
  #L1d57d6.  v7:= v7 ^| v12 @kind int;
  #L1d57d8.  v12:= v1.`c.f.b.k.f.u0` @type ^`c.f.b.e` @kind object;
  #L1d57dc.  v28:= v7;
  #L1d57e0.  v17:= v8;
  #L1d57e4.  if v12 == 0 then goto L1d57f8;
  #L1d57e8.  v7:= v12.`c.f.b.e.b` @type ^`long` @kind wide;
  #L1d57ec.  v18:= 1L;
  #L1d57f0.  v7:= v7 + v18 @kind long;
  #L1d57f4.  v12.`c.f.b.e.b` @type ^`long` := v7 @kind wide;
  #L1d57f8.  call temp:= `getWidth`(v10) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d57fe.  v7:= temp;
  #L1d5800.  call temp:= `getHeight`(v10) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d5806.  v8:= temp;
  #L1d5808.  if v7 == v14 then goto L1d584e;
  #L1d580c.  call `setWidth`(v10, v7) @signature `Lc/f/b/k/e;.setWidth:(I)V` @kind virtual;
  #L1d5812.  if v6 == 0 then goto L1d584a;
  #L1d5816.  call temp:= `getRight`(v10) @signature `Lc/f/b/k/e;.getRight:()I` @kind virtual;
  #L1d581c.  v7:= temp;
  #L1d581e.  if v7 <= v13 then goto L1d584a;
  #L1d5822.  call temp:= `getRight`(v10) @signature `Lc/f/b/k/e;.getRight:()I` @kind virtual;
  #L1d5828.  v7:= temp;
  #L1d582a.  v12:= `@@c.f.b.k.d$b.i` @type ^`c.f.b.k.d$b` @kind object;
  #L1d582e.  call temp:= `getAnchor`(v10, v12) @signature `Lc/f/b/k/e;.getAnchor:(Lc/f/b/k/d$b;)Lc/f/b/k/d;` @kind virtual;
  #L1d5834.  v12:= temp @kind object;
  #L1d5836.  call temp:= `getMargin`(v12) @signature `Lc/f/b/k/d;.getMargin:()I` @kind virtual;
  #L1d583c.  v12:= temp;
  #L1d583e.  v7:= v7 + v12 @kind int;
  #L1d5840.  call temp:= `max`(v13, v7) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L1d5846.  v7:= temp;
  #L1d5848.  v13:= v7;
  #L1d584a.  v7:= 1I;
  #L1d584c.  goto L1d5852;
  #L1d584e.  v7:= v28;
  #L1d5852.  if v8 == v3 then goto L1d5896;
  #L1d5856.  call `setHeight`(v10, v8) @signature `Lc/f/b/k/e;.setHeight:(I)V` @kind virtual;
  #L1d585c.  if v9 == 0 then goto L1d5894;
  #L1d5860.  call temp:= `getBottom`(v10) @signature `Lc/f/b/k/e;.getBottom:()I` @kind virtual;
  #L1d5866.  v3:= temp;
  #L1d5868.  if v3 <= v15 then goto L1d5894;
  #L1d586c.  call temp:= `getBottom`(v10) @signature `Lc/f/b/k/e;.getBottom:()I` @kind virtual;
  #L1d5872.  v3:= temp;
  #L1d5874.  v7:= `@@c.f.b.k.d$b.j` @type ^`c.f.b.k.d$b` @kind object;
  #L1d5878.  call temp:= `getAnchor`(v10, v7) @signature `Lc/f/b/k/e;.getAnchor:(Lc/f/b/k/d$b;)Lc/f/b/k/d;` @kind virtual;
  #L1d587e.  v7:= temp @kind object;
  #L1d5880.  call temp:= `getMargin`(v7) @signature `Lc/f/b/k/d;.getMargin:()I` @kind virtual;
  #L1d5886.  v7:= temp;
  #L1d5888.  v3:= v3 + v7 @kind int;
  #L1d588a.  call temp:= `max`(v15, v3) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L1d5890.  v3:= temp;
  #L1d5892.  v15:= v3;
  #L1d5894.  v7:= 1I;
  #L1d5896.  v10:= (`c.f.b.k.l`) v10 @kind object;
  #L1d589a.  call temp:= `needSolverPass`(v10) @signature `Lc/f/b/k/l;.needSolverPass:()Z` @kind virtual;
  #L1d58a0.  v3:= temp;
  #L1d58a2.  v3:= v3 ^| v7 @kind int;
  #L1d58a4.  v12:= v3;
  #L1d58a6.  v11:= v11 + 1;
  #L1d58aa.  v3:= v27;
  #L1d58ae.  v7:= v16;
  #L1d58b2.  v8:= v17;
  #L1d58b6.  v10:= 0I;
  #L1d58b8.  v14:= 2I;
  #L1d58ba.  goto L1d5786;
  #L1d58be.  v27:= v3;
  #L1d58c2.  v16:= v7;
  #L1d58c6.  v17:= v8;
  #L1d58ca.  v3:= 0I;
  #L1d58cc.  v7:= 2I;
  #L1d58ce.  if v3 >= v7 then goto L1d5ac4;
  #L1d58d2.  v11:= v12;
  #L1d58d4.  v8:= 0I;
  #L1d58d6.  if v8 >= v4 then goto L1d5a7c;
  #L1d58da.  v10:= v0.`c.f.b.k.n.b.a` @type ^`java.util.ArrayList` @kind object;
  #L1d58de.  call temp:= `get`(v10, v8) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L1d58e4.  v10:= temp @kind object;
  #L1d58e6.  v10:= (`c.f.b.k.e`) v10 @kind object;
  #L1d58ea.  v12:= instanceof @variable v10 @type ^`c.f.b.k.i` @kind boolean;
  #L1d58ee.  if v12 == 0 then goto L1d58fa;
  #L1d58f2.  v12:= instanceof @variable v10 @type ^`c.f.b.k.l` @kind boolean;
  #L1d58f6.  if v12 == 0 then goto L1d5944;
  #L1d58fa.  v12:= instanceof @variable v10 @type ^`c.f.b.k.h` @kind boolean;
  #L1d58fe.  if v12 == 0 then goto L1d5904;
  #L1d5902.  goto L1d5944;
  #L1d5904.  call temp:= `getVisibility`(v10) @signature `Lc/f/b/k/e;.getVisibility:()I` @kind virtual;
  #L1d590a.  v12:= temp;
  #L1d590c.  v14:= 8I;
  #L1d5910.  if v12 != v14 then goto L1d5916;
  #L1d5914.  goto L1d5944;
  #L1d5916.  if v2 == 0 then goto L1d593c;
  #L1d591a.  v12:= v10.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1d591e.  v12:= v12.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d5922.  v12:= v12.`c.f.b.k.n.f.j` @type ^`boolean` @kind boolean;
  #L1d5926.  if v12 == 0 then goto L1d593c;
  #L1d592a.  v12:= v10.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1d592e.  v12:= v12.`c.f.b.k.n.p.e` @type ^`c.f.b.k.n.g` @kind object;
  #L1d5932.  v12:= v12.`c.f.b.k.n.f.j` @type ^`boolean` @kind boolean;
  #L1d5936.  if v12 == 0 then goto L1d593c;
  #L1d593a.  goto L1d5944;
  #L1d593c.  v12:= instanceof @variable v10 @type ^`c.f.b.k.l` @kind boolean;
  #L1d5940.  if v12 == 0 then goto L1d5958;
  #L1d5944.  v19:= v2;
  #L1d5948.  v28:= v4;
  #L1d594c.  v18:= v5 @kind object;
  #L1d5950.  v20:= 1L;
  #L1d5954.  goto L1d5a66;
  #L1d5958.  call temp:= `getWidth`(v10) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d595e.  v12:= temp;
  #L1d5960.  call temp:= `getHeight`(v10) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d5966.  v14:= temp;
  #L1d5968.  call temp:= `getBaselineDistance`(v10) @signature `Lc/f/b/k/e;.getBaselineDistance:()I` @kind virtual;
  #L1d596e.  v7:= temp;
  #L1d5970.  v18:= `@@c.f.b.k.n.b$a.l` @type ^`int`;
  #L1d5974.  v19:= v2;
  #L1d5978.  v2:= 1I;
  #L1d597a.  if v3 != v2 then goto L1d5982;
  #L1d597e.  v18:= `@@c.f.b.k.n.b$a.m` @type ^`int`;
  #L1d5982.  v2:= v18;
  #L1d5986.  call temp:= `a`(v0, v5, v10, v2) @signature `Lc/f/b/k/n/b;.a:(Lc/f/b/k/n/b$b;Lc/f/b/k/e;I)Z` @kind direct;
  #L1d598c.  v2:= temp;
  #L1d598e.  v11:= v11 ^| v2 @kind int;
  #L1d5990.  v2:= v1.`c.f.b.k.f.u0` @type ^`c.f.b.e` @kind object;
  #L1d5994.  v28:= v4;
  #L1d5998.  v18:= v5 @kind object;
  #L1d599c.  if v2 == 0 then goto L1d59b2;
  #L1d59a0.  v4:= v2.`c.f.b.e.b` @type ^`long` @kind wide;
  #L1d59a4.  v20:= 1L;
  #L1d59a8.  v4:= v4 + v20 @kind long;
  #L1d59ac.  v2.`c.f.b.e.b` @type ^`long` := v4 @kind wide;
  #L1d59b0.  goto L1d59b6;
  #L1d59b2.  v20:= 1L;
  #L1d59b6.  call temp:= `getWidth`(v10) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d59bc.  v2:= temp;
  #L1d59be.  call temp:= `getHeight`(v10) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d59c4.  v4:= temp;
  #L1d59c6.  if v2 == v12 then goto L1d5a08;
  #L1d59ca.  call `setWidth`(v10, v2) @signature `Lc/f/b/k/e;.setWidth:(I)V` @kind virtual;
  #L1d59d0.  if v6 == 0 then goto L1d5a06;
  #L1d59d4.  call temp:= `getRight`(v10) @signature `Lc/f/b/k/e;.getRight:()I` @kind virtual;
  #L1d59da.  v2:= temp;
  #L1d59dc.  if v2 <= v13 then goto L1d5a06;
  #L1d59e0.  call temp:= `getRight`(v10) @signature `Lc/f/b/k/e;.getRight:()I` @kind virtual;
  #L1d59e6.  v2:= temp;
  #L1d59e8.  v5:= `@@c.f.b.k.d$b.i` @type ^`c.f.b.k.d$b` @kind object;
  #L1d59ec.  call temp:= `getAnchor`(v10, v5) @signature `Lc/f/b/k/e;.getAnchor:(Lc/f/b/k/d$b;)Lc/f/b/k/d;` @kind virtual;
  #L1d59f2.  v5:= temp @kind object;
  #L1d59f4.  call temp:= `getMargin`(v5) @signature `Lc/f/b/k/d;.getMargin:()I` @kind virtual;
  #L1d59fa.  v5:= temp;
  #L1d59fc.  v2:= v2 + v5 @kind int;
  #L1d59fe.  call temp:= `max`(v13, v2) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L1d5a04.  v13:= temp;
  #L1d5a06.  v11:= 1I;
  #L1d5a08.  if v4 == v14 then goto L1d5a4c;
  #L1d5a0c.  call `setHeight`(v10, v4) @signature `Lc/f/b/k/e;.setHeight:(I)V` @kind virtual;
  #L1d5a12.  if v9 == 0 then goto L1d5a4a;
  #L1d5a16.  call temp:= `getBottom`(v10) @signature `Lc/f/b/k/e;.getBottom:()I` @kind virtual;
  #L1d5a1c.  v2:= temp;
  #L1d5a1e.  if v2 <= v15 then goto L1d5a4a;
  #L1d5a22.  call temp:= `getBottom`(v10) @signature `Lc/f/b/k/e;.getBottom:()I` @kind virtual;
  #L1d5a28.  v2:= temp;
  #L1d5a2a.  v4:= `@@c.f.b.k.d$b.j` @type ^`c.f.b.k.d$b` @kind object;
  #L1d5a2e.  call temp:= `getAnchor`(v10, v4) @signature `Lc/f/b/k/e;.getAnchor:(Lc/f/b/k/d$b;)Lc/f/b/k/d;` @kind virtual;
  #L1d5a34.  v4:= temp @kind object;
  #L1d5a36.  call temp:= `getMargin`(v4) @signature `Lc/f/b/k/d;.getMargin:()I` @kind virtual;
  #L1d5a3c.  v4:= temp;
  #L1d5a3e.  v2:= v2 + v4 @kind int;
  #L1d5a40.  call temp:= `max`(v15, v2) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L1d5a46.  v2:= temp;
  #L1d5a48.  v15:= v2;
  #L1d5a4a.  v11:= 1I;
  #L1d5a4c.  call temp:= `hasBaseline`(v10) @signature `Lc/f/b/k/e;.hasBaseline:()Z` @kind virtual;
  #L1d5a52.  v2:= temp;
  #L1d5a54.  if v2 == 0 then goto L1d5a66;
  #L1d5a58.  call temp:= `getBaselineDistance`(v10) @signature `Lc/f/b/k/e;.getBaselineDistance:()I` @kind virtual;
  #L1d5a5e.  v2:= temp;
  #L1d5a60.  if v7 == v2 then goto L1d5a66;
  #L1d5a64.  v11:= 1I;
  #L1d5a66.  v8:= v8 + 1;
  #L1d5a6a.  v4:= v28;
  #L1d5a6e.  v5:= v18 @kind object;
  #L1d5a72.  v2:= v19;
  #L1d5a76.  v7:= 2I;
  #L1d5a78.  goto L1d58d6;
  #L1d5a7c.  v19:= v2;
  #L1d5a80.  v28:= v4;
  #L1d5a84.  v18:= v5 @kind object;
  #L1d5a88.  v20:= 1L;
  #L1d5a8c.  if v11 == 0 then goto L1d5aba;
  #L1d5a90.  v2:= "intermediate pass" @kind object;
  #L1d5a94.  v4:= v16;
  #L1d5a98.  v5:= v17;
  #L1d5a9c.  call `a`(v0, v1, v2, v4, v5) @signature `Lc/f/b/k/n/b;.a:(Lc/f/b/k/f;Ljava/lang/String;II)V` @kind direct;
  #L1d5aa2.  v3:= v3 + 1;
  #L1d5aa6.  v5:= v18 @kind object;
  #L1d5aaa.  v2:= v19;
  #L1d5aae.  v7:= 2I;
  #L1d5ab0.  v12:= 0I;
  #L1d5ab2.  v4:= v28;
  #L1d5ab6.  goto L1d58ce;
  #L1d5aba.  v4:= v16;
  #L1d5abe.  v5:= v17;
  #L1d5ac2.  goto L1d5ace;
  #L1d5ac4.  v4:= v16;
  #L1d5ac8.  v5:= v17;
  #L1d5acc.  v11:= v12;
  #L1d5ace.  if v11 == 0 then goto L1d5b16;
  #L1d5ad2.  v2:= "2nd pass" @kind object;
  #L1d5ad6.  call `a`(v0, v1, v2, v4, v5) @signature `Lc/f/b/k/n/b;.a:(Lc/f/b/k/f;Ljava/lang/String;II)V` @kind direct;
  #L1d5adc.  call temp:= `getWidth`(v23) @signature `Lc/f/b/k/e;.getWidth:()I` @kind virtual;
  #L1d5ae2.  v2:= temp;
  #L1d5ae4.  if v2 >= v13 then goto L1d5af2;
  #L1d5ae8.  call `setWidth`(v1, v13) @signature `Lc/f/b/k/e;.setWidth:(I)V` @kind virtual;
  #L1d5aee.  v11:= 1I;
  #L1d5af0.  goto L1d5af4;
  #L1d5af2.  v11:= 0I;
  #L1d5af4.  call temp:= `getHeight`(v23) @signature `Lc/f/b/k/e;.getHeight:()I` @kind virtual;
  #L1d5afa.  v2:= temp;
  #L1d5afc.  if v2 >= v15 then goto L1d5b08;
  #L1d5b00.  call `setHeight`(v1, v15) @signature `Lc/f/b/k/e;.setHeight:(I)V` @kind virtual;
  #L1d5b06.  v11:= 1I;
  #L1d5b08.  if v11 == 0 then goto L1d5b16;
  #L1d5b0c.  v2:= "3rd pass" @kind object;
  #L1d5b10.  call `a`(v0, v1, v2, v4, v5) @signature `Lc/f/b/k/n/b;.a:(Lc/f/b/k/f;Ljava/lang/String;II)V` @kind direct;
  #L1d5b16.  v2:= v27;
  #L1d5b1a.  goto L1d5b1e;
  #L1d5b1c.  v2:= v3;
  #L1d5b1e.  call `setOptimizationLevel`(v1, v2) @signature `Lc/f/b/k/f;.setOptimizationLevel:(I)V` @kind virtual;
  #L1d5b24.  v1:= 0L;
  #L1d5b28.  return v1 @kind wide;
}
procedure `void` `updateHierarchy`(`c.f.b.k.n.b` v5 @kind this, `c.f.b.k.f` v6 @kind object) @signature `Lc/f/b/k/n/b;.updateHierarchy:(Lc/f/b/k/f;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1d5d4c.  v0:= v5.`c.f.b.k.n.b.a` @type ^`java.util.ArrayList` @kind object;
  #L1d5d50.  call `clear`(v0) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L1d5d56.  v0:= v6.`c.f.b.k.m.p0` @type ^`java.util.ArrayList` @kind object;
  #L1d5d5a.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L1d5d60.  v0:= temp;
  #L1d5d62.  v1:= 0I;
  #L1d5d64.  if v1 >= v0 then goto L1d5da8;
  #L1d5d68.  v2:= v6.`c.f.b.k.m.p0` @type ^`java.util.ArrayList` @kind object;
  #L1d5d6c.  call temp:= `get`(v2, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L1d5d72.  v2:= temp @kind object;
  #L1d5d74.  v2:= (`c.f.b.k.e`) v2 @kind object;
  #L1d5d78.  call temp:= `getHorizontalDimensionBehaviour`(v2) @signature `Lc/f/b/k/e;.getHorizontalDimensionBehaviour:()Lc/f/b/k/e$b;` @kind virtual;
  #L1d5d7e.  v3:= temp @kind object;
  #L1d5d80.  v4:= `@@c.f.b.k.e$b.h` @type ^`c.f.b.k.e$b` @kind object;
  #L1d5d84.  if v3 == v4 then goto L1d5d98;
  #L1d5d88.  call temp:= `getVerticalDimensionBehaviour`(v2) @signature `Lc/f/b/k/e;.getVerticalDimensionBehaviour:()Lc/f/b/k/e$b;` @kind virtual;
  #L1d5d8e.  v3:= temp @kind object;
  #L1d5d90.  v4:= `@@c.f.b.k.e$b.h` @type ^`c.f.b.k.e$b` @kind object;
  #L1d5d94.  if v3 != v4 then goto L1d5da2;
  #L1d5d98.  v3:= v5.`c.f.b.k.n.b.a` @type ^`java.util.ArrayList` @kind object;
  #L1d5d9c.  call temp:= `add`(v3, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1d5da2.  v1:= v1 + 1;
  #L1d5da6.  goto L1d5d64;
  #L1d5da8.  call `invalidateGraph`(v6) @signature `Lc/f/b/k/f;.invalidateGraph:()V` @kind virtual;
  #L1d5dae.  return @kind void;
}
