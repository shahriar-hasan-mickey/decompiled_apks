record `c.f.b.k.n.o$a` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`c.f.b.k.n.o$a` v0 @kind this, `c.f.b.k.n.o` v1 @kind object, `c.f.b.k.e` v2 @kind object, `c.f.b.d` v3 @kind object, `int` v4 ) @signature `Lc/f/b/k/n/o$a;.<init>:(Lc/f/b/k/n/o;Lc/f/b/k/e;Lc/f/b/d;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1dcfb8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1dcfbe.  v1:= new `java.lang.ref.WeakReference`;
  #L1dcfc2.  call `<init>`(v1, v2) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1dcfc8.  v1:= v2.`c.f.b.k.e.F` @type ^`c.f.b.k.d` @kind object;
  #L1dcfcc.  call temp:= `getObjectVariableValue`(v3, v1) @signature `Lc/f/b/d;.getObjectVariableValue:(Ljava/lang/Object;)I` @kind virtual;
  #L1dcfd2.  v1:= v2.`c.f.b.k.e.G` @type ^`c.f.b.k.d` @kind object;
  #L1dcfd6.  call temp:= `getObjectVariableValue`(v3, v1) @signature `Lc/f/b/d;.getObjectVariableValue:(Ljava/lang/Object;)I` @kind virtual;
  #L1dcfdc.  v1:= v2.`c.f.b.k.e.H` @type ^`c.f.b.k.d` @kind object;
  #L1dcfe0.  call temp:= `getObjectVariableValue`(v3, v1) @signature `Lc/f/b/d;.getObjectVariableValue:(Ljava/lang/Object;)I` @kind virtual;
  #L1dcfe6.  v1:= v2.`c.f.b.k.e.I` @type ^`c.f.b.k.d` @kind object;
  #L1dcfea.  call temp:= `getObjectVariableValue`(v3, v1) @signature `Lc/f/b/d;.getObjectVariableValue:(Ljava/lang/Object;)I` @kind virtual;
  #L1dcff0.  v1:= v2.`c.f.b.k.e.J` @type ^`c.f.b.k.d` @kind object;
  #L1dcff4.  call temp:= `getObjectVariableValue`(v3, v1) @signature `Lc/f/b/d;.getObjectVariableValue:(Ljava/lang/Object;)I` @kind virtual;
  #L1dcffa.  return @kind void;
}
