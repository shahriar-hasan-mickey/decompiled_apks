record `c.f.b.k.n.l$a` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@c.f.b.k.n.l$a.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lc/f/b/k/n/l$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1da9a4.  call temp:= `values`() @signature `Lc/f/b/k/n/p$b;.values:()[Lc/f/b/k/n/p$b;` @kind static;
  #L1da9aa.  v0:= temp @kind object;
  #L1da9ac.  v0:= length @variable v0;
  #L1da9ae.  v0:= new `int`[v0];
  #L1da9b2.  `@@c.f.b.k.n.l$a.a` @type ^`int`[] := v0 @kind object;
  #L1da9b6.  v0:= `@@c.f.b.k.n.l$a.a` @type ^`int`[] @kind object;
  #L1da9ba.  v1:= `@@c.f.b.k.n.p$b.g` @type ^`c.f.b.k.n.p$b` @kind object;
  #L1da9be.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L1da9c4.  v1:= temp;
  #L1da9c6.  v2:= 1I;
  #L1da9c8.  v0[v1]:= v2;
  #L1da9cc.  v0:= `@@c.f.b.k.n.l$a.a` @type ^`int`[] @kind object;
  #L1da9d0.  v1:= `@@c.f.b.k.n.p$b.h` @type ^`c.f.b.k.n.p$b` @kind object;
  #L1da9d4.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L1da9da.  v1:= temp;
  #L1da9dc.  v2:= 2I;
  #L1da9de.  v0[v1]:= v2;
  #L1da9e2.  v0:= `@@c.f.b.k.n.l$a.a` @type ^`int`[] @kind object;
  #L1da9e6.  v1:= `@@c.f.b.k.n.p$b.i` @type ^`c.f.b.k.n.p$b` @kind object;
  #L1da9ea.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L1da9f0.  v1:= temp;
  #L1da9f2.  v2:= 3I;
  #L1da9f4.  v0[v1]:= v2;
  #L1da9f8.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L1da9b6..L1da9cc] goto L1da9cc;
  catch `java.lang.NoSuchFieldError` @[L1da9cc..L1da9e2] goto L1da9e2;
  catch `java.lang.NoSuchFieldError` @[L1da9e2..L1da9f8] goto L1da9f8;
}
