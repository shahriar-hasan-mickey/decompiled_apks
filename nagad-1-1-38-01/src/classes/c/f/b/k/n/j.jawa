record `c.f.b.k.n.j` @kind class @AccessFlag  extends `c.f.b.k.n.p` @kind class {
}
procedure `void` `<init>`(`c.f.b.k.n.j` v1 @kind this, `c.f.b.k.e` v2 @kind object) @signature `Lc/f/b/k/n/j;.<init>:(Lc/f/b/k/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1da25c.  call `<init>`(v1, v2) @signature `Lc/f/b/k/n/p;.<init>:(Lc/f/b/k/e;)V` @kind direct;
  #L1da262.  v0:= v2.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1da266.  call `b`(v0) @signature `Lc/f/b/k/n/l;.b:()V` @kind virtual;
  #L1da26c.  v0:= v2.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1da270.  call `b`(v0) @signature `Lc/f/b/k/n/n;.b:()V` @kind virtual;
  #L1da276.  v2:= (`c.f.b.k.h`) v2 @kind object;
  #L1da27a.  call temp:= `getOrientation`(v2) @signature `Lc/f/b/k/h;.getOrientation:()I` @kind virtual;
  #L1da280.  v2:= temp;
  #L1da282.  v1.`c.f.b.k.n.p.f` @type ^`int` := v2;
  #L1da286.  return @kind void;
}
procedure `void` `a`(`c.f.b.k.n.j` v1 @kind this, `c.f.b.k.n.f` v2 @kind object) @signature `Lc/f/b/k/n/j;.a:(Lc/f/b/k/n/f;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1da298.  v0:= v1.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da29c.  v0:= v0.`c.f.b.k.n.f.k` @type ^`java.util.List` @kind object;
  #L1da2a0.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1da2a6.  v2:= v2.`c.f.b.k.n.f.l` @type ^`java.util.List` @kind object;
  #L1da2aa.  v0:= v1.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da2ae.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1da2b4.  return @kind void;
}
procedure `void` `a`(`c.f.b.k.n.j` v5 @kind this) @signature `Lc/f/b/k/n/j;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1da2c8.  v0:= v5.`c.f.b.k.n.p.b` @type ^`c.f.b.k.e` @kind object;
  #L1da2cc.  v0:= (`c.f.b.k.h`) v0 @kind object;
  #L1da2d0.  call temp:= `getRelativeBegin`(v0) @signature `Lc/f/b/k/h;.getRelativeBegin:()I` @kind virtual;
  #L1da2d6.  v1:= temp;
  #L1da2d8.  call temp:= `getRelativeEnd`(v0) @signature `Lc/f/b/k/h;.getRelativeEnd:()I` @kind virtual;
  #L1da2de.  v2:= temp;
  #L1da2e0.  call temp:= `getRelativePercent`(v0) @signature `Lc/f/b/k/h;.getRelativePercent:()F` @kind virtual;
  #L1da2e6.  call temp:= `getOrientation`(v0) @signature `Lc/f/b/k/h;.getOrientation:()I` @kind virtual;
  #L1da2ec.  v0:= temp;
  #L1da2ee.  v3:= 1I;
  #L1da2f0.  v4:= -1I;
  #L1da2f2.  if v0 != v3 then goto L1da3f4;
  #L1da2f6.  if v1 == v4 then goto L1da340;
  #L1da2fa.  v0:= v5.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da2fe.  v0:= v0.`c.f.b.k.n.f.l` @type ^`java.util.List` @kind object;
  #L1da302.  v2:= v5.`c.f.b.k.n.p.b` @type ^`c.f.b.k.e` @kind object;
  #L1da306.  v2:= v2.`c.f.b.k.e.R` @type ^`c.f.b.k.e` @kind object;
  #L1da30a.  v2:= v2.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1da30e.  v2:= v2.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da312.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1da318.  v0:= v5.`c.f.b.k.n.p.b` @type ^`c.f.b.k.e` @kind object;
  #L1da31c.  v0:= v0.`c.f.b.k.e.R` @type ^`c.f.b.k.e` @kind object;
  #L1da320.  v0:= v0.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1da324.  v0:= v0.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da328.  v0:= v0.`c.f.b.k.n.f.k` @type ^`java.util.List` @kind object;
  #L1da32c.  v2:= v5.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da330.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1da336.  v0:= v5.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da33a.  v0.`c.f.b.k.n.f.f` @type ^`int` := v1;
  #L1da33e.  goto L1da3cc;
  #L1da340.  if v2 == v4 then goto L1da38c;
  #L1da344.  v0:= v5.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da348.  v0:= v0.`c.f.b.k.n.f.l` @type ^`java.util.List` @kind object;
  #L1da34c.  v1:= v5.`c.f.b.k.n.p.b` @type ^`c.f.b.k.e` @kind object;
  #L1da350.  v1:= v1.`c.f.b.k.e.R` @type ^`c.f.b.k.e` @kind object;
  #L1da354.  v1:= v1.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1da358.  v1:= v1.`c.f.b.k.n.p.i` @type ^`c.f.b.k.n.f` @kind object;
  #L1da35c.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1da362.  v0:= v5.`c.f.b.k.n.p.b` @type ^`c.f.b.k.e` @kind object;
  #L1da366.  v0:= v0.`c.f.b.k.e.R` @type ^`c.f.b.k.e` @kind object;
  #L1da36a.  v0:= v0.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1da36e.  v0:= v0.`c.f.b.k.n.p.i` @type ^`c.f.b.k.n.f` @kind object;
  #L1da372.  v0:= v0.`c.f.b.k.n.f.k` @type ^`java.util.List` @kind object;
  #L1da376.  v1:= v5.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da37a.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1da380.  v0:= v5.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da384.  v1:= -v2 @kind int;
  #L1da386.  v0.`c.f.b.k.n.f.f` @type ^`int` := v1;
  #L1da38a.  goto L1da3cc;
  #L1da38c.  v0:= v5.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da390.  v0.`c.f.b.k.n.f.b` @type ^`boolean` := v3 @kind boolean;
  #L1da394.  v0:= v0.`c.f.b.k.n.f.l` @type ^`java.util.List` @kind object;
  #L1da398.  v1:= v5.`c.f.b.k.n.p.b` @type ^`c.f.b.k.e` @kind object;
  #L1da39c.  v1:= v1.`c.f.b.k.e.R` @type ^`c.f.b.k.e` @kind object;
  #L1da3a0.  v1:= v1.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1da3a4.  v1:= v1.`c.f.b.k.n.p.i` @type ^`c.f.b.k.n.f` @kind object;
  #L1da3a8.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1da3ae.  v0:= v5.`c.f.b.k.n.p.b` @type ^`c.f.b.k.e` @kind object;
  #L1da3b2.  v0:= v0.`c.f.b.k.e.R` @type ^`c.f.b.k.e` @kind object;
  #L1da3b6.  v0:= v0.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1da3ba.  v0:= v0.`c.f.b.k.n.p.i` @type ^`c.f.b.k.n.f` @kind object;
  #L1da3be.  v0:= v0.`c.f.b.k.n.f.k` @type ^`java.util.List` @kind object;
  #L1da3c2.  v1:= v5.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da3c6.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1da3cc.  v0:= v5.`c.f.b.k.n.p.b` @type ^`c.f.b.k.e` @kind object;
  #L1da3d0.  v0:= v0.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1da3d4.  v0:= v0.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da3d8.  call `a`(v5, v0) @signature `Lc/f/b/k/n/j;.a:(Lc/f/b/k/n/f;)V` @kind direct;
  #L1da3de.  v0:= v5.`c.f.b.k.n.p.b` @type ^`c.f.b.k.e` @kind object;
  #L1da3e2.  v0:= v0.`c.f.b.k.e.d` @type ^`c.f.b.k.n.l` @kind object;
  #L1da3e6.  v0:= v0.`c.f.b.k.n.p.i` @type ^`c.f.b.k.n.f` @kind object;
  #L1da3ea.  call `a`(v5, v0) @signature `Lc/f/b/k/n/j;.a:(Lc/f/b/k/n/f;)V` @kind direct;
  #L1da3f0.  goto L1da4ee;
  #L1da3f4.  if v1 == v4 then goto L1da43e;
  #L1da3f8.  v0:= v5.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da3fc.  v0:= v0.`c.f.b.k.n.f.l` @type ^`java.util.List` @kind object;
  #L1da400.  v2:= v5.`c.f.b.k.n.p.b` @type ^`c.f.b.k.e` @kind object;
  #L1da404.  v2:= v2.`c.f.b.k.e.R` @type ^`c.f.b.k.e` @kind object;
  #L1da408.  v2:= v2.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1da40c.  v2:= v2.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da410.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1da416.  v0:= v5.`c.f.b.k.n.p.b` @type ^`c.f.b.k.e` @kind object;
  #L1da41a.  v0:= v0.`c.f.b.k.e.R` @type ^`c.f.b.k.e` @kind object;
  #L1da41e.  v0:= v0.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1da422.  v0:= v0.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da426.  v0:= v0.`c.f.b.k.n.f.k` @type ^`java.util.List` @kind object;
  #L1da42a.  v2:= v5.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da42e.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1da434.  v0:= v5.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da438.  v0.`c.f.b.k.n.f.f` @type ^`int` := v1;
  #L1da43c.  goto L1da4ca;
  #L1da43e.  if v2 == v4 then goto L1da48a;
  #L1da442.  v0:= v5.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da446.  v0:= v0.`c.f.b.k.n.f.l` @type ^`java.util.List` @kind object;
  #L1da44a.  v1:= v5.`c.f.b.k.n.p.b` @type ^`c.f.b.k.e` @kind object;
  #L1da44e.  v1:= v1.`c.f.b.k.e.R` @type ^`c.f.b.k.e` @kind object;
  #L1da452.  v1:= v1.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1da456.  v1:= v1.`c.f.b.k.n.p.i` @type ^`c.f.b.k.n.f` @kind object;
  #L1da45a.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1da460.  v0:= v5.`c.f.b.k.n.p.b` @type ^`c.f.b.k.e` @kind object;
  #L1da464.  v0:= v0.`c.f.b.k.e.R` @type ^`c.f.b.k.e` @kind object;
  #L1da468.  v0:= v0.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1da46c.  v0:= v0.`c.f.b.k.n.p.i` @type ^`c.f.b.k.n.f` @kind object;
  #L1da470.  v0:= v0.`c.f.b.k.n.f.k` @type ^`java.util.List` @kind object;
  #L1da474.  v1:= v5.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da478.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1da47e.  v0:= v5.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da482.  v1:= -v2 @kind int;
  #L1da484.  v0.`c.f.b.k.n.f.f` @type ^`int` := v1;
  #L1da488.  goto L1da4ca;
  #L1da48a.  v0:= v5.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da48e.  v0.`c.f.b.k.n.f.b` @type ^`boolean` := v3 @kind boolean;
  #L1da492.  v0:= v0.`c.f.b.k.n.f.l` @type ^`java.util.List` @kind object;
  #L1da496.  v1:= v5.`c.f.b.k.n.p.b` @type ^`c.f.b.k.e` @kind object;
  #L1da49a.  v1:= v1.`c.f.b.k.e.R` @type ^`c.f.b.k.e` @kind object;
  #L1da49e.  v1:= v1.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1da4a2.  v1:= v1.`c.f.b.k.n.p.i` @type ^`c.f.b.k.n.f` @kind object;
  #L1da4a6.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1da4ac.  v0:= v5.`c.f.b.k.n.p.b` @type ^`c.f.b.k.e` @kind object;
  #L1da4b0.  v0:= v0.`c.f.b.k.e.R` @type ^`c.f.b.k.e` @kind object;
  #L1da4b4.  v0:= v0.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1da4b8.  v0:= v0.`c.f.b.k.n.p.i` @type ^`c.f.b.k.n.f` @kind object;
  #L1da4bc.  v0:= v0.`c.f.b.k.n.f.k` @type ^`java.util.List` @kind object;
  #L1da4c0.  v1:= v5.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da4c4.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1da4ca.  v0:= v5.`c.f.b.k.n.p.b` @type ^`c.f.b.k.e` @kind object;
  #L1da4ce.  v0:= v0.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1da4d2.  v0:= v0.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da4d6.  call `a`(v5, v0) @signature `Lc/f/b/k/n/j;.a:(Lc/f/b/k/n/f;)V` @kind direct;
  #L1da4dc.  v0:= v5.`c.f.b.k.n.p.b` @type ^`c.f.b.k.e` @kind object;
  #L1da4e0.  v0:= v0.`c.f.b.k.e.e` @type ^`c.f.b.k.n.n` @kind object;
  #L1da4e4.  v0:= v0.`c.f.b.k.n.p.i` @type ^`c.f.b.k.n.f` @kind object;
  #L1da4e8.  call `a`(v5, v0) @signature `Lc/f/b/k/n/j;.a:(Lc/f/b/k/n/f;)V` @kind direct;
  #L1da4ee.  return @kind void;
}
procedure `void` `applyToWidget`(`c.f.b.k.n.j` v2 @kind this) @signature `Lc/f/b/k/n/j;.applyToWidget:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1da500.  v0:= v2.`c.f.b.k.n.p.b` @type ^`c.f.b.k.e` @kind object;
  #L1da504.  v0:= (`c.f.b.k.h`) v0 @kind object;
  #L1da508.  call temp:= `getOrientation`(v0) @signature `Lc/f/b/k/h;.getOrientation:()I` @kind virtual;
  #L1da50e.  v0:= temp;
  #L1da510.  v1:= 1I;
  #L1da512.  if v0 != v1 then goto L1da52a;
  #L1da516.  v0:= v2.`c.f.b.k.n.p.b` @type ^`c.f.b.k.e` @kind object;
  #L1da51a.  v1:= v2.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da51e.  v1:= v1.`c.f.b.k.n.f.g` @type ^`int`;
  #L1da522.  call `setX`(v0, v1) @signature `Lc/f/b/k/e;.setX:(I)V` @kind virtual;
  #L1da528.  goto L1da53c;
  #L1da52a.  v0:= v2.`c.f.b.k.n.p.b` @type ^`c.f.b.k.e` @kind object;
  #L1da52e.  v1:= v2.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da532.  v1:= v1.`c.f.b.k.n.f.g` @type ^`int`;
  #L1da536.  call `setY`(v0, v1) @signature `Lc/f/b/k/e;.setY:(I)V` @kind virtual;
  #L1da53c.  return @kind void;
}
procedure `void` `b`(`c.f.b.k.n.j` v1 @kind this) @signature `Lc/f/b/k/n/j;.b:()V` @AccessFlag  {
    temp;
    v0;

  #L1da550.  v0:= v1.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da554.  call `clear`(v0) @signature `Lc/f/b/k/n/f;.clear:()V` @kind virtual;
  #L1da55a.  return @kind void;
}
procedure `boolean` `c`(`c.f.b.k.n.j` v1 @kind this) @signature `Lc/f/b/k/n/j;.c:()Z` @AccessFlag  {
    temp;
    v0;

  #L1da248.  v0:= 0I;
  #L1da24a.  return v0;
}
procedure `void` `update`(`c.f.b.k.n.j` v2 @kind this, `c.f.b.k.n.d` v3 @kind object) @signature `Lc/f/b/k/n/j;.update:(Lc/f/b/k/n/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1da56c.  v3:= v2.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da570.  v0:= v3.`c.f.b.k.n.f.c` @type ^`boolean` @kind boolean;
  #L1da574.  if v0 != 0 then goto L1da57a;
  #L1da578.  return @kind void;
  #L1da57a.  v0:= v3.`c.f.b.k.n.f.j` @type ^`boolean` @kind boolean;
  #L1da57e.  if v0 == 0 then goto L1da584;
  #L1da582.  return @kind void;
  #L1da584.  v3:= v3.`c.f.b.k.n.f.l` @type ^`java.util.List` @kind object;
  #L1da588.  v0:= 0I;
  #L1da58a.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1da590.  v3:= temp @kind object;
  #L1da592.  v3:= (`c.f.b.k.n.f`) v3 @kind object;
  #L1da596.  v0:= v2.`c.f.b.k.n.p.b` @type ^`c.f.b.k.e` @kind object;
  #L1da59a.  v0:= (`c.f.b.k.h`) v0 @kind object;
  #L1da59e.  v1:= 0.5F;
  #L1da5a2.  v3:= v3.`c.f.b.k.n.f.g` @type ^`int`;
  #L1da5a6.  v3:= (`float`) v3 @kind i2f;
  #L1da5a8.  call temp:= `getRelativePercent`(v0) @signature `Lc/f/b/k/h;.getRelativePercent:()F` @kind virtual;
  #L1da5ae.  v0:= temp;
  #L1da5b0.  v3:= v3 * v0 @kind float;
  #L1da5b4.  v3:= v3 + v1 @kind float;
  #L1da5b6.  v3:= (`int`) v3 @kind f2i;
  #L1da5b8.  v0:= v2.`c.f.b.k.n.p.h` @type ^`c.f.b.k.n.f` @kind object;
  #L1da5bc.  call `resolve`(v0, v3) @signature `Lc/f/b/k/n/f;.resolve:(I)V` @kind virtual;
  #L1da5c2.  return @kind void;
}
