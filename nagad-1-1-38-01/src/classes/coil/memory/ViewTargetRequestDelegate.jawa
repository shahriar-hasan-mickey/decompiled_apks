record `coil.memory.ViewTargetRequestDelegate` @kind class @AccessFlag PUBLIC_FINAL extends `coil.memory.RequestDelegate` @kind class {
  `d.a.a` `coil.memory.ViewTargetRequestDelegate.f` @AccessFlag PRIVATE_FINAL;
  `coil.memory.a` `coil.memory.ViewTargetRequestDelegate.g` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.d1` `coil.memory.ViewTargetRequestDelegate.h` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `dispose`(`coil.memory.ViewTargetRequestDelegate` v3 @kind this) @signature `Lcoil/memory/ViewTargetRequestDelegate;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L25df48.  v0:= v3.`coil.memory.ViewTargetRequestDelegate.h` @type ^`kotlinx.coroutines.d1` @kind object;
  #L25df4c.  v1:= 0I;
  #L25df4e.  v2:= 1I;
  #L25df50.  call `cancel$default`(v0, v1, v2, v1) @signature `Lkotlinx/coroutines/d1$a;.cancel$default:(Lkotlinx/coroutines/d1;Ljava/util/concurrent/CancellationException;ILjava/lang/Object;)V` @kind static;
  #L25df56.  v0:= v3.`coil.memory.ViewTargetRequestDelegate.g` @type ^`coil.memory.a` @kind object;
  #L25df5a.  call `clear`(v0) @signature `Lcoil/memory/a;.clear:()V` @kind virtual;
  #L25df60.  v0:= v3.`coil.memory.ViewTargetRequestDelegate.f` @type ^`d.a.a` @kind object;
  #L25df64.  call temp:= `getTarget`(v0) @signature `Ld/a/a;.getTarget:()Lcoil/target/b;` @kind virtual;
  #L25df6a.  throw v1;
}
procedure `void` `onDestroy`(`coil.memory.ViewTargetRequestDelegate` v1 @kind this, `androidx.lifecycle.r` v2 @kind object) @signature `Lcoil/memory/ViewTargetRequestDelegate;.onDestroy:(Landroidx/lifecycle/r;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25df7c.  v0:= "owner" @kind object;
  #L25df80.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L25df86.  call `dispose`(v1) @signature `Lcoil/memory/ViewTargetRequestDelegate;.dispose:()V` @kind virtual;
  #L25df8c.  return @kind void;
}
