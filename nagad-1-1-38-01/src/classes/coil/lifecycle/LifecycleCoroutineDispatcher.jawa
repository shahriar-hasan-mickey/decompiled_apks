record `coil.lifecycle.LifecycleCoroutineDispatcher` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.x` @kind class, `androidx.lifecycle.e` @kind interface {
  `java.util.Queue` `coil.lifecycle.LifecycleCoroutineDispatcher.g` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.x` `coil.lifecycle.LifecycleCoroutineDispatcher.h` @AccessFlag PRIVATE_FINAL;
  `boolean` `coil.lifecycle.LifecycleCoroutineDispatcher.i` @AccessFlag PRIVATE;
}
procedure `void` `<clinit>`() @signature `Lcoil/lifecycle/LifecycleCoroutineDispatcher;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L25dc94.  v0:= new `coil.lifecycle.LifecycleCoroutineDispatcher$a`;
  #L25dc98.  v1:= 0I;
  #L25dc9a.  call `<init>`(v0, v1) @signature `Lcoil/lifecycle/LifecycleCoroutineDispatcher$a;.<init>:(Lkotlin/v/c/f;)V` @kind direct;
  #L25dca0.  return @kind void;
}
procedure `void` `a`(`coil.lifecycle.LifecycleCoroutineDispatcher` v4 @kind this) @signature `Lcoil/lifecycle/LifecycleCoroutineDispatcher;.a:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L25dd00.  v0:= v4.`coil.lifecycle.LifecycleCoroutineDispatcher.g` @type ^`java.util.Queue` @kind object;
  #L25dd04.  call temp:= `iterator`(v0) @signature `Ljava/util/Queue;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L25dd0a.  v0:= temp @kind object;
  #L25dd0c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L25dd12.  v1:= temp;
  #L25dd14.  if v1 == 0 then goto L25dd4e;
  #L25dd18.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L25dd1e.  v1:= temp @kind object;
  #L25dd20.  v1:= (`kotlin.k`) v1 @kind object;
  #L25dd24.  call temp:= `component1`(v1) @signature `Lkotlin/k;.component1:()Ljava/lang/Object;` @kind virtual;
  #L25dd2a.  v2:= temp @kind object;
  #L25dd2c.  v2:= (`kotlin.t.g`) v2 @kind object;
  #L25dd30.  call temp:= `component2`(v1) @signature `Lkotlin/k;.component2:()Ljava/lang/Object;` @kind virtual;
  #L25dd36.  v1:= temp @kind object;
  #L25dd38.  v1:= (`java.lang.Runnable`) v1 @kind object;
  #L25dd3c.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L25dd42.  v3:= v4.`coil.lifecycle.LifecycleCoroutineDispatcher.h` @type ^`kotlinx.coroutines.x` @kind object;
  #L25dd46.  call `dispatch`(v3, v2, v1) @signature `Lkotlinx/coroutines/x;.dispatch:(Lkotlin/t/g;Ljava/lang/Runnable;)V` @kind virtual;
  #L25dd4c.  goto L25dd0c;
  #L25dd4e.  return @kind void;
}
procedure `void` `dispatch`(`coil.lifecycle.LifecycleCoroutineDispatcher` v1 @kind this, `kotlin.t.g` v2 @kind object, `java.lang.Runnable` v3 @kind object) @signature `Lcoil/lifecycle/LifecycleCoroutineDispatcher;.dispatch:(Lkotlin/t/g;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25dcb4.  v0:= "context" @kind object;
  #L25dcb8.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L25dcbe.  v0:= "block" @kind object;
  #L25dcc2.  call `checkParameterIsNotNull`(v3, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L25dcc8.  v0:= v1.`coil.lifecycle.LifecycleCoroutineDispatcher.i` @type ^`boolean` @kind boolean;
  #L25dccc.  if v0 == 0 then goto L25dcdc;
  #L25dcd0.  v0:= v1.`coil.lifecycle.LifecycleCoroutineDispatcher.h` @type ^`kotlinx.coroutines.x` @kind object;
  #L25dcd4.  call `dispatch`(v0, v2, v3) @signature `Lkotlinx/coroutines/x;.dispatch:(Lkotlin/t/g;Ljava/lang/Runnable;)V` @kind virtual;
  #L25dcda.  goto L25dcee;
  #L25dcdc.  v0:= v1.`coil.lifecycle.LifecycleCoroutineDispatcher.g` @type ^`java.util.Queue` @kind object;
  #L25dce0.  call temp:= `to`(v2, v3) @signature `Lkotlin/o;.to:(Ljava/lang/Object;Ljava/lang/Object;)Lkotlin/k;` @kind static;
  #L25dce6.  v2:= temp @kind object;
  #L25dce8.  call temp:= `offer`(v0, v2) @signature `Ljava/util/Queue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L25dcee.  return @kind void;
}
procedure `boolean` `isDispatchNeeded`(`coil.lifecycle.LifecycleCoroutineDispatcher` v1 @kind this, `kotlin.t.g` v2 @kind object) @signature `Lcoil/lifecycle/LifecycleCoroutineDispatcher;.isDispatchNeeded:(Lkotlin/t/g;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25dc6c.  v0:= "context" @kind object;
  #L25dc70.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L25dc76.  v0:= v1.`coil.lifecycle.LifecycleCoroutineDispatcher.h` @type ^`kotlinx.coroutines.x` @kind object;
  #L25dc7a.  call temp:= `isDispatchNeeded`(v0, v2) @signature `Lkotlinx/coroutines/x;.isDispatchNeeded:(Lkotlin/t/g;)Z` @kind virtual;
  #L25dc80.  v2:= temp;
  #L25dc82.  return v2;
}
procedure `void` `onCreate`(`coil.lifecycle.LifecycleCoroutineDispatcher` v0 @kind this, `androidx.lifecycle.r` v1 @kind object) @signature `Lcoil/lifecycle/LifecycleCoroutineDispatcher;.onCreate:(Landroidx/lifecycle/r;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L25dd60.  call `$default$onCreate`(v0, v1) @signature `Landroidx/lifecycle/d;.$default$onCreate:(Landroidx/lifecycle/e;Landroidx/lifecycle/r;)V` @kind static;
  #L25dd66.  return @kind void;
}
procedure `void` `onDestroy`(`coil.lifecycle.LifecycleCoroutineDispatcher` v0 @kind this, `androidx.lifecycle.r` v1 @kind object) @signature `Lcoil/lifecycle/LifecycleCoroutineDispatcher;.onDestroy:(Landroidx/lifecycle/r;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L25dd78.  call `$default$onDestroy`(v0, v1) @signature `Landroidx/lifecycle/d;.$default$onDestroy:(Landroidx/lifecycle/e;Landroidx/lifecycle/r;)V` @kind static;
  #L25dd7e.  return @kind void;
}
procedure `void` `onPause`(`coil.lifecycle.LifecycleCoroutineDispatcher` v0 @kind this, `androidx.lifecycle.r` v1 @kind object) @signature `Lcoil/lifecycle/LifecycleCoroutineDispatcher;.onPause:(Landroidx/lifecycle/r;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L25dd90.  call `$default$onPause`(v0, v1) @signature `Landroidx/lifecycle/d;.$default$onPause:(Landroidx/lifecycle/e;Landroidx/lifecycle/r;)V` @kind static;
  #L25dd96.  return @kind void;
}
procedure `void` `onResume`(`coil.lifecycle.LifecycleCoroutineDispatcher` v0 @kind this, `androidx.lifecycle.r` v1 @kind object) @signature `Lcoil/lifecycle/LifecycleCoroutineDispatcher;.onResume:(Landroidx/lifecycle/r;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L25dda8.  call `$default$onResume`(v0, v1) @signature `Landroidx/lifecycle/d;.$default$onResume:(Landroidx/lifecycle/e;Landroidx/lifecycle/r;)V` @kind static;
  #L25ddae.  return @kind void;
}
procedure `void` `onStart`(`coil.lifecycle.LifecycleCoroutineDispatcher` v1 @kind this, `androidx.lifecycle.r` v2 @kind object) @signature `Lcoil/lifecycle/LifecycleCoroutineDispatcher;.onStart:(Landroidx/lifecycle/r;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25ddc0.  v0:= "owner" @kind object;
  #L25ddc4.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L25ddca.  v2:= 1I;
  #L25ddcc.  v1.`coil.lifecycle.LifecycleCoroutineDispatcher.i` @type ^`boolean` := v2 @kind boolean;
  #L25ddd0.  call `a`(v1) @signature `Lcoil/lifecycle/LifecycleCoroutineDispatcher;.a:()V` @kind direct;
  #L25ddd6.  return @kind void;
}
procedure `void` `onStop`(`coil.lifecycle.LifecycleCoroutineDispatcher` v1 @kind this, `androidx.lifecycle.r` v2 @kind object) @signature `Lcoil/lifecycle/LifecycleCoroutineDispatcher;.onStop:(Landroidx/lifecycle/r;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25dde8.  v0:= "owner" @kind object;
  #L25ddec.  call `checkParameterIsNotNull`(v2, v0) @signature `Lkotlin/v/c/i;.checkParameterIsNotNull:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L25ddf2.  v2:= 0I;
  #L25ddf4.  v1.`coil.lifecycle.LifecycleCoroutineDispatcher.i` @type ^`boolean` := v2 @kind boolean;
  #L25ddf8.  return @kind void;
}
