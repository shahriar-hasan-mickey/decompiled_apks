record `com.activeandroid.TableInfo` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Map` `com.activeandroid.TableInfo.mColumnNames` @AccessFlag PRIVATE;
  `java.lang.String` `com.activeandroid.TableInfo.mIdName` @AccessFlag PRIVATE;
  `java.lang.String` `com.activeandroid.TableInfo.mTableName` @AccessFlag PRIVATE;
  `java.lang.Class` `com.activeandroid.TableInfo.mType` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.activeandroid.TableInfo` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lcom/activeandroid/TableInfo;.<init>:(Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L260560.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L260566.  v0:= "Id" @kind object;
  #L26056a.  v3.`com.activeandroid.TableInfo.mIdName` @type ^`java.lang.String` := v0 @kind object;
  #L26056e.  v0:= new `java.util.LinkedHashMap`;
  #L260572.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L260578.  v3.`com.activeandroid.TableInfo.mColumnNames` @type ^`java.util.Map` := v0 @kind object;
  #L26057c.  v3.`com.activeandroid.TableInfo.mType` @type ^`java.lang.Class` := v4 @kind object;
  #L260580.  v0:= constclass @type ^`com.activeandroid.annotation.Table` @kind object;
  #L260584.  call temp:= `getAnnotation`(v4, v0) @signature `Ljava/lang/Class;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L26058a.  v0:= temp @kind object;
  #L26058c.  v0:= (`com.activeandroid.annotation.Table`) v0 @kind object;
  #L260590.  if v0 == 0 then goto L2605ae;
  #L260594.  call temp:= `name`(v0) @signature `Lcom/activeandroid/annotation/Table;.name:()Ljava/lang/String;` @kind interface;
  #L26059a.  v1:= temp @kind object;
  #L26059c.  v3.`com.activeandroid.TableInfo.mTableName` @type ^`java.lang.String` := v1 @kind object;
  #L2605a0.  call temp:= `id`(v0) @signature `Lcom/activeandroid/annotation/Table;.id:()Ljava/lang/String;` @kind interface;
  #L2605a6.  v0:= temp @kind object;
  #L2605a8.  v3.`com.activeandroid.TableInfo.mIdName` @type ^`java.lang.String` := v0 @kind object;
  #L2605ac.  goto L2605ba;
  #L2605ae.  call temp:= `getSimpleName`(v4) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L2605b4.  v0:= temp @kind object;
  #L2605b6.  v3.`com.activeandroid.TableInfo.mTableName` @type ^`java.lang.String` := v0 @kind object;
  #L2605ba.  call temp:= `getIdField`(v3, v4) @signature `Lcom/activeandroid/TableInfo;.getIdField:(Ljava/lang/Class;)Ljava/lang/reflect/Field;` @kind direct;
  #L2605c0.  v0:= temp @kind object;
  #L2605c2.  v1:= v3.`com.activeandroid.TableInfo.mColumnNames` @type ^`java.util.Map` @kind object;
  #L2605c6.  v2:= v3.`com.activeandroid.TableInfo.mIdName` @type ^`java.lang.String` @kind object;
  #L2605ca.  call temp:= `put`(v1, v0, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2605d0.  v0:= new `java.util.LinkedList`;
  #L2605d4.  call temp:= `getDeclaredColumnFields`(v4) @signature `Lcom/activeandroid/util/ReflectionUtils;.getDeclaredColumnFields:(Ljava/lang/Class;)Ljava/util/Set;` @kind static;
  #L2605da.  v4:= temp @kind object;
  #L2605dc.  call `<init>`(v0, v4) @signature `Ljava/util/LinkedList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L2605e2.  call `reverse`(v0) @signature `Ljava/util/Collections;.reverse:(Ljava/util/List;)V` @kind static;
  #L2605e8.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2605ee.  v4:= temp @kind object;
  #L2605f0.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2605f6.  v0:= temp;
  #L2605f8.  if v0 == 0 then goto L260650;
  #L2605fc.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L260602.  v0:= temp @kind object;
  #L260604.  v0:= (`java.lang.reflect.Field`) v0 @kind object;
  #L260608.  v1:= constclass @type ^`com.activeandroid.annotation.Column` @kind object;
  #L26060c.  call temp:= `isAnnotationPresent`(v0, v1) @signature `Ljava/lang/reflect/Field;.isAnnotationPresent:(Ljava/lang/Class;)Z` @kind virtual;
  #L260612.  v1:= temp;
  #L260614.  if v1 == 0 then goto L2605f0;
  #L260618.  v1:= constclass @type ^`com.activeandroid.annotation.Column` @kind object;
  #L26061c.  call temp:= `getAnnotation`(v0, v1) @signature `Ljava/lang/reflect/Field;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L260622.  v1:= temp @kind object;
  #L260624.  v1:= (`com.activeandroid.annotation.Column`) v1 @kind object;
  #L260628.  call temp:= `name`(v1) @signature `Lcom/activeandroid/annotation/Column;.name:()Ljava/lang/String;` @kind interface;
  #L26062e.  v1:= temp @kind object;
  #L260630.  call temp:= `isEmpty`(v1) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L260636.  v2:= temp;
  #L260638.  if v2 == 0 then goto L260644;
  #L26063c.  call temp:= `getName`(v0) @signature `Ljava/lang/reflect/Field;.getName:()Ljava/lang/String;` @kind virtual;
  #L260642.  v1:= temp @kind object;
  #L260644.  v2:= v3.`com.activeandroid.TableInfo.mColumnNames` @type ^`java.util.Map` @kind object;
  #L260648.  call temp:= `put`(v2, v0, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L26064e.  goto L2605f0;
  #L260650.  return @kind void;
}
procedure `java.lang.reflect.Field` `getIdField`(`com.activeandroid.TableInfo` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/activeandroid/TableInfo;.getIdField:(Ljava/lang/Class;)Ljava/lang/reflect/Field;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2604c8.  v0:= constclass @type ^`com.activeandroid.Model` @kind object;
  #L2604cc.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2604d2.  v0:= temp;
  #L2604d4.  if v0 == 0 then goto L2604fc;
  #L2604d8.  v0:= "mId" @kind object;
  #L2604dc.  call temp:= `getDeclaredField`(v2, v0) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L2604e2.  v2:= temp @kind object;
  #L2604e4.  return v2 @kind object;
  #L2604e6.  v2:= Exception @type ^`java.lang.NoSuchFieldException` @kind object;
  #L2604e8.  call temp:= `toString`(v2) @signature `Ljava/lang/NoSuchFieldException;.toString:()Ljava/lang/String;` @kind virtual;
  #L2604ee.  v2:= temp @kind object;
  #L2604f0.  v0:= "Impossible!" @kind object;
  #L2604f4.  call temp:= `e`(v0, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2604fa.  goto L26051a;
  #L2604fc.  call temp:= `getSuperclass`(v2) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L260502.  v0:= temp @kind object;
  #L260504.  if v0 == 0 then goto L26051a;
  #L260508.  call temp:= `getSuperclass`(v2) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L26050e.  v2:= temp @kind object;
  #L260510.  call temp:= `getIdField`(v1, v2) @signature `Lcom/activeandroid/TableInfo;.getIdField:(Ljava/lang/Class;)Ljava/lang/reflect/Field;` @kind direct;
  #L260516.  v2:= temp @kind object;
  #L260518.  return v2 @kind object;
  #L26051a.  v2:= 0I;
  #L26051c.  return v2 @kind object;
  catch `java.lang.NoSuchFieldException` @[L2604d8..L2604e4] goto L2604e6;
}
procedure `java.lang.String` `getColumnName`(`com.activeandroid.TableInfo` v1 @kind this, `java.lang.reflect.Field` v2 @kind object) @signature `Lcom/activeandroid/TableInfo;.getColumnName:(Ljava/lang/reflect/Field;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L260474.  v0:= v1.`com.activeandroid.TableInfo.mColumnNames` @type ^`java.util.Map` @kind object;
  #L260478.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L26047e.  v2:= temp @kind object;
  #L260480.  v2:= (`java.lang.String`) v2 @kind object;
  #L260484.  return v2 @kind object;
}
procedure `java.util.Collection` `getFields`(`com.activeandroid.TableInfo` v1 @kind this) @signature `Lcom/activeandroid/TableInfo;.getFields:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L260540.  v0:= v1.`com.activeandroid.TableInfo.mColumnNames` @type ^`java.util.Map` @kind object;
  #L260544.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L26054a.  v0:= temp @kind object;
  #L26054c.  return v0 @kind object;
}
procedure `java.lang.String` `getIdName`(`com.activeandroid.TableInfo` v1 @kind this) @signature `Lcom/activeandroid/TableInfo;.getIdName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L260498.  v0:= v1.`com.activeandroid.TableInfo.mIdName` @type ^`java.lang.String` @kind object;
  #L26049c.  return v0 @kind object;
}
procedure `java.lang.String` `getTableName`(`com.activeandroid.TableInfo` v1 @kind this) @signature `Lcom/activeandroid/TableInfo;.getTableName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2604b0.  v0:= v1.`com.activeandroid.TableInfo.mTableName` @type ^`java.lang.String` @kind object;
  #L2604b4.  return v0 @kind object;
}
procedure `java.lang.Class` `getType`(`com.activeandroid.TableInfo` v1 @kind this) @signature `Lcom/activeandroid/TableInfo;.getType:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26045c.  v0:= v1.`com.activeandroid.TableInfo.mType` @type ^`java.lang.Class` @kind object;
  #L260460.  return v0 @kind object;
}
