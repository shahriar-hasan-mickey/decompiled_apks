record `com.activeandroid.ModelInfo` @kind class @AccessFlag FINAL {
  `java.util.Map` `com.activeandroid.ModelInfo.mTableInfos` @AccessFlag PRIVATE;
  `java.util.Map` `com.activeandroid.ModelInfo.mTypeSerializers` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.activeandroid.ModelInfo` v1 @kind this, `com.activeandroid.Configuration` v2 @kind object) @signature `Lcom/activeandroid/ModelInfo;.<init>:(Lcom/activeandroid/Configuration;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L25f618.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L25f61e.  v0:= new `java.util.HashMap`;
  #L25f622.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L25f628.  v1.`com.activeandroid.ModelInfo.mTableInfos` @type ^`java.util.Map` := v0 @kind object;
  #L25f62c.  v0:= new `com.activeandroid.ModelInfo$1`;
  #L25f630.  call `<init>`(v0, v1) @signature `Lcom/activeandroid/ModelInfo$1;.<init>:(Lcom/activeandroid/ModelInfo;)V` @kind direct;
  #L25f636.  v1.`com.activeandroid.ModelInfo.mTypeSerializers` @type ^`java.util.Map` := v0 @kind object;
  #L25f63a.  call temp:= `loadModelFromMetaData`(v1, v2) @signature `Lcom/activeandroid/ModelInfo;.loadModelFromMetaData:(Lcom/activeandroid/Configuration;)Z` @kind direct;
  #L25f640.  v0:= temp;
  #L25f642.  if v0 != 0 then goto L25f662;
  #L25f646.  call temp:= `getContext`(v2) @signature `Lcom/activeandroid/Configuration;.getContext:()Landroid/content/Context;` @kind virtual;
  #L25f64c.  v2:= temp @kind object;
  #L25f64e.  call `scanForModel`(v1, v2) @signature `Lcom/activeandroid/ModelInfo;.scanForModel:(Landroid/content/Context;)V` @kind direct;
  #L25f654.  goto L25f662;
  #L25f656.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L25f658.  v0:= "Couldn't open source path." @kind object;
  #L25f65c.  call temp:= `e`(v0, v2) @signature `Lcom/activeandroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L25f662.  v2:= "ModelInfo loaded." @kind object;
  #L25f666.  call temp:= `i`(v2) @signature `Lcom/activeandroid/util/Log;.i:(Ljava/lang/String;)I` @kind static;
  #L25f66c.  return @kind void;
  catch `java.io.IOException` @[L25f646..L25f654] goto L25f656;
}
procedure `boolean` `loadModelFromMetaData`(`com.activeandroid.ModelInfo` v4 @kind this, `com.activeandroid.Configuration` v5 @kind object) @signature `Lcom/activeandroid/ModelInfo;.loadModelFromMetaData:(Lcom/activeandroid/Configuration;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L25f4d0.  call temp:= `isValid`(v5) @signature `Lcom/activeandroid/Configuration;.isValid:()Z` @kind virtual;
  #L25f4d6.  v0:= temp;
  #L25f4d8.  if v0 != 0 then goto L25f4e0;
  #L25f4dc.  v5:= 0I;
  #L25f4de.  return v5;
  #L25f4e0.  call temp:= `getModelClasses`(v5) @signature `Lcom/activeandroid/Configuration;.getModelClasses:()Ljava/util/List;` @kind virtual;
  #L25f4e6.  v0:= temp @kind object;
  #L25f4e8.  if v0 == 0 then goto L25f522;
  #L25f4ec.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L25f4f2.  v0:= temp @kind object;
  #L25f4f4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L25f4fa.  v1:= temp;
  #L25f4fc.  if v1 == 0 then goto L25f522;
  #L25f500.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L25f506.  v1:= temp @kind object;
  #L25f508.  v1:= (`java.lang.Class`) v1 @kind object;
  #L25f50c.  v2:= v4.`com.activeandroid.ModelInfo.mTableInfos` @type ^`java.util.Map` @kind object;
  #L25f510.  v3:= new `com.activeandroid.TableInfo`;
  #L25f514.  call `<init>`(v3, v1) @signature `Lcom/activeandroid/TableInfo;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L25f51a.  call temp:= `put`(v2, v1, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L25f520.  goto L25f4f4;
  #L25f522.  call temp:= `getTypeSerializers`(v5) @signature `Lcom/activeandroid/Configuration;.getTypeSerializers:()Ljava/util/List;` @kind virtual;
  #L25f528.  v5:= temp @kind object;
  #L25f52a.  if v5 == 0 then goto L25f58a;
  #L25f52e.  call temp:= `iterator`(v5) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L25f534.  v5:= temp @kind object;
  #L25f536.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L25f53c.  v0:= temp;
  #L25f53e.  if v0 == 0 then goto L25f58a;
  #L25f542.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L25f548.  v0:= temp @kind object;
  #L25f54a.  v0:= (`java.lang.Class`) v0 @kind object;
  #L25f54e.  call temp:= `newInstance`(v0) @signature `Ljava/lang/Class;.newInstance:()Ljava/lang/Object;` @kind virtual;
  #L25f554.  v0:= temp @kind object;
  #L25f556.  v0:= (`com.activeandroid.serializer.TypeSerializer`) v0 @kind object;
  #L25f55a.  v1:= v4.`com.activeandroid.ModelInfo.mTypeSerializers` @type ^`java.util.Map` @kind object;
  #L25f55e.  call temp:= `getDeserializedType`(v0) @signature `Lcom/activeandroid/serializer/TypeSerializer;.getDeserializedType:()Ljava/lang/Class;` @kind virtual;
  #L25f564.  v2:= temp @kind object;
  #L25f566.  call temp:= `put`(v1, v2, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L25f56c.  goto L25f536;
  #L25f56e.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L25f570.  v1:= "IllegalAccessException" @kind object;
  #L25f574.  call temp:= `e`(v1, v0) @signature `Lcom/activeandroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L25f57a.  goto L25f536;
  #L25f57c.  v0:= Exception @type ^`java.lang.InstantiationException` @kind object;
  #L25f57e.  v1:= "Couldn't instantiate TypeSerializer." @kind object;
  #L25f582.  call temp:= `e`(v1, v0) @signature `Lcom/activeandroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L25f588.  goto L25f536;
  #L25f58a.  v5:= 1I;
  #L25f58c.  return v5;
  catch `java.lang.InstantiationException` @[L25f54e..L25f56c] goto L25f57c;
  catch `java.lang.IllegalAccessException` @[L25f54e..L25f56c] goto L25f56e;
}
procedure `void` `scanForModel`(`com.activeandroid.ModelInfo` v5 @kind this, `android.content.Context` v6 @kind object) @signature `Lcom/activeandroid/ModelInfo;.scanForModel:(Landroid/content/Context;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L25f690.  call temp:= `getPackageName`(v6) @signature `Landroid/content/Context;.getPackageName:()Ljava/lang/String;` @kind virtual;
  #L25f696.  v0:= temp @kind object;
  #L25f698.  call temp:= `getApplicationInfo`(v6) @signature `Landroid/content/Context;.getApplicationInfo:()Landroid/content/pm/ApplicationInfo;` @kind virtual;
  #L25f69e.  v1:= temp @kind object;
  #L25f6a0.  v1:= v1.`android.content.pm.ApplicationInfo.sourceDir` @type ^`java.lang.String` @kind object;
  #L25f6a4.  v2:= new `java.util.ArrayList`;
  #L25f6a8.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L25f6ae.  if v1 == 0 then goto L25f6f6;
  #L25f6b2.  v3:= new `java.io.File`;
  #L25f6b6.  call `<init>`(v3, v1) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25f6bc.  call temp:= `isDirectory`(v3) @signature `Ljava/io/File;.isDirectory:()Z` @kind virtual;
  #L25f6c2.  v3:= temp;
  #L25f6c4.  if v3 != 0 then goto L25f6f6;
  #L25f6c8.  v3:= new `dalvik.system.DexFile`;
  #L25f6cc.  call `<init>`(v3, v1) @signature `Ldalvik/system/DexFile;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25f6d2.  call temp:= `entries`(v3) @signature `Ldalvik/system/DexFile;.entries:()Ljava/util/Enumeration;` @kind virtual;
  #L25f6d8.  v1:= temp @kind object;
  #L25f6da.  call temp:= `hasMoreElements`(v1) @signature `Ljava/util/Enumeration;.hasMoreElements:()Z` @kind interface;
  #L25f6e0.  v3:= temp;
  #L25f6e2.  if v3 == 0 then goto L25f75a;
  #L25f6e6.  call temp:= `nextElement`(v1) @signature `Ljava/util/Enumeration;.nextElement:()Ljava/lang/Object;` @kind interface;
  #L25f6ec.  v3:= temp @kind object;
  #L25f6ee.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L25f6f4.  goto L25f6da;
  #L25f6f6.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L25f6fc.  v1:= temp @kind object;
  #L25f6fe.  call temp:= `getContextClassLoader`(v1) @signature `Ljava/lang/Thread;.getContextClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L25f704.  v1:= temp @kind object;
  #L25f706.  v3:= "" @kind object;
  #L25f70a.  call temp:= `getResources`(v1, v3) @signature `Ljava/lang/ClassLoader;.getResources:(Ljava/lang/String;)Ljava/util/Enumeration;` @kind virtual;
  #L25f710.  v1:= temp @kind object;
  #L25f712.  call temp:= `hasMoreElements`(v1) @signature `Ljava/util/Enumeration;.hasMoreElements:()Z` @kind interface;
  #L25f718.  v3:= temp;
  #L25f71a.  if v3 == 0 then goto L25f75a;
  #L25f71e.  call temp:= `nextElement`(v1) @signature `Ljava/util/Enumeration;.nextElement:()Ljava/lang/Object;` @kind interface;
  #L25f724.  v3:= temp @kind object;
  #L25f726.  v3:= (`java.net.URL`) v3 @kind object;
  #L25f72a.  call temp:= `getFile`(v3) @signature `Ljava/net/URL;.getFile:()Ljava/lang/String;` @kind virtual;
  #L25f730.  v3:= temp @kind object;
  #L25f732.  v4:= "bin" @kind object;
  #L25f736.  call temp:= `contains`(v3, v4) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L25f73c.  v4:= temp;
  #L25f73e.  if v4 != 0 then goto L25f752;
  #L25f742.  v4:= "classes" @kind object;
  #L25f746.  call temp:= `contains`(v3, v4) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L25f74c.  v4:= temp;
  #L25f74e.  if v4 == 0 then goto L25f712;
  #L25f752.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L25f758.  goto L25f712;
  #L25f75a.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L25f760.  v1:= temp @kind object;
  #L25f762.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L25f768.  v2:= temp;
  #L25f76a.  if v2 == 0 then goto L25f794;
  #L25f76e.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L25f774.  v2:= temp @kind object;
  #L25f776.  v2:= (`java.lang.String`) v2 @kind object;
  #L25f77a.  v3:= new `java.io.File`;
  #L25f77e.  call `<init>`(v3, v2) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25f784.  call temp:= `getClassLoader`(v6) @signature `Landroid/content/Context;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L25f78a.  v2:= temp @kind object;
  #L25f78c.  call `scanForModelClasses`(v5, v3, v0, v2) @signature `Lcom/activeandroid/ModelInfo;.scanForModelClasses:(Ljava/io/File;Ljava/lang/String;Ljava/lang/ClassLoader;)V` @kind direct;
  #L25f792.  goto L25f762;
  #L25f794.  return @kind void;
}
procedure `void` `scanForModelClasses`(`com.activeandroid.ModelInfo` v3 @kind this, `java.io.File` v4 @kind object, `java.lang.String` v5 @kind object, `java.lang.ClassLoader` v6 @kind object) @signature `Lcom/activeandroid/ModelInfo;.scanForModelClasses:(Ljava/io/File;Ljava/lang/String;Ljava/lang/ClassLoader;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L25f7a8.  call temp:= `isDirectory`(v4) @signature `Ljava/io/File;.isDirectory:()Z` @kind virtual;
  #L25f7ae.  v0:= temp;
  #L25f7b0.  v1:= 0I;
  #L25f7b2.  if v0 == 0 then goto L25f7d4;
  #L25f7b6.  call temp:= `listFiles`(v4) @signature `Ljava/io/File;.listFiles:()[Ljava/io/File;` @kind virtual;
  #L25f7bc.  v4:= temp @kind object;
  #L25f7be.  v0:= length @variable v4;
  #L25f7c0.  if v1 >= v0 then goto L25f8cc;
  #L25f7c4.  v2:= v4[v1] @kind object;
  #L25f7c8.  call `scanForModelClasses`(v3, v2, v5, v6) @signature `Lcom/activeandroid/ModelInfo;.scanForModelClasses:(Ljava/io/File;Ljava/lang/String;Ljava/lang/ClassLoader;)V` @kind direct;
  #L25f7ce.  v1:= v1 + 1;
  #L25f7d2.  goto L25f7c0;
  #L25f7d4.  call temp:= `getName`(v4) @signature `Ljava/io/File;.getName:()Ljava/lang/String;` @kind virtual;
  #L25f7da.  v0:= temp @kind object;
  #L25f7dc.  call temp:= `getPath`(v4) @signature `Ljava/io/File;.getPath:()Ljava/lang/String;` @kind virtual;
  #L25f7e2.  v2:= temp @kind object;
  #L25f7e4.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L25f7ea.  v2:= temp;
  #L25f7ec.  if v2 != 0 then goto L25f84e;
  #L25f7f0.  call temp:= `getPath`(v4) @signature `Ljava/io/File;.getPath:()Ljava/lang/String;` @kind virtual;
  #L25f7f6.  v4:= temp @kind object;
  #L25f7f8.  v0:= ".class" @kind object;
  #L25f7fc.  call temp:= `endsWith`(v4, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L25f802.  v0:= temp;
  #L25f804.  if v0 == 0 then goto L25f84c;
  #L25f808.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L25f80e.  v0:= temp;
  #L25f810.  v0:= v0 + -6;
  #L25f814.  call temp:= `substring`(v4, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L25f81a.  v4:= temp @kind object;
  #L25f81c.  v0:= "file.separator" @kind object;
  #L25f820.  call temp:= `getProperty`(v0) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L25f826.  v0:= temp @kind object;
  #L25f828.  v2:= "." @kind object;
  #L25f82c.  call temp:= `replace`(v4, v0, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L25f832.  v4:= temp @kind object;
  #L25f834.  call temp:= `lastIndexOf`(v4, v5) @signature `Ljava/lang/String;.lastIndexOf:(Ljava/lang/String;)I` @kind virtual;
  #L25f83a.  v5:= temp;
  #L25f83c.  if v5 >= 0 then goto L25f842;
  #L25f840.  return @kind void;
  #L25f842.  call temp:= `substring`(v4, v5) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L25f848.  v0:= temp @kind object;
  #L25f84a.  goto L25f84e;
  #L25f84c.  return @kind void;
  #L25f84e.  call temp:= `forName`(v0, v1, v6) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L25f854.  v4:= temp @kind object;
  #L25f856.  call temp:= `isModel`(v4) @signature `Lcom/activeandroid/util/ReflectionUtils;.isModel:(Ljava/lang/Class;)Z` @kind static;
  #L25f85c.  v5:= temp;
  #L25f85e.  if v5 == 0 then goto L25f878;
  #L25f862.  v5:= v3.`com.activeandroid.ModelInfo.mTableInfos` @type ^`java.util.Map` @kind object;
  #L25f866.  v6:= new `com.activeandroid.TableInfo`;
  #L25f86a.  call `<init>`(v6, v4) @signature `Lcom/activeandroid/TableInfo;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L25f870.  call temp:= `put`(v5, v4, v6) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L25f876.  goto L25f8cc;
  #L25f878.  call temp:= `isTypeSerializer`(v4) @signature `Lcom/activeandroid/util/ReflectionUtils;.isTypeSerializer:(Ljava/lang/Class;)Z` @kind static;
  #L25f87e.  v5:= temp;
  #L25f880.  if v5 == 0 then goto L25f8cc;
  #L25f884.  call temp:= `newInstance`(v4) @signature `Ljava/lang/Class;.newInstance:()Ljava/lang/Object;` @kind virtual;
  #L25f88a.  v4:= temp @kind object;
  #L25f88c.  v4:= (`com.activeandroid.serializer.TypeSerializer`) v4 @kind object;
  #L25f890.  v5:= v3.`com.activeandroid.ModelInfo.mTypeSerializers` @type ^`java.util.Map` @kind object;
  #L25f894.  call temp:= `getDeserializedType`(v4) @signature `Lcom/activeandroid/serializer/TypeSerializer;.getDeserializedType:()Ljava/lang/Class;` @kind virtual;
  #L25f89a.  v6:= temp @kind object;
  #L25f89c.  call temp:= `put`(v5, v6, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L25f8a2.  goto L25f8cc;
  #L25f8a4.  v4:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L25f8a6.  v5:= "IllegalAccessException" @kind object;
  #L25f8aa.  call temp:= `e`(v5, v4) @signature `Lcom/activeandroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L25f8b0.  goto L25f8cc;
  #L25f8b2.  v4:= Exception @type ^`java.lang.InstantiationException` @kind object;
  #L25f8b4.  v5:= "Couldn't instantiate TypeSerializer." @kind object;
  #L25f8b8.  call temp:= `e`(v5, v4) @signature `Lcom/activeandroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L25f8be.  goto L25f8cc;
  #L25f8c0.  v4:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L25f8c2.  v5:= "Couldn't create class." @kind object;
  #L25f8c6.  call temp:= `e`(v5, v4) @signature `Lcom/activeandroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L25f8cc.  return @kind void;
  catch `java.lang.ClassNotFoundException` @[L25f84e..L25f8a2] goto L25f8c0;
  catch `java.lang.InstantiationException` @[L25f84e..L25f8a2] goto L25f8b2;
  catch `java.lang.IllegalAccessException` @[L25f84e..L25f8a2] goto L25f8a4;
}
procedure `com.activeandroid.TableInfo` `getTableInfo`(`com.activeandroid.ModelInfo` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/activeandroid/ModelInfo;.getTableInfo:(Ljava/lang/Class;)Lcom/activeandroid/TableInfo;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25f5b0.  v0:= v1.`com.activeandroid.ModelInfo.mTableInfos` @type ^`java.util.Map` @kind object;
  #L25f5b4.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L25f5ba.  v2:= temp @kind object;
  #L25f5bc.  v2:= (`com.activeandroid.TableInfo`) v2 @kind object;
  #L25f5c0.  return v2 @kind object;
}
procedure `java.util.Collection` `getTableInfos`(`com.activeandroid.ModelInfo` v1 @kind this) @signature `Lcom/activeandroid/ModelInfo;.getTableInfos:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25f5f8.  v0:= v1.`com.activeandroid.ModelInfo.mTableInfos` @type ^`java.util.Map` @kind object;
  #L25f5fc.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L25f602.  v0:= temp @kind object;
  #L25f604.  return v0 @kind object;
}
procedure `com.activeandroid.serializer.TypeSerializer` `getTypeSerializer`(`com.activeandroid.ModelInfo` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/activeandroid/ModelInfo;.getTypeSerializer:(Ljava/lang/Class;)Lcom/activeandroid/serializer/TypeSerializer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25f5d4.  v0:= v1.`com.activeandroid.ModelInfo.mTypeSerializers` @type ^`java.util.Map` @kind object;
  #L25f5d8.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L25f5de.  v2:= temp @kind object;
  #L25f5e0.  v2:= (`com.activeandroid.serializer.TypeSerializer`) v2 @kind object;
  #L25f5e4.  return v2 @kind object;
}
