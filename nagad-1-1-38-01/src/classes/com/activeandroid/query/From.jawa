record `com.activeandroid.query.From` @kind class @AccessFlag PUBLIC_FINAL extends `com.activeandroid.query.Sqlable` @kind interface {
  `java.lang.String` `com.activeandroid.query.From.mAlias` @AccessFlag PRIVATE;
  `java.util.List` `com.activeandroid.query.From.mArguments` @AccessFlag PRIVATE;
  `java.lang.String` `com.activeandroid.query.From.mGroupBy` @AccessFlag PRIVATE;
  `java.lang.String` `com.activeandroid.query.From.mHaving` @AccessFlag PRIVATE;
  `java.util.List` `com.activeandroid.query.From.mJoins` @AccessFlag PRIVATE;
  `java.lang.String` `com.activeandroid.query.From.mLimit` @AccessFlag PRIVATE;
  `java.lang.String` `com.activeandroid.query.From.mOffset` @AccessFlag PRIVATE;
  `java.lang.String` `com.activeandroid.query.From.mOrderBy` @AccessFlag PRIVATE;
  `com.activeandroid.query.Sqlable` `com.activeandroid.query.From.mQueryBase` @AccessFlag PRIVATE;
  `java.lang.Class` `com.activeandroid.query.From.mType` @AccessFlag PRIVATE;
  `java.lang.StringBuilder` `com.activeandroid.query.From.mWhere` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.activeandroid.query.From` v1 @kind this, `java.lang.Class` v2 @kind object, `com.activeandroid.query.Sqlable` v3 @kind object) @signature `Lcom/activeandroid/query/From;.<init>:(Ljava/lang/Class;Lcom/activeandroid/query/Sqlable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L261354.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L26135a.  v0:= new `java.lang.StringBuilder`;
  #L26135e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L261364.  v1.`com.activeandroid.query.From.mWhere` @type ^`java.lang.StringBuilder` := v0 @kind object;
  #L261368.  v1.`com.activeandroid.query.From.mType` @type ^`java.lang.Class` := v2 @kind object;
  #L26136c.  v2:= new `java.util.ArrayList`;
  #L261370.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L261376.  v1.`com.activeandroid.query.From.mJoins` @type ^`java.util.List` := v2 @kind object;
  #L26137a.  v1.`com.activeandroid.query.From.mQueryBase` @type ^`com.activeandroid.query.Sqlable` := v3 @kind object;
  #L26137e.  v2:= new `java.util.ArrayList`;
  #L261382.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L261388.  v1.`com.activeandroid.query.From.mJoins` @type ^`java.util.List` := v2 @kind object;
  #L26138c.  v2:= new `java.util.ArrayList`;
  #L261390.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L261396.  v1.`com.activeandroid.query.From.mArguments` @type ^`java.util.List` := v2 @kind object;
  #L26139a.  return @kind void;
}
procedure `void` `addFrom`(`com.activeandroid.query.From` v2 @kind this, `java.lang.StringBuilder` v3 @kind object) @signature `Lcom/activeandroid/query/From;.addFrom:(Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L261414.  v0:= "FROM " @kind object;
  #L261418.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26141e.  v0:= v2.`com.activeandroid.query.From.mType` @type ^`java.lang.Class` @kind object;
  #L261422.  call temp:= `getTableName`(v0) @signature `Lcom/activeandroid/Cache;.getTableName:(Ljava/lang/Class;)Ljava/lang/String;` @kind static;
  #L261428.  v0:= temp @kind object;
  #L26142a.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L261430.  v0:= " " @kind object;
  #L261434.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26143a.  v1:= v2.`com.activeandroid.query.From.mAlias` @type ^`java.lang.String` @kind object;
  #L26143e.  if v1 == 0 then goto L26145c;
  #L261442.  v1:= "AS " @kind object;
  #L261446.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26144c.  v1:= v2.`com.activeandroid.query.From.mAlias` @type ^`java.lang.String` @kind object;
  #L261450.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L261456.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26145c.  return @kind void;
}
procedure `void` `addGroupBy`(`com.activeandroid.query.From` v1 @kind this, `java.lang.StringBuilder` v2 @kind object) @signature `Lcom/activeandroid/query/From;.addGroupBy:(Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L261470.  v0:= v1.`com.activeandroid.query.From.mGroupBy` @type ^`java.lang.String` @kind object;
  #L261474.  if v0 == 0 then goto L261496;
  #L261478.  v0:= "GROUP BY " @kind object;
  #L26147c.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L261482.  v0:= v1.`com.activeandroid.query.From.mGroupBy` @type ^`java.lang.String` @kind object;
  #L261486.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26148c.  v0:= " " @kind object;
  #L261490.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L261496.  return @kind void;
}
procedure `void` `addHaving`(`com.activeandroid.query.From` v1 @kind this, `java.lang.StringBuilder` v2 @kind object) @signature `Lcom/activeandroid/query/From;.addHaving:(Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2614a8.  v0:= v1.`com.activeandroid.query.From.mHaving` @type ^`java.lang.String` @kind object;
  #L2614ac.  if v0 == 0 then goto L2614ce;
  #L2614b0.  v0:= "HAVING " @kind object;
  #L2614b4.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2614ba.  v0:= v1.`com.activeandroid.query.From.mHaving` @type ^`java.lang.String` @kind object;
  #L2614be.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2614c4.  v0:= " " @kind object;
  #L2614c8.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2614ce.  return @kind void;
}
procedure `void` `addJoins`(`com.activeandroid.query.From` v2 @kind this, `java.lang.StringBuilder` v3 @kind object) @signature `Lcom/activeandroid/query/From;.addJoins:(Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2614e0.  v0:= v2.`com.activeandroid.query.From.mJoins` @type ^`java.util.List` @kind object;
  #L2614e4.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2614ea.  v0:= temp @kind object;
  #L2614ec.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2614f2.  v1:= temp;
  #L2614f4.  if v1 == 0 then goto L261514;
  #L2614f8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2614fe.  v1:= temp @kind object;
  #L261500.  v1:= (`com.activeandroid.query.Join`) v1 @kind object;
  #L261504.  call temp:= `toSql`(v1) @signature `Lcom/activeandroid/query/Join;.toSql:()Ljava/lang/String;` @kind virtual;
  #L26150a.  v1:= temp @kind object;
  #L26150c.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L261512.  goto L2614ec;
  #L261514.  return @kind void;
}
procedure `void` `addLimit`(`com.activeandroid.query.From` v1 @kind this, `java.lang.StringBuilder` v2 @kind object) @signature `Lcom/activeandroid/query/From;.addLimit:(Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L261528.  v0:= v1.`com.activeandroid.query.From.mLimit` @type ^`java.lang.String` @kind object;
  #L26152c.  if v0 == 0 then goto L26154e;
  #L261530.  v0:= "LIMIT " @kind object;
  #L261534.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26153a.  v0:= v1.`com.activeandroid.query.From.mLimit` @type ^`java.lang.String` @kind object;
  #L26153e.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L261544.  v0:= " " @kind object;
  #L261548.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26154e.  return @kind void;
}
procedure `void` `addOffset`(`com.activeandroid.query.From` v1 @kind this, `java.lang.StringBuilder` v2 @kind object) @signature `Lcom/activeandroid/query/From;.addOffset:(Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L261560.  v0:= v1.`com.activeandroid.query.From.mOffset` @type ^`java.lang.String` @kind object;
  #L261564.  if v0 == 0 then goto L261586;
  #L261568.  v0:= "OFFSET " @kind object;
  #L26156c.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L261572.  v0:= v1.`com.activeandroid.query.From.mOffset` @type ^`java.lang.String` @kind object;
  #L261576.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26157c.  v0:= " " @kind object;
  #L261580.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L261586.  return @kind void;
}
procedure `void` `addOrderBy`(`com.activeandroid.query.From` v1 @kind this, `java.lang.StringBuilder` v2 @kind object) @signature `Lcom/activeandroid/query/From;.addOrderBy:(Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L261598.  v0:= v1.`com.activeandroid.query.From.mOrderBy` @type ^`java.lang.String` @kind object;
  #L26159c.  if v0 == 0 then goto L2615be;
  #L2615a0.  v0:= "ORDER BY " @kind object;
  #L2615a4.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2615aa.  v0:= v1.`com.activeandroid.query.From.mOrderBy` @type ^`java.lang.String` @kind object;
  #L2615ae.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2615b4.  v0:= " " @kind object;
  #L2615b8.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2615be.  return @kind void;
}
procedure `void` `addWhere`(`com.activeandroid.query.From` v1 @kind this, `java.lang.StringBuilder` v2 @kind object) @signature `Lcom/activeandroid/query/From;.addWhere:(Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2615d0.  v0:= v1.`com.activeandroid.query.From.mWhere` @type ^`java.lang.StringBuilder` @kind object;
  #L2615d4.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L2615da.  v0:= temp;
  #L2615dc.  if v0 <= 0 then goto L2615fe;
  #L2615e0.  v0:= "WHERE " @kind object;
  #L2615e4.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2615ea.  v0:= v1.`com.activeandroid.query.From.mWhere` @type ^`java.lang.StringBuilder` @kind object;
  #L2615ee.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2615f4.  v0:= " " @kind object;
  #L2615f8.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2615fe.  return @kind void;
}
procedure `java.lang.String` `sqlString`(`com.activeandroid.query.From` v3 @kind this, `java.lang.StringBuilder` v4 @kind object) @signature `Lcom/activeandroid/query/From;.sqlString:(Ljava/lang/StringBuilder;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L261100.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L261106.  v4:= temp @kind object;
  #L261108.  call temp:= `trim`(v4) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L26110e.  v4:= temp @kind object;
  #L261110.  call temp:= `isEnabled`() @signature `Lcom/activeandroid/util/Log;.isEnabled:()Z` @kind static;
  #L261116.  v0:= temp;
  #L261118.  if v0 == 0 then goto L26115e;
  #L26111c.  v0:= new `java.lang.StringBuilder`;
  #L261120.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L261126.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26112c.  v1:= " " @kind object;
  #L261130.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L261136.  call temp:= `getArguments`(v3) @signature `Lcom/activeandroid/query/From;.getArguments:()[Ljava/lang/String;` @kind virtual;
  #L26113c.  v1:= temp @kind object;
  #L26113e.  v2:= "," @kind object;
  #L261142.  call temp:= `join`(v2, v1) @signature `Landroid/text/TextUtils;.join:(Ljava/lang/CharSequence;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L261148.  v1:= temp @kind object;
  #L26114a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L261150.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L261156.  v0:= temp @kind object;
  #L261158.  call temp:= `v`(v0) @signature `Lcom/activeandroid/util/Log;.v:(Ljava/lang/String;)I` @kind static;
  #L26115e.  return v4 @kind object;
}
procedure `void` `addArguments`(`com.activeandroid.query.From` v5 @kind this, `java.lang.Object`[] v6 @kind object) @signature `Lcom/activeandroid/query/From;.addArguments:([Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2613ac.  v0:= length @variable v6;
  #L2613ae.  v1:= 0I;
  #L2613b0.  if v1 >= v0 then goto L261402;
  #L2613b4.  v2:= v6[v1] @kind object;
  #L2613b8.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2613be.  v3:= temp @kind object;
  #L2613c0.  v4:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L2613c4.  if v3 == v4 then goto L2613d8;
  #L2613c8.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2613ce.  v3:= temp @kind object;
  #L2613d0.  v4:= constclass @type ^`java.lang.Boolean` @kind object;
  #L2613d4.  if v3 != v4 then goto L2613f2;
  #L2613d8.  v3:= 1I;
  #L2613da.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L2613e0.  v3:= temp @kind object;
  #L2613e2.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2613e8.  v2:= temp;
  #L2613ea.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2613f0.  v2:= temp @kind object;
  #L2613f2.  v3:= v5.`com.activeandroid.query.From.mArguments` @type ^`java.util.List` @kind object;
  #L2613f6.  call temp:= `add`(v3, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2613fc.  v1:= v1 + 1;
  #L261400.  goto L2613b0;
  #L261402.  return @kind void;
}
procedure `com.activeandroid.query.From` `and`(`com.activeandroid.query.From` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/activeandroid/query/From;.and:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;

  #L260e34.  call temp:= `where`(v0, v1) @signature `Lcom/activeandroid/query/From;.where:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @kind virtual;
  #L260e3a.  v1:= temp @kind object;
  #L260e3c.  return v1 @kind object;
}
procedure `com.activeandroid.query.From` `and`(`com.activeandroid.query.From` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lcom/activeandroid/query/From;.and:(Ljava/lang/String;[Ljava/lang/Object;)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;

  #L260e50.  call temp:= `where`(v0, v1, v2) @signature `Lcom/activeandroid/query/From;.where:(Ljava/lang/String;[Ljava/lang/Object;)Lcom/activeandroid/query/From;` @kind virtual;
  #L260e56.  v1:= temp @kind object;
  #L260e58.  return v1 @kind object;
}
procedure `com.activeandroid.query.From` `as`(`com.activeandroid.query.From` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/activeandroid/query/From;.as:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;

  #L260e6c.  v0.`com.activeandroid.query.From.mAlias` @type ^`java.lang.String` := v1 @kind object;
  #L260e70.  return v0 @kind object;
}
procedure `int` `count`(`com.activeandroid.query.From` v2 @kind this) @signature `Lcom/activeandroid/query/From;.count:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2610d4.  call temp:= `toCountSql`(v2) @signature `Lcom/activeandroid/query/From;.toCountSql:()Ljava/lang/String;` @kind virtual;
  #L2610da.  v0:= temp @kind object;
  #L2610dc.  call temp:= `getArguments`(v2) @signature `Lcom/activeandroid/query/From;.getArguments:()[Ljava/lang/String;` @kind virtual;
  #L2610e2.  v1:= temp @kind object;
  #L2610e4.  call temp:= `intQuery`(v0, v1) @signature `Lcom/activeandroid/util/SQLiteUtils;.intQuery:(Ljava/lang/String;[Ljava/lang/String;)I` @kind static;
  #L2610ea.  v0:= temp;
  #L2610ec.  return v0;
}
procedure `com.activeandroid.query.Join` `crossJoin`(`com.activeandroid.query.From` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lcom/activeandroid/query/From;.crossJoin:(Ljava/lang/Class;)Lcom/activeandroid/query/Join;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L260ffc.  v0:= new `com.activeandroid.query.Join`;
  #L261000.  v1:= `@@com.activeandroid.query.Join$JoinType.CROSS` @type ^`com.activeandroid.query.Join$JoinType` @kind object;
  #L261004.  call `<init>`(v0, v2, v3, v1) @signature `Lcom/activeandroid/query/Join;.<init>:(Lcom/activeandroid/query/From;Ljava/lang/Class;Lcom/activeandroid/query/Join$JoinType;)V` @kind direct;
  #L26100a.  v3:= v2.`com.activeandroid.query.From.mJoins` @type ^`java.util.List` @kind object;
  #L26100e.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L261014.  return v0 @kind object;
}
procedure `java.util.List` `execute`(`com.activeandroid.query.From` v3 @kind this) @signature `Lcom/activeandroid/query/From;.execute:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2612dc.  v0:= v3.`com.activeandroid.query.From.mQueryBase` @type ^`com.activeandroid.query.Sqlable` @kind object;
  #L2612e0.  v0:= instanceof @variable v0 @type ^`com.activeandroid.query.Select` @kind boolean;
  #L2612e4.  if v0 == 0 then goto L261306;
  #L2612e8.  v0:= v3.`com.activeandroid.query.From.mType` @type ^`java.lang.Class` @kind object;
  #L2612ec.  call temp:= `toSql`(v3) @signature `Lcom/activeandroid/query/From;.toSql:()Ljava/lang/String;` @kind virtual;
  #L2612f2.  v1:= temp @kind object;
  #L2612f4.  call temp:= `getArguments`(v3) @signature `Lcom/activeandroid/query/From;.getArguments:()[Ljava/lang/String;` @kind virtual;
  #L2612fa.  v2:= temp @kind object;
  #L2612fc.  call temp:= `rawQuery`(v0, v1, v2) @signature `Lcom/activeandroid/util/SQLiteUtils;.rawQuery:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L261302.  v0:= temp @kind object;
  #L261304.  return v0 @kind object;
  #L261306.  call temp:= `toSql`(v3) @signature `Lcom/activeandroid/query/From;.toSql:()Ljava/lang/String;` @kind virtual;
  #L26130c.  v0:= temp @kind object;
  #L26130e.  call temp:= `getArguments`(v3) @signature `Lcom/activeandroid/query/From;.getArguments:()[Ljava/lang/String;` @kind virtual;
  #L261314.  v1:= temp @kind object;
  #L261316.  call `execSql`(v0, v1) @signature `Lcom/activeandroid/util/SQLiteUtils;.execSql:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind static;
  #L26131c.  call temp:= `getContext`() @signature `Lcom/activeandroid/Cache;.getContext:()Landroid/content/Context;` @kind static;
  #L261322.  v0:= temp @kind object;
  #L261324.  call temp:= `getContentResolver`(v0) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L26132a.  v0:= temp @kind object;
  #L26132c.  v1:= v3.`com.activeandroid.query.From.mType` @type ^`java.lang.Class` @kind object;
  #L261330.  v2:= 0I;
  #L261332.  call temp:= `createUri`(v1, v2) @signature `Lcom/activeandroid/content/ContentProvider;.createUri:(Ljava/lang/Class;Ljava/lang/Long;)Landroid/net/Uri;` @kind static;
  #L261338.  v1:= temp @kind object;
  #L26133a.  call `notifyChange`(v0, v1, v2) @signature `Landroid/content/ContentResolver;.notifyChange:(Landroid/net/Uri;Landroid/database/ContentObserver;)V` @kind virtual;
  #L261340.  return v2 @kind object;
}
procedure `com.activeandroid.Model` `executeSingle`(`com.activeandroid.query.From` v3 @kind this) @signature `Lcom/activeandroid/query/From;.executeSingle:()Lcom/activeandroid/Model;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L260dc4.  v0:= v3.`com.activeandroid.query.From.mQueryBase` @type ^`com.activeandroid.query.Sqlable` @kind object;
  #L260dc8.  v0:= instanceof @variable v0 @type ^`com.activeandroid.query.Select` @kind boolean;
  #L260dcc.  v1:= 1I;
  #L260dce.  if v0 == 0 then goto L260df6;
  #L260dd2.  call temp:= `limit`(v3, v1) @signature `Lcom/activeandroid/query/From;.limit:(I)Lcom/activeandroid/query/From;` @kind virtual;
  #L260dd8.  v0:= v3.`com.activeandroid.query.From.mType` @type ^`java.lang.Class` @kind object;
  #L260ddc.  call temp:= `toSql`(v3) @signature `Lcom/activeandroid/query/From;.toSql:()Ljava/lang/String;` @kind virtual;
  #L260de2.  v1:= temp @kind object;
  #L260de4.  call temp:= `getArguments`(v3) @signature `Lcom/activeandroid/query/From;.getArguments:()[Ljava/lang/String;` @kind virtual;
  #L260dea.  v2:= temp @kind object;
  #L260dec.  call temp:= `rawQuerySingle`(v0, v1, v2) @signature `Lcom/activeandroid/util/SQLiteUtils;.rawQuerySingle:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/String;)Lcom/activeandroid/Model;` @kind static;
  #L260df2.  v0:= temp @kind object;
  #L260df4.  return v0 @kind object;
  #L260df6.  call temp:= `limit`(v3, v1) @signature `Lcom/activeandroid/query/From;.limit:(I)Lcom/activeandroid/query/From;` @kind virtual;
  #L260dfc.  v0:= v3.`com.activeandroid.query.From.mType` @type ^`java.lang.Class` @kind object;
  #L260e00.  call temp:= `toSql`(v3) @signature `Lcom/activeandroid/query/From;.toSql:()Ljava/lang/String;` @kind virtual;
  #L260e06.  v1:= temp @kind object;
  #L260e08.  call temp:= `getArguments`(v3) @signature `Lcom/activeandroid/query/From;.getArguments:()[Ljava/lang/String;` @kind virtual;
  #L260e0e.  v2:= temp @kind object;
  #L260e10.  call temp:= `rawQuerySingle`(v0, v1, v2) @signature `Lcom/activeandroid/util/SQLiteUtils;.rawQuerySingle:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/String;)Lcom/activeandroid/Model;` @kind static;
  #L260e16.  v0:= temp @kind object;
  #L260e18.  call `delete`(v0) @signature `Lcom/activeandroid/Model;.delete:()V` @kind virtual;
  #L260e1e.  v0:= 0I;
  #L260e20.  return v0 @kind object;
}
procedure `boolean` `exists`(`com.activeandroid.query.From` v2 @kind this) @signature `Lcom/activeandroid/query/From;.exists:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L260d90.  call temp:= `toExistsSql`(v2) @signature `Lcom/activeandroid/query/From;.toExistsSql:()Ljava/lang/String;` @kind virtual;
  #L260d96.  v0:= temp @kind object;
  #L260d98.  call temp:= `getArguments`(v2) @signature `Lcom/activeandroid/query/From;.getArguments:()[Ljava/lang/String;` @kind virtual;
  #L260d9e.  v1:= temp @kind object;
  #L260da0.  call temp:= `intQuery`(v0, v1) @signature `Lcom/activeandroid/util/SQLiteUtils;.intQuery:(Ljava/lang/String;[Ljava/lang/String;)I` @kind static;
  #L260da6.  v0:= temp;
  #L260da8.  if v0 == 0 then goto L260db0;
  #L260dac.  v0:= 1I;
  #L260dae.  goto L260db2;
  #L260db0.  v0:= 0I;
  #L260db2.  return v0;
}
procedure `java.lang.String`[] `getArguments`(`com.activeandroid.query.From` v4 @kind this) @signature `Lcom/activeandroid/query/From;.getArguments:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L261294.  v0:= v4.`com.activeandroid.query.From.mArguments` @type ^`java.util.List` @kind object;
  #L261298.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L26129e.  v0:= temp;
  #L2612a0.  v1:= new `java.lang.String`[v0];
  #L2612a4.  v2:= 0I;
  #L2612a6.  if v2 >= v0 then goto L2612c8;
  #L2612aa.  v3:= v4.`com.activeandroid.query.From.mArguments` @type ^`java.util.List` @kind object;
  #L2612ae.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2612b4.  v3:= temp @kind object;
  #L2612b6.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2612bc.  v3:= temp @kind object;
  #L2612be.  v1[v2]:= v3 @kind object;
  #L2612c2.  v2:= v2 + 1;
  #L2612c6.  goto L2612a6;
  #L2612c8.  return v1 @kind object;
}
procedure `com.activeandroid.query.From` `groupBy`(`com.activeandroid.query.From` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/activeandroid/query/From;.groupBy:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;

  #L260e84.  v0.`com.activeandroid.query.From.mGroupBy` @type ^`java.lang.String` := v1 @kind object;
  #L260e88.  return v0 @kind object;
}
procedure `com.activeandroid.query.From` `having`(`com.activeandroid.query.From` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/activeandroid/query/From;.having:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;

  #L260e9c.  v0.`com.activeandroid.query.From.mHaving` @type ^`java.lang.String` := v1 @kind object;
  #L260ea0.  return v0 @kind object;
}
procedure `com.activeandroid.query.Join` `innerJoin`(`com.activeandroid.query.From` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lcom/activeandroid/query/From;.innerJoin:(Ljava/lang/Class;)Lcom/activeandroid/query/Join;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L261028.  v0:= new `com.activeandroid.query.Join`;
  #L26102c.  v1:= `@@com.activeandroid.query.Join$JoinType.INNER` @type ^`com.activeandroid.query.Join$JoinType` @kind object;
  #L261030.  call `<init>`(v0, v2, v3, v1) @signature `Lcom/activeandroid/query/Join;.<init>:(Lcom/activeandroid/query/From;Ljava/lang/Class;Lcom/activeandroid/query/Join$JoinType;)V` @kind direct;
  #L261036.  v3:= v2.`com.activeandroid.query.From.mJoins` @type ^`java.util.List` @kind object;
  #L26103a.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L261040.  return v0 @kind object;
}
procedure `com.activeandroid.query.Join` `join`(`com.activeandroid.query.From` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lcom/activeandroid/query/From;.join:(Ljava/lang/Class;)Lcom/activeandroid/query/Join;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L261054.  v0:= new `com.activeandroid.query.Join`;
  #L261058.  v1:= 0I;
  #L26105a.  call `<init>`(v0, v2, v3, v1) @signature `Lcom/activeandroid/query/Join;.<init>:(Lcom/activeandroid/query/From;Ljava/lang/Class;Lcom/activeandroid/query/Join$JoinType;)V` @kind direct;
  #L261060.  v3:= v2.`com.activeandroid.query.From.mJoins` @type ^`java.util.List` @kind object;
  #L261064.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L26106a.  return v0 @kind object;
}
procedure `com.activeandroid.query.Join` `leftJoin`(`com.activeandroid.query.From` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lcom/activeandroid/query/From;.leftJoin:(Ljava/lang/Class;)Lcom/activeandroid/query/Join;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L26107c.  v0:= new `com.activeandroid.query.Join`;
  #L261080.  v1:= `@@com.activeandroid.query.Join$JoinType.LEFT` @type ^`com.activeandroid.query.Join$JoinType` @kind object;
  #L261084.  call `<init>`(v0, v2, v3, v1) @signature `Lcom/activeandroid/query/Join;.<init>:(Lcom/activeandroid/query/From;Ljava/lang/Class;Lcom/activeandroid/query/Join$JoinType;)V` @kind direct;
  #L26108a.  v3:= v2.`com.activeandroid.query.From.mJoins` @type ^`java.util.List` @kind object;
  #L26108e.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L261094.  return v0 @kind object;
}
procedure `com.activeandroid.query.From` `limit`(`com.activeandroid.query.From` v0 @kind this, `int` v1 ) @signature `Lcom/activeandroid/query/From;.limit:(I)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;

  #L260eb4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L260eba.  v1:= temp @kind object;
  #L260ebc.  call temp:= `limit`(v0, v1) @signature `Lcom/activeandroid/query/From;.limit:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @kind virtual;
  #L260ec2.  v1:= temp @kind object;
  #L260ec4.  return v1 @kind object;
}
procedure `com.activeandroid.query.From` `limit`(`com.activeandroid.query.From` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/activeandroid/query/From;.limit:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;

  #L260ed8.  v0.`com.activeandroid.query.From.mLimit` @type ^`java.lang.String` := v1 @kind object;
  #L260edc.  return v0 @kind object;
}
procedure `com.activeandroid.query.From` `offset`(`com.activeandroid.query.From` v0 @kind this, `int` v1 ) @signature `Lcom/activeandroid/query/From;.offset:(I)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;

  #L260ef0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L260ef6.  v1:= temp @kind object;
  #L260ef8.  call temp:= `offset`(v0, v1) @signature `Lcom/activeandroid/query/From;.offset:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @kind virtual;
  #L260efe.  v1:= temp @kind object;
  #L260f00.  return v1 @kind object;
}
procedure `com.activeandroid.query.From` `offset`(`com.activeandroid.query.From` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/activeandroid/query/From;.offset:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;

  #L260f14.  v0.`com.activeandroid.query.From.mOffset` @type ^`java.lang.String` := v1 @kind object;
  #L260f18.  return v0 @kind object;
}
procedure `com.activeandroid.query.From` `or`(`com.activeandroid.query.From` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/activeandroid/query/From;.or:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L260f2c.  v0:= v2.`com.activeandroid.query.From.mWhere` @type ^`java.lang.StringBuilder` @kind object;
  #L260f30.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L260f36.  v0:= temp;
  #L260f38.  if v0 <= 0 then goto L260f4a;
  #L260f3c.  v0:= v2.`com.activeandroid.query.From.mWhere` @type ^`java.lang.StringBuilder` @kind object;
  #L260f40.  v1:= " OR " @kind object;
  #L260f44.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L260f4a.  v0:= v2.`com.activeandroid.query.From.mWhere` @type ^`java.lang.StringBuilder` @kind object;
  #L260f4e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L260f54.  return v2 @kind object;
}
procedure `com.activeandroid.query.From` `or`(`com.activeandroid.query.From` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lcom/activeandroid/query/From;.or:(Ljava/lang/String;[Ljava/lang/Object;)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;

  #L260f68.  call temp:= `or`(v0, v1) @signature `Lcom/activeandroid/query/From;.or:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @kind virtual;
  #L260f6e.  v1:= temp @kind object;
  #L260f70.  call `addArguments`(v1, v2) @signature `Lcom/activeandroid/query/From;.addArguments:([Ljava/lang/Object;)V` @kind virtual;
  #L260f76.  return v0 @kind object;
}
procedure `com.activeandroid.query.From` `orderBy`(`com.activeandroid.query.From` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/activeandroid/query/From;.orderBy:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;

  #L260f88.  v0.`com.activeandroid.query.From.mOrderBy` @type ^`java.lang.String` := v1 @kind object;
  #L260f8c.  return v0 @kind object;
}
procedure `com.activeandroid.query.Join` `outerJoin`(`com.activeandroid.query.From` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lcom/activeandroid/query/From;.outerJoin:(Ljava/lang/Class;)Lcom/activeandroid/query/Join;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2610a8.  v0:= new `com.activeandroid.query.Join`;
  #L2610ac.  v1:= `@@com.activeandroid.query.Join$JoinType.OUTER` @type ^`com.activeandroid.query.Join$JoinType` @kind object;
  #L2610b0.  call `<init>`(v0, v2, v3, v1) @signature `Lcom/activeandroid/query/Join;.<init>:(Lcom/activeandroid/query/From;Ljava/lang/Class;Lcom/activeandroid/query/Join$JoinType;)V` @kind direct;
  #L2610b6.  v3:= v2.`com.activeandroid.query.From.mJoins` @type ^`java.util.List` @kind object;
  #L2610ba.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2610c0.  return v0 @kind object;
}
procedure `java.lang.String` `toCountSql`(`com.activeandroid.query.From` v2 @kind this) @signature `Lcom/activeandroid/query/From;.toCountSql:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L261170.  v0:= new `java.lang.StringBuilder`;
  #L261174.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L26117a.  v1:= "SELECT COUNT(*) " @kind object;
  #L26117e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L261184.  call `addFrom`(v2, v0) @signature `Lcom/activeandroid/query/From;.addFrom:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L26118a.  call `addJoins`(v2, v0) @signature `Lcom/activeandroid/query/From;.addJoins:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L261190.  call `addWhere`(v2, v0) @signature `Lcom/activeandroid/query/From;.addWhere:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L261196.  call `addGroupBy`(v2, v0) @signature `Lcom/activeandroid/query/From;.addGroupBy:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L26119c.  call `addHaving`(v2, v0) @signature `Lcom/activeandroid/query/From;.addHaving:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L2611a2.  call `addLimit`(v2, v0) @signature `Lcom/activeandroid/query/From;.addLimit:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L2611a8.  call `addOffset`(v2, v0) @signature `Lcom/activeandroid/query/From;.addOffset:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L2611ae.  call temp:= `sqlString`(v2, v0) @signature `Lcom/activeandroid/query/From;.sqlString:(Ljava/lang/StringBuilder;)Ljava/lang/String;` @kind direct;
  #L2611b4.  v0:= temp @kind object;
  #L2611b6.  return v0 @kind object;
}
procedure `java.lang.String` `toExistsSql`(`com.activeandroid.query.From` v2 @kind this) @signature `Lcom/activeandroid/query/From;.toExistsSql:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2611c8.  v0:= new `java.lang.StringBuilder`;
  #L2611cc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2611d2.  v1:= "SELECT EXISTS(SELECT 1 " @kind object;
  #L2611d6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2611dc.  call `addFrom`(v2, v0) @signature `Lcom/activeandroid/query/From;.addFrom:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L2611e2.  call `addJoins`(v2, v0) @signature `Lcom/activeandroid/query/From;.addJoins:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L2611e8.  call `addWhere`(v2, v0) @signature `Lcom/activeandroid/query/From;.addWhere:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L2611ee.  call `addGroupBy`(v2, v0) @signature `Lcom/activeandroid/query/From;.addGroupBy:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L2611f4.  call `addHaving`(v2, v0) @signature `Lcom/activeandroid/query/From;.addHaving:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L2611fa.  call `addLimit`(v2, v0) @signature `Lcom/activeandroid/query/From;.addLimit:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L261200.  call `addOffset`(v2, v0) @signature `Lcom/activeandroid/query/From;.addOffset:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L261206.  v1:= ")" @kind object;
  #L26120a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L261210.  call temp:= `sqlString`(v2, v0) @signature `Lcom/activeandroid/query/From;.sqlString:(Ljava/lang/StringBuilder;)Ljava/lang/String;` @kind direct;
  #L261216.  v0:= temp @kind object;
  #L261218.  return v0 @kind object;
}
procedure `java.lang.String` `toSql`(`com.activeandroid.query.From` v2 @kind this) @signature `Lcom/activeandroid/query/From;.toSql:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L26122c.  v0:= new `java.lang.StringBuilder`;
  #L261230.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L261236.  v1:= v2.`com.activeandroid.query.From.mQueryBase` @type ^`com.activeandroid.query.Sqlable` @kind object;
  #L26123a.  call temp:= `toSql`(v1) @signature `Lcom/activeandroid/query/Sqlable;.toSql:()Ljava/lang/String;` @kind interface;
  #L261240.  v1:= temp @kind object;
  #L261242.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L261248.  call `addFrom`(v2, v0) @signature `Lcom/activeandroid/query/From;.addFrom:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L26124e.  call `addJoins`(v2, v0) @signature `Lcom/activeandroid/query/From;.addJoins:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L261254.  call `addWhere`(v2, v0) @signature `Lcom/activeandroid/query/From;.addWhere:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L26125a.  call `addGroupBy`(v2, v0) @signature `Lcom/activeandroid/query/From;.addGroupBy:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L261260.  call `addHaving`(v2, v0) @signature `Lcom/activeandroid/query/From;.addHaving:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L261266.  call `addOrderBy`(v2, v0) @signature `Lcom/activeandroid/query/From;.addOrderBy:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L26126c.  call `addLimit`(v2, v0) @signature `Lcom/activeandroid/query/From;.addLimit:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L261272.  call `addOffset`(v2, v0) @signature `Lcom/activeandroid/query/From;.addOffset:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L261278.  call temp:= `sqlString`(v2, v0) @signature `Lcom/activeandroid/query/From;.sqlString:(Ljava/lang/StringBuilder;)Ljava/lang/String;` @kind direct;
  #L26127e.  v0:= temp @kind object;
  #L261280.  return v0 @kind object;
}
procedure `com.activeandroid.query.From` `where`(`com.activeandroid.query.From` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/activeandroid/query/From;.where:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L260fa0.  v0:= v2.`com.activeandroid.query.From.mWhere` @type ^`java.lang.StringBuilder` @kind object;
  #L260fa4.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L260faa.  v0:= temp;
  #L260fac.  if v0 <= 0 then goto L260fbe;
  #L260fb0.  v0:= v2.`com.activeandroid.query.From.mWhere` @type ^`java.lang.StringBuilder` @kind object;
  #L260fb4.  v1:= " AND " @kind object;
  #L260fb8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L260fbe.  v0:= v2.`com.activeandroid.query.From.mWhere` @type ^`java.lang.StringBuilder` @kind object;
  #L260fc2.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L260fc8.  return v2 @kind object;
}
procedure `com.activeandroid.query.From` `where`(`com.activeandroid.query.From` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lcom/activeandroid/query/From;.where:(Ljava/lang/String;[Ljava/lang/Object;)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;

  #L260fdc.  call temp:= `where`(v0, v1) @signature `Lcom/activeandroid/query/From;.where:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @kind virtual;
  #L260fe2.  v1:= temp @kind object;
  #L260fe4.  call `addArguments`(v1, v2) @signature `Lcom/activeandroid/query/From;.addArguments:([Ljava/lang/Object;)V` @kind virtual;
  #L260fea.  return v0 @kind object;
}
