record `com.activeandroid.util.Tokenizer` @kind class @AccessFlag PUBLIC {
  `int` `com.activeandroid.util.Tokenizer.mCurrent` @AccessFlag PRIVATE;
  `boolean` `com.activeandroid.util.Tokenizer.mIsNext` @AccessFlag PRIVATE;
  `java.io.InputStream` `com.activeandroid.util.Tokenizer.mStream` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.activeandroid.util.Tokenizer` v0 @kind this, `java.io.InputStream` v1 @kind object) @signature `Lcom/activeandroid/util/Tokenizer;.<init>:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L263a14.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L263a1a.  v0.`com.activeandroid.util.Tokenizer.mStream` @type ^`java.io.InputStream` := v1 @kind object;
  #L263a1e.  return @kind void;
}
procedure `boolean` `hasNext`(`com.activeandroid.util.Tokenizer` v3 @kind this) @signature `Lcom/activeandroid/util/Tokenizer;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L26391c.  v0:= v3.`com.activeandroid.util.Tokenizer.mIsNext` @type ^`boolean` @kind boolean;
  #L263920.  v1:= 1I;
  #L263922.  if v0 != 0 then goto L26393a;
  #L263926.  v3.`com.activeandroid.util.Tokenizer.mIsNext` @type ^`boolean` := v1 @kind boolean;
  #L26392a.  v0:= v3.`com.activeandroid.util.Tokenizer.mStream` @type ^`java.io.InputStream` @kind object;
  #L26392e.  call temp:= `read`(v0) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L263934.  v0:= temp;
  #L263936.  v3.`com.activeandroid.util.Tokenizer.mCurrent` @type ^`int` := v0;
  #L26393a.  v0:= v3.`com.activeandroid.util.Tokenizer.mCurrent` @type ^`int`;
  #L26393e.  v2:= -1I;
  #L263940.  if v0 == v2 then goto L263946;
  #L263944.  goto L263948;
  #L263946.  v1:= 0I;
  #L263948.  return v1;
}
procedure `int` `next`(`com.activeandroid.util.Tokenizer` v1 @kind this) @signature `Lcom/activeandroid/util/Tokenizer;.next:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2639e0.  v0:= v1.`com.activeandroid.util.Tokenizer.mIsNext` @type ^`boolean` @kind boolean;
  #L2639e4.  if v0 != 0 then goto L2639f8;
  #L2639e8.  v0:= v1.`com.activeandroid.util.Tokenizer.mStream` @type ^`java.io.InputStream` @kind object;
  #L2639ec.  call temp:= `read`(v0) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L2639f2.  v0:= temp;
  #L2639f4.  v1.`com.activeandroid.util.Tokenizer.mCurrent` @type ^`int` := v0;
  #L2639f8.  v0:= 0I;
  #L2639fa.  v1.`com.activeandroid.util.Tokenizer.mIsNext` @type ^`boolean` := v0 @kind boolean;
  #L2639fe.  v0:= v1.`com.activeandroid.util.Tokenizer.mCurrent` @type ^`int`;
  #L263a02.  return v0;
}
procedure `boolean` `skip`(`com.activeandroid.util.Tokenizer` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lcom/activeandroid/util/Tokenizer;.skip:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L26395c.  v0:= 0I;
  #L26395e.  if v7 == 0 then goto L2639cc;
  #L263962.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L263968.  v1:= temp;
  #L26396a.  if v1 != 0 then goto L263970;
  #L26396e.  goto L2639cc;
  #L263970.  call temp:= `charAt`(v7, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L263976.  v1:= temp;
  #L263978.  v2:= v6.`com.activeandroid.util.Tokenizer.mCurrent` @type ^`int`;
  #L26397c.  if v1 == v2 then goto L263982;
  #L263980.  return v0;
  #L263982.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L263988.  v1:= temp;
  #L26398a.  v2:= v6.`com.activeandroid.util.Tokenizer.mStream` @type ^`java.io.InputStream` @kind object;
  #L26398e.  v3:= v1 + -1;
  #L263992.  call `mark`(v2, v3) @signature `Ljava/io/InputStream;.mark:(I)V` @kind virtual;
  #L263998.  v2:= 1I;
  #L26399a.  v3:= 1I;
  #L26399c.  if v3 >= v1 then goto L2639ca;
  #L2639a0.  v4:= v6.`com.activeandroid.util.Tokenizer.mStream` @type ^`java.io.InputStream` @kind object;
  #L2639a4.  call temp:= `read`(v4) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L2639aa.  v4:= temp;
  #L2639ac.  call temp:= `charAt`(v7, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2639b2.  v5:= temp;
  #L2639b4.  if v4 == v5 then goto L2639c4;
  #L2639b8.  v7:= v6.`com.activeandroid.util.Tokenizer.mStream` @type ^`java.io.InputStream` @kind object;
  #L2639bc.  call `reset`(v7) @signature `Ljava/io/InputStream;.reset:()V` @kind virtual;
  #L2639c2.  return v0;
  #L2639c4.  v3:= v3 + 1;
  #L2639c8.  goto L26399c;
  #L2639ca.  return v2;
  #L2639cc.  return v0;
}
