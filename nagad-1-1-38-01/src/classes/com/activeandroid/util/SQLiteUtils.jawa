record `com.activeandroid.util.SQLiteUtils` @kind class @AccessFlag PUBLIC_FINAL {
}
global `boolean` `@@com.activeandroid.util.SQLiteUtils.FOREIGN_KEYS_SUPPORTED` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.HashMap` `@@com.activeandroid.util.SQLiteUtils.TYPE_MAP` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.HashMap` `@@com.activeandroid.util.SQLiteUtils.sIndexGroupMap` @AccessFlag PRIVATE_STATIC;
global `java.util.HashMap` `@@com.activeandroid.util.SQLiteUtils.sOnUniqueConflictsMap` @AccessFlag PRIVATE_STATIC;
global `java.util.HashMap` `@@com.activeandroid.util.SQLiteUtils.sUniqueGroupMap` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/activeandroid/util/SQLiteUtils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L26350c.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L263510.  v1:= 8I;
  #L263514.  if v0 < v1 then goto L26351c;
  #L263518.  v0:= 1I;
  #L26351a.  goto L26351e;
  #L26351c.  v0:= 0I;
  #L26351e.  `@@com.activeandroid.util.SQLiteUtils.FOREIGN_KEYS_SUPPORTED` @type ^`boolean` := v0 @kind boolean;
  #L263522.  v0:= new `com.activeandroid.util.SQLiteUtils$1`;
  #L263526.  call `<init>`(v0) @signature `Lcom/activeandroid/util/SQLiteUtils$1;.<init>:()V` @kind direct;
  #L26352c.  `@@com.activeandroid.util.SQLiteUtils.TYPE_MAP` @type ^`java.util.HashMap` := v0 @kind object;
  #L263530.  return @kind void;
}
procedure `void` `<init>`(`com.activeandroid.util.SQLiteUtils` v0 @kind this) @signature `Lcom/activeandroid/util/SQLiteUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L263544.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L26354a.  return @kind void;
}
procedure `java.lang.String` `createColumnDefinition`(`com.activeandroid.TableInfo` v7 @kind object, `java.lang.reflect.Field` v8 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.createColumnDefinition:(Lcom/activeandroid/TableInfo;Ljava/lang/reflect/Field;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L262d60.  v0:= new `java.lang.StringBuilder`;
  #L262d64.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L262d6a.  call temp:= `getType`(v8) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L262d70.  v1:= temp @kind object;
  #L262d72.  call temp:= `getColumnName`(v7, v8) @signature `Lcom/activeandroid/TableInfo;.getColumnName:(Ljava/lang/reflect/Field;)Ljava/lang/String;` @kind virtual;
  #L262d78.  v2:= temp @kind object;
  #L262d7a.  call temp:= `getType`(v8) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L262d80.  v3:= temp @kind object;
  #L262d82.  call temp:= `getParserForType`(v3) @signature `Lcom/activeandroid/Cache;.getParserForType:(Ljava/lang/Class;)Lcom/activeandroid/serializer/TypeSerializer;` @kind static;
  #L262d88.  v3:= temp @kind object;
  #L262d8a.  v4:= constclass @type ^`com.activeandroid.annotation.Column` @kind object;
  #L262d8e.  call temp:= `getAnnotation`(v8, v4) @signature `Ljava/lang/reflect/Field;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L262d94.  v8:= temp @kind object;
  #L262d96.  v8:= (`com.activeandroid.annotation.Column`) v8 @kind object;
  #L262d9a.  if v3 == 0 then goto L262da6;
  #L262d9e.  call temp:= `getSerializedType`(v3) @signature `Lcom/activeandroid/serializer/TypeSerializer;.getSerializedType:()Ljava/lang/Class;` @kind virtual;
  #L262da4.  v1:= temp @kind object;
  #L262da6.  v3:= `@@com.activeandroid.util.SQLiteUtils.TYPE_MAP` @type ^`java.util.HashMap` @kind object;
  #L262daa.  call temp:= `containsKey`(v3, v1) @signature `Ljava/util/HashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L262db0.  v3:= temp;
  #L262db2.  v4:= " " @kind object;
  #L262db6.  if v3 == 0 then goto L262de6;
  #L262dba.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262dc0.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262dc6.  v3:= `@@com.activeandroid.util.SQLiteUtils.TYPE_MAP` @type ^`java.util.HashMap` @kind object;
  #L262dca.  call temp:= `get`(v3, v1) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L262dd0.  v3:= temp @kind object;
  #L262dd2.  v3:= (`com.activeandroid.util.SQLiteUtils$SQLiteType`) v3 @kind object;
  #L262dd6.  call temp:= `toString`(v3) @signature `Ljava/lang/Enum;.toString:()Ljava/lang/String;` @kind virtual;
  #L262ddc.  v3:= temp @kind object;
  #L262dde.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262de4.  goto L262e40;
  #L262de6.  call temp:= `isModel`(v1) @signature `Lcom/activeandroid/util/ReflectionUtils;.isModel:(Ljava/lang/Class;)Z` @kind static;
  #L262dec.  v3:= temp;
  #L262dee.  if v3 == 0 then goto L262e12;
  #L262df2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262df8.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262dfe.  v3:= `@@com.activeandroid.util.SQLiteUtils$SQLiteType.INTEGER` @type ^`com.activeandroid.util.SQLiteUtils$SQLiteType` @kind object;
  #L262e02.  call temp:= `toString`(v3) @signature `Ljava/lang/Enum;.toString:()Ljava/lang/String;` @kind virtual;
  #L262e08.  v3:= temp @kind object;
  #L262e0a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262e10.  goto L262e40;
  #L262e12.  v3:= constclass @type ^`java.lang.Enum` @kind object;
  #L262e16.  call temp:= `isSubclassOf`(v1, v3) @signature `Lcom/activeandroid/util/ReflectionUtils;.isSubclassOf:(Ljava/lang/Class;Ljava/lang/Class;)Z` @kind static;
  #L262e1c.  v3:= temp;
  #L262e1e.  if v3 == 0 then goto L262e40;
  #L262e22.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262e28.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262e2e.  v3:= `@@com.activeandroid.util.SQLiteUtils$SQLiteType.TEXT` @type ^`com.activeandroid.util.SQLiteUtils$SQLiteType` @kind object;
  #L262e32.  call temp:= `toString`(v3) @signature `Ljava/lang/Enum;.toString:()Ljava/lang/String;` @kind virtual;
  #L262e38.  v3:= temp @kind object;
  #L262e3a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262e40.  call temp:= `isEmpty`(v0) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L262e46.  v3:= temp;
  #L262e48.  if v3 != 0 then goto L262fb4;
  #L262e4c.  call temp:= `getIdName`(v7) @signature `Lcom/activeandroid/TableInfo;.getIdName:()Ljava/lang/String;` @kind virtual;
  #L262e52.  v3:= temp @kind object;
  #L262e54.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L262e5a.  v2:= temp;
  #L262e5c.  v3:= ")" @kind object;
  #L262e60.  v5:= "(" @kind object;
  #L262e64.  if v2 == 0 then goto L262e74;
  #L262e68.  v2:= " PRIMARY KEY AUTOINCREMENT" @kind object;
  #L262e6c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262e72.  goto L262ef8;
  #L262e74.  if v8 == 0 then goto L262ef8;
  #L262e78.  call temp:= `length`(v8) @signature `Lcom/activeandroid/annotation/Column;.length:()I` @kind interface;
  #L262e7e.  v2:= temp;
  #L262e80.  v6:= -1I;
  #L262e82.  if v2 <= v6 then goto L262ea0;
  #L262e86.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262e8c.  call temp:= `length`(v8) @signature `Lcom/activeandroid/annotation/Column;.length:()I` @kind interface;
  #L262e92.  v2:= temp;
  #L262e94.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L262e9a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262ea0.  call temp:= `notNull`(v8) @signature `Lcom/activeandroid/annotation/Column;.notNull:()Z` @kind interface;
  #L262ea6.  v2:= temp;
  #L262ea8.  if v2 == 0 then goto L262ecc;
  #L262eac.  v2:= " NOT NULL ON CONFLICT " @kind object;
  #L262eb0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262eb6.  call temp:= `onNullConflict`(v8) @signature `Lcom/activeandroid/annotation/Column;.onNullConflict:()Lcom/activeandroid/annotation/Column$ConflictAction;` @kind interface;
  #L262ebc.  v2:= temp @kind object;
  #L262ebe.  call temp:= `toString`(v2) @signature `Ljava/lang/Enum;.toString:()Ljava/lang/String;` @kind virtual;
  #L262ec4.  v2:= temp @kind object;
  #L262ec6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262ecc.  call temp:= `unique`(v8) @signature `Lcom/activeandroid/annotation/Column;.unique:()Z` @kind interface;
  #L262ed2.  v2:= temp;
  #L262ed4.  if v2 == 0 then goto L262ef8;
  #L262ed8.  v2:= " UNIQUE ON CONFLICT " @kind object;
  #L262edc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262ee2.  call temp:= `onUniqueConflict`(v8) @signature `Lcom/activeandroid/annotation/Column;.onUniqueConflict:()Lcom/activeandroid/annotation/Column$ConflictAction;` @kind interface;
  #L262ee8.  v2:= temp @kind object;
  #L262eea.  call temp:= `toString`(v2) @signature `Ljava/lang/Enum;.toString:()Ljava/lang/String;` @kind virtual;
  #L262ef0.  v2:= temp @kind object;
  #L262ef2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262ef8.  v2:= `@@com.activeandroid.util.SQLiteUtils.FOREIGN_KEYS_SUPPORTED` @type ^`boolean` @kind boolean;
  #L262efc.  if v2 == 0 then goto L262fe4;
  #L262f00.  call temp:= `isModel`(v1) @signature `Lcom/activeandroid/util/ReflectionUtils;.isModel:(Ljava/lang/Class;)Z` @kind static;
  #L262f06.  v2:= temp;
  #L262f08.  if v2 == 0 then goto L262fe4;
  #L262f0c.  v2:= " REFERENCES " @kind object;
  #L262f10.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262f16.  call temp:= `getTableInfo`(v1) @signature `Lcom/activeandroid/Cache;.getTableInfo:(Ljava/lang/Class;)Lcom/activeandroid/TableInfo;` @kind static;
  #L262f1c.  v1:= temp @kind object;
  #L262f1e.  call temp:= `getTableName`(v1) @signature `Lcom/activeandroid/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L262f24.  v1:= temp @kind object;
  #L262f26.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262f2c.  v1:= new `java.lang.StringBuilder`;
  #L262f30.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L262f36.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262f3c.  call temp:= `getIdName`(v7) @signature `Lcom/activeandroid/TableInfo;.getIdName:()Ljava/lang/String;` @kind virtual;
  #L262f42.  v7:= temp @kind object;
  #L262f44.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262f4a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262f50.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L262f56.  v7:= temp @kind object;
  #L262f58.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262f5e.  v7:= " ON DELETE " @kind object;
  #L262f62.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262f68.  call temp:= `onDelete`(v8) @signature `Lcom/activeandroid/annotation/Column;.onDelete:()Lcom/activeandroid/annotation/Column$ForeignKeyAction;` @kind interface;
  #L262f6e.  v7:= temp @kind object;
  #L262f70.  call temp:= `toString`(v7) @signature `Ljava/lang/Enum;.toString:()Ljava/lang/String;` @kind virtual;
  #L262f76.  v7:= temp @kind object;
  #L262f78.  v1:= "_" @kind object;
  #L262f7c.  call temp:= `replace`(v7, v1, v4) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L262f82.  v7:= temp @kind object;
  #L262f84.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262f8a.  v7:= " ON UPDATE " @kind object;
  #L262f8e.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262f94.  call temp:= `onUpdate`(v8) @signature `Lcom/activeandroid/annotation/Column;.onUpdate:()Lcom/activeandroid/annotation/Column$ForeignKeyAction;` @kind interface;
  #L262f9a.  v7:= temp @kind object;
  #L262f9c.  call temp:= `toString`(v7) @signature `Ljava/lang/Enum;.toString:()Ljava/lang/String;` @kind virtual;
  #L262fa2.  v7:= temp @kind object;
  #L262fa4.  call temp:= `replace`(v7, v1, v4) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L262faa.  v7:= temp @kind object;
  #L262fac.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262fb2.  goto L262fe4;
  #L262fb4.  v7:= new `java.lang.StringBuilder`;
  #L262fb8.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L262fbe.  v8:= "No type mapping for: " @kind object;
  #L262fc2.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262fc8.  call temp:= `toString`(v1) @signature `Ljava/lang/Class;.toString:()Ljava/lang/String;` @kind virtual;
  #L262fce.  v8:= temp @kind object;
  #L262fd0.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L262fd6.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L262fdc.  v7:= temp @kind object;
  #L262fde.  call temp:= `e`(v7) @signature `Lcom/activeandroid/util/Log;.e:(Ljava/lang/String;)I` @kind static;
  #L262fe4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L262fea.  v7:= temp @kind object;
  #L262fec.  return v7 @kind object;
}
procedure `void` `createIndexColumnDefinition`(`com.activeandroid.TableInfo` v5 @kind object, `java.lang.reflect.Field` v6 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.createIndexColumnDefinition:(Lcom/activeandroid/TableInfo;Ljava/lang/reflect/Field;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L26355c.  call temp:= `getColumnName`(v5, v6) @signature `Lcom/activeandroid/TableInfo;.getColumnName:(Ljava/lang/reflect/Field;)Ljava/lang/String;` @kind virtual;
  #L263562.  v5:= temp @kind object;
  #L263564.  v0:= constclass @type ^`com.activeandroid.annotation.Column` @kind object;
  #L263568.  call temp:= `getAnnotation`(v6, v0) @signature `Ljava/lang/reflect/Field;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L26356e.  v0:= temp @kind object;
  #L263570.  v0:= (`com.activeandroid.annotation.Column`) v0 @kind object;
  #L263574.  call temp:= `getName`(v6) @signature `Ljava/lang/reflect/Field;.getName:()Ljava/lang/String;` @kind virtual;
  #L26357a.  v6:= temp @kind object;
  #L26357c.  v1:= "mId" @kind object;
  #L263580.  call temp:= `equals`(v6, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L263586.  v6:= temp;
  #L263588.  if v6 == 0 then goto L26358e;
  #L26358c.  return @kind void;
  #L26358e.  call temp:= `index`(v0) @signature `Lcom/activeandroid/annotation/Column;.index:()Z` @kind interface;
  #L263594.  v6:= temp;
  #L263596.  if v6 == 0 then goto L2635b4;
  #L26359a.  v6:= new `java.util.ArrayList`;
  #L26359e.  call `<init>`(v6) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2635a4.  call temp:= `add`(v6, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2635aa.  v1:= `@@com.activeandroid.util.SQLiteUtils.sIndexGroupMap` @type ^`java.util.HashMap` @kind object;
  #L2635ae.  call temp:= `put`(v1, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2635b4.  call temp:= `indexGroups`(v0) @signature `Lcom/activeandroid/annotation/Column;.indexGroups:()[Ljava/lang/String;` @kind interface;
  #L2635ba.  v6:= temp @kind object;
  #L2635bc.  v0:= length @variable v6;
  #L2635be.  v1:= 0I;
  #L2635c0.  if v1 >= v0 then goto L26360a;
  #L2635c4.  v2:= v6[v1] @kind object;
  #L2635c8.  call temp:= `isEmpty`(v2) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L2635ce.  v3:= temp;
  #L2635d0.  if v3 == 0 then goto L2635d6;
  #L2635d4.  goto L263604;
  #L2635d6.  v3:= `@@com.activeandroid.util.SQLiteUtils.sIndexGroupMap` @type ^`java.util.HashMap` @kind object;
  #L2635da.  call temp:= `get`(v3, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2635e0.  v3:= temp @kind object;
  #L2635e2.  v3:= (`java.util.List`) v3 @kind object;
  #L2635e6.  if v3 != 0 then goto L2635f4;
  #L2635ea.  v3:= new `java.util.ArrayList`;
  #L2635ee.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2635f4.  call temp:= `add`(v3, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2635fa.  v4:= `@@com.activeandroid.util.SQLiteUtils.sIndexGroupMap` @type ^`java.util.HashMap` @kind object;
  #L2635fe.  call temp:= `put`(v4, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L263604.  v1:= v1 + 1;
  #L263608.  goto L2635c0;
  #L26360a.  return @kind void;
}
procedure `java.lang.String`[] `createIndexDefinition`(`com.activeandroid.TableInfo` v7 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.createIndexDefinition:(Lcom/activeandroid/TableInfo;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2630a0.  v0:= new `java.util.ArrayList`;
  #L2630a4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2630aa.  v1:= new `java.util.HashMap`;
  #L2630ae.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2630b4.  `@@com.activeandroid.util.SQLiteUtils.sIndexGroupMap` @type ^`java.util.HashMap` := v1 @kind object;
  #L2630b8.  call temp:= `getFields`(v7) @signature `Lcom/activeandroid/TableInfo;.getFields:()Ljava/util/Collection;` @kind virtual;
  #L2630be.  v1:= temp @kind object;
  #L2630c0.  call temp:= `iterator`(v1) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2630c6.  v1:= temp @kind object;
  #L2630c8.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2630ce.  v2:= temp;
  #L2630d0.  if v2 == 0 then goto L2630e8;
  #L2630d4.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2630da.  v2:= temp @kind object;
  #L2630dc.  v2:= (`java.lang.reflect.Field`) v2 @kind object;
  #L2630e0.  call `createIndexColumnDefinition`(v7, v2) @signature `Lcom/activeandroid/util/SQLiteUtils;.createIndexColumnDefinition:(Lcom/activeandroid/TableInfo;Ljava/lang/reflect/Field;)V` @kind static;
  #L2630e6.  goto L2630c8;
  #L2630e8.  v1:= `@@com.activeandroid.util.SQLiteUtils.sIndexGroupMap` @type ^`java.util.HashMap` @kind object;
  #L2630ec.  call temp:= `isEmpty`(v1) @signature `Ljava/util/HashMap;.isEmpty:()Z` @kind virtual;
  #L2630f2.  v1:= temp;
  #L2630f4.  v2:= 0I;
  #L2630f6.  if v1 == 0 then goto L263100;
  #L2630fa.  v7:= new `java.lang.String`[v2];
  #L2630fe.  return v7 @kind object;
  #L263100.  v1:= `@@com.activeandroid.util.SQLiteUtils.sIndexGroupMap` @type ^`java.util.HashMap` @kind object;
  #L263104.  call temp:= `entrySet`(v1) @signature `Ljava/util/HashMap;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L26310a.  v1:= temp @kind object;
  #L26310c.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L263112.  v1:= temp @kind object;
  #L263114.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L26311a.  v3:= temp;
  #L26311c.  if v3 == 0 then goto L2631bc;
  #L263120.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L263126.  v3:= temp @kind object;
  #L263128.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L26312c.  v4:= 3I;
  #L26312e.  v4:= new `java.lang.Object`[v4];
  #L263132.  v5:= new `java.lang.StringBuilder`;
  #L263136.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L26313c.  v6:= "index_" @kind object;
  #L263140.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L263146.  call temp:= `getTableName`(v7) @signature `Lcom/activeandroid/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L26314c.  v6:= temp @kind object;
  #L26314e.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L263154.  v6:= "_" @kind object;
  #L263158.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26315e.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L263164.  v6:= temp @kind object;
  #L263166.  v6:= (`java.lang.String`) v6 @kind object;
  #L26316a.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L263170.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L263176.  v5:= temp @kind object;
  #L263178.  v4[v2]:= v5 @kind object;
  #L26317c.  v5:= 1I;
  #L26317e.  call temp:= `getTableName`(v7) @signature `Lcom/activeandroid/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L263184.  v6:= temp @kind object;
  #L263186.  v4[v5]:= v6 @kind object;
  #L26318a.  v5:= 2I;
  #L26318c.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L263192.  v3:= temp @kind object;
  #L263194.  v3:= (`java.lang.Iterable`) v3 @kind object;
  #L263198.  v6:= ", " @kind object;
  #L26319c.  call temp:= `join`(v6, v3) @signature `Landroid/text/TextUtils;.join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;` @kind static;
  #L2631a2.  v3:= temp @kind object;
  #L2631a4.  v4[v5]:= v3 @kind object;
  #L2631a8.  v3:= "CREATE INDEX IF NOT EXISTS %s on %s(%s);" @kind object;
  #L2631ac.  call temp:= `format`(v3, v4) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2631b2.  v3:= temp @kind object;
  #L2631b4.  call temp:= `add`(v0, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2631ba.  goto L263114;
  #L2631bc.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L2631c2.  v7:= temp;
  #L2631c4.  v7:= new `java.lang.String`[v7];
  #L2631c8.  call temp:= `toArray`(v0, v7) @signature `Ljava/util/ArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L2631ce.  v7:= temp @kind object;
  #L2631d0.  v7:= (`java.lang.String`[]) v7 @kind object;
  #L2631d4.  return v7 @kind object;
}
procedure `java.lang.String` `createTableDefinition`(`com.activeandroid.TableInfo` v4 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.createTableDefinition:(Lcom/activeandroid/TableInfo;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L263000.  v0:= new `java.util.ArrayList`;
  #L263004.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L26300a.  call temp:= `getFields`(v4) @signature `Lcom/activeandroid/TableInfo;.getFields:()Ljava/util/Collection;` @kind virtual;
  #L263010.  v1:= temp @kind object;
  #L263012.  call temp:= `iterator`(v1) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L263018.  v1:= temp @kind object;
  #L26301a.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L263020.  v2:= temp;
  #L263022.  if v2 == 0 then goto L26304e;
  #L263026.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L26302c.  v2:= temp @kind object;
  #L26302e.  v2:= (`java.lang.reflect.Field`) v2 @kind object;
  #L263032.  call temp:= `createColumnDefinition`(v4, v2) @signature `Lcom/activeandroid/util/SQLiteUtils;.createColumnDefinition:(Lcom/activeandroid/TableInfo;Ljava/lang/reflect/Field;)Ljava/lang/String;` @kind static;
  #L263038.  v2:= temp @kind object;
  #L26303a.  call temp:= `isEmpty`(v2) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L263040.  v3:= temp;
  #L263042.  if v3 != 0 then goto L26301a;
  #L263046.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L26304c.  goto L26301a;
  #L26304e.  call temp:= `createUniqueDefinition`(v4) @signature `Lcom/activeandroid/util/SQLiteUtils;.createUniqueDefinition:(Lcom/activeandroid/TableInfo;)Ljava/util/ArrayList;` @kind static;
  #L263054.  v1:= temp @kind object;
  #L263056.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L26305c.  v1:= 2I;
  #L26305e.  v1:= new `java.lang.Object`[v1];
  #L263062.  v2:= 0I;
  #L263064.  call temp:= `getTableName`(v4) @signature `Lcom/activeandroid/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L26306a.  v4:= temp @kind object;
  #L26306c.  v1[v2]:= v4 @kind object;
  #L263070.  v4:= 1I;
  #L263072.  v2:= ", " @kind object;
  #L263076.  call temp:= `join`(v2, v0) @signature `Landroid/text/TextUtils;.join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;` @kind static;
  #L26307c.  v0:= temp @kind object;
  #L26307e.  v1[v4]:= v0 @kind object;
  #L263082.  v4:= "CREATE TABLE IF NOT EXISTS %s (%s);" @kind object;
  #L263086.  call temp:= `format`(v4, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L26308c.  v4:= temp @kind object;
  #L26308e.  return v4 @kind object;
}
procedure `void` `createUniqueColumnDefinition`(`com.activeandroid.TableInfo` v6 @kind object, `java.lang.reflect.Field` v7 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.createUniqueColumnDefinition:(Lcom/activeandroid/TableInfo;Ljava/lang/reflect/Field;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L26361c.  call temp:= `getColumnName`(v6, v7) @signature `Lcom/activeandroid/TableInfo;.getColumnName:(Ljava/lang/reflect/Field;)Ljava/lang/String;` @kind virtual;
  #L263622.  v6:= temp @kind object;
  #L263624.  v0:= constclass @type ^`com.activeandroid.annotation.Column` @kind object;
  #L263628.  call temp:= `getAnnotation`(v7, v0) @signature `Ljava/lang/reflect/Field;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L26362e.  v0:= temp @kind object;
  #L263630.  v0:= (`com.activeandroid.annotation.Column`) v0 @kind object;
  #L263634.  call temp:= `getName`(v7) @signature `Ljava/lang/reflect/Field;.getName:()Ljava/lang/String;` @kind virtual;
  #L26363a.  v7:= temp @kind object;
  #L26363c.  v1:= "mId" @kind object;
  #L263640.  call temp:= `equals`(v7, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L263646.  v7:= temp;
  #L263648.  if v7 == 0 then goto L26364e;
  #L26364c.  return @kind void;
  #L26364e.  call temp:= `uniqueGroups`(v0) @signature `Lcom/activeandroid/annotation/Column;.uniqueGroups:()[Ljava/lang/String;` @kind interface;
  #L263654.  v7:= temp @kind object;
  #L263656.  call temp:= `onUniqueConflicts`(v0) @signature `Lcom/activeandroid/annotation/Column;.onUniqueConflicts:()[Lcom/activeandroid/annotation/Column$ConflictAction;` @kind interface;
  #L26365c.  v0:= temp @kind object;
  #L26365e.  v1:= length @variable v7;
  #L263660.  v2:= length @variable v0;
  #L263662.  if v1 == v2 then goto L263668;
  #L263666.  return @kind void;
  #L263668.  v1:= 0I;
  #L26366a.  v2:= length @variable v7;
  #L26366c.  if v1 >= v2 then goto L2636c4;
  #L263670.  v2:= v7[v1] @kind object;
  #L263674.  v3:= v0[v1] @kind object;
  #L263678.  call temp:= `isEmpty`(v2) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L26367e.  v4:= temp;
  #L263680.  if v4 == 0 then goto L263686;
  #L263684.  goto L2636be;
  #L263686.  v4:= `@@com.activeandroid.util.SQLiteUtils.sUniqueGroupMap` @type ^`java.util.HashMap` @kind object;
  #L26368a.  call temp:= `get`(v4, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L263690.  v4:= temp @kind object;
  #L263692.  v4:= (`java.util.List`) v4 @kind object;
  #L263696.  if v4 != 0 then goto L2636a4;
  #L26369a.  v4:= new `java.util.ArrayList`;
  #L26369e.  call `<init>`(v4) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2636a4.  call temp:= `add`(v4, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2636aa.  v5:= `@@com.activeandroid.util.SQLiteUtils.sUniqueGroupMap` @type ^`java.util.HashMap` @kind object;
  #L2636ae.  call temp:= `put`(v5, v2, v4) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2636b4.  v4:= `@@com.activeandroid.util.SQLiteUtils.sOnUniqueConflictsMap` @type ^`java.util.HashMap` @kind object;
  #L2636b8.  call temp:= `put`(v4, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2636be.  v1:= v1 + 1;
  #L2636c2.  goto L26366a;
  #L2636c4.  return @kind void;
}
procedure `java.util.ArrayList` `createUniqueDefinition`(`com.activeandroid.TableInfo` v6 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.createUniqueDefinition:(Lcom/activeandroid/TableInfo;)Ljava/util/ArrayList;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2631e8.  v0:= new `java.util.ArrayList`;
  #L2631ec.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2631f2.  v1:= new `java.util.HashMap`;
  #L2631f6.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2631fc.  `@@com.activeandroid.util.SQLiteUtils.sUniqueGroupMap` @type ^`java.util.HashMap` := v1 @kind object;
  #L263200.  v1:= new `java.util.HashMap`;
  #L263204.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L26320a.  `@@com.activeandroid.util.SQLiteUtils.sOnUniqueConflictsMap` @type ^`java.util.HashMap` := v1 @kind object;
  #L26320e.  call temp:= `getFields`(v6) @signature `Lcom/activeandroid/TableInfo;.getFields:()Ljava/util/Collection;` @kind virtual;
  #L263214.  v1:= temp @kind object;
  #L263216.  call temp:= `iterator`(v1) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L26321c.  v1:= temp @kind object;
  #L26321e.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L263224.  v2:= temp;
  #L263226.  if v2 == 0 then goto L26323e;
  #L26322a.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L263230.  v2:= temp @kind object;
  #L263232.  v2:= (`java.lang.reflect.Field`) v2 @kind object;
  #L263236.  call `createUniqueColumnDefinition`(v6, v2) @signature `Lcom/activeandroid/util/SQLiteUtils;.createUniqueColumnDefinition:(Lcom/activeandroid/TableInfo;Ljava/lang/reflect/Field;)V` @kind static;
  #L26323c.  goto L26321e;
  #L26323e.  v6:= `@@com.activeandroid.util.SQLiteUtils.sUniqueGroupMap` @type ^`java.util.HashMap` @kind object;
  #L263242.  call temp:= `isEmpty`(v6) @signature `Ljava/util/HashMap;.isEmpty:()Z` @kind virtual;
  #L263248.  v6:= temp;
  #L26324a.  if v6 == 0 then goto L263250;
  #L26324e.  return v0 @kind object;
  #L263250.  v6:= `@@com.activeandroid.util.SQLiteUtils.sUniqueGroupMap` @type ^`java.util.HashMap` @kind object;
  #L263254.  call temp:= `keySet`(v6) @signature `Ljava/util/HashMap;.keySet:()Ljava/util/Set;` @kind virtual;
  #L26325a.  v6:= temp @kind object;
  #L26325c.  call temp:= `iterator`(v6) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L263262.  v6:= temp @kind object;
  #L263264.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L26326a.  v1:= temp;
  #L26326c.  if v1 == 0 then goto L2632d6;
  #L263270.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L263276.  v1:= temp @kind object;
  #L263278.  v1:= (`java.lang.String`) v1 @kind object;
  #L26327c.  v2:= `@@com.activeandroid.util.SQLiteUtils.sUniqueGroupMap` @type ^`java.util.HashMap` @kind object;
  #L263280.  call temp:= `get`(v2, v1) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L263286.  v2:= temp @kind object;
  #L263288.  v2:= (`java.util.List`) v2 @kind object;
  #L26328c.  v3:= `@@com.activeandroid.util.SQLiteUtils.sOnUniqueConflictsMap` @type ^`java.util.HashMap` @kind object;
  #L263290.  call temp:= `get`(v3, v1) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L263296.  v1:= temp @kind object;
  #L263298.  v1:= (`com.activeandroid.annotation.Column$ConflictAction`) v1 @kind object;
  #L26329c.  v3:= 2I;
  #L26329e.  v3:= new `java.lang.Object`[v3];
  #L2632a2.  v4:= 0I;
  #L2632a4.  v5:= ", " @kind object;
  #L2632a8.  call temp:= `join`(v5, v2) @signature `Landroid/text/TextUtils;.join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;` @kind static;
  #L2632ae.  v2:= temp @kind object;
  #L2632b0.  v3[v4]:= v2 @kind object;
  #L2632b4.  v2:= 1I;
  #L2632b6.  call temp:= `toString`(v1) @signature `Ljava/lang/Enum;.toString:()Ljava/lang/String;` @kind virtual;
  #L2632bc.  v1:= temp @kind object;
  #L2632be.  v3[v2]:= v1 @kind object;
  #L2632c2.  v1:= "UNIQUE (%s) ON CONFLICT %s" @kind object;
  #L2632c6.  call temp:= `format`(v1, v3) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2632cc.  v1:= temp @kind object;
  #L2632ce.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2632d4.  goto L263264;
  #L2632d6.  return v0 @kind object;
}
procedure `void` `execSql`(`java.lang.String` v1 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.execSql:(Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2636d8.  call temp:= `openDatabase`() @signature `Lcom/activeandroid/Cache;.openDatabase:()Landroid/database/sqlite/SQLiteDatabase;` @kind static;
  #L2636de.  v0:= temp @kind object;
  #L2636e0.  call `execSQL`(v0, v1) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L2636e6.  return @kind void;
}
procedure `void` `execSql`(`java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.execSql:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2636f8.  call temp:= `openDatabase`() @signature `Lcom/activeandroid/Cache;.openDatabase:()Landroid/database/sqlite/SQLiteDatabase;` @kind static;
  #L2636fe.  v0:= temp @kind object;
  #L263700.  call `execSQL`(v0, v1, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind virtual;
  #L263706.  return @kind void;
}
procedure `int` `intQuery`(`java.lang.String` v1 @kind object, `java.lang.String`[] v2 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.intQuery:(Ljava/lang/String;[Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L262d04.  call temp:= `openDatabase`() @signature `Lcom/activeandroid/Cache;.openDatabase:()Landroid/database/sqlite/SQLiteDatabase;` @kind static;
  #L262d0a.  v0:= temp @kind object;
  #L262d0c.  call temp:= `rawQuery`(v0, v1, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.rawQuery:(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L262d12.  v1:= temp @kind object;
  #L262d14.  call temp:= `processIntCursor`(v1) @signature `Lcom/activeandroid/util/SQLiteUtils;.processIntCursor:(Landroid/database/Cursor;)I` @kind static;
  #L262d1a.  v2:= temp;
  #L262d1c.  call `close`(v1) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L262d22.  return v2;
}
procedure `java.util.List` `lexSqlScript`(`java.lang.String` v9 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.lexSqlScript:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2632e8.  v0:= new `java.util.ArrayList`;
  #L2632ec.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2632f2.  v1:= new `java.lang.StringBuilder`;
  #L2632f6.  v2:= 100I;
  #L2632fa.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L263300.  v3:= 0I;
  #L263302.  v4:= v1 @kind object;
  #L263304.  v1:= 0I;
  #L263306.  v5:= 0I;
  #L263308.  v6:= 0I;
  #L26330a.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L263310.  v7:= temp;
  #L263312.  if v1 >= v7 then goto L26337a;
  #L263316.  call temp:= `charAt`(v9, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L26331c.  v7:= temp;
  #L26331e.  v8:= 59I;
  #L263322.  if v7 != v8 then goto L26334c;
  #L263326.  if v5 != 0 then goto L26334c;
  #L26332a.  if v6 != 0 then goto L26334c;
  #L26332e.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L263334.  v4:= temp @kind object;
  #L263336.  call temp:= `add`(v0, v4) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L26333c.  v4:= new `java.lang.StringBuilder`;
  #L263340.  call `<init>`(v4, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L263346.  v5:= 0I;
  #L263348.  v6:= 0I;
  #L26334a.  goto L263374;
  #L26334c.  v8:= 39I;
  #L263350.  if v7 != v8 then goto L26335c;
  #L263354.  if v6 != 0 then goto L26335c;
  #L263358.  v5:= v5 ^~ 1;
  #L26335c.  v8:= 92I;
  #L263360.  if v7 != v8 then goto L26336c;
  #L263364.  if v6 != 0 then goto L26336c;
  #L263368.  v6:= 1I;
  #L26336a.  goto L26336e;
  #L26336c.  v6:= 0I;
  #L26336e.  call temp:= `append`(v4, v7) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L263374.  v1:= v1 + 1;
  #L263378.  goto L26330a;
  #L26337a.  call temp:= `length`(v4) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L263380.  v9:= temp;
  #L263382.  if v9 <= 0 then goto L263394;
  #L263386.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L26338c.  v9:= temp @kind object;
  #L26338e.  call temp:= `add`(v0, v9) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L263394.  return v0 @kind object;
}
procedure `java.util.List` `processCursor`(`java.lang.Class` v7 @kind object, `android.database.Cursor` v8 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.processCursor:(Ljava/lang/Class;Landroid/database/Cursor;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2633a8.  call temp:= `getTableInfo`(v7) @signature `Lcom/activeandroid/Cache;.getTableInfo:(Ljava/lang/Class;)Lcom/activeandroid/TableInfo;` @kind static;
  #L2633ae.  v0:= temp @kind object;
  #L2633b0.  call temp:= `getIdName`(v0) @signature `Lcom/activeandroid/TableInfo;.getIdName:()Ljava/lang/String;` @kind virtual;
  #L2633b6.  v0:= temp @kind object;
  #L2633b8.  v1:= new `java.util.ArrayList`;
  #L2633bc.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2633c2.  v2:= 0I;
  #L2633c4.  v3:= new `java.lang.Class`[v2];
  #L2633c8.  call temp:= `getConstructor`(v7, v3) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L2633ce.  v3:= temp @kind object;
  #L2633d0.  call temp:= `moveToFirst`(v8) @signature `Landroid/database/Cursor;.moveToFirst:()Z` @kind interface;
  #L2633d6.  v4:= temp;
  #L2633d8.  if v4 == 0 then goto L263448;
  #L2633dc.  v4:= new `java.util.ArrayList`;
  #L2633e0.  call temp:= `getColumnNames`(v8) @signature `Landroid/database/Cursor;.getColumnNames:()[Ljava/lang/String;` @kind interface;
  #L2633e6.  v5:= temp @kind object;
  #L2633e8.  call temp:= `asList`(v5) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2633ee.  v5:= temp @kind object;
  #L2633f0.  call `<init>`(v4, v5) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L2633f6.  call temp:= `indexOf`(v4, v0) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L2633fc.  v5:= temp;
  #L2633fe.  call temp:= `getLong`(v8, v5) @signature `Landroid/database/Cursor;.getLong:(I)J` @kind interface;
  #L263404.  v5:= temp @kind wide;
  #L263406.  call temp:= `getEntity`(v7, v5) @signature `Lcom/activeandroid/Cache;.getEntity:(Ljava/lang/Class;J)Lcom/activeandroid/Model;` @kind static;
  #L26340c.  v5:= temp @kind object;
  #L26340e.  if v5 != 0 then goto L263422;
  #L263412.  v5:= new `java.lang.Object`[v2];
  #L263416.  call temp:= `newInstance`(v3, v5) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L26341c.  v5:= temp @kind object;
  #L26341e.  v5:= (`com.activeandroid.Model`) v5 @kind object;
  #L263422.  call `loadFromCursor`(v5, v8) @signature `Lcom/activeandroid/Model;.loadFromCursor:(Landroid/database/Cursor;)V` @kind virtual;
  #L263428.  call temp:= `add`(v1, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L26342e.  call temp:= `moveToNext`(v8) @signature `Landroid/database/Cursor;.moveToNext:()Z` @kind interface;
  #L263434.  v5:= temp;
  #L263436.  if v5 != 0 then goto L2633f6;
  #L26343a.  goto L263448;
  #L26343c.  v7:= Exception @type ^`java.lang.Exception` @kind object;
  #L26343e.  v8:= "Failed to process cursor." @kind object;
  #L263442.  call temp:= `e`(v8, v7) @signature `Lcom/activeandroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L263448.  return v1 @kind object;
  #L26344a.  v8:= new `java.lang.RuntimeException`;
  #L26344e.  v0:= new `java.lang.StringBuilder`;
  #L263452.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L263458.  v1:= "Your model " @kind object;
  #L26345c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L263462.  call temp:= `getName`(v7) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L263468.  v7:= temp @kind object;
  #L26346a.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L263470.  v7:= " does not define a default " @kind object;
  #L263474.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26347a.  v7:= "constructor. The default constructor is required for " @kind object;
  #L26347e.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L263484.  v7:= "now in ActiveAndroid models, as the process to " @kind object;
  #L263488.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26348e.  v7:= "populate the ORM model is : " @kind object;
  #L263492.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L263498.  v7:= "1. instantiate default model " @kind object;
  #L26349c.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2634a2.  v7:= "2. populate fields" @kind object;
  #L2634a6.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2634ac.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2634b2.  v7:= temp @kind object;
  #L2634b4.  call `<init>`(v8, v7) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2634ba.  throw v8;
  catch `java.lang.NoSuchMethodException` @[L2633c4..L263436] goto L26344a;
  catch `java.lang.Exception` @[L2633c4..L263436] goto L26343c;
}
procedure `int` `processIntCursor`(`android.database.Cursor` v2 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.processIntCursor:(Landroid/database/Cursor;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L262d34.  call temp:= `moveToFirst`(v2) @signature `Landroid/database/Cursor;.moveToFirst:()Z` @kind interface;
  #L262d3a.  v0:= temp;
  #L262d3c.  v1:= 0I;
  #L262d3e.  if v0 == 0 then goto L262d4c;
  #L262d42.  call temp:= `getInt`(v2, v1) @signature `Landroid/database/Cursor;.getInt:(I)I` @kind interface;
  #L262d48.  v2:= temp;
  #L262d4a.  return v2;
  #L262d4c.  return v1;
}
procedure `java.util.List` `rawQuery`(`java.lang.Class` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String`[] v3 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.rawQuery:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2634dc.  call temp:= `openDatabase`() @signature `Lcom/activeandroid/Cache;.openDatabase:()Landroid/database/sqlite/SQLiteDatabase;` @kind static;
  #L2634e2.  v0:= temp @kind object;
  #L2634e4.  call temp:= `rawQuery`(v0, v2, v3) @signature `Landroid/database/sqlite/SQLiteDatabase;.rawQuery:(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L2634ea.  v2:= temp @kind object;
  #L2634ec.  call temp:= `processCursor`(v1, v2) @signature `Lcom/activeandroid/util/SQLiteUtils;.processCursor:(Ljava/lang/Class;Landroid/database/Cursor;)Ljava/util/List;` @kind static;
  #L2634f2.  v1:= temp @kind object;
  #L2634f4.  call `close`(v2) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L2634fa.  return v1 @kind object;
}
procedure `com.activeandroid.Model` `rawQuerySingle`(`java.lang.Class` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.String`[] v2 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.rawQuerySingle:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/String;)Lcom/activeandroid/Model;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L262ccc.  call temp:= `rawQuery`(v0, v1, v2) @signature `Lcom/activeandroid/util/SQLiteUtils;.rawQuery:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L262cd2.  v0:= temp @kind object;
  #L262cd4.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L262cda.  v1:= temp;
  #L262cdc.  if v1 <= 0 then goto L262cf0;
  #L262ce0.  v1:= 0I;
  #L262ce2.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L262ce8.  v0:= temp @kind object;
  #L262cea.  v0:= (`com.activeandroid.Model`) v0 @kind object;
  #L262cee.  return v0 @kind object;
  #L262cf0.  v0:= 0I;
  #L262cf2.  return v0 @kind object;
}
