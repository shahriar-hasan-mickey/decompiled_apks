record `com.github.gcacace.signaturepad.c.e` @kind class @AccessFlag  {
  `java.lang.Integer` `com.github.gcacace.signaturepad.c.e.a` @AccessFlag FINAL;
  `java.lang.Integer` `com.github.gcacace.signaturepad.c.e.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.github.gcacace.signaturepad.c.e` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lcom/github/gcacace/signaturepad/c/e;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2f6968.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f696e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2f6974.  v1:= temp @kind object;
  #L2f6976.  v0.`com.github.gcacace.signaturepad.c.e.a` @type ^`java.lang.Integer` := v1 @kind object;
  #L2f697a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2f6980.  v1:= temp @kind object;
  #L2f6982.  v0.`com.github.gcacace.signaturepad.c.e.b` @type ^`java.lang.Integer` := v1 @kind object;
  #L2f6986.  return @kind void;
}
procedure `void` `<init>`(`com.github.gcacace.signaturepad.c.e` v1 @kind this, `com.github.gcacace.signaturepad.c.f` v2 @kind object) @signature `Lcom/github/gcacace/signaturepad/c/e;.<init>:(Lcom/github/gcacace/signaturepad/c/f;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2f6920.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f6926.  v0:= v2.`com.github.gcacace.signaturepad.c.f.a` @type ^`float`;
  #L2f692a.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L2f6930.  v0:= temp;
  #L2f6932.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2f6938.  v0:= temp @kind object;
  #L2f693a.  v1.`com.github.gcacace.signaturepad.c.e.a` @type ^`java.lang.Integer` := v0 @kind object;
  #L2f693e.  v2:= v2.`com.github.gcacace.signaturepad.c.f.b` @type ^`float`;
  #L2f6942.  call temp:= `round`(v2) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L2f6948.  v2:= temp;
  #L2f694a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2f6950.  v2:= temp @kind object;
  #L2f6952.  v1.`com.github.gcacace.signaturepad.c.e.b` @type ^`java.lang.Integer` := v2 @kind object;
  #L2f6956.  return @kind void;
}
procedure `boolean` `equals`(`com.github.gcacace.signaturepad.c.e` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/github/gcacace/signaturepad/c/e;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2f67d8.  if v3 != v4 then goto L2f67e0;
  #L2f67dc.  v4:= 1I;
  #L2f67de.  return v4;
  #L2f67e0.  v0:= 0I;
  #L2f67e2.  if v4 == 0 then goto L2f6824;
  #L2f67e6.  v1:= constclass @type ^`com.github.gcacace.signaturepad.c.e` @kind object;
  #L2f67ea.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2f67f0.  v2:= temp @kind object;
  #L2f67f2.  if v1 == v2 then goto L2f67f8;
  #L2f67f6.  goto L2f6824;
  #L2f67f8.  v4:= (`com.github.gcacace.signaturepad.c.e`) v4 @kind object;
  #L2f67fc.  v1:= v3.`com.github.gcacace.signaturepad.c.e.a` @type ^`java.lang.Integer` @kind object;
  #L2f6800.  v2:= v4.`com.github.gcacace.signaturepad.c.e.a` @type ^`java.lang.Integer` @kind object;
  #L2f6804.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Integer;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2f680a.  v1:= temp;
  #L2f680c.  if v1 != 0 then goto L2f6812;
  #L2f6810.  return v0;
  #L2f6812.  v0:= v3.`com.github.gcacace.signaturepad.c.e.b` @type ^`java.lang.Integer` @kind object;
  #L2f6816.  v4:= v4.`com.github.gcacace.signaturepad.c.e.b` @type ^`java.lang.Integer` @kind object;
  #L2f681a.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/Integer;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2f6820.  v4:= temp;
  #L2f6822.  return v4;
  #L2f6824.  return v0;
}
procedure `int` `hashCode`(`com.github.gcacace.signaturepad.c.e` v2 @kind this) @signature `Lcom/github/gcacace/signaturepad/c/e;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f6838.  v0:= v2.`com.github.gcacace.signaturepad.c.e.a` @type ^`java.lang.Integer` @kind object;
  #L2f683c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Integer;.hashCode:()I` @kind virtual;
  #L2f6842.  v0:= temp;
  #L2f6844.  v0:= v0 * 31;
  #L2f6848.  v1:= v2.`com.github.gcacace.signaturepad.c.e.b` @type ^`java.lang.Integer` @kind object;
  #L2f684c.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Integer;.hashCode:()I` @kind virtual;
  #L2f6852.  v1:= temp;
  #L2f6854.  v0:= v0 + v1 @kind int;
  #L2f6856.  return v0;
}
procedure `java.lang.String` `toAbsoluteCoordinates`(`com.github.gcacace.signaturepad.c.e` v2 @kind this) @signature `Lcom/github/gcacace/signaturepad/c/e;.toAbsoluteCoordinates:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2f6868.  v0:= new `java.lang.StringBuilder`;
  #L2f686c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2f6872.  v1:= v2.`com.github.gcacace.signaturepad.c.e.a` @type ^`java.lang.Integer` @kind object;
  #L2f6876.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f687c.  v1:= "," @kind object;
  #L2f6880.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f6886.  v1:= v2.`com.github.gcacace.signaturepad.c.e.b` @type ^`java.lang.Integer` @kind object;
  #L2f688a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2f6890.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f6896.  v0:= temp @kind object;
  #L2f6898.  return v0 @kind object;
}
procedure `java.lang.String` `toRelativeCoordinates`(`com.github.gcacace.signaturepad.c.e` v3 @kind this, `com.github.gcacace.signaturepad.c.e` v4 @kind object) @signature `Lcom/github/gcacace/signaturepad/c/e;.toRelativeCoordinates:(Lcom/github/gcacace/signaturepad/c/e;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2f68ac.  v0:= new `com.github.gcacace.signaturepad.c.e`;
  #L2f68b0.  v1:= v3.`com.github.gcacace.signaturepad.c.e.a` @type ^`java.lang.Integer` @kind object;
  #L2f68b4.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2f68ba.  v1:= temp;
  #L2f68bc.  v2:= v4.`com.github.gcacace.signaturepad.c.e.a` @type ^`java.lang.Integer` @kind object;
  #L2f68c0.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2f68c6.  v2:= temp;
  #L2f68c8.  v1:= v1 - v2 @kind int;
  #L2f68ca.  v2:= v3.`com.github.gcacace.signaturepad.c.e.b` @type ^`java.lang.Integer` @kind object;
  #L2f68ce.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2f68d4.  v2:= temp;
  #L2f68d6.  v4:= v4.`com.github.gcacace.signaturepad.c.e.b` @type ^`java.lang.Integer` @kind object;
  #L2f68da.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2f68e0.  v4:= temp;
  #L2f68e2.  v2:= v2 - v4 @kind int;
  #L2f68e4.  call `<init>`(v0, v1, v2) @signature `Lcom/github/gcacace/signaturepad/c/e;.<init>:(II)V` @kind direct;
  #L2f68ea.  call temp:= `toString`(v0) @signature `Lcom/github/gcacace/signaturepad/c/e;.toString:()Ljava/lang/String;` @kind virtual;
  #L2f68f0.  v4:= temp @kind object;
  #L2f68f2.  return v4 @kind object;
}
procedure `java.lang.String` `toString`(`com.github.gcacace.signaturepad.c.e` v1 @kind this) @signature `Lcom/github/gcacace/signaturepad/c/e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2f6904.  call temp:= `toAbsoluteCoordinates`(v1) @signature `Lcom/github/gcacace/signaturepad/c/e;.toAbsoluteCoordinates:()Ljava/lang/String;` @kind virtual;
  #L2f690a.  v0:= temp @kind object;
  #L2f690c.  return v0 @kind object;
}
