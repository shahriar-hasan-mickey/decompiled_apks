record `com.adjust.sdk.BackoffStrategy` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `double` `com.adjust.sdk.BackoffStrategy.maxRange` @AccessFlag ;
  `long` `com.adjust.sdk.BackoffStrategy.maxWait` @AccessFlag ;
  `long` `com.adjust.sdk.BackoffStrategy.milliSecondMultiplier` @AccessFlag ;
  `double` `com.adjust.sdk.BackoffStrategy.minRange` @AccessFlag ;
  `int` `com.adjust.sdk.BackoffStrategy.minRetries` @AccessFlag ;
}
global `com.adjust.sdk.BackoffStrategy`[] `@@com.adjust.sdk.BackoffStrategy.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.adjust.sdk.BackoffStrategy` `@@com.adjust.sdk.BackoffStrategy.LONG_WAIT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.adjust.sdk.BackoffStrategy` `@@com.adjust.sdk.BackoffStrategy.NO_WAIT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.adjust.sdk.BackoffStrategy` `@@com.adjust.sdk.BackoffStrategy.SHORT_WAIT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.adjust.sdk.BackoffStrategy` `@@com.adjust.sdk.BackoffStrategy.TEST_WAIT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/adjust/sdk/BackoffStrategy;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;

  #L26dcb4.  v12:= new `com.adjust.sdk.BackoffStrategy`;
  #L26dcb8.  v1:= "LONG_WAIT" @kind object;
  #L26dcbc.  v2:= 0I;
  #L26dcbe.  v3:= 1I;
  #L26dcc0.  v4:= 120000L;
  #L26dcc6.  v6:= 86400000L;
  #L26dccc.  v8:= 0.5D;
  #L26dcd0.  v10:= 1.0D;
  #L26dcd4.  v0:= v12 @kind object;
  #L26dcd6.  call `<init>`(v0, v1, v2, v3, v4, v6, v8, v10) @signature `Lcom/adjust/sdk/BackoffStrategy;.<init>:(Ljava/lang/String;IIJJDD)V` @kind direct;
  #L26dcdc.  `@@com.adjust.sdk.BackoffStrategy.LONG_WAIT` @type ^`com.adjust.sdk.BackoffStrategy` := v12 @kind object;
  #L26dce0.  v0:= new `com.adjust.sdk.BackoffStrategy`;
  #L26dce4.  v14:= "SHORT_WAIT" @kind object;
  #L26dce8.  v15:= 1I;
  #L26dcea.  v16:= 1I;
  #L26dcee.  v17:= 200L;
  #L26dcf2.  v19:= 3600000L;
  #L26dcf8.  v21:= 0.5D;
  #L26dcfc.  v23:= 1.0D;
  #L26dd00.  v13:= v0 @kind object;
  #L26dd02.  call `<init>`(v13, v14, v15, v16, v17, v19, v21, v23) @signature `Lcom/adjust/sdk/BackoffStrategy;.<init>:(Ljava/lang/String;IIJJDD)V` @kind direct;
  #L26dd08.  `@@com.adjust.sdk.BackoffStrategy.SHORT_WAIT` @type ^`com.adjust.sdk.BackoffStrategy` := v0 @kind object;
  #L26dd0c.  v0:= new `com.adjust.sdk.BackoffStrategy`;
  #L26dd10.  v2:= "TEST_WAIT" @kind object;
  #L26dd14.  v3:= 2I;
  #L26dd16.  v4:= 1I;
  #L26dd18.  v5:= 200L;
  #L26dd1c.  v7:= 1000L;
  #L26dd20.  v9:= 0.5D;
  #L26dd24.  v11:= 1.0D;
  #L26dd28.  v1:= v0 @kind object;
  #L26dd2a.  call `<init>`(v1, v2, v3, v4, v5, v7, v9, v11) @signature `Lcom/adjust/sdk/BackoffStrategy;.<init>:(Ljava/lang/String;IIJJDD)V` @kind direct;
  #L26dd30.  `@@com.adjust.sdk.BackoffStrategy.TEST_WAIT` @type ^`com.adjust.sdk.BackoffStrategy` := v0 @kind object;
  #L26dd34.  v0:= new `com.adjust.sdk.BackoffStrategy`;
  #L26dd38.  v14:= "NO_WAIT" @kind object;
  #L26dd3c.  v15:= 3I;
  #L26dd3e.  v16:= 100I;
  #L26dd42.  v17:= 1L;
  #L26dd46.  v19:= 1000L;
  #L26dd4a.  v21:= 1.0D;
  #L26dd4e.  v13:= v0 @kind object;
  #L26dd50.  call `<init>`(v13, v14, v15, v16, v17, v19, v21, v23) @signature `Lcom/adjust/sdk/BackoffStrategy;.<init>:(Ljava/lang/String;IIJJDD)V` @kind direct;
  #L26dd56.  `@@com.adjust.sdk.BackoffStrategy.NO_WAIT` @type ^`com.adjust.sdk.BackoffStrategy` := v0 @kind object;
  #L26dd5a.  v0:= 4I;
  #L26dd5c.  v0:= new `com.adjust.sdk.BackoffStrategy`[v0];
  #L26dd60.  v1:= `@@com.adjust.sdk.BackoffStrategy.LONG_WAIT` @type ^`com.adjust.sdk.BackoffStrategy` @kind object;
  #L26dd64.  v2:= 0I;
  #L26dd66.  v0[v2]:= v1 @kind object;
  #L26dd6a.  v1:= `@@com.adjust.sdk.BackoffStrategy.SHORT_WAIT` @type ^`com.adjust.sdk.BackoffStrategy` @kind object;
  #L26dd6e.  v2:= 1I;
  #L26dd70.  v0[v2]:= v1 @kind object;
  #L26dd74.  v1:= `@@com.adjust.sdk.BackoffStrategy.TEST_WAIT` @type ^`com.adjust.sdk.BackoffStrategy` @kind object;
  #L26dd78.  v2:= 2I;
  #L26dd7a.  v0[v2]:= v1 @kind object;
  #L26dd7e.  v1:= `@@com.adjust.sdk.BackoffStrategy.NO_WAIT` @type ^`com.adjust.sdk.BackoffStrategy` @kind object;
  #L26dd82.  v2:= 3I;
  #L26dd84.  v0[v2]:= v1 @kind object;
  #L26dd88.  `@@com.adjust.sdk.BackoffStrategy.$VALUES` @type ^`com.adjust.sdk.BackoffStrategy`[] := v0 @kind object;
  #L26dd8c.  return @kind void;
}
procedure `void` `<init>`(`com.adjust.sdk.BackoffStrategy` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 , `long` v4 , `long` v6 , `double` v8 , `double` v10 ) @signature `Lcom/adjust/sdk/BackoffStrategy;.<init>:(Ljava/lang/String;IIJJDD)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L26dda0.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L26dda6.  v0.`com.adjust.sdk.BackoffStrategy.minRetries` @type ^`int` := v3;
  #L26ddaa.  v0.`com.adjust.sdk.BackoffStrategy.milliSecondMultiplier` @type ^`long` := v4 @kind wide;
  #L26ddae.  v0.`com.adjust.sdk.BackoffStrategy.maxWait` @type ^`long` := v6 @kind wide;
  #L26ddb2.  v0.`com.adjust.sdk.BackoffStrategy.minRange` @type ^`double` := v8 @kind wide;
  #L26ddb6.  v0.`com.adjust.sdk.BackoffStrategy.maxRange` @type ^`double` := v10 @kind wide;
  #L26ddba.  return @kind void;
}
procedure `com.adjust.sdk.BackoffStrategy` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/adjust/sdk/BackoffStrategy;.valueOf:(Ljava/lang/String;)Lcom/adjust/sdk/BackoffStrategy;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L26dc6c.  v0:= constclass @type ^`com.adjust.sdk.BackoffStrategy` @kind object;
  #L26dc70.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L26dc76.  v1:= temp @kind object;
  #L26dc78.  v1:= (`com.adjust.sdk.BackoffStrategy`) v1 @kind object;
  #L26dc7c.  return v1 @kind object;
}
procedure `com.adjust.sdk.BackoffStrategy`[] `values`() @signature `Lcom/adjust/sdk/BackoffStrategy;.values:()[Lcom/adjust/sdk/BackoffStrategy;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L26dc90.  v0:= `@@com.adjust.sdk.BackoffStrategy.$VALUES` @type ^`com.adjust.sdk.BackoffStrategy`[] @kind object;
  #L26dc94.  call temp:= `clone`(v0) @signature `[Lcom/adjust/sdk/BackoffStrategy;.clone:()Ljava/lang/Object;` @kind virtual;
  #L26dc9a.  v0:= temp @kind object;
  #L26dc9c.  v0:= (`com.adjust.sdk.BackoffStrategy`[]) v0 @kind object;
  #L26dca0.  return v0 @kind object;
}
