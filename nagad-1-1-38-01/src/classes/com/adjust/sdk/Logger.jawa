record `com.adjust.sdk.Logger` @kind class @AccessFlag PUBLIC extends `com.adjust.sdk.ILogger` @kind interface {
  `boolean` `com.adjust.sdk.Logger.isProductionEnvironment` @AccessFlag PRIVATE;
  `com.adjust.sdk.LogLevel` `com.adjust.sdk.Logger.logLevel` @AccessFlag PRIVATE;
  `boolean` `com.adjust.sdk.Logger.logLevelLocked` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@com.adjust.sdk.Logger.formatErrorMessage` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/adjust/sdk/Logger;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L26fcbc.  return @kind void;
}
procedure `void` `<init>`(`com.adjust.sdk.Logger` v2 @kind this) @signature `Lcom/adjust/sdk/Logger;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L26fcd0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L26fcd6.  v0:= 0I;
  #L26fcd8.  v2.`com.adjust.sdk.Logger.isProductionEnvironment` @type ^`boolean` := v0 @kind boolean;
  #L26fcdc.  v2.`com.adjust.sdk.Logger.logLevelLocked` @type ^`boolean` := v0 @kind boolean;
  #L26fce0.  v0:= `@@com.adjust.sdk.LogLevel.INFO` @type ^`com.adjust.sdk.LogLevel` @kind object;
  #L26fce4.  v1:= v2.`com.adjust.sdk.Logger.isProductionEnvironment` @type ^`boolean` @kind boolean;
  #L26fce8.  call `setLogLevel`(v2, v0, v1) @signature `Lcom/adjust/sdk/Logger;.setLogLevel:(Lcom/adjust/sdk/LogLevel;Z)V` @kind virtual;
  #L26fcee.  return @kind void;
}
procedure `void` `Assert`(`com.adjust.sdk.Logger` v4 @kind this, `java.lang.String` v5 @kind object, `java.lang.Object`[] v6 @kind object) @signature `Lcom/adjust/sdk/Logger;.Assert:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26fd00.  v0:= "Adjust" @kind object;
  #L26fd04.  v1:= v4.`com.adjust.sdk.Logger.isProductionEnvironment` @type ^`boolean` @kind boolean;
  #L26fd08.  if v1 == 0 then goto L26fd0e;
  #L26fd0c.  return @kind void;
  #L26fd0e.  v1:= v4.`com.adjust.sdk.Logger.logLevel` @type ^`com.adjust.sdk.LogLevel` @kind object;
  #L26fd12.  v1:= v1.`com.adjust.sdk.LogLevel.androidLogLevel` @type ^`int`;
  #L26fd16.  v2:= 7I;
  #L26fd18.  if v1 > v2 then goto L26fd58;
  #L26fd1c.  call temp:= `formatString`(v5, v6) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L26fd22.  v1:= temp @kind object;
  #L26fd24.  call temp:= `println`(v2, v0, v1) @signature `Landroid/util/Log;.println:(ILjava/lang/String;Ljava/lang/String;)I` @kind static;
  #L26fd2a.  goto L26fd58;
  #L26fd2c.  v1:= `@@com.adjust.sdk.Logger.formatErrorMessage` @type ^`java.lang.String` @kind object;
  #L26fd30.  v2:= 2I;
  #L26fd32.  v2:= new `java.lang.Object`[v2];
  #L26fd36.  v3:= 0I;
  #L26fd38.  v2[v3]:= v5 @kind object;
  #L26fd3c.  v5:= 1I;
  #L26fd3e.  call temp:= `toString`(v6) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L26fd44.  v6:= temp @kind object;
  #L26fd46.  v2[v5]:= v6 @kind object;
  #L26fd4a.  call temp:= `formatString`(v1, v2) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L26fd50.  v5:= temp @kind object;
  #L26fd52.  call temp:= `e`(v0, v5) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L26fd58.  return @kind void;
  catch `java.lang.Exception` @[L26fd1c..L26fd2a] goto L26fd2c;
}
procedure `void` `debug`(`com.adjust.sdk.Logger` v4 @kind this, `java.lang.String` v5 @kind object, `java.lang.Object`[] v6 @kind object) @signature `Lcom/adjust/sdk/Logger;.debug:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26fd7c.  v0:= "Adjust" @kind object;
  #L26fd80.  v1:= v4.`com.adjust.sdk.Logger.isProductionEnvironment` @type ^`boolean` @kind boolean;
  #L26fd84.  if v1 == 0 then goto L26fd8a;
  #L26fd88.  return @kind void;
  #L26fd8a.  v1:= v4.`com.adjust.sdk.Logger.logLevel` @type ^`com.adjust.sdk.LogLevel` @kind object;
  #L26fd8e.  v1:= v1.`com.adjust.sdk.LogLevel.androidLogLevel` @type ^`int`;
  #L26fd92.  v2:= 3I;
  #L26fd94.  if v1 > v2 then goto L26fdd4;
  #L26fd98.  call temp:= `formatString`(v5, v6) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L26fd9e.  v1:= temp @kind object;
  #L26fda0.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L26fda6.  goto L26fdd4;
  #L26fda8.  v1:= `@@com.adjust.sdk.Logger.formatErrorMessage` @type ^`java.lang.String` @kind object;
  #L26fdac.  v2:= 2I;
  #L26fdae.  v2:= new `java.lang.Object`[v2];
  #L26fdb2.  v3:= 0I;
  #L26fdb4.  v2[v3]:= v5 @kind object;
  #L26fdb8.  v5:= 1I;
  #L26fdba.  call temp:= `toString`(v6) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L26fdc0.  v6:= temp @kind object;
  #L26fdc2.  v2[v5]:= v6 @kind object;
  #L26fdc6.  call temp:= `formatString`(v1, v2) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L26fdcc.  v5:= temp @kind object;
  #L26fdce.  call temp:= `e`(v0, v5) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L26fdd4.  return @kind void;
  catch `java.lang.Exception` @[L26fd98..L26fda6] goto L26fda8;
}
procedure `void` `error`(`com.adjust.sdk.Logger` v4 @kind this, `java.lang.String` v5 @kind object, `java.lang.Object`[] v6 @kind object) @signature `Lcom/adjust/sdk/Logger;.error:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26fdf8.  v0:= "Adjust" @kind object;
  #L26fdfc.  v1:= v4.`com.adjust.sdk.Logger.isProductionEnvironment` @type ^`boolean` @kind boolean;
  #L26fe00.  if v1 == 0 then goto L26fe06;
  #L26fe04.  return @kind void;
  #L26fe06.  v1:= v4.`com.adjust.sdk.Logger.logLevel` @type ^`com.adjust.sdk.LogLevel` @kind object;
  #L26fe0a.  v1:= v1.`com.adjust.sdk.LogLevel.androidLogLevel` @type ^`int`;
  #L26fe0e.  v2:= 6I;
  #L26fe10.  if v1 > v2 then goto L26fe50;
  #L26fe14.  call temp:= `formatString`(v5, v6) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L26fe1a.  v1:= temp @kind object;
  #L26fe1c.  call temp:= `e`(v0, v1) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L26fe22.  goto L26fe50;
  #L26fe24.  v1:= `@@com.adjust.sdk.Logger.formatErrorMessage` @type ^`java.lang.String` @kind object;
  #L26fe28.  v2:= 2I;
  #L26fe2a.  v2:= new `java.lang.Object`[v2];
  #L26fe2e.  v3:= 0I;
  #L26fe30.  v2[v3]:= v5 @kind object;
  #L26fe34.  v5:= 1I;
  #L26fe36.  call temp:= `toString`(v6) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L26fe3c.  v6:= temp @kind object;
  #L26fe3e.  v2[v5]:= v6 @kind object;
  #L26fe42.  call temp:= `formatString`(v1, v2) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L26fe48.  v5:= temp @kind object;
  #L26fe4a.  call temp:= `e`(v0, v5) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L26fe50.  return @kind void;
  catch `java.lang.Exception` @[L26fe14..L26fe22] goto L26fe24;
}
procedure `void` `info`(`com.adjust.sdk.Logger` v4 @kind this, `java.lang.String` v5 @kind object, `java.lang.Object`[] v6 @kind object) @signature `Lcom/adjust/sdk/Logger;.info:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26fe74.  v0:= "Adjust" @kind object;
  #L26fe78.  v1:= v4.`com.adjust.sdk.Logger.isProductionEnvironment` @type ^`boolean` @kind boolean;
  #L26fe7c.  if v1 == 0 then goto L26fe82;
  #L26fe80.  return @kind void;
  #L26fe82.  v1:= v4.`com.adjust.sdk.Logger.logLevel` @type ^`com.adjust.sdk.LogLevel` @kind object;
  #L26fe86.  v1:= v1.`com.adjust.sdk.LogLevel.androidLogLevel` @type ^`int`;
  #L26fe8a.  v2:= 4I;
  #L26fe8c.  if v1 > v2 then goto L26fecc;
  #L26fe90.  call temp:= `formatString`(v5, v6) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L26fe96.  v1:= temp @kind object;
  #L26fe98.  call temp:= `i`(v0, v1) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L26fe9e.  goto L26fecc;
  #L26fea0.  v1:= `@@com.adjust.sdk.Logger.formatErrorMessage` @type ^`java.lang.String` @kind object;
  #L26fea4.  v2:= 2I;
  #L26fea6.  v2:= new `java.lang.Object`[v2];
  #L26feaa.  v3:= 0I;
  #L26feac.  v2[v3]:= v5 @kind object;
  #L26feb0.  v5:= 1I;
  #L26feb2.  call temp:= `toString`(v6) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L26feb8.  v6:= temp @kind object;
  #L26feba.  v2[v5]:= v6 @kind object;
  #L26febe.  call temp:= `formatString`(v1, v2) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L26fec4.  v5:= temp @kind object;
  #L26fec6.  call temp:= `e`(v0, v5) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L26fecc.  return @kind void;
  catch `java.lang.Exception` @[L26fe90..L26fe9e] goto L26fea0;
}
procedure `void` `lockLogLevel`(`com.adjust.sdk.Logger` v1 @kind this) @signature `Lcom/adjust/sdk/Logger;.lockLogLevel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26fef0.  v0:= 1I;
  #L26fef2.  v1.`com.adjust.sdk.Logger.logLevelLocked` @type ^`boolean` := v0 @kind boolean;
  #L26fef6.  return @kind void;
}
procedure `void` `setLogLevel`(`com.adjust.sdk.Logger` v1 @kind this, `com.adjust.sdk.LogLevel` v2 @kind object, `boolean` v3 ) @signature `Lcom/adjust/sdk/Logger;.setLogLevel:(Lcom/adjust/sdk/LogLevel;Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26ff08.  v0:= v1.`com.adjust.sdk.Logger.logLevelLocked` @type ^`boolean` @kind boolean;
  #L26ff0c.  if v0 == 0 then goto L26ff12;
  #L26ff10.  return @kind void;
  #L26ff12.  v1.`com.adjust.sdk.Logger.logLevel` @type ^`com.adjust.sdk.LogLevel` := v2 @kind object;
  #L26ff16.  v1.`com.adjust.sdk.Logger.isProductionEnvironment` @type ^`boolean` := v3 @kind boolean;
  #L26ff1a.  return @kind void;
}
procedure `void` `setLogLevelString`(`com.adjust.sdk.Logger` v1 @kind this, `java.lang.String` v2 @kind object, `boolean` v3 ) @signature `Lcom/adjust/sdk/Logger;.setLogLevelString:(Ljava/lang/String;Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26ff2c.  if v2 == 0 then goto L26ff62;
  #L26ff30.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L26ff34.  call temp:= `toUpperCase`(v2, v0) @signature `Ljava/lang/String;.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L26ff3a.  v0:= temp @kind object;
  #L26ff3c.  call temp:= `valueOf`(v0) @signature `Lcom/adjust/sdk/LogLevel;.valueOf:(Ljava/lang/String;)Lcom/adjust/sdk/LogLevel;` @kind static;
  #L26ff42.  v0:= temp @kind object;
  #L26ff44.  call `setLogLevel`(v1, v0, v3) @signature `Lcom/adjust/sdk/Logger;.setLogLevel:(Lcom/adjust/sdk/LogLevel;Z)V` @kind virtual;
  #L26ff4a.  goto L26ff62;
  #L26ff4c.  v3:= 1I;
  #L26ff4e.  v3:= new `java.lang.Object`[v3];
  #L26ff52.  v0:= 0I;
  #L26ff54.  v3[v0]:= v2 @kind object;
  #L26ff58.  v2:= "Malformed logLevel '%s', falling back to 'info'" @kind object;
  #L26ff5c.  call `error`(v1, v2, v3) @signature `Lcom/adjust/sdk/Logger;.error:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind virtual;
  #L26ff62.  return @kind void;
  catch `java.lang.IllegalArgumentException` @[L26ff30..L26ff4a] goto L26ff4c;
}
procedure `void` `verbose`(`com.adjust.sdk.Logger` v4 @kind this, `java.lang.String` v5 @kind object, `java.lang.Object`[] v6 @kind object) @signature `Lcom/adjust/sdk/Logger;.verbose:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26ff84.  v0:= "Adjust" @kind object;
  #L26ff88.  v1:= v4.`com.adjust.sdk.Logger.isProductionEnvironment` @type ^`boolean` @kind boolean;
  #L26ff8c.  if v1 == 0 then goto L26ff92;
  #L26ff90.  return @kind void;
  #L26ff92.  v1:= v4.`com.adjust.sdk.Logger.logLevel` @type ^`com.adjust.sdk.LogLevel` @kind object;
  #L26ff96.  v1:= v1.`com.adjust.sdk.LogLevel.androidLogLevel` @type ^`int`;
  #L26ff9a.  v2:= 2I;
  #L26ff9c.  if v1 > v2 then goto L26ffda;
  #L26ffa0.  call temp:= `formatString`(v5, v6) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L26ffa6.  v1:= temp @kind object;
  #L26ffa8.  call temp:= `v`(v0, v1) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L26ffae.  goto L26ffda;
  #L26ffb0.  v1:= `@@com.adjust.sdk.Logger.formatErrorMessage` @type ^`java.lang.String` @kind object;
  #L26ffb4.  v2:= new `java.lang.Object`[v2];
  #L26ffb8.  v3:= 0I;
  #L26ffba.  v2[v3]:= v5 @kind object;
  #L26ffbe.  v5:= 1I;
  #L26ffc0.  call temp:= `toString`(v6) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L26ffc6.  v6:= temp @kind object;
  #L26ffc8.  v2[v5]:= v6 @kind object;
  #L26ffcc.  call temp:= `formatString`(v1, v2) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L26ffd2.  v5:= temp @kind object;
  #L26ffd4.  call temp:= `e`(v0, v5) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L26ffda.  return @kind void;
  catch `java.lang.Exception` @[L26ffa0..L26ffae] goto L26ffb0;
}
procedure `void` `warn`(`com.adjust.sdk.Logger` v4 @kind this, `java.lang.String` v5 @kind object, `java.lang.Object`[] v6 @kind object) @signature `Lcom/adjust/sdk/Logger;.warn:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26fffc.  v0:= "Adjust" @kind object;
  #L270000.  v1:= v4.`com.adjust.sdk.Logger.isProductionEnvironment` @type ^`boolean` @kind boolean;
  #L270004.  if v1 == 0 then goto L27000a;
  #L270008.  return @kind void;
  #L27000a.  v1:= v4.`com.adjust.sdk.Logger.logLevel` @type ^`com.adjust.sdk.LogLevel` @kind object;
  #L27000e.  v1:= v1.`com.adjust.sdk.LogLevel.androidLogLevel` @type ^`int`;
  #L270012.  v2:= 5I;
  #L270014.  if v1 > v2 then goto L270054;
  #L270018.  call temp:= `formatString`(v5, v6) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L27001e.  v1:= temp @kind object;
  #L270020.  call temp:= `w`(v0, v1) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L270026.  goto L270054;
  #L270028.  v1:= `@@com.adjust.sdk.Logger.formatErrorMessage` @type ^`java.lang.String` @kind object;
  #L27002c.  v2:= 2I;
  #L27002e.  v2:= new `java.lang.Object`[v2];
  #L270032.  v3:= 0I;
  #L270034.  v2[v3]:= v5 @kind object;
  #L270038.  v5:= 1I;
  #L27003a.  call temp:= `toString`(v6) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L270040.  v6:= temp @kind object;
  #L270042.  v2[v5]:= v6 @kind object;
  #L270046.  call temp:= `formatString`(v1, v2) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L27004c.  v5:= temp @kind object;
  #L27004e.  call temp:= `e`(v0, v5) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L270054.  return @kind void;
  catch `java.lang.Exception` @[L270018..L270026] goto L270028;
}
procedure `void` `warnInProduction`(`com.adjust.sdk.Logger` v4 @kind this, `java.lang.String` v5 @kind object, `java.lang.Object`[] v6 @kind object) @signature `Lcom/adjust/sdk/Logger;.warnInProduction:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L270078.  v0:= "Adjust" @kind object;
  #L27007c.  v1:= v4.`com.adjust.sdk.Logger.logLevel` @type ^`com.adjust.sdk.LogLevel` @kind object;
  #L270080.  v1:= v1.`com.adjust.sdk.LogLevel.androidLogLevel` @type ^`int`;
  #L270084.  v2:= 5I;
  #L270086.  if v1 > v2 then goto L2700c6;
  #L27008a.  call temp:= `formatString`(v5, v6) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L270090.  v1:= temp @kind object;
  #L270092.  call temp:= `w`(v0, v1) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L270098.  goto L2700c6;
  #L27009a.  v1:= `@@com.adjust.sdk.Logger.formatErrorMessage` @type ^`java.lang.String` @kind object;
  #L27009e.  v2:= 2I;
  #L2700a0.  v2:= new `java.lang.Object`[v2];
  #L2700a4.  v3:= 0I;
  #L2700a6.  v2[v3]:= v5 @kind object;
  #L2700aa.  v5:= 1I;
  #L2700ac.  call temp:= `toString`(v6) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2700b2.  v6:= temp @kind object;
  #L2700b4.  v2[v5]:= v6 @kind object;
  #L2700b8.  call temp:= `formatString`(v1, v2) @signature `Lcom/adjust/sdk/Util;.formatString:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2700be.  v5:= temp @kind object;
  #L2700c0.  call temp:= `e`(v0, v5) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2700c6.  return @kind void;
  catch `java.lang.Exception` @[L27008a..L270098] goto L27009a;
}
