record `com.adjust.sdk.scheduler.SingleThreadFutureScheduler$2` @kind class @AccessFlag  extends `java.util.concurrent.Callable` @kind interface {
  `com.adjust.sdk.scheduler.SingleThreadFutureScheduler` `com.adjust.sdk.scheduler.SingleThreadFutureScheduler$2.this$0` @AccessFlag FINAL_SYNTHETIC;
  `java.util.concurrent.Callable` `com.adjust.sdk.scheduler.SingleThreadFutureScheduler$2.val$callable` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.adjust.sdk.scheduler.SingleThreadFutureScheduler$2` v0 @kind this, `com.adjust.sdk.scheduler.SingleThreadFutureScheduler` v1 @kind object, `java.util.concurrent.Callable` v2 @kind object) @signature `Lcom/adjust/sdk/scheduler/SingleThreadFutureScheduler$2;.<init>:(Lcom/adjust/sdk/scheduler/SingleThreadFutureScheduler;Ljava/util/concurrent/Callable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L27a890.  v0.`com.adjust.sdk.scheduler.SingleThreadFutureScheduler$2.this$0` @type ^`com.adjust.sdk.scheduler.SingleThreadFutureScheduler` := v1 @kind object;
  #L27a894.  v0.`com.adjust.sdk.scheduler.SingleThreadFutureScheduler$2.val$callable` @type ^`java.util.concurrent.Callable` := v2 @kind object;
  #L27a898.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27a89e.  return @kind void;
}
procedure `java.lang.Object` `call`(`com.adjust.sdk.scheduler.SingleThreadFutureScheduler$2` v5 @kind this) @signature `Lcom/adjust/sdk/scheduler/SingleThreadFutureScheduler$2;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L27a824.  v0:= v5.`com.adjust.sdk.scheduler.SingleThreadFutureScheduler$2.val$callable` @type ^`java.util.concurrent.Callable` @kind object;
  #L27a828.  call temp:= `call`(v0) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L27a82e.  v0:= temp @kind object;
  #L27a830.  return v0 @kind object;
  #L27a832.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L27a834.  call temp:= `getLogger`() @signature `Lcom/adjust/sdk/AdjustFactory;.getLogger:()Lcom/adjust/sdk/ILogger;` @kind static;
  #L27a83a.  v1:= temp @kind object;
  #L27a83c.  v2:= 2I;
  #L27a83e.  v2:= new `java.lang.Object`[v2];
  #L27a842.  v3:= 0I;
  #L27a844.  call temp:= `getMessage`(v0) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L27a84a.  v4:= temp @kind object;
  #L27a84c.  v2[v3]:= v4 @kind object;
  #L27a850.  v3:= 1I;
  #L27a852.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L27a858.  v0:= temp @kind object;
  #L27a85a.  call temp:= `getCanonicalName`(v0) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L27a860.  v0:= temp @kind object;
  #L27a862.  v2[v3]:= v0 @kind object;
  #L27a866.  v0:= "Callable error [%s] of type [%s]" @kind object;
  #L27a86a.  call `error`(v1, v0, v2) @signature `Lcom/adjust/sdk/ILogger;.error:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind interface;
  #L27a870.  v0:= 0I;
  #L27a872.  return v0 @kind object;
  catch `java.lang.Throwable` @[L27a824..L27a830] goto L27a832;
}
