record `com.adjust.sdk.scheduler.RunnableWrapper` @kind class @AccessFlag PUBLIC extends `java.lang.Runnable` @kind interface {
  `java.lang.Runnable` `com.adjust.sdk.scheduler.RunnableWrapper.runnable` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.adjust.sdk.scheduler.RunnableWrapper` v0 @kind this, `java.lang.Runnable` v1 @kind object) @signature `Lcom/adjust/sdk/scheduler/RunnableWrapper;.<init>:(Ljava/lang/Runnable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L27a338.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27a33e.  v0.`com.adjust.sdk.scheduler.RunnableWrapper.runnable` @type ^`java.lang.Runnable` := v1 @kind object;
  #L27a342.  return @kind void;
}
procedure `void` `run`(`com.adjust.sdk.scheduler.RunnableWrapper` v5 @kind this) @signature `Lcom/adjust/sdk/scheduler/RunnableWrapper;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L27a354.  v0:= v5.`com.adjust.sdk.scheduler.RunnableWrapper.runnable` @type ^`java.lang.Runnable` @kind object;
  #L27a358.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L27a35e.  goto L27a39e;
  #L27a360.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L27a362.  call temp:= `getLogger`() @signature `Lcom/adjust/sdk/AdjustFactory;.getLogger:()Lcom/adjust/sdk/ILogger;` @kind static;
  #L27a368.  v1:= temp @kind object;
  #L27a36a.  v2:= 2I;
  #L27a36c.  v2:= new `java.lang.Object`[v2];
  #L27a370.  v3:= 0I;
  #L27a372.  call temp:= `getMessage`(v0) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L27a378.  v4:= temp @kind object;
  #L27a37a.  v2[v3]:= v4 @kind object;
  #L27a37e.  v3:= 1I;
  #L27a380.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L27a386.  v0:= temp @kind object;
  #L27a388.  call temp:= `getCanonicalName`(v0) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L27a38e.  v0:= temp @kind object;
  #L27a390.  v2[v3]:= v0 @kind object;
  #L27a394.  v0:= "Runnable error [%s] of type [%s]" @kind object;
  #L27a398.  call `error`(v1, v0, v2) @signature `Lcom/adjust/sdk/ILogger;.error:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind interface;
  #L27a39e.  return @kind void;
  catch `java.lang.Throwable` @[L27a354..L27a35e] goto L27a360;
}
