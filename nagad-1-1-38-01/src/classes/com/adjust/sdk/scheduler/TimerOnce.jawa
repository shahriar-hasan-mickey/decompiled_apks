record `com.adjust.sdk.scheduler.TimerOnce` @kind class @AccessFlag PUBLIC {
  `java.lang.Runnable` `com.adjust.sdk.scheduler.TimerOnce.command` @AccessFlag PRIVATE;
  `com.adjust.sdk.ILogger` `com.adjust.sdk.scheduler.TimerOnce.logger` @AccessFlag PRIVATE;
  `java.lang.String` `com.adjust.sdk.scheduler.TimerOnce.name` @AccessFlag PRIVATE;
  `com.adjust.sdk.scheduler.FutureScheduler` `com.adjust.sdk.scheduler.TimerOnce.scheduler` @AccessFlag PRIVATE;
  `java.util.concurrent.ScheduledFuture` `com.adjust.sdk.scheduler.TimerOnce.waitingTask` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.adjust.sdk.scheduler.TimerOnce` v2 @kind this, `java.lang.Runnable` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/adjust/sdk/scheduler/TimerOnce;.<init>:(Ljava/lang/Runnable;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L27ae80.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27ae86.  v2.`com.adjust.sdk.scheduler.TimerOnce.name` @type ^`java.lang.String` := v4 @kind object;
  #L27ae8a.  v0:= new `com.adjust.sdk.scheduler.SingleThreadFutureScheduler`;
  #L27ae8e.  v1:= 1I;
  #L27ae90.  call `<init>`(v0, v4, v1) @signature `Lcom/adjust/sdk/scheduler/SingleThreadFutureScheduler;.<init>:(Ljava/lang/String;Z)V` @kind direct;
  #L27ae96.  v2.`com.adjust.sdk.scheduler.TimerOnce.scheduler` @type ^`com.adjust.sdk.scheduler.FutureScheduler` := v0 @kind object;
  #L27ae9a.  v2.`com.adjust.sdk.scheduler.TimerOnce.command` @type ^`java.lang.Runnable` := v3 @kind object;
  #L27ae9e.  call temp:= `getLogger`() @signature `Lcom/adjust/sdk/AdjustFactory;.getLogger:()Lcom/adjust/sdk/ILogger;` @kind static;
  #L27aea4.  v3:= temp @kind object;
  #L27aea6.  v2.`com.adjust.sdk.scheduler.TimerOnce.logger` @type ^`com.adjust.sdk.ILogger` := v3 @kind object;
  #L27aeaa.  return @kind void;
}
procedure `java.lang.String` `access$000`(`com.adjust.sdk.scheduler.TimerOnce` v0 @kind object) @signature `Lcom/adjust/sdk/scheduler/TimerOnce;.access$000:(Lcom/adjust/sdk/scheduler/TimerOnce;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L27ae24.  v0:= v0.`com.adjust.sdk.scheduler.TimerOnce.name` @type ^`java.lang.String` @kind object;
  #L27ae28.  return v0 @kind object;
}
procedure `com.adjust.sdk.ILogger` `access$100`(`com.adjust.sdk.scheduler.TimerOnce` v0 @kind object) @signature `Lcom/adjust/sdk/scheduler/TimerOnce;.access$100:(Lcom/adjust/sdk/scheduler/TimerOnce;)Lcom/adjust/sdk/ILogger;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L27adf4.  v0:= v0.`com.adjust.sdk.scheduler.TimerOnce.logger` @type ^`com.adjust.sdk.ILogger` @kind object;
  #L27adf8.  return v0 @kind object;
}
procedure `java.lang.Runnable` `access$200`(`com.adjust.sdk.scheduler.TimerOnce` v0 @kind object) @signature `Lcom/adjust/sdk/scheduler/TimerOnce;.access$200:(Lcom/adjust/sdk/scheduler/TimerOnce;)Ljava/lang/Runnable;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L27ae0c.  v0:= v0.`com.adjust.sdk.scheduler.TimerOnce.command` @type ^`java.lang.Runnable` @kind object;
  #L27ae10.  return v0 @kind object;
}
procedure `java.util.concurrent.ScheduledFuture` `access$302`(`com.adjust.sdk.scheduler.TimerOnce` v0 @kind object, `java.util.concurrent.ScheduledFuture` v1 @kind object) @signature `Lcom/adjust/sdk/scheduler/TimerOnce;.access$302:(Lcom/adjust/sdk/scheduler/TimerOnce;Ljava/util/concurrent/ScheduledFuture;)Ljava/util/concurrent/ScheduledFuture;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L27ae3c.  v0.`com.adjust.sdk.scheduler.TimerOnce.waitingTask` @type ^`java.util.concurrent.ScheduledFuture` := v1 @kind object;
  #L27ae40.  return v1 @kind object;
}
procedure `void` `cancel`(`com.adjust.sdk.scheduler.TimerOnce` v3 @kind this, `boolean` v4 ) @signature `Lcom/adjust/sdk/scheduler/TimerOnce;.cancel:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L27aed8.  v0:= v3.`com.adjust.sdk.scheduler.TimerOnce.waitingTask` @type ^`java.util.concurrent.ScheduledFuture` @kind object;
  #L27aedc.  if v0 == 0 then goto L27aee6;
  #L27aee0.  call temp:= `cancel`(v0, v4) @signature `Ljava/util/concurrent/ScheduledFuture;.cancel:(Z)Z` @kind interface;
  #L27aee6.  v4:= 0I;
  #L27aee8.  v3.`com.adjust.sdk.scheduler.TimerOnce.waitingTask` @type ^`java.util.concurrent.ScheduledFuture` := v4 @kind object;
  #L27aeec.  v4:= v3.`com.adjust.sdk.scheduler.TimerOnce.logger` @type ^`com.adjust.sdk.ILogger` @kind object;
  #L27aef0.  v0:= 1I;
  #L27aef2.  v0:= new `java.lang.Object`[v0];
  #L27aef6.  v1:= 0I;
  #L27aef8.  v2:= v3.`com.adjust.sdk.scheduler.TimerOnce.name` @type ^`java.lang.String` @kind object;
  #L27aefc.  v0[v1]:= v2 @kind object;
  #L27af00.  v1:= "%s canceled" @kind object;
  #L27af04.  call `verbose`(v4, v1, v0) @signature `Lcom/adjust/sdk/ILogger;.verbose:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind interface;
  #L27af0a.  return @kind void;
}
procedure `void` `cancel`(`com.adjust.sdk.scheduler.TimerOnce` v1 @kind this) @signature `Lcom/adjust/sdk/scheduler/TimerOnce;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27aebc.  v0:= 0I;
  #L27aebe.  call `cancel`(v1, v0) @signature `Lcom/adjust/sdk/scheduler/TimerOnce;.cancel:(Z)V` @kind direct;
  #L27aec4.  return @kind void;
}
procedure `long` `getFireIn`(`com.adjust.sdk.scheduler.TimerOnce` v2 @kind this) @signature `Lcom/adjust/sdk/scheduler/TimerOnce;.getFireIn:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L27ae54.  v0:= v2.`com.adjust.sdk.scheduler.TimerOnce.waitingTask` @type ^`java.util.concurrent.ScheduledFuture` @kind object;
  #L27ae58.  if v0 != 0 then goto L27ae62;
  #L27ae5c.  v0:= 0L;
  #L27ae60.  return v0 @kind wide;
  #L27ae62.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L27ae66.  call temp:= `getDelay`(v0, v1) @signature `Ljava/util/concurrent/ScheduledFuture;.getDelay:(Ljava/util/concurrent/TimeUnit;)J` @kind interface;
  #L27ae6c.  v0:= temp @kind wide;
  #L27ae6e.  return v0 @kind wide;
}
procedure `void` `startIn`(`com.adjust.sdk.scheduler.TimerOnce` v6 @kind this, `long` v7 ) @signature `Lcom/adjust/sdk/scheduler/TimerOnce;.startIn:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L27af1c.  v0:= 0I;
  #L27af1e.  call `cancel`(v6, v0) @signature `Lcom/adjust/sdk/scheduler/TimerOnce;.cancel:(Z)V` @kind direct;
  #L27af24.  v1:= `@@com.adjust.sdk.Util.SecondsDisplayFormat` @type ^`java.text.DecimalFormat` @kind object;
  #L27af28.  v2:= (`double`) v7 @kind l2d;
  #L27af2a.  v4:= 1000.0D;
  #L27af34.  v2:= v2 / v4 @kind double;
  #L27af36.  call temp:= `format`(v1, v2) @signature `Ljava/text/DecimalFormat;.format:(D)Ljava/lang/String;` @kind virtual;
  #L27af3c.  v1:= temp @kind object;
  #L27af3e.  v2:= v6.`com.adjust.sdk.scheduler.TimerOnce.logger` @type ^`com.adjust.sdk.ILogger` @kind object;
  #L27af42.  v3:= 2I;
  #L27af44.  v3:= new `java.lang.Object`[v3];
  #L27af48.  v4:= v6.`com.adjust.sdk.scheduler.TimerOnce.name` @type ^`java.lang.String` @kind object;
  #L27af4c.  v3[v0]:= v4 @kind object;
  #L27af50.  v0:= 1I;
  #L27af52.  v3[v0]:= v1 @kind object;
  #L27af56.  v0:= "%s starting. Launching in %s seconds" @kind object;
  #L27af5a.  call `verbose`(v2, v0, v3) @signature `Lcom/adjust/sdk/ILogger;.verbose:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind interface;
  #L27af60.  v0:= v6.`com.adjust.sdk.scheduler.TimerOnce.scheduler` @type ^`com.adjust.sdk.scheduler.FutureScheduler` @kind object;
  #L27af64.  v1:= new `com.adjust.sdk.scheduler.TimerOnce$1`;
  #L27af68.  call `<init>`(v1, v6) @signature `Lcom/adjust/sdk/scheduler/TimerOnce$1;.<init>:(Lcom/adjust/sdk/scheduler/TimerOnce;)V` @kind direct;
  #L27af6e.  call temp:= `scheduleFuture`(v0, v1, v7) @signature `Lcom/adjust/sdk/scheduler/FutureScheduler;.scheduleFuture:(Ljava/lang/Runnable;J)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L27af74.  v7:= temp @kind object;
  #L27af76.  v6.`com.adjust.sdk.scheduler.TimerOnce.waitingTask` @type ^`java.util.concurrent.ScheduledFuture` := v7 @kind object;
  #L27af7a.  return @kind void;
}
procedure `void` `teardown`(`com.adjust.sdk.scheduler.TimerOnce` v1 @kind this) @signature `Lcom/adjust/sdk/scheduler/TimerOnce;.teardown:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27af8c.  v0:= 1I;
  #L27af8e.  call `cancel`(v1, v0) @signature `Lcom/adjust/sdk/scheduler/TimerOnce;.cancel:(Z)V` @kind direct;
  #L27af94.  v0:= v1.`com.adjust.sdk.scheduler.TimerOnce.scheduler` @type ^`com.adjust.sdk.scheduler.FutureScheduler` @kind object;
  #L27af98.  if v0 == 0 then goto L27afa2;
  #L27af9c.  call `teardown`(v0) @signature `Lcom/adjust/sdk/scheduler/FutureScheduler;.teardown:()V` @kind interface;
  #L27afa2.  v0:= 0I;
  #L27afa4.  v1.`com.adjust.sdk.scheduler.TimerOnce.scheduler` @type ^`com.adjust.sdk.scheduler.FutureScheduler` := v0 @kind object;
  #L27afa8.  return @kind void;
}
