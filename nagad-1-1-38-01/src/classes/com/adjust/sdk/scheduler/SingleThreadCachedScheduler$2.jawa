record `com.adjust.sdk.scheduler.SingleThreadCachedScheduler$2` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `com.adjust.sdk.scheduler.SingleThreadCachedScheduler` `com.adjust.sdk.scheduler.SingleThreadCachedScheduler$2.this$0` @AccessFlag FINAL_SYNTHETIC;
  `long` `com.adjust.sdk.scheduler.SingleThreadCachedScheduler$2.val$millisecondsDelay` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Runnable` `com.adjust.sdk.scheduler.SingleThreadCachedScheduler$2.val$task` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.adjust.sdk.scheduler.SingleThreadCachedScheduler$2` v0 @kind this, `com.adjust.sdk.scheduler.SingleThreadCachedScheduler` v1 @kind object, `long` v2 , `java.lang.Runnable` v4 @kind object) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler$2;.<init>:(Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;JLjava/lang/Runnable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L27a420.  v0.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler$2.this$0` @type ^`com.adjust.sdk.scheduler.SingleThreadCachedScheduler` := v1 @kind object;
  #L27a424.  v0.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler$2.val$millisecondsDelay` @type ^`long` := v2 @kind wide;
  #L27a428.  v0.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler$2.val$task` @type ^`java.lang.Runnable` := v4 @kind object;
  #L27a42c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27a432.  return @kind void;
}
procedure `void` `run`(`com.adjust.sdk.scheduler.SingleThreadCachedScheduler$2` v4 @kind this) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler$2;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L27a444.  v0:= v4.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler$2.val$millisecondsDelay` @type ^`long` @kind wide;
  #L27a448.  call `sleep`(v0) @signature `Ljava/lang/Thread;.sleep:(J)V` @kind static;
  #L27a44e.  goto L27a478;
  #L27a450.  v0:= Exception @type ^`java.lang.InterruptedException` @kind object;
  #L27a452.  call temp:= `getLogger`() @signature `Lcom/adjust/sdk/AdjustFactory;.getLogger:()Lcom/adjust/sdk/ILogger;` @kind static;
  #L27a458.  v1:= temp @kind object;
  #L27a45a.  v2:= 1I;
  #L27a45c.  v2:= new `java.lang.Object`[v2];
  #L27a460.  v3:= 0I;
  #L27a462.  call temp:= `getMessage`(v0) @signature `Ljava/lang/InterruptedException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L27a468.  v0:= temp @kind object;
  #L27a46a.  v2[v3]:= v0 @kind object;
  #L27a46e.  v0:= "Sleep delay exception: %s" @kind object;
  #L27a472.  call `warn`(v1, v0, v2) @signature `Lcom/adjust/sdk/ILogger;.warn:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind interface;
  #L27a478.  v0:= v4.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler$2.this$0` @type ^`com.adjust.sdk.scheduler.SingleThreadCachedScheduler` @kind object;
  #L27a47c.  v1:= v4.`com.adjust.sdk.scheduler.SingleThreadCachedScheduler$2.val$task` @type ^`java.lang.Runnable` @kind object;
  #L27a480.  call `submit`(v0, v1) @signature `Lcom/adjust/sdk/scheduler/SingleThreadCachedScheduler;.submit:(Ljava/lang/Runnable;)V` @kind virtual;
  #L27a486.  return @kind void;
  catch `java.lang.InterruptedException` @[L27a444..L27a44e] goto L27a450;
}
