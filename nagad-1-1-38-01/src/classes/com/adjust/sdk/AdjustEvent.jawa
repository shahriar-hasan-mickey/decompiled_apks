record `com.adjust.sdk.AdjustEvent` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `com.adjust.sdk.AdjustEvent.callbackId` @AccessFlag ;
  `java.util.Map` `com.adjust.sdk.AdjustEvent.callbackParameters` @AccessFlag ;
  `java.lang.String` `com.adjust.sdk.AdjustEvent.currency` @AccessFlag ;
  `java.lang.String` `com.adjust.sdk.AdjustEvent.eventToken` @AccessFlag ;
  `java.lang.String` `com.adjust.sdk.AdjustEvent.orderId` @AccessFlag ;
  `java.util.Map` `com.adjust.sdk.AdjustEvent.partnerParameters` @AccessFlag ;
  `java.lang.Double` `com.adjust.sdk.AdjustEvent.revenue` @AccessFlag ;
}
global `com.adjust.sdk.ILogger` `@@com.adjust.sdk.AdjustEvent.logger` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/adjust/sdk/AdjustEvent;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L26ae3c.  call temp:= `getLogger`() @signature `Lcom/adjust/sdk/AdjustFactory;.getLogger:()Lcom/adjust/sdk/ILogger;` @kind static;
  #L26ae42.  v0:= temp @kind object;
  #L26ae44.  `@@com.adjust.sdk.AdjustEvent.logger` @type ^`com.adjust.sdk.ILogger` := v0 @kind object;
  #L26ae48.  return @kind void;
}
procedure `void` `<init>`(`com.adjust.sdk.AdjustEvent` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/adjust/sdk/AdjustEvent;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L26ae5c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L26ae62.  v0:= `@@com.adjust.sdk.AdjustEvent.logger` @type ^`com.adjust.sdk.ILogger` @kind object;
  #L26ae66.  call temp:= `checkEventToken`(v2, v0) @signature `Lcom/adjust/sdk/AdjustEvent;.checkEventToken:(Ljava/lang/String;Lcom/adjust/sdk/ILogger;)Z` @kind static;
  #L26ae6c.  v0:= temp;
  #L26ae6e.  if v0 != 0 then goto L26ae74;
  #L26ae72.  return @kind void;
  #L26ae74.  v1.`com.adjust.sdk.AdjustEvent.eventToken` @type ^`java.lang.String` := v2 @kind object;
  #L26ae78.  return @kind void;
}
procedure `boolean` `checkEventToken`(`java.lang.String` v2 @kind object, `com.adjust.sdk.ILogger` v3 @kind object) @signature `Lcom/adjust/sdk/AdjustEvent;.checkEventToken:(Ljava/lang/String;Lcom/adjust/sdk/ILogger;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L26ad38.  v0:= 0I;
  #L26ad3a.  if v2 != 0 then goto L26ad4e;
  #L26ad3e.  v2:= new `java.lang.Object`[v0];
  #L26ad42.  v1:= "Missing Event Token" @kind object;
  #L26ad46.  call `error`(v3, v1, v2) @signature `Lcom/adjust/sdk/ILogger;.error:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind interface;
  #L26ad4c.  return v0;
  #L26ad4e.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L26ad54.  v2:= temp;
  #L26ad56.  if v2 > 0 then goto L26ad6a;
  #L26ad5a.  v2:= new `java.lang.Object`[v0];
  #L26ad5e.  v1:= "Event Token can't be empty" @kind object;
  #L26ad62.  call `error`(v3, v1, v2) @signature `Lcom/adjust/sdk/ILogger;.error:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind interface;
  #L26ad68.  return v0;
  #L26ad6a.  v2:= 1I;
  #L26ad6c.  return v2;
}
procedure `boolean` `checkRevenue`(`com.adjust.sdk.AdjustEvent` v7 @kind this, `java.lang.Double` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Lcom/adjust/sdk/AdjustEvent;.checkRevenue:(Ljava/lang/Double;Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L26ad80.  v0:= 1I;
  #L26ad82.  v1:= 0I;
  #L26ad84.  if v8 == 0 then goto L26adf0;
  #L26ad88.  call temp:= `doubleValue`(v8) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L26ad8e.  v2:= temp @kind wide;
  #L26ad90.  v4:= 0L;
  #L26ad94.  v6:= dcmpg(v2, v4);
  #L26ad98.  if v6 >= 0 then goto L26adb4;
  #L26ad9c.  v9:= `@@com.adjust.sdk.AdjustEvent.logger` @type ^`com.adjust.sdk.ILogger` @kind object;
  #L26ada0.  v0:= new `java.lang.Object`[v0];
  #L26ada4.  v0[v1]:= v8 @kind object;
  #L26ada8.  v8:= "Invalid amount %.5f" @kind object;
  #L26adac.  call `error`(v9, v8, v0) @signature `Lcom/adjust/sdk/ILogger;.error:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind interface;
  #L26adb2.  return v1;
  #L26adb4.  if v9 != 0 then goto L26adcc;
  #L26adb8.  v8:= `@@com.adjust.sdk.AdjustEvent.logger` @type ^`com.adjust.sdk.ILogger` @kind object;
  #L26adbc.  v9:= new `java.lang.Object`[v1];
  #L26adc0.  v0:= "Currency must be set with revenue" @kind object;
  #L26adc4.  call `error`(v8, v0, v9) @signature `Lcom/adjust/sdk/ILogger;.error:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind interface;
  #L26adca.  return v1;
  #L26adcc.  v8:= "" @kind object;
  #L26add0.  call temp:= `equals`(v9, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L26add6.  v8:= temp;
  #L26add8.  if v8 == 0 then goto L26ae08;
  #L26addc.  v8:= `@@com.adjust.sdk.AdjustEvent.logger` @type ^`com.adjust.sdk.ILogger` @kind object;
  #L26ade0.  v9:= new `java.lang.Object`[v1];
  #L26ade4.  v0:= "Currency is empty" @kind object;
  #L26ade8.  call `error`(v8, v0, v9) @signature `Lcom/adjust/sdk/ILogger;.error:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind interface;
  #L26adee.  return v1;
  #L26adf0.  if v9 == 0 then goto L26ae08;
  #L26adf4.  v8:= `@@com.adjust.sdk.AdjustEvent.logger` @type ^`com.adjust.sdk.ILogger` @kind object;
  #L26adf8.  v9:= new `java.lang.Object`[v1];
  #L26adfc.  v0:= "Revenue must be set with currency" @kind object;
  #L26ae00.  call `error`(v8, v0, v9) @signature `Lcom/adjust/sdk/ILogger;.error:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind interface;
  #L26ae06.  return v1;
  #L26ae08.  return v0;
}
procedure `void` `addCallbackParameter`(`com.adjust.sdk.AdjustEvent` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/adjust/sdk/AdjustEvent;.addCallbackParameter:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L26ae8c.  v0:= "Callback" @kind object;
  #L26ae90.  v1:= "key" @kind object;
  #L26ae94.  call temp:= `isValidParameter`(v3, v1, v0) @signature `Lcom/adjust/sdk/Util;.isValidParameter:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z` @kind static;
  #L26ae9a.  v1:= temp;
  #L26ae9c.  if v1 != 0 then goto L26aea2;
  #L26aea0.  return @kind void;
  #L26aea2.  v1:= "value" @kind object;
  #L26aea6.  call temp:= `isValidParameter`(v4, v1, v0) @signature `Lcom/adjust/sdk/Util;.isValidParameter:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z` @kind static;
  #L26aeac.  v0:= temp;
  #L26aeae.  if v0 != 0 then goto L26aeb4;
  #L26aeb2.  return @kind void;
  #L26aeb4.  v0:= v2.`com.adjust.sdk.AdjustEvent.callbackParameters` @type ^`java.util.Map` @kind object;
  #L26aeb8.  if v0 != 0 then goto L26aeca;
  #L26aebc.  v0:= new `java.util.LinkedHashMap`;
  #L26aec0.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L26aec6.  v2.`com.adjust.sdk.AdjustEvent.callbackParameters` @type ^`java.util.Map` := v0 @kind object;
  #L26aeca.  v0:= v2.`com.adjust.sdk.AdjustEvent.callbackParameters` @type ^`java.util.Map` @kind object;
  #L26aece.  call temp:= `put`(v0, v3, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L26aed4.  v4:= temp @kind object;
  #L26aed6.  v4:= (`java.lang.String`) v4 @kind object;
  #L26aeda.  if v4 == 0 then goto L26aef8;
  #L26aede.  v4:= `@@com.adjust.sdk.AdjustEvent.logger` @type ^`com.adjust.sdk.ILogger` @kind object;
  #L26aee2.  v0:= 1I;
  #L26aee4.  v0:= new `java.lang.Object`[v0];
  #L26aee8.  v1:= 0I;
  #L26aeea.  v0[v1]:= v3 @kind object;
  #L26aeee.  v3:= "Key %s was overwritten" @kind object;
  #L26aef2.  call `warn`(v4, v3, v0) @signature `Lcom/adjust/sdk/ILogger;.warn:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind interface;
  #L26aef8.  return @kind void;
}
procedure `void` `addPartnerParameter`(`com.adjust.sdk.AdjustEvent` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/adjust/sdk/AdjustEvent;.addPartnerParameter:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L26af0c.  v0:= "Partner" @kind object;
  #L26af10.  v1:= "key" @kind object;
  #L26af14.  call temp:= `isValidParameter`(v3, v1, v0) @signature `Lcom/adjust/sdk/Util;.isValidParameter:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z` @kind static;
  #L26af1a.  v1:= temp;
  #L26af1c.  if v1 != 0 then goto L26af22;
  #L26af20.  return @kind void;
  #L26af22.  v1:= "value" @kind object;
  #L26af26.  call temp:= `isValidParameter`(v4, v1, v0) @signature `Lcom/adjust/sdk/Util;.isValidParameter:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z` @kind static;
  #L26af2c.  v0:= temp;
  #L26af2e.  if v0 != 0 then goto L26af34;
  #L26af32.  return @kind void;
  #L26af34.  v0:= v2.`com.adjust.sdk.AdjustEvent.partnerParameters` @type ^`java.util.Map` @kind object;
  #L26af38.  if v0 != 0 then goto L26af4a;
  #L26af3c.  v0:= new `java.util.LinkedHashMap`;
  #L26af40.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L26af46.  v2.`com.adjust.sdk.AdjustEvent.partnerParameters` @type ^`java.util.Map` := v0 @kind object;
  #L26af4a.  v0:= v2.`com.adjust.sdk.AdjustEvent.partnerParameters` @type ^`java.util.Map` @kind object;
  #L26af4e.  call temp:= `put`(v0, v3, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L26af54.  v4:= temp @kind object;
  #L26af56.  v4:= (`java.lang.String`) v4 @kind object;
  #L26af5a.  if v4 == 0 then goto L26af78;
  #L26af5e.  v4:= `@@com.adjust.sdk.AdjustEvent.logger` @type ^`com.adjust.sdk.ILogger` @kind object;
  #L26af62.  v0:= 1I;
  #L26af64.  v0:= new `java.lang.Object`[v0];
  #L26af68.  v1:= 0I;
  #L26af6a.  v0[v1]:= v3 @kind object;
  #L26af6e.  v3:= "Key %s was overwritten" @kind object;
  #L26af72.  call `warn`(v4, v3, v0) @signature `Lcom/adjust/sdk/ILogger;.warn:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind interface;
  #L26af78.  return @kind void;
}
procedure `boolean` `isValid`(`com.adjust.sdk.AdjustEvent` v1 @kind this) @signature `Lcom/adjust/sdk/AdjustEvent;.isValid:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26ae1c.  v0:= v1.`com.adjust.sdk.AdjustEvent.eventToken` @type ^`java.lang.String` @kind object;
  #L26ae20.  if v0 == 0 then goto L26ae28;
  #L26ae24.  v0:= 1I;
  #L26ae26.  goto L26ae2a;
  #L26ae28.  v0:= 0I;
  #L26ae2a.  return v0;
}
procedure `void` `setCallbackId`(`com.adjust.sdk.AdjustEvent` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/adjust/sdk/AdjustEvent;.setCallbackId:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L26af8c.  v0.`com.adjust.sdk.AdjustEvent.callbackId` @type ^`java.lang.String` := v1 @kind object;
  #L26af90.  return @kind void;
}
procedure `void` `setOrderId`(`com.adjust.sdk.AdjustEvent` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/adjust/sdk/AdjustEvent;.setOrderId:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L26afa4.  v0.`com.adjust.sdk.AdjustEvent.orderId` @type ^`java.lang.String` := v1 @kind object;
  #L26afa8.  return @kind void;
}
procedure `void` `setRevenue`(`com.adjust.sdk.AdjustEvent` v1 @kind this, `double` v2 , `java.lang.String` v4 @kind object) @signature `Lcom/adjust/sdk/AdjustEvent;.setRevenue:(DLjava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26afbc.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L26afc2.  v0:= temp @kind object;
  #L26afc4.  call temp:= `checkRevenue`(v1, v0, v4) @signature `Lcom/adjust/sdk/AdjustEvent;.checkRevenue:(Ljava/lang/Double;Ljava/lang/String;)Z` @kind direct;
  #L26afca.  v0:= temp;
  #L26afcc.  if v0 != 0 then goto L26afd2;
  #L26afd0.  return @kind void;
  #L26afd2.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L26afd8.  v2:= temp @kind object;
  #L26afda.  v1.`com.adjust.sdk.AdjustEvent.revenue` @type ^`java.lang.Double` := v2 @kind object;
  #L26afde.  v1.`com.adjust.sdk.AdjustEvent.currency` @type ^`java.lang.String` := v4 @kind object;
  #L26afe2.  return @kind void;
}
