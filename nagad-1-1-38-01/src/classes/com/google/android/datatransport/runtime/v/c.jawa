record `com.google.android.datatransport.runtime.v.c` @kind class @AccessFlag PUBLIC extends `com.google.android.datatransport.runtime.v.e` @kind interface {
  `com.google.android.datatransport.runtime.scheduling.jobscheduling.s` `com.google.android.datatransport.runtime.v.c.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.Executor` `com.google.android.datatransport.runtime.v.c.b` @AccessFlag PRIVATE_FINAL;
  `com.google.android.datatransport.runtime.backends.e` `com.google.android.datatransport.runtime.v.c.c` @AccessFlag PRIVATE_FINAL;
  `com.google.android.datatransport.runtime.v.j.c` `com.google.android.datatransport.runtime.v.c.d` @AccessFlag PRIVATE_FINAL;
  `com.google.android.datatransport.runtime.synchronization.a` `com.google.android.datatransport.runtime.v.c.e` @AccessFlag PRIVATE_FINAL;
}
global `java.util.logging.Logger` `@@com.google.android.datatransport.runtime.v.c.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/datatransport/runtime/v/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2fdd24.  v0:= constclass @type ^`com.google.android.datatransport.runtime.q` @kind object;
  #L2fdd28.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2fdd2e.  v0:= temp @kind object;
  #L2fdd30.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L2fdd36.  v0:= temp @kind object;
  #L2fdd38.  `@@com.google.android.datatransport.runtime.v.c.f` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L2fdd3c.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.datatransport.runtime.v.c` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object, `com.google.android.datatransport.runtime.backends.e` v2 @kind object, `com.google.android.datatransport.runtime.scheduling.jobscheduling.s` v3 @kind object, `com.google.android.datatransport.runtime.v.j.c` v4 @kind object, `com.google.android.datatransport.runtime.synchronization.a` v5 @kind object) @signature `Lcom/google/android/datatransport/runtime/v/c;.<init>:(Ljava/util/concurrent/Executor;Lcom/google/android/datatransport/runtime/backends/e;Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/s;Lcom/google/android/datatransport/runtime/v/j/c;Lcom/google/android/datatransport/runtime/synchronization/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2fdd50.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2fdd56.  v0.`com.google.android.datatransport.runtime.v.c.b` @type ^`java.util.concurrent.Executor` := v1 @kind object;
  #L2fdd5a.  v0.`com.google.android.datatransport.runtime.v.c.c` @type ^`com.google.android.datatransport.runtime.backends.e` := v2 @kind object;
  #L2fdd5e.  v0.`com.google.android.datatransport.runtime.v.c.a` @type ^`com.google.android.datatransport.runtime.scheduling.jobscheduling.s` := v3 @kind object;
  #L2fdd62.  v0.`com.google.android.datatransport.runtime.v.c.d` @type ^`com.google.android.datatransport.runtime.v.j.c` := v4 @kind object;
  #L2fdd66.  v0.`com.google.android.datatransport.runtime.v.c.e` @type ^`com.google.android.datatransport.runtime.synchronization.a` := v5 @kind object;
  #L2fdd6a.  return @kind void;
}
procedure `java.lang.Object` `a`(`com.google.android.datatransport.runtime.v.c` v1 @kind object, `com.google.android.datatransport.runtime.m` v2 @kind object, `com.google.android.datatransport.runtime.h` v3 @kind object) @signature `Lcom/google/android/datatransport/runtime/v/c;.a:(Lcom/google/android/datatransport/runtime/v/c;Lcom/google/android/datatransport/runtime/m;Lcom/google/android/datatransport/runtime/h;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L2fdcf8.  v0:= v1.`com.google.android.datatransport.runtime.v.c.d` @type ^`com.google.android.datatransport.runtime.v.j.c` @kind object;
  #L2fdcfc.  call temp:= `persist`(v0, v2, v3) @signature `Lcom/google/android/datatransport/runtime/v/j/c;.persist:(Lcom/google/android/datatransport/runtime/m;Lcom/google/android/datatransport/runtime/h;)Lcom/google/android/datatransport/runtime/v/j/i;` @kind interface;
  #L2fdd02.  v1:= v1.`com.google.android.datatransport.runtime.v.c.a` @type ^`com.google.android.datatransport.runtime.scheduling.jobscheduling.s` @kind object;
  #L2fdd06.  v3:= 1I;
  #L2fdd08.  call `schedule`(v1, v2, v3) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/s;.schedule:(Lcom/google/android/datatransport/runtime/m;I)V` @kind interface;
  #L2fdd0e.  v1:= 0I;
  #L2fdd10.  return v1 @kind object;
}
procedure `void` `a`(`com.google.android.datatransport.runtime.v.c` v2 @kind object, `com.google.android.datatransport.runtime.m` v3 @kind object, `com.google.android.datatransport.h` v4 @kind object, `com.google.android.datatransport.runtime.h` v5 @kind object) @signature `Lcom/google/android/datatransport/runtime/v/c;.a:(Lcom/google/android/datatransport/runtime/v/c;Lcom/google/android/datatransport/runtime/m;Lcom/google/android/datatransport/h;Lcom/google/android/datatransport/runtime/h;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L2fdd7c.  v0:= v2.`com.google.android.datatransport.runtime.v.c.c` @type ^`com.google.android.datatransport.runtime.backends.e` @kind object;
  #L2fdd80.  call temp:= `getBackendName`(v3) @signature `Lcom/google/android/datatransport/runtime/m;.getBackendName:()Ljava/lang/String;` @kind virtual;
  #L2fdd86.  v1:= temp @kind object;
  #L2fdd88.  call temp:= `get`(v0, v1) @signature `Lcom/google/android/datatransport/runtime/backends/e;.get:(Ljava/lang/String;)Lcom/google/android/datatransport/runtime/backends/n;` @kind interface;
  #L2fdd8e.  v0:= temp @kind object;
  #L2fdd90.  if v0 != 0 then goto L2fddd0;
  #L2fdd94.  v2:= "Transport backend '%s' is not registered" @kind object;
  #L2fdd98.  v5:= 1I;
  #L2fdd9a.  v5:= new `java.lang.Object`[v5];
  #L2fdd9e.  v0:= 0I;
  #L2fdda0.  call temp:= `getBackendName`(v3) @signature `Lcom/google/android/datatransport/runtime/m;.getBackendName:()Ljava/lang/String;` @kind virtual;
  #L2fdda6.  v3:= temp @kind object;
  #L2fdda8.  v5[v0]:= v3 @kind object;
  #L2fddac.  call temp:= `format`(v2, v5) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2fddb2.  v2:= temp @kind object;
  #L2fddb4.  v3:= `@@com.google.android.datatransport.runtime.v.c.f` @type ^`java.util.logging.Logger` @kind object;
  #L2fddb8.  call `warning`(v3, v2) @signature `Ljava/util/logging/Logger;.warning:(Ljava/lang/String;)V` @kind virtual;
  #L2fddbe.  v3:= new `java.lang.IllegalArgumentException`;
  #L2fddc2.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2fddc8.  call `onSchedule`(v4, v3) @signature `Lcom/google/android/datatransport/h;.onSchedule:(Ljava/lang/Exception;)V` @kind interface;
  #L2fddce.  return @kind void;
  #L2fddd0.  call temp:= `decorate`(v0, v5) @signature `Lcom/google/android/datatransport/runtime/backends/n;.decorate:(Lcom/google/android/datatransport/runtime/h;)Lcom/google/android/datatransport/runtime/h;` @kind interface;
  #L2fddd6.  v5:= temp @kind object;
  #L2fddd8.  v0:= v2.`com.google.android.datatransport.runtime.v.c.e` @type ^`com.google.android.datatransport.runtime.synchronization.a` @kind object;
  #L2fdddc.  call temp:= `lambdaFactory$`(v2, v3, v5) @signature `Lcom/google/android/datatransport/runtime/v/b;.lambdaFactory$:(Lcom/google/android/datatransport/runtime/v/c;Lcom/google/android/datatransport/runtime/m;Lcom/google/android/datatransport/runtime/h;)Lcom/google/android/datatransport/runtime/synchronization/a$a;` @kind static;
  #L2fdde2.  v2:= temp @kind object;
  #L2fdde4.  call temp:= `runCriticalSection`(v0, v2) @signature `Lcom/google/android/datatransport/runtime/synchronization/a;.runCriticalSection:(Lcom/google/android/datatransport/runtime/synchronization/a$a;)Ljava/lang/Object;` @kind interface;
  #L2fddea.  v2:= 0I;
  #L2fddec.  call `onSchedule`(v4, v2) @signature `Lcom/google/android/datatransport/h;.onSchedule:(Ljava/lang/Exception;)V` @kind interface;
  #L2fddf2.  goto L2fde30;
  #L2fddf4.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L2fddf6.  v3:= `@@com.google.android.datatransport.runtime.v.c.f` @type ^`java.util.logging.Logger` @kind object;
  #L2fddfa.  v5:= new `java.lang.StringBuilder`;
  #L2fddfe.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2fde04.  v0:= "Error scheduling event " @kind object;
  #L2fde08.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fde0e.  call temp:= `getMessage`(v2) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2fde14.  v0:= temp @kind object;
  #L2fde16.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fde1c.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2fde22.  v5:= temp @kind object;
  #L2fde24.  call `warning`(v3, v5) @signature `Ljava/util/logging/Logger;.warning:(Ljava/lang/String;)V` @kind virtual;
  #L2fde2a.  call `onSchedule`(v4, v2) @signature `Lcom/google/android/datatransport/h;.onSchedule:(Ljava/lang/Exception;)V` @kind interface;
  #L2fde30.  return @kind void;
  catch `java.lang.Exception` @[L2fdd7c..L2fddf2] goto L2fddf4;
}
procedure `void` `schedule`(`com.google.android.datatransport.runtime.v.c` v1 @kind this, `com.google.android.datatransport.runtime.m` v2 @kind object, `com.google.android.datatransport.runtime.h` v3 @kind object, `com.google.android.datatransport.h` v4 @kind object) @signature `Lcom/google/android/datatransport/runtime/v/c;.schedule:(Lcom/google/android/datatransport/runtime/m;Lcom/google/android/datatransport/runtime/h;Lcom/google/android/datatransport/h;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2fde54.  v0:= v1.`com.google.android.datatransport.runtime.v.c.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L2fde58.  call temp:= `lambdaFactory$`(v1, v2, v4, v3) @signature `Lcom/google/android/datatransport/runtime/v/a;.lambdaFactory$:(Lcom/google/android/datatransport/runtime/v/c;Lcom/google/android/datatransport/runtime/m;Lcom/google/android/datatransport/h;Lcom/google/android/datatransport/runtime/h;)Ljava/lang/Runnable;` @kind static;
  #L2fde5e.  v2:= temp @kind object;
  #L2fde60.  call `execute`(v0, v2) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L2fde66.  return @kind void;
}
