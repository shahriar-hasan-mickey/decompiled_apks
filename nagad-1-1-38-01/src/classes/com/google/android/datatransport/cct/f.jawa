record `com.google.android.datatransport.cct.f` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/google/android/datatransport/cct/f;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2fb224.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2fb22a.  v0:= temp;
  #L2fb22c.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2fb232.  v1:= temp;
  #L2fb234.  v0:= v0 - v1 @kind int;
  #L2fb236.  if v0 < 0 then goto L2fb2a2;
  #L2fb23a.  v1:= 1I;
  #L2fb23c.  if v0 > v1 then goto L2fb2a2;
  #L2fb240.  v0:= new `java.lang.StringBuilder`;
  #L2fb244.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2fb24a.  v1:= temp;
  #L2fb24c.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2fb252.  v2:= temp;
  #L2fb254.  v2:= v2 + v1 @kind int;
  #L2fb256.  call `<init>`(v0, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2fb25c.  v1:= 0I;
  #L2fb25e.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2fb264.  v2:= temp;
  #L2fb266.  if v1 >= v2 then goto L2fb298;
  #L2fb26a.  call temp:= `charAt`(v3, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2fb270.  v2:= temp;
  #L2fb272.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fb278.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2fb27e.  v2:= temp;
  #L2fb280.  if v2 <= v1 then goto L2fb292;
  #L2fb284.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2fb28a.  v2:= temp;
  #L2fb28c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2fb292.  v1:= v1 + 1;
  #L2fb296.  goto L2fb25e;
  #L2fb298.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2fb29e.  v3:= temp @kind object;
  #L2fb2a0.  return v3 @kind object;
  #L2fb2a2.  v3:= new `java.lang.IllegalArgumentException`;
  #L2fb2a6.  v4:= "Invalid input received" @kind object;
  #L2fb2aa.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2fb2b0.  throw v3;
}
