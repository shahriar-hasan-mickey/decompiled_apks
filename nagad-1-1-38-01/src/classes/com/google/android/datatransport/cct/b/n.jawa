record `com.google.android.datatransport.cct.b.n` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`com.google.android.datatransport.cct.b.n` v0 @kind this) @signature `Lcom/google/android/datatransport/cct/b/n;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2f9c94.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f9c9a.  return @kind void;
}
procedure `com.google.android.datatransport.cct.b.n` `zza`(`java.io.Reader` v3 @kind object) @signature `Lcom/google/android/datatransport/cct/b/n;.zza:(Ljava/io/Reader;)Lcom/google/android/datatransport/cct/b/n;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2f9bb4.  v0:= new `android.util.JsonReader`;
  #L2f9bb8.  call `<init>`(v0, v3) @signature `Landroid/util/JsonReader;.<init>:(Ljava/io/Reader;)V` @kind direct;
  #L2f9bbe.  call `beginObject`(v0) @signature `Landroid/util/JsonReader;.beginObject:()V` @kind virtual;
  #L2f9bc4.  call temp:= `hasNext`(v0) @signature `Landroid/util/JsonReader;.hasNext:()Z` @kind virtual;
  #L2f9bca.  v3:= temp;
  #L2f9bcc.  if v3 == 0 then goto L2f9c3c;
  #L2f9bd0.  call temp:= `nextName`(v0) @signature `Landroid/util/JsonReader;.nextName:()Ljava/lang/String;` @kind virtual;
  #L2f9bd6.  v3:= temp @kind object;
  #L2f9bd8.  v1:= "nextRequestWaitMillis" @kind object;
  #L2f9bdc.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2f9be2.  v3:= temp;
  #L2f9be4.  if v3 == 0 then goto L2f9c34;
  #L2f9be8.  call temp:= `peek`(v0) @signature `Landroid/util/JsonReader;.peek:()Landroid/util/JsonToken;` @kind virtual;
  #L2f9bee.  v3:= temp @kind object;
  #L2f9bf0.  v1:= `@@android.util.JsonToken.STRING` @type ^`android.util.JsonToken` @kind object;
  #L2f9bf4.  if v3 != v1 then goto L2f9c1a;
  #L2f9bf8.  call temp:= `nextString`(v0) @signature `Landroid/util/JsonReader;.nextString:()Ljava/lang/String;` @kind virtual;
  #L2f9bfe.  v3:= temp @kind object;
  #L2f9c00.  call temp:= `parseLong`(v3) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L2f9c06.  v1:= temp @kind wide;
  #L2f9c08.  v3:= new `com.google.android.datatransport.cct.b.h`;
  #L2f9c0c.  call `<init>`(v3, v1) @signature `Lcom/google/android/datatransport/cct/b/h;.<init>:(J)V` @kind direct;
  #L2f9c12.  call `close`(v0) @signature `Landroid/util/JsonReader;.close:()V` @kind virtual;
  #L2f9c18.  return v3 @kind object;
  #L2f9c1a.  call temp:= `nextLong`(v0) @signature `Landroid/util/JsonReader;.nextLong:()J` @kind virtual;
  #L2f9c20.  v1:= temp @kind wide;
  #L2f9c22.  v3:= new `com.google.android.datatransport.cct.b.h`;
  #L2f9c26.  call `<init>`(v3, v1) @signature `Lcom/google/android/datatransport/cct/b/h;.<init>:(J)V` @kind direct;
  #L2f9c2c.  call `close`(v0) @signature `Landroid/util/JsonReader;.close:()V` @kind virtual;
  #L2f9c32.  return v3 @kind object;
  #L2f9c34.  call `skipValue`(v0) @signature `Landroid/util/JsonReader;.skipValue:()V` @kind virtual;
  #L2f9c3a.  goto L2f9bc4;
  #L2f9c3c.  v3:= new `java.io.IOException`;
  #L2f9c40.  v1:= "Response is missing nextRequestWaitMillis field." @kind object;
  #L2f9c44.  call `<init>`(v3, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2f9c4a.  throw v3;
  #L2f9c4c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2f9c4e.  call `close`(v0) @signature `Landroid/util/JsonReader;.close:()V` @kind virtual;
  #L2f9c54.  throw v3;
  catch `java.lang.Throwable` @[L2f9bbe..L2f9bd8] goto L2f9c4c;
  catch `java.lang.Throwable` @[L2f9bdc..L2f9c12] goto L2f9c4c;
  catch `java.lang.Throwable` @[L2f9c1a..L2f9c2c] goto L2f9c4c;
  catch `java.lang.Throwable` @[L2f9c34..L2f9c40] goto L2f9c4c;
  catch `java.lang.Throwable` @[L2f9c44..L2f9c4c] goto L2f9c4c;
}
procedure `long` `zza`() @signature `Lcom/google/android/datatransport/cct/b/n;.zza:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
