record `com.bumptech.glide.n.p` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.n.i` @kind interface {
  `java.util.Set` `com.bumptech.glide.n.p.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.n.p` v1 @kind this) @signature `Lcom/bumptech/glide/n/p;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a614c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a6152.  v0:= new `java.util.WeakHashMap`;
  #L2a6156.  call `<init>`(v0) @signature `Ljava/util/WeakHashMap;.<init>:()V` @kind direct;
  #L2a615c.  call temp:= `newSetFromMap`(v0) @signature `Ljava/util/Collections;.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;` @kind static;
  #L2a6162.  v0:= temp @kind object;
  #L2a6164.  v1.`com.bumptech.glide.n.p.f` @type ^`java.util.Set` := v0 @kind object;
  #L2a6168.  return @kind void;
}
procedure `void` `clear`(`com.bumptech.glide.n.p` v1 @kind this) @signature `Lcom/bumptech/glide/n/p;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a617c.  v0:= v1.`com.bumptech.glide.n.p.f` @type ^`java.util.Set` @kind object;
  #L2a6180.  call `clear`(v0) @signature `Ljava/util/Set;.clear:()V` @kind interface;
  #L2a6186.  return @kind void;
}
procedure `java.util.List` `getAll`(`com.bumptech.glide.n.p` v1 @kind this) @signature `Lcom/bumptech/glide/n/p;.getAll:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a612c.  v0:= v1.`com.bumptech.glide.n.p.f` @type ^`java.util.Set` @kind object;
  #L2a6130.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/s/k;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L2a6136.  v0:= temp @kind object;
  #L2a6138.  return v0 @kind object;
}
procedure `void` `onDestroy`(`com.bumptech.glide.n.p` v2 @kind this) @signature `Lcom/bumptech/glide/n/p;.onDestroy:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a6198.  v0:= v2.`com.bumptech.glide.n.p.f` @type ^`java.util.Set` @kind object;
  #L2a619c.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/s/k;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L2a61a2.  v0:= temp @kind object;
  #L2a61a4.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2a61aa.  v0:= temp @kind object;
  #L2a61ac.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2a61b2.  v1:= temp;
  #L2a61b4.  if v1 == 0 then goto L2a61cc;
  #L2a61b8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2a61be.  v1:= temp @kind object;
  #L2a61c0.  v1:= (`com.bumptech.glide.q.l.h`) v1 @kind object;
  #L2a61c4.  call `onDestroy`(v1) @signature `Lcom/bumptech/glide/n/i;.onDestroy:()V` @kind interface;
  #L2a61ca.  goto L2a61ac;
  #L2a61cc.  return @kind void;
}
procedure `void` `onStart`(`com.bumptech.glide.n.p` v2 @kind this) @signature `Lcom/bumptech/glide/n/p;.onStart:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a61e0.  v0:= v2.`com.bumptech.glide.n.p.f` @type ^`java.util.Set` @kind object;
  #L2a61e4.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/s/k;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L2a61ea.  v0:= temp @kind object;
  #L2a61ec.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2a61f2.  v0:= temp @kind object;
  #L2a61f4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2a61fa.  v1:= temp;
  #L2a61fc.  if v1 == 0 then goto L2a6214;
  #L2a6200.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2a6206.  v1:= temp @kind object;
  #L2a6208.  v1:= (`com.bumptech.glide.q.l.h`) v1 @kind object;
  #L2a620c.  call `onStart`(v1) @signature `Lcom/bumptech/glide/n/i;.onStart:()V` @kind interface;
  #L2a6212.  goto L2a61f4;
  #L2a6214.  return @kind void;
}
procedure `void` `onStop`(`com.bumptech.glide.n.p` v2 @kind this) @signature `Lcom/bumptech/glide/n/p;.onStop:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a6228.  v0:= v2.`com.bumptech.glide.n.p.f` @type ^`java.util.Set` @kind object;
  #L2a622c.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/s/k;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L2a6232.  v0:= temp @kind object;
  #L2a6234.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2a623a.  v0:= temp @kind object;
  #L2a623c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2a6242.  v1:= temp;
  #L2a6244.  if v1 == 0 then goto L2a625c;
  #L2a6248.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2a624e.  v1:= temp @kind object;
  #L2a6250.  v1:= (`com.bumptech.glide.q.l.h`) v1 @kind object;
  #L2a6254.  call `onStop`(v1) @signature `Lcom/bumptech/glide/n/i;.onStop:()V` @kind interface;
  #L2a625a.  goto L2a623c;
  #L2a625c.  return @kind void;
}
procedure `void` `track`(`com.bumptech.glide.n.p` v1 @kind this, `com.bumptech.glide.q.l.h` v2 @kind object) @signature `Lcom/bumptech/glide/n/p;.track:(Lcom/bumptech/glide/q/l/h;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a6270.  v0:= v1.`com.bumptech.glide.n.p.f` @type ^`java.util.Set` @kind object;
  #L2a6274.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2a627a.  return @kind void;
}
procedure `void` `untrack`(`com.bumptech.glide.n.p` v1 @kind this, `com.bumptech.glide.q.l.h` v2 @kind object) @signature `Lcom/bumptech/glide/n/p;.untrack:(Lcom/bumptech/glide/q/l/h;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a628c.  v0:= v1.`com.bumptech.glide.n.p.f` @type ^`java.util.Set` @kind object;
  #L2a6290.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L2a6296.  return @kind void;
}
