record `com.bumptech.glide.n.k` @kind class @AccessFlag PUBLIC extends `android.app.Fragment` @kind class {
  `com.bumptech.glide.n.a` `com.bumptech.glide.n.k.f` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.n.m` `com.bumptech.glide.n.k.g` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `com.bumptech.glide.n.k.h` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.j` `com.bumptech.glide.n.k.i` @AccessFlag PRIVATE;
  `com.bumptech.glide.n.k` `com.bumptech.glide.n.k.j` @AccessFlag PRIVATE;
  `android.app.Fragment` `com.bumptech.glide.n.k.k` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.n.k` v1 @kind this) @signature `Lcom/bumptech/glide/n/k;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a509c.  v0:= new `com.bumptech.glide.n.a`;
  #L2a50a0.  call `<init>`(v0) @signature `Lcom/bumptech/glide/n/a;.<init>:()V` @kind direct;
  #L2a50a6.  call `<init>`(v1, v0) @signature `Lcom/bumptech/glide/n/k;.<init>:(Lcom/bumptech/glide/n/a;)V` @kind direct;
  #L2a50ac.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.n.k` v1 @kind this, `com.bumptech.glide.n.a` v2 @kind object) @signature `Lcom/bumptech/glide/n/k;.<init>:(Lcom/bumptech/glide/n/a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2a50c0.  call `<init>`(v1) @signature `Landroid/app/Fragment;.<init>:()V` @kind direct;
  #L2a50c6.  v0:= new `com.bumptech.glide.n.k$a`;
  #L2a50ca.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/n/k$a;.<init>:(Lcom/bumptech/glide/n/k;)V` @kind direct;
  #L2a50d0.  v1.`com.bumptech.glide.n.k.g` @type ^`com.bumptech.glide.n.m` := v0 @kind object;
  #L2a50d4.  v0:= new `java.util.HashSet`;
  #L2a50d8.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L2a50de.  v1.`com.bumptech.glide.n.k.h` @type ^`java.util.Set` := v0 @kind object;
  #L2a50e2.  v1.`com.bumptech.glide.n.k.f` @type ^`com.bumptech.glide.n.a` := v2 @kind object;
  #L2a50e6.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.n.k` v1 @kind this, `android.app.Activity` v2 @kind object) @signature `Lcom/bumptech/glide/n/k;.a:(Landroid/app/Activity;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2a51f4.  call `d`(v1) @signature `Lcom/bumptech/glide/n/k;.d:()V` @kind direct;
  #L2a51fa.  call temp:= `get`(v2) @signature `Lcom/bumptech/glide/b;.get:(Landroid/content/Context;)Lcom/bumptech/glide/b;` @kind static;
  #L2a5200.  v0:= temp @kind object;
  #L2a5202.  call temp:= `getRequestManagerRetriever`(v0) @signature `Lcom/bumptech/glide/b;.getRequestManagerRetriever:()Lcom/bumptech/glide/n/l;` @kind virtual;
  #L2a5208.  v0:= temp @kind object;
  #L2a520a.  call temp:= `a`(v0, v2) @signature `Lcom/bumptech/glide/n/l;.a:(Landroid/app/Activity;)Lcom/bumptech/glide/n/k;` @kind virtual;
  #L2a5210.  v2:= temp @kind object;
  #L2a5212.  v1.`com.bumptech.glide.n.k.j` @type ^`com.bumptech.glide.n.k` := v2 @kind object;
  #L2a5216.  v2:= v1.`com.bumptech.glide.n.k.j` @type ^`com.bumptech.glide.n.k` @kind object;
  #L2a521a.  call temp:= `equals`(v1, v2) @signature `Landroid/app/Fragment;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2a5220.  v2:= temp;
  #L2a5222.  if v2 != 0 then goto L2a5230;
  #L2a5226.  v2:= v1.`com.bumptech.glide.n.k.j` @type ^`com.bumptech.glide.n.k` @kind object;
  #L2a522a.  call `a`(v2, v1) @signature `Lcom/bumptech/glide/n/k;.a:(Lcom/bumptech/glide/n/k;)V` @kind direct;
  #L2a5230.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.n.k` v1 @kind this, `com.bumptech.glide.n.k` v2 @kind object) @signature `Lcom/bumptech/glide/n/k;.a:(Lcom/bumptech/glide/n/k;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2a50f8.  v0:= v1.`com.bumptech.glide.n.k.h` @type ^`java.util.Set` @kind object;
  #L2a50fc.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2a5102.  return @kind void;
}
procedure `void` `b`(`com.bumptech.glide.n.k` v1 @kind this, `com.bumptech.glide.n.k` v2 @kind object) @signature `Lcom/bumptech/glide/n/k;.b:(Lcom/bumptech/glide/n/k;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2a5244.  v0:= v1.`com.bumptech.glide.n.k.h` @type ^`java.util.Set` @kind object;
  #L2a5248.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L2a524e.  return @kind void;
}
procedure `boolean` `b`(`com.bumptech.glide.n.k` v2 @kind this, `android.app.Fragment` v3 @kind object) @signature `Lcom/bumptech/glide/n/k;.b:(Landroid/app/Fragment;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2a4f10.  call temp:= `getParentFragment`(v2) @signature `Landroid/app/Fragment;.getParentFragment:()Landroid/app/Fragment;` @kind virtual;
  #L2a4f16.  v0:= temp @kind object;
  #L2a4f18.  call temp:= `getParentFragment`(v3) @signature `Landroid/app/Fragment;.getParentFragment:()Landroid/app/Fragment;` @kind virtual;
  #L2a4f1e.  v1:= temp @kind object;
  #L2a4f20.  if v1 == 0 then goto L2a4f3e;
  #L2a4f24.  call temp:= `equals`(v1, v0) @signature `Landroid/app/Fragment;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2a4f2a.  v1:= temp;
  #L2a4f2c.  if v1 == 0 then goto L2a4f34;
  #L2a4f30.  v3:= 1I;
  #L2a4f32.  return v3;
  #L2a4f34.  call temp:= `getParentFragment`(v3) @signature `Landroid/app/Fragment;.getParentFragment:()Landroid/app/Fragment;` @kind virtual;
  #L2a4f3a.  v3:= temp @kind object;
  #L2a4f3c.  goto L2a4f18;
  #L2a4f3e.  v3:= 0I;
  #L2a4f40.  return v3;
}
procedure `android.app.Fragment` `c`(`com.bumptech.glide.n.k` v2 @kind this) @signature `Lcom/bumptech/glide/n/k;.c:()Landroid/app/Fragment;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2a4edc.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L2a4ee0.  v1:= 17I;
  #L2a4ee4.  if v0 < v1 then goto L2a4ef2;
  #L2a4ee8.  call temp:= `getParentFragment`(v2) @signature `Landroid/app/Fragment;.getParentFragment:()Landroid/app/Fragment;` @kind virtual;
  #L2a4eee.  v0:= temp @kind object;
  #L2a4ef0.  goto L2a4ef4;
  #L2a4ef2.  v0:= 0I;
  #L2a4ef4.  if v0 == 0 then goto L2a4efa;
  #L2a4ef8.  goto L2a4efe;
  #L2a4efa.  v0:= v2.`com.bumptech.glide.n.k.k` @type ^`android.app.Fragment` @kind object;
  #L2a4efe.  return v0 @kind object;
}
procedure `void` `d`(`com.bumptech.glide.n.k` v1 @kind this) @signature `Lcom/bumptech/glide/n/k;.d:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2a52ac.  v0:= v1.`com.bumptech.glide.n.k.j` @type ^`com.bumptech.glide.n.k` @kind object;
  #L2a52b0.  if v0 == 0 then goto L2a52c0;
  #L2a52b4.  call `b`(v0, v1) @signature `Lcom/bumptech/glide/n/k;.b:(Lcom/bumptech/glide/n/k;)V` @kind direct;
  #L2a52ba.  v0:= 0I;
  #L2a52bc.  v1.`com.bumptech.glide.n.k.j` @type ^`com.bumptech.glide.n.k` := v0 @kind object;
  #L2a52c0.  return @kind void;
}
procedure `java.util.Set` `a`(`com.bumptech.glide.n.k` v4 @kind this) @signature `Lcom/bumptech/glide/n/k;.a:()Ljava/util/Set;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a4ff0.  v0:= v4.`com.bumptech.glide.n.k.j` @type ^`com.bumptech.glide.n.k` @kind object;
  #L2a4ff4.  call temp:= `equals`(v4, v0) @signature `Landroid/app/Fragment;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2a4ffa.  v0:= temp;
  #L2a4ffc.  if v0 == 0 then goto L2a500e;
  #L2a5000.  v0:= v4.`com.bumptech.glide.n.k.h` @type ^`java.util.Set` @kind object;
  #L2a5004.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L2a500a.  v0:= temp @kind object;
  #L2a500c.  return v0 @kind object;
  #L2a500e.  v0:= v4.`com.bumptech.glide.n.k.j` @type ^`com.bumptech.glide.n.k` @kind object;
  #L2a5012.  if v0 == 0 then goto L2a5080;
  #L2a5016.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L2a501a.  v1:= 17I;
  #L2a501e.  if v0 >= v1 then goto L2a5024;
  #L2a5022.  goto L2a5080;
  #L2a5024.  v0:= new `java.util.HashSet`;
  #L2a5028.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L2a502e.  v1:= v4.`com.bumptech.glide.n.k.j` @type ^`com.bumptech.glide.n.k` @kind object;
  #L2a5032.  call temp:= `a`(v1) @signature `Lcom/bumptech/glide/n/k;.a:()Ljava/util/Set;` @kind virtual;
  #L2a5038.  v1:= temp @kind object;
  #L2a503a.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2a5040.  v1:= temp @kind object;
  #L2a5042.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2a5048.  v2:= temp;
  #L2a504a.  if v2 == 0 then goto L2a5076;
  #L2a504e.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2a5054.  v2:= temp @kind object;
  #L2a5056.  v2:= (`com.bumptech.glide.n.k`) v2 @kind object;
  #L2a505a.  call temp:= `getParentFragment`(v2) @signature `Landroid/app/Fragment;.getParentFragment:()Landroid/app/Fragment;` @kind virtual;
  #L2a5060.  v3:= temp @kind object;
  #L2a5062.  call temp:= `b`(v4, v3) @signature `Lcom/bumptech/glide/n/k;.b:(Landroid/app/Fragment;)Z` @kind direct;
  #L2a5068.  v3:= temp;
  #L2a506a.  if v3 == 0 then goto L2a5042;
  #L2a506e.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2a5074.  goto L2a5042;
  #L2a5076.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L2a507c.  v0:= temp @kind object;
  #L2a507e.  return v0 @kind object;
  #L2a5080.  call temp:= `emptySet`() @signature `Ljava/util/Collections;.emptySet:()Ljava/util/Set;` @kind static;
  #L2a5086.  v0:= temp @kind object;
  #L2a5088.  return v0 @kind object;
}
procedure `void` `a`(`com.bumptech.glide.n.k` v1 @kind this, `android.app.Fragment` v2 @kind object) @signature `Lcom/bumptech/glide/n/k;.a:(Landroid/app/Fragment;)V` @AccessFlag  {
    temp;
    v0;

  #L2a5260.  v1.`com.bumptech.glide.n.k.k` @type ^`android.app.Fragment` := v2 @kind object;
  #L2a5264.  if v2 == 0 then goto L2a5282;
  #L2a5268.  call temp:= `getActivity`(v2) @signature `Landroid/app/Fragment;.getActivity:()Landroid/app/Activity;` @kind virtual;
  #L2a526e.  v0:= temp @kind object;
  #L2a5270.  if v0 == 0 then goto L2a5282;
  #L2a5274.  call temp:= `getActivity`(v2) @signature `Landroid/app/Fragment;.getActivity:()Landroid/app/Activity;` @kind virtual;
  #L2a527a.  v2:= temp @kind object;
  #L2a527c.  call `a`(v1, v2) @signature `Lcom/bumptech/glide/n/k;.a:(Landroid/app/Activity;)V` @kind direct;
  #L2a5282.  return @kind void;
}
procedure `com.bumptech.glide.n.a` `b`(`com.bumptech.glide.n.k` v1 @kind this) @signature `Lcom/bumptech/glide/n/k;.b:()Lcom/bumptech/glide/n/a;` @AccessFlag  {
    temp;
    v0;

  #L2a4f6c.  v0:= v1.`com.bumptech.glide.n.k.f` @type ^`com.bumptech.glide.n.a` @kind object;
  #L2a4f70.  return v0 @kind object;
}
procedure `com.bumptech.glide.j` `getRequestManager`(`com.bumptech.glide.n.k` v1 @kind this) @signature `Lcom/bumptech/glide/n/k;.getRequestManager:()Lcom/bumptech/glide/j;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a4f54.  v0:= v1.`com.bumptech.glide.n.k.i` @type ^`com.bumptech.glide.j` @kind object;
  #L2a4f58.  return v0 @kind object;
}
procedure `com.bumptech.glide.n.m` `getRequestManagerTreeNode`(`com.bumptech.glide.n.k` v1 @kind this) @signature `Lcom/bumptech/glide/n/k;.getRequestManagerTreeNode:()Lcom/bumptech/glide/n/m;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a4f84.  v0:= v1.`com.bumptech.glide.n.k.g` @type ^`com.bumptech.glide.n.m` @kind object;
  #L2a4f88.  return v0 @kind object;
}
procedure `void` `onAttach`(`com.bumptech.glide.n.k` v2 @kind this, `android.app.Activity` v3 @kind object) @signature `Lcom/bumptech/glide/n/k;.onAttach:(Landroid/app/Activity;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a5114.  call `onAttach`(v2, v3) @signature `Landroid/app/Fragment;.onAttach:(Landroid/app/Activity;)V` @kind super;
  #L2a511a.  call `a`(v2, v3) @signature `Lcom/bumptech/glide/n/k;.a:(Landroid/app/Activity;)V` @kind direct;
  #L2a5120.  goto L2a5140;
  #L2a5122.  v3:= Exception @type ^`java.lang.IllegalStateException` @kind object;
  #L2a5124.  v0:= 5I;
  #L2a5126.  v1:= "RMFragment" @kind object;
  #L2a512a.  call temp:= `isLoggable`(v1, v0) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2a5130.  v0:= temp;
  #L2a5132.  if v0 == 0 then goto L2a5140;
  #L2a5136.  v0:= "Unable to register fragment with root" @kind object;
  #L2a513a.  call temp:= `w`(v1, v0, v3) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L2a5140.  return @kind void;
  catch `java.lang.IllegalStateException` @[L2a511a..L2a5120] goto L2a5122;
}
procedure `void` `onDestroy`(`com.bumptech.glide.n.k` v1 @kind this) @signature `Lcom/bumptech/glide/n/k;.onDestroy:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a5164.  call `onDestroy`(v1) @signature `Landroid/app/Fragment;.onDestroy:()V` @kind super;
  #L2a516a.  v0:= v1.`com.bumptech.glide.n.k.f` @type ^`com.bumptech.glide.n.a` @kind object;
  #L2a516e.  call `a`(v0) @signature `Lcom/bumptech/glide/n/a;.a:()V` @kind virtual;
  #L2a5174.  call `d`(v1) @signature `Lcom/bumptech/glide/n/k;.d:()V` @kind direct;
  #L2a517a.  return @kind void;
}
procedure `void` `onDetach`(`com.bumptech.glide.n.k` v0 @kind this) @signature `Lcom/bumptech/glide/n/k;.onDetach:()V` @AccessFlag PUBLIC {
    temp;

  #L2a518c.  call `onDetach`(v0) @signature `Landroid/app/Fragment;.onDetach:()V` @kind super;
  #L2a5192.  call `d`(v0) @signature `Lcom/bumptech/glide/n/k;.d:()V` @kind direct;
  #L2a5198.  return @kind void;
}
procedure `void` `onStart`(`com.bumptech.glide.n.k` v1 @kind this) @signature `Lcom/bumptech/glide/n/k;.onStart:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a51ac.  call `onStart`(v1) @signature `Landroid/app/Fragment;.onStart:()V` @kind super;
  #L2a51b2.  v0:= v1.`com.bumptech.glide.n.k.f` @type ^`com.bumptech.glide.n.a` @kind object;
  #L2a51b6.  call `b`(v0) @signature `Lcom/bumptech/glide/n/a;.b:()V` @kind virtual;
  #L2a51bc.  return @kind void;
}
procedure `void` `onStop`(`com.bumptech.glide.n.k` v1 @kind this) @signature `Lcom/bumptech/glide/n/k;.onStop:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a51d0.  call `onStop`(v1) @signature `Landroid/app/Fragment;.onStop:()V` @kind super;
  #L2a51d6.  v0:= v1.`com.bumptech.glide.n.k.f` @type ^`com.bumptech.glide.n.a` @kind object;
  #L2a51da.  call `c`(v0) @signature `Lcom/bumptech/glide/n/a;.c:()V` @kind virtual;
  #L2a51e0.  return @kind void;
}
procedure `void` `setRequestManager`(`com.bumptech.glide.n.k` v0 @kind this, `com.bumptech.glide.j` v1 @kind object) @signature `Lcom/bumptech/glide/n/k;.setRequestManager:(Lcom/bumptech/glide/j;)V` @AccessFlag PUBLIC {
    temp;

  #L2a5294.  v0.`com.bumptech.glide.n.k.i` @type ^`com.bumptech.glide.j` := v1 @kind object;
  #L2a5298.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.n.k` v2 @kind this) @signature `Lcom/bumptech/glide/n/k;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a4f9c.  v0:= new `java.lang.StringBuilder`;
  #L2a4fa0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2a4fa6.  call temp:= `toString`(v2) @signature `Landroid/app/Fragment;.toString:()Ljava/lang/String;` @kind super;
  #L2a4fac.  v1:= temp @kind object;
  #L2a4fae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a4fb4.  v1:= "{parent=" @kind object;
  #L2a4fb8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a4fbe.  call temp:= `c`(v2) @signature `Lcom/bumptech/glide/n/k;.c:()Landroid/app/Fragment;` @kind direct;
  #L2a4fc4.  v1:= temp @kind object;
  #L2a4fc6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a4fcc.  v1:= "}" @kind object;
  #L2a4fd0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a4fd6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a4fdc.  v0:= temp @kind object;
  #L2a4fde.  return v0 @kind object;
}
