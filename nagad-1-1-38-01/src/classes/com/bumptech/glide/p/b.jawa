record `com.bumptech.glide.p.b` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `com.bumptech.glide.p.b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.p.b` v1 @kind this) @signature `Lcom/bumptech/glide/p/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a66f0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a66f6.  v0:= new `java.util.ArrayList`;
  #L2a66fa.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2a6700.  v1.`com.bumptech.glide.p.b.a` @type ^`java.util.List` := v0 @kind object;
  #L2a6704.  return @kind void;
}
procedure `void` `add`(`com.bumptech.glide.p.b` v1 @kind this, `com.bumptech.glide.load.ImageHeaderParser` v2 @kind object) @signature `Lcom/bumptech/glide/p/b;.add:(Lcom/bumptech/glide/load/ImageHeaderParser;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a6718.  @monitorenter v1
  #L2a671a.  v0:= v1.`com.bumptech.glide.p.b.a` @type ^`java.util.List` @kind object;
  #L2a671e.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2a6724.  @monitorexit v1
  #L2a6726.  return @kind void;
  #L2a6728.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a672a.  @monitorexit v1
  #L2a672c.  throw v2;
  catch `java.lang.Throwable` @[L2a671a..L2a6724] goto L2a6728;
}
procedure `java.util.List` `getParsers`(`com.bumptech.glide.p.b` v1 @kind this) @signature `Lcom/bumptech/glide/p/b;.getParsers:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a66c4.  @monitorenter v1
  #L2a66c6.  v0:= v1.`com.bumptech.glide.p.b.a` @type ^`java.util.List` @kind object;
  #L2a66ca.  @monitorexit v1
  #L2a66cc.  return v0 @kind object;
  #L2a66ce.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a66d0.  @monitorexit v1
  #L2a66d2.  throw v0;
  catch `java.lang.Throwable` @[L2a66c6..L2a66ca] goto L2a66ce;
}
