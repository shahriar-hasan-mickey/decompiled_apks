record `com.bumptech.glide.p.d` @kind class @AccessFlag PUBLIC {
  `java.util.concurrent.atomic.AtomicReference` `com.bumptech.glide.p.d.a` @AccessFlag PRIVATE_FINAL;
  `c.e.a` `com.bumptech.glide.p.d.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.p.d` v1 @kind this) @signature `Lcom/bumptech/glide/p/d;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a6958.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a695e.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L2a6962.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L2a6968.  v1.`com.bumptech.glide.p.d.a` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L2a696c.  v0:= new `c.e.a`;
  #L2a6970.  call `<init>`(v0) @signature `Lc/e/a;.<init>:()V` @kind direct;
  #L2a6976.  v1.`com.bumptech.glide.p.d.b` @type ^`c.e.a` := v0 @kind object;
  #L2a697a.  return @kind void;
}
procedure `java.util.List` `get`(`com.bumptech.glide.p.d` v2 @kind this, `java.lang.Class` v3 @kind object, `java.lang.Class` v4 @kind object, `java.lang.Class` v5 @kind object) @signature `Lcom/bumptech/glide/p/d;.get:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a68e0.  v0:= v2.`com.bumptech.glide.p.d.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L2a68e4.  v1:= 0I;
  #L2a68e6.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2a68ec.  v0:= temp @kind object;
  #L2a68ee.  v0:= (`com.bumptech.glide.s.i`) v0 @kind object;
  #L2a68f2.  if v0 != 0 then goto L2a6902;
  #L2a68f6.  v0:= new `com.bumptech.glide.s.i`;
  #L2a68fa.  call `<init>`(v0, v3, v4, v5) @signature `Lcom/bumptech/glide/s/i;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L2a6900.  goto L2a6908;
  #L2a6902.  call `set`(v0, v3, v4, v5) @signature `Lcom/bumptech/glide/s/i;.set:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)V` @kind virtual;
  #L2a6908.  v3:= v2.`com.bumptech.glide.p.d.b` @type ^`c.e.a` @kind object;
  #L2a690c.  @monitorenter v3
  #L2a690e.  v4:= v2.`com.bumptech.glide.p.d.b` @type ^`c.e.a` @kind object;
  #L2a6912.  call temp:= `get`(v4, v0) @signature `Lc/e/g;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2a6918.  v4:= temp @kind object;
  #L2a691a.  v4:= (`java.util.List`) v4 @kind object;
  #L2a691e.  @monitorexit v3
  #L2a6920.  v3:= v2.`com.bumptech.glide.p.d.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L2a6924.  call `set`(v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L2a692a.  return v4 @kind object;
  #L2a692c.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a692e.  @monitorexit v3
  #L2a6930.  throw v4;
  catch `java.lang.Throwable` @[L2a690e..L2a6920] goto L2a692c;
  catch `java.lang.Throwable` @[L2a692e..L2a6930] goto L2a692c;
}
procedure `void` `put`(`com.bumptech.glide.p.d` v3 @kind this, `java.lang.Class` v4 @kind object, `java.lang.Class` v5 @kind object, `java.lang.Class` v6 @kind object, `java.util.List` v7 @kind object) @signature `Lcom/bumptech/glide/p/d;.put:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a698c.  v0:= v3.`com.bumptech.glide.p.d.b` @type ^`c.e.a` @kind object;
  #L2a6990.  @monitorenter v0
  #L2a6992.  v1:= v3.`com.bumptech.glide.p.d.b` @type ^`c.e.a` @kind object;
  #L2a6996.  v2:= new `com.bumptech.glide.s.i`;
  #L2a699a.  call `<init>`(v2, v4, v5, v6) @signature `Lcom/bumptech/glide/s/i;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L2a69a0.  call temp:= `put`(v1, v2, v7) @signature `Lc/e/g;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2a69a6.  @monitorexit v0
  #L2a69a8.  return @kind void;
  #L2a69aa.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a69ac.  @monitorexit v0
  #L2a69ae.  throw v4;
  catch `java.lang.Throwable` @[L2a6992..L2a69ae] goto L2a69aa;
}
