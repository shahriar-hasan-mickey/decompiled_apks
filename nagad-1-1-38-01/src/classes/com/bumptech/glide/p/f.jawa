record `com.bumptech.glide.p.f` @kind class @AccessFlag PUBLIC {
  `java.util.List` `com.bumptech.glide.p.f.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.p.f` v1 @kind this) @signature `Lcom/bumptech/glide/p/f;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a6dac.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a6db2.  v0:= new `java.util.ArrayList`;
  #L2a6db6.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2a6dbc.  v1.`com.bumptech.glide.p.f.a` @type ^`java.util.List` := v0 @kind object;
  #L2a6dc0.  return @kind void;
}
procedure `void` `append`(`com.bumptech.glide.p.f` v2 @kind this, `java.lang.Class` v3 @kind object, `com.bumptech.glide.load.k` v4 @kind object) @signature `Lcom/bumptech/glide/p/f;.append:(Ljava/lang/Class;Lcom/bumptech/glide/load/k;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a6dd4.  @monitorenter v2
  #L2a6dd6.  v0:= v2.`com.bumptech.glide.p.f.a` @type ^`java.util.List` @kind object;
  #L2a6dda.  v1:= new `com.bumptech.glide.p.f$a`;
  #L2a6dde.  call `<init>`(v1, v3, v4) @signature `Lcom/bumptech/glide/p/f$a;.<init>:(Ljava/lang/Class;Lcom/bumptech/glide/load/k;)V` @kind direct;
  #L2a6de4.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2a6dea.  @monitorexit v2
  #L2a6dec.  return @kind void;
  #L2a6dee.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a6df0.  @monitorexit v2
  #L2a6df2.  throw v3;
  catch `java.lang.Throwable` @[L2a6dd6..L2a6dea] goto L2a6dee;
}
procedure `com.bumptech.glide.load.k` `get`(`com.bumptech.glide.p.f` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lcom/bumptech/glide/p/f;.get:(Ljava/lang/Class;)Lcom/bumptech/glide/load/k;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a6d44.  @monitorenter v4
  #L2a6d46.  v0:= 0I;
  #L2a6d48.  v1:= v4.`com.bumptech.glide.p.f.a` @type ^`java.util.List` @kind object;
  #L2a6d4c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2a6d52.  v1:= temp;
  #L2a6d54.  if v0 >= v1 then goto L2a6d82;
  #L2a6d58.  v2:= v4.`com.bumptech.glide.p.f.a` @type ^`java.util.List` @kind object;
  #L2a6d5c.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2a6d62.  v2:= temp @kind object;
  #L2a6d64.  v2:= (`com.bumptech.glide.p.f$a`) v2 @kind object;
  #L2a6d68.  call temp:= `a`(v2, v5) @signature `Lcom/bumptech/glide/p/f$a;.a:(Ljava/lang/Class;)Z` @kind virtual;
  #L2a6d6e.  v3:= temp;
  #L2a6d70.  if v3 == 0 then goto L2a6d7c;
  #L2a6d74.  v5:= v2.`com.bumptech.glide.p.f$a.b` @type ^`com.bumptech.glide.load.k` @kind object;
  #L2a6d78.  @monitorexit v4
  #L2a6d7a.  return v5 @kind object;
  #L2a6d7c.  v0:= v0 + 1;
  #L2a6d80.  goto L2a6d54;
  #L2a6d82.  v5:= 0I;
  #L2a6d84.  @monitorexit v4
  #L2a6d86.  return v5 @kind object;
  #L2a6d88.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a6d8a.  @monitorexit v4
  #L2a6d8c.  throw v5;
  catch `java.lang.Throwable` @[L2a6d48..L2a6d78] goto L2a6d88;
}
