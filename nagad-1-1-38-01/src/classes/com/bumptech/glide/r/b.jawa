record `com.bumptech.glide.r.b` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.f` @kind interface {
  `java.lang.Object` `com.bumptech.glide.r.b.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.r.b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/r/b;.<init>:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2aaf4c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2aaf52.  call temp:= `checkNotNull`(v1) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2aaf58.  v0.`com.bumptech.glide.r.b.b` @type ^`java.lang.Object` := v1 @kind object;
  #L2aaf5c.  return @kind void;
}
procedure `boolean` `equals`(`com.bumptech.glide.r.b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/r/b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2aaeb4.  v0:= instanceof @variable v2 @type ^`com.bumptech.glide.r.b` @kind boolean;
  #L2aaeb8.  if v0 == 0 then goto L2aaed2;
  #L2aaebc.  v2:= (`com.bumptech.glide.r.b`) v2 @kind object;
  #L2aaec0.  v0:= v1.`com.bumptech.glide.r.b.b` @type ^`java.lang.Object` @kind object;
  #L2aaec4.  v2:= v2.`com.bumptech.glide.r.b.b` @type ^`java.lang.Object` @kind object;
  #L2aaec8.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2aaece.  v2:= temp;
  #L2aaed0.  return v2;
  #L2aaed2.  v2:= 0I;
  #L2aaed4.  return v2;
}
procedure `int` `hashCode`(`com.bumptech.glide.r.b` v1 @kind this) @signature `Lcom/bumptech/glide/r/b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2aaee8.  v0:= v1.`com.bumptech.glide.r.b.b` @type ^`java.lang.Object` @kind object;
  #L2aaeec.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L2aaef2.  v0:= temp;
  #L2aaef4.  return v0;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.r.b` v2 @kind this) @signature `Lcom/bumptech/glide/r/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2aaf08.  v0:= new `java.lang.StringBuilder`;
  #L2aaf0c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2aaf12.  v1:= "ObjectKey{object=" @kind object;
  #L2aaf16.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aaf1c.  v1:= v2.`com.bumptech.glide.r.b.b` @type ^`java.lang.Object` @kind object;
  #L2aaf20.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aaf26.  v1:= 125I;
  #L2aaf2a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aaf30.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2aaf36.  v0:= temp @kind object;
  #L2aaf38.  return v0 @kind object;
}
procedure `void` `updateDiskCacheKey`(`com.bumptech.glide.r.b` v2 @kind this, `java.security.MessageDigest` v3 @kind object) @signature `Lcom/bumptech/glide/r/b;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2aaf70.  v0:= v2.`com.bumptech.glide.r.b.b` @type ^`java.lang.Object` @kind object;
  #L2aaf74.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2aaf7a.  v0:= temp @kind object;
  #L2aaf7c.  v1:= `@@com.bumptech.glide.load.f.a` @type ^`java.nio.charset.Charset` @kind object;
  #L2aaf80.  call temp:= `getBytes`(v0, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L2aaf86.  v0:= temp @kind object;
  #L2aaf88.  call `update`(v3, v0) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L2aaf8e.  return @kind void;
}
