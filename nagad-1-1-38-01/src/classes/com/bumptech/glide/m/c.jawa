record `com.bumptech.glide.m.c` @kind class @AccessFlag PUBLIC {
  `int`[] `com.bumptech.glide.m.c.a` @AccessFlag ;
  `int` `com.bumptech.glide.m.c.b` @AccessFlag ;
  `int` `com.bumptech.glide.m.c.c` @AccessFlag ;
  `com.bumptech.glide.m.b` `com.bumptech.glide.m.c.d` @AccessFlag ;
  `java.util.List` `com.bumptech.glide.m.c.e` @AccessFlag FINAL;
  `int` `com.bumptech.glide.m.c.f` @AccessFlag ;
  `int` `com.bumptech.glide.m.c.g` @AccessFlag ;
  `boolean` `com.bumptech.glide.m.c.h` @AccessFlag ;
  `int` `com.bumptech.glide.m.c.i` @AccessFlag ;
  `int` `com.bumptech.glide.m.c.j` @AccessFlag ;
  `int` `com.bumptech.glide.m.c.k` @AccessFlag ;
  `int` `com.bumptech.glide.m.c.l` @AccessFlag ;
  `int` `com.bumptech.glide.m.c.m` @AccessFlag ;
}
procedure `void` `<init>`(`com.bumptech.glide.m.c` v1 @kind this) @signature `Lcom/bumptech/glide/m/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L28cf88.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28cf8e.  v0:= 0I;
  #L28cf90.  v1.`com.bumptech.glide.m.c.a` @type ^`int`[] := v0 @kind object;
  #L28cf94.  v0:= 0I;
  #L28cf96.  v1.`com.bumptech.glide.m.c.b` @type ^`int` := v0;
  #L28cf9a.  v1.`com.bumptech.glide.m.c.c` @type ^`int` := v0;
  #L28cf9e.  v0:= new `java.util.ArrayList`;
  #L28cfa2.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L28cfa8.  v1.`com.bumptech.glide.m.c.e` @type ^`java.util.List` := v0 @kind object;
  #L28cfac.  return @kind void;
}
procedure `int` `getHeight`(`com.bumptech.glide.m.c` v1 @kind this) @signature `Lcom/bumptech/glide/m/c;.getHeight:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28cf28.  v0:= v1.`com.bumptech.glide.m.c.g` @type ^`int`;
  #L28cf2c.  return v0;
}
procedure `int` `getNumFrames`(`com.bumptech.glide.m.c` v1 @kind this) @signature `Lcom/bumptech/glide/m/c;.getNumFrames:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28cf40.  v0:= v1.`com.bumptech.glide.m.c.c` @type ^`int`;
  #L28cf44.  return v0;
}
procedure `int` `getStatus`(`com.bumptech.glide.m.c` v1 @kind this) @signature `Lcom/bumptech/glide/m/c;.getStatus:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28cf58.  v0:= v1.`com.bumptech.glide.m.c.b` @type ^`int`;
  #L28cf5c.  return v0;
}
procedure `int` `getWidth`(`com.bumptech.glide.m.c` v1 @kind this) @signature `Lcom/bumptech/glide/m/c;.getWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28cf70.  v0:= v1.`com.bumptech.glide.m.c.f` @type ^`int`;
  #L28cf74.  return v0;
}
