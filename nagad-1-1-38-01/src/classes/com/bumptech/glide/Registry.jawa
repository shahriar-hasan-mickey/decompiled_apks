record `com.bumptech.glide.Registry` @kind class @AccessFlag PUBLIC {
  `com.bumptech.glide.load.n.p` `com.bumptech.glide.Registry.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.p.a` `com.bumptech.glide.Registry.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.p.e` `com.bumptech.glide.Registry.c` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.p.f` `com.bumptech.glide.Registry.d` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.m.f` `com.bumptech.glide.Registry.e` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.o.h.f` `com.bumptech.glide.Registry.f` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.p.b` `com.bumptech.glide.Registry.g` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.p.d` `com.bumptech.glide.Registry.h` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.p.c` `com.bumptech.glide.Registry.i` @AccessFlag PRIVATE_FINAL;
  `c.h.i.d` `com.bumptech.glide.Registry.j` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.Registry` v3 @kind this) @signature `Lcom/bumptech/glide/Registry;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L289818.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28981e.  v0:= new `com.bumptech.glide.p.d`;
  #L289822.  call `<init>`(v0) @signature `Lcom/bumptech/glide/p/d;.<init>:()V` @kind direct;
  #L289828.  v3.`com.bumptech.glide.Registry.h` @type ^`com.bumptech.glide.p.d` := v0 @kind object;
  #L28982c.  v0:= new `com.bumptech.glide.p.c`;
  #L289830.  call `<init>`(v0) @signature `Lcom/bumptech/glide/p/c;.<init>:()V` @kind direct;
  #L289836.  v3.`com.bumptech.glide.Registry.i` @type ^`com.bumptech.glide.p.c` := v0 @kind object;
  #L28983a.  call temp:= `threadSafeList`() @signature `Lcom/bumptech/glide/s/l/a;.threadSafeList:()Lc/h/i/d;` @kind static;
  #L289840.  v0:= temp @kind object;
  #L289842.  v3.`com.bumptech.glide.Registry.j` @type ^`c.h.i.d` := v0 @kind object;
  #L289846.  v0:= new `com.bumptech.glide.load.n.p`;
  #L28984a.  v1:= v3.`com.bumptech.glide.Registry.j` @type ^`c.h.i.d` @kind object;
  #L28984e.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/n/p;.<init>:(Lc/h/i/d;)V` @kind direct;
  #L289854.  v3.`com.bumptech.glide.Registry.a` @type ^`com.bumptech.glide.load.n.p` := v0 @kind object;
  #L289858.  v0:= new `com.bumptech.glide.p.a`;
  #L28985c.  call `<init>`(v0) @signature `Lcom/bumptech/glide/p/a;.<init>:()V` @kind direct;
  #L289862.  v3.`com.bumptech.glide.Registry.b` @type ^`com.bumptech.glide.p.a` := v0 @kind object;
  #L289866.  v0:= new `com.bumptech.glide.p.e`;
  #L28986a.  call `<init>`(v0) @signature `Lcom/bumptech/glide/p/e;.<init>:()V` @kind direct;
  #L289870.  v3.`com.bumptech.glide.Registry.c` @type ^`com.bumptech.glide.p.e` := v0 @kind object;
  #L289874.  v0:= new `com.bumptech.glide.p.f`;
  #L289878.  call `<init>`(v0) @signature `Lcom/bumptech/glide/p/f;.<init>:()V` @kind direct;
  #L28987e.  v3.`com.bumptech.glide.Registry.d` @type ^`com.bumptech.glide.p.f` := v0 @kind object;
  #L289882.  v0:= new `com.bumptech.glide.load.m.f`;
  #L289886.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/m/f;.<init>:()V` @kind direct;
  #L28988c.  v3.`com.bumptech.glide.Registry.e` @type ^`com.bumptech.glide.load.m.f` := v0 @kind object;
  #L289890.  v0:= new `com.bumptech.glide.load.o.h.f`;
  #L289894.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/o/h/f;.<init>:()V` @kind direct;
  #L28989a.  v3.`com.bumptech.glide.Registry.f` @type ^`com.bumptech.glide.load.o.h.f` := v0 @kind object;
  #L28989e.  v0:= new `com.bumptech.glide.p.b`;
  #L2898a2.  call `<init>`(v0) @signature `Lcom/bumptech/glide/p/b;.<init>:()V` @kind direct;
  #L2898a8.  v3.`com.bumptech.glide.Registry.g` @type ^`com.bumptech.glide.p.b` := v0 @kind object;
  #L2898ac.  v0:= "Gif" @kind object;
  #L2898b0.  v1:= "Bitmap" @kind object;
  #L2898b4.  v2:= "BitmapDrawable" @kind object;
  #L2898b8.  temp:= new `java.lang.String`[v0, v1, v2];
  #L2898be.  v0:= temp @kind object;
  #L2898c0.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2898c6.  v0:= temp @kind object;
  #L2898c8.  call temp:= `setResourceDecoderBucketPriorityList`(v3, v0) @signature `Lcom/bumptech/glide/Registry;.setResourceDecoderBucketPriorityList:(Ljava/util/List;)Lcom/bumptech/glide/Registry;` @kind virtual;
  #L2898ce.  return @kind void;
}
procedure `java.util.List` `a`(`com.bumptech.glide.Registry` v11 @kind this, `java.lang.Class` v12 @kind object, `java.lang.Class` v13 @kind object, `java.lang.Class` v14 @kind object) @signature `Lcom/bumptech/glide/Registry;.a:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L289650.  v0:= new `java.util.ArrayList`;
  #L289654.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L28965a.  v1:= v11.`com.bumptech.glide.Registry.c` @type ^`com.bumptech.glide.p.e` @kind object;
  #L28965e.  call temp:= `getResourceClasses`(v1, v12, v13) @signature `Lcom/bumptech/glide/p/e;.getResourceClasses:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;` @kind virtual;
  #L289664.  v13:= temp @kind object;
  #L289666.  call temp:= `iterator`(v13) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L28966c.  v13:= temp @kind object;
  #L28966e.  call temp:= `hasNext`(v13) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L289674.  v1:= temp;
  #L289676.  if v1 == 0 then goto L2896e8;
  #L28967a.  call temp:= `next`(v13) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L289680.  v1:= temp @kind object;
  #L289682.  v1:= (`java.lang.Class`) v1 @kind object;
  #L289686.  v2:= v11.`com.bumptech.glide.Registry.f` @type ^`com.bumptech.glide.load.o.h.f` @kind object;
  #L28968a.  call temp:= `getTranscodeClasses`(v2, v1, v14) @signature `Lcom/bumptech/glide/load/o/h/f;.getTranscodeClasses:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;` @kind virtual;
  #L289690.  v2:= temp @kind object;
  #L289692.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L289698.  v9:= temp @kind object;
  #L28969a.  call temp:= `hasNext`(v9) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2896a0.  v2:= temp;
  #L2896a2.  if v2 == 0 then goto L28966e;
  #L2896a6.  call temp:= `next`(v9) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2896ac.  v2:= temp @kind object;
  #L2896ae.  v5:= v2 @kind object;
  #L2896b0.  v5:= (`java.lang.Class`) v5 @kind object;
  #L2896b4.  v2:= v11.`com.bumptech.glide.Registry.c` @type ^`com.bumptech.glide.p.e` @kind object;
  #L2896b8.  call temp:= `getDecoders`(v2, v12, v1) @signature `Lcom/bumptech/glide/p/e;.getDecoders:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;` @kind virtual;
  #L2896be.  v6:= temp @kind object;
  #L2896c0.  v2:= v11.`com.bumptech.glide.Registry.f` @type ^`com.bumptech.glide.load.o.h.f` @kind object;
  #L2896c4.  call temp:= `get`(v2, v1, v5) @signature `Lcom/bumptech/glide/load/o/h/f;.get:(Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/o/h/e;` @kind virtual;
  #L2896ca.  v7:= temp @kind object;
  #L2896cc.  v10:= new `com.bumptech.glide.load.engine.i`;
  #L2896d0.  v8:= v11.`com.bumptech.glide.Registry.j` @type ^`c.h.i.d` @kind object;
  #L2896d4.  v2:= v10 @kind object;
  #L2896d6.  v3:= v12 @kind object;
  #L2896d8.  v4:= v1 @kind object;
  #L2896da.  call `<init>`(v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/bumptech/glide/load/engine/i;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/util/List;Lcom/bumptech/glide/load/o/h/e;Lc/h/i/d;)V` @kind direct;
  #L2896e0.  call temp:= `add`(v0, v10) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2896e6.  goto L28969a;
  #L2896e8.  return v0 @kind object;
}
procedure `com.bumptech.glide.Registry` `append`(`com.bumptech.glide.Registry` v1 @kind this, `java.lang.Class` v2 @kind object, `com.bumptech.glide.load.d` v3 @kind object) @signature `Lcom/bumptech/glide/Registry;.append:(Ljava/lang/Class;Lcom/bumptech/glide/load/d;)Lcom/bumptech/glide/Registry;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L289414.  v0:= v1.`com.bumptech.glide.Registry.b` @type ^`com.bumptech.glide.p.a` @kind object;
  #L289418.  call `append`(v0, v2, v3) @signature `Lcom/bumptech/glide/p/a;.append:(Ljava/lang/Class;Lcom/bumptech/glide/load/d;)V` @kind virtual;
  #L28941e.  return v1 @kind object;
}
procedure `com.bumptech.glide.Registry` `append`(`com.bumptech.glide.Registry` v1 @kind this, `java.lang.Class` v2 @kind object, `com.bumptech.glide.load.k` v3 @kind object) @signature `Lcom/bumptech/glide/Registry;.append:(Ljava/lang/Class;Lcom/bumptech/glide/load/k;)Lcom/bumptech/glide/Registry;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L289430.  v0:= v1.`com.bumptech.glide.Registry.d` @type ^`com.bumptech.glide.p.f` @kind object;
  #L289434.  call `append`(v0, v2, v3) @signature `Lcom/bumptech/glide/p/f;.append:(Ljava/lang/Class;Lcom/bumptech/glide/load/k;)V` @kind virtual;
  #L28943a.  return v1 @kind object;
}
procedure `com.bumptech.glide.Registry` `append`(`com.bumptech.glide.Registry` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object, `com.bumptech.glide.load.j` v4 @kind object) @signature `Lcom/bumptech/glide/Registry;.append:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/j;)Lcom/bumptech/glide/Registry;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28944c.  v0:= "legacy_append" @kind object;
  #L289450.  call temp:= `append`(v1, v0, v2, v3, v4) @signature `Lcom/bumptech/glide/Registry;.append:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/j;)Lcom/bumptech/glide/Registry;` @kind virtual;
  #L289456.  return v1 @kind object;
}
procedure `com.bumptech.glide.Registry` `append`(`com.bumptech.glide.Registry` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object, `com.bumptech.glide.load.n.o` v4 @kind object) @signature `Lcom/bumptech/glide/Registry;.append:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/n/o;)Lcom/bumptech/glide/Registry;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L289468.  v0:= v1.`com.bumptech.glide.Registry.a` @type ^`com.bumptech.glide.load.n.p` @kind object;
  #L28946c.  call `append`(v0, v2, v3, v4) @signature `Lcom/bumptech/glide/load/n/p;.append:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/n/o;)V` @kind virtual;
  #L289472.  return v1 @kind object;
}
procedure `com.bumptech.glide.Registry` `append`(`com.bumptech.glide.Registry` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Class` v3 @kind object, `java.lang.Class` v4 @kind object, `com.bumptech.glide.load.j` v5 @kind object) @signature `Lcom/bumptech/glide/Registry;.append:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/j;)Lcom/bumptech/glide/Registry;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L289484.  v0:= v1.`com.bumptech.glide.Registry.c` @type ^`com.bumptech.glide.p.e` @kind object;
  #L289488.  call `append`(v0, v2, v5, v3, v4) @signature `Lcom/bumptech/glide/p/e;.append:(Ljava/lang/String;Lcom/bumptech/glide/load/j;Ljava/lang/Class;Ljava/lang/Class;)V` @kind virtual;
  #L28948e.  return v1 @kind object;
}
procedure `java.util.List` `getImageHeaderParsers`(`com.bumptech.glide.Registry` v2 @kind this) @signature `Lcom/bumptech/glide/Registry;.getImageHeaderParsers:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2896fc.  v0:= v2.`com.bumptech.glide.Registry.g` @type ^`com.bumptech.glide.p.b` @kind object;
  #L289700.  call temp:= `getParsers`(v0) @signature `Lcom/bumptech/glide/p/b;.getParsers:()Ljava/util/List;` @kind virtual;
  #L289706.  v0:= temp @kind object;
  #L289708.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L28970e.  v1:= temp;
  #L289710.  if v1 != 0 then goto L289716;
  #L289714.  return v0 @kind object;
  #L289716.  v0:= new `com.bumptech.glide.Registry$NoImageHeaderParserException`;
  #L28971a.  call `<init>`(v0) @signature `Lcom/bumptech/glide/Registry$NoImageHeaderParserException;.<init>:()V` @kind direct;
  #L289720.  throw v0;
}
procedure `com.bumptech.glide.load.engine.s` `getLoadPath`(`com.bumptech.glide.Registry` v9 @kind this, `java.lang.Class` v10 @kind object, `java.lang.Class` v11 @kind object, `java.lang.Class` v12 @kind object) @signature `Lcom/bumptech/glide/Registry;.getLoadPath:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/s;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2895e0.  v0:= v9.`com.bumptech.glide.Registry.i` @type ^`com.bumptech.glide.p.c` @kind object;
  #L2895e4.  call temp:= `get`(v0, v10, v11, v12) @signature `Lcom/bumptech/glide/p/c;.get:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/s;` @kind virtual;
  #L2895ea.  v0:= temp @kind object;
  #L2895ec.  v1:= v9.`com.bumptech.glide.Registry.i` @type ^`com.bumptech.glide.p.c` @kind object;
  #L2895f0.  call temp:= `isEmptyLoadPath`(v1, v0) @signature `Lcom/bumptech/glide/p/c;.isEmptyLoadPath:(Lcom/bumptech/glide/load/engine/s;)Z` @kind virtual;
  #L2895f6.  v1:= temp;
  #L2895f8.  v2:= 0I;
  #L2895fa.  if v1 == 0 then goto L289600;
  #L2895fe.  return v2 @kind object;
  #L289600.  if v0 != 0 then goto L28963c;
  #L289604.  call temp:= `a`(v9, v10, v11, v12) @signature `Lcom/bumptech/glide/Registry;.a:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;` @kind direct;
  #L28960a.  v7:= temp @kind object;
  #L28960c.  call temp:= `isEmpty`(v7) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L289612.  v0:= temp;
  #L289614.  if v0 == 0 then goto L28961c;
  #L289618.  v0:= v2 @kind object;
  #L28961a.  goto L289632;
  #L28961c.  v0:= new `com.bumptech.glide.load.engine.s`;
  #L289620.  v8:= v9.`com.bumptech.glide.Registry.j` @type ^`c.h.i.d` @kind object;
  #L289624.  v3:= v0 @kind object;
  #L289626.  v4:= v10 @kind object;
  #L289628.  v5:= v11 @kind object;
  #L28962a.  v6:= v12 @kind object;
  #L28962c.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Lcom/bumptech/glide/load/engine/s;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/util/List;Lc/h/i/d;)V` @kind direct;
  #L289632.  v1:= v9.`com.bumptech.glide.Registry.i` @type ^`com.bumptech.glide.p.c` @kind object;
  #L289636.  call `put`(v1, v10, v11, v12, v0) @signature `Lcom/bumptech/glide/p/c;.put:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/engine/s;)V` @kind virtual;
  #L28963c.  return v0 @kind object;
}
procedure `java.util.List` `getModelLoaders`(`com.bumptech.glide.Registry` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/Registry;.getModelLoaders:(Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L289734.  v0:= v1.`com.bumptech.glide.Registry.a` @type ^`com.bumptech.glide.load.n.p` @kind object;
  #L289738.  call temp:= `getModelLoaders`(v0, v2) @signature `Lcom/bumptech/glide/load/n/p;.getModelLoaders:(Ljava/lang/Object;)Ljava/util/List;` @kind virtual;
  #L28973e.  v2:= temp @kind object;
  #L289740.  return v2 @kind object;
}
procedure `java.util.List` `getRegisteredResourceClasses`(`com.bumptech.glide.Registry` v5 @kind this, `java.lang.Class` v6 @kind object, `java.lang.Class` v7 @kind object, `java.lang.Class` v8 @kind object) @signature `Lcom/bumptech/glide/Registry;.getRegisteredResourceClasses:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L289754.  v0:= v5.`com.bumptech.glide.Registry.h` @type ^`com.bumptech.glide.p.d` @kind object;
  #L289758.  call temp:= `get`(v0, v6, v7, v8) @signature `Lcom/bumptech/glide/p/d;.get:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;` @kind virtual;
  #L28975e.  v0:= temp @kind object;
  #L289760.  if v0 != 0 then goto L289804;
  #L289764.  v0:= new `java.util.ArrayList`;
  #L289768.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L28976e.  v1:= v5.`com.bumptech.glide.Registry.a` @type ^`com.bumptech.glide.load.n.p` @kind object;
  #L289772.  call temp:= `getDataClasses`(v1, v6) @signature `Lcom/bumptech/glide/load/n/p;.getDataClasses:(Ljava/lang/Class;)Ljava/util/List;` @kind virtual;
  #L289778.  v1:= temp @kind object;
  #L28977a.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L289780.  v1:= temp @kind object;
  #L289782.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L289788.  v2:= temp;
  #L28978a.  if v2 == 0 then goto L2897f2;
  #L28978e.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L289794.  v2:= temp @kind object;
  #L289796.  v2:= (`java.lang.Class`) v2 @kind object;
  #L28979a.  v3:= v5.`com.bumptech.glide.Registry.c` @type ^`com.bumptech.glide.p.e` @kind object;
  #L28979e.  call temp:= `getResourceClasses`(v3, v2, v7) @signature `Lcom/bumptech/glide/p/e;.getResourceClasses:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;` @kind virtual;
  #L2897a4.  v2:= temp @kind object;
  #L2897a6.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2897ac.  v2:= temp @kind object;
  #L2897ae.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2897b4.  v3:= temp;
  #L2897b6.  if v3 == 0 then goto L289782;
  #L2897ba.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2897c0.  v3:= temp @kind object;
  #L2897c2.  v3:= (`java.lang.Class`) v3 @kind object;
  #L2897c6.  v4:= v5.`com.bumptech.glide.Registry.f` @type ^`com.bumptech.glide.load.o.h.f` @kind object;
  #L2897ca.  call temp:= `getTranscodeClasses`(v4, v3, v8) @signature `Lcom/bumptech/glide/load/o/h/f;.getTranscodeClasses:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;` @kind virtual;
  #L2897d0.  v4:= temp @kind object;
  #L2897d2.  call temp:= `isEmpty`(v4) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2897d8.  v4:= temp;
  #L2897da.  if v4 != 0 then goto L2897ae;
  #L2897de.  call temp:= `contains`(v0, v3) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L2897e4.  v4:= temp;
  #L2897e6.  if v4 != 0 then goto L2897ae;
  #L2897ea.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2897f0.  goto L2897ae;
  #L2897f2.  v1:= v5.`com.bumptech.glide.Registry.h` @type ^`com.bumptech.glide.p.d` @kind object;
  #L2897f6.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L2897fc.  v2:= temp @kind object;
  #L2897fe.  call `put`(v1, v6, v7, v8, v2) @signature `Lcom/bumptech/glide/p/d;.put:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/util/List;)V` @kind virtual;
  #L289804.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.k` `getResultEncoder`(`com.bumptech.glide.Registry` v2 @kind this, `com.bumptech.glide.load.engine.u` v3 @kind object) @signature `Lcom/bumptech/glide/Registry;.getResultEncoder:(Lcom/bumptech/glide/load/engine/u;)Lcom/bumptech/glide/load/k;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L289580.  v0:= v2.`com.bumptech.glide.Registry.d` @type ^`com.bumptech.glide.p.f` @kind object;
  #L289584.  call temp:= `getResourceClass`(v3) @signature `Lcom/bumptech/glide/load/engine/u;.getResourceClass:()Ljava/lang/Class;` @kind interface;
  #L28958a.  v1:= temp @kind object;
  #L28958c.  call temp:= `get`(v0, v1) @signature `Lcom/bumptech/glide/p/f;.get:(Ljava/lang/Class;)Lcom/bumptech/glide/load/k;` @kind virtual;
  #L289592.  v0:= temp @kind object;
  #L289594.  if v0 == 0 then goto L28959a;
  #L289598.  return v0 @kind object;
  #L28959a.  v0:= new `com.bumptech.glide.Registry$NoResultEncoderAvailableException`;
  #L28959e.  call temp:= `getResourceClass`(v3) @signature `Lcom/bumptech/glide/load/engine/u;.getResourceClass:()Ljava/lang/Class;` @kind interface;
  #L2895a4.  v3:= temp @kind object;
  #L2895a6.  call `<init>`(v0, v3) @signature `Lcom/bumptech/glide/Registry$NoResultEncoderAvailableException;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L2895ac.  throw v0;
}
procedure `com.bumptech.glide.load.m.e` `getRewinder`(`com.bumptech.glide.Registry` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/Registry;.getRewinder:(Ljava/lang/Object;)Lcom/bumptech/glide/load/m/e;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2895c0.  v0:= v1.`com.bumptech.glide.Registry.e` @type ^`com.bumptech.glide.load.m.f` @kind object;
  #L2895c4.  call temp:= `build`(v0, v2) @signature `Lcom/bumptech/glide/load/m/f;.build:(Ljava/lang/Object;)Lcom/bumptech/glide/load/m/e;` @kind virtual;
  #L2895ca.  v2:= temp @kind object;
  #L2895cc.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.d` `getSourceEncoder`(`com.bumptech.glide.Registry` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/bumptech/glide/Registry;.getSourceEncoder:(Ljava/lang/Object;)Lcom/bumptech/glide/load/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L289540.  v0:= v2.`com.bumptech.glide.Registry.b` @type ^`com.bumptech.glide.p.a` @kind object;
  #L289544.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L28954a.  v1:= temp @kind object;
  #L28954c.  call temp:= `getEncoder`(v0, v1) @signature `Lcom/bumptech/glide/p/a;.getEncoder:(Ljava/lang/Class;)Lcom/bumptech/glide/load/d;` @kind virtual;
  #L289552.  v0:= temp @kind object;
  #L289554.  if v0 == 0 then goto L28955a;
  #L289558.  return v0 @kind object;
  #L28955a.  v0:= new `com.bumptech.glide.Registry$NoSourceEncoderAvailableException`;
  #L28955e.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L289564.  v3:= temp @kind object;
  #L289566.  call `<init>`(v0, v3) @signature `Lcom/bumptech/glide/Registry$NoSourceEncoderAvailableException;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L28956c.  throw v0;
}
procedure `boolean` `isResourceEncoderAvailable`(`com.bumptech.glide.Registry` v1 @kind this, `com.bumptech.glide.load.engine.u` v2 @kind object) @signature `Lcom/bumptech/glide/Registry;.isResourceEncoderAvailable:(Lcom/bumptech/glide/load/engine/u;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2893e4.  v0:= v1.`com.bumptech.glide.Registry.d` @type ^`com.bumptech.glide.p.f` @kind object;
  #L2893e8.  call temp:= `getResourceClass`(v2) @signature `Lcom/bumptech/glide/load/engine/u;.getResourceClass:()Ljava/lang/Class;` @kind interface;
  #L2893ee.  v2:= temp @kind object;
  #L2893f0.  call temp:= `get`(v0, v2) @signature `Lcom/bumptech/glide/p/f;.get:(Ljava/lang/Class;)Lcom/bumptech/glide/load/k;` @kind virtual;
  #L2893f6.  v2:= temp @kind object;
  #L2893f8.  if v2 == 0 then goto L289400;
  #L2893fc.  v2:= 1I;
  #L2893fe.  goto L289402;
  #L289400.  v2:= 0I;
  #L289402.  return v2;
}
procedure `com.bumptech.glide.Registry` `register`(`com.bumptech.glide.Registry` v1 @kind this, `com.bumptech.glide.load.ImageHeaderParser` v2 @kind object) @signature `Lcom/bumptech/glide/Registry;.register:(Lcom/bumptech/glide/load/ImageHeaderParser;)Lcom/bumptech/glide/Registry;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2894a0.  v0:= v1.`com.bumptech.glide.Registry.g` @type ^`com.bumptech.glide.p.b` @kind object;
  #L2894a4.  call `add`(v0, v2) @signature `Lcom/bumptech/glide/p/b;.add:(Lcom/bumptech/glide/load/ImageHeaderParser;)V` @kind virtual;
  #L2894aa.  return v1 @kind object;
}
procedure `com.bumptech.glide.Registry` `register`(`com.bumptech.glide.Registry` v1 @kind this, `com.bumptech.glide.load.m.e$a` v2 @kind object) @signature `Lcom/bumptech/glide/Registry;.register:(Lcom/bumptech/glide/load/m/e$a;)Lcom/bumptech/glide/Registry;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2894bc.  v0:= v1.`com.bumptech.glide.Registry.e` @type ^`com.bumptech.glide.load.m.f` @kind object;
  #L2894c0.  call `register`(v0, v2) @signature `Lcom/bumptech/glide/load/m/f;.register:(Lcom/bumptech/glide/load/m/e$a;)V` @kind virtual;
  #L2894c6.  return v1 @kind object;
}
procedure `com.bumptech.glide.Registry` `register`(`com.bumptech.glide.Registry` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object, `com.bumptech.glide.load.o.h.e` v4 @kind object) @signature `Lcom/bumptech/glide/Registry;.register:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/o/h/e;)Lcom/bumptech/glide/Registry;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2894d8.  v0:= v1.`com.bumptech.glide.Registry.f` @type ^`com.bumptech.glide.load.o.h.f` @kind object;
  #L2894dc.  call `register`(v0, v2, v3, v4) @signature `Lcom/bumptech/glide/load/o/h/f;.register:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/o/h/e;)V` @kind virtual;
  #L2894e2.  return v1 @kind object;
}
procedure `com.bumptech.glide.Registry` `setResourceDecoderBucketPriorityList`(`com.bumptech.glide.Registry` v2 @kind this, `java.util.List` v3 @kind object) @signature `Lcom/bumptech/glide/Registry;.setResourceDecoderBucketPriorityList:(Ljava/util/List;)Lcom/bumptech/glide/Registry;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2894f4.  v0:= new `java.util.ArrayList`;
  #L2894f8.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2894fe.  v1:= temp;
  #L289500.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L289506.  call temp:= `addAll`(v0, v3) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L28950c.  v3:= 0I;
  #L28950e.  v1:= "legacy_prepend_all" @kind object;
  #L289512.  call `add`(v0, v3, v1) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L289518.  v3:= "legacy_append" @kind object;
  #L28951c.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L289522.  v3:= v2.`com.bumptech.glide.Registry.c` @type ^`com.bumptech.glide.p.e` @kind object;
  #L289526.  call `setBucketPriorityList`(v3, v0) @signature `Lcom/bumptech/glide/p/e;.setBucketPriorityList:(Ljava/util/List;)V` @kind virtual;
  #L28952c.  return v2 @kind object;
}
