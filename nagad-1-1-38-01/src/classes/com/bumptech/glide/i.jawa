record `com.bumptech.glide.i` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.q.a` @kind class, `java.lang.Cloneable` @kind interface, `com.bumptech.glide.f` @kind interface {
  `android.content.Context` `com.bumptech.glide.i.F` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.j` `com.bumptech.glide.i.G` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.bumptech.glide.i.H` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.d` `com.bumptech.glide.i.I` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.k` `com.bumptech.glide.i.J` @AccessFlag PRIVATE;
  `java.lang.Object` `com.bumptech.glide.i.K` @AccessFlag PRIVATE;
  `java.util.List` `com.bumptech.glide.i.L` @AccessFlag PRIVATE;
  `com.bumptech.glide.i` `com.bumptech.glide.i.M` @AccessFlag PRIVATE;
  `com.bumptech.glide.i` `com.bumptech.glide.i.N` @AccessFlag PRIVATE;
  `java.lang.Float` `com.bumptech.glide.i.O` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.i.P` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.i.Q` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.i.R` @AccessFlag PRIVATE;
}
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/i;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L28a26c.  v0:= new `com.bumptech.glide.q.h`;
  #L28a270.  call `<init>`(v0) @signature `Lcom/bumptech/glide/q/h;.<init>:()V` @kind direct;
  #L28a276.  v1:= `@@com.bumptech.glide.load.engine.j.b` @type ^`com.bumptech.glide.load.engine.j` @kind object;
  #L28a27a.  call temp:= `diskCacheStrategy`(v0, v1) @signature `Lcom/bumptech/glide/q/a;.diskCacheStrategy:(Lcom/bumptech/glide/load/engine/j;)Lcom/bumptech/glide/q/a;` @kind virtual;
  #L28a280.  v0:= temp @kind object;
  #L28a282.  v0:= (`com.bumptech.glide.q.h`) v0 @kind object;
  #L28a286.  v1:= `@@com.bumptech.glide.g.i` @type ^`com.bumptech.glide.g` @kind object;
  #L28a28a.  call temp:= `priority`(v0, v1) @signature `Lcom/bumptech/glide/q/a;.priority:(Lcom/bumptech/glide/g;)Lcom/bumptech/glide/q/a;` @kind virtual;
  #L28a290.  v0:= temp @kind object;
  #L28a292.  v0:= (`com.bumptech.glide.q.h`) v0 @kind object;
  #L28a296.  v1:= 1I;
  #L28a298.  call temp:= `skipMemoryCache`(v0, v1) @signature `Lcom/bumptech/glide/q/a;.skipMemoryCache:(Z)Lcom/bumptech/glide/q/a;` @kind virtual;
  #L28a29e.  v0:= temp @kind object;
  #L28a2a0.  v0:= (`com.bumptech.glide.q.h`) v0 @kind object;
  #L28a2a4.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.i` v1 @kind this, `com.bumptech.glide.b` v2 @kind object, `com.bumptech.glide.j` v3 @kind object, `java.lang.Class` v4 @kind object, `android.content.Context` v5 @kind object) @signature `Lcom/bumptech/glide/i;.<init>:(Lcom/bumptech/glide/b;Lcom/bumptech/glide/j;Ljava/lang/Class;Landroid/content/Context;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L28a2b8.  call `<init>`(v1) @signature `Lcom/bumptech/glide/q/a;.<init>:()V` @kind direct;
  #L28a2be.  v0:= 1I;
  #L28a2c0.  v1.`com.bumptech.glide.i.P` @type ^`boolean` := v0 @kind boolean;
  #L28a2c4.  v1.`com.bumptech.glide.i.G` @type ^`com.bumptech.glide.j` := v3 @kind object;
  #L28a2c8.  v1.`com.bumptech.glide.i.H` @type ^`java.lang.Class` := v4 @kind object;
  #L28a2cc.  v1.`com.bumptech.glide.i.F` @type ^`android.content.Context` := v5 @kind object;
  #L28a2d0.  call temp:= `a`(v3, v4) @signature `Lcom/bumptech/glide/j;.a:(Ljava/lang/Class;)Lcom/bumptech/glide/k;` @kind virtual;
  #L28a2d6.  v4:= temp @kind object;
  #L28a2d8.  v1.`com.bumptech.glide.i.J` @type ^`com.bumptech.glide.k` := v4 @kind object;
  #L28a2dc.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/b;.b:()Lcom/bumptech/glide/d;` @kind virtual;
  #L28a2e2.  v2:= temp @kind object;
  #L28a2e4.  v1.`com.bumptech.glide.i.I` @type ^`com.bumptech.glide.d` := v2 @kind object;
  #L28a2e8.  call temp:= `a`(v3) @signature `Lcom/bumptech/glide/j;.a:()Ljava/util/List;` @kind virtual;
  #L28a2ee.  v2:= temp @kind object;
  #L28a2f0.  call `a`(v1, v2) @signature `Lcom/bumptech/glide/i;.a:(Ljava/util/List;)V` @kind direct;
  #L28a2f6.  call temp:= `b`(v3) @signature `Lcom/bumptech/glide/j;.b:()Lcom/bumptech/glide/q/h;` @kind virtual;
  #L28a2fc.  v2:= temp @kind object;
  #L28a2fe.  call temp:= `apply`(v1, v2) @signature `Lcom/bumptech/glide/i;.apply:(Lcom/bumptech/glide/q/a;)Lcom/bumptech/glide/i;` @kind virtual;
  #L28a304.  return @kind void;
}
procedure `com.bumptech.glide.g` `a`(`com.bumptech.glide.i` v2 @kind this, `com.bumptech.glide.g` v3 @kind object) @signature `Lcom/bumptech/glide/i;.a:(Lcom/bumptech/glide/g;)Lcom/bumptech/glide/g;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L289adc.  v0:= `@@com.bumptech.glide.i$a.b` @type ^`int`[] @kind object;
  #L289ae0.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L289ae6.  v3:= temp;
  #L289ae8.  v3:= v0[v3];
  #L289aec.  v0:= 1I;
  #L289aee.  if v3 == v0 then goto L289b48;
  #L289af2.  v0:= 2I;
  #L289af4.  if v3 == v0 then goto L289b42;
  #L289af8.  v0:= 3I;
  #L289afa.  if v3 == v0 then goto L289b3c;
  #L289afe.  v0:= 4I;
  #L289b00.  if v3 != v0 then goto L289b06;
  #L289b04.  goto L289b3c;
  #L289b06.  v3:= new `java.lang.IllegalArgumentException`;
  #L289b0a.  v0:= new `java.lang.StringBuilder`;
  #L289b0e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L289b14.  v1:= "unknown priority: " @kind object;
  #L289b18.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L289b1e.  call temp:= `getPriority`(v2) @signature `Lcom/bumptech/glide/q/a;.getPriority:()Lcom/bumptech/glide/g;` @kind virtual;
  #L289b24.  v1:= temp @kind object;
  #L289b26.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L289b2c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L289b32.  v0:= temp @kind object;
  #L289b34.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L289b3a.  throw v3;
  #L289b3c.  v3:= `@@com.bumptech.glide.g.f` @type ^`com.bumptech.glide.g` @kind object;
  #L289b40.  return v3 @kind object;
  #L289b42.  v3:= `@@com.bumptech.glide.g.g` @type ^`com.bumptech.glide.g` @kind object;
  #L289b46.  return v3 @kind object;
  #L289b48.  v3:= `@@com.bumptech.glide.g.h` @type ^`com.bumptech.glide.g` @kind object;
  #L289b4c.  return v3 @kind object;
}
procedure `com.bumptech.glide.i` `a`(`com.bumptech.glide.i` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/i;.a:(Ljava/lang/Object;)Lcom/bumptech/glide/i;` @AccessFlag PRIVATE {
    temp;

  #L289c3c.  v0.`com.bumptech.glide.i.K` @type ^`java.lang.Object` := v1 @kind object;
  #L289c40.  v1:= 1I;
  #L289c42.  v0.`com.bumptech.glide.i.Q` @type ^`boolean` := v1 @kind boolean;
  #L289c46.  return v0 @kind object;
}
procedure `com.bumptech.glide.q.d` `a`(`com.bumptech.glide.i` v11 @kind this, `com.bumptech.glide.q.l.h` v12 @kind object, `com.bumptech.glide.q.g` v13 @kind object, `com.bumptech.glide.q.a` v14 @kind object, `java.util.concurrent.Executor` v15 @kind object) @signature `Lcom/bumptech/glide/i;.a:(Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/q/g;Lcom/bumptech/glide/q/a;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/q/d;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L289ce0.  v1:= new `java.lang.Object`;
  #L289ce4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L289cea.  v5:= v11.`com.bumptech.glide.i.J` @type ^`com.bumptech.glide.k` @kind object;
  #L289cee.  call temp:= `getPriority`(v14) @signature `Lcom/bumptech/glide/q/a;.getPriority:()Lcom/bumptech/glide/g;` @kind virtual;
  #L289cf4.  v6:= temp @kind object;
  #L289cf6.  call temp:= `getOverrideWidth`(v14) @signature `Lcom/bumptech/glide/q/a;.getOverrideWidth:()I` @kind virtual;
  #L289cfc.  v7:= temp;
  #L289cfe.  call temp:= `getOverrideHeight`(v14) @signature `Lcom/bumptech/glide/q/a;.getOverrideHeight:()I` @kind virtual;
  #L289d04.  v8:= temp;
  #L289d06.  v4:= 0I;
  #L289d08.  v0:= v11 @kind object;
  #L289d0a.  v2:= v12 @kind object;
  #L289d0c.  v3:= v13 @kind object;
  #L289d0e.  v9:= v14 @kind object;
  #L289d10.  v10:= v15 @kind object;
  #L289d12.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/i;.a:(Ljava/lang/Object;Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/q/g;Lcom/bumptech/glide/q/e;Lcom/bumptech/glide/k;Lcom/bumptech/glide/g;IILcom/bumptech/glide/q/a;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/q/d;` @kind direct;
  #L289d18.  v12:= temp @kind object;
  #L289d1a.  return v12 @kind object;
}
procedure `com.bumptech.glide.q.d` `a`(`com.bumptech.glide.i` v17 @kind this, `java.lang.Object` v18 @kind object, `com.bumptech.glide.q.l.h` v19 @kind object, `com.bumptech.glide.q.g` v20 @kind object, `com.bumptech.glide.q.a` v21 @kind object, `com.bumptech.glide.q.e` v22 @kind object, `com.bumptech.glide.k` v23 @kind object, `com.bumptech.glide.g` v24 @kind object, `int` v25 , `int` v26 , `java.util.concurrent.Executor` v27 @kind object) @signature `Lcom/bumptech/glide/i;.a:(Ljava/lang/Object;Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/q/g;Lcom/bumptech/glide/q/a;Lcom/bumptech/glide/q/e;Lcom/bumptech/glide/k;Lcom/bumptech/glide/g;IILjava/util/concurrent/Executor;)Lcom/bumptech/glide/q/d;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L28a028.  v0:= v17 @kind object;
  #L28a02c.  v1:= v0.`com.bumptech.glide.i.F` @type ^`android.content.Context` @kind object;
  #L28a030.  v2:= v0.`com.bumptech.glide.i.I` @type ^`com.bumptech.glide.d` @kind object;
  #L28a034.  v4:= v0.`com.bumptech.glide.i.K` @type ^`java.lang.Object` @kind object;
  #L28a038.  v5:= v0.`com.bumptech.glide.i.H` @type ^`java.lang.Class` @kind object;
  #L28a03c.  v12:= v0.`com.bumptech.glide.i.L` @type ^`java.util.List` @kind object;
  #L28a040.  call temp:= `getEngine`(v2) @signature `Lcom/bumptech/glide/d;.getEngine:()Lcom/bumptech/glide/load/engine/k;` @kind virtual;
  #L28a046.  v14:= temp @kind object;
  #L28a048.  call temp:= `a`(v23) @signature `Lcom/bumptech/glide/k;.a:()Lcom/bumptech/glide/q/m/c;` @kind virtual;
  #L28a04e.  v15:= temp @kind object;
  #L28a050.  v3:= v18 @kind object;
  #L28a054.  v6:= v21 @kind object;
  #L28a058.  v7:= v25;
  #L28a05c.  v8:= v26;
  #L28a060.  v9:= v24 @kind object;
  #L28a064.  v10:= v19 @kind object;
  #L28a068.  v11:= v20 @kind object;
  #L28a06c.  v13:= v22 @kind object;
  #L28a070.  v16:= v27 @kind object;
  #L28a074.  call temp:= `obtain`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16) @signature `Lcom/bumptech/glide/q/j;.obtain:(Landroid/content/Context;Lcom/bumptech/glide/d;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;Lcom/bumptech/glide/q/a;IILcom/bumptech/glide/g;Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/q/g;Ljava/util/List;Lcom/bumptech/glide/q/e;Lcom/bumptech/glide/load/engine/k;Lcom/bumptech/glide/q/m/c;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/q/j;` @kind static;
  #L28a07a.  v1:= temp @kind object;
  #L28a07c.  return v1 @kind object;
}
procedure `com.bumptech.glide.q.d` `a`(`com.bumptech.glide.i` v23 @kind this, `java.lang.Object` v24 @kind object, `com.bumptech.glide.q.l.h` v25 @kind object, `com.bumptech.glide.q.g` v26 @kind object, `com.bumptech.glide.q.e` v27 @kind object, `com.bumptech.glide.k` v28 @kind object, `com.bumptech.glide.g` v29 @kind object, `int` v30 , `int` v31 , `com.bumptech.glide.q.a` v32 @kind object, `java.util.concurrent.Executor` v33 @kind object) @signature `Lcom/bumptech/glide/i;.a:(Ljava/lang/Object;Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/q/g;Lcom/bumptech/glide/q/e;Lcom/bumptech/glide/k;Lcom/bumptech/glide/g;IILcom/bumptech/glide/q/a;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/q/d;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;

  #L289d2c.  v11:= v23 @kind object;
  #L289d30.  v0:= v11.`com.bumptech.glide.i.N` @type ^`com.bumptech.glide.i` @kind object;
  #L289d34.  if v0 == 0 then goto L289d50;
  #L289d38.  v0:= new `com.bumptech.glide.q.b`;
  #L289d3c.  v13:= v24 @kind object;
  #L289d40.  v1:= v27 @kind object;
  #L289d44.  call `<init>`(v0, v13, v1) @signature `Lcom/bumptech/glide/q/b;.<init>:(Ljava/lang/Object;Lcom/bumptech/glide/q/e;)V` @kind direct;
  #L289d4a.  v4:= v0 @kind object;
  #L289d4c.  v15:= v4 @kind object;
  #L289d4e.  goto L289d5e;
  #L289d50.  v13:= v24 @kind object;
  #L289d54.  v1:= v27 @kind object;
  #L289d58.  v0:= 0I;
  #L289d5a.  v15:= v0 @kind object;
  #L289d5c.  v4:= v1 @kind object;
  #L289d5e.  v0:= v23 @kind object;
  #L289d62.  v1:= v24 @kind object;
  #L289d66.  v2:= v25 @kind object;
  #L289d6a.  v3:= v26 @kind object;
  #L289d6e.  v5:= v28 @kind object;
  #L289d72.  v6:= v29 @kind object;
  #L289d76.  v7:= v30;
  #L289d7a.  v8:= v31;
  #L289d7e.  v9:= v32 @kind object;
  #L289d82.  v10:= v33 @kind object;
  #L289d86.  call temp:= `b`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/i;.b:(Ljava/lang/Object;Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/q/g;Lcom/bumptech/glide/q/e;Lcom/bumptech/glide/k;Lcom/bumptech/glide/g;IILcom/bumptech/glide/q/a;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/q/d;` @kind direct;
  #L289d8c.  v0:= temp @kind object;
  #L289d8e.  if v15 != 0 then goto L289d94;
  #L289d92.  return v0 @kind object;
  #L289d94.  v1:= v11.`com.bumptech.glide.i.N` @type ^`com.bumptech.glide.i` @kind object;
  #L289d98.  call temp:= `getOverrideWidth`(v1) @signature `Lcom/bumptech/glide/q/a;.getOverrideWidth:()I` @kind virtual;
  #L289d9e.  v1:= temp;
  #L289da0.  v2:= v11.`com.bumptech.glide.i.N` @type ^`com.bumptech.glide.i` @kind object;
  #L289da4.  call temp:= `getOverrideHeight`(v2) @signature `Lcom/bumptech/glide/q/a;.getOverrideHeight:()I` @kind virtual;
  #L289daa.  v2:= temp;
  #L289dac.  call temp:= `isValidDimensions`(v30, v31) @signature `Lcom/bumptech/glide/s/k;.isValidDimensions:(II)Z` @kind static;
  #L289db2.  v3:= temp;
  #L289db4.  if v3 == 0 then goto L289dd8;
  #L289db8.  v3:= v11.`com.bumptech.glide.i.N` @type ^`com.bumptech.glide.i` @kind object;
  #L289dbc.  call temp:= `isValidOverride`(v3) @signature `Lcom/bumptech/glide/q/a;.isValidOverride:()Z` @kind virtual;
  #L289dc2.  v3:= temp;
  #L289dc4.  if v3 != 0 then goto L289dd8;
  #L289dc8.  call temp:= `getOverrideWidth`(v32) @signature `Lcom/bumptech/glide/q/a;.getOverrideWidth:()I` @kind virtual;
  #L289dce.  v1:= temp;
  #L289dd0.  call temp:= `getOverrideHeight`(v32) @signature `Lcom/bumptech/glide/q/a;.getOverrideHeight:()I` @kind virtual;
  #L289dd6.  v2:= temp;
  #L289dd8.  v19:= v1;
  #L289ddc.  v20:= v2;
  #L289de0.  v12:= v11.`com.bumptech.glide.i.N` @type ^`com.bumptech.glide.i` @kind object;
  #L289de4.  v1:= v12.`com.bumptech.glide.i.J` @type ^`com.bumptech.glide.k` @kind object;
  #L289de8.  call temp:= `getPriority`(v12) @signature `Lcom/bumptech/glide/q/a;.getPriority:()Lcom/bumptech/glide/g;` @kind virtual;
  #L289dee.  v18:= temp @kind object;
  #L289df0.  v2:= v11.`com.bumptech.glide.i.N` @type ^`com.bumptech.glide.i` @kind object;
  #L289df4.  v13:= v24 @kind object;
  #L289df8.  v14:= v25 @kind object;
  #L289dfc.  v3:= v15 @kind object;
  #L289dfe.  v15:= v26 @kind object;
  #L289e02.  v16:= v3 @kind object;
  #L289e06.  v17:= v1 @kind object;
  #L289e0a.  v21:= v2 @kind object;
  #L289e0e.  v22:= v33 @kind object;
  #L289e12.  call temp:= `a`(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22) @signature `Lcom/bumptech/glide/i;.a:(Ljava/lang/Object;Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/q/g;Lcom/bumptech/glide/q/e;Lcom/bumptech/glide/k;Lcom/bumptech/glide/g;IILcom/bumptech/glide/q/a;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/q/d;` @kind direct;
  #L289e18.  v1:= temp @kind object;
  #L289e1a.  call `setRequests`(v3, v0, v1) @signature `Lcom/bumptech/glide/q/b;.setRequests:(Lcom/bumptech/glide/q/d;Lcom/bumptech/glide/q/d;)V` @kind virtual;
  #L289e20.  return v3 @kind object;
}
procedure `void` `a`(`com.bumptech.glide.i` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lcom/bumptech/glide/i;.a:(Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L28a318.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L28a31e.  v2:= temp @kind object;
  #L28a320.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L28a326.  v0:= temp;
  #L28a328.  if v0 == 0 then goto L28a340;
  #L28a32c.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L28a332.  v0:= temp @kind object;
  #L28a334.  v0:= (`com.bumptech.glide.q.g`) v0 @kind object;
  #L28a338.  call temp:= `addListener`(v1, v0) @signature `Lcom/bumptech/glide/i;.addListener:(Lcom/bumptech/glide/q/g;)Lcom/bumptech/glide/i;` @kind virtual;
  #L28a33e.  goto L28a320;
  #L28a340.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.i` v0 @kind this, `com.bumptech.glide.q.a` v1 @kind object, `com.bumptech.glide.q.d` v2 @kind object) @signature `Lcom/bumptech/glide/i;.a:(Lcom/bumptech/glide/q/a;Lcom/bumptech/glide/q/d;)Z` @AccessFlag PRIVATE {
    temp;

  #L289aac.  call temp:= `isMemoryCacheable`(v1) @signature `Lcom/bumptech/glide/q/a;.isMemoryCacheable:()Z` @kind virtual;
  #L289ab2.  v1:= temp;
  #L289ab4.  if v1 != 0 then goto L289ac8;
  #L289ab8.  call temp:= `isComplete`(v2) @signature `Lcom/bumptech/glide/q/d;.isComplete:()Z` @kind interface;
  #L289abe.  v1:= temp;
  #L289ac0.  if v1 == 0 then goto L289ac8;
  #L289ac4.  v1:= 1I;
  #L289ac6.  goto L289aca;
  #L289ac8.  v1:= 0I;
  #L289aca.  return v1;
}
procedure `com.bumptech.glide.q.d` `b`(`com.bumptech.glide.i` v18 @kind this, `java.lang.Object` v19 @kind object, `com.bumptech.glide.q.l.h` v20 @kind object, `com.bumptech.glide.q.g` v21 @kind object, `com.bumptech.glide.q.e` v22 @kind object, `com.bumptech.glide.k` v23 @kind object, `com.bumptech.glide.g` v24 @kind object, `int` v25 , `int` v26 , `com.bumptech.glide.q.a` v27 @kind object, `java.util.concurrent.Executor` v28 @kind object) @signature `Lcom/bumptech/glide/i;.b:(Ljava/lang/Object;Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/q/g;Lcom/bumptech/glide/q/e;Lcom/bumptech/glide/k;Lcom/bumptech/glide/g;IILcom/bumptech/glide/q/a;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/q/d;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L289e34.  v11:= v18 @kind object;
  #L289e38.  v12:= v19 @kind object;
  #L289e3c.  v5:= v22 @kind object;
  #L289e40.  v13:= v24 @kind object;
  #L289e44.  v0:= v11.`com.bumptech.glide.i.M` @type ^`com.bumptech.glide.i` @kind object;
  #L289e48.  if v0 == 0 then goto L289f60;
  #L289e4c.  v1:= v11.`com.bumptech.glide.i.R` @type ^`boolean` @kind boolean;
  #L289e50.  if v1 != 0 then goto L289f50;
  #L289e54.  v1:= v0.`com.bumptech.glide.i.J` @type ^`com.bumptech.glide.k` @kind object;
  #L289e58.  v0:= v0.`com.bumptech.glide.i.P` @type ^`boolean` @kind boolean;
  #L289e5c.  if v0 == 0 then goto L289e66;
  #L289e60.  v14:= v23 @kind object;
  #L289e64.  goto L289e68;
  #L289e66.  v14:= v1 @kind object;
  #L289e68.  v0:= v11.`com.bumptech.glide.i.M` @type ^`com.bumptech.glide.i` @kind object;
  #L289e6c.  call temp:= `isPrioritySet`(v0) @signature `Lcom/bumptech/glide/q/a;.isPrioritySet:()Z` @kind virtual;
  #L289e72.  v0:= temp;
  #L289e74.  if v0 == 0 then goto L289e86;
  #L289e78.  v0:= v11.`com.bumptech.glide.i.M` @type ^`com.bumptech.glide.i` @kind object;
  #L289e7c.  call temp:= `getPriority`(v0) @signature `Lcom/bumptech/glide/q/a;.getPriority:()Lcom/bumptech/glide/g;` @kind virtual;
  #L289e82.  v0:= temp @kind object;
  #L289e84.  goto L289e8e;
  #L289e86.  call temp:= `a`(v11, v13) @signature `Lcom/bumptech/glide/i;.a:(Lcom/bumptech/glide/g;)Lcom/bumptech/glide/g;` @kind direct;
  #L289e8c.  v0:= temp @kind object;
  #L289e8e.  v15:= v0 @kind object;
  #L289e90.  v0:= v11.`com.bumptech.glide.i.M` @type ^`com.bumptech.glide.i` @kind object;
  #L289e94.  call temp:= `getOverrideWidth`(v0) @signature `Lcom/bumptech/glide/q/a;.getOverrideWidth:()I` @kind virtual;
  #L289e9a.  v0:= temp;
  #L289e9c.  v1:= v11.`com.bumptech.glide.i.M` @type ^`com.bumptech.glide.i` @kind object;
  #L289ea0.  call temp:= `getOverrideHeight`(v1) @signature `Lcom/bumptech/glide/q/a;.getOverrideHeight:()I` @kind virtual;
  #L289ea6.  v1:= temp;
  #L289ea8.  call temp:= `isValidDimensions`(v25, v26) @signature `Lcom/bumptech/glide/s/k;.isValidDimensions:(II)Z` @kind static;
  #L289eae.  v2:= temp;
  #L289eb0.  if v2 == 0 then goto L289ed4;
  #L289eb4.  v2:= v11.`com.bumptech.glide.i.M` @type ^`com.bumptech.glide.i` @kind object;
  #L289eb8.  call temp:= `isValidOverride`(v2) @signature `Lcom/bumptech/glide/q/a;.isValidOverride:()Z` @kind virtual;
  #L289ebe.  v2:= temp;
  #L289ec0.  if v2 != 0 then goto L289ed4;
  #L289ec4.  call temp:= `getOverrideWidth`(v27) @signature `Lcom/bumptech/glide/q/a;.getOverrideWidth:()I` @kind virtual;
  #L289eca.  v0:= temp;
  #L289ecc.  call temp:= `getOverrideHeight`(v27) @signature `Lcom/bumptech/glide/q/a;.getOverrideHeight:()I` @kind virtual;
  #L289ed2.  v1:= temp;
  #L289ed4.  v16:= v0;
  #L289ed8.  v17:= v1;
  #L289edc.  v10:= new `com.bumptech.glide.q.k`;
  #L289ee0.  call `<init>`(v10, v12, v5) @signature `Lcom/bumptech/glide/q/k;.<init>:(Ljava/lang/Object;Lcom/bumptech/glide/q/e;)V` @kind direct;
  #L289ee6.  v0:= v18 @kind object;
  #L289eea.  v1:= v19 @kind object;
  #L289eee.  v2:= v20 @kind object;
  #L289ef2.  v3:= v21 @kind object;
  #L289ef6.  v4:= v27 @kind object;
  #L289efa.  v5:= v10 @kind object;
  #L289efc.  v6:= v23 @kind object;
  #L289f00.  v7:= v24 @kind object;
  #L289f04.  v8:= v25;
  #L289f08.  v9:= v26;
  #L289f0c.  v13:= v10 @kind object;
  #L289f0e.  v10:= v28 @kind object;
  #L289f12.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/i;.a:(Ljava/lang/Object;Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/q/g;Lcom/bumptech/glide/q/a;Lcom/bumptech/glide/q/e;Lcom/bumptech/glide/k;Lcom/bumptech/glide/g;IILjava/util/concurrent/Executor;)Lcom/bumptech/glide/q/d;` @kind direct;
  #L289f18.  v10:= temp @kind object;
  #L289f1a.  v0:= 1I;
  #L289f1c.  v11.`com.bumptech.glide.i.R` @type ^`boolean` := v0 @kind boolean;
  #L289f20.  v9:= v11.`com.bumptech.glide.i.M` @type ^`com.bumptech.glide.i` @kind object;
  #L289f24.  v0:= v9 @kind object;
  #L289f26.  v4:= v13 @kind object;
  #L289f28.  v5:= v14 @kind object;
  #L289f2a.  v6:= v15 @kind object;
  #L289f2c.  v7:= v16;
  #L289f30.  v8:= v17;
  #L289f34.  v12:= v10 @kind object;
  #L289f36.  v10:= v28 @kind object;
  #L289f3a.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/i;.a:(Ljava/lang/Object;Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/q/g;Lcom/bumptech/glide/q/e;Lcom/bumptech/glide/k;Lcom/bumptech/glide/g;IILcom/bumptech/glide/q/a;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/q/d;` @kind direct;
  #L289f40.  v0:= temp @kind object;
  #L289f42.  v1:= 0I;
  #L289f44.  v11.`com.bumptech.glide.i.R` @type ^`boolean` := v1 @kind boolean;
  #L289f48.  call `setRequests`(v13, v12, v0) @signature `Lcom/bumptech/glide/q/k;.setRequests:(Lcom/bumptech/glide/q/d;Lcom/bumptech/glide/q/d;)V` @kind virtual;
  #L289f4e.  return v13 @kind object;
  #L289f50.  v0:= new `java.lang.IllegalStateException`;
  #L289f54.  v1:= "You cannot use a request as both the main request and a thumbnail, consider using clone() on the request(s) passed to thumbnail()" @kind object;
  #L289f58.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L289f5e.  throw v0;
  #L289f60.  v0:= v11.`com.bumptech.glide.i.O` @type ^`java.lang.Float` @kind object;
  #L289f64.  if v0 == 0 then goto L289fe0;
  #L289f68.  v14:= new `com.bumptech.glide.q.k`;
  #L289f6c.  call `<init>`(v14, v12, v5) @signature `Lcom/bumptech/glide/q/k;.<init>:(Ljava/lang/Object;Lcom/bumptech/glide/q/e;)V` @kind direct;
  #L289f72.  v0:= v18 @kind object;
  #L289f76.  v1:= v19 @kind object;
  #L289f7a.  v2:= v20 @kind object;
  #L289f7e.  v3:= v21 @kind object;
  #L289f82.  v4:= v27 @kind object;
  #L289f86.  v5:= v14 @kind object;
  #L289f88.  v6:= v23 @kind object;
  #L289f8c.  v7:= v24 @kind object;
  #L289f90.  v8:= v25;
  #L289f94.  v9:= v26;
  #L289f98.  v10:= v28 @kind object;
  #L289f9c.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/i;.a:(Ljava/lang/Object;Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/q/g;Lcom/bumptech/glide/q/a;Lcom/bumptech/glide/q/e;Lcom/bumptech/glide/k;Lcom/bumptech/glide/g;IILjava/util/concurrent/Executor;)Lcom/bumptech/glide/q/d;` @kind direct;
  #L289fa2.  v15:= temp @kind object;
  #L289fa4.  call temp:= `clone`(v27) @signature `Lcom/bumptech/glide/q/a;.clone:()Lcom/bumptech/glide/q/a;` @kind virtual;
  #L289faa.  v0:= temp @kind object;
  #L289fac.  v1:= v11.`com.bumptech.glide.i.O` @type ^`java.lang.Float` @kind object;
  #L289fb0.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L289fb6.  v1:= temp;
  #L289fb8.  call temp:= `sizeMultiplier`(v0, v1) @signature `Lcom/bumptech/glide/q/a;.sizeMultiplier:(F)Lcom/bumptech/glide/q/a;` @kind virtual;
  #L289fbe.  v4:= temp @kind object;
  #L289fc0.  call temp:= `a`(v11, v13) @signature `Lcom/bumptech/glide/i;.a:(Lcom/bumptech/glide/g;)Lcom/bumptech/glide/g;` @kind direct;
  #L289fc6.  v7:= temp @kind object;
  #L289fc8.  v0:= v18 @kind object;
  #L289fcc.  v1:= v19 @kind object;
  #L289fd0.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/i;.a:(Ljava/lang/Object;Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/q/g;Lcom/bumptech/glide/q/a;Lcom/bumptech/glide/q/e;Lcom/bumptech/glide/k;Lcom/bumptech/glide/g;IILjava/util/concurrent/Executor;)Lcom/bumptech/glide/q/d;` @kind direct;
  #L289fd6.  v0:= temp @kind object;
  #L289fd8.  call `setRequests`(v14, v15, v0) @signature `Lcom/bumptech/glide/q/k;.setRequests:(Lcom/bumptech/glide/q/d;Lcom/bumptech/glide/q/d;)V` @kind virtual;
  #L289fde.  return v14 @kind object;
  #L289fe0.  v0:= v18 @kind object;
  #L289fe4.  v1:= v19 @kind object;
  #L289fe8.  v2:= v20 @kind object;
  #L289fec.  v3:= v21 @kind object;
  #L289ff0.  v4:= v27 @kind object;
  #L289ff4.  v5:= v22 @kind object;
  #L289ff8.  v6:= v23 @kind object;
  #L289ffc.  v7:= v24 @kind object;
  #L28a000.  v8:= v25;
  #L28a004.  v9:= v26;
  #L28a008.  v10:= v28 @kind object;
  #L28a00c.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/i;.a:(Ljava/lang/Object;Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/q/g;Lcom/bumptech/glide/q/a;Lcom/bumptech/glide/q/e;Lcom/bumptech/glide/k;Lcom/bumptech/glide/g;IILjava/util/concurrent/Executor;)Lcom/bumptech/glide/q/d;` @kind direct;
  #L28a012.  v0:= temp @kind object;
  #L28a014.  return v0 @kind object;
}
procedure `com.bumptech.glide.q.l.h` `b`(`com.bumptech.glide.i` v1 @kind this, `com.bumptech.glide.q.l.h` v2 @kind object, `com.bumptech.glide.q.g` v3 @kind object, `com.bumptech.glide.q.a` v4 @kind object, `java.util.concurrent.Executor` v5 @kind object) @signature `Lcom/bumptech/glide/i;.b:(Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/q/g;Lcom/bumptech/glide/q/a;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/q/l/h;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L28a0b4.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L28a0ba.  v0:= v1.`com.bumptech.glide.i.Q` @type ^`boolean` @kind boolean;
  #L28a0be.  if v0 == 0 then goto L28a126;
  #L28a0c2.  call temp:= `a`(v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/i;.a:(Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/q/g;Lcom/bumptech/glide/q/a;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/q/d;` @kind direct;
  #L28a0c8.  v3:= temp @kind object;
  #L28a0ca.  call temp:= `getRequest`(v2) @signature `Lcom/bumptech/glide/q/l/h;.getRequest:()Lcom/bumptech/glide/q/d;` @kind interface;
  #L28a0d0.  v5:= temp @kind object;
  #L28a0d2.  call temp:= `isEquivalentTo`(v3, v5) @signature `Lcom/bumptech/glide/q/d;.isEquivalentTo:(Lcom/bumptech/glide/q/d;)Z` @kind interface;
  #L28a0d8.  v0:= temp;
  #L28a0da.  if v0 == 0 then goto L28a10a;
  #L28a0de.  call temp:= `a`(v1, v4, v5) @signature `Lcom/bumptech/glide/i;.a:(Lcom/bumptech/glide/q/a;Lcom/bumptech/glide/q/d;)Z` @kind direct;
  #L28a0e4.  v4:= temp;
  #L28a0e6.  if v4 != 0 then goto L28a10a;
  #L28a0ea.  call temp:= `checkNotNull`(v5) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L28a0f0.  v3:= v5 @kind object;
  #L28a0f2.  v3:= (`com.bumptech.glide.q.d`) v3 @kind object;
  #L28a0f6.  call temp:= `isRunning`(v3) @signature `Lcom/bumptech/glide/q/d;.isRunning:()Z` @kind interface;
  #L28a0fc.  v3:= temp;
  #L28a0fe.  if v3 != 0 then goto L28a108;
  #L28a102.  call `begin`(v5) @signature `Lcom/bumptech/glide/q/d;.begin:()V` @kind interface;
  #L28a108.  return v2 @kind object;
  #L28a10a.  v4:= v1.`com.bumptech.glide.i.G` @type ^`com.bumptech.glide.j` @kind object;
  #L28a10e.  call `clear`(v4, v2) @signature `Lcom/bumptech/glide/j;.clear:(Lcom/bumptech/glide/q/l/h;)V` @kind virtual;
  #L28a114.  call `setRequest`(v2, v3) @signature `Lcom/bumptech/glide/q/l/h;.setRequest:(Lcom/bumptech/glide/q/d;)V` @kind interface;
  #L28a11a.  v4:= v1.`com.bumptech.glide.i.G` @type ^`com.bumptech.glide.j` @kind object;
  #L28a11e.  call `a`(v4, v2, v3) @signature `Lcom/bumptech/glide/j;.a:(Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/q/d;)V` @kind virtual;
  #L28a124.  return v2 @kind object;
  #L28a126.  v2:= new `java.lang.IllegalArgumentException`;
  #L28a12a.  v3:= "You must call #load() before calling #into()" @kind object;
  #L28a12e.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28a134.  throw v2;
}
procedure `com.bumptech.glide.q.l.h` `a`(`com.bumptech.glide.i` v0 @kind this, `com.bumptech.glide.q.l.h` v1 @kind object, `com.bumptech.glide.q.g` v2 @kind object, `java.util.concurrent.Executor` v3 @kind object) @signature `Lcom/bumptech/glide/i;.a:(Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/q/g;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/q/l/h;` @AccessFlag  {
    temp;

  #L28a148.  call temp:= `b`(v0, v1, v2, v0, v3) @signature `Lcom/bumptech/glide/i;.b:(Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/q/g;Lcom/bumptech/glide/q/a;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/q/l/h;` @kind direct;
  #L28a14e.  return v1 @kind object;
}
procedure `com.bumptech.glide.i` `addListener`(`com.bumptech.glide.i` v1 @kind this, `com.bumptech.glide.q.g` v2 @kind object) @signature `Lcom/bumptech/glide/i;.addListener:(Lcom/bumptech/glide/q/g;)Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L289b60.  if v2 == 0 then goto L289b84;
  #L289b64.  v0:= v1.`com.bumptech.glide.i.L` @type ^`java.util.List` @kind object;
  #L289b68.  if v0 != 0 then goto L289b7a;
  #L289b6c.  v0:= new `java.util.ArrayList`;
  #L289b70.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L289b76.  v1.`com.bumptech.glide.i.L` @type ^`java.util.List` := v0 @kind object;
  #L289b7a.  v0:= v1.`com.bumptech.glide.i.L` @type ^`java.util.List` @kind object;
  #L289b7e.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L289b84.  return v1 @kind object;
}
procedure `com.bumptech.glide.i` `apply`(`com.bumptech.glide.i` v0 @kind this, `com.bumptech.glide.q.a` v1 @kind object) @signature `Lcom/bumptech/glide/i;.apply:(Lcom/bumptech/glide/q/a;)Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;

  #L289b98.  call temp:= `checkNotNull`(v1) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L289b9e.  call temp:= `apply`(v0, v1) @signature `Lcom/bumptech/glide/q/a;.apply:(Lcom/bumptech/glide/q/a;)Lcom/bumptech/glide/q/a;` @kind super;
  #L289ba4.  v1:= temp @kind object;
  #L289ba6.  v1:= (`com.bumptech.glide.i`) v1 @kind object;
  #L289baa.  return v1 @kind object;
}
procedure `com.bumptech.glide.q.a` `apply`(`com.bumptech.glide.i` v0 @kind this, `com.bumptech.glide.q.a` v1 @kind object) @signature `Lcom/bumptech/glide/i;.apply:(Lcom/bumptech/glide/q/a;)Lcom/bumptech/glide/q/a;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L289c58.  call temp:= `apply`(v0, v1) @signature `Lcom/bumptech/glide/i;.apply:(Lcom/bumptech/glide/q/a;)Lcom/bumptech/glide/i;` @kind virtual;
  #L289c5e.  v1:= temp @kind object;
  #L289c60.  return v1 @kind object;
}
procedure `com.bumptech.glide.i` `clone`(`com.bumptech.glide.i` v2 @kind this) @signature `Lcom/bumptech/glide/i;.clone:()Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L289bbc.  call temp:= `clone`(v2) @signature `Lcom/bumptech/glide/q/a;.clone:()Lcom/bumptech/glide/q/a;` @kind super;
  #L289bc2.  v0:= temp @kind object;
  #L289bc4.  v0:= (`com.bumptech.glide.i`) v0 @kind object;
  #L289bc8.  v1:= v0.`com.bumptech.glide.i.J` @type ^`com.bumptech.glide.k` @kind object;
  #L289bcc.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/k;.clone:()Lcom/bumptech/glide/k;` @kind virtual;
  #L289bd2.  v1:= temp @kind object;
  #L289bd4.  v0.`com.bumptech.glide.i.J` @type ^`com.bumptech.glide.k` := v1 @kind object;
  #L289bd8.  return v0 @kind object;
}
procedure `com.bumptech.glide.q.a` `clone`(`com.bumptech.glide.i` v1 @kind this) @signature `Lcom/bumptech/glide/i;.clone:()Lcom/bumptech/glide/q/a;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L289c74.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/i;.clone:()Lcom/bumptech/glide/i;` @kind virtual;
  #L289c7a.  v0:= temp @kind object;
  #L289c7c.  return v0 @kind object;
}
procedure `java.lang.Object` `clone`(`com.bumptech.glide.i` v1 @kind this) @signature `Lcom/bumptech/glide/i;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L28a250.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/i;.clone:()Lcom/bumptech/glide/i;` @kind virtual;
  #L28a256.  v0:= temp @kind object;
  #L28a258.  return v0 @kind object;
}
procedure `com.bumptech.glide.q.l.h` `into`(`com.bumptech.glide.i` v2 @kind this, `com.bumptech.glide.q.l.h` v3 @kind object) @signature `Lcom/bumptech/glide/i;.into:(Lcom/bumptech/glide/q/l/h;)Lcom/bumptech/glide/q/l/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28a090.  call temp:= `mainThreadExecutor`() @signature `Lcom/bumptech/glide/s/e;.mainThreadExecutor:()Ljava/util/concurrent/Executor;` @kind static;
  #L28a096.  v0:= temp @kind object;
  #L28a098.  v1:= 0I;
  #L28a09a.  call temp:= `a`(v2, v3, v1, v0) @signature `Lcom/bumptech/glide/i;.a:(Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/q/g;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/q/l/h;` @kind virtual;
  #L28a0a0.  return v3 @kind object;
}
procedure `com.bumptech.glide.q.l.i` `into`(`com.bumptech.glide.i` v3 @kind this, `android.widget.ImageView` v4 @kind object) @signature `Lcom/bumptech/glide/i;.into:(Landroid/widget/ImageView;)Lcom/bumptech/glide/q/l/i;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L28a160.  call `assertMainThread`() @signature `Lcom/bumptech/glide/s/k;.assertMainThread:()V` @kind static;
  #L28a166.  call temp:= `checkNotNull`(v4) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L28a16c.  call temp:= `isTransformationSet`(v3) @signature `Lcom/bumptech/glide/q/a;.isTransformationSet:()Z` @kind virtual;
  #L28a172.  v0:= temp;
  #L28a174.  if v0 != 0 then goto L28a1f8;
  #L28a178.  call temp:= `isTransformationAllowed`(v3) @signature `Lcom/bumptech/glide/q/a;.isTransformationAllowed:()Z` @kind virtual;
  #L28a17e.  v0:= temp;
  #L28a180.  if v0 == 0 then goto L28a1f8;
  #L28a184.  call temp:= `getScaleType`(v4) @signature `Landroid/widget/ImageView;.getScaleType:()Landroid/widget/ImageView$ScaleType;` @kind virtual;
  #L28a18a.  v0:= temp @kind object;
  #L28a18c.  if v0 == 0 then goto L28a1f8;
  #L28a190.  v0:= `@@com.bumptech.glide.i$a.a` @type ^`int`[] @kind object;
  #L28a194.  call temp:= `getScaleType`(v4) @signature `Landroid/widget/ImageView;.getScaleType:()Landroid/widget/ImageView$ScaleType;` @kind virtual;
  #L28a19a.  v1:= temp @kind object;
  #L28a19c.  call temp:= `ordinal`(v1) @signature `Landroid/widget/ImageView$ScaleType;.ordinal:()I` @kind virtual;
  #L28a1a2.  v1:= temp;
  #L28a1a4.  v0:= v0[v1];
  #L28a1a8.  goto L28a220;
  #L28a1ae.  goto L28a1f8;
  #L28a1b0.  call temp:= `clone`(v3) @signature `Lcom/bumptech/glide/i;.clone:()Lcom/bumptech/glide/q/a;` @kind virtual;
  #L28a1b6.  v0:= temp @kind object;
  #L28a1b8.  call temp:= `optionalCenterInside`(v0) @signature `Lcom/bumptech/glide/q/a;.optionalCenterInside:()Lcom/bumptech/glide/q/a;` @kind virtual;
  #L28a1be.  v0:= temp @kind object;
  #L28a1c0.  goto L28a1fa;
  #L28a1c2.  call temp:= `clone`(v3) @signature `Lcom/bumptech/glide/i;.clone:()Lcom/bumptech/glide/q/a;` @kind virtual;
  #L28a1c8.  v0:= temp @kind object;
  #L28a1ca.  call temp:= `optionalFitCenter`(v0) @signature `Lcom/bumptech/glide/q/a;.optionalFitCenter:()Lcom/bumptech/glide/q/a;` @kind virtual;
  #L28a1d0.  v0:= temp @kind object;
  #L28a1d2.  goto L28a1fa;
  #L28a1d4.  call temp:= `clone`(v3) @signature `Lcom/bumptech/glide/i;.clone:()Lcom/bumptech/glide/q/a;` @kind virtual;
  #L28a1da.  v0:= temp @kind object;
  #L28a1dc.  call temp:= `optionalCenterInside`(v0) @signature `Lcom/bumptech/glide/q/a;.optionalCenterInside:()Lcom/bumptech/glide/q/a;` @kind virtual;
  #L28a1e2.  v0:= temp @kind object;
  #L28a1e4.  goto L28a1fa;
  #L28a1e6.  call temp:= `clone`(v3) @signature `Lcom/bumptech/glide/i;.clone:()Lcom/bumptech/glide/q/a;` @kind virtual;
  #L28a1ec.  v0:= temp @kind object;
  #L28a1ee.  call temp:= `optionalCenterCrop`(v0) @signature `Lcom/bumptech/glide/q/a;.optionalCenterCrop:()Lcom/bumptech/glide/q/a;` @kind virtual;
  #L28a1f4.  v0:= temp @kind object;
  #L28a1f6.  goto L28a1fa;
  #L28a1f8.  v0:= v3 @kind object;
  #L28a1fa.  v1:= v3.`com.bumptech.glide.i.I` @type ^`com.bumptech.glide.d` @kind object;
  #L28a1fe.  v2:= v3.`com.bumptech.glide.i.H` @type ^`java.lang.Class` @kind object;
  #L28a202.  call temp:= `buildImageViewTarget`(v1, v4, v2) @signature `Lcom/bumptech/glide/d;.buildImageViewTarget:(Landroid/widget/ImageView;Ljava/lang/Class;)Lcom/bumptech/glide/q/l/i;` @kind virtual;
  #L28a208.  v4:= temp @kind object;
  #L28a20a.  v1:= 0I;
  #L28a20c.  call temp:= `mainThreadExecutor`() @signature `Lcom/bumptech/glide/s/e;.mainThreadExecutor:()Ljava/util/concurrent/Executor;` @kind static;
  #L28a212.  v2:= temp @kind object;
  #L28a214.  call temp:= `b`(v3, v4, v1, v0, v2) @signature `Lcom/bumptech/glide/i;.b:(Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/q/g;Lcom/bumptech/glide/q/a;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/q/l/h;` @kind direct;
  #L28a21a.  v4:= (`com.bumptech.glide.q.l.i`) v4 @kind object;
  #L28a21e.  return v4 @kind object;
  #L28a220.  switch v0
                  | 1 => goto L28a1e6
                  | 2 => goto L28a1d4
                  | 3 => goto L28a1c2
                  | 4 => goto L28a1c2
                  | 5 => goto L28a1c2
                  | 6 => goto L28a1b0
                  | else => goto L28a1ae;
}
procedure `com.bumptech.glide.i` `listener`(`com.bumptech.glide.i` v1 @kind this, `com.bumptech.glide.q.g` v2 @kind object) @signature `Lcom/bumptech/glide/i;.listener:(Lcom/bumptech/glide/q/g;)Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L289bec.  v0:= 0I;
  #L289bee.  v1.`com.bumptech.glide.i.L` @type ^`java.util.List` := v0 @kind object;
  #L289bf2.  call temp:= `addListener`(v1, v2) @signature `Lcom/bumptech/glide/i;.addListener:(Lcom/bumptech/glide/q/g;)Lcom/bumptech/glide/i;` @kind virtual;
  #L289bf8.  return v1 @kind object;
}
procedure `com.bumptech.glide.i` `load`(`com.bumptech.glide.i` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/i;.load:(Ljava/lang/Object;)Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;

  #L289c0c.  call temp:= `a`(v0, v1) @signature `Lcom/bumptech/glide/i;.a:(Ljava/lang/Object;)Lcom/bumptech/glide/i;` @kind direct;
  #L289c12.  return v0 @kind object;
}
procedure `com.bumptech.glide.i` `load`(`com.bumptech.glide.i` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/bumptech/glide/i;.load:(Ljava/lang/String;)Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;

  #L289c24.  call temp:= `a`(v0, v1) @signature `Lcom/bumptech/glide/i;.a:(Ljava/lang/Object;)Lcom/bumptech/glide/i;` @kind direct;
  #L289c2a.  return v0 @kind object;
}
procedure `com.bumptech.glide.q.c` `submit`(`com.bumptech.glide.i` v1 @kind this) @signature `Lcom/bumptech/glide/i;.submit:()Lcom/bumptech/glide/q/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L289c90.  v0:= -2147483648I;
  #L289c94.  call temp:= `submit`(v1, v0, v0) @signature `Lcom/bumptech/glide/i;.submit:(II)Lcom/bumptech/glide/q/c;` @kind virtual;
  #L289c9a.  v0:= temp @kind object;
  #L289c9c.  return v0 @kind object;
}
procedure `com.bumptech.glide.q.c` `submit`(`com.bumptech.glide.i` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/i;.submit:(II)Lcom/bumptech/glide/q/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L289cb0.  v0:= new `com.bumptech.glide.q.f`;
  #L289cb4.  call `<init>`(v0, v2, v3) @signature `Lcom/bumptech/glide/q/f;.<init>:(II)V` @kind direct;
  #L289cba.  call temp:= `directExecutor`() @signature `Lcom/bumptech/glide/s/e;.directExecutor:()Ljava/util/concurrent/Executor;` @kind static;
  #L289cc0.  v2:= temp @kind object;
  #L289cc2.  call temp:= `a`(v1, v0, v0, v2) @signature `Lcom/bumptech/glide/i;.a:(Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/q/g;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/q/l/h;` @kind virtual;
  #L289cc8.  v0:= (`com.bumptech.glide.q.c`) v0 @kind object;
  #L289ccc.  return v0 @kind object;
}
