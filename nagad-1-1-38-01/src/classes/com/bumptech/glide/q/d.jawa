record `com.bumptech.glide.q.d` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `void` `begin`() @signature `Lcom/bumptech/glide/q/d;.begin:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `clear`() @signature `Lcom/bumptech/glide/q/d;.clear:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isAnyResourceSet`() @signature `Lcom/bumptech/glide/q/d;.isAnyResourceSet:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isCleared`() @signature `Lcom/bumptech/glide/q/d;.isCleared:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isComplete`() @signature `Lcom/bumptech/glide/q/d;.isComplete:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isEquivalentTo`(`com.bumptech.glide.q.d` v0 @kind object) @signature `Lcom/bumptech/glide/q/d;.isEquivalentTo:(Lcom/bumptech/glide/q/d;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isRunning`() @signature `Lcom/bumptech/glide/q/d;.isRunning:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `pause`() @signature `Lcom/bumptech/glide/q/d;.pause:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
