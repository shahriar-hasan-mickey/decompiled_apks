record `com.bumptech.glide.q.f` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.q.c` @kind interface, `com.bumptech.glide.q.g` @kind interface {
  `int` `com.bumptech.glide.q.f.f` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.q.f.g` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.q.f.h` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.q.f$a` `com.bumptech.glide.q.f.i` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `com.bumptech.glide.q.f.j` @AccessFlag PRIVATE;
  `com.bumptech.glide.q.d` `com.bumptech.glide.q.f.k` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.q.f.l` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.q.f.m` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.q.f.n` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.GlideException` `com.bumptech.glide.q.f.o` @AccessFlag PRIVATE;
}
global `com.bumptech.glide.q.f$a` `@@com.bumptech.glide.q.f.p` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/q/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a8890.  v0:= new `com.bumptech.glide.q.f$a`;
  #L2a8894.  call `<init>`(v0) @signature `Lcom/bumptech/glide/q/f$a;.<init>:()V` @kind direct;
  #L2a889a.  `@@com.bumptech.glide.q.f.p` @type ^`com.bumptech.glide.q.f$a` := v0 @kind object;
  #L2a889e.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.q.f` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/q/f;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2a88b0.  v0:= `@@com.bumptech.glide.q.f.p` @type ^`com.bumptech.glide.q.f$a` @kind object;
  #L2a88b4.  v1:= 1I;
  #L2a88b6.  call `<init>`(v2, v3, v4, v1, v0) @signature `Lcom/bumptech/glide/q/f;.<init>:(IIZLcom/bumptech/glide/q/f$a;)V` @kind direct;
  #L2a88bc.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.q.f` v0 @kind this, `int` v1 , `int` v2 , `boolean` v3 , `com.bumptech.glide.q.f$a` v4 @kind object) @signature `Lcom/bumptech/glide/q/f;.<init>:(IIZLcom/bumptech/glide/q/f$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2a88d0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a88d6.  v0.`com.bumptech.glide.q.f.f` @type ^`int` := v1;
  #L2a88da.  v0.`com.bumptech.glide.q.f.g` @type ^`int` := v2;
  #L2a88de.  v0.`com.bumptech.glide.q.f.h` @type ^`boolean` := v3 @kind boolean;
  #L2a88e2.  v0.`com.bumptech.glide.q.f.i` @type ^`com.bumptech.glide.q.f$a` := v4 @kind object;
  #L2a88e6.  return @kind void;
}
procedure `java.lang.Object` `a`(`com.bumptech.glide.q.f` v5 @kind this, `java.lang.Long` v6 @kind object) @signature `Lcom/bumptech/glide/q/f;.a:(Ljava/lang/Long;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2a86dc.  @monitorenter v5
  #L2a86de.  v0:= v5.`com.bumptech.glide.q.f.h` @type ^`boolean` @kind boolean;
  #L2a86e2.  if v0 == 0 then goto L2a86f8;
  #L2a86e6.  call temp:= `isDone`(v5) @signature `Lcom/bumptech/glide/q/f;.isDone:()Z` @kind virtual;
  #L2a86ec.  v0:= temp;
  #L2a86ee.  if v0 != 0 then goto L2a86f8;
  #L2a86f2.  call `assertBackgroundThread`() @signature `Lcom/bumptech/glide/s/k;.assertBackgroundThread:()V` @kind static;
  #L2a86f8.  v0:= v5.`com.bumptech.glide.q.f.l` @type ^`boolean` @kind boolean;
  #L2a86fc.  if v0 != 0 then goto L2a87ea;
  #L2a8700.  v0:= v5.`com.bumptech.glide.q.f.n` @type ^`boolean` @kind boolean;
  #L2a8704.  if v0 != 0 then goto L2a87da;
  #L2a8708.  v0:= v5.`com.bumptech.glide.q.f.m` @type ^`boolean` @kind boolean;
  #L2a870c.  if v0 == 0 then goto L2a8718;
  #L2a8710.  v6:= v5.`com.bumptech.glide.q.f.j` @type ^`java.lang.Object` @kind object;
  #L2a8714.  @monitorexit v5
  #L2a8716.  return v6 @kind object;
  #L2a8718.  v0:= 0L;
  #L2a871c.  if v6 != 0 then goto L2a872c;
  #L2a8720.  v6:= v5.`com.bumptech.glide.q.f.i` @type ^`com.bumptech.glide.q.f$a` @kind object;
  #L2a8724.  call `a`(v6, v5, v0) @signature `Lcom/bumptech/glide/q/f$a;.a:(Ljava/lang/Object;J)V` @kind virtual;
  #L2a872a.  goto L2a877a;
  #L2a872c.  call temp:= `longValue`(v6) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L2a8732.  v2:= temp @kind wide;
  #L2a8734.  v4:= lcmp(v2, v0);
  #L2a8738.  if v4 <= 0 then goto L2a877a;
  #L2a873c.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L2a8742.  v0:= temp @kind wide;
  #L2a8744.  call temp:= `longValue`(v6) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L2a874a.  v2:= temp @kind wide;
  #L2a874c.  v2:= v2 + v0 @kind long;
  #L2a874e.  call temp:= `isDone`(v5) @signature `Lcom/bumptech/glide/q/f;.isDone:()Z` @kind virtual;
  #L2a8754.  v6:= temp;
  #L2a8756.  if v6 != 0 then goto L2a877a;
  #L2a875a.  v6:= lcmp(v0, v2);
  #L2a875e.  if v6 >= 0 then goto L2a877a;
  #L2a8762.  v6:= v5.`com.bumptech.glide.q.f.i` @type ^`com.bumptech.glide.q.f$a` @kind object;
  #L2a8766.  v0:= v2 - v0 @kind long;
  #L2a876a.  call `a`(v6, v5, v0) @signature `Lcom/bumptech/glide/q/f$a;.a:(Ljava/lang/Object;J)V` @kind virtual;
  #L2a8770.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L2a8776.  v0:= temp @kind wide;
  #L2a8778.  goto L2a874e;
  #L2a877a.  call temp:= `interrupted`() @signature `Ljava/lang/Thread;.interrupted:()Z` @kind static;
  #L2a8780.  v6:= temp;
  #L2a8782.  if v6 != 0 then goto L2a87ce;
  #L2a8786.  v6:= v5.`com.bumptech.glide.q.f.n` @type ^`boolean` @kind boolean;
  #L2a878a.  if v6 != 0 then goto L2a87be;
  #L2a878e.  v6:= v5.`com.bumptech.glide.q.f.l` @type ^`boolean` @kind boolean;
  #L2a8792.  if v6 != 0 then goto L2a87b2;
  #L2a8796.  v6:= v5.`com.bumptech.glide.q.f.m` @type ^`boolean` @kind boolean;
  #L2a879a.  if v6 == 0 then goto L2a87a6;
  #L2a879e.  v6:= v5.`com.bumptech.glide.q.f.j` @type ^`java.lang.Object` @kind object;
  #L2a87a2.  @monitorexit v5
  #L2a87a4.  return v6 @kind object;
  #L2a87a6.  v6:= new `java.util.concurrent.TimeoutException`;
  #L2a87aa.  call `<init>`(v6) @signature `Ljava/util/concurrent/TimeoutException;.<init>:()V` @kind direct;
  #L2a87b0.  throw v6;
  #L2a87b2.  v6:= new `java.util.concurrent.CancellationException`;
  #L2a87b6.  call `<init>`(v6) @signature `Ljava/util/concurrent/CancellationException;.<init>:()V` @kind direct;
  #L2a87bc.  throw v6;
  #L2a87be.  v6:= new `java.util.concurrent.ExecutionException`;
  #L2a87c2.  v0:= v5.`com.bumptech.glide.q.f.o` @type ^`com.bumptech.glide.load.engine.GlideException` @kind object;
  #L2a87c6.  call `<init>`(v6, v0) @signature `Ljava/util/concurrent/ExecutionException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2a87cc.  throw v6;
  #L2a87ce.  v6:= new `java.lang.InterruptedException`;
  #L2a87d2.  call `<init>`(v6) @signature `Ljava/lang/InterruptedException;.<init>:()V` @kind direct;
  #L2a87d8.  throw v6;
  #L2a87da.  v6:= new `java.util.concurrent.ExecutionException`;
  #L2a87de.  v0:= v5.`com.bumptech.glide.q.f.o` @type ^`com.bumptech.glide.load.engine.GlideException` @kind object;
  #L2a87e2.  call `<init>`(v6, v0) @signature `Ljava/util/concurrent/ExecutionException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2a87e8.  throw v6;
  #L2a87ea.  v6:= new `java.util.concurrent.CancellationException`;
  #L2a87ee.  call `<init>`(v6) @signature `Ljava/util/concurrent/CancellationException;.<init>:()V` @kind direct;
  #L2a87f4.  throw v6;
  #L2a87f6.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a87f8.  @monitorexit v5
  #L2a87fa.  throw v6;
  catch `java.lang.Throwable` @[L2a86de..L2a8714] goto L2a87f6;
  catch `java.lang.Throwable` @[L2a8720..L2a87a2] goto L2a87f6;
  catch `java.lang.Throwable` @[L2a87a6..L2a87f6] goto L2a87f6;
}
procedure `boolean` `cancel`(`com.bumptech.glide.q.f` v2 @kind this, `boolean` v3 ) @signature `Lcom/bumptech/glide/q/f;.cancel:(Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a854c.  @monitorenter v2
  #L2a854e.  call temp:= `isDone`(v2) @signature `Lcom/bumptech/glide/q/f;.isDone:()Z` @kind virtual;
  #L2a8554.  v0:= temp;
  #L2a8556.  if v0 == 0 then goto L2a8560;
  #L2a855a.  v3:= 0I;
  #L2a855c.  @monitorexit v2
  #L2a855e.  return v3;
  #L2a8560.  v0:= 1I;
  #L2a8562.  v2.`com.bumptech.glide.q.f.l` @type ^`boolean` := v0 @kind boolean;
  #L2a8566.  v1:= v2.`com.bumptech.glide.q.f.i` @type ^`com.bumptech.glide.q.f$a` @kind object;
  #L2a856a.  call `a`(v1, v2) @signature `Lcom/bumptech/glide/q/f$a;.a:(Ljava/lang/Object;)V` @kind virtual;
  #L2a8570.  v1:= 0I;
  #L2a8572.  if v3 == 0 then goto L2a8580;
  #L2a8576.  v3:= v2.`com.bumptech.glide.q.f.k` @type ^`com.bumptech.glide.q.d` @kind object;
  #L2a857a.  v2.`com.bumptech.glide.q.f.k` @type ^`com.bumptech.glide.q.d` := v1 @kind object;
  #L2a857e.  goto L2a8582;
  #L2a8580.  v3:= v1 @kind object;
  #L2a8582.  @monitorexit v2
  #L2a8584.  if v3 == 0 then goto L2a858e;
  #L2a8588.  call `clear`(v3) @signature `Lcom/bumptech/glide/q/d;.clear:()V` @kind interface;
  #L2a858e.  return v0;
  #L2a8590.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a8592.  @monitorexit v2
  #L2a8594.  throw v3;
  catch `java.lang.Throwable` @[L2a854e..L2a8584] goto L2a8590;
  catch `java.lang.Throwable` @[L2a8592..L2a8594] goto L2a8590;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.q.f` v2 @kind this) @signature `Lcom/bumptech/glide/q/f;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a8828.  v0:= 0I;
  #L2a882a.  call temp:= `a`(v2, v0) @signature `Lcom/bumptech/glide/q/f;.a:(Ljava/lang/Long;)Ljava/lang/Object;` @kind direct;
  #L2a8830.  v0:= temp @kind object;
  #L2a8832.  return v0 @kind object;
  #L2a8834.  v0:= Exception @type ^`java.util.concurrent.TimeoutException` @kind object;
  #L2a8836.  v1:= new `java.lang.AssertionError`;
  #L2a883a.  call `<init>`(v1, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2a8840.  throw v1;
  catch `java.util.concurrent.TimeoutException` @[L2a882a..L2a8832] goto L2a8834;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.q.f` v0 @kind this, `long` v1 , `java.util.concurrent.TimeUnit` v3 @kind object) @signature `Lcom/bumptech/glide/q/f;.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L2a8864.  call temp:= `toMillis`(v3, v1) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L2a886a.  v1:= temp @kind wide;
  #L2a886c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L2a8872.  v1:= temp @kind object;
  #L2a8874.  call temp:= `a`(v0, v1) @signature `Lcom/bumptech/glide/q/f;.a:(Ljava/lang/Long;)Ljava/lang/Object;` @kind direct;
  #L2a887a.  v1:= temp @kind object;
  #L2a887c.  return v1 @kind object;
}
procedure `com.bumptech.glide.q.d` `getRequest`(`com.bumptech.glide.q.f` v1 @kind this) @signature `Lcom/bumptech/glide/q/f;.getRequest:()Lcom/bumptech/glide/q/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a86b0.  @monitorenter v1
  #L2a86b2.  v0:= v1.`com.bumptech.glide.q.f.k` @type ^`com.bumptech.glide.q.d` @kind object;
  #L2a86b6.  @monitorexit v1
  #L2a86b8.  return v0 @kind object;
  #L2a86ba.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a86bc.  @monitorexit v1
  #L2a86be.  throw v0;
  catch `java.lang.Throwable` @[L2a86b2..L2a86b6] goto L2a86ba;
}
procedure `void` `getSize`(`com.bumptech.glide.q.f` v2 @kind this, `com.bumptech.glide.q.l.g` v3 @kind object) @signature `Lcom/bumptech/glide/q/f;.getSize:(Lcom/bumptech/glide/q/l/g;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a88f8.  v0:= v2.`com.bumptech.glide.q.f.f` @type ^`int`;
  #L2a88fc.  v1:= v2.`com.bumptech.glide.q.f.g` @type ^`int`;
  #L2a8900.  call `onSizeReady`(v3, v0, v1) @signature `Lcom/bumptech/glide/q/l/g;.onSizeReady:(II)V` @kind interface;
  #L2a8906.  return @kind void;
}
procedure `boolean` `isCancelled`(`com.bumptech.glide.q.f` v1 @kind this) @signature `Lcom/bumptech/glide/q/f;.isCancelled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a85bc.  @monitorenter v1
  #L2a85be.  v0:= v1.`com.bumptech.glide.q.f.l` @type ^`boolean` @kind boolean;
  #L2a85c2.  @monitorexit v1
  #L2a85c4.  return v0;
  #L2a85c6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a85c8.  @monitorexit v1
  #L2a85ca.  throw v0;
  catch `java.lang.Throwable` @[L2a85be..L2a85c2] goto L2a85c6;
}
procedure `boolean` `isDone`(`com.bumptech.glide.q.f` v1 @kind this) @signature `Lcom/bumptech/glide/q/f;.isDone:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a85e8.  @monitorenter v1
  #L2a85ea.  v0:= v1.`com.bumptech.glide.q.f.l` @type ^`boolean` @kind boolean;
  #L2a85ee.  if v0 != 0 then goto L2a8608;
  #L2a85f2.  v0:= v1.`com.bumptech.glide.q.f.m` @type ^`boolean` @kind boolean;
  #L2a85f6.  if v0 != 0 then goto L2a8608;
  #L2a85fa.  v0:= v1.`com.bumptech.glide.q.f.n` @type ^`boolean` @kind boolean;
  #L2a85fe.  if v0 == 0 then goto L2a8604;
  #L2a8602.  goto L2a8608;
  #L2a8604.  v0:= 0I;
  #L2a8606.  goto L2a860a;
  #L2a8608.  v0:= 1I;
  #L2a860a.  @monitorexit v1
  #L2a860c.  return v0;
  #L2a860e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a8610.  @monitorexit v1
  #L2a8612.  throw v0;
  catch `java.lang.Throwable` @[L2a85ea..L2a85fe] goto L2a860e;
}
procedure `void` `onDestroy`(`com.bumptech.glide.q.f` v0 @kind this) @signature `Lcom/bumptech/glide/q/f;.onDestroy:()V` @AccessFlag PUBLIC {
    temp;

  #L2a8918.  return @kind void;
}
procedure `void` `onLoadCleared`(`com.bumptech.glide.q.f` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/bumptech/glide/q/f;.onLoadCleared:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;

  #L2a892c.  return @kind void;
}
procedure `void` `onLoadFailed`(`com.bumptech.glide.q.f` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/bumptech/glide/q/f;.onLoadFailed:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;

  #L2a8940.  @monitorenter v0
  #L2a8942.  @monitorexit v0
  #L2a8944.  return @kind void;
}
procedure `boolean` `onLoadFailed`(`com.bumptech.glide.q.f` v0 @kind this, `com.bumptech.glide.load.engine.GlideException` v1 @kind object, `java.lang.Object` v2 @kind object, `com.bumptech.glide.q.l.h` v3 @kind object, `boolean` v4 ) @signature `Lcom/bumptech/glide/q/f;.onLoadFailed:(Lcom/bumptech/glide/load/engine/GlideException;Ljava/lang/Object;Lcom/bumptech/glide/q/l/h;Z)Z` @AccessFlag PUBLIC {
    temp;

  #L2a8630.  @monitorenter v0
  #L2a8632.  v2:= 1I;
  #L2a8634.  v0.`com.bumptech.glide.q.f.n` @type ^`boolean` := v2 @kind boolean;
  #L2a8638.  v0.`com.bumptech.glide.q.f.o` @type ^`com.bumptech.glide.load.engine.GlideException` := v1 @kind object;
  #L2a863c.  v1:= v0.`com.bumptech.glide.q.f.i` @type ^`com.bumptech.glide.q.f$a` @kind object;
  #L2a8640.  call `a`(v1, v0) @signature `Lcom/bumptech/glide/q/f$a;.a:(Ljava/lang/Object;)V` @kind virtual;
  #L2a8646.  v1:= 0I;
  #L2a8648.  @monitorexit v0
  #L2a864a.  return v1;
  #L2a864c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a864e.  @monitorexit v0
  #L2a8650.  throw v1;
  catch `java.lang.Throwable` @[L2a8634..L2a8646] goto L2a864c;
}
procedure `void` `onLoadStarted`(`com.bumptech.glide.q.f` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/bumptech/glide/q/f;.onLoadStarted:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;

  #L2a8958.  return @kind void;
}
procedure `void` `onResourceReady`(`com.bumptech.glide.q.f` v0 @kind this, `java.lang.Object` v1 @kind object, `com.bumptech.glide.q.m.b` v2 @kind object) @signature `Lcom/bumptech/glide/q/f;.onResourceReady:(Ljava/lang/Object;Lcom/bumptech/glide/q/m/b;)V` @AccessFlag PUBLIC {
    temp;

  #L2a896c.  @monitorenter v0
  #L2a896e.  @monitorexit v0
  #L2a8970.  return @kind void;
}
procedure `boolean` `onResourceReady`(`com.bumptech.glide.q.f` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object, `com.bumptech.glide.q.l.h` v3 @kind object, `com.bumptech.glide.load.a` v4 @kind object, `boolean` v5 ) @signature `Lcom/bumptech/glide/q/f;.onResourceReady:(Ljava/lang/Object;Ljava/lang/Object;Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/load/a;Z)Z` @AccessFlag PUBLIC {
    temp;

  #L2a8670.  @monitorenter v0
  #L2a8672.  v2:= 1I;
  #L2a8674.  v0.`com.bumptech.glide.q.f.m` @type ^`boolean` := v2 @kind boolean;
  #L2a8678.  v0.`com.bumptech.glide.q.f.j` @type ^`java.lang.Object` := v1 @kind object;
  #L2a867c.  v1:= v0.`com.bumptech.glide.q.f.i` @type ^`com.bumptech.glide.q.f$a` @kind object;
  #L2a8680.  call `a`(v1, v0) @signature `Lcom/bumptech/glide/q/f$a;.a:(Ljava/lang/Object;)V` @kind virtual;
  #L2a8686.  v1:= 0I;
  #L2a8688.  @monitorexit v0
  #L2a868a.  return v1;
  #L2a868c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a868e.  @monitorexit v0
  #L2a8690.  throw v1;
  catch `java.lang.Throwable` @[L2a8674..L2a8686] goto L2a868c;
}
procedure `void` `onStart`(`com.bumptech.glide.q.f` v0 @kind this) @signature `Lcom/bumptech/glide/q/f;.onStart:()V` @AccessFlag PUBLIC {
    temp;

  #L2a8984.  return @kind void;
}
procedure `void` `onStop`(`com.bumptech.glide.q.f` v0 @kind this) @signature `Lcom/bumptech/glide/q/f;.onStop:()V` @AccessFlag PUBLIC {
    temp;

  #L2a8998.  return @kind void;
}
procedure `void` `removeCallback`(`com.bumptech.glide.q.f` v0 @kind this, `com.bumptech.glide.q.l.g` v1 @kind object) @signature `Lcom/bumptech/glide/q/f;.removeCallback:(Lcom/bumptech/glide/q/l/g;)V` @AccessFlag PUBLIC {
    temp;

  #L2a89ac.  return @kind void;
}
procedure `void` `setRequest`(`com.bumptech.glide.q.f` v0 @kind this, `com.bumptech.glide.q.d` v1 @kind object) @signature `Lcom/bumptech/glide/q/f;.setRequest:(Lcom/bumptech/glide/q/d;)V` @AccessFlag PUBLIC {
    temp;

  #L2a89c0.  @monitorenter v0
  #L2a89c2.  v0.`com.bumptech.glide.q.f.k` @type ^`com.bumptech.glide.q.d` := v1 @kind object;
  #L2a89c6.  @monitorexit v0
  #L2a89c8.  return @kind void;
  #L2a89ca.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a89cc.  @monitorexit v0
  #L2a89ce.  throw v1;
  catch `java.lang.Throwable` @[L2a89c2..L2a89c6] goto L2a89ca;
}
