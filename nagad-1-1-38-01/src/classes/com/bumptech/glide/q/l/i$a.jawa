record `com.bumptech.glide.q.l.i$a` @kind class @AccessFlag FINAL {
  `android.view.View` `com.bumptech.glide.q.l.i$a.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.q.l.i$a.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.q.l.i$a.c` @AccessFlag ;
  `com.bumptech.glide.q.l.i$a$a` `com.bumptech.glide.q.l.i$a.d` @AccessFlag PRIVATE;
}
global `java.lang.Integer` `@@com.bumptech.glide.q.l.i$a.e` @AccessFlag STATIC;
procedure `void` `<init>`(`com.bumptech.glide.q.l.i$a` v1 @kind this, `android.view.View` v2 @kind object) @signature `Lcom/bumptech/glide/q/l/i$a;.<init>:(Landroid/view/View;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2aa9dc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2aa9e2.  v0:= new `java.util.ArrayList`;
  #L2aa9e6.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2aa9ec.  v1.`com.bumptech.glide.q.l.i$a.b` @type ^`java.util.List` := v0 @kind object;
  #L2aa9f0.  v1.`com.bumptech.glide.q.l.i$a.a` @type ^`android.view.View` := v2 @kind object;
  #L2aa9f4.  return @kind void;
}
procedure `int` `a`(`com.bumptech.glide.q.l.i$a` v2 @kind this, `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/bumptech/glide/q/l/i$a;.a:(III)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2aa8a4.  v0:= v4 - v5 @kind int;
  #L2aa8a8.  if v0 <= 0 then goto L2aa8ae;
  #L2aa8ac.  return v0;
  #L2aa8ae.  v0:= v2.`com.bumptech.glide.q.l.i$a.c` @type ^`boolean` @kind boolean;
  #L2aa8b2.  v1:= 0I;
  #L2aa8b4.  if v0 == 0 then goto L2aa8ca;
  #L2aa8b8.  v0:= v2.`com.bumptech.glide.q.l.i$a.a` @type ^`android.view.View` @kind object;
  #L2aa8bc.  call temp:= `isLayoutRequested`(v0) @signature `Landroid/view/View;.isLayoutRequested:()Z` @kind virtual;
  #L2aa8c2.  v0:= temp;
  #L2aa8c4.  if v0 == 0 then goto L2aa8ca;
  #L2aa8c8.  return v1;
  #L2aa8ca.  v3:= v3 - v5 @kind int;
  #L2aa8cc.  if v3 <= 0 then goto L2aa8d2;
  #L2aa8d0.  return v3;
  #L2aa8d2.  v3:= v2.`com.bumptech.glide.q.l.i$a.a` @type ^`android.view.View` @kind object;
  #L2aa8d6.  call temp:= `isLayoutRequested`(v3) @signature `Landroid/view/View;.isLayoutRequested:()Z` @kind virtual;
  #L2aa8dc.  v3:= temp;
  #L2aa8de.  if v3 != 0 then goto L2aa91a;
  #L2aa8e2.  v3:= -2I;
  #L2aa8e4.  if v4 != v3 then goto L2aa91a;
  #L2aa8e8.  v3:= 4I;
  #L2aa8ea.  v4:= "ViewTarget" @kind object;
  #L2aa8ee.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2aa8f4.  v3:= temp;
  #L2aa8f6.  if v3 == 0 then goto L2aa904;
  #L2aa8fa.  v3:= "Glide treats LayoutParams.WRAP_CONTENT as a request for an image the size of this device's screen dimensions. If you want to load the original image and are ok with the corresponding memory cost and OOMs (depending on the input size), use override(Target.SIZE_ORIGINAL). Otherwise, use LayoutParams.MATCH_PARENT, set layout_width and layout_height to fixed dimension, or use .override() with fixed dimensions." @kind object;
  #L2aa8fe.  call temp:= `i`(v4, v3) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2aa904.  v3:= v2.`com.bumptech.glide.q.l.i$a.a` @type ^`android.view.View` @kind object;
  #L2aa908.  call temp:= `getContext`(v3) @signature `Landroid/view/View;.getContext:()Landroid/content/Context;` @kind virtual;
  #L2aa90e.  v3:= temp @kind object;
  #L2aa910.  call temp:= `a`(v3) @signature `Lcom/bumptech/glide/q/l/i$a;.a:(Landroid/content/Context;)I` @kind static;
  #L2aa916.  v3:= temp;
  #L2aa918.  return v3;
  #L2aa91a.  return v1;
}
procedure `int` `a`(`android.content.Context` v1 @kind object) @signature `Lcom/bumptech/glide/q/l/i$a;.a:(Landroid/content/Context;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2aa830.  v0:= `@@com.bumptech.glide.q.l.i$a.e` @type ^`java.lang.Integer` @kind object;
  #L2aa834.  if v0 != 0 then goto L2aa886;
  #L2aa838.  v0:= "window" @kind object;
  #L2aa83c.  call temp:= `getSystemService`(v1, v0) @signature `Landroid/content/Context;.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L2aa842.  v1:= temp @kind object;
  #L2aa844.  v1:= (`android.view.WindowManager`) v1 @kind object;
  #L2aa848.  call temp:= `checkNotNull`(v1) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2aa84e.  v1:= (`android.view.WindowManager`) v1 @kind object;
  #L2aa852.  call temp:= `getDefaultDisplay`(v1) @signature `Landroid/view/WindowManager;.getDefaultDisplay:()Landroid/view/Display;` @kind interface;
  #L2aa858.  v1:= temp @kind object;
  #L2aa85a.  v0:= new `android.graphics.Point`;
  #L2aa85e.  call `<init>`(v0) @signature `Landroid/graphics/Point;.<init>:()V` @kind direct;
  #L2aa864.  call `getSize`(v1, v0) @signature `Landroid/view/Display;.getSize:(Landroid/graphics/Point;)V` @kind virtual;
  #L2aa86a.  v1:= v0.`android.graphics.Point.x` @type ^`int`;
  #L2aa86e.  v0:= v0.`android.graphics.Point.y` @type ^`int`;
  #L2aa872.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L2aa878.  v1:= temp;
  #L2aa87a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2aa880.  v1:= temp @kind object;
  #L2aa882.  `@@com.bumptech.glide.q.l.i$a.e` @type ^`java.lang.Integer` := v1 @kind object;
  #L2aa886.  v1:= `@@com.bumptech.glide.q.l.i$a.e` @type ^`java.lang.Integer` @kind object;
  #L2aa88a.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2aa890.  v1:= temp;
  #L2aa892.  return v1;
}
procedure `boolean` `a`(`com.bumptech.glide.q.l.i$a` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/q/l/i$a;.a:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2aa7d8.  if v2 > 0 then goto L2aa7ea;
  #L2aa7dc.  v0:= -2147483648I;
  #L2aa7e0.  if v2 != v0 then goto L2aa7e6;
  #L2aa7e4.  goto L2aa7ea;
  #L2aa7e6.  v2:= 0I;
  #L2aa7e8.  goto L2aa7ec;
  #L2aa7ea.  v2:= 1I;
  #L2aa7ec.  return v2;
}
procedure `boolean` `a`(`com.bumptech.glide.q.l.i$a` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lcom/bumptech/glide/q/l/i$a;.a:(II)Z` @AccessFlag PRIVATE {
    temp;

  #L2aa800.  call temp:= `a`(v0, v1) @signature `Lcom/bumptech/glide/q/l/i$a;.a:(I)Z` @kind direct;
  #L2aa806.  v1:= temp;
  #L2aa808.  if v1 == 0 then goto L2aa81c;
  #L2aa80c.  call temp:= `a`(v0, v2) @signature `Lcom/bumptech/glide/q/l/i$a;.a:(I)Z` @kind direct;
  #L2aa812.  v1:= temp;
  #L2aa814.  if v1 == 0 then goto L2aa81c;
  #L2aa818.  v1:= 1I;
  #L2aa81a.  goto L2aa81e;
  #L2aa81c.  v1:= 0I;
  #L2aa81e.  return v1;
}
procedure `void` `b`(`com.bumptech.glide.q.l.i$a` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/q/l/i$a;.b:(II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2aab18.  v0:= new `java.util.ArrayList`;
  #L2aab1c.  v1:= v2.`com.bumptech.glide.q.l.i$a.b` @type ^`java.util.List` @kind object;
  #L2aab20.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L2aab26.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L2aab2c.  v0:= temp @kind object;
  #L2aab2e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2aab34.  v1:= temp;
  #L2aab36.  if v1 == 0 then goto L2aab4e;
  #L2aab3a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2aab40.  v1:= temp @kind object;
  #L2aab42.  v1:= (`com.bumptech.glide.q.l.g`) v1 @kind object;
  #L2aab46.  call `onSizeReady`(v1, v3, v4) @signature `Lcom/bumptech/glide/q/l/g;.onSizeReady:(II)V` @kind interface;
  #L2aab4c.  goto L2aab2e;
  #L2aab4e.  return @kind void;
}
procedure `int` `c`(`com.bumptech.glide.q.l.i$a` v3 @kind this) @signature `Lcom/bumptech/glide/q/l/i$a;.c:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2aa92c.  v0:= v3.`com.bumptech.glide.q.l.i$a.a` @type ^`android.view.View` @kind object;
  #L2aa930.  call temp:= `getPaddingTop`(v0) @signature `Landroid/view/View;.getPaddingTop:()I` @kind virtual;
  #L2aa936.  v0:= temp;
  #L2aa938.  v1:= v3.`com.bumptech.glide.q.l.i$a.a` @type ^`android.view.View` @kind object;
  #L2aa93c.  call temp:= `getPaddingBottom`(v1) @signature `Landroid/view/View;.getPaddingBottom:()I` @kind virtual;
  #L2aa942.  v1:= temp;
  #L2aa944.  v0:= v0 + v1 @kind int;
  #L2aa946.  v1:= v3.`com.bumptech.glide.q.l.i$a.a` @type ^`android.view.View` @kind object;
  #L2aa94a.  call temp:= `getLayoutParams`(v1) @signature `Landroid/view/View;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L2aa950.  v1:= temp @kind object;
  #L2aa952.  if v1 == 0 then goto L2aa95c;
  #L2aa956.  v1:= v1.`android.view.ViewGroup$LayoutParams.height` @type ^`int`;
  #L2aa95a.  goto L2aa95e;
  #L2aa95c.  v1:= 0I;
  #L2aa95e.  v2:= v3.`com.bumptech.glide.q.l.i$a.a` @type ^`android.view.View` @kind object;
  #L2aa962.  call temp:= `getHeight`(v2) @signature `Landroid/view/View;.getHeight:()I` @kind virtual;
  #L2aa968.  v2:= temp;
  #L2aa96a.  call temp:= `a`(v3, v2, v1, v0) @signature `Lcom/bumptech/glide/q/l/i$a;.a:(III)I` @kind direct;
  #L2aa970.  v0:= temp;
  #L2aa972.  return v0;
}
procedure `int` `d`(`com.bumptech.glide.q.l.i$a` v3 @kind this) @signature `Lcom/bumptech/glide/q/l/i$a;.d:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2aa984.  v0:= v3.`com.bumptech.glide.q.l.i$a.a` @type ^`android.view.View` @kind object;
  #L2aa988.  call temp:= `getPaddingLeft`(v0) @signature `Landroid/view/View;.getPaddingLeft:()I` @kind virtual;
  #L2aa98e.  v0:= temp;
  #L2aa990.  v1:= v3.`com.bumptech.glide.q.l.i$a.a` @type ^`android.view.View` @kind object;
  #L2aa994.  call temp:= `getPaddingRight`(v1) @signature `Landroid/view/View;.getPaddingRight:()I` @kind virtual;
  #L2aa99a.  v1:= temp;
  #L2aa99c.  v0:= v0 + v1 @kind int;
  #L2aa99e.  v1:= v3.`com.bumptech.glide.q.l.i$a.a` @type ^`android.view.View` @kind object;
  #L2aa9a2.  call temp:= `getLayoutParams`(v1) @signature `Landroid/view/View;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L2aa9a8.  v1:= temp @kind object;
  #L2aa9aa.  if v1 == 0 then goto L2aa9b4;
  #L2aa9ae.  v1:= v1.`android.view.ViewGroup$LayoutParams.width` @type ^`int`;
  #L2aa9b2.  goto L2aa9b6;
  #L2aa9b4.  v1:= 0I;
  #L2aa9b6.  v2:= v3.`com.bumptech.glide.q.l.i$a.a` @type ^`android.view.View` @kind object;
  #L2aa9ba.  call temp:= `getWidth`(v2) @signature `Landroid/view/View;.getWidth:()I` @kind virtual;
  #L2aa9c0.  v2:= temp;
  #L2aa9c2.  call temp:= `a`(v3, v2, v1, v0) @signature `Lcom/bumptech/glide/q/l/i$a;.a:(III)I` @kind direct;
  #L2aa9c8.  v0:= temp;
  #L2aa9ca.  return v0;
}
procedure `void` `a`(`com.bumptech.glide.q.l.i$a` v3 @kind this) @signature `Lcom/bumptech/glide/q/l/i$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L2aaa08.  v0:= v3.`com.bumptech.glide.q.l.i$a.b` @type ^`java.util.List` @kind object;
  #L2aaa0c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2aaa12.  v0:= temp;
  #L2aaa14.  if v0 == 0 then goto L2aaa1a;
  #L2aaa18.  return @kind void;
  #L2aaa1a.  call temp:= `d`(v3) @signature `Lcom/bumptech/glide/q/l/i$a;.d:()I` @kind direct;
  #L2aaa20.  v0:= temp;
  #L2aaa22.  call temp:= `c`(v3) @signature `Lcom/bumptech/glide/q/l/i$a;.c:()I` @kind direct;
  #L2aaa28.  v1:= temp;
  #L2aaa2a.  call temp:= `a`(v3, v0, v1) @signature `Lcom/bumptech/glide/q/l/i$a;.a:(II)Z` @kind direct;
  #L2aaa30.  v2:= temp;
  #L2aaa32.  if v2 != 0 then goto L2aaa38;
  #L2aaa36.  return @kind void;
  #L2aaa38.  call `b`(v3, v0, v1) @signature `Lcom/bumptech/glide/q/l/i$a;.b:(II)V` @kind direct;
  #L2aaa3e.  call `b`(v3) @signature `Lcom/bumptech/glide/q/l/i$a;.b:()V` @kind virtual;
  #L2aaa44.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.q.l.i$a` v3 @kind this, `com.bumptech.glide.q.l.g` v4 @kind object) @signature `Lcom/bumptech/glide/q/l/i$a;.a:(Lcom/bumptech/glide/q/l/g;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L2aaa9c.  call temp:= `d`(v3) @signature `Lcom/bumptech/glide/q/l/i$a;.d:()I` @kind direct;
  #L2aaaa2.  v0:= temp;
  #L2aaaa4.  call temp:= `c`(v3) @signature `Lcom/bumptech/glide/q/l/i$a;.c:()I` @kind direct;
  #L2aaaaa.  v1:= temp;
  #L2aaaac.  call temp:= `a`(v3, v0, v1) @signature `Lcom/bumptech/glide/q/l/i$a;.a:(II)Z` @kind direct;
  #L2aaab2.  v2:= temp;
  #L2aaab4.  if v2 == 0 then goto L2aaac0;
  #L2aaab8.  call `onSizeReady`(v4, v0, v1) @signature `Lcom/bumptech/glide/q/l/g;.onSizeReady:(II)V` @kind interface;
  #L2aaabe.  return @kind void;
  #L2aaac0.  v0:= v3.`com.bumptech.glide.q.l.i$a.b` @type ^`java.util.List` @kind object;
  #L2aaac4.  call temp:= `contains`(v0, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L2aaaca.  v0:= temp;
  #L2aaacc.  if v0 != 0 then goto L2aaada;
  #L2aaad0.  v0:= v3.`com.bumptech.glide.q.l.i$a.b` @type ^`java.util.List` @kind object;
  #L2aaad4.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2aaada.  v4:= v3.`com.bumptech.glide.q.l.i$a.d` @type ^`com.bumptech.glide.q.l.i$a$a` @kind object;
  #L2aaade.  if v4 != 0 then goto L2aab06;
  #L2aaae2.  v4:= v3.`com.bumptech.glide.q.l.i$a.a` @type ^`android.view.View` @kind object;
  #L2aaae6.  call temp:= `getViewTreeObserver`(v4) @signature `Landroid/view/View;.getViewTreeObserver:()Landroid/view/ViewTreeObserver;` @kind virtual;
  #L2aaaec.  v4:= temp @kind object;
  #L2aaaee.  v0:= new `com.bumptech.glide.q.l.i$a$a`;
  #L2aaaf2.  call `<init>`(v0, v3) @signature `Lcom/bumptech/glide/q/l/i$a$a;.<init>:(Lcom/bumptech/glide/q/l/i$a;)V` @kind direct;
  #L2aaaf8.  v3.`com.bumptech.glide.q.l.i$a.d` @type ^`com.bumptech.glide.q.l.i$a$a` := v0 @kind object;
  #L2aaafc.  v0:= v3.`com.bumptech.glide.q.l.i$a.d` @type ^`com.bumptech.glide.q.l.i$a$a` @kind object;
  #L2aab00.  call `addOnPreDrawListener`(v4, v0) @signature `Landroid/view/ViewTreeObserver;.addOnPreDrawListener:(Landroid/view/ViewTreeObserver$OnPreDrawListener;)V` @kind virtual;
  #L2aab06.  return @kind void;
}
procedure `void` `b`(`com.bumptech.glide.q.l.i$a` v2 @kind this) @signature `Lcom/bumptech/glide/q/l/i$a;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2aaa58.  v0:= v2.`com.bumptech.glide.q.l.i$a.a` @type ^`android.view.View` @kind object;
  #L2aaa5c.  call temp:= `getViewTreeObserver`(v0) @signature `Landroid/view/View;.getViewTreeObserver:()Landroid/view/ViewTreeObserver;` @kind virtual;
  #L2aaa62.  v0:= temp @kind object;
  #L2aaa64.  call temp:= `isAlive`(v0) @signature `Landroid/view/ViewTreeObserver;.isAlive:()Z` @kind virtual;
  #L2aaa6a.  v1:= temp;
  #L2aaa6c.  if v1 == 0 then goto L2aaa7a;
  #L2aaa70.  v1:= v2.`com.bumptech.glide.q.l.i$a.d` @type ^`com.bumptech.glide.q.l.i$a$a` @kind object;
  #L2aaa74.  call `removeOnPreDrawListener`(v0, v1) @signature `Landroid/view/ViewTreeObserver;.removeOnPreDrawListener:(Landroid/view/ViewTreeObserver$OnPreDrawListener;)V` @kind virtual;
  #L2aaa7a.  v0:= 0I;
  #L2aaa7c.  v2.`com.bumptech.glide.q.l.i$a.d` @type ^`com.bumptech.glide.q.l.i$a$a` := v0 @kind object;
  #L2aaa80.  v0:= v2.`com.bumptech.glide.q.l.i$a.b` @type ^`java.util.List` @kind object;
  #L2aaa84.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L2aaa8a.  return @kind void;
}
procedure `void` `b`(`com.bumptech.glide.q.l.i$a` v1 @kind this, `com.bumptech.glide.q.l.g` v2 @kind object) @signature `Lcom/bumptech/glide/q/l/i$a;.b:(Lcom/bumptech/glide/q/l/g;)V` @AccessFlag  {
    temp;
    v0;

  #L2aab60.  v0:= v1.`com.bumptech.glide.q.l.i$a.b` @type ^`java.util.List` @kind object;
  #L2aab64.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L2aab6a.  return @kind void;
}
