record `com.bumptech.glide.q.l.c` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.bumptech.glide.q.l.h` @kind interface {
  `int` `com.bumptech.glide.q.l.c.f` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.q.l.c.g` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.q.d` `com.bumptech.glide.q.l.c.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.q.l.c` v1 @kind this) @signature `Lcom/bumptech/glide/q/l/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2aa3a0.  v0:= -2147483648I;
  #L2aa3a4.  call `<init>`(v1, v0, v0) @signature `Lcom/bumptech/glide/q/l/c;.<init>:(II)V` @kind direct;
  #L2aa3aa.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.q.l.c` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lcom/bumptech/glide/q/l/c;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2aa3bc.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2aa3c2.  call temp:= `isValidDimensions`(v4, v5) @signature `Lcom/bumptech/glide/s/k;.isValidDimensions:(II)Z` @kind static;
  #L2aa3c8.  v0:= temp;
  #L2aa3ca.  if v0 == 0 then goto L2aa3d8;
  #L2aa3ce.  v3.`com.bumptech.glide.q.l.c.f` @type ^`int` := v4;
  #L2aa3d2.  v3.`com.bumptech.glide.q.l.c.g` @type ^`int` := v5;
  #L2aa3d6.  return @kind void;
  #L2aa3d8.  v0:= new `java.lang.IllegalArgumentException`;
  #L2aa3dc.  v1:= new `java.lang.StringBuilder`;
  #L2aa3e0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2aa3e6.  v2:= "Width and height must both be > 0 or Target#SIZE_ORIGINAL, but given width: " @kind object;
  #L2aa3ea.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aa3f0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aa3f6.  v4:= " and height: " @kind object;
  #L2aa3fa.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aa400.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aa406.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2aa40c.  v4:= temp @kind object;
  #L2aa40e.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2aa414.  throw v0;
}
procedure `com.bumptech.glide.q.d` `getRequest`(`com.bumptech.glide.q.l.c` v1 @kind this) @signature `Lcom/bumptech/glide/q/l/c;.getRequest:()Lcom/bumptech/glide/q/d;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2aa388.  v0:= v1.`com.bumptech.glide.q.l.c.h` @type ^`com.bumptech.glide.q.d` @kind object;
  #L2aa38c.  return v0 @kind object;
}
procedure `void` `getSize`(`com.bumptech.glide.q.l.c` v2 @kind this, `com.bumptech.glide.q.l.g` v3 @kind object) @signature `Lcom/bumptech/glide/q/l/c;.getSize:(Lcom/bumptech/glide/q/l/g;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2aa428.  v0:= v2.`com.bumptech.glide.q.l.c.f` @type ^`int`;
  #L2aa42c.  v1:= v2.`com.bumptech.glide.q.l.c.g` @type ^`int`;
  #L2aa430.  call `onSizeReady`(v3, v0, v1) @signature `Lcom/bumptech/glide/q/l/g;.onSizeReady:(II)V` @kind interface;
  #L2aa436.  return @kind void;
}
procedure `void` `onDestroy`(`com.bumptech.glide.q.l.c` v0 @kind this) @signature `Lcom/bumptech/glide/q/l/c;.onDestroy:()V` @AccessFlag PUBLIC {
    temp;

  #L2aa448.  return @kind void;
}
procedure `void` `onLoadFailed`(`com.bumptech.glide.q.l.c` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/bumptech/glide/q/l/c;.onLoadFailed:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;

  #L2aa45c.  return @kind void;
}
procedure `void` `onLoadStarted`(`com.bumptech.glide.q.l.c` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/bumptech/glide/q/l/c;.onLoadStarted:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;

  #L2aa470.  return @kind void;
}
procedure `void` `onStart`(`com.bumptech.glide.q.l.c` v0 @kind this) @signature `Lcom/bumptech/glide/q/l/c;.onStart:()V` @AccessFlag PUBLIC {
    temp;

  #L2aa484.  return @kind void;
}
procedure `void` `onStop`(`com.bumptech.glide.q.l.c` v0 @kind this) @signature `Lcom/bumptech/glide/q/l/c;.onStop:()V` @AccessFlag PUBLIC {
    temp;

  #L2aa498.  return @kind void;
}
procedure `void` `removeCallback`(`com.bumptech.glide.q.l.c` v0 @kind this, `com.bumptech.glide.q.l.g` v1 @kind object) @signature `Lcom/bumptech/glide/q/l/c;.removeCallback:(Lcom/bumptech/glide/q/l/g;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2aa4ac.  return @kind void;
}
procedure `void` `setRequest`(`com.bumptech.glide.q.l.c` v0 @kind this, `com.bumptech.glide.q.d` v1 @kind object) @signature `Lcom/bumptech/glide/q/l/c;.setRequest:(Lcom/bumptech/glide/q/d;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2aa4c0.  v0.`com.bumptech.glide.q.l.c.h` @type ^`com.bumptech.glide.q.d` := v1 @kind object;
  #L2aa4c4.  return @kind void;
}
