record `com.bumptech.glide.q.m.a` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.q.m.b` @kind interface {
}
global `com.bumptech.glide.q.m.a` `@@com.bumptech.glide.q.m.a.a` @AccessFlag STATIC_FINAL;
global `com.bumptech.glide.q.m.c` `@@com.bumptech.glide.q.m.a.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/q/m/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2aadf0.  v0:= new `com.bumptech.glide.q.m.a`;
  #L2aadf4.  call `<init>`(v0) @signature `Lcom/bumptech/glide/q/m/a;.<init>:()V` @kind direct;
  #L2aadfa.  `@@com.bumptech.glide.q.m.a.a` @type ^`com.bumptech.glide.q.m.a` := v0 @kind object;
  #L2aadfe.  v0:= new `com.bumptech.glide.q.m.a$a`;
  #L2aae02.  call `<init>`(v0) @signature `Lcom/bumptech/glide/q/m/a$a;.<init>:()V` @kind direct;
  #L2aae08.  `@@com.bumptech.glide.q.m.a.b` @type ^`com.bumptech.glide.q.m.c` := v0 @kind object;
  #L2aae0c.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.q.m.a` v0 @kind this) @signature `Lcom/bumptech/glide/q/m/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2aae20.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2aae26.  return @kind void;
}
procedure `com.bumptech.glide.q.m.c` `getFactory`() @signature `Lcom/bumptech/glide/q/m/a;.getFactory:()Lcom/bumptech/glide/q/m/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2aadd8.  v0:= `@@com.bumptech.glide.q.m.a.b` @type ^`com.bumptech.glide.q.m.c` @kind object;
  #L2aaddc.  return v0 @kind object;
}
procedure `boolean` `transition`(`com.bumptech.glide.q.m.a` v0 @kind this, `java.lang.Object` v1 @kind object, `com.bumptech.glide.q.m.b$a` v2 @kind object) @signature `Lcom/bumptech/glide/q/m/a;.transition:(Ljava/lang/Object;Lcom/bumptech/glide/q/m/b$a;)Z` @AccessFlag PUBLIC {
    temp;

  #L2aadc4.  v1:= 0I;
  #L2aadc6.  return v1;
}
