record `com.bumptech.glide.q.j` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.q.d` @kind interface, `com.bumptech.glide.q.l.g` @kind interface, `com.bumptech.glide.q.i` @kind interface {
  `int` `com.bumptech.glide.q.j.A` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.q.j.B` @AccessFlag PRIVATE;
  `java.lang.RuntimeException` `com.bumptech.glide.q.j.C` @AccessFlag PRIVATE;
  `java.lang.String` `com.bumptech.glide.q.j.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.s.l.c` `com.bumptech.glide.q.j.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `com.bumptech.glide.q.j.c` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.q.g` `com.bumptech.glide.q.j.d` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.q.e` `com.bumptech.glide.q.j.e` @AccessFlag PRIVATE_FINAL;
  `android.content.Context` `com.bumptech.glide.q.j.f` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.d` `com.bumptech.glide.q.j.g` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `com.bumptech.glide.q.j.h` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.bumptech.glide.q.j.i` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.q.a` `com.bumptech.glide.q.j.j` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.q.j.k` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.q.j.l` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.g` `com.bumptech.glide.q.j.m` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.q.l.h` `com.bumptech.glide.q.j.n` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.q.j.o` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.q.m.c` `com.bumptech.glide.q.j.p` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.Executor` `com.bumptech.glide.q.j.q` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.u` `com.bumptech.glide.q.j.r` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.k$d` `com.bumptech.glide.q.j.s` @AccessFlag PRIVATE;
  `long` `com.bumptech.glide.q.j.t` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.k` `com.bumptech.glide.q.j.u` @AccessFlag PRIVATE_VOLATILE;
  `com.bumptech.glide.q.j$a` `com.bumptech.glide.q.j.v` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.bumptech.glide.q.j.w` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.bumptech.glide.q.j.x` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.bumptech.glide.q.j.y` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.q.j.z` @AccessFlag PRIVATE;
}
global `boolean` `@@com.bumptech.glide.q.j.D` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/q/j;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2a9098.  v0:= "Request" @kind object;
  #L2a909c.  v1:= 2I;
  #L2a909e.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2a90a4.  v0:= temp;
  #L2a90a6.  `@@com.bumptech.glide.q.j.D` @type ^`boolean` := v0 @kind boolean;
  #L2a90aa.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.q.j` v3 @kind this, `android.content.Context` v4 @kind object, `com.bumptech.glide.d` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Class` v8 @kind object, `com.bumptech.glide.q.a` v9 @kind object, `int` v10 , `int` v11 , `com.bumptech.glide.g` v12 @kind object, `com.bumptech.glide.q.l.h` v13 @kind object, `com.bumptech.glide.q.g` v14 @kind object, `java.util.List` v15 @kind object, `com.bumptech.glide.q.e` v16 @kind object, `com.bumptech.glide.load.engine.k` v17 @kind object, `com.bumptech.glide.q.m.c` v18 @kind object, `java.util.concurrent.Executor` v19 @kind object) @signature `Lcom/bumptech/glide/q/j;.<init>:(Landroid/content/Context;Lcom/bumptech/glide/d;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;Lcom/bumptech/glide/q/a;IILcom/bumptech/glide/g;Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/q/g;Ljava/util/List;Lcom/bumptech/glide/q/e;Lcom/bumptech/glide/load/engine/k;Lcom/bumptech/glide/q/m/c;Ljava/util/concurrent/Executor;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2a90bc.  v0:= v3 @kind object;
  #L2a90be.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a90c4.  v1:= `@@com.bumptech.glide.q.j.D` @type ^`boolean` @kind boolean;
  #L2a90c8.  if v1 == 0 then goto L2a90de;
  #L2a90cc.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind super;
  #L2a90d2.  v1:= temp;
  #L2a90d4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L2a90da.  v1:= temp @kind object;
  #L2a90dc.  goto L2a90e0;
  #L2a90de.  v1:= 0I;
  #L2a90e0.  v0.`com.bumptech.glide.q.j.a` @type ^`java.lang.String` := v1 @kind object;
  #L2a90e4.  call temp:= `newInstance`() @signature `Lcom/bumptech/glide/s/l/c;.newInstance:()Lcom/bumptech/glide/s/l/c;` @kind static;
  #L2a90ea.  v1:= temp @kind object;
  #L2a90ec.  v0.`com.bumptech.glide.q.j.b` @type ^`com.bumptech.glide.s.l.c` := v1 @kind object;
  #L2a90f0.  v1:= v6 @kind object;
  #L2a90f2.  v0.`com.bumptech.glide.q.j.c` @type ^`java.lang.Object` := v1 @kind object;
  #L2a90f6.  v1:= v4 @kind object;
  #L2a90f8.  v0.`com.bumptech.glide.q.j.f` @type ^`android.content.Context` := v1 @kind object;
  #L2a90fc.  v1:= v5 @kind object;
  #L2a90fe.  v0.`com.bumptech.glide.q.j.g` @type ^`com.bumptech.glide.d` := v1 @kind object;
  #L2a9102.  v2:= v7 @kind object;
  #L2a9104.  v0.`com.bumptech.glide.q.j.h` @type ^`java.lang.Object` := v2 @kind object;
  #L2a9108.  v2:= v8 @kind object;
  #L2a910a.  v0.`com.bumptech.glide.q.j.i` @type ^`java.lang.Class` := v2 @kind object;
  #L2a910e.  v2:= v9 @kind object;
  #L2a9110.  v0.`com.bumptech.glide.q.j.j` @type ^`com.bumptech.glide.q.a` := v2 @kind object;
  #L2a9114.  v2:= v10;
  #L2a9116.  v0.`com.bumptech.glide.q.j.k` @type ^`int` := v2;
  #L2a911a.  v2:= v11;
  #L2a911c.  v0.`com.bumptech.glide.q.j.l` @type ^`int` := v2;
  #L2a9120.  v2:= v12 @kind object;
  #L2a9122.  v0.`com.bumptech.glide.q.j.m` @type ^`com.bumptech.glide.g` := v2 @kind object;
  #L2a9126.  v2:= v13 @kind object;
  #L2a9128.  v0.`com.bumptech.glide.q.j.n` @type ^`com.bumptech.glide.q.l.h` := v2 @kind object;
  #L2a912c.  v2:= v14 @kind object;
  #L2a912e.  v0.`com.bumptech.glide.q.j.d` @type ^`com.bumptech.glide.q.g` := v2 @kind object;
  #L2a9132.  v2:= v15 @kind object;
  #L2a9134.  v0.`com.bumptech.glide.q.j.o` @type ^`java.util.List` := v2 @kind object;
  #L2a9138.  v2:= v16 @kind object;
  #L2a913c.  v0.`com.bumptech.glide.q.j.e` @type ^`com.bumptech.glide.q.e` := v2 @kind object;
  #L2a9140.  v2:= v17 @kind object;
  #L2a9144.  v0.`com.bumptech.glide.q.j.u` @type ^`com.bumptech.glide.load.engine.k` := v2 @kind object;
  #L2a9148.  v2:= v18 @kind object;
  #L2a914c.  v0.`com.bumptech.glide.q.j.p` @type ^`com.bumptech.glide.q.m.c` := v2 @kind object;
  #L2a9150.  v2:= v19 @kind object;
  #L2a9154.  v0.`com.bumptech.glide.q.j.q` @type ^`java.util.concurrent.Executor` := v2 @kind object;
  #L2a9158.  v2:= `@@com.bumptech.glide.q.j$a.f` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a915c.  v0.`com.bumptech.glide.q.j.v` @type ^`com.bumptech.glide.q.j$a` := v2 @kind object;
  #L2a9160.  v2:= v0.`com.bumptech.glide.q.j.C` @type ^`java.lang.RuntimeException` @kind object;
  #L2a9164.  if v2 != 0 then goto L2a9186;
  #L2a9168.  call temp:= `isLoggingRequestOriginsEnabled`(v5) @signature `Lcom/bumptech/glide/d;.isLoggingRequestOriginsEnabled:()Z` @kind virtual;
  #L2a916e.  v1:= temp;
  #L2a9170.  if v1 == 0 then goto L2a9186;
  #L2a9174.  v1:= new `java.lang.RuntimeException`;
  #L2a9178.  v2:= "Glide request origin trace" @kind object;
  #L2a917c.  call `<init>`(v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a9182.  v0.`com.bumptech.glide.q.j.C` @type ^`java.lang.RuntimeException` := v1 @kind object;
  #L2a9186.  return @kind void;
}
procedure `int` `a`(`int` v1 , `float` v2 ) @signature `Lcom/bumptech/glide/q/j;.a:(IF)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2a904c.  v0:= -2147483648I;
  #L2a9050.  if v1 != v0 then goto L2a9056;
  #L2a9054.  goto L2a9064;
  #L2a9056.  v1:= (`float`) v1 @kind i2f;
  #L2a9058.  v2:= v2 * v1 @kind float;
  #L2a905c.  call temp:= `round`(v2) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L2a9062.  v1:= temp;
  #L2a9064.  return v1;
}
procedure `android.graphics.drawable.Drawable` `a`(`com.bumptech.glide.q.j` v2 @kind this, `int` v3 ) @signature `Lcom/bumptech/glide/q/j;.a:(I)Landroid/graphics/drawable/Drawable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2a8cc0.  v0:= v2.`com.bumptech.glide.q.j.j` @type ^`com.bumptech.glide.q.a` @kind object;
  #L2a8cc4.  call temp:= `getTheme`(v0) @signature `Lcom/bumptech/glide/q/a;.getTheme:()Landroid/content/res/Resources$Theme;` @kind virtual;
  #L2a8cca.  v0:= temp @kind object;
  #L2a8ccc.  if v0 == 0 then goto L2a8cde;
  #L2a8cd0.  v0:= v2.`com.bumptech.glide.q.j.j` @type ^`com.bumptech.glide.q.a` @kind object;
  #L2a8cd4.  call temp:= `getTheme`(v0) @signature `Lcom/bumptech/glide/q/a;.getTheme:()Landroid/content/res/Resources$Theme;` @kind virtual;
  #L2a8cda.  v0:= temp @kind object;
  #L2a8cdc.  goto L2a8cea;
  #L2a8cde.  v0:= v2.`com.bumptech.glide.q.j.f` @type ^`android.content.Context` @kind object;
  #L2a8ce2.  call temp:= `getTheme`(v0) @signature `Landroid/content/Context;.getTheme:()Landroid/content/res/Resources$Theme;` @kind virtual;
  #L2a8ce8.  v0:= temp @kind object;
  #L2a8cea.  v1:= v2.`com.bumptech.glide.q.j.g` @type ^`com.bumptech.glide.d` @kind object;
  #L2a8cee.  call temp:= `getDrawable`(v1, v3, v0) @signature `Lcom/bumptech/glide/load/o/e/a;.getDrawable:(Landroid/content/Context;ILandroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L2a8cf4.  v3:= temp @kind object;
  #L2a8cf6.  return v3 @kind object;
}
procedure `void` `a`(`com.bumptech.glide.q.j` v2 @kind this) @signature `Lcom/bumptech/glide/q/j;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2a9198.  v0:= v2.`com.bumptech.glide.q.j.B` @type ^`boolean` @kind boolean;
  #L2a919c.  if v0 != 0 then goto L2a91a2;
  #L2a91a0.  return @kind void;
  #L2a91a2.  v0:= new `java.lang.IllegalStateException`;
  #L2a91a6.  v1:= "You can't start or clear loads in RequestListener or Target callbacks. If you're trying to start a fallback request when a load fails, use RequestBuilder#error(RequestBuilder). Otherwise consider posting your into() or clear() calls to the main thread using a Handler instead." @kind object;
  #L2a91aa.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a91b0.  throw v0;
}
procedure `void` `a`(`com.bumptech.glide.q.j` v8 @kind this, `com.bumptech.glide.load.engine.GlideException` v9 @kind object, `int` v10 ) @signature `Lcom/bumptech/glide/q/j;.a:(Lcom/bumptech/glide/load/engine/GlideException;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2a94cc.  v0:= v8.`com.bumptech.glide.q.j.b` @type ^`com.bumptech.glide.s.l.c` @kind object;
  #L2a94d0.  call `throwIfRecycled`(v0) @signature `Lcom/bumptech/glide/s/l/c;.throwIfRecycled:()V` @kind virtual;
  #L2a94d6.  v0:= v8.`com.bumptech.glide.q.j.c` @type ^`java.lang.Object` @kind object;
  #L2a94da.  @monitorenter v0
  #L2a94dc.  v1:= v8.`com.bumptech.glide.q.j.C` @type ^`java.lang.RuntimeException` @kind object;
  #L2a94e0.  call `setOrigin`(v9, v1) @signature `Lcom/bumptech/glide/load/engine/GlideException;.setOrigin:(Ljava/lang/Exception;)V` @kind virtual;
  #L2a94e6.  v1:= v8.`com.bumptech.glide.q.j.g` @type ^`com.bumptech.glide.d` @kind object;
  #L2a94ea.  call temp:= `getLogLevel`(v1) @signature `Lcom/bumptech/glide/d;.getLogLevel:()I` @kind virtual;
  #L2a94f0.  v1:= temp;
  #L2a94f2.  if v1 > v10 then goto L2a9568;
  #L2a94f6.  v10:= "Glide" @kind object;
  #L2a94fa.  v2:= new `java.lang.StringBuilder`;
  #L2a94fe.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2a9504.  v3:= "Load failed for " @kind object;
  #L2a9508.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a950e.  v3:= v8.`com.bumptech.glide.q.j.h` @type ^`java.lang.Object` @kind object;
  #L2a9512.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a9518.  v3:= " with size [" @kind object;
  #L2a951c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a9522.  v3:= v8.`com.bumptech.glide.q.j.z` @type ^`int`;
  #L2a9526.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a952c.  v3:= "x" @kind object;
  #L2a9530.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a9536.  v3:= v8.`com.bumptech.glide.q.j.A` @type ^`int`;
  #L2a953a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a9540.  v3:= "]" @kind object;
  #L2a9544.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a954a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a9550.  v2:= temp @kind object;
  #L2a9552.  call temp:= `w`(v10, v2, v9) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L2a9558.  v10:= 4I;
  #L2a955a.  if v1 > v10 then goto L2a9568;
  #L2a955e.  v10:= "Glide" @kind object;
  #L2a9562.  call `logRootCauses`(v9, v10) @signature `Lcom/bumptech/glide/load/engine/GlideException;.logRootCauses:(Ljava/lang/String;)V` @kind virtual;
  #L2a9568.  v10:= 0I;
  #L2a956a.  v8.`com.bumptech.glide.q.j.s` @type ^`com.bumptech.glide.load.engine.k$d` := v10 @kind object;
  #L2a956e.  v10:= `@@com.bumptech.glide.q.j$a.j` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a9572.  v8.`com.bumptech.glide.q.j.v` @type ^`com.bumptech.glide.q.j$a` := v10 @kind object;
  #L2a9576.  v10:= 1I;
  #L2a9578.  v8.`com.bumptech.glide.q.j.B` @type ^`boolean` := v10 @kind boolean;
  #L2a957c.  v1:= 0I;
  #L2a957e.  v2:= v8.`com.bumptech.glide.q.j.o` @type ^`java.util.List` @kind object;
  #L2a9582.  if v2 == 0 then goto L2a95c8;
  #L2a9586.  v2:= v8.`com.bumptech.glide.q.j.o` @type ^`java.util.List` @kind object;
  #L2a958a.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2a9590.  v2:= temp @kind object;
  #L2a9592.  v3:= 0I;
  #L2a9594.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2a959a.  v4:= temp;
  #L2a959c.  if v4 == 0 then goto L2a95ca;
  #L2a95a0.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2a95a6.  v4:= temp @kind object;
  #L2a95a8.  v4:= (`com.bumptech.glide.q.g`) v4 @kind object;
  #L2a95ac.  v5:= v8.`com.bumptech.glide.q.j.h` @type ^`java.lang.Object` @kind object;
  #L2a95b0.  v6:= v8.`com.bumptech.glide.q.j.n` @type ^`com.bumptech.glide.q.l.h` @kind object;
  #L2a95b4.  call temp:= `i`(v8) @signature `Lcom/bumptech/glide/q/j;.i:()Z` @kind direct;
  #L2a95ba.  v7:= temp;
  #L2a95bc.  call temp:= `onLoadFailed`(v4, v9, v5, v6, v7) @signature `Lcom/bumptech/glide/q/g;.onLoadFailed:(Lcom/bumptech/glide/load/engine/GlideException;Ljava/lang/Object;Lcom/bumptech/glide/q/l/h;Z)Z` @kind interface;
  #L2a95c2.  v4:= temp;
  #L2a95c4.  v3:= v3 ^| v4 @kind int;
  #L2a95c6.  goto L2a9594;
  #L2a95c8.  v3:= 0I;
  #L2a95ca.  v2:= v8.`com.bumptech.glide.q.j.d` @type ^`com.bumptech.glide.q.g` @kind object;
  #L2a95ce.  if v2 == 0 then goto L2a95f4;
  #L2a95d2.  v2:= v8.`com.bumptech.glide.q.j.d` @type ^`com.bumptech.glide.q.g` @kind object;
  #L2a95d6.  v4:= v8.`com.bumptech.glide.q.j.h` @type ^`java.lang.Object` @kind object;
  #L2a95da.  v5:= v8.`com.bumptech.glide.q.j.n` @type ^`com.bumptech.glide.q.l.h` @kind object;
  #L2a95de.  call temp:= `i`(v8) @signature `Lcom/bumptech/glide/q/j;.i:()Z` @kind direct;
  #L2a95e4.  v6:= temp;
  #L2a95e6.  call temp:= `onLoadFailed`(v2, v9, v4, v5, v6) @signature `Lcom/bumptech/glide/q/g;.onLoadFailed:(Lcom/bumptech/glide/load/engine/GlideException;Ljava/lang/Object;Lcom/bumptech/glide/q/l/h;Z)Z` @kind interface;
  #L2a95ec.  v9:= temp;
  #L2a95ee.  if v9 == 0 then goto L2a95f4;
  #L2a95f2.  goto L2a95f6;
  #L2a95f4.  v10:= 0I;
  #L2a95f6.  v9:= v3 ^| v10 @kind int;
  #L2a95fa.  if v9 != 0 then goto L2a9604;
  #L2a95fe.  call `l`(v8) @signature `Lcom/bumptech/glide/q/j;.l:()V` @kind direct;
  #L2a9604.  v8.`com.bumptech.glide.q.j.B` @type ^`boolean` := v1 @kind boolean;
  #L2a9608.  call `j`(v8) @signature `Lcom/bumptech/glide/q/j;.j:()V` @kind direct;
  #L2a960e.  @monitorexit v0
  #L2a9610.  return @kind void;
  #L2a9612.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a9614.  v8.`com.bumptech.glide.q.j.B` @type ^`boolean` := v1 @kind boolean;
  #L2a9618.  throw v9;
  #L2a961a.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a961c.  @monitorexit v0
  #L2a961e.  throw v9;
  catch `java.lang.Throwable` @[L2a94dc..L2a957c] goto L2a961a;
  catch `java.lang.Throwable` @[L2a957e..L2a9604] goto L2a9612;
  catch `java.lang.Throwable` @[L2a9604..L2a961e] goto L2a961a;
}
procedure `void` `a`(`com.bumptech.glide.q.j` v10 @kind this, `com.bumptech.glide.load.engine.u` v11 @kind object, `java.lang.Object` v12 @kind object, `com.bumptech.glide.load.a` v13 @kind object) @signature `Lcom/bumptech/glide/q/j;.a:(Lcom/bumptech/glide/load/engine/u;Ljava/lang/Object;Lcom/bumptech/glide/load/a;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2a9834.  call temp:= `i`(v10) @signature `Lcom/bumptech/glide/q/j;.i:()Z` @kind direct;
  #L2a983a.  v6:= temp;
  #L2a983c.  v0:= `@@com.bumptech.glide.q.j$a.i` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a9840.  v10.`com.bumptech.glide.q.j.v` @type ^`com.bumptech.glide.q.j$a` := v0 @kind object;
  #L2a9844.  v10.`com.bumptech.glide.q.j.r` @type ^`com.bumptech.glide.load.engine.u` := v11 @kind object;
  #L2a9848.  v11:= v10.`com.bumptech.glide.q.j.g` @type ^`com.bumptech.glide.d` @kind object;
  #L2a984c.  call temp:= `getLogLevel`(v11) @signature `Lcom/bumptech/glide/d;.getLogLevel:()I` @kind virtual;
  #L2a9852.  v11:= temp;
  #L2a9854.  v0:= 3I;
  #L2a9856.  if v11 > v0 then goto L2a9908;
  #L2a985a.  v11:= new `java.lang.StringBuilder`;
  #L2a985e.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2a9864.  v0:= "Finished loading " @kind object;
  #L2a9868.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a986e.  call temp:= `getClass`(v12) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2a9874.  v0:= temp @kind object;
  #L2a9876.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L2a987c.  v0:= temp @kind object;
  #L2a987e.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a9884.  v0:= " from " @kind object;
  #L2a9888.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a988e.  call temp:= `append`(v11, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a9894.  v0:= " for " @kind object;
  #L2a9898.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a989e.  v0:= v10.`com.bumptech.glide.q.j.h` @type ^`java.lang.Object` @kind object;
  #L2a98a2.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a98a8.  v0:= " with size [" @kind object;
  #L2a98ac.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a98b2.  v0:= v10.`com.bumptech.glide.q.j.z` @type ^`int`;
  #L2a98b6.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a98bc.  v0:= "x" @kind object;
  #L2a98c0.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a98c6.  v0:= v10.`com.bumptech.glide.q.j.A` @type ^`int`;
  #L2a98ca.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a98d0.  v0:= "] in " @kind object;
  #L2a98d4.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a98da.  v0:= v10.`com.bumptech.glide.q.j.t` @type ^`long` @kind wide;
  #L2a98de.  call temp:= `getElapsedMillis`(v0) @signature `Lcom/bumptech/glide/s/f;.getElapsedMillis:(J)D` @kind static;
  #L2a98e4.  v0:= temp @kind wide;
  #L2a98e6.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a98ec.  v0:= " ms" @kind object;
  #L2a98f0.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a98f6.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a98fc.  v11:= temp @kind object;
  #L2a98fe.  v0:= "Glide" @kind object;
  #L2a9902.  call temp:= `d`(v0, v11) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2a9908.  v11:= 1I;
  #L2a990a.  v10.`com.bumptech.glide.q.j.B` @type ^`boolean` := v11 @kind boolean;
  #L2a990e.  v7:= 0I;
  #L2a9910.  v0:= v10.`com.bumptech.glide.q.j.o` @type ^`java.util.List` @kind object;
  #L2a9914.  if v0 == 0 then goto L2a9958;
  #L2a9918.  v0:= v10.`com.bumptech.glide.q.j.o` @type ^`java.util.List` @kind object;
  #L2a991c.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2a9922.  v8:= temp @kind object;
  #L2a9924.  v9:= 0I;
  #L2a9926.  call temp:= `hasNext`(v8) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2a992c.  v0:= temp;
  #L2a992e.  if v0 == 0 then goto L2a995a;
  #L2a9932.  call temp:= `next`(v8) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2a9938.  v0:= temp @kind object;
  #L2a993a.  v0:= (`com.bumptech.glide.q.g`) v0 @kind object;
  #L2a993e.  v2:= v10.`com.bumptech.glide.q.j.h` @type ^`java.lang.Object` @kind object;
  #L2a9942.  v3:= v10.`com.bumptech.glide.q.j.n` @type ^`com.bumptech.glide.q.l.h` @kind object;
  #L2a9946.  v1:= v12 @kind object;
  #L2a9948.  v4:= v13 @kind object;
  #L2a994a.  v5:= v6;
  #L2a994c.  call temp:= `onResourceReady`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/q/g;.onResourceReady:(Ljava/lang/Object;Ljava/lang/Object;Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/load/a;Z)Z` @kind interface;
  #L2a9952.  v0:= temp;
  #L2a9954.  v9:= v9 ^| v0 @kind int;
  #L2a9956.  goto L2a9926;
  #L2a9958.  v9:= 0I;
  #L2a995a.  v0:= v10.`com.bumptech.glide.q.j.d` @type ^`com.bumptech.glide.q.g` @kind object;
  #L2a995e.  if v0 == 0 then goto L2a9982;
  #L2a9962.  v0:= v10.`com.bumptech.glide.q.j.d` @type ^`com.bumptech.glide.q.g` @kind object;
  #L2a9966.  v2:= v10.`com.bumptech.glide.q.j.h` @type ^`java.lang.Object` @kind object;
  #L2a996a.  v3:= v10.`com.bumptech.glide.q.j.n` @type ^`com.bumptech.glide.q.l.h` @kind object;
  #L2a996e.  v1:= v12 @kind object;
  #L2a9970.  v4:= v13 @kind object;
  #L2a9972.  v5:= v6;
  #L2a9974.  call temp:= `onResourceReady`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/q/g;.onResourceReady:(Ljava/lang/Object;Ljava/lang/Object;Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/load/a;Z)Z` @kind interface;
  #L2a997a.  v0:= temp;
  #L2a997c.  if v0 == 0 then goto L2a9982;
  #L2a9980.  goto L2a9984;
  #L2a9982.  v11:= 0I;
  #L2a9984.  v11:= v11 ^| v9 @kind int;
  #L2a9986.  if v11 != 0 then goto L2a99a0;
  #L2a998a.  v11:= v10.`com.bumptech.glide.q.j.p` @type ^`com.bumptech.glide.q.m.c` @kind object;
  #L2a998e.  call temp:= `build`(v11, v13, v6) @signature `Lcom/bumptech/glide/q/m/c;.build:(Lcom/bumptech/glide/load/a;Z)Lcom/bumptech/glide/q/m/b;` @kind interface;
  #L2a9994.  v11:= temp @kind object;
  #L2a9996.  v13:= v10.`com.bumptech.glide.q.j.n` @type ^`com.bumptech.glide.q.l.h` @kind object;
  #L2a999a.  call `onResourceReady`(v13, v12, v11) @signature `Lcom/bumptech/glide/q/l/h;.onResourceReady:(Ljava/lang/Object;Lcom/bumptech/glide/q/m/b;)V` @kind interface;
  #L2a99a0.  v10.`com.bumptech.glide.q.j.B` @type ^`boolean` := v7 @kind boolean;
  #L2a99a4.  call `k`(v10) @signature `Lcom/bumptech/glide/q/j;.k:()V` @kind direct;
  #L2a99aa.  return @kind void;
  #L2a99ac.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a99ae.  v10.`com.bumptech.glide.q.j.B` @type ^`boolean` := v7 @kind boolean;
  #L2a99b2.  throw v11;
  catch `java.lang.Throwable` @[L2a9910..L2a99a0] goto L2a99ac;
}
procedure `void` `a`(`com.bumptech.glide.q.j` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/bumptech/glide/q/j;.a:(Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2a9428.  v0:= new `java.lang.StringBuilder`;
  #L2a942c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2a9432.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a9438.  v2:= " this: " @kind object;
  #L2a943c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a9442.  v2:= v1.`com.bumptech.glide.q.j.a` @type ^`java.lang.String` @kind object;
  #L2a9446.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a944c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a9452.  v2:= temp @kind object;
  #L2a9454.  v0:= "Request" @kind object;
  #L2a9458.  call temp:= `v`(v0, v2) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2a945e.  return @kind void;
}
procedure `boolean` `b`(`com.bumptech.glide.q.j` v1 @kind this) @signature `Lcom/bumptech/glide/q/j;.b:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2a8d08.  v0:= v1.`com.bumptech.glide.q.j.e` @type ^`com.bumptech.glide.q.e` @kind object;
  #L2a8d0c.  if v0 == 0 then goto L2a8d22;
  #L2a8d10.  call temp:= `canNotifyCleared`(v0, v1) @signature `Lcom/bumptech/glide/q/e;.canNotifyCleared:(Lcom/bumptech/glide/q/d;)Z` @kind interface;
  #L2a8d16.  v0:= temp;
  #L2a8d18.  if v0 == 0 then goto L2a8d1e;
  #L2a8d1c.  goto L2a8d22;
  #L2a8d1e.  v0:= 0I;
  #L2a8d20.  goto L2a8d24;
  #L2a8d22.  v0:= 1I;
  #L2a8d24.  return v0;
}
procedure `boolean` `c`(`com.bumptech.glide.q.j` v1 @kind this) @signature `Lcom/bumptech/glide/q/j;.c:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2a8d38.  v0:= v1.`com.bumptech.glide.q.j.e` @type ^`com.bumptech.glide.q.e` @kind object;
  #L2a8d3c.  if v0 == 0 then goto L2a8d52;
  #L2a8d40.  call temp:= `canNotifyStatusChanged`(v0, v1) @signature `Lcom/bumptech/glide/q/e;.canNotifyStatusChanged:(Lcom/bumptech/glide/q/d;)Z` @kind interface;
  #L2a8d46.  v0:= temp;
  #L2a8d48.  if v0 == 0 then goto L2a8d4e;
  #L2a8d4c.  goto L2a8d52;
  #L2a8d4e.  v0:= 0I;
  #L2a8d50.  goto L2a8d54;
  #L2a8d52.  v0:= 1I;
  #L2a8d54.  return v0;
}
procedure `boolean` `d`(`com.bumptech.glide.q.j` v1 @kind this) @signature `Lcom/bumptech/glide/q/j;.d:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2a8d68.  v0:= v1.`com.bumptech.glide.q.j.e` @type ^`com.bumptech.glide.q.e` @kind object;
  #L2a8d6c.  if v0 == 0 then goto L2a8d82;
  #L2a8d70.  call temp:= `canSetImage`(v0, v1) @signature `Lcom/bumptech/glide/q/e;.canSetImage:(Lcom/bumptech/glide/q/d;)Z` @kind interface;
  #L2a8d76.  v0:= temp;
  #L2a8d78.  if v0 == 0 then goto L2a8d7e;
  #L2a8d7c.  goto L2a8d82;
  #L2a8d7e.  v0:= 0I;
  #L2a8d80.  goto L2a8d84;
  #L2a8d82.  v0:= 1I;
  #L2a8d84.  return v0;
}
procedure `void` `e`(`com.bumptech.glide.q.j` v1 @kind this) @signature `Lcom/bumptech/glide/q/j;.e:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2a9344.  call `a`(v1) @signature `Lcom/bumptech/glide/q/j;.a:()V` @kind direct;
  #L2a934a.  v0:= v1.`com.bumptech.glide.q.j.b` @type ^`com.bumptech.glide.s.l.c` @kind object;
  #L2a934e.  call `throwIfRecycled`(v0) @signature `Lcom/bumptech/glide/s/l/c;.throwIfRecycled:()V` @kind virtual;
  #L2a9354.  v0:= v1.`com.bumptech.glide.q.j.n` @type ^`com.bumptech.glide.q.l.h` @kind object;
  #L2a9358.  call `removeCallback`(v0, v1) @signature `Lcom/bumptech/glide/q/l/h;.removeCallback:(Lcom/bumptech/glide/q/l/g;)V` @kind interface;
  #L2a935e.  v0:= v1.`com.bumptech.glide.q.j.s` @type ^`com.bumptech.glide.load.engine.k$d` @kind object;
  #L2a9362.  if v0 == 0 then goto L2a9372;
  #L2a9366.  call `cancel`(v0) @signature `Lcom/bumptech/glide/load/engine/k$d;.cancel:()V` @kind virtual;
  #L2a936c.  v0:= 0I;
  #L2a936e.  v1.`com.bumptech.glide.q.j.s` @type ^`com.bumptech.glide.load.engine.k$d` := v0 @kind object;
  #L2a9372.  return @kind void;
}
procedure `android.graphics.drawable.Drawable` `f`(`com.bumptech.glide.q.j` v1 @kind this) @signature `Lcom/bumptech/glide/q/j;.f:()Landroid/graphics/drawable/Drawable;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2a8ba0.  v0:= v1.`com.bumptech.glide.q.j.w` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L2a8ba4.  if v0 != 0 then goto L2a8be8;
  #L2a8ba8.  v0:= v1.`com.bumptech.glide.q.j.j` @type ^`com.bumptech.glide.q.a` @kind object;
  #L2a8bac.  call temp:= `getErrorPlaceholder`(v0) @signature `Lcom/bumptech/glide/q/a;.getErrorPlaceholder:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L2a8bb2.  v0:= temp @kind object;
  #L2a8bb4.  v1.`com.bumptech.glide.q.j.w` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L2a8bb8.  v0:= v1.`com.bumptech.glide.q.j.w` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L2a8bbc.  if v0 != 0 then goto L2a8be8;
  #L2a8bc0.  v0:= v1.`com.bumptech.glide.q.j.j` @type ^`com.bumptech.glide.q.a` @kind object;
  #L2a8bc4.  call temp:= `getErrorId`(v0) @signature `Lcom/bumptech/glide/q/a;.getErrorId:()I` @kind virtual;
  #L2a8bca.  v0:= temp;
  #L2a8bcc.  if v0 <= 0 then goto L2a8be8;
  #L2a8bd0.  v0:= v1.`com.bumptech.glide.q.j.j` @type ^`com.bumptech.glide.q.a` @kind object;
  #L2a8bd4.  call temp:= `getErrorId`(v0) @signature `Lcom/bumptech/glide/q/a;.getErrorId:()I` @kind virtual;
  #L2a8bda.  v0:= temp;
  #L2a8bdc.  call temp:= `a`(v1, v0) @signature `Lcom/bumptech/glide/q/j;.a:(I)Landroid/graphics/drawable/Drawable;` @kind direct;
  #L2a8be2.  v0:= temp @kind object;
  #L2a8be4.  v1.`com.bumptech.glide.q.j.w` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L2a8be8.  v0:= v1.`com.bumptech.glide.q.j.w` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L2a8bec.  return v0 @kind object;
}
procedure `android.graphics.drawable.Drawable` `g`(`com.bumptech.glide.q.j` v1 @kind this) @signature `Lcom/bumptech/glide/q/j;.g:()Landroid/graphics/drawable/Drawable;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2a8c00.  v0:= v1.`com.bumptech.glide.q.j.y` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L2a8c04.  if v0 != 0 then goto L2a8c48;
  #L2a8c08.  v0:= v1.`com.bumptech.glide.q.j.j` @type ^`com.bumptech.glide.q.a` @kind object;
  #L2a8c0c.  call temp:= `getFallbackDrawable`(v0) @signature `Lcom/bumptech/glide/q/a;.getFallbackDrawable:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L2a8c12.  v0:= temp @kind object;
  #L2a8c14.  v1.`com.bumptech.glide.q.j.y` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L2a8c18.  v0:= v1.`com.bumptech.glide.q.j.y` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L2a8c1c.  if v0 != 0 then goto L2a8c48;
  #L2a8c20.  v0:= v1.`com.bumptech.glide.q.j.j` @type ^`com.bumptech.glide.q.a` @kind object;
  #L2a8c24.  call temp:= `getFallbackId`(v0) @signature `Lcom/bumptech/glide/q/a;.getFallbackId:()I` @kind virtual;
  #L2a8c2a.  v0:= temp;
  #L2a8c2c.  if v0 <= 0 then goto L2a8c48;
  #L2a8c30.  v0:= v1.`com.bumptech.glide.q.j.j` @type ^`com.bumptech.glide.q.a` @kind object;
  #L2a8c34.  call temp:= `getFallbackId`(v0) @signature `Lcom/bumptech/glide/q/a;.getFallbackId:()I` @kind virtual;
  #L2a8c3a.  v0:= temp;
  #L2a8c3c.  call temp:= `a`(v1, v0) @signature `Lcom/bumptech/glide/q/j;.a:(I)Landroid/graphics/drawable/Drawable;` @kind direct;
  #L2a8c42.  v0:= temp @kind object;
  #L2a8c44.  v1.`com.bumptech.glide.q.j.y` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L2a8c48.  v0:= v1.`com.bumptech.glide.q.j.y` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L2a8c4c.  return v0 @kind object;
}
procedure `android.graphics.drawable.Drawable` `h`(`com.bumptech.glide.q.j` v1 @kind this) @signature `Lcom/bumptech/glide/q/j;.h:()Landroid/graphics/drawable/Drawable;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2a8c60.  v0:= v1.`com.bumptech.glide.q.j.x` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L2a8c64.  if v0 != 0 then goto L2a8ca8;
  #L2a8c68.  v0:= v1.`com.bumptech.glide.q.j.j` @type ^`com.bumptech.glide.q.a` @kind object;
  #L2a8c6c.  call temp:= `getPlaceholderDrawable`(v0) @signature `Lcom/bumptech/glide/q/a;.getPlaceholderDrawable:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L2a8c72.  v0:= temp @kind object;
  #L2a8c74.  v1.`com.bumptech.glide.q.j.x` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L2a8c78.  v0:= v1.`com.bumptech.glide.q.j.x` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L2a8c7c.  if v0 != 0 then goto L2a8ca8;
  #L2a8c80.  v0:= v1.`com.bumptech.glide.q.j.j` @type ^`com.bumptech.glide.q.a` @kind object;
  #L2a8c84.  call temp:= `getPlaceholderId`(v0) @signature `Lcom/bumptech/glide/q/a;.getPlaceholderId:()I` @kind virtual;
  #L2a8c8a.  v0:= temp;
  #L2a8c8c.  if v0 <= 0 then goto L2a8ca8;
  #L2a8c90.  v0:= v1.`com.bumptech.glide.q.j.j` @type ^`com.bumptech.glide.q.a` @kind object;
  #L2a8c94.  call temp:= `getPlaceholderId`(v0) @signature `Lcom/bumptech/glide/q/a;.getPlaceholderId:()I` @kind virtual;
  #L2a8c9a.  v0:= temp;
  #L2a8c9c.  call temp:= `a`(v1, v0) @signature `Lcom/bumptech/glide/q/j;.a:(I)Landroid/graphics/drawable/Drawable;` @kind direct;
  #L2a8ca2.  v0:= temp @kind object;
  #L2a8ca4.  v1.`com.bumptech.glide.q.j.x` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L2a8ca8.  v0:= v1.`com.bumptech.glide.q.j.x` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L2a8cac.  return v0 @kind object;
}
procedure `boolean` `i`(`com.bumptech.glide.q.j` v1 @kind this) @signature `Lcom/bumptech/glide/q/j;.i:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2a8f68.  v0:= v1.`com.bumptech.glide.q.j.e` @type ^`com.bumptech.glide.q.e` @kind object;
  #L2a8f6c.  if v0 == 0 then goto L2a8f8a;
  #L2a8f70.  call temp:= `getRoot`(v0) @signature `Lcom/bumptech/glide/q/e;.getRoot:()Lcom/bumptech/glide/q/e;` @kind interface;
  #L2a8f76.  v0:= temp @kind object;
  #L2a8f78.  call temp:= `isAnyResourceSet`(v0) @signature `Lcom/bumptech/glide/q/e;.isAnyResourceSet:()Z` @kind interface;
  #L2a8f7e.  v0:= temp;
  #L2a8f80.  if v0 != 0 then goto L2a8f86;
  #L2a8f84.  goto L2a8f8a;
  #L2a8f86.  v0:= 0I;
  #L2a8f88.  goto L2a8f8c;
  #L2a8f8a.  v0:= 1I;
  #L2a8f8c.  return v0;
}
procedure `void` `j`(`com.bumptech.glide.q.j` v1 @kind this) @signature `Lcom/bumptech/glide/q/j;.j:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2a9470.  v0:= v1.`com.bumptech.glide.q.j.e` @type ^`com.bumptech.glide.q.e` @kind object;
  #L2a9474.  if v0 == 0 then goto L2a947e;
  #L2a9478.  call `onRequestFailed`(v0, v1) @signature `Lcom/bumptech/glide/q/e;.onRequestFailed:(Lcom/bumptech/glide/q/d;)V` @kind interface;
  #L2a947e.  return @kind void;
}
procedure `void` `k`(`com.bumptech.glide.q.j` v1 @kind this) @signature `Lcom/bumptech/glide/q/j;.k:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2a9490.  v0:= v1.`com.bumptech.glide.q.j.e` @type ^`com.bumptech.glide.q.e` @kind object;
  #L2a9494.  if v0 == 0 then goto L2a949e;
  #L2a9498.  call `onRequestSuccess`(v0, v1) @signature `Lcom/bumptech/glide/q/e;.onRequestSuccess:(Lcom/bumptech/glide/q/d;)V` @kind interface;
  #L2a949e.  return @kind void;
}
procedure `void` `l`(`com.bumptech.glide.q.j` v2 @kind this) @signature `Lcom/bumptech/glide/q/j;.l:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2a9c50.  call temp:= `c`(v2) @signature `Lcom/bumptech/glide/q/j;.c:()Z` @kind direct;
  #L2a9c56.  v0:= temp;
  #L2a9c58.  if v0 != 0 then goto L2a9c5e;
  #L2a9c5c.  return @kind void;
  #L2a9c5e.  v0:= 0I;
  #L2a9c60.  v1:= v2.`com.bumptech.glide.q.j.h` @type ^`java.lang.Object` @kind object;
  #L2a9c64.  if v1 != 0 then goto L2a9c70;
  #L2a9c68.  call temp:= `g`(v2) @signature `Lcom/bumptech/glide/q/j;.g:()Landroid/graphics/drawable/Drawable;` @kind direct;
  #L2a9c6e.  v0:= temp @kind object;
  #L2a9c70.  if v0 != 0 then goto L2a9c7c;
  #L2a9c74.  call temp:= `f`(v2) @signature `Lcom/bumptech/glide/q/j;.f:()Landroid/graphics/drawable/Drawable;` @kind direct;
  #L2a9c7a.  v0:= temp @kind object;
  #L2a9c7c.  if v0 != 0 then goto L2a9c88;
  #L2a9c80.  call temp:= `h`(v2) @signature `Lcom/bumptech/glide/q/j;.h:()Landroid/graphics/drawable/Drawable;` @kind direct;
  #L2a9c86.  v0:= temp @kind object;
  #L2a9c88.  v1:= v2.`com.bumptech.glide.q.j.n` @type ^`com.bumptech.glide.q.l.h` @kind object;
  #L2a9c8c.  call `onLoadFailed`(v1, v0) @signature `Lcom/bumptech/glide/q/l/h;.onLoadFailed:(Landroid/graphics/drawable/Drawable;)V` @kind interface;
  #L2a9c92.  return @kind void;
}
procedure `com.bumptech.glide.q.j` `obtain`(`android.content.Context` v18 @kind object, `com.bumptech.glide.d` v19 @kind object, `java.lang.Object` v20 @kind object, `java.lang.Object` v21 @kind object, `java.lang.Class` v22 @kind object, `com.bumptech.glide.q.a` v23 @kind object, `int` v24 , `int` v25 , `com.bumptech.glide.g` v26 @kind object, `com.bumptech.glide.q.l.h` v27 @kind object, `com.bumptech.glide.q.g` v28 @kind object, `java.util.List` v29 @kind object, `com.bumptech.glide.q.e` v30 @kind object, `com.bumptech.glide.load.engine.k` v31 @kind object, `com.bumptech.glide.q.m.c` v32 @kind object, `java.util.concurrent.Executor` v33 @kind object) @signature `Lcom/bumptech/glide/q/j;.obtain:(Landroid/content/Context;Lcom/bumptech/glide/d;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;Lcom/bumptech/glide/q/a;IILcom/bumptech/glide/g;Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/q/g;Ljava/util/List;Lcom/bumptech/glide/q/e;Lcom/bumptech/glide/load/engine/k;Lcom/bumptech/glide/q/m/c;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/q/j;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L2a8fec.  v1:= v18 @kind object;
  #L2a8ff0.  v2:= v19 @kind object;
  #L2a8ff4.  v3:= v20 @kind object;
  #L2a8ff8.  v4:= v21 @kind object;
  #L2a8ffc.  v5:= v22 @kind object;
  #L2a9000.  v6:= v23 @kind object;
  #L2a9004.  v7:= v24;
  #L2a9008.  v8:= v25;
  #L2a900c.  v9:= v26 @kind object;
  #L2a9010.  v10:= v27 @kind object;
  #L2a9014.  v11:= v28 @kind object;
  #L2a9018.  v12:= v29 @kind object;
  #L2a901c.  v13:= v30 @kind object;
  #L2a9020.  v14:= v31 @kind object;
  #L2a9024.  v15:= v32 @kind object;
  #L2a9028.  v16:= v33 @kind object;
  #L2a902c.  v17:= new `com.bumptech.glide.q.j`;
  #L2a9030.  v0:= v17 @kind object;
  #L2a9034.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16) @signature `Lcom/bumptech/glide/q/j;.<init>:(Landroid/content/Context;Lcom/bumptech/glide/d;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;Lcom/bumptech/glide/q/a;IILcom/bumptech/glide/g;Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/q/g;Ljava/util/List;Lcom/bumptech/glide/q/e;Lcom/bumptech/glide/load/engine/k;Lcom/bumptech/glide/q/m/c;Ljava/util/concurrent/Executor;)V` @kind direct;
  #L2a903a.  return v17 @kind object;
}
procedure `void` `begin`(`com.bumptech.glide.q.j` v4 @kind this) @signature `Lcom/bumptech/glide/q/j;.begin:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a91c4.  v0:= v4.`com.bumptech.glide.q.j.c` @type ^`java.lang.Object` @kind object;
  #L2a91c8.  @monitorenter v0
  #L2a91ca.  call `a`(v4) @signature `Lcom/bumptech/glide/q/j;.a:()V` @kind direct;
  #L2a91d0.  v1:= v4.`com.bumptech.glide.q.j.b` @type ^`com.bumptech.glide.s.l.c` @kind object;
  #L2a91d4.  call `throwIfRecycled`(v1) @signature `Lcom/bumptech/glide/s/l/c;.throwIfRecycled:()V` @kind virtual;
  #L2a91da.  call temp:= `getLogTime`() @signature `Lcom/bumptech/glide/s/f;.getLogTime:()J` @kind static;
  #L2a91e0.  v1:= temp @kind wide;
  #L2a91e2.  v4.`com.bumptech.glide.q.j.t` @type ^`long` := v1 @kind wide;
  #L2a91e6.  v1:= v4.`com.bumptech.glide.q.j.h` @type ^`java.lang.Object` @kind object;
  #L2a91ea.  if v1 != 0 then goto L2a923c;
  #L2a91ee.  v1:= v4.`com.bumptech.glide.q.j.k` @type ^`int`;
  #L2a91f2.  v2:= v4.`com.bumptech.glide.q.j.l` @type ^`int`;
  #L2a91f6.  call temp:= `isValidDimensions`(v1, v2) @signature `Lcom/bumptech/glide/s/k;.isValidDimensions:(II)Z` @kind static;
  #L2a91fc.  v1:= temp;
  #L2a91fe.  if v1 == 0 then goto L2a9212;
  #L2a9202.  v1:= v4.`com.bumptech.glide.q.j.k` @type ^`int`;
  #L2a9206.  v4.`com.bumptech.glide.q.j.z` @type ^`int` := v1;
  #L2a920a.  v1:= v4.`com.bumptech.glide.q.j.l` @type ^`int`;
  #L2a920e.  v4.`com.bumptech.glide.q.j.A` @type ^`int` := v1;
  #L2a9212.  call temp:= `g`(v4) @signature `Lcom/bumptech/glide/q/j;.g:()Landroid/graphics/drawable/Drawable;` @kind direct;
  #L2a9218.  v1:= temp @kind object;
  #L2a921a.  if v1 != 0 then goto L2a9222;
  #L2a921e.  v1:= 5I;
  #L2a9220.  goto L2a9224;
  #L2a9222.  v1:= 3I;
  #L2a9224.  v2:= new `com.bumptech.glide.load.engine.GlideException`;
  #L2a9228.  v3:= "Received null model" @kind object;
  #L2a922c.  call `<init>`(v2, v3) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a9232.  call `a`(v4, v2, v1) @signature `Lcom/bumptech/glide/q/j;.a:(Lcom/bumptech/glide/load/engine/GlideException;I)V` @kind direct;
  #L2a9238.  @monitorexit v0
  #L2a923a.  return @kind void;
  #L2a923c.  v1:= v4.`com.bumptech.glide.q.j.v` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a9240.  v2:= `@@com.bumptech.glide.q.j$a.g` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a9244.  if v1 == v2 then goto L2a9312;
  #L2a9248.  v1:= v4.`com.bumptech.glide.q.j.v` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a924c.  v2:= `@@com.bumptech.glide.q.j$a.i` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a9250.  if v1 != v2 then goto L2a9266;
  #L2a9254.  v1:= v4.`com.bumptech.glide.q.j.r` @type ^`com.bumptech.glide.load.engine.u` @kind object;
  #L2a9258.  v2:= `@@com.bumptech.glide.load.a.j` @type ^`com.bumptech.glide.load.a` @kind object;
  #L2a925c.  call `onResourceReady`(v4, v1, v2) @signature `Lcom/bumptech/glide/q/j;.onResourceReady:(Lcom/bumptech/glide/load/engine/u;Lcom/bumptech/glide/load/a;)V` @kind virtual;
  #L2a9262.  @monitorexit v0
  #L2a9264.  return @kind void;
  #L2a9266.  v1:= `@@com.bumptech.glide.q.j$a.h` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a926a.  v4.`com.bumptech.glide.q.j.v` @type ^`com.bumptech.glide.q.j$a` := v1 @kind object;
  #L2a926e.  v1:= v4.`com.bumptech.glide.q.j.k` @type ^`int`;
  #L2a9272.  v2:= v4.`com.bumptech.glide.q.j.l` @type ^`int`;
  #L2a9276.  call temp:= `isValidDimensions`(v1, v2) @signature `Lcom/bumptech/glide/s/k;.isValidDimensions:(II)Z` @kind static;
  #L2a927c.  v1:= temp;
  #L2a927e.  if v1 == 0 then goto L2a9292;
  #L2a9282.  v1:= v4.`com.bumptech.glide.q.j.k` @type ^`int`;
  #L2a9286.  v2:= v4.`com.bumptech.glide.q.j.l` @type ^`int`;
  #L2a928a.  call `onSizeReady`(v4, v1, v2) @signature `Lcom/bumptech/glide/q/j;.onSizeReady:(II)V` @kind virtual;
  #L2a9290.  goto L2a929c;
  #L2a9292.  v1:= v4.`com.bumptech.glide.q.j.n` @type ^`com.bumptech.glide.q.l.h` @kind object;
  #L2a9296.  call `getSize`(v1, v4) @signature `Lcom/bumptech/glide/q/l/h;.getSize:(Lcom/bumptech/glide/q/l/g;)V` @kind interface;
  #L2a929c.  v1:= v4.`com.bumptech.glide.q.j.v` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a92a0.  v2:= `@@com.bumptech.glide.q.j$a.g` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a92a4.  if v1 == v2 then goto L2a92b4;
  #L2a92a8.  v1:= v4.`com.bumptech.glide.q.j.v` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a92ac.  v2:= `@@com.bumptech.glide.q.j$a.h` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a92b0.  if v1 != v2 then goto L2a92d2;
  #L2a92b4.  call temp:= `c`(v4) @signature `Lcom/bumptech/glide/q/j;.c:()Z` @kind direct;
  #L2a92ba.  v1:= temp;
  #L2a92bc.  if v1 == 0 then goto L2a92d2;
  #L2a92c0.  v1:= v4.`com.bumptech.glide.q.j.n` @type ^`com.bumptech.glide.q.l.h` @kind object;
  #L2a92c4.  call temp:= `h`(v4) @signature `Lcom/bumptech/glide/q/j;.h:()Landroid/graphics/drawable/Drawable;` @kind direct;
  #L2a92ca.  v2:= temp @kind object;
  #L2a92cc.  call `onLoadStarted`(v1, v2) @signature `Lcom/bumptech/glide/q/l/h;.onLoadStarted:(Landroid/graphics/drawable/Drawable;)V` @kind interface;
  #L2a92d2.  v1:= `@@com.bumptech.glide.q.j.D` @type ^`boolean` @kind boolean;
  #L2a92d6.  if v1 == 0 then goto L2a930e;
  #L2a92da.  v1:= new `java.lang.StringBuilder`;
  #L2a92de.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2a92e4.  v2:= "finished run method in " @kind object;
  #L2a92e8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a92ee.  v2:= v4.`com.bumptech.glide.q.j.t` @type ^`long` @kind wide;
  #L2a92f2.  call temp:= `getElapsedMillis`(v2) @signature `Lcom/bumptech/glide/s/f;.getElapsedMillis:(J)D` @kind static;
  #L2a92f8.  v2:= temp @kind wide;
  #L2a92fa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a9300.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a9306.  v1:= temp @kind object;
  #L2a9308.  call `a`(v4, v1) @signature `Lcom/bumptech/glide/q/j;.a:(Ljava/lang/String;)V` @kind direct;
  #L2a930e.  @monitorexit v0
  #L2a9310.  return @kind void;
  #L2a9312.  v1:= new `java.lang.IllegalArgumentException`;
  #L2a9316.  v2:= "Cannot restart a running request" @kind object;
  #L2a931a.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a9320.  throw v1;
  #L2a9322.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a9324.  @monitorexit v0
  #L2a9326.  throw v1;
  catch `java.lang.Throwable` @[L2a91ca..L2a9326] goto L2a9322;
}
procedure `void` `clear`(`com.bumptech.glide.q.j` v4 @kind this) @signature `Lcom/bumptech/glide/q/j;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a9384.  v0:= v4.`com.bumptech.glide.q.j.c` @type ^`java.lang.Object` @kind object;
  #L2a9388.  @monitorenter v0
  #L2a938a.  call `a`(v4) @signature `Lcom/bumptech/glide/q/j;.a:()V` @kind direct;
  #L2a9390.  v1:= v4.`com.bumptech.glide.q.j.b` @type ^`com.bumptech.glide.s.l.c` @kind object;
  #L2a9394.  call `throwIfRecycled`(v1) @signature `Lcom/bumptech/glide/s/l/c;.throwIfRecycled:()V` @kind virtual;
  #L2a939a.  v1:= v4.`com.bumptech.glide.q.j.v` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a939e.  v2:= `@@com.bumptech.glide.q.j$a.k` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a93a2.  if v1 != v2 then goto L2a93aa;
  #L2a93a6.  @monitorexit v0
  #L2a93a8.  return @kind void;
  #L2a93aa.  call `e`(v4) @signature `Lcom/bumptech/glide/q/j;.e:()V` @kind direct;
  #L2a93b0.  v1:= v4.`com.bumptech.glide.q.j.r` @type ^`com.bumptech.glide.load.engine.u` @kind object;
  #L2a93b4.  v2:= 0I;
  #L2a93b6.  if v1 == 0 then goto L2a93c4;
  #L2a93ba.  v1:= v4.`com.bumptech.glide.q.j.r` @type ^`com.bumptech.glide.load.engine.u` @kind object;
  #L2a93be.  v4.`com.bumptech.glide.q.j.r` @type ^`com.bumptech.glide.load.engine.u` := v2 @kind object;
  #L2a93c2.  goto L2a93c6;
  #L2a93c4.  v1:= v2 @kind object;
  #L2a93c6.  call temp:= `b`(v4) @signature `Lcom/bumptech/glide/q/j;.b:()Z` @kind direct;
  #L2a93cc.  v2:= temp;
  #L2a93ce.  if v2 == 0 then goto L2a93e4;
  #L2a93d2.  v2:= v4.`com.bumptech.glide.q.j.n` @type ^`com.bumptech.glide.q.l.h` @kind object;
  #L2a93d6.  call temp:= `h`(v4) @signature `Lcom/bumptech/glide/q/j;.h:()Landroid/graphics/drawable/Drawable;` @kind direct;
  #L2a93dc.  v3:= temp @kind object;
  #L2a93de.  call `onLoadCleared`(v2, v3) @signature `Lcom/bumptech/glide/q/l/h;.onLoadCleared:(Landroid/graphics/drawable/Drawable;)V` @kind interface;
  #L2a93e4.  v2:= `@@com.bumptech.glide.q.j$a.k` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a93e8.  v4.`com.bumptech.glide.q.j.v` @type ^`com.bumptech.glide.q.j$a` := v2 @kind object;
  #L2a93ec.  @monitorexit v0
  #L2a93ee.  if v1 == 0 then goto L2a93fc;
  #L2a93f2.  v0:= v4.`com.bumptech.glide.q.j.u` @type ^`com.bumptech.glide.load.engine.k` @kind object;
  #L2a93f6.  call `release`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/k;.release:(Lcom/bumptech/glide/load/engine/u;)V` @kind virtual;
  #L2a93fc.  return @kind void;
  #L2a93fe.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a9400.  @monitorexit v0
  #L2a9402.  throw v1;
  catch `java.lang.Throwable` @[L2a938a..L2a93ee] goto L2a93fe;
  catch `java.lang.Throwable` @[L2a9400..L2a9402] goto L2a93fe;
}
procedure `java.lang.Object` `getLock`(`com.bumptech.glide.q.j` v1 @kind this) @signature `Lcom/bumptech/glide/q/j;.getLock:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a9078.  v0:= v1.`com.bumptech.glide.q.j.b` @type ^`com.bumptech.glide.s.l.c` @kind object;
  #L2a907c.  call `throwIfRecycled`(v0) @signature `Lcom/bumptech/glide/s/l/c;.throwIfRecycled:()V` @kind virtual;
  #L2a9082.  v0:= v1.`com.bumptech.glide.q.j.c` @type ^`java.lang.Object` @kind object;
  #L2a9086.  return v0 @kind object;
}
procedure `boolean` `isAnyResourceSet`(`com.bumptech.glide.q.j` v3 @kind this) @signature `Lcom/bumptech/glide/q/j;.isAnyResourceSet:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a8d98.  v0:= v3.`com.bumptech.glide.q.j.c` @type ^`java.lang.Object` @kind object;
  #L2a8d9c.  @monitorenter v0
  #L2a8d9e.  v1:= v3.`com.bumptech.glide.q.j.v` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a8da2.  v2:= `@@com.bumptech.glide.q.j$a.i` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a8da6.  if v1 != v2 then goto L2a8dae;
  #L2a8daa.  v1:= 1I;
  #L2a8dac.  goto L2a8db0;
  #L2a8dae.  v1:= 0I;
  #L2a8db0.  @monitorexit v0
  #L2a8db2.  return v1;
  #L2a8db4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a8db6.  @monitorexit v0
  #L2a8db8.  throw v1;
  catch `java.lang.Throwable` @[L2a8d9e..L2a8db8] goto L2a8db4;
}
procedure `boolean` `isCleared`(`com.bumptech.glide.q.j` v3 @kind this) @signature `Lcom/bumptech/glide/q/j;.isCleared:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a8dd8.  v0:= v3.`com.bumptech.glide.q.j.c` @type ^`java.lang.Object` @kind object;
  #L2a8ddc.  @monitorenter v0
  #L2a8dde.  v1:= v3.`com.bumptech.glide.q.j.v` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a8de2.  v2:= `@@com.bumptech.glide.q.j$a.k` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a8de6.  if v1 != v2 then goto L2a8dee;
  #L2a8dea.  v1:= 1I;
  #L2a8dec.  goto L2a8df0;
  #L2a8dee.  v1:= 0I;
  #L2a8df0.  @monitorexit v0
  #L2a8df2.  return v1;
  #L2a8df4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a8df6.  @monitorexit v0
  #L2a8df8.  throw v1;
  catch `java.lang.Throwable` @[L2a8dde..L2a8df8] goto L2a8df4;
}
procedure `boolean` `isComplete`(`com.bumptech.glide.q.j` v3 @kind this) @signature `Lcom/bumptech/glide/q/j;.isComplete:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a8e18.  v0:= v3.`com.bumptech.glide.q.j.c` @type ^`java.lang.Object` @kind object;
  #L2a8e1c.  @monitorenter v0
  #L2a8e1e.  v1:= v3.`com.bumptech.glide.q.j.v` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a8e22.  v2:= `@@com.bumptech.glide.q.j$a.i` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a8e26.  if v1 != v2 then goto L2a8e2e;
  #L2a8e2a.  v1:= 1I;
  #L2a8e2c.  goto L2a8e30;
  #L2a8e2e.  v1:= 0I;
  #L2a8e30.  @monitorexit v0
  #L2a8e32.  return v1;
  #L2a8e34.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a8e36.  @monitorexit v0
  #L2a8e38.  throw v1;
  catch `java.lang.Throwable` @[L2a8e1e..L2a8e38] goto L2a8e34;
}
procedure `boolean` `isEquivalentTo`(`com.bumptech.glide.q.j` v17 @kind this, `com.bumptech.glide.q.d` v18 @kind object) @signature `Lcom/bumptech/glide/q/j;.isEquivalentTo:(Lcom/bumptech/glide/q/d;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L2a8e58.  v1:= v17 @kind object;
  #L2a8e5c.  v0:= v18 @kind object;
  #L2a8e60.  v2:= instanceof @variable v0 @type ^`com.bumptech.glide.q.j` @kind boolean;
  #L2a8e64.  v3:= 0I;
  #L2a8e66.  if v2 != 0 then goto L2a8e6c;
  #L2a8e6a.  return v3;
  #L2a8e6c.  v2:= v1.`com.bumptech.glide.q.j.c` @type ^`java.lang.Object` @kind object;
  #L2a8e70.  @monitorenter v2
  #L2a8e72.  v4:= v1.`com.bumptech.glide.q.j.k` @type ^`int`;
  #L2a8e76.  v5:= v1.`com.bumptech.glide.q.j.l` @type ^`int`;
  #L2a8e7a.  v6:= v1.`com.bumptech.glide.q.j.h` @type ^`java.lang.Object` @kind object;
  #L2a8e7e.  v7:= v1.`com.bumptech.glide.q.j.i` @type ^`java.lang.Class` @kind object;
  #L2a8e82.  v8:= v1.`com.bumptech.glide.q.j.j` @type ^`com.bumptech.glide.q.a` @kind object;
  #L2a8e86.  v9:= v1.`com.bumptech.glide.q.j.m` @type ^`com.bumptech.glide.g` @kind object;
  #L2a8e8a.  v10:= v1.`com.bumptech.glide.q.j.o` @type ^`java.util.List` @kind object;
  #L2a8e8e.  if v10 == 0 then goto L2a8ea0;
  #L2a8e92.  v10:= v1.`com.bumptech.glide.q.j.o` @type ^`java.util.List` @kind object;
  #L2a8e96.  call temp:= `size`(v10) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2a8e9c.  v10:= temp;
  #L2a8e9e.  goto L2a8ea2;
  #L2a8ea0.  v10:= 0I;
  #L2a8ea2.  @monitorexit v2
  #L2a8ea4.  v0:= (`com.bumptech.glide.q.j`) v0 @kind object;
  #L2a8ea8.  v11:= v0.`com.bumptech.glide.q.j.c` @type ^`java.lang.Object` @kind object;
  #L2a8eac.  @monitorenter v11
  #L2a8eae.  v2:= v0.`com.bumptech.glide.q.j.k` @type ^`int`;
  #L2a8eb2.  v12:= v0.`com.bumptech.glide.q.j.l` @type ^`int`;
  #L2a8eb6.  v13:= v0.`com.bumptech.glide.q.j.h` @type ^`java.lang.Object` @kind object;
  #L2a8eba.  v14:= v0.`com.bumptech.glide.q.j.i` @type ^`java.lang.Class` @kind object;
  #L2a8ebe.  v15:= v0.`com.bumptech.glide.q.j.j` @type ^`com.bumptech.glide.q.a` @kind object;
  #L2a8ec2.  v3:= v0.`com.bumptech.glide.q.j.m` @type ^`com.bumptech.glide.g` @kind object;
  #L2a8ec6.  v1:= v0.`com.bumptech.glide.q.j.o` @type ^`java.util.List` @kind object;
  #L2a8eca.  if v1 == 0 then goto L2a8edc;
  #L2a8ece.  v0:= v0.`com.bumptech.glide.q.j.o` @type ^`java.util.List` @kind object;
  #L2a8ed2.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2a8ed8.  v0:= temp;
  #L2a8eda.  goto L2a8ede;
  #L2a8edc.  v0:= 0I;
  #L2a8ede.  @monitorexit v11
  #L2a8ee0.  if v4 != v2 then goto L2a8f1c;
  #L2a8ee4.  if v5 != v12 then goto L2a8f1c;
  #L2a8ee8.  call temp:= `bothModelsNullEquivalentOrEquals`(v6, v13) @signature `Lcom/bumptech/glide/s/k;.bothModelsNullEquivalentOrEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L2a8eee.  v1:= temp;
  #L2a8ef0.  if v1 == 0 then goto L2a8f1c;
  #L2a8ef4.  call temp:= `equals`(v7, v14) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2a8efa.  v1:= temp;
  #L2a8efc.  if v1 == 0 then goto L2a8f1c;
  #L2a8f00.  call temp:= `equals`(v8, v15) @signature `Lcom/bumptech/glide/q/a;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2a8f06.  v1:= temp;
  #L2a8f08.  if v1 == 0 then goto L2a8f1c;
  #L2a8f0c.  if v9 != v3 then goto L2a8f1c;
  #L2a8f10.  if v10 != v0 then goto L2a8f1c;
  #L2a8f14.  v3:= 1I;
  #L2a8f16.  v16:= 1I;
  #L2a8f1a.  goto L2a8f20;
  #L2a8f1c.  v16:= 0I;
  #L2a8f20.  return v16;
  #L2a8f22.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a8f24.  @monitorexit v11
  #L2a8f26.  throw v0;
  #L2a8f28.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a8f2a.  @monitorexit v2
  #L2a8f2c.  throw v0;
  catch `java.lang.Throwable` @[L2a8e72..L2a8ea4] goto L2a8f28;
  catch `java.lang.Throwable` @[L2a8eae..L2a8ee0] goto L2a8f22;
  catch `java.lang.Throwable` @[L2a8f24..L2a8f26] goto L2a8f22;
  catch `java.lang.Throwable` @[L2a8f2a..L2a8f2c] goto L2a8f28;
}
procedure `boolean` `isRunning`(`com.bumptech.glide.q.j` v3 @kind this) @signature `Lcom/bumptech/glide/q/j;.isRunning:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a8fa0.  v0:= v3.`com.bumptech.glide.q.j.c` @type ^`java.lang.Object` @kind object;
  #L2a8fa4.  @monitorenter v0
  #L2a8fa6.  v1:= v3.`com.bumptech.glide.q.j.v` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a8faa.  v2:= `@@com.bumptech.glide.q.j$a.g` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a8fae.  if v1 == v2 then goto L2a8fc4;
  #L2a8fb2.  v1:= v3.`com.bumptech.glide.q.j.v` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a8fb6.  v2:= `@@com.bumptech.glide.q.j$a.h` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a8fba.  if v1 != v2 then goto L2a8fc0;
  #L2a8fbe.  goto L2a8fc4;
  #L2a8fc0.  v1:= 0I;
  #L2a8fc2.  goto L2a8fc6;
  #L2a8fc4.  v1:= 1I;
  #L2a8fc6.  @monitorexit v0
  #L2a8fc8.  return v1;
  #L2a8fca.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a8fcc.  @monitorexit v0
  #L2a8fce.  throw v1;
  catch `java.lang.Throwable` @[L2a8fa6..L2a8fce] goto L2a8fca;
}
procedure `void` `onLoadFailed`(`com.bumptech.glide.q.j` v1 @kind this, `com.bumptech.glide.load.engine.GlideException` v2 @kind object) @signature `Lcom/bumptech/glide/q/j;.onLoadFailed:(Lcom/bumptech/glide/load/engine/GlideException;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a94b0.  v0:= 5I;
  #L2a94b2.  call `a`(v1, v2, v0) @signature `Lcom/bumptech/glide/q/j;.a:(Lcom/bumptech/glide/load/engine/GlideException;I)V` @kind direct;
  #L2a94b8.  return @kind void;
}
procedure `void` `onResourceReady`(`com.bumptech.glide.q.j` v5 @kind this, `com.bumptech.glide.load.engine.u` v6 @kind object, `com.bumptech.glide.load.a` v7 @kind object) @signature `Lcom/bumptech/glide/q/j;.onResourceReady:(Lcom/bumptech/glide/load/engine/u;Lcom/bumptech/glide/load/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2a9650.  v0:= v5.`com.bumptech.glide.q.j.b` @type ^`com.bumptech.glide.s.l.c` @kind object;
  #L2a9654.  call `throwIfRecycled`(v0) @signature `Lcom/bumptech/glide/s/l/c;.throwIfRecycled:()V` @kind virtual;
  #L2a965a.  v0:= 0I;
  #L2a965c.  v1:= v5.`com.bumptech.glide.q.j.c` @type ^`java.lang.Object` @kind object;
  #L2a9660.  @monitorenter v1
  #L2a9662.  v5.`com.bumptech.glide.q.j.s` @type ^`com.bumptech.glide.load.engine.k$d` := v0 @kind object;
  #L2a9666.  if v6 != 0 then goto L2a96ae;
  #L2a966a.  v6:= new `com.bumptech.glide.load.engine.GlideException`;
  #L2a966e.  v7:= new `java.lang.StringBuilder`;
  #L2a9672.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2a9678.  v2:= "Expected to receive a Resource<R> with an object of " @kind object;
  #L2a967c.  call temp:= `append`(v7, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a9682.  v2:= v5.`com.bumptech.glide.q.j.i` @type ^`java.lang.Class` @kind object;
  #L2a9686.  call temp:= `append`(v7, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a968c.  v2:= " inside, but instead got null." @kind object;
  #L2a9690.  call temp:= `append`(v7, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a9696.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a969c.  v7:= temp @kind object;
  #L2a969e.  call `<init>`(v6, v7) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a96a4.  call `onLoadFailed`(v5, v6) @signature `Lcom/bumptech/glide/q/j;.onLoadFailed:(Lcom/bumptech/glide/load/engine/GlideException;)V` @kind virtual;
  #L2a96aa.  @monitorexit v1
  #L2a96ac.  return @kind void;
  #L2a96ae.  call temp:= `get`(v6) @signature `Lcom/bumptech/glide/load/engine/u;.get:()Ljava/lang/Object;` @kind interface;
  #L2a96b4.  v2:= temp @kind object;
  #L2a96b6.  if v2 == 0 then goto L2a9708;
  #L2a96ba.  v3:= v5.`com.bumptech.glide.q.j.i` @type ^`java.lang.Class` @kind object;
  #L2a96be.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2a96c4.  v4:= temp @kind object;
  #L2a96c6.  call temp:= `isAssignableFrom`(v3, v4) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L2a96cc.  v3:= temp;
  #L2a96ce.  if v3 != 0 then goto L2a96d4;
  #L2a96d2.  goto L2a9708;
  #L2a96d4.  call temp:= `d`(v5) @signature `Lcom/bumptech/glide/q/j;.d:()Z` @kind direct;
  #L2a96da.  v3:= temp;
  #L2a96dc.  if v3 != 0 then goto L2a96fe;
  #L2a96e0.  v5.`com.bumptech.glide.q.j.r` @type ^`com.bumptech.glide.load.engine.u` := v0 @kind object;
  #L2a96e4.  v7:= `@@com.bumptech.glide.q.j$a.i` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a96e8.  v5.`com.bumptech.glide.q.j.v` @type ^`com.bumptech.glide.q.j$a` := v7 @kind object;
  #L2a96ec.  @monitorexit v1
  #L2a96ee.  if v6 == 0 then goto L2a96fc;
  #L2a96f2.  v7:= v5.`com.bumptech.glide.q.j.u` @type ^`com.bumptech.glide.load.engine.k` @kind object;
  #L2a96f6.  call `release`(v7, v6) @signature `Lcom/bumptech/glide/load/engine/k;.release:(Lcom/bumptech/glide/load/engine/u;)V` @kind virtual;
  #L2a96fc.  return @kind void;
  #L2a96fe.  call `a`(v5, v6, v2, v7) @signature `Lcom/bumptech/glide/q/j;.a:(Lcom/bumptech/glide/load/engine/u;Ljava/lang/Object;Lcom/bumptech/glide/load/a;)V` @kind direct;
  #L2a9704.  @monitorexit v1
  #L2a9706.  return @kind void;
  #L2a9708.  v5.`com.bumptech.glide.q.j.r` @type ^`com.bumptech.glide.load.engine.u` := v0 @kind object;
  #L2a970c.  v7:= new `com.bumptech.glide.load.engine.GlideException`;
  #L2a9710.  v0:= new `java.lang.StringBuilder`;
  #L2a9714.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2a971a.  v3:= "Expected to receive an object of " @kind object;
  #L2a971e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a9724.  v3:= v5.`com.bumptech.glide.q.j.i` @type ^`java.lang.Class` @kind object;
  #L2a9728.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a972e.  v3:= " but instead got " @kind object;
  #L2a9732.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a9738.  if v2 == 0 then goto L2a9746;
  #L2a973c.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2a9742.  v3:= temp @kind object;
  #L2a9744.  goto L2a974a;
  #L2a9746.  v3:= "" @kind object;
  #L2a974a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a9750.  v3:= "{" @kind object;
  #L2a9754.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a975a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a9760.  v3:= "} inside Resource{" @kind object;
  #L2a9764.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a976a.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a9770.  v3:= "}." @kind object;
  #L2a9774.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a977a.  if v2 == 0 then goto L2a9784;
  #L2a977e.  v2:= "" @kind object;
  #L2a9782.  goto L2a9788;
  #L2a9784.  v2:= " To indicate failure return a null Resource object, rather than a Resource object containing null data." @kind object;
  #L2a9788.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a978e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a9794.  v0:= temp @kind object;
  #L2a9796.  call `<init>`(v7, v0) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a979c.  call `onLoadFailed`(v5, v7) @signature `Lcom/bumptech/glide/q/j;.onLoadFailed:(Lcom/bumptech/glide/load/engine/GlideException;)V` @kind virtual;
  #L2a97a2.  @monitorexit v1
  #L2a97a4.  if v6 == 0 then goto L2a97b2;
  #L2a97a8.  v7:= v5.`com.bumptech.glide.q.j.u` @type ^`com.bumptech.glide.load.engine.k` @kind object;
  #L2a97ac.  call `release`(v7, v6) @signature `Lcom/bumptech/glide/load/engine/k;.release:(Lcom/bumptech/glide/load/engine/u;)V` @kind virtual;
  #L2a97b2.  return @kind void;
  #L2a97b4.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a97b6.  v7:= v6 @kind object;
  #L2a97b8.  v6:= v0 @kind object;
  #L2a97ba.  @monitorexit v1
  #L2a97bc.  throw v7;
  #L2a97be.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a97c0.  v0:= v6 @kind object;
  #L2a97c2.  goto L2a97ca;
  #L2a97c4.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a97c6.  goto L2a97ba;
  #L2a97c8.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a97ca.  if v0 == 0 then goto L2a97d8;
  #L2a97ce.  v6:= v5.`com.bumptech.glide.q.j.u` @type ^`com.bumptech.glide.load.engine.k` @kind object;
  #L2a97d2.  call `release`(v6, v0) @signature `Lcom/bumptech/glide/load/engine/k;.release:(Lcom/bumptech/glide/load/engine/u;)V` @kind virtual;
  #L2a97d8.  throw v7;
  catch `java.lang.Throwable` @[L2a965c..L2a9662] goto L2a97c8;
  catch `java.lang.Throwable` @[L2a9662..L2a96dc] goto L2a97b4;
  catch `java.lang.Throwable` @[L2a96e0..L2a96ee] goto L2a97c4;
  catch `java.lang.Throwable` @[L2a96fe..L2a9706] goto L2a97b4;
  catch `java.lang.Throwable` @[L2a9708..L2a97a4] goto L2a97c4;
  catch `java.lang.Throwable` @[L2a97ba..L2a97bc] goto L2a97c4;
  catch `java.lang.Throwable` @[L2a97bc..L2a97be] goto L2a97be;
}
procedure `void` `onSizeReady`(`com.bumptech.glide.q.j` v22 @kind this, `int` v23 , `int` v24 ) @signature `Lcom/bumptech/glide/q/j;.onSizeReady:(II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L2a99d0.  v15:= v22 @kind object;
  #L2a99d4.  v0:= v15.`com.bumptech.glide.q.j.b` @type ^`com.bumptech.glide.s.l.c` @kind object;
  #L2a99d8.  call `throwIfRecycled`(v0) @signature `Lcom/bumptech/glide/s/l/c;.throwIfRecycled:()V` @kind virtual;
  #L2a99de.  v14:= v15.`com.bumptech.glide.q.j.c` @type ^`java.lang.Object` @kind object;
  #L2a99e2.  @monitorenter v14
  #L2a99e4.  v0:= `@@com.bumptech.glide.q.j.D` @type ^`boolean` @kind boolean;
  #L2a99e8.  if v0 == 0 then goto L2a9a20;
  #L2a99ec.  v0:= new `java.lang.StringBuilder`;
  #L2a99f0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2a99f6.  v1:= "Got onSizeReady in " @kind object;
  #L2a99fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a9a00.  v1:= v15.`com.bumptech.glide.q.j.t` @type ^`long` @kind wide;
  #L2a9a04.  call temp:= `getElapsedMillis`(v1) @signature `Lcom/bumptech/glide/s/f;.getElapsedMillis:(J)D` @kind static;
  #L2a9a0a.  v1:= temp @kind wide;
  #L2a9a0c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a9a12.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a9a18.  v0:= temp @kind object;
  #L2a9a1a.  call `a`(v15, v0) @signature `Lcom/bumptech/glide/q/j;.a:(Ljava/lang/String;)V` @kind direct;
  #L2a9a20.  v0:= v15.`com.bumptech.glide.q.j.v` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a9a24.  v1:= `@@com.bumptech.glide.q.j$a.h` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a9a28.  if v0 == v1 then goto L2a9a30;
  #L2a9a2c.  @monitorexit v14
  #L2a9a2e.  return @kind void;
  #L2a9a30.  v0:= `@@com.bumptech.glide.q.j$a.g` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a9a34.  v15.`com.bumptech.glide.q.j.v` @type ^`com.bumptech.glide.q.j$a` := v0 @kind object;
  #L2a9a38.  v0:= v15.`com.bumptech.glide.q.j.j` @type ^`com.bumptech.glide.q.a` @kind object;
  #L2a9a3c.  call temp:= `getSizeMultiplier`(v0) @signature `Lcom/bumptech/glide/q/a;.getSizeMultiplier:()F` @kind virtual;
  #L2a9a42.  v0:= temp;
  #L2a9a44.  v1:= v23;
  #L2a9a48.  call temp:= `a`(v1, v0) @signature `Lcom/bumptech/glide/q/j;.a:(IF)I` @kind static;
  #L2a9a4e.  v1:= temp;
  #L2a9a50.  v15.`com.bumptech.glide.q.j.z` @type ^`int` := v1;
  #L2a9a54.  v1:= v24;
  #L2a9a58.  call temp:= `a`(v1, v0) @signature `Lcom/bumptech/glide/q/j;.a:(IF)I` @kind static;
  #L2a9a5e.  v0:= temp;
  #L2a9a60.  v15.`com.bumptech.glide.q.j.A` @type ^`int` := v0;
  #L2a9a64.  v0:= `@@com.bumptech.glide.q.j.D` @type ^`boolean` @kind boolean;
  #L2a9a68.  if v0 == 0 then goto L2a9aa0;
  #L2a9a6c.  v0:= new `java.lang.StringBuilder`;
  #L2a9a70.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2a9a76.  v1:= "finished setup for calling load in " @kind object;
  #L2a9a7a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a9a80.  v1:= v15.`com.bumptech.glide.q.j.t` @type ^`long` @kind wide;
  #L2a9a84.  call temp:= `getElapsedMillis`(v1) @signature `Lcom/bumptech/glide/s/f;.getElapsedMillis:(J)D` @kind static;
  #L2a9a8a.  v1:= temp @kind wide;
  #L2a9a8c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a9a92.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a9a98.  v0:= temp @kind object;
  #L2a9a9a.  call `a`(v15, v0) @signature `Lcom/bumptech/glide/q/j;.a:(Ljava/lang/String;)V` @kind direct;
  #L2a9aa0.  v1:= v15.`com.bumptech.glide.q.j.u` @type ^`com.bumptech.glide.load.engine.k` @kind object;
  #L2a9aa4.  v2:= v15.`com.bumptech.glide.q.j.g` @type ^`com.bumptech.glide.d` @kind object;
  #L2a9aa8.  v3:= v15.`com.bumptech.glide.q.j.h` @type ^`java.lang.Object` @kind object;
  #L2a9aac.  v0:= v15.`com.bumptech.glide.q.j.j` @type ^`com.bumptech.glide.q.a` @kind object;
  #L2a9ab0.  call temp:= `getSignature`(v0) @signature `Lcom/bumptech/glide/q/a;.getSignature:()Lcom/bumptech/glide/load/f;` @kind virtual;
  #L2a9ab6.  v4:= temp @kind object;
  #L2a9ab8.  v5:= v15.`com.bumptech.glide.q.j.z` @type ^`int`;
  #L2a9abc.  v6:= v15.`com.bumptech.glide.q.j.A` @type ^`int`;
  #L2a9ac0.  v0:= v15.`com.bumptech.glide.q.j.j` @type ^`com.bumptech.glide.q.a` @kind object;
  #L2a9ac4.  call temp:= `getResourceClass`(v0) @signature `Lcom/bumptech/glide/q/a;.getResourceClass:()Ljava/lang/Class;` @kind virtual;
  #L2a9aca.  v7:= temp @kind object;
  #L2a9acc.  v8:= v15.`com.bumptech.glide.q.j.i` @type ^`java.lang.Class` @kind object;
  #L2a9ad0.  v9:= v15.`com.bumptech.glide.q.j.m` @type ^`com.bumptech.glide.g` @kind object;
  #L2a9ad4.  v0:= v15.`com.bumptech.glide.q.j.j` @type ^`com.bumptech.glide.q.a` @kind object;
  #L2a9ad8.  call temp:= `getDiskCacheStrategy`(v0) @signature `Lcom/bumptech/glide/q/a;.getDiskCacheStrategy:()Lcom/bumptech/glide/load/engine/j;` @kind virtual;
  #L2a9ade.  v10:= temp @kind object;
  #L2a9ae0.  v0:= v15.`com.bumptech.glide.q.j.j` @type ^`com.bumptech.glide.q.a` @kind object;
  #L2a9ae4.  call temp:= `getTransformations`(v0) @signature `Lcom/bumptech/glide/q/a;.getTransformations:()Ljava/util/Map;` @kind virtual;
  #L2a9aea.  v11:= temp @kind object;
  #L2a9aec.  v0:= v15.`com.bumptech.glide.q.j.j` @type ^`com.bumptech.glide.q.a` @kind object;
  #L2a9af0.  call temp:= `isTransformationRequired`(v0) @signature `Lcom/bumptech/glide/q/a;.isTransformationRequired:()Z` @kind virtual;
  #L2a9af6.  v12:= temp;
  #L2a9af8.  v0:= v15.`com.bumptech.glide.q.j.j` @type ^`com.bumptech.glide.q.a` @kind object;
  #L2a9afc.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/q/a;.a:()Z` @kind virtual;
  #L2a9b02.  v13:= temp;
  #L2a9b04.  v0:= v15.`com.bumptech.glide.q.j.j` @type ^`com.bumptech.glide.q.a` @kind object;
  #L2a9b08.  call temp:= `getOptions`(v0) @signature `Lcom/bumptech/glide/q/a;.getOptions:()Lcom/bumptech/glide/load/h;` @kind virtual;
  #L2a9b0e.  v0:= temp @kind object;
  #L2a9b10.  v23:= v0 @kind object;
  #L2a9b14.  v0:= v15.`com.bumptech.glide.q.j.j` @type ^`com.bumptech.glide.q.a` @kind object;
  #L2a9b18.  call temp:= `isMemoryCacheable`(v0) @signature `Lcom/bumptech/glide/q/a;.isMemoryCacheable:()Z` @kind virtual;
  #L2a9b1e.  v0:= temp;
  #L2a9b20.  v24:= v0;
  #L2a9b24.  v0:= v15.`com.bumptech.glide.q.j.j` @type ^`com.bumptech.glide.q.a` @kind object;
  #L2a9b28.  call temp:= `getUseUnlimitedSourceGeneratorsPool`(v0) @signature `Lcom/bumptech/glide/q/a;.getUseUnlimitedSourceGeneratorsPool:()Z` @kind virtual;
  #L2a9b2e.  v16:= temp;
  #L2a9b30.  v0:= v15.`com.bumptech.glide.q.j.j` @type ^`com.bumptech.glide.q.a` @kind object;
  #L2a9b34.  call temp:= `getUseAnimationPool`(v0) @signature `Lcom/bumptech/glide/q/a;.getUseAnimationPool:()Z` @kind virtual;
  #L2a9b3a.  v17:= temp;
  #L2a9b3c.  v0:= v15.`com.bumptech.glide.q.j.j` @type ^`com.bumptech.glide.q.a` @kind object;
  #L2a9b40.  call temp:= `getOnlyRetrieveFromCache`(v0) @signature `Lcom/bumptech/glide/q/a;.getOnlyRetrieveFromCache:()Z` @kind virtual;
  #L2a9b46.  v18:= temp;
  #L2a9b48.  v0:= v15.`com.bumptech.glide.q.j.q` @type ^`java.util.concurrent.Executor` @kind object;
  #L2a9b4c.  v21:= v14 @kind object;
  #L2a9b50.  v14:= v23 @kind object;
  #L2a9b54.  v15:= v24;
  #L2a9b58.  v19:= v22 @kind object;
  #L2a9b5c.  v20:= v0 @kind object;
  #L2a9b60.  call temp:= `load`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20) @signature `Lcom/bumptech/glide/load/engine/k;.load:(Lcom/bumptech/glide/d;Ljava/lang/Object;Lcom/bumptech/glide/load/f;IILjava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/g;Lcom/bumptech/glide/load/engine/j;Ljava/util/Map;ZZLcom/bumptech/glide/load/h;ZZZZLcom/bumptech/glide/q/i;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/load/engine/k$d;` @kind virtual;
  #L2a9b66.  v0:= temp @kind object;
  #L2a9b68.  v1:= v22 @kind object;
  #L2a9b6c.  v1.`com.bumptech.glide.q.j.s` @type ^`com.bumptech.glide.load.engine.k$d` := v0 @kind object;
  #L2a9b70.  v0:= v1.`com.bumptech.glide.q.j.v` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a9b74.  v2:= `@@com.bumptech.glide.q.j$a.g` @type ^`com.bumptech.glide.q.j$a` @kind object;
  #L2a9b78.  if v0 == v2 then goto L2a9b82;
  #L2a9b7c.  v0:= 0I;
  #L2a9b7e.  v1.`com.bumptech.glide.q.j.s` @type ^`com.bumptech.glide.load.engine.k$d` := v0 @kind object;
  #L2a9b82.  v0:= `@@com.bumptech.glide.q.j.D` @type ^`boolean` @kind boolean;
  #L2a9b86.  if v0 == 0 then goto L2a9bbe;
  #L2a9b8a.  v0:= new `java.lang.StringBuilder`;
  #L2a9b8e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2a9b94.  v2:= "finished onSizeReady in " @kind object;
  #L2a9b98.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a9b9e.  v2:= v1.`com.bumptech.glide.q.j.t` @type ^`long` @kind wide;
  #L2a9ba2.  call temp:= `getElapsedMillis`(v2) @signature `Lcom/bumptech/glide/s/f;.getElapsedMillis:(J)D` @kind static;
  #L2a9ba8.  v2:= temp @kind wide;
  #L2a9baa.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a9bb0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a9bb6.  v0:= temp @kind object;
  #L2a9bb8.  call `a`(v1, v0) @signature `Lcom/bumptech/glide/q/j;.a:(Ljava/lang/String;)V` @kind direct;
  #L2a9bbe.  @monitorexit v21
  #L2a9bc0.  return @kind void;
  #L2a9bc2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a9bc4.  v1:= v22 @kind object;
  #L2a9bc8.  goto L2a9bd2;
  #L2a9bca.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a9bcc.  v21:= v14 @kind object;
  #L2a9bd0.  v1:= v15 @kind object;
  #L2a9bd2.  @monitorexit v21
  #L2a9bd4.  throw v0;
  #L2a9bd6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a9bd8.  goto L2a9bd2;
  catch `java.lang.Throwable` @[L2a99e4..L2a9b4c] goto L2a9bca;
  catch `java.lang.Throwable` @[L2a9b60..L2a9b68] goto L2a9bc2;
  catch `java.lang.Throwable` @[L2a9b6c..L2a9bd4] goto L2a9bd6;
}
procedure `void` `pause`(`com.bumptech.glide.q.j` v2 @kind this) @signature `Lcom/bumptech/glide/q/j;.pause:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a9c10.  v0:= v2.`com.bumptech.glide.q.j.c` @type ^`java.lang.Object` @kind object;
  #L2a9c14.  @monitorenter v0
  #L2a9c16.  call temp:= `isRunning`(v2) @signature `Lcom/bumptech/glide/q/j;.isRunning:()Z` @kind virtual;
  #L2a9c1c.  v1:= temp;
  #L2a9c1e.  if v1 == 0 then goto L2a9c28;
  #L2a9c22.  call `clear`(v2) @signature `Lcom/bumptech/glide/q/j;.clear:()V` @kind virtual;
  #L2a9c28.  @monitorexit v0
  #L2a9c2a.  return @kind void;
  #L2a9c2c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a9c2e.  @monitorexit v0
  #L2a9c30.  throw v1;
  catch `java.lang.Throwable` @[L2a9c16..L2a9c30] goto L2a9c2c;
}
