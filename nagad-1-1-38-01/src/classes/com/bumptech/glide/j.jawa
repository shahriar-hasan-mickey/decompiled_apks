record `com.bumptech.glide.j` @kind class @AccessFlag PUBLIC extends `android.content.ComponentCallbacks2` @kind interface, `com.bumptech.glide.n.i` @kind interface, `com.bumptech.glide.f` @kind interface {
  `com.bumptech.glide.b` `com.bumptech.glide.j.f` @AccessFlag PROTECTED_FINAL;
  `android.content.Context` `com.bumptech.glide.j.g` @AccessFlag PROTECTED_FINAL;
  `com.bumptech.glide.n.h` `com.bumptech.glide.j.h` @AccessFlag FINAL;
  `com.bumptech.glide.n.n` `com.bumptech.glide.j.i` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.n.m` `com.bumptech.glide.j.j` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.n.p` `com.bumptech.glide.j.k` @AccessFlag PRIVATE_FINAL;
  `java.lang.Runnable` `com.bumptech.glide.j.l` @AccessFlag PRIVATE_FINAL;
  `android.os.Handler` `com.bumptech.glide.j.m` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.n.c` `com.bumptech.glide.j.n` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.CopyOnWriteArrayList` `com.bumptech.glide.j.o` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.q.h` `com.bumptech.glide.j.p` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.j.q` @AccessFlag PRIVATE;
}
global `com.bumptech.glide.q.h` `@@com.bumptech.glide.j.r` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/j;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L28a5f0.  v0:= constclass @type ^`android.graphics.Bitmap` @kind object;
  #L28a5f4.  call temp:= `decodeTypeOf`(v0) @signature `Lcom/bumptech/glide/q/h;.decodeTypeOf:(Ljava/lang/Class;)Lcom/bumptech/glide/q/h;` @kind static;
  #L28a5fa.  v0:= temp @kind object;
  #L28a5fc.  call temp:= `lock`(v0) @signature `Lcom/bumptech/glide/q/a;.lock:()Lcom/bumptech/glide/q/a;` @kind virtual;
  #L28a602.  v0:= (`com.bumptech.glide.q.h`) v0 @kind object;
  #L28a606.  `@@com.bumptech.glide.j.r` @type ^`com.bumptech.glide.q.h` := v0 @kind object;
  #L28a60a.  v0:= constclass @type ^`com.bumptech.glide.load.o.g.c` @kind object;
  #L28a60e.  call temp:= `decodeTypeOf`(v0) @signature `Lcom/bumptech/glide/q/h;.decodeTypeOf:(Ljava/lang/Class;)Lcom/bumptech/glide/q/h;` @kind static;
  #L28a614.  v0:= temp @kind object;
  #L28a616.  call temp:= `lock`(v0) @signature `Lcom/bumptech/glide/q/a;.lock:()Lcom/bumptech/glide/q/a;` @kind virtual;
  #L28a61c.  v0:= (`com.bumptech.glide.q.h`) v0 @kind object;
  #L28a620.  v0:= `@@com.bumptech.glide.load.engine.j.b` @type ^`com.bumptech.glide.load.engine.j` @kind object;
  #L28a624.  call temp:= `diskCacheStrategyOf`(v0) @signature `Lcom/bumptech/glide/q/h;.diskCacheStrategyOf:(Lcom/bumptech/glide/load/engine/j;)Lcom/bumptech/glide/q/h;` @kind static;
  #L28a62a.  v0:= temp @kind object;
  #L28a62c.  v1:= `@@com.bumptech.glide.g.i` @type ^`com.bumptech.glide.g` @kind object;
  #L28a630.  call temp:= `priority`(v0, v1) @signature `Lcom/bumptech/glide/q/a;.priority:(Lcom/bumptech/glide/g;)Lcom/bumptech/glide/q/a;` @kind virtual;
  #L28a636.  v0:= temp @kind object;
  #L28a638.  v0:= (`com.bumptech.glide.q.h`) v0 @kind object;
  #L28a63c.  v1:= 1I;
  #L28a63e.  call temp:= `skipMemoryCache`(v0, v1) @signature `Lcom/bumptech/glide/q/a;.skipMemoryCache:(Z)Lcom/bumptech/glide/q/a;` @kind virtual;
  #L28a644.  v0:= temp @kind object;
  #L28a646.  v0:= (`com.bumptech.glide.q.h`) v0 @kind object;
  #L28a64a.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.j` v7 @kind this, `com.bumptech.glide.b` v8 @kind object, `com.bumptech.glide.n.h` v9 @kind object, `com.bumptech.glide.n.m` v10 @kind object, `android.content.Context` v11 @kind object) @signature `Lcom/bumptech/glide/j;.<init>:(Lcom/bumptech/glide/b;Lcom/bumptech/glide/n/h;Lcom/bumptech/glide/n/m;Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L28a65c.  v4:= new `com.bumptech.glide.n.n`;
  #L28a660.  call `<init>`(v4) @signature `Lcom/bumptech/glide/n/n;.<init>:()V` @kind direct;
  #L28a666.  call temp:= `a`(v8) @signature `Lcom/bumptech/glide/b;.a:()Lcom/bumptech/glide/n/d;` @kind virtual;
  #L28a66c.  v5:= temp @kind object;
  #L28a66e.  v0:= v7 @kind object;
  #L28a670.  v1:= v8 @kind object;
  #L28a672.  v2:= v9 @kind object;
  #L28a674.  v3:= v10 @kind object;
  #L28a676.  v6:= v11 @kind object;
  #L28a678.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/bumptech/glide/j;.<init>:(Lcom/bumptech/glide/b;Lcom/bumptech/glide/n/h;Lcom/bumptech/glide/n/m;Lcom/bumptech/glide/n/n;Lcom/bumptech/glide/n/d;Landroid/content/Context;)V` @kind direct;
  #L28a67e.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.j` v2 @kind this, `com.bumptech.glide.b` v3 @kind object, `com.bumptech.glide.n.h` v4 @kind object, `com.bumptech.glide.n.m` v5 @kind object, `com.bumptech.glide.n.n` v6 @kind object, `com.bumptech.glide.n.d` v7 @kind object, `android.content.Context` v8 @kind object) @signature `Lcom/bumptech/glide/j;.<init>:(Lcom/bumptech/glide/b;Lcom/bumptech/glide/n/h;Lcom/bumptech/glide/n/m;Lcom/bumptech/glide/n/n;Lcom/bumptech/glide/n/d;Landroid/content/Context;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L28a690.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28a696.  v0:= new `com.bumptech.glide.n.p`;
  #L28a69a.  call `<init>`(v0) @signature `Lcom/bumptech/glide/n/p;.<init>:()V` @kind direct;
  #L28a6a0.  v2.`com.bumptech.glide.j.k` @type ^`com.bumptech.glide.n.p` := v0 @kind object;
  #L28a6a4.  v0:= new `com.bumptech.glide.j$a`;
  #L28a6a8.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/j$a;.<init>:(Lcom/bumptech/glide/j;)V` @kind direct;
  #L28a6ae.  v2.`com.bumptech.glide.j.l` @type ^`java.lang.Runnable` := v0 @kind object;
  #L28a6b2.  v0:= new `android.os.Handler`;
  #L28a6b6.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L28a6bc.  v1:= temp @kind object;
  #L28a6be.  call `<init>`(v0, v1) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L28a6c4.  v2.`com.bumptech.glide.j.m` @type ^`android.os.Handler` := v0 @kind object;
  #L28a6c8.  v2.`com.bumptech.glide.j.f` @type ^`com.bumptech.glide.b` := v3 @kind object;
  #L28a6cc.  v2.`com.bumptech.glide.j.h` @type ^`com.bumptech.glide.n.h` := v4 @kind object;
  #L28a6d0.  v2.`com.bumptech.glide.j.j` @type ^`com.bumptech.glide.n.m` := v5 @kind object;
  #L28a6d4.  v2.`com.bumptech.glide.j.i` @type ^`com.bumptech.glide.n.n` := v6 @kind object;
  #L28a6d8.  v2.`com.bumptech.glide.j.g` @type ^`android.content.Context` := v8 @kind object;
  #L28a6dc.  call temp:= `getApplicationContext`(v8) @signature `Landroid/content/Context;.getApplicationContext:()Landroid/content/Context;` @kind virtual;
  #L28a6e2.  v5:= temp @kind object;
  #L28a6e4.  v8:= new `com.bumptech.glide.j$b`;
  #L28a6e8.  call `<init>`(v8, v2, v6) @signature `Lcom/bumptech/glide/j$b;.<init>:(Lcom/bumptech/glide/j;Lcom/bumptech/glide/n/n;)V` @kind direct;
  #L28a6ee.  call temp:= `build`(v7, v5, v8) @signature `Lcom/bumptech/glide/n/d;.build:(Landroid/content/Context;Lcom/bumptech/glide/n/c$a;)Lcom/bumptech/glide/n/c;` @kind interface;
  #L28a6f4.  v5:= temp @kind object;
  #L28a6f6.  v2.`com.bumptech.glide.j.n` @type ^`com.bumptech.glide.n.c` := v5 @kind object;
  #L28a6fa.  call temp:= `isOnBackgroundThread`() @signature `Lcom/bumptech/glide/s/k;.isOnBackgroundThread:()Z` @kind static;
  #L28a700.  v5:= temp;
  #L28a702.  if v5 == 0 then goto L28a716;
  #L28a706.  v5:= v2.`com.bumptech.glide.j.m` @type ^`android.os.Handler` @kind object;
  #L28a70a.  v6:= v2.`com.bumptech.glide.j.l` @type ^`java.lang.Runnable` @kind object;
  #L28a70e.  call temp:= `post`(v5, v6) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L28a714.  goto L28a71c;
  #L28a716.  call `addListener`(v4, v2) @signature `Lcom/bumptech/glide/n/h;.addListener:(Lcom/bumptech/glide/n/i;)V` @kind interface;
  #L28a71c.  v5:= v2.`com.bumptech.glide.j.n` @type ^`com.bumptech.glide.n.c` @kind object;
  #L28a720.  call `addListener`(v4, v5) @signature `Lcom/bumptech/glide/n/h;.addListener:(Lcom/bumptech/glide/n/i;)V` @kind interface;
  #L28a726.  v4:= new `java.util.concurrent.CopyOnWriteArrayList`;
  #L28a72a.  call temp:= `b`(v3) @signature `Lcom/bumptech/glide/b;.b:()Lcom/bumptech/glide/d;` @kind virtual;
  #L28a730.  v5:= temp @kind object;
  #L28a732.  call temp:= `getDefaultRequestListeners`(v5) @signature `Lcom/bumptech/glide/d;.getDefaultRequestListeners:()Ljava/util/List;` @kind virtual;
  #L28a738.  v5:= temp @kind object;
  #L28a73a.  call `<init>`(v4, v5) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L28a740.  v2.`com.bumptech.glide.j.o` @type ^`java.util.concurrent.CopyOnWriteArrayList` := v4 @kind object;
  #L28a744.  call temp:= `b`(v3) @signature `Lcom/bumptech/glide/b;.b:()Lcom/bumptech/glide/d;` @kind virtual;
  #L28a74a.  v4:= temp @kind object;
  #L28a74c.  call temp:= `getDefaultRequestOptions`(v4) @signature `Lcom/bumptech/glide/d;.getDefaultRequestOptions:()Lcom/bumptech/glide/q/h;` @kind virtual;
  #L28a752.  v4:= temp @kind object;
  #L28a754.  call `setRequestOptions`(v2, v4) @signature `Lcom/bumptech/glide/j;.setRequestOptions:(Lcom/bumptech/glide/q/h;)V` @kind virtual;
  #L28a75a.  call `a`(v3, v2) @signature `Lcom/bumptech/glide/b;.a:(Lcom/bumptech/glide/j;)V` @kind virtual;
  #L28a760.  return @kind void;
}
procedure `void` `b`(`com.bumptech.glide.j` v2 @kind this, `com.bumptech.glide.q.l.h` v3 @kind object) @signature `Lcom/bumptech/glide/j;.b:(Lcom/bumptech/glide/q/l/h;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L28aa80.  call temp:= `a`(v2, v3) @signature `Lcom/bumptech/glide/j;.a:(Lcom/bumptech/glide/q/l/h;)Z` @kind virtual;
  #L28aa86.  v0:= temp;
  #L28aa88.  call temp:= `getRequest`(v3) @signature `Lcom/bumptech/glide/q/l/h;.getRequest:()Lcom/bumptech/glide/q/d;` @kind interface;
  #L28aa8e.  v1:= temp @kind object;
  #L28aa90.  if v0 != 0 then goto L28aab6;
  #L28aa94.  v0:= v2.`com.bumptech.glide.j.f` @type ^`com.bumptech.glide.b` @kind object;
  #L28aa98.  call temp:= `a`(v0, v3) @signature `Lcom/bumptech/glide/b;.a:(Lcom/bumptech/glide/q/l/h;)Z` @kind virtual;
  #L28aa9e.  v0:= temp;
  #L28aaa0.  if v0 != 0 then goto L28aab6;
  #L28aaa4.  if v1 == 0 then goto L28aab6;
  #L28aaa8.  v0:= 0I;
  #L28aaaa.  call `setRequest`(v3, v0) @signature `Lcom/bumptech/glide/q/l/h;.setRequest:(Lcom/bumptech/glide/q/d;)V` @kind interface;
  #L28aab0.  call `clear`(v1) @signature `Lcom/bumptech/glide/q/d;.clear:()V` @kind interface;
  #L28aab6.  return @kind void;
}
procedure `com.bumptech.glide.k` `a`(`com.bumptech.glide.j` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/bumptech/glide/j;.a:(Ljava/lang/Class;)Lcom/bumptech/glide/k;` @AccessFlag  {
    temp;
    v0;

  #L28a508.  v0:= v1.`com.bumptech.glide.j.f` @type ^`com.bumptech.glide.b` @kind object;
  #L28a50c.  call temp:= `b`(v0) @signature `Lcom/bumptech/glide/b;.b:()Lcom/bumptech/glide/d;` @kind virtual;
  #L28a512.  v0:= temp @kind object;
  #L28a514.  call temp:= `getDefaultTransitionOptions`(v0, v2) @signature `Lcom/bumptech/glide/d;.getDefaultTransitionOptions:(Ljava/lang/Class;)Lcom/bumptech/glide/k;` @kind virtual;
  #L28a51a.  v2:= temp @kind object;
  #L28a51c.  return v2 @kind object;
}
procedure `java.util.List` `a`(`com.bumptech.glide.j` v1 @kind this) @signature `Lcom/bumptech/glide/j;.a:()Ljava/util/List;` @AccessFlag  {
    temp;
    v0;

  #L28a5d8.  v0:= v1.`com.bumptech.glide.j.o` @type ^`java.util.concurrent.CopyOnWriteArrayList` @kind object;
  #L28a5dc.  return v0 @kind object;
}
procedure `void` `a`(`com.bumptech.glide.j` v1 @kind this, `com.bumptech.glide.q.l.h` v2 @kind object, `com.bumptech.glide.q.d` v3 @kind object) @signature `Lcom/bumptech/glide/j;.a:(Lcom/bumptech/glide/q/l/h;Lcom/bumptech/glide/q/d;)V` @AccessFlag  {
    temp;
    v0;

  #L28aa44.  @monitorenter v1
  #L28aa46.  v0:= v1.`com.bumptech.glide.j.k` @type ^`com.bumptech.glide.n.p` @kind object;
  #L28aa4a.  call `track`(v0, v2) @signature `Lcom/bumptech/glide/n/p;.track:(Lcom/bumptech/glide/q/l/h;)V` @kind virtual;
  #L28aa50.  v2:= v1.`com.bumptech.glide.j.i` @type ^`com.bumptech.glide.n.n` @kind object;
  #L28aa54.  call `runRequest`(v2, v3) @signature `Lcom/bumptech/glide/n/n;.runRequest:(Lcom/bumptech/glide/q/d;)V` @kind virtual;
  #L28aa5a.  @monitorexit v1
  #L28aa5c.  return @kind void;
  #L28aa5e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28aa60.  @monitorexit v1
  #L28aa62.  throw v2;
  catch `java.lang.Throwable` @[L28aa46..L28aa5a] goto L28aa5e;
}
procedure `boolean` `a`(`com.bumptech.glide.j` v3 @kind this, `com.bumptech.glide.q.l.h` v4 @kind object) @signature `Lcom/bumptech/glide/j;.a:(Lcom/bumptech/glide/q/l/h;)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L28a3ec.  @monitorenter v3
  #L28a3ee.  call temp:= `getRequest`(v4) @signature `Lcom/bumptech/glide/q/l/h;.getRequest:()Lcom/bumptech/glide/q/d;` @kind interface;
  #L28a3f4.  v0:= temp @kind object;
  #L28a3f6.  v1:= 1I;
  #L28a3f8.  if v0 != 0 then goto L28a400;
  #L28a3fc.  @monitorexit v3
  #L28a3fe.  return v1;
  #L28a400.  v2:= v3.`com.bumptech.glide.j.i` @type ^`com.bumptech.glide.n.n` @kind object;
  #L28a404.  call temp:= `clearAndRemove`(v2, v0) @signature `Lcom/bumptech/glide/n/n;.clearAndRemove:(Lcom/bumptech/glide/q/d;)Z` @kind virtual;
  #L28a40a.  v0:= temp;
  #L28a40c.  if v0 == 0 then goto L28a426;
  #L28a410.  v0:= v3.`com.bumptech.glide.j.k` @type ^`com.bumptech.glide.n.p` @kind object;
  #L28a414.  call `untrack`(v0, v4) @signature `Lcom/bumptech/glide/n/p;.untrack:(Lcom/bumptech/glide/q/l/h;)V` @kind virtual;
  #L28a41a.  v0:= 0I;
  #L28a41c.  call `setRequest`(v4, v0) @signature `Lcom/bumptech/glide/q/l/h;.setRequest:(Lcom/bumptech/glide/q/d;)V` @kind interface;
  #L28a422.  @monitorexit v3
  #L28a424.  return v1;
  #L28a426.  v4:= 0I;
  #L28a428.  @monitorexit v3
  #L28a42a.  return v4;
  #L28a42c.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28a42e.  @monitorexit v3
  #L28a430.  throw v4;
  catch `java.lang.Throwable` @[L28a3ee..L28a3f6] goto L28a42c;
  catch `java.lang.Throwable` @[L28a400..L28a422] goto L28a42c;
}
procedure `com.bumptech.glide.i` `as`(`com.bumptech.glide.j` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lcom/bumptech/glide/j;.as:(Ljava/lang/Class;)Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L28a458.  v0:= new `com.bumptech.glide.i`;
  #L28a45c.  v1:= v3.`com.bumptech.glide.j.f` @type ^`com.bumptech.glide.b` @kind object;
  #L28a460.  v2:= v3.`com.bumptech.glide.j.g` @type ^`android.content.Context` @kind object;
  #L28a464.  call `<init>`(v0, v1, v3, v4, v2) @signature `Lcom/bumptech/glide/i;.<init>:(Lcom/bumptech/glide/b;Lcom/bumptech/glide/j;Ljava/lang/Class;Landroid/content/Context;)V` @kind direct;
  #L28a46a.  return v0 @kind object;
}
procedure `com.bumptech.glide.i` `asBitmap`(`com.bumptech.glide.j` v2 @kind this) @signature `Lcom/bumptech/glide/j;.asBitmap:()Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28a47c.  v0:= constclass @type ^`android.graphics.Bitmap` @kind object;
  #L28a480.  call temp:= `as`(v2, v0) @signature `Lcom/bumptech/glide/j;.as:(Ljava/lang/Class;)Lcom/bumptech/glide/i;` @kind virtual;
  #L28a486.  v0:= temp @kind object;
  #L28a488.  v1:= `@@com.bumptech.glide.j.r` @type ^`com.bumptech.glide.q.h` @kind object;
  #L28a48c.  call temp:= `apply`(v0, v1) @signature `Lcom/bumptech/glide/i;.apply:(Lcom/bumptech/glide/q/a;)Lcom/bumptech/glide/i;` @kind virtual;
  #L28a492.  v0:= temp @kind object;
  #L28a494.  return v0 @kind object;
}
procedure `com.bumptech.glide.i` `asDrawable`(`com.bumptech.glide.j` v1 @kind this) @signature `Lcom/bumptech/glide/j;.asDrawable:()Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28a4a8.  v0:= constclass @type ^`android.graphics.drawable.Drawable` @kind object;
  #L28a4ac.  call temp:= `as`(v1, v0) @signature `Lcom/bumptech/glide/j;.as:(Ljava/lang/Class;)Lcom/bumptech/glide/i;` @kind virtual;
  #L28a4b2.  v0:= temp @kind object;
  #L28a4b4.  return v0 @kind object;
}
procedure `com.bumptech.glide.q.h` `b`(`com.bumptech.glide.j` v1 @kind this) @signature `Lcom/bumptech/glide/j;.b:()Lcom/bumptech/glide/q/h;` @AccessFlag  {
    temp;
    v0;

  #L28a530.  @monitorenter v1
  #L28a532.  v0:= v1.`com.bumptech.glide.j.p` @type ^`com.bumptech.glide.q.h` @kind object;
  #L28a536.  @monitorexit v1
  #L28a538.  return v0 @kind object;
  #L28a53a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28a53c.  @monitorexit v1
  #L28a53e.  throw v0;
  catch `java.lang.Throwable` @[L28a532..L28a536] goto L28a53a;
}
procedure `void` `clear`(`com.bumptech.glide.j` v0 @kind this, `com.bumptech.glide.q.l.h` v1 @kind object) @signature `Lcom/bumptech/glide/j;.clear:(Lcom/bumptech/glide/q/l/h;)V` @AccessFlag PUBLIC {
    temp;

  #L28a774.  if v1 != 0 then goto L28a77a;
  #L28a778.  return @kind void;
  #L28a77a.  call `b`(v0, v1) @signature `Lcom/bumptech/glide/j;.b:(Lcom/bumptech/glide/q/l/h;)V` @kind direct;
  #L28a780.  return @kind void;
}
procedure `com.bumptech.glide.i` `load`(`com.bumptech.glide.j` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/j;.load:(Ljava/lang/Object;)Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28a4c8.  call temp:= `asDrawable`(v1) @signature `Lcom/bumptech/glide/j;.asDrawable:()Lcom/bumptech/glide/i;` @kind virtual;
  #L28a4ce.  v0:= temp @kind object;
  #L28a4d0.  call temp:= `load`(v0, v2) @signature `Lcom/bumptech/glide/i;.load:(Ljava/lang/Object;)Lcom/bumptech/glide/i;` @kind virtual;
  #L28a4d6.  return v0 @kind object;
}
procedure `com.bumptech.glide.i` `load`(`com.bumptech.glide.j` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/bumptech/glide/j;.load:(Ljava/lang/String;)Lcom/bumptech/glide/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28a4e8.  call temp:= `asDrawable`(v1) @signature `Lcom/bumptech/glide/j;.asDrawable:()Lcom/bumptech/glide/i;` @kind virtual;
  #L28a4ee.  v0:= temp @kind object;
  #L28a4f0.  call temp:= `load`(v0, v2) @signature `Lcom/bumptech/glide/i;.load:(Ljava/lang/String;)Lcom/bumptech/glide/i;` @kind virtual;
  #L28a4f6.  return v0 @kind object;
}
procedure `void` `onConfigurationChanged`(`com.bumptech.glide.j` v0 @kind this, `android.content.res.Configuration` v1 @kind object) @signature `Lcom/bumptech/glide/j;.onConfigurationChanged:(Landroid/content/res/Configuration;)V` @AccessFlag PUBLIC {
    temp;

  #L28a794.  return @kind void;
}
procedure `void` `onDestroy`(`com.bumptech.glide.j` v2 @kind this) @signature `Lcom/bumptech/glide/j;.onDestroy:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28a7a8.  @monitorenter v2
  #L28a7aa.  v0:= v2.`com.bumptech.glide.j.k` @type ^`com.bumptech.glide.n.p` @kind object;
  #L28a7ae.  call `onDestroy`(v0) @signature `Lcom/bumptech/glide/n/p;.onDestroy:()V` @kind virtual;
  #L28a7b4.  v0:= v2.`com.bumptech.glide.j.k` @type ^`com.bumptech.glide.n.p` @kind object;
  #L28a7b8.  call temp:= `getAll`(v0) @signature `Lcom/bumptech/glide/n/p;.getAll:()Ljava/util/List;` @kind virtual;
  #L28a7be.  v0:= temp @kind object;
  #L28a7c0.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L28a7c6.  v0:= temp @kind object;
  #L28a7c8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L28a7ce.  v1:= temp;
  #L28a7d0.  if v1 == 0 then goto L28a7e8;
  #L28a7d4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L28a7da.  v1:= temp @kind object;
  #L28a7dc.  v1:= (`com.bumptech.glide.q.l.h`) v1 @kind object;
  #L28a7e0.  call `clear`(v2, v1) @signature `Lcom/bumptech/glide/j;.clear:(Lcom/bumptech/glide/q/l/h;)V` @kind virtual;
  #L28a7e6.  goto L28a7c8;
  #L28a7e8.  v0:= v2.`com.bumptech.glide.j.k` @type ^`com.bumptech.glide.n.p` @kind object;
  #L28a7ec.  call `clear`(v0) @signature `Lcom/bumptech/glide/n/p;.clear:()V` @kind virtual;
  #L28a7f2.  v0:= v2.`com.bumptech.glide.j.i` @type ^`com.bumptech.glide.n.n` @kind object;
  #L28a7f6.  call `clearRequests`(v0) @signature `Lcom/bumptech/glide/n/n;.clearRequests:()V` @kind virtual;
  #L28a7fc.  v0:= v2.`com.bumptech.glide.j.h` @type ^`com.bumptech.glide.n.h` @kind object;
  #L28a800.  call `removeListener`(v0, v2) @signature `Lcom/bumptech/glide/n/h;.removeListener:(Lcom/bumptech/glide/n/i;)V` @kind interface;
  #L28a806.  v0:= v2.`com.bumptech.glide.j.h` @type ^`com.bumptech.glide.n.h` @kind object;
  #L28a80a.  v1:= v2.`com.bumptech.glide.j.n` @type ^`com.bumptech.glide.n.c` @kind object;
  #L28a80e.  call `removeListener`(v0, v1) @signature `Lcom/bumptech/glide/n/h;.removeListener:(Lcom/bumptech/glide/n/i;)V` @kind interface;
  #L28a814.  v0:= v2.`com.bumptech.glide.j.m` @type ^`android.os.Handler` @kind object;
  #L28a818.  v1:= v2.`com.bumptech.glide.j.l` @type ^`java.lang.Runnable` @kind object;
  #L28a81c.  call `removeCallbacks`(v0, v1) @signature `Landroid/os/Handler;.removeCallbacks:(Ljava/lang/Runnable;)V` @kind virtual;
  #L28a822.  v0:= v2.`com.bumptech.glide.j.f` @type ^`com.bumptech.glide.b` @kind object;
  #L28a826.  call `b`(v0, v2) @signature `Lcom/bumptech/glide/b;.b:(Lcom/bumptech/glide/j;)V` @kind virtual;
  #L28a82c.  @monitorexit v2
  #L28a82e.  return @kind void;
  #L28a830.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28a832.  @monitorexit v2
  #L28a834.  throw v0;
  catch `java.lang.Throwable` @[L28a7aa..L28a82c] goto L28a830;
}
procedure `void` `onLowMemory`(`com.bumptech.glide.j` v0 @kind this) @signature `Lcom/bumptech/glide/j;.onLowMemory:()V` @AccessFlag PUBLIC {
    temp;

  #L28a854.  return @kind void;
}
procedure `void` `onStart`(`com.bumptech.glide.j` v1 @kind this) @signature `Lcom/bumptech/glide/j;.onStart:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28a868.  @monitorenter v1
  #L28a86a.  call `resumeRequests`(v1) @signature `Lcom/bumptech/glide/j;.resumeRequests:()V` @kind virtual;
  #L28a870.  v0:= v1.`com.bumptech.glide.j.k` @type ^`com.bumptech.glide.n.p` @kind object;
  #L28a874.  call `onStart`(v0) @signature `Lcom/bumptech/glide/n/p;.onStart:()V` @kind virtual;
  #L28a87a.  @monitorexit v1
  #L28a87c.  return @kind void;
  #L28a87e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28a880.  @monitorexit v1
  #L28a882.  throw v0;
  catch `java.lang.Throwable` @[L28a86a..L28a87a] goto L28a87e;
}
procedure `void` `onStop`(`com.bumptech.glide.j` v1 @kind this) @signature `Lcom/bumptech/glide/j;.onStop:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28a8a0.  @monitorenter v1
  #L28a8a2.  call `pauseRequests`(v1) @signature `Lcom/bumptech/glide/j;.pauseRequests:()V` @kind virtual;
  #L28a8a8.  v0:= v1.`com.bumptech.glide.j.k` @type ^`com.bumptech.glide.n.p` @kind object;
  #L28a8ac.  call `onStop`(v0) @signature `Lcom/bumptech/glide/n/p;.onStop:()V` @kind virtual;
  #L28a8b2.  @monitorexit v1
  #L28a8b4.  return @kind void;
  #L28a8b6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28a8b8.  @monitorexit v1
  #L28a8ba.  throw v0;
  catch `java.lang.Throwable` @[L28a8a2..L28a8b2] goto L28a8b6;
}
procedure `void` `onTrimMemory`(`com.bumptech.glide.j` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/j;.onTrimMemory:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28a8d8.  v0:= 60I;
  #L28a8dc.  if v2 != v0 then goto L28a8ee;
  #L28a8e0.  v2:= v1.`com.bumptech.glide.j.q` @type ^`boolean` @kind boolean;
  #L28a8e4.  if v2 == 0 then goto L28a8ee;
  #L28a8e8.  call `pauseAllRequestsRecursive`(v1) @signature `Lcom/bumptech/glide/j;.pauseAllRequestsRecursive:()V` @kind virtual;
  #L28a8ee.  return @kind void;
}
procedure `void` `pauseAllRequests`(`com.bumptech.glide.j` v1 @kind this) @signature `Lcom/bumptech/glide/j;.pauseAllRequests:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28a900.  @monitorenter v1
  #L28a902.  v0:= v1.`com.bumptech.glide.j.i` @type ^`com.bumptech.glide.n.n` @kind object;
  #L28a906.  call `pauseAllRequests`(v0) @signature `Lcom/bumptech/glide/n/n;.pauseAllRequests:()V` @kind virtual;
  #L28a90c.  @monitorexit v1
  #L28a90e.  return @kind void;
  #L28a910.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28a912.  @monitorexit v1
  #L28a914.  throw v0;
  catch `java.lang.Throwable` @[L28a902..L28a90c] goto L28a910;
}
procedure `void` `pauseAllRequestsRecursive`(`com.bumptech.glide.j` v2 @kind this) @signature `Lcom/bumptech/glide/j;.pauseAllRequestsRecursive:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28a934.  @monitorenter v2
  #L28a936.  call `pauseAllRequests`(v2) @signature `Lcom/bumptech/glide/j;.pauseAllRequests:()V` @kind virtual;
  #L28a93c.  v0:= v2.`com.bumptech.glide.j.j` @type ^`com.bumptech.glide.n.m` @kind object;
  #L28a940.  call temp:= `getDescendants`(v0) @signature `Lcom/bumptech/glide/n/m;.getDescendants:()Ljava/util/Set;` @kind interface;
  #L28a946.  v0:= temp @kind object;
  #L28a948.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L28a94e.  v0:= temp @kind object;
  #L28a950.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L28a956.  v1:= temp;
  #L28a958.  if v1 == 0 then goto L28a970;
  #L28a95c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L28a962.  v1:= temp @kind object;
  #L28a964.  v1:= (`com.bumptech.glide.j`) v1 @kind object;
  #L28a968.  call `pauseAllRequests`(v1) @signature `Lcom/bumptech/glide/j;.pauseAllRequests:()V` @kind virtual;
  #L28a96e.  goto L28a950;
  #L28a970.  @monitorexit v2
  #L28a972.  return @kind void;
  #L28a974.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28a976.  @monitorexit v2
  #L28a978.  throw v0;
  catch `java.lang.Throwable` @[L28a936..L28a96e] goto L28a974;
}
procedure `void` `pauseRequests`(`com.bumptech.glide.j` v1 @kind this) @signature `Lcom/bumptech/glide/j;.pauseRequests:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28a998.  @monitorenter v1
  #L28a99a.  v0:= v1.`com.bumptech.glide.j.i` @type ^`com.bumptech.glide.n.n` @kind object;
  #L28a99e.  call `pauseRequests`(v0) @signature `Lcom/bumptech/glide/n/n;.pauseRequests:()V` @kind virtual;
  #L28a9a4.  @monitorexit v1
  #L28a9a6.  return @kind void;
  #L28a9a8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28a9aa.  @monitorexit v1
  #L28a9ac.  throw v0;
  catch `java.lang.Throwable` @[L28a99a..L28a9a4] goto L28a9a8;
}
procedure `void` `resumeRequests`(`com.bumptech.glide.j` v1 @kind this) @signature `Lcom/bumptech/glide/j;.resumeRequests:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28a9cc.  @monitorenter v1
  #L28a9ce.  v0:= v1.`com.bumptech.glide.j.i` @type ^`com.bumptech.glide.n.n` @kind object;
  #L28a9d2.  call `resumeRequests`(v0) @signature `Lcom/bumptech/glide/n/n;.resumeRequests:()V` @kind virtual;
  #L28a9d8.  @monitorexit v1
  #L28a9da.  return @kind void;
  #L28a9dc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28a9de.  @monitorexit v1
  #L28a9e0.  throw v0;
  catch `java.lang.Throwable` @[L28a9ce..L28a9d8] goto L28a9dc;
}
procedure `void` `setRequestOptions`(`com.bumptech.glide.j` v0 @kind this, `com.bumptech.glide.q.h` v1 @kind object) @signature `Lcom/bumptech/glide/j;.setRequestOptions:(Lcom/bumptech/glide/q/h;)V` @AccessFlag PROTECTED {
    temp;

  #L28aa00.  @monitorenter v0
  #L28aa02.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/q/a;.clone:()Lcom/bumptech/glide/q/a;` @kind virtual;
  #L28aa08.  v1:= temp @kind object;
  #L28aa0a.  v1:= (`com.bumptech.glide.q.h`) v1 @kind object;
  #L28aa0e.  call temp:= `autoClone`(v1) @signature `Lcom/bumptech/glide/q/a;.autoClone:()Lcom/bumptech/glide/q/a;` @kind virtual;
  #L28aa14.  v1:= (`com.bumptech.glide.q.h`) v1 @kind object;
  #L28aa18.  v0.`com.bumptech.glide.j.p` @type ^`com.bumptech.glide.q.h` := v1 @kind object;
  #L28aa1c.  @monitorexit v0
  #L28aa1e.  return @kind void;
  #L28aa20.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28aa22.  @monitorexit v0
  #L28aa24.  throw v1;
  catch `java.lang.Throwable` @[L28aa02..L28aa1c] goto L28aa20;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.j` v2 @kind this) @signature `Lcom/bumptech/glide/j;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28a55c.  @monitorenter v2
  #L28a55e.  v0:= new `java.lang.StringBuilder`;
  #L28a562.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28a568.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind super;
  #L28a56e.  v1:= temp @kind object;
  #L28a570.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28a576.  v1:= "{tracker=" @kind object;
  #L28a57a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28a580.  v1:= v2.`com.bumptech.glide.j.i` @type ^`com.bumptech.glide.n.n` @kind object;
  #L28a584.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28a58a.  v1:= ", treeNode=" @kind object;
  #L28a58e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28a594.  v1:= v2.`com.bumptech.glide.j.j` @type ^`com.bumptech.glide.n.m` @kind object;
  #L28a598.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28a59e.  v1:= "}" @kind object;
  #L28a5a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28a5a8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28a5ae.  v0:= temp @kind object;
  #L28a5b0.  @monitorexit v2
  #L28a5b2.  return v0 @kind object;
  #L28a5b4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28a5b6.  @monitorexit v2
  #L28a5b8.  throw v0;
  catch `java.lang.Throwable` @[L28a55e..L28a5b0] goto L28a5b4;
}
