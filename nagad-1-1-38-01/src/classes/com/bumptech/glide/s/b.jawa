record `com.bumptech.glide.s.b` @kind class @AccessFlag PUBLIC_FINAL extends `c.e.a` @kind class {
  `int` `com.bumptech.glide.s.b.n` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.s.b` v0 @kind this) @signature `Lcom/bumptech/glide/s/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2ab554.  call `<init>`(v0) @signature `Lc/e/a;.<init>:()V` @kind direct;
  #L2ab55a.  return @kind void;
}
procedure `void` `clear`(`com.bumptech.glide.s.b` v1 @kind this) @signature `Lcom/bumptech/glide/s/b;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ab56c.  v0:= 0I;
  #L2ab56e.  v1.`com.bumptech.glide.s.b.n` @type ^`int` := v0;
  #L2ab572.  call `clear`(v1) @signature `Lc/e/g;.clear:()V` @kind super;
  #L2ab578.  return @kind void;
}
procedure `int` `hashCode`(`com.bumptech.glide.s.b` v1 @kind this) @signature `Lcom/bumptech/glide/s/b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ab4c8.  v0:= v1.`com.bumptech.glide.s.b.n` @type ^`int`;
  #L2ab4cc.  if v0 != 0 then goto L2ab4dc;
  #L2ab4d0.  call temp:= `hashCode`(v1) @signature `Lc/e/g;.hashCode:()I` @kind super;
  #L2ab4d6.  v0:= temp;
  #L2ab4d8.  v1.`com.bumptech.glide.s.b.n` @type ^`int` := v0;
  #L2ab4dc.  v0:= v1.`com.bumptech.glide.s.b.n` @type ^`int`;
  #L2ab4e0.  return v0;
}
procedure `java.lang.Object` `put`(`com.bumptech.glide.s.b` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/bumptech/glide/s/b;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ab4f4.  v0:= 0I;
  #L2ab4f6.  v1.`com.bumptech.glide.s.b.n` @type ^`int` := v0;
  #L2ab4fa.  call temp:= `put`(v1, v2, v3) @signature `Lc/e/g;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind super;
  #L2ab500.  v2:= temp @kind object;
  #L2ab502.  return v2 @kind object;
}
procedure `void` `putAll`(`com.bumptech.glide.s.b` v1 @kind this, `c.e.g` v2 @kind object) @signature `Lcom/bumptech/glide/s/b;.putAll:(Lc/e/g;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ab58c.  v0:= 0I;
  #L2ab58e.  v1.`com.bumptech.glide.s.b.n` @type ^`int` := v0;
  #L2ab592.  call `putAll`(v1, v2) @signature `Lc/e/g;.putAll:(Lc/e/g;)V` @kind super;
  #L2ab598.  return @kind void;
}
procedure `java.lang.Object` `removeAt`(`com.bumptech.glide.s.b` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/s/b;.removeAt:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ab514.  v0:= 0I;
  #L2ab516.  v1.`com.bumptech.glide.s.b.n` @type ^`int` := v0;
  #L2ab51a.  call temp:= `removeAt`(v1, v2) @signature `Lc/e/g;.removeAt:(I)Ljava/lang/Object;` @kind super;
  #L2ab520.  v2:= temp @kind object;
  #L2ab522.  return v2 @kind object;
}
procedure `java.lang.Object` `setValueAt`(`com.bumptech.glide.s.b` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lcom/bumptech/glide/s/b;.setValueAt:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ab534.  v0:= 0I;
  #L2ab536.  v1.`com.bumptech.glide.s.b.n` @type ^`int` := v0;
  #L2ab53a.  call temp:= `setValueAt`(v1, v2, v3) @signature `Lc/e/g;.setValueAt:(ILjava/lang/Object;)Ljava/lang/Object;` @kind super;
  #L2ab540.  v2:= temp @kind object;
  #L2ab542.  return v2 @kind object;
}
