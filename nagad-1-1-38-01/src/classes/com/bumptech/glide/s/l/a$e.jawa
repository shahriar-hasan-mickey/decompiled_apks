record `com.bumptech.glide.s.l.a$e` @kind class @AccessFlag FINAL extends `c.h.i.d` @kind interface {
  `com.bumptech.glide.s.l.a$d` `com.bumptech.glide.s.l.a$e.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.s.l.a$g` `com.bumptech.glide.s.l.a$e.b` @AccessFlag PRIVATE_FINAL;
  `c.h.i.d` `com.bumptech.glide.s.l.a$e.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.s.l.a$e` v0 @kind this, `c.h.i.d` v1 @kind object, `com.bumptech.glide.s.l.a$d` v2 @kind object, `com.bumptech.glide.s.l.a$g` v3 @kind object) @signature `Lcom/bumptech/glide/s/l/a$e;.<init>:(Lc/h/i/d;Lcom/bumptech/glide/s/l/a$d;Lcom/bumptech/glide/s/l/a$g;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2ac8b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2ac8ba.  v0.`com.bumptech.glide.s.l.a$e.c` @type ^`c.h.i.d` := v1 @kind object;
  #L2ac8be.  v0.`com.bumptech.glide.s.l.a$e.a` @type ^`com.bumptech.glide.s.l.a$d` := v2 @kind object;
  #L2ac8c2.  v0.`com.bumptech.glide.s.l.a$e.b` @type ^`com.bumptech.glide.s.l.a$g` := v3 @kind object;
  #L2ac8c6.  return @kind void;
}
procedure `java.lang.Object` `acquire`(`com.bumptech.glide.s.l.a$e` v4 @kind this) @signature `Lcom/bumptech/glide/s/l/a$e;.acquire:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ac824.  v0:= v4.`com.bumptech.glide.s.l.a$e.c` @type ^`c.h.i.d` @kind object;
  #L2ac828.  call temp:= `acquire`(v0) @signature `Lc/h/i/d;.acquire:()Ljava/lang/Object;` @kind interface;
  #L2ac82e.  v0:= temp @kind object;
  #L2ac830.  if v0 != 0 then goto L2ac882;
  #L2ac834.  v0:= v4.`com.bumptech.glide.s.l.a$e.a` @type ^`com.bumptech.glide.s.l.a$d` @kind object;
  #L2ac838.  call temp:= `create`(v0) @signature `Lcom/bumptech/glide/s/l/a$d;.create:()Ljava/lang/Object;` @kind interface;
  #L2ac83e.  v0:= temp @kind object;
  #L2ac840.  v1:= 2I;
  #L2ac842.  v2:= "FactoryPools" @kind object;
  #L2ac846.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2ac84c.  v1:= temp;
  #L2ac84e.  if v1 == 0 then goto L2ac882;
  #L2ac852.  v1:= new `java.lang.StringBuilder`;
  #L2ac856.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ac85c.  v3:= "Created new " @kind object;
  #L2ac860.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ac866.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2ac86c.  v3:= temp @kind object;
  #L2ac86e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ac874.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ac87a.  v1:= temp @kind object;
  #L2ac87c.  call temp:= `v`(v2, v1) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2ac882.  v1:= instanceof @variable v0 @type ^`com.bumptech.glide.s.l.a$f` @kind boolean;
  #L2ac886.  if v1 == 0 then goto L2ac8a0;
  #L2ac88a.  v1:= v0 @kind object;
  #L2ac88c.  v1:= (`com.bumptech.glide.s.l.a$f`) v1 @kind object;
  #L2ac890.  call temp:= `getVerifier`(v1) @signature `Lcom/bumptech/glide/s/l/a$f;.getVerifier:()Lcom/bumptech/glide/s/l/c;` @kind interface;
  #L2ac896.  v1:= temp @kind object;
  #L2ac898.  v2:= 0I;
  #L2ac89a.  call `setRecycled`(v1, v2) @signature `Lcom/bumptech/glide/s/l/c;.setRecycled:(Z)V` @kind virtual;
  #L2ac8a0.  return v0 @kind object;
}
procedure `boolean` `release`(`com.bumptech.glide.s.l.a$e` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/bumptech/glide/s/l/a$e;.release:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2ac7dc.  v0:= instanceof @variable v3 @type ^`com.bumptech.glide.s.l.a$f` @kind boolean;
  #L2ac7e0.  if v0 == 0 then goto L2ac7fa;
  #L2ac7e4.  v0:= v3 @kind object;
  #L2ac7e6.  v0:= (`com.bumptech.glide.s.l.a$f`) v0 @kind object;
  #L2ac7ea.  call temp:= `getVerifier`(v0) @signature `Lcom/bumptech/glide/s/l/a$f;.getVerifier:()Lcom/bumptech/glide/s/l/c;` @kind interface;
  #L2ac7f0.  v0:= temp @kind object;
  #L2ac7f2.  v1:= 1I;
  #L2ac7f4.  call `setRecycled`(v0, v1) @signature `Lcom/bumptech/glide/s/l/c;.setRecycled:(Z)V` @kind virtual;
  #L2ac7fa.  v0:= v2.`com.bumptech.glide.s.l.a$e.b` @type ^`com.bumptech.glide.s.l.a$g` @kind object;
  #L2ac7fe.  call `reset`(v0, v3) @signature `Lcom/bumptech/glide/s/l/a$g;.reset:(Ljava/lang/Object;)V` @kind interface;
  #L2ac804.  v0:= v2.`com.bumptech.glide.s.l.a$e.c` @type ^`c.h.i.d` @kind object;
  #L2ac808.  call temp:= `release`(v0, v3) @signature `Lc/h/i/d;.release:(Ljava/lang/Object;)Z` @kind interface;
  #L2ac80e.  v3:= temp;
  #L2ac810.  return v3;
}
