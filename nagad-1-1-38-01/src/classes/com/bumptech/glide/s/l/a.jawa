record `com.bumptech.glide.s.l.a` @kind class @AccessFlag PUBLIC_FINAL {
}
global `com.bumptech.glide.s.l.a$g` `@@com.bumptech.glide.s.l.a.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/s/l/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2ac9ac.  v0:= new `com.bumptech.glide.s.l.a$a`;
  #L2ac9b0.  call `<init>`(v0) @signature `Lcom/bumptech/glide/s/l/a$a;.<init>:()V` @kind direct;
  #L2ac9b6.  `@@com.bumptech.glide.s.l.a.a` @type ^`com.bumptech.glide.s.l.a$g` := v0 @kind object;
  #L2ac9ba.  return @kind void;
}
procedure `c.h.i.d` `a`(`c.h.i.d` v1 @kind object, `com.bumptech.glide.s.l.a$d` v2 @kind object) @signature `Lcom/bumptech/glide/s/l/a;.a:(Lc/h/i/d;Lcom/bumptech/glide/s/l/a$d;)Lc/h/i/d;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2ac8d8.  call temp:= `a`() @signature `Lcom/bumptech/glide/s/l/a;.a:()Lcom/bumptech/glide/s/l/a$g;` @kind static;
  #L2ac8de.  v0:= temp @kind object;
  #L2ac8e0.  call temp:= `a`(v1, v2, v0) @signature `Lcom/bumptech/glide/s/l/a;.a:(Lc/h/i/d;Lcom/bumptech/glide/s/l/a$d;Lcom/bumptech/glide/s/l/a$g;)Lc/h/i/d;` @kind static;
  #L2ac8e6.  v1:= temp @kind object;
  #L2ac8e8.  return v1 @kind object;
}
procedure `c.h.i.d` `a`(`c.h.i.d` v1 @kind object, `com.bumptech.glide.s.l.a$d` v2 @kind object, `com.bumptech.glide.s.l.a$g` v3 @kind object) @signature `Lcom/bumptech/glide/s/l/a;.a:(Lc/h/i/d;Lcom/bumptech/glide/s/l/a$d;Lcom/bumptech/glide/s/l/a$g;)Lc/h/i/d;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2ac8fc.  v0:= new `com.bumptech.glide.s.l.a$e`;
  #L2ac900.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/s/l/a$e;.<init>:(Lc/h/i/d;Lcom/bumptech/glide/s/l/a$d;Lcom/bumptech/glide/s/l/a$g;)V` @kind direct;
  #L2ac906.  return v0 @kind object;
}
procedure `com.bumptech.glide.s.l.a$g` `a`() @signature `Lcom/bumptech/glide/s/l/a;.a:()Lcom/bumptech/glide/s/l/a$g;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2ac994.  v0:= `@@com.bumptech.glide.s.l.a.a` @type ^`com.bumptech.glide.s.l.a$g` @kind object;
  #L2ac998.  return v0 @kind object;
}
procedure `c.h.i.d` `threadSafe`(`int` v1 , `com.bumptech.glide.s.l.a$d` v2 @kind object) @signature `Lcom/bumptech/glide/s/l/a;.threadSafe:(ILcom/bumptech/glide/s/l/a$d;)Lc/h/i/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2ac918.  v0:= new `c.h.i.f`;
  #L2ac91c.  call `<init>`(v0, v1) @signature `Lc/h/i/f;.<init>:(I)V` @kind direct;
  #L2ac922.  call temp:= `a`(v0, v2) @signature `Lcom/bumptech/glide/s/l/a;.a:(Lc/h/i/d;Lcom/bumptech/glide/s/l/a$d;)Lc/h/i/d;` @kind static;
  #L2ac928.  v1:= temp @kind object;
  #L2ac92a.  return v1 @kind object;
}
procedure `c.h.i.d` `threadSafeList`() @signature `Lcom/bumptech/glide/s/l/a;.threadSafeList:()Lc/h/i/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2ac93c.  v0:= 20I;
  #L2ac940.  call temp:= `threadSafeList`(v0) @signature `Lcom/bumptech/glide/s/l/a;.threadSafeList:(I)Lc/h/i/d;` @kind static;
  #L2ac946.  v0:= temp @kind object;
  #L2ac948.  return v0 @kind object;
}
procedure `c.h.i.d` `threadSafeList`(`int` v2 ) @signature `Lcom/bumptech/glide/s/l/a;.threadSafeList:(I)Lc/h/i/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2ac95c.  v0:= new `c.h.i.f`;
  #L2ac960.  call `<init>`(v0, v2) @signature `Lc/h/i/f;.<init>:(I)V` @kind direct;
  #L2ac966.  v2:= new `com.bumptech.glide.s.l.a$b`;
  #L2ac96a.  call `<init>`(v2) @signature `Lcom/bumptech/glide/s/l/a$b;.<init>:()V` @kind direct;
  #L2ac970.  v1:= new `com.bumptech.glide.s.l.a$c`;
  #L2ac974.  call `<init>`(v1) @signature `Lcom/bumptech/glide/s/l/a$c;.<init>:()V` @kind direct;
  #L2ac97a.  call temp:= `a`(v0, v2, v1) @signature `Lcom/bumptech/glide/s/l/a;.a:(Lc/h/i/d;Lcom/bumptech/glide/s/l/a$d;Lcom/bumptech/glide/s/l/a$g;)Lc/h/i/d;` @kind static;
  #L2ac980.  v2:= temp @kind object;
  #L2ac982.  return v2 @kind object;
}
