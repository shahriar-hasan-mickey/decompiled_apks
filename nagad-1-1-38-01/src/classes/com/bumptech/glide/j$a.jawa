record `com.bumptech.glide.j$a` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `com.bumptech.glide.j` `com.bumptech.glide.j$a.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.j$a` v0 @kind this, `com.bumptech.glide.j` v1 @kind object) @signature `Lcom/bumptech/glide/j$a;.<init>:(Lcom/bumptech/glide/j;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L28a354.  v0.`com.bumptech.glide.j$a.f` @type ^`com.bumptech.glide.j` := v1 @kind object;
  #L28a358.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28a35e.  return @kind void;
}
procedure `void` `run`(`com.bumptech.glide.j$a` v2 @kind this) @signature `Lcom/bumptech/glide/j$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28a370.  v0:= v2.`com.bumptech.glide.j$a.f` @type ^`com.bumptech.glide.j` @kind object;
  #L28a374.  v1:= v0.`com.bumptech.glide.j.h` @type ^`com.bumptech.glide.n.h` @kind object;
  #L28a378.  call `addListener`(v1, v0) @signature `Lcom/bumptech/glide/n/h;.addListener:(Lcom/bumptech/glide/n/i;)V` @kind interface;
  #L28a37e.  return @kind void;
}
