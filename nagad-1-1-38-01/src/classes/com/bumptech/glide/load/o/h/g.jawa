record `com.bumptech.glide.load.o.h.g` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.o.h.e` @kind interface {
}
global `com.bumptech.glide.load.o.h.g` `@@com.bumptech.glide.load.o.h.g.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/o/h/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a48c0.  v0:= new `com.bumptech.glide.load.o.h.g`;
  #L2a48c4.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/o/h/g;.<init>:()V` @kind direct;
  #L2a48ca.  `@@com.bumptech.glide.load.o.h.g.a` @type ^`com.bumptech.glide.load.o.h.g` := v0 @kind object;
  #L2a48ce.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.o.h.g` v0 @kind this) @signature `Lcom/bumptech/glide/load/o/h/g;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2a48e0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a48e6.  return @kind void;
}
procedure `com.bumptech.glide.load.o.h.e` `get`() @signature `Lcom/bumptech/glide/load/o/h/g;.get:()Lcom/bumptech/glide/load/o/h/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2a48a8.  v0:= `@@com.bumptech.glide.load.o.h.g.a` @type ^`com.bumptech.glide.load.o.h.g` @kind object;
  #L2a48ac.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.u` `transcode`(`com.bumptech.glide.load.o.h.g` v0 @kind this, `com.bumptech.glide.load.engine.u` v1 @kind object, `com.bumptech.glide.load.h` v2 @kind object) @signature `Lcom/bumptech/glide/load/o/h/g;.transcode:(Lcom/bumptech/glide/load/engine/u;Lcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u;` @AccessFlag PUBLIC {
    temp;

  #L2a4894.  return v1 @kind object;
}
