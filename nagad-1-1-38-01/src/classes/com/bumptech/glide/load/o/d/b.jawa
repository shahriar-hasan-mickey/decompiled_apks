record `com.bumptech.glide.load.o.d.b` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.engine.u` @kind interface {
  `byte`[] `com.bumptech.glide.load.o.d.b.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.o.d.b` v0 @kind this, `byte`[] v1 @kind object) @signature `Lcom/bumptech/glide/load/o/d/b;.<init>:([B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2a26b0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a26b6.  call temp:= `checkNotNull`(v1) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2a26bc.  v1:= (`byte`[]) v1 @kind object;
  #L2a26c0.  v0.`com.bumptech.glide.load.o.d.b.f` @type ^`byte`[] := v1 @kind object;
  #L2a26c4.  return @kind void;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.load.o.d.b` v1 @kind this) @signature `Lcom/bumptech/glide/load/o/d/b;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2a2694.  call temp:= `get`(v1) @signature `Lcom/bumptech/glide/load/o/d/b;.get:()[B` @kind virtual;
  #L2a269a.  v0:= temp @kind object;
  #L2a269c.  return v0 @kind object;
}
procedure `byte`[] `get`(`com.bumptech.glide.load.o.d.b` v1 @kind this) @signature `Lcom/bumptech/glide/load/o/d/b;.get:()[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a264c.  v0:= v1.`com.bumptech.glide.load.o.d.b.f` @type ^`byte`[] @kind object;
  #L2a2650.  return v0 @kind object;
}
procedure `java.lang.Class` `getResourceClass`(`com.bumptech.glide.load.o.d.b` v1 @kind this) @signature `Lcom/bumptech/glide/load/o/d/b;.getResourceClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a267c.  v0:= constclass @type ^`byte`[] @kind object;
  #L2a2680.  return v0 @kind object;
}
procedure `int` `getSize`(`com.bumptech.glide.load.o.d.b` v1 @kind this) @signature `Lcom/bumptech/glide/load/o/d/b;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a2664.  v0:= v1.`com.bumptech.glide.load.o.d.b.f` @type ^`byte`[] @kind object;
  #L2a2668.  v0:= length @variable v0;
  #L2a266a.  return v0;
}
procedure `void` `recycle`(`com.bumptech.glide.load.o.d.b` v0 @kind this) @signature `Lcom/bumptech/glide/load/o/d/b;.recycle:()V` @AccessFlag PUBLIC {
    temp;

  #L2a26d8.  return @kind void;
}
