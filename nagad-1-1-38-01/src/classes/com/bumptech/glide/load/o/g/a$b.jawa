record `com.bumptech.glide.load.o.g.a$b` @kind class @AccessFlag  {
  `java.util.Queue` `com.bumptech.glide.load.o.g.a$b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.o.g.a$b` v1 @kind this) @signature `Lcom/bumptech/glide/load/o/g/a$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2a2df0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a2df6.  v0:= 0I;
  #L2a2df8.  call temp:= `createQueue`(v0) @signature `Lcom/bumptech/glide/s/k;.createQueue:(I)Ljava/util/Queue;` @kind static;
  #L2a2dfe.  v0:= temp @kind object;
  #L2a2e00.  v1.`com.bumptech.glide.load.o.g.a$b.a` @type ^`java.util.Queue` := v0 @kind object;
  #L2a2e04.  return @kind void;
}
procedure `com.bumptech.glide.m.d` `a`(`com.bumptech.glide.load.o.g.a$b` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/bumptech/glide/load/o/g/a$b;.a:(Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/m/d;` @AccessFlag  {
    temp;
    v0;

  #L2a2da4.  @monitorenter v1
  #L2a2da6.  v0:= v1.`com.bumptech.glide.load.o.g.a$b.a` @type ^`java.util.Queue` @kind object;
  #L2a2daa.  call temp:= `poll`(v0) @signature `Ljava/util/Queue;.poll:()Ljava/lang/Object;` @kind interface;
  #L2a2db0.  v0:= temp @kind object;
  #L2a2db2.  v0:= (`com.bumptech.glide.m.d`) v0 @kind object;
  #L2a2db6.  if v0 != 0 then goto L2a2dc4;
  #L2a2dba.  v0:= new `com.bumptech.glide.m.d`;
  #L2a2dbe.  call `<init>`(v0) @signature `Lcom/bumptech/glide/m/d;.<init>:()V` @kind direct;
  #L2a2dc4.  call temp:= `setData`(v0, v2) @signature `Lcom/bumptech/glide/m/d;.setData:(Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/m/d;` @kind virtual;
  #L2a2dca.  @monitorexit v1
  #L2a2dcc.  return v0 @kind object;
  #L2a2dce.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a2dd0.  @monitorexit v1
  #L2a2dd2.  throw v2;
  catch `java.lang.Throwable` @[L2a2da6..L2a2dca] goto L2a2dce;
}
procedure `void` `a`(`com.bumptech.glide.load.o.g.a$b` v1 @kind this, `com.bumptech.glide.m.d` v2 @kind object) @signature `Lcom/bumptech/glide/load/o/g/a$b;.a:(Lcom/bumptech/glide/m/d;)V` @AccessFlag  {
    temp;
    v0;

  #L2a2e18.  @monitorenter v1
  #L2a2e1a.  call `clear`(v2) @signature `Lcom/bumptech/glide/m/d;.clear:()V` @kind virtual;
  #L2a2e20.  v0:= v1.`com.bumptech.glide.load.o.g.a$b.a` @type ^`java.util.Queue` @kind object;
  #L2a2e24.  call temp:= `offer`(v0, v2) @signature `Ljava/util/Queue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L2a2e2a.  @monitorexit v1
  #L2a2e2c.  return @kind void;
  #L2a2e2e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a2e30.  @monitorexit v1
  #L2a2e32.  throw v2;
  catch `java.lang.Throwable` @[L2a2e1a..L2a2e2a] goto L2a2e2e;
}
