record `com.bumptech.glide.load.o.f.a` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.j` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.o.f.a` v0 @kind this) @signature `Lcom/bumptech/glide/load/o/f/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2a2d40.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a2d46.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.u` `decode`(`com.bumptech.glide.load.o.f.a` v0 @kind this, `java.io.File` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/o/f/a;.decode:(Ljava/io/File;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u;` @AccessFlag PUBLIC {
    temp;

  #L2a2d04.  v2:= new `com.bumptech.glide.load.o.f.b`;
  #L2a2d08.  call `<init>`(v2, v1) @signature `Lcom/bumptech/glide/load/o/f/b;.<init>:(Ljava/io/File;)V` @kind direct;
  #L2a2d0e.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.engine.u` `decode`(`com.bumptech.glide.load.o.f.a` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/o/f/a;.decode:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2a2d20.  v1:= (`java.io.File`) v1 @kind object;
  #L2a2d24.  call temp:= `decode`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/o/f/a;.decode:(Ljava/io/File;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u;` @kind virtual;
  #L2a2d2a.  v1:= temp @kind object;
  #L2a2d2c.  return v1 @kind object;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.o.f.a` v0 @kind this, `java.io.File` v1 @kind object, `com.bumptech.glide.load.h` v2 @kind object) @signature `Lcom/bumptech/glide/load/o/f/a;.handles:(Ljava/io/File;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC {
    temp;

  #L2a2cd0.  v1:= 1I;
  #L2a2cd2.  return v1;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.o.f.a` v0 @kind this, `java.lang.Object` v1 @kind object, `com.bumptech.glide.load.h` v2 @kind object) @signature `Lcom/bumptech/glide/load/o/f/a;.handles:(Ljava/lang/Object;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2a2ce4.  v1:= (`java.io.File`) v1 @kind object;
  #L2a2ce8.  call temp:= `handles`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/o/f/a;.handles:(Ljava/io/File;Lcom/bumptech/glide/load/h;)Z` @kind virtual;
  #L2a2cee.  v1:= temp;
  #L2a2cf0.  return v1;
}
