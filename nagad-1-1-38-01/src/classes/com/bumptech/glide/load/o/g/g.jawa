record `com.bumptech.glide.load.o.g.g` @kind class @AccessFlag  {
  `com.bumptech.glide.m.a` `com.bumptech.glide.load.o.g.g.a` @AccessFlag PRIVATE_FINAL;
  `android.os.Handler` `com.bumptech.glide.load.o.g.g.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.load.o.g.g.c` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.j` `com.bumptech.glide.load.o.g.g.d` @AccessFlag FINAL;
  `com.bumptech.glide.load.engine.z.e` `com.bumptech.glide.load.o.g.g.e` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.load.o.g.g.f` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.o.g.g.g` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.o.g.g.h` @AccessFlag PRIVATE;
  `com.bumptech.glide.i` `com.bumptech.glide.load.o.g.g.i` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.o.g.g$a` `com.bumptech.glide.load.o.g.g.j` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.o.g.g.k` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.o.g.g$a` `com.bumptech.glide.load.o.g.g.l` @AccessFlag PRIVATE;
  `android.graphics.Bitmap` `com.bumptech.glide.load.o.g.g.m` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.o.g.g$a` `com.bumptech.glide.load.o.g.g.n` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.o.g.g$d` `com.bumptech.glide.load.o.g.g.o` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.o.g.g.p` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.o.g.g.q` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.o.g.g.r` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.o.g.g` v8 @kind this, `com.bumptech.glide.b` v9 @kind object, `com.bumptech.glide.m.a` v10 @kind object, `int` v11 , `int` v12 , `com.bumptech.glide.load.l` v13 @kind object, `android.graphics.Bitmap` v14 @kind object) @signature `Lcom/bumptech/glide/load/o/g/g;.<init>:(Lcom/bumptech/glide/b;Lcom/bumptech/glide/m/a;IILcom/bumptech/glide/load/l;Landroid/graphics/Bitmap;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2a3e30.  call temp:= `getBitmapPool`(v9) @signature `Lcom/bumptech/glide/b;.getBitmapPool:()Lcom/bumptech/glide/load/engine/z/e;` @kind virtual;
  #L2a3e36.  v1:= temp @kind object;
  #L2a3e38.  call temp:= `getContext`(v9) @signature `Lcom/bumptech/glide/b;.getContext:()Landroid/content/Context;` @kind virtual;
  #L2a3e3e.  v0:= temp @kind object;
  #L2a3e40.  call temp:= `with`(v0) @signature `Lcom/bumptech/glide/b;.with:(Landroid/content/Context;)Lcom/bumptech/glide/j;` @kind static;
  #L2a3e46.  v2:= temp @kind object;
  #L2a3e48.  call temp:= `getContext`(v9) @signature `Lcom/bumptech/glide/b;.getContext:()Landroid/content/Context;` @kind virtual;
  #L2a3e4e.  v9:= temp @kind object;
  #L2a3e50.  call temp:= `with`(v9) @signature `Lcom/bumptech/glide/b;.with:(Landroid/content/Context;)Lcom/bumptech/glide/j;` @kind static;
  #L2a3e56.  v9:= temp @kind object;
  #L2a3e58.  call temp:= `a`(v9, v11, v12) @signature `Lcom/bumptech/glide/load/o/g/g;.a:(Lcom/bumptech/glide/j;II)Lcom/bumptech/glide/i;` @kind static;
  #L2a3e5e.  v5:= temp @kind object;
  #L2a3e60.  v4:= 0I;
  #L2a3e62.  v0:= v8 @kind object;
  #L2a3e64.  v3:= v10 @kind object;
  #L2a3e66.  v6:= v13 @kind object;
  #L2a3e68.  v7:= v14 @kind object;
  #L2a3e6a.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/bumptech/glide/load/o/g/g;.<init>:(Lcom/bumptech/glide/load/engine/z/e;Lcom/bumptech/glide/j;Lcom/bumptech/glide/m/a;Landroid/os/Handler;Lcom/bumptech/glide/i;Lcom/bumptech/glide/load/l;Landroid/graphics/Bitmap;)V` @kind direct;
  #L2a3e70.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.o.g.g` v1 @kind this, `com.bumptech.glide.load.engine.z.e` v2 @kind object, `com.bumptech.glide.j` v3 @kind object, `com.bumptech.glide.m.a` v4 @kind object, `android.os.Handler` v5 @kind object, `com.bumptech.glide.i` v6 @kind object, `com.bumptech.glide.load.l` v7 @kind object, `android.graphics.Bitmap` v8 @kind object) @signature `Lcom/bumptech/glide/load/o/g/g;.<init>:(Lcom/bumptech/glide/load/engine/z/e;Lcom/bumptech/glide/j;Lcom/bumptech/glide/m/a;Landroid/os/Handler;Lcom/bumptech/glide/i;Lcom/bumptech/glide/load/l;Landroid/graphics/Bitmap;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2a3e84.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a3e8a.  v0:= new `java.util.ArrayList`;
  #L2a3e8e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2a3e94.  v1.`com.bumptech.glide.load.o.g.g.c` @type ^`java.util.List` := v0 @kind object;
  #L2a3e98.  v1.`com.bumptech.glide.load.o.g.g.d` @type ^`com.bumptech.glide.j` := v3 @kind object;
  #L2a3e9c.  if v5 != 0 then goto L2a3ebc;
  #L2a3ea0.  v5:= new `android.os.Handler`;
  #L2a3ea4.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L2a3eaa.  v3:= temp @kind object;
  #L2a3eac.  v0:= new `com.bumptech.glide.load.o.g.g$c`;
  #L2a3eb0.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/o/g/g$c;.<init>:(Lcom/bumptech/glide/load/o/g/g;)V` @kind direct;
  #L2a3eb6.  call `<init>`(v5, v3, v0) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;Landroid/os/Handler$Callback;)V` @kind direct;
  #L2a3ebc.  v1.`com.bumptech.glide.load.o.g.g.e` @type ^`com.bumptech.glide.load.engine.z.e` := v2 @kind object;
  #L2a3ec0.  v1.`com.bumptech.glide.load.o.g.g.b` @type ^`android.os.Handler` := v5 @kind object;
  #L2a3ec4.  v1.`com.bumptech.glide.load.o.g.g.i` @type ^`com.bumptech.glide.i` := v6 @kind object;
  #L2a3ec8.  v1.`com.bumptech.glide.load.o.g.g.a` @type ^`com.bumptech.glide.m.a` := v4 @kind object;
  #L2a3ecc.  call `a`(v1, v7, v8) @signature `Lcom/bumptech/glide/load/o/g/g;.a:(Lcom/bumptech/glide/load/l;Landroid/graphics/Bitmap;)V` @kind virtual;
  #L2a3ed2.  return @kind void;
}
procedure `com.bumptech.glide.i` `a`(`com.bumptech.glide.j` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/load/o/g/g;.a:(Lcom/bumptech/glide/j;II)Lcom/bumptech/glide/i;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2a3cf4.  call temp:= `asBitmap`(v2) @signature `Lcom/bumptech/glide/j;.asBitmap:()Lcom/bumptech/glide/i;` @kind virtual;
  #L2a3cfa.  v2:= temp @kind object;
  #L2a3cfc.  v0:= `@@com.bumptech.glide.load.engine.j.a` @type ^`com.bumptech.glide.load.engine.j` @kind object;
  #L2a3d00.  call temp:= `diskCacheStrategyOf`(v0) @signature `Lcom/bumptech/glide/q/h;.diskCacheStrategyOf:(Lcom/bumptech/glide/load/engine/j;)Lcom/bumptech/glide/q/h;` @kind static;
  #L2a3d06.  v0:= temp @kind object;
  #L2a3d08.  v1:= 1I;
  #L2a3d0a.  call temp:= `useAnimationPool`(v0, v1) @signature `Lcom/bumptech/glide/q/a;.useAnimationPool:(Z)Lcom/bumptech/glide/q/a;` @kind virtual;
  #L2a3d10.  v0:= temp @kind object;
  #L2a3d12.  v0:= (`com.bumptech.glide.q.h`) v0 @kind object;
  #L2a3d16.  call temp:= `skipMemoryCache`(v0, v1) @signature `Lcom/bumptech/glide/q/a;.skipMemoryCache:(Z)Lcom/bumptech/glide/q/a;` @kind virtual;
  #L2a3d1c.  v0:= temp @kind object;
  #L2a3d1e.  v0:= (`com.bumptech.glide.q.h`) v0 @kind object;
  #L2a3d22.  call temp:= `override`(v0, v3, v4) @signature `Lcom/bumptech/glide/q/a;.override:(II)Lcom/bumptech/glide/q/a;` @kind virtual;
  #L2a3d28.  v3:= temp @kind object;
  #L2a3d2a.  call temp:= `apply`(v2, v3) @signature `Lcom/bumptech/glide/i;.apply:(Lcom/bumptech/glide/q/a;)Lcom/bumptech/glide/i;` @kind virtual;
  #L2a3d30.  v2:= temp @kind object;
  #L2a3d32.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.f` `j`() @signature `Lcom/bumptech/glide/load/o/g/g;.j:()Lcom/bumptech/glide/load/f;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2a3d44.  v0:= new `com.bumptech.glide.r.b`;
  #L2a3d48.  call temp:= `random`() @signature `Ljava/lang/Math;.random:()D` @kind static;
  #L2a3d4e.  v1:= temp @kind wide;
  #L2a3d50.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L2a3d56.  v1:= temp @kind object;
  #L2a3d58.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/r/b;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2a3d5e.  return v0 @kind object;
}
procedure `void` `k`(`com.bumptech.glide.load.o.g.g` v5 @kind this) @signature `Lcom/bumptech/glide/load/o/g/g;.k:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2a3f60.  v0:= v5.`com.bumptech.glide.load.o.g.g.f` @type ^`boolean` @kind boolean;
  #L2a3f64.  if v0 == 0 then goto L2a402e;
  #L2a3f68.  v0:= v5.`com.bumptech.glide.load.o.g.g.g` @type ^`boolean` @kind boolean;
  #L2a3f6c.  if v0 == 0 then goto L2a3f72;
  #L2a3f70.  goto L2a402e;
  #L2a3f72.  v0:= v5.`com.bumptech.glide.load.o.g.g.h` @type ^`boolean` @kind boolean;
  #L2a3f76.  v1:= 1I;
  #L2a3f78.  if v0 == 0 then goto L2a3fa4;
  #L2a3f7c.  v0:= v5.`com.bumptech.glide.load.o.g.g.n` @type ^`com.bumptech.glide.load.o.g.g$a` @kind object;
  #L2a3f80.  v2:= 0I;
  #L2a3f82.  if v0 != 0 then goto L2a3f8a;
  #L2a3f86.  v0:= 1I;
  #L2a3f88.  goto L2a3f8c;
  #L2a3f8a.  v0:= 0I;
  #L2a3f8c.  v3:= "Pending target must be null when starting from the first frame" @kind object;
  #L2a3f90.  call `checkArgument`(v0, v3) @signature `Lcom/bumptech/glide/s/j;.checkArgument:(ZLjava/lang/String;)V` @kind static;
  #L2a3f96.  v0:= v5.`com.bumptech.glide.load.o.g.g.a` @type ^`com.bumptech.glide.m.a` @kind object;
  #L2a3f9a.  call `resetFrameIndex`(v0) @signature `Lcom/bumptech/glide/m/a;.resetFrameIndex:()V` @kind interface;
  #L2a3fa0.  v5.`com.bumptech.glide.load.o.g.g.h` @type ^`boolean` := v2 @kind boolean;
  #L2a3fa4.  v0:= v5.`com.bumptech.glide.load.o.g.g.n` @type ^`com.bumptech.glide.load.o.g.g$a` @kind object;
  #L2a3fa8.  if v0 == 0 then goto L2a3fba;
  #L2a3fac.  v1:= 0I;
  #L2a3fae.  v5.`com.bumptech.glide.load.o.g.g.n` @type ^`com.bumptech.glide.load.o.g.g$a` := v1 @kind object;
  #L2a3fb2.  call `a`(v5, v0) @signature `Lcom/bumptech/glide/load/o/g/g;.a:(Lcom/bumptech/glide/load/o/g/g$a;)V` @kind virtual;
  #L2a3fb8.  return @kind void;
  #L2a3fba.  v5.`com.bumptech.glide.load.o.g.g.g` @type ^`boolean` := v1 @kind boolean;
  #L2a3fbe.  v0:= v5.`com.bumptech.glide.load.o.g.g.a` @type ^`com.bumptech.glide.m.a` @kind object;
  #L2a3fc2.  call temp:= `getNextDelay`(v0) @signature `Lcom/bumptech/glide/m/a;.getNextDelay:()I` @kind interface;
  #L2a3fc8.  v0:= temp;
  #L2a3fca.  call temp:= `uptimeMillis`() @signature `Landroid/os/SystemClock;.uptimeMillis:()J` @kind static;
  #L2a3fd0.  v1:= temp @kind wide;
  #L2a3fd2.  v3:= (`long`) v0 @kind i2l;
  #L2a3fd4.  v1:= v1 + v3 @kind long;
  #L2a3fd6.  v0:= v5.`com.bumptech.glide.load.o.g.g.a` @type ^`com.bumptech.glide.m.a` @kind object;
  #L2a3fda.  call `advance`(v0) @signature `Lcom/bumptech/glide/m/a;.advance:()V` @kind interface;
  #L2a3fe0.  v0:= new `com.bumptech.glide.load.o.g.g$a`;
  #L2a3fe4.  v3:= v5.`com.bumptech.glide.load.o.g.g.b` @type ^`android.os.Handler` @kind object;
  #L2a3fe8.  v4:= v5.`com.bumptech.glide.load.o.g.g.a` @type ^`com.bumptech.glide.m.a` @kind object;
  #L2a3fec.  call temp:= `getCurrentFrameIndex`(v4) @signature `Lcom/bumptech/glide/m/a;.getCurrentFrameIndex:()I` @kind interface;
  #L2a3ff2.  v4:= temp;
  #L2a3ff4.  call `<init>`(v0, v3, v4, v1) @signature `Lcom/bumptech/glide/load/o/g/g$a;.<init>:(Landroid/os/Handler;IJ)V` @kind direct;
  #L2a3ffa.  v5.`com.bumptech.glide.load.o.g.g.l` @type ^`com.bumptech.glide.load.o.g.g$a` := v0 @kind object;
  #L2a3ffe.  v0:= v5.`com.bumptech.glide.load.o.g.g.i` @type ^`com.bumptech.glide.i` @kind object;
  #L2a4002.  call temp:= `j`() @signature `Lcom/bumptech/glide/load/o/g/g;.j:()Lcom/bumptech/glide/load/f;` @kind static;
  #L2a4008.  v1:= temp @kind object;
  #L2a400a.  call temp:= `signatureOf`(v1) @signature `Lcom/bumptech/glide/q/h;.signatureOf:(Lcom/bumptech/glide/load/f;)Lcom/bumptech/glide/q/h;` @kind static;
  #L2a4010.  v1:= temp @kind object;
  #L2a4012.  call temp:= `apply`(v0, v1) @signature `Lcom/bumptech/glide/i;.apply:(Lcom/bumptech/glide/q/a;)Lcom/bumptech/glide/i;` @kind virtual;
  #L2a4018.  v0:= temp @kind object;
  #L2a401a.  v1:= v5.`com.bumptech.glide.load.o.g.g.a` @type ^`com.bumptech.glide.m.a` @kind object;
  #L2a401e.  call temp:= `load`(v0, v1) @signature `Lcom/bumptech/glide/i;.load:(Ljava/lang/Object;)Lcom/bumptech/glide/i;` @kind virtual;
  #L2a4024.  v1:= v5.`com.bumptech.glide.load.o.g.g.l` @type ^`com.bumptech.glide.load.o.g.g$a` @kind object;
  #L2a4028.  call temp:= `into`(v0, v1) @signature `Lcom/bumptech/glide/i;.into:(Lcom/bumptech/glide/q/l/h;)Lcom/bumptech/glide/q/l/h;` @kind virtual;
  #L2a402e.  return @kind void;
}
procedure `void` `l`(`com.bumptech.glide.load.o.g.g` v2 @kind this) @signature `Lcom/bumptech/glide/load/o/g/g;.l:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2a40f8.  v0:= v2.`com.bumptech.glide.load.o.g.g.m` @type ^`android.graphics.Bitmap` @kind object;
  #L2a40fc.  if v0 == 0 then goto L2a4110;
  #L2a4100.  v1:= v2.`com.bumptech.glide.load.o.g.g.e` @type ^`com.bumptech.glide.load.engine.z.e` @kind object;
  #L2a4104.  call `put`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/z/e;.put:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L2a410a.  v0:= 0I;
  #L2a410c.  v2.`com.bumptech.glide.load.o.g.g.m` @type ^`android.graphics.Bitmap` := v0 @kind object;
  #L2a4110.  return @kind void;
}
procedure `void` `m`(`com.bumptech.glide.load.o.g.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/o/g/g;.m:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2a4198.  v0:= v1.`com.bumptech.glide.load.o.g.g.f` @type ^`boolean` @kind boolean;
  #L2a419c.  if v0 == 0 then goto L2a41a2;
  #L2a41a0.  return @kind void;
  #L2a41a2.  v0:= 1I;
  #L2a41a4.  v1.`com.bumptech.glide.load.o.g.g.f` @type ^`boolean` := v0 @kind boolean;
  #L2a41a8.  v0:= 0I;
  #L2a41aa.  v1.`com.bumptech.glide.load.o.g.g.k` @type ^`boolean` := v0 @kind boolean;
  #L2a41ae.  call `k`(v1) @signature `Lcom/bumptech/glide/load/o/g/g;.k:()V` @kind direct;
  #L2a41b4.  return @kind void;
}
procedure `void` `n`(`com.bumptech.glide.load.o.g.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/o/g/g;.n:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2a41c8.  v0:= 0I;
  #L2a41ca.  v1.`com.bumptech.glide.load.o.g.g.f` @type ^`boolean` := v0 @kind boolean;
  #L2a41ce.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.o.g.g` v3 @kind this) @signature `Lcom/bumptech/glide/load/o/g/g;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L2a3ee4.  v0:= v3.`com.bumptech.glide.load.o.g.g.c` @type ^`java.util.List` @kind object;
  #L2a3ee8.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L2a3eee.  call `l`(v3) @signature `Lcom/bumptech/glide/load/o/g/g;.l:()V` @kind direct;
  #L2a3ef4.  call `n`(v3) @signature `Lcom/bumptech/glide/load/o/g/g;.n:()V` @kind direct;
  #L2a3efa.  v0:= v3.`com.bumptech.glide.load.o.g.g.j` @type ^`com.bumptech.glide.load.o.g.g$a` @kind object;
  #L2a3efe.  v1:= 0I;
  #L2a3f00.  if v0 == 0 then goto L2a3f12;
  #L2a3f04.  v2:= v3.`com.bumptech.glide.load.o.g.g.d` @type ^`com.bumptech.glide.j` @kind object;
  #L2a3f08.  call `clear`(v2, v0) @signature `Lcom/bumptech/glide/j;.clear:(Lcom/bumptech/glide/q/l/h;)V` @kind virtual;
  #L2a3f0e.  v3.`com.bumptech.glide.load.o.g.g.j` @type ^`com.bumptech.glide.load.o.g.g$a` := v1 @kind object;
  #L2a3f12.  v0:= v3.`com.bumptech.glide.load.o.g.g.l` @type ^`com.bumptech.glide.load.o.g.g$a` @kind object;
  #L2a3f16.  if v0 == 0 then goto L2a3f28;
  #L2a3f1a.  v2:= v3.`com.bumptech.glide.load.o.g.g.d` @type ^`com.bumptech.glide.j` @kind object;
  #L2a3f1e.  call `clear`(v2, v0) @signature `Lcom/bumptech/glide/j;.clear:(Lcom/bumptech/glide/q/l/h;)V` @kind virtual;
  #L2a3f24.  v3.`com.bumptech.glide.load.o.g.g.l` @type ^`com.bumptech.glide.load.o.g.g$a` := v1 @kind object;
  #L2a3f28.  v0:= v3.`com.bumptech.glide.load.o.g.g.n` @type ^`com.bumptech.glide.load.o.g.g$a` @kind object;
  #L2a3f2c.  if v0 == 0 then goto L2a3f3e;
  #L2a3f30.  v2:= v3.`com.bumptech.glide.load.o.g.g.d` @type ^`com.bumptech.glide.j` @kind object;
  #L2a3f34.  call `clear`(v2, v0) @signature `Lcom/bumptech/glide/j;.clear:(Lcom/bumptech/glide/q/l/h;)V` @kind virtual;
  #L2a3f3a.  v3.`com.bumptech.glide.load.o.g.g.n` @type ^`com.bumptech.glide.load.o.g.g$a` := v1 @kind object;
  #L2a3f3e.  v0:= v3.`com.bumptech.glide.load.o.g.g.a` @type ^`com.bumptech.glide.m.a` @kind object;
  #L2a3f42.  call `clear`(v0) @signature `Lcom/bumptech/glide/m/a;.clear:()V` @kind interface;
  #L2a3f48.  v0:= 1I;
  #L2a3f4a.  v3.`com.bumptech.glide.load.o.g.g.k` @type ^`boolean` := v0 @kind boolean;
  #L2a3f4e.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.o.g.g` v2 @kind this, `com.bumptech.glide.load.l` v3 @kind object, `android.graphics.Bitmap` v4 @kind object) @signature `Lcom/bumptech/glide/load/o/g/g;.a:(Lcom/bumptech/glide/load/l;Landroid/graphics/Bitmap;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2a4124.  call temp:= `checkNotNull`(v3) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2a412a.  v0:= v3 @kind object;
  #L2a412c.  v0:= (`com.bumptech.glide.load.l`) v0 @kind object;
  #L2a4130.  call temp:= `checkNotNull`(v4) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2a4136.  v0:= v4 @kind object;
  #L2a4138.  v0:= (`android.graphics.Bitmap`) v0 @kind object;
  #L2a413c.  v2.`com.bumptech.glide.load.o.g.g.m` @type ^`android.graphics.Bitmap` := v0 @kind object;
  #L2a4140.  v0:= v2.`com.bumptech.glide.load.o.g.g.i` @type ^`com.bumptech.glide.i` @kind object;
  #L2a4144.  v1:= new `com.bumptech.glide.q.h`;
  #L2a4148.  call `<init>`(v1) @signature `Lcom/bumptech/glide/q/h;.<init>:()V` @kind direct;
  #L2a414e.  call temp:= `transform`(v1, v3) @signature `Lcom/bumptech/glide/q/a;.transform:(Lcom/bumptech/glide/load/l;)Lcom/bumptech/glide/q/a;` @kind virtual;
  #L2a4154.  v3:= temp @kind object;
  #L2a4156.  call temp:= `apply`(v0, v3) @signature `Lcom/bumptech/glide/i;.apply:(Lcom/bumptech/glide/q/a;)Lcom/bumptech/glide/i;` @kind virtual;
  #L2a415c.  v3:= temp @kind object;
  #L2a415e.  v2.`com.bumptech.glide.load.o.g.g.i` @type ^`com.bumptech.glide.i` := v3 @kind object;
  #L2a4162.  call temp:= `getBitmapByteSize`(v4) @signature `Lcom/bumptech/glide/s/k;.getBitmapByteSize:(Landroid/graphics/Bitmap;)I` @kind static;
  #L2a4168.  v3:= temp;
  #L2a416a.  v2.`com.bumptech.glide.load.o.g.g.p` @type ^`int` := v3;
  #L2a416e.  call temp:= `getWidth`(v4) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2a4174.  v3:= temp;
  #L2a4176.  v2.`com.bumptech.glide.load.o.g.g.q` @type ^`int` := v3;
  #L2a417a.  call temp:= `getHeight`(v4) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2a4180.  v3:= temp;
  #L2a4182.  v2.`com.bumptech.glide.load.o.g.g.r` @type ^`int` := v3;
  #L2a4186.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.o.g.g` v3 @kind this, `com.bumptech.glide.load.o.g.g$a` v4 @kind object) @signature `Lcom/bumptech/glide/load/o/g/g;.a:(Lcom/bumptech/glide/load/o/g/g$a;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L2a4040.  v0:= v3.`com.bumptech.glide.load.o.g.g.o` @type ^`com.bumptech.glide.load.o.g.g$d` @kind object;
  #L2a4044.  if v0 == 0 then goto L2a404e;
  #L2a4048.  call `onFrameReady`(v0) @signature `Lcom/bumptech/glide/load/o/g/g$d;.onFrameReady:()V` @kind interface;
  #L2a404e.  v0:= 0I;
  #L2a4050.  v3.`com.bumptech.glide.load.o.g.g.g` @type ^`boolean` := v0 @kind boolean;
  #L2a4054.  v0:= v3.`com.bumptech.glide.load.o.g.g.k` @type ^`boolean` @kind boolean;
  #L2a4058.  v1:= 2I;
  #L2a405a.  if v0 == 0 then goto L2a4072;
  #L2a405e.  v0:= v3.`com.bumptech.glide.load.o.g.g.b` @type ^`android.os.Handler` @kind object;
  #L2a4062.  call temp:= `obtainMessage`(v0, v1, v4) @signature `Landroid/os/Handler;.obtainMessage:(ILjava/lang/Object;)Landroid/os/Message;` @kind virtual;
  #L2a4068.  v4:= temp @kind object;
  #L2a406a.  call `sendToTarget`(v4) @signature `Landroid/os/Message;.sendToTarget:()V` @kind virtual;
  #L2a4070.  return @kind void;
  #L2a4072.  v0:= v3.`com.bumptech.glide.load.o.g.g.f` @type ^`boolean` @kind boolean;
  #L2a4076.  if v0 != 0 then goto L2a4080;
  #L2a407a.  v3.`com.bumptech.glide.load.o.g.g.n` @type ^`com.bumptech.glide.load.o.g.g$a` := v4 @kind object;
  #L2a407e.  return @kind void;
  #L2a4080.  call temp:= `a`(v4) @signature `Lcom/bumptech/glide/load/o/g/g$a;.a:()Landroid/graphics/Bitmap;` @kind virtual;
  #L2a4086.  v0:= temp @kind object;
  #L2a4088.  if v0 == 0 then goto L2a40e0;
  #L2a408c.  call `l`(v3) @signature `Lcom/bumptech/glide/load/o/g/g;.l:()V` @kind direct;
  #L2a4092.  v0:= v3.`com.bumptech.glide.load.o.g.g.j` @type ^`com.bumptech.glide.load.o.g.g$a` @kind object;
  #L2a4096.  v3.`com.bumptech.glide.load.o.g.g.j` @type ^`com.bumptech.glide.load.o.g.g$a` := v4 @kind object;
  #L2a409a.  v4:= v3.`com.bumptech.glide.load.o.g.g.c` @type ^`java.util.List` @kind object;
  #L2a409e.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2a40a4.  v4:= temp;
  #L2a40a6.  v4:= v4 + -1;
  #L2a40aa.  if v4 < 0 then goto L2a40ca;
  #L2a40ae.  v2:= v3.`com.bumptech.glide.load.o.g.g.c` @type ^`java.util.List` @kind object;
  #L2a40b2.  call temp:= `get`(v2, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2a40b8.  v2:= temp @kind object;
  #L2a40ba.  v2:= (`com.bumptech.glide.load.o.g.g$b`) v2 @kind object;
  #L2a40be.  call `onFrameReady`(v2) @signature `Lcom/bumptech/glide/load/o/g/g$b;.onFrameReady:()V` @kind interface;
  #L2a40c4.  v4:= v4 + -1;
  #L2a40c8.  goto L2a40aa;
  #L2a40ca.  if v0 == 0 then goto L2a40e0;
  #L2a40ce.  v4:= v3.`com.bumptech.glide.load.o.g.g.b` @type ^`android.os.Handler` @kind object;
  #L2a40d2.  call temp:= `obtainMessage`(v4, v1, v0) @signature `Landroid/os/Handler;.obtainMessage:(ILjava/lang/Object;)Landroid/os/Message;` @kind virtual;
  #L2a40d8.  v4:= temp @kind object;
  #L2a40da.  call `sendToTarget`(v4) @signature `Landroid/os/Message;.sendToTarget:()V` @kind virtual;
  #L2a40e0.  call `k`(v3) @signature `Lcom/bumptech/glide/load/o/g/g;.k:()V` @kind direct;
  #L2a40e6.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.o.g.g` v2 @kind this, `com.bumptech.glide.load.o.g.g$b` v3 @kind object) @signature `Lcom/bumptech/glide/load/o/g/g;.a:(Lcom/bumptech/glide/load/o/g/g$b;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2a41e0.  v0:= v2.`com.bumptech.glide.load.o.g.g.k` @type ^`boolean` @kind boolean;
  #L2a41e4.  if v0 != 0 then goto L2a422a;
  #L2a41e8.  v0:= v2.`com.bumptech.glide.load.o.g.g.c` @type ^`java.util.List` @kind object;
  #L2a41ec.  call temp:= `contains`(v0, v3) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L2a41f2.  v0:= temp;
  #L2a41f4.  if v0 != 0 then goto L2a421a;
  #L2a41f8.  v0:= v2.`com.bumptech.glide.load.o.g.g.c` @type ^`java.util.List` @kind object;
  #L2a41fc.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2a4202.  v0:= temp;
  #L2a4204.  v1:= v2.`com.bumptech.glide.load.o.g.g.c` @type ^`java.util.List` @kind object;
  #L2a4208.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2a420e.  if v0 == 0 then goto L2a4218;
  #L2a4212.  call `m`(v2) @signature `Lcom/bumptech/glide/load/o/g/g;.m:()V` @kind direct;
  #L2a4218.  return @kind void;
  #L2a421a.  v3:= new `java.lang.IllegalStateException`;
  #L2a421e.  v0:= "Cannot subscribe twice in a row" @kind object;
  #L2a4222.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a4228.  throw v3;
  #L2a422a.  v3:= new `java.lang.IllegalStateException`;
  #L2a422e.  v0:= "Cannot subscribe to a cleared frame loader" @kind object;
  #L2a4232.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a4238.  throw v3;
}
procedure `java.nio.ByteBuffer` `b`(`com.bumptech.glide.load.o.g.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/o/g/g;.b:()Ljava/nio/ByteBuffer;` @AccessFlag  {
    temp;
    v0;

  #L2a3e08.  v0:= v1.`com.bumptech.glide.load.o.g.g.a` @type ^`com.bumptech.glide.m.a` @kind object;
  #L2a3e0c.  call temp:= `getData`(v0) @signature `Lcom/bumptech/glide/m/a;.getData:()Ljava/nio/ByteBuffer;` @kind interface;
  #L2a3e12.  v0:= temp @kind object;
  #L2a3e14.  call temp:= `asReadOnlyBuffer`(v0) @signature `Ljava/nio/ByteBuffer;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L2a3e1a.  v0:= temp @kind object;
  #L2a3e1c.  return v0 @kind object;
}
procedure `void` `b`(`com.bumptech.glide.load.o.g.g` v1 @kind this, `com.bumptech.glide.load.o.g.g$b` v2 @kind object) @signature `Lcom/bumptech/glide/load/o/g/g;.b:(Lcom/bumptech/glide/load/o/g/g$b;)V` @AccessFlag  {
    temp;
    v0;

  #L2a424c.  v0:= v1.`com.bumptech.glide.load.o.g.g.c` @type ^`java.util.List` @kind object;
  #L2a4250.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L2a4256.  v2:= v1.`com.bumptech.glide.load.o.g.g.c` @type ^`java.util.List` @kind object;
  #L2a425a.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2a4260.  v2:= temp;
  #L2a4262.  if v2 == 0 then goto L2a426c;
  #L2a4266.  call `n`(v1) @signature `Lcom/bumptech/glide/load/o/g/g;.n:()V` @kind direct;
  #L2a426c.  return @kind void;
}
procedure `android.graphics.Bitmap` `c`(`com.bumptech.glide.load.o.g.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/o/g/g;.c:()Landroid/graphics/Bitmap;` @AccessFlag  {
    temp;
    v0;

  #L2a3cb4.  v0:= v1.`com.bumptech.glide.load.o.g.g.j` @type ^`com.bumptech.glide.load.o.g.g$a` @kind object;
  #L2a3cb8.  if v0 == 0 then goto L2a3cc6;
  #L2a3cbc.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/load/o/g/g$a;.a:()Landroid/graphics/Bitmap;` @kind virtual;
  #L2a3cc2.  v0:= temp @kind object;
  #L2a3cc4.  goto L2a3cca;
  #L2a3cc6.  v0:= v1.`com.bumptech.glide.load.o.g.g.m` @type ^`android.graphics.Bitmap` @kind object;
  #L2a3cca.  return v0 @kind object;
}
procedure `int` `d`(`com.bumptech.glide.load.o.g.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/o/g/g;.d:()I` @AccessFlag  {
    temp;
    v0;

  #L2a3d70.  v0:= v1.`com.bumptech.glide.load.o.g.g.j` @type ^`com.bumptech.glide.load.o.g.g$a` @kind object;
  #L2a3d74.  if v0 == 0 then goto L2a3d7e;
  #L2a3d78.  v0:= v0.`com.bumptech.glide.load.o.g.g$a.j` @type ^`int`;
  #L2a3d7c.  goto L2a3d80;
  #L2a3d7e.  v0:= -1I;
  #L2a3d80.  return v0;
}
procedure `android.graphics.Bitmap` `e`(`com.bumptech.glide.load.o.g.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/o/g/g;.e:()Landroid/graphics/Bitmap;` @AccessFlag  {
    temp;
    v0;

  #L2a3cdc.  v0:= v1.`com.bumptech.glide.load.o.g.g.m` @type ^`android.graphics.Bitmap` @kind object;
  #L2a3ce0.  return v0 @kind object;
}
procedure `int` `f`(`com.bumptech.glide.load.o.g.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/o/g/g;.f:()I` @AccessFlag  {
    temp;
    v0;

  #L2a3d94.  v0:= v1.`com.bumptech.glide.load.o.g.g.a` @type ^`com.bumptech.glide.m.a` @kind object;
  #L2a3d98.  call temp:= `getFrameCount`(v0) @signature `Lcom/bumptech/glide/m/a;.getFrameCount:()I` @kind interface;
  #L2a3d9e.  v0:= temp;
  #L2a3da0.  return v0;
}
procedure `int` `g`(`com.bumptech.glide.load.o.g.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/o/g/g;.g:()I` @AccessFlag  {
    temp;
    v0;

  #L2a3db4.  v0:= v1.`com.bumptech.glide.load.o.g.g.r` @type ^`int`;
  #L2a3db8.  return v0;
}
procedure `int` `h`(`com.bumptech.glide.load.o.g.g` v2 @kind this) @signature `Lcom/bumptech/glide/load/o/g/g;.h:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2a3dcc.  v0:= v2.`com.bumptech.glide.load.o.g.g.a` @type ^`com.bumptech.glide.m.a` @kind object;
  #L2a3dd0.  call temp:= `getByteSize`(v0) @signature `Lcom/bumptech/glide/m/a;.getByteSize:()I` @kind interface;
  #L2a3dd6.  v0:= temp;
  #L2a3dd8.  v1:= v2.`com.bumptech.glide.load.o.g.g.p` @type ^`int`;
  #L2a3ddc.  v0:= v0 + v1 @kind int;
  #L2a3dde.  return v0;
}
procedure `int` `i`(`com.bumptech.glide.load.o.g.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/o/g/g;.i:()I` @AccessFlag  {
    temp;
    v0;

  #L2a3df0.  v0:= v1.`com.bumptech.glide.load.o.g.g.q` @type ^`int`;
  #L2a3df4.  return v0;
}
