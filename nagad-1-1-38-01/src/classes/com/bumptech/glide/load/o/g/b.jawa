record `com.bumptech.glide.load.o.g.b` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.m.a$a` @kind interface {
  `com.bumptech.glide.load.engine.z.e` `com.bumptech.glide.load.o.g.b.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.z.b` `com.bumptech.glide.load.o.g.b.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.o.g.b` v0 @kind this, `com.bumptech.glide.load.engine.z.e` v1 @kind object, `com.bumptech.glide.load.engine.z.b` v2 @kind object) @signature `Lcom/bumptech/glide/load/o/g/b;.<init>:(Lcom/bumptech/glide/load/engine/z/e;Lcom/bumptech/glide/load/engine/z/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2a32fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a3302.  v0.`com.bumptech.glide.load.o.g.b.a` @type ^`com.bumptech.glide.load.engine.z.e` := v1 @kind object;
  #L2a3306.  v0.`com.bumptech.glide.load.o.g.b.b` @type ^`com.bumptech.glide.load.engine.z.b` := v2 @kind object;
  #L2a330a.  return @kind void;
}
procedure `android.graphics.Bitmap` `obtain`(`com.bumptech.glide.load.o.g.b` v1 @kind this, `int` v2 , `int` v3 , `android.graphics.Bitmap$Config` v4 @kind object) @signature `Lcom/bumptech/glide/load/o/g/b;.obtain:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a327c.  v0:= v1.`com.bumptech.glide.load.o.g.b.a` @type ^`com.bumptech.glide.load.engine.z.e` @kind object;
  #L2a3280.  call temp:= `getDirty`(v0, v2, v3, v4) @signature `Lcom/bumptech/glide/load/engine/z/e;.getDirty:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L2a3286.  v2:= temp @kind object;
  #L2a3288.  return v2 @kind object;
}
procedure `byte`[] `obtainByteArray`(`com.bumptech.glide.load.o.g.b` v2 @kind this, `int` v3 ) @signature `Lcom/bumptech/glide/load/o/g/b;.obtainByteArray:(I)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a329c.  v0:= v2.`com.bumptech.glide.load.o.g.b.b` @type ^`com.bumptech.glide.load.engine.z.b` @kind object;
  #L2a32a0.  if v0 != 0 then goto L2a32aa;
  #L2a32a4.  v3:= new `byte`[v3];
  #L2a32a8.  return v3 @kind object;
  #L2a32aa.  v1:= constclass @type ^`byte`[] @kind object;
  #L2a32ae.  call temp:= `get`(v0, v3, v1) @signature `Lcom/bumptech/glide/load/engine/z/b;.get:(ILjava/lang/Class;)Ljava/lang/Object;` @kind interface;
  #L2a32b4.  v3:= temp @kind object;
  #L2a32b6.  v3:= (`byte`[]) v3 @kind object;
  #L2a32ba.  return v3 @kind object;
}
procedure `int`[] `obtainIntArray`(`com.bumptech.glide.load.o.g.b` v2 @kind this, `int` v3 ) @signature `Lcom/bumptech/glide/load/o/g/b;.obtainIntArray:(I)[I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a32cc.  v0:= v2.`com.bumptech.glide.load.o.g.b.b` @type ^`com.bumptech.glide.load.engine.z.b` @kind object;
  #L2a32d0.  if v0 != 0 then goto L2a32da;
  #L2a32d4.  v3:= new `int`[v3];
  #L2a32d8.  return v3 @kind object;
  #L2a32da.  v1:= constclass @type ^`int`[] @kind object;
  #L2a32de.  call temp:= `get`(v0, v3, v1) @signature `Lcom/bumptech/glide/load/engine/z/b;.get:(ILjava/lang/Class;)Ljava/lang/Object;` @kind interface;
  #L2a32e4.  v3:= temp @kind object;
  #L2a32e6.  v3:= (`int`[]) v3 @kind object;
  #L2a32ea.  return v3 @kind object;
}
procedure `void` `release`(`com.bumptech.glide.load.o.g.b` v1 @kind this, `android.graphics.Bitmap` v2 @kind object) @signature `Lcom/bumptech/glide/load/o/g/b;.release:(Landroid/graphics/Bitmap;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a331c.  v0:= v1.`com.bumptech.glide.load.o.g.b.a` @type ^`com.bumptech.glide.load.engine.z.e` @kind object;
  #L2a3320.  call `put`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/z/e;.put:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L2a3326.  return @kind void;
}
procedure `void` `release`(`com.bumptech.glide.load.o.g.b` v1 @kind this, `byte`[] v2 @kind object) @signature `Lcom/bumptech/glide/load/o/g/b;.release:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a3338.  v0:= v1.`com.bumptech.glide.load.o.g.b.b` @type ^`com.bumptech.glide.load.engine.z.b` @kind object;
  #L2a333c.  if v0 != 0 then goto L2a3342;
  #L2a3340.  return @kind void;
  #L2a3342.  call `put`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/z/b;.put:(Ljava/lang/Object;)V` @kind interface;
  #L2a3348.  return @kind void;
}
procedure `void` `release`(`com.bumptech.glide.load.o.g.b` v1 @kind this, `int`[] v2 @kind object) @signature `Lcom/bumptech/glide/load/o/g/b;.release:([I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a335c.  v0:= v1.`com.bumptech.glide.load.o.g.b.b` @type ^`com.bumptech.glide.load.engine.z.b` @kind object;
  #L2a3360.  if v0 != 0 then goto L2a3366;
  #L2a3364.  return @kind void;
  #L2a3366.  call `put`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/z/b;.put:(Ljava/lang/Object;)V` @kind interface;
  #L2a336c.  return @kind void;
}
