record `com.bumptech.glide.load.o.d.a` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.m.e` @kind interface {
  `java.nio.ByteBuffer` `com.bumptech.glide.load.o.d.a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.o.d.a` v0 @kind this, `java.nio.ByteBuffer` v1 @kind object) @signature `Lcom/bumptech/glide/load/o/d/a;.<init>:(Ljava/nio/ByteBuffer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2a261c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a2622.  v0.`com.bumptech.glide.load.o.d.a.a` @type ^`java.nio.ByteBuffer` := v1 @kind object;
  #L2a2626.  return @kind void;
}
procedure `void` `cleanup`(`com.bumptech.glide.load.o.d.a` v0 @kind this) @signature `Lcom/bumptech/glide/load/o/d/a;.cleanup:()V` @AccessFlag PUBLIC {
    temp;

  #L2a2638.  return @kind void;
}
procedure `java.lang.Object` `rewindAndGet`(`com.bumptech.glide.load.o.d.a` v1 @kind this) @signature `Lcom/bumptech/glide/load/o/d/a;.rewindAndGet:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2a25dc.  call temp:= `rewindAndGet`(v1) @signature `Lcom/bumptech/glide/load/o/d/a;.rewindAndGet:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L2a25e2.  v0:= temp @kind object;
  #L2a25e4.  return v0 @kind object;
}
procedure `java.nio.ByteBuffer` `rewindAndGet`(`com.bumptech.glide.load.o.d.a` v2 @kind this) @signature `Lcom/bumptech/glide/load/o/d/a;.rewindAndGet:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a25f8.  v0:= v2.`com.bumptech.glide.load.o.d.a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L2a25fc.  v1:= 0I;
  #L2a25fe.  call temp:= `position`(v0, v1) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L2a2604.  v0:= v2.`com.bumptech.glide.load.o.d.a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L2a2608.  return v0 @kind object;
}
