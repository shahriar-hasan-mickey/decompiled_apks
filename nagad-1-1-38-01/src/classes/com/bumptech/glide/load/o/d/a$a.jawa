record `com.bumptech.glide.load.o.d.a$a` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.m.e$a` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.o.d.a$a` v0 @kind this) @signature `Lcom/bumptech/glide/load/o/d/a$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2a25c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a25ca.  return @kind void;
}
procedure `com.bumptech.glide.load.m.e` `build`(`com.bumptech.glide.load.o.d.a$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/o/d/a$a;.build:(Ljava/lang/Object;)Lcom/bumptech/glide/load/m/e;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2a2570.  v1:= (`java.nio.ByteBuffer`) v1 @kind object;
  #L2a2574.  call temp:= `build`(v0, v1) @signature `Lcom/bumptech/glide/load/o/d/a$a;.build:(Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/load/m/e;` @kind virtual;
  #L2a257a.  v1:= temp @kind object;
  #L2a257c.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.m.e` `build`(`com.bumptech.glide.load.o.d.a$a` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/bumptech/glide/load/o/d/a$a;.build:(Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/load/m/e;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a2590.  v0:= new `com.bumptech.glide.load.o.d.a`;
  #L2a2594.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/o/d/a;.<init>:(Ljava/nio/ByteBuffer;)V` @kind direct;
  #L2a259a.  return v0 @kind object;
}
procedure `java.lang.Class` `getDataClass`(`com.bumptech.glide.load.o.d.a$a` v1 @kind this) @signature `Lcom/bumptech/glide/load/o/d/a$a;.getDataClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a25ac.  v0:= constclass @type ^`java.nio.ByteBuffer` @kind object;
  #L2a25b0.  return v0 @kind object;
}
