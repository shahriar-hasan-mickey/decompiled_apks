record `com.bumptech.glide.load.o.g.h` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.j` @kind interface {
  `com.bumptech.glide.load.engine.z.e` `com.bumptech.glide.load.o.g.h.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.o.g.h` v0 @kind this, `com.bumptech.glide.load.engine.z.e` v1 @kind object) @signature `Lcom/bumptech/glide/load/o/g/h;.<init>:(Lcom/bumptech/glide/load/engine/z/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2a42fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a4302.  v0.`com.bumptech.glide.load.o.g.h.a` @type ^`com.bumptech.glide.load.engine.z.e` := v1 @kind object;
  #L2a4306.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.u` `decode`(`com.bumptech.glide.load.o.g.h` v0 @kind this, `com.bumptech.glide.m.a` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/o/g/h;.decode:(Lcom/bumptech/glide/m/a;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u;` @AccessFlag PUBLIC {
    temp;

  #L2a42b4.  call temp:= `getNextFrame`(v1) @signature `Lcom/bumptech/glide/m/a;.getNextFrame:()Landroid/graphics/Bitmap;` @kind interface;
  #L2a42ba.  v1:= temp @kind object;
  #L2a42bc.  v2:= v0.`com.bumptech.glide.load.o.g.h.a` @type ^`com.bumptech.glide.load.engine.z.e` @kind object;
  #L2a42c0.  call temp:= `obtain`(v1, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/e;.obtain:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/z/e;)Lcom/bumptech/glide/load/resource/bitmap/e;` @kind static;
  #L2a42c6.  v1:= temp @kind object;
  #L2a42c8.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.engine.u` `decode`(`com.bumptech.glide.load.o.g.h` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/o/g/h;.decode:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2a42dc.  v1:= (`com.bumptech.glide.m.a`) v1 @kind object;
  #L2a42e0.  call temp:= `decode`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/o/g/h;.decode:(Lcom/bumptech/glide/m/a;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u;` @kind virtual;
  #L2a42e6.  v1:= temp @kind object;
  #L2a42e8.  return v1 @kind object;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.o.g.h` v0 @kind this, `com.bumptech.glide.m.a` v1 @kind object, `com.bumptech.glide.load.h` v2 @kind object) @signature `Lcom/bumptech/glide/load/o/g/h;.handles:(Lcom/bumptech/glide/m/a;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC {
    temp;

  #L2a4280.  v1:= 1I;
  #L2a4282.  return v1;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.o.g.h` v0 @kind this, `java.lang.Object` v1 @kind object, `com.bumptech.glide.load.h` v2 @kind object) @signature `Lcom/bumptech/glide/load/o/g/h;.handles:(Ljava/lang/Object;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2a4294.  v1:= (`com.bumptech.glide.m.a`) v1 @kind object;
  #L2a4298.  call temp:= `handles`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/o/g/h;.handles:(Lcom/bumptech/glide/m/a;Lcom/bumptech/glide/load/h;)Z` @kind virtual;
  #L2a429e.  v1:= temp;
  #L2a42a0.  return v1;
}
