record `com.bumptech.glide.load.e$c` @kind class @AccessFlag  extends `com.bumptech.glide.load.e$g` @kind interface {
  `com.bumptech.glide.load.m.m` `com.bumptech.glide.load.e$c.a` @AccessFlag FINAL_SYNTHETIC;
  `com.bumptech.glide.load.engine.z.b` `com.bumptech.glide.load.e$c.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.load.e$c` v0 @kind this, `com.bumptech.glide.load.m.m` v1 @kind object, `com.bumptech.glide.load.engine.z.b` v2 @kind object) @signature `Lcom/bumptech/glide/load/e$c;.<init>:(Lcom/bumptech/glide/load/m/m;Lcom/bumptech/glide/load/engine/z/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L28e44c.  v0.`com.bumptech.glide.load.e$c.a` @type ^`com.bumptech.glide.load.m.m` := v1 @kind object;
  #L28e450.  v0.`com.bumptech.glide.load.e$c.b` @type ^`com.bumptech.glide.load.engine.z.b` := v2 @kind object;
  #L28e454.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28e45a.  return @kind void;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `getType`(`com.bumptech.glide.load.e$c` v4 @kind this, `com.bumptech.glide.load.ImageHeaderParser` v5 @kind object) @signature `Lcom/bumptech/glide/load/e$c;.getType:(Lcom/bumptech/glide/load/ImageHeaderParser;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L28e3a4.  v0:= 0I;
  #L28e3a6.  v1:= new `com.bumptech.glide.load.resource.bitmap.v`;
  #L28e3aa.  v2:= new `java.io.FileInputStream`;
  #L28e3ae.  v3:= v4.`com.bumptech.glide.load.e$c.a` @type ^`com.bumptech.glide.load.m.m` @kind object;
  #L28e3b2.  call temp:= `rewindAndGet`(v3) @signature `Lcom/bumptech/glide/load/m/m;.rewindAndGet:()Landroid/os/ParcelFileDescriptor;` @kind virtual;
  #L28e3b8.  v3:= temp @kind object;
  #L28e3ba.  call temp:= `getFileDescriptor`(v3) @signature `Landroid/os/ParcelFileDescriptor;.getFileDescriptor:()Ljava/io/FileDescriptor;` @kind virtual;
  #L28e3c0.  v3:= temp @kind object;
  #L28e3c2.  call `<init>`(v2, v3) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/FileDescriptor;)V` @kind direct;
  #L28e3c8.  v3:= v4.`com.bumptech.glide.load.e$c.b` @type ^`com.bumptech.glide.load.engine.z.b` @kind object;
  #L28e3cc.  call `<init>`(v1, v2, v3) @signature `Lcom/bumptech/glide/load/resource/bitmap/v;.<init>:(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/z/b;)V` @kind direct;
  #L28e3d2.  call temp:= `getType`(v5, v1) @signature `Lcom/bumptech/glide/load/ImageHeaderParser;.getType:(Ljava/io/InputStream;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @kind interface;
  #L28e3d8.  v5:= temp @kind object;
  #L28e3da.  call `close`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/v;.close:()V` @kind virtual;
  #L28e3e0.  v0:= v4.`com.bumptech.glide.load.e$c.a` @type ^`com.bumptech.glide.load.m.m` @kind object;
  #L28e3e4.  call temp:= `rewindAndGet`(v0) @signature `Lcom/bumptech/glide/load/m/m;.rewindAndGet:()Landroid/os/ParcelFileDescriptor;` @kind virtual;
  #L28e3ea.  return v5 @kind object;
  #L28e3ec.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28e3ee.  v0:= v1 @kind object;
  #L28e3f0.  goto L28e3f4;
  #L28e3f2.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28e3f4.  if v0 == 0 then goto L28e3fe;
  #L28e3f8.  call `close`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/v;.close:()V` @kind virtual;
  #L28e3fe.  v0:= v4.`com.bumptech.glide.load.e$c.a` @type ^`com.bumptech.glide.load.m.m` @kind object;
  #L28e402.  call temp:= `rewindAndGet`(v0) @signature `Lcom/bumptech/glide/load/m/m;.rewindAndGet:()Landroid/os/ParcelFileDescriptor;` @kind virtual;
  #L28e408.  throw v5;
  catch `java.lang.Throwable` @[L28e3a6..L28e3d2] goto L28e3f2;
  catch `java.lang.Throwable` @[L28e3d2..L28e3da] goto L28e3ec;
  catch `java.io.IOException` @[L28e3da..L28e3e0] goto L28e3e0;
  catch `java.io.IOException` @[L28e3f8..L28e3fe] goto L28e3fe;
}
