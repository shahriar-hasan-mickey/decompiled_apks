record `com.bumptech.glide.load.c` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `com.bumptech.glide.load.c` `@@com.bumptech.glide.load.c.f` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.c` `@@com.bumptech.glide.load.c.g` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.c` `@@com.bumptech.glide.load.c.h` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.c`[] `@@com.bumptech.glide.load.c.i` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L28e078.  v0:= new `com.bumptech.glide.load.c`;
  #L28e07c.  v1:= 0I;
  #L28e07e.  v2:= "SOURCE" @kind object;
  #L28e082.  call `<init>`(v0, v2, v1) @signature `Lcom/bumptech/glide/load/c;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L28e088.  `@@com.bumptech.glide.load.c.f` @type ^`com.bumptech.glide.load.c` := v0 @kind object;
  #L28e08c.  v0:= new `com.bumptech.glide.load.c`;
  #L28e090.  v2:= 1I;
  #L28e092.  v3:= "TRANSFORMED" @kind object;
  #L28e096.  call `<init>`(v0, v3, v2) @signature `Lcom/bumptech/glide/load/c;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L28e09c.  `@@com.bumptech.glide.load.c.g` @type ^`com.bumptech.glide.load.c` := v0 @kind object;
  #L28e0a0.  v0:= new `com.bumptech.glide.load.c`;
  #L28e0a4.  v3:= 2I;
  #L28e0a6.  v4:= "NONE" @kind object;
  #L28e0aa.  call `<init>`(v0, v4, v3) @signature `Lcom/bumptech/glide/load/c;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L28e0b0.  `@@com.bumptech.glide.load.c.h` @type ^`com.bumptech.glide.load.c` := v0 @kind object;
  #L28e0b4.  v0:= 3I;
  #L28e0b6.  v0:= new `com.bumptech.glide.load.c`[v0];
  #L28e0ba.  v4:= `@@com.bumptech.glide.load.c.f` @type ^`com.bumptech.glide.load.c` @kind object;
  #L28e0be.  v0[v1]:= v4 @kind object;
  #L28e0c2.  v1:= `@@com.bumptech.glide.load.c.g` @type ^`com.bumptech.glide.load.c` @kind object;
  #L28e0c6.  v0[v2]:= v1 @kind object;
  #L28e0ca.  v1:= `@@com.bumptech.glide.load.c.h` @type ^`com.bumptech.glide.load.c` @kind object;
  #L28e0ce.  v0[v3]:= v1 @kind object;
  #L28e0d2.  `@@com.bumptech.glide.load.c.i` @type ^`com.bumptech.glide.load.c`[] := v0 @kind object;
  #L28e0d6.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.c` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lcom/bumptech/glide/load/c;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L28e0e8.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L28e0ee.  return @kind void;
}
procedure `com.bumptech.glide.load.c` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/bumptech/glide/load/c;.valueOf:(Ljava/lang/String;)Lcom/bumptech/glide/load/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L28e030.  v0:= constclass @type ^`com.bumptech.glide.load.c` @kind object;
  #L28e034.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L28e03a.  v1:= temp @kind object;
  #L28e03c.  v1:= (`com.bumptech.glide.load.c`) v1 @kind object;
  #L28e040.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.c`[] `values`() @signature `Lcom/bumptech/glide/load/c;.values:()[Lcom/bumptech/glide/load/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L28e054.  v0:= `@@com.bumptech.glide.load.c.i` @type ^`com.bumptech.glide.load.c`[] @kind object;
  #L28e058.  call temp:= `clone`(v0) @signature `[Lcom/bumptech/glide/load/c;.clone:()Ljava/lang/Object;` @kind virtual;
  #L28e05e.  v0:= temp @kind object;
  #L28e060.  v0:= (`com.bumptech.glide.load.c`[]) v0 @kind object;
  #L28e064.  return v0 @kind object;
}
