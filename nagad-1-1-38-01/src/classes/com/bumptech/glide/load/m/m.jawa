record `com.bumptech.glide.load.m.m` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.m.e` @kind interface {
  `com.bumptech.glide.load.m.m$b` `com.bumptech.glide.load.m.m.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.m.m` v1 @kind this, `android.os.ParcelFileDescriptor` v2 @kind object) @signature `Lcom/bumptech/glide/load/m/m;.<init>:(Landroid/os/ParcelFileDescriptor;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L28fce8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28fcee.  v0:= new `com.bumptech.glide.load.m.m$b`;
  #L28fcf2.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/m/m$b;.<init>:(Landroid/os/ParcelFileDescriptor;)V` @kind direct;
  #L28fcf8.  v1.`com.bumptech.glide.load.m.m.a` @type ^`com.bumptech.glide.load.m.m$b` := v0 @kind object;
  #L28fcfc.  return @kind void;
}
procedure `boolean` `isSupported`() @signature `Lcom/bumptech/glide/load/m/m;.isSupported:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L28fca8.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L28fcac.  v1:= 21I;
  #L28fcb0.  if v0 < v1 then goto L28fcb8;
  #L28fcb4.  v0:= 1I;
  #L28fcb6.  goto L28fcba;
  #L28fcb8.  v0:= 0I;
  #L28fcba.  return v0;
}
procedure `void` `cleanup`(`com.bumptech.glide.load.m.m` v0 @kind this) @signature `Lcom/bumptech/glide/load/m/m;.cleanup:()V` @AccessFlag PUBLIC {
    temp;

  #L28fd10.  return @kind void;
}
procedure `android.os.ParcelFileDescriptor` `rewindAndGet`(`com.bumptech.glide.load.m.m` v1 @kind this) @signature `Lcom/bumptech/glide/load/m/m;.rewindAndGet:()Landroid/os/ParcelFileDescriptor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28fc88.  v0:= v1.`com.bumptech.glide.load.m.m.a` @type ^`com.bumptech.glide.load.m.m$b` @kind object;
  #L28fc8c.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/load/m/m$b;.a:()Landroid/os/ParcelFileDescriptor;` @kind virtual;
  #L28fc92.  v0:= temp @kind object;
  #L28fc94.  return v0 @kind object;
}
procedure `java.lang.Object` `rewindAndGet`(`com.bumptech.glide.load.m.m` v1 @kind this) @signature `Lcom/bumptech/glide/load/m/m;.rewindAndGet:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L28fccc.  call temp:= `rewindAndGet`(v1) @signature `Lcom/bumptech/glide/load/m/m;.rewindAndGet:()Landroid/os/ParcelFileDescriptor;` @kind virtual;
  #L28fcd2.  v0:= temp @kind object;
  #L28fcd4.  return v0 @kind object;
}
