record `com.bumptech.glide.load.n.b$c` @kind class @AccessFlag  extends `com.bumptech.glide.load.m.d` @kind interface {
  `byte`[] `com.bumptech.glide.load.n.b$c.f` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.n.b$b` `com.bumptech.glide.load.n.b$c.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.b$c` v0 @kind this, `byte`[] v1 @kind object, `com.bumptech.glide.load.n.b$b` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/b$c;.<init>:([BLcom/bumptech/glide/load/n/b$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2998f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2998fa.  v0.`com.bumptech.glide.load.n.b$c.f` @type ^`byte`[] := v1 @kind object;
  #L2998fe.  v0.`com.bumptech.glide.load.n.b$c.g` @type ^`com.bumptech.glide.load.n.b$b` := v2 @kind object;
  #L299902.  return @kind void;
}
procedure `void` `cancel`(`com.bumptech.glide.load.n.b$c` v0 @kind this) @signature `Lcom/bumptech/glide/load/n/b$c;.cancel:()V` @AccessFlag PUBLIC {
    temp;

  #L299914.  return @kind void;
}
procedure `void` `cleanup`(`com.bumptech.glide.load.n.b$c` v0 @kind this) @signature `Lcom/bumptech/glide/load/n/b$c;.cleanup:()V` @AccessFlag PUBLIC {
    temp;

  #L299928.  return @kind void;
}
procedure `java.lang.Class` `getDataClass`(`com.bumptech.glide.load.n.b$c` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/b$c;.getDataClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2998d4.  v0:= v1.`com.bumptech.glide.load.n.b$c.g` @type ^`com.bumptech.glide.load.n.b$b` @kind object;
  #L2998d8.  call temp:= `getDataClass`(v0) @signature `Lcom/bumptech/glide/load/n/b$b;.getDataClass:()Ljava/lang/Class;` @kind interface;
  #L2998de.  v0:= temp @kind object;
  #L2998e0.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.a` `getDataSource`(`com.bumptech.glide.load.n.b$c` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/b$c;.getDataSource:()Lcom/bumptech/glide/load/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2998bc.  v0:= `@@com.bumptech.glide.load.a.f` @type ^`com.bumptech.glide.load.a` @kind object;
  #L2998c0.  return v0 @kind object;
}
procedure `void` `loadData`(`com.bumptech.glide.load.n.b$c` v1 @kind this, `com.bumptech.glide.g` v2 @kind object, `com.bumptech.glide.load.m.d$a` v3 @kind object) @signature `Lcom/bumptech/glide/load/n/b$c;.loadData:(Lcom/bumptech/glide/g;Lcom/bumptech/glide/load/m/d$a;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29993c.  v2:= v1.`com.bumptech.glide.load.n.b$c.g` @type ^`com.bumptech.glide.load.n.b$b` @kind object;
  #L299940.  v0:= v1.`com.bumptech.glide.load.n.b$c.f` @type ^`byte`[] @kind object;
  #L299944.  call temp:= `convert`(v2, v0) @signature `Lcom/bumptech/glide/load/n/b$b;.convert:([B)Ljava/lang/Object;` @kind interface;
  #L29994a.  v2:= temp @kind object;
  #L29994c.  call `onDataReady`(v3, v2) @signature `Lcom/bumptech/glide/load/m/d$a;.onDataReady:(Ljava/lang/Object;)V` @kind interface;
  #L299952.  return @kind void;
}
