record `com.bumptech.glide.load.n.y.a` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.n.n` @kind interface {
  `com.bumptech.glide.load.n.m` `com.bumptech.glide.load.n.y.a.a` @AccessFlag PRIVATE_FINAL;
}
global `com.bumptech.glide.load.g` `@@com.bumptech.glide.load.n.y.a.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/n/y/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L29c78c.  v0:= 2500I;
  #L29c790.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L29c796.  v0:= temp @kind object;
  #L29c798.  v1:= "com.bumptech.glide.load.model.stream.HttpGlideUrlLoader.Timeout" @kind object;
  #L29c79c.  call temp:= `memory`(v1, v0) @signature `Lcom/bumptech/glide/load/g;.memory:(Ljava/lang/String;Ljava/lang/Object;)Lcom/bumptech/glide/load/g;` @kind static;
  #L29c7a2.  v0:= temp @kind object;
  #L29c7a4.  `@@com.bumptech.glide.load.n.y.a.b` @type ^`com.bumptech.glide.load.g` := v0 @kind object;
  #L29c7a8.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.y.a` v0 @kind this, `com.bumptech.glide.load.n.m` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/y/a;.<init>:(Lcom/bumptech/glide/load/n/m;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L29c7bc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29c7c2.  v0.`com.bumptech.glide.load.n.y.a.a` @type ^`com.bumptech.glide.load.n.m` := v1 @kind object;
  #L29c7c6.  return @kind void;
}
procedure `com.bumptech.glide.load.n.n$a` `buildLoadData`(`com.bumptech.glide.load.n.y.a` v0 @kind this, `com.bumptech.glide.load.n.g` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/n/y/a;.buildLoadData:(Lcom/bumptech/glide/load/n/g;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @AccessFlag PUBLIC {
    temp;

  #L29c704.  v2:= v0.`com.bumptech.glide.load.n.y.a.a` @type ^`com.bumptech.glide.load.n.m` @kind object;
  #L29c708.  if v2 == 0 then goto L29c72c;
  #L29c70c.  v3:= 0I;
  #L29c70e.  call temp:= `get`(v2, v1, v3, v3) @signature `Lcom/bumptech/glide/load/n/m;.get:(Ljava/lang/Object;II)Ljava/lang/Object;` @kind virtual;
  #L29c714.  v2:= temp @kind object;
  #L29c716.  v2:= (`com.bumptech.glide.load.n.g`) v2 @kind object;
  #L29c71a.  if v2 != 0 then goto L29c72a;
  #L29c71e.  v2:= v0.`com.bumptech.glide.load.n.y.a.a` @type ^`com.bumptech.glide.load.n.m` @kind object;
  #L29c722.  call `put`(v2, v1, v3, v3, v1) @signature `Lcom/bumptech/glide/load/n/m;.put:(Ljava/lang/Object;IILjava/lang/Object;)V` @kind virtual;
  #L29c728.  goto L29c72c;
  #L29c72a.  v1:= v2 @kind object;
  #L29c72c.  v2:= `@@com.bumptech.glide.load.n.y.a.b` @type ^`com.bumptech.glide.load.g` @kind object;
  #L29c730.  call temp:= `get`(v4, v2) @signature `Lcom/bumptech/glide/load/h;.get:(Lcom/bumptech/glide/load/g;)Ljava/lang/Object;` @kind virtual;
  #L29c736.  v2:= temp @kind object;
  #L29c738.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L29c73c.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L29c742.  v2:= temp;
  #L29c744.  v3:= new `com.bumptech.glide.load.n.n$a`;
  #L29c748.  v4:= new `com.bumptech.glide.load.m.j`;
  #L29c74c.  call `<init>`(v4, v1, v2) @signature `Lcom/bumptech/glide/load/m/j;.<init>:(Lcom/bumptech/glide/load/n/g;I)V` @kind direct;
  #L29c752.  call `<init>`(v3, v1, v4) @signature `Lcom/bumptech/glide/load/n/n$a;.<init>:(Lcom/bumptech/glide/load/f;Lcom/bumptech/glide/load/m/d;)V` @kind direct;
  #L29c758.  return v3 @kind object;
}
procedure `com.bumptech.glide.load.n.n$a` `buildLoadData`(`com.bumptech.glide.load.n.y.a` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/n/y/a;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L29c76c.  v1:= (`com.bumptech.glide.load.n.g`) v1 @kind object;
  #L29c770.  call temp:= `buildLoadData`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/n/y/a;.buildLoadData:(Lcom/bumptech/glide/load/n/g;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @kind virtual;
  #L29c776.  v1:= temp @kind object;
  #L29c778.  return v1 @kind object;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.n.y.a` v0 @kind this, `com.bumptech.glide.load.n.g` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/y/a;.handles:(Lcom/bumptech/glide/load/n/g;)Z` @AccessFlag PUBLIC {
    temp;

  #L29c6d0.  v1:= 1I;
  #L29c6d2.  return v1;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.n.y.a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/y/a;.handles:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L29c6e4.  v1:= (`com.bumptech.glide.load.n.g`) v1 @kind object;
  #L29c6e8.  call temp:= `handles`(v0, v1) @signature `Lcom/bumptech/glide/load/n/y/a;.handles:(Lcom/bumptech/glide/load/n/g;)Z` @kind virtual;
  #L29c6ee.  v1:= temp;
  #L29c6f0.  return v1;
}
