record `com.bumptech.glide.load.n.t` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.d` @kind interface {
  `com.bumptech.glide.load.engine.z.b` `com.bumptech.glide.load.n.t.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.t` v0 @kind this, `com.bumptech.glide.load.engine.z.b` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/t;.<init>:(Lcom/bumptech/glide/load/engine/z/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L29bf94.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29bf9a.  v0.`com.bumptech.glide.load.n.t.a` @type ^`com.bumptech.glide.load.engine.z.b` := v1 @kind object;
  #L29bf9e.  return @kind void;
}
procedure `boolean` `encode`(`com.bumptech.glide.load.n.t` v4 @kind this, `java.io.InputStream` v5 @kind object, `java.io.File` v6 @kind object, `com.bumptech.glide.load.h` v7 @kind object) @signature `Lcom/bumptech/glide/load/n/t;.encode:(Ljava/io/InputStream;Ljava/io/File;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L29be74.  v7:= "StreamEncoder" @kind object;
  #L29be78.  v0:= v4.`com.bumptech.glide.load.n.t.a` @type ^`com.bumptech.glide.load.engine.z.b` @kind object;
  #L29be7c.  v1:= constclass @type ^`byte`[] @kind object;
  #L29be80.  v2:= 65536I;
  #L29be84.  call temp:= `get`(v0, v2, v1) @signature `Lcom/bumptech/glide/load/engine/z/b;.get:(ILjava/lang/Class;)Ljava/lang/Object;` @kind interface;
  #L29be8a.  v0:= temp @kind object;
  #L29be8c.  v0:= (`byte`[]) v0 @kind object;
  #L29be90.  v1:= 0I;
  #L29be92.  v2:= 0I;
  #L29be94.  v3:= new `java.io.FileOutputStream`;
  #L29be98.  call `<init>`(v3, v6) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L29be9e.  call temp:= `read`(v5, v0) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L29bea4.  v6:= temp;
  #L29bea6.  v2:= -1I;
  #L29bea8.  if v6 == v2 then goto L29beb4;
  #L29beac.  call `write`(v3, v0, v1, v6) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L29beb2.  goto L29be9e;
  #L29beb4.  call `close`(v3) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L29beba.  v1:= 1I;
  #L29bebc.  call `close`(v3) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L29bec2.  goto L29bef8;
  #L29bec4.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L29bec6.  v2:= v3 @kind object;
  #L29bec8.  goto L29bf04;
  #L29beca.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L29becc.  v2:= v3 @kind object;
  #L29bece.  goto L29bed6;
  #L29bed0.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L29bed2.  goto L29bf04;
  #L29bed4.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L29bed6.  v6:= 3I;
  #L29bed8.  call temp:= `isLoggable`(v7, v6) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L29bede.  v6:= temp;
  #L29bee0.  if v6 == 0 then goto L29beee;
  #L29bee4.  v6:= "Failed to encode data onto the OutputStream" @kind object;
  #L29bee8.  call temp:= `d`(v7, v6, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L29beee.  if v2 == 0 then goto L29bef8;
  #L29bef2.  call `close`(v2) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L29bef8.  v5:= v4.`com.bumptech.glide.load.n.t.a` @type ^`com.bumptech.glide.load.engine.z.b` @kind object;
  #L29befc.  call `put`(v5, v0) @signature `Lcom/bumptech/glide/load/engine/z/b;.put:(Ljava/lang/Object;)V` @kind interface;
  #L29bf02.  return v1;
  #L29bf04.  if v2 == 0 then goto L29bf0e;
  #L29bf08.  call `close`(v2) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L29bf0e.  v6:= v4.`com.bumptech.glide.load.n.t.a` @type ^`com.bumptech.glide.load.engine.z.b` @kind object;
  #L29bf12.  call `put`(v6, v0) @signature `Lcom/bumptech/glide/load/engine/z/b;.put:(Ljava/lang/Object;)V` @kind interface;
  #L29bf18.  throw v5;
  catch `java.io.IOException` @[L29be94..L29be9e] goto L29bed4;
  catch `java.lang.Throwable` @[L29be94..L29be9e] goto L29bed0;
  catch `java.io.IOException` @[L29be9e..L29beba] goto L29beca;
  catch `java.lang.Throwable` @[L29be9e..L29beba] goto L29bec4;
  catch `java.io.IOException` @[L29bebc..L29bec2] goto L29bef8;
  catch `java.lang.Throwable` @[L29bed8..L29beee] goto L29bed0;
  catch `java.io.IOException` @[L29bef2..L29bef8] goto L29bef8;
  catch `java.io.IOException` @[L29bf08..L29bf0e] goto L29bf0e;
}
procedure `boolean` `encode`(`com.bumptech.glide.load.n.t` v0 @kind this, `java.lang.Object` v1 @kind object, `java.io.File` v2 @kind object, `com.bumptech.glide.load.h` v3 @kind object) @signature `Lcom/bumptech/glide/load/n/t;.encode:(Ljava/lang/Object;Ljava/io/File;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L29bf74.  v1:= (`java.io.InputStream`) v1 @kind object;
  #L29bf78.  call temp:= `encode`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/load/n/t;.encode:(Ljava/io/InputStream;Ljava/io/File;Lcom/bumptech/glide/load/h;)Z` @kind virtual;
  #L29bf7e.  v1:= temp;
  #L29bf80.  return v1;
}
