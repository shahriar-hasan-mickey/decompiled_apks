record `com.bumptech.glide.load.n.w` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.n.n` @kind interface {
  `com.bumptech.glide.load.n.w$c` `com.bumptech.glide.load.n.w.a` @AccessFlag PRIVATE_FINAL;
}
global `java.util.Set` `@@com.bumptech.glide.load.n.w.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/n/w;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L29c4ec.  v0:= new `java.util.HashSet`;
  #L29c4f0.  v1:= "file" @kind object;
  #L29c4f4.  v2:= "android.resource" @kind object;
  #L29c4f8.  v3:= "content" @kind object;
  #L29c4fc.  temp:= new `java.lang.String`[v1, v2, v3];
  #L29c502.  v1:= temp @kind object;
  #L29c504.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L29c50a.  v1:= temp @kind object;
  #L29c50c.  call `<init>`(v0, v1) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L29c512.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L29c518.  v0:= temp @kind object;
  #L29c51a.  `@@com.bumptech.glide.load.n.w.b` @type ^`java.util.Set` := v0 @kind object;
  #L29c51e.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.w` v0 @kind this, `com.bumptech.glide.load.n.w$c` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/w;.<init>:(Lcom/bumptech/glide/load/n/w$c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L29c530.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29c536.  v0.`com.bumptech.glide.load.n.w.a` @type ^`com.bumptech.glide.load.n.w$c` := v1 @kind object;
  #L29c53a.  return @kind void;
}
procedure `com.bumptech.glide.load.n.n$a` `buildLoadData`(`com.bumptech.glide.load.n.w` v0 @kind this, `android.net.Uri` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/n/w;.buildLoadData:(Landroid/net/Uri;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @AccessFlag PUBLIC {
    temp;

  #L29c498.  v2:= new `com.bumptech.glide.load.n.n$a`;
  #L29c49c.  v3:= new `com.bumptech.glide.r.b`;
  #L29c4a0.  call `<init>`(v3, v1) @signature `Lcom/bumptech/glide/r/b;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L29c4a6.  v4:= v0.`com.bumptech.glide.load.n.w.a` @type ^`com.bumptech.glide.load.n.w$c` @kind object;
  #L29c4aa.  call temp:= `build`(v4, v1) @signature `Lcom/bumptech/glide/load/n/w$c;.build:(Landroid/net/Uri;)Lcom/bumptech/glide/load/m/d;` @kind interface;
  #L29c4b0.  v1:= temp @kind object;
  #L29c4b2.  call `<init>`(v2, v3, v1) @signature `Lcom/bumptech/glide/load/n/n$a;.<init>:(Lcom/bumptech/glide/load/f;Lcom/bumptech/glide/load/m/d;)V` @kind direct;
  #L29c4b8.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.n.n$a` `buildLoadData`(`com.bumptech.glide.load.n.w` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/n/w;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L29c4cc.  v1:= (`android.net.Uri`) v1 @kind object;
  #L29c4d0.  call temp:= `buildLoadData`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/n/w;.buildLoadData:(Landroid/net/Uri;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @kind virtual;
  #L29c4d6.  v1:= temp @kind object;
  #L29c4d8.  return v1 @kind object;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.n.w` v1 @kind this, `android.net.Uri` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/w;.handles:(Landroid/net/Uri;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29c450.  v0:= `@@com.bumptech.glide.load.n.w.b` @type ^`java.util.Set` @kind object;
  #L29c454.  call temp:= `getScheme`(v2) @signature `Landroid/net/Uri;.getScheme:()Ljava/lang/String;` @kind virtual;
  #L29c45a.  v2:= temp @kind object;
  #L29c45c.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L29c462.  v2:= temp;
  #L29c464.  return v2;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.n.w` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/w;.handles:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L29c478.  v1:= (`android.net.Uri`) v1 @kind object;
  #L29c47c.  call temp:= `handles`(v0, v1) @signature `Lcom/bumptech/glide/load/n/w;.handles:(Landroid/net/Uri;)Z` @kind virtual;
  #L29c482.  v1:= temp;
  #L29c484.  return v1;
}
