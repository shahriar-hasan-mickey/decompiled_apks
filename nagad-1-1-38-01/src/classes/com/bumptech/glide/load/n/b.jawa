record `com.bumptech.glide.load.n.b` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.n.n` @kind interface {
  `com.bumptech.glide.load.n.b$b` `com.bumptech.glide.load.n.b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.b` v0 @kind this, `com.bumptech.glide.load.n.b$b` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/b;.<init>:(Lcom/bumptech/glide/load/n/b$b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L299a94.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L299a9a.  v0.`com.bumptech.glide.load.n.b.a` @type ^`com.bumptech.glide.load.n.b$b` := v1 @kind object;
  #L299a9e.  return @kind void;
}
procedure `com.bumptech.glide.load.n.n$a` `buildLoadData`(`com.bumptech.glide.load.n.b` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/n/b;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L299a74.  v1:= (`byte`[]) v1 @kind object;
  #L299a78.  call temp:= `buildLoadData`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/n/b;.buildLoadData:([BIILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @kind virtual;
  #L299a7e.  v1:= temp @kind object;
  #L299a80.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.n.n$a` `buildLoadData`(`com.bumptech.glide.load.n.b` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 , `com.bumptech.glide.load.h` v5 @kind object) @signature `Lcom/bumptech/glide/load/n/b;.buildLoadData:([BIILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L299a40.  v3:= new `com.bumptech.glide.load.n.n$a`;
  #L299a44.  v4:= new `com.bumptech.glide.r.b`;
  #L299a48.  call `<init>`(v4, v2) @signature `Lcom/bumptech/glide/r/b;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L299a4e.  v5:= new `com.bumptech.glide.load.n.b$c`;
  #L299a52.  v0:= v1.`com.bumptech.glide.load.n.b.a` @type ^`com.bumptech.glide.load.n.b$b` @kind object;
  #L299a56.  call `<init>`(v5, v2, v0) @signature `Lcom/bumptech/glide/load/n/b$c;.<init>:([BLcom/bumptech/glide/load/n/b$b;)V` @kind direct;
  #L299a5c.  call `<init>`(v3, v4, v5) @signature `Lcom/bumptech/glide/load/n/n$a;.<init>:(Lcom/bumptech/glide/load/f;Lcom/bumptech/glide/load/m/d;)V` @kind direct;
  #L299a62.  return v3 @kind object;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.n.b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/b;.handles:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L299a20.  v1:= (`byte`[]) v1 @kind object;
  #L299a24.  call temp:= `handles`(v0, v1) @signature `Lcom/bumptech/glide/load/n/b;.handles:([B)Z` @kind virtual;
  #L299a2a.  v1:= temp;
  #L299a2c.  return v1;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.n.b` v0 @kind this, `byte`[] v1 @kind object) @signature `Lcom/bumptech/glide/load/n/b;.handles:([B)Z` @AccessFlag PUBLIC {
    temp;

  #L299a0c.  v1:= 1I;
  #L299a0e.  return v1;
}
