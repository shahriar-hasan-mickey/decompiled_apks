record `com.bumptech.glide.load.n.g` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.f` @kind interface {
  `com.bumptech.glide.load.n.h` `com.bumptech.glide.load.n.g.b` @AccessFlag PRIVATE_FINAL;
  `java.net.URL` `com.bumptech.glide.load.n.g.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.bumptech.glide.load.n.g.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.bumptech.glide.load.n.g.e` @AccessFlag PRIVATE;
  `java.net.URL` `com.bumptech.glide.load.n.g.f` @AccessFlag PRIVATE;
  `byte`[] `com.bumptech.glide.load.n.g.g` @AccessFlag PRIVATE_VOLATILE;
  `int` `com.bumptech.glide.load.n.g.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.g` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/g;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L29a500.  v0:= `@@com.bumptech.glide.load.n.h.a` @type ^`com.bumptech.glide.load.n.h` @kind object;
  #L29a504.  call `<init>`(v1, v2, v0) @signature `Lcom/bumptech/glide/load/n/g;.<init>:(Ljava/lang/String;Lcom/bumptech/glide/load/n/h;)V` @kind direct;
  #L29a50a.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.g` v1 @kind this, `java.lang.String` v2 @kind object, `com.bumptech.glide.load.n.h` v3 @kind object) @signature `Lcom/bumptech/glide/load/n/g;.<init>:(Ljava/lang/String;Lcom/bumptech/glide/load/n/h;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L29a51c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29a522.  v0:= 0I;
  #L29a524.  v1.`com.bumptech.glide.load.n.g.c` @type ^`java.net.URL` := v0 @kind object;
  #L29a528.  call temp:= `checkNotEmpty`(v2) @signature `Lcom/bumptech/glide/s/j;.checkNotEmpty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L29a52e.  v1.`com.bumptech.glide.load.n.g.d` @type ^`java.lang.String` := v2 @kind object;
  #L29a532.  call temp:= `checkNotNull`(v3) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L29a538.  v3:= (`com.bumptech.glide.load.n.h`) v3 @kind object;
  #L29a53c.  v1.`com.bumptech.glide.load.n.g.b` @type ^`com.bumptech.glide.load.n.h` := v3 @kind object;
  #L29a540.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.g` v1 @kind this, `java.net.URL` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/g;.<init>:(Ljava/net/URL;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L29a554.  v0:= `@@com.bumptech.glide.load.n.h.a` @type ^`com.bumptech.glide.load.n.h` @kind object;
  #L29a558.  call `<init>`(v1, v2, v0) @signature `Lcom/bumptech/glide/load/n/g;.<init>:(Ljava/net/URL;Lcom/bumptech/glide/load/n/h;)V` @kind direct;
  #L29a55e.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.g` v0 @kind this, `java.net.URL` v1 @kind object, `com.bumptech.glide.load.n.h` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/g;.<init>:(Ljava/net/URL;Lcom/bumptech/glide/load/n/h;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L29a570.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29a576.  call temp:= `checkNotNull`(v1) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L29a57c.  v1:= (`java.net.URL`) v1 @kind object;
  #L29a580.  v0.`com.bumptech.glide.load.n.g.c` @type ^`java.net.URL` := v1 @kind object;
  #L29a584.  v1:= 0I;
  #L29a586.  v0.`com.bumptech.glide.load.n.g.d` @type ^`java.lang.String` := v1 @kind object;
  #L29a58a.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L29a590.  v2:= (`com.bumptech.glide.load.n.h`) v2 @kind object;
  #L29a594.  v0.`com.bumptech.glide.load.n.g.b` @type ^`com.bumptech.glide.load.n.h` := v2 @kind object;
  #L29a598.  return @kind void;
}
procedure `byte`[] `a`(`com.bumptech.glide.load.n.g` v2 @kind this) @signature `Lcom/bumptech/glide/load/n/g;.a:()[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L29a360.  v0:= v2.`com.bumptech.glide.load.n.g.g` @type ^`byte`[] @kind object;
  #L29a364.  if v0 != 0 then goto L29a380;
  #L29a368.  call temp:= `getCacheKey`(v2) @signature `Lcom/bumptech/glide/load/n/g;.getCacheKey:()Ljava/lang/String;` @kind virtual;
  #L29a36e.  v0:= temp @kind object;
  #L29a370.  v1:= `@@com.bumptech.glide.load.f.a` @type ^`java.nio.charset.Charset` @kind object;
  #L29a374.  call temp:= `getBytes`(v0, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L29a37a.  v0:= temp @kind object;
  #L29a37c.  v2.`com.bumptech.glide.load.n.g.g` @type ^`byte`[] := v0 @kind object;
  #L29a380.  v0:= v2.`com.bumptech.glide.load.n.g.g` @type ^`byte`[] @kind object;
  #L29a384.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`com.bumptech.glide.load.n.g` v2 @kind this) @signature `Lcom/bumptech/glide/load/n/g;.b:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L29a418.  v0:= v2.`com.bumptech.glide.load.n.g.e` @type ^`java.lang.String` @kind object;
  #L29a41c.  call temp:= `isEmpty`(v0) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L29a422.  v0:= temp;
  #L29a424.  if v0 == 0 then goto L29a45e;
  #L29a428.  v0:= v2.`com.bumptech.glide.load.n.g.d` @type ^`java.lang.String` @kind object;
  #L29a42c.  call temp:= `isEmpty`(v0) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L29a432.  v1:= temp;
  #L29a434.  if v1 == 0 then goto L29a44e;
  #L29a438.  v0:= v2.`com.bumptech.glide.load.n.g.c` @type ^`java.net.URL` @kind object;
  #L29a43c.  call temp:= `checkNotNull`(v0) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L29a442.  v0:= (`java.net.URL`) v0 @kind object;
  #L29a446.  call temp:= `toString`(v0) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L29a44c.  v0:= temp @kind object;
  #L29a44e.  v1:= "@#&=*+-_.,:!?()/~'%;$" @kind object;
  #L29a452.  call temp:= `encode`(v0, v1) @signature `Landroid/net/Uri;.encode:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L29a458.  v0:= temp @kind object;
  #L29a45a.  v2.`com.bumptech.glide.load.n.g.e` @type ^`java.lang.String` := v0 @kind object;
  #L29a45e.  v0:= v2.`com.bumptech.glide.load.n.g.e` @type ^`java.lang.String` @kind object;
  #L29a462.  return v0 @kind object;
}
procedure `java.net.URL` `c`(`com.bumptech.glide.load.n.g` v2 @kind this) @signature `Lcom/bumptech/glide/load/n/g;.c:()Ljava/net/URL;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L29a490.  v0:= v2.`com.bumptech.glide.load.n.g.f` @type ^`java.net.URL` @kind object;
  #L29a494.  if v0 != 0 then goto L29a4ae;
  #L29a498.  v0:= new `java.net.URL`;
  #L29a49c.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/load/n/g;.b:()Ljava/lang/String;` @kind direct;
  #L29a4a2.  v1:= temp @kind object;
  #L29a4a4.  call `<init>`(v0, v1) @signature `Ljava/net/URL;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L29a4aa.  v2.`com.bumptech.glide.load.n.g.f` @type ^`java.net.URL` := v0 @kind object;
  #L29a4ae.  v0:= v2.`com.bumptech.glide.load.n.g.f` @type ^`java.net.URL` @kind object;
  #L29a4b2.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.n.g` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/load/n/g;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L29a30c.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.load.n.g` @kind boolean;
  #L29a310.  v1:= 0I;
  #L29a312.  if v0 == 0 then goto L29a34c;
  #L29a316.  v4:= (`com.bumptech.glide.load.n.g`) v4 @kind object;
  #L29a31a.  call temp:= `getCacheKey`(v3) @signature `Lcom/bumptech/glide/load/n/g;.getCacheKey:()Ljava/lang/String;` @kind virtual;
  #L29a320.  v0:= temp @kind object;
  #L29a322.  call temp:= `getCacheKey`(v4) @signature `Lcom/bumptech/glide/load/n/g;.getCacheKey:()Ljava/lang/String;` @kind virtual;
  #L29a328.  v2:= temp @kind object;
  #L29a32a.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L29a330.  v0:= temp;
  #L29a332.  if v0 == 0 then goto L29a34c;
  #L29a336.  v0:= v3.`com.bumptech.glide.load.n.g.b` @type ^`com.bumptech.glide.load.n.h` @kind object;
  #L29a33a.  v4:= v4.`com.bumptech.glide.load.n.g.b` @type ^`com.bumptech.glide.load.n.h` @kind object;
  #L29a33e.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L29a344.  v4:= temp;
  #L29a346.  if v4 == 0 then goto L29a34c;
  #L29a34a.  v1:= 1I;
  #L29a34c.  return v1;
}
procedure `java.lang.String` `getCacheKey`(`com.bumptech.glide.load.n.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/g;.getCacheKey:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29a3e4.  v0:= v1.`com.bumptech.glide.load.n.g.d` @type ^`java.lang.String` @kind object;
  #L29a3e8.  if v0 == 0 then goto L29a3ee;
  #L29a3ec.  goto L29a404;
  #L29a3ee.  v0:= v1.`com.bumptech.glide.load.n.g.c` @type ^`java.net.URL` @kind object;
  #L29a3f2.  call temp:= `checkNotNull`(v0) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L29a3f8.  v0:= (`java.net.URL`) v0 @kind object;
  #L29a3fc.  call temp:= `toString`(v0) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L29a402.  v0:= temp @kind object;
  #L29a404.  return v0 @kind object;
}
procedure `java.util.Map` `getHeaders`(`com.bumptech.glide.load.n.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/g;.getHeaders:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29a4e0.  v0:= v1.`com.bumptech.glide.load.n.g.b` @type ^`com.bumptech.glide.load.n.h` @kind object;
  #L29a4e4.  call temp:= `getHeaders`(v0) @signature `Lcom/bumptech/glide/load/n/h;.getHeaders:()Ljava/util/Map;` @kind interface;
  #L29a4ea.  v0:= temp @kind object;
  #L29a4ec.  return v0 @kind object;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.n.g` v2 @kind this) @signature `Lcom/bumptech/glide/load/n/g;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L29a398.  v0:= v2.`com.bumptech.glide.load.n.g.h` @type ^`int`;
  #L29a39c.  if v0 != 0 then goto L29a3ce;
  #L29a3a0.  call temp:= `getCacheKey`(v2) @signature `Lcom/bumptech/glide/load/n/g;.getCacheKey:()Ljava/lang/String;` @kind virtual;
  #L29a3a6.  v0:= temp @kind object;
  #L29a3a8.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L29a3ae.  v0:= temp;
  #L29a3b0.  v2.`com.bumptech.glide.load.n.g.h` @type ^`int` := v0;
  #L29a3b4.  v0:= v2.`com.bumptech.glide.load.n.g.h` @type ^`int`;
  #L29a3b8.  v0:= v0 * 31;
  #L29a3bc.  v1:= v2.`com.bumptech.glide.load.n.g.b` @type ^`com.bumptech.glide.load.n.h` @kind object;
  #L29a3c0.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L29a3c6.  v1:= temp;
  #L29a3c8.  v0:= v0 + v1 @kind int;
  #L29a3ca.  v2.`com.bumptech.glide.load.n.g.h` @type ^`int` := v0;
  #L29a3ce.  v0:= v2.`com.bumptech.glide.load.n.g.h` @type ^`int`;
  #L29a3d2.  return v0;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.n.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/g;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29a474.  call temp:= `getCacheKey`(v1) @signature `Lcom/bumptech/glide/load/n/g;.getCacheKey:()Ljava/lang/String;` @kind virtual;
  #L29a47a.  v0:= temp @kind object;
  #L29a47c.  return v0 @kind object;
}
procedure `java.net.URL` `toURL`(`com.bumptech.glide.load.n.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/g;.toURL:()Ljava/net/URL;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29a4c4.  call temp:= `c`(v1) @signature `Lcom/bumptech/glide/load/n/g;.c:()Ljava/net/URL;` @kind direct;
  #L29a4ca.  v0:= temp @kind object;
  #L29a4cc.  return v0 @kind object;
}
procedure `void` `updateDiskCacheKey`(`com.bumptech.glide.load.n.g` v1 @kind this, `java.security.MessageDigest` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/g;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29a5ac.  call temp:= `a`(v1) @signature `Lcom/bumptech/glide/load/n/g;.a:()[B` @kind direct;
  #L29a5b2.  v0:= temp @kind object;
  #L29a5b4.  call `update`(v2, v0) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L29a5ba.  return @kind void;
}
