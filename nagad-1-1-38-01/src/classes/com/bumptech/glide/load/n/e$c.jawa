record `com.bumptech.glide.load.n.e$c` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.n.o` @kind interface {
  `com.bumptech.glide.load.n.e$a` `com.bumptech.glide.load.n.e$c.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.e$c` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/e$c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L299ef8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L299efe.  v0:= new `com.bumptech.glide.load.n.e$c$a`;
  #L299f02.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/n/e$c$a;.<init>:(Lcom/bumptech/glide/load/n/e$c;)V` @kind direct;
  #L299f08.  v1.`com.bumptech.glide.load.n.e$c.a` @type ^`com.bumptech.glide.load.n.e$a` := v0 @kind object;
  #L299f0c.  return @kind void;
}
procedure `com.bumptech.glide.load.n.n` `build`(`com.bumptech.glide.load.n.e$c` v1 @kind this, `com.bumptech.glide.load.n.r` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/e$c;.build:(Lcom/bumptech/glide/load/n/r;)Lcom/bumptech/glide/load/n/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L299ed8.  v2:= new `com.bumptech.glide.load.n.e`;
  #L299edc.  v0:= v1.`com.bumptech.glide.load.n.e$c.a` @type ^`com.bumptech.glide.load.n.e$a` @kind object;
  #L299ee0.  call `<init>`(v2, v0) @signature `Lcom/bumptech/glide/load/n/e;.<init>:(Lcom/bumptech/glide/load/n/e$a;)V` @kind direct;
  #L299ee6.  return v2 @kind object;
}
