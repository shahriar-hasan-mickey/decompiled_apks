record `com.bumptech.glide.load.n.x` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.n.n` @kind interface {
  `com.bumptech.glide.load.n.n` `com.bumptech.glide.load.n.x.a` @AccessFlag PRIVATE_FINAL;
}
global `java.util.Set` `@@com.bumptech.glide.load.n.x.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/n/x;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L29c628.  v0:= new `java.util.HashSet`;
  #L29c62c.  v1:= "http" @kind object;
  #L29c630.  v2:= "https" @kind object;
  #L29c634.  temp:= new `java.lang.String`[v1, v2];
  #L29c63a.  v1:= temp @kind object;
  #L29c63c.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L29c642.  v1:= temp @kind object;
  #L29c644.  call `<init>`(v0, v1) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L29c64a.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L29c650.  v0:= temp @kind object;
  #L29c652.  `@@com.bumptech.glide.load.n.x.b` @type ^`java.util.Set` := v0 @kind object;
  #L29c656.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.x` v0 @kind this, `com.bumptech.glide.load.n.n` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/x;.<init>:(Lcom/bumptech/glide/load/n/n;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L29c668.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29c66e.  v0.`com.bumptech.glide.load.n.x.a` @type ^`com.bumptech.glide.load.n.n` := v1 @kind object;
  #L29c672.  return @kind void;
}
procedure `com.bumptech.glide.load.n.n$a` `buildLoadData`(`com.bumptech.glide.load.n.x` v1 @kind this, `android.net.Uri` v2 @kind object, `int` v3 , `int` v4 , `com.bumptech.glide.load.h` v5 @kind object) @signature `Lcom/bumptech/glide/load/n/x;.buildLoadData:(Landroid/net/Uri;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29c5d8.  v0:= new `com.bumptech.glide.load.n.g`;
  #L29c5dc.  call temp:= `toString`(v2) @signature `Landroid/net/Uri;.toString:()Ljava/lang/String;` @kind virtual;
  #L29c5e2.  v2:= temp @kind object;
  #L29c5e4.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/n/g;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L29c5ea.  v2:= v1.`com.bumptech.glide.load.n.x.a` @type ^`com.bumptech.glide.load.n.n` @kind object;
  #L29c5ee.  call temp:= `buildLoadData`(v2, v0, v3, v4, v5) @signature `Lcom/bumptech/glide/load/n/n;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @kind interface;
  #L29c5f4.  v2:= temp @kind object;
  #L29c5f6.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.n.n$a` `buildLoadData`(`com.bumptech.glide.load.n.x` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/n/x;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L29c608.  v1:= (`android.net.Uri`) v1 @kind object;
  #L29c60c.  call temp:= `buildLoadData`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/n/x;.buildLoadData:(Landroid/net/Uri;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @kind virtual;
  #L29c612.  v1:= temp @kind object;
  #L29c614.  return v1 @kind object;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.n.x` v1 @kind this, `android.net.Uri` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/x;.handles:(Landroid/net/Uri;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29c590.  v0:= `@@com.bumptech.glide.load.n.x.b` @type ^`java.util.Set` @kind object;
  #L29c594.  call temp:= `getScheme`(v2) @signature `Landroid/net/Uri;.getScheme:()Ljava/lang/String;` @kind virtual;
  #L29c59a.  v2:= temp @kind object;
  #L29c59c.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L29c5a2.  v2:= temp;
  #L29c5a4.  return v2;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.n.x` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/x;.handles:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L29c5b8.  v1:= (`android.net.Uri`) v1 @kind object;
  #L29c5bc.  call temp:= `handles`(v0, v1) @signature `Lcom/bumptech/glide/load/n/x;.handles:(Landroid/net/Uri;)Z` @kind virtual;
  #L29c5c2.  v1:= temp;
  #L29c5c4.  return v1;
}
