record `com.bumptech.glide.load.n.c` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.d` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.c` v0 @kind this) @signature `Lcom/bumptech/glide/load/n/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L299b1c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L299b22.  return @kind void;
}
procedure `boolean` `encode`(`com.bumptech.glide.load.n.c` v0 @kind this, `java.lang.Object` v1 @kind object, `java.io.File` v2 @kind object, `com.bumptech.glide.load.h` v3 @kind object) @signature `Lcom/bumptech/glide/load/n/c;.encode:(Ljava/lang/Object;Ljava/io/File;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L299ab0.  v1:= (`java.nio.ByteBuffer`) v1 @kind object;
  #L299ab4.  call temp:= `encode`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/load/n/c;.encode:(Ljava/nio/ByteBuffer;Ljava/io/File;Lcom/bumptech/glide/load/h;)Z` @kind virtual;
  #L299aba.  v1:= temp;
  #L299abc.  return v1;
}
procedure `boolean` `encode`(`com.bumptech.glide.load.n.c` v0 @kind this, `java.nio.ByteBuffer` v1 @kind object, `java.io.File` v2 @kind object, `com.bumptech.glide.load.h` v3 @kind object) @signature `Lcom/bumptech/glide/load/n/c;.encode:(Ljava/nio/ByteBuffer;Ljava/io/File;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC {
    temp;

  #L299ad0.  call `toFile`(v1, v2) @signature `Lcom/bumptech/glide/s/a;.toFile:(Ljava/nio/ByteBuffer;Ljava/io/File;)V` @kind static;
  #L299ad6.  v1:= 1I;
  #L299ad8.  goto L299afa;
  #L299ada.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L299adc.  v2:= 3I;
  #L299ade.  v3:= "ByteBufferEncoder" @kind object;
  #L299ae2.  call temp:= `isLoggable`(v3, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L299ae8.  v2:= temp;
  #L299aea.  if v2 == 0 then goto L299af8;
  #L299aee.  v2:= "Failed to write data" @kind object;
  #L299af2.  call temp:= `d`(v3, v2, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L299af8.  v1:= 0I;
  #L299afa.  return v1;
  catch `java.io.IOException` @[L299ad0..L299ad6] goto L299ada;
}
