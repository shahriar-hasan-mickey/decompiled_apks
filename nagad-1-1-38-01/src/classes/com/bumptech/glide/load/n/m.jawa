record `com.bumptech.glide.load.n.m` @kind class @AccessFlag PUBLIC {
  `com.bumptech.glide.s.g` `com.bumptech.glide.load.n.m.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.m` v1 @kind this, `long` v2 ) @signature `Lcom/bumptech/glide/load/n/m;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L29b030.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29b036.  v0:= new `com.bumptech.glide.load.n.m$a`;
  #L29b03a.  call `<init>`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/n/m$a;.<init>:(Lcom/bumptech/glide/load/n/m;J)V` @kind direct;
  #L29b040.  v1.`com.bumptech.glide.load.n.m.a` @type ^`com.bumptech.glide.s.g` := v0 @kind object;
  #L29b044.  return @kind void;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.load.n.m` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/load/n/m;.get:(Ljava/lang/Object;II)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L29b004.  call temp:= `a`(v1, v2, v3) @signature `Lcom/bumptech/glide/load/n/m$b;.a:(Ljava/lang/Object;II)Lcom/bumptech/glide/load/n/m$b;` @kind static;
  #L29b00a.  v1:= temp @kind object;
  #L29b00c.  v2:= v0.`com.bumptech.glide.load.n.m.a` @type ^`com.bumptech.glide.s.g` @kind object;
  #L29b010.  call temp:= `get`(v2, v1) @signature `Lcom/bumptech/glide/s/g;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L29b016.  v2:= temp @kind object;
  #L29b018.  call `release`(v1) @signature `Lcom/bumptech/glide/load/n/m$b;.release:()V` @kind virtual;
  #L29b01e.  return v2 @kind object;
}
procedure `void` `put`(`com.bumptech.glide.load.n.m` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/load/n/m;.put:(Ljava/lang/Object;IILjava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L29b058.  call temp:= `a`(v1, v2, v3) @signature `Lcom/bumptech/glide/load/n/m$b;.a:(Ljava/lang/Object;II)Lcom/bumptech/glide/load/n/m$b;` @kind static;
  #L29b05e.  v1:= temp @kind object;
  #L29b060.  v2:= v0.`com.bumptech.glide.load.n.m.a` @type ^`com.bumptech.glide.s.g` @kind object;
  #L29b064.  call temp:= `put`(v2, v1, v4) @signature `Lcom/bumptech/glide/s/g;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L29b06a.  return @kind void;
}
