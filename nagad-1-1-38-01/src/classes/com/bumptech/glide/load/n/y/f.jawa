record `com.bumptech.glide.load.n.y.f` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.n.n` @kind interface {
  `com.bumptech.glide.load.n.n` `com.bumptech.glide.load.n.y.f.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.y.f` v0 @kind this, `com.bumptech.glide.load.n.n` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/y/f;.<init>:(Lcom/bumptech/glide/load/n/n;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L29d0d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29d0de.  v0.`com.bumptech.glide.load.n.y.f.a` @type ^`com.bumptech.glide.load.n.n` := v1 @kind object;
  #L29d0e2.  return @kind void;
}
procedure `com.bumptech.glide.load.n.n$a` `buildLoadData`(`com.bumptech.glide.load.n.y.f` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/n/y/f;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L29d090.  v1:= (`java.net.URL`) v1 @kind object;
  #L29d094.  call temp:= `buildLoadData`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/n/y/f;.buildLoadData:(Ljava/net/URL;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @kind virtual;
  #L29d09a.  v1:= temp @kind object;
  #L29d09c.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.n.n$a` `buildLoadData`(`com.bumptech.glide.load.n.y.f` v2 @kind this, `java.net.URL` v3 @kind object, `int` v4 , `int` v5 , `com.bumptech.glide.load.h` v6 @kind object) @signature `Lcom/bumptech/glide/load/n/y/f;.buildLoadData:(Ljava/net/URL;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L29d0b0.  v0:= v2.`com.bumptech.glide.load.n.y.f.a` @type ^`com.bumptech.glide.load.n.n` @kind object;
  #L29d0b4.  v1:= new `com.bumptech.glide.load.n.g`;
  #L29d0b8.  call `<init>`(v1, v3) @signature `Lcom/bumptech/glide/load/n/g;.<init>:(Ljava/net/URL;)V` @kind direct;
  #L29d0be.  call temp:= `buildLoadData`(v0, v1, v4, v5, v6) @signature `Lcom/bumptech/glide/load/n/n;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @kind interface;
  #L29d0c4.  v3:= temp @kind object;
  #L29d0c6.  return v3 @kind object;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.n.y.f` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/y/f;.handles:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L29d05c.  v1:= (`java.net.URL`) v1 @kind object;
  #L29d060.  call temp:= `handles`(v0, v1) @signature `Lcom/bumptech/glide/load/n/y/f;.handles:(Ljava/net/URL;)Z` @kind virtual;
  #L29d066.  v1:= temp;
  #L29d068.  return v1;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.n.y.f` v0 @kind this, `java.net.URL` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/y/f;.handles:(Ljava/net/URL;)Z` @AccessFlag PUBLIC {
    temp;

  #L29d07c.  v1:= 1I;
  #L29d07e.  return v1;
}
