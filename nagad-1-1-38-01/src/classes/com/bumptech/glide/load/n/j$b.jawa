record `com.bumptech.glide.load.n.j$b` @kind class @AccessFlag FINAL extends `com.bumptech.glide.load.n.i` @kind interface {
  `java.lang.String` `com.bumptech.glide.load.n.j$b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.j$b` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/j$b;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L29a9e0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29a9e6.  v0.`com.bumptech.glide.load.n.j$b.a` @type ^`java.lang.String` := v1 @kind object;
  #L29a9ea.  return @kind void;
}
procedure `java.lang.String` `buildHeader`(`com.bumptech.glide.load.n.j$b` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/j$b;.buildHeader:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29a97c.  v0:= v1.`com.bumptech.glide.load.n.j$b.a` @type ^`java.lang.String` @kind object;
  #L29a980.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.n.j$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/j$b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29a928.  v0:= instanceof @variable v2 @type ^`com.bumptech.glide.load.n.j$b` @kind boolean;
  #L29a92c.  if v0 == 0 then goto L29a946;
  #L29a930.  v2:= (`com.bumptech.glide.load.n.j$b`) v2 @kind object;
  #L29a934.  v0:= v1.`com.bumptech.glide.load.n.j$b.a` @type ^`java.lang.String` @kind object;
  #L29a938.  v2:= v2.`com.bumptech.glide.load.n.j$b.a` @type ^`java.lang.String` @kind object;
  #L29a93c.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L29a942.  v2:= temp;
  #L29a944.  return v2;
  #L29a946.  v2:= 0I;
  #L29a948.  return v2;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.n.j$b` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/j$b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29a95c.  v0:= v1.`com.bumptech.glide.load.n.j$b.a` @type ^`java.lang.String` @kind object;
  #L29a960.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L29a966.  v0:= temp;
  #L29a968.  return v0;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.n.j$b` v2 @kind this) @signature `Lcom/bumptech/glide/load/n/j$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L29a994.  v0:= new `java.lang.StringBuilder`;
  #L29a998.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29a99e.  v1:= "StringHeaderFactory{value='" @kind object;
  #L29a9a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29a9a8.  v1:= v2.`com.bumptech.glide.load.n.j$b.a` @type ^`java.lang.String` @kind object;
  #L29a9ac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29a9b2.  v1:= 39I;
  #L29a9b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L29a9bc.  v1:= 125I;
  #L29a9c0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L29a9c6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L29a9cc.  v0:= temp @kind object;
  #L29a9ce.  return v0 @kind object;
}
