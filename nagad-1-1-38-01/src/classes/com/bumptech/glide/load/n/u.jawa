record `com.bumptech.glide.load.n.u` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.n.n` @kind interface {
  `com.bumptech.glide.load.n.n` `com.bumptech.glide.load.n.u.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.u` v0 @kind this, `com.bumptech.glide.load.n.n` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/u;.<init>:(Lcom/bumptech/glide/load/n/n;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L29c194.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29c19a.  v0.`com.bumptech.glide.load.n.u.a` @type ^`com.bumptech.glide.load.n.n` := v1 @kind object;
  #L29c19e.  return @kind void;
}
procedure `android.net.Uri` `a`(`java.lang.String` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/u;.a:(Ljava/lang/String;)Landroid/net/Uri;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L29c07c.  call temp:= `isEmpty`(v2) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L29c082.  v0:= temp;
  #L29c084.  if v0 == 0 then goto L29c08c;
  #L29c088.  v2:= 0I;
  #L29c08a.  return v2 @kind object;
  #L29c08c.  v0:= 0I;
  #L29c08e.  call temp:= `charAt`(v2, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L29c094.  v0:= temp;
  #L29c096.  v1:= 47I;
  #L29c09a.  if v0 != v1 then goto L29c0a8;
  #L29c09e.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/load/n/u;.b:(Ljava/lang/String;)Landroid/net/Uri;` @kind static;
  #L29c0a4.  v2:= temp @kind object;
  #L29c0a6.  goto L29c0c8;
  #L29c0a8.  call temp:= `parse`(v2) @signature `Landroid/net/Uri;.parse:(Ljava/lang/String;)Landroid/net/Uri;` @kind static;
  #L29c0ae.  v0:= temp @kind object;
  #L29c0b0.  call temp:= `getScheme`(v0) @signature `Landroid/net/Uri;.getScheme:()Ljava/lang/String;` @kind virtual;
  #L29c0b6.  v1:= temp @kind object;
  #L29c0b8.  if v1 != 0 then goto L29c0c6;
  #L29c0bc.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/load/n/u;.b:(Ljava/lang/String;)Landroid/net/Uri;` @kind static;
  #L29c0c2.  v2:= temp @kind object;
  #L29c0c4.  goto L29c0c8;
  #L29c0c6.  v2:= v0 @kind object;
  #L29c0c8.  return v2 @kind object;
}
procedure `android.net.Uri` `b`(`java.lang.String` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/u;.b:(Ljava/lang/String;)Landroid/net/Uri;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L29c0dc.  v0:= new `java.io.File`;
  #L29c0e0.  call `<init>`(v0, v1) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L29c0e6.  call temp:= `fromFile`(v0) @signature `Landroid/net/Uri;.fromFile:(Ljava/io/File;)Landroid/net/Uri;` @kind static;
  #L29c0ec.  v1:= temp @kind object;
  #L29c0ee.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.n.n$a` `buildLoadData`(`com.bumptech.glide.load.n.u` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/n/u;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L29c134.  v1:= (`java.lang.String`) v1 @kind object;
  #L29c138.  call temp:= `buildLoadData`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/n/u;.buildLoadData:(Ljava/lang/String;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @kind virtual;
  #L29c13e.  v1:= temp @kind object;
  #L29c140.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.n.n$a` `buildLoadData`(`com.bumptech.glide.load.n.u` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 , `int` v4 , `com.bumptech.glide.load.h` v5 @kind object) @signature `Lcom/bumptech/glide/load/n/u;.buildLoadData:(Ljava/lang/String;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29c154.  call temp:= `a`(v2) @signature `Lcom/bumptech/glide/load/n/u;.a:(Ljava/lang/String;)Landroid/net/Uri;` @kind static;
  #L29c15a.  v2:= temp @kind object;
  #L29c15c.  if v2 == 0 then goto L29c180;
  #L29c160.  v0:= v1.`com.bumptech.glide.load.n.u.a` @type ^`com.bumptech.glide.load.n.n` @kind object;
  #L29c164.  call temp:= `handles`(v0, v2) @signature `Lcom/bumptech/glide/load/n/n;.handles:(Ljava/lang/Object;)Z` @kind interface;
  #L29c16a.  v0:= temp;
  #L29c16c.  if v0 != 0 then goto L29c172;
  #L29c170.  goto L29c180;
  #L29c172.  v0:= v1.`com.bumptech.glide.load.n.u.a` @type ^`com.bumptech.glide.load.n.n` @kind object;
  #L29c176.  call temp:= `buildLoadData`(v0, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/n/n;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @kind interface;
  #L29c17c.  v2:= temp @kind object;
  #L29c17e.  return v2 @kind object;
  #L29c180.  v2:= 0I;
  #L29c182.  return v2 @kind object;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.n.u` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/u;.handles:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L29c100.  v1:= (`java.lang.String`) v1 @kind object;
  #L29c104.  call temp:= `handles`(v0, v1) @signature `Lcom/bumptech/glide/load/n/u;.handles:(Ljava/lang/String;)Z` @kind virtual;
  #L29c10a.  v1:= temp;
  #L29c10c.  return v1;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.n.u` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/u;.handles:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;

  #L29c120.  v1:= 1I;
  #L29c122.  return v1;
}
