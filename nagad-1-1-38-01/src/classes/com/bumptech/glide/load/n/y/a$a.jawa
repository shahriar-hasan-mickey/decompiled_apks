record `com.bumptech.glide.load.n.y.a$a` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.n.o` @kind interface {
  `com.bumptech.glide.load.n.m` `com.bumptech.glide.load.n.y.a$a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.y.a$a` v3 @kind this) @signature `Lcom/bumptech/glide/load/n/y/a$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L29c6a4.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29c6aa.  v0:= new `com.bumptech.glide.load.n.m`;
  #L29c6ae.  v1:= 500L;
  #L29c6b2.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/n/m;.<init>:(J)V` @kind direct;
  #L29c6b8.  v3.`com.bumptech.glide.load.n.y.a$a.a` @type ^`com.bumptech.glide.load.n.m` := v0 @kind object;
  #L29c6bc.  return @kind void;
}
procedure `com.bumptech.glide.load.n.n` `build`(`com.bumptech.glide.load.n.y.a$a` v1 @kind this, `com.bumptech.glide.load.n.r` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/y/a$a;.build:(Lcom/bumptech/glide/load/n/r;)Lcom/bumptech/glide/load/n/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29c684.  v2:= new `com.bumptech.glide.load.n.y.a`;
  #L29c688.  v0:= v1.`com.bumptech.glide.load.n.y.a$a.a` @type ^`com.bumptech.glide.load.n.m` @kind object;
  #L29c68c.  call `<init>`(v2, v0) @signature `Lcom/bumptech/glide/load/n/y/a;.<init>:(Lcom/bumptech/glide/load/n/m;)V` @kind direct;
  #L29c692.  return v2 @kind object;
}
