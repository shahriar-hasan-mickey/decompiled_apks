record `com.bumptech.glide.load.n.y.b` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.n.n` @kind interface {
  `com.bumptech.glide.load.n.n` `com.bumptech.glide.load.n.y.b.a` @AccessFlag PRIVATE_FINAL;
}
global `java.util.Set` `@@com.bumptech.glide.load.n.y.b.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/n/y/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L29c8b4.  v0:= new `java.util.HashSet`;
  #L29c8b8.  v1:= "http" @kind object;
  #L29c8bc.  v2:= "https" @kind object;
  #L29c8c0.  temp:= new `java.lang.String`[v1, v2];
  #L29c8c6.  v1:= temp @kind object;
  #L29c8c8.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L29c8ce.  v1:= temp @kind object;
  #L29c8d0.  call `<init>`(v0, v1) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L29c8d6.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L29c8dc.  v0:= temp @kind object;
  #L29c8de.  `@@com.bumptech.glide.load.n.y.b.b` @type ^`java.util.Set` := v0 @kind object;
  #L29c8e2.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.y.b` v0 @kind this, `com.bumptech.glide.load.n.n` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/y/b;.<init>:(Lcom/bumptech/glide/load/n/n;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L29c8f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29c8fa.  v0.`com.bumptech.glide.load.n.y.b.a` @type ^`com.bumptech.glide.load.n.n` := v1 @kind object;
  #L29c8fe.  return @kind void;
}
procedure `com.bumptech.glide.load.n.n$a` `buildLoadData`(`com.bumptech.glide.load.n.y.b` v2 @kind this, `android.net.Uri` v3 @kind object, `int` v4 , `int` v5 , `com.bumptech.glide.load.h` v6 @kind object) @signature `Lcom/bumptech/glide/load/n/y/b;.buildLoadData:(Landroid/net/Uri;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L29c864.  v0:= v2.`com.bumptech.glide.load.n.y.b.a` @type ^`com.bumptech.glide.load.n.n` @kind object;
  #L29c868.  v1:= new `com.bumptech.glide.load.n.g`;
  #L29c86c.  call temp:= `toString`(v3) @signature `Landroid/net/Uri;.toString:()Ljava/lang/String;` @kind virtual;
  #L29c872.  v3:= temp @kind object;
  #L29c874.  call `<init>`(v1, v3) @signature `Lcom/bumptech/glide/load/n/g;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L29c87a.  call temp:= `buildLoadData`(v0, v1, v4, v5, v6) @signature `Lcom/bumptech/glide/load/n/n;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @kind interface;
  #L29c880.  v3:= temp @kind object;
  #L29c882.  return v3 @kind object;
}
procedure `com.bumptech.glide.load.n.n$a` `buildLoadData`(`com.bumptech.glide.load.n.y.b` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/n/y/b;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L29c894.  v1:= (`android.net.Uri`) v1 @kind object;
  #L29c898.  call temp:= `buildLoadData`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/n/y/b;.buildLoadData:(Landroid/net/Uri;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @kind virtual;
  #L29c89e.  v1:= temp @kind object;
  #L29c8a0.  return v1 @kind object;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.n.y.b` v1 @kind this, `android.net.Uri` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/y/b;.handles:(Landroid/net/Uri;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29c81c.  v0:= `@@com.bumptech.glide.load.n.y.b.b` @type ^`java.util.Set` @kind object;
  #L29c820.  call temp:= `getScheme`(v2) @signature `Landroid/net/Uri;.getScheme:()Ljava/lang/String;` @kind virtual;
  #L29c826.  v2:= temp @kind object;
  #L29c828.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L29c82e.  v2:= temp;
  #L29c830.  return v2;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.n.y.b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/y/b;.handles:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L29c844.  v1:= (`android.net.Uri`) v1 @kind object;
  #L29c848.  call temp:= `handles`(v0, v1) @signature `Lcom/bumptech/glide/load/n/y/b;.handles:(Landroid/net/Uri;)Z` @kind virtual;
  #L29c84e.  v1:= temp;
  #L29c850.  return v1;
}
