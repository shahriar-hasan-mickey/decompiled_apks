record `com.bumptech.glide.load.n.j` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.n.h` @kind interface {
  `java.util.Map` `com.bumptech.glide.load.n.j.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.bumptech.glide.load.n.j.c` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.j` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/j;.<init>:(Ljava/util/Map;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L29abd8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29abde.  call temp:= `unmodifiableMap`(v1) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L29abe4.  v1:= temp @kind object;
  #L29abe6.  v0.`com.bumptech.glide.load.n.j.b` @type ^`java.util.Map` := v1 @kind object;
  #L29abea.  return @kind void;
}
procedure `java.lang.String` `a`(`com.bumptech.glide.load.n.j` v5 @kind this, `java.util.List` v6 @kind object) @signature `Lcom/bumptech/glide/load/n/j;.a:(Ljava/util/List;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L29aa50.  v0:= new `java.lang.StringBuilder`;
  #L29aa54.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29aa5a.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L29aa60.  v1:= temp;
  #L29aa62.  v2:= 0I;
  #L29aa64.  if v2 >= v1 then goto L29aaae;
  #L29aa68.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L29aa6e.  v3:= temp @kind object;
  #L29aa70.  v3:= (`com.bumptech.glide.load.n.i`) v3 @kind object;
  #L29aa74.  call temp:= `buildHeader`(v3) @signature `Lcom/bumptech/glide/load/n/i;.buildHeader:()Ljava/lang/String;` @kind interface;
  #L29aa7a.  v3:= temp @kind object;
  #L29aa7c.  call temp:= `isEmpty`(v3) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L29aa82.  v4:= temp;
  #L29aa84.  if v4 != 0 then goto L29aaa8;
  #L29aa88.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29aa8e.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L29aa94.  v3:= temp;
  #L29aa96.  v3:= v3 + -1;
  #L29aa9a.  if v2 == v3 then goto L29aaa8;
  #L29aa9e.  v3:= 44I;
  #L29aaa2.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L29aaa8.  v2:= v2 + 1;
  #L29aaac.  goto L29aa64;
  #L29aaae.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L29aab4.  v6:= temp @kind object;
  #L29aab6.  return v6 @kind object;
}
procedure `java.util.Map` `a`(`com.bumptech.glide.load.n.j` v5 @kind this) @signature `Lcom/bumptech/glide/load/n/j;.a:()Ljava/util/Map;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L29ab0c.  v0:= new `java.util.HashMap`;
  #L29ab10.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L29ab16.  v1:= v5.`com.bumptech.glide.load.n.j.b` @type ^`java.util.Map` @kind object;
  #L29ab1a.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L29ab20.  v1:= temp @kind object;
  #L29ab22.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L29ab28.  v1:= temp @kind object;
  #L29ab2a.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L29ab30.  v2:= temp;
  #L29ab32.  if v2 == 0 then goto L29ab72;
  #L29ab36.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L29ab3c.  v2:= temp @kind object;
  #L29ab3e.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L29ab42.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L29ab48.  v3:= temp @kind object;
  #L29ab4a.  v3:= (`java.util.List`) v3 @kind object;
  #L29ab4e.  call temp:= `a`(v5, v3) @signature `Lcom/bumptech/glide/load/n/j;.a:(Ljava/util/List;)Ljava/lang/String;` @kind direct;
  #L29ab54.  v3:= temp @kind object;
  #L29ab56.  call temp:= `isEmpty`(v3) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L29ab5c.  v4:= temp;
  #L29ab5e.  if v4 != 0 then goto L29ab2a;
  #L29ab62.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L29ab68.  v2:= temp @kind object;
  #L29ab6a.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L29ab70.  goto L29ab2a;
  #L29ab72.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.n.j` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/j;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29a9fc.  v0:= instanceof @variable v2 @type ^`com.bumptech.glide.load.n.j` @kind boolean;
  #L29aa00.  if v0 == 0 then goto L29aa1a;
  #L29aa04.  v2:= (`com.bumptech.glide.load.n.j`) v2 @kind object;
  #L29aa08.  v0:= v1.`com.bumptech.glide.load.n.j.b` @type ^`java.util.Map` @kind object;
  #L29aa0c.  v2:= v2.`com.bumptech.glide.load.n.j.b` @type ^`java.util.Map` @kind object;
  #L29aa10.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Map;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L29aa16.  v2:= temp;
  #L29aa18.  return v2;
  #L29aa1a.  v2:= 0I;
  #L29aa1c.  return v2;
}
procedure `java.util.Map` `getHeaders`(`com.bumptech.glide.load.n.j` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/j;.getHeaders:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29ab84.  v0:= v1.`com.bumptech.glide.load.n.j.c` @type ^`java.util.Map` @kind object;
  #L29ab88.  if v0 != 0 then goto L29abb4;
  #L29ab8c.  @monitorenter v1
  #L29ab8e.  v0:= v1.`com.bumptech.glide.load.n.j.c` @type ^`java.util.Map` @kind object;
  #L29ab92.  if v0 != 0 then goto L29abaa;
  #L29ab96.  call temp:= `a`(v1) @signature `Lcom/bumptech/glide/load/n/j;.a:()Ljava/util/Map;` @kind direct;
  #L29ab9c.  v0:= temp @kind object;
  #L29ab9e.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L29aba4.  v0:= temp @kind object;
  #L29aba6.  v1.`com.bumptech.glide.load.n.j.c` @type ^`java.util.Map` := v0 @kind object;
  #L29abaa.  @monitorexit v1
  #L29abac.  goto L29abb4;
  #L29abae.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L29abb0.  @monitorexit v1
  #L29abb2.  throw v0;
  #L29abb4.  v0:= v1.`com.bumptech.glide.load.n.j.c` @type ^`java.util.Map` @kind object;
  #L29abb8.  return v0 @kind object;
  catch `java.lang.Throwable` @[L29ab8e..L29abb2] goto L29abae;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.n.j` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/j;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29aa30.  v0:= v1.`com.bumptech.glide.load.n.j.b` @type ^`java.util.Map` @kind object;
  #L29aa34.  call temp:= `hashCode`(v0) @signature `Ljava/util/Map;.hashCode:()I` @kind interface;
  #L29aa3a.  v0:= temp;
  #L29aa3c.  return v0;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.n.j` v2 @kind this) @signature `Lcom/bumptech/glide/load/n/j;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L29aac8.  v0:= new `java.lang.StringBuilder`;
  #L29aacc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29aad2.  v1:= "LazyHeaders{headers=" @kind object;
  #L29aad6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29aadc.  v1:= v2.`com.bumptech.glide.load.n.j.b` @type ^`java.util.Map` @kind object;
  #L29aae0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29aae6.  v1:= 125I;
  #L29aaea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L29aaf0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L29aaf6.  v0:= temp @kind object;
  #L29aaf8.  return v0 @kind object;
}
