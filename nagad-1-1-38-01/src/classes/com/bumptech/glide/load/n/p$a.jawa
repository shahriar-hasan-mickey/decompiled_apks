record `com.bumptech.glide.load.n.p$a` @kind class @AccessFlag  {
  `java.util.Map` `com.bumptech.glide.load.n.p$a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.p$a` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/p$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L29b12c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29b132.  v0:= new `java.util.HashMap`;
  #L29b136.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L29b13c.  v1.`com.bumptech.glide.load.n.p$a.a` @type ^`java.util.Map` := v0 @kind object;
  #L29b140.  return @kind void;
}
procedure `void` `clear`(`com.bumptech.glide.load.n.p$a` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/p$a;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29b154.  v0:= v1.`com.bumptech.glide.load.n.p$a.a` @type ^`java.util.Map` @kind object;
  #L29b158.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L29b15e.  return @kind void;
}
procedure `java.util.List` `get`(`com.bumptech.glide.load.n.p$a` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/p$a;.get:(Ljava/lang/Class;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29b0fc.  v0:= v1.`com.bumptech.glide.load.n.p$a.a` @type ^`java.util.Map` @kind object;
  #L29b100.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L29b106.  v2:= temp @kind object;
  #L29b108.  v2:= (`com.bumptech.glide.load.n.p$a$a`) v2 @kind object;
  #L29b10c.  if v2 != 0 then goto L29b114;
  #L29b110.  v2:= 0I;
  #L29b112.  goto L29b118;
  #L29b114.  v2:= v2.`com.bumptech.glide.load.n.p$a$a.a` @type ^`java.util.List` @kind object;
  #L29b118.  return v2 @kind object;
}
procedure `void` `put`(`com.bumptech.glide.load.n.p$a` v2 @kind this, `java.lang.Class` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lcom/bumptech/glide/load/n/p$a;.put:(Ljava/lang/Class;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L29b170.  v0:= v2.`com.bumptech.glide.load.n.p$a.a` @type ^`java.util.Map` @kind object;
  #L29b174.  v1:= new `com.bumptech.glide.load.n.p$a$a`;
  #L29b178.  call `<init>`(v1, v4) @signature `Lcom/bumptech/glide/load/n/p$a$a;.<init>:(Ljava/util/List;)V` @kind direct;
  #L29b17e.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L29b184.  v4:= temp @kind object;
  #L29b186.  v4:= (`com.bumptech.glide.load.n.p$a$a`) v4 @kind object;
  #L29b18a.  if v4 != 0 then goto L29b190;
  #L29b18e.  return @kind void;
  #L29b190.  v4:= new `java.lang.IllegalStateException`;
  #L29b194.  v0:= new `java.lang.StringBuilder`;
  #L29b198.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29b19e.  v1:= "Already cached loaders for model: " @kind object;
  #L29b1a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29b1a8.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29b1ae.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L29b1b4.  v3:= temp @kind object;
  #L29b1b6.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L29b1bc.  throw v4;
}
