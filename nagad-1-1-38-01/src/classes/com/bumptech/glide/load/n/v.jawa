record `com.bumptech.glide.load.n.v` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.n.n` @kind interface {
}
global `com.bumptech.glide.load.n.v` `@@com.bumptech.glide.load.n.v.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/n/v;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L29c310.  v0:= new `com.bumptech.glide.load.n.v`;
  #L29c314.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/n/v;.<init>:()V` @kind direct;
  #L29c31a.  `@@com.bumptech.glide.load.n.v.a` @type ^`com.bumptech.glide.load.n.v` := v0 @kind object;
  #L29c31e.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.v` v0 @kind this) @signature `Lcom/bumptech/glide/load/n/v;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L29c330.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29c336.  return @kind void;
}
procedure `com.bumptech.glide.load.n.v` `getInstance`() @signature `Lcom/bumptech/glide/load/n/v;.getInstance:()Lcom/bumptech/glide/load/n/v;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L29c2f8.  v0:= `@@com.bumptech.glide.load.n.v.a` @type ^`com.bumptech.glide.load.n.v` @kind object;
  #L29c2fc.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.n.n$a` `buildLoadData`(`com.bumptech.glide.load.n.v` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/n/v;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @AccessFlag PUBLIC {
    temp;

  #L29c2c8.  v2:= new `com.bumptech.glide.load.n.n$a`;
  #L29c2cc.  v3:= new `com.bumptech.glide.r.b`;
  #L29c2d0.  call `<init>`(v3, v1) @signature `Lcom/bumptech/glide/r/b;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L29c2d6.  v4:= new `com.bumptech.glide.load.n.v$b`;
  #L29c2da.  call `<init>`(v4, v1) @signature `Lcom/bumptech/glide/load/n/v$b;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L29c2e0.  call `<init>`(v2, v3, v4) @signature `Lcom/bumptech/glide/load/n/n$a;.<init>:(Lcom/bumptech/glide/load/f;Lcom/bumptech/glide/load/m/d;)V` @kind direct;
  #L29c2e6.  return v2 @kind object;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.n.v` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/v;.handles:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L29c2b4.  v1:= 1I;
  #L29c2b6.  return v1;
}
