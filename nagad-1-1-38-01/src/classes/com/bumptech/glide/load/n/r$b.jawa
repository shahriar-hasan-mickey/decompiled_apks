record `com.bumptech.glide.load.n.r$b` @kind class @AccessFlag  {
  `java.lang.Class` `com.bumptech.glide.load.n.r$b.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.bumptech.glide.load.n.r$b.b` @AccessFlag FINAL;
  `com.bumptech.glide.load.n.o` `com.bumptech.glide.load.n.r$b.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.r$b` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `com.bumptech.glide.load.n.o` v3 @kind object) @signature `Lcom/bumptech/glide/load/n/r$b;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/n/o;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L29b68c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29b692.  v0.`com.bumptech.glide.load.n.r$b.a` @type ^`java.lang.Class` := v1 @kind object;
  #L29b696.  v0.`com.bumptech.glide.load.n.r$b.b` @type ^`java.lang.Class` := v2 @kind object;
  #L29b69a.  v0.`com.bumptech.glide.load.n.r$b.c` @type ^`com.bumptech.glide.load.n.o` := v3 @kind object;
  #L29b69e.  return @kind void;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.n.r$b` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/r$b;.handles:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29b638.  v0:= v1.`com.bumptech.glide.load.n.r$b.a` @type ^`java.lang.Class` @kind object;
  #L29b63c.  call temp:= `isAssignableFrom`(v0, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L29b642.  v2:= temp;
  #L29b644.  return v2;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.n.r$b` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/r$b;.handles:(Ljava/lang/Class;Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;

  #L29b658.  call temp:= `handles`(v0, v1) @signature `Lcom/bumptech/glide/load/n/r$b;.handles:(Ljava/lang/Class;)Z` @kind virtual;
  #L29b65e.  v1:= temp;
  #L29b660.  if v1 == 0 then goto L29b678;
  #L29b664.  v1:= v0.`com.bumptech.glide.load.n.r$b.b` @type ^`java.lang.Class` @kind object;
  #L29b668.  call temp:= `isAssignableFrom`(v1, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L29b66e.  v1:= temp;
  #L29b670.  if v1 == 0 then goto L29b678;
  #L29b674.  v1:= 1I;
  #L29b676.  goto L29b67a;
  #L29b678.  v1:= 0I;
  #L29b67a.  return v1;
}
