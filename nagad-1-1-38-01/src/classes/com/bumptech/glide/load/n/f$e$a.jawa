record `com.bumptech.glide.load.n.f$e$a` @kind class @AccessFlag  extends `com.bumptech.glide.load.n.f$d` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.f$e$a` v0 @kind this) @signature `Lcom/bumptech/glide/load/n/f$e$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L29a1f8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29a1fe.  return @kind void;
}
procedure `void` `close`(`com.bumptech.glide.load.n.f$e$a` v0 @kind this, `java.io.InputStream` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/f$e$a;.close:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC {
    temp;

  #L29a210.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L29a216.  return @kind void;
}
procedure `void` `close`(`com.bumptech.glide.load.n.f$e$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/f$e$a;.close:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L29a228.  v1:= (`java.io.InputStream`) v1 @kind object;
  #L29a22c.  call `close`(v0, v1) @signature `Lcom/bumptech/glide/load/n/f$e$a;.close:(Ljava/io/InputStream;)V` @kind virtual;
  #L29a232.  return @kind void;
}
procedure `java.lang.Class` `getDataClass`(`com.bumptech.glide.load.n.f$e$a` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/f$e$a;.getDataClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29a1c4.  v0:= constclass @type ^`java.io.InputStream` @kind object;
  #L29a1c8.  return v0 @kind object;
}
procedure `java.io.InputStream` `open`(`com.bumptech.glide.load.n.f$e$a` v1 @kind this, `java.io.File` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/f$e$a;.open:(Ljava/io/File;)Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29a1a8.  v0:= new `java.io.FileInputStream`;
  #L29a1ac.  call `<init>`(v0, v2) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L29a1b2.  return v0 @kind object;
}
procedure `java.lang.Object` `open`(`com.bumptech.glide.load.n.f$e$a` v0 @kind this, `java.io.File` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/f$e$a;.open:(Ljava/io/File;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L29a1dc.  call temp:= `open`(v0, v1) @signature `Lcom/bumptech/glide/load/n/f$e$a;.open:(Ljava/io/File;)Ljava/io/InputStream;` @kind virtual;
  #L29a1e2.  v1:= temp @kind object;
  #L29a1e4.  return v1 @kind object;
}
