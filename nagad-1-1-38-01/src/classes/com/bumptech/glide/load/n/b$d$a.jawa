record `com.bumptech.glide.load.n.b$d$a` @kind class @AccessFlag  extends `com.bumptech.glide.load.n.b$b` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.b$d$a` v0 @kind this, `com.bumptech.glide.load.n.b$d` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/b$d$a;.<init>:(Lcom/bumptech/glide/load/n/b$d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2999b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2999ba.  return @kind void;
}
procedure `java.io.InputStream` `convert`(`com.bumptech.glide.load.n.b$d$a` v1 @kind this, `byte`[] v2 @kind object) @signature `Lcom/bumptech/glide/load/n/b$d$a;.convert:([B)Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L299964.  v0:= new `java.io.ByteArrayInputStream`;
  #L299968.  call `<init>`(v0, v2) @signature `Ljava/io/ByteArrayInputStream;.<init>:([B)V` @kind direct;
  #L29996e.  return v0 @kind object;
}
procedure `java.lang.Object` `convert`(`com.bumptech.glide.load.n.b$d$a` v0 @kind this, `byte`[] v1 @kind object) @signature `Lcom/bumptech/glide/load/n/b$d$a;.convert:([B)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L299998.  call temp:= `convert`(v0, v1) @signature `Lcom/bumptech/glide/load/n/b$d$a;.convert:([B)Ljava/io/InputStream;` @kind virtual;
  #L29999e.  v1:= temp @kind object;
  #L2999a0.  return v1 @kind object;
}
procedure `java.lang.Class` `getDataClass`(`com.bumptech.glide.load.n.b$d$a` v1 @kind this) @signature `Lcom/bumptech/glide/load/n/b$d$a;.getDataClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L299980.  v0:= constclass @type ^`java.io.InputStream` @kind object;
  #L299984.  return v0 @kind object;
}
