record `com.bumptech.glide.load.n.b$d` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.n.o` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.b$d` v0 @kind this) @signature `Lcom/bumptech/glide/load/n/b$d;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2999f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2999fa.  return @kind void;
}
procedure `com.bumptech.glide.load.n.n` `build`(`com.bumptech.glide.load.n.b$d` v1 @kind this, `com.bumptech.glide.load.n.r` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/b$d;.build:(Lcom/bumptech/glide/load/n/r;)Lcom/bumptech/glide/load/n/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2999cc.  v2:= new `com.bumptech.glide.load.n.b`;
  #L2999d0.  v0:= new `com.bumptech.glide.load.n.b$d$a`;
  #L2999d4.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/n/b$d$a;.<init>:(Lcom/bumptech/glide/load/n/b$d;)V` @kind direct;
  #L2999da.  call `<init>`(v2, v0) @signature `Lcom/bumptech/glide/load/n/b;.<init>:(Lcom/bumptech/glide/load/n/b$b;)V` @kind direct;
  #L2999e0.  return v2 @kind object;
}
