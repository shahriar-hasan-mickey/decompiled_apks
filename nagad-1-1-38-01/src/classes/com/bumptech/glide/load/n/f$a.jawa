record `com.bumptech.glide.load.n.f$a` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.n.o` @kind interface {
  `com.bumptech.glide.load.n.f$d` `com.bumptech.glide.load.n.f$a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.f$a` v0 @kind this, `com.bumptech.glide.load.n.f$d` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/f$a;.<init>:(Lcom/bumptech/glide/load/n/f$d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L299fc0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L299fc6.  v0.`com.bumptech.glide.load.n.f$a.a` @type ^`com.bumptech.glide.load.n.f$d` := v1 @kind object;
  #L299fca.  return @kind void;
}
procedure `com.bumptech.glide.load.n.n` `build`(`com.bumptech.glide.load.n.f$a` v1 @kind this, `com.bumptech.glide.load.n.r` v2 @kind object) @signature `Lcom/bumptech/glide/load/n/f$a;.build:(Lcom/bumptech/glide/load/n/r;)Lcom/bumptech/glide/load/n/n;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L299fa0.  v2:= new `com.bumptech.glide.load.n.f`;
  #L299fa4.  v0:= v1.`com.bumptech.glide.load.n.f$a.a` @type ^`com.bumptech.glide.load.n.f$d` @kind object;
  #L299fa8.  call `<init>`(v2, v0) @signature `Lcom/bumptech/glide/load/n/f;.<init>:(Lcom/bumptech/glide/load/n/f$d;)V` @kind direct;
  #L299fae.  return v2 @kind object;
}
