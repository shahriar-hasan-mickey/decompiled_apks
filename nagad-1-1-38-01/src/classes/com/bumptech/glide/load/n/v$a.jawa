record `com.bumptech.glide.load.n.v$a` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.n.o` @kind interface {
}
global `com.bumptech.glide.load.n.v$a` `@@com.bumptech.glide.load.n.v$a.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/n/v$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L29c1e4.  v0:= new `com.bumptech.glide.load.n.v$a`;
  #L29c1e8.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/n/v$a;.<init>:()V` @kind direct;
  #L29c1ee.  `@@com.bumptech.glide.load.n.v$a.a` @type ^`com.bumptech.glide.load.n.v$a` := v0 @kind object;
  #L29c1f2.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.n.v$a` v0 @kind this) @signature `Lcom/bumptech/glide/load/n/v$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L29c204.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29c20a.  return @kind void;
}
procedure `com.bumptech.glide.load.n.v$a` `getInstance`() @signature `Lcom/bumptech/glide/load/n/v$a;.getInstance:()Lcom/bumptech/glide/load/n/v$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L29c1cc.  v0:= `@@com.bumptech.glide.load.n.v$a.a` @type ^`com.bumptech.glide.load.n.v$a` @kind object;
  #L29c1d0.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.n.n` `build`(`com.bumptech.glide.load.n.v$a` v0 @kind this, `com.bumptech.glide.load.n.r` v1 @kind object) @signature `Lcom/bumptech/glide/load/n/v$a;.build:(Lcom/bumptech/glide/load/n/r;)Lcom/bumptech/glide/load/n/n;` @AccessFlag PUBLIC {
    temp;

  #L29c1b0.  call temp:= `getInstance`() @signature `Lcom/bumptech/glide/load/n/v;.getInstance:()Lcom/bumptech/glide/load/n/v;` @kind static;
  #L29c1b6.  v1:= temp @kind object;
  #L29c1b8.  return v1 @kind object;
}
