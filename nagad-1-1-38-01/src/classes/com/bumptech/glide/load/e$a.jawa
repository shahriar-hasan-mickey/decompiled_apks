record `com.bumptech.glide.load.e$a` @kind class @AccessFlag  extends `com.bumptech.glide.load.e$g` @kind interface {
  `java.io.InputStream` `com.bumptech.glide.load.e$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.load.e$a` v0 @kind this, `java.io.InputStream` v1 @kind object) @signature `Lcom/bumptech/glide/load/e$a;.<init>:(Ljava/io/InputStream;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L28e34c.  v0.`com.bumptech.glide.load.e$a.a` @type ^`java.io.InputStream` := v1 @kind object;
  #L28e350.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28e356.  return @kind void;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `getType`(`com.bumptech.glide.load.e$a` v1 @kind this, `com.bumptech.glide.load.ImageHeaderParser` v2 @kind object) @signature `Lcom/bumptech/glide/load/e$a;.getType:(Lcom/bumptech/glide/load/ImageHeaderParser;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28e308.  v0:= v1.`com.bumptech.glide.load.e$a.a` @type ^`java.io.InputStream` @kind object;
  #L28e30c.  call temp:= `getType`(v2, v0) @signature `Lcom/bumptech/glide/load/ImageHeaderParser;.getType:(Ljava/io/InputStream;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @kind interface;
  #L28e312.  v2:= temp @kind object;
  #L28e314.  v0:= v1.`com.bumptech.glide.load.e$a.a` @type ^`java.io.InputStream` @kind object;
  #L28e318.  call `reset`(v0) @signature `Ljava/io/InputStream;.reset:()V` @kind virtual;
  #L28e31e.  return v2 @kind object;
  #L28e320.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28e322.  v0:= v1.`com.bumptech.glide.load.e$a.a` @type ^`java.io.InputStream` @kind object;
  #L28e326.  call `reset`(v0) @signature `Ljava/io/InputStream;.reset:()V` @kind virtual;
  #L28e32c.  throw v2;
  catch `java.lang.Throwable` @[L28e308..L28e314] goto L28e320;
}
