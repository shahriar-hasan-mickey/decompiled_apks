record `com.bumptech.glide.load.engine.z.n` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.engine.z.l` @kind interface {
  `com.bumptech.glide.load.engine.z.n$c` `com.bumptech.glide.load.engine.z.n.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.z.h` `com.bumptech.glide.load.engine.z.n.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.bumptech.glide.load.engine.z.n.c` @AccessFlag PRIVATE_FINAL;
}
global `android.graphics.Bitmap$Config`[] `@@com.bumptech.glide.load.engine.z.n.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.Bitmap$Config`[] `@@com.bumptech.glide.load.engine.z.n.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.Bitmap$Config`[] `@@com.bumptech.glide.load.engine.z.n.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.Bitmap$Config`[] `@@com.bumptech.glide.load.engine.z.n.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.Bitmap$Config`[] `@@com.bumptech.glide.load.engine.z.n.h` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/z/n;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L297e6c.  v0:= 2I;
  #L297e6e.  v0:= new `android.graphics.Bitmap$Config`[v0];
  #L297e72.  v1:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L297e76.  v2:= 0I;
  #L297e78.  v0[v2]:= v1 @kind object;
  #L297e7c.  v1:= 1I;
  #L297e7e.  v3:= 0I;
  #L297e80.  v0[v1]:= v3 @kind object;
  #L297e84.  v3:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L297e88.  v4:= 26I;
  #L297e8c.  if v3 < v4 then goto L297eac;
  #L297e90.  v3:= length @variable v0;
  #L297e92.  v3:= v3 + v1 @kind int;
  #L297e94.  call temp:= `copyOf`(v0, v3) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L297e9a.  v0:= temp @kind object;
  #L297e9c.  v0:= (`android.graphics.Bitmap$Config`[]) v0 @kind object;
  #L297ea0.  v3:= length @variable v0;
  #L297ea2.  v3:= v3 - v1 @kind int;
  #L297ea4.  v4:= `@@android.graphics.Bitmap$Config.RGBA_F16` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L297ea8.  v0[v3]:= v4 @kind object;
  #L297eac.  `@@com.bumptech.glide.load.engine.z.n.d` @type ^`android.graphics.Bitmap$Config`[] := v0 @kind object;
  #L297eb0.  v0:= `@@com.bumptech.glide.load.engine.z.n.d` @type ^`android.graphics.Bitmap$Config`[] @kind object;
  #L297eb4.  `@@com.bumptech.glide.load.engine.z.n.e` @type ^`android.graphics.Bitmap$Config`[] := v0 @kind object;
  #L297eb8.  v0:= new `android.graphics.Bitmap$Config`[v1];
  #L297ebc.  v3:= `@@android.graphics.Bitmap$Config.RGB_565` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L297ec0.  v0[v2]:= v3 @kind object;
  #L297ec4.  `@@com.bumptech.glide.load.engine.z.n.f` @type ^`android.graphics.Bitmap$Config`[] := v0 @kind object;
  #L297ec8.  v0:= new `android.graphics.Bitmap$Config`[v1];
  #L297ecc.  v3:= `@@android.graphics.Bitmap$Config.ARGB_4444` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L297ed0.  v0[v2]:= v3 @kind object;
  #L297ed4.  `@@com.bumptech.glide.load.engine.z.n.g` @type ^`android.graphics.Bitmap$Config`[] := v0 @kind object;
  #L297ed8.  v0:= new `android.graphics.Bitmap$Config`[v1];
  #L297edc.  v1:= `@@android.graphics.Bitmap$Config.ALPHA_8` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L297ee0.  v0[v2]:= v1 @kind object;
  #L297ee4.  `@@com.bumptech.glide.load.engine.z.n.h` @type ^`android.graphics.Bitmap$Config`[] := v0 @kind object;
  #L297ee8.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.z.n` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/z/n;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L297efc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L297f02.  v0:= new `com.bumptech.glide.load.engine.z.n$c`;
  #L297f06.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/z/n$c;.<init>:()V` @kind direct;
  #L297f0c.  v1.`com.bumptech.glide.load.engine.z.n.a` @type ^`com.bumptech.glide.load.engine.z.n$c` := v0 @kind object;
  #L297f10.  v0:= new `com.bumptech.glide.load.engine.z.h`;
  #L297f14.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/z/h;.<init>:()V` @kind direct;
  #L297f1a.  v1.`com.bumptech.glide.load.engine.z.n.b` @type ^`com.bumptech.glide.load.engine.z.h` := v0 @kind object;
  #L297f1e.  v0:= new `java.util.HashMap`;
  #L297f22.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L297f28.  v1.`com.bumptech.glide.load.engine.z.n.c` @type ^`java.util.Map` := v0 @kind object;
  #L297f2c.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.z.n$b` `a`(`com.bumptech.glide.load.engine.z.n` v8 @kind this, `int` v9 , `android.graphics.Bitmap$Config` v10 @kind object) @signature `Lcom/bumptech/glide/load/engine/z/n;.a:(ILandroid/graphics/Bitmap$Config;)Lcom/bumptech/glide/load/engine/z/n$b;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L297bf0.  v0:= v8.`com.bumptech.glide.load.engine.z.n.a` @type ^`com.bumptech.glide.load.engine.z.n$c` @kind object;
  #L297bf4.  call temp:= `get`(v0, v9, v10) @signature `Lcom/bumptech/glide/load/engine/z/n$c;.get:(ILandroid/graphics/Bitmap$Config;)Lcom/bumptech/glide/load/engine/z/n$b;` @kind virtual;
  #L297bfa.  v0:= temp @kind object;
  #L297bfc.  call temp:= `a`(v10) @signature `Lcom/bumptech/glide/load/engine/z/n;.a:(Landroid/graphics/Bitmap$Config;)[Landroid/graphics/Bitmap$Config;` @kind static;
  #L297c02.  v1:= temp @kind object;
  #L297c04.  v2:= length @variable v1;
  #L297c06.  v3:= 0I;
  #L297c08.  if v3 >= v2 then goto L297c88;
  #L297c0c.  v4:= v1[v3] @kind object;
  #L297c10.  call temp:= `b`(v8, v4) @signature `Lcom/bumptech/glide/load/engine/z/n;.b:(Landroid/graphics/Bitmap$Config;)Ljava/util/NavigableMap;` @kind direct;
  #L297c16.  v5:= temp @kind object;
  #L297c18.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L297c1e.  v6:= temp @kind object;
  #L297c20.  call temp:= `ceilingKey`(v5, v6) @signature `Ljava/util/NavigableMap;.ceilingKey:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L297c26.  v5:= temp @kind object;
  #L297c28.  v5:= (`java.lang.Integer`) v5 @kind object;
  #L297c2c.  if v5 == 0 then goto L297c82;
  #L297c30.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L297c36.  v6:= temp;
  #L297c38.  v7:= v9 * 8;
  #L297c3c.  if v6 > v7 then goto L297c82;
  #L297c40.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L297c46.  v1:= temp;
  #L297c48.  if v1 != v9 then goto L297c62;
  #L297c4c.  if v4 != 0 then goto L297c56;
  #L297c50.  if v10 == 0 then goto L297c88;
  #L297c54.  goto L297c62;
  #L297c56.  call temp:= `equals`(v4, v10) @signature `Landroid/graphics/Bitmap$Config;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L297c5c.  v9:= temp;
  #L297c5e.  if v9 != 0 then goto L297c88;
  #L297c62.  v9:= v8.`com.bumptech.glide.load.engine.z.n.a` @type ^`com.bumptech.glide.load.engine.z.n$c` @kind object;
  #L297c66.  call `offer`(v9, v0) @signature `Lcom/bumptech/glide/load/engine/z/d;.offer:(Lcom/bumptech/glide/load/engine/z/m;)V` @kind virtual;
  #L297c6c.  v9:= v8.`com.bumptech.glide.load.engine.z.n.a` @type ^`com.bumptech.glide.load.engine.z.n$c` @kind object;
  #L297c70.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L297c76.  v10:= temp;
  #L297c78.  call temp:= `get`(v9, v10, v4) @signature `Lcom/bumptech/glide/load/engine/z/n$c;.get:(ILandroid/graphics/Bitmap$Config;)Lcom/bumptech/glide/load/engine/z/n$b;` @kind virtual;
  #L297c7e.  v0:= temp @kind object;
  #L297c80.  goto L297c88;
  #L297c82.  v3:= v3 + 1;
  #L297c86.  goto L297c08;
  #L297c88.  return v0 @kind object;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.z.n` v3 @kind this, `java.lang.Integer` v4 @kind object, `android.graphics.Bitmap` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/z/n;.a:(Ljava/lang/Integer;Landroid/graphics/Bitmap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L297f40.  call temp:= `getConfig`(v5) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L297f46.  v0:= temp @kind object;
  #L297f48.  call temp:= `b`(v3, v0) @signature `Lcom/bumptech/glide/load/engine/z/n;.b:(Landroid/graphics/Bitmap$Config;)Ljava/util/NavigableMap;` @kind direct;
  #L297f4e.  v0:= temp @kind object;
  #L297f50.  call temp:= `get`(v0, v4) @signature `Ljava/util/NavigableMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L297f56.  v1:= temp @kind object;
  #L297f58.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L297f5c.  if v1 == 0 then goto L297f90;
  #L297f60.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L297f66.  v5:= temp;
  #L297f68.  v2:= 1I;
  #L297f6a.  if v5 != v2 then goto L297f76;
  #L297f6e.  call temp:= `remove`(v0, v4) @signature `Ljava/util/NavigableMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L297f74.  goto L297f8e;
  #L297f76.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L297f7c.  v5:= temp;
  #L297f7e.  v5:= v5 - v2 @kind int;
  #L297f80.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L297f86.  v5:= temp @kind object;
  #L297f88.  call temp:= `put`(v0, v4, v5) @signature `Ljava/util/NavigableMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L297f8e.  return @kind void;
  #L297f90.  v0:= new `java.lang.NullPointerException`;
  #L297f94.  v1:= new `java.lang.StringBuilder`;
  #L297f98.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L297f9e.  v2:= "Tried to decrement empty size, size: " @kind object;
  #L297fa2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L297fa8.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L297fae.  v4:= ", removed: " @kind object;
  #L297fb2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L297fb8.  call temp:= `logBitmap`(v3, v5) @signature `Lcom/bumptech/glide/load/engine/z/n;.logBitmap:(Landroid/graphics/Bitmap;)Ljava/lang/String;` @kind virtual;
  #L297fbe.  v4:= temp @kind object;
  #L297fc0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L297fc6.  v4:= ", this: " @kind object;
  #L297fca.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L297fd0.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L297fd6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L297fdc.  v4:= temp @kind object;
  #L297fde.  call `<init>`(v0, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L297fe4.  throw v0;
}
procedure `android.graphics.Bitmap$Config`[] `a`(`android.graphics.Bitmap$Config` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/z/n;.a:(Landroid/graphics/Bitmap$Config;)[Landroid/graphics/Bitmap$Config;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L297b70.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L297b74.  v1:= 26I;
  #L297b78.  if v0 < v1 then goto L297b92;
  #L297b7c.  v0:= `@@android.graphics.Bitmap$Config.RGBA_F16` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L297b80.  call temp:= `equals`(v0, v3) @signature `Landroid/graphics/Bitmap$Config;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L297b86.  v0:= temp;
  #L297b88.  if v0 == 0 then goto L297b92;
  #L297b8c.  v3:= `@@com.bumptech.glide.load.engine.z.n.e` @type ^`android.graphics.Bitmap$Config`[] @kind object;
  #L297b90.  return v3 @kind object;
  #L297b92.  v0:= `@@com.bumptech.glide.load.engine.z.n$a.a` @type ^`int`[] @kind object;
  #L297b96.  call temp:= `ordinal`(v3) @signature `Landroid/graphics/Bitmap$Config;.ordinal:()I` @kind virtual;
  #L297b9c.  v1:= temp;
  #L297b9e.  v0:= v0[v1];
  #L297ba2.  v1:= 1I;
  #L297ba4.  if v0 == v1 then goto L297bd8;
  #L297ba8.  v2:= 2I;
  #L297baa.  if v0 == v2 then goto L297bd2;
  #L297bae.  v2:= 3I;
  #L297bb0.  if v0 == v2 then goto L297bcc;
  #L297bb4.  v2:= 4I;
  #L297bb6.  if v0 == v2 then goto L297bc6;
  #L297bba.  v0:= new `android.graphics.Bitmap$Config`[v1];
  #L297bbe.  v1:= 0I;
  #L297bc0.  v0[v1]:= v3 @kind object;
  #L297bc4.  return v0 @kind object;
  #L297bc6.  v3:= `@@com.bumptech.glide.load.engine.z.n.h` @type ^`android.graphics.Bitmap$Config`[] @kind object;
  #L297bca.  return v3 @kind object;
  #L297bcc.  v3:= `@@com.bumptech.glide.load.engine.z.n.g` @type ^`android.graphics.Bitmap$Config`[] @kind object;
  #L297bd0.  return v3 @kind object;
  #L297bd2.  v3:= `@@com.bumptech.glide.load.engine.z.n.f` @type ^`android.graphics.Bitmap$Config`[] @kind object;
  #L297bd6.  return v3 @kind object;
  #L297bd8.  v3:= `@@com.bumptech.glide.load.engine.z.n.d` @type ^`android.graphics.Bitmap$Config`[] @kind object;
  #L297bdc.  return v3 @kind object;
}
procedure `java.lang.String` `b`(`int` v2 , `android.graphics.Bitmap$Config` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/z/n;.b:(ILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L297cb8.  v0:= new `java.lang.StringBuilder`;
  #L297cbc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L297cc2.  v1:= "[" @kind object;
  #L297cc6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L297ccc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L297cd2.  v2:= "](" @kind object;
  #L297cd6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L297cdc.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L297ce2.  v2:= ")" @kind object;
  #L297ce6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L297cec.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L297cf2.  v2:= temp @kind object;
  #L297cf4.  return v2 @kind object;
}
procedure `java.util.NavigableMap` `b`(`com.bumptech.glide.load.engine.z.n` v2 @kind this, `android.graphics.Bitmap$Config` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/z/n;.b:(Landroid/graphics/Bitmap$Config;)Ljava/util/NavigableMap;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L297e30.  v0:= v2.`com.bumptech.glide.load.engine.z.n.c` @type ^`java.util.Map` @kind object;
  #L297e34.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L297e3a.  v0:= temp @kind object;
  #L297e3c.  v0:= (`java.util.NavigableMap`) v0 @kind object;
  #L297e40.  if v0 != 0 then goto L297e58;
  #L297e44.  v0:= new `java.util.TreeMap`;
  #L297e48.  call `<init>`(v0) @signature `Ljava/util/TreeMap;.<init>:()V` @kind direct;
  #L297e4e.  v1:= v2.`com.bumptech.glide.load.engine.z.n.c` @type ^`java.util.Map` @kind object;
  #L297e52.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L297e58.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `get`(`com.bumptech.glide.load.engine.z.n` v2 @kind this, `int` v3 , `int` v4 , `android.graphics.Bitmap$Config` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/z/n;.get:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L297ae4.  call temp:= `getBitmapByteSize`(v3, v4, v5) @signature `Lcom/bumptech/glide/s/k;.getBitmapByteSize:(IILandroid/graphics/Bitmap$Config;)I` @kind static;
  #L297aea.  v0:= temp;
  #L297aec.  call temp:= `a`(v2, v0, v5) @signature `Lcom/bumptech/glide/load/engine/z/n;.a:(ILandroid/graphics/Bitmap$Config;)Lcom/bumptech/glide/load/engine/z/n$b;` @kind direct;
  #L297af2.  v0:= temp @kind object;
  #L297af4.  v1:= v2.`com.bumptech.glide.load.engine.z.n.b` @type ^`com.bumptech.glide.load.engine.z.h` @kind object;
  #L297af8.  call temp:= `get`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/z/h;.get:(Lcom/bumptech/glide/load/engine/z/m;)Ljava/lang/Object;` @kind virtual;
  #L297afe.  v1:= temp @kind object;
  #L297b00.  v1:= (`android.graphics.Bitmap`) v1 @kind object;
  #L297b04.  if v1 == 0 then goto L297b20;
  #L297b08.  v0:= v0.`com.bumptech.glide.load.engine.z.n$b.b` @type ^`int`;
  #L297b0c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L297b12.  v0:= temp @kind object;
  #L297b14.  call `a`(v2, v0, v1) @signature `Lcom/bumptech/glide/load/engine/z/n;.a:(Ljava/lang/Integer;Landroid/graphics/Bitmap;)V` @kind direct;
  #L297b1a.  call `reconfigure`(v1, v3, v4, v5) @signature `Landroid/graphics/Bitmap;.reconfigure:(IILandroid/graphics/Bitmap$Config;)V` @kind virtual;
  #L297b20.  return v1 @kind object;
}
procedure `int` `getSize`(`com.bumptech.glide.load.engine.z.n` v0 @kind this, `android.graphics.Bitmap` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/z/n;.getSize:(Landroid/graphics/Bitmap;)I` @AccessFlag PUBLIC {
    temp;

  #L297c9c.  call temp:= `getBitmapByteSize`(v1) @signature `Lcom/bumptech/glide/s/k;.getBitmapByteSize:(Landroid/graphics/Bitmap;)I` @kind static;
  #L297ca2.  v1:= temp;
  #L297ca4.  return v1;
}
procedure `java.lang.String` `logBitmap`(`com.bumptech.glide.load.engine.z.n` v0 @kind this, `int` v1 , `int` v2 , `android.graphics.Bitmap$Config` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/z/n;.logBitmap:(IILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L297d34.  call temp:= `getBitmapByteSize`(v1, v2, v3) @signature `Lcom/bumptech/glide/s/k;.getBitmapByteSize:(IILandroid/graphics/Bitmap$Config;)I` @kind static;
  #L297d3a.  v1:= temp;
  #L297d3c.  call temp:= `b`(v1, v3) @signature `Lcom/bumptech/glide/load/engine/z/n;.b:(ILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @kind static;
  #L297d42.  v1:= temp @kind object;
  #L297d44.  return v1 @kind object;
}
procedure `java.lang.String` `logBitmap`(`com.bumptech.glide.load.engine.z.n` v1 @kind this, `android.graphics.Bitmap` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/z/n;.logBitmap:(Landroid/graphics/Bitmap;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L297d08.  call temp:= `getBitmapByteSize`(v2) @signature `Lcom/bumptech/glide/s/k;.getBitmapByteSize:(Landroid/graphics/Bitmap;)I` @kind static;
  #L297d0e.  v0:= temp;
  #L297d10.  call temp:= `getConfig`(v2) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L297d16.  v2:= temp @kind object;
  #L297d18.  call temp:= `b`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/z/n;.b:(ILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @kind static;
  #L297d1e.  v2:= temp @kind object;
  #L297d20.  return v2 @kind object;
}
procedure `void` `put`(`com.bumptech.glide.load.engine.z.n` v3 @kind this, `android.graphics.Bitmap` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/z/n;.put:(Landroid/graphics/Bitmap;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L297ff8.  call temp:= `getBitmapByteSize`(v4) @signature `Lcom/bumptech/glide/s/k;.getBitmapByteSize:(Landroid/graphics/Bitmap;)I` @kind static;
  #L297ffe.  v0:= temp;
  #L298000.  v1:= v3.`com.bumptech.glide.load.engine.z.n.a` @type ^`com.bumptech.glide.load.engine.z.n$c` @kind object;
  #L298004.  call temp:= `getConfig`(v4) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L29800a.  v2:= temp @kind object;
  #L29800c.  call temp:= `get`(v1, v0, v2) @signature `Lcom/bumptech/glide/load/engine/z/n$c;.get:(ILandroid/graphics/Bitmap$Config;)Lcom/bumptech/glide/load/engine/z/n$b;` @kind virtual;
  #L298012.  v0:= temp @kind object;
  #L298014.  v1:= v3.`com.bumptech.glide.load.engine.z.n.b` @type ^`com.bumptech.glide.load.engine.z.h` @kind object;
  #L298018.  call `put`(v1, v0, v4) @signature `Lcom/bumptech/glide/load/engine/z/h;.put:(Lcom/bumptech/glide/load/engine/z/m;Ljava/lang/Object;)V` @kind virtual;
  #L29801e.  call temp:= `getConfig`(v4) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L298024.  v4:= temp @kind object;
  #L298026.  call temp:= `b`(v3, v4) @signature `Lcom/bumptech/glide/load/engine/z/n;.b:(Landroid/graphics/Bitmap$Config;)Ljava/util/NavigableMap;` @kind direct;
  #L29802c.  v4:= temp @kind object;
  #L29802e.  v1:= v0.`com.bumptech.glide.load.engine.z.n$b.b` @type ^`int`;
  #L298032.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L298038.  v1:= temp @kind object;
  #L29803a.  call temp:= `get`(v4, v1) @signature `Ljava/util/NavigableMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L298040.  v1:= temp @kind object;
  #L298042.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L298046.  v0:= v0.`com.bumptech.glide.load.engine.z.n$b.b` @type ^`int`;
  #L29804a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L298050.  v0:= temp @kind object;
  #L298052.  v2:= 1I;
  #L298054.  if v1 != 0 then goto L29805a;
  #L298058.  goto L298064;
  #L29805a.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L298060.  v1:= temp;
  #L298062.  v2:= v2 + v1 @kind int;
  #L298064.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L29806a.  v1:= temp @kind object;
  #L29806c.  call temp:= `put`(v4, v0, v1) @signature `Ljava/util/NavigableMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L298072.  return @kind void;
}
procedure `android.graphics.Bitmap` `removeLast`(`com.bumptech.glide.load.engine.z.n` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/z/n;.removeLast:()Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L297b34.  v0:= v2.`com.bumptech.glide.load.engine.z.n.b` @type ^`com.bumptech.glide.load.engine.z.h` @kind object;
  #L297b38.  call temp:= `removeLast`(v0) @signature `Lcom/bumptech/glide/load/engine/z/h;.removeLast:()Ljava/lang/Object;` @kind virtual;
  #L297b3e.  v0:= temp @kind object;
  #L297b40.  v0:= (`android.graphics.Bitmap`) v0 @kind object;
  #L297b44.  if v0 == 0 then goto L297b5e;
  #L297b48.  call temp:= `getBitmapByteSize`(v0) @signature `Lcom/bumptech/glide/s/k;.getBitmapByteSize:(Landroid/graphics/Bitmap;)I` @kind static;
  #L297b4e.  v1:= temp;
  #L297b50.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L297b56.  v1:= temp @kind object;
  #L297b58.  call `a`(v2, v1, v0) @signature `Lcom/bumptech/glide/load/engine/z/n;.a:(Ljava/lang/Integer;Landroid/graphics/Bitmap;)V` @kind direct;
  #L297b5e.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.z.n` v4 @kind this) @signature `Lcom/bumptech/glide/load/engine/z/n;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L297d58.  v0:= new `java.lang.StringBuilder`;
  #L297d5c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L297d62.  v1:= "SizeConfigStrategy{groupedMap=" @kind object;
  #L297d66.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L297d6c.  v1:= v4.`com.bumptech.glide.load.engine.z.n.b` @type ^`com.bumptech.glide.load.engine.z.h` @kind object;
  #L297d70.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L297d76.  v1:= ", sortedSizes=(" @kind object;
  #L297d7a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L297d80.  v1:= v4.`com.bumptech.glide.load.engine.z.n.c` @type ^`java.util.Map` @kind object;
  #L297d84.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L297d8a.  v1:= temp @kind object;
  #L297d8c.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L297d92.  v1:= temp @kind object;
  #L297d94.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L297d9a.  v2:= temp;
  #L297d9c.  if v2 == 0 then goto L297dde;
  #L297da0.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L297da6.  v2:= temp @kind object;
  #L297da8.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L297dac.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L297db2.  v3:= temp @kind object;
  #L297db4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L297dba.  v3:= 91I;
  #L297dbe.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L297dc4.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L297dca.  v2:= temp @kind object;
  #L297dcc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L297dd2.  v2:= "], " @kind object;
  #L297dd6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L297ddc.  goto L297d94;
  #L297dde.  v1:= v4.`com.bumptech.glide.load.engine.z.n.c` @type ^`java.util.Map` @kind object;
  #L297de2.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L297de8.  v1:= temp;
  #L297dea.  if v1 != 0 then goto L297e0c;
  #L297dee.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L297df4.  v1:= temp;
  #L297df6.  v1:= v1 + -2;
  #L297dfa.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L297e00.  v2:= temp;
  #L297e02.  v3:= "" @kind object;
  #L297e06.  call temp:= `replace`(v0, v1, v2, v3) @signature `Ljava/lang/StringBuilder;.replace:(IILjava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L297e0c.  v1:= ")}" @kind object;
  #L297e10.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L297e16.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L297e1c.  v0:= temp @kind object;
  #L297e1e.  return v0 @kind object;
}
