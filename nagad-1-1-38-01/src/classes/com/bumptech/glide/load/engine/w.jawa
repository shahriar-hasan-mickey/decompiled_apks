record `com.bumptech.glide.load.engine.w` @kind class @AccessFlag FINAL extends `com.bumptech.glide.load.f` @kind interface {
  `com.bumptech.glide.load.engine.z.b` `com.bumptech.glide.load.engine.w.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.f` `com.bumptech.glide.load.engine.w.c` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.f` `com.bumptech.glide.load.engine.w.d` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.w.e` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.w.f` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.bumptech.glide.load.engine.w.g` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.h` `com.bumptech.glide.load.engine.w.h` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.l` `com.bumptech.glide.load.engine.w.i` @AccessFlag PRIVATE_FINAL;
}
global `com.bumptech.glide.s.g` `@@com.bumptech.glide.load.engine.w.j` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/w;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L29592c.  v0:= new `com.bumptech.glide.s.g`;
  #L295930.  v1:= 50L;
  #L295934.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/s/g;.<init>:(J)V` @kind direct;
  #L29593a.  `@@com.bumptech.glide.load.engine.w.j` @type ^`com.bumptech.glide.s.g` := v0 @kind object;
  #L29593e.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.w` v0 @kind this, `com.bumptech.glide.load.engine.z.b` v1 @kind object, `com.bumptech.glide.load.f` v2 @kind object, `com.bumptech.glide.load.f` v3 @kind object, `int` v4 , `int` v5 , `com.bumptech.glide.load.l` v6 @kind object, `java.lang.Class` v7 @kind object, `com.bumptech.glide.load.h` v8 @kind object) @signature `Lcom/bumptech/glide/load/engine/w;.<init>:(Lcom/bumptech/glide/load/engine/z/b;Lcom/bumptech/glide/load/f;Lcom/bumptech/glide/load/f;IILcom/bumptech/glide/load/l;Ljava/lang/Class;Lcom/bumptech/glide/load/h;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L295950.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L295956.  v0.`com.bumptech.glide.load.engine.w.b` @type ^`com.bumptech.glide.load.engine.z.b` := v1 @kind object;
  #L29595a.  v0.`com.bumptech.glide.load.engine.w.c` @type ^`com.bumptech.glide.load.f` := v2 @kind object;
  #L29595e.  v0.`com.bumptech.glide.load.engine.w.d` @type ^`com.bumptech.glide.load.f` := v3 @kind object;
  #L295962.  v0.`com.bumptech.glide.load.engine.w.e` @type ^`int` := v4;
  #L295966.  v0.`com.bumptech.glide.load.engine.w.f` @type ^`int` := v5;
  #L29596a.  v0.`com.bumptech.glide.load.engine.w.i` @type ^`com.bumptech.glide.load.l` := v6 @kind object;
  #L29596e.  v0.`com.bumptech.glide.load.engine.w.g` @type ^`java.lang.Class` := v7 @kind object;
  #L295972.  v0.`com.bumptech.glide.load.engine.w.h` @type ^`com.bumptech.glide.load.h` := v8 @kind object;
  #L295976.  return @kind void;
}
procedure `byte`[] `a`(`com.bumptech.glide.load.engine.w` v3 @kind this) @signature `Lcom/bumptech/glide/load/engine/w;.a:()[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L295798.  v0:= `@@com.bumptech.glide.load.engine.w.j` @type ^`com.bumptech.glide.s.g` @kind object;
  #L29579c.  v1:= v3.`com.bumptech.glide.load.engine.w.g` @type ^`java.lang.Class` @kind object;
  #L2957a0.  call temp:= `get`(v0, v1) @signature `Lcom/bumptech/glide/s/g;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2957a6.  v0:= temp @kind object;
  #L2957a8.  v0:= (`byte`[]) v0 @kind object;
  #L2957ac.  if v0 != 0 then goto L2957d6;
  #L2957b0.  v0:= v3.`com.bumptech.glide.load.engine.w.g` @type ^`java.lang.Class` @kind object;
  #L2957b4.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2957ba.  v0:= temp @kind object;
  #L2957bc.  v1:= `@@com.bumptech.glide.load.f.a` @type ^`java.nio.charset.Charset` @kind object;
  #L2957c0.  call temp:= `getBytes`(v0, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L2957c6.  v0:= temp @kind object;
  #L2957c8.  v1:= `@@com.bumptech.glide.load.engine.w.j` @type ^`com.bumptech.glide.s.g` @kind object;
  #L2957cc.  v2:= v3.`com.bumptech.glide.load.engine.w.g` @type ^`java.lang.Class` @kind object;
  #L2957d0.  call temp:= `put`(v1, v2, v0) @signature `Lcom/bumptech/glide/s/g;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2957d6.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.engine.w` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/w;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2956f8.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.load.engine.w` @kind boolean;
  #L2956fc.  v1:= 0I;
  #L2956fe.  if v0 == 0 then goto L295784;
  #L295702.  v4:= (`com.bumptech.glide.load.engine.w`) v4 @kind object;
  #L295706.  v0:= v3.`com.bumptech.glide.load.engine.w.f` @type ^`int`;
  #L29570a.  v2:= v4.`com.bumptech.glide.load.engine.w.f` @type ^`int`;
  #L29570e.  if v0 != v2 then goto L295784;
  #L295712.  v0:= v3.`com.bumptech.glide.load.engine.w.e` @type ^`int`;
  #L295716.  v2:= v4.`com.bumptech.glide.load.engine.w.e` @type ^`int`;
  #L29571a.  if v0 != v2 then goto L295784;
  #L29571e.  v0:= v3.`com.bumptech.glide.load.engine.w.i` @type ^`com.bumptech.glide.load.l` @kind object;
  #L295722.  v2:= v4.`com.bumptech.glide.load.engine.w.i` @type ^`com.bumptech.glide.load.l` @kind object;
  #L295726.  call temp:= `bothNullOrEqual`(v0, v2) @signature `Lcom/bumptech/glide/s/k;.bothNullOrEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L29572c.  v0:= temp;
  #L29572e.  if v0 == 0 then goto L295784;
  #L295732.  v0:= v3.`com.bumptech.glide.load.engine.w.g` @type ^`java.lang.Class` @kind object;
  #L295736.  v2:= v4.`com.bumptech.glide.load.engine.w.g` @type ^`java.lang.Class` @kind object;
  #L29573a.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L295740.  v0:= temp;
  #L295742.  if v0 == 0 then goto L295784;
  #L295746.  v0:= v3.`com.bumptech.glide.load.engine.w.c` @type ^`com.bumptech.glide.load.f` @kind object;
  #L29574a.  v2:= v4.`com.bumptech.glide.load.engine.w.c` @type ^`com.bumptech.glide.load.f` @kind object;
  #L29574e.  call temp:= `equals`(v0, v2) @signature `Lcom/bumptech/glide/load/f;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L295754.  v0:= temp;
  #L295756.  if v0 == 0 then goto L295784;
  #L29575a.  v0:= v3.`com.bumptech.glide.load.engine.w.d` @type ^`com.bumptech.glide.load.f` @kind object;
  #L29575e.  v2:= v4.`com.bumptech.glide.load.engine.w.d` @type ^`com.bumptech.glide.load.f` @kind object;
  #L295762.  call temp:= `equals`(v0, v2) @signature `Lcom/bumptech/glide/load/f;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L295768.  v0:= temp;
  #L29576a.  if v0 == 0 then goto L295784;
  #L29576e.  v0:= v3.`com.bumptech.glide.load.engine.w.h` @type ^`com.bumptech.glide.load.h` @kind object;
  #L295772.  v4:= v4.`com.bumptech.glide.load.engine.w.h` @type ^`com.bumptech.glide.load.h` @kind object;
  #L295776.  call temp:= `equals`(v0, v4) @signature `Lcom/bumptech/glide/load/h;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L29577c.  v4:= temp;
  #L29577e.  if v4 == 0 then goto L295784;
  #L295782.  v1:= 1I;
  #L295784.  return v1;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.engine.w` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/w;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2957e8.  v0:= v2.`com.bumptech.glide.load.engine.w.c` @type ^`com.bumptech.glide.load.f` @kind object;
  #L2957ec.  call temp:= `hashCode`(v0) @signature `Lcom/bumptech/glide/load/f;.hashCode:()I` @kind interface;
  #L2957f2.  v0:= temp;
  #L2957f4.  v0:= v0 * 31;
  #L2957f8.  v1:= v2.`com.bumptech.glide.load.engine.w.d` @type ^`com.bumptech.glide.load.f` @kind object;
  #L2957fc.  call temp:= `hashCode`(v1) @signature `Lcom/bumptech/glide/load/f;.hashCode:()I` @kind interface;
  #L295802.  v1:= temp;
  #L295804.  v0:= v0 + v1 @kind int;
  #L295806.  v0:= v0 * 31;
  #L29580a.  v1:= v2.`com.bumptech.glide.load.engine.w.e` @type ^`int`;
  #L29580e.  v0:= v0 + v1 @kind int;
  #L295810.  v0:= v0 * 31;
  #L295814.  v1:= v2.`com.bumptech.glide.load.engine.w.f` @type ^`int`;
  #L295818.  v0:= v0 + v1 @kind int;
  #L29581a.  v1:= v2.`com.bumptech.glide.load.engine.w.i` @type ^`com.bumptech.glide.load.l` @kind object;
  #L29581e.  if v1 == 0 then goto L295830;
  #L295822.  v0:= v0 * 31;
  #L295826.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L29582c.  v1:= temp;
  #L29582e.  v0:= v0 + v1 @kind int;
  #L295830.  v0:= v0 * 31;
  #L295834.  v1:= v2.`com.bumptech.glide.load.engine.w.g` @type ^`java.lang.Class` @kind object;
  #L295838.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L29583e.  v1:= temp;
  #L295840.  v0:= v0 + v1 @kind int;
  #L295842.  v0:= v0 * 31;
  #L295846.  v1:= v2.`com.bumptech.glide.load.engine.w.h` @type ^`com.bumptech.glide.load.h` @kind object;
  #L29584a.  call temp:= `hashCode`(v1) @signature `Lcom/bumptech/glide/load/h;.hashCode:()I` @kind virtual;
  #L295850.  v1:= temp;
  #L295852.  v0:= v0 + v1 @kind int;
  #L295854.  return v0;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.w` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/w;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L295868.  v0:= new `java.lang.StringBuilder`;
  #L29586c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L295872.  v1:= "ResourceCacheKey{sourceKey=" @kind object;
  #L295876.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29587c.  v1:= v2.`com.bumptech.glide.load.engine.w.c` @type ^`com.bumptech.glide.load.f` @kind object;
  #L295880.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L295886.  v1:= ", signature=" @kind object;
  #L29588a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L295890.  v1:= v2.`com.bumptech.glide.load.engine.w.d` @type ^`com.bumptech.glide.load.f` @kind object;
  #L295894.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29589a.  v1:= ", width=" @kind object;
  #L29589e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2958a4.  v1:= v2.`com.bumptech.glide.load.engine.w.e` @type ^`int`;
  #L2958a8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2958ae.  v1:= ", height=" @kind object;
  #L2958b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2958b8.  v1:= v2.`com.bumptech.glide.load.engine.w.f` @type ^`int`;
  #L2958bc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2958c2.  v1:= ", decodedResourceClass=" @kind object;
  #L2958c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2958cc.  v1:= v2.`com.bumptech.glide.load.engine.w.g` @type ^`java.lang.Class` @kind object;
  #L2958d0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2958d6.  v1:= ", transformation='" @kind object;
  #L2958da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2958e0.  v1:= v2.`com.bumptech.glide.load.engine.w.i` @type ^`com.bumptech.glide.load.l` @kind object;
  #L2958e4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2958ea.  v1:= 39I;
  #L2958ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2958f4.  v1:= ", options=" @kind object;
  #L2958f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2958fe.  v1:= v2.`com.bumptech.glide.load.engine.w.h` @type ^`com.bumptech.glide.load.h` @kind object;
  #L295902.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L295908.  v1:= 125I;
  #L29590c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L295912.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L295918.  v0:= temp @kind object;
  #L29591a.  return v0 @kind object;
}
procedure `void` `updateDiskCacheKey`(`com.bumptech.glide.load.engine.w` v3 @kind this, `java.security.MessageDigest` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/w;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L295988.  v0:= v3.`com.bumptech.glide.load.engine.w.b` @type ^`com.bumptech.glide.load.engine.z.b` @kind object;
  #L29598c.  v1:= constclass @type ^`byte`[] @kind object;
  #L295990.  v2:= 8I;
  #L295994.  call temp:= `getExact`(v0, v2, v1) @signature `Lcom/bumptech/glide/load/engine/z/b;.getExact:(ILjava/lang/Class;)Ljava/lang/Object;` @kind interface;
  #L29599a.  v0:= temp @kind object;
  #L29599c.  v0:= (`byte`[]) v0 @kind object;
  #L2959a0.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L2959a6.  v1:= temp @kind object;
  #L2959a8.  v2:= v3.`com.bumptech.glide.load.engine.w.e` @type ^`int`;
  #L2959ac.  call temp:= `putInt`(v1, v2) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2959b2.  v1:= temp @kind object;
  #L2959b4.  v2:= v3.`com.bumptech.glide.load.engine.w.f` @type ^`int`;
  #L2959b8.  call temp:= `putInt`(v1, v2) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2959be.  v1:= temp @kind object;
  #L2959c0.  call temp:= `array`(v1) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L2959c6.  v1:= v3.`com.bumptech.glide.load.engine.w.d` @type ^`com.bumptech.glide.load.f` @kind object;
  #L2959ca.  call `updateDiskCacheKey`(v1, v4) @signature `Lcom/bumptech/glide/load/f;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @kind interface;
  #L2959d0.  v1:= v3.`com.bumptech.glide.load.engine.w.c` @type ^`com.bumptech.glide.load.f` @kind object;
  #L2959d4.  call `updateDiskCacheKey`(v1, v4) @signature `Lcom/bumptech/glide/load/f;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @kind interface;
  #L2959da.  call `update`(v4, v0) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L2959e0.  v1:= v3.`com.bumptech.glide.load.engine.w.i` @type ^`com.bumptech.glide.load.l` @kind object;
  #L2959e4.  if v1 == 0 then goto L2959ee;
  #L2959e8.  call `updateDiskCacheKey`(v1, v4) @signature `Lcom/bumptech/glide/load/f;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @kind interface;
  #L2959ee.  v1:= v3.`com.bumptech.glide.load.engine.w.h` @type ^`com.bumptech.glide.load.h` @kind object;
  #L2959f2.  call `updateDiskCacheKey`(v1, v4) @signature `Lcom/bumptech/glide/load/h;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @kind virtual;
  #L2959f8.  call temp:= `a`(v3) @signature `Lcom/bumptech/glide/load/engine/w;.a:()[B` @kind direct;
  #L2959fe.  v1:= temp @kind object;
  #L295a00.  call `update`(v4, v1) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L295a06.  v4:= v3.`com.bumptech.glide.load.engine.w.b` @type ^`com.bumptech.glide.load.engine.z.b` @kind object;
  #L295a0a.  call `put`(v4, v0) @signature `Lcom/bumptech/glide/load/engine/z/b;.put:(Ljava/lang/Object;)V` @kind interface;
  #L295a10.  return @kind void;
}
