record `com.bumptech.glide.load.engine.h$f` @kind class @AccessFlag  {
  `boolean` `com.bumptech.glide.load.engine.h$f.a` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.h$f.b` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.h$f.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.h$f` v0 @kind this) @signature `Lcom/bumptech/glide/load/engine/h$f;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L291818.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29181e.  return @kind void;
}
procedure `boolean` `b`(`com.bumptech.glide.load.engine.h$f` v1 @kind this, `boolean` v2 ) @signature `Lcom/bumptech/glide/load/engine/h$f;.b:(Z)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L29173c.  v0:= v1.`com.bumptech.glide.load.engine.h$f.c` @type ^`boolean` @kind boolean;
  #L291740.  if v0 != 0 then goto L291750;
  #L291744.  if v2 != 0 then goto L291750;
  #L291748.  v2:= v1.`com.bumptech.glide.load.engine.h$f.b` @type ^`boolean` @kind boolean;
  #L29174c.  if v2 == 0 then goto L29175c;
  #L291750.  v2:= v1.`com.bumptech.glide.load.engine.h$f.a` @type ^`boolean` @kind boolean;
  #L291754.  if v2 == 0 then goto L29175c;
  #L291758.  v2:= 1I;
  #L29175a.  goto L29175e;
  #L29175c.  v2:= 0I;
  #L29175e.  return v2;
}
procedure `boolean` `a`(`com.bumptech.glide.load.engine.h$f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/h$f;.a:()Z` @AccessFlag  {
    temp;
    v0;

  #L291770.  @monitorenter v1
  #L291772.  v0:= 1I;
  #L291774.  v1.`com.bumptech.glide.load.engine.h$f.b` @type ^`boolean` := v0 @kind boolean;
  #L291778.  v0:= 0I;
  #L29177a.  call temp:= `b`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/h$f;.b:(Z)Z` @kind direct;
  #L291780.  v0:= temp;
  #L291782.  @monitorexit v1
  #L291784.  return v0;
  #L291786.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L291788.  @monitorexit v1
  #L29178a.  throw v0;
  catch `java.lang.Throwable` @[L291774..L291782] goto L291786;
}
procedure `boolean` `a`(`com.bumptech.glide.load.engine.h$f` v1 @kind this, `boolean` v2 ) @signature `Lcom/bumptech/glide/load/engine/h$f;.a:(Z)Z` @AccessFlag  {
    temp;
    v0;

  #L2917e0.  @monitorenter v1
  #L2917e2.  v0:= 1I;
  #L2917e4.  v1.`com.bumptech.glide.load.engine.h$f.a` @type ^`boolean` := v0 @kind boolean;
  #L2917e8.  call temp:= `b`(v1, v2) @signature `Lcom/bumptech/glide/load/engine/h$f;.b:(Z)Z` @kind direct;
  #L2917ee.  v2:= temp;
  #L2917f0.  @monitorexit v1
  #L2917f2.  return v2;
  #L2917f4.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2917f6.  @monitorexit v1
  #L2917f8.  throw v2;
  catch `java.lang.Throwable` @[L2917e4..L2917f0] goto L2917f4;
}
procedure `boolean` `b`(`com.bumptech.glide.load.engine.h$f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/h$f;.b:()Z` @AccessFlag  {
    temp;
    v0;

  #L2917a8.  @monitorenter v1
  #L2917aa.  v0:= 1I;
  #L2917ac.  v1.`com.bumptech.glide.load.engine.h$f.c` @type ^`boolean` := v0 @kind boolean;
  #L2917b0.  v0:= 0I;
  #L2917b2.  call temp:= `b`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/h$f;.b:(Z)Z` @kind direct;
  #L2917b8.  v0:= temp;
  #L2917ba.  @monitorexit v1
  #L2917bc.  return v0;
  #L2917be.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2917c0.  @monitorexit v1
  #L2917c2.  throw v0;
  catch `java.lang.Throwable` @[L2917ac..L2917ba] goto L2917be;
}
procedure `void` `c`(`com.bumptech.glide.load.engine.h$f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/h$f;.c:()V` @AccessFlag  {
    temp;
    v0;

  #L291830.  @monitorenter v1
  #L291832.  v0:= 0I;
  #L291834.  v1.`com.bumptech.glide.load.engine.h$f.b` @type ^`boolean` := v0 @kind boolean;
  #L291838.  v1.`com.bumptech.glide.load.engine.h$f.a` @type ^`boolean` := v0 @kind boolean;
  #L29183c.  v1.`com.bumptech.glide.load.engine.h$f.c` @type ^`boolean` := v0 @kind boolean;
  #L291840.  @monitorexit v1
  #L291842.  return @kind void;
  #L291844.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L291846.  @monitorexit v1
  #L291848.  throw v0;
  catch `java.lang.Throwable` @[L291834..L291840] goto L291844;
}
