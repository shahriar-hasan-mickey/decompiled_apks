record `com.bumptech.glide.load.engine.r` @kind class @AccessFlag FINAL {
  `java.util.Map` `com.bumptech.glide.load.engine.r.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.bumptech.glide.load.engine.r.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.r` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/r;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L294ee0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L294ee6.  v0:= new `java.util.HashMap`;
  #L294eea.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L294ef0.  v1.`com.bumptech.glide.load.engine.r.a` @type ^`java.util.Map` := v0 @kind object;
  #L294ef4.  v0:= new `java.util.HashMap`;
  #L294ef8.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L294efe.  v1.`com.bumptech.glide.load.engine.r.b` @type ^`java.util.Map` := v0 @kind object;
  #L294f02.  return @kind void;
}
procedure `java.util.Map` `a`(`com.bumptech.glide.load.engine.r` v0 @kind this, `boolean` v1 ) @signature `Lcom/bumptech/glide/load/engine/r;.a:(Z)Ljava/util/Map;` @AccessFlag PRIVATE {
    temp;

  #L294ec0.  if v1 == 0 then goto L294eca;
  #L294ec4.  v1:= v0.`com.bumptech.glide.load.engine.r.b` @type ^`java.util.Map` @kind object;
  #L294ec8.  goto L294ece;
  #L294eca.  v1:= v0.`com.bumptech.glide.load.engine.r.a` @type ^`java.util.Map` @kind object;
  #L294ece.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.engine.l` `a`(`com.bumptech.glide.load.engine.r` v0 @kind this, `com.bumptech.glide.load.f` v1 @kind object, `boolean` v2 ) @signature `Lcom/bumptech/glide/load/engine/r;.a:(Lcom/bumptech/glide/load/f;Z)Lcom/bumptech/glide/load/engine/l;` @AccessFlag  {
    temp;

  #L294e98.  call temp:= `a`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/r;.a:(Z)Ljava/util/Map;` @kind direct;
  #L294e9e.  v2:= temp @kind object;
  #L294ea0.  call temp:= `get`(v2, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L294ea6.  v1:= temp @kind object;
  #L294ea8.  v1:= (`com.bumptech.glide.load.engine.l`) v1 @kind object;
  #L294eac.  return v1 @kind object;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.r` v1 @kind this, `com.bumptech.glide.load.f` v2 @kind object, `com.bumptech.glide.load.engine.l` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/r;.a:(Lcom/bumptech/glide/load/f;Lcom/bumptech/glide/load/engine/l;)V` @AccessFlag  {
    temp;
    v0;

  #L294f14.  call temp:= `e`(v3) @signature `Lcom/bumptech/glide/load/engine/l;.e:()Z` @kind virtual;
  #L294f1a.  v0:= temp;
  #L294f1c.  call temp:= `a`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/r;.a:(Z)Ljava/util/Map;` @kind direct;
  #L294f22.  v0:= temp @kind object;
  #L294f24.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L294f2a.  return @kind void;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.r` v2 @kind this, `com.bumptech.glide.load.f` v3 @kind object, `com.bumptech.glide.load.engine.l` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/r;.b:(Lcom/bumptech/glide/load/f;Lcom/bumptech/glide/load/engine/l;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L294f3c.  call temp:= `e`(v4) @signature `Lcom/bumptech/glide/load/engine/l;.e:()Z` @kind virtual;
  #L294f42.  v0:= temp;
  #L294f44.  call temp:= `a`(v2, v0) @signature `Lcom/bumptech/glide/load/engine/r;.a:(Z)Ljava/util/Map;` @kind direct;
  #L294f4a.  v0:= temp @kind object;
  #L294f4c.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L294f52.  v1:= temp @kind object;
  #L294f54.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L294f5a.  v4:= temp;
  #L294f5c.  if v4 == 0 then goto L294f66;
  #L294f60.  call temp:= `remove`(v0, v3) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L294f66.  return @kind void;
}
