record `com.bumptech.glide.load.engine.a0.g` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.s.g` @kind class, `com.bumptech.glide.load.engine.a0.h` @kind interface {
  `com.bumptech.glide.load.engine.a0.h$a` `com.bumptech.glide.load.engine.a0.g.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.a0.g` v0 @kind this, `long` v1 ) @signature `Lcom/bumptech/glide/load/engine/a0/g;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2987e4.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/s/g;.<init>:(J)V` @kind direct;
  #L2987ea.  return @kind void;
}
procedure `int` `getSize`(`com.bumptech.glide.load.engine.a0.g` v0 @kind this, `com.bumptech.glide.load.engine.u` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/a0/g;.getSize:(Lcom/bumptech/glide/load/engine/u;)I` @AccessFlag PROTECTED {
    temp;

  #L298798.  if v1 != 0 then goto L2987a8;
  #L29879c.  v1:= 0I;
  #L29879e.  call temp:= `getSize`(v0, v1) @signature `Lcom/bumptech/glide/s/g;.getSize:(Ljava/lang/Object;)I` @kind super;
  #L2987a4.  v1:= temp;
  #L2987a6.  return v1;
  #L2987a8.  call temp:= `getSize`(v1) @signature `Lcom/bumptech/glide/load/engine/u;.getSize:()I` @kind interface;
  #L2987ae.  v1:= temp;
  #L2987b0.  return v1;
}
procedure `int` `getSize`(`com.bumptech.glide.load.engine.a0.g` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/a0/g;.getSize:(Ljava/lang/Object;)I` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L2987c4.  v1:= (`com.bumptech.glide.load.engine.u`) v1 @kind object;
  #L2987c8.  call temp:= `getSize`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/a0/g;.getSize:(Lcom/bumptech/glide/load/engine/u;)I` @kind virtual;
  #L2987ce.  v1:= temp;
  #L2987d0.  return v1;
}
procedure `void` `onItemEvicted`(`com.bumptech.glide.load.engine.a0.g` v0 @kind this, `com.bumptech.glide.load.f` v1 @kind object, `com.bumptech.glide.load.engine.u` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/a0/g;.onItemEvicted:(Lcom/bumptech/glide/load/f;Lcom/bumptech/glide/load/engine/u;)V` @AccessFlag PROTECTED {
    temp;

  #L2987fc.  v1:= v0.`com.bumptech.glide.load.engine.a0.g.d` @type ^`com.bumptech.glide.load.engine.a0.h$a` @kind object;
  #L298800.  if v1 == 0 then goto L29880e;
  #L298804.  if v2 == 0 then goto L29880e;
  #L298808.  call `onResourceRemoved`(v1, v2) @signature `Lcom/bumptech/glide/load/engine/a0/h$a;.onResourceRemoved:(Lcom/bumptech/glide/load/engine/u;)V` @kind interface;
  #L29880e.  return @kind void;
}
procedure `void` `onItemEvicted`(`com.bumptech.glide.load.engine.a0.g` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/a0/g;.onItemEvicted:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L298820.  v1:= (`com.bumptech.glide.load.f`) v1 @kind object;
  #L298824.  v2:= (`com.bumptech.glide.load.engine.u`) v2 @kind object;
  #L298828.  call `onItemEvicted`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/engine/a0/g;.onItemEvicted:(Lcom/bumptech/glide/load/f;Lcom/bumptech/glide/load/engine/u;)V` @kind virtual;
  #L29882e.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.u` `put`(`com.bumptech.glide.load.engine.a0.g` v0 @kind this, `com.bumptech.glide.load.f` v1 @kind object, `com.bumptech.glide.load.engine.u` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/a0/g;.put:(Lcom/bumptech/glide/load/f;Lcom/bumptech/glide/load/engine/u;)Lcom/bumptech/glide/load/engine/u;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L298758.  call temp:= `put`(v0, v1, v2) @signature `Lcom/bumptech/glide/s/g;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind super;
  #L29875e.  v1:= temp @kind object;
  #L298760.  v1:= (`com.bumptech.glide.load.engine.u`) v1 @kind object;
  #L298764.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.engine.u` `remove`(`com.bumptech.glide.load.engine.a0.g` v0 @kind this, `com.bumptech.glide.load.f` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/a0/g;.remove:(Lcom/bumptech/glide/load/f;)Lcom/bumptech/glide/load/engine/u;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L298778.  call temp:= `remove`(v0, v1) @signature `Lcom/bumptech/glide/s/g;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind super;
  #L29877e.  v1:= temp @kind object;
  #L298780.  v1:= (`com.bumptech.glide.load.engine.u`) v1 @kind object;
  #L298784.  return v1 @kind object;
}
procedure `void` `setResourceRemovedListener`(`com.bumptech.glide.load.engine.a0.g` v0 @kind this, `com.bumptech.glide.load.engine.a0.h$a` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/a0/g;.setResourceRemovedListener:(Lcom/bumptech/glide/load/engine/a0/h$a;)V` @AccessFlag PUBLIC {
    temp;

  #L298840.  v0.`com.bumptech.glide.load.engine.a0.g.d` @type ^`com.bumptech.glide.load.engine.a0.h$a` := v1 @kind object;
  #L298844.  return @kind void;
}
procedure `void` `trimMemory`(`com.bumptech.glide.load.engine.a0.g` v4 @kind this, `int` v5 ) @signature `Lcom/bumptech/glide/load/engine/a0/g;.trimMemory:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L298858.  v0:= 40I;
  #L29885c.  if v5 < v0 then goto L298868;
  #L298860.  call `clearMemory`(v4) @signature `Lcom/bumptech/glide/s/g;.clearMemory:()V` @kind virtual;
  #L298866.  goto L29888c;
  #L298868.  v0:= 20I;
  #L29886c.  if v5 >= v0 then goto L298878;
  #L298870.  v0:= 15I;
  #L298874.  if v5 != v0 then goto L29888c;
  #L298878.  call temp:= `getMaxSize`(v4) @signature `Lcom/bumptech/glide/s/g;.getMaxSize:()J` @kind virtual;
  #L29887e.  v0:= temp @kind wide;
  #L298880.  v2:= 2L;
  #L298884.  v0:= v0 / v2 @kind long;
  #L298886.  call `trimToSize`(v4, v0) @signature `Lcom/bumptech/glide/s/g;.trimToSize:(J)V` @kind virtual;
  #L29888c.  return @kind void;
}
