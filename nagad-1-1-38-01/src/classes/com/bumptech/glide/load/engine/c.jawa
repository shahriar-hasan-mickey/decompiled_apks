record `com.bumptech.glide.load.engine.c` @kind class @AccessFlag  extends `com.bumptech.glide.load.engine.f` @kind interface, `com.bumptech.glide.load.m.d$a` @kind interface {
  `java.util.List` `com.bumptech.glide.load.engine.c.f` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.g` `com.bumptech.glide.load.engine.c.g` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.f$a` `com.bumptech.glide.load.engine.c.h` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.c.i` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.f` `com.bumptech.glide.load.engine.c.j` @AccessFlag PRIVATE;
  `java.util.List` `com.bumptech.glide.load.engine.c.k` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.c.l` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.n.n$a` `com.bumptech.glide.load.engine.c.m` @AccessFlag PRIVATE_VOLATILE;
  `java.io.File` `com.bumptech.glide.load.engine.c.n` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.c` v1 @kind this, `com.bumptech.glide.load.engine.g` v2 @kind object, `com.bumptech.glide.load.engine.f$a` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/c;.<init>:(Lcom/bumptech/glide/load/engine/g;Lcom/bumptech/glide/load/engine/f$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L290ca0.  call temp:= `c`(v2) @signature `Lcom/bumptech/glide/load/engine/g;.c:()Ljava/util/List;` @kind virtual;
  #L290ca6.  v0:= temp @kind object;
  #L290ca8.  call `<init>`(v1, v0, v2, v3) @signature `Lcom/bumptech/glide/load/engine/c;.<init>:(Ljava/util/List;Lcom/bumptech/glide/load/engine/g;Lcom/bumptech/glide/load/engine/f$a;)V` @kind direct;
  #L290cae.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.c` v1 @kind this, `java.util.List` v2 @kind object, `com.bumptech.glide.load.engine.g` v3 @kind object, `com.bumptech.glide.load.engine.f$a` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/c;.<init>:(Ljava/util/List;Lcom/bumptech/glide/load/engine/g;Lcom/bumptech/glide/load/engine/f$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L290cc0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L290cc6.  v0:= -1I;
  #L290cc8.  v1.`com.bumptech.glide.load.engine.c.i` @type ^`int` := v0;
  #L290ccc.  v1.`com.bumptech.glide.load.engine.c.f` @type ^`java.util.List` := v2 @kind object;
  #L290cd0.  v1.`com.bumptech.glide.load.engine.c.g` @type ^`com.bumptech.glide.load.engine.g` := v3 @kind object;
  #L290cd4.  v1.`com.bumptech.glide.load.engine.c.h` @type ^`com.bumptech.glide.load.engine.f$a` := v4 @kind object;
  #L290cd8.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.engine.c` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/c;.a:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L290b14.  v0:= v2.`com.bumptech.glide.load.engine.c.l` @type ^`int`;
  #L290b18.  v1:= v2.`com.bumptech.glide.load.engine.c.k` @type ^`java.util.List` @kind object;
  #L290b1c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L290b22.  v1:= temp;
  #L290b24.  if v0 >= v1 then goto L290b2c;
  #L290b28.  v0:= 1I;
  #L290b2a.  goto L290b2e;
  #L290b2c.  v0:= 0I;
  #L290b2e.  return v0;
}
procedure `void` `cancel`(`com.bumptech.glide.load.engine.c` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/c;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L290cec.  v0:= v1.`com.bumptech.glide.load.engine.c.m` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L290cf0.  if v0 == 0 then goto L290cfe;
  #L290cf4.  v0:= v0.`com.bumptech.glide.load.n.n$a.c` @type ^`com.bumptech.glide.load.m.d` @kind object;
  #L290cf8.  call `cancel`(v0) @signature `Lcom/bumptech/glide/load/m/d;.cancel:()V` @kind interface;
  #L290cfe.  return @kind void;
}
procedure `void` `onDataReady`(`com.bumptech.glide.load.engine.c` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lcom/bumptech/glide/load/engine/c;.onDataReady:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L290d10.  v0:= v6.`com.bumptech.glide.load.engine.c.h` @type ^`com.bumptech.glide.load.engine.f$a` @kind object;
  #L290d14.  v1:= v6.`com.bumptech.glide.load.engine.c.j` @type ^`com.bumptech.glide.load.f` @kind object;
  #L290d18.  v2:= v6.`com.bumptech.glide.load.engine.c.m` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L290d1c.  v3:= v2.`com.bumptech.glide.load.n.n$a.c` @type ^`com.bumptech.glide.load.m.d` @kind object;
  #L290d20.  v4:= `@@com.bumptech.glide.load.a.h` @type ^`com.bumptech.glide.load.a` @kind object;
  #L290d24.  v5:= v6.`com.bumptech.glide.load.engine.c.j` @type ^`com.bumptech.glide.load.f` @kind object;
  #L290d28.  v2:= v7 @kind object;
  #L290d2a.  call `onDataFetcherReady`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/engine/f$a;.onDataFetcherReady:(Lcom/bumptech/glide/load/f;Ljava/lang/Object;Lcom/bumptech/glide/load/m/d;Lcom/bumptech/glide/load/a;Lcom/bumptech/glide/load/f;)V` @kind interface;
  #L290d30.  return @kind void;
}
procedure `void` `onLoadFailed`(`com.bumptech.glide.load.engine.c` v4 @kind this, `java.lang.Exception` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/c;.onLoadFailed:(Ljava/lang/Exception;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L290d44.  v0:= v4.`com.bumptech.glide.load.engine.c.h` @type ^`com.bumptech.glide.load.engine.f$a` @kind object;
  #L290d48.  v1:= v4.`com.bumptech.glide.load.engine.c.j` @type ^`com.bumptech.glide.load.f` @kind object;
  #L290d4c.  v2:= v4.`com.bumptech.glide.load.engine.c.m` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L290d50.  v2:= v2.`com.bumptech.glide.load.n.n$a.c` @type ^`com.bumptech.glide.load.m.d` @kind object;
  #L290d54.  v3:= `@@com.bumptech.glide.load.a.h` @type ^`com.bumptech.glide.load.a` @kind object;
  #L290d58.  call `onDataFetcherFailed`(v0, v1, v5, v2, v3) @signature `Lcom/bumptech/glide/load/engine/f$a;.onDataFetcherFailed:(Lcom/bumptech/glide/load/f;Ljava/lang/Exception;Lcom/bumptech/glide/load/m/d;Lcom/bumptech/glide/load/a;)V` @kind interface;
  #L290d5e.  return @kind void;
}
procedure `boolean` `startNext`(`com.bumptech.glide.load.engine.c` v7 @kind this) @signature `Lcom/bumptech/glide/load/engine/c;.startNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L290b40.  v0:= v7.`com.bumptech.glide.load.engine.c.k` @type ^`java.util.List` @kind object;
  #L290b44.  v1:= 0I;
  #L290b46.  v2:= 1I;
  #L290b48.  if v0 == 0 then goto L290c08;
  #L290b4c.  call temp:= `a`(v7) @signature `Lcom/bumptech/glide/load/engine/c;.a:()Z` @kind direct;
  #L290b52.  v0:= temp;
  #L290b54.  if v0 != 0 then goto L290b5a;
  #L290b58.  goto L290c08;
  #L290b5a.  v0:= 0I;
  #L290b5c.  v7.`com.bumptech.glide.load.engine.c.m` @type ^`com.bumptech.glide.load.n.n$a` := v0 @kind object;
  #L290b60.  if v1 != 0 then goto L290c06;
  #L290b64.  call temp:= `a`(v7) @signature `Lcom/bumptech/glide/load/engine/c;.a:()Z` @kind direct;
  #L290b6a.  v0:= temp;
  #L290b6c.  if v0 == 0 then goto L290c06;
  #L290b70.  v0:= v7.`com.bumptech.glide.load.engine.c.k` @type ^`java.util.List` @kind object;
  #L290b74.  v3:= v7.`com.bumptech.glide.load.engine.c.l` @type ^`int`;
  #L290b78.  v4:= v3 + 1;
  #L290b7c.  v7.`com.bumptech.glide.load.engine.c.l` @type ^`int` := v4;
  #L290b80.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L290b86.  v0:= temp @kind object;
  #L290b88.  v0:= (`com.bumptech.glide.load.n.n`) v0 @kind object;
  #L290b8c.  v3:= v7.`com.bumptech.glide.load.engine.c.n` @type ^`java.io.File` @kind object;
  #L290b90.  v4:= v7.`com.bumptech.glide.load.engine.c.g` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L290b94.  call temp:= `n`(v4) @signature `Lcom/bumptech/glide/load/engine/g;.n:()I` @kind virtual;
  #L290b9a.  v4:= temp;
  #L290b9c.  v5:= v7.`com.bumptech.glide.load.engine.c.g` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L290ba0.  call temp:= `f`(v5) @signature `Lcom/bumptech/glide/load/engine/g;.f:()I` @kind virtual;
  #L290ba6.  v5:= temp;
  #L290ba8.  v6:= v7.`com.bumptech.glide.load.engine.c.g` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L290bac.  call temp:= `i`(v6) @signature `Lcom/bumptech/glide/load/engine/g;.i:()Lcom/bumptech/glide/load/h;` @kind virtual;
  #L290bb2.  v6:= temp @kind object;
  #L290bb4.  call temp:= `buildLoadData`(v0, v3, v4, v5, v6) @signature `Lcom/bumptech/glide/load/n/n;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @kind interface;
  #L290bba.  v0:= temp @kind object;
  #L290bbc.  v7.`com.bumptech.glide.load.engine.c.m` @type ^`com.bumptech.glide.load.n.n$a` := v0 @kind object;
  #L290bc0.  v0:= v7.`com.bumptech.glide.load.engine.c.m` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L290bc4.  if v0 == 0 then goto L290b60;
  #L290bc8.  v0:= v7.`com.bumptech.glide.load.engine.c.g` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L290bcc.  v3:= v7.`com.bumptech.glide.load.engine.c.m` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L290bd0.  v3:= v3.`com.bumptech.glide.load.n.n$a.c` @type ^`com.bumptech.glide.load.m.d` @kind object;
  #L290bd4.  call temp:= `getDataClass`(v3) @signature `Lcom/bumptech/glide/load/m/d;.getDataClass:()Ljava/lang/Class;` @kind interface;
  #L290bda.  v3:= temp @kind object;
  #L290bdc.  call temp:= `c`(v0, v3) @signature `Lcom/bumptech/glide/load/engine/g;.c:(Ljava/lang/Class;)Z` @kind virtual;
  #L290be2.  v0:= temp;
  #L290be4.  if v0 == 0 then goto L290b60;
  #L290be8.  v0:= v7.`com.bumptech.glide.load.engine.c.m` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L290bec.  v0:= v0.`com.bumptech.glide.load.n.n$a.c` @type ^`com.bumptech.glide.load.m.d` @kind object;
  #L290bf0.  v1:= v7.`com.bumptech.glide.load.engine.c.g` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L290bf4.  call temp:= `j`(v1) @signature `Lcom/bumptech/glide/load/engine/g;.j:()Lcom/bumptech/glide/g;` @kind virtual;
  #L290bfa.  v1:= temp @kind object;
  #L290bfc.  call `loadData`(v0, v1, v7) @signature `Lcom/bumptech/glide/load/m/d;.loadData:(Lcom/bumptech/glide/g;Lcom/bumptech/glide/load/m/d$a;)V` @kind interface;
  #L290c02.  v1:= 1I;
  #L290c04.  goto L290b60;
  #L290c06.  return v1;
  #L290c08.  v0:= v7.`com.bumptech.glide.load.engine.c.i` @type ^`int`;
  #L290c0c.  v0:= v0 + v2 @kind int;
  #L290c0e.  v7.`com.bumptech.glide.load.engine.c.i` @type ^`int` := v0;
  #L290c12.  v0:= v7.`com.bumptech.glide.load.engine.c.i` @type ^`int`;
  #L290c16.  v2:= v7.`com.bumptech.glide.load.engine.c.f` @type ^`java.util.List` @kind object;
  #L290c1a.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L290c20.  v2:= temp;
  #L290c22.  if v0 < v2 then goto L290c28;
  #L290c26.  return v1;
  #L290c28.  v0:= v7.`com.bumptech.glide.load.engine.c.f` @type ^`java.util.List` @kind object;
  #L290c2c.  v2:= v7.`com.bumptech.glide.load.engine.c.i` @type ^`int`;
  #L290c30.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L290c36.  v0:= temp @kind object;
  #L290c38.  v0:= (`com.bumptech.glide.load.f`) v0 @kind object;
  #L290c3c.  v2:= new `com.bumptech.glide.load.engine.d`;
  #L290c40.  v3:= v7.`com.bumptech.glide.load.engine.c.g` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L290c44.  call temp:= `l`(v3) @signature `Lcom/bumptech/glide/load/engine/g;.l:()Lcom/bumptech/glide/load/f;` @kind virtual;
  #L290c4a.  v3:= temp @kind object;
  #L290c4c.  call `<init>`(v2, v0, v3) @signature `Lcom/bumptech/glide/load/engine/d;.<init>:(Lcom/bumptech/glide/load/f;Lcom/bumptech/glide/load/f;)V` @kind direct;
  #L290c52.  v3:= v7.`com.bumptech.glide.load.engine.c.g` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L290c56.  call temp:= `d`(v3) @signature `Lcom/bumptech/glide/load/engine/g;.d:()Lcom/bumptech/glide/load/engine/a0/a;` @kind virtual;
  #L290c5c.  v3:= temp @kind object;
  #L290c5e.  call temp:= `get`(v3, v2) @signature `Lcom/bumptech/glide/load/engine/a0/a;.get:(Lcom/bumptech/glide/load/f;)Ljava/io/File;` @kind interface;
  #L290c64.  v2:= temp @kind object;
  #L290c66.  v7.`com.bumptech.glide.load.engine.c.n` @type ^`java.io.File` := v2 @kind object;
  #L290c6a.  v2:= v7.`com.bumptech.glide.load.engine.c.n` @type ^`java.io.File` @kind object;
  #L290c6e.  if v2 == 0 then goto L290b40;
  #L290c72.  v7.`com.bumptech.glide.load.engine.c.j` @type ^`com.bumptech.glide.load.f` := v0 @kind object;
  #L290c76.  v0:= v7.`com.bumptech.glide.load.engine.c.g` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L290c7a.  call temp:= `a`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/g;.a:(Ljava/io/File;)Ljava/util/List;` @kind virtual;
  #L290c80.  v0:= temp @kind object;
  #L290c82.  v7.`com.bumptech.glide.load.engine.c.k` @type ^`java.util.List` := v0 @kind object;
  #L290c86.  v7.`com.bumptech.glide.load.engine.c.l` @type ^`int` := v1;
  #L290c8a.  goto L290b40;
}
