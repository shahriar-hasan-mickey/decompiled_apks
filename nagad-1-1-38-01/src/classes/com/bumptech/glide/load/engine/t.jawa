record `com.bumptech.glide.load.engine.t` @kind class @AccessFlag FINAL extends `com.bumptech.glide.load.engine.u` @kind interface, `com.bumptech.glide.s.l.a$f` @kind interface {
  `com.bumptech.glide.s.l.c` `com.bumptech.glide.load.engine.t.f` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.u` `com.bumptech.glide.load.engine.t.g` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.t.h` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.t.i` @AccessFlag PRIVATE;
}
global `c.h.i.d` `@@com.bumptech.glide.load.engine.t.j` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/t;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L29525c.  v0:= new `com.bumptech.glide.load.engine.t$a`;
  #L295260.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/t$a;.<init>:()V` @kind direct;
  #L295266.  v1:= 20I;
  #L29526a.  call temp:= `threadSafe`(v1, v0) @signature `Lcom/bumptech/glide/s/l/a;.threadSafe:(ILcom/bumptech/glide/s/l/a$d;)Lc/h/i/d;` @kind static;
  #L295270.  v0:= temp @kind object;
  #L295272.  `@@com.bumptech.glide.load.engine.t.j` @type ^`c.h.i.d` := v0 @kind object;
  #L295276.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.t` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/t;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L295288.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29528e.  call temp:= `newInstance`() @signature `Lcom/bumptech/glide/s/l/c;.newInstance:()Lcom/bumptech/glide/s/l/c;` @kind static;
  #L295294.  v0:= temp @kind object;
  #L295296.  v1.`com.bumptech.glide.load.engine.t.f` @type ^`com.bumptech.glide.s.l.c` := v0 @kind object;
  #L29529a.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.t` v1 @kind this, `com.bumptech.glide.load.engine.u` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/t;.a:(Lcom/bumptech/glide/load/engine/u;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2952ac.  v0:= 0I;
  #L2952ae.  v1.`com.bumptech.glide.load.engine.t.i` @type ^`boolean` := v0 @kind boolean;
  #L2952b2.  v0:= 1I;
  #L2952b4.  v1.`com.bumptech.glide.load.engine.t.h` @type ^`boolean` := v0 @kind boolean;
  #L2952b8.  v1.`com.bumptech.glide.load.engine.t.g` @type ^`com.bumptech.glide.load.engine.u` := v2 @kind object;
  #L2952bc.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.t` `b`(`com.bumptech.glide.load.engine.u` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/t;.b:(Lcom/bumptech/glide/load/engine/u;)Lcom/bumptech/glide/load/engine/t;` @AccessFlag STATIC {
    temp;
    v0;

  #L2951b0.  v0:= `@@com.bumptech.glide.load.engine.t.j` @type ^`c.h.i.d` @kind object;
  #L2951b4.  call temp:= `acquire`(v0) @signature `Lc/h/i/d;.acquire:()Ljava/lang/Object;` @kind interface;
  #L2951ba.  v0:= temp @kind object;
  #L2951bc.  v0:= (`com.bumptech.glide.load.engine.t`) v0 @kind object;
  #L2951c0.  call temp:= `checkNotNull`(v0) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2951c6.  v0:= (`com.bumptech.glide.load.engine.t`) v0 @kind object;
  #L2951ca.  call `a`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/t;.a:(Lcom/bumptech/glide/load/engine/u;)V` @kind direct;
  #L2951d0.  return v0 @kind object;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.t` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/t;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L295320.  v0:= 0I;
  #L295322.  v1.`com.bumptech.glide.load.engine.t.g` @type ^`com.bumptech.glide.load.engine.u` := v0 @kind object;
  #L295326.  v0:= `@@com.bumptech.glide.load.engine.t.j` @type ^`c.h.i.d` @kind object;
  #L29532a.  call temp:= `release`(v0, v1) @signature `Lc/h/i/d;.release:(Ljava/lang/Object;)Z` @kind interface;
  #L295330.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.t` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/t;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L295344.  @monitorenter v2
  #L295346.  v0:= v2.`com.bumptech.glide.load.engine.t.f` @type ^`com.bumptech.glide.s.l.c` @kind object;
  #L29534a.  call `throwIfRecycled`(v0) @signature `Lcom/bumptech/glide/s/l/c;.throwIfRecycled:()V` @kind virtual;
  #L295350.  v0:= v2.`com.bumptech.glide.load.engine.t.h` @type ^`boolean` @kind boolean;
  #L295354.  if v0 == 0 then goto L295370;
  #L295358.  v0:= 0I;
  #L29535a.  v2.`com.bumptech.glide.load.engine.t.h` @type ^`boolean` := v0 @kind boolean;
  #L29535e.  v0:= v2.`com.bumptech.glide.load.engine.t.i` @type ^`boolean` @kind boolean;
  #L295362.  if v0 == 0 then goto L29536c;
  #L295366.  call `recycle`(v2) @signature `Lcom/bumptech/glide/load/engine/t;.recycle:()V` @kind virtual;
  #L29536c.  @monitorexit v2
  #L29536e.  return @kind void;
  #L295370.  v0:= new `java.lang.IllegalStateException`;
  #L295374.  v1:= "Already unlocked" @kind object;
  #L295378.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L29537e.  throw v0;
  #L295380.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L295382.  @monitorexit v2
  #L295384.  throw v0;
  catch `java.lang.Throwable` @[L295346..L29536c] goto L295380;
  catch `java.lang.Throwable` @[L295370..L295380] goto L295380;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.load.engine.t` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/t;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29523c.  v0:= v1.`com.bumptech.glide.load.engine.t.g` @type ^`com.bumptech.glide.load.engine.u` @kind object;
  #L295240.  call temp:= `get`(v0) @signature `Lcom/bumptech/glide/load/engine/u;.get:()Ljava/lang/Object;` @kind interface;
  #L295246.  v0:= temp @kind object;
  #L295248.  return v0 @kind object;
}
procedure `java.lang.Class` `getResourceClass`(`com.bumptech.glide.load.engine.t` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/t;.getResourceClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29521c.  v0:= v1.`com.bumptech.glide.load.engine.t.g` @type ^`com.bumptech.glide.load.engine.u` @kind object;
  #L295220.  call temp:= `getResourceClass`(v0) @signature `Lcom/bumptech/glide/load/engine/u;.getResourceClass:()Ljava/lang/Class;` @kind interface;
  #L295226.  v0:= temp @kind object;
  #L295228.  return v0 @kind object;
}
procedure `int` `getSize`(`com.bumptech.glide.load.engine.t` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/t;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2951fc.  v0:= v1.`com.bumptech.glide.load.engine.t.g` @type ^`com.bumptech.glide.load.engine.u` @kind object;
  #L295200.  call temp:= `getSize`(v0) @signature `Lcom/bumptech/glide/load/engine/u;.getSize:()I` @kind interface;
  #L295206.  v0:= temp;
  #L295208.  return v0;
}
procedure `com.bumptech.glide.s.l.c` `getVerifier`(`com.bumptech.glide.load.engine.t` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/t;.getVerifier:()Lcom/bumptech/glide/s/l/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2951e4.  v0:= v1.`com.bumptech.glide.load.engine.t.f` @type ^`com.bumptech.glide.s.l.c` @kind object;
  #L2951e8.  return v0 @kind object;
}
procedure `void` `recycle`(`com.bumptech.glide.load.engine.t` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/t;.recycle:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2952d0.  @monitorenter v1
  #L2952d2.  v0:= v1.`com.bumptech.glide.load.engine.t.f` @type ^`com.bumptech.glide.s.l.c` @kind object;
  #L2952d6.  call `throwIfRecycled`(v0) @signature `Lcom/bumptech/glide/s/l/c;.throwIfRecycled:()V` @kind virtual;
  #L2952dc.  v0:= 1I;
  #L2952de.  v1.`com.bumptech.glide.load.engine.t.i` @type ^`boolean` := v0 @kind boolean;
  #L2952e2.  v0:= v1.`com.bumptech.glide.load.engine.t.h` @type ^`boolean` @kind boolean;
  #L2952e6.  if v0 != 0 then goto L2952fa;
  #L2952ea.  v0:= v1.`com.bumptech.glide.load.engine.t.g` @type ^`com.bumptech.glide.load.engine.u` @kind object;
  #L2952ee.  call `recycle`(v0) @signature `Lcom/bumptech/glide/load/engine/u;.recycle:()V` @kind interface;
  #L2952f4.  call `b`(v1) @signature `Lcom/bumptech/glide/load/engine/t;.b:()V` @kind direct;
  #L2952fa.  @monitorexit v1
  #L2952fc.  return @kind void;
  #L2952fe.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L295300.  @monitorexit v1
  #L295302.  throw v0;
  catch `java.lang.Throwable` @[L2952d2..L2952fa] goto L2952fe;
}
