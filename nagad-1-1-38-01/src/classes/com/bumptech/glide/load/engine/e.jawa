record `com.bumptech.glide.load.engine.e` @kind class @AccessFlag  extends `com.bumptech.glide.load.engine.a0.a$b` @kind interface {
  `com.bumptech.glide.load.d` `com.bumptech.glide.load.engine.e.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `com.bumptech.glide.load.engine.e.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.h` `com.bumptech.glide.load.engine.e.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.e` v0 @kind this, `com.bumptech.glide.load.d` v1 @kind object, `java.lang.Object` v2 @kind object, `com.bumptech.glide.load.h` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/e;.<init>:(Lcom/bumptech/glide/load/d;Ljava/lang/Object;Lcom/bumptech/glide/load/h;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L290eb4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L290eba.  v0.`com.bumptech.glide.load.engine.e.a` @type ^`com.bumptech.glide.load.d` := v1 @kind object;
  #L290ebe.  v0.`com.bumptech.glide.load.engine.e.b` @type ^`java.lang.Object` := v2 @kind object;
  #L290ec2.  v0.`com.bumptech.glide.load.engine.e.c` @type ^`com.bumptech.glide.load.h` := v3 @kind object;
  #L290ec6.  return @kind void;
}
procedure `boolean` `write`(`com.bumptech.glide.load.engine.e` v3 @kind this, `java.io.File` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/e;.write:(Ljava/io/File;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L290e8c.  v0:= v3.`com.bumptech.glide.load.engine.e.a` @type ^`com.bumptech.glide.load.d` @kind object;
  #L290e90.  v1:= v3.`com.bumptech.glide.load.engine.e.b` @type ^`java.lang.Object` @kind object;
  #L290e94.  v2:= v3.`com.bumptech.glide.load.engine.e.c` @type ^`com.bumptech.glide.load.h` @kind object;
  #L290e98.  call temp:= `encode`(v0, v1, v4, v2) @signature `Lcom/bumptech/glide/load/d;.encode:(Ljava/lang/Object;Ljava/io/File;Lcom/bumptech/glide/load/h;)Z` @kind interface;
  #L290e9e.  v4:= temp;
  #L290ea0.  return v4;
}
