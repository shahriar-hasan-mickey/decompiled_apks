record `com.bumptech.glide.load.engine.h$d` @kind class @AccessFlag  {
  `com.bumptech.glide.load.f` `com.bumptech.glide.load.engine.h$d.a` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.k` `com.bumptech.glide.load.engine.h$d.b` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.t` `com.bumptech.glide.load.engine.h$d.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.h$d` v0 @kind this) @signature `Lcom/bumptech/glide/load/engine/h$d;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L291674.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29167a.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.h$d` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/h$d;.a:()V` @AccessFlag  {
    temp;
    v0;

  #L29168c.  v0:= 0I;
  #L29168e.  v1.`com.bumptech.glide.load.engine.h$d.a` @type ^`com.bumptech.glide.load.f` := v0 @kind object;
  #L291692.  v1.`com.bumptech.glide.load.engine.h$d.b` @type ^`com.bumptech.glide.load.k` := v0 @kind object;
  #L291696.  v1.`com.bumptech.glide.load.engine.h$d.c` @type ^`com.bumptech.glide.load.engine.t` := v0 @kind object;
  #L29169a.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.h$d` v4 @kind this, `com.bumptech.glide.load.engine.h$e` v5 @kind object, `com.bumptech.glide.load.h` v6 @kind object) @signature `Lcom/bumptech/glide/load/engine/h$d;.a:(Lcom/bumptech/glide/load/engine/h$e;Lcom/bumptech/glide/load/h;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2916ac.  v0:= "DecodeJob.encode" @kind object;
  #L2916b0.  call `beginSection`(v0) @signature `Lcom/bumptech/glide/s/l/b;.beginSection:(Ljava/lang/String;)V` @kind static;
  #L2916b6.  call temp:= `getDiskCache`(v5) @signature `Lcom/bumptech/glide/load/engine/h$e;.getDiskCache:()Lcom/bumptech/glide/load/engine/a0/a;` @kind interface;
  #L2916bc.  v5:= temp @kind object;
  #L2916be.  v0:= v4.`com.bumptech.glide.load.engine.h$d.a` @type ^`com.bumptech.glide.load.f` @kind object;
  #L2916c2.  v1:= new `com.bumptech.glide.load.engine.e`;
  #L2916c6.  v2:= v4.`com.bumptech.glide.load.engine.h$d.b` @type ^`com.bumptech.glide.load.k` @kind object;
  #L2916ca.  v3:= v4.`com.bumptech.glide.load.engine.h$d.c` @type ^`com.bumptech.glide.load.engine.t` @kind object;
  #L2916ce.  call `<init>`(v1, v2, v3, v6) @signature `Lcom/bumptech/glide/load/engine/e;.<init>:(Lcom/bumptech/glide/load/d;Ljava/lang/Object;Lcom/bumptech/glide/load/h;)V` @kind direct;
  #L2916d4.  call `put`(v5, v0, v1) @signature `Lcom/bumptech/glide/load/engine/a0/a;.put:(Lcom/bumptech/glide/load/f;Lcom/bumptech/glide/load/engine/a0/a$b;)V` @kind interface;
  #L2916da.  v5:= v4.`com.bumptech.glide.load.engine.h$d.c` @type ^`com.bumptech.glide.load.engine.t` @kind object;
  #L2916de.  call `a`(v5) @signature `Lcom/bumptech/glide/load/engine/t;.a:()V` @kind virtual;
  #L2916e4.  call `endSection`() @signature `Lcom/bumptech/glide/s/l/b;.endSection:()V` @kind static;
  #L2916ea.  return @kind void;
  #L2916ec.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2916ee.  v6:= v4.`com.bumptech.glide.load.engine.h$d.c` @type ^`com.bumptech.glide.load.engine.t` @kind object;
  #L2916f2.  call `a`(v6) @signature `Lcom/bumptech/glide/load/engine/t;.a:()V` @kind virtual;
  #L2916f8.  call `endSection`() @signature `Lcom/bumptech/glide/s/l/b;.endSection:()V` @kind static;
  #L2916fe.  throw v5;
  catch `java.lang.Throwable` @[L2916b6..L2916da] goto L2916ec;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.h$d` v0 @kind this, `com.bumptech.glide.load.f` v1 @kind object, `com.bumptech.glide.load.k` v2 @kind object, `com.bumptech.glide.load.engine.t` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/h$d;.a:(Lcom/bumptech/glide/load/f;Lcom/bumptech/glide/load/k;Lcom/bumptech/glide/load/engine/t;)V` @AccessFlag  {
    temp;

  #L29171c.  v0.`com.bumptech.glide.load.engine.h$d.a` @type ^`com.bumptech.glide.load.f` := v1 @kind object;
  #L291720.  v0.`com.bumptech.glide.load.engine.h$d.b` @type ^`com.bumptech.glide.load.k` := v2 @kind object;
  #L291724.  v0.`com.bumptech.glide.load.engine.h$d.c` @type ^`com.bumptech.glide.load.engine.t` := v3 @kind object;
  #L291728.  return @kind void;
}
procedure `boolean` `b`(`com.bumptech.glide.load.engine.h$d` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/h$d;.b:()Z` @AccessFlag  {
    temp;
    v0;

  #L291654.  v0:= v1.`com.bumptech.glide.load.engine.h$d.c` @type ^`com.bumptech.glide.load.engine.t` @kind object;
  #L291658.  if v0 == 0 then goto L291660;
  #L29165c.  v0:= 1I;
  #L29165e.  goto L291662;
  #L291660.  v0:= 0I;
  #L291662.  return v0;
}
