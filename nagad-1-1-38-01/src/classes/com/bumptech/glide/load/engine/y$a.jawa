record `com.bumptech.glide.load.engine.y$a` @kind class @AccessFlag  extends `com.bumptech.glide.load.m.d$a` @kind interface {
  `com.bumptech.glide.load.n.n$a` `com.bumptech.glide.load.engine.y$a.f` @AccessFlag FINAL_SYNTHETIC;
  `com.bumptech.glide.load.engine.y` `com.bumptech.glide.load.engine.y$a.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.y$a` v0 @kind this, `com.bumptech.glide.load.engine.y` v1 @kind object, `com.bumptech.glide.load.n.n$a` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/y$a;.<init>:(Lcom/bumptech/glide/load/engine/y;Lcom/bumptech/glide/load/n/n$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L295b00.  v0.`com.bumptech.glide.load.engine.y$a.g` @type ^`com.bumptech.glide.load.engine.y` := v1 @kind object;
  #L295b04.  v0.`com.bumptech.glide.load.engine.y$a.f` @type ^`com.bumptech.glide.load.n.n$a` := v2 @kind object;
  #L295b08.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L295b0e.  return @kind void;
}
procedure `void` `onDataReady`(`com.bumptech.glide.load.engine.y$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/y$a;.onDataReady:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L295b20.  v0:= v2.`com.bumptech.glide.load.engine.y$a.g` @type ^`com.bumptech.glide.load.engine.y` @kind object;
  #L295b24.  v1:= v2.`com.bumptech.glide.load.engine.y$a.f` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L295b28.  call temp:= `a`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/y;.a:(Lcom/bumptech/glide/load/n/n$a;)Z` @kind virtual;
  #L295b2e.  v0:= temp;
  #L295b30.  if v0 == 0 then goto L295b42;
  #L295b34.  v0:= v2.`com.bumptech.glide.load.engine.y$a.g` @type ^`com.bumptech.glide.load.engine.y` @kind object;
  #L295b38.  v1:= v2.`com.bumptech.glide.load.engine.y$a.f` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L295b3c.  call `a`(v0, v1, v3) @signature `Lcom/bumptech/glide/load/engine/y;.a:(Lcom/bumptech/glide/load/n/n$a;Ljava/lang/Object;)V` @kind virtual;
  #L295b42.  return @kind void;
}
procedure `void` `onLoadFailed`(`com.bumptech.glide.load.engine.y$a` v2 @kind this, `java.lang.Exception` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/y$a;.onLoadFailed:(Ljava/lang/Exception;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L295b54.  v0:= v2.`com.bumptech.glide.load.engine.y$a.g` @type ^`com.bumptech.glide.load.engine.y` @kind object;
  #L295b58.  v1:= v2.`com.bumptech.glide.load.engine.y$a.f` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L295b5c.  call temp:= `a`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/y;.a:(Lcom/bumptech/glide/load/n/n$a;)Z` @kind virtual;
  #L295b62.  v0:= temp;
  #L295b64.  if v0 == 0 then goto L295b76;
  #L295b68.  v0:= v2.`com.bumptech.glide.load.engine.y$a.g` @type ^`com.bumptech.glide.load.engine.y` @kind object;
  #L295b6c.  v1:= v2.`com.bumptech.glide.load.engine.y$a.f` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L295b70.  call `a`(v0, v1, v3) @signature `Lcom/bumptech/glide/load/engine/y;.a:(Lcom/bumptech/glide/load/n/n$a;Ljava/lang/Exception;)V` @kind virtual;
  #L295b76.  return @kind void;
}
