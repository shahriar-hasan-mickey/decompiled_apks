record `com.bumptech.glide.load.engine.a$b` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `com.bumptech.glide.load.engine.a` `com.bumptech.glide.load.engine.a$b.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.a$b` v0 @kind this, `com.bumptech.glide.load.engine.a` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/a$b;.<init>:(Lcom/bumptech/glide/load/engine/a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L29079c.  v0.`com.bumptech.glide.load.engine.a$b.f` @type ^`com.bumptech.glide.load.engine.a` := v1 @kind object;
  #L2907a0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2907a6.  return @kind void;
}
procedure `void` `run`(`com.bumptech.glide.load.engine.a$b` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/a$b;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2907b8.  v0:= v1.`com.bumptech.glide.load.engine.a$b.f` @type ^`com.bumptech.glide.load.engine.a` @kind object;
  #L2907bc.  call `a`(v0) @signature `Lcom/bumptech/glide/load/engine/a;.a:()V` @kind virtual;
  #L2907c2.  return @kind void;
}
