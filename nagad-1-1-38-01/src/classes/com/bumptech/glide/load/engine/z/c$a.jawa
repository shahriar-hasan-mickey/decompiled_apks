record `com.bumptech.glide.load.engine.z.c$a` @kind class @AccessFlag  extends `com.bumptech.glide.load.engine.z.m` @kind interface {
  `com.bumptech.glide.load.engine.z.c$b` `com.bumptech.glide.load.engine.z.c$a.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.z.c$a.b` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.z.c$a.c` @AccessFlag PRIVATE;
  `android.graphics.Bitmap$Config` `com.bumptech.glide.load.engine.z.c$a.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.z.c$a` v0 @kind this, `com.bumptech.glide.load.engine.z.c$b` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/z/c$a;.<init>:(Lcom/bumptech/glide/load/engine/z/c$b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2960a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2960ae.  v0.`com.bumptech.glide.load.engine.z.c$a.a` @type ^`com.bumptech.glide.load.engine.z.c$b` := v1 @kind object;
  #L2960b2.  return @kind void;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.engine.z.c$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/z/c$a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L295ffc.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.load.engine.z.c$a` @kind boolean;
  #L296000.  v1:= 0I;
  #L296002.  if v0 == 0 then goto L296030;
  #L296006.  v4:= (`com.bumptech.glide.load.engine.z.c$a`) v4 @kind object;
  #L29600a.  v0:= v3.`com.bumptech.glide.load.engine.z.c$a.b` @type ^`int`;
  #L29600e.  v2:= v4.`com.bumptech.glide.load.engine.z.c$a.b` @type ^`int`;
  #L296012.  if v0 != v2 then goto L296030;
  #L296016.  v0:= v3.`com.bumptech.glide.load.engine.z.c$a.c` @type ^`int`;
  #L29601a.  v2:= v4.`com.bumptech.glide.load.engine.z.c$a.c` @type ^`int`;
  #L29601e.  if v0 != v2 then goto L296030;
  #L296022.  v0:= v3.`com.bumptech.glide.load.engine.z.c$a.d` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L296026.  v4:= v4.`com.bumptech.glide.load.engine.z.c$a.d` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L29602a.  if v0 != v4 then goto L296030;
  #L29602e.  v1:= 1I;
  #L296030.  return v1;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.engine.z.c$a` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/z/c$a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L296044.  v0:= v2.`com.bumptech.glide.load.engine.z.c$a.b` @type ^`int`;
  #L296048.  v0:= v0 * 31;
  #L29604c.  v1:= v2.`com.bumptech.glide.load.engine.z.c$a.c` @type ^`int`;
  #L296050.  v0:= v0 + v1 @kind int;
  #L296052.  v0:= v0 * 31;
  #L296056.  v1:= v2.`com.bumptech.glide.load.engine.z.c$a.d` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L29605a.  if v1 == 0 then goto L296068;
  #L29605e.  call temp:= `hashCode`(v1) @signature `Landroid/graphics/Bitmap$Config;.hashCode:()I` @kind virtual;
  #L296064.  v1:= temp;
  #L296066.  goto L29606a;
  #L296068.  v1:= 0I;
  #L29606a.  v0:= v0 + v1 @kind int;
  #L29606c.  return v0;
}
procedure `void` `init`(`com.bumptech.glide.load.engine.z.c$a` v0 @kind this, `int` v1 , `int` v2 , `android.graphics.Bitmap$Config` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/z/c$a;.init:(IILandroid/graphics/Bitmap$Config;)V` @AccessFlag PUBLIC {
    temp;

  #L2960c4.  v0.`com.bumptech.glide.load.engine.z.c$a.b` @type ^`int` := v1;
  #L2960c8.  v0.`com.bumptech.glide.load.engine.z.c$a.c` @type ^`int` := v2;
  #L2960cc.  v0.`com.bumptech.glide.load.engine.z.c$a.d` @type ^`android.graphics.Bitmap$Config` := v3 @kind object;
  #L2960d0.  return @kind void;
}
procedure `void` `offer`(`com.bumptech.glide.load.engine.z.c$a` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/z/c$a;.offer:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2960e4.  v0:= v1.`com.bumptech.glide.load.engine.z.c$a.a` @type ^`com.bumptech.glide.load.engine.z.c$b` @kind object;
  #L2960e8.  call `offer`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/z/d;.offer:(Lcom/bumptech/glide/load/engine/z/m;)V` @kind virtual;
  #L2960ee.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.z.c$a` v3 @kind this) @signature `Lcom/bumptech/glide/load/engine/z/c$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L296080.  v0:= v3.`com.bumptech.glide.load.engine.z.c$a.b` @type ^`int`;
  #L296084.  v1:= v3.`com.bumptech.glide.load.engine.z.c$a.c` @type ^`int`;
  #L296088.  v2:= v3.`com.bumptech.glide.load.engine.z.c$a.d` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L29608c.  call temp:= `a`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/engine/z/c;.a:(IILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @kind static;
  #L296092.  v0:= temp @kind object;
  #L296094.  return v0 @kind object;
}
