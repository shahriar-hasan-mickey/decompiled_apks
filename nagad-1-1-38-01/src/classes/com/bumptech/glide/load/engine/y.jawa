record `com.bumptech.glide.load.engine.y` @kind class @AccessFlag  extends `com.bumptech.glide.load.engine.f` @kind interface, `com.bumptech.glide.load.engine.f$a` @kind interface {
  `com.bumptech.glide.load.engine.g` `com.bumptech.glide.load.engine.y.f` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.f$a` `com.bumptech.glide.load.engine.y.g` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.y.h` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.c` `com.bumptech.glide.load.engine.y.i` @AccessFlag PRIVATE;
  `java.lang.Object` `com.bumptech.glide.load.engine.y.j` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.n.n$a` `com.bumptech.glide.load.engine.y.k` @AccessFlag PRIVATE_VOLATILE;
  `com.bumptech.glide.load.engine.d` `com.bumptech.glide.load.engine.y.l` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.y` v0 @kind this, `com.bumptech.glide.load.engine.g` v1 @kind object, `com.bumptech.glide.load.engine.f$a` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/y;.<init>:(Lcom/bumptech/glide/load/engine/g;Lcom/bumptech/glide/load/engine/f$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L295cc0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L295cc6.  v0.`com.bumptech.glide.load.engine.y.f` @type ^`com.bumptech.glide.load.engine.g` := v1 @kind object;
  #L295cca.  v0.`com.bumptech.glide.load.engine.y.g` @type ^`com.bumptech.glide.load.engine.f$a` := v2 @kind object;
  #L295cce.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.y` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Lcom/bumptech/glide/load/engine/y;.a:(Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L295ce0.  v0:= "SourceGenerator" @kind object;
  #L295ce4.  call temp:= `getLogTime`() @signature `Lcom/bumptech/glide/s/f;.getLogTime:()J` @kind static;
  #L295cea.  v1:= temp @kind wide;
  #L295cec.  v3:= v8.`com.bumptech.glide.load.engine.y.f` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L295cf0.  call temp:= `a`(v3, v9) @signature `Lcom/bumptech/glide/load/engine/g;.a:(Ljava/lang/Object;)Lcom/bumptech/glide/load/d;` @kind virtual;
  #L295cf6.  v3:= temp @kind object;
  #L295cf8.  v4:= new `com.bumptech.glide.load.engine.e`;
  #L295cfc.  v5:= v8.`com.bumptech.glide.load.engine.y.f` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L295d00.  call temp:= `i`(v5) @signature `Lcom/bumptech/glide/load/engine/g;.i:()Lcom/bumptech/glide/load/h;` @kind virtual;
  #L295d06.  v5:= temp @kind object;
  #L295d08.  call `<init>`(v4, v3, v9, v5) @signature `Lcom/bumptech/glide/load/engine/e;.<init>:(Lcom/bumptech/glide/load/d;Ljava/lang/Object;Lcom/bumptech/glide/load/h;)V` @kind direct;
  #L295d0e.  v5:= new `com.bumptech.glide.load.engine.d`;
  #L295d12.  v6:= v8.`com.bumptech.glide.load.engine.y.k` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L295d16.  v6:= v6.`com.bumptech.glide.load.n.n$a.a` @type ^`com.bumptech.glide.load.f` @kind object;
  #L295d1a.  v7:= v8.`com.bumptech.glide.load.engine.y.f` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L295d1e.  call temp:= `l`(v7) @signature `Lcom/bumptech/glide/load/engine/g;.l:()Lcom/bumptech/glide/load/f;` @kind virtual;
  #L295d24.  v7:= temp @kind object;
  #L295d26.  call `<init>`(v5, v6, v7) @signature `Lcom/bumptech/glide/load/engine/d;.<init>:(Lcom/bumptech/glide/load/f;Lcom/bumptech/glide/load/f;)V` @kind direct;
  #L295d2c.  v8.`com.bumptech.glide.load.engine.y.l` @type ^`com.bumptech.glide.load.engine.d` := v5 @kind object;
  #L295d30.  v5:= v8.`com.bumptech.glide.load.engine.y.f` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L295d34.  call temp:= `d`(v5) @signature `Lcom/bumptech/glide/load/engine/g;.d:()Lcom/bumptech/glide/load/engine/a0/a;` @kind virtual;
  #L295d3a.  v5:= temp @kind object;
  #L295d3c.  v6:= v8.`com.bumptech.glide.load.engine.y.l` @type ^`com.bumptech.glide.load.engine.d` @kind object;
  #L295d40.  call `put`(v5, v6, v4) @signature `Lcom/bumptech/glide/load/engine/a0/a;.put:(Lcom/bumptech/glide/load/f;Lcom/bumptech/glide/load/engine/a0/a$b;)V` @kind interface;
  #L295d46.  v4:= 2I;
  #L295d48.  call temp:= `isLoggable`(v0, v4) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L295d4e.  v4:= temp;
  #L295d50.  if v4 == 0 then goto L295db8;
  #L295d54.  v4:= new `java.lang.StringBuilder`;
  #L295d58.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L295d5e.  v5:= "Finished encoding source to cache, key: " @kind object;
  #L295d62.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L295d68.  v5:= v8.`com.bumptech.glide.load.engine.y.l` @type ^`com.bumptech.glide.load.engine.d` @kind object;
  #L295d6c.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L295d72.  v5:= ", data: " @kind object;
  #L295d76.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L295d7c.  call temp:= `append`(v4, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L295d82.  v9:= ", encoder: " @kind object;
  #L295d86.  call temp:= `append`(v4, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L295d8c.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L295d92.  v9:= ", duration: " @kind object;
  #L295d96.  call temp:= `append`(v4, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L295d9c.  call temp:= `getElapsedMillis`(v1) @signature `Lcom/bumptech/glide/s/f;.getElapsedMillis:(J)D` @kind static;
  #L295da2.  v1:= temp @kind wide;
  #L295da4.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L295daa.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L295db0.  v9:= temp @kind object;
  #L295db2.  call temp:= `v`(v0, v9) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L295db8.  v9:= v8.`com.bumptech.glide.load.engine.y.k` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L295dbc.  v9:= v9.`com.bumptech.glide.load.n.n$a.c` @type ^`com.bumptech.glide.load.m.d` @kind object;
  #L295dc0.  call `cleanup`(v9) @signature `Lcom/bumptech/glide/load/m/d;.cleanup:()V` @kind interface;
  #L295dc6.  v9:= new `com.bumptech.glide.load.engine.c`;
  #L295dca.  v0:= v8.`com.bumptech.glide.load.engine.y.k` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L295dce.  v0:= v0.`com.bumptech.glide.load.n.n$a.a` @type ^`com.bumptech.glide.load.f` @kind object;
  #L295dd2.  call temp:= `singletonList`(v0) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L295dd8.  v0:= temp @kind object;
  #L295dda.  v1:= v8.`com.bumptech.glide.load.engine.y.f` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L295dde.  call `<init>`(v9, v0, v1, v8) @signature `Lcom/bumptech/glide/load/engine/c;.<init>:(Ljava/util/List;Lcom/bumptech/glide/load/engine/g;Lcom/bumptech/glide/load/engine/f$a;)V` @kind direct;
  #L295de4.  v8.`com.bumptech.glide.load.engine.y.i` @type ^`com.bumptech.glide.load.engine.c` := v9 @kind object;
  #L295de8.  return @kind void;
  #L295dea.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L295dec.  v0:= v8.`com.bumptech.glide.load.engine.y.k` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L295df0.  v0:= v0.`com.bumptech.glide.load.n.n$a.c` @type ^`com.bumptech.glide.load.m.d` @kind object;
  #L295df4.  call `cleanup`(v0) @signature `Lcom/bumptech/glide/load/m/d;.cleanup:()V` @kind interface;
  #L295dfa.  throw v9;
  catch `java.lang.Throwable` @[L295cec..L295db8] goto L295dea;
}
procedure `boolean` `a`(`com.bumptech.glide.load.engine.y` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/y;.a:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L295b88.  v0:= v2.`com.bumptech.glide.load.engine.y.h` @type ^`int`;
  #L295b8c.  v1:= v2.`com.bumptech.glide.load.engine.y.f` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L295b90.  call temp:= `g`(v1) @signature `Lcom/bumptech/glide/load/engine/g;.g:()Ljava/util/List;` @kind virtual;
  #L295b96.  v1:= temp @kind object;
  #L295b98.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L295b9e.  v1:= temp;
  #L295ba0.  if v0 >= v1 then goto L295ba8;
  #L295ba4.  v0:= 1I;
  #L295ba6.  goto L295baa;
  #L295ba8.  v0:= 0I;
  #L295baa.  return v0;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.y` v3 @kind this, `com.bumptech.glide.load.n.n$a` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/y;.b:(Lcom/bumptech/glide/load/n/n$a;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L295f50.  v0:= v3.`com.bumptech.glide.load.engine.y.k` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L295f54.  v0:= v0.`com.bumptech.glide.load.n.n$a.c` @type ^`com.bumptech.glide.load.m.d` @kind object;
  #L295f58.  v1:= v3.`com.bumptech.glide.load.engine.y.f` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L295f5c.  call temp:= `j`(v1) @signature `Lcom/bumptech/glide/load/engine/g;.j:()Lcom/bumptech/glide/g;` @kind virtual;
  #L295f62.  v1:= temp @kind object;
  #L295f64.  v2:= new `com.bumptech.glide.load.engine.y$a`;
  #L295f68.  call `<init>`(v2, v3, v4) @signature `Lcom/bumptech/glide/load/engine/y$a;.<init>:(Lcom/bumptech/glide/load/engine/y;Lcom/bumptech/glide/load/n/n$a;)V` @kind direct;
  #L295f6e.  call `loadData`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/m/d;.loadData:(Lcom/bumptech/glide/g;Lcom/bumptech/glide/load/m/d$a;)V` @kind interface;
  #L295f74.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.y` v3 @kind this, `com.bumptech.glide.load.n.n$a` v4 @kind object, `java.lang.Exception` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/y;.a:(Lcom/bumptech/glide/load/n/n$a;Ljava/lang/Exception;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L295f08.  v0:= v3.`com.bumptech.glide.load.engine.y.g` @type ^`com.bumptech.glide.load.engine.f$a` @kind object;
  #L295f0c.  v1:= v3.`com.bumptech.glide.load.engine.y.l` @type ^`com.bumptech.glide.load.engine.d` @kind object;
  #L295f10.  v4:= v4.`com.bumptech.glide.load.n.n$a.c` @type ^`com.bumptech.glide.load.m.d` @kind object;
  #L295f14.  call temp:= `getDataSource`(v4) @signature `Lcom/bumptech/glide/load/m/d;.getDataSource:()Lcom/bumptech/glide/load/a;` @kind interface;
  #L295f1a.  v2:= temp @kind object;
  #L295f1c.  call `onDataFetcherFailed`(v0, v1, v5, v4, v2) @signature `Lcom/bumptech/glide/load/engine/f$a;.onDataFetcherFailed:(Lcom/bumptech/glide/load/f;Ljava/lang/Exception;Lcom/bumptech/glide/load/m/d;Lcom/bumptech/glide/load/a;)V` @kind interface;
  #L295f22.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.y` v6 @kind this, `com.bumptech.glide.load.n.n$a` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lcom/bumptech/glide/load/engine/y;.a:(Lcom/bumptech/glide/load/n/n$a;Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L295e9c.  v0:= v6.`com.bumptech.glide.load.engine.y.f` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L295ea0.  call temp:= `e`(v0) @signature `Lcom/bumptech/glide/load/engine/g;.e:()Lcom/bumptech/glide/load/engine/j;` @kind virtual;
  #L295ea6.  v0:= temp @kind object;
  #L295ea8.  if v8 == 0 then goto L295ed4;
  #L295eac.  v1:= v7.`com.bumptech.glide.load.n.n$a.c` @type ^`com.bumptech.glide.load.m.d` @kind object;
  #L295eb0.  call temp:= `getDataSource`(v1) @signature `Lcom/bumptech/glide/load/m/d;.getDataSource:()Lcom/bumptech/glide/load/a;` @kind interface;
  #L295eb6.  v1:= temp @kind object;
  #L295eb8.  call temp:= `isDataCacheable`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/j;.isDataCacheable:(Lcom/bumptech/glide/load/a;)Z` @kind virtual;
  #L295ebe.  v0:= temp;
  #L295ec0.  if v0 == 0 then goto L295ed4;
  #L295ec4.  v6.`com.bumptech.glide.load.engine.y.j` @type ^`java.lang.Object` := v8 @kind object;
  #L295ec8.  v7:= v6.`com.bumptech.glide.load.engine.y.g` @type ^`com.bumptech.glide.load.engine.f$a` @kind object;
  #L295ecc.  call `reschedule`(v7) @signature `Lcom/bumptech/glide/load/engine/f$a;.reschedule:()V` @kind interface;
  #L295ed2.  goto L295ef4;
  #L295ed4.  v0:= v6.`com.bumptech.glide.load.engine.y.g` @type ^`com.bumptech.glide.load.engine.f$a` @kind object;
  #L295ed8.  v1:= v7.`com.bumptech.glide.load.n.n$a.a` @type ^`com.bumptech.glide.load.f` @kind object;
  #L295edc.  v3:= v7.`com.bumptech.glide.load.n.n$a.c` @type ^`com.bumptech.glide.load.m.d` @kind object;
  #L295ee0.  call temp:= `getDataSource`(v3) @signature `Lcom/bumptech/glide/load/m/d;.getDataSource:()Lcom/bumptech/glide/load/a;` @kind interface;
  #L295ee6.  v4:= temp @kind object;
  #L295ee8.  v5:= v6.`com.bumptech.glide.load.engine.y.l` @type ^`com.bumptech.glide.load.engine.d` @kind object;
  #L295eec.  v2:= v8 @kind object;
  #L295eee.  call `onDataFetcherReady`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/engine/f$a;.onDataFetcherReady:(Lcom/bumptech/glide/load/f;Ljava/lang/Object;Lcom/bumptech/glide/load/m/d;Lcom/bumptech/glide/load/a;Lcom/bumptech/glide/load/f;)V` @kind interface;
  #L295ef4.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.engine.y` v1 @kind this, `com.bumptech.glide.load.n.n$a` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/y;.a:(Lcom/bumptech/glide/load/n/n$a;)Z` @AccessFlag  {
    temp;
    v0;

  #L295bbc.  v0:= v1.`com.bumptech.glide.load.engine.y.k` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L295bc0.  if v0 == 0 then goto L295bcc;
  #L295bc4.  if v0 != v2 then goto L295bcc;
  #L295bc8.  v2:= 1I;
  #L295bca.  goto L295bce;
  #L295bcc.  v2:= 0I;
  #L295bce.  return v2;
}
procedure `void` `cancel`(`com.bumptech.glide.load.engine.y` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/y;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L295e18.  v0:= v1.`com.bumptech.glide.load.engine.y.k` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L295e1c.  if v0 == 0 then goto L295e2a;
  #L295e20.  v0:= v0.`com.bumptech.glide.load.n.n$a.c` @type ^`com.bumptech.glide.load.m.d` @kind object;
  #L295e24.  call `cancel`(v0) @signature `Lcom/bumptech/glide/load/m/d;.cancel:()V` @kind interface;
  #L295e2a.  return @kind void;
}
procedure `void` `onDataFetcherFailed`(`com.bumptech.glide.load.engine.y` v1 @kind this, `com.bumptech.glide.load.f` v2 @kind object, `java.lang.Exception` v3 @kind object, `com.bumptech.glide.load.m.d` v4 @kind object, `com.bumptech.glide.load.a` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/y;.onDataFetcherFailed:(Lcom/bumptech/glide/load/f;Ljava/lang/Exception;Lcom/bumptech/glide/load/m/d;Lcom/bumptech/glide/load/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L295e3c.  v5:= v1.`com.bumptech.glide.load.engine.y.g` @type ^`com.bumptech.glide.load.engine.f$a` @kind object;
  #L295e40.  v0:= v1.`com.bumptech.glide.load.engine.y.k` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L295e44.  v0:= v0.`com.bumptech.glide.load.n.n$a.c` @type ^`com.bumptech.glide.load.m.d` @kind object;
  #L295e48.  call temp:= `getDataSource`(v0) @signature `Lcom/bumptech/glide/load/m/d;.getDataSource:()Lcom/bumptech/glide/load/a;` @kind interface;
  #L295e4e.  v0:= temp @kind object;
  #L295e50.  call `onDataFetcherFailed`(v5, v2, v3, v4, v0) @signature `Lcom/bumptech/glide/load/engine/f$a;.onDataFetcherFailed:(Lcom/bumptech/glide/load/f;Ljava/lang/Exception;Lcom/bumptech/glide/load/m/d;Lcom/bumptech/glide/load/a;)V` @kind interface;
  #L295e56.  return @kind void;
}
procedure `void` `onDataFetcherReady`(`com.bumptech.glide.load.engine.y` v6 @kind this, `com.bumptech.glide.load.f` v7 @kind object, `java.lang.Object` v8 @kind object, `com.bumptech.glide.load.m.d` v9 @kind object, `com.bumptech.glide.load.a` v10 @kind object, `com.bumptech.glide.load.f` v11 @kind object) @signature `Lcom/bumptech/glide/load/engine/y;.onDataFetcherReady:(Lcom/bumptech/glide/load/f;Ljava/lang/Object;Lcom/bumptech/glide/load/m/d;Lcom/bumptech/glide/load/a;Lcom/bumptech/glide/load/f;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L295e68.  v0:= v6.`com.bumptech.glide.load.engine.y.g` @type ^`com.bumptech.glide.load.engine.f$a` @kind object;
  #L295e6c.  v10:= v6.`com.bumptech.glide.load.engine.y.k` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L295e70.  v10:= v10.`com.bumptech.glide.load.n.n$a.c` @type ^`com.bumptech.glide.load.m.d` @kind object;
  #L295e74.  call temp:= `getDataSource`(v10) @signature `Lcom/bumptech/glide/load/m/d;.getDataSource:()Lcom/bumptech/glide/load/a;` @kind interface;
  #L295e7a.  v4:= temp @kind object;
  #L295e7c.  v1:= v7 @kind object;
  #L295e7e.  v2:= v8 @kind object;
  #L295e80.  v3:= v9 @kind object;
  #L295e82.  v5:= v7 @kind object;
  #L295e84.  call `onDataFetcherReady`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/engine/f$a;.onDataFetcherReady:(Lcom/bumptech/glide/load/f;Ljava/lang/Object;Lcom/bumptech/glide/load/m/d;Lcom/bumptech/glide/load/a;Lcom/bumptech/glide/load/f;)V` @kind interface;
  #L295e8a.  return @kind void;
}
procedure `void` `reschedule`(`com.bumptech.glide.load.engine.y` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/y;.reschedule:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L295f34.  v0:= new `java.lang.UnsupportedOperationException`;
  #L295f38.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L295f3e.  throw v0;
}
procedure `boolean` `startNext`(`com.bumptech.glide.load.engine.y` v5 @kind this) @signature `Lcom/bumptech/glide/load/engine/y;.startNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L295be0.  v0:= v5.`com.bumptech.glide.load.engine.y.j` @type ^`java.lang.Object` @kind object;
  #L295be4.  v1:= 0I;
  #L295be6.  if v0 == 0 then goto L295bf4;
  #L295bea.  v5.`com.bumptech.glide.load.engine.y.j` @type ^`java.lang.Object` := v1 @kind object;
  #L295bee.  call `a`(v5, v0) @signature `Lcom/bumptech/glide/load/engine/y;.a:(Ljava/lang/Object;)V` @kind direct;
  #L295bf4.  v0:= v5.`com.bumptech.glide.load.engine.y.i` @type ^`com.bumptech.glide.load.engine.c` @kind object;
  #L295bf8.  v2:= 1I;
  #L295bfa.  if v0 == 0 then goto L295c0c;
  #L295bfe.  call temp:= `startNext`(v0) @signature `Lcom/bumptech/glide/load/engine/c;.startNext:()Z` @kind virtual;
  #L295c04.  v0:= temp;
  #L295c06.  if v0 == 0 then goto L295c0c;
  #L295c0a.  return v2;
  #L295c0c.  v5.`com.bumptech.glide.load.engine.y.i` @type ^`com.bumptech.glide.load.engine.c` := v1 @kind object;
  #L295c10.  v5.`com.bumptech.glide.load.engine.y.k` @type ^`com.bumptech.glide.load.n.n$a` := v1 @kind object;
  #L295c14.  v0:= 0I;
  #L295c16.  if v0 != 0 then goto L295cac;
  #L295c1a.  call temp:= `a`(v5) @signature `Lcom/bumptech/glide/load/engine/y;.a:()Z` @kind direct;
  #L295c20.  v1:= temp;
  #L295c22.  if v1 == 0 then goto L295cac;
  #L295c26.  v1:= v5.`com.bumptech.glide.load.engine.y.f` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L295c2a.  call temp:= `g`(v1) @signature `Lcom/bumptech/glide/load/engine/g;.g:()Ljava/util/List;` @kind virtual;
  #L295c30.  v1:= temp @kind object;
  #L295c32.  v3:= v5.`com.bumptech.glide.load.engine.y.h` @type ^`int`;
  #L295c36.  v4:= v3 + 1;
  #L295c3a.  v5.`com.bumptech.glide.load.engine.y.h` @type ^`int` := v4;
  #L295c3e.  call temp:= `get`(v1, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L295c44.  v1:= temp @kind object;
  #L295c46.  v1:= (`com.bumptech.glide.load.n.n$a`) v1 @kind object;
  #L295c4a.  v5.`com.bumptech.glide.load.engine.y.k` @type ^`com.bumptech.glide.load.n.n$a` := v1 @kind object;
  #L295c4e.  v1:= v5.`com.bumptech.glide.load.engine.y.k` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L295c52.  if v1 == 0 then goto L295c16;
  #L295c56.  v1:= v5.`com.bumptech.glide.load.engine.y.f` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L295c5a.  call temp:= `e`(v1) @signature `Lcom/bumptech/glide/load/engine/g;.e:()Lcom/bumptech/glide/load/engine/j;` @kind virtual;
  #L295c60.  v1:= temp @kind object;
  #L295c62.  v3:= v5.`com.bumptech.glide.load.engine.y.k` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L295c66.  v3:= v3.`com.bumptech.glide.load.n.n$a.c` @type ^`com.bumptech.glide.load.m.d` @kind object;
  #L295c6a.  call temp:= `getDataSource`(v3) @signature `Lcom/bumptech/glide/load/m/d;.getDataSource:()Lcom/bumptech/glide/load/a;` @kind interface;
  #L295c70.  v3:= temp @kind object;
  #L295c72.  call temp:= `isDataCacheable`(v1, v3) @signature `Lcom/bumptech/glide/load/engine/j;.isDataCacheable:(Lcom/bumptech/glide/load/a;)Z` @kind virtual;
  #L295c78.  v1:= temp;
  #L295c7a.  if v1 != 0 then goto L295c9e;
  #L295c7e.  v1:= v5.`com.bumptech.glide.load.engine.y.f` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L295c82.  v3:= v5.`com.bumptech.glide.load.engine.y.k` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L295c86.  v3:= v3.`com.bumptech.glide.load.n.n$a.c` @type ^`com.bumptech.glide.load.m.d` @kind object;
  #L295c8a.  call temp:= `getDataClass`(v3) @signature `Lcom/bumptech/glide/load/m/d;.getDataClass:()Ljava/lang/Class;` @kind interface;
  #L295c90.  v3:= temp @kind object;
  #L295c92.  call temp:= `c`(v1, v3) @signature `Lcom/bumptech/glide/load/engine/g;.c:(Ljava/lang/Class;)Z` @kind virtual;
  #L295c98.  v1:= temp;
  #L295c9a.  if v1 == 0 then goto L295c16;
  #L295c9e.  v0:= v5.`com.bumptech.glide.load.engine.y.k` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L295ca2.  call `b`(v5, v0) @signature `Lcom/bumptech/glide/load/engine/y;.b:(Lcom/bumptech/glide/load/n/n$a;)V` @kind direct;
  #L295ca8.  v0:= 1I;
  #L295caa.  goto L295c16;
  #L295cac.  return v0;
}
