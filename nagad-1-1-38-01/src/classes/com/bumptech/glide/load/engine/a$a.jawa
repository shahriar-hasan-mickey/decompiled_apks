record `com.bumptech.glide.load.engine.a$a` @kind class @AccessFlag  extends `java.util.concurrent.ThreadFactory` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.a$a` v0 @kind this) @signature `Lcom/bumptech/glide/load/engine/a$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L290784.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29078a.  return @kind void;
}
procedure `java.lang.Thread` `newThread`(`com.bumptech.glide.load.engine.a$a` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/a$a;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L290758.  v0:= new `java.lang.Thread`;
  #L29075c.  v1:= new `com.bumptech.glide.load.engine.a$a$a`;
  #L290760.  call `<init>`(v1, v2, v3) @signature `Lcom/bumptech/glide/load/engine/a$a$a;.<init>:(Lcom/bumptech/glide/load/engine/a$a;Ljava/lang/Runnable;)V` @kind direct;
  #L290766.  v3:= "glide-active-resources" @kind object;
  #L29076a.  call `<init>`(v0, v1, v3) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/Runnable;Ljava/lang/String;)V` @kind direct;
  #L290770.  return v0 @kind object;
}
