record `com.bumptech.glide.load.engine.a0.h` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `void` `clearMemory`() @signature `Lcom/bumptech/glide/load/engine/a0/h;.clearMemory:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.bumptech.glide.load.engine.u` `put`(`com.bumptech.glide.load.f` v0 @kind object, `com.bumptech.glide.load.engine.u` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/a0/h;.put:(Lcom/bumptech/glide/load/f;Lcom/bumptech/glide/load/engine/u;)Lcom/bumptech/glide/load/engine/u;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.bumptech.glide.load.engine.u` `remove`(`com.bumptech.glide.load.f` v0 @kind object) @signature `Lcom/bumptech/glide/load/engine/a0/h;.remove:(Lcom/bumptech/glide/load/f;)Lcom/bumptech/glide/load/engine/u;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setResourceRemovedListener`(`com.bumptech.glide.load.engine.a0.h$a` v0 @kind object) @signature `Lcom/bumptech/glide/load/engine/a0/h;.setResourceRemovedListener:(Lcom/bumptech/glide/load/engine/a0/h$a;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `trimMemory`(`int` v0 ) @signature `Lcom/bumptech/glide/load/engine/a0/h;.trimMemory:(I)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
