record `com.bumptech.glide.load.engine.k$a$a` @kind class @AccessFlag  extends `com.bumptech.glide.s.l.a$d` @kind interface {
  `com.bumptech.glide.load.engine.k$a` `com.bumptech.glide.load.engine.k$a$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.k$a$a` v0 @kind this, `com.bumptech.glide.load.engine.k$a` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/k$a$a;.<init>:(Lcom/bumptech/glide/load/engine/k$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L292e04.  v0.`com.bumptech.glide.load.engine.k$a$a.a` @type ^`com.bumptech.glide.load.engine.k$a` := v1 @kind object;
  #L292e08.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L292e0e.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.h` `create`(`com.bumptech.glide.load.engine.k$a$a` v3 @kind this) @signature `Lcom/bumptech/glide/load/engine/k$a$a;.create:()Lcom/bumptech/glide/load/engine/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L292dc0.  v0:= new `com.bumptech.glide.load.engine.h`;
  #L292dc4.  v1:= v3.`com.bumptech.glide.load.engine.k$a$a.a` @type ^`com.bumptech.glide.load.engine.k$a` @kind object;
  #L292dc8.  v2:= v1.`com.bumptech.glide.load.engine.k$a.a` @type ^`com.bumptech.glide.load.engine.h$e` @kind object;
  #L292dcc.  v1:= v1.`com.bumptech.glide.load.engine.k$a.b` @type ^`c.h.i.d` @kind object;
  #L292dd0.  call `<init>`(v0, v2, v1) @signature `Lcom/bumptech/glide/load/engine/h;.<init>:(Lcom/bumptech/glide/load/engine/h$e;Lc/h/i/d;)V` @kind direct;
  #L292dd6.  return v0 @kind object;
}
procedure `java.lang.Object` `create`(`com.bumptech.glide.load.engine.k$a$a` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/k$a$a;.create:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L292de8.  call temp:= `create`(v1) @signature `Lcom/bumptech/glide/load/engine/k$a$a;.create:()Lcom/bumptech/glide/load/engine/h;` @kind virtual;
  #L292dee.  v0:= temp @kind object;
  #L292df0.  return v0 @kind object;
}
