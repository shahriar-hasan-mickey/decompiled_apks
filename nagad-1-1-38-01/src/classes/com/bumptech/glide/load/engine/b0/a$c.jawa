record `com.bumptech.glide.load.engine.b0.a$c` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
global `com.bumptech.glide.load.engine.b0.a$c` `@@com.bumptech.glide.load.engine.b0.a$c.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.bumptech.glide.load.engine.b0.a$c` `@@com.bumptech.glide.load.engine.b0.a$c.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/b0/a$c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L299148.  v0:= new `com.bumptech.glide.load.engine.b0.a$c$a`;
  #L29914c.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/b0/a$c$a;.<init>:()V` @kind direct;
  #L299152.  v0:= new `com.bumptech.glide.load.engine.b0.a$c$b`;
  #L299156.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/b0/a$c$b;.<init>:()V` @kind direct;
  #L29915c.  `@@com.bumptech.glide.load.engine.b0.a$c.a` @type ^`com.bumptech.glide.load.engine.b0.a$c` := v0 @kind object;
  #L299160.  v0:= new `com.bumptech.glide.load.engine.b0.a$c$c`;
  #L299164.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/b0/a$c$c;.<init>:()V` @kind direct;
  #L29916a.  v0:= `@@com.bumptech.glide.load.engine.b0.a$c.a` @type ^`com.bumptech.glide.load.engine.b0.a$c` @kind object;
  #L29916e.  `@@com.bumptech.glide.load.engine.b0.a$c.b` @type ^`com.bumptech.glide.load.engine.b0.a$c` := v0 @kind object;
  #L299172.  return @kind void;
}
procedure `void` `handle`(`java.lang.Throwable` v0 @kind object) @signature `Lcom/bumptech/glide/load/engine/b0/a$c;.handle:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
