record `com.bumptech.glide.load.engine.g` @kind class @AccessFlag FINAL {
  `java.util.List` `com.bumptech.glide.load.engine.g.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.load.engine.g.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.d` `com.bumptech.glide.load.engine.g.c` @AccessFlag PRIVATE;
  `java.lang.Object` `com.bumptech.glide.load.engine.g.d` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.g.e` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.g.f` @AccessFlag PRIVATE;
  `java.lang.Class` `com.bumptech.glide.load.engine.g.g` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.h$e` `com.bumptech.glide.load.engine.g.h` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.h` `com.bumptech.glide.load.engine.g.i` @AccessFlag PRIVATE;
  `java.util.Map` `com.bumptech.glide.load.engine.g.j` @AccessFlag PRIVATE;
  `java.lang.Class` `com.bumptech.glide.load.engine.g.k` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.g.l` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.g.m` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.f` `com.bumptech.glide.load.engine.g.n` @AccessFlag PRIVATE;
  `com.bumptech.glide.g` `com.bumptech.glide.load.engine.g.o` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.j` `com.bumptech.glide.load.engine.g.p` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.g.q` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.g.r` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2913a0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2913a6.  v0:= new `java.util.ArrayList`;
  #L2913aa.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2913b0.  v1.`com.bumptech.glide.load.engine.g.a` @type ^`java.util.List` := v0 @kind object;
  #L2913b4.  v0:= new `java.util.ArrayList`;
  #L2913b8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2913be.  v1.`com.bumptech.glide.load.engine.g.b` @type ^`java.util.List` := v0 @kind object;
  #L2913c2.  return @kind void;
}
procedure `com.bumptech.glide.load.d` `a`(`com.bumptech.glide.load.engine.g` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.a:(Ljava/lang/Object;)Lcom/bumptech/glide/load/d;` @AccessFlag  {
    temp;
    v0;

  #L290fa4.  v0:= v1.`com.bumptech.glide.load.engine.g.c` @type ^`com.bumptech.glide.d` @kind object;
  #L290fa8.  call temp:= `getRegistry`(v0) @signature `Lcom/bumptech/glide/d;.getRegistry:()Lcom/bumptech/glide/Registry;` @kind virtual;
  #L290fae.  v0:= temp @kind object;
  #L290fb0.  call temp:= `getSourceEncoder`(v0, v2) @signature `Lcom/bumptech/glide/Registry;.getSourceEncoder:(Ljava/lang/Object;)Lcom/bumptech/glide/load/d;` @kind virtual;
  #L290fb6.  v2:= temp @kind object;
  #L290fb8.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.engine.s` `a`(`com.bumptech.glide.load.engine.g` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.a:(Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/s;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L291114.  v0:= v3.`com.bumptech.glide.load.engine.g.c` @type ^`com.bumptech.glide.d` @kind object;
  #L291118.  call temp:= `getRegistry`(v0) @signature `Lcom/bumptech/glide/d;.getRegistry:()Lcom/bumptech/glide/Registry;` @kind virtual;
  #L29111e.  v0:= temp @kind object;
  #L291120.  v1:= v3.`com.bumptech.glide.load.engine.g.g` @type ^`java.lang.Class` @kind object;
  #L291124.  v2:= v3.`com.bumptech.glide.load.engine.g.k` @type ^`java.lang.Class` @kind object;
  #L291128.  call temp:= `getLoadPath`(v0, v4, v1, v2) @signature `Lcom/bumptech/glide/Registry;.getLoadPath:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/s;` @kind virtual;
  #L29112e.  v4:= temp @kind object;
  #L291130.  return v4 @kind object;
}
procedure `com.bumptech.glide.load.k` `a`(`com.bumptech.glide.load.engine.g` v1 @kind this, `com.bumptech.glide.load.engine.u` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.a:(Lcom/bumptech/glide/load/engine/u;)Lcom/bumptech/glide/load/k;` @AccessFlag  {
    temp;
    v0;

  #L290ffc.  v0:= v1.`com.bumptech.glide.load.engine.g.c` @type ^`com.bumptech.glide.d` @kind object;
  #L291000.  call temp:= `getRegistry`(v0) @signature `Lcom/bumptech/glide/d;.getRegistry:()Lcom/bumptech/glide/Registry;` @kind virtual;
  #L291006.  v0:= temp @kind object;
  #L291008.  call temp:= `getResultEncoder`(v0, v2) @signature `Lcom/bumptech/glide/Registry;.getResultEncoder:(Lcom/bumptech/glide/load/engine/u;)Lcom/bumptech/glide/load/k;` @kind virtual;
  #L29100e.  v2:= temp @kind object;
  #L291010.  return v2 @kind object;
}
procedure `java.util.List` `a`(`com.bumptech.glide.load.engine.g` v1 @kind this, `java.io.File` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.a:(Ljava/io/File;)Ljava/util/List;` @AccessFlag  {
    temp;
    v0;

  #L29133c.  v0:= v1.`com.bumptech.glide.load.engine.g.c` @type ^`com.bumptech.glide.d` @kind object;
  #L291340.  call temp:= `getRegistry`(v0) @signature `Lcom/bumptech/glide/d;.getRegistry:()Lcom/bumptech/glide/Registry;` @kind virtual;
  #L291346.  v0:= temp @kind object;
  #L291348.  call temp:= `getModelLoaders`(v0, v2) @signature `Lcom/bumptech/glide/Registry;.getModelLoaders:(Ljava/lang/Object;)Ljava/util/List;` @kind virtual;
  #L29134e.  v2:= temp @kind object;
  #L291350.  return v2 @kind object;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.g` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2913d4.  v0:= 0I;
  #L2913d6.  v2.`com.bumptech.glide.load.engine.g.c` @type ^`com.bumptech.glide.d` := v0 @kind object;
  #L2913da.  v2.`com.bumptech.glide.load.engine.g.d` @type ^`java.lang.Object` := v0 @kind object;
  #L2913de.  v2.`com.bumptech.glide.load.engine.g.n` @type ^`com.bumptech.glide.load.f` := v0 @kind object;
  #L2913e2.  v2.`com.bumptech.glide.load.engine.g.g` @type ^`java.lang.Class` := v0 @kind object;
  #L2913e6.  v2.`com.bumptech.glide.load.engine.g.k` @type ^`java.lang.Class` := v0 @kind object;
  #L2913ea.  v2.`com.bumptech.glide.load.engine.g.i` @type ^`com.bumptech.glide.load.h` := v0 @kind object;
  #L2913ee.  v2.`com.bumptech.glide.load.engine.g.o` @type ^`com.bumptech.glide.g` := v0 @kind object;
  #L2913f2.  v2.`com.bumptech.glide.load.engine.g.j` @type ^`java.util.Map` := v0 @kind object;
  #L2913f6.  v2.`com.bumptech.glide.load.engine.g.p` @type ^`com.bumptech.glide.load.engine.j` := v0 @kind object;
  #L2913fa.  v0:= v2.`com.bumptech.glide.load.engine.g.a` @type ^`java.util.List` @kind object;
  #L2913fe.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L291404.  v0:= 0I;
  #L291406.  v2.`com.bumptech.glide.load.engine.g.l` @type ^`boolean` := v0 @kind boolean;
  #L29140a.  v1:= v2.`com.bumptech.glide.load.engine.g.b` @type ^`java.util.List` @kind object;
  #L29140e.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L291414.  v2.`com.bumptech.glide.load.engine.g.m` @type ^`boolean` := v0 @kind boolean;
  #L291418.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.g` v0 @kind this, `com.bumptech.glide.d` v1 @kind object, `java.lang.Object` v2 @kind object, `com.bumptech.glide.load.f` v3 @kind object, `int` v4 , `int` v5 , `com.bumptech.glide.load.engine.j` v6 @kind object, `java.lang.Class` v7 @kind object, `java.lang.Class` v8 @kind object, `com.bumptech.glide.g` v9 @kind object, `com.bumptech.glide.load.h` v10 @kind object, `java.util.Map` v11 @kind object, `boolean` v12 , `boolean` v13 , `com.bumptech.glide.load.engine.h$e` v14 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.a:(Lcom/bumptech/glide/d;Ljava/lang/Object;Lcom/bumptech/glide/load/f;IILcom/bumptech/glide/load/engine/j;Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/g;Lcom/bumptech/glide/load/h;Ljava/util/Map;ZZLcom/bumptech/glide/load/engine/h$e;)V` @AccessFlag  {
    temp;

  #L29142c.  v0.`com.bumptech.glide.load.engine.g.c` @type ^`com.bumptech.glide.d` := v1 @kind object;
  #L291430.  v0.`com.bumptech.glide.load.engine.g.d` @type ^`java.lang.Object` := v2 @kind object;
  #L291434.  v0.`com.bumptech.glide.load.engine.g.n` @type ^`com.bumptech.glide.load.f` := v3 @kind object;
  #L291438.  v0.`com.bumptech.glide.load.engine.g.e` @type ^`int` := v4;
  #L29143c.  v0.`com.bumptech.glide.load.engine.g.f` @type ^`int` := v5;
  #L291440.  v0.`com.bumptech.glide.load.engine.g.p` @type ^`com.bumptech.glide.load.engine.j` := v6 @kind object;
  #L291444.  v0.`com.bumptech.glide.load.engine.g.g` @type ^`java.lang.Class` := v7 @kind object;
  #L291448.  v0.`com.bumptech.glide.load.engine.g.h` @type ^`com.bumptech.glide.load.engine.h$e` := v14 @kind object;
  #L29144c.  v0.`com.bumptech.glide.load.engine.g.k` @type ^`java.lang.Class` := v8 @kind object;
  #L291450.  v0.`com.bumptech.glide.load.engine.g.o` @type ^`com.bumptech.glide.g` := v9 @kind object;
  #L291454.  v0.`com.bumptech.glide.load.engine.g.i` @type ^`com.bumptech.glide.load.h` := v10 @kind object;
  #L291458.  v0.`com.bumptech.glide.load.engine.g.j` @type ^`java.util.Map` := v11 @kind object;
  #L29145c.  v0.`com.bumptech.glide.load.engine.g.q` @type ^`boolean` := v12 @kind boolean;
  #L291460.  v0.`com.bumptech.glide.load.engine.g.r` @type ^`boolean` := v13 @kind boolean;
  #L291464.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.engine.g` v5 @kind this, `com.bumptech.glide.load.f` v6 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.a:(Lcom/bumptech/glide/load/f;)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L290f3c.  call temp:= `g`(v5) @signature `Lcom/bumptech/glide/load/engine/g;.g:()Ljava/util/List;` @kind virtual;
  #L290f42.  v0:= temp @kind object;
  #L290f44.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L290f4a.  v1:= temp;
  #L290f4c.  v2:= 0I;
  #L290f4e.  v3:= 0I;
  #L290f50.  if v3 >= v1 then goto L290f7a;
  #L290f54.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L290f5a.  v4:= temp @kind object;
  #L290f5c.  v4:= (`com.bumptech.glide.load.n.n$a`) v4 @kind object;
  #L290f60.  v4:= v4.`com.bumptech.glide.load.n.n$a.a` @type ^`com.bumptech.glide.load.f` @kind object;
  #L290f64.  call temp:= `equals`(v4, v6) @signature `Lcom/bumptech/glide/load/f;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L290f6a.  v4:= temp;
  #L290f6c.  if v4 == 0 then goto L290f74;
  #L290f70.  v6:= 1I;
  #L290f72.  return v6;
  #L290f74.  v3:= v3 + 1;
  #L290f78.  goto L290f50;
  #L290f7a.  return v2;
}
procedure `com.bumptech.glide.load.engine.z.b` `b`(`com.bumptech.glide.load.engine.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.b:()Lcom/bumptech/glide/load/engine/z/b;` @AccessFlag  {
    temp;
    v0;

  #L291144.  v0:= v1.`com.bumptech.glide.load.engine.g.c` @type ^`com.bumptech.glide.d` @kind object;
  #L291148.  call temp:= `getArrayPool`(v0) @signature `Lcom/bumptech/glide/d;.getArrayPool:()Lcom/bumptech/glide/load/engine/z/b;` @kind virtual;
  #L29114e.  v0:= temp @kind object;
  #L291150.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.l` `b`(`com.bumptech.glide.load.engine.g` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.b:(Ljava/lang/Class;)Lcom/bumptech/glide/load/l;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L291024.  v0:= v4.`com.bumptech.glide.load.engine.g.j` @type ^`java.util.Map` @kind object;
  #L291028.  call temp:= `get`(v0, v5) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L29102e.  v0:= temp @kind object;
  #L291030.  v0:= (`com.bumptech.glide.load.l`) v0 @kind object;
  #L291034.  if v0 != 0 then goto L291088;
  #L291038.  v1:= v4.`com.bumptech.glide.load.engine.g.j` @type ^`java.util.Map` @kind object;
  #L29103c.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L291042.  v1:= temp @kind object;
  #L291044.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L29104a.  v1:= temp @kind object;
  #L29104c.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L291052.  v2:= temp;
  #L291054.  if v2 == 0 then goto L291088;
  #L291058.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L29105e.  v2:= temp @kind object;
  #L291060.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L291064.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L29106a.  v3:= temp @kind object;
  #L29106c.  v3:= (`java.lang.Class`) v3 @kind object;
  #L291070.  call temp:= `isAssignableFrom`(v3, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L291076.  v3:= temp;
  #L291078.  if v3 == 0 then goto L29104c;
  #L29107c.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L291082.  v0:= temp @kind object;
  #L291084.  v0:= (`com.bumptech.glide.load.l`) v0 @kind object;
  #L291088.  if v0 != 0 then goto L2910e8;
  #L29108c.  v0:= v4.`com.bumptech.glide.load.engine.g.j` @type ^`java.util.Map` @kind object;
  #L291090.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L291096.  v0:= temp;
  #L291098.  if v0 == 0 then goto L2910de;
  #L29109c.  v0:= v4.`com.bumptech.glide.load.engine.g.q` @type ^`boolean` @kind boolean;
  #L2910a0.  if v0 != 0 then goto L2910a6;
  #L2910a4.  goto L2910de;
  #L2910a6.  v0:= new `java.lang.IllegalArgumentException`;
  #L2910aa.  v1:= new `java.lang.StringBuilder`;
  #L2910ae.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2910b4.  v2:= "Missing transformation for " @kind object;
  #L2910b8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2910be.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2910c4.  v5:= ". If you wish to ignore unknown resource types, use the optional transformation methods." @kind object;
  #L2910c8.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2910ce.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2910d4.  v5:= temp @kind object;
  #L2910d6.  call `<init>`(v0, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2910dc.  throw v0;
  #L2910de.  call temp:= `get`() @signature `Lcom/bumptech/glide/load/o/c;.get:()Lcom/bumptech/glide/load/o/c;` @kind static;
  #L2910e4.  v5:= temp @kind object;
  #L2910e6.  return v5 @kind object;
  #L2910e8.  return v0 @kind object;
}
procedure `boolean` `b`(`com.bumptech.glide.load.engine.g` v1 @kind this, `com.bumptech.glide.load.engine.u` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.b:(Lcom/bumptech/glide/load/engine/u;)Z` @AccessFlag  {
    temp;
    v0;

  #L290efc.  v0:= v1.`com.bumptech.glide.load.engine.g.c` @type ^`com.bumptech.glide.d` @kind object;
  #L290f00.  call temp:= `getRegistry`(v0) @signature `Lcom/bumptech/glide/d;.getRegistry:()Lcom/bumptech/glide/Registry;` @kind virtual;
  #L290f06.  v0:= temp @kind object;
  #L290f08.  call temp:= `isResourceEncoderAvailable`(v0, v2) @signature `Lcom/bumptech/glide/Registry;.isResourceEncoderAvailable:(Lcom/bumptech/glide/load/engine/u;)Z` @kind virtual;
  #L290f0e.  v2:= temp;
  #L290f10.  return v2;
}
procedure `java.util.List` `c`(`com.bumptech.glide.load.engine.g` v8 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.c:()Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2911ec.  v0:= v8.`com.bumptech.glide.load.engine.g.m` @type ^`boolean` @kind boolean;
  #L2911f0.  if v0 != 0 then goto L29129a;
  #L2911f4.  v0:= 1I;
  #L2911f6.  v8.`com.bumptech.glide.load.engine.g.m` @type ^`boolean` := v0 @kind boolean;
  #L2911fa.  v0:= v8.`com.bumptech.glide.load.engine.g.b` @type ^`java.util.List` @kind object;
  #L2911fe.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L291204.  call temp:= `g`(v8) @signature `Lcom/bumptech/glide/load/engine/g;.g:()Ljava/util/List;` @kind virtual;
  #L29120a.  v0:= temp @kind object;
  #L29120c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L291212.  v1:= temp;
  #L291214.  v2:= 0I;
  #L291216.  v3:= 0I;
  #L291218.  if v3 >= v1 then goto L29129a;
  #L29121c.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L291222.  v4:= temp @kind object;
  #L291224.  v4:= (`com.bumptech.glide.load.n.n$a`) v4 @kind object;
  #L291228.  v5:= v8.`com.bumptech.glide.load.engine.g.b` @type ^`java.util.List` @kind object;
  #L29122c.  v6:= v4.`com.bumptech.glide.load.n.n$a.a` @type ^`com.bumptech.glide.load.f` @kind object;
  #L291230.  call temp:= `contains`(v5, v6) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L291236.  v5:= temp;
  #L291238.  if v5 != 0 then goto L29124a;
  #L29123c.  v5:= v8.`com.bumptech.glide.load.engine.g.b` @type ^`java.util.List` @kind object;
  #L291240.  v6:= v4.`com.bumptech.glide.load.n.n$a.a` @type ^`com.bumptech.glide.load.f` @kind object;
  #L291244.  call temp:= `add`(v5, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L29124a.  v5:= 0I;
  #L29124c.  v6:= v4.`com.bumptech.glide.load.n.n$a.b` @type ^`java.util.List` @kind object;
  #L291250.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L291256.  v6:= temp;
  #L291258.  if v5 >= v6 then goto L291294;
  #L29125c.  v6:= v8.`com.bumptech.glide.load.engine.g.b` @type ^`java.util.List` @kind object;
  #L291260.  v7:= v4.`com.bumptech.glide.load.n.n$a.b` @type ^`java.util.List` @kind object;
  #L291264.  call temp:= `get`(v7, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L29126a.  v7:= temp @kind object;
  #L29126c.  call temp:= `contains`(v6, v7) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L291272.  v6:= temp;
  #L291274.  if v6 != 0 then goto L29128e;
  #L291278.  v6:= v8.`com.bumptech.glide.load.engine.g.b` @type ^`java.util.List` @kind object;
  #L29127c.  v7:= v4.`com.bumptech.glide.load.n.n$a.b` @type ^`java.util.List` @kind object;
  #L291280.  call temp:= `get`(v7, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L291286.  v7:= temp @kind object;
  #L291288.  call temp:= `add`(v6, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L29128e.  v5:= v5 + 1;
  #L291292.  goto L29124c;
  #L291294.  v3:= v3 + 1;
  #L291298.  goto L291218;
  #L29129a.  v0:= v8.`com.bumptech.glide.load.engine.g.b` @type ^`java.util.List` @kind object;
  #L29129e.  return v0 @kind object;
}
procedure `boolean` `c`(`com.bumptech.glide.load.engine.g` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.c:(Ljava/lang/Class;)Z` @AccessFlag  {
    temp;

  #L290ed8.  call temp:= `a`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/g;.a:(Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/s;` @kind virtual;
  #L290ede.  v1:= temp @kind object;
  #L290ee0.  if v1 == 0 then goto L290ee8;
  #L290ee4.  v1:= 1I;
  #L290ee6.  goto L290eea;
  #L290ee8.  v1:= 0I;
  #L290eea.  return v1;
}
procedure `com.bumptech.glide.load.engine.a0.a` `d`(`com.bumptech.glide.load.engine.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.d:()Lcom/bumptech/glide/load/engine/a0/a;` @AccessFlag  {
    temp;
    v0;

  #L291164.  v0:= v1.`com.bumptech.glide.load.engine.g.h` @type ^`com.bumptech.glide.load.engine.h$e` @kind object;
  #L291168.  call temp:= `getDiskCache`(v0) @signature `Lcom/bumptech/glide/load/engine/h$e;.getDiskCache:()Lcom/bumptech/glide/load/engine/a0/a;` @kind interface;
  #L29116e.  v0:= temp @kind object;
  #L291170.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.j` `e`(`com.bumptech.glide.load.engine.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.e:()Lcom/bumptech/glide/load/engine/j;` @AccessFlag  {
    temp;
    v0;

  #L2910fc.  v0:= v1.`com.bumptech.glide.load.engine.g.p` @type ^`com.bumptech.glide.load.engine.j` @kind object;
  #L291100.  return v0 @kind object;
}
procedure `int` `f`(`com.bumptech.glide.load.engine.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.f:()I` @AccessFlag  {
    temp;
    v0;

  #L291184.  v0:= v1.`com.bumptech.glide.load.engine.g.f` @type ^`int`;
  #L291188.  return v0;
}
procedure `java.util.List` `g`(`com.bumptech.glide.load.engine.g` v8 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.g:()Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2912b0.  v0:= v8.`com.bumptech.glide.load.engine.g.l` @type ^`boolean` @kind boolean;
  #L2912b4.  if v0 != 0 then goto L291326;
  #L2912b8.  v0:= 1I;
  #L2912ba.  v8.`com.bumptech.glide.load.engine.g.l` @type ^`boolean` := v0 @kind boolean;
  #L2912be.  v0:= v8.`com.bumptech.glide.load.engine.g.a` @type ^`java.util.List` @kind object;
  #L2912c2.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L2912c8.  v0:= v8.`com.bumptech.glide.load.engine.g.c` @type ^`com.bumptech.glide.d` @kind object;
  #L2912cc.  call temp:= `getRegistry`(v0) @signature `Lcom/bumptech/glide/d;.getRegistry:()Lcom/bumptech/glide/Registry;` @kind virtual;
  #L2912d2.  v0:= temp @kind object;
  #L2912d4.  v1:= v8.`com.bumptech.glide.load.engine.g.d` @type ^`java.lang.Object` @kind object;
  #L2912d8.  call temp:= `getModelLoaders`(v0, v1) @signature `Lcom/bumptech/glide/Registry;.getModelLoaders:(Ljava/lang/Object;)Ljava/util/List;` @kind virtual;
  #L2912de.  v0:= temp @kind object;
  #L2912e0.  v1:= 0I;
  #L2912e2.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2912e8.  v2:= temp;
  #L2912ea.  if v1 >= v2 then goto L291326;
  #L2912ee.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2912f4.  v3:= temp @kind object;
  #L2912f6.  v3:= (`com.bumptech.glide.load.n.n`) v3 @kind object;
  #L2912fa.  v4:= v8.`com.bumptech.glide.load.engine.g.d` @type ^`java.lang.Object` @kind object;
  #L2912fe.  v5:= v8.`com.bumptech.glide.load.engine.g.e` @type ^`int`;
  #L291302.  v6:= v8.`com.bumptech.glide.load.engine.g.f` @type ^`int`;
  #L291306.  v7:= v8.`com.bumptech.glide.load.engine.g.i` @type ^`com.bumptech.glide.load.h` @kind object;
  #L29130a.  call temp:= `buildLoadData`(v3, v4, v5, v6, v7) @signature `Lcom/bumptech/glide/load/n/n;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @kind interface;
  #L291310.  v3:= temp @kind object;
  #L291312.  if v3 == 0 then goto L291320;
  #L291316.  v4:= v8.`com.bumptech.glide.load.engine.g.a` @type ^`java.util.List` @kind object;
  #L29131a.  call temp:= `add`(v4, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L291320.  v1:= v1 + 1;
  #L291324.  goto L2912ea;
  #L291326.  v0:= v8.`com.bumptech.glide.load.engine.g.a` @type ^`java.util.List` @kind object;
  #L29132a.  return v0 @kind object;
}
procedure `java.lang.Class` `h`(`com.bumptech.glide.load.engine.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.h:()Ljava/lang/Class;` @AccessFlag  {
    temp;
    v0;

  #L2911b4.  v0:= v1.`com.bumptech.glide.load.engine.g.d` @type ^`java.lang.Object` @kind object;
  #L2911b8.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2911be.  v0:= temp @kind object;
  #L2911c0.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.h` `i`(`com.bumptech.glide.load.engine.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.i:()Lcom/bumptech/glide/load/h;` @AccessFlag  {
    temp;
    v0;

  #L290fe4.  v0:= v1.`com.bumptech.glide.load.engine.g.i` @type ^`com.bumptech.glide.load.h` @kind object;
  #L290fe8.  return v0 @kind object;
}
procedure `com.bumptech.glide.g` `j`(`com.bumptech.glide.load.engine.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.j:()Lcom/bumptech/glide/g;` @AccessFlag  {
    temp;
    v0;

  #L290f8c.  v0:= v1.`com.bumptech.glide.load.engine.g.o` @type ^`com.bumptech.glide.g` @kind object;
  #L290f90.  return v0 @kind object;
}
procedure `java.util.List` `k`(`com.bumptech.glide.load.engine.g` v4 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.k:()Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L291364.  v0:= v4.`com.bumptech.glide.load.engine.g.c` @type ^`com.bumptech.glide.d` @kind object;
  #L291368.  call temp:= `getRegistry`(v0) @signature `Lcom/bumptech/glide/d;.getRegistry:()Lcom/bumptech/glide/Registry;` @kind virtual;
  #L29136e.  v0:= temp @kind object;
  #L291370.  v1:= v4.`com.bumptech.glide.load.engine.g.d` @type ^`java.lang.Object` @kind object;
  #L291374.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L29137a.  v1:= temp @kind object;
  #L29137c.  v2:= v4.`com.bumptech.glide.load.engine.g.g` @type ^`java.lang.Class` @kind object;
  #L291380.  v3:= v4.`com.bumptech.glide.load.engine.g.k` @type ^`java.lang.Class` @kind object;
  #L291384.  call temp:= `getRegisteredResourceClasses`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/Registry;.getRegisteredResourceClasses:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;` @kind virtual;
  #L29138a.  v0:= temp @kind object;
  #L29138c.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.f` `l`(`com.bumptech.glide.load.engine.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.l:()Lcom/bumptech/glide/load/f;` @AccessFlag  {
    temp;
    v0;

  #L290fcc.  v0:= v1.`com.bumptech.glide.load.engine.g.n` @type ^`com.bumptech.glide.load.f` @kind object;
  #L290fd0.  return v0 @kind object;
}
procedure `java.lang.Class` `m`(`com.bumptech.glide.load.engine.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.m:()Ljava/lang/Class;` @AccessFlag  {
    temp;
    v0;

  #L2911d4.  v0:= v1.`com.bumptech.glide.load.engine.g.k` @type ^`java.lang.Class` @kind object;
  #L2911d8.  return v0 @kind object;
}
procedure `int` `n`(`com.bumptech.glide.load.engine.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.n:()I` @AccessFlag  {
    temp;
    v0;

  #L29119c.  v0:= v1.`com.bumptech.glide.load.engine.g.e` @type ^`int`;
  #L2911a0.  return v0;
}
procedure `boolean` `o`(`com.bumptech.glide.load.engine.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.o:()Z` @AccessFlag  {
    temp;
    v0;

  #L290f24.  v0:= v1.`com.bumptech.glide.load.engine.g.r` @type ^`boolean` @kind boolean;
  #L290f28.  return v0;
}
