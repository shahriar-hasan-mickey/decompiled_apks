record `com.bumptech.glide.load.engine.p` @kind class @AccessFlag  extends `com.bumptech.glide.load.engine.u` @kind interface {
  `boolean` `com.bumptech.glide.load.engine.p.f` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.load.engine.p.g` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.u` `com.bumptech.glide.load.engine.p.h` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.p$a` `com.bumptech.glide.load.engine.p.i` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.f` `com.bumptech.glide.load.engine.p.j` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.p.k` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.p.l` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.p` v0 @kind this, `com.bumptech.glide.load.engine.u` v1 @kind object, `boolean` v2 , `boolean` v3 , `com.bumptech.glide.load.f` v4 @kind object, `com.bumptech.glide.load.engine.p$a` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/p;.<init>:(Lcom/bumptech/glide/load/engine/u;ZZLcom/bumptech/glide/load/f;Lcom/bumptech/glide/load/engine/p$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2940f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2940fa.  call temp:= `checkNotNull`(v1) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L294100.  v1:= (`com.bumptech.glide.load.engine.u`) v1 @kind object;
  #L294104.  v0.`com.bumptech.glide.load.engine.p.h` @type ^`com.bumptech.glide.load.engine.u` := v1 @kind object;
  #L294108.  v0.`com.bumptech.glide.load.engine.p.f` @type ^`boolean` := v2 @kind boolean;
  #L29410c.  v0.`com.bumptech.glide.load.engine.p.g` @type ^`boolean` := v3 @kind boolean;
  #L294110.  v0.`com.bumptech.glide.load.engine.p.j` @type ^`com.bumptech.glide.load.f` := v4 @kind object;
  #L294114.  call temp:= `checkNotNull`(v5) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L29411a.  v5:= (`com.bumptech.glide.load.engine.p$a`) v5 @kind object;
  #L29411e.  v0.`com.bumptech.glide.load.engine.p.i` @type ^`com.bumptech.glide.load.engine.p$a` := v5 @kind object;
  #L294122.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.p` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/p;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L294134.  @monitorenter v2
  #L294136.  v0:= v2.`com.bumptech.glide.load.engine.p.l` @type ^`boolean` @kind boolean;
  #L29413a.  if v0 != 0 then goto L29414e;
  #L29413e.  v0:= v2.`com.bumptech.glide.load.engine.p.k` @type ^`int`;
  #L294142.  v0:= v0 + 1;
  #L294146.  v2.`com.bumptech.glide.load.engine.p.k` @type ^`int` := v0;
  #L29414a.  @monitorexit v2
  #L29414c.  return @kind void;
  #L29414e.  v0:= new `java.lang.IllegalStateException`;
  #L294152.  v1:= "Cannot acquire a recycled resource" @kind object;
  #L294156.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L29415c.  throw v0;
  #L29415e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L294160.  @monitorexit v2
  #L294162.  throw v0;
  catch `java.lang.Throwable` @[L294136..L29414a] goto L29415e;
  catch `java.lang.Throwable` @[L29414e..L29415e] goto L29415e;
}
procedure `com.bumptech.glide.load.engine.u` `b`(`com.bumptech.glide.load.engine.p` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/p;.b:()Lcom/bumptech/glide/load/engine/u;` @AccessFlag  {
    temp;
    v0;

  #L293fc0.  v0:= v1.`com.bumptech.glide.load.engine.p.h` @type ^`com.bumptech.glide.load.engine.u` @kind object;
  #L293fc4.  return v0 @kind object;
}
procedure `boolean` `c`(`com.bumptech.glide.load.engine.p` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/p;.c:()Z` @AccessFlag  {
    temp;
    v0;

  #L293fa8.  v0:= v1.`com.bumptech.glide.load.engine.p.f` @type ^`boolean` @kind boolean;
  #L293fac.  return v0;
}
procedure `void` `d`(`com.bumptech.glide.load.engine.p` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/p;.d:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L294200.  @monitorenter v2
  #L294202.  v0:= v2.`com.bumptech.glide.load.engine.p.k` @type ^`int`;
  #L294206.  if v0 <= 0 then goto L294234;
  #L29420a.  v0:= v2.`com.bumptech.glide.load.engine.p.k` @type ^`int`;
  #L29420e.  v1:= 1I;
  #L294210.  v0:= v0 - v1 @kind int;
  #L294212.  v2.`com.bumptech.glide.load.engine.p.k` @type ^`int` := v0;
  #L294216.  if v0 != 0 then goto L29421c;
  #L29421a.  goto L29421e;
  #L29421c.  v1:= 0I;
  #L29421e.  @monitorexit v2
  #L294220.  if v1 == 0 then goto L294232;
  #L294224.  v0:= v2.`com.bumptech.glide.load.engine.p.i` @type ^`com.bumptech.glide.load.engine.p$a` @kind object;
  #L294228.  v1:= v2.`com.bumptech.glide.load.engine.p.j` @type ^`com.bumptech.glide.load.f` @kind object;
  #L29422c.  call `onResourceReleased`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/engine/p$a;.onResourceReleased:(Lcom/bumptech/glide/load/f;Lcom/bumptech/glide/load/engine/p;)V` @kind interface;
  #L294232.  return @kind void;
  #L294234.  v0:= new `java.lang.IllegalStateException`;
  #L294238.  v1:= "Cannot release a recycled or not yet acquired resource" @kind object;
  #L29423c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L294242.  throw v0;
  #L294244.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L294246.  @monitorexit v2
  #L294248.  throw v0;
  catch `java.lang.Throwable` @[L294202..L294220] goto L294244;
  catch `java.lang.Throwable` @[L294234..L294248] goto L294244;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.load.engine.p` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/p;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L294018.  v0:= v1.`com.bumptech.glide.load.engine.p.h` @type ^`com.bumptech.glide.load.engine.u` @kind object;
  #L29401c.  call temp:= `get`(v0) @signature `Lcom/bumptech/glide/load/engine/u;.get:()Ljava/lang/Object;` @kind interface;
  #L294022.  v0:= temp @kind object;
  #L294024.  return v0 @kind object;
}
procedure `java.lang.Class` `getResourceClass`(`com.bumptech.glide.load.engine.p` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/p;.getResourceClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L293ff8.  v0:= v1.`com.bumptech.glide.load.engine.p.h` @type ^`com.bumptech.glide.load.engine.u` @kind object;
  #L293ffc.  call temp:= `getResourceClass`(v0) @signature `Lcom/bumptech/glide/load/engine/u;.getResourceClass:()Ljava/lang/Class;` @kind interface;
  #L294002.  v0:= temp @kind object;
  #L294004.  return v0 @kind object;
}
procedure `int` `getSize`(`com.bumptech.glide.load.engine.p` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/p;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L293fd8.  v0:= v1.`com.bumptech.glide.load.engine.p.h` @type ^`com.bumptech.glide.load.engine.u` @kind object;
  #L293fdc.  call temp:= `getSize`(v0) @signature `Lcom/bumptech/glide/load/engine/u;.getSize:()I` @kind interface;
  #L293fe2.  v0:= temp;
  #L293fe4.  return v0;
}
procedure `void` `recycle`(`com.bumptech.glide.load.engine.p` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/p;.recycle:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L294188.  @monitorenter v2
  #L29418a.  v0:= v2.`com.bumptech.glide.load.engine.p.k` @type ^`int`;
  #L29418e.  if v0 > 0 then goto L2941c6;
  #L294192.  v0:= v2.`com.bumptech.glide.load.engine.p.l` @type ^`boolean` @kind boolean;
  #L294196.  if v0 != 0 then goto L2941b6;
  #L29419a.  v0:= 1I;
  #L29419c.  v2.`com.bumptech.glide.load.engine.p.l` @type ^`boolean` := v0 @kind boolean;
  #L2941a0.  v0:= v2.`com.bumptech.glide.load.engine.p.g` @type ^`boolean` @kind boolean;
  #L2941a4.  if v0 == 0 then goto L2941b2;
  #L2941a8.  v0:= v2.`com.bumptech.glide.load.engine.p.h` @type ^`com.bumptech.glide.load.engine.u` @kind object;
  #L2941ac.  call `recycle`(v0) @signature `Lcom/bumptech/glide/load/engine/u;.recycle:()V` @kind interface;
  #L2941b2.  @monitorexit v2
  #L2941b4.  return @kind void;
  #L2941b6.  v0:= new `java.lang.IllegalStateException`;
  #L2941ba.  v1:= "Cannot recycle a resource that has already been recycled" @kind object;
  #L2941be.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2941c4.  throw v0;
  #L2941c6.  v0:= new `java.lang.IllegalStateException`;
  #L2941ca.  v1:= "Cannot recycle a resource while it is still acquired" @kind object;
  #L2941ce.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2941d4.  throw v0;
  #L2941d6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2941d8.  @monitorexit v2
  #L2941da.  throw v0;
  catch `java.lang.Throwable` @[L29418a..L2941b2] goto L2941d6;
  catch `java.lang.Throwable` @[L2941b6..L2941d6] goto L2941d6;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.p` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/p;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L294038.  @monitorenter v2
  #L29403a.  v0:= new `java.lang.StringBuilder`;
  #L29403e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L294044.  v1:= "EngineResource{isMemoryCacheable=" @kind object;
  #L294048.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29404e.  v1:= v2.`com.bumptech.glide.load.engine.p.f` @type ^`boolean` @kind boolean;
  #L294052.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L294058.  v1:= ", listener=" @kind object;
  #L29405c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L294062.  v1:= v2.`com.bumptech.glide.load.engine.p.i` @type ^`com.bumptech.glide.load.engine.p$a` @kind object;
  #L294066.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29406c.  v1:= ", key=" @kind object;
  #L294070.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L294076.  v1:= v2.`com.bumptech.glide.load.engine.p.j` @type ^`com.bumptech.glide.load.f` @kind object;
  #L29407a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L294080.  v1:= ", acquired=" @kind object;
  #L294084.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29408a.  v1:= v2.`com.bumptech.glide.load.engine.p.k` @type ^`int`;
  #L29408e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L294094.  v1:= ", isRecycled=" @kind object;
  #L294098.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29409e.  v1:= v2.`com.bumptech.glide.load.engine.p.l` @type ^`boolean` @kind boolean;
  #L2940a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L2940a8.  v1:= ", resource=" @kind object;
  #L2940ac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2940b2.  v1:= v2.`com.bumptech.glide.load.engine.p.h` @type ^`com.bumptech.glide.load.engine.u` @kind object;
  #L2940b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2940bc.  v1:= 125I;
  #L2940c0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2940c6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2940cc.  v0:= temp @kind object;
  #L2940ce.  @monitorexit v2
  #L2940d0.  return v0 @kind object;
  #L2940d2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2940d4.  @monitorexit v2
  #L2940d6.  throw v0;
  catch `java.lang.Throwable` @[L29403a..L2940ce] goto L2940d2;
}
