record `com.bumptech.glide.load.engine.d` @kind class @AccessFlag FINAL extends `com.bumptech.glide.load.f` @kind interface {
  `com.bumptech.glide.load.f` `com.bumptech.glide.load.engine.d.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.f` `com.bumptech.glide.load.engine.d.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.d` v0 @kind this, `com.bumptech.glide.load.f` v1 @kind object, `com.bumptech.glide.load.f` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/d;.<init>:(Lcom/bumptech/glide/load/f;Lcom/bumptech/glide/load/f;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L290e44.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L290e4a.  v0.`com.bumptech.glide.load.engine.d.b` @type ^`com.bumptech.glide.load.f` := v1 @kind object;
  #L290e4e.  v0.`com.bumptech.glide.load.engine.d.c` @type ^`com.bumptech.glide.load.f` := v2 @kind object;
  #L290e52.  return @kind void;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.engine.d` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L290d70.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.load.engine.d` @kind boolean;
  #L290d74.  v1:= 0I;
  #L290d76.  if v0 == 0 then goto L290da8;
  #L290d7a.  v4:= (`com.bumptech.glide.load.engine.d`) v4 @kind object;
  #L290d7e.  v0:= v3.`com.bumptech.glide.load.engine.d.b` @type ^`com.bumptech.glide.load.f` @kind object;
  #L290d82.  v2:= v4.`com.bumptech.glide.load.engine.d.b` @type ^`com.bumptech.glide.load.f` @kind object;
  #L290d86.  call temp:= `equals`(v0, v2) @signature `Lcom/bumptech/glide/load/f;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L290d8c.  v0:= temp;
  #L290d8e.  if v0 == 0 then goto L290da8;
  #L290d92.  v0:= v3.`com.bumptech.glide.load.engine.d.c` @type ^`com.bumptech.glide.load.f` @kind object;
  #L290d96.  v4:= v4.`com.bumptech.glide.load.engine.d.c` @type ^`com.bumptech.glide.load.f` @kind object;
  #L290d9a.  call temp:= `equals`(v0, v4) @signature `Lcom/bumptech/glide/load/f;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L290da0.  v4:= temp;
  #L290da2.  if v4 == 0 then goto L290da8;
  #L290da6.  v1:= 1I;
  #L290da8.  return v1;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.engine.d` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/d;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L290dbc.  v0:= v2.`com.bumptech.glide.load.engine.d.b` @type ^`com.bumptech.glide.load.f` @kind object;
  #L290dc0.  call temp:= `hashCode`(v0) @signature `Lcom/bumptech/glide/load/f;.hashCode:()I` @kind interface;
  #L290dc6.  v0:= temp;
  #L290dc8.  v0:= v0 * 31;
  #L290dcc.  v1:= v2.`com.bumptech.glide.load.engine.d.c` @type ^`com.bumptech.glide.load.f` @kind object;
  #L290dd0.  call temp:= `hashCode`(v1) @signature `Lcom/bumptech/glide/load/f;.hashCode:()I` @kind interface;
  #L290dd6.  v1:= temp;
  #L290dd8.  v0:= v0 + v1 @kind int;
  #L290dda.  return v0;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.d` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L290dec.  v0:= new `java.lang.StringBuilder`;
  #L290df0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L290df6.  v1:= "DataCacheKey{sourceKey=" @kind object;
  #L290dfa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L290e00.  v1:= v2.`com.bumptech.glide.load.engine.d.b` @type ^`com.bumptech.glide.load.f` @kind object;
  #L290e04.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L290e0a.  v1:= ", signature=" @kind object;
  #L290e0e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L290e14.  v1:= v2.`com.bumptech.glide.load.engine.d.c` @type ^`com.bumptech.glide.load.f` @kind object;
  #L290e18.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L290e1e.  v1:= 125I;
  #L290e22.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L290e28.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L290e2e.  v0:= temp @kind object;
  #L290e30.  return v0 @kind object;
}
procedure `void` `updateDiskCacheKey`(`com.bumptech.glide.load.engine.d` v1 @kind this, `java.security.MessageDigest` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/d;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L290e64.  v0:= v1.`com.bumptech.glide.load.engine.d.b` @type ^`com.bumptech.glide.load.f` @kind object;
  #L290e68.  call `updateDiskCacheKey`(v0, v2) @signature `Lcom/bumptech/glide/load/f;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @kind interface;
  #L290e6e.  v0:= v1.`com.bumptech.glide.load.engine.d.c` @type ^`com.bumptech.glide.load.f` @kind object;
  #L290e72.  call `updateDiskCacheKey`(v0, v2) @signature `Lcom/bumptech/glide/load/f;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @kind interface;
  #L290e78.  return @kind void;
}
