record `com.bumptech.glide.load.engine.b0.a$b$a` @kind class @AccessFlag  extends `java.lang.Thread` @kind class {
  `com.bumptech.glide.load.engine.b0.a$b` `com.bumptech.glide.load.engine.b0.a$b$a.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.b0.a$b$a` v0 @kind this, `com.bumptech.glide.load.engine.b0.a$b` v1 @kind object, `java.lang.Runnable` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/b0/a$b$a;.<init>:(Lcom/bumptech/glide/load/engine/b0/a$b;Ljava/lang/Runnable;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L298f64.  v0.`com.bumptech.glide.load.engine.b0.a$b$a.f` @type ^`com.bumptech.glide.load.engine.b0.a$b` := v1 @kind object;
  #L298f68.  call `<init>`(v0, v2, v3) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/Runnable;Ljava/lang/String;)V` @kind direct;
  #L298f6e.  return @kind void;
}
procedure `void` `run`(`com.bumptech.glide.load.engine.b0.a$b$a` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/b0/a$b$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L298f80.  v0:= 9I;
  #L298f84.  call `setThreadPriority`(v0) @signature `Landroid/os/Process;.setThreadPriority:(I)V` @kind static;
  #L298f8a.  v0:= v2.`com.bumptech.glide.load.engine.b0.a$b$a.f` @type ^`com.bumptech.glide.load.engine.b0.a$b` @kind object;
  #L298f8e.  v0:= v0.`com.bumptech.glide.load.engine.b0.a$b.h` @type ^`boolean` @kind boolean;
  #L298f92.  if v0 == 0 then goto L298fbe;
  #L298f96.  v0:= new `android.os.StrictMode$ThreadPolicy$Builder`;
  #L298f9a.  call `<init>`(v0) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.<init>:()V` @kind direct;
  #L298fa0.  call temp:= `detectNetwork`(v0) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.detectNetwork:()Landroid/os/StrictMode$ThreadPolicy$Builder;` @kind virtual;
  #L298fa6.  v0:= temp @kind object;
  #L298fa8.  call temp:= `penaltyDeath`(v0) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.penaltyDeath:()Landroid/os/StrictMode$ThreadPolicy$Builder;` @kind virtual;
  #L298fae.  v0:= temp @kind object;
  #L298fb0.  call temp:= `build`(v0) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.build:()Landroid/os/StrictMode$ThreadPolicy;` @kind virtual;
  #L298fb6.  v0:= temp @kind object;
  #L298fb8.  call `setThreadPolicy`(v0) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L298fbe.  call `run`(v2) @signature `Ljava/lang/Thread;.run:()V` @kind super;
  #L298fc4.  goto L298fd6;
  #L298fc6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L298fc8.  v1:= v2.`com.bumptech.glide.load.engine.b0.a$b$a.f` @type ^`com.bumptech.glide.load.engine.b0.a$b` @kind object;
  #L298fcc.  v1:= v1.`com.bumptech.glide.load.engine.b0.a$b.g` @type ^`com.bumptech.glide.load.engine.b0.a$c` @kind object;
  #L298fd0.  call `handle`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/b0/a$c;.handle:(Ljava/lang/Throwable;)V` @kind interface;
  #L298fd6.  return @kind void;
  catch `java.lang.Throwable` @[L298fbe..L298fc4] goto L298fc6;
}
