record `com.bumptech.glide.load.engine.v` @kind class @AccessFlag  extends `com.bumptech.glide.load.engine.f` @kind interface, `com.bumptech.glide.load.m.d$a` @kind interface {
  `com.bumptech.glide.load.engine.f$a` `com.bumptech.glide.load.engine.v.f` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.g` `com.bumptech.glide.load.engine.v.g` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.v.h` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.v.i` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.f` `com.bumptech.glide.load.engine.v.j` @AccessFlag PRIVATE;
  `java.util.List` `com.bumptech.glide.load.engine.v.k` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.v.l` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.n.n$a` `com.bumptech.glide.load.engine.v.m` @AccessFlag PRIVATE_VOLATILE;
  `java.io.File` `com.bumptech.glide.load.engine.v.n` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.w` `com.bumptech.glide.load.engine.v.o` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.v` v1 @kind this, `com.bumptech.glide.load.engine.g` v2 @kind object, `com.bumptech.glide.load.engine.f$a` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/v;.<init>:(Lcom/bumptech/glide/load/engine/g;Lcom/bumptech/glide/load/engine/f$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L29564c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L295652.  v0:= -1I;
  #L295654.  v1.`com.bumptech.glide.load.engine.v.i` @type ^`int` := v0;
  #L295658.  v1.`com.bumptech.glide.load.engine.v.g` @type ^`com.bumptech.glide.load.engine.g` := v2 @kind object;
  #L29565c.  v1.`com.bumptech.glide.load.engine.v.f` @type ^`com.bumptech.glide.load.engine.f$a` := v3 @kind object;
  #L295660.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.engine.v` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/v;.a:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2953ac.  v0:= v2.`com.bumptech.glide.load.engine.v.l` @type ^`int`;
  #L2953b0.  v1:= v2.`com.bumptech.glide.load.engine.v.k` @type ^`java.util.List` @kind object;
  #L2953b4.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2953ba.  v1:= temp;
  #L2953bc.  if v0 >= v1 then goto L2953c4;
  #L2953c0.  v0:= 1I;
  #L2953c2.  goto L2953c6;
  #L2953c4.  v0:= 0I;
  #L2953c6.  return v0;
}
procedure `void` `cancel`(`com.bumptech.glide.load.engine.v` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/v;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L295674.  v0:= v1.`com.bumptech.glide.load.engine.v.m` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L295678.  if v0 == 0 then goto L295686;
  #L29567c.  v0:= v0.`com.bumptech.glide.load.n.n$a.c` @type ^`com.bumptech.glide.load.m.d` @kind object;
  #L295680.  call `cancel`(v0) @signature `Lcom/bumptech/glide/load/m/d;.cancel:()V` @kind interface;
  #L295686.  return @kind void;
}
procedure `void` `onDataReady`(`com.bumptech.glide.load.engine.v` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lcom/bumptech/glide/load/engine/v;.onDataReady:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L295698.  v0:= v6.`com.bumptech.glide.load.engine.v.f` @type ^`com.bumptech.glide.load.engine.f$a` @kind object;
  #L29569c.  v1:= v6.`com.bumptech.glide.load.engine.v.j` @type ^`com.bumptech.glide.load.f` @kind object;
  #L2956a0.  v2:= v6.`com.bumptech.glide.load.engine.v.m` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L2956a4.  v3:= v2.`com.bumptech.glide.load.n.n$a.c` @type ^`com.bumptech.glide.load.m.d` @kind object;
  #L2956a8.  v4:= `@@com.bumptech.glide.load.a.i` @type ^`com.bumptech.glide.load.a` @kind object;
  #L2956ac.  v5:= v6.`com.bumptech.glide.load.engine.v.o` @type ^`com.bumptech.glide.load.engine.w` @kind object;
  #L2956b0.  v2:= v7 @kind object;
  #L2956b2.  call `onDataFetcherReady`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/engine/f$a;.onDataFetcherReady:(Lcom/bumptech/glide/load/f;Ljava/lang/Object;Lcom/bumptech/glide/load/m/d;Lcom/bumptech/glide/load/a;Lcom/bumptech/glide/load/f;)V` @kind interface;
  #L2956b8.  return @kind void;
}
procedure `void` `onLoadFailed`(`com.bumptech.glide.load.engine.v` v4 @kind this, `java.lang.Exception` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/v;.onLoadFailed:(Ljava/lang/Exception;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2956cc.  v0:= v4.`com.bumptech.glide.load.engine.v.f` @type ^`com.bumptech.glide.load.engine.f$a` @kind object;
  #L2956d0.  v1:= v4.`com.bumptech.glide.load.engine.v.o` @type ^`com.bumptech.glide.load.engine.w` @kind object;
  #L2956d4.  v2:= v4.`com.bumptech.glide.load.engine.v.m` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L2956d8.  v2:= v2.`com.bumptech.glide.load.n.n$a.c` @type ^`com.bumptech.glide.load.m.d` @kind object;
  #L2956dc.  v3:= `@@com.bumptech.glide.load.a.i` @type ^`com.bumptech.glide.load.a` @kind object;
  #L2956e0.  call `onDataFetcherFailed`(v0, v1, v5, v2, v3) @signature `Lcom/bumptech/glide/load/engine/f$a;.onDataFetcherFailed:(Lcom/bumptech/glide/load/f;Ljava/lang/Exception;Lcom/bumptech/glide/load/m/d;Lcom/bumptech/glide/load/a;)V` @kind interface;
  #L2956e6.  return @kind void;
}
procedure `boolean` `startNext`(`com.bumptech.glide.load.engine.v` v14 @kind this) @signature `Lcom/bumptech/glide/load/engine/v;.startNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L2953d8.  v0:= v14.`com.bumptech.glide.load.engine.v.g` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L2953dc.  call temp:= `c`(v0) @signature `Lcom/bumptech/glide/load/engine/g;.c:()Ljava/util/List;` @kind virtual;
  #L2953e2.  v0:= temp @kind object;
  #L2953e4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2953ea.  v1:= temp;
  #L2953ec.  v2:= 0I;
  #L2953ee.  if v1 == 0 then goto L2953f4;
  #L2953f2.  return v2;
  #L2953f4.  v1:= v14.`com.bumptech.glide.load.engine.v.g` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L2953f8.  call temp:= `k`(v1) @signature `Lcom/bumptech/glide/load/engine/g;.k:()Ljava/util/List;` @kind virtual;
  #L2953fe.  v1:= temp @kind object;
  #L295400.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L295406.  v3:= temp;
  #L295408.  if v3 == 0 then goto L295480;
  #L29540c.  v0:= constclass @type ^`java.io.File` @kind object;
  #L295410.  v1:= v14.`com.bumptech.glide.load.engine.v.g` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L295414.  call temp:= `m`(v1) @signature `Lcom/bumptech/glide/load/engine/g;.m:()Ljava/lang/Class;` @kind virtual;
  #L29541a.  v1:= temp @kind object;
  #L29541c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L295422.  v0:= temp;
  #L295424.  if v0 == 0 then goto L29542a;
  #L295428.  return v2;
  #L29542a.  v0:= new `java.lang.IllegalStateException`;
  #L29542e.  v1:= new `java.lang.StringBuilder`;
  #L295432.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L295438.  v2:= "Failed to find any load path from " @kind object;
  #L29543c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L295442.  v2:= v14.`com.bumptech.glide.load.engine.v.g` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L295446.  call temp:= `h`(v2) @signature `Lcom/bumptech/glide/load/engine/g;.h:()Ljava/lang/Class;` @kind virtual;
  #L29544c.  v2:= temp @kind object;
  #L29544e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L295454.  v2:= " to " @kind object;
  #L295458.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29545e.  v2:= v14.`com.bumptech.glide.load.engine.v.g` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L295462.  call temp:= `m`(v2) @signature `Lcom/bumptech/glide/load/engine/g;.m:()Ljava/lang/Class;` @kind virtual;
  #L295468.  v2:= temp @kind object;
  #L29546a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L295470.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L295476.  v1:= temp @kind object;
  #L295478.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L29547e.  throw v0;
  #L295480.  v3:= v14.`com.bumptech.glide.load.engine.v.k` @type ^`java.util.List` @kind object;
  #L295484.  v4:= 1I;
  #L295486.  if v3 == 0 then goto L295546;
  #L29548a.  call temp:= `a`(v14) @signature `Lcom/bumptech/glide/load/engine/v;.a:()Z` @kind direct;
  #L295490.  v3:= temp;
  #L295492.  if v3 != 0 then goto L295498;
  #L295496.  goto L295546;
  #L295498.  v0:= 0I;
  #L29549a.  v14.`com.bumptech.glide.load.engine.v.m` @type ^`com.bumptech.glide.load.n.n$a` := v0 @kind object;
  #L29549e.  if v2 != 0 then goto L295544;
  #L2954a2.  call temp:= `a`(v14) @signature `Lcom/bumptech/glide/load/engine/v;.a:()Z` @kind direct;
  #L2954a8.  v0:= temp;
  #L2954aa.  if v0 == 0 then goto L295544;
  #L2954ae.  v0:= v14.`com.bumptech.glide.load.engine.v.k` @type ^`java.util.List` @kind object;
  #L2954b2.  v1:= v14.`com.bumptech.glide.load.engine.v.l` @type ^`int`;
  #L2954b6.  v3:= v1 + 1;
  #L2954ba.  v14.`com.bumptech.glide.load.engine.v.l` @type ^`int` := v3;
  #L2954be.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2954c4.  v0:= temp @kind object;
  #L2954c6.  v0:= (`com.bumptech.glide.load.n.n`) v0 @kind object;
  #L2954ca.  v1:= v14.`com.bumptech.glide.load.engine.v.n` @type ^`java.io.File` @kind object;
  #L2954ce.  v3:= v14.`com.bumptech.glide.load.engine.v.g` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L2954d2.  call temp:= `n`(v3) @signature `Lcom/bumptech/glide/load/engine/g;.n:()I` @kind virtual;
  #L2954d8.  v3:= temp;
  #L2954da.  v5:= v14.`com.bumptech.glide.load.engine.v.g` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L2954de.  call temp:= `f`(v5) @signature `Lcom/bumptech/glide/load/engine/g;.f:()I` @kind virtual;
  #L2954e4.  v5:= temp;
  #L2954e6.  v6:= v14.`com.bumptech.glide.load.engine.v.g` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L2954ea.  call temp:= `i`(v6) @signature `Lcom/bumptech/glide/load/engine/g;.i:()Lcom/bumptech/glide/load/h;` @kind virtual;
  #L2954f0.  v6:= temp @kind object;
  #L2954f2.  call temp:= `buildLoadData`(v0, v1, v3, v5, v6) @signature `Lcom/bumptech/glide/load/n/n;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/n/n$a;` @kind interface;
  #L2954f8.  v0:= temp @kind object;
  #L2954fa.  v14.`com.bumptech.glide.load.engine.v.m` @type ^`com.bumptech.glide.load.n.n$a` := v0 @kind object;
  #L2954fe.  v0:= v14.`com.bumptech.glide.load.engine.v.m` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L295502.  if v0 == 0 then goto L29549e;
  #L295506.  v0:= v14.`com.bumptech.glide.load.engine.v.g` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L29550a.  v1:= v14.`com.bumptech.glide.load.engine.v.m` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L29550e.  v1:= v1.`com.bumptech.glide.load.n.n$a.c` @type ^`com.bumptech.glide.load.m.d` @kind object;
  #L295512.  call temp:= `getDataClass`(v1) @signature `Lcom/bumptech/glide/load/m/d;.getDataClass:()Ljava/lang/Class;` @kind interface;
  #L295518.  v1:= temp @kind object;
  #L29551a.  call temp:= `c`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/g;.c:(Ljava/lang/Class;)Z` @kind virtual;
  #L295520.  v0:= temp;
  #L295522.  if v0 == 0 then goto L29549e;
  #L295526.  v0:= v14.`com.bumptech.glide.load.engine.v.m` @type ^`com.bumptech.glide.load.n.n$a` @kind object;
  #L29552a.  v0:= v0.`com.bumptech.glide.load.n.n$a.c` @type ^`com.bumptech.glide.load.m.d` @kind object;
  #L29552e.  v1:= v14.`com.bumptech.glide.load.engine.v.g` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L295532.  call temp:= `j`(v1) @signature `Lcom/bumptech/glide/load/engine/g;.j:()Lcom/bumptech/glide/g;` @kind virtual;
  #L295538.  v1:= temp @kind object;
  #L29553a.  call `loadData`(v0, v1, v14) @signature `Lcom/bumptech/glide/load/m/d;.loadData:(Lcom/bumptech/glide/g;Lcom/bumptech/glide/load/m/d$a;)V` @kind interface;
  #L295540.  v2:= 1I;
  #L295542.  goto L29549e;
  #L295544.  return v2;
  #L295546.  v3:= v14.`com.bumptech.glide.load.engine.v.i` @type ^`int`;
  #L29554a.  v3:= v3 + v4 @kind int;
  #L29554c.  v14.`com.bumptech.glide.load.engine.v.i` @type ^`int` := v3;
  #L295550.  v3:= v14.`com.bumptech.glide.load.engine.v.i` @type ^`int`;
  #L295554.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L29555a.  v5:= temp;
  #L29555c.  if v3 < v5 then goto L295580;
  #L295560.  v3:= v14.`com.bumptech.glide.load.engine.v.h` @type ^`int`;
  #L295564.  v3:= v3 + v4 @kind int;
  #L295566.  v14.`com.bumptech.glide.load.engine.v.h` @type ^`int` := v3;
  #L29556a.  v3:= v14.`com.bumptech.glide.load.engine.v.h` @type ^`int`;
  #L29556e.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L295574.  v4:= temp;
  #L295576.  if v3 < v4 then goto L29557c;
  #L29557a.  return v2;
  #L29557c.  v14.`com.bumptech.glide.load.engine.v.i` @type ^`int` := v2;
  #L295580.  v3:= v14.`com.bumptech.glide.load.engine.v.h` @type ^`int`;
  #L295584.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L29558a.  v3:= temp @kind object;
  #L29558c.  v3:= (`com.bumptech.glide.load.f`) v3 @kind object;
  #L295590.  v4:= v14.`com.bumptech.glide.load.engine.v.i` @type ^`int`;
  #L295594.  call temp:= `get`(v1, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L29559a.  v4:= temp @kind object;
  #L29559c.  v11:= v4 @kind object;
  #L29559e.  v11:= (`java.lang.Class`) v11 @kind object;
  #L2955a2.  v4:= v14.`com.bumptech.glide.load.engine.v.g` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L2955a6.  call temp:= `b`(v4, v11) @signature `Lcom/bumptech/glide/load/engine/g;.b:(Ljava/lang/Class;)Lcom/bumptech/glide/load/l;` @kind virtual;
  #L2955ac.  v10:= temp @kind object;
  #L2955ae.  v13:= new `com.bumptech.glide.load.engine.w`;
  #L2955b2.  v4:= v14.`com.bumptech.glide.load.engine.v.g` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L2955b6.  call temp:= `b`(v4) @signature `Lcom/bumptech/glide/load/engine/g;.b:()Lcom/bumptech/glide/load/engine/z/b;` @kind virtual;
  #L2955bc.  v5:= temp @kind object;
  #L2955be.  v4:= v14.`com.bumptech.glide.load.engine.v.g` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L2955c2.  call temp:= `l`(v4) @signature `Lcom/bumptech/glide/load/engine/g;.l:()Lcom/bumptech/glide/load/f;` @kind virtual;
  #L2955c8.  v7:= temp @kind object;
  #L2955ca.  v4:= v14.`com.bumptech.glide.load.engine.v.g` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L2955ce.  call temp:= `n`(v4) @signature `Lcom/bumptech/glide/load/engine/g;.n:()I` @kind virtual;
  #L2955d4.  v8:= temp;
  #L2955d6.  v4:= v14.`com.bumptech.glide.load.engine.v.g` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L2955da.  call temp:= `f`(v4) @signature `Lcom/bumptech/glide/load/engine/g;.f:()I` @kind virtual;
  #L2955e0.  v9:= temp;
  #L2955e2.  v4:= v14.`com.bumptech.glide.load.engine.v.g` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L2955e6.  call temp:= `i`(v4) @signature `Lcom/bumptech/glide/load/engine/g;.i:()Lcom/bumptech/glide/load/h;` @kind virtual;
  #L2955ec.  v12:= temp @kind object;
  #L2955ee.  v4:= v13 @kind object;
  #L2955f0.  v6:= v3 @kind object;
  #L2955f2.  call `<init>`(v4, v5, v6, v7, v8, v9, v10, v11, v12) @signature `Lcom/bumptech/glide/load/engine/w;.<init>:(Lcom/bumptech/glide/load/engine/z/b;Lcom/bumptech/glide/load/f;Lcom/bumptech/glide/load/f;IILcom/bumptech/glide/load/l;Ljava/lang/Class;Lcom/bumptech/glide/load/h;)V` @kind direct;
  #L2955f8.  v14.`com.bumptech.glide.load.engine.v.o` @type ^`com.bumptech.glide.load.engine.w` := v13 @kind object;
  #L2955fc.  v4:= v14.`com.bumptech.glide.load.engine.v.g` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L295600.  call temp:= `d`(v4) @signature `Lcom/bumptech/glide/load/engine/g;.d:()Lcom/bumptech/glide/load/engine/a0/a;` @kind virtual;
  #L295606.  v4:= temp @kind object;
  #L295608.  v5:= v14.`com.bumptech.glide.load.engine.v.o` @type ^`com.bumptech.glide.load.engine.w` @kind object;
  #L29560c.  call temp:= `get`(v4, v5) @signature `Lcom/bumptech/glide/load/engine/a0/a;.get:(Lcom/bumptech/glide/load/f;)Ljava/io/File;` @kind interface;
  #L295612.  v4:= temp @kind object;
  #L295614.  v14.`com.bumptech.glide.load.engine.v.n` @type ^`java.io.File` := v4 @kind object;
  #L295618.  v4:= v14.`com.bumptech.glide.load.engine.v.n` @type ^`java.io.File` @kind object;
  #L29561c.  if v4 == 0 then goto L295480;
  #L295620.  v14.`com.bumptech.glide.load.engine.v.j` @type ^`com.bumptech.glide.load.f` := v3 @kind object;
  #L295624.  v3:= v14.`com.bumptech.glide.load.engine.v.g` @type ^`com.bumptech.glide.load.engine.g` @kind object;
  #L295628.  call temp:= `a`(v3, v4) @signature `Lcom/bumptech/glide/load/engine/g;.a:(Ljava/io/File;)Ljava/util/List;` @kind virtual;
  #L29562e.  v3:= temp @kind object;
  #L295630.  v14.`com.bumptech.glide.load.engine.v.k` @type ^`java.util.List` := v3 @kind object;
  #L295634.  v14.`com.bumptech.glide.load.engine.v.l` @type ^`int` := v2;
  #L295638.  goto L295480;
}
