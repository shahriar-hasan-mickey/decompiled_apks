record `com.bumptech.glide.load.engine.b0.b` @kind class @AccessFlag FINAL {
}
procedure `int` `a`() @signature `Lcom/bumptech/glide/load/engine/b0/b;.a:()I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L299568.  call temp:= `getRuntime`() @signature `Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;` @kind static;
  #L29956e.  v0:= temp @kind object;
  #L299570.  call temp:= `availableProcessors`(v0) @signature `Ljava/lang/Runtime;.availableProcessors:()I` @kind virtual;
  #L299576.  v0:= temp;
  #L299578.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L29957c.  v2:= 17I;
  #L299580.  if v1 >= v2 then goto L299594;
  #L299584.  call temp:= `b`() @signature `Lcom/bumptech/glide/load/engine/b0/b;.b:()I` @kind static;
  #L29958a.  v1:= temp;
  #L29958c.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L299592.  v0:= temp;
  #L299594.  return v0;
}
procedure `int` `b`() @signature `Lcom/bumptech/glide/load/engine/b0/b;.b:()I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2995a8.  v0:= "GlideRuntimeCompat" @kind object;
  #L2995ac.  call temp:= `allowThreadDiskReads`() @signature `Landroid/os/StrictMode;.allowThreadDiskReads:()Landroid/os/StrictMode$ThreadPolicy;` @kind static;
  #L2995b2.  v1:= temp @kind object;
  #L2995b4.  v2:= new `java.io.File`;
  #L2995b8.  v3:= "/sys/devices/system/cpu/" @kind object;
  #L2995bc.  call `<init>`(v2, v3) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2995c2.  v3:= "cpu[0-9]+" @kind object;
  #L2995c6.  call temp:= `compile`(v3) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L2995cc.  v3:= temp @kind object;
  #L2995ce.  v4:= new `com.bumptech.glide.load.engine.b0.b$a`;
  #L2995d2.  call `<init>`(v4, v3) @signature `Lcom/bumptech/glide/load/engine/b0/b$a;.<init>:(Ljava/util/regex/Pattern;)V` @kind direct;
  #L2995d8.  call temp:= `listFiles`(v2, v4) @signature `Ljava/io/File;.listFiles:(Ljava/io/FilenameFilter;)[Ljava/io/File;` @kind virtual;
  #L2995de.  v0:= temp @kind object;
  #L2995e0.  call `setThreadPolicy`(v1) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L2995e6.  goto L29960a;
  #L2995e8.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2995ea.  v3:= 6I;
  #L2995ec.  call temp:= `isLoggable`(v0, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2995f2.  v3:= temp;
  #L2995f4.  if v3 == 0 then goto L299602;
  #L2995f8.  v3:= "Failed to calculate accurate cpu count" @kind object;
  #L2995fc.  call temp:= `e`(v0, v3, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L299602.  call `setThreadPolicy`(v1) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L299608.  v0:= 0I;
  #L29960a.  v1:= 1I;
  #L29960c.  if v0 == 0 then goto L299614;
  #L299610.  v0:= length @variable v0;
  #L299612.  goto L299616;
  #L299614.  v0:= 0I;
  #L299616.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L29961c.  v0:= temp;
  #L29961e.  return v0;
  #L299620.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L299622.  call `setThreadPolicy`(v1) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L299628.  throw v0;
  catch `java.lang.Throwable` @[L2995b4..L2995e0] goto L2995e8;
  catch `java.lang.Throwable` @[L2995ec..L299602] goto L299620;
}
