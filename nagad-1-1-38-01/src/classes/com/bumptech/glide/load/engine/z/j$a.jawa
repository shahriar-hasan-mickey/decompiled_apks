record `com.bumptech.glide.load.engine.z.j$a` @kind class @AccessFlag FINAL extends `com.bumptech.glide.load.engine.z.m` @kind interface {
  `com.bumptech.glide.load.engine.z.j$b` `com.bumptech.glide.load.engine.z.j$a.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.z.j$a.b` @AccessFlag ;
  `java.lang.Class` `com.bumptech.glide.load.engine.z.j$a.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.z.j$a` v0 @kind this, `com.bumptech.glide.load.engine.z.j$b` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/z/j$a;.<init>:(Lcom/bumptech/glide/load/engine/z/j$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2969e0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2969e6.  v0.`com.bumptech.glide.load.engine.z.j$a.a` @type ^`com.bumptech.glide.load.engine.z.j$b` := v1 @kind object;
  #L2969ea.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.z.j$a` v0 @kind this, `int` v1 , `java.lang.Class` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/z/j$a;.a:(ILjava/lang/Class;)V` @AccessFlag  {
    temp;

  #L2969fc.  v0.`com.bumptech.glide.load.engine.z.j$a.b` @type ^`int` := v1;
  #L296a00.  v0.`com.bumptech.glide.load.engine.z.j$a.c` @type ^`java.lang.Class` := v2 @kind object;
  #L296a04.  return @kind void;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.engine.z.j$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/z/j$a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L29691c.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.load.engine.z.j$a` @kind boolean;
  #L296920.  v1:= 0I;
  #L296922.  if v0 == 0 then goto L296944;
  #L296926.  v4:= (`com.bumptech.glide.load.engine.z.j$a`) v4 @kind object;
  #L29692a.  v0:= v3.`com.bumptech.glide.load.engine.z.j$a.b` @type ^`int`;
  #L29692e.  v2:= v4.`com.bumptech.glide.load.engine.z.j$a.b` @type ^`int`;
  #L296932.  if v0 != v2 then goto L296944;
  #L296936.  v0:= v3.`com.bumptech.glide.load.engine.z.j$a.c` @type ^`java.lang.Class` @kind object;
  #L29693a.  v4:= v4.`com.bumptech.glide.load.engine.z.j$a.c` @type ^`java.lang.Class` @kind object;
  #L29693e.  if v0 != v4 then goto L296944;
  #L296942.  v1:= 1I;
  #L296944.  return v1;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.engine.z.j$a` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/z/j$a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L296958.  v0:= v2.`com.bumptech.glide.load.engine.z.j$a.b` @type ^`int`;
  #L29695c.  v0:= v0 * 31;
  #L296960.  v1:= v2.`com.bumptech.glide.load.engine.z.j$a.c` @type ^`java.lang.Class` @kind object;
  #L296964.  if v1 == 0 then goto L296972;
  #L296968.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L29696e.  v1:= temp;
  #L296970.  goto L296974;
  #L296972.  v1:= 0I;
  #L296974.  v0:= v0 + v1 @kind int;
  #L296976.  return v0;
}
procedure `void` `offer`(`com.bumptech.glide.load.engine.z.j$a` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/z/j$a;.offer:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L296a18.  v0:= v1.`com.bumptech.glide.load.engine.z.j$a.a` @type ^`com.bumptech.glide.load.engine.z.j$b` @kind object;
  #L296a1c.  call `offer`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/z/d;.offer:(Lcom/bumptech/glide/load/engine/z/m;)V` @kind virtual;
  #L296a22.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.z.j$a` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/z/j$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L296988.  v0:= new `java.lang.StringBuilder`;
  #L29698c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L296992.  v1:= "Key{size=" @kind object;
  #L296996.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29699c.  v1:= v2.`com.bumptech.glide.load.engine.z.j$a.b` @type ^`int`;
  #L2969a0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2969a6.  v1:= "array=" @kind object;
  #L2969aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2969b0.  v1:= v2.`com.bumptech.glide.load.engine.z.j$a.c` @type ^`java.lang.Class` @kind object;
  #L2969b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2969ba.  v1:= 125I;
  #L2969be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2969c4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2969ca.  v0:= temp @kind object;
  #L2969cc.  return v0 @kind object;
}
