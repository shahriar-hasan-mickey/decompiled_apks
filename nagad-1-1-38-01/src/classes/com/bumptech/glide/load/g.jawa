record `com.bumptech.glide.load.g` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.Object` `com.bumptech.glide.load.g.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.g$b` `com.bumptech.glide.load.g.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.bumptech.glide.load.g.c` @AccessFlag PRIVATE_FINAL;
  `byte`[] `com.bumptech.glide.load.g.d` @AccessFlag PRIVATE_VOLATILE;
}
global `com.bumptech.glide.load.g$b` `@@com.bumptech.glide.load.g.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L28ea98.  v0:= new `com.bumptech.glide.load.g$a`;
  #L28ea9c.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/g$a;.<init>:()V` @kind direct;
  #L28eaa2.  `@@com.bumptech.glide.load.g.e` @type ^`com.bumptech.glide.load.g$b` := v0 @kind object;
  #L28eaa6.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.g` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Object` v2 @kind object, `com.bumptech.glide.load.g$b` v3 @kind object) @signature `Lcom/bumptech/glide/load/g;.<init>:(Ljava/lang/String;Ljava/lang/Object;Lcom/bumptech/glide/load/g$b;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L28eab8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28eabe.  call temp:= `checkNotEmpty`(v1) @signature `Lcom/bumptech/glide/s/j;.checkNotEmpty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L28eac4.  v0.`com.bumptech.glide.load.g.c` @type ^`java.lang.String` := v1 @kind object;
  #L28eac8.  v0.`com.bumptech.glide.load.g.a` @type ^`java.lang.Object` := v2 @kind object;
  #L28eacc.  call temp:= `checkNotNull`(v3) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L28ead2.  v3:= (`com.bumptech.glide.load.g$b`) v3 @kind object;
  #L28ead6.  v0.`com.bumptech.glide.load.g.b` @type ^`com.bumptech.glide.load.g$b` := v3 @kind object;
  #L28eada.  return @kind void;
}
procedure `com.bumptech.glide.load.g$b` `a`() @signature `Lcom/bumptech/glide/load/g;.a:()Lcom/bumptech/glide/load/g$b;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L28e864.  v0:= `@@com.bumptech.glide.load.g.e` @type ^`com.bumptech.glide.load.g$b` @kind object;
  #L28e868.  return v0 @kind object;
}
procedure `byte`[] `b`(`com.bumptech.glide.load.g` v2 @kind this) @signature `Lcom/bumptech/glide/load/g;.b:()[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L28e7c8.  v0:= v2.`com.bumptech.glide.load.g.d` @type ^`byte`[] @kind object;
  #L28e7cc.  if v0 != 0 then goto L28e7e4;
  #L28e7d0.  v0:= v2.`com.bumptech.glide.load.g.c` @type ^`java.lang.String` @kind object;
  #L28e7d4.  v1:= `@@com.bumptech.glide.load.f.a` @type ^`java.nio.charset.Charset` @kind object;
  #L28e7d8.  call temp:= `getBytes`(v0, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L28e7de.  v0:= temp @kind object;
  #L28e7e0.  v2.`com.bumptech.glide.load.g.d` @type ^`byte`[] := v0 @kind object;
  #L28e7e4.  v0:= v2.`com.bumptech.glide.load.g.d` @type ^`byte`[] @kind object;
  #L28e7e8.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.g` `disk`(`java.lang.String` v1 @kind object, `java.lang.Object` v2 @kind object, `com.bumptech.glide.load.g$b` v3 @kind object) @signature `Lcom/bumptech/glide/load/g;.disk:(Ljava/lang/String;Ljava/lang/Object;Lcom/bumptech/glide/load/g$b;)Lcom/bumptech/glide/load/g;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L28e7fc.  v0:= new `com.bumptech.glide.load.g`;
  #L28e800.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/load/g;.<init>:(Ljava/lang/String;Ljava/lang/Object;Lcom/bumptech/glide/load/g$b;)V` @kind direct;
  #L28e806.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.g` `memory`(`java.lang.String` v3 @kind object) @signature `Lcom/bumptech/glide/load/g;.memory:(Ljava/lang/String;)Lcom/bumptech/glide/load/g;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L28e818.  v0:= new `com.bumptech.glide.load.g`;
  #L28e81c.  call temp:= `a`() @signature `Lcom/bumptech/glide/load/g;.a:()Lcom/bumptech/glide/load/g$b;` @kind static;
  #L28e822.  v1:= temp @kind object;
  #L28e824.  v2:= 0I;
  #L28e826.  call `<init>`(v0, v3, v2, v1) @signature `Lcom/bumptech/glide/load/g;.<init>:(Ljava/lang/String;Ljava/lang/Object;Lcom/bumptech/glide/load/g$b;)V` @kind direct;
  #L28e82c.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.g` `memory`(`java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/bumptech/glide/load/g;.memory:(Ljava/lang/String;Ljava/lang/Object;)Lcom/bumptech/glide/load/g;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L28e840.  v0:= new `com.bumptech.glide.load.g`;
  #L28e844.  call temp:= `a`() @signature `Lcom/bumptech/glide/load/g;.a:()Lcom/bumptech/glide/load/g$b;` @kind static;
  #L28e84a.  v1:= temp @kind object;
  #L28e84c.  call `<init>`(v0, v2, v3, v1) @signature `Lcom/bumptech/glide/load/g;.<init>:(Ljava/lang/String;Ljava/lang/Object;Lcom/bumptech/glide/load/g$b;)V` @kind direct;
  #L28e852.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.g` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/g;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28e794.  v0:= instanceof @variable v2 @type ^`com.bumptech.glide.load.g` @kind boolean;
  #L28e798.  if v0 == 0 then goto L28e7b2;
  #L28e79c.  v2:= (`com.bumptech.glide.load.g`) v2 @kind object;
  #L28e7a0.  v0:= v1.`com.bumptech.glide.load.g.c` @type ^`java.lang.String` @kind object;
  #L28e7a4.  v2:= v2.`com.bumptech.glide.load.g.c` @type ^`java.lang.String` @kind object;
  #L28e7a8.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L28e7ae.  v2:= temp;
  #L28e7b0.  return v2;
  #L28e7b2.  v2:= 0I;
  #L28e7b4.  return v2;
}
procedure `java.lang.Object` `getDefaultValue`(`com.bumptech.glide.load.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/g;.getDefaultValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28e89c.  v0:= v1.`com.bumptech.glide.load.g.a` @type ^`java.lang.Object` @kind object;
  #L28e8a0.  return v0 @kind object;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/g;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28e87c.  v0:= v1.`com.bumptech.glide.load.g.c` @type ^`java.lang.String` @kind object;
  #L28e880.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L28e886.  v0:= temp;
  #L28e888.  return v0;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.g` v2 @kind this) @signature `Lcom/bumptech/glide/load/g;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28e8b4.  v0:= new `java.lang.StringBuilder`;
  #L28e8b8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28e8be.  v1:= "Option{key='" @kind object;
  #L28e8c2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28e8c8.  v1:= v2.`com.bumptech.glide.load.g.c` @type ^`java.lang.String` @kind object;
  #L28e8cc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28e8d2.  v1:= 39I;
  #L28e8d6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L28e8dc.  v1:= 125I;
  #L28e8e0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L28e8e6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28e8ec.  v0:= temp @kind object;
  #L28e8ee.  return v0 @kind object;
}
procedure `void` `update`(`com.bumptech.glide.load.g` v2 @kind this, `java.lang.Object` v3 @kind object, `java.security.MessageDigest` v4 @kind object) @signature `Lcom/bumptech/glide/load/g;.update:(Ljava/lang/Object;Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28eaec.  v0:= v2.`com.bumptech.glide.load.g.b` @type ^`com.bumptech.glide.load.g$b` @kind object;
  #L28eaf0.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/load/g;.b:()[B` @kind direct;
  #L28eaf6.  v1:= temp @kind object;
  #L28eaf8.  call `update`(v0, v1, v3, v4) @signature `Lcom/bumptech/glide/load/g$b;.update:([BLjava/lang/Object;Ljava/security/MessageDigest;)V` @kind interface;
  #L28eafe.  return @kind void;
}
