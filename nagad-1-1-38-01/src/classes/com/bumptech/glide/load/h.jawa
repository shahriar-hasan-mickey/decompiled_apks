record `com.bumptech.glide.load.h` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.f` @kind interface {
  `c.e.a` `com.bumptech.glide.load.h.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.h` v1 @kind this) @signature `Lcom/bumptech/glide/load/h;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L28e9ec.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28e9f2.  v0:= new `com.bumptech.glide.s.b`;
  #L28e9f6.  call `<init>`(v0) @signature `Lcom/bumptech/glide/s/b;.<init>:()V` @kind direct;
  #L28e9fc.  v1.`com.bumptech.glide.load.h.b` @type ^`c.e.a` := v0 @kind object;
  #L28ea00.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.g` v0 @kind object, `java.lang.Object` v1 @kind object, `java.security.MessageDigest` v2 @kind object) @signature `Lcom/bumptech/glide/load/h;.a:(Lcom/bumptech/glide/load/g;Ljava/lang/Object;Ljava/security/MessageDigest;)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L28ea34.  call `update`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/g;.update:(Ljava/lang/Object;Ljava/security/MessageDigest;)V` @kind virtual;
  #L28ea3a.  return @kind void;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.h` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/h;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28e900.  v0:= instanceof @variable v2 @type ^`com.bumptech.glide.load.h` @kind boolean;
  #L28e904.  if v0 == 0 then goto L28e91e;
  #L28e908.  v2:= (`com.bumptech.glide.load.h`) v2 @kind object;
  #L28e90c.  v0:= v1.`com.bumptech.glide.load.h.b` @type ^`c.e.a` @kind object;
  #L28e910.  v2:= v2.`com.bumptech.glide.load.h.b` @type ^`c.e.a` @kind object;
  #L28e914.  call temp:= `equals`(v0, v2) @signature `Lc/e/g;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L28e91a.  v2:= temp;
  #L28e91c.  return v2;
  #L28e91e.  v2:= 0I;
  #L28e920.  return v2;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.load.h` v1 @kind this, `com.bumptech.glide.load.g` v2 @kind object) @signature `Lcom/bumptech/glide/load/h;.get:(Lcom/bumptech/glide/load/g;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28e970.  v0:= v1.`com.bumptech.glide.load.h.b` @type ^`c.e.a` @kind object;
  #L28e974.  call temp:= `containsKey`(v0, v2) @signature `Lc/e/g;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L28e97a.  v0:= temp;
  #L28e97c.  if v0 == 0 then goto L28e98e;
  #L28e980.  v0:= v1.`com.bumptech.glide.load.h.b` @type ^`c.e.a` @kind object;
  #L28e984.  call temp:= `get`(v0, v2) @signature `Lc/e/g;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28e98a.  v2:= temp @kind object;
  #L28e98c.  goto L28e996;
  #L28e98e.  call temp:= `getDefaultValue`(v2) @signature `Lcom/bumptech/glide/load/g;.getDefaultValue:()Ljava/lang/Object;` @kind virtual;
  #L28e994.  v2:= temp @kind object;
  #L28e996.  return v2 @kind object;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.h` v1 @kind this) @signature `Lcom/bumptech/glide/load/h;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28e950.  v0:= v1.`com.bumptech.glide.load.h.b` @type ^`c.e.a` @kind object;
  #L28e954.  call temp:= `hashCode`(v0) @signature `Lc/e/g;.hashCode:()I` @kind virtual;
  #L28e95a.  v0:= temp;
  #L28e95c.  return v0;
}
procedure `void` `putAll`(`com.bumptech.glide.load.h` v1 @kind this, `com.bumptech.glide.load.h` v2 @kind object) @signature `Lcom/bumptech/glide/load/h;.putAll:(Lcom/bumptech/glide/load/h;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28ea14.  v0:= v1.`com.bumptech.glide.load.h.b` @type ^`c.e.a` @kind object;
  #L28ea18.  v2:= v2.`com.bumptech.glide.load.h.b` @type ^`c.e.a` @kind object;
  #L28ea1c.  call `putAll`(v0, v2) @signature `Lc/e/g;.putAll:(Lc/e/g;)V` @kind virtual;
  #L28ea22.  return @kind void;
}
procedure `com.bumptech.glide.load.h` `set`(`com.bumptech.glide.load.h` v1 @kind this, `com.bumptech.glide.load.g` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/bumptech/glide/load/h;.set:(Lcom/bumptech/glide/load/g;Ljava/lang/Object;)Lcom/bumptech/glide/load/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28e934.  v0:= v1.`com.bumptech.glide.load.h.b` @type ^`c.e.a` @kind object;
  #L28e938.  call temp:= `put`(v0, v2, v3) @signature `Lc/e/g;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28e93e.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.h` v2 @kind this) @signature `Lcom/bumptech/glide/load/h;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28e9a8.  v0:= new `java.lang.StringBuilder`;
  #L28e9ac.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28e9b2.  v1:= "Options{values=" @kind object;
  #L28e9b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28e9bc.  v1:= v2.`com.bumptech.glide.load.h.b` @type ^`c.e.a` @kind object;
  #L28e9c0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28e9c6.  v1:= 125I;
  #L28e9ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L28e9d0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28e9d6.  v0:= temp @kind object;
  #L28e9d8.  return v0 @kind object;
}
procedure `void` `updateDiskCacheKey`(`com.bumptech.glide.load.h` v3 @kind this, `java.security.MessageDigest` v4 @kind object) @signature `Lcom/bumptech/glide/load/h;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L28ea4c.  v0:= 0I;
  #L28ea4e.  v1:= v3.`com.bumptech.glide.load.h.b` @type ^`c.e.a` @kind object;
  #L28ea52.  call temp:= `size`(v1) @signature `Lc/e/g;.size:()I` @kind virtual;
  #L28ea58.  v1:= temp;
  #L28ea5a.  if v0 >= v1 then goto L28ea86;
  #L28ea5e.  v1:= v3.`com.bumptech.glide.load.h.b` @type ^`c.e.a` @kind object;
  #L28ea62.  call temp:= `keyAt`(v1, v0) @signature `Lc/e/g;.keyAt:(I)Ljava/lang/Object;` @kind virtual;
  #L28ea68.  v1:= temp @kind object;
  #L28ea6a.  v1:= (`com.bumptech.glide.load.g`) v1 @kind object;
  #L28ea6e.  v2:= v3.`com.bumptech.glide.load.h.b` @type ^`c.e.a` @kind object;
  #L28ea72.  call temp:= `valueAt`(v2, v0) @signature `Lc/e/g;.valueAt:(I)Ljava/lang/Object;` @kind virtual;
  #L28ea78.  v2:= temp @kind object;
  #L28ea7a.  call `a`(v1, v2, v4) @signature `Lcom/bumptech/glide/load/h;.a:(Lcom/bumptech/glide/load/g;Ljava/lang/Object;Ljava/security/MessageDigest;)V` @kind static;
  #L28ea80.  v0:= v0 + 1;
  #L28ea84.  goto L28ea4e;
  #L28ea86.  return @kind void;
}
