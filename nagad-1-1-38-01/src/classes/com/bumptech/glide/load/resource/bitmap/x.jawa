record `com.bumptech.glide.load.resource.bitmap.x` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.j` @kind interface {
  `com.bumptech.glide.load.resource.bitmap.l` `com.bumptech.glide.load.resource.bitmap.x.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.z.b` `com.bumptech.glide.load.resource.bitmap.x.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.x` v0 @kind this, `com.bumptech.glide.load.resource.bitmap.l` v1 @kind object, `com.bumptech.glide.load.engine.z.b` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/x;.<init>:(Lcom/bumptech/glide/load/resource/bitmap/l;Lcom/bumptech/glide/load/engine/z/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2a15a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a15aa.  v0.`com.bumptech.glide.load.resource.bitmap.x.a` @type ^`com.bumptech.glide.load.resource.bitmap.l` := v1 @kind object;
  #L2a15ae.  v0.`com.bumptech.glide.load.resource.bitmap.x.b` @type ^`com.bumptech.glide.load.engine.z.b` := v2 @kind object;
  #L2a15b2.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.u` `decode`(`com.bumptech.glide.load.resource.bitmap.x` v8 @kind this, `java.io.InputStream` v9 @kind object, `int` v10 , `int` v11 , `com.bumptech.glide.load.h` v12 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/x;.decode:(Ljava/io/InputStream;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2a14f0.  v0:= instanceof @variable v9 @type ^`com.bumptech.glide.load.resource.bitmap.v` @kind boolean;
  #L2a14f4.  if v0 == 0 then goto L2a1500;
  #L2a14f8.  v9:= (`com.bumptech.glide.load.resource.bitmap.v`) v9 @kind object;
  #L2a14fc.  v0:= 0I;
  #L2a14fe.  goto L2a1514;
  #L2a1500.  v0:= new `com.bumptech.glide.load.resource.bitmap.v`;
  #L2a1504.  v1:= v8.`com.bumptech.glide.load.resource.bitmap.x.b` @type ^`com.bumptech.glide.load.engine.z.b` @kind object;
  #L2a1508.  call `<init>`(v0, v9, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/v;.<init>:(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/z/b;)V` @kind direct;
  #L2a150e.  v9:= 1I;
  #L2a1510.  v9:= v0 @kind object;
  #L2a1512.  v0:= 1I;
  #L2a1514.  call temp:= `obtain`(v9) @signature `Lcom/bumptech/glide/s/d;.obtain:(Ljava/io/InputStream;)Lcom/bumptech/glide/s/d;` @kind static;
  #L2a151a.  v1:= temp @kind object;
  #L2a151c.  v3:= new `com.bumptech.glide.s.h`;
  #L2a1520.  call `<init>`(v3, v1) @signature `Lcom/bumptech/glide/s/h;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L2a1526.  v7:= new `com.bumptech.glide.load.resource.bitmap.x$a`;
  #L2a152a.  call `<init>`(v7, v9, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/x$a;.<init>:(Lcom/bumptech/glide/load/resource/bitmap/v;Lcom/bumptech/glide/s/d;)V` @kind direct;
  #L2a1530.  v2:= v8.`com.bumptech.glide.load.resource.bitmap.x.a` @type ^`com.bumptech.glide.load.resource.bitmap.l` @kind object;
  #L2a1534.  v4:= v10;
  #L2a1536.  v5:= v11;
  #L2a1538.  v6:= v12 @kind object;
  #L2a153a.  call temp:= `decode`(v2, v3, v4, v5, v6, v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/l;.decode:(Ljava/io/InputStream;IILcom/bumptech/glide/load/h;Lcom/bumptech/glide/load/resource/bitmap/l$b;)Lcom/bumptech/glide/load/engine/u;` @kind virtual;
  #L2a1540.  v10:= temp @kind object;
  #L2a1542.  call `release`(v1) @signature `Lcom/bumptech/glide/s/d;.release:()V` @kind virtual;
  #L2a1548.  if v0 == 0 then goto L2a1552;
  #L2a154c.  call `release`(v9) @signature `Lcom/bumptech/glide/load/resource/bitmap/v;.release:()V` @kind virtual;
  #L2a1552.  return v10 @kind object;
  #L2a1554.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a1556.  call `release`(v1) @signature `Lcom/bumptech/glide/s/d;.release:()V` @kind virtual;
  #L2a155c.  if v0 == 0 then goto L2a1566;
  #L2a1560.  call `release`(v9) @signature `Lcom/bumptech/glide/load/resource/bitmap/v;.release:()V` @kind virtual;
  #L2a1566.  throw v10;
  catch `java.lang.Throwable` @[L2a1530..L2a1542] goto L2a1554;
}
procedure `com.bumptech.glide.load.engine.u` `decode`(`com.bumptech.glide.load.resource.bitmap.x` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/x;.decode:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2a1584.  v1:= (`java.io.InputStream`) v1 @kind object;
  #L2a1588.  call temp:= `decode`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/resource/bitmap/x;.decode:(Ljava/io/InputStream;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u;` @kind virtual;
  #L2a158e.  v1:= temp @kind object;
  #L2a1590.  return v1 @kind object;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.resource.bitmap.x` v0 @kind this, `java.io.InputStream` v1 @kind object, `com.bumptech.glide.load.h` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/x;.handles:(Ljava/io/InputStream;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC {
    temp;

  #L2a14b0.  v2:= v0.`com.bumptech.glide.load.resource.bitmap.x.a` @type ^`com.bumptech.glide.load.resource.bitmap.l` @kind object;
  #L2a14b4.  call temp:= `handles`(v2, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/l;.handles:(Ljava/io/InputStream;)Z` @kind virtual;
  #L2a14ba.  v1:= temp;
  #L2a14bc.  return v1;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.resource.bitmap.x` v0 @kind this, `java.lang.Object` v1 @kind object, `com.bumptech.glide.load.h` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/x;.handles:(Ljava/lang/Object;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2a14d0.  v1:= (`java.io.InputStream`) v1 @kind object;
  #L2a14d4.  call temp:= `handles`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/x;.handles:(Ljava/io/InputStream;Lcom/bumptech/glide/load/h;)Z` @kind virtual;
  #L2a14da.  v1:= temp;
  #L2a14dc.  return v1;
}
