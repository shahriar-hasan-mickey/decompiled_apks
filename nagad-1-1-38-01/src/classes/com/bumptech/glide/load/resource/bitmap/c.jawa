record `com.bumptech.glide.load.resource.bitmap.c` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.k` @kind interface {
  `com.bumptech.glide.load.engine.z.b` `com.bumptech.glide.load.resource.bitmap.c.a` @AccessFlag PRIVATE_FINAL;
}
global `com.bumptech.glide.load.g` `@@com.bumptech.glide.load.resource.bitmap.c.b` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.bumptech.glide.load.g` `@@com.bumptech.glide.load.resource.bitmap.c.c` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/resource/bitmap/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L29d8dc.  v0:= 90I;
  #L29d8e0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L29d8e6.  v0:= temp @kind object;
  #L29d8e8.  v1:= "com.bumptech.glide.load.resource.bitmap.BitmapEncoder.CompressionQuality" @kind object;
  #L29d8ec.  call temp:= `memory`(v1, v0) @signature `Lcom/bumptech/glide/load/g;.memory:(Ljava/lang/String;Ljava/lang/Object;)Lcom/bumptech/glide/load/g;` @kind static;
  #L29d8f2.  v0:= temp @kind object;
  #L29d8f4.  `@@com.bumptech.glide.load.resource.bitmap.c.b` @type ^`com.bumptech.glide.load.g` := v0 @kind object;
  #L29d8f8.  v0:= "com.bumptech.glide.load.resource.bitmap.BitmapEncoder.CompressionFormat" @kind object;
  #L29d8fc.  call temp:= `memory`(v0) @signature `Lcom/bumptech/glide/load/g;.memory:(Ljava/lang/String;)Lcom/bumptech/glide/load/g;` @kind static;
  #L29d902.  v0:= temp @kind object;
  #L29d904.  `@@com.bumptech.glide.load.resource.bitmap.c.c` @type ^`com.bumptech.glide.load.g` := v0 @kind object;
  #L29d908.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.c` v0 @kind this, `com.bumptech.glide.load.engine.z.b` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/c;.<init>:(Lcom/bumptech/glide/load/engine/z/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L29d91c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29d922.  v0.`com.bumptech.glide.load.resource.bitmap.c.a` @type ^`com.bumptech.glide.load.engine.z.b` := v1 @kind object;
  #L29d926.  return @kind void;
}
procedure `android.graphics.Bitmap$CompressFormat` `a`(`com.bumptech.glide.load.resource.bitmap.c` v1 @kind this, `android.graphics.Bitmap` v2 @kind object, `com.bumptech.glide.load.h` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/c;.a:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/h;)Landroid/graphics/Bitmap$CompressFormat;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L29d660.  v0:= `@@com.bumptech.glide.load.resource.bitmap.c.c` @type ^`com.bumptech.glide.load.g` @kind object;
  #L29d664.  call temp:= `get`(v3, v0) @signature `Lcom/bumptech/glide/load/h;.get:(Lcom/bumptech/glide/load/g;)Ljava/lang/Object;` @kind virtual;
  #L29d66a.  v3:= temp @kind object;
  #L29d66c.  v3:= (`android.graphics.Bitmap$CompressFormat`) v3 @kind object;
  #L29d670.  if v3 == 0 then goto L29d676;
  #L29d674.  return v3 @kind object;
  #L29d676.  call temp:= `hasAlpha`(v2) @signature `Landroid/graphics/Bitmap;.hasAlpha:()Z` @kind virtual;
  #L29d67c.  v2:= temp;
  #L29d67e.  if v2 == 0 then goto L29d688;
  #L29d682.  v2:= `@@android.graphics.Bitmap$CompressFormat.PNG` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L29d686.  return v2 @kind object;
  #L29d688.  v2:= `@@android.graphics.Bitmap$CompressFormat.JPEG` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L29d68c.  return v2 @kind object;
}
procedure `boolean` `encode`(`com.bumptech.glide.load.resource.bitmap.c` v8 @kind this, `com.bumptech.glide.load.engine.u` v9 @kind object, `java.io.File` v10 @kind object, `com.bumptech.glide.load.h` v11 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/c;.encode:(Lcom/bumptech/glide/load/engine/u;Ljava/io/File;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L29d6a0.  v0:= "BitmapEncoder" @kind object;
  #L29d6a4.  call temp:= `get`(v9) @signature `Lcom/bumptech/glide/load/engine/u;.get:()Ljava/lang/Object;` @kind interface;
  #L29d6aa.  v9:= temp @kind object;
  #L29d6ac.  v9:= (`android.graphics.Bitmap`) v9 @kind object;
  #L29d6b0.  call temp:= `a`(v8, v9, v11) @signature `Lcom/bumptech/glide/load/resource/bitmap/c;.a:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/h;)Landroid/graphics/Bitmap$CompressFormat;` @kind direct;
  #L29d6b6.  v1:= temp @kind object;
  #L29d6b8.  call temp:= `getWidth`(v9) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L29d6be.  v2:= temp;
  #L29d6c0.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L29d6c6.  v2:= temp @kind object;
  #L29d6c8.  call temp:= `getHeight`(v9) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L29d6ce.  v3:= temp;
  #L29d6d0.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L29d6d6.  v3:= temp @kind object;
  #L29d6d8.  v4:= "encode: [%dx%d] %s" @kind object;
  #L29d6dc.  call `beginSectionFormat`(v4, v2, v3, v1) @signature `Lcom/bumptech/glide/s/l/b;.beginSectionFormat:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L29d6e2.  call temp:= `getLogTime`() @signature `Lcom/bumptech/glide/s/f;.getLogTime:()J` @kind static;
  #L29d6e8.  v2:= temp @kind wide;
  #L29d6ea.  v4:= `@@com.bumptech.glide.load.resource.bitmap.c.b` @type ^`com.bumptech.glide.load.g` @kind object;
  #L29d6ee.  call temp:= `get`(v11, v4) @signature `Lcom/bumptech/glide/load/h;.get:(Lcom/bumptech/glide/load/g;)Ljava/lang/Object;` @kind virtual;
  #L29d6f4.  v4:= temp @kind object;
  #L29d6f6.  v4:= (`java.lang.Integer`) v4 @kind object;
  #L29d6fa.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L29d700.  v4:= temp;
  #L29d702.  v5:= 0I;
  #L29d704.  v6:= 0I;
  #L29d706.  v7:= new `java.io.FileOutputStream`;
  #L29d70a.  call `<init>`(v7, v10) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L29d710.  v10:= v8.`com.bumptech.glide.load.resource.bitmap.c.a` @type ^`com.bumptech.glide.load.engine.z.b` @kind object;
  #L29d714.  if v10 == 0 then goto L29d72a;
  #L29d718.  v10:= new `com.bumptech.glide.load.m.c`;
  #L29d71c.  v6:= v8.`com.bumptech.glide.load.resource.bitmap.c.a` @type ^`com.bumptech.glide.load.engine.z.b` @kind object;
  #L29d720.  call `<init>`(v10, v7, v6) @signature `Lcom/bumptech/glide/load/m/c;.<init>:(Ljava/io/OutputStream;Lcom/bumptech/glide/load/engine/z/b;)V` @kind direct;
  #L29d726.  v6:= v10 @kind object;
  #L29d728.  goto L29d72c;
  #L29d72a.  v6:= v7 @kind object;
  #L29d72c.  call temp:= `compress`(v9, v1, v4, v6) @signature `Landroid/graphics/Bitmap;.compress:(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z` @kind virtual;
  #L29d732.  call `close`(v6) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L29d738.  v5:= 1I;
  #L29d73a.  call `close`(v6) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L29d740.  goto L29d772;
  #L29d742.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L29d744.  v6:= v7 @kind object;
  #L29d746.  goto L29d814;
  #L29d748.  v10:= Exception @type ^`java.io.IOException` @kind object;
  #L29d74a.  v6:= v7 @kind object;
  #L29d74c.  goto L29d754;
  #L29d74e.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L29d750.  goto L29d814;
  #L29d752.  v10:= Exception @type ^`java.io.IOException` @kind object;
  #L29d754.  v4:= 3I;
  #L29d756.  call temp:= `isLoggable`(v0, v4) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L29d75c.  v4:= temp;
  #L29d75e.  if v4 == 0 then goto L29d76c;
  #L29d762.  v4:= "Failed to encode Bitmap" @kind object;
  #L29d766.  call temp:= `d`(v0, v4, v10) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L29d76c.  if v6 == 0 then goto L29d772;
  #L29d770.  goto L29d73a;
  #L29d772.  v10:= 2I;
  #L29d774.  call temp:= `isLoggable`(v0, v10) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L29d77a.  v10:= temp;
  #L29d77c.  if v10 == 0 then goto L29d80c;
  #L29d780.  v10:= new `java.lang.StringBuilder`;
  #L29d784.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29d78a.  v4:= "Compressed with type: " @kind object;
  #L29d78e.  call temp:= `append`(v10, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29d794.  call temp:= `append`(v10, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29d79a.  v1:= " of size " @kind object;
  #L29d79e.  call temp:= `append`(v10, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29d7a4.  call temp:= `getBitmapByteSize`(v9) @signature `Lcom/bumptech/glide/s/k;.getBitmapByteSize:(Landroid/graphics/Bitmap;)I` @kind static;
  #L29d7aa.  v1:= temp;
  #L29d7ac.  call temp:= `append`(v10, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29d7b2.  v1:= " in " @kind object;
  #L29d7b6.  call temp:= `append`(v10, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29d7bc.  call temp:= `getElapsedMillis`(v2) @signature `Lcom/bumptech/glide/s/f;.getElapsedMillis:(J)D` @kind static;
  #L29d7c2.  v1:= temp @kind wide;
  #L29d7c4.  call temp:= `append`(v10, v1) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L29d7ca.  v1:= ", options format: " @kind object;
  #L29d7ce.  call temp:= `append`(v10, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29d7d4.  v1:= `@@com.bumptech.glide.load.resource.bitmap.c.c` @type ^`com.bumptech.glide.load.g` @kind object;
  #L29d7d8.  call temp:= `get`(v11, v1) @signature `Lcom/bumptech/glide/load/h;.get:(Lcom/bumptech/glide/load/g;)Ljava/lang/Object;` @kind virtual;
  #L29d7de.  v11:= temp @kind object;
  #L29d7e0.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29d7e6.  v11:= ", hasAlpha: " @kind object;
  #L29d7ea.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29d7f0.  call temp:= `hasAlpha`(v9) @signature `Landroid/graphics/Bitmap;.hasAlpha:()Z` @kind virtual;
  #L29d7f6.  v9:= temp;
  #L29d7f8.  call temp:= `append`(v10, v9) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L29d7fe.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L29d804.  v9:= temp @kind object;
  #L29d806.  call temp:= `v`(v0, v9) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L29d80c.  call `endSection`() @signature `Lcom/bumptech/glide/s/l/b;.endSection:()V` @kind static;
  #L29d812.  return v5;
  #L29d814.  if v6 == 0 then goto L29d81e;
  #L29d818.  call `close`(v6) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L29d81e.  throw v9;
  #L29d820.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L29d822.  call `endSection`() @signature `Lcom/bumptech/glide/s/l/b;.endSection:()V` @kind static;
  #L29d828.  throw v9;
  catch `java.lang.Throwable` @[L29d6e2..L29d702] goto L29d820;
  catch `java.io.IOException` @[L29d706..L29d710] goto L29d752;
  catch `java.lang.Throwable` @[L29d706..L29d710] goto L29d74e;
  catch `java.io.IOException` @[L29d710..L29d726] goto L29d748;
  catch `java.lang.Throwable` @[L29d710..L29d726] goto L29d742;
  catch `java.io.IOException` @[L29d72c..L29d738] goto L29d752;
  catch `java.lang.Throwable` @[L29d72c..L29d738] goto L29d74e;
  catch `java.io.IOException` @[L29d73a..L29d740] goto L29d772;
  catch `java.lang.Throwable` @[L29d73a..L29d740] goto L29d820;
  catch `java.lang.Throwable` @[L29d756..L29d76c] goto L29d74e;
  catch `java.lang.Throwable` @[L29d774..L29d80c] goto L29d820;
  catch `java.io.IOException` @[L29d818..L29d81e] goto L29d81e;
  catch `java.lang.Throwable` @[L29d818..L29d81e] goto L29d820;
  catch `java.lang.Throwable` @[L29d81e..L29d820] goto L29d820;
}
procedure `boolean` `encode`(`com.bumptech.glide.load.resource.bitmap.c` v0 @kind this, `java.lang.Object` v1 @kind object, `java.io.File` v2 @kind object, `com.bumptech.glide.load.h` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/c;.encode:(Ljava/lang/Object;Ljava/io/File;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L29d8a4.  v1:= (`com.bumptech.glide.load.engine.u`) v1 @kind object;
  #L29d8a8.  call temp:= `encode`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/load/resource/bitmap/c;.encode:(Lcom/bumptech/glide/load/engine/u;Ljava/io/File;Lcom/bumptech/glide/load/h;)Z` @kind virtual;
  #L29d8ae.  v1:= temp;
  #L29d8b0.  return v1;
}
procedure `com.bumptech.glide.load.c` `getEncodeStrategy`(`com.bumptech.glide.load.resource.bitmap.c` v0 @kind this, `com.bumptech.glide.load.h` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/c;.getEncodeStrategy:(Lcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/c;` @AccessFlag PUBLIC {
    temp;

  #L29d8c4.  v1:= `@@com.bumptech.glide.load.c.g` @type ^`com.bumptech.glide.load.c` @kind object;
  #L29d8c8.  return v1 @kind object;
}
