record `com.bumptech.glide.load.resource.bitmap.r$b` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.resource.bitmap.r` @kind interface {
  `com.bumptech.glide.load.engine.z.b` `com.bumptech.glide.load.resource.bitmap.r$b.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.load.resource.bitmap.r$b.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.m.m` `com.bumptech.glide.load.resource.bitmap.r$b.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.r$b` v0 @kind this, `android.os.ParcelFileDescriptor` v1 @kind object, `java.util.List` v2 @kind object, `com.bumptech.glide.load.engine.z.b` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/r$b;.<init>:(Landroid/os/ParcelFileDescriptor;Ljava/util/List;Lcom/bumptech/glide/load/engine/z/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2a09a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a09ae.  call temp:= `checkNotNull`(v3) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2a09b4.  v3:= (`com.bumptech.glide.load.engine.z.b`) v3 @kind object;
  #L2a09b8.  v0.`com.bumptech.glide.load.resource.bitmap.r$b.a` @type ^`com.bumptech.glide.load.engine.z.b` := v3 @kind object;
  #L2a09bc.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2a09c2.  v2:= (`java.util.List`) v2 @kind object;
  #L2a09c6.  v0.`com.bumptech.glide.load.resource.bitmap.r$b.b` @type ^`java.util.List` := v2 @kind object;
  #L2a09ca.  v2:= new `com.bumptech.glide.load.m.m`;
  #L2a09ce.  call `<init>`(v2, v1) @signature `Lcom/bumptech/glide/load/m/m;.<init>:(Landroid/os/ParcelFileDescriptor;)V` @kind direct;
  #L2a09d4.  v0.`com.bumptech.glide.load.resource.bitmap.r$b.c` @type ^`com.bumptech.glide.load.m.m` := v2 @kind object;
  #L2a09d8.  return @kind void;
}
procedure `android.graphics.Bitmap` `decodeBitmap`(`com.bumptech.glide.load.resource.bitmap.r$b` v2 @kind this, `android.graphics.BitmapFactory$Options` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/r$b;.decodeBitmap:(Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a0928.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.r$b.c` @type ^`com.bumptech.glide.load.m.m` @kind object;
  #L2a092c.  call temp:= `rewindAndGet`(v0) @signature `Lcom/bumptech/glide/load/m/m;.rewindAndGet:()Landroid/os/ParcelFileDescriptor;` @kind virtual;
  #L2a0932.  v0:= temp @kind object;
  #L2a0934.  call temp:= `getFileDescriptor`(v0) @signature `Landroid/os/ParcelFileDescriptor;.getFileDescriptor:()Ljava/io/FileDescriptor;` @kind virtual;
  #L2a093a.  v0:= temp @kind object;
  #L2a093c.  v1:= 0I;
  #L2a093e.  call temp:= `decodeFileDescriptor`(v0, v1, v3) @signature `Landroid/graphics/BitmapFactory;.decodeFileDescriptor:(Ljava/io/FileDescriptor;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L2a0944.  v3:= temp @kind object;
  #L2a0946.  return v3 @kind object;
}
procedure `int` `getImageOrientation`(`com.bumptech.glide.load.resource.bitmap.r$b` v3 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/r$b;.getImageOrientation:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a0980.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.r$b.b` @type ^`java.util.List` @kind object;
  #L2a0984.  v1:= v3.`com.bumptech.glide.load.resource.bitmap.r$b.c` @type ^`com.bumptech.glide.load.m.m` @kind object;
  #L2a0988.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.r$b.a` @type ^`com.bumptech.glide.load.engine.z.b` @kind object;
  #L2a098c.  call temp:= `getOrientation`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/e;.getOrientation:(Ljava/util/List;Lcom/bumptech/glide/load/m/m;Lcom/bumptech/glide/load/engine/z/b;)I` @kind static;
  #L2a0992.  v0:= temp;
  #L2a0994.  return v0;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `getImageType`(`com.bumptech.glide.load.resource.bitmap.r$b` v3 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/r$b;.getImageType:()Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a0958.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.r$b.b` @type ^`java.util.List` @kind object;
  #L2a095c.  v1:= v3.`com.bumptech.glide.load.resource.bitmap.r$b.c` @type ^`com.bumptech.glide.load.m.m` @kind object;
  #L2a0960.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.r$b.a` @type ^`com.bumptech.glide.load.engine.z.b` @kind object;
  #L2a0964.  call temp:= `getType`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/e;.getType:(Ljava/util/List;Lcom/bumptech/glide/load/m/m;Lcom/bumptech/glide/load/engine/z/b;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @kind static;
  #L2a096a.  v0:= temp @kind object;
  #L2a096c.  return v0 @kind object;
}
procedure `void` `stopGrowingBuffers`(`com.bumptech.glide.load.resource.bitmap.r$b` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/r$b;.stopGrowingBuffers:()V` @AccessFlag PUBLIC {
    temp;

  #L2a09ec.  return @kind void;
}
