record `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.ImageHeaderParser` @kind interface {
}
global `byte`[] `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.a` @AccessFlag STATIC_FINAL;
global `int`[] `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L29e9bc.  v0:= "UTF-8" @kind object;
  #L29e9c0.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L29e9c6.  v0:= temp @kind object;
  #L29e9c8.  v1:= "Exif\u0000\u0000" @kind object;
  #L29e9cc.  call temp:= `getBytes`(v1, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L29e9d2.  v0:= temp @kind object;
  #L29e9d4.  `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.a` @type ^`byte`[] := v0 @kind object;
  #L29e9d8.  v0:= 13I;
  #L29e9dc.  v0:= new `int`[v0];
  #L29e9e0.  goto L29e9ec;
  #L29e9e6.  `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.b` @type ^`int`[] := v0 @kind object;
  #L29e9ea.  return @kind void;
  #L29e9ec.  v0:= (0I, 1I, 1I, 2I, 4I, 8I, 1I, 1I, 2I, 4I, 8I, 4I, 8I) @kind object;
  #L29ea27.  goto L29e9e6;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L29ea38.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29ea3e.  return @kind void;
}
procedure `int` `a`(`int` v0 , `int` v1 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.a:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L29e444.  v0:= v0 + 2;
  #L29e448.  v1:= v1 * 12;
  #L29e44c.  v0:= v0 + v1 @kind int;
  #L29e44e.  return v0;
}
procedure `int` `a`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v5 @kind this, `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader` v6 @kind object, `com.bumptech.glide.load.engine.z.b` v7 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.a:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;Lcom/bumptech/glide/load/engine/z/b;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L29e460.  v0:= -1I;
  #L29e462.  call temp:= `getUInt16`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt16:()I` @kind interface;
  #L29e468.  v1:= temp;
  #L29e46a.  call temp:= `a`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.a:(I)Z` @kind static;
  #L29e470.  v2:= temp;
  #L29e472.  v3:= 3I;
  #L29e474.  v4:= "DfltImageHeaderParser" @kind object;
  #L29e478.  if v2 != 0 then goto L29e4b2;
  #L29e47c.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L29e482.  v6:= temp;
  #L29e484.  if v6 == 0 then goto L29e4b0;
  #L29e488.  v6:= new `java.lang.StringBuilder`;
  #L29e48c.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29e492.  v7:= "Parser doesn't handle magic number: " @kind object;
  #L29e496.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e49c.  call temp:= `append`(v6, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e4a2.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L29e4a8.  v6:= temp @kind object;
  #L29e4aa.  call temp:= `d`(v4, v6) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L29e4b0.  return v0;
  #L29e4b2.  call temp:= `b`(v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.b:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;)I` @kind direct;
  #L29e4b8.  v1:= temp;
  #L29e4ba.  if v1 != v0 then goto L29e4d6;
  #L29e4be.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L29e4c4.  v6:= temp;
  #L29e4c6.  if v6 == 0 then goto L29e4d4;
  #L29e4ca.  v6:= "Failed to parse exif segment length, or exif segment not found" @kind object;
  #L29e4ce.  call temp:= `d`(v4, v6) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L29e4d4.  return v0;
  #L29e4d6.  v2:= constclass @type ^`byte`[] @kind object;
  #L29e4da.  call temp:= `get`(v7, v1, v2) @signature `Lcom/bumptech/glide/load/engine/z/b;.get:(ILjava/lang/Class;)Ljava/lang/Object;` @kind interface;
  #L29e4e0.  v2:= temp @kind object;
  #L29e4e2.  v2:= (`byte`[]) v2 @kind object;
  #L29e4e6.  call temp:= `a`(v5, v6, v2, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.a:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;[BI)I` @kind direct;
  #L29e4ec.  v6:= temp;
  #L29e4ee.  call `put`(v7, v2) @signature `Lcom/bumptech/glide/load/engine/z/b;.put:(Ljava/lang/Object;)V` @kind interface;
  #L29e4f4.  return v6;
  #L29e4f6.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L29e4f8.  call `put`(v7, v2) @signature `Lcom/bumptech/glide/load/engine/z/b;.put:(Ljava/lang/Object;)V` @kind interface;
  #L29e4fe.  throw v6;
  #L29e500.  return v0;
  catch `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException` @[L29e462..L29e472] goto L29e500;
  catch `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException` @[L29e47c..L29e4e6] goto L29e500;
  catch `java.lang.Throwable` @[L29e4e6..L29e4ee] goto L29e4f6;
  catch `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException` @[L29e4ee..L29e500] goto L29e500;
}
procedure `int` `a`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v3 @kind this, `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader` v4 @kind object, `byte`[] v5 @kind object, `int` v6 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.a:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;[BI)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L29e918.  call temp:= `read`(v4, v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.read:([BI)I` @kind interface;
  #L29e91e.  v4:= temp;
  #L29e920.  v0:= -1I;
  #L29e922.  v1:= 3I;
  #L29e924.  v2:= "DfltImageHeaderParser" @kind object;
  #L29e928.  if v4 == v6 then goto L29e972;
  #L29e92c.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L29e932.  v5:= temp;
  #L29e934.  if v5 == 0 then goto L29e970;
  #L29e938.  v5:= new `java.lang.StringBuilder`;
  #L29e93c.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29e942.  v1:= "Unable to read exif segment data, length: " @kind object;
  #L29e946.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e94c.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e952.  v6:= ", actually read: " @kind object;
  #L29e956.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e95c.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e962.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L29e968.  v4:= temp @kind object;
  #L29e96a.  call temp:= `d`(v2, v4) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L29e970.  return v0;
  #L29e972.  call temp:= `a`(v3, v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.a:([BI)Z` @kind direct;
  #L29e978.  v4:= temp;
  #L29e97a.  if v4 == 0 then goto L29e992;
  #L29e97e.  v4:= new `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b`;
  #L29e982.  call `<init>`(v4, v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.<init>:([BI)V` @kind direct;
  #L29e988.  call temp:= `a`(v4) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.a:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;)I` @kind static;
  #L29e98e.  v4:= temp;
  #L29e990.  return v4;
  #L29e992.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L29e998.  v4:= temp;
  #L29e99a.  if v4 == 0 then goto L29e9a8;
  #L29e99e.  v4:= "Missing jpeg exif preamble" @kind object;
  #L29e9a2.  call temp:= `d`(v2, v4) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L29e9a8.  return v0;
}
procedure `int` `a`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b` v12 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.a:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L29e684.  v0:= 6I;
  #L29e686.  call temp:= `a`(v12, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(I)S` @kind virtual;
  #L29e68c.  v1:= temp;
  #L29e68e.  v2:= 18761I;
  #L29e692.  v3:= 3I;
  #L29e694.  v4:= "DfltImageHeaderParser" @kind object;
  #L29e698.  if v1 == v2 then goto L29e6e4;
  #L29e69c.  v2:= 19789I;
  #L29e6a0.  if v1 == v2 then goto L29e6de;
  #L29e6a4.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L29e6aa.  v2:= temp;
  #L29e6ac.  if v2 == 0 then goto L29e6d8;
  #L29e6b0.  v2:= new `java.lang.StringBuilder`;
  #L29e6b4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29e6ba.  v5:= "Unknown endianness = " @kind object;
  #L29e6be.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e6c4.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e6ca.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L29e6d0.  v1:= temp @kind object;
  #L29e6d2.  call temp:= `d`(v4, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L29e6d8.  v1:= `@@java.nio.ByteOrder.BIG_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L29e6dc.  goto L29e6e8;
  #L29e6de.  v1:= `@@java.nio.ByteOrder.BIG_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L29e6e2.  goto L29e6e8;
  #L29e6e4.  v1:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L29e6e8.  call `a`(v12, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(Ljava/nio/ByteOrder;)V` @kind virtual;
  #L29e6ee.  v1:= 10I;
  #L29e6f2.  call temp:= `b`(v12, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.b:(I)I` @kind virtual;
  #L29e6f8.  v1:= temp;
  #L29e6fa.  v1:= v1 + v0 @kind int;
  #L29e6fc.  call temp:= `a`(v12, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(I)S` @kind virtual;
  #L29e702.  v0:= temp;
  #L29e704.  v2:= 0I;
  #L29e706.  if v2 >= v0 then goto L29e902;
  #L29e70a.  call temp:= `a`(v1, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.a:(II)I` @kind static;
  #L29e710.  v5:= temp;
  #L29e712.  call temp:= `a`(v12, v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(I)S` @kind virtual;
  #L29e718.  v6:= temp;
  #L29e71a.  v7:= 274I;
  #L29e71e.  if v6 == v7 then goto L29e726;
  #L29e722.  goto L29e8fa;
  #L29e726.  v7:= v5 + 2;
  #L29e72a.  call temp:= `a`(v12, v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(I)S` @kind virtual;
  #L29e730.  v7:= temp;
  #L29e732.  v8:= 1I;
  #L29e734.  if v7 < v8 then goto L29e8c6;
  #L29e738.  v8:= 12I;
  #L29e73c.  if v7 <= v8 then goto L29e744;
  #L29e740.  goto L29e8c6;
  #L29e744.  v8:= v5 + 4;
  #L29e748.  call temp:= `b`(v12, v8) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.b:(I)I` @kind virtual;
  #L29e74e.  v8:= temp;
  #L29e750.  if v8 >= 0 then goto L29e76e;
  #L29e754.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L29e75a.  v5:= temp;
  #L29e75c.  if v5 == 0 then goto L29e8fa;
  #L29e760.  v5:= "Negative tiff component count" @kind object;
  #L29e764.  call temp:= `d`(v4, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L29e76a.  goto L29e8fa;
  #L29e76e.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L29e774.  v9:= temp;
  #L29e776.  v10:= " tagType=" @kind object;
  #L29e77a.  if v9 == 0 then goto L29e7d2;
  #L29e77e.  v9:= new `java.lang.StringBuilder`;
  #L29e782.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29e788.  v11:= "Got tagIndex=" @kind object;
  #L29e78c.  call temp:= `append`(v9, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e792.  call temp:= `append`(v9, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e798.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e79e.  call temp:= `append`(v9, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e7a4.  v11:= " formatCode=" @kind object;
  #L29e7a8.  call temp:= `append`(v9, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e7ae.  call temp:= `append`(v9, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e7b4.  v11:= " componentCount=" @kind object;
  #L29e7b8.  call temp:= `append`(v9, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e7be.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e7c4.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L29e7ca.  v9:= temp @kind object;
  #L29e7cc.  call temp:= `d`(v4, v9) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L29e7d2.  v9:= `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.b` @type ^`int`[] @kind object;
  #L29e7d6.  v9:= v9[v7];
  #L29e7da.  v8:= v8 + v9 @kind int;
  #L29e7dc.  v9:= 4I;
  #L29e7de.  if v8 <= v9 then goto L29e81a;
  #L29e7e2.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L29e7e8.  v5:= temp;
  #L29e7ea.  if v5 == 0 then goto L29e8fa;
  #L29e7ee.  v5:= new `java.lang.StringBuilder`;
  #L29e7f2.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29e7f8.  v6:= "Got byte count > 4, not orientation, continuing, formatCode=" @kind object;
  #L29e7fc.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e802.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e808.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L29e80e.  v5:= temp @kind object;
  #L29e810.  call temp:= `d`(v4, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L29e816.  goto L29e8fa;
  #L29e81a.  v5:= v5 + 8;
  #L29e81e.  if v5 < 0 then goto L29e884;
  #L29e822.  call temp:= `a`(v12) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:()I` @kind virtual;
  #L29e828.  v7:= temp;
  #L29e82a.  if v5 <= v7 then goto L29e830;
  #L29e82e.  goto L29e884;
  #L29e830.  if v8 < 0 then goto L29e84e;
  #L29e834.  v8:= v8 + v5 @kind int;
  #L29e836.  call temp:= `a`(v12) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:()I` @kind virtual;
  #L29e83c.  v7:= temp;
  #L29e83e.  if v8 <= v7 then goto L29e844;
  #L29e842.  goto L29e84e;
  #L29e844.  call temp:= `a`(v12, v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(I)S` @kind virtual;
  #L29e84a.  v12:= temp;
  #L29e84c.  return v12;
  #L29e84e.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L29e854.  v5:= temp;
  #L29e856.  if v5 == 0 then goto L29e8fa;
  #L29e85a.  v5:= new `java.lang.StringBuilder`;
  #L29e85e.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29e864.  v7:= "Illegal number of bytes for TI tag data tagType=" @kind object;
  #L29e868.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e86e.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e874.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L29e87a.  v5:= temp @kind object;
  #L29e87c.  call temp:= `d`(v4, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L29e882.  goto L29e8fa;
  #L29e884.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L29e88a.  v7:= temp;
  #L29e88c.  if v7 == 0 then goto L29e8fa;
  #L29e890.  v7:= new `java.lang.StringBuilder`;
  #L29e894.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29e89a.  v8:= "Illegal tagValueOffset=" @kind object;
  #L29e89e.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e8a4.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e8aa.  call temp:= `append`(v7, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e8b0.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e8b6.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L29e8bc.  v5:= temp @kind object;
  #L29e8be.  call temp:= `d`(v4, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L29e8c4.  goto L29e8fa;
  #L29e8c6.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L29e8cc.  v5:= temp;
  #L29e8ce.  if v5 == 0 then goto L29e8fa;
  #L29e8d2.  v5:= new `java.lang.StringBuilder`;
  #L29e8d6.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29e8dc.  v6:= "Got invalid format code = " @kind object;
  #L29e8e0.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e8e6.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e8ec.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L29e8f2.  v5:= temp @kind object;
  #L29e8f4.  call temp:= `d`(v4, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L29e8fa.  v2:= v2 + 1;
  #L29e8fe.  goto L29e706;
  #L29e902.  v12:= -1I;
  #L29e904.  return v12;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `a`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v5 @kind this, `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader` v6 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.a:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L29e268.  call temp:= `getUInt16`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt16:()I` @kind interface;
  #L29e26e.  v0:= temp;
  #L29e270.  v1:= 65496I;
  #L29e276.  if v0 != v1 then goto L29e280;
  #L29e27a.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.JPEG` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L29e27e.  return v6 @kind object;
  #L29e280.  v0:= v0 ^< 8;
  #L29e284.  call temp:= `getUInt8`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt8:()S` @kind interface;
  #L29e28a.  v1:= temp;
  #L29e28c.  v0:= v0 ^| v1 @kind int;
  #L29e28e.  v1:= 4671814I;
  #L29e294.  if v0 != v1 then goto L29e29e;
  #L29e298.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.GIF` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L29e29c.  return v6 @kind object;
  #L29e29e.  v0:= v0 ^< 8;
  #L29e2a2.  call temp:= `getUInt8`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt8:()S` @kind interface;
  #L29e2a8.  v1:= temp;
  #L29e2aa.  v0:= v0 ^| v1 @kind int;
  #L29e2ac.  v1:= -1991225785I;
  #L29e2b2.  if v0 != v1 then goto L29e2e0;
  #L29e2b6.  v0:= 21L;
  #L29e2ba.  call temp:= `skip`(v6, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.skip:(J)J` @kind interface;
  #L29e2c0.  call temp:= `getUInt8`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt8:()S` @kind interface;
  #L29e2c6.  v6:= temp;
  #L29e2c8.  v0:= 3I;
  #L29e2ca.  if v6 < v0 then goto L29e2d4;
  #L29e2ce.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG_A` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L29e2d2.  goto L29e2d8;
  #L29e2d4.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L29e2d8.  return v6 @kind object;
  #L29e2da.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L29e2de.  return v6 @kind object;
  #L29e2e0.  v1:= 1380533830I;
  #L29e2e6.  if v0 == v1 then goto L29e2f0;
  #L29e2ea.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L29e2ee.  return v6 @kind object;
  #L29e2f0.  v0:= 4L;
  #L29e2f4.  call temp:= `skip`(v6, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.skip:(J)J` @kind interface;
  #L29e2fa.  call temp:= `getUInt16`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt16:()I` @kind interface;
  #L29e300.  v2:= temp;
  #L29e302.  v2:= v2 ^< 16;
  #L29e306.  call temp:= `getUInt16`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt16:()I` @kind interface;
  #L29e30c.  v3:= temp;
  #L29e30e.  v2:= v2 ^| v3 @kind int;
  #L29e310.  v3:= 1464156752I;
  #L29e316.  if v2 == v3 then goto L29e320;
  #L29e31a.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L29e31e.  return v6 @kind object;
  #L29e320.  call temp:= `getUInt16`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt16:()I` @kind interface;
  #L29e326.  v2:= temp;
  #L29e328.  v2:= v2 ^< 16;
  #L29e32c.  call temp:= `getUInt16`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt16:()I` @kind interface;
  #L29e332.  v3:= temp;
  #L29e334.  v2:= v2 ^| v3 @kind int;
  #L29e336.  v3:= v2 ^& -256;
  #L29e33a.  v4:= 1448097792I;
  #L29e340.  if v3 == v4 then goto L29e34a;
  #L29e344.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L29e348.  return v6 @kind object;
  #L29e34a.  v2:= v2 ^& 255;
  #L29e34e.  v3:= 88I;
  #L29e352.  if v2 != v3 then goto L29e378;
  #L29e356.  call temp:= `skip`(v6, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.skip:(J)J` @kind interface;
  #L29e35c.  call temp:= `getUInt8`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt8:()S` @kind interface;
  #L29e362.  v6:= temp;
  #L29e364.  v6:= v6 ^& 16;
  #L29e368.  if v6 == 0 then goto L29e372;
  #L29e36c.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP_A` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L29e370.  goto L29e376;
  #L29e372.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L29e376.  return v6 @kind object;
  #L29e378.  v3:= 76I;
  #L29e37c.  if v2 != v3 then goto L29e3a2;
  #L29e380.  call temp:= `skip`(v6, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.skip:(J)J` @kind interface;
  #L29e386.  call temp:= `getUInt8`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt8:()S` @kind interface;
  #L29e38c.  v6:= temp;
  #L29e38e.  v6:= v6 ^& 8;
  #L29e392.  if v6 == 0 then goto L29e39c;
  #L29e396.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP_A` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L29e39a.  goto L29e3a0;
  #L29e39c.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L29e3a0.  return v6 @kind object;
  #L29e3a2.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L29e3a6.  return v6 @kind object;
  #L29e3a8.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L29e3ac.  return v6 @kind object;
  catch `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException` @[L29e268..L29e2c0] goto L29e3a8;
  catch `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException` @[L29e2c0..L29e2d8] goto L29e2da;
  catch `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException` @[L29e2da..L29e3a6] goto L29e3a8;
}
procedure `boolean` `a`(`int` v2 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.a:(I)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L29e1e0.  v0:= 65496I;
  #L29e1e6.  v1:= v2 ^& v0 @kind int;
  #L29e1ea.  if v1 == v0 then goto L29e204;
  #L29e1ee.  v0:= 19789I;
  #L29e1f2.  if v2 == v0 then goto L29e204;
  #L29e1f6.  v0:= 18761I;
  #L29e1fa.  if v2 != v0 then goto L29e200;
  #L29e1fe.  goto L29e204;
  #L29e200.  v2:= 0I;
  #L29e202.  goto L29e206;
  #L29e204.  v2:= 1I;
  #L29e206.  return v2;
}
procedure `boolean` `a`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v4 @kind this, `byte`[] v5 @kind object, `int` v6 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.a:([BI)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L29e218.  v0:= 0I;
  #L29e21a.  if v5 == 0 then goto L29e22c;
  #L29e21e.  v1:= `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.a` @type ^`byte`[] @kind object;
  #L29e222.  v1:= length @variable v1;
  #L29e224.  if v6 <= v1 then goto L29e22c;
  #L29e228.  v6:= 1I;
  #L29e22a.  goto L29e22e;
  #L29e22c.  v6:= 0I;
  #L29e22e.  if v6 == 0 then goto L29e254;
  #L29e232.  v1:= 0I;
  #L29e234.  v2:= `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.a` @type ^`byte`[] @kind object;
  #L29e238.  v3:= length @variable v2;
  #L29e23a.  if v1 >= v3 then goto L29e254;
  #L29e23e.  v3:= v5[v1] @kind byte;
  #L29e242.  v2:= v2[v1] @kind byte;
  #L29e246.  if v3 == v2 then goto L29e24e;
  #L29e24a.  v6:= 0I;
  #L29e24c.  goto L29e254;
  #L29e24e.  v1:= v1 + 1;
  #L29e252.  goto L29e234;
  #L29e254.  return v6;
}
procedure `int` `b`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v10 @kind this, `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader` v11 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.b:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L29e574.  call temp:= `getUInt8`(v11) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt8:()S` @kind interface;
  #L29e57a.  v0:= temp;
  #L29e57c.  v1:= 255I;
  #L29e580.  v2:= 3I;
  #L29e582.  v3:= -1I;
  #L29e584.  v4:= "DfltImageHeaderParser" @kind object;
  #L29e588.  if v0 == v1 then goto L29e5c2;
  #L29e58c.  call temp:= `isLoggable`(v4, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L29e592.  v11:= temp;
  #L29e594.  if v11 == 0 then goto L29e5c0;
  #L29e598.  v11:= new `java.lang.StringBuilder`;
  #L29e59c.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29e5a2.  v1:= "Unknown segmentId=" @kind object;
  #L29e5a6.  call temp:= `append`(v11, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e5ac.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e5b2.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L29e5b8.  v11:= temp @kind object;
  #L29e5ba.  call temp:= `d`(v4, v11) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L29e5c0.  return v3;
  #L29e5c2.  call temp:= `getUInt8`(v11) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt8:()S` @kind interface;
  #L29e5c8.  v0:= temp;
  #L29e5ca.  v1:= 218I;
  #L29e5ce.  if v0 != v1 then goto L29e5d4;
  #L29e5d2.  return v3;
  #L29e5d4.  v1:= 217I;
  #L29e5d8.  if v0 != v1 then goto L29e5f4;
  #L29e5dc.  call temp:= `isLoggable`(v4, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L29e5e2.  v11:= temp;
  #L29e5e4.  if v11 == 0 then goto L29e5f2;
  #L29e5e8.  v11:= "Found MARKER_EOI in exif segment" @kind object;
  #L29e5ec.  call temp:= `d`(v4, v11) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L29e5f2.  return v3;
  #L29e5f4.  call temp:= `getUInt16`(v11) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt16:()I` @kind interface;
  #L29e5fa.  v1:= temp;
  #L29e5fc.  v1:= v1 + -2;
  #L29e600.  v5:= 225I;
  #L29e604.  if v0 == v5 then goto L29e670;
  #L29e608.  v5:= (`long`) v1 @kind i2l;
  #L29e60a.  call temp:= `skip`(v11, v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.skip:(J)J` @kind interface;
  #L29e610.  v7:= temp @kind wide;
  #L29e612.  v9:= lcmp(v7, v5);
  #L29e616.  if v9 == 0 then goto L29e574;
  #L29e61a.  call temp:= `isLoggable`(v4, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L29e620.  v11:= temp;
  #L29e622.  if v11 == 0 then goto L29e66e;
  #L29e626.  v11:= new `java.lang.StringBuilder`;
  #L29e62a.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29e630.  v2:= "Unable to skip enough data, type: " @kind object;
  #L29e634.  call temp:= `append`(v11, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e63a.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e640.  v0:= ", wanted to skip: " @kind object;
  #L29e644.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e64a.  call temp:= `append`(v11, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e650.  v0:= ", but actually skipped: " @kind object;
  #L29e654.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e65a.  call temp:= `append`(v11, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e660.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L29e666.  v11:= temp @kind object;
  #L29e668.  call temp:= `d`(v4, v11) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L29e66e.  return v3;
  #L29e670.  return v1;
}
procedure `int` `getOrientation`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v1 @kind this, `java.io.InputStream` v2 @kind object, `com.bumptech.glide.load.engine.z.b` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.getOrientation:(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/z/b;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29e53c.  v0:= new `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c`;
  #L29e540.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L29e546.  v2:= (`java.io.InputStream`) v2 @kind object;
  #L29e54a.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$c;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L29e550.  call temp:= `checkNotNull`(v3) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L29e556.  v3:= (`com.bumptech.glide.load.engine.z.b`) v3 @kind object;
  #L29e55a.  call temp:= `a`(v1, v0, v3) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.a:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;Lcom/bumptech/glide/load/engine/z/b;)I` @kind direct;
  #L29e560.  v2:= temp;
  #L29e562.  return v2;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `getType`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v1 @kind this, `java.io.InputStream` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.getType:(Ljava/io/InputStream;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29e3e4.  v0:= new `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c`;
  #L29e3e8.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L29e3ee.  v2:= (`java.io.InputStream`) v2 @kind object;
  #L29e3f2.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$c;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L29e3f8.  call temp:= `a`(v1, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.a:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @kind direct;
  #L29e3fe.  v2:= temp @kind object;
  #L29e400.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `getType`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.getType:(Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29e414.  v0:= new `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$a`;
  #L29e418.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L29e41e.  v2:= (`java.nio.ByteBuffer`) v2 @kind object;
  #L29e422.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$a;.<init>:(Ljava/nio/ByteBuffer;)V` @kind direct;
  #L29e428.  call temp:= `a`(v1, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.a:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @kind direct;
  #L29e42e.  v2:= temp @kind object;
  #L29e430.  return v2 @kind object;
}
