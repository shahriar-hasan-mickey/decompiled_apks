record `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b` @kind class @AccessFlag FINAL {
  `java.nio.ByteBuffer` `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b` v1 @kind this, `byte`[] v2 @kind object, `int` v3 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.<init>:([BI)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L29e048.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29e04e.  call temp:= `wrap`(v2) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L29e054.  v2:= temp @kind object;
  #L29e056.  v0:= `@@java.nio.ByteOrder.BIG_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L29e05a.  call temp:= `order`(v2, v0) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L29e060.  v2:= temp @kind object;
  #L29e062.  call temp:= `limit`(v2, v3) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L29e068.  v2:= temp @kind object;
  #L29e06a.  v2:= (`java.nio.ByteBuffer`) v2 @kind object;
  #L29e06e.  v1.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b.a` @type ^`java.nio.ByteBuffer` := v2 @kind object;
  #L29e072.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(II)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L29df9c.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L29dfa0.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L29dfa6.  v0:= temp;
  #L29dfa8.  v0:= v0 - v2 @kind int;
  #L29dfaa.  if v0 < v3 then goto L29dfb2;
  #L29dfae.  v2:= 1I;
  #L29dfb0.  goto L29dfb4;
  #L29dfb2.  v2:= 0I;
  #L29dfb4.  return v2;
}
procedure `int` `a`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:()I` @AccessFlag  {
    temp;
    v0;

  #L29dff8.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L29dffc.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L29e002.  v0:= temp;
  #L29e004.  return v0;
}
procedure `short` `a`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(I)S` @AccessFlag  {
    temp;
    v0;

  #L29e018.  v0:= 2I;
  #L29e01a.  call temp:= `a`(v1, v2, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(II)Z` @kind direct;
  #L29e020.  v0:= temp;
  #L29e022.  if v0 == 0 then goto L29e034;
  #L29e026.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L29e02a.  call temp:= `getShort`(v0, v2) @signature `Ljava/nio/ByteBuffer;.getShort:(I)S` @kind virtual;
  #L29e030.  v2:= temp;
  #L29e032.  goto L29e036;
  #L29e034.  v2:= -1I;
  #L29e036.  return v2;
}
procedure `void` `a`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b` v1 @kind this, `java.nio.ByteOrder` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(Ljava/nio/ByteOrder;)V` @AccessFlag  {
    temp;
    v0;

  #L29e084.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L29e088.  call temp:= `order`(v0, v2) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L29e08e.  return @kind void;
}
procedure `int` `b`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.b:(I)I` @AccessFlag  {
    temp;
    v0;

  #L29dfc8.  v0:= 4I;
  #L29dfca.  call temp:= `a`(v1, v2, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(II)Z` @kind direct;
  #L29dfd0.  v0:= temp;
  #L29dfd2.  if v0 == 0 then goto L29dfe4;
  #L29dfd6.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L29dfda.  call temp:= `getInt`(v0, v2) @signature `Ljava/nio/ByteBuffer;.getInt:(I)I` @kind virtual;
  #L29dfe0.  v2:= temp;
  #L29dfe2.  goto L29dfe6;
  #L29dfe4.  v2:= -1I;
  #L29dfe6.  return v2;
}
