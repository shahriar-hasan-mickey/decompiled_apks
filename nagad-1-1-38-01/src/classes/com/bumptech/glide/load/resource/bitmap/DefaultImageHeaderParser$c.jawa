record `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c` @kind class @AccessFlag FINAL extends `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader` @kind interface {
  `java.io.InputStream` `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c` v0 @kind this, `java.io.InputStream` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$c;.<init>:(Ljava/io/InputStream;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L29e1c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29e1ca.  v0.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c.a` @type ^`java.io.InputStream` := v1 @kind object;
  #L29e1ce.  return @kind void;
}
procedure `int` `getUInt16`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$c;.getUInt16:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L29e0bc.  call temp:= `getUInt8`(v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$c;.getUInt8:()S` @kind virtual;
  #L29e0c2.  v0:= temp;
  #L29e0c4.  v0:= v0 ^< 8;
  #L29e0c8.  call temp:= `getUInt8`(v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$c;.getUInt8:()S` @kind virtual;
  #L29e0ce.  v1:= temp;
  #L29e0d0.  v0:= v0 ^| v1 @kind int;
  #L29e0d2.  return v0;
}
procedure `short` `getUInt8`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$c;.getUInt8:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L29e190.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c.a` @type ^`java.io.InputStream` @kind object;
  #L29e194.  call temp:= `read`(v0) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L29e19a.  v0:= temp;
  #L29e19c.  v1:= -1I;
  #L29e19e.  if v0 == v1 then goto L29e1a6;
  #L29e1a2.  v0:= (`short`) v0 @kind i2s;
  #L29e1a4.  return v0;
  #L29e1a6.  v0:= new `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException`;
  #L29e1aa.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader$EndOfFileException;.<init>:()V` @kind direct;
  #L29e1b0.  throw v0;
}
procedure `int` `read`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c` v4 @kind this, `byte`[] v5 @kind object, `int` v6 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$c;.read:([BI)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L29e0e4.  v0:= 0I;
  #L29e0e6.  v1:= 0I;
  #L29e0e8.  v2:= -1I;
  #L29e0ea.  if v0 >= v6 then goto L29e106;
  #L29e0ee.  v1:= v4.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c.a` @type ^`java.io.InputStream` @kind object;
  #L29e0f2.  v3:= v6 - v0 @kind int;
  #L29e0f6.  call temp:= `read`(v1, v5, v0, v3) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L29e0fc.  v1:= temp;
  #L29e0fe.  if v1 == v2 then goto L29e106;
  #L29e102.  v0:= v0 + v1 @kind int;
  #L29e104.  goto L29e0e8;
  #L29e106.  if v0 != 0 then goto L29e11c;
  #L29e10a.  if v1 == v2 then goto L29e110;
  #L29e10e.  goto L29e11c;
  #L29e110.  v5:= new `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException`;
  #L29e114.  call `<init>`(v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader$EndOfFileException;.<init>:()V` @kind direct;
  #L29e11a.  throw v5;
  #L29e11c.  return v0;
}
procedure `long` `skip`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c` v7 @kind this, `long` v8 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$c;.skip:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L29e130.  v0:= 0L;
  #L29e134.  v2:= lcmp(v8, v0);
  #L29e138.  if v2 >= 0 then goto L29e13e;
  #L29e13c.  return v0 @kind wide;
  #L29e13e.  v2:= v8 @kind wide;
  #L29e140.  v4:= lcmp(v2, v0);
  #L29e144.  if v4 <= 0 then goto L29e17a;
  #L29e148.  v4:= v7.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c.a` @type ^`java.io.InputStream` @kind object;
  #L29e14c.  call temp:= `skip`(v4, v2) @signature `Ljava/io/InputStream;.skip:(J)J` @kind virtual;
  #L29e152.  v4:= temp @kind wide;
  #L29e154.  v6:= lcmp(v4, v0);
  #L29e158.  if v6 <= 0 then goto L29e160;
  #L29e15c.  v2:= v2 - v4 @kind long;
  #L29e15e.  goto L29e140;
  #L29e160.  v4:= v7.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c.a` @type ^`java.io.InputStream` @kind object;
  #L29e164.  call temp:= `read`(v4) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L29e16a.  v4:= temp;
  #L29e16c.  v5:= -1I;
  #L29e16e.  if v4 != v5 then goto L29e174;
  #L29e172.  goto L29e17a;
  #L29e174.  v4:= 1L;
  #L29e178.  goto L29e15c;
  #L29e17a.  v8:= v8 - v2 @kind long;
  #L29e17c.  return v8 @kind wide;
}
