record `com.bumptech.glide.load.resource.bitmap.e` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.engine.u` @kind interface, `com.bumptech.glide.load.engine.q` @kind interface {
  `android.graphics.Bitmap` `com.bumptech.glide.load.resource.bitmap.e.f` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.z.e` `com.bumptech.glide.load.resource.bitmap.e.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.e` v1 @kind this, `android.graphics.Bitmap` v2 @kind object, `com.bumptech.glide.load.engine.z.e` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/e;.<init>:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/z/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L29da98.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29da9e.  v0:= "Bitmap must not be null" @kind object;
  #L29daa2.  call temp:= `checkNotNull`(v2, v0) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L29daa8.  v2:= (`android.graphics.Bitmap`) v2 @kind object;
  #L29daac.  v1.`com.bumptech.glide.load.resource.bitmap.e.f` @type ^`android.graphics.Bitmap` := v2 @kind object;
  #L29dab0.  v2:= "BitmapPool must not be null" @kind object;
  #L29dab4.  call temp:= `checkNotNull`(v3, v2) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L29daba.  v3:= (`com.bumptech.glide.load.engine.z.e`) v3 @kind object;
  #L29dabe.  v1.`com.bumptech.glide.load.resource.bitmap.e.g` @type ^`com.bumptech.glide.load.engine.z.e` := v3 @kind object;
  #L29dac2.  return @kind void;
}
procedure `com.bumptech.glide.load.resource.bitmap.e` `obtain`(`android.graphics.Bitmap` v1 @kind object, `com.bumptech.glide.load.engine.z.e` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/e;.obtain:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/z/e;)Lcom/bumptech/glide/load/resource/bitmap/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L29da20.  if v1 != 0 then goto L29da28;
  #L29da24.  v1:= 0I;
  #L29da26.  return v1 @kind object;
  #L29da28.  v0:= new `com.bumptech.glide.load.resource.bitmap.e`;
  #L29da2c.  call `<init>`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/e;.<init>:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/z/e;)V` @kind direct;
  #L29da32.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `get`(`com.bumptech.glide.load.resource.bitmap.e` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/e;.get:()Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29da08.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.e.f` @type ^`android.graphics.Bitmap` @kind object;
  #L29da0c.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.load.resource.bitmap.e` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/e;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L29da7c.  call temp:= `get`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/e;.get:()Landroid/graphics/Bitmap;` @kind virtual;
  #L29da82.  v0:= temp @kind object;
  #L29da84.  return v0 @kind object;
}
procedure `java.lang.Class` `getResourceClass`(`com.bumptech.glide.load.resource.bitmap.e` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/e;.getResourceClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29da64.  v0:= constclass @type ^`android.graphics.Bitmap` @kind object;
  #L29da68.  return v0 @kind object;
}
procedure `int` `getSize`(`com.bumptech.glide.load.resource.bitmap.e` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/e;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29da44.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.e.f` @type ^`android.graphics.Bitmap` @kind object;
  #L29da48.  call temp:= `getBitmapByteSize`(v0) @signature `Lcom/bumptech/glide/s/k;.getBitmapByteSize:(Landroid/graphics/Bitmap;)I` @kind static;
  #L29da4e.  v0:= temp;
  #L29da50.  return v0;
}
procedure `void` `initialize`(`com.bumptech.glide.load.resource.bitmap.e` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/e;.initialize:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29dad4.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.e.f` @type ^`android.graphics.Bitmap` @kind object;
  #L29dad8.  call `prepareToDraw`(v0) @signature `Landroid/graphics/Bitmap;.prepareToDraw:()V` @kind virtual;
  #L29dade.  return @kind void;
}
procedure `void` `recycle`(`com.bumptech.glide.load.resource.bitmap.e` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/e;.recycle:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L29daf0.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.e.g` @type ^`com.bumptech.glide.load.engine.z.e` @kind object;
  #L29daf4.  v1:= v2.`com.bumptech.glide.load.resource.bitmap.e.f` @type ^`android.graphics.Bitmap` @kind object;
  #L29daf8.  call `put`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/z/e;.put:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L29dafe.  return @kind void;
}
