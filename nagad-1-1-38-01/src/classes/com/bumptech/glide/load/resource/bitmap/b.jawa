record `com.bumptech.glide.load.resource.bitmap.b` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.k` @kind interface {
  `com.bumptech.glide.load.engine.z.e` `com.bumptech.glide.load.resource.bitmap.b.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.k` `com.bumptech.glide.load.resource.bitmap.b.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.b` v0 @kind this, `com.bumptech.glide.load.engine.z.e` v1 @kind object, `com.bumptech.glide.load.k` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/b;.<init>:(Lcom/bumptech/glide/load/engine/z/e;Lcom/bumptech/glide/load/k;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L29d640.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29d646.  v0.`com.bumptech.glide.load.resource.bitmap.b.a` @type ^`com.bumptech.glide.load.engine.z.e` := v1 @kind object;
  #L29d64a.  v0.`com.bumptech.glide.load.resource.bitmap.b.b` @type ^`com.bumptech.glide.load.k` := v2 @kind object;
  #L29d64e.  return @kind void;
}
procedure `boolean` `encode`(`com.bumptech.glide.load.resource.bitmap.b` v3 @kind this, `com.bumptech.glide.load.engine.u` v4 @kind object, `java.io.File` v5 @kind object, `com.bumptech.glide.load.h` v6 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/b;.encode:(Lcom/bumptech/glide/load/engine/u;Ljava/io/File;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L29d5c0.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.b.b` @type ^`com.bumptech.glide.load.k` @kind object;
  #L29d5c4.  v1:= new `com.bumptech.glide.load.resource.bitmap.e`;
  #L29d5c8.  call temp:= `get`(v4) @signature `Lcom/bumptech/glide/load/engine/u;.get:()Ljava/lang/Object;` @kind interface;
  #L29d5ce.  v4:= temp @kind object;
  #L29d5d0.  v4:= (`android.graphics.drawable.BitmapDrawable`) v4 @kind object;
  #L29d5d4.  call temp:= `getBitmap`(v4) @signature `Landroid/graphics/drawable/BitmapDrawable;.getBitmap:()Landroid/graphics/Bitmap;` @kind virtual;
  #L29d5da.  v4:= temp @kind object;
  #L29d5dc.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.b.a` @type ^`com.bumptech.glide.load.engine.z.e` @kind object;
  #L29d5e0.  call `<init>`(v1, v4, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/e;.<init>:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/z/e;)V` @kind direct;
  #L29d5e6.  call temp:= `encode`(v0, v1, v5, v6) @signature `Lcom/bumptech/glide/load/d;.encode:(Ljava/lang/Object;Ljava/io/File;Lcom/bumptech/glide/load/h;)Z` @kind interface;
  #L29d5ec.  v4:= temp;
  #L29d5ee.  return v4;
}
procedure `boolean` `encode`(`com.bumptech.glide.load.resource.bitmap.b` v0 @kind this, `java.lang.Object` v1 @kind object, `java.io.File` v2 @kind object, `com.bumptech.glide.load.h` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/b;.encode:(Ljava/lang/Object;Ljava/io/File;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L29d600.  v1:= (`com.bumptech.glide.load.engine.u`) v1 @kind object;
  #L29d604.  call temp:= `encode`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/load/resource/bitmap/b;.encode:(Lcom/bumptech/glide/load/engine/u;Ljava/io/File;Lcom/bumptech/glide/load/h;)Z` @kind virtual;
  #L29d60a.  v1:= temp;
  #L29d60c.  return v1;
}
procedure `com.bumptech.glide.load.c` `getEncodeStrategy`(`com.bumptech.glide.load.resource.bitmap.b` v1 @kind this, `com.bumptech.glide.load.h` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/b;.getEncodeStrategy:(Lcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29d620.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.b.b` @type ^`com.bumptech.glide.load.k` @kind object;
  #L29d624.  call temp:= `getEncodeStrategy`(v0, v2) @signature `Lcom/bumptech/glide/load/k;.getEncodeStrategy:(Lcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/c;` @kind interface;
  #L29d62a.  v2:= temp @kind object;
  #L29d62c.  return v2 @kind object;
}
