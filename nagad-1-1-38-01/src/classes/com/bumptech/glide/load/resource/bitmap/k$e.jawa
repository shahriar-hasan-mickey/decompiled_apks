record `com.bumptech.glide.load.resource.bitmap.k$e` @kind class @AccessFlag  extends `com.bumptech.glide.load.resource.bitmap.k` @kind class {
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.k$e` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/k$e;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L29ec88.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/k;.<init>:()V` @kind direct;
  #L29ec8e.  return @kind void;
}
procedure `com.bumptech.glide.load.resource.bitmap.k$g` `getSampleSizeRounding`(`com.bumptech.glide.load.resource.bitmap.k$e` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/k$e;.getSampleSizeRounding:(IIII)Lcom/bumptech/glide/load/resource/bitmap/k$g;` @AccessFlag PUBLIC {
    temp;

  #L29ec10.  v1:= `@@com.bumptech.glide.load.resource.bitmap.k.g` @type ^`boolean` @kind boolean;
  #L29ec14.  if v1 == 0 then goto L29ec1e;
  #L29ec18.  v1:= `@@com.bumptech.glide.load.resource.bitmap.k$g.g` @type ^`com.bumptech.glide.load.resource.bitmap.k$g` @kind object;
  #L29ec1c.  return v1 @kind object;
  #L29ec1e.  v1:= `@@com.bumptech.glide.load.resource.bitmap.k$g.f` @type ^`com.bumptech.glide.load.resource.bitmap.k$g` @kind object;
  #L29ec22.  return v1 @kind object;
}
procedure `float` `getScaleFactor`(`com.bumptech.glide.load.resource.bitmap.k$e` v1 @kind this, `int` v2 , `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/k$e;.getScaleFactor:(IIII)F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29ec34.  v0:= `@@com.bumptech.glide.load.resource.bitmap.k.g` @type ^`boolean` @kind boolean;
  #L29ec38.  if v0 == 0 then goto L29ec52;
  #L29ec3c.  v4:= (`float`) v4 @kind i2f;
  #L29ec3e.  v2:= (`float`) v2 @kind i2f;
  #L29ec40.  v4:= v4 / v2 @kind float;
  #L29ec42.  v2:= (`float`) v5 @kind i2f;
  #L29ec44.  v3:= (`float`) v3 @kind i2f;
  #L29ec46.  v2:= v2 / v3 @kind float;
  #L29ec48.  call temp:= `min`(v4, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L29ec4e.  v2:= temp;
  #L29ec50.  return v2;
  #L29ec52.  v3:= v3 / v5 @kind int;
  #L29ec54.  v2:= v2 / v4 @kind int;
  #L29ec56.  call temp:= `max`(v3, v2) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L29ec5c.  v2:= temp;
  #L29ec5e.  v3:= 1.0F;
  #L29ec62.  if v2 != 0 then goto L29ec68;
  #L29ec66.  goto L29ec74;
  #L29ec68.  call temp:= `highestOneBit`(v2) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L29ec6e.  v2:= temp;
  #L29ec70.  v2:= (`float`) v2 @kind i2f;
  #L29ec72.  v3:= v3 / v2 @kind float;
  #L29ec74.  return v3;
}
