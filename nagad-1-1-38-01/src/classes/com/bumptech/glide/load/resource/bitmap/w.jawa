record `com.bumptech.glide.load.resource.bitmap.w` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.j` @kind interface {
  `com.bumptech.glide.load.o.e.d` `com.bumptech.glide.load.resource.bitmap.w.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.z.e` `com.bumptech.glide.load.resource.bitmap.w.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.w` v0 @kind this, `com.bumptech.glide.load.o.e.d` v1 @kind object, `com.bumptech.glide.load.engine.z.e` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/w;.<init>:(Lcom/bumptech/glide/load/o/e/d;Lcom/bumptech/glide/load/engine/z/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2a1424.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a142a.  v0.`com.bumptech.glide.load.resource.bitmap.w.a` @type ^`com.bumptech.glide.load.o.e.d` := v1 @kind object;
  #L2a142e.  v0.`com.bumptech.glide.load.resource.bitmap.w.b` @type ^`com.bumptech.glide.load.engine.z.e` := v2 @kind object;
  #L2a1432.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.u` `decode`(`com.bumptech.glide.load.resource.bitmap.w` v1 @kind this, `android.net.Uri` v2 @kind object, `int` v3 , `int` v4 , `com.bumptech.glide.load.h` v5 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/w;.decode:(Landroid/net/Uri;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a13c4.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.w.a` @type ^`com.bumptech.glide.load.o.e.d` @kind object;
  #L2a13c8.  call temp:= `decode`(v0, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/o/e/d;.decode:(Landroid/net/Uri;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u;` @kind virtual;
  #L2a13ce.  v2:= temp @kind object;
  #L2a13d0.  if v2 != 0 then goto L2a13d8;
  #L2a13d4.  v2:= 0I;
  #L2a13d6.  return v2 @kind object;
  #L2a13d8.  call temp:= `get`(v2) @signature `Lcom/bumptech/glide/load/engine/u;.get:()Ljava/lang/Object;` @kind interface;
  #L2a13de.  v2:= temp @kind object;
  #L2a13e0.  v2:= (`android.graphics.drawable.Drawable`) v2 @kind object;
  #L2a13e4.  v5:= v1.`com.bumptech.glide.load.resource.bitmap.w.b` @type ^`com.bumptech.glide.load.engine.z.e` @kind object;
  #L2a13e8.  call temp:= `a`(v5, v2, v3, v4) @signature `Lcom/bumptech/glide/load/resource/bitmap/m;.a:(Lcom/bumptech/glide/load/engine/z/e;Landroid/graphics/drawable/Drawable;II)Lcom/bumptech/glide/load/engine/u;` @kind static;
  #L2a13ee.  v2:= temp @kind object;
  #L2a13f0.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.engine.u` `decode`(`com.bumptech.glide.load.resource.bitmap.w` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/w;.decode:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2a1404.  v1:= (`android.net.Uri`) v1 @kind object;
  #L2a1408.  call temp:= `decode`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/resource/bitmap/w;.decode:(Landroid/net/Uri;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u;` @kind virtual;
  #L2a140e.  v1:= temp @kind object;
  #L2a1410.  return v1 @kind object;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.resource.bitmap.w` v0 @kind this, `android.net.Uri` v1 @kind object, `com.bumptech.glide.load.h` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/w;.handles:(Landroid/net/Uri;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC {
    temp;

  #L2a137c.  call temp:= `getScheme`(v1) @signature `Landroid/net/Uri;.getScheme:()Ljava/lang/String;` @kind virtual;
  #L2a1382.  v1:= temp @kind object;
  #L2a1384.  v2:= "android.resource" @kind object;
  #L2a1388.  call temp:= `equals`(v2, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2a138e.  v1:= temp;
  #L2a1390.  return v1;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.resource.bitmap.w` v0 @kind this, `java.lang.Object` v1 @kind object, `com.bumptech.glide.load.h` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/w;.handles:(Ljava/lang/Object;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2a13a4.  v1:= (`android.net.Uri`) v1 @kind object;
  #L2a13a8.  call temp:= `handles`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/w;.handles:(Landroid/net/Uri;Lcom/bumptech/glide/load/h;)Z` @kind virtual;
  #L2a13ae.  v1:= temp;
  #L2a13b0.  return v1;
}
