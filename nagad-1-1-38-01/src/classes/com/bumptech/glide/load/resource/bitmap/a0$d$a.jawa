record `com.bumptech.glide.load.resource.bitmap.a0$d$a` @kind class @AccessFlag  extends `android.media.MediaDataSource` @kind class {
  `java.nio.ByteBuffer` `com.bumptech.glide.load.resource.bitmap.a0$d$a.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.a0$d$a` v0 @kind this, `com.bumptech.glide.load.resource.bitmap.a0$d` v1 @kind object, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/a0$d$a;.<init>:(Lcom/bumptech/glide/load/resource/bitmap/a0$d;Ljava/nio/ByteBuffer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2a20e0.  v0.`com.bumptech.glide.load.resource.bitmap.a0$d$a.f` @type ^`java.nio.ByteBuffer` := v2 @kind object;
  #L2a20e4.  call `<init>`(v0) @signature `Landroid/media/MediaDataSource;.<init>:()V` @kind direct;
  #L2a20ea.  return @kind void;
}
procedure `void` `close`(`com.bumptech.glide.load.resource.bitmap.a0$d$a` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/a0$d$a;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L2a20fc.  return @kind void;
}
procedure `long` `getSize`(`com.bumptech.glide.load.resource.bitmap.a0$d$a` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/a0$d$a;.getSize:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a20c0.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.a0$d$a.f` @type ^`java.nio.ByteBuffer` @kind object;
  #L2a20c4.  call temp:= `limit`(v0) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L2a20ca.  v0:= temp;
  #L2a20cc.  v0:= (`long`) v0 @kind i2l;
  #L2a20ce.  return v0 @kind wide;
}
procedure `int` `readAt`(`com.bumptech.glide.load.resource.bitmap.a0$d$a` v3 @kind this, `long` v4 , `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/a0$d$a;.readAt:(J[BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a2068.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.a0$d$a.f` @type ^`java.nio.ByteBuffer` @kind object;
  #L2a206c.  call temp:= `limit`(v0) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L2a2072.  v0:= temp;
  #L2a2074.  v0:= (`long`) v0 @kind i2l;
  #L2a2076.  v2:= lcmp(v4, v0);
  #L2a207a.  if v2 < 0 then goto L2a2082;
  #L2a207e.  v4:= -1I;
  #L2a2080.  return v4;
  #L2a2082.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.a0$d$a.f` @type ^`java.nio.ByteBuffer` @kind object;
  #L2a2086.  v5:= (`int`) v4 @kind l2i;
  #L2a2088.  call temp:= `position`(v0, v5) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L2a208e.  v4:= v3.`com.bumptech.glide.load.resource.bitmap.a0$d$a.f` @type ^`java.nio.ByteBuffer` @kind object;
  #L2a2092.  call temp:= `remaining`(v4) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L2a2098.  v4:= temp;
  #L2a209a.  call temp:= `min`(v8, v4) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L2a20a0.  v4:= temp;
  #L2a20a2.  v5:= v3.`com.bumptech.glide.load.resource.bitmap.a0$d$a.f` @type ^`java.nio.ByteBuffer` @kind object;
  #L2a20a6.  call temp:= `get`(v5, v6, v7, v4) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2a20ac.  return v4;
}
