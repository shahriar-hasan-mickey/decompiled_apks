record `com.bumptech.glide.load.resource.bitmap.a0$a` @kind class @AccessFlag  extends `com.bumptech.glide.load.g$b` @kind interface {
  `java.nio.ByteBuffer` `com.bumptech.glide.load.resource.bitmap.a0$a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.a0$a` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/a0$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2a1e98.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a1e9e.  v0:= 8I;
  #L2a1ea2.  call temp:= `allocate`(v0) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L2a1ea8.  v0:= temp @kind object;
  #L2a1eaa.  v1.`com.bumptech.glide.load.resource.bitmap.a0$a.a` @type ^`java.nio.ByteBuffer` := v0 @kind object;
  #L2a1eae.  return @kind void;
}
procedure `void` `update`(`com.bumptech.glide.load.resource.bitmap.a0$a` v3 @kind this, `byte`[] v4 @kind object, `java.lang.Long` v5 @kind object, `java.security.MessageDigest` v6 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/a0$a;.update:([BLjava/lang/Long;Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a1ec0.  call `update`(v6, v4) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L2a1ec6.  v4:= v3.`com.bumptech.glide.load.resource.bitmap.a0$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L2a1eca.  @monitorenter v4
  #L2a1ecc.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.a0$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L2a1ed0.  v1:= 0I;
  #L2a1ed2.  call temp:= `position`(v0, v1) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L2a1ed8.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.a0$a.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L2a1edc.  call temp:= `longValue`(v5) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L2a1ee2.  v1:= temp @kind wide;
  #L2a1ee4.  call temp:= `putLong`(v0, v1) @signature `Ljava/nio/ByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2a1eea.  v5:= temp @kind object;
  #L2a1eec.  call temp:= `array`(v5) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L2a1ef2.  v5:= temp @kind object;
  #L2a1ef4.  call `update`(v6, v5) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L2a1efa.  @monitorexit v4
  #L2a1efc.  return @kind void;
  #L2a1efe.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a1f00.  @monitorexit v4
  #L2a1f02.  throw v5;
  catch `java.lang.Throwable` @[L2a1ecc..L2a1f02] goto L2a1efe;
}
procedure `void` `update`(`com.bumptech.glide.load.resource.bitmap.a0$a` v0 @kind this, `byte`[] v1 @kind object, `java.lang.Object` v2 @kind object, `java.security.MessageDigest` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/a0$a;.update:([BLjava/lang/Object;Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2a1f20.  v2:= (`java.lang.Long`) v2 @kind object;
  #L2a1f24.  call `update`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/load/resource/bitmap/a0$a;.update:([BLjava/lang/Long;Ljava/security/MessageDigest;)V` @kind virtual;
  #L2a1f2a.  return @kind void;
}
