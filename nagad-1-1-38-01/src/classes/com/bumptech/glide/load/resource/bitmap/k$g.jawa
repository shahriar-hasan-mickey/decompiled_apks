record `com.bumptech.glide.load.resource.bitmap.k$g` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `com.bumptech.glide.load.resource.bitmap.k$g` `@@com.bumptech.glide.load.resource.bitmap.k$g.f` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.resource.bitmap.k$g` `@@com.bumptech.glide.load.resource.bitmap.k$g.g` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.resource.bitmap.k$g`[] `@@com.bumptech.glide.load.resource.bitmap.k$g.h` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/resource/bitmap/k$g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L29ed30.  v0:= new `com.bumptech.glide.load.resource.bitmap.k$g`;
  #L29ed34.  v1:= 0I;
  #L29ed36.  v2:= "MEMORY" @kind object;
  #L29ed3a.  call `<init>`(v0, v2, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/k$g;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L29ed40.  `@@com.bumptech.glide.load.resource.bitmap.k$g.f` @type ^`com.bumptech.glide.load.resource.bitmap.k$g` := v0 @kind object;
  #L29ed44.  v0:= new `com.bumptech.glide.load.resource.bitmap.k$g`;
  #L29ed48.  v2:= 1I;
  #L29ed4a.  v3:= "QUALITY" @kind object;
  #L29ed4e.  call `<init>`(v0, v3, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/k$g;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L29ed54.  `@@com.bumptech.glide.load.resource.bitmap.k$g.g` @type ^`com.bumptech.glide.load.resource.bitmap.k$g` := v0 @kind object;
  #L29ed58.  v0:= 2I;
  #L29ed5a.  v0:= new `com.bumptech.glide.load.resource.bitmap.k$g`[v0];
  #L29ed5e.  v3:= `@@com.bumptech.glide.load.resource.bitmap.k$g.f` @type ^`com.bumptech.glide.load.resource.bitmap.k$g` @kind object;
  #L29ed62.  v0[v1]:= v3 @kind object;
  #L29ed66.  v1:= `@@com.bumptech.glide.load.resource.bitmap.k$g.g` @type ^`com.bumptech.glide.load.resource.bitmap.k$g` @kind object;
  #L29ed6a.  v0[v2]:= v1 @kind object;
  #L29ed6e.  `@@com.bumptech.glide.load.resource.bitmap.k$g.h` @type ^`com.bumptech.glide.load.resource.bitmap.k$g`[] := v0 @kind object;
  #L29ed72.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.k$g` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/k$g;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L29ed84.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L29ed8a.  return @kind void;
}
procedure `com.bumptech.glide.load.resource.bitmap.k$g` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/k$g;.valueOf:(Ljava/lang/String;)Lcom/bumptech/glide/load/resource/bitmap/k$g;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L29ece8.  v0:= constclass @type ^`com.bumptech.glide.load.resource.bitmap.k$g` @kind object;
  #L29ecec.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L29ecf2.  v1:= temp @kind object;
  #L29ecf4.  v1:= (`com.bumptech.glide.load.resource.bitmap.k$g`) v1 @kind object;
  #L29ecf8.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.resource.bitmap.k$g`[] `values`() @signature `Lcom/bumptech/glide/load/resource/bitmap/k$g;.values:()[Lcom/bumptech/glide/load/resource/bitmap/k$g;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L29ed0c.  v0:= `@@com.bumptech.glide.load.resource.bitmap.k$g.h` @type ^`com.bumptech.glide.load.resource.bitmap.k$g`[] @kind object;
  #L29ed10.  call temp:= `clone`(v0) @signature `[Lcom/bumptech/glide/load/resource/bitmap/k$g;.clone:()Ljava/lang/Object;` @kind virtual;
  #L29ed16.  v0:= temp @kind object;
  #L29ed18.  v0:= (`com.bumptech.glide.load.resource.bitmap.k$g`[]) v0 @kind object;
  #L29ed1c.  return v0 @kind object;
}
