record `com.bumptech.glide.load.resource.bitmap.a0$b` @kind class @AccessFlag  extends `com.bumptech.glide.load.g$b` @kind interface {
  `java.nio.ByteBuffer` `com.bumptech.glide.load.resource.bitmap.a0$b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.a0$b` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/a0$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2a1f3c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a1f42.  v0:= 4I;
  #L2a1f44.  call temp:= `allocate`(v0) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L2a1f4a.  v0:= temp @kind object;
  #L2a1f4c.  v1.`com.bumptech.glide.load.resource.bitmap.a0$b.a` @type ^`java.nio.ByteBuffer` := v0 @kind object;
  #L2a1f50.  return @kind void;
}
procedure `void` `update`(`com.bumptech.glide.load.resource.bitmap.a0$b` v2 @kind this, `byte`[] v3 @kind object, `java.lang.Integer` v4 @kind object, `java.security.MessageDigest` v5 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/a0$b;.update:([BLjava/lang/Integer;Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a1f64.  if v4 != 0 then goto L2a1f6a;
  #L2a1f68.  return @kind void;
  #L2a1f6a.  call `update`(v5, v3) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L2a1f70.  v3:= v2.`com.bumptech.glide.load.resource.bitmap.a0$b.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L2a1f74.  @monitorenter v3
  #L2a1f76.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.a0$b.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L2a1f7a.  v1:= 0I;
  #L2a1f7c.  call temp:= `position`(v0, v1) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L2a1f82.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.a0$b.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L2a1f86.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2a1f8c.  v4:= temp;
  #L2a1f8e.  call temp:= `putInt`(v0, v4) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2a1f94.  v4:= temp @kind object;
  #L2a1f96.  call temp:= `array`(v4) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L2a1f9c.  v4:= temp @kind object;
  #L2a1f9e.  call `update`(v5, v4) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L2a1fa4.  @monitorexit v3
  #L2a1fa6.  return @kind void;
  #L2a1fa8.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a1faa.  @monitorexit v3
  #L2a1fac.  throw v4;
  catch `java.lang.Throwable` @[L2a1f76..L2a1fac] goto L2a1fa8;
}
procedure `void` `update`(`com.bumptech.glide.load.resource.bitmap.a0$b` v0 @kind this, `byte`[] v1 @kind object, `java.lang.Object` v2 @kind object, `java.security.MessageDigest` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/a0$b;.update:([BLjava/lang/Object;Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2a1fcc.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L2a1fd0.  call `update`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/load/resource/bitmap/a0$b;.update:([BLjava/lang/Integer;Ljava/security/MessageDigest;)V` @kind virtual;
  #L2a1fd6.  return @kind void;
}
