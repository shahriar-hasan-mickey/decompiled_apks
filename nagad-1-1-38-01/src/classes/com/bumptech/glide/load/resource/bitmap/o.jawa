record `com.bumptech.glide.load.resource.bitmap.o` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.ImageHeaderParser` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.o` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/o;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2a0424.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a042a.  return @kind void;
}
procedure `int` `getOrientation`(`com.bumptech.glide.load.resource.bitmap.o` v1 @kind this, `java.io.InputStream` v2 @kind object, `com.bumptech.glide.load.engine.z.b` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/o;.getOrientation:(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/z/b;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a03f4.  v3:= new `c.k.a.a`;
  #L2a03f8.  call `<init>`(v3, v2) @signature `Lc/k/a/a;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L2a03fe.  v2:= "Orientation" @kind object;
  #L2a0402.  v0:= 1I;
  #L2a0404.  call temp:= `getAttributeInt`(v3, v2, v0) @signature `Lc/k/a/a;.getAttributeInt:(Ljava/lang/String;I)I` @kind virtual;
  #L2a040a.  v2:= temp;
  #L2a040c.  if v2 != 0 then goto L2a0412;
  #L2a0410.  v2:= -1I;
  #L2a0412.  return v2;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `getType`(`com.bumptech.glide.load.resource.bitmap.o` v0 @kind this, `java.io.InputStream` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/o;.getType:(Ljava/io/InputStream;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC {
    temp;

  #L2a03c4.  v1:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L2a03c8.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `getType`(`com.bumptech.glide.load.resource.bitmap.o` v0 @kind this, `java.nio.ByteBuffer` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/o;.getType:(Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC {
    temp;

  #L2a03dc.  v1:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L2a03e0.  return v1 @kind object;
}
