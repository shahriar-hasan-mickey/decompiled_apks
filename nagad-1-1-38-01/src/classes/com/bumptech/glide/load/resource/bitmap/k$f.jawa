record `com.bumptech.glide.load.resource.bitmap.k$f` @kind class @AccessFlag  extends `com.bumptech.glide.load.resource.bitmap.k` @kind class {
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.k$f` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/k$f;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L29ecd0.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/k;.<init>:()V` @kind direct;
  #L29ecd6.  return @kind void;
}
procedure `com.bumptech.glide.load.resource.bitmap.k$g` `getSampleSizeRounding`(`com.bumptech.glide.load.resource.bitmap.k$f` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/k$f;.getSampleSizeRounding:(IIII)Lcom/bumptech/glide/load/resource/bitmap/k$g;` @AccessFlag PUBLIC {
    temp;

  #L29eca0.  v1:= `@@com.bumptech.glide.load.resource.bitmap.k$g.g` @type ^`com.bumptech.glide.load.resource.bitmap.k$g` @kind object;
  #L29eca4.  return v1 @kind object;
}
procedure `float` `getScaleFactor`(`com.bumptech.glide.load.resource.bitmap.k$f` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/k$f;.getScaleFactor:(IIII)F` @AccessFlag PUBLIC {
    temp;

  #L29ecb8.  v1:= 1.0F;
  #L29ecbc.  return v1;
}
