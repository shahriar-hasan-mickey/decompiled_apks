record `com.bumptech.glide.load.resource.bitmap.a` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.j` @kind interface {
  `com.bumptech.glide.load.j` `com.bumptech.glide.load.resource.bitmap.a.a` @AccessFlag PRIVATE_FINAL;
  `android.content.res.Resources` `com.bumptech.glide.load.resource.bitmap.a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.a` v0 @kind this, `android.content.res.Resources` v1 @kind object, `com.bumptech.glide.load.j` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/a;.<init>:(Landroid/content/res/Resources;Lcom/bumptech/glide/load/j;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L29d58c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29d592.  call temp:= `checkNotNull`(v1) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L29d598.  v1:= (`android.content.res.Resources`) v1 @kind object;
  #L29d59c.  v0.`com.bumptech.glide.load.resource.bitmap.a.b` @type ^`android.content.res.Resources` := v1 @kind object;
  #L29d5a0.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/s/j;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L29d5a6.  v2:= (`com.bumptech.glide.load.j`) v2 @kind object;
  #L29d5aa.  v0.`com.bumptech.glide.load.resource.bitmap.a.a` @type ^`com.bumptech.glide.load.j` := v2 @kind object;
  #L29d5ae.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.u` `decode`(`com.bumptech.glide.load.resource.bitmap.a` v1 @kind this, `java.lang.Object` v2 @kind object, `int` v3 , `int` v4 , `com.bumptech.glide.load.h` v5 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/a;.decode:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29d560.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.a.a` @type ^`com.bumptech.glide.load.j` @kind object;
  #L29d564.  call temp:= `decode`(v0, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/j;.decode:(Ljava/lang/Object;IILcom/bumptech/glide/load/h;)Lcom/bumptech/glide/load/engine/u;` @kind interface;
  #L29d56a.  v2:= temp @kind object;
  #L29d56c.  v3:= v1.`com.bumptech.glide.load.resource.bitmap.a.b` @type ^`android.content.res.Resources` @kind object;
  #L29d570.  call temp:= `obtain`(v3, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/t;.obtain:(Landroid/content/res/Resources;Lcom/bumptech/glide/load/engine/u;)Lcom/bumptech/glide/load/engine/u;` @kind static;
  #L29d576.  v2:= temp @kind object;
  #L29d578.  return v2 @kind object;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.resource.bitmap.a` v1 @kind this, `java.lang.Object` v2 @kind object, `com.bumptech.glide.load.h` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/a;.handles:(Ljava/lang/Object;Lcom/bumptech/glide/load/h;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L29d540.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.a.a` @type ^`com.bumptech.glide.load.j` @kind object;
  #L29d544.  call temp:= `handles`(v0, v2, v3) @signature `Lcom/bumptech/glide/load/j;.handles:(Ljava/lang/Object;Lcom/bumptech/glide/load/h;)Z` @kind interface;
  #L29d54a.  v2:= temp;
  #L29d54c.  return v2;
}
