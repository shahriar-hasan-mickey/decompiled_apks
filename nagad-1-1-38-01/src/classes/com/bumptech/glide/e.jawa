record `com.bumptech.glide.e` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `com.bumptech.glide.e` `@@com.bumptech.glide.e.f` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.e` `@@com.bumptech.glide.e.g` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.e` `@@com.bumptech.glide.e.h` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.e`[] `@@com.bumptech.glide.e.i` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2890d4.  v0:= new `com.bumptech.glide.e`;
  #L2890d8.  v1:= 0I;
  #L2890da.  v2:= "LOW" @kind object;
  #L2890de.  v3:= 0.5F;
  #L2890e2.  call `<init>`(v0, v2, v1, v3) @signature `Lcom/bumptech/glide/e;.<init>:(Ljava/lang/String;IF)V` @kind direct;
  #L2890e8.  `@@com.bumptech.glide.e.f` @type ^`com.bumptech.glide.e` := v0 @kind object;
  #L2890ec.  v0:= new `com.bumptech.glide.e`;
  #L2890f0.  v2:= 1I;
  #L2890f2.  v3:= "NORMAL" @kind object;
  #L2890f6.  v4:= 1.0F;
  #L2890fa.  call `<init>`(v0, v3, v2, v4) @signature `Lcom/bumptech/glide/e;.<init>:(Ljava/lang/String;IF)V` @kind direct;
  #L289100.  `@@com.bumptech.glide.e.g` @type ^`com.bumptech.glide.e` := v0 @kind object;
  #L289104.  v0:= new `com.bumptech.glide.e`;
  #L289108.  v3:= 2I;
  #L28910a.  v4:= "HIGH" @kind object;
  #L28910e.  v5:= 1.5F;
  #L289112.  call `<init>`(v0, v4, v3, v5) @signature `Lcom/bumptech/glide/e;.<init>:(Ljava/lang/String;IF)V` @kind direct;
  #L289118.  `@@com.bumptech.glide.e.h` @type ^`com.bumptech.glide.e` := v0 @kind object;
  #L28911c.  v0:= 3I;
  #L28911e.  v0:= new `com.bumptech.glide.e`[v0];
  #L289122.  v4:= `@@com.bumptech.glide.e.f` @type ^`com.bumptech.glide.e` @kind object;
  #L289126.  v0[v1]:= v4 @kind object;
  #L28912a.  v1:= `@@com.bumptech.glide.e.g` @type ^`com.bumptech.glide.e` @kind object;
  #L28912e.  v0[v2]:= v1 @kind object;
  #L289132.  v1:= `@@com.bumptech.glide.e.h` @type ^`com.bumptech.glide.e` @kind object;
  #L289136.  v0[v3]:= v1 @kind object;
  #L28913a.  `@@com.bumptech.glide.e.i` @type ^`com.bumptech.glide.e`[] := v0 @kind object;
  #L28913e.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.e` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `float` v3 ) @signature `Lcom/bumptech/glide/e;.<init>:(Ljava/lang/String;IF)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L289150.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L289156.  return @kind void;
}
procedure `com.bumptech.glide.e` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/bumptech/glide/e;.valueOf:(Ljava/lang/String;)Lcom/bumptech/glide/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L28908c.  v0:= constclass @type ^`com.bumptech.glide.e` @kind object;
  #L289090.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L289096.  v1:= temp @kind object;
  #L289098.  v1:= (`com.bumptech.glide.e`) v1 @kind object;
  #L28909c.  return v1 @kind object;
}
procedure `com.bumptech.glide.e`[] `values`() @signature `Lcom/bumptech/glide/e;.values:()[Lcom/bumptech/glide/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2890b0.  v0:= `@@com.bumptech.glide.e.i` @type ^`com.bumptech.glide.e`[] @kind object;
  #L2890b4.  call temp:= `clone`(v0) @signature `[Lcom/bumptech/glide/e;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2890ba.  v0:= temp @kind object;
  #L2890bc.  v0:= (`com.bumptech.glide.e`[]) v0 @kind object;
  #L2890c0.  return v0 @kind object;
}
