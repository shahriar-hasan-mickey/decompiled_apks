record `com.bumptech.glide.l.a$d` @kind class @AccessFlag FINAL {
  `java.lang.String` `com.bumptech.glide.l.a$d.a` @AccessFlag PRIVATE_FINAL;
  `long`[] `com.bumptech.glide.l.a$d.b` @AccessFlag PRIVATE_FINAL;
  `java.io.File`[] `com.bumptech.glide.l.a$d.c` @AccessFlag ;
  `java.io.File`[] `com.bumptech.glide.l.a$d.d` @AccessFlag ;
  `boolean` `com.bumptech.glide.l.a$d.e` @AccessFlag PRIVATE;
  `com.bumptech.glide.l.a$c` `com.bumptech.glide.l.a$d.f` @AccessFlag PRIVATE;
  `long` `com.bumptech.glide.l.a$d.g` @AccessFlag PRIVATE;
  `com.bumptech.glide.l.a` `com.bumptech.glide.l.a$d.h` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.l.a$d` v6 @kind this, `com.bumptech.glide.l.a` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lcom/bumptech/glide/l/a$d;.<init>:(Lcom/bumptech/glide/l/a;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L28af98.  v6.`com.bumptech.glide.l.a$d.h` @type ^`com.bumptech.glide.l.a` := v7 @kind object;
  #L28af9c.  call `<init>`(v6) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28afa2.  v6.`com.bumptech.glide.l.a$d.a` @type ^`java.lang.String` := v8 @kind object;
  #L28afa6.  call temp:= `b`(v7) @signature `Lcom/bumptech/glide/l/a;.b:(Lcom/bumptech/glide/l/a;)I` @kind static;
  #L28afac.  v0:= temp;
  #L28afae.  v0:= new `long`[v0];
  #L28afb2.  v6.`com.bumptech.glide.l.a$d.b` @type ^`long`[] := v0 @kind object;
  #L28afb6.  call temp:= `b`(v7) @signature `Lcom/bumptech/glide/l/a;.b:(Lcom/bumptech/glide/l/a;)I` @kind static;
  #L28afbc.  v0:= temp;
  #L28afbe.  v0:= new `java.io.File`[v0];
  #L28afc2.  v6.`com.bumptech.glide.l.a$d.c` @type ^`java.io.File`[] := v0 @kind object;
  #L28afc6.  call temp:= `b`(v7) @signature `Lcom/bumptech/glide/l/a;.b:(Lcom/bumptech/glide/l/a;)I` @kind static;
  #L28afcc.  v0:= temp;
  #L28afce.  v0:= new `java.io.File`[v0];
  #L28afd2.  v6.`com.bumptech.glide.l.a$d.d` @type ^`java.io.File`[] := v0 @kind object;
  #L28afd6.  v0:= new `java.lang.StringBuilder`;
  #L28afda.  call `<init>`(v0, v8) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28afe0.  v8:= 46I;
  #L28afe4.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L28afea.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L28aff0.  v8:= temp;
  #L28aff2.  v1:= 0I;
  #L28aff4.  call temp:= `b`(v7) @signature `Lcom/bumptech/glide/l/a;.b:(Lcom/bumptech/glide/l/a;)I` @kind static;
  #L28affa.  v2:= temp;
  #L28affc.  if v1 >= v2 then goto L28b060;
  #L28b000.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L28b006.  v2:= v6.`com.bumptech.glide.l.a$d.c` @type ^`java.io.File`[] @kind object;
  #L28b00a.  v3:= new `java.io.File`;
  #L28b00e.  call temp:= `d`(v7) @signature `Lcom/bumptech/glide/l/a;.d:(Lcom/bumptech/glide/l/a;)Ljava/io/File;` @kind static;
  #L28b014.  v4:= temp @kind object;
  #L28b016.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28b01c.  v5:= temp @kind object;
  #L28b01e.  call `<init>`(v3, v4, v5) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L28b024.  v2[v1]:= v3 @kind object;
  #L28b028.  v2:= ".tmp" @kind object;
  #L28b02c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28b032.  v2:= v6.`com.bumptech.glide.l.a$d.d` @type ^`java.io.File`[] @kind object;
  #L28b036.  v3:= new `java.io.File`;
  #L28b03a.  call temp:= `d`(v7) @signature `Lcom/bumptech/glide/l/a;.d:(Lcom/bumptech/glide/l/a;)Ljava/io/File;` @kind static;
  #L28b040.  v4:= temp @kind object;
  #L28b042.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28b048.  v5:= temp @kind object;
  #L28b04a.  call `<init>`(v3, v4, v5) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L28b050.  v2[v1]:= v3 @kind object;
  #L28b054.  call `setLength`(v0, v8) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L28b05a.  v1:= v1 + 1;
  #L28b05e.  goto L28aff4;
  #L28b060.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.l.a$d` v0 @kind this, `com.bumptech.glide.l.a` v1 @kind object, `java.lang.String` v2 @kind object, `com.bumptech.glide.l.a$a` v3 @kind object) @signature `Lcom/bumptech/glide/l/a$d;.<init>:(Lcom/bumptech/glide/l/a;Ljava/lang/String;Lcom/bumptech/glide/l/a$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L28b074.  call `<init>`(v0, v1, v2) @signature `Lcom/bumptech/glide/l/a$d;.<init>:(Lcom/bumptech/glide/l/a;Ljava/lang/String;)V` @kind direct;
  #L28b07a.  return @kind void;
}
procedure `long` `a`(`com.bumptech.glide.l.a$d` v0 @kind object, `long` v1 ) @signature `Lcom/bumptech/glide/l/a$d;.a:(Lcom/bumptech/glide/l/a$d;J)J` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28af68.  v0.`com.bumptech.glide.l.a$d.g` @type ^`long` := v1 @kind wide;
  #L28af6c.  return v1 @kind wide;
}
procedure `com.bumptech.glide.l.a$c` `a`(`com.bumptech.glide.l.a$d` v0 @kind object, `com.bumptech.glide.l.a$c` v1 @kind object) @signature `Lcom/bumptech/glide/l/a$d;.a:(Lcom/bumptech/glide/l/a$d;Lcom/bumptech/glide/l/a$c;)Lcom/bumptech/glide/l/a$c;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28ae54.  v0.`com.bumptech.glide.l.a$d.f` @type ^`com.bumptech.glide.l.a$c` := v1 @kind object;
  #L28ae58.  return v1 @kind object;
}
procedure `java.io.IOException` `a`(`com.bumptech.glide.l.a$d` v3 @kind this, `java.lang.String`[] v4 @kind object) @signature `Lcom/bumptech/glide/l/a$d;.a:([Ljava/lang/String;)Ljava/io/IOException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L28aea4.  v0:= new `java.io.IOException`;
  #L28aea8.  v1:= new `java.lang.StringBuilder`;
  #L28aeac.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28aeb2.  v2:= "unexpected journal line: " @kind object;
  #L28aeb6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28aebc.  call temp:= `toString`(v4) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L28aec2.  v4:= temp @kind object;
  #L28aec4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28aeca.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28aed0.  v4:= temp @kind object;
  #L28aed2.  call `<init>`(v0, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28aed8.  throw v0;
}
procedure `void` `a`(`com.bumptech.glide.l.a$d` v0 @kind object, `java.lang.String`[] v1 @kind object) @signature `Lcom/bumptech/glide/l/a$d;.a:(Lcom/bumptech/glide/l/a$d;[Ljava/lang/String;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28b08c.  call `b`(v0, v1) @signature `Lcom/bumptech/glide/l/a$d;.b:([Ljava/lang/String;)V` @kind direct;
  #L28b092.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.l.a$d` v0 @kind object, `boolean` v1 ) @signature `Lcom/bumptech/glide/l/a$d;.a:(Lcom/bumptech/glide/l/a$d;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28ae24.  v0.`com.bumptech.glide.l.a$d.e` @type ^`boolean` := v1 @kind boolean;
  #L28ae28.  return v1;
}
procedure `long`[] `a`(`com.bumptech.glide.l.a$d` v0 @kind object) @signature `Lcom/bumptech/glide/l/a$d;.a:(Lcom/bumptech/glide/l/a$d;)[J` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28af80.  v0:= v0.`com.bumptech.glide.l.a$d.b` @type ^`long`[] @kind object;
  #L28af84.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`com.bumptech.glide.l.a$d` v0 @kind object) @signature `Lcom/bumptech/glide/l/a$d;.b:(Lcom/bumptech/glide/l/a$d;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28aeec.  v0:= v0.`com.bumptech.glide.l.a$d.a` @type ^`java.lang.String` @kind object;
  #L28aef0.  return v0 @kind object;
}
procedure `void` `b`(`com.bumptech.glide.l.a$d` v5 @kind this, `java.lang.String`[] v6 @kind object) @signature `Lcom/bumptech/glide/l/a$d;.b:([Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L28b0a4.  v0:= length @variable v6;
  #L28b0a6.  v1:= v5.`com.bumptech.glide.l.a$d.h` @type ^`com.bumptech.glide.l.a` @kind object;
  #L28b0aa.  call temp:= `b`(v1) @signature `Lcom/bumptech/glide/l/a;.b:(Lcom/bumptech/glide/l/a;)I` @kind static;
  #L28b0b0.  v1:= temp;
  #L28b0b2.  v2:= 0I;
  #L28b0b4.  if v0 != v1 then goto L28b0e4;
  #L28b0b8.  v0:= 0I;
  #L28b0ba.  v1:= length @variable v6;
  #L28b0bc.  if v0 >= v1 then goto L28b0da;
  #L28b0c0.  v1:= v5.`com.bumptech.glide.l.a$d.b` @type ^`long`[] @kind object;
  #L28b0c4.  v3:= v6[v0] @kind object;
  #L28b0c8.  call temp:= `parseLong`(v3) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L28b0ce.  v3:= temp @kind wide;
  #L28b0d0.  v1[v0]:= v3 @kind wide;
  #L28b0d4.  v0:= v0 + 1;
  #L28b0d8.  goto L28b0ba;
  #L28b0da.  return @kind void;
  #L28b0dc.  call temp:= `a`(v5, v6) @signature `Lcom/bumptech/glide/l/a$d;.a:([Ljava/lang/String;)Ljava/io/IOException;` @kind direct;
  #L28b0e2.  throw v2;
  #L28b0e4.  call temp:= `a`(v5, v6) @signature `Lcom/bumptech/glide/l/a$d;.a:([Ljava/lang/String;)Ljava/io/IOException;` @kind direct;
  #L28b0ea.  throw v2;
  catch `java.lang.NumberFormatException` @[L28b0ba..L28b0d4] goto L28b0dc;
}
procedure `long` `c`(`com.bumptech.glide.l.a$d` v2 @kind object) @signature `Lcom/bumptech/glide/l/a$d;.c:(Lcom/bumptech/glide/l/a$d;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L28af50.  v0:= v2.`com.bumptech.glide.l.a$d.g` @type ^`long` @kind wide;
  #L28af54.  return v0 @kind wide;
}
procedure `boolean` `d`(`com.bumptech.glide.l.a$d` v0 @kind object) @signature `Lcom/bumptech/glide/l/a$d;.d:(Lcom/bumptech/glide/l/a$d;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28ae0c.  v0:= v0.`com.bumptech.glide.l.a$d.e` @type ^`boolean` @kind boolean;
  #L28ae10.  return v0;
}
procedure `com.bumptech.glide.l.a$c` `e`(`com.bumptech.glide.l.a$d` v0 @kind object) @signature `Lcom/bumptech/glide/l/a$d;.e:(Lcom/bumptech/glide/l/a$d;)Lcom/bumptech/glide/l/a$c;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28ae3c.  v0:= v0.`com.bumptech.glide.l.a$d.f` @type ^`com.bumptech.glide.l.a$c` @kind object;
  #L28ae40.  return v0 @kind object;
}
procedure `java.io.File` `getCleanFile`(`com.bumptech.glide.l.a$d` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/l/a$d;.getCleanFile:(I)Ljava/io/File;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28ae6c.  v0:= v1.`com.bumptech.glide.l.a$d.c` @type ^`java.io.File`[] @kind object;
  #L28ae70.  v2:= v0[v2] @kind object;
  #L28ae74.  return v2 @kind object;
}
procedure `java.io.File` `getDirtyFile`(`com.bumptech.glide.l.a$d` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/l/a$d;.getDirtyFile:(I)Ljava/io/File;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28ae88.  v0:= v1.`com.bumptech.glide.l.a$d.d` @type ^`java.io.File`[] @kind object;
  #L28ae8c.  v2:= v0[v2] @kind object;
  #L28ae90.  return v2 @kind object;
}
procedure `java.lang.String` `getLengths`(`com.bumptech.glide.l.a$d` v7 @kind this) @signature `Lcom/bumptech/glide/l/a$d;.getLengths:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L28af04.  v0:= new `java.lang.StringBuilder`;
  #L28af08.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28af0e.  v1:= v7.`com.bumptech.glide.l.a$d.b` @type ^`long`[] @kind object;
  #L28af12.  v2:= length @variable v1;
  #L28af14.  v3:= 0I;
  #L28af16.  if v3 >= v2 then goto L28af34;
  #L28af1a.  v4:= v1[v3] @kind wide;
  #L28af1e.  v6:= 32I;
  #L28af22.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L28af28.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L28af2e.  v3:= v3 + 1;
  #L28af32.  goto L28af16;
  #L28af34.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28af3a.  v0:= temp @kind object;
  #L28af3c.  return v0 @kind object;
}
