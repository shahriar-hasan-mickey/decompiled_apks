record `com.bumptech.glide.l.a` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `java.io.File` `com.bumptech.glide.l.a.f` @AccessFlag PRIVATE_FINAL;
  `java.io.File` `com.bumptech.glide.l.a.g` @AccessFlag PRIVATE_FINAL;
  `java.io.File` `com.bumptech.glide.l.a.h` @AccessFlag PRIVATE_FINAL;
  `java.io.File` `com.bumptech.glide.l.a.i` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.l.a.j` @AccessFlag PRIVATE_FINAL;
  `long` `com.bumptech.glide.l.a.k` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.l.a.l` @AccessFlag PRIVATE_FINAL;
  `long` `com.bumptech.glide.l.a.m` @AccessFlag PRIVATE;
  `java.io.Writer` `com.bumptech.glide.l.a.n` @AccessFlag PRIVATE;
  `java.util.LinkedHashMap` `com.bumptech.glide.l.a.o` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.l.a.p` @AccessFlag PRIVATE;
  `long` `com.bumptech.glide.l.a.q` @AccessFlag PRIVATE;
  `java.util.concurrent.ThreadPoolExecutor` `com.bumptech.glide.l.a.r` @AccessFlag FINAL;
  `java.util.concurrent.Callable` `com.bumptech.glide.l.a.s` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.l.a` v16 @kind this, `java.io.File` v17 @kind object, `int` v18 , `int` v19 , `long` v20 ) @signature `Lcom/bumptech/glide/l/a;.<init>:(Ljava/io/File;IIJ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L28b6b0.  v0:= v16 @kind object;
  #L28b6b4.  v1:= v17 @kind object;
  #L28b6b8.  call `<init>`(v16) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28b6be.  v2:= 0L;
  #L28b6c2.  v0.`com.bumptech.glide.l.a.m` @type ^`long` := v2 @kind wide;
  #L28b6c6.  v4:= new `java.util.LinkedHashMap`;
  #L28b6ca.  v5:= 0I;
  #L28b6cc.  v6:= 0.75F;
  #L28b6d0.  v7:= 1I;
  #L28b6d2.  call `<init>`(v4, v5, v6, v7) @signature `Ljava/util/LinkedHashMap;.<init>:(IFZ)V` @kind direct;
  #L28b6d8.  v0.`com.bumptech.glide.l.a.o` @type ^`java.util.LinkedHashMap` := v4 @kind object;
  #L28b6dc.  v0.`com.bumptech.glide.l.a.q` @type ^`long` := v2 @kind wide;
  #L28b6e0.  v2:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L28b6e4.  v13:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L28b6e8.  v14:= new `java.util.concurrent.LinkedBlockingQueue`;
  #L28b6ec.  call `<init>`(v14) @signature `Ljava/util/concurrent/LinkedBlockingQueue;.<init>:()V` @kind direct;
  #L28b6f2.  v15:= new `com.bumptech.glide.l.a$b`;
  #L28b6f6.  v3:= 0I;
  #L28b6f8.  call `<init>`(v15, v3) @signature `Lcom/bumptech/glide/l/a$b;.<init>:(Lcom/bumptech/glide/l/a$a;)V` @kind direct;
  #L28b6fe.  v9:= 0I;
  #L28b700.  v10:= 1I;
  #L28b702.  v11:= 60L;
  #L28b706.  v8:= v2 @kind object;
  #L28b708.  call `<init>`(v8, v9, v10, v11, v13, v14, v15) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L28b70e.  v0.`com.bumptech.glide.l.a.r` @type ^`java.util.concurrent.ThreadPoolExecutor` := v2 @kind object;
  #L28b712.  v2:= new `com.bumptech.glide.l.a$a`;
  #L28b716.  call `<init>`(v2, v0) @signature `Lcom/bumptech/glide/l/a$a;.<init>:(Lcom/bumptech/glide/l/a;)V` @kind direct;
  #L28b71c.  v0.`com.bumptech.glide.l.a.s` @type ^`java.util.concurrent.Callable` := v2 @kind object;
  #L28b720.  v0.`com.bumptech.glide.l.a.f` @type ^`java.io.File` := v1 @kind object;
  #L28b724.  v2:= v18;
  #L28b728.  v0.`com.bumptech.glide.l.a.j` @type ^`int` := v2;
  #L28b72c.  v2:= new `java.io.File`;
  #L28b730.  v3:= "journal" @kind object;
  #L28b734.  call `<init>`(v2, v1, v3) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L28b73a.  v0.`com.bumptech.glide.l.a.g` @type ^`java.io.File` := v2 @kind object;
  #L28b73e.  v2:= new `java.io.File`;
  #L28b742.  v3:= "journal.tmp" @kind object;
  #L28b746.  call `<init>`(v2, v1, v3) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L28b74c.  v0.`com.bumptech.glide.l.a.h` @type ^`java.io.File` := v2 @kind object;
  #L28b750.  v2:= new `java.io.File`;
  #L28b754.  v3:= "journal.bkp" @kind object;
  #L28b758.  call `<init>`(v2, v1, v3) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L28b75e.  v0.`com.bumptech.glide.l.a.i` @type ^`java.io.File` := v2 @kind object;
  #L28b762.  v1:= v19;
  #L28b766.  v0.`com.bumptech.glide.l.a.l` @type ^`int` := v1;
  #L28b76a.  v1:= v20 @kind wide;
  #L28b76e.  v0.`com.bumptech.glide.l.a.k` @type ^`long` := v1 @kind wide;
  #L28b772.  return @kind void;
}
procedure `int` `a`(`com.bumptech.glide.l.a` v0 @kind object, `int` v1 ) @signature `Lcom/bumptech/glide/l/a;.a:(Lcom/bumptech/glide/l/a;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28b668.  v0.`com.bumptech.glide.l.a.p` @type ^`int` := v1;
  #L28b66c.  return v1;
}
procedure `com.bumptech.glide.l.a$c` `a`(`com.bumptech.glide.l.a` v5 @kind this, `java.lang.String` v6 @kind object, `long` v7 ) @signature `Lcom/bumptech/glide/l/a;.a:(Ljava/lang/String;J)Lcom/bumptech/glide/l/a$c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L28b44c.  @monitorenter v5
  #L28b44e.  call `a`(v5) @signature `Lcom/bumptech/glide/l/a;.a:()V` @kind direct;
  #L28b454.  v0:= v5.`com.bumptech.glide.l.a.o` @type ^`java.util.LinkedHashMap` @kind object;
  #L28b458.  call temp:= `get`(v0, v6) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28b45e.  v0:= temp @kind object;
  #L28b460.  v0:= (`com.bumptech.glide.l.a$d`) v0 @kind object;
  #L28b464.  v1:= -1L;
  #L28b468.  v3:= 0I;
  #L28b46a.  v4:= lcmp(v7, v1);
  #L28b46e.  if v4 == 0 then goto L28b48a;
  #L28b472.  if v0 == 0 then goto L28b486;
  #L28b476.  call temp:= `c`(v0) @signature `Lcom/bumptech/glide/l/a$d;.c:(Lcom/bumptech/glide/l/a$d;)J` @kind static;
  #L28b47c.  v1:= temp @kind wide;
  #L28b47e.  v4:= lcmp(v1, v7);
  #L28b482.  if v4 == 0 then goto L28b48a;
  #L28b486.  @monitorexit v5
  #L28b488.  return v3 @kind object;
  #L28b48a.  if v0 != 0 then goto L28b4a4;
  #L28b48e.  v0:= new `com.bumptech.glide.l.a$d`;
  #L28b492.  call `<init>`(v0, v5, v6, v3) @signature `Lcom/bumptech/glide/l/a$d;.<init>:(Lcom/bumptech/glide/l/a;Ljava/lang/String;Lcom/bumptech/glide/l/a$a;)V` @kind direct;
  #L28b498.  v7:= v5.`com.bumptech.glide.l.a.o` @type ^`java.util.LinkedHashMap` @kind object;
  #L28b49c.  call temp:= `put`(v7, v6, v0) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28b4a2.  goto L28b4b4;
  #L28b4a4.  call temp:= `e`(v0) @signature `Lcom/bumptech/glide/l/a$d;.e:(Lcom/bumptech/glide/l/a$d;)Lcom/bumptech/glide/l/a$c;` @kind static;
  #L28b4aa.  v7:= temp @kind object;
  #L28b4ac.  if v7 == 0 then goto L28b4b4;
  #L28b4b0.  @monitorexit v5
  #L28b4b2.  return v3 @kind object;
  #L28b4b4.  v7:= new `com.bumptech.glide.l.a$c`;
  #L28b4b8.  call `<init>`(v7, v5, v0, v3) @signature `Lcom/bumptech/glide/l/a$c;.<init>:(Lcom/bumptech/glide/l/a;Lcom/bumptech/glide/l/a$d;Lcom/bumptech/glide/l/a$a;)V` @kind direct;
  #L28b4be.  call temp:= `a`(v0, v7) @signature `Lcom/bumptech/glide/l/a$d;.a:(Lcom/bumptech/glide/l/a$d;Lcom/bumptech/glide/l/a$c;)Lcom/bumptech/glide/l/a$c;` @kind static;
  #L28b4c4.  v8:= v5.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28b4c8.  v0:= "DIRTY" @kind object;
  #L28b4cc.  call temp:= `append`(v8, v0) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L28b4d2.  v8:= v5.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28b4d6.  v0:= 32I;
  #L28b4da.  call temp:= `append`(v8, v0) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L28b4e0.  v8:= v5.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28b4e4.  call temp:= `append`(v8, v6) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L28b4ea.  v6:= v5.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28b4ee.  v8:= 10I;
  #L28b4f2.  call temp:= `append`(v6, v8) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L28b4f8.  v6:= v5.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28b4fc.  call `b`(v6) @signature `Lcom/bumptech/glide/l/a;.b:(Ljava/io/Writer;)V` @kind static;
  #L28b502.  @monitorexit v5
  #L28b504.  return v7 @kind object;
  #L28b506.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28b508.  @monitorexit v5
  #L28b50a.  throw v6;
  catch `java.lang.Throwable` @[L28b44e..L28b47e] goto L28b506;
  catch `java.lang.Throwable` @[L28b48e..L28b4ac] goto L28b506;
  catch `java.lang.Throwable` @[L28b4b4..L28b502] goto L28b506;
}
procedure `java.io.Writer` `a`(`com.bumptech.glide.l.a` v0 @kind object) @signature `Lcom/bumptech/glide/l/a;.a:(Lcom/bumptech/glide/l/a;)Ljava/io/Writer;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28b698.  v0:= v0.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28b69c.  return v0 @kind object;
}
procedure `void` `a`(`com.bumptech.glide.l.a` v2 @kind this) @signature `Lcom/bumptech/glide/l/a;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L28b7cc.  v0:= v2.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28b7d0.  if v0 == 0 then goto L28b7d6;
  #L28b7d4.  return @kind void;
  #L28b7d6.  v0:= new `java.lang.IllegalStateException`;
  #L28b7da.  v1:= "cache is closed" @kind object;
  #L28b7de.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28b7e4.  throw v0;
}
procedure `void` `a`(`com.bumptech.glide.l.a` v9 @kind this, `com.bumptech.glide.l.a$c` v10 @kind object, `boolean` v11 ) @signature `Lcom/bumptech/glide/l/a;.a:(Lcom/bumptech/glide/l/a$c;Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L28b90c.  @monitorenter v9
  #L28b90e.  call temp:= `a`(v10) @signature `Lcom/bumptech/glide/l/a$c;.a:(Lcom/bumptech/glide/l/a$c;)Lcom/bumptech/glide/l/a$d;` @kind static;
  #L28b914.  v0:= temp @kind object;
  #L28b916.  call temp:= `e`(v0) @signature `Lcom/bumptech/glide/l/a$d;.e:(Lcom/bumptech/glide/l/a$d;)Lcom/bumptech/glide/l/a$c;` @kind static;
  #L28b91c.  v1:= temp @kind object;
  #L28b91e.  if v1 != v10 then goto L28bb1c;
  #L28b922.  v1:= 0I;
  #L28b924.  if v11 == 0 then goto L28b9a6;
  #L28b928.  call temp:= `d`(v0) @signature `Lcom/bumptech/glide/l/a$d;.d:(Lcom/bumptech/glide/l/a$d;)Z` @kind static;
  #L28b92e.  v2:= temp;
  #L28b930.  if v2 != 0 then goto L28b9a6;
  #L28b934.  v2:= 0I;
  #L28b936.  v3:= v9.`com.bumptech.glide.l.a.l` @type ^`int`;
  #L28b93a.  if v2 >= v3 then goto L28b9a6;
  #L28b93e.  call temp:= `b`(v10) @signature `Lcom/bumptech/glide/l/a$c;.b:(Lcom/bumptech/glide/l/a$c;)[Z` @kind static;
  #L28b944.  v3:= temp @kind object;
  #L28b946.  v3:= v3[v2] @kind boolean;
  #L28b94a.  if v3 == 0 then goto L28b972;
  #L28b94e.  call temp:= `getDirtyFile`(v0, v2) @signature `Lcom/bumptech/glide/l/a$d;.getDirtyFile:(I)Ljava/io/File;` @kind virtual;
  #L28b954.  v3:= temp @kind object;
  #L28b956.  call temp:= `exists`(v3) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L28b95c.  v3:= temp;
  #L28b95e.  if v3 != 0 then goto L28b96c;
  #L28b962.  call `abort`(v10) @signature `Lcom/bumptech/glide/l/a$c;.abort:()V` @kind virtual;
  #L28b968.  @monitorexit v9
  #L28b96a.  return @kind void;
  #L28b96c.  v2:= v2 + 1;
  #L28b970.  goto L28b936;
  #L28b972.  call `abort`(v10) @signature `Lcom/bumptech/glide/l/a$c;.abort:()V` @kind virtual;
  #L28b978.  v10:= new `java.lang.IllegalStateException`;
  #L28b97c.  v11:= new `java.lang.StringBuilder`;
  #L28b980.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28b986.  v0:= "Newly created entry didn't create value for index " @kind object;
  #L28b98a.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28b990.  call temp:= `append`(v11, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L28b996.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28b99c.  v11:= temp @kind object;
  #L28b99e.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28b9a4.  throw v10;
  #L28b9a6.  v10:= v9.`com.bumptech.glide.l.a.l` @type ^`int`;
  #L28b9aa.  if v1 >= v10 then goto L28ba0e;
  #L28b9ae.  call temp:= `getDirtyFile`(v0, v1) @signature `Lcom/bumptech/glide/l/a$d;.getDirtyFile:(I)Ljava/io/File;` @kind virtual;
  #L28b9b4.  v10:= temp @kind object;
  #L28b9b6.  if v11 == 0 then goto L28ba02;
  #L28b9ba.  call temp:= `exists`(v10) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L28b9c0.  v2:= temp;
  #L28b9c2.  if v2 == 0 then goto L28ba08;
  #L28b9c6.  call temp:= `getCleanFile`(v0, v1) @signature `Lcom/bumptech/glide/l/a$d;.getCleanFile:(I)Ljava/io/File;` @kind virtual;
  #L28b9cc.  v2:= temp @kind object;
  #L28b9ce.  call temp:= `renameTo`(v10, v2) @signature `Ljava/io/File;.renameTo:(Ljava/io/File;)Z` @kind virtual;
  #L28b9d4.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/l/a$d;.a:(Lcom/bumptech/glide/l/a$d;)[J` @kind static;
  #L28b9da.  v10:= temp @kind object;
  #L28b9dc.  v3:= v10[v1] @kind wide;
  #L28b9e0.  call temp:= `length`(v2) @signature `Ljava/io/File;.length:()J` @kind virtual;
  #L28b9e6.  v5:= temp @kind wide;
  #L28b9e8.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/l/a$d;.a:(Lcom/bumptech/glide/l/a$d;)[J` @kind static;
  #L28b9ee.  v10:= temp @kind object;
  #L28b9f0.  v10[v1]:= v5 @kind wide;
  #L28b9f4.  v7:= v9.`com.bumptech.glide.l.a.m` @type ^`long` @kind wide;
  #L28b9f8.  v7:= v7 - v3 @kind long;
  #L28b9fa.  v7:= v7 + v5 @kind long;
  #L28b9fc.  v9.`com.bumptech.glide.l.a.m` @type ^`long` := v7 @kind wide;
  #L28ba00.  goto L28ba08;
  #L28ba02.  call `a`(v10) @signature `Lcom/bumptech/glide/l/a;.a:(Ljava/io/File;)V` @kind static;
  #L28ba08.  v1:= v1 + 1;
  #L28ba0c.  goto L28b9a6;
  #L28ba0e.  v10:= v9.`com.bumptech.glide.l.a.p` @type ^`int`;
  #L28ba12.  v1:= 1I;
  #L28ba14.  v10:= v10 + v1 @kind int;
  #L28ba16.  v9.`com.bumptech.glide.l.a.p` @type ^`int` := v10;
  #L28ba1a.  v10:= 0I;
  #L28ba1c.  call temp:= `a`(v0, v10) @signature `Lcom/bumptech/glide/l/a$d;.a:(Lcom/bumptech/glide/l/a$d;Lcom/bumptech/glide/l/a$c;)Lcom/bumptech/glide/l/a$c;` @kind static;
  #L28ba22.  call temp:= `d`(v0) @signature `Lcom/bumptech/glide/l/a$d;.d:(Lcom/bumptech/glide/l/a$d;)Z` @kind static;
  #L28ba28.  v10:= temp;
  #L28ba2a.  v10:= v10 ^| v11 @kind int;
  #L28ba2c.  v2:= 10I;
  #L28ba30.  v3:= 32I;
  #L28ba34.  if v10 == 0 then goto L28ba9e;
  #L28ba38.  call temp:= `a`(v0, v1) @signature `Lcom/bumptech/glide/l/a$d;.a:(Lcom/bumptech/glide/l/a$d;Z)Z` @kind static;
  #L28ba3e.  v10:= v9.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28ba42.  v1:= "CLEAN" @kind object;
  #L28ba46.  call temp:= `append`(v10, v1) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L28ba4c.  v10:= v9.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28ba50.  call temp:= `append`(v10, v3) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L28ba56.  v10:= v9.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28ba5a.  call temp:= `b`(v0) @signature `Lcom/bumptech/glide/l/a$d;.b:(Lcom/bumptech/glide/l/a$d;)Ljava/lang/String;` @kind static;
  #L28ba60.  v1:= temp @kind object;
  #L28ba62.  call temp:= `append`(v10, v1) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L28ba68.  v10:= v9.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28ba6c.  call temp:= `getLengths`(v0) @signature `Lcom/bumptech/glide/l/a$d;.getLengths:()Ljava/lang/String;` @kind virtual;
  #L28ba72.  v1:= temp @kind object;
  #L28ba74.  call temp:= `append`(v10, v1) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L28ba7a.  v10:= v9.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28ba7e.  call temp:= `append`(v10, v2) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L28ba84.  if v11 == 0 then goto L28bae4;
  #L28ba88.  v10:= v9.`com.bumptech.glide.l.a.q` @type ^`long` @kind wide;
  #L28ba8c.  v1:= 1L;
  #L28ba90.  v1:= v1 + v10 @kind long;
  #L28ba92.  v9.`com.bumptech.glide.l.a.q` @type ^`long` := v1 @kind wide;
  #L28ba96.  call temp:= `a`(v0, v10) @signature `Lcom/bumptech/glide/l/a$d;.a:(Lcom/bumptech/glide/l/a$d;J)J` @kind static;
  #L28ba9c.  goto L28bae4;
  #L28ba9e.  v10:= v9.`com.bumptech.glide.l.a.o` @type ^`java.util.LinkedHashMap` @kind object;
  #L28baa2.  call temp:= `b`(v0) @signature `Lcom/bumptech/glide/l/a$d;.b:(Lcom/bumptech/glide/l/a$d;)Ljava/lang/String;` @kind static;
  #L28baa8.  v11:= temp @kind object;
  #L28baaa.  call temp:= `remove`(v10, v11) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28bab0.  v10:= v9.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28bab4.  v11:= "REMOVE" @kind object;
  #L28bab8.  call temp:= `append`(v10, v11) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L28babe.  v10:= v9.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28bac2.  call temp:= `append`(v10, v3) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L28bac8.  v10:= v9.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28bacc.  call temp:= `b`(v0) @signature `Lcom/bumptech/glide/l/a$d;.b:(Lcom/bumptech/glide/l/a$d;)Ljava/lang/String;` @kind static;
  #L28bad2.  v11:= temp @kind object;
  #L28bad4.  call temp:= `append`(v10, v11) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L28bada.  v10:= v9.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28bade.  call temp:= `append`(v10, v2) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L28bae4.  v10:= v9.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28bae8.  call `b`(v10) @signature `Lcom/bumptech/glide/l/a;.b:(Ljava/io/Writer;)V` @kind static;
  #L28baee.  v10:= v9.`com.bumptech.glide.l.a.m` @type ^`long` @kind wide;
  #L28baf2.  v0:= v9.`com.bumptech.glide.l.a.k` @type ^`long` @kind wide;
  #L28baf6.  v2:= lcmp(v10, v0);
  #L28bafa.  if v2 > 0 then goto L28bb0a;
  #L28bafe.  call temp:= `b`(v9) @signature `Lcom/bumptech/glide/l/a;.b:()Z` @kind direct;
  #L28bb04.  v10:= temp;
  #L28bb06.  if v10 == 0 then goto L28bb18;
  #L28bb0a.  v10:= v9.`com.bumptech.glide.l.a.r` @type ^`java.util.concurrent.ThreadPoolExecutor` @kind object;
  #L28bb0e.  v11:= v9.`com.bumptech.glide.l.a.s` @type ^`java.util.concurrent.Callable` @kind object;
  #L28bb12.  call temp:= `submit`(v10, v11) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind virtual;
  #L28bb18.  @monitorexit v9
  #L28bb1a.  return @kind void;
  #L28bb1c.  v10:= new `java.lang.IllegalStateException`;
  #L28bb20.  call `<init>`(v10) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L28bb26.  throw v10;
  #L28bb28.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28bb2a.  @monitorexit v9
  #L28bb2c.  throw v10;
  catch `java.lang.Throwable` @[L28b90e..L28b968] goto L28bb28;
  catch `java.lang.Throwable` @[L28b972..L28bb18] goto L28bb28;
  catch `java.lang.Throwable` @[L28bb1c..L28bb28] goto L28bb28;
}
procedure `void` `a`(`com.bumptech.glide.l.a` v0 @kind object, `com.bumptech.glide.l.a$c` v1 @kind object, `boolean` v2 ) @signature `Lcom/bumptech/glide/l/a;.a:(Lcom/bumptech/glide/l/a;Lcom/bumptech/glide/l/a$c;Z)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28b79c.  call `a`(v0, v1, v2) @signature `Lcom/bumptech/glide/l/a;.a:(Lcom/bumptech/glide/l/a$c;Z)V` @kind direct;
  #L28b7a2.  return @kind void;
}
procedure `void` `a`(`java.io.File` v1 @kind object) @signature `Lcom/bumptech/glide/l/a;.a:(Ljava/io/File;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L28bb80.  call temp:= `exists`(v1) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L28bb86.  v0:= temp;
  #L28bb88.  if v0 == 0 then goto L28bba6;
  #L28bb8c.  call temp:= `delete`(v1) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L28bb92.  v1:= temp;
  #L28bb94.  if v1 == 0 then goto L28bb9a;
  #L28bb98.  goto L28bba6;
  #L28bb9a.  v1:= new `java.io.IOException`;
  #L28bb9e.  call `<init>`(v1) @signature `Ljava/io/IOException;.<init>:()V` @kind direct;
  #L28bba4.  throw v1;
  #L28bba6.  return @kind void;
}
procedure `void` `a`(`java.io.File` v0 @kind object, `java.io.File` v1 @kind object, `boolean` v2 ) @signature `Lcom/bumptech/glide/l/a;.a:(Ljava/io/File;Ljava/io/File;Z)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L28c220.  if v2 == 0 then goto L28c22a;
  #L28c224.  call `a`(v1) @signature `Lcom/bumptech/glide/l/a;.a:(Ljava/io/File;)V` @kind static;
  #L28c22a.  call temp:= `renameTo`(v0, v1) @signature `Ljava/io/File;.renameTo:(Ljava/io/File;)Z` @kind virtual;
  #L28c230.  v0:= temp;
  #L28c232.  if v0 == 0 then goto L28c238;
  #L28c236.  return @kind void;
  #L28c238.  v0:= new `java.io.IOException`;
  #L28c23c.  call `<init>`(v0) @signature `Ljava/io/IOException;.<init>:()V` @kind direct;
  #L28c242.  throw v0;
}
procedure `void` `a`(`java.io.Writer` v2 @kind object) @signature `Lcom/bumptech/glide/l/a;.a:(Ljava/io/Writer;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L28b89c.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L28b8a0.  v1:= 26I;
  #L28b8a4.  if v0 >= v1 then goto L28b8b0;
  #L28b8a8.  call `close`(v2) @signature `Ljava/io/Writer;.close:()V` @kind virtual;
  #L28b8ae.  return @kind void;
  #L28b8b0.  call temp:= `getThreadPolicy`() @signature `Landroid/os/StrictMode;.getThreadPolicy:()Landroid/os/StrictMode$ThreadPolicy;` @kind static;
  #L28b8b6.  v0:= temp @kind object;
  #L28b8b8.  v1:= new `android.os.StrictMode$ThreadPolicy$Builder`;
  #L28b8bc.  call `<init>`(v1, v0) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.<init>:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind direct;
  #L28b8c2.  call temp:= `permitUnbufferedIo`(v1) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.permitUnbufferedIo:()Landroid/os/StrictMode$ThreadPolicy$Builder;` @kind virtual;
  #L28b8c8.  v1:= temp @kind object;
  #L28b8ca.  call temp:= `build`(v1) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.build:()Landroid/os/StrictMode$ThreadPolicy;` @kind virtual;
  #L28b8d0.  v1:= temp @kind object;
  #L28b8d2.  call `setThreadPolicy`(v1) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L28b8d8.  call `close`(v2) @signature `Ljava/io/Writer;.close:()V` @kind virtual;
  #L28b8de.  call `setThreadPolicy`(v0) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L28b8e4.  return @kind void;
  #L28b8e6.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28b8e8.  call `setThreadPolicy`(v0) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L28b8ee.  throw v2;
  catch `java.lang.Throwable` @[L28b8d8..L28b8de] goto L28b8e6;
}
procedure `void` `a`(`com.bumptech.glide.l.a` v8 @kind this, `java.lang.String` v9 @kind object) @signature `Lcom/bumptech/glide/l/a;.a:(Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L28be98.  v0:= 32I;
  #L28be9c.  call temp:= `indexOf`(v9, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L28bea2.  v1:= temp;
  #L28bea4.  v2:= "unexpected journal line: " @kind object;
  #L28bea8.  v3:= -1I;
  #L28beaa.  if v1 == v3 then goto L28bfd0;
  #L28beae.  v4:= v1 + 1;
  #L28beb2.  call temp:= `indexOf`(v9, v0, v4) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L28beb8.  v0:= temp;
  #L28beba.  if v0 != v3 then goto L28bee8;
  #L28bebe.  call temp:= `substring`(v9, v4) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L28bec4.  v4:= temp @kind object;
  #L28bec6.  v5:= 6I;
  #L28bec8.  if v1 != v5 then goto L28bef0;
  #L28becc.  v5:= "REMOVE" @kind object;
  #L28bed0.  call temp:= `startsWith`(v9, v5) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L28bed6.  v5:= temp;
  #L28bed8.  if v5 == 0 then goto L28bef0;
  #L28bedc.  v9:= v8.`com.bumptech.glide.l.a.o` @type ^`java.util.LinkedHashMap` @kind object;
  #L28bee0.  call temp:= `remove`(v9, v4) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28bee6.  return @kind void;
  #L28bee8.  call temp:= `substring`(v9, v4, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L28beee.  v4:= temp @kind object;
  #L28bef0.  v5:= v8.`com.bumptech.glide.l.a.o` @type ^`java.util.LinkedHashMap` @kind object;
  #L28bef4.  call temp:= `get`(v5, v4) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28befa.  v5:= temp @kind object;
  #L28befc.  v5:= (`com.bumptech.glide.l.a$d`) v5 @kind object;
  #L28bf00.  v6:= 0I;
  #L28bf02.  if v5 != 0 then goto L28bf1a;
  #L28bf06.  v5:= new `com.bumptech.glide.l.a$d`;
  #L28bf0a.  call `<init>`(v5, v8, v4, v6) @signature `Lcom/bumptech/glide/l/a$d;.<init>:(Lcom/bumptech/glide/l/a;Ljava/lang/String;Lcom/bumptech/glide/l/a$a;)V` @kind direct;
  #L28bf10.  v7:= v8.`com.bumptech.glide.l.a.o` @type ^`java.util.LinkedHashMap` @kind object;
  #L28bf14.  call temp:= `put`(v7, v4, v5) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28bf1a.  v4:= 5I;
  #L28bf1c.  if v0 == v3 then goto L28bf60;
  #L28bf20.  if v1 != v4 then goto L28bf60;
  #L28bf24.  v7:= "CLEAN" @kind object;
  #L28bf28.  call temp:= `startsWith`(v9, v7) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L28bf2e.  v7:= temp;
  #L28bf30.  if v7 == 0 then goto L28bf60;
  #L28bf34.  v1:= 1I;
  #L28bf36.  v0:= v0 + v1 @kind int;
  #L28bf38.  call temp:= `substring`(v9, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L28bf3e.  v9:= temp @kind object;
  #L28bf40.  v0:= " " @kind object;
  #L28bf44.  call temp:= `split`(v9, v0) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L28bf4a.  v9:= temp @kind object;
  #L28bf4c.  call temp:= `a`(v5, v1) @signature `Lcom/bumptech/glide/l/a$d;.a:(Lcom/bumptech/glide/l/a$d;Z)Z` @kind static;
  #L28bf52.  call temp:= `a`(v5, v6) @signature `Lcom/bumptech/glide/l/a$d;.a:(Lcom/bumptech/glide/l/a$d;Lcom/bumptech/glide/l/a$c;)Lcom/bumptech/glide/l/a$c;` @kind static;
  #L28bf58.  call `a`(v5, v9) @signature `Lcom/bumptech/glide/l/a$d;.a:(Lcom/bumptech/glide/l/a$d;[Ljava/lang/String;)V` @kind static;
  #L28bf5e.  goto L28bfa4;
  #L28bf60.  if v0 != v3 then goto L28bf8a;
  #L28bf64.  if v1 != v4 then goto L28bf8a;
  #L28bf68.  v4:= "DIRTY" @kind object;
  #L28bf6c.  call temp:= `startsWith`(v9, v4) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L28bf72.  v4:= temp;
  #L28bf74.  if v4 == 0 then goto L28bf8a;
  #L28bf78.  v9:= new `com.bumptech.glide.l.a$c`;
  #L28bf7c.  call `<init>`(v9, v8, v5, v6) @signature `Lcom/bumptech/glide/l/a$c;.<init>:(Lcom/bumptech/glide/l/a;Lcom/bumptech/glide/l/a$d;Lcom/bumptech/glide/l/a$a;)V` @kind direct;
  #L28bf82.  call temp:= `a`(v5, v9) @signature `Lcom/bumptech/glide/l/a$d;.a:(Lcom/bumptech/glide/l/a$d;Lcom/bumptech/glide/l/a$c;)Lcom/bumptech/glide/l/a$c;` @kind static;
  #L28bf88.  goto L28bfa4;
  #L28bf8a.  if v0 != v3 then goto L28bfa6;
  #L28bf8e.  v0:= 4I;
  #L28bf90.  if v1 != v0 then goto L28bfa6;
  #L28bf94.  v0:= "READ" @kind object;
  #L28bf98.  call temp:= `startsWith`(v9, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L28bf9e.  v0:= temp;
  #L28bfa0.  if v0 == 0 then goto L28bfa6;
  #L28bfa4.  return @kind void;
  #L28bfa6.  v0:= new `java.io.IOException`;
  #L28bfaa.  v1:= new `java.lang.StringBuilder`;
  #L28bfae.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28bfb4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28bfba.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28bfc0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28bfc6.  v9:= temp @kind object;
  #L28bfc8.  call `<init>`(v0, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28bfce.  throw v0;
  #L28bfd0.  v0:= new `java.io.IOException`;
  #L28bfd4.  v1:= new `java.lang.StringBuilder`;
  #L28bfd8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28bfde.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28bfe4.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28bfea.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28bff0.  v9:= temp @kind object;
  #L28bff2.  call `<init>`(v0, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28bff8.  throw v0;
}
procedure `int` `b`(`com.bumptech.glide.l.a` v0 @kind object) @signature `Lcom/bumptech/glide/l/a;.b:(Lcom/bumptech/glide/l/a;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28b650.  v0:= v0.`com.bumptech.glide.l.a.l` @type ^`int`;
  #L28b654.  return v0;
}
procedure `void` `b`(`java.io.Writer` v2 @kind object) @signature `Lcom/bumptech/glide/l/a;.b:(Ljava/io/Writer;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L28bbb8.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L28bbbc.  v1:= 26I;
  #L28bbc0.  if v0 >= v1 then goto L28bbcc;
  #L28bbc4.  call `flush`(v2) @signature `Ljava/io/Writer;.flush:()V` @kind virtual;
  #L28bbca.  return @kind void;
  #L28bbcc.  call temp:= `getThreadPolicy`() @signature `Landroid/os/StrictMode;.getThreadPolicy:()Landroid/os/StrictMode$ThreadPolicy;` @kind static;
  #L28bbd2.  v0:= temp @kind object;
  #L28bbd4.  v1:= new `android.os.StrictMode$ThreadPolicy$Builder`;
  #L28bbd8.  call `<init>`(v1, v0) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.<init>:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind direct;
  #L28bbde.  call temp:= `permitUnbufferedIo`(v1) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.permitUnbufferedIo:()Landroid/os/StrictMode$ThreadPolicy$Builder;` @kind virtual;
  #L28bbe4.  v1:= temp @kind object;
  #L28bbe6.  call temp:= `build`(v1) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.build:()Landroid/os/StrictMode$ThreadPolicy;` @kind virtual;
  #L28bbec.  v1:= temp @kind object;
  #L28bbee.  call `setThreadPolicy`(v1) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L28bbf4.  call `flush`(v2) @signature `Ljava/io/Writer;.flush:()V` @kind virtual;
  #L28bbfa.  call `setThreadPolicy`(v0) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L28bc00.  return @kind void;
  #L28bc02.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28bc04.  call `setThreadPolicy`(v0) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L28bc0a.  throw v2;
  catch `java.lang.Throwable` @[L28bbf4..L28bbfa] goto L28bc02;
}
procedure `boolean` `b`(`com.bumptech.glide.l.a` v2 @kind this) @signature `Lcom/bumptech/glide/l/a;.b:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L28b178.  v0:= v2.`com.bumptech.glide.l.a.p` @type ^`int`;
  #L28b17c.  v1:= 2000I;
  #L28b180.  if v0 < v1 then goto L28b198;
  #L28b184.  v1:= v2.`com.bumptech.glide.l.a.o` @type ^`java.util.LinkedHashMap` @kind object;
  #L28b188.  call temp:= `size`(v1) @signature `Ljava/util/LinkedHashMap;.size:()I` @kind virtual;
  #L28b18e.  v1:= temp;
  #L28b190.  if v0 < v1 then goto L28b198;
  #L28b194.  v0:= 1I;
  #L28b196.  goto L28b19a;
  #L28b198.  v0:= 0I;
  #L28b19a.  return v0;
}
procedure `void` `c`(`com.bumptech.glide.l.a` v8 @kind this) @signature `Lcom/bumptech/glide/l/a;.c:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L28bc28.  v0:= v8.`com.bumptech.glide.l.a.h` @type ^`java.io.File` @kind object;
  #L28bc2c.  call `a`(v0) @signature `Lcom/bumptech/glide/l/a;.a:(Ljava/io/File;)V` @kind static;
  #L28bc32.  v0:= v8.`com.bumptech.glide.l.a.o` @type ^`java.util.LinkedHashMap` @kind object;
  #L28bc36.  call temp:= `values`(v0) @signature `Ljava/util/LinkedHashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L28bc3c.  v0:= temp @kind object;
  #L28bc3e.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L28bc44.  v0:= temp @kind object;
  #L28bc46.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L28bc4c.  v1:= temp;
  #L28bc4e.  if v1 == 0 then goto L28bcca;
  #L28bc52.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L28bc58.  v1:= temp @kind object;
  #L28bc5a.  v1:= (`com.bumptech.glide.l.a$d`) v1 @kind object;
  #L28bc5e.  call temp:= `e`(v1) @signature `Lcom/bumptech/glide/l/a$d;.e:(Lcom/bumptech/glide/l/a$d;)Lcom/bumptech/glide/l/a$c;` @kind static;
  #L28bc64.  v2:= temp @kind object;
  #L28bc66.  v3:= 0I;
  #L28bc68.  if v2 != 0 then goto L28bc90;
  #L28bc6c.  v2:= v8.`com.bumptech.glide.l.a.l` @type ^`int`;
  #L28bc70.  if v3 >= v2 then goto L28bc46;
  #L28bc74.  v4:= v8.`com.bumptech.glide.l.a.m` @type ^`long` @kind wide;
  #L28bc78.  call temp:= `a`(v1) @signature `Lcom/bumptech/glide/l/a$d;.a:(Lcom/bumptech/glide/l/a$d;)[J` @kind static;
  #L28bc7e.  v2:= temp @kind object;
  #L28bc80.  v6:= v2[v3] @kind wide;
  #L28bc84.  v4:= v4 + v6 @kind long;
  #L28bc86.  v8.`com.bumptech.glide.l.a.m` @type ^`long` := v4 @kind wide;
  #L28bc8a.  v3:= v3 + 1;
  #L28bc8e.  goto L28bc6c;
  #L28bc90.  v2:= 0I;
  #L28bc92.  call temp:= `a`(v1, v2) @signature `Lcom/bumptech/glide/l/a$d;.a:(Lcom/bumptech/glide/l/a$d;Lcom/bumptech/glide/l/a$c;)Lcom/bumptech/glide/l/a$c;` @kind static;
  #L28bc98.  v2:= v8.`com.bumptech.glide.l.a.l` @type ^`int`;
  #L28bc9c.  if v3 >= v2 then goto L28bcc2;
  #L28bca0.  call temp:= `getCleanFile`(v1, v3) @signature `Lcom/bumptech/glide/l/a$d;.getCleanFile:(I)Ljava/io/File;` @kind virtual;
  #L28bca6.  v2:= temp @kind object;
  #L28bca8.  call `a`(v2) @signature `Lcom/bumptech/glide/l/a;.a:(Ljava/io/File;)V` @kind static;
  #L28bcae.  call temp:= `getDirtyFile`(v1, v3) @signature `Lcom/bumptech/glide/l/a$d;.getDirtyFile:(I)Ljava/io/File;` @kind virtual;
  #L28bcb4.  v2:= temp @kind object;
  #L28bcb6.  call `a`(v2) @signature `Lcom/bumptech/glide/l/a;.a:(Ljava/io/File;)V` @kind static;
  #L28bcbc.  v3:= v3 + 1;
  #L28bcc0.  goto L28bc98;
  #L28bcc2.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L28bcc8.  goto L28bc46;
  #L28bcca.  return @kind void;
}
procedure `void` `c`(`com.bumptech.glide.l.a` v0 @kind object) @signature `Lcom/bumptech/glide/l/a;.c:(Lcom/bumptech/glide/l/a;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28b784.  call `f`(v0) @signature `Lcom/bumptech/glide/l/a;.f:()V` @kind direct;
  #L28b78a.  return @kind void;
}
procedure `java.io.File` `d`(`com.bumptech.glide.l.a` v0 @kind object) @signature `Lcom/bumptech/glide/l/a;.d:(Lcom/bumptech/glide/l/a;)Ljava/io/File;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28b680.  v0:= v0.`com.bumptech.glide.l.a.f` @type ^`java.io.File` @kind object;
  #L28b684.  return v0 @kind object;
}
procedure `void` `d`(`com.bumptech.glide.l.a` v9 @kind this) @signature `Lcom/bumptech/glide/l/a;.d:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L28bcdc.  v0:= ", " @kind object;
  #L28bce0.  v1:= new `com.bumptech.glide.l.b`;
  #L28bce4.  v2:= new `java.io.FileInputStream`;
  #L28bce8.  v3:= v9.`com.bumptech.glide.l.a.g` @type ^`java.io.File` @kind object;
  #L28bcec.  call `<init>`(v2, v3) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L28bcf2.  v3:= `@@com.bumptech.glide.l.c.a` @type ^`java.nio.charset.Charset` @kind object;
  #L28bcf6.  call `<init>`(v1, v2, v3) @signature `Lcom/bumptech/glide/l/b;.<init>:(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V` @kind direct;
  #L28bcfc.  call temp:= `readLine`(v1) @signature `Lcom/bumptech/glide/l/b;.readLine:()Ljava/lang/String;` @kind virtual;
  #L28bd02.  v2:= temp @kind object;
  #L28bd04.  call temp:= `readLine`(v1) @signature `Lcom/bumptech/glide/l/b;.readLine:()Ljava/lang/String;` @kind virtual;
  #L28bd0a.  v3:= temp @kind object;
  #L28bd0c.  call temp:= `readLine`(v1) @signature `Lcom/bumptech/glide/l/b;.readLine:()Ljava/lang/String;` @kind virtual;
  #L28bd12.  v4:= temp @kind object;
  #L28bd14.  call temp:= `readLine`(v1) @signature `Lcom/bumptech/glide/l/b;.readLine:()Ljava/lang/String;` @kind virtual;
  #L28bd1a.  v5:= temp @kind object;
  #L28bd1c.  call temp:= `readLine`(v1) @signature `Lcom/bumptech/glide/l/b;.readLine:()Ljava/lang/String;` @kind virtual;
  #L28bd22.  v6:= temp @kind object;
  #L28bd24.  v7:= "libcore.io.DiskLruCache" @kind object;
  #L28bd28.  call temp:= `equals`(v7, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L28bd2e.  v7:= temp;
  #L28bd30.  if v7 == 0 then goto L28bdf4;
  #L28bd34.  v7:= "1" @kind object;
  #L28bd38.  call temp:= `equals`(v7, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L28bd3e.  v7:= temp;
  #L28bd40.  if v7 == 0 then goto L28bdf4;
  #L28bd44.  v7:= v9.`com.bumptech.glide.l.a.j` @type ^`int`;
  #L28bd48.  call temp:= `toString`(v7) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L28bd4e.  v7:= temp @kind object;
  #L28bd50.  call temp:= `equals`(v7, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L28bd56.  v4:= temp;
  #L28bd58.  if v4 == 0 then goto L28bdf4;
  #L28bd5c.  v4:= v9.`com.bumptech.glide.l.a.l` @type ^`int`;
  #L28bd60.  call temp:= `toString`(v4) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L28bd66.  v4:= temp @kind object;
  #L28bd68.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L28bd6e.  v4:= temp;
  #L28bd70.  if v4 == 0 then goto L28bdf4;
  #L28bd74.  v4:= "" @kind object;
  #L28bd78.  call temp:= `equals`(v4, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L28bd7e.  v4:= temp;
  #L28bd80.  if v4 == 0 then goto L28bdf4;
  #L28bd84.  v0:= 0I;
  #L28bd86.  call temp:= `readLine`(v1) @signature `Lcom/bumptech/glide/l/b;.readLine:()Ljava/lang/String;` @kind virtual;
  #L28bd8c.  v2:= temp @kind object;
  #L28bd8e.  call `a`(v9, v2) @signature `Lcom/bumptech/glide/l/a;.a:(Ljava/lang/String;)V` @kind direct;
  #L28bd94.  v0:= v0 + 1;
  #L28bd98.  goto L28bd86;
  #L28bd9a.  v2:= v9.`com.bumptech.glide.l.a.o` @type ^`java.util.LinkedHashMap` @kind object;
  #L28bd9e.  call temp:= `size`(v2) @signature `Ljava/util/LinkedHashMap;.size:()I` @kind virtual;
  #L28bda4.  v2:= temp;
  #L28bda6.  v0:= v0 - v2 @kind int;
  #L28bda8.  v9.`com.bumptech.glide.l.a.p` @type ^`int` := v0;
  #L28bdac.  call temp:= `hasUnterminatedLine`(v1) @signature `Lcom/bumptech/glide/l/b;.hasUnterminatedLine:()Z` @kind virtual;
  #L28bdb2.  v0:= temp;
  #L28bdb4.  if v0 == 0 then goto L28bdc0;
  #L28bdb8.  call `e`(v9) @signature `Lcom/bumptech/glide/l/a;.e:()V` @kind direct;
  #L28bdbe.  goto L28bdec;
  #L28bdc0.  v0:= new `java.io.BufferedWriter`;
  #L28bdc4.  v2:= new `java.io.OutputStreamWriter`;
  #L28bdc8.  v3:= new `java.io.FileOutputStream`;
  #L28bdcc.  v4:= v9.`com.bumptech.glide.l.a.g` @type ^`java.io.File` @kind object;
  #L28bdd0.  v5:= 1I;
  #L28bdd2.  call `<init>`(v3, v4, v5) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;Z)V` @kind direct;
  #L28bdd8.  v4:= `@@com.bumptech.glide.l.c.a` @type ^`java.nio.charset.Charset` @kind object;
  #L28bddc.  call `<init>`(v2, v3, v4) @signature `Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V` @kind direct;
  #L28bde2.  call `<init>`(v0, v2) @signature `Ljava/io/BufferedWriter;.<init>:(Ljava/io/Writer;)V` @kind direct;
  #L28bde8.  v9.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` := v0 @kind object;
  #L28bdec.  call `a`(v1) @signature `Lcom/bumptech/glide/l/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L28bdf2.  return @kind void;
  #L28bdf4.  v4:= new `java.io.IOException`;
  #L28bdf8.  v7:= new `java.lang.StringBuilder`;
  #L28bdfc.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28be02.  v8:= "unexpected journal header: [" @kind object;
  #L28be06.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28be0c.  call temp:= `append`(v7, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28be12.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28be18.  call temp:= `append`(v7, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28be1e.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28be24.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28be2a.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28be30.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28be36.  v0:= "]" @kind object;
  #L28be3a.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28be40.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28be46.  v0:= temp @kind object;
  #L28be48.  call `<init>`(v4, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28be4e.  throw v4;
  #L28be50.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28be52.  call `a`(v1) @signature `Lcom/bumptech/glide/l/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L28be58.  throw v0;
  catch `java.lang.Throwable` @[L28bcfc..L28bd80] goto L28be50;
  catch `java.io.EOFException` @[L28bd86..L28bd94] goto L28bd9a;
  catch `java.lang.Throwable` @[L28bd86..L28bd94] goto L28be50;
  catch `java.lang.Throwable` @[L28bd9a..L28bdec] goto L28be50;
  catch `java.lang.Throwable` @[L28bdf4..L28be50] goto L28be50;
}
procedure `void` `e`(`com.bumptech.glide.l.a` v6 @kind this) @signature `Lcom/bumptech/glide/l/a;.e:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L28c00c.  @monitorenter v6
  #L28c00e.  v0:= v6.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28c012.  if v0 == 0 then goto L28c020;
  #L28c016.  v0:= v6.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28c01a.  call `a`(v0) @signature `Lcom/bumptech/glide/l/a;.a:(Ljava/io/Writer;)V` @kind static;
  #L28c020.  v0:= new `java.io.BufferedWriter`;
  #L28c024.  v1:= new `java.io.OutputStreamWriter`;
  #L28c028.  v2:= new `java.io.FileOutputStream`;
  #L28c02c.  v3:= v6.`com.bumptech.glide.l.a.h` @type ^`java.io.File` @kind object;
  #L28c030.  call `<init>`(v2, v3) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L28c036.  v3:= `@@com.bumptech.glide.l.c.a` @type ^`java.nio.charset.Charset` @kind object;
  #L28c03a.  call `<init>`(v1, v2, v3) @signature `Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V` @kind direct;
  #L28c040.  call `<init>`(v0, v1) @signature `Ljava/io/BufferedWriter;.<init>:(Ljava/io/Writer;)V` @kind direct;
  #L28c046.  v1:= "libcore.io.DiskLruCache" @kind object;
  #L28c04a.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L28c050.  v1:= "\n" @kind object;
  #L28c054.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L28c05a.  v1:= "1" @kind object;
  #L28c05e.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L28c064.  v1:= "\n" @kind object;
  #L28c068.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L28c06e.  v1:= v6.`com.bumptech.glide.l.a.j` @type ^`int`;
  #L28c072.  call temp:= `toString`(v1) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L28c078.  v1:= temp @kind object;
  #L28c07a.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L28c080.  v1:= "\n" @kind object;
  #L28c084.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L28c08a.  v1:= v6.`com.bumptech.glide.l.a.l` @type ^`int`;
  #L28c08e.  call temp:= `toString`(v1) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L28c094.  v1:= temp @kind object;
  #L28c096.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L28c09c.  v1:= "\n" @kind object;
  #L28c0a0.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L28c0a6.  v1:= "\n" @kind object;
  #L28c0aa.  call `write`(v0, v1) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L28c0b0.  v1:= v6.`com.bumptech.glide.l.a.o` @type ^`java.util.LinkedHashMap` @kind object;
  #L28c0b4.  call temp:= `values`(v1) @signature `Ljava/util/LinkedHashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L28c0ba.  v1:= temp @kind object;
  #L28c0bc.  call temp:= `iterator`(v1) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L28c0c2.  v1:= temp @kind object;
  #L28c0c4.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L28c0ca.  v2:= temp;
  #L28c0cc.  if v2 == 0 then goto L28c16a;
  #L28c0d0.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L28c0d6.  v2:= temp @kind object;
  #L28c0d8.  v2:= (`com.bumptech.glide.l.a$d`) v2 @kind object;
  #L28c0dc.  call temp:= `e`(v2) @signature `Lcom/bumptech/glide/l/a$d;.e:(Lcom/bumptech/glide/l/a$d;)Lcom/bumptech/glide/l/a$c;` @kind static;
  #L28c0e2.  v3:= temp @kind object;
  #L28c0e4.  v4:= 10I;
  #L28c0e8.  if v3 == 0 then goto L28c124;
  #L28c0ec.  v3:= new `java.lang.StringBuilder`;
  #L28c0f0.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28c0f6.  v5:= "DIRTY " @kind object;
  #L28c0fa.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28c100.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/l/a$d;.b:(Lcom/bumptech/glide/l/a$d;)Ljava/lang/String;` @kind static;
  #L28c106.  v2:= temp @kind object;
  #L28c108.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28c10e.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L28c114.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28c11a.  v2:= temp @kind object;
  #L28c11c.  call `write`(v0, v2) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L28c122.  goto L28c0c4;
  #L28c124.  v3:= new `java.lang.StringBuilder`;
  #L28c128.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28c12e.  v5:= "CLEAN " @kind object;
  #L28c132.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28c138.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/l/a$d;.b:(Lcom/bumptech/glide/l/a$d;)Ljava/lang/String;` @kind static;
  #L28c13e.  v5:= temp @kind object;
  #L28c140.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28c146.  call temp:= `getLengths`(v2) @signature `Lcom/bumptech/glide/l/a$d;.getLengths:()Ljava/lang/String;` @kind virtual;
  #L28c14c.  v2:= temp @kind object;
  #L28c14e.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28c154.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L28c15a.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28c160.  v2:= temp @kind object;
  #L28c162.  call `write`(v0, v2) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L28c168.  goto L28c0c4;
  #L28c16a.  call `a`(v0) @signature `Lcom/bumptech/glide/l/a;.a:(Ljava/io/Writer;)V` @kind static;
  #L28c170.  v0:= v6.`com.bumptech.glide.l.a.g` @type ^`java.io.File` @kind object;
  #L28c174.  call temp:= `exists`(v0) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L28c17a.  v0:= temp;
  #L28c17c.  v1:= 1I;
  #L28c17e.  if v0 == 0 then goto L28c190;
  #L28c182.  v0:= v6.`com.bumptech.glide.l.a.g` @type ^`java.io.File` @kind object;
  #L28c186.  v2:= v6.`com.bumptech.glide.l.a.i` @type ^`java.io.File` @kind object;
  #L28c18a.  call `a`(v0, v2, v1) @signature `Lcom/bumptech/glide/l/a;.a:(Ljava/io/File;Ljava/io/File;Z)V` @kind static;
  #L28c190.  v0:= v6.`com.bumptech.glide.l.a.h` @type ^`java.io.File` @kind object;
  #L28c194.  v2:= v6.`com.bumptech.glide.l.a.g` @type ^`java.io.File` @kind object;
  #L28c198.  v3:= 0I;
  #L28c19a.  call `a`(v0, v2, v3) @signature `Lcom/bumptech/glide/l/a;.a:(Ljava/io/File;Ljava/io/File;Z)V` @kind static;
  #L28c1a0.  v0:= v6.`com.bumptech.glide.l.a.i` @type ^`java.io.File` @kind object;
  #L28c1a4.  call temp:= `delete`(v0) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L28c1aa.  v0:= new `java.io.BufferedWriter`;
  #L28c1ae.  v2:= new `java.io.OutputStreamWriter`;
  #L28c1b2.  v3:= new `java.io.FileOutputStream`;
  #L28c1b6.  v4:= v6.`com.bumptech.glide.l.a.g` @type ^`java.io.File` @kind object;
  #L28c1ba.  call `<init>`(v3, v4, v1) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;Z)V` @kind direct;
  #L28c1c0.  v1:= `@@com.bumptech.glide.l.c.a` @type ^`java.nio.charset.Charset` @kind object;
  #L28c1c4.  call `<init>`(v2, v3, v1) @signature `Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V` @kind direct;
  #L28c1ca.  call `<init>`(v0, v2) @signature `Ljava/io/BufferedWriter;.<init>:(Ljava/io/Writer;)V` @kind direct;
  #L28c1d0.  v6.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` := v0 @kind object;
  #L28c1d4.  @monitorexit v6
  #L28c1d6.  return @kind void;
  #L28c1d8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28c1da.  call `a`(v0) @signature `Lcom/bumptech/glide/l/a;.a:(Ljava/io/Writer;)V` @kind static;
  #L28c1e0.  throw v1;
  #L28c1e2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28c1e4.  @monitorexit v6
  #L28c1e6.  throw v0;
  catch `java.lang.Throwable` @[L28c00e..L28c046] goto L28c1e2;
  catch `java.lang.Throwable` @[L28c046..L28c168] goto L28c1d8;
  catch `java.lang.Throwable` @[L28c16a..L28c1d4] goto L28c1e2;
  catch `java.lang.Throwable` @[L28c1da..L28c1e2] goto L28c1e2;
}
procedure `boolean` `e`(`com.bumptech.glide.l.a` v0 @kind object) @signature `Lcom/bumptech/glide/l/a;.e:(Lcom/bumptech/glide/l/a;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28b15c.  call temp:= `b`(v0) @signature `Lcom/bumptech/glide/l/a;.b:()Z` @kind direct;
  #L28b162.  v0:= temp;
  #L28b164.  return v0;
}
procedure `void` `f`(`com.bumptech.glide.l.a` v5 @kind this) @signature `Lcom/bumptech/glide/l/a;.f:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L28c254.  v0:= v5.`com.bumptech.glide.l.a.m` @type ^`long` @kind wide;
  #L28c258.  v2:= v5.`com.bumptech.glide.l.a.k` @type ^`long` @kind wide;
  #L28c25c.  v4:= lcmp(v0, v2);
  #L28c260.  if v4 <= 0 then goto L28c298;
  #L28c264.  v0:= v5.`com.bumptech.glide.l.a.o` @type ^`java.util.LinkedHashMap` @kind object;
  #L28c268.  call temp:= `entrySet`(v0) @signature `Ljava/util/LinkedHashMap;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L28c26e.  v0:= temp @kind object;
  #L28c270.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L28c276.  v0:= temp @kind object;
  #L28c278.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L28c27e.  v0:= temp @kind object;
  #L28c280.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L28c284.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L28c28a.  v0:= temp @kind object;
  #L28c28c.  v0:= (`java.lang.String`) v0 @kind object;
  #L28c290.  call temp:= `remove`(v5, v0) @signature `Lcom/bumptech/glide/l/a;.remove:(Ljava/lang/String;)Z` @kind virtual;
  #L28c296.  goto L28c254;
  #L28c298.  return @kind void;
}
procedure `void` `f`(`com.bumptech.glide.l.a` v0 @kind object) @signature `Lcom/bumptech/glide/l/a;.f:(Lcom/bumptech/glide/l/a;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28b7b4.  call `e`(v0) @signature `Lcom/bumptech/glide/l/a;.e:()V` @kind direct;
  #L28b7ba.  return @kind void;
}
procedure `com.bumptech.glide.l.a` `open`(`java.io.File` v9 @kind object, `int` v10 , `int` v11 , `long` v12 ) @signature `Lcom/bumptech/glide/l/a;.open:(Ljava/io/File;IIJ)Lcom/bumptech/glide/l/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L28b2ec.  v0:= 0L;
  #L28b2f0.  v2:= lcmp(v12, v0);
  #L28b2f4.  if v2 <= 0 then goto L28b3fa;
  #L28b2f8.  if v11 <= 0 then goto L28b3ea;
  #L28b2fc.  v0:= new `java.io.File`;
  #L28b300.  v1:= "journal.bkp" @kind object;
  #L28b304.  call `<init>`(v0, v9, v1) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L28b30a.  call temp:= `exists`(v0) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L28b310.  v1:= temp;
  #L28b312.  if v1 == 0 then goto L28b340;
  #L28b316.  v1:= new `java.io.File`;
  #L28b31a.  v2:= "journal" @kind object;
  #L28b31e.  call `<init>`(v1, v9, v2) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L28b324.  call temp:= `exists`(v1) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L28b32a.  v2:= temp;
  #L28b32c.  if v2 == 0 then goto L28b338;
  #L28b330.  call temp:= `delete`(v0) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L28b336.  goto L28b340;
  #L28b338.  v2:= 0I;
  #L28b33a.  call `a`(v0, v1, v2) @signature `Lcom/bumptech/glide/l/a;.a:(Ljava/io/File;Ljava/io/File;Z)V` @kind static;
  #L28b340.  v0:= new `com.bumptech.glide.l.a`;
  #L28b344.  v3:= v0 @kind object;
  #L28b346.  v4:= v9 @kind object;
  #L28b348.  v5:= v10;
  #L28b34a.  v6:= v11;
  #L28b34c.  v7:= v12 @kind wide;
  #L28b34e.  call `<init>`(v3, v4, v5, v6, v7) @signature `Lcom/bumptech/glide/l/a;.<init>:(Ljava/io/File;IIJ)V` @kind direct;
  #L28b354.  v1:= v0.`com.bumptech.glide.l.a.g` @type ^`java.io.File` @kind object;
  #L28b358.  call temp:= `exists`(v1) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L28b35e.  v1:= temp;
  #L28b360.  if v1 == 0 then goto L28b3c8;
  #L28b364.  call `d`(v0) @signature `Lcom/bumptech/glide/l/a;.d:()V` @kind direct;
  #L28b36a.  call `c`(v0) @signature `Lcom/bumptech/glide/l/a;.c:()V` @kind direct;
  #L28b370.  return v0 @kind object;
  #L28b372.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L28b374.  v2:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L28b378.  v3:= new `java.lang.StringBuilder`;
  #L28b37c.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28b382.  v4:= "DiskLruCache " @kind object;
  #L28b386.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28b38c.  call temp:= `append`(v3, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28b392.  v4:= " is corrupt: " @kind object;
  #L28b396.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28b39c.  call temp:= `getMessage`(v1) @signature `Ljava/io/IOException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L28b3a2.  v1:= temp @kind object;
  #L28b3a4.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28b3aa.  v1:= ", removing" @kind object;
  #L28b3ae.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28b3b4.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28b3ba.  v1:= temp @kind object;
  #L28b3bc.  call `println`(v2, v1) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L28b3c2.  call `delete`(v0) @signature `Lcom/bumptech/glide/l/a;.delete:()V` @kind virtual;
  #L28b3c8.  call temp:= `mkdirs`(v9) @signature `Ljava/io/File;.mkdirs:()Z` @kind virtual;
  #L28b3ce.  v0:= new `com.bumptech.glide.l.a`;
  #L28b3d2.  v3:= v0 @kind object;
  #L28b3d4.  v4:= v9 @kind object;
  #L28b3d6.  v5:= v10;
  #L28b3d8.  v6:= v11;
  #L28b3da.  v7:= v12 @kind wide;
  #L28b3dc.  call `<init>`(v3, v4, v5, v6, v7) @signature `Lcom/bumptech/glide/l/a;.<init>:(Ljava/io/File;IIJ)V` @kind direct;
  #L28b3e2.  call `e`(v0) @signature `Lcom/bumptech/glide/l/a;.e:()V` @kind direct;
  #L28b3e8.  return v0 @kind object;
  #L28b3ea.  v9:= new `java.lang.IllegalArgumentException`;
  #L28b3ee.  v10:= "valueCount <= 0" @kind object;
  #L28b3f2.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28b3f8.  throw v9;
  #L28b3fa.  v9:= new `java.lang.IllegalArgumentException`;
  #L28b3fe.  v10:= "maxSize <= 0" @kind object;
  #L28b402.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28b408.  throw v9;
  catch `java.io.IOException` @[L28b364..L28b370] goto L28b372;
}
procedure `void` `close`(`com.bumptech.glide.l.a` v3 @kind this) @signature `Lcom/bumptech/glide/l/a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L28b7f8.  @monitorenter v3
  #L28b7fa.  v0:= v3.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28b7fe.  if v0 != 0 then goto L28b806;
  #L28b802.  @monitorexit v3
  #L28b804.  return @kind void;
  #L28b806.  v0:= new `java.util.ArrayList`;
  #L28b80a.  v1:= v3.`com.bumptech.glide.l.a.o` @type ^`java.util.LinkedHashMap` @kind object;
  #L28b80e.  call temp:= `values`(v1) @signature `Ljava/util/LinkedHashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L28b814.  v1:= temp @kind object;
  #L28b816.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L28b81c.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L28b822.  v0:= temp @kind object;
  #L28b824.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L28b82a.  v1:= temp;
  #L28b82c.  if v1 == 0 then goto L28b858;
  #L28b830.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L28b836.  v1:= temp @kind object;
  #L28b838.  v1:= (`com.bumptech.glide.l.a$d`) v1 @kind object;
  #L28b83c.  call temp:= `e`(v1) @signature `Lcom/bumptech/glide/l/a$d;.e:(Lcom/bumptech/glide/l/a$d;)Lcom/bumptech/glide/l/a$c;` @kind static;
  #L28b842.  v2:= temp @kind object;
  #L28b844.  if v2 == 0 then goto L28b824;
  #L28b848.  call temp:= `e`(v1) @signature `Lcom/bumptech/glide/l/a$d;.e:(Lcom/bumptech/glide/l/a$d;)Lcom/bumptech/glide/l/a$c;` @kind static;
  #L28b84e.  v1:= temp @kind object;
  #L28b850.  call `abort`(v1) @signature `Lcom/bumptech/glide/l/a$c;.abort:()V` @kind virtual;
  #L28b856.  goto L28b824;
  #L28b858.  call `f`(v3) @signature `Lcom/bumptech/glide/l/a;.f:()V` @kind direct;
  #L28b85e.  v0:= v3.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28b862.  call `a`(v0) @signature `Lcom/bumptech/glide/l/a;.a:(Ljava/io/Writer;)V` @kind static;
  #L28b868.  v0:= 0I;
  #L28b86a.  v3.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` := v0 @kind object;
  #L28b86e.  @monitorexit v3
  #L28b870.  return @kind void;
  #L28b872.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28b874.  @monitorexit v3
  #L28b876.  throw v0;
  catch `java.lang.Throwable` @[L28b7fa..L28b7fe] goto L28b872;
  catch `java.lang.Throwable` @[L28b806..L28b86e] goto L28b872;
}
procedure `void` `delete`(`com.bumptech.glide.l.a` v1 @kind this) @signature `Lcom/bumptech/glide/l/a;.delete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28bb5c.  call `close`(v1) @signature `Lcom/bumptech/glide/l/a;.close:()V` @kind virtual;
  #L28bb62.  v0:= v1.`com.bumptech.glide.l.a.f` @type ^`java.io.File` @kind object;
  #L28bb66.  call `a`(v0) @signature `Lcom/bumptech/glide/l/c;.a:(Ljava/io/File;)V` @kind static;
  #L28bb6c.  return @kind void;
}
procedure `com.bumptech.glide.l.a$c` `edit`(`com.bumptech.glide.l.a` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/bumptech/glide/l/a;.edit:(Ljava/lang/String;)Lcom/bumptech/glide/l/a$c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28b42c.  v0:= -1L;
  #L28b430.  call temp:= `a`(v2, v3, v0) @signature `Lcom/bumptech/glide/l/a;.a:(Ljava/lang/String;J)Lcom/bumptech/glide/l/a$c;` @kind direct;
  #L28b436.  v3:= temp @kind object;
  #L28b438.  return v3 @kind object;
}
procedure `com.bumptech.glide.l.a$e` `get`(`com.bumptech.glide.l.a` v9 @kind this, `java.lang.String` v10 @kind object) @signature `Lcom/bumptech/glide/l/a;.get:(Ljava/lang/String;)Lcom/bumptech/glide/l/a$e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L28b538.  @monitorenter v9
  #L28b53a.  call `a`(v9) @signature `Lcom/bumptech/glide/l/a;.a:()V` @kind direct;
  #L28b540.  v0:= v9.`com.bumptech.glide.l.a.o` @type ^`java.util.LinkedHashMap` @kind object;
  #L28b544.  call temp:= `get`(v0, v10) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28b54a.  v0:= temp @kind object;
  #L28b54c.  v0:= (`com.bumptech.glide.l.a$d`) v0 @kind object;
  #L28b550.  v1:= 0I;
  #L28b552.  if v0 != 0 then goto L28b55a;
  #L28b556.  @monitorexit v9
  #L28b558.  return v1 @kind object;
  #L28b55a.  call temp:= `d`(v0) @signature `Lcom/bumptech/glide/l/a$d;.d:(Lcom/bumptech/glide/l/a$d;)Z` @kind static;
  #L28b560.  v2:= temp;
  #L28b562.  if v2 != 0 then goto L28b56a;
  #L28b566.  @monitorexit v9
  #L28b568.  return v1 @kind object;
  #L28b56a.  v2:= v0.`com.bumptech.glide.l.a$d.c` @type ^`java.io.File`[] @kind object;
  #L28b56e.  v3:= length @variable v2;
  #L28b570.  v4:= 0I;
  #L28b572.  if v4 >= v3 then goto L28b590;
  #L28b576.  v5:= v2[v4] @kind object;
  #L28b57a.  call temp:= `exists`(v5) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L28b580.  v5:= temp;
  #L28b582.  if v5 != 0 then goto L28b58a;
  #L28b586.  @monitorexit v9
  #L28b588.  return v1 @kind object;
  #L28b58a.  v4:= v4 + 1;
  #L28b58e.  goto L28b572;
  #L28b590.  v1:= v9.`com.bumptech.glide.l.a.p` @type ^`int`;
  #L28b594.  v1:= v1 + 1;
  #L28b598.  v9.`com.bumptech.glide.l.a.p` @type ^`int` := v1;
  #L28b59c.  v1:= v9.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28b5a0.  v2:= "READ" @kind object;
  #L28b5a4.  call temp:= `append`(v1, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L28b5aa.  v1:= v9.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28b5ae.  v2:= 32I;
  #L28b5b2.  call temp:= `append`(v1, v2) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L28b5b8.  v1:= v9.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28b5bc.  call temp:= `append`(v1, v10) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L28b5c2.  v1:= v9.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28b5c6.  v2:= 10I;
  #L28b5ca.  call temp:= `append`(v1, v2) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L28b5d0.  call temp:= `b`(v9) @signature `Lcom/bumptech/glide/l/a;.b:()Z` @kind direct;
  #L28b5d6.  v1:= temp;
  #L28b5d8.  if v1 == 0 then goto L28b5ea;
  #L28b5dc.  v1:= v9.`com.bumptech.glide.l.a.r` @type ^`java.util.concurrent.ThreadPoolExecutor` @kind object;
  #L28b5e0.  v2:= v9.`com.bumptech.glide.l.a.s` @type ^`java.util.concurrent.Callable` @kind object;
  #L28b5e4.  call temp:= `submit`(v1, v2) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind virtual;
  #L28b5ea.  v8:= new `com.bumptech.glide.l.a$e`;
  #L28b5ee.  call temp:= `c`(v0) @signature `Lcom/bumptech/glide/l/a$d;.c:(Lcom/bumptech/glide/l/a$d;)J` @kind static;
  #L28b5f4.  v3:= temp @kind wide;
  #L28b5f6.  v5:= v0.`com.bumptech.glide.l.a$d.c` @type ^`java.io.File`[] @kind object;
  #L28b5fa.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/l/a$d;.a:(Lcom/bumptech/glide/l/a$d;)[J` @kind static;
  #L28b600.  v6:= temp @kind object;
  #L28b602.  v7:= 0I;
  #L28b604.  v0:= v8 @kind object;
  #L28b606.  v1:= v9 @kind object;
  #L28b608.  v2:= v10 @kind object;
  #L28b60a.  call `<init>`(v0, v1, v2, v3, v5, v6, v7) @signature `Lcom/bumptech/glide/l/a$e;.<init>:(Lcom/bumptech/glide/l/a;Ljava/lang/String;J[Ljava/io/File;[JLcom/bumptech/glide/l/a$a;)V` @kind direct;
  #L28b610.  @monitorexit v9
  #L28b612.  return v8 @kind object;
  #L28b614.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28b616.  @monitorexit v9
  #L28b618.  throw v10;
  catch `java.lang.Throwable` @[L28b53a..L28b550] goto L28b614;
  catch `java.lang.Throwable` @[L28b55a..L28b562] goto L28b614;
  catch `java.lang.Throwable` @[L28b56a..L28b582] goto L28b614;
  catch `java.lang.Throwable` @[L28b590..L28b610] goto L28b614;
}
procedure `boolean` `remove`(`com.bumptech.glide.l.a` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lcom/bumptech/glide/l/a;.remove:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L28b1ac.  @monitorenter v7
  #L28b1ae.  call `a`(v7) @signature `Lcom/bumptech/glide/l/a;.a:()V` @kind direct;
  #L28b1b4.  v0:= v7.`com.bumptech.glide.l.a.o` @type ^`java.util.LinkedHashMap` @kind object;
  #L28b1b8.  call temp:= `get`(v0, v8) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28b1be.  v0:= temp @kind object;
  #L28b1c0.  v0:= (`com.bumptech.glide.l.a$d`) v0 @kind object;
  #L28b1c4.  v1:= 0I;
  #L28b1c6.  if v0 == 0 then goto L28b2c6;
  #L28b1ca.  call temp:= `e`(v0) @signature `Lcom/bumptech/glide/l/a$d;.e:(Lcom/bumptech/glide/l/a$d;)Lcom/bumptech/glide/l/a$c;` @kind static;
  #L28b1d0.  v2:= temp @kind object;
  #L28b1d2.  if v2 == 0 then goto L28b1da;
  #L28b1d6.  goto L28b2c6;
  #L28b1da.  v2:= v7.`com.bumptech.glide.l.a.l` @type ^`int`;
  #L28b1de.  if v1 >= v2 then goto L28b25e;
  #L28b1e2.  call temp:= `getCleanFile`(v0, v1) @signature `Lcom/bumptech/glide/l/a$d;.getCleanFile:(I)Ljava/io/File;` @kind virtual;
  #L28b1e8.  v2:= temp @kind object;
  #L28b1ea.  call temp:= `exists`(v2) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L28b1f0.  v3:= temp;
  #L28b1f2.  if v3 == 0 then goto L28b232;
  #L28b1f6.  call temp:= `delete`(v2) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L28b1fc.  v3:= temp;
  #L28b1fe.  if v3 == 0 then goto L28b204;
  #L28b202.  goto L28b232;
  #L28b204.  v8:= new `java.io.IOException`;
  #L28b208.  v0:= new `java.lang.StringBuilder`;
  #L28b20c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28b212.  v1:= "failed to delete " @kind object;
  #L28b216.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28b21c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28b222.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28b228.  v0:= temp @kind object;
  #L28b22a.  call `<init>`(v8, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28b230.  throw v8;
  #L28b232.  v2:= v7.`com.bumptech.glide.l.a.m` @type ^`long` @kind wide;
  #L28b236.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/l/a$d;.a:(Lcom/bumptech/glide/l/a$d;)[J` @kind static;
  #L28b23c.  v4:= temp @kind object;
  #L28b23e.  v5:= v4[v1] @kind wide;
  #L28b242.  v2:= v2 - v5 @kind long;
  #L28b244.  v7.`com.bumptech.glide.l.a.m` @type ^`long` := v2 @kind wide;
  #L28b248.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/l/a$d;.a:(Lcom/bumptech/glide/l/a$d;)[J` @kind static;
  #L28b24e.  v2:= temp @kind object;
  #L28b250.  v3:= 0L;
  #L28b254.  v2[v1]:= v3 @kind wide;
  #L28b258.  v1:= v1 + 1;
  #L28b25c.  goto L28b1da;
  #L28b25e.  v0:= v7.`com.bumptech.glide.l.a.p` @type ^`int`;
  #L28b262.  v1:= 1I;
  #L28b264.  v0:= v0 + v1 @kind int;
  #L28b266.  v7.`com.bumptech.glide.l.a.p` @type ^`int` := v0;
  #L28b26a.  v0:= v7.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28b26e.  v2:= "REMOVE" @kind object;
  #L28b272.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L28b278.  v0:= v7.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28b27c.  v2:= 32I;
  #L28b280.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L28b286.  v0:= v7.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28b28a.  call temp:= `append`(v0, v8) @signature `Ljava/io/Writer;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @kind virtual;
  #L28b290.  v0:= v7.`com.bumptech.glide.l.a.n` @type ^`java.io.Writer` @kind object;
  #L28b294.  v2:= 10I;
  #L28b298.  call temp:= `append`(v0, v2) @signature `Ljava/io/Writer;.append:(C)Ljava/io/Writer;` @kind virtual;
  #L28b29e.  v0:= v7.`com.bumptech.glide.l.a.o` @type ^`java.util.LinkedHashMap` @kind object;
  #L28b2a2.  call temp:= `remove`(v0, v8) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28b2a8.  call temp:= `b`(v7) @signature `Lcom/bumptech/glide/l/a;.b:()Z` @kind direct;
  #L28b2ae.  v8:= temp;
  #L28b2b0.  if v8 == 0 then goto L28b2c2;
  #L28b2b4.  v8:= v7.`com.bumptech.glide.l.a.r` @type ^`java.util.concurrent.ThreadPoolExecutor` @kind object;
  #L28b2b8.  v0:= v7.`com.bumptech.glide.l.a.s` @type ^`java.util.concurrent.Callable` @kind object;
  #L28b2bc.  call temp:= `submit`(v8, v0) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind virtual;
  #L28b2c2.  @monitorexit v7
  #L28b2c4.  return v1;
  #L28b2c6.  @monitorexit v7
  #L28b2c8.  return v1;
  #L28b2ca.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L28b2cc.  @monitorexit v7
  #L28b2ce.  throw v8;
  catch `java.lang.Throwable` @[L28b1ae..L28b2c2] goto L28b2ca;
}
