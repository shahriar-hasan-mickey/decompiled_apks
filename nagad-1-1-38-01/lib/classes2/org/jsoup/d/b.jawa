record `org.jsoup.d.b` @kind class @AccessFlag PUBLIC extends `java.lang.Iterable` @kind interface, `java.lang.Cloneable` @kind interface {
  `int` `org.jsoup.d.b.f` @AccessFlag PRIVATE;
  `java.lang.String`[] `org.jsoup.d.b.g` @AccessFlag ;
  `java.lang.String`[] `org.jsoup.d.b.h` @AccessFlag ;
}
global `java.lang.String`[] `@@org.jsoup.d.b.i` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/jsoup/d/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.jsoup.d.b` v1 @kind this) @signature `Lorg/jsoup/d/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `a`(`org.jsoup.d.b` v0 @kind object) @signature `Lorg/jsoup/d/b;.a:(Lorg/jsoup/d/b;)I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `a`(`org.jsoup.d.b` v2 @kind this, `int` v3 ) @signature `Lorg/jsoup/d/b;.a:(I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `a`(`org.jsoup.d.b` v0 @kind object, `int` v1 ) @signature `Lorg/jsoup/d/b;.a:(Lorg/jsoup/d/b;I)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.String`[] `a`(`java.lang.String`[] v2 @kind object, `int` v3 ) @signature `Lorg/jsoup/d/b;.a:([Ljava/lang/String;I)[Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.String` `b`(`java.lang.String` v0 @kind object) @signature `Lorg/jsoup/d/b;.b:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag STATIC {

  # return;
}
procedure `void` `b`(`org.jsoup.d.b` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/jsoup/d/b;.b:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `c`(`org.jsoup.d.b` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/jsoup/d/b;.c:(Ljava/lang/String;)I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `remove`(`org.jsoup.d.b` v4 @kind this, `int` v5 ) @signature `Lorg/jsoup/d/b;.remove:(I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `a`(`org.jsoup.d.b` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/jsoup/d/b;.a:(Ljava/lang/String;)I` @AccessFlag  {

  # return;
}
procedure `void` `a`(`org.jsoup.d.b` v10 @kind this, `java.lang.Appendable` v11 @kind object, `org.jsoup.d.g$a` v12 @kind object) @signature `Lorg/jsoup/d/b;.a:(Ljava/lang/Appendable;Lorg/jsoup/d/g$a;)V` @AccessFlag FINAL {

  # return;
}
procedure `void` `a`(`org.jsoup.d.b` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/jsoup/d/b;.a:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag  {

  # return;
}
procedure `void` `addAll`(`org.jsoup.d.b` v2 @kind this, `org.jsoup.d.b` v3 @kind object) @signature `Lorg/jsoup/d/b;.addAll:(Lorg/jsoup/d/b;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.List` `asList`(`org.jsoup.d.b` v5 @kind this) @signature `Lorg/jsoup/d/b;.asList:()Ljava/util/List;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `clone`(`org.jsoup.d.b` v1 @kind this) @signature `Lorg/jsoup/d/b;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `org.jsoup.d.b` `clone`(`org.jsoup.d.b` v3 @kind this) @signature `Lorg/jsoup/d/b;.clone:()Lorg/jsoup/d/b;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`org.jsoup.d.b` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lorg/jsoup/d/b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `get`(`org.jsoup.d.b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/jsoup/d/b;.get:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getIgnoreCase`(`org.jsoup.d.b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/jsoup/d/b;.getIgnoreCase:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasKey`(`org.jsoup.d.b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/jsoup/d/b;.hasKey:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasKeyIgnoreCase`(`org.jsoup.d.b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/jsoup/d/b;.hasKeyIgnoreCase:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`org.jsoup.d.b` v2 @kind this) @signature `Lorg/jsoup/d/b;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `html`(`org.jsoup.d.b` v3 @kind this) @signature `Lorg/jsoup/d/b;.html:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `iterator`(`org.jsoup.d.b` v1 @kind this) @signature `Lorg/jsoup/d/b;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `normalize`(`org.jsoup.d.b` v3 @kind this) @signature `Lorg/jsoup/d/b;.normalize:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `org.jsoup.d.b` `put`(`org.jsoup.d.b` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/jsoup/d/b;.put:(Ljava/lang/String;Ljava/lang/String;)Lorg/jsoup/d/b;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.jsoup.d.b` `put`(`org.jsoup.d.b` v2 @kind this, `org.jsoup.d.a` v3 @kind object) @signature `Lorg/jsoup/d/b;.put:(Lorg/jsoup/d/a;)Lorg/jsoup/d/b;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `size`(`org.jsoup.d.b` v1 @kind this) @signature `Lorg/jsoup/d/b;.size:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`org.jsoup.d.b` v1 @kind this) @signature `Lorg/jsoup/d/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
