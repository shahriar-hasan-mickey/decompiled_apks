record `org.bouncycastle.asn1.k` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.bouncycastle.asn1.d` @kind interface {
}
procedure `void` `<init>`(`org.bouncycastle.asn1.k` v0 @kind this) @signature `Lorg/bouncycastle/asn1/k;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `equals`(`org.bouncycastle.asn1.k` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/bouncycastle/asn1/k;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getEncoded`(`org.bouncycastle.asn1.k` v2 @kind this) @signature `Lorg/bouncycastle/asn1/k;.getEncoded:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getEncoded`(`org.bouncycastle.asn1.k` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/bouncycastle/asn1/k;.getEncoded:(Ljava/lang/String;)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`org.bouncycastle.asn1.k` v1 @kind this) @signature `Lorg/bouncycastle/asn1/k;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.bouncycastle.asn1.p` `toASN1Primitive`() @signature `Lorg/bouncycastle/asn1/k;.toASN1Primitive:()Lorg/bouncycastle/asn1/p;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
