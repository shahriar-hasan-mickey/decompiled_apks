record `com.squareup.okhttp.Call$AsyncCall` @kind class @AccessFlag FINAL extends `com.squareup.okhttp.internal.NamedRunnable` @kind class {
  `boolean` `com.squareup.okhttp.Call$AsyncCall.forWebSocket` @AccessFlag PRIVATE_FINAL;
  `com.squareup.okhttp.Callback` `com.squareup.okhttp.Call$AsyncCall.responseCallback` @AccessFlag PRIVATE_FINAL;
  `com.squareup.okhttp.Call` `com.squareup.okhttp.Call$AsyncCall.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.squareup.okhttp.Call$AsyncCall` v2 @kind this, `com.squareup.okhttp.Call` v3 @kind object, `com.squareup.okhttp.Callback` v4 @kind object, `boolean` v5 ) @signature `Lcom/squareup/okhttp/Call$AsyncCall;.<init>:(Lcom/squareup/okhttp/Call;Lcom/squareup/okhttp/Callback;Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.squareup.okhttp.Call$AsyncCall` v0 @kind this, `com.squareup.okhttp.Call` v1 @kind object, `com.squareup.okhttp.Callback` v2 @kind object, `boolean` v3 , `com.squareup.okhttp.Call$1` v4 @kind object) @signature `Lcom/squareup/okhttp/Call$AsyncCall;.<init>:(Lcom/squareup/okhttp/Call;Lcom/squareup/okhttp/Callback;ZLcom/squareup/okhttp/Call$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `void` `cancel`(`com.squareup.okhttp.Call$AsyncCall` v1 @kind this) @signature `Lcom/squareup/okhttp/Call$AsyncCall;.cancel:()V` @AccessFlag  {

  # return;
}
procedure `void` `execute`(`com.squareup.okhttp.Call$AsyncCall` v5 @kind this) @signature `Lcom/squareup/okhttp/Call$AsyncCall;.execute:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `com.squareup.okhttp.Call` `get`(`com.squareup.okhttp.Call$AsyncCall` v1 @kind this) @signature `Lcom/squareup/okhttp/Call$AsyncCall;.get:()Lcom/squareup/okhttp/Call;` @AccessFlag  {

  # return;
}
procedure `java.lang.String` `host`(`com.squareup.okhttp.Call$AsyncCall` v1 @kind this) @signature `Lcom/squareup/okhttp/Call$AsyncCall;.host:()Ljava/lang/String;` @AccessFlag  {

  # return;
}
procedure `com.squareup.okhttp.Request` `request`(`com.squareup.okhttp.Call$AsyncCall` v1 @kind this) @signature `Lcom/squareup/okhttp/Call$AsyncCall;.request:()Lcom/squareup/okhttp/Request;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `tag`(`com.squareup.okhttp.Call$AsyncCall` v1 @kind this) @signature `Lcom/squareup/okhttp/Call$AsyncCall;.tag:()Ljava/lang/Object;` @AccessFlag  {

  # return;
}
