record `com.squareup.okhttp.Cache` @kind class @AccessFlag PUBLIC_FINAL {
  `com.squareup.okhttp.internal.DiskLruCache` `com.squareup.okhttp.Cache.cache` @AccessFlag PRIVATE_FINAL;
  `int` `com.squareup.okhttp.Cache.hitCount` @AccessFlag PRIVATE;
  `com.squareup.okhttp.internal.InternalCache` `com.squareup.okhttp.Cache.internalCache` @AccessFlag FINAL;
  `int` `com.squareup.okhttp.Cache.networkCount` @AccessFlag PRIVATE;
  `int` `com.squareup.okhttp.Cache.requestCount` @AccessFlag PRIVATE;
  `int` `com.squareup.okhttp.Cache.writeAbortCount` @AccessFlag PRIVATE;
  `int` `com.squareup.okhttp.Cache.writeSuccessCount` @AccessFlag PRIVATE;
}
global `int` `@@com.squareup.okhttp.Cache.ENTRY_BODY` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.squareup.okhttp.Cache.ENTRY_COUNT` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.squareup.okhttp.Cache.ENTRY_METADATA` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.squareup.okhttp.Cache.VERSION` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.squareup.okhttp.Cache` v7 @kind this, `java.io.File` v8 @kind object, `long` v9 ) @signature `Lcom/squareup/okhttp/Cache;.<init>:(Ljava/io/File;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `abortQuietly`(`com.squareup.okhttp.Cache` v0 @kind this, `com.squareup.okhttp.internal.DiskLruCache$Editor` v1 @kind object) @signature `Lcom/squareup/okhttp/Cache;.abortQuietly:(Lcom/squareup/okhttp/internal/DiskLruCache$Editor;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `com.squareup.okhttp.internal.http.CacheRequest` `access$000`(`com.squareup.okhttp.Cache` v0 @kind object, `com.squareup.okhttp.Response` v1 @kind object) @signature `Lcom/squareup/okhttp/Cache;.access$000:(Lcom/squareup/okhttp/Cache;Lcom/squareup/okhttp/Response;)Lcom/squareup/okhttp/internal/http/CacheRequest;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `access$100`(`com.squareup.okhttp.Cache` v0 @kind object, `com.squareup.okhttp.Request` v1 @kind object) @signature `Lcom/squareup/okhttp/Cache;.access$100:(Lcom/squareup/okhttp/Cache;Lcom/squareup/okhttp/Request;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `int` `access$1000`(`i.g` v0 @kind object) @signature `Lcom/squareup/okhttp/Cache;.access$1000:(Li/g;)I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `access$200`(`com.squareup.okhttp.Cache` v0 @kind object, `com.squareup.okhttp.Response` v1 @kind object, `com.squareup.okhttp.Response` v2 @kind object) @signature `Lcom/squareup/okhttp/Cache;.access$200:(Lcom/squareup/okhttp/Cache;Lcom/squareup/okhttp/Response;Lcom/squareup/okhttp/Response;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `access$300`(`com.squareup.okhttp.Cache` v0 @kind object) @signature `Lcom/squareup/okhttp/Cache;.access$300:(Lcom/squareup/okhttp/Cache;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `access$400`(`com.squareup.okhttp.Cache` v0 @kind object, `com.squareup.okhttp.internal.http.CacheStrategy` v1 @kind object) @signature `Lcom/squareup/okhttp/Cache;.access$400:(Lcom/squareup/okhttp/Cache;Lcom/squareup/okhttp/internal/http/CacheStrategy;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.squareup.okhttp.internal.DiskLruCache` `access$600`(`com.squareup.okhttp.Cache` v0 @kind object) @signature `Lcom/squareup/okhttp/Cache;.access$600:(Lcom/squareup/okhttp/Cache;)Lcom/squareup/okhttp/internal/DiskLruCache;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `int` `access$808`(`com.squareup.okhttp.Cache` v2 @kind object) @signature `Lcom/squareup/okhttp/Cache;.access$808:(Lcom/squareup/okhttp/Cache;)I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `int` `access$908`(`com.squareup.okhttp.Cache` v2 @kind object) @signature `Lcom/squareup/okhttp/Cache;.access$908:(Lcom/squareup/okhttp/Cache;)I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.squareup.okhttp.internal.http.CacheRequest` `put`(`com.squareup.okhttp.Cache` v3 @kind this, `com.squareup.okhttp.Response` v4 @kind object) @signature `Lcom/squareup/okhttp/Cache;.put:(Lcom/squareup/okhttp/Response;)Lcom/squareup/okhttp/internal/http/CacheRequest;` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `readInt`(`i.g` v5 @kind object) @signature `Lcom/squareup/okhttp/Cache;.readInt:(Li/g;)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `remove`(`com.squareup.okhttp.Cache` v1 @kind this, `com.squareup.okhttp.Request` v2 @kind object) @signature `Lcom/squareup/okhttp/Cache;.remove:(Lcom/squareup/okhttp/Request;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `trackConditionalCacheHit`(`com.squareup.okhttp.Cache` v1 @kind this) @signature `Lcom/squareup/okhttp/Cache;.trackConditionalCacheHit:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `trackResponse`(`com.squareup.okhttp.Cache` v1 @kind this, `com.squareup.okhttp.internal.http.CacheStrategy` v2 @kind object) @signature `Lcom/squareup/okhttp/Cache;.trackResponse:(Lcom/squareup/okhttp/internal/http/CacheStrategy;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `update`(`com.squareup.okhttp.Cache` v1 @kind this, `com.squareup.okhttp.Response` v2 @kind object, `com.squareup.okhttp.Response` v3 @kind object) @signature `Lcom/squareup/okhttp/Cache;.update:(Lcom/squareup/okhttp/Response;Lcom/squareup/okhttp/Response;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `urlToKey`(`com.squareup.okhttp.Request` v0 @kind object) @signature `Lcom/squareup/okhttp/Cache;.urlToKey:(Lcom/squareup/okhttp/Request;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `close`(`com.squareup.okhttp.Cache` v1 @kind this) @signature `Lcom/squareup/okhttp/Cache;.close:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `delete`(`com.squareup.okhttp.Cache` v1 @kind this) @signature `Lcom/squareup/okhttp/Cache;.delete:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `evictAll`(`com.squareup.okhttp.Cache` v1 @kind this) @signature `Lcom/squareup/okhttp/Cache;.evictAll:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `flush`(`com.squareup.okhttp.Cache` v1 @kind this) @signature `Lcom/squareup/okhttp/Cache;.flush:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.Response` `get`(`com.squareup.okhttp.Cache` v4 @kind this, `com.squareup.okhttp.Request` v5 @kind object) @signature `Lcom/squareup/okhttp/Cache;.get:(Lcom/squareup/okhttp/Request;)Lcom/squareup/okhttp/Response;` @AccessFlag  {

  # return;
}
procedure `java.io.File` `getDirectory`(`com.squareup.okhttp.Cache` v1 @kind this) @signature `Lcom/squareup/okhttp/Cache;.getDirectory:()Ljava/io/File;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getHitCount`(`com.squareup.okhttp.Cache` v1 @kind this) @signature `Lcom/squareup/okhttp/Cache;.getHitCount:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `getMaxSize`(`com.squareup.okhttp.Cache` v2 @kind this) @signature `Lcom/squareup/okhttp/Cache;.getMaxSize:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getNetworkCount`(`com.squareup.okhttp.Cache` v1 @kind this) @signature `Lcom/squareup/okhttp/Cache;.getNetworkCount:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getRequestCount`(`com.squareup.okhttp.Cache` v1 @kind this) @signature `Lcom/squareup/okhttp/Cache;.getRequestCount:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `getSize`(`com.squareup.okhttp.Cache` v2 @kind this) @signature `Lcom/squareup/okhttp/Cache;.getSize:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getWriteAbortCount`(`com.squareup.okhttp.Cache` v1 @kind this) @signature `Lcom/squareup/okhttp/Cache;.getWriteAbortCount:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getWriteSuccessCount`(`com.squareup.okhttp.Cache` v1 @kind this) @signature `Lcom/squareup/okhttp/Cache;.getWriteSuccessCount:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isClosed`(`com.squareup.okhttp.Cache` v1 @kind this) @signature `Lcom/squareup/okhttp/Cache;.isClosed:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `urls`(`com.squareup.okhttp.Cache` v1 @kind this) @signature `Lcom/squareup/okhttp/Cache;.urls:()Ljava/util/Iterator;` @AccessFlag PUBLIC {

  # return;
}
