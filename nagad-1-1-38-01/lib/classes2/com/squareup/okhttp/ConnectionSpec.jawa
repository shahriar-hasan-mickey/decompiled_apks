record `com.squareup.okhttp.ConnectionSpec` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String`[] `com.squareup.okhttp.ConnectionSpec.cipherSuites` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.squareup.okhttp.ConnectionSpec.supportsTlsExtensions` @AccessFlag FINAL;
  `boolean` `com.squareup.okhttp.ConnectionSpec.tls` @AccessFlag FINAL;
  `java.lang.String`[] `com.squareup.okhttp.ConnectionSpec.tlsVersions` @AccessFlag PRIVATE_FINAL;
}
global `com.squareup.okhttp.ConnectionSpec` `@@com.squareup.okhttp.ConnectionSpec.CLEARTEXT` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.squareup.okhttp.ConnectionSpec` `@@com.squareup.okhttp.ConnectionSpec.COMPATIBLE_TLS` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.squareup.okhttp.ConnectionSpec` `@@com.squareup.okhttp.ConnectionSpec.MODERN_TLS` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/squareup/okhttp/ConnectionSpec;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.squareup.okhttp.ConnectionSpec` v1 @kind this, `com.squareup.okhttp.ConnectionSpec$Builder` v2 @kind object) @signature `Lcom/squareup/okhttp/ConnectionSpec;.<init>:(Lcom/squareup/okhttp/ConnectionSpec$Builder;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.squareup.okhttp.ConnectionSpec` v0 @kind this, `com.squareup.okhttp.ConnectionSpec$Builder` v1 @kind object, `com.squareup.okhttp.ConnectionSpec$1` v2 @kind object) @signature `Lcom/squareup/okhttp/ConnectionSpec;.<init>:(Lcom/squareup/okhttp/ConnectionSpec$Builder;Lcom/squareup/okhttp/ConnectionSpec$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.String`[] `access$400`(`com.squareup.okhttp.ConnectionSpec` v0 @kind object) @signature `Lcom/squareup/okhttp/ConnectionSpec;.access$400:(Lcom/squareup/okhttp/ConnectionSpec;)[Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.String`[] `access$500`(`com.squareup.okhttp.ConnectionSpec` v0 @kind object) @signature `Lcom/squareup/okhttp/ConnectionSpec;.access$500:(Lcom/squareup/okhttp/ConnectionSpec;)[Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.squareup.okhttp.ConnectionSpec` `supportedSpec`(`com.squareup.okhttp.ConnectionSpec` v3 @kind this, `javax.net.ssl.SSLSocket` v4 @kind object) @signature `Lcom/squareup/okhttp/ConnectionSpec;.supportedSpec:(Ljavax/net/ssl/SSLSocket;)Lcom/squareup/okhttp/ConnectionSpec;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `apply`(`com.squareup.okhttp.ConnectionSpec` v6 @kind this, `javax.net.ssl.SSLSocket` v7 @kind object, `com.squareup.okhttp.Route` v8 @kind object) @signature `Lcom/squareup/okhttp/ConnectionSpec;.apply:(Ljavax/net/ssl/SSLSocket;Lcom/squareup/okhttp/Route;)V` @AccessFlag  {

  # return;
}
procedure `java.util.List` `cipherSuites`(`com.squareup.okhttp.ConnectionSpec` v4 @kind this) @signature `Lcom/squareup/okhttp/ConnectionSpec;.cipherSuites:()Ljava/util/List;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.squareup.okhttp.ConnectionSpec` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/squareup/okhttp/ConnectionSpec;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.squareup.okhttp.ConnectionSpec` v2 @kind this) @signature `Lcom/squareup/okhttp/ConnectionSpec;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isTls`(`com.squareup.okhttp.ConnectionSpec` v1 @kind this) @signature `Lcom/squareup/okhttp/ConnectionSpec;.isTls:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `supportsTlsExtensions`(`com.squareup.okhttp.ConnectionSpec` v1 @kind this) @signature `Lcom/squareup/okhttp/ConnectionSpec;.supportsTlsExtensions:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.List` `tlsVersions`(`com.squareup.okhttp.ConnectionSpec` v4 @kind this) @signature `Lcom/squareup/okhttp/ConnectionSpec;.tlsVersions:()Ljava/util/List;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.squareup.okhttp.ConnectionSpec` v3 @kind this) @signature `Lcom/squareup/okhttp/ConnectionSpec;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
