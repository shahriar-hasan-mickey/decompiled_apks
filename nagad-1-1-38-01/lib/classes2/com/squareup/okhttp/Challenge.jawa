record `com.squareup.okhttp.Challenge` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `com.squareup.okhttp.Challenge.realm` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.squareup.okhttp.Challenge.scheme` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.squareup.okhttp.Challenge` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/squareup/okhttp/Challenge;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `equals`(`com.squareup.okhttp.Challenge` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/squareup/okhttp/Challenge;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getRealm`(`com.squareup.okhttp.Challenge` v1 @kind this) @signature `Lcom/squareup/okhttp/Challenge;.getRealm:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getScheme`(`com.squareup.okhttp.Challenge` v1 @kind this) @signature `Lcom/squareup/okhttp/Challenge;.getScheme:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.squareup.okhttp.Challenge` v3 @kind this) @signature `Lcom/squareup/okhttp/Challenge;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.squareup.okhttp.Challenge` v2 @kind this) @signature `Lcom/squareup/okhttp/Challenge;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
