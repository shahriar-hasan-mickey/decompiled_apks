record `com.squareup.okhttp.Dispatcher` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Deque` `com.squareup.okhttp.Dispatcher.executedCalls` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ExecutorService` `com.squareup.okhttp.Dispatcher.executorService` @AccessFlag PRIVATE;
  `int` `com.squareup.okhttp.Dispatcher.maxRequests` @AccessFlag PRIVATE;
  `int` `com.squareup.okhttp.Dispatcher.maxRequestsPerHost` @AccessFlag PRIVATE;
  `java.util.Deque` `com.squareup.okhttp.Dispatcher.readyCalls` @AccessFlag PRIVATE_FINAL;
  `java.util.Deque` `com.squareup.okhttp.Dispatcher.runningCalls` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.squareup.okhttp.Dispatcher` v1 @kind this) @signature `Lcom/squareup/okhttp/Dispatcher;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.squareup.okhttp.Dispatcher` v1 @kind this, `java.util.concurrent.ExecutorService` v2 @kind object) @signature `Lcom/squareup/okhttp/Dispatcher;.<init>:(Ljava/util/concurrent/ExecutorService;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `promoteCalls`(`com.squareup.okhttp.Dispatcher` v4 @kind this) @signature `Lcom/squareup/okhttp/Dispatcher;.promoteCalls:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `runningCallsForHost`(`com.squareup.okhttp.Dispatcher` v4 @kind this, `com.squareup.okhttp.Call$AsyncCall` v5 @kind object) @signature `Lcom/squareup/okhttp/Dispatcher;.runningCallsForHost:(Lcom/squareup/okhttp/Call$AsyncCall;)I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `cancel`(`com.squareup.okhttp.Dispatcher` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/squareup/okhttp/Dispatcher;.cancel:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `enqueue`(`com.squareup.okhttp.Dispatcher` v2 @kind this, `com.squareup.okhttp.Call$AsyncCall` v3 @kind object) @signature `Lcom/squareup/okhttp/Dispatcher;.enqueue:(Lcom/squareup/okhttp/Call$AsyncCall;)V` @AccessFlag  {

  # return;
}
procedure `void` `executed`(`com.squareup.okhttp.Dispatcher` v1 @kind this, `com.squareup.okhttp.Call` v2 @kind object) @signature `Lcom/squareup/okhttp/Dispatcher;.executed:(Lcom/squareup/okhttp/Call;)V` @AccessFlag  {

  # return;
}
procedure `void` `finished`(`com.squareup.okhttp.Dispatcher` v1 @kind this, `com.squareup.okhttp.Call$AsyncCall` v2 @kind object) @signature `Lcom/squareup/okhttp/Dispatcher;.finished:(Lcom/squareup/okhttp/Call$AsyncCall;)V` @AccessFlag  {

  # return;
}
procedure `void` `finished`(`com.squareup.okhttp.Dispatcher` v1 @kind this, `com.squareup.okhttp.Call` v2 @kind object) @signature `Lcom/squareup/okhttp/Dispatcher;.finished:(Lcom/squareup/okhttp/Call;)V` @AccessFlag  {

  # return;
}
procedure `java.util.concurrent.ExecutorService` `getExecutorService`(`com.squareup.okhttp.Dispatcher` v9 @kind this) @signature `Lcom/squareup/okhttp/Dispatcher;.getExecutorService:()Ljava/util/concurrent/ExecutorService;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getMaxRequests`(`com.squareup.okhttp.Dispatcher` v1 @kind this) @signature `Lcom/squareup/okhttp/Dispatcher;.getMaxRequests:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getMaxRequestsPerHost`(`com.squareup.okhttp.Dispatcher` v1 @kind this) @signature `Lcom/squareup/okhttp/Dispatcher;.getMaxRequestsPerHost:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setMaxRequests`(`com.squareup.okhttp.Dispatcher` v3 @kind this, `int` v4 ) @signature `Lcom/squareup/okhttp/Dispatcher;.setMaxRequests:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setMaxRequestsPerHost`(`com.squareup.okhttp.Dispatcher` v3 @kind this, `int` v4 ) @signature `Lcom/squareup/okhttp/Dispatcher;.setMaxRequestsPerHost:(I)V` @AccessFlag PUBLIC {

  # return;
}
