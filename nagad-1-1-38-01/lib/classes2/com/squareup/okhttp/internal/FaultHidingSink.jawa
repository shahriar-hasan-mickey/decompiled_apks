record `com.squareup.okhttp.internal.FaultHidingSink` @kind class @AccessFlag  extends `i.j` @kind class {
  `boolean` `com.squareup.okhttp.internal.FaultHidingSink.hasErrors` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.squareup.okhttp.internal.FaultHidingSink` v0 @kind this, `i.x` v1 @kind object) @signature `Lcom/squareup/okhttp/internal/FaultHidingSink;.<init>:(Li/x;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `close`(`com.squareup.okhttp.internal.FaultHidingSink` v2 @kind this) @signature `Lcom/squareup/okhttp/internal/FaultHidingSink;.close:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `flush`(`com.squareup.okhttp.internal.FaultHidingSink` v2 @kind this) @signature `Lcom/squareup/okhttp/internal/FaultHidingSink;.flush:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `onException`(`com.squareup.okhttp.internal.FaultHidingSink` v0 @kind this, `java.io.IOException` v1 @kind object) @signature `Lcom/squareup/okhttp/internal/FaultHidingSink;.onException:(Ljava/io/IOException;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `write`(`com.squareup.okhttp.internal.FaultHidingSink` v1 @kind this, `i.e` v2 @kind object, `long` v3 ) @signature `Lcom/squareup/okhttp/internal/FaultHidingSink;.write:(Li/e;J)V` @AccessFlag PUBLIC {

  # return;
}
