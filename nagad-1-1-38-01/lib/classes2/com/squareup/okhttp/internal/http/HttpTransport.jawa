record `com.squareup.okhttp.internal.http.HttpTransport` @kind class @AccessFlag PUBLIC_FINAL extends `com.squareup.okhttp.internal.http.Transport` @kind interface {
  `com.squareup.okhttp.internal.http.HttpConnection` `com.squareup.okhttp.internal.http.HttpTransport.httpConnection` @AccessFlag PRIVATE_FINAL;
  `com.squareup.okhttp.internal.http.HttpEngine` `com.squareup.okhttp.internal.http.HttpTransport.httpEngine` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.squareup.okhttp.internal.http.HttpTransport` v0 @kind this, `com.squareup.okhttp.internal.http.HttpEngine` v1 @kind object, `com.squareup.okhttp.internal.http.HttpConnection` v2 @kind object) @signature `Lcom/squareup/okhttp/internal/http/HttpTransport;.<init>:(Lcom/squareup/okhttp/internal/http/HttpEngine;Lcom/squareup/okhttp/internal/http/HttpConnection;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `i.z` `getTransferStream`(`com.squareup.okhttp.internal.http.HttpTransport` v4 @kind this, `com.squareup.okhttp.Response` v5 @kind object) @signature `Lcom/squareup/okhttp/internal/http/HttpTransport;.getTransferStream:(Lcom/squareup/okhttp/Response;)Li/z;` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `canReuseConnection`(`com.squareup.okhttp.internal.http.HttpTransport` v4 @kind this) @signature `Lcom/squareup/okhttp/internal/http/HttpTransport;.canReuseConnection:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `i.x` `createRequestBody`(`com.squareup.okhttp.internal.http.HttpTransport` v2 @kind this, `com.squareup.okhttp.Request` v3 @kind object, `long` v4 ) @signature `Lcom/squareup/okhttp/internal/http/HttpTransport;.createRequestBody:(Lcom/squareup/okhttp/Request;J)Li/x;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `disconnect`(`com.squareup.okhttp.internal.http.HttpTransport` v1 @kind this, `com.squareup.okhttp.internal.http.HttpEngine` v2 @kind object) @signature `Lcom/squareup/okhttp/internal/http/HttpTransport;.disconnect:(Lcom/squareup/okhttp/internal/http/HttpEngine;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `finishRequest`(`com.squareup.okhttp.internal.http.HttpTransport` v1 @kind this) @signature `Lcom/squareup/okhttp/internal/http/HttpTransport;.finishRequest:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.ResponseBody` `openResponseBody`(`com.squareup.okhttp.internal.http.HttpTransport` v2 @kind this, `com.squareup.okhttp.Response` v3 @kind object) @signature `Lcom/squareup/okhttp/internal/http/HttpTransport;.openResponseBody:(Lcom/squareup/okhttp/Response;)Lcom/squareup/okhttp/ResponseBody;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.squareup.okhttp.Response$Builder` `readResponseHeaders`(`com.squareup.okhttp.internal.http.HttpTransport` v1 @kind this) @signature `Lcom/squareup/okhttp/internal/http/HttpTransport;.readResponseHeaders:()Lcom/squareup/okhttp/Response$Builder;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `releaseConnectionOnIdle`(`com.squareup.okhttp.internal.http.HttpTransport` v1 @kind this) @signature `Lcom/squareup/okhttp/internal/http/HttpTransport;.releaseConnectionOnIdle:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `writeRequestBody`(`com.squareup.okhttp.internal.http.HttpTransport` v1 @kind this, `com.squareup.okhttp.internal.http.RetryableSink` v2 @kind object) @signature `Lcom/squareup/okhttp/internal/http/HttpTransport;.writeRequestBody:(Lcom/squareup/okhttp/internal/http/RetryableSink;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `writeRequestHeaders`(`com.squareup.okhttp.internal.http.HttpTransport` v2 @kind this, `com.squareup.okhttp.Request` v3 @kind object) @signature `Lcom/squareup/okhttp/internal/http/HttpTransport;.writeRequestHeaders:(Lcom/squareup/okhttp/Request;)V` @AccessFlag PUBLIC {

  # return;
}
