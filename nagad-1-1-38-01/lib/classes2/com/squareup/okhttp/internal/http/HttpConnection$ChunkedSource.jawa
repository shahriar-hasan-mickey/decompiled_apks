record `com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource` @kind class @AccessFlag  extends `com.squareup.okhttp.internal.http.HttpConnection$AbstractSource` @kind class {
  `long` `com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource.bytesRemainingInChunk` @AccessFlag PRIVATE;
  `boolean` `com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource.hasMoreChunks` @AccessFlag PRIVATE;
  `com.squareup.okhttp.internal.http.HttpEngine` `com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource.httpEngine` @AccessFlag PRIVATE_FINAL;
  `com.squareup.okhttp.internal.http.HttpConnection` `com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource.this$0` @AccessFlag FINAL_SYNTHETIC;
}
global `long` `@@com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource.NO_CHUNK_YET` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource` v2 @kind this, `com.squareup.okhttp.internal.http.HttpConnection` v3 @kind object, `com.squareup.okhttp.internal.http.HttpEngine` v4 @kind object) @signature `Lcom/squareup/okhttp/internal/http/HttpConnection$ChunkedSource;.<init>:(Lcom/squareup/okhttp/internal/http/HttpConnection;Lcom/squareup/okhttp/internal/http/HttpEngine;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `readChunkSize`(`com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource` v6 @kind this) @signature `Lcom/squareup/okhttp/internal/http/HttpConnection$ChunkedSource;.readChunkSize:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `close`(`com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource` v2 @kind this) @signature `Lcom/squareup/okhttp/internal/http/HttpConnection$ChunkedSource;.close:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `read`(`com.squareup.okhttp.internal.http.HttpConnection$ChunkedSource` v7 @kind this, `i.e` v8 @kind object, `long` v9 ) @signature `Lcom/squareup/okhttp/internal/http/HttpConnection$ChunkedSource;.read:(Li/e;J)J` @AccessFlag PUBLIC {

  # return;
}
