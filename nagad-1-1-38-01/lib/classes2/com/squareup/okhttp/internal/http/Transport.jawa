record `com.squareup.okhttp.internal.http.Transport` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
global `int` `@@com.squareup.okhttp.internal.http.Transport.DISCARD_STREAM_TIMEOUT_MILLIS` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `boolean` `canReuseConnection`() @signature `Lcom/squareup/okhttp/internal/http/Transport;.canReuseConnection:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `i.x` `createRequestBody`(`com.squareup.okhttp.Request` v0 @kind object, `long` v1 ) @signature `Lcom/squareup/okhttp/internal/http/Transport;.createRequestBody:(Lcom/squareup/okhttp/Request;J)Li/x;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `disconnect`(`com.squareup.okhttp.internal.http.HttpEngine` v0 @kind object) @signature `Lcom/squareup/okhttp/internal/http/Transport;.disconnect:(Lcom/squareup/okhttp/internal/http/HttpEngine;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `finishRequest`() @signature `Lcom/squareup/okhttp/internal/http/Transport;.finishRequest:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.squareup.okhttp.ResponseBody` `openResponseBody`(`com.squareup.okhttp.Response` v0 @kind object) @signature `Lcom/squareup/okhttp/internal/http/Transport;.openResponseBody:(Lcom/squareup/okhttp/Response;)Lcom/squareup/okhttp/ResponseBody;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.squareup.okhttp.Response$Builder` `readResponseHeaders`() @signature `Lcom/squareup/okhttp/internal/http/Transport;.readResponseHeaders:()Lcom/squareup/okhttp/Response$Builder;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `releaseConnectionOnIdle`() @signature `Lcom/squareup/okhttp/internal/http/Transport;.releaseConnectionOnIdle:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `writeRequestBody`(`com.squareup.okhttp.internal.http.RetryableSink` v0 @kind object) @signature `Lcom/squareup/okhttp/internal/http/Transport;.writeRequestBody:(Lcom/squareup/okhttp/internal/http/RetryableSink;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `writeRequestHeaders`(`com.squareup.okhttp.Request` v0 @kind object) @signature `Lcom/squareup/okhttp/internal/http/Transport;.writeRequestHeaders:(Lcom/squareup/okhttp/Request;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
