record `com.google.firebase.crashlytics.d.j.i$b` @kind class @AccessFlag FINAL extends `com.google.firebase.crashlytics.d.j.v$d$c$a` @kind class {
  `java.lang.Integer` `com.google.firebase.crashlytics.d.j.i$b.a` @AccessFlag PRIVATE;
  `java.lang.String` `com.google.firebase.crashlytics.d.j.i$b.b` @AccessFlag PRIVATE;
  `java.lang.Integer` `com.google.firebase.crashlytics.d.j.i$b.c` @AccessFlag PRIVATE;
  `java.lang.Long` `com.google.firebase.crashlytics.d.j.i$b.d` @AccessFlag PRIVATE;
  `java.lang.Long` `com.google.firebase.crashlytics.d.j.i$b.e` @AccessFlag PRIVATE;
  `java.lang.Boolean` `com.google.firebase.crashlytics.d.j.i$b.f` @AccessFlag PRIVATE;
  `java.lang.Integer` `com.google.firebase.crashlytics.d.j.i$b.g` @AccessFlag PRIVATE;
  `java.lang.String` `com.google.firebase.crashlytics.d.j.i$b.h` @AccessFlag PRIVATE;
  `java.lang.String` `com.google.firebase.crashlytics.d.j.i$b.i` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.firebase.crashlytics.d.j.i$b` v0 @kind this) @signature `Lcom/google/firebase/crashlytics/d/j/i$b;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.crashlytics.d.j.v$d$c` `build`(`com.google.firebase.crashlytics.d.j.i$b` v15 @kind this) @signature `Lcom/google/firebase/crashlytics/d/j/i$b;.build:()Lcom/google/firebase/crashlytics/d/j/v$d$c;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.crashlytics.d.j.v$d$c$a` `setArch`(`com.google.firebase.crashlytics.d.j.i$b` v0 @kind this, `int` v1 ) @signature `Lcom/google/firebase/crashlytics/d/j/i$b;.setArch:(I)Lcom/google/firebase/crashlytics/d/j/v$d$c$a;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.crashlytics.d.j.v$d$c$a` `setCores`(`com.google.firebase.crashlytics.d.j.i$b` v0 @kind this, `int` v1 ) @signature `Lcom/google/firebase/crashlytics/d/j/i$b;.setCores:(I)Lcom/google/firebase/crashlytics/d/j/v$d$c$a;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.crashlytics.d.j.v$d$c$a` `setDiskSpace`(`com.google.firebase.crashlytics.d.j.i$b` v0 @kind this, `long` v1 ) @signature `Lcom/google/firebase/crashlytics/d/j/i$b;.setDiskSpace:(J)Lcom/google/firebase/crashlytics/d/j/v$d$c$a;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.crashlytics.d.j.v$d$c$a` `setManufacturer`(`com.google.firebase.crashlytics.d.j.i$b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/google/firebase/crashlytics/d/j/i$b;.setManufacturer:(Ljava/lang/String;)Lcom/google/firebase/crashlytics/d/j/v$d$c$a;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.crashlytics.d.j.v$d$c$a` `setModel`(`com.google.firebase.crashlytics.d.j.i$b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/google/firebase/crashlytics/d/j/i$b;.setModel:(Ljava/lang/String;)Lcom/google/firebase/crashlytics/d/j/v$d$c$a;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.crashlytics.d.j.v$d$c$a` `setModelClass`(`com.google.firebase.crashlytics.d.j.i$b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/google/firebase/crashlytics/d/j/i$b;.setModelClass:(Ljava/lang/String;)Lcom/google/firebase/crashlytics/d/j/v$d$c$a;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.crashlytics.d.j.v$d$c$a` `setRam`(`com.google.firebase.crashlytics.d.j.i$b` v0 @kind this, `long` v1 ) @signature `Lcom/google/firebase/crashlytics/d/j/i$b;.setRam:(J)Lcom/google/firebase/crashlytics/d/j/v$d$c$a;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.crashlytics.d.j.v$d$c$a` `setSimulator`(`com.google.firebase.crashlytics.d.j.i$b` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/firebase/crashlytics/d/j/i$b;.setSimulator:(Z)Lcom/google/firebase/crashlytics/d/j/v$d$c$a;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.firebase.crashlytics.d.j.v$d$c$a` `setState`(`com.google.firebase.crashlytics.d.j.i$b` v0 @kind this, `int` v1 ) @signature `Lcom/google/firebase/crashlytics/d/j/i$b;.setState:(I)Lcom/google/firebase/crashlytics/d/j/v$d$c$a;` @AccessFlag PUBLIC {

  # return;
}
