record `com.google.firebase.crashlytics.d.h.r` @kind class @AccessFlag  extends `java.lang.Thread$UncaughtExceptionHandler` @kind interface {
  `com.google.firebase.crashlytics.d.h.r$a` `com.google.firebase.crashlytics.d.h.r.a` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.crashlytics.d.q.e` `com.google.firebase.crashlytics.d.h.r.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Thread$UncaughtExceptionHandler` `com.google.firebase.crashlytics.d.h.r.c` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicBoolean` `com.google.firebase.crashlytics.d.h.r.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.crashlytics.d.h.r` v0 @kind this, `com.google.firebase.crashlytics.d.h.r$a` v1 @kind object, `com.google.firebase.crashlytics.d.q.e` v2 @kind object, `java.lang.Thread$UncaughtExceptionHandler` v3 @kind object) @signature `Lcom/google/firebase/crashlytics/d/h/r;.<init>:(Lcom/google/firebase/crashlytics/d/h/r$a;Lcom/google/firebase/crashlytics/d/q/e;Ljava/lang/Thread$UncaughtExceptionHandler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `a`(`com.google.firebase.crashlytics.d.h.r` v1 @kind this) @signature `Lcom/google/firebase/crashlytics/d/h/r;.a:()Z` @AccessFlag  {

  # return;
}
procedure `void` `uncaughtException`(`com.google.firebase.crashlytics.d.h.r` v5 @kind this, `java.lang.Thread` v6 @kind object, `java.lang.Throwable` v7 @kind object) @signature `Lcom/google/firebase/crashlytics/d/h/r;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {

  # return;
}
