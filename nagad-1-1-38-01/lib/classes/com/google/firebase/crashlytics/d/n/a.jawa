record `com.google.firebase.crashlytics.d.n.a` @kind class @AccessFlag FINAL {
  `byte`[] `com.google.firebase.crashlytics.d.n.a.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.firebase.crashlytics.d.n.a.b` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/crashlytics/d/n/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.crashlytics.d.n.a` v1 @kind this, `byte`[] v2 @kind object) @signature `Lcom/google/firebase/crashlytics/d/n/a;.<init>:([B)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `com.google.firebase.crashlytics.d.n.a` `copyFrom`(`byte`[] v2 @kind object) @signature `Lcom/google/firebase/crashlytics/d/n/a;.copyFrom:([B)Lcom/google/firebase/crashlytics/d/n/a;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.firebase.crashlytics.d.n.a` `copyFrom`(`byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/firebase/crashlytics/d/n/a;.copyFrom:([BII)Lcom/google/firebase/crashlytics/d/n/a;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.firebase.crashlytics.d.n.a` `copyFromUtf8`(`java.lang.String` v2 @kind object) @signature `Lcom/google/firebase/crashlytics/d/n/a;.copyFromUtf8:(Ljava/lang/String;)Lcom/google/firebase/crashlytics/d/n/a;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `copyTo`(`com.google.firebase.crashlytics.d.n.a` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/google/firebase/crashlytics/d/n/a;.copyTo:([BIII)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.google.firebase.crashlytics.d.n.a` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lcom/google/firebase/crashlytics/d/n/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.firebase.crashlytics.d.n.a` v5 @kind this) @signature `Lcom/google/firebase/crashlytics/d/n/a;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.io.InputStream` `newInput`(`com.google.firebase.crashlytics.d.n.a` v2 @kind this) @signature `Lcom/google/firebase/crashlytics/d/n/a;.newInput:()Ljava/io/InputStream;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `size`(`com.google.firebase.crashlytics.d.n.a` v1 @kind this) @signature `Lcom/google/firebase/crashlytics/d/n/a;.size:()I` @AccessFlag PUBLIC {

  # return;
}
