record `com.google.android.gms.internal.firebase_ml.c2` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `com.google.android.gms.internal.firebase_ml.c2.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Field` `com.google.android.gms.internal.firebase_ml.c2.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.google.android.gms.internal.firebase_ml.c2.c` @AccessFlag PRIVATE_FINAL;
}
global `java.util.Map` `@@com.google.android.gms.internal.firebase_ml.c2.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/gms/internal/firebase_ml/c2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.android.gms.internal.firebase_ml.c2` v0 @kind this, `java.lang.reflect.Field` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/google/android/gms/internal/firebase_ml/c2;.<init>:(Ljava/lang/reflect/Field;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `a`(`java.lang.reflect.Field` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/android/gms/internal/firebase_ml/c2;.a:(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.google.android.gms.internal.firebase_ml.c2` `zza`(`java.lang.Enum` v5 @kind object) @signature `Lcom/google/android/gms/internal/firebase_ml/c2;.zza:(Ljava/lang/Enum;)Lcom/google/android/gms/internal/firebase_ml/c2;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.android.gms.internal.firebase_ml.c2` `zza`(`java.lang.reflect.Field` v5 @kind object) @signature `Lcom/google/android/gms/internal/firebase_ml/c2;.zza:(Ljava/lang/reflect/Field;)Lcom/google/android/gms/internal/firebase_ml/c2;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `zza`(`java.lang.reflect.Field` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lcom/google/android/gms/internal/firebase_ml/c2;.zza:(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.reflect.Type` `getGenericType`(`com.google.android.gms.internal.firebase_ml.c2` v1 @kind this) @signature `Lcom/google/android/gms/internal/firebase_ml/c2;.getGenericType:()Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.String` `getName`(`com.google.android.gms.internal.firebase_ml.c2` v1 @kind this) @signature `Lcom/google/android/gms/internal/firebase_ml/c2;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `boolean` `isPrimitive`(`com.google.android.gms.internal.firebase_ml.c2` v1 @kind this) @signature `Lcom/google/android/gms/internal/firebase_ml/c2;.isPrimitive:()Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `zzb`(`com.google.android.gms.internal.firebase_ml.c2` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/android/gms/internal/firebase_ml/c2;.zzb:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.reflect.Field` `zzgp`(`com.google.android.gms.internal.firebase_ml.c2` v1 @kind this) @signature `Lcom/google/android/gms/internal/firebase_ml/c2;.zzgp:()Ljava/lang/reflect/Field;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `boolean` `zzgq`(`com.google.android.gms.internal.firebase_ml.c2` v1 @kind this) @signature `Lcom/google/android/gms/internal/firebase_ml/c2;.zzgq:()Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Enum` `zzgr`(`com.google.android.gms.internal.firebase_ml.c2` v2 @kind this) @signature `Lcom/google/android/gms/internal/firebase_ml/c2;.zzgr:()Ljava/lang/Enum;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.Object` `zzh`(`com.google.android.gms.internal.firebase_ml.c2` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/android/gms/internal/firebase_ml/c2;.zzh:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {

  # return;
}
