record `com.google.gson.internal.$Gson$Types` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.reflect.Type`[] `@@com.google.gson.internal.$Gson$Types.EMPTY_TYPE_ARRAY` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/gson/internal/$Gson$Types;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.gson.internal.$Gson$Types` v1 @kind this) @signature `Lcom/google/gson/internal/$Gson$Types;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `java.lang.reflect.GenericArrayType` `arrayOf`(`java.lang.reflect.Type` v1 @kind object) @signature `Lcom/google/gson/internal/$Gson$Types;.arrayOf:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/GenericArrayType;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.reflect.Type` `canonicalize`(`java.lang.reflect.Type` v3 @kind object) @signature `Lcom/google/gson/internal/$Gson$Types;.canonicalize:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `checkNotPrimitive`(`java.lang.reflect.Type` v1 @kind object) @signature `Lcom/google/gson/internal/$Gson$Types;.checkNotPrimitive:(Ljava/lang/reflect/Type;)V` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.Class` `declaringClassOf`(`java.lang.reflect.TypeVariable` v1 @kind object) @signature `Lcom/google/gson/internal/$Gson$Types;.declaringClassOf:(Ljava/lang/reflect/TypeVariable;)Ljava/lang/Class;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `equal`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/gson/internal/$Gson$Types;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `equals`(`java.lang.reflect.Type` v4 @kind object, `java.lang.reflect.Type` v5 @kind object) @signature `Lcom/google/gson/internal/$Gson$Types;.equals:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.reflect.Type` `getArrayComponentType`(`java.lang.reflect.Type` v1 @kind object) @signature `Lcom/google/gson/internal/$Gson$Types;.getArrayComponentType:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.reflect.Type` `getCollectionElementType`(`java.lang.reflect.Type` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/google/gson/internal/$Gson$Types;.getCollectionElementType:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.reflect.Type` `getGenericSupertype`(`java.lang.reflect.Type` v3 @kind object, `java.lang.Class` v4 @kind object, `java.lang.Class` v5 @kind object) @signature `Lcom/google/gson/internal/$Gson$Types;.getGenericSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.reflect.Type`[] `getMapKeyAndValueTypes`(`java.lang.reflect.Type` v5 @kind object, `java.lang.Class` v6 @kind object) @signature `Lcom/google/gson/internal/$Gson$Types;.getMapKeyAndValueTypes:(Ljava/lang/reflect/Type;Ljava/lang/Class;)[Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Class` `getRawType`(`java.lang.reflect.Type` v4 @kind object) @signature `Lcom/google/gson/internal/$Gson$Types;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.reflect.Type` `getSupertype`(`java.lang.reflect.Type` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/google/gson/internal/$Gson$Types;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @AccessFlag STATIC {

  # return;
}
procedure `int` `hashCodeOrZero`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/gson/internal/$Gson$Types;.hashCodeOrZero:(Ljava/lang/Object;)I` @AccessFlag STATIC {

  # return;
}
procedure `int` `indexOf`(`java.lang.Object`[] v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/google/gson/internal/$Gson$Types;.indexOf:([Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.reflect.ParameterizedType` `newParameterizedTypeWithOwner`(`java.lang.reflect.Type` v1 @kind object, `java.lang.reflect.Type` v2 @kind object, `java.lang.reflect.Type`[] v3 @kind object) @signature `Lcom/google/gson/internal/$Gson$Types;.newParameterizedTypeWithOwner:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.reflect.Type` `resolve`(`java.lang.reflect.Type` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.reflect.Type` v3 @kind object) @signature `Lcom/google/gson/internal/$Gson$Types;.resolve:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.reflect.Type` `resolve`(`java.lang.reflect.Type` v8 @kind object, `java.lang.Class` v9 @kind object, `java.lang.reflect.Type` v10 @kind object, `java.util.Collection` v11 @kind object) @signature `Lcom/google/gson/internal/$Gson$Types;.resolve:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;Ljava/util/Collection;)Ljava/lang/reflect/Type;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.reflect.Type` `resolveTypeVariable`(`java.lang.reflect.Type` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.reflect.TypeVariable` v3 @kind object) @signature `Lcom/google/gson/internal/$Gson$Types;.resolveTypeVariable:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/TypeVariable;)Ljava/lang/reflect/Type;` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.reflect.WildcardType` `subtypeOf`(`java.lang.reflect.Type` v2 @kind object) @signature `Lcom/google/gson/internal/$Gson$Types;.subtypeOf:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.reflect.WildcardType` `supertypeOf`(`java.lang.reflect.Type` v4 @kind object) @signature `Lcom/google/gson/internal/$Gson$Types;.supertypeOf:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `typeToString`(`java.lang.reflect.Type` v1 @kind object) @signature `Lcom/google/gson/internal/$Gson$Types;.typeToString:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
