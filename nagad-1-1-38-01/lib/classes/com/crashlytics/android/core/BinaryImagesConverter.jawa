record `com.crashlytics.android.core.BinaryImagesConverter` @kind class @AccessFlag  {
  `android.content.Context` `com.crashlytics.android.core.BinaryImagesConverter.context` @AccessFlag PRIVATE_FINAL;
  `com.crashlytics.android.core.BinaryImagesConverter$FileIdStrategy` `com.crashlytics.android.core.BinaryImagesConverter.fileIdStrategy` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@com.crashlytics.android.core.BinaryImagesConverter.DATA_DIR` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.crashlytics.android.core.BinaryImagesConverter` v0 @kind this, `android.content.Context` v1 @kind object, `com.crashlytics.android.core.BinaryImagesConverter$FileIdStrategy` v2 @kind object) @signature `Lcom/crashlytics/android/core/BinaryImagesConverter;.<init>:(Landroid/content/Context;Lcom/crashlytics/android/core/BinaryImagesConverter$FileIdStrategy;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.io.File` `correctDataPath`(`com.crashlytics.android.core.BinaryImagesConverter` v4 @kind this, `java.io.File` v5 @kind object) @signature `Lcom/crashlytics/android/core/BinaryImagesConverter;.correctDataPath:(Ljava/io/File;)Ljava/io/File;` @AccessFlag PRIVATE {

  # return;
}
procedure `org.json.JSONObject` `createBinaryImageJson`(`java.lang.String` v4 @kind object, `com.crashlytics.android.core.ProcMapEntry` v5 @kind object) @signature `Lcom/crashlytics/android/core/BinaryImagesConverter;.createBinaryImageJson:(Ljava/lang/String;Lcom/crashlytics/android/core/ProcMapEntry;)Lorg/json/JSONObject;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `byte`[] `generateBinaryImagesJsonString`(`org.json.JSONArray` v3 @kind object) @signature `Lcom/crashlytics/android/core/BinaryImagesConverter;.generateBinaryImagesJsonString:(Lorg/json/JSONArray;)[B` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.io.File` `getLibraryFile`(`com.crashlytics.android.core.BinaryImagesConverter` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/crashlytics/android/core/BinaryImagesConverter;.getLibraryFile:(Ljava/lang/String;)Ljava/io/File;` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `isRelevant`(`com.crashlytics.android.core.ProcMapEntry` v2 @kind object) @signature `Lcom/crashlytics/android/core/BinaryImagesConverter;.isRelevant:(Lcom/crashlytics/android/core/ProcMapEntry;)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.String` `joinMapsEntries`(`org.json.JSONArray` v3 @kind object) @signature `Lcom/crashlytics/android/core/BinaryImagesConverter;.joinMapsEntries:(Lorg/json/JSONArray;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `org.json.JSONObject` `jsonFromMapEntryString`(`com.crashlytics.android.core.BinaryImagesConverter` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lcom/crashlytics/android/core/BinaryImagesConverter;.jsonFromMapEntryString:(Ljava/lang/String;)Lorg/json/JSONObject;` @AccessFlag PRIVATE {

  # return;
}
procedure `org.json.JSONArray` `parseProcMapsJsonFromStream`(`com.crashlytics.android.core.BinaryImagesConverter` v2 @kind this, `java.io.BufferedReader` v3 @kind object) @signature `Lcom/crashlytics/android/core/BinaryImagesConverter;.parseProcMapsJsonFromStream:(Ljava/io/BufferedReader;)Lorg/json/JSONArray;` @AccessFlag PRIVATE {

  # return;
}
procedure `org.json.JSONArray` `parseProcMapsJsonFromString`(`com.crashlytics.android.core.BinaryImagesConverter` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lcom/crashlytics/android/core/BinaryImagesConverter;.parseProcMapsJsonFromString:(Ljava/lang/String;)Lorg/json/JSONArray;` @AccessFlag PRIVATE {

  # return;
}
procedure `byte`[] `convert`(`com.crashlytics.android.core.BinaryImagesConverter` v0 @kind this, `java.io.BufferedReader` v1 @kind object) @signature `Lcom/crashlytics/android/core/BinaryImagesConverter;.convert:(Ljava/io/BufferedReader;)[B` @AccessFlag  {

  # return;
}
procedure `byte`[] `convert`(`com.crashlytics.android.core.BinaryImagesConverter` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/crashlytics/android/core/BinaryImagesConverter;.convert:(Ljava/lang/String;)[B` @AccessFlag  {

  # return;
}
