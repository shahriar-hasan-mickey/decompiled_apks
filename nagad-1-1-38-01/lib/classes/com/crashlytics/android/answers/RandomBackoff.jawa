record `com.crashlytics.android.answers.RandomBackoff` @kind class @AccessFlag  extends `io.fabric.sdk.android.services.concurrency.n.a` @kind interface {
  `io.fabric.sdk.android.services.concurrency.n.a` `com.crashlytics.android.answers.RandomBackoff.backoff` @AccessFlag FINAL;
  `double` `com.crashlytics.android.answers.RandomBackoff.jitterPercent` @AccessFlag FINAL;
  `java.util.Random` `com.crashlytics.android.answers.RandomBackoff.random` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.crashlytics.android.answers.RandomBackoff` v1 @kind this, `io.fabric.sdk.android.services.concurrency.n.a` v2 @kind object, `double` v3 ) @signature `Lcom/crashlytics/android/answers/RandomBackoff;.<init>:(Lio/fabric/sdk/android/services/concurrency/n/a;D)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.crashlytics.android.answers.RandomBackoff` v3 @kind this, `io.fabric.sdk.android.services.concurrency.n.a` v4 @kind object, `double` v5 , `java.util.Random` v7 @kind object) @signature `Lcom/crashlytics/android/answers/RandomBackoff;.<init>:(Lio/fabric/sdk/android/services/concurrency/n/a;DLjava/util/Random;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `long` `getDelayMillis`(`com.crashlytics.android.answers.RandomBackoff` v4 @kind this, `int` v5 ) @signature `Lcom/crashlytics/android/answers/RandomBackoff;.getDelayMillis:(I)J` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `randomJitter`(`com.crashlytics.android.answers.RandomBackoff` v6 @kind this) @signature `Lcom/crashlytics/android/answers/RandomBackoff;.randomJitter:()D` @AccessFlag  {

  # return;
}
