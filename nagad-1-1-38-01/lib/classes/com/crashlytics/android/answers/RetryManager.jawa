record `com.crashlytics.android.answers.RetryManager` @kind class @AccessFlag  {
  `long` `com.crashlytics.android.answers.RetryManager.lastRetry` @AccessFlag ;
  `io.fabric.sdk.android.services.concurrency.n.e` `com.crashlytics.android.answers.RetryManager.retryState` @AccessFlag PRIVATE;
}
global `long` `@@com.crashlytics.android.answers.RetryManager.NANOSECONDS_IN_MS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.crashlytics.android.answers.RetryManager` v1 @kind this, `io.fabric.sdk.android.services.concurrency.n.e` v2 @kind object) @signature `Lcom/crashlytics/android/answers/RetryManager;.<init>:(Lio/fabric/sdk/android/services/concurrency/n/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `canRetry`(`com.crashlytics.android.answers.RetryManager` v4 @kind this, `long` v5 ) @signature `Lcom/crashlytics/android/answers/RetryManager;.canRetry:(J)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `recordRetry`(`com.crashlytics.android.answers.RetryManager` v0 @kind this, `long` v1 ) @signature `Lcom/crashlytics/android/answers/RetryManager;.recordRetry:(J)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`com.crashlytics.android.answers.RetryManager` v2 @kind this) @signature `Lcom/crashlytics/android/answers/RetryManager;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
