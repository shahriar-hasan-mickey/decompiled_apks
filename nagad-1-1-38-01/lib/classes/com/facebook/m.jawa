record `com.facebook.m` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.OutputStream` @kind class, `com.facebook.o` @kind interface {
  `java.util.Map` `com.facebook.m.f` @AccessFlag PRIVATE_FINAL;
  `com.facebook.GraphRequest` `com.facebook.m.g` @AccessFlag PRIVATE;
  `com.facebook.p` `com.facebook.m.h` @AccessFlag PRIVATE;
  `int` `com.facebook.m.i` @AccessFlag PRIVATE;
  `android.os.Handler` `com.facebook.m.j` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.facebook.m` v0 @kind this, `android.os.Handler` v1 @kind object) @signature `Lcom/facebook/m;.<init>:(Landroid/os/Handler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `addProgress`(`com.facebook.m` v3 @kind this, `long` v4 ) @signature `Lcom/facebook/m;.addProgress:(J)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `int` `getMaxProgress`(`com.facebook.m` v1 @kind this) @signature `Lcom/facebook/m;.getMaxProgress:()I` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.util.Map` `getProgressMap`(`com.facebook.m` v1 @kind this) @signature `Lcom/facebook/m;.getProgressMap:()Ljava/util/Map;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `setCurrentRequest`(`com.facebook.m` v1 @kind this, `com.facebook.GraphRequest` v2 @kind object) @signature `Lcom/facebook/m;.setCurrentRequest:(Lcom/facebook/GraphRequest;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `write`(`com.facebook.m` v2 @kind this, `int` v3 ) @signature `Lcom/facebook/m;.write:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `write`(`com.facebook.m` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/facebook/m;.write:([B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `write`(`com.facebook.m` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/facebook/m;.write:([BII)V` @AccessFlag PUBLIC {

  # return;
}
