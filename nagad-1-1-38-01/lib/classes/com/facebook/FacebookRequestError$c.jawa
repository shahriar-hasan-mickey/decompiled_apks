record `com.facebook.FacebookRequestError$c` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`com.facebook.FacebookRequestError$c` v0 @kind this) @signature `Lcom/facebook/FacebookRequestError$c;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.facebook.FacebookRequestError$c` v0 @kind this, `kotlin.v.c.f` v1 @kind object) @signature `Lcom/facebook/FacebookRequestError$c;.<init>:(Lkotlin/v/c/f;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `com.facebook.FacebookRequestError` `checkResponseAndCreateError`(`com.facebook.FacebookRequestError$c` v19 @kind this, `org.json.JSONObject` v20 @kind object, `java.lang.Object` v21 @kind object, `java.net.HttpURLConnection` v22 @kind object) @signature `Lcom/facebook/FacebookRequestError$c;.checkResponseAndCreateError:(Lorg/json/JSONObject;Ljava/lang/Object;Ljava/net/HttpURLConnection;)Lcom/facebook/FacebookRequestError;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.facebook.internal.h` `getErrorClassification`(`com.facebook.FacebookRequestError$c` v1 @kind this) @signature `Lcom/facebook/FacebookRequestError$c;.getErrorClassification:()Lcom/facebook/internal/h;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.facebook.FacebookRequestError$d` `getHTTP_RANGE_SUCCESS`(`com.facebook.FacebookRequestError$c` v1 @kind this) @signature `Lcom/facebook/FacebookRequestError$c;.getHTTP_RANGE_SUCCESS:()Lcom/facebook/FacebookRequestError$d;` @AccessFlag PUBLIC_FINAL {

  # return;
}
