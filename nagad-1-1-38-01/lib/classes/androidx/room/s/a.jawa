record `androidx.room.s.a` @kind class @AccessFlag PUBLIC {
  `java.io.File` `androidx.room.s.a.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.locks.Lock` `androidx.room.s.a.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `androidx.room.s.a.c` @AccessFlag PRIVATE_FINAL;
  `java.nio.channels.FileChannel` `androidx.room.s.a.d` @AccessFlag PRIVATE;
}
global `java.util.Map` `@@androidx.room.s.a.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Landroidx/room/s/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.room.s.a` v2 @kind this, `java.lang.String` v3 @kind object, `java.io.File` v4 @kind object, `boolean` v5 ) @signature `Landroidx/room/s/a;.<init>:(Ljava/lang/String;Ljava/io/File;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.util.concurrent.locks.Lock` `a`(`java.lang.String` v3 @kind object) @signature `Landroidx/room/s/a;.a:(Ljava/lang/String;)Ljava/util/concurrent/locks/Lock;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `lock`(`androidx.room.s.a` v3 @kind this) @signature `Landroidx/room/s/a;.lock:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `unlock`(`androidx.room.s.a` v1 @kind this) @signature `Landroidx/room/s/a;.unlock:()V` @AccessFlag PUBLIC {

  # return;
}
