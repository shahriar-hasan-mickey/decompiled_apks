record `androidx.room.j` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `c.r.a.b` `androidx.room.j.a` @AccessFlag PROTECTED_VOLATILE;
  `java.util.concurrent.Executor` `androidx.room.j.b` @AccessFlag PRIVATE;
  `c.r.a.c` `androidx.room.j.c` @AccessFlag PRIVATE;
  `androidx.room.g` `androidx.room.j.d` @AccessFlag PRIVATE_FINAL;
  `boolean` `androidx.room.j.e` @AccessFlag PRIVATE;
  `boolean` `androidx.room.j.f` @AccessFlag ;
  `java.util.List` `androidx.room.j.g` @AccessFlag PROTECTED;
  `java.util.concurrent.locks.ReentrantReadWriteLock` `androidx.room.j.h` @AccessFlag PRIVATE_FINAL;
  `java.lang.ThreadLocal` `androidx.room.j.i` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`androidx.room.j` v1 @kind this) @signature `Landroidx/room/j;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `b`() @signature `Landroidx/room/j;.b:()Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.util.concurrent.locks.Lock` `a`(`androidx.room.j` v1 @kind this) @signature `Landroidx/room/j;.a:()Ljava/util/concurrent/locks/Lock;` @AccessFlag  {

  # return;
}
procedure `void` `assertNotMainThread`(`androidx.room.j` v2 @kind this) @signature `Landroidx/room/j;.assertNotMainThread:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `assertNotSuspendingTransaction`(`androidx.room.j` v2 @kind this) @signature `Landroidx/room/j;.assertNotSuspendingTransaction:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `beginTransaction`(`androidx.room.j` v2 @kind this) @signature `Landroidx/room/j;.beginTransaction:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `clearAllTables`() @signature `Landroidx/room/j;.clearAllTables:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `c.r.a.f` `compileStatement`(`androidx.room.j` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Landroidx/room/j;.compileStatement:(Ljava/lang/String;)Lc/r/a/f;` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.room.g` `createInvalidationTracker`() @signature `Landroidx/room/j;.createInvalidationTracker:()Landroidx/room/g;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `c.r.a.c` `createOpenHelper`(`androidx.room.a` v0 @kind object) @signature `Landroidx/room/j;.createOpenHelper:(Landroidx/room/a;)Lc/r/a/c;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `endTransaction`(`androidx.room.j` v1 @kind this) @signature `Landroidx/room/j;.endTransaction:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `c.r.a.c` `getOpenHelper`(`androidx.room.j` v1 @kind this) @signature `Landroidx/room/j;.getOpenHelper:()Lc/r/a/c;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.concurrent.Executor` `getQueryExecutor`(`androidx.room.j` v1 @kind this) @signature `Landroidx/room/j;.getQueryExecutor:()Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `inTransaction`(`androidx.room.j` v1 @kind this) @signature `Landroidx/room/j;.inTransaction:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`androidx.room.j` v3 @kind this, `androidx.room.a` v4 @kind object) @signature `Landroidx/room/j;.init:(Landroidx/room/a;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `internalInitInvalidationTracker`(`androidx.room.j` v1 @kind this, `c.r.a.b` v2 @kind object) @signature `Landroidx/room/j;.internalInitInvalidationTracker:(Lc/r/a/b;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `isOpen`(`androidx.room.j` v1 @kind this) @signature `Landroidx/room/j;.isOpen:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `android.database.Cursor` `query`(`androidx.room.j` v1 @kind this, `c.r.a.e` v2 @kind object) @signature `Landroidx/room/j;.query:(Lc/r/a/e;)Landroid/database/Cursor;` @AccessFlag PUBLIC {

  # return;
}
procedure `android.database.Cursor` `query`(`androidx.room.j` v2 @kind this, `c.r.a.e` v3 @kind object, `android.os.CancellationSignal` v4 @kind object) @signature `Landroidx/room/j;.query:(Lc/r/a/e;Landroid/os/CancellationSignal;)Landroid/database/Cursor;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setTransactionSuccessful`(`androidx.room.j` v1 @kind this) @signature `Landroidx/room/j;.setTransactionSuccessful:()V` @AccessFlag PUBLIC {

  # return;
}
