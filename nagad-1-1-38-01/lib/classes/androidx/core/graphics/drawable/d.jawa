record `androidx.core.graphics.drawable.d` @kind class @AccessFlag  extends `android.graphics.drawable.Drawable` @kind class, `android.graphics.drawable.Drawable$Callback` @kind interface, `androidx.core.graphics.drawable.c` @kind interface, `androidx.core.graphics.drawable.b` @kind interface {
  `int` `androidx.core.graphics.drawable.d.f` @AccessFlag PRIVATE;
  `android.graphics.PorterDuff$Mode` `androidx.core.graphics.drawable.d.g` @AccessFlag PRIVATE;
  `boolean` `androidx.core.graphics.drawable.d.h` @AccessFlag PRIVATE;
  `androidx.core.graphics.drawable.f` `androidx.core.graphics.drawable.d.i` @AccessFlag ;
  `boolean` `androidx.core.graphics.drawable.d.j` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `androidx.core.graphics.drawable.d.k` @AccessFlag ;
}
global `android.graphics.PorterDuff$Mode` `@@androidx.core.graphics.drawable.d.l` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Landroidx/core/graphics/drawable/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.core.graphics.drawable.d` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object) @signature `Landroidx/core/graphics/drawable/d;.<init>:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.core.graphics.drawable.d` v0 @kind this, `androidx.core.graphics.drawable.f` v1 @kind object, `android.content.res.Resources` v2 @kind object) @signature `Landroidx/core/graphics/drawable/d;.<init>:(Landroidx/core/graphics/drawable/f;Landroid/content/res/Resources;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `androidx.core.graphics.drawable.f` `a`(`androidx.core.graphics.drawable.d` v2 @kind this) @signature `Landroidx/core/graphics/drawable/d;.a:()Landroidx/core/graphics/drawable/f;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `a`(`androidx.core.graphics.drawable.d` v1 @kind this, `android.content.res.Resources` v2 @kind object) @signature `Landroidx/core/graphics/drawable/d;.a:(Landroid/content/res/Resources;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `a`(`androidx.core.graphics.drawable.d` v4 @kind this, `int`[] v5 @kind object) @signature `Landroidx/core/graphics/drawable/d;.a:([I)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `draw`(`androidx.core.graphics.drawable.d` v1 @kind this, `android.graphics.Canvas` v2 @kind object) @signature `Landroidx/core/graphics/drawable/d;.draw:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getChangingConfigurations`(`androidx.core.graphics.drawable.d` v2 @kind this) @signature `Landroidx/core/graphics/drawable/d;.getChangingConfigurations:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `android.graphics.drawable.Drawable$ConstantState` `getConstantState`(`androidx.core.graphics.drawable.d` v2 @kind this) @signature `Landroidx/core/graphics/drawable/d;.getConstantState:()Landroid/graphics/drawable/Drawable$ConstantState;` @AccessFlag PUBLIC {

  # return;
}
procedure `android.graphics.drawable.Drawable` `getCurrent`(`androidx.core.graphics.drawable.d` v1 @kind this) @signature `Landroidx/core/graphics/drawable/d;.getCurrent:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getIntrinsicHeight`(`androidx.core.graphics.drawable.d` v1 @kind this) @signature `Landroidx/core/graphics/drawable/d;.getIntrinsicHeight:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getIntrinsicWidth`(`androidx.core.graphics.drawable.d` v1 @kind this) @signature `Landroidx/core/graphics/drawable/d;.getIntrinsicWidth:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getMinimumHeight`(`androidx.core.graphics.drawable.d` v1 @kind this) @signature `Landroidx/core/graphics/drawable/d;.getMinimumHeight:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getMinimumWidth`(`androidx.core.graphics.drawable.d` v1 @kind this) @signature `Landroidx/core/graphics/drawable/d;.getMinimumWidth:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getOpacity`(`androidx.core.graphics.drawable.d` v1 @kind this) @signature `Landroidx/core/graphics/drawable/d;.getOpacity:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `getPadding`(`androidx.core.graphics.drawable.d` v1 @kind this, `android.graphics.Rect` v2 @kind object) @signature `Landroidx/core/graphics/drawable/d;.getPadding:(Landroid/graphics/Rect;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int`[] `getState`(`androidx.core.graphics.drawable.d` v1 @kind this) @signature `Landroidx/core/graphics/drawable/d;.getState:()[I` @AccessFlag PUBLIC {

  # return;
}
procedure `android.graphics.Region` `getTransparentRegion`(`androidx.core.graphics.drawable.d` v1 @kind this) @signature `Landroidx/core/graphics/drawable/d;.getTransparentRegion:()Landroid/graphics/Region;` @AccessFlag PUBLIC {

  # return;
}
procedure `android.graphics.drawable.Drawable` `getWrappedDrawable`(`androidx.core.graphics.drawable.d` v1 @kind this) @signature `Landroidx/core/graphics/drawable/d;.getWrappedDrawable:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `invalidateDrawable`(`androidx.core.graphics.drawable.d` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Landroidx/core/graphics/drawable/d;.invalidateDrawable:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isAutoMirrored`(`androidx.core.graphics.drawable.d` v1 @kind this) @signature `Landroidx/core/graphics/drawable/d;.isAutoMirrored:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isCompatTintEnabled`(`androidx.core.graphics.drawable.d` v1 @kind this) @signature `Landroidx/core/graphics/drawable/d;.isCompatTintEnabled:()Z` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `isStateful`(`androidx.core.graphics.drawable.d` v1 @kind this) @signature `Landroidx/core/graphics/drawable/d;.isStateful:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `jumpToCurrentState`(`androidx.core.graphics.drawable.d` v1 @kind this) @signature `Landroidx/core/graphics/drawable/d;.jumpToCurrentState:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `android.graphics.drawable.Drawable` `mutate`(`androidx.core.graphics.drawable.d` v2 @kind this) @signature `Landroidx/core/graphics/drawable/d;.mutate:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `onBoundsChange`(`androidx.core.graphics.drawable.d` v1 @kind this, `android.graphics.Rect` v2 @kind object) @signature `Landroidx/core/graphics/drawable/d;.onBoundsChange:(Landroid/graphics/Rect;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `onLevelChange`(`androidx.core.graphics.drawable.d` v1 @kind this, `int` v2 ) @signature `Landroidx/core/graphics/drawable/d;.onLevelChange:(I)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `scheduleDrawable`(`androidx.core.graphics.drawable.d` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object, `java.lang.Runnable` v2 @kind object, `long` v3 ) @signature `Landroidx/core/graphics/drawable/d;.scheduleDrawable:(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setAlpha`(`androidx.core.graphics.drawable.d` v1 @kind this, `int` v2 ) @signature `Landroidx/core/graphics/drawable/d;.setAlpha:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setAutoMirrored`(`androidx.core.graphics.drawable.d` v1 @kind this, `boolean` v2 ) @signature `Landroidx/core/graphics/drawable/d;.setAutoMirrored:(Z)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setChangingConfigurations`(`androidx.core.graphics.drawable.d` v1 @kind this, `int` v2 ) @signature `Landroidx/core/graphics/drawable/d;.setChangingConfigurations:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setColorFilter`(`androidx.core.graphics.drawable.d` v1 @kind this, `android.graphics.ColorFilter` v2 @kind object) @signature `Landroidx/core/graphics/drawable/d;.setColorFilter:(Landroid/graphics/ColorFilter;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setDither`(`androidx.core.graphics.drawable.d` v1 @kind this, `boolean` v2 ) @signature `Landroidx/core/graphics/drawable/d;.setDither:(Z)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setFilterBitmap`(`androidx.core.graphics.drawable.d` v1 @kind this, `boolean` v2 ) @signature `Landroidx/core/graphics/drawable/d;.setFilterBitmap:(Z)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `setState`(`androidx.core.graphics.drawable.d` v1 @kind this, `int`[] v2 @kind object) @signature `Landroidx/core/graphics/drawable/d;.setState:([I)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setTint`(`androidx.core.graphics.drawable.d` v0 @kind this, `int` v1 ) @signature `Landroidx/core/graphics/drawable/d;.setTint:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setTintList`(`androidx.core.graphics.drawable.d` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Landroidx/core/graphics/drawable/d;.setTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setTintMode`(`androidx.core.graphics.drawable.d` v1 @kind this, `android.graphics.PorterDuff$Mode` v2 @kind object) @signature `Landroidx/core/graphics/drawable/d;.setTintMode:(Landroid/graphics/PorterDuff$Mode;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `setVisible`(`androidx.core.graphics.drawable.d` v1 @kind this, `boolean` v2 , `boolean` v3 ) @signature `Landroidx/core/graphics/drawable/d;.setVisible:(ZZ)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setWrappedDrawable`(`androidx.core.graphics.drawable.d` v2 @kind this, `android.graphics.drawable.Drawable` v3 @kind object) @signature `Landroidx/core/graphics/drawable/d;.setWrappedDrawable:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `unscheduleDrawable`(`androidx.core.graphics.drawable.d` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object, `java.lang.Runnable` v2 @kind object) @signature `Landroidx/core/graphics/drawable/d;.unscheduleDrawable:(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {

  # return;
}
