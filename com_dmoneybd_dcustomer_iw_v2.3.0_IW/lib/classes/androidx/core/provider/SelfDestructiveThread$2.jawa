record `androidx.core.provider.SelfDestructiveThread$2` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `java.util.concurrent.Callable` `androidx.core.provider.SelfDestructiveThread$2.a` @AccessFlag FINAL_SYNTHETIC;
  `android.os.Handler` `androidx.core.provider.SelfDestructiveThread$2.b` @AccessFlag FINAL_SYNTHETIC;
  `androidx.core.provider.SelfDestructiveThread$ReplyCallback` `androidx.core.provider.SelfDestructiveThread$2.c` @AccessFlag FINAL_SYNTHETIC;
  `androidx.core.provider.SelfDestructiveThread` `androidx.core.provider.SelfDestructiveThread$2.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`androidx.core.provider.SelfDestructiveThread$2` v0 @kind this, `androidx.core.provider.SelfDestructiveThread` v1 @kind object, `java.util.concurrent.Callable` v2 @kind object, `android.os.Handler` v3 @kind object, `androidx.core.provider.SelfDestructiveThread$ReplyCallback` v4 @kind object) @signature `Landroidx/core/provider/SelfDestructiveThread$2;.<init>:(Landroidx/core/provider/SelfDestructiveThread;Ljava/util/concurrent/Callable;Landroid/os/Handler;Landroidx/core/provider/SelfDestructiveThread$ReplyCallback;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `run`(`androidx.core.provider.SelfDestructiveThread$2` v3 @kind this) @signature `Landroidx/core/provider/SelfDestructiveThread$2;.run:()V` @AccessFlag PUBLIC {

  # return;
}
