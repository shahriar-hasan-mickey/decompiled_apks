record `androidx.core.graphics.PathParser` @kind class @AccessFlag PUBLIC {
}
global `java.lang.String` `@@androidx.core.graphics.PathParser.LOGTAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`androidx.core.graphics.PathParser` v0 @kind this) @signature `Landroidx/core/graphics/PathParser;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `float`[] `a`(`float`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Landroidx/core/graphics/PathParser;.a:([FII)[F` @AccessFlag STATIC {

  # return;
}
procedure `void` `addNode`(`java.util.ArrayList` v1 @kind object, `char` v2 , `float`[] v3 @kind object) @signature `Landroidx/core/graphics/PathParser;.addNode:(Ljava/util/ArrayList;C[F)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `canMorph`(`androidx.core.graphics.PathParser$PathDataNode`[] v4 @kind object, `androidx.core.graphics.PathParser$PathDataNode`[] v5 @kind object) @signature `Landroidx/core/graphics/PathParser;.canMorph:([Landroidx/core/graphics/PathParser$PathDataNode;[Landroidx/core/graphics/PathParser$PathDataNode;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `androidx.core.graphics.PathParser$PathDataNode`[] `createNodesFromPathData`(`java.lang.String` v7 @kind object) @signature `Landroidx/core/graphics/PathParser;.createNodesFromPathData:(Ljava/lang/String;)[Landroidx/core/graphics/PathParser$PathDataNode;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `android.graphics.Path` `createPathFromPathData`(`java.lang.String` v4 @kind object) @signature `Landroidx/core/graphics/PathParser;.createPathFromPathData:(Ljava/lang/String;)Landroid/graphics/Path;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `androidx.core.graphics.PathParser$PathDataNode`[] `deepCopyNodes`(`androidx.core.graphics.PathParser$PathDataNode`[] v4 @kind object) @signature `Landroidx/core/graphics/PathParser;.deepCopyNodes:([Landroidx/core/graphics/PathParser$PathDataNode;)[Landroidx/core/graphics/PathParser$PathDataNode;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `extract`(`java.lang.String` v8 @kind object, `int` v9 , `androidx.core.graphics.PathParser$ExtractFloatResult` v10 @kind object) @signature `Landroidx/core/graphics/PathParser;.extract:(Ljava/lang/String;ILandroidx/core/graphics/PathParser$ExtractFloatResult;)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `float`[] `getFloats`(`java.lang.String` v8 @kind object) @signature `Landroidx/core/graphics/PathParser;.getFloats:(Ljava/lang/String;)[F` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `interpolatePathDataNodes`(`androidx.core.graphics.PathParser$PathDataNode`[] v4 @kind object, `androidx.core.graphics.PathParser$PathDataNode`[] v5 @kind object, `androidx.core.graphics.PathParser$PathDataNode`[] v6 @kind object, `float` v7 ) @signature `Landroidx/core/graphics/PathParser;.interpolatePathDataNodes:([Landroidx/core/graphics/PathParser$PathDataNode;[Landroidx/core/graphics/PathParser$PathDataNode;[Landroidx/core/graphics/PathParser$PathDataNode;F)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `nextStart`(`java.lang.String` v3 @kind object, `int` v4 ) @signature `Landroidx/core/graphics/PathParser;.nextStart:(Ljava/lang/String;I)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `updateNodes`(`androidx.core.graphics.PathParser$PathDataNode`[] v5 @kind object, `androidx.core.graphics.PathParser$PathDataNode`[] v6 @kind object) @signature `Landroidx/core/graphics/PathParser;.updateNodes:([Landroidx/core/graphics/PathParser$PathDataNode;[Landroidx/core/graphics/PathParser$PathDataNode;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
