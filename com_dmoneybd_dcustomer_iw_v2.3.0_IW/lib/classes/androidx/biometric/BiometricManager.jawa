record `androidx.biometric.BiometricManager` @kind class @AccessFlag PUBLIC {
  `android.hardware.biometrics.BiometricManager` `androidx.biometric.BiometricManager.mBiometricManager` @AccessFlag PRIVATE_FINAL;
  `androidx.core.hardware.fingerprint.FingerprintManagerCompat` `androidx.biometric.BiometricManager.mFingerprintManager` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@androidx.biometric.BiometricManager.BIOMETRIC_ERROR_HW_UNAVAILABLE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@androidx.biometric.BiometricManager.BIOMETRIC_ERROR_NONE_ENROLLED` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@androidx.biometric.BiometricManager.BIOMETRIC_ERROR_NO_HARDWARE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@androidx.biometric.BiometricManager.BIOMETRIC_SUCCESS` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`androidx.biometric.BiometricManager` v3 @kind this, `android.content.Context` v4 @kind object) @signature `Landroidx/biometric/BiometricManager;.<init>:(Landroid/content/Context;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `androidx.biometric.BiometricManager` `from`(`android.content.Context` v1 @kind object) @signature `Landroidx/biometric/BiometricManager;.from:(Landroid/content/Context;)Landroidx/biometric/BiometricManager;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `canAuthenticate`(`androidx.biometric.BiometricManager` v2 @kind this) @signature `Landroidx/biometric/BiometricManager;.canAuthenticate:()I` @AccessFlag PUBLIC {

  # return;
}
