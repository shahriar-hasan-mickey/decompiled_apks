record `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState` @kind class @AccessFlag  extends `android.graphics.drawable.Drawable$ConstantState` @kind class {
  `int` `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.a` @AccessFlag ;
  `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer` `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.b` @AccessFlag ;
  `android.content.res.ColorStateList` `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.c` @AccessFlag ;
  `android.graphics.PorterDuff$Mode` `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.d` @AccessFlag ;
  `boolean` `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.e` @AccessFlag ;
  `android.graphics.Bitmap` `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.f` @AccessFlag ;
  `android.content.res.ColorStateList` `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.g` @AccessFlag ;
  `android.graphics.PorterDuff$Mode` `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.h` @AccessFlag ;
  `int` `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.i` @AccessFlag ;
  `boolean` `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.j` @AccessFlag ;
  `boolean` `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.k` @AccessFlag ;
  `android.graphics.Paint` `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState.l` @AccessFlag ;
}
procedure `void` `<init>`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat$VectorDrawableCompatState;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState` v3 @kind this, `androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState` v4 @kind object) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat$VectorDrawableCompatState;.<init>:(Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat$VectorDrawableCompatState;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `canReuseBitmap`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState` v1 @kind this, `int` v2 , `int` v3 ) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat$VectorDrawableCompatState;.canReuseBitmap:(II)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `canReuseCache`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState` v2 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat$VectorDrawableCompatState;.canReuseCache:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `createCachedBitmapIfNeeded`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState` v1 @kind this, `int` v2 , `int` v3 ) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat$VectorDrawableCompatState;.createCachedBitmapIfNeeded:(II)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `drawCachedBitmapWithRootAlpha`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState` v2 @kind this, `android.graphics.Canvas` v3 @kind object, `android.graphics.ColorFilter` v4 @kind object, `android.graphics.Rect` v5 @kind object) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat$VectorDrawableCompatState;.drawCachedBitmapWithRootAlpha:(Landroid/graphics/Canvas;Landroid/graphics/ColorFilter;Landroid/graphics/Rect;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getChangingConfigurations`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat$VectorDrawableCompatState;.getChangingConfigurations:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `android.graphics.Paint` `getPaint`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState` v2 @kind this, `android.graphics.ColorFilter` v3 @kind object) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat$VectorDrawableCompatState;.getPaint:(Landroid/graphics/ColorFilter;)Landroid/graphics/Paint;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasTranslucentRoot`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState` v2 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat$VectorDrawableCompatState;.hasTranslucentRoot:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isStateful`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat$VectorDrawableCompatState;.isStateful:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `android.graphics.drawable.Drawable` `newDrawable`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat$VectorDrawableCompatState;.newDrawable:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {

  # return;
}
procedure `android.graphics.drawable.Drawable` `newDrawable`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState` v0 @kind this, `android.content.res.Resources` v1 @kind object) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat$VectorDrawableCompatState;.newDrawable:(Landroid/content/res/Resources;)Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `onStateChanged`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState` v1 @kind this, `int`[] v2 @kind object) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat$VectorDrawableCompatState;.onStateChanged:([I)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `updateCacheStates`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat$VectorDrawableCompatState;.updateCacheStates:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `updateCachedBitmap`(`androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState` v3 @kind this, `int` v4 , `int` v5 ) @signature `Landroidx/vectordrawable/graphics/drawable/VectorDrawableCompat$VectorDrawableCompatState;.updateCachedBitmap:(II)V` @AccessFlag PUBLIC {

  # return;
}
