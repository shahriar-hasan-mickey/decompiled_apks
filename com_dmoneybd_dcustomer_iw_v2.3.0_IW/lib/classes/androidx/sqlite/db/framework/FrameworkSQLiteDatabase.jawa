record `androidx.sqlite.db.framework.FrameworkSQLiteDatabase` @kind class @AccessFlag  extends `androidx.sqlite.db.SupportSQLiteDatabase` @kind interface {
  `android.database.sqlite.SQLiteDatabase` `androidx.sqlite.db.framework.FrameworkSQLiteDatabase.mDelegate` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String`[] `@@androidx.sqlite.db.framework.FrameworkSQLiteDatabase.CONFLICT_VALUES` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@androidx.sqlite.db.framework.FrameworkSQLiteDatabase.EMPTY_STRING_ARRAY` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v0 @kind this, `android.database.sqlite.SQLiteDatabase` v1 @kind object) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.<init>:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `a`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this, `android.database.sqlite.SQLiteDatabase` v2 @kind object) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.a:(Landroid/database/sqlite/SQLiteDatabase;)Z` @AccessFlag  {

  # return;
}
procedure `void` `beginTransaction`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.beginTransaction:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `beginTransactionNonExclusive`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.beginTransactionNonExclusive:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `beginTransactionWithListener`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this, `android.database.sqlite.SQLiteTransactionListener` v2 @kind object) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.beginTransactionWithListener:(Landroid/database/sqlite/SQLiteTransactionListener;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `beginTransactionWithListenerNonExclusive`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this, `android.database.sqlite.SQLiteTransactionListener` v2 @kind object) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.beginTransactionWithListenerNonExclusive:(Landroid/database/sqlite/SQLiteTransactionListener;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `close`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.close:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `androidx.sqlite.db.SupportSQLiteStatement` `compileStatement`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.compileStatement:(Ljava/lang/String;)Landroidx/sqlite/db/SupportSQLiteStatement;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `delete`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.Object`[] v5 @kind object) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.delete:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `disableWriteAheadLogging`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.disableWriteAheadLogging:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `enableWriteAheadLogging`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.enableWriteAheadLogging:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `endTransaction`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.endTransaction:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `execSQL`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `execSQL`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.execSQL:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.List` `getAttachedDbs`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.getAttachedDbs:()Ljava/util/List;` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `getMaximumSize`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v2 @kind this) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.getMaximumSize:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `getPageSize`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v2 @kind this) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.getPageSize:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getPath`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.getPath:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getVersion`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.getVersion:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `inTransaction`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.inTransaction:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `insert`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v2 @kind this, `java.lang.String` v3 @kind object, `int` v4 , `android.content.ContentValues` v5 @kind object) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.insert:(Ljava/lang/String;ILandroid/content/ContentValues;)J` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isDatabaseIntegrityOk`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.isDatabaseIntegrityOk:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isDbLockedByCurrentThread`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.isDbLockedByCurrentThread:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isOpen`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.isOpen:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isReadOnly`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.isReadOnly:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isWriteAheadLoggingEnabled`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.isWriteAheadLoggingEnabled:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `needUpgrade`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this, `int` v2 ) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.needUpgrade:(I)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `android.database.Cursor` `query`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v4 @kind this, `androidx.sqlite.db.SupportSQLiteQuery` v5 @kind object) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.query:(Landroidx/sqlite/db/SupportSQLiteQuery;)Landroid/database/Cursor;` @AccessFlag PUBLIC {

  # return;
}
procedure `android.database.Cursor` `query`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v6 @kind this, `androidx.sqlite.db.SupportSQLiteQuery` v7 @kind object, `android.os.CancellationSignal` v8 @kind object) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.query:(Landroidx/sqlite/db/SupportSQLiteQuery;Landroid/os/CancellationSignal;)Landroid/database/Cursor;` @AccessFlag PUBLIC {

  # return;
}
procedure `android.database.Cursor` `query`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.query:(Ljava/lang/String;)Landroid/database/Cursor;` @AccessFlag PUBLIC {

  # return;
}
procedure `android.database.Cursor` `query`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.query:(Ljava/lang/String;[Ljava/lang/Object;)Landroid/database/Cursor;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setForeignKeyConstraintsEnabled`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this, `boolean` v2 ) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.setForeignKeyConstraintsEnabled:(Z)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setLocale`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this, `java.util.Locale` v2 @kind object) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.setLocale:(Ljava/util/Locale;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setMaxSqlCacheSize`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this, `int` v2 ) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.setMaxSqlCacheSize:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `setMaximumSize`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this, `long` v2 ) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.setMaximumSize:(J)J` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setPageSize`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this, `long` v2 ) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.setPageSize:(J)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setTransactionSuccessful`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.setTransactionSuccessful:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setVersion`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this, `int` v2 ) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.setVersion:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `update`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v6 @kind this, `java.lang.String` v7 @kind object, `int` v8 , `android.content.ContentValues` v9 @kind object, `java.lang.String` v10 @kind object, `java.lang.Object`[] v11 @kind object) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.update:(Ljava/lang/String;ILandroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/Object;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `yieldIfContendedSafely`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.yieldIfContendedSafely:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `yieldIfContendedSafely`(`androidx.sqlite.db.framework.FrameworkSQLiteDatabase` v1 @kind this, `long` v2 ) @signature `Landroidx/sqlite/db/framework/FrameworkSQLiteDatabase;.yieldIfContendedSafely:(J)Z` @AccessFlag PUBLIC {

  # return;
}
