record `androidx.room.MultiInstanceInvalidationClient` @kind class @AccessFlag  {
  `android.content.Context` `androidx.room.MultiInstanceInvalidationClient.a` @AccessFlag ;
  `java.lang.String` `androidx.room.MultiInstanceInvalidationClient.b` @AccessFlag FINAL;
  `int` `androidx.room.MultiInstanceInvalidationClient.c` @AccessFlag ;
  `androidx.room.InvalidationTracker` `androidx.room.MultiInstanceInvalidationClient.d` @AccessFlag FINAL;
  `androidx.room.InvalidationTracker$Observer` `androidx.room.MultiInstanceInvalidationClient.e` @AccessFlag FINAL;
  `androidx.room.IMultiInstanceInvalidationService` `androidx.room.MultiInstanceInvalidationClient.f` @AccessFlag ;
  `java.util.concurrent.Executor` `androidx.room.MultiInstanceInvalidationClient.g` @AccessFlag FINAL;
  `androidx.room.IMultiInstanceInvalidationCallback` `androidx.room.MultiInstanceInvalidationClient.h` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicBoolean` `androidx.room.MultiInstanceInvalidationClient.i` @AccessFlag FINAL;
  `android.content.ServiceConnection` `androidx.room.MultiInstanceInvalidationClient.j` @AccessFlag FINAL;
  `java.lang.Runnable` `androidx.room.MultiInstanceInvalidationClient.k` @AccessFlag FINAL;
  `java.lang.Runnable` `androidx.room.MultiInstanceInvalidationClient.l` @AccessFlag FINAL;
  `java.lang.Runnable` `androidx.room.MultiInstanceInvalidationClient.mTearDownRunnable` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`androidx.room.MultiInstanceInvalidationClient` v2 @kind this, `android.content.Context` v3 @kind object, `java.lang.String` v4 @kind object, `androidx.room.InvalidationTracker` v5 @kind object, `java.util.concurrent.Executor` v6 @kind object) @signature `Landroidx/room/MultiInstanceInvalidationClient;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroidx/room/InvalidationTracker;Ljava/util/concurrent/Executor;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`androidx.room.MultiInstanceInvalidationClient` v3 @kind this) @signature `Landroidx/room/MultiInstanceInvalidationClient;.a:()V` @AccessFlag  {

  # return;
}
