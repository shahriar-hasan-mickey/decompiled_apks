record `com.google.zxing.datamatrix.DataMatrixWriter` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.zxing.Writer` @kind interface {
}
procedure `void` `<init>`(`com.google.zxing.datamatrix.DataMatrixWriter` v0 @kind this) @signature `Lcom/google/zxing/datamatrix/DataMatrixWriter;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.google.zxing.common.BitMatrix` `convertByteMatrixToBitMatrix`(`com.google.zxing.qrcode.encoder.ByteMatrix` v8 @kind object) @signature `Lcom/google/zxing/datamatrix/DataMatrixWriter;.convertByteMatrixToBitMatrix:(Lcom/google/zxing/qrcode/encoder/ByteMatrix;)Lcom/google/zxing/common/BitMatrix;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.google.zxing.common.BitMatrix` `encodeLowLevel`(`com.google.zxing.datamatrix.encoder.DefaultPlacement` v11 @kind object, `com.google.zxing.datamatrix.encoder.SymbolInfo` v12 @kind object) @signature `Lcom/google/zxing/datamatrix/DataMatrixWriter;.encodeLowLevel:(Lcom/google/zxing/datamatrix/encoder/DefaultPlacement;Lcom/google/zxing/datamatrix/encoder/SymbolInfo;)Lcom/google/zxing/common/BitMatrix;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.google.zxing.common.BitMatrix` `encode`(`com.google.zxing.datamatrix.DataMatrixWriter` v6 @kind this, `java.lang.String` v7 @kind object, `com.google.zxing.BarcodeFormat` v8 @kind object, `int` v9 , `int` v10 ) @signature `Lcom/google/zxing/datamatrix/DataMatrixWriter;.encode:(Ljava/lang/String;Lcom/google/zxing/BarcodeFormat;II)Lcom/google/zxing/common/BitMatrix;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.zxing.common.BitMatrix` `encode`(`com.google.zxing.datamatrix.DataMatrixWriter` v1 @kind this, `java.lang.String` v2 @kind object, `com.google.zxing.BarcodeFormat` v3 @kind object, `int` v4 , `int` v5 , `java.util.Map` v6 @kind object) @signature `Lcom/google/zxing/datamatrix/DataMatrixWriter;.encode:(Ljava/lang/String;Lcom/google/zxing/BarcodeFormat;IILjava/util/Map;)Lcom/google/zxing/common/BitMatrix;` @AccessFlag PUBLIC {

  # return;
}
