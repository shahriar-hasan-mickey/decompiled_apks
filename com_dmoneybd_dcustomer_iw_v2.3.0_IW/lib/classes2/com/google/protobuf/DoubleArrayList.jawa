record `com.google.protobuf.DoubleArrayList` @kind class @AccessFlag FINAL extends `com.google.protobuf.AbstractProtobufList` @kind class, `com.google.protobuf.Internal$DoubleList` @kind interface, `java.util.RandomAccess` @kind interface {
  `double`[] `com.google.protobuf.DoubleArrayList.array` @AccessFlag PRIVATE;
  `int` `com.google.protobuf.DoubleArrayList.size` @AccessFlag PRIVATE;
}
global `com.google.protobuf.DoubleArrayList` `@@com.google.protobuf.DoubleArrayList.EMPTY_LIST` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/protobuf/DoubleArrayList;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.protobuf.DoubleArrayList` v2 @kind this) @signature `Lcom/google/protobuf/DoubleArrayList;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.protobuf.DoubleArrayList` v0 @kind this, `double`[] v1 @kind object, `int` v2 ) @signature `Lcom/google/protobuf/DoubleArrayList;.<init>:([DI)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `addDouble`(`com.google.protobuf.DoubleArrayList` v4 @kind this, `int` v5 , `double` v6 ) @signature `Lcom/google/protobuf/DoubleArrayList;.addDouble:(ID)V` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.protobuf.DoubleArrayList` `emptyList`() @signature `Lcom/google/protobuf/DoubleArrayList;.emptyList:()Lcom/google/protobuf/DoubleArrayList;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `ensureIndexInRange`(`com.google.protobuf.DoubleArrayList` v1 @kind this, `int` v2 ) @signature `Lcom/google/protobuf/DoubleArrayList;.ensureIndexInRange:(I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `makeOutOfBoundsExceptionMessage`(`com.google.protobuf.DoubleArrayList` v2 @kind this, `int` v3 ) @signature `Lcom/google/protobuf/DoubleArrayList;.makeOutOfBoundsExceptionMessage:(I)Ljava/lang/String;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `add`(`com.google.protobuf.DoubleArrayList` v2 @kind this, `int` v3 , `java.lang.Double` v4 @kind object) @signature `Lcom/google/protobuf/DoubleArrayList;.add:(ILjava/lang/Double;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `add`(`com.google.protobuf.DoubleArrayList` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lcom/google/protobuf/DoubleArrayList;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `addAll`(`com.google.protobuf.DoubleArrayList` v5 @kind this, `java.util.Collection` v6 @kind object) @signature `Lcom/google/protobuf/DoubleArrayList;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `addDouble`(`com.google.protobuf.DoubleArrayList` v1 @kind this, `double` v2 ) @signature `Lcom/google/protobuf/DoubleArrayList;.addDouble:(D)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.google.protobuf.DoubleArrayList` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Lcom/google/protobuf/DoubleArrayList;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Double` `get`(`com.google.protobuf.DoubleArrayList` v2 @kind this, `int` v3 ) @signature `Lcom/google/protobuf/DoubleArrayList;.get:(I)Ljava/lang/Double;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.protobuf.DoubleArrayList` v0 @kind this, `int` v1 ) @signature `Lcom/google/protobuf/DoubleArrayList;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `double` `getDouble`(`com.google.protobuf.DoubleArrayList` v3 @kind this, `int` v4 ) @signature `Lcom/google/protobuf/DoubleArrayList;.getDouble:(I)D` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.google.protobuf.DoubleArrayList` v5 @kind this) @signature `Lcom/google/protobuf/DoubleArrayList;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.protobuf.Internal$DoubleList` `mutableCopyWithCapacity`(`com.google.protobuf.DoubleArrayList` v2 @kind this, `int` v3 ) @signature `Lcom/google/protobuf/DoubleArrayList;.mutableCopyWithCapacity:(I)Lcom/google/protobuf/Internal$DoubleList;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.protobuf.Internal$ProtobufList` `mutableCopyWithCapacity`(`com.google.protobuf.DoubleArrayList` v0 @kind this, `int` v1 ) @signature `Lcom/google/protobuf/DoubleArrayList;.mutableCopyWithCapacity:(I)Lcom/google/protobuf/Internal$ProtobufList;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Double` `remove`(`com.google.protobuf.DoubleArrayList` v5 @kind this, `int` v6 ) @signature `Lcom/google/protobuf/DoubleArrayList;.remove:(I)Ljava/lang/Double;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `remove`(`com.google.protobuf.DoubleArrayList` v0 @kind this, `int` v1 ) @signature `Lcom/google/protobuf/DoubleArrayList;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `remove`(`com.google.protobuf.DoubleArrayList` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lcom/google/protobuf/DoubleArrayList;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Double` `set`(`com.google.protobuf.DoubleArrayList` v2 @kind this, `int` v3 , `java.lang.Double` v4 @kind object) @signature `Lcom/google/protobuf/DoubleArrayList;.set:(ILjava/lang/Double;)Ljava/lang/Double;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `set`(`com.google.protobuf.DoubleArrayList` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lcom/google/protobuf/DoubleArrayList;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `double` `setDouble`(`com.google.protobuf.DoubleArrayList` v3 @kind this, `int` v4 , `double` v5 ) @signature `Lcom/google/protobuf/DoubleArrayList;.setDouble:(ID)D` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `size`(`com.google.protobuf.DoubleArrayList` v1 @kind this) @signature `Lcom/google/protobuf/DoubleArrayList;.size:()I` @AccessFlag PUBLIC {

  # return;
}
