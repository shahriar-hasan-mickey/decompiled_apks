record `com.google.firebase.components.ComponentRuntime` @kind class @AccessFlag PUBLIC extends `com.google.firebase.components.AbstractComponentContainer` @kind class {
  `java.util.Map` `com.google.firebase.components.ComponentRuntime.components` @AccessFlag PRIVATE_FINAL;
  `com.google.firebase.components.EventBus` `com.google.firebase.components.ComponentRuntime.eventBus` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.google.firebase.components.ComponentRuntime.lazyInstanceMap` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.google.firebase.components.ComponentRuntime.lazySetMap` @AccessFlag PRIVATE_FINAL;
}
global `com.google.firebase.inject.Provider` `@@com.google.firebase.components.ComponentRuntime.EMPTY_PROVIDER` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/components/ComponentRuntime;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.components.ComponentRuntime` v6 @kind this, `java.util.concurrent.Executor` v7 @kind object, `java.lang.Iterable` v8 @kind object, `com.google.firebase.components.Component`[] v9 @kind object) @signature `Lcom/google/firebase/components/ComponentRuntime;.<init>:(Ljava/util/concurrent/Executor;Ljava/lang/Iterable;[Lcom/google/firebase/components/Component;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `a`(`com.google.firebase.components.ComponentRuntime` v2 @kind object, `com.google.firebase.components.Component` v3 @kind object) @signature `Lcom/google/firebase/components/ComponentRuntime;.a:(Lcom/google/firebase/components/ComponentRuntime;Lcom/google/firebase/components/Component;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.util.Set` `b`(`java.util.Set` v2 @kind object) @signature `Lcom/google/firebase/components/ComponentRuntime;.b:(Ljava/util/Set;)Ljava/util/Set;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `processInstanceComponents`(`com.google.firebase.components.ComponentRuntime` v5 @kind this) @signature `Lcom/google/firebase/components/ComponentRuntime;.processInstanceComponents:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `processSetComponents`(`com.google.firebase.components.ComponentRuntime` v6 @kind this) @signature `Lcom/google/firebase/components/ComponentRuntime;.processSetComponents:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `validateDependencies`(`com.google.firebase.components.ComponentRuntime` v6 @kind this) @signature `Lcom/google/firebase/components/ComponentRuntime;.validateDependencies:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.firebase.components.ComponentRuntime` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lcom/google/firebase/components/ComponentRuntime;.get:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.firebase.inject.Provider` `getProvider`(`com.google.firebase.components.ComponentRuntime` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/google/firebase/components/ComponentRuntime;.getProvider:(Ljava/lang/Class;)Lcom/google/firebase/inject/Provider;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `initializeEagerComponents`(`com.google.firebase.components.ComponentRuntime` v4 @kind this, `boolean` v5 ) @signature `Lcom/google/firebase/components/ComponentRuntime;.initializeEagerComponents:(Z)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `setOf`(`com.google.firebase.components.ComponentRuntime` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lcom/google/firebase/components/ComponentRuntime;.setOf:(Ljava/lang/Class;)Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.firebase.inject.Provider` `setOfProvider`(`com.google.firebase.components.ComponentRuntime` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/google/firebase/components/ComponentRuntime;.setOfProvider:(Ljava/lang/Class;)Lcom/google/firebase/inject/Provider;` @AccessFlag PUBLIC {

  # return;
}
