record `com.google.firebase.remoteconfig.internal.LegacyConfigsHandler` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `com.google.firebase.remoteconfig.internal.LegacyConfigsHandler.appId` @AccessFlag PRIVATE_FINAL;
  `android.content.Context` `com.google.firebase.remoteconfig.internal.LegacyConfigsHandler.context` @AccessFlag PRIVATE_FINAL;
  `android.content.SharedPreferences` `com.google.firebase.remoteconfig.internal.LegacyConfigsHandler.legacySettings` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@com.google.firebase.remoteconfig.internal.LegacyConfigsHandler.EXPERIMENT_ID_KEY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.google.firebase.remoteconfig.internal.LegacyConfigsHandler.EXPERIMENT_START_TIME_KEY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.google.firebase.remoteconfig.internal.LegacyConfigsHandler.EXPERIMENT_TIME_TO_LIVE_KEY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.google.firebase.remoteconfig.internal.LegacyConfigsHandler.EXPERIMENT_TRIGGER_EVENT_KEY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.google.firebase.remoteconfig.internal.LegacyConfigsHandler.EXPERIMENT_TRIGGER_TIMEOUT_KEY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.google.firebase.remoteconfig.internal.LegacyConfigsHandler.EXPERIMENT_VARIANT_ID_KEY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.google.firebase.remoteconfig.internal.LegacyConfigsHandler.FRC_3P_NAMESPACE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.firebase.remoteconfig.internal.LegacyConfigsHandler.LEGACY_SETTINGS_FILE_NAME` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@com.google.firebase.remoteconfig.internal.LegacyConfigsHandler.PROTO_BYTE_ARRAY_ENCODING` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.firebase.remoteconfig.internal.LegacyConfigsHandler.SAVE_LEGACY_CONFIGS_FLAG_NAME` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.ThreadLocal` `@@com.google.firebase.remoteconfig.internal.LegacyConfigsHandler.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/firebase/remoteconfig/internal/LegacyConfigsHandler;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.firebase.remoteconfig.internal.LegacyConfigsHandler` v1 @kind this, `android.content.Context` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/google/firebase/remoteconfig/internal/LegacyConfigsHandler;.<init>:(Landroid/content/Context;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.util.Map` `convertConfigHolder`(`com.google.firebase.remoteconfig.internal.LegacyConfigsHandler` v6 @kind this, `com.google.firebase.remoteconfig.proto.ConfigPersistence$ConfigHolder` v7 @kind object) @signature `Lcom/google/firebase/remoteconfig/internal/LegacyConfigsHandler;.convertConfigHolder:(Lcom/google/firebase/remoteconfig/proto/ConfigPersistence$ConfigHolder;)Ljava/util/Map;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.Map` `convertKeyValueList`(`com.google.firebase.remoteconfig.internal.LegacyConfigsHandler` v4 @kind this, `java.util.List` v5 @kind object) @signature `Lcom/google/firebase/remoteconfig/internal/LegacyConfigsHandler;.convertKeyValueList:(Ljava/util/List;)Ljava/util/Map;` @AccessFlag PRIVATE {

  # return;
}
procedure `org.json.JSONObject` `convertLegacyAbtExperiment`(`com.google.firebase.remoteconfig.internal.LegacyConfigsHandler` v5 @kind this, `developers.mobile.abt.FirebaseAbt$ExperimentPayload` v6 @kind object) @signature `Lcom/google/firebase/remoteconfig/internal/LegacyConfigsHandler;.convertLegacyAbtExperiment:(Ldevelopers/mobile/abt/FirebaseAbt$ExperimentPayload;)Lorg/json/JSONObject;` @AccessFlag PRIVATE {

  # return;
}
procedure `org.json.JSONArray` `convertLegacyAbtExperiments`(`com.google.firebase.remoteconfig.internal.LegacyConfigsHandler` v4 @kind this, `java.util.List` v5 @kind object) @signature `Lcom/google/firebase/remoteconfig/internal/LegacyConfigsHandler;.convertLegacyAbtExperiments:(Ljava/util/List;)Lorg/json/JSONArray;` @AccessFlag PRIVATE {

  # return;
}
procedure `developers.mobile.abt.FirebaseAbt$ExperimentPayload` `deserializePayload`(`com.google.firebase.remoteconfig.internal.LegacyConfigsHandler` v4 @kind this, `com.google.protobuf.ByteString` v5 @kind object) @signature `Lcom/google/firebase/remoteconfig/internal/LegacyConfigsHandler;.deserializePayload:(Lcom/google/protobuf/ByteString;)Ldevelopers/mobile/abt/FirebaseAbt$ExperimentPayload;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.Map` `getConvertedLegacyConfigs`(`com.google.firebase.remoteconfig.internal.LegacyConfigsHandler` v8 @kind this) @signature `Lcom/google/firebase/remoteconfig/internal/LegacyConfigsHandler;.getConvertedLegacyConfigs:()Ljava/util/Map;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.firebase.remoteconfig.proto.ConfigPersistence$PersistedConfig` `readPersistedConfig`(`com.google.firebase.remoteconfig.internal.LegacyConfigsHandler` v7 @kind this) @signature `Lcom/google/firebase/remoteconfig/internal/LegacyConfigsHandler;.readPersistedConfig:()Lcom/google/firebase/remoteconfig/proto/ConfigPersistence$PersistedConfig;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `saveLegacyConfigs`(`com.google.firebase.remoteconfig.internal.LegacyConfigsHandler` v5 @kind this, `java.util.Map` v6 @kind object) @signature `Lcom/google/firebase/remoteconfig/internal/LegacyConfigsHandler;.saveLegacyConfigs:(Ljava/util/Map;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.firebase.remoteconfig.internal.ConfigCacheClient` `a`(`com.google.firebase.remoteconfig.internal.LegacyConfigsHandler` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/google/firebase/remoteconfig/internal/LegacyConfigsHandler;.a:(Ljava/lang/String;Ljava/lang/String;)Lcom/google/firebase/remoteconfig/internal/ConfigCacheClient;` @AccessFlag  {

  # return;
}
procedure `boolean` `saveLegacyConfigsIfNecessary`(`com.google.firebase.remoteconfig.internal.LegacyConfigsHandler` v4 @kind this) @signature `Lcom/google/firebase/remoteconfig/internal/LegacyConfigsHandler;.saveLegacyConfigsIfNecessary:()Z` @AccessFlag PUBLIC {

  # return;
}
