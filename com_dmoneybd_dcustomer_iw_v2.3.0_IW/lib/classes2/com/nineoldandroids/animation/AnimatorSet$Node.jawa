record `com.nineoldandroids.animation.AnimatorSet$Node` @kind class @AccessFlag  extends `java.lang.Cloneable` @kind interface {
  `com.nineoldandroids.animation.Animator` `com.nineoldandroids.animation.AnimatorSet$Node.animation` @AccessFlag PUBLIC;
  `java.util.ArrayList` `com.nineoldandroids.animation.AnimatorSet$Node.dependencies` @AccessFlag PUBLIC;
  `boolean` `com.nineoldandroids.animation.AnimatorSet$Node.done` @AccessFlag PUBLIC;
  `java.util.ArrayList` `com.nineoldandroids.animation.AnimatorSet$Node.nodeDependencies` @AccessFlag PUBLIC;
  `java.util.ArrayList` `com.nineoldandroids.animation.AnimatorSet$Node.nodeDependents` @AccessFlag PUBLIC;
  `java.util.ArrayList` `com.nineoldandroids.animation.AnimatorSet$Node.tmpDependencies` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`com.nineoldandroids.animation.AnimatorSet$Node` v1 @kind this, `com.nineoldandroids.animation.Animator` v2 @kind object) @signature `Lcom/nineoldandroids/animation/AnimatorSet$Node;.<init>:(Lcom/nineoldandroids/animation/Animator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `addDependency`(`com.nineoldandroids.animation.AnimatorSet$Node` v2 @kind this, `com.nineoldandroids.animation.AnimatorSet$Dependency` v3 @kind object) @signature `Lcom/nineoldandroids/animation/AnimatorSet$Node;.addDependency:(Lcom/nineoldandroids/animation/AnimatorSet$Dependency;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `com.nineoldandroids.animation.AnimatorSet$Node` `clone`(`com.nineoldandroids.animation.AnimatorSet$Node` v2 @kind this) @signature `Lcom/nineoldandroids/animation/AnimatorSet$Node;.clone:()Lcom/nineoldandroids/animation/AnimatorSet$Node;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `clone`(`com.nineoldandroids.animation.AnimatorSet$Node` v1 @kind this) @signature `Lcom/nineoldandroids/animation/AnimatorSet$Node;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
