record `org.spongycastle.asn1.esf.OtherHash` @kind class @AccessFlag PUBLIC extends `org.spongycastle.asn1.ASN1Object` @kind class, `org.spongycastle.asn1.ASN1Choice` @kind interface {
  `org.spongycastle.asn1.esf.OtherHashAlgAndValue` `org.spongycastle.asn1.esf.OtherHash.otherHash` @AccessFlag PRIVATE;
  `org.spongycastle.asn1.ASN1OctetString` `org.spongycastle.asn1.esf.OtherHash.sha1Hash` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.asn1.esf.OtherHash` v0 @kind this, `org.spongycastle.asn1.ASN1OctetString` v1 @kind object) @signature `Lorg/spongycastle/asn1/esf/OtherHash;.<init>:(Lorg/spongycastle/asn1/ASN1OctetString;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.asn1.esf.OtherHash` v0 @kind this, `org.spongycastle.asn1.esf.OtherHashAlgAndValue` v1 @kind object) @signature `Lorg/spongycastle/asn1/esf/OtherHash;.<init>:(Lorg/spongycastle/asn1/esf/OtherHashAlgAndValue;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.asn1.esf.OtherHash` v1 @kind this, `byte`[] v2 @kind object) @signature `Lorg/spongycastle/asn1/esf/OtherHash;.<init>:([B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.asn1.esf.OtherHash` `getInstance`(`java.lang.Object` v1 @kind object) @signature `Lorg/spongycastle/asn1/esf/OtherHash;.getInstance:(Ljava/lang/Object;)Lorg/spongycastle/asn1/esf/OtherHash;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.asn1.x509.AlgorithmIdentifier` `getHashAlgorithm`(`org.spongycastle.asn1.esf.OtherHash` v2 @kind this) @signature `Lorg/spongycastle/asn1/esf/OtherHash;.getHashAlgorithm:()Lorg/spongycastle/asn1/x509/AlgorithmIdentifier;` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getHashValue`(`org.spongycastle.asn1.esf.OtherHash` v1 @kind this) @signature `Lorg/spongycastle/asn1/esf/OtherHash;.getHashValue:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.asn1.ASN1Primitive` `toASN1Primitive`(`org.spongycastle.asn1.esf.OtherHash` v1 @kind this) @signature `Lorg/spongycastle/asn1/esf/OtherHash;.toASN1Primitive:()Lorg/spongycastle/asn1/ASN1Primitive;` @AccessFlag PUBLIC {

  # return;
}
