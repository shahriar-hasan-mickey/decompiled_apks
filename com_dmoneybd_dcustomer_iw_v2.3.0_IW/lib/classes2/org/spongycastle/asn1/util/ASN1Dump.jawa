record `org.spongycastle.asn1.util.ASN1Dump` @kind class @AccessFlag PUBLIC {
}
global `int` `@@org.spongycastle.asn1.util.ASN1Dump.SAMPLE_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@org.spongycastle.asn1.util.ASN1Dump.TAB` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.spongycastle.asn1.util.ASN1Dump` v0 @kind this) @signature `Lorg/spongycastle/asn1/util/ASN1Dump;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`java.lang.String` v6 @kind object, `boolean` v7 , `org.spongycastle.asn1.ASN1Primitive` v8 @kind object, `java.lang.StringBuffer` v9 @kind object) @signature `Lorg/spongycastle/asn1/util/ASN1Dump;.a:(Ljava/lang/String;ZLorg/spongycastle/asn1/ASN1Primitive;Ljava/lang/StringBuffer;)V` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.String` `calculateAscString`(`byte`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Lorg/spongycastle/asn1/util/ASN1Dump;.calculateAscString:([BII)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.String` `dumpAsString`(`java.lang.Object` v1 @kind object) @signature `Lorg/spongycastle/asn1/util/ASN1Dump;.dumpAsString:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `dumpAsString`(`java.lang.Object` v3 @kind object, `boolean` v4 ) @signature `Lorg/spongycastle/asn1/util/ASN1Dump;.dumpAsString:(Ljava/lang/Object;Z)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `dumpBinaryDataAsString`(`java.lang.String` v7 @kind object, `byte`[] v8 @kind object) @signature `Lorg/spongycastle/asn1/util/ASN1Dump;.dumpBinaryDataAsString:(Ljava/lang/String;[B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.String` `outputApplicationSpecific`(`java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object, `boolean` v6 , `org.spongycastle.asn1.ASN1Primitive` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lorg/spongycastle/asn1/util/ASN1Dump;.outputApplicationSpecific:(Ljava/lang/String;Ljava/lang/String;ZLorg/spongycastle/asn1/ASN1Primitive;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {

  # return;
}
