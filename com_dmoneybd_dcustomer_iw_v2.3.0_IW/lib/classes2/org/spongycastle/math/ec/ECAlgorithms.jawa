record `org.spongycastle.math.ec.ECAlgorithms` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`org.spongycastle.math.ec.ECAlgorithms` v0 @kind this) @signature `Lorg/spongycastle/math/ec/ECAlgorithms;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.math.ec.ECPoint` `a`(`org.spongycastle.math.ec.ECPoint` v7 @kind object, `java.math.BigInteger` v8 @kind object, `org.spongycastle.math.ec.ECPoint` v9 @kind object, `java.math.BigInteger` v10 @kind object) @signature `Lorg/spongycastle/math/ec/ECAlgorithms;.a:(Lorg/spongycastle/math/ec/ECPoint;Ljava/math/BigInteger;Lorg/spongycastle/math/ec/ECPoint;Ljava/math/BigInteger;)Lorg/spongycastle/math/ec/ECPoint;` @AccessFlag STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECPoint` `b`(`org.spongycastle.math.ec.ECPoint` v11 @kind object, `java.math.BigInteger` v12 @kind object, `org.spongycastle.math.ec.ECPoint` v13 @kind object, `java.math.BigInteger` v14 @kind object) @signature `Lorg/spongycastle/math/ec/ECAlgorithms;.b:(Lorg/spongycastle/math/ec/ECPoint;Ljava/math/BigInteger;Lorg/spongycastle/math/ec/ECPoint;Ljava/math/BigInteger;)Lorg/spongycastle/math/ec/ECPoint;` @AccessFlag STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECPoint` `c`(`org.spongycastle.math.ec.ECPoint` v10 @kind object, `java.math.BigInteger` v11 @kind object, `org.spongycastle.math.ec.ECPointMap` v12 @kind object, `java.math.BigInteger` v13 @kind object) @signature `Lorg/spongycastle/math/ec/ECAlgorithms;.c:(Lorg/spongycastle/math/ec/ECPoint;Ljava/math/BigInteger;Lorg/spongycastle/math/ec/ECPointMap;Ljava/math/BigInteger;)Lorg/spongycastle/math/ec/ECPoint;` @AccessFlag STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECPoint` `d`(`org.spongycastle.math.ec.ECPoint`[] v16 @kind object, `org.spongycastle.math.ec.ECPointMap` v17 @kind object, `java.math.BigInteger`[] v18 @kind object) @signature `Lorg/spongycastle/math/ec/ECAlgorithms;.d:([Lorg/spongycastle/math/ec/ECPoint;Lorg/spongycastle/math/ec/ECPointMap;[Ljava/math/BigInteger;)Lorg/spongycastle/math/ec/ECPoint;` @AccessFlag STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECPoint` `e`(`org.spongycastle.math.ec.ECPoint`[] v11 @kind object, `java.math.BigInteger`[] v12 @kind object) @signature `Lorg/spongycastle/math/ec/ECAlgorithms;.e:([Lorg/spongycastle/math/ec/ECPoint;[Ljava/math/BigInteger;)Lorg/spongycastle/math/ec/ECPoint;` @AccessFlag STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECPoint` `f`(`org.spongycastle.math.ec.ECPoint`[] v10 @kind object, `java.math.BigInteger`[] v11 @kind object, `org.spongycastle.math.ec.endo.GLVEndomorphism` v12 @kind object) @signature `Lorg/spongycastle/math/ec/ECAlgorithms;.f:([Lorg/spongycastle/math/ec/ECPoint;[Ljava/math/BigInteger;Lorg/spongycastle/math/ec/endo/GLVEndomorphism;)Lorg/spongycastle/math/ec/ECPoint;` @AccessFlag STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECPoint` `implShamirsTrickWNaf`(`org.spongycastle.math.ec.ECPoint`[] v8 @kind object, `org.spongycastle.math.ec.ECPoint`[] v9 @kind object, `byte`[] v10 @kind object, `org.spongycastle.math.ec.ECPoint`[] v11 @kind object, `org.spongycastle.math.ec.ECPoint`[] v12 @kind object, `byte`[] v13 @kind object) @signature `Lorg/spongycastle/math/ec/ECAlgorithms;.implShamirsTrickWNaf:([Lorg/spongycastle/math/ec/ECPoint;[Lorg/spongycastle/math/ec/ECPoint;[B[Lorg/spongycastle/math/ec/ECPoint;[Lorg/spongycastle/math/ec/ECPoint;[B)Lorg/spongycastle/math/ec/ECPoint;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECPoint` `implSumOfMultiplies`(`boolean`[] v13 @kind object, `org.spongycastle.math.ec.WNafPreCompInfo`[] v14 @kind object, `byte`[][] v15 @kind object) @signature `Lorg/spongycastle/math/ec/ECAlgorithms;.implSumOfMultiplies:([Z[Lorg/spongycastle/math/ec/WNafPreCompInfo;[[B)Lorg/spongycastle/math/ec/ECPoint;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECPoint` `importPoint`(`org.spongycastle.math.ec.ECCurve` v1 @kind object, `org.spongycastle.math.ec.ECPoint` v2 @kind object) @signature `Lorg/spongycastle/math/ec/ECAlgorithms;.importPoint:(Lorg/spongycastle/math/ec/ECCurve;Lorg/spongycastle/math/ec/ECPoint;)Lorg/spongycastle/math/ec/ECPoint;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isF2mCurve`(`org.spongycastle.math.ec.ECCurve` v0 @kind object) @signature `Lorg/spongycastle/math/ec/ECAlgorithms;.isF2mCurve:(Lorg/spongycastle/math/ec/ECCurve;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isF2mField`(`org.spongycastle.math.field.FiniteField` v3 @kind object) @signature `Lorg/spongycastle/math/ec/ECAlgorithms;.isF2mField:(Lorg/spongycastle/math/field/FiniteField;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isFpCurve`(`org.spongycastle.math.ec.ECCurve` v0 @kind object) @signature `Lorg/spongycastle/math/ec/ECAlgorithms;.isFpCurve:(Lorg/spongycastle/math/ec/ECCurve;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isFpField`(`org.spongycastle.math.field.FiniteField` v1 @kind object) @signature `Lorg/spongycastle/math/ec/ECAlgorithms;.isFpField:(Lorg/spongycastle/math/field/FiniteField;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `montgomeryTrick`(`org.spongycastle.math.ec.ECFieldElement`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lorg/spongycastle/math/ec/ECAlgorithms;.montgomeryTrick:([Lorg/spongycastle/math/ec/ECFieldElement;II)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `montgomeryTrick`(`org.spongycastle.math.ec.ECFieldElement`[] v4 @kind object, `int` v5 , `int` v6 , `org.spongycastle.math.ec.ECFieldElement` v7 @kind object) @signature `Lorg/spongycastle/math/ec/ECAlgorithms;.montgomeryTrick:([Lorg/spongycastle/math/ec/ECFieldElement;IILorg/spongycastle/math/ec/ECFieldElement;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECPoint` `referenceMultiply`(`org.spongycastle.math.ec.ECPoint` v5 @kind object, `java.math.BigInteger` v6 @kind object) @signature `Lorg/spongycastle/math/ec/ECAlgorithms;.referenceMultiply:(Lorg/spongycastle/math/ec/ECPoint;Ljava/math/BigInteger;)Lorg/spongycastle/math/ec/ECPoint;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECPoint` `shamirsTrick`(`org.spongycastle.math.ec.ECPoint` v1 @kind object, `java.math.BigInteger` v2 @kind object, `org.spongycastle.math.ec.ECPoint` v3 @kind object, `java.math.BigInteger` v4 @kind object) @signature `Lorg/spongycastle/math/ec/ECAlgorithms;.shamirsTrick:(Lorg/spongycastle/math/ec/ECPoint;Ljava/math/BigInteger;Lorg/spongycastle/math/ec/ECPoint;Ljava/math/BigInteger;)Lorg/spongycastle/math/ec/ECPoint;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECPoint` `sumOfMultiplies`(`org.spongycastle.math.ec.ECPoint`[] v6 @kind object, `java.math.BigInteger`[] v7 @kind object) @signature `Lorg/spongycastle/math/ec/ECAlgorithms;.sumOfMultiplies:([Lorg/spongycastle/math/ec/ECPoint;[Ljava/math/BigInteger;)Lorg/spongycastle/math/ec/ECPoint;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECPoint` `sumOfTwoMultiplies`(`org.spongycastle.math.ec.ECPoint` v4 @kind object, `java.math.BigInteger` v5 @kind object, `org.spongycastle.math.ec.ECPoint` v6 @kind object, `java.math.BigInteger` v7 @kind object) @signature `Lorg/spongycastle/math/ec/ECAlgorithms;.sumOfTwoMultiplies:(Lorg/spongycastle/math/ec/ECPoint;Ljava/math/BigInteger;Lorg/spongycastle/math/ec/ECPoint;Ljava/math/BigInteger;)Lorg/spongycastle/math/ec/ECPoint;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECPoint` `validatePoint`(`org.spongycastle.math.ec.ECPoint` v1 @kind object) @signature `Lorg/spongycastle/math/ec/ECAlgorithms;.validatePoint:(Lorg/spongycastle/math/ec/ECPoint;)Lorg/spongycastle/math/ec/ECPoint;` @AccessFlag PUBLIC_STATIC {

  # return;
}
