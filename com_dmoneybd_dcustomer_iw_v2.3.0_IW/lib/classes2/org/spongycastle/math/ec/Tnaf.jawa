record `org.spongycastle.math.ec.Tnaf` @kind class @AccessFlag  {
}
global `java.math.BigInteger` `@@org.spongycastle.math.ec.Tnaf.MINUS_ONE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.math.BigInteger` `@@org.spongycastle.math.ec.Tnaf.MINUS_THREE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.math.BigInteger` `@@org.spongycastle.math.ec.Tnaf.MINUS_TWO` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte` `@@org.spongycastle.math.ec.Tnaf.POW_2_WIDTH` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte` `@@org.spongycastle.math.ec.Tnaf.WIDTH` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.spongycastle.math.ec.ZTauElement`[] `@@org.spongycastle.math.ec.Tnaf.alpha0` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte`[][] `@@org.spongycastle.math.ec.Tnaf.alpha0Tnaf` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.spongycastle.math.ec.ZTauElement`[] `@@org.spongycastle.math.ec.Tnaf.alpha1` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte`[][] `@@org.spongycastle.math.ec.Tnaf.alpha1Tnaf` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/math/ec/Tnaf;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.math.ec.Tnaf` v0 @kind this) @signature `Lorg/spongycastle/math/ec/Tnaf;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.math.ec.SimpleBigDecimal` `approximateDivisionByN`(`java.math.BigInteger` v2 @kind object, `java.math.BigInteger` v3 @kind object, `java.math.BigInteger` v4 @kind object, `byte` v5 , `int` v6 , `int` v7 ) @signature `Lorg/spongycastle/math/ec/Tnaf;.approximateDivisionByN:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;BII)Lorg/spongycastle/math/ec/SimpleBigDecimal;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.math.BigInteger`[] `getLucas`(`byte` v5 , `int` v6 , `boolean` v7 ) @signature `Lorg/spongycastle/math/ec/Tnaf;.getLucas:(BIZ)[Ljava/math/BigInteger;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte` `getMu`(`int` v0 ) @signature `Lorg/spongycastle/math/ec/Tnaf;.getMu:(I)B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte` `getMu`(`org.spongycastle.math.ec.ECCurve$AbstractF2m` v1 @kind object) @signature `Lorg/spongycastle/math/ec/Tnaf;.getMu:(Lorg/spongycastle/math/ec/ECCurve$AbstractF2m;)B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte` `getMu`(`org.spongycastle.math.ec.ECFieldElement` v0 @kind object) @signature `Lorg/spongycastle/math/ec/Tnaf;.getMu:(Lorg/spongycastle/math/ec/ECFieldElement;)B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECPoint$AbstractF2m`[] `getPreComp`(`org.spongycastle.math.ec.ECPoint$AbstractF2m` v5 @kind object, `byte` v6 ) @signature `Lorg/spongycastle/math/ec/Tnaf;.getPreComp:(Lorg/spongycastle/math/ec/ECPoint$AbstractF2m;B)[Lorg/spongycastle/math/ec/ECPoint$AbstractF2m;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `getShiftsForCofactor`(`java.math.BigInteger` v1 @kind object) @signature `Lorg/spongycastle/math/ec/Tnaf;.getShiftsForCofactor:(Ljava/math/BigInteger;)I` @AccessFlag PROTECTED_STATIC {

  # return;
}
procedure `java.math.BigInteger`[] `getSi`(`int` v3 , `int` v4 , `java.math.BigInteger` v5 @kind object) @signature `Lorg/spongycastle/math/ec/Tnaf;.getSi:(IILjava/math/BigInteger;)[Ljava/math/BigInteger;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.math.BigInteger`[] `getSi`(`org.spongycastle.math.ec.ECCurve$AbstractF2m` v5 @kind object) @signature `Lorg/spongycastle/math/ec/Tnaf;.getSi:(Lorg/spongycastle/math/ec/ECCurve$AbstractF2m;)[Ljava/math/BigInteger;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.math.BigInteger` `getTw`(`byte` v3 , `int` v4 ) @signature `Lorg/spongycastle/math/ec/Tnaf;.getTw:(BI)Ljava/math/BigInteger;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECPoint$AbstractF2m` `multiplyFromTnaf`(`org.spongycastle.math.ec.ECPoint$AbstractF2m` v6 @kind object, `byte`[] v7 @kind object) @signature `Lorg/spongycastle/math/ec/Tnaf;.multiplyFromTnaf:(Lorg/spongycastle/math/ec/ECPoint$AbstractF2m;[B)Lorg/spongycastle/math/ec/ECPoint$AbstractF2m;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECPoint$AbstractF2m` `multiplyRTnaf`(`org.spongycastle.math.ec.ECPoint$AbstractF2m` v7 @kind object, `java.math.BigInteger` v8 @kind object) @signature `Lorg/spongycastle/math/ec/Tnaf;.multiplyRTnaf:(Lorg/spongycastle/math/ec/ECPoint$AbstractF2m;Ljava/math/BigInteger;)Lorg/spongycastle/math/ec/ECPoint$AbstractF2m;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECPoint$AbstractF2m` `multiplyTnaf`(`org.spongycastle.math.ec.ECPoint$AbstractF2m` v1 @kind object, `org.spongycastle.math.ec.ZTauElement` v2 @kind object) @signature `Lorg/spongycastle/math/ec/Tnaf;.multiplyTnaf:(Lorg/spongycastle/math/ec/ECPoint$AbstractF2m;Lorg/spongycastle/math/ec/ZTauElement;)Lorg/spongycastle/math/ec/ECPoint$AbstractF2m;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.math.BigInteger` `norm`(`byte` v3 , `org.spongycastle.math.ec.ZTauElement` v4 @kind object) @signature `Lorg/spongycastle/math/ec/Tnaf;.norm:(BLorg/spongycastle/math/ec/ZTauElement;)Ljava/math/BigInteger;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.SimpleBigDecimal` `norm`(`byte` v2 , `org.spongycastle.math.ec.SimpleBigDecimal` v3 @kind object, `org.spongycastle.math.ec.SimpleBigDecimal` v4 @kind object) @signature `Lorg/spongycastle/math/ec/Tnaf;.norm:(BLorg/spongycastle/math/ec/SimpleBigDecimal;Lorg/spongycastle/math/ec/SimpleBigDecimal;)Lorg/spongycastle/math/ec/SimpleBigDecimal;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.ZTauElement` `partModReduction`(`java.math.BigInteger` v13 @kind object, `int` v14 , `byte` v15 , `java.math.BigInteger`[] v16 @kind object, `byte` v17 , `byte` v18 ) @signature `Lorg/spongycastle/math/ec/Tnaf;.partModReduction:(Ljava/math/BigInteger;IB[Ljava/math/BigInteger;BB)Lorg/spongycastle/math/ec/ZTauElement;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.ZTauElement` `round`(`org.spongycastle.math.ec.SimpleBigDecimal` v8 @kind object, `org.spongycastle.math.ec.SimpleBigDecimal` v9 @kind object, `byte` v10 ) @signature `Lorg/spongycastle/math/ec/Tnaf;.round:(Lorg/spongycastle/math/ec/SimpleBigDecimal;Lorg/spongycastle/math/ec/SimpleBigDecimal;B)Lorg/spongycastle/math/ec/ZTauElement;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECPoint$AbstractF2m` `tau`(`org.spongycastle.math.ec.ECPoint$AbstractF2m` v0 @kind object) @signature `Lorg/spongycastle/math/ec/Tnaf;.tau:(Lorg/spongycastle/math/ec/ECPoint$AbstractF2m;)Lorg/spongycastle/math/ec/ECPoint$AbstractF2m;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `tauAdicNaf`(`byte` v9 , `org.spongycastle.math.ec.ZTauElement` v10 @kind object) @signature `Lorg/spongycastle/math/ec/Tnaf;.tauAdicNaf:(BLorg/spongycastle/math/ec/ZTauElement;)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `tauAdicWNaf`(`byte` v8 , `org.spongycastle.math.ec.ZTauElement` v9 @kind object, `byte` v10 , `java.math.BigInteger` v11 @kind object, `java.math.BigInteger` v12 @kind object, `org.spongycastle.math.ec.ZTauElement`[] v13 @kind object) @signature `Lorg/spongycastle/math/ec/Tnaf;.tauAdicWNaf:(BLorg/spongycastle/math/ec/ZTauElement;BLjava/math/BigInteger;Ljava/math/BigInteger;[Lorg/spongycastle/math/ec/ZTauElement;)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
