record `org.spongycastle.math.ec.LongArray` @kind class @AccessFlag  extends `java.lang.Cloneable` @kind interface {
  `long`[] `org.spongycastle.math.ec.LongArray.m_ints` @AccessFlag PRIVATE;
}
global `short`[] `@@org.spongycastle.math.ec.LongArray.INTERLEAVE2_TABLE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.spongycastle.math.ec.LongArray.INTERLEAVE3_TABLE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.spongycastle.math.ec.LongArray.INTERLEAVE4_TABLE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.spongycastle.math.ec.LongArray.INTERLEAVE5_TABLE` @AccessFlag PRIVATE_STATIC_FINAL;
global `long`[] `@@org.spongycastle.math.ec.LongArray.INTERLEAVE7_TABLE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@org.spongycastle.math.ec.LongArray.ZEROES` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@org.spongycastle.math.ec.LongArray.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/math/ec/LongArray;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.math.ec.LongArray` v0 @kind this, `int` v1 ) @signature `Lorg/spongycastle/math/ec/LongArray;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.math.ec.LongArray` v12 @kind this, `java.math.BigInteger` v13 @kind object) @signature `Lorg/spongycastle/math/ec/LongArray;.<init>:(Ljava/math/BigInteger;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.math.ec.LongArray` v0 @kind this, `long`[] v1 @kind object) @signature `Lorg/spongycastle/math/ec/LongArray;.<init>:([J)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.math.ec.LongArray` v2 @kind this, `long`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lorg/spongycastle/math/ec/LongArray;.<init>:([JII)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `add`(`long`[] v6 @kind object, `int` v7 , `long`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lorg/spongycastle/math/ec/LongArray;.add:([JI[JII)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `add`(`long`[] v6 @kind object, `int` v7 , `long`[] v8 @kind object, `int` v9 , `long`[] v10 @kind object, `int` v11 , `int` v12 ) @signature `Lorg/spongycastle/math/ec/LongArray;.add:([JI[JI[JII)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `addBoth`(`long`[] v8 @kind object, `int` v9 , `long`[] v10 @kind object, `int` v11 , `long`[] v12 @kind object, `int` v13 , `int` v14 ) @signature `Lorg/spongycastle/math/ec/LongArray;.addBoth:([JI[JI[JII)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `addShiftedByBitsSafe`(`org.spongycastle.math.ec.LongArray` v7 @kind this, `org.spongycastle.math.ec.LongArray` v8 @kind object, `int` v9 , `int` v10 ) @signature `Lorg/spongycastle/math/ec/LongArray;.addShiftedByBitsSafe:(Lorg/spongycastle/math/ec/LongArray;II)V` @AccessFlag PRIVATE {

  # return;
}
procedure `long` `addShiftedDown`(`long`[] v10 @kind object, `int` v11 , `long`[] v12 @kind object, `int` v13 , `int` v14 , `int` v15 ) @signature `Lorg/spongycastle/math/ec/LongArray;.addShiftedDown:([JI[JIII)J` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `long` `addShiftedUp`(`long`[] v12 @kind object, `int` v13 , `long`[] v14 @kind object, `int` v15 , `int` v16 , `int` v17 ) @signature `Lorg/spongycastle/math/ec/LongArray;.addShiftedUp:([JI[JIII)J` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `bitLength`(`long` v3 ) @signature `Lorg/spongycastle/math/ec/LongArray;.bitLength:(J)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `degreeFrom`(`org.spongycastle.math.ec.LongArray` v5 @kind this, `int` v6 ) @signature `Lorg/spongycastle/math/ec/LongArray;.degreeFrom:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `distribute`(`long`[] v6 @kind object, `int` v7 , `int` v8 , `int` v9 , `int` v10 ) @signature `Lorg/spongycastle/math/ec/LongArray;.distribute:([JIIII)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `flipBit`(`long`[] v5 @kind object, `int` v6 , `int` v7 ) @signature `Lorg/spongycastle/math/ec/LongArray;.flipBit:([JII)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `flipVector`(`long`[] v6 @kind object, `int` v7 , `long`[] v8 @kind object, `int` v9 , `int` v10 , `int` v11 ) @signature `Lorg/spongycastle/math/ec/LongArray;.flipVector:([JI[JIII)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `flipWord`(`long`[] v4 @kind object, `int` v5 , `int` v6 , `long` v7 ) @signature `Lorg/spongycastle/math/ec/LongArray;.flipWord:([JIIJ)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `interleave`(`long`[] v6 @kind object, `int` v7 , `long`[] v8 @kind object, `int` v9 , `int` v10 , `int` v11 ) @signature `Lorg/spongycastle/math/ec/LongArray;.interleave:([JI[JIII)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `long` `interleave2_32to64`(`int` v6 ) @signature `Lorg/spongycastle/math/ec/LongArray;.interleave2_32to64:(I)J` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `long` `interleave2_n`(`long` v8 , `int` v10 ) @signature `Lorg/spongycastle/math/ec/LongArray;.interleave2_n:(JI)J` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `interleave2_n`(`long`[] v4 @kind object, `int` v5 , `long`[] v6 @kind object, `int` v7 , `int` v8 , `int` v9 ) @signature `Lorg/spongycastle/math/ec/LongArray;.interleave2_n:([JI[JIII)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `long` `interleave3`(`long` v6 ) @signature `Lorg/spongycastle/math/ec/LongArray;.interleave3:(J)J` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `interleave3`(`long`[] v4 @kind object, `int` v5 , `long`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lorg/spongycastle/math/ec/LongArray;.interleave3:([JI[JII)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `long` `interleave3_13to65`(`int` v6 ) @signature `Lorg/spongycastle/math/ec/LongArray;.interleave3_13to65:(I)J` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `long` `interleave3_21to63`(`int` v9 ) @signature `Lorg/spongycastle/math/ec/LongArray;.interleave3_21to63:(I)J` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `long` `interleave4_16to64`(`int` v6 ) @signature `Lorg/spongycastle/math/ec/LongArray;.interleave4_16to64:(I)J` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `long` `interleave5`(`long` v5 ) @signature `Lorg/spongycastle/math/ec/LongArray;.interleave5:(J)J` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `interleave5`(`long`[] v4 @kind object, `int` v5 , `long`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lorg/spongycastle/math/ec/LongArray;.interleave5:([JI[JII)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `long` `interleave7`(`long` v6 ) @signature `Lorg/spongycastle/math/ec/LongArray;.interleave7:(J)J` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `interleave7`(`long`[] v4 @kind object, `int` v5 , `long`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lorg/spongycastle/math/ec/LongArray;.interleave7:([JI[JII)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `multiplyWord`(`long` v18 , `long`[] v20 @kind object, `int` v21 , `long`[] v22 @kind object, `int` v23 ) @signature `Lorg/spongycastle/math/ec/LongArray;.multiplyWord:(J[JI[JI)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `reduceBit`(`long`[] v1 @kind object, `int` v2 , `int` v3 , `int` v4 , `int`[] v5 @kind object) @signature `Lorg/spongycastle/math/ec/LongArray;.reduceBit:([JIII[I)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `reduceBitWise`(`long`[] v1 @kind object, `int` v2 , `int` v3 , `int` v4 , `int`[] v5 @kind object) @signature `Lorg/spongycastle/math/ec/LongArray;.reduceBitWise:([JIII[I)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `reduceInPlace`(`long`[] v14 @kind object, `int` v15 , `int` v16 , `int` v17 , `int`[] v18 @kind object) @signature `Lorg/spongycastle/math/ec/LongArray;.reduceInPlace:([JIII[I)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.LongArray` `reduceResult`(`long`[] v0 @kind object, `int` v1 , `int` v2 , `int` v3 , `int`[] v4 @kind object) @signature `Lorg/spongycastle/math/ec/LongArray;.reduceResult:([JIII[I)Lorg/spongycastle/math/ec/LongArray;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `reduceVectorWise`(`long`[] v7 @kind object, `int` v8 , `int` v9 , `int` v10 , `int` v11 , `int`[] v12 @kind object) @signature `Lorg/spongycastle/math/ec/LongArray;.reduceVectorWise:([JIIII[I)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `reduceWord`(`long`[] v1 @kind object, `int` v2 , `int` v3 , `long` v4 , `int` v6 , `int`[] v7 @kind object) @signature `Lorg/spongycastle/math/ec/LongArray;.reduceWord:([JIIJI[I)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `reduceWordWise`(`long`[] v9 @kind object, `int` v10 , `int` v11 , `int` v12 , `int` v13 , `int`[] v14 @kind object) @signature `Lorg/spongycastle/math/ec/LongArray;.reduceWordWise:([JIIII[I)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `long`[] `resizedInts`(`org.spongycastle.math.ec.LongArray` v3 @kind this, `int` v4 ) @signature `Lorg/spongycastle/math/ec/LongArray;.resizedInts:(I)[J` @AccessFlag PRIVATE {

  # return;
}
procedure `long` `shiftUp`(`long`[] v9 @kind object, `int` v10 , `int` v11 , `int` v12 ) @signature `Lorg/spongycastle/math/ec/LongArray;.shiftUp:([JIII)J` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `long` `shiftUp`(`long`[] v9 @kind object, `int` v10 , `long`[] v11 @kind object, `int` v12 , `int` v13 , `int` v14 ) @signature `Lorg/spongycastle/math/ec/LongArray;.shiftUp:([JI[JIII)J` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `squareInPlace`(`long`[] v4 @kind object, `int` v5 , `int` v6 , `int`[] v7 @kind object) @signature `Lorg/spongycastle/math/ec/LongArray;.squareInPlace:([JII[I)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `testBit`(`long`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lorg/spongycastle/math/ec/LongArray;.testBit:([JII)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.LongArray` `addOne`(`org.spongycastle.math.ec.LongArray` v6 @kind this) @signature `Lorg/spongycastle/math/ec/LongArray;.addOne:()Lorg/spongycastle/math/ec/LongArray;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `addShiftedByWords`(`org.spongycastle.math.ec.LongArray` v3 @kind this, `org.spongycastle.math.ec.LongArray` v4 @kind object, `int` v5 ) @signature `Lorg/spongycastle/math/ec/LongArray;.addShiftedByWords:(Lorg/spongycastle/math/ec/LongArray;I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `clone`(`org.spongycastle.math.ec.LongArray` v2 @kind this) @signature `Lorg/spongycastle/math/ec/LongArray;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `degree`(`org.spongycastle.math.ec.LongArray` v6 @kind this) @signature `Lorg/spongycastle/math/ec/LongArray;.degree:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`org.spongycastle.math.ec.LongArray` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Lorg/spongycastle/math/ec/LongArray;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getLength`(`org.spongycastle.math.ec.LongArray` v1 @kind this) @signature `Lorg/spongycastle/math/ec/LongArray;.getLength:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getUsedLength`(`org.spongycastle.math.ec.LongArray` v1 @kind this) @signature `Lorg/spongycastle/math/ec/LongArray;.getUsedLength:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getUsedLengthFrom`(`org.spongycastle.math.ec.LongArray` v8 @kind this, `int` v9 ) @signature `Lorg/spongycastle/math/ec/LongArray;.getUsedLengthFrom:(I)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`org.spongycastle.math.ec.LongArray` v6 @kind this) @signature `Lorg/spongycastle/math/ec/LongArray;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isOne`(`org.spongycastle.math.ec.LongArray` v9 @kind this) @signature `Lorg/spongycastle/math/ec/LongArray;.isOne:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isZero`(`org.spongycastle.math.ec.LongArray` v8 @kind this) @signature `Lorg/spongycastle/math/ec/LongArray;.isZero:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.math.ec.LongArray` `modInverse`(`org.spongycastle.math.ec.LongArray` v11 @kind this, `int` v12 , `int`[] v13 @kind object) @signature `Lorg/spongycastle/math/ec/LongArray;.modInverse:(I[I)Lorg/spongycastle/math/ec/LongArray;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.math.ec.LongArray` `modMultiply`(`org.spongycastle.math.ec.LongArray` v23 @kind this, `org.spongycastle.math.ec.LongArray` v24 @kind object, `int` v25 , `int`[] v26 @kind object) @signature `Lorg/spongycastle/math/ec/LongArray;.modMultiply:(Lorg/spongycastle/math/ec/LongArray;I[I)Lorg/spongycastle/math/ec/LongArray;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.math.ec.LongArray` `modMultiplyAlt`(`org.spongycastle.math.ec.LongArray` v23 @kind this, `org.spongycastle.math.ec.LongArray` v24 @kind object, `int` v25 , `int`[] v26 @kind object) @signature `Lorg/spongycastle/math/ec/LongArray;.modMultiplyAlt:(Lorg/spongycastle/math/ec/LongArray;I[I)Lorg/spongycastle/math/ec/LongArray;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.math.ec.LongArray` `modMultiplyLD`(`org.spongycastle.math.ec.LongArray` v22 @kind this, `org.spongycastle.math.ec.LongArray` v23 @kind object, `int` v24 , `int`[] v25 @kind object) @signature `Lorg/spongycastle/math/ec/LongArray;.modMultiplyLD:(Lorg/spongycastle/math/ec/LongArray;I[I)Lorg/spongycastle/math/ec/LongArray;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.math.ec.LongArray` `modReduce`(`org.spongycastle.math.ec.LongArray` v3 @kind this, `int` v4 , `int`[] v5 @kind object) @signature `Lorg/spongycastle/math/ec/LongArray;.modReduce:(I[I)Lorg/spongycastle/math/ec/LongArray;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.math.ec.LongArray` `modSquare`(`org.spongycastle.math.ec.LongArray` v9 @kind this, `int` v10 , `int`[] v11 @kind object) @signature `Lorg/spongycastle/math/ec/LongArray;.modSquare:(I[I)Lorg/spongycastle/math/ec/LongArray;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.math.ec.LongArray` `modSquareN`(`org.spongycastle.math.ec.LongArray` v5 @kind this, `int` v6 , `int` v7 , `int`[] v8 @kind object) @signature `Lorg/spongycastle/math/ec/LongArray;.modSquareN:(II[I)Lorg/spongycastle/math/ec/LongArray;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.math.ec.LongArray` `multiply`(`org.spongycastle.math.ec.LongArray` v22 @kind this, `org.spongycastle.math.ec.LongArray` v23 @kind object, `int` v24 , `int`[] v25 @kind object) @signature `Lorg/spongycastle/math/ec/LongArray;.multiply:(Lorg/spongycastle/math/ec/LongArray;I[I)Lorg/spongycastle/math/ec/LongArray;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reduce`(`org.spongycastle.math.ec.LongArray` v3 @kind this, `int` v4 , `int`[] v5 @kind object) @signature `Lorg/spongycastle/math/ec/LongArray;.reduce:(I[I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.math.ec.LongArray` `square`(`org.spongycastle.math.ec.LongArray` v7 @kind this, `int` v8 , `int`[] v9 @kind object) @signature `Lorg/spongycastle/math/ec/LongArray;.square:(I[I)Lorg/spongycastle/math/ec/LongArray;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `testBitZero`(`org.spongycastle.math.ec.LongArray` v6 @kind this) @signature `Lorg/spongycastle/math/ec/LongArray;.testBitZero:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.math.BigInteger` `toBigInteger`(`org.spongycastle.math.ec.LongArray` v14 @kind this) @signature `Lorg/spongycastle/math/ec/LongArray;.toBigInteger:()Ljava/math/BigInteger;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`org.spongycastle.math.ec.LongArray` v5 @kind this) @signature `Lorg/spongycastle/math/ec/LongArray;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
