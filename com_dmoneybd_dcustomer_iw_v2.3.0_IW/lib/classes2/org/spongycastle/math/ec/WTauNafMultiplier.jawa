record `org.spongycastle.math.ec.WTauNafMultiplier` @kind class @AccessFlag PUBLIC extends `org.spongycastle.math.ec.AbstractECMultiplier` @kind class {
}
procedure `void` `<init>`(`org.spongycastle.math.ec.WTauNafMultiplier` v0 @kind this) @signature `Lorg/spongycastle/math/ec/WTauNafMultiplier;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.math.ec.ECPoint$AbstractF2m` `multiplyFromWTnaf`(`org.spongycastle.math.ec.ECPoint$AbstractF2m` v5 @kind object, `byte`[] v6 @kind object, `org.spongycastle.math.ec.PreCompInfo` v7 @kind object) @signature `Lorg/spongycastle/math/ec/WTauNafMultiplier;.multiplyFromWTnaf:(Lorg/spongycastle/math/ec/ECPoint$AbstractF2m;[BLorg/spongycastle/math/ec/PreCompInfo;)Lorg/spongycastle/math/ec/ECPoint$AbstractF2m;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECPoint$AbstractF2m` `multiplyWTnaf`(`org.spongycastle.math.ec.WTauNafMultiplier` v6 @kind this, `org.spongycastle.math.ec.ECPoint$AbstractF2m` v7 @kind object, `org.spongycastle.math.ec.ZTauElement` v8 @kind object, `org.spongycastle.math.ec.PreCompInfo` v9 @kind object, `byte` v10 , `byte` v11 ) @signature `Lorg/spongycastle/math/ec/WTauNafMultiplier;.multiplyWTnaf:(Lorg/spongycastle/math/ec/ECPoint$AbstractF2m;Lorg/spongycastle/math/ec/ZTauElement;Lorg/spongycastle/math/ec/PreCompInfo;BB)Lorg/spongycastle/math/ec/ECPoint$AbstractF2m;` @AccessFlag PRIVATE {

  # return;
}
procedure `org.spongycastle.math.ec.ECPoint` `multiplyPositive`(`org.spongycastle.math.ec.WTauNafMultiplier` v10 @kind this, `org.spongycastle.math.ec.ECPoint` v11 @kind object, `java.math.BigInteger` v12 @kind object) @signature `Lorg/spongycastle/math/ec/WTauNafMultiplier;.multiplyPositive:(Lorg/spongycastle/math/ec/ECPoint;Ljava/math/BigInteger;)Lorg/spongycastle/math/ec/ECPoint;` @AccessFlag PROTECTED {

  # return;
}
