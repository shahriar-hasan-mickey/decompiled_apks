record `org.spongycastle.math.ec.WNafUtil` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `int`[] `@@org.spongycastle.math.ec.WNafUtil.DEFAULT_WINDOW_SIZE_CUTOFFS` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@org.spongycastle.math.ec.WNafUtil.EMPTY_BYTES` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.spongycastle.math.ec.WNafUtil.EMPTY_INTS` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.spongycastle.math.ec.ECPoint`[] `@@org.spongycastle.math.ec.WNafUtil.EMPTY_POINTS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@org.spongycastle.math.ec.WNafUtil.PRECOMP_NAME` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/math/ec/WNafUtil;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.math.ec.WNafUtil` v0 @kind this) @signature `Lorg/spongycastle/math/ec/WNafUtil;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int`[] `generateCompactNaf`(`java.math.BigInteger` v10 @kind object) @signature `Lorg/spongycastle/math/ec/WNafUtil;.generateCompactNaf:(Ljava/math/BigInteger;)[I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int`[] `generateCompactWindowNaf`(`int` v13 , `java.math.BigInteger` v14 @kind object) @signature `Lorg/spongycastle/math/ec/WNafUtil;.generateCompactWindowNaf:(ILjava/math/BigInteger;)[I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `generateJSF`(`java.math.BigInteger` v14 @kind object, `java.math.BigInteger` v15 @kind object) @signature `Lorg/spongycastle/math/ec/WNafUtil;.generateJSF:(Ljava/math/BigInteger;Ljava/math/BigInteger;)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `generateNaf`(`java.math.BigInteger` v7 @kind object) @signature `Lorg/spongycastle/math/ec/WNafUtil;.generateNaf:(Ljava/math/BigInteger;)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `generateWindowNaf`(`int` v11 , `java.math.BigInteger` v12 @kind object) @signature `Lorg/spongycastle/math/ec/WNafUtil;.generateWindowNaf:(ILjava/math/BigInteger;)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `getNafWeight`(`java.math.BigInteger` v1 @kind object) @signature `Lorg/spongycastle/math/ec/WNafUtil;.getNafWeight:(Ljava/math/BigInteger;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.WNafPreCompInfo` `getWNafPreCompInfo`(`org.spongycastle.math.ec.ECPoint` v2 @kind object) @signature `Lorg/spongycastle/math/ec/WNafUtil;.getWNafPreCompInfo:(Lorg/spongycastle/math/ec/ECPoint;)Lorg/spongycastle/math/ec/WNafPreCompInfo;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.WNafPreCompInfo` `getWNafPreCompInfo`(`org.spongycastle.math.ec.PreCompInfo` v1 @kind object) @signature `Lorg/spongycastle/math/ec/WNafUtil;.getWNafPreCompInfo:(Lorg/spongycastle/math/ec/PreCompInfo;)Lorg/spongycastle/math/ec/WNafPreCompInfo;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `getWindowSize`(`int` v1 ) @signature `Lorg/spongycastle/math/ec/WNafUtil;.getWindowSize:(I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `getWindowSize`(`int` v2 , `int`[] v3 @kind object) @signature `Lorg/spongycastle/math/ec/WNafUtil;.getWindowSize:(I[I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECPoint` `mapPointWithPrecomp`(`org.spongycastle.math.ec.ECPoint` v8 @kind object, `int` v9 , `boolean` v10 , `org.spongycastle.math.ec.ECPointMap` v11 @kind object) @signature `Lorg/spongycastle/math/ec/WNafUtil;.mapPointWithPrecomp:(Lorg/spongycastle/math/ec/ECPoint;IZLorg/spongycastle/math/ec/ECPointMap;)Lorg/spongycastle/math/ec/ECPoint;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.WNafPreCompInfo` `precompute`(`org.spongycastle.math.ec.ECPoint` v13 @kind object, `int` v14 , `boolean` v15 ) @signature `Lorg/spongycastle/math/ec/WNafUtil;.precompute:(Lorg/spongycastle/math/ec/ECPoint;IZ)Lorg/spongycastle/math/ec/WNafPreCompInfo;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECPoint`[] `resizeTable`(`org.spongycastle.math.ec.ECPoint`[] v2 @kind object, `int` v3 ) @signature `Lorg/spongycastle/math/ec/WNafUtil;.resizeTable:([Lorg/spongycastle/math/ec/ECPoint;I)[Lorg/spongycastle/math/ec/ECPoint;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `byte`[] `trim`(`byte`[] v2 @kind object, `int` v3 ) @signature `Lorg/spongycastle/math/ec/WNafUtil;.trim:([BI)[B` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int`[] `trim`(`int`[] v2 @kind object, `int` v3 ) @signature `Lorg/spongycastle/math/ec/WNafUtil;.trim:([II)[I` @AccessFlag PRIVATE_STATIC {

  # return;
}
