record `org.spongycastle.math.ec.custom.sec.SecT193Field` @kind class @AccessFlag PUBLIC {
}
global `long` `@@org.spongycastle.math.ec.custom.sec.SecT193Field.M01` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.spongycastle.math.ec.custom.sec.SecT193Field.M49` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.spongycastle.math.ec.custom.sec.SecT193Field` v0 @kind this) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT193Field;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `add`(`long`[] v5 @kind object, `long`[] v6 @kind object, `long`[] v7 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT193Field;.add:([J[J[J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `addExt`(`long`[] v5 @kind object, `long`[] v6 @kind object, `long`[] v7 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT193Field;.addExt:([J[J[J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `addOne`(`long`[] v5 @kind object, `long`[] v6 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT193Field;.addOne:([J[J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long`[] `fromBigInteger`(`java.math.BigInteger` v1 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT193Field;.fromBigInteger:(Ljava/math/BigInteger;)[J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `implCompactExt`(`long`[] v26 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT193Field;.implCompactExt:([J)V` @AccessFlag PROTECTED_STATIC {

  # return;
}
procedure `void` `implExpand`(`long`[] v16 @kind object, `long`[] v17 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT193Field;.implExpand:([J[J)V` @AccessFlag PROTECTED_STATIC {

  # return;
}
procedure `void` `implMultiply`(`long`[] v22 @kind object, `long`[] v23 @kind object, `long`[] v24 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT193Field;.implMultiply:([J[J[J)V` @AccessFlag PROTECTED_STATIC {

  # return;
}
procedure `void` `implMulwAcc`(`long` v18 , `long` v20 , `long`[] v22 @kind object, `int` v23 ) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT193Field;.implMulwAcc:(JJ[JI)V` @AccessFlag PROTECTED_STATIC {

  # return;
}
procedure `void` `implSquare`(`long`[] v4 @kind object, `long`[] v5 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT193Field;.implSquare:([J[J)V` @AccessFlag PROTECTED_STATIC {

  # return;
}
procedure `void` `invert`(`long`[] v2 @kind object, `long`[] v3 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT193Field;.invert:([J[J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `multiply`(`long`[] v1 @kind object, `long`[] v2 @kind object, `long`[] v3 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT193Field;.multiply:([J[J[J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `multiplyAddToExt`(`long`[] v1 @kind object, `long`[] v2 @kind object, `long`[] v3 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT193Field;.multiplyAddToExt:([J[J[J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `reduce`(`long`[] v24 @kind object, `long`[] v25 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT193Field;.reduce:([J[J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `reduce63`(`long`[] v10 @kind object, `int` v11 ) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT193Field;.reduce63:([JI)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `sqrt`(`long`[] v15 @kind object, `long`[] v16 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT193Field;.sqrt:([J[J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `square`(`long`[] v1 @kind object, `long`[] v2 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT193Field;.square:([J[J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `squareAddToExt`(`long`[] v1 @kind object, `long`[] v2 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT193Field;.squareAddToExt:([J[J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `squareN`(`long`[] v1 @kind object, `int` v2 , `long`[] v3 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT193Field;.squareN:([JI[J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `trace`(`long`[] v2 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT193Field;.trace:([J)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
