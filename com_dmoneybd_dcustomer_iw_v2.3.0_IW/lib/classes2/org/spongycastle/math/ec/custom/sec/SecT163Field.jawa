record `org.spongycastle.math.ec.custom.sec.SecT163Field` @kind class @AccessFlag PUBLIC {
}
global `long` `@@org.spongycastle.math.ec.custom.sec.SecT163Field.M35` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.spongycastle.math.ec.custom.sec.SecT163Field.M55` @AccessFlag PRIVATE_STATIC_FINAL;
global `long`[] `@@org.spongycastle.math.ec.custom.sec.SecT163Field.ROOT_Z` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/math/ec/custom/sec/SecT163Field;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.math.ec.custom.sec.SecT163Field` v0 @kind this) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT163Field;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `add`(`long`[] v5 @kind object, `long`[] v6 @kind object, `long`[] v7 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT163Field;.add:([J[J[J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `addExt`(`long`[] v5 @kind object, `long`[] v6 @kind object, `long`[] v7 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT163Field;.addExt:([J[J[J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `addOne`(`long`[] v5 @kind object, `long`[] v6 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT163Field;.addOne:([J[J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long`[] `fromBigInteger`(`java.math.BigInteger` v1 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT163Field;.fromBigInteger:(Ljava/math/BigInteger;)[J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `implCompactExt`(`long`[] v20 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT163Field;.implCompactExt:([J)V` @AccessFlag PROTECTED_STATIC {

  # return;
}
procedure `void` `implMultiply`(`long`[] v31 @kind object, `long`[] v32 @kind object, `long`[] v33 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT163Field;.implMultiply:([J[J[J)V` @AccessFlag PROTECTED_STATIC {

  # return;
}
procedure `void` `implMulw`(`long` v18 , `long` v20 , `long`[] v22 @kind object, `int` v23 ) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT163Field;.implMulw:(JJ[JI)V` @AccessFlag PROTECTED_STATIC {

  # return;
}
procedure `void` `implSquare`(`long`[] v4 @kind object, `long`[] v5 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT163Field;.implSquare:([J[J)V` @AccessFlag PROTECTED_STATIC {

  # return;
}
procedure `void` `invert`(`long`[] v2 @kind object, `long`[] v3 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT163Field;.invert:([J[J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `multiply`(`long`[] v1 @kind object, `long`[] v2 @kind object, `long`[] v3 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT163Field;.multiply:([J[J[J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `multiplyAddToExt`(`long`[] v1 @kind object, `long`[] v2 @kind object, `long`[] v3 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT163Field;.multiplyAddToExt:([J[J[J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `reduce`(`long`[] v24 @kind object, `long`[] v25 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT163Field;.reduce:([J[J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `reduce29`(`long`[] v11 @kind object, `int` v12 ) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT163Field;.reduce29:([JI)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `sqrt`(`long`[] v14 @kind object, `long`[] v15 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT163Field;.sqrt:([J[J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `square`(`long`[] v1 @kind object, `long`[] v2 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT163Field;.square:([J[J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `squareAddToExt`(`long`[] v1 @kind object, `long`[] v2 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT163Field;.squareAddToExt:([J[J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `squareN`(`long`[] v1 @kind object, `int` v2 , `long`[] v3 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT163Field;.squareN:([JI[J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `trace`(`long`[] v4 @kind object) @signature `Lorg/spongycastle/math/ec/custom/sec/SecT163Field;.trace:([J)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
