record `org.spongycastle.math.raw.Nat320` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`org.spongycastle.math.raw.Nat320` v0 @kind this) @signature `Lorg/spongycastle/math/raw/Nat320;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `copy64`(`long`[] v3 @kind object, `long`[] v4 @kind object) @signature `Lorg/spongycastle/math/raw/Nat320;.copy64:([J[J)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long`[] `create64`() @signature `Lorg/spongycastle/math/raw/Nat320;.create64:()[J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long`[] `createExt64`() @signature `Lorg/spongycastle/math/raw/Nat320;.createExt64:()[J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `eq64`(`long`[] v6 @kind object, `long`[] v7 @kind object) @signature `Lorg/spongycastle/math/raw/Nat320;.eq64:([J[J)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long`[] `fromBigInteger64`(`java.math.BigInteger` v5 @kind object) @signature `Lorg/spongycastle/math/raw/Nat320;.fromBigInteger64:(Ljava/math/BigInteger;)[J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isOne64`(`long`[] v8 @kind object) @signature `Lorg/spongycastle/math/raw/Nat320;.isOne64:([J)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isZero64`(`long`[] v7 @kind object) @signature `Lorg/spongycastle/math/raw/Nat320;.isZero64:([J)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.math.BigInteger` `toBigInteger64`(`long`[] v7 @kind object) @signature `Lorg/spongycastle/math/raw/Nat320;.toBigInteger64:([J)Ljava/math/BigInteger;` @AccessFlag PUBLIC_STATIC {

  # return;
}
