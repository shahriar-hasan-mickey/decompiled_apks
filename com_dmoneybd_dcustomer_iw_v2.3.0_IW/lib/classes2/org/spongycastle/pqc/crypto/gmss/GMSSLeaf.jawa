record `org.spongycastle.pqc.crypto.gmss.GMSSLeaf` @kind class @AccessFlag PUBLIC {
  `byte`[] `org.spongycastle.pqc.crypto.gmss.GMSSLeaf.a` @AccessFlag ;
  `byte`[] `org.spongycastle.pqc.crypto.gmss.GMSSLeaf.concHashs` @AccessFlag PRIVATE;
  `org.spongycastle.pqc.crypto.gmss.util.GMSSRandom` `org.spongycastle.pqc.crypto.gmss.GMSSLeaf.gmssRandom` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.gmss.GMSSLeaf.i` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.gmss.GMSSLeaf.j` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.gmss.GMSSLeaf.keysize` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.pqc.crypto.gmss.GMSSLeaf.leaf` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.gmss.GMSSLeaf.mdsize` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.Digest` `org.spongycastle.pqc.crypto.gmss.GMSSLeaf.messDigestOTS` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.pqc.crypto.gmss.GMSSLeaf.seed` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.gmss.GMSSLeaf.steps` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.gmss.GMSSLeaf.two_power_w` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.gmss.GMSSLeaf.w` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.pqc.crypto.gmss.GMSSLeaf` v6 @kind this, `org.spongycastle.crypto.Digest` v7 @kind object, `int` v8 , `int` v9 ) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSLeaf;.<init>:(Lorg/spongycastle/crypto/Digest;II)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.crypto.gmss.GMSSLeaf` v6 @kind this, `org.spongycastle.crypto.Digest` v7 @kind object, `int` v8 , `int` v9 , `byte`[] v10 @kind object) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSLeaf;.<init>:(Lorg/spongycastle/crypto/Digest;II[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.crypto.gmss.GMSSLeaf` v8 @kind this, `org.spongycastle.crypto.Digest` v9 @kind object, `byte`[][] v10 @kind object, `int`[] v11 @kind object) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSLeaf;.<init>:(Lorg/spongycastle/crypto/Digest;[[B[I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.crypto.gmss.GMSSLeaf` v1 @kind this, `org.spongycastle.pqc.crypto.gmss.GMSSLeaf` v2 @kind object) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSLeaf;.<init>:(Lorg/spongycastle/pqc/crypto/gmss/GMSSLeaf;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `int` `getLog`(`org.spongycastle.pqc.crypto.gmss.GMSSLeaf` v2 @kind this, `int` v3 ) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSLeaf;.getLog:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `updateLeafCalc`(`org.spongycastle.pqc.crypto.gmss.GMSSLeaf` v7 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSLeaf;.updateLeafCalc:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `a`(`org.spongycastle.pqc.crypto.gmss.GMSSLeaf` v3 @kind this, `byte`[] v4 @kind object) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSLeaf;.a:([B)V` @AccessFlag  {

  # return;
}
procedure `org.spongycastle.pqc.crypto.gmss.GMSSLeaf` `b`(`org.spongycastle.pqc.crypto.gmss.GMSSLeaf` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSLeaf;.b:()Lorg/spongycastle/pqc/crypto/gmss/GMSSLeaf;` @AccessFlag  {

  # return;
}
procedure `byte`[] `getLeaf`(`org.spongycastle.pqc.crypto.gmss.GMSSLeaf` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSLeaf;.getLeaf:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[][] `getStatByte`(`org.spongycastle.pqc.crypto.gmss.GMSSLeaf` v6 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSLeaf;.getStatByte:()[[B` @AccessFlag PUBLIC {

  # return;
}
procedure `int`[] `getStatInt`(`org.spongycastle.pqc.crypto.gmss.GMSSLeaf` v3 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSLeaf;.getStatInt:()[I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`org.spongycastle.pqc.crypto.gmss.GMSSLeaf` v7 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSLeaf;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
