record `org.spongycastle.pqc.crypto.gmss.util.GMSSRandom` @kind class @AccessFlag PUBLIC {
  `org.spongycastle.crypto.Digest` `org.spongycastle.pqc.crypto.gmss.util.GMSSRandom.messDigestTree` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.pqc.crypto.gmss.util.GMSSRandom` v0 @kind this, `org.spongycastle.crypto.Digest` v1 @kind object) @signature `Lorg/spongycastle/pqc/crypto/gmss/util/GMSSRandom;.<init>:(Lorg/spongycastle/crypto/Digest;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `addByteArrays`(`org.spongycastle.pqc.crypto.gmss.util.GMSSRandom` v4 @kind this, `byte`[] v5 @kind object, `byte`[] v6 @kind object) @signature `Lorg/spongycastle/pqc/crypto/gmss/util/GMSSRandom;.addByteArrays:([B[B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `addOne`(`org.spongycastle.pqc.crypto.gmss.util.GMSSRandom` v3 @kind this, `byte`[] v4 @kind object) @signature `Lorg/spongycastle/pqc/crypto/gmss/util/GMSSRandom;.addOne:([B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `byte`[] `nextSeed`(`org.spongycastle.pqc.crypto.gmss.util.GMSSRandom` v3 @kind this, `byte`[] v4 @kind object) @signature `Lorg/spongycastle/pqc/crypto/gmss/util/GMSSRandom;.nextSeed:([B)[B` @AccessFlag PUBLIC {

  # return;
}
