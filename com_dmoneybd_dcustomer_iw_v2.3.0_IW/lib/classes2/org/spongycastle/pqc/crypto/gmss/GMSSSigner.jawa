record `org.spongycastle.pqc.crypto.gmss.GMSSSigner` @kind class @AccessFlag PUBLIC extends `org.spongycastle.pqc.crypto.MessageSigner` @kind interface {
  `org.spongycastle.pqc.crypto.gmss.GMSSKeyParameters` `org.spongycastle.pqc.crypto.gmss.GMSSSigner.a` @AccessFlag ;
  `byte`[][][] `org.spongycastle.pqc.crypto.gmss.GMSSSigner.currentAuthPaths` @AccessFlag PRIVATE;
  `org.spongycastle.pqc.crypto.gmss.GMSSDigestProvider` `org.spongycastle.pqc.crypto.gmss.GMSSSigner.digestProvider` @AccessFlag PRIVATE;
  `org.spongycastle.pqc.crypto.gmss.GMSSParameters` `org.spongycastle.pqc.crypto.gmss.GMSSSigner.gmssPS` @AccessFlag PRIVATE;
  `org.spongycastle.pqc.crypto.gmss.util.GMSSRandom` `org.spongycastle.pqc.crypto.gmss.GMSSSigner.gmssRandom` @AccessFlag PRIVATE;
  `org.spongycastle.pqc.crypto.gmss.util.GMSSUtil` `org.spongycastle.pqc.crypto.gmss.GMSSSigner.gmssUtil` @AccessFlag PRIVATE;
  `int`[] `org.spongycastle.pqc.crypto.gmss.GMSSSigner.index` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.gmss.GMSSSigner.mdLength` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.Digest` `org.spongycastle.pqc.crypto.gmss.GMSSSigner.messDigestOTS` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.Digest` `org.spongycastle.pqc.crypto.gmss.GMSSSigner.messDigestTrees` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.gmss.GMSSSigner.numLayer` @AccessFlag PRIVATE;
  `org.spongycastle.pqc.crypto.gmss.util.WinternitzOTSignature` `org.spongycastle.pqc.crypto.gmss.GMSSSigner.ots` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.pqc.crypto.gmss.GMSSSigner.pubKeyBytes` @AccessFlag PRIVATE;
  `java.security.SecureRandom` `org.spongycastle.pqc.crypto.gmss.GMSSSigner.random` @AccessFlag PRIVATE;
  `byte`[][] `org.spongycastle.pqc.crypto.gmss.GMSSSigner.subtreeRootSig` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.pqc.crypto.gmss.GMSSSigner` v1 @kind this, `org.spongycastle.pqc.crypto.gmss.GMSSDigestProvider` v2 @kind object) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSSigner;.<init>:(Lorg/spongycastle/pqc/crypto/gmss/GMSSDigestProvider;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `initSign`(`org.spongycastle.pqc.crypto.gmss.GMSSSigner` v9 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSSigner;.initSign:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `initVerify`(`org.spongycastle.pqc.crypto.gmss.GMSSSigner` v2 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSSigner;.initVerify:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `byte`[] `generateSignature`(`org.spongycastle.pqc.crypto.gmss.GMSSSigner` v10 @kind this, `byte`[] v11 @kind object) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSSigner;.generateSignature:([B)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.pqc.crypto.gmss.GMSSSigner` v0 @kind this, `boolean` v1 , `org.spongycastle.crypto.CipherParameters` v2 @kind object) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSSigner;.init:(ZLorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `verifySignature`(`org.spongycastle.pqc.crypto.gmss.GMSSSigner` v12 @kind this, `byte`[] v13 @kind object, `byte`[] v14 @kind object) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSSigner;.verifySignature:([B[B)Z` @AccessFlag PUBLIC {

  # return;
}
