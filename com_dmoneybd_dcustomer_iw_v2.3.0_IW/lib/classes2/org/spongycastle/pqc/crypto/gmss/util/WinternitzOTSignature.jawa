record `org.spongycastle.pqc.crypto.gmss.util.WinternitzOTSignature` @kind class @AccessFlag PUBLIC {
  `int` `org.spongycastle.pqc.crypto.gmss.util.WinternitzOTSignature.checksumsize` @AccessFlag PRIVATE;
  `org.spongycastle.pqc.crypto.gmss.util.GMSSRandom` `org.spongycastle.pqc.crypto.gmss.util.WinternitzOTSignature.gmssRandom` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.gmss.util.WinternitzOTSignature.keysize` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.gmss.util.WinternitzOTSignature.mdsize` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.Digest` `org.spongycastle.pqc.crypto.gmss.util.WinternitzOTSignature.messDigestOTS` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.gmss.util.WinternitzOTSignature.messagesize` @AccessFlag PRIVATE;
  `byte`[][] `org.spongycastle.pqc.crypto.gmss.util.WinternitzOTSignature.privateKeyOTS` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.gmss.util.WinternitzOTSignature.w` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.pqc.crypto.gmss.util.WinternitzOTSignature` v6 @kind this, `byte`[] v7 @kind object, `org.spongycastle.crypto.Digest` v8 @kind object, `int` v9 ) @signature `Lorg/spongycastle/pqc/crypto/gmss/util/WinternitzOTSignature;.<init>:([BLorg/spongycastle/crypto/Digest;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `getLog`(`org.spongycastle.pqc.crypto.gmss.util.WinternitzOTSignature` v2 @kind this, `int` v3 ) @signature `Lorg/spongycastle/pqc/crypto/gmss/util/WinternitzOTSignature;.getLog:(I)I` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[][] `getPrivateKey`(`org.spongycastle.pqc.crypto.gmss.util.WinternitzOTSignature` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/util/WinternitzOTSignature;.getPrivateKey:()[[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getPublicKey`(`org.spongycastle.pqc.crypto.gmss.util.WinternitzOTSignature` v9 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/util/WinternitzOTSignature;.getPublicKey:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getSignature`(`org.spongycastle.pqc.crypto.gmss.util.WinternitzOTSignature` v21 @kind this, `byte`[] v22 @kind object) @signature `Lorg/spongycastle/pqc/crypto/gmss/util/WinternitzOTSignature;.getSignature:([B)[B` @AccessFlag PUBLIC {

  # return;
}
