record `org.spongycastle.pqc.crypto.ntru.NTRUSignerPrng` @kind class @AccessFlag PUBLIC {
  `int` `org.spongycastle.pqc.crypto.ntru.NTRUSignerPrng.counter` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.Digest` `org.spongycastle.pqc.crypto.ntru.NTRUSignerPrng.hashAlg` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.pqc.crypto.ntru.NTRUSignerPrng.seed` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.pqc.crypto.ntru.NTRUSignerPrng` v1 @kind this, `byte`[] v2 @kind object, `org.spongycastle.crypto.Digest` v3 @kind object) @signature `Lorg/spongycastle/pqc/crypto/ntru/NTRUSignerPrng;.<init>:([BLorg/spongycastle/crypto/Digest;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `byte`[] `a`(`org.spongycastle.pqc.crypto.ntru.NTRUSignerPrng` v6 @kind this, `int` v7 ) @signature `Lorg/spongycastle/pqc/crypto/ntru/NTRUSignerPrng;.a:(I)[B` @AccessFlag  {

  # return;
}
