record `org.spongycastle.pqc.crypto.ntru.IndexGenerator` @kind class @AccessFlag PUBLIC {
  `int` `org.spongycastle.pqc.crypto.ntru.IndexGenerator.N` @AccessFlag PRIVATE;
  `org.spongycastle.pqc.crypto.ntru.IndexGenerator$BitString` `org.spongycastle.pqc.crypto.ntru.IndexGenerator.buf` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.ntru.IndexGenerator.c` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.ntru.IndexGenerator.counter` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.ntru.IndexGenerator.hLen` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.Digest` `org.spongycastle.pqc.crypto.ntru.IndexGenerator.hashAlg` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.pqc.crypto.ntru.IndexGenerator.initialized` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.ntru.IndexGenerator.minCallsR` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.ntru.IndexGenerator.remLen` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.pqc.crypto.ntru.IndexGenerator.seed` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.ntru.IndexGenerator.totLen` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.pqc.crypto.ntru.IndexGenerator` v0 @kind this, `byte`[] v1 @kind object, `org.spongycastle.pqc.crypto.ntru.NTRUEncryptionParameters` v2 @kind object) @signature `Lorg/spongycastle/pqc/crypto/ntru/IndexGenerator;.<init>:([BLorg/spongycastle/pqc/crypto/ntru/NTRUEncryptionParameters;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `byte`[] `a`(`byte`[] v0 @kind object, `int` v1 ) @signature `Lorg/spongycastle/pqc/crypto/ntru/IndexGenerator;.a:([BI)[B` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `appendHash`(`org.spongycastle.pqc.crypto.ntru.IndexGenerator` v4 @kind this, `org.spongycastle.pqc.crypto.ntru.IndexGenerator$BitString` v5 @kind object, `byte`[] v6 @kind object) @signature `Lorg/spongycastle/pqc/crypto/ntru/IndexGenerator;.appendHash:(Lorg/spongycastle/pqc/crypto/ntru/IndexGenerator$BitString;[B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `byte`[] `copyOf`(`byte`[] v2 @kind object, `int` v3 ) @signature `Lorg/spongycastle/pqc/crypto/ntru/IndexGenerator;.copyOf:([BI)[B` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `putInt`(`org.spongycastle.pqc.crypto.ntru.IndexGenerator` v1 @kind this, `org.spongycastle.crypto.Digest` v2 @kind object, `int` v3 ) @signature `Lorg/spongycastle/pqc/crypto/ntru/IndexGenerator;.putInt:(Lorg/spongycastle/crypto/Digest;I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `b`(`org.spongycastle.pqc.crypto.ntru.IndexGenerator` v7 @kind this) @signature `Lorg/spongycastle/pqc/crypto/ntru/IndexGenerator;.b:()I` @AccessFlag  {

  # return;
}
