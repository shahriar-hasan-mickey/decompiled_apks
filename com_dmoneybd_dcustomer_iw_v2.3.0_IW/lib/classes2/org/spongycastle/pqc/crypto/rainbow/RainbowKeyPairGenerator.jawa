record `org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.AsymmetricCipherKeyPairGenerator` @kind interface {
  `short`[][] `org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator.A1` @AccessFlag PRIVATE;
  `short`[][] `org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator.A1inv` @AccessFlag PRIVATE;
  `short`[][] `org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator.A2` @AccessFlag PRIVATE;
  `short`[][] `org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator.A2inv` @AccessFlag PRIVATE;
  `short`[] `org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator.b1` @AccessFlag PRIVATE;
  `short`[] `org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator.b2` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator.initialized` @AccessFlag PRIVATE;
  `org.spongycastle.pqc.crypto.rainbow.Layer`[] `org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator.layers` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator.numOfLayers` @AccessFlag PRIVATE;
  `short`[][] `org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator.pub_quadratic` @AccessFlag PRIVATE;
  `short`[] `org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator.pub_scalar` @AccessFlag PRIVATE;
  `short`[][] `org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator.pub_singular` @AccessFlag PRIVATE;
  `org.spongycastle.pqc.crypto.rainbow.RainbowKeyGenerationParameters` `org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator.rainbowParams` @AccessFlag PRIVATE;
  `java.security.SecureRandom` `org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator.sr` @AccessFlag PRIVATE;
  `int`[] `org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator.vi` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/rainbow/RainbowKeyPairGenerator;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `compactPublicKey`(`org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator` v10 @kind this, `short`[][][] v11 @kind object) @signature `Lorg/spongycastle/pqc/crypto/rainbow/RainbowKeyPairGenerator;.compactPublicKey:([[[S)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `computePublicKey`(`org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator` v22 @kind this) @signature `Lorg/spongycastle/pqc/crypto/rainbow/RainbowKeyPairGenerator;.computePublicKey:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `generateF`(`org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator` v7 @kind this) @signature `Lorg/spongycastle/pqc/crypto/rainbow/RainbowKeyPairGenerator;.generateF:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `generateL1`(`org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator` v7 @kind this) @signature `Lorg/spongycastle/pqc/crypto/rainbow/RainbowKeyPairGenerator;.generateL1:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `generateL2`(`org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator` v7 @kind this) @signature `Lorg/spongycastle/pqc/crypto/rainbow/RainbowKeyPairGenerator;.generateL2:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `initializeDefault`(`org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator` v3 @kind this) @signature `Lorg/spongycastle/pqc/crypto/rainbow/RainbowKeyPairGenerator;.initializeDefault:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `keygen`(`org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator` v0 @kind this) @signature `Lorg/spongycastle/pqc/crypto/rainbow/RainbowKeyPairGenerator;.keygen:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `org.spongycastle.crypto.AsymmetricCipherKeyPair` `genKeyPair`(`org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator` v8 @kind this) @signature `Lorg/spongycastle/pqc/crypto/rainbow/RainbowKeyPairGenerator;.genKeyPair:()Lorg/spongycastle/crypto/AsymmetricCipherKeyPair;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.crypto.AsymmetricCipherKeyPair` `generateKeyPair`(`org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/rainbow/RainbowKeyPairGenerator;.generateKeyPair:()Lorg/spongycastle/crypto/AsymmetricCipherKeyPair;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator` v0 @kind this, `org.spongycastle.crypto.KeyGenerationParameters` v1 @kind object) @signature `Lorg/spongycastle/pqc/crypto/rainbow/RainbowKeyPairGenerator;.init:(Lorg/spongycastle/crypto/KeyGenerationParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `initialize`(`org.spongycastle.pqc.crypto.rainbow.RainbowKeyPairGenerator` v0 @kind this, `org.spongycastle.crypto.KeyGenerationParameters` v1 @kind object) @signature `Lorg/spongycastle/pqc/crypto/rainbow/RainbowKeyPairGenerator;.initialize:(Lorg/spongycastle/crypto/KeyGenerationParameters;)V` @AccessFlag PUBLIC {

  # return;
}
