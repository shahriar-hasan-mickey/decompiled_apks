record `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` @kind class @AccessFlag PUBLIC {
  `int` `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial.blocks` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial.len` @AccessFlag PRIVATE;
  `int`[] `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial.value` @AccessFlag PRIVATE;
}
global `int`[] `@@org.spongycastle.pqc.math.linearalgebra.GF2Polynomial.bitMask` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean`[] `@@org.spongycastle.pqc.math.linearalgebra.GF2Polynomial.parity` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Random` `@@org.spongycastle.pqc.math.linearalgebra.GF2Polynomial.rand` @AccessFlag PRIVATE_STATIC;
global `int`[] `@@org.spongycastle.pqc.math.linearalgebra.GF2Polynomial.reverseRightMask` @AccessFlag PRIVATE_STATIC_FINAL;
global `short`[] `@@org.spongycastle.pqc.math.linearalgebra.GF2Polynomial.squaringTable` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v2 @kind this, `int` v3 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v2 @kind this, `int` v3 , `java.lang.String` v4 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.<init>:(ILjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v9 @kind this, `int` v10 , `java.math.BigInteger` v11 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.<init>:(ILjava/math/BigInteger;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v2 @kind this, `int` v3 , `java.util.Random` v4 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.<init>:(ILjava/util/Random;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v10 @kind this, `int` v11 , `byte`[] v12 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.<init>:(I[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v2 @kind this, `int` v3 , `int`[] v4 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.<init>:(I[I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v1 @kind this, `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v2 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.<init>:(Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `doShiftBlocksLeft`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v4 @kind this, `int` v5 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.doShiftBlocksLeft:(I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` `karaMult`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v7 @kind this, `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v8 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.karaMult:(Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;)Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;` @AccessFlag PRIVATE {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` `lower`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v4 @kind this, `int` v5 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.lower:(I)Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;` @AccessFlag PRIVATE {

  # return;
}
procedure `int`[] `mult128`(`int`[] v13 @kind object, `int`[] v14 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.mult128:([I[I)[I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int`[] `mult256`(`int`[] v21 @kind object, `int`[] v22 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.mult256:([I[I)[I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int`[] `mult32`(`int` v10 , `int` v11 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.mult32:(II)[I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int`[] `mult512`(`int`[] v32 @kind object, `int`[] v33 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.mult512:([I[I)[I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int`[] `mult64`(`int`[] v10 @kind object, `int`[] v11 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.mult64:([I[I)[I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` `upper`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v5 @kind this, `int` v6 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.upper:(I)Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `zeroUnusedBits`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v5 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.zeroUnusedBits:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `a`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v20 @kind this, `int` v21 , `int`[] v22 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.a:(I[I)V` @AccessFlag  {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` `add`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v0 @kind this, `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v1 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.add:(Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;)Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `addToThis`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v1 @kind this, `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v2 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.addToThis:(Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `assignAll`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v3 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.assignAll:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `assignOne`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v4 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.assignOne:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `assignX`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v3 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.assignX:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `assignZero`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v3 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.assignZero:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `b`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v16 @kind this, `int` v17 , `int` v18 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.b:(II)V` @AccessFlag  {

  # return;
}
procedure `void` `c`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v5 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.c:()V` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `clone`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v1 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial`[] `divide`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v7 @kind this, `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v8 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.divide:(Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;)[Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `expandN`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v4 @kind this, `int` v5 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.expandN:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` `gcd`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v3 @kind this, `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v4 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.gcd:(Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;)Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getBit`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v4 @kind this, `int` v5 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.getBit:(I)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getLength`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v1 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.getLength:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v2 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` `increase`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v1 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.increase:()Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `increaseThis`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v1 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.increaseThis:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isIrreducible`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v9 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.isIrreducible:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isOne`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v4 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.isOne:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isZero`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v4 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.isZero:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` `multiply`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v2 @kind this, `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v3 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.multiply:(Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;)Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` `multiplyClassic`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v8 @kind this, `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v9 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.multiplyClassic:(Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;)Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` `quotient`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v4 @kind this, `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v5 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.quotient:(Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;)Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `randomize`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v3 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.randomize:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `randomize`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v3 @kind this, `java.util.Random` v4 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.randomize:(Ljava/util/Random;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reduceN`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v3 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.reduceN:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` `remainder`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v3 @kind this, `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v4 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.remainder:(Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;)Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `resetBit`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v4 @kind this, `int` v5 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.resetBit:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setBit`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v4 @kind this, `int` v5 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.setBit:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` `shiftLeft`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v6 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.shiftLeft:()Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` `shiftLeft`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v7 @kind this, `int` v8 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.shiftLeft:(I)Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `shiftLeftAddThis`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v8 @kind this, `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v9 @kind object, `int` v10 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.shiftLeftAddThis:(Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `shiftLeftThis`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v6 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.shiftLeftThis:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` `shiftRight`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v6 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.shiftRight:()Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `shiftRightThis`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v5 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.shiftRightThis:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `squareThisBitwise`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v9 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.squareThisBitwise:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `squareThisPreCalc`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v10 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.squareThisPreCalc:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` `subtract`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v0 @kind this, `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v1 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.subtract:(Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;)Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `subtractFromThis`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v1 @kind this, `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v2 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.subtractFromThis:(Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `testBit`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v4 @kind this, `int` v5 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.testBit:(I)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `toByteArray`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v10 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.toByteArray:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `java.math.BigInteger` `toFlexiBigInt`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v3 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.toFlexiBigInt:()Ljava/math/BigInteger;` @AccessFlag PUBLIC {

  # return;
}
procedure `int`[] `toIntegerArray`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v4 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.toIntegerArray:()[I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v10 @kind this, `int` v11 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.toString:(I)Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `vectorMult`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v5 @kind this, `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v6 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.vectorMult:(Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` `xor`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v6 @kind this, `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v7 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.xor:(Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;)Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `xorBit`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v4 @kind this, `int` v5 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.xorBit:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `xorThisBy`(`org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v4 @kind this, `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v5 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;.xorThisBy:(Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;)V` @AccessFlag PUBLIC {

  # return;
}
