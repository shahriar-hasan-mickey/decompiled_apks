record `org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField` @kind class @AccessFlag PUBLIC extends `org.spongycastle.pqc.math.linearalgebra.GF2nField` @kind class {
  `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial`[] `org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField.a` @AccessFlag ;
  `boolean` `org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField.isPentanomial` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField.isTrinomial` @AccessFlag PRIVATE;
  `int`[] `org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField.pc` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField.tc` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField` v1 @kind this, `int` v2 , `java.security.SecureRandom` v3 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2nPolynomialField;.<init>:(ILjava/security/SecureRandom;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField` v3 @kind this, `int` v4 , `java.security.SecureRandom` v5 @kind object, `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v6 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2nPolynomialField;.<init>:(ILjava/security/SecureRandom;Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField` v1 @kind this, `int` v2 , `java.security.SecureRandom` v3 @kind object, `boolean` v4 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2nPolynomialField;.<init>:(ILjava/security/SecureRandom;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `computeSquaringMatrix`(`org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField` v7 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2nPolynomialField;.computeSquaringMatrix:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `testPentanomials`(`org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField` v11 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2nPolynomialField;.testPentanomials:()Z` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `testRandom`(`org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField` v3 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2nPolynomialField;.testRandom:()Z` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `testTrinomials`(`org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField` v4 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2nPolynomialField;.testTrinomials:()Z` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `computeCOBMatrix`(`org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField` v7 @kind this, `org.spongycastle.pqc.math.linearalgebra.GF2nField` v8 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2nPolynomialField;.computeCOBMatrix:(Lorg/spongycastle/pqc/math/linearalgebra/GF2nField;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `computeFieldPolynomial`(`org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField` v1 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2nPolynomialField;.computeFieldPolynomial:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `computeFieldPolynomial2`(`org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField` v1 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2nPolynomialField;.computeFieldPolynomial2:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `int`[] `getPc`(`org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField` v4 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2nPolynomialField;.getPc:()[I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.GF2nElement` `getRandomRoot`(`org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField` v5 @kind this, `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` v6 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2nPolynomialField;.getRandomRoot:(Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;)Lorg/spongycastle/pqc/math/linearalgebra/GF2nElement;` @AccessFlag PROTECTED {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.GF2Polynomial` `getSquaringVector`(`org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField` v2 @kind this, `int` v3 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2nPolynomialField;.getSquaringVector:(I)Lorg/spongycastle/pqc/math/linearalgebra/GF2Polynomial;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getTc`(`org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField` v1 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2nPolynomialField;.getTc:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isPentanomial`(`org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField` v1 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2nPolynomialField;.isPentanomial:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isTrinomial`(`org.spongycastle.pqc.math.linearalgebra.GF2nPolynomialField` v1 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/GF2nPolynomialField;.isTrinomial:()Z` @AccessFlag PUBLIC {

  # return;
}
