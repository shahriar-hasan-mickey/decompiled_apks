record `org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` @kind class @AccessFlag PUBLIC {
  `java.math.BigInteger`[] `org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial.a` @AccessFlag ;
}
global `double` `@@org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial.LOG_10_2` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` v3 @kind this, `int` v4 ) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;.<init>:(I)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` v4 @kind this, `org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial` v5 @kind object) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;.<init>:(Lorg/spongycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` v0 @kind this, `java.math.BigInteger`[] v1 @kind object) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;.<init>:([Ljava/math/BigInteger;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.math.BigInteger` `maxCoeffAbs`(`org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` v4 @kind this) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;.maxCoeffAbs:()Ljava/math/BigInteger;` @AccessFlag PRIVATE {

  # return;
}
procedure `org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` `multRecursive`(`org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` v9 @kind this, `org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` v10 @kind object) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;.multRecursive:(Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;)Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `add`(`org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` v4 @kind this, `org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` v5 @kind object) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;.add:(Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `clone`(`org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` v2 @kind this) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial` `div`(`org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` v6 @kind this, `java.math.BigDecimal` v7 @kind object, `int` v8 ) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;.div:(Ljava/math/BigDecimal;I)Lorg/spongycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `div`(`org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` v5 @kind this, `java.math.BigInteger` v6 @kind object) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;.div:(Ljava/math/BigInteger;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.math.BigInteger`[] `getCoeffs`(`org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` v1 @kind this) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;.getCoeffs:()[Ljava/math/BigInteger;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getMaxCoeffLength`(`org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` v4 @kind this) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;.getMaxCoeffLength:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` v2 @kind this) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `mod`(`org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` v3 @kind this, `java.math.BigInteger` v4 @kind object) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;.mod:(Ljava/math/BigInteger;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` `mult`(`org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` v6 @kind this, `org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` v7 @kind object) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;.mult:(Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;)Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `mult`(`org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` v3 @kind this, `java.math.BigInteger` v4 @kind object) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;.mult:(Ljava/math/BigInteger;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `sub`(`org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` v4 @kind this, `org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` v5 @kind object) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;.sub:(Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;)V` @AccessFlag PUBLIC {

  # return;
}
