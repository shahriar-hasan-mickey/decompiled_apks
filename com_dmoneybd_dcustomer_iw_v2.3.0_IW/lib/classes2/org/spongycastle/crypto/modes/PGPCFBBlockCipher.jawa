record `org.spongycastle.crypto.modes.PGPCFBBlockCipher` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.BlockCipher` @kind interface {
  `byte`[] `org.spongycastle.crypto.modes.PGPCFBBlockCipher.FR` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.modes.PGPCFBBlockCipher.FRE` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.modes.PGPCFBBlockCipher.IV` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.modes.PGPCFBBlockCipher.blockSize` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.BlockCipher` `org.spongycastle.crypto.modes.PGPCFBBlockCipher.cipher` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.modes.PGPCFBBlockCipher.count` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.crypto.modes.PGPCFBBlockCipher.forEncryption` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.crypto.modes.PGPCFBBlockCipher.inlineIv` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.modes.PGPCFBBlockCipher.tmp` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.crypto.modes.PGPCFBBlockCipher` v0 @kind this, `org.spongycastle.crypto.BlockCipher` v1 @kind object, `boolean` v2 ) @signature `Lorg/spongycastle/crypto/modes/PGPCFBBlockCipher;.<init>:(Lorg/spongycastle/crypto/BlockCipher;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `decryptBlock`(`org.spongycastle.crypto.modes.PGPCFBBlockCipher` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `byte`[] v7 @kind object, `int` v8 ) @signature `Lorg/spongycastle/crypto/modes/PGPCFBBlockCipher;.decryptBlock:([BI[BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `decryptBlockWithIV`(`org.spongycastle.crypto.modes.PGPCFBBlockCipher` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `byte`[] v9 @kind object, `int` v10 ) @signature `Lorg/spongycastle/crypto/modes/PGPCFBBlockCipher;.decryptBlockWithIV:([BI[BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `encryptBlock`(`org.spongycastle.crypto.modes.PGPCFBBlockCipher` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `byte`[] v7 @kind object, `int` v8 ) @signature `Lorg/spongycastle/crypto/modes/PGPCFBBlockCipher;.encryptBlock:([BI[BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `encryptBlockWithIV`(`org.spongycastle.crypto.modes.PGPCFBBlockCipher` v5 @kind this, `byte`[] v6 @kind object, `int` v7 , `byte`[] v8 @kind object, `int` v9 ) @signature `Lorg/spongycastle/crypto/modes/PGPCFBBlockCipher;.encryptBlockWithIV:([BI[BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `byte` `encryptByte`(`org.spongycastle.crypto.modes.PGPCFBBlockCipher` v1 @kind this, `byte` v2 , `int` v3 ) @signature `Lorg/spongycastle/crypto/modes/PGPCFBBlockCipher;.encryptByte:(BI)B` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.spongycastle.crypto.modes.PGPCFBBlockCipher` v2 @kind this) @signature `Lorg/spongycastle/crypto/modes/PGPCFBBlockCipher;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getBlockSize`(`org.spongycastle.crypto.modes.PGPCFBBlockCipher` v1 @kind this) @signature `Lorg/spongycastle/crypto/modes/PGPCFBBlockCipher;.getBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.crypto.BlockCipher` `getUnderlyingCipher`(`org.spongycastle.crypto.modes.PGPCFBBlockCipher` v1 @kind this) @signature `Lorg/spongycastle/crypto/modes/PGPCFBBlockCipher;.getUnderlyingCipher:()Lorg/spongycastle/crypto/BlockCipher;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.modes.PGPCFBBlockCipher` v6 @kind this, `boolean` v7 , `org.spongycastle.crypto.CipherParameters` v8 @kind object) @signature `Lorg/spongycastle/crypto/modes/PGPCFBBlockCipher;.init:(ZLorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBlock`(`org.spongycastle.crypto.modes.PGPCFBBlockCipher` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `byte`[] v4 @kind object, `int` v5 ) @signature `Lorg/spongycastle/crypto/modes/PGPCFBBlockCipher;.processBlock:([BI[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.spongycastle.crypto.modes.PGPCFBBlockCipher` v4 @kind this) @signature `Lorg/spongycastle/crypto/modes/PGPCFBBlockCipher;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
