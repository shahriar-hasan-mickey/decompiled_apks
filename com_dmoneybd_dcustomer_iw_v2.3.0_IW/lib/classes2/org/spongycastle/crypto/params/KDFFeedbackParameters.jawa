record `org.spongycastle.crypto.params.KDFFeedbackParameters` @kind class @AccessFlag PUBLIC_FINAL extends `org.spongycastle.crypto.DerivationParameters` @kind interface {
  `byte`[] `org.spongycastle.crypto.params.KDFFeedbackParameters.fixedInputData` @AccessFlag PRIVATE_FINAL;
  `byte`[] `org.spongycastle.crypto.params.KDFFeedbackParameters.iv` @AccessFlag PRIVATE_FINAL;
  `byte`[] `org.spongycastle.crypto.params.KDFFeedbackParameters.ki` @AccessFlag PRIVATE_FINAL;
  `int` `org.spongycastle.crypto.params.KDFFeedbackParameters.r` @AccessFlag PRIVATE_FINAL;
  `boolean` `org.spongycastle.crypto.params.KDFFeedbackParameters.useCounter` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@org.spongycastle.crypto.params.KDFFeedbackParameters.UNUSED_R` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.spongycastle.crypto.params.KDFFeedbackParameters` v0 @kind this, `byte`[] v1 @kind object, `byte`[] v2 @kind object, `byte`[] v3 @kind object, `int` v4 , `boolean` v5 ) @signature `Lorg/spongycastle/crypto/params/KDFFeedbackParameters;.<init>:([B[B[BIZ)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.crypto.params.KDFFeedbackParameters` `createWithCounter`(`byte`[] v7 @kind object, `byte`[] v8 @kind object, `byte`[] v9 @kind object, `int` v10 ) @signature `Lorg/spongycastle/crypto/params/KDFFeedbackParameters;.createWithCounter:([B[B[BI)Lorg/spongycastle/crypto/params/KDFFeedbackParameters;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.crypto.params.KDFFeedbackParameters` `createWithoutCounter`(`byte`[] v7 @kind object, `byte`[] v8 @kind object, `byte`[] v9 @kind object) @signature `Lorg/spongycastle/crypto/params/KDFFeedbackParameters;.createWithoutCounter:([B[B[B)Lorg/spongycastle/crypto/params/KDFFeedbackParameters;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `getFixedInputData`(`org.spongycastle.crypto.params.KDFFeedbackParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/params/KDFFeedbackParameters;.getFixedInputData:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getIV`(`org.spongycastle.crypto.params.KDFFeedbackParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/params/KDFFeedbackParameters;.getIV:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getKI`(`org.spongycastle.crypto.params.KDFFeedbackParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/params/KDFFeedbackParameters;.getKI:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getR`(`org.spongycastle.crypto.params.KDFFeedbackParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/params/KDFFeedbackParameters;.getR:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `useCounter`(`org.spongycastle.crypto.params.KDFFeedbackParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/params/KDFFeedbackParameters;.useCounter:()Z` @AccessFlag PUBLIC {

  # return;
}
