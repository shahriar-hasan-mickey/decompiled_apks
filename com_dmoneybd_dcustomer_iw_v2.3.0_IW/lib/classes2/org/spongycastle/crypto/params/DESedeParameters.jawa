record `org.spongycastle.crypto.params.DESedeParameters` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.params.DESParameters` @kind class {
}
global `int` `@@org.spongycastle.crypto.params.DESedeParameters.DES_EDE_KEY_LENGTH` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`org.spongycastle.crypto.params.DESedeParameters` v2 @kind this, `byte`[] v3 @kind object) @signature `Lorg/spongycastle/crypto/params/DESedeParameters;.<init>:([B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `isReal2Key`(`byte`[] v4 @kind object, `int` v5 ) @signature `Lorg/spongycastle/crypto/params/DESedeParameters;.isReal2Key:([BI)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isReal3Key`(`byte`[] v10 @kind object, `int` v11 ) @signature `Lorg/spongycastle/crypto/params/DESedeParameters;.isReal3Key:([BI)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isRealEDEKey`(`byte`[] v2 @kind object, `int` v3 ) @signature `Lorg/spongycastle/crypto/params/DESedeParameters;.isRealEDEKey:([BI)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isWeakKey`(`byte`[] v1 @kind object, `int` v2 ) @signature `Lorg/spongycastle/crypto/params/DESedeParameters;.isWeakKey:([BI)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isWeakKey`(`byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lorg/spongycastle/crypto/params/DESedeParameters;.isWeakKey:([BII)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
