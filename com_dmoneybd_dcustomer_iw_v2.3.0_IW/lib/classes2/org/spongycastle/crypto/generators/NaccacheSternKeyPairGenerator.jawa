record `org.spongycastle.crypto.generators.NaccacheSternKeyPairGenerator` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.AsymmetricCipherKeyPairGenerator` @kind interface {
  `org.spongycastle.crypto.params.NaccacheSternKeyGenerationParameters` `org.spongycastle.crypto.generators.NaccacheSternKeyPairGenerator.param` @AccessFlag PRIVATE;
}
global `java.math.BigInteger` `@@org.spongycastle.crypto.generators.NaccacheSternKeyPairGenerator.ONE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.spongycastle.crypto.generators.NaccacheSternKeyPairGenerator.smallPrimes` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/crypto/generators/NaccacheSternKeyPairGenerator;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.generators.NaccacheSternKeyPairGenerator` v0 @kind this) @signature `Lorg/spongycastle/crypto/generators/NaccacheSternKeyPairGenerator;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.util.Vector` `findFirstPrimes`(`int` v4 ) @signature `Lorg/spongycastle/crypto/generators/NaccacheSternKeyPairGenerator;.findFirstPrimes:(I)Ljava/util/Vector;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.math.BigInteger` `generatePrime`(`int` v2 , `int` v3 , `java.security.SecureRandom` v4 @kind object) @signature `Lorg/spongycastle/crypto/generators/NaccacheSternKeyPairGenerator;.generatePrime:(IILjava/security/SecureRandom;)Ljava/math/BigInteger;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `getInt`(`java.security.SecureRandom` v4 @kind object, `int` v5 ) @signature `Lorg/spongycastle/crypto/generators/NaccacheSternKeyPairGenerator;.getInt:(Ljava/security/SecureRandom;I)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.util.Vector` `permuteList`(`java.util.Vector` v5 @kind object, `java.security.SecureRandom` v6 @kind object) @signature `Lorg/spongycastle/crypto/generators/NaccacheSternKeyPairGenerator;.permuteList:(Ljava/util/Vector;Ljava/security/SecureRandom;)Ljava/util/Vector;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `org.spongycastle.crypto.AsymmetricCipherKeyPair` `generateKeyPair`(`org.spongycastle.crypto.generators.NaccacheSternKeyPairGenerator` v30 @kind this) @signature `Lorg/spongycastle/crypto/generators/NaccacheSternKeyPairGenerator;.generateKeyPair:()Lorg/spongycastle/crypto/AsymmetricCipherKeyPair;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.generators.NaccacheSternKeyPairGenerator` v0 @kind this, `org.spongycastle.crypto.KeyGenerationParameters` v1 @kind object) @signature `Lorg/spongycastle/crypto/generators/NaccacheSternKeyPairGenerator;.init:(Lorg/spongycastle/crypto/KeyGenerationParameters;)V` @AccessFlag PUBLIC {

  # return;
}
