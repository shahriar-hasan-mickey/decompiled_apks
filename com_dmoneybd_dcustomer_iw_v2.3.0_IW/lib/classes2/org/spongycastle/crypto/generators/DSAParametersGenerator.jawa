record `org.spongycastle.crypto.generators.DSAParametersGenerator` @kind class @AccessFlag PUBLIC {
  `int` `org.spongycastle.crypto.generators.DSAParametersGenerator.L` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.generators.DSAParametersGenerator.N` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.generators.DSAParametersGenerator.certainty` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.Digest` `org.spongycastle.crypto.generators.DSAParametersGenerator.digest` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.generators.DSAParametersGenerator.iterations` @AccessFlag PRIVATE;
  `java.security.SecureRandom` `org.spongycastle.crypto.generators.DSAParametersGenerator.random` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.generators.DSAParametersGenerator.usageIndex` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.crypto.generators.DSAParametersGenerator.use186_3` @AccessFlag PRIVATE;
}
global `java.math.BigInteger` `@@org.spongycastle.crypto.generators.DSAParametersGenerator.ONE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.math.BigInteger` `@@org.spongycastle.crypto.generators.DSAParametersGenerator.TWO` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.math.BigInteger` `@@org.spongycastle.crypto.generators.DSAParametersGenerator.ZERO` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/crypto/generators/DSAParametersGenerator;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.generators.DSAParametersGenerator` v1 @kind this) @signature `Lorg/spongycastle/crypto/generators/DSAParametersGenerator;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.generators.DSAParametersGenerator` v0 @kind this, `org.spongycastle.crypto.Digest` v1 @kind object) @signature `Lorg/spongycastle/crypto/generators/DSAParametersGenerator;.<init>:(Lorg/spongycastle/crypto/Digest;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.math.BigInteger` `calculateGenerator_FIPS186_2`(`java.math.BigInteger` v4 @kind object, `java.math.BigInteger` v5 @kind object, `java.security.SecureRandom` v6 @kind object) @signature `Lorg/spongycastle/crypto/generators/DSAParametersGenerator;.calculateGenerator_FIPS186_2:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/security/SecureRandom;)Ljava/math/BigInteger;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.math.BigInteger` `calculateGenerator_FIPS186_3_Unverifiable`(`java.math.BigInteger` v0 @kind object, `java.math.BigInteger` v1 @kind object, `java.security.SecureRandom` v2 @kind object) @signature `Lorg/spongycastle/crypto/generators/DSAParametersGenerator;.calculateGenerator_FIPS186_3_Unverifiable:(Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/security/SecureRandom;)Ljava/math/BigInteger;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.math.BigInteger` `calculateGenerator_FIPS186_3_Verifiable`(`org.spongycastle.crypto.Digest` v6 @kind object, `java.math.BigInteger` v7 @kind object, `java.math.BigInteger` v8 @kind object, `byte`[] v9 @kind object, `int` v10 ) @signature `Lorg/spongycastle/crypto/generators/DSAParametersGenerator;.calculateGenerator_FIPS186_3_Verifiable:(Lorg/spongycastle/crypto/Digest;Ljava/math/BigInteger;Ljava/math/BigInteger;[BI)Ljava/math/BigInteger;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `org.spongycastle.crypto.params.DSAParameters` `generateParameters_FIPS186_2`(`org.spongycastle.crypto.generators.DSAParametersGenerator` v17 @kind this) @signature `Lorg/spongycastle/crypto/generators/DSAParametersGenerator;.generateParameters_FIPS186_2:()Lorg/spongycastle/crypto/params/DSAParameters;` @AccessFlag PRIVATE {

  # return;
}
procedure `org.spongycastle.crypto.params.DSAParameters` `generateParameters_FIPS186_3`(`org.spongycastle.crypto.generators.DSAParametersGenerator` v16 @kind this) @signature `Lorg/spongycastle/crypto/generators/DSAParametersGenerator;.generateParameters_FIPS186_3:()Lorg/spongycastle/crypto/params/DSAParameters;` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `getDefaultN`(`int` v1 ) @signature `Lorg/spongycastle/crypto/generators/DSAParametersGenerator;.getDefaultN:(I)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `getMinimumIterations`(`int` v1 ) @signature `Lorg/spongycastle/crypto/generators/DSAParametersGenerator;.getMinimumIterations:(I)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `hash`(`org.spongycastle.crypto.Digest` v2 @kind object, `byte`[] v3 @kind object, `byte`[] v4 @kind object, `int` v5 ) @signature `Lorg/spongycastle/crypto/generators/DSAParametersGenerator;.hash:(Lorg/spongycastle/crypto/Digest;[B[BI)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `inc`(`byte`[] v2 @kind object) @signature `Lorg/spongycastle/crypto/generators/DSAParametersGenerator;.inc:([B)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `isProbablePrime`(`org.spongycastle.crypto.generators.DSAParametersGenerator` v1 @kind this, `java.math.BigInteger` v2 @kind object) @signature `Lorg/spongycastle/crypto/generators/DSAParametersGenerator;.isProbablePrime:(Ljava/math/BigInteger;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `org.spongycastle.crypto.params.DSAParameters` `generateParameters`(`org.spongycastle.crypto.generators.DSAParametersGenerator` v1 @kind this) @signature `Lorg/spongycastle/crypto/generators/DSAParametersGenerator;.generateParameters:()Lorg/spongycastle/crypto/params/DSAParameters;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.generators.DSAParametersGenerator` v0 @kind this, `int` v1 , `int` v2 , `java.security.SecureRandom` v3 @kind object) @signature `Lorg/spongycastle/crypto/generators/DSAParametersGenerator;.init:(IILjava/security/SecureRandom;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.generators.DSAParametersGenerator` v5 @kind this, `org.spongycastle.crypto.params.DSAParameterGenerationParameters` v6 @kind object) @signature `Lorg/spongycastle/crypto/generators/DSAParametersGenerator;.init:(Lorg/spongycastle/crypto/params/DSAParameterGenerationParameters;)V` @AccessFlag PUBLIC {

  # return;
}
