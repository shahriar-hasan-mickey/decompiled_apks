record `org.spongycastle.crypto.engines.Salsa20Engine` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.SkippingStreamCipher` @kind interface {
  `int` `org.spongycastle.crypto.engines.Salsa20Engine.cW0` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.engines.Salsa20Engine.cW1` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.engines.Salsa20Engine.cW2` @AccessFlag PRIVATE;
  `int`[] `org.spongycastle.crypto.engines.Salsa20Engine.engineState` @AccessFlag PROTECTED;
  `int` `org.spongycastle.crypto.engines.Salsa20Engine.index` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.crypto.engines.Salsa20Engine.initialised` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.engines.Salsa20Engine.keyStream` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.engines.Salsa20Engine.rounds` @AccessFlag PROTECTED;
  `int`[] `org.spongycastle.crypto.engines.Salsa20Engine.x` @AccessFlag PROTECTED;
}
global `int` `@@org.spongycastle.crypto.engines.Salsa20Engine.DEFAULT_ROUNDS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.spongycastle.crypto.engines.Salsa20Engine.STATE_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@org.spongycastle.crypto.engines.Salsa20Engine.sigma` @AccessFlag PROTECTED_STATIC_FINAL;
global `byte`[] `@@org.spongycastle.crypto.engines.Salsa20Engine.tau` @AccessFlag PROTECTED_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/crypto/engines/Salsa20Engine;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.engines.Salsa20Engine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/Salsa20Engine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.engines.Salsa20Engine` v3 @kind this, `int` v4 ) @signature `Lorg/spongycastle/crypto/engines/Salsa20Engine;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `limitExceeded`(`org.spongycastle.crypto.engines.Salsa20Engine` v3 @kind this) @signature `Lorg/spongycastle/crypto/engines/Salsa20Engine;.limitExceeded:()Z` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `limitExceeded`(`org.spongycastle.crypto.engines.Salsa20Engine` v2 @kind this, `int` v3 ) @signature `Lorg/spongycastle/crypto/engines/Salsa20Engine;.limitExceeded:(I)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `resetLimitCounter`(`org.spongycastle.crypto.engines.Salsa20Engine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/Salsa20Engine;.resetLimitCounter:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `rotl`(`int` v1 , `int` v2 ) @signature `Lorg/spongycastle/crypto/engines/Salsa20Engine;.rotl:(II)I` @AccessFlag PROTECTED_STATIC {

  # return;
}
procedure `void` `salsaCore`(`int` v33 , `int`[] v34 @kind object, `int`[] v35 @kind object) @signature `Lorg/spongycastle/crypto/engines/Salsa20Engine;.salsaCore:(I[I[I)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `advanceCounter`(`org.spongycastle.crypto.engines.Salsa20Engine` v3 @kind this) @signature `Lorg/spongycastle/crypto/engines/Salsa20Engine;.advanceCounter:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `advanceCounter`(`org.spongycastle.crypto.engines.Salsa20Engine` v4 @kind this, `long` v5 ) @signature `Lorg/spongycastle/crypto/engines/Salsa20Engine;.advanceCounter:(J)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `generateKeyStream`(`org.spongycastle.crypto.engines.Salsa20Engine` v3 @kind this, `byte`[] v4 @kind object) @signature `Lorg/spongycastle/crypto/engines/Salsa20Engine;.generateKeyStream:([B)V` @AccessFlag PROTECTED {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.spongycastle.crypto.engines.Salsa20Engine` v3 @kind this) @signature `Lorg/spongycastle/crypto/engines/Salsa20Engine;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `getCounter`(`org.spongycastle.crypto.engines.Salsa20Engine` v7 @kind this) @signature `Lorg/spongycastle/crypto/engines/Salsa20Engine;.getCounter:()J` @AccessFlag PROTECTED {

  # return;
}
procedure `int` `getNonceSize`(`org.spongycastle.crypto.engines.Salsa20Engine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/Salsa20Engine;.getNonceSize:()I` @AccessFlag PROTECTED {

  # return;
}
procedure `long` `getPosition`(`org.spongycastle.crypto.engines.Salsa20Engine` v4 @kind this) @signature `Lorg/spongycastle/crypto/engines/Salsa20Engine;.getPosition:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.engines.Salsa20Engine` v2 @kind this, `boolean` v3 , `org.spongycastle.crypto.CipherParameters` v4 @kind object) @signature `Lorg/spongycastle/crypto/engines/Salsa20Engine;.init:(ZLorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBytes`(`org.spongycastle.crypto.engines.Salsa20Engine` v5 @kind this, `byte`[] v6 @kind object, `int` v7 , `int` v8 , `byte`[] v9 @kind object, `int` v10 ) @signature `Lorg/spongycastle/crypto/engines/Salsa20Engine;.processBytes:([BII[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.spongycastle.crypto.engines.Salsa20Engine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/Salsa20Engine;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `resetCounter`(`org.spongycastle.crypto.engines.Salsa20Engine` v3 @kind this) @signature `Lorg/spongycastle/crypto/engines/Salsa20Engine;.resetCounter:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `retreatCounter`(`org.spongycastle.crypto.engines.Salsa20Engine` v4 @kind this) @signature `Lorg/spongycastle/crypto/engines/Salsa20Engine;.retreatCounter:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `retreatCounter`(`org.spongycastle.crypto.engines.Salsa20Engine` v10 @kind this, `long` v11 ) @signature `Lorg/spongycastle/crypto/engines/Salsa20Engine;.retreatCounter:(J)V` @AccessFlag PROTECTED {

  # return;
}
procedure `byte` `returnByte`(`org.spongycastle.crypto.engines.Salsa20Engine` v2 @kind this, `byte` v3 ) @signature `Lorg/spongycastle/crypto/engines/Salsa20Engine;.returnByte:(B)B` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `seekTo`(`org.spongycastle.crypto.engines.Salsa20Engine` v0 @kind this, `long` v1 ) @signature `Lorg/spongycastle/crypto/engines/Salsa20Engine;.seekTo:(J)J` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setKey`(`org.spongycastle.crypto.engines.Salsa20Engine` v9 @kind this, `byte`[] v10 @kind object, `byte`[] v11 @kind object) @signature `Lorg/spongycastle/crypto/engines/Salsa20Engine;.setKey:([B[B)V` @AccessFlag PROTECTED {

  # return;
}
procedure `long` `skip`(`org.spongycastle.crypto.engines.Salsa20Engine` v8 @kind this, `long` v9 ) @signature `Lorg/spongycastle/crypto/engines/Salsa20Engine;.skip:(J)J` @AccessFlag PUBLIC {

  # return;
}
