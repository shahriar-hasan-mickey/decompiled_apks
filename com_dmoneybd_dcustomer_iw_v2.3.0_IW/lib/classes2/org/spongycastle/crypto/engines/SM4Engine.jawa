record `org.spongycastle.crypto.engines.SM4Engine` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.BlockCipher` @kind interface {
  `int`[] `org.spongycastle.crypto.engines.SM4Engine.X` @AccessFlag PRIVATE_FINAL;
  `int`[] `org.spongycastle.crypto.engines.SM4Engine.rk` @AccessFlag PRIVATE;
}
global `int` `@@org.spongycastle.crypto.engines.SM4Engine.BLOCK_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.spongycastle.crypto.engines.SM4Engine.CK` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.spongycastle.crypto.engines.SM4Engine.FK` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@org.spongycastle.crypto.engines.SM4Engine.Sbox` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/crypto/engines/SM4Engine;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.engines.SM4Engine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/SM4Engine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `F0`(`org.spongycastle.crypto.engines.SM4Engine` v3 @kind this, `int`[] v4 @kind object, `int` v5 ) @signature `Lorg/spongycastle/crypto/engines/SM4Engine;.F0:([II)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `F1`(`org.spongycastle.crypto.engines.SM4Engine` v3 @kind this, `int`[] v4 @kind object, `int` v5 ) @signature `Lorg/spongycastle/crypto/engines/SM4Engine;.F1:([II)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `F2`(`org.spongycastle.crypto.engines.SM4Engine` v3 @kind this, `int`[] v4 @kind object, `int` v5 ) @signature `Lorg/spongycastle/crypto/engines/SM4Engine;.F2:([II)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `F3`(`org.spongycastle.crypto.engines.SM4Engine` v3 @kind this, `int`[] v4 @kind object, `int` v5 ) @signature `Lorg/spongycastle/crypto/engines/SM4Engine;.F3:([II)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `L`(`org.spongycastle.crypto.engines.SM4Engine` v2 @kind this, `int` v3 ) @signature `Lorg/spongycastle/crypto/engines/SM4Engine;.L:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `L_ap`(`org.spongycastle.crypto.engines.SM4Engine` v2 @kind this, `int` v3 ) @signature `Lorg/spongycastle/crypto/engines/SM4Engine;.L_ap:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `R`(`org.spongycastle.crypto.engines.SM4Engine` v5 @kind this, `int`[] v6 @kind object, `int` v7 ) @signature `Lorg/spongycastle/crypto/engines/SM4Engine;.R:([II)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `T`(`org.spongycastle.crypto.engines.SM4Engine` v0 @kind this, `int` v1 ) @signature `Lorg/spongycastle/crypto/engines/SM4Engine;.T:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `T_ap`(`org.spongycastle.crypto.engines.SM4Engine` v0 @kind this, `int` v1 ) @signature `Lorg/spongycastle/crypto/engines/SM4Engine;.T_ap:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int`[] `expandKey`(`org.spongycastle.crypto.engines.SM4Engine` v11 @kind this, `boolean` v12 , `byte`[] v13 @kind object) @signature `Lorg/spongycastle/crypto/engines/SM4Engine;.expandKey:(Z[B)[I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `rotateLeft`(`org.spongycastle.crypto.engines.SM4Engine` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lorg/spongycastle/crypto/engines/SM4Engine;.rotateLeft:(II)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `tau`(`org.spongycastle.crypto.engines.SM4Engine` v4 @kind this, `int` v5 ) @signature `Lorg/spongycastle/crypto/engines/SM4Engine;.tau:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.spongycastle.crypto.engines.SM4Engine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/SM4Engine;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getBlockSize`(`org.spongycastle.crypto.engines.SM4Engine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/SM4Engine;.getBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.engines.SM4Engine` v2 @kind this, `boolean` v3 , `org.spongycastle.crypto.CipherParameters` v4 @kind object) @signature `Lorg/spongycastle/crypto/engines/SM4Engine;.init:(ZLorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBlock`(`org.spongycastle.crypto.engines.SM4Engine` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `byte`[] v9 @kind object, `int` v10 ) @signature `Lorg/spongycastle/crypto/engines/SM4Engine;.processBlock:([BI[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.spongycastle.crypto.engines.SM4Engine` v0 @kind this) @signature `Lorg/spongycastle/crypto/engines/SM4Engine;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
