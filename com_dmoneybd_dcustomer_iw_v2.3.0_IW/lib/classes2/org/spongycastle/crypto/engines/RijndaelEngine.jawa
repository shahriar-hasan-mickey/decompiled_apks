record `org.spongycastle.crypto.engines.RijndaelEngine` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.BlockCipher` @kind interface {
  `long` `org.spongycastle.crypto.engines.RijndaelEngine.A0` @AccessFlag PRIVATE;
  `long` `org.spongycastle.crypto.engines.RijndaelEngine.A1` @AccessFlag PRIVATE;
  `long` `org.spongycastle.crypto.engines.RijndaelEngine.A2` @AccessFlag PRIVATE;
  `long` `org.spongycastle.crypto.engines.RijndaelEngine.A3` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.engines.RijndaelEngine.BC` @AccessFlag PRIVATE;
  `long` `org.spongycastle.crypto.engines.RijndaelEngine.BC_MASK` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.engines.RijndaelEngine.ROUNDS` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.engines.RijndaelEngine.blockBits` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.crypto.engines.RijndaelEngine.forEncryption` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.engines.RijndaelEngine.shifts0SC` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.engines.RijndaelEngine.shifts1SC` @AccessFlag PRIVATE;
  `long`[][] `org.spongycastle.crypto.engines.RijndaelEngine.workingKey` @AccessFlag PRIVATE;
}
global `int` `@@org.spongycastle.crypto.engines.RijndaelEngine.MAXKC` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@org.spongycastle.crypto.engines.RijndaelEngine.MAXROUNDS` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@org.spongycastle.crypto.engines.RijndaelEngine.S` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@org.spongycastle.crypto.engines.RijndaelEngine.Si` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[][] `@@org.spongycastle.crypto.engines.RijndaelEngine.a` @AccessFlag STATIC;
global `byte`[] `@@org.spongycastle.crypto.engines.RijndaelEngine.aLogtable` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[][] `@@org.spongycastle.crypto.engines.RijndaelEngine.b` @AccessFlag STATIC;
global `byte`[] `@@org.spongycastle.crypto.engines.RijndaelEngine.logtable` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.spongycastle.crypto.engines.RijndaelEngine.rcon` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/crypto/engines/RijndaelEngine;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.engines.RijndaelEngine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/RijndaelEngine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.engines.RijndaelEngine` v2 @kind this, `int` v3 ) @signature `Lorg/spongycastle/crypto/engines/RijndaelEngine;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `InvMixColumn`(`org.spongycastle.crypto.engines.RijndaelEngine` v18 @kind this) @signature `Lorg/spongycastle/crypto/engines/RijndaelEngine;.InvMixColumn:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `KeyAddition`(`org.spongycastle.crypto.engines.RijndaelEngine` v4 @kind this, `long`[] v5 @kind object) @signature `Lorg/spongycastle/crypto/engines/RijndaelEngine;.KeyAddition:([J)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `MixColumn`(`org.spongycastle.crypto.engines.RijndaelEngine` v18 @kind this) @signature `Lorg/spongycastle/crypto/engines/RijndaelEngine;.MixColumn:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `ShiftRow`(`org.spongycastle.crypto.engines.RijndaelEngine` v3 @kind this, `byte`[] v4 @kind object) @signature `Lorg/spongycastle/crypto/engines/RijndaelEngine;.ShiftRow:([B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `Substitution`(`org.spongycastle.crypto.engines.RijndaelEngine` v2 @kind this, `byte`[] v3 @kind object) @signature `Lorg/spongycastle/crypto/engines/RijndaelEngine;.Substitution:([B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `long` `applyS`(`org.spongycastle.crypto.engines.RijndaelEngine` v7 @kind this, `long` v8 , `byte`[] v10 @kind object) @signature `Lorg/spongycastle/crypto/engines/RijndaelEngine;.applyS:(J[B)J` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `decryptBlock`(`org.spongycastle.crypto.engines.RijndaelEngine` v2 @kind this, `long`[][] v3 @kind object) @signature `Lorg/spongycastle/crypto/engines/RijndaelEngine;.decryptBlock:([[J)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `encryptBlock`(`org.spongycastle.crypto.engines.RijndaelEngine` v2 @kind this, `long`[][] v3 @kind object) @signature `Lorg/spongycastle/crypto/engines/RijndaelEngine;.encryptBlock:([[J)V` @AccessFlag PRIVATE {

  # return;
}
procedure `long`[][] `generateWorkingKey`(`org.spongycastle.crypto.engines.RijndaelEngine` v18 @kind this, `byte`[] v19 @kind object) @signature `Lorg/spongycastle/crypto/engines/RijndaelEngine;.generateWorkingKey:([B)[[J` @AccessFlag PRIVATE {

  # return;
}
procedure `byte` `mul0x2`(`org.spongycastle.crypto.engines.RijndaelEngine` v2 @kind this, `int` v3 ) @signature `Lorg/spongycastle/crypto/engines/RijndaelEngine;.mul0x2:(I)B` @AccessFlag PRIVATE {

  # return;
}
procedure `byte` `mul0x3`(`org.spongycastle.crypto.engines.RijndaelEngine` v2 @kind this, `int` v3 ) @signature `Lorg/spongycastle/crypto/engines/RijndaelEngine;.mul0x3:(I)B` @AccessFlag PRIVATE {

  # return;
}
procedure `byte` `mul0x9`(`org.spongycastle.crypto.engines.RijndaelEngine` v1 @kind this, `int` v2 ) @signature `Lorg/spongycastle/crypto/engines/RijndaelEngine;.mul0x9:(I)B` @AccessFlag PRIVATE {

  # return;
}
procedure `byte` `mul0xb`(`org.spongycastle.crypto.engines.RijndaelEngine` v1 @kind this, `int` v2 ) @signature `Lorg/spongycastle/crypto/engines/RijndaelEngine;.mul0xb:(I)B` @AccessFlag PRIVATE {

  # return;
}
procedure `byte` `mul0xd`(`org.spongycastle.crypto.engines.RijndaelEngine` v1 @kind this, `int` v2 ) @signature `Lorg/spongycastle/crypto/engines/RijndaelEngine;.mul0xd:(I)B` @AccessFlag PRIVATE {

  # return;
}
procedure `byte` `mul0xe`(`org.spongycastle.crypto.engines.RijndaelEngine` v1 @kind this, `int` v2 ) @signature `Lorg/spongycastle/crypto/engines/RijndaelEngine;.mul0xe:(I)B` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `packBlock`(`org.spongycastle.crypto.engines.RijndaelEngine` v4 @kind this, `byte`[] v5 @kind object, `int` v6 ) @signature `Lorg/spongycastle/crypto/engines/RijndaelEngine;.packBlock:([BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `long` `shift`(`org.spongycastle.crypto.engines.RijndaelEngine` v3 @kind this, `long` v4 , `int` v6 ) @signature `Lorg/spongycastle/crypto/engines/RijndaelEngine;.shift:(JI)J` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `unpackBlock`(`org.spongycastle.crypto.engines.RijndaelEngine` v6 @kind this, `byte`[] v7 @kind object, `int` v8 ) @signature `Lorg/spongycastle/crypto/engines/RijndaelEngine;.unpackBlock:([BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.spongycastle.crypto.engines.RijndaelEngine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/RijndaelEngine;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getBlockSize`(`org.spongycastle.crypto.engines.RijndaelEngine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/RijndaelEngine;.getBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.engines.RijndaelEngine` v2 @kind this, `boolean` v3 , `org.spongycastle.crypto.CipherParameters` v4 @kind object) @signature `Lorg/spongycastle/crypto/engines/RijndaelEngine;.init:(ZLorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBlock`(`org.spongycastle.crypto.engines.RijndaelEngine` v3 @kind this, `byte`[] v4 @kind object, `int` v5 , `byte`[] v6 @kind object, `int` v7 ) @signature `Lorg/spongycastle/crypto/engines/RijndaelEngine;.processBlock:([BI[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.spongycastle.crypto.engines.RijndaelEngine` v0 @kind this) @signature `Lorg/spongycastle/crypto/engines/RijndaelEngine;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
