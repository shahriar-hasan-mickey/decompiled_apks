record `org.spongycastle.crypto.engines.RC2Engine` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.BlockCipher` @kind interface {
  `boolean` `org.spongycastle.crypto.engines.RC2Engine.encrypting` @AccessFlag PRIVATE;
  `int`[] `org.spongycastle.crypto.engines.RC2Engine.workingKey` @AccessFlag PRIVATE;
}
global `int` `@@org.spongycastle.crypto.engines.RC2Engine.BLOCK_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@org.spongycastle.crypto.engines.RC2Engine.piTable` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/crypto/engines/RC2Engine;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.engines.RC2Engine` v0 @kind this) @signature `Lorg/spongycastle/crypto/engines/RC2Engine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `decryptBlock`(`org.spongycastle.crypto.engines.RC2Engine` v10 @kind this, `byte`[] v11 @kind object, `int` v12 , `byte`[] v13 @kind object, `int` v14 ) @signature `Lorg/spongycastle/crypto/engines/RC2Engine;.decryptBlock:([BI[BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `encryptBlock`(`org.spongycastle.crypto.engines.RC2Engine` v9 @kind this, `byte`[] v10 @kind object, `int` v11 , `byte`[] v12 @kind object, `int` v13 ) @signature `Lorg/spongycastle/crypto/engines/RC2Engine;.encryptBlock:([BI[BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int`[] `generateWorkingKey`(`org.spongycastle.crypto.engines.RC2Engine` v8 @kind this, `byte`[] v9 @kind object, `int` v10 ) @signature `Lorg/spongycastle/crypto/engines/RC2Engine;.generateWorkingKey:([BI)[I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `rotateWordLeft`(`org.spongycastle.crypto.engines.RC2Engine` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lorg/spongycastle/crypto/engines/RC2Engine;.rotateWordLeft:(II)I` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.spongycastle.crypto.engines.RC2Engine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/RC2Engine;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getBlockSize`(`org.spongycastle.crypto.engines.RC2Engine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/RC2Engine;.getBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.engines.RC2Engine` v2 @kind this, `boolean` v3 , `org.spongycastle.crypto.CipherParameters` v4 @kind object) @signature `Lorg/spongycastle/crypto/engines/RC2Engine;.init:(ZLorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBlock`(`org.spongycastle.crypto.engines.RC2Engine` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `byte`[] v5 @kind object, `int` v6 ) @signature `Lorg/spongycastle/crypto/engines/RC2Engine;.processBlock:([BI[BI)I` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `reset`(`org.spongycastle.crypto.engines.RC2Engine` v0 @kind this) @signature `Lorg/spongycastle/crypto/engines/RC2Engine;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
