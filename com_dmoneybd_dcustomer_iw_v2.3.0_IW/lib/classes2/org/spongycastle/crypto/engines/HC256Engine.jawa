record `org.spongycastle.crypto.engines.HC256Engine` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.StreamCipher` @kind interface {
  `byte`[] `org.spongycastle.crypto.engines.HC256Engine.buf` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.engines.HC256Engine.cnt` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.engines.HC256Engine.idx` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.crypto.engines.HC256Engine.initialised` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.engines.HC256Engine.iv` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.engines.HC256Engine.key` @AccessFlag PRIVATE;
  `int`[] `org.spongycastle.crypto.engines.HC256Engine.p` @AccessFlag PRIVATE;
  `int`[] `org.spongycastle.crypto.engines.HC256Engine.q` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.crypto.engines.HC256Engine` v2 @kind this) @signature `Lorg/spongycastle/crypto/engines/HC256Engine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `byte` `getByte`(`org.spongycastle.crypto.engines.HC256Engine` v6 @kind this) @signature `Lorg/spongycastle/crypto/engines/HC256Engine;.getByte:()B` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.engines.HC256Engine` v10 @kind this) @signature `Lorg/spongycastle/crypto/engines/HC256Engine;.init:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `rotateRight`(`int` v1 , `int` v2 ) @signature `Lorg/spongycastle/crypto/engines/HC256Engine;.rotateRight:(II)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `step`(`org.spongycastle.crypto.engines.HC256Engine` v8 @kind this) @signature `Lorg/spongycastle/crypto/engines/HC256Engine;.step:()I` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.spongycastle.crypto.engines.HC256Engine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/HC256Engine;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.engines.HC256Engine` v2 @kind this, `boolean` v3 , `org.spongycastle.crypto.CipherParameters` v4 @kind object) @signature `Lorg/spongycastle/crypto/engines/HC256Engine;.init:(ZLorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBytes`(`org.spongycastle.crypto.engines.HC256Engine` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 , `byte`[] v8 @kind object, `int` v9 ) @signature `Lorg/spongycastle/crypto/engines/HC256Engine;.processBytes:([BII[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.spongycastle.crypto.engines.HC256Engine` v0 @kind this) @signature `Lorg/spongycastle/crypto/engines/HC256Engine;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte` `returnByte`(`org.spongycastle.crypto.engines.HC256Engine` v1 @kind this, `byte` v2 ) @signature `Lorg/spongycastle/crypto/engines/HC256Engine;.returnByte:(B)B` @AccessFlag PUBLIC {

  # return;
}
