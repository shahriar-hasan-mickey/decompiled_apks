record `org.spongycastle.crypto.engines.OldIESEngine` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.engines.IESEngine` @kind class {
}
procedure `void` `<init>`(`org.spongycastle.crypto.engines.OldIESEngine` v0 @kind this, `org.spongycastle.crypto.BasicAgreement` v1 @kind object, `org.spongycastle.crypto.DerivationFunction` v2 @kind object, `org.spongycastle.crypto.Mac` v3 @kind object) @signature `Lorg/spongycastle/crypto/engines/OldIESEngine;.<init>:(Lorg/spongycastle/crypto/BasicAgreement;Lorg/spongycastle/crypto/DerivationFunction;Lorg/spongycastle/crypto/Mac;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.engines.OldIESEngine` v0 @kind this, `org.spongycastle.crypto.BasicAgreement` v1 @kind object, `org.spongycastle.crypto.DerivationFunction` v2 @kind object, `org.spongycastle.crypto.Mac` v3 @kind object, `org.spongycastle.crypto.BufferedBlockCipher` v4 @kind object) @signature `Lorg/spongycastle/crypto/engines/OldIESEngine;.<init>:(Lorg/spongycastle/crypto/BasicAgreement;Lorg/spongycastle/crypto/DerivationFunction;Lorg/spongycastle/crypto/Mac;Lorg/spongycastle/crypto/BufferedBlockCipher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `byte`[] `getLengthTag`(`org.spongycastle.crypto.engines.OldIESEngine` v2 @kind this, `byte`[] v3 @kind object) @signature `Lorg/spongycastle/crypto/engines/OldIESEngine;.getLengthTag:([B)[B` @AccessFlag PROTECTED {

  # return;
}
