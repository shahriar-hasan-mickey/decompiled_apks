record `org.spongycastle.crypto.engines.RFC3394WrapEngine` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.Wrapper` @kind interface {
  `org.spongycastle.crypto.BlockCipher` `org.spongycastle.crypto.engines.RFC3394WrapEngine.engine` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.crypto.engines.RFC3394WrapEngine.forWrapping` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.engines.RFC3394WrapEngine.iv` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.params.KeyParameter` `org.spongycastle.crypto.engines.RFC3394WrapEngine.param` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.crypto.engines.RFC3394WrapEngine.wrapCipherMode` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.crypto.engines.RFC3394WrapEngine` v1 @kind this, `org.spongycastle.crypto.BlockCipher` v2 @kind object) @signature `Lorg/spongycastle/crypto/engines/RFC3394WrapEngine;.<init>:(Lorg/spongycastle/crypto/BlockCipher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.engines.RFC3394WrapEngine` v1 @kind this, `org.spongycastle.crypto.BlockCipher` v2 @kind object, `boolean` v3 ) @signature `Lorg/spongycastle/crypto/engines/RFC3394WrapEngine;.<init>:(Lorg/spongycastle/crypto/BlockCipher;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.spongycastle.crypto.engines.RFC3394WrapEngine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/RFC3394WrapEngine;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.engines.RFC3394WrapEngine` v0 @kind this, `boolean` v1 , `org.spongycastle.crypto.CipherParameters` v2 @kind object) @signature `Lorg/spongycastle/crypto/engines/RFC3394WrapEngine;.init:(ZLorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `unwrap`(`org.spongycastle.crypto.engines.RFC3394WrapEngine` v12 @kind this, `byte`[] v13 @kind object, `int` v14 , `int` v15 ) @signature `Lorg/spongycastle/crypto/engines/RFC3394WrapEngine;.unwrap:([BII)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `wrap`(`org.spongycastle.crypto.engines.RFC3394WrapEngine` v11 @kind this, `byte`[] v12 @kind object, `int` v13 , `int` v14 ) @signature `Lorg/spongycastle/crypto/engines/RFC3394WrapEngine;.wrap:([BII)[B` @AccessFlag PUBLIC {

  # return;
}
