record `org.spongycastle.crypto.engines.GOST28147Engine` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.BlockCipher` @kind interface {
  `byte`[] `org.spongycastle.crypto.engines.GOST28147Engine.S` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.crypto.engines.GOST28147Engine.forEncryption` @AccessFlag PRIVATE;
  `int`[] `org.spongycastle.crypto.engines.GOST28147Engine.workingKey` @AccessFlag PRIVATE;
}
global `int` `@@org.spongycastle.crypto.engines.GOST28147Engine.BLOCK_SIZE` @AccessFlag PROTECTED_STATIC_FINAL;
global `byte`[] `@@org.spongycastle.crypto.engines.GOST28147Engine.DSbox_A` @AccessFlag PRIVATE_STATIC;
global `byte`[] `@@org.spongycastle.crypto.engines.GOST28147Engine.DSbox_Test` @AccessFlag PRIVATE_STATIC;
global `byte`[] `@@org.spongycastle.crypto.engines.GOST28147Engine.ESbox_A` @AccessFlag PRIVATE_STATIC;
global `byte`[] `@@org.spongycastle.crypto.engines.GOST28147Engine.ESbox_B` @AccessFlag PRIVATE_STATIC;
global `byte`[] `@@org.spongycastle.crypto.engines.GOST28147Engine.ESbox_C` @AccessFlag PRIVATE_STATIC;
global `byte`[] `@@org.spongycastle.crypto.engines.GOST28147Engine.ESbox_D` @AccessFlag PRIVATE_STATIC;
global `byte`[] `@@org.spongycastle.crypto.engines.GOST28147Engine.ESbox_Test` @AccessFlag PRIVATE_STATIC;
global `byte`[] `@@org.spongycastle.crypto.engines.GOST28147Engine.Sbox_Default` @AccessFlag PRIVATE_STATIC;
global `java.util.Hashtable` `@@org.spongycastle.crypto.engines.GOST28147Engine.sBoxes` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/crypto/engines/GOST28147Engine;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.engines.GOST28147Engine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/GOST28147Engine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `GOST28147Func`(`org.spongycastle.crypto.engines.GOST28147Engine` v8 @kind this, `int`[] v9 @kind object, `byte`[] v10 @kind object, `int` v11 , `byte`[] v12 @kind object, `int` v13 ) @signature `Lorg/spongycastle/crypto/engines/GOST28147Engine;.GOST28147Func:([I[BI[BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `GOST28147_mainStep`(`org.spongycastle.crypto.engines.GOST28147Engine` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lorg/spongycastle/crypto/engines/GOST28147Engine;.GOST28147_mainStep:(II)I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `addSBox`(`java.lang.String` v1 @kind object, `byte`[] v2 @kind object) @signature `Lorg/spongycastle/crypto/engines/GOST28147Engine;.addSBox:(Ljava/lang/String;[B)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `bytesToint`(`org.spongycastle.crypto.engines.GOST28147Engine` v3 @kind this, `byte`[] v4 @kind object, `int` v5 ) @signature `Lorg/spongycastle/crypto/engines/GOST28147Engine;.bytesToint:([BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int`[] `generateWorkingKey`(`org.spongycastle.crypto.engines.GOST28147Engine` v3 @kind this, `boolean` v4 , `byte`[] v5 @kind object) @signature `Lorg/spongycastle/crypto/engines/GOST28147Engine;.generateWorkingKey:(Z[B)[I` @AccessFlag PRIVATE {

  # return;
}
procedure `byte`[] `getSBox`(`java.lang.String` v1 @kind object) @signature `Lorg/spongycastle/crypto/engines/GOST28147Engine;.getSBox:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `intTobytes`(`org.spongycastle.crypto.engines.GOST28147Engine` v2 @kind this, `int` v3 , `byte`[] v4 @kind object, `int` v5 ) @signature `Lorg/spongycastle/crypto/engines/GOST28147Engine;.intTobytes:(I[BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.spongycastle.crypto.engines.GOST28147Engine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/GOST28147Engine;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getBlockSize`(`org.spongycastle.crypto.engines.GOST28147Engine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/GOST28147Engine;.getBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.engines.GOST28147Engine` v3 @kind this, `boolean` v4 , `org.spongycastle.crypto.CipherParameters` v5 @kind object) @signature `Lorg/spongycastle/crypto/engines/GOST28147Engine;.init:(ZLorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBlock`(`org.spongycastle.crypto.engines.GOST28147Engine` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `byte`[] v9 @kind object, `int` v10 ) @signature `Lorg/spongycastle/crypto/engines/GOST28147Engine;.processBlock:([BI[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.spongycastle.crypto.engines.GOST28147Engine` v0 @kind this) @signature `Lorg/spongycastle/crypto/engines/GOST28147Engine;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
