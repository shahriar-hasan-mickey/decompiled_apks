record `org.spongycastle.crypto.signers.ISO9796d2PSSSigner` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.SignerWithRecovery` @kind interface {
  `byte`[] `org.spongycastle.crypto.signers.ISO9796d2PSSSigner.block` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.AsymmetricBlockCipher` `org.spongycastle.crypto.signers.ISO9796d2PSSSigner.cipher` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.Digest` `org.spongycastle.crypto.signers.ISO9796d2PSSSigner.digest` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.crypto.signers.ISO9796d2PSSSigner.fullMessage` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.signers.ISO9796d2PSSSigner.hLen` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.signers.ISO9796d2PSSSigner.keyBits` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.signers.ISO9796d2PSSSigner.mBuf` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.signers.ISO9796d2PSSSigner.messageLength` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.signers.ISO9796d2PSSSigner.preBlock` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.signers.ISO9796d2PSSSigner.preMStart` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.signers.ISO9796d2PSSSigner.preSig` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.signers.ISO9796d2PSSSigner.preTLength` @AccessFlag PRIVATE;
  `java.security.SecureRandom` `org.spongycastle.crypto.signers.ISO9796d2PSSSigner.random` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.signers.ISO9796d2PSSSigner.recoveredMessage` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.signers.ISO9796d2PSSSigner.saltLength` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.signers.ISO9796d2PSSSigner.standardSalt` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.signers.ISO9796d2PSSSigner.trailer` @AccessFlag PRIVATE;
}
global `int` `@@org.spongycastle.crypto.signers.ISO9796d2PSSSigner.TRAILER_IMPLICIT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.spongycastle.crypto.signers.ISO9796d2PSSSigner.TRAILER_RIPEMD128` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.spongycastle.crypto.signers.ISO9796d2PSSSigner.TRAILER_RIPEMD160` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.spongycastle.crypto.signers.ISO9796d2PSSSigner.TRAILER_SHA1` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.spongycastle.crypto.signers.ISO9796d2PSSSigner.TRAILER_SHA256` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.spongycastle.crypto.signers.ISO9796d2PSSSigner.TRAILER_SHA384` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.spongycastle.crypto.signers.ISO9796d2PSSSigner.TRAILER_SHA512` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.spongycastle.crypto.signers.ISO9796d2PSSSigner.TRAILER_WHIRLPOOL` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`org.spongycastle.crypto.signers.ISO9796d2PSSSigner` v1 @kind this, `org.spongycastle.crypto.AsymmetricBlockCipher` v2 @kind object, `org.spongycastle.crypto.Digest` v3 @kind object, `int` v4 ) @signature `Lorg/spongycastle/crypto/signers/ISO9796d2PSSSigner;.<init>:(Lorg/spongycastle/crypto/AsymmetricBlockCipher;Lorg/spongycastle/crypto/Digest;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.signers.ISO9796d2PSSSigner` v0 @kind this, `org.spongycastle.crypto.AsymmetricBlockCipher` v1 @kind object, `org.spongycastle.crypto.Digest` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lorg/spongycastle/crypto/signers/ISO9796d2PSSSigner;.<init>:(Lorg/spongycastle/crypto/AsymmetricBlockCipher;Lorg/spongycastle/crypto/Digest;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `ItoOSP`(`org.spongycastle.crypto.signers.ISO9796d2PSSSigner` v3 @kind this, `int` v4 , `byte`[] v5 @kind object) @signature `Lorg/spongycastle/crypto/signers/ISO9796d2PSSSigner;.ItoOSP:(I[B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `LtoOSP`(`org.spongycastle.crypto.signers.ISO9796d2PSSSigner` v4 @kind this, `long` v5 , `byte`[] v7 @kind object) @signature `Lorg/spongycastle/crypto/signers/ISO9796d2PSSSigner;.LtoOSP:(J[B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `clearBlock`(`org.spongycastle.crypto.signers.ISO9796d2PSSSigner` v3 @kind this, `byte`[] v4 @kind object) @signature `Lorg/spongycastle/crypto/signers/ISO9796d2PSSSigner;.clearBlock:([B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `isSameAs`(`org.spongycastle.crypto.signers.ISO9796d2PSSSigner` v5 @kind this, `byte`[] v6 @kind object, `byte`[] v7 @kind object) @signature `Lorg/spongycastle/crypto/signers/ISO9796d2PSSSigner;.isSameAs:([B[B)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `byte`[] `maskGeneratorFunction1`(`org.spongycastle.crypto.signers.ISO9796d2PSSSigner` v8 @kind this, `byte`[] v9 @kind object, `int` v10 , `int` v11 , `int` v12 ) @signature `Lorg/spongycastle/crypto/signers/ISO9796d2PSSSigner;.maskGeneratorFunction1:([BIII)[B` @AccessFlag PRIVATE {

  # return;
}
procedure `byte`[] `generateSignature`(`org.spongycastle.crypto.signers.ISO9796d2PSSSigner` v12 @kind this) @signature `Lorg/spongycastle/crypto/signers/ISO9796d2PSSSigner;.generateSignature:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getRecoveredMessage`(`org.spongycastle.crypto.signers.ISO9796d2PSSSigner` v1 @kind this) @signature `Lorg/spongycastle/crypto/signers/ISO9796d2PSSSigner;.getRecoveredMessage:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasFullMessage`(`org.spongycastle.crypto.signers.ISO9796d2PSSSigner` v1 @kind this) @signature `Lorg/spongycastle/crypto/signers/ISO9796d2PSSSigner;.hasFullMessage:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.signers.ISO9796d2PSSSigner` v3 @kind this, `boolean` v4 , `org.spongycastle.crypto.CipherParameters` v5 @kind object) @signature `Lorg/spongycastle/crypto/signers/ISO9796d2PSSSigner;.init:(ZLorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.spongycastle.crypto.signers.ISO9796d2PSSSigner` v3 @kind this) @signature `Lorg/spongycastle/crypto/signers/ISO9796d2PSSSigner;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.spongycastle.crypto.signers.ISO9796d2PSSSigner` v3 @kind this, `byte` v4 ) @signature `Lorg/spongycastle/crypto/signers/ISO9796d2PSSSigner;.update:(B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.spongycastle.crypto.signers.ISO9796d2PSSSigner` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lorg/spongycastle/crypto/signers/ISO9796d2PSSSigner;.update:([BII)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `updateWithRecoveredMessage`(`org.spongycastle.crypto.signers.ISO9796d2PSSSigner` v8 @kind this, `byte`[] v9 @kind object) @signature `Lorg/spongycastle/crypto/signers/ISO9796d2PSSSigner;.updateWithRecoveredMessage:([B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `verifySignature`(`org.spongycastle.crypto.signers.ISO9796d2PSSSigner` v9 @kind this, `byte`[] v10 @kind object) @signature `Lorg/spongycastle/crypto/signers/ISO9796d2PSSSigner;.verifySignature:([B)Z` @AccessFlag PUBLIC {

  # return;
}
