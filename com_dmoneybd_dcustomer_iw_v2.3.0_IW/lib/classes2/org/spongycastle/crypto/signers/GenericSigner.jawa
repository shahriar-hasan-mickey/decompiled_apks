record `org.spongycastle.crypto.signers.GenericSigner` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.Signer` @kind interface {
  `org.spongycastle.crypto.Digest` `org.spongycastle.crypto.signers.GenericSigner.digest` @AccessFlag PRIVATE_FINAL;
  `org.spongycastle.crypto.AsymmetricBlockCipher` `org.spongycastle.crypto.signers.GenericSigner.engine` @AccessFlag PRIVATE_FINAL;
  `boolean` `org.spongycastle.crypto.signers.GenericSigner.forSigning` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.crypto.signers.GenericSigner` v0 @kind this, `org.spongycastle.crypto.AsymmetricBlockCipher` v1 @kind object, `org.spongycastle.crypto.Digest` v2 @kind object) @signature `Lorg/spongycastle/crypto/signers/GenericSigner;.<init>:(Lorg/spongycastle/crypto/AsymmetricBlockCipher;Lorg/spongycastle/crypto/Digest;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `byte`[] `generateSignature`(`org.spongycastle.crypto.signers.GenericSigner` v4 @kind this) @signature `Lorg/spongycastle/crypto/signers/GenericSigner;.generateSignature:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.signers.GenericSigner` v2 @kind this, `boolean` v3 , `org.spongycastle.crypto.CipherParameters` v4 @kind object) @signature `Lorg/spongycastle/crypto/signers/GenericSigner;.init:(ZLorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.spongycastle.crypto.signers.GenericSigner` v1 @kind this) @signature `Lorg/spongycastle/crypto/signers/GenericSigner;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.spongycastle.crypto.signers.GenericSigner` v1 @kind this, `byte` v2 ) @signature `Lorg/spongycastle/crypto/signers/GenericSigner;.update:(B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.spongycastle.crypto.signers.GenericSigner` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/spongycastle/crypto/signers/GenericSigner;.update:([BII)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `verifySignature`(`org.spongycastle.crypto.signers.GenericSigner` v5 @kind this, `byte`[] v6 @kind object) @signature `Lorg/spongycastle/crypto/signers/GenericSigner;.verifySignature:([B)Z` @AccessFlag PUBLIC {

  # return;
}
