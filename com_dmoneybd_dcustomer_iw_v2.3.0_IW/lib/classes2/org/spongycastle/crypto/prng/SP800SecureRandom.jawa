record `org.spongycastle.crypto.prng.SP800SecureRandom` @kind class @AccessFlag PUBLIC extends `java.security.SecureRandom` @kind class {
  `org.spongycastle.crypto.prng.drbg.SP80090DRBG` `org.spongycastle.crypto.prng.SP800SecureRandom.drbg` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.prng.DRBGProvider` `org.spongycastle.crypto.prng.SP800SecureRandom.drbgProvider` @AccessFlag PRIVATE_FINAL;
  `org.spongycastle.crypto.prng.EntropySource` `org.spongycastle.crypto.prng.SP800SecureRandom.entropySource` @AccessFlag PRIVATE_FINAL;
  `boolean` `org.spongycastle.crypto.prng.SP800SecureRandom.predictionResistant` @AccessFlag PRIVATE_FINAL;
  `java.security.SecureRandom` `org.spongycastle.crypto.prng.SP800SecureRandom.randomSource` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.spongycastle.crypto.prng.SP800SecureRandom` v0 @kind this, `java.security.SecureRandom` v1 @kind object, `org.spongycastle.crypto.prng.EntropySource` v2 @kind object, `org.spongycastle.crypto.prng.DRBGProvider` v3 @kind object, `boolean` v4 ) @signature `Lorg/spongycastle/crypto/prng/SP800SecureRandom;.<init>:(Ljava/security/SecureRandom;Lorg/spongycastle/crypto/prng/EntropySource;Lorg/spongycastle/crypto/prng/DRBGProvider;Z)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `byte`[] `generateSeed`(`org.spongycastle.crypto.prng.SP800SecureRandom` v1 @kind this, `int` v2 ) @signature `Lorg/spongycastle/crypto/prng/SP800SecureRandom;.generateSeed:(I)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `nextBytes`(`org.spongycastle.crypto.prng.SP800SecureRandom` v3 @kind this, `byte`[] v4 @kind object) @signature `Lorg/spongycastle/crypto/prng/SP800SecureRandom;.nextBytes:([B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setSeed`(`org.spongycastle.crypto.prng.SP800SecureRandom` v1 @kind this, `long` v2 ) @signature `Lorg/spongycastle/crypto/prng/SP800SecureRandom;.setSeed:(J)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setSeed`(`org.spongycastle.crypto.prng.SP800SecureRandom` v1 @kind this, `byte`[] v2 @kind object) @signature `Lorg/spongycastle/crypto/prng/SP800SecureRandom;.setSeed:([B)V` @AccessFlag PUBLIC {

  # return;
}
