record `org.spongycastle.crypto.prng.ReversedWindowGenerator` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.prng.RandomGenerator` @kind interface {
  `org.spongycastle.crypto.prng.RandomGenerator` `org.spongycastle.crypto.prng.ReversedWindowGenerator.generator` @AccessFlag PRIVATE_FINAL;
  `byte`[] `org.spongycastle.crypto.prng.ReversedWindowGenerator.window` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.prng.ReversedWindowGenerator.windowCount` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.crypto.prng.ReversedWindowGenerator` v1 @kind this, `org.spongycastle.crypto.prng.RandomGenerator` v2 @kind object, `int` v3 ) @signature `Lorg/spongycastle/crypto/prng/ReversedWindowGenerator;.<init>:(Lorg/spongycastle/crypto/prng/RandomGenerator;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `doNextBytes`(`org.spongycastle.crypto.prng.ReversedWindowGenerator` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lorg/spongycastle/crypto/prng/ReversedWindowGenerator;.doNextBytes:([BII)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `addSeedMaterial`(`org.spongycastle.crypto.prng.ReversedWindowGenerator` v1 @kind this, `long` v2 ) @signature `Lorg/spongycastle/crypto/prng/ReversedWindowGenerator;.addSeedMaterial:(J)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `addSeedMaterial`(`org.spongycastle.crypto.prng.ReversedWindowGenerator` v1 @kind this, `byte`[] v2 @kind object) @signature `Lorg/spongycastle/crypto/prng/ReversedWindowGenerator;.addSeedMaterial:([B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `nextBytes`(`org.spongycastle.crypto.prng.ReversedWindowGenerator` v2 @kind this, `byte`[] v3 @kind object) @signature `Lorg/spongycastle/crypto/prng/ReversedWindowGenerator;.nextBytes:([B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `nextBytes`(`org.spongycastle.crypto.prng.ReversedWindowGenerator` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lorg/spongycastle/crypto/prng/ReversedWindowGenerator;.nextBytes:([BII)V` @AccessFlag PUBLIC {

  # return;
}
