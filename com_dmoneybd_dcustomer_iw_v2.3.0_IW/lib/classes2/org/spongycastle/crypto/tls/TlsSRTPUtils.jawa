record `org.spongycastle.crypto.tls.TlsSRTPUtils` @kind class @AccessFlag PUBLIC {
}
global `java.lang.Integer` `@@org.spongycastle.crypto.tls.TlsSRTPUtils.EXT_use_srtp` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/crypto/tls/TlsSRTPUtils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.TlsSRTPUtils` v0 @kind this) @signature `Lorg/spongycastle/crypto/tls/TlsSRTPUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `addUseSRTPExtension`(`java.util.Hashtable` v1 @kind object, `org.spongycastle.crypto.tls.UseSRTPData` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsSRTPUtils;.addUseSRTPExtension:(Ljava/util/Hashtable;Lorg/spongycastle/crypto/tls/UseSRTPData;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `createUseSRTPExtension`(`org.spongycastle.crypto.tls.UseSRTPData` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsSRTPUtils;.createUseSRTPExtension:(Lorg/spongycastle/crypto/tls/UseSRTPData;)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.crypto.tls.UseSRTPData` `getUseSRTPExtension`(`java.util.Hashtable` v1 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsSRTPUtils;.getUseSRTPExtension:(Ljava/util/Hashtable;)Lorg/spongycastle/crypto/tls/UseSRTPData;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.crypto.tls.UseSRTPData` `readUseSRTPExtension`(`byte`[] v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsSRTPUtils;.readUseSRTPExtension:([B)Lorg/spongycastle/crypto/tls/UseSRTPData;` @AccessFlag PUBLIC_STATIC {

  # return;
}
