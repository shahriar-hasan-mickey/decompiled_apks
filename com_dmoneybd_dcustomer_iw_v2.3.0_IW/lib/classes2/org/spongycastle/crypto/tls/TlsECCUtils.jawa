record `org.spongycastle.crypto.tls.TlsECCUtils` @kind class @AccessFlag PUBLIC {
}
global `java.lang.String`[] `@@org.spongycastle.crypto.tls.TlsECCUtils.CURVE_NAMES` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Integer` `@@org.spongycastle.crypto.tls.TlsECCUtils.EXT_ec_point_formats` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Integer` `@@org.spongycastle.crypto.tls.TlsECCUtils.EXT_elliptic_curves` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.TlsECCUtils` v0 @kind this) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.crypto.params.ECPrivateKeyParameters` `a`(`java.security.SecureRandom` v4 @kind object, `int`[] v5 @kind object, `short`[] v6 @kind object, `java.io.OutputStream` v7 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.a:(Ljava/security/SecureRandom;[I[SLjava/io/OutputStream;)Lorg/spongycastle/crypto/params/ECPrivateKeyParameters;` @AccessFlag STATIC {

  # return;
}
procedure `void` `addSupportedEllipticCurvesExtension`(`java.util.Hashtable` v1 @kind object, `int`[] v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.addSupportedEllipticCurvesExtension:(Ljava/util/Hashtable;[I)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `addSupportedPointFormatsExtension`(`java.util.Hashtable` v1 @kind object, `short`[] v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.addSupportedPointFormatsExtension:(Ljava/util/Hashtable;[S)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `areOnSameCurve`(`org.spongycastle.crypto.params.ECDomainParameters` v2 @kind object, `org.spongycastle.crypto.params.ECDomainParameters` v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.areOnSameCurve:(Lorg/spongycastle/crypto/params/ECDomainParameters;Lorg/spongycastle/crypto/params/ECDomainParameters;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `calculateECDHBasicAgreement`(`org.spongycastle.crypto.params.ECPublicKeyParameters` v1 @kind object, `org.spongycastle.crypto.params.ECPrivateKeyParameters` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.calculateECDHBasicAgreement:(Lorg/spongycastle/crypto/params/ECPublicKeyParameters;Lorg/spongycastle/crypto/params/ECPrivateKeyParameters;)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `checkNamedCurve`(`int`[] v0 @kind object, `int` v1 ) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.checkNamedCurve:([II)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `containsECCCipherSuites`(`int`[] v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.containsECCCipherSuites:([I)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `createSupportedEllipticCurvesExtension`(`int`[] v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.createSupportedEllipticCurvesExtension:([I)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `createSupportedPointFormatsExtension`(`short`[] v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.createSupportedPointFormatsExtension:([S)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.math.BigInteger` `deserializeECFieldElement`(`int` v1 , `byte`[] v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.deserializeECFieldElement:(I[B)Ljava/math/BigInteger;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECPoint` `deserializeECPoint`(`short`[] v6 @kind object, `org.spongycastle.math.ec.ECCurve` v7 @kind object, `byte`[] v8 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.deserializeECPoint:([SLorg/spongycastle/math/ec/ECCurve;[B)Lorg/spongycastle/math/ec/ECPoint;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.crypto.params.ECPublicKeyParameters` `deserializeECPublicKey`(`short`[] v1 @kind object, `org.spongycastle.crypto.params.ECDomainParameters` v2 @kind object, `byte`[] v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.deserializeECPublicKey:([SLorg/spongycastle/crypto/params/ECDomainParameters;[B)Lorg/spongycastle/crypto/params/ECPublicKeyParameters;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.crypto.AsymmetricCipherKeyPair` `generateECKeyPair`(`java.security.SecureRandom` v2 @kind object, `org.spongycastle.crypto.params.ECDomainParameters` v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.generateECKeyPair:(Ljava/security/SecureRandom;Lorg/spongycastle/crypto/params/ECDomainParameters;)Lorg/spongycastle/crypto/AsymmetricCipherKeyPair;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.crypto.params.ECPrivateKeyParameters` `generateEphemeralClientKeyExchange`(`java.security.SecureRandom` v0 @kind object, `short`[] v1 @kind object, `org.spongycastle.crypto.params.ECDomainParameters` v2 @kind object, `java.io.OutputStream` v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.generateEphemeralClientKeyExchange:(Ljava/security/SecureRandom;[SLorg/spongycastle/crypto/params/ECDomainParameters;Ljava/io/OutputStream;)Lorg/spongycastle/crypto/params/ECPrivateKeyParameters;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `getNameOfNamedCurve`(`int` v1 ) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.getNameOfNamedCurve:(I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.crypto.params.ECDomainParameters` `getParametersForNamedCurve`(`int` v8 ) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.getParametersForNamedCurve:(I)Lorg/spongycastle/crypto/params/ECDomainParameters;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int`[] `getSupportedEllipticCurvesExtension`(`java.util.Hashtable` v1 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.getSupportedEllipticCurvesExtension:(Ljava/util/Hashtable;)[I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short`[] `getSupportedPointFormatsExtension`(`java.util.Hashtable` v1 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.getSupportedPointFormatsExtension:(Ljava/util/Hashtable;)[S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `hasAnySupportedNamedCurves`() @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.hasAnySupportedNamedCurves:()Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isCompressionPreferred`(`short`[] v3 @kind object, `short` v4 ) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.isCompressionPreferred:([SS)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isECCCipherSuite`(`int` v0 ) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.isECCCipherSuite:(I)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isSupportedNamedCurve`(`int` v1 ) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.isSupportedNamedCurve:(I)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `readECExponent`(`int` v2 , `java.io.InputStream` v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.readECExponent:(ILjava/io/InputStream;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.math.BigInteger` `readECFieldElement`(`int` v0 , `java.io.InputStream` v1 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.readECFieldElement:(ILjava/io/InputStream;)Ljava/math/BigInteger;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.math.BigInteger` `readECParameter`(`java.io.InputStream` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.readECParameter:(Ljava/io/InputStream;)Ljava/math/BigInteger;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.crypto.params.ECDomainParameters` `readECParameters`(`int`[] v16 @kind object, `short`[] v17 @kind object, `java.io.InputStream` v18 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.readECParameters:([I[SLjava/io/InputStream;)Lorg/spongycastle/crypto/params/ECDomainParameters;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int`[] `readSupportedEllipticCurvesExtension`(`byte`[] v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.readSupportedEllipticCurvesExtension:([B)[I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `short`[] `readSupportedPointFormatsExtension`(`byte`[] v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.readSupportedPointFormatsExtension:([B)[S` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `serializeECFieldElement`(`int` v0 , `java.math.BigInteger` v1 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.serializeECFieldElement:(ILjava/math/BigInteger;)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `serializeECPoint`(`short`[] v2 @kind object, `org.spongycastle.math.ec.ECPoint` v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.serializeECPoint:([SLorg/spongycastle/math/ec/ECPoint;)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `serializeECPublicKey`(`short`[] v0 @kind object, `org.spongycastle.crypto.params.ECPublicKeyParameters` v1 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.serializeECPublicKey:([SLorg/spongycastle/crypto/params/ECPublicKeyParameters;)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.crypto.params.ECPublicKeyParameters` `validateECPublicKey`(`org.spongycastle.crypto.params.ECPublicKeyParameters` v0 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.validateECPublicKey:(Lorg/spongycastle/crypto/params/ECPublicKeyParameters;)Lorg/spongycastle/crypto/params/ECPublicKeyParameters;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `writeECExponent`(`int` v2 , `java.io.OutputStream` v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.writeECExponent:(ILjava/io/OutputStream;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `writeECFieldElement`(`int` v0 , `java.math.BigInteger` v1 @kind object, `java.io.OutputStream` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.writeECFieldElement:(ILjava/math/BigInteger;Ljava/io/OutputStream;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `writeECFieldElement`(`org.spongycastle.math.ec.ECFieldElement` v0 @kind object, `java.io.OutputStream` v1 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.writeECFieldElement:(Lorg/spongycastle/math/ec/ECFieldElement;Ljava/io/OutputStream;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `writeECParameter`(`java.math.BigInteger` v0 @kind object, `java.io.OutputStream` v1 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.writeECParameter:(Ljava/math/BigInteger;Ljava/io/OutputStream;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `writeECPoint`(`short`[] v0 @kind object, `org.spongycastle.math.ec.ECPoint` v1 @kind object, `java.io.OutputStream` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.writeECPoint:([SLorg/spongycastle/math/ec/ECPoint;Ljava/io/OutputStream;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `writeExplicitECParameters`(`short`[] v7 @kind object, `org.spongycastle.crypto.params.ECDomainParameters` v8 @kind object, `java.io.OutputStream` v9 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.writeExplicitECParameters:([SLorg/spongycastle/crypto/params/ECDomainParameters;Ljava/io/OutputStream;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `writeNamedECParameters`(`int` v1 , `java.io.OutputStream` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsECCUtils;.writeNamedECParameters:(ILjava/io/OutputStream;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
