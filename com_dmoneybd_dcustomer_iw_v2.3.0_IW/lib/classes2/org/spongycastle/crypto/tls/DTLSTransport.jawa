record `org.spongycastle.crypto.tls.DTLSTransport` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.tls.DatagramTransport` @kind interface {
  `org.spongycastle.crypto.tls.DTLSRecordLayer` `org.spongycastle.crypto.tls.DTLSTransport.recordLayer` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.DTLSTransport` v0 @kind this, `org.spongycastle.crypto.tls.DTLSRecordLayer` v1 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSTransport;.<init>:(Lorg/spongycastle/crypto/tls/DTLSRecordLayer;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `close`(`org.spongycastle.crypto.tls.DTLSTransport` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/DTLSTransport;.close:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getReceiveLimit`(`org.spongycastle.crypto.tls.DTLSTransport` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/DTLSTransport;.getReceiveLimit:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getSendLimit`(`org.spongycastle.crypto.tls.DTLSTransport` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/DTLSTransport;.getSendLimit:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `receive`(`org.spongycastle.crypto.tls.DTLSTransport` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 , `int` v6 ) @signature `Lorg/spongycastle/crypto/tls/DTLSTransport;.receive:([BIII)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `send`(`org.spongycastle.crypto.tls.DTLSTransport` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lorg/spongycastle/crypto/tls/DTLSTransport;.send:([BII)V` @AccessFlag PUBLIC {

  # return;
}
