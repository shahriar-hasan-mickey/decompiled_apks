record `org.spongycastle.crypto.tls.CombinedHash` @kind class @AccessFlag  extends `org.spongycastle.crypto.tls.TlsHandshakeHash` @kind interface {
  `org.spongycastle.crypto.tls.TlsContext` `org.spongycastle.crypto.tls.CombinedHash.context` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.Digest` `org.spongycastle.crypto.tls.CombinedHash.md5` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.Digest` `org.spongycastle.crypto.tls.CombinedHash.sha1` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.CombinedHash` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/CombinedHash;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.CombinedHash` v2 @kind this, `org.spongycastle.crypto.tls.CombinedHash` v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/CombinedHash;.<init>:(Lorg/spongycastle/crypto/tls/CombinedHash;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `int` `doFinal`(`org.spongycastle.crypto.tls.CombinedHash` v4 @kind this, `byte`[] v5 @kind object, `int` v6 ) @signature `Lorg/spongycastle/crypto/tls/CombinedHash;.doFinal:([BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.crypto.Digest` `forkPRFHash`(`org.spongycastle.crypto.tls.CombinedHash` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/CombinedHash;.forkPRFHash:()Lorg/spongycastle/crypto/Digest;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.spongycastle.crypto.tls.CombinedHash` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/CombinedHash;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getDigestSize`(`org.spongycastle.crypto.tls.CombinedHash` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/CombinedHash;.getDigestSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getFinalHash`(`org.spongycastle.crypto.tls.CombinedHash` v1 @kind this, `short` v2 ) @signature `Lorg/spongycastle/crypto/tls/CombinedHash;.getFinalHash:(S)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.tls.CombinedHash` v0 @kind this, `org.spongycastle.crypto.tls.TlsContext` v1 @kind object) @signature `Lorg/spongycastle/crypto/tls/CombinedHash;.init:(Lorg/spongycastle/crypto/tls/TlsContext;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsHandshakeHash` `notifyPRFDetermined`(`org.spongycastle.crypto.tls.CombinedHash` v0 @kind this) @signature `Lorg/spongycastle/crypto/tls/CombinedHash;.notifyPRFDetermined:()Lorg/spongycastle/crypto/tls/TlsHandshakeHash;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.spongycastle.crypto.tls.CombinedHash` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/CombinedHash;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `sealHashAlgorithms`(`org.spongycastle.crypto.tls.CombinedHash` v0 @kind this) @signature `Lorg/spongycastle/crypto/tls/CombinedHash;.sealHashAlgorithms:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `ssl3Complete`(`org.spongycastle.crypto.tls.CombinedHash` v4 @kind this, `org.spongycastle.crypto.Digest` v5 @kind object, `byte`[] v6 @kind object, `byte`[] v7 @kind object, `int` v8 ) @signature `Lorg/spongycastle/crypto/tls/CombinedHash;.ssl3Complete:(Lorg/spongycastle/crypto/Digest;[B[BI)V` @AccessFlag PROTECTED {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsHandshakeHash` `stopTracking`(`org.spongycastle.crypto.tls.CombinedHash` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/CombinedHash;.stopTracking:()Lorg/spongycastle/crypto/tls/TlsHandshakeHash;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `trackHashAlgorithm`(`org.spongycastle.crypto.tls.CombinedHash` v1 @kind this, `short` v2 ) @signature `Lorg/spongycastle/crypto/tls/CombinedHash;.trackHashAlgorithm:(S)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.spongycastle.crypto.tls.CombinedHash` v1 @kind this, `byte` v2 ) @signature `Lorg/spongycastle/crypto/tls/CombinedHash;.update:(B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.spongycastle.crypto.tls.CombinedHash` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/spongycastle/crypto/tls/CombinedHash;.update:([BII)V` @AccessFlag PUBLIC {

  # return;
}
