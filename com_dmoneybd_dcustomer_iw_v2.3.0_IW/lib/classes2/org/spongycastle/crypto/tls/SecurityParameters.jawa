record `org.spongycastle.crypto.tls.SecurityParameters` @kind class @AccessFlag PUBLIC {
  `int` `org.spongycastle.crypto.tls.SecurityParameters.a` @AccessFlag ;
  `int` `org.spongycastle.crypto.tls.SecurityParameters.b` @AccessFlag ;
  `short` `org.spongycastle.crypto.tls.SecurityParameters.c` @AccessFlag ;
  `int` `org.spongycastle.crypto.tls.SecurityParameters.d` @AccessFlag ;
  `int` `org.spongycastle.crypto.tls.SecurityParameters.e` @AccessFlag ;
  `byte`[] `org.spongycastle.crypto.tls.SecurityParameters.f` @AccessFlag ;
  `byte`[] `org.spongycastle.crypto.tls.SecurityParameters.g` @AccessFlag ;
  `byte`[] `org.spongycastle.crypto.tls.SecurityParameters.h` @AccessFlag ;
  `byte`[] `org.spongycastle.crypto.tls.SecurityParameters.i` @AccessFlag ;
  `byte`[] `org.spongycastle.crypto.tls.SecurityParameters.j` @AccessFlag ;
  `byte`[] `org.spongycastle.crypto.tls.SecurityParameters.k` @AccessFlag ;
  `short` `org.spongycastle.crypto.tls.SecurityParameters.l` @AccessFlag ;
  `boolean` `org.spongycastle.crypto.tls.SecurityParameters.m` @AccessFlag ;
  `boolean` `org.spongycastle.crypto.tls.SecurityParameters.n` @AccessFlag ;
  `boolean` `org.spongycastle.crypto.tls.SecurityParameters.o` @AccessFlag ;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.SecurityParameters` v3 @kind this) @signature `Lorg/spongycastle/crypto/tls/SecurityParameters;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`org.spongycastle.crypto.tls.SecurityParameters` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/SecurityParameters;.a:()V` @AccessFlag  {

  # return;
}
procedure `int` `getCipherSuite`(`org.spongycastle.crypto.tls.SecurityParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/SecurityParameters;.getCipherSuite:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getClientRandom`(`org.spongycastle.crypto.tls.SecurityParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/SecurityParameters;.getClientRandom:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `short` `getCompressionAlgorithm`(`org.spongycastle.crypto.tls.SecurityParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/SecurityParameters;.getCompressionAlgorithm:()S` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getEntity`(`org.spongycastle.crypto.tls.SecurityParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/SecurityParameters;.getEntity:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getMasterSecret`(`org.spongycastle.crypto.tls.SecurityParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/SecurityParameters;.getMasterSecret:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getPSKIdentity`(`org.spongycastle.crypto.tls.SecurityParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/SecurityParameters;.getPSKIdentity:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getPrfAlgorithm`(`org.spongycastle.crypto.tls.SecurityParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/SecurityParameters;.getPrfAlgorithm:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getPskIdentity`(`org.spongycastle.crypto.tls.SecurityParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/SecurityParameters;.getPskIdentity:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getSRPIdentity`(`org.spongycastle.crypto.tls.SecurityParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/SecurityParameters;.getSRPIdentity:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getServerRandom`(`org.spongycastle.crypto.tls.SecurityParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/SecurityParameters;.getServerRandom:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getSessionHash`(`org.spongycastle.crypto.tls.SecurityParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/SecurityParameters;.getSessionHash:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getVerifyDataLength`(`org.spongycastle.crypto.tls.SecurityParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/SecurityParameters;.getVerifyDataLength:()I` @AccessFlag PUBLIC {

  # return;
}
