record `org.spongycastle.crypto.tls.DTLSRecordLayer` @kind class @AccessFlag  extends `org.spongycastle.crypto.tls.DatagramTransport` @kind interface {
  `boolean` `org.spongycastle.crypto.tls.DTLSRecordLayer.closed` @AccessFlag PRIVATE_VOLATILE;
  `org.spongycastle.crypto.tls.TlsContext` `org.spongycastle.crypto.tls.DTLSRecordLayer.context` @AccessFlag PRIVATE_FINAL;
  `org.spongycastle.crypto.tls.DTLSEpoch` `org.spongycastle.crypto.tls.DTLSRecordLayer.currentEpoch` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.crypto.tls.DTLSRecordLayer.failed` @AccessFlag PRIVATE_VOLATILE;
  `boolean` `org.spongycastle.crypto.tls.DTLSRecordLayer.inHandshake` @AccessFlag PRIVATE_VOLATILE;
  `org.spongycastle.crypto.tls.TlsPeer` `org.spongycastle.crypto.tls.DTLSRecordLayer.peer` @AccessFlag PRIVATE_FINAL;
  `org.spongycastle.crypto.tls.DTLSEpoch` `org.spongycastle.crypto.tls.DTLSRecordLayer.pendingEpoch` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.tls.DTLSRecordLayer.plaintextLimit` @AccessFlag PRIVATE_VOLATILE;
  `org.spongycastle.crypto.tls.DTLSEpoch` `org.spongycastle.crypto.tls.DTLSRecordLayer.readEpoch` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.tls.ProtocolVersion` `org.spongycastle.crypto.tls.DTLSRecordLayer.readVersion` @AccessFlag PRIVATE_VOLATILE;
  `org.spongycastle.crypto.tls.ByteQueue` `org.spongycastle.crypto.tls.DTLSRecordLayer.recordQueue` @AccessFlag PRIVATE_FINAL;
  `org.spongycastle.crypto.tls.DTLSHandshakeRetransmit` `org.spongycastle.crypto.tls.DTLSRecordLayer.retransmit` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.tls.DTLSEpoch` `org.spongycastle.crypto.tls.DTLSRecordLayer.retransmitEpoch` @AccessFlag PRIVATE;
  `long` `org.spongycastle.crypto.tls.DTLSRecordLayer.retransmitExpiry` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.tls.DatagramTransport` `org.spongycastle.crypto.tls.DTLSRecordLayer.transport` @AccessFlag PRIVATE_FINAL;
  `org.spongycastle.crypto.tls.DTLSEpoch` `org.spongycastle.crypto.tls.DTLSRecordLayer.writeEpoch` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.tls.ProtocolVersion` `org.spongycastle.crypto.tls.DTLSRecordLayer.writeVersion` @AccessFlag PRIVATE_VOLATILE;
}
global `int` `@@org.spongycastle.crypto.tls.DTLSRecordLayer.MAX_FRAGMENT_LENGTH` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@org.spongycastle.crypto.tls.DTLSRecordLayer.RECORD_HEADER_LENGTH` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.spongycastle.crypto.tls.DTLSRecordLayer.RETRANSMIT_TIMEOUT` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.spongycastle.crypto.tls.DTLSRecordLayer.TCP_MSL` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.spongycastle.crypto.tls.DTLSRecordLayer` v3 @kind this, `org.spongycastle.crypto.tls.DatagramTransport` v4 @kind object, `org.spongycastle.crypto.tls.TlsContext` v5 @kind object, `org.spongycastle.crypto.tls.TlsPeer` v6 @kind object, `short` v7 ) @signature `Lorg/spongycastle/crypto/tls/DTLSRecordLayer;.<init>:(Lorg/spongycastle/crypto/tls/DatagramTransport;Lorg/spongycastle/crypto/tls/TlsContext;Lorg/spongycastle/crypto/tls/TlsPeer;S)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `closeTransport`(`org.spongycastle.crypto.tls.DTLSRecordLayer` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/DTLSRecordLayer;.closeTransport:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `long` `getMacSequenceNumber`(`int` v4 , `long` v5 ) @signature `Lorg/spongycastle/crypto/tls/DTLSRecordLayer;.getMacSequenceNumber:(IJ)J` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `raiseAlert`(`org.spongycastle.crypto.tls.DTLSRecordLayer` v1 @kind this, `short` v2 , `short` v3 , `java.lang.String` v4 @kind object, `java.lang.Throwable` v5 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSRecordLayer;.raiseAlert:(SSLjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `receiveRecord`(`org.spongycastle.crypto.tls.DTLSRecordLayer` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 , `int` v8 ) @signature `Lorg/spongycastle/crypto/tls/DTLSRecordLayer;.receiveRecord:([BIII)I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `sendRecord`(`org.spongycastle.crypto.tls.DTLSRecordLayer` v13 @kind this, `short` v14 , `byte`[] v15 @kind object, `int` v16 , `int` v17 ) @signature `Lorg/spongycastle/crypto/tls/DTLSRecordLayer;.sendRecord:(S[BII)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `a`(`org.spongycastle.crypto.tls.DTLSRecordLayer` v2 @kind this, `short` v3 ) @signature `Lorg/spongycastle/crypto/tls/DTLSRecordLayer;.a:(S)V` @AccessFlag  {

  # return;
}
procedure `org.spongycastle.crypto.tls.ProtocolVersion` `b`(`org.spongycastle.crypto.tls.DTLSRecordLayer` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/DTLSRecordLayer;.b:()Lorg/spongycastle/crypto/tls/ProtocolVersion;` @AccessFlag  {

  # return;
}
procedure `void` `c`(`org.spongycastle.crypto.tls.DTLSRecordLayer` v4 @kind this, `org.spongycastle.crypto.tls.DTLSHandshakeRetransmit` v5 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSRecordLayer;.c:(Lorg/spongycastle/crypto/tls/DTLSHandshakeRetransmit;)V` @AccessFlag  {

  # return;
}
procedure `void` `close`(`org.spongycastle.crypto.tls.DTLSRecordLayer` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/DTLSRecordLayer;.close:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `d`(`org.spongycastle.crypto.tls.DTLSRecordLayer` v2 @kind this, `org.spongycastle.crypto.tls.TlsCipher` v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSRecordLayer;.d:(Lorg/spongycastle/crypto/tls/TlsCipher;)V` @AccessFlag  {

  # return;
}
procedure `void` `e`(`org.spongycastle.crypto.tls.DTLSRecordLayer` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/DTLSRecordLayer;.e:()V` @AccessFlag  {

  # return;
}
procedure `void` `f`(`org.spongycastle.crypto.tls.DTLSRecordLayer` v0 @kind this, `int` v1 ) @signature `Lorg/spongycastle/crypto/tls/DTLSRecordLayer;.f:(I)V` @AccessFlag  {

  # return;
}
procedure `void` `g`(`org.spongycastle.crypto.tls.DTLSRecordLayer` v0 @kind this, `org.spongycastle.crypto.tls.ProtocolVersion` v1 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSRecordLayer;.g:(Lorg/spongycastle/crypto/tls/ProtocolVersion;)V` @AccessFlag  {

  # return;
}
procedure `int` `getReceiveLimit`(`org.spongycastle.crypto.tls.DTLSRecordLayer` v3 @kind this) @signature `Lorg/spongycastle/crypto/tls/DTLSRecordLayer;.getReceiveLimit:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getSendLimit`(`org.spongycastle.crypto.tls.DTLSRecordLayer` v3 @kind this) @signature `Lorg/spongycastle/crypto/tls/DTLSRecordLayer;.getSendLimit:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `h`(`org.spongycastle.crypto.tls.DTLSRecordLayer` v0 @kind this, `org.spongycastle.crypto.tls.ProtocolVersion` v1 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSRecordLayer;.h:(Lorg/spongycastle/crypto/tls/ProtocolVersion;)V` @AccessFlag  {

  # return;
}
procedure `void` `i`(`org.spongycastle.crypto.tls.DTLSRecordLayer` v2 @kind this, `short` v3 , `java.lang.String` v4 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSRecordLayer;.i:(SLjava/lang/String;)V` @AccessFlag  {

  # return;
}
procedure `int` `receive`(`org.spongycastle.crypto.tls.DTLSRecordLayer` v18 @kind this, `byte`[] v19 @kind object, `int` v20 , `int` v21 , `int` v22 ) @signature `Lorg/spongycastle/crypto/tls/DTLSRecordLayer;.receive:([BIII)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `send`(`org.spongycastle.crypto.tls.DTLSRecordLayer` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lorg/spongycastle/crypto/tls/DTLSRecordLayer;.send:([BII)V` @AccessFlag PUBLIC {

  # return;
}
