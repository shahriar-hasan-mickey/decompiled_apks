record `org.spongycastle.crypto.tls.DefaultTlsServer` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.spongycastle.crypto.tls.AbstractTlsServer` @kind class {
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.DefaultTlsServer` v0 @kind this) @signature `Lorg/spongycastle/crypto/tls/DefaultTlsServer;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.DefaultTlsServer` v0 @kind this, `org.spongycastle.crypto.tls.TlsCipherFactory` v1 @kind object) @signature `Lorg/spongycastle/crypto/tls/DefaultTlsServer;.<init>:(Lorg/spongycastle/crypto/tls/TlsCipherFactory;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsKeyExchange` `createDHEKeyExchange`(`org.spongycastle.crypto.tls.DefaultTlsServer` v3 @kind this, `int` v4 ) @signature `Lorg/spongycastle/crypto/tls/DefaultTlsServer;.createDHEKeyExchange:(I)Lorg/spongycastle/crypto/tls/TlsKeyExchange;` @AccessFlag PROTECTED {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsKeyExchange` `createDHKeyExchange`(`org.spongycastle.crypto.tls.DefaultTlsServer` v3 @kind this, `int` v4 ) @signature `Lorg/spongycastle/crypto/tls/DefaultTlsServer;.createDHKeyExchange:(I)Lorg/spongycastle/crypto/tls/TlsKeyExchange;` @AccessFlag PROTECTED {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsKeyExchange` `createECDHEKeyExchange`(`org.spongycastle.crypto.tls.DefaultTlsServer` v7 @kind this, `int` v8 ) @signature `Lorg/spongycastle/crypto/tls/DefaultTlsServer;.createECDHEKeyExchange:(I)Lorg/spongycastle/crypto/tls/TlsKeyExchange;` @AccessFlag PROTECTED {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsKeyExchange` `createECDHKeyExchange`(`org.spongycastle.crypto.tls.DefaultTlsServer` v7 @kind this, `int` v8 ) @signature `Lorg/spongycastle/crypto/tls/DefaultTlsServer;.createECDHKeyExchange:(I)Lorg/spongycastle/crypto/tls/TlsKeyExchange;` @AccessFlag PROTECTED {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsKeyExchange` `createRSAKeyExchange`(`org.spongycastle.crypto.tls.DefaultTlsServer` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/DefaultTlsServer;.createRSAKeyExchange:()Lorg/spongycastle/crypto/tls/TlsKeyExchange;` @AccessFlag PROTECTED {

  # return;
}
procedure `int`[] `getCipherSuites`(`org.spongycastle.crypto.tls.DefaultTlsServer` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/DefaultTlsServer;.getCipherSuites:()[I` @AccessFlag PROTECTED {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsCredentials` `getCredentials`(`org.spongycastle.crypto.tls.DefaultTlsServer` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/DefaultTlsServer;.getCredentials:()Lorg/spongycastle/crypto/tls/TlsCredentials;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.crypto.params.DHParameters` `getDHParameters`(`org.spongycastle.crypto.tls.DefaultTlsServer` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/DefaultTlsServer;.getDHParameters:()Lorg/spongycastle/crypto/params/DHParameters;` @AccessFlag PROTECTED {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsSignerCredentials` `getDSASignerCredentials`(`org.spongycastle.crypto.tls.DefaultTlsServer` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/DefaultTlsServer;.getDSASignerCredentials:()Lorg/spongycastle/crypto/tls/TlsSignerCredentials;` @AccessFlag PROTECTED {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsSignerCredentials` `getECDSASignerCredentials`(`org.spongycastle.crypto.tls.DefaultTlsServer` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/DefaultTlsServer;.getECDSASignerCredentials:()Lorg/spongycastle/crypto/tls/TlsSignerCredentials;` @AccessFlag PROTECTED {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsKeyExchange` `getKeyExchange`(`org.spongycastle.crypto.tls.DefaultTlsServer` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/DefaultTlsServer;.getKeyExchange:()Lorg/spongycastle/crypto/tls/TlsKeyExchange;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsEncryptionCredentials` `getRSAEncryptionCredentials`(`org.spongycastle.crypto.tls.DefaultTlsServer` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/DefaultTlsServer;.getRSAEncryptionCredentials:()Lorg/spongycastle/crypto/tls/TlsEncryptionCredentials;` @AccessFlag PROTECTED {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsSignerCredentials` `getRSASignerCredentials`(`org.spongycastle.crypto.tls.DefaultTlsServer` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/DefaultTlsServer;.getRSASignerCredentials:()Lorg/spongycastle/crypto/tls/TlsSignerCredentials;` @AccessFlag PROTECTED {

  # return;
}
