record `org.spongycastle.crypto.tls.HeartbeatMessage` @kind class @AccessFlag PUBLIC {
  `int` `org.spongycastle.crypto.tls.HeartbeatMessage.paddingLength` @AccessFlag PROTECTED;
  `byte`[] `org.spongycastle.crypto.tls.HeartbeatMessage.payload` @AccessFlag PROTECTED;
  `short` `org.spongycastle.crypto.tls.HeartbeatMessage.type` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.HeartbeatMessage` v2 @kind this, `short` v3 , `byte`[] v4 @kind object, `int` v5 ) @signature `Lorg/spongycastle/crypto/tls/HeartbeatMessage;.<init>:(S[BI)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.crypto.tls.HeartbeatMessage` `parse`(`java.io.InputStream` v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/HeartbeatMessage;.parse:(Ljava/io/InputStream;)Lorg/spongycastle/crypto/tls/HeartbeatMessage;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `encode`(`org.spongycastle.crypto.tls.HeartbeatMessage` v1 @kind this, `org.spongycastle.crypto.tls.TlsContext` v2 @kind object, `java.io.OutputStream` v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/HeartbeatMessage;.encode:(Lorg/spongycastle/crypto/tls/TlsContext;Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {

  # return;
}
