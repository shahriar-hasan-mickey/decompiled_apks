record `org.spongycastle.crypto.tls.TlsBlockCipher` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.tls.TlsCipher` @kind interface {
  `org.spongycastle.crypto.tls.TlsContext` `org.spongycastle.crypto.tls.TlsBlockCipher.context` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.BlockCipher` `org.spongycastle.crypto.tls.TlsBlockCipher.decryptCipher` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.BlockCipher` `org.spongycastle.crypto.tls.TlsBlockCipher.encryptCipher` @AccessFlag PROTECTED;
  `boolean` `org.spongycastle.crypto.tls.TlsBlockCipher.encryptThenMAC` @AccessFlag PROTECTED;
  `byte`[] `org.spongycastle.crypto.tls.TlsBlockCipher.randomData` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.tls.TlsMac` `org.spongycastle.crypto.tls.TlsBlockCipher.readMac` @AccessFlag PROTECTED;
  `boolean` `org.spongycastle.crypto.tls.TlsBlockCipher.useExplicitIV` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.tls.TlsMac` `org.spongycastle.crypto.tls.TlsBlockCipher.writeMac` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.TlsBlockCipher` v17 @kind this, `org.spongycastle.crypto.tls.TlsContext` v18 @kind object, `org.spongycastle.crypto.BlockCipher` v19 @kind object, `org.spongycastle.crypto.BlockCipher` v20 @kind object, `org.spongycastle.crypto.Digest` v21 @kind object, `org.spongycastle.crypto.Digest` v22 @kind object, `int` v23 ) @signature `Lorg/spongycastle/crypto/tls/TlsBlockCipher;.<init>:(Lorg/spongycastle/crypto/tls/TlsContext;Lorg/spongycastle/crypto/BlockCipher;Lorg/spongycastle/crypto/BlockCipher;Lorg/spongycastle/crypto/Digest;Lorg/spongycastle/crypto/Digest;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `checkPaddingConstantTime`(`org.spongycastle.crypto.tls.TlsBlockCipher` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 , `int` v8 , `int` v9 ) @signature `Lorg/spongycastle/crypto/tls/TlsBlockCipher;.checkPaddingConstantTime:([BIIII)I` @AccessFlag PROTECTED {

  # return;
}
procedure `int` `chooseExtraPadBlocks`(`org.spongycastle.crypto.tls.TlsBlockCipher` v0 @kind this, `java.security.SecureRandom` v1 @kind object, `int` v2 ) @signature `Lorg/spongycastle/crypto/tls/TlsBlockCipher;.chooseExtraPadBlocks:(Ljava/security/SecureRandom;I)I` @AccessFlag PROTECTED {

  # return;
}
procedure `byte`[] `decodeCiphertext`(`org.spongycastle.crypto.tls.TlsBlockCipher` v17 @kind this, `long` v18 , `short` v20 , `byte`[] v21 @kind object, `int` v22 , `int` v23 ) @signature `Lorg/spongycastle/crypto/tls/TlsBlockCipher;.decodeCiphertext:(JS[BII)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `encodePlaintext`(`org.spongycastle.crypto.tls.TlsBlockCipher` v17 @kind this, `long` v18 , `short` v20 , `byte`[] v21 @kind object, `int` v22 , `int` v23 ) @signature `Lorg/spongycastle/crypto/tls/TlsBlockCipher;.encodePlaintext:(JS[BII)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getPlaintextLimit`(`org.spongycastle.crypto.tls.TlsBlockCipher` v3 @kind this, `int` v4 ) @signature `Lorg/spongycastle/crypto/tls/TlsBlockCipher;.getPlaintextLimit:(I)I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsMac` `getReadMac`(`org.spongycastle.crypto.tls.TlsBlockCipher` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/TlsBlockCipher;.getReadMac:()Lorg/spongycastle/crypto/tls/TlsMac;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsMac` `getWriteMac`(`org.spongycastle.crypto.tls.TlsBlockCipher` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/TlsBlockCipher;.getWriteMac:()Lorg/spongycastle/crypto/tls/TlsMac;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `lowestBitSet`(`org.spongycastle.crypto.tls.TlsBlockCipher` v2 @kind this, `int` v3 ) @signature `Lorg/spongycastle/crypto/tls/TlsBlockCipher;.lowestBitSet:(I)I` @AccessFlag PROTECTED {

  # return;
}
