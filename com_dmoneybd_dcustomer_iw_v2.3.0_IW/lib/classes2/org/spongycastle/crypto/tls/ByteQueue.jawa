record `org.spongycastle.crypto.tls.ByteQueue` @kind class @AccessFlag PUBLIC {
  `int` `org.spongycastle.crypto.tls.ByteQueue.available` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.tls.ByteQueue.databuf` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.tls.ByteQueue.skipped` @AccessFlag PRIVATE;
}
global `int` `@@org.spongycastle.crypto.tls.ByteQueue.DEFAULT_CAPACITY` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.spongycastle.crypto.tls.ByteQueue` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/ByteQueue;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.ByteQueue` v1 @kind this, `int` v2 ) @signature `Lorg/spongycastle/crypto/tls/ByteQueue;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `nextTwoPow`(`int` v1 ) @signature `Lorg/spongycastle/crypto/tls/ByteQueue;.nextTwoPow:(I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `addData`(`org.spongycastle.crypto.tls.ByteQueue` v5 @kind this, `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lorg/spongycastle/crypto/tls/ByteQueue;.addData:([BII)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `available`(`org.spongycastle.crypto.tls.ByteQueue` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/ByteQueue;.available:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `read`(`org.spongycastle.crypto.tls.ByteQueue` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 , `int` v6 ) @signature `Lorg/spongycastle/crypto/tls/ByteQueue;.read:([BIII)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `removeData`(`org.spongycastle.crypto.tls.ByteQueue` v3 @kind this, `int` v4 ) @signature `Lorg/spongycastle/crypto/tls/ByteQueue;.removeData:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `removeData`(`org.spongycastle.crypto.tls.ByteQueue` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 , `int` v4 ) @signature `Lorg/spongycastle/crypto/tls/ByteQueue;.removeData:([BIII)V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `removeData`(`org.spongycastle.crypto.tls.ByteQueue` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lorg/spongycastle/crypto/tls/ByteQueue;.removeData:(II)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `size`(`org.spongycastle.crypto.tls.ByteQueue` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/ByteQueue;.size:()I` @AccessFlag PUBLIC {

  # return;
}
