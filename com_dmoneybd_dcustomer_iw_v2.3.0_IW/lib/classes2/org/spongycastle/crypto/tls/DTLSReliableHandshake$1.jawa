record `org.spongycastle.crypto.tls.DTLSReliableHandshake$1` @kind class @AccessFlag  extends `org.spongycastle.crypto.tls.DTLSHandshakeRetransmit` @kind interface {
  `org.spongycastle.crypto.tls.DTLSReliableHandshake` `org.spongycastle.crypto.tls.DTLSReliableHandshake$1.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.DTLSReliableHandshake$1` v0 @kind this, `org.spongycastle.crypto.tls.DTLSReliableHandshake` v1 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSReliableHandshake$1;.<init>:(Lorg/spongycastle/crypto/tls/DTLSReliableHandshake;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `receivedHandshakeRecord`(`org.spongycastle.crypto.tls.DTLSReliableHandshake$1` v9 @kind this, `int` v10 , `byte`[] v11 @kind object, `int` v12 , `int` v13 ) @signature `Lorg/spongycastle/crypto/tls/DTLSReliableHandshake$1;.receivedHandshakeRecord:(I[BII)V` @AccessFlag PUBLIC {

  # return;
}
