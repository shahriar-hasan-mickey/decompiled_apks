record `org.spongycastle.crypto.tls.CertificateRequest` @kind class @AccessFlag PUBLIC {
  `java.util.Vector` `org.spongycastle.crypto.tls.CertificateRequest.certificateAuthorities` @AccessFlag PROTECTED;
  `short`[] `org.spongycastle.crypto.tls.CertificateRequest.certificateTypes` @AccessFlag PROTECTED;
  `java.util.Vector` `org.spongycastle.crypto.tls.CertificateRequest.supportedSignatureAlgorithms` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.CertificateRequest` v0 @kind this, `short`[] v1 @kind object, `java.util.Vector` v2 @kind object, `java.util.Vector` v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/CertificateRequest;.<init>:([SLjava/util/Vector;Ljava/util/Vector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.crypto.tls.CertificateRequest` `parse`(`org.spongycastle.crypto.tls.TlsContext` v5 @kind object, `java.io.InputStream` v6 @kind object) @signature `Lorg/spongycastle/crypto/tls/CertificateRequest;.parse:(Lorg/spongycastle/crypto/tls/TlsContext;Ljava/io/InputStream;)Lorg/spongycastle/crypto/tls/CertificateRequest;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `encode`(`org.spongycastle.crypto.tls.CertificateRequest` v6 @kind this, `java.io.OutputStream` v7 @kind object) @signature `Lorg/spongycastle/crypto/tls/CertificateRequest;.encode:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Vector` `getCertificateAuthorities`(`org.spongycastle.crypto.tls.CertificateRequest` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/CertificateRequest;.getCertificateAuthorities:()Ljava/util/Vector;` @AccessFlag PUBLIC {

  # return;
}
procedure `short`[] `getCertificateTypes`(`org.spongycastle.crypto.tls.CertificateRequest` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/CertificateRequest;.getCertificateTypes:()[S` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Vector` `getSupportedSignatureAlgorithms`(`org.spongycastle.crypto.tls.CertificateRequest` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/CertificateRequest;.getSupportedSignatureAlgorithms:()Ljava/util/Vector;` @AccessFlag PUBLIC {

  # return;
}
