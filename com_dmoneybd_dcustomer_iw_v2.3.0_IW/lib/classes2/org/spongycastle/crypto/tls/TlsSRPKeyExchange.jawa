record `org.spongycastle.crypto.tls.TlsSRPKeyExchange` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.tls.AbstractTlsKeyExchange` @kind class {
  `org.spongycastle.crypto.tls.TlsSRPGroupVerifier` `org.spongycastle.crypto.tls.TlsSRPKeyExchange.groupVerifier` @AccessFlag PROTECTED;
  `byte`[] `org.spongycastle.crypto.tls.TlsSRPKeyExchange.identity` @AccessFlag PROTECTED;
  `byte`[] `org.spongycastle.crypto.tls.TlsSRPKeyExchange.password` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.tls.TlsSignerCredentials` `org.spongycastle.crypto.tls.TlsSRPKeyExchange.serverCredentials` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.params.AsymmetricKeyParameter` `org.spongycastle.crypto.tls.TlsSRPKeyExchange.serverPublicKey` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.agreement.srp.SRP6Client` `org.spongycastle.crypto.tls.TlsSRPKeyExchange.srpClient` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.params.SRP6GroupParameters` `org.spongycastle.crypto.tls.TlsSRPKeyExchange.srpGroup` @AccessFlag PROTECTED;
  `java.math.BigInteger` `org.spongycastle.crypto.tls.TlsSRPKeyExchange.srpPeerCredentials` @AccessFlag PROTECTED;
  `byte`[] `org.spongycastle.crypto.tls.TlsSRPKeyExchange.srpSalt` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.agreement.srp.SRP6Server` `org.spongycastle.crypto.tls.TlsSRPKeyExchange.srpServer` @AccessFlag PROTECTED;
  `java.math.BigInteger` `org.spongycastle.crypto.tls.TlsSRPKeyExchange.srpVerifier` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.tls.TlsSigner` `org.spongycastle.crypto.tls.TlsSRPKeyExchange.tlsSigner` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.TlsSRPKeyExchange` v0 @kind this, `int` v1 , `java.util.Vector` v2 @kind object, `org.spongycastle.crypto.tls.TlsSRPGroupVerifier` v3 @kind object, `byte`[] v4 @kind object, `byte`[] v5 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsSRPKeyExchange;.<init>:(ILjava/util/Vector;Lorg/spongycastle/crypto/tls/TlsSRPGroupVerifier;[B[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.TlsSRPKeyExchange` v0 @kind this, `int` v1 , `java.util.Vector` v2 @kind object, `byte`[] v3 @kind object, `org.spongycastle.crypto.tls.TlsSRPLoginParameters` v4 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsSRPKeyExchange;.<init>:(ILjava/util/Vector;[BLorg/spongycastle/crypto/tls/TlsSRPLoginParameters;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.TlsSRPKeyExchange` v6 @kind this, `int` v7 , `java.util.Vector` v8 @kind object, `byte`[] v9 @kind object, `byte`[] v10 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsSRPKeyExchange;.<init>:(ILjava/util/Vector;[B[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsSigner` `createSigner`(`int` v1 ) @signature `Lorg/spongycastle/crypto/tls/TlsSRPKeyExchange;.createSigner:(I)Lorg/spongycastle/crypto/tls/TlsSigner;` @AccessFlag PROTECTED_STATIC {

  # return;
}
procedure `void` `generateClientKeyExchange`(`org.spongycastle.crypto.tls.TlsSRPKeyExchange` v4 @kind this, `java.io.OutputStream` v5 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsSRPKeyExchange;.generateClientKeyExchange:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `generatePremasterSecret`(`org.spongycastle.crypto.tls.TlsSRPKeyExchange` v3 @kind this) @signature `Lorg/spongycastle/crypto/tls/TlsSRPKeyExchange;.generatePremasterSecret:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `generateServerKeyExchange`(`org.spongycastle.crypto.tls.TlsSRPKeyExchange` v7 @kind this) @signature `Lorg/spongycastle/crypto/tls/TlsSRPKeyExchange;.generateServerKeyExchange:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.tls.TlsSRPKeyExchange` v1 @kind this, `org.spongycastle.crypto.tls.TlsContext` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsSRPKeyExchange;.init:(Lorg/spongycastle/crypto/tls/TlsContext;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.crypto.Signer` `initVerifyer`(`org.spongycastle.crypto.tls.TlsSRPKeyExchange` v2 @kind this, `org.spongycastle.crypto.tls.TlsSigner` v3 @kind object, `org.spongycastle.crypto.tls.SignatureAndHashAlgorithm` v4 @kind object, `org.spongycastle.crypto.tls.SecurityParameters` v5 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsSRPKeyExchange;.initVerifyer:(Lorg/spongycastle/crypto/tls/TlsSigner;Lorg/spongycastle/crypto/tls/SignatureAndHashAlgorithm;Lorg/spongycastle/crypto/tls/SecurityParameters;)Lorg/spongycastle/crypto/Signer;` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `processClientCredentials`(`org.spongycastle.crypto.tls.TlsSRPKeyExchange` v1 @kind this, `org.spongycastle.crypto.tls.TlsCredentials` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsSRPKeyExchange;.processClientCredentials:(Lorg/spongycastle/crypto/tls/TlsCredentials;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processClientKeyExchange`(`org.spongycastle.crypto.tls.TlsSRPKeyExchange` v2 @kind this, `java.io.InputStream` v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsSRPKeyExchange;.processClientKeyExchange:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processServerCertificate`(`org.spongycastle.crypto.tls.TlsSRPKeyExchange` v3 @kind this, `org.spongycastle.crypto.tls.Certificate` v4 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsSRPKeyExchange;.processServerCertificate:(Lorg/spongycastle/crypto/tls/Certificate;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processServerCredentials`(`org.spongycastle.crypto.tls.TlsSRPKeyExchange` v2 @kind this, `org.spongycastle.crypto.tls.TlsCredentials` v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsSRPKeyExchange;.processServerCredentials:(Lorg/spongycastle/crypto/tls/TlsCredentials;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processServerKeyExchange`(`org.spongycastle.crypto.tls.TlsSRPKeyExchange` v5 @kind this, `java.io.InputStream` v6 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsSRPKeyExchange;.processServerKeyExchange:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `requiresServerKeyExchange`(`org.spongycastle.crypto.tls.TlsSRPKeyExchange` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/TlsSRPKeyExchange;.requiresServerKeyExchange:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `skipServerCredentials`(`org.spongycastle.crypto.tls.TlsSRPKeyExchange` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/TlsSRPKeyExchange;.skipServerCredentials:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `validateCertificateRequest`(`org.spongycastle.crypto.tls.TlsSRPKeyExchange` v1 @kind this, `org.spongycastle.crypto.tls.CertificateRequest` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsSRPKeyExchange;.validateCertificateRequest:(Lorg/spongycastle/crypto/tls/CertificateRequest;)V` @AccessFlag PUBLIC {

  # return;
}
