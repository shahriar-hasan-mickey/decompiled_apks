record `org.spongycastle.crypto.tls.DigitallySigned` @kind class @AccessFlag PUBLIC {
  `org.spongycastle.crypto.tls.SignatureAndHashAlgorithm` `org.spongycastle.crypto.tls.DigitallySigned.algorithm` @AccessFlag PROTECTED;
  `byte`[] `org.spongycastle.crypto.tls.DigitallySigned.signature` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.DigitallySigned` v0 @kind this, `org.spongycastle.crypto.tls.SignatureAndHashAlgorithm` v1 @kind object, `byte`[] v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/DigitallySigned;.<init>:(Lorg/spongycastle/crypto/tls/SignatureAndHashAlgorithm;[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.crypto.tls.DigitallySigned` `parse`(`org.spongycastle.crypto.tls.TlsContext` v1 @kind object, `java.io.InputStream` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/DigitallySigned;.parse:(Lorg/spongycastle/crypto/tls/TlsContext;Ljava/io/InputStream;)Lorg/spongycastle/crypto/tls/DigitallySigned;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `encode`(`org.spongycastle.crypto.tls.DigitallySigned` v1 @kind this, `java.io.OutputStream` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/DigitallySigned;.encode:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.crypto.tls.SignatureAndHashAlgorithm` `getAlgorithm`(`org.spongycastle.crypto.tls.DigitallySigned` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/DigitallySigned;.getAlgorithm:()Lorg/spongycastle/crypto/tls/SignatureAndHashAlgorithm;` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getSignature`(`org.spongycastle.crypto.tls.DigitallySigned` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/DigitallySigned;.getSignature:()[B` @AccessFlag PUBLIC {

  # return;
}
