record `org.spongycastle.crypto.tls.TlsServer` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `org.spongycastle.crypto.tls.TlsPeer` @kind interface {
}
procedure `org.spongycastle.crypto.tls.CertificateRequest` `getCertificateRequest`() @signature `Lorg/spongycastle/crypto/tls/TlsServer;.getCertificateRequest:()Lorg/spongycastle/crypto/tls/CertificateRequest;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.spongycastle.crypto.tls.CertificateStatus` `getCertificateStatus`() @signature `Lorg/spongycastle/crypto/tls/TlsServer;.getCertificateStatus:()Lorg/spongycastle/crypto/tls/CertificateStatus;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsCredentials` `getCredentials`() @signature `Lorg/spongycastle/crypto/tls/TlsServer;.getCredentials:()Lorg/spongycastle/crypto/tls/TlsCredentials;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsKeyExchange` `getKeyExchange`() @signature `Lorg/spongycastle/crypto/tls/TlsServer;.getKeyExchange:()Lorg/spongycastle/crypto/tls/TlsKeyExchange;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.spongycastle.crypto.tls.NewSessionTicket` `getNewSessionTicket`() @signature `Lorg/spongycastle/crypto/tls/TlsServer;.getNewSessionTicket:()Lorg/spongycastle/crypto/tls/NewSessionTicket;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getSelectedCipherSuite`() @signature `Lorg/spongycastle/crypto/tls/TlsServer;.getSelectedCipherSuite:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `short` `getSelectedCompressionMethod`() @signature `Lorg/spongycastle/crypto/tls/TlsServer;.getSelectedCompressionMethod:()S` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Hashtable` `getServerExtensions`() @signature `Lorg/spongycastle/crypto/tls/TlsServer;.getServerExtensions:()Ljava/util/Hashtable;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Vector` `getServerSupplementalData`() @signature `Lorg/spongycastle/crypto/tls/TlsServer;.getServerSupplementalData:()Ljava/util/Vector;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.spongycastle.crypto.tls.ProtocolVersion` `getServerVersion`() @signature `Lorg/spongycastle/crypto/tls/TlsServer;.getServerVersion:()Lorg/spongycastle/crypto/tls/ProtocolVersion;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.tls.TlsServerContext` v0 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsServer;.init:(Lorg/spongycastle/crypto/tls/TlsServerContext;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `notifyClientCertificate`(`org.spongycastle.crypto.tls.Certificate` v0 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsServer;.notifyClientCertificate:(Lorg/spongycastle/crypto/tls/Certificate;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `notifyClientVersion`(`org.spongycastle.crypto.tls.ProtocolVersion` v0 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsServer;.notifyClientVersion:(Lorg/spongycastle/crypto/tls/ProtocolVersion;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `notifyFallback`(`boolean` v0 ) @signature `Lorg/spongycastle/crypto/tls/TlsServer;.notifyFallback:(Z)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `notifyOfferedCipherSuites`(`int`[] v0 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsServer;.notifyOfferedCipherSuites:([I)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `notifyOfferedCompressionMethods`(`short`[] v0 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsServer;.notifyOfferedCompressionMethods:([S)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `processClientExtensions`(`java.util.Hashtable` v0 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsServer;.processClientExtensions:(Ljava/util/Hashtable;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `processClientSupplementalData`(`java.util.Vector` v0 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsServer;.processClientSupplementalData:(Ljava/util/Vector;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
