record `org.spongycastle.crypto.agreement.kdf.DHKDFParameters` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.DerivationParameters` @kind interface {
  `org.spongycastle.asn1.ASN1ObjectIdentifier` `org.spongycastle.crypto.agreement.kdf.DHKDFParameters.algorithm` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.agreement.kdf.DHKDFParameters.extraInfo` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.agreement.kdf.DHKDFParameters.keySize` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.agreement.kdf.DHKDFParameters.z` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.crypto.agreement.kdf.DHKDFParameters` v1 @kind this, `org.spongycastle.asn1.ASN1ObjectIdentifier` v2 @kind object, `int` v3 , `byte`[] v4 @kind object) @signature `Lorg/spongycastle/crypto/agreement/kdf/DHKDFParameters;.<init>:(Lorg/spongycastle/asn1/ASN1ObjectIdentifier;I[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.agreement.kdf.DHKDFParameters` v0 @kind this, `org.spongycastle.asn1.ASN1ObjectIdentifier` v1 @kind object, `int` v2 , `byte`[] v3 @kind object, `byte`[] v4 @kind object) @signature `Lorg/spongycastle/crypto/agreement/kdf/DHKDFParameters;.<init>:(Lorg/spongycastle/asn1/ASN1ObjectIdentifier;I[B[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.asn1.ASN1ObjectIdentifier` `getAlgorithm`(`org.spongycastle.crypto.agreement.kdf.DHKDFParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/agreement/kdf/DHKDFParameters;.getAlgorithm:()Lorg/spongycastle/asn1/ASN1ObjectIdentifier;` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getExtraInfo`(`org.spongycastle.crypto.agreement.kdf.DHKDFParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/agreement/kdf/DHKDFParameters;.getExtraInfo:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getKeySize`(`org.spongycastle.crypto.agreement.kdf.DHKDFParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/agreement/kdf/DHKDFParameters;.getKeySize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getZ`(`org.spongycastle.crypto.agreement.kdf.DHKDFParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/agreement/kdf/DHKDFParameters;.getZ:()[B` @AccessFlag PUBLIC {

  # return;
}
