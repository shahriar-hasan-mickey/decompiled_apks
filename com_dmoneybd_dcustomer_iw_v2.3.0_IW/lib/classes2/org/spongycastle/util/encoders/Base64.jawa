record `org.spongycastle.util.encoders.Base64` @kind class @AccessFlag PUBLIC {
}
global `org.spongycastle.util.encoders.Encoder` `@@org.spongycastle.util.encoders.Base64.encoder` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/util/encoders/Base64;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.util.encoders.Base64` v0 @kind this) @signature `Lorg/spongycastle/util/encoders/Base64;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `decode`(`java.lang.String` v1 @kind object, `java.io.OutputStream` v2 @kind object) @signature `Lorg/spongycastle/util/encoders/Base64;.decode:(Ljava/lang/String;Ljava/io/OutputStream;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `decode`(`java.lang.String` v3 @kind object) @signature `Lorg/spongycastle/util/encoders/Base64;.decode:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `decode`(`byte`[] v4 @kind object) @signature `Lorg/spongycastle/util/encoders/Base64;.decode:([B)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `encode`(`byte`[] v1 @kind object, `int` v2 , `int` v3 , `java.io.OutputStream` v4 @kind object) @signature `Lorg/spongycastle/util/encoders/Base64;.encode:([BIILjava/io/OutputStream;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `encode`(`byte`[] v3 @kind object, `java.io.OutputStream` v4 @kind object) @signature `Lorg/spongycastle/util/encoders/Base64;.encode:([BLjava/io/OutputStream;)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `encode`(`byte`[] v2 @kind object) @signature `Lorg/spongycastle/util/encoders/Base64;.encode:([B)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `encode`(`byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/spongycastle/util/encoders/Base64;.encode:([BII)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toBase64String`(`byte`[] v2 @kind object) @signature `Lorg/spongycastle/util/encoders/Base64;.toBase64String:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toBase64String`(`byte`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Lorg/spongycastle/util/encoders/Base64;.toBase64String:([BII)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
