record `org.spongycastle.util.test.FixedSecureRandom` @kind class @AccessFlag PUBLIC extends `java.security.SecureRandom` @kind class {
  `byte`[] `org.spongycastle.util.test.FixedSecureRandom._data` @AccessFlag PRIVATE;
  `int` `org.spongycastle.util.test.FixedSecureRandom._index` @AccessFlag PRIVATE;
  `int` `org.spongycastle.util.test.FixedSecureRandom._intPad` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.util.test.FixedSecureRandom` v2 @kind this, `boolean` v3 , `byte`[] v4 @kind object) @signature `Lorg/spongycastle/util/test/FixedSecureRandom;.<init>:(Z[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.util.test.FixedSecureRandom` v3 @kind this, `boolean` v4 , `byte`[][] v5 @kind object) @signature `Lorg/spongycastle/util/test/FixedSecureRandom;.<init>:(Z[[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.util.test.FixedSecureRandom` v2 @kind this, `byte`[] v3 @kind object) @signature `Lorg/spongycastle/util/test/FixedSecureRandom;.<init>:([B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.util.test.FixedSecureRandom` v1 @kind this, `byte`[][] v2 @kind object) @signature `Lorg/spongycastle/util/test/FixedSecureRandom;.<init>:([[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `nextValue`(`org.spongycastle.util.test.FixedSecureRandom` v3 @kind this) @signature `Lorg/spongycastle/util/test/FixedSecureRandom;.nextValue:()I` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `isExhausted`(`org.spongycastle.util.test.FixedSecureRandom` v2 @kind this) @signature `Lorg/spongycastle/util/test/FixedSecureRandom;.isExhausted:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `nextBytes`(`org.spongycastle.util.test.FixedSecureRandom` v4 @kind this, `byte`[] v5 @kind object) @signature `Lorg/spongycastle/util/test/FixedSecureRandom;.nextBytes:([B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `nextInt`(`org.spongycastle.util.test.FixedSecureRandom` v4 @kind this) @signature `Lorg/spongycastle/util/test/FixedSecureRandom;.nextInt:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `nextLong`(`org.spongycastle.util.test.FixedSecureRandom` v5 @kind this) @signature `Lorg/spongycastle/util/test/FixedSecureRandom;.nextLong:()J` @AccessFlag PUBLIC {

  # return;
}
