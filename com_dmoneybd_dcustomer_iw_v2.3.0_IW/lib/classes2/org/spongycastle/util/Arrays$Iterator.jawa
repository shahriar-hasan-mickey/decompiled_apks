record `org.spongycastle.util.Arrays$Iterator` @kind class @AccessFlag PUBLIC extends `java.util.Iterator` @kind interface {
  `java.lang.Object`[] `org.spongycastle.util.Arrays$Iterator.dataArray` @AccessFlag PRIVATE_FINAL;
  `int` `org.spongycastle.util.Arrays$Iterator.position` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.util.Arrays$Iterator` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lorg/spongycastle/util/Arrays$Iterator;.<init>:([Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `hasNext`(`org.spongycastle.util.Arrays$Iterator` v2 @kind this) @signature `Lorg/spongycastle/util/Arrays$Iterator;.hasNext:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `next`(`org.spongycastle.util.Arrays$Iterator` v3 @kind this) @signature `Lorg/spongycastle/util/Arrays$Iterator;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `remove`(`org.spongycastle.util.Arrays$Iterator` v2 @kind this) @signature `Lorg/spongycastle/util/Arrays$Iterator;.remove:()V` @AccessFlag PUBLIC {

  # return;
}
