record `org.apache.commons.lang3.mutable.MutableDouble` @kind class @AccessFlag PUBLIC extends `java.lang.Number` @kind class, `java.lang.Comparable` @kind interface, `org.apache.commons.lang3.mutable.Mutable` @kind interface {
  `double` `org.apache.commons.lang3.mutable.MutableDouble.value` @AccessFlag PRIVATE;
}
global `long` `@@org.apache.commons.lang3.mutable.MutableDouble.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.apache.commons.lang3.mutable.MutableDouble` v0 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.mutable.MutableDouble` v0 @kind this, `double` v1 ) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.<init>:(D)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.mutable.MutableDouble` v2 @kind this, `java.lang.Number` v3 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.<init>:(Ljava/lang/Number;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.mutable.MutableDouble` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `add`(`org.apache.commons.lang3.mutable.MutableDouble` v2 @kind this, `double` v3 ) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.add:(D)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `add`(`org.apache.commons.lang3.mutable.MutableDouble` v4 @kind this, `java.lang.Number` v5 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.add:(Ljava/lang/Number;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `addAndGet`(`org.apache.commons.lang3.mutable.MutableDouble` v2 @kind this, `double` v3 ) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.addAndGet:(D)D` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `addAndGet`(`org.apache.commons.lang3.mutable.MutableDouble` v4 @kind this, `java.lang.Number` v5 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.addAndGet:(Ljava/lang/Number;)D` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `compareTo`(`org.apache.commons.lang3.mutable.MutableDouble` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `compareTo`(`org.apache.commons.lang3.mutable.MutableDouble` v4 @kind this, `org.apache.commons.lang3.mutable.MutableDouble` v5 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.compareTo:(Lorg/apache/commons/lang3/mutable/MutableDouble;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `decrement`(`org.apache.commons.lang3.mutable.MutableDouble` v4 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.decrement:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `decrementAndGet`(`org.apache.commons.lang3.mutable.MutableDouble` v4 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.decrementAndGet:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `doubleValue`(`org.apache.commons.lang3.mutable.MutableDouble` v2 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.doubleValue:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`org.apache.commons.lang3.mutable.MutableDouble` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `float` `floatValue`(`org.apache.commons.lang3.mutable.MutableDouble` v2 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.floatValue:()F` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `getAndAdd`(`org.apache.commons.lang3.mutable.MutableDouble` v2 @kind this, `double` v3 ) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.getAndAdd:(D)D` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `getAndAdd`(`org.apache.commons.lang3.mutable.MutableDouble` v4 @kind this, `java.lang.Number` v5 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.getAndAdd:(Ljava/lang/Number;)D` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `getAndDecrement`(`org.apache.commons.lang3.mutable.MutableDouble` v4 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.getAndDecrement:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `getAndIncrement`(`org.apache.commons.lang3.mutable.MutableDouble` v4 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.getAndIncrement:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Double` `getValue`(`org.apache.commons.lang3.mutable.MutableDouble` v2 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.getValue:()Ljava/lang/Double;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `getValue`(`org.apache.commons.lang3.mutable.MutableDouble` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `hashCode`(`org.apache.commons.lang3.mutable.MutableDouble` v4 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `increment`(`org.apache.commons.lang3.mutable.MutableDouble` v4 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.increment:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `incrementAndGet`(`org.apache.commons.lang3.mutable.MutableDouble` v4 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.incrementAndGet:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `intValue`(`org.apache.commons.lang3.mutable.MutableDouble` v2 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.intValue:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isInfinite`(`org.apache.commons.lang3.mutable.MutableDouble` v2 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.isInfinite:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isNaN`(`org.apache.commons.lang3.mutable.MutableDouble` v2 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.isNaN:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `longValue`(`org.apache.commons.lang3.mutable.MutableDouble` v2 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.longValue:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setValue`(`org.apache.commons.lang3.mutable.MutableDouble` v0 @kind this, `double` v1 ) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.setValue:(D)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setValue`(`org.apache.commons.lang3.mutable.MutableDouble` v2 @kind this, `java.lang.Number` v3 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.setValue:(Ljava/lang/Number;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setValue`(`org.apache.commons.lang3.mutable.MutableDouble` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.setValue:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `subtract`(`org.apache.commons.lang3.mutable.MutableDouble` v2 @kind this, `double` v3 ) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.subtract:(D)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `subtract`(`org.apache.commons.lang3.mutable.MutableDouble` v4 @kind this, `java.lang.Number` v5 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.subtract:(Ljava/lang/Number;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Double` `toDouble`(`org.apache.commons.lang3.mutable.MutableDouble` v2 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.toDouble:()Ljava/lang/Double;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`org.apache.commons.lang3.mutable.MutableDouble` v2 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableDouble;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
