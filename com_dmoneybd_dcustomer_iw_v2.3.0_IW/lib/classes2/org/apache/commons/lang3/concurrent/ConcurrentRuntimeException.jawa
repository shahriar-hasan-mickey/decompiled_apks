record `org.apache.commons.lang3.concurrent.ConcurrentRuntimeException` @kind class @AccessFlag PUBLIC extends `java.lang.RuntimeException` @kind class {
}
global `long` `@@org.apache.commons.lang3.concurrent.ConcurrentRuntimeException.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.apache.commons.lang3.concurrent.ConcurrentRuntimeException` v0 @kind this) @signature `Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.concurrent.ConcurrentRuntimeException` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.concurrent.ConcurrentRuntimeException` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;.<init>:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
