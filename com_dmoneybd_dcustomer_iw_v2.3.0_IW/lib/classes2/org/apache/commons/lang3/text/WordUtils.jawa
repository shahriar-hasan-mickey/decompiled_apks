record `org.apache.commons.lang3.text.WordUtils` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`org.apache.commons.lang3.text.WordUtils` v0 @kind this) @signature `Lorg/apache/commons/lang3/text/WordUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.String` `capitalize`(`java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/text/WordUtils;.capitalize:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `capitalize`(`java.lang.String` v6 @kind object, `char`[] v7 @kind object) @signature `Lorg/apache/commons/lang3/text/WordUtils;.capitalize:(Ljava/lang/String;[C)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `capitalizeFully`(`java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/text/WordUtils;.capitalizeFully:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `capitalizeFully`(`java.lang.String` v2 @kind object, `char`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/text/WordUtils;.capitalizeFully:(Ljava/lang/String;[C)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `containsAllWords`(`java.lang.CharSequence` v6 @kind object, `java.lang.CharSequence`[] v7 @kind object) @signature `Lorg/apache/commons/lang3/text/WordUtils;.containsAllWords:(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `initials`(`java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/text/WordUtils;.initials:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `initials`(`java.lang.String` v9 @kind object, `char`[] v10 @kind object) @signature `Lorg/apache/commons/lang3/text/WordUtils;.initials:(Ljava/lang/String;[C)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `isDelimiter`(`char` v4 , `char`[] v5 @kind object) @signature `Lorg/apache/commons/lang3/text/WordUtils;.isDelimiter:(C[C)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.String` `swapCase`(`java.lang.String` v5 @kind object) @signature `Lorg/apache/commons/lang3/text/WordUtils;.swapCase:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `uncapitalize`(`java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/text/WordUtils;.uncapitalize:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `uncapitalize`(`java.lang.String` v6 @kind object, `char`[] v7 @kind object) @signature `Lorg/apache/commons/lang3/text/WordUtils;.uncapitalize:(Ljava/lang/String;[C)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `wrap`(`java.lang.String` v2 @kind object, `int` v3 ) @signature `Lorg/apache/commons/lang3/text/WordUtils;.wrap:(Ljava/lang/String;I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `wrap`(`java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object, `boolean` v4 ) @signature `Lorg/apache/commons/lang3/text/WordUtils;.wrap:(Ljava/lang/String;ILjava/lang/String;Z)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `wrap`(`java.lang.String` v7 @kind object, `int` v8 , `java.lang.String` v9 @kind object, `boolean` v10 , `java.lang.String` v11 @kind object) @signature `Lorg/apache/commons/lang3/text/WordUtils;.wrap:(Ljava/lang/String;ILjava/lang/String;ZLjava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
