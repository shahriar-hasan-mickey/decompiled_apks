record `org.apache.commons.lang3.reflect.MemberUtils` @kind class @AccessFlag ABSTRACT {
}
global `int` `@@org.apache.commons.lang3.reflect.MemberUtils.ACCESS_TEST` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Class`[] `@@org.apache.commons.lang3.reflect.MemberUtils.ORDERED_PRIMITIVE_TYPES` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/apache/commons/lang3/reflect/MemberUtils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.reflect.MemberUtils` v0 @kind this) @signature `Lorg/apache/commons/lang3/reflect/MemberUtils;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `int` `a`(`java.lang.reflect.Constructor` v0 @kind object, `java.lang.reflect.Constructor` v1 @kind object, `java.lang.Class`[] v2 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MemberUtils;.a:(Ljava/lang/reflect/Constructor;Ljava/lang/reflect/Constructor;[Ljava/lang/Class;)I` @AccessFlag STATIC {

  # return;
}
procedure `int` `b`(`java.lang.reflect.Method` v0 @kind object, `java.lang.reflect.Method` v1 @kind object, `java.lang.Class`[] v2 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MemberUtils;.b:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;[Ljava/lang/Class;)I` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `c`(`java.lang.reflect.Member` v1 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MemberUtils;.c:(Ljava/lang/reflect/Member;)Z` @AccessFlag STATIC {

  # return;
}
procedure `int` `compareParameterTypes`(`org.apache.commons.lang3.reflect.MemberUtils$Executable` v0 @kind object, `org.apache.commons.lang3.reflect.MemberUtils$Executable` v1 @kind object, `java.lang.Class`[] v2 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MemberUtils;.compareParameterTypes:(Lorg/apache/commons/lang3/reflect/MemberUtils$Executable;Lorg/apache/commons/lang3/reflect/MemberUtils$Executable;[Ljava/lang/Class;)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `d`(`java.lang.reflect.Constructor` v0 @kind object, `java.lang.Class`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MemberUtils;.d:(Ljava/lang/reflect/Constructor;[Ljava/lang/Class;)Z` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `e`(`java.lang.reflect.Method` v0 @kind object, `java.lang.Class`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MemberUtils;.e:(Ljava/lang/reflect/Method;[Ljava/lang/Class;)Z` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `f`(`int` v0 ) @signature `Lorg/apache/commons/lang3/reflect/MemberUtils;.f:(I)Z` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `g`(`java.lang.reflect.AccessibleObject` v3 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MemberUtils;.g:(Ljava/lang/reflect/AccessibleObject;)Z` @AccessFlag STATIC {

  # return;
}
procedure `float` `getObjectTransformationCost`(`java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MemberUtils;.getObjectTransformationCost:(Ljava/lang/Class;Ljava/lang/Class;)F` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `float` `getPrimitivePromotionCost`(`java.lang.Class` v5 @kind object, `java.lang.Class` v6 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MemberUtils;.getPrimitivePromotionCost:(Ljava/lang/Class;Ljava/lang/Class;)F` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `float` `getTotalTransformationCost`(`java.lang.Class`[] v10 @kind object, `org.apache.commons.lang3.reflect.MemberUtils$Executable` v11 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MemberUtils;.getTotalTransformationCost:([Ljava/lang/Class;Lorg/apache/commons/lang3/reflect/MemberUtils$Executable;)F` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `isMatchingExecutable`(`org.apache.commons.lang3.reflect.MemberUtils$Executable` v5 @kind object, `java.lang.Class`[] v6 @kind object) @signature `Lorg/apache/commons/lang3/reflect/MemberUtils;.isMatchingExecutable:(Lorg/apache/commons/lang3/reflect/MemberUtils$Executable;[Ljava/lang/Class;)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
