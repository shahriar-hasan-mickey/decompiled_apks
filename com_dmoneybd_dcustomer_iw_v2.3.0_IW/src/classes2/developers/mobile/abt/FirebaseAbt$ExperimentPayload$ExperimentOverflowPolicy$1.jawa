record `developers.mobile.abt.FirebaseAbt$ExperimentPayload$ExperimentOverflowPolicy$1` @kind class @AccessFlag  extends `com.google.protobuf.Internal$EnumLiteMap` @kind interface {
}
procedure `void` `<init>`(`developers.mobile.abt.FirebaseAbt$ExperimentPayload$ExperimentOverflowPolicy$1` v0 @kind this) @signature `Ldevelopers/mobile/abt/FirebaseAbt$ExperimentPayload$ExperimentOverflowPolicy$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2cd630.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2cd636.  return @kind void;
}
procedure `com.google.protobuf.Internal$EnumLite` `findValueByNumber`(`developers.mobile.abt.FirebaseAbt$ExperimentPayload$ExperimentOverflowPolicy$1` v0 @kind this, `int` v1 ) @signature `Ldevelopers/mobile/abt/FirebaseAbt$ExperimentPayload$ExperimentOverflowPolicy$1;.findValueByNumber:(I)Lcom/google/protobuf/Internal$EnumLite;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2cd5f8.  call temp:= `findValueByNumber`(v0, v1) @signature `Ldevelopers/mobile/abt/FirebaseAbt$ExperimentPayload$ExperimentOverflowPolicy$1;.findValueByNumber:(I)Ldevelopers/mobile/abt/FirebaseAbt$ExperimentPayload$ExperimentOverflowPolicy;` @kind virtual;
  #L2cd5fe.  v1:= temp @kind object;
  #L2cd600.  return v1 @kind object;
}
procedure `developers.mobile.abt.FirebaseAbt$ExperimentPayload$ExperimentOverflowPolicy` `findValueByNumber`(`developers.mobile.abt.FirebaseAbt$ExperimentPayload$ExperimentOverflowPolicy$1` v0 @kind this, `int` v1 ) @signature `Ldevelopers/mobile/abt/FirebaseAbt$ExperimentPayload$ExperimentOverflowPolicy$1;.findValueByNumber:(I)Ldevelopers/mobile/abt/FirebaseAbt$ExperimentPayload$ExperimentOverflowPolicy;` @AccessFlag PUBLIC {
    temp;

  #L2cd614.  call temp:= `forNumber`(v1) @signature `Ldevelopers/mobile/abt/FirebaseAbt$ExperimentPayload$ExperimentOverflowPolicy;.forNumber:(I)Ldevelopers/mobile/abt/FirebaseAbt$ExperimentPayload$ExperimentOverflowPolicy;` @kind static;
  #L2cd61a.  v1:= temp @kind object;
  #L2cd61c.  return v1 @kind object;
}
