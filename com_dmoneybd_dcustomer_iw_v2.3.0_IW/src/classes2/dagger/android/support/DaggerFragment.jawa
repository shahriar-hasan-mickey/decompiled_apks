record `dagger.android.support.DaggerFragment` @kind class @AccessFlag PUBLIC_ABSTRACT extends `androidx.fragment.app.Fragment` @kind class, `dagger.android.support.HasSupportFragmentInjector` @kind interface {
  `dagger.android.DispatchingAndroidInjector` `dagger.android.support.DaggerFragment.V` @AccessFlag ;
}
procedure `void` `<init>`(`dagger.android.support.DaggerFragment` v0 @kind this) @signature `Ldagger/android/support/DaggerFragment;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2ca0b0.  call `<init>`(v0) @signature `Landroidx/fragment/app/Fragment;.<init>:()V` @kind direct;
  #L2ca0b6.  return @kind void;
}
procedure `void` `onAttach`(`dagger.android.support.DaggerFragment` v0 @kind this, `android.content.Context` v1 @kind object) @signature `Ldagger/android/support/DaggerFragment;.onAttach:(Landroid/content/Context;)V` @AccessFlag PUBLIC {
    temp;

  #L2ca0c8.  call `inject`(v0) @signature `Ldagger/android/support/AndroidSupportInjection;.inject:(Landroidx/fragment/app/Fragment;)V` @kind static;
  #L2ca0ce.  call `onAttach`(v0, v1) @signature `Landroidx/fragment/app/Fragment;.onAttach:(Landroid/content/Context;)V` @kind super;
  #L2ca0d4.  return @kind void;
}
procedure `dagger.android.AndroidInjector` `supportFragmentInjector`(`dagger.android.support.DaggerFragment` v1 @kind this) @signature `Ldagger/android/support/DaggerFragment;.supportFragmentInjector:()Ldagger/android/AndroidInjector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ca098.  v0:= v1.`dagger.android.support.DaggerFragment.V` @type ^`dagger.android.DispatchingAndroidInjector` @kind object;
  #L2ca09c.  return v0 @kind object;
}
