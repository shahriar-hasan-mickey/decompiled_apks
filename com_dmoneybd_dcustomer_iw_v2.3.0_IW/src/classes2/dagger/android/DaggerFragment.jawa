record `dagger.android.DaggerFragment` @kind class @AccessFlag PUBLIC_ABSTRACT extends `android.app.Fragment` @kind class, `dagger.android.HasFragmentInjector` @kind interface {
  `dagger.android.DispatchingAndroidInjector` `dagger.android.DaggerFragment.a` @AccessFlag ;
}
procedure `void` `<init>`(`dagger.android.DaggerFragment` v0 @kind this) @signature `Ldagger/android/DaggerFragment;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2c995c.  call `<init>`(v0) @signature `Landroid/app/Fragment;.<init>:()V` @kind direct;
  #L2c9962.  return @kind void;
}
procedure `dagger.android.AndroidInjector` `fragmentInjector`(`dagger.android.DaggerFragment` v1 @kind this) @signature `Ldagger/android/DaggerFragment;.fragmentInjector:()Ldagger/android/AndroidInjector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c9944.  v0:= v1.`dagger.android.DaggerFragment.a` @type ^`dagger.android.DispatchingAndroidInjector` @kind object;
  #L2c9948.  return v0 @kind object;
}
procedure `void` `onAttach`(`dagger.android.DaggerFragment` v0 @kind this, `android.content.Context` v1 @kind object) @signature `Ldagger/android/DaggerFragment;.onAttach:(Landroid/content/Context;)V` @AccessFlag PUBLIC {
    temp;

  #L2c9974.  call `inject`(v0) @signature `Ldagger/android/AndroidInjection;.inject:(Landroid/app/Fragment;)V` @kind static;
  #L2c997a.  call `onAttach`(v0, v1) @signature `Landroid/app/Fragment;.onAttach:(Landroid/content/Context;)V` @kind super;
  #L2c9980.  return @kind void;
}
