record `dagger.internal.AbstractMapFactory` @kind class @AccessFlag ABSTRACT extends `dagger.internal.Factory` @kind interface {
  `java.util.Map` `dagger.internal.AbstractMapFactory.contributingMap` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`dagger.internal.AbstractMapFactory` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Ldagger/internal/AbstractMapFactory;.<init>:(Ljava/util/Map;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2caba4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2cabaa.  call temp:= `unmodifiableMap`(v1) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L2cabb0.  v1:= temp @kind object;
  #L2cabb2.  v0.`dagger.internal.AbstractMapFactory.contributingMap` @type ^`java.util.Map` := v1 @kind object;
  #L2cabb6.  return @kind void;
}
procedure `java.util.Map` `a`(`dagger.internal.AbstractMapFactory` v0 @kind object) @signature `Ldagger/internal/AbstractMapFactory;.a:(Ldagger/internal/AbstractMapFactory;)Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2cab74.  v0:= v0.`dagger.internal.AbstractMapFactory.contributingMap` @type ^`java.util.Map` @kind object;
  #L2cab78.  return v0 @kind object;
}
procedure `java.util.Map` `b`(`dagger.internal.AbstractMapFactory` v1 @kind this) @signature `Ldagger/internal/AbstractMapFactory;.b:()Ljava/util/Map;` @AccessFlag FINAL {
    temp;
    v0;

  #L2cab8c.  v0:= v1.`dagger.internal.AbstractMapFactory.contributingMap` @type ^`java.util.Map` @kind object;
  #L2cab90.  return v0 @kind object;
}
