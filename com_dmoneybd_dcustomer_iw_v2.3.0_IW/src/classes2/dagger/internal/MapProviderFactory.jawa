record `dagger.internal.MapProviderFactory` @kind class @AccessFlag PUBLIC_FINAL extends `dagger.internal.AbstractMapFactory` @kind class, `dagger.Lazy` @kind interface {
}
procedure `void` `<init>`(`dagger.internal.MapProviderFactory` v0 @kind this, `java.util.Map` v1 @kind object) @signature `Ldagger/internal/MapProviderFactory;.<init>:(Ljava/util/Map;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2cb38c.  call `<init>`(v0, v1) @signature `Ldagger/internal/AbstractMapFactory;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L2cb392.  return @kind void;
}
procedure `void` `<init>`(`dagger.internal.MapProviderFactory` v0 @kind this, `java.util.Map` v1 @kind object, `dagger.internal.MapProviderFactory$1` v2 @kind object) @signature `Ldagger/internal/MapProviderFactory;.<init>:(Ljava/util/Map;Ldagger/internal/MapProviderFactory$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2cb3a4.  call `<init>`(v0, v1) @signature `Ldagger/internal/MapProviderFactory;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L2cb3aa.  return @kind void;
}
procedure `dagger.internal.MapProviderFactory$Builder` `builder`(`int` v2 ) @signature `Ldagger/internal/MapProviderFactory;.builder:(I)Ldagger/internal/MapProviderFactory$Builder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2cb334.  v0:= new `dagger.internal.MapProviderFactory$Builder`;
  #L2cb338.  v1:= 0I;
  #L2cb33a.  call `<init>`(v0, v2, v1) @signature `Ldagger/internal/MapProviderFactory$Builder;.<init>:(ILdagger/internal/MapProviderFactory$1;)V` @kind direct;
  #L2cb340.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`dagger.internal.MapProviderFactory` v1 @kind this) @signature `Ldagger/internal/MapProviderFactory;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2cb354.  call temp:= `get`(v1) @signature `Ldagger/internal/MapProviderFactory;.get:()Ljava/util/Map;` @kind virtual;
  #L2cb35a.  v0:= temp @kind object;
  #L2cb35c.  return v0 @kind object;
}
procedure `java.util.Map` `get`(`dagger.internal.MapProviderFactory` v1 @kind this) @signature `Ldagger/internal/MapProviderFactory;.get:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cb370.  call temp:= `b`(v1) @signature `Ldagger/internal/AbstractMapFactory;.b:()Ljava/util/Map;` @kind virtual;
  #L2cb376.  v0:= temp @kind object;
  #L2cb378.  return v0 @kind object;
}
