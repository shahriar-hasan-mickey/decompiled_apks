record `com.google.android.material.math.MathUtils` @kind class @AccessFlag PUBLIC_FINAL {
}
global `float` `@@com.google.android.material.math.MathUtils.DEFAULT_EPSILON` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.google.android.material.math.MathUtils` v0 @kind this) @signature `Lcom/google/android/material/math/MathUtils;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1d95c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d95ce.  return @kind void;
}
procedure `float` `dist`(`float` v0 , `float` v1 , `float` v2 , `float` v3 ) @signature `Lcom/google/android/material/math/MathUtils;.dist:(FFFF)F` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1d94f4.  v2:= v2 - v0 @kind float;
  #L1d94f6.  v3:= v3 - v1 @kind float;
  #L1d94f8.  v0:= (`double`) v2 @kind f2d;
  #L1d94fa.  v2:= (`double`) v3 @kind f2d;
  #L1d94fc.  call temp:= `hypot`(v0, v2) @signature `Ljava/lang/Math;.hypot:(DD)D` @kind static;
  #L1d9502.  v0:= temp @kind wide;
  #L1d9504.  v0:= (`float`) v0 @kind d2f;
  #L1d9506.  return v0;
}
procedure `float` `distanceToFurthestCorner`(`float` v1 , `float` v2 , `float` v3 , `float` v4 , `float` v5 , `float` v6 ) @signature `Lcom/google/android/material/math/MathUtils;.distanceToFurthestCorner:(FFFFFF)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d9518.  call temp:= `dist`(v1, v2, v3, v4) @signature `Lcom/google/android/material/math/MathUtils;.dist:(FFFF)F` @kind static;
  #L1d951e.  v0:= temp;
  #L1d9520.  call temp:= `dist`(v1, v2, v5, v4) @signature `Lcom/google/android/material/math/MathUtils;.dist:(FFFF)F` @kind static;
  #L1d9526.  v4:= temp;
  #L1d9528.  call temp:= `dist`(v1, v2, v5, v6) @signature `Lcom/google/android/material/math/MathUtils;.dist:(FFFF)F` @kind static;
  #L1d952e.  v5:= temp;
  #L1d9530.  call temp:= `dist`(v1, v2, v3, v6) @signature `Lcom/google/android/material/math/MathUtils;.dist:(FFFF)F` @kind static;
  #L1d9536.  v1:= temp;
  #L1d9538.  call temp:= `max`(v0, v4, v5, v1) @signature `Lcom/google/android/material/math/MathUtils;.max:(FFFF)F` @kind static;
  #L1d953e.  v1:= temp;
  #L1d9540.  return v1;
}
procedure `boolean` `geq`(`float` v0 , `float` v1 , `float` v2 ) @signature `Lcom/google/android/material/math/MathUtils;.geq:(FFF)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1d94d0.  v0:= v0 + v2 @kind float;
  #L1d94d2.  v0:= fcmpl(v0, v1);
  #L1d94d6.  if v0 < 0 then goto L1d94de;
  #L1d94da.  v0:= 1I;
  #L1d94dc.  goto L1d94e0;
  #L1d94de.  v0:= 0I;
  #L1d94e0.  return v0;
}
procedure `float` `lerp`(`float` v1 , `float` v2 , `float` v3 ) @signature `Lcom/google/android/material/math/MathUtils;.lerp:(FFF)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d9554.  v0:= 1.0F;
  #L1d9558.  v0:= v0 - v3 @kind float;
  #L1d955a.  v0:= v0 * v1 @kind float;
  #L1d955e.  v3:= v3 * v2 @kind float;
  #L1d9562.  v0:= v0 + v3 @kind float;
  #L1d9564.  return v0;
}
procedure `float` `max`(`float` v1 , `float` v2 , `float` v3 , `float` v4 ) @signature `Lcom/google/android/material/math/MathUtils;.max:(FFFF)F` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1d9578.  v0:= fcmpl(v1, v2);
  #L1d957c.  if v0 <= 0 then goto L1d9592;
  #L1d9580.  v0:= fcmpl(v1, v3);
  #L1d9584.  if v0 <= 0 then goto L1d9592;
  #L1d9588.  v0:= fcmpl(v1, v4);
  #L1d958c.  if v0 <= 0 then goto L1d9592;
  #L1d9590.  goto L1d95b4;
  #L1d9592.  v1:= fcmpl(v2, v3);
  #L1d9596.  if v1 <= 0 then goto L1d95a6;
  #L1d959a.  v1:= fcmpl(v2, v4);
  #L1d959e.  if v1 <= 0 then goto L1d95a6;
  #L1d95a2.  v1:= v2;
  #L1d95a4.  goto L1d95b4;
  #L1d95a6.  v1:= fcmpl(v3, v4);
  #L1d95aa.  if v1 <= 0 then goto L1d95b2;
  #L1d95ae.  v1:= v3;
  #L1d95b0.  goto L1d95b4;
  #L1d95b2.  v1:= v4;
  #L1d95b4.  return v1;
}
