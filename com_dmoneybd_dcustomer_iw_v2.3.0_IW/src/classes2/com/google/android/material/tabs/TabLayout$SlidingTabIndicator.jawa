record `com.google.android.material.tabs.TabLayout$SlidingTabIndicator` @kind class @AccessFlag  extends `android.widget.LinearLayout` @kind class {
  `int` `com.google.android.material.tabs.TabLayout$SlidingTabIndicator.a` @AccessFlag ;
  `float` `com.google.android.material.tabs.TabLayout$SlidingTabIndicator.b` @AccessFlag ;
  `com.google.android.material.tabs.TabLayout` `com.google.android.material.tabs.TabLayout$SlidingTabIndicator.c` @AccessFlag FINAL_SYNTHETIC;
  `android.graphics.drawable.GradientDrawable` `com.google.android.material.tabs.TabLayout$SlidingTabIndicator.defaultSelectionIndicator` @AccessFlag PRIVATE_FINAL;
  `android.animation.ValueAnimator` `com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @AccessFlag PRIVATE;
  `int` `com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorLeft` @AccessFlag PRIVATE;
  `int` `com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorRight` @AccessFlag PRIVATE;
  `int` `com.google.android.material.tabs.TabLayout$SlidingTabIndicator.layoutDirection` @AccessFlag PRIVATE;
  `int` `com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedIndicatorHeight` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedIndicatorPaint` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v0 @kind this, `com.google.android.material.tabs.TabLayout` v1 @kind object, `android.content.Context` v2 @kind object) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.<init>:(Lcom/google/android/material/tabs/TabLayout;Landroid/content/Context;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1e3aec.  v0.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.c` @type ^`com.google.android.material.tabs.TabLayout` := v1 @kind object;
  #L1e3af0.  call `<init>`(v0, v2) @signature `Landroid/widget/LinearLayout;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L1e3af6.  v1:= -1I;
  #L1e3af8.  v0.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.a` @type ^`int` := v1;
  #L1e3afc.  v0.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.layoutDirection` @type ^`int` := v1;
  #L1e3b00.  v0.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorLeft` @type ^`int` := v1;
  #L1e3b04.  v0.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorRight` @type ^`int` := v1;
  #L1e3b08.  v1:= 0I;
  #L1e3b0a.  call `setWillNotDraw`(v0, v1) @signature `Landroid/widget/LinearLayout;.setWillNotDraw:(Z)V` @kind virtual;
  #L1e3b10.  v1:= new `android.graphics.Paint`;
  #L1e3b14.  call `<init>`(v1) @signature `Landroid/graphics/Paint;.<init>:()V` @kind direct;
  #L1e3b1a.  v0.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedIndicatorPaint` @type ^`android.graphics.Paint` := v1 @kind object;
  #L1e3b1e.  v1:= new `android.graphics.drawable.GradientDrawable`;
  #L1e3b22.  call `<init>`(v1) @signature `Landroid/graphics/drawable/GradientDrawable;.<init>:()V` @kind direct;
  #L1e3b28.  v0.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.defaultSelectionIndicator` @type ^`android.graphics.drawable.GradientDrawable` := v1 @kind object;
  #L1e3b2c.  return @kind void;
}
procedure `void` `calculateTabViewContentBounds`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v3 @kind this, `com.google.android.material.tabs.TabLayout$TabView` v4 @kind object, `android.graphics.RectF` v5 @kind object) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.calculateTabViewContentBounds:(Lcom/google/android/material/tabs/TabLayout$TabView;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1e3c60.  call temp:= `b`(v4) @signature `Lcom/google/android/material/tabs/TabLayout$TabView;.b:(Lcom/google/android/material/tabs/TabLayout$TabView;)I` @kind static;
  #L1e3c66.  v0:= temp;
  #L1e3c68.  call temp:= `getContext`(v3) @signature `Landroid/widget/LinearLayout;.getContext:()Landroid/content/Context;` @kind virtual;
  #L1e3c6e.  v1:= temp @kind object;
  #L1e3c70.  v2:= 24I;
  #L1e3c74.  call temp:= `dpToPx`(v1, v2) @signature `Lcom/google/android/material/internal/ViewUtils;.dpToPx:(Landroid/content/Context;I)F` @kind static;
  #L1e3c7a.  v1:= temp;
  #L1e3c7c.  v1:= (`int`) v1 @kind f2i;
  #L1e3c7e.  if v0 >= v1 then goto L1e3c84;
  #L1e3c82.  v0:= v1;
  #L1e3c84.  call temp:= `getLeft`(v4) @signature `Landroid/widget/LinearLayout;.getLeft:()I` @kind virtual;
  #L1e3c8a.  v1:= temp;
  #L1e3c8c.  call temp:= `getRight`(v4) @signature `Landroid/widget/LinearLayout;.getRight:()I` @kind virtual;
  #L1e3c92.  v4:= temp;
  #L1e3c94.  v1:= v1 + v4 @kind int;
  #L1e3c96.  v1:= v1 / 2;
  #L1e3c9a.  v0:= v0 / 2;
  #L1e3c9e.  v4:= v1 - v0 @kind int;
  #L1e3ca2.  v1:= v1 + v0 @kind int;
  #L1e3ca4.  v4:= (`float`) v4 @kind i2f;
  #L1e3ca6.  v0:= (`float`) v1 @kind i2f;
  #L1e3ca8.  v1:= 0I;
  #L1e3caa.  call `set`(v5, v4, v1, v0, v1) @signature `Landroid/graphics/RectF;.set:(FFFF)V` @kind virtual;
  #L1e3cb0.  return @kind void;
}
procedure `void` `updateIndicatorPosition`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v7 @kind this) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.updateIndicatorPosition:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1e403c.  v0:= v7.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.a` @type ^`int`;
  #L1e4040.  call temp:= `getChildAt`(v7, v0) @signature `Landroid/widget/LinearLayout;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L1e4046.  v0:= temp @kind object;
  #L1e4048.  if v0 == 0 then goto L1e416e;
  #L1e404c.  call temp:= `getWidth`(v0) @signature `Landroid/view/View;.getWidth:()I` @kind virtual;
  #L1e4052.  v1:= temp;
  #L1e4054.  if v1 <= 0 then goto L1e416e;
  #L1e4058.  call temp:= `getLeft`(v0) @signature `Landroid/view/View;.getLeft:()I` @kind virtual;
  #L1e405e.  v1:= temp;
  #L1e4060.  call temp:= `getRight`(v0) @signature `Landroid/view/View;.getRight:()I` @kind virtual;
  #L1e4066.  v2:= temp;
  #L1e4068.  v3:= v7.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.c` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1e406c.  v4:= v3.`com.google.android.material.tabs.TabLayout.t` @type ^`boolean` @kind boolean;
  #L1e4070.  if v4 != 0 then goto L1e40b2;
  #L1e4074.  v4:= instanceof @variable v0 @type ^`com.google.android.material.tabs.TabLayout$TabView` @kind boolean;
  #L1e4078.  if v4 == 0 then goto L1e40b2;
  #L1e407c.  v0:= (`com.google.android.material.tabs.TabLayout$TabView`) v0 @kind object;
  #L1e4080.  call temp:= `a`(v3) @signature `Lcom/google/android/material/tabs/TabLayout;.a:(Lcom/google/android/material/tabs/TabLayout;)Landroid/graphics/RectF;` @kind static;
  #L1e4086.  v1:= temp @kind object;
  #L1e4088.  call `calculateTabViewContentBounds`(v7, v0, v1) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.calculateTabViewContentBounds:(Lcom/google/android/material/tabs/TabLayout$TabView;Landroid/graphics/RectF;)V` @kind direct;
  #L1e408e.  v0:= v7.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.c` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1e4092.  call temp:= `a`(v0) @signature `Lcom/google/android/material/tabs/TabLayout;.a:(Lcom/google/android/material/tabs/TabLayout;)Landroid/graphics/RectF;` @kind static;
  #L1e4098.  v0:= temp @kind object;
  #L1e409a.  v0:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L1e409e.  v1:= (`int`) v0 @kind f2i;
  #L1e40a0.  v0:= v7.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.c` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1e40a4.  call temp:= `a`(v0) @signature `Lcom/google/android/material/tabs/TabLayout;.a:(Lcom/google/android/material/tabs/TabLayout;)Landroid/graphics/RectF;` @kind static;
  #L1e40aa.  v0:= temp @kind object;
  #L1e40ac.  v0:= v0.`android.graphics.RectF.right` @type ^`float`;
  #L1e40b0.  v2:= (`int`) v0 @kind f2i;
  #L1e40b2.  v0:= v7.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.b` @type ^`float`;
  #L1e40b6.  v3:= 0I;
  #L1e40b8.  v0:= fcmpl(v0, v3);
  #L1e40bc.  if v0 <= 0 then goto L1e4172;
  #L1e40c0.  v0:= v7.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.a` @type ^`int`;
  #L1e40c4.  call temp:= `getChildCount`(v7) @signature `Landroid/widget/LinearLayout;.getChildCount:()I` @kind virtual;
  #L1e40ca.  v3:= temp;
  #L1e40cc.  v3:= v3 + -1;
  #L1e40d0.  if v0 >= v3 then goto L1e4172;
  #L1e40d4.  v0:= v7.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.a` @type ^`int`;
  #L1e40d8.  v0:= v0 + 1;
  #L1e40dc.  call temp:= `getChildAt`(v7, v0) @signature `Landroid/widget/LinearLayout;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L1e40e2.  v0:= temp @kind object;
  #L1e40e4.  call temp:= `getLeft`(v0) @signature `Landroid/view/View;.getLeft:()I` @kind virtual;
  #L1e40ea.  v3:= temp;
  #L1e40ec.  call temp:= `getRight`(v0) @signature `Landroid/view/View;.getRight:()I` @kind virtual;
  #L1e40f2.  v4:= temp;
  #L1e40f4.  v5:= v7.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.c` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1e40f8.  v6:= v5.`com.google.android.material.tabs.TabLayout.t` @type ^`boolean` @kind boolean;
  #L1e40fc.  if v6 != 0 then goto L1e413e;
  #L1e4100.  v6:= instanceof @variable v0 @type ^`com.google.android.material.tabs.TabLayout$TabView` @kind boolean;
  #L1e4104.  if v6 == 0 then goto L1e413e;
  #L1e4108.  v0:= (`com.google.android.material.tabs.TabLayout$TabView`) v0 @kind object;
  #L1e410c.  call temp:= `a`(v5) @signature `Lcom/google/android/material/tabs/TabLayout;.a:(Lcom/google/android/material/tabs/TabLayout;)Landroid/graphics/RectF;` @kind static;
  #L1e4112.  v3:= temp @kind object;
  #L1e4114.  call `calculateTabViewContentBounds`(v7, v0, v3) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.calculateTabViewContentBounds:(Lcom/google/android/material/tabs/TabLayout$TabView;Landroid/graphics/RectF;)V` @kind direct;
  #L1e411a.  v0:= v7.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.c` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1e411e.  call temp:= `a`(v0) @signature `Lcom/google/android/material/tabs/TabLayout;.a:(Lcom/google/android/material/tabs/TabLayout;)Landroid/graphics/RectF;` @kind static;
  #L1e4124.  v0:= temp @kind object;
  #L1e4126.  v0:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L1e412a.  v3:= (`int`) v0 @kind f2i;
  #L1e412c.  v0:= v7.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.c` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1e4130.  call temp:= `a`(v0) @signature `Lcom/google/android/material/tabs/TabLayout;.a:(Lcom/google/android/material/tabs/TabLayout;)Landroid/graphics/RectF;` @kind static;
  #L1e4136.  v0:= temp @kind object;
  #L1e4138.  v0:= v0.`android.graphics.RectF.right` @type ^`float`;
  #L1e413c.  v4:= (`int`) v0 @kind f2i;
  #L1e413e.  v0:= v7.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.b` @type ^`float`;
  #L1e4142.  v3:= (`float`) v3 @kind i2f;
  #L1e4144.  v3:= v3 * v0 @kind float;
  #L1e4148.  v5:= 1.0F;
  #L1e414c.  v6:= v5 - v0 @kind float;
  #L1e4150.  v1:= (`float`) v1 @kind i2f;
  #L1e4152.  v6:= v6 * v1 @kind float;
  #L1e4156.  v3:= v3 + v6 @kind float;
  #L1e4158.  v1:= (`int`) v3 @kind f2i;
  #L1e415a.  v3:= (`float`) v4 @kind i2f;
  #L1e415c.  v3:= v3 * v0 @kind float;
  #L1e4160.  v5:= v5 - v0 @kind float;
  #L1e4162.  v0:= (`float`) v2 @kind i2f;
  #L1e4164.  v5:= v5 * v0 @kind float;
  #L1e4168.  v3:= v3 + v5 @kind float;
  #L1e416a.  v2:= (`int`) v3 @kind f2i;
  #L1e416c.  goto L1e4172;
  #L1e416e.  v1:= -1I;
  #L1e4170.  v2:= -1I;
  #L1e4172.  call `c`(v7, v1, v2) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.c:(II)V` @kind virtual;
  #L1e4178.  return @kind void;
}
procedure `void` `a`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v9 @kind this, `int` v10 , `int` v11 ) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.a:(II)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1e3b40.  v0:= v9.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L1e3b44.  if v0 == 0 then goto L1e3b5e;
  #L1e3b48.  call temp:= `isRunning`(v0) @signature `Landroid/animation/ValueAnimator;.isRunning:()Z` @kind virtual;
  #L1e3b4e.  v0:= temp;
  #L1e3b50.  if v0 == 0 then goto L1e3b5e;
  #L1e3b54.  v0:= v9.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L1e3b58.  call `cancel`(v0) @signature `Landroid/animation/ValueAnimator;.cancel:()V` @kind virtual;
  #L1e3b5e.  call temp:= `getChildAt`(v9, v10) @signature `Landroid/widget/LinearLayout;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L1e3b64.  v0:= temp @kind object;
  #L1e3b66.  if v0 != 0 then goto L1e3b72;
  #L1e3b6a.  call `updateIndicatorPosition`(v9) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.updateIndicatorPosition:()V` @kind direct;
  #L1e3b70.  return @kind void;
  #L1e3b72.  call temp:= `getLeft`(v0) @signature `Landroid/view/View;.getLeft:()I` @kind virtual;
  #L1e3b78.  v1:= temp;
  #L1e3b7a.  call temp:= `getRight`(v0) @signature `Landroid/view/View;.getRight:()I` @kind virtual;
  #L1e3b80.  v2:= temp;
  #L1e3b82.  v3:= v9.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.c` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1e3b86.  v4:= v3.`com.google.android.material.tabs.TabLayout.t` @type ^`boolean` @kind boolean;
  #L1e3b8a.  if v4 != 0 then goto L1e3bcc;
  #L1e3b8e.  v4:= instanceof @variable v0 @type ^`com.google.android.material.tabs.TabLayout$TabView` @kind boolean;
  #L1e3b92.  if v4 == 0 then goto L1e3bcc;
  #L1e3b96.  v0:= (`com.google.android.material.tabs.TabLayout$TabView`) v0 @kind object;
  #L1e3b9a.  call temp:= `a`(v3) @signature `Lcom/google/android/material/tabs/TabLayout;.a:(Lcom/google/android/material/tabs/TabLayout;)Landroid/graphics/RectF;` @kind static;
  #L1e3ba0.  v1:= temp @kind object;
  #L1e3ba2.  call `calculateTabViewContentBounds`(v9, v0, v1) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.calculateTabViewContentBounds:(Lcom/google/android/material/tabs/TabLayout$TabView;Landroid/graphics/RectF;)V` @kind direct;
  #L1e3ba8.  v0:= v9.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.c` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1e3bac.  call temp:= `a`(v0) @signature `Lcom/google/android/material/tabs/TabLayout;.a:(Lcom/google/android/material/tabs/TabLayout;)Landroid/graphics/RectF;` @kind static;
  #L1e3bb2.  v0:= temp @kind object;
  #L1e3bb4.  v0:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L1e3bb8.  v1:= (`int`) v0 @kind f2i;
  #L1e3bba.  v0:= v9.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.c` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1e3bbe.  call temp:= `a`(v0) @signature `Lcom/google/android/material/tabs/TabLayout;.a:(Lcom/google/android/material/tabs/TabLayout;)Landroid/graphics/RectF;` @kind static;
  #L1e3bc4.  v0:= temp @kind object;
  #L1e3bc6.  v0:= v0.`android.graphics.RectF.right` @type ^`float`;
  #L1e3bca.  v2:= (`int`) v0 @kind f2i;
  #L1e3bcc.  v6:= v1;
  #L1e3bce.  v8:= v2;
  #L1e3bd0.  v5:= v9.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorLeft` @type ^`int`;
  #L1e3bd4.  v7:= v9.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorRight` @type ^`int`;
  #L1e3bd8.  if v5 != v6 then goto L1e3be0;
  #L1e3bdc.  if v7 == v8 then goto L1e3c3c;
  #L1e3be0.  v0:= new `android.animation.ValueAnimator`;
  #L1e3be4.  call `<init>`(v0) @signature `Landroid/animation/ValueAnimator;.<init>:()V` @kind direct;
  #L1e3bea.  v9.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @type ^`android.animation.ValueAnimator` := v0 @kind object;
  #L1e3bee.  v1:= `@@com.google.android.material.animation.AnimationUtils.FAST_OUT_SLOW_IN_INTERPOLATOR` @type ^`android.animation.TimeInterpolator` @kind object;
  #L1e3bf2.  call `setInterpolator`(v0, v1) @signature `Landroid/animation/ValueAnimator;.setInterpolator:(Landroid/animation/TimeInterpolator;)V` @kind virtual;
  #L1e3bf8.  v1:= (`long`) v11 @kind i2l;
  #L1e3bfa.  call temp:= `setDuration`(v0, v1) @signature `Landroid/animation/ValueAnimator;.setDuration:(J)Landroid/animation/ValueAnimator;` @kind virtual;
  #L1e3c00.  v11:= 2I;
  #L1e3c02.  v11:= new `float`[v11];
  #L1e3c06.  goto L1e3c40;
  #L1e3c0c.  call `setFloatValues`(v0, v11) @signature `Landroid/animation/ValueAnimator;.setFloatValues:([F)V` @kind virtual;
  #L1e3c12.  v11:= new `com.google.android.material.tabs.TabLayout$SlidingTabIndicator$1`;
  #L1e3c16.  v3:= v11 @kind object;
  #L1e3c18.  v4:= v9 @kind object;
  #L1e3c1a.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator$1;.<init>:(Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;IIII)V` @kind direct;
  #L1e3c20.  call `addUpdateListener`(v0, v11) @signature `Landroid/animation/ValueAnimator;.addUpdateListener:(Landroid/animation/ValueAnimator$AnimatorUpdateListener;)V` @kind virtual;
  #L1e3c26.  v11:= new `com.google.android.material.tabs.TabLayout$SlidingTabIndicator$2`;
  #L1e3c2a.  call `<init>`(v11, v9, v10) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator$2;.<init>:(Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;I)V` @kind direct;
  #L1e3c30.  call `addListener`(v0, v11) @signature `Landroid/animation/ValueAnimator;.addListener:(Landroid/animation/Animator$AnimatorListener;)V` @kind virtual;
  #L1e3c36.  call `start`(v0) @signature `Landroid/animation/ValueAnimator;.start:()V` @kind virtual;
  #L1e3c3c.  return @kind void;
  #L1e3c3e.  
  #L1e3c40.  v11:= (0I, 1065353216I) @kind object;
  #L1e3c4f.  goto L1e3c0c;
}
procedure `boolean` `b`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v4 @kind this) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.b:()Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1e3aac.  call temp:= `getChildCount`(v4) @signature `Landroid/widget/LinearLayout;.getChildCount:()I` @kind virtual;
  #L1e3ab2.  v0:= temp;
  #L1e3ab4.  v1:= 0I;
  #L1e3ab6.  v2:= 0I;
  #L1e3ab8.  if v2 >= v0 then goto L1e3ada;
  #L1e3abc.  call temp:= `getChildAt`(v4, v2) @signature `Landroid/widget/LinearLayout;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L1e3ac2.  v3:= temp @kind object;
  #L1e3ac4.  call temp:= `getWidth`(v3) @signature `Landroid/view/View;.getWidth:()I` @kind virtual;
  #L1e3aca.  v3:= temp;
  #L1e3acc.  if v3 > 0 then goto L1e3ad4;
  #L1e3ad0.  v0:= 1I;
  #L1e3ad2.  return v0;
  #L1e3ad4.  v2:= v2 + 1;
  #L1e3ad8.  goto L1e3ab8;
  #L1e3ada.  return v1;
}
procedure `void` `c`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.c:(II)V` @AccessFlag  {
    temp;
    v0;

  #L1e3f74.  v0:= v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorLeft` @type ^`int`;
  #L1e3f78.  if v2 != v0 then goto L1e3f84;
  #L1e3f7c.  v0:= v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorRight` @type ^`int`;
  #L1e3f80.  if v3 == v0 then goto L1e3f92;
  #L1e3f84.  v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorLeft` @type ^`int` := v2;
  #L1e3f88.  v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorRight` @type ^`int` := v3;
  #L1e3f8c.  call `postInvalidateOnAnimation`(v1) @signature `Landroidx/core/view/ViewCompat;.postInvalidateOnAnimation:(Landroid/view/View;)V` @kind static;
  #L1e3f92.  return @kind void;
}
procedure `void` `d`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v1 @kind this, `int` v2 , `float` v3 ) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.d:(IF)V` @AccessFlag  {
    temp;
    v0;

  #L1e3fa4.  v0:= v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L1e3fa8.  if v0 == 0 then goto L1e3fc2;
  #L1e3fac.  call temp:= `isRunning`(v0) @signature `Landroid/animation/ValueAnimator;.isRunning:()Z` @kind virtual;
  #L1e3fb2.  v0:= temp;
  #L1e3fb4.  if v0 == 0 then goto L1e3fc2;
  #L1e3fb8.  v0:= v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L1e3fbc.  call `cancel`(v0) @signature `Landroid/animation/ValueAnimator;.cancel:()V` @kind virtual;
  #L1e3fc2.  v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.a` @type ^`int` := v2;
  #L1e3fc6.  v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.b` @type ^`float` := v3;
  #L1e3fca.  call `updateIndicatorPosition`(v1) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.updateIndicatorPosition:()V` @kind direct;
  #L1e3fd0.  return @kind void;
}
procedure `void` `draw`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v5 @kind this, `android.graphics.Canvas` v6 @kind object) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.draw:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1e3cc4.  v0:= v5.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.c` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1e3cc8.  v0:= v0.`com.google.android.material.tabs.TabLayout.i` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e3ccc.  v1:= 0I;
  #L1e3cce.  if v0 == 0 then goto L1e3cdc;
  #L1e3cd2.  call temp:= `getIntrinsicHeight`(v0) @signature `Landroid/graphics/drawable/Drawable;.getIntrinsicHeight:()I` @kind virtual;
  #L1e3cd8.  v0:= temp;
  #L1e3cda.  goto L1e3cde;
  #L1e3cdc.  v0:= 0I;
  #L1e3cde.  v2:= v5.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedIndicatorHeight` @type ^`int`;
  #L1e3ce2.  if v2 < 0 then goto L1e3ce8;
  #L1e3ce6.  v0:= v2;
  #L1e3ce8.  v2:= v5.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.c` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1e3cec.  v2:= v2.`com.google.android.material.tabs.TabLayout.q` @type ^`int`;
  #L1e3cf0.  if v2 == 0 then goto L1e3d26;
  #L1e3cf4.  v3:= 1I;
  #L1e3cf6.  v4:= 2I;
  #L1e3cf8.  if v2 == v3 then goto L1e3d0a;
  #L1e3cfc.  if v2 == v4 then goto L1e3d38;
  #L1e3d00.  v0:= 3I;
  #L1e3d02.  if v2 == v0 then goto L1e3d30;
  #L1e3d06.  v0:= 0I;
  #L1e3d08.  goto L1e3d38;
  #L1e3d0a.  call temp:= `getHeight`(v5) @signature `Landroid/widget/LinearLayout;.getHeight:()I` @kind virtual;
  #L1e3d10.  v1:= temp;
  #L1e3d12.  v1:= v1 - v0 @kind int;
  #L1e3d14.  v1:= v1 / v4 @kind int;
  #L1e3d16.  call temp:= `getHeight`(v5) @signature `Landroid/widget/LinearLayout;.getHeight:()I` @kind virtual;
  #L1e3d1c.  v2:= temp;
  #L1e3d1e.  v2:= v2 + v0 @kind int;
  #L1e3d20.  v0:= v2 / 2;
  #L1e3d24.  goto L1e3d38;
  #L1e3d26.  call temp:= `getHeight`(v5) @signature `Landroid/widget/LinearLayout;.getHeight:()I` @kind virtual;
  #L1e3d2c.  v1:= temp;
  #L1e3d2e.  v1:= v1 - v0 @kind int;
  #L1e3d30.  call temp:= `getHeight`(v5) @signature `Landroid/widget/LinearLayout;.getHeight:()I` @kind virtual;
  #L1e3d36.  v0:= temp;
  #L1e3d38.  v2:= v5.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorLeft` @type ^`int`;
  #L1e3d3c.  if v2 < 0 then goto L1e3da4;
  #L1e3d40.  v3:= v5.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorRight` @type ^`int`;
  #L1e3d44.  if v3 <= v2 then goto L1e3da4;
  #L1e3d48.  v2:= v5.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.c` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1e3d4c.  v2:= v2.`com.google.android.material.tabs.TabLayout.i` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1e3d50.  if v2 == 0 then goto L1e3d56;
  #L1e3d54.  goto L1e3d5a;
  #L1e3d56.  v2:= v5.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.defaultSelectionIndicator` @type ^`android.graphics.drawable.GradientDrawable` @kind object;
  #L1e3d5a.  call temp:= `wrap`(v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.wrap:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L1e3d60.  v2:= temp @kind object;
  #L1e3d62.  v3:= v5.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorLeft` @type ^`int`;
  #L1e3d66.  v4:= v5.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorRight` @type ^`int`;
  #L1e3d6a.  call `setBounds`(v2, v3, v1, v4, v0) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L1e3d70.  v0:= v5.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedIndicatorPaint` @type ^`android.graphics.Paint` @kind object;
  #L1e3d74.  if v0 == 0 then goto L1e3d9e;
  #L1e3d78.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1e3d7c.  v3:= 21I;
  #L1e3d80.  call temp:= `getColor`(v0) @signature `Landroid/graphics/Paint;.getColor:()I` @kind virtual;
  #L1e3d86.  v0:= temp;
  #L1e3d88.  if v1 != v3 then goto L1e3d98;
  #L1e3d8c.  v1:= `@@android.graphics.PorterDuff$Mode.SRC_IN` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L1e3d90.  call `setColorFilter`(v2, v0, v1) @signature `Landroid/graphics/drawable/Drawable;.setColorFilter:(ILandroid/graphics/PorterDuff$Mode;)V` @kind virtual;
  #L1e3d96.  goto L1e3d9e;
  #L1e3d98.  call `setTint`(v2, v0) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTint:(Landroid/graphics/drawable/Drawable;I)V` @kind static;
  #L1e3d9e.  call `draw`(v2, v6) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L1e3da4.  call `draw`(v5, v6) @signature `Landroid/widget/LinearLayout;.draw:(Landroid/graphics/Canvas;)V` @kind super;
  #L1e3daa.  return @kind void;
}
procedure `void` `e`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.e:(I)V` @AccessFlag  {
    temp;
    v0;

  #L1e3fe4.  v0:= v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedIndicatorPaint` @type ^`android.graphics.Paint` @kind object;
  #L1e3fe8.  call temp:= `getColor`(v0) @signature `Landroid/graphics/Paint;.getColor:()I` @kind virtual;
  #L1e3fee.  v0:= temp;
  #L1e3ff0.  if v0 == v2 then goto L1e4004;
  #L1e3ff4.  v0:= v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedIndicatorPaint` @type ^`android.graphics.Paint` @kind object;
  #L1e3ff8.  call `setColor`(v0, v2) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L1e3ffe.  call `postInvalidateOnAnimation`(v1) @signature `Landroidx/core/view/ViewCompat;.postInvalidateOnAnimation:(Landroid/view/View;)V` @kind static;
  #L1e4004.  return @kind void;
}
procedure `void` `f`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.f:(I)V` @AccessFlag  {
    temp;
    v0;

  #L1e4018.  v0:= v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedIndicatorHeight` @type ^`int`;
  #L1e401c.  if v0 == v2 then goto L1e402a;
  #L1e4020.  v1.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.selectedIndicatorHeight` @type ^`int` := v2;
  #L1e4024.  call `postInvalidateOnAnimation`(v1) @signature `Landroidx/core/view/ViewCompat;.postInvalidateOnAnimation:(Landroid/view/View;)V` @kind static;
  #L1e402a.  return @kind void;
}
procedure `void` `onLayout`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v0 @kind this, `boolean` v1 , `int` v2 , `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.onLayout:(ZIIII)V` @AccessFlag PROTECTED {
    temp;

  #L1e3dbc.  call `onLayout`(v0, v1, v2, v3, v4, v5) @signature `Landroid/widget/LinearLayout;.onLayout:(ZIIII)V` @kind super;
  #L1e3dc2.  v1:= v0.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L1e3dc6.  if v1 == 0 then goto L1e3e18;
  #L1e3dca.  call temp:= `isRunning`(v1) @signature `Landroid/animation/ValueAnimator;.isRunning:()Z` @kind virtual;
  #L1e3dd0.  v1:= temp;
  #L1e3dd2.  if v1 == 0 then goto L1e3e18;
  #L1e3dd6.  v1:= v0.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L1e3dda.  call `cancel`(v1) @signature `Landroid/animation/ValueAnimator;.cancel:()V` @kind virtual;
  #L1e3de0.  v1:= v0.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L1e3de4.  call temp:= `getDuration`(v1) @signature `Landroid/animation/ValueAnimator;.getDuration:()J` @kind virtual;
  #L1e3dea.  v1:= temp @kind wide;
  #L1e3dec.  v3:= v0.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.a` @type ^`int`;
  #L1e3df0.  v4:= 1.0F;
  #L1e3df4.  v5:= v0.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.indicatorAnimator` @type ^`android.animation.ValueAnimator` @kind object;
  #L1e3df8.  call temp:= `getAnimatedFraction`(v5) @signature `Landroid/animation/ValueAnimator;.getAnimatedFraction:()F` @kind virtual;
  #L1e3dfe.  v5:= temp;
  #L1e3e00.  v4:= v4 - v5 @kind float;
  #L1e3e02.  v1:= (`float`) v1 @kind l2f;
  #L1e3e04.  v4:= v4 * v1 @kind float;
  #L1e3e08.  call temp:= `round`(v4) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L1e3e0e.  v1:= temp;
  #L1e3e10.  call `a`(v0, v3, v1) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.a:(II)V` @kind virtual;
  #L1e3e16.  goto L1e3e1e;
  #L1e3e18.  call `updateIndicatorPosition`(v0) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.updateIndicatorPosition:()V` @kind direct;
  #L1e3e1e.  return @kind void;
}
procedure `void` `onMeasure`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v8 @kind this, `int` v9 , `int` v10 ) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.onMeasure:(II)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1e3e30.  call `onMeasure`(v8, v9, v10) @signature `Landroid/widget/LinearLayout;.onMeasure:(II)V` @kind super;
  #L1e3e36.  call temp:= `getMode`(v9) @signature `Landroid/view/View$MeasureSpec;.getMode:(I)I` @kind static;
  #L1e3e3c.  v0:= temp;
  #L1e3e3e.  v1:= 2.0F;
  #L1e3e42.  if v0 == v1 then goto L1e3e48;
  #L1e3e46.  return @kind void;
  #L1e3e48.  v0:= v8.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.c` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1e3e4c.  v1:= v0.`com.google.android.material.tabs.TabLayout.o` @type ^`int`;
  #L1e3e50.  v2:= 2I;
  #L1e3e52.  v3:= 1I;
  #L1e3e54.  if v1 == v3 then goto L1e3e60;
  #L1e3e58.  v0:= v0.`com.google.android.material.tabs.TabLayout.r` @type ^`int`;
  #L1e3e5c.  if v0 != v2 then goto L1e3f2a;
  #L1e3e60.  call temp:= `getChildCount`(v8) @signature `Landroid/widget/LinearLayout;.getChildCount:()I` @kind virtual;
  #L1e3e66.  v0:= temp;
  #L1e3e68.  v1:= 0I;
  #L1e3e6a.  v4:= 0I;
  #L1e3e6c.  v5:= 0I;
  #L1e3e6e.  if v4 >= v0 then goto L1e3e9c;
  #L1e3e72.  call temp:= `getChildAt`(v8, v4) @signature `Landroid/widget/LinearLayout;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L1e3e78.  v6:= temp @kind object;
  #L1e3e7a.  call temp:= `getVisibility`(v6) @signature `Landroid/view/View;.getVisibility:()I` @kind virtual;
  #L1e3e80.  v7:= temp;
  #L1e3e82.  if v7 != 0 then goto L1e3e96;
  #L1e3e86.  call temp:= `getMeasuredWidth`(v6) @signature `Landroid/view/View;.getMeasuredWidth:()I` @kind virtual;
  #L1e3e8c.  v6:= temp;
  #L1e3e8e.  call temp:= `max`(v5, v6) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L1e3e94.  v5:= temp;
  #L1e3e96.  v4:= v4 + 1;
  #L1e3e9a.  goto L1e3e6e;
  #L1e3e9c.  if v5 > 0 then goto L1e3ea2;
  #L1e3ea0.  return @kind void;
  #L1e3ea2.  call temp:= `getContext`(v8) @signature `Landroid/widget/LinearLayout;.getContext:()Landroid/content/Context;` @kind virtual;
  #L1e3ea8.  v4:= temp @kind object;
  #L1e3eaa.  v6:= 16I;
  #L1e3eae.  call temp:= `dpToPx`(v4, v6) @signature `Lcom/google/android/material/internal/ViewUtils;.dpToPx:(Landroid/content/Context;I)F` @kind static;
  #L1e3eb4.  v4:= temp;
  #L1e3eb6.  v4:= (`int`) v4 @kind f2i;
  #L1e3eb8.  v6:= v5 * v0 @kind int;
  #L1e3ebc.  call temp:= `getMeasuredWidth`(v8) @signature `Landroid/widget/LinearLayout;.getMeasuredWidth:()I` @kind virtual;
  #L1e3ec2.  v7:= temp;
  #L1e3ec4.  v4:= v4 * 2;
  #L1e3ec8.  v7:= v7 - v4 @kind int;
  #L1e3eca.  if v6 > v7 then goto L1e3f12;
  #L1e3ece.  v2:= 0I;
  #L1e3ed0.  if v1 >= v0 then goto L1e3f0e;
  #L1e3ed4.  call temp:= `getChildAt`(v8, v1) @signature `Landroid/widget/LinearLayout;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L1e3eda.  v4:= temp @kind object;
  #L1e3edc.  call temp:= `getLayoutParams`(v4) @signature `Landroid/view/View;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L1e3ee2.  v4:= temp @kind object;
  #L1e3ee4.  v4:= (`android.widget.LinearLayout$LayoutParams`) v4 @kind object;
  #L1e3ee8.  v6:= v4.`android.widget.LinearLayout$LayoutParams.width` @type ^`int`;
  #L1e3eec.  v7:= 0I;
  #L1e3eee.  if v6 != v5 then goto L1e3efe;
  #L1e3ef2.  v6:= v4.`android.widget.LinearLayout$LayoutParams.weight` @type ^`float`;
  #L1e3ef6.  v6:= fcmpl(v6, v7);
  #L1e3efa.  if v6 == 0 then goto L1e3f08;
  #L1e3efe.  v4.`android.widget.LinearLayout$LayoutParams.width` @type ^`int` := v5;
  #L1e3f02.  v4.`android.widget.LinearLayout$LayoutParams.weight` @type ^`float` := v7;
  #L1e3f06.  v2:= 1I;
  #L1e3f08.  v1:= v1 + 1;
  #L1e3f0c.  goto L1e3ed0;
  #L1e3f0e.  v3:= v2;
  #L1e3f10.  goto L1e3f20;
  #L1e3f12.  v0:= v8.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.c` @type ^`com.google.android.material.tabs.TabLayout` @kind object;
  #L1e3f16.  v0.`com.google.android.material.tabs.TabLayout.o` @type ^`int` := v1;
  #L1e3f1a.  call `d`(v0, v1) @signature `Lcom/google/android/material/tabs/TabLayout;.d:(Z)V` @kind virtual;
  #L1e3f20.  if v3 == 0 then goto L1e3f2a;
  #L1e3f24.  call `onMeasure`(v8, v9, v10) @signature `Landroid/widget/LinearLayout;.onMeasure:(II)V` @kind super;
  #L1e3f2a.  return @kind void;
}
procedure `void` `onRtlPropertiesChanged`(`com.google.android.material.tabs.TabLayout$SlidingTabIndicator` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/tabs/TabLayout$SlidingTabIndicator;.onRtlPropertiesChanged:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e3f3c.  call `onRtlPropertiesChanged`(v2, v3) @signature `Landroid/widget/LinearLayout;.onRtlPropertiesChanged:(I)V` @kind super;
  #L1e3f42.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1e3f46.  v1:= 23I;
  #L1e3f4a.  if v0 >= v1 then goto L1e3f60;
  #L1e3f4e.  v0:= v2.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.layoutDirection` @type ^`int`;
  #L1e3f52.  if v0 == v3 then goto L1e3f60;
  #L1e3f56.  call `requestLayout`(v2) @signature `Landroid/widget/LinearLayout;.requestLayout:()V` @kind virtual;
  #L1e3f5c.  v2.`com.google.android.material.tabs.TabLayout$SlidingTabIndicator.layoutDirection` @type ^`int` := v3;
  #L1e3f60.  return @kind void;
}
