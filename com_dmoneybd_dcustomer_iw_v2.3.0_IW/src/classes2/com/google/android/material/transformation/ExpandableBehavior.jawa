record `com.google.android.material.transformation.ExpandableBehavior` @kind class @AccessFlag PUBLIC_ABSTRACT extends `androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior` @kind class {
  `int` `com.google.android.material.transformation.ExpandableBehavior.currentState` @AccessFlag PRIVATE;
}
global `int` `@@com.google.android.material.transformation.ExpandableBehavior.STATE_COLLAPSED` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.transformation.ExpandableBehavior.STATE_EXPANDED` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.android.material.transformation.ExpandableBehavior.STATE_UNINITIALIZED` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.android.material.transformation.ExpandableBehavior` v1 @kind this) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1edac4.  call `<init>`(v1) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout$Behavior;.<init>:()V` @kind direct;
  #L1edaca.  v0:= 0I;
  #L1edacc.  v1.`com.google.android.material.transformation.ExpandableBehavior.currentState` @type ^`int` := v0;
  #L1edad0.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.transformation.ExpandableBehavior` v0 @kind this, `android.content.Context` v1 @kind object, `android.util.AttributeSet` v2 @kind object) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1edae4.  call `<init>`(v0, v1, v2) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout$Behavior;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L1edaea.  v1:= 0I;
  #L1edaec.  v0.`com.google.android.material.transformation.ExpandableBehavior.currentState` @type ^`int` := v1;
  #L1edaf0.  return @kind void;
}
procedure `int` `a`(`com.google.android.material.transformation.ExpandableBehavior` v0 @kind object) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.a:(Lcom/google/android/material/transformation/ExpandableBehavior;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1edaac.  v0:= v0.`com.google.android.material.transformation.ExpandableBehavior.currentState` @type ^`int`;
  #L1edab0.  return v0;
}
procedure `boolean` `didStateChange`(`com.google.android.material.transformation.ExpandableBehavior` v3 @kind this, `boolean` v4 ) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.didStateChange:(Z)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1ed8f4.  v0:= 0I;
  #L1ed8f6.  v1:= 1I;
  #L1ed8f8.  if v4 == 0 then goto L1ed90e;
  #L1ed8fc.  v4:= v3.`com.google.android.material.transformation.ExpandableBehavior.currentState` @type ^`int`;
  #L1ed900.  if v4 == 0 then goto L1ed90a;
  #L1ed904.  v2:= 2I;
  #L1ed906.  if v4 != v2 then goto L1ed90c;
  #L1ed90a.  v0:= 1I;
  #L1ed90c.  return v0;
  #L1ed90e.  v4:= v3.`com.google.android.material.transformation.ExpandableBehavior.currentState` @type ^`int`;
  #L1ed912.  if v4 != v1 then goto L1ed918;
  #L1ed916.  v0:= 1I;
  #L1ed918.  return v0;
}
procedure `com.google.android.material.transformation.ExpandableBehavior` `from`(`android.view.View` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.from:(Landroid/view/View;Ljava/lang/Class;)Lcom/google/android/material/transformation/ExpandableBehavior;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1eda48.  call temp:= `getLayoutParams`(v1) @signature `Landroid/view/View;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L1eda4e.  v1:= temp @kind object;
  #L1eda50.  v0:= instanceof @variable v1 @type ^`androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams` @kind boolean;
  #L1eda54.  if v0 == 0 then goto L1eda8a;
  #L1eda58.  v1:= (`androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams`) v1 @kind object;
  #L1eda5c.  call temp:= `getBehavior`(v1) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout$LayoutParams;.getBehavior:()Landroidx/coordinatorlayout/widget/CoordinatorLayout$Behavior;` @kind virtual;
  #L1eda62.  v1:= temp @kind object;
  #L1eda64.  v0:= instanceof @variable v1 @type ^`com.google.android.material.transformation.ExpandableBehavior` @kind boolean;
  #L1eda68.  if v0 == 0 then goto L1eda7a;
  #L1eda6c.  call temp:= `cast`(v2, v1) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1eda72.  v1:= temp @kind object;
  #L1eda74.  v1:= (`com.google.android.material.transformation.ExpandableBehavior`) v1 @kind object;
  #L1eda78.  return v1 @kind object;
  #L1eda7a.  v1:= new `java.lang.IllegalArgumentException`;
  #L1eda7e.  v2:= "The view is not associated with ExpandableBehavior" @kind object;
  #L1eda82.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1eda88.  throw v1;
  #L1eda8a.  v1:= new `java.lang.IllegalArgumentException`;
  #L1eda8e.  v2:= "The view is not a child of CoordinatorLayout" @kind object;
  #L1eda92.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1eda98.  throw v1;
}
procedure `com.google.android.material.expandable.ExpandableWidget` `findExpandableWidget`(`com.google.android.material.transformation.ExpandableBehavior` v5 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v6 @kind object, `android.view.View` v7 @kind object) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.findExpandableWidget:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;)Lcom/google/android/material/expandable/ExpandableWidget;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1ed9f8.  call temp:= `getDependencies`(v6, v7) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout;.getDependencies:(Landroid/view/View;)Ljava/util/List;` @kind virtual;
  #L1ed9fe.  v0:= temp @kind object;
  #L1eda00.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1eda06.  v1:= temp;
  #L1eda08.  v2:= 0I;
  #L1eda0a.  if v2 >= v1 then goto L1eda32;
  #L1eda0e.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1eda14.  v3:= temp @kind object;
  #L1eda16.  v3:= (`android.view.View`) v3 @kind object;
  #L1eda1a.  call temp:= `layoutDependsOn`(v5, v6, v7, v3) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.layoutDependsOn:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;)Z` @kind virtual;
  #L1eda20.  v4:= temp;
  #L1eda22.  if v4 == 0 then goto L1eda2c;
  #L1eda26.  v3:= (`com.google.android.material.expandable.ExpandableWidget`) v3 @kind object;
  #L1eda2a.  return v3 @kind object;
  #L1eda2c.  v2:= v2 + 1;
  #L1eda30.  goto L1eda0a;
  #L1eda32.  v6:= 0I;
  #L1eda34.  return v6 @kind object;
}
procedure `boolean` `layoutDependsOn`(`androidx.coordinatorlayout.widget.CoordinatorLayout` v0 @kind object, `android.view.View` v1 @kind object, `android.view.View` v2 @kind object) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.layoutDependsOn:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `onDependentViewChanged`(`com.google.android.material.transformation.ExpandableBehavior` v1 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v2 @kind object, `android.view.View` v3 @kind object, `android.view.View` v4 @kind object) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.onDependentViewChanged:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ed92c.  v4:= (`com.google.android.material.expandable.ExpandableWidget`) v4 @kind object;
  #L1ed930.  call temp:= `isExpanded`(v4) @signature `Lcom/google/android/material/expandable/ExpandableWidget;.isExpanded:()Z` @kind interface;
  #L1ed936.  v2:= temp;
  #L1ed938.  call temp:= `didStateChange`(v1, v2) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.didStateChange:(Z)Z` @kind direct;
  #L1ed93e.  v2:= temp;
  #L1ed940.  if v2 == 0 then goto L1ed974;
  #L1ed944.  call temp:= `isExpanded`(v4) @signature `Lcom/google/android/material/expandable/ExpandableWidget;.isExpanded:()Z` @kind interface;
  #L1ed94a.  v2:= temp;
  #L1ed94c.  v0:= 1I;
  #L1ed94e.  if v2 == 0 then goto L1ed956;
  #L1ed952.  v2:= 1I;
  #L1ed954.  goto L1ed958;
  #L1ed956.  v2:= 2I;
  #L1ed958.  v1.`com.google.android.material.transformation.ExpandableBehavior.currentState` @type ^`int` := v2;
  #L1ed95c.  v2:= v4 @kind object;
  #L1ed95e.  v2:= (`android.view.View`) v2 @kind object;
  #L1ed962.  call temp:= `isExpanded`(v4) @signature `Lcom/google/android/material/expandable/ExpandableWidget;.isExpanded:()Z` @kind interface;
  #L1ed968.  v4:= temp;
  #L1ed96a.  call temp:= `onExpandedStateChange`(v1, v2, v3, v4, v0) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.onExpandedStateChange:(Landroid/view/View;Landroid/view/View;ZZ)Z` @kind virtual;
  #L1ed970.  v2:= temp;
  #L1ed972.  return v2;
  #L1ed974.  v2:= 0I;
  #L1ed976.  return v2;
}
procedure `boolean` `onExpandedStateChange`(`android.view.View` v0 @kind object, `android.view.View` v1 @kind object, `boolean` v2 , `boolean` v3 ) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.onExpandedStateChange:(Landroid/view/View;Landroid/view/View;ZZ)Z` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `onLayoutChild`(`com.google.android.material.transformation.ExpandableBehavior` v2 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v3 @kind object, `android.view.View` v4 @kind object, `int` v5 ) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.onLayoutChild:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ed988.  call temp:= `isLaidOut`(v4) @signature `Landroidx/core/view/ViewCompat;.isLaidOut:(Landroid/view/View;)Z` @kind static;
  #L1ed98e.  v5:= temp;
  #L1ed990.  if v5 != 0 then goto L1ed9e2;
  #L1ed994.  call temp:= `findExpandableWidget`(v2, v3, v4) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.findExpandableWidget:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;)Lcom/google/android/material/expandable/ExpandableWidget;` @kind virtual;
  #L1ed99a.  v3:= temp @kind object;
  #L1ed99c.  if v3 == 0 then goto L1ed9e2;
  #L1ed9a0.  call temp:= `isExpanded`(v3) @signature `Lcom/google/android/material/expandable/ExpandableWidget;.isExpanded:()Z` @kind interface;
  #L1ed9a6.  v5:= temp;
  #L1ed9a8.  call temp:= `didStateChange`(v2, v5) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.didStateChange:(Z)Z` @kind direct;
  #L1ed9ae.  v5:= temp;
  #L1ed9b0.  if v5 == 0 then goto L1ed9e2;
  #L1ed9b4.  call temp:= `isExpanded`(v3) @signature `Lcom/google/android/material/expandable/ExpandableWidget;.isExpanded:()Z` @kind interface;
  #L1ed9ba.  v5:= temp;
  #L1ed9bc.  if v5 == 0 then goto L1ed9c4;
  #L1ed9c0.  v5:= 1I;
  #L1ed9c2.  goto L1ed9c6;
  #L1ed9c4.  v5:= 2I;
  #L1ed9c6.  v2.`com.google.android.material.transformation.ExpandableBehavior.currentState` @type ^`int` := v5;
  #L1ed9ca.  call temp:= `getViewTreeObserver`(v4) @signature `Landroid/view/View;.getViewTreeObserver:()Landroid/view/ViewTreeObserver;` @kind virtual;
  #L1ed9d0.  v0:= temp @kind object;
  #L1ed9d2.  v1:= new `com.google.android.material.transformation.ExpandableBehavior$1`;
  #L1ed9d6.  call `<init>`(v1, v2, v4, v5, v3) @signature `Lcom/google/android/material/transformation/ExpandableBehavior$1;.<init>:(Lcom/google/android/material/transformation/ExpandableBehavior;Landroid/view/View;ILcom/google/android/material/expandable/ExpandableWidget;)V` @kind direct;
  #L1ed9dc.  call `addOnPreDrawListener`(v0, v1) @signature `Landroid/view/ViewTreeObserver;.addOnPreDrawListener:(Landroid/view/ViewTreeObserver$OnPreDrawListener;)V` @kind virtual;
  #L1ed9e2.  v3:= 0I;
  #L1ed9e4.  return v3;
}
