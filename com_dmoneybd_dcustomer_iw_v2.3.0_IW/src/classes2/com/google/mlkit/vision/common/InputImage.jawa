record `com.google.mlkit.vision.common.InputImage` @kind class @AccessFlag PUBLIC extends `com.google.mlkit.common.sdkinternal.MLTaskInput` @kind interface {
  `android.graphics.Bitmap` `com.google.mlkit.vision.common.InputImage.zza` @AccessFlag PRIVATE_VOLATILE;
  `java.nio.ByteBuffer` `com.google.mlkit.vision.common.InputImage.zzb` @AccessFlag PRIVATE_VOLATILE;
  `com.google.mlkit.vision.common.InputImage$zza` `com.google.mlkit.vision.common.InputImage.zzc` @AccessFlag PRIVATE_VOLATILE;
  `int` `com.google.mlkit.vision.common.InputImage.zzd` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.mlkit.vision.common.InputImage.zze` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.mlkit.vision.common.InputImage.zzf` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.mlkit.vision.common.InputImage.zzg` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.google.mlkit.vision.common.InputImage.IMAGE_FORMAT_BITMAP` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.mlkit.vision.common.InputImage.IMAGE_FORMAT_NV21` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.mlkit.vision.common.InputImage.IMAGE_FORMAT_YUV_420_888` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.mlkit.vision.common.InputImage.IMAGE_FORMAT_YV12` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.google.mlkit.vision.common.InputImage` v1 @kind this, `android.graphics.Bitmap` v2 @kind object, `int` v3 ) @signature `Lcom/google/mlkit/vision/common/InputImage;.<init>:(Landroid/graphics/Bitmap;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L243f8c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L243f92.  call temp:= `checkNotNull`(v2) @signature `Lcom/google/android/gms/common/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L243f98.  v0:= temp @kind object;
  #L243f9a.  v0:= (`android.graphics.Bitmap`) v0 @kind object;
  #L243f9e.  v1.`com.google.mlkit.vision.common.InputImage.zza` @type ^`android.graphics.Bitmap` := v0 @kind object;
  #L243fa2.  call temp:= `getWidth`(v2) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L243fa8.  v0:= temp;
  #L243faa.  v1.`com.google.mlkit.vision.common.InputImage.zzd` @type ^`int` := v0;
  #L243fae.  call temp:= `getHeight`(v2) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L243fb4.  v2:= temp;
  #L243fb6.  v1.`com.google.mlkit.vision.common.InputImage.zze` @type ^`int` := v2;
  #L243fba.  v1.`com.google.mlkit.vision.common.InputImage.zzf` @type ^`int` := v3;
  #L243fbe.  v2:= -1I;
  #L243fc0.  v1.`com.google.mlkit.vision.common.InputImage.zzg` @type ^`int` := v2;
  #L243fc4.  return @kind void;
}
procedure `void` `<init>`(`com.google.mlkit.vision.common.InputImage` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object, `int` v3 , `int` v4 , `int` v5 , `int` v6 ) @signature `Lcom/google/mlkit/vision/common/InputImage;.<init>:(Ljava/nio/ByteBuffer;IIII)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L244050.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L244056.  v0:= 842094169I;
  #L24405c.  if v6 == v0 then goto L24406e;
  #L244060.  v0:= 17I;
  #L244064.  if v6 != v0 then goto L24406a;
  #L244068.  goto L24406e;
  #L24406a.  v0:= 0I;
  #L24406c.  goto L244070;
  #L24406e.  v0:= 1I;
  #L244070.  call `checkArgument`(v0) @signature `Lcom/google/android/gms/common/internal/Preconditions;.checkArgument:(Z)V` @kind static;
  #L244076.  call temp:= `checkNotNull`(v2) @signature `Lcom/google/android/gms/common/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L24407c.  v0:= temp @kind object;
  #L24407e.  v0:= (`java.nio.ByteBuffer`) v0 @kind object;
  #L244082.  v1.`com.google.mlkit.vision.common.InputImage.zzb` @type ^`java.nio.ByteBuffer` := v0 @kind object;
  #L244086.  call temp:= `rewind`(v2) @signature `Ljava/nio/ByteBuffer;.rewind:()Ljava/nio/Buffer;` @kind virtual;
  #L24408c.  v1.`com.google.mlkit.vision.common.InputImage.zzd` @type ^`int` := v3;
  #L244090.  v1.`com.google.mlkit.vision.common.InputImage.zze` @type ^`int` := v4;
  #L244094.  v1.`com.google.mlkit.vision.common.InputImage.zzf` @type ^`int` := v5;
  #L244098.  v1.`com.google.mlkit.vision.common.InputImage.zzg` @type ^`int` := v6;
  #L24409c.  return @kind void;
}
procedure `void` `<init>`(`com.google.mlkit.vision.common.InputImage` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `int` v9 , `int` v10 , `int` v11 ) @signature `Lcom/google/mlkit/vision/common/InputImage;.<init>:([BIIII)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L244018.  call temp:= `checkNotNull`(v7) @signature `Lcom/google/android/gms/common/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L24401e.  v7:= temp @kind object;
  #L244020.  v7:= (`byte`[]) v7 @kind object;
  #L244024.  call temp:= `wrap`(v7) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L24402a.  v1:= temp @kind object;
  #L24402c.  v0:= v6 @kind object;
  #L24402e.  v2:= v8;
  #L244030.  v3:= v9;
  #L244032.  v4:= v10;
  #L244034.  v5:= v11;
  #L244036.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/mlkit/vision/common/InputImage;.<init>:(Ljava/nio/ByteBuffer;IIII)V` @kind direct;
  #L24403c.  return @kind void;
}
procedure `void` `<init>`(`com.google.mlkit.vision.common.InputImage` v1 @kind this, `android.media.Image$Plane`[] v2 @kind object, `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/google/mlkit/vision/common/InputImage;.<init>:([Landroid/media/Image$Plane;III)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L243fd8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L243fde.  call temp:= `checkNotNull`(v2) @signature `Lcom/google/android/gms/common/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L243fe4.  v0:= new `com.google.mlkit.vision.common.InputImage$zza`;
  #L243fe8.  call `<init>`(v0, v2) @signature `Lcom/google/mlkit/vision/common/InputImage$zza;.<init>:([Landroid/media/Image$Plane;)V` @kind direct;
  #L243fee.  v1.`com.google.mlkit.vision.common.InputImage.zzc` @type ^`com.google.mlkit.vision.common.InputImage$zza` := v0 @kind object;
  #L243ff2.  v1.`com.google.mlkit.vision.common.InputImage.zzd` @type ^`int` := v3;
  #L243ff6.  v1.`com.google.mlkit.vision.common.InputImage.zze` @type ^`int` := v4;
  #L243ffa.  v1.`com.google.mlkit.vision.common.InputImage.zzf` @type ^`int` := v5;
  #L243ffe.  v2:= 35I;
  #L244002.  v1.`com.google.mlkit.vision.common.InputImage.zzg` @type ^`int` := v2;
  #L244006.  return @kind void;
}
procedure `com.google.mlkit.vision.common.InputImage` `fromBitmap`(`android.graphics.Bitmap` v9 @kind object, `int` v10 ) @signature `Lcom/google/mlkit/vision/common/InputImage;.fromBitmap:(Landroid/graphics/Bitmap;I)Lcom/google/mlkit/vision/common/InputImage;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L243c50.  call temp:= `elapsedRealtime`() @signature `Landroid/os/SystemClock;.elapsedRealtime:()J` @kind static;
  #L243c56.  v2:= temp @kind wide;
  #L243c58.  v8:= new `com.google.mlkit.vision.common.InputImage`;
  #L243c5c.  call `<init>`(v8, v9, v10) @signature `Lcom/google/mlkit/vision/common/InputImage;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L243c62.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L243c66.  v1:= 19I;
  #L243c6a.  if v0 <= v1 then goto L243c78;
  #L243c6e.  call temp:= `getAllocationByteCount`(v9) @signature `Landroid/graphics/Bitmap;.getAllocationByteCount:()I` @kind virtual;
  #L243c74.  v9:= temp;
  #L243c76.  goto L243c80;
  #L243c78.  call temp:= `getByteCount`(v9) @signature `Landroid/graphics/Bitmap;.getByteCount:()I` @kind virtual;
  #L243c7e.  v9:= temp;
  #L243c80.  v6:= v9;
  #L243c82.  v0:= -1I;
  #L243c84.  v1:= 1I;
  #L243c86.  v4:= -1I;
  #L243c88.  v5:= -1I;
  #L243c8a.  v7:= v10;
  #L243c8c.  call `zza`(v0, v1, v2, v4, v5, v6, v7) @signature `Lcom/google/android/gms/internal/mlkit_vision_common/zzcu;.zza:(IIJIIII)V` @kind static;
  #L243c92.  return v8 @kind object;
}
procedure `com.google.mlkit.vision.common.InputImage` `fromByteArray`(`byte`[] v11 @kind object, `int` v12 , `int` v13 , `int` v14 , `int` v15 ) @signature `Lcom/google/mlkit/vision/common/InputImage;.fromByteArray:([BIIII)Lcom/google/mlkit/vision/common/InputImage;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L243ca4.  call temp:= `elapsedRealtime`() @signature `Landroid/os/SystemClock;.elapsedRealtime:()J` @kind static;
  #L243caa.  v2:= temp @kind wide;
  #L243cac.  v10:= new `com.google.mlkit.vision.common.InputImage`;
  #L243cb0.  v4:= v10 @kind object;
  #L243cb2.  v5:= v11 @kind object;
  #L243cb4.  v6:= v12;
  #L243cb6.  v7:= v13;
  #L243cb8.  v8:= v14;
  #L243cba.  v9:= v15;
  #L243cbc.  call `<init>`(v4, v5, v6, v7, v8, v9) @signature `Lcom/google/mlkit/vision/common/InputImage;.<init>:([BIIII)V` @kind direct;
  #L243cc2.  v6:= length @variable v11;
  #L243cc4.  v1:= 2I;
  #L243cc6.  v0:= v15;
  #L243cc8.  v4:= v13;
  #L243cca.  v5:= v12;
  #L243ccc.  v7:= v14;
  #L243cce.  call `zza`(v0, v1, v2, v4, v5, v6, v7) @signature `Lcom/google/android/gms/internal/mlkit_vision_common/zzcu;.zza:(IIJIIII)V` @kind static;
  #L243cd4.  return v10 @kind object;
}
procedure `com.google.mlkit.vision.common.InputImage` `fromByteBuffer`(`java.nio.ByteBuffer` v11 @kind object, `int` v12 , `int` v13 , `int` v14 , `int` v15 ) @signature `Lcom/google/mlkit/vision/common/InputImage;.fromByteBuffer:(Ljava/nio/ByteBuffer;IIII)Lcom/google/mlkit/vision/common/InputImage;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L243ce8.  call temp:= `elapsedRealtime`() @signature `Landroid/os/SystemClock;.elapsedRealtime:()J` @kind static;
  #L243cee.  v2:= temp @kind wide;
  #L243cf0.  v10:= new `com.google.mlkit.vision.common.InputImage`;
  #L243cf4.  v4:= v10 @kind object;
  #L243cf6.  v5:= v11 @kind object;
  #L243cf8.  v6:= v12;
  #L243cfa.  v7:= v13;
  #L243cfc.  v8:= v14;
  #L243cfe.  v9:= v15;
  #L243d00.  call `<init>`(v4, v5, v6, v7, v8, v9) @signature `Lcom/google/mlkit/vision/common/InputImage;.<init>:(Ljava/nio/ByteBuffer;IIII)V` @kind direct;
  #L243d06.  call temp:= `limit`(v11) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L243d0c.  v6:= temp;
  #L243d0e.  v1:= 3I;
  #L243d10.  v0:= v15;
  #L243d12.  v4:= v13;
  #L243d14.  v5:= v12;
  #L243d16.  v7:= v14;
  #L243d18.  call `zza`(v0, v1, v2, v4, v5, v6, v7) @signature `Lcom/google/android/gms/internal/mlkit_vision_common/zzcu;.zza:(IIJIIII)V` @kind static;
  #L243d1e.  return v10 @kind object;
}
procedure `com.google.mlkit.vision.common.InputImage` `fromFilePath`(`android.content.Context` v9 @kind object, `android.net.Uri` v10 @kind object) @signature `Lcom/google/mlkit/vision/common/InputImage;.fromFilePath:(Landroid/content/Context;Landroid/net/Uri;)Lcom/google/mlkit/vision/common/InputImage;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L243d30.  v0:= "Please provide a valid Context" @kind object;
  #L243d34.  call temp:= `checkNotNull`(v9, v0) @signature `Lcom/google/android/gms/common/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L243d3a.  v0:= "Please provide a valid imageUri" @kind object;
  #L243d3e.  call temp:= `checkNotNull`(v10, v0) @signature `Lcom/google/android/gms/common/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L243d44.  call temp:= `elapsedRealtime`() @signature `Landroid/os/SystemClock;.elapsedRealtime:()J` @kind static;
  #L243d4a.  v3:= temp @kind wide;
  #L243d4c.  call temp:= `getInstance`() @signature `Lcom/google/mlkit/vision/common/internal/ImageUtils;.getInstance:()Lcom/google/mlkit/vision/common/internal/ImageUtils;` @kind static;
  #L243d52.  call temp:= `getContentResolver`(v9) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L243d58.  v9:= temp @kind object;
  #L243d5a.  call temp:= `zza`(v9, v10) @signature `Lcom/google/mlkit/vision/common/internal/ImageUtils;.zza:(Landroid/content/ContentResolver;Landroid/net/Uri;)Landroid/graphics/Bitmap;` @kind static;
  #L243d60.  v9:= temp @kind object;
  #L243d62.  v10:= new `com.google.mlkit.vision.common.InputImage`;
  #L243d66.  v0:= 0I;
  #L243d68.  call `<init>`(v10, v9, v0) @signature `Lcom/google/mlkit/vision/common/InputImage;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L243d6e.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L243d72.  v1:= 19I;
  #L243d76.  if v0 <= v1 then goto L243d84;
  #L243d7a.  call temp:= `getAllocationByteCount`(v9) @signature `Landroid/graphics/Bitmap;.getAllocationByteCount:()I` @kind virtual;
  #L243d80.  v9:= temp;
  #L243d82.  goto L243d8c;
  #L243d84.  call temp:= `getByteCount`(v9) @signature `Landroid/graphics/Bitmap;.getByteCount:()I` @kind virtual;
  #L243d8a.  v9:= temp;
  #L243d8c.  v7:= v9;
  #L243d8e.  v8:= 0I;
  #L243d90.  v1:= -1I;
  #L243d92.  v2:= 4I;
  #L243d94.  v5:= -1I;
  #L243d96.  v6:= -1I;
  #L243d98.  call `zza`(v1, v2, v3, v5, v6, v7, v8) @signature `Lcom/google/android/gms/internal/mlkit_vision_common/zzcu;.zza:(IIJIIII)V` @kind static;
  #L243d9e.  return v10 @kind object;
}
procedure `com.google.mlkit.vision.common.InputImage` `fromMediaImage`(`android.media.Image` v9 @kind object, `int` v10 ) @signature `Lcom/google/mlkit/vision/common/InputImage;.fromMediaImage:(Landroid/media/Image;I)Lcom/google/mlkit/vision/common/InputImage;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L243db0.  call temp:= `elapsedRealtime`() @signature `Landroid/os/SystemClock;.elapsedRealtime:()J` @kind static;
  #L243db6.  v2:= temp @kind wide;
  #L243db8.  v0:= "Please provide a valid image" @kind object;
  #L243dbc.  call temp:= `checkNotNull`(v9, v0) @signature `Lcom/google/android/gms/common/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L243dc2.  v0:= 1I;
  #L243dc4.  v1:= 0I;
  #L243dc6.  if v10 == 0 then goto L243de8;
  #L243dca.  v4:= 90I;
  #L243dce.  if v10 == v4 then goto L243de8;
  #L243dd2.  v4:= 180I;
  #L243dd6.  if v10 == v4 then goto L243de8;
  #L243dda.  v4:= 270I;
  #L243dde.  if v10 != v4 then goto L243de4;
  #L243de2.  goto L243de8;
  #L243de4.  v4:= 0I;
  #L243de6.  goto L243dea;
  #L243de8.  v4:= 1I;
  #L243dea.  v5:= "Invalid rotation. Only 0, 90, 180, 270 are supported currently." @kind object;
  #L243dee.  call `checkArgument`(v4, v5) @signature `Lcom/google/android/gms/common/internal/Preconditions;.checkArgument:(ZLjava/lang/Object;)V` @kind static;
  #L243df4.  call temp:= `getFormat`(v9) @signature `Landroid/media/Image;.getFormat:()I` @kind virtual;
  #L243dfa.  v4:= temp;
  #L243dfc.  v5:= 256I;
  #L243e00.  if v4 == v5 then goto L243e18;
  #L243e04.  call temp:= `getFormat`(v9) @signature `Landroid/media/Image;.getFormat:()I` @kind virtual;
  #L243e0a.  v4:= temp;
  #L243e0c.  v6:= 35I;
  #L243e10.  if v4 != v6 then goto L243e16;
  #L243e14.  goto L243e18;
  #L243e16.  v0:= 0I;
  #L243e18.  v4:= "Only JPEG and YUV_420_888 are supported now" @kind object;
  #L243e1c.  call `checkArgument`(v0, v4) @signature `Lcom/google/android/gms/common/internal/Preconditions;.checkArgument:(ZLjava/lang/Object;)V` @kind static;
  #L243e22.  call temp:= `getPlanes`(v9) @signature `Landroid/media/Image;.getPlanes:()[Landroid/media/Image$Plane;` @kind virtual;
  #L243e28.  v0:= temp @kind object;
  #L243e2a.  call temp:= `getFormat`(v9) @signature `Landroid/media/Image;.getFormat:()I` @kind virtual;
  #L243e30.  v4:= temp;
  #L243e32.  if v4 != v5 then goto L243e72;
  #L243e36.  call temp:= `getPlanes`(v9) @signature `Landroid/media/Image;.getPlanes:()[Landroid/media/Image$Plane;` @kind virtual;
  #L243e3c.  v0:= temp @kind object;
  #L243e3e.  v0:= v0[v1] @kind object;
  #L243e42.  call temp:= `getBuffer`(v0) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L243e48.  v0:= temp @kind object;
  #L243e4a.  call temp:= `limit`(v0) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L243e50.  v0:= temp;
  #L243e52.  v4:= new `com.google.mlkit.vision.common.InputImage`;
  #L243e56.  call temp:= `getInstance`() @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.getInstance:()Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;` @kind static;
  #L243e5c.  v5:= temp @kind object;
  #L243e5e.  call temp:= `convertJpegToUpRightBitmap`(v5, v9, v10) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.convertJpegToUpRightBitmap:(Landroid/media/Image;I)Landroid/graphics/Bitmap;` @kind virtual;
  #L243e64.  v5:= temp @kind object;
  #L243e66.  call `<init>`(v4, v5, v1) @signature `Lcom/google/mlkit/vision/common/InputImage;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L243e6c.  v6:= v0;
  #L243e6e.  v8:= v4 @kind object;
  #L243e70.  goto L243ede;
  #L243e72.  v4:= length @variable v0;
  #L243e74.  v5:= 0I;
  #L243e76.  if v5 >= v4 then goto L243e9e;
  #L243e7a.  v6:= v0[v5] @kind object;
  #L243e7e.  call temp:= `getBuffer`(v6) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L243e84.  v7:= temp @kind object;
  #L243e86.  if v7 == 0 then goto L243e98;
  #L243e8a.  call temp:= `getBuffer`(v6) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L243e90.  v6:= temp @kind object;
  #L243e92.  call temp:= `rewind`(v6) @signature `Ljava/nio/ByteBuffer;.rewind:()Ljava/nio/Buffer;` @kind virtual;
  #L243e98.  v5:= v5 + 1;
  #L243e9c.  goto L243e76;
  #L243e9e.  v4:= new `com.google.mlkit.vision.common.InputImage`;
  #L243ea2.  call temp:= `getWidth`(v9) @signature `Landroid/media/Image;.getWidth:()I` @kind virtual;
  #L243ea8.  v5:= temp;
  #L243eaa.  call temp:= `getHeight`(v9) @signature `Landroid/media/Image;.getHeight:()I` @kind virtual;
  #L243eb0.  v6:= temp;
  #L243eb2.  call `<init>`(v4, v0, v5, v6, v10) @signature `Lcom/google/mlkit/vision/common/InputImage;.<init>:([Landroid/media/Image$Plane;III)V` @kind direct;
  #L243eb8.  call temp:= `getPlanes`(v9) @signature `Landroid/media/Image;.getPlanes:()[Landroid/media/Image$Plane;` @kind virtual;
  #L243ebe.  v0:= temp @kind object;
  #L243ec0.  v0:= v0[v1] @kind object;
  #L243ec4.  call temp:= `getBuffer`(v0) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L243eca.  v0:= temp @kind object;
  #L243ecc.  call temp:= `limit`(v0) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L243ed2.  v0:= temp;
  #L243ed4.  v0:= v0 * 3;
  #L243ed8.  v0:= v0 / 2;
  #L243edc.  goto L243e6c;
  #L243ede.  call temp:= `getFormat`(v9) @signature `Landroid/media/Image;.getFormat:()I` @kind virtual;
  #L243ee4.  v0:= temp;
  #L243ee6.  v1:= 5I;
  #L243ee8.  call temp:= `getHeight`(v9) @signature `Landroid/media/Image;.getHeight:()I` @kind virtual;
  #L243eee.  v4:= temp;
  #L243ef0.  call temp:= `getWidth`(v9) @signature `Landroid/media/Image;.getWidth:()I` @kind virtual;
  #L243ef6.  v5:= temp;
  #L243ef8.  v7:= v10;
  #L243efa.  call `zza`(v0, v1, v2, v4, v5, v6, v7) @signature `Lcom/google/android/gms/internal/mlkit_vision_common/zzcu;.zza:(IIJIIII)V` @kind static;
  #L243f00.  return v8 @kind object;
}
procedure `android.graphics.Bitmap` `getBitmapInternal`(`com.google.mlkit.vision.common.InputImage` v1 @kind this) @signature `Lcom/google/mlkit/vision/common/InputImage;.getBitmapInternal:()Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L243c0c.  v0:= v1.`com.google.mlkit.vision.common.InputImage.zza` @type ^`android.graphics.Bitmap` @kind object;
  #L243c10.  return v0 @kind object;
}
procedure `java.nio.ByteBuffer` `getByteBuffer`(`com.google.mlkit.vision.common.InputImage` v1 @kind this) @signature `Lcom/google/mlkit/vision/common/InputImage;.getByteBuffer:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L243f74.  v0:= v1.`com.google.mlkit.vision.common.InputImage.zzb` @type ^`java.nio.ByteBuffer` @kind object;
  #L243f78.  return v0 @kind object;
}
procedure `int` `getFormat`(`com.google.mlkit.vision.common.InputImage` v1 @kind this) @signature `Lcom/google/mlkit/vision/common/InputImage;.getFormat:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L243f14.  v0:= v1.`com.google.mlkit.vision.common.InputImage.zzg` @type ^`int`;
  #L243f18.  return v0;
}
procedure `int` `getHeight`(`com.google.mlkit.vision.common.InputImage` v1 @kind this) @signature `Lcom/google/mlkit/vision/common/InputImage;.getHeight:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L243f2c.  v0:= v1.`com.google.mlkit.vision.common.InputImage.zze` @type ^`int`;
  #L243f30.  return v0;
}
procedure `android.media.Image$Plane`[] `getPlanes`(`com.google.mlkit.vision.common.InputImage` v1 @kind this) @signature `Lcom/google/mlkit/vision/common/InputImage;.getPlanes:()[Landroid/media/Image$Plane;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L243c24.  v0:= v1.`com.google.mlkit.vision.common.InputImage.zzc` @type ^`com.google.mlkit.vision.common.InputImage$zza` @kind object;
  #L243c28.  if v0 != 0 then goto L243c30;
  #L243c2c.  v0:= 0I;
  #L243c2e.  return v0 @kind object;
  #L243c30.  v0:= v1.`com.google.mlkit.vision.common.InputImage.zzc` @type ^`com.google.mlkit.vision.common.InputImage$zza` @kind object;
  #L243c34.  call temp:= `a`(v0) @signature `Lcom/google/mlkit/vision/common/InputImage$zza;.a:()[Landroid/media/Image$Plane;` @kind virtual;
  #L243c3a.  v0:= temp @kind object;
  #L243c3c.  return v0 @kind object;
}
procedure `int` `getRotationDegrees`(`com.google.mlkit.vision.common.InputImage` v1 @kind this) @signature `Lcom/google/mlkit/vision/common/InputImage;.getRotationDegrees:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L243f44.  v0:= v1.`com.google.mlkit.vision.common.InputImage.zzf` @type ^`int`;
  #L243f48.  return v0;
}
procedure `int` `getWidth`(`com.google.mlkit.vision.common.InputImage` v1 @kind this) @signature `Lcom/google/mlkit/vision/common/InputImage;.getWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L243f5c.  v0:= v1.`com.google.mlkit.vision.common.InputImage.zzd` @type ^`int`;
  #L243f60.  return v0;
}
