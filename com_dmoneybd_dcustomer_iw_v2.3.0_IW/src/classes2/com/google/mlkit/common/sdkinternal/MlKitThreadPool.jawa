record `com.google.mlkit.common.sdkinternal.MlKitThreadPool` @kind class @AccessFlag PUBLIC extends `com.google.android.gms.internal.mlkit_common.zzal` @kind class {
  `java.util.concurrent.ExecutorService` `com.google.mlkit.common.sdkinternal.MlKitThreadPool.zza` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ThreadFactory` `com.google.mlkit.common.sdkinternal.MlKitThreadPool.zzb` @AccessFlag PRIVATE_FINAL;
  `java.util.WeakHashMap` `com.google.mlkit.common.sdkinternal.MlKitThreadPool.zzc` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.ThreadLocal` `@@com.google.mlkit.common.sdkinternal.MlKitThreadPool.zzd` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/mlkit/common/sdkinternal/MlKitThreadPool;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L23cecc.  v0:= new `com.google.mlkit.common.sdkinternal.zzj`;
  #L23ced0.  call `<init>`(v0) @signature `Lcom/google/mlkit/common/sdkinternal/zzj;.<init>:()V` @kind direct;
  #L23ced6.  `@@com.google.mlkit.common.sdkinternal.MlKitThreadPool.zzd` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L23ceda.  return @kind void;
}
procedure `void` `<init>`(`com.google.mlkit.common.sdkinternal.MlKitThreadPool` v9 @kind this) @signature `Lcom/google/mlkit/common/sdkinternal/MlKitThreadPool;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L23ceec.  call `<init>`(v9) @signature `Lcom/google/android/gms/internal/mlkit_common/zzal;.<init>:()V` @kind direct;
  #L23cef2.  v8:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L23cef6.  call temp:= `getRuntime`() @signature `Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;` @kind static;
  #L23cefc.  v0:= temp @kind object;
  #L23cefe.  call temp:= `availableProcessors`(v0) @signature `Ljava/lang/Runtime;.availableProcessors:()I` @kind virtual;
  #L23cf04.  v2:= temp;
  #L23cf06.  v5:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L23cf0a.  v6:= new `java.util.concurrent.LinkedBlockingQueue`;
  #L23cf0e.  call `<init>`(v6) @signature `Ljava/util/concurrent/LinkedBlockingQueue;.<init>:()V` @kind direct;
  #L23cf14.  v7:= new `com.google.mlkit.common.sdkinternal.zzi`;
  #L23cf18.  call `<init>`(v7, v9) @signature `Lcom/google/mlkit/common/sdkinternal/zzi;.<init>:(Lcom/google/mlkit/common/sdkinternal/MlKitThreadPool;)V` @kind direct;
  #L23cf1e.  v1:= 0I;
  #L23cf20.  v3:= 60L;
  #L23cf24.  v0:= v8 @kind object;
  #L23cf26.  call `<init>`(v0, v1, v2, v3, v5, v6, v7) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L23cf2c.  v9.`com.google.mlkit.common.sdkinternal.MlKitThreadPool.zza` @type ^`java.util.concurrent.ExecutorService` := v8 @kind object;
  #L23cf30.  call temp:= `defaultThreadFactory`() @signature `Ljava/util/concurrent/Executors;.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L23cf36.  v0:= temp @kind object;
  #L23cf38.  v9.`com.google.mlkit.common.sdkinternal.MlKitThreadPool.zzb` @type ^`java.util.concurrent.ThreadFactory` := v0 @kind object;
  #L23cf3c.  v0:= new `java.util.WeakHashMap`;
  #L23cf40.  call `<init>`(v0) @signature `Ljava/util/WeakHashMap;.<init>:()V` @kind direct;
  #L23cf46.  v9.`com.google.mlkit.common.sdkinternal.MlKitThreadPool.zzc` @type ^`java.util.WeakHashMap` := v0 @kind object;
  #L23cf4a.  return @kind void;
}
procedure `void` `a`(`java.lang.Runnable` v0 @kind object) @signature `Lcom/google/mlkit/common/sdkinternal/MlKitThreadPool;.a:(Ljava/lang/Runnable;)V` @AccessFlag STATIC_FINAL_SYNTHETIC {
    temp;

  #L23cfc4.  call `zzd`(v0) @signature `Lcom/google/mlkit/common/sdkinternal/MlKitThreadPool;.zzd:(Ljava/lang/Runnable;)V` @kind static;
  #L23cfca.  return @kind void;
}
procedure `java.lang.Thread` `zzc`(`com.google.mlkit.common.sdkinternal.MlKitThreadPool` v3 @kind this, `java.lang.Runnable` v4 @kind object) @signature `Lcom/google/mlkit/common/sdkinternal/MlKitThreadPool;.zzc:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L23ce70.  v0:= v3.`com.google.mlkit.common.sdkinternal.MlKitThreadPool.zzb` @type ^`java.util.concurrent.ThreadFactory` @kind object;
  #L23ce74.  call temp:= `newThread`(v0, v4) @signature `Ljava/util/concurrent/ThreadFactory;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @kind interface;
  #L23ce7a.  v4:= temp @kind object;
  #L23ce7c.  v0:= v3.`com.google.mlkit.common.sdkinternal.MlKitThreadPool.zzc` @type ^`java.util.WeakHashMap` @kind object;
  #L23ce80.  @monitorenter v0
  #L23ce82.  v1:= v3.`com.google.mlkit.common.sdkinternal.MlKitThreadPool.zzc` @type ^`java.util.WeakHashMap` @kind object;
  #L23ce86.  v2:= 0I;
  #L23ce88.  call temp:= `put`(v1, v4, v2) @signature `Ljava/util/WeakHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L23ce8e.  @monitorexit v0
  #L23ce90.  return v4 @kind object;
  #L23ce92.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L23ce94.  @monitorexit v0
  #L23ce96.  throw v4;
  catch `java.lang.Throwable` @[L23ce82..L23ce96] goto L23ce92;
}
procedure `void` `zzd`(`java.lang.Runnable` v3 @kind object) @signature `Lcom/google/mlkit/common/sdkinternal/MlKitThreadPool;.zzd:(Ljava/lang/Runnable;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L23cfdc.  v0:= `@@com.google.mlkit.common.sdkinternal.MlKitThreadPool.zzd` @type ^`java.lang.ThreadLocal` @kind object;
  #L23cfe0.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L23cfe6.  v0:= temp @kind object;
  #L23cfe8.  v0:= (`java.util.Deque`) v0 @kind object;
  #L23cfec.  call temp:= `add`(v0, v3) @signature `Ljava/util/Deque;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L23cff2.  call temp:= `size`(v0) @signature `Ljava/util/Deque;.size:()I` @kind interface;
  #L23cff8.  v1:= temp;
  #L23cffa.  v2:= 1I;
  #L23cffc.  if v1 <= v2 then goto L23d002;
  #L23d000.  return @kind void;
  #L23d002.  call `run`(v3) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L23d008.  call temp:= `removeFirst`(v0) @signature `Ljava/util/Deque;.removeFirst:()Ljava/lang/Object;` @kind interface;
  #L23d00e.  call temp:= `peekFirst`(v0) @signature `Ljava/util/Deque;.peekFirst:()Ljava/lang/Object;` @kind interface;
  #L23d014.  v3:= temp @kind object;
  #L23d016.  v3:= (`java.lang.Runnable`) v3 @kind object;
  #L23d01a.  if v3 != 0 then goto L23d002;
  #L23d01e.  return @kind void;
}
procedure `java.lang.Thread` `b`(`com.google.mlkit.common.sdkinternal.MlKitThreadPool` v0 @kind this, `java.lang.Runnable` v1 @kind object) @signature `Lcom/google/mlkit/common/sdkinternal/MlKitThreadPool;.b:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag FINAL_SYNTHETIC {
    temp;

  #L23ce54.  call temp:= `zzc`(v0, v1) @signature `Lcom/google/mlkit/common/sdkinternal/MlKitThreadPool;.zzc:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @kind direct;
  #L23ce5a.  v1:= temp @kind object;
  #L23ce5c.  return v1 @kind object;
}
procedure `void` `execute`(`com.google.mlkit.common.sdkinternal.MlKitThreadPool` v3 @kind this, `java.lang.Runnable` v4 @kind object) @signature `Lcom/google/mlkit/common/sdkinternal/MlKitThreadPool;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L23cf5c.  v0:= v3.`com.google.mlkit.common.sdkinternal.MlKitThreadPool.zzc` @type ^`java.util.WeakHashMap` @kind object;
  #L23cf60.  @monitorenter v0
  #L23cf62.  v1:= v3.`com.google.mlkit.common.sdkinternal.MlKitThreadPool.zzc` @type ^`java.util.WeakHashMap` @kind object;
  #L23cf66.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L23cf6c.  v2:= temp @kind object;
  #L23cf6e.  call temp:= `containsKey`(v1, v2) @signature `Ljava/util/WeakHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L23cf74.  v1:= temp;
  #L23cf76.  @monitorexit v0
  #L23cf78.  if v1 == 0 then goto L23cf84;
  #L23cf7c.  call `zzd`(v4) @signature `Lcom/google/mlkit/common/sdkinternal/MlKitThreadPool;.zzd:(Ljava/lang/Runnable;)V` @kind static;
  #L23cf82.  return @kind void;
  #L23cf84.  v0:= v3.`com.google.mlkit.common.sdkinternal.MlKitThreadPool.zza` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L23cf88.  v1:= new `com.google.mlkit.common.sdkinternal.zzh`;
  #L23cf8c.  call `<init>`(v1, v4) @signature `Lcom/google/mlkit/common/sdkinternal/zzh;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L23cf92.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L23cf98.  return @kind void;
  #L23cf9a.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L23cf9c.  @monitorexit v0
  #L23cf9e.  throw v4;
  catch `java.lang.Throwable` @[L23cf62..L23cf78] goto L23cf9a;
  catch `java.lang.Throwable` @[L23cf9c..L23cf9e] goto L23cf9a;
}
procedure `java.lang.Object` `zza`(`com.google.mlkit.common.sdkinternal.MlKitThreadPool` v1 @kind this) @signature `Lcom/google/mlkit/common/sdkinternal/MlKitThreadPool;.zza:()Ljava/lang/Object;` @AccessFlag PROTECTED_FINAL_SYNTHETIC {
    temp;
    v0;

  #L23ce38.  call temp:= `zzb`(v1) @signature `Lcom/google/android/gms/internal/mlkit_common/zzal;.zzb:()Ljava/util/concurrent/ExecutorService;` @kind virtual;
  #L23ce3e.  v0:= temp @kind object;
  #L23ce40.  return v0 @kind object;
}
procedure `java.util.concurrent.ExecutorService` `zzb`(`com.google.mlkit.common.sdkinternal.MlKitThreadPool` v1 @kind this) @signature `Lcom/google/mlkit/common/sdkinternal/MlKitThreadPool;.zzb:()Ljava/util/concurrent/ExecutorService;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L23ceb4.  v0:= v1.`com.google.mlkit.common.sdkinternal.MlKitThreadPool.zza` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L23ceb8.  return v0 @kind object;
}
