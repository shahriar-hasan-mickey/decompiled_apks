record `com.google.mlkit.common.sdkinternal.zzi` @kind class @AccessFlag FINAL_SYNTHETIC extends `java.util.concurrent.ThreadFactory` @kind interface {
  `com.google.mlkit.common.sdkinternal.MlKitThreadPool` `com.google.mlkit.common.sdkinternal.zzi.zza` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.mlkit.common.sdkinternal.zzi` v0 @kind this, `com.google.mlkit.common.sdkinternal.MlKitThreadPool` v1 @kind object) @signature `Lcom/google/mlkit/common/sdkinternal/zzi;.<init>:(Lcom/google/mlkit/common/sdkinternal/MlKitThreadPool;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L241148.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24114e.  v0.`com.google.mlkit.common.sdkinternal.zzi.zza` @type ^`com.google.mlkit.common.sdkinternal.MlKitThreadPool` := v1 @kind object;
  #L241152.  return @kind void;
}
procedure `java.lang.Thread` `newThread`(`com.google.mlkit.common.sdkinternal.zzi` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lcom/google/mlkit/common/sdkinternal/zzi;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L241128.  v0:= v1.`com.google.mlkit.common.sdkinternal.zzi.zza` @type ^`com.google.mlkit.common.sdkinternal.MlKitThreadPool` @kind object;
  #L24112c.  call temp:= `b`(v0, v2) @signature `Lcom/google/mlkit/common/sdkinternal/MlKitThreadPool;.b:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @kind virtual;
  #L241132.  v2:= temp @kind object;
  #L241134.  return v2 @kind object;
}
