record `com.google.mlkit.common.sdkinternal.TaskQueue$zza` @kind class @AccessFlag FINAL extends `java.io.Closeable` @kind interface {
  `com.google.mlkit.common.sdkinternal.TaskQueue` `com.google.mlkit.common.sdkinternal.TaskQueue$zza.zza` @AccessFlag PRIVATE_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.mlkit.common.sdkinternal.TaskQueue$zza` v1 @kind this, `com.google.mlkit.common.sdkinternal.TaskQueue` v2 @kind object) @signature `Lcom/google/mlkit/common/sdkinternal/TaskQueue$zza;.<init>:(Lcom/google/mlkit/common/sdkinternal/TaskQueue;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L23dcd8.  v1.`com.google.mlkit.common.sdkinternal.TaskQueue$zza.zza` @type ^`com.google.mlkit.common.sdkinternal.TaskQueue` := v2 @kind object;
  #L23dcdc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23dce2.  call temp:= `a`(v2) @signature `Lcom/google/mlkit/common/sdkinternal/TaskQueue;.a:(Lcom/google/mlkit/common/sdkinternal/TaskQueue;)Ljava/util/concurrent/atomic/AtomicReference;` @kind static;
  #L23dce8.  v2:= temp @kind object;
  #L23dcea.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L23dcf0.  v0:= temp @kind object;
  #L23dcf2.  call temp:= `getAndSet`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L23dcf8.  v2:= temp @kind object;
  #L23dcfa.  v2:= (`java.lang.Thread`) v2 @kind object;
  #L23dcfe.  if v2 != 0 then goto L23dd06;
  #L23dd02.  v2:= 1I;
  #L23dd04.  goto L23dd08;
  #L23dd06.  v2:= 0I;
  #L23dd08.  call `checkState`(v2) @signature `Lcom/google/android/gms/common/internal/Preconditions;.checkState:(Z)V` @kind static;
  #L23dd0e.  return @kind void;
}
procedure `void` `<init>`(`com.google.mlkit.common.sdkinternal.TaskQueue$zza` v0 @kind this, `com.google.mlkit.common.sdkinternal.TaskQueue` v1 @kind object, `com.google.mlkit.common.sdkinternal.zzo` v2 @kind object) @signature `Lcom/google/mlkit/common/sdkinternal/TaskQueue$zza;.<init>:(Lcom/google/mlkit/common/sdkinternal/TaskQueue;Lcom/google/mlkit/common/sdkinternal/zzo;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L23dd20.  call `<init>`(v0, v1) @signature `Lcom/google/mlkit/common/sdkinternal/TaskQueue$zza;.<init>:(Lcom/google/mlkit/common/sdkinternal/TaskQueue;)V` @kind direct;
  #L23dd26.  return @kind void;
}
procedure `void` `close`(`com.google.mlkit.common.sdkinternal.TaskQueue$zza` v2 @kind this) @signature `Lcom/google/mlkit/common/sdkinternal/TaskQueue$zza;.close:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L23dd38.  v0:= v2.`com.google.mlkit.common.sdkinternal.TaskQueue$zza.zza` @type ^`com.google.mlkit.common.sdkinternal.TaskQueue` @kind object;
  #L23dd3c.  call temp:= `a`(v0) @signature `Lcom/google/mlkit/common/sdkinternal/TaskQueue;.a:(Lcom/google/mlkit/common/sdkinternal/TaskQueue;)Ljava/util/concurrent/atomic/AtomicReference;` @kind static;
  #L23dd42.  v0:= temp @kind object;
  #L23dd44.  v1:= 0I;
  #L23dd46.  call `set`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L23dd4c.  v0:= v2.`com.google.mlkit.common.sdkinternal.TaskQueue$zza.zza` @type ^`com.google.mlkit.common.sdkinternal.TaskQueue` @kind object;
  #L23dd50.  call `b`(v0) @signature `Lcom/google/mlkit/common/sdkinternal/TaskQueue;.b:(Lcom/google/mlkit/common/sdkinternal/TaskQueue;)V` @kind static;
  #L23dd56.  return @kind void;
}
