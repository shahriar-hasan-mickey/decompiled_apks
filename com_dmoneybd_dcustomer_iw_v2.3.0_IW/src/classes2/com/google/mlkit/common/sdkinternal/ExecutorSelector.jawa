record `com.google.mlkit.common.sdkinternal.ExecutorSelector` @kind class @AccessFlag PUBLIC {
  `com.google.firebase.inject.Provider` `com.google.mlkit.common.sdkinternal.ExecutorSelector.zza` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.mlkit.common.sdkinternal.ExecutorSelector` v0 @kind this, `com.google.firebase.inject.Provider` v1 @kind object) @signature `Lcom/google/mlkit/common/sdkinternal/ExecutorSelector;.<init>:(Lcom/google/firebase/inject/Provider;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L23c96c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23c972.  v0.`com.google.mlkit.common.sdkinternal.ExecutorSelector.zza` @type ^`com.google.firebase.inject.Provider` := v1 @kind object;
  #L23c976.  return @kind void;
}
procedure `java.util.concurrent.Executor` `getExecutorToUse`(`com.google.mlkit.common.sdkinternal.ExecutorSelector` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object) @signature `Lcom/google/mlkit/common/sdkinternal/ExecutorSelector;.getExecutorToUse:(Ljava/util/concurrent/Executor;)Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC {
    temp;

  #L23c944.  if v1 == 0 then goto L23c94a;
  #L23c948.  return v1 @kind object;
  #L23c94a.  v1:= v0.`com.google.mlkit.common.sdkinternal.ExecutorSelector.zza` @type ^`com.google.firebase.inject.Provider` @kind object;
  #L23c94e.  call temp:= `get`(v1) @signature `Lcom/google/firebase/inject/Provider;.get:()Ljava/lang/Object;` @kind interface;
  #L23c954.  v1:= temp @kind object;
  #L23c956.  v1:= (`java.util.concurrent.Executor`) v1 @kind object;
  #L23c95a.  return v1 @kind object;
}
