record `com.theartofdev.edmodo.cropper.CropWindowMoveHandler` @kind class @AccessFlag FINAL {
  `float` `com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mMaxCropHeight` @AccessFlag PRIVATE_FINAL;
  `float` `com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mMaxCropWidth` @AccessFlag PRIVATE_FINAL;
  `float` `com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mMinCropHeight` @AccessFlag PRIVATE_FINAL;
  `float` `com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mMinCropWidth` @AccessFlag PRIVATE_FINAL;
  `android.graphics.PointF` `com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mTouchOffset` @AccessFlag PRIVATE_FINAL;
  `com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` `com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mType` @AccessFlag PRIVATE_FINAL;
}
global `android.graphics.Matrix` `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler.MATRIX` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c58a8.  v0:= new `android.graphics.Matrix`;
  #L2c58ac.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L2c58b2.  `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler.MATRIX` @type ^`android.graphics.Matrix` := v0 @kind object;
  #L2c58b6.  return @kind void;
}
procedure `void` `<init>`(`com.theartofdev.edmodo.cropper.CropWindowMoveHandler` v1 @kind this, `com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` v2 @kind object, `com.theartofdev.edmodo.cropper.CropWindowHandler` v3 @kind object, `float` v4 , `float` v5 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.<init>:(Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler$Type;Lcom/theartofdev/edmodo/cropper/CropWindowHandler;FF)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c58c8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c58ce.  v0:= new `android.graphics.PointF`;
  #L2c58d2.  call `<init>`(v0) @signature `Landroid/graphics/PointF;.<init>:()V` @kind direct;
  #L2c58d8.  v1.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mTouchOffset` @type ^`android.graphics.PointF` := v0 @kind object;
  #L2c58dc.  v1.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mType` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` := v2 @kind object;
  #L2c58e0.  call temp:= `getMinCropWidth`(v3) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.getMinCropWidth:()F` @kind virtual;
  #L2c58e6.  v2:= temp;
  #L2c58e8.  v1.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mMinCropWidth` @type ^`float` := v2;
  #L2c58ec.  call temp:= `getMinCropHeight`(v3) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.getMinCropHeight:()F` @kind virtual;
  #L2c58f2.  v2:= temp;
  #L2c58f4.  v1.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mMinCropHeight` @type ^`float` := v2;
  #L2c58f8.  call temp:= `getMaxCropWidth`(v3) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.getMaxCropWidth:()F` @kind virtual;
  #L2c58fe.  v2:= temp;
  #L2c5900.  v1.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mMaxCropWidth` @type ^`float` := v2;
  #L2c5904.  call temp:= `getMaxCropHeight`(v3) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.getMaxCropHeight:()F` @kind virtual;
  #L2c590a.  v2:= temp;
  #L2c590c.  v1.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mMaxCropHeight` @type ^`float` := v2;
  #L2c5910.  call temp:= `getRect`(v3) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.getRect:()Landroid/graphics/RectF;` @kind virtual;
  #L2c5916.  v2:= temp @kind object;
  #L2c5918.  call `calculateTouchOffset`(v1, v2, v4, v5) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.calculateTouchOffset:(Landroid/graphics/RectF;FF)V` @kind direct;
  #L2c591e.  return @kind void;
}
procedure `void` `adjustBottom`(`com.theartofdev.edmodo.cropper.CropWindowMoveHandler` v4 @kind this, `android.graphics.RectF` v5 @kind object, `float` v6 , `android.graphics.RectF` v7 @kind object, `int` v8 , `float` v9 , `float` v10 , `boolean` v11 , `boolean` v12 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustBottom:(Landroid/graphics/RectF;FLandroid/graphics/RectF;IFFZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c5930.  v8:= (`float`) v8 @kind i2f;
  #L2c5932.  v0:= fcmpl(v6, v8);
  #L2c5936.  if v0 <= 0 then goto L2c5960;
  #L2c593a.  v6:= v6 - v8 @kind float;
  #L2c593c.  v0:= 1065772646I;
  #L2c5942.  v6:= v6 / v0 @kind float;
  #L2c5944.  v6:= v6 + v8 @kind float;
  #L2c5946.  v0:= v4.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mTouchOffset` @type ^`android.graphics.PointF` @kind object;
  #L2c594a.  v1:= v0.`android.graphics.PointF.y` @type ^`float`;
  #L2c594e.  v8:= v6 - v8 @kind float;
  #L2c5952.  v2:= 1066192077I;
  #L2c5958.  v8:= v8 / v2 @kind float;
  #L2c595a.  v1:= v1 - v8 @kind float;
  #L2c595c.  v0.`android.graphics.PointF.y` @type ^`float` := v1;
  #L2c5960.  v8:= v7.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c5964.  v0:= fcmpl(v6, v8);
  #L2c5968.  if v0 <= 0 then goto L2c5984;
  #L2c596c.  v0:= v4.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mTouchOffset` @type ^`android.graphics.PointF` @kind object;
  #L2c5970.  v1:= v0.`android.graphics.PointF.y` @type ^`float`;
  #L2c5974.  v2:= v6 - v8 @kind float;
  #L2c5978.  v3:= 2.0F;
  #L2c597c.  v2:= v2 / v3 @kind float;
  #L2c597e.  v1:= v1 - v2 @kind float;
  #L2c5980.  v0.`android.graphics.PointF.y` @type ^`float` := v1;
  #L2c5984.  v0:= v8 - v6 @kind float;
  #L2c5988.  v0:= fcmpg(v0, v9);
  #L2c598c.  if v0 >= 0 then goto L2c5992;
  #L2c5990.  v6:= v8;
  #L2c5992.  v0:= v5.`android.graphics.RectF.top` @type ^`float`;
  #L2c5996.  v1:= v6 - v0 @kind float;
  #L2c599a.  v2:= v4.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mMinCropHeight` @type ^`float`;
  #L2c599e.  v1:= fcmpg(v1, v2);
  #L2c59a2.  if v1 >= 0 then goto L2c59aa;
  #L2c59a6.  v6:= v0 + v2 @kind float;
  #L2c59aa.  v1:= v6 - v0 @kind float;
  #L2c59ae.  v2:= v4.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mMaxCropHeight` @type ^`float`;
  #L2c59b2.  v1:= fcmpl(v1, v2);
  #L2c59b6.  if v1 <= 0 then goto L2c59be;
  #L2c59ba.  v6:= v0 + v2 @kind float;
  #L2c59be.  v1:= v8 - v6 @kind float;
  #L2c59c2.  v9:= fcmpg(v1, v9);
  #L2c59c6.  if v9 >= 0 then goto L2c59cc;
  #L2c59ca.  v6:= v8;
  #L2c59cc.  v9:= 0I;
  #L2c59ce.  v9:= fcmpl(v10, v9);
  #L2c59d2.  if v9 <= 0 then goto L2c5ac4;
  #L2c59d6.  v9:= v6 - v0 @kind float;
  #L2c59da.  v9:= v9 * v10 @kind float;
  #L2c59de.  v1:= v4.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mMinCropWidth` @type ^`float`;
  #L2c59e2.  v2:= fcmpg(v9, v1);
  #L2c59e6.  if v2 >= 0 then goto L2c5a02;
  #L2c59ea.  v1:= v1 / v10 @kind float;
  #L2c59ec.  v0:= v0 + v1 @kind float;
  #L2c59ee.  call temp:= `min`(v8, v0) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2c59f4.  v6:= temp;
  #L2c59f6.  v8:= v5.`android.graphics.RectF.top` @type ^`float`;
  #L2c59fa.  v8:= v6 - v8 @kind float;
  #L2c59fe.  v9:= v8 * v10 @kind float;
  #L2c5a02.  v8:= v4.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mMaxCropWidth` @type ^`float`;
  #L2c5a06.  v0:= fcmpl(v9, v8);
  #L2c5a0a.  if v0 <= 0 then goto L2c5a2e;
  #L2c5a0e.  v6:= v7.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c5a12.  v9:= v5.`android.graphics.RectF.top` @type ^`float`;
  #L2c5a16.  v8:= v8 / v10 @kind float;
  #L2c5a18.  v9:= v9 + v8 @kind float;
  #L2c5a1a.  call temp:= `min`(v6, v9) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2c5a20.  v6:= temp;
  #L2c5a22.  v8:= v5.`android.graphics.RectF.top` @type ^`float`;
  #L2c5a26.  v8:= v6 - v8 @kind float;
  #L2c5a2a.  v9:= v8 * v10 @kind float;
  #L2c5a2e.  if v11 == 0 then goto L2c5a5c;
  #L2c5a32.  if v12 == 0 then goto L2c5a5c;
  #L2c5a36.  v8:= v7.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c5a3a.  v9:= v5.`android.graphics.RectF.top` @type ^`float`;
  #L2c5a3e.  call temp:= `width`(v7) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L2c5a44.  v7:= temp;
  #L2c5a46.  v7:= v7 / v10 @kind float;
  #L2c5a48.  v9:= v9 + v7 @kind float;
  #L2c5a4a.  call temp:= `min`(v8, v9) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2c5a50.  v7:= temp;
  #L2c5a52.  call temp:= `min`(v6, v7) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2c5a58.  v6:= temp;
  #L2c5a5a.  goto L2c5ac4;
  #L2c5a5c.  if v11 == 0 then goto L2c5a96;
  #L2c5a60.  v8:= v5.`android.graphics.RectF.right` @type ^`float`;
  #L2c5a64.  v11:= v8 - v9 @kind float;
  #L2c5a68.  v0:= v7.`android.graphics.RectF.left` @type ^`float`;
  #L2c5a6c.  v11:= fcmpg(v11, v0);
  #L2c5a70.  if v11 >= 0 then goto L2c5a96;
  #L2c5a74.  v6:= v7.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c5a78.  v9:= v5.`android.graphics.RectF.top` @type ^`float`;
  #L2c5a7c.  v8:= v8 - v0 @kind float;
  #L2c5a7e.  v8:= v8 / v10 @kind float;
  #L2c5a80.  v9:= v9 + v8 @kind float;
  #L2c5a82.  call temp:= `min`(v6, v9) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2c5a88.  v6:= temp;
  #L2c5a8a.  v8:= v5.`android.graphics.RectF.top` @type ^`float`;
  #L2c5a8e.  v8:= v6 - v8 @kind float;
  #L2c5a92.  v9:= v8 * v10 @kind float;
  #L2c5a96.  if v12 == 0 then goto L2c5ac4;
  #L2c5a9a.  v8:= v5.`android.graphics.RectF.left` @type ^`float`;
  #L2c5a9e.  v9:= v9 + v8 @kind float;
  #L2c5aa0.  v11:= v7.`android.graphics.RectF.right` @type ^`float`;
  #L2c5aa4.  v9:= fcmpl(v9, v11);
  #L2c5aa8.  if v9 <= 0 then goto L2c5ac4;
  #L2c5aac.  v7:= v7.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c5ab0.  v9:= v5.`android.graphics.RectF.top` @type ^`float`;
  #L2c5ab4.  v11:= v11 - v8 @kind float;
  #L2c5ab6.  v11:= v11 / v10 @kind float;
  #L2c5ab8.  v9:= v9 + v11 @kind float;
  #L2c5aba.  call temp:= `min`(v7, v9) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2c5ac0.  v7:= temp;
  #L2c5ac2.  goto L2c5a52;
  #L2c5ac4.  v5.`android.graphics.RectF.bottom` @type ^`float` := v6;
  #L2c5ac8.  return @kind void;
}
procedure `void` `adjustBottomByAspectRatio`(`com.theartofdev.edmodo.cropper.CropWindowMoveHandler` v2 @kind this, `android.graphics.RectF` v3 @kind object, `float` v4 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustBottomByAspectRatio:(Landroid/graphics/RectF;F)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2c5adc.  v0:= v3.`android.graphics.RectF.top` @type ^`float`;
  #L2c5ae0.  call temp:= `width`(v3) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L2c5ae6.  v1:= temp;
  #L2c5ae8.  v1:= v1 / v4 @kind float;
  #L2c5aea.  v0:= v0 + v1 @kind float;
  #L2c5aec.  v3.`android.graphics.RectF.bottom` @type ^`float` := v0;
  #L2c5af0.  return @kind void;
}
procedure `void` `adjustLeft`(`com.theartofdev.edmodo.cropper.CropWindowMoveHandler` v6 @kind this, `android.graphics.RectF` v7 @kind object, `float` v8 , `android.graphics.RectF` v9 @kind object, `float` v10 , `float` v11 , `boolean` v12 , `boolean` v13 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustLeft:(Landroid/graphics/RectF;FLandroid/graphics/RectF;FFZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2c5b04.  v0:= 0I;
  #L2c5b06.  v1:= fcmpg(v8, v0);
  #L2c5b0a.  if v1 >= 0 then goto L2c5b2e;
  #L2c5b0e.  v1:= 1065772646I;
  #L2c5b14.  v8:= v8 / v1 @kind float;
  #L2c5b16.  v1:= v6.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mTouchOffset` @type ^`android.graphics.PointF` @kind object;
  #L2c5b1a.  v2:= v1.`android.graphics.PointF.x` @type ^`float`;
  #L2c5b1e.  v3:= 1066192077I;
  #L2c5b24.  v3:= v8 / v3 @kind float;
  #L2c5b28.  v2:= v2 - v3 @kind float;
  #L2c5b2a.  v1.`android.graphics.PointF.x` @type ^`float` := v2;
  #L2c5b2e.  v1:= v9.`android.graphics.RectF.left` @type ^`float`;
  #L2c5b32.  v2:= fcmpg(v8, v1);
  #L2c5b36.  if v2 >= 0 then goto L2c5b52;
  #L2c5b3a.  v2:= v6.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mTouchOffset` @type ^`android.graphics.PointF` @kind object;
  #L2c5b3e.  v3:= v2.`android.graphics.PointF.x` @type ^`float`;
  #L2c5b42.  v4:= v8 - v1 @kind float;
  #L2c5b46.  v5:= 2.0F;
  #L2c5b4a.  v4:= v4 / v5 @kind float;
  #L2c5b4c.  v3:= v3 - v4 @kind float;
  #L2c5b4e.  v2.`android.graphics.PointF.x` @type ^`float` := v3;
  #L2c5b52.  v2:= v8 - v1 @kind float;
  #L2c5b56.  v2:= fcmpg(v2, v10);
  #L2c5b5a.  if v2 >= 0 then goto L2c5b60;
  #L2c5b5e.  v8:= v1;
  #L2c5b60.  v2:= v7.`android.graphics.RectF.right` @type ^`float`;
  #L2c5b64.  v3:= v2 - v8 @kind float;
  #L2c5b68.  v4:= v6.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mMinCropWidth` @type ^`float`;
  #L2c5b6c.  v3:= fcmpg(v3, v4);
  #L2c5b70.  if v3 >= 0 then goto L2c5b78;
  #L2c5b74.  v8:= v2 - v4 @kind float;
  #L2c5b78.  v3:= v2 - v8 @kind float;
  #L2c5b7c.  v4:= v6.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mMaxCropWidth` @type ^`float`;
  #L2c5b80.  v3:= fcmpl(v3, v4);
  #L2c5b84.  if v3 <= 0 then goto L2c5b8c;
  #L2c5b88.  v8:= v2 - v4 @kind float;
  #L2c5b8c.  v3:= v8 - v1 @kind float;
  #L2c5b90.  v10:= fcmpg(v3, v10);
  #L2c5b94.  if v10 >= 0 then goto L2c5b9a;
  #L2c5b98.  v8:= v1;
  #L2c5b9a.  v10:= fcmpl(v11, v0);
  #L2c5b9e.  if v10 <= 0 then goto L2c5c8c;
  #L2c5ba2.  v10:= v2 - v8 @kind float;
  #L2c5ba6.  v10:= v10 / v11 @kind float;
  #L2c5ba8.  v0:= v6.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mMinCropHeight` @type ^`float`;
  #L2c5bac.  v3:= fcmpg(v10, v0);
  #L2c5bb0.  if v3 >= 0 then goto L2c5bca;
  #L2c5bb4.  v0:= v0 * v11 @kind float;
  #L2c5bb8.  v2:= v2 - v0 @kind float;
  #L2c5bba.  call temp:= `max`(v1, v2) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2c5bc0.  v8:= temp;
  #L2c5bc2.  v10:= v7.`android.graphics.RectF.right` @type ^`float`;
  #L2c5bc6.  v10:= v10 - v8 @kind float;
  #L2c5bc8.  v10:= v10 / v11 @kind float;
  #L2c5bca.  v0:= v6.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mMaxCropHeight` @type ^`float`;
  #L2c5bce.  v1:= fcmpl(v10, v0);
  #L2c5bd2.  if v1 <= 0 then goto L2c5bf4;
  #L2c5bd6.  v8:= v9.`android.graphics.RectF.left` @type ^`float`;
  #L2c5bda.  v10:= v7.`android.graphics.RectF.right` @type ^`float`;
  #L2c5bde.  v0:= v0 * v11 @kind float;
  #L2c5be2.  v10:= v10 - v0 @kind float;
  #L2c5be4.  call temp:= `max`(v8, v10) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2c5bea.  v8:= temp;
  #L2c5bec.  v10:= v7.`android.graphics.RectF.right` @type ^`float`;
  #L2c5bf0.  v10:= v10 - v8 @kind float;
  #L2c5bf2.  v10:= v10 / v11 @kind float;
  #L2c5bf4.  if v12 == 0 then goto L2c5c24;
  #L2c5bf8.  if v13 == 0 then goto L2c5c24;
  #L2c5bfc.  v10:= v9.`android.graphics.RectF.left` @type ^`float`;
  #L2c5c00.  v12:= v7.`android.graphics.RectF.right` @type ^`float`;
  #L2c5c04.  call temp:= `height`(v9) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L2c5c0a.  v9:= temp;
  #L2c5c0c.  v9:= v9 * v11 @kind float;
  #L2c5c10.  v12:= v12 - v9 @kind float;
  #L2c5c12.  call temp:= `max`(v10, v12) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2c5c18.  v9:= temp;
  #L2c5c1a.  call temp:= `max`(v8, v9) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2c5c20.  v8:= temp;
  #L2c5c22.  goto L2c5c8c;
  #L2c5c24.  if v12 == 0 then goto L2c5c5c;
  #L2c5c28.  v12:= v7.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c5c2c.  v0:= v12 - v10 @kind float;
  #L2c5c30.  v1:= v9.`android.graphics.RectF.top` @type ^`float`;
  #L2c5c34.  v0:= fcmpg(v0, v1);
  #L2c5c38.  if v0 >= 0 then goto L2c5c5c;
  #L2c5c3c.  v8:= v9.`android.graphics.RectF.left` @type ^`float`;
  #L2c5c40.  v10:= v7.`android.graphics.RectF.right` @type ^`float`;
  #L2c5c44.  v12:= v12 - v1 @kind float;
  #L2c5c46.  v12:= v12 * v11 @kind float;
  #L2c5c4a.  v10:= v10 - v12 @kind float;
  #L2c5c4c.  call temp:= `max`(v8, v10) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2c5c52.  v8:= temp;
  #L2c5c54.  v10:= v7.`android.graphics.RectF.right` @type ^`float`;
  #L2c5c58.  v10:= v10 - v8 @kind float;
  #L2c5c5a.  v10:= v10 / v11 @kind float;
  #L2c5c5c.  if v13 == 0 then goto L2c5c8c;
  #L2c5c60.  v12:= v7.`android.graphics.RectF.top` @type ^`float`;
  #L2c5c64.  v10:= v10 + v12 @kind float;
  #L2c5c66.  v13:= v9.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c5c6a.  v10:= fcmpl(v10, v13);
  #L2c5c6e.  if v10 <= 0 then goto L2c5c8c;
  #L2c5c72.  v9:= v9.`android.graphics.RectF.left` @type ^`float`;
  #L2c5c76.  v10:= v7.`android.graphics.RectF.right` @type ^`float`;
  #L2c5c7a.  v13:= v13 - v12 @kind float;
  #L2c5c7c.  v13:= v13 * v11 @kind float;
  #L2c5c80.  v10:= v10 - v13 @kind float;
  #L2c5c82.  call temp:= `max`(v9, v10) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2c5c88.  v9:= temp;
  #L2c5c8a.  goto L2c5c1a;
  #L2c5c8c.  v7.`android.graphics.RectF.left` @type ^`float` := v8;
  #L2c5c90.  return @kind void;
}
procedure `void` `adjustLeftByAspectRatio`(`com.theartofdev.edmodo.cropper.CropWindowMoveHandler` v2 @kind this, `android.graphics.RectF` v3 @kind object, `float` v4 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustLeftByAspectRatio:(Landroid/graphics/RectF;F)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2c5ca4.  v0:= v3.`android.graphics.RectF.right` @type ^`float`;
  #L2c5ca8.  call temp:= `height`(v3) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L2c5cae.  v1:= temp;
  #L2c5cb0.  v1:= v1 * v4 @kind float;
  #L2c5cb4.  v0:= v0 - v1 @kind float;
  #L2c5cb6.  v3.`android.graphics.RectF.left` @type ^`float` := v0;
  #L2c5cba.  return @kind void;
}
procedure `void` `adjustLeftRightByAspectRatio`(`com.theartofdev.edmodo.cropper.CropWindowMoveHandler` v3 @kind this, `android.graphics.RectF` v4 @kind object, `android.graphics.RectF` v5 @kind object, `float` v6 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustLeftRightByAspectRatio:(Landroid/graphics/RectF;Landroid/graphics/RectF;F)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2c5ccc.  call temp:= `width`(v4) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L2c5cd2.  v0:= temp;
  #L2c5cd4.  call temp:= `height`(v4) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L2c5cda.  v1:= temp;
  #L2c5cdc.  v1:= v1 * v6 @kind float;
  #L2c5ce0.  v0:= v0 - v1 @kind float;
  #L2c5ce2.  v6:= 2.0F;
  #L2c5ce6.  v0:= v0 / v6 @kind float;
  #L2c5ce8.  v6:= 0I;
  #L2c5cea.  call `inset`(v4, v0, v6) @signature `Landroid/graphics/RectF;.inset:(FF)V` @kind virtual;
  #L2c5cf0.  v0:= v4.`android.graphics.RectF.left` @type ^`float`;
  #L2c5cf4.  v1:= v5.`android.graphics.RectF.left` @type ^`float`;
  #L2c5cf8.  v2:= fcmpg(v0, v1);
  #L2c5cfc.  if v2 >= 0 then goto L2c5d08;
  #L2c5d00.  v1:= v1 - v0 @kind float;
  #L2c5d02.  call `offset`(v4, v1, v6) @signature `Landroid/graphics/RectF;.offset:(FF)V` @kind virtual;
  #L2c5d08.  v0:= v4.`android.graphics.RectF.right` @type ^`float`;
  #L2c5d0c.  v5:= v5.`android.graphics.RectF.right` @type ^`float`;
  #L2c5d10.  v1:= fcmpl(v0, v5);
  #L2c5d14.  if v1 <= 0 then goto L2c5d20;
  #L2c5d18.  v5:= v5 - v0 @kind float;
  #L2c5d1a.  call `offset`(v4, v5, v6) @signature `Landroid/graphics/RectF;.offset:(FF)V` @kind virtual;
  #L2c5d20.  return @kind void;
}
procedure `void` `adjustRight`(`com.theartofdev.edmodo.cropper.CropWindowMoveHandler` v4 @kind this, `android.graphics.RectF` v5 @kind object, `float` v6 , `android.graphics.RectF` v7 @kind object, `int` v8 , `float` v9 , `float` v10 , `boolean` v11 , `boolean` v12 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustRight:(Landroid/graphics/RectF;FLandroid/graphics/RectF;IFFZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c5d34.  v8:= (`float`) v8 @kind i2f;
  #L2c5d36.  v0:= fcmpl(v6, v8);
  #L2c5d3a.  if v0 <= 0 then goto L2c5d64;
  #L2c5d3e.  v6:= v6 - v8 @kind float;
  #L2c5d40.  v0:= 1065772646I;
  #L2c5d46.  v6:= v6 / v0 @kind float;
  #L2c5d48.  v6:= v6 + v8 @kind float;
  #L2c5d4a.  v0:= v4.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mTouchOffset` @type ^`android.graphics.PointF` @kind object;
  #L2c5d4e.  v1:= v0.`android.graphics.PointF.x` @type ^`float`;
  #L2c5d52.  v8:= v6 - v8 @kind float;
  #L2c5d56.  v2:= 1066192077I;
  #L2c5d5c.  v8:= v8 / v2 @kind float;
  #L2c5d5e.  v1:= v1 - v8 @kind float;
  #L2c5d60.  v0.`android.graphics.PointF.x` @type ^`float` := v1;
  #L2c5d64.  v8:= v7.`android.graphics.RectF.right` @type ^`float`;
  #L2c5d68.  v0:= fcmpl(v6, v8);
  #L2c5d6c.  if v0 <= 0 then goto L2c5d88;
  #L2c5d70.  v0:= v4.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mTouchOffset` @type ^`android.graphics.PointF` @kind object;
  #L2c5d74.  v1:= v0.`android.graphics.PointF.x` @type ^`float`;
  #L2c5d78.  v2:= v6 - v8 @kind float;
  #L2c5d7c.  v3:= 2.0F;
  #L2c5d80.  v2:= v2 / v3 @kind float;
  #L2c5d82.  v1:= v1 - v2 @kind float;
  #L2c5d84.  v0.`android.graphics.PointF.x` @type ^`float` := v1;
  #L2c5d88.  v0:= v8 - v6 @kind float;
  #L2c5d8c.  v0:= fcmpg(v0, v9);
  #L2c5d90.  if v0 >= 0 then goto L2c5d96;
  #L2c5d94.  v6:= v8;
  #L2c5d96.  v0:= v5.`android.graphics.RectF.left` @type ^`float`;
  #L2c5d9a.  v1:= v6 - v0 @kind float;
  #L2c5d9e.  v2:= v4.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mMinCropWidth` @type ^`float`;
  #L2c5da2.  v1:= fcmpg(v1, v2);
  #L2c5da6.  if v1 >= 0 then goto L2c5dae;
  #L2c5daa.  v6:= v0 + v2 @kind float;
  #L2c5dae.  v1:= v6 - v0 @kind float;
  #L2c5db2.  v2:= v4.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mMaxCropWidth` @type ^`float`;
  #L2c5db6.  v1:= fcmpl(v1, v2);
  #L2c5dba.  if v1 <= 0 then goto L2c5dc2;
  #L2c5dbe.  v6:= v0 + v2 @kind float;
  #L2c5dc2.  v1:= v8 - v6 @kind float;
  #L2c5dc6.  v9:= fcmpg(v1, v9);
  #L2c5dca.  if v9 >= 0 then goto L2c5dd0;
  #L2c5dce.  v6:= v8;
  #L2c5dd0.  v9:= 0I;
  #L2c5dd2.  v9:= fcmpl(v10, v9);
  #L2c5dd6.  if v9 <= 0 then goto L2c5ed0;
  #L2c5dda.  v9:= v6 - v0 @kind float;
  #L2c5dde.  v9:= v9 / v10 @kind float;
  #L2c5de0.  v1:= v4.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mMinCropHeight` @type ^`float`;
  #L2c5de4.  v2:= fcmpg(v9, v1);
  #L2c5de8.  if v2 >= 0 then goto L2c5e06;
  #L2c5dec.  v1:= v1 * v10 @kind float;
  #L2c5df0.  v0:= v0 + v1 @kind float;
  #L2c5df2.  call temp:= `min`(v8, v0) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2c5df8.  v6:= temp;
  #L2c5dfa.  v8:= v5.`android.graphics.RectF.left` @type ^`float`;
  #L2c5dfe.  v8:= v6 - v8 @kind float;
  #L2c5e02.  v9:= v8 / v10 @kind float;
  #L2c5e06.  v8:= v4.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mMaxCropHeight` @type ^`float`;
  #L2c5e0a.  v0:= fcmpl(v9, v8);
  #L2c5e0e.  if v0 <= 0 then goto L2c5e34;
  #L2c5e12.  v6:= v7.`android.graphics.RectF.right` @type ^`float`;
  #L2c5e16.  v9:= v5.`android.graphics.RectF.left` @type ^`float`;
  #L2c5e1a.  v8:= v8 * v10 @kind float;
  #L2c5e1e.  v9:= v9 + v8 @kind float;
  #L2c5e20.  call temp:= `min`(v6, v9) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2c5e26.  v6:= temp;
  #L2c5e28.  v8:= v5.`android.graphics.RectF.left` @type ^`float`;
  #L2c5e2c.  v8:= v6 - v8 @kind float;
  #L2c5e30.  v9:= v8 / v10 @kind float;
  #L2c5e34.  if v11 == 0 then goto L2c5e64;
  #L2c5e38.  if v12 == 0 then goto L2c5e64;
  #L2c5e3c.  v8:= v7.`android.graphics.RectF.right` @type ^`float`;
  #L2c5e40.  v9:= v5.`android.graphics.RectF.left` @type ^`float`;
  #L2c5e44.  call temp:= `height`(v7) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L2c5e4a.  v7:= temp;
  #L2c5e4c.  v7:= v7 * v10 @kind float;
  #L2c5e50.  v9:= v9 + v7 @kind float;
  #L2c5e52.  call temp:= `min`(v8, v9) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2c5e58.  v7:= temp;
  #L2c5e5a.  call temp:= `min`(v6, v7) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2c5e60.  v6:= temp;
  #L2c5e62.  goto L2c5ed0;
  #L2c5e64.  if v11 == 0 then goto L2c5ea0;
  #L2c5e68.  v8:= v5.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c5e6c.  v11:= v8 - v9 @kind float;
  #L2c5e70.  v0:= v7.`android.graphics.RectF.top` @type ^`float`;
  #L2c5e74.  v11:= fcmpg(v11, v0);
  #L2c5e78.  if v11 >= 0 then goto L2c5ea0;
  #L2c5e7c.  v6:= v7.`android.graphics.RectF.right` @type ^`float`;
  #L2c5e80.  v9:= v5.`android.graphics.RectF.left` @type ^`float`;
  #L2c5e84.  v8:= v8 - v0 @kind float;
  #L2c5e86.  v8:= v8 * v10 @kind float;
  #L2c5e8a.  v9:= v9 + v8 @kind float;
  #L2c5e8c.  call temp:= `min`(v6, v9) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2c5e92.  v6:= temp;
  #L2c5e94.  v8:= v5.`android.graphics.RectF.left` @type ^`float`;
  #L2c5e98.  v8:= v6 - v8 @kind float;
  #L2c5e9c.  v9:= v8 / v10 @kind float;
  #L2c5ea0.  if v12 == 0 then goto L2c5ed0;
  #L2c5ea4.  v8:= v5.`android.graphics.RectF.top` @type ^`float`;
  #L2c5ea8.  v9:= v9 + v8 @kind float;
  #L2c5eaa.  v11:= v7.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c5eae.  v9:= fcmpl(v9, v11);
  #L2c5eb2.  if v9 <= 0 then goto L2c5ed0;
  #L2c5eb6.  v7:= v7.`android.graphics.RectF.right` @type ^`float`;
  #L2c5eba.  v9:= v5.`android.graphics.RectF.left` @type ^`float`;
  #L2c5ebe.  v11:= v11 - v8 @kind float;
  #L2c5ec0.  v11:= v11 * v10 @kind float;
  #L2c5ec4.  v9:= v9 + v11 @kind float;
  #L2c5ec6.  call temp:= `min`(v7, v9) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2c5ecc.  v7:= temp;
  #L2c5ece.  goto L2c5e5a;
  #L2c5ed0.  v5.`android.graphics.RectF.right` @type ^`float` := v6;
  #L2c5ed4.  return @kind void;
}
procedure `void` `adjustRightByAspectRatio`(`com.theartofdev.edmodo.cropper.CropWindowMoveHandler` v2 @kind this, `android.graphics.RectF` v3 @kind object, `float` v4 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustRightByAspectRatio:(Landroid/graphics/RectF;F)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2c5ee8.  v0:= v3.`android.graphics.RectF.left` @type ^`float`;
  #L2c5eec.  call temp:= `height`(v3) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L2c5ef2.  v1:= temp;
  #L2c5ef4.  v1:= v1 * v4 @kind float;
  #L2c5ef8.  v0:= v0 + v1 @kind float;
  #L2c5efa.  v3.`android.graphics.RectF.right` @type ^`float` := v0;
  #L2c5efe.  return @kind void;
}
procedure `void` `adjustTop`(`com.theartofdev.edmodo.cropper.CropWindowMoveHandler` v6 @kind this, `android.graphics.RectF` v7 @kind object, `float` v8 , `android.graphics.RectF` v9 @kind object, `float` v10 , `float` v11 , `boolean` v12 , `boolean` v13 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustTop:(Landroid/graphics/RectF;FLandroid/graphics/RectF;FFZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2c5f10.  v0:= 0I;
  #L2c5f12.  v1:= fcmpg(v8, v0);
  #L2c5f16.  if v1 >= 0 then goto L2c5f3a;
  #L2c5f1a.  v1:= 1065772646I;
  #L2c5f20.  v8:= v8 / v1 @kind float;
  #L2c5f22.  v1:= v6.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mTouchOffset` @type ^`android.graphics.PointF` @kind object;
  #L2c5f26.  v2:= v1.`android.graphics.PointF.y` @type ^`float`;
  #L2c5f2a.  v3:= 1066192077I;
  #L2c5f30.  v3:= v8 / v3 @kind float;
  #L2c5f34.  v2:= v2 - v3 @kind float;
  #L2c5f36.  v1.`android.graphics.PointF.y` @type ^`float` := v2;
  #L2c5f3a.  v1:= v9.`android.graphics.RectF.top` @type ^`float`;
  #L2c5f3e.  v2:= fcmpg(v8, v1);
  #L2c5f42.  if v2 >= 0 then goto L2c5f5e;
  #L2c5f46.  v2:= v6.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mTouchOffset` @type ^`android.graphics.PointF` @kind object;
  #L2c5f4a.  v3:= v2.`android.graphics.PointF.y` @type ^`float`;
  #L2c5f4e.  v4:= v8 - v1 @kind float;
  #L2c5f52.  v5:= 2.0F;
  #L2c5f56.  v4:= v4 / v5 @kind float;
  #L2c5f58.  v3:= v3 - v4 @kind float;
  #L2c5f5a.  v2.`android.graphics.PointF.y` @type ^`float` := v3;
  #L2c5f5e.  v2:= v8 - v1 @kind float;
  #L2c5f62.  v2:= fcmpg(v2, v10);
  #L2c5f66.  if v2 >= 0 then goto L2c5f6c;
  #L2c5f6a.  v8:= v1;
  #L2c5f6c.  v2:= v7.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c5f70.  v3:= v2 - v8 @kind float;
  #L2c5f74.  v4:= v6.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mMinCropHeight` @type ^`float`;
  #L2c5f78.  v3:= fcmpg(v3, v4);
  #L2c5f7c.  if v3 >= 0 then goto L2c5f84;
  #L2c5f80.  v8:= v2 - v4 @kind float;
  #L2c5f84.  v3:= v2 - v8 @kind float;
  #L2c5f88.  v4:= v6.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mMaxCropHeight` @type ^`float`;
  #L2c5f8c.  v3:= fcmpl(v3, v4);
  #L2c5f90.  if v3 <= 0 then goto L2c5f98;
  #L2c5f94.  v8:= v2 - v4 @kind float;
  #L2c5f98.  v3:= v8 - v1 @kind float;
  #L2c5f9c.  v10:= fcmpg(v3, v10);
  #L2c5fa0.  if v10 >= 0 then goto L2c5fa6;
  #L2c5fa4.  v8:= v1;
  #L2c5fa6.  v10:= fcmpl(v11, v0);
  #L2c5faa.  if v10 <= 0 then goto L2c6096;
  #L2c5fae.  v10:= v2 - v8 @kind float;
  #L2c5fb2.  v10:= v10 * v11 @kind float;
  #L2c5fb6.  v0:= v6.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mMinCropWidth` @type ^`float`;
  #L2c5fba.  v3:= fcmpg(v10, v0);
  #L2c5fbe.  if v3 >= 0 then goto L2c5fd8;
  #L2c5fc2.  v0:= v0 / v11 @kind float;
  #L2c5fc4.  v2:= v2 - v0 @kind float;
  #L2c5fc6.  call temp:= `max`(v1, v2) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2c5fcc.  v8:= temp;
  #L2c5fce.  v10:= v7.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c5fd2.  v10:= v10 - v8 @kind float;
  #L2c5fd4.  v10:= v10 * v11 @kind float;
  #L2c5fd8.  v0:= v6.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mMaxCropWidth` @type ^`float`;
  #L2c5fdc.  v1:= fcmpl(v10, v0);
  #L2c5fe0.  if v1 <= 0 then goto L2c6002;
  #L2c5fe4.  v8:= v9.`android.graphics.RectF.top` @type ^`float`;
  #L2c5fe8.  v10:= v7.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c5fec.  v0:= v0 / v11 @kind float;
  #L2c5fee.  v10:= v10 - v0 @kind float;
  #L2c5ff0.  call temp:= `max`(v8, v10) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2c5ff6.  v8:= temp;
  #L2c5ff8.  v10:= v7.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c5ffc.  v10:= v10 - v8 @kind float;
  #L2c5ffe.  v10:= v10 * v11 @kind float;
  #L2c6002.  if v12 == 0 then goto L2c6030;
  #L2c6006.  if v13 == 0 then goto L2c6030;
  #L2c600a.  v10:= v9.`android.graphics.RectF.top` @type ^`float`;
  #L2c600e.  v12:= v7.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c6012.  call temp:= `width`(v9) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L2c6018.  v9:= temp;
  #L2c601a.  v9:= v9 / v11 @kind float;
  #L2c601c.  v12:= v12 - v9 @kind float;
  #L2c601e.  call temp:= `max`(v10, v12) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2c6024.  v9:= temp;
  #L2c6026.  call temp:= `max`(v8, v9) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2c602c.  v8:= temp;
  #L2c602e.  goto L2c6096;
  #L2c6030.  if v12 == 0 then goto L2c6068;
  #L2c6034.  v12:= v7.`android.graphics.RectF.right` @type ^`float`;
  #L2c6038.  v0:= v12 - v10 @kind float;
  #L2c603c.  v1:= v9.`android.graphics.RectF.left` @type ^`float`;
  #L2c6040.  v0:= fcmpg(v0, v1);
  #L2c6044.  if v0 >= 0 then goto L2c6068;
  #L2c6048.  v8:= v9.`android.graphics.RectF.top` @type ^`float`;
  #L2c604c.  v10:= v7.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c6050.  v12:= v12 - v1 @kind float;
  #L2c6052.  v12:= v12 / v11 @kind float;
  #L2c6054.  v10:= v10 - v12 @kind float;
  #L2c6056.  call temp:= `max`(v8, v10) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2c605c.  v8:= temp;
  #L2c605e.  v10:= v7.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c6062.  v10:= v10 - v8 @kind float;
  #L2c6064.  v10:= v10 * v11 @kind float;
  #L2c6068.  if v13 == 0 then goto L2c6096;
  #L2c606c.  v12:= v7.`android.graphics.RectF.left` @type ^`float`;
  #L2c6070.  v10:= v10 + v12 @kind float;
  #L2c6072.  v13:= v9.`android.graphics.RectF.right` @type ^`float`;
  #L2c6076.  v10:= fcmpl(v10, v13);
  #L2c607a.  if v10 <= 0 then goto L2c6096;
  #L2c607e.  v9:= v9.`android.graphics.RectF.top` @type ^`float`;
  #L2c6082.  v10:= v7.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c6086.  v13:= v13 - v12 @kind float;
  #L2c6088.  v13:= v13 / v11 @kind float;
  #L2c608a.  v10:= v10 - v13 @kind float;
  #L2c608c.  call temp:= `max`(v9, v10) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2c6092.  v9:= temp;
  #L2c6094.  goto L2c6026;
  #L2c6096.  v7.`android.graphics.RectF.top` @type ^`float` := v8;
  #L2c609a.  return @kind void;
}
procedure `void` `adjustTopBottomByAspectRatio`(`com.theartofdev.edmodo.cropper.CropWindowMoveHandler` v3 @kind this, `android.graphics.RectF` v4 @kind object, `android.graphics.RectF` v5 @kind object, `float` v6 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustTopBottomByAspectRatio:(Landroid/graphics/RectF;Landroid/graphics/RectF;F)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2c60ac.  call temp:= `height`(v4) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L2c60b2.  v0:= temp;
  #L2c60b4.  call temp:= `width`(v4) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L2c60ba.  v1:= temp;
  #L2c60bc.  v1:= v1 / v6 @kind float;
  #L2c60be.  v0:= v0 - v1 @kind float;
  #L2c60c0.  v6:= 2.0F;
  #L2c60c4.  v0:= v0 / v6 @kind float;
  #L2c60c6.  v6:= 0I;
  #L2c60c8.  call `inset`(v4, v6, v0) @signature `Landroid/graphics/RectF;.inset:(FF)V` @kind virtual;
  #L2c60ce.  v0:= v4.`android.graphics.RectF.top` @type ^`float`;
  #L2c60d2.  v1:= v5.`android.graphics.RectF.top` @type ^`float`;
  #L2c60d6.  v2:= fcmpg(v0, v1);
  #L2c60da.  if v2 >= 0 then goto L2c60e6;
  #L2c60de.  v1:= v1 - v0 @kind float;
  #L2c60e0.  call `offset`(v4, v6, v1) @signature `Landroid/graphics/RectF;.offset:(FF)V` @kind virtual;
  #L2c60e6.  v0:= v4.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c60ea.  v5:= v5.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c60ee.  v1:= fcmpl(v0, v5);
  #L2c60f2.  if v1 <= 0 then goto L2c60fe;
  #L2c60f6.  v5:= v5 - v0 @kind float;
  #L2c60f8.  call `offset`(v4, v6, v5) @signature `Landroid/graphics/RectF;.offset:(FF)V` @kind virtual;
  #L2c60fe.  return @kind void;
}
procedure `void` `adjustTopByAspectRatio`(`com.theartofdev.edmodo.cropper.CropWindowMoveHandler` v2 @kind this, `android.graphics.RectF` v3 @kind object, `float` v4 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustTopByAspectRatio:(Landroid/graphics/RectF;F)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2c6110.  v0:= v3.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c6114.  call temp:= `width`(v3) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L2c611a.  v1:= temp;
  #L2c611c.  v1:= v1 / v4 @kind float;
  #L2c611e.  v0:= v0 - v1 @kind float;
  #L2c6120.  v3.`android.graphics.RectF.top` @type ^`float` := v0;
  #L2c6124.  return @kind void;
}
procedure `float` `calculateAspectRatio`(`float` v0 , `float` v1 , `float` v2 , `float` v3 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.calculateAspectRatio:(FFFF)F` @AccessFlag PRIVATE_STATIC {
    temp;

  #L2c5890.  v2:= v2 - v0 @kind float;
  #L2c5892.  v3:= v3 - v1 @kind float;
  #L2c5894.  v2:= v2 / v3 @kind float;
  #L2c5896.  return v2;
}
procedure `void` `calculateTouchOffset`(`com.theartofdev.edmodo.cropper.CropWindowMoveHandler` v2 @kind this, `android.graphics.RectF` v3 @kind object, `float` v4 , `float` v5 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.calculateTouchOffset:(Landroid/graphics/RectF;FF)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2c6138.  v0:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$1.a` @type ^`int`[] @kind object;
  #L2c613c.  v1:= v2.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mType` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L2c6140.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L2c6146.  v1:= temp;
  #L2c6148.  v0:= v0[v1];
  #L2c614c.  v1:= 0I;
  #L2c614e.  goto L2c61b4;
  #L2c6154.  v3:= 0I;
  #L2c6156.  goto L2c61a6;
  #L2c6158.  call temp:= `centerX`(v3) @signature `Landroid/graphics/RectF;.centerX:()F` @kind virtual;
  #L2c615e.  v0:= temp;
  #L2c6160.  v1:= v0 - v4 @kind float;
  #L2c6164.  call temp:= `centerY`(v3) @signature `Landroid/graphics/RectF;.centerY:()F` @kind virtual;
  #L2c616a.  v3:= temp;
  #L2c616c.  goto L2c61a4;
  #L2c616e.  v3:= v3.`android.graphics.RectF.right` @type ^`float`;
  #L2c6172.  goto L2c6178;
  #L2c6174.  v3:= v3.`android.graphics.RectF.left` @type ^`float`;
  #L2c6178.  v3:= v3 - v4 @kind float;
  #L2c617a.  v1:= v3;
  #L2c617c.  goto L2c6154;
  #L2c617e.  v0:= v3.`android.graphics.RectF.right` @type ^`float`;
  #L2c6182.  goto L2c6188;
  #L2c6184.  v0:= v3.`android.graphics.RectF.left` @type ^`float`;
  #L2c6188.  v1:= v0 - v4 @kind float;
  #L2c618c.  v3:= v3.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c6190.  goto L2c61a4;
  #L2c6192.  v0:= v3.`android.graphics.RectF.right` @type ^`float`;
  #L2c6196.  goto L2c619c;
  #L2c6198.  v0:= v3.`android.graphics.RectF.left` @type ^`float`;
  #L2c619c.  v1:= v0 - v4 @kind float;
  #L2c61a0.  v3:= v3.`android.graphics.RectF.top` @type ^`float`;
  #L2c61a4.  v3:= v3 - v5 @kind float;
  #L2c61a6.  v4:= v2.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mTouchOffset` @type ^`android.graphics.PointF` @kind object;
  #L2c61aa.  v4.`android.graphics.PointF.x` @type ^`float` := v1;
  #L2c61ae.  v4.`android.graphics.PointF.y` @type ^`float` := v3;
  #L2c61b2.  return @kind void;
  #L2c61b4.  switch v0
                  | 1 => goto L2c6198
                  | 2 => goto L2c6192
                  | 3 => goto L2c6184
                  | 4 => goto L2c617e
                  | 5 => goto L2c6174
                  | 6 => goto L2c61a0
                  | 7 => goto L2c616e
                  | 8 => goto L2c618c
                  | 9 => goto L2c6158
                  | else => goto L2c6154;
}
procedure `void` `moveCenter`(`com.theartofdev.edmodo.cropper.CropWindowMoveHandler` v6 @kind this, `android.graphics.RectF` v7 @kind object, `float` v8 , `float` v9 , `android.graphics.RectF` v10 @kind object, `int` v11 , `int` v12 , `float` v13 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.moveCenter:(Landroid/graphics/RectF;FFLandroid/graphics/RectF;IIF)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2c6264.  call temp:= `centerX`(v7) @signature `Landroid/graphics/RectF;.centerX:()F` @kind virtual;
  #L2c626a.  v0:= temp;
  #L2c626c.  v8:= v8 - v0 @kind float;
  #L2c626e.  call temp:= `centerY`(v7) @signature `Landroid/graphics/RectF;.centerY:()F` @kind virtual;
  #L2c6274.  v0:= temp;
  #L2c6276.  v9:= v9 - v0 @kind float;
  #L2c6278.  v0:= v7.`android.graphics.RectF.left` @type ^`float`;
  #L2c627c.  v1:= v0 + v8 @kind float;
  #L2c6280.  v2:= 2.0F;
  #L2c6284.  v3:= 1065772646I;
  #L2c628a.  v4:= 0I;
  #L2c628c.  v1:= fcmpg(v1, v4);
  #L2c6290.  if v1 < 0 then goto L2c62c2;
  #L2c6294.  v1:= v7.`android.graphics.RectF.right` @type ^`float`;
  #L2c6298.  v5:= v1 + v8 @kind float;
  #L2c629c.  v11:= (`float`) v11 @kind i2f;
  #L2c629e.  v11:= fcmpl(v5, v11);
  #L2c62a2.  if v11 > 0 then goto L2c62c2;
  #L2c62a6.  v0:= v0 + v8 @kind float;
  #L2c62a8.  v11:= v10.`android.graphics.RectF.left` @type ^`float`;
  #L2c62ac.  v11:= fcmpg(v0, v11);
  #L2c62b0.  if v11 < 0 then goto L2c62c2;
  #L2c62b4.  v1:= v1 + v8 @kind float;
  #L2c62b6.  v11:= v10.`android.graphics.RectF.right` @type ^`float`;
  #L2c62ba.  v11:= fcmpl(v1, v11);
  #L2c62be.  if v11 <= 0 then goto L2c62d6;
  #L2c62c2.  v8:= v8 / v3 @kind float;
  #L2c62c4.  v11:= v6.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mTouchOffset` @type ^`android.graphics.PointF` @kind object;
  #L2c62c8.  v0:= v11.`android.graphics.PointF.x` @type ^`float`;
  #L2c62cc.  v1:= v8 / v2 @kind float;
  #L2c62d0.  v0:= v0 - v1 @kind float;
  #L2c62d2.  v11.`android.graphics.PointF.x` @type ^`float` := v0;
  #L2c62d6.  v11:= v7.`android.graphics.RectF.top` @type ^`float`;
  #L2c62da.  v0:= v11 + v9 @kind float;
  #L2c62de.  v0:= fcmpg(v0, v4);
  #L2c62e2.  if v0 < 0 then goto L2c6314;
  #L2c62e6.  v0:= v7.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c62ea.  v1:= v0 + v9 @kind float;
  #L2c62ee.  v12:= (`float`) v12 @kind i2f;
  #L2c62f0.  v12:= fcmpl(v1, v12);
  #L2c62f4.  if v12 > 0 then goto L2c6314;
  #L2c62f8.  v11:= v11 + v9 @kind float;
  #L2c62fa.  v12:= v10.`android.graphics.RectF.top` @type ^`float`;
  #L2c62fe.  v11:= fcmpg(v11, v12);
  #L2c6302.  if v11 < 0 then goto L2c6314;
  #L2c6306.  v0:= v0 + v9 @kind float;
  #L2c6308.  v11:= v10.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c630c.  v11:= fcmpl(v0, v11);
  #L2c6310.  if v11 <= 0 then goto L2c6328;
  #L2c6314.  v9:= v9 / v3 @kind float;
  #L2c6316.  v11:= v6.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mTouchOffset` @type ^`android.graphics.PointF` @kind object;
  #L2c631a.  v12:= v11.`android.graphics.PointF.y` @type ^`float`;
  #L2c631e.  v0:= v9 / v2 @kind float;
  #L2c6322.  v12:= v12 - v0 @kind float;
  #L2c6324.  v11.`android.graphics.PointF.y` @type ^`float` := v12;
  #L2c6328.  call `offset`(v7, v8, v9) @signature `Landroid/graphics/RectF;.offset:(FF)V` @kind virtual;
  #L2c632e.  call `snapEdgesToBounds`(v6, v7, v10, v13) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.snapEdgesToBounds:(Landroid/graphics/RectF;Landroid/graphics/RectF;F)V` @kind direct;
  #L2c6334.  return @kind void;
}
procedure `void` `moveSizeWithFixedAspectRatio`(`com.theartofdev.edmodo.cropper.CropWindowMoveHandler` v13 @kind this, `android.graphics.RectF` v14 @kind object, `float` v15 , `float` v16 , `android.graphics.RectF` v17 @kind object, `int` v18 , `int` v19 , `float` v20 , `float` v21 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.moveSizeWithFixedAspectRatio:(Landroid/graphics/RectF;FFLandroid/graphics/RectF;IIFF)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L2c6348.  v9:= v13 @kind object;
  #L2c634a.  v10:= v14 @kind object;
  #L2c634c.  v2:= v15;
  #L2c634e.  v3:= v16;
  #L2c6352.  v11:= v17 @kind object;
  #L2c6356.  v12:= v21;
  #L2c635a.  v0:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$1.a` @type ^`int`[] @kind object;
  #L2c635e.  v1:= v9.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mType` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L2c6362.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L2c6368.  v1:= temp;
  #L2c636a.  v0:= v0[v1];
  #L2c636e.  goto L2c658c;
  #L2c6374.  goto L2c6588;
  #L2c6378.  v7:= 1I;
  #L2c637a.  v8:= 1I;
  #L2c637c.  v0:= v13 @kind object;
  #L2c637e.  v1:= v14 @kind object;
  #L2c6380.  v2:= v16;
  #L2c6384.  v3:= v17 @kind object;
  #L2c6388.  v4:= v19;
  #L2c638c.  v5:= v20;
  #L2c6390.  v6:= v21;
  #L2c6394.  call `adjustBottom`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustBottom:(Landroid/graphics/RectF;FLandroid/graphics/RectF;IFFZZ)V` @kind direct;
  #L2c639a.  goto L2c63dc;
  #L2c639c.  v7:= 1I;
  #L2c639e.  v8:= 1I;
  #L2c63a0.  v0:= v13 @kind object;
  #L2c63a2.  v1:= v14 @kind object;
  #L2c63a4.  v2:= v15;
  #L2c63a6.  v3:= v17 @kind object;
  #L2c63aa.  v4:= v18;
  #L2c63ae.  v5:= v20;
  #L2c63b2.  v6:= v21;
  #L2c63b6.  call `adjustRight`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustRight:(Landroid/graphics/RectF;FLandroid/graphics/RectF;IFFZZ)V` @kind direct;
  #L2c63bc.  goto L2c6402;
  #L2c63be.  v6:= 1I;
  #L2c63c0.  v7:= 1I;
  #L2c63c2.  v0:= v13 @kind object;
  #L2c63c4.  v1:= v14 @kind object;
  #L2c63c6.  v2:= v16;
  #L2c63ca.  v3:= v17 @kind object;
  #L2c63ce.  v4:= v20;
  #L2c63d2.  v5:= v21;
  #L2c63d6.  call `adjustTop`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustTop:(Landroid/graphics/RectF;FLandroid/graphics/RectF;FFZZ)V` @kind direct;
  #L2c63dc.  call `adjustLeftRightByAspectRatio`(v13, v14, v11, v12) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustLeftRightByAspectRatio:(Landroid/graphics/RectF;Landroid/graphics/RectF;F)V` @kind direct;
  #L2c63e2.  goto L2c6588;
  #L2c63e6.  v6:= 1I;
  #L2c63e8.  v7:= 1I;
  #L2c63ea.  v0:= v13 @kind object;
  #L2c63ec.  v1:= v14 @kind object;
  #L2c63ee.  v2:= v15;
  #L2c63f0.  v3:= v17 @kind object;
  #L2c63f4.  v4:= v20;
  #L2c63f8.  v5:= v21;
  #L2c63fc.  call `adjustLeft`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustLeft:(Landroid/graphics/RectF;FLandroid/graphics/RectF;FFZZ)V` @kind direct;
  #L2c6402.  call `adjustTopBottomByAspectRatio`(v13, v14, v11, v12) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustTopBottomByAspectRatio:(Landroid/graphics/RectF;Landroid/graphics/RectF;F)V` @kind direct;
  #L2c6408.  goto L2c6588;
  #L2c640c.  v0:= v10.`android.graphics.RectF.left` @type ^`float`;
  #L2c6410.  v1:= v10.`android.graphics.RectF.top` @type ^`float`;
  #L2c6414.  call temp:= `calculateAspectRatio`(v0, v1, v15, v3) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.calculateAspectRatio:(FFFF)F` @kind static;
  #L2c641a.  v0:= temp;
  #L2c641c.  v0:= fcmpg(v0, v12);
  #L2c6420.  v7:= 0I;
  #L2c6422.  v8:= 1I;
  #L2c6424.  if v0 >= 0 then goto L2c644a;
  #L2c6428.  v0:= v13 @kind object;
  #L2c642a.  v1:= v14 @kind object;
  #L2c642c.  v2:= v16;
  #L2c6430.  v3:= v17 @kind object;
  #L2c6434.  v4:= v19;
  #L2c6438.  v5:= v20;
  #L2c643c.  v6:= v21;
  #L2c6440.  call `adjustBottom`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustBottom:(Landroid/graphics/RectF;FLandroid/graphics/RectF;IFFZZ)V` @kind direct;
  #L2c6446.  goto L2c6502;
  #L2c644a.  v0:= v13 @kind object;
  #L2c644c.  v1:= v14 @kind object;
  #L2c644e.  v2:= v15;
  #L2c6450.  v3:= v17 @kind object;
  #L2c6454.  v4:= v18;
  #L2c6458.  v5:= v20;
  #L2c645c.  v6:= v21;
  #L2c6460.  call `adjustRight`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustRight:(Landroid/graphics/RectF;FLandroid/graphics/RectF;IFFZZ)V` @kind direct;
  #L2c6466.  goto L2c64c2;
  #L2c6468.  v0:= v10.`android.graphics.RectF.top` @type ^`float`;
  #L2c646c.  v1:= v10.`android.graphics.RectF.right` @type ^`float`;
  #L2c6470.  call temp:= `calculateAspectRatio`(v15, v0, v1, v3) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.calculateAspectRatio:(FFFF)F` @kind static;
  #L2c6476.  v0:= temp;
  #L2c6478.  v0:= fcmpg(v0, v12);
  #L2c647c.  if v0 >= 0 then goto L2c64a6;
  #L2c6480.  v7:= 1I;
  #L2c6482.  v8:= 0I;
  #L2c6484.  v0:= v13 @kind object;
  #L2c6486.  v1:= v14 @kind object;
  #L2c6488.  v2:= v16;
  #L2c648c.  v3:= v17 @kind object;
  #L2c6490.  v4:= v19;
  #L2c6494.  v5:= v20;
  #L2c6498.  v6:= v21;
  #L2c649c.  call `adjustBottom`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustBottom:(Landroid/graphics/RectF;FLandroid/graphics/RectF;IFFZZ)V` @kind direct;
  #L2c64a2.  goto L2c6562;
  #L2c64a6.  v6:= 0I;
  #L2c64a8.  v7:= 1I;
  #L2c64aa.  v0:= v13 @kind object;
  #L2c64ac.  v1:= v14 @kind object;
  #L2c64ae.  v2:= v15;
  #L2c64b0.  v3:= v17 @kind object;
  #L2c64b4.  v4:= v20;
  #L2c64b8.  v5:= v21;
  #L2c64bc.  call `adjustLeft`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustLeft:(Landroid/graphics/RectF;FLandroid/graphics/RectF;FFZZ)V` @kind direct;
  #L2c64c2.  call `adjustBottomByAspectRatio`(v13, v14, v12) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustBottomByAspectRatio:(Landroid/graphics/RectF;F)V` @kind direct;
  #L2c64c8.  goto L2c6588;
  #L2c64cc.  v0:= v10.`android.graphics.RectF.left` @type ^`float`;
  #L2c64d0.  v1:= v10.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c64d4.  call temp:= `calculateAspectRatio`(v0, v3, v15, v1) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.calculateAspectRatio:(FFFF)F` @kind static;
  #L2c64da.  v0:= temp;
  #L2c64dc.  v0:= fcmpg(v0, v12);
  #L2c64e0.  if v0 >= 0 then goto L2c650a;
  #L2c64e4.  v6:= 0I;
  #L2c64e6.  v7:= 1I;
  #L2c64e8.  v0:= v13 @kind object;
  #L2c64ea.  v1:= v14 @kind object;
  #L2c64ec.  v2:= v16;
  #L2c64f0.  v3:= v17 @kind object;
  #L2c64f4.  v4:= v20;
  #L2c64f8.  v5:= v21;
  #L2c64fc.  call `adjustTop`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustTop:(Landroid/graphics/RectF;FLandroid/graphics/RectF;FFZZ)V` @kind direct;
  #L2c6502.  call `adjustRightByAspectRatio`(v13, v14, v12) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustRightByAspectRatio:(Landroid/graphics/RectF;F)V` @kind direct;
  #L2c6508.  goto L2c6588;
  #L2c650a.  v7:= 1I;
  #L2c650c.  v8:= 0I;
  #L2c650e.  v0:= v13 @kind object;
  #L2c6510.  v1:= v14 @kind object;
  #L2c6512.  v2:= v15;
  #L2c6514.  v3:= v17 @kind object;
  #L2c6518.  v4:= v18;
  #L2c651c.  v5:= v20;
  #L2c6520.  v6:= v21;
  #L2c6524.  call `adjustRight`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustRight:(Landroid/graphics/RectF;FLandroid/graphics/RectF;IFFZZ)V` @kind direct;
  #L2c652a.  goto L2c6582;
  #L2c652c.  v0:= v10.`android.graphics.RectF.right` @type ^`float`;
  #L2c6530.  v1:= v10.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c6534.  call temp:= `calculateAspectRatio`(v15, v3, v0, v1) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.calculateAspectRatio:(FFFF)F` @kind static;
  #L2c653a.  v0:= temp;
  #L2c653c.  v0:= fcmpg(v0, v12);
  #L2c6540.  v6:= 1I;
  #L2c6542.  v7:= 0I;
  #L2c6544.  if v0 >= 0 then goto L2c656a;
  #L2c6548.  v0:= v13 @kind object;
  #L2c654a.  v1:= v14 @kind object;
  #L2c654c.  v2:= v16;
  #L2c6550.  v3:= v17 @kind object;
  #L2c6554.  v4:= v20;
  #L2c6558.  v5:= v21;
  #L2c655c.  call `adjustTop`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustTop:(Landroid/graphics/RectF;FLandroid/graphics/RectF;FFZZ)V` @kind direct;
  #L2c6562.  call `adjustLeftByAspectRatio`(v13, v14, v12) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustLeftByAspectRatio:(Landroid/graphics/RectF;F)V` @kind direct;
  #L2c6568.  goto L2c6588;
  #L2c656a.  v0:= v13 @kind object;
  #L2c656c.  v1:= v14 @kind object;
  #L2c656e.  v2:= v15;
  #L2c6570.  v3:= v17 @kind object;
  #L2c6574.  v4:= v20;
  #L2c6578.  v5:= v21;
  #L2c657c.  call `adjustLeft`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustLeft:(Landroid/graphics/RectF;FLandroid/graphics/RectF;FFZZ)V` @kind direct;
  #L2c6582.  call `adjustTopByAspectRatio`(v13, v14, v12) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustTopByAspectRatio:(Landroid/graphics/RectF;F)V` @kind direct;
  #L2c6588.  return @kind void;
  #L2c658a.  
  #L2c658c.  switch v0
                  | 1 => goto L2c652c
                  | 2 => goto L2c64cc
                  | 3 => goto L2c6468
                  | 4 => goto L2c640c
                  | 5 => goto L2c63e6
                  | 6 => goto L2c63be
                  | 7 => goto L2c639c
                  | 8 => goto L2c6378
                  | else => goto L2c6374;
}
procedure `void` `moveSizeWithFreeAspectRatio`(`com.theartofdev.edmodo.cropper.CropWindowMoveHandler` v11 @kind this, `android.graphics.RectF` v12 @kind object, `float` v13 , `float` v14 , `android.graphics.RectF` v15 @kind object, `int` v16 , `int` v17 , `float` v18 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.moveSizeWithFreeAspectRatio:(Landroid/graphics/RectF;FFLandroid/graphics/RectF;IIF)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2c65c4.  v0:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$1.a` @type ^`int`[] @kind object;
  #L2c65c8.  v10:= v11 @kind object;
  #L2c65ca.  v1:= v10.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mType` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L2c65ce.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L2c65d4.  v1:= temp;
  #L2c65d6.  v0:= v0[v1];
  #L2c65da.  goto L2c66e0;
  #L2c65e0.  goto L2c66dc;
  #L2c65e4.  v7:= 0I;
  #L2c65e6.  v8:= 0I;
  #L2c65e8.  v9:= 0I;
  #L2c65ea.  v1:= v11 @kind object;
  #L2c65ec.  v2:= v12 @kind object;
  #L2c65ee.  v3:= v14;
  #L2c65f0.  v4:= v15 @kind object;
  #L2c65f2.  v5:= v17;
  #L2c65f6.  v6:= v18;
  #L2c65fa.  call `adjustBottom`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustBottom:(Landroid/graphics/RectF;FLandroid/graphics/RectF;IFFZZ)V` @kind direct;
  #L2c6600.  goto L2c66dc;
  #L2c6604.  v7:= 0I;
  #L2c6606.  v8:= 0I;
  #L2c6608.  v9:= 0I;
  #L2c660a.  v1:= v11 @kind object;
  #L2c660c.  v2:= v12 @kind object;
  #L2c660e.  v3:= v13;
  #L2c6610.  v4:= v15 @kind object;
  #L2c6612.  goto L2c66ac;
  #L2c6616.  v6:= 0I;
  #L2c6618.  v7:= 0I;
  #L2c661a.  v8:= 0I;
  #L2c661c.  v1:= v11 @kind object;
  #L2c661e.  v2:= v12 @kind object;
  #L2c6620.  v3:= v14;
  #L2c6622.  v4:= v15 @kind object;
  #L2c6624.  v5:= v18;
  #L2c6628.  call `adjustTop`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustTop:(Landroid/graphics/RectF;FLandroid/graphics/RectF;FFZZ)V` @kind direct;
  #L2c662e.  goto L2c66dc;
  #L2c6632.  v6:= 0I;
  #L2c6634.  v7:= 0I;
  #L2c6636.  v8:= 0I;
  #L2c6638.  v1:= v11 @kind object;
  #L2c663a.  v2:= v12 @kind object;
  #L2c663c.  v3:= v13;
  #L2c663e.  v4:= v15 @kind object;
  #L2c6640.  goto L2c6688;
  #L2c6642.  v7:= 0I;
  #L2c6644.  v8:= 0I;
  #L2c6646.  v9:= 0I;
  #L2c6648.  v1:= v11 @kind object;
  #L2c664a.  v2:= v12 @kind object;
  #L2c664c.  v3:= v14;
  #L2c664e.  v4:= v15 @kind object;
  #L2c6650.  v5:= v17;
  #L2c6654.  v6:= v18;
  #L2c6658.  call `adjustBottom`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustBottom:(Landroid/graphics/RectF;FLandroid/graphics/RectF;IFFZZ)V` @kind direct;
  #L2c665e.  v3:= v13;
  #L2c6660.  v5:= v16;
  #L2c6664.  goto L2c66b4;
  #L2c6666.  v7:= 0I;
  #L2c6668.  v8:= 0I;
  #L2c666a.  v9:= 0I;
  #L2c666c.  v1:= v11 @kind object;
  #L2c666e.  v2:= v12 @kind object;
  #L2c6670.  v3:= v14;
  #L2c6672.  v4:= v15 @kind object;
  #L2c6674.  v5:= v17;
  #L2c6678.  v6:= v18;
  #L2c667c.  call `adjustBottom`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustBottom:(Landroid/graphics/RectF;FLandroid/graphics/RectF;IFFZZ)V` @kind direct;
  #L2c6682.  v6:= 0I;
  #L2c6684.  v7:= 0I;
  #L2c6686.  v3:= v13;
  #L2c6688.  v5:= v18;
  #L2c668c.  goto L2c66d6;
  #L2c668e.  v6:= 0I;
  #L2c6690.  v7:= 0I;
  #L2c6692.  v8:= 0I;
  #L2c6694.  v1:= v11 @kind object;
  #L2c6696.  v2:= v12 @kind object;
  #L2c6698.  v3:= v14;
  #L2c669a.  v4:= v15 @kind object;
  #L2c669c.  v5:= v18;
  #L2c66a0.  call `adjustTop`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustTop:(Landroid/graphics/RectF;FLandroid/graphics/RectF;FFZZ)V` @kind direct;
  #L2c66a6.  v7:= 0I;
  #L2c66a8.  v9:= 0I;
  #L2c66aa.  v3:= v13;
  #L2c66ac.  v5:= v16;
  #L2c66b0.  v6:= v18;
  #L2c66b4.  call `adjustRight`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustRight:(Landroid/graphics/RectF;FLandroid/graphics/RectF;IFFZZ)V` @kind direct;
  #L2c66ba.  goto L2c66dc;
  #L2c66bc.  v6:= 0I;
  #L2c66be.  v7:= 0I;
  #L2c66c0.  v8:= 0I;
  #L2c66c2.  v1:= v11 @kind object;
  #L2c66c4.  v2:= v12 @kind object;
  #L2c66c6.  v3:= v14;
  #L2c66c8.  v4:= v15 @kind object;
  #L2c66ca.  v5:= v18;
  #L2c66ce.  call `adjustTop`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustTop:(Landroid/graphics/RectF;FLandroid/graphics/RectF;FFZZ)V` @kind direct;
  #L2c66d4.  v3:= v13;
  #L2c66d6.  call `adjustLeft`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.adjustLeft:(Landroid/graphics/RectF;FLandroid/graphics/RectF;FFZZ)V` @kind direct;
  #L2c66dc.  return @kind void;
  #L2c66de.  
  #L2c66e0.  switch v0
                  | 1 => goto L2c66bc
                  | 2 => goto L2c668e
                  | 3 => goto L2c6666
                  | 4 => goto L2c6642
                  | 5 => goto L2c6632
                  | 6 => goto L2c6616
                  | 7 => goto L2c6604
                  | 8 => goto L2c65e4
                  | else => goto L2c65e0;
}
procedure `void` `snapEdgesToBounds`(`com.theartofdev.edmodo.cropper.CropWindowMoveHandler` v4 @kind this, `android.graphics.RectF` v5 @kind object, `android.graphics.RectF` v6 @kind object, `float` v7 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.snapEdgesToBounds:(Landroid/graphics/RectF;Landroid/graphics/RectF;F)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c6718.  v0:= v5.`android.graphics.RectF.left` @type ^`float`;
  #L2c671c.  v1:= v6.`android.graphics.RectF.left` @type ^`float`;
  #L2c6720.  v2:= v1 + v7 @kind float;
  #L2c6724.  v3:= 0I;
  #L2c6726.  v2:= fcmpg(v0, v2);
  #L2c672a.  if v2 >= 0 then goto L2c6736;
  #L2c672e.  v1:= v1 - v0 @kind float;
  #L2c6730.  call `offset`(v5, v1, v3) @signature `Landroid/graphics/RectF;.offset:(FF)V` @kind virtual;
  #L2c6736.  v0:= v5.`android.graphics.RectF.top` @type ^`float`;
  #L2c673a.  v1:= v6.`android.graphics.RectF.top` @type ^`float`;
  #L2c673e.  v2:= v1 + v7 @kind float;
  #L2c6742.  v2:= fcmpg(v0, v2);
  #L2c6746.  if v2 >= 0 then goto L2c6752;
  #L2c674a.  v1:= v1 - v0 @kind float;
  #L2c674c.  call `offset`(v5, v3, v1) @signature `Landroid/graphics/RectF;.offset:(FF)V` @kind virtual;
  #L2c6752.  v0:= v5.`android.graphics.RectF.right` @type ^`float`;
  #L2c6756.  v1:= v6.`android.graphics.RectF.right` @type ^`float`;
  #L2c675a.  v2:= v1 - v7 @kind float;
  #L2c675e.  v2:= fcmpl(v0, v2);
  #L2c6762.  if v2 <= 0 then goto L2c676e;
  #L2c6766.  v1:= v1 - v0 @kind float;
  #L2c6768.  call `offset`(v5, v1, v3) @signature `Landroid/graphics/RectF;.offset:(FF)V` @kind virtual;
  #L2c676e.  v0:= v5.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c6772.  v6:= v6.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c6776.  v7:= v6 - v7 @kind float;
  #L2c677a.  v7:= fcmpl(v0, v7);
  #L2c677e.  if v7 <= 0 then goto L2c678a;
  #L2c6782.  v6:= v6 - v0 @kind float;
  #L2c6784.  call `offset`(v5, v3, v6) @signature `Landroid/graphics/RectF;.offset:(FF)V` @kind virtual;
  #L2c678a.  return @kind void;
}
procedure `void` `move`(`com.theartofdev.edmodo.cropper.CropWindowMoveHandler` v10 @kind this, `android.graphics.RectF` v11 @kind object, `float` v12 , `float` v13 , `android.graphics.RectF` v14 @kind object, `int` v15 , `int` v16 , `float` v17 , `boolean` v18 , `float` v19 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.move:(Landroid/graphics/RectF;FFLandroid/graphics/RectF;IIFZF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2c61f0.  v9:= v10 @kind object;
  #L2c61f2.  v0:= v9.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mTouchOffset` @type ^`android.graphics.PointF` @kind object;
  #L2c61f6.  v1:= v0.`android.graphics.PointF.x` @type ^`float`;
  #L2c61fa.  v2:= v12 + v1 @kind float;
  #L2c61fe.  v0:= v0.`android.graphics.PointF.y` @type ^`float`;
  #L2c6202.  v3:= v13 + v0 @kind float;
  #L2c6206.  v0:= v9.`com.theartofdev.edmodo.cropper.CropWindowMoveHandler.mType` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L2c620a.  v1:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.CENTER` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L2c620e.  if v0 != v1 then goto L2c622a;
  #L2c6212.  v0:= v10 @kind object;
  #L2c6214.  v1:= v11 @kind object;
  #L2c6216.  v4:= v14 @kind object;
  #L2c6218.  v5:= v15;
  #L2c621a.  v6:= v16;
  #L2c621e.  v7:= v17;
  #L2c6222.  call `moveCenter`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.moveCenter:(Landroid/graphics/RectF;FFLandroid/graphics/RectF;IIF)V` @kind direct;
  #L2c6228.  goto L2c6250;
  #L2c622a.  v0:= v10 @kind object;
  #L2c622c.  v1:= v11 @kind object;
  #L2c622e.  v4:= v14 @kind object;
  #L2c6230.  v5:= v15;
  #L2c6232.  v6:= v16;
  #L2c6236.  v7:= v17;
  #L2c623a.  if v18 == 0 then goto L2c624a;
  #L2c623e.  v8:= v19;
  #L2c6242.  call `moveSizeWithFixedAspectRatio`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.moveSizeWithFixedAspectRatio:(Landroid/graphics/RectF;FFLandroid/graphics/RectF;IIFF)V` @kind direct;
  #L2c6248.  goto L2c6250;
  #L2c624a.  call `moveSizeWithFreeAspectRatio`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.moveSizeWithFreeAspectRatio:(Landroid/graphics/RectF;FFLandroid/graphics/RectF;IIF)V` @kind direct;
  #L2c6250.  return @kind void;
}
