record `com.theartofdev.edmodo.cropper.CropWindowHandler` @kind class @AccessFlag FINAL {
  `android.graphics.RectF` `com.theartofdev.edmodo.cropper.CropWindowHandler.mEdges` @AccessFlag PRIVATE_FINAL;
  `android.graphics.RectF` `com.theartofdev.edmodo.cropper.CropWindowHandler.mGetEdges` @AccessFlag PRIVATE_FINAL;
  `float` `com.theartofdev.edmodo.cropper.CropWindowHandler.mMaxCropResultHeight` @AccessFlag PRIVATE;
  `float` `com.theartofdev.edmodo.cropper.CropWindowHandler.mMaxCropResultWidth` @AccessFlag PRIVATE;
  `float` `com.theartofdev.edmodo.cropper.CropWindowHandler.mMaxCropWindowHeight` @AccessFlag PRIVATE;
  `float` `com.theartofdev.edmodo.cropper.CropWindowHandler.mMaxCropWindowWidth` @AccessFlag PRIVATE;
  `float` `com.theartofdev.edmodo.cropper.CropWindowHandler.mMinCropResultHeight` @AccessFlag PRIVATE;
  `float` `com.theartofdev.edmodo.cropper.CropWindowHandler.mMinCropResultWidth` @AccessFlag PRIVATE;
  `float` `com.theartofdev.edmodo.cropper.CropWindowHandler.mMinCropWindowHeight` @AccessFlag PRIVATE;
  `float` `com.theartofdev.edmodo.cropper.CropWindowHandler.mMinCropWindowWidth` @AccessFlag PRIVATE;
  `float` `com.theartofdev.edmodo.cropper.CropWindowHandler.mScaleFactorHeight` @AccessFlag PRIVATE;
  `float` `com.theartofdev.edmodo.cropper.CropWindowHandler.mScaleFactorWidth` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.theartofdev.edmodo.cropper.CropWindowHandler` v1 @kind this) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2c54c4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c54ca.  v0:= new `android.graphics.RectF`;
  #L2c54ce.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L2c54d4.  v1.`com.theartofdev.edmodo.cropper.CropWindowHandler.mEdges` @type ^`android.graphics.RectF` := v0 @kind object;
  #L2c54d8.  v0:= new `android.graphics.RectF`;
  #L2c54dc.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L2c54e2.  v1.`com.theartofdev.edmodo.cropper.CropWindowHandler.mGetEdges` @type ^`android.graphics.RectF` := v0 @kind object;
  #L2c54e6.  v0:= 1.0F;
  #L2c54ea.  v1.`com.theartofdev.edmodo.cropper.CropWindowHandler.mScaleFactorWidth` @type ^`float` := v0;
  #L2c54ee.  v1.`com.theartofdev.edmodo.cropper.CropWindowHandler.mScaleFactorHeight` @type ^`float` := v0;
  #L2c54f2.  return @kind void;
}
procedure `boolean` `focusCenter`(`com.theartofdev.edmodo.cropper.CropWindowHandler` v1 @kind this) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.focusCenter:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2c4ff8.  call temp:= `showGuidelines`(v1) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.showGuidelines:()Z` @kind virtual;
  #L2c4ffe.  v0:= temp;
  #L2c5000.  v0:= v0 ^~ 1;
  #L2c5004.  return v0;
}
procedure `com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` `getOvalPressedMoveType`(`com.theartofdev.edmodo.cropper.CropWindowHandler` v6 @kind this, `float` v7 , `float` v8 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.getOvalPressedMoveType:(FF)Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler$Type;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2c5188.  v0:= v6.`com.theartofdev.edmodo.cropper.CropWindowHandler.mEdges` @type ^`android.graphics.RectF` @kind object;
  #L2c518c.  call temp:= `width`(v0) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L2c5192.  v0:= temp;
  #L2c5194.  v1:= 6.0F;
  #L2c5198.  v0:= v0 / v1 @kind float;
  #L2c519a.  v2:= v6.`com.theartofdev.edmodo.cropper.CropWindowHandler.mEdges` @type ^`android.graphics.RectF` @kind object;
  #L2c519e.  v3:= v2.`android.graphics.RectF.left` @type ^`float`;
  #L2c51a2.  v4:= v3 + v0 @kind float;
  #L2c51a6.  v5:= 5.0F;
  #L2c51aa.  v0:= v0 * v5 @kind float;
  #L2c51ae.  v3:= v3 + v0 @kind float;
  #L2c51b0.  call temp:= `height`(v2) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L2c51b6.  v0:= temp;
  #L2c51b8.  v0:= v0 / v1 @kind float;
  #L2c51ba.  v1:= v6.`com.theartofdev.edmodo.cropper.CropWindowHandler.mEdges` @type ^`android.graphics.RectF` @kind object;
  #L2c51be.  v1:= v1.`android.graphics.RectF.top` @type ^`float`;
  #L2c51c2.  v2:= v1 + v0 @kind float;
  #L2c51c6.  v0:= v0 * v5 @kind float;
  #L2c51ca.  v1:= v1 + v0 @kind float;
  #L2c51cc.  v0:= fcmpg(v7, v4);
  #L2c51d0.  if v0 >= 0 then goto L2c51f6;
  #L2c51d4.  v7:= fcmpg(v8, v2);
  #L2c51d8.  if v7 >= 0 then goto L2c51e2;
  #L2c51dc.  v7:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.TOP_LEFT` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L2c51e0.  goto L2c5240;
  #L2c51e2.  v7:= fcmpg(v8, v1);
  #L2c51e6.  if v7 >= 0 then goto L2c51f0;
  #L2c51ea.  v7:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.LEFT` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L2c51ee.  goto L2c5240;
  #L2c51f0.  v7:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.BOTTOM_LEFT` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L2c51f4.  goto L2c5240;
  #L2c51f6.  v7:= fcmpg(v7, v3);
  #L2c51fa.  if v7 >= 0 then goto L2c5220;
  #L2c51fe.  v7:= fcmpg(v8, v2);
  #L2c5202.  if v7 >= 0 then goto L2c520c;
  #L2c5206.  v7:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.TOP` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L2c520a.  goto L2c5240;
  #L2c520c.  v7:= fcmpg(v8, v1);
  #L2c5210.  if v7 >= 0 then goto L2c521a;
  #L2c5214.  v7:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.CENTER` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L2c5218.  goto L2c5240;
  #L2c521a.  v7:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.BOTTOM` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L2c521e.  goto L2c5240;
  #L2c5220.  v7:= fcmpg(v8, v2);
  #L2c5224.  if v7 >= 0 then goto L2c522e;
  #L2c5228.  v7:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.TOP_RIGHT` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L2c522c.  goto L2c5240;
  #L2c522e.  v7:= fcmpg(v8, v1);
  #L2c5232.  if v7 >= 0 then goto L2c523c;
  #L2c5236.  v7:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.RIGHT` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L2c523a.  goto L2c5240;
  #L2c523c.  v7:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.BOTTOM_RIGHT` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L2c5240.  return v7 @kind object;
}
procedure `com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` `getRectanglePressedMoveType`(`com.theartofdev.edmodo.cropper.CropWindowHandler` v7 @kind this, `float` v8 , `float` v9 , `float` v10 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.getRectanglePressedMoveType:(FFF)Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler$Type;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2c5254.  v0:= v7.`com.theartofdev.edmodo.cropper.CropWindowHandler.mEdges` @type ^`android.graphics.RectF` @kind object;
  #L2c5258.  v1:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L2c525c.  v0:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L2c5260.  call temp:= `isInCornerTargetZone`(v8, v9, v1, v0, v10) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.isInCornerTargetZone:(FFFFF)Z` @kind static;
  #L2c5266.  v0:= temp;
  #L2c5268.  if v0 == 0 then goto L2c5274;
  #L2c526c.  v8:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.TOP_LEFT` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L2c5270.  goto L2c53e0;
  #L2c5274.  v0:= v7.`com.theartofdev.edmodo.cropper.CropWindowHandler.mEdges` @type ^`android.graphics.RectF` @kind object;
  #L2c5278.  v1:= v0.`android.graphics.RectF.right` @type ^`float`;
  #L2c527c.  v0:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L2c5280.  call temp:= `isInCornerTargetZone`(v8, v9, v1, v0, v10) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.isInCornerTargetZone:(FFFFF)Z` @kind static;
  #L2c5286.  v0:= temp;
  #L2c5288.  if v0 == 0 then goto L2c5294;
  #L2c528c.  v8:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.TOP_RIGHT` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L2c5290.  goto L2c53e0;
  #L2c5294.  v0:= v7.`com.theartofdev.edmodo.cropper.CropWindowHandler.mEdges` @type ^`android.graphics.RectF` @kind object;
  #L2c5298.  v1:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L2c529c.  v0:= v0.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c52a0.  call temp:= `isInCornerTargetZone`(v8, v9, v1, v0, v10) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.isInCornerTargetZone:(FFFFF)Z` @kind static;
  #L2c52a6.  v0:= temp;
  #L2c52a8.  if v0 == 0 then goto L2c52b4;
  #L2c52ac.  v8:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.BOTTOM_LEFT` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L2c52b0.  goto L2c53e0;
  #L2c52b4.  v0:= v7.`com.theartofdev.edmodo.cropper.CropWindowHandler.mEdges` @type ^`android.graphics.RectF` @kind object;
  #L2c52b8.  v1:= v0.`android.graphics.RectF.right` @type ^`float`;
  #L2c52bc.  v0:= v0.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c52c0.  call temp:= `isInCornerTargetZone`(v8, v9, v1, v0, v10) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.isInCornerTargetZone:(FFFFF)Z` @kind static;
  #L2c52c6.  v0:= temp;
  #L2c52c8.  if v0 == 0 then goto L2c52d4;
  #L2c52cc.  v8:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.BOTTOM_RIGHT` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L2c52d0.  goto L2c53e0;
  #L2c52d4.  v0:= v7.`com.theartofdev.edmodo.cropper.CropWindowHandler.mEdges` @type ^`android.graphics.RectF` @kind object;
  #L2c52d8.  v3:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L2c52dc.  v4:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L2c52e0.  v5:= v0.`android.graphics.RectF.right` @type ^`float`;
  #L2c52e4.  v6:= v0.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c52e8.  v1:= v8;
  #L2c52ea.  v2:= v9;
  #L2c52ec.  call temp:= `isInCenterTargetZone`(v1, v2, v3, v4, v5, v6) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.isInCenterTargetZone:(FFFFFF)Z` @kind static;
  #L2c52f2.  v0:= temp;
  #L2c52f4.  if v0 == 0 then goto L2c530c;
  #L2c52f8.  call temp:= `focusCenter`(v7) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.focusCenter:()Z` @kind direct;
  #L2c52fe.  v0:= temp;
  #L2c5300.  if v0 == 0 then goto L2c530c;
  #L2c5304.  v8:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.CENTER` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L2c5308.  goto L2c53e0;
  #L2c530c.  v0:= v7.`com.theartofdev.edmodo.cropper.CropWindowHandler.mEdges` @type ^`android.graphics.RectF` @kind object;
  #L2c5310.  v3:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L2c5314.  v4:= v0.`android.graphics.RectF.right` @type ^`float`;
  #L2c5318.  v5:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L2c531c.  v1:= v8;
  #L2c531e.  v2:= v9;
  #L2c5320.  v6:= v10;
  #L2c5322.  call temp:= `isInHorizontalTargetZone`(v1, v2, v3, v4, v5, v6) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.isInHorizontalTargetZone:(FFFFFF)Z` @kind static;
  #L2c5328.  v0:= temp;
  #L2c532a.  if v0 == 0 then goto L2c5334;
  #L2c532e.  v8:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.TOP` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L2c5332.  goto L2c53e0;
  #L2c5334.  v0:= v7.`com.theartofdev.edmodo.cropper.CropWindowHandler.mEdges` @type ^`android.graphics.RectF` @kind object;
  #L2c5338.  v3:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L2c533c.  v4:= v0.`android.graphics.RectF.right` @type ^`float`;
  #L2c5340.  v5:= v0.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c5344.  v1:= v8;
  #L2c5346.  v2:= v9;
  #L2c5348.  v6:= v10;
  #L2c534a.  call temp:= `isInHorizontalTargetZone`(v1, v2, v3, v4, v5, v6) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.isInHorizontalTargetZone:(FFFFFF)Z` @kind static;
  #L2c5350.  v0:= temp;
  #L2c5352.  if v0 == 0 then goto L2c535c;
  #L2c5356.  v8:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.BOTTOM` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L2c535a.  goto L2c53e0;
  #L2c535c.  v0:= v7.`com.theartofdev.edmodo.cropper.CropWindowHandler.mEdges` @type ^`android.graphics.RectF` @kind object;
  #L2c5360.  v3:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L2c5364.  v4:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L2c5368.  v5:= v0.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c536c.  v1:= v8;
  #L2c536e.  v2:= v9;
  #L2c5370.  v6:= v10;
  #L2c5372.  call temp:= `isInVerticalTargetZone`(v1, v2, v3, v4, v5, v6) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.isInVerticalTargetZone:(FFFFFF)Z` @kind static;
  #L2c5378.  v0:= temp;
  #L2c537a.  if v0 == 0 then goto L2c5384;
  #L2c537e.  v8:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.LEFT` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L2c5382.  goto L2c53e0;
  #L2c5384.  v0:= v7.`com.theartofdev.edmodo.cropper.CropWindowHandler.mEdges` @type ^`android.graphics.RectF` @kind object;
  #L2c5388.  v3:= v0.`android.graphics.RectF.right` @type ^`float`;
  #L2c538c.  v4:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L2c5390.  v5:= v0.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c5394.  v1:= v8;
  #L2c5396.  v2:= v9;
  #L2c5398.  v6:= v10;
  #L2c539a.  call temp:= `isInVerticalTargetZone`(v1, v2, v3, v4, v5, v6) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.isInVerticalTargetZone:(FFFFFF)Z` @kind static;
  #L2c53a0.  v10:= temp;
  #L2c53a2.  if v10 == 0 then goto L2c53ac;
  #L2c53a6.  v8:= `@@com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type.RIGHT` @type ^`com.theartofdev.edmodo.cropper.CropWindowMoveHandler$Type` @kind object;
  #L2c53aa.  goto L2c53e0;
  #L2c53ac.  v10:= v7.`com.theartofdev.edmodo.cropper.CropWindowHandler.mEdges` @type ^`android.graphics.RectF` @kind object;
  #L2c53b0.  v2:= v10.`android.graphics.RectF.left` @type ^`float`;
  #L2c53b4.  v3:= v10.`android.graphics.RectF.top` @type ^`float`;
  #L2c53b8.  v4:= v10.`android.graphics.RectF.right` @type ^`float`;
  #L2c53bc.  v5:= v10.`android.graphics.RectF.bottom` @type ^`float`;
  #L2c53c0.  v0:= v8;
  #L2c53c2.  v1:= v9;
  #L2c53c4.  call temp:= `isInCenterTargetZone`(v0, v1, v2, v3, v4, v5) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.isInCenterTargetZone:(FFFFFF)Z` @kind static;
  #L2c53ca.  v8:= temp;
  #L2c53cc.  if v8 == 0 then goto L2c53de;
  #L2c53d0.  call temp:= `focusCenter`(v7) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.focusCenter:()Z` @kind direct;
  #L2c53d6.  v8:= temp;
  #L2c53d8.  if v8 != 0 then goto L2c53de;
  #L2c53dc.  goto L2c5304;
  #L2c53de.  v8:= 0I;
  #L2c53e0.  return v8 @kind object;
}
procedure `boolean` `isInCenterTargetZone`(`float` v0 , `float` v1 , `float` v2 , `float` v3 , `float` v4 , `float` v5 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.isInCenterTargetZone:(FFFFFF)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L2c5018.  v2:= fcmpl(v0, v2);
  #L2c501c.  if v2 <= 0 then goto L2c503c;
  #L2c5020.  v0:= fcmpg(v0, v4);
  #L2c5024.  if v0 >= 0 then goto L2c503c;
  #L2c5028.  v0:= fcmpl(v1, v3);
  #L2c502c.  if v0 <= 0 then goto L2c503c;
  #L2c5030.  v0:= fcmpg(v1, v5);
  #L2c5034.  if v0 >= 0 then goto L2c503c;
  #L2c5038.  v0:= 1I;
  #L2c503a.  goto L2c503e;
  #L2c503c.  v0:= 0I;
  #L2c503e.  return v0;
}
procedure `boolean` `isInCornerTargetZone`(`float` v0 , `float` v1 , `float` v2 , `float` v3 , `float` v4 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.isInCornerTargetZone:(FFFFF)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L2c5050.  v0:= v0 - v2 @kind float;
  #L2c5052.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L2c5058.  v0:= temp;
  #L2c505a.  v0:= fcmpg(v0, v4);
  #L2c505e.  if v0 > 0 then goto L2c5078;
  #L2c5062.  v1:= v1 - v3 @kind float;
  #L2c5064.  call temp:= `abs`(v1) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L2c506a.  v0:= temp;
  #L2c506c.  v0:= fcmpg(v0, v4);
  #L2c5070.  if v0 > 0 then goto L2c5078;
  #L2c5074.  v0:= 1I;
  #L2c5076.  goto L2c507a;
  #L2c5078.  v0:= 0I;
  #L2c507a.  return v0;
}
procedure `boolean` `isInHorizontalTargetZone`(`float` v0 , `float` v1 , `float` v2 , `float` v3 , `float` v4 , `float` v5 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.isInHorizontalTargetZone:(FFFFFF)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L2c508c.  v2:= fcmpl(v0, v2);
  #L2c5090.  if v2 <= 0 then goto L2c50b2;
  #L2c5094.  v0:= fcmpg(v0, v3);
  #L2c5098.  if v0 >= 0 then goto L2c50b2;
  #L2c509c.  v1:= v1 - v4 @kind float;
  #L2c509e.  call temp:= `abs`(v1) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L2c50a4.  v0:= temp;
  #L2c50a6.  v0:= fcmpg(v0, v5);
  #L2c50aa.  if v0 > 0 then goto L2c50b2;
  #L2c50ae.  v0:= 1I;
  #L2c50b0.  goto L2c50b4;
  #L2c50b2.  v0:= 0I;
  #L2c50b4.  return v0;
}
procedure `boolean` `isInVerticalTargetZone`(`float` v0 , `float` v1 , `float` v2 , `float` v3 , `float` v4 , `float` v5 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.isInVerticalTargetZone:(FFFFFF)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L2c50c8.  v0:= v0 - v2 @kind float;
  #L2c50ca.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L2c50d0.  v0:= temp;
  #L2c50d2.  v0:= fcmpg(v0, v5);
  #L2c50d6.  if v0 > 0 then goto L2c50ee;
  #L2c50da.  v0:= fcmpl(v1, v3);
  #L2c50de.  if v0 <= 0 then goto L2c50ee;
  #L2c50e2.  v0:= fcmpg(v1, v4);
  #L2c50e6.  if v0 >= 0 then goto L2c50ee;
  #L2c50ea.  v0:= 1I;
  #L2c50ec.  goto L2c50f0;
  #L2c50ee.  v0:= 0I;
  #L2c50f0.  return v0;
}
procedure `float` `getMaxCropHeight`(`com.theartofdev.edmodo.cropper.CropWindowHandler` v3 @kind this) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.getMaxCropHeight:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2c53f4.  v0:= v3.`com.theartofdev.edmodo.cropper.CropWindowHandler.mMaxCropWindowHeight` @type ^`float`;
  #L2c53f8.  v1:= v3.`com.theartofdev.edmodo.cropper.CropWindowHandler.mMaxCropResultHeight` @type ^`float`;
  #L2c53fc.  v2:= v3.`com.theartofdev.edmodo.cropper.CropWindowHandler.mScaleFactorHeight` @type ^`float`;
  #L2c5400.  v1:= v1 / v2 @kind float;
  #L2c5402.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2c5408.  v0:= temp;
  #L2c540a.  return v0;
}
procedure `float` `getMaxCropWidth`(`com.theartofdev.edmodo.cropper.CropWindowHandler` v3 @kind this) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.getMaxCropWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2c541c.  v0:= v3.`com.theartofdev.edmodo.cropper.CropWindowHandler.mMaxCropWindowWidth` @type ^`float`;
  #L2c5420.  v1:= v3.`com.theartofdev.edmodo.cropper.CropWindowHandler.mMaxCropResultWidth` @type ^`float`;
  #L2c5424.  v2:= v3.`com.theartofdev.edmodo.cropper.CropWindowHandler.mScaleFactorWidth` @type ^`float`;
  #L2c5428.  v1:= v1 / v2 @kind float;
  #L2c542a.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2c5430.  v0:= temp;
  #L2c5432.  return v0;
}
procedure `float` `getMinCropHeight`(`com.theartofdev.edmodo.cropper.CropWindowHandler` v3 @kind this) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.getMinCropHeight:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2c5444.  v0:= v3.`com.theartofdev.edmodo.cropper.CropWindowHandler.mMinCropWindowHeight` @type ^`float`;
  #L2c5448.  v1:= v3.`com.theartofdev.edmodo.cropper.CropWindowHandler.mMinCropResultHeight` @type ^`float`;
  #L2c544c.  v2:= v3.`com.theartofdev.edmodo.cropper.CropWindowHandler.mScaleFactorHeight` @type ^`float`;
  #L2c5450.  v1:= v1 / v2 @kind float;
  #L2c5452.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2c5458.  v0:= temp;
  #L2c545a.  return v0;
}
procedure `float` `getMinCropWidth`(`com.theartofdev.edmodo.cropper.CropWindowHandler` v3 @kind this) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.getMinCropWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2c546c.  v0:= v3.`com.theartofdev.edmodo.cropper.CropWindowHandler.mMinCropWindowWidth` @type ^`float`;
  #L2c5470.  v1:= v3.`com.theartofdev.edmodo.cropper.CropWindowHandler.mMinCropResultWidth` @type ^`float`;
  #L2c5474.  v2:= v3.`com.theartofdev.edmodo.cropper.CropWindowHandler.mScaleFactorWidth` @type ^`float`;
  #L2c5478.  v1:= v1 / v2 @kind float;
  #L2c547a.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2c5480.  v0:= temp;
  #L2c5482.  return v0;
}
procedure `com.theartofdev.edmodo.cropper.CropWindowMoveHandler` `getMoveHandler`(`com.theartofdev.edmodo.cropper.CropWindowHandler` v1 @kind this, `float` v2 , `float` v3 , `float` v4 , `com.theartofdev.edmodo.cropper.CropImageView$CropShape` v5 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.getMoveHandler:(FFFLcom/theartofdev/edmodo/cropper/CropImageView$CropShape;)Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c5148.  v0:= `@@com.theartofdev.edmodo.cropper.CropImageView$CropShape.OVAL` @type ^`com.theartofdev.edmodo.cropper.CropImageView$CropShape` @kind object;
  #L2c514c.  if v5 != v0 then goto L2c515a;
  #L2c5150.  call temp:= `getOvalPressedMoveType`(v1, v2, v3) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.getOvalPressedMoveType:(FF)Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler$Type;` @kind direct;
  #L2c5156.  v4:= temp @kind object;
  #L2c5158.  goto L2c5162;
  #L2c515a.  call temp:= `getRectanglePressedMoveType`(v1, v2, v3, v4) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.getRectanglePressedMoveType:(FFF)Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler$Type;` @kind direct;
  #L2c5160.  v4:= temp @kind object;
  #L2c5162.  if v4 == 0 then goto L2c5172;
  #L2c5166.  v5:= new `com.theartofdev.edmodo.cropper.CropWindowMoveHandler`;
  #L2c516a.  call `<init>`(v5, v4, v1, v2, v3) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler;.<init>:(Lcom/theartofdev/edmodo/cropper/CropWindowMoveHandler$Type;Lcom/theartofdev/edmodo/cropper/CropWindowHandler;FF)V` @kind direct;
  #L2c5170.  goto L2c5174;
  #L2c5172.  v5:= 0I;
  #L2c5174.  return v5 @kind object;
}
procedure `android.graphics.RectF` `getRect`(`com.theartofdev.edmodo.cropper.CropWindowHandler` v2 @kind this) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.getRect:()Landroid/graphics/RectF;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c4fd4.  v0:= v2.`com.theartofdev.edmodo.cropper.CropWindowHandler.mGetEdges` @type ^`android.graphics.RectF` @kind object;
  #L2c4fd8.  v1:= v2.`com.theartofdev.edmodo.cropper.CropWindowHandler.mEdges` @type ^`android.graphics.RectF` @kind object;
  #L2c4fdc.  call `set`(v0, v1) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/RectF;)V` @kind virtual;
  #L2c4fe2.  v0:= v2.`com.theartofdev.edmodo.cropper.CropWindowHandler.mGetEdges` @type ^`android.graphics.RectF` @kind object;
  #L2c4fe6.  return v0 @kind object;
}
procedure `float` `getScaleFactorHeight`(`com.theartofdev.edmodo.cropper.CropWindowHandler` v1 @kind this) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.getScaleFactorHeight:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c5494.  v0:= v1.`com.theartofdev.edmodo.cropper.CropWindowHandler.mScaleFactorHeight` @type ^`float`;
  #L2c5498.  return v0;
}
procedure `float` `getScaleFactorWidth`(`com.theartofdev.edmodo.cropper.CropWindowHandler` v1 @kind this) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.getScaleFactorWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c54ac.  v0:= v1.`com.theartofdev.edmodo.cropper.CropWindowHandler.mScaleFactorWidth` @type ^`float`;
  #L2c54b0.  return v0;
}
procedure `void` `setCropWindowLimits`(`com.theartofdev.edmodo.cropper.CropWindowHandler` v0 @kind this, `float` v1 , `float` v2 , `float` v3 , `float` v4 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.setCropWindowLimits:(FFFF)V` @AccessFlag PUBLIC {
    temp;

  #L2c5504.  v0.`com.theartofdev.edmodo.cropper.CropWindowHandler.mMaxCropWindowWidth` @type ^`float` := v1;
  #L2c5508.  v0.`com.theartofdev.edmodo.cropper.CropWindowHandler.mMaxCropWindowHeight` @type ^`float` := v2;
  #L2c550c.  v0.`com.theartofdev.edmodo.cropper.CropWindowHandler.mScaleFactorWidth` @type ^`float` := v3;
  #L2c5510.  v0.`com.theartofdev.edmodo.cropper.CropWindowHandler.mScaleFactorHeight` @type ^`float` := v4;
  #L2c5514.  return @kind void;
}
procedure `void` `setInitialAttributeValues`(`com.theartofdev.edmodo.cropper.CropWindowHandler` v1 @kind this, `com.theartofdev.edmodo.cropper.CropImageOptions` v2 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.setInitialAttributeValues:(Lcom/theartofdev/edmodo/cropper/CropImageOptions;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c5528.  v0:= v2.`com.theartofdev.edmodo.cropper.CropImageOptions.minCropWindowWidth` @type ^`int`;
  #L2c552c.  v0:= (`float`) v0 @kind i2f;
  #L2c552e.  v1.`com.theartofdev.edmodo.cropper.CropWindowHandler.mMinCropWindowWidth` @type ^`float` := v0;
  #L2c5532.  v0:= v2.`com.theartofdev.edmodo.cropper.CropImageOptions.minCropWindowHeight` @type ^`int`;
  #L2c5536.  v0:= (`float`) v0 @kind i2f;
  #L2c5538.  v1.`com.theartofdev.edmodo.cropper.CropWindowHandler.mMinCropWindowHeight` @type ^`float` := v0;
  #L2c553c.  v0:= v2.`com.theartofdev.edmodo.cropper.CropImageOptions.minCropResultWidth` @type ^`int`;
  #L2c5540.  v0:= (`float`) v0 @kind i2f;
  #L2c5542.  v1.`com.theartofdev.edmodo.cropper.CropWindowHandler.mMinCropResultWidth` @type ^`float` := v0;
  #L2c5546.  v0:= v2.`com.theartofdev.edmodo.cropper.CropImageOptions.minCropResultHeight` @type ^`int`;
  #L2c554a.  v0:= (`float`) v0 @kind i2f;
  #L2c554c.  v1.`com.theartofdev.edmodo.cropper.CropWindowHandler.mMinCropResultHeight` @type ^`float` := v0;
  #L2c5550.  v0:= v2.`com.theartofdev.edmodo.cropper.CropImageOptions.maxCropResultWidth` @type ^`int`;
  #L2c5554.  v0:= (`float`) v0 @kind i2f;
  #L2c5556.  v1.`com.theartofdev.edmodo.cropper.CropWindowHandler.mMaxCropResultWidth` @type ^`float` := v0;
  #L2c555a.  v2:= v2.`com.theartofdev.edmodo.cropper.CropImageOptions.maxCropResultHeight` @type ^`int`;
  #L2c555e.  v2:= (`float`) v2 @kind i2f;
  #L2c5560.  v1.`com.theartofdev.edmodo.cropper.CropWindowHandler.mMaxCropResultHeight` @type ^`float` := v2;
  #L2c5564.  return @kind void;
}
procedure `void` `setMaxCropResultSize`(`com.theartofdev.edmodo.cropper.CropWindowHandler` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.setMaxCropResultSize:(II)V` @AccessFlag PUBLIC {
    temp;

  #L2c5578.  v1:= (`float`) v1 @kind i2f;
  #L2c557a.  v0.`com.theartofdev.edmodo.cropper.CropWindowHandler.mMaxCropResultWidth` @type ^`float` := v1;
  #L2c557e.  v1:= (`float`) v2 @kind i2f;
  #L2c5580.  v0.`com.theartofdev.edmodo.cropper.CropWindowHandler.mMaxCropResultHeight` @type ^`float` := v1;
  #L2c5584.  return @kind void;
}
procedure `void` `setMinCropResultSize`(`com.theartofdev.edmodo.cropper.CropWindowHandler` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.setMinCropResultSize:(II)V` @AccessFlag PUBLIC {
    temp;

  #L2c5598.  v1:= (`float`) v1 @kind i2f;
  #L2c559a.  v0.`com.theartofdev.edmodo.cropper.CropWindowHandler.mMinCropResultWidth` @type ^`float` := v1;
  #L2c559e.  v1:= (`float`) v2 @kind i2f;
  #L2c55a0.  v0.`com.theartofdev.edmodo.cropper.CropWindowHandler.mMinCropResultHeight` @type ^`float` := v1;
  #L2c55a4.  return @kind void;
}
procedure `void` `setRect`(`com.theartofdev.edmodo.cropper.CropWindowHandler` v1 @kind this, `android.graphics.RectF` v2 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.setRect:(Landroid/graphics/RectF;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c55b8.  v0:= v1.`com.theartofdev.edmodo.cropper.CropWindowHandler.mEdges` @type ^`android.graphics.RectF` @kind object;
  #L2c55bc.  call `set`(v0, v2) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/RectF;)V` @kind virtual;
  #L2c55c2.  return @kind void;
}
procedure `boolean` `showGuidelines`(`com.theartofdev.edmodo.cropper.CropWindowHandler` v2 @kind this) @signature `Lcom/theartofdev/edmodo/cropper/CropWindowHandler;.showGuidelines:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c5104.  v0:= v2.`com.theartofdev.edmodo.cropper.CropWindowHandler.mEdges` @type ^`android.graphics.RectF` @kind object;
  #L2c5108.  call temp:= `width`(v0) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L2c510e.  v0:= temp;
  #L2c5110.  v1:= 100.0F;
  #L2c5114.  v0:= fcmpg(v0, v1);
  #L2c5118.  if v0 < 0 then goto L2c5134;
  #L2c511c.  v0:= v2.`com.theartofdev.edmodo.cropper.CropWindowHandler.mEdges` @type ^`android.graphics.RectF` @kind object;
  #L2c5120.  call temp:= `height`(v0) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L2c5126.  v0:= temp;
  #L2c5128.  v0:= fcmpg(v0, v1);
  #L2c512c.  if v0 < 0 then goto L2c5134;
  #L2c5130.  v0:= 1I;
  #L2c5132.  goto L2c5136;
  #L2c5134.  v0:= 0I;
  #L2c5136.  return v0;
}
