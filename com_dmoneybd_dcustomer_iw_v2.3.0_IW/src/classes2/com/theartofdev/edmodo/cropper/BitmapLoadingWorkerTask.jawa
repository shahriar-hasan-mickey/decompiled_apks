record `com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask` @kind class @AccessFlag FINAL extends `android.os.AsyncTask` @kind class {
  `android.content.Context` `com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask.mContext` @AccessFlag PRIVATE_FINAL;
  `java.lang.ref.WeakReference` `com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask.mCropImageViewReference` @AccessFlag PRIVATE_FINAL;
  `int` `com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask.mHeight` @AccessFlag PRIVATE_FINAL;
  `android.net.Uri` `com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask.mUri` @AccessFlag PRIVATE_FINAL;
  `int` `com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask.mWidth` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask` v4 @kind this, `com.theartofdev.edmodo.cropper.CropImageView` v5 @kind object, `android.net.Uri` v6 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/BitmapLoadingWorkerTask;.<init>:(Lcom/theartofdev/edmodo/cropper/CropImageView;Landroid/net/Uri;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2bd9d4.  call `<init>`(v4) @signature `Landroid/os/AsyncTask;.<init>:()V` @kind direct;
  #L2bd9da.  v4.`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask.mUri` @type ^`android.net.Uri` := v6 @kind object;
  #L2bd9de.  v6:= new `java.lang.ref.WeakReference`;
  #L2bd9e2.  call `<init>`(v6, v5) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2bd9e8.  v4.`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask.mCropImageViewReference` @type ^`java.lang.ref.WeakReference` := v6 @kind object;
  #L2bd9ec.  call temp:= `getContext`(v5) @signature `Landroid/widget/FrameLayout;.getContext:()Landroid/content/Context;` @kind virtual;
  #L2bd9f2.  v6:= temp @kind object;
  #L2bd9f4.  v4.`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask.mContext` @type ^`android.content.Context` := v6 @kind object;
  #L2bd9f8.  call temp:= `getResources`(v5) @signature `Landroid/widget/FrameLayout;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L2bd9fe.  v5:= temp @kind object;
  #L2bda00.  call temp:= `getDisplayMetrics`(v5) @signature `Landroid/content/res/Resources;.getDisplayMetrics:()Landroid/util/DisplayMetrics;` @kind virtual;
  #L2bda06.  v5:= temp @kind object;
  #L2bda08.  v6:= v5.`android.util.DisplayMetrics.density` @type ^`float`;
  #L2bda0c.  v0:= 1.0F;
  #L2bda10.  v1:= fcmpl(v6, v0);
  #L2bda14.  if v1 <= 0 then goto L2bda1e;
  #L2bda18.  v0:= v0 / v6 @kind float;
  #L2bda1a.  v0:= (`double`) v0 @kind f2d;
  #L2bda1c.  goto L2bda22;
  #L2bda1e.  v0:= 1.0D;
  #L2bda22.  v6:= v5.`android.util.DisplayMetrics.widthPixels` @type ^`int`;
  #L2bda26.  v2:= (`double`) v6 @kind i2d;
  #L2bda28.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2bda2e.  v2:= v2 * v0 @kind double;
  #L2bda32.  v6:= (`int`) v2 @kind d2i;
  #L2bda34.  v4.`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask.mWidth` @type ^`int` := v6;
  #L2bda38.  v5:= v5.`android.util.DisplayMetrics.heightPixels` @type ^`int`;
  #L2bda3c.  v5:= (`double`) v5 @kind i2d;
  #L2bda3e.  call temp:= `isNaN`(v5) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2bda44.  v5:= v5 * v0 @kind double;
  #L2bda48.  v5:= (`int`) v5 @kind d2i;
  #L2bda4a.  v4.`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask.mHeight` @type ^`int` := v5;
  #L2bda4e.  return @kind void;
}
procedure `com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result` `doInBackground`(`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask` v4 @kind this, `java.lang.Void`[] v5 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/BitmapLoadingWorkerTask;.doInBackground:([Ljava/lang/Void;)Lcom/theartofdev/edmodo/cropper/BitmapLoadingWorkerTask$Result;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2bd91c.  call temp:= `isCancelled`(v4) @signature `Landroid/os/AsyncTask;.isCancelled:()Z` @kind virtual;
  #L2bd922.  v5:= temp;
  #L2bd924.  if v5 != 0 then goto L2bd97c;
  #L2bd928.  v5:= v4.`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask.mContext` @type ^`android.content.Context` @kind object;
  #L2bd92c.  v0:= v4.`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask.mUri` @type ^`android.net.Uri` @kind object;
  #L2bd930.  v1:= v4.`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask.mWidth` @type ^`int`;
  #L2bd934.  v2:= v4.`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask.mHeight` @type ^`int`;
  #L2bd938.  call temp:= `c`(v5, v0, v1, v2) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.c:(Landroid/content/Context;Landroid/net/Uri;II)Lcom/theartofdev/edmodo/cropper/BitmapUtils$BitmapSampled;` @kind static;
  #L2bd93e.  v5:= temp @kind object;
  #L2bd940.  call temp:= `isCancelled`(v4) @signature `Landroid/os/AsyncTask;.isCancelled:()Z` @kind virtual;
  #L2bd946.  v0:= temp;
  #L2bd948.  if v0 != 0 then goto L2bd97c;
  #L2bd94c.  v0:= v5.`com.theartofdev.edmodo.cropper.BitmapUtils$BitmapSampled.bitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L2bd950.  v1:= v4.`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask.mContext` @type ^`android.content.Context` @kind object;
  #L2bd954.  v2:= v4.`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask.mUri` @type ^`android.net.Uri` @kind object;
  #L2bd958.  call temp:= `n`(v0, v1, v2) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.n:(Landroid/graphics/Bitmap;Landroid/content/Context;Landroid/net/Uri;)Lcom/theartofdev/edmodo/cropper/BitmapUtils$RotateBitmapResult;` @kind static;
  #L2bd95e.  v0:= temp @kind object;
  #L2bd960.  v1:= new `com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result`;
  #L2bd964.  v2:= v4.`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask.mUri` @type ^`android.net.Uri` @kind object;
  #L2bd968.  v3:= v0.`com.theartofdev.edmodo.cropper.BitmapUtils$RotateBitmapResult.bitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L2bd96c.  v5:= v5.`com.theartofdev.edmodo.cropper.BitmapUtils$BitmapSampled.a` @type ^`int`;
  #L2bd970.  v0:= v0.`com.theartofdev.edmodo.cropper.BitmapUtils$RotateBitmapResult.a` @type ^`int`;
  #L2bd974.  call `<init>`(v1, v2, v3, v5, v0) @signature `Lcom/theartofdev/edmodo/cropper/BitmapLoadingWorkerTask$Result;.<init>:(Landroid/net/Uri;Landroid/graphics/Bitmap;II)V` @kind direct;
  #L2bd97a.  return v1 @kind object;
  #L2bd97c.  v5:= 0I;
  #L2bd97e.  return v5 @kind object;
  #L2bd980.  v5:= Exception @type ^`java.lang.Exception` @kind object;
  #L2bd982.  v0:= new `com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result`;
  #L2bd986.  v1:= v4.`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask.mUri` @type ^`android.net.Uri` @kind object;
  #L2bd98a.  call `<init>`(v0, v1, v5) @signature `Lcom/theartofdev/edmodo/cropper/BitmapLoadingWorkerTask$Result;.<init>:(Landroid/net/Uri;Ljava/lang/Exception;)V` @kind direct;
  #L2bd990.  return v0 @kind object;
  catch `java.lang.Exception` @[L2bd91c..L2bd97a] goto L2bd980;
}
procedure `java.lang.Object` `doInBackground`(`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask` v0 @kind this, `java.lang.Object`[] v1 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/BitmapLoadingWorkerTask;.doInBackground:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L2bd9b4.  v1:= (`java.lang.Void`[]) v1 @kind object;
  #L2bd9b8.  call temp:= `doInBackground`(v0, v1) @signature `Lcom/theartofdev/edmodo/cropper/BitmapLoadingWorkerTask;.doInBackground:([Ljava/lang/Void;)Lcom/theartofdev/edmodo/cropper/BitmapLoadingWorkerTask$Result;` @kind virtual;
  #L2bd9be.  v1:= temp @kind object;
  #L2bd9c0.  return v1 @kind object;
}
procedure `android.net.Uri` `getUri`(`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask` v1 @kind this) @signature `Lcom/theartofdev/edmodo/cropper/BitmapLoadingWorkerTask;.getUri:()Landroid/net/Uri;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bd904.  v0:= v1.`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask.mUri` @type ^`android.net.Uri` @kind object;
  #L2bd908.  return v0 @kind object;
}
procedure `void` `onPostExecute`(`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask` v2 @kind this, `com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result` v3 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/BitmapLoadingWorkerTask;.onPostExecute:(Lcom/theartofdev/edmodo/cropper/BitmapLoadingWorkerTask$Result;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L2bda60.  if v3 == 0 then goto L2bdaa0;
  #L2bda64.  v0:= 0I;
  #L2bda66.  call temp:= `isCancelled`(v2) @signature `Landroid/os/AsyncTask;.isCancelled:()Z` @kind virtual;
  #L2bda6c.  v1:= temp;
  #L2bda6e.  if v1 != 0 then goto L2bda8e;
  #L2bda72.  v1:= v2.`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask.mCropImageViewReference` @type ^`java.lang.ref.WeakReference` @kind object;
  #L2bda76.  call temp:= `get`(v1) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L2bda7c.  v1:= temp @kind object;
  #L2bda7e.  v1:= (`com.theartofdev.edmodo.cropper.CropImageView`) v1 @kind object;
  #L2bda82.  if v1 == 0 then goto L2bda8e;
  #L2bda86.  v0:= 1I;
  #L2bda88.  call `e`(v1, v3) @signature `Lcom/theartofdev/edmodo/cropper/CropImageView;.e:(Lcom/theartofdev/edmodo/cropper/BitmapLoadingWorkerTask$Result;)V` @kind virtual;
  #L2bda8e.  if v0 != 0 then goto L2bdaa0;
  #L2bda92.  v3:= v3.`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result.bitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L2bda96.  if v3 == 0 then goto L2bdaa0;
  #L2bda9a.  call `recycle`(v3) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L2bdaa0.  return @kind void;
}
procedure `void` `onPostExecute`(`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/BitmapLoadingWorkerTask;.onPostExecute:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L2bdab4.  v1:= (`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result`) v1 @kind object;
  #L2bdab8.  call `onPostExecute`(v0, v1) @signature `Lcom/theartofdev/edmodo/cropper/BitmapLoadingWorkerTask;.onPostExecute:(Lcom/theartofdev/edmodo/cropper/BitmapLoadingWorkerTask$Result;)V` @kind virtual;
  #L2bdabe.  return @kind void;
}
