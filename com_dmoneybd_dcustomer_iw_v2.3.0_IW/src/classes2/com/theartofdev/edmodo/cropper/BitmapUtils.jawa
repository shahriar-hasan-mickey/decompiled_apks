record `com.theartofdev.edmodo.cropper.BitmapUtils` @kind class @AccessFlag FINAL {
}
global `android.graphics.Rect` `@@com.theartofdev.edmodo.cropper.BitmapUtils.a` @AccessFlag STATIC_FINAL;
global `android.graphics.RectF` `@@com.theartofdev.edmodo.cropper.BitmapUtils.b` @AccessFlag STATIC_FINAL;
global `android.graphics.RectF` `@@com.theartofdev.edmodo.cropper.BitmapUtils.c` @AccessFlag STATIC_FINAL;
global `float`[] `@@com.theartofdev.edmodo.cropper.BitmapUtils.d` @AccessFlag STATIC_FINAL;
global `float`[] `@@com.theartofdev.edmodo.cropper.BitmapUtils.e` @AccessFlag STATIC_FINAL;
global `android.util.Pair` `@@com.theartofdev.edmodo.cropper.BitmapUtils.f` @AccessFlag STATIC;
global `int` `@@com.theartofdev.edmodo.cropper.BitmapUtils.mMaxTextureSize` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2bea5c.  v0:= new `android.graphics.Rect`;
  #L2bea60.  call `<init>`(v0) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L2bea66.  `@@com.theartofdev.edmodo.cropper.BitmapUtils.a` @type ^`android.graphics.Rect` := v0 @kind object;
  #L2bea6a.  v0:= new `android.graphics.RectF`;
  #L2bea6e.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L2bea74.  `@@com.theartofdev.edmodo.cropper.BitmapUtils.b` @type ^`android.graphics.RectF` := v0 @kind object;
  #L2bea78.  v0:= new `android.graphics.RectF`;
  #L2bea7c.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L2bea82.  `@@com.theartofdev.edmodo.cropper.BitmapUtils.c` @type ^`android.graphics.RectF` := v0 @kind object;
  #L2bea86.  v0:= 6I;
  #L2bea88.  v1:= new `float`[v0];
  #L2bea8c.  `@@com.theartofdev.edmodo.cropper.BitmapUtils.d` @type ^`float`[] := v1 @kind object;
  #L2bea90.  v0:= new `float`[v0];
  #L2bea94.  `@@com.theartofdev.edmodo.cropper.BitmapUtils.e` @type ^`float`[] := v0 @kind object;
  #L2bea98.  return @kind void;
}
procedure `void` `<init>`(`com.theartofdev.edmodo.cropper.BitmapUtils` v0 @kind this) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2beaac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2beab2.  return @kind void;
}
procedure `com.theartofdev.edmodo.cropper.BitmapUtils$BitmapSampled` `a`(`android.content.Context` v16 @kind object, `android.net.Uri` v17 @kind object, `float`[] v18 @kind object, `int` v19 , `int` v20 , `int` v21 , `boolean` v22 , `int` v23 , `int` v24 , `int` v25 , `int` v26 , `boolean` v27 , `boolean` v28 ) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.a:(Landroid/content/Context;Landroid/net/Uri;[FIIIZIIIIZZ)Lcom/theartofdev/edmodo/cropper/BitmapUtils$BitmapSampled;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L2be20c.  v0:= 1I;
  #L2be20e.  v15:= 1I;
  #L2be210.  v1:= v16 @kind object;
  #L2be214.  v2:= v17 @kind object;
  #L2be218.  v3:= v18 @kind object;
  #L2be21c.  v4:= v19;
  #L2be220.  v5:= v20;
  #L2be224.  v6:= v21;
  #L2be228.  v7:= v22;
  #L2be22c.  v8:= v23;
  #L2be230.  v9:= v24;
  #L2be234.  v10:= v25;
  #L2be238.  v11:= v26;
  #L2be23c.  v12:= v27;
  #L2be240.  v13:= v28;
  #L2be244.  v14:= v15;
  #L2be246.  call temp:= `cropBitmap`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.cropBitmap:(Landroid/content/Context;Landroid/net/Uri;[FIIIZIIIIZZI)Lcom/theartofdev/edmodo/cropper/BitmapUtils$BitmapSampled;` @kind static;
  #L2be24c.  v0:= temp @kind object;
  #L2be24e.  return v0 @kind object;
  #L2be250.  v0:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L2be252.  v1:= v0 @kind object;
  #L2be254.  v15:= v15 * 2;
  #L2be258.  v0:= 16I;
  #L2be25c.  if v15 > v0 then goto L2be262;
  #L2be260.  goto L2be210;
  #L2be262.  v0:= new `java.lang.RuntimeException`;
  #L2be266.  v2:= new `java.lang.StringBuilder`;
  #L2be26a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2be270.  v3:= "Failed to handle OOM by sampling (" @kind object;
  #L2be274.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be27a.  call temp:= `append`(v2, v15) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be280.  v3:= "): " @kind object;
  #L2be284.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be28a.  v3:= v17 @kind object;
  #L2be28e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be294.  v3:= "\r\n" @kind object;
  #L2be298.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be29e.  call temp:= `getMessage`(v1) @signature `Ljava/lang/OutOfMemoryError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2be2a4.  v3:= temp @kind object;
  #L2be2a6.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be2ac.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2be2b2.  v2:= temp @kind object;
  #L2be2b4.  call `<init>`(v0, v2, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L2be2ba.  goto L2be2be;
  #L2be2bc.  throw v0;
  #L2be2be.  goto L2be2bc;
  catch `java.lang.OutOfMemoryError` @[L2be246..L2be24e] goto L2be250;
}
procedure `com.theartofdev.edmodo.cropper.BitmapUtils$BitmapSampled` `b`(`android.graphics.Bitmap` v12 @kind object, `float`[] v13 @kind object, `int` v14 , `boolean` v15 , `int` v16 , `int` v17 , `boolean` v18 , `boolean` v19 ) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.b:(Landroid/graphics/Bitmap;[FIZIIZZ)Lcom/theartofdev/edmodo/cropper/BitmapUtils$BitmapSampled;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L2be414.  v0:= 1I;
  #L2be416.  v1:= 1I;
  #L2be418.  v0:= 1.0F;
  #L2be41c.  v2:= (`float`) v1 @kind i2f;
  #L2be41e.  v9:= v0 / v2 @kind float;
  #L2be422.  v3:= v12 @kind object;
  #L2be424.  v4:= v13 @kind object;
  #L2be426.  v5:= v14;
  #L2be428.  v6:= v15;
  #L2be42a.  v7:= v16;
  #L2be42e.  v8:= v17;
  #L2be432.  v10:= v18;
  #L2be436.  v11:= v19;
  #L2be43a.  call temp:= `cropBitmapObjectWithScale`(v3, v4, v5, v6, v7, v8, v9, v10, v11) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.cropBitmapObjectWithScale:(Landroid/graphics/Bitmap;[FIZIIFZZ)Landroid/graphics/Bitmap;` @kind static;
  #L2be440.  v0:= temp @kind object;
  #L2be442.  v2:= new `com.theartofdev.edmodo.cropper.BitmapUtils$BitmapSampled`;
  #L2be446.  call `<init>`(v2, v0, v1) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils$BitmapSampled;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L2be44c.  return v2 @kind object;
  #L2be44e.  v0:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L2be450.  v1:= v1 * 2;
  #L2be454.  v2:= 8I;
  #L2be458.  if v1 > v2 then goto L2be45e;
  #L2be45c.  goto L2be418;
  #L2be45e.  goto L2be462;
  #L2be460.  throw v0;
  #L2be462.  goto L2be460;
  catch `java.lang.OutOfMemoryError` @[L2be43a..L2be44c] goto L2be44e;
}
procedure `com.theartofdev.edmodo.cropper.BitmapUtils$BitmapSampled` `c`(`android.content.Context` v3 @kind object, `android.net.Uri` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.c:(Landroid/content/Context;Landroid/net/Uri;II)Lcom/theartofdev/edmodo/cropper/BitmapUtils$BitmapSampled;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2be484.  call temp:= `getContentResolver`(v3) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L2be48a.  v3:= temp @kind object;
  #L2be48c.  call temp:= `decodeImageForOption`(v3, v4) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.decodeImageForOption:(Landroid/content/ContentResolver;Landroid/net/Uri;)Landroid/graphics/BitmapFactory$Options;` @kind static;
  #L2be492.  v0:= temp @kind object;
  #L2be494.  v1:= v0.`android.graphics.BitmapFactory$Options.outWidth` @type ^`int`;
  #L2be498.  v2:= v0.`android.graphics.BitmapFactory$Options.outHeight` @type ^`int`;
  #L2be49c.  call temp:= `calculateInSampleSizeByReqestedSize`(v1, v2, v5, v6) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.calculateInSampleSizeByReqestedSize:(IIII)I` @kind static;
  #L2be4a2.  v5:= temp;
  #L2be4a4.  v6:= v0.`android.graphics.BitmapFactory$Options.outWidth` @type ^`int`;
  #L2be4a8.  v1:= v0.`android.graphics.BitmapFactory$Options.outHeight` @type ^`int`;
  #L2be4ac.  call temp:= `calculateInSampleSizeByMaxTextureSize`(v6, v1) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.calculateInSampleSizeByMaxTextureSize:(II)I` @kind static;
  #L2be4b2.  v6:= temp;
  #L2be4b4.  call temp:= `max`(v5, v6) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L2be4ba.  v5:= temp;
  #L2be4bc.  v0.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v5;
  #L2be4c0.  call temp:= `decodeImage`(v3, v4, v0) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.decodeImage:(Landroid/content/ContentResolver;Landroid/net/Uri;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L2be4c6.  v3:= temp @kind object;
  #L2be4c8.  v5:= new `com.theartofdev.edmodo.cropper.BitmapUtils$BitmapSampled`;
  #L2be4cc.  v6:= v0.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int`;
  #L2be4d0.  call `<init>`(v5, v3, v6) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils$BitmapSampled;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L2be4d6.  return v5 @kind object;
  #L2be4d8.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L2be4da.  v5:= new `java.lang.RuntimeException`;
  #L2be4de.  v6:= new `java.lang.StringBuilder`;
  #L2be4e2.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2be4e8.  v0:= "Failed to load sampled bitmap: " @kind object;
  #L2be4ec.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be4f2.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be4f8.  v4:= "\r\n" @kind object;
  #L2be4fc.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be502.  call temp:= `getMessage`(v3) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2be508.  v4:= temp @kind object;
  #L2be50a.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be510.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2be516.  v4:= temp @kind object;
  #L2be518.  call `<init>`(v5, v4, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L2be51e.  throw v5;
  catch `java.lang.Exception` @[L2be484..L2be4d6] goto L2be4d8;
}
procedure `int` `calculateInSampleSizeByMaxTextureSize`(`int` v3 , `int` v4 ) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.calculateInSampleSizeByMaxTextureSize:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2be92c.  v0:= `@@com.theartofdev.edmodo.cropper.BitmapUtils.mMaxTextureSize` @type ^`int`;
  #L2be930.  if v0 != 0 then goto L2be940;
  #L2be934.  call temp:= `getMaxTextureSize`() @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.getMaxTextureSize:()I` @kind static;
  #L2be93a.  v0:= temp;
  #L2be93c.  `@@com.theartofdev.edmodo.cropper.BitmapUtils.mMaxTextureSize` @type ^`int` := v0;
  #L2be940.  v0:= `@@com.theartofdev.edmodo.cropper.BitmapUtils.mMaxTextureSize` @type ^`int`;
  #L2be944.  v1:= 1I;
  #L2be946.  if v0 <= 0 then goto L2be964;
  #L2be94a.  v0:= v4 / v1 @kind int;
  #L2be94e.  v2:= `@@com.theartofdev.edmodo.cropper.BitmapUtils.mMaxTextureSize` @type ^`int`;
  #L2be952.  if v0 > v2 then goto L2be95e;
  #L2be956.  v0:= v3 / v1 @kind int;
  #L2be95a.  if v0 <= v2 then goto L2be964;
  #L2be95e.  v1:= v1 * 2;
  #L2be962.  goto L2be94a;
  #L2be964.  return v1;
}
procedure `int` `calculateInSampleSizeByReqestedSize`(`int` v2 , `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.calculateInSampleSizeByReqestedSize:(IIII)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2be978.  v0:= 1I;
  #L2be97a.  if v3 > v5 then goto L2be982;
  #L2be97e.  if v2 <= v4 then goto L2be99c;
  #L2be982.  v1:= v3 / 2;
  #L2be986.  v1:= v1 / v0 @kind int;
  #L2be988.  if v1 <= v5 then goto L2be99c;
  #L2be98c.  v1:= v2 / 2;
  #L2be990.  v1:= v1 / v0 @kind int;
  #L2be992.  if v1 <= v4 then goto L2be99c;
  #L2be996.  v0:= v0 * 2;
  #L2be99a.  goto L2be982;
  #L2be99c.  return v0;
}
procedure `void` `closeSafe`(`java.io.Closeable` v0 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.closeSafe:(Ljava/io/Closeable;)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L2beac4.  if v0 == 0 then goto L2beace;
  #L2beac8.  call `close`(v0) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #L2beace.  return @kind void;
  catch `java.io.IOException` @[L2beac8..L2beace] goto L2beace;
}
procedure `com.theartofdev.edmodo.cropper.BitmapUtils$BitmapSampled` `cropBitmap`(`android.content.Context` v14 @kind object, `android.net.Uri` v15 @kind object, `float`[] v16 @kind object, `int` v17 , `int` v18 , `int` v19 , `boolean` v20 , `int` v21 , `int` v22 , `int` v23 , `int` v24 , `boolean` v25 , `boolean` v26 , `int` v27 ) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.cropBitmap:(Landroid/content/Context;Landroid/net/Uri;[FIIIZIIIIZZI)Lcom/theartofdev/edmodo/cropper/BitmapUtils$BitmapSampled;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L2be2e0.  v0:= v17;
  #L2be2e4.  v1:= v16 @kind object;
  #L2be2e8.  v2:= v18;
  #L2be2ec.  v3:= v19;
  #L2be2f0.  v4:= v20;
  #L2be2f4.  v5:= v21;
  #L2be2f8.  v6:= v22;
  #L2be2fc.  call temp:= `g`(v1, v2, v3, v4, v5, v6) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.g:([FIIZII)Landroid/graphics/Rect;` @kind static;
  #L2be302.  v9:= temp @kind object;
  #L2be304.  if v23 <= 0 then goto L2be30e;
  #L2be308.  v10:= v23;
  #L2be30c.  goto L2be318;
  #L2be30e.  call temp:= `width`(v9) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L2be314.  v1:= temp;
  #L2be316.  v10:= v1;
  #L2be318.  if v24 <= 0 then goto L2be322;
  #L2be31c.  v11:= v24;
  #L2be320.  goto L2be32c;
  #L2be322.  call temp:= `height`(v9) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L2be328.  v1:= temp;
  #L2be32a.  v11:= v1;
  #L2be32c.  v1:= 0I;
  #L2be32e.  v8:= 1I;
  #L2be330.  v2:= v14 @kind object;
  #L2be332.  v3:= v15 @kind object;
  #L2be334.  v4:= v9 @kind object;
  #L2be336.  v5:= v10;
  #L2be338.  v6:= v11;
  #L2be33a.  v7:= v27;
  #L2be33e.  call temp:= `decodeSampledBitmapRegion`(v2, v3, v4, v5, v6, v7) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.decodeSampledBitmapRegion:(Landroid/content/Context;Landroid/net/Uri;Landroid/graphics/Rect;III)Lcom/theartofdev/edmodo/cropper/BitmapUtils$BitmapSampled;` @kind static;
  #L2be344.  v2:= temp @kind object;
  #L2be346.  v1:= v2.`com.theartofdev.edmodo.cropper.BitmapUtils$BitmapSampled.bitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L2be34a.  v8:= v2.`com.theartofdev.edmodo.cropper.BitmapUtils$BitmapSampled.a` @type ^`int`;
  #L2be34e.  goto L2be352;
  #L2be350.  
  #L2be352.  if v1 == 0 then goto L2be3ae;
  #L2be356.  v12:= v25;
  #L2be35a.  v13:= v26;
  #L2be35e.  call temp:= `rotateAndFlipBitmapInt`(v1, v0, v12, v13) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.rotateAndFlipBitmapInt:(Landroid/graphics/Bitmap;IZZ)Landroid/graphics/Bitmap;` @kind static;
  #L2be364.  v10:= temp @kind object;
  #L2be366.  v1:= v0 %% 90;
  #L2be36a.  if v1 == 0 then goto L2be38e;
  #L2be36e.  v1:= v10 @kind object;
  #L2be370.  v2:= v16 @kind object;
  #L2be374.  v3:= v9 @kind object;
  #L2be376.  v4:= v17;
  #L2be37a.  v5:= v20;
  #L2be37e.  v6:= v21;
  #L2be382.  v7:= v22;
  #L2be386.  call temp:= `cropForRotatedImage`(v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.cropForRotatedImage:(Landroid/graphics/Bitmap;[FLandroid/graphics/Rect;IZII)Landroid/graphics/Bitmap;` @kind static;
  #L2be38c.  v10:= temp @kind object;
  #L2be38e.  v0:= new `com.theartofdev.edmodo.cropper.BitmapUtils$BitmapSampled`;
  #L2be392.  call `<init>`(v0, v10, v8) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils$BitmapSampled;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L2be398.  return v0 @kind object;
  #L2be39a.  v0:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L2be39c.  v1:= v10 @kind object;
  #L2be39e.  goto L2be3a2;
  #L2be3a0.  v0:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L2be3a2.  if v1 == 0 then goto L2be3ac;
  #L2be3a6.  call `recycle`(v1) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L2be3ac.  throw v0;
  #L2be3ae.  v12:= v25;
  #L2be3b2.  v13:= v26;
  #L2be3b6.  v1:= v14 @kind object;
  #L2be3b8.  v2:= v15 @kind object;
  #L2be3ba.  v3:= v16 @kind object;
  #L2be3be.  v4:= v17;
  #L2be3c2.  v5:= v20;
  #L2be3c6.  v6:= v21;
  #L2be3ca.  v7:= v22;
  #L2be3ce.  v8:= v27;
  #L2be3d2.  call temp:= `cropBitmap`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.cropBitmap:(Landroid/content/Context;Landroid/net/Uri;[FIZIIILandroid/graphics/Rect;IIZZ)Lcom/theartofdev/edmodo/cropper/BitmapUtils$BitmapSampled;` @kind static;
  #L2be3d8.  v0:= temp @kind object;
  #L2be3da.  return v0 @kind object;
  catch `java.lang.Exception` @[L2be33e..L2be34e] goto L2be350;
  catch `java.lang.OutOfMemoryError` @[L2be35e..L2be366] goto L2be3a0;
  catch `java.lang.OutOfMemoryError` @[L2be366..L2be38e] goto L2be39a;
}
procedure `com.theartofdev.edmodo.cropper.BitmapUtils$BitmapSampled` `cropBitmap`(`android.content.Context` v15 @kind object, `android.net.Uri` v16 @kind object, `float`[] v17 @kind object, `int` v18 , `boolean` v19 , `int` v20 , `int` v21 , `int` v22 , `android.graphics.Rect` v23 @kind object, `int` v24 , `int` v25 , `boolean` v26 , `boolean` v27 ) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.cropBitmap:(Landroid/content/Context;Landroid/net/Uri;[FIZIIILandroid/graphics/Rect;IIZZ)Lcom/theartofdev/edmodo/cropper/BitmapUtils$BitmapSampled;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L2be0bc.  v1:= v16 @kind object;
  #L2be0c0.  v0:= v17 @kind object;
  #L2be0c4.  v2:= 0I;
  #L2be0c6.  v3:= new `android.graphics.BitmapFactory$Options`;
  #L2be0ca.  call `<init>`(v3) @signature `Landroid/graphics/BitmapFactory$Options;.<init>:()V` @kind direct;
  #L2be0d0.  call temp:= `width`(v23) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L2be0d6.  v4:= temp;
  #L2be0d8.  call temp:= `height`(v23) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L2be0de.  v5:= temp;
  #L2be0e0.  v6:= v24;
  #L2be0e4.  v7:= v25;
  #L2be0e8.  call temp:= `calculateInSampleSizeByReqestedSize`(v4, v5, v6, v7) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.calculateInSampleSizeByReqestedSize:(IIII)I` @kind static;
  #L2be0ee.  v4:= temp;
  #L2be0f0.  v4:= v4 * v22 @kind int;
  #L2be0f4.  v3.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v4;
  #L2be0f8.  call temp:= `getContentResolver`(v15) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L2be0fe.  v5:= temp @kind object;
  #L2be100.  call temp:= `decodeImage`(v5, v1, v3) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.decodeImage:(Landroid/content/ContentResolver;Landroid/net/Uri;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L2be106.  v5:= temp @kind object;
  #L2be108.  if v5 == 0 then goto L2be172;
  #L2be10c.  v6:= length @variable v0;
  #L2be10e.  v7:= new `float`[v6];
  #L2be112.  v8:= length @variable v0;
  #L2be114.  v9:= 0I;
  #L2be116.  call `arraycopy`(v0, v9, v7, v9, v8) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2be11c.  if v9 >= v6 then goto L2be136;
  #L2be120.  v0:= v7[v9];
  #L2be124.  v8:= v3.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int`;
  #L2be128.  v8:= (`float`) v8 @kind i2f;
  #L2be12a.  v0:= v0 / v8 @kind float;
  #L2be12c.  v7[v9]:= v0;
  #L2be130.  v9:= v9 + 1;
  #L2be134.  goto L2be11c;
  #L2be136.  v12:= 1.0F;
  #L2be13a.  v6:= v5 @kind object;
  #L2be13c.  v8:= v18;
  #L2be140.  v9:= v19;
  #L2be144.  v10:= v20;
  #L2be148.  v11:= v21;
  #L2be14c.  v13:= v26;
  #L2be150.  v14:= v27;
  #L2be154.  call temp:= `cropBitmapObjectWithScale`(v6, v7, v8, v9, v10, v11, v12, v13, v14) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.cropBitmapObjectWithScale:(Landroid/graphics/Bitmap;[FIZIIFZZ)Landroid/graphics/Bitmap;` @kind static;
  #L2be15a.  v2:= temp @kind object;
  #L2be15c.  if v2 == v5 then goto L2be172;
  #L2be160.  call `recycle`(v5) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L2be166.  goto L2be172;
  #L2be168.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2be16a.  call `recycle`(v5) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L2be170.  throw v0;
  #L2be172.  v0:= new `com.theartofdev.edmodo.cropper.BitmapUtils$BitmapSampled`;
  #L2be176.  call `<init>`(v0, v2, v4) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils$BitmapSampled;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L2be17c.  return v0 @kind object;
  #L2be17e.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L2be180.  v2:= new `java.lang.RuntimeException`;
  #L2be184.  v3:= new `java.lang.StringBuilder`;
  #L2be188.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2be18e.  v4:= "Failed to load sampled bitmap: " @kind object;
  #L2be192.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be198.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be19e.  v1:= "\r\n" @kind object;
  #L2be1a2.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be1a8.  call temp:= `getMessage`(v0) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2be1ae.  v1:= temp @kind object;
  #L2be1b0.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be1b6.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2be1bc.  v1:= temp @kind object;
  #L2be1be.  call `<init>`(v2, v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L2be1c4.  throw v2;
  #L2be1c6.  v0:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L2be1c8.  if v2 == 0 then goto L2be1d2;
  #L2be1cc.  call `recycle`(v2) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L2be1d2.  goto L2be1d6;
  #L2be1d4.  throw v0;
  #L2be1d6.  goto L2be1d4;
  catch `java.lang.OutOfMemoryError` @[L2be0c6..L2be108] goto L2be1c6;
  catch `java.lang.Exception` @[L2be0c6..L2be108] goto L2be17e;
  catch `java.lang.Throwable` @[L2be10c..L2be15c] goto L2be168;
  catch `java.lang.OutOfMemoryError` @[L2be160..L2be172] goto L2be1c6;
  catch `java.lang.Exception` @[L2be160..L2be172] goto L2be17e;
}
procedure `android.graphics.Bitmap` `cropBitmapObjectWithScale`(`android.graphics.Bitmap` v10 @kind object, `float`[] v11 @kind object, `int` v12 , `boolean` v13 , `int` v14 , `int` v15 , `float` v16 , `boolean` v17 , `boolean` v18 ) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.cropBitmapObjectWithScale:(Landroid/graphics/Bitmap;[FIZIIFZZ)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2bdb10.  v7:= v10 @kind object;
  #L2bdb12.  v8:= v12;
  #L2bdb14.  v0:= v16;
  #L2bdb18.  call temp:= `getWidth`(v10) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2bdb1e.  v2:= temp;
  #L2bdb20.  call temp:= `getHeight`(v10) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2bdb26.  v3:= temp;
  #L2bdb28.  v1:= v11 @kind object;
  #L2bdb2a.  v4:= v13;
  #L2bdb2c.  v5:= v14;
  #L2bdb2e.  v6:= v15;
  #L2bdb30.  call temp:= `g`(v1, v2, v3, v4, v5, v6) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.g:([FIIZII)Landroid/graphics/Rect;` @kind static;
  #L2bdb36.  v9:= temp @kind object;
  #L2bdb38.  v5:= new `android.graphics.Matrix`;
  #L2bdb3c.  call `<init>`(v5) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L2bdb42.  v1:= (`float`) v8 @kind i2f;
  #L2bdb44.  call temp:= `getWidth`(v10) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2bdb4a.  v2:= temp;
  #L2bdb4c.  v2:= v2 / 2;
  #L2bdb50.  v2:= (`float`) v2 @kind i2f;
  #L2bdb52.  call temp:= `getHeight`(v10) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2bdb58.  v3:= temp;
  #L2bdb5a.  v3:= v3 / 2;
  #L2bdb5e.  v3:= (`float`) v3 @kind i2f;
  #L2bdb60.  call `setRotate`(v5, v1, v2, v3) @signature `Landroid/graphics/Matrix;.setRotate:(FFF)V` @kind virtual;
  #L2bdb66.  if v17 == 0 then goto L2bdb6e;
  #L2bdb6a.  v1:= -v0 @kind float;
  #L2bdb6c.  goto L2bdb70;
  #L2bdb6e.  v1:= v0;
  #L2bdb70.  if v18 == 0 then goto L2bdb76;
  #L2bdb74.  v0:= -v0 @kind float;
  #L2bdb76.  call temp:= `postScale`(v5, v1, v0) @signature `Landroid/graphics/Matrix;.postScale:(FF)Z` @kind virtual;
  #L2bdb7c.  v1:= v9.`android.graphics.Rect.left` @type ^`int`;
  #L2bdb80.  v2:= v9.`android.graphics.Rect.top` @type ^`int`;
  #L2bdb84.  call temp:= `width`(v9) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L2bdb8a.  v3:= temp;
  #L2bdb8c.  call temp:= `height`(v9) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L2bdb92.  v4:= temp;
  #L2bdb94.  v6:= 1I;
  #L2bdb96.  v0:= v10 @kind object;
  #L2bdb98.  call temp:= `createBitmap`(v0, v1, v2, v3, v4, v5, v6) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;` @kind static;
  #L2bdb9e.  v0:= temp @kind object;
  #L2bdba0.  if v0 != v7 then goto L2bdbb6;
  #L2bdba4.  call temp:= `getConfig`(v10) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L2bdbaa.  v0:= temp @kind object;
  #L2bdbac.  v1:= 0I;
  #L2bdbae.  call temp:= `copy`(v10, v0, v1) @signature `Landroid/graphics/Bitmap;.copy:(Landroid/graphics/Bitmap$Config;Z)Landroid/graphics/Bitmap;` @kind virtual;
  #L2bdbb4.  v0:= temp @kind object;
  #L2bdbb6.  v1:= v8 %% 90;
  #L2bdbba.  if v1 == 0 then goto L2bdbd2;
  #L2bdbbe.  v1:= v11 @kind object;
  #L2bdbc0.  v2:= v9 @kind object;
  #L2bdbc2.  v3:= v12;
  #L2bdbc4.  v4:= v13;
  #L2bdbc6.  v5:= v14;
  #L2bdbc8.  v6:= v15;
  #L2bdbca.  call temp:= `cropForRotatedImage`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.cropForRotatedImage:(Landroid/graphics/Bitmap;[FLandroid/graphics/Rect;IZII)Landroid/graphics/Bitmap;` @kind static;
  #L2bdbd0.  v0:= temp @kind object;
  #L2bdbd2.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `cropForRotatedImage`(`android.graphics.Bitmap` v8 @kind object, `float`[] v9 @kind object, `android.graphics.Rect` v10 @kind object, `int` v11 , `boolean` v12 , `int` v13 , `int` v14 ) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.cropForRotatedImage:(Landroid/graphics/Bitmap;[FLandroid/graphics/Rect;IZII)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2bdbe4.  v0:= v11 %% 90;
  #L2bdbe8.  if v0 == 0 then goto L2bdd3e;
  #L2bdbec.  v0:= (`double`) v11 @kind i2d;
  #L2bdbee.  call temp:= `toRadians`(v0) @signature `Ljava/lang/Math;.toRadians:(D)D` @kind static;
  #L2bdbf4.  v0:= temp @kind wide;
  #L2bdbf6.  v2:= 90I;
  #L2bdbfa.  if v11 < v2 then goto L2bdc16;
  #L2bdbfe.  v2:= 180I;
  #L2bdc02.  if v11 <= v2 then goto L2bdc10;
  #L2bdc06.  v2:= 270I;
  #L2bdc0a.  if v11 >= v2 then goto L2bdc10;
  #L2bdc0e.  goto L2bdc16;
  #L2bdc10.  v11:= v10.`android.graphics.Rect.right` @type ^`int`;
  #L2bdc14.  goto L2bdc1a;
  #L2bdc16.  v11:= v10.`android.graphics.Rect.left` @type ^`int`;
  #L2bdc1a.  v2:= 0I;
  #L2bdc1c.  v3:= 0I;
  #L2bdc1e.  v4:= length @variable v9;
  #L2bdc20.  if v3 >= v4 then goto L2bdcf8;
  #L2bdc24.  v4:= v9[v3];
  #L2bdc28.  v5:= v11 + -1;
  #L2bdc2c.  v5:= (`float`) v5 @kind i2f;
  #L2bdc2e.  v4:= fcmpl(v4, v5);
  #L2bdc32.  if v4 < 0 then goto L2bdcf2;
  #L2bdc36.  v4:= v9[v3];
  #L2bdc3a.  v5:= v11 + 1;
  #L2bdc3e.  v5:= (`float`) v5 @kind i2f;
  #L2bdc40.  v4:= fcmpg(v4, v5);
  #L2bdc44.  if v4 > 0 then goto L2bdcf2;
  #L2bdc48.  call temp:= `sin`(v0) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L2bdc4e.  v4:= temp @kind wide;
  #L2bdc50.  v11:= v10.`android.graphics.Rect.bottom` @type ^`int`;
  #L2bdc54.  v11:= (`float`) v11 @kind i2f;
  #L2bdc56.  v3:= v3 + 1;
  #L2bdc5a.  v2:= v9[v3];
  #L2bdc5e.  v11:= v11 - v2 @kind float;
  #L2bdc60.  v6:= (`double`) v11 @kind f2d;
  #L2bdc62.  call temp:= `isNaN`(v6) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2bdc68.  v4:= v4 * v6 @kind double;
  #L2bdc6c.  call temp:= `abs`(v4) @signature `Ljava/lang/Math;.abs:(D)D` @kind static;
  #L2bdc72.  v4:= temp @kind wide;
  #L2bdc74.  v2:= (`int`) v4 @kind d2i;
  #L2bdc76.  call temp:= `cos`(v0) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L2bdc7c.  v4:= temp @kind wide;
  #L2bdc7e.  v11:= v9[v3];
  #L2bdc82.  v6:= v10.`android.graphics.Rect.top` @type ^`int`;
  #L2bdc86.  v6:= (`float`) v6 @kind i2f;
  #L2bdc88.  v11:= v11 - v6 @kind float;
  #L2bdc8a.  v6:= (`double`) v11 @kind f2d;
  #L2bdc8c.  call temp:= `isNaN`(v6) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2bdc92.  v4:= v4 * v6 @kind double;
  #L2bdc96.  call temp:= `abs`(v4) @signature `Ljava/lang/Math;.abs:(D)D` @kind static;
  #L2bdc9c.  v4:= temp @kind wide;
  #L2bdc9e.  v11:= (`int`) v4 @kind d2i;
  #L2bdca0.  v4:= v9[v3];
  #L2bdca4.  v5:= v10.`android.graphics.Rect.top` @type ^`int`;
  #L2bdca8.  v5:= (`float`) v5 @kind i2f;
  #L2bdcaa.  v4:= v4 - v5 @kind float;
  #L2bdcac.  v4:= (`double`) v4 @kind f2d;
  #L2bdcae.  call temp:= `sin`(v0) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L2bdcb4.  v6:= temp @kind wide;
  #L2bdcb6.  call temp:= `isNaN`(v4) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2bdcbc.  v4:= v4 / v6 @kind double;
  #L2bdcbe.  call temp:= `abs`(v4) @signature `Ljava/lang/Math;.abs:(D)D` @kind static;
  #L2bdcc4.  v4:= temp @kind wide;
  #L2bdcc6.  v4:= (`int`) v4 @kind d2i;
  #L2bdcc8.  v5:= v10.`android.graphics.Rect.bottom` @type ^`int`;
  #L2bdccc.  v5:= (`float`) v5 @kind i2f;
  #L2bdcce.  v9:= v9[v3];
  #L2bdcd2.  v5:= v5 - v9 @kind float;
  #L2bdcd4.  v5:= (`double`) v5 @kind f2d;
  #L2bdcd6.  call temp:= `cos`(v0) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L2bdcdc.  v0:= temp @kind wide;
  #L2bdcde.  call temp:= `isNaN`(v5) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2bdce4.  v5:= v5 / v0 @kind double;
  #L2bdce6.  call temp:= `abs`(v5) @signature `Ljava/lang/Math;.abs:(D)D` @kind static;
  #L2bdcec.  v0:= temp @kind wide;
  #L2bdcee.  v9:= (`int`) v0 @kind d2i;
  #L2bdcf0.  goto L2bdcfe;
  #L2bdcf2.  v3:= v3 + 2;
  #L2bdcf6.  goto L2bdc1e;
  #L2bdcf8.  v9:= 0I;
  #L2bdcfa.  v11:= 0I;
  #L2bdcfc.  v4:= 0I;
  #L2bdcfe.  v4:= v4 + v2 @kind int;
  #L2bdd00.  v9:= v9 + v11 @kind int;
  #L2bdd02.  call `set`(v10, v2, v11, v4, v9) @signature `Landroid/graphics/Rect;.set:(IIII)V` @kind virtual;
  #L2bdd08.  if v12 == 0 then goto L2bdd12;
  #L2bdd0c.  call `fixRectForAspectRatio`(v10, v13, v14) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.fixRectForAspectRatio:(Landroid/graphics/Rect;II)V` @kind static;
  #L2bdd12.  v9:= v10.`android.graphics.Rect.left` @type ^`int`;
  #L2bdd16.  v11:= v10.`android.graphics.Rect.top` @type ^`int`;
  #L2bdd1a.  call temp:= `width`(v10) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L2bdd20.  v12:= temp;
  #L2bdd22.  call temp:= `height`(v10) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L2bdd28.  v10:= temp;
  #L2bdd2a.  call temp:= `createBitmap`(v8, v9, v11, v12, v10) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIII)Landroid/graphics/Bitmap;` @kind static;
  #L2bdd30.  v9:= temp @kind object;
  #L2bdd32.  if v8 == v9 then goto L2bdd3c;
  #L2bdd36.  call `recycle`(v8) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L2bdd3c.  v8:= v9 @kind object;
  #L2bdd3e.  return v8 @kind object;
}
procedure `float` `d`(`float`[] v2 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.d:([F)F` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2be77c.  v0:= 1I;
  #L2be77e.  v0:= v2[v0];
  #L2be782.  v1:= 3I;
  #L2be784.  v1:= v2[v1];
  #L2be788.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2be78e.  v0:= temp;
  #L2be790.  v1:= 5I;
  #L2be792.  v1:= v2[v1];
  #L2be796.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2be79c.  v0:= temp;
  #L2be79e.  v1:= 7I;
  #L2be7a0.  v2:= v2[v1];
  #L2be7a4.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2be7aa.  v2:= temp;
  #L2be7ac.  return v2;
}
procedure `android.graphics.Bitmap` `decodeImage`(`android.content.ContentResolver` v2 @kind object, `android.net.Uri` v3 @kind object, `android.graphics.BitmapFactory$Options` v4 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.decodeImage:(Landroid/content/ContentResolver;Landroid/net/Uri;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2bdd50.  v0:= 0I;
  #L2bdd52.  call temp:= `openInputStream`(v2, v3) @signature `Landroid/content/ContentResolver;.openInputStream:(Landroid/net/Uri;)Ljava/io/InputStream;` @kind virtual;
  #L2bdd58.  v0:= temp @kind object;
  #L2bdd5a.  v1:= `@@com.theartofdev.edmodo.cropper.BitmapUtils.a` @type ^`android.graphics.Rect` @kind object;
  #L2bdd5e.  call temp:= `decodeStream`(v0, v1, v4) @signature `Landroid/graphics/BitmapFactory;.decodeStream:(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L2bdd64.  v2:= temp @kind object;
  #L2bdd66.  call `closeSafe`(v0) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.closeSafe:(Ljava/io/Closeable;)V` @kind static;
  #L2bdd6c.  return v2 @kind object;
  #L2bdd6e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2bdd70.  goto L2bddc0;
  #L2bdd72.  v1:= v4.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int`;
  #L2bdd76.  v1:= v1 * 2;
  #L2bdd7a.  v4.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v1;
  #L2bdd7e.  call `closeSafe`(v0) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.closeSafe:(Ljava/io/Closeable;)V` @kind static;
  #L2bdd84.  v0:= v4.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int`;
  #L2bdd88.  v1:= 512I;
  #L2bdd8c.  if v0 > v1 then goto L2bdd92;
  #L2bdd90.  goto L2bdd50;
  #L2bdd92.  v2:= new `java.lang.RuntimeException`;
  #L2bdd96.  v4:= new `java.lang.StringBuilder`;
  #L2bdd9a.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2bdda0.  v0:= "Failed to decode image: " @kind object;
  #L2bdda4.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bddaa.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bddb0.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2bddb6.  v3:= temp @kind object;
  #L2bddb8.  call `<init>`(v2, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2bddbe.  throw v2;
  #L2bddc0.  call `closeSafe`(v0) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.closeSafe:(Ljava/io/Closeable;)V` @kind static;
  #L2bddc6.  goto L2bddca;
  #L2bddc8.  throw v2;
  #L2bddca.  goto L2bddc8;
  catch `java.lang.OutOfMemoryError` @[L2bdd52..L2bdd66] goto L2bdd72;
  catch `java.lang.Throwable` @[L2bdd52..L2bdd66] goto L2bdd6e;
  catch `java.lang.Throwable` @[L2bdd72..L2bdd7e] goto L2bdd6e;
}
procedure `android.graphics.BitmapFactory$Options` `decodeImageForOption`(`android.content.ContentResolver` v1 @kind object, `android.net.Uri` v2 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.decodeImageForOption:(Landroid/content/ContentResolver;Landroid/net/Uri;)Landroid/graphics/BitmapFactory$Options;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2bdf38.  call temp:= `openInputStream`(v1, v2) @signature `Landroid/content/ContentResolver;.openInputStream:(Landroid/net/Uri;)Ljava/io/InputStream;` @kind virtual;
  #L2bdf3e.  v1:= temp @kind object;
  #L2bdf40.  v2:= new `android.graphics.BitmapFactory$Options`;
  #L2bdf44.  call `<init>`(v2) @signature `Landroid/graphics/BitmapFactory$Options;.<init>:()V` @kind direct;
  #L2bdf4a.  v0:= 1I;
  #L2bdf4c.  v2.`android.graphics.BitmapFactory$Options.inJustDecodeBounds` @type ^`boolean` := v0 @kind boolean;
  #L2bdf50.  v0:= `@@com.theartofdev.edmodo.cropper.BitmapUtils.a` @type ^`android.graphics.Rect` @kind object;
  #L2bdf54.  call temp:= `decodeStream`(v1, v0, v2) @signature `Landroid/graphics/BitmapFactory;.decodeStream:(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L2bdf5a.  v0:= 0I;
  #L2bdf5c.  v2.`android.graphics.BitmapFactory$Options.inJustDecodeBounds` @type ^`boolean` := v0 @kind boolean;
  #L2bdf60.  call `closeSafe`(v1) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.closeSafe:(Ljava/io/Closeable;)V` @kind static;
  #L2bdf66.  return v2 @kind object;
  #L2bdf68.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2bdf6a.  goto L2bdf70;
  #L2bdf6c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2bdf6e.  v1:= 0I;
  #L2bdf70.  call `closeSafe`(v1) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.closeSafe:(Ljava/io/Closeable;)V` @kind static;
  #L2bdf76.  throw v2;
  catch `java.lang.Throwable` @[L2bdf38..L2bdf40] goto L2bdf6c;
  catch `java.lang.Throwable` @[L2bdf40..L2bdf60] goto L2bdf68;
}
procedure `com.theartofdev.edmodo.cropper.BitmapUtils$BitmapSampled` `decodeSampledBitmapRegion`(`android.content.Context` v4 @kind object, `android.net.Uri` v5 @kind object, `android.graphics.Rect` v6 @kind object, `int` v7 , `int` v8 , `int` v9 ) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.decodeSampledBitmapRegion:(Landroid/content/Context;Landroid/net/Uri;Landroid/graphics/Rect;III)Lcom/theartofdev/edmodo/cropper/BitmapUtils$BitmapSampled;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2be540.  v0:= 0I;
  #L2be542.  v1:= new `android.graphics.BitmapFactory$Options`;
  #L2be546.  call `<init>`(v1) @signature `Landroid/graphics/BitmapFactory$Options;.<init>:()V` @kind direct;
  #L2be54c.  call temp:= `width`(v6) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L2be552.  v2:= temp;
  #L2be554.  call temp:= `height`(v6) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L2be55a.  v3:= temp;
  #L2be55c.  call temp:= `calculateInSampleSizeByReqestedSize`(v2, v3, v7, v8) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.calculateInSampleSizeByReqestedSize:(IIII)I` @kind static;
  #L2be562.  v7:= temp;
  #L2be564.  v9:= v9 * v7 @kind int;
  #L2be568.  v1.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v9;
  #L2be56c.  call temp:= `getContentResolver`(v4) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L2be572.  v4:= temp @kind object;
  #L2be574.  call temp:= `openInputStream`(v4, v5) @signature `Landroid/content/ContentResolver;.openInputStream:(Landroid/net/Uri;)Ljava/io/InputStream;` @kind virtual;
  #L2be57a.  v4:= temp @kind object;
  #L2be57c.  v7:= 0I;
  #L2be57e.  call temp:= `newInstance`(v4, v7) @signature `Landroid/graphics/BitmapRegionDecoder;.newInstance:(Ljava/io/InputStream;Z)Landroid/graphics/BitmapRegionDecoder;` @kind static;
  #L2be584.  v7:= temp @kind object;
  #L2be586.  v8:= new `com.theartofdev.edmodo.cropper.BitmapUtils$BitmapSampled`;
  #L2be58a.  call temp:= `decodeRegion`(v7, v6, v1) @signature `Landroid/graphics/BitmapRegionDecoder;.decodeRegion:(Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind virtual;
  #L2be590.  v9:= temp @kind object;
  #L2be592.  v2:= v1.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int`;
  #L2be596.  call `<init>`(v8, v9, v2) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils$BitmapSampled;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L2be59c.  call `closeSafe`(v4) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.closeSafe:(Ljava/io/Closeable;)V` @kind static;
  #L2be5a2.  call `recycle`(v7) @signature `Landroid/graphics/BitmapRegionDecoder;.recycle:()V` @kind virtual;
  #L2be5a8.  return v8 @kind object;
  #L2be5aa.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2be5ac.  goto L2be5e8;
  #L2be5ae.  v6:= Exception @type ^`java.lang.Exception` @kind object;
  #L2be5b0.  goto L2be5f0;
  #L2be5b2.  v8:= v1.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int`;
  #L2be5b6.  v8:= v8 * 2;
  #L2be5ba.  v1.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v8;
  #L2be5be.  v9:= 512I;
  #L2be5c2.  if v8 <= v9 then goto L2be586;
  #L2be5c6.  call `closeSafe`(v4) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.closeSafe:(Ljava/io/Closeable;)V` @kind static;
  #L2be5cc.  if v7 == 0 then goto L2be5d6;
  #L2be5d0.  call `recycle`(v7) @signature `Landroid/graphics/BitmapRegionDecoder;.recycle:()V` @kind virtual;
  #L2be5d6.  v4:= new `com.theartofdev.edmodo.cropper.BitmapUtils$BitmapSampled`;
  #L2be5da.  v5:= 1I;
  #L2be5dc.  call `<init>`(v4, v0, v5) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils$BitmapSampled;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L2be5e2.  return v4 @kind object;
  #L2be5e4.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2be5e6.  v7:= v0 @kind object;
  #L2be5e8.  v0:= v4 @kind object;
  #L2be5ea.  goto L2be646;
  #L2be5ec.  v6:= Exception @type ^`java.lang.Exception` @kind object;
  #L2be5ee.  v7:= v0 @kind object;
  #L2be5f0.  v0:= v4 @kind object;
  #L2be5f2.  goto L2be5fe;
  #L2be5f4.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2be5f6.  v7:= v0 @kind object;
  #L2be5f8.  goto L2be646;
  #L2be5fa.  v6:= Exception @type ^`java.lang.Exception` @kind object;
  #L2be5fc.  v7:= v0 @kind object;
  #L2be5fe.  v4:= new `java.lang.RuntimeException`;
  #L2be602.  v8:= new `java.lang.StringBuilder`;
  #L2be606.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2be60c.  v9:= "Failed to load sampled bitmap: " @kind object;
  #L2be610.  call temp:= `append`(v8, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be616.  call temp:= `append`(v8, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be61c.  v5:= "\r\n" @kind object;
  #L2be620.  call temp:= `append`(v8, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be626.  call temp:= `getMessage`(v6) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2be62c.  v5:= temp @kind object;
  #L2be62e.  call temp:= `append`(v8, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2be634.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2be63a.  v5:= temp @kind object;
  #L2be63c.  call `<init>`(v4, v5, v6) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L2be642.  throw v4;
  #L2be644.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2be646.  call `closeSafe`(v0) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.closeSafe:(Ljava/io/Closeable;)V` @kind static;
  #L2be64c.  if v7 == 0 then goto L2be656;
  #L2be650.  call `recycle`(v7) @signature `Landroid/graphics/BitmapRegionDecoder;.recycle:()V` @kind virtual;
  #L2be656.  goto L2be65a;
  #L2be658.  throw v5;
  #L2be65a.  goto L2be658;
  catch `java.lang.Exception` @[L2be542..L2be57c] goto L2be5fa;
  catch `java.lang.Throwable` @[L2be542..L2be57c] goto L2be5f4;
  catch `java.lang.Exception` @[L2be57e..L2be586] goto L2be5ec;
  catch `java.lang.Throwable` @[L2be57e..L2be586] goto L2be5e4;
  catch `java.lang.OutOfMemoryError` @[L2be586..L2be59c] goto L2be5b2;
  catch `java.lang.Exception` @[L2be586..L2be59c] goto L2be5ae;
  catch `java.lang.Throwable` @[L2be586..L2be59c] goto L2be5aa;
  catch `java.lang.Exception` @[L2be5b2..L2be5be] goto L2be5ae;
  catch `java.lang.Throwable` @[L2be5b2..L2be5be] goto L2be5aa;
  catch `java.lang.Throwable` @[L2be5fe..L2be644] goto L2be644;
}
procedure `float` `e`(`float`[] v1 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.e:([F)F` @AccessFlag STATIC {
    temp;
    v0;

  #L2be7c0.  call temp:= `j`(v1) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.j:([F)F` @kind static;
  #L2be7c6.  v0:= temp;
  #L2be7c8.  call temp:= `i`(v1) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.i:([F)F` @kind static;
  #L2be7ce.  v1:= temp;
  #L2be7d0.  v0:= v0 + v1 @kind float;
  #L2be7d2.  v1:= 2.0F;
  #L2be7d6.  v0:= v0 / v1 @kind float;
  #L2be7d8.  return v0;
}
procedure `float` `f`(`float`[] v1 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.f:([F)F` @AccessFlag STATIC {
    temp;
    v0;

  #L2be7ec.  call temp:= `d`(v1) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.d:([F)F` @kind static;
  #L2be7f2.  v0:= temp;
  #L2be7f4.  call temp:= `k`(v1) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.k:([F)F` @kind static;
  #L2be7fa.  v1:= temp;
  #L2be7fc.  v0:= v0 + v1 @kind float;
  #L2be7fe.  v1:= 2.0F;
  #L2be802.  v0:= v0 / v1 @kind float;
  #L2be804.  return v0;
}
procedure `void` `fixRectForAspectRatio`(`android.graphics.Rect` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.fixRectForAspectRatio:(Landroid/graphics/Rect;II)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2beaf0.  if v2 != v3 then goto L2beb56;
  #L2beaf4.  call temp:= `width`(v1) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L2beafa.  v2:= temp;
  #L2beafc.  call temp:= `height`(v1) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L2beb02.  v3:= temp;
  #L2beb04.  if v2 == v3 then goto L2beb56;
  #L2beb08.  call temp:= `height`(v1) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L2beb0e.  v2:= temp;
  #L2beb10.  call temp:= `width`(v1) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L2beb16.  v3:= temp;
  #L2beb18.  if v2 <= v3 then goto L2beb3a;
  #L2beb1c.  v2:= v1.`android.graphics.Rect.bottom` @type ^`int`;
  #L2beb20.  call temp:= `height`(v1) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L2beb26.  v3:= temp;
  #L2beb28.  call temp:= `width`(v1) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L2beb2e.  v0:= temp;
  #L2beb30.  v3:= v3 - v0 @kind int;
  #L2beb32.  v2:= v2 - v3 @kind int;
  #L2beb34.  v1.`android.graphics.Rect.bottom` @type ^`int` := v2;
  #L2beb38.  goto L2beb56;
  #L2beb3a.  v2:= v1.`android.graphics.Rect.right` @type ^`int`;
  #L2beb3e.  call temp:= `width`(v1) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L2beb44.  v3:= temp;
  #L2beb46.  call temp:= `height`(v1) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L2beb4c.  v0:= temp;
  #L2beb4e.  v3:= v3 - v0 @kind int;
  #L2beb50.  v2:= v2 - v3 @kind int;
  #L2beb52.  v1.`android.graphics.Rect.right` @type ^`int` := v2;
  #L2beb56.  return @kind void;
}
procedure `android.graphics.Rect` `g`(`float`[] v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 , `int` v7 , `int` v8 ) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.g:([FIIZII)Landroid/graphics/Rect;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2bdfa0.  call temp:= `i`(v3) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.i:([F)F` @kind static;
  #L2bdfa6.  v0:= temp;
  #L2bdfa8.  v1:= 0I;
  #L2bdfaa.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2bdfb0.  v0:= temp;
  #L2bdfb2.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L2bdfb8.  v0:= temp;
  #L2bdfba.  call temp:= `k`(v3) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.k:([F)F` @kind static;
  #L2bdfc0.  v2:= temp;
  #L2bdfc2.  call temp:= `max`(v1, v2) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2bdfc8.  v1:= temp;
  #L2bdfca.  call temp:= `round`(v1) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L2bdfd0.  v1:= temp;
  #L2bdfd2.  v4:= (`float`) v4 @kind i2f;
  #L2bdfd4.  call temp:= `j`(v3) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.j:([F)F` @kind static;
  #L2bdfda.  v2:= temp;
  #L2bdfdc.  call temp:= `min`(v4, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2bdfe2.  v4:= temp;
  #L2bdfe4.  call temp:= `round`(v4) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L2bdfea.  v4:= temp;
  #L2bdfec.  v5:= (`float`) v5 @kind i2f;
  #L2bdfee.  call temp:= `d`(v3) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.d:([F)F` @kind static;
  #L2bdff4.  v3:= temp;
  #L2bdff6.  call temp:= `min`(v5, v3) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2bdffc.  v3:= temp;
  #L2bdffe.  call temp:= `round`(v3) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L2be004.  v3:= temp;
  #L2be006.  v5:= new `android.graphics.Rect`;
  #L2be00a.  call `<init>`(v5, v0, v1, v4, v3) @signature `Landroid/graphics/Rect;.<init>:(IIII)V` @kind direct;
  #L2be010.  if v6 == 0 then goto L2be01a;
  #L2be014.  call `fixRectForAspectRatio`(v5, v7, v8) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.fixRectForAspectRatio:(Landroid/graphics/Rect;II)V` @kind static;
  #L2be01a.  return v5 @kind object;
}
procedure `int` `getMaxTextureSize`() @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.getMaxTextureSize:()I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2be9b0.  v0:= 2048I;
  #L2be9b4.  call temp:= `getEGL`() @signature `Ljavax/microedition/khronos/egl/EGLContext;.getEGL:()Ljavax/microedition/khronos/egl/EGL;` @kind static;
  #L2be9ba.  v1:= temp @kind object;
  #L2be9bc.  v1:= (`javax.microedition.khronos.egl.EGL10`) v1 @kind object;
  #L2be9c0.  v2:= `@@javax.microedition.khronos.egl.EGL10.EGL_DEFAULT_DISPLAY` @type ^`java.lang.Object` @kind object;
  #L2be9c4.  call temp:= `eglGetDisplay`(v1, v2) @signature `Ljavax/microedition/khronos/egl/EGL10;.eglGetDisplay:(Ljava/lang/Object;)Ljavax/microedition/khronos/egl/EGLDisplay;` @kind interface;
  #L2be9ca.  v2:= temp @kind object;
  #L2be9cc.  v3:= 2I;
  #L2be9ce.  v3:= new `int`[v3];
  #L2be9d2.  call temp:= `eglInitialize`(v1, v2, v3) @signature `Ljavax/microedition/khronos/egl/EGL10;.eglInitialize:(Ljavax/microedition/khronos/egl/EGLDisplay;[I)Z` @kind interface;
  #L2be9d8.  v3:= 1I;
  #L2be9da.  v4:= new `int`[v3];
  #L2be9de.  v5:= 0I;
  #L2be9e0.  v6:= 0I;
  #L2be9e2.  call temp:= `eglGetConfigs`(v1, v2, v5, v6, v4) @signature `Ljavax/microedition/khronos/egl/EGL10;.eglGetConfigs:(Ljavax/microedition/khronos/egl/EGLDisplay;[Ljavax/microedition/khronos/egl/EGLConfig;I[I)Z` @kind interface;
  #L2be9e8.  v5:= v4[v6];
  #L2be9ec.  v5:= new `javax.microedition.khronos.egl.EGLConfig`[v5];
  #L2be9f0.  v7:= v4[v6];
  #L2be9f4.  call temp:= `eglGetConfigs`(v1, v2, v5, v7, v4) @signature `Ljavax/microedition/khronos/egl/EGL10;.eglGetConfigs:(Ljavax/microedition/khronos/egl/EGLDisplay;[Ljavax/microedition/khronos/egl/EGLConfig;I[I)Z` @kind interface;
  #L2be9fa.  v3:= new `int`[v3];
  #L2be9fe.  v7:= 0I;
  #L2bea00.  v8:= 0I;
  #L2bea02.  v9:= v4[v6];
  #L2bea06.  if v7 >= v9 then goto L2bea2a;
  #L2bea0a.  v9:= v5[v7] @kind object;
  #L2bea0e.  v10:= 12332I;
  #L2bea12.  call temp:= `eglGetConfigAttrib`(v1, v2, v9, v10, v3) @signature `Ljavax/microedition/khronos/egl/EGL10;.eglGetConfigAttrib:(Ljavax/microedition/khronos/egl/EGLDisplay;Ljavax/microedition/khronos/egl/EGLConfig;I[I)Z` @kind interface;
  #L2bea18.  v9:= v3[v6];
  #L2bea1c.  if v8 >= v9 then goto L2bea24;
  #L2bea20.  v8:= v3[v6];
  #L2bea24.  v7:= v7 + 1;
  #L2bea28.  goto L2bea02;
  #L2bea2a.  call temp:= `eglTerminate`(v1, v2) @signature `Ljavax/microedition/khronos/egl/EGL10;.eglTerminate:(Ljavax/microedition/khronos/egl/EGLDisplay;)Z` @kind interface;
  #L2bea30.  call temp:= `max`(v8, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L2bea36.  v0:= temp;
  #L2bea38.  return v0;
  catch `java.lang.Exception` @[L2be9b4..L2bea38] goto L2bea38;
}
procedure `float` `h`(`float`[] v1 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.h:([F)F` @AccessFlag STATIC {
    temp;
    v0;

  #L2be818.  call temp:= `d`(v1) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.d:([F)F` @kind static;
  #L2be81e.  v0:= temp;
  #L2be820.  call temp:= `k`(v1) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.k:([F)F` @kind static;
  #L2be826.  v1:= temp;
  #L2be828.  v0:= v0 - v1 @kind float;
  #L2be82a.  return v0;
}
procedure `float` `i`(`float`[] v2 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.i:([F)F` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2be83c.  v0:= 0I;
  #L2be83e.  v0:= v2[v0];
  #L2be842.  v1:= 2I;
  #L2be844.  v1:= v2[v1];
  #L2be848.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2be84e.  v0:= temp;
  #L2be850.  v1:= 4I;
  #L2be852.  v1:= v2[v1];
  #L2be856.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2be85c.  v0:= temp;
  #L2be85e.  v1:= 6I;
  #L2be860.  v2:= v2[v1];
  #L2be864.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2be86a.  v2:= temp;
  #L2be86c.  return v2;
}
procedure `float` `j`(`float`[] v2 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.j:([F)F` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2be880.  v0:= 0I;
  #L2be882.  v0:= v2[v0];
  #L2be886.  v1:= 2I;
  #L2be888.  v1:= v2[v1];
  #L2be88c.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2be892.  v0:= temp;
  #L2be894.  v1:= 4I;
  #L2be896.  v1:= v2[v1];
  #L2be89a.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2be8a0.  v0:= temp;
  #L2be8a2.  v1:= 6I;
  #L2be8a4.  v2:= v2[v1];
  #L2be8a8.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2be8ae.  v2:= temp;
  #L2be8b0.  return v2;
}
procedure `float` `k`(`float`[] v2 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.k:([F)F` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2be8c4.  v0:= 1I;
  #L2be8c6.  v0:= v2[v0];
  #L2be8ca.  v1:= 3I;
  #L2be8cc.  v1:= v2[v1];
  #L2be8d0.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2be8d6.  v0:= temp;
  #L2be8d8.  v1:= 5I;
  #L2be8da.  v1:= v2[v1];
  #L2be8de.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2be8e4.  v0:= temp;
  #L2be8e6.  v1:= 7I;
  #L2be8e8.  v2:= v2[v1];
  #L2be8ec.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2be8f2.  v2:= temp;
  #L2be8f4.  return v2;
}
procedure `float` `l`(`float`[] v1 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.l:([F)F` @AccessFlag STATIC {
    temp;
    v0;

  #L2be908.  call temp:= `j`(v1) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.j:([F)F` @kind static;
  #L2be90e.  v0:= temp;
  #L2be910.  call temp:= `i`(v1) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.i:([F)F` @kind static;
  #L2be916.  v1:= temp;
  #L2be918.  v0:= v0 - v1 @kind float;
  #L2be91a.  return v0;
}
procedure `android.graphics.Bitmap` `m`(`android.graphics.Bitmap` v5 @kind object, `int` v6 , `int` v7 , `com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions` v8 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.m:(Landroid/graphics/Bitmap;IILcom/theartofdev/edmodo/cropper/CropImageView$RequestSizeOptions;)Landroid/graphics/Bitmap;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2bddf4.  if v6 <= 0 then goto L2bde92;
  #L2bddf8.  if v7 <= 0 then goto L2bde92;
  #L2bddfc.  v0:= `@@com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions.RESIZE_FIT` @type ^`com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions` @kind object;
  #L2bde00.  if v8 == v0 then goto L2bde14;
  #L2bde04.  v1:= `@@com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions.RESIZE_INSIDE` @type ^`com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions` @kind object;
  #L2bde08.  if v8 == v1 then goto L2bde14;
  #L2bde0c.  v1:= `@@com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions.RESIZE_EXACT` @type ^`com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions` @kind object;
  #L2bde10.  if v8 != v1 then goto L2bde92;
  #L2bde14.  v1:= 0I;
  #L2bde16.  v2:= `@@com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions.RESIZE_EXACT` @type ^`com.theartofdev.edmodo.cropper.CropImageView$RequestSizeOptions` @kind object;
  #L2bde1a.  v3:= 0I;
  #L2bde1c.  if v8 != v2 then goto L2bde2a;
  #L2bde20.  call temp:= `createScaledBitmap`(v5, v6, v7, v3) @signature `Landroid/graphics/Bitmap;.createScaledBitmap:(Landroid/graphics/Bitmap;IIZ)Landroid/graphics/Bitmap;` @kind static;
  #L2bde26.  v1:= temp @kind object;
  #L2bde28.  goto L2bde72;
  #L2bde2a.  call temp:= `getWidth`(v5) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2bde30.  v2:= temp;
  #L2bde32.  call temp:= `getHeight`(v5) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2bde38.  v4:= temp;
  #L2bde3a.  v2:= (`float`) v2 @kind i2f;
  #L2bde3c.  v6:= (`float`) v6 @kind i2f;
  #L2bde3e.  v6:= v2 / v6 @kind float;
  #L2bde42.  v4:= (`float`) v4 @kind i2f;
  #L2bde44.  v7:= (`float`) v7 @kind i2f;
  #L2bde46.  v7:= v4 / v7 @kind float;
  #L2bde4a.  call temp:= `max`(v6, v7) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2bde50.  v6:= temp;
  #L2bde52.  v7:= 1.0F;
  #L2bde56.  v7:= fcmpl(v6, v7);
  #L2bde5a.  if v7 > 0 then goto L2bde62;
  #L2bde5e.  if v8 != v0 then goto L2bde72;
  #L2bde62.  v2:= v2 / v6 @kind float;
  #L2bde64.  v7:= (`int`) v2 @kind f2i;
  #L2bde66.  v4:= v4 / v6 @kind float;
  #L2bde68.  v6:= (`int`) v4 @kind f2i;
  #L2bde6a.  call temp:= `createScaledBitmap`(v5, v7, v6, v3) @signature `Landroid/graphics/Bitmap;.createScaledBitmap:(Landroid/graphics/Bitmap;IIZ)Landroid/graphics/Bitmap;` @kind static;
  #L2bde70.  v1:= temp @kind object;
  #L2bde72.  if v1 == 0 then goto L2bde92;
  #L2bde76.  if v1 == v5 then goto L2bde80;
  #L2bde7a.  call `recycle`(v5) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L2bde80.  return v1 @kind object;
  #L2bde82.  v6:= Exception @type ^`java.lang.Exception` @kind object;
  #L2bde84.  v7:= "AIC" @kind object;
  #L2bde88.  v8:= "Failed to resize cropped image, return bitmap before resize" @kind object;
  #L2bde8c.  call temp:= `w`(v7, v8, v6) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L2bde92.  return v5 @kind object;
  catch `java.lang.Exception` @[L2bddfc..L2bde80] goto L2bde82;
}
procedure `com.theartofdev.edmodo.cropper.BitmapUtils$RotateBitmapResult` `n`(`android.graphics.Bitmap` v1 @kind object, `android.content.Context` v2 @kind object, `android.net.Uri` v3 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.n:(Landroid/graphics/Bitmap;Landroid/content/Context;Landroid/net/Uri;)Lcom/theartofdev/edmodo/cropper/BitmapUtils$RotateBitmapResult;` @AccessFlag STATIC {
    temp;
    v0;

  #L2be6b0.  v0:= 0I;
  #L2be6b2.  call temp:= `getContentResolver`(v2) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L2be6b8.  v2:= temp @kind object;
  #L2be6ba.  call temp:= `openInputStream`(v2, v3) @signature `Landroid/content/ContentResolver;.openInputStream:(Landroid/net/Uri;)Ljava/io/InputStream;` @kind virtual;
  #L2be6c0.  v2:= temp @kind object;
  #L2be6c2.  if v2 == 0 then goto L2be6dc;
  #L2be6c6.  v3:= new `androidx.exifinterface.media.ExifInterface`;
  #L2be6ca.  call `<init>`(v3, v2) @signature `Landroidx/exifinterface/media/ExifInterface;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L2be6d0.  call `close`(v2) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L2be6d6.  v0:= v3 @kind object;
  #L2be6d8.  goto L2be6dc;
  #L2be6da.  
  #L2be6dc.  if v0 == 0 then goto L2be6ea;
  #L2be6e0.  call temp:= `o`(v1, v0) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.o:(Landroid/graphics/Bitmap;Landroidx/exifinterface/media/ExifInterface;)Lcom/theartofdev/edmodo/cropper/BitmapUtils$RotateBitmapResult;` @kind static;
  #L2be6e6.  v1:= temp @kind object;
  #L2be6e8.  goto L2be6f8;
  #L2be6ea.  v2:= new `com.theartofdev.edmodo.cropper.BitmapUtils$RotateBitmapResult`;
  #L2be6ee.  v3:= 0I;
  #L2be6f0.  call `<init>`(v2, v1, v3) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils$RotateBitmapResult;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L2be6f6.  v1:= v2 @kind object;
  #L2be6f8.  return v1 @kind object;
  catch `java.lang.Exception` @[L2be6b2..L2be6d0] goto L2be6da;
  catch `java.lang.Exception` @[L2be6d0..L2be6d6] goto L2be6d6;
}
procedure `com.theartofdev.edmodo.cropper.BitmapUtils$RotateBitmapResult` `o`(`android.graphics.Bitmap` v2 @kind object, `androidx.exifinterface.media.ExifInterface` v3 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.o:(Landroid/graphics/Bitmap;Landroidx/exifinterface/media/ExifInterface;)Lcom/theartofdev/edmodo/cropper/BitmapUtils$RotateBitmapResult;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2be728.  v0:= "Orientation" @kind object;
  #L2be72c.  v1:= 1I;
  #L2be72e.  call temp:= `getAttributeInt`(v3, v0, v1) @signature `Landroidx/exifinterface/media/ExifInterface;.getAttributeInt:(Ljava/lang/String;I)I` @kind virtual;
  #L2be734.  v3:= temp;
  #L2be736.  v0:= 3I;
  #L2be738.  if v3 == v0 then goto L2be75a;
  #L2be73c.  v0:= 6I;
  #L2be73e.  if v3 == v0 then goto L2be754;
  #L2be742.  v0:= 8I;
  #L2be746.  if v3 == v0 then goto L2be74e;
  #L2be74a.  v3:= 0I;
  #L2be74c.  goto L2be75e;
  #L2be74e.  v3:= 270I;
  #L2be752.  goto L2be75e;
  #L2be754.  v3:= 90I;
  #L2be758.  goto L2be75e;
  #L2be75a.  v3:= 180I;
  #L2be75e.  v0:= new `com.theartofdev.edmodo.cropper.BitmapUtils$RotateBitmapResult`;
  #L2be762.  call `<init>`(v0, v2, v3) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils$RotateBitmapResult;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L2be768.  return v0 @kind object;
}
procedure `void` `p`(`android.content.Context` v1 @kind object, `android.graphics.Bitmap` v2 @kind object, `android.net.Uri` v3 @kind object, `android.graphics.Bitmap$CompressFormat` v4 @kind object, `int` v5 ) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.p:(Landroid/content/Context;Landroid/graphics/Bitmap;Landroid/net/Uri;Landroid/graphics/Bitmap$CompressFormat;I)V` @AccessFlag STATIC {
    temp;
    v0;

  #L2beb68.  v0:= 0I;
  #L2beb6a.  call temp:= `getContentResolver`(v1) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L2beb70.  v1:= temp @kind object;
  #L2beb72.  call temp:= `openOutputStream`(v1, v3) @signature `Landroid/content/ContentResolver;.openOutputStream:(Landroid/net/Uri;)Ljava/io/OutputStream;` @kind virtual;
  #L2beb78.  v0:= temp @kind object;
  #L2beb7a.  call temp:= `compress`(v2, v4, v5, v0) @signature `Landroid/graphics/Bitmap;.compress:(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z` @kind virtual;
  #L2beb80.  call `closeSafe`(v0) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.closeSafe:(Ljava/io/Closeable;)V` @kind static;
  #L2beb86.  return @kind void;
  #L2beb88.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2beb8a.  call `closeSafe`(v0) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.closeSafe:(Ljava/io/Closeable;)V` @kind static;
  #L2beb90.  throw v1;
  catch `java.lang.Throwable` @[L2beb6a..L2beb80] goto L2beb88;
}
procedure `android.net.Uri` `q`(`android.content.Context` v3 @kind object, `android.graphics.Bitmap` v4 @kind object, `android.net.Uri` v5 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.q:(Landroid/content/Context;Landroid/graphics/Bitmap;Landroid/net/Uri;)Landroid/net/Uri;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2be02c.  v0:= 1I;
  #L2be02e.  if v5 != 0 then goto L2be054;
  #L2be032.  v5:= "aic_state_store_temp" @kind object;
  #L2be036.  v1:= ".jpg" @kind object;
  #L2be03a.  call temp:= `getCacheDir`(v3) @signature `Landroid/content/Context;.getCacheDir:()Ljava/io/File;` @kind virtual;
  #L2be040.  v2:= temp @kind object;
  #L2be042.  call temp:= `createTempFile`(v5, v1, v2) @signature `Ljava/io/File;.createTempFile:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;` @kind static;
  #L2be048.  v5:= temp @kind object;
  #L2be04a.  call temp:= `fromFile`(v5) @signature `Landroid/net/Uri;.fromFile:(Ljava/io/File;)Landroid/net/Uri;` @kind static;
  #L2be050.  v5:= temp @kind object;
  #L2be052.  goto L2be074;
  #L2be054.  v1:= new `java.io.File`;
  #L2be058.  call temp:= `getPath`(v5) @signature `Landroid/net/Uri;.getPath:()Ljava/lang/String;` @kind virtual;
  #L2be05e.  v2:= temp @kind object;
  #L2be060.  call `<init>`(v1, v2) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2be066.  call temp:= `exists`(v1) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L2be06c.  v1:= temp;
  #L2be06e.  if v1 == 0 then goto L2be074;
  #L2be072.  v0:= 0I;
  #L2be074.  if v0 == 0 then goto L2be086;
  #L2be078.  v0:= `@@android.graphics.Bitmap$CompressFormat.JPEG` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L2be07c.  v1:= 95I;
  #L2be080.  call `p`(v3, v4, v5, v0, v1) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.p:(Landroid/content/Context;Landroid/graphics/Bitmap;Landroid/net/Uri;Landroid/graphics/Bitmap$CompressFormat;I)V` @kind static;
  #L2be086.  return v5 @kind object;
  #L2be088.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L2be08a.  v4:= "AIC" @kind object;
  #L2be08e.  v5:= "Failed to write bitmap to temp file for image-cropper save instance state" @kind object;
  #L2be092.  call temp:= `w`(v4, v5, v3) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L2be098.  v3:= 0I;
  #L2be09a.  return v3 @kind object;
  catch `java.lang.Exception` @[L2be032..L2be086] goto L2be088;
}
procedure `android.graphics.Bitmap` `rotateAndFlipBitmapInt`(`android.graphics.Bitmap` v7 @kind object, `int` v8 , `boolean` v9 , `boolean` v10 ) @signature `Lcom/theartofdev/edmodo/cropper/BitmapUtils;.rotateAndFlipBitmapInt:(Landroid/graphics/Bitmap;IZZ)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2bdeb4.  if v8 > 0 then goto L2bdec4;
  #L2bdeb8.  if v9 != 0 then goto L2bdec4;
  #L2bdebc.  if v10 == 0 then goto L2bdec2;
  #L2bdec0.  goto L2bdec4;
  #L2bdec2.  return v7 @kind object;
  #L2bdec4.  v5:= new `android.graphics.Matrix`;
  #L2bdec8.  call `<init>`(v5) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L2bdece.  v8:= (`float`) v8 @kind i2f;
  #L2bded0.  call `setRotate`(v5, v8) @signature `Landroid/graphics/Matrix;.setRotate:(F)V` @kind virtual;
  #L2bded6.  v8:= -1.0F;
  #L2bdeda.  v0:= 1.0F;
  #L2bdede.  if v9 == 0 then goto L2bdee8;
  #L2bdee2.  v9:= -1.0F;
  #L2bdee6.  goto L2bdeec;
  #L2bdee8.  v9:= 1.0F;
  #L2bdeec.  if v10 == 0 then goto L2bdef2;
  #L2bdef0.  goto L2bdef6;
  #L2bdef2.  v8:= 1.0F;
  #L2bdef6.  call temp:= `postScale`(v5, v9, v8) @signature `Landroid/graphics/Matrix;.postScale:(FF)Z` @kind virtual;
  #L2bdefc.  v1:= 0I;
  #L2bdefe.  v2:= 0I;
  #L2bdf00.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2bdf06.  v3:= temp;
  #L2bdf08.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2bdf0e.  v4:= temp;
  #L2bdf10.  v6:= 0I;
  #L2bdf12.  v0:= v7 @kind object;
  #L2bdf14.  call temp:= `createBitmap`(v0, v1, v2, v3, v4, v5, v6) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;` @kind static;
  #L2bdf1a.  v8:= temp @kind object;
  #L2bdf1c.  if v8 == v7 then goto L2bdf26;
  #L2bdf20.  call `recycle`(v7) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L2bdf26.  return v8 @kind object;
}
