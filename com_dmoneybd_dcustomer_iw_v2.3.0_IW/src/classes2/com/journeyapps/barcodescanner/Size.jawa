record `com.journeyapps.barcodescanner.Size` @kind class @AccessFlag PUBLIC extends `java.lang.Comparable` @kind interface {
  `int` `com.journeyapps.barcodescanner.Size.height` @AccessFlag PUBLIC_FINAL;
  `int` `com.journeyapps.barcodescanner.Size.width` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`com.journeyapps.barcodescanner.Size` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lcom/journeyapps/barcodescanner/Size;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L29e850.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29e856.  v0.`com.journeyapps.barcodescanner.Size.width` @type ^`int` := v1;
  #L29e85a.  v0.`com.journeyapps.barcodescanner.Size.height` @type ^`int` := v2;
  #L29e85e.  return @kind void;
}
procedure `int` `compareTo`(`com.journeyapps.barcodescanner.Size` v2 @kind this, `com.journeyapps.barcodescanner.Size` v3 @kind object) @signature `Lcom/journeyapps/barcodescanner/Size;.compareTo:(Lcom/journeyapps/barcodescanner/Size;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L29e790.  v0:= v2.`com.journeyapps.barcodescanner.Size.height` @type ^`int`;
  #L29e794.  v1:= v2.`com.journeyapps.barcodescanner.Size.width` @type ^`int`;
  #L29e798.  v0:= v0 * v1 @kind int;
  #L29e79c.  v1:= v3.`com.journeyapps.barcodescanner.Size.height` @type ^`int`;
  #L29e7a0.  v3:= v3.`com.journeyapps.barcodescanner.Size.width` @type ^`int`;
  #L29e7a4.  v1:= v1 * v3 @kind int;
  #L29e7a8.  if v1 >= v0 then goto L29e7b0;
  #L29e7ac.  v3:= 1I;
  #L29e7ae.  return v3;
  #L29e7b0.  if v1 <= v0 then goto L29e7b8;
  #L29e7b4.  v3:= -1I;
  #L29e7b6.  return v3;
  #L29e7b8.  v3:= 0I;
  #L29e7ba.  return v3;
}
procedure `int` `compareTo`(`com.journeyapps.barcodescanner.Size` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/journeyapps/barcodescanner/Size;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L29e7cc.  v1:= (`com.journeyapps.barcodescanner.Size`) v1 @kind object;
  #L29e7d0.  call temp:= `compareTo`(v0, v1) @signature `Lcom/journeyapps/barcodescanner/Size;.compareTo:(Lcom/journeyapps/barcodescanner/Size;)I` @kind virtual;
  #L29e7d6.  v1:= temp;
  #L29e7d8.  return v1;
}
procedure `boolean` `equals`(`com.journeyapps.barcodescanner.Size` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/journeyapps/barcodescanner/Size;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L29e610.  v0:= 1I;
  #L29e612.  if v4 != v5 then goto L29e618;
  #L29e616.  return v0;
  #L29e618.  v1:= 0I;
  #L29e61a.  if v5 == 0 then goto L29e658;
  #L29e61e.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L29e624.  v2:= temp @kind object;
  #L29e626.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L29e62c.  v3:= temp @kind object;
  #L29e62e.  if v2 == v3 then goto L29e634;
  #L29e632.  goto L29e658;
  #L29e634.  v5:= (`com.journeyapps.barcodescanner.Size`) v5 @kind object;
  #L29e638.  v2:= v4.`com.journeyapps.barcodescanner.Size.width` @type ^`int`;
  #L29e63c.  v3:= v5.`com.journeyapps.barcodescanner.Size.width` @type ^`int`;
  #L29e640.  if v2 == v3 then goto L29e646;
  #L29e644.  return v1;
  #L29e646.  v2:= v4.`com.journeyapps.barcodescanner.Size.height` @type ^`int`;
  #L29e64a.  v5:= v5.`com.journeyapps.barcodescanner.Size.height` @type ^`int`;
  #L29e64e.  if v2 != v5 then goto L29e654;
  #L29e652.  goto L29e656;
  #L29e654.  v0:= 0I;
  #L29e656.  return v0;
  #L29e658.  return v1;
}
procedure `boolean` `fitsIn`(`com.journeyapps.barcodescanner.Size` v2 @kind this, `com.journeyapps.barcodescanner.Size` v3 @kind object) @signature `Lcom/journeyapps/barcodescanner/Size;.fitsIn:(Lcom/journeyapps/barcodescanner/Size;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L29e66c.  v0:= v2.`com.journeyapps.barcodescanner.Size.width` @type ^`int`;
  #L29e670.  v1:= v3.`com.journeyapps.barcodescanner.Size.width` @type ^`int`;
  #L29e674.  if v0 > v1 then goto L29e688;
  #L29e678.  v0:= v2.`com.journeyapps.barcodescanner.Size.height` @type ^`int`;
  #L29e67c.  v3:= v3.`com.journeyapps.barcodescanner.Size.height` @type ^`int`;
  #L29e680.  if v0 > v3 then goto L29e688;
  #L29e684.  v3:= 1I;
  #L29e686.  goto L29e68a;
  #L29e688.  v3:= 0I;
  #L29e68a.  return v3;
}
procedure `int` `hashCode`(`com.journeyapps.barcodescanner.Size` v2 @kind this) @signature `Lcom/journeyapps/barcodescanner/Size;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L29e7ec.  v0:= v2.`com.journeyapps.barcodescanner.Size.width` @type ^`int`;
  #L29e7f0.  v0:= v0 * 31;
  #L29e7f4.  v1:= v2.`com.journeyapps.barcodescanner.Size.height` @type ^`int`;
  #L29e7f8.  v0:= v0 + v1 @kind int;
  #L29e7fa.  return v0;
}
procedure `com.journeyapps.barcodescanner.Size` `rotate`(`com.journeyapps.barcodescanner.Size` v3 @kind this) @signature `Lcom/journeyapps/barcodescanner/Size;.rotate:()Lcom/journeyapps/barcodescanner/Size;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L29e69c.  v0:= new `com.journeyapps.barcodescanner.Size`;
  #L29e6a0.  v1:= v3.`com.journeyapps.barcodescanner.Size.height` @type ^`int`;
  #L29e6a4.  v2:= v3.`com.journeyapps.barcodescanner.Size.width` @type ^`int`;
  #L29e6a8.  call `<init>`(v0, v1, v2) @signature `Lcom/journeyapps/barcodescanner/Size;.<init>:(II)V` @kind direct;
  #L29e6ae.  return v0 @kind object;
}
procedure `com.journeyapps.barcodescanner.Size` `scale`(`com.journeyapps.barcodescanner.Size` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lcom/journeyapps/barcodescanner/Size;.scale:(II)Lcom/journeyapps/barcodescanner/Size;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L29e6c0.  v0:= new `com.journeyapps.barcodescanner.Size`;
  #L29e6c4.  v1:= v3.`com.journeyapps.barcodescanner.Size.width` @type ^`int`;
  #L29e6c8.  v1:= v1 * v4 @kind int;
  #L29e6cc.  v1:= v1 / v5 @kind int;
  #L29e6ce.  v2:= v3.`com.journeyapps.barcodescanner.Size.height` @type ^`int`;
  #L29e6d2.  v2:= v2 * v4 @kind int;
  #L29e6d6.  v2:= v2 / v5 @kind int;
  #L29e6d8.  call `<init>`(v0, v1, v2) @signature `Lcom/journeyapps/barcodescanner/Size;.<init>:(II)V` @kind direct;
  #L29e6de.  return v0 @kind object;
}
procedure `com.journeyapps.barcodescanner.Size` `scaleCrop`(`com.journeyapps.barcodescanner.Size` v5 @kind this, `com.journeyapps.barcodescanner.Size` v6 @kind object) @signature `Lcom/journeyapps/barcodescanner/Size;.scaleCrop:(Lcom/journeyapps/barcodescanner/Size;)Lcom/journeyapps/barcodescanner/Size;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L29e6f0.  v0:= v5.`com.journeyapps.barcodescanner.Size.width` @type ^`int`;
  #L29e6f4.  v1:= v6.`com.journeyapps.barcodescanner.Size.height` @type ^`int`;
  #L29e6f8.  v2:= v0 * v1 @kind int;
  #L29e6fc.  v6:= v6.`com.journeyapps.barcodescanner.Size.width` @type ^`int`;
  #L29e700.  v3:= v5.`com.journeyapps.barcodescanner.Size.height` @type ^`int`;
  #L29e704.  v4:= v6 * v3 @kind int;
  #L29e708.  if v2 > v4 then goto L29e71e;
  #L29e70c.  v1:= new `com.journeyapps.barcodescanner.Size`;
  #L29e710.  v3:= v3 * v6 @kind int;
  #L29e714.  v3:= v3 / v0 @kind int;
  #L29e716.  call `<init>`(v1, v6, v3) @signature `Lcom/journeyapps/barcodescanner/Size;.<init>:(II)V` @kind direct;
  #L29e71c.  return v1 @kind object;
  #L29e71e.  v6:= new `com.journeyapps.barcodescanner.Size`;
  #L29e722.  v0:= v0 * v1 @kind int;
  #L29e726.  v0:= v0 / v3 @kind int;
  #L29e728.  call `<init>`(v6, v0, v1) @signature `Lcom/journeyapps/barcodescanner/Size;.<init>:(II)V` @kind direct;
  #L29e72e.  return v6 @kind object;
}
procedure `com.journeyapps.barcodescanner.Size` `scaleFit`(`com.journeyapps.barcodescanner.Size` v5 @kind this, `com.journeyapps.barcodescanner.Size` v6 @kind object) @signature `Lcom/journeyapps/barcodescanner/Size;.scaleFit:(Lcom/journeyapps/barcodescanner/Size;)Lcom/journeyapps/barcodescanner/Size;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L29e740.  v0:= v5.`com.journeyapps.barcodescanner.Size.width` @type ^`int`;
  #L29e744.  v1:= v6.`com.journeyapps.barcodescanner.Size.height` @type ^`int`;
  #L29e748.  v2:= v0 * v1 @kind int;
  #L29e74c.  v6:= v6.`com.journeyapps.barcodescanner.Size.width` @type ^`int`;
  #L29e750.  v3:= v5.`com.journeyapps.barcodescanner.Size.height` @type ^`int`;
  #L29e754.  v4:= v6 * v3 @kind int;
  #L29e758.  if v2 < v4 then goto L29e76e;
  #L29e75c.  v1:= new `com.journeyapps.barcodescanner.Size`;
  #L29e760.  v3:= v3 * v6 @kind int;
  #L29e764.  v3:= v3 / v0 @kind int;
  #L29e766.  call `<init>`(v1, v6, v3) @signature `Lcom/journeyapps/barcodescanner/Size;.<init>:(II)V` @kind direct;
  #L29e76c.  return v1 @kind object;
  #L29e76e.  v6:= new `com.journeyapps.barcodescanner.Size`;
  #L29e772.  v0:= v0 * v1 @kind int;
  #L29e776.  v0:= v0 / v3 @kind int;
  #L29e778.  call `<init>`(v6, v0, v1) @signature `Lcom/journeyapps/barcodescanner/Size;.<init>:(II)V` @kind direct;
  #L29e77e.  return v6 @kind object;
}
procedure `java.lang.String` `toString`(`com.journeyapps.barcodescanner.Size` v2 @kind this) @signature `Lcom/journeyapps/barcodescanner/Size;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L29e80c.  v0:= new `java.lang.StringBuilder`;
  #L29e810.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29e816.  v1:= v2.`com.journeyapps.barcodescanner.Size.width` @type ^`int`;
  #L29e81a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e820.  v1:= "x" @kind object;
  #L29e824.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e82a.  v1:= v2.`com.journeyapps.barcodescanner.Size.height` @type ^`int`;
  #L29e82e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L29e834.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L29e83a.  v0:= temp @kind object;
  #L29e83c.  return v0 @kind object;
}
