record `com.journeyapps.barcodescanner.camera.CameraInstance$1` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `boolean` `com.journeyapps.barcodescanner.camera.CameraInstance$1.a` @AccessFlag FINAL_SYNTHETIC;
  `com.journeyapps.barcodescanner.camera.CameraInstance` `com.journeyapps.barcodescanner.camera.CameraInstance$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.journeyapps.barcodescanner.camera.CameraInstance$1` v0 @kind this, `com.journeyapps.barcodescanner.camera.CameraInstance` v1 @kind object, `boolean` v2 ) @signature `Lcom/journeyapps/barcodescanner/camera/CameraInstance$1;.<init>:(Lcom/journeyapps/barcodescanner/camera/CameraInstance;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L29f5a4.  v0.`com.journeyapps.barcodescanner.camera.CameraInstance$1.b` @type ^`com.journeyapps.barcodescanner.camera.CameraInstance` := v1 @kind object;
  #L29f5a8.  v0.`com.journeyapps.barcodescanner.camera.CameraInstance$1.a` @type ^`boolean` := v2 @kind boolean;
  #L29f5ac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29f5b2.  return @kind void;
}
procedure `void` `run`(`com.journeyapps.barcodescanner.camera.CameraInstance$1` v2 @kind this) @signature `Lcom/journeyapps/barcodescanner/camera/CameraInstance$1;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L29f5c4.  v0:= v2.`com.journeyapps.barcodescanner.camera.CameraInstance$1.b` @type ^`com.journeyapps.barcodescanner.camera.CameraInstance` @kind object;
  #L29f5c8.  call temp:= `a`(v0) @signature `Lcom/journeyapps/barcodescanner/camera/CameraInstance;.a:(Lcom/journeyapps/barcodescanner/camera/CameraInstance;)Lcom/journeyapps/barcodescanner/camera/CameraManager;` @kind static;
  #L29f5ce.  v0:= temp @kind object;
  #L29f5d0.  v1:= v2.`com.journeyapps.barcodescanner.camera.CameraInstance$1.a` @type ^`boolean` @kind boolean;
  #L29f5d4.  call `setTorch`(v0, v1) @signature `Lcom/journeyapps/barcodescanner/camera/CameraManager;.setTorch:(Z)V` @kind virtual;
  #L29f5da.  return @kind void;
}
