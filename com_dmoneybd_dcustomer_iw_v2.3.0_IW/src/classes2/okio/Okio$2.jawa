record `okio.Okio$2` @kind class @AccessFlag FINAL extends `okio.Source` @kind interface {
  `okio.Timeout` `okio.Okio$2.a` @AccessFlag FINAL_SYNTHETIC;
  `java.io.InputStream` `okio.Okio$2.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.Okio$2` v0 @kind this, `okio.Timeout` v1 @kind object, `java.io.InputStream` v2 @kind object) @signature `Lokio/Okio$2;.<init>:(Lokio/Timeout;Ljava/io/InputStream;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2e3510.  v0.`okio.Okio$2.a` @type ^`okio.Timeout` := v1 @kind object;
  #L2e3514.  v0.`okio.Okio$2.b` @type ^`java.io.InputStream` := v2 @kind object;
  #L2e3518.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e351e.  return @kind void;
}
procedure `void` `close`(`okio.Okio$2` v1 @kind this) @signature `Lokio/Okio$2;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e3530.  v0:= v1.`okio.Okio$2.b` @type ^`java.io.InputStream` @kind object;
  #L2e3534.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L2e353a.  return @kind void;
}
procedure `long` `read`(`okio.Okio$2` v3 @kind this, `okio.Buffer` v4 @kind object, `long` v5 ) @signature `Lokio/Okio$2;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2e3418.  v0:= 0L;
  #L2e341c.  v2:= lcmp(v5, v0);
  #L2e3420.  if v2 < 0 then goto L2e34aa;
  #L2e3424.  v2:= lcmp(v5, v0);
  #L2e3428.  if v2 != 0 then goto L2e342e;
  #L2e342c.  return v0 @kind wide;
  #L2e342e.  v0:= v3.`okio.Okio$2.a` @type ^`okio.Timeout` @kind object;
  #L2e3432.  call `throwIfReached`(v0) @signature `Lokio/Timeout;.throwIfReached:()V` @kind virtual;
  #L2e3438.  v0:= 1I;
  #L2e343a.  call temp:= `c`(v4, v0) @signature `Lokio/Buffer;.c:(I)Lokio/Segment;` @kind virtual;
  #L2e3440.  v0:= temp @kind object;
  #L2e3442.  v1:= v0.`okio.Segment.c` @type ^`int`;
  #L2e3446.  v1:= v1 - 8192;
  #L2e344a.  v1:= (`long`) v1 @kind i2l;
  #L2e344c.  call temp:= `min`(v5, v1) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L2e3452.  v5:= temp @kind wide;
  #L2e3454.  v6:= (`int`) v5 @kind l2i;
  #L2e3456.  v5:= v3.`okio.Okio$2.b` @type ^`java.io.InputStream` @kind object;
  #L2e345a.  v1:= v0.`okio.Segment.a` @type ^`byte`[] @kind object;
  #L2e345e.  v2:= v0.`okio.Segment.c` @type ^`int`;
  #L2e3462.  call temp:= `read`(v5, v1, v2, v6) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L2e3468.  v5:= temp;
  #L2e346a.  v6:= -1I;
  #L2e346c.  if v5 != v6 then goto L2e3476;
  #L2e3470.  v4:= -1L;
  #L2e3474.  return v4 @kind wide;
  #L2e3476.  v6:= v0.`okio.Segment.c` @type ^`int`;
  #L2e347a.  v6:= v6 + v5 @kind int;
  #L2e347c.  v0.`okio.Segment.c` @type ^`int` := v6;
  #L2e3480.  v0:= v4.`okio.Buffer.b` @type ^`long` @kind wide;
  #L2e3484.  v5:= (`long`) v5 @kind i2l;
  #L2e3486.  v0:= v0 + v5 @kind long;
  #L2e3488.  v4.`okio.Buffer.b` @type ^`long` := v0 @kind wide;
  #L2e348c.  return v5 @kind wide;
  #L2e348e.  v4:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L2e3490.  call temp:= `a`(v4) @signature `Lokio/Okio;.a:(Ljava/lang/AssertionError;)Z` @kind static;
  #L2e3496.  v5:= temp;
  #L2e3498.  if v5 == 0 then goto L2e34a8;
  #L2e349c.  v5:= new `java.io.IOException`;
  #L2e34a0.  call `<init>`(v5, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2e34a6.  throw v5;
  #L2e34a8.  throw v4;
  #L2e34aa.  v4:= new `java.lang.IllegalArgumentException`;
  #L2e34ae.  v0:= new `java.lang.StringBuilder`;
  #L2e34b2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2e34b8.  v1:= "byteCount < 0: " @kind object;
  #L2e34bc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e34c2.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e34c8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e34ce.  v5:= temp @kind object;
  #L2e34d0.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e34d6.  throw v4;
  catch `java.lang.AssertionError` @[L2e342e..L2e348c] goto L2e348e;
}
procedure `okio.Timeout` `timeout`(`okio.Okio$2` v1 @kind this) @signature `Lokio/Okio$2;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e34f8.  v0:= v1.`okio.Okio$2.a` @type ^`okio.Timeout` @kind object;
  #L2e34fc.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.Okio$2` v2 @kind this) @signature `Lokio/Okio$2;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2e33d4.  v0:= new `java.lang.StringBuilder`;
  #L2e33d8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2e33de.  v1:= "source(" @kind object;
  #L2e33e2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e33e8.  v1:= v2.`okio.Okio$2.b` @type ^`java.io.InputStream` @kind object;
  #L2e33ec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e33f2.  v1:= ")" @kind object;
  #L2e33f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e33fc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e3402.  v0:= temp @kind object;
  #L2e3404.  return v0 @kind object;
}
