record `okio.Okio` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.util.logging.Logger` `@@okio.Okio.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/Okio;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2e3928.  v0:= constclass @type ^`okio.Okio` @kind object;
  #L2e392c.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2e3932.  v0:= temp @kind object;
  #L2e3934.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L2e393a.  v0:= temp @kind object;
  #L2e393c.  `@@okio.Okio.a` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L2e3940.  return @kind void;
}
procedure `void` `<init>`(`okio.Okio` v0 @kind this) @signature `Lokio/Okio;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2e3954.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e395a.  return @kind void;
}
procedure `boolean` `a`(`java.lang.AssertionError` v1 @kind object) @signature `Lokio/Okio;.a:(Ljava/lang/AssertionError;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L2e35bc.  call temp:= `getCause`(v1) @signature `Ljava/lang/AssertionError;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L2e35c2.  v0:= temp @kind object;
  #L2e35c4.  if v0 == 0 then goto L2e35f0;
  #L2e35c8.  call temp:= `getMessage`(v1) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2e35ce.  v0:= temp @kind object;
  #L2e35d0.  if v0 == 0 then goto L2e35f0;
  #L2e35d4.  call temp:= `getMessage`(v1) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2e35da.  v1:= temp @kind object;
  #L2e35dc.  v0:= "getsockname failed" @kind object;
  #L2e35e0.  call temp:= `contains`(v1, v0) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L2e35e6.  v1:= temp;
  #L2e35e8.  if v1 == 0 then goto L2e35f0;
  #L2e35ec.  v1:= 1I;
  #L2e35ee.  goto L2e35f2;
  #L2e35f0.  v1:= 0I;
  #L2e35f2.  return v1;
}
procedure `okio.Sink` `appendingSink`(`java.io.File` v2 @kind object) @signature `Lokio/Okio;.appendingSink:(Ljava/io/File;)Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2e3658.  if v2 == 0 then goto L2e3672;
  #L2e365c.  v0:= new `java.io.FileOutputStream`;
  #L2e3660.  v1:= 1I;
  #L2e3662.  call `<init>`(v0, v2, v1) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;Z)V` @kind direct;
  #L2e3668.  call temp:= `sink`(v0) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;)Lokio/Sink;` @kind static;
  #L2e366e.  v2:= temp @kind object;
  #L2e3670.  return v2 @kind object;
  #L2e3672.  v2:= new `java.lang.IllegalArgumentException`;
  #L2e3676.  v0:= "file == null" @kind object;
  #L2e367a.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e3680.  throw v2;
}
procedure `okio.Sink` `blackhole`() @signature `Lokio/Okio;.blackhole:()Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2e3694.  v0:= new `okio.Okio$3`;
  #L2e3698.  call `<init>`(v0) @signature `Lokio/Okio$3;.<init>:()V` @kind direct;
  #L2e369e.  return v0 @kind object;
}
procedure `okio.BufferedSink` `buffer`(`okio.Sink` v1 @kind object) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2e3620.  v0:= new `okio.RealBufferedSink`;
  #L2e3624.  call `<init>`(v0, v1) @signature `Lokio/RealBufferedSink;.<init>:(Lokio/Sink;)V` @kind direct;
  #L2e362a.  return v0 @kind object;
}
procedure `okio.BufferedSource` `buffer`(`okio.Source` v1 @kind object) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2e363c.  v0:= new `okio.RealBufferedSource`;
  #L2e3640.  call `<init>`(v0, v1) @signature `Lokio/RealBufferedSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L2e3646.  return v0 @kind object;
}
procedure `okio.Sink` `sink`(`java.io.File` v1 @kind object) @signature `Lokio/Okio;.sink:(Ljava/io/File;)Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2e36b0.  if v1 == 0 then goto L2e36c8;
  #L2e36b4.  v0:= new `java.io.FileOutputStream`;
  #L2e36b8.  call `<init>`(v0, v1) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L2e36be.  call temp:= `sink`(v0) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;)Lokio/Sink;` @kind static;
  #L2e36c4.  v1:= temp @kind object;
  #L2e36c6.  return v1 @kind object;
  #L2e36c8.  v1:= new `java.lang.IllegalArgumentException`;
  #L2e36cc.  v0:= "file == null" @kind object;
  #L2e36d0.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e36d6.  throw v1;
}
procedure `okio.Sink` `sink`(`java.io.OutputStream` v1 @kind object) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;)Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2e36e8.  v0:= new `okio.Timeout`;
  #L2e36ec.  call `<init>`(v0) @signature `Lokio/Timeout;.<init>:()V` @kind direct;
  #L2e36f2.  call temp:= `sink`(v1, v0) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;Lokio/Timeout;)Lokio/Sink;` @kind static;
  #L2e36f8.  v1:= temp @kind object;
  #L2e36fa.  return v1 @kind object;
}
procedure `okio.Sink` `sink`(`java.io.OutputStream` v1 @kind object, `okio.Timeout` v2 @kind object) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;Lokio/Timeout;)Lokio/Sink;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2e370c.  if v1 == 0 then goto L2e3730;
  #L2e3710.  if v2 == 0 then goto L2e3720;
  #L2e3714.  v0:= new `okio.Okio$1`;
  #L2e3718.  call `<init>`(v0, v2, v1) @signature `Lokio/Okio$1;.<init>:(Lokio/Timeout;Ljava/io/OutputStream;)V` @kind direct;
  #L2e371e.  return v0 @kind object;
  #L2e3720.  v1:= new `java.lang.IllegalArgumentException`;
  #L2e3724.  v2:= "timeout == null" @kind object;
  #L2e3728.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e372e.  throw v1;
  #L2e3730.  v1:= new `java.lang.IllegalArgumentException`;
  #L2e3734.  v2:= "out == null" @kind object;
  #L2e3738.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e373e.  throw v1;
}
procedure `okio.Sink` `sink`(`java.net.Socket` v1 @kind object) @signature `Lokio/Okio;.sink:(Ljava/net/Socket;)Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2e3750.  if v1 == 0 then goto L2e3792;
  #L2e3754.  call temp:= `getOutputStream`(v1) @signature `Ljava/net/Socket;.getOutputStream:()Ljava/io/OutputStream;` @kind virtual;
  #L2e375a.  v0:= temp @kind object;
  #L2e375c.  if v0 == 0 then goto L2e3782;
  #L2e3760.  call temp:= `timeout`(v1) @signature `Lokio/Okio;.timeout:(Ljava/net/Socket;)Lokio/AsyncTimeout;` @kind static;
  #L2e3766.  v0:= temp @kind object;
  #L2e3768.  call temp:= `getOutputStream`(v1) @signature `Ljava/net/Socket;.getOutputStream:()Ljava/io/OutputStream;` @kind virtual;
  #L2e376e.  v1:= temp @kind object;
  #L2e3770.  call temp:= `sink`(v1, v0) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;Lokio/Timeout;)Lokio/Sink;` @kind static;
  #L2e3776.  v1:= temp @kind object;
  #L2e3778.  call temp:= `sink`(v0, v1) @signature `Lokio/AsyncTimeout;.sink:(Lokio/Sink;)Lokio/Sink;` @kind virtual;
  #L2e377e.  v1:= temp @kind object;
  #L2e3780.  return v1 @kind object;
  #L2e3782.  v1:= new `java.io.IOException`;
  #L2e3786.  v0:= "socket's output stream == null" @kind object;
  #L2e378a.  call `<init>`(v1, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e3790.  throw v1;
  #L2e3792.  v1:= new `java.lang.IllegalArgumentException`;
  #L2e3796.  v0:= "socket == null" @kind object;
  #L2e379a.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e37a0.  throw v1;
}
procedure `okio.Sink` `sink`(`java.nio.file.Path` v0 @kind object, `java.nio.file.OpenOption`[] v1 @kind object) @signature `Lokio/Okio;.sink:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2e37b4.  if v0 == 0 then goto L2e37ca;
  #L2e37b8.  call temp:= `newOutputStream`(v0, v1) @signature `Ljava/nio/file/Files;.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;` @kind static;
  #L2e37be.  v0:= temp @kind object;
  #L2e37c0.  call temp:= `sink`(v0) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;)Lokio/Sink;` @kind static;
  #L2e37c6.  v0:= temp @kind object;
  #L2e37c8.  return v0 @kind object;
  #L2e37ca.  v0:= new `java.lang.IllegalArgumentException`;
  #L2e37ce.  v1:= "path == null" @kind object;
  #L2e37d2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e37d8.  throw v0;
}
procedure `okio.Source` `source`(`java.io.File` v1 @kind object) @signature `Lokio/Okio;.source:(Ljava/io/File;)Lokio/Source;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2e37ec.  if v1 == 0 then goto L2e3804;
  #L2e37f0.  v0:= new `java.io.FileInputStream`;
  #L2e37f4.  call `<init>`(v0, v1) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L2e37fa.  call temp:= `source`(v0) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;)Lokio/Source;` @kind static;
  #L2e3800.  v1:= temp @kind object;
  #L2e3802.  return v1 @kind object;
  #L2e3804.  v1:= new `java.lang.IllegalArgumentException`;
  #L2e3808.  v0:= "file == null" @kind object;
  #L2e380c.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e3812.  throw v1;
}
procedure `okio.Source` `source`(`java.io.InputStream` v1 @kind object) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;)Lokio/Source;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2e3824.  v0:= new `okio.Timeout`;
  #L2e3828.  call `<init>`(v0) @signature `Lokio/Timeout;.<init>:()V` @kind direct;
  #L2e382e.  call temp:= `source`(v1, v0) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;Lokio/Timeout;)Lokio/Source;` @kind static;
  #L2e3834.  v1:= temp @kind object;
  #L2e3836.  return v1 @kind object;
}
procedure `okio.Source` `source`(`java.io.InputStream` v1 @kind object, `okio.Timeout` v2 @kind object) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;Lokio/Timeout;)Lokio/Source;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2e3848.  if v1 == 0 then goto L2e386c;
  #L2e384c.  if v2 == 0 then goto L2e385c;
  #L2e3850.  v0:= new `okio.Okio$2`;
  #L2e3854.  call `<init>`(v0, v2, v1) @signature `Lokio/Okio$2;.<init>:(Lokio/Timeout;Ljava/io/InputStream;)V` @kind direct;
  #L2e385a.  return v0 @kind object;
  #L2e385c.  v1:= new `java.lang.IllegalArgumentException`;
  #L2e3860.  v2:= "timeout == null" @kind object;
  #L2e3864.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e386a.  throw v1;
  #L2e386c.  v1:= new `java.lang.IllegalArgumentException`;
  #L2e3870.  v2:= "in == null" @kind object;
  #L2e3874.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e387a.  throw v1;
}
procedure `okio.Source` `source`(`java.net.Socket` v1 @kind object) @signature `Lokio/Okio;.source:(Ljava/net/Socket;)Lokio/Source;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2e388c.  if v1 == 0 then goto L2e38ce;
  #L2e3890.  call temp:= `getInputStream`(v1) @signature `Ljava/net/Socket;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L2e3896.  v0:= temp @kind object;
  #L2e3898.  if v0 == 0 then goto L2e38be;
  #L2e389c.  call temp:= `timeout`(v1) @signature `Lokio/Okio;.timeout:(Ljava/net/Socket;)Lokio/AsyncTimeout;` @kind static;
  #L2e38a2.  v0:= temp @kind object;
  #L2e38a4.  call temp:= `getInputStream`(v1) @signature `Ljava/net/Socket;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L2e38aa.  v1:= temp @kind object;
  #L2e38ac.  call temp:= `source`(v1, v0) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;Lokio/Timeout;)Lokio/Source;` @kind static;
  #L2e38b2.  v1:= temp @kind object;
  #L2e38b4.  call temp:= `source`(v0, v1) @signature `Lokio/AsyncTimeout;.source:(Lokio/Source;)Lokio/Source;` @kind virtual;
  #L2e38ba.  v1:= temp @kind object;
  #L2e38bc.  return v1 @kind object;
  #L2e38be.  v1:= new `java.io.IOException`;
  #L2e38c2.  v0:= "socket's input stream == null" @kind object;
  #L2e38c6.  call `<init>`(v1, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e38cc.  throw v1;
  #L2e38ce.  v1:= new `java.lang.IllegalArgumentException`;
  #L2e38d2.  v0:= "socket == null" @kind object;
  #L2e38d6.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e38dc.  throw v1;
}
procedure `okio.Source` `source`(`java.nio.file.Path` v0 @kind object, `java.nio.file.OpenOption`[] v1 @kind object) @signature `Lokio/Okio;.source:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Lokio/Source;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2e38f0.  if v0 == 0 then goto L2e3906;
  #L2e38f4.  call temp:= `newInputStream`(v0, v1) @signature `Ljava/nio/file/Files;.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;` @kind static;
  #L2e38fa.  v0:= temp @kind object;
  #L2e38fc.  call temp:= `source`(v0) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;)Lokio/Source;` @kind static;
  #L2e3902.  v0:= temp @kind object;
  #L2e3904.  return v0 @kind object;
  #L2e3906.  v0:= new `java.lang.IllegalArgumentException`;
  #L2e390a.  v1:= "path == null" @kind object;
  #L2e390e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e3914.  throw v0;
}
procedure `okio.AsyncTimeout` `timeout`(`java.net.Socket` v1 @kind object) @signature `Lokio/Okio;.timeout:(Ljava/net/Socket;)Lokio/AsyncTimeout;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2e3604.  v0:= new `okio.Okio$4`;
  #L2e3608.  call `<init>`(v0, v1) @signature `Lokio/Okio$4;.<init>:(Ljava/net/Socket;)V` @kind direct;
  #L2e360e.  return v0 @kind object;
}
