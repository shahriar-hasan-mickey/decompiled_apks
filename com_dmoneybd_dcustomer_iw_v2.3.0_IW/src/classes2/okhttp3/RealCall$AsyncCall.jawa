record `okhttp3.RealCall$AsyncCall` @kind class @AccessFlag FINAL extends `okhttp3.internal.NamedRunnable` @kind class {
  `okhttp3.RealCall` `okhttp3.RealCall$AsyncCall.a` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.Callback` `okhttp3.RealCall$AsyncCall.responseCallback` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<clinit>`() @signature `Lokhttp3/RealCall$AsyncCall;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2d14d8.  v0:= constclass @type ^`okhttp3.RealCall` @kind object;
  #L2d14dc.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.RealCall$AsyncCall` v2 @kind this, `okhttp3.RealCall` v3 @kind object, `okhttp3.Callback` v4 @kind object) @signature `Lokhttp3/RealCall$AsyncCall;.<init>:(Lokhttp3/RealCall;Lokhttp3/Callback;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2d14f0.  v2.`okhttp3.RealCall$AsyncCall.a` @type ^`okhttp3.RealCall` := v3 @kind object;
  #L2d14f4.  v0:= 1I;
  #L2d14f6.  v0:= new `java.lang.Object`[v0];
  #L2d14fa.  call temp:= `d`(v3) @signature `Lokhttp3/RealCall;.d:()Ljava/lang/String;` @kind virtual;
  #L2d1500.  v3:= temp @kind object;
  #L2d1502.  v1:= 0I;
  #L2d1504.  v0[v1]:= v3 @kind object;
  #L2d1508.  v3:= "OkHttp %s" @kind object;
  #L2d150c.  call `<init>`(v2, v3, v0) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L2d1512.  v2.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` := v4 @kind object;
  #L2d1516.  return @kind void;
}
procedure `void` `a`(`okhttp3.RealCall$AsyncCall` v2 @kind this, `java.util.concurrent.ExecutorService` v3 @kind object) @signature `Lokhttp3/RealCall$AsyncCall;.a:(Ljava/util/concurrent/ExecutorService;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2d1678.  call `execute`(v3, v2) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L2d167e.  goto L2d16d4;
  #L2d1680.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2d1682.  goto L2d16d6;
  #L2d1684.  v3:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L2d1686.  v0:= new `java.io.InterruptedIOException`;
  #L2d168a.  v1:= "executor rejected" @kind object;
  #L2d168e.  call `<init>`(v0, v1) @signature `Ljava/io/InterruptedIOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d1694.  call temp:= `initCause`(v0, v3) @signature `Ljava/io/InterruptedIOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L2d169a.  v3:= v2.`okhttp3.RealCall$AsyncCall.a` @type ^`okhttp3.RealCall` @kind object;
  #L2d169e.  call temp:= `a`(v3) @signature `Lokhttp3/RealCall;.a:(Lokhttp3/RealCall;)Lokhttp3/EventListener;` @kind static;
  #L2d16a4.  v3:= temp @kind object;
  #L2d16a6.  v1:= v2.`okhttp3.RealCall$AsyncCall.a` @type ^`okhttp3.RealCall` @kind object;
  #L2d16aa.  call `callFailed`(v3, v1, v0) @signature `Lokhttp3/EventListener;.callFailed:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind virtual;
  #L2d16b0.  v3:= v2.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` @kind object;
  #L2d16b4.  v1:= v2.`okhttp3.RealCall$AsyncCall.a` @type ^`okhttp3.RealCall` @kind object;
  #L2d16b8.  call `onFailure`(v3, v1, v0) @signature `Lokhttp3/Callback;.onFailure:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind interface;
  #L2d16be.  v3:= v2.`okhttp3.RealCall$AsyncCall.a` @type ^`okhttp3.RealCall` @kind object;
  #L2d16c2.  v3:= v3.`okhttp3.RealCall.a` @type ^`okhttp3.OkHttpClient` @kind object;
  #L2d16c6.  call temp:= `dispatcher`(v3) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L2d16cc.  v3:= temp @kind object;
  #L2d16ce.  call `c`(v3, v2) @signature `Lokhttp3/Dispatcher;.c:(Lokhttp3/RealCall$AsyncCall;)V` @kind virtual;
  #L2d16d4.  return @kind void;
  #L2d16d6.  v0:= v2.`okhttp3.RealCall$AsyncCall.a` @type ^`okhttp3.RealCall` @kind object;
  #L2d16da.  v0:= v0.`okhttp3.RealCall.a` @type ^`okhttp3.OkHttpClient` @kind object;
  #L2d16de.  call temp:= `dispatcher`(v0) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L2d16e4.  v0:= temp @kind object;
  #L2d16e6.  call `c`(v0, v2) @signature `Lokhttp3/Dispatcher;.c:(Lokhttp3/RealCall$AsyncCall;)V` @kind virtual;
  #L2d16ec.  throw v3;
  catch `java.util.concurrent.RejectedExecutionException` @[L2d1678..L2d167e] goto L2d1684;
  catch `java.lang.Throwable` @[L2d1678..L2d167e] goto L2d1680;
  catch `java.lang.Throwable` @[L2d1686..L2d16be] goto L2d1680;
}
procedure `okhttp3.RealCall` `b`(`okhttp3.RealCall$AsyncCall` v1 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.b:()Lokhttp3/RealCall;` @AccessFlag  {
    temp;
    v0;

  #L2d14c0.  v0:= v1.`okhttp3.RealCall$AsyncCall.a` @type ^`okhttp3.RealCall` @kind object;
  #L2d14c4.  return v0 @kind object;
}
procedure `java.lang.String` `c`(`okhttp3.RealCall$AsyncCall` v1 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.c:()Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;

  #L2d1494.  v0:= v1.`okhttp3.RealCall$AsyncCall.a` @type ^`okhttp3.RealCall` @kind object;
  #L2d1498.  v0:= v0.`okhttp3.RealCall.d` @type ^`okhttp3.Request` @kind object;
  #L2d149c.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L2d14a2.  v0:= temp @kind object;
  #L2d14a4.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L2d14aa.  v0:= temp @kind object;
  #L2d14ac.  return v0 @kind object;
}
procedure `void` `execute`(`okhttp3.RealCall$AsyncCall` v5 @kind this) @signature `Lokhttp3/RealCall$AsyncCall;.execute:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2d1528.  v0:= v5.`okhttp3.RealCall$AsyncCall.a` @type ^`okhttp3.RealCall` @kind object;
  #L2d152c.  v0:= v0.`okhttp3.RealCall.c` @type ^`okio.AsyncTimeout` @kind object;
  #L2d1530.  call `enter`(v0) @signature `Lokio/AsyncTimeout;.enter:()V` @kind virtual;
  #L2d1536.  v0:= 1I;
  #L2d1538.  v1:= 0I;
  #L2d153a.  v2:= v5.`okhttp3.RealCall$AsyncCall.a` @type ^`okhttp3.RealCall` @kind object;
  #L2d153e.  call temp:= `b`(v2) @signature `Lokhttp3/RealCall;.b:()Lokhttp3/Response;` @kind virtual;
  #L2d1544.  v2:= temp @kind object;
  #L2d1546.  v3:= v5.`okhttp3.RealCall$AsyncCall.a` @type ^`okhttp3.RealCall` @kind object;
  #L2d154a.  v3:= v3.`okhttp3.RealCall.b` @type ^`okhttp3.internal.http.RetryAndFollowUpInterceptor` @kind object;
  #L2d154e.  call temp:= `isCanceled`(v3) @signature `Lokhttp3/internal/http/RetryAndFollowUpInterceptor;.isCanceled:()Z` @kind virtual;
  #L2d1554.  v1:= temp;
  #L2d1556.  if v1 == 0 then goto L2d1578;
  #L2d155a.  v1:= v5.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` @kind object;
  #L2d155e.  v2:= v5.`okhttp3.RealCall$AsyncCall.a` @type ^`okhttp3.RealCall` @kind object;
  #L2d1562.  v3:= new `java.io.IOException`;
  #L2d1566.  v4:= "Canceled" @kind object;
  #L2d156a.  call `<init>`(v3, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d1570.  call `onFailure`(v1, v2, v3) @signature `Lokhttp3/Callback;.onFailure:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind interface;
  #L2d1576.  goto L2d1586;
  #L2d1578.  v1:= v5.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` @kind object;
  #L2d157c.  v3:= v5.`okhttp3.RealCall$AsyncCall.a` @type ^`okhttp3.RealCall` @kind object;
  #L2d1580.  call `onResponse`(v1, v3, v2) @signature `Lokhttp3/Callback;.onResponse:(Lokhttp3/Call;Lokhttp3/Response;)V` @kind interface;
  #L2d1586.  v0:= v5.`okhttp3.RealCall$AsyncCall.a` @type ^`okhttp3.RealCall` @kind object;
  #L2d158a.  v0:= v0.`okhttp3.RealCall.a` @type ^`okhttp3.OkHttpClient` @kind object;
  #L2d158e.  call temp:= `dispatcher`(v0) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L2d1594.  v0:= temp @kind object;
  #L2d1596.  call `c`(v0, v5) @signature `Lokhttp3/Dispatcher;.c:(Lokhttp3/RealCall$AsyncCall;)V` @kind virtual;
  #L2d159c.  goto L2d1622;
  #L2d159e.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L2d15a0.  goto L2d15ac;
  #L2d15a2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2d15a4.  goto L2d1624;
  #L2d15a6.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L2d15a8.  v1:= v0 @kind object;
  #L2d15aa.  v0:= 0I;
  #L2d15ac.  v2:= v5.`okhttp3.RealCall$AsyncCall.a` @type ^`okhttp3.RealCall` @kind object;
  #L2d15b0.  call temp:= `f`(v2, v1) @signature `Lokhttp3/RealCall;.f:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L2d15b6.  v1:= temp @kind object;
  #L2d15b8.  if v0 == 0 then goto L2d15fc;
  #L2d15bc.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L2d15c2.  v0:= temp @kind object;
  #L2d15c4.  v2:= 4I;
  #L2d15c6.  v3:= new `java.lang.StringBuilder`;
  #L2d15ca.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d15d0.  v4:= "Callback failure for " @kind object;
  #L2d15d4.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d15da.  v4:= v5.`okhttp3.RealCall$AsyncCall.a` @type ^`okhttp3.RealCall` @kind object;
  #L2d15de.  call temp:= `g`(v4) @signature `Lokhttp3/RealCall;.g:()Ljava/lang/String;` @kind virtual;
  #L2d15e4.  v4:= temp @kind object;
  #L2d15e6.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d15ec.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d15f2.  v3:= temp @kind object;
  #L2d15f4.  call `log`(v0, v2, v3, v1) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L2d15fa.  goto L2d1586;
  #L2d15fc.  v0:= v5.`okhttp3.RealCall$AsyncCall.a` @type ^`okhttp3.RealCall` @kind object;
  #L2d1600.  call temp:= `a`(v0) @signature `Lokhttp3/RealCall;.a:(Lokhttp3/RealCall;)Lokhttp3/EventListener;` @kind static;
  #L2d1606.  v0:= temp @kind object;
  #L2d1608.  v2:= v5.`okhttp3.RealCall$AsyncCall.a` @type ^`okhttp3.RealCall` @kind object;
  #L2d160c.  call `callFailed`(v0, v2, v1) @signature `Lokhttp3/EventListener;.callFailed:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind virtual;
  #L2d1612.  v0:= v5.`okhttp3.RealCall$AsyncCall.responseCallback` @type ^`okhttp3.Callback` @kind object;
  #L2d1616.  v2:= v5.`okhttp3.RealCall$AsyncCall.a` @type ^`okhttp3.RealCall` @kind object;
  #L2d161a.  call `onFailure`(v0, v2, v1) @signature `Lokhttp3/Callback;.onFailure:(Lokhttp3/Call;Ljava/io/IOException;)V` @kind interface;
  #L2d1620.  goto L2d1586;
  #L2d1622.  return @kind void;
  #L2d1624.  v1:= v5.`okhttp3.RealCall$AsyncCall.a` @type ^`okhttp3.RealCall` @kind object;
  #L2d1628.  v1:= v1.`okhttp3.RealCall.a` @type ^`okhttp3.OkHttpClient` @kind object;
  #L2d162c.  call temp:= `dispatcher`(v1) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L2d1632.  v1:= temp @kind object;
  #L2d1634.  call `c`(v1, v5) @signature `Lokhttp3/Dispatcher;.c:(Lokhttp3/RealCall$AsyncCall;)V` @kind virtual;
  #L2d163a.  goto L2d163e;
  #L2d163c.  throw v0;
  #L2d163e.  goto L2d163c;
  catch `java.io.IOException` @[L2d153a..L2d1556] goto L2d15a6;
  catch `java.lang.Throwable` @[L2d153a..L2d1556] goto L2d15a2;
  catch `java.io.IOException` @[L2d155a..L2d1586] goto L2d159e;
  catch `java.lang.Throwable` @[L2d155a..L2d1586] goto L2d15a2;
  catch `java.lang.Throwable` @[L2d15ac..L2d1620] goto L2d15a2;
}
