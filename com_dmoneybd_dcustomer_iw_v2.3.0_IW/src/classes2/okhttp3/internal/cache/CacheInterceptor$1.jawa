record `okhttp3.internal.cache.CacheInterceptor$1` @kind class @AccessFlag  extends `okio.Source` @kind interface {
  `boolean` `okhttp3.internal.cache.CacheInterceptor$1.a` @AccessFlag ;
  `okio.BufferedSource` `okhttp3.internal.cache.CacheInterceptor$1.b` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.internal.cache.CacheRequest` `okhttp3.internal.cache.CacheInterceptor$1.c` @AccessFlag FINAL_SYNTHETIC;
  `okio.BufferedSink` `okhttp3.internal.cache.CacheInterceptor$1.d` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.internal.cache.CacheInterceptor` `okhttp3.internal.cache.CacheInterceptor$1.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.cache.CacheInterceptor$1` v0 @kind this, `okhttp3.internal.cache.CacheInterceptor` v1 @kind object, `okio.BufferedSource` v2 @kind object, `okhttp3.internal.cache.CacheRequest` v3 @kind object, `okio.BufferedSink` v4 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor$1;.<init>:(Lokhttp3/internal/cache/CacheInterceptor;Lokio/BufferedSource;Lokhttp3/internal/cache/CacheRequest;Lokio/BufferedSink;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2d1bd0.  v0.`okhttp3.internal.cache.CacheInterceptor$1.e` @type ^`okhttp3.internal.cache.CacheInterceptor` := v1 @kind object;
  #L2d1bd4.  v0.`okhttp3.internal.cache.CacheInterceptor$1.b` @type ^`okio.BufferedSource` := v2 @kind object;
  #L2d1bd8.  v0.`okhttp3.internal.cache.CacheInterceptor$1.c` @type ^`okhttp3.internal.cache.CacheRequest` := v3 @kind object;
  #L2d1bdc.  v0.`okhttp3.internal.cache.CacheInterceptor$1.d` @type ^`okio.BufferedSink` := v4 @kind object;
  #L2d1be0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d1be6.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.cache.CacheInterceptor$1` v2 @kind this) @signature `Lokhttp3/internal/cache/CacheInterceptor$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2d1bf8.  v0:= v2.`okhttp3.internal.cache.CacheInterceptor$1.a` @type ^`boolean` @kind boolean;
  #L2d1bfc.  if v0 != 0 then goto L2d1c24;
  #L2d1c00.  v0:= 100I;
  #L2d1c04.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2d1c08.  call temp:= `discard`(v2, v0, v1) @signature `Lokhttp3/internal/Util;.discard:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L2d1c0e.  v0:= temp;
  #L2d1c10.  if v0 != 0 then goto L2d1c24;
  #L2d1c14.  v0:= 1I;
  #L2d1c16.  v2.`okhttp3.internal.cache.CacheInterceptor$1.a` @type ^`boolean` := v0 @kind boolean;
  #L2d1c1a.  v0:= v2.`okhttp3.internal.cache.CacheInterceptor$1.c` @type ^`okhttp3.internal.cache.CacheRequest` @kind object;
  #L2d1c1e.  call `abort`(v0) @signature `Lokhttp3/internal/cache/CacheRequest;.abort:()V` @kind interface;
  #L2d1c24.  v0:= v2.`okhttp3.internal.cache.CacheInterceptor$1.b` @type ^`okio.BufferedSource` @kind object;
  #L2d1c28.  call `close`(v0) @signature `Lokio/Source;.close:()V` @kind interface;
  #L2d1c2e.  return @kind void;
}
procedure `long` `read`(`okhttp3.internal.cache.CacheInterceptor$1` v8 @kind this, `okio.Buffer` v9 @kind object, `long` v10 ) @signature `Lokhttp3/internal/cache/CacheInterceptor$1;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2d1b14.  v0:= 1I;
  #L2d1b16.  v1:= v8.`okhttp3.internal.cache.CacheInterceptor$1.b` @type ^`okio.BufferedSource` @kind object;
  #L2d1b1a.  call temp:= `read`(v1, v9, v10) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L2d1b20.  v10:= temp @kind wide;
  #L2d1b22.  v1:= -1L;
  #L2d1b26.  v3:= lcmp(v10, v1);
  #L2d1b2a.  if v3 != 0 then goto L2d1b46;
  #L2d1b2e.  v9:= v8.`okhttp3.internal.cache.CacheInterceptor$1.a` @type ^`boolean` @kind boolean;
  #L2d1b32.  if v9 != 0 then goto L2d1b44;
  #L2d1b36.  v8.`okhttp3.internal.cache.CacheInterceptor$1.a` @type ^`boolean` := v0 @kind boolean;
  #L2d1b3a.  v9:= v8.`okhttp3.internal.cache.CacheInterceptor$1.d` @type ^`okio.BufferedSink` @kind object;
  #L2d1b3e.  call `close`(v9) @signature `Lokio/Sink;.close:()V` @kind interface;
  #L2d1b44.  return v1 @kind wide;
  #L2d1b46.  v0:= v8.`okhttp3.internal.cache.CacheInterceptor$1.d` @type ^`okio.BufferedSink` @kind object;
  #L2d1b4a.  call temp:= `buffer`(v0) @signature `Lokio/BufferedSink;.buffer:()Lokio/Buffer;` @kind interface;
  #L2d1b50.  v3:= temp @kind object;
  #L2d1b52.  call temp:= `size`(v9) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2d1b58.  v0:= temp @kind wide;
  #L2d1b5a.  v4:= v0 - v10 @kind long;
  #L2d1b5e.  v2:= v9 @kind object;
  #L2d1b60.  v6:= v10 @kind wide;
  #L2d1b62.  call temp:= `copyTo`(v2, v3, v4, v6) @signature `Lokio/Buffer;.copyTo:(Lokio/Buffer;JJ)Lokio/Buffer;` @kind virtual;
  #L2d1b68.  v9:= v8.`okhttp3.internal.cache.CacheInterceptor$1.d` @type ^`okio.BufferedSink` @kind object;
  #L2d1b6c.  call temp:= `emitCompleteSegments`(v9) @signature `Lokio/BufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind interface;
  #L2d1b72.  return v10 @kind wide;
  #L2d1b74.  v9:= Exception @type ^`java.io.IOException` @kind object;
  #L2d1b76.  v10:= v8.`okhttp3.internal.cache.CacheInterceptor$1.a` @type ^`boolean` @kind boolean;
  #L2d1b7a.  if v10 != 0 then goto L2d1b8c;
  #L2d1b7e.  v8.`okhttp3.internal.cache.CacheInterceptor$1.a` @type ^`boolean` := v0 @kind boolean;
  #L2d1b82.  v10:= v8.`okhttp3.internal.cache.CacheInterceptor$1.c` @type ^`okhttp3.internal.cache.CacheRequest` @kind object;
  #L2d1b86.  call `abort`(v10) @signature `Lokhttp3/internal/cache/CacheRequest;.abort:()V` @kind interface;
  #L2d1b8c.  throw v9;
  catch `java.io.IOException` @[L2d1b16..L2d1b22] goto L2d1b74;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.cache.CacheInterceptor$1` v1 @kind this) @signature `Lokhttp3/internal/cache/CacheInterceptor$1;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d1bb0.  v0:= v1.`okhttp3.internal.cache.CacheInterceptor$1.b` @type ^`okio.BufferedSource` @kind object;
  #L2d1bb4.  call temp:= `timeout`(v0) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L2d1bba.  v0:= temp @kind object;
  #L2d1bbc.  return v0 @kind object;
}
