record `okhttp3.internal.ws.WebSocketReader` @kind class @AccessFlag FINAL {
  `boolean` `okhttp3.internal.ws.WebSocketReader.a` @AccessFlag FINAL;
  `okio.BufferedSource` `okhttp3.internal.ws.WebSocketReader.b` @AccessFlag FINAL;
  `okhttp3.internal.ws.WebSocketReader$FrameCallback` `okhttp3.internal.ws.WebSocketReader.c` @AccessFlag FINAL;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketReader.d` @AccessFlag ;
  `int` `okhttp3.internal.ws.WebSocketReader.e` @AccessFlag ;
  `long` `okhttp3.internal.ws.WebSocketReader.f` @AccessFlag ;
  `boolean` `okhttp3.internal.ws.WebSocketReader.g` @AccessFlag ;
  `boolean` `okhttp3.internal.ws.WebSocketReader.h` @AccessFlag ;
  `okio.Buffer$UnsafeCursor` `okhttp3.internal.ws.WebSocketReader.maskCursor` @AccessFlag PRIVATE_FINAL;
  `byte`[] `okhttp3.internal.ws.WebSocketReader.maskKey` @AccessFlag PRIVATE_FINAL;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this, `boolean` v2 , `okio.BufferedSource` v3 @kind object, `okhttp3.internal.ws.WebSocketReader$FrameCallback` v4 @kind object) @signature `Lokhttp3/internal/ws/WebSocketReader;.<init>:(ZLokio/BufferedSource;Lokhttp3/internal/ws/WebSocketReader$FrameCallback;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2e0688.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e068e.  v0:= new `okio.Buffer`;
  #L2e0692.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L2e0698.  v1.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` := v0 @kind object;
  #L2e069c.  v0:= new `okio.Buffer`;
  #L2e06a0.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L2e06a6.  v1.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` := v0 @kind object;
  #L2e06aa.  if v3 == 0 then goto L2e06f8;
  #L2e06ae.  if v4 == 0 then goto L2e06e8;
  #L2e06b2.  v1.`okhttp3.internal.ws.WebSocketReader.a` @type ^`boolean` := v2 @kind boolean;
  #L2e06b6.  v1.`okhttp3.internal.ws.WebSocketReader.b` @type ^`okio.BufferedSource` := v3 @kind object;
  #L2e06ba.  v1.`okhttp3.internal.ws.WebSocketReader.c` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` := v4 @kind object;
  #L2e06be.  v3:= 0I;
  #L2e06c0.  if v2 == 0 then goto L2e06c8;
  #L2e06c4.  v4:= v3 @kind object;
  #L2e06c6.  goto L2e06ce;
  #L2e06c8.  v4:= 4I;
  #L2e06ca.  v4:= new `byte`[v4];
  #L2e06ce.  v1.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] := v4 @kind object;
  #L2e06d2.  if v2 == 0 then goto L2e06d8;
  #L2e06d6.  goto L2e06e2;
  #L2e06d8.  v3:= new `okio.Buffer$UnsafeCursor`;
  #L2e06dc.  call `<init>`(v3) @signature `Lokio/Buffer$UnsafeCursor;.<init>:()V` @kind direct;
  #L2e06e2.  v1.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` := v3 @kind object;
  #L2e06e6.  return @kind void;
  #L2e06e8.  v2:= new `java.lang.NullPointerException`;
  #L2e06ec.  v3:= "frameCallback == null" @kind object;
  #L2e06f0.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e06f6.  throw v2;
  #L2e06f8.  v2:= new `java.lang.NullPointerException`;
  #L2e06fc.  v3:= "source == null" @kind object;
  #L2e0700.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e0706.  throw v2;
}
procedure `void` `readControlFrame`(`okhttp3.internal.ws.WebSocketReader` v8 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readControlFrame:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2e0748.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.f` @type ^`long` @kind wide;
  #L2e074c.  v2:= 0L;
  #L2e0750.  v4:= lcmp(v0, v2);
  #L2e0754.  if v4 <= 0 then goto L2e079e;
  #L2e0758.  v4:= v8.`okhttp3.internal.ws.WebSocketReader.b` @type ^`okio.BufferedSource` @kind object;
  #L2e075c.  v5:= v8.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L2e0760.  call `readFully`(v4, v5, v0) @signature `Lokio/BufferedSource;.readFully:(Lokio/Buffer;J)V` @kind interface;
  #L2e0766.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.a` @type ^`boolean` @kind boolean;
  #L2e076a.  if v0 != 0 then goto L2e079e;
  #L2e076e.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L2e0772.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L2e0776.  call temp:= `readAndWriteUnsafe`(v0, v1) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L2e077c.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L2e0780.  call temp:= `seek`(v0, v2) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L2e0786.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L2e078a.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] @kind object;
  #L2e078e.  call `b`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.b:(Lokio/Buffer$UnsafeCursor;[B)V` @kind static;
  #L2e0794.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L2e0798.  call `close`(v0) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L2e079e.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.e` @type ^`int`;
  #L2e07a2.  goto L2e0890;
  #L2e07a8.  v0:= new `java.net.ProtocolException`;
  #L2e07ac.  v1:= new `java.lang.StringBuilder`;
  #L2e07b0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2e07b6.  v2:= "Unknown control opcode: " @kind object;
  #L2e07ba.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e07c0.  v2:= v8.`okhttp3.internal.ws.WebSocketReader.e` @type ^`int`;
  #L2e07c4.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L2e07ca.  v2:= temp @kind object;
  #L2e07cc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e07d2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e07d8.  v1:= temp @kind object;
  #L2e07da.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e07e0.  throw v0;
  #L2e07e2.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.c` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L2e07e6.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L2e07ea.  call temp:= `readByteString`(v1) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L2e07f0.  v1:= temp @kind object;
  #L2e07f2.  call `onReadPong`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadPong:(Lokio/ByteString;)V` @kind interface;
  #L2e07f8.  goto L2e087c;
  #L2e07fa.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.c` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L2e07fe.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L2e0802.  call temp:= `readByteString`(v1) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L2e0808.  v1:= temp @kind object;
  #L2e080a.  call `onReadPing`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadPing:(Lokio/ByteString;)V` @kind interface;
  #L2e0810.  goto L2e087c;
  #L2e0812.  v0:= 1005I;
  #L2e0816.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L2e081a.  call temp:= `size`(v1) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2e0820.  v4:= temp @kind wide;
  #L2e0822.  v6:= 1L;
  #L2e0826.  v1:= lcmp(v4, v6);
  #L2e082a.  if v1 == 0 then goto L2e087e;
  #L2e082e.  v1:= lcmp(v4, v2);
  #L2e0832.  if v1 == 0 then goto L2e0868;
  #L2e0836.  v0:= v8.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L2e083a.  call temp:= `readShort`(v0) @signature `Lokio/Buffer;.readShort:()S` @kind virtual;
  #L2e0840.  v0:= temp;
  #L2e0842.  v1:= v8.`okhttp3.internal.ws.WebSocketReader.controlFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L2e0846.  call temp:= `readUtf8`(v1) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L2e084c.  v1:= temp @kind object;
  #L2e084e.  call temp:= `a`(v0) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.a:(I)Ljava/lang/String;` @kind static;
  #L2e0854.  v2:= temp @kind object;
  #L2e0856.  if v2 != 0 then goto L2e085c;
  #L2e085a.  goto L2e086c;
  #L2e085c.  v0:= new `java.net.ProtocolException`;
  #L2e0860.  call `<init>`(v0, v2) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e0866.  throw v0;
  #L2e0868.  v1:= "" @kind object;
  #L2e086c.  v2:= v8.`okhttp3.internal.ws.WebSocketReader.c` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L2e0870.  call `onReadClose`(v2, v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadClose:(ILjava/lang/String;)V` @kind interface;
  #L2e0876.  v0:= 1I;
  #L2e0878.  v8.`okhttp3.internal.ws.WebSocketReader.d` @type ^`boolean` := v0 @kind boolean;
  #L2e087c.  return @kind void;
  #L2e087e.  v0:= new `java.net.ProtocolException`;
  #L2e0882.  v1:= "Malformed close payload length of 1." @kind object;
  #L2e0886.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e088c.  throw v0;
  #L2e088e.  
  #L2e0890.  switch v0
                  | 8 => goto L2e0812
                  | 9 => goto L2e07fa
                  | 10 => goto L2e07e2
                  | else => goto L2e07a8;
}
procedure `void` `readHeader`(`okhttp3.internal.ws.WebSocketReader` v6 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readHeader:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2e08b4.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.d` @type ^`boolean` @kind boolean;
  #L2e08b8.  if v0 != 0 then goto L2e0ad2;
  #L2e08bc.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.b` @type ^`okio.BufferedSource` @kind object;
  #L2e08c0.  call temp:= `timeout`(v0) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L2e08c6.  v0:= temp @kind object;
  #L2e08c8.  call temp:= `timeoutNanos`(v0) @signature `Lokio/Timeout;.timeoutNanos:()J` @kind virtual;
  #L2e08ce.  v0:= temp @kind wide;
  #L2e08d0.  v2:= v6.`okhttp3.internal.ws.WebSocketReader.b` @type ^`okio.BufferedSource` @kind object;
  #L2e08d4.  call temp:= `timeout`(v2) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L2e08da.  v2:= temp @kind object;
  #L2e08dc.  call temp:= `clearTimeout`(v2) @signature `Lokio/Timeout;.clearTimeout:()Lokio/Timeout;` @kind virtual;
  #L2e08e2.  v2:= v6.`okhttp3.internal.ws.WebSocketReader.b` @type ^`okio.BufferedSource` @kind object;
  #L2e08e6.  call temp:= `readByte`(v2) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L2e08ec.  v2:= temp;
  #L2e08ee.  v2:= v2 ^& 255;
  #L2e08f2.  v3:= v6.`okhttp3.internal.ws.WebSocketReader.b` @type ^`okio.BufferedSource` @kind object;
  #L2e08f6.  call temp:= `timeout`(v3) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L2e08fc.  v3:= temp @kind object;
  #L2e08fe.  v4:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2e0902.  call temp:= `timeout`(v3, v0, v4) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L2e0908.  v0:= v2 ^& 15;
  #L2e090c.  v6.`okhttp3.internal.ws.WebSocketReader.e` @type ^`int` := v0;
  #L2e0910.  v0:= v2 ^& 128;
  #L2e0914.  v1:= 1I;
  #L2e0916.  v3:= 0I;
  #L2e0918.  if v0 == 0 then goto L2e0920;
  #L2e091c.  v0:= 1I;
  #L2e091e.  goto L2e0922;
  #L2e0920.  v0:= 0I;
  #L2e0922.  v6.`okhttp3.internal.ws.WebSocketReader.g` @type ^`boolean` := v0 @kind boolean;
  #L2e0926.  v4:= v2 ^& 8;
  #L2e092a.  if v4 == 0 then goto L2e0932;
  #L2e092e.  v4:= 1I;
  #L2e0930.  goto L2e0934;
  #L2e0932.  v4:= 0I;
  #L2e0934.  v6.`okhttp3.internal.ws.WebSocketReader.h` @type ^`boolean` := v4 @kind boolean;
  #L2e0938.  if v4 == 0 then goto L2e0952;
  #L2e093c.  if v0 == 0 then goto L2e0942;
  #L2e0940.  goto L2e0952;
  #L2e0942.  v0:= new `java.net.ProtocolException`;
  #L2e0946.  v1:= "Control frames must be final." @kind object;
  #L2e094a.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e0950.  throw v0;
  #L2e0952.  v0:= v2 ^& 64;
  #L2e0956.  if v0 == 0 then goto L2e095e;
  #L2e095a.  v0:= 1I;
  #L2e095c.  goto L2e0960;
  #L2e095e.  v0:= 0I;
  #L2e0960.  v4:= v2 ^& 32;
  #L2e0964.  if v4 == 0 then goto L2e096c;
  #L2e0968.  v4:= 1I;
  #L2e096a.  goto L2e096e;
  #L2e096c.  v4:= 0I;
  #L2e096e.  v2:= v2 ^& 16;
  #L2e0972.  if v2 == 0 then goto L2e097a;
  #L2e0976.  v2:= 1I;
  #L2e0978.  goto L2e097c;
  #L2e097a.  v2:= 0I;
  #L2e097c.  if v0 != 0 then goto L2e0aa8;
  #L2e0980.  if v4 != 0 then goto L2e0aa8;
  #L2e0984.  if v2 != 0 then goto L2e0aa8;
  #L2e0988.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.b` @type ^`okio.BufferedSource` @kind object;
  #L2e098c.  call temp:= `readByte`(v0) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L2e0992.  v0:= temp;
  #L2e0994.  v0:= v0 ^& 255;
  #L2e0998.  v2:= v0 ^& 128;
  #L2e099c.  if v2 == 0 then goto L2e09a2;
  #L2e09a0.  goto L2e09a4;
  #L2e09a2.  v1:= 0I;
  #L2e09a4.  v2:= v6.`okhttp3.internal.ws.WebSocketReader.a` @type ^`boolean` @kind boolean;
  #L2e09a8.  if v1 != v2 then goto L2e09ca;
  #L2e09ac.  v0:= new `java.net.ProtocolException`;
  #L2e09b0.  v1:= v6.`okhttp3.internal.ws.WebSocketReader.a` @type ^`boolean` @kind boolean;
  #L2e09b4.  if v1 == 0 then goto L2e09be;
  #L2e09b8.  v1:= "Server-sent frames must not be masked." @kind object;
  #L2e09bc.  goto L2e09c2;
  #L2e09be.  v1:= "Client-sent frames must be masked." @kind object;
  #L2e09c2.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e09c8.  throw v0;
  #L2e09ca.  v0:= v0 ^& 127;
  #L2e09ce.  v2:= (`long`) v0 @kind i2l;
  #L2e09d0.  v6.`okhttp3.internal.ws.WebSocketReader.f` @type ^`long` := v2 @kind wide;
  #L2e09d4.  v4:= 126L;
  #L2e09d8.  v0:= lcmp(v2, v4);
  #L2e09dc.  if v0 != 0 then goto L2e09fc;
  #L2e09e0.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.b` @type ^`okio.BufferedSource` @kind object;
  #L2e09e4.  call temp:= `readShort`(v0) @signature `Lokio/BufferedSource;.readShort:()S` @kind interface;
  #L2e09ea.  v0:= temp;
  #L2e09ec.  v2:= (`long`) v0 @kind i2l;
  #L2e09ee.  v4:= 65535L;
  #L2e09f4.  v2:= v2 ^& v4 @kind long;
  #L2e09f6.  v6.`okhttp3.internal.ws.WebSocketReader.f` @type ^`long` := v2 @kind wide;
  #L2e09fa.  goto L2e0a6a;
  #L2e09fc.  v4:= 127L;
  #L2e0a00.  v0:= lcmp(v2, v4);
  #L2e0a04.  if v0 != 0 then goto L2e0a6a;
  #L2e0a08.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.b` @type ^`okio.BufferedSource` @kind object;
  #L2e0a0c.  call temp:= `readLong`(v0) @signature `Lokio/BufferedSource;.readLong:()J` @kind interface;
  #L2e0a12.  v2:= temp @kind wide;
  #L2e0a14.  v6.`okhttp3.internal.ws.WebSocketReader.f` @type ^`long` := v2 @kind wide;
  #L2e0a18.  v4:= 0L;
  #L2e0a1c.  v0:= lcmp(v2, v4);
  #L2e0a20.  if v0 < 0 then goto L2e0a26;
  #L2e0a24.  goto L2e0a6a;
  #L2e0a26.  v0:= new `java.net.ProtocolException`;
  #L2e0a2a.  v1:= new `java.lang.StringBuilder`;
  #L2e0a2e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2e0a34.  v2:= "Frame length 0x" @kind object;
  #L2e0a38.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e0a3e.  v2:= v6.`okhttp3.internal.ws.WebSocketReader.f` @type ^`long` @kind wide;
  #L2e0a42.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Long;.toHexString:(J)Ljava/lang/String;` @kind static;
  #L2e0a48.  v2:= temp @kind object;
  #L2e0a4a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e0a50.  v2:= " > 0x7FFFFFFFFFFFFFFF" @kind object;
  #L2e0a54.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e0a5a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e0a60.  v1:= temp @kind object;
  #L2e0a62.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e0a68.  throw v0;
  #L2e0a6a.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.h` @type ^`boolean` @kind boolean;
  #L2e0a6e.  if v0 == 0 then goto L2e0a94;
  #L2e0a72.  v2:= v6.`okhttp3.internal.ws.WebSocketReader.f` @type ^`long` @kind wide;
  #L2e0a76.  v4:= 125L;
  #L2e0a7a.  v0:= lcmp(v2, v4);
  #L2e0a7e.  if v0 > 0 then goto L2e0a84;
  #L2e0a82.  goto L2e0a94;
  #L2e0a84.  v0:= new `java.net.ProtocolException`;
  #L2e0a88.  v1:= "Control frame must be less than 125B." @kind object;
  #L2e0a8c.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e0a92.  throw v0;
  #L2e0a94.  if v1 == 0 then goto L2e0aa6;
  #L2e0a98.  v0:= v6.`okhttp3.internal.ws.WebSocketReader.b` @type ^`okio.BufferedSource` @kind object;
  #L2e0a9c.  v1:= v6.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] @kind object;
  #L2e0aa0.  call `readFully`(v0, v1) @signature `Lokio/BufferedSource;.readFully:([B)V` @kind interface;
  #L2e0aa6.  return @kind void;
  #L2e0aa8.  v0:= new `java.net.ProtocolException`;
  #L2e0aac.  v1:= "Reserved flags are unsupported." @kind object;
  #L2e0ab0.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e0ab6.  throw v0;
  #L2e0ab8.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2e0aba.  v3:= v6.`okhttp3.internal.ws.WebSocketReader.b` @type ^`okio.BufferedSource` @kind object;
  #L2e0abe.  call temp:= `timeout`(v3) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L2e0ac4.  v3:= temp @kind object;
  #L2e0ac6.  v4:= `@@java.util.concurrent.TimeUnit.NANOSECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2e0aca.  call temp:= `timeout`(v3, v0, v4) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L2e0ad0.  throw v2;
  #L2e0ad2.  v0:= new `java.io.IOException`;
  #L2e0ad6.  v1:= "closed" @kind object;
  #L2e0ada.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e0ae0.  throw v0;
  catch `java.lang.Throwable` @[L2e08e2..L2e08ee] goto L2e0ab8;
}
procedure `void` `readMessage`(`okhttp3.internal.ws.WebSocketReader` v5 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessage:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2e0b00.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.d` @type ^`boolean` @kind boolean;
  #L2e0b04.  if v0 != 0 then goto L2e0bc4;
  #L2e0b08.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.f` @type ^`long` @kind wide;
  #L2e0b0c.  v2:= 0L;
  #L2e0b10.  v4:= lcmp(v0, v2);
  #L2e0b14.  if v4 <= 0 then goto L2e0b70;
  #L2e0b18.  v2:= v5.`okhttp3.internal.ws.WebSocketReader.b` @type ^`okio.BufferedSource` @kind object;
  #L2e0b1c.  v3:= v5.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L2e0b20.  call `readFully`(v2, v3, v0) @signature `Lokio/BufferedSource;.readFully:(Lokio/Buffer;J)V` @kind interface;
  #L2e0b26.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.a` @type ^`boolean` @kind boolean;
  #L2e0b2a.  if v0 != 0 then goto L2e0b70;
  #L2e0b2e.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L2e0b32.  v1:= v5.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L2e0b36.  call temp:= `readAndWriteUnsafe`(v0, v1) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L2e0b3c.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L2e0b40.  v1:= v5.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L2e0b44.  call temp:= `size`(v1) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2e0b4a.  v1:= temp @kind wide;
  #L2e0b4c.  v3:= v5.`okhttp3.internal.ws.WebSocketReader.f` @type ^`long` @kind wide;
  #L2e0b50.  v1:= v1 - v3 @kind long;
  #L2e0b52.  call temp:= `seek`(v0, v1) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L2e0b58.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L2e0b5c.  v1:= v5.`okhttp3.internal.ws.WebSocketReader.maskKey` @type ^`byte`[] @kind object;
  #L2e0b60.  call `b`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.b:(Lokio/Buffer$UnsafeCursor;[B)V` @kind static;
  #L2e0b66.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L2e0b6a.  call `close`(v0) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L2e0b70.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.g` @type ^`boolean` @kind boolean;
  #L2e0b74.  if v0 == 0 then goto L2e0b7a;
  #L2e0b78.  return @kind void;
  #L2e0b7a.  call `readUntilNonControlFrame`(v5) @signature `Lokhttp3/internal/ws/WebSocketReader;.readUntilNonControlFrame:()V` @kind direct;
  #L2e0b80.  v0:= v5.`okhttp3.internal.ws.WebSocketReader.e` @type ^`int`;
  #L2e0b84.  if v0 != 0 then goto L2e0b8a;
  #L2e0b88.  goto L2e0b00;
  #L2e0b8a.  v0:= new `java.net.ProtocolException`;
  #L2e0b8e.  v1:= new `java.lang.StringBuilder`;
  #L2e0b92.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2e0b98.  v2:= "Expected continuation opcode. Got: " @kind object;
  #L2e0b9c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e0ba2.  v2:= v5.`okhttp3.internal.ws.WebSocketReader.e` @type ^`int`;
  #L2e0ba6.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L2e0bac.  v2:= temp @kind object;
  #L2e0bae.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e0bb4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e0bba.  v1:= temp @kind object;
  #L2e0bbc.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e0bc2.  throw v0;
  #L2e0bc4.  v0:= new `java.io.IOException`;
  #L2e0bc8.  v1:= "closed" @kind object;
  #L2e0bcc.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e0bd2.  goto L2e0bd6;
  #L2e0bd4.  throw v0;
  #L2e0bd6.  goto L2e0bd4;
}
procedure `void` `readMessageFrame`(`okhttp3.internal.ws.WebSocketReader` v4 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessageFrame:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2e0be8.  v0:= v4.`okhttp3.internal.ws.WebSocketReader.e` @type ^`int`;
  #L2e0bec.  v1:= 1I;
  #L2e0bee.  if v0 == v1 then goto L2e0c30;
  #L2e0bf2.  v2:= 2I;
  #L2e0bf4.  if v0 != v2 then goto L2e0bfa;
  #L2e0bf8.  goto L2e0c30;
  #L2e0bfa.  v1:= new `java.net.ProtocolException`;
  #L2e0bfe.  v2:= new `java.lang.StringBuilder`;
  #L2e0c02.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2e0c08.  v3:= "Unknown opcode: " @kind object;
  #L2e0c0c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e0c12.  call temp:= `toHexString`(v0) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L2e0c18.  v0:= temp @kind object;
  #L2e0c1a.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e0c20.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e0c26.  v0:= temp @kind object;
  #L2e0c28.  call `<init>`(v1, v0) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e0c2e.  throw v1;
  #L2e0c30.  call `readMessage`(v4) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessage:()V` @kind direct;
  #L2e0c36.  if v0 != v1 then goto L2e0c52;
  #L2e0c3a.  v0:= v4.`okhttp3.internal.ws.WebSocketReader.c` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L2e0c3e.  v1:= v4.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L2e0c42.  call temp:= `readUtf8`(v1) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L2e0c48.  v1:= temp @kind object;
  #L2e0c4a.  call `onReadMessage`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadMessage:(Ljava/lang/String;)V` @kind interface;
  #L2e0c50.  goto L2e0c68;
  #L2e0c52.  v0:= v4.`okhttp3.internal.ws.WebSocketReader.c` @type ^`okhttp3.internal.ws.WebSocketReader$FrameCallback` @kind object;
  #L2e0c56.  v1:= v4.`okhttp3.internal.ws.WebSocketReader.messageFrameBuffer` @type ^`okio.Buffer` @kind object;
  #L2e0c5a.  call temp:= `readByteString`(v1) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L2e0c60.  v1:= temp @kind object;
  #L2e0c62.  call `onReadMessage`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketReader$FrameCallback;.onReadMessage:(Lokio/ByteString;)V` @kind interface;
  #L2e0c68.  return @kind void;
}
procedure `void` `readUntilNonControlFrame`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.readUntilNonControlFrame:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2e0c7c.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.d` @type ^`boolean` @kind boolean;
  #L2e0c80.  if v0 != 0 then goto L2e0c9c;
  #L2e0c84.  call `readHeader`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readHeader:()V` @kind direct;
  #L2e0c8a.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.h` @type ^`boolean` @kind boolean;
  #L2e0c8e.  if v0 != 0 then goto L2e0c94;
  #L2e0c92.  goto L2e0c9c;
  #L2e0c94.  call `readControlFrame`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readControlFrame:()V` @kind direct;
  #L2e0c9a.  goto L2e0c7c;
  #L2e0c9c.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.ws.WebSocketReader` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketReader;.a:()V` @AccessFlag  {
    temp;
    v0;

  #L2e0718.  call `readHeader`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readHeader:()V` @kind direct;
  #L2e071e.  v0:= v1.`okhttp3.internal.ws.WebSocketReader.h` @type ^`boolean` @kind boolean;
  #L2e0722.  if v0 == 0 then goto L2e072e;
  #L2e0726.  call `readControlFrame`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readControlFrame:()V` @kind direct;
  #L2e072c.  goto L2e0734;
  #L2e072e.  call `readMessageFrame`(v1) @signature `Lokhttp3/internal/ws/WebSocketReader;.readMessageFrame:()V` @kind direct;
  #L2e0734.  return @kind void;
}
