record `okhttp3.internal.http.RequestLine` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.internal.http.RequestLine` v0 @kind this) @signature `Lokhttp3/internal/http/RequestLine;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2d647c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d6482.  return @kind void;
}
procedure `java.lang.String` `get`(`okhttp3.Request` v2 @kind object, `java.net.Proxy$Type` v3 @kind object) @signature `Lokhttp3/internal/http/RequestLine;.get:(Lokhttp3/Request;Ljava/net/Proxy$Type;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2d63bc.  v0:= new `java.lang.StringBuilder`;
  #L2d63c0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d63c6.  call temp:= `method`(v2) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L2d63cc.  v1:= temp @kind object;
  #L2d63ce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d63d4.  v1:= 32I;
  #L2d63d8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d63de.  call temp:= `includeAuthorityInRequestLine`(v2, v3) @signature `Lokhttp3/internal/http/RequestLine;.includeAuthorityInRequestLine:(Lokhttp3/Request;Ljava/net/Proxy$Type;)Z` @kind static;
  #L2d63e4.  v3:= temp;
  #L2d63e6.  call temp:= `url`(v2) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L2d63ec.  v2:= temp @kind object;
  #L2d63ee.  if v3 == 0 then goto L2d63fa;
  #L2d63f2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d63f8.  goto L2d6408;
  #L2d63fa.  call temp:= `requestPath`(v2) @signature `Lokhttp3/internal/http/RequestLine;.requestPath:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @kind static;
  #L2d6400.  v2:= temp @kind object;
  #L2d6402.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d6408.  v2:= " HTTP/1.1" @kind object;
  #L2d640c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d6412.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d6418.  v2:= temp @kind object;
  #L2d641a.  return v2 @kind object;
}
procedure `boolean` `includeAuthorityInRequestLine`(`okhttp3.Request` v0 @kind object, `java.net.Proxy$Type` v1 @kind object) @signature `Lokhttp3/internal/http/RequestLine;.includeAuthorityInRequestLine:(Lokhttp3/Request;Ljava/net/Proxy$Type;)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L2d6390.  call temp:= `isHttps`(v0) @signature `Lokhttp3/Request;.isHttps:()Z` @kind virtual;
  #L2d6396.  v0:= temp;
  #L2d6398.  if v0 != 0 then goto L2d63a8;
  #L2d639c.  v0:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L2d63a0.  if v1 != v0 then goto L2d63a8;
  #L2d63a4.  v0:= 1I;
  #L2d63a6.  goto L2d63aa;
  #L2d63a8.  v0:= 0I;
  #L2d63aa.  return v0;
}
procedure `java.lang.String` `requestPath`(`okhttp3.HttpUrl` v2 @kind object) @signature `Lokhttp3/internal/http/RequestLine;.requestPath:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2d642c.  call temp:= `encodedPath`(v2) @signature `Lokhttp3/HttpUrl;.encodedPath:()Ljava/lang/String;` @kind virtual;
  #L2d6432.  v0:= temp @kind object;
  #L2d6434.  call temp:= `encodedQuery`(v2) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @kind virtual;
  #L2d643a.  v2:= temp @kind object;
  #L2d643c.  if v2 == 0 then goto L2d6468;
  #L2d6440.  v1:= new `java.lang.StringBuilder`;
  #L2d6444.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d644a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d6450.  v0:= 63I;
  #L2d6454.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d645a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d6460.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d6466.  v0:= temp @kind object;
  #L2d6468.  return v0 @kind object;
}
