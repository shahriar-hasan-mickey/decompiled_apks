record `okhttp3.internal.http.HttpMethod` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.internal.http.HttpMethod` v0 @kind this) @signature `Lokhttp3/internal/http/HttpMethod;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2d5ee0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d5ee6.  return @kind void;
}
procedure `boolean` `invalidatesCache`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/http/HttpMethod;.invalidatesCache:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2d5d8c.  v0:= "POST" @kind object;
  #L2d5d90.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d5d96.  v0:= temp;
  #L2d5d98.  if v0 != 0 then goto L2d5de2;
  #L2d5d9c.  v0:= "PATCH" @kind object;
  #L2d5da0.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d5da6.  v0:= temp;
  #L2d5da8.  if v0 != 0 then goto L2d5de2;
  #L2d5dac.  v0:= "PUT" @kind object;
  #L2d5db0.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d5db6.  v0:= temp;
  #L2d5db8.  if v0 != 0 then goto L2d5de2;
  #L2d5dbc.  v0:= "DELETE" @kind object;
  #L2d5dc0.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d5dc6.  v0:= temp;
  #L2d5dc8.  if v0 != 0 then goto L2d5de2;
  #L2d5dcc.  v0:= "MOVE" @kind object;
  #L2d5dd0.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d5dd6.  v1:= temp;
  #L2d5dd8.  if v1 == 0 then goto L2d5dde;
  #L2d5ddc.  goto L2d5de2;
  #L2d5dde.  v1:= 0I;
  #L2d5de0.  goto L2d5de4;
  #L2d5de2.  v1:= 1I;
  #L2d5de4.  return v1;
}
procedure `boolean` `permitsRequestBody`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/http/HttpMethod;.permitsRequestBody:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2d5df8.  v0:= "GET" @kind object;
  #L2d5dfc.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d5e02.  v0:= temp;
  #L2d5e04.  if v0 != 0 then goto L2d5e1c;
  #L2d5e08.  v0:= "HEAD" @kind object;
  #L2d5e0c.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d5e12.  v1:= temp;
  #L2d5e14.  if v1 != 0 then goto L2d5e1c;
  #L2d5e18.  v1:= 1I;
  #L2d5e1a.  goto L2d5e1e;
  #L2d5e1c.  v1:= 0I;
  #L2d5e1e.  return v1;
}
procedure `boolean` `redirectsToGet`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/http/HttpMethod;.redirectsToGet:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2d5e30.  v0:= "PROPFIND" @kind object;
  #L2d5e34.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d5e3a.  v1:= temp;
  #L2d5e3c.  v1:= v1 ^~ 1;
  #L2d5e40.  return v1;
}
procedure `boolean` `redirectsWithBody`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/http/HttpMethod;.redirectsWithBody:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2d5e54.  v0:= "PROPFIND" @kind object;
  #L2d5e58.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d5e5e.  v1:= temp;
  #L2d5e60.  return v1;
}
procedure `boolean` `requiresRequestBody`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/http/HttpMethod;.requiresRequestBody:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2d5e74.  v0:= "POST" @kind object;
  #L2d5e78.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d5e7e.  v0:= temp;
  #L2d5e80.  if v0 != 0 then goto L2d5eca;
  #L2d5e84.  v0:= "PUT" @kind object;
  #L2d5e88.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d5e8e.  v0:= temp;
  #L2d5e90.  if v0 != 0 then goto L2d5eca;
  #L2d5e94.  v0:= "PATCH" @kind object;
  #L2d5e98.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d5e9e.  v0:= temp;
  #L2d5ea0.  if v0 != 0 then goto L2d5eca;
  #L2d5ea4.  v0:= "PROPPATCH" @kind object;
  #L2d5ea8.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d5eae.  v0:= temp;
  #L2d5eb0.  if v0 != 0 then goto L2d5eca;
  #L2d5eb4.  v0:= "REPORT" @kind object;
  #L2d5eb8.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d5ebe.  v1:= temp;
  #L2d5ec0.  if v1 == 0 then goto L2d5ec6;
  #L2d5ec4.  goto L2d5eca;
  #L2d5ec6.  v1:= 0I;
  #L2d5ec8.  goto L2d5ecc;
  #L2d5eca.  v1:= 1I;
  #L2d5ecc.  return v1;
}
