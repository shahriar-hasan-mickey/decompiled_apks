record `okhttp3.internal.http.CallServerInterceptor` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
  `boolean` `okhttp3.internal.http.CallServerInterceptor.forWebSocket` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.http.CallServerInterceptor` v0 @kind this, `boolean` v1 ) @signature `Lokhttp3/internal/http/CallServerInterceptor;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2d52ac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d52b2.  v0.`okhttp3.internal.http.CallServerInterceptor.forWebSocket` @type ^`boolean` := v1 @kind boolean;
  #L2d52b6.  return @kind void;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.internal.http.CallServerInterceptor` v11 @kind this, `okhttp3.Interceptor$Chain` v12 @kind object) @signature `Lokhttp3/internal/http/CallServerInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2d4f78.  v12:= (`okhttp3.internal.http.RealInterceptorChain`) v12 @kind object;
  #L2d4f7c.  call temp:= `httpStream`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.httpStream:()Lokhttp3/internal/http/HttpCodec;` @kind virtual;
  #L2d4f82.  v0:= temp @kind object;
  #L2d4f84.  call temp:= `streamAllocation`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.streamAllocation:()Lokhttp3/internal/connection/StreamAllocation;` @kind virtual;
  #L2d4f8a.  v1:= temp @kind object;
  #L2d4f8c.  call temp:= `connection`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.connection:()Lokhttp3/Connection;` @kind virtual;
  #L2d4f92.  v2:= temp @kind object;
  #L2d4f94.  v2:= (`okhttp3.internal.connection.RealConnection`) v2 @kind object;
  #L2d4f98.  call temp:= `request`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.request:()Lokhttp3/Request;` @kind virtual;
  #L2d4f9e.  v3:= temp @kind object;
  #L2d4fa0.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L2d4fa6.  v4:= temp @kind wide;
  #L2d4fa8.  call temp:= `eventListener`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.eventListener:()Lokhttp3/EventListener;` @kind virtual;
  #L2d4fae.  v6:= temp @kind object;
  #L2d4fb0.  call temp:= `call`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.call:()Lokhttp3/Call;` @kind virtual;
  #L2d4fb6.  v7:= temp @kind object;
  #L2d4fb8.  call `requestHeadersStart`(v6, v7) @signature `Lokhttp3/EventListener;.requestHeadersStart:(Lokhttp3/Call;)V` @kind virtual;
  #L2d4fbe.  call `writeRequestHeaders`(v0, v3) @signature `Lokhttp3/internal/http/HttpCodec;.writeRequestHeaders:(Lokhttp3/Request;)V` @kind interface;
  #L2d4fc4.  call temp:= `eventListener`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.eventListener:()Lokhttp3/EventListener;` @kind virtual;
  #L2d4fca.  v6:= temp @kind object;
  #L2d4fcc.  call temp:= `call`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.call:()Lokhttp3/Call;` @kind virtual;
  #L2d4fd2.  v7:= temp @kind object;
  #L2d4fd4.  call `requestHeadersEnd`(v6, v7, v3) @signature `Lokhttp3/EventListener;.requestHeadersEnd:(Lokhttp3/Call;Lokhttp3/Request;)V` @kind virtual;
  #L2d4fda.  call temp:= `method`(v3) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L2d4fe0.  v6:= temp @kind object;
  #L2d4fe2.  call temp:= `permitsRequestBody`(v6) @signature `Lokhttp3/internal/http/HttpMethod;.permitsRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L2d4fe8.  v6:= temp;
  #L2d4fea.  v7:= 0I;
  #L2d4fec.  if v6 == 0 then goto L2d50c4;
  #L2d4ff0.  call temp:= `body`(v3) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L2d4ff6.  v6:= temp @kind object;
  #L2d4ff8.  if v6 == 0 then goto L2d50c4;
  #L2d4ffc.  v6:= "Expect" @kind object;
  #L2d5000.  call temp:= `header`(v3, v6) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2d5006.  v6:= temp @kind object;
  #L2d5008.  v8:= "100-continue" @kind object;
  #L2d500c.  call temp:= `equalsIgnoreCase`(v8, v6) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2d5012.  v6:= temp;
  #L2d5014.  if v6 == 0 then goto L2d503e;
  #L2d5018.  call `flushRequest`(v0) @signature `Lokhttp3/internal/http/HttpCodec;.flushRequest:()V` @kind interface;
  #L2d501e.  call temp:= `eventListener`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.eventListener:()Lokhttp3/EventListener;` @kind virtual;
  #L2d5024.  v6:= temp @kind object;
  #L2d5026.  call temp:= `call`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.call:()Lokhttp3/Call;` @kind virtual;
  #L2d502c.  v7:= temp @kind object;
  #L2d502e.  call `responseHeadersStart`(v6, v7) @signature `Lokhttp3/EventListener;.responseHeadersStart:(Lokhttp3/Call;)V` @kind virtual;
  #L2d5034.  v6:= 1I;
  #L2d5036.  call temp:= `readResponseHeaders`(v0, v6) @signature `Lokhttp3/internal/http/HttpCodec;.readResponseHeaders:(Z)Lokhttp3/Response$Builder;` @kind interface;
  #L2d503c.  v7:= temp @kind object;
  #L2d503e.  if v7 != 0 then goto L2d50b2;
  #L2d5042.  call temp:= `eventListener`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.eventListener:()Lokhttp3/EventListener;` @kind virtual;
  #L2d5048.  v2:= temp @kind object;
  #L2d504a.  call temp:= `call`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.call:()Lokhttp3/Call;` @kind virtual;
  #L2d5050.  v6:= temp @kind object;
  #L2d5052.  call `requestBodyStart`(v2, v6) @signature `Lokhttp3/EventListener;.requestBodyStart:(Lokhttp3/Call;)V` @kind virtual;
  #L2d5058.  call temp:= `body`(v3) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L2d505e.  v2:= temp @kind object;
  #L2d5060.  call temp:= `contentLength`(v2) @signature `Lokhttp3/RequestBody;.contentLength:()J` @kind virtual;
  #L2d5066.  v8:= temp @kind wide;
  #L2d5068.  v2:= new `okhttp3.internal.http.CallServerInterceptor$CountingSink`;
  #L2d506c.  call temp:= `createRequestBody`(v0, v3, v8) @signature `Lokhttp3/internal/http/HttpCodec;.createRequestBody:(Lokhttp3/Request;J)Lokio/Sink;` @kind interface;
  #L2d5072.  v6:= temp @kind object;
  #L2d5074.  call `<init>`(v2, v6) @signature `Lokhttp3/internal/http/CallServerInterceptor$CountingSink;.<init>:(Lokio/Sink;)V` @kind direct;
  #L2d507a.  call temp:= `buffer`(v2) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L2d5080.  v6:= temp @kind object;
  #L2d5082.  call temp:= `body`(v3) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L2d5088.  v8:= temp @kind object;
  #L2d508a.  call `writeTo`(v8, v6) @signature `Lokhttp3/RequestBody;.writeTo:(Lokio/BufferedSink;)V` @kind virtual;
  #L2d5090.  call `close`(v6) @signature `Lokio/Sink;.close:()V` @kind interface;
  #L2d5096.  call temp:= `eventListener`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.eventListener:()Lokhttp3/EventListener;` @kind virtual;
  #L2d509c.  v6:= temp @kind object;
  #L2d509e.  call temp:= `call`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.call:()Lokhttp3/Call;` @kind virtual;
  #L2d50a4.  v8:= temp @kind object;
  #L2d50a6.  v9:= v2.`okhttp3.internal.http.CallServerInterceptor$CountingSink.a` @type ^`long` @kind wide;
  #L2d50aa.  call `requestBodyEnd`(v6, v8, v9) @signature `Lokhttp3/EventListener;.requestBodyEnd:(Lokhttp3/Call;J)V` @kind virtual;
  #L2d50b0.  goto L2d50c4;
  #L2d50b2.  call temp:= `isMultiplexed`(v2) @signature `Lokhttp3/internal/connection/RealConnection;.isMultiplexed:()Z` @kind virtual;
  #L2d50b8.  v2:= temp;
  #L2d50ba.  if v2 != 0 then goto L2d50c4;
  #L2d50be.  call `noNewStreams`(v1) @signature `Lokhttp3/internal/connection/StreamAllocation;.noNewStreams:()V` @kind virtual;
  #L2d50c4.  call `finishRequest`(v0) @signature `Lokhttp3/internal/http/HttpCodec;.finishRequest:()V` @kind interface;
  #L2d50ca.  v2:= 0I;
  #L2d50cc.  if v7 != 0 then goto L2d50ee;
  #L2d50d0.  call temp:= `eventListener`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.eventListener:()Lokhttp3/EventListener;` @kind virtual;
  #L2d50d6.  v6:= temp @kind object;
  #L2d50d8.  call temp:= `call`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.call:()Lokhttp3/Call;` @kind virtual;
  #L2d50de.  v7:= temp @kind object;
  #L2d50e0.  call `responseHeadersStart`(v6, v7) @signature `Lokhttp3/EventListener;.responseHeadersStart:(Lokhttp3/Call;)V` @kind virtual;
  #L2d50e6.  call temp:= `readResponseHeaders`(v0, v2) @signature `Lokhttp3/internal/http/HttpCodec;.readResponseHeaders:(Z)Lokhttp3/Response$Builder;` @kind interface;
  #L2d50ec.  v7:= temp @kind object;
  #L2d50ee.  call temp:= `request`(v7, v3) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2d50f4.  v6:= temp @kind object;
  #L2d50f6.  call temp:= `connection`(v1) @signature `Lokhttp3/internal/connection/StreamAllocation;.connection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L2d50fc.  v7:= temp @kind object;
  #L2d50fe.  call temp:= `handshake`(v7) @signature `Lokhttp3/internal/connection/RealConnection;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L2d5104.  v7:= temp @kind object;
  #L2d5106.  call temp:= `handshake`(v6, v7) @signature `Lokhttp3/Response$Builder;.handshake:(Lokhttp3/Handshake;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2d510c.  v6:= temp @kind object;
  #L2d510e.  call temp:= `sentRequestAtMillis`(v6, v4) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L2d5114.  v6:= temp @kind object;
  #L2d5116.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L2d511c.  v7:= temp @kind wide;
  #L2d511e.  call temp:= `receivedResponseAtMillis`(v6, v7) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L2d5124.  v6:= temp @kind object;
  #L2d5126.  call temp:= `build`(v6) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L2d512c.  v6:= temp @kind object;
  #L2d512e.  call temp:= `code`(v6) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L2d5134.  v7:= temp;
  #L2d5136.  v8:= 100I;
  #L2d513a.  if v7 != v8 then goto L2d518e;
  #L2d513e.  call temp:= `readResponseHeaders`(v0, v2) @signature `Lokhttp3/internal/http/HttpCodec;.readResponseHeaders:(Z)Lokhttp3/Response$Builder;` @kind interface;
  #L2d5144.  v2:= temp @kind object;
  #L2d5146.  call temp:= `request`(v2, v3) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2d514c.  v2:= temp @kind object;
  #L2d514e.  call temp:= `connection`(v1) @signature `Lokhttp3/internal/connection/StreamAllocation;.connection:()Lokhttp3/internal/connection/RealConnection;` @kind virtual;
  #L2d5154.  v3:= temp @kind object;
  #L2d5156.  call temp:= `handshake`(v3) @signature `Lokhttp3/internal/connection/RealConnection;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L2d515c.  v3:= temp @kind object;
  #L2d515e.  call temp:= `handshake`(v2, v3) @signature `Lokhttp3/Response$Builder;.handshake:(Lokhttp3/Handshake;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2d5164.  v2:= temp @kind object;
  #L2d5166.  call temp:= `sentRequestAtMillis`(v2, v4) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L2d516c.  v2:= temp @kind object;
  #L2d516e.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L2d5174.  v3:= temp @kind wide;
  #L2d5176.  call temp:= `receivedResponseAtMillis`(v2, v3) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L2d517c.  v2:= temp @kind object;
  #L2d517e.  call temp:= `build`(v2) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L2d5184.  v6:= temp @kind object;
  #L2d5186.  call temp:= `code`(v6) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L2d518c.  v7:= temp;
  #L2d518e.  call temp:= `eventListener`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.eventListener:()Lokhttp3/EventListener;` @kind virtual;
  #L2d5194.  v2:= temp @kind object;
  #L2d5196.  call temp:= `call`(v12) @signature `Lokhttp3/internal/http/RealInterceptorChain;.call:()Lokhttp3/Call;` @kind virtual;
  #L2d519c.  v12:= temp @kind object;
  #L2d519e.  call `responseHeadersEnd`(v2, v12, v6) @signature `Lokhttp3/EventListener;.responseHeadersEnd:(Lokhttp3/Call;Lokhttp3/Response;)V` @kind virtual;
  #L2d51a4.  v12:= v11.`okhttp3.internal.http.CallServerInterceptor.forWebSocket` @type ^`boolean` @kind boolean;
  #L2d51a8.  if v12 == 0 then goto L2d51c2;
  #L2d51ac.  v12:= 101I;
  #L2d51b0.  if v7 != v12 then goto L2d51c2;
  #L2d51b4.  call temp:= `newBuilder`(v6) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L2d51ba.  v12:= temp @kind object;
  #L2d51bc.  v0:= `@@okhttp3.internal.Util.EMPTY_RESPONSE` @type ^`okhttp3.ResponseBody` @kind object;
  #L2d51c0.  goto L2d51d2;
  #L2d51c2.  call temp:= `newBuilder`(v6) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L2d51c8.  v12:= temp @kind object;
  #L2d51ca.  call temp:= `openResponseBody`(v0, v6) @signature `Lokhttp3/internal/http/HttpCodec;.openResponseBody:(Lokhttp3/Response;)Lokhttp3/ResponseBody;` @kind interface;
  #L2d51d0.  v0:= temp @kind object;
  #L2d51d2.  call temp:= `body`(v12, v0) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2d51d8.  v12:= temp @kind object;
  #L2d51da.  call temp:= `build`(v12) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L2d51e0.  v12:= temp @kind object;
  #L2d51e2.  call temp:= `request`(v12) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L2d51e8.  v0:= temp @kind object;
  #L2d51ea.  v2:= "Connection" @kind object;
  #L2d51ee.  call temp:= `header`(v0, v2) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2d51f4.  v0:= temp @kind object;
  #L2d51f6.  v3:= "close" @kind object;
  #L2d51fa.  call temp:= `equalsIgnoreCase`(v3, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2d5200.  v0:= temp;
  #L2d5202.  if v0 != 0 then goto L2d521a;
  #L2d5206.  call temp:= `header`(v12, v2) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2d520c.  v0:= temp @kind object;
  #L2d520e.  call temp:= `equalsIgnoreCase`(v3, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2d5214.  v0:= temp;
  #L2d5216.  if v0 == 0 then goto L2d5220;
  #L2d521a.  call `noNewStreams`(v1) @signature `Lokhttp3/internal/connection/StreamAllocation;.noNewStreams:()V` @kind virtual;
  #L2d5220.  v0:= 204I;
  #L2d5224.  if v7 == v0 then goto L2d5230;
  #L2d5228.  v0:= 205I;
  #L2d522c.  if v7 != v0 then goto L2d524c;
  #L2d5230.  call temp:= `body`(v12) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L2d5236.  v0:= temp @kind object;
  #L2d5238.  call temp:= `contentLength`(v0) @signature `Lokhttp3/ResponseBody;.contentLength:()J` @kind virtual;
  #L2d523e.  v0:= temp @kind wide;
  #L2d5240.  v2:= 0L;
  #L2d5244.  v4:= lcmp(v0, v2);
  #L2d5248.  if v4 > 0 then goto L2d524e;
  #L2d524c.  return v12 @kind object;
  #L2d524e.  v0:= new `java.net.ProtocolException`;
  #L2d5252.  v1:= new `java.lang.StringBuilder`;
  #L2d5256.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d525c.  v2:= "HTTP " @kind object;
  #L2d5260.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d5266.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d526c.  v2:= " had non-zero Content-Length: " @kind object;
  #L2d5270.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d5276.  call temp:= `body`(v12) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L2d527c.  v12:= temp @kind object;
  #L2d527e.  call temp:= `contentLength`(v12) @signature `Lokhttp3/ResponseBody;.contentLength:()J` @kind virtual;
  #L2d5284.  v2:= temp @kind wide;
  #L2d5286.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d528c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d5292.  v12:= temp @kind object;
  #L2d5294.  call `<init>`(v0, v12) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d529a.  throw v0;
}
