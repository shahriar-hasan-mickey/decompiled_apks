record `okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.concurrent.atomic.AtomicBoolean` `okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @AccessFlag PRIVATE_FINAL;
  `byte`[] `okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixExceptionListBytes` @AccessFlag PRIVATE;
  `byte`[] `okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @AccessFlag PRIVATE;
  `java.util.concurrent.CountDownLatch` `okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EMPTY_RULE` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte` `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EXCEPTION_MARKER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.PREVAILING_RULE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.PUBLIC_SUFFIX_RESOURCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.WILDCARD_LABEL` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.internal.publicsuffix.PublicSuffixDatabase` `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.instance` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2def64.  v0:= 1I;
  #L2def66.  v1:= new `byte`[v0];
  #L2def6a.  v2:= 42I;
  #L2def6e.  v3:= 0I;
  #L2def70.  v1[v3]:= v2 @kind byte;
  #L2def74.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.WILDCARD_LABEL` @type ^`byte`[] := v1 @kind object;
  #L2def78.  v1:= new `java.lang.String`[v3];
  #L2def7c.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EMPTY_RULE` @type ^`java.lang.String`[] := v1 @kind object;
  #L2def80.  v0:= new `java.lang.String`[v0];
  #L2def84.  v1:= "*" @kind object;
  #L2def88.  v0[v3]:= v1 @kind object;
  #L2def8c.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.PREVAILING_RULE` @type ^`java.lang.String`[] := v0 @kind object;
  #L2def90.  v0:= new `okhttp3.internal.publicsuffix.PublicSuffixDatabase`;
  #L2def94.  call `<init>`(v0) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<init>:()V` @kind direct;
  #L2def9a.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.instance` @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` := v0 @kind object;
  #L2def9e.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v2 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2defb0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2defb6.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L2defba.  v1:= 0I;
  #L2defbc.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:(Z)V` @kind direct;
  #L2defc2.  v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L2defc6.  v0:= new `java.util.concurrent.CountDownLatch`;
  #L2defca.  v1:= 1I;
  #L2defcc.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/CountDownLatch;.<init>:(I)V` @kind direct;
  #L2defd2.  v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @type ^`java.util.concurrent.CountDownLatch` := v0 @kind object;
  #L2defd6.  return @kind void;
}
procedure `java.lang.String` `binarySearchBytes`(`byte`[] v17 @kind object, `byte`[][] v18 @kind object, `int` v19 ) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.binarySearchBytes:([B[[BI)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L2deb94.  v0:= v17 @kind object;
  #L2deb98.  v1:= v18 @kind object;
  #L2deb9c.  v2:= length @variable v0;
  #L2deb9e.  v3:= 0I;
  #L2deba0.  v4:= 0I;
  #L2deba2.  if v4 >= v2 then goto L2deca4;
  #L2deba6.  v5:= v4 + v2 @kind int;
  #L2debaa.  v5:= v5 / 2;
  #L2debae.  v6:= 10I;
  #L2debb2.  v7:= -1I;
  #L2debb4.  if v5 <= v7 then goto L2debc6;
  #L2debb8.  v8:= v0[v5] @kind byte;
  #L2debbc.  if v8 == v6 then goto L2debc6;
  #L2debc0.  v5:= v5 + -1;
  #L2debc4.  goto L2debae;
  #L2debc6.  v5:= v5 + 1;
  #L2debca.  v8:= 1I;
  #L2debcc.  v9:= 1I;
  #L2debce.  v10:= v5 + v9 @kind int;
  #L2debd2.  v11:= v0[v10] @kind byte;
  #L2debd6.  if v11 == v6 then goto L2debe0;
  #L2debda.  v9:= v9 + 1;
  #L2debde.  goto L2debce;
  #L2debe0.  v6:= v10 - v5 @kind int;
  #L2debe4.  v11:= v19;
  #L2debe8.  v9:= 0I;
  #L2debea.  v12:= 0I;
  #L2debec.  v13:= 0I;
  #L2debee.  if v9 == 0 then goto L2debfa;
  #L2debf2.  v9:= 46I;
  #L2debf6.  v14:= 0I;
  #L2debf8.  goto L2dec10;
  #L2debfa.  v14:= v1[v11] @kind object;
  #L2debfe.  v14:= v14[v12] @kind byte;
  #L2dec02.  v14:= v14 ^& 255;
  #L2dec06.  v16:= v14;
  #L2dec0a.  v14:= v9;
  #L2dec0c.  v9:= v16;
  #L2dec10.  v15:= v5 + v13 @kind int;
  #L2dec14.  v15:= v0[v15] @kind byte;
  #L2dec18.  v15:= v15 ^& 255;
  #L2dec1c.  v9:= v9 - v15 @kind int;
  #L2dec1e.  if v9 == 0 then goto L2dec24;
  #L2dec22.  goto L2dec44;
  #L2dec24.  v13:= v13 + 1;
  #L2dec28.  v12:= v12 + 1;
  #L2dec2c.  if v13 != v6 then goto L2dec32;
  #L2dec30.  goto L2dec44;
  #L2dec32.  v15:= v1[v11] @kind object;
  #L2dec36.  v15:= length @variable v15;
  #L2dec38.  if v15 != v12 then goto L2deca0;
  #L2dec3c.  v14:= length @variable v1;
  #L2dec3e.  v14:= v14 - v8 @kind int;
  #L2dec40.  if v11 != v14 then goto L2dec96;
  #L2dec44.  if v9 >= 0 then goto L2dec50;
  #L2dec48.  v5:= v5 + -1;
  #L2dec4c.  v2:= v5;
  #L2dec4e.  goto L2deba2;
  #L2dec50.  if v9 <= 0 then goto L2dec5a;
  #L2dec54.  v4:= v10 + 1;
  #L2dec58.  goto L2deba2;
  #L2dec5a.  v7:= v6 - v13 @kind int;
  #L2dec5e.  v8:= v1[v11] @kind object;
  #L2dec62.  v8:= length @variable v8;
  #L2dec64.  v8:= v8 - v12 @kind int;
  #L2dec66.  v11:= v11 + 1;
  #L2dec6a.  v9:= length @variable v1;
  #L2dec6c.  if v11 >= v9 then goto L2dec7a;
  #L2dec70.  v9:= v1[v11] @kind object;
  #L2dec74.  v9:= length @variable v9;
  #L2dec76.  v8:= v8 + v9 @kind int;
  #L2dec78.  goto L2dec66;
  #L2dec7a.  if v8 >= v7 then goto L2dec80;
  #L2dec7e.  goto L2dec48;
  #L2dec80.  if v8 <= v7 then goto L2dec86;
  #L2dec84.  goto L2dec54;
  #L2dec86.  v1:= new `java.lang.String`;
  #L2dec8a.  v2:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L2dec8e.  call `<init>`(v1, v0, v5, v6, v2) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L2dec94.  goto L2deca6;
  #L2dec96.  v11:= v11 + 1;
  #L2dec9a.  v9:= 1I;
  #L2dec9c.  v12:= -1I;
  #L2dec9e.  goto L2debee;
  #L2deca0.  v9:= v14;
  #L2deca2.  goto L2debee;
  #L2deca4.  v1:= 0I;
  #L2deca6.  return v1 @kind object;
}
procedure `java.lang.String`[] `findMatchingRule`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v8 @kind this, `java.lang.String`[] v9 @kind object) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.findMatchingRule:([Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2ded88.  v0:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L2ded8c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L2ded92.  v0:= temp;
  #L2ded94.  v1:= 0I;
  #L2ded96.  v2:= 1I;
  #L2ded98.  if v0 != 0 then goto L2dedb4;
  #L2ded9c.  v0:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.listRead` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L2deda0.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L2deda6.  v0:= temp;
  #L2deda8.  if v0 == 0 then goto L2dedb4;
  #L2dedac.  call `readTheListUninterruptibly`(v8) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.readTheListUninterruptibly:()V` @kind direct;
  #L2dedb2.  goto L2dedce;
  #L2dedb4.  v0:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L2dedb8.  call `await`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.await:()V` @kind virtual;
  #L2dedbe.  goto L2dedce;
  #L2dedc0.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L2dedc6.  v0:= temp @kind object;
  #L2dedc8.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L2dedce.  @monitorenter v8
  #L2dedd0.  v0:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] @kind object;
  #L2dedd4.  if v0 == 0 then goto L2def02;
  #L2dedd8.  @monitorexit v8
  #L2dedda.  v0:= length @variable v9;
  #L2deddc.  v3:= new `byte`[][v0];
  #L2dede0.  v4:= 0I;
  #L2dede2.  v5:= length @variable v9;
  #L2dede4.  if v4 >= v5 then goto L2dee02;
  #L2dede8.  v5:= v9[v4] @kind object;
  #L2dedec.  v6:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L2dedf0.  call temp:= `getBytes`(v5, v6) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L2dedf6.  v5:= temp @kind object;
  #L2dedf8.  v3[v4]:= v5 @kind object;
  #L2dedfc.  v4:= v4 + 1;
  #L2dee00.  goto L2dede2;
  #L2dee02.  v9:= 0I;
  #L2dee04.  v4:= 0I;
  #L2dee06.  if v9 >= v0 then goto L2dee22;
  #L2dee0a.  v5:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] @kind object;
  #L2dee0e.  call temp:= `binarySearchBytes`(v5, v3, v9) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.binarySearchBytes:([B[[BI)Ljava/lang/String;` @kind static;
  #L2dee14.  v5:= temp @kind object;
  #L2dee16.  if v5 == 0 then goto L2dee1c;
  #L2dee1a.  goto L2dee24;
  #L2dee1c.  v9:= v9 + 1;
  #L2dee20.  goto L2dee04;
  #L2dee22.  v5:= v4 @kind object;
  #L2dee24.  if v0 <= v2 then goto L2dee5e;
  #L2dee28.  call temp:= `clone`(v3) @signature `[[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L2dee2e.  v9:= temp @kind object;
  #L2dee30.  v9:= (`byte`[][]) v9 @kind object;
  #L2dee34.  v6:= 0I;
  #L2dee36.  v7:= length @variable v9;
  #L2dee38.  v7:= v7 - v2 @kind int;
  #L2dee3a.  if v6 >= v7 then goto L2dee5e;
  #L2dee3e.  v7:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.WILDCARD_LABEL` @type ^`byte`[] @kind object;
  #L2dee42.  v9[v6]:= v7 @kind object;
  #L2dee46.  v7:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] @kind object;
  #L2dee4a.  call temp:= `binarySearchBytes`(v7, v9, v6) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.binarySearchBytes:([B[[BI)Ljava/lang/String;` @kind static;
  #L2dee50.  v7:= temp @kind object;
  #L2dee52.  if v7 == 0 then goto L2dee58;
  #L2dee56.  goto L2dee60;
  #L2dee58.  v6:= v6 + 1;
  #L2dee5c.  goto L2dee36;
  #L2dee5e.  v7:= v4 @kind object;
  #L2dee60.  if v7 == 0 then goto L2dee86;
  #L2dee64.  v9:= v0 + -1;
  #L2dee68.  if v1 >= v9 then goto L2dee86;
  #L2dee6c.  v9:= v8.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixExceptionListBytes` @type ^`byte`[] @kind object;
  #L2dee70.  call temp:= `binarySearchBytes`(v9, v3, v1) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.binarySearchBytes:([B[[BI)Ljava/lang/String;` @kind static;
  #L2dee76.  v9:= temp @kind object;
  #L2dee78.  if v9 == 0 then goto L2dee80;
  #L2dee7c.  v4:= v9 @kind object;
  #L2dee7e.  goto L2dee86;
  #L2dee80.  v1:= v1 + 1;
  #L2dee84.  goto L2dee64;
  #L2dee86.  if v4 == 0 then goto L2deeba;
  #L2dee8a.  v9:= new `java.lang.StringBuilder`;
  #L2dee8e.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2dee94.  v0:= "!" @kind object;
  #L2dee98.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dee9e.  call temp:= `append`(v9, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2deea4.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2deeaa.  v9:= temp @kind object;
  #L2deeac.  v0:= "\\." @kind object;
  #L2deeb0.  call temp:= `split`(v9, v0) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L2deeb6.  v9:= temp @kind object;
  #L2deeb8.  return v9 @kind object;
  #L2deeba.  if v5 != 0 then goto L2deec8;
  #L2deebe.  if v7 != 0 then goto L2deec8;
  #L2deec2.  v9:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.PREVAILING_RULE` @type ^`java.lang.String`[] @kind object;
  #L2deec6.  return v9 @kind object;
  #L2deec8.  if v5 == 0 then goto L2deeda;
  #L2deecc.  v9:= "\\." @kind object;
  #L2deed0.  call temp:= `split`(v5, v9) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L2deed6.  v9:= temp @kind object;
  #L2deed8.  goto L2deede;
  #L2deeda.  v9:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EMPTY_RULE` @type ^`java.lang.String`[] @kind object;
  #L2deede.  if v7 == 0 then goto L2deef0;
  #L2deee2.  v0:= "\\." @kind object;
  #L2deee6.  call temp:= `split`(v7, v0) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L2deeec.  v0:= temp @kind object;
  #L2deeee.  goto L2deef4;
  #L2deef0.  v0:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.EMPTY_RULE` @type ^`java.lang.String`[] @kind object;
  #L2deef4.  v1:= length @variable v9;
  #L2deef6.  v2:= length @variable v0;
  #L2deef8.  if v1 <= v2 then goto L2deefe;
  #L2deefc.  goto L2def00;
  #L2deefe.  v9:= v0 @kind object;
  #L2def00.  return v9 @kind object;
  #L2def02.  v9:= new `java.lang.IllegalStateException`;
  #L2def06.  v0:= "Unable to load publicsuffixes.gz resource from the classpath." @kind object;
  #L2def0a.  call `<init>`(v9, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2def10.  throw v9;
  #L2def12.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2def14.  @monitorexit v8
  #L2def16.  goto L2def1a;
  #L2def18.  throw v9;
  #L2def1a.  goto L2def18;
  catch `java.lang.InterruptedException` @[L2dedb4..L2dedbe] goto L2dedc0;
  catch `java.lang.Throwable` @[L2dedd0..L2dedda] goto L2def12;
  catch `java.lang.Throwable` @[L2def02..L2def16] goto L2def12;
}
procedure `okhttp3.internal.publicsuffix.PublicSuffixDatabase` `get`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.get:()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2def4c.  v0:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.instance` @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind object;
  #L2def50.  return v0 @kind object;
}
procedure `void` `readTheList`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v3 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.readTheList:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2defe8.  v0:= constclass @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind object;
  #L2defec.  v1:= "publicsuffixes.gz" @kind object;
  #L2deff0.  call temp:= `getResourceAsStream`(v0, v1) @signature `Ljava/lang/Class;.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;` @kind virtual;
  #L2deff6.  v0:= temp @kind object;
  #L2deff8.  if v0 != 0 then goto L2deffe;
  #L2deffc.  return @kind void;
  #L2deffe.  v1:= new `okio.GzipSource`;
  #L2df002.  call temp:= `source`(v0) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;)Lokio/Source;` @kind static;
  #L2df008.  v0:= temp @kind object;
  #L2df00a.  call `<init>`(v1, v0) @signature `Lokio/GzipSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L2df010.  call temp:= `buffer`(v1) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L2df016.  v0:= temp @kind object;
  #L2df018.  call temp:= `readInt`(v0) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L2df01e.  v1:= temp;
  #L2df020.  v1:= new `byte`[v1];
  #L2df024.  call `readFully`(v0, v1) @signature `Lokio/BufferedSource;.readFully:([B)V` @kind interface;
  #L2df02a.  call temp:= `readInt`(v0) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L2df030.  v2:= temp;
  #L2df032.  v2:= new `byte`[v2];
  #L2df036.  call `readFully`(v0, v2) @signature `Lokio/BufferedSource;.readFully:([B)V` @kind interface;
  #L2df03c.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L2df042.  @monitorenter v3
  #L2df044.  v3.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixListBytes` @type ^`byte`[] := v1 @kind object;
  #L2df048.  v3.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.publicSuffixExceptionListBytes` @type ^`byte`[] := v2 @kind object;
  #L2df04c.  @monitorexit v3
  #L2df04e.  v0:= v3.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.readCompleteLatch` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L2df052.  call `countDown`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L2df058.  return @kind void;
  #L2df05a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2df05c.  @monitorexit v3
  #L2df05e.  throw v0;
  #L2df060.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2df062.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L2df068.  throw v1;
  catch `java.lang.Throwable` @[L2df018..L2df03c] goto L2df060;
  catch `java.lang.Throwable` @[L2df044..L2df04e] goto L2df05a;
  catch `java.lang.Throwable` @[L2df05c..L2df05e] goto L2df05a;
}
procedure `void` `readTheListUninterruptibly`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v5 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.readTheListUninterruptibly:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2df09c.  v0:= 0I;
  #L2df09e.  call `readTheList`(v5) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.readTheList:()V` @kind direct;
  #L2df0a4.  if v0 == 0 then goto L2df0b6;
  #L2df0a8.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L2df0ae.  v0:= temp @kind object;
  #L2df0b0.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L2df0b6.  return @kind void;
  #L2df0b8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2df0ba.  goto L2df0f0;
  #L2df0bc.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L2df0be.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L2df0c4.  v2:= temp @kind object;
  #L2df0c6.  v3:= 5I;
  #L2df0c8.  v4:= "Failed to read public suffix list" @kind object;
  #L2df0cc.  call `log`(v2, v3, v4, v1) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L2df0d2.  if v0 == 0 then goto L2df0e4;
  #L2df0d6.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L2df0dc.  v0:= temp @kind object;
  #L2df0de.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L2df0e4.  return @kind void;
  #L2df0e6.  call temp:= `interrupted`() @signature `Ljava/lang/Thread;.interrupted:()Z` @kind static;
  #L2df0ec.  v0:= 1I;
  #L2df0ee.  goto L2df09e;
  #L2df0f0.  if v0 == 0 then goto L2df102;
  #L2df0f4.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L2df0fa.  v0:= temp @kind object;
  #L2df0fc.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L2df102.  goto L2df106;
  #L2df104.  throw v1;
  #L2df106.  goto L2df104;
  catch `java.io.InterruptedIOException` @[L2df09e..L2df0a4] goto L2df0e6;
  catch `java.io.IOException` @[L2df09e..L2df0a4] goto L2df0bc;
  catch `java.lang.Throwable` @[L2df09e..L2df0a4] goto L2df0b8;
  catch `java.lang.Throwable` @[L2df0be..L2df0d2] goto L2df0b8;
  catch `java.lang.Throwable` @[L2df0e6..L2df0ec] goto L2df0b8;
}
procedure `java.lang.String` `getEffectiveTldPlusOne`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.getEffectiveTldPlusOne:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2decb8.  if v8 == 0 then goto L2ded64;
  #L2decbc.  call temp:= `toUnicode`(v8) @signature `Ljava/net/IDN;.toUnicode:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L2decc2.  v0:= temp @kind object;
  #L2decc4.  v1:= "\\." @kind object;
  #L2decc8.  call temp:= `split`(v0, v1) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L2decce.  v0:= temp @kind object;
  #L2decd0.  call temp:= `findMatchingRule`(v7, v0) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.findMatchingRule:([Ljava/lang/String;)[Ljava/lang/String;` @kind direct;
  #L2decd6.  v2:= temp @kind object;
  #L2decd8.  v3:= length @variable v0;
  #L2decda.  v4:= length @variable v2;
  #L2decdc.  v5:= 33I;
  #L2dece0.  v6:= 0I;
  #L2dece2.  if v3 != v4 then goto L2decfa;
  #L2dece6.  v3:= v2[v6] @kind object;
  #L2decea.  call temp:= `charAt`(v3, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2decf0.  v3:= temp;
  #L2decf2.  if v3 == v5 then goto L2decfa;
  #L2decf6.  v8:= 0I;
  #L2decf8.  return v8 @kind object;
  #L2decfa.  v3:= v2[v6] @kind object;
  #L2decfe.  call temp:= `charAt`(v3, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2ded04.  v3:= temp;
  #L2ded06.  v0:= length @variable v0;
  #L2ded08.  v2:= length @variable v2;
  #L2ded0a.  if v3 != v5 then goto L2ded10;
  #L2ded0e.  goto L2ded14;
  #L2ded10.  v2:= v2 + 1;
  #L2ded14.  v0:= v0 - v2 @kind int;
  #L2ded16.  v2:= new `java.lang.StringBuilder`;
  #L2ded1a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ded20.  call temp:= `split`(v8, v1) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L2ded26.  v8:= temp @kind object;
  #L2ded28.  v1:= length @variable v8;
  #L2ded2a.  if v0 >= v1 then goto L2ded48;
  #L2ded2e.  v1:= v8[v0] @kind object;
  #L2ded32.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ded38.  v1:= 46I;
  #L2ded3c.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ded42.  v0:= v0 + 1;
  #L2ded46.  goto L2ded28;
  #L2ded48.  call temp:= `length`(v2) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L2ded4e.  v8:= temp;
  #L2ded50.  v8:= v8 + -1;
  #L2ded54.  call temp:= `deleteCharAt`(v2, v8) @signature `Ljava/lang/StringBuilder;.deleteCharAt:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ded5a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ded60.  v8:= temp @kind object;
  #L2ded62.  return v8 @kind object;
  #L2ded64.  v8:= new `java.lang.NullPointerException`;
  #L2ded68.  v0:= "domain == null" @kind object;
  #L2ded6c.  call `<init>`(v8, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ded72.  goto L2ded76;
  #L2ded74.  throw v8;
  #L2ded76.  goto L2ded74;
}
