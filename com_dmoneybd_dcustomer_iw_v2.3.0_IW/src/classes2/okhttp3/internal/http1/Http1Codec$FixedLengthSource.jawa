record `okhttp3.internal.http1.Http1Codec$FixedLengthSource` @kind class @AccessFlag  extends `okhttp3.internal.http1.Http1Codec$AbstractSource` @kind class {
  `okhttp3.internal.http1.Http1Codec` `okhttp3.internal.http1.Http1Codec$FixedLengthSource.b` @AccessFlag FINAL_SYNTHETIC;
  `long` `okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.internal.http1.Http1Codec$FixedLengthSource` v3 @kind this, `okhttp3.internal.http1.Http1Codec` v4 @kind object, `long` v5 ) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSource;.<init>:(Lokhttp3/internal/http1/Http1Codec;J)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2d7704.  v3.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.b` @type ^`okhttp3.internal.http1.Http1Codec` := v4 @kind object;
  #L2d7708.  v0:= 0I;
  #L2d770a.  call `<init>`(v3, v4, v0) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.<init>:(Lokhttp3/internal/http1/Http1Codec;Lokhttp3/internal/http1/Http1Codec$1;)V` @kind direct;
  #L2d7710.  v3.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` := v5 @kind wide;
  #L2d7714.  v1:= 0L;
  #L2d7718.  v4:= lcmp(v5, v1);
  #L2d771c.  if v4 != 0 then goto L2d7728;
  #L2d7720.  v4:= 1I;
  #L2d7722.  call `endOfInput`(v3, v4, v0) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.endOfInput:(ZLjava/io/IOException;)V` @kind virtual;
  #L2d7728.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.http1.Http1Codec$FixedLengthSource` v5 @kind this) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2d773c.  v0:= v5.`okhttp3.internal.http1.Http1Codec$AbstractSource.closed` @type ^`boolean` @kind boolean;
  #L2d7740.  if v0 == 0 then goto L2d7746;
  #L2d7744.  return @kind void;
  #L2d7746.  v0:= v5.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L2d774a.  v2:= 0L;
  #L2d774e.  v4:= lcmp(v0, v2);
  #L2d7752.  if v4 == 0 then goto L2d7774;
  #L2d7756.  v0:= 100I;
  #L2d775a.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2d775e.  call temp:= `discard`(v5, v0, v1) @signature `Lokhttp3/internal/Util;.discard:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L2d7764.  v0:= temp;
  #L2d7766.  if v0 != 0 then goto L2d7774;
  #L2d776a.  v0:= 0I;
  #L2d776c.  v1:= 0I;
  #L2d776e.  call `endOfInput`(v5, v0, v1) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.endOfInput:(ZLjava/io/IOException;)V` @kind virtual;
  #L2d7774.  v0:= 1I;
  #L2d7776.  v5.`okhttp3.internal.http1.Http1Codec$AbstractSource.closed` @type ^`boolean` := v0 @kind boolean;
  #L2d777a.  return @kind void;
}
procedure `long` `read`(`okhttp3.internal.http1.Http1Codec$FixedLengthSource` v7 @kind this, `okio.Buffer` v8 @kind object, `long` v9 ) @signature `Lokhttp3/internal/http1/Http1Codec$FixedLengthSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2d7640.  v0:= 0L;
  #L2d7644.  v2:= lcmp(v9, v0);
  #L2d7648.  if v2 < 0 then goto L2d76c4;
  #L2d764c.  v2:= v7.`okhttp3.internal.http1.Http1Codec$AbstractSource.closed` @type ^`boolean` @kind boolean;
  #L2d7650.  if v2 != 0 then goto L2d76b4;
  #L2d7654.  v2:= v7.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L2d7658.  v4:= -1L;
  #L2d765c.  v6:= lcmp(v2, v0);
  #L2d7660.  if v6 != 0 then goto L2d7666;
  #L2d7664.  return v4 @kind wide;
  #L2d7666.  call temp:= `min`(v2, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L2d766c.  v9:= temp @kind wide;
  #L2d766e.  call temp:= `read`(v7, v8, v9) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.read:(Lokio/Buffer;J)J` @kind super;
  #L2d7674.  v8:= temp @kind wide;
  #L2d7676.  v10:= lcmp(v8, v4);
  #L2d767a.  if v10 == 0 then goto L2d769c;
  #L2d767e.  v2:= v7.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L2d7682.  v2:= v2 - v8 @kind long;
  #L2d7684.  v7.`okhttp3.internal.http1.Http1Codec$FixedLengthSource.bytesRemaining` @type ^`long` := v2 @kind wide;
  #L2d7688.  v10:= lcmp(v2, v0);
  #L2d768c.  if v10 != 0 then goto L2d769a;
  #L2d7690.  v10:= 1I;
  #L2d7692.  v0:= 0I;
  #L2d7694.  call `endOfInput`(v7, v10, v0) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.endOfInput:(ZLjava/io/IOException;)V` @kind virtual;
  #L2d769a.  return v8 @kind wide;
  #L2d769c.  v8:= new `java.net.ProtocolException`;
  #L2d76a0.  v9:= "unexpected end of stream" @kind object;
  #L2d76a4.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d76aa.  v9:= 0I;
  #L2d76ac.  call `endOfInput`(v7, v9, v8) @signature `Lokhttp3/internal/http1/Http1Codec$AbstractSource;.endOfInput:(ZLjava/io/IOException;)V` @kind virtual;
  #L2d76b2.  throw v8;
  #L2d76b4.  v8:= new `java.lang.IllegalStateException`;
  #L2d76b8.  v9:= "closed" @kind object;
  #L2d76bc.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d76c2.  throw v8;
  #L2d76c4.  v8:= new `java.lang.IllegalArgumentException`;
  #L2d76c8.  v0:= new `java.lang.StringBuilder`;
  #L2d76cc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d76d2.  v1:= "byteCount < 0: " @kind object;
  #L2d76d6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d76dc.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d76e2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d76e8.  v9:= temp @kind object;
  #L2d76ea.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d76f0.  throw v8;
}
