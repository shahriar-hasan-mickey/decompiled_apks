record `okhttp3.internal.http1.Http1Codec$ChunkedSink` @kind class @AccessFlag FINAL extends `okio.Sink` @kind interface {
  `okhttp3.internal.http1.Http1Codec` `okhttp3.internal.http1.Http1Codec$ChunkedSink.a` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `okhttp3.internal.http1.Http1Codec$ChunkedSink.closed` @AccessFlag PRIVATE;
  `okio.ForwardingTimeout` `okhttp3.internal.http1.Http1Codec$ChunkedSink.timeout` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.http1.Http1Codec$ChunkedSink` v1 @kind this, `okhttp3.internal.http1.Http1Codec` v2 @kind object) @signature `Lokhttp3/internal/http1/Http1Codec$ChunkedSink;.<init>:(Lokhttp3/internal/http1/Http1Codec;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2d70d4.  v1.`okhttp3.internal.http1.Http1Codec$ChunkedSink.a` @type ^`okhttp3.internal.http1.Http1Codec` := v2 @kind object;
  #L2d70d8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d70de.  v0:= new `okio.ForwardingTimeout`;
  #L2d70e2.  v2:= v2.`okhttp3.internal.http1.Http1Codec.d` @type ^`okio.BufferedSink` @kind object;
  #L2d70e6.  call temp:= `timeout`(v2) @signature `Lokio/Sink;.timeout:()Lokio/Timeout;` @kind interface;
  #L2d70ec.  v2:= temp @kind object;
  #L2d70ee.  call `<init>`(v0, v2) @signature `Lokio/ForwardingTimeout;.<init>:(Lokio/Timeout;)V` @kind direct;
  #L2d70f4.  v1.`okhttp3.internal.http1.Http1Codec$ChunkedSink.timeout` @type ^`okio.ForwardingTimeout` := v0 @kind object;
  #L2d70f8.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.http1.Http1Codec$ChunkedSink` v2 @kind this) @signature `Lokhttp3/internal/http1/Http1Codec$ChunkedSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2d710c.  @monitorenter v2
  #L2d710e.  v0:= v2.`okhttp3.internal.http1.Http1Codec$ChunkedSink.closed` @type ^`boolean` @kind boolean;
  #L2d7112.  if v0 == 0 then goto L2d711a;
  #L2d7116.  @monitorexit v2
  #L2d7118.  return @kind void;
  #L2d711a.  v0:= 1I;
  #L2d711c.  v2.`okhttp3.internal.http1.Http1Codec$ChunkedSink.closed` @type ^`boolean` := v0 @kind boolean;
  #L2d7120.  v0:= v2.`okhttp3.internal.http1.Http1Codec$ChunkedSink.a` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L2d7124.  v0:= v0.`okhttp3.internal.http1.Http1Codec.d` @type ^`okio.BufferedSink` @kind object;
  #L2d7128.  v1:= "0\r\n\r\n" @kind object;
  #L2d712c.  call temp:= `writeUtf8`(v0, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L2d7132.  v0:= v2.`okhttp3.internal.http1.Http1Codec$ChunkedSink.a` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L2d7136.  v1:= v2.`okhttp3.internal.http1.Http1Codec$ChunkedSink.timeout` @type ^`okio.ForwardingTimeout` @kind object;
  #L2d713a.  call `a`(v0, v1) @signature `Lokhttp3/internal/http1/Http1Codec;.a:(Lokio/ForwardingTimeout;)V` @kind virtual;
  #L2d7140.  v0:= v2.`okhttp3.internal.http1.Http1Codec$ChunkedSink.a` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L2d7144.  v1:= 3I;
  #L2d7146.  v0.`okhttp3.internal.http1.Http1Codec.e` @type ^`int` := v1;
  #L2d714a.  @monitorexit v2
  #L2d714c.  return @kind void;
  #L2d714e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2d7150.  @monitorexit v2
  #L2d7152.  throw v0;
  catch `java.lang.Throwable` @[L2d710e..L2d7112] goto L2d714e;
  catch `java.lang.Throwable` @[L2d711c..L2d714a] goto L2d714e;
}
procedure `void` `flush`(`okhttp3.internal.http1.Http1Codec$ChunkedSink` v1 @kind this) @signature `Lokhttp3/internal/http1/Http1Codec$ChunkedSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d7178.  @monitorenter v1
  #L2d717a.  v0:= v1.`okhttp3.internal.http1.Http1Codec$ChunkedSink.closed` @type ^`boolean` @kind boolean;
  #L2d717e.  if v0 == 0 then goto L2d7186;
  #L2d7182.  @monitorexit v1
  #L2d7184.  return @kind void;
  #L2d7186.  v0:= v1.`okhttp3.internal.http1.Http1Codec$ChunkedSink.a` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L2d718a.  v0:= v0.`okhttp3.internal.http1.Http1Codec.d` @type ^`okio.BufferedSink` @kind object;
  #L2d718e.  call `flush`(v0) @signature `Lokio/BufferedSink;.flush:()V` @kind interface;
  #L2d7194.  @monitorexit v1
  #L2d7196.  return @kind void;
  #L2d7198.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2d719a.  @monitorexit v1
  #L2d719c.  throw v0;
  catch `java.lang.Throwable` @[L2d717a..L2d717e] goto L2d7198;
  catch `java.lang.Throwable` @[L2d7186..L2d7194] goto L2d7198;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.http1.Http1Codec$ChunkedSink` v1 @kind this) @signature `Lokhttp3/internal/http1/Http1Codec$ChunkedSink;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d70bc.  v0:= v1.`okhttp3.internal.http1.Http1Codec$ChunkedSink.timeout` @type ^`okio.ForwardingTimeout` @kind object;
  #L2d70c0.  return v0 @kind object;
}
procedure `void` `write`(`okhttp3.internal.http1.Http1Codec$ChunkedSink` v3 @kind this, `okio.Buffer` v4 @kind object, `long` v5 ) @signature `Lokhttp3/internal/http1/Http1Codec$ChunkedSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2d71c4.  v0:= v3.`okhttp3.internal.http1.Http1Codec$ChunkedSink.closed` @type ^`boolean` @kind boolean;
  #L2d71c8.  if v0 != 0 then goto L2d7218;
  #L2d71cc.  v0:= 0L;
  #L2d71d0.  v2:= lcmp(v5, v0);
  #L2d71d4.  if v2 != 0 then goto L2d71da;
  #L2d71d8.  return @kind void;
  #L2d71da.  v0:= v3.`okhttp3.internal.http1.Http1Codec$ChunkedSink.a` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L2d71de.  v0:= v0.`okhttp3.internal.http1.Http1Codec.d` @type ^`okio.BufferedSink` @kind object;
  #L2d71e2.  call temp:= `writeHexadecimalUnsignedLong`(v0, v5) @signature `Lokio/BufferedSink;.writeHexadecimalUnsignedLong:(J)Lokio/BufferedSink;` @kind interface;
  #L2d71e8.  v0:= v3.`okhttp3.internal.http1.Http1Codec$ChunkedSink.a` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L2d71ec.  v0:= v0.`okhttp3.internal.http1.Http1Codec.d` @type ^`okio.BufferedSink` @kind object;
  #L2d71f0.  v1:= "\r\n" @kind object;
  #L2d71f4.  call temp:= `writeUtf8`(v0, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L2d71fa.  v0:= v3.`okhttp3.internal.http1.Http1Codec$ChunkedSink.a` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L2d71fe.  v0:= v0.`okhttp3.internal.http1.Http1Codec.d` @type ^`okio.BufferedSink` @kind object;
  #L2d7202.  call `write`(v0, v4, v5) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L2d7208.  v4:= v3.`okhttp3.internal.http1.Http1Codec$ChunkedSink.a` @type ^`okhttp3.internal.http1.Http1Codec` @kind object;
  #L2d720c.  v4:= v4.`okhttp3.internal.http1.Http1Codec.d` @type ^`okio.BufferedSink` @kind object;
  #L2d7210.  call temp:= `writeUtf8`(v4, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L2d7216.  return @kind void;
  #L2d7218.  v4:= new `java.lang.IllegalStateException`;
  #L2d721c.  v5:= "closed" @kind object;
  #L2d7220.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d7226.  throw v4;
}
