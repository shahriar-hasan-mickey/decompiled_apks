record `okhttp3.internal.http2.Http2Codec$StreamFinishingSource` @kind class @AccessFlag  extends `okio.ForwardingSource` @kind class {
  `boolean` `okhttp3.internal.http2.Http2Codec$StreamFinishingSource.a` @AccessFlag ;
  `long` `okhttp3.internal.http2.Http2Codec$StreamFinishingSource.b` @AccessFlag ;
  `okhttp3.internal.http2.Http2Codec` `okhttp3.internal.http2.Http2Codec$StreamFinishingSource.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Codec$StreamFinishingSource` v0 @kind this, `okhttp3.internal.http2.Http2Codec` v1 @kind object, `okio.Source` v2 @kind object) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.<init>:(Lokhttp3/internal/http2/Http2Codec;Lokio/Source;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2d95a4.  v0.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.c` @type ^`okhttp3.internal.http2.Http2Codec` := v1 @kind object;
  #L2d95a8.  call `<init>`(v0, v2) @signature `Lokio/ForwardingSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L2d95ae.  v1:= 0I;
  #L2d95b0.  v0.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.a` @type ^`boolean` := v1 @kind boolean;
  #L2d95b4.  v1:= 0L;
  #L2d95b8.  v0.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.b` @type ^`long` := v1 @kind wide;
  #L2d95bc.  return @kind void;
}
procedure `void` `endOfInput`(`okhttp3.internal.http2.Http2Codec$StreamFinishingSource` v7 @kind this, `java.io.IOException` v8 @kind object) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.endOfInput:(Ljava/io/IOException;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2d95f0.  v0:= v7.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.a` @type ^`boolean` @kind boolean;
  #L2d95f4.  if v0 == 0 then goto L2d95fa;
  #L2d95f8.  return @kind void;
  #L2d95fa.  v0:= 1I;
  #L2d95fc.  v7.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.a` @type ^`boolean` := v0 @kind boolean;
  #L2d9600.  v3:= v7.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.c` @type ^`okhttp3.internal.http2.Http2Codec` @kind object;
  #L2d9604.  v1:= v3.`okhttp3.internal.http2.Http2Codec.a` @type ^`okhttp3.internal.connection.StreamAllocation` @kind object;
  #L2d9608.  v2:= 0I;
  #L2d960a.  v4:= v7.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.b` @type ^`long` @kind wide;
  #L2d960e.  v6:= v8 @kind object;
  #L2d9610.  call `streamFinished`(v1, v2, v3, v4, v6) @signature `Lokhttp3/internal/connection/StreamAllocation;.streamFinished:(ZLokhttp3/internal/http/HttpCodec;JLjava/io/IOException;)V` @kind virtual;
  #L2d9616.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.http2.Http2Codec$StreamFinishingSource` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d95d0.  call `close`(v1) @signature `Lokio/ForwardingSource;.close:()V` @kind super;
  #L2d95d6.  v0:= 0I;
  #L2d95d8.  call `endOfInput`(v1, v0) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.endOfInput:(Ljava/io/IOException;)V` @kind direct;
  #L2d95de.  return @kind void;
}
procedure `long` `read`(`okhttp3.internal.http2.Http2Codec$StreamFinishingSource` v2 @kind this, `okio.Buffer` v3 @kind object, `long` v4 ) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2d9550.  call temp:= `delegate`(v2) @signature `Lokio/ForwardingSource;.delegate:()Lokio/Source;` @kind virtual;
  #L2d9556.  v0:= temp @kind object;
  #L2d9558.  call temp:= `read`(v0, v3, v4) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L2d955e.  v3:= temp @kind wide;
  #L2d9560.  v0:= 0L;
  #L2d9564.  v5:= lcmp(v3, v0);
  #L2d9568.  if v5 <= 0 then goto L2d9576;
  #L2d956c.  v0:= v2.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.b` @type ^`long` @kind wide;
  #L2d9570.  v0:= v0 + v3 @kind long;
  #L2d9572.  v2.`okhttp3.internal.http2.Http2Codec$StreamFinishingSource.b` @type ^`long` := v0 @kind wide;
  #L2d9576.  return v3 @kind wide;
  #L2d9578.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L2d957a.  call `endOfInput`(v2, v3) @signature `Lokhttp3/internal/http2/Http2Codec$StreamFinishingSource;.endOfInput:(Ljava/io/IOException;)V` @kind direct;
  #L2d9580.  throw v3;
  catch `java.io.IOException` @[L2d9550..L2d9576] goto L2d9578;
}
