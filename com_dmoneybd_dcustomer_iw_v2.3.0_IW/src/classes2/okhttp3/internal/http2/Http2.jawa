record `okhttp3.internal.http2.Http2` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String`[] `@@okhttp3.internal.http2.Http2.FRAME_NAMES` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Http2.a` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.http2.Http2.b` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.http2.Http2.c` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Http2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L2dd434.  v0:= "PRI * HTTP/2.0\r\n\r\nSM\r\n\r\n" @kind object;
  #L2dd438.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L2dd43e.  v0:= temp @kind object;
  #L2dd440.  `@@okhttp3.internal.http2.Http2.a` @type ^`okio.ByteString` := v0 @kind object;
  #L2dd444.  v0:= 10I;
  #L2dd448.  v0:= new `java.lang.String`[v0];
  #L2dd44c.  v1:= "DATA" @kind object;
  #L2dd450.  v2:= 0I;
  #L2dd452.  v0[v2]:= v1 @kind object;
  #L2dd456.  v1:= "HEADERS" @kind object;
  #L2dd45a.  v3:= 1I;
  #L2dd45c.  v0[v3]:= v1 @kind object;
  #L2dd460.  v1:= 2I;
  #L2dd462.  v4:= "PRIORITY" @kind object;
  #L2dd466.  v0[v1]:= v4 @kind object;
  #L2dd46a.  v1:= "RST_STREAM" @kind object;
  #L2dd46e.  v5:= 3I;
  #L2dd470.  v0[v5]:= v1 @kind object;
  #L2dd474.  v1:= "SETTINGS" @kind object;
  #L2dd478.  v6:= 4I;
  #L2dd47a.  v0[v6]:= v1 @kind object;
  #L2dd47e.  v1:= 5I;
  #L2dd480.  v7:= "PUSH_PROMISE" @kind object;
  #L2dd484.  v0[v1]:= v7 @kind object;
  #L2dd488.  v1:= 6I;
  #L2dd48a.  v7:= "PING" @kind object;
  #L2dd48e.  v0[v1]:= v7 @kind object;
  #L2dd492.  v1:= 7I;
  #L2dd494.  v7:= "GOAWAY" @kind object;
  #L2dd498.  v0[v1]:= v7 @kind object;
  #L2dd49c.  v1:= "WINDOW_UPDATE" @kind object;
  #L2dd4a0.  v7:= 8I;
  #L2dd4a4.  v0[v7]:= v1 @kind object;
  #L2dd4a8.  v1:= 9I;
  #L2dd4ac.  v8:= "CONTINUATION" @kind object;
  #L2dd4b0.  v0[v1]:= v8 @kind object;
  #L2dd4b4.  `@@okhttp3.internal.http2.Http2.FRAME_NAMES` @type ^`java.lang.String`[] := v0 @kind object;
  #L2dd4b8.  v0:= 64I;
  #L2dd4bc.  v0:= new `java.lang.String`[v0];
  #L2dd4c0.  `@@okhttp3.internal.http2.Http2.b` @type ^`java.lang.String`[] := v0 @kind object;
  #L2dd4c4.  v0:= 256I;
  #L2dd4c8.  v0:= new `java.lang.String`[v0];
  #L2dd4cc.  `@@okhttp3.internal.http2.Http2.c` @type ^`java.lang.String`[] := v0 @kind object;
  #L2dd4d0.  v0:= 0I;
  #L2dd4d2.  v1:= `@@okhttp3.internal.http2.Http2.c` @type ^`java.lang.String`[] @kind object;
  #L2dd4d6.  v8:= length @variable v1;
  #L2dd4d8.  v9:= 32I;
  #L2dd4dc.  if v0 >= v8 then goto L2dd512;
  #L2dd4e0.  v8:= new `java.lang.Object`[v3];
  #L2dd4e4.  call temp:= `toBinaryString`(v0) @signature `Ljava/lang/Integer;.toBinaryString:(I)Ljava/lang/String;` @kind static;
  #L2dd4ea.  v10:= temp @kind object;
  #L2dd4ec.  v8[v2]:= v10 @kind object;
  #L2dd4f0.  v10:= "%8s" @kind object;
  #L2dd4f4.  call temp:= `format`(v10, v8) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2dd4fa.  v8:= temp @kind object;
  #L2dd4fc.  v10:= 48I;
  #L2dd500.  call temp:= `replace`(v8, v9, v10) @signature `Ljava/lang/String;.replace:(CC)Ljava/lang/String;` @kind virtual;
  #L2dd506.  v8:= temp @kind object;
  #L2dd508.  v1[v0]:= v8 @kind object;
  #L2dd50c.  v0:= v0 + 1;
  #L2dd510.  goto L2dd4d2;
  #L2dd512.  v0:= `@@okhttp3.internal.http2.Http2.b` @type ^`java.lang.String`[] @kind object;
  #L2dd516.  v1:= "" @kind object;
  #L2dd51a.  v0[v2]:= v1 @kind object;
  #L2dd51e.  v1:= "END_STREAM" @kind object;
  #L2dd522.  v0[v3]:= v1 @kind object;
  #L2dd526.  v1:= new `int`[v3];
  #L2dd52a.  v1[v2]:= v3;
  #L2dd52e.  v8:= "PADDED" @kind object;
  #L2dd532.  v0[v7]:= v8 @kind object;
  #L2dd536.  v0:= 0I;
  #L2dd538.  v8:= "|PADDED" @kind object;
  #L2dd53c.  if v0 >= v3 then goto L2dd578;
  #L2dd540.  v10:= v1[v0];
  #L2dd544.  v11:= `@@okhttp3.internal.http2.Http2.b` @type ^`java.lang.String`[] @kind object;
  #L2dd548.  v12:= v10 ^| 8;
  #L2dd54c.  v13:= new `java.lang.StringBuilder`;
  #L2dd550.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2dd556.  v10:= v11[v10] @kind object;
  #L2dd55a.  call temp:= `append`(v13, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dd560.  call temp:= `append`(v13, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dd566.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2dd56c.  v8:= temp @kind object;
  #L2dd56e.  v11[v12]:= v8 @kind object;
  #L2dd572.  v0:= v0 + 1;
  #L2dd576.  goto L2dd538;
  #L2dd578.  v0:= `@@okhttp3.internal.http2.Http2.b` @type ^`java.lang.String`[] @kind object;
  #L2dd57c.  v10:= "END_HEADERS" @kind object;
  #L2dd580.  v0[v6]:= v10 @kind object;
  #L2dd584.  v0[v9]:= v4 @kind object;
  #L2dd588.  v4:= 36I;
  #L2dd58c.  v6:= "END_HEADERS|PRIORITY" @kind object;
  #L2dd590.  v0[v4]:= v6 @kind object;
  #L2dd594.  v0:= new `int`[v5];
  #L2dd598.  goto L2dd658;
  #L2dd59e.  v4:= 0I;
  #L2dd5a0.  if v4 >= v5 then goto L2dd632;
  #L2dd5a4.  v6:= v0[v4];
  #L2dd5a8.  v9:= 0I;
  #L2dd5aa.  if v9 >= v3 then goto L2dd62c;
  #L2dd5ae.  v10:= v1[v9];
  #L2dd5b2.  v11:= `@@okhttp3.internal.http2.Http2.b` @type ^`java.lang.String`[] @kind object;
  #L2dd5b6.  v12:= v10 ^| v6 @kind int;
  #L2dd5ba.  v13:= new `java.lang.StringBuilder`;
  #L2dd5be.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2dd5c4.  v14:= v11[v10] @kind object;
  #L2dd5c8.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dd5ce.  v14:= 124I;
  #L2dd5d2.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dd5d8.  v15:= v11[v6] @kind object;
  #L2dd5dc.  call temp:= `append`(v13, v15) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dd5e2.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2dd5e8.  v13:= temp @kind object;
  #L2dd5ea.  v11[v12]:= v13 @kind object;
  #L2dd5ee.  v12:= v12 ^| v7 @kind int;
  #L2dd5f0.  v13:= new `java.lang.StringBuilder`;
  #L2dd5f4.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2dd5fa.  v10:= v11[v10] @kind object;
  #L2dd5fe.  call temp:= `append`(v13, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dd604.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dd60a.  v10:= v11[v6] @kind object;
  #L2dd60e.  call temp:= `append`(v13, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dd614.  call temp:= `append`(v13, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dd61a.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2dd620.  v10:= temp @kind object;
  #L2dd622.  v11[v12]:= v10 @kind object;
  #L2dd626.  v9:= v9 + 1;
  #L2dd62a.  goto L2dd5aa;
  #L2dd62c.  v4:= v4 + 1;
  #L2dd630.  goto L2dd5a0;
  #L2dd632.  v0:= `@@okhttp3.internal.http2.Http2.b` @type ^`java.lang.String`[] @kind object;
  #L2dd636.  v1:= length @variable v0;
  #L2dd638.  if v2 >= v1 then goto L2dd656;
  #L2dd63c.  v1:= v0[v2] @kind object;
  #L2dd640.  if v1 != 0 then goto L2dd650;
  #L2dd644.  v1:= `@@okhttp3.internal.http2.Http2.c` @type ^`java.lang.String`[] @kind object;
  #L2dd648.  v1:= v1[v2] @kind object;
  #L2dd64c.  v0[v2]:= v1 @kind object;
  #L2dd650.  v2:= v2 + 1;
  #L2dd654.  goto L2dd632;
  #L2dd656.  return @kind void;
  #L2dd658.  v0:= (4I, 32I, 36I) @kind object;
  #L2dd66b.  goto L2dd59e;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2` v0 @kind this) @signature `Lokhttp3/internal/http2/Http2;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2dd67c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2dd682.  return @kind void;
}
procedure `java.lang.String` `a`(`byte` v2 , `byte` v3 ) @signature `Lokhttp3/internal/http2/Http2;.a:(BB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2dd2e8.  if v3 != 0 then goto L2dd2f2;
  #L2dd2ec.  v2:= "" @kind object;
  #L2dd2f0.  return v2 @kind object;
  #L2dd2f2.  v0:= 2I;
  #L2dd2f4.  if v2 == v0 then goto L2dd386;
  #L2dd2f8.  v0:= 3I;
  #L2dd2fa.  if v2 == v0 then goto L2dd386;
  #L2dd2fe.  v0:= 4I;
  #L2dd300.  if v2 == v0 then goto L2dd370;
  #L2dd304.  v0:= 6I;
  #L2dd306.  if v2 == v0 then goto L2dd370;
  #L2dd30a.  v0:= 7I;
  #L2dd30c.  if v2 == v0 then goto L2dd386;
  #L2dd310.  v0:= 8I;
  #L2dd314.  if v2 == v0 then goto L2dd386;
  #L2dd318.  v0:= `@@okhttp3.internal.http2.Http2.b` @type ^`java.lang.String`[] @kind object;
  #L2dd31c.  v1:= length @variable v0;
  #L2dd31e.  if v3 >= v1 then goto L2dd328;
  #L2dd322.  v0:= v0[v3] @kind object;
  #L2dd326.  goto L2dd330;
  #L2dd328.  v0:= `@@okhttp3.internal.http2.Http2.c` @type ^`java.lang.String`[] @kind object;
  #L2dd32c.  v0:= v0[v3] @kind object;
  #L2dd330.  v1:= 5I;
  #L2dd332.  if v2 != v1 then goto L2dd350;
  #L2dd336.  v1:= v3 ^& 4;
  #L2dd33a.  if v1 == 0 then goto L2dd350;
  #L2dd33e.  v2:= "HEADERS" @kind object;
  #L2dd342.  v3:= "PUSH_PROMISE" @kind object;
  #L2dd346.  call temp:= `replace`(v0, v2, v3) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L2dd34c.  v2:= temp @kind object;
  #L2dd34e.  return v2 @kind object;
  #L2dd350.  if v2 != 0 then goto L2dd36e;
  #L2dd354.  v2:= v3 ^& 32;
  #L2dd358.  if v2 == 0 then goto L2dd36e;
  #L2dd35c.  v2:= "PRIORITY" @kind object;
  #L2dd360.  v3:= "COMPRESSED" @kind object;
  #L2dd364.  call temp:= `replace`(v0, v2, v3) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L2dd36a.  v2:= temp @kind object;
  #L2dd36c.  return v2 @kind object;
  #L2dd36e.  return v0 @kind object;
  #L2dd370.  v2:= 1I;
  #L2dd372.  if v3 != v2 then goto L2dd37c;
  #L2dd376.  v2:= "ACK" @kind object;
  #L2dd37a.  goto L2dd384;
  #L2dd37c.  v2:= `@@okhttp3.internal.http2.Http2.c` @type ^`java.lang.String`[] @kind object;
  #L2dd380.  v2:= v2[v3] @kind object;
  #L2dd384.  return v2 @kind object;
  #L2dd386.  v2:= `@@okhttp3.internal.http2.Http2.c` @type ^`java.lang.String`[] @kind object;
  #L2dd38a.  v2:= v2[v3] @kind object;
  #L2dd38e.  return v2 @kind object;
}
procedure `java.lang.String` `b`(`boolean` v4 , `int` v5 , `int` v6 , `byte` v7 , `byte` v8 ) @signature `Lokhttp3/internal/http2/Http2;.b:(ZIIBB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2dd3a0.  v0:= `@@okhttp3.internal.http2.Http2.FRAME_NAMES` @type ^`java.lang.String`[] @kind object;
  #L2dd3a4.  v1:= length @variable v0;
  #L2dd3a6.  v2:= 0I;
  #L2dd3a8.  v3:= 1I;
  #L2dd3aa.  if v7 >= v1 then goto L2dd3b4;
  #L2dd3ae.  v0:= v0[v7] @kind object;
  #L2dd3b2.  goto L2dd3d0;
  #L2dd3b4.  v0:= new `java.lang.Object`[v3];
  #L2dd3b8.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L2dd3be.  v1:= temp @kind object;
  #L2dd3c0.  v0[v2]:= v1 @kind object;
  #L2dd3c4.  v1:= "0x%02x" @kind object;
  #L2dd3c8.  call temp:= `format`(v1, v0) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2dd3ce.  v0:= temp @kind object;
  #L2dd3d0.  call temp:= `a`(v7, v8) @signature `Lokhttp3/internal/http2/Http2;.a:(BB)Ljava/lang/String;` @kind static;
  #L2dd3d6.  v7:= temp @kind object;
  #L2dd3d8.  v8:= 5I;
  #L2dd3da.  v8:= new `java.lang.Object`[v8];
  #L2dd3de.  if v4 == 0 then goto L2dd3e8;
  #L2dd3e2.  v4:= "<<" @kind object;
  #L2dd3e6.  goto L2dd3ec;
  #L2dd3e8.  v4:= ">>" @kind object;
  #L2dd3ec.  v8[v2]:= v4 @kind object;
  #L2dd3f0.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2dd3f6.  v4:= temp @kind object;
  #L2dd3f8.  v8[v3]:= v4 @kind object;
  #L2dd3fc.  v4:= 2I;
  #L2dd3fe.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2dd404.  v5:= temp @kind object;
  #L2dd406.  v8[v4]:= v5 @kind object;
  #L2dd40a.  v4:= 3I;
  #L2dd40c.  v8[v4]:= v0 @kind object;
  #L2dd410.  v4:= 4I;
  #L2dd412.  v8[v4]:= v7 @kind object;
  #L2dd416.  v4:= "%s 0x%08x %5d %-13s %s" @kind object;
  #L2dd41a.  call temp:= `format`(v4, v8) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2dd420.  v4:= temp @kind object;
  #L2dd422.  return v4 @kind object;
}
procedure `java.lang.IllegalArgumentException` `c`(`java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lokhttp3/internal/http2/Http2;.c:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @AccessFlag STATIC {
    temp;
    v0;

  #L2dd2c4.  v0:= new `java.lang.IllegalArgumentException`;
  #L2dd2c8.  call temp:= `format`(v1, v2) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2dd2ce.  v1:= temp @kind object;
  #L2dd2d0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2dd2d6.  throw v0;
}
procedure `java.io.IOException` `d`(`java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lokhttp3/internal/http2/Http2;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @AccessFlag STATIC {
    temp;
    v0;

  #L2dd2a0.  v0:= new `java.io.IOException`;
  #L2dd2a4.  call temp:= `format`(v1, v2) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2dd2aa.  v1:= temp @kind object;
  #L2dd2ac.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2dd2b2.  throw v0;
}
