record `okhttp3.internal.http2.Http2Stream$FramingSource` @kind class @AccessFlag FINAL extends `okio.Source` @kind interface {
  `boolean` `okhttp3.internal.http2.Http2Stream$FramingSource.a` @AccessFlag ;
  `boolean` `okhttp3.internal.http2.Http2Stream$FramingSource.b` @AccessFlag ;
  `okhttp3.internal.http2.Http2Stream` `okhttp3.internal.http2.Http2Stream$FramingSource.c` @AccessFlag FINAL_SYNTHETIC;
  `long` `okhttp3.internal.http2.Http2Stream$FramingSource.maxByteCount` @AccessFlag PRIVATE_FINAL;
  `okio.Buffer` `okhttp3.internal.http2.Http2Stream$FramingSource.readBuffer` @AccessFlag PRIVATE_FINAL;
  `okio.Buffer` `okhttp3.internal.http2.Http2Stream$FramingSource.receiveBuffer` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Http2Stream$FramingSource;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L2dc5fc.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Stream$FramingSource` v0 @kind this, `okhttp3.internal.http2.Http2Stream` v1 @kind object, `long` v2 ) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSource;.<init>:(Lokhttp3/internal/http2/Http2Stream;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2dc610.  v0.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` := v1 @kind object;
  #L2dc614.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2dc61a.  v1:= new `okio.Buffer`;
  #L2dc61e.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L2dc624.  v0.`okhttp3.internal.http2.Http2Stream$FramingSource.receiveBuffer` @type ^`okio.Buffer` := v1 @kind object;
  #L2dc628.  v1:= new `okio.Buffer`;
  #L2dc62c.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L2dc632.  v0.`okhttp3.internal.http2.Http2Stream$FramingSource.readBuffer` @type ^`okio.Buffer` := v1 @kind object;
  #L2dc636.  v0.`okhttp3.internal.http2.Http2Stream$FramingSource.maxByteCount` @type ^`long` := v2 @kind wide;
  #L2dc63a.  return @kind void;
}
procedure `void` `updateConnectionFlowControl`(`okhttp3.internal.http2.Http2Stream$FramingSource` v1 @kind this, `long` v2 ) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSource;.updateConnectionFlowControl:(J)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2dc860.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc864.  v0:= v0.`okhttp3.internal.http2.Http2Stream.d` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2dc868.  call `n`(v0, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.n:(J)V` @kind virtual;
  #L2dc86e.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.http2.Http2Stream$FramingSource` v11 @kind this, `okio.BufferedSource` v12 @kind object, `long` v13 ) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSource;.a:(Lokio/BufferedSource;J)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2dc75c.  v0:= 0L;
  #L2dc760.  v2:= lcmp(v13, v0);
  #L2dc764.  if v2 <= 0 then goto L2dc82e;
  #L2dc768.  v2:= v11.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc76c.  @monitorenter v2
  #L2dc76e.  v3:= v11.`okhttp3.internal.http2.Http2Stream$FramingSource.b` @type ^`boolean` @kind boolean;
  #L2dc772.  v4:= v11.`okhttp3.internal.http2.Http2Stream$FramingSource.readBuffer` @type ^`okio.Buffer` @kind object;
  #L2dc776.  call temp:= `size`(v4) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2dc77c.  v4:= temp @kind wide;
  #L2dc77e.  v4:= v4 + v13 @kind long;
  #L2dc780.  v6:= v11.`okhttp3.internal.http2.Http2Stream$FramingSource.maxByteCount` @type ^`long` @kind wide;
  #L2dc784.  v8:= 1I;
  #L2dc786.  v9:= 0I;
  #L2dc788.  v10:= lcmp(v4, v6);
  #L2dc78c.  if v10 <= 0 then goto L2dc794;
  #L2dc790.  v4:= 1I;
  #L2dc792.  goto L2dc796;
  #L2dc794.  v4:= 0I;
  #L2dc796.  @monitorexit v2
  #L2dc798.  if v4 == 0 then goto L2dc7b2;
  #L2dc79c.  call `skip`(v12, v13) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L2dc7a2.  v12:= v11.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc7a6.  v13:= `@@okhttp3.internal.http2.ErrorCode.FLOW_CONTROL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L2dc7aa.  call `closeLater`(v12, v13) @signature `Lokhttp3/internal/http2/Http2Stream;.closeLater:(Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L2dc7b0.  return @kind void;
  #L2dc7b2.  if v3 == 0 then goto L2dc7be;
  #L2dc7b6.  call `skip`(v12, v13) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L2dc7bc.  return @kind void;
  #L2dc7be.  v2:= v11.`okhttp3.internal.http2.Http2Stream$FramingSource.receiveBuffer` @type ^`okio.Buffer` @kind object;
  #L2dc7c2.  call temp:= `read`(v12, v2, v13) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L2dc7c8.  v2:= temp @kind wide;
  #L2dc7ca.  v4:= -1L;
  #L2dc7ce.  v6:= lcmp(v2, v4);
  #L2dc7d2.  if v6 == 0 then goto L2dc81c;
  #L2dc7d6.  v13:= v13 - v2 @kind long;
  #L2dc7d8.  v2:= v11.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc7dc.  @monitorenter v2
  #L2dc7de.  v3:= v11.`okhttp3.internal.http2.Http2Stream$FramingSource.readBuffer` @type ^`okio.Buffer` @kind object;
  #L2dc7e2.  call temp:= `size`(v3) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2dc7e8.  v3:= temp @kind wide;
  #L2dc7ea.  v5:= lcmp(v3, v0);
  #L2dc7ee.  if v5 != 0 then goto L2dc7f4;
  #L2dc7f2.  goto L2dc7f6;
  #L2dc7f4.  v8:= 0I;
  #L2dc7f6.  v0:= v11.`okhttp3.internal.http2.Http2Stream$FramingSource.readBuffer` @type ^`okio.Buffer` @kind object;
  #L2dc7fa.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSource.receiveBuffer` @type ^`okio.Buffer` @kind object;
  #L2dc7fe.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L2dc804.  if v8 == 0 then goto L2dc812;
  #L2dc808.  v0:= v11.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc80c.  call `notifyAll`(v0) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L2dc812.  @monitorexit v2
  #L2dc814.  goto L2dc75c;
  #L2dc816.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2dc818.  @monitorexit v2
  #L2dc81a.  throw v12;
  #L2dc81c.  v12:= new `java.io.EOFException`;
  #L2dc820.  call `<init>`(v12) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L2dc826.  throw v12;
  #L2dc828.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2dc82a.  @monitorexit v2
  #L2dc82c.  throw v12;
  #L2dc82e.  return @kind void;
  catch `java.lang.Throwable` @[L2dc76e..L2dc798] goto L2dc828;
  catch `java.lang.Throwable` @[L2dc7de..L2dc81a] goto L2dc816;
  catch `java.lang.Throwable` @[L2dc82a..L2dc82c] goto L2dc828;
}
procedure `void` `close`(`okhttp3.internal.http2.Http2Stream$FramingSource` v8 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2dc64c.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc650.  @monitorenter v0
  #L2dc652.  v1:= 1I;
  #L2dc654.  v8.`okhttp3.internal.http2.Http2Stream$FramingSource.a` @type ^`boolean` := v1 @kind boolean;
  #L2dc658.  v1:= v8.`okhttp3.internal.http2.Http2Stream$FramingSource.readBuffer` @type ^`okio.Buffer` @kind object;
  #L2dc65c.  call temp:= `size`(v1) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2dc662.  v1:= temp @kind wide;
  #L2dc664.  v3:= v8.`okhttp3.internal.http2.Http2Stream$FramingSource.readBuffer` @type ^`okio.Buffer` @kind object;
  #L2dc668.  call `clear`(v3) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L2dc66e.  v3:= v8.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc672.  call temp:= `a`(v3) @signature `Lokhttp3/internal/http2/Http2Stream;.a:(Lokhttp3/internal/http2/Http2Stream;)Ljava/util/Deque;` @kind static;
  #L2dc678.  v3:= temp @kind object;
  #L2dc67a.  call temp:= `isEmpty`(v3) @signature `Ljava/util/Deque;.isEmpty:()Z` @kind interface;
  #L2dc680.  v3:= temp;
  #L2dc682.  v4:= 0I;
  #L2dc684.  if v3 != 0 then goto L2dc6d4;
  #L2dc688.  v3:= v8.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc68c.  call temp:= `b`(v3) @signature `Lokhttp3/internal/http2/Http2Stream;.b:(Lokhttp3/internal/http2/Http2Stream;)Lokhttp3/internal/http2/Header$Listener;` @kind static;
  #L2dc692.  v3:= temp @kind object;
  #L2dc694.  if v3 == 0 then goto L2dc6d4;
  #L2dc698.  v4:= new `java.util.ArrayList`;
  #L2dc69c.  v3:= v8.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc6a0.  call temp:= `a`(v3) @signature `Lokhttp3/internal/http2/Http2Stream;.a:(Lokhttp3/internal/http2/Http2Stream;)Ljava/util/Deque;` @kind static;
  #L2dc6a6.  v3:= temp @kind object;
  #L2dc6a8.  call `<init>`(v4, v3) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L2dc6ae.  v3:= v8.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc6b2.  call temp:= `a`(v3) @signature `Lokhttp3/internal/http2/Http2Stream;.a:(Lokhttp3/internal/http2/Http2Stream;)Ljava/util/Deque;` @kind static;
  #L2dc6b8.  v3:= temp @kind object;
  #L2dc6ba.  call `clear`(v3) @signature `Ljava/util/Deque;.clear:()V` @kind interface;
  #L2dc6c0.  v3:= v8.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc6c4.  call temp:= `b`(v3) @signature `Lokhttp3/internal/http2/Http2Stream;.b:(Lokhttp3/internal/http2/Http2Stream;)Lokhttp3/internal/http2/Header$Listener;` @kind static;
  #L2dc6ca.  v3:= temp @kind object;
  #L2dc6cc.  v7:= v4 @kind object;
  #L2dc6ce.  v4:= v3 @kind object;
  #L2dc6d0.  v3:= v7 @kind object;
  #L2dc6d2.  goto L2dc6d6;
  #L2dc6d4.  v3:= v4 @kind object;
  #L2dc6d6.  v5:= v8.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc6da.  call `notifyAll`(v5) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L2dc6e0.  @monitorexit v0
  #L2dc6e2.  v5:= 0L;
  #L2dc6e6.  v0:= lcmp(v1, v5);
  #L2dc6ea.  if v0 <= 0 then goto L2dc6f4;
  #L2dc6ee.  call `updateConnectionFlowControl`(v8, v1) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSource;.updateConnectionFlowControl:(J)V` @kind direct;
  #L2dc6f4.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc6f8.  call `d`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.d:()V` @kind virtual;
  #L2dc6fe.  if v4 == 0 then goto L2dc72a;
  #L2dc702.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2dc708.  v0:= temp @kind object;
  #L2dc70a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2dc710.  v1:= temp;
  #L2dc712.  if v1 == 0 then goto L2dc72a;
  #L2dc716.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2dc71c.  v1:= temp @kind object;
  #L2dc71e.  v1:= (`okhttp3.Headers`) v1 @kind object;
  #L2dc722.  call `onHeaders`(v4, v1) @signature `Lokhttp3/internal/http2/Header$Listener;.onHeaders:(Lokhttp3/Headers;)V` @kind interface;
  #L2dc728.  goto L2dc70a;
  #L2dc72a.  return @kind void;
  #L2dc72c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2dc72e.  @monitorexit v0
  #L2dc730.  goto L2dc734;
  #L2dc732.  throw v1;
  #L2dc734.  goto L2dc732;
  catch `java.lang.Throwable` @[L2dc654..L2dc6e2] goto L2dc72c;
  catch `java.lang.Throwable` @[L2dc72e..L2dc730] goto L2dc72c;
}
procedure `long` `read`(`okhttp3.internal.http2.Http2Stream$FramingSource` v16 @kind this, `okio.Buffer` v17 @kind object, `long` v18 ) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L2dc3ac.  v1:= v16 @kind object;
  #L2dc3b0.  v2:= v18 @kind wide;
  #L2dc3b4.  v4:= 0L;
  #L2dc3b8.  v0:= lcmp(v2, v4);
  #L2dc3bc.  if v0 < 0 then goto L2dc56c;
  #L2dc3c0.  v6:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc3c4.  @monitorenter v6
  #L2dc3c6.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc3ca.  v0:= v0.`okhttp3.internal.http2.Http2Stream.f` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L2dc3ce.  call `enter`(v0) @signature `Lokio/AsyncTimeout;.enter:()V` @kind virtual;
  #L2dc3d4.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc3d8.  v7:= v0.`okhttp3.internal.http2.Http2Stream.h` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L2dc3dc.  if v7 == 0 then goto L2dc3e2;
  #L2dc3e0.  goto L2dc3e4;
  #L2dc3e2.  v7:= 0I;
  #L2dc3e4.  v9:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.a` @type ^`boolean` @kind boolean;
  #L2dc3e8.  if v9 != 0 then goto L2dc544;
  #L2dc3ec.  call temp:= `a`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.a:(Lokhttp3/internal/http2/Http2Stream;)Ljava/util/Deque;` @kind static;
  #L2dc3f2.  v0:= temp @kind object;
  #L2dc3f4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Deque;.isEmpty:()Z` @kind interface;
  #L2dc3fa.  v0:= temp;
  #L2dc3fc.  if v0 != 0 then goto L2dc43e;
  #L2dc400.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc404.  call temp:= `b`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.b:(Lokhttp3/internal/http2/Http2Stream;)Lokhttp3/internal/http2/Header$Listener;` @kind static;
  #L2dc40a.  v0:= temp @kind object;
  #L2dc40c.  if v0 == 0 then goto L2dc43e;
  #L2dc410.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc414.  call temp:= `a`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.a:(Lokhttp3/internal/http2/Http2Stream;)Ljava/util/Deque;` @kind static;
  #L2dc41a.  v0:= temp @kind object;
  #L2dc41c.  call temp:= `removeFirst`(v0) @signature `Ljava/util/Deque;.removeFirst:()Ljava/lang/Object;` @kind interface;
  #L2dc422.  v0:= temp @kind object;
  #L2dc424.  v8:= v0 @kind object;
  #L2dc426.  v8:= (`okhttp3.Headers`) v8 @kind object;
  #L2dc42a.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc42e.  call temp:= `b`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.b:(Lokhttp3/internal/http2/Http2Stream;)Lokhttp3/internal/http2/Header$Listener;` @kind static;
  #L2dc434.  v0:= temp @kind object;
  #L2dc436.  v13:= v17 @kind object;
  #L2dc43a.  v10:= v0 @kind object;
  #L2dc43c.  goto L2dc4f8;
  #L2dc43e.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.readBuffer` @type ^`okio.Buffer` @kind object;
  #L2dc442.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2dc448.  v11:= temp @kind wide;
  #L2dc44a.  v0:= lcmp(v11, v4);
  #L2dc44e.  if v0 <= 0 then goto L2dc4c6;
  #L2dc452.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.readBuffer` @type ^`okio.Buffer` @kind object;
  #L2dc456.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2dc45c.  v11:= temp @kind wide;
  #L2dc45e.  call temp:= `min`(v2, v11) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L2dc464.  v11:= temp @kind wide;
  #L2dc466.  v13:= v17 @kind object;
  #L2dc46a.  call temp:= `read`(v0, v13, v11) @signature `Lokio/Buffer;.read:(Lokio/Buffer;J)J` @kind virtual;
  #L2dc470.  v11:= temp @kind wide;
  #L2dc472.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc476.  v14:= v0.`okhttp3.internal.http2.Http2Stream.a` @type ^`long` @kind wide;
  #L2dc47a.  v14:= v14 + v11 @kind long;
  #L2dc47c.  v0.`okhttp3.internal.http2.Http2Stream.a` @type ^`long` := v14 @kind wide;
  #L2dc480.  if v7 != 0 then goto L2dc4c0;
  #L2dc484.  v0:= v0.`okhttp3.internal.http2.Http2Stream.d` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2dc488.  v0:= v0.`okhttp3.internal.http2.Http2Connection.k` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L2dc48c.  call temp:= `d`(v0) @signature `Lokhttp3/internal/http2/Settings;.d:()I` @kind virtual;
  #L2dc492.  v0:= temp;
  #L2dc494.  v0:= v0 / 2;
  #L2dc498.  v8:= (`long`) v0 @kind i2l;
  #L2dc49a.  v0:= lcmp(v14, v8);
  #L2dc49e.  if v0 < 0 then goto L2dc4c0;
  #L2dc4a2.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc4a6.  v8:= v0.`okhttp3.internal.http2.Http2Stream.d` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2dc4aa.  v9:= v0.`okhttp3.internal.http2.Http2Stream.c` @type ^`int`;
  #L2dc4ae.  v14:= v0.`okhttp3.internal.http2.Http2Stream.a` @type ^`long` @kind wide;
  #L2dc4b2.  call `s`(v8, v9, v14) @signature `Lokhttp3/internal/http2/Http2Connection;.s:(IJ)V` @kind virtual;
  #L2dc4b8.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc4bc.  v0.`okhttp3.internal.http2.Http2Stream.a` @type ^`long` := v4 @kind wide;
  #L2dc4c0.  v8:= 0I;
  #L2dc4c2.  v10:= 0I;
  #L2dc4c4.  goto L2dc4fc;
  #L2dc4c6.  v13:= v17 @kind object;
  #L2dc4ca.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.b` @type ^`boolean` @kind boolean;
  #L2dc4ce.  if v0 != 0 then goto L2dc4f4;
  #L2dc4d2.  if v7 != 0 then goto L2dc4f4;
  #L2dc4d6.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc4da.  call `j`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.j:()V` @kind virtual;
  #L2dc4e0.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc4e4.  v0:= v0.`okhttp3.internal.http2.Http2Stream.f` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L2dc4e8.  call `exitAndThrowIfTimedOut`(v0) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L2dc4ee.  @monitorexit v6
  #L2dc4f0.  goto L2dc3c0;
  #L2dc4f4.  v8:= 0I;
  #L2dc4f6.  v10:= 0I;
  #L2dc4f8.  v11:= -1L;
  #L2dc4fc.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc500.  v0:= v0.`okhttp3.internal.http2.Http2Stream.f` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L2dc504.  call `exitAndThrowIfTimedOut`(v0) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L2dc50a.  @monitorexit v6
  #L2dc50c.  if v8 == 0 then goto L2dc51e;
  #L2dc510.  if v10 == 0 then goto L2dc51e;
  #L2dc514.  call `onHeaders`(v10, v8) @signature `Lokhttp3/internal/http2/Header$Listener;.onHeaders:(Lokhttp3/Headers;)V` @kind interface;
  #L2dc51a.  goto L2dc3c0;
  #L2dc51e.  v2:= -1L;
  #L2dc522.  v0:= lcmp(v11, v2);
  #L2dc526.  if v0 == 0 then goto L2dc532;
  #L2dc52a.  call `updateConnectionFlowControl`(v1, v11) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSource;.updateConnectionFlowControl:(J)V` @kind direct;
  #L2dc530.  return v11 @kind wide;
  #L2dc532.  if v7 != 0 then goto L2dc538;
  #L2dc536.  return v2 @kind wide;
  #L2dc538.  v0:= new `okhttp3.internal.http2.StreamResetException`;
  #L2dc53c.  call `<init>`(v0, v7) @signature `Lokhttp3/internal/http2/StreamResetException;.<init>:(Lokhttp3/internal/http2/ErrorCode;)V` @kind direct;
  #L2dc542.  throw v0;
  #L2dc544.  v0:= new `java.io.IOException`;
  #L2dc548.  v2:= "stream closed" @kind object;
  #L2dc54c.  call `<init>`(v0, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2dc552.  throw v0;
  #L2dc554.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2dc556.  v2:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc55a.  v2:= v2.`okhttp3.internal.http2.Http2Stream.f` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L2dc55e.  call `exitAndThrowIfTimedOut`(v2) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L2dc564.  throw v0;
  #L2dc566.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2dc568.  @monitorexit v6
  #L2dc56a.  throw v0;
  #L2dc56c.  v0:= new `java.lang.IllegalArgumentException`;
  #L2dc570.  v4:= new `java.lang.StringBuilder`;
  #L2dc574.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2dc57a.  v5:= "byteCount < 0: " @kind object;
  #L2dc57e.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dc584.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dc58a.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2dc590.  v2:= temp @kind object;
  #L2dc592.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2dc598.  goto L2dc59c;
  #L2dc59a.  throw v0;
  #L2dc59c.  goto L2dc59a;
  catch `java.lang.Throwable` @[L2dc3c6..L2dc3d4] goto L2dc566;
  catch `java.lang.Throwable` @[L2dc3d4..L2dc4e0] goto L2dc554;
  catch `java.lang.Throwable` @[L2dc4e0..L2dc50c] goto L2dc566;
  catch `java.lang.Throwable` @[L2dc544..L2dc554] goto L2dc554;
  catch `java.lang.Throwable` @[L2dc556..L2dc56a] goto L2dc566;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.http2.Http2Stream$FramingSource` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSource;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2dc5e0.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSource.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc5e4.  v0:= v0.`okhttp3.internal.http2.Http2Stream.f` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L2dc5e8.  return v0 @kind object;
}
