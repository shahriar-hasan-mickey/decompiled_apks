record `okhttp3.internal.http2.Http2Connection$ReaderRunnable` @kind class @AccessFlag  extends `okhttp3.internal.NamedRunnable` @kind class, `okhttp3.internal.http2.Http2Reader$Handler` @kind interface {
  `okhttp3.internal.http2.Http2Reader` `okhttp3.internal.http2.Http2Connection$ReaderRunnable.a` @AccessFlag FINAL;
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v2 @kind this, `okhttp3.internal.http2.Http2Connection` v3 @kind object, `okhttp3.internal.http2.Http2Reader` v4 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.<init>:(Lokhttp3/internal/http2/Http2Connection;Lokhttp3/internal/http2/Http2Reader;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2da1ac.  v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` := v3 @kind object;
  #L2da1b0.  v0:= 1I;
  #L2da1b2.  v0:= new `java.lang.Object`[v0];
  #L2da1b6.  v3:= v3.`okhttp3.internal.http2.Http2Connection.d` @type ^`java.lang.String` @kind object;
  #L2da1ba.  v1:= 0I;
  #L2da1bc.  v0[v1]:= v3 @kind object;
  #L2da1c0.  v3:= "OkHttp %s" @kind object;
  #L2da1c4.  call `<init>`(v2, v3, v0) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L2da1ca.  v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.a` @type ^`okhttp3.internal.http2.Http2Reader` := v4 @kind object;
  #L2da1ce.  return @kind void;
}
procedure `void` `applyAndAckSettings`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v6 @kind this, `okhttp3.internal.http2.Settings` v7 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.applyAndAckSettings:(Lokhttp3/internal/http2/Settings;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2da208.  v0:= v6.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da20c.  call temp:= `c`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.c:(Lokhttp3/internal/http2/Http2Connection;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L2da212.  v0:= temp @kind object;
  #L2da214.  v1:= new `okhttp3.internal.http2.Http2Connection$ReaderRunnable$3`;
  #L2da218.  v2:= "OkHttp %s ACK Settings" @kind object;
  #L2da21c.  v3:= 1I;
  #L2da21e.  v3:= new `java.lang.Object`[v3];
  #L2da222.  v4:= 0I;
  #L2da224.  v5:= v6.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da228.  v5:= v5.`okhttp3.internal.http2.Http2Connection.d` @type ^`java.lang.String` @kind object;
  #L2da22c.  v3[v4]:= v5 @kind object;
  #L2da230.  call `<init>`(v1, v6, v2, v3, v7) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$3;.<init>:(Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Settings;)V` @kind direct;
  #L2da236.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/ScheduledExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L2da23c.  return @kind void;
  catch `java.util.concurrent.RejectedExecutionException` @[L2da208..L2da23c] goto L2da23c;
}
procedure `void` `ackSettings`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v0 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.ackSettings:()V` @AccessFlag PUBLIC {
    temp;

  #L2da1e0.  return @kind void;
}
procedure `void` `alternateService`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v0 @kind this, `int` v1 , `java.lang.String` v2 @kind object, `okio.ByteString` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 , `long` v6 ) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.alternateService:(ILjava/lang/String;Lokio/ByteString;Ljava/lang/String;IJ)V` @AccessFlag PUBLIC {
    temp;

  #L2da1f4.  return @kind void;
}
procedure `void` `data`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v2 @kind this, `boolean` v3 , `int` v4 , `okio.BufferedSource` v5 @kind object, `int` v6 ) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.data:(ZILokio/BufferedSource;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2da260.  v0:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da264.  call temp:= `k`(v0, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.k:(I)Z` @kind virtual;
  #L2da26a.  v0:= temp;
  #L2da26c.  if v0 == 0 then goto L2da27c;
  #L2da270.  v0:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da274.  call `g`(v0, v4, v5, v6, v3) @signature `Lokhttp3/internal/http2/Http2Connection;.g:(ILokio/BufferedSource;IZ)V` @kind virtual;
  #L2da27a.  return @kind void;
  #L2da27c.  v0:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da280.  call temp:= `f`(v0, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.f:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L2da286.  v0:= temp @kind object;
  #L2da288.  if v0 != 0 then goto L2da2ae;
  #L2da28c.  v3:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da290.  v0:= `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L2da294.  call `r`(v3, v4, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.r:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L2da29a.  v3:= v2.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da29e.  v0:= (`long`) v6 @kind i2l;
  #L2da2a0.  call `n`(v3, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.n:(J)V` @kind virtual;
  #L2da2a6.  call `skip`(v5, v0) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L2da2ac.  return @kind void;
  #L2da2ae.  call `f`(v0, v5, v6) @signature `Lokhttp3/internal/http2/Http2Stream;.f:(Lokio/BufferedSource;I)V` @kind virtual;
  #L2da2b4.  if v3 == 0 then goto L2da2be;
  #L2da2b8.  call `g`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.g:()V` @kind virtual;
  #L2da2be.  return @kind void;
}
procedure `void` `execute`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v4 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.execute:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2da2d0.  v0:= `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L2da2d4.  v1:= v4.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.a` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L2da2d8.  call `readConnectionPreface`(v1, v4) @signature `Lokhttp3/internal/http2/Http2Reader;.readConnectionPreface:(Lokhttp3/internal/http2/Http2Reader$Handler;)V` @kind virtual;
  #L2da2de.  v1:= v4.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.a` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L2da2e2.  v2:= 0I;
  #L2da2e4.  call temp:= `nextFrame`(v1, v2, v4) @signature `Lokhttp3/internal/http2/Http2Reader;.nextFrame:(ZLokhttp3/internal/http2/Http2Reader$Handler;)Z` @kind virtual;
  #L2da2ea.  v1:= temp;
  #L2da2ec.  if v1 == 0 then goto L2da2f2;
  #L2da2f0.  goto L2da2de;
  #L2da2f2.  v1:= `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L2da2f6.  v0:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L2da2fa.  v2:= v4.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da2fe.  call `e`(v2, v1, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.e:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L2da304.  goto L2da31c;
  #L2da306.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2da308.  v1:= v0 @kind object;
  #L2da30a.  goto L2da32a;
  #L2da30c.  v1:= v0 @kind object;
  #L2da30e.  v0:= `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L2da312.  v1:= v4.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da316.  call `e`(v1, v0, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.e:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L2da31c.  v0:= v4.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.a` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L2da320.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L2da326.  return @kind void;
  #L2da328.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2da32a.  v3:= v4.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da32e.  call `e`(v3, v1, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.e:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L2da334.  v0:= v4.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.a` @type ^`okhttp3.internal.http2.Http2Reader` @kind object;
  #L2da338.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L2da33e.  goto L2da342;
  #L2da340.  throw v2;
  #L2da342.  goto L2da340;
  catch `java.io.IOException` @[L2da2d4..L2da2f6] goto L2da30c;
  catch `java.lang.Throwable` @[L2da2d4..L2da2f6] goto L2da306;
  catch `java.io.IOException` @[L2da2f6..L2da2fa] goto L2da30e;
  catch `java.lang.Throwable` @[L2da2f6..L2da2fa] goto L2da328;
  catch `java.io.IOException` @[L2da2fa..L2da304] goto L2da31c;
  catch `java.lang.Throwable` @[L2da30e..L2da312] goto L2da328;
  catch `java.io.IOException` @[L2da312..L2da31c] goto L2da31c;
  catch `java.io.IOException` @[L2da32a..L2da334] goto L2da334;
}
procedure `void` `goAway`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v3 @kind this, `int` v4 , `okhttp3.internal.http2.ErrorCode` v5 @kind object, `okio.ByteString` v6 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.goAway:(ILokhttp3/internal/http2/ErrorCode;Lokio/ByteString;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2da39c.  call temp:= `size`(v6) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L2da3a2.  v5:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da3a6.  @monitorenter v5
  #L2da3a8.  v6:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da3ac.  v6:= v6.`okhttp3.internal.http2.Http2Connection.c` @type ^`java.util.Map` @kind object;
  #L2da3b0.  call temp:= `values`(v6) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L2da3b6.  v6:= temp @kind object;
  #L2da3b8.  v0:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da3bc.  v0:= v0.`okhttp3.internal.http2.Http2Connection.c` @type ^`java.util.Map` @kind object;
  #L2da3c0.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L2da3c6.  v0:= temp;
  #L2da3c8.  v0:= new `okhttp3.internal.http2.Http2Stream`[v0];
  #L2da3cc.  call temp:= `toArray`(v6, v0) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L2da3d2.  v6:= temp @kind object;
  #L2da3d4.  v6:= (`okhttp3.internal.http2.Http2Stream`[]) v6 @kind object;
  #L2da3d8.  v0:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da3dc.  v1:= 1I;
  #L2da3de.  v0.`okhttp3.internal.http2.Http2Connection.g` @type ^`boolean` := v1 @kind boolean;
  #L2da3e2.  @monitorexit v5
  #L2da3e4.  v5:= length @variable v6;
  #L2da3e6.  v0:= 0I;
  #L2da3e8.  if v0 >= v5 then goto L2da42a;
  #L2da3ec.  v1:= v6[v0] @kind object;
  #L2da3f0.  call temp:= `getId`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.getId:()I` @kind virtual;
  #L2da3f6.  v2:= temp;
  #L2da3f8.  if v2 <= v4 then goto L2da424;
  #L2da3fc.  call temp:= `isLocallyInitiated`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.isLocallyInitiated:()Z` @kind virtual;
  #L2da402.  v2:= temp;
  #L2da404.  if v2 == 0 then goto L2da424;
  #L2da408.  v2:= `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L2da40c.  call `i`(v1, v2) @signature `Lokhttp3/internal/http2/Http2Stream;.i:(Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L2da412.  v2:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da416.  call temp:= `getId`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.getId:()I` @kind virtual;
  #L2da41c.  v1:= temp;
  #L2da41e.  call temp:= `l`(v2, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.l:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L2da424.  v0:= v0 + 1;
  #L2da428.  goto L2da3e8;
  #L2da42a.  return @kind void;
  #L2da42c.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2da42e.  @monitorexit v5
  #L2da430.  goto L2da434;
  #L2da432.  throw v4;
  #L2da434.  goto L2da432;
  catch `java.lang.Throwable` @[L2da3a8..L2da3e4] goto L2da42c;
  catch `java.lang.Throwable` @[L2da42e..L2da430] goto L2da42c;
}
procedure `void` `headers`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v9 @kind this, `boolean` v10 , `int` v11 , `int` v12 , `java.util.List` v13 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.headers:(ZIILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2da45c.  v12:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da460.  call temp:= `k`(v12, v11) @signature `Lokhttp3/internal/http2/Http2Connection;.k:(I)Z` @kind virtual;
  #L2da466.  v12:= temp;
  #L2da468.  if v12 == 0 then goto L2da478;
  #L2da46c.  v12:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da470.  call `h`(v12, v11, v13, v10) @signature `Lokhttp3/internal/http2/Http2Connection;.h:(ILjava/util/List;Z)V` @kind virtual;
  #L2da476.  return @kind void;
  #L2da478.  v12:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da47c.  @monitorenter v12
  #L2da47e.  v0:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da482.  call temp:= `f`(v0, v11) @signature `Lokhttp3/internal/http2/Http2Connection;.f:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L2da488.  v0:= temp @kind object;
  #L2da48a.  if v0 != 0 then goto L2da536;
  #L2da48e.  v0:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da492.  v1:= v0.`okhttp3.internal.http2.Http2Connection.g` @type ^`boolean` @kind boolean;
  #L2da496.  if v1 == 0 then goto L2da49e;
  #L2da49a.  @monitorexit v12
  #L2da49c.  return @kind void;
  #L2da49e.  v1:= v0.`okhttp3.internal.http2.Http2Connection.e` @type ^`int`;
  #L2da4a2.  if v11 > v1 then goto L2da4aa;
  #L2da4a6.  @monitorexit v12
  #L2da4a8.  return @kind void;
  #L2da4aa.  v1:= v11 %% 2;
  #L2da4ae.  v0:= v0.`okhttp3.internal.http2.Http2Connection.f` @type ^`int`;
  #L2da4b2.  v2:= 2I;
  #L2da4b4.  v0:= v0 %% v2 @kind int;
  #L2da4b6.  if v1 != v0 then goto L2da4be;
  #L2da4ba.  @monitorexit v12
  #L2da4bc.  return @kind void;
  #L2da4be.  call temp:= `toHeaders`(v13) @signature `Lokhttp3/internal/Util;.toHeaders:(Ljava/util/List;)Lokhttp3/Headers;` @kind static;
  #L2da4c4.  v8:= temp @kind object;
  #L2da4c6.  v13:= new `okhttp3.internal.http2.Http2Stream`;
  #L2da4ca.  v5:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da4ce.  v6:= 0I;
  #L2da4d0.  v3:= v13 @kind object;
  #L2da4d2.  v4:= v11;
  #L2da4d4.  v7:= v10;
  #L2da4d6.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/internal/http2/Http2Stream;.<init>:(ILokhttp3/internal/http2/Http2Connection;ZZLokhttp3/Headers;)V` @kind direct;
  #L2da4dc.  v10:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da4e0.  v10.`okhttp3.internal.http2.Http2Connection.e` @type ^`int` := v11;
  #L2da4e4.  v10:= v10.`okhttp3.internal.http2.Http2Connection.c` @type ^`java.util.Map` @kind object;
  #L2da4e8.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2da4ee.  v0:= temp @kind object;
  #L2da4f0.  call temp:= `put`(v10, v0, v13) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2da4f6.  call temp:= `b`() @signature `Lokhttp3/internal/http2/Http2Connection;.b:()Ljava/util/concurrent/ExecutorService;` @kind static;
  #L2da4fc.  v10:= temp @kind object;
  #L2da4fe.  v0:= new `okhttp3.internal.http2.Http2Connection$ReaderRunnable$1`;
  #L2da502.  v1:= "OkHttp %s stream %d" @kind object;
  #L2da506.  v2:= new `java.lang.Object`[v2];
  #L2da50a.  v3:= 0I;
  #L2da50c.  v4:= v9.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da510.  v4:= v4.`okhttp3.internal.http2.Http2Connection.d` @type ^`java.lang.String` @kind object;
  #L2da514.  v2[v3]:= v4 @kind object;
  #L2da518.  v3:= 1I;
  #L2da51a.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2da520.  v11:= temp @kind object;
  #L2da522.  v2[v3]:= v11 @kind object;
  #L2da526.  call `<init>`(v0, v9, v1, v2, v13) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$1;.<init>:(Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/http2/Http2Stream;)V` @kind direct;
  #L2da52c.  call `execute`(v10, v0) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L2da532.  @monitorexit v12
  #L2da534.  return @kind void;
  #L2da536.  @monitorexit v12
  #L2da538.  call `h`(v0, v13) @signature `Lokhttp3/internal/http2/Http2Stream;.h:(Ljava/util/List;)V` @kind virtual;
  #L2da53e.  if v10 == 0 then goto L2da548;
  #L2da542.  call `g`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.g:()V` @kind virtual;
  #L2da548.  return @kind void;
  #L2da54a.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2da54c.  @monitorexit v12
  #L2da54e.  throw v10;
  catch `java.lang.Throwable` @[L2da47e..L2da538] goto L2da54a;
  catch `java.lang.Throwable` @[L2da54c..L2da54e] goto L2da54a;
}
procedure `void` `ping`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v3 @kind this, `boolean` v4 , `int` v5 , `int` v6 ) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.ping:(ZII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2da574.  if v4 == 0 then goto L2da59e;
  #L2da578.  v4:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da57c.  @monitorenter v4
  #L2da57e.  v5:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da582.  v6:= 0I;
  #L2da584.  call temp:= `d`(v5, v6) @signature `Lokhttp3/internal/http2/Http2Connection;.d:(Lokhttp3/internal/http2/Http2Connection;Z)Z` @kind static;
  #L2da58a.  v5:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da58e.  call `notifyAll`(v5) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L2da594.  @monitorexit v4
  #L2da596.  goto L2da5c0;
  #L2da598.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2da59a.  @monitorexit v4
  #L2da59c.  throw v5;
  #L2da59e.  v4:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da5a2.  call temp:= `c`(v4) @signature `Lokhttp3/internal/http2/Http2Connection;.c:(Lokhttp3/internal/http2/Http2Connection;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L2da5a8.  v4:= temp @kind object;
  #L2da5aa.  v0:= new `okhttp3.internal.http2.Http2Connection$PingRunnable`;
  #L2da5ae.  v1:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da5b2.  v2:= 1I;
  #L2da5b4.  call `<init>`(v0, v1, v2, v5, v6) @signature `Lokhttp3/internal/http2/Http2Connection$PingRunnable;.<init>:(Lokhttp3/internal/http2/Http2Connection;ZII)V` @kind direct;
  #L2da5ba.  call `execute`(v4, v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L2da5c0.  return @kind void;
  catch `java.lang.Throwable` @[L2da57e..L2da59c] goto L2da598;
  catch `java.util.concurrent.RejectedExecutionException` @[L2da59e..L2da5c0] goto L2da5c0;
}
procedure `void` `priority`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `boolean` v4 ) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.priority:(IIIZ)V` @AccessFlag PUBLIC {
    temp;

  #L2da5ec.  return @kind void;
}
procedure `void` `pushPromise`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v0 @kind this, `int` v1 , `int` v2 , `java.util.List` v3 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.pushPromise:(IILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L2da600.  v1:= v0.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da604.  call `i`(v1, v2, v3) @signature `Lokhttp3/internal/http2/Http2Connection;.i:(ILjava/util/List;)V` @kind virtual;
  #L2da60a.  return @kind void;
}
procedure `void` `rstStream`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v1 @kind this, `int` v2 , `okhttp3.internal.http2.ErrorCode` v3 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2da61c.  v0:= v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da620.  call temp:= `k`(v0, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.k:(I)Z` @kind virtual;
  #L2da626.  v0:= temp;
  #L2da628.  if v0 == 0 then goto L2da638;
  #L2da62c.  v0:= v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da630.  call `j`(v0, v2, v3) @signature `Lokhttp3/internal/http2/Http2Connection;.j:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L2da636.  return @kind void;
  #L2da638.  v0:= v1.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da63c.  call temp:= `l`(v0, v2) @signature `Lokhttp3/internal/http2/Http2Connection;.l:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L2da642.  v2:= temp @kind object;
  #L2da644.  if v2 == 0 then goto L2da64e;
  #L2da648.  call `i`(v2, v3) @signature `Lokhttp3/internal/http2/Http2Stream;.i:(Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L2da64e.  return @kind void;
}
procedure `void` `settings`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v10 @kind this, `boolean` v11 , `okhttp3.internal.http2.Settings` v12 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.settings:(ZLokhttp3/internal/http2/Settings;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2da660.  v0:= v10.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da664.  @monitorenter v0
  #L2da666.  v1:= v10.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da66a.  v1:= v1.`okhttp3.internal.http2.Http2Connection.l` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L2da66e.  call temp:= `d`(v1) @signature `Lokhttp3/internal/http2/Settings;.d:()I` @kind virtual;
  #L2da674.  v1:= temp;
  #L2da676.  if v11 == 0 then goto L2da688;
  #L2da67a.  v11:= v10.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da67e.  v11:= v11.`okhttp3.internal.http2.Http2Connection.l` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L2da682.  call `a`(v11) @signature `Lokhttp3/internal/http2/Settings;.a:()V` @kind virtual;
  #L2da688.  v11:= v10.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da68c.  v11:= v11.`okhttp3.internal.http2.Http2Connection.l` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L2da690.  call `h`(v11, v12) @signature `Lokhttp3/internal/http2/Settings;.h:(Lokhttp3/internal/http2/Settings;)V` @kind virtual;
  #L2da696.  call `applyAndAckSettings`(v10, v12) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.applyAndAckSettings:(Lokhttp3/internal/http2/Settings;)V` @kind direct;
  #L2da69c.  v11:= v10.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da6a0.  v11:= v11.`okhttp3.internal.http2.Http2Connection.l` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L2da6a4.  call temp:= `d`(v11) @signature `Lokhttp3/internal/http2/Settings;.d:()I` @kind virtual;
  #L2da6aa.  v11:= temp;
  #L2da6ac.  v12:= -1I;
  #L2da6ae.  v2:= 0L;
  #L2da6b2.  v4:= 1I;
  #L2da6b4.  v5:= 0I;
  #L2da6b6.  if v11 == v12 then goto L2da716;
  #L2da6ba.  if v11 == v1 then goto L2da716;
  #L2da6be.  v11:= v11 - v1 @kind int;
  #L2da6c0.  v11:= (`long`) v11 @kind i2l;
  #L2da6c2.  v1:= v10.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da6c6.  v6:= v1.`okhttp3.internal.http2.Http2Connection.m` @type ^`boolean` @kind boolean;
  #L2da6ca.  if v6 != 0 then goto L2da6d2;
  #L2da6ce.  v1.`okhttp3.internal.http2.Http2Connection.m` @type ^`boolean` := v4 @kind boolean;
  #L2da6d2.  v1:= v1.`okhttp3.internal.http2.Http2Connection.c` @type ^`java.util.Map` @kind object;
  #L2da6d6.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L2da6dc.  v1:= temp;
  #L2da6de.  if v1 != 0 then goto L2da718;
  #L2da6e2.  v1:= v10.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da6e6.  v1:= v1.`okhttp3.internal.http2.Http2Connection.c` @type ^`java.util.Map` @kind object;
  #L2da6ea.  call temp:= `values`(v1) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L2da6f0.  v1:= temp @kind object;
  #L2da6f2.  v5:= v10.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da6f6.  v5:= v5.`okhttp3.internal.http2.Http2Connection.c` @type ^`java.util.Map` @kind object;
  #L2da6fa.  call temp:= `size`(v5) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L2da700.  v5:= temp;
  #L2da702.  v5:= new `okhttp3.internal.http2.Http2Stream`[v5];
  #L2da706.  call temp:= `toArray`(v1, v5) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L2da70c.  v1:= temp @kind object;
  #L2da70e.  v5:= v1 @kind object;
  #L2da710.  v5:= (`okhttp3.internal.http2.Http2Stream`[]) v5 @kind object;
  #L2da714.  goto L2da718;
  #L2da716.  v11:= v2 @kind wide;
  #L2da718.  call temp:= `b`() @signature `Lokhttp3/internal/http2/Http2Connection;.b:()Ljava/util/concurrent/ExecutorService;` @kind static;
  #L2da71e.  v1:= temp @kind object;
  #L2da720.  v6:= new `okhttp3.internal.http2.Http2Connection$ReaderRunnable$2`;
  #L2da724.  v7:= "OkHttp %s settings" @kind object;
  #L2da728.  v4:= new `java.lang.Object`[v4];
  #L2da72c.  v8:= v10.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da730.  v8:= v8.`okhttp3.internal.http2.Http2Connection.d` @type ^`java.lang.String` @kind object;
  #L2da734.  v9:= 0I;
  #L2da736.  v4[v9]:= v8 @kind object;
  #L2da73a.  call `<init>`(v6, v10, v7, v4) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable$2;.<init>:(Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L2da740.  call `execute`(v1, v6) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L2da746.  @monitorexit v0
  #L2da748.  if v5 == 0 then goto L2da774;
  #L2da74c.  v0:= lcmp(v11, v2);
  #L2da750.  if v0 == 0 then goto L2da774;
  #L2da754.  v0:= length @variable v5;
  #L2da756.  if v9 >= v0 then goto L2da774;
  #L2da75a.  v1:= v5[v9] @kind object;
  #L2da75e.  @monitorenter v1
  #L2da760.  call `c`(v1, v11) @signature `Lokhttp3/internal/http2/Http2Stream;.c:(J)V` @kind virtual;
  #L2da766.  @monitorexit v1
  #L2da768.  v9:= v9 + 1;
  #L2da76c.  goto L2da756;
  #L2da76e.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2da770.  @monitorexit v1
  #L2da772.  throw v11;
  #L2da774.  return @kind void;
  #L2da776.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2da778.  @monitorexit v0
  #L2da77a.  goto L2da77e;
  #L2da77c.  throw v11;
  #L2da77e.  goto L2da77c;
  catch `java.lang.Throwable` @[L2da666..L2da748] goto L2da776;
  catch `java.lang.Throwable` @[L2da760..L2da772] goto L2da76e;
  catch `java.lang.Throwable` @[L2da778..L2da77a] goto L2da776;
}
procedure `void` `windowUpdate`(`okhttp3.internal.http2.Http2Connection$ReaderRunnable` v3 @kind this, `int` v4 , `long` v5 ) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.windowUpdate:(IJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2da7b0.  v0:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da7b4.  if v4 != 0 then goto L2da7d8;
  #L2da7b8.  @monitorenter v0
  #L2da7ba.  v4:= v3.`okhttp3.internal.http2.Http2Connection$ReaderRunnable.b` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2da7be.  v1:= v4.`okhttp3.internal.http2.Http2Connection.j` @type ^`long` @kind wide;
  #L2da7c2.  v1:= v1 + v5 @kind long;
  #L2da7c4.  v4.`okhttp3.internal.http2.Http2Connection.j` @type ^`long` := v1 @kind wide;
  #L2da7c8.  call `notifyAll`(v4) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L2da7ce.  @monitorexit v0
  #L2da7d0.  goto L2da7f6;
  #L2da7d2.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2da7d4.  @monitorexit v0
  #L2da7d6.  throw v4;
  #L2da7d8.  call temp:= `f`(v0, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.f:(I)Lokhttp3/internal/http2/Http2Stream;` @kind virtual;
  #L2da7de.  v4:= temp @kind object;
  #L2da7e0.  if v4 == 0 then goto L2da7f6;
  #L2da7e4.  @monitorenter v4
  #L2da7e6.  call `c`(v4, v5) @signature `Lokhttp3/internal/http2/Http2Stream;.c:(J)V` @kind virtual;
  #L2da7ec.  @monitorexit v4
  #L2da7ee.  goto L2da7f6;
  #L2da7f0.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2da7f2.  @monitorexit v4
  #L2da7f4.  throw v5;
  #L2da7f6.  return @kind void;
  catch `java.lang.Throwable` @[L2da7ba..L2da7d6] goto L2da7d2;
  catch `java.lang.Throwable` @[L2da7e6..L2da7f4] goto L2da7f0;
}
