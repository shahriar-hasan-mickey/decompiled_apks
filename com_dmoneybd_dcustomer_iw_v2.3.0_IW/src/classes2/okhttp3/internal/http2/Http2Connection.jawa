record `okhttp3.internal.http2.Http2Connection` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `boolean` `okhttp3.internal.http2.Http2Connection.a` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.http2.Http2Connection.awaitingPong` @AccessFlag PRIVATE;
  `okhttp3.internal.http2.Http2Connection$Listener` `okhttp3.internal.http2.Http2Connection.b` @AccessFlag FINAL;
  `java.util.Map` `okhttp3.internal.http2.Http2Connection.c` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.internal.http2.Http2Connection.d` @AccessFlag FINAL;
  `int` `okhttp3.internal.http2.Http2Connection.e` @AccessFlag ;
  `int` `okhttp3.internal.http2.Http2Connection.f` @AccessFlag ;
  `boolean` `okhttp3.internal.http2.Http2Connection.g` @AccessFlag ;
  `okhttp3.internal.http2.PushObserver` `okhttp3.internal.http2.Http2Connection.h` @AccessFlag FINAL;
  `long` `okhttp3.internal.http2.Http2Connection.i` @AccessFlag ;
  `long` `okhttp3.internal.http2.Http2Connection.j` @AccessFlag ;
  `okhttp3.internal.http2.Settings` `okhttp3.internal.http2.Http2Connection.k` @AccessFlag ;
  `okhttp3.internal.http2.Settings` `okhttp3.internal.http2.Http2Connection.l` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.http2.Http2Connection.m` @AccessFlag ;
  `java.net.Socket` `okhttp3.internal.http2.Http2Connection.n` @AccessFlag FINAL;
  `okhttp3.internal.http2.Http2Writer` `okhttp3.internal.http2.Http2Connection.o` @AccessFlag FINAL;
  `okhttp3.internal.http2.Http2Connection$ReaderRunnable` `okhttp3.internal.http2.Http2Connection.p` @AccessFlag FINAL;
  `java.util.concurrent.ExecutorService` `okhttp3.internal.http2.Http2Connection.pushExecutor` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `okhttp3.internal.http2.Http2Connection.q` @AccessFlag FINAL;
  `java.util.concurrent.ScheduledExecutorService` `okhttp3.internal.http2.Http2Connection.writerExecutor` @AccessFlag PRIVATE_FINAL;
}
global `java.util.concurrent.ExecutorService` `@@okhttp3.internal.http2.Http2Connection.listenerExecutor` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Http2Connection;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2dab54.  v0:= constclass @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2dab58.  v0:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L2dab5c.  v2:= 0I;
  #L2dab5e.  v3:= 2147483647I;
  #L2dab64.  v4:= 60L;
  #L2dab68.  v6:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2dab6c.  v7:= new `java.util.concurrent.SynchronousQueue`;
  #L2dab70.  call `<init>`(v7) @signature `Ljava/util/concurrent/SynchronousQueue;.<init>:()V` @kind direct;
  #L2dab76.  v1:= 1I;
  #L2dab78.  v8:= "OkHttp Http2Connection" @kind object;
  #L2dab7c.  call temp:= `threadFactory`(v8, v1) @signature `Lokhttp3/internal/Util;.threadFactory:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L2dab82.  v8:= temp @kind object;
  #L2dab84.  v1:= v0 @kind object;
  #L2dab86.  call `<init>`(v1, v2, v3, v4, v6, v7, v8) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L2dab8c.  `@@okhttp3.internal.http2.Http2Connection.listenerExecutor` @type ^`java.util.concurrent.ExecutorService` := v0 @kind object;
  #L2dab90.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection` v24 @kind this, `okhttp3.internal.http2.Http2Connection$Builder` v25 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.<init>:(Lokhttp3/internal/http2/Http2Connection$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;

  #L2daba4.  v0:= v24 @kind object;
  #L2daba8.  v1:= v25 @kind object;
  #L2dabac.  call `<init>`(v24) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2dabb2.  v2:= new `java.util.LinkedHashMap`;
  #L2dabb6.  call `<init>`(v2) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L2dabbc.  v0.`okhttp3.internal.http2.Http2Connection.c` @type ^`java.util.Map` := v2 @kind object;
  #L2dabc0.  v2:= 0L;
  #L2dabc4.  v0.`okhttp3.internal.http2.Http2Connection.i` @type ^`long` := v2 @kind wide;
  #L2dabc8.  v2:= new `okhttp3.internal.http2.Settings`;
  #L2dabcc.  call `<init>`(v2) @signature `Lokhttp3/internal/http2/Settings;.<init>:()V` @kind direct;
  #L2dabd2.  v0.`okhttp3.internal.http2.Http2Connection.k` @type ^`okhttp3.internal.http2.Settings` := v2 @kind object;
  #L2dabd6.  v2:= new `okhttp3.internal.http2.Settings`;
  #L2dabda.  call `<init>`(v2) @signature `Lokhttp3/internal/http2/Settings;.<init>:()V` @kind direct;
  #L2dabe0.  v0.`okhttp3.internal.http2.Http2Connection.l` @type ^`okhttp3.internal.http2.Settings` := v2 @kind object;
  #L2dabe4.  v3:= 0I;
  #L2dabe6.  v0.`okhttp3.internal.http2.Http2Connection.m` @type ^`boolean` := v3 @kind boolean;
  #L2dabea.  v4:= new `java.util.LinkedHashSet`;
  #L2dabee.  call `<init>`(v4) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L2dabf4.  v0.`okhttp3.internal.http2.Http2Connection.q` @type ^`java.util.Set` := v4 @kind object;
  #L2dabf8.  v4:= v1.`okhttp3.internal.http2.Http2Connection$Builder.f` @type ^`okhttp3.internal.http2.PushObserver` @kind object;
  #L2dabfc.  v0.`okhttp3.internal.http2.Http2Connection.h` @type ^`okhttp3.internal.http2.PushObserver` := v4 @kind object;
  #L2dac00.  v4:= v1.`okhttp3.internal.http2.Http2Connection$Builder.g` @type ^`boolean` @kind boolean;
  #L2dac04.  v0.`okhttp3.internal.http2.Http2Connection.a` @type ^`boolean` := v4 @kind boolean;
  #L2dac08.  v5:= v1.`okhttp3.internal.http2.Http2Connection$Builder.e` @type ^`okhttp3.internal.http2.Http2Connection$Listener` @kind object;
  #L2dac0c.  v0.`okhttp3.internal.http2.Http2Connection.b` @type ^`okhttp3.internal.http2.Http2Connection$Listener` := v5 @kind object;
  #L2dac10.  v5:= 2I;
  #L2dac12.  v6:= 1I;
  #L2dac14.  if v4 == 0 then goto L2dac1c;
  #L2dac18.  v7:= 1I;
  #L2dac1a.  goto L2dac1e;
  #L2dac1c.  v7:= 2I;
  #L2dac1e.  v0.`okhttp3.internal.http2.Http2Connection.f` @type ^`int` := v7;
  #L2dac22.  if v4 == 0 then goto L2dac2c;
  #L2dac26.  v7:= v7 + v5 @kind int;
  #L2dac28.  v0.`okhttp3.internal.http2.Http2Connection.f` @type ^`int` := v7;
  #L2dac2c.  v5:= 7I;
  #L2dac2e.  if v4 == 0 then goto L2dac40;
  #L2dac32.  v7:= v0.`okhttp3.internal.http2.Http2Connection.k` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L2dac36.  v8:= 16777216I;
  #L2dac3a.  call temp:= `i`(v7, v5, v8) @signature `Lokhttp3/internal/http2/Settings;.i:(II)Lokhttp3/internal/http2/Settings;` @kind virtual;
  #L2dac40.  v7:= v1.`okhttp3.internal.http2.Http2Connection$Builder.b` @type ^`java.lang.String` @kind object;
  #L2dac44.  v0.`okhttp3.internal.http2.Http2Connection.d` @type ^`java.lang.String` := v7 @kind object;
  #L2dac48.  v8:= new `java.util.concurrent.ScheduledThreadPoolExecutor`;
  #L2dac4c.  v9:= new `java.lang.Object`[v6];
  #L2dac50.  v9[v3]:= v7 @kind object;
  #L2dac54.  v10:= "OkHttp %s Writer" @kind object;
  #L2dac58.  call temp:= `format`(v10, v9) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2dac5e.  v9:= temp @kind object;
  #L2dac60.  call temp:= `threadFactory`(v9, v3) @signature `Lokhttp3/internal/Util;.threadFactory:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L2dac66.  v9:= temp @kind object;
  #L2dac68.  call `<init>`(v8, v6, v9) @signature `Ljava/util/concurrent/ScheduledThreadPoolExecutor;.<init>:(ILjava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L2dac6e.  v0.`okhttp3.internal.http2.Http2Connection.writerExecutor` @type ^`java.util.concurrent.ScheduledExecutorService` := v8 @kind object;
  #L2dac72.  v9:= v1.`okhttp3.internal.http2.Http2Connection$Builder.h` @type ^`int`;
  #L2dac76.  if v9 == 0 then goto L2dac9c;
  #L2dac7a.  v9:= new `okhttp3.internal.http2.Http2Connection$PingRunnable`;
  #L2dac7e.  call `<init>`(v9, v0, v3, v3, v3) @signature `Lokhttp3/internal/http2/Http2Connection$PingRunnable;.<init>:(Lokhttp3/internal/http2/Http2Connection;ZII)V` @kind direct;
  #L2dac84.  v10:= v1.`okhttp3.internal.http2.Http2Connection$Builder.h` @type ^`int`;
  #L2dac88.  v11:= (`long`) v10 @kind i2l;
  #L2dac8a.  v13:= (`long`) v10 @kind i2l;
  #L2dac8c.  v15:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2dac90.  v10:= v11 @kind wide;
  #L2dac92.  v12:= v13 @kind wide;
  #L2dac94.  v14:= v15 @kind object;
  #L2dac96.  call temp:= `scheduleAtFixedRate`(v8, v9, v10, v12, v14) @signature `Ljava/util/concurrent/ScheduledExecutorService;.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L2dac9c.  v8:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L2daca0.  v17:= 0I;
  #L2daca4.  v18:= 1I;
  #L2daca8.  v19:= 60L;
  #L2dacac.  v21:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2dacb0.  v22:= new `java.util.concurrent.LinkedBlockingQueue`;
  #L2dacb4.  call `<init>`(v22) @signature `Ljava/util/concurrent/LinkedBlockingQueue;.<init>:()V` @kind direct;
  #L2dacba.  v9:= new `java.lang.Object`[v6];
  #L2dacbe.  v9[v3]:= v7 @kind object;
  #L2dacc2.  v3:= "OkHttp %s Push Observer" @kind object;
  #L2dacc6.  call temp:= `format`(v3, v9) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2daccc.  v3:= temp @kind object;
  #L2dacce.  call temp:= `threadFactory`(v3, v6) @signature `Lokhttp3/internal/Util;.threadFactory:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L2dacd4.  v23:= temp @kind object;
  #L2dacd6.  v16:= v8 @kind object;
  #L2dacda.  call `<init>`(v16, v17, v18, v19, v21, v22, v23) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L2dace0.  v0.`okhttp3.internal.http2.Http2Connection.pushExecutor` @type ^`java.util.concurrent.ExecutorService` := v8 @kind object;
  #L2dace4.  v3:= 65535I;
  #L2dacea.  call temp:= `i`(v2, v5, v3) @signature `Lokhttp3/internal/http2/Settings;.i:(II)Lokhttp3/internal/http2/Settings;` @kind virtual;
  #L2dacf0.  v3:= 5I;
  #L2dacf2.  v5:= 16384I;
  #L2dacf6.  call temp:= `i`(v2, v3, v5) @signature `Lokhttp3/internal/http2/Settings;.i:(II)Lokhttp3/internal/http2/Settings;` @kind virtual;
  #L2dacfc.  call temp:= `d`(v2) @signature `Lokhttp3/internal/http2/Settings;.d:()I` @kind virtual;
  #L2dad02.  v2:= temp;
  #L2dad04.  v2:= (`long`) v2 @kind i2l;
  #L2dad06.  v0.`okhttp3.internal.http2.Http2Connection.j` @type ^`long` := v2 @kind wide;
  #L2dad0a.  v2:= v1.`okhttp3.internal.http2.Http2Connection$Builder.a` @type ^`java.net.Socket` @kind object;
  #L2dad0e.  v0.`okhttp3.internal.http2.Http2Connection.n` @type ^`java.net.Socket` := v2 @kind object;
  #L2dad12.  v2:= new `okhttp3.internal.http2.Http2Writer`;
  #L2dad16.  v3:= v1.`okhttp3.internal.http2.Http2Connection$Builder.d` @type ^`okio.BufferedSink` @kind object;
  #L2dad1a.  call `<init>`(v2, v3, v4) @signature `Lokhttp3/internal/http2/Http2Writer;.<init>:(Lokio/BufferedSink;Z)V` @kind direct;
  #L2dad20.  v0.`okhttp3.internal.http2.Http2Connection.o` @type ^`okhttp3.internal.http2.Http2Writer` := v2 @kind object;
  #L2dad24.  v2:= new `okhttp3.internal.http2.Http2Connection$ReaderRunnable`;
  #L2dad28.  v3:= new `okhttp3.internal.http2.Http2Reader`;
  #L2dad2c.  v1:= v1.`okhttp3.internal.http2.Http2Connection$Builder.c` @type ^`okio.BufferedSource` @kind object;
  #L2dad30.  call `<init>`(v3, v1, v4) @signature `Lokhttp3/internal/http2/Http2Reader;.<init>:(Lokio/BufferedSource;Z)V` @kind direct;
  #L2dad36.  call `<init>`(v2, v0, v3) @signature `Lokhttp3/internal/http2/Http2Connection$ReaderRunnable;.<init>:(Lokhttp3/internal/http2/Http2Connection;Lokhttp3/internal/http2/Http2Reader;)V` @kind direct;
  #L2dad3c.  v0.`okhttp3.internal.http2.Http2Connection.p` @type ^`okhttp3.internal.http2.Http2Connection$ReaderRunnable` := v2 @kind object;
  #L2dad40.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.http2.Http2Connection` v0 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.a:(Lokhttp3/internal/http2/Http2Connection;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2dad54.  call `failConnection`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.failConnection:()V` @kind direct;
  #L2dad5a.  return @kind void;
}
procedure `java.util.concurrent.ExecutorService` `b`() @signature `Lokhttp3/internal/http2/Http2Connection;.b:()Ljava/util/concurrent/ExecutorService;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L2da8f8.  v0:= `@@okhttp3.internal.http2.Http2Connection.listenerExecutor` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L2da8fc.  return v0 @kind object;
}
procedure `java.util.concurrent.ScheduledExecutorService` `c`(`okhttp3.internal.http2.Http2Connection` v0 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.c:(Lokhttp3/internal/http2/Http2Connection;)Ljava/util/concurrent/ScheduledExecutorService;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2da910.  v0:= v0.`okhttp3.internal.http2.Http2Connection.writerExecutor` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L2da914.  return v0 @kind object;
}
procedure `boolean` `d`(`okhttp3.internal.http2.Http2Connection` v0 @kind object, `boolean` v1 ) @signature `Lokhttp3/internal/http2/Http2Connection;.d:(Lokhttp3/internal/http2/Http2Connection;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2da820.  v0.`okhttp3.internal.http2.Http2Connection.awaitingPong` @type ^`boolean` := v1 @kind boolean;
  #L2da824.  return v1;
}
procedure `void` `failConnection`(`okhttp3.internal.http2.Http2Connection` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.failConnection:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2daea4.  v0:= `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L2daea8.  call `e`(v1, v0, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.e:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L2daeae.  return @kind void;
  catch `java.io.IOException` @[L2daea4..L2daeae] goto L2daeae;
}
procedure `okhttp3.internal.http2.Http2Stream` `newStream`(`okhttp3.internal.http2.Http2Connection` v10 @kind this, `int` v11 , `java.util.List` v12 @kind object, `boolean` v13 ) @signature `Lokhttp3/internal/http2/Http2Connection;.newStream:(ILjava/util/List;Z)Lokhttp3/internal/http2/Http2Stream;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2da980.  v6:= v13 ^~ 1;
  #L2da984.  v4:= 0I;
  #L2da986.  v7:= v10.`okhttp3.internal.http2.Http2Connection.o` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L2da98a.  @monitorenter v7
  #L2da98c.  @monitorenter v10
  #L2da98e.  v0:= v10.`okhttp3.internal.http2.Http2Connection.f` @type ^`int`;
  #L2da992.  v1:= 1073741823I;
  #L2da998.  if v0 <= v1 then goto L2da9a6;
  #L2da99c.  v0:= `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L2da9a0.  call `shutdown`(v10, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.shutdown:(Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L2da9a6.  v0:= v10.`okhttp3.internal.http2.Http2Connection.g` @type ^`boolean` @kind boolean;
  #L2da9aa.  if v0 != 0 then goto L2daa5a;
  #L2da9ae.  v8:= v10.`okhttp3.internal.http2.Http2Connection.f` @type ^`int`;
  #L2da9b2.  v0:= v8 + 2;
  #L2da9b6.  v10.`okhttp3.internal.http2.Http2Connection.f` @type ^`int` := v0;
  #L2da9ba.  v9:= new `okhttp3.internal.http2.Http2Stream`;
  #L2da9be.  v5:= 0I;
  #L2da9c0.  v0:= v9 @kind object;
  #L2da9c2.  v1:= v8;
  #L2da9c4.  v2:= v10 @kind object;
  #L2da9c6.  v3:= v6;
  #L2da9c8.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/internal/http2/Http2Stream;.<init>:(ILokhttp3/internal/http2/Http2Connection;ZZLokhttp3/Headers;)V` @kind direct;
  #L2da9ce.  if v13 == 0 then goto L2da9f4;
  #L2da9d2.  v0:= v10.`okhttp3.internal.http2.Http2Connection.j` @type ^`long` @kind wide;
  #L2da9d6.  v2:= 0L;
  #L2da9da.  v13:= lcmp(v0, v2);
  #L2da9de.  if v13 == 0 then goto L2da9f4;
  #L2da9e2.  v0:= v9.`okhttp3.internal.http2.Http2Stream.b` @type ^`long` @kind wide;
  #L2da9e6.  v13:= lcmp(v0, v2);
  #L2da9ea.  if v13 != 0 then goto L2da9f0;
  #L2da9ee.  goto L2da9f4;
  #L2da9f0.  v13:= 0I;
  #L2da9f2.  goto L2da9f6;
  #L2da9f4.  v13:= 1I;
  #L2da9f6.  call temp:= `isOpen`(v9) @signature `Lokhttp3/internal/http2/Http2Stream;.isOpen:()Z` @kind virtual;
  #L2da9fc.  v0:= temp;
  #L2da9fe.  if v0 == 0 then goto L2daa14;
  #L2daa02.  v0:= v10.`okhttp3.internal.http2.Http2Connection.c` @type ^`java.util.Map` @kind object;
  #L2daa06.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2daa0c.  v1:= temp @kind object;
  #L2daa0e.  call temp:= `put`(v0, v1, v9) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2daa14.  @monitorexit v10
  #L2daa16.  if v11 != 0 then goto L2daa26;
  #L2daa1a.  v0:= v10.`okhttp3.internal.http2.Http2Connection.o` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L2daa1e.  call `synStream`(v0, v6, v8, v11, v12) @signature `Lokhttp3/internal/http2/Http2Writer;.synStream:(ZIILjava/util/List;)V` @kind virtual;
  #L2daa24.  goto L2daa38;
  #L2daa26.  v0:= v10.`okhttp3.internal.http2.Http2Connection.a` @type ^`boolean` @kind boolean;
  #L2daa2a.  if v0 != 0 then goto L2daa4a;
  #L2daa2e.  v0:= v10.`okhttp3.internal.http2.Http2Connection.o` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L2daa32.  call `pushPromise`(v0, v11, v8, v12) @signature `Lokhttp3/internal/http2/Http2Writer;.pushPromise:(IILjava/util/List;)V` @kind virtual;
  #L2daa38.  @monitorexit v7
  #L2daa3a.  if v13 == 0 then goto L2daa48;
  #L2daa3e.  v11:= v10.`okhttp3.internal.http2.Http2Connection.o` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L2daa42.  call `flush`(v11) @signature `Lokhttp3/internal/http2/Http2Writer;.flush:()V` @kind virtual;
  #L2daa48.  return v9 @kind object;
  #L2daa4a.  v11:= new `java.lang.IllegalArgumentException`;
  #L2daa4e.  v12:= "client streams shouldn't have associated stream IDs" @kind object;
  #L2daa52.  call `<init>`(v11, v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2daa58.  throw v11;
  #L2daa5a.  v11:= new `okhttp3.internal.http2.ConnectionShutdownException`;
  #L2daa5e.  call `<init>`(v11) @signature `Lokhttp3/internal/http2/ConnectionShutdownException;.<init>:()V` @kind direct;
  #L2daa64.  throw v11;
  #L2daa66.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2daa68.  @monitorexit v10
  #L2daa6a.  throw v11;
  #L2daa6c.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2daa6e.  @monitorexit v7
  #L2daa70.  throw v11;
  catch `java.lang.Throwable` @[L2da98c..L2da98e] goto L2daa6c;
  catch `java.lang.Throwable` @[L2da98e..L2daa16] goto L2daa66;
  catch `java.lang.Throwable` @[L2daa1a..L2daa3a] goto L2daa6c;
  catch `java.lang.Throwable` @[L2daa4a..L2daa5a] goto L2daa6c;
  catch `java.lang.Throwable` @[L2daa5a..L2daa6a] goto L2daa66;
  catch `java.lang.Throwable` @[L2daa6a..L2daa70] goto L2daa6c;
}
procedure `void` `pushExecutorExecute`(`okhttp3.internal.http2.Http2Connection` v1 @kind this, `okhttp3.internal.NamedRunnable` v2 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.pushExecutorExecute:(Lokhttp3/internal/NamedRunnable;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2dafa0.  @monitorenter v1
  #L2dafa2.  call temp:= `isShutdown`(v1) @signature `Lokhttp3/internal/http2/Http2Connection;.isShutdown:()Z` @kind virtual;
  #L2dafa8.  v0:= temp;
  #L2dafaa.  if v0 != 0 then goto L2dafb8;
  #L2dafae.  v0:= v1.`okhttp3.internal.http2.Http2Connection.pushExecutor` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L2dafb2.  call `execute`(v0, v2) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L2dafb8.  @monitorexit v1
  #L2dafba.  return @kind void;
  #L2dafbc.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2dafbe.  @monitorexit v1
  #L2dafc0.  throw v2;
  catch `java.lang.Throwable` @[L2dafa2..L2dafb8] goto L2dafbc;
}
procedure `void` `close`(`okhttp3.internal.http2.Http2Connection` v2 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2dad6c.  v0:= `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L2dad70.  v1:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L2dad74.  call `e`(v2, v0, v1) @signature `Lokhttp3/internal/http2/Http2Connection;.e:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L2dad7a.  return @kind void;
}
procedure `void` `e`(`okhttp3.internal.http2.Http2Connection` v4 @kind this, `okhttp3.internal.http2.ErrorCode` v5 @kind object, `okhttp3.internal.http2.ErrorCode` v6 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.e:(Lokhttp3/internal/http2/ErrorCode;Lokhttp3/internal/http2/ErrorCode;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2dad8c.  v0:= 0I;
  #L2dad8e.  call `shutdown`(v4, v5) @signature `Lokhttp3/internal/http2/Http2Connection;.shutdown:(Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L2dad94.  v5:= v0 @kind object;
  #L2dad96.  goto L2dad9a;
  #L2dad98.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L2dad9a.  @monitorenter v4
  #L2dad9c.  v1:= v4.`okhttp3.internal.http2.Http2Connection.c` @type ^`java.util.Map` @kind object;
  #L2dada0.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L2dada6.  v1:= temp;
  #L2dada8.  if v1 != 0 then goto L2dadde;
  #L2dadac.  v0:= v4.`okhttp3.internal.http2.Http2Connection.c` @type ^`java.util.Map` @kind object;
  #L2dadb0.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L2dadb6.  v0:= temp @kind object;
  #L2dadb8.  v1:= v4.`okhttp3.internal.http2.Http2Connection.c` @type ^`java.util.Map` @kind object;
  #L2dadbc.  call temp:= `size`(v1) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L2dadc2.  v1:= temp;
  #L2dadc4.  v1:= new `okhttp3.internal.http2.Http2Stream`[v1];
  #L2dadc8.  call temp:= `toArray`(v0, v1) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L2dadce.  v0:= temp @kind object;
  #L2dadd0.  v0:= (`okhttp3.internal.http2.Http2Stream`[]) v0 @kind object;
  #L2dadd4.  v1:= v4.`okhttp3.internal.http2.Http2Connection.c` @type ^`java.util.Map` @kind object;
  #L2dadd8.  call `clear`(v1) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L2dadde.  @monitorexit v4
  #L2dade0.  if v0 == 0 then goto L2dae06;
  #L2dade4.  v1:= length @variable v0;
  #L2dade6.  v2:= 0I;
  #L2dade8.  if v2 >= v1 then goto L2dae06;
  #L2dadec.  v3:= v0[v2] @kind object;
  #L2dadf0.  call `close`(v3, v6) @signature `Lokhttp3/internal/http2/Http2Stream;.close:(Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L2dadf6.  goto L2dae00;
  #L2dadf8.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L2dadfa.  if v5 == 0 then goto L2dae00;
  #L2dadfe.  v5:= v3 @kind object;
  #L2dae00.  v2:= v2 + 1;
  #L2dae04.  goto L2dade8;
  #L2dae06.  v6:= v4.`okhttp3.internal.http2.Http2Connection.o` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L2dae0a.  call `close`(v6) @signature `Lokhttp3/internal/http2/Http2Writer;.close:()V` @kind virtual;
  #L2dae10.  goto L2dae1a;
  #L2dae12.  v6:= Exception @type ^`java.io.IOException` @kind object;
  #L2dae14.  if v5 != 0 then goto L2dae1a;
  #L2dae18.  v5:= v6 @kind object;
  #L2dae1a.  v6:= v4.`okhttp3.internal.http2.Http2Connection.n` @type ^`java.net.Socket` @kind object;
  #L2dae1e.  call `close`(v6) @signature `Ljava/net/Socket;.close:()V` @kind virtual;
  #L2dae24.  goto L2dae28;
  #L2dae26.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L2dae28.  v6:= v4.`okhttp3.internal.http2.Http2Connection.writerExecutor` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L2dae2c.  call `shutdown`(v6) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdown:()V` @kind interface;
  #L2dae32.  v6:= v4.`okhttp3.internal.http2.Http2Connection.pushExecutor` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L2dae36.  call `shutdown`(v6) @signature `Ljava/util/concurrent/ExecutorService;.shutdown:()V` @kind interface;
  #L2dae3c.  if v5 != 0 then goto L2dae42;
  #L2dae40.  return @kind void;
  #L2dae42.  throw v5;
  #L2dae44.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2dae46.  @monitorexit v4
  #L2dae48.  goto L2dae4c;
  #L2dae4a.  throw v5;
  #L2dae4c.  goto L2dae4a;
  catch `java.io.IOException` @[L2dad8e..L2dad94] goto L2dad98;
  catch `java.lang.Throwable` @[L2dad9c..L2dade0] goto L2dae44;
  catch `java.io.IOException` @[L2dadf0..L2dadf6] goto L2dadf8;
  catch `java.io.IOException` @[L2dae06..L2dae10] goto L2dae12;
  catch `java.io.IOException` @[L2dae1a..L2dae24] goto L2dae26;
  catch `java.lang.Throwable` @[L2dae46..L2dae48] goto L2dae44;
}
procedure `okhttp3.internal.http2.Http2Stream` `f`(`okhttp3.internal.http2.Http2Connection` v1 @kind this, `int` v2 ) @signature `Lokhttp3/internal/http2/Http2Connection;.f:(I)Lokhttp3/internal/http2/Http2Stream;` @AccessFlag  {
    temp;
    v0;

  #L2da940.  @monitorenter v1
  #L2da942.  v0:= v1.`okhttp3.internal.http2.Http2Connection.c` @type ^`java.util.Map` @kind object;
  #L2da946.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2da94c.  v2:= temp @kind object;
  #L2da94e.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2da954.  v2:= temp @kind object;
  #L2da956.  v2:= (`okhttp3.internal.http2.Http2Stream`) v2 @kind object;
  #L2da95a.  @monitorexit v1
  #L2da95c.  return v2 @kind object;
  #L2da95e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2da960.  @monitorexit v1
  #L2da962.  throw v2;
  catch `java.lang.Throwable` @[L2da942..L2da95a] goto L2da95e;
}
procedure `void` `flush`(`okhttp3.internal.http2.Http2Connection` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2daed0.  v0:= v1.`okhttp3.internal.http2.Http2Connection.o` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L2daed4.  call `flush`(v0) @signature `Lokhttp3/internal/http2/Http2Writer;.flush:()V` @kind virtual;
  #L2daeda.  return @kind void;
}
procedure `void` `g`(`okhttp3.internal.http2.Http2Connection` v8 @kind this, `int` v9 , `okio.BufferedSource` v10 @kind object, `int` v11 , `boolean` v12 ) @signature `Lokhttp3/internal/http2/Http2Connection;.g:(ILokio/BufferedSource;IZ)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2daeec.  v5:= new `okio.Buffer`;
  #L2daef0.  call `<init>`(v5) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L2daef6.  v0:= (`long`) v11 @kind i2l;
  #L2daef8.  call `require`(v10, v0) @signature `Lokio/BufferedSource;.require:(J)V` @kind interface;
  #L2daefe.  call temp:= `read`(v10, v5, v0) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L2daf04.  call temp:= `size`(v5) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2daf0a.  v2:= temp @kind wide;
  #L2daf0c.  v10:= lcmp(v2, v0);
  #L2daf10.  if v10 != 0 then goto L2daf52;
  #L2daf14.  v10:= new `okhttp3.internal.http2.Http2Connection$5`;
  #L2daf18.  v0:= 2I;
  #L2daf1a.  v3:= new `java.lang.Object`[v0];
  #L2daf1e.  v0:= 0I;
  #L2daf20.  v1:= v8.`okhttp3.internal.http2.Http2Connection.d` @type ^`java.lang.String` @kind object;
  #L2daf24.  v3[v0]:= v1 @kind object;
  #L2daf28.  v0:= 1I;
  #L2daf2a.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2daf30.  v1:= temp @kind object;
  #L2daf32.  v3[v0]:= v1 @kind object;
  #L2daf36.  v2:= "OkHttp %s Push Data[%s]" @kind object;
  #L2daf3a.  v0:= v10 @kind object;
  #L2daf3c.  v1:= v8 @kind object;
  #L2daf3e.  v4:= v9;
  #L2daf40.  v6:= v11;
  #L2daf42.  v7:= v12;
  #L2daf44.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lokhttp3/internal/http2/Http2Connection$5;.<init>:(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ILokio/Buffer;IZ)V` @kind direct;
  #L2daf4a.  call `pushExecutorExecute`(v8, v10) @signature `Lokhttp3/internal/http2/Http2Connection;.pushExecutorExecute:(Lokhttp3/internal/NamedRunnable;)V` @kind direct;
  #L2daf50.  return @kind void;
  #L2daf52.  v9:= new `java.io.IOException`;
  #L2daf56.  v10:= new `java.lang.StringBuilder`;
  #L2daf5a.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2daf60.  call temp:= `size`(v5) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2daf66.  v0:= temp @kind wide;
  #L2daf68.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2daf6e.  v12:= " != " @kind object;
  #L2daf72.  call temp:= `append`(v10, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2daf78.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2daf7e.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2daf84.  v10:= temp @kind object;
  #L2daf86.  call `<init>`(v9, v10) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2daf8c.  throw v9;
}
procedure `okhttp3.Protocol` `getProtocol`(`okhttp3.internal.http2.Http2Connection` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.getProtocol:()Lokhttp3/Protocol;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2da928.  v0:= `@@okhttp3.Protocol.HTTP_2` @type ^`okhttp3.Protocol` @kind object;
  #L2da92c.  return v0 @kind object;
}
procedure `void` `h`(`okhttp3.internal.http2.Http2Connection` v8 @kind this, `int` v9 , `java.util.List` v10 @kind object, `boolean` v11 ) @signature `Lokhttp3/internal/http2/Http2Connection;.h:(ILjava/util/List;Z)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2dafe0.  v7:= new `okhttp3.internal.http2.Http2Connection$4`;
  #L2dafe4.  v2:= "OkHttp %s Push Headers[%s]" @kind object;
  #L2dafe8.  v0:= 2I;
  #L2dafea.  v3:= new `java.lang.Object`[v0];
  #L2dafee.  v0:= 0I;
  #L2daff0.  v1:= v8.`okhttp3.internal.http2.Http2Connection.d` @type ^`java.lang.String` @kind object;
  #L2daff4.  v3[v0]:= v1 @kind object;
  #L2daff8.  v0:= 1I;
  #L2daffa.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2db000.  v1:= temp @kind object;
  #L2db002.  v3[v0]:= v1 @kind object;
  #L2db006.  v0:= v7 @kind object;
  #L2db008.  v1:= v8 @kind object;
  #L2db00a.  v4:= v9;
  #L2db00c.  v5:= v10 @kind object;
  #L2db00e.  v6:= v11;
  #L2db010.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/http2/Http2Connection$4;.<init>:(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;Z)V` @kind direct;
  #L2db016.  call `pushExecutorExecute`(v8, v7) @signature `Lokhttp3/internal/http2/Http2Connection;.pushExecutorExecute:(Lokhttp3/internal/NamedRunnable;)V` @kind direct;
  #L2db01c.  return @kind void;
  catch `java.util.concurrent.RejectedExecutionException` @[L2dafe0..L2db01c] goto L2db01c;
}
procedure `void` `i`(`okhttp3.internal.http2.Http2Connection` v8 @kind this, `int` v9 , `java.util.List` v10 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.i:(ILjava/util/List;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2db040.  @monitorenter v8
  #L2db042.  v0:= v8.`okhttp3.internal.http2.Http2Connection.q` @type ^`java.util.Set` @kind object;
  #L2db046.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2db04c.  v1:= temp @kind object;
  #L2db04e.  call temp:= `contains`(v0, v1) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L2db054.  v0:= temp;
  #L2db056.  if v0 == 0 then goto L2db068;
  #L2db05a.  v10:= `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L2db05e.  call `r`(v8, v9, v10) @signature `Lokhttp3/internal/http2/Http2Connection;.r:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L2db064.  @monitorexit v8
  #L2db066.  return @kind void;
  #L2db068.  v0:= v8.`okhttp3.internal.http2.Http2Connection.q` @type ^`java.util.Set` @kind object;
  #L2db06c.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2db072.  v1:= temp @kind object;
  #L2db074.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2db07a.  @monitorexit v8
  #L2db07c.  v0:= new `okhttp3.internal.http2.Http2Connection$3`;
  #L2db080.  v4:= "OkHttp %s Push Request[%s]" @kind object;
  #L2db084.  v1:= 2I;
  #L2db086.  v5:= new `java.lang.Object`[v1];
  #L2db08a.  v1:= 0I;
  #L2db08c.  v2:= v8.`okhttp3.internal.http2.Http2Connection.d` @type ^`java.lang.String` @kind object;
  #L2db090.  v5[v1]:= v2 @kind object;
  #L2db094.  v1:= 1I;
  #L2db096.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2db09c.  v2:= temp @kind object;
  #L2db09e.  v5[v1]:= v2 @kind object;
  #L2db0a2.  v2:= v0 @kind object;
  #L2db0a4.  v3:= v8 @kind object;
  #L2db0a6.  v6:= v9;
  #L2db0a8.  v7:= v10 @kind object;
  #L2db0aa.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Lokhttp3/internal/http2/Http2Connection$3;.<init>:(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;)V` @kind direct;
  #L2db0b0.  call `pushExecutorExecute`(v8, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.pushExecutorExecute:(Lokhttp3/internal/NamedRunnable;)V` @kind direct;
  #L2db0b6.  return @kind void;
  #L2db0b8.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2db0ba.  @monitorexit v8
  #L2db0bc.  throw v9;
  catch `java.lang.Throwable` @[L2db042..L2db07c] goto L2db0b8;
  catch `java.util.concurrent.RejectedExecutionException` @[L2db07c..L2db0b6] goto L2db0b6;
  catch `java.lang.Throwable` @[L2db0ba..L2db0bc] goto L2db0b8;
}
procedure `boolean` `isShutdown`(`okhttp3.internal.http2.Http2Connection` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.isShutdown:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2da838.  @monitorenter v1
  #L2da83a.  v0:= v1.`okhttp3.internal.http2.Http2Connection.g` @type ^`boolean` @kind boolean;
  #L2da83e.  @monitorexit v1
  #L2da840.  return v0;
  #L2da842.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2da844.  @monitorexit v1
  #L2da846.  throw v0;
  catch `java.lang.Throwable` @[L2da83a..L2da83e] goto L2da842;
}
procedure `void` `j`(`okhttp3.internal.http2.Http2Connection` v7 @kind this, `int` v8 , `okhttp3.internal.http2.ErrorCode` v9 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.j:(ILokhttp3/internal/http2/ErrorCode;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2db0f0.  v6:= new `okhttp3.internal.http2.Http2Connection$6`;
  #L2db0f4.  v0:= 2I;
  #L2db0f6.  v3:= new `java.lang.Object`[v0];
  #L2db0fa.  v0:= v7.`okhttp3.internal.http2.Http2Connection.d` @type ^`java.lang.String` @kind object;
  #L2db0fe.  v1:= 0I;
  #L2db100.  v3[v1]:= v0 @kind object;
  #L2db104.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2db10a.  v0:= temp @kind object;
  #L2db10c.  v1:= 1I;
  #L2db10e.  v3[v1]:= v0 @kind object;
  #L2db112.  v2:= "OkHttp %s Push Reset[%s]" @kind object;
  #L2db116.  v0:= v6 @kind object;
  #L2db118.  v1:= v7 @kind object;
  #L2db11a.  v4:= v8;
  #L2db11c.  v5:= v9 @kind object;
  #L2db11e.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/internal/http2/Http2Connection$6;.<init>:(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ILokhttp3/internal/http2/ErrorCode;)V` @kind direct;
  #L2db124.  call `pushExecutorExecute`(v7, v6) @signature `Lokhttp3/internal/http2/Http2Connection;.pushExecutorExecute:(Lokhttp3/internal/NamedRunnable;)V` @kind direct;
  #L2db12a.  return @kind void;
}
procedure `boolean` `k`(`okhttp3.internal.http2.Http2Connection` v1 @kind this, `int` v2 ) @signature `Lokhttp3/internal/http2/Http2Connection;.k:(I)Z` @AccessFlag  {
    temp;
    v0;

  #L2da864.  v0:= 1I;
  #L2da866.  if v2 == 0 then goto L2da872;
  #L2da86a.  v2:= v2 ^& v0 @kind int;
  #L2da86c.  if v2 != 0 then goto L2da872;
  #L2da870.  goto L2da874;
  #L2da872.  v0:= 0I;
  #L2da874.  return v0;
}
procedure `okhttp3.internal.http2.Http2Stream` `l`(`okhttp3.internal.http2.Http2Connection` v1 @kind this, `int` v2 ) @signature `Lokhttp3/internal/http2/Http2Connection;.l:(I)Lokhttp3/internal/http2/Http2Stream;` @AccessFlag  {
    temp;
    v0;

  #L2dab0c.  @monitorenter v1
  #L2dab0e.  v0:= v1.`okhttp3.internal.http2.Http2Connection.c` @type ^`java.util.Map` @kind object;
  #L2dab12.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2dab18.  v2:= temp @kind object;
  #L2dab1a.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2dab20.  v2:= temp @kind object;
  #L2dab22.  v2:= (`okhttp3.internal.http2.Http2Stream`) v2 @kind object;
  #L2dab26.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L2dab2c.  @monitorexit v1
  #L2dab2e.  return v2 @kind object;
  #L2dab30.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2dab32.  @monitorexit v1
  #L2dab34.  throw v2;
  catch `java.lang.Throwable` @[L2dab0e..L2dab2c] goto L2dab30;
}
procedure `void` `m`(`okhttp3.internal.http2.Http2Connection` v5 @kind this, `boolean` v6 ) @signature `Lokhttp3/internal/http2/Http2Connection;.m:(Z)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2db26c.  if v6 == 0 then goto L2db2ae;
  #L2db270.  v6:= v5.`okhttp3.internal.http2.Http2Connection.o` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L2db274.  call `connectionPreface`(v6) @signature `Lokhttp3/internal/http2/Http2Writer;.connectionPreface:()V` @kind virtual;
  #L2db27a.  v6:= v5.`okhttp3.internal.http2.Http2Connection.o` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L2db27e.  v0:= v5.`okhttp3.internal.http2.Http2Connection.k` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L2db282.  call `settings`(v6, v0) @signature `Lokhttp3/internal/http2/Http2Writer;.settings:(Lokhttp3/internal/http2/Settings;)V` @kind virtual;
  #L2db288.  v6:= v5.`okhttp3.internal.http2.Http2Connection.k` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L2db28c.  call temp:= `d`(v6) @signature `Lokhttp3/internal/http2/Settings;.d:()I` @kind virtual;
  #L2db292.  v6:= temp;
  #L2db294.  v0:= 65535I;
  #L2db29a.  if v6 == v0 then goto L2db2ae;
  #L2db29e.  v1:= v5.`okhttp3.internal.http2.Http2Connection.o` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L2db2a2.  v2:= 0I;
  #L2db2a4.  v6:= v6 - v0 @kind int;
  #L2db2a6.  v3:= (`long`) v6 @kind i2l;
  #L2db2a8.  call `windowUpdate`(v1, v2, v3) @signature `Lokhttp3/internal/http2/Http2Writer;.windowUpdate:(IJ)V` @kind virtual;
  #L2db2ae.  v6:= new `java.lang.Thread`;
  #L2db2b2.  v0:= v5.`okhttp3.internal.http2.Http2Connection.p` @type ^`okhttp3.internal.http2.Http2Connection$ReaderRunnable` @kind object;
  #L2db2b6.  call `<init>`(v6, v0) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L2db2bc.  call `start`(v6) @signature `Ljava/lang/Thread;.start:()V` @kind virtual;
  #L2db2c2.  return @kind void;
}
procedure `int` `maxConcurrentStreams`(`okhttp3.internal.http2.Http2Connection` v2 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.maxConcurrentStreams:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2da888.  @monitorenter v2
  #L2da88a.  v0:= v2.`okhttp3.internal.http2.Http2Connection.l` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L2da88e.  v1:= 2147483647I;
  #L2da894.  call temp:= `e`(v0, v1) @signature `Lokhttp3/internal/http2/Settings;.e:(I)I` @kind virtual;
  #L2da89a.  v0:= temp;
  #L2da89c.  @monitorexit v2
  #L2da89e.  return v0;
  #L2da8a0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2da8a2.  @monitorexit v2
  #L2da8a4.  throw v0;
  catch `java.lang.Throwable` @[L2da88a..L2da89c] goto L2da8a0;
}
procedure `void` `n`(`okhttp3.internal.http2.Http2Connection` v3 @kind this, `long` v4 ) @signature `Lokhttp3/internal/http2/Http2Connection;.n:(J)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L2db2d4.  @monitorenter v3
  #L2db2d6.  v0:= v3.`okhttp3.internal.http2.Http2Connection.i` @type ^`long` @kind wide;
  #L2db2da.  v0:= v0 + v4 @kind long;
  #L2db2dc.  v3.`okhttp3.internal.http2.Http2Connection.i` @type ^`long` := v0 @kind wide;
  #L2db2e0.  v4:= v3.`okhttp3.internal.http2.Http2Connection.k` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L2db2e4.  call temp:= `d`(v4) @signature `Lokhttp3/internal/http2/Settings;.d:()I` @kind virtual;
  #L2db2ea.  v4:= temp;
  #L2db2ec.  v4:= v4 / 2;
  #L2db2f0.  v4:= (`long`) v4 @kind i2l;
  #L2db2f2.  v2:= lcmp(v0, v4);
  #L2db2f6.  if v2 < 0 then goto L2db30e;
  #L2db2fa.  v4:= 0I;
  #L2db2fc.  v0:= v3.`okhttp3.internal.http2.Http2Connection.i` @type ^`long` @kind wide;
  #L2db300.  call `s`(v3, v4, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.s:(IJ)V` @kind virtual;
  #L2db306.  v4:= 0L;
  #L2db30a.  v3.`okhttp3.internal.http2.Http2Connection.i` @type ^`long` := v4 @kind wide;
  #L2db30e.  @monitorexit v3
  #L2db310.  return @kind void;
  #L2db312.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2db314.  @monitorexit v3
  #L2db316.  throw v4;
  catch `java.lang.Throwable` @[L2db2d6..L2db30e] goto L2db312;
}
procedure `okhttp3.internal.http2.Http2Stream` `newStream`(`okhttp3.internal.http2.Http2Connection` v1 @kind this, `java.util.List` v2 @kind object, `boolean` v3 ) @signature `Lokhttp3/internal/http2/Http2Connection;.newStream:(Ljava/util/List;Z)Lokhttp3/internal/http2/Http2Stream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2daabc.  v0:= 0I;
  #L2daabe.  call temp:= `newStream`(v1, v0, v2, v3) @signature `Lokhttp3/internal/http2/Http2Connection;.newStream:(ILjava/util/List;Z)Lokhttp3/internal/http2/Http2Stream;` @kind direct;
  #L2daac4.  v2:= temp @kind object;
  #L2daac6.  return v2 @kind object;
}
procedure `void` `o`(`okhttp3.internal.http2.Http2Connection` v2 @kind this, `boolean` v3 , `int` v4 , `int` v5 ) @signature `Lokhttp3/internal/http2/Http2Connection;.o:(ZII)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2db434.  if v3 != 0 then goto L2db458;
  #L2db438.  @monitorenter v2
  #L2db43a.  v0:= v2.`okhttp3.internal.http2.Http2Connection.awaitingPong` @type ^`boolean` @kind boolean;
  #L2db43e.  v1:= 1I;
  #L2db440.  v2.`okhttp3.internal.http2.Http2Connection.awaitingPong` @type ^`boolean` := v1 @kind boolean;
  #L2db444.  @monitorexit v2
  #L2db446.  if v0 == 0 then goto L2db458;
  #L2db44a.  call `failConnection`(v2) @signature `Lokhttp3/internal/http2/Http2Connection;.failConnection:()V` @kind direct;
  #L2db450.  return @kind void;
  #L2db452.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2db454.  @monitorexit v2
  #L2db456.  throw v3;
  #L2db458.  v0:= v2.`okhttp3.internal.http2.Http2Connection.o` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L2db45c.  call `ping`(v0, v3, v4, v5) @signature `Lokhttp3/internal/http2/Http2Writer;.ping:(ZII)V` @kind virtual;
  #L2db462.  goto L2db46a;
  #L2db464.  call `failConnection`(v2) @signature `Lokhttp3/internal/http2/Http2Connection;.failConnection:()V` @kind direct;
  #L2db46a.  return @kind void;
  catch `java.lang.Throwable` @[L2db43a..L2db446] goto L2db452;
  catch `java.lang.Throwable` @[L2db454..L2db456] goto L2db452;
  catch `java.io.IOException` @[L2db458..L2db462] goto L2db464;
}
procedure `int` `openStreamCount`(`okhttp3.internal.http2.Http2Connection` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.openStreamCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2da8c4.  @monitorenter v1
  #L2da8c6.  v0:= v1.`okhttp3.internal.http2.Http2Connection.c` @type ^`java.util.Map` @kind object;
  #L2da8ca.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L2da8d0.  v0:= temp;
  #L2da8d2.  @monitorexit v1
  #L2da8d4.  return v0;
  #L2da8d6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2da8d8.  @monitorexit v1
  #L2da8da.  throw v0;
  catch `java.lang.Throwable` @[L2da8c6..L2da8d2] goto L2da8d6;
}
procedure `void` `p`(`okhttp3.internal.http2.Http2Connection` v1 @kind this, `int` v2 , `boolean` v3 , `java.util.List` v4 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.p:(IZLjava/util/List;)V` @AccessFlag  {
    temp;
    v0;

  #L2db49c.  v0:= v1.`okhttp3.internal.http2.Http2Connection.o` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L2db4a0.  call `synReply`(v0, v3, v2, v4) @signature `Lokhttp3/internal/http2/Http2Writer;.synReply:(ZILjava/util/List;)V` @kind virtual;
  #L2db4a6.  return @kind void;
}
procedure `okhttp3.internal.http2.Http2Stream` `pushStream`(`okhttp3.internal.http2.Http2Connection` v1 @kind this, `int` v2 , `java.util.List` v3 @kind object, `boolean` v4 ) @signature `Lokhttp3/internal/http2/Http2Connection;.pushStream:(ILjava/util/List;Z)Lokhttp3/internal/http2/Http2Stream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2daad8.  v0:= v1.`okhttp3.internal.http2.Http2Connection.a` @type ^`boolean` @kind boolean;
  #L2daadc.  if v0 != 0 then goto L2daaea;
  #L2daae0.  call temp:= `newStream`(v1, v2, v3, v4) @signature `Lokhttp3/internal/http2/Http2Connection;.newStream:(ILjava/util/List;Z)Lokhttp3/internal/http2/Http2Stream;` @kind direct;
  #L2daae6.  v2:= temp @kind object;
  #L2daae8.  return v2 @kind object;
  #L2daaea.  v2:= new `java.lang.IllegalStateException`;
  #L2daaee.  v3:= "Client cannot push requests." @kind object;
  #L2daaf2.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2daaf8.  throw v2;
}
procedure `void` `q`(`okhttp3.internal.http2.Http2Connection` v1 @kind this, `int` v2 , `okhttp3.internal.http2.ErrorCode` v3 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.q:(ILokhttp3/internal/http2/ErrorCode;)V` @AccessFlag  {
    temp;
    v0;

  #L2db4b8.  v0:= v1.`okhttp3.internal.http2.Http2Connection.o` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L2db4bc.  call `rstStream`(v0, v2, v3) @signature `Lokhttp3/internal/http2/Http2Writer;.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L2db4c2.  return @kind void;
}
procedure `void` `r`(`okhttp3.internal.http2.Http2Connection` v8 @kind this, `int` v9 , `okhttp3.internal.http2.ErrorCode` v10 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.r:(ILokhttp3/internal/http2/ErrorCode;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2db4d4.  v0:= v8.`okhttp3.internal.http2.Http2Connection.writerExecutor` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L2db4d8.  v7:= new `okhttp3.internal.http2.Http2Connection$1`;
  #L2db4dc.  v3:= "OkHttp %s stream %d" @kind object;
  #L2db4e0.  v1:= 2I;
  #L2db4e2.  v4:= new `java.lang.Object`[v1];
  #L2db4e6.  v1:= 0I;
  #L2db4e8.  v2:= v8.`okhttp3.internal.http2.Http2Connection.d` @type ^`java.lang.String` @kind object;
  #L2db4ec.  v4[v1]:= v2 @kind object;
  #L2db4f0.  v1:= 1I;
  #L2db4f2.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2db4f8.  v2:= temp @kind object;
  #L2db4fa.  v4[v1]:= v2 @kind object;
  #L2db4fe.  v1:= v7 @kind object;
  #L2db500.  v2:= v8 @kind object;
  #L2db502.  v5:= v9;
  #L2db504.  v6:= v10 @kind object;
  #L2db506.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/http2/Http2Connection$1;.<init>:(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ILokhttp3/internal/http2/ErrorCode;)V` @kind direct;
  #L2db50c.  call `execute`(v0, v7) @signature `Ljava/util/concurrent/ScheduledExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L2db512.  return @kind void;
  catch `java.util.concurrent.RejectedExecutionException` @[L2db4d4..L2db512] goto L2db512;
}
procedure `void` `s`(`okhttp3.internal.http2.Http2Connection` v9 @kind this, `int` v10 , `long` v11 ) @signature `Lokhttp3/internal/http2/Http2Connection;.s:(IJ)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2db534.  v0:= v9.`okhttp3.internal.http2.Http2Connection.writerExecutor` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L2db538.  v8:= new `okhttp3.internal.http2.Http2Connection$2`;
  #L2db53c.  v3:= "OkHttp Window Update %s stream %d" @kind object;
  #L2db540.  v1:= 2I;
  #L2db542.  v4:= new `java.lang.Object`[v1];
  #L2db546.  v1:= 0I;
  #L2db548.  v2:= v9.`okhttp3.internal.http2.Http2Connection.d` @type ^`java.lang.String` @kind object;
  #L2db54c.  v4[v1]:= v2 @kind object;
  #L2db550.  v1:= 1I;
  #L2db552.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2db558.  v2:= temp @kind object;
  #L2db55a.  v4[v1]:= v2 @kind object;
  #L2db55e.  v1:= v8 @kind object;
  #L2db560.  v2:= v9 @kind object;
  #L2db562.  v5:= v10;
  #L2db564.  v6:= v11 @kind wide;
  #L2db566.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/http2/Http2Connection$2;.<init>:(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;IJ)V` @kind direct;
  #L2db56c.  call `execute`(v0, v8) @signature `Ljava/util/concurrent/ScheduledExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L2db572.  return @kind void;
  catch `java.util.concurrent.RejectedExecutionException` @[L2db534..L2db572] goto L2db572;
}
procedure `void` `setSettings`(`okhttp3.internal.http2.Http2Connection` v2 @kind this, `okhttp3.internal.http2.Settings` v3 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.setSettings:(Lokhttp3/internal/http2/Settings;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2db13c.  v0:= v2.`okhttp3.internal.http2.Http2Connection.o` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L2db140.  @monitorenter v0
  #L2db142.  @monitorenter v2
  #L2db144.  v1:= v2.`okhttp3.internal.http2.Http2Connection.g` @type ^`boolean` @kind boolean;
  #L2db148.  if v1 != 0 then goto L2db166;
  #L2db14c.  v1:= v2.`okhttp3.internal.http2.Http2Connection.k` @type ^`okhttp3.internal.http2.Settings` @kind object;
  #L2db150.  call `h`(v1, v3) @signature `Lokhttp3/internal/http2/Settings;.h:(Lokhttp3/internal/http2/Settings;)V` @kind virtual;
  #L2db156.  @monitorexit v2
  #L2db158.  v1:= v2.`okhttp3.internal.http2.Http2Connection.o` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L2db15c.  call `settings`(v1, v3) @signature `Lokhttp3/internal/http2/Http2Writer;.settings:(Lokhttp3/internal/http2/Settings;)V` @kind virtual;
  #L2db162.  @monitorexit v0
  #L2db164.  return @kind void;
  #L2db166.  v3:= new `okhttp3.internal.http2.ConnectionShutdownException`;
  #L2db16a.  call `<init>`(v3) @signature `Lokhttp3/internal/http2/ConnectionShutdownException;.<init>:()V` @kind direct;
  #L2db170.  throw v3;
  #L2db172.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2db174.  @monitorexit v2
  #L2db176.  throw v3;
  #L2db178.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2db17a.  @monitorexit v0
  #L2db17c.  throw v3;
  catch `java.lang.Throwable` @[L2db142..L2db144] goto L2db178;
  catch `java.lang.Throwable` @[L2db144..L2db158] goto L2db172;
  catch `java.lang.Throwable` @[L2db158..L2db164] goto L2db178;
  catch `java.lang.Throwable` @[L2db166..L2db176] goto L2db172;
  catch `java.lang.Throwable` @[L2db176..L2db17c] goto L2db178;
}
procedure `void` `shutdown`(`okhttp3.internal.http2.Http2Connection` v4 @kind this, `okhttp3.internal.http2.ErrorCode` v5 @kind object) @signature `Lokhttp3/internal/http2/Http2Connection;.shutdown:(Lokhttp3/internal/http2/ErrorCode;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2db1c0.  v0:= v4.`okhttp3.internal.http2.Http2Connection.o` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L2db1c4.  @monitorenter v0
  #L2db1c6.  @monitorenter v4
  #L2db1c8.  v1:= v4.`okhttp3.internal.http2.Http2Connection.g` @type ^`boolean` @kind boolean;
  #L2db1cc.  if v1 == 0 then goto L2db1d6;
  #L2db1d0.  @monitorexit v4
  #L2db1d2.  @monitorexit v0
  #L2db1d4.  return @kind void;
  #L2db1d6.  v1:= 1I;
  #L2db1d8.  v4.`okhttp3.internal.http2.Http2Connection.g` @type ^`boolean` := v1 @kind boolean;
  #L2db1dc.  v1:= v4.`okhttp3.internal.http2.Http2Connection.e` @type ^`int`;
  #L2db1e0.  @monitorexit v4
  #L2db1e2.  v2:= v4.`okhttp3.internal.http2.Http2Connection.o` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L2db1e6.  v3:= `@@okhttp3.internal.Util.EMPTY_BYTE_ARRAY` @type ^`byte`[] @kind object;
  #L2db1ea.  call `goAway`(v2, v1, v5, v3) @signature `Lokhttp3/internal/http2/Http2Writer;.goAway:(ILokhttp3/internal/http2/ErrorCode;[B)V` @kind virtual;
  #L2db1f0.  @monitorexit v0
  #L2db1f2.  return @kind void;
  #L2db1f4.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2db1f6.  @monitorexit v4
  #L2db1f8.  throw v5;
  #L2db1fa.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2db1fc.  @monitorexit v0
  #L2db1fe.  throw v5;
  catch `java.lang.Throwable` @[L2db1c6..L2db1c8] goto L2db1fa;
  catch `java.lang.Throwable` @[L2db1c8..L2db1d2] goto L2db1f4;
  catch `java.lang.Throwable` @[L2db1d2..L2db1d4] goto L2db1fa;
  catch `java.lang.Throwable` @[L2db1d8..L2db1e2] goto L2db1f4;
  catch `java.lang.Throwable` @[L2db1e2..L2db1f2] goto L2db1fa;
  catch `java.lang.Throwable` @[L2db1f6..L2db1f8] goto L2db1f4;
  catch `java.lang.Throwable` @[L2db1f8..L2db1fe] goto L2db1fa;
}
procedure `void` `start`(`okhttp3.internal.http2.Http2Connection` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection;.start:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2db250.  v0:= 1I;
  #L2db252.  call `m`(v1, v0) @signature `Lokhttp3/internal/http2/Http2Connection;.m:(Z)V` @kind virtual;
  #L2db258.  return @kind void;
}
procedure `void` `writeData`(`okhttp3.internal.http2.Http2Connection` v8 @kind this, `int` v9 , `boolean` v10 , `okio.Buffer` v11 @kind object, `long` v12 ) @signature `Lokhttp3/internal/http2/Http2Connection;.writeData:(IZLokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2db334.  v0:= 0I;
  #L2db336.  v1:= 0L;
  #L2db33a.  v3:= lcmp(v12, v1);
  #L2db33e.  if v3 != 0 then goto L2db34e;
  #L2db342.  v12:= v8.`okhttp3.internal.http2.Http2Connection.o` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L2db346.  call `data`(v12, v10, v9, v11, v0) @signature `Lokhttp3/internal/http2/Http2Writer;.data:(ZILokio/Buffer;I)V` @kind virtual;
  #L2db34c.  return @kind void;
  #L2db34e.  v3:= lcmp(v12, v1);
  #L2db352.  if v3 <= 0 then goto L2db402;
  #L2db356.  @monitorenter v8
  #L2db358.  v3:= v8.`okhttp3.internal.http2.Http2Connection.j` @type ^`long` @kind wide;
  #L2db35c.  v5:= lcmp(v3, v1);
  #L2db360.  if v5 > 0 then goto L2db394;
  #L2db364.  v3:= v8.`okhttp3.internal.http2.Http2Connection.c` @type ^`java.util.Map` @kind object;
  #L2db368.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2db36e.  v4:= temp @kind object;
  #L2db370.  call temp:= `containsKey`(v3, v4) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L2db376.  v3:= temp;
  #L2db378.  if v3 == 0 then goto L2db384;
  #L2db37c.  call `wait`(v8) @signature `Ljava/lang/Object;.wait:()V` @kind virtual;
  #L2db382.  goto L2db358;
  #L2db384.  v9:= new `java.io.IOException`;
  #L2db388.  v10:= "stream closed" @kind object;
  #L2db38c.  call `<init>`(v9, v10) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2db392.  throw v9;
  #L2db394.  call temp:= `min`(v12, v3) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L2db39a.  v3:= temp @kind wide;
  #L2db39c.  v4:= (`int`) v3 @kind l2i;
  #L2db39e.  v3:= v8.`okhttp3.internal.http2.Http2Connection.o` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L2db3a2.  call temp:= `maxDataLength`(v3) @signature `Lokhttp3/internal/http2/Http2Writer;.maxDataLength:()I` @kind virtual;
  #L2db3a8.  v3:= temp;
  #L2db3aa.  call temp:= `min`(v4, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L2db3b0.  v3:= temp;
  #L2db3b2.  v4:= v8.`okhttp3.internal.http2.Http2Connection.j` @type ^`long` @kind wide;
  #L2db3b6.  v6:= (`long`) v3 @kind i2l;
  #L2db3b8.  v4:= v4 - v6 @kind long;
  #L2db3ba.  v8.`okhttp3.internal.http2.Http2Connection.j` @type ^`long` := v4 @kind wide;
  #L2db3be.  @monitorexit v8
  #L2db3c0.  v12:= v12 - v6 @kind long;
  #L2db3c2.  v4:= v8.`okhttp3.internal.http2.Http2Connection.o` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L2db3c6.  if v10 == 0 then goto L2db3d6;
  #L2db3ca.  v5:= lcmp(v12, v1);
  #L2db3ce.  if v5 != 0 then goto L2db3d6;
  #L2db3d2.  v5:= 1I;
  #L2db3d4.  goto L2db3d8;
  #L2db3d6.  v5:= 0I;
  #L2db3d8.  call `data`(v4, v5, v9, v11, v3) @signature `Lokhttp3/internal/http2/Http2Writer;.data:(ZILokio/Buffer;I)V` @kind virtual;
  #L2db3de.  goto L2db34e;
  #L2db3e0.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2db3e2.  goto L2db3fe;
  #L2db3e4.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L2db3ea.  v9:= temp @kind object;
  #L2db3ec.  call `interrupt`(v9) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L2db3f2.  v9:= new `java.io.InterruptedIOException`;
  #L2db3f6.  call `<init>`(v9) @signature `Ljava/io/InterruptedIOException;.<init>:()V` @kind direct;
  #L2db3fc.  throw v9;
  #L2db3fe.  @monitorexit v8
  #L2db400.  throw v9;
  #L2db402.  return @kind void;
  catch `java.lang.InterruptedException` @[L2db358..L2db394] goto L2db3e4;
  catch `java.lang.Throwable` @[L2db358..L2db394] goto L2db3e0;
  catch `java.lang.Throwable` @[L2db394..L2db3c0] goto L2db3e0;
  catch `java.lang.Throwable` @[L2db3e4..L2db400] goto L2db3e0;
}
