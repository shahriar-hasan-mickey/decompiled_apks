record `okhttp3.internal.http2.Http2Connection$5` @kind class @AccessFlag  extends `okhttp3.internal.NamedRunnable` @kind class {
  `int` `okhttp3.internal.http2.Http2Connection$5.a` @AccessFlag FINAL_SYNTHETIC;
  `okio.Buffer` `okhttp3.internal.http2.Http2Connection$5.b` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.internal.http2.Http2Connection$5.c` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `okhttp3.internal.http2.Http2Connection$5.d` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.http2.Http2Connection$5.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$5` v0 @kind this, `okhttp3.internal.http2.Http2Connection` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `int` v4 , `okio.Buffer` v5 @kind object, `int` v6 , `boolean` v7 ) @signature `Lokhttp3/internal/http2/Http2Connection$5;.<init>:(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ILokio/Buffer;IZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2d9d48.  v0.`okhttp3.internal.http2.Http2Connection$5.e` @type ^`okhttp3.internal.http2.Http2Connection` := v1 @kind object;
  #L2d9d4c.  v0.`okhttp3.internal.http2.Http2Connection$5.a` @type ^`int` := v4;
  #L2d9d50.  v0.`okhttp3.internal.http2.Http2Connection$5.b` @type ^`okio.Buffer` := v5 @kind object;
  #L2d9d54.  v0.`okhttp3.internal.http2.Http2Connection$5.c` @type ^`int` := v6;
  #L2d9d58.  v0.`okhttp3.internal.http2.Http2Connection$5.d` @type ^`boolean` := v7 @kind boolean;
  #L2d9d5c.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L2d9d62.  return @kind void;
}
procedure `void` `execute`(`okhttp3.internal.http2.Http2Connection$5` v5 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$5;.execute:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2d9d74.  v0:= v5.`okhttp3.internal.http2.Http2Connection$5.e` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2d9d78.  v0:= v0.`okhttp3.internal.http2.Http2Connection.h` @type ^`okhttp3.internal.http2.PushObserver` @kind object;
  #L2d9d7c.  v1:= v5.`okhttp3.internal.http2.Http2Connection$5.a` @type ^`int`;
  #L2d9d80.  v2:= v5.`okhttp3.internal.http2.Http2Connection$5.b` @type ^`okio.Buffer` @kind object;
  #L2d9d84.  v3:= v5.`okhttp3.internal.http2.Http2Connection$5.c` @type ^`int`;
  #L2d9d88.  v4:= v5.`okhttp3.internal.http2.Http2Connection$5.d` @type ^`boolean` @kind boolean;
  #L2d9d8c.  call temp:= `onData`(v0, v1, v2, v3, v4) @signature `Lokhttp3/internal/http2/PushObserver;.onData:(ILokio/BufferedSource;IZ)Z` @kind interface;
  #L2d9d92.  v0:= temp;
  #L2d9d94.  if v0 == 0 then goto L2d9dae;
  #L2d9d98.  v1:= v5.`okhttp3.internal.http2.Http2Connection$5.e` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2d9d9c.  v1:= v1.`okhttp3.internal.http2.Http2Connection.o` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L2d9da0.  v2:= v5.`okhttp3.internal.http2.Http2Connection$5.a` @type ^`int`;
  #L2d9da4.  v3:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L2d9da8.  call `rstStream`(v1, v2, v3) @signature `Lokhttp3/internal/http2/Http2Writer;.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L2d9dae.  if v0 != 0 then goto L2d9dba;
  #L2d9db2.  v0:= v5.`okhttp3.internal.http2.Http2Connection$5.d` @type ^`boolean` @kind boolean;
  #L2d9db6.  if v0 == 0 then goto L2d9de4;
  #L2d9dba.  v0:= v5.`okhttp3.internal.http2.Http2Connection$5.e` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2d9dbe.  @monitorenter v0
  #L2d9dc0.  v1:= v5.`okhttp3.internal.http2.Http2Connection$5.e` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2d9dc4.  v1:= v1.`okhttp3.internal.http2.Http2Connection.q` @type ^`java.util.Set` @kind object;
  #L2d9dc8.  v2:= v5.`okhttp3.internal.http2.Http2Connection$5.a` @type ^`int`;
  #L2d9dcc.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d9dd2.  v2:= temp @kind object;
  #L2d9dd4.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L2d9dda.  @monitorexit v0
  #L2d9ddc.  goto L2d9de4;
  #L2d9dde.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2d9de0.  @monitorexit v0
  #L2d9de2.  throw v1;
  #L2d9de4.  return @kind void;
  catch `java.io.IOException` @[L2d9d74..L2d9dc0] goto L2d9de4;
  catch `java.lang.Throwable` @[L2d9dc0..L2d9de2] goto L2d9dde;
  catch `java.io.IOException` @[L2d9de2..L2d9de4] goto L2d9de4;
}
