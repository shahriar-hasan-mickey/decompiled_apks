record `okhttp3.internal.connection.RouteException` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.RuntimeException` @kind class {
  `java.io.IOException` `okhttp3.internal.connection.RouteException.firstException` @AccessFlag PRIVATE;
  `java.io.IOException` `okhttp3.internal.connection.RouteException.lastException` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RouteException` v0 @kind this, `java.io.IOException` v1 @kind object) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2d3bcc.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2d3bd2.  v0.`okhttp3.internal.connection.RouteException.firstException` @type ^`java.io.IOException` := v1 @kind object;
  #L2d3bd6.  v0.`okhttp3.internal.connection.RouteException.lastException` @type ^`java.io.IOException` := v1 @kind object;
  #L2d3bda.  return @kind void;
}
procedure `void` `addConnectException`(`okhttp3.internal.connection.RouteException` v1 @kind this, `java.io.IOException` v2 @kind object) @signature `Lokhttp3/internal/connection/RouteException;.addConnectException:(Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d3bec.  v0:= v1.`okhttp3.internal.connection.RouteException.firstException` @type ^`java.io.IOException` @kind object;
  #L2d3bf0.  call `addSuppressedIfPossible`(v0, v2) @signature `Lokhttp3/internal/Util;.addSuppressedIfPossible:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L2d3bf6.  v1.`okhttp3.internal.connection.RouteException.lastException` @type ^`java.io.IOException` := v2 @kind object;
  #L2d3bfa.  return @kind void;
}
procedure `java.io.IOException` `getFirstConnectException`(`okhttp3.internal.connection.RouteException` v1 @kind this) @signature `Lokhttp3/internal/connection/RouteException;.getFirstConnectException:()Ljava/io/IOException;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d3b9c.  v0:= v1.`okhttp3.internal.connection.RouteException.firstException` @type ^`java.io.IOException` @kind object;
  #L2d3ba0.  return v0 @kind object;
}
procedure `java.io.IOException` `getLastConnectException`(`okhttp3.internal.connection.RouteException` v1 @kind this) @signature `Lokhttp3/internal/connection/RouteException;.getLastConnectException:()Ljava/io/IOException;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d3bb4.  v0:= v1.`okhttp3.internal.connection.RouteException.lastException` @type ^`java.io.IOException` @kind object;
  #L2d3bb8.  return v0 @kind object;
}
