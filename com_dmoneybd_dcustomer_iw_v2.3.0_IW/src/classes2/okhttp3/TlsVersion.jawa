record `okhttp3.TlsVersion` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `okhttp3.TlsVersion.a` @AccessFlag FINAL;
}
global `okhttp3.TlsVersion`[] `@@okhttp3.TlsVersion.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.SSL_3_0` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_0` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_1` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_2` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_3` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lokhttp3/TlsVersion;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L2d18f0.  v0:= new `okhttp3.TlsVersion`;
  #L2d18f4.  v1:= "TLS_1_3" @kind object;
  #L2d18f8.  v2:= 0I;
  #L2d18fa.  v3:= "TLSv1.3" @kind object;
  #L2d18fe.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L2d1904.  `@@okhttp3.TlsVersion.TLS_1_3` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L2d1908.  v1:= new `okhttp3.TlsVersion`;
  #L2d190c.  v3:= "TLS_1_2" @kind object;
  #L2d1910.  v4:= 1I;
  #L2d1912.  v5:= "TLSv1.2" @kind object;
  #L2d1916.  call `<init>`(v1, v3, v4, v5) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L2d191c.  `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` := v1 @kind object;
  #L2d1920.  v3:= new `okhttp3.TlsVersion`;
  #L2d1924.  v5:= "TLS_1_1" @kind object;
  #L2d1928.  v6:= 2I;
  #L2d192a.  v7:= "TLSv1.1" @kind object;
  #L2d192e.  call `<init>`(v3, v5, v6, v7) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L2d1934.  `@@okhttp3.TlsVersion.TLS_1_1` @type ^`okhttp3.TlsVersion` := v3 @kind object;
  #L2d1938.  v5:= new `okhttp3.TlsVersion`;
  #L2d193c.  v7:= "TLS_1_0" @kind object;
  #L2d1940.  v8:= 3I;
  #L2d1942.  v9:= "TLSv1" @kind object;
  #L2d1946.  call `<init>`(v5, v7, v8, v9) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L2d194c.  `@@okhttp3.TlsVersion.TLS_1_0` @type ^`okhttp3.TlsVersion` := v5 @kind object;
  #L2d1950.  v7:= new `okhttp3.TlsVersion`;
  #L2d1954.  v9:= "SSL_3_0" @kind object;
  #L2d1958.  v10:= 4I;
  #L2d195a.  v11:= "SSLv3" @kind object;
  #L2d195e.  call `<init>`(v7, v9, v10, v11) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L2d1964.  `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` := v7 @kind object;
  #L2d1968.  v9:= 5I;
  #L2d196a.  v9:= new `okhttp3.TlsVersion`[v9];
  #L2d196e.  v9[v2]:= v0 @kind object;
  #L2d1972.  v9[v4]:= v1 @kind object;
  #L2d1976.  v9[v6]:= v3 @kind object;
  #L2d197a.  v9[v8]:= v5 @kind object;
  #L2d197e.  v9[v10]:= v7 @kind object;
  #L2d1982.  `@@okhttp3.TlsVersion.$VALUES` @type ^`okhttp3.TlsVersion`[] := v9 @kind object;
  #L2d1986.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.TlsVersion` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2d1998.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2d199e.  v0.`okhttp3.TlsVersion.a` @type ^`java.lang.String` := v3 @kind object;
  #L2d19a2.  return @kind void;
}
procedure `java.util.List` `a`(`java.lang.String`[] v4 @kind object) @signature `Lokhttp3/TlsVersion;.a:([Ljava/lang/String;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2d1730.  v0:= new `java.util.ArrayList`;
  #L2d1734.  v1:= length @variable v4;
  #L2d1736.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L2d173c.  v1:= length @variable v4;
  #L2d173e.  v2:= 0I;
  #L2d1740.  if v2 >= v1 then goto L2d175c;
  #L2d1744.  v3:= v4[v2] @kind object;
  #L2d1748.  call temp:= `forJavaName`(v3) @signature `Lokhttp3/TlsVersion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @kind static;
  #L2d174e.  v3:= temp @kind object;
  #L2d1750.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2d1756.  v2:= v2 + 1;
  #L2d175a.  goto L2d1740;
  #L2d175c.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L2d1762.  v4:= temp @kind object;
  #L2d1764.  return v4 @kind object;
}
procedure `okhttp3.TlsVersion` `forJavaName`(`java.lang.String` v3 @kind object) @signature `Lokhttp3/TlsVersion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2d1778.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2d177e.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2d1784.  v0:= temp;
  #L2d1786.  v1:= -1I;
  #L2d1788.  goto L2d1850;
  #L2d178e.  goto L2d17fc;
  #L2d1790.  v0:= "TLSv1" @kind object;
  #L2d1794.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d179a.  v0:= temp;
  #L2d179c.  if v0 != 0 then goto L2d17a2;
  #L2d17a0.  goto L2d17fc;
  #L2d17a2.  v1:= 4I;
  #L2d17a4.  goto L2d17fc;
  #L2d17a6.  v0:= "SSLv3" @kind object;
  #L2d17aa.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d17b0.  v0:= temp;
  #L2d17b2.  if v0 != 0 then goto L2d17b8;
  #L2d17b6.  goto L2d17fc;
  #L2d17b8.  v1:= 3I;
  #L2d17ba.  goto L2d17fc;
  #L2d17bc.  v0:= "TLSv1.3" @kind object;
  #L2d17c0.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d17c6.  v0:= temp;
  #L2d17c8.  if v0 != 0 then goto L2d17ce;
  #L2d17cc.  goto L2d17fc;
  #L2d17ce.  v1:= 2I;
  #L2d17d0.  goto L2d17fc;
  #L2d17d2.  v0:= "TLSv1.2" @kind object;
  #L2d17d6.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d17dc.  v0:= temp;
  #L2d17de.  if v0 != 0 then goto L2d17e4;
  #L2d17e2.  goto L2d17fc;
  #L2d17e4.  v1:= 1I;
  #L2d17e6.  goto L2d17fc;
  #L2d17e8.  v0:= "TLSv1.1" @kind object;
  #L2d17ec.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d17f2.  v0:= temp;
  #L2d17f4.  if v0 != 0 then goto L2d17fa;
  #L2d17f8.  goto L2d17fc;
  #L2d17fa.  v1:= 0I;
  #L2d17fc.  goto L2d187c;
  #L2d1802.  v0:= new `java.lang.IllegalArgumentException`;
  #L2d1806.  v1:= new `java.lang.StringBuilder`;
  #L2d180a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d1810.  v2:= "Unexpected TLS version: " @kind object;
  #L2d1814.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d181a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d1820.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d1826.  v3:= temp @kind object;
  #L2d1828.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d182e.  throw v0;
  #L2d1830.  v3:= `@@okhttp3.TlsVersion.TLS_1_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L2d1834.  return v3 @kind object;
  #L2d1836.  v3:= `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L2d183a.  return v3 @kind object;
  #L2d183c.  v3:= `@@okhttp3.TlsVersion.TLS_1_3` @type ^`okhttp3.TlsVersion` @kind object;
  #L2d1840.  return v3 @kind object;
  #L2d1842.  v3:= `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` @kind object;
  #L2d1846.  return v3 @kind object;
  #L2d1848.  v3:= `@@okhttp3.TlsVersion.TLS_1_1` @type ^`okhttp3.TlsVersion` @kind object;
  #L2d184c.  return v3 @kind object;
  #L2d184e.  
  #L2d1850.  switch v0
                  | -503070503 => goto L2d17e8
                  | -503070502 => goto L2d17d2
                  | -503070501 => goto L2d17bc
                  | 79201641 => goto L2d17a6
                  | 79923350 => goto L2d1790
                  | else => goto L2d178e;
  #L2d187c.  switch v1
                  | 0 => goto L2d1848
                  | 1 => goto L2d1842
                  | 2 => goto L2d183c
                  | 3 => goto L2d1836
                  | 4 => goto L2d1830
                  | else => goto L2d1802;
}
procedure `okhttp3.TlsVersion` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/TlsVersion;.valueOf:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2d18a8.  v0:= constclass @type ^`okhttp3.TlsVersion` @kind object;
  #L2d18ac.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L2d18b2.  v1:= temp @kind object;
  #L2d18b4.  v1:= (`okhttp3.TlsVersion`) v1 @kind object;
  #L2d18b8.  return v1 @kind object;
}
procedure `okhttp3.TlsVersion`[] `values`() @signature `Lokhttp3/TlsVersion;.values:()[Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2d18cc.  v0:= `@@okhttp3.TlsVersion.$VALUES` @type ^`okhttp3.TlsVersion`[] @kind object;
  #L2d18d0.  call temp:= `clone`(v0) @signature `[Lokhttp3/TlsVersion;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2d18d6.  v0:= temp @kind object;
  #L2d18d8.  v0:= (`okhttp3.TlsVersion`[]) v0 @kind object;
  #L2d18dc.  return v0 @kind object;
}
procedure `java.lang.String` `javaName`(`okhttp3.TlsVersion` v1 @kind this) @signature `Lokhttp3/TlsVersion;.javaName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d1718.  v0:= v1.`okhttp3.TlsVersion.a` @type ^`java.lang.String` @kind object;
  #L2d171c.  return v0 @kind object;
}
