record `com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader` @kind class @AccessFlag PUBLIC {
  `com.google.android.datatransport.runtime.backends.BackendRegistry` `com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.backendRegistry` @AccessFlag PRIVATE_FINAL;
  `com.google.android.datatransport.runtime.time.Clock` `com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.clock` @AccessFlag PRIVATE_FINAL;
  `android.content.Context` `com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.context` @AccessFlag PRIVATE_FINAL;
  `com.google.android.datatransport.runtime.scheduling.persistence.EventStore` `com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.eventStore` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.Executor` `com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.executor` @AccessFlag PRIVATE_FINAL;
  `com.google.android.datatransport.runtime.synchronization.SynchronizationGuard` `com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.guard` @AccessFlag PRIVATE_FINAL;
  `com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler` `com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.workScheduler` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.LOG_TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader` v0 @kind this, `android.content.Context` v1 @kind object, `com.google.android.datatransport.runtime.backends.BackendRegistry` v2 @kind object, `com.google.android.datatransport.runtime.scheduling.persistence.EventStore` v3 @kind object, `com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler` v4 @kind object, `java.util.concurrent.Executor` v5 @kind object, `com.google.android.datatransport.runtime.synchronization.SynchronizationGuard` v6 @kind object, `com.google.android.datatransport.runtime.time.Clock` v7 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;.<init>:(Landroid/content/Context;Lcom/google/android/datatransport/runtime/backends/BackendRegistry;Lcom/google/android/datatransport/runtime/scheduling/persistence/EventStore;Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/WorkScheduler;Ljava/util/concurrent/Executor;Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard;Lcom/google/android/datatransport/runtime/time/Clock;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3af51c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3af522.  v0.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.context` @type ^`android.content.Context` := v1 @kind object;
  #L3af526.  v0.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.backendRegistry` @type ^`com.google.android.datatransport.runtime.backends.BackendRegistry` := v2 @kind object;
  #L3af52a.  v0.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.eventStore` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.EventStore` := v3 @kind object;
  #L3af52e.  v0.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.workScheduler` @type ^`com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler` := v4 @kind object;
  #L3af532.  v0.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.executor` @type ^`java.util.concurrent.Executor` := v5 @kind object;
  #L3af536.  v0.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.guard` @type ^`com.google.android.datatransport.runtime.synchronization.SynchronizationGuard` := v6 @kind object;
  #L3af53a.  v0.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.clock` @type ^`com.google.android.datatransport.runtime.time.Clock` := v7 @kind object;
  #L3af53e.  return @kind void;
}
procedure `java.lang.Iterable` `b`(`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader` v0 @kind object, `com.google.android.datatransport.runtime.TransportContext` v1 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;.b:(Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;Lcom/google/android/datatransport/runtime/TransportContext;)Ljava/lang/Iterable;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3af444.  v0:= v0.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.eventStore` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.EventStore` @kind object;
  #L3af448.  call temp:= `loadBatch`(v0, v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/EventStore;.loadBatch:(Lcom/google/android/datatransport/runtime/TransportContext;)Ljava/lang/Iterable;` @kind interface;
  #L3af44e.  v0:= temp @kind object;
  #L3af450.  return v0 @kind object;
}
procedure `java.lang.Object` `c`(`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader` v5 @kind object, `com.google.android.datatransport.runtime.backends.BackendResponse` v6 @kind object, `java.lang.Iterable` v7 @kind object, `com.google.android.datatransport.runtime.TransportContext` v8 @kind object, `int` v9 ) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;.c:(Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;Lcom/google/android/datatransport/runtime/backends/BackendResponse;Ljava/lang/Iterable;Lcom/google/android/datatransport/runtime/TransportContext;I)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3af464.  call temp:= `getStatus`(v6) @signature `Lcom/google/android/datatransport/runtime/backends/BackendResponse;.getStatus:()Lcom/google/android/datatransport/runtime/backends/BackendResponse$Status;` @kind virtual;
  #L3af46a.  v0:= temp @kind object;
  #L3af46c.  v1:= `@@com.google.android.datatransport.runtime.backends.BackendResponse$Status.TRANSIENT_ERROR` @type ^`com.google.android.datatransport.runtime.backends.BackendResponse$Status` @kind object;
  #L3af470.  v2:= 1I;
  #L3af472.  if v0 != v1 then goto L3af48e;
  #L3af476.  v6:= v5.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.eventStore` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.EventStore` @kind object;
  #L3af47a.  call `recordFailure`(v6, v7) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/EventStore;.recordFailure:(Ljava/lang/Iterable;)V` @kind interface;
  #L3af480.  v5:= v5.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.workScheduler` @type ^`com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler` @kind object;
  #L3af484.  v9:= v9 + v2 @kind int;
  #L3af486.  call `schedule`(v5, v8, v9) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/WorkScheduler;.schedule:(Lcom/google/android/datatransport/runtime/TransportContext;I)V` @kind interface;
  #L3af48c.  goto L3af4e2;
  #L3af48e.  v9:= v5.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.eventStore` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.EventStore` @kind object;
  #L3af492.  call `recordSuccess`(v9, v7) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/EventStore;.recordSuccess:(Ljava/lang/Iterable;)V` @kind interface;
  #L3af498.  call temp:= `getStatus`(v6) @signature `Lcom/google/android/datatransport/runtime/backends/BackendResponse;.getStatus:()Lcom/google/android/datatransport/runtime/backends/BackendResponse$Status;` @kind virtual;
  #L3af49e.  v7:= temp @kind object;
  #L3af4a0.  v9:= `@@com.google.android.datatransport.runtime.backends.BackendResponse$Status.OK` @type ^`com.google.android.datatransport.runtime.backends.BackendResponse$Status` @kind object;
  #L3af4a4.  if v7 != v9 then goto L3af4c8;
  #L3af4a8.  v7:= v5.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.eventStore` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.EventStore` @kind object;
  #L3af4ac.  v9:= v5.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.clock` @type ^`com.google.android.datatransport.runtime.time.Clock` @kind object;
  #L3af4b0.  call temp:= `getTime`(v9) @signature `Lcom/google/android/datatransport/runtime/time/Clock;.getTime:()J` @kind interface;
  #L3af4b6.  v0:= temp @kind wide;
  #L3af4b8.  call temp:= `getNextRequestWaitMillis`(v6) @signature `Lcom/google/android/datatransport/runtime/backends/BackendResponse;.getNextRequestWaitMillis:()J` @kind virtual;
  #L3af4be.  v3:= temp @kind wide;
  #L3af4c0.  v0:= v0 + v3 @kind long;
  #L3af4c2.  call `recordNextCallTime`(v7, v8, v0) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/EventStore;.recordNextCallTime:(Lcom/google/android/datatransport/runtime/TransportContext;J)V` @kind interface;
  #L3af4c8.  v6:= v5.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.eventStore` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.EventStore` @kind object;
  #L3af4cc.  call temp:= `hasPendingEventsFor`(v6, v8) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/EventStore;.hasPendingEventsFor:(Lcom/google/android/datatransport/runtime/TransportContext;)Z` @kind interface;
  #L3af4d2.  v6:= temp;
  #L3af4d4.  if v6 == 0 then goto L3af4e2;
  #L3af4d8.  v5:= v5.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.workScheduler` @type ^`com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler` @kind object;
  #L3af4dc.  call `schedule`(v5, v8, v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/WorkScheduler;.schedule:(Lcom/google/android/datatransport/runtime/TransportContext;I)V` @kind interface;
  #L3af4e2.  v5:= 0I;
  #L3af4e4.  return v5 @kind object;
}
procedure `java.lang.Object` `d`(`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader` v0 @kind object, `com.google.android.datatransport.runtime.TransportContext` v1 @kind object, `int` v2 ) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;.d:(Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;Lcom/google/android/datatransport/runtime/TransportContext;I)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3af4f8.  v0:= v0.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.workScheduler` @type ^`com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler` @kind object;
  #L3af4fc.  v2:= v2 + 1;
  #L3af500.  call `schedule`(v0, v1, v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/WorkScheduler;.schedule:(Lcom/google/android/datatransport/runtime/TransportContext;I)V` @kind interface;
  #L3af506.  v0:= 0I;
  #L3af508.  return v0 @kind object;
}
procedure `void` `e`(`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader` v2 @kind object, `com.google.android.datatransport.runtime.TransportContext` v3 @kind object, `int` v4 , `java.lang.Runnable` v5 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;.e:(Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;Lcom/google/android/datatransport/runtime/TransportContext;ILjava/lang/Runnable;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L3af550.  v0:= v2.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.guard` @type ^`com.google.android.datatransport.runtime.synchronization.SynchronizationGuard` @kind object;
  #L3af554.  v1:= v2.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.eventStore` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.EventStore` @kind object;
  #L3af558.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3af55e.  call temp:= `lambdaFactory$`(v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader$$Lambda$4;.lambdaFactory$:(Lcom/google/android/datatransport/runtime/scheduling/persistence/EventStore;)Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard$CriticalSection;` @kind static;
  #L3af564.  v1:= temp @kind object;
  #L3af566.  call temp:= `runCriticalSection`(v0, v1) @signature `Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard;.runCriticalSection:(Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard$CriticalSection;)Ljava/lang/Object;` @kind interface;
  #L3af56c.  call temp:= `a`(v2) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;.a:()Z` @kind virtual;
  #L3af572.  v0:= temp;
  #L3af574.  if v0 != 0 then goto L3af58c;
  #L3af578.  v0:= v2.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.guard` @type ^`com.google.android.datatransport.runtime.synchronization.SynchronizationGuard` @kind object;
  #L3af57c.  call temp:= `lambdaFactory$`(v2, v3, v4) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader$$Lambda$5;.lambdaFactory$:(Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;Lcom/google/android/datatransport/runtime/TransportContext;I)Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard$CriticalSection;` @kind static;
  #L3af582.  v1:= temp @kind object;
  #L3af584.  call temp:= `runCriticalSection`(v0, v1) @signature `Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard;.runCriticalSection:(Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard$CriticalSection;)Ljava/lang/Object;` @kind interface;
  #L3af58a.  goto L3af5a6;
  #L3af58c.  call `f`(v2, v3, v4) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;.f:(Lcom/google/android/datatransport/runtime/TransportContext;I)V` @kind virtual;
  #L3af592.  goto L3af5a6;
  #L3af594.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3af596.  goto L3af5ae;
  #L3af598.  v2:= v2.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.workScheduler` @type ^`com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler` @kind object;
  #L3af59c.  v4:= v4 + 1;
  #L3af5a0.  call `schedule`(v2, v3, v4) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/WorkScheduler;.schedule:(Lcom/google/android/datatransport/runtime/TransportContext;I)V` @kind interface;
  #L3af5a6.  call `run`(v5) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L3af5ac.  return @kind void;
  #L3af5ae.  call `run`(v5) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L3af5b4.  throw v2;
  catch `com.google.android.datatransport.runtime.synchronization.SynchronizationException` @[L3af550..L3af592] goto L3af598;
  catch `java.lang.Throwable` @[L3af550..L3af592] goto L3af594;
  catch `java.lang.Throwable` @[L3af598..L3af5a6] goto L3af594;
}
procedure `boolean` `a`(`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader` v2 @kind this) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;.a:()Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3af400.  v0:= v2.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.context` @type ^`android.content.Context` @kind object;
  #L3af404.  v1:= "connectivity" @kind object;
  #L3af408.  call temp:= `getSystemService`(v0, v1) @signature `Landroid/content/Context;.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L3af40e.  v0:= temp @kind object;
  #L3af410.  v0:= (`android.net.ConnectivityManager`) v0 @kind object;
  #L3af414.  call temp:= `getActiveNetworkInfo`(v0) @signature `Landroid/net/ConnectivityManager;.getActiveNetworkInfo:()Landroid/net/NetworkInfo;` @kind virtual;
  #L3af41a.  v0:= temp @kind object;
  #L3af41c.  if v0 == 0 then goto L3af430;
  #L3af420.  call temp:= `isConnected`(v0) @signature `Landroid/net/NetworkInfo;.isConnected:()Z` @kind virtual;
  #L3af426.  v0:= temp;
  #L3af428.  if v0 == 0 then goto L3af430;
  #L3af42c.  v0:= 1I;
  #L3af42e.  goto L3af432;
  #L3af430.  v0:= 0I;
  #L3af432.  return v0;
}
procedure `void` `f`(`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader` v5 @kind this, `com.google.android.datatransport.runtime.TransportContext` v6 @kind object, `int` v7 ) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;.f:(Lcom/google/android/datatransport/runtime/TransportContext;I)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3af5e0.  v0:= v5.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.backendRegistry` @type ^`com.google.android.datatransport.runtime.backends.BackendRegistry` @kind object;
  #L3af5e4.  call temp:= `getBackendName`(v6) @signature `Lcom/google/android/datatransport/runtime/TransportContext;.getBackendName:()Ljava/lang/String;` @kind virtual;
  #L3af5ea.  v1:= temp @kind object;
  #L3af5ec.  call temp:= `get`(v0, v1) @signature `Lcom/google/android/datatransport/runtime/backends/BackendRegistry;.get:(Ljava/lang/String;)Lcom/google/android/datatransport/runtime/backends/TransportBackend;` @kind interface;
  #L3af5f2.  v0:= temp @kind object;
  #L3af5f4.  v1:= v5.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.guard` @type ^`com.google.android.datatransport.runtime.synchronization.SynchronizationGuard` @kind object;
  #L3af5f8.  call temp:= `lambdaFactory$`(v5, v6) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader$$Lambda$2;.lambdaFactory$:(Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;Lcom/google/android/datatransport/runtime/TransportContext;)Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard$CriticalSection;` @kind static;
  #L3af5fe.  v2:= temp @kind object;
  #L3af600.  call temp:= `runCriticalSection`(v1, v2) @signature `Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard;.runCriticalSection:(Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard$CriticalSection;)Ljava/lang/Object;` @kind interface;
  #L3af606.  v1:= temp @kind object;
  #L3af608.  v1:= (`java.lang.Iterable`) v1 @kind object;
  #L3af60c.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3af612.  v2:= temp @kind object;
  #L3af614.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3af61a.  v2:= temp;
  #L3af61c.  if v2 != 0 then goto L3af622;
  #L3af620.  return @kind void;
  #L3af622.  if v0 != 0 then goto L3af63e;
  #L3af626.  v0:= "Uploader" @kind object;
  #L3af62a.  v2:= "Unknown backend for %s, deleting event batch for it..." @kind object;
  #L3af62e.  call `d`(v0, v2, v6) @signature `Lcom/google/android/datatransport/runtime/logging/Logging;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L3af634.  call temp:= `fatalError`() @signature `Lcom/google/android/datatransport/runtime/backends/BackendResponse;.fatalError:()Lcom/google/android/datatransport/runtime/backends/BackendResponse;` @kind static;
  #L3af63a.  v0:= temp @kind object;
  #L3af63c.  goto L3af6a8;
  #L3af63e.  v2:= new `java.util.ArrayList`;
  #L3af642.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3af648.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3af64e.  v3:= temp @kind object;
  #L3af650.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3af656.  v4:= temp;
  #L3af658.  if v4 == 0 then goto L3af678;
  #L3af65c.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3af662.  v4:= temp @kind object;
  #L3af664.  v4:= (`com.google.android.datatransport.runtime.scheduling.persistence.PersistedEvent`) v4 @kind object;
  #L3af668.  call temp:= `getEvent`(v4) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/PersistedEvent;.getEvent:()Lcom/google/android/datatransport/runtime/EventInternal;` @kind virtual;
  #L3af66e.  v4:= temp @kind object;
  #L3af670.  call temp:= `add`(v2, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3af676.  goto L3af650;
  #L3af678.  call temp:= `builder`() @signature `Lcom/google/android/datatransport/runtime/backends/BackendRequest;.builder:()Lcom/google/android/datatransport/runtime/backends/BackendRequest$Builder;` @kind static;
  #L3af67e.  v3:= temp @kind object;
  #L3af680.  call temp:= `setEvents`(v3, v2) @signature `Lcom/google/android/datatransport/runtime/backends/BackendRequest$Builder;.setEvents:(Ljava/lang/Iterable;)Lcom/google/android/datatransport/runtime/backends/BackendRequest$Builder;` @kind virtual;
  #L3af686.  v2:= temp @kind object;
  #L3af688.  call temp:= `getExtras`(v6) @signature `Lcom/google/android/datatransport/runtime/TransportContext;.getExtras:()[B` @kind virtual;
  #L3af68e.  v3:= temp @kind object;
  #L3af690.  call temp:= `setExtras`(v2, v3) @signature `Lcom/google/android/datatransport/runtime/backends/BackendRequest$Builder;.setExtras:([B)Lcom/google/android/datatransport/runtime/backends/BackendRequest$Builder;` @kind virtual;
  #L3af696.  v2:= temp @kind object;
  #L3af698.  call temp:= `build`(v2) @signature `Lcom/google/android/datatransport/runtime/backends/BackendRequest$Builder;.build:()Lcom/google/android/datatransport/runtime/backends/BackendRequest;` @kind virtual;
  #L3af69e.  v2:= temp @kind object;
  #L3af6a0.  call temp:= `send`(v0, v2) @signature `Lcom/google/android/datatransport/runtime/backends/TransportBackend;.send:(Lcom/google/android/datatransport/runtime/backends/BackendRequest;)Lcom/google/android/datatransport/runtime/backends/BackendResponse;` @kind interface;
  #L3af6a6.  v0:= temp @kind object;
  #L3af6a8.  v2:= v5.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.guard` @type ^`com.google.android.datatransport.runtime.synchronization.SynchronizationGuard` @kind object;
  #L3af6ac.  call temp:= `lambdaFactory$`(v5, v0, v1, v6, v7) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader$$Lambda$3;.lambdaFactory$:(Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;Lcom/google/android/datatransport/runtime/backends/BackendResponse;Ljava/lang/Iterable;Lcom/google/android/datatransport/runtime/TransportContext;I)Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard$CriticalSection;` @kind static;
  #L3af6b2.  v6:= temp @kind object;
  #L3af6b4.  call temp:= `runCriticalSection`(v2, v6) @signature `Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard;.runCriticalSection:(Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard$CriticalSection;)Ljava/lang/Object;` @kind interface;
  #L3af6ba.  return @kind void;
}
procedure `void` `upload`(`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader` v1 @kind this, `com.google.android.datatransport.runtime.TransportContext` v2 @kind object, `int` v3 , `java.lang.Runnable` v4 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;.upload:(Lcom/google/android/datatransport/runtime/TransportContext;ILjava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3af6cc.  v0:= v1.`com.google.android.datatransport.runtime.scheduling.jobscheduling.Uploader.executor` @type ^`java.util.concurrent.Executor` @kind object;
  #L3af6d0.  call temp:= `lambdaFactory$`(v1, v2, v3, v4) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader$$Lambda$1;.lambdaFactory$:(Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/Uploader;Lcom/google/android/datatransport/runtime/TransportContext;ILjava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L3af6d6.  v2:= temp @kind object;
  #L3af6d8.  call `execute`(v0, v2) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L3af6de.  return @kind void;
}
