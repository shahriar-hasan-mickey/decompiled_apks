record `com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory` @kind class @AccessFlag PUBLIC_FINAL extends `dagger.internal.Factory` @kind interface {
  `javax.inject.Provider` `com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory.backendRegistryProvider` @AccessFlag PRIVATE_FINAL;
  `javax.inject.Provider` `com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory.eventStoreProvider` @AccessFlag PRIVATE_FINAL;
  `javax.inject.Provider` `com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory.executorProvider` @AccessFlag PRIVATE_FINAL;
  `javax.inject.Provider` `com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory.guardProvider` @AccessFlag PRIVATE_FINAL;
  `javax.inject.Provider` `com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory.workSchedulerProvider` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory` v0 @kind this, `javax.inject.Provider` v1 @kind object, `javax.inject.Provider` v2 @kind object, `javax.inject.Provider` v3 @kind object, `javax.inject.Provider` v4 @kind object, `javax.inject.Provider` v5 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/DefaultScheduler_Factory;.<init>:(Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3adbfc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3adc02.  v0.`com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory.executorProvider` @type ^`javax.inject.Provider` := v1 @kind object;
  #L3adc06.  v0.`com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory.backendRegistryProvider` @type ^`javax.inject.Provider` := v2 @kind object;
  #L3adc0a.  v0.`com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory.workSchedulerProvider` @type ^`javax.inject.Provider` := v3 @kind object;
  #L3adc0e.  v0.`com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory.eventStoreProvider` @type ^`javax.inject.Provider` := v4 @kind object;
  #L3adc12.  v0.`com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory.guardProvider` @type ^`javax.inject.Provider` := v5 @kind object;
  #L3adc16.  return @kind void;
}
procedure `com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory` `create`(`javax.inject.Provider` v7 @kind object, `javax.inject.Provider` v8 @kind object, `javax.inject.Provider` v9 @kind object, `javax.inject.Provider` v10 @kind object, `javax.inject.Provider` v11 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/DefaultScheduler_Factory;.create:(Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;)Lcom/google/android/datatransport/runtime/scheduling/DefaultScheduler_Factory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3adbb8.  v6:= new `com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory`;
  #L3adbbc.  v0:= v6 @kind object;
  #L3adbbe.  v1:= v7 @kind object;
  #L3adbc0.  v2:= v8 @kind object;
  #L3adbc2.  v3:= v9 @kind object;
  #L3adbc4.  v4:= v10 @kind object;
  #L3adbc6.  v5:= v11 @kind object;
  #L3adbc8.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/datatransport/runtime/scheduling/DefaultScheduler_Factory;.<init>:(Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;Ljavax/inject/Provider;)V` @kind direct;
  #L3adbce.  return v6 @kind object;
}
procedure `com.google.android.datatransport.runtime.scheduling.DefaultScheduler` `newInstance`(`java.util.concurrent.Executor` v7 @kind object, `com.google.android.datatransport.runtime.backends.BackendRegistry` v8 @kind object, `com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler` v9 @kind object, `com.google.android.datatransport.runtime.scheduling.persistence.EventStore` v10 @kind object, `com.google.android.datatransport.runtime.synchronization.SynchronizationGuard` v11 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/DefaultScheduler_Factory;.newInstance:(Ljava/util/concurrent/Executor;Lcom/google/android/datatransport/runtime/backends/BackendRegistry;Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/WorkScheduler;Lcom/google/android/datatransport/runtime/scheduling/persistence/EventStore;Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard;)Lcom/google/android/datatransport/runtime/scheduling/DefaultScheduler;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3adb90.  v6:= new `com.google.android.datatransport.runtime.scheduling.DefaultScheduler`;
  #L3adb94.  v0:= v6 @kind object;
  #L3adb96.  v1:= v7 @kind object;
  #L3adb98.  v2:= v8 @kind object;
  #L3adb9a.  v3:= v9 @kind object;
  #L3adb9c.  v4:= v10 @kind object;
  #L3adb9e.  v5:= v11 @kind object;
  #L3adba0.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/datatransport/runtime/scheduling/DefaultScheduler;.<init>:(Ljava/util/concurrent/Executor;Lcom/google/android/datatransport/runtime/backends/BackendRegistry;Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/WorkScheduler;Lcom/google/android/datatransport/runtime/scheduling/persistence/EventStore;Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard;)V` @kind direct;
  #L3adba6.  return v6 @kind object;
}
procedure `com.google.android.datatransport.runtime.scheduling.DefaultScheduler` `get`(`com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory` v7 @kind this) @signature `Lcom/google/android/datatransport/runtime/scheduling/DefaultScheduler_Factory;.get:()Lcom/google/android/datatransport/runtime/scheduling/DefaultScheduler;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3adb18.  v6:= new `com.google.android.datatransport.runtime.scheduling.DefaultScheduler`;
  #L3adb1c.  v0:= v7.`com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory.executorProvider` @type ^`javax.inject.Provider` @kind object;
  #L3adb20.  call temp:= `get`(v0) @signature `Ljavax/inject/Provider;.get:()Ljava/lang/Object;` @kind interface;
  #L3adb26.  v0:= temp @kind object;
  #L3adb28.  v1:= v0 @kind object;
  #L3adb2a.  v1:= (`java.util.concurrent.Executor`) v1 @kind object;
  #L3adb2e.  v0:= v7.`com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory.backendRegistryProvider` @type ^`javax.inject.Provider` @kind object;
  #L3adb32.  call temp:= `get`(v0) @signature `Ljavax/inject/Provider;.get:()Ljava/lang/Object;` @kind interface;
  #L3adb38.  v0:= temp @kind object;
  #L3adb3a.  v2:= v0 @kind object;
  #L3adb3c.  v2:= (`com.google.android.datatransport.runtime.backends.BackendRegistry`) v2 @kind object;
  #L3adb40.  v0:= v7.`com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory.workSchedulerProvider` @type ^`javax.inject.Provider` @kind object;
  #L3adb44.  call temp:= `get`(v0) @signature `Ljavax/inject/Provider;.get:()Ljava/lang/Object;` @kind interface;
  #L3adb4a.  v0:= temp @kind object;
  #L3adb4c.  v3:= v0 @kind object;
  #L3adb4e.  v3:= (`com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler`) v3 @kind object;
  #L3adb52.  v0:= v7.`com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory.eventStoreProvider` @type ^`javax.inject.Provider` @kind object;
  #L3adb56.  call temp:= `get`(v0) @signature `Ljavax/inject/Provider;.get:()Ljava/lang/Object;` @kind interface;
  #L3adb5c.  v0:= temp @kind object;
  #L3adb5e.  v4:= v0 @kind object;
  #L3adb60.  v4:= (`com.google.android.datatransport.runtime.scheduling.persistence.EventStore`) v4 @kind object;
  #L3adb64.  v0:= v7.`com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory.guardProvider` @type ^`javax.inject.Provider` @kind object;
  #L3adb68.  call temp:= `get`(v0) @signature `Ljavax/inject/Provider;.get:()Ljava/lang/Object;` @kind interface;
  #L3adb6e.  v0:= temp @kind object;
  #L3adb70.  v5:= v0 @kind object;
  #L3adb72.  v5:= (`com.google.android.datatransport.runtime.synchronization.SynchronizationGuard`) v5 @kind object;
  #L3adb76.  v0:= v6 @kind object;
  #L3adb78.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/datatransport/runtime/scheduling/DefaultScheduler;.<init>:(Ljava/util/concurrent/Executor;Lcom/google/android/datatransport/runtime/backends/BackendRegistry;Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/WorkScheduler;Lcom/google/android/datatransport/runtime/scheduling/persistence/EventStore;Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard;)V` @kind direct;
  #L3adb7e.  return v6 @kind object;
}
procedure `java.lang.Object` `get`(`com.google.android.datatransport.runtime.scheduling.DefaultScheduler_Factory` v1 @kind this) @signature `Lcom/google/android/datatransport/runtime/scheduling/DefaultScheduler_Factory;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3adbe0.  call temp:= `get`(v1) @signature `Lcom/google/android/datatransport/runtime/scheduling/DefaultScheduler_Factory;.get:()Lcom/google/android/datatransport/runtime/scheduling/DefaultScheduler;` @kind virtual;
  #L3adbe6.  v0:= temp @kind object;
  #L3adbe8.  return v0 @kind object;
}
