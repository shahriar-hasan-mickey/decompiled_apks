record `com.dmoney.security.remote.retrofit.interceptor.AuthenticationInterceptor` @kind class @AccessFlag PUBLIC extends `okhttp3.Interceptor` @kind interface {
  `java.lang.String` `com.dmoney.security.remote.retrofit.interceptor.AuthenticationInterceptor.authToken` @AccessFlag PRIVATE;
  `java.lang.String` `com.dmoney.security.remote.retrofit.interceptor.AuthenticationInterceptor.productCode` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.dmoney.security.remote.retrofit.interceptor.AuthenticationInterceptor` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/dmoney/security/remote/retrofit/interceptor/AuthenticationInterceptor;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2cacfc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2cad02.  v0.`com.dmoney.security.remote.retrofit.interceptor.AuthenticationInterceptor.authToken` @type ^`java.lang.String` := v1 @kind object;
  #L2cad06.  return @kind void;
}
procedure `void` `<init>`(`com.dmoney.security.remote.retrofit.interceptor.AuthenticationInterceptor` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/dmoney/security/remote/retrofit/interceptor/AuthenticationInterceptor;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2cad18.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2cad1e.  v0.`com.dmoney.security.remote.retrofit.interceptor.AuthenticationInterceptor.authToken` @type ^`java.lang.String` := v1 @kind object;
  #L2cad22.  v0.`com.dmoney.security.remote.retrofit.interceptor.AuthenticationInterceptor.productCode` @type ^`java.lang.String` := v2 @kind object;
  #L2cad26.  return @kind void;
}
procedure `okhttp3.Response` `intercept`(`com.dmoney.security.remote.retrofit.interceptor.AuthenticationInterceptor` v3 @kind this, `okhttp3.Interceptor$Chain` v4 @kind object) @signature `Lcom/dmoney/security/remote/retrofit/interceptor/AuthenticationInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2cac6c.  call temp:= `request`(v4) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L2cac72.  v0:= temp @kind object;
  #L2cac74.  call temp:= `newBuilder`(v0) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @kind virtual;
  #L2cac7a.  v0:= temp @kind object;
  #L2cac7c.  v1:= "Content-Type" @kind object;
  #L2cac80.  v2:= "application/json" @kind object;
  #L2cac84.  call temp:= `addHeader`(v0, v1, v2) @signature `Lokhttp3/Request$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L2cac8a.  v1:= "Accept" @kind object;
  #L2cac8e.  call temp:= `addHeader`(v0, v1, v2) @signature `Lokhttp3/Request$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L2cac94.  v1:= v3.`com.dmoney.security.remote.retrofit.interceptor.AuthenticationInterceptor.authToken` @type ^`java.lang.String` @kind object;
  #L2cac98.  if v1 == 0 then goto L2cacb6;
  #L2cac9c.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L2caca2.  v1:= temp;
  #L2caca4.  if v1 != 0 then goto L2cacb6;
  #L2caca8.  v1:= v3.`com.dmoney.security.remote.retrofit.interceptor.AuthenticationInterceptor.authToken` @type ^`java.lang.String` @kind object;
  #L2cacac.  v2:= "Authorization" @kind object;
  #L2cacb0.  call temp:= `addHeader`(v0, v2, v1) @signature `Lokhttp3/Request$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L2cacb6.  v1:= v3.`com.dmoney.security.remote.retrofit.interceptor.AuthenticationInterceptor.productCode` @type ^`java.lang.String` @kind object;
  #L2cacba.  if v1 == 0 then goto L2cacd8;
  #L2cacbe.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L2cacc4.  v1:= temp;
  #L2cacc6.  if v1 != 0 then goto L2cacd8;
  #L2cacca.  v1:= v3.`com.dmoney.security.remote.retrofit.interceptor.AuthenticationInterceptor.productCode` @type ^`java.lang.String` @kind object;
  #L2cacce.  v2:= "productCode" @kind object;
  #L2cacd2.  call temp:= `addHeader`(v0, v2, v1) @signature `Lokhttp3/Request$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L2cacd8.  call temp:= `build`(v0) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L2cacde.  v0:= temp @kind object;
  #L2cace0.  call temp:= `proceed`(v4, v0) @signature `Lokhttp3/Interceptor$Chain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #L2cace6.  v4:= temp @kind object;
  #L2cace8.  return v4 @kind object;
}
