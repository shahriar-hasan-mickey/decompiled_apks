record `com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.API_BASE_URL` @AccessFlag PRIVATE;
  `okhttp3.logging.HttpLoggingInterceptor` `com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.httpLoggingInterceptor` @AccessFlag PRIVATE;
  `boolean` `com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.isConfigured` @AccessFlag PRIVATE;
  `okhttp3.OkHttpClient` `com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.okHttpClient` @AccessFlag PRIVATE;
  `okhttp3.OkHttpClient$Builder` `com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.okHttpClientBuilder` @AccessFlag PRIVATE;
  `retrofit2.Retrofit` `com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.retrofit` @AccessFlag PRIVATE;
  `retrofit2.Retrofit$Builder` `com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.retrofitBuilder` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator` v1 @kind this) @signature `Lcom/dmoney/security/remote/retrofit/generator/SecurityServiceGenerator;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2cab18.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2cab1e.  v0:= "http://localhost:8080/" @kind object;
  #L2cab22.  v1.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.API_BASE_URL` @type ^`java.lang.String` := v0 @kind object;
  #L2cab26.  v0:= 0I;
  #L2cab28.  v1.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.isConfigured` @type ^`boolean` := v0 @kind boolean;
  #L2cab2c.  return @kind void;
}
procedure `void` `configureRetrofit`(`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator` v4 @kind this) @signature `Lcom/dmoney/security/remote/retrofit/generator/SecurityServiceGenerator;.configureRetrofit:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2cab40.  v0:= v4.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.isConfigured` @type ^`boolean` @kind boolean;
  #L2cab44.  if v0 == 0 then goto L2cab4a;
  #L2cab48.  return @kind void;
  #L2cab4a.  v0:= new `okhttp3.logging.HttpLoggingInterceptor`;
  #L2cab4e.  call `<init>`(v0) @signature `Lokhttp3/logging/HttpLoggingInterceptor;.<init>:()V` @kind direct;
  #L2cab54.  v1:= `@@okhttp3.logging.HttpLoggingInterceptor$Level.BODY` @type ^`okhttp3.logging.HttpLoggingInterceptor$Level` @kind object;
  #L2cab58.  call temp:= `setLevel`(v0, v1) @signature `Lokhttp3/logging/HttpLoggingInterceptor;.setLevel:(Lokhttp3/logging/HttpLoggingInterceptor$Level;)Lokhttp3/logging/HttpLoggingInterceptor;` @kind virtual;
  #L2cab5e.  v0:= temp @kind object;
  #L2cab60.  v4.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.httpLoggingInterceptor` @type ^`okhttp3.logging.HttpLoggingInterceptor` := v0 @kind object;
  #L2cab64.  v0:= new `okhttp3.OkHttpClient$Builder`;
  #L2cab68.  call `<init>`(v0) @signature `Lokhttp3/OkHttpClient$Builder;.<init>:()V` @kind direct;
  #L2cab6e.  v4.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.okHttpClientBuilder` @type ^`okhttp3.OkHttpClient$Builder` := v0 @kind object;
  #L2cab72.  call temp:= `interceptors`(v0) @signature `Lokhttp3/OkHttpClient$Builder;.interceptors:()Ljava/util/List;` @kind virtual;
  #L2cab78.  v0:= temp @kind object;
  #L2cab7a.  v1:= v4.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.httpLoggingInterceptor` @type ^`okhttp3.logging.HttpLoggingInterceptor` @kind object;
  #L2cab7e.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L2cab84.  v0:= temp;
  #L2cab86.  if v0 != 0 then goto L2cab98;
  #L2cab8a.  v0:= v4.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.okHttpClientBuilder` @type ^`okhttp3.OkHttpClient$Builder` @kind object;
  #L2cab8e.  v1:= v4.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.httpLoggingInterceptor` @type ^`okhttp3.logging.HttpLoggingInterceptor` @kind object;
  #L2cab92.  call temp:= `addInterceptor`(v0, v1) @signature `Lokhttp3/OkHttpClient$Builder;.addInterceptor:(Lokhttp3/Interceptor;)Lokhttp3/OkHttpClient$Builder;` @kind virtual;
  #L2cab98.  v0:= v4.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.okHttpClientBuilder` @type ^`okhttp3.OkHttpClient$Builder` @kind object;
  #L2cab9c.  call temp:= `build`(v0) @signature `Lokhttp3/OkHttpClient$Builder;.build:()Lokhttp3/OkHttpClient;` @kind virtual;
  #L2caba2.  v0:= temp @kind object;
  #L2caba4.  v4.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.okHttpClient` @type ^`okhttp3.OkHttpClient` := v0 @kind object;
  #L2caba8.  v0:= new `com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator$1`;
  #L2cabac.  call `<init>`(v0, v4) @signature `Lcom/dmoney/security/remote/retrofit/generator/SecurityServiceGenerator$1;.<init>:(Lcom/dmoney/security/remote/retrofit/generator/SecurityServiceGenerator;)V` @kind direct;
  #L2cabb2.  v1:= new `com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator$2`;
  #L2cabb6.  call `<init>`(v1, v4) @signature `Lcom/dmoney/security/remote/retrofit/generator/SecurityServiceGenerator$2;.<init>:(Lcom/dmoney/security/remote/retrofit/generator/SecurityServiceGenerator;)V` @kind direct;
  #L2cabbc.  v2:= new `com.google.gson.GsonBuilder`;
  #L2cabc0.  call `<init>`(v2) @signature `Lcom/google/gson/GsonBuilder;.<init>:()V` @kind direct;
  #L2cabc6.  v3:= constclass @type ^`java.util.Date` @kind object;
  #L2cabca.  call temp:= `registerTypeAdapter`(v2, v3, v0) @signature `Lcom/google/gson/GsonBuilder;.registerTypeAdapter:(Ljava/lang/reflect/Type;Ljava/lang/Object;)Lcom/google/gson/GsonBuilder;` @kind virtual;
  #L2cabd0.  v0:= temp @kind object;
  #L2cabd2.  v2:= constclass @type ^`java.util.Date` @kind object;
  #L2cabd6.  call temp:= `registerTypeAdapter`(v0, v2, v1) @signature `Lcom/google/gson/GsonBuilder;.registerTypeAdapter:(Ljava/lang/reflect/Type;Ljava/lang/Object;)Lcom/google/gson/GsonBuilder;` @kind virtual;
  #L2cabdc.  v0:= temp @kind object;
  #L2cabde.  call temp:= `create`(v0) @signature `Lcom/google/gson/GsonBuilder;.create:()Lcom/google/gson/Gson;` @kind virtual;
  #L2cabe4.  v0:= temp @kind object;
  #L2cabe6.  v1:= new `retrofit2.Retrofit$Builder`;
  #L2cabea.  call `<init>`(v1) @signature `Lretrofit2/Retrofit$Builder;.<init>:()V` @kind direct;
  #L2cabf0.  v2:= v4.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.API_BASE_URL` @type ^`java.lang.String` @kind object;
  #L2cabf4.  call temp:= `baseUrl`(v1, v2) @signature `Lretrofit2/Retrofit$Builder;.baseUrl:(Ljava/lang/String;)Lretrofit2/Retrofit$Builder;` @kind virtual;
  #L2cabfa.  v1:= temp @kind object;
  #L2cabfc.  call temp:= `create`(v0) @signature `Lretrofit2/converter/gson/GsonConverterFactory;.create:(Lcom/google/gson/Gson;)Lretrofit2/converter/gson/GsonConverterFactory;` @kind static;
  #L2cac02.  v0:= temp @kind object;
  #L2cac04.  call temp:= `addConverterFactory`(v1, v0) @signature `Lretrofit2/Retrofit$Builder;.addConverterFactory:(Lretrofit2/Converter$Factory;)Lretrofit2/Retrofit$Builder;` @kind virtual;
  #L2cac0a.  v0:= temp @kind object;
  #L2cac0c.  v4.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.retrofitBuilder` @type ^`retrofit2.Retrofit$Builder` := v0 @kind object;
  #L2cac10.  v1:= v4.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.okHttpClient` @type ^`okhttp3.OkHttpClient` @kind object;
  #L2cac14.  call temp:= `client`(v0, v1) @signature `Lretrofit2/Retrofit$Builder;.client:(Lokhttp3/OkHttpClient;)Lretrofit2/Retrofit$Builder;` @kind virtual;
  #L2cac1a.  v0:= v4.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.retrofitBuilder` @type ^`retrofit2.Retrofit$Builder` @kind object;
  #L2cac1e.  call temp:= `build`(v0) @signature `Lretrofit2/Retrofit$Builder;.build:()Lretrofit2/Retrofit;` @kind virtual;
  #L2cac24.  v0:= temp @kind object;
  #L2cac26.  v4.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.retrofit` @type ^`retrofit2.Retrofit` := v0 @kind object;
  #L2cac2a.  v0:= 1I;
  #L2cac2c.  v4.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.isConfigured` @type ^`boolean` := v0 @kind boolean;
  #L2cac30.  return @kind void;
}
procedure `java.lang.Object` `createService`(`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/dmoney/security/remote/retrofit/generator/SecurityServiceGenerator;.createService:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ca9b4.  v0:= v1.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.isConfigured` @type ^`boolean` @kind boolean;
  #L2ca9b8.  if v0 != 0 then goto L2ca9c2;
  #L2ca9bc.  call `configureRetrofit`(v1) @signature `Lcom/dmoney/security/remote/retrofit/generator/SecurityServiceGenerator;.configureRetrofit:()V` @kind virtual;
  #L2ca9c2.  v0:= 0I;
  #L2ca9c4.  call temp:= `createService`(v1, v2, v0, v0) @signature `Lcom/dmoney/security/remote/retrofit/generator/SecurityServiceGenerator;.createService:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L2ca9ca.  v2:= temp @kind object;
  #L2ca9cc.  return v2 @kind object;
}
procedure `java.lang.Object` `createService`(`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/dmoney/security/remote/retrofit/generator/SecurityServiceGenerator;.createService:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ca9e0.  v0:= v1.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.isConfigured` @type ^`boolean` @kind boolean;
  #L2ca9e4.  if v0 != 0 then goto L2ca9ee;
  #L2ca9e8.  call `configureRetrofit`(v1) @signature `Lcom/dmoney/security/remote/retrofit/generator/SecurityServiceGenerator;.configureRetrofit:()V` @kind virtual;
  #L2ca9ee.  call temp:= `isEmpty`(v3) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L2ca9f4.  v0:= temp;
  #L2ca9f6.  if v0 != 0 then goto L2caa50;
  #L2ca9fa.  v0:= new `com.dmoney.security.remote.retrofit.interceptor.AuthenticationInterceptor`;
  #L2ca9fe.  call `<init>`(v0, v3) @signature `Lcom/dmoney/security/remote/retrofit/interceptor/AuthenticationInterceptor;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2caa04.  v3:= v1.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.okHttpClientBuilder` @type ^`okhttp3.OkHttpClient$Builder` @kind object;
  #L2caa08.  call temp:= `interceptors`(v3) @signature `Lokhttp3/OkHttpClient$Builder;.interceptors:()Ljava/util/List;` @kind virtual;
  #L2caa0e.  v3:= temp @kind object;
  #L2caa10.  call temp:= `contains`(v3, v0) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L2caa16.  v3:= temp;
  #L2caa18.  if v3 != 0 then goto L2caa50;
  #L2caa1c.  v3:= v1.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.okHttpClientBuilder` @type ^`okhttp3.OkHttpClient$Builder` @kind object;
  #L2caa20.  call temp:= `addInterceptor`(v3, v0) @signature `Lokhttp3/OkHttpClient$Builder;.addInterceptor:(Lokhttp3/Interceptor;)Lokhttp3/OkHttpClient$Builder;` @kind virtual;
  #L2caa26.  v3:= v1.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.okHttpClientBuilder` @type ^`okhttp3.OkHttpClient$Builder` @kind object;
  #L2caa2a.  call temp:= `build`(v3) @signature `Lokhttp3/OkHttpClient$Builder;.build:()Lokhttp3/OkHttpClient;` @kind virtual;
  #L2caa30.  v3:= temp @kind object;
  #L2caa32.  v1.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.okHttpClient` @type ^`okhttp3.OkHttpClient` := v3 @kind object;
  #L2caa36.  v0:= v1.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.retrofitBuilder` @type ^`retrofit2.Retrofit$Builder` @kind object;
  #L2caa3a.  call temp:= `client`(v0, v3) @signature `Lretrofit2/Retrofit$Builder;.client:(Lokhttp3/OkHttpClient;)Lretrofit2/Retrofit$Builder;` @kind virtual;
  #L2caa40.  v3:= v1.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.retrofitBuilder` @type ^`retrofit2.Retrofit$Builder` @kind object;
  #L2caa44.  call temp:= `build`(v3) @signature `Lretrofit2/Retrofit$Builder;.build:()Lretrofit2/Retrofit;` @kind virtual;
  #L2caa4a.  v3:= temp @kind object;
  #L2caa4c.  v1.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.retrofit` @type ^`retrofit2.Retrofit` := v3 @kind object;
  #L2caa50.  v3:= v1.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L2caa54.  call temp:= `create`(v3, v2) @signature `Lretrofit2/Retrofit;.create:(Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L2caa5a.  v2:= temp @kind object;
  #L2caa5c.  return v2 @kind object;
}
procedure `java.lang.Object` `createService`(`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/dmoney/security/remote/retrofit/generator/SecurityServiceGenerator;.createService:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2caa70.  v0:= v1.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.isConfigured` @type ^`boolean` @kind boolean;
  #L2caa74.  if v0 != 0 then goto L2caa7e;
  #L2caa78.  call `configureRetrofit`(v1) @signature `Lcom/dmoney/security/remote/retrofit/generator/SecurityServiceGenerator;.configureRetrofit:()V` @kind virtual;
  #L2caa7e.  call temp:= `isEmpty`(v3) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L2caa84.  v0:= temp;
  #L2caa86.  if v0 != 0 then goto L2caae0;
  #L2caa8a.  v0:= new `com.dmoney.security.remote.retrofit.interceptor.AuthenticationInterceptor`;
  #L2caa8e.  call `<init>`(v0, v3, v4) @signature `Lcom/dmoney/security/remote/retrofit/interceptor/AuthenticationInterceptor;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L2caa94.  v3:= v1.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.okHttpClientBuilder` @type ^`okhttp3.OkHttpClient$Builder` @kind object;
  #L2caa98.  call temp:= `interceptors`(v3) @signature `Lokhttp3/OkHttpClient$Builder;.interceptors:()Ljava/util/List;` @kind virtual;
  #L2caa9e.  v3:= temp @kind object;
  #L2caaa0.  call temp:= `contains`(v3, v0) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L2caaa6.  v3:= temp;
  #L2caaa8.  if v3 != 0 then goto L2caae0;
  #L2caaac.  v3:= v1.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.okHttpClientBuilder` @type ^`okhttp3.OkHttpClient$Builder` @kind object;
  #L2caab0.  call temp:= `addInterceptor`(v3, v0) @signature `Lokhttp3/OkHttpClient$Builder;.addInterceptor:(Lokhttp3/Interceptor;)Lokhttp3/OkHttpClient$Builder;` @kind virtual;
  #L2caab6.  v3:= v1.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.okHttpClientBuilder` @type ^`okhttp3.OkHttpClient$Builder` @kind object;
  #L2caaba.  call temp:= `build`(v3) @signature `Lokhttp3/OkHttpClient$Builder;.build:()Lokhttp3/OkHttpClient;` @kind virtual;
  #L2caac0.  v3:= temp @kind object;
  #L2caac2.  v1.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.okHttpClient` @type ^`okhttp3.OkHttpClient` := v3 @kind object;
  #L2caac6.  v4:= v1.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.retrofitBuilder` @type ^`retrofit2.Retrofit$Builder` @kind object;
  #L2caaca.  call temp:= `client`(v4, v3) @signature `Lretrofit2/Retrofit$Builder;.client:(Lokhttp3/OkHttpClient;)Lretrofit2/Retrofit$Builder;` @kind virtual;
  #L2caad0.  v3:= v1.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.retrofitBuilder` @type ^`retrofit2.Retrofit$Builder` @kind object;
  #L2caad4.  call temp:= `build`(v3) @signature `Lretrofit2/Retrofit$Builder;.build:()Lretrofit2/Retrofit;` @kind virtual;
  #L2caada.  v3:= temp @kind object;
  #L2caadc.  v1.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.retrofit` @type ^`retrofit2.Retrofit` := v3 @kind object;
  #L2caae0.  v3:= v1.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L2caae4.  call temp:= `create`(v3, v2) @signature `Lretrofit2/Retrofit;.create:(Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L2caaea.  v2:= temp @kind object;
  #L2caaec.  return v2 @kind object;
}
procedure `java.lang.String` `getApiBaseUrl`(`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator` v1 @kind this) @signature `Lcom/dmoney/security/remote/retrofit/generator/SecurityServiceGenerator;.getApiBaseUrl:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cab00.  v0:= v1.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.API_BASE_URL` @type ^`java.lang.String` @kind object;
  #L2cab04.  return v0 @kind object;
}
procedure `void` `setApiBaseUrl`(`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/dmoney/security/remote/retrofit/generator/SecurityServiceGenerator;.setApiBaseUrl:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cac44.  if v2 == 0 then goto L2cac58;
  #L2cac48.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L2cac4e.  v0:= temp;
  #L2cac50.  if v0 != 0 then goto L2cac58;
  #L2cac54.  v1.`com.dmoney.security.remote.retrofit.generator.SecurityServiceGenerator.API_BASE_URL` @type ^`java.lang.String` := v2 @kind object;
  #L2cac58.  return @kind void;
}
