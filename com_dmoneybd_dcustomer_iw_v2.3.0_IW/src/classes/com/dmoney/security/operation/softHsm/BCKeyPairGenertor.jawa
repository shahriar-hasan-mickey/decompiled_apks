record `com.dmoney.security.operation.softHsm.BCKeyPairGenertor` @kind class @AccessFlag PUBLIC extends `com.dmoney.security.operation.interfaces.IKeyPairGenerator` @kind interface {
}
procedure `void` `<init>`(`com.dmoney.security.operation.softHsm.BCKeyPairGenertor` v0 @kind this) @signature `Lcom/dmoney/security/operation/softHsm/BCKeyPairGenertor;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2c9324.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c932a.  return @kind void;
}
procedure `com.dmoney.security.model.servicemodels.AsymetricKeyPair` `GenerateKeyPair`(`com.dmoney.security.operation.softHsm.BCKeyPairGenertor` v3 @kind this) @signature `Lcom/dmoney/security/operation/softHsm/BCKeyPairGenertor;.GenerateKeyPair:()Lcom/dmoney/security/model/servicemodels/AsymetricKeyPair;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2c92a0.  call temp:= `getInstance`() @signature `Lcom/dmoney/security/config/Configuration;.getInstance:()Lcom/dmoney/security/config/Configuration;` @kind static;
  #L2c92a6.  v0:= temp @kind object;
  #L2c92a8.  call temp:= `getAsymetricKeyAlgo`(v0) @signature `Lcom/dmoney/security/config/Configuration;.getAsymetricKeyAlgo:()Ljava/lang/String;` @kind virtual;
  #L2c92ae.  v0:= temp @kind object;
  #L2c92b0.  v1:= `@@com.dmoney.security.config.Configuration.PROVIDER` @type ^`java.lang.String` @kind object;
  #L2c92b4.  call temp:= `getInstance`(v0, v1) @signature `Ljava/security/KeyPairGenerator;.getInstance:(Ljava/lang/String;Ljava/lang/String;)Ljava/security/KeyPairGenerator;` @kind static;
  #L2c92ba.  v0:= temp @kind object;
  #L2c92bc.  call temp:= `getInstance`() @signature `Lcom/dmoney/security/config/Configuration;.getInstance:()Lcom/dmoney/security/config/Configuration;` @kind static;
  #L2c92c2.  v1:= temp @kind object;
  #L2c92c4.  call temp:= `getAsymetricKeyLength`(v1) @signature `Lcom/dmoney/security/config/Configuration;.getAsymetricKeyLength:()I` @kind virtual;
  #L2c92ca.  v1:= temp;
  #L2c92cc.  call `initialize`(v0, v1) @signature `Ljava/security/KeyPairGenerator;.initialize:(I)V` @kind virtual;
  #L2c92d2.  call temp:= `generateKeyPair`(v0) @signature `Ljava/security/KeyPairGenerator;.generateKeyPair:()Ljava/security/KeyPair;` @kind virtual;
  #L2c92d8.  v0:= temp @kind object;
  #L2c92da.  call temp:= `getPrivate`(v0) @signature `Ljava/security/KeyPair;.getPrivate:()Ljava/security/PrivateKey;` @kind virtual;
  #L2c92e0.  v1:= temp @kind object;
  #L2c92e2.  call temp:= `getPublic`(v0) @signature `Ljava/security/KeyPair;.getPublic:()Ljava/security/PublicKey;` @kind virtual;
  #L2c92e8.  v0:= temp @kind object;
  #L2c92ea.  v2:= new `com.dmoney.security.model.servicemodels.AsymetricKeyPair`;
  #L2c92ee.  call `<init>`(v2) @signature `Lcom/dmoney/security/model/servicemodels/AsymetricKeyPair;.<init>:()V` @kind direct;
  #L2c92f4.  call temp:= `getEncoded`(v1) @signature `Ljava/security/PrivateKey;.getEncoded:()[B` @kind interface;
  #L2c92fa.  v1:= temp @kind object;
  #L2c92fc.  call `setPrivateKey`(v2, v1) @signature `Lcom/dmoney/security/model/servicemodels/AsymetricKeyPair;.setPrivateKey:([B)V` @kind virtual;
  #L2c9302.  call temp:= `getEncoded`(v0) @signature `Ljava/security/PublicKey;.getEncoded:()[B` @kind interface;
  #L2c9308.  v0:= temp @kind object;
  #L2c930a.  call `setPublicKey`(v2, v0) @signature `Lcom/dmoney/security/model/servicemodels/AsymetricKeyPair;.setPublicKey:([B)V` @kind virtual;
  #L2c9310.  return v2 @kind object;
}
