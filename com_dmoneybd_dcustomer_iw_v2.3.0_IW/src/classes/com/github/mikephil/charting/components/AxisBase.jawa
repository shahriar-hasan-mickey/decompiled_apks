record `com.github.mikephil.charting.components.AxisBase` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.github.mikephil.charting.components.ComponentBase` @kind class {
  `int` `com.github.mikephil.charting.components.AxisBase.mAxisLineColor` @AccessFlag PRIVATE;
  `android.graphics.DashPathEffect` `com.github.mikephil.charting.components.AxisBase.mAxisLineDashPathEffect` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.components.AxisBase.mAxisLineWidth` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @AccessFlag PUBLIC;
  `float` `com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @AccessFlag PUBLIC;
  `float` `com.github.mikephil.charting.components.AxisBase.mAxisRange` @AccessFlag PUBLIC;
  `com.github.mikephil.charting.formatter.ValueFormatter` `com.github.mikephil.charting.components.AxisBase.mAxisValueFormatter` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.components.AxisBase.mCenterAxisLabels` @AccessFlag PROTECTED;
  `float`[] `com.github.mikephil.charting.components.AxisBase.mCenteredEntries` @AccessFlag PUBLIC;
  `boolean` `com.github.mikephil.charting.components.AxisBase.mCustomAxisMax` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.components.AxisBase.mCustomAxisMin` @AccessFlag PROTECTED;
  `int` `com.github.mikephil.charting.components.AxisBase.mDecimals` @AccessFlag PUBLIC;
  `boolean` `com.github.mikephil.charting.components.AxisBase.mDrawAxisLine` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.components.AxisBase.mDrawGridLines` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.components.AxisBase.mDrawGridLinesBehindData` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.components.AxisBase.mDrawLabels` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.components.AxisBase.mDrawLimitLineBehindData` @AccessFlag PROTECTED;
  `float`[] `com.github.mikephil.charting.components.AxisBase.mEntries` @AccessFlag PUBLIC;
  `int` `com.github.mikephil.charting.components.AxisBase.mEntryCount` @AccessFlag PUBLIC;
  `boolean` `com.github.mikephil.charting.components.AxisBase.mForceLabels` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.components.AxisBase.mGranularity` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.components.AxisBase.mGranularityEnabled` @AccessFlag PROTECTED;
  `int` `com.github.mikephil.charting.components.AxisBase.mGridColor` @AccessFlag PRIVATE;
  `android.graphics.DashPathEffect` `com.github.mikephil.charting.components.AxisBase.mGridDashPathEffect` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.components.AxisBase.mGridLineWidth` @AccessFlag PRIVATE;
  `int` `com.github.mikephil.charting.components.AxisBase.mLabelCount` @AccessFlag PRIVATE;
  `java.util.List` `com.github.mikephil.charting.components.AxisBase.mLimitLines` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.components.AxisBase.mSpaceMax` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.components.AxisBase.mSpaceMin` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.github.mikephil.charting.components.AxisBase` v3 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L38ba88.  call `<init>`(v3) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.<init>:()V` @kind direct;
  #L38ba8e.  v0:= -7829368I;
  #L38ba94.  v3.`com.github.mikephil.charting.components.AxisBase.mGridColor` @type ^`int` := v0;
  #L38ba98.  v1:= 1.0F;
  #L38ba9c.  v3.`com.github.mikephil.charting.components.AxisBase.mGridLineWidth` @type ^`float` := v1;
  #L38baa0.  v3.`com.github.mikephil.charting.components.AxisBase.mAxisLineColor` @type ^`int` := v0;
  #L38baa4.  v3.`com.github.mikephil.charting.components.AxisBase.mAxisLineWidth` @type ^`float` := v1;
  #L38baa8.  v0:= 0I;
  #L38baaa.  v2:= new `float`[v0];
  #L38baae.  v3.`com.github.mikephil.charting.components.AxisBase.mEntries` @type ^`float`[] := v2 @kind object;
  #L38bab2.  v2:= new `float`[v0];
  #L38bab6.  v3.`com.github.mikephil.charting.components.AxisBase.mCenteredEntries` @type ^`float`[] := v2 @kind object;
  #L38baba.  v2:= 6I;
  #L38babc.  v3.`com.github.mikephil.charting.components.AxisBase.mLabelCount` @type ^`int` := v2;
  #L38bac0.  v3.`com.github.mikephil.charting.components.AxisBase.mGranularity` @type ^`float` := v1;
  #L38bac4.  v3.`com.github.mikephil.charting.components.AxisBase.mGranularityEnabled` @type ^`boolean` := v0 @kind boolean;
  #L38bac8.  v3.`com.github.mikephil.charting.components.AxisBase.mForceLabels` @type ^`boolean` := v0 @kind boolean;
  #L38bacc.  v1:= 1I;
  #L38bace.  v3.`com.github.mikephil.charting.components.AxisBase.mDrawGridLines` @type ^`boolean` := v1 @kind boolean;
  #L38bad2.  v3.`com.github.mikephil.charting.components.AxisBase.mDrawAxisLine` @type ^`boolean` := v1 @kind boolean;
  #L38bad6.  v3.`com.github.mikephil.charting.components.AxisBase.mDrawLabels` @type ^`boolean` := v1 @kind boolean;
  #L38bada.  v3.`com.github.mikephil.charting.components.AxisBase.mCenterAxisLabels` @type ^`boolean` := v0 @kind boolean;
  #L38bade.  v2:= 0I;
  #L38bae0.  v3.`com.github.mikephil.charting.components.AxisBase.mAxisLineDashPathEffect` @type ^`android.graphics.DashPathEffect` := v2 @kind object;
  #L38bae4.  v3.`com.github.mikephil.charting.components.AxisBase.mGridDashPathEffect` @type ^`android.graphics.DashPathEffect` := v2 @kind object;
  #L38bae8.  v3.`com.github.mikephil.charting.components.AxisBase.mDrawLimitLineBehindData` @type ^`boolean` := v0 @kind boolean;
  #L38baec.  v3.`com.github.mikephil.charting.components.AxisBase.mDrawGridLinesBehindData` @type ^`boolean` := v1 @kind boolean;
  #L38baf0.  v1:= 0I;
  #L38baf2.  v3.`com.github.mikephil.charting.components.AxisBase.mSpaceMin` @type ^`float` := v1;
  #L38baf6.  v3.`com.github.mikephil.charting.components.AxisBase.mSpaceMax` @type ^`float` := v1;
  #L38bafa.  v3.`com.github.mikephil.charting.components.AxisBase.mCustomAxisMin` @type ^`boolean` := v0 @kind boolean;
  #L38bafe.  v3.`com.github.mikephil.charting.components.AxisBase.mCustomAxisMax` @type ^`boolean` := v0 @kind boolean;
  #L38bb02.  v3.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float` := v1;
  #L38bb06.  v3.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float` := v1;
  #L38bb0a.  v3.`com.github.mikephil.charting.components.AxisBase.mAxisRange` @type ^`float` := v1;
  #L38bb0e.  v0:= 10.0F;
  #L38bb12.  call temp:= `convertDpToPixel`(v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L38bb18.  v0:= temp;
  #L38bb1a.  v3.`com.github.mikephil.charting.components.ComponentBase.mTextSize` @type ^`float` := v0;
  #L38bb1e.  v0:= 5.0F;
  #L38bb22.  call temp:= `convertDpToPixel`(v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L38bb28.  v1:= temp;
  #L38bb2a.  v3.`com.github.mikephil.charting.components.ComponentBase.mXOffset` @type ^`float` := v1;
  #L38bb2e.  call temp:= `convertDpToPixel`(v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L38bb34.  v0:= temp;
  #L38bb36.  v3.`com.github.mikephil.charting.components.ComponentBase.mYOffset` @type ^`float` := v0;
  #L38bb3a.  v0:= new `java.util.ArrayList`;
  #L38bb3e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L38bb44.  v3.`com.github.mikephil.charting.components.AxisBase.mLimitLines` @type ^`java.util.List` := v0 @kind object;
  #L38bb48.  return @kind void;
}
procedure `void` `addLimitLine`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this, `com.github.mikephil.charting.components.LimitLine` v2 @kind object) @signature `Lcom/github/mikephil/charting/components/AxisBase;.addLimitLine:(Lcom/github/mikephil/charting/components/LimitLine;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38bb5c.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mLimitLines` @type ^`java.util.List` @kind object;
  #L38bb60.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38bb66.  v2:= v1.`com.github.mikephil.charting.components.AxisBase.mLimitLines` @type ^`java.util.List` @kind object;
  #L38bb6a.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L38bb70.  v2:= temp;
  #L38bb72.  v0:= 6I;
  #L38bb74.  if v2 <= v0 then goto L38bb86;
  #L38bb78.  v2:= "MPAndroiChart" @kind object;
  #L38bb7c.  v0:= "Warning! You have more than 6 LimitLines on your axis, do you really want that?" @kind object;
  #L38bb80.  call temp:= `e`(v2, v0) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L38bb86.  return @kind void;
}
procedure `void` `calculate`(`com.github.mikephil.charting.components.AxisBase` v2 @kind this, `float` v3 , `float` v4 ) @signature `Lcom/github/mikephil/charting/components/AxisBase;.calculate:(FF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38bb98.  v0:= v2.`com.github.mikephil.charting.components.AxisBase.mCustomAxisMin` @type ^`boolean` @kind boolean;
  #L38bb9c.  if v0 == 0 then goto L38bba6;
  #L38bba0.  v3:= v2.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float`;
  #L38bba4.  goto L38bbac;
  #L38bba6.  v0:= v2.`com.github.mikephil.charting.components.AxisBase.mSpaceMin` @type ^`float`;
  #L38bbaa.  v3:= v3 - v0 @kind float;
  #L38bbac.  v0:= v2.`com.github.mikephil.charting.components.AxisBase.mCustomAxisMax` @type ^`boolean` @kind boolean;
  #L38bbb0.  if v0 == 0 then goto L38bbba;
  #L38bbb4.  v4:= v2.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float`;
  #L38bbb8.  goto L38bbc0;
  #L38bbba.  v0:= v2.`com.github.mikephil.charting.components.AxisBase.mSpaceMax` @type ^`float`;
  #L38bbbe.  v4:= v4 + v0 @kind float;
  #L38bbc0.  v0:= v4 - v3 @kind float;
  #L38bbc4.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L38bbca.  v0:= temp;
  #L38bbcc.  v1:= 0I;
  #L38bbce.  v0:= fcmpl(v0, v1);
  #L38bbd2.  if v0 != 0 then goto L38bbde;
  #L38bbd6.  v0:= 1.0F;
  #L38bbda.  v4:= v4 + v0 @kind float;
  #L38bbdc.  v3:= v3 - v0 @kind float;
  #L38bbde.  v2.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float` := v3;
  #L38bbe2.  v2.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float` := v4;
  #L38bbe6.  v4:= v4 - v3 @kind float;
  #L38bbe8.  call temp:= `abs`(v4) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L38bbee.  v3:= temp;
  #L38bbf0.  v2.`com.github.mikephil.charting.components.AxisBase.mAxisRange` @type ^`float` := v3;
  #L38bbf4.  return @kind void;
}
procedure `void` `disableAxisLineDashedLine`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.disableAxisLineDashedLine:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38bc08.  v0:= 0I;
  #L38bc0a.  v1.`com.github.mikephil.charting.components.AxisBase.mAxisLineDashPathEffect` @type ^`android.graphics.DashPathEffect` := v0 @kind object;
  #L38bc0e.  return @kind void;
}
procedure `void` `disableGridDashedLine`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.disableGridDashedLine:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38bc20.  v0:= 0I;
  #L38bc22.  v1.`com.github.mikephil.charting.components.AxisBase.mGridDashPathEffect` @type ^`android.graphics.DashPathEffect` := v0 @kind object;
  #L38bc26.  return @kind void;
}
procedure `void` `enableAxisLineDashedLine`(`com.github.mikephil.charting.components.AxisBase` v3 @kind this, `float` v4 , `float` v5 , `float` v6 ) @signature `Lcom/github/mikephil/charting/components/AxisBase;.enableAxisLineDashedLine:(FFF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L38bc38.  v0:= new `android.graphics.DashPathEffect`;
  #L38bc3c.  v1:= 2I;
  #L38bc3e.  v1:= new `float`[v1];
  #L38bc42.  v2:= 0I;
  #L38bc44.  v1[v2]:= v4;
  #L38bc48.  v4:= 1I;
  #L38bc4a.  v1[v4]:= v5;
  #L38bc4e.  call `<init>`(v0, v1, v6) @signature `Landroid/graphics/DashPathEffect;.<init>:([FF)V` @kind direct;
  #L38bc54.  v3.`com.github.mikephil.charting.components.AxisBase.mAxisLineDashPathEffect` @type ^`android.graphics.DashPathEffect` := v0 @kind object;
  #L38bc58.  return @kind void;
}
procedure `void` `enableGridDashedLine`(`com.github.mikephil.charting.components.AxisBase` v3 @kind this, `float` v4 , `float` v5 , `float` v6 ) @signature `Lcom/github/mikephil/charting/components/AxisBase;.enableGridDashedLine:(FFF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L38bc6c.  v0:= new `android.graphics.DashPathEffect`;
  #L38bc70.  v1:= 2I;
  #L38bc72.  v1:= new `float`[v1];
  #L38bc76.  v2:= 0I;
  #L38bc78.  v1[v2]:= v4;
  #L38bc7c.  v4:= 1I;
  #L38bc7e.  v1[v4]:= v5;
  #L38bc82.  call `<init>`(v0, v1, v6) @signature `Landroid/graphics/DashPathEffect;.<init>:([FF)V` @kind direct;
  #L38bc88.  v3.`com.github.mikephil.charting.components.AxisBase.mGridDashPathEffect` @type ^`android.graphics.DashPathEffect` := v0 @kind object;
  #L38bc8c.  return @kind void;
}
procedure `int` `getAxisLineColor`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getAxisLineColor:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b99c.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisLineColor` @type ^`int`;
  #L38b9a0.  return v0;
}
procedure `android.graphics.DashPathEffect` `getAxisLineDashPathEffect`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getAxisLineDashPathEffect:()Landroid/graphics/DashPathEffect;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b738.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisLineDashPathEffect` @type ^`android.graphics.DashPathEffect` @kind object;
  #L38b73c.  return v0 @kind object;
}
procedure `float` `getAxisLineWidth`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getAxisLineWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b8f4.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisLineWidth` @type ^`float`;
  #L38b8f8.  return v0;
}
procedure `float` `getAxisMaximum`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getAxisMaximum:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b90c.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float`;
  #L38b910.  return v0;
}
procedure `float` `getAxisMinimum`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getAxisMinimum:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b924.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float`;
  #L38b928.  return v0;
}
procedure `java.lang.String` `getFormattedLabel`(`com.github.mikephil.charting.components.AxisBase` v2 @kind this, `int` v3 ) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getFormattedLabel:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38b9e4.  if v3 < 0 then goto L38ba0e;
  #L38b9e8.  v0:= v2.`com.github.mikephil.charting.components.AxisBase.mEntries` @type ^`float`[] @kind object;
  #L38b9ec.  v0:= length @variable v0;
  #L38b9ee.  if v3 < v0 then goto L38b9f4;
  #L38b9f2.  goto L38ba0e;
  #L38b9f4.  call temp:= `getValueFormatter`(v2) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getValueFormatter:()Lcom/github/mikephil/charting/formatter/ValueFormatter;` @kind virtual;
  #L38b9fa.  v0:= temp @kind object;
  #L38b9fc.  v1:= v2.`com.github.mikephil.charting.components.AxisBase.mEntries` @type ^`float`[] @kind object;
  #L38ba00.  v3:= v1[v3];
  #L38ba04.  call temp:= `getAxisLabel`(v0, v3, v2) @signature `Lcom/github/mikephil/charting/formatter/ValueFormatter;.getAxisLabel:(FLcom/github/mikephil/charting/components/AxisBase;)Ljava/lang/String;` @kind virtual;
  #L38ba0a.  v3:= temp @kind object;
  #L38ba0c.  return v3 @kind object;
  #L38ba0e.  v3:= "" @kind object;
  #L38ba12.  return v3 @kind object;
}
procedure `float` `getGranularity`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getGranularity:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b93c.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mGranularity` @type ^`float`;
  #L38b940.  return v0;
}
procedure `int` `getGridColor`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getGridColor:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b9b4.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mGridColor` @type ^`int`;
  #L38b9b8.  return v0;
}
procedure `android.graphics.DashPathEffect` `getGridDashPathEffect`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getGridDashPathEffect:()Landroid/graphics/DashPathEffect;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b750.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mGridDashPathEffect` @type ^`android.graphics.DashPathEffect` @kind object;
  #L38b754.  return v0 @kind object;
}
procedure `float` `getGridLineWidth`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getGridLineWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b954.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mGridLineWidth` @type ^`float`;
  #L38b958.  return v0;
}
procedure `int` `getLabelCount`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getLabelCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b9cc.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mLabelCount` @type ^`int`;
  #L38b9d0.  return v0;
}
procedure `java.util.List` `getLimitLines`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getLimitLines:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38ba70.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mLimitLines` @type ^`java.util.List` @kind object;
  #L38ba74.  return v0 @kind object;
}
procedure `java.lang.String` `getLongestLabel`(`com.github.mikephil.charting.components.AxisBase` v5 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getLongestLabel:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L38ba24.  v0:= "" @kind object;
  #L38ba28.  v1:= 0I;
  #L38ba2a.  v2:= v5.`com.github.mikephil.charting.components.AxisBase.mEntries` @type ^`float`[] @kind object;
  #L38ba2e.  v2:= length @variable v2;
  #L38ba30.  if v1 >= v2 then goto L38ba5c;
  #L38ba34.  call temp:= `getFormattedLabel`(v5, v1) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getFormattedLabel:(I)Ljava/lang/String;` @kind virtual;
  #L38ba3a.  v2:= temp @kind object;
  #L38ba3c.  if v2 == 0 then goto L38ba56;
  #L38ba40.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L38ba46.  v3:= temp;
  #L38ba48.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L38ba4e.  v4:= temp;
  #L38ba50.  if v3 >= v4 then goto L38ba56;
  #L38ba54.  v0:= v2 @kind object;
  #L38ba56.  v1:= v1 + 1;
  #L38ba5a.  goto L38ba2a;
  #L38ba5c.  return v0 @kind object;
}
procedure `float` `getSpaceMax`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getSpaceMax:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b96c.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mSpaceMax` @type ^`float`;
  #L38b970.  return v0;
}
procedure `float` `getSpaceMin`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getSpaceMin:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b984.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mSpaceMin` @type ^`float`;
  #L38b988.  return v0;
}
procedure `com.github.mikephil.charting.formatter.ValueFormatter` `getValueFormatter`(`com.github.mikephil.charting.components.AxisBase` v2 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getValueFormatter:()Lcom/github/mikephil/charting/formatter/ValueFormatter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38b8a8.  v0:= v2.`com.github.mikephil.charting.components.AxisBase.mAxisValueFormatter` @type ^`com.github.mikephil.charting.formatter.ValueFormatter` @kind object;
  #L38b8ac.  if v0 == 0 then goto L38b8cc;
  #L38b8b0.  v1:= instanceof @variable v0 @type ^`com.github.mikephil.charting.formatter.DefaultAxisValueFormatter` @kind boolean;
  #L38b8b4.  if v1 == 0 then goto L38b8de;
  #L38b8b8.  v0:= (`com.github.mikephil.charting.formatter.DefaultAxisValueFormatter`) v0 @kind object;
  #L38b8bc.  call temp:= `getDecimalDigits`(v0) @signature `Lcom/github/mikephil/charting/formatter/DefaultAxisValueFormatter;.getDecimalDigits:()I` @kind virtual;
  #L38b8c2.  v0:= temp;
  #L38b8c4.  v1:= v2.`com.github.mikephil.charting.components.AxisBase.mDecimals` @type ^`int`;
  #L38b8c8.  if v0 == v1 then goto L38b8de;
  #L38b8cc.  v0:= new `com.github.mikephil.charting.formatter.DefaultAxisValueFormatter`;
  #L38b8d0.  v1:= v2.`com.github.mikephil.charting.components.AxisBase.mDecimals` @type ^`int`;
  #L38b8d4.  call `<init>`(v0, v1) @signature `Lcom/github/mikephil/charting/formatter/DefaultAxisValueFormatter;.<init>:(I)V` @kind direct;
  #L38b8da.  v2.`com.github.mikephil.charting.components.AxisBase.mAxisValueFormatter` @type ^`com.github.mikephil.charting.formatter.ValueFormatter` := v0 @kind object;
  #L38b8de.  v0:= v2.`com.github.mikephil.charting.components.AxisBase.mAxisValueFormatter` @type ^`com.github.mikephil.charting.formatter.ValueFormatter` @kind object;
  #L38b8e2.  return v0 @kind object;
}
procedure `boolean` `isAxisLineDashedLineEnabled`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isAxisLineDashedLineEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b768.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisLineDashPathEffect` @type ^`android.graphics.DashPathEffect` @kind object;
  #L38b76c.  if v0 != 0 then goto L38b774;
  #L38b770.  v0:= 0I;
  #L38b772.  goto L38b776;
  #L38b774.  v0:= 1I;
  #L38b776.  return v0;
}
procedure `boolean` `isAxisMaxCustom`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isAxisMaxCustom:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b788.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mCustomAxisMax` @type ^`boolean` @kind boolean;
  #L38b78c.  return v0;
}
procedure `boolean` `isAxisMinCustom`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isAxisMinCustom:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b7a0.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mCustomAxisMin` @type ^`boolean` @kind boolean;
  #L38b7a4.  return v0;
}
procedure `boolean` `isCenterAxisLabelsEnabled`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isCenterAxisLabelsEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b7b8.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mCenterAxisLabels` @type ^`boolean` @kind boolean;
  #L38b7bc.  if v0 == 0 then goto L38b7cc;
  #L38b7c0.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mEntryCount` @type ^`int`;
  #L38b7c4.  if v0 <= 0 then goto L38b7cc;
  #L38b7c8.  v0:= 1I;
  #L38b7ca.  goto L38b7ce;
  #L38b7cc.  v0:= 0I;
  #L38b7ce.  return v0;
}
procedure `boolean` `isDrawAxisLineEnabled`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawAxisLineEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b7e0.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mDrawAxisLine` @type ^`boolean` @kind boolean;
  #L38b7e4.  return v0;
}
procedure `boolean` `isDrawGridLinesBehindDataEnabled`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawGridLinesBehindDataEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b7f8.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mDrawGridLinesBehindData` @type ^`boolean` @kind boolean;
  #L38b7fc.  return v0;
}
procedure `boolean` `isDrawGridLinesEnabled`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawGridLinesEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b810.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mDrawGridLines` @type ^`boolean` @kind boolean;
  #L38b814.  return v0;
}
procedure `boolean` `isDrawLabelsEnabled`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawLabelsEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b828.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mDrawLabels` @type ^`boolean` @kind boolean;
  #L38b82c.  return v0;
}
procedure `boolean` `isDrawLimitLinesBehindDataEnabled`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawLimitLinesBehindDataEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b840.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mDrawLimitLineBehindData` @type ^`boolean` @kind boolean;
  #L38b844.  return v0;
}
procedure `boolean` `isForceLabelsEnabled`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isForceLabelsEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b858.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mForceLabels` @type ^`boolean` @kind boolean;
  #L38b85c.  return v0;
}
procedure `boolean` `isGranularityEnabled`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isGranularityEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b870.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mGranularityEnabled` @type ^`boolean` @kind boolean;
  #L38b874.  return v0;
}
procedure `boolean` `isGridDashedLineEnabled`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isGridDashedLineEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b888.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mGridDashPathEffect` @type ^`android.graphics.DashPathEffect` @kind object;
  #L38b88c.  if v0 != 0 then goto L38b894;
  #L38b890.  v0:= 0I;
  #L38b892.  goto L38b896;
  #L38b894.  v0:= 1I;
  #L38b896.  return v0;
}
procedure `void` `removeAllLimitLines`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.removeAllLimitLines:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38bca0.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mLimitLines` @type ^`java.util.List` @kind object;
  #L38bca4.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L38bcaa.  return @kind void;
}
procedure `void` `removeLimitLine`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this, `com.github.mikephil.charting.components.LimitLine` v2 @kind object) @signature `Lcom/github/mikephil/charting/components/AxisBase;.removeLimitLine:(Lcom/github/mikephil/charting/components/LimitLine;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38bcbc.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mLimitLines` @type ^`java.util.List` @kind object;
  #L38bcc0.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L38bcc6.  return @kind void;
}
procedure `void` `resetAxisMaximum`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.resetAxisMaximum:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38bcd8.  v0:= 0I;
  #L38bcda.  v1.`com.github.mikephil.charting.components.AxisBase.mCustomAxisMax` @type ^`boolean` := v0 @kind boolean;
  #L38bcde.  return @kind void;
}
procedure `void` `resetAxisMinimum`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.resetAxisMinimum:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38bcf0.  v0:= 0I;
  #L38bcf2.  v1.`com.github.mikephil.charting.components.AxisBase.mCustomAxisMin` @type ^`boolean` := v0 @kind boolean;
  #L38bcf6.  return @kind void;
}
procedure `void` `setAxisLineColor`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `int` v1 ) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setAxisLineColor:(I)V` @AccessFlag PUBLIC {
    temp;

  #L38bd08.  v0.`com.github.mikephil.charting.components.AxisBase.mAxisLineColor` @type ^`int` := v1;
  #L38bd0c.  return @kind void;
}
procedure `void` `setAxisLineDashedLine`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `android.graphics.DashPathEffect` v1 @kind object) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setAxisLineDashedLine:(Landroid/graphics/DashPathEffect;)V` @AccessFlag PUBLIC {
    temp;

  #L38bd20.  v0.`com.github.mikephil.charting.components.AxisBase.mAxisLineDashPathEffect` @type ^`android.graphics.DashPathEffect` := v1 @kind object;
  #L38bd24.  return @kind void;
}
procedure `void` `setAxisLineWidth`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setAxisLineWidth:(F)V` @AccessFlag PUBLIC {
    temp;

  #L38bd38.  call temp:= `convertDpToPixel`(v1) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L38bd3e.  v1:= temp;
  #L38bd40.  v0.`com.github.mikephil.charting.components.AxisBase.mAxisLineWidth` @type ^`float` := v1;
  #L38bd44.  return @kind void;
}
procedure `void` `setAxisMaxValue`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setAxisMaxValue:(F)V` @AccessFlag PUBLIC {
    temp;

  #L38bd58.  call `setAxisMaximum`(v0, v1) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setAxisMaximum:(F)V` @kind virtual;
  #L38bd5e.  return @kind void;
}
procedure `void` `setAxisMaximum`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this, `float` v2 ) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setAxisMaximum:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38bd70.  v0:= 1I;
  #L38bd72.  v1.`com.github.mikephil.charting.components.AxisBase.mCustomAxisMax` @type ^`boolean` := v0 @kind boolean;
  #L38bd76.  v1.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float` := v2;
  #L38bd7a.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float`;
  #L38bd7e.  v2:= v2 - v0 @kind float;
  #L38bd80.  call temp:= `abs`(v2) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L38bd86.  v2:= temp;
  #L38bd88.  v1.`com.github.mikephil.charting.components.AxisBase.mAxisRange` @type ^`float` := v2;
  #L38bd8c.  return @kind void;
}
procedure `void` `setAxisMinValue`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setAxisMinValue:(F)V` @AccessFlag PUBLIC {
    temp;

  #L38bda0.  call `setAxisMinimum`(v0, v1) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setAxisMinimum:(F)V` @kind virtual;
  #L38bda6.  return @kind void;
}
procedure `void` `setAxisMinimum`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this, `float` v2 ) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setAxisMinimum:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38bdb8.  v0:= 1I;
  #L38bdba.  v1.`com.github.mikephil.charting.components.AxisBase.mCustomAxisMin` @type ^`boolean` := v0 @kind boolean;
  #L38bdbe.  v1.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float` := v2;
  #L38bdc2.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float`;
  #L38bdc6.  v0:= v0 - v2 @kind float;
  #L38bdc8.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L38bdce.  v2:= temp;
  #L38bdd0.  v1.`com.github.mikephil.charting.components.AxisBase.mAxisRange` @type ^`float` := v2;
  #L38bdd4.  return @kind void;
}
procedure `void` `setCenterAxisLabels`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setCenterAxisLabels:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38bde8.  v0.`com.github.mikephil.charting.components.AxisBase.mCenterAxisLabels` @type ^`boolean` := v1 @kind boolean;
  #L38bdec.  return @kind void;
}
procedure `void` `setDrawAxisLine`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setDrawAxisLine:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38be00.  v0.`com.github.mikephil.charting.components.AxisBase.mDrawAxisLine` @type ^`boolean` := v1 @kind boolean;
  #L38be04.  return @kind void;
}
procedure `void` `setDrawGridLines`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setDrawGridLines:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38be18.  v0.`com.github.mikephil.charting.components.AxisBase.mDrawGridLines` @type ^`boolean` := v1 @kind boolean;
  #L38be1c.  return @kind void;
}
procedure `void` `setDrawGridLinesBehindData`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setDrawGridLinesBehindData:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38be30.  v0.`com.github.mikephil.charting.components.AxisBase.mDrawGridLinesBehindData` @type ^`boolean` := v1 @kind boolean;
  #L38be34.  return @kind void;
}
procedure `void` `setDrawLabels`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setDrawLabels:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38be48.  v0.`com.github.mikephil.charting.components.AxisBase.mDrawLabels` @type ^`boolean` := v1 @kind boolean;
  #L38be4c.  return @kind void;
}
procedure `void` `setDrawLimitLinesBehindData`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setDrawLimitLinesBehindData:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38be60.  v0.`com.github.mikephil.charting.components.AxisBase.mDrawLimitLineBehindData` @type ^`boolean` := v1 @kind boolean;
  #L38be64.  return @kind void;
}
procedure `void` `setGranularity`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setGranularity:(F)V` @AccessFlag PUBLIC {
    temp;

  #L38be78.  v0.`com.github.mikephil.charting.components.AxisBase.mGranularity` @type ^`float` := v1;
  #L38be7c.  v1:= 1I;
  #L38be7e.  v0.`com.github.mikephil.charting.components.AxisBase.mGranularityEnabled` @type ^`boolean` := v1 @kind boolean;
  #L38be82.  return @kind void;
}
procedure `void` `setGranularityEnabled`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setGranularityEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38be94.  v0.`com.github.mikephil.charting.components.AxisBase.mGranularityEnabled` @type ^`boolean` := v1 @kind boolean;
  #L38be98.  return @kind void;
}
procedure `void` `setGridColor`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `int` v1 ) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setGridColor:(I)V` @AccessFlag PUBLIC {
    temp;

  #L38beac.  v0.`com.github.mikephil.charting.components.AxisBase.mGridColor` @type ^`int` := v1;
  #L38beb0.  return @kind void;
}
procedure `void` `setGridDashedLine`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `android.graphics.DashPathEffect` v1 @kind object) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setGridDashedLine:(Landroid/graphics/DashPathEffect;)V` @AccessFlag PUBLIC {
    temp;

  #L38bec4.  v0.`com.github.mikephil.charting.components.AxisBase.mGridDashPathEffect` @type ^`android.graphics.DashPathEffect` := v1 @kind object;
  #L38bec8.  return @kind void;
}
procedure `void` `setGridLineWidth`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setGridLineWidth:(F)V` @AccessFlag PUBLIC {
    temp;

  #L38bedc.  call temp:= `convertDpToPixel`(v1) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L38bee2.  v1:= temp;
  #L38bee4.  v0.`com.github.mikephil.charting.components.AxisBase.mGridLineWidth` @type ^`float` := v1;
  #L38bee8.  return @kind void;
}
procedure `void` `setLabelCount`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this, `int` v2 ) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setLabelCount:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38befc.  v0:= 25I;
  #L38bf00.  if v2 <= v0 then goto L38bf08;
  #L38bf04.  v2:= 25I;
  #L38bf08.  v0:= 2I;
  #L38bf0a.  if v2 >= v0 then goto L38bf10;
  #L38bf0e.  v2:= 2I;
  #L38bf10.  v1.`com.github.mikephil.charting.components.AxisBase.mLabelCount` @type ^`int` := v2;
  #L38bf14.  v2:= 0I;
  #L38bf16.  v1.`com.github.mikephil.charting.components.AxisBase.mForceLabels` @type ^`boolean` := v2 @kind boolean;
  #L38bf1a.  return @kind void;
}
procedure `void` `setLabelCount`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `int` v1 , `boolean` v2 ) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setLabelCount:(IZ)V` @AccessFlag PUBLIC {
    temp;

  #L38bf2c.  call `setLabelCount`(v0, v1) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setLabelCount:(I)V` @kind virtual;
  #L38bf32.  v0.`com.github.mikephil.charting.components.AxisBase.mForceLabels` @type ^`boolean` := v2 @kind boolean;
  #L38bf36.  return @kind void;
}
procedure `void` `setSpaceMax`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setSpaceMax:(F)V` @AccessFlag PUBLIC {
    temp;

  #L38bf48.  v0.`com.github.mikephil.charting.components.AxisBase.mSpaceMax` @type ^`float` := v1;
  #L38bf4c.  return @kind void;
}
procedure `void` `setSpaceMin`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setSpaceMin:(F)V` @AccessFlag PUBLIC {
    temp;

  #L38bf60.  v0.`com.github.mikephil.charting.components.AxisBase.mSpaceMin` @type ^`float` := v1;
  #L38bf64.  return @kind void;
}
procedure `void` `setValueFormatter`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this, `com.github.mikephil.charting.formatter.ValueFormatter` v2 @kind object) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setValueFormatter:(Lcom/github/mikephil/charting/formatter/ValueFormatter;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38bf78.  if v2 != 0 then goto L38bf8a;
  #L38bf7c.  v2:= new `com.github.mikephil.charting.formatter.DefaultAxisValueFormatter`;
  #L38bf80.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mDecimals` @type ^`int`;
  #L38bf84.  call `<init>`(v2, v0) @signature `Lcom/github/mikephil/charting/formatter/DefaultAxisValueFormatter;.<init>:(I)V` @kind direct;
  #L38bf8a.  v1.`com.github.mikephil.charting.components.AxisBase.mAxisValueFormatter` @type ^`com.github.mikephil.charting.formatter.ValueFormatter` := v2 @kind object;
  #L38bf8e.  return @kind void;
}
