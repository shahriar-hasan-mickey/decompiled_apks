record `com.github.mikephil.charting.data.BarEntry` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.data.Entry` @kind class {
  `float` `com.github.mikephil.charting.data.BarEntry.mNegativeSum` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.data.BarEntry.mPositiveSum` @AccessFlag PRIVATE;
  `com.github.mikephil.charting.highlight.Range`[] `com.github.mikephil.charting.data.BarEntry.mRanges` @AccessFlag PRIVATE;
  `float`[] `com.github.mikephil.charting.data.BarEntry.mYVals` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.BarEntry` v0 @kind this, `float` v1 , `float` v2 ) @signature `Lcom/github/mikephil/charting/data/BarEntry;.<init>:(FF)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L38eab8.  call `<init>`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/data/Entry;.<init>:(FF)V` @kind direct;
  #L38eabe.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.BarEntry` v0 @kind this, `float` v1 , `float` v2 , `android.graphics.drawable.Drawable` v3 @kind object) @signature `Lcom/github/mikephil/charting/data/BarEntry;.<init>:(FFLandroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L38ead0.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/github/mikephil/charting/data/Entry;.<init>:(FFLandroid/graphics/drawable/Drawable;)V` @kind direct;
  #L38ead6.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.BarEntry` v0 @kind this, `float` v1 , `float` v2 , `android.graphics.drawable.Drawable` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/github/mikephil/charting/data/BarEntry;.<init>:(FFLandroid/graphics/drawable/Drawable;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L38eae8.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lcom/github/mikephil/charting/data/Entry;.<init>:(FFLandroid/graphics/drawable/Drawable;Ljava/lang/Object;)V` @kind direct;
  #L38eaee.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.BarEntry` v0 @kind this, `float` v1 , `float` v2 , `java.lang.Object` v3 @kind object) @signature `Lcom/github/mikephil/charting/data/BarEntry;.<init>:(FFLjava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L38eb00.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/github/mikephil/charting/data/Entry;.<init>:(FFLjava/lang/Object;)V` @kind direct;
  #L38eb06.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.BarEntry` v1 @kind this, `float` v2 , `float`[] v3 @kind object) @signature `Lcom/github/mikephil/charting/data/BarEntry;.<init>:(F[F)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L38eb18.  call temp:= `calcSum`(v3) @signature `Lcom/github/mikephil/charting/data/BarEntry;.calcSum:([F)F` @kind static;
  #L38eb1e.  v0:= temp;
  #L38eb20.  call `<init>`(v1, v2, v0) @signature `Lcom/github/mikephil/charting/data/Entry;.<init>:(FF)V` @kind direct;
  #L38eb26.  v1.`com.github.mikephil.charting.data.BarEntry.mYVals` @type ^`float`[] := v3 @kind object;
  #L38eb2a.  call `calcPosNegSum`(v1) @signature `Lcom/github/mikephil/charting/data/BarEntry;.calcPosNegSum:()V` @kind direct;
  #L38eb30.  call `calcRanges`(v1) @signature `Lcom/github/mikephil/charting/data/BarEntry;.calcRanges:()V` @kind virtual;
  #L38eb36.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.BarEntry` v1 @kind this, `float` v2 , `float`[] v3 @kind object, `android.graphics.drawable.Drawable` v4 @kind object) @signature `Lcom/github/mikephil/charting/data/BarEntry;.<init>:(F[FLandroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L38eb48.  call temp:= `calcSum`(v3) @signature `Lcom/github/mikephil/charting/data/BarEntry;.calcSum:([F)F` @kind static;
  #L38eb4e.  v0:= temp;
  #L38eb50.  call `<init>`(v1, v2, v0, v4) @signature `Lcom/github/mikephil/charting/data/Entry;.<init>:(FFLandroid/graphics/drawable/Drawable;)V` @kind direct;
  #L38eb56.  v1.`com.github.mikephil.charting.data.BarEntry.mYVals` @type ^`float`[] := v3 @kind object;
  #L38eb5a.  call `calcPosNegSum`(v1) @signature `Lcom/github/mikephil/charting/data/BarEntry;.calcPosNegSum:()V` @kind direct;
  #L38eb60.  call `calcRanges`(v1) @signature `Lcom/github/mikephil/charting/data/BarEntry;.calcRanges:()V` @kind virtual;
  #L38eb66.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.BarEntry` v1 @kind this, `float` v2 , `float`[] v3 @kind object, `android.graphics.drawable.Drawable` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/github/mikephil/charting/data/BarEntry;.<init>:(F[FLandroid/graphics/drawable/Drawable;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L38eb78.  call temp:= `calcSum`(v3) @signature `Lcom/github/mikephil/charting/data/BarEntry;.calcSum:([F)F` @kind static;
  #L38eb7e.  v0:= temp;
  #L38eb80.  call `<init>`(v1, v2, v0, v4, v5) @signature `Lcom/github/mikephil/charting/data/Entry;.<init>:(FFLandroid/graphics/drawable/Drawable;Ljava/lang/Object;)V` @kind direct;
  #L38eb86.  v1.`com.github.mikephil.charting.data.BarEntry.mYVals` @type ^`float`[] := v3 @kind object;
  #L38eb8a.  call `calcPosNegSum`(v1) @signature `Lcom/github/mikephil/charting/data/BarEntry;.calcPosNegSum:()V` @kind direct;
  #L38eb90.  call `calcRanges`(v1) @signature `Lcom/github/mikephil/charting/data/BarEntry;.calcRanges:()V` @kind virtual;
  #L38eb96.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.BarEntry` v1 @kind this, `float` v2 , `float`[] v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/github/mikephil/charting/data/BarEntry;.<init>:(F[FLjava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L38eba8.  call temp:= `calcSum`(v3) @signature `Lcom/github/mikephil/charting/data/BarEntry;.calcSum:([F)F` @kind static;
  #L38ebae.  v0:= temp;
  #L38ebb0.  call `<init>`(v1, v2, v0, v4) @signature `Lcom/github/mikephil/charting/data/Entry;.<init>:(FFLjava/lang/Object;)V` @kind direct;
  #L38ebb6.  v1.`com.github.mikephil.charting.data.BarEntry.mYVals` @type ^`float`[] := v3 @kind object;
  #L38ebba.  call `calcPosNegSum`(v1) @signature `Lcom/github/mikephil/charting/data/BarEntry;.calcPosNegSum:()V` @kind direct;
  #L38ebc0.  call `calcRanges`(v1) @signature `Lcom/github/mikephil/charting/data/BarEntry;.calcRanges:()V` @kind virtual;
  #L38ebc6.  return @kind void;
}
procedure `void` `calcPosNegSum`(`com.github.mikephil.charting.data.BarEntry` v8 @kind this) @signature `Lcom/github/mikephil/charting/data/BarEntry;.calcPosNegSum:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L38ebd8.  v0:= v8.`com.github.mikephil.charting.data.BarEntry.mYVals` @type ^`float`[] @kind object;
  #L38ebdc.  v1:= 0I;
  #L38ebde.  if v0 != 0 then goto L38ebec;
  #L38ebe2.  v8.`com.github.mikephil.charting.data.BarEntry.mNegativeSum` @type ^`float` := v1;
  #L38ebe6.  v8.`com.github.mikephil.charting.data.BarEntry.mPositiveSum` @type ^`float` := v1;
  #L38ebea.  return @kind void;
  #L38ebec.  v2:= length @variable v0;
  #L38ebee.  v3:= 0I;
  #L38ebf0.  v4:= 0I;
  #L38ebf2.  v5:= 0I;
  #L38ebf4.  if v3 >= v2 then goto L38ec18;
  #L38ebf8.  v6:= v0[v3];
  #L38ebfc.  v7:= fcmpg(v6, v1);
  #L38ec00.  if v7 > 0 then goto L38ec10;
  #L38ec04.  call temp:= `abs`(v6) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L38ec0a.  v6:= temp;
  #L38ec0c.  v4:= v4 + v6 @kind float;
  #L38ec0e.  goto L38ec12;
  #L38ec10.  v5:= v5 + v6 @kind float;
  #L38ec12.  v3:= v3 + 1;
  #L38ec16.  goto L38ebf4;
  #L38ec18.  v8.`com.github.mikephil.charting.data.BarEntry.mNegativeSum` @type ^`float` := v4;
  #L38ec1c.  v8.`com.github.mikephil.charting.data.BarEntry.mPositiveSum` @type ^`float` := v5;
  #L38ec20.  return @kind void;
}
procedure `float` `calcSum`(`float`[] v4 @kind object) @signature `Lcom/github/mikephil/charting/data/BarEntry;.calcSum:([F)F` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L38e9cc.  v0:= 0I;
  #L38e9ce.  if v4 != 0 then goto L38e9d4;
  #L38e9d2.  return v0;
  #L38e9d4.  v1:= length @variable v4;
  #L38e9d6.  v2:= 0I;
  #L38e9d8.  if v2 >= v1 then goto L38e9e8;
  #L38e9dc.  v3:= v4[v2];
  #L38e9e0.  v0:= v0 + v3 @kind float;
  #L38e9e2.  v2:= v2 + 1;
  #L38e9e6.  goto L38e9d8;
  #L38e9e8.  return v0;
}
procedure `void` `calcRanges`(`com.github.mikephil.charting.data.BarEntry` v8 @kind this) @signature `Lcom/github/mikephil/charting/data/BarEntry;.calcRanges:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L38ec34.  call temp:= `getYVals`(v8) @signature `Lcom/github/mikephil/charting/data/BarEntry;.getYVals:()[F` @kind virtual;
  #L38ec3a.  v0:= temp @kind object;
  #L38ec3c.  if v0 == 0 then goto L38eca6;
  #L38ec40.  v1:= length @variable v0;
  #L38ec42.  if v1 != 0 then goto L38ec48;
  #L38ec46.  goto L38eca6;
  #L38ec48.  v1:= length @variable v0;
  #L38ec4a.  v1:= new `com.github.mikephil.charting.highlight.Range`[v1];
  #L38ec4e.  v8.`com.github.mikephil.charting.data.BarEntry.mRanges` @type ^`com.github.mikephil.charting.highlight.Range`[] := v1 @kind object;
  #L38ec52.  call temp:= `getNegativeSum`(v8) @signature `Lcom/github/mikephil/charting/data/BarEntry;.getNegativeSum:()F` @kind virtual;
  #L38ec58.  v1:= temp;
  #L38ec5a.  v1:= -v1 @kind float;
  #L38ec5c.  v2:= 0I;
  #L38ec5e.  v3:= 0I;
  #L38ec60.  v4:= 0I;
  #L38ec62.  v5:= v8.`com.github.mikephil.charting.data.BarEntry.mRanges` @type ^`com.github.mikephil.charting.highlight.Range`[] @kind object;
  #L38ec66.  v6:= length @variable v5;
  #L38ec68.  if v2 >= v6 then goto L38eca6;
  #L38ec6c.  v6:= v0[v2];
  #L38ec70.  v7:= fcmpg(v6, v3);
  #L38ec74.  if v7 >= 0 then goto L38ec8e;
  #L38ec78.  v7:= new `com.github.mikephil.charting.highlight.Range`;
  #L38ec7c.  v6:= v1 - v6 @kind float;
  #L38ec80.  call `<init>`(v7, v1, v6) @signature `Lcom/github/mikephil/charting/highlight/Range;.<init>:(FF)V` @kind direct;
  #L38ec86.  v5[v2]:= v7 @kind object;
  #L38ec8a.  v1:= v6;
  #L38ec8c.  goto L38eca0;
  #L38ec8e.  v7:= new `com.github.mikephil.charting.highlight.Range`;
  #L38ec92.  v6:= v6 + v4 @kind float;
  #L38ec94.  call `<init>`(v7, v4, v6) @signature `Lcom/github/mikephil/charting/highlight/Range;.<init>:(FF)V` @kind direct;
  #L38ec9a.  v5[v2]:= v7 @kind object;
  #L38ec9e.  v4:= v6;
  #L38eca0.  v2:= v2 + 1;
  #L38eca4.  goto L38ec62;
  #L38eca6.  return @kind void;
}
procedure `com.github.mikephil.charting.data.BarEntry` `copy`(`com.github.mikephil.charting.data.BarEntry` v4 @kind this) @signature `Lcom/github/mikephil/charting/data/BarEntry;.copy:()Lcom/github/mikephil/charting/data/BarEntry;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L38e958.  v0:= new `com.github.mikephil.charting.data.BarEntry`;
  #L38e95c.  call temp:= `getX`(v4) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L38e962.  v1:= temp;
  #L38e964.  call temp:= `getY`(v4) @signature `Lcom/github/mikephil/charting/data/BarEntry;.getY:()F` @kind virtual;
  #L38e96a.  v2:= temp;
  #L38e96c.  call temp:= `getData`(v4) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.getData:()Ljava/lang/Object;` @kind virtual;
  #L38e972.  v3:= temp @kind object;
  #L38e974.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/github/mikephil/charting/data/BarEntry;.<init>:(FFLjava/lang/Object;)V` @kind direct;
  #L38e97a.  v1:= v4.`com.github.mikephil.charting.data.BarEntry.mYVals` @type ^`float`[] @kind object;
  #L38e97e.  call `setVals`(v0, v1) @signature `Lcom/github/mikephil/charting/data/BarEntry;.setVals:([F)V` @kind virtual;
  #L38e984.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.data.Entry` `copy`(`com.github.mikephil.charting.data.BarEntry` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BarEntry;.copy:()Lcom/github/mikephil/charting/data/Entry;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L38e998.  call temp:= `copy`(v1) @signature `Lcom/github/mikephil/charting/data/BarEntry;.copy:()Lcom/github/mikephil/charting/data/BarEntry;` @kind virtual;
  #L38e99e.  v0:= temp @kind object;
  #L38e9a0.  return v0 @kind object;
}
procedure `float` `getBelowSum`(`com.github.mikephil.charting.data.BarEntry` v0 @kind this, `int` v1 ) @signature `Lcom/github/mikephil/charting/data/BarEntry;.getBelowSum:(I)F` @AccessFlag PUBLIC {
    temp;

  #L38e9fc.  call temp:= `getSumBelow`(v0, v1) @signature `Lcom/github/mikephil/charting/data/BarEntry;.getSumBelow:(I)F` @kind virtual;
  #L38ea02.  v1:= temp;
  #L38ea04.  return v1;
}
procedure `float` `getNegativeSum`(`com.github.mikephil.charting.data.BarEntry` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BarEntry;.getNegativeSum:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38ea18.  v0:= v1.`com.github.mikephil.charting.data.BarEntry.mNegativeSum` @type ^`float`;
  #L38ea1c.  return v0;
}
procedure `float` `getPositiveSum`(`com.github.mikephil.charting.data.BarEntry` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BarEntry;.getPositiveSum:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38ea30.  v0:= v1.`com.github.mikephil.charting.data.BarEntry.mPositiveSum` @type ^`float`;
  #L38ea34.  return v0;
}
procedure `com.github.mikephil.charting.highlight.Range`[] `getRanges`(`com.github.mikephil.charting.data.BarEntry` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BarEntry;.getRanges:()[Lcom/github/mikephil/charting/highlight/Range;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38e9b4.  v0:= v1.`com.github.mikephil.charting.data.BarEntry.mRanges` @type ^`com.github.mikephil.charting.highlight.Range`[] @kind object;
  #L38e9b8.  return v0 @kind object;
}
procedure `float` `getSumBelow`(`com.github.mikephil.charting.data.BarEntry` v3 @kind this, `int` v4 ) @signature `Lcom/github/mikephil/charting/data/BarEntry;.getSumBelow:(I)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L38ea48.  v0:= v3.`com.github.mikephil.charting.data.BarEntry.mYVals` @type ^`float`[] @kind object;
  #L38ea4c.  v1:= 0I;
  #L38ea4e.  if v0 != 0 then goto L38ea54;
  #L38ea52.  return v1;
  #L38ea54.  v0:= length @variable v0;
  #L38ea56.  v0:= v0 + -1;
  #L38ea5a.  if v0 <= v4 then goto L38ea72;
  #L38ea5e.  if v0 < 0 then goto L38ea72;
  #L38ea62.  v2:= v3.`com.github.mikephil.charting.data.BarEntry.mYVals` @type ^`float`[] @kind object;
  #L38ea66.  v2:= v2[v0];
  #L38ea6a.  v1:= v1 + v2 @kind float;
  #L38ea6c.  v0:= v0 + -1;
  #L38ea70.  goto L38ea5a;
  #L38ea72.  return v1;
}
procedure `float` `getY`(`com.github.mikephil.charting.data.BarEntry` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BarEntry;.getY:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38ea84.  call temp:= `getY`(v1) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.getY:()F` @kind super;
  #L38ea8a.  v0:= temp;
  #L38ea8c.  return v0;
}
procedure `float`[] `getYVals`(`com.github.mikephil.charting.data.BarEntry` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BarEntry;.getYVals:()[F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38eaa0.  v0:= v1.`com.github.mikephil.charting.data.BarEntry.mYVals` @type ^`float`[] @kind object;
  #L38eaa4.  return v0 @kind object;
}
procedure `boolean` `isStacked`(`com.github.mikephil.charting.data.BarEntry` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BarEntry;.isStacked:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38e938.  v0:= v1.`com.github.mikephil.charting.data.BarEntry.mYVals` @type ^`float`[] @kind object;
  #L38e93c.  if v0 == 0 then goto L38e944;
  #L38e940.  v0:= 1I;
  #L38e942.  goto L38e946;
  #L38e944.  v0:= 0I;
  #L38e946.  return v0;
}
procedure `void` `setVals`(`com.github.mikephil.charting.data.BarEntry` v1 @kind this, `float`[] v2 @kind object) @signature `Lcom/github/mikephil/charting/data/BarEntry;.setVals:([F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38ecb8.  call temp:= `calcSum`(v2) @signature `Lcom/github/mikephil/charting/data/BarEntry;.calcSum:([F)F` @kind static;
  #L38ecbe.  v0:= temp;
  #L38ecc0.  call `setY`(v1, v0) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.setY:(F)V` @kind virtual;
  #L38ecc6.  v1.`com.github.mikephil.charting.data.BarEntry.mYVals` @type ^`float`[] := v2 @kind object;
  #L38ecca.  call `calcPosNegSum`(v1) @signature `Lcom/github/mikephil/charting/data/BarEntry;.calcPosNegSum:()V` @kind direct;
  #L38ecd0.  call `calcRanges`(v1) @signature `Lcom/github/mikephil/charting/data/BarEntry;.calcRanges:()V` @kind virtual;
  #L38ecd6.  return @kind void;
}
