record `com.github.mikephil.charting.data.BarData` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.data.BarLineScatterCandleBubbleData` @kind class {
  `float` `com.github.mikephil.charting.data.BarData.mBarWidth` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.BarData` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BarData;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L38e7c8.  call `<init>`(v1) @signature `Lcom/github/mikephil/charting/data/BarLineScatterCandleBubbleData;.<init>:()V` @kind direct;
  #L38e7ce.  v0:= 1062836634I;
  #L38e7d4.  v1.`com.github.mikephil.charting.data.BarData.mBarWidth` @type ^`float` := v0;
  #L38e7d8.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.BarData` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/BarData;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L38e810.  call `<init>`(v0, v1) @signature `Lcom/github/mikephil/charting/data/BarLineScatterCandleBubbleData;.<init>:(Ljava/util/List;)V` @kind direct;
  #L38e816.  v1:= 1062836634I;
  #L38e81c.  v0.`com.github.mikephil.charting.data.BarData.mBarWidth` @type ^`float` := v1;
  #L38e820.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.BarData` v0 @kind this, `com.github.mikephil.charting.interfaces.datasets.IBarDataSet`[] v1 @kind object) @signature `Lcom/github/mikephil/charting/data/BarData;.<init>:([Lcom/github/mikephil/charting/interfaces/datasets/IBarDataSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L38e7ec.  call `<init>`(v0, v1) @signature `Lcom/github/mikephil/charting/data/BarLineScatterCandleBubbleData;.<init>:([Lcom/github/mikephil/charting/interfaces/datasets/IBarLineScatterCandleBubbleDataSet;)V` @kind direct;
  #L38e7f2.  v1:= 1062836634I;
  #L38e7f8.  v0.`com.github.mikephil.charting.data.BarData.mBarWidth` @type ^`float` := v1;
  #L38e7fc.  return @kind void;
}
procedure `float` `getBarWidth`(`com.github.mikephil.charting.data.BarData` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BarData;.getBarWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38e784.  v0:= v1.`com.github.mikephil.charting.data.BarData.mBarWidth` @type ^`float`;
  #L38e788.  return v0;
}
procedure `float` `getGroupWidth`(`com.github.mikephil.charting.data.BarData` v2 @kind this, `float` v3 , `float` v4 ) @signature `Lcom/github/mikephil/charting/data/BarData;.getGroupWidth:(FF)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38e79c.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L38e7a0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L38e7a6.  v0:= temp;
  #L38e7a8.  v0:= (`float`) v0 @kind i2f;
  #L38e7aa.  v1:= v2.`com.github.mikephil.charting.data.BarData.mBarWidth` @type ^`float`;
  #L38e7ae.  v1:= v1 + v4 @kind float;
  #L38e7b0.  v0:= v0 * v1 @kind float;
  #L38e7b4.  v0:= v0 + v3 @kind float;
  #L38e7b6.  return v0;
}
procedure `void` `groupBars`(`com.github.mikephil.charting.data.BarData` v8 @kind this, `float` v9 , `float` v10 , `float` v11 ) @signature `Lcom/github/mikephil/charting/data/BarData;.groupBars:(FFF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L38e834.  v0:= v8.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L38e838.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L38e83e.  v0:= temp;
  #L38e840.  v1:= 1I;
  #L38e842.  if v0 <= v1 then goto L38e8fc;
  #L38e846.  call temp:= `getMaxEntryCountSet`(v8) @signature `Lcom/github/mikephil/charting/data/ChartData;.getMaxEntryCountSet:()Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;` @kind virtual;
  #L38e84c.  v0:= temp @kind object;
  #L38e84e.  v0:= (`com.github.mikephil.charting.interfaces.datasets.IBarDataSet`) v0 @kind object;
  #L38e852.  call temp:= `getEntryCount`(v0) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryCount:()I` @kind interface;
  #L38e858.  v0:= temp;
  #L38e85a.  v1:= 2.0F;
  #L38e85e.  v2:= v10 / v1 @kind float;
  #L38e862.  v3:= v11 / v1 @kind float;
  #L38e866.  v4:= v8.`com.github.mikephil.charting.data.BarData.mBarWidth` @type ^`float`;
  #L38e86a.  v4:= v4 / v1 @kind float;
  #L38e86c.  call temp:= `getGroupWidth`(v8, v10, v11) @signature `Lcom/github/mikephil/charting/data/BarData;.getGroupWidth:(FF)F` @kind virtual;
  #L38e872.  v10:= temp;
  #L38e874.  v11:= 0I;
  #L38e876.  if v11 >= v0 then goto L38e8f4;
  #L38e87a.  v1:= v9 + v2 @kind float;
  #L38e87e.  v5:= v8.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L38e882.  call temp:= `iterator`(v5) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L38e888.  v5:= temp @kind object;
  #L38e88a.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L38e890.  v6:= temp;
  #L38e892.  if v6 == 0 then goto L38e8ce;
  #L38e896.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L38e89c.  v6:= temp @kind object;
  #L38e89e.  v6:= (`com.github.mikephil.charting.interfaces.datasets.IBarDataSet`) v6 @kind object;
  #L38e8a2.  v1:= v1 + v3 @kind float;
  #L38e8a4.  v1:= v1 + v4 @kind float;
  #L38e8a6.  call temp:= `getEntryCount`(v6) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryCount:()I` @kind interface;
  #L38e8ac.  v7:= temp;
  #L38e8ae.  if v11 >= v7 then goto L38e8c8;
  #L38e8b2.  call temp:= `getEntryForIndex`(v6, v11) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryForIndex:(I)Lcom/github/mikephil/charting/data/Entry;` @kind interface;
  #L38e8b8.  v6:= temp @kind object;
  #L38e8ba.  v6:= (`com.github.mikephil.charting.data.BarEntry`) v6 @kind object;
  #L38e8be.  if v6 == 0 then goto L38e8c8;
  #L38e8c2.  call `setX`(v6, v1) @signature `Lcom/github/mikephil/charting/data/Entry;.setX:(F)V` @kind virtual;
  #L38e8c8.  v1:= v1 + v4 @kind float;
  #L38e8ca.  v1:= v1 + v3 @kind float;
  #L38e8cc.  goto L38e88a;
  #L38e8ce.  v1:= v1 + v2 @kind float;
  #L38e8d0.  v9:= v1 - v9 @kind float;
  #L38e8d4.  v9:= v10 - v9 @kind float;
  #L38e8d8.  v5:= 0I;
  #L38e8da.  v6:= fcmpl(v9, v5);
  #L38e8de.  if v6 > 0 then goto L38e8ea;
  #L38e8e2.  v5:= fcmpg(v9, v5);
  #L38e8e6.  if v5 >= 0 then goto L38e8ec;
  #L38e8ea.  v1:= v1 + v9 @kind float;
  #L38e8ec.  v9:= v1;
  #L38e8ee.  v11:= v11 + 1;
  #L38e8f2.  goto L38e876;
  #L38e8f4.  call `notifyDataChanged`(v8) @signature `Lcom/github/mikephil/charting/data/ChartData;.notifyDataChanged:()V` @kind virtual;
  #L38e8fa.  return @kind void;
  #L38e8fc.  v9:= new `java.lang.RuntimeException`;
  #L38e900.  v10:= "BarData needs to hold at least 2 BarDataSets to allow grouping." @kind object;
  #L38e904.  call `<init>`(v9, v10) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L38e90a.  goto L38e90e;
  #L38e90c.  throw v9;
  #L38e90e.  goto L38e90c;
}
procedure `void` `setBarWidth`(`com.github.mikephil.charting.data.BarData` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/data/BarData;.setBarWidth:(F)V` @AccessFlag PUBLIC {
    temp;

  #L38e920.  v0.`com.github.mikephil.charting.data.BarData.mBarWidth` @type ^`float` := v1;
  #L38e924.  return @kind void;
}
