record `com.github.mikephil.charting.data.ScatterDataSet` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.data.LineScatterCandleRadarDataSet` @kind class, `com.github.mikephil.charting.interfaces.datasets.IScatterDataSet` @kind interface {
  `int` `com.github.mikephil.charting.data.ScatterDataSet.mScatterShapeHoleColor` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.data.ScatterDataSet.mScatterShapeHoleRadius` @AccessFlag PRIVATE;
  `com.github.mikephil.charting.renderer.scatter.IShapeRenderer` `com.github.mikephil.charting.data.ScatterDataSet.mShapeRenderer` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.data.ScatterDataSet.mShapeSize` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.ScatterDataSet` v0 @kind this, `java.util.List` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/github/mikephil/charting/data/ScatterDataSet;.<init>:(Ljava/util/List;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L393d0c.  call `<init>`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/data/LineScatterCandleRadarDataSet;.<init>:(Ljava/util/List;Ljava/lang/String;)V` @kind direct;
  #L393d12.  v1:= 15.0F;
  #L393d16.  v0.`com.github.mikephil.charting.data.ScatterDataSet.mShapeSize` @type ^`float` := v1;
  #L393d1a.  v1:= new `com.github.mikephil.charting.renderer.scatter.SquareShapeRenderer`;
  #L393d1e.  call `<init>`(v1) @signature `Lcom/github/mikephil/charting/renderer/scatter/SquareShapeRenderer;.<init>:()V` @kind direct;
  #L393d24.  v0.`com.github.mikephil.charting.data.ScatterDataSet.mShapeRenderer` @type ^`com.github.mikephil.charting.renderer.scatter.IShapeRenderer` := v1 @kind object;
  #L393d28.  v1:= 0I;
  #L393d2a.  v0.`com.github.mikephil.charting.data.ScatterDataSet.mScatterShapeHoleRadius` @type ^`float` := v1;
  #L393d2e.  v1:= 1122867I;
  #L393d34.  v0.`com.github.mikephil.charting.data.ScatterDataSet.mScatterShapeHoleColor` @type ^`int` := v1;
  #L393d38.  return @kind void;
}
procedure `com.github.mikephil.charting.renderer.scatter.IShapeRenderer` `getRendererForShape`(`com.github.mikephil.charting.charts.ScatterChart$ScatterShape` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/ScatterDataSet;.getRendererForShape:(Lcom/github/mikephil/charting/charts/ScatterChart$ScatterShape;)Lcom/github/mikephil/charting/renderer/scatter/IShapeRenderer;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L393c08.  v0:= `@@com.github.mikephil.charting.data.ScatterDataSet$1.a` @type ^`int`[] @kind object;
  #L393c0c.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L393c12.  v1:= temp;
  #L393c14.  v1:= v0[v1];
  #L393c18.  goto L393c78;
  #L393c1e.  v1:= 0I;
  #L393c20.  return v1 @kind object;
  #L393c22.  v1:= new `com.github.mikephil.charting.renderer.scatter.ChevronDownShapeRenderer`;
  #L393c26.  call `<init>`(v1) @signature `Lcom/github/mikephil/charting/renderer/scatter/ChevronDownShapeRenderer;.<init>:()V` @kind direct;
  #L393c2c.  return v1 @kind object;
  #L393c2e.  v1:= new `com.github.mikephil.charting.renderer.scatter.ChevronUpShapeRenderer`;
  #L393c32.  call `<init>`(v1) @signature `Lcom/github/mikephil/charting/renderer/scatter/ChevronUpShapeRenderer;.<init>:()V` @kind direct;
  #L393c38.  return v1 @kind object;
  #L393c3a.  v1:= new `com.github.mikephil.charting.renderer.scatter.XShapeRenderer`;
  #L393c3e.  call `<init>`(v1) @signature `Lcom/github/mikephil/charting/renderer/scatter/XShapeRenderer;.<init>:()V` @kind direct;
  #L393c44.  return v1 @kind object;
  #L393c46.  v1:= new `com.github.mikephil.charting.renderer.scatter.CrossShapeRenderer`;
  #L393c4a.  call `<init>`(v1) @signature `Lcom/github/mikephil/charting/renderer/scatter/CrossShapeRenderer;.<init>:()V` @kind direct;
  #L393c50.  return v1 @kind object;
  #L393c52.  v1:= new `com.github.mikephil.charting.renderer.scatter.TriangleShapeRenderer`;
  #L393c56.  call `<init>`(v1) @signature `Lcom/github/mikephil/charting/renderer/scatter/TriangleShapeRenderer;.<init>:()V` @kind direct;
  #L393c5c.  return v1 @kind object;
  #L393c5e.  v1:= new `com.github.mikephil.charting.renderer.scatter.CircleShapeRenderer`;
  #L393c62.  call `<init>`(v1) @signature `Lcom/github/mikephil/charting/renderer/scatter/CircleShapeRenderer;.<init>:()V` @kind direct;
  #L393c68.  return v1 @kind object;
  #L393c6a.  v1:= new `com.github.mikephil.charting.renderer.scatter.SquareShapeRenderer`;
  #L393c6e.  call `<init>`(v1) @signature `Lcom/github/mikephil/charting/renderer/scatter/SquareShapeRenderer;.<init>:()V` @kind direct;
  #L393c74.  return v1 @kind object;
  #L393c76.  
  #L393c78.  switch v1
                  | 1 => goto L393c6a
                  | 2 => goto L393c5e
                  | 3 => goto L393c52
                  | 4 => goto L393c46
                  | 5 => goto L393c3a
                  | 6 => goto L393c2e
                  | 7 => goto L393c22
                  | else => goto L393c1e;
}
procedure `com.github.mikephil.charting.data.DataSet` `copy`(`com.github.mikephil.charting.data.ScatterDataSet` v3 @kind this) @signature `Lcom/github/mikephil/charting/data/ScatterDataSet;.copy:()Lcom/github/mikephil/charting/data/DataSet;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L393b9c.  v0:= new `java.util.ArrayList`;
  #L393ba0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L393ba6.  v1:= 0I;
  #L393ba8.  v2:= v3.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L393bac.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L393bb2.  v2:= temp;
  #L393bb4.  if v1 >= v2 then goto L393bdc;
  #L393bb8.  v2:= v3.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L393bbc.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L393bc2.  v2:= temp @kind object;
  #L393bc4.  v2:= (`com.github.mikephil.charting.data.Entry`) v2 @kind object;
  #L393bc8.  call temp:= `copy`(v2) @signature `Lcom/github/mikephil/charting/data/Entry;.copy:()Lcom/github/mikephil/charting/data/Entry;` @kind virtual;
  #L393bce.  v2:= temp @kind object;
  #L393bd0.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L393bd6.  v1:= v1 + 1;
  #L393bda.  goto L393ba8;
  #L393bdc.  v1:= new `com.github.mikephil.charting.data.ScatterDataSet`;
  #L393be0.  call temp:= `getLabel`(v3) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getLabel:()Ljava/lang/String;` @kind virtual;
  #L393be6.  v2:= temp @kind object;
  #L393be8.  call `<init>`(v1, v0, v2) @signature `Lcom/github/mikephil/charting/data/ScatterDataSet;.<init>:(Ljava/util/List;Ljava/lang/String;)V` @kind direct;
  #L393bee.  call `copy`(v3, v1) @signature `Lcom/github/mikephil/charting/data/ScatterDataSet;.copy:(Lcom/github/mikephil/charting/data/ScatterDataSet;)V` @kind virtual;
  #L393bf4.  return v1 @kind object;
}
procedure `void` `copy`(`com.github.mikephil.charting.data.ScatterDataSet` v1 @kind this, `com.github.mikephil.charting.data.ScatterDataSet` v2 @kind object) @signature `Lcom/github/mikephil/charting/data/ScatterDataSet;.copy:(Lcom/github/mikephil/charting/data/ScatterDataSet;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L393d4c.  call `copy`(v1, v2) @signature `Lcom/github/mikephil/charting/data/LineScatterCandleRadarDataSet;.copy:(Lcom/github/mikephil/charting/data/LineScatterCandleRadarDataSet;)V` @kind super;
  #L393d52.  v0:= v1.`com.github.mikephil.charting.data.ScatterDataSet.mShapeSize` @type ^`float`;
  #L393d56.  v2.`com.github.mikephil.charting.data.ScatterDataSet.mShapeSize` @type ^`float` := v0;
  #L393d5a.  v0:= v1.`com.github.mikephil.charting.data.ScatterDataSet.mShapeRenderer` @type ^`com.github.mikephil.charting.renderer.scatter.IShapeRenderer` @kind object;
  #L393d5e.  v2.`com.github.mikephil.charting.data.ScatterDataSet.mShapeRenderer` @type ^`com.github.mikephil.charting.renderer.scatter.IShapeRenderer` := v0 @kind object;
  #L393d62.  v0:= v1.`com.github.mikephil.charting.data.ScatterDataSet.mScatterShapeHoleRadius` @type ^`float`;
  #L393d66.  v2.`com.github.mikephil.charting.data.ScatterDataSet.mScatterShapeHoleRadius` @type ^`float` := v0;
  #L393d6a.  v0:= v1.`com.github.mikephil.charting.data.ScatterDataSet.mScatterShapeHoleColor` @type ^`int`;
  #L393d6e.  v2.`com.github.mikephil.charting.data.ScatterDataSet.mScatterShapeHoleColor` @type ^`int` := v0;
  #L393d72.  return @kind void;
}
procedure `int` `getScatterShapeHoleColor`(`com.github.mikephil.charting.data.ScatterDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/ScatterDataSet;.getScatterShapeHoleColor:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L393cf4.  v0:= v1.`com.github.mikephil.charting.data.ScatterDataSet.mScatterShapeHoleColor` @type ^`int`;
  #L393cf8.  return v0;
}
procedure `float` `getScatterShapeHoleRadius`(`com.github.mikephil.charting.data.ScatterDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/ScatterDataSet;.getScatterShapeHoleRadius:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L393cc4.  v0:= v1.`com.github.mikephil.charting.data.ScatterDataSet.mScatterShapeHoleRadius` @type ^`float`;
  #L393cc8.  return v0;
}
procedure `float` `getScatterShapeSize`(`com.github.mikephil.charting.data.ScatterDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/ScatterDataSet;.getScatterShapeSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L393cdc.  v0:= v1.`com.github.mikephil.charting.data.ScatterDataSet.mShapeSize` @type ^`float`;
  #L393ce0.  return v0;
}
procedure `com.github.mikephil.charting.renderer.scatter.IShapeRenderer` `getShapeRenderer`(`com.github.mikephil.charting.data.ScatterDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/ScatterDataSet;.getShapeRenderer:()Lcom/github/mikephil/charting/renderer/scatter/IShapeRenderer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L393cac.  v0:= v1.`com.github.mikephil.charting.data.ScatterDataSet.mShapeRenderer` @type ^`com.github.mikephil.charting.renderer.scatter.IShapeRenderer` @kind object;
  #L393cb0.  return v0 @kind object;
}
procedure `void` `setScatterShape`(`com.github.mikephil.charting.data.ScatterDataSet` v0 @kind this, `com.github.mikephil.charting.charts.ScatterChart$ScatterShape` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/ScatterDataSet;.setScatterShape:(Lcom/github/mikephil/charting/charts/ScatterChart$ScatterShape;)V` @AccessFlag PUBLIC {
    temp;

  #L393d84.  call temp:= `getRendererForShape`(v1) @signature `Lcom/github/mikephil/charting/data/ScatterDataSet;.getRendererForShape:(Lcom/github/mikephil/charting/charts/ScatterChart$ScatterShape;)Lcom/github/mikephil/charting/renderer/scatter/IShapeRenderer;` @kind static;
  #L393d8a.  v1:= temp @kind object;
  #L393d8c.  v0.`com.github.mikephil.charting.data.ScatterDataSet.mShapeRenderer` @type ^`com.github.mikephil.charting.renderer.scatter.IShapeRenderer` := v1 @kind object;
  #L393d90.  return @kind void;
}
procedure `void` `setScatterShapeHoleColor`(`com.github.mikephil.charting.data.ScatterDataSet` v0 @kind this, `int` v1 ) @signature `Lcom/github/mikephil/charting/data/ScatterDataSet;.setScatterShapeHoleColor:(I)V` @AccessFlag PUBLIC {
    temp;

  #L393da4.  v0.`com.github.mikephil.charting.data.ScatterDataSet.mScatterShapeHoleColor` @type ^`int` := v1;
  #L393da8.  return @kind void;
}
procedure `void` `setScatterShapeHoleRadius`(`com.github.mikephil.charting.data.ScatterDataSet` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/data/ScatterDataSet;.setScatterShapeHoleRadius:(F)V` @AccessFlag PUBLIC {
    temp;

  #L393dbc.  v0.`com.github.mikephil.charting.data.ScatterDataSet.mScatterShapeHoleRadius` @type ^`float` := v1;
  #L393dc0.  return @kind void;
}
procedure `void` `setScatterShapeSize`(`com.github.mikephil.charting.data.ScatterDataSet` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/data/ScatterDataSet;.setScatterShapeSize:(F)V` @AccessFlag PUBLIC {
    temp;

  #L393dd4.  v0.`com.github.mikephil.charting.data.ScatterDataSet.mShapeSize` @type ^`float` := v1;
  #L393dd8.  return @kind void;
}
procedure `void` `setShapeRenderer`(`com.github.mikephil.charting.data.ScatterDataSet` v0 @kind this, `com.github.mikephil.charting.renderer.scatter.IShapeRenderer` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/ScatterDataSet;.setShapeRenderer:(Lcom/github/mikephil/charting/renderer/scatter/IShapeRenderer;)V` @AccessFlag PUBLIC {
    temp;

  #L393dec.  v0.`com.github.mikephil.charting.data.ScatterDataSet.mShapeRenderer` @type ^`com.github.mikephil.charting.renderer.scatter.IShapeRenderer` := v1 @kind object;
  #L393df0.  return @kind void;
}
