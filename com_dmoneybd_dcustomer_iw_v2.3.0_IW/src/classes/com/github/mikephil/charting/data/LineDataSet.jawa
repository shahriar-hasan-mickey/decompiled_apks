record `com.github.mikephil.charting.data.LineDataSet` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.data.LineRadarDataSet` @kind class, `com.github.mikephil.charting.interfaces.datasets.ILineDataSet` @kind interface {
  `java.util.List` `com.github.mikephil.charting.data.LineDataSet.mCircleColors` @AccessFlag PRIVATE;
  `int` `com.github.mikephil.charting.data.LineDataSet.mCircleHoleColor` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.data.LineDataSet.mCircleHoleRadius` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.data.LineDataSet.mCircleRadius` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.data.LineDataSet.mCubicIntensity` @AccessFlag PRIVATE;
  `android.graphics.DashPathEffect` `com.github.mikephil.charting.data.LineDataSet.mDashPathEffect` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.data.LineDataSet.mDrawCircleHole` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.data.LineDataSet.mDrawCircles` @AccessFlag PRIVATE;
  `com.github.mikephil.charting.formatter.IFillFormatter` `com.github.mikephil.charting.data.LineDataSet.mFillFormatter` @AccessFlag PRIVATE;
  `com.github.mikephil.charting.data.LineDataSet$Mode` `com.github.mikephil.charting.data.LineDataSet.mMode` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.LineDataSet` v2 @kind this, `java.util.List` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.<init>:(Ljava/util/List;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L392760.  call `<init>`(v2, v3, v4) @signature `Lcom/github/mikephil/charting/data/LineRadarDataSet;.<init>:(Ljava/util/List;Ljava/lang/String;)V` @kind direct;
  #L392766.  v3:= `@@com.github.mikephil.charting.data.LineDataSet$Mode.LINEAR` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` @kind object;
  #L39276a.  v2.`com.github.mikephil.charting.data.LineDataSet.mMode` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` := v3 @kind object;
  #L39276e.  v3:= 0I;
  #L392770.  v2.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` := v3 @kind object;
  #L392774.  v4:= -1I;
  #L392776.  v2.`com.github.mikephil.charting.data.LineDataSet.mCircleHoleColor` @type ^`int` := v4;
  #L39277a.  v4:= 8.0F;
  #L39277e.  v2.`com.github.mikephil.charting.data.LineDataSet.mCircleRadius` @type ^`float` := v4;
  #L392782.  v4:= 4.0F;
  #L392786.  v2.`com.github.mikephil.charting.data.LineDataSet.mCircleHoleRadius` @type ^`float` := v4;
  #L39278a.  v4:= 1045220557I;
  #L392790.  v2.`com.github.mikephil.charting.data.LineDataSet.mCubicIntensity` @type ^`float` := v4;
  #L392794.  v2.`com.github.mikephil.charting.data.LineDataSet.mDashPathEffect` @type ^`android.graphics.DashPathEffect` := v3 @kind object;
  #L392798.  v3:= new `com.github.mikephil.charting.formatter.DefaultFillFormatter`;
  #L39279c.  call `<init>`(v3) @signature `Lcom/github/mikephil/charting/formatter/DefaultFillFormatter;.<init>:()V` @kind direct;
  #L3927a2.  v2.`com.github.mikephil.charting.data.LineDataSet.mFillFormatter` @type ^`com.github.mikephil.charting.formatter.IFillFormatter` := v3 @kind object;
  #L3927a6.  v3:= 1I;
  #L3927a8.  v2.`com.github.mikephil.charting.data.LineDataSet.mDrawCircles` @type ^`boolean` := v3 @kind boolean;
  #L3927ac.  v2.`com.github.mikephil.charting.data.LineDataSet.mDrawCircleHole` @type ^`boolean` := v3 @kind boolean;
  #L3927b0.  v3:= v2.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` @kind object;
  #L3927b4.  if v3 != 0 then goto L3927c6;
  #L3927b8.  v3:= new `java.util.ArrayList`;
  #L3927bc.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3927c2.  v2.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` := v3 @kind object;
  #L3927c6.  v3:= v2.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` @kind object;
  #L3927ca.  call `clear`(v3) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3927d0.  v3:= v2.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` @kind object;
  #L3927d4.  v4:= 140I;
  #L3927d8.  v0:= 234I;
  #L3927dc.  v1:= 255I;
  #L3927e0.  call temp:= `rgb`(v4, v0, v1) @signature `Landroid/graphics/Color;.rgb:(III)I` @kind static;
  #L3927e6.  v4:= temp;
  #L3927e8.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3927ee.  v4:= temp @kind object;
  #L3927f0.  call temp:= `add`(v3, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3927f6.  return @kind void;
}
procedure `com.github.mikephil.charting.data.DataSet` `copy`(`com.github.mikephil.charting.data.LineDataSet` v3 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.copy:()Lcom/github/mikephil/charting/data/DataSet;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3925e4.  v0:= new `java.util.ArrayList`;
  #L3925e8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3925ee.  v1:= 0I;
  #L3925f0.  v2:= v3.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L3925f4.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3925fa.  v2:= temp;
  #L3925fc.  if v1 >= v2 then goto L392624;
  #L392600.  v2:= v3.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L392604.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39260a.  v2:= temp @kind object;
  #L39260c.  v2:= (`com.github.mikephil.charting.data.Entry`) v2 @kind object;
  #L392610.  call temp:= `copy`(v2) @signature `Lcom/github/mikephil/charting/data/Entry;.copy:()Lcom/github/mikephil/charting/data/Entry;` @kind virtual;
  #L392616.  v2:= temp @kind object;
  #L392618.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L39261e.  v1:= v1 + 1;
  #L392622.  goto L3925f0;
  #L392624.  v1:= new `com.github.mikephil.charting.data.LineDataSet`;
  #L392628.  call temp:= `getLabel`(v3) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getLabel:()Ljava/lang/String;` @kind virtual;
  #L39262e.  v2:= temp @kind object;
  #L392630.  call `<init>`(v1, v0, v2) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.<init>:(Ljava/util/List;Ljava/lang/String;)V` @kind direct;
  #L392636.  call `copy`(v3, v1) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.copy:(Lcom/github/mikephil/charting/data/LineDataSet;)V` @kind virtual;
  #L39263c.  return v1 @kind object;
}
procedure `void` `copy`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this, `com.github.mikephil.charting.data.LineDataSet` v2 @kind object) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.copy:(Lcom/github/mikephil/charting/data/LineDataSet;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L392808.  call `copy`(v1, v2) @signature `Lcom/github/mikephil/charting/data/LineRadarDataSet;.copy:(Lcom/github/mikephil/charting/data/LineRadarDataSet;)V` @kind super;
  #L39280e.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` @kind object;
  #L392812.  v2.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` := v0 @kind object;
  #L392816.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mCircleHoleColor` @type ^`int`;
  #L39281a.  v2.`com.github.mikephil.charting.data.LineDataSet.mCircleHoleColor` @type ^`int` := v0;
  #L39281e.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mCircleHoleRadius` @type ^`float`;
  #L392822.  v2.`com.github.mikephil.charting.data.LineDataSet.mCircleHoleRadius` @type ^`float` := v0;
  #L392826.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mCircleRadius` @type ^`float`;
  #L39282a.  v2.`com.github.mikephil.charting.data.LineDataSet.mCircleRadius` @type ^`float` := v0;
  #L39282e.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mCubicIntensity` @type ^`float`;
  #L392832.  v2.`com.github.mikephil.charting.data.LineDataSet.mCubicIntensity` @type ^`float` := v0;
  #L392836.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mDashPathEffect` @type ^`android.graphics.DashPathEffect` @kind object;
  #L39283a.  v2.`com.github.mikephil.charting.data.LineDataSet.mDashPathEffect` @type ^`android.graphics.DashPathEffect` := v0 @kind object;
  #L39283e.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mDrawCircleHole` @type ^`boolean` @kind boolean;
  #L392842.  v2.`com.github.mikephil.charting.data.LineDataSet.mDrawCircleHole` @type ^`boolean` := v0 @kind boolean;
  #L392846.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mDrawCircleHole` @type ^`boolean` @kind boolean;
  #L39284a.  v2.`com.github.mikephil.charting.data.LineDataSet.mDrawCircles` @type ^`boolean` := v0 @kind boolean;
  #L39284e.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mFillFormatter` @type ^`com.github.mikephil.charting.formatter.IFillFormatter` @kind object;
  #L392852.  v2.`com.github.mikephil.charting.data.LineDataSet.mFillFormatter` @type ^`com.github.mikephil.charting.formatter.IFillFormatter` := v0 @kind object;
  #L392856.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mMode` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` @kind object;
  #L39285a.  v2.`com.github.mikephil.charting.data.LineDataSet.mMode` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` := v0 @kind object;
  #L39285e.  return @kind void;
}
procedure `void` `disableDashedLine`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.disableDashedLine:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392870.  v0:= 0I;
  #L392872.  v1.`com.github.mikephil.charting.data.LineDataSet.mDashPathEffect` @type ^`android.graphics.DashPathEffect` := v0 @kind object;
  #L392876.  return @kind void;
}
procedure `void` `enableDashedLine`(`com.github.mikephil.charting.data.LineDataSet` v3 @kind this, `float` v4 , `float` v5 , `float` v6 ) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.enableDashedLine:(FFF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L392888.  v0:= new `android.graphics.DashPathEffect`;
  #L39288c.  v1:= 2I;
  #L39288e.  v1:= new `float`[v1];
  #L392892.  v2:= 0I;
  #L392894.  v1[v2]:= v4;
  #L392898.  v4:= 1I;
  #L39289a.  v1[v4]:= v5;
  #L39289e.  call `<init>`(v0, v1, v6) @signature `Landroid/graphics/DashPathEffect;.<init>:([FF)V` @kind direct;
  #L3928a4.  v3.`com.github.mikephil.charting.data.LineDataSet.mDashPathEffect` @type ^`android.graphics.DashPathEffect` := v0 @kind object;
  #L3928a8.  return @kind void;
}
procedure `int` `getCircleColor`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this, `int` v2 ) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.getCircleColor:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3926e4.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` @kind object;
  #L3926e8.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3926ee.  v2:= temp @kind object;
  #L3926f0.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L3926f4.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3926fa.  v2:= temp;
  #L3926fc.  return v2;
}
procedure `int` `getCircleColorCount`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.getCircleColorCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392710.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` @kind object;
  #L392714.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39271a.  v0:= temp;
  #L39271c.  return v0;
}
procedure `java.util.List` `getCircleColors`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.getCircleColors:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392748.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` @kind object;
  #L39274c.  return v0 @kind object;
}
procedure `int` `getCircleHoleColor`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.getCircleHoleColor:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392730.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mCircleHoleColor` @type ^`int`;
  #L392734.  return v0;
}
procedure `float` `getCircleHoleRadius`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.getCircleHoleRadius:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392680.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mCircleHoleRadius` @type ^`float`;
  #L392684.  return v0;
}
procedure `float` `getCircleRadius`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.getCircleRadius:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392698.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mCircleRadius` @type ^`float`;
  #L39269c.  return v0;
}
procedure `float` `getCircleSize`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.getCircleSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3926b0.  call temp:= `getCircleRadius`(v1) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.getCircleRadius:()F` @kind virtual;
  #L3926b6.  v0:= temp;
  #L3926b8.  return v0;
}
procedure `float` `getCubicIntensity`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.getCubicIntensity:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3926cc.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mCubicIntensity` @type ^`float`;
  #L3926d0.  return v0;
}
procedure `android.graphics.DashPathEffect` `getDashPathEffect`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.getDashPathEffect:()Landroid/graphics/DashPathEffect;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392534.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mDashPathEffect` @type ^`android.graphics.DashPathEffect` @kind object;
  #L392538.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.formatter.IFillFormatter` `getFillFormatter`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.getFillFormatter:()Lcom/github/mikephil/charting/formatter/IFillFormatter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392668.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mFillFormatter` @type ^`com.github.mikephil.charting.formatter.IFillFormatter` @kind object;
  #L39266c.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.data.LineDataSet$Mode` `getMode`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.getMode:()Lcom/github/mikephil/charting/data/LineDataSet$Mode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392650.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mMode` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` @kind object;
  #L392654.  return v0 @kind object;
}
procedure `boolean` `isDashedLineEnabled`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.isDashedLineEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39254c.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mDashPathEffect` @type ^`android.graphics.DashPathEffect` @kind object;
  #L392550.  if v0 != 0 then goto L392558;
  #L392554.  v0:= 0I;
  #L392556.  goto L39255a;
  #L392558.  v0:= 1I;
  #L39255a.  return v0;
}
procedure `boolean` `isDrawCircleHoleEnabled`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.isDrawCircleHoleEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39256c.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mDrawCircleHole` @type ^`boolean` @kind boolean;
  #L392570.  return v0;
}
procedure `boolean` `isDrawCirclesEnabled`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.isDrawCirclesEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392584.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mDrawCircles` @type ^`boolean` @kind boolean;
  #L392588.  return v0;
}
procedure `boolean` `isDrawCubicEnabled`(`com.github.mikephil.charting.data.LineDataSet` v2 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.isDrawCubicEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39259c.  v0:= v2.`com.github.mikephil.charting.data.LineDataSet.mMode` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` @kind object;
  #L3925a0.  v1:= `@@com.github.mikephil.charting.data.LineDataSet$Mode.CUBIC_BEZIER` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` @kind object;
  #L3925a4.  if v0 != v1 then goto L3925ac;
  #L3925a8.  v0:= 1I;
  #L3925aa.  goto L3925ae;
  #L3925ac.  v0:= 0I;
  #L3925ae.  return v0;
}
procedure `boolean` `isDrawSteppedEnabled`(`com.github.mikephil.charting.data.LineDataSet` v2 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.isDrawSteppedEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3925c0.  v0:= v2.`com.github.mikephil.charting.data.LineDataSet.mMode` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` @kind object;
  #L3925c4.  v1:= `@@com.github.mikephil.charting.data.LineDataSet$Mode.STEPPED` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` @kind object;
  #L3925c8.  if v0 != v1 then goto L3925d0;
  #L3925cc.  v0:= 1I;
  #L3925ce.  goto L3925d2;
  #L3925d0.  v0:= 0I;
  #L3925d2.  return v0;
}
procedure `void` `resetCircleColors`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.resetCircleColors:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3928bc.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` @kind object;
  #L3928c0.  if v0 != 0 then goto L3928d2;
  #L3928c4.  v0:= new `java.util.ArrayList`;
  #L3928c8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3928ce.  v1.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` := v0 @kind object;
  #L3928d2.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` @kind object;
  #L3928d6.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3928dc.  return @kind void;
}
procedure `void` `setCircleColor`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this, `int` v2 ) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setCircleColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3928f0.  call `resetCircleColors`(v1) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.resetCircleColors:()V` @kind virtual;
  #L3928f6.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` @kind object;
  #L3928fa.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L392900.  v2:= temp @kind object;
  #L392902.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L392908.  return @kind void;
}
procedure `void` `setCircleColors`(`com.github.mikephil.charting.data.LineDataSet` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setCircleColors:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L39299c.  v0.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` := v1 @kind object;
  #L3929a0.  return @kind void;
}
procedure `void` `setCircleColors`(`com.github.mikephil.charting.data.LineDataSet` v0 @kind this, `int`[] v1 @kind object) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setCircleColors:([I)V` @AccessFlag PUBLIC {
    temp;

  #L39291c.  call temp:= `createColors`(v1) @signature `Lcom/github/mikephil/charting/utils/ColorTemplate;.createColors:([I)Ljava/util/List;` @kind static;
  #L392922.  v1:= temp @kind object;
  #L392924.  v0.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` := v1 @kind object;
  #L392928.  return @kind void;
}
procedure `void` `setCircleColors`(`com.github.mikephil.charting.data.LineDataSet` v5 @kind this, `int`[] v6 @kind object, `android.content.Context` v7 @kind object) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setCircleColors:([ILandroid/content/Context;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L39293c.  v0:= v5.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` @kind object;
  #L392940.  if v0 != 0 then goto L39294e;
  #L392944.  v0:= new `java.util.ArrayList`;
  #L392948.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L39294e.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L392954.  v1:= length @variable v6;
  #L392956.  v2:= 0I;
  #L392958.  if v2 >= v1 then goto L392984;
  #L39295c.  v3:= v6[v2];
  #L392960.  call temp:= `getResources`(v7) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L392966.  v4:= temp @kind object;
  #L392968.  call temp:= `getColor`(v4, v3) @signature `Landroid/content/res/Resources;.getColor:(I)I` @kind virtual;
  #L39296e.  v3:= temp;
  #L392970.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L392976.  v3:= temp @kind object;
  #L392978.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L39297e.  v2:= v2 + 1;
  #L392982.  goto L392958;
  #L392984.  v5.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` := v0 @kind object;
  #L392988.  return @kind void;
}
procedure `void` `setCircleHoleColor`(`com.github.mikephil.charting.data.LineDataSet` v0 @kind this, `int` v1 ) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setCircleHoleColor:(I)V` @AccessFlag PUBLIC {
    temp;

  #L3929b4.  v0.`com.github.mikephil.charting.data.LineDataSet.mCircleHoleColor` @type ^`int` := v1;
  #L3929b8.  return @kind void;
}
procedure `void` `setCircleHoleRadius`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this, `float` v2 ) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setCircleHoleRadius:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3929cc.  v0:= 0.5F;
  #L3929d0.  v0:= fcmpl(v2, v0);
  #L3929d4.  if v0 < 0 then goto L3929e6;
  #L3929d8.  call temp:= `convertDpToPixel`(v2) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L3929de.  v2:= temp;
  #L3929e0.  v1.`com.github.mikephil.charting.data.LineDataSet.mCircleHoleRadius` @type ^`float` := v2;
  #L3929e4.  goto L3929f4;
  #L3929e6.  v2:= "LineDataSet" @kind object;
  #L3929ea.  v0:= "Circle radius cannot be < 0.5" @kind object;
  #L3929ee.  call temp:= `e`(v2, v0) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3929f4.  return @kind void;
}
procedure `void` `setCircleRadius`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this, `float` v2 ) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setCircleRadius:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392a08.  v0:= 1.0F;
  #L392a0c.  v0:= fcmpl(v2, v0);
  #L392a10.  if v0 < 0 then goto L392a22;
  #L392a14.  call temp:= `convertDpToPixel`(v2) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L392a1a.  v2:= temp;
  #L392a1c.  v1.`com.github.mikephil.charting.data.LineDataSet.mCircleRadius` @type ^`float` := v2;
  #L392a20.  goto L392a30;
  #L392a22.  v2:= "LineDataSet" @kind object;
  #L392a26.  v0:= "Circle radius cannot be < 1" @kind object;
  #L392a2a.  call temp:= `e`(v2, v0) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L392a30.  return @kind void;
}
procedure `void` `setCircleSize`(`com.github.mikephil.charting.data.LineDataSet` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setCircleSize:(F)V` @AccessFlag PUBLIC {
    temp;

  #L392a44.  call `setCircleRadius`(v0, v1) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setCircleRadius:(F)V` @kind virtual;
  #L392a4a.  return @kind void;
}
procedure `void` `setCubicIntensity`(`com.github.mikephil.charting.data.LineDataSet` v2 @kind this, `float` v3 ) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setCubicIntensity:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L392a5c.  v0:= 1.0F;
  #L392a60.  v1:= fcmpl(v3, v0);
  #L392a64.  if v1 <= 0 then goto L392a6c;
  #L392a68.  v3:= 1.0F;
  #L392a6c.  v0:= 1028443341I;
  #L392a72.  v1:= fcmpg(v3, v0);
  #L392a76.  if v1 >= 0 then goto L392a80;
  #L392a7a.  v3:= 1028443341I;
  #L392a80.  v2.`com.github.mikephil.charting.data.LineDataSet.mCubicIntensity` @type ^`float` := v3;
  #L392a84.  return @kind void;
}
procedure `void` `setDrawCircleHole`(`com.github.mikephil.charting.data.LineDataSet` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setDrawCircleHole:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L392a98.  v0.`com.github.mikephil.charting.data.LineDataSet.mDrawCircleHole` @type ^`boolean` := v1 @kind boolean;
  #L392a9c.  return @kind void;
}
procedure `void` `setDrawCircles`(`com.github.mikephil.charting.data.LineDataSet` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setDrawCircles:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L392ab0.  v0.`com.github.mikephil.charting.data.LineDataSet.mDrawCircles` @type ^`boolean` := v1 @kind boolean;
  #L392ab4.  return @kind void;
}
procedure `void` `setFillFormatter`(`com.github.mikephil.charting.data.LineDataSet` v0 @kind this, `com.github.mikephil.charting.formatter.IFillFormatter` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setFillFormatter:(Lcom/github/mikephil/charting/formatter/IFillFormatter;)V` @AccessFlag PUBLIC {
    temp;

  #L392ac8.  if v1 != 0 then goto L392ad6;
  #L392acc.  v1:= new `com.github.mikephil.charting.formatter.DefaultFillFormatter`;
  #L392ad0.  call `<init>`(v1) @signature `Lcom/github/mikephil/charting/formatter/DefaultFillFormatter;.<init>:()V` @kind direct;
  #L392ad6.  v0.`com.github.mikephil.charting.data.LineDataSet.mFillFormatter` @type ^`com.github.mikephil.charting.formatter.IFillFormatter` := v1 @kind object;
  #L392ada.  return @kind void;
}
procedure `void` `setMode`(`com.github.mikephil.charting.data.LineDataSet` v0 @kind this, `com.github.mikephil.charting.data.LineDataSet$Mode` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setMode:(Lcom/github/mikephil/charting/data/LineDataSet$Mode;)V` @AccessFlag PUBLIC {
    temp;

  #L392aec.  v0.`com.github.mikephil.charting.data.LineDataSet.mMode` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` := v1 @kind object;
  #L392af0.  return @kind void;
}
