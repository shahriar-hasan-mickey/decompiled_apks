record `com.github.mikephil.charting.data.LineDataSet$Mode` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `com.github.mikephil.charting.data.LineDataSet$Mode`[] `@@com.github.mikephil.charting.data.LineDataSet$Mode.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.github.mikephil.charting.data.LineDataSet$Mode` `@@com.github.mikephil.charting.data.LineDataSet$Mode.CUBIC_BEZIER` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.github.mikephil.charting.data.LineDataSet$Mode` `@@com.github.mikephil.charting.data.LineDataSet$Mode.HORIZONTAL_BEZIER` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.github.mikephil.charting.data.LineDataSet$Mode` `@@com.github.mikephil.charting.data.LineDataSet$Mode.LINEAR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.github.mikephil.charting.data.LineDataSet$Mode` `@@com.github.mikephil.charting.data.LineDataSet$Mode.STEPPED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/github/mikephil/charting/data/LineDataSet$Mode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3924a0.  v0:= new `com.github.mikephil.charting.data.LineDataSet$Mode`;
  #L3924a4.  v1:= "LINEAR" @kind object;
  #L3924a8.  v2:= 0I;
  #L3924aa.  call `<init>`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/data/LineDataSet$Mode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3924b0.  `@@com.github.mikephil.charting.data.LineDataSet$Mode.LINEAR` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` := v0 @kind object;
  #L3924b4.  v1:= new `com.github.mikephil.charting.data.LineDataSet$Mode`;
  #L3924b8.  v3:= "STEPPED" @kind object;
  #L3924bc.  v4:= 1I;
  #L3924be.  call `<init>`(v1, v3, v4) @signature `Lcom/github/mikephil/charting/data/LineDataSet$Mode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3924c4.  `@@com.github.mikephil.charting.data.LineDataSet$Mode.STEPPED` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` := v1 @kind object;
  #L3924c8.  v3:= new `com.github.mikephil.charting.data.LineDataSet$Mode`;
  #L3924cc.  v5:= "CUBIC_BEZIER" @kind object;
  #L3924d0.  v6:= 2I;
  #L3924d2.  call `<init>`(v3, v5, v6) @signature `Lcom/github/mikephil/charting/data/LineDataSet$Mode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3924d8.  `@@com.github.mikephil.charting.data.LineDataSet$Mode.CUBIC_BEZIER` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` := v3 @kind object;
  #L3924dc.  v5:= new `com.github.mikephil.charting.data.LineDataSet$Mode`;
  #L3924e0.  v7:= "HORIZONTAL_BEZIER" @kind object;
  #L3924e4.  v8:= 3I;
  #L3924e6.  call `<init>`(v5, v7, v8) @signature `Lcom/github/mikephil/charting/data/LineDataSet$Mode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3924ec.  `@@com.github.mikephil.charting.data.LineDataSet$Mode.HORIZONTAL_BEZIER` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` := v5 @kind object;
  #L3924f0.  v7:= 4I;
  #L3924f2.  v7:= new `com.github.mikephil.charting.data.LineDataSet$Mode`[v7];
  #L3924f6.  v7[v2]:= v0 @kind object;
  #L3924fa.  v7[v4]:= v1 @kind object;
  #L3924fe.  v7[v6]:= v3 @kind object;
  #L392502.  v7[v8]:= v5 @kind object;
  #L392506.  `@@com.github.mikephil.charting.data.LineDataSet$Mode.$VALUES` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode`[] := v7 @kind object;
  #L39250a.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.LineDataSet$Mode` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lcom/github/mikephil/charting/data/LineDataSet$Mode;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L39251c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L392522.  return @kind void;
}
procedure `com.github.mikephil.charting.data.LineDataSet$Mode` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/LineDataSet$Mode;.valueOf:(Ljava/lang/String;)Lcom/github/mikephil/charting/data/LineDataSet$Mode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L392458.  v0:= constclass @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` @kind object;
  #L39245c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L392462.  v1:= temp @kind object;
  #L392464.  v1:= (`com.github.mikephil.charting.data.LineDataSet$Mode`) v1 @kind object;
  #L392468.  return v1 @kind object;
}
procedure `com.github.mikephil.charting.data.LineDataSet$Mode`[] `values`() @signature `Lcom/github/mikephil/charting/data/LineDataSet$Mode;.values:()[Lcom/github/mikephil/charting/data/LineDataSet$Mode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39247c.  v0:= `@@com.github.mikephil.charting.data.LineDataSet$Mode.$VALUES` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode`[] @kind object;
  #L392480.  call temp:= `clone`(v0) @signature `[Lcom/github/mikephil/charting/data/LineDataSet$Mode;.clone:()Ljava/lang/Object;` @kind virtual;
  #L392486.  v0:= temp @kind object;
  #L392488.  v0:= (`com.github.mikephil.charting.data.LineDataSet$Mode`[]) v0 @kind object;
  #L39248c.  return v0 @kind object;
}
