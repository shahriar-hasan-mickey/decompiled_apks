record `com.github.mikephil.charting.data.RadarEntry` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.data.Entry` @kind class {
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.RadarEntry` v1 @kind this, `float` v2 ) @signature `Lcom/github/mikephil/charting/data/RadarEntry;.<init>:(F)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L393a38.  v0:= 0I;
  #L393a3a.  call `<init>`(v1, v0, v2) @signature `Lcom/github/mikephil/charting/data/Entry;.<init>:(FF)V` @kind direct;
  #L393a40.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.RadarEntry` v1 @kind this, `float` v2 , `java.lang.Object` v3 @kind object) @signature `Lcom/github/mikephil/charting/data/RadarEntry;.<init>:(FLjava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L393a54.  v0:= 0I;
  #L393a56.  call `<init>`(v1, v0, v2, v3) @signature `Lcom/github/mikephil/charting/data/Entry;.<init>:(FFLjava/lang/Object;)V` @kind direct;
  #L393a5c.  return @kind void;
}
procedure `com.github.mikephil.charting.data.Entry` `copy`(`com.github.mikephil.charting.data.RadarEntry` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/RadarEntry;.copy:()Lcom/github/mikephil/charting/data/Entry;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3939b8.  call temp:= `copy`(v1) @signature `Lcom/github/mikephil/charting/data/RadarEntry;.copy:()Lcom/github/mikephil/charting/data/RadarEntry;` @kind virtual;
  #L3939be.  v0:= temp @kind object;
  #L3939c0.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.data.RadarEntry` `copy`(`com.github.mikephil.charting.data.RadarEntry` v3 @kind this) @signature `Lcom/github/mikephil/charting/data/RadarEntry;.copy:()Lcom/github/mikephil/charting/data/RadarEntry;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3939d4.  v0:= new `com.github.mikephil.charting.data.RadarEntry`;
  #L3939d8.  call temp:= `getY`(v3) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.getY:()F` @kind virtual;
  #L3939de.  v1:= temp;
  #L3939e0.  call temp:= `getData`(v3) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.getData:()Ljava/lang/Object;` @kind virtual;
  #L3939e6.  v2:= temp @kind object;
  #L3939e8.  call `<init>`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/data/RadarEntry;.<init>:(FLjava/lang/Object;)V` @kind direct;
  #L3939ee.  return v0 @kind object;
}
procedure `float` `getValue`(`com.github.mikephil.charting.data.RadarEntry` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/RadarEntry;.getValue:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L393a00.  call temp:= `getY`(v1) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.getY:()F` @kind virtual;
  #L393a06.  v0:= temp;
  #L393a08.  return v0;
}
procedure `float` `getX`(`com.github.mikephil.charting.data.RadarEntry` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/RadarEntry;.getX:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L393a1c.  call temp:= `getX`(v1) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind super;
  #L393a22.  v0:= temp;
  #L393a24.  return v0;
}
procedure `void` `setX`(`com.github.mikephil.charting.data.RadarEntry` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/data/RadarEntry;.setX:(F)V` @AccessFlag PUBLIC {
    temp;

  #L393a70.  call `setX`(v0, v1) @signature `Lcom/github/mikephil/charting/data/Entry;.setX:(F)V` @kind super;
  #L393a76.  return @kind void;
}
