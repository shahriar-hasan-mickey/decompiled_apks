record `com.github.mikephil.charting.charts.PieRadarChartBase` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.github.mikephil.charting.charts.Chart` @kind class {
  `float` `com.github.mikephil.charting.charts.PieRadarChartBase.mMinOffset` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.charts.PieRadarChartBase.mRawRotationAngle` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.charts.PieRadarChartBase.mRotateEnabled` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.charts.PieRadarChartBase.mRotationAngle` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.github.mikephil.charting.charts.PieRadarChartBase` v0 @kind this, `android.content.Context` v1 @kind object) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L38a73c.  call `<init>`(v0, v1) @signature `Lcom/github/mikephil/charting/charts/Chart;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L38a742.  v1:= 270.0F;
  #L38a746.  v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mRotationAngle` @type ^`float` := v1;
  #L38a74a.  v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mRawRotationAngle` @type ^`float` := v1;
  #L38a74e.  v1:= 1I;
  #L38a750.  v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mRotateEnabled` @type ^`boolean` := v1 @kind boolean;
  #L38a754.  v1:= 0I;
  #L38a756.  v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mMinOffset` @type ^`float` := v1;
  #L38a75a.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.charts.PieRadarChartBase` v0 @kind this, `android.content.Context` v1 @kind object, `android.util.AttributeSet` v2 @kind object) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L38a76c.  call `<init>`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/charts/Chart;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L38a772.  v1:= 270.0F;
  #L38a776.  v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mRotationAngle` @type ^`float` := v1;
  #L38a77a.  v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mRawRotationAngle` @type ^`float` := v1;
  #L38a77e.  v1:= 1I;
  #L38a780.  v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mRotateEnabled` @type ^`boolean` := v1 @kind boolean;
  #L38a784.  v1:= 0I;
  #L38a786.  v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mMinOffset` @type ^`float` := v1;
  #L38a78a.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.charts.PieRadarChartBase` v0 @kind this, `android.content.Context` v1 @kind object, `android.util.AttributeSet` v2 @kind object, `int` v3 ) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L38a79c.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/github/mikephil/charting/charts/Chart;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L38a7a2.  v1:= 270.0F;
  #L38a7a6.  v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mRotationAngle` @type ^`float` := v1;
  #L38a7aa.  v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mRawRotationAngle` @type ^`float` := v1;
  #L38a7ae.  v1:= 1I;
  #L38a7b0.  v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mRotateEnabled` @type ^`boolean` := v1 @kind boolean;
  #L38a7b4.  v1:= 0I;
  #L38a7b6.  v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mMinOffset` @type ^`float` := v1;
  #L38a7ba.  return @kind void;
}
procedure `void` `calcMinMax`(`com.github.mikephil.charting.charts.PieRadarChartBase` v0 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.calcMinMax:()V` @AccessFlag PROTECTED {
    temp;

  #L38a7cc.  return @kind void;
}
procedure `void` `calculateOffsets`(`com.github.mikephil.charting.charts.PieRadarChartBase` v11 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.calculateOffsets:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L38a7e0.  v0:= v11.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L38a7e4.  v1:= 0I;
  #L38a7e6.  if v0 == 0 then goto L38ab08;
  #L38a7ea.  call temp:= `isEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.isEnabled:()Z` @kind virtual;
  #L38a7f0.  v0:= temp;
  #L38a7f2.  if v0 == 0 then goto L38ab08;
  #L38a7f6.  v0:= v11.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L38a7fa.  call temp:= `isDrawInsideEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/Legend;.isDrawInsideEnabled:()Z` @kind virtual;
  #L38a800.  v0:= temp;
  #L38a802.  if v0 != 0 then goto L38ab08;
  #L38a806.  v0:= v11.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L38a80a.  v0:= v0.`com.github.mikephil.charting.components.Legend.mNeededWidth` @type ^`float`;
  #L38a80e.  v2:= v11.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L38a812.  call temp:= `getChartWidth`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getChartWidth:()F` @kind virtual;
  #L38a818.  v2:= temp;
  #L38a81a.  v3:= v11.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L38a81e.  call temp:= `getMaxSizePercent`(v3) @signature `Lcom/github/mikephil/charting/components/Legend;.getMaxSizePercent:()F` @kind virtual;
  #L38a824.  v3:= temp;
  #L38a826.  v2:= v2 * v3 @kind float;
  #L38a82a.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L38a830.  v0:= temp;
  #L38a832.  v2:= `@@com.github.mikephil.charting.charts.PieRadarChartBase$2.c` @type ^`int`[] @kind object;
  #L38a836.  v3:= v11.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L38a83a.  call temp:= `getOrientation`(v3) @signature `Lcom/github/mikephil/charting/components/Legend;.getOrientation:()Lcom/github/mikephil/charting/components/Legend$LegendOrientation;` @kind virtual;
  #L38a840.  v3:= temp @kind object;
  #L38a842.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L38a848.  v3:= temp;
  #L38a84a.  v2:= v2[v3];
  #L38a84e.  v3:= 2I;
  #L38a850.  v4:= 1I;
  #L38a852.  if v2 == v4 then goto L38a8f8;
  #L38a856.  if v2 == v3 then goto L38a85c;
  #L38a85a.  goto L38a8de;
  #L38a85c.  v0:= v11.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L38a860.  call temp:= `getVerticalAlignment`(v0) @signature `Lcom/github/mikephil/charting/components/Legend;.getVerticalAlignment:()Lcom/github/mikephil/charting/components/Legend$LegendVerticalAlignment;` @kind virtual;
  #L38a866.  v0:= temp @kind object;
  #L38a868.  v2:= `@@com.github.mikephil.charting.components.Legend$LegendVerticalAlignment.TOP` @type ^`com.github.mikephil.charting.components.Legend$LegendVerticalAlignment` @kind object;
  #L38a86c.  if v0 == v2 then goto L38a884;
  #L38a870.  v0:= v11.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L38a874.  call temp:= `getVerticalAlignment`(v0) @signature `Lcom/github/mikephil/charting/components/Legend;.getVerticalAlignment:()Lcom/github/mikephil/charting/components/Legend$LegendVerticalAlignment;` @kind virtual;
  #L38a87a.  v0:= temp @kind object;
  #L38a87c.  v2:= `@@com.github.mikephil.charting.components.Legend$LegendVerticalAlignment.BOTTOM` @type ^`com.github.mikephil.charting.components.Legend$LegendVerticalAlignment` @kind object;
  #L38a880.  if v0 != v2 then goto L38a8de;
  #L38a884.  call temp:= `getRequiredLegendOffset`(v11) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRequiredLegendOffset:()F` @kind virtual;
  #L38a88a.  v0:= temp;
  #L38a88c.  v2:= v11.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L38a890.  v2:= v2.`com.github.mikephil.charting.components.Legend.mNeededHeight` @type ^`float`;
  #L38a894.  v2:= v2 + v0 @kind float;
  #L38a896.  v0:= v11.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L38a89a.  call temp:= `getChartHeight`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getChartHeight:()F` @kind virtual;
  #L38a8a0.  v0:= temp;
  #L38a8a2.  v5:= v11.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L38a8a6.  call temp:= `getMaxSizePercent`(v5) @signature `Lcom/github/mikephil/charting/components/Legend;.getMaxSizePercent:()F` @kind virtual;
  #L38a8ac.  v5:= temp;
  #L38a8ae.  v0:= v0 * v5 @kind float;
  #L38a8b2.  call temp:= `min`(v2, v0) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L38a8b8.  v0:= temp;
  #L38a8ba.  v2:= `@@com.github.mikephil.charting.charts.PieRadarChartBase$2.a` @type ^`int`[] @kind object;
  #L38a8be.  v5:= v11.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L38a8c2.  call temp:= `getVerticalAlignment`(v5) @signature `Lcom/github/mikephil/charting/components/Legend;.getVerticalAlignment:()Lcom/github/mikephil/charting/components/Legend$LegendVerticalAlignment;` @kind virtual;
  #L38a8c8.  v5:= temp @kind object;
  #L38a8ca.  call temp:= `ordinal`(v5) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L38a8d0.  v5:= temp;
  #L38a8d2.  v2:= v2[v5];
  #L38a8d6.  if v2 == v4 then goto L38a8ee;
  #L38a8da.  if v2 == v3 then goto L38a8e8;
  #L38a8de.  v0:= 0I;
  #L38a8e0.  v2:= 0I;
  #L38a8e2.  v3:= 0I;
  #L38a8e4.  goto L38aade;
  #L38a8e8.  v2:= v0;
  #L38a8ea.  v0:= 0I;
  #L38a8ec.  goto L38a8e2;
  #L38a8ee.  v3:= v0;
  #L38a8f0.  v0:= 0I;
  #L38a8f2.  v2:= 0I;
  #L38a8f4.  goto L38aade;
  #L38a8f8.  v2:= v11.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L38a8fc.  call temp:= `getHorizontalAlignment`(v2) @signature `Lcom/github/mikephil/charting/components/Legend;.getHorizontalAlignment:()Lcom/github/mikephil/charting/components/Legend$LegendHorizontalAlignment;` @kind virtual;
  #L38a902.  v2:= temp @kind object;
  #L38a904.  v5:= `@@com.github.mikephil.charting.components.Legend$LegendHorizontalAlignment.LEFT` @type ^`com.github.mikephil.charting.components.Legend$LegendHorizontalAlignment` @kind object;
  #L38a908.  if v2 == v5 then goto L38a928;
  #L38a90c.  v2:= v11.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L38a910.  call temp:= `getHorizontalAlignment`(v2) @signature `Lcom/github/mikephil/charting/components/Legend;.getHorizontalAlignment:()Lcom/github/mikephil/charting/components/Legend$LegendHorizontalAlignment;` @kind virtual;
  #L38a916.  v2:= temp @kind object;
  #L38a918.  v5:= `@@com.github.mikephil.charting.components.Legend$LegendHorizontalAlignment.RIGHT` @type ^`com.github.mikephil.charting.components.Legend$LegendHorizontalAlignment` @kind object;
  #L38a91c.  if v2 != v5 then goto L38a922;
  #L38a920.  goto L38a928;
  #L38a922.  v0:= 0I;
  #L38a924.  goto L38aa24;
  #L38a928.  v2:= v11.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L38a92c.  call temp:= `getVerticalAlignment`(v2) @signature `Lcom/github/mikephil/charting/components/Legend;.getVerticalAlignment:()Lcom/github/mikephil/charting/components/Legend$LegendVerticalAlignment;` @kind virtual;
  #L38a932.  v2:= temp @kind object;
  #L38a934.  v5:= `@@com.github.mikephil.charting.components.Legend$LegendVerticalAlignment.CENTER` @type ^`com.github.mikephil.charting.components.Legend$LegendVerticalAlignment` @kind object;
  #L38a938.  if v2 != v5 then goto L38a94c;
  #L38a93c.  v2:= 13.0F;
  #L38a940.  call temp:= `convertDpToPixel`(v2) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L38a946.  v2:= temp;
  #L38a948.  v0:= v0 + v2 @kind float;
  #L38a94a.  goto L38aa24;
  #L38a94c.  v2:= 8.0F;
  #L38a950.  call temp:= `convertDpToPixel`(v2) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L38a956.  v2:= temp;
  #L38a958.  v0:= v0 + v2 @kind float;
  #L38a95a.  v2:= v11.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L38a95e.  v5:= v2.`com.github.mikephil.charting.components.Legend.mNeededHeight` @type ^`float`;
  #L38a962.  v2:= v2.`com.github.mikephil.charting.components.Legend.mTextHeightMax` @type ^`float`;
  #L38a966.  v5:= v5 + v2 @kind float;
  #L38a968.  call temp:= `getCenter`(v11) @signature `Lcom/github/mikephil/charting/charts/Chart;.getCenter:()Lcom/github/mikephil/charting/utils/MPPointF;` @kind virtual;
  #L38a96e.  v2:= temp @kind object;
  #L38a970.  v6:= v11.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L38a974.  call temp:= `getHorizontalAlignment`(v6) @signature `Lcom/github/mikephil/charting/components/Legend;.getHorizontalAlignment:()Lcom/github/mikephil/charting/components/Legend$LegendHorizontalAlignment;` @kind virtual;
  #L38a97a.  v6:= temp @kind object;
  #L38a97c.  v7:= `@@com.github.mikephil.charting.components.Legend$LegendHorizontalAlignment.RIGHT` @type ^`com.github.mikephil.charting.components.Legend$LegendHorizontalAlignment` @kind object;
  #L38a980.  v8:= 15.0F;
  #L38a984.  if v6 != v7 then goto L38a998;
  #L38a988.  call temp:= `getWidth`(v11) @signature `Landroid/view/ViewGroup;.getWidth:()I` @kind virtual;
  #L38a98e.  v6:= temp;
  #L38a990.  v6:= (`float`) v6 @kind i2f;
  #L38a992.  v6:= v6 - v0 @kind float;
  #L38a994.  v6:= v6 + v8 @kind float;
  #L38a996.  goto L38a99c;
  #L38a998.  v6:= v0 - v8 @kind float;
  #L38a99c.  v5:= v5 + v8 @kind float;
  #L38a99e.  call temp:= `distanceToCenter`(v11, v6, v5) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.distanceToCenter:(FF)F` @kind virtual;
  #L38a9a4.  v7:= temp;
  #L38a9a6.  call temp:= `getRadius`(v11) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRadius:()F` @kind virtual;
  #L38a9ac.  v8:= temp;
  #L38a9ae.  call temp:= `getAngleForPoint`(v11, v6, v5) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getAngleForPoint:(FF)F` @kind virtual;
  #L38a9b4.  v6:= temp;
  #L38a9b6.  call temp:= `getPosition`(v11, v2, v8, v6) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getPosition:(Lcom/github/mikephil/charting/utils/MPPointF;FF)Lcom/github/mikephil/charting/utils/MPPointF;` @kind virtual;
  #L38a9bc.  v6:= temp @kind object;
  #L38a9be.  v8:= v6.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L38a9c2.  v9:= v6.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L38a9c6.  call temp:= `distanceToCenter`(v11, v8, v9) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.distanceToCenter:(FF)F` @kind virtual;
  #L38a9cc.  v8:= temp;
  #L38a9ce.  v9:= 5.0F;
  #L38a9d2.  call temp:= `convertDpToPixel`(v9) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L38a9d8.  v9:= temp;
  #L38a9da.  v10:= v2.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L38a9de.  v5:= fcmpl(v5, v10);
  #L38a9e2.  if v5 < 0 then goto L38aa06;
  #L38a9e6.  call temp:= `getHeight`(v11) @signature `Landroid/view/ViewGroup;.getHeight:()I` @kind virtual;
  #L38a9ec.  v5:= temp;
  #L38a9ee.  v5:= (`float`) v5 @kind i2f;
  #L38a9f0.  v5:= v5 - v0 @kind float;
  #L38a9f2.  call temp:= `getWidth`(v11) @signature `Landroid/view/ViewGroup;.getWidth:()I` @kind virtual;
  #L38a9f8.  v10:= temp;
  #L38a9fa.  v10:= (`float`) v10 @kind i2f;
  #L38a9fc.  v5:= fcmpl(v5, v10);
  #L38aa00.  if v5 <= 0 then goto L38aa06;
  #L38aa04.  goto L38aa18;
  #L38aa06.  v0:= fcmpg(v7, v8);
  #L38aa0a.  if v0 >= 0 then goto L38aa16;
  #L38aa0e.  v8:= v8 - v7 @kind float;
  #L38aa10.  v9:= v9 + v8 @kind float;
  #L38aa12.  v0:= v9;
  #L38aa14.  goto L38aa18;
  #L38aa16.  v0:= 0I;
  #L38aa18.  call `recycleInstance`(v2) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointF;)V` @kind static;
  #L38aa1e.  call `recycleInstance`(v6) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointF;)V` @kind static;
  #L38aa24.  v2:= `@@com.github.mikephil.charting.charts.PieRadarChartBase$2.b` @type ^`int`[] @kind object;
  #L38aa28.  v5:= v11.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L38aa2c.  call temp:= `getHorizontalAlignment`(v5) @signature `Lcom/github/mikephil/charting/components/Legend;.getHorizontalAlignment:()Lcom/github/mikephil/charting/components/Legend$LegendHorizontalAlignment;` @kind virtual;
  #L38aa32.  v5:= temp @kind object;
  #L38aa34.  call temp:= `ordinal`(v5) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L38aa3a.  v5:= temp;
  #L38aa3c.  v2:= v2[v5];
  #L38aa40.  if v2 == v4 then goto L38aad8;
  #L38aa44.  if v2 == v3 then goto L38a8e0;
  #L38aa48.  v0:= 3I;
  #L38aa4a.  if v2 == v0 then goto L38aa50;
  #L38aa4e.  goto L38aa74;
  #L38aa50.  v0:= `@@com.github.mikephil.charting.charts.PieRadarChartBase$2.a` @type ^`int`[] @kind object;
  #L38aa54.  v2:= v11.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L38aa58.  call temp:= `getVerticalAlignment`(v2) @signature `Lcom/github/mikephil/charting/components/Legend;.getVerticalAlignment:()Lcom/github/mikephil/charting/components/Legend$LegendVerticalAlignment;` @kind virtual;
  #L38aa5e.  v2:= temp @kind object;
  #L38aa60.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L38aa66.  v2:= temp;
  #L38aa68.  v0:= v0[v2];
  #L38aa6c.  if v0 == v4 then goto L38aaa8;
  #L38aa70.  if v0 == v3 then goto L38aa78;
  #L38aa74.  goto L38a8de;
  #L38aa78.  v0:= v11.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L38aa7c.  v0:= v0.`com.github.mikephil.charting.components.Legend.mNeededHeight` @type ^`float`;
  #L38aa80.  v2:= v11.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L38aa84.  call temp:= `getChartHeight`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getChartHeight:()F` @kind virtual;
  #L38aa8a.  v2:= temp;
  #L38aa8c.  v3:= v11.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L38aa90.  call temp:= `getMaxSizePercent`(v3) @signature `Lcom/github/mikephil/charting/components/Legend;.getMaxSizePercent:()F` @kind virtual;
  #L38aa96.  v3:= temp;
  #L38aa98.  v2:= v2 * v3 @kind float;
  #L38aa9c.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L38aaa2.  v0:= temp;
  #L38aaa4.  goto L38a8e8;
  #L38aaa8.  v0:= v11.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L38aaac.  v0:= v0.`com.github.mikephil.charting.components.Legend.mNeededHeight` @type ^`float`;
  #L38aab0.  v2:= v11.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L38aab4.  call temp:= `getChartHeight`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getChartHeight:()F` @kind virtual;
  #L38aaba.  v2:= temp;
  #L38aabc.  v3:= v11.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L38aac0.  call temp:= `getMaxSizePercent`(v3) @signature `Lcom/github/mikephil/charting/components/Legend;.getMaxSizePercent:()F` @kind virtual;
  #L38aac6.  v3:= temp;
  #L38aac8.  v2:= v2 * v3 @kind float;
  #L38aacc.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L38aad2.  v0:= temp;
  #L38aad4.  goto L38a8ee;
  #L38aad8.  v1:= v0;
  #L38aada.  goto L38a8de;
  #L38aade.  call temp:= `getRequiredBaseOffset`(v11) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRequiredBaseOffset:()F` @kind virtual;
  #L38aae4.  v4:= temp;
  #L38aae6.  v1:= v1 + v4 @kind float;
  #L38aae8.  call temp:= `getRequiredBaseOffset`(v11) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRequiredBaseOffset:()F` @kind virtual;
  #L38aaee.  v4:= temp;
  #L38aaf0.  v0:= v0 + v4 @kind float;
  #L38aaf2.  call temp:= `getRequiredBaseOffset`(v11) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRequiredBaseOffset:()F` @kind virtual;
  #L38aaf8.  v4:= temp;
  #L38aafa.  v3:= v3 + v4 @kind float;
  #L38aafc.  call temp:= `getRequiredBaseOffset`(v11) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRequiredBaseOffset:()F` @kind virtual;
  #L38ab02.  v4:= temp;
  #L38ab04.  v2:= v2 + v4 @kind float;
  #L38ab06.  goto L38ab0e;
  #L38ab08.  v0:= 0I;
  #L38ab0a.  v2:= 0I;
  #L38ab0c.  v3:= 0I;
  #L38ab0e.  v4:= v11.`com.github.mikephil.charting.charts.PieRadarChartBase.mMinOffset` @type ^`float`;
  #L38ab12.  call temp:= `convertDpToPixel`(v4) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L38ab18.  v4:= temp;
  #L38ab1a.  v5:= instanceof @variable v11 @type ^`com.github.mikephil.charting.charts.RadarChart` @kind boolean;
  #L38ab1e.  if v5 == 0 then goto L38ab50;
  #L38ab22.  call temp:= `getXAxis`(v11) @signature `Lcom/github/mikephil/charting/charts/Chart;.getXAxis:()Lcom/github/mikephil/charting/components/XAxis;` @kind virtual;
  #L38ab28.  v5:= temp @kind object;
  #L38ab2a.  call temp:= `isEnabled`(v5) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.isEnabled:()Z` @kind virtual;
  #L38ab30.  v6:= temp;
  #L38ab32.  if v6 == 0 then goto L38ab50;
  #L38ab36.  call temp:= `isDrawLabelsEnabled`(v5) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawLabelsEnabled:()Z` @kind virtual;
  #L38ab3c.  v6:= temp;
  #L38ab3e.  if v6 == 0 then goto L38ab50;
  #L38ab42.  v5:= v5.`com.github.mikephil.charting.components.XAxis.mLabelRotatedWidth` @type ^`int`;
  #L38ab46.  v5:= (`float`) v5 @kind i2f;
  #L38ab48.  call temp:= `max`(v4, v5) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L38ab4e.  v4:= temp;
  #L38ab50.  call temp:= `getExtraTopOffset`(v11) @signature `Lcom/github/mikephil/charting/charts/Chart;.getExtraTopOffset:()F` @kind virtual;
  #L38ab56.  v5:= temp;
  #L38ab58.  v3:= v3 + v5 @kind float;
  #L38ab5a.  call temp:= `getExtraRightOffset`(v11) @signature `Lcom/github/mikephil/charting/charts/Chart;.getExtraRightOffset:()F` @kind virtual;
  #L38ab60.  v5:= temp;
  #L38ab62.  v0:= v0 + v5 @kind float;
  #L38ab64.  call temp:= `getExtraBottomOffset`(v11) @signature `Lcom/github/mikephil/charting/charts/Chart;.getExtraBottomOffset:()F` @kind virtual;
  #L38ab6a.  v5:= temp;
  #L38ab6c.  v2:= v2 + v5 @kind float;
  #L38ab6e.  call temp:= `getExtraLeftOffset`(v11) @signature `Lcom/github/mikephil/charting/charts/Chart;.getExtraLeftOffset:()F` @kind virtual;
  #L38ab74.  v5:= temp;
  #L38ab76.  v1:= v1 + v5 @kind float;
  #L38ab78.  call temp:= `max`(v4, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L38ab7e.  v1:= temp;
  #L38ab80.  call temp:= `max`(v4, v3) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L38ab86.  v3:= temp;
  #L38ab88.  call temp:= `max`(v4, v0) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L38ab8e.  v0:= temp;
  #L38ab90.  call temp:= `getRequiredBaseOffset`(v11) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRequiredBaseOffset:()F` @kind virtual;
  #L38ab96.  v5:= temp;
  #L38ab98.  call temp:= `max`(v5, v2) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L38ab9e.  v2:= temp;
  #L38aba0.  call temp:= `max`(v4, v2) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L38aba6.  v2:= temp;
  #L38aba8.  v4:= v11.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L38abac.  call `restrainViewPort`(v4, v1, v3, v0, v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.restrainViewPort:(FFFF)V` @kind virtual;
  #L38abb2.  v4:= v11.`com.github.mikephil.charting.charts.Chart.mLogEnabled` @type ^`boolean` @kind boolean;
  #L38abb6.  if v4 == 0 then goto L38ac16;
  #L38abba.  v4:= new `java.lang.StringBuilder`;
  #L38abbe.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L38abc4.  v5:= "offsetLeft: " @kind object;
  #L38abc8.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38abce.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L38abd4.  v1:= ", offsetTop: " @kind object;
  #L38abd8.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38abde.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L38abe4.  v1:= ", offsetRight: " @kind object;
  #L38abe8.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38abee.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L38abf4.  v0:= ", offsetBottom: " @kind object;
  #L38abf8.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38abfe.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L38ac04.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L38ac0a.  v0:= temp @kind object;
  #L38ac0c.  v1:= "MPAndroidChart" @kind object;
  #L38ac10.  call temp:= `i`(v1, v0) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L38ac16.  return @kind void;
}
procedure `void` `computeScroll`(`com.github.mikephil.charting.charts.PieRadarChartBase` v2 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.computeScroll:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38ac28.  v0:= v2.`com.github.mikephil.charting.charts.Chart.mChartTouchListener` @type ^`com.github.mikephil.charting.listener.ChartTouchListener` @kind object;
  #L38ac2c.  v1:= instanceof @variable v0 @type ^`com.github.mikephil.charting.listener.PieRadarChartTouchListener` @kind boolean;
  #L38ac30.  if v1 == 0 then goto L38ac3e;
  #L38ac34.  v0:= (`com.github.mikephil.charting.listener.PieRadarChartTouchListener`) v0 @kind object;
  #L38ac38.  call `computeScroll`(v0) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.computeScroll:()V` @kind virtual;
  #L38ac3e.  return @kind void;
}
procedure `float` `distanceToCenter`(`com.github.mikephil.charting.charts.PieRadarChartBase` v5 @kind this, `float` v6 , `float` v7 ) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.distanceToCenter:(FF)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L38a524.  call temp:= `getCenterOffsets`(v5) @signature `Lcom/github/mikephil/charting/charts/Chart;.getCenterOffsets:()Lcom/github/mikephil/charting/utils/MPPointF;` @kind virtual;
  #L38a52a.  v0:= temp @kind object;
  #L38a52c.  v1:= v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L38a530.  v2:= fcmpl(v6, v1);
  #L38a534.  if v2 <= 0 then goto L38a53c;
  #L38a538.  v6:= v6 - v1 @kind float;
  #L38a53a.  goto L38a540;
  #L38a53c.  v6:= v1 - v6 @kind float;
  #L38a540.  v1:= v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L38a544.  v2:= fcmpl(v7, v1);
  #L38a548.  if v2 <= 0 then goto L38a550;
  #L38a54c.  v7:= v7 - v1 @kind float;
  #L38a54e.  goto L38a554;
  #L38a550.  v7:= v1 - v7 @kind float;
  #L38a554.  v1:= (`double`) v6 @kind f2d;
  #L38a556.  v3:= 2.0D;
  #L38a55a.  call temp:= `pow`(v1, v3) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L38a560.  v1:= temp @kind wide;
  #L38a562.  v6:= (`double`) v7 @kind f2d;
  #L38a564.  call temp:= `pow`(v6, v3) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L38a56a.  v6:= temp @kind wide;
  #L38a56c.  v1:= v1 + v6 @kind double;
  #L38a56e.  call temp:= `sqrt`(v1) @signature `Ljava/lang/Math;.sqrt:(D)D` @kind static;
  #L38a574.  v6:= temp @kind wide;
  #L38a576.  v6:= (`float`) v6 @kind d2f;
  #L38a578.  call `recycleInstance`(v0) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointF;)V` @kind static;
  #L38a57e.  return v6;
}
procedure `float` `getAngleForPoint`(`com.github.mikephil.charting.charts.PieRadarChartBase` v7 @kind this, `float` v8 , `float` v9 ) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getAngleForPoint:(FF)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L38a590.  call temp:= `getCenterOffsets`(v7) @signature `Lcom/github/mikephil/charting/charts/Chart;.getCenterOffsets:()Lcom/github/mikephil/charting/utils/MPPointF;` @kind virtual;
  #L38a596.  v0:= temp @kind object;
  #L38a598.  v1:= v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L38a59c.  v1:= v8 - v1 @kind float;
  #L38a5a0.  v1:= (`double`) v1 @kind f2d;
  #L38a5a2.  v3:= v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L38a5a6.  v9:= v9 - v3 @kind float;
  #L38a5a8.  v3:= (`double`) v9 @kind f2d;
  #L38a5aa.  call temp:= `isNaN`(v1) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L38a5b0.  call temp:= `isNaN`(v1) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L38a5b6.  v1:= v1 * v1 @kind double;
  #L38a5ba.  call temp:= `isNaN`(v3) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L38a5c0.  call temp:= `isNaN`(v3) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L38a5c6.  v5:= v3 * v3 @kind double;
  #L38a5ca.  v1:= v1 + v5 @kind double;
  #L38a5cc.  call temp:= `sqrt`(v1) @signature `Ljava/lang/Math;.sqrt:(D)D` @kind static;
  #L38a5d2.  v1:= temp @kind wide;
  #L38a5d4.  call temp:= `isNaN`(v3) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L38a5da.  v3:= v3 / v1 @kind double;
  #L38a5dc.  call temp:= `acos`(v3) @signature `Ljava/lang/Math;.acos:(D)D` @kind static;
  #L38a5e2.  v1:= temp @kind wide;
  #L38a5e4.  call temp:= `toDegrees`(v1) @signature `Ljava/lang/Math;.toDegrees:(D)D` @kind static;
  #L38a5ea.  v1:= temp @kind wide;
  #L38a5ec.  v9:= (`float`) v1 @kind d2f;
  #L38a5ee.  v1:= v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L38a5f2.  v2:= 360.0F;
  #L38a5f6.  v8:= fcmpl(v8, v1);
  #L38a5fa.  if v8 <= 0 then goto L38a602;
  #L38a5fe.  v9:= v2 - v9 @kind float;
  #L38a602.  v8:= 90.0F;
  #L38a606.  v9:= v9 + v8 @kind float;
  #L38a608.  v8:= fcmpl(v9, v2);
  #L38a60c.  if v8 <= 0 then goto L38a612;
  #L38a610.  v9:= v9 - v2 @kind float;
  #L38a612.  call `recycleInstance`(v0) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointF;)V` @kind static;
  #L38a618.  return v9;
}
procedure `float` `getDiameter`(`com.github.mikephil.charting.charts.PieRadarChartBase` v3 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getDiameter:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L38a62c.  v0:= v3.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L38a630.  call temp:= `getContentRect`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getContentRect:()Landroid/graphics/RectF;` @kind virtual;
  #L38a636.  v0:= temp @kind object;
  #L38a638.  v1:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L38a63c.  call temp:= `getExtraLeftOffset`(v3) @signature `Lcom/github/mikephil/charting/charts/Chart;.getExtraLeftOffset:()F` @kind virtual;
  #L38a642.  v2:= temp;
  #L38a644.  v1:= v1 + v2 @kind float;
  #L38a646.  v0.`android.graphics.RectF.left` @type ^`float` := v1;
  #L38a64a.  v1:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L38a64e.  call temp:= `getExtraTopOffset`(v3) @signature `Lcom/github/mikephil/charting/charts/Chart;.getExtraTopOffset:()F` @kind virtual;
  #L38a654.  v2:= temp;
  #L38a656.  v1:= v1 + v2 @kind float;
  #L38a658.  v0.`android.graphics.RectF.top` @type ^`float` := v1;
  #L38a65c.  v1:= v0.`android.graphics.RectF.right` @type ^`float`;
  #L38a660.  call temp:= `getExtraRightOffset`(v3) @signature `Lcom/github/mikephil/charting/charts/Chart;.getExtraRightOffset:()F` @kind virtual;
  #L38a666.  v2:= temp;
  #L38a668.  v1:= v1 - v2 @kind float;
  #L38a66a.  v0.`android.graphics.RectF.right` @type ^`float` := v1;
  #L38a66e.  v1:= v0.`android.graphics.RectF.bottom` @type ^`float`;
  #L38a672.  call temp:= `getExtraBottomOffset`(v3) @signature `Lcom/github/mikephil/charting/charts/Chart;.getExtraBottomOffset:()F` @kind virtual;
  #L38a678.  v2:= temp;
  #L38a67a.  v1:= v1 - v2 @kind float;
  #L38a67c.  v0.`android.graphics.RectF.bottom` @type ^`float` := v1;
  #L38a680.  call temp:= `width`(v0) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L38a686.  v1:= temp;
  #L38a688.  call temp:= `height`(v0) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L38a68e.  v0:= temp;
  #L38a690.  call temp:= `min`(v1, v0) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L38a696.  v0:= temp;
  #L38a698.  return v0;
}
procedure `int` `getIndexForAngle`(`float` v0 ) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getIndexForAngle:(F)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getMaxVisibleCount`(`com.github.mikephil.charting.charts.PieRadarChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getMaxVisibleCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38a71c.  v0:= v1.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L38a720.  call temp:= `getEntryCount`(v0) @signature `Lcom/github/mikephil/charting/data/ChartData;.getEntryCount:()I` @kind virtual;
  #L38a726.  v0:= temp;
  #L38a728.  return v0;
}
procedure `float` `getMinOffset`(`com.github.mikephil.charting.charts.PieRadarChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getMinOffset:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38a6ac.  v0:= v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mMinOffset` @type ^`float`;
  #L38a6b0.  return v0;
}
procedure `com.github.mikephil.charting.utils.MPPointF` `getPosition`(`com.github.mikephil.charting.charts.PieRadarChartBase` v1 @kind this, `com.github.mikephil.charting.utils.MPPointF` v2 @kind object, `float` v3 , `float` v4 ) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getPosition:(Lcom/github/mikephil/charting/utils/MPPointF;FF)Lcom/github/mikephil/charting/utils/MPPointF;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38a500.  v0:= 0I;
  #L38a502.  call temp:= `getInstance`(v0, v0) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.getInstance:(FF)Lcom/github/mikephil/charting/utils/MPPointF;` @kind static;
  #L38a508.  v0:= temp @kind object;
  #L38a50a.  call `getPosition`(v1, v2, v3, v4, v0) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getPosition:(Lcom/github/mikephil/charting/utils/MPPointF;FFLcom/github/mikephil/charting/utils/MPPointF;)V` @kind virtual;
  #L38a510.  return v0 @kind object;
}
procedure `void` `getPosition`(`com.github.mikephil.charting.charts.PieRadarChartBase` v6 @kind this, `com.github.mikephil.charting.utils.MPPointF` v7 @kind object, `float` v8 , `float` v9 , `com.github.mikephil.charting.utils.MPPointF` v10 @kind object) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getPosition:(Lcom/github/mikephil/charting/utils/MPPointF;FFLcom/github/mikephil/charting/utils/MPPointF;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L38ac50.  v0:= v7.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L38ac54.  v0:= (`double`) v0 @kind f2d;
  #L38ac56.  v2:= (`double`) v8 @kind f2d;
  #L38ac58.  v8:= (`double`) v9 @kind f2d;
  #L38ac5a.  call temp:= `toRadians`(v8) @signature `Ljava/lang/Math;.toRadians:(D)D` @kind static;
  #L38ac60.  v4:= temp @kind wide;
  #L38ac62.  call temp:= `cos`(v4) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L38ac68.  v4:= temp @kind wide;
  #L38ac6a.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L38ac70.  v4:= v4 * v2 @kind double;
  #L38ac74.  call temp:= `isNaN`(v0) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L38ac7a.  v0:= v0 + v4 @kind double;
  #L38ac7c.  v0:= (`float`) v0 @kind d2f;
  #L38ac7e.  v10.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float` := v0;
  #L38ac82.  v7:= v7.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L38ac86.  v0:= (`double`) v7 @kind f2d;
  #L38ac88.  call temp:= `toRadians`(v8) @signature `Ljava/lang/Math;.toRadians:(D)D` @kind static;
  #L38ac8e.  v7:= temp @kind wide;
  #L38ac90.  call temp:= `sin`(v7) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L38ac96.  v7:= temp @kind wide;
  #L38ac98.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L38ac9e.  v2:= v2 * v7 @kind double;
  #L38aca2.  call temp:= `isNaN`(v0) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L38aca8.  v0:= v0 + v2 @kind double;
  #L38acaa.  v7:= (`float`) v0 @kind d2f;
  #L38acac.  v10.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float` := v7;
  #L38acb0.  return @kind void;
}
procedure `float` `getRadius`() @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRadius:()F` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `float` `getRawRotationAngle`(`com.github.mikephil.charting.charts.PieRadarChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRawRotationAngle:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38a6c4.  v0:= v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mRawRotationAngle` @type ^`float`;
  #L38a6c8.  return v0;
}
procedure `float` `getRequiredBaseOffset`() @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRequiredBaseOffset:()F` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `float` `getRequiredLegendOffset`() @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRequiredLegendOffset:()F` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `float` `getRotationAngle`(`com.github.mikephil.charting.charts.PieRadarChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRotationAngle:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38a6dc.  v0:= v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mRotationAngle` @type ^`float`;
  #L38a6e0.  return v0;
}
procedure `float` `getYChartMax`(`com.github.mikephil.charting.charts.PieRadarChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getYChartMax:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38a6f4.  v0:= 0I;
  #L38a6f6.  return v0;
}
procedure `float` `getYChartMin`(`com.github.mikephil.charting.charts.PieRadarChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getYChartMin:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38a708.  v0:= 0I;
  #L38a70a.  return v0;
}
procedure `void` `init`(`com.github.mikephil.charting.charts.PieRadarChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.init:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L38acc4.  call `init`(v1) @signature `Lcom/github/mikephil/charting/charts/Chart;.init:()V` @kind super;
  #L38acca.  v0:= new `com.github.mikephil.charting.listener.PieRadarChartTouchListener`;
  #L38acce.  call `<init>`(v0, v1) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.<init>:(Lcom/github/mikephil/charting/charts/PieRadarChartBase;)V` @kind direct;
  #L38acd4.  v1.`com.github.mikephil.charting.charts.Chart.mChartTouchListener` @type ^`com.github.mikephil.charting.listener.ChartTouchListener` := v0 @kind object;
  #L38acd8.  return @kind void;
}
procedure `boolean` `isRotationEnabled`(`com.github.mikephil.charting.charts.PieRadarChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.isRotationEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38a4b4.  v0:= v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mRotateEnabled` @type ^`boolean` @kind boolean;
  #L38a4b8.  return v0;
}
procedure `void` `notifyDataSetChanged`(`com.github.mikephil.charting.charts.PieRadarChartBase` v2 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.notifyDataSetChanged:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38acec.  v0:= v2.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L38acf0.  if v0 != 0 then goto L38acf6;
  #L38acf4.  return @kind void;
  #L38acf6.  call `calcMinMax`(v2) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.calcMinMax:()V` @kind virtual;
  #L38acfc.  v0:= v2.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L38ad00.  if v0 == 0 then goto L38ad12;
  #L38ad04.  v0:= v2.`com.github.mikephil.charting.charts.Chart.mLegendRenderer` @type ^`com.github.mikephil.charting.renderer.LegendRenderer` @kind object;
  #L38ad08.  v1:= v2.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L38ad0c.  call `computeLegend`(v0, v1) @signature `Lcom/github/mikephil/charting/renderer/LegendRenderer;.computeLegend:(Lcom/github/mikephil/charting/data/ChartData;)V` @kind virtual;
  #L38ad12.  call `calculateOffsets`(v2) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.calculateOffsets:()V` @kind virtual;
  #L38ad18.  return @kind void;
}
procedure `boolean` `onTouchEvent`(`com.github.mikephil.charting.charts.PieRadarChartBase` v1 @kind this, `android.view.MotionEvent` v2 @kind object) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.onTouchEvent:(Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38a4cc.  v0:= v1.`com.github.mikephil.charting.charts.Chart.mTouchEnabled` @type ^`boolean` @kind boolean;
  #L38a4d0.  if v0 == 0 then goto L38a4e6;
  #L38a4d4.  v0:= v1.`com.github.mikephil.charting.charts.Chart.mChartTouchListener` @type ^`com.github.mikephil.charting.listener.ChartTouchListener` @kind object;
  #L38a4d8.  if v0 == 0 then goto L38a4e6;
  #L38a4dc.  call temp:= `onTouch`(v0, v1, v2) @signature `Landroid/view/View$OnTouchListener;.onTouch:(Landroid/view/View;Landroid/view/MotionEvent;)Z` @kind interface;
  #L38a4e2.  v2:= temp;
  #L38a4e4.  return v2;
  #L38a4e6.  call temp:= `onTouchEvent`(v1, v2) @signature `Landroid/view/ViewGroup;.onTouchEvent:(Landroid/view/MotionEvent;)Z` @kind super;
  #L38a4ec.  v2:= temp;
  #L38a4ee.  return v2;
}
procedure `void` `setMinOffset`(`com.github.mikephil.charting.charts.PieRadarChartBase` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.setMinOffset:(F)V` @AccessFlag PUBLIC {
    temp;

  #L38ad2c.  v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mMinOffset` @type ^`float` := v1;
  #L38ad30.  return @kind void;
}
procedure `void` `setRotationAngle`(`com.github.mikephil.charting.charts.PieRadarChartBase` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.setRotationAngle:(F)V` @AccessFlag PUBLIC {
    temp;

  #L38ad44.  v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mRawRotationAngle` @type ^`float` := v1;
  #L38ad48.  call temp:= `getNormalizedAngle`(v1) @signature `Lcom/github/mikephil/charting/utils/Utils;.getNormalizedAngle:(F)F` @kind static;
  #L38ad4e.  v1:= temp;
  #L38ad50.  v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mRotationAngle` @type ^`float` := v1;
  #L38ad54.  return @kind void;
}
procedure `void` `setRotationEnabled`(`com.github.mikephil.charting.charts.PieRadarChartBase` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.setRotationEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38ad68.  v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mRotateEnabled` @type ^`boolean` := v1 @kind boolean;
  #L38ad6c.  return @kind void;
}
procedure `void` `spin`(`com.github.mikephil.charting.charts.PieRadarChartBase` v2 @kind this, `int` v3 , `float` v4 , `float` v5 , `com.github.mikephil.charting.animation.Easing$EasingFunction` v6 @kind object) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.spin:(IFFLcom/github/mikephil/charting/animation/Easing$EasingFunction;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38ad80.  call `setRotationAngle`(v2, v4) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.setRotationAngle:(F)V` @kind virtual;
  #L38ad86.  v0:= 2I;
  #L38ad88.  v0:= new `float`[v0];
  #L38ad8c.  v1:= 0I;
  #L38ad8e.  v0[v1]:= v4;
  #L38ad92.  v4:= 1I;
  #L38ad94.  v0[v4]:= v5;
  #L38ad98.  v4:= "rotationAngle" @kind object;
  #L38ad9c.  call temp:= `ofFloat`(v2, v4, v0) @signature `Landroid/animation/ObjectAnimator;.ofFloat:(Ljava/lang/Object;Ljava/lang/String;[F)Landroid/animation/ObjectAnimator;` @kind static;
  #L38ada2.  v4:= temp @kind object;
  #L38ada4.  v0:= (`long`) v3 @kind i2l;
  #L38ada6.  call temp:= `setDuration`(v4, v0) @signature `Landroid/animation/ObjectAnimator;.setDuration:(J)Landroid/animation/ObjectAnimator;` @kind virtual;
  #L38adac.  call `setInterpolator`(v4, v6) @signature `Landroid/animation/ObjectAnimator;.setInterpolator:(Landroid/animation/TimeInterpolator;)V` @kind virtual;
  #L38adb2.  v3:= new `com.github.mikephil.charting.charts.PieRadarChartBase$1`;
  #L38adb6.  call `<init>`(v3, v2) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase$1;.<init>:(Lcom/github/mikephil/charting/charts/PieRadarChartBase;)V` @kind direct;
  #L38adbc.  call `addUpdateListener`(v4, v3) @signature `Landroid/animation/ObjectAnimator;.addUpdateListener:(Landroid/animation/ValueAnimator$AnimatorUpdateListener;)V` @kind virtual;
  #L38adc2.  call `start`(v4) @signature `Landroid/animation/ObjectAnimator;.start:()V` @kind virtual;
  #L38adc8.  return @kind void;
}
