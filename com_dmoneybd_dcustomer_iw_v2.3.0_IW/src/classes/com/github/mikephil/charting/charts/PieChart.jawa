record `com.github.mikephil.charting.charts.PieChart` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.charts.PieRadarChartBase` @kind class {
  `float`[] `com.github.mikephil.charting.charts.PieChart.mAbsoluteAngles` @AccessFlag PRIVATE;
  `java.lang.CharSequence` `com.github.mikephil.charting.charts.PieChart.mCenterText` @AccessFlag PRIVATE;
  `com.github.mikephil.charting.utils.MPPointF` `com.github.mikephil.charting.charts.PieChart.mCenterTextOffset` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.charts.PieChart.mCenterTextRadiusPercent` @AccessFlag PRIVATE;
  `android.graphics.RectF` `com.github.mikephil.charting.charts.PieChart.mCircleBox` @AccessFlag PRIVATE;
  `float`[] `com.github.mikephil.charting.charts.PieChart.mDrawAngles` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.charts.PieChart.mDrawCenterText` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.charts.PieChart.mDrawEntryLabels` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.charts.PieChart.mDrawHole` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.charts.PieChart.mDrawRoundedSlices` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.charts.PieChart.mDrawSlicesUnderHole` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.charts.PieChart.mHoleRadiusPercent` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.charts.PieChart.mMaxAngle` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.charts.PieChart.mMinAngleForSlices` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.charts.PieChart.mTransparentCircleRadiusPercent` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.charts.PieChart.mUsePercentValues` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.github.mikephil.charting.charts.PieChart` v2 @kind this, `android.content.Context` v3 @kind object) @signature `Lcom/github/mikephil/charting/charts/PieChart;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L389af8.  call `<init>`(v2, v3) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L389afe.  v3:= new `android.graphics.RectF`;
  #L389b02.  call `<init>`(v3) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L389b08.  v2.`com.github.mikephil.charting.charts.PieChart.mCircleBox` @type ^`android.graphics.RectF` := v3 @kind object;
  #L389b0c.  v3:= 1I;
  #L389b0e.  v2.`com.github.mikephil.charting.charts.PieChart.mDrawEntryLabels` @type ^`boolean` := v3 @kind boolean;
  #L389b12.  v0:= new `float`[v3];
  #L389b16.  v2.`com.github.mikephil.charting.charts.PieChart.mDrawAngles` @type ^`float`[] := v0 @kind object;
  #L389b1a.  v0:= new `float`[v3];
  #L389b1e.  v2.`com.github.mikephil.charting.charts.PieChart.mAbsoluteAngles` @type ^`float`[] := v0 @kind object;
  #L389b22.  v2.`com.github.mikephil.charting.charts.PieChart.mDrawHole` @type ^`boolean` := v3 @kind boolean;
  #L389b26.  v0:= 0I;
  #L389b28.  v2.`com.github.mikephil.charting.charts.PieChart.mDrawSlicesUnderHole` @type ^`boolean` := v0 @kind boolean;
  #L389b2c.  v2.`com.github.mikephil.charting.charts.PieChart.mUsePercentValues` @type ^`boolean` := v0 @kind boolean;
  #L389b30.  v2.`com.github.mikephil.charting.charts.PieChart.mDrawRoundedSlices` @type ^`boolean` := v0 @kind boolean;
  #L389b34.  v0:= "" @kind object;
  #L389b38.  v2.`com.github.mikephil.charting.charts.PieChart.mCenterText` @type ^`java.lang.CharSequence` := v0 @kind object;
  #L389b3c.  v0:= 0I;
  #L389b3e.  call temp:= `getInstance`(v0, v0) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.getInstance:(FF)Lcom/github/mikephil/charting/utils/MPPointF;` @kind static;
  #L389b44.  v1:= temp @kind object;
  #L389b46.  v2.`com.github.mikephil.charting.charts.PieChart.mCenterTextOffset` @type ^`com.github.mikephil.charting.utils.MPPointF` := v1 @kind object;
  #L389b4a.  v1:= 50.0F;
  #L389b4e.  v2.`com.github.mikephil.charting.charts.PieChart.mHoleRadiusPercent` @type ^`float` := v1;
  #L389b52.  v1:= 55.0F;
  #L389b56.  v2.`com.github.mikephil.charting.charts.PieChart.mTransparentCircleRadiusPercent` @type ^`float` := v1;
  #L389b5a.  v2.`com.github.mikephil.charting.charts.PieChart.mDrawCenterText` @type ^`boolean` := v3 @kind boolean;
  #L389b5e.  v3:= 100.0F;
  #L389b62.  v2.`com.github.mikephil.charting.charts.PieChart.mCenterTextRadiusPercent` @type ^`float` := v3;
  #L389b66.  v3:= 360.0F;
  #L389b6a.  v2.`com.github.mikephil.charting.charts.PieChart.mMaxAngle` @type ^`float` := v3;
  #L389b6e.  v2.`com.github.mikephil.charting.charts.PieChart.mMinAngleForSlices` @type ^`float` := v0;
  #L389b72.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this, `android.content.Context` v2 @kind object, `android.util.AttributeSet` v3 @kind object) @signature `Lcom/github/mikephil/charting/charts/PieChart;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L389b84.  call `<init>`(v1, v2, v3) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L389b8a.  v2:= new `android.graphics.RectF`;
  #L389b8e.  call `<init>`(v2) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L389b94.  v1.`com.github.mikephil.charting.charts.PieChart.mCircleBox` @type ^`android.graphics.RectF` := v2 @kind object;
  #L389b98.  v2:= 1I;
  #L389b9a.  v1.`com.github.mikephil.charting.charts.PieChart.mDrawEntryLabels` @type ^`boolean` := v2 @kind boolean;
  #L389b9e.  v3:= new `float`[v2];
  #L389ba2.  v1.`com.github.mikephil.charting.charts.PieChart.mDrawAngles` @type ^`float`[] := v3 @kind object;
  #L389ba6.  v3:= new `float`[v2];
  #L389baa.  v1.`com.github.mikephil.charting.charts.PieChart.mAbsoluteAngles` @type ^`float`[] := v3 @kind object;
  #L389bae.  v1.`com.github.mikephil.charting.charts.PieChart.mDrawHole` @type ^`boolean` := v2 @kind boolean;
  #L389bb2.  v3:= 0I;
  #L389bb4.  v1.`com.github.mikephil.charting.charts.PieChart.mDrawSlicesUnderHole` @type ^`boolean` := v3 @kind boolean;
  #L389bb8.  v1.`com.github.mikephil.charting.charts.PieChart.mUsePercentValues` @type ^`boolean` := v3 @kind boolean;
  #L389bbc.  v1.`com.github.mikephil.charting.charts.PieChart.mDrawRoundedSlices` @type ^`boolean` := v3 @kind boolean;
  #L389bc0.  v3:= "" @kind object;
  #L389bc4.  v1.`com.github.mikephil.charting.charts.PieChart.mCenterText` @type ^`java.lang.CharSequence` := v3 @kind object;
  #L389bc8.  v3:= 0I;
  #L389bca.  call temp:= `getInstance`(v3, v3) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.getInstance:(FF)Lcom/github/mikephil/charting/utils/MPPointF;` @kind static;
  #L389bd0.  v0:= temp @kind object;
  #L389bd2.  v1.`com.github.mikephil.charting.charts.PieChart.mCenterTextOffset` @type ^`com.github.mikephil.charting.utils.MPPointF` := v0 @kind object;
  #L389bd6.  v0:= 50.0F;
  #L389bda.  v1.`com.github.mikephil.charting.charts.PieChart.mHoleRadiusPercent` @type ^`float` := v0;
  #L389bde.  v0:= 55.0F;
  #L389be2.  v1.`com.github.mikephil.charting.charts.PieChart.mTransparentCircleRadiusPercent` @type ^`float` := v0;
  #L389be6.  v1.`com.github.mikephil.charting.charts.PieChart.mDrawCenterText` @type ^`boolean` := v2 @kind boolean;
  #L389bea.  v2:= 100.0F;
  #L389bee.  v1.`com.github.mikephil.charting.charts.PieChart.mCenterTextRadiusPercent` @type ^`float` := v2;
  #L389bf2.  v2:= 360.0F;
  #L389bf6.  v1.`com.github.mikephil.charting.charts.PieChart.mMaxAngle` @type ^`float` := v2;
  #L389bfa.  v1.`com.github.mikephil.charting.charts.PieChart.mMinAngleForSlices` @type ^`float` := v3;
  #L389bfe.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.charts.PieChart` v0 @kind this, `android.content.Context` v1 @kind object, `android.util.AttributeSet` v2 @kind object, `int` v3 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L389c10.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L389c16.  v1:= new `android.graphics.RectF`;
  #L389c1a.  call `<init>`(v1) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L389c20.  v0.`com.github.mikephil.charting.charts.PieChart.mCircleBox` @type ^`android.graphics.RectF` := v1 @kind object;
  #L389c24.  v1:= 1I;
  #L389c26.  v0.`com.github.mikephil.charting.charts.PieChart.mDrawEntryLabels` @type ^`boolean` := v1 @kind boolean;
  #L389c2a.  v2:= new `float`[v1];
  #L389c2e.  v0.`com.github.mikephil.charting.charts.PieChart.mDrawAngles` @type ^`float`[] := v2 @kind object;
  #L389c32.  v2:= new `float`[v1];
  #L389c36.  v0.`com.github.mikephil.charting.charts.PieChart.mAbsoluteAngles` @type ^`float`[] := v2 @kind object;
  #L389c3a.  v0.`com.github.mikephil.charting.charts.PieChart.mDrawHole` @type ^`boolean` := v1 @kind boolean;
  #L389c3e.  v2:= 0I;
  #L389c40.  v0.`com.github.mikephil.charting.charts.PieChart.mDrawSlicesUnderHole` @type ^`boolean` := v2 @kind boolean;
  #L389c44.  v0.`com.github.mikephil.charting.charts.PieChart.mUsePercentValues` @type ^`boolean` := v2 @kind boolean;
  #L389c48.  v0.`com.github.mikephil.charting.charts.PieChart.mDrawRoundedSlices` @type ^`boolean` := v2 @kind boolean;
  #L389c4c.  v2:= "" @kind object;
  #L389c50.  v0.`com.github.mikephil.charting.charts.PieChart.mCenterText` @type ^`java.lang.CharSequence` := v2 @kind object;
  #L389c54.  v2:= 0I;
  #L389c56.  call temp:= `getInstance`(v2, v2) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.getInstance:(FF)Lcom/github/mikephil/charting/utils/MPPointF;` @kind static;
  #L389c5c.  v3:= temp @kind object;
  #L389c5e.  v0.`com.github.mikephil.charting.charts.PieChart.mCenterTextOffset` @type ^`com.github.mikephil.charting.utils.MPPointF` := v3 @kind object;
  #L389c62.  v3:= 50.0F;
  #L389c66.  v0.`com.github.mikephil.charting.charts.PieChart.mHoleRadiusPercent` @type ^`float` := v3;
  #L389c6a.  v3:= 55.0F;
  #L389c6e.  v0.`com.github.mikephil.charting.charts.PieChart.mTransparentCircleRadiusPercent` @type ^`float` := v3;
  #L389c72.  v0.`com.github.mikephil.charting.charts.PieChart.mDrawCenterText` @type ^`boolean` := v1 @kind boolean;
  #L389c76.  v1:= 100.0F;
  #L389c7a.  v0.`com.github.mikephil.charting.charts.PieChart.mCenterTextRadiusPercent` @type ^`float` := v1;
  #L389c7e.  v1:= 360.0F;
  #L389c82.  v0.`com.github.mikephil.charting.charts.PieChart.mMaxAngle` @type ^`float` := v1;
  #L389c86.  v0.`com.github.mikephil.charting.charts.PieChart.mMinAngleForSlices` @type ^`float` := v2;
  #L389c8a.  return @kind void;
}
procedure `float` `calcAngle`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this, `float` v2 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.calcAngle:(F)F` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3897a0.  v0:= v1.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L3897a4.  v0:= (`com.github.mikephil.charting.data.PieData`) v0 @kind object;
  #L3897a8.  call temp:= `getYValueSum`(v0) @signature `Lcom/github/mikephil/charting/data/PieData;.getYValueSum:()F` @kind virtual;
  #L3897ae.  v0:= temp;
  #L3897b0.  call temp:= `calcAngle`(v1, v2, v0) @signature `Lcom/github/mikephil/charting/charts/PieChart;.calcAngle:(FF)F` @kind direct;
  #L3897b6.  v2:= temp;
  #L3897b8.  return v2;
}
procedure `float` `calcAngle`(`com.github.mikephil.charting.charts.PieChart` v0 @kind this, `float` v1 , `float` v2 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.calcAngle:(FF)F` @AccessFlag PRIVATE {
    temp;

  #L3897cc.  v1:= v1 / v2 @kind float;
  #L3897ce.  v2:= v0.`com.github.mikephil.charting.charts.PieChart.mMaxAngle` @type ^`float`;
  #L3897d2.  v1:= v1 * v2 @kind float;
  #L3897d6.  return v1;
}
procedure `void` `calcAngles`(`com.github.mikephil.charting.charts.PieChart` v17 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieChart;.calcAngles:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L389c9c.  v0:= v17 @kind object;
  #L389ca0.  v1:= v0.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L389ca4.  v1:= (`com.github.mikephil.charting.data.PieData`) v1 @kind object;
  #L389ca8.  call temp:= `getEntryCount`(v1) @signature `Lcom/github/mikephil/charting/data/ChartData;.getEntryCount:()I` @kind virtual;
  #L389cae.  v1:= temp;
  #L389cb0.  v2:= v0.`com.github.mikephil.charting.charts.PieChart.mDrawAngles` @type ^`float`[] @kind object;
  #L389cb4.  v2:= length @variable v2;
  #L389cb6.  v3:= 0I;
  #L389cb8.  if v2 == v1 then goto L389cc6;
  #L389cbc.  v2:= new `float`[v1];
  #L389cc0.  v0.`com.github.mikephil.charting.charts.PieChart.mDrawAngles` @type ^`float`[] := v2 @kind object;
  #L389cc4.  goto L389cda;
  #L389cc6.  v2:= 0I;
  #L389cc8.  if v2 >= v1 then goto L389cda;
  #L389ccc.  v5:= v0.`com.github.mikephil.charting.charts.PieChart.mDrawAngles` @type ^`float`[] @kind object;
  #L389cd0.  v5[v2]:= v3;
  #L389cd4.  v2:= v2 + 1;
  #L389cd8.  goto L389cc8;
  #L389cda.  v2:= v0.`com.github.mikephil.charting.charts.PieChart.mAbsoluteAngles` @type ^`float`[] @kind object;
  #L389cde.  v2:= length @variable v2;
  #L389ce0.  if v2 == v1 then goto L389cee;
  #L389ce4.  v2:= new `float`[v1];
  #L389ce8.  v0.`com.github.mikephil.charting.charts.PieChart.mAbsoluteAngles` @type ^`float`[] := v2 @kind object;
  #L389cec.  goto L389d02;
  #L389cee.  v2:= 0I;
  #L389cf0.  if v2 >= v1 then goto L389d02;
  #L389cf4.  v5:= v0.`com.github.mikephil.charting.charts.PieChart.mAbsoluteAngles` @type ^`float`[] @kind object;
  #L389cf8.  v5[v2]:= v3;
  #L389cfc.  v2:= v2 + 1;
  #L389d00.  goto L389cf0;
  #L389d02.  v2:= v0.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L389d06.  v2:= (`com.github.mikephil.charting.data.PieData`) v2 @kind object;
  #L389d0a.  call temp:= `getYValueSum`(v2) @signature `Lcom/github/mikephil/charting/data/PieData;.getYValueSum:()F` @kind virtual;
  #L389d10.  v2:= temp;
  #L389d12.  v5:= v0.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L389d16.  v5:= (`com.github.mikephil.charting.data.PieData`) v5 @kind object;
  #L389d1a.  call temp:= `getDataSets`(v5) @signature `Lcom/github/mikephil/charting/data/ChartData;.getDataSets:()Ljava/util/List;` @kind virtual;
  #L389d20.  v5:= temp @kind object;
  #L389d22.  v6:= v0.`com.github.mikephil.charting.charts.PieChart.mMinAngleForSlices` @type ^`float`;
  #L389d26.  v7:= fcmpl(v6, v3);
  #L389d2a.  if v7 == 0 then goto L389d44;
  #L389d2e.  v7:= (`float`) v1 @kind i2f;
  #L389d30.  v7:= v7 * v6 @kind float;
  #L389d34.  v6:= v0.`com.github.mikephil.charting.charts.PieChart.mMaxAngle` @type ^`float`;
  #L389d38.  v6:= fcmpg(v7, v6);
  #L389d3c.  if v6 > 0 then goto L389d44;
  #L389d40.  v6:= 1I;
  #L389d42.  goto L389d46;
  #L389d44.  v6:= 0I;
  #L389d46.  v7:= new `float`[v1];
  #L389d4a.  v8:= 0I;
  #L389d4c.  v9:= 0I;
  #L389d4e.  v10:= 0I;
  #L389d50.  v11:= 0I;
  #L389d52.  v12:= v0.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L389d56.  v12:= (`com.github.mikephil.charting.data.PieData`) v12 @kind object;
  #L389d5a.  call temp:= `getDataSetCount`(v12) @signature `Lcom/github/mikephil/charting/data/ChartData;.getDataSetCount:()I` @kind virtual;
  #L389d60.  v12:= temp;
  #L389d62.  if v8 >= v12 then goto L389e04;
  #L389d66.  call temp:= `get`(v5, v8) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L389d6c.  v12:= temp @kind object;
  #L389d6e.  v12:= (`com.github.mikephil.charting.interfaces.datasets.IPieDataSet`) v12 @kind object;
  #L389d72.  v13:= 0I;
  #L389d74.  call temp:= `getEntryCount`(v12) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryCount:()I` @kind interface;
  #L389d7a.  v14:= temp;
  #L389d7c.  if v13 >= v14 then goto L389dfe;
  #L389d80.  call temp:= `getEntryForIndex`(v12, v13) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryForIndex:(I)Lcom/github/mikephil/charting/data/Entry;` @kind interface;
  #L389d86.  v14:= temp @kind object;
  #L389d88.  v14:= (`com.github.mikephil.charting.data.PieEntry`) v14 @kind object;
  #L389d8c.  call temp:= `getY`(v14) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.getY:()F` @kind virtual;
  #L389d92.  v14:= temp;
  #L389d94.  call temp:= `abs`(v14) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L389d9a.  v14:= temp;
  #L389d9c.  call temp:= `calcAngle`(v0, v14, v2) @signature `Lcom/github/mikephil/charting/charts/PieChart;.calcAngle:(FF)F` @kind direct;
  #L389da2.  v14:= temp;
  #L389da4.  if v6 == 0 then goto L389dc8;
  #L389da8.  v15:= v0.`com.github.mikephil.charting.charts.PieChart.mMinAngleForSlices` @type ^`float`;
  #L389dac.  v4:= v14 - v15 @kind float;
  #L389db0.  v16:= fcmpg(v4, v3);
  #L389db4.  if v16 > 0 then goto L389dc2;
  #L389db8.  v7[v11]:= v15;
  #L389dbc.  v4:= -v4 @kind float;
  #L389dbe.  v9:= v9 + v4 @kind float;
  #L389dc0.  goto L389dc8;
  #L389dc2.  v7[v11]:= v14;
  #L389dc6.  v10:= v10 + v4 @kind float;
  #L389dc8.  v4:= v0.`com.github.mikephil.charting.charts.PieChart.mDrawAngles` @type ^`float`[] @kind object;
  #L389dcc.  v4[v11]:= v14;
  #L389dd0.  v14:= v0.`com.github.mikephil.charting.charts.PieChart.mAbsoluteAngles` @type ^`float`[] @kind object;
  #L389dd4.  if v11 != 0 then goto L389de2;
  #L389dd8.  v4:= v4[v11];
  #L389ddc.  v14[v11]:= v4;
  #L389de0.  goto L389df4;
  #L389de2.  v15:= v11 + -1;
  #L389de6.  v15:= v14[v15];
  #L389dea.  v4:= v4[v11];
  #L389dee.  v15:= v15 + v4 @kind float;
  #L389df0.  v14[v11]:= v15;
  #L389df4.  v11:= v11 + 1;
  #L389df8.  v13:= v13 + 1;
  #L389dfc.  goto L389d74;
  #L389dfe.  v8:= v8 + 1;
  #L389e02.  goto L389d52;
  #L389e04.  if v6 == 0 then goto L389e5e;
  #L389e08.  v2:= 0I;
  #L389e0a.  if v2 >= v1 then goto L389e5a;
  #L389e0e.  v3:= v7[v2];
  #L389e12.  v4:= v7[v2];
  #L389e16.  v5:= v0.`com.github.mikephil.charting.charts.PieChart.mMinAngleForSlices` @type ^`float`;
  #L389e1a.  v4:= v4 - v5 @kind float;
  #L389e1c.  v4:= v4 / v10 @kind float;
  #L389e1e.  v4:= v4 * v9 @kind float;
  #L389e22.  v3:= v3 - v4 @kind float;
  #L389e24.  v7[v2]:= v3;
  #L389e28.  if v2 != 0 then goto L389e3c;
  #L389e2c.  v3:= v0.`com.github.mikephil.charting.charts.PieChart.mAbsoluteAngles` @type ^`float`[] @kind object;
  #L389e30.  v4:= 0I;
  #L389e32.  v5:= v7[v4];
  #L389e36.  v3[v4]:= v5;
  #L389e3a.  goto L389e54;
  #L389e3c.  v4:= 0I;
  #L389e3e.  v3:= v0.`com.github.mikephil.charting.charts.PieChart.mAbsoluteAngles` @type ^`float`[] @kind object;
  #L389e42.  v5:= v2 + -1;
  #L389e46.  v5:= v3[v5];
  #L389e4a.  v6:= v7[v2];
  #L389e4e.  v5:= v5 + v6 @kind float;
  #L389e50.  v3[v2]:= v5;
  #L389e54.  v2:= v2 + 1;
  #L389e58.  goto L389e0a;
  #L389e5a.  v0.`com.github.mikephil.charting.charts.PieChart.mDrawAngles` @type ^`float`[] := v7 @kind object;
  #L389e5e.  return @kind void;
}
procedure `void` `calcMinMax`(`com.github.mikephil.charting.charts.PieChart` v0 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieChart;.calcMinMax:()V` @AccessFlag PROTECTED {
    temp;

  #L389e70.  call `calcAngles`(v0) @signature `Lcom/github/mikephil/charting/charts/PieChart;.calcAngles:()V` @kind direct;
  #L389e76.  return @kind void;
}
procedure `void` `calculateOffsets`(`com.github.mikephil.charting.charts.PieChart` v8 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieChart;.calculateOffsets:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L389e88.  call `calculateOffsets`(v8) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.calculateOffsets:()V` @kind super;
  #L389e8e.  v0:= v8.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L389e92.  if v0 != 0 then goto L389e98;
  #L389e96.  return @kind void;
  #L389e98.  call temp:= `getDiameter`(v8) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getDiameter:()F` @kind virtual;
  #L389e9e.  v0:= temp;
  #L389ea0.  v1:= 2.0F;
  #L389ea4.  v0:= v0 / v1 @kind float;
  #L389ea6.  call temp:= `getCenterOffsets`(v8) @signature `Lcom/github/mikephil/charting/charts/Chart;.getCenterOffsets:()Lcom/github/mikephil/charting/utils/MPPointF;` @kind virtual;
  #L389eac.  v1:= temp @kind object;
  #L389eae.  v2:= v8.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L389eb2.  v2:= (`com.github.mikephil.charting.data.PieData`) v2 @kind object;
  #L389eb6.  call temp:= `getDataSet`(v2) @signature `Lcom/github/mikephil/charting/data/PieData;.getDataSet:()Lcom/github/mikephil/charting/interfaces/datasets/IPieDataSet;` @kind virtual;
  #L389ebc.  v2:= temp @kind object;
  #L389ebe.  call temp:= `getSelectionShift`(v2) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IPieDataSet;.getSelectionShift:()F` @kind interface;
  #L389ec4.  v2:= temp;
  #L389ec6.  v3:= v8.`com.github.mikephil.charting.charts.PieChart.mCircleBox` @type ^`android.graphics.RectF` @kind object;
  #L389eca.  v4:= v1.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L389ece.  v5:= v4 - v0 @kind float;
  #L389ed2.  v5:= v5 + v2 @kind float;
  #L389ed4.  v6:= v1.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L389ed8.  v7:= v6 - v0 @kind float;
  #L389edc.  v7:= v7 + v2 @kind float;
  #L389ede.  v4:= v4 + v0 @kind float;
  #L389ee0.  v4:= v4 - v2 @kind float;
  #L389ee2.  v6:= v6 + v0 @kind float;
  #L389ee4.  v6:= v6 - v2 @kind float;
  #L389ee6.  call `set`(v3, v5, v7, v4, v6) @signature `Landroid/graphics/RectF;.set:(FFFF)V` @kind virtual;
  #L389eec.  call `recycleInstance`(v1) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointF;)V` @kind static;
  #L389ef2.  return @kind void;
}
procedure `float`[] `getAbsoluteAngles`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieChart;.getAbsoluteAngles:()[F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3898e8.  v0:= v1.`com.github.mikephil.charting.charts.PieChart.mAbsoluteAngles` @type ^`float`[] @kind object;
  #L3898ec.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.utils.MPPointF` `getCenterCircleBox`(`com.github.mikephil.charting.charts.PieChart` v2 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieChart;.getCenterCircleBox:()Lcom/github/mikephil/charting/utils/MPPointF;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L389744.  v0:= v2.`com.github.mikephil.charting.charts.PieChart.mCircleBox` @type ^`android.graphics.RectF` @kind object;
  #L389748.  call temp:= `centerX`(v0) @signature `Landroid/graphics/RectF;.centerX:()F` @kind virtual;
  #L38974e.  v0:= temp;
  #L389750.  v1:= v2.`com.github.mikephil.charting.charts.PieChart.mCircleBox` @type ^`android.graphics.RectF` @kind object;
  #L389754.  call temp:= `centerY`(v1) @signature `Landroid/graphics/RectF;.centerY:()F` @kind virtual;
  #L38975a.  v1:= temp;
  #L38975c.  call temp:= `getInstance`(v0, v1) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.getInstance:(FF)Lcom/github/mikephil/charting/utils/MPPointF;` @kind static;
  #L389762.  v0:= temp @kind object;
  #L389764.  return v0 @kind object;
}
procedure `java.lang.CharSequence` `getCenterText`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieChart;.getCenterText:()Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L389ae0.  v0:= v1.`com.github.mikephil.charting.charts.PieChart.mCenterText` @type ^`java.lang.CharSequence` @kind object;
  #L389ae4.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.utils.MPPointF` `getCenterTextOffset`(`com.github.mikephil.charting.charts.PieChart` v2 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieChart;.getCenterTextOffset:()Lcom/github/mikephil/charting/utils/MPPointF;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L389778.  v0:= v2.`com.github.mikephil.charting.charts.PieChart.mCenterTextOffset` @type ^`com.github.mikephil.charting.utils.MPPointF` @kind object;
  #L38977c.  v1:= v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L389780.  v0:= v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L389784.  call temp:= `getInstance`(v1, v0) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.getInstance:(FF)Lcom/github/mikephil/charting/utils/MPPointF;` @kind static;
  #L38978a.  v0:= temp @kind object;
  #L38978c.  return v0 @kind object;
}
procedure `float` `getCenterTextRadiusPercent`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieChart;.getCenterTextRadiusPercent:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3897e8.  v0:= v1.`com.github.mikephil.charting.charts.PieChart.mCenterTextRadiusPercent` @type ^`float`;
  #L3897ec.  return v0;
}
procedure `android.graphics.RectF` `getCircleBox`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieChart;.getCircleBox:()Landroid/graphics/RectF;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L389630.  v0:= v1.`com.github.mikephil.charting.charts.PieChart.mCircleBox` @type ^`android.graphics.RectF` @kind object;
  #L389634.  return v0 @kind object;
}
procedure `int` `getDataSetIndexForIndex`(`com.github.mikephil.charting.charts.PieChart` v5 @kind this, `int` v6 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.getDataSetIndexForIndex:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L389a40.  v0:= v5.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L389a44.  v0:= (`com.github.mikephil.charting.data.PieData`) v0 @kind object;
  #L389a48.  call temp:= `getDataSets`(v0) @signature `Lcom/github/mikephil/charting/data/ChartData;.getDataSets:()Ljava/util/List;` @kind virtual;
  #L389a4e.  v0:= temp @kind object;
  #L389a50.  v1:= 0I;
  #L389a52.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L389a58.  v2:= temp;
  #L389a5a.  if v1 >= v2 then goto L389a84;
  #L389a5e.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L389a64.  v2:= temp @kind object;
  #L389a66.  v2:= (`com.github.mikephil.charting.interfaces.datasets.IPieDataSet`) v2 @kind object;
  #L389a6a.  v3:= (`float`) v6 @kind i2f;
  #L389a6c.  v4:= NaNF;
  #L389a70.  call temp:= `getEntryForXValue`(v2, v3, v4) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryForXValue:(FF)Lcom/github/mikephil/charting/data/Entry;` @kind interface;
  #L389a76.  v2:= temp @kind object;
  #L389a78.  if v2 == 0 then goto L389a7e;
  #L389a7c.  return v1;
  #L389a7e.  v1:= v1 + 1;
  #L389a82.  goto L389a52;
  #L389a84.  v6:= -1I;
  #L389a86.  return v6;
}
procedure `float`[] `getDrawAngles`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieChart;.getDrawAngles:()[F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L389900.  v0:= v1.`com.github.mikephil.charting.charts.PieChart.mDrawAngles` @type ^`float`[] @kind object;
  #L389904.  return v0 @kind object;
}
procedure `float` `getHoleRadius`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieChart;.getHoleRadius:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L389800.  v0:= v1.`com.github.mikephil.charting.charts.PieChart.mHoleRadiusPercent` @type ^`float`;
  #L389804.  return v0;
}
procedure `int` `getIndexForAngle`(`com.github.mikephil.charting.charts.PieChart` v3 @kind this, `float` v4 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.getIndexForAngle:(F)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L389a98.  call temp:= `getRotationAngle`(v3) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRotationAngle:()F` @kind virtual;
  #L389a9e.  v0:= temp;
  #L389aa0.  v4:= v4 - v0 @kind float;
  #L389aa2.  call temp:= `getNormalizedAngle`(v4) @signature `Lcom/github/mikephil/charting/utils/Utils;.getNormalizedAngle:(F)F` @kind static;
  #L389aa8.  v4:= temp;
  #L389aaa.  v0:= 0I;
  #L389aac.  v1:= v3.`com.github.mikephil.charting.charts.PieChart.mAbsoluteAngles` @type ^`float`[] @kind object;
  #L389ab0.  v2:= length @variable v1;
  #L389ab2.  if v0 >= v2 then goto L389aca;
  #L389ab6.  v1:= v1[v0];
  #L389aba.  v1:= fcmpl(v1, v4);
  #L389abe.  if v1 <= 0 then goto L389ac4;
  #L389ac2.  return v0;
  #L389ac4.  v0:= v0 + 1;
  #L389ac8.  goto L389aac;
  #L389aca.  v4:= -1I;
  #L389acc.  return v4;
}
procedure `float`[] `getMarkerPosition`(`com.github.mikephil.charting.charts.PieChart` v10 @kind this, `com.github.mikephil.charting.highlight.Highlight` v11 @kind object) @signature `Lcom/github/mikephil/charting/charts/PieChart;.getMarkerPosition:(Lcom/github/mikephil/charting/highlight/Highlight;)[F` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L389918.  call temp:= `getCenterCircleBox`(v10) @signature `Lcom/github/mikephil/charting/charts/PieChart;.getCenterCircleBox:()Lcom/github/mikephil/charting/utils/MPPointF;` @kind virtual;
  #L38991e.  v0:= temp @kind object;
  #L389920.  call temp:= `getRadius`(v10) @signature `Lcom/github/mikephil/charting/charts/PieChart;.getRadius:()F` @kind virtual;
  #L389926.  v1:= temp;
  #L389928.  v2:= 10.0F;
  #L38992c.  v2:= v1 / v2 @kind float;
  #L389930.  v3:= 1080452710I;
  #L389936.  v2:= v2 * v3 @kind float;
  #L38993a.  call temp:= `isDrawHoleEnabled`(v10) @signature `Lcom/github/mikephil/charting/charts/PieChart;.isDrawHoleEnabled:()Z` @kind virtual;
  #L389940.  v3:= temp;
  #L389942.  v4:= 2.0F;
  #L389946.  if v3 == 0 then goto L389964;
  #L38994a.  v2:= 100.0F;
  #L38994e.  v2:= v1 / v2 @kind float;
  #L389952.  call temp:= `getHoleRadius`(v10) @signature `Lcom/github/mikephil/charting/charts/PieChart;.getHoleRadius:()F` @kind virtual;
  #L389958.  v3:= temp;
  #L38995a.  v2:= v2 * v3 @kind float;
  #L38995e.  v2:= v1 - v2 @kind float;
  #L389962.  v2:= v2 / v4 @kind float;
  #L389964.  v1:= v1 - v2 @kind float;
  #L389966.  call temp:= `getRotationAngle`(v10) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRotationAngle:()F` @kind virtual;
  #L38996c.  v2:= temp;
  #L38996e.  call temp:= `getX`(v11) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.getX:()F` @kind virtual;
  #L389974.  v11:= temp;
  #L389976.  v11:= (`int`) v11 @kind f2i;
  #L389978.  v3:= v10.`com.github.mikephil.charting.charts.PieChart.mDrawAngles` @type ^`float`[] @kind object;
  #L38997c.  v3:= v3[v11];
  #L389980.  v3:= v3 / v4 @kind float;
  #L389982.  v4:= (`double`) v1 @kind f2d;
  #L389984.  v1:= v10.`com.github.mikephil.charting.charts.PieChart.mAbsoluteAngles` @type ^`float`[] @kind object;
  #L389988.  v1:= v1[v11];
  #L38998c.  v1:= v1 + v2 @kind float;
  #L38998e.  v1:= v1 - v3 @kind float;
  #L389990.  v6:= v10.`com.github.mikephil.charting.charts.Chart.mAnimator` @type ^`com.github.mikephil.charting.animation.ChartAnimator` @kind object;
  #L389994.  call temp:= `getPhaseY`(v6) @signature `Lcom/github/mikephil/charting/animation/ChartAnimator;.getPhaseY:()F` @kind virtual;
  #L38999a.  v6:= temp;
  #L38999c.  v1:= v1 * v6 @kind float;
  #L3899a0.  v6:= (`double`) v1 @kind f2d;
  #L3899a2.  call temp:= `toRadians`(v6) @signature `Ljava/lang/Math;.toRadians:(D)D` @kind static;
  #L3899a8.  v6:= temp @kind wide;
  #L3899aa.  call temp:= `cos`(v6) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L3899b0.  v6:= temp @kind wide;
  #L3899b2.  call temp:= `isNaN`(v4) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L3899b8.  v6:= v6 * v4 @kind double;
  #L3899bc.  v1:= v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L3899c0.  v8:= (`double`) v1 @kind f2d;
  #L3899c2.  call temp:= `isNaN`(v8) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L3899c8.  v6:= v6 + v8 @kind double;
  #L3899ca.  v1:= (`float`) v6 @kind d2f;
  #L3899cc.  v6:= v10.`com.github.mikephil.charting.charts.PieChart.mAbsoluteAngles` @type ^`float`[] @kind object;
  #L3899d0.  v11:= v6[v11];
  #L3899d4.  v2:= v2 + v11 @kind float;
  #L3899d6.  v2:= v2 - v3 @kind float;
  #L3899d8.  v11:= v10.`com.github.mikephil.charting.charts.Chart.mAnimator` @type ^`com.github.mikephil.charting.animation.ChartAnimator` @kind object;
  #L3899dc.  call temp:= `getPhaseY`(v11) @signature `Lcom/github/mikephil/charting/animation/ChartAnimator;.getPhaseY:()F` @kind virtual;
  #L3899e2.  v11:= temp;
  #L3899e4.  v2:= v2 * v11 @kind float;
  #L3899e8.  v2:= (`double`) v2 @kind f2d;
  #L3899ea.  call temp:= `toRadians`(v2) @signature `Ljava/lang/Math;.toRadians:(D)D` @kind static;
  #L3899f0.  v2:= temp @kind wide;
  #L3899f2.  call temp:= `sin`(v2) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L3899f8.  v2:= temp @kind wide;
  #L3899fa.  call temp:= `isNaN`(v4) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L389a00.  v4:= v4 * v2 @kind double;
  #L389a04.  v11:= v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L389a08.  v2:= (`double`) v11 @kind f2d;
  #L389a0a.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L389a10.  v4:= v4 + v2 @kind double;
  #L389a12.  v11:= (`float`) v4 @kind d2f;
  #L389a14.  call `recycleInstance`(v0) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointF;)V` @kind static;
  #L389a1a.  v0:= 2I;
  #L389a1c.  v0:= new `float`[v0];
  #L389a20.  v2:= 0I;
  #L389a22.  v0[v2]:= v1;
  #L389a26.  v1:= 1I;
  #L389a28.  v0[v1]:= v11;
  #L389a2c.  return v0 @kind object;
}
procedure `float` `getMaxAngle`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieChart;.getMaxAngle:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L389818.  v0:= v1.`com.github.mikephil.charting.charts.PieChart.mMaxAngle` @type ^`float`;
  #L38981c.  return v0;
}
procedure `float` `getMinAngleForSlices`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieChart;.getMinAngleForSlices:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L389830.  v0:= v1.`com.github.mikephil.charting.charts.PieChart.mMinAngleForSlices` @type ^`float`;
  #L389834.  return v0;
}
procedure `float` `getRadius`(`com.github.mikephil.charting.charts.PieChart` v3 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieChart;.getRadius:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L389848.  v0:= v3.`com.github.mikephil.charting.charts.PieChart.mCircleBox` @type ^`android.graphics.RectF` @kind object;
  #L38984c.  if v0 != 0 then goto L389854;
  #L389850.  v0:= 0I;
  #L389852.  return v0;
  #L389854.  call temp:= `width`(v0) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L38985a.  v0:= temp;
  #L38985c.  v1:= 2.0F;
  #L389860.  v0:= v0 / v1 @kind float;
  #L389862.  v2:= v3.`com.github.mikephil.charting.charts.PieChart.mCircleBox` @type ^`android.graphics.RectF` @kind object;
  #L389866.  call temp:= `height`(v2) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L38986c.  v2:= temp;
  #L38986e.  v2:= v2 / v1 @kind float;
  #L389870.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L389876.  v0:= temp;
  #L389878.  return v0;
}
procedure `float` `getRequiredBaseOffset`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieChart;.getRequiredBaseOffset:()F` @AccessFlag PROTECTED {
    temp;
    v0;

  #L38988c.  v0:= 0I;
  #L38988e.  return v0;
}
procedure `float` `getRequiredLegendOffset`(`com.github.mikephil.charting.charts.PieChart` v2 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieChart;.getRequiredLegendOffset:()F` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3898a0.  v0:= v2.`com.github.mikephil.charting.charts.Chart.mLegendRenderer` @type ^`com.github.mikephil.charting.renderer.LegendRenderer` @kind object;
  #L3898a4.  call temp:= `getLabelPaint`(v0) @signature `Lcom/github/mikephil/charting/renderer/LegendRenderer;.getLabelPaint:()Landroid/graphics/Paint;` @kind virtual;
  #L3898aa.  v0:= temp @kind object;
  #L3898ac.  call temp:= `getTextSize`(v0) @signature `Landroid/graphics/Paint;.getTextSize:()F` @kind virtual;
  #L3898b2.  v0:= temp;
  #L3898b4.  v1:= 2.0F;
  #L3898b8.  v0:= v0 * v1 @kind float;
  #L3898bc.  return v0;
}
procedure `float` `getTransparentCircleRadius`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieChart;.getTransparentCircleRadius:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3898d0.  v0:= v1.`com.github.mikephil.charting.charts.PieChart.mTransparentCircleRadiusPercent` @type ^`float`;
  #L3898d4.  return v0;
}
procedure `com.github.mikephil.charting.components.XAxis` `getXAxis`(`com.github.mikephil.charting.charts.PieChart` v2 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieChart;.getXAxis:()Lcom/github/mikephil/charting/components/XAxis;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L389724.  v0:= new `java.lang.RuntimeException`;
  #L389728.  v1:= "PieChart has no XAxis" @kind object;
  #L38972c.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L389732.  throw v0;
}
procedure `void` `init`(`com.github.mikephil.charting.charts.PieChart` v3 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieChart;.init:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L389f04.  call `init`(v3) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.init:()V` @kind super;
  #L389f0a.  v0:= new `com.github.mikephil.charting.renderer.PieChartRenderer`;
  #L389f0e.  v1:= v3.`com.github.mikephil.charting.charts.Chart.mAnimator` @type ^`com.github.mikephil.charting.animation.ChartAnimator` @kind object;
  #L389f12.  v2:= v3.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L389f16.  call `<init>`(v0, v3, v1, v2) @signature `Lcom/github/mikephil/charting/renderer/PieChartRenderer;.<init>:(Lcom/github/mikephil/charting/charts/PieChart;Lcom/github/mikephil/charting/animation/ChartAnimator;Lcom/github/mikephil/charting/utils/ViewPortHandler;)V` @kind direct;
  #L389f1c.  v3.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` := v0 @kind object;
  #L389f20.  v0:= 0I;
  #L389f22.  v3.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` := v0 @kind object;
  #L389f26.  v0:= new `com.github.mikephil.charting.highlight.PieHighlighter`;
  #L389f2a.  call `<init>`(v0, v3) @signature `Lcom/github/mikephil/charting/highlight/PieHighlighter;.<init>:(Lcom/github/mikephil/charting/charts/PieChart;)V` @kind direct;
  #L389f30.  v3.`com.github.mikephil.charting.charts.Chart.mHighlighter` @type ^`com.github.mikephil.charting.highlight.IHighlighter` := v0 @kind object;
  #L389f34.  return @kind void;
}
procedure `boolean` `isDrawCenterTextEnabled`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieChart;.isDrawCenterTextEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L389648.  v0:= v1.`com.github.mikephil.charting.charts.PieChart.mDrawCenterText` @type ^`boolean` @kind boolean;
  #L38964c.  return v0;
}
procedure `boolean` `isDrawEntryLabelsEnabled`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieChart;.isDrawEntryLabelsEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L389660.  v0:= v1.`com.github.mikephil.charting.charts.PieChart.mDrawEntryLabels` @type ^`boolean` @kind boolean;
  #L389664.  return v0;
}
procedure `boolean` `isDrawHoleEnabled`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieChart;.isDrawHoleEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L389678.  v0:= v1.`com.github.mikephil.charting.charts.PieChart.mDrawHole` @type ^`boolean` @kind boolean;
  #L38967c.  return v0;
}
procedure `boolean` `isDrawRoundedSlicesEnabled`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieChart;.isDrawRoundedSlicesEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L389690.  v0:= v1.`com.github.mikephil.charting.charts.PieChart.mDrawRoundedSlices` @type ^`boolean` @kind boolean;
  #L389694.  return v0;
}
procedure `boolean` `isDrawSlicesUnderHoleEnabled`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieChart;.isDrawSlicesUnderHoleEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3896a8.  v0:= v1.`com.github.mikephil.charting.charts.PieChart.mDrawSlicesUnderHole` @type ^`boolean` @kind boolean;
  #L3896ac.  return v0;
}
procedure `boolean` `isUsePercentValuesEnabled`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieChart;.isUsePercentValuesEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3896c0.  v0:= v1.`com.github.mikephil.charting.charts.PieChart.mUsePercentValues` @type ^`boolean` @kind boolean;
  #L3896c4.  return v0;
}
procedure `boolean` `needsHighlight`(`com.github.mikephil.charting.charts.PieChart` v4 @kind this, `int` v5 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.needsHighlight:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3896d8.  call temp:= `valuesToHighlight`(v4) @signature `Lcom/github/mikephil/charting/charts/Chart;.valuesToHighlight:()Z` @kind virtual;
  #L3896de.  v0:= temp;
  #L3896e0.  v1:= 0I;
  #L3896e2.  if v0 != 0 then goto L3896e8;
  #L3896e6.  return v1;
  #L3896e8.  v0:= 0I;
  #L3896ea.  v2:= v4.`com.github.mikephil.charting.charts.Chart.mIndicesToHighlight` @type ^`com.github.mikephil.charting.highlight.Highlight`[] @kind object;
  #L3896ee.  v3:= length @variable v2;
  #L3896f0.  if v0 >= v3 then goto L389710;
  #L3896f4.  v2:= v2[v0] @kind object;
  #L3896f8.  call temp:= `getX`(v2) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.getX:()F` @kind virtual;
  #L3896fe.  v2:= temp;
  #L389700.  v2:= (`int`) v2 @kind f2i;
  #L389702.  if v2 != v5 then goto L38970a;
  #L389706.  v5:= 1I;
  #L389708.  return v5;
  #L38970a.  v0:= v0 + 1;
  #L38970e.  goto L3896ea;
  #L389710.  return v1;
}
procedure `void` `onDetachedFromWindow`(`com.github.mikephil.charting.charts.PieChart` v2 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieChart;.onDetachedFromWindow:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L389f48.  v0:= v2.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L389f4c.  if v0 == 0 then goto L389f62;
  #L389f50.  v1:= instanceof @variable v0 @type ^`com.github.mikephil.charting.renderer.PieChartRenderer` @kind boolean;
  #L389f54.  if v1 == 0 then goto L389f62;
  #L389f58.  v0:= (`com.github.mikephil.charting.renderer.PieChartRenderer`) v0 @kind object;
  #L389f5c.  call `releaseBitmap`(v0) @signature `Lcom/github/mikephil/charting/renderer/PieChartRenderer;.releaseBitmap:()V` @kind virtual;
  #L389f62.  call `onDetachedFromWindow`(v2) @signature `Lcom/github/mikephil/charting/charts/Chart;.onDetachedFromWindow:()V` @kind super;
  #L389f68.  return @kind void;
}
procedure `void` `onDraw`(`com.github.mikephil.charting.charts.PieChart` v2 @kind this, `android.graphics.Canvas` v3 @kind object) @signature `Lcom/github/mikephil/charting/charts/PieChart;.onDraw:(Landroid/graphics/Canvas;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L389f7c.  call `onDraw`(v2, v3) @signature `Lcom/github/mikephil/charting/charts/Chart;.onDraw:(Landroid/graphics/Canvas;)V` @kind super;
  #L389f82.  v0:= v2.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L389f86.  if v0 != 0 then goto L389f8c;
  #L389f8a.  return @kind void;
  #L389f8c.  v0:= v2.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L389f90.  call `drawData`(v0, v3) @signature `Lcom/github/mikephil/charting/renderer/DataRenderer;.drawData:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L389f96.  call temp:= `valuesToHighlight`(v2) @signature `Lcom/github/mikephil/charting/charts/Chart;.valuesToHighlight:()Z` @kind virtual;
  #L389f9c.  v0:= temp;
  #L389f9e.  if v0 == 0 then goto L389fb0;
  #L389fa2.  v0:= v2.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L389fa6.  v1:= v2.`com.github.mikephil.charting.charts.Chart.mIndicesToHighlight` @type ^`com.github.mikephil.charting.highlight.Highlight`[] @kind object;
  #L389faa.  call `drawHighlighted`(v0, v3, v1) @signature `Lcom/github/mikephil/charting/renderer/DataRenderer;.drawHighlighted:(Landroid/graphics/Canvas;[Lcom/github/mikephil/charting/highlight/Highlight;)V` @kind virtual;
  #L389fb0.  v0:= v2.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L389fb4.  call `drawExtras`(v0, v3) @signature `Lcom/github/mikephil/charting/renderer/DataRenderer;.drawExtras:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L389fba.  v0:= v2.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L389fbe.  call `drawValues`(v0, v3) @signature `Lcom/github/mikephil/charting/renderer/DataRenderer;.drawValues:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L389fc4.  v0:= v2.`com.github.mikephil.charting.charts.Chart.mLegendRenderer` @type ^`com.github.mikephil.charting.renderer.LegendRenderer` @kind object;
  #L389fc8.  call `renderLegend`(v0, v3) @signature `Lcom/github/mikephil/charting/renderer/LegendRenderer;.renderLegend:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L389fce.  call `drawDescription`(v2, v3) @signature `Lcom/github/mikephil/charting/charts/Chart;.drawDescription:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L389fd4.  call `drawMarkers`(v2, v3) @signature `Lcom/github/mikephil/charting/charts/Chart;.drawMarkers:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L389fda.  return @kind void;
}
procedure `void` `setCenterText`(`com.github.mikephil.charting.charts.PieChart` v0 @kind this, `java.lang.CharSequence` v1 @kind object) @signature `Lcom/github/mikephil/charting/charts/PieChart;.setCenterText:(Ljava/lang/CharSequence;)V` @AccessFlag PUBLIC {
    temp;

  #L389fec.  if v1 != 0 then goto L389ff4;
  #L389ff0.  v1:= "" @kind object;
  #L389ff4.  v0.`com.github.mikephil.charting.charts.PieChart.mCenterText` @type ^`java.lang.CharSequence` := v1 @kind object;
  #L389ff8.  return @kind void;
}
procedure `void` `setCenterTextColor`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this, `int` v2 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.setCenterTextColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38a00c.  v0:= v1.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L38a010.  v0:= (`com.github.mikephil.charting.renderer.PieChartRenderer`) v0 @kind object;
  #L38a014.  call temp:= `getPaintCenterText`(v0) @signature `Lcom/github/mikephil/charting/renderer/PieChartRenderer;.getPaintCenterText:()Landroid/text/TextPaint;` @kind virtual;
  #L38a01a.  v0:= temp @kind object;
  #L38a01c.  call `setColor`(v0, v2) @signature `Landroid/text/TextPaint;.setColor:(I)V` @kind virtual;
  #L38a022.  return @kind void;
}
procedure `void` `setCenterTextOffset`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this, `float` v2 , `float` v3 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.setCenterTextOffset:(FF)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38a034.  v0:= v1.`com.github.mikephil.charting.charts.PieChart.mCenterTextOffset` @type ^`com.github.mikephil.charting.utils.MPPointF` @kind object;
  #L38a038.  call temp:= `convertDpToPixel`(v2) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L38a03e.  v2:= temp;
  #L38a040.  v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float` := v2;
  #L38a044.  v2:= v1.`com.github.mikephil.charting.charts.PieChart.mCenterTextOffset` @type ^`com.github.mikephil.charting.utils.MPPointF` @kind object;
  #L38a048.  call temp:= `convertDpToPixel`(v3) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L38a04e.  v3:= temp;
  #L38a050.  v2.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float` := v3;
  #L38a054.  return @kind void;
}
procedure `void` `setCenterTextRadiusPercent`(`com.github.mikephil.charting.charts.PieChart` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.setCenterTextRadiusPercent:(F)V` @AccessFlag PUBLIC {
    temp;

  #L38a068.  v0.`com.github.mikephil.charting.charts.PieChart.mCenterTextRadiusPercent` @type ^`float` := v1;
  #L38a06c.  return @kind void;
}
procedure `void` `setCenterTextSize`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this, `float` v2 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.setCenterTextSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38a080.  v0:= v1.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L38a084.  v0:= (`com.github.mikephil.charting.renderer.PieChartRenderer`) v0 @kind object;
  #L38a088.  call temp:= `getPaintCenterText`(v0) @signature `Lcom/github/mikephil/charting/renderer/PieChartRenderer;.getPaintCenterText:()Landroid/text/TextPaint;` @kind virtual;
  #L38a08e.  v0:= temp @kind object;
  #L38a090.  call temp:= `convertDpToPixel`(v2) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L38a096.  v2:= temp;
  #L38a098.  call `setTextSize`(v0, v2) @signature `Landroid/text/TextPaint;.setTextSize:(F)V` @kind virtual;
  #L38a09e.  return @kind void;
}
procedure `void` `setCenterTextSizePixels`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this, `float` v2 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.setCenterTextSizePixels:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38a0b0.  v0:= v1.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L38a0b4.  v0:= (`com.github.mikephil.charting.renderer.PieChartRenderer`) v0 @kind object;
  #L38a0b8.  call temp:= `getPaintCenterText`(v0) @signature `Lcom/github/mikephil/charting/renderer/PieChartRenderer;.getPaintCenterText:()Landroid/text/TextPaint;` @kind virtual;
  #L38a0be.  v0:= temp @kind object;
  #L38a0c0.  call `setTextSize`(v0, v2) @signature `Landroid/text/TextPaint;.setTextSize:(F)V` @kind virtual;
  #L38a0c6.  return @kind void;
}
procedure `void` `setCenterTextTypeface`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this, `android.graphics.Typeface` v2 @kind object) @signature `Lcom/github/mikephil/charting/charts/PieChart;.setCenterTextTypeface:(Landroid/graphics/Typeface;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38a0d8.  v0:= v1.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L38a0dc.  v0:= (`com.github.mikephil.charting.renderer.PieChartRenderer`) v0 @kind object;
  #L38a0e0.  call temp:= `getPaintCenterText`(v0) @signature `Lcom/github/mikephil/charting/renderer/PieChartRenderer;.getPaintCenterText:()Landroid/text/TextPaint;` @kind virtual;
  #L38a0e6.  v0:= temp @kind object;
  #L38a0e8.  call temp:= `setTypeface`(v0, v2) @signature `Landroid/text/TextPaint;.setTypeface:(Landroid/graphics/Typeface;)Landroid/graphics/Typeface;` @kind virtual;
  #L38a0ee.  return @kind void;
}
procedure `void` `setDrawCenterText`(`com.github.mikephil.charting.charts.PieChart` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.setDrawCenterText:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38a100.  v0.`com.github.mikephil.charting.charts.PieChart.mDrawCenterText` @type ^`boolean` := v1 @kind boolean;
  #L38a104.  return @kind void;
}
procedure `void` `setDrawEntryLabels`(`com.github.mikephil.charting.charts.PieChart` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.setDrawEntryLabels:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38a118.  v0.`com.github.mikephil.charting.charts.PieChart.mDrawEntryLabels` @type ^`boolean` := v1 @kind boolean;
  #L38a11c.  return @kind void;
}
procedure `void` `setDrawHoleEnabled`(`com.github.mikephil.charting.charts.PieChart` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.setDrawHoleEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38a130.  v0.`com.github.mikephil.charting.charts.PieChart.mDrawHole` @type ^`boolean` := v1 @kind boolean;
  #L38a134.  return @kind void;
}
procedure `void` `setDrawRoundedSlices`(`com.github.mikephil.charting.charts.PieChart` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.setDrawRoundedSlices:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38a148.  v0.`com.github.mikephil.charting.charts.PieChart.mDrawRoundedSlices` @type ^`boolean` := v1 @kind boolean;
  #L38a14c.  return @kind void;
}
procedure `void` `setDrawSliceText`(`com.github.mikephil.charting.charts.PieChart` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.setDrawSliceText:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38a160.  v0.`com.github.mikephil.charting.charts.PieChart.mDrawEntryLabels` @type ^`boolean` := v1 @kind boolean;
  #L38a164.  return @kind void;
}
procedure `void` `setDrawSlicesUnderHole`(`com.github.mikephil.charting.charts.PieChart` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.setDrawSlicesUnderHole:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38a178.  v0.`com.github.mikephil.charting.charts.PieChart.mDrawSlicesUnderHole` @type ^`boolean` := v1 @kind boolean;
  #L38a17c.  return @kind void;
}
procedure `void` `setEntryLabelColor`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this, `int` v2 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.setEntryLabelColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38a190.  v0:= v1.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L38a194.  v0:= (`com.github.mikephil.charting.renderer.PieChartRenderer`) v0 @kind object;
  #L38a198.  call temp:= `getPaintEntryLabels`(v0) @signature `Lcom/github/mikephil/charting/renderer/PieChartRenderer;.getPaintEntryLabels:()Landroid/graphics/Paint;` @kind virtual;
  #L38a19e.  v0:= temp @kind object;
  #L38a1a0.  call `setColor`(v0, v2) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L38a1a6.  return @kind void;
}
procedure `void` `setEntryLabelTextSize`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this, `float` v2 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.setEntryLabelTextSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38a1b8.  v0:= v1.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L38a1bc.  v0:= (`com.github.mikephil.charting.renderer.PieChartRenderer`) v0 @kind object;
  #L38a1c0.  call temp:= `getPaintEntryLabels`(v0) @signature `Lcom/github/mikephil/charting/renderer/PieChartRenderer;.getPaintEntryLabels:()Landroid/graphics/Paint;` @kind virtual;
  #L38a1c6.  v0:= temp @kind object;
  #L38a1c8.  call temp:= `convertDpToPixel`(v2) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L38a1ce.  v2:= temp;
  #L38a1d0.  call `setTextSize`(v0, v2) @signature `Landroid/graphics/Paint;.setTextSize:(F)V` @kind virtual;
  #L38a1d6.  return @kind void;
}
procedure `void` `setEntryLabelTypeface`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this, `android.graphics.Typeface` v2 @kind object) @signature `Lcom/github/mikephil/charting/charts/PieChart;.setEntryLabelTypeface:(Landroid/graphics/Typeface;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38a1e8.  v0:= v1.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L38a1ec.  v0:= (`com.github.mikephil.charting.renderer.PieChartRenderer`) v0 @kind object;
  #L38a1f0.  call temp:= `getPaintEntryLabels`(v0) @signature `Lcom/github/mikephil/charting/renderer/PieChartRenderer;.getPaintEntryLabels:()Landroid/graphics/Paint;` @kind virtual;
  #L38a1f6.  v0:= temp @kind object;
  #L38a1f8.  call temp:= `setTypeface`(v0, v2) @signature `Landroid/graphics/Paint;.setTypeface:(Landroid/graphics/Typeface;)Landroid/graphics/Typeface;` @kind virtual;
  #L38a1fe.  return @kind void;
}
procedure `void` `setHoleColor`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this, `int` v2 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.setHoleColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38a210.  v0:= v1.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L38a214.  v0:= (`com.github.mikephil.charting.renderer.PieChartRenderer`) v0 @kind object;
  #L38a218.  call temp:= `getPaintHole`(v0) @signature `Lcom/github/mikephil/charting/renderer/PieChartRenderer;.getPaintHole:()Landroid/graphics/Paint;` @kind virtual;
  #L38a21e.  v0:= temp @kind object;
  #L38a220.  call `setColor`(v0, v2) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L38a226.  return @kind void;
}
procedure `void` `setHoleRadius`(`com.github.mikephil.charting.charts.PieChart` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.setHoleRadius:(F)V` @AccessFlag PUBLIC {
    temp;

  #L38a238.  v0.`com.github.mikephil.charting.charts.PieChart.mHoleRadiusPercent` @type ^`float` := v1;
  #L38a23c.  return @kind void;
}
procedure `void` `setMaxAngle`(`com.github.mikephil.charting.charts.PieChart` v2 @kind this, `float` v3 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.setMaxAngle:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38a250.  v0:= 360.0F;
  #L38a254.  v1:= fcmpl(v3, v0);
  #L38a258.  if v1 <= 0 then goto L38a260;
  #L38a25c.  v3:= 360.0F;
  #L38a260.  v0:= 90.0F;
  #L38a264.  v1:= fcmpg(v3, v0);
  #L38a268.  if v1 >= 0 then goto L38a270;
  #L38a26c.  v3:= 90.0F;
  #L38a270.  v2.`com.github.mikephil.charting.charts.PieChart.mMaxAngle` @type ^`float` := v3;
  #L38a274.  return @kind void;
}
procedure `void` `setMinAngleForSlices`(`com.github.mikephil.charting.charts.PieChart` v4 @kind this, `float` v5 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.setMinAngleForSlices:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L38a288.  v0:= v4.`com.github.mikephil.charting.charts.PieChart.mMaxAngle` @type ^`float`;
  #L38a28c.  v1:= 2.0F;
  #L38a290.  v2:= v0 / v1 @kind float;
  #L38a294.  v3:= 0I;
  #L38a296.  v2:= fcmpl(v5, v2);
  #L38a29a.  if v2 <= 0 then goto L38a2a4;
  #L38a29e.  v5:= v0 / v1 @kind float;
  #L38a2a2.  goto L38a2ae;
  #L38a2a4.  v0:= fcmpg(v5, v3);
  #L38a2a8.  if v0 >= 0 then goto L38a2ae;
  #L38a2ac.  v5:= 0I;
  #L38a2ae.  v4.`com.github.mikephil.charting.charts.PieChart.mMinAngleForSlices` @type ^`float` := v5;
  #L38a2b2.  return @kind void;
}
procedure `void` `setTransparentCircleAlpha`(`com.github.mikephil.charting.charts.PieChart` v1 @kind this, `int` v2 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.setTransparentCircleAlpha:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38a2c4.  v0:= v1.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L38a2c8.  v0:= (`com.github.mikephil.charting.renderer.PieChartRenderer`) v0 @kind object;
  #L38a2cc.  call temp:= `getPaintTransparentCircle`(v0) @signature `Lcom/github/mikephil/charting/renderer/PieChartRenderer;.getPaintTransparentCircle:()Landroid/graphics/Paint;` @kind virtual;
  #L38a2d2.  v0:= temp @kind object;
  #L38a2d4.  call `setAlpha`(v0, v2) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L38a2da.  return @kind void;
}
procedure `void` `setTransparentCircleColor`(`com.github.mikephil.charting.charts.PieChart` v2 @kind this, `int` v3 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.setTransparentCircleColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38a2ec.  v0:= v2.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L38a2f0.  v0:= (`com.github.mikephil.charting.renderer.PieChartRenderer`) v0 @kind object;
  #L38a2f4.  call temp:= `getPaintTransparentCircle`(v0) @signature `Lcom/github/mikephil/charting/renderer/PieChartRenderer;.getPaintTransparentCircle:()Landroid/graphics/Paint;` @kind virtual;
  #L38a2fa.  v0:= temp @kind object;
  #L38a2fc.  call temp:= `getAlpha`(v0) @signature `Landroid/graphics/Paint;.getAlpha:()I` @kind virtual;
  #L38a302.  v1:= temp;
  #L38a304.  call `setColor`(v0, v3) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L38a30a.  call `setAlpha`(v0, v1) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L38a310.  return @kind void;
}
procedure `void` `setTransparentCircleRadius`(`com.github.mikephil.charting.charts.PieChart` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.setTransparentCircleRadius:(F)V` @AccessFlag PUBLIC {
    temp;

  #L38a324.  v0.`com.github.mikephil.charting.charts.PieChart.mTransparentCircleRadiusPercent` @type ^`float` := v1;
  #L38a328.  return @kind void;
}
procedure `void` `setUsePercentValues`(`com.github.mikephil.charting.charts.PieChart` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/charts/PieChart;.setUsePercentValues:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38a33c.  v0.`com.github.mikephil.charting.charts.PieChart.mUsePercentValues` @type ^`boolean` := v1 @kind boolean;
  #L38a340.  return @kind void;
}
