record `com.github.mikephil.charting.charts.RadarChart` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.charts.PieRadarChartBase` @kind class {
  `boolean` `com.github.mikephil.charting.charts.RadarChart.mDrawWeb` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.charts.RadarChart.mInnerWebLineWidth` @AccessFlag PRIVATE;
  `int` `com.github.mikephil.charting.charts.RadarChart.mSkipWebLineCount` @AccessFlag PRIVATE;
  `int` `com.github.mikephil.charting.charts.RadarChart.mWebAlpha` @AccessFlag PRIVATE;
  `int` `com.github.mikephil.charting.charts.RadarChart.mWebColor` @AccessFlag PRIVATE;
  `int` `com.github.mikephil.charting.charts.RadarChart.mWebColorInner` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.charts.RadarChart.mWebLineWidth` @AccessFlag PRIVATE;
  `com.github.mikephil.charting.renderer.XAxisRendererRadarChart` `com.github.mikephil.charting.charts.RadarChart.mXAxisRenderer` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.components.YAxis` `com.github.mikephil.charting.charts.RadarChart.mYAxis` @AccessFlag PRIVATE;
  `com.github.mikephil.charting.renderer.YAxisRendererRadarChart` `com.github.mikephil.charting.charts.RadarChart.mYAxisRenderer` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.github.mikephil.charting.charts.RadarChart` v1 @kind this, `android.content.Context` v2 @kind object) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L38b088.  call `<init>`(v1, v2) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L38b08e.  v2:= 2.5F;
  #L38b092.  v1.`com.github.mikephil.charting.charts.RadarChart.mWebLineWidth` @type ^`float` := v2;
  #L38b096.  v2:= 1.5F;
  #L38b09a.  v1.`com.github.mikephil.charting.charts.RadarChart.mInnerWebLineWidth` @type ^`float` := v2;
  #L38b09e.  v2:= 122I;
  #L38b0a2.  call temp:= `rgb`(v2, v2, v2) @signature `Landroid/graphics/Color;.rgb:(III)I` @kind static;
  #L38b0a8.  v0:= temp;
  #L38b0aa.  v1.`com.github.mikephil.charting.charts.RadarChart.mWebColor` @type ^`int` := v0;
  #L38b0ae.  call temp:= `rgb`(v2, v2, v2) @signature `Landroid/graphics/Color;.rgb:(III)I` @kind static;
  #L38b0b4.  v2:= temp;
  #L38b0b6.  v1.`com.github.mikephil.charting.charts.RadarChart.mWebColorInner` @type ^`int` := v2;
  #L38b0ba.  v2:= 150I;
  #L38b0be.  v1.`com.github.mikephil.charting.charts.RadarChart.mWebAlpha` @type ^`int` := v2;
  #L38b0c2.  v2:= 1I;
  #L38b0c4.  v1.`com.github.mikephil.charting.charts.RadarChart.mDrawWeb` @type ^`boolean` := v2 @kind boolean;
  #L38b0c8.  v2:= 0I;
  #L38b0ca.  v1.`com.github.mikephil.charting.charts.RadarChart.mSkipWebLineCount` @type ^`int` := v2;
  #L38b0ce.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.charts.RadarChart` v0 @kind this, `android.content.Context` v1 @kind object, `android.util.AttributeSet` v2 @kind object) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L38b0e0.  call `<init>`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L38b0e6.  v1:= 2.5F;
  #L38b0ea.  v0.`com.github.mikephil.charting.charts.RadarChart.mWebLineWidth` @type ^`float` := v1;
  #L38b0ee.  v1:= 1.5F;
  #L38b0f2.  v0.`com.github.mikephil.charting.charts.RadarChart.mInnerWebLineWidth` @type ^`float` := v1;
  #L38b0f6.  v1:= 122I;
  #L38b0fa.  call temp:= `rgb`(v1, v1, v1) @signature `Landroid/graphics/Color;.rgb:(III)I` @kind static;
  #L38b100.  v2:= temp;
  #L38b102.  v0.`com.github.mikephil.charting.charts.RadarChart.mWebColor` @type ^`int` := v2;
  #L38b106.  call temp:= `rgb`(v1, v1, v1) @signature `Landroid/graphics/Color;.rgb:(III)I` @kind static;
  #L38b10c.  v1:= temp;
  #L38b10e.  v0.`com.github.mikephil.charting.charts.RadarChart.mWebColorInner` @type ^`int` := v1;
  #L38b112.  v1:= 150I;
  #L38b116.  v0.`com.github.mikephil.charting.charts.RadarChart.mWebAlpha` @type ^`int` := v1;
  #L38b11a.  v1:= 1I;
  #L38b11c.  v0.`com.github.mikephil.charting.charts.RadarChart.mDrawWeb` @type ^`boolean` := v1 @kind boolean;
  #L38b120.  v1:= 0I;
  #L38b122.  v0.`com.github.mikephil.charting.charts.RadarChart.mSkipWebLineCount` @type ^`int` := v1;
  #L38b126.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.charts.RadarChart` v0 @kind this, `android.content.Context` v1 @kind object, `android.util.AttributeSet` v2 @kind object, `int` v3 ) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L38b138.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L38b13e.  v1:= 2.5F;
  #L38b142.  v0.`com.github.mikephil.charting.charts.RadarChart.mWebLineWidth` @type ^`float` := v1;
  #L38b146.  v1:= 1.5F;
  #L38b14a.  v0.`com.github.mikephil.charting.charts.RadarChart.mInnerWebLineWidth` @type ^`float` := v1;
  #L38b14e.  v1:= 122I;
  #L38b152.  call temp:= `rgb`(v1, v1, v1) @signature `Landroid/graphics/Color;.rgb:(III)I` @kind static;
  #L38b158.  v2:= temp;
  #L38b15a.  v0.`com.github.mikephil.charting.charts.RadarChart.mWebColor` @type ^`int` := v2;
  #L38b15e.  call temp:= `rgb`(v1, v1, v1) @signature `Landroid/graphics/Color;.rgb:(III)I` @kind static;
  #L38b164.  v1:= temp;
  #L38b166.  v0.`com.github.mikephil.charting.charts.RadarChart.mWebColorInner` @type ^`int` := v1;
  #L38b16a.  v1:= 150I;
  #L38b16e.  v0.`com.github.mikephil.charting.charts.RadarChart.mWebAlpha` @type ^`int` := v1;
  #L38b172.  v1:= 1I;
  #L38b174.  v0.`com.github.mikephil.charting.charts.RadarChart.mDrawWeb` @type ^`boolean` := v1 @kind boolean;
  #L38b178.  v1:= 0I;
  #L38b17a.  v0.`com.github.mikephil.charting.charts.RadarChart.mSkipWebLineCount` @type ^`int` := v1;
  #L38b17e.  return @kind void;
}
procedure `void` `calcMinMax`(`com.github.mikephil.charting.charts.RadarChart` v4 @kind this) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.calcMinMax:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L38b190.  call `calcMinMax`(v4) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.calcMinMax:()V` @kind super;
  #L38b196.  v0:= v4.`com.github.mikephil.charting.charts.RadarChart.mYAxis` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L38b19a.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L38b19e.  v1:= (`com.github.mikephil.charting.data.RadarData`) v1 @kind object;
  #L38b1a2.  v2:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L38b1a6.  call temp:= `getYMin`(v1, v2) @signature `Lcom/github/mikephil/charting/data/ChartData;.getYMin:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L38b1ac.  v1:= temp;
  #L38b1ae.  v3:= v4.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L38b1b2.  v3:= (`com.github.mikephil.charting.data.RadarData`) v3 @kind object;
  #L38b1b6.  call temp:= `getYMax`(v3, v2) @signature `Lcom/github/mikephil/charting/data/ChartData;.getYMax:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L38b1bc.  v2:= temp;
  #L38b1be.  call `calculate`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/components/YAxis;.calculate:(FF)V` @kind virtual;
  #L38b1c4.  v0:= v4.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L38b1c8.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L38b1cc.  v1:= (`com.github.mikephil.charting.data.RadarData`) v1 @kind object;
  #L38b1d0.  call temp:= `getMaxEntryCountSet`(v1) @signature `Lcom/github/mikephil/charting/data/ChartData;.getMaxEntryCountSet:()Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;` @kind virtual;
  #L38b1d6.  v1:= temp @kind object;
  #L38b1d8.  v1:= (`com.github.mikephil.charting.interfaces.datasets.IRadarDataSet`) v1 @kind object;
  #L38b1dc.  call temp:= `getEntryCount`(v1) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryCount:()I` @kind interface;
  #L38b1e2.  v1:= temp;
  #L38b1e4.  v1:= (`float`) v1 @kind i2f;
  #L38b1e6.  v2:= 0I;
  #L38b1e8.  call `calculate`(v0, v2, v1) @signature `Lcom/github/mikephil/charting/components/AxisBase;.calculate:(FF)V` @kind virtual;
  #L38b1ee.  return @kind void;
}
procedure `float` `getFactor`(`com.github.mikephil.charting.charts.RadarChart` v3 @kind this) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.getFactor:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L38adf4.  v0:= v3.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L38adf8.  call temp:= `getContentRect`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getContentRect:()Landroid/graphics/RectF;` @kind virtual;
  #L38adfe.  v0:= temp @kind object;
  #L38ae00.  call temp:= `width`(v0) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L38ae06.  v1:= temp;
  #L38ae08.  v2:= 2.0F;
  #L38ae0c.  v1:= v1 / v2 @kind float;
  #L38ae0e.  call temp:= `height`(v0) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L38ae14.  v0:= temp;
  #L38ae16.  v0:= v0 / v2 @kind float;
  #L38ae18.  call temp:= `min`(v1, v0) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L38ae1e.  v0:= temp;
  #L38ae20.  v1:= v3.`com.github.mikephil.charting.charts.RadarChart.mYAxis` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L38ae24.  v1:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisRange` @type ^`float`;
  #L38ae28.  v0:= v0 / v1 @kind float;
  #L38ae2a.  return v0;
}
procedure `int` `getIndexForAngle`(`com.github.mikephil.charting.charts.RadarChart` v7 @kind this, `float` v8 ) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.getIndexForAngle:(F)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L38afb4.  call temp:= `getRotationAngle`(v7) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRotationAngle:()F` @kind virtual;
  #L38afba.  v0:= temp;
  #L38afbc.  v8:= v8 - v0 @kind float;
  #L38afbe.  call temp:= `getNormalizedAngle`(v8) @signature `Lcom/github/mikephil/charting/utils/Utils;.getNormalizedAngle:(F)F` @kind static;
  #L38afc4.  v8:= temp;
  #L38afc6.  call temp:= `getSliceAngle`(v7) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.getSliceAngle:()F` @kind virtual;
  #L38afcc.  v0:= temp;
  #L38afce.  v1:= v7.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L38afd2.  v1:= (`com.github.mikephil.charting.data.RadarData`) v1 @kind object;
  #L38afd6.  call temp:= `getMaxEntryCountSet`(v1) @signature `Lcom/github/mikephil/charting/data/ChartData;.getMaxEntryCountSet:()Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;` @kind virtual;
  #L38afdc.  v1:= temp @kind object;
  #L38afde.  v1:= (`com.github.mikephil.charting.interfaces.datasets.IRadarDataSet`) v1 @kind object;
  #L38afe2.  call temp:= `getEntryCount`(v1) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryCount:()I` @kind interface;
  #L38afe8.  v1:= temp;
  #L38afea.  v2:= 0I;
  #L38afec.  v3:= 0I;
  #L38afee.  if v3 >= v1 then goto L38b016;
  #L38aff2.  v4:= v3 + 1;
  #L38aff6.  v5:= (`float`) v4 @kind i2f;
  #L38aff8.  v5:= v5 * v0 @kind float;
  #L38affc.  v6:= 2.0F;
  #L38b000.  v6:= v0 / v6 @kind float;
  #L38b004.  v5:= v5 - v6 @kind float;
  #L38b006.  v5:= fcmpl(v5, v8);
  #L38b00a.  if v5 <= 0 then goto L38b012;
  #L38b00e.  v2:= v3;
  #L38b010.  goto L38b016;
  #L38b012.  v3:= v4;
  #L38b014.  goto L38afee;
  #L38b016.  return v2;
}
procedure `float` `getRadius`(`com.github.mikephil.charting.charts.RadarChart` v3 @kind this) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.getRadius:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L38ae3c.  v0:= v3.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L38ae40.  call temp:= `getContentRect`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getContentRect:()Landroid/graphics/RectF;` @kind virtual;
  #L38ae46.  v0:= temp @kind object;
  #L38ae48.  call temp:= `width`(v0) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L38ae4e.  v1:= temp;
  #L38ae50.  v2:= 2.0F;
  #L38ae54.  v1:= v1 / v2 @kind float;
  #L38ae56.  call temp:= `height`(v0) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L38ae5c.  v0:= temp;
  #L38ae5e.  v0:= v0 / v2 @kind float;
  #L38ae60.  call temp:= `min`(v1, v0) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L38ae66.  v0:= temp;
  #L38ae68.  return v0;
}
procedure `float` `getRequiredBaseOffset`(`com.github.mikephil.charting.charts.RadarChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.getRequiredBaseOffset:()F` @AccessFlag PROTECTED {
    temp;
    v0;

  #L38ae7c.  v0:= v1.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L38ae80.  call temp:= `isEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.isEnabled:()Z` @kind virtual;
  #L38ae86.  v0:= temp;
  #L38ae88.  if v0 == 0 then goto L38aea8;
  #L38ae8c.  v0:= v1.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L38ae90.  call temp:= `isDrawLabelsEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawLabelsEnabled:()Z` @kind virtual;
  #L38ae96.  v0:= temp;
  #L38ae98.  if v0 == 0 then goto L38aea8;
  #L38ae9c.  v0:= v1.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L38aea0.  v0:= v0.`com.github.mikephil.charting.components.XAxis.mLabelRotatedWidth` @type ^`int`;
  #L38aea4.  v0:= (`float`) v0 @kind i2f;
  #L38aea6.  goto L38aeb4;
  #L38aea8.  v0:= 10.0F;
  #L38aeac.  call temp:= `convertDpToPixel`(v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L38aeb2.  v0:= temp;
  #L38aeb4.  return v0;
}
procedure `float` `getRequiredLegendOffset`(`com.github.mikephil.charting.charts.RadarChart` v2 @kind this) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.getRequiredLegendOffset:()F` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L38aec8.  v0:= v2.`com.github.mikephil.charting.charts.Chart.mLegendRenderer` @type ^`com.github.mikephil.charting.renderer.LegendRenderer` @kind object;
  #L38aecc.  call temp:= `getLabelPaint`(v0) @signature `Lcom/github/mikephil/charting/renderer/LegendRenderer;.getLabelPaint:()Landroid/graphics/Paint;` @kind virtual;
  #L38aed2.  v0:= temp @kind object;
  #L38aed4.  call temp:= `getTextSize`(v0) @signature `Landroid/graphics/Paint;.getTextSize:()F` @kind virtual;
  #L38aeda.  v0:= temp;
  #L38aedc.  v1:= 4.0F;
  #L38aee0.  v0:= v0 * v1 @kind float;
  #L38aee4.  return v0;
}
procedure `int` `getSkipWebLineCount`(`com.github.mikephil.charting.charts.RadarChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.getSkipWebLineCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b028.  v0:= v1.`com.github.mikephil.charting.charts.RadarChart.mSkipWebLineCount` @type ^`int`;
  #L38b02c.  return v0;
}
procedure `float` `getSliceAngle`(`com.github.mikephil.charting.charts.RadarChart` v2 @kind this) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.getSliceAngle:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38aef8.  v0:= v2.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L38aefc.  v0:= (`com.github.mikephil.charting.data.RadarData`) v0 @kind object;
  #L38af00.  call temp:= `getMaxEntryCountSet`(v0) @signature `Lcom/github/mikephil/charting/data/ChartData;.getMaxEntryCountSet:()Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;` @kind virtual;
  #L38af06.  v0:= temp @kind object;
  #L38af08.  v0:= (`com.github.mikephil.charting.interfaces.datasets.IRadarDataSet`) v0 @kind object;
  #L38af0c.  call temp:= `getEntryCount`(v0) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryCount:()I` @kind interface;
  #L38af12.  v0:= temp;
  #L38af14.  v0:= (`float`) v0 @kind i2f;
  #L38af16.  v1:= 360.0F;
  #L38af1a.  v1:= v1 / v0 @kind float;
  #L38af1c.  return v1;
}
procedure `int` `getWebAlpha`(`com.github.mikephil.charting.charts.RadarChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.getWebAlpha:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b040.  v0:= v1.`com.github.mikephil.charting.charts.RadarChart.mWebAlpha` @type ^`int`;
  #L38b044.  return v0;
}
procedure `int` `getWebColor`(`com.github.mikephil.charting.charts.RadarChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.getWebColor:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b058.  v0:= v1.`com.github.mikephil.charting.charts.RadarChart.mWebColor` @type ^`int`;
  #L38b05c.  return v0;
}
procedure `int` `getWebColorInner`(`com.github.mikephil.charting.charts.RadarChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.getWebColorInner:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b070.  v0:= v1.`com.github.mikephil.charting.charts.RadarChart.mWebColorInner` @type ^`int`;
  #L38b074.  return v0;
}
procedure `float` `getWebLineWidth`(`com.github.mikephil.charting.charts.RadarChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.getWebLineWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38af30.  v0:= v1.`com.github.mikephil.charting.charts.RadarChart.mWebLineWidth` @type ^`float`;
  #L38af34.  return v0;
}
procedure `float` `getWebLineWidthInner`(`com.github.mikephil.charting.charts.RadarChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.getWebLineWidthInner:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38af48.  v0:= v1.`com.github.mikephil.charting.charts.RadarChart.mInnerWebLineWidth` @type ^`float`;
  #L38af4c.  return v0;
}
procedure `com.github.mikephil.charting.components.YAxis` `getYAxis`(`com.github.mikephil.charting.charts.RadarChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.getYAxis:()Lcom/github/mikephil/charting/components/YAxis;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38addc.  v0:= v1.`com.github.mikephil.charting.charts.RadarChart.mYAxis` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L38ade0.  return v0 @kind object;
}
procedure `float` `getYChartMax`(`com.github.mikephil.charting.charts.RadarChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.getYChartMax:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38af60.  v0:= v1.`com.github.mikephil.charting.charts.RadarChart.mYAxis` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L38af64.  v0:= v0.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float`;
  #L38af68.  return v0;
}
procedure `float` `getYChartMin`(`com.github.mikephil.charting.charts.RadarChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.getYChartMin:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38af7c.  v0:= v1.`com.github.mikephil.charting.charts.RadarChart.mYAxis` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L38af80.  v0:= v0.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float`;
  #L38af84.  return v0;
}
procedure `float` `getYRange`(`com.github.mikephil.charting.charts.RadarChart` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.getYRange:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38af98.  v0:= v1.`com.github.mikephil.charting.charts.RadarChart.mYAxis` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L38af9c.  v0:= v0.`com.github.mikephil.charting.components.AxisBase.mAxisRange` @type ^`float`;
  #L38afa0.  return v0;
}
procedure `void` `init`(`com.github.mikephil.charting.charts.RadarChart` v3 @kind this) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.init:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L38b200.  call `init`(v3) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.init:()V` @kind super;
  #L38b206.  v0:= new `com.github.mikephil.charting.components.YAxis`;
  #L38b20a.  v1:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L38b20e.  call `<init>`(v0, v1) @signature `Lcom/github/mikephil/charting/components/YAxis;.<init>:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @kind direct;
  #L38b214.  v3.`com.github.mikephil.charting.charts.RadarChart.mYAxis` @type ^`com.github.mikephil.charting.components.YAxis` := v0 @kind object;
  #L38b218.  v0:= 1.5F;
  #L38b21c.  call temp:= `convertDpToPixel`(v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L38b222.  v0:= temp;
  #L38b224.  v3.`com.github.mikephil.charting.charts.RadarChart.mWebLineWidth` @type ^`float` := v0;
  #L38b228.  v0:= 0.75F;
  #L38b22c.  call temp:= `convertDpToPixel`(v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L38b232.  v0:= temp;
  #L38b234.  v3.`com.github.mikephil.charting.charts.RadarChart.mInnerWebLineWidth` @type ^`float` := v0;
  #L38b238.  v0:= new `com.github.mikephil.charting.renderer.RadarChartRenderer`;
  #L38b23c.  v1:= v3.`com.github.mikephil.charting.charts.Chart.mAnimator` @type ^`com.github.mikephil.charting.animation.ChartAnimator` @kind object;
  #L38b240.  v2:= v3.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L38b244.  call `<init>`(v0, v3, v1, v2) @signature `Lcom/github/mikephil/charting/renderer/RadarChartRenderer;.<init>:(Lcom/github/mikephil/charting/charts/RadarChart;Lcom/github/mikephil/charting/animation/ChartAnimator;Lcom/github/mikephil/charting/utils/ViewPortHandler;)V` @kind direct;
  #L38b24a.  v3.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` := v0 @kind object;
  #L38b24e.  v0:= new `com.github.mikephil.charting.renderer.YAxisRendererRadarChart`;
  #L38b252.  v1:= v3.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L38b256.  v2:= v3.`com.github.mikephil.charting.charts.RadarChart.mYAxis` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L38b25a.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/github/mikephil/charting/renderer/YAxisRendererRadarChart;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;Lcom/github/mikephil/charting/components/YAxis;Lcom/github/mikephil/charting/charts/RadarChart;)V` @kind direct;
  #L38b260.  v3.`com.github.mikephil.charting.charts.RadarChart.mYAxisRenderer` @type ^`com.github.mikephil.charting.renderer.YAxisRendererRadarChart` := v0 @kind object;
  #L38b264.  v0:= new `com.github.mikephil.charting.renderer.XAxisRendererRadarChart`;
  #L38b268.  v1:= v3.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L38b26c.  v2:= v3.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L38b270.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/github/mikephil/charting/renderer/XAxisRendererRadarChart;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;Lcom/github/mikephil/charting/components/XAxis;Lcom/github/mikephil/charting/charts/RadarChart;)V` @kind direct;
  #L38b276.  v3.`com.github.mikephil.charting.charts.RadarChart.mXAxisRenderer` @type ^`com.github.mikephil.charting.renderer.XAxisRendererRadarChart` := v0 @kind object;
  #L38b27a.  v0:= new `com.github.mikephil.charting.highlight.RadarHighlighter`;
  #L38b27e.  call `<init>`(v0, v3) @signature `Lcom/github/mikephil/charting/highlight/RadarHighlighter;.<init>:(Lcom/github/mikephil/charting/charts/RadarChart;)V` @kind direct;
  #L38b284.  v3.`com.github.mikephil.charting.charts.Chart.mHighlighter` @type ^`com.github.mikephil.charting.highlight.IHighlighter` := v0 @kind object;
  #L38b288.  return @kind void;
}
procedure `void` `notifyDataSetChanged`(`com.github.mikephil.charting.charts.RadarChart` v4 @kind this) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.notifyDataSetChanged:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L38b29c.  v0:= v4.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L38b2a0.  if v0 != 0 then goto L38b2a6;
  #L38b2a4.  return @kind void;
  #L38b2a6.  call `calcMinMax`(v4) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.calcMinMax:()V` @kind virtual;
  #L38b2ac.  v0:= v4.`com.github.mikephil.charting.charts.RadarChart.mYAxisRenderer` @type ^`com.github.mikephil.charting.renderer.YAxisRendererRadarChart` @kind object;
  #L38b2b0.  v1:= v4.`com.github.mikephil.charting.charts.RadarChart.mYAxis` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L38b2b4.  v2:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float`;
  #L38b2b8.  v3:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float`;
  #L38b2bc.  call temp:= `isInverted`(v1) @signature `Lcom/github/mikephil/charting/components/YAxis;.isInverted:()Z` @kind virtual;
  #L38b2c2.  v1:= temp;
  #L38b2c4.  call `computeAxis`(v0, v2, v3, v1) @signature `Lcom/github/mikephil/charting/renderer/AxisRenderer;.computeAxis:(FFZ)V` @kind virtual;
  #L38b2ca.  v0:= v4.`com.github.mikephil.charting.charts.RadarChart.mXAxisRenderer` @type ^`com.github.mikephil.charting.renderer.XAxisRendererRadarChart` @kind object;
  #L38b2ce.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L38b2d2.  v2:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float`;
  #L38b2d6.  v1:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float`;
  #L38b2da.  v3:= 0I;
  #L38b2dc.  call `computeAxis`(v0, v2, v1, v3) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.computeAxis:(FFZ)V` @kind virtual;
  #L38b2e2.  v0:= v4.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L38b2e6.  if v0 == 0 then goto L38b304;
  #L38b2ea.  call temp:= `isLegendCustom`(v0) @signature `Lcom/github/mikephil/charting/components/Legend;.isLegendCustom:()Z` @kind virtual;
  #L38b2f0.  v0:= temp;
  #L38b2f2.  if v0 != 0 then goto L38b304;
  #L38b2f6.  v0:= v4.`com.github.mikephil.charting.charts.Chart.mLegendRenderer` @type ^`com.github.mikephil.charting.renderer.LegendRenderer` @kind object;
  #L38b2fa.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L38b2fe.  call `computeLegend`(v0, v1) @signature `Lcom/github/mikephil/charting/renderer/LegendRenderer;.computeLegend:(Lcom/github/mikephil/charting/data/ChartData;)V` @kind virtual;
  #L38b304.  call `calculateOffsets`(v4) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.calculateOffsets:()V` @kind virtual;
  #L38b30a.  return @kind void;
}
procedure `void` `onDraw`(`com.github.mikephil.charting.charts.RadarChart` v4 @kind this, `android.graphics.Canvas` v5 @kind object) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.onDraw:(Landroid/graphics/Canvas;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L38b31c.  call `onDraw`(v4, v5) @signature `Lcom/github/mikephil/charting/charts/Chart;.onDraw:(Landroid/graphics/Canvas;)V` @kind super;
  #L38b322.  v0:= v4.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L38b326.  if v0 != 0 then goto L38b32c;
  #L38b32a.  return @kind void;
  #L38b32c.  v0:= v4.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L38b330.  call temp:= `isEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.isEnabled:()Z` @kind virtual;
  #L38b336.  v0:= temp;
  #L38b338.  if v0 == 0 then goto L38b354;
  #L38b33c.  v0:= v4.`com.github.mikephil.charting.charts.RadarChart.mXAxisRenderer` @type ^`com.github.mikephil.charting.renderer.XAxisRendererRadarChart` @kind object;
  #L38b340.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L38b344.  v2:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float`;
  #L38b348.  v1:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float`;
  #L38b34c.  v3:= 0I;
  #L38b34e.  call `computeAxis`(v0, v2, v1, v3) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.computeAxis:(FFZ)V` @kind virtual;
  #L38b354.  v0:= v4.`com.github.mikephil.charting.charts.RadarChart.mXAxisRenderer` @type ^`com.github.mikephil.charting.renderer.XAxisRendererRadarChart` @kind object;
  #L38b358.  call `renderAxisLabels`(v0, v5) @signature `Lcom/github/mikephil/charting/renderer/XAxisRendererRadarChart;.renderAxisLabels:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L38b35e.  v0:= v4.`com.github.mikephil.charting.charts.RadarChart.mDrawWeb` @type ^`boolean` @kind boolean;
  #L38b362.  if v0 == 0 then goto L38b370;
  #L38b366.  v0:= v4.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L38b36a.  call `drawExtras`(v0, v5) @signature `Lcom/github/mikephil/charting/renderer/DataRenderer;.drawExtras:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L38b370.  v0:= v4.`com.github.mikephil.charting.charts.RadarChart.mYAxis` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L38b374.  call temp:= `isEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.isEnabled:()Z` @kind virtual;
  #L38b37a.  v0:= temp;
  #L38b37c.  if v0 == 0 then goto L38b39a;
  #L38b380.  v0:= v4.`com.github.mikephil.charting.charts.RadarChart.mYAxis` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L38b384.  call temp:= `isDrawLimitLinesBehindDataEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawLimitLinesBehindDataEnabled:()Z` @kind virtual;
  #L38b38a.  v0:= temp;
  #L38b38c.  if v0 == 0 then goto L38b39a;
  #L38b390.  v0:= v4.`com.github.mikephil.charting.charts.RadarChart.mYAxisRenderer` @type ^`com.github.mikephil.charting.renderer.YAxisRendererRadarChart` @kind object;
  #L38b394.  call `renderLimitLines`(v0, v5) @signature `Lcom/github/mikephil/charting/renderer/YAxisRendererRadarChart;.renderLimitLines:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L38b39a.  v0:= v4.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L38b39e.  call `drawData`(v0, v5) @signature `Lcom/github/mikephil/charting/renderer/DataRenderer;.drawData:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L38b3a4.  call temp:= `valuesToHighlight`(v4) @signature `Lcom/github/mikephil/charting/charts/Chart;.valuesToHighlight:()Z` @kind virtual;
  #L38b3aa.  v0:= temp;
  #L38b3ac.  if v0 == 0 then goto L38b3be;
  #L38b3b0.  v0:= v4.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L38b3b4.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mIndicesToHighlight` @type ^`com.github.mikephil.charting.highlight.Highlight`[] @kind object;
  #L38b3b8.  call `drawHighlighted`(v0, v5, v1) @signature `Lcom/github/mikephil/charting/renderer/DataRenderer;.drawHighlighted:(Landroid/graphics/Canvas;[Lcom/github/mikephil/charting/highlight/Highlight;)V` @kind virtual;
  #L38b3be.  v0:= v4.`com.github.mikephil.charting.charts.RadarChart.mYAxis` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L38b3c2.  call temp:= `isEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.isEnabled:()Z` @kind virtual;
  #L38b3c8.  v0:= temp;
  #L38b3ca.  if v0 == 0 then goto L38b3e8;
  #L38b3ce.  v0:= v4.`com.github.mikephil.charting.charts.RadarChart.mYAxis` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L38b3d2.  call temp:= `isDrawLimitLinesBehindDataEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawLimitLinesBehindDataEnabled:()Z` @kind virtual;
  #L38b3d8.  v0:= temp;
  #L38b3da.  if v0 != 0 then goto L38b3e8;
  #L38b3de.  v0:= v4.`com.github.mikephil.charting.charts.RadarChart.mYAxisRenderer` @type ^`com.github.mikephil.charting.renderer.YAxisRendererRadarChart` @kind object;
  #L38b3e2.  call `renderLimitLines`(v0, v5) @signature `Lcom/github/mikephil/charting/renderer/YAxisRendererRadarChart;.renderLimitLines:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L38b3e8.  v0:= v4.`com.github.mikephil.charting.charts.RadarChart.mYAxisRenderer` @type ^`com.github.mikephil.charting.renderer.YAxisRendererRadarChart` @kind object;
  #L38b3ec.  call `renderAxisLabels`(v0, v5) @signature `Lcom/github/mikephil/charting/renderer/YAxisRendererRadarChart;.renderAxisLabels:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L38b3f2.  v0:= v4.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L38b3f6.  call `drawValues`(v0, v5) @signature `Lcom/github/mikephil/charting/renderer/DataRenderer;.drawValues:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L38b3fc.  v0:= v4.`com.github.mikephil.charting.charts.Chart.mLegendRenderer` @type ^`com.github.mikephil.charting.renderer.LegendRenderer` @kind object;
  #L38b400.  call `renderLegend`(v0, v5) @signature `Lcom/github/mikephil/charting/renderer/LegendRenderer;.renderLegend:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L38b406.  call `drawDescription`(v4, v5) @signature `Lcom/github/mikephil/charting/charts/Chart;.drawDescription:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L38b40c.  call `drawMarkers`(v4, v5) @signature `Lcom/github/mikephil/charting/charts/Chart;.drawMarkers:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L38b412.  return @kind void;
}
procedure `void` `setDrawWeb`(`com.github.mikephil.charting.charts.RadarChart` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.setDrawWeb:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38b424.  v0.`com.github.mikephil.charting.charts.RadarChart.mDrawWeb` @type ^`boolean` := v1 @kind boolean;
  #L38b428.  return @kind void;
}
procedure `void` `setSkipWebLineCount`(`com.github.mikephil.charting.charts.RadarChart` v1 @kind this, `int` v2 ) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.setSkipWebLineCount:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38b43c.  v0:= 0I;
  #L38b43e.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L38b444.  v2:= temp;
  #L38b446.  v1.`com.github.mikephil.charting.charts.RadarChart.mSkipWebLineCount` @type ^`int` := v2;
  #L38b44a.  return @kind void;
}
procedure `void` `setWebAlpha`(`com.github.mikephil.charting.charts.RadarChart` v0 @kind this, `int` v1 ) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.setWebAlpha:(I)V` @AccessFlag PUBLIC {
    temp;

  #L38b45c.  v0.`com.github.mikephil.charting.charts.RadarChart.mWebAlpha` @type ^`int` := v1;
  #L38b460.  return @kind void;
}
procedure `void` `setWebColor`(`com.github.mikephil.charting.charts.RadarChart` v0 @kind this, `int` v1 ) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.setWebColor:(I)V` @AccessFlag PUBLIC {
    temp;

  #L38b474.  v0.`com.github.mikephil.charting.charts.RadarChart.mWebColor` @type ^`int` := v1;
  #L38b478.  return @kind void;
}
procedure `void` `setWebColorInner`(`com.github.mikephil.charting.charts.RadarChart` v0 @kind this, `int` v1 ) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.setWebColorInner:(I)V` @AccessFlag PUBLIC {
    temp;

  #L38b48c.  v0.`com.github.mikephil.charting.charts.RadarChart.mWebColorInner` @type ^`int` := v1;
  #L38b490.  return @kind void;
}
procedure `void` `setWebLineWidth`(`com.github.mikephil.charting.charts.RadarChart` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.setWebLineWidth:(F)V` @AccessFlag PUBLIC {
    temp;

  #L38b4a4.  call temp:= `convertDpToPixel`(v1) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L38b4aa.  v1:= temp;
  #L38b4ac.  v0.`com.github.mikephil.charting.charts.RadarChart.mWebLineWidth` @type ^`float` := v1;
  #L38b4b0.  return @kind void;
}
procedure `void` `setWebLineWidthInner`(`com.github.mikephil.charting.charts.RadarChart` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/charts/RadarChart;.setWebLineWidthInner:(F)V` @AccessFlag PUBLIC {
    temp;

  #L38b4c4.  call temp:= `convertDpToPixel`(v1) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L38b4ca.  v1:= temp;
  #L38b4cc.  v0.`com.github.mikephil.charting.charts.RadarChart.mInnerWebLineWidth` @type ^`float` := v1;
  #L38b4d0.  return @kind void;
}
