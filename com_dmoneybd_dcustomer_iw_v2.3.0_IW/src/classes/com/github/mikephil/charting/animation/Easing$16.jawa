record `com.github.mikephil.charting.animation.Easing$16` @kind class @AccessFlag FINAL extends `com.github.mikephil.charting.animation.Easing$EasingFunction` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.animation.Easing$16` v0 @kind this) @signature `Lcom/github/mikephil/charting/animation/Easing$16;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L383b34.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L383b3a.  return @kind void;
}
procedure `float` `getInterpolation`(`com.github.mikephil.charting.animation.Easing$16` v7 @kind this, `float` v8 ) @signature `Lcom/github/mikephil/charting/animation/Easing$16;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L383ab8.  v0:= 0I;
  #L383aba.  v1:= fcmpl(v8, v0);
  #L383abe.  if v1 != 0 then goto L383ac4;
  #L383ac2.  return v0;
  #L383ac4.  v0:= 1.0F;
  #L383ac8.  v1:= fcmpl(v8, v0);
  #L383acc.  if v1 != 0 then goto L383ad2;
  #L383ad0.  return v0;
  #L383ad2.  v1:= 2.0F;
  #L383ad6.  v8:= v8 * v1 @kind float;
  #L383ada.  v2:= 2.0D;
  #L383ade.  v4:= 0.5F;
  #L383ae2.  v5:= fcmpg(v8, v0);
  #L383ae6.  if v5 >= 0 then goto L383b06;
  #L383aea.  v1:= 10.0F;
  #L383aee.  v8:= v8 - v0 @kind float;
  #L383af0.  v8:= v8 * v1 @kind float;
  #L383af4.  v0:= (`double`) v8 @kind f2d;
  #L383af6.  call temp:= `pow`(v2, v0) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L383afc.  v0:= temp @kind wide;
  #L383afe.  v8:= (`float`) v0 @kind d2f;
  #L383b00.  v8:= v8 * v4 @kind float;
  #L383b04.  return v8;
  #L383b06.  v5:= -10.0F;
  #L383b0a.  v8:= v8 - v0 @kind float;
  #L383b0c.  v8:= v8 * v5 @kind float;
  #L383b10.  v5:= (`double`) v8 @kind f2d;
  #L383b12.  call temp:= `pow`(v2, v5) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L383b18.  v2:= temp @kind wide;
  #L383b1a.  v8:= (`float`) v2 @kind d2f;
  #L383b1c.  v8:= -v8 @kind float;
  #L383b1e.  v8:= v8 + v1 @kind float;
  #L383b20.  goto L383b00;
}
