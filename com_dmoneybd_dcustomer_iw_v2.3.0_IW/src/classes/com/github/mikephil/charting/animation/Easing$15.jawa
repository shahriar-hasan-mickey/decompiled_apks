record `com.github.mikephil.charting.animation.Easing$15` @kind class @AccessFlag FINAL extends `com.github.mikephil.charting.animation.Easing$EasingFunction` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.animation.Easing$15` v0 @kind this) @signature `Lcom/github/mikephil/charting/animation/Easing$15;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L383aa0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L383aa6.  return @kind void;
}
procedure `float` `getInterpolation`(`com.github.mikephil.charting.animation.Easing$15` v5 @kind this, `float` v6 ) @signature `Lcom/github/mikephil/charting/animation/Easing$15;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L383a64.  v0:= 1.0F;
  #L383a68.  v1:= fcmpl(v6, v0);
  #L383a6c.  if v1 != 0 then goto L383a72;
  #L383a70.  goto L383a8e;
  #L383a72.  v1:= 2.0D;
  #L383a76.  v3:= -10.0F;
  #L383a7a.  v6:= v6 + v0 @kind float;
  #L383a7c.  v6:= v6 * v3 @kind float;
  #L383a80.  v3:= (`double`) v6 @kind f2d;
  #L383a82.  call temp:= `pow`(v1, v3) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L383a88.  v0:= temp @kind wide;
  #L383a8a.  v6:= (`float`) v0 @kind d2f;
  #L383a8c.  v0:= -v6 @kind float;
  #L383a8e.  return v0;
}
