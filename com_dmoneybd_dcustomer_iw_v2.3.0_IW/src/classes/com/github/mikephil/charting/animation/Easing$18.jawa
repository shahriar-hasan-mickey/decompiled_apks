record `com.github.mikephil.charting.animation.Easing$18` @kind class @AccessFlag FINAL extends `com.github.mikephil.charting.animation.Easing$EasingFunction` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.animation.Easing$18` v0 @kind this) @signature `Lcom/github/mikephil/charting/animation/Easing$18;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L383bc0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L383bc6.  return @kind void;
}
procedure `float` `getInterpolation`(`com.github.mikephil.charting.animation.Easing$18` v2 @kind this, `float` v3 ) @signature `Lcom/github/mikephil/charting/animation/Easing$18;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L383b94.  v0:= 1.0F;
  #L383b98.  v3:= v3 - v0 @kind float;
  #L383b9a.  v3:= v3 * v3 @kind float;
  #L383b9e.  v0:= v0 - v3 @kind float;
  #L383ba0.  v0:= (`double`) v0 @kind f2d;
  #L383ba2.  call temp:= `sqrt`(v0) @signature `Ljava/lang/Math;.sqrt:(D)D` @kind static;
  #L383ba8.  v0:= temp @kind wide;
  #L383baa.  v3:= (`float`) v0 @kind d2f;
  #L383bac.  return v3;
}
