record `com.github.mikephil.charting.animation.Easing$4` @kind class @AccessFlag FINAL extends `com.github.mikephil.charting.animation.Easing$EasingFunction` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.animation.Easing$4` v0 @kind this) @signature `Lcom/github/mikephil/charting/animation/Easing$4;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3841c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3841c6.  return @kind void;
}
procedure `float` `getInterpolation`(`com.github.mikephil.charting.animation.Easing$4` v3 @kind this, `float` v4 ) @signature `Lcom/github/mikephil/charting/animation/Easing$4;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L384178.  v0:= 2.0F;
  #L38417c.  v4:= v4 * v0 @kind float;
  #L384180.  v1:= 1.0F;
  #L384184.  v2:= fcmpg(v4, v1);
  #L384188.  if v2 >= 0 then goto L38419a;
  #L38418c.  v0:= 0.5F;
  #L384190.  v0:= v0 * v4 @kind float;
  #L384194.  v0:= v0 * v4 @kind float;
  #L384198.  return v0;
  #L38419a.  v2:= -0.5F;
  #L38419e.  v4:= v4 - v1 @kind float;
  #L3841a0.  v0:= v4 - v0 @kind float;
  #L3841a4.  v4:= v4 * v0 @kind float;
  #L3841a8.  v4:= v4 - v1 @kind float;
  #L3841aa.  v4:= v4 * v2 @kind float;
  #L3841ae.  return v4;
}
