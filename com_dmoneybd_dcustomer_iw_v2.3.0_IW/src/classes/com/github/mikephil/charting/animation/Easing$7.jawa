record `com.github.mikephil.charting.animation.Easing$7` @kind class @AccessFlag FINAL extends `com.github.mikephil.charting.animation.Easing$EasingFunction` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.animation.Easing$7` v0 @kind this) @signature `Lcom/github/mikephil/charting/animation/Easing$7;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3842a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3842ae.  return @kind void;
}
procedure `float` `getInterpolation`(`com.github.mikephil.charting.animation.Easing$7` v6 @kind this, `float` v7 ) @signature `Lcom/github/mikephil/charting/animation/Easing$7;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L384258.  v0:= 2.0F;
  #L38425c.  v7:= v7 * v0 @kind float;
  #L384260.  v1:= 3.0D;
  #L384264.  v3:= 0.5F;
  #L384268.  v4:= 1.0F;
  #L38426c.  v4:= fcmpg(v7, v4);
  #L384270.  if v4 >= 0 then goto L384286;
  #L384274.  v4:= (`double`) v7 @kind f2d;
  #L384276.  call temp:= `pow`(v4, v1) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L38427c.  v0:= temp @kind wide;
  #L38427e.  v7:= (`float`) v0 @kind d2f;
  #L384280.  v7:= v7 * v3 @kind float;
  #L384284.  return v7;
  #L384286.  v7:= v7 - v0 @kind float;
  #L384288.  v4:= (`double`) v7 @kind f2d;
  #L38428a.  call temp:= `pow`(v4, v1) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L384290.  v1:= temp @kind wide;
  #L384292.  v7:= (`float`) v1 @kind d2f;
  #L384294.  v7:= v7 + v0 @kind float;
  #L384296.  goto L384280;
}
