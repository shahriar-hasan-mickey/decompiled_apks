record `com.github.mikephil.charting.animation.Easing$10` @kind class @AccessFlag FINAL extends `com.github.mikephil.charting.animation.Easing$EasingFunction` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.animation.Easing$10` v0 @kind this) @signature `Lcom/github/mikephil/charting/animation/Easing$10;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L383900.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L383906.  return @kind void;
}
procedure `float` `getInterpolation`(`com.github.mikephil.charting.animation.Easing$10` v6 @kind this, `float` v7 ) @signature `Lcom/github/mikephil/charting/animation/Easing$10;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3838a8.  v0:= 2.0F;
  #L3838ac.  v7:= v7 * v0 @kind float;
  #L3838b0.  v1:= 4.0D;
  #L3838b4.  v3:= 1.0F;
  #L3838b8.  v3:= fcmpg(v7, v3);
  #L3838bc.  if v3 >= 0 then goto L3838d6;
  #L3838c0.  v0:= 0.5F;
  #L3838c4.  v3:= (`double`) v7 @kind f2d;
  #L3838c6.  call temp:= `pow`(v3, v1) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L3838cc.  v1:= temp @kind wide;
  #L3838ce.  v7:= (`float`) v1 @kind d2f;
  #L3838d0.  v7:= v7 * v0 @kind float;
  #L3838d4.  return v7;
  #L3838d6.  v7:= v7 - v0 @kind float;
  #L3838d8.  v3:= -0.5F;
  #L3838dc.  v4:= (`double`) v7 @kind f2d;
  #L3838de.  call temp:= `pow`(v4, v1) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L3838e4.  v1:= temp @kind wide;
  #L3838e6.  v7:= (`float`) v1 @kind d2f;
  #L3838e8.  v7:= v7 - v0 @kind float;
  #L3838ea.  v7:= v7 * v3 @kind float;
  #L3838ee.  return v7;
}
