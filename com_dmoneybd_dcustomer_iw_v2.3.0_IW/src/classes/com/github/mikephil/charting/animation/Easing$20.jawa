record `com.github.mikephil.charting.animation.Easing$20` @kind class @AccessFlag FINAL extends `com.github.mikephil.charting.animation.Easing$EasingFunction` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.animation.Easing$20` v0 @kind this) @signature `Lcom/github/mikephil/charting/animation/Easing$20;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L383d08.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L383d0e.  return @kind void;
}
procedure `float` `getInterpolation`(`com.github.mikephil.charting.animation.Easing$20` v7 @kind this, `float` v8 ) @signature `Lcom/github/mikephil/charting/animation/Easing$20;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L383c84.  v0:= 0I;
  #L383c86.  v1:= fcmpl(v8, v0);
  #L383c8a.  if v1 != 0 then goto L383c90;
  #L383c8e.  return v0;
  #L383c90.  v0:= 1.0F;
  #L383c94.  v1:= fcmpl(v8, v0);
  #L383c98.  if v1 != 0 then goto L383c9e;
  #L383c9c.  return v0;
  #L383c9e.  v1:= 1050253722I;
  #L383ca4.  v2:= 1027838417I;
  #L383caa.  v3:= 1.0D;
  #L383cae.  call temp:= `asin`(v3) @signature `Ljava/lang/Math;.asin:(D)D` @kind static;
  #L383cb4.  v3:= temp @kind wide;
  #L383cb6.  v3:= (`float`) v3 @kind d2f;
  #L383cb8.  v2:= v2 * v3 @kind float;
  #L383cbc.  v3:= 2.0D;
  #L383cc0.  v5:= 10.0F;
  #L383cc4.  v8:= v8 - v0 @kind float;
  #L383cc6.  v5:= v5 * v8 @kind float;
  #L383cca.  v5:= (`double`) v5 @kind f2d;
  #L383ccc.  call temp:= `pow`(v3, v5) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L383cd2.  v3:= temp @kind wide;
  #L383cd4.  v0:= (`float`) v3 @kind d2f;
  #L383cd6.  v8:= v8 - v2 @kind float;
  #L383cd8.  v2:= 1086918619I;
  #L383cde.  v8:= v8 * v2 @kind float;
  #L383ce2.  v8:= v8 / v1 @kind float;
  #L383ce4.  v1:= (`double`) v8 @kind f2d;
  #L383ce6.  call temp:= `sin`(v1) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L383cec.  v1:= temp @kind wide;
  #L383cee.  v8:= (`float`) v1 @kind d2f;
  #L383cf0.  v0:= v0 * v8 @kind float;
  #L383cf4.  v8:= -v0 @kind float;
  #L383cf6.  return v8;
}
