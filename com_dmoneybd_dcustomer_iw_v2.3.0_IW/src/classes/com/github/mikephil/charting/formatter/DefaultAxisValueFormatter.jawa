record `com.github.mikephil.charting.formatter.DefaultAxisValueFormatter` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.formatter.ValueFormatter` @kind class {
  `int` `com.github.mikephil.charting.formatter.DefaultAxisValueFormatter.digits` @AccessFlag PROTECTED;
  `java.text.DecimalFormat` `com.github.mikephil.charting.formatter.DefaultAxisValueFormatter.mFormat` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.github.mikephil.charting.formatter.DefaultAxisValueFormatter` v3 @kind this, `int` v4 ) @signature `Lcom/github/mikephil/charting/formatter/DefaultAxisValueFormatter;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3940fc.  call `<init>`(v3) @signature `Lcom/github/mikephil/charting/formatter/ValueFormatter;.<init>:()V` @kind direct;
  #L394102.  v3.`com.github.mikephil.charting.formatter.DefaultAxisValueFormatter.digits` @type ^`int` := v4;
  #L394106.  v0:= new `java.lang.StringBuffer`;
  #L39410a.  call `<init>`(v0) @signature `Ljava/lang/StringBuffer;.<init>:()V` @kind direct;
  #L394110.  v1:= 0I;
  #L394112.  if v1 >= v4 then goto L394134;
  #L394116.  if v1 != 0 then goto L394124;
  #L39411a.  v2:= "." @kind object;
  #L39411e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L394124.  v2:= "0" @kind object;
  #L394128.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L39412e.  v1:= v1 + 1;
  #L394132.  goto L394112;
  #L394134.  v4:= new `java.text.DecimalFormat`;
  #L394138.  v1:= new `java.lang.StringBuilder`;
  #L39413c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L394142.  v2:= "###,###,###,##0" @kind object;
  #L394146.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39414c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L394152.  v0:= temp @kind object;
  #L394154.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39415a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L394160.  v0:= temp @kind object;
  #L394162.  call `<init>`(v4, v0) @signature `Ljava/text/DecimalFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L394168.  v3.`com.github.mikephil.charting.formatter.DefaultAxisValueFormatter.mFormat` @type ^`java.text.DecimalFormat` := v4 @kind object;
  #L39416c.  return @kind void;
}
procedure `int` `getDecimalDigits`(`com.github.mikephil.charting.formatter.DefaultAxisValueFormatter` v1 @kind this) @signature `Lcom/github/mikephil/charting/formatter/DefaultAxisValueFormatter;.getDecimalDigits:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3940c4.  v0:= v1.`com.github.mikephil.charting.formatter.DefaultAxisValueFormatter.digits` @type ^`int`;
  #L3940c8.  return v0;
}
procedure `java.lang.String` `getFormattedValue`(`com.github.mikephil.charting.formatter.DefaultAxisValueFormatter` v3 @kind this, `float` v4 ) @signature `Lcom/github/mikephil/charting/formatter/DefaultAxisValueFormatter;.getFormattedValue:(F)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3940dc.  v0:= v3.`com.github.mikephil.charting.formatter.DefaultAxisValueFormatter.mFormat` @type ^`java.text.DecimalFormat` @kind object;
  #L3940e0.  v1:= (`double`) v4 @kind f2d;
  #L3940e2.  call temp:= `format`(v0, v1) @signature `Ljava/text/DecimalFormat;.format:(D)Ljava/lang/String;` @kind virtual;
  #L3940e8.  v4:= temp @kind object;
  #L3940ea.  return v4 @kind object;
}
