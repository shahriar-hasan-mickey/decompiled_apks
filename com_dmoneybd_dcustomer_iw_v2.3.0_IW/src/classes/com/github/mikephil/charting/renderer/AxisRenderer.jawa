record `com.github.mikephil.charting.renderer.AxisRenderer` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.github.mikephil.charting.renderer.Renderer` @kind class {
  `com.github.mikephil.charting.components.AxisBase` `com.github.mikephil.charting.renderer.AxisRenderer.mAxis` @AccessFlag PROTECTED;
  `android.graphics.Paint` `com.github.mikephil.charting.renderer.AxisRenderer.mAxisLabelPaint` @AccessFlag PROTECTED;
  `android.graphics.Paint` `com.github.mikephil.charting.renderer.AxisRenderer.mAxisLinePaint` @AccessFlag PROTECTED;
  `android.graphics.Paint` `com.github.mikephil.charting.renderer.AxisRenderer.mGridPaint` @AccessFlag PROTECTED;
  `android.graphics.Paint` `com.github.mikephil.charting.renderer.AxisRenderer.mLimitLinePaint` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.utils.Transformer` `com.github.mikephil.charting.renderer.AxisRenderer.mTrans` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.github.mikephil.charting.renderer.AxisRenderer` v1 @kind this, `com.github.mikephil.charting.utils.ViewPortHandler` v2 @kind object, `com.github.mikephil.charting.utils.Transformer` v3 @kind object, `com.github.mikephil.charting.components.AxisBase` v4 @kind object) @signature `Lcom/github/mikephil/charting/renderer/AxisRenderer;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;Lcom/github/mikephil/charting/utils/Transformer;Lcom/github/mikephil/charting/components/AxisBase;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L397f88.  call `<init>`(v1, v2) @signature `Lcom/github/mikephil/charting/renderer/Renderer;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;)V` @kind direct;
  #L397f8e.  v1.`com.github.mikephil.charting.renderer.AxisRenderer.mTrans` @type ^`com.github.mikephil.charting.utils.Transformer` := v3 @kind object;
  #L397f92.  v1.`com.github.mikephil.charting.renderer.AxisRenderer.mAxis` @type ^`com.github.mikephil.charting.components.AxisBase` := v4 @kind object;
  #L397f96.  v2:= v1.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L397f9a.  if v2 == 0 then goto L39803a;
  #L397f9e.  v2:= new `android.graphics.Paint`;
  #L397fa2.  v3:= 1I;
  #L397fa4.  call `<init>`(v2, v3) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L397faa.  v1.`com.github.mikephil.charting.renderer.AxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` := v2 @kind object;
  #L397fae.  v2:= new `android.graphics.Paint`;
  #L397fb2.  call `<init>`(v2) @signature `Landroid/graphics/Paint;.<init>:()V` @kind direct;
  #L397fb8.  v1.`com.github.mikephil.charting.renderer.AxisRenderer.mGridPaint` @type ^`android.graphics.Paint` := v2 @kind object;
  #L397fbc.  v4:= -7829368I;
  #L397fc2.  call `setColor`(v2, v4) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L397fc8.  v2:= v1.`com.github.mikephil.charting.renderer.AxisRenderer.mGridPaint` @type ^`android.graphics.Paint` @kind object;
  #L397fcc.  v4:= 1.0F;
  #L397fd0.  call `setStrokeWidth`(v2, v4) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L397fd6.  v2:= v1.`com.github.mikephil.charting.renderer.AxisRenderer.mGridPaint` @type ^`android.graphics.Paint` @kind object;
  #L397fda.  v0:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L397fde.  call `setStyle`(v2, v0) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L397fe4.  v2:= v1.`com.github.mikephil.charting.renderer.AxisRenderer.mGridPaint` @type ^`android.graphics.Paint` @kind object;
  #L397fe8.  v0:= 90I;
  #L397fec.  call `setAlpha`(v2, v0) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L397ff2.  v2:= new `android.graphics.Paint`;
  #L397ff6.  call `<init>`(v2) @signature `Landroid/graphics/Paint;.<init>:()V` @kind direct;
  #L397ffc.  v1.`com.github.mikephil.charting.renderer.AxisRenderer.mAxisLinePaint` @type ^`android.graphics.Paint` := v2 @kind object;
  #L398000.  v0:= -16777216I;
  #L398004.  call `setColor`(v2, v0) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L39800a.  v2:= v1.`com.github.mikephil.charting.renderer.AxisRenderer.mAxisLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L39800e.  call `setStrokeWidth`(v2, v4) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L398014.  v2:= v1.`com.github.mikephil.charting.renderer.AxisRenderer.mAxisLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L398018.  v4:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L39801c.  call `setStyle`(v2, v4) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L398022.  v2:= new `android.graphics.Paint`;
  #L398026.  call `<init>`(v2, v3) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L39802c.  v1.`com.github.mikephil.charting.renderer.AxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` := v2 @kind object;
  #L398030.  v3:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L398034.  call `setStyle`(v2, v3) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L39803a.  return @kind void;
}
procedure `void` `computeAxis`(`com.github.mikephil.charting.renderer.AxisRenderer` v2 @kind this, `float` v3 , `float` v4 , `boolean` v5 ) @signature `Lcom/github/mikephil/charting/renderer/AxisRenderer;.computeAxis:(FFZ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39804c.  v0:= v2.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L398050.  if v0 == 0 then goto L3980ec;
  #L398054.  call temp:= `contentWidth`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentWidth:()F` @kind virtual;
  #L39805a.  v0:= temp;
  #L39805c.  v1:= 10.0F;
  #L398060.  v0:= fcmpl(v0, v1);
  #L398064.  if v0 <= 0 then goto L3980ec;
  #L398068.  v0:= v2.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L39806c.  call temp:= `isFullyZoomedOutY`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isFullyZoomedOutY:()Z` @kind virtual;
  #L398072.  v0:= temp;
  #L398074.  if v0 != 0 then goto L3980ec;
  #L398078.  v3:= v2.`com.github.mikephil.charting.renderer.AxisRenderer.mTrans` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L39807c.  v4:= v2.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L398080.  call temp:= `contentLeft`(v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentLeft:()F` @kind virtual;
  #L398086.  v4:= temp;
  #L398088.  v0:= v2.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L39808c.  call temp:= `contentTop`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L398092.  v0:= temp;
  #L398094.  call temp:= `getValuesByTouchPoint`(v3, v4, v0) @signature `Lcom/github/mikephil/charting/utils/Transformer;.getValuesByTouchPoint:(FF)Lcom/github/mikephil/charting/utils/MPPointD;` @kind virtual;
  #L39809a.  v3:= temp @kind object;
  #L39809c.  v4:= v2.`com.github.mikephil.charting.renderer.AxisRenderer.mTrans` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L3980a0.  v0:= v2.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3980a4.  call temp:= `contentLeft`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentLeft:()F` @kind virtual;
  #L3980aa.  v0:= temp;
  #L3980ac.  v1:= v2.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3980b0.  call temp:= `contentBottom`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentBottom:()F` @kind virtual;
  #L3980b6.  v1:= temp;
  #L3980b8.  call temp:= `getValuesByTouchPoint`(v4, v0, v1) @signature `Lcom/github/mikephil/charting/utils/Transformer;.getValuesByTouchPoint:(FF)Lcom/github/mikephil/charting/utils/MPPointD;` @kind virtual;
  #L3980be.  v4:= temp @kind object;
  #L3980c0.  if v5 != 0 then goto L3980d0;
  #L3980c4.  v0:= v4.`com.github.mikephil.charting.utils.MPPointD.y` @type ^`double` @kind wide;
  #L3980c8.  v5:= (`float`) v0 @kind d2f;
  #L3980ca.  v0:= v3.`com.github.mikephil.charting.utils.MPPointD.y` @type ^`double` @kind wide;
  #L3980ce.  goto L3980da;
  #L3980d0.  v0:= v3.`com.github.mikephil.charting.utils.MPPointD.y` @type ^`double` @kind wide;
  #L3980d4.  v5:= (`float`) v0 @kind d2f;
  #L3980d6.  v0:= v4.`com.github.mikephil.charting.utils.MPPointD.y` @type ^`double` @kind wide;
  #L3980da.  v0:= (`float`) v0 @kind d2f;
  #L3980dc.  call `recycleInstance`(v3) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointD;)V` @kind static;
  #L3980e2.  call `recycleInstance`(v4) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointD;)V` @kind static;
  #L3980e8.  v3:= v5;
  #L3980ea.  v4:= v0;
  #L3980ec.  call `computeAxisValues`(v2, v3, v4) @signature `Lcom/github/mikephil/charting/renderer/AxisRenderer;.computeAxisValues:(FF)V` @kind virtual;
  #L3980f2.  return @kind void;
}
procedure `void` `computeAxisValues`(`com.github.mikephil.charting.renderer.AxisRenderer` v17 @kind this, `float` v18 , `float` v19 ) @signature `Lcom/github/mikephil/charting/renderer/AxisRenderer;.computeAxisValues:(FF)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L398104.  v0:= v17 @kind object;
  #L398108.  v1:= v18;
  #L39810c.  v2:= v19;
  #L398110.  v3:= v0.`com.github.mikephil.charting.renderer.AxisRenderer.mAxis` @type ^`com.github.mikephil.charting.components.AxisBase` @kind object;
  #L398114.  call temp:= `getLabelCount`(v3) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getLabelCount:()I` @kind virtual;
  #L39811a.  v3:= temp;
  #L39811c.  v4:= v2 - v1 @kind float;
  #L398120.  call temp:= `abs`(v4) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L398126.  v4:= temp;
  #L398128.  v4:= (`double`) v4 @kind f2d;
  #L39812a.  if v3 == 0 then goto L398392;
  #L39812e.  v7:= 0L;
  #L398132.  v9:= dcmpg(v4, v7);
  #L398136.  if v9 <= 0 then goto L398392;
  #L39813a.  call temp:= `isInfinite`(v4) @signature `Ljava/lang/Double;.isInfinite:(D)Z` @kind static;
  #L398140.  v9:= temp;
  #L398142.  if v9 == 0 then goto L39814a;
  #L398146.  goto L398392;
  #L39814a.  v9:= (`double`) v3 @kind i2d;
  #L39814c.  call temp:= `isNaN`(v4) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L398152.  call temp:= `isNaN`(v9) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L398158.  v9:= v4 / v9 @kind double;
  #L39815c.  call temp:= `roundToNextSignificant`(v9) @signature `Lcom/github/mikephil/charting/utils/Utils;.roundToNextSignificant:(D)F` @kind static;
  #L398162.  v9:= temp;
  #L398164.  v9:= (`double`) v9 @kind f2d;
  #L398166.  v11:= v0.`com.github.mikephil.charting.renderer.AxisRenderer.mAxis` @type ^`com.github.mikephil.charting.components.AxisBase` @kind object;
  #L39816a.  call temp:= `isGranularityEnabled`(v11) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isGranularityEnabled:()Z` @kind virtual;
  #L398170.  v11:= temp;
  #L398172.  if v11 == 0 then goto L39819a;
  #L398176.  v11:= v0.`com.github.mikephil.charting.renderer.AxisRenderer.mAxis` @type ^`com.github.mikephil.charting.components.AxisBase` @kind object;
  #L39817a.  call temp:= `getGranularity`(v11) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getGranularity:()F` @kind virtual;
  #L398180.  v11:= temp;
  #L398182.  v11:= (`double`) v11 @kind f2d;
  #L398184.  v13:= dcmpg(v9, v11);
  #L398188.  if v13 >= 0 then goto L39819a;
  #L39818c.  v9:= v0.`com.github.mikephil.charting.renderer.AxisRenderer.mAxis` @type ^`com.github.mikephil.charting.components.AxisBase` @kind object;
  #L398190.  call temp:= `getGranularity`(v9) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getGranularity:()F` @kind virtual;
  #L398196.  v9:= temp;
  #L398198.  v9:= (`double`) v9 @kind f2d;
  #L39819a.  call temp:= `log10`(v9) @signature `Ljava/lang/Math;.log10:(D)D` @kind static;
  #L3981a0.  v11:= temp @kind wide;
  #L3981a2.  v11:= (`int`) v11 @kind d2i;
  #L3981a4.  v11:= (`double`) v11 @kind i2d;
  #L3981a6.  v13:= 10.0D;
  #L3981aa.  call temp:= `pow`(v13, v11) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L3981b0.  v11:= temp @kind wide;
  #L3981b2.  call temp:= `roundToNextSignificant`(v11) @signature `Lcom/github/mikephil/charting/utils/Utils;.roundToNextSignificant:(D)F` @kind static;
  #L3981b8.  v11:= temp;
  #L3981ba.  v11:= (`double`) v11 @kind f2d;
  #L3981bc.  call temp:= `isNaN`(v11) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L3981c2.  v6:= v9 / v11 @kind double;
  #L3981c6.  v6:= (`int`) v6 @kind d2i;
  #L3981c8.  v7:= 5I;
  #L3981ca.  if v6 <= v7 then goto L3981e0;
  #L3981ce.  call temp:= `isNaN`(v11) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L3981d4.  v11:= v11 * v13 @kind double;
  #L3981d8.  call temp:= `floor`(v11) @signature `Ljava/lang/Math;.floor:(D)D` @kind static;
  #L3981de.  v9:= temp @kind wide;
  #L3981e0.  v6:= v0.`com.github.mikephil.charting.renderer.AxisRenderer.mAxis` @type ^`com.github.mikephil.charting.components.AxisBase` @kind object;
  #L3981e4.  call temp:= `isCenterAxisLabelsEnabled`(v6) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isCenterAxisLabelsEnabled:()Z` @kind virtual;
  #L3981ea.  v6:= temp;
  #L3981ec.  v7:= v0.`com.github.mikephil.charting.renderer.AxisRenderer.mAxis` @type ^`com.github.mikephil.charting.components.AxisBase` @kind object;
  #L3981f0.  call temp:= `isForceLabelsEnabled`(v7) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isForceLabelsEnabled:()Z` @kind virtual;
  #L3981f6.  v7:= temp;
  #L3981f8.  if v7 == 0 then goto L39824c;
  #L3981fc.  v2:= (`float`) v4 @kind d2f;
  #L3981fe.  v4:= v3 + -1;
  #L398202.  v4:= (`float`) v4 @kind i2f;
  #L398204.  v2:= v2 / v4 @kind float;
  #L398206.  v9:= (`double`) v2 @kind f2d;
  #L398208.  v2:= v0.`com.github.mikephil.charting.renderer.AxisRenderer.mAxis` @type ^`com.github.mikephil.charting.components.AxisBase` @kind object;
  #L39820c.  v2.`com.github.mikephil.charting.components.AxisBase.mEntryCount` @type ^`int` := v3;
  #L398210.  v4:= v2.`com.github.mikephil.charting.components.AxisBase.mEntries` @type ^`float`[] @kind object;
  #L398214.  v4:= length @variable v4;
  #L398216.  if v4 >= v3 then goto L398222;
  #L39821a.  v4:= new `float`[v3];
  #L39821e.  v2.`com.github.mikephil.charting.components.AxisBase.mEntries` @type ^`float`[] := v4 @kind object;
  #L398222.  v2:= 0I;
  #L398224.  if v2 >= v3 then goto L398314;
  #L398228.  v4:= v0.`com.github.mikephil.charting.renderer.AxisRenderer.mAxis` @type ^`com.github.mikephil.charting.components.AxisBase` @kind object;
  #L39822c.  v4:= v4.`com.github.mikephil.charting.components.AxisBase.mEntries` @type ^`float`[] @kind object;
  #L398230.  v4[v2]:= v1;
  #L398234.  v4:= (`double`) v1 @kind f2d;
  #L398236.  call temp:= `isNaN`(v4) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L39823c.  call temp:= `isNaN`(v9) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L398242.  v4:= v4 + v9 @kind double;
  #L398244.  v1:= (`float`) v4 @kind d2f;
  #L398246.  v2:= v2 + 1;
  #L39824a.  goto L398224;
  #L39824c.  v3:= 0L;
  #L398250.  v5:= dcmpl(v9, v3);
  #L398254.  if v5 != 0 then goto L39825e;
  #L398258.  v3:= 0L;
  #L39825c.  goto L398274;
  #L39825e.  v3:= (`double`) v1 @kind f2d;
  #L398260.  call temp:= `isNaN`(v3) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L398266.  v3:= v3 / v9 @kind double;
  #L398268.  call temp:= `ceil`(v3) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L39826e.  v3:= temp @kind wide;
  #L398270.  v3:= v3 * v9 @kind double;
  #L398274.  v1:= v0.`com.github.mikephil.charting.renderer.AxisRenderer.mAxis` @type ^`com.github.mikephil.charting.components.AxisBase` @kind object;
  #L398278.  call temp:= `isCenterAxisLabelsEnabled`(v1) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isCenterAxisLabelsEnabled:()Z` @kind virtual;
  #L39827e.  v1:= temp;
  #L398280.  if v1 == 0 then goto L398286;
  #L398284.  v3:= v3 - v9 @kind double;
  #L398286.  v15:= 0L;
  #L39828a.  v1:= dcmpl(v9, v15);
  #L39828e.  if v1 != 0 then goto L398296;
  #L398292.  v1:= v15 @kind wide;
  #L398294.  goto L3982b4;
  #L398296.  v1:= (`double`) v2 @kind f2d;
  #L398298.  call temp:= `isNaN`(v1) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L39829e.  v1:= v1 / v9 @kind double;
  #L3982a0.  call temp:= `floor`(v1) @signature `Ljava/lang/Math;.floor:(D)D` @kind static;
  #L3982a6.  v1:= temp @kind wide;
  #L3982a8.  v1:= v1 * v9 @kind double;
  #L3982ac.  call temp:= `nextUp`(v1) @signature `Lcom/github/mikephil/charting/utils/Utils;.nextUp:(D)D` @kind static;
  #L3982b2.  v1:= temp @kind wide;
  #L3982b4.  v5:= dcmpl(v9, v15);
  #L3982b8.  if v5 == 0 then goto L3982ce;
  #L3982bc.  v7:= v3 @kind wide;
  #L3982be.  v5:= dcmpg(v7, v1);
  #L3982c2.  if v5 > 0 then goto L3982ce;
  #L3982c6.  v6:= v6 + 1;
  #L3982ca.  v7:= v7 + v9 @kind double;
  #L3982cc.  goto L3982be;
  #L3982ce.  v1:= v0.`com.github.mikephil.charting.renderer.AxisRenderer.mAxis` @type ^`com.github.mikephil.charting.components.AxisBase` @kind object;
  #L3982d2.  v1.`com.github.mikephil.charting.components.AxisBase.mEntryCount` @type ^`int` := v6;
  #L3982d6.  v2:= v1.`com.github.mikephil.charting.components.AxisBase.mEntries` @type ^`float`[] @kind object;
  #L3982da.  v2:= length @variable v2;
  #L3982dc.  if v2 >= v6 then goto L3982e8;
  #L3982e0.  v2:= new `float`[v6];
  #L3982e4.  v1.`com.github.mikephil.charting.components.AxisBase.mEntries` @type ^`float`[] := v2 @kind object;
  #L3982e8.  v1:= 0I;
  #L3982ea.  if v1 >= v6 then goto L398312;
  #L3982ee.  v7:= 0L;
  #L3982f2.  v2:= dcmpl(v3, v7);
  #L3982f6.  if v2 != 0 then goto L3982fc;
  #L3982fa.  v3:= v7 @kind wide;
  #L3982fc.  v2:= v0.`com.github.mikephil.charting.renderer.AxisRenderer.mAxis` @type ^`com.github.mikephil.charting.components.AxisBase` @kind object;
  #L398300.  v2:= v2.`com.github.mikephil.charting.components.AxisBase.mEntries` @type ^`float`[] @kind object;
  #L398304.  v5:= (`float`) v3 @kind d2f;
  #L398306.  v2[v1]:= v5;
  #L39830a.  v3:= v3 + v9 @kind double;
  #L39830c.  v1:= v1 + 1;
  #L398310.  goto L3982ea;
  #L398312.  v3:= v6;
  #L398314.  v1:= 1.0D;
  #L398318.  v4:= dcmpg(v9, v1);
  #L39831c.  v1:= v0.`com.github.mikephil.charting.renderer.AxisRenderer.mAxis` @type ^`com.github.mikephil.charting.components.AxisBase` @kind object;
  #L398320.  if v4 >= 0 then goto L39833a;
  #L398324.  call temp:= `log10`(v9) @signature `Ljava/lang/Math;.log10:(D)D` @kind static;
  #L39832a.  v4:= temp @kind wide;
  #L39832c.  v4:= -v4 @kind double;
  #L39832e.  call temp:= `ceil`(v4) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L398334.  v4:= temp @kind wide;
  #L398336.  v2:= (`int`) v4 @kind d2i;
  #L398338.  goto L39833c;
  #L39833a.  v2:= 0I;
  #L39833c.  v1.`com.github.mikephil.charting.components.AxisBase.mDecimals` @type ^`int` := v2;
  #L398340.  v1:= v0.`com.github.mikephil.charting.renderer.AxisRenderer.mAxis` @type ^`com.github.mikephil.charting.components.AxisBase` @kind object;
  #L398344.  call temp:= `isCenterAxisLabelsEnabled`(v1) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isCenterAxisLabelsEnabled:()Z` @kind virtual;
  #L39834a.  v1:= temp;
  #L39834c.  if v1 == 0 then goto L398390;
  #L398350.  v1:= v0.`com.github.mikephil.charting.renderer.AxisRenderer.mAxis` @type ^`com.github.mikephil.charting.components.AxisBase` @kind object;
  #L398354.  v2:= v1.`com.github.mikephil.charting.components.AxisBase.mCenteredEntries` @type ^`float`[] @kind object;
  #L398358.  v2:= length @variable v2;
  #L39835a.  if v2 >= v3 then goto L398366;
  #L39835e.  v2:= new `float`[v3];
  #L398362.  v1.`com.github.mikephil.charting.components.AxisBase.mCenteredEntries` @type ^`float`[] := v2 @kind object;
  #L398366.  v1:= (`float`) v9 @kind d2f;
  #L398368.  v2:= 2.0F;
  #L39836c.  v1:= v1 / v2 @kind float;
  #L39836e.  v6:= 0I;
  #L398370.  if v6 >= v3 then goto L398390;
  #L398374.  v2:= v0.`com.github.mikephil.charting.renderer.AxisRenderer.mAxis` @type ^`com.github.mikephil.charting.components.AxisBase` @kind object;
  #L398378.  v4:= v2.`com.github.mikephil.charting.components.AxisBase.mCenteredEntries` @type ^`float`[] @kind object;
  #L39837c.  v2:= v2.`com.github.mikephil.charting.components.AxisBase.mEntries` @type ^`float`[] @kind object;
  #L398380.  v2:= v2[v6];
  #L398384.  v2:= v2 + v1 @kind float;
  #L398386.  v4[v6]:= v2;
  #L39838a.  v6:= v6 + 1;
  #L39838e.  goto L398370;
  #L398390.  return @kind void;
  #L398392.  v1:= v0.`com.github.mikephil.charting.renderer.AxisRenderer.mAxis` @type ^`com.github.mikephil.charting.components.AxisBase` @kind object;
  #L398396.  v2:= 0I;
  #L398398.  v3:= new `float`[v2];
  #L39839c.  v1.`com.github.mikephil.charting.components.AxisBase.mEntries` @type ^`float`[] := v3 @kind object;
  #L3983a0.  v3:= new `float`[v2];
  #L3983a4.  v1.`com.github.mikephil.charting.components.AxisBase.mCenteredEntries` @type ^`float`[] := v3 @kind object;
  #L3983a8.  v1.`com.github.mikephil.charting.components.AxisBase.mEntryCount` @type ^`int` := v2;
  #L3983ac.  return @kind void;
}
procedure `android.graphics.Paint` `getPaintAxisLabels`(`com.github.mikephil.charting.renderer.AxisRenderer` v1 @kind this) @signature `Lcom/github/mikephil/charting/renderer/AxisRenderer;.getPaintAxisLabels:()Landroid/graphics/Paint;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L397f28.  v0:= v1.`com.github.mikephil.charting.renderer.AxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L397f2c.  return v0 @kind object;
}
procedure `android.graphics.Paint` `getPaintAxisLine`(`com.github.mikephil.charting.renderer.AxisRenderer` v1 @kind this) @signature `Lcom/github/mikephil/charting/renderer/AxisRenderer;.getPaintAxisLine:()Landroid/graphics/Paint;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L397f40.  v0:= v1.`com.github.mikephil.charting.renderer.AxisRenderer.mAxisLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L397f44.  return v0 @kind object;
}
procedure `android.graphics.Paint` `getPaintGrid`(`com.github.mikephil.charting.renderer.AxisRenderer` v1 @kind this) @signature `Lcom/github/mikephil/charting/renderer/AxisRenderer;.getPaintGrid:()Landroid/graphics/Paint;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L397f58.  v0:= v1.`com.github.mikephil.charting.renderer.AxisRenderer.mGridPaint` @type ^`android.graphics.Paint` @kind object;
  #L397f5c.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.utils.Transformer` `getTransformer`(`com.github.mikephil.charting.renderer.AxisRenderer` v1 @kind this) @signature `Lcom/github/mikephil/charting/renderer/AxisRenderer;.getTransformer:()Lcom/github/mikephil/charting/utils/Transformer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L397f70.  v0:= v1.`com.github.mikephil.charting.renderer.AxisRenderer.mTrans` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L397f74.  return v0 @kind object;
}
procedure `void` `renderAxisLabels`(`android.graphics.Canvas` v0 @kind object) @signature `Lcom/github/mikephil/charting/renderer/AxisRenderer;.renderAxisLabels:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `renderAxisLine`(`android.graphics.Canvas` v0 @kind object) @signature `Lcom/github/mikephil/charting/renderer/AxisRenderer;.renderAxisLine:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `renderGridLines`(`android.graphics.Canvas` v0 @kind object) @signature `Lcom/github/mikephil/charting/renderer/AxisRenderer;.renderGridLines:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `renderLimitLines`(`android.graphics.Canvas` v0 @kind object) @signature `Lcom/github/mikephil/charting/renderer/AxisRenderer;.renderLimitLines:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
