record `com.github.mikephil.charting.renderer.XAxisRenderer` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.renderer.AxisRenderer` @kind class {
  `float`[] `com.github.mikephil.charting.renderer.XAxisRenderer.a` @AccessFlag ;
  `android.graphics.RectF` `com.github.mikephil.charting.renderer.XAxisRenderer.mGridClippingRect` @AccessFlag PROTECTED;
  `android.graphics.RectF` `com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLineClippingRect` @AccessFlag PROTECTED;
  `android.graphics.Path` `com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePath` @AccessFlag PRIVATE;
  `float`[] `com.github.mikephil.charting.renderer.XAxisRenderer.mRenderGridLinesBuffer` @AccessFlag PROTECTED;
  `android.graphics.Path` `com.github.mikephil.charting.renderer.XAxisRenderer.mRenderGridLinesPath` @AccessFlag PROTECTED;
  `float`[] `com.github.mikephil.charting.renderer.XAxisRenderer.mRenderLimitLinesBuffer` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.components.XAxis` `com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.github.mikephil.charting.renderer.XAxisRenderer` v0 @kind this, `com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind object, `com.github.mikephil.charting.components.XAxis` v2 @kind object, `com.github.mikephil.charting.utils.Transformer` v3 @kind object) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;Lcom/github/mikephil/charting/components/XAxis;Lcom/github/mikephil/charting/utils/Transformer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a19a8.  call `<init>`(v0, v1, v3, v2) @signature `Lcom/github/mikephil/charting/renderer/AxisRenderer;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;Lcom/github/mikephil/charting/utils/Transformer;Lcom/github/mikephil/charting/components/AxisBase;)V` @kind direct;
  #L3a19ae.  v1:= new `android.graphics.Path`;
  #L3a19b2.  call `<init>`(v1) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L3a19b8.  v0.`com.github.mikephil.charting.renderer.XAxisRenderer.mRenderGridLinesPath` @type ^`android.graphics.Path` := v1 @kind object;
  #L3a19bc.  v1:= 2I;
  #L3a19be.  v3:= new `float`[v1];
  #L3a19c2.  v0.`com.github.mikephil.charting.renderer.XAxisRenderer.mRenderGridLinesBuffer` @type ^`float`[] := v3 @kind object;
  #L3a19c6.  v3:= new `android.graphics.RectF`;
  #L3a19ca.  call `<init>`(v3) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L3a19d0.  v0.`com.github.mikephil.charting.renderer.XAxisRenderer.mGridClippingRect` @type ^`android.graphics.RectF` := v3 @kind object;
  #L3a19d4.  v1:= new `float`[v1];
  #L3a19d8.  v0.`com.github.mikephil.charting.renderer.XAxisRenderer.mRenderLimitLinesBuffer` @type ^`float`[] := v1 @kind object;
  #L3a19dc.  v1:= new `android.graphics.RectF`;
  #L3a19e0.  call `<init>`(v1) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L3a19e6.  v0.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLineClippingRect` @type ^`android.graphics.RectF` := v1 @kind object;
  #L3a19ea.  v1:= 4I;
  #L3a19ec.  v1:= new `float`[v1];
  #L3a19f0.  v0.`com.github.mikephil.charting.renderer.XAxisRenderer.a` @type ^`float`[] := v1 @kind object;
  #L3a19f4.  v1:= new `android.graphics.Path`;
  #L3a19f8.  call `<init>`(v1) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L3a19fe.  v0.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePath` @type ^`android.graphics.Path` := v1 @kind object;
  #L3a1a02.  v0.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` := v2 @kind object;
  #L3a1a06.  v1:= v0.`com.github.mikephil.charting.renderer.AxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L3a1a0a.  v2:= -16777216I;
  #L3a1a0e.  call `setColor`(v1, v2) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L3a1a14.  v1:= v0.`com.github.mikephil.charting.renderer.AxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L3a1a18.  v2:= `@@android.graphics.Paint$Align.CENTER` @type ^`android.graphics.Paint$Align` @kind object;
  #L3a1a1c.  call `setTextAlign`(v1, v2) @signature `Landroid/graphics/Paint;.setTextAlign:(Landroid/graphics/Paint$Align;)V` @kind virtual;
  #L3a1a22.  v1:= v0.`com.github.mikephil.charting.renderer.AxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L3a1a26.  v2:= 10.0F;
  #L3a1a2a.  call temp:= `convertDpToPixel`(v2) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L3a1a30.  v2:= temp;
  #L3a1a32.  call `setTextSize`(v1, v2) @signature `Landroid/graphics/Paint;.setTextSize:(F)V` @kind virtual;
  #L3a1a38.  return @kind void;
}
procedure `void` `computeAxis`(`com.github.mikephil.charting.renderer.XAxisRenderer` v2 @kind this, `float` v3 , `float` v4 , `boolean` v5 ) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.computeAxis:(FFZ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a1a4c.  v0:= v2.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a1a50.  call temp:= `contentWidth`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentWidth:()F` @kind virtual;
  #L3a1a56.  v0:= temp;
  #L3a1a58.  v1:= 10.0F;
  #L3a1a5c.  v0:= fcmpl(v0, v1);
  #L3a1a60.  if v0 <= 0 then goto L3a1ae8;
  #L3a1a64.  v0:= v2.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a1a68.  call temp:= `isFullyZoomedOutX`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isFullyZoomedOutX:()Z` @kind virtual;
  #L3a1a6e.  v0:= temp;
  #L3a1a70.  if v0 != 0 then goto L3a1ae8;
  #L3a1a74.  v3:= v2.`com.github.mikephil.charting.renderer.AxisRenderer.mTrans` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L3a1a78.  v4:= v2.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a1a7c.  call temp:= `contentLeft`(v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentLeft:()F` @kind virtual;
  #L3a1a82.  v4:= temp;
  #L3a1a84.  v0:= v2.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a1a88.  call temp:= `contentTop`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L3a1a8e.  v0:= temp;
  #L3a1a90.  call temp:= `getValuesByTouchPoint`(v3, v4, v0) @signature `Lcom/github/mikephil/charting/utils/Transformer;.getValuesByTouchPoint:(FF)Lcom/github/mikephil/charting/utils/MPPointD;` @kind virtual;
  #L3a1a96.  v3:= temp @kind object;
  #L3a1a98.  v4:= v2.`com.github.mikephil.charting.renderer.AxisRenderer.mTrans` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L3a1a9c.  v0:= v2.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a1aa0.  call temp:= `contentRight`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentRight:()F` @kind virtual;
  #L3a1aa6.  v0:= temp;
  #L3a1aa8.  v1:= v2.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a1aac.  call temp:= `contentTop`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L3a1ab2.  v1:= temp;
  #L3a1ab4.  call temp:= `getValuesByTouchPoint`(v4, v0, v1) @signature `Lcom/github/mikephil/charting/utils/Transformer;.getValuesByTouchPoint:(FF)Lcom/github/mikephil/charting/utils/MPPointD;` @kind virtual;
  #L3a1aba.  v4:= temp @kind object;
  #L3a1abc.  if v5 == 0 then goto L3a1acc;
  #L3a1ac0.  v0:= v4.`com.github.mikephil.charting.utils.MPPointD.x` @type ^`double` @kind wide;
  #L3a1ac4.  v5:= (`float`) v0 @kind d2f;
  #L3a1ac6.  v0:= v3.`com.github.mikephil.charting.utils.MPPointD.x` @type ^`double` @kind wide;
  #L3a1aca.  goto L3a1ad6;
  #L3a1acc.  v0:= v3.`com.github.mikephil.charting.utils.MPPointD.x` @type ^`double` @kind wide;
  #L3a1ad0.  v5:= (`float`) v0 @kind d2f;
  #L3a1ad2.  v0:= v4.`com.github.mikephil.charting.utils.MPPointD.x` @type ^`double` @kind wide;
  #L3a1ad6.  v0:= (`float`) v0 @kind d2f;
  #L3a1ad8.  call `recycleInstance`(v3) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointD;)V` @kind static;
  #L3a1ade.  call `recycleInstance`(v4) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointD;)V` @kind static;
  #L3a1ae4.  v3:= v5;
  #L3a1ae6.  v4:= v0;
  #L3a1ae8.  call `computeAxisValues`(v2, v3, v4) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.computeAxisValues:(FF)V` @kind virtual;
  #L3a1aee.  return @kind void;
}
procedure `void` `computeAxisValues`(`com.github.mikephil.charting.renderer.XAxisRenderer` v0 @kind this, `float` v1 , `float` v2 ) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.computeAxisValues:(FF)V` @AccessFlag PROTECTED {
    temp;

  #L3a1b00.  call `computeAxisValues`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/renderer/AxisRenderer;.computeAxisValues:(FF)V` @kind super;
  #L3a1b06.  call `computeSize`(v0) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.computeSize:()V` @kind virtual;
  #L3a1b0c.  return @kind void;
}
procedure `void` `computeSize`(`com.github.mikephil.charting.renderer.XAxisRenderer` v5 @kind this) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.computeSize:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a1b20.  v0:= v5.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1b24.  call temp:= `getLongestLabel`(v0) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getLongestLabel:()Ljava/lang/String;` @kind virtual;
  #L3a1b2a.  v0:= temp @kind object;
  #L3a1b2c.  v1:= v5.`com.github.mikephil.charting.renderer.AxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L3a1b30.  v2:= v5.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1b34.  call temp:= `getTypeface`(v2) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.getTypeface:()Landroid/graphics/Typeface;` @kind virtual;
  #L3a1b3a.  v2:= temp @kind object;
  #L3a1b3c.  call temp:= `setTypeface`(v1, v2) @signature `Landroid/graphics/Paint;.setTypeface:(Landroid/graphics/Typeface;)Landroid/graphics/Typeface;` @kind virtual;
  #L3a1b42.  v1:= v5.`com.github.mikephil.charting.renderer.AxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L3a1b46.  v2:= v5.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1b4a.  call temp:= `getTextSize`(v2) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.getTextSize:()F` @kind virtual;
  #L3a1b50.  v2:= temp;
  #L3a1b52.  call `setTextSize`(v1, v2) @signature `Landroid/graphics/Paint;.setTextSize:(F)V` @kind virtual;
  #L3a1b58.  v1:= v5.`com.github.mikephil.charting.renderer.AxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L3a1b5c.  call temp:= `calcTextSize`(v1, v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.calcTextSize:(Landroid/graphics/Paint;Ljava/lang/String;)Lcom/github/mikephil/charting/utils/FSize;` @kind static;
  #L3a1b62.  v0:= temp @kind object;
  #L3a1b64.  v1:= v0.`com.github.mikephil.charting.utils.FSize.width` @type ^`float`;
  #L3a1b68.  v2:= v5.`com.github.mikephil.charting.renderer.AxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L3a1b6c.  v3:= "Q" @kind object;
  #L3a1b70.  call temp:= `calcTextHeight`(v2, v3) @signature `Lcom/github/mikephil/charting/utils/Utils;.calcTextHeight:(Landroid/graphics/Paint;Ljava/lang/String;)I` @kind static;
  #L3a1b76.  v2:= temp;
  #L3a1b78.  v2:= (`float`) v2 @kind i2f;
  #L3a1b7a.  v3:= v5.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1b7e.  call temp:= `getLabelRotationAngle`(v3) @signature `Lcom/github/mikephil/charting/components/XAxis;.getLabelRotationAngle:()F` @kind virtual;
  #L3a1b84.  v3:= temp;
  #L3a1b86.  call temp:= `getSizeOfRotatedRectangleByDegrees`(v1, v2, v3) @signature `Lcom/github/mikephil/charting/utils/Utils;.getSizeOfRotatedRectangleByDegrees:(FFF)Lcom/github/mikephil/charting/utils/FSize;` @kind static;
  #L3a1b8c.  v3:= temp @kind object;
  #L3a1b8e.  v4:= v5.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1b92.  call temp:= `round`(v1) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3a1b98.  v1:= temp;
  #L3a1b9a.  v4.`com.github.mikephil.charting.components.XAxis.mLabelWidth` @type ^`int` := v1;
  #L3a1b9e.  v1:= v5.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1ba2.  call temp:= `round`(v2) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3a1ba8.  v2:= temp;
  #L3a1baa.  v1.`com.github.mikephil.charting.components.XAxis.mLabelHeight` @type ^`int` := v2;
  #L3a1bae.  v1:= v5.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1bb2.  v2:= v3.`com.github.mikephil.charting.utils.FSize.width` @type ^`float`;
  #L3a1bb6.  call temp:= `round`(v2) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3a1bbc.  v2:= temp;
  #L3a1bbe.  v1.`com.github.mikephil.charting.components.XAxis.mLabelRotatedWidth` @type ^`int` := v2;
  #L3a1bc2.  v1:= v5.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1bc6.  v2:= v3.`com.github.mikephil.charting.utils.FSize.height` @type ^`float`;
  #L3a1bca.  call temp:= `round`(v2) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3a1bd0.  v2:= temp;
  #L3a1bd2.  v1.`com.github.mikephil.charting.components.XAxis.mLabelRotatedHeight` @type ^`int` := v2;
  #L3a1bd6.  call `recycleInstance`(v3) @signature `Lcom/github/mikephil/charting/utils/FSize;.recycleInstance:(Lcom/github/mikephil/charting/utils/FSize;)V` @kind static;
  #L3a1bdc.  call `recycleInstance`(v0) @signature `Lcom/github/mikephil/charting/utils/FSize;.recycleInstance:(Lcom/github/mikephil/charting/utils/FSize;)V` @kind static;
  #L3a1be2.  return @kind void;
}
procedure `void` `drawGridLine`(`com.github.mikephil.charting.renderer.XAxisRenderer` v0 @kind this, `android.graphics.Canvas` v1 @kind object, `float` v2 , `float` v3 , `android.graphics.Path` v4 @kind object) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.drawGridLine:(Landroid/graphics/Canvas;FFLandroid/graphics/Path;)V` @AccessFlag PROTECTED {
    temp;

  #L3a1bf4.  v3:= v0.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a1bf8.  call temp:= `contentBottom`(v3) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentBottom:()F` @kind virtual;
  #L3a1bfe.  v3:= temp;
  #L3a1c00.  call `moveTo`(v4, v2, v3) @signature `Landroid/graphics/Path;.moveTo:(FF)V` @kind virtual;
  #L3a1c06.  v3:= v0.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a1c0a.  call temp:= `contentTop`(v3) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L3a1c10.  v3:= temp;
  #L3a1c12.  call `lineTo`(v4, v2, v3) @signature `Landroid/graphics/Path;.lineTo:(FF)V` @kind virtual;
  #L3a1c18.  v2:= v0.`com.github.mikephil.charting.renderer.AxisRenderer.mGridPaint` @type ^`android.graphics.Paint` @kind object;
  #L3a1c1c.  call `drawPath`(v1, v4, v2) @signature `Landroid/graphics/Canvas;.drawPath:(Landroid/graphics/Path;Landroid/graphics/Paint;)V` @kind virtual;
  #L3a1c22.  call `reset`(v4) @signature `Landroid/graphics/Path;.reset:()V` @kind virtual;
  #L3a1c28.  return @kind void;
}
procedure `void` `drawLabel`(`com.github.mikephil.charting.renderer.XAxisRenderer` v7 @kind this, `android.graphics.Canvas` v8 @kind object, `java.lang.String` v9 @kind object, `float` v10 , `float` v11 , `com.github.mikephil.charting.utils.MPPointF` v12 @kind object, `float` v13 ) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.drawLabel:(Landroid/graphics/Canvas;Ljava/lang/String;FFLcom/github/mikephil/charting/utils/MPPointF;F)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a1c3c.  v4:= v7.`com.github.mikephil.charting.renderer.AxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L3a1c40.  v0:= v8 @kind object;
  #L3a1c42.  v1:= v9 @kind object;
  #L3a1c44.  v2:= v10;
  #L3a1c46.  v3:= v11;
  #L3a1c48.  v5:= v12 @kind object;
  #L3a1c4a.  v6:= v13;
  #L3a1c4c.  call `drawXAxisValue`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/github/mikephil/charting/utils/Utils;.drawXAxisValue:(Landroid/graphics/Canvas;Ljava/lang/String;FFLandroid/graphics/Paint;Lcom/github/mikephil/charting/utils/MPPointF;F)V` @kind static;
  #L3a1c52.  return @kind void;
}
procedure `void` `drawLabels`(`com.github.mikephil.charting.renderer.XAxisRenderer` v11 @kind this, `android.graphics.Canvas` v12 @kind object, `float` v13 , `com.github.mikephil.charting.utils.MPPointF` v14 @kind object) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.drawLabels:(Landroid/graphics/Canvas;FLcom/github/mikephil/charting/utils/MPPointF;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3a1c64.  v0:= v11.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1c68.  call temp:= `getLabelRotationAngle`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.getLabelRotationAngle:()F` @kind virtual;
  #L3a1c6e.  v0:= temp;
  #L3a1c70.  v1:= v11.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1c74.  call temp:= `isCenterAxisLabelsEnabled`(v1) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isCenterAxisLabelsEnabled:()Z` @kind virtual;
  #L3a1c7a.  v1:= temp;
  #L3a1c7c.  v2:= v11.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1c80.  v2:= v2.`com.github.mikephil.charting.components.AxisBase.mEntryCount` @type ^`int`;
  #L3a1c84.  v8:= v2 * 2;
  #L3a1c88.  v9:= new `float`[v8];
  #L3a1c8c.  v2:= 0I;
  #L3a1c8e.  v3:= 0I;
  #L3a1c90.  if v3 >= v8 then goto L3a1cc4;
  #L3a1c94.  v4:= v11.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1c98.  if v1 == 0 then goto L3a1cae;
  #L3a1c9c.  v4:= v4.`com.github.mikephil.charting.components.AxisBase.mCenteredEntries` @type ^`float`[] @kind object;
  #L3a1ca0.  v5:= v3 / 2;
  #L3a1ca4.  v4:= v4[v5];
  #L3a1ca8.  v9[v3]:= v4;
  #L3a1cac.  goto L3a1cbe;
  #L3a1cae.  v4:= v4.`com.github.mikephil.charting.components.AxisBase.mEntries` @type ^`float`[] @kind object;
  #L3a1cb2.  v5:= v3 / 2;
  #L3a1cb6.  v4:= v4[v5];
  #L3a1cba.  v9[v3]:= v4;
  #L3a1cbe.  v3:= v3 + 2;
  #L3a1cc2.  goto L3a1c90;
  #L3a1cc4.  v1:= v11.`com.github.mikephil.charting.renderer.AxisRenderer.mTrans` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L3a1cc8.  call `pointValuesToPixel`(v1, v9) @signature `Lcom/github/mikephil/charting/utils/Transformer;.pointValuesToPixel:([F)V` @kind virtual;
  #L3a1cce.  v10:= 0I;
  #L3a1cd0.  if v10 >= v8 then goto L3a1da8;
  #L3a1cd4.  v1:= v9[v10];
  #L3a1cd8.  v2:= v11.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a1cdc.  call temp:= `isInBoundsX`(v2, v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isInBoundsX:(F)Z` @kind virtual;
  #L3a1ce2.  v2:= temp;
  #L3a1ce4.  if v2 == 0 then goto L3a1da2;
  #L3a1ce8.  v2:= v11.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1cec.  call temp:= `getValueFormatter`(v2) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getValueFormatter:()Lcom/github/mikephil/charting/formatter/ValueFormatter;` @kind virtual;
  #L3a1cf2.  v2:= temp @kind object;
  #L3a1cf4.  v3:= v11.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1cf8.  v4:= v3.`com.github.mikephil.charting.components.AxisBase.mEntries` @type ^`float`[] @kind object;
  #L3a1cfc.  v5:= v10 / 2;
  #L3a1d00.  v4:= v4[v5];
  #L3a1d04.  call temp:= `getAxisLabel`(v2, v4, v3) @signature `Lcom/github/mikephil/charting/formatter/ValueFormatter;.getAxisLabel:(FLcom/github/mikephil/charting/components/AxisBase;)Ljava/lang/String;` @kind virtual;
  #L3a1d0a.  v3:= temp @kind object;
  #L3a1d0c.  v2:= v11.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1d10.  call temp:= `isAvoidFirstLastClippingEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/XAxis;.isAvoidFirstLastClippingEnabled:()Z` @kind virtual;
  #L3a1d16.  v2:= temp;
  #L3a1d18.  if v2 == 0 then goto L3a1d90;
  #L3a1d1c.  v2:= v11.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1d20.  v2:= v2.`com.github.mikephil.charting.components.AxisBase.mEntryCount` @type ^`int`;
  #L3a1d24.  v4:= v2 + -1;
  #L3a1d28.  v6:= 2.0F;
  #L3a1d2c.  if v5 != v4 then goto L3a1d7a;
  #L3a1d30.  v4:= 1I;
  #L3a1d32.  if v2 <= v4 then goto L3a1d7a;
  #L3a1d36.  v2:= v11.`com.github.mikephil.charting.renderer.AxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L3a1d3a.  call temp:= `calcTextWidth`(v2, v3) @signature `Lcom/github/mikephil/charting/utils/Utils;.calcTextWidth:(Landroid/graphics/Paint;Ljava/lang/String;)I` @kind static;
  #L3a1d40.  v2:= temp;
  #L3a1d42.  v2:= (`float`) v2 @kind i2f;
  #L3a1d44.  v4:= v11.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a1d48.  call temp:= `offsetRight`(v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.offsetRight:()F` @kind virtual;
  #L3a1d4e.  v4:= temp;
  #L3a1d50.  v4:= v4 * v6 @kind float;
  #L3a1d54.  v4:= fcmpl(v2, v4);
  #L3a1d58.  if v4 <= 0 then goto L3a1d90;
  #L3a1d5c.  v4:= v1 + v2 @kind float;
  #L3a1d60.  v5:= v11.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a1d64.  call temp:= `getChartWidth`(v5) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getChartWidth:()F` @kind virtual;
  #L3a1d6a.  v5:= temp;
  #L3a1d6c.  v4:= fcmpl(v4, v5);
  #L3a1d70.  if v4 <= 0 then goto L3a1d90;
  #L3a1d74.  v2:= v2 / v6 @kind float;
  #L3a1d76.  v1:= v1 - v2 @kind float;
  #L3a1d78.  goto L3a1d90;
  #L3a1d7a.  if v10 != 0 then goto L3a1d90;
  #L3a1d7e.  v2:= v11.`com.github.mikephil.charting.renderer.AxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L3a1d82.  call temp:= `calcTextWidth`(v2, v3) @signature `Lcom/github/mikephil/charting/utils/Utils;.calcTextWidth:(Landroid/graphics/Paint;Ljava/lang/String;)I` @kind static;
  #L3a1d88.  v2:= temp;
  #L3a1d8a.  v2:= (`float`) v2 @kind i2f;
  #L3a1d8c.  v2:= v2 / v6 @kind float;
  #L3a1d8e.  v1:= v1 + v2 @kind float;
  #L3a1d90.  v4:= v1;
  #L3a1d92.  v1:= v11 @kind object;
  #L3a1d94.  v2:= v12 @kind object;
  #L3a1d96.  v5:= v13;
  #L3a1d98.  v6:= v14 @kind object;
  #L3a1d9a.  v7:= v0;
  #L3a1d9c.  call `drawLabel`(v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.drawLabel:(Landroid/graphics/Canvas;Ljava/lang/String;FFLcom/github/mikephil/charting/utils/MPPointF;F)V` @kind virtual;
  #L3a1da2.  v10:= v10 + 2;
  #L3a1da6.  goto L3a1cd0;
  #L3a1da8.  return @kind void;
}
procedure `android.graphics.RectF` `getGridClippingRect`(`com.github.mikephil.charting.renderer.XAxisRenderer` v3 @kind this) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.getGridClippingRect:()Landroid/graphics/RectF;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a1960.  v0:= v3.`com.github.mikephil.charting.renderer.XAxisRenderer.mGridClippingRect` @type ^`android.graphics.RectF` @kind object;
  #L3a1964.  v1:= v3.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a1968.  call temp:= `getContentRect`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getContentRect:()Landroid/graphics/RectF;` @kind virtual;
  #L3a196e.  v1:= temp @kind object;
  #L3a1970.  call `set`(v0, v1) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/RectF;)V` @kind virtual;
  #L3a1976.  v0:= v3.`com.github.mikephil.charting.renderer.XAxisRenderer.mGridClippingRect` @type ^`android.graphics.RectF` @kind object;
  #L3a197a.  v1:= v3.`com.github.mikephil.charting.renderer.AxisRenderer.mAxis` @type ^`com.github.mikephil.charting.components.AxisBase` @kind object;
  #L3a197e.  call temp:= `getGridLineWidth`(v1) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getGridLineWidth:()F` @kind virtual;
  #L3a1984.  v1:= temp;
  #L3a1986.  v1:= -v1 @kind float;
  #L3a1988.  v2:= 0I;
  #L3a198a.  call `inset`(v0, v1, v2) @signature `Landroid/graphics/RectF;.inset:(FF)V` @kind virtual;
  #L3a1990.  v0:= v3.`com.github.mikephil.charting.renderer.XAxisRenderer.mGridClippingRect` @type ^`android.graphics.RectF` @kind object;
  #L3a1994.  return v0 @kind object;
}
procedure `void` `renderAxisLabels`(`com.github.mikephil.charting.renderer.XAxisRenderer` v7 @kind this, `android.graphics.Canvas` v8 @kind object) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderAxisLabels:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a1dbc.  v0:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1dc0.  call temp:= `isEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.isEnabled:()Z` @kind virtual;
  #L3a1dc6.  v0:= temp;
  #L3a1dc8.  if v0 == 0 then goto L3a1f2a;
  #L3a1dcc.  v0:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1dd0.  call temp:= `isDrawLabelsEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawLabelsEnabled:()Z` @kind virtual;
  #L3a1dd6.  v0:= temp;
  #L3a1dd8.  if v0 != 0 then goto L3a1de0;
  #L3a1ddc.  goto L3a1f2a;
  #L3a1de0.  v0:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1de4.  call temp:= `getYOffset`(v0) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.getYOffset:()F` @kind virtual;
  #L3a1dea.  v0:= temp;
  #L3a1dec.  v1:= v7.`com.github.mikephil.charting.renderer.AxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L3a1df0.  v2:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1df4.  call temp:= `getTypeface`(v2) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.getTypeface:()Landroid/graphics/Typeface;` @kind virtual;
  #L3a1dfa.  v2:= temp @kind object;
  #L3a1dfc.  call temp:= `setTypeface`(v1, v2) @signature `Landroid/graphics/Paint;.setTypeface:(Landroid/graphics/Typeface;)Landroid/graphics/Typeface;` @kind virtual;
  #L3a1e02.  v1:= v7.`com.github.mikephil.charting.renderer.AxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L3a1e06.  v2:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1e0a.  call temp:= `getTextSize`(v2) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.getTextSize:()F` @kind virtual;
  #L3a1e10.  v2:= temp;
  #L3a1e12.  call `setTextSize`(v1, v2) @signature `Landroid/graphics/Paint;.setTextSize:(F)V` @kind virtual;
  #L3a1e18.  v1:= v7.`com.github.mikephil.charting.renderer.AxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L3a1e1c.  v2:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1e20.  call temp:= `getTextColor`(v2) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.getTextColor:()I` @kind virtual;
  #L3a1e26.  v2:= temp;
  #L3a1e28.  call `setColor`(v1, v2) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L3a1e2e.  v1:= 0I;
  #L3a1e30.  call temp:= `getInstance`(v1, v1) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.getInstance:(FF)Lcom/github/mikephil/charting/utils/MPPointF;` @kind static;
  #L3a1e36.  v2:= temp @kind object;
  #L3a1e38.  v3:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1e3c.  call temp:= `getPosition`(v3) @signature `Lcom/github/mikephil/charting/components/XAxis;.getPosition:()Lcom/github/mikephil/charting/components/XAxis$XAxisPosition;` @kind virtual;
  #L3a1e42.  v3:= temp @kind object;
  #L3a1e44.  v4:= `@@com.github.mikephil.charting.components.XAxis$XAxisPosition.TOP` @type ^`com.github.mikephil.charting.components.XAxis$XAxisPosition` @kind object;
  #L3a1e48.  v5:= 1.0F;
  #L3a1e4c.  v6:= 0.5F;
  #L3a1e50.  if v3 != v4 then goto L3a1e72;
  #L3a1e54.  v2.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float` := v6;
  #L3a1e58.  v2.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float` := v5;
  #L3a1e5c.  v1:= v7.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a1e60.  call temp:= `contentTop`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L3a1e66.  v1:= temp;
  #L3a1e68.  v1:= v1 - v0 @kind float;
  #L3a1e6a.  call `drawLabels`(v7, v8, v1, v2) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.drawLabels:(Landroid/graphics/Canvas;FLcom/github/mikephil/charting/utils/MPPointF;)V` @kind virtual;
  #L3a1e70.  goto L3a1f24;
  #L3a1e72.  v3:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1e76.  call temp:= `getPosition`(v3) @signature `Lcom/github/mikephil/charting/components/XAxis;.getPosition:()Lcom/github/mikephil/charting/components/XAxis$XAxisPosition;` @kind virtual;
  #L3a1e7c.  v3:= temp @kind object;
  #L3a1e7e.  v4:= `@@com.github.mikephil.charting.components.XAxis$XAxisPosition.TOP_INSIDE` @type ^`com.github.mikephil.charting.components.XAxis$XAxisPosition` @kind object;
  #L3a1e82.  if v3 != v4 then goto L3a1eaa;
  #L3a1e86.  v2.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float` := v6;
  #L3a1e8a.  v2.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float` := v5;
  #L3a1e8e.  v1:= v7.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a1e92.  call temp:= `contentTop`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L3a1e98.  v1:= temp;
  #L3a1e9a.  v1:= v1 + v0 @kind float;
  #L3a1e9c.  v0:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1ea0.  v0:= v0.`com.github.mikephil.charting.components.XAxis.mLabelRotatedHeight` @type ^`int`;
  #L3a1ea4.  v0:= (`float`) v0 @kind i2f;
  #L3a1ea6.  v1:= v1 + v0 @kind float;
  #L3a1ea8.  goto L3a1e6a;
  #L3a1eaa.  v3:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1eae.  call temp:= `getPosition`(v3) @signature `Lcom/github/mikephil/charting/components/XAxis;.getPosition:()Lcom/github/mikephil/charting/components/XAxis$XAxisPosition;` @kind virtual;
  #L3a1eb4.  v3:= temp @kind object;
  #L3a1eb6.  v4:= `@@com.github.mikephil.charting.components.XAxis$XAxisPosition.BOTTOM` @type ^`com.github.mikephil.charting.components.XAxis$XAxisPosition` @kind object;
  #L3a1eba.  if v3 != v4 then goto L3a1ed4;
  #L3a1ebe.  v2.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float` := v6;
  #L3a1ec2.  v2.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float` := v1;
  #L3a1ec6.  v1:= v7.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a1eca.  call temp:= `contentBottom`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentBottom:()F` @kind virtual;
  #L3a1ed0.  v1:= temp;
  #L3a1ed2.  goto L3a1ea6;
  #L3a1ed4.  v3:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1ed8.  call temp:= `getPosition`(v3) @signature `Lcom/github/mikephil/charting/components/XAxis;.getPosition:()Lcom/github/mikephil/charting/components/XAxis$XAxisPosition;` @kind virtual;
  #L3a1ede.  v3:= temp @kind object;
  #L3a1ee0.  v4:= `@@com.github.mikephil.charting.components.XAxis$XAxisPosition.BOTTOM_INSIDE` @type ^`com.github.mikephil.charting.components.XAxis$XAxisPosition` @kind object;
  #L3a1ee4.  v2.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float` := v6;
  #L3a1ee8.  if v3 != v4 then goto L3a1f0a;
  #L3a1eec.  v2.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float` := v1;
  #L3a1ef0.  v1:= v7.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a1ef4.  call temp:= `contentBottom`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentBottom:()F` @kind virtual;
  #L3a1efa.  v1:= temp;
  #L3a1efc.  v1:= v1 - v0 @kind float;
  #L3a1efe.  v0:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1f02.  v0:= v0.`com.github.mikephil.charting.components.XAxis.mLabelRotatedHeight` @type ^`int`;
  #L3a1f06.  v0:= (`float`) v0 @kind i2f;
  #L3a1f08.  goto L3a1e68;
  #L3a1f0a.  v2.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float` := v5;
  #L3a1f0e.  v3:= v7.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a1f12.  call temp:= `contentTop`(v3) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L3a1f18.  v3:= temp;
  #L3a1f1a.  v3:= v3 - v0 @kind float;
  #L3a1f1c.  call `drawLabels`(v7, v8, v3, v2) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.drawLabels:(Landroid/graphics/Canvas;FLcom/github/mikephil/charting/utils/MPPointF;)V` @kind virtual;
  #L3a1f22.  goto L3a1ebe;
  #L3a1f24.  call `recycleInstance`(v2) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointF;)V` @kind static;
  #L3a1f2a.  return @kind void;
}
procedure `void` `renderAxisLine`(`com.github.mikephil.charting.renderer.XAxisRenderer` v7 @kind this, `android.graphics.Canvas` v8 @kind object) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderAxisLine:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a1f3c.  v0:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1f40.  call temp:= `isDrawAxisLineEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawAxisLineEnabled:()Z` @kind virtual;
  #L3a1f46.  v0:= temp;
  #L3a1f48.  if v0 == 0 then goto L3a2092;
  #L3a1f4c.  v0:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1f50.  call temp:= `isEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.isEnabled:()Z` @kind virtual;
  #L3a1f56.  v0:= temp;
  #L3a1f58.  if v0 != 0 then goto L3a1f60;
  #L3a1f5c.  goto L3a2092;
  #L3a1f60.  v0:= v7.`com.github.mikephil.charting.renderer.AxisRenderer.mAxisLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3a1f64.  v1:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1f68.  call temp:= `getAxisLineColor`(v1) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getAxisLineColor:()I` @kind virtual;
  #L3a1f6e.  v1:= temp;
  #L3a1f70.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L3a1f76.  v0:= v7.`com.github.mikephil.charting.renderer.AxisRenderer.mAxisLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3a1f7a.  v1:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1f7e.  call temp:= `getAxisLineWidth`(v1) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getAxisLineWidth:()F` @kind virtual;
  #L3a1f84.  v1:= temp;
  #L3a1f86.  call `setStrokeWidth`(v0, v1) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L3a1f8c.  v0:= v7.`com.github.mikephil.charting.renderer.AxisRenderer.mAxisLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3a1f90.  v1:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1f94.  call temp:= `getAxisLineDashPathEffect`(v1) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getAxisLineDashPathEffect:()Landroid/graphics/DashPathEffect;` @kind virtual;
  #L3a1f9a.  v1:= temp @kind object;
  #L3a1f9c.  call temp:= `setPathEffect`(v0, v1) @signature `Landroid/graphics/Paint;.setPathEffect:(Landroid/graphics/PathEffect;)Landroid/graphics/PathEffect;` @kind virtual;
  #L3a1fa2.  v0:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1fa6.  call temp:= `getPosition`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.getPosition:()Lcom/github/mikephil/charting/components/XAxis$XAxisPosition;` @kind virtual;
  #L3a1fac.  v0:= temp @kind object;
  #L3a1fae.  v1:= `@@com.github.mikephil.charting.components.XAxis$XAxisPosition.TOP` @type ^`com.github.mikephil.charting.components.XAxis$XAxisPosition` @kind object;
  #L3a1fb2.  if v0 == v1 then goto L3a1fde;
  #L3a1fb6.  v0:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1fba.  call temp:= `getPosition`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.getPosition:()Lcom/github/mikephil/charting/components/XAxis$XAxisPosition;` @kind virtual;
  #L3a1fc0.  v0:= temp @kind object;
  #L3a1fc2.  v1:= `@@com.github.mikephil.charting.components.XAxis$XAxisPosition.TOP_INSIDE` @type ^`com.github.mikephil.charting.components.XAxis$XAxisPosition` @kind object;
  #L3a1fc6.  if v0 == v1 then goto L3a1fde;
  #L3a1fca.  v0:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a1fce.  call temp:= `getPosition`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.getPosition:()Lcom/github/mikephil/charting/components/XAxis$XAxisPosition;` @kind virtual;
  #L3a1fd4.  v0:= temp @kind object;
  #L3a1fd6.  v1:= `@@com.github.mikephil.charting.components.XAxis$XAxisPosition.BOTH_SIDED` @type ^`com.github.mikephil.charting.components.XAxis$XAxisPosition` @kind object;
  #L3a1fda.  if v0 != v1 then goto L3a201a;
  #L3a1fde.  v0:= v7.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a1fe2.  call temp:= `contentLeft`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentLeft:()F` @kind virtual;
  #L3a1fe8.  v2:= temp;
  #L3a1fea.  v0:= v7.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a1fee.  call temp:= `contentTop`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L3a1ff4.  v3:= temp;
  #L3a1ff6.  v0:= v7.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a1ffa.  call temp:= `contentRight`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentRight:()F` @kind virtual;
  #L3a2000.  v4:= temp;
  #L3a2002.  v0:= v7.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a2006.  call temp:= `contentTop`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L3a200c.  v5:= temp;
  #L3a200e.  v6:= v7.`com.github.mikephil.charting.renderer.AxisRenderer.mAxisLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3a2012.  v1:= v8 @kind object;
  #L3a2014.  call `drawLine`(v1, v2, v3, v4, v5, v6) @signature `Landroid/graphics/Canvas;.drawLine:(FFFFLandroid/graphics/Paint;)V` @kind virtual;
  #L3a201a.  v0:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a201e.  call temp:= `getPosition`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.getPosition:()Lcom/github/mikephil/charting/components/XAxis$XAxisPosition;` @kind virtual;
  #L3a2024.  v0:= temp @kind object;
  #L3a2026.  v1:= `@@com.github.mikephil.charting.components.XAxis$XAxisPosition.BOTTOM` @type ^`com.github.mikephil.charting.components.XAxis$XAxisPosition` @kind object;
  #L3a202a.  if v0 == v1 then goto L3a2056;
  #L3a202e.  v0:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a2032.  call temp:= `getPosition`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.getPosition:()Lcom/github/mikephil/charting/components/XAxis$XAxisPosition;` @kind virtual;
  #L3a2038.  v0:= temp @kind object;
  #L3a203a.  v1:= `@@com.github.mikephil.charting.components.XAxis$XAxisPosition.BOTTOM_INSIDE` @type ^`com.github.mikephil.charting.components.XAxis$XAxisPosition` @kind object;
  #L3a203e.  if v0 == v1 then goto L3a2056;
  #L3a2042.  v0:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a2046.  call temp:= `getPosition`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.getPosition:()Lcom/github/mikephil/charting/components/XAxis$XAxisPosition;` @kind virtual;
  #L3a204c.  v0:= temp @kind object;
  #L3a204e.  v1:= `@@com.github.mikephil.charting.components.XAxis$XAxisPosition.BOTH_SIDED` @type ^`com.github.mikephil.charting.components.XAxis$XAxisPosition` @kind object;
  #L3a2052.  if v0 != v1 then goto L3a2092;
  #L3a2056.  v0:= v7.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a205a.  call temp:= `contentLeft`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentLeft:()F` @kind virtual;
  #L3a2060.  v2:= temp;
  #L3a2062.  v0:= v7.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a2066.  call temp:= `contentBottom`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentBottom:()F` @kind virtual;
  #L3a206c.  v3:= temp;
  #L3a206e.  v0:= v7.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a2072.  call temp:= `contentRight`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentRight:()F` @kind virtual;
  #L3a2078.  v4:= temp;
  #L3a207a.  v0:= v7.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a207e.  call temp:= `contentBottom`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentBottom:()F` @kind virtual;
  #L3a2084.  v5:= temp;
  #L3a2086.  v6:= v7.`com.github.mikephil.charting.renderer.AxisRenderer.mAxisLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3a208a.  v1:= v8 @kind object;
  #L3a208c.  call `drawLine`(v1, v2, v3, v4, v5, v6) @signature `Landroid/graphics/Canvas;.drawLine:(FFFFLandroid/graphics/Paint;)V` @kind virtual;
  #L3a2092.  return @kind void;
}
procedure `void` `renderGridLines`(`com.github.mikephil.charting.renderer.XAxisRenderer` v7 @kind this, `android.graphics.Canvas` v8 @kind object) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderGridLines:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a20a4.  v0:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a20a8.  call temp:= `isDrawGridLinesEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawGridLinesEnabled:()Z` @kind virtual;
  #L3a20ae.  v0:= temp;
  #L3a20b0.  if v0 == 0 then goto L3a2178;
  #L3a20b4.  v0:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a20b8.  call temp:= `isEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.isEnabled:()Z` @kind virtual;
  #L3a20be.  v0:= temp;
  #L3a20c0.  if v0 != 0 then goto L3a20c6;
  #L3a20c4.  goto L3a2178;
  #L3a20c6.  call temp:= `save`(v8) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L3a20cc.  v0:= temp;
  #L3a20ce.  call temp:= `getGridClippingRect`(v7) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.getGridClippingRect:()Landroid/graphics/RectF;` @kind virtual;
  #L3a20d4.  v1:= temp @kind object;
  #L3a20d6.  call temp:= `clipRect`(v8, v1) @signature `Landroid/graphics/Canvas;.clipRect:(Landroid/graphics/RectF;)Z` @kind virtual;
  #L3a20dc.  v1:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mRenderGridLinesBuffer` @type ^`float`[] @kind object;
  #L3a20e0.  v1:= length @variable v1;
  #L3a20e2.  v2:= v7.`com.github.mikephil.charting.renderer.AxisRenderer.mAxis` @type ^`com.github.mikephil.charting.components.AxisBase` @kind object;
  #L3a20e6.  v2:= v2.`com.github.mikephil.charting.components.AxisBase.mEntryCount` @type ^`int`;
  #L3a20ea.  v2:= v2 * 2;
  #L3a20ee.  if v1 == v2 then goto L3a2106;
  #L3a20f2.  v1:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a20f6.  v1:= v1.`com.github.mikephil.charting.components.AxisBase.mEntryCount` @type ^`int`;
  #L3a20fa.  v1:= v1 * 2;
  #L3a20fe.  v1:= new `float`[v1];
  #L3a2102.  v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mRenderGridLinesBuffer` @type ^`float`[] := v1 @kind object;
  #L3a2106.  v1:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mRenderGridLinesBuffer` @type ^`float`[] @kind object;
  #L3a210a.  v2:= 0I;
  #L3a210c.  v3:= 0I;
  #L3a210e.  v4:= length @variable v1;
  #L3a2110.  if v3 >= v4 then goto L3a213a;
  #L3a2114.  v4:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a2118.  v4:= v4.`com.github.mikephil.charting.components.AxisBase.mEntries` @type ^`float`[] @kind object;
  #L3a211c.  v5:= v3 / 2;
  #L3a2120.  v6:= v4[v5];
  #L3a2124.  v1[v3]:= v6;
  #L3a2128.  v6:= v3 + 1;
  #L3a212c.  v4:= v4[v5];
  #L3a2130.  v1[v6]:= v4;
  #L3a2134.  v3:= v3 + 2;
  #L3a2138.  goto L3a210e;
  #L3a213a.  v3:= v7.`com.github.mikephil.charting.renderer.AxisRenderer.mTrans` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L3a213e.  call `pointValuesToPixel`(v3, v1) @signature `Lcom/github/mikephil/charting/utils/Transformer;.pointValuesToPixel:([F)V` @kind virtual;
  #L3a2144.  call `setupGridPaint`(v7) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.setupGridPaint:()V` @kind virtual;
  #L3a214a.  v3:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mRenderGridLinesPath` @type ^`android.graphics.Path` @kind object;
  #L3a214e.  call `reset`(v3) @signature `Landroid/graphics/Path;.reset:()V` @kind virtual;
  #L3a2154.  v4:= length @variable v1;
  #L3a2156.  if v2 >= v4 then goto L3a2172;
  #L3a215a.  v4:= v1[v2];
  #L3a215e.  v5:= v2 + 1;
  #L3a2162.  v5:= v1[v5];
  #L3a2166.  call `drawGridLine`(v7, v8, v4, v5, v3) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.drawGridLine:(Landroid/graphics/Canvas;FFLandroid/graphics/Path;)V` @kind virtual;
  #L3a216c.  v2:= v2 + 2;
  #L3a2170.  goto L3a2154;
  #L3a2172.  call `restoreToCount`(v8, v0) @signature `Landroid/graphics/Canvas;.restoreToCount:(I)V` @kind virtual;
  #L3a2178.  return @kind void;
}
procedure `void` `renderLimitLineLabel`(`com.github.mikephil.charting.renderer.XAxisRenderer` v5 @kind this, `android.graphics.Canvas` v6 @kind object, `com.github.mikephil.charting.components.LimitLine` v7 @kind object, `float`[] v8 @kind object, `float` v9 ) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderLimitLineLabel:(Landroid/graphics/Canvas;Lcom/github/mikephil/charting/components/LimitLine;[FF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a218c.  call temp:= `getLabel`(v7) @signature `Lcom/github/mikephil/charting/components/LimitLine;.getLabel:()Ljava/lang/String;` @kind virtual;
  #L3a2192.  v0:= temp @kind object;
  #L3a2194.  if v0 == 0 then goto L3a22d2;
  #L3a2198.  v1:= "" @kind object;
  #L3a219c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3a21a2.  v1:= temp;
  #L3a21a4.  if v1 != 0 then goto L3a22d2;
  #L3a21a8.  v1:= v5.`com.github.mikephil.charting.renderer.AxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3a21ac.  call temp:= `getTextStyle`(v7) @signature `Lcom/github/mikephil/charting/components/LimitLine;.getTextStyle:()Landroid/graphics/Paint$Style;` @kind virtual;
  #L3a21b2.  v2:= temp @kind object;
  #L3a21b4.  call `setStyle`(v1, v2) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L3a21ba.  v1:= v5.`com.github.mikephil.charting.renderer.AxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3a21be.  v2:= 0I;
  #L3a21c0.  call temp:= `setPathEffect`(v1, v2) @signature `Landroid/graphics/Paint;.setPathEffect:(Landroid/graphics/PathEffect;)Landroid/graphics/PathEffect;` @kind virtual;
  #L3a21c6.  v1:= v5.`com.github.mikephil.charting.renderer.AxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3a21ca.  call temp:= `getTextColor`(v7) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.getTextColor:()I` @kind virtual;
  #L3a21d0.  v2:= temp;
  #L3a21d2.  call `setColor`(v1, v2) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L3a21d8.  v1:= v5.`com.github.mikephil.charting.renderer.AxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3a21dc.  v2:= 0.5F;
  #L3a21e0.  call `setStrokeWidth`(v1, v2) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L3a21e6.  v1:= v5.`com.github.mikephil.charting.renderer.AxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3a21ea.  call temp:= `getTextSize`(v7) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.getTextSize:()F` @kind virtual;
  #L3a21f0.  v2:= temp;
  #L3a21f2.  call `setTextSize`(v1, v2) @signature `Landroid/graphics/Paint;.setTextSize:(F)V` @kind virtual;
  #L3a21f8.  call temp:= `getLineWidth`(v7) @signature `Lcom/github/mikephil/charting/components/LimitLine;.getLineWidth:()F` @kind virtual;
  #L3a21fe.  v1:= temp;
  #L3a2200.  call temp:= `getXOffset`(v7) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.getXOffset:()F` @kind virtual;
  #L3a2206.  v2:= temp;
  #L3a2208.  v1:= v1 + v2 @kind float;
  #L3a220a.  call temp:= `getLabelPosition`(v7) @signature `Lcom/github/mikephil/charting/components/LimitLine;.getLabelPosition:()Lcom/github/mikephil/charting/components/LimitLine$LimitLabelPosition;` @kind virtual;
  #L3a2210.  v7:= temp @kind object;
  #L3a2212.  v2:= `@@com.github.mikephil.charting.components.LimitLine$LimitLabelPosition.RIGHT_TOP` @type ^`com.github.mikephil.charting.components.LimitLine$LimitLabelPosition` @kind object;
  #L3a2216.  v3:= 0I;
  #L3a2218.  if v7 != v2 then goto L3a225a;
  #L3a221c.  v7:= v5.`com.github.mikephil.charting.renderer.AxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3a2220.  call temp:= `calcTextHeight`(v7, v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.calcTextHeight:(Landroid/graphics/Paint;Ljava/lang/String;)I` @kind static;
  #L3a2226.  v7:= temp;
  #L3a2228.  v7:= (`float`) v7 @kind i2f;
  #L3a222a.  v2:= v5.`com.github.mikephil.charting.renderer.AxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3a222e.  v4:= `@@android.graphics.Paint$Align.LEFT` @type ^`android.graphics.Paint$Align` @kind object;
  #L3a2232.  call `setTextAlign`(v2, v4) @signature `Landroid/graphics/Paint;.setTextAlign:(Landroid/graphics/Paint$Align;)V` @kind virtual;
  #L3a2238.  v8:= v8[v3];
  #L3a223c.  v8:= v8 + v1 @kind float;
  #L3a223e.  v1:= v5.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a2242.  call temp:= `contentTop`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L3a2248.  v1:= temp;
  #L3a224a.  v1:= v1 + v9 @kind float;
  #L3a224c.  v1:= v1 + v7 @kind float;
  #L3a224e.  v7:= v5.`com.github.mikephil.charting.renderer.AxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3a2252.  call `drawText`(v6, v0, v8, v1, v7) @signature `Landroid/graphics/Canvas;.drawText:(Ljava/lang/String;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L3a2258.  goto L3a22d2;
  #L3a225a.  v2:= `@@com.github.mikephil.charting.components.LimitLine$LimitLabelPosition.RIGHT_BOTTOM` @type ^`com.github.mikephil.charting.components.LimitLine$LimitLabelPosition` @kind object;
  #L3a225e.  if v7 != v2 then goto L3a2290;
  #L3a2262.  v7:= v5.`com.github.mikephil.charting.renderer.AxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3a2266.  v2:= `@@android.graphics.Paint$Align.LEFT` @type ^`android.graphics.Paint$Align` @kind object;
  #L3a226a.  call `setTextAlign`(v7, v2) @signature `Landroid/graphics/Paint;.setTextAlign:(Landroid/graphics/Paint$Align;)V` @kind virtual;
  #L3a2270.  v7:= v8[v3];
  #L3a2274.  v7:= v7 + v1 @kind float;
  #L3a2276.  v8:= v5.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a227a.  call temp:= `contentBottom`(v8) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentBottom:()F` @kind virtual;
  #L3a2280.  v8:= temp;
  #L3a2282.  v8:= v8 - v9 @kind float;
  #L3a2284.  v9:= v5.`com.github.mikephil.charting.renderer.AxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3a2288.  call `drawText`(v6, v0, v7, v8, v9) @signature `Landroid/graphics/Canvas;.drawText:(Ljava/lang/String;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L3a228e.  goto L3a22d2;
  #L3a2290.  v2:= `@@com.github.mikephil.charting.components.LimitLine$LimitLabelPosition.LEFT_TOP` @type ^`com.github.mikephil.charting.components.LimitLine$LimitLabelPosition` @kind object;
  #L3a2294.  if v7 != v2 then goto L3a22bc;
  #L3a2298.  v7:= v5.`com.github.mikephil.charting.renderer.AxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3a229c.  v2:= `@@android.graphics.Paint$Align.RIGHT` @type ^`android.graphics.Paint$Align` @kind object;
  #L3a22a0.  call `setTextAlign`(v7, v2) @signature `Landroid/graphics/Paint;.setTextAlign:(Landroid/graphics/Paint$Align;)V` @kind virtual;
  #L3a22a6.  v7:= v5.`com.github.mikephil.charting.renderer.AxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3a22aa.  call temp:= `calcTextHeight`(v7, v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.calcTextHeight:(Landroid/graphics/Paint;Ljava/lang/String;)I` @kind static;
  #L3a22b0.  v7:= temp;
  #L3a22b2.  v7:= (`float`) v7 @kind i2f;
  #L3a22b4.  v8:= v8[v3];
  #L3a22b8.  v8:= v8 - v1 @kind float;
  #L3a22ba.  goto L3a223e;
  #L3a22bc.  v7:= v5.`com.github.mikephil.charting.renderer.AxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3a22c0.  v2:= `@@android.graphics.Paint$Align.RIGHT` @type ^`android.graphics.Paint$Align` @kind object;
  #L3a22c4.  call `setTextAlign`(v7, v2) @signature `Landroid/graphics/Paint;.setTextAlign:(Landroid/graphics/Paint$Align;)V` @kind virtual;
  #L3a22ca.  v7:= v8[v3];
  #L3a22ce.  v7:= v7 - v1 @kind float;
  #L3a22d0.  goto L3a2276;
  #L3a22d2.  return @kind void;
}
procedure `void` `renderLimitLineLine`(`com.github.mikephil.charting.renderer.XAxisRenderer` v5 @kind this, `android.graphics.Canvas` v6 @kind object, `com.github.mikephil.charting.components.LimitLine` v7 @kind object, `float`[] v8 @kind object) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderLimitLineLine:(Landroid/graphics/Canvas;Lcom/github/mikephil/charting/components/LimitLine;[F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a22e4.  v0:= v5.`com.github.mikephil.charting.renderer.XAxisRenderer.a` @type ^`float`[] @kind object;
  #L3a22e8.  v1:= 0I;
  #L3a22ea.  v2:= v8[v1];
  #L3a22ee.  v0[v1]:= v2;
  #L3a22f2.  v2:= v5.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a22f6.  call temp:= `contentTop`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L3a22fc.  v2:= temp;
  #L3a22fe.  v3:= 1I;
  #L3a2300.  v0[v3]:= v2;
  #L3a2304.  v0:= v5.`com.github.mikephil.charting.renderer.XAxisRenderer.a` @type ^`float`[] @kind object;
  #L3a2308.  v8:= v8[v1];
  #L3a230c.  v2:= 2I;
  #L3a230e.  v0[v2]:= v8;
  #L3a2312.  v8:= v5.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a2316.  call temp:= `contentBottom`(v8) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentBottom:()F` @kind virtual;
  #L3a231c.  v8:= temp;
  #L3a231e.  v4:= 3I;
  #L3a2320.  v0[v4]:= v8;
  #L3a2324.  v8:= v5.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePath` @type ^`android.graphics.Path` @kind object;
  #L3a2328.  call `reset`(v8) @signature `Landroid/graphics/Path;.reset:()V` @kind virtual;
  #L3a232e.  v8:= v5.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePath` @type ^`android.graphics.Path` @kind object;
  #L3a2332.  v0:= v5.`com.github.mikephil.charting.renderer.XAxisRenderer.a` @type ^`float`[] @kind object;
  #L3a2336.  v1:= v0[v1];
  #L3a233a.  v0:= v0[v3];
  #L3a233e.  call `moveTo`(v8, v1, v0) @signature `Landroid/graphics/Path;.moveTo:(FF)V` @kind virtual;
  #L3a2344.  v8:= v5.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePath` @type ^`android.graphics.Path` @kind object;
  #L3a2348.  v0:= v5.`com.github.mikephil.charting.renderer.XAxisRenderer.a` @type ^`float`[] @kind object;
  #L3a234c.  v1:= v0[v2];
  #L3a2350.  v0:= v0[v4];
  #L3a2354.  call `lineTo`(v8, v1, v0) @signature `Landroid/graphics/Path;.lineTo:(FF)V` @kind virtual;
  #L3a235a.  v8:= v5.`com.github.mikephil.charting.renderer.AxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3a235e.  v0:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L3a2362.  call `setStyle`(v8, v0) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L3a2368.  v8:= v5.`com.github.mikephil.charting.renderer.AxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3a236c.  call temp:= `getLineColor`(v7) @signature `Lcom/github/mikephil/charting/components/LimitLine;.getLineColor:()I` @kind virtual;
  #L3a2372.  v0:= temp;
  #L3a2374.  call `setColor`(v8, v0) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L3a237a.  v8:= v5.`com.github.mikephil.charting.renderer.AxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3a237e.  call temp:= `getLineWidth`(v7) @signature `Lcom/github/mikephil/charting/components/LimitLine;.getLineWidth:()F` @kind virtual;
  #L3a2384.  v0:= temp;
  #L3a2386.  call `setStrokeWidth`(v8, v0) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L3a238c.  v8:= v5.`com.github.mikephil.charting.renderer.AxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3a2390.  call temp:= `getDashPathEffect`(v7) @signature `Lcom/github/mikephil/charting/components/LimitLine;.getDashPathEffect:()Landroid/graphics/DashPathEffect;` @kind virtual;
  #L3a2396.  v7:= temp @kind object;
  #L3a2398.  call temp:= `setPathEffect`(v8, v7) @signature `Landroid/graphics/Paint;.setPathEffect:(Landroid/graphics/PathEffect;)Landroid/graphics/PathEffect;` @kind virtual;
  #L3a239e.  v7:= v5.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePath` @type ^`android.graphics.Path` @kind object;
  #L3a23a2.  v8:= v5.`com.github.mikephil.charting.renderer.AxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3a23a6.  call `drawPath`(v6, v7, v8) @signature `Landroid/graphics/Canvas;.drawPath:(Landroid/graphics/Path;Landroid/graphics/Paint;)V` @kind virtual;
  #L3a23ac.  return @kind void;
}
procedure `void` `renderLimitLines`(`com.github.mikephil.charting.renderer.XAxisRenderer` v10 @kind this, `android.graphics.Canvas` v11 @kind object) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderLimitLines:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3a23c0.  v0:= v10.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a23c4.  call temp:= `getLimitLines`(v0) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getLimitLines:()Ljava/util/List;` @kind virtual;
  #L3a23ca.  v0:= temp @kind object;
  #L3a23cc.  if v0 == 0 then goto L3a2494;
  #L3a23d0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a23d6.  v1:= temp;
  #L3a23d8.  if v1 > 0 then goto L3a23de;
  #L3a23dc.  goto L3a2494;
  #L3a23de.  v1:= v10.`com.github.mikephil.charting.renderer.XAxisRenderer.mRenderLimitLinesBuffer` @type ^`float`[] @kind object;
  #L3a23e2.  v2:= 0I;
  #L3a23e4.  v3:= 0I;
  #L3a23e6.  v1[v2]:= v3;
  #L3a23ea.  v4:= 1I;
  #L3a23ec.  v1[v4]:= v3;
  #L3a23f0.  v5:= 0I;
  #L3a23f2.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a23f8.  v6:= temp;
  #L3a23fa.  if v5 >= v6 then goto L3a2494;
  #L3a23fe.  call temp:= `get`(v0, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a2404.  v6:= temp @kind object;
  #L3a2406.  v6:= (`com.github.mikephil.charting.components.LimitLine`) v6 @kind object;
  #L3a240a.  call temp:= `isEnabled`(v6) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.isEnabled:()Z` @kind virtual;
  #L3a2410.  v7:= temp;
  #L3a2412.  if v7 != 0 then goto L3a2418;
  #L3a2416.  goto L3a248e;
  #L3a2418.  call temp:= `save`(v11) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L3a241e.  v7:= temp;
  #L3a2420.  v8:= v10.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLineClippingRect` @type ^`android.graphics.RectF` @kind object;
  #L3a2424.  v9:= v10.`com.github.mikephil.charting.renderer.Renderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3a2428.  call temp:= `getContentRect`(v9) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getContentRect:()Landroid/graphics/RectF;` @kind virtual;
  #L3a242e.  v9:= temp @kind object;
  #L3a2430.  call `set`(v8, v9) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/RectF;)V` @kind virtual;
  #L3a2436.  v8:= v10.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLineClippingRect` @type ^`android.graphics.RectF` @kind object;
  #L3a243a.  call temp:= `getLineWidth`(v6) @signature `Lcom/github/mikephil/charting/components/LimitLine;.getLineWidth:()F` @kind virtual;
  #L3a2440.  v9:= temp;
  #L3a2442.  v9:= -v9 @kind float;
  #L3a2444.  call `inset`(v8, v9, v3) @signature `Landroid/graphics/RectF;.inset:(FF)V` @kind virtual;
  #L3a244a.  v8:= v10.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLineClippingRect` @type ^`android.graphics.RectF` @kind object;
  #L3a244e.  call temp:= `clipRect`(v11, v8) @signature `Landroid/graphics/Canvas;.clipRect:(Landroid/graphics/RectF;)Z` @kind virtual;
  #L3a2454.  call temp:= `getLimit`(v6) @signature `Lcom/github/mikephil/charting/components/LimitLine;.getLimit:()F` @kind virtual;
  #L3a245a.  v8:= temp;
  #L3a245c.  v1[v2]:= v8;
  #L3a2460.  v1[v4]:= v3;
  #L3a2464.  v8:= v10.`com.github.mikephil.charting.renderer.AxisRenderer.mTrans` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L3a2468.  call `pointValuesToPixel`(v8, v1) @signature `Lcom/github/mikephil/charting/utils/Transformer;.pointValuesToPixel:([F)V` @kind virtual;
  #L3a246e.  call `renderLimitLineLine`(v10, v11, v6, v1) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderLimitLineLine:(Landroid/graphics/Canvas;Lcom/github/mikephil/charting/components/LimitLine;[F)V` @kind virtual;
  #L3a2474.  v8:= 2.0F;
  #L3a2478.  call temp:= `getYOffset`(v6) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.getYOffset:()F` @kind virtual;
  #L3a247e.  v9:= temp;
  #L3a2480.  v9:= v9 + v8 @kind float;
  #L3a2482.  call `renderLimitLineLabel`(v10, v11, v6, v1, v9) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderLimitLineLabel:(Landroid/graphics/Canvas;Lcom/github/mikephil/charting/components/LimitLine;[FF)V` @kind virtual;
  #L3a2488.  call `restoreToCount`(v11, v7) @signature `Landroid/graphics/Canvas;.restoreToCount:(I)V` @kind virtual;
  #L3a248e.  v5:= v5 + 1;
  #L3a2492.  goto L3a23f2;
  #L3a2494.  return @kind void;
}
procedure `void` `setupGridPaint`(`com.github.mikephil.charting.renderer.XAxisRenderer` v2 @kind this) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.setupGridPaint:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3a24a8.  v0:= v2.`com.github.mikephil.charting.renderer.AxisRenderer.mGridPaint` @type ^`android.graphics.Paint` @kind object;
  #L3a24ac.  v1:= v2.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a24b0.  call temp:= `getGridColor`(v1) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getGridColor:()I` @kind virtual;
  #L3a24b6.  v1:= temp;
  #L3a24b8.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L3a24be.  v0:= v2.`com.github.mikephil.charting.renderer.AxisRenderer.mGridPaint` @type ^`android.graphics.Paint` @kind object;
  #L3a24c2.  v1:= v2.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a24c6.  call temp:= `getGridLineWidth`(v1) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getGridLineWidth:()F` @kind virtual;
  #L3a24cc.  v1:= temp;
  #L3a24ce.  call `setStrokeWidth`(v0, v1) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L3a24d4.  v0:= v2.`com.github.mikephil.charting.renderer.AxisRenderer.mGridPaint` @type ^`android.graphics.Paint` @kind object;
  #L3a24d8.  v1:= v2.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3a24dc.  call temp:= `getGridDashPathEffect`(v1) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getGridDashPathEffect:()Landroid/graphics/DashPathEffect;` @kind virtual;
  #L3a24e2.  v1:= temp @kind object;
  #L3a24e4.  call temp:= `setPathEffect`(v0, v1) @signature `Landroid/graphics/Paint;.setPathEffect:(Landroid/graphics/PathEffect;)Landroid/graphics/PathEffect;` @kind virtual;
  #L3a24ea.  return @kind void;
}
