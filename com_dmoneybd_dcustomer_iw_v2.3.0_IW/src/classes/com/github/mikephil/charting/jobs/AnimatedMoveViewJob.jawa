record `com.github.mikephil.charting.jobs.AnimatedMoveViewJob` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.jobs.AnimatedViewPortJob` @kind class {
}
global `com.github.mikephil.charting.utils.ObjectPool` `@@com.github.mikephil.charting.jobs.AnimatedMoveViewJob.pool` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L395914.  v10:= new `com.github.mikephil.charting.jobs.AnimatedMoveViewJob`;
  #L395918.  v1:= 0I;
  #L39591a.  v2:= 0I;
  #L39591c.  v3:= 0I;
  #L39591e.  v4:= 0I;
  #L395920.  v5:= 0I;
  #L395922.  v6:= 0I;
  #L395924.  v7:= 0I;
  #L395926.  v8:= 0L;
  #L39592a.  v0:= v10 @kind object;
  #L39592c.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;FFJ)V` @kind direct;
  #L395932.  v0:= 4I;
  #L395934.  call temp:= `create`(v0, v10) @signature `Lcom/github/mikephil/charting/utils/ObjectPool;.create:(ILcom/github/mikephil/charting/utils/ObjectPool$Poolable;)Lcom/github/mikephil/charting/utils/ObjectPool;` @kind static;
  #L39593a.  v0:= temp @kind object;
  #L39593c.  `@@com.github.mikephil.charting.jobs.AnimatedMoveViewJob.pool` @type ^`com.github.mikephil.charting.utils.ObjectPool` := v0 @kind object;
  #L395940.  v1:= 0.5F;
  #L395944.  call `setReplenishPercentage`(v0, v1) @signature `Lcom/github/mikephil/charting/utils/ObjectPool;.setReplenishPercentage:(F)V` @kind virtual;
  #L39594a.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.jobs.AnimatedMoveViewJob` v0 @kind this, `com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind object, `float` v2 , `float` v3 , `com.github.mikephil.charting.utils.Transformer` v4 @kind object, `android.view.View` v5 @kind object, `float` v6 , `float` v7 , `long` v8 ) @signature `Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;FFJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39595c.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/github/mikephil/charting/jobs/AnimatedViewPortJob;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;FFJ)V` @kind direct;
  #L395962.  return @kind void;
}
procedure `com.github.mikephil.charting.jobs.AnimatedMoveViewJob` `getInstance`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind object, `float` v2 , `float` v3 , `com.github.mikephil.charting.utils.Transformer` v4 @kind object, `android.view.View` v5 @kind object, `float` v6 , `float` v7 , `long` v8 ) @signature `Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;.getInstance:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;FFJ)Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L39589c.  v0:= `@@com.github.mikephil.charting.jobs.AnimatedMoveViewJob.pool` @type ^`com.github.mikephil.charting.utils.ObjectPool` @kind object;
  #L3958a0.  call temp:= `get`(v0) @signature `Lcom/github/mikephil/charting/utils/ObjectPool;.get:()Lcom/github/mikephil/charting/utils/ObjectPool$Poolable;` @kind virtual;
  #L3958a6.  v0:= temp @kind object;
  #L3958a8.  v0:= (`com.github.mikephil.charting.jobs.AnimatedMoveViewJob`) v0 @kind object;
  #L3958ac.  v0.`com.github.mikephil.charting.jobs.ViewPortJob.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` := v1 @kind object;
  #L3958b0.  v0.`com.github.mikephil.charting.jobs.ViewPortJob.xValue` @type ^`float` := v2;
  #L3958b4.  v0.`com.github.mikephil.charting.jobs.ViewPortJob.yValue` @type ^`float` := v3;
  #L3958b8.  v0.`com.github.mikephil.charting.jobs.ViewPortJob.mTrans` @type ^`com.github.mikephil.charting.utils.Transformer` := v4 @kind object;
  #L3958bc.  v0.`com.github.mikephil.charting.jobs.ViewPortJob.view` @type ^`android.view.View` := v5 @kind object;
  #L3958c0.  v0.`com.github.mikephil.charting.jobs.AnimatedViewPortJob.xOrigin` @type ^`float` := v6;
  #L3958c4.  v0.`com.github.mikephil.charting.jobs.AnimatedViewPortJob.yOrigin` @type ^`float` := v7;
  #L3958c8.  v1:= v0.`com.github.mikephil.charting.jobs.AnimatedViewPortJob.animator` @type ^`android.animation.ObjectAnimator` @kind object;
  #L3958cc.  call temp:= `setDuration`(v1, v8) @signature `Landroid/animation/ObjectAnimator;.setDuration:(J)Landroid/animation/ObjectAnimator;` @kind virtual;
  #L3958d2.  return v0 @kind object;
}
procedure `void` `recycleInstance`(`com.github.mikephil.charting.jobs.AnimatedMoveViewJob` v1 @kind object) @signature `Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;.recycleInstance:(Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3959d8.  v0:= `@@com.github.mikephil.charting.jobs.AnimatedMoveViewJob.pool` @type ^`com.github.mikephil.charting.utils.ObjectPool` @kind object;
  #L3959dc.  call `recycle`(v0, v1) @signature `Lcom/github/mikephil/charting/utils/ObjectPool;.recycle:(Lcom/github/mikephil/charting/utils/ObjectPool$Poolable;)V` @kind virtual;
  #L3959e2.  return @kind void;
}
procedure `com.github.mikephil.charting.utils.ObjectPool$Poolable` `instantiate`(`com.github.mikephil.charting.jobs.AnimatedMoveViewJob` v11 @kind this) @signature `Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;.instantiate:()Lcom/github/mikephil/charting/utils/ObjectPool$Poolable;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3958e4.  v10:= new `com.github.mikephil.charting.jobs.AnimatedMoveViewJob`;
  #L3958e8.  v1:= 0I;
  #L3958ea.  v2:= 0I;
  #L3958ec.  v3:= 0I;
  #L3958ee.  v4:= 0I;
  #L3958f0.  v5:= 0I;
  #L3958f2.  v6:= 0I;
  #L3958f4.  v7:= 0I;
  #L3958f6.  v8:= 0L;
  #L3958fa.  v0:= v10 @kind object;
  #L3958fc.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;FFJ)V` @kind direct;
  #L395902.  return v10 @kind object;
}
procedure `void` `onAnimationUpdate`(`com.github.mikephil.charting.jobs.AnimatedMoveViewJob` v3 @kind this, `android.animation.ValueAnimator` v4 @kind object) @signature `Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;.onAnimationUpdate:(Landroid/animation/ValueAnimator;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L395974.  v4:= v3.`com.github.mikephil.charting.jobs.ViewPortJob.pts` @type ^`float`[] @kind object;
  #L395978.  v0:= v3.`com.github.mikephil.charting.jobs.AnimatedViewPortJob.xOrigin` @type ^`float`;
  #L39597c.  v1:= v3.`com.github.mikephil.charting.jobs.ViewPortJob.xValue` @type ^`float`;
  #L395980.  v1:= v1 - v0 @kind float;
  #L395982.  v2:= v3.`com.github.mikephil.charting.jobs.AnimatedViewPortJob.phase` @type ^`float`;
  #L395986.  v1:= v1 * v2 @kind float;
  #L39598a.  v0:= v0 + v1 @kind float;
  #L39598c.  v1:= 0I;
  #L39598e.  v4[v1]:= v0;
  #L395992.  v0:= v3.`com.github.mikephil.charting.jobs.AnimatedViewPortJob.yOrigin` @type ^`float`;
  #L395996.  v1:= v3.`com.github.mikephil.charting.jobs.ViewPortJob.yValue` @type ^`float`;
  #L39599a.  v1:= v1 - v0 @kind float;
  #L39599c.  v1:= v1 * v2 @kind float;
  #L3959a0.  v0:= v0 + v1 @kind float;
  #L3959a2.  v1:= 1I;
  #L3959a4.  v4[v1]:= v0;
  #L3959a8.  v0:= v3.`com.github.mikephil.charting.jobs.ViewPortJob.mTrans` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L3959ac.  call `pointValuesToPixel`(v0, v4) @signature `Lcom/github/mikephil/charting/utils/Transformer;.pointValuesToPixel:([F)V` @kind virtual;
  #L3959b2.  v4:= v3.`com.github.mikephil.charting.jobs.ViewPortJob.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3959b6.  v0:= v3.`com.github.mikephil.charting.jobs.ViewPortJob.pts` @type ^`float`[] @kind object;
  #L3959ba.  v1:= v3.`com.github.mikephil.charting.jobs.ViewPortJob.view` @type ^`android.view.View` @kind object;
  #L3959be.  call `centerViewPort`(v4, v0, v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.centerViewPort:([FLandroid/view/View;)V` @kind virtual;
  #L3959c4.  return @kind void;
}
procedure `void` `recycleSelf`(`com.github.mikephil.charting.jobs.AnimatedMoveViewJob` v0 @kind this) @signature `Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;.recycleSelf:()V` @AccessFlag PUBLIC {
    temp;

  #L3959f4.  call `recycleInstance`(v0) @signature `Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;.recycleInstance:(Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;)V` @kind static;
  #L3959fa.  return @kind void;
}
