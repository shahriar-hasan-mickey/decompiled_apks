record `com.github.mikephil.charting.jobs.MoveViewJob` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.jobs.ViewPortJob` @kind class {
}
global `com.github.mikephil.charting.utils.ObjectPool` `@@com.github.mikephil.charting.jobs.MoveViewJob.pool` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/github/mikephil/charting/jobs/MoveViewJob;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L395ef4.  v6:= new `com.github.mikephil.charting.jobs.MoveViewJob`;
  #L395ef8.  v1:= 0I;
  #L395efa.  v2:= 0I;
  #L395efc.  v3:= 0I;
  #L395efe.  v4:= 0I;
  #L395f00.  v5:= 0I;
  #L395f02.  v0:= v6 @kind object;
  #L395f04.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/github/mikephil/charting/jobs/MoveViewJob;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;)V` @kind direct;
  #L395f0a.  v0:= 2I;
  #L395f0c.  call temp:= `create`(v0, v6) @signature `Lcom/github/mikephil/charting/utils/ObjectPool;.create:(ILcom/github/mikephil/charting/utils/ObjectPool$Poolable;)Lcom/github/mikephil/charting/utils/ObjectPool;` @kind static;
  #L395f12.  v0:= temp @kind object;
  #L395f14.  `@@com.github.mikephil.charting.jobs.MoveViewJob.pool` @type ^`com.github.mikephil.charting.utils.ObjectPool` := v0 @kind object;
  #L395f18.  v1:= 0.5F;
  #L395f1c.  call `setReplenishPercentage`(v0, v1) @signature `Lcom/github/mikephil/charting/utils/ObjectPool;.setReplenishPercentage:(F)V` @kind virtual;
  #L395f22.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.jobs.MoveViewJob` v0 @kind this, `com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind object, `float` v2 , `float` v3 , `com.github.mikephil.charting.utils.Transformer` v4 @kind object, `android.view.View` v5 @kind object) @signature `Lcom/github/mikephil/charting/jobs/MoveViewJob;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L395f34.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/github/mikephil/charting/jobs/ViewPortJob;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;)V` @kind direct;
  #L395f3a.  return @kind void;
}
procedure `com.github.mikephil.charting.jobs.MoveViewJob` `getInstance`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind object, `float` v2 , `float` v3 , `com.github.mikephil.charting.utils.Transformer` v4 @kind object, `android.view.View` v5 @kind object) @signature `Lcom/github/mikephil/charting/jobs/MoveViewJob;.getInstance:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;)Lcom/github/mikephil/charting/jobs/MoveViewJob;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L395e88.  v0:= `@@com.github.mikephil.charting.jobs.MoveViewJob.pool` @type ^`com.github.mikephil.charting.utils.ObjectPool` @kind object;
  #L395e8c.  call temp:= `get`(v0) @signature `Lcom/github/mikephil/charting/utils/ObjectPool;.get:()Lcom/github/mikephil/charting/utils/ObjectPool$Poolable;` @kind virtual;
  #L395e92.  v0:= temp @kind object;
  #L395e94.  v0:= (`com.github.mikephil.charting.jobs.MoveViewJob`) v0 @kind object;
  #L395e98.  v0.`com.github.mikephil.charting.jobs.ViewPortJob.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` := v1 @kind object;
  #L395e9c.  v0.`com.github.mikephil.charting.jobs.ViewPortJob.xValue` @type ^`float` := v2;
  #L395ea0.  v0.`com.github.mikephil.charting.jobs.ViewPortJob.yValue` @type ^`float` := v3;
  #L395ea4.  v0.`com.github.mikephil.charting.jobs.ViewPortJob.mTrans` @type ^`com.github.mikephil.charting.utils.Transformer` := v4 @kind object;
  #L395ea8.  v0.`com.github.mikephil.charting.jobs.ViewPortJob.view` @type ^`android.view.View` := v5 @kind object;
  #L395eac.  return v0 @kind object;
}
procedure `void` `recycleInstance`(`com.github.mikephil.charting.jobs.MoveViewJob` v1 @kind object) @signature `Lcom/github/mikephil/charting/jobs/MoveViewJob;.recycleInstance:(Lcom/github/mikephil/charting/jobs/MoveViewJob;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L395f4c.  v0:= `@@com.github.mikephil.charting.jobs.MoveViewJob.pool` @type ^`com.github.mikephil.charting.utils.ObjectPool` @kind object;
  #L395f50.  call `recycle`(v0, v1) @signature `Lcom/github/mikephil/charting/utils/ObjectPool;.recycle:(Lcom/github/mikephil/charting/utils/ObjectPool$Poolable;)V` @kind virtual;
  #L395f56.  return @kind void;
}
procedure `com.github.mikephil.charting.utils.ObjectPool$Poolable` `instantiate`(`com.github.mikephil.charting.jobs.MoveViewJob` v7 @kind this) @signature `Lcom/github/mikephil/charting/jobs/MoveViewJob;.instantiate:()Lcom/github/mikephil/charting/utils/ObjectPool$Poolable;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L395ec0.  v6:= new `com.github.mikephil.charting.jobs.MoveViewJob`;
  #L395ec4.  v1:= v7.`com.github.mikephil.charting.jobs.ViewPortJob.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L395ec8.  v2:= v7.`com.github.mikephil.charting.jobs.ViewPortJob.xValue` @type ^`float`;
  #L395ecc.  v3:= v7.`com.github.mikephil.charting.jobs.ViewPortJob.yValue` @type ^`float`;
  #L395ed0.  v4:= v7.`com.github.mikephil.charting.jobs.ViewPortJob.mTrans` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L395ed4.  v5:= v7.`com.github.mikephil.charting.jobs.ViewPortJob.view` @type ^`android.view.View` @kind object;
  #L395ed8.  v0:= v6 @kind object;
  #L395eda.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/github/mikephil/charting/jobs/MoveViewJob;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;)V` @kind direct;
  #L395ee0.  return v6 @kind object;
}
procedure `void` `run`(`com.github.mikephil.charting.jobs.MoveViewJob` v3 @kind this) @signature `Lcom/github/mikephil/charting/jobs/MoveViewJob;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L395f68.  v0:= v3.`com.github.mikephil.charting.jobs.ViewPortJob.pts` @type ^`float`[] @kind object;
  #L395f6c.  v1:= v3.`com.github.mikephil.charting.jobs.ViewPortJob.xValue` @type ^`float`;
  #L395f70.  v2:= 0I;
  #L395f72.  v0[v2]:= v1;
  #L395f76.  v1:= v3.`com.github.mikephil.charting.jobs.ViewPortJob.yValue` @type ^`float`;
  #L395f7a.  v2:= 1I;
  #L395f7c.  v0[v2]:= v1;
  #L395f80.  v1:= v3.`com.github.mikephil.charting.jobs.ViewPortJob.mTrans` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L395f84.  call `pointValuesToPixel`(v1, v0) @signature `Lcom/github/mikephil/charting/utils/Transformer;.pointValuesToPixel:([F)V` @kind virtual;
  #L395f8a.  v0:= v3.`com.github.mikephil.charting.jobs.ViewPortJob.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L395f8e.  v1:= v3.`com.github.mikephil.charting.jobs.ViewPortJob.pts` @type ^`float`[] @kind object;
  #L395f92.  v2:= v3.`com.github.mikephil.charting.jobs.ViewPortJob.view` @type ^`android.view.View` @kind object;
  #L395f96.  call `centerViewPort`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.centerViewPort:([FLandroid/view/View;)V` @kind virtual;
  #L395f9c.  call `recycleInstance`(v3) @signature `Lcom/github/mikephil/charting/jobs/MoveViewJob;.recycleInstance:(Lcom/github/mikephil/charting/jobs/MoveViewJob;)V` @kind static;
  #L395fa2.  return @kind void;
}
