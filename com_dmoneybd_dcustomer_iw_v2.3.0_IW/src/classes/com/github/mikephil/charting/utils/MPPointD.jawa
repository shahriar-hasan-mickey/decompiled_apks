record `com.github.mikephil.charting.utils.MPPointD` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.utils.ObjectPool$Poolable` @kind class {
  `double` `com.github.mikephil.charting.utils.MPPointD.x` @AccessFlag PUBLIC;
  `double` `com.github.mikephil.charting.utils.MPPointD.y` @AccessFlag PUBLIC;
}
global `com.github.mikephil.charting.utils.ObjectPool` `@@com.github.mikephil.charting.utils.MPPointD.pool` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/github/mikephil/charting/utils/MPPointD;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3a4c6c.  v0:= new `com.github.mikephil.charting.utils.MPPointD`;
  #L3a4c70.  v1:= 0L;
  #L3a4c74.  call `<init>`(v0, v1, v1) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.<init>:(DD)V` @kind direct;
  #L3a4c7a.  v1:= 64I;
  #L3a4c7e.  call temp:= `create`(v1, v0) @signature `Lcom/github/mikephil/charting/utils/ObjectPool;.create:(ILcom/github/mikephil/charting/utils/ObjectPool$Poolable;)Lcom/github/mikephil/charting/utils/ObjectPool;` @kind static;
  #L3a4c84.  v0:= temp @kind object;
  #L3a4c86.  `@@com.github.mikephil.charting.utils.MPPointD.pool` @type ^`com.github.mikephil.charting.utils.ObjectPool` := v0 @kind object;
  #L3a4c8a.  v1:= 0.5F;
  #L3a4c8e.  call `setReplenishPercentage`(v0, v1) @signature `Lcom/github/mikephil/charting/utils/ObjectPool;.setReplenishPercentage:(F)V` @kind virtual;
  #L3a4c94.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.utils.MPPointD` v0 @kind this, `double` v1 , `double` v3 ) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.<init>:(DD)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3a4ca8.  call `<init>`(v0) @signature `Lcom/github/mikephil/charting/utils/ObjectPool$Poolable;.<init>:()V` @kind direct;
  #L3a4cae.  v0.`com.github.mikephil.charting.utils.MPPointD.x` @type ^`double` := v1 @kind wide;
  #L3a4cb2.  v0.`com.github.mikephil.charting.utils.MPPointD.y` @type ^`double` := v3 @kind wide;
  #L3a4cb6.  return @kind void;
}
procedure `com.github.mikephil.charting.utils.MPPointD` `getInstance`(`double` v1 , `double` v3 ) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.getInstance:(DD)Lcom/github/mikephil/charting/utils/MPPointD;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a4bd4.  v0:= `@@com.github.mikephil.charting.utils.MPPointD.pool` @type ^`com.github.mikephil.charting.utils.ObjectPool` @kind object;
  #L3a4bd8.  call temp:= `get`(v0) @signature `Lcom/github/mikephil/charting/utils/ObjectPool;.get:()Lcom/github/mikephil/charting/utils/ObjectPool$Poolable;` @kind virtual;
  #L3a4bde.  v0:= temp @kind object;
  #L3a4be0.  v0:= (`com.github.mikephil.charting.utils.MPPointD`) v0 @kind object;
  #L3a4be4.  v0.`com.github.mikephil.charting.utils.MPPointD.x` @type ^`double` := v1 @kind wide;
  #L3a4be8.  v0.`com.github.mikephil.charting.utils.MPPointD.y` @type ^`double` := v3 @kind wide;
  #L3a4bec.  return v0 @kind object;
}
procedure `void` `recycleInstance`(`com.github.mikephil.charting.utils.MPPointD` v1 @kind object) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointD;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a4cc8.  v0:= `@@com.github.mikephil.charting.utils.MPPointD.pool` @type ^`com.github.mikephil.charting.utils.ObjectPool` @kind object;
  #L3a4ccc.  call `recycle`(v0, v1) @signature `Lcom/github/mikephil/charting/utils/ObjectPool;.recycle:(Lcom/github/mikephil/charting/utils/ObjectPool$Poolable;)V` @kind virtual;
  #L3a4cd2.  return @kind void;
}
procedure `void` `recycleInstances`(`java.util.List` v1 @kind object) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.recycleInstances:(Ljava/util/List;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a4ce4.  v0:= `@@com.github.mikephil.charting.utils.MPPointD.pool` @type ^`com.github.mikephil.charting.utils.ObjectPool` @kind object;
  #L3a4ce8.  call `recycle`(v0, v1) @signature `Lcom/github/mikephil/charting/utils/ObjectPool;.recycle:(Ljava/util/List;)V` @kind virtual;
  #L3a4cee.  return @kind void;
}
procedure `com.github.mikephil.charting.utils.ObjectPool$Poolable` `instantiate`(`com.github.mikephil.charting.utils.MPPointD` v3 @kind this) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.instantiate:()Lcom/github/mikephil/charting/utils/ObjectPool$Poolable;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L3a4c00.  v0:= new `com.github.mikephil.charting.utils.MPPointD`;
  #L3a4c04.  v1:= 0L;
  #L3a4c08.  call `<init>`(v0, v1, v1) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.<init>:(DD)V` @kind direct;
  #L3a4c0e.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.github.mikephil.charting.utils.MPPointD` v3 @kind this) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a4c20.  v0:= new `java.lang.StringBuilder`;
  #L3a4c24.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3a4c2a.  v1:= "MPPointD, x: " @kind object;
  #L3a4c2e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a4c34.  v1:= v3.`com.github.mikephil.charting.utils.MPPointD.x` @type ^`double` @kind wide;
  #L3a4c38.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a4c3e.  v1:= ", y: " @kind object;
  #L3a4c42.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a4c48.  v1:= v3.`com.github.mikephil.charting.utils.MPPointD.y` @type ^`double` @kind wide;
  #L3a4c4c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a4c52.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a4c58.  v0:= temp @kind object;
  #L3a4c5a.  return v0 @kind object;
}
