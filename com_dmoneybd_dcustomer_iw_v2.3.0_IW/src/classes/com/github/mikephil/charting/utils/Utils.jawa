record `com.github.mikephil.charting.utils.Utils` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `double` `@@com.github.mikephil.charting.utils.Utils.DEG2RAD` @AccessFlag PUBLIC_STATIC_FINAL;
global `double` `@@com.github.mikephil.charting.utils.Utils.DOUBLE_EPSILON` @AccessFlag PUBLIC_STATIC_FINAL;
global `float` `@@com.github.mikephil.charting.utils.Utils.FDEG2RAD` @AccessFlag PUBLIC_STATIC_FINAL;
global `float` `@@com.github.mikephil.charting.utils.Utils.FLOAT_EPSILON` @AccessFlag PUBLIC_STATIC_FINAL;
global `int`[] `@@com.github.mikephil.charting.utils.Utils.POW_10` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.Rect` `@@com.github.mikephil.charting.utils.Utils.mCalcTextHeightRect` @AccessFlag PRIVATE_STATIC;
global `android.graphics.Rect` `@@com.github.mikephil.charting.utils.Utils.mCalcTextSizeRect` @AccessFlag PRIVATE_STATIC;
global `com.github.mikephil.charting.formatter.ValueFormatter` `@@com.github.mikephil.charting.utils.Utils.mDefaultValueFormatter` @AccessFlag PRIVATE_STATIC;
global `android.graphics.Rect` `@@com.github.mikephil.charting.utils.Utils.mDrawTextRectBuffer` @AccessFlag PRIVATE_STATIC;
global `android.graphics.Rect` `@@com.github.mikephil.charting.utils.Utils.mDrawableBoundsCache` @AccessFlag PRIVATE_STATIC;
global `android.graphics.Paint$FontMetrics` `@@com.github.mikephil.charting.utils.Utils.mFontMetrics` @AccessFlag PRIVATE_STATIC;
global `android.graphics.Paint$FontMetrics` `@@com.github.mikephil.charting.utils.Utils.mFontMetricsBuffer` @AccessFlag PRIVATE_STATIC;
global `int` `@@com.github.mikephil.charting.utils.Utils.mMaximumFlingVelocity` @AccessFlag PRIVATE_STATIC;
global `android.util.DisplayMetrics` `@@com.github.mikephil.charting.utils.Utils.mMetrics` @AccessFlag PRIVATE_STATIC;
global `int` `@@com.github.mikephil.charting.utils.Utils.mMinimumFlingVelocity` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/github/mikephil/charting/utils/Utils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3a6220.  v0:= 1L;
  #L3a6224.  call temp:= `longBitsToDouble`(v0) @signature `Ljava/lang/Double;.longBitsToDouble:(J)D` @kind static;
  #L3a622a.  v0:= temp @kind wide;
  #L3a622c.  `@@com.github.mikephil.charting.utils.Utils.DOUBLE_EPSILON` @type ^`double` := v0 @kind wide;
  #L3a6230.  v0:= 1I;
  #L3a6232.  call temp:= `intBitsToFloat`(v0) @signature `Ljava/lang/Float;.intBitsToFloat:(I)F` @kind static;
  #L3a6238.  v0:= temp;
  #L3a623a.  `@@com.github.mikephil.charting.utils.Utils.FLOAT_EPSILON` @type ^`float` := v0;
  #L3a623e.  v0:= new `android.graphics.Rect`;
  #L3a6242.  call `<init>`(v0) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L3a6248.  `@@com.github.mikephil.charting.utils.Utils.mCalcTextHeightRect` @type ^`android.graphics.Rect` := v0 @kind object;
  #L3a624c.  v0:= new `android.graphics.Paint$FontMetrics`;
  #L3a6250.  call `<init>`(v0) @signature `Landroid/graphics/Paint$FontMetrics;.<init>:()V` @kind direct;
  #L3a6256.  `@@com.github.mikephil.charting.utils.Utils.mFontMetrics` @type ^`android.graphics.Paint$FontMetrics` := v0 @kind object;
  #L3a625a.  v0:= new `android.graphics.Rect`;
  #L3a625e.  call `<init>`(v0) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L3a6264.  `@@com.github.mikephil.charting.utils.Utils.mCalcTextSizeRect` @type ^`android.graphics.Rect` := v0 @kind object;
  #L3a6268.  v0:= 10I;
  #L3a626c.  v0:= new `int`[v0];
  #L3a6270.  goto L3a62b4;
  #L3a6276.  `@@com.github.mikephil.charting.utils.Utils.POW_10` @type ^`int`[] := v0 @kind object;
  #L3a627a.  call temp:= `generateDefaultValueFormatter`() @signature `Lcom/github/mikephil/charting/utils/Utils;.generateDefaultValueFormatter:()Lcom/github/mikephil/charting/formatter/ValueFormatter;` @kind static;
  #L3a6280.  v0:= temp @kind object;
  #L3a6282.  `@@com.github.mikephil.charting.utils.Utils.mDefaultValueFormatter` @type ^`com.github.mikephil.charting.formatter.ValueFormatter` := v0 @kind object;
  #L3a6286.  v0:= new `android.graphics.Rect`;
  #L3a628a.  call `<init>`(v0) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L3a6290.  `@@com.github.mikephil.charting.utils.Utils.mDrawableBoundsCache` @type ^`android.graphics.Rect` := v0 @kind object;
  #L3a6294.  v0:= new `android.graphics.Rect`;
  #L3a6298.  call `<init>`(v0) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L3a629e.  `@@com.github.mikephil.charting.utils.Utils.mDrawTextRectBuffer` @type ^`android.graphics.Rect` := v0 @kind object;
  #L3a62a2.  v0:= new `android.graphics.Paint$FontMetrics`;
  #L3a62a6.  call `<init>`(v0) @signature `Landroid/graphics/Paint$FontMetrics;.<init>:()V` @kind direct;
  #L3a62ac.  `@@com.github.mikephil.charting.utils.Utils.mFontMetricsBuffer` @type ^`android.graphics.Paint$FontMetrics` := v0 @kind object;
  #L3a62b0.  return @kind void;
  #L3a62b2.  
  #L3a62b4.  v0:= (1I, 10I, 100I, 1000I, 10000I, 100000I, 1000000I, 10000000I, 100000000I, 1000000000I) @kind object;
  #L3a62e3.  goto L3a6276;
}
procedure `void` `<init>`(`com.github.mikephil.charting.utils.Utils` v0 @kind this) @signature `Lcom/github/mikephil/charting/utils/Utils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a62f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a62fa.  return @kind void;
}
procedure `int` `calcTextHeight`(`android.graphics.Paint` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/github/mikephil/charting/utils/Utils;.calcTextHeight:(Landroid/graphics/Paint;Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3a5f60.  v0:= `@@com.github.mikephil.charting.utils.Utils.mCalcTextHeightRect` @type ^`android.graphics.Rect` @kind object;
  #L3a5f64.  v1:= 0I;
  #L3a5f66.  call `set`(v0, v1, v1, v1, v1) @signature `Landroid/graphics/Rect;.set:(IIII)V` @kind virtual;
  #L3a5f6c.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a5f72.  v2:= temp;
  #L3a5f74.  call `getTextBounds`(v3, v4, v1, v2, v0) @signature `Landroid/graphics/Paint;.getTextBounds:(Ljava/lang/String;IILandroid/graphics/Rect;)V` @kind virtual;
  #L3a5f7a.  call temp:= `height`(v0) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L3a5f80.  v3:= temp;
  #L3a5f82.  return v3;
}
procedure `com.github.mikephil.charting.utils.FSize` `calcTextSize`(`android.graphics.Paint` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/github/mikephil/charting/utils/Utils;.calcTextSize:(Landroid/graphics/Paint;Ljava/lang/String;)Lcom/github/mikephil/charting/utils/FSize;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a5c38.  v0:= 0I;
  #L3a5c3a.  call temp:= `getInstance`(v0, v0) @signature `Lcom/github/mikephil/charting/utils/FSize;.getInstance:(FF)Lcom/github/mikephil/charting/utils/FSize;` @kind static;
  #L3a5c40.  v0:= temp @kind object;
  #L3a5c42.  call `calcTextSize`(v1, v2, v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.calcTextSize:(Landroid/graphics/Paint;Ljava/lang/String;Lcom/github/mikephil/charting/utils/FSize;)V` @kind static;
  #L3a5c48.  return v0 @kind object;
}
procedure `void` `calcTextSize`(`android.graphics.Paint` v3 @kind object, `java.lang.String` v4 @kind object, `com.github.mikephil.charting.utils.FSize` v5 @kind object) @signature `Lcom/github/mikephil/charting/utils/Utils;.calcTextSize:(Landroid/graphics/Paint;Ljava/lang/String;Lcom/github/mikephil/charting/utils/FSize;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3a630c.  v0:= `@@com.github.mikephil.charting.utils.Utils.mCalcTextSizeRect` @type ^`android.graphics.Rect` @kind object;
  #L3a6310.  v1:= 0I;
  #L3a6312.  call `set`(v0, v1, v1, v1, v1) @signature `Landroid/graphics/Rect;.set:(IIII)V` @kind virtual;
  #L3a6318.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a631e.  v2:= temp;
  #L3a6320.  call `getTextBounds`(v3, v4, v1, v2, v0) @signature `Landroid/graphics/Paint;.getTextBounds:(Ljava/lang/String;IILandroid/graphics/Rect;)V` @kind virtual;
  #L3a6326.  call temp:= `width`(v0) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L3a632c.  v3:= temp;
  #L3a632e.  v3:= (`float`) v3 @kind i2f;
  #L3a6330.  v5.`com.github.mikephil.charting.utils.FSize.width` @type ^`float` := v3;
  #L3a6334.  call temp:= `height`(v0) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L3a633a.  v3:= temp;
  #L3a633c.  v3:= (`float`) v3 @kind i2f;
  #L3a633e.  v5.`com.github.mikephil.charting.utils.FSize.height` @type ^`float` := v3;
  #L3a6342.  return @kind void;
}
procedure `int` `calcTextWidth`(`android.graphics.Paint` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lcom/github/mikephil/charting/utils/Utils;.calcTextWidth:(Landroid/graphics/Paint;Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3a5f94.  call temp:= `measureText`(v0, v1) @signature `Landroid/graphics/Paint;.measureText:(Ljava/lang/String;)F` @kind virtual;
  #L3a5f9a.  v0:= temp;
  #L3a5f9c.  v0:= (`int`) v0 @kind f2i;
  #L3a5f9e.  return v0;
}
procedure `float` `convertDpToPixel`(`float` v2 ) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3a5db8.  v0:= `@@com.github.mikephil.charting.utils.Utils.mMetrics` @type ^`android.util.DisplayMetrics` @kind object;
  #L3a5dbc.  if v0 != 0 then goto L3a5dd0;
  #L3a5dc0.  v0:= "MPChartLib-Utils" @kind object;
  #L3a5dc4.  v1:= "Utils NOT INITIALIZED. You need to call Utils.init(...) at least once before calling Utils.convertDpToPixel(...). Otherwise conversion does not take place." @kind object;
  #L3a5dc8.  call temp:= `e`(v0, v1) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3a5dce.  return v2;
  #L3a5dd0.  v0:= v0.`android.util.DisplayMetrics.density` @type ^`float`;
  #L3a5dd4.  v2:= v2 * v0 @kind float;
  #L3a5dd8.  return v2;
}
procedure `int`[] `convertIntegers`(`java.util.List` v1 @kind object) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertIntegers:(Ljava/util/List;)[I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a6040.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a6046.  v0:= temp;
  #L3a6048.  v0:= new `int`[v0];
  #L3a604c.  call `copyIntegers`(v1, v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.copyIntegers:(Ljava/util/List;[I)V` @kind static;
  #L3a6052.  return v0 @kind object;
}
procedure `float` `convertPixelsToDp`(`float` v2 ) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertPixelsToDp:(F)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3a5dec.  v0:= `@@com.github.mikephil.charting.utils.Utils.mMetrics` @type ^`android.util.DisplayMetrics` @kind object;
  #L3a5df0.  if v0 != 0 then goto L3a5e04;
  #L3a5df4.  v0:= "MPChartLib-Utils" @kind object;
  #L3a5df8.  v1:= "Utils NOT INITIALIZED. You need to call Utils.init(...) at least once before calling Utils.convertPixelsToDp(...). Otherwise conversion does not take place." @kind object;
  #L3a5dfc.  call temp:= `e`(v0, v1) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3a5e02.  return v2;
  #L3a5e04.  v0:= v0.`android.util.DisplayMetrics.density` @type ^`float`;
  #L3a5e08.  v2:= v2 / v0 @kind float;
  #L3a5e0a.  return v2;
}
procedure `java.lang.String`[] `convertStrings`(`java.util.List` v4 @kind object) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertStrings:(Ljava/util/List;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a61e4.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a61ea.  v0:= temp;
  #L3a61ec.  v1:= new `java.lang.String`[v0];
  #L3a61f0.  v2:= 0I;
  #L3a61f2.  if v2 >= v0 then goto L3a620c;
  #L3a61f6.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a61fc.  v3:= temp @kind object;
  #L3a61fe.  v3:= (`java.lang.String`) v3 @kind object;
  #L3a6202.  v1[v2]:= v3 @kind object;
  #L3a6206.  v2:= v2 + 1;
  #L3a620a.  goto L3a61f2;
  #L3a620c.  return v1 @kind object;
}
procedure `void` `copyIntegers`(`java.util.List` v3 @kind object, `int`[] v4 @kind object) @signature `Lcom/github/mikephil/charting/utils/Utils;.copyIntegers:(Ljava/util/List;[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3a6354.  v0:= length @variable v4;
  #L3a6356.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a635c.  v1:= temp;
  #L3a635e.  if v0 >= v1 then goto L3a6366;
  #L3a6362.  v0:= length @variable v4;
  #L3a6364.  goto L3a636e;
  #L3a6366.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a636c.  v0:= temp;
  #L3a636e.  v1:= 0I;
  #L3a6370.  if v1 >= v0 then goto L3a6392;
  #L3a6374.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a637a.  v2:= temp @kind object;
  #L3a637c.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L3a6380.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3a6386.  v2:= temp;
  #L3a6388.  v4[v1]:= v2;
  #L3a638c.  v1:= v1 + 1;
  #L3a6390.  goto L3a6370;
  #L3a6392.  return @kind void;
}
procedure `void` `copyStrings`(`java.util.List` v3 @kind object, `java.lang.String`[] v4 @kind object) @signature `Lcom/github/mikephil/charting/utils/Utils;.copyStrings:(Ljava/util/List;[Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3a63a4.  v0:= length @variable v4;
  #L3a63a6.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a63ac.  v1:= temp;
  #L3a63ae.  if v0 >= v1 then goto L3a63b6;
  #L3a63b2.  v0:= length @variable v4;
  #L3a63b4.  goto L3a63be;
  #L3a63b6.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3a63bc.  v0:= temp;
  #L3a63be.  v1:= 0I;
  #L3a63c0.  if v1 >= v0 then goto L3a63da;
  #L3a63c4.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3a63ca.  v2:= temp @kind object;
  #L3a63cc.  v2:= (`java.lang.String`) v2 @kind object;
  #L3a63d0.  v4[v1]:= v2 @kind object;
  #L3a63d4.  v1:= v1 + 1;
  #L3a63d8.  goto L3a63c0;
  #L3a63da.  return @kind void;
}
procedure `void` `drawImage`(`android.graphics.Canvas` v2 @kind object, `android.graphics.drawable.Drawable` v3 @kind object, `int` v4 , `int` v5 , `int` v6 , `int` v7 ) @signature `Lcom/github/mikephil/charting/utils/Utils;.drawImage:(Landroid/graphics/Canvas;Landroid/graphics/drawable/Drawable;IIII)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3a63ec.  call temp:= `getInstance`() @signature `Lcom/github/mikephil/charting/utils/MPPointF;.getInstance:()Lcom/github/mikephil/charting/utils/MPPointF;` @kind static;
  #L3a63f2.  v0:= temp @kind object;
  #L3a63f4.  v1:= v6 / 2;
  #L3a63f8.  v4:= v4 - v1 @kind int;
  #L3a63fa.  v4:= (`float`) v4 @kind i2f;
  #L3a63fc.  v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float` := v4;
  #L3a6400.  v7:= v7 / 2;
  #L3a6404.  v5:= v5 - v7 @kind int;
  #L3a6406.  v4:= (`float`) v5 @kind i2f;
  #L3a6408.  v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float` := v4;
  #L3a640c.  v4:= `@@com.github.mikephil.charting.utils.Utils.mDrawableBoundsCache` @type ^`android.graphics.Rect` @kind object;
  #L3a6410.  call `copyBounds`(v3, v4) @signature `Landroid/graphics/drawable/Drawable;.copyBounds:(Landroid/graphics/Rect;)V` @kind virtual;
  #L3a6416.  v4:= `@@com.github.mikephil.charting.utils.Utils.mDrawableBoundsCache` @type ^`android.graphics.Rect` @kind object;
  #L3a641a.  v5:= v4.`android.graphics.Rect.left` @type ^`int`;
  #L3a641e.  v4:= v4.`android.graphics.Rect.top` @type ^`int`;
  #L3a6422.  v7:= v5 + v6 @kind int;
  #L3a6426.  v6:= v6 + v4 @kind int;
  #L3a6428.  call `setBounds`(v3, v5, v4, v7, v6) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L3a642e.  call temp:= `save`(v2) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L3a6434.  v4:= temp;
  #L3a6436.  v5:= v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L3a643a.  v6:= v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L3a643e.  call `translate`(v2, v5, v6) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L3a6444.  call `draw`(v3, v2) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L3a644a.  call `restoreToCount`(v2, v4) @signature `Landroid/graphics/Canvas;.restoreToCount:(I)V` @kind virtual;
  #L3a6450.  return @kind void;
}
procedure `void` `drawMultilineText`(`android.graphics.Canvas` v7 @kind object, `android.text.StaticLayout` v8 @kind object, `float` v9 , `float` v10 , `android.text.TextPaint` v11 @kind object, `com.github.mikephil.charting.utils.MPPointF` v12 @kind object, `float` v13 ) @signature `Lcom/github/mikephil/charting/utils/Utils;.drawMultilineText:(Landroid/graphics/Canvas;Landroid/text/StaticLayout;FFLandroid/text/TextPaint;Lcom/github/mikephil/charting/utils/MPPointF;F)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a6464.  v0:= `@@com.github.mikephil.charting.utils.Utils.mFontMetricsBuffer` @type ^`android.graphics.Paint$FontMetrics` @kind object;
  #L3a6468.  call temp:= `getFontMetrics`(v11, v0) @signature `Landroid/text/TextPaint;.getFontMetrics:(Landroid/graphics/Paint$FontMetrics;)F` @kind virtual;
  #L3a646e.  v0:= temp;
  #L3a6470.  call temp:= `getWidth`(v8) @signature `Landroid/text/StaticLayout;.getWidth:()I` @kind virtual;
  #L3a6476.  v1:= temp;
  #L3a6478.  v1:= (`float`) v1 @kind i2f;
  #L3a647a.  call temp:= `getLineCount`(v8) @signature `Landroid/text/StaticLayout;.getLineCount:()I` @kind virtual;
  #L3a6480.  v2:= temp;
  #L3a6482.  v2:= (`float`) v2 @kind i2f;
  #L3a6484.  v2:= v2 * v0 @kind float;
  #L3a6488.  v0:= `@@com.github.mikephil.charting.utils.Utils.mDrawTextRectBuffer` @type ^`android.graphics.Rect` @kind object;
  #L3a648c.  v0:= v0.`android.graphics.Rect.left` @type ^`int`;
  #L3a6490.  v0:= (`float`) v0 @kind i2f;
  #L3a6492.  v3:= 0I;
  #L3a6494.  v0:= v3 - v0 @kind float;
  #L3a6498.  v4:= v2 + v3 @kind float;
  #L3a649c.  call temp:= `getTextAlign`(v11) @signature `Landroid/text/TextPaint;.getTextAlign:()Landroid/graphics/Paint$Align;` @kind virtual;
  #L3a64a2.  v5:= temp @kind object;
  #L3a64a4.  v6:= `@@android.graphics.Paint$Align.LEFT` @type ^`android.graphics.Paint$Align` @kind object;
  #L3a64a8.  call `setTextAlign`(v11, v6) @signature `Landroid/text/TextPaint;.setTextAlign:(Landroid/graphics/Paint$Align;)V` @kind virtual;
  #L3a64ae.  v6:= fcmpl(v13, v3);
  #L3a64b2.  if v6 == 0 then goto L3a6520;
  #L3a64b6.  v3:= 0.5F;
  #L3a64ba.  v6:= v1 * v3 @kind float;
  #L3a64be.  v0:= v0 - v6 @kind float;
  #L3a64c0.  v6:= v2 * v3 @kind float;
  #L3a64c4.  v4:= v4 - v6 @kind float;
  #L3a64c6.  v6:= v12.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L3a64ca.  v6:= fcmpl(v6, v3);
  #L3a64ce.  if v6 != 0 then goto L3a64de;
  #L3a64d2.  v6:= v12.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L3a64d6.  v6:= fcmpl(v6, v3);
  #L3a64da.  if v6 == 0 then goto L3a650c;
  #L3a64de.  call temp:= `getSizeOfRotatedRectangleByDegrees`(v1, v2, v13) @signature `Lcom/github/mikephil/charting/utils/Utils;.getSizeOfRotatedRectangleByDegrees:(FFF)Lcom/github/mikephil/charting/utils/FSize;` @kind static;
  #L3a64e4.  v1:= temp @kind object;
  #L3a64e6.  v2:= v1.`com.github.mikephil.charting.utils.FSize.width` @type ^`float`;
  #L3a64ea.  v6:= v12.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L3a64ee.  v6:= v6 - v3 @kind float;
  #L3a64f0.  v2:= v2 * v6 @kind float;
  #L3a64f4.  v9:= v9 - v2 @kind float;
  #L3a64f6.  v2:= v1.`com.github.mikephil.charting.utils.FSize.height` @type ^`float`;
  #L3a64fa.  v12:= v12.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L3a64fe.  v12:= v12 - v3 @kind float;
  #L3a6500.  v2:= v2 * v12 @kind float;
  #L3a6504.  v10:= v10 - v2 @kind float;
  #L3a6506.  call `recycleInstance`(v1) @signature `Lcom/github/mikephil/charting/utils/FSize;.recycleInstance:(Lcom/github/mikephil/charting/utils/FSize;)V` @kind static;
  #L3a650c.  call temp:= `save`(v7) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L3a6512.  call `translate`(v7, v9, v10) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L3a6518.  call `rotate`(v7, v13) @signature `Landroid/graphics/Canvas;.rotate:(F)V` @kind virtual;
  #L3a651e.  goto L3a6552;
  #L3a6520.  v13:= v12.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L3a6524.  v6:= fcmpl(v13, v3);
  #L3a6528.  if v6 != 0 then goto L3a6538;
  #L3a652c.  v6:= v12.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L3a6530.  v3:= fcmpl(v6, v3);
  #L3a6534.  if v3 == 0 then goto L3a6548;
  #L3a6538.  v1:= v1 * v13 @kind float;
  #L3a653c.  v0:= v0 - v1 @kind float;
  #L3a653e.  v12:= v12.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L3a6542.  v2:= v2 * v12 @kind float;
  #L3a6546.  v4:= v4 - v2 @kind float;
  #L3a6548.  v0:= v0 + v9 @kind float;
  #L3a654a.  v4:= v4 + v10 @kind float;
  #L3a654c.  call temp:= `save`(v7) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L3a6552.  call `translate`(v7, v0, v4) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L3a6558.  call `draw`(v8, v7) @signature `Landroid/text/StaticLayout;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L3a655e.  call `restore`(v7) @signature `Landroid/graphics/Canvas;.restore:()V` @kind virtual;
  #L3a6564.  call `setTextAlign`(v11, v5) @signature `Landroid/text/TextPaint;.setTextAlign:(Landroid/graphics/Paint$Align;)V` @kind virtual;
  #L3a656a.  return @kind void;
}
procedure `void` `drawMultilineText`(`android.graphics.Canvas` v11 @kind object, `java.lang.String` v12 @kind object, `float` v13 , `float` v14 , `android.text.TextPaint` v15 @kind object, `com.github.mikephil.charting.utils.FSize` v16 @kind object, `com.github.mikephil.charting.utils.MPPointF` v17 @kind object, `float` v18 ) @signature `Lcom/github/mikephil/charting/utils/Utils;.drawMultilineText:(Landroid/graphics/Canvas;Ljava/lang/String;FFLandroid/text/TextPaint;Lcom/github/mikephil/charting/utils/FSize;Lcom/github/mikephil/charting/utils/MPPointF;F)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3a657c.  v10:= new `android.text.StaticLayout`;
  #L3a6580.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a6586.  v3:= temp;
  #L3a6588.  v0:= v16 @kind object;
  #L3a658c.  v0:= v0.`com.github.mikephil.charting.utils.FSize.width` @type ^`float`;
  #L3a6590.  v0:= (`double`) v0 @kind f2d;
  #L3a6592.  call temp:= `ceil`(v0) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L3a6598.  v0:= temp @kind wide;
  #L3a659a.  v4:= 1.0D;
  #L3a659e.  call temp:= `max`(v0, v4) @signature `Ljava/lang/Math;.max:(DD)D` @kind static;
  #L3a65a4.  v0:= temp @kind wide;
  #L3a65a6.  v5:= (`int`) v0 @kind d2i;
  #L3a65a8.  v6:= `@@android.text.Layout$Alignment.ALIGN_NORMAL` @type ^`android.text.Layout$Alignment` @kind object;
  #L3a65ac.  v2:= 0I;
  #L3a65ae.  v7:= 1.0F;
  #L3a65b2.  v8:= 0I;
  #L3a65b4.  v9:= 0I;
  #L3a65b6.  v0:= v10 @kind object;
  #L3a65b8.  v1:= v12 @kind object;
  #L3a65ba.  v4:= v15 @kind object;
  #L3a65bc.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Landroid/text/StaticLayout;.<init>:(Ljava/lang/CharSequence;IILandroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZ)V` @kind direct;
  #L3a65c2.  v0:= v11 @kind object;
  #L3a65c4.  v1:= v10 @kind object;
  #L3a65c6.  v2:= v13;
  #L3a65c8.  v3:= v14;
  #L3a65ca.  v5:= v17 @kind object;
  #L3a65ce.  v6:= v18;
  #L3a65d2.  call `drawMultilineText`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/github/mikephil/charting/utils/Utils;.drawMultilineText:(Landroid/graphics/Canvas;Landroid/text/StaticLayout;FFLandroid/text/TextPaint;Lcom/github/mikephil/charting/utils/MPPointF;F)V` @kind static;
  #L3a65d8.  return @kind void;
}
procedure `void` `drawXAxisValue`(`android.graphics.Canvas` v7 @kind object, `java.lang.String` v8 @kind object, `float` v9 , `float` v10 , `android.graphics.Paint` v11 @kind object, `com.github.mikephil.charting.utils.MPPointF` v12 @kind object, `float` v13 ) @signature `Lcom/github/mikephil/charting/utils/Utils;.drawXAxisValue:(Landroid/graphics/Canvas;Ljava/lang/String;FFLandroid/graphics/Paint;Lcom/github/mikephil/charting/utils/MPPointF;F)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a65ec.  v0:= `@@com.github.mikephil.charting.utils.Utils.mFontMetricsBuffer` @type ^`android.graphics.Paint$FontMetrics` @kind object;
  #L3a65f0.  call temp:= `getFontMetrics`(v11, v0) @signature `Landroid/graphics/Paint;.getFontMetrics:(Landroid/graphics/Paint$FontMetrics;)F` @kind virtual;
  #L3a65f6.  v0:= temp;
  #L3a65f8.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3a65fe.  v1:= temp;
  #L3a6600.  v2:= `@@com.github.mikephil.charting.utils.Utils.mDrawTextRectBuffer` @type ^`android.graphics.Rect` @kind object;
  #L3a6604.  v3:= 0I;
  #L3a6606.  call `getTextBounds`(v11, v8, v3, v1, v2) @signature `Landroid/graphics/Paint;.getTextBounds:(Ljava/lang/String;IILandroid/graphics/Rect;)V` @kind virtual;
  #L3a660c.  v1:= `@@com.github.mikephil.charting.utils.Utils.mDrawTextRectBuffer` @type ^`android.graphics.Rect` @kind object;
  #L3a6610.  v1:= v1.`android.graphics.Rect.left` @type ^`int`;
  #L3a6614.  v1:= (`float`) v1 @kind i2f;
  #L3a6616.  v2:= 0I;
  #L3a6618.  v1:= v2 - v1 @kind float;
  #L3a661c.  v3:= `@@com.github.mikephil.charting.utils.Utils.mFontMetricsBuffer` @type ^`android.graphics.Paint$FontMetrics` @kind object;
  #L3a6620.  v3:= v3.`android.graphics.Paint$FontMetrics.ascent` @type ^`float`;
  #L3a6624.  v3:= -v3 @kind float;
  #L3a6626.  v3:= v3 + v2 @kind float;
  #L3a6628.  call temp:= `getTextAlign`(v11) @signature `Landroid/graphics/Paint;.getTextAlign:()Landroid/graphics/Paint$Align;` @kind virtual;
  #L3a662e.  v4:= temp @kind object;
  #L3a6630.  v5:= `@@android.graphics.Paint$Align.LEFT` @type ^`android.graphics.Paint$Align` @kind object;
  #L3a6634.  call `setTextAlign`(v11, v5) @signature `Landroid/graphics/Paint;.setTextAlign:(Landroid/graphics/Paint$Align;)V` @kind virtual;
  #L3a663a.  v5:= fcmpl(v13, v2);
  #L3a663e.  if v5 == 0 then goto L3a66d4;
  #L3a6642.  v2:= `@@com.github.mikephil.charting.utils.Utils.mDrawTextRectBuffer` @type ^`android.graphics.Rect` @kind object;
  #L3a6646.  call temp:= `width`(v2) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L3a664c.  v2:= temp;
  #L3a664e.  v2:= (`float`) v2 @kind i2f;
  #L3a6650.  v5:= 0.5F;
  #L3a6654.  v2:= v2 * v5 @kind float;
  #L3a6658.  v1:= v1 - v2 @kind float;
  #L3a665a.  v2:= v0 * v5 @kind float;
  #L3a665e.  v3:= v3 - v2 @kind float;
  #L3a6660.  v2:= v12.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L3a6664.  v2:= fcmpl(v2, v5);
  #L3a6668.  if v2 != 0 then goto L3a6678;
  #L3a666c.  v2:= v12.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L3a6670.  v2:= fcmpl(v2, v5);
  #L3a6674.  if v2 == 0 then goto L3a66b4;
  #L3a6678.  v2:= `@@com.github.mikephil.charting.utils.Utils.mDrawTextRectBuffer` @type ^`android.graphics.Rect` @kind object;
  #L3a667c.  call temp:= `width`(v2) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L3a6682.  v2:= temp;
  #L3a6684.  v2:= (`float`) v2 @kind i2f;
  #L3a6686.  call temp:= `getSizeOfRotatedRectangleByDegrees`(v2, v0, v13) @signature `Lcom/github/mikephil/charting/utils/Utils;.getSizeOfRotatedRectangleByDegrees:(FFF)Lcom/github/mikephil/charting/utils/FSize;` @kind static;
  #L3a668c.  v0:= temp @kind object;
  #L3a668e.  v2:= v0.`com.github.mikephil.charting.utils.FSize.width` @type ^`float`;
  #L3a6692.  v6:= v12.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L3a6696.  v6:= v6 - v5 @kind float;
  #L3a6698.  v2:= v2 * v6 @kind float;
  #L3a669c.  v9:= v9 - v2 @kind float;
  #L3a669e.  v2:= v0.`com.github.mikephil.charting.utils.FSize.height` @type ^`float`;
  #L3a66a2.  v12:= v12.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L3a66a6.  v12:= v12 - v5 @kind float;
  #L3a66a8.  v2:= v2 * v12 @kind float;
  #L3a66ac.  v10:= v10 - v2 @kind float;
  #L3a66ae.  call `recycleInstance`(v0) @signature `Lcom/github/mikephil/charting/utils/FSize;.recycleInstance:(Lcom/github/mikephil/charting/utils/FSize;)V` @kind static;
  #L3a66b4.  call temp:= `save`(v7) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L3a66ba.  call `translate`(v7, v9, v10) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L3a66c0.  call `rotate`(v7, v13) @signature `Landroid/graphics/Canvas;.rotate:(F)V` @kind virtual;
  #L3a66c6.  call `drawText`(v7, v8, v1, v3, v11) @signature `Landroid/graphics/Canvas;.drawText:(Ljava/lang/String;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L3a66cc.  call `restore`(v7) @signature `Landroid/graphics/Canvas;.restore:()V` @kind virtual;
  #L3a66d2.  goto L3a6718;
  #L3a66d4.  v13:= v12.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L3a66d8.  v13:= fcmpl(v13, v2);
  #L3a66dc.  if v13 != 0 then goto L3a66ec;
  #L3a66e0.  v13:= v12.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L3a66e4.  v13:= fcmpl(v13, v2);
  #L3a66e8.  if v13 == 0 then goto L3a670e;
  #L3a66ec.  v13:= `@@com.github.mikephil.charting.utils.Utils.mDrawTextRectBuffer` @type ^`android.graphics.Rect` @kind object;
  #L3a66f0.  call temp:= `width`(v13) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L3a66f6.  v13:= temp;
  #L3a66f8.  v13:= (`float`) v13 @kind i2f;
  #L3a66fa.  v2:= v12.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L3a66fe.  v13:= v13 * v2 @kind float;
  #L3a6702.  v1:= v1 - v13 @kind float;
  #L3a6704.  v12:= v12.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L3a6708.  v0:= v0 * v12 @kind float;
  #L3a670c.  v3:= v3 - v0 @kind float;
  #L3a670e.  v1:= v1 + v9 @kind float;
  #L3a6710.  v3:= v3 + v10 @kind float;
  #L3a6712.  call `drawText`(v7, v8, v1, v3, v11) @signature `Landroid/graphics/Canvas;.drawText:(Ljava/lang/String;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L3a6718.  call `setTextAlign`(v11, v4) @signature `Landroid/graphics/Paint;.setTextAlign:(Landroid/graphics/Paint$Align;)V` @kind virtual;
  #L3a671e.  return @kind void;
}
procedure `java.lang.String` `formatNumber`(`float` v1 , `int` v2 , `boolean` v3 ) @signature `Lcom/github/mikephil/charting/utils/Utils;.formatNumber:(FIZ)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a6064.  v0:= 46I;
  #L3a6068.  call temp:= `formatNumber`(v1, v2, v3, v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.formatNumber:(FIZC)Ljava/lang/String;` @kind static;
  #L3a606e.  v1:= temp @kind object;
  #L3a6070.  return v1 @kind object;
}
procedure `java.lang.String` `formatNumber`(`float` v16 , `int` v17 , `boolean` v18 , `char` v19 ) @signature `Lcom/github/mikephil/charting/utils/Utils;.formatNumber:(FIZC)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3a6084.  v0:= v16;
  #L3a6088.  v1:= 35I;
  #L3a608c.  v2:= new `char`[v1];
  #L3a6090.  v3:= 0I;
  #L3a6092.  v4:= fcmpl(v0, v3);
  #L3a6096.  if v4 != 0 then goto L3a60a0;
  #L3a609a.  v0:= "0" @kind object;
  #L3a609e.  return v0 @kind object;
  #L3a60a0.  v4:= 1.0F;
  #L3a60a4.  v5:= 0I;
  #L3a60a6.  v6:= 1I;
  #L3a60a8.  v4:= fcmpg(v0, v4);
  #L3a60ac.  if v4 >= 0 then goto L3a60c0;
  #L3a60b0.  v4:= -1.0F;
  #L3a60b4.  v4:= fcmpl(v0, v4);
  #L3a60b8.  if v4 <= 0 then goto L3a60c0;
  #L3a60bc.  v4:= 1I;
  #L3a60be.  goto L3a60c2;
  #L3a60c0.  v4:= 0I;
  #L3a60c2.  v3:= fcmpg(v0, v3);
  #L3a60c6.  if v3 >= 0 then goto L3a60d0;
  #L3a60ca.  v0:= -v0 @kind float;
  #L3a60cc.  v3:= 1I;
  #L3a60ce.  goto L3a60d2;
  #L3a60d0.  v3:= 0I;
  #L3a60d2.  v7:= `@@com.github.mikephil.charting.utils.Utils.POW_10` @type ^`int`[] @kind object;
  #L3a60d6.  v8:= length @variable v7;
  #L3a60d8.  v9:= v17;
  #L3a60dc.  if v9 <= v8 then goto L3a60e6;
  #L3a60e0.  v8:= length @variable v7;
  #L3a60e2.  v8:= v8 - v6 @kind int;
  #L3a60e4.  goto L3a60e8;
  #L3a60e6.  v8:= v9;
  #L3a60e8.  v7:= v7[v8];
  #L3a60ec.  v7:= (`float`) v7 @kind i2f;
  #L3a60ee.  v0:= v0 * v7 @kind float;
  #L3a60f2.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3a60f8.  v0:= temp;
  #L3a60fa.  v9:= (`long`) v0 @kind i2l;
  #L3a60fc.  v0:= 34I;
  #L3a6100.  v7:= 0I;
  #L3a6102.  v11:= 48I;
  #L3a6106.  v12:= 0L;
  #L3a610a.  v14:= lcmp(v9, v12);
  #L3a610e.  if v14 != 0 then goto L3a614e;
  #L3a6112.  v14:= v8 + 1;
  #L3a6116.  if v5 >= v14 then goto L3a611c;
  #L3a611a.  goto L3a614e;
  #L3a611c.  if v4 == 0 then goto L3a612e;
  #L3a6120.  v4:= v0 + -1;
  #L3a6124.  v2[v0]:= v11 @kind char;
  #L3a6128.  v5:= v5 + 1;
  #L3a612c.  v0:= v4;
  #L3a612e.  if v3 == 0 then goto L3a613e;
  #L3a6132.  v3:= 45I;
  #L3a6136.  v2[v0]:= v3 @kind char;
  #L3a613a.  v5:= v5 + 1;
  #L3a613e.  v1:= v1 - v5 @kind int;
  #L3a6140.  v0:= v1 - 35;
  #L3a6144.  call temp:= `valueOf`(v2, v1, v0) @signature `Ljava/lang/String;.valueOf:([CII)Ljava/lang/String;` @kind static;
  #L3a614a.  v0:= temp @kind object;
  #L3a614c.  return v0 @kind object;
  #L3a614e.  v14:= 10L;
  #L3a6152.  v16:= v7;
  #L3a6156.  v6:= v9 %% v14 @kind long;
  #L3a615a.  v7:= (`int`) v6 @kind l2i;
  #L3a615c.  v9:= v9 / v14 @kind long;
  #L3a615e.  v6:= v0 + -1;
  #L3a6162.  v7:= v7 + v11 @kind int;
  #L3a6164.  v7:= (`char`) v7 @kind i2c;
  #L3a6166.  v2[v0]:= v7 @kind char;
  #L3a616a.  v5:= v5 + 1;
  #L3a616e.  if v5 != v8 then goto L3a6186;
  #L3a6172.  v0:= v6 + -1;
  #L3a6176.  v7:= 44I;
  #L3a617a.  v2[v6]:= v7 @kind char;
  #L3a617e.  v5:= v5 + 1;
  #L3a6182.  v7:= 1I;
  #L3a6184.  goto L3a61ce;
  #L3a6186.  if v18 == 0 then goto L3a61c8;
  #L3a618a.  v0:= lcmp(v9, v12);
  #L3a618e.  if v0 == 0 then goto L3a61c8;
  #L3a6192.  if v5 <= v8 then goto L3a61c8;
  #L3a6196.  v0:= v5 - v8 @kind int;
  #L3a619a.  v0:= v0 %% 4;
  #L3a619e.  if v16 == 0 then goto L3a61b0;
  #L3a61a2.  if v0 != 0 then goto L3a61c8;
  #L3a61a6.  v0:= v6 + -1;
  #L3a61aa.  v2[v6]:= v19 @kind char;
  #L3a61ae.  goto L3a61be;
  #L3a61b0.  v7:= 3I;
  #L3a61b2.  if v0 != v7 then goto L3a61c8;
  #L3a61b6.  v0:= v6 + -1;
  #L3a61ba.  v2[v6]:= v19 @kind char;
  #L3a61be.  v5:= v5 + 1;
  #L3a61c2.  v7:= v16;
  #L3a61c6.  goto L3a61ce;
  #L3a61c8.  v7:= v16;
  #L3a61cc.  v0:= v6;
  #L3a61ce.  v6:= 1I;
  #L3a61d0.  goto L3a6102;
}
procedure `com.github.mikephil.charting.formatter.ValueFormatter` `generateDefaultValueFormatter`() @signature `Lcom/github/mikephil/charting/utils/Utils;.generateDefaultValueFormatter:()Lcom/github/mikephil/charting/formatter/ValueFormatter;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3a5c00.  v0:= new `com.github.mikephil.charting.formatter.DefaultValueFormatter`;
  #L3a5c04.  v1:= 1I;
  #L3a5c06.  call `<init>`(v0, v1) @signature `Lcom/github/mikephil/charting/formatter/DefaultValueFormatter;.<init>:(I)V` @kind direct;
  #L3a5c0c.  return v0 @kind object;
}
procedure `int` `getDecimals`(`float` v2 ) @signature `Lcom/github/mikephil/charting/utils/Utils;.getDecimals:(F)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3a5fb0.  v0:= (`double`) v2 @kind f2d;
  #L3a5fb2.  call temp:= `roundToNextSignificant`(v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.roundToNextSignificant:(D)F` @kind static;
  #L3a5fb8.  v2:= temp;
  #L3a5fba.  call temp:= `isInfinite`(v2) @signature `Ljava/lang/Float;.isInfinite:(F)Z` @kind static;
  #L3a5fc0.  v0:= temp;
  #L3a5fc2.  if v0 == 0 then goto L3a5fca;
  #L3a5fc6.  v2:= 0I;
  #L3a5fc8.  return v2;
  #L3a5fca.  v0:= (`double`) v2 @kind f2d;
  #L3a5fcc.  call temp:= `log10`(v0) @signature `Ljava/lang/Math;.log10:(D)D` @kind static;
  #L3a5fd2.  v0:= temp @kind wide;
  #L3a5fd4.  v0:= -v0 @kind double;
  #L3a5fd6.  call temp:= `ceil`(v0) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L3a5fdc.  v0:= temp @kind wide;
  #L3a5fde.  v2:= (`int`) v0 @kind d2i;
  #L3a5fe0.  v2:= v2 + 2;
  #L3a5fe4.  return v2;
}
procedure `com.github.mikephil.charting.formatter.ValueFormatter` `getDefaultValueFormatter`() @signature `Lcom/github/mikephil/charting/utils/Utils;.getDefaultValueFormatter:()Lcom/github/mikephil/charting/formatter/ValueFormatter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a5c20.  v0:= `@@com.github.mikephil.charting.utils.Utils.mDefaultValueFormatter` @type ^`com.github.mikephil.charting.formatter.ValueFormatter` @kind object;
  #L3a5c24.  return v0 @kind object;
}
procedure `float` `getLineHeight`(`android.graphics.Paint` v1 @kind object) @signature `Lcom/github/mikephil/charting/utils/Utils;.getLineHeight:(Landroid/graphics/Paint;)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a5e1c.  v0:= `@@com.github.mikephil.charting.utils.Utils.mFontMetrics` @type ^`android.graphics.Paint$FontMetrics` @kind object;
  #L3a5e20.  call temp:= `getLineHeight`(v1, v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.getLineHeight:(Landroid/graphics/Paint;Landroid/graphics/Paint$FontMetrics;)F` @kind static;
  #L3a5e26.  v1:= temp;
  #L3a5e28.  return v1;
}
procedure `float` `getLineHeight`(`android.graphics.Paint` v0 @kind object, `android.graphics.Paint$FontMetrics` v1 @kind object) @signature `Lcom/github/mikephil/charting/utils/Utils;.getLineHeight:(Landroid/graphics/Paint;Landroid/graphics/Paint$FontMetrics;)F` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3a5e3c.  call temp:= `getFontMetrics`(v0, v1) @signature `Landroid/graphics/Paint;.getFontMetrics:(Landroid/graphics/Paint$FontMetrics;)F` @kind virtual;
  #L3a5e42.  v0:= v1.`android.graphics.Paint$FontMetrics.descent` @type ^`float`;
  #L3a5e46.  v1:= v1.`android.graphics.Paint$FontMetrics.ascent` @type ^`float`;
  #L3a5e4a.  v0:= v0 - v1 @kind float;
  #L3a5e4c.  return v0;
}
procedure `float` `getLineSpacing`(`android.graphics.Paint` v1 @kind object) @signature `Lcom/github/mikephil/charting/utils/Utils;.getLineSpacing:(Landroid/graphics/Paint;)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a5e60.  v0:= `@@com.github.mikephil.charting.utils.Utils.mFontMetrics` @type ^`android.graphics.Paint$FontMetrics` @kind object;
  #L3a5e64.  call temp:= `getLineSpacing`(v1, v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.getLineSpacing:(Landroid/graphics/Paint;Landroid/graphics/Paint$FontMetrics;)F` @kind static;
  #L3a5e6a.  v1:= temp;
  #L3a5e6c.  return v1;
}
procedure `float` `getLineSpacing`(`android.graphics.Paint` v1 @kind object, `android.graphics.Paint$FontMetrics` v2 @kind object) @signature `Lcom/github/mikephil/charting/utils/Utils;.getLineSpacing:(Landroid/graphics/Paint;Landroid/graphics/Paint$FontMetrics;)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a5e80.  call temp:= `getFontMetrics`(v1, v2) @signature `Landroid/graphics/Paint;.getFontMetrics:(Landroid/graphics/Paint$FontMetrics;)F` @kind virtual;
  #L3a5e86.  v1:= v2.`android.graphics.Paint$FontMetrics.ascent` @type ^`float`;
  #L3a5e8a.  v0:= v2.`android.graphics.Paint$FontMetrics.top` @type ^`float`;
  #L3a5e8e.  v1:= v1 - v0 @kind float;
  #L3a5e90.  v2:= v2.`android.graphics.Paint$FontMetrics.bottom` @type ^`float`;
  #L3a5e94.  v1:= v1 + v2 @kind float;
  #L3a5e96.  return v1;
}
procedure `int` `getMaximumFlingVelocity`() @signature `Lcom/github/mikephil/charting/utils/Utils;.getMaximumFlingVelocity:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a5ff8.  v0:= `@@com.github.mikephil.charting.utils.Utils.mMaximumFlingVelocity` @type ^`int`;
  #L3a5ffc.  return v0;
}
procedure `int` `getMinimumFlingVelocity`() @signature `Lcom/github/mikephil/charting/utils/Utils;.getMinimumFlingVelocity:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a6010.  v0:= `@@com.github.mikephil.charting.utils.Utils.mMinimumFlingVelocity` @type ^`int`;
  #L3a6014.  return v0;
}
procedure `float` `getNormalizedAngle`(`float` v2 ) @signature `Lcom/github/mikephil/charting/utils/Utils;.getNormalizedAngle:(F)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3a5ea8.  v0:= 0I;
  #L3a5eaa.  v1:= 360.0F;
  #L3a5eae.  v0:= fcmpg(v2, v0);
  #L3a5eb2.  if v0 >= 0 then goto L3a5eba;
  #L3a5eb6.  v2:= v2 + v1 @kind float;
  #L3a5eb8.  goto L3a5ea8;
  #L3a5eba.  v2:= v2 %% v1 @kind float;
  #L3a5ebc.  return v2;
}
procedure `com.github.mikephil.charting.utils.MPPointF` `getPosition`(`com.github.mikephil.charting.utils.MPPointF` v1 @kind object, `float` v2 , `float` v3 ) @signature `Lcom/github/mikephil/charting/utils/Utils;.getPosition:(Lcom/github/mikephil/charting/utils/MPPointF;FF)Lcom/github/mikephil/charting/utils/MPPointF;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a5d48.  v0:= 0I;
  #L3a5d4a.  call temp:= `getInstance`(v0, v0) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.getInstance:(FF)Lcom/github/mikephil/charting/utils/MPPointF;` @kind static;
  #L3a5d50.  v0:= temp @kind object;
  #L3a5d52.  call `getPosition`(v1, v2, v3, v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.getPosition:(Lcom/github/mikephil/charting/utils/MPPointF;FFLcom/github/mikephil/charting/utils/MPPointF;)V` @kind static;
  #L3a5d58.  return v0 @kind object;
}
procedure `void` `getPosition`(`com.github.mikephil.charting.utils.MPPointF` v6 @kind object, `float` v7 , `float` v8 , `com.github.mikephil.charting.utils.MPPointF` v9 @kind object) @signature `Lcom/github/mikephil/charting/utils/Utils;.getPosition:(Lcom/github/mikephil/charting/utils/MPPointF;FFLcom/github/mikephil/charting/utils/MPPointF;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a6730.  v0:= v6.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L3a6734.  v0:= (`double`) v0 @kind f2d;
  #L3a6736.  v2:= (`double`) v7 @kind f2d;
  #L3a6738.  v7:= (`double`) v8 @kind f2d;
  #L3a673a.  call temp:= `toRadians`(v7) @signature `Ljava/lang/Math;.toRadians:(D)D` @kind static;
  #L3a6740.  v4:= temp @kind wide;
  #L3a6742.  call temp:= `cos`(v4) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L3a6748.  v4:= temp @kind wide;
  #L3a674a.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L3a6750.  v4:= v4 * v2 @kind double;
  #L3a6754.  call temp:= `isNaN`(v0) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L3a675a.  v0:= v0 + v4 @kind double;
  #L3a675c.  v0:= (`float`) v0 @kind d2f;
  #L3a675e.  v9.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float` := v0;
  #L3a6762.  v6:= v6.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L3a6766.  v0:= (`double`) v6 @kind f2d;
  #L3a6768.  call temp:= `toRadians`(v7) @signature `Ljava/lang/Math;.toRadians:(D)D` @kind static;
  #L3a676e.  v6:= temp @kind wide;
  #L3a6770.  call temp:= `sin`(v6) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L3a6776.  v6:= temp @kind wide;
  #L3a6778.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L3a677e.  v2:= v2 * v6 @kind double;
  #L3a6782.  call temp:= `isNaN`(v0) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L3a6788.  v0:= v0 + v2 @kind double;
  #L3a678a.  v6:= (`float`) v0 @kind d2f;
  #L3a678c.  v9.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float` := v6;
  #L3a6790.  return @kind void;
}
procedure `int` `getSDKInt`() @signature `Lcom/github/mikephil/charting/utils/Utils;.getSDKInt:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a6028.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3a602c.  return v0;
}
procedure `com.github.mikephil.charting.utils.FSize` `getSizeOfRotatedRectangleByDegrees`(`float` v1 , `float` v2 , `float` v3 ) @signature `Lcom/github/mikephil/charting/utils/Utils;.getSizeOfRotatedRectangleByDegrees:(FFF)Lcom/github/mikephil/charting/utils/FSize;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a5c88.  v0:= 1016003125I;
  #L3a5c8e.  v3:= v3 * v0 @kind float;
  #L3a5c92.  call temp:= `getSizeOfRotatedRectangleByRadians`(v1, v2, v3) @signature `Lcom/github/mikephil/charting/utils/Utils;.getSizeOfRotatedRectangleByRadians:(FFF)Lcom/github/mikephil/charting/utils/FSize;` @kind static;
  #L3a5c98.  v1:= temp @kind object;
  #L3a5c9a.  return v1 @kind object;
}
procedure `com.github.mikephil.charting.utils.FSize` `getSizeOfRotatedRectangleByDegrees`(`com.github.mikephil.charting.utils.FSize` v1 @kind object, `float` v2 ) @signature `Lcom/github/mikephil/charting/utils/Utils;.getSizeOfRotatedRectangleByDegrees:(Lcom/github/mikephil/charting/utils/FSize;F)Lcom/github/mikephil/charting/utils/FSize;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a5c5c.  v0:= 1016003125I;
  #L3a5c62.  v2:= v2 * v0 @kind float;
  #L3a5c66.  v0:= v1.`com.github.mikephil.charting.utils.FSize.width` @type ^`float`;
  #L3a5c6a.  v1:= v1.`com.github.mikephil.charting.utils.FSize.height` @type ^`float`;
  #L3a5c6e.  call temp:= `getSizeOfRotatedRectangleByRadians`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/utils/Utils;.getSizeOfRotatedRectangleByRadians:(FFF)Lcom/github/mikephil/charting/utils/FSize;` @kind static;
  #L3a5c74.  v1:= temp @kind object;
  #L3a5c76.  return v1 @kind object;
}
procedure `com.github.mikephil.charting.utils.FSize` `getSizeOfRotatedRectangleByRadians`(`float` v4 , `float` v5 , `float` v6 ) @signature `Lcom/github/mikephil/charting/utils/Utils;.getSizeOfRotatedRectangleByRadians:(FFF)Lcom/github/mikephil/charting/utils/FSize;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a5cd0.  v0:= (`double`) v6 @kind f2d;
  #L3a5cd2.  call temp:= `cos`(v0) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L3a5cd8.  v2:= temp @kind wide;
  #L3a5cda.  v6:= (`float`) v2 @kind d2f;
  #L3a5cdc.  v6:= v6 * v4 @kind float;
  #L3a5ce0.  call temp:= `abs`(v6) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L3a5ce6.  v6:= temp;
  #L3a5ce8.  call temp:= `sin`(v0) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L3a5cee.  v2:= temp @kind wide;
  #L3a5cf0.  v2:= (`float`) v2 @kind d2f;
  #L3a5cf2.  v2:= v2 * v5 @kind float;
  #L3a5cf6.  call temp:= `abs`(v2) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L3a5cfc.  v2:= temp;
  #L3a5cfe.  v6:= v6 + v2 @kind float;
  #L3a5d00.  call temp:= `sin`(v0) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L3a5d06.  v2:= temp @kind wide;
  #L3a5d08.  v2:= (`float`) v2 @kind d2f;
  #L3a5d0a.  v4:= v4 * v2 @kind float;
  #L3a5d0e.  call temp:= `abs`(v4) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L3a5d14.  v4:= temp;
  #L3a5d16.  call temp:= `cos`(v0) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L3a5d1c.  v0:= temp @kind wide;
  #L3a5d1e.  v0:= (`float`) v0 @kind d2f;
  #L3a5d20.  v5:= v5 * v0 @kind float;
  #L3a5d24.  call temp:= `abs`(v5) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L3a5d2a.  v5:= temp;
  #L3a5d2c.  v4:= v4 + v5 @kind float;
  #L3a5d2e.  call temp:= `getInstance`(v6, v4) @signature `Lcom/github/mikephil/charting/utils/FSize;.getInstance:(FF)Lcom/github/mikephil/charting/utils/FSize;` @kind static;
  #L3a5d34.  v4:= temp @kind object;
  #L3a5d36.  return v4 @kind object;
}
procedure `com.github.mikephil.charting.utils.FSize` `getSizeOfRotatedRectangleByRadians`(`com.github.mikephil.charting.utils.FSize` v1 @kind object, `float` v2 ) @signature `Lcom/github/mikephil/charting/utils/Utils;.getSizeOfRotatedRectangleByRadians:(Lcom/github/mikephil/charting/utils/FSize;F)Lcom/github/mikephil/charting/utils/FSize;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3a5cac.  v0:= v1.`com.github.mikephil.charting.utils.FSize.width` @type ^`float`;
  #L3a5cb0.  v1:= v1.`com.github.mikephil.charting.utils.FSize.height` @type ^`float`;
  #L3a5cb4.  call temp:= `getSizeOfRotatedRectangleByRadians`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/utils/Utils;.getSizeOfRotatedRectangleByRadians:(FFF)Lcom/github/mikephil/charting/utils/FSize;` @kind static;
  #L3a5cba.  v1:= temp @kind object;
  #L3a5cbc.  return v1 @kind object;
}
procedure `void` `init`(`android.content.Context` v2 @kind object) @signature `Lcom/github/mikephil/charting/utils/Utils;.init:(Landroid/content/Context;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3a67a4.  if v2 != 0 then goto L3a67d0;
  #L3a67a8.  call temp:= `getMinimumFlingVelocity`() @signature `Landroid/view/ViewConfiguration;.getMinimumFlingVelocity:()I` @kind static;
  #L3a67ae.  v2:= temp;
  #L3a67b0.  `@@com.github.mikephil.charting.utils.Utils.mMinimumFlingVelocity` @type ^`int` := v2;
  #L3a67b4.  call temp:= `getMaximumFlingVelocity`() @signature `Landroid/view/ViewConfiguration;.getMaximumFlingVelocity:()I` @kind static;
  #L3a67ba.  v2:= temp;
  #L3a67bc.  `@@com.github.mikephil.charting.utils.Utils.mMaximumFlingVelocity` @type ^`int` := v2;
  #L3a67c0.  v2:= "MPChartLib-Utils" @kind object;
  #L3a67c4.  v0:= "Utils.init(...) PROVIDED CONTEXT OBJECT IS NULL" @kind object;
  #L3a67c8.  call temp:= `e`(v2, v0) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3a67ce.  goto L3a6804;
  #L3a67d0.  call temp:= `get`(v2) @signature `Landroid/view/ViewConfiguration;.get:(Landroid/content/Context;)Landroid/view/ViewConfiguration;` @kind static;
  #L3a67d6.  v0:= temp @kind object;
  #L3a67d8.  call temp:= `getScaledMinimumFlingVelocity`(v0) @signature `Landroid/view/ViewConfiguration;.getScaledMinimumFlingVelocity:()I` @kind virtual;
  #L3a67de.  v1:= temp;
  #L3a67e0.  `@@com.github.mikephil.charting.utils.Utils.mMinimumFlingVelocity` @type ^`int` := v1;
  #L3a67e4.  call temp:= `getScaledMaximumFlingVelocity`(v0) @signature `Landroid/view/ViewConfiguration;.getScaledMaximumFlingVelocity:()I` @kind virtual;
  #L3a67ea.  v0:= temp;
  #L3a67ec.  `@@com.github.mikephil.charting.utils.Utils.mMaximumFlingVelocity` @type ^`int` := v0;
  #L3a67f0.  call temp:= `getResources`(v2) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3a67f6.  v2:= temp @kind object;
  #L3a67f8.  call temp:= `getDisplayMetrics`(v2) @signature `Landroid/content/res/Resources;.getDisplayMetrics:()Landroid/util/DisplayMetrics;` @kind virtual;
  #L3a67fe.  v2:= temp @kind object;
  #L3a6800.  `@@com.github.mikephil.charting.utils.Utils.mMetrics` @type ^`android.util.DisplayMetrics` := v2 @kind object;
  #L3a6804.  return @kind void;
}
procedure `void` `init`(`android.content.res.Resources` v0 @kind object) @signature `Lcom/github/mikephil/charting/utils/Utils;.init:(Landroid/content/res/Resources;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3a6818.  call temp:= `getDisplayMetrics`(v0) @signature `Landroid/content/res/Resources;.getDisplayMetrics:()Landroid/util/DisplayMetrics;` @kind virtual;
  #L3a681e.  v0:= temp @kind object;
  #L3a6820.  `@@com.github.mikephil.charting.utils.Utils.mMetrics` @type ^`android.util.DisplayMetrics` := v0 @kind object;
  #L3a6824.  call temp:= `getMinimumFlingVelocity`() @signature `Landroid/view/ViewConfiguration;.getMinimumFlingVelocity:()I` @kind static;
  #L3a682a.  v0:= temp;
  #L3a682c.  `@@com.github.mikephil.charting.utils.Utils.mMinimumFlingVelocity` @type ^`int` := v0;
  #L3a6830.  call temp:= `getMaximumFlingVelocity`() @signature `Landroid/view/ViewConfiguration;.getMaximumFlingVelocity:()I` @kind static;
  #L3a6836.  v0:= temp;
  #L3a6838.  `@@com.github.mikephil.charting.utils.Utils.mMaximumFlingVelocity` @type ^`int` := v0;
  #L3a683c.  return @kind void;
}
procedure `double` `nextUp`(`double` v5 ) @signature `Lcom/github/mikephil/charting/utils/Utils;.nextUp:(D)D` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a5d6c.  v0:= InfinityD;
  #L3a5d70.  v2:= dcmpl(v5, v0);
  #L3a5d74.  if v2 != 0 then goto L3a5d7a;
  #L3a5d78.  return v5 @kind wide;
  #L3a5d7a.  v0:= 0L;
  #L3a5d7e.  v5:= v5 + v0 @kind double;
  #L3a5d80.  call temp:= `doubleToRawLongBits`(v5) @signature `Ljava/lang/Double;.doubleToRawLongBits:(D)J` @kind static;
  #L3a5d86.  v2:= temp @kind wide;
  #L3a5d88.  v4:= dcmpl(v5, v0);
  #L3a5d8c.  if v4 < 0 then goto L3a5d96;
  #L3a5d90.  v5:= 1L;
  #L3a5d94.  goto L3a5d9a;
  #L3a5d96.  v5:= -1L;
  #L3a5d9a.  v2:= v2 + v5 @kind long;
  #L3a5d9c.  call temp:= `longBitsToDouble`(v2) @signature `Ljava/lang/Double;.longBitsToDouble:(J)D` @kind static;
  #L3a5da2.  v5:= temp @kind wide;
  #L3a5da4.  return v5 @kind wide;
}
procedure `void` `postInvalidateOnAnimation`(`android.view.View` v2 @kind object) @signature `Lcom/github/mikephil/charting/utils/Utils;.postInvalidateOnAnimation:(Landroid/view/View;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3a6850.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3a6854.  v1:= 16I;
  #L3a6858.  if v0 < v1 then goto L3a6864;
  #L3a685c.  call `postInvalidateOnAnimation`(v2) @signature `Landroid/view/View;.postInvalidateOnAnimation:()V` @kind virtual;
  #L3a6862.  goto L3a686e;
  #L3a6864.  v0:= 10L;
  #L3a6868.  call `postInvalidateDelayed`(v2, v0) @signature `Landroid/view/View;.postInvalidateDelayed:(J)V` @kind virtual;
  #L3a686e.  return @kind void;
}
procedure `float` `roundToNextSignificant`(`double` v5 ) @signature `Lcom/github/mikephil/charting/utils/Utils;.roundToNextSignificant:(D)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a5ed0.  call temp:= `isInfinite`(v5) @signature `Ljava/lang/Double;.isInfinite:(D)Z` @kind static;
  #L3a5ed6.  v0:= temp;
  #L3a5ed8.  if v0 != 0 then goto L3a5f4a;
  #L3a5edc.  call temp:= `isNaN`(v5) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L3a5ee2.  v0:= temp;
  #L3a5ee4.  if v0 != 0 then goto L3a5f4a;
  #L3a5ee8.  v0:= 0L;
  #L3a5eec.  v2:= dcmpl(v5, v0);
  #L3a5ef0.  if v2 != 0 then goto L3a5ef6;
  #L3a5ef4.  goto L3a5f4a;
  #L3a5ef6.  v2:= dcmpg(v5, v0);
  #L3a5efa.  if v2 >= 0 then goto L3a5f02;
  #L3a5efe.  v0:= -v5 @kind double;
  #L3a5f00.  goto L3a5f04;
  #L3a5f02.  v0:= v5 @kind wide;
  #L3a5f04.  call temp:= `log10`(v0) @signature `Ljava/lang/Math;.log10:(D)D` @kind static;
  #L3a5f0a.  v0:= temp @kind wide;
  #L3a5f0c.  v0:= (`float`) v0 @kind d2f;
  #L3a5f0e.  v0:= (`double`) v0 @kind f2d;
  #L3a5f10.  call temp:= `ceil`(v0) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L3a5f16.  v0:= temp @kind wide;
  #L3a5f18.  v0:= (`float`) v0 @kind d2f;
  #L3a5f1a.  v0:= (`int`) v0 @kind f2i;
  #L3a5f1c.  v0:= v0 - 1;
  #L3a5f20.  v1:= 10.0D;
  #L3a5f24.  v3:= (`double`) v0 @kind i2d;
  #L3a5f26.  call temp:= `pow`(v1, v3) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L3a5f2c.  v0:= temp @kind wide;
  #L3a5f2e.  v0:= (`float`) v0 @kind d2f;
  #L3a5f30.  v1:= (`double`) v0 @kind f2d;
  #L3a5f32.  call temp:= `isNaN`(v1) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L3a5f38.  v5:= v5 * v1 @kind double;
  #L3a5f3c.  call temp:= `round`(v5) @signature `Ljava/lang/Math;.round:(D)J` @kind static;
  #L3a5f42.  v5:= temp @kind wide;
  #L3a5f44.  v5:= (`float`) v5 @kind l2f;
  #L3a5f46.  v5:= v5 / v0 @kind float;
  #L3a5f48.  return v5;
  #L3a5f4a.  v5:= 0I;
  #L3a5f4c.  return v5;
}
procedure `void` `velocityTrackerPointerUpCleanUpIfNecessary`(`android.view.MotionEvent` v7 @kind object, `android.view.VelocityTracker` v8 @kind object) @signature `Lcom/github/mikephil/charting/utils/Utils;.velocityTrackerPointerUpCleanUpIfNecessary:(Landroid/view/MotionEvent;Landroid/view/VelocityTracker;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a6880.  v0:= `@@com.github.mikephil.charting.utils.Utils.mMaximumFlingVelocity` @type ^`int`;
  #L3a6884.  v0:= (`float`) v0 @kind i2f;
  #L3a6886.  v1:= 1000I;
  #L3a688a.  call `computeCurrentVelocity`(v8, v1, v0) @signature `Landroid/view/VelocityTracker;.computeCurrentVelocity:(IF)V` @kind virtual;
  #L3a6890.  call temp:= `getActionIndex`(v7) @signature `Landroid/view/MotionEvent;.getActionIndex:()I` @kind virtual;
  #L3a6896.  v0:= temp;
  #L3a6898.  call temp:= `getPointerId`(v7, v0) @signature `Landroid/view/MotionEvent;.getPointerId:(I)I` @kind virtual;
  #L3a689e.  v1:= temp;
  #L3a68a0.  call temp:= `getXVelocity`(v8, v1) @signature `Landroid/view/VelocityTracker;.getXVelocity:(I)F` @kind virtual;
  #L3a68a6.  v2:= temp;
  #L3a68a8.  call temp:= `getYVelocity`(v8, v1) @signature `Landroid/view/VelocityTracker;.getYVelocity:(I)F` @kind virtual;
  #L3a68ae.  v1:= temp;
  #L3a68b0.  call temp:= `getPointerCount`(v7) @signature `Landroid/view/MotionEvent;.getPointerCount:()I` @kind virtual;
  #L3a68b6.  v3:= temp;
  #L3a68b8.  v4:= 0I;
  #L3a68ba.  if v4 >= v3 then goto L3a68fe;
  #L3a68be.  if v4 != v0 then goto L3a68c4;
  #L3a68c2.  goto L3a68f8;
  #L3a68c4.  call temp:= `getPointerId`(v7, v4) @signature `Landroid/view/MotionEvent;.getPointerId:(I)I` @kind virtual;
  #L3a68ca.  v5:= temp;
  #L3a68cc.  call temp:= `getXVelocity`(v8, v5) @signature `Landroid/view/VelocityTracker;.getXVelocity:(I)F` @kind virtual;
  #L3a68d2.  v6:= temp;
  #L3a68d4.  v6:= v6 * v2 @kind float;
  #L3a68d8.  call temp:= `getYVelocity`(v8, v5) @signature `Landroid/view/VelocityTracker;.getYVelocity:(I)F` @kind virtual;
  #L3a68de.  v5:= temp;
  #L3a68e0.  v5:= v5 * v1 @kind float;
  #L3a68e4.  v6:= v6 + v5 @kind float;
  #L3a68e6.  v5:= 0I;
  #L3a68e8.  v5:= fcmpg(v6, v5);
  #L3a68ec.  if v5 >= 0 then goto L3a68f8;
  #L3a68f0.  call `clear`(v8) @signature `Landroid/view/VelocityTracker;.clear:()V` @kind virtual;
  #L3a68f6.  goto L3a68fe;
  #L3a68f8.  v4:= v4 + 1;
  #L3a68fc.  goto L3a68ba;
  #L3a68fe.  return @kind void;
}
