record `co.infinum.goldfinger.Goldfinger$Type` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `co.infinum.goldfinger.Goldfinger$Type`[] `@@co.infinum.goldfinger.Goldfinger$Type.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `co.infinum.goldfinger.Goldfinger$Type` `@@co.infinum.goldfinger.Goldfinger$Type.ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `co.infinum.goldfinger.Goldfinger$Type` `@@co.infinum.goldfinger.Goldfinger$Type.INFO` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `co.infinum.goldfinger.Goldfinger$Type` `@@co.infinum.goldfinger.Goldfinger$Type.SUCCESS` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lco/infinum/goldfinger/Goldfinger$Type;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2af52c.  v0:= new `co.infinum.goldfinger.Goldfinger$Type`;
  #L2af530.  v1:= "SUCCESS" @kind object;
  #L2af534.  v2:= 0I;
  #L2af536.  call `<init>`(v0, v1, v2) @signature `Lco/infinum/goldfinger/Goldfinger$Type;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2af53c.  `@@co.infinum.goldfinger.Goldfinger$Type.SUCCESS` @type ^`co.infinum.goldfinger.Goldfinger$Type` := v0 @kind object;
  #L2af540.  v1:= new `co.infinum.goldfinger.Goldfinger$Type`;
  #L2af544.  v3:= "INFO" @kind object;
  #L2af548.  v4:= 1I;
  #L2af54a.  call `<init>`(v1, v3, v4) @signature `Lco/infinum/goldfinger/Goldfinger$Type;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2af550.  `@@co.infinum.goldfinger.Goldfinger$Type.INFO` @type ^`co.infinum.goldfinger.Goldfinger$Type` := v1 @kind object;
  #L2af554.  v3:= new `co.infinum.goldfinger.Goldfinger$Type`;
  #L2af558.  v5:= "ERROR" @kind object;
  #L2af55c.  v6:= 2I;
  #L2af55e.  call `<init>`(v3, v5, v6) @signature `Lco/infinum/goldfinger/Goldfinger$Type;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2af564.  `@@co.infinum.goldfinger.Goldfinger$Type.ERROR` @type ^`co.infinum.goldfinger.Goldfinger$Type` := v3 @kind object;
  #L2af568.  v5:= 3I;
  #L2af56a.  v5:= new `co.infinum.goldfinger.Goldfinger$Type`[v5];
  #L2af56e.  v5[v2]:= v0 @kind object;
  #L2af572.  v5[v4]:= v1 @kind object;
  #L2af576.  v5[v6]:= v3 @kind object;
  #L2af57a.  `@@co.infinum.goldfinger.Goldfinger$Type.$VALUES` @type ^`co.infinum.goldfinger.Goldfinger$Type`[] := v5 @kind object;
  #L2af57e.  return @kind void;
}
procedure `void` `<init>`(`co.infinum.goldfinger.Goldfinger$Type` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lco/infinum/goldfinger/Goldfinger$Type;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2af590.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2af596.  return @kind void;
}
procedure `co.infinum.goldfinger.Goldfinger$Type` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lco/infinum/goldfinger/Goldfinger$Type;.valueOf:(Ljava/lang/String;)Lco/infinum/goldfinger/Goldfinger$Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2af4e4.  v0:= constclass @type ^`co.infinum.goldfinger.Goldfinger$Type` @kind object;
  #L2af4e8.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L2af4ee.  v1:= temp @kind object;
  #L2af4f0.  v1:= (`co.infinum.goldfinger.Goldfinger$Type`) v1 @kind object;
  #L2af4f4.  return v1 @kind object;
}
procedure `co.infinum.goldfinger.Goldfinger$Type`[] `values`() @signature `Lco/infinum/goldfinger/Goldfinger$Type;.values:()[Lco/infinum/goldfinger/Goldfinger$Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2af508.  v0:= `@@co.infinum.goldfinger.Goldfinger$Type.$VALUES` @type ^`co.infinum.goldfinger.Goldfinger$Type`[] @kind object;
  #L2af50c.  call temp:= `clone`(v0) @signature `[Lco/infinum/goldfinger/Goldfinger$Type;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2af512.  v0:= temp @kind object;
  #L2af514.  v0:= (`co.infinum.goldfinger.Goldfinger$Type`[]) v0 @kind object;
  #L2af518.  return v0 @kind object;
}
