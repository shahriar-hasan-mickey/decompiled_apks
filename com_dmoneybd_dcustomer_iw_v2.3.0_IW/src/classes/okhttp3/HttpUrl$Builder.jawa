record `okhttp3.HttpUrl$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.HttpUrl$Builder.a` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.b` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.c` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.d` @AccessFlag ;
  `int` `okhttp3.HttpUrl$Builder.e` @AccessFlag ;
  `java.util.List` `okhttp3.HttpUrl$Builder.f` @AccessFlag FINAL;
  `java.util.List` `okhttp3.HttpUrl$Builder.g` @AccessFlag ;
  `java.lang.String` `okhttp3.HttpUrl$Builder.h` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.HttpUrl$Builder` v2 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4fd020.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fd026.  v0:= "" @kind object;
  #L4fd02a.  v2.`okhttp3.HttpUrl$Builder.b` @type ^`java.lang.String` := v0 @kind object;
  #L4fd02e.  v2.`okhttp3.HttpUrl$Builder.c` @type ^`java.lang.String` := v0 @kind object;
  #L4fd032.  v1:= -1I;
  #L4fd034.  v2.`okhttp3.HttpUrl$Builder.e` @type ^`int` := v1;
  #L4fd038.  v1:= new `java.util.ArrayList`;
  #L4fd03c.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4fd042.  v2.`okhttp3.HttpUrl$Builder.f` @type ^`java.util.List` := v1 @kind object;
  #L4fd046.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fd04c.  return @kind void;
}
procedure `okhttp3.HttpUrl$Builder` `addPathSegments`(`okhttp3.HttpUrl$Builder` v8 @kind this, `java.lang.String` v9 @kind object, `boolean` v10 ) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;Z)Lokhttp3/HttpUrl$Builder;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4fc440.  v0:= 0I;
  #L4fc442.  v3:= 0I;
  #L4fc444.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fc44a.  v1:= temp;
  #L4fc44c.  v2:= "/\\" @kind object;
  #L4fc450.  call temp:= `delimiterOffset`(v9, v3, v1, v2) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L4fc456.  v7:= temp;
  #L4fc458.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fc45e.  v1:= temp;
  #L4fc460.  if v7 >= v1 then goto L4fc46a;
  #L4fc464.  v1:= 1I;
  #L4fc466.  v5:= 1I;
  #L4fc468.  goto L4fc46c;
  #L4fc46a.  v5:= 0I;
  #L4fc46c.  v1:= v8 @kind object;
  #L4fc46e.  v2:= v9 @kind object;
  #L4fc470.  v4:= v7;
  #L4fc472.  v6:= v10;
  #L4fc474.  call `push`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L4fc47a.  v3:= v7 + 1;
  #L4fc47e.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fc484.  v1:= temp;
  #L4fc486.  if v3 <= v1 then goto L4fc444;
  #L4fc48a.  return v8 @kind object;
}
procedure `java.lang.String` `canonicalizeHost`(`java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4fc118.  v0:= 0I;
  #L4fc11a.  call temp:= `g`(v1, v2, v3, v0) @signature `Lokhttp3/HttpUrl;.g:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L4fc120.  v1:= temp @kind object;
  #L4fc122.  call temp:= `canonicalizeHost`(v1) @signature `Lokhttp3/internal/Util;.canonicalizeHost:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L4fc128.  v1:= temp @kind object;
  #L4fc12a.  return v1 @kind object;
}
procedure `boolean` `isDot`(`okhttp3.HttpUrl$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4fbed0.  v0:= "." @kind object;
  #L4fbed4.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fbeda.  v0:= temp;
  #L4fbedc.  if v0 != 0 then goto L4fbef6;
  #L4fbee0.  v0:= "%2e" @kind object;
  #L4fbee4.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4fbeea.  v2:= temp;
  #L4fbeec.  if v2 == 0 then goto L4fbef2;
  #L4fbef0.  goto L4fbef6;
  #L4fbef2.  v2:= 0I;
  #L4fbef4.  goto L4fbef8;
  #L4fbef6.  v2:= 1I;
  #L4fbef8.  return v2;
}
procedure `boolean` `isDotDot`(`okhttp3.HttpUrl$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4fbf0c.  v0:= ".." @kind object;
  #L4fbf10.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fbf16.  v0:= temp;
  #L4fbf18.  if v0 != 0 then goto L4fbf52;
  #L4fbf1c.  v0:= "%2e." @kind object;
  #L4fbf20.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4fbf26.  v0:= temp;
  #L4fbf28.  if v0 != 0 then goto L4fbf52;
  #L4fbf2c.  v0:= ".%2e" @kind object;
  #L4fbf30.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4fbf36.  v0:= temp;
  #L4fbf38.  if v0 != 0 then goto L4fbf52;
  #L4fbf3c.  v0:= "%2e%2e" @kind object;
  #L4fbf40.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4fbf46.  v2:= temp;
  #L4fbf48.  if v2 == 0 then goto L4fbf4e;
  #L4fbf4c.  goto L4fbf52;
  #L4fbf4e.  v2:= 0I;
  #L4fbf50.  goto L4fbf54;
  #L4fbf52.  v2:= 1I;
  #L4fbf54.  return v2;
}
procedure `int` `parsePort`(`java.lang.String` v10 @kind object, `int` v11 , `int` v12 ) @signature `Lokhttp3/HttpUrl$Builder;.parsePort:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L4fbf94.  v0:= -1I;
  #L4fbf96.  v4:= "" @kind object;
  #L4fbf9a.  v5:= 0I;
  #L4fbf9c.  v6:= 0I;
  #L4fbf9e.  v7:= 0I;
  #L4fbfa0.  v8:= 1I;
  #L4fbfa2.  v9:= 0I;
  #L4fbfa4.  v1:= v10 @kind object;
  #L4fbfa6.  v2:= v11;
  #L4fbfa8.  v3:= v12;
  #L4fbfaa.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L4fbfb0.  v10:= temp @kind object;
  #L4fbfb2.  call temp:= `parseInt`(v10) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L4fbfb8.  v10:= temp;
  #L4fbfba.  if v10 <= 0 then goto L4fbfca;
  #L4fbfbe.  v11:= 65535I;
  #L4fbfc4.  if v10 > v11 then goto L4fbfca;
  #L4fbfc8.  return v10;
  #L4fbfca.  return v0;
  catch `java.lang.NumberFormatException` @[L4fbf96..L4fbfba] goto L4fbfca;
}
procedure `void` `pop`(`okhttp3.HttpUrl$Builder` v3 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.pop:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4fd060.  v0:= v3.`okhttp3.HttpUrl$Builder.f` @type ^`java.util.List` @kind object;
  #L4fd064.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4fd06a.  v1:= temp;
  #L4fd06c.  v1:= v1 + -1;
  #L4fd070.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L4fd076.  v0:= temp @kind object;
  #L4fd078.  v0:= (`java.lang.String`) v0 @kind object;
  #L4fd07c.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L4fd082.  v0:= temp;
  #L4fd084.  v1:= "" @kind object;
  #L4fd088.  if v0 == 0 then goto L4fd0b4;
  #L4fd08c.  v0:= v3.`okhttp3.HttpUrl$Builder.f` @type ^`java.util.List` @kind object;
  #L4fd090.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L4fd096.  v0:= temp;
  #L4fd098.  if v0 != 0 then goto L4fd0b4;
  #L4fd09c.  v0:= v3.`okhttp3.HttpUrl$Builder.f` @type ^`java.util.List` @kind object;
  #L4fd0a0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4fd0a6.  v2:= temp;
  #L4fd0a8.  v2:= v2 + -1;
  #L4fd0ac.  call temp:= `set`(v0, v2, v1) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fd0b2.  goto L4fd0be;
  #L4fd0b4.  v0:= v3.`okhttp3.HttpUrl$Builder.f` @type ^`java.util.List` @kind object;
  #L4fd0b8.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fd0be.  return @kind void;
}
procedure `int` `portColonOffset`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lokhttp3/HttpUrl$Builder;.portColonOffset:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4fbfec.  if v3 >= v4 then goto L4fc02a;
  #L4fbff0.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4fbff6.  v0:= temp;
  #L4fbff8.  v1:= 58I;
  #L4fbffc.  if v0 == v1 then goto L4fc028;
  #L4fc000.  v1:= 91I;
  #L4fc004.  if v0 == v1 then goto L4fc00a;
  #L4fc008.  goto L4fc022;
  #L4fc00a.  v3:= v3 + 1;
  #L4fc00e.  if v3 >= v4 then goto L4fc022;
  #L4fc012.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4fc018.  v0:= temp;
  #L4fc01a.  v1:= 93I;
  #L4fc01e.  if v0 != v1 then goto L4fc00a;
  #L4fc022.  v3:= v3 + 1;
  #L4fc026.  goto L4fbfec;
  #L4fc028.  return v3;
  #L4fc02a.  return v4;
}
procedure `void` `push`(`okhttp3.HttpUrl$Builder` v9 @kind this, `java.lang.String` v10 @kind object, `int` v11 , `int` v12 , `boolean` v13 , `boolean` v14 ) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4fd0d0.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L4fd0d4.  v5:= 0I;
  #L4fd0d6.  v6:= 0I;
  #L4fd0d8.  v7:= 1I;
  #L4fd0da.  v8:= 0I;
  #L4fd0dc.  v0:= v10 @kind object;
  #L4fd0de.  v1:= v11;
  #L4fd0e0.  v2:= v12;
  #L4fd0e2.  v4:= v14;
  #L4fd0e4.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L4fd0ea.  v10:= temp @kind object;
  #L4fd0ec.  call temp:= `isDot`(v9, v10) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @kind direct;
  #L4fd0f2.  v11:= temp;
  #L4fd0f4.  if v11 == 0 then goto L4fd0fa;
  #L4fd0f8.  return @kind void;
  #L4fd0fa.  call temp:= `isDotDot`(v9, v10) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @kind direct;
  #L4fd100.  v11:= temp;
  #L4fd102.  if v11 == 0 then goto L4fd10e;
  #L4fd106.  call `pop`(v9) @signature `Lokhttp3/HttpUrl$Builder;.pop:()V` @kind direct;
  #L4fd10c.  return @kind void;
  #L4fd10e.  v11:= v9.`okhttp3.HttpUrl$Builder.f` @type ^`java.util.List` @kind object;
  #L4fd112.  call temp:= `size`(v11) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4fd118.  v12:= temp;
  #L4fd11a.  v12:= v12 + -1;
  #L4fd11e.  call temp:= `get`(v11, v12) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4fd124.  v11:= temp @kind object;
  #L4fd126.  v11:= (`java.lang.String`) v11 @kind object;
  #L4fd12a.  call temp:= `isEmpty`(v11) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L4fd130.  v11:= temp;
  #L4fd132.  if v11 == 0 then goto L4fd14e;
  #L4fd136.  v11:= v9.`okhttp3.HttpUrl$Builder.f` @type ^`java.util.List` @kind object;
  #L4fd13a.  call temp:= `size`(v11) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4fd140.  v12:= temp;
  #L4fd142.  v12:= v12 + -1;
  #L4fd146.  call temp:= `set`(v11, v12, v10) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fd14c.  goto L4fd158;
  #L4fd14e.  v11:= v9.`okhttp3.HttpUrl$Builder.f` @type ^`java.util.List` @kind object;
  #L4fd152.  call temp:= `add`(v11, v10) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fd158.  if v13 == 0 then goto L4fd16a;
  #L4fd15c.  v10:= v9.`okhttp3.HttpUrl$Builder.f` @type ^`java.util.List` @kind object;
  #L4fd160.  v11:= "" @kind object;
  #L4fd164.  call temp:= `add`(v10, v11) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fd16a.  return @kind void;
}
procedure `void` `removeAllCanonicalQueryParameters`(`okhttp3.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.removeAllCanonicalQueryParameters:(Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4fd17c.  v0:= v3.`okhttp3.HttpUrl$Builder.g` @type ^`java.util.List` @kind object;
  #L4fd180.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4fd186.  v0:= temp;
  #L4fd188.  v0:= v0 + -2;
  #L4fd18c.  if v0 < 0 then goto L4fd1de;
  #L4fd190.  v1:= v3.`okhttp3.HttpUrl$Builder.g` @type ^`java.util.List` @kind object;
  #L4fd194.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4fd19a.  v1:= temp @kind object;
  #L4fd19c.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fd1a2.  v1:= temp;
  #L4fd1a4.  if v1 == 0 then goto L4fd1d8;
  #L4fd1a8.  v1:= v3.`okhttp3.HttpUrl$Builder.g` @type ^`java.util.List` @kind object;
  #L4fd1ac.  v2:= v0 + 1;
  #L4fd1b0.  call temp:= `remove`(v1, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L4fd1b6.  v1:= v3.`okhttp3.HttpUrl$Builder.g` @type ^`java.util.List` @kind object;
  #L4fd1ba.  call temp:= `remove`(v1, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L4fd1c0.  v1:= v3.`okhttp3.HttpUrl$Builder.g` @type ^`java.util.List` @kind object;
  #L4fd1c4.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L4fd1ca.  v1:= temp;
  #L4fd1cc.  if v1 == 0 then goto L4fd1d8;
  #L4fd1d0.  v4:= 0I;
  #L4fd1d2.  v3.`okhttp3.HttpUrl$Builder.g` @type ^`java.util.List` := v4 @kind object;
  #L4fd1d6.  return @kind void;
  #L4fd1d8.  v0:= v0 + -2;
  #L4fd1dc.  goto L4fd18c;
  #L4fd1de.  return @kind void;
}
procedure `void` `resolvePath`(`okhttp3.HttpUrl$Builder` v10 @kind this, `java.lang.String` v11 @kind object, `int` v12 , `int` v13 ) @signature `Lokhttp3/HttpUrl$Builder;.resolvePath:(Ljava/lang/String;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L4fd1f0.  if v12 != v13 then goto L4fd1f6;
  #L4fd1f4.  return @kind void;
  #L4fd1f6.  call temp:= `charAt`(v11, v12) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4fd1fc.  v0:= temp;
  #L4fd1fe.  v1:= 47I;
  #L4fd202.  v2:= "" @kind object;
  #L4fd206.  v3:= 1I;
  #L4fd208.  if v0 == v1 then goto L4fd22c;
  #L4fd20c.  v1:= 92I;
  #L4fd210.  if v0 != v1 then goto L4fd216;
  #L4fd214.  goto L4fd22c;
  #L4fd216.  v0:= v10.`okhttp3.HttpUrl$Builder.f` @type ^`java.util.List` @kind object;
  #L4fd21a.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4fd220.  v1:= temp;
  #L4fd222.  v1:= v1 - v3 @kind int;
  #L4fd224.  call temp:= `set`(v0, v1, v2) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fd22a.  goto L4fd242;
  #L4fd22c.  v0:= v10.`okhttp3.HttpUrl$Builder.f` @type ^`java.util.List` @kind object;
  #L4fd230.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L4fd236.  v0:= v10.`okhttp3.HttpUrl$Builder.f` @type ^`java.util.List` @kind object;
  #L4fd23a.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fd240.  goto L4fd272;
  #L4fd242.  v6:= v12;
  #L4fd244.  if v6 >= v13 then goto L4fd278;
  #L4fd248.  v12:= "/\\" @kind object;
  #L4fd24c.  call temp:= `delimiterOffset`(v11, v6, v13, v12) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L4fd252.  v12:= temp;
  #L4fd254.  if v12 >= v13 then goto L4fd25c;
  #L4fd258.  v0:= 1I;
  #L4fd25a.  goto L4fd25e;
  #L4fd25c.  v0:= 0I;
  #L4fd25e.  v9:= 1I;
  #L4fd260.  v4:= v10 @kind object;
  #L4fd262.  v5:= v11 @kind object;
  #L4fd264.  v7:= v12;
  #L4fd266.  v8:= v0;
  #L4fd268.  call `push`(v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L4fd26e.  if v0 == 0 then goto L4fd242;
  #L4fd272.  v12:= v12 + 1;
  #L4fd276.  goto L4fd242;
  #L4fd278.  return @kind void;
}
procedure `int` `schemeDelimiterOffset`(`java.lang.String` v7 @kind object, `int` v8 , `int` v9 ) @signature `Lokhttp3/HttpUrl$Builder;.schemeDelimiterOffset:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4fc03c.  v0:= v9 - v8 @kind int;
  #L4fc040.  v1:= -1I;
  #L4fc042.  v2:= 2I;
  #L4fc044.  if v0 >= v2 then goto L4fc04a;
  #L4fc048.  return v1;
  #L4fc04a.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4fc050.  v0:= temp;
  #L4fc052.  v2:= 90I;
  #L4fc056.  v3:= 122I;
  #L4fc05a.  v4:= 65I;
  #L4fc05e.  v5:= 97I;
  #L4fc062.  if v0 < v5 then goto L4fc06a;
  #L4fc066.  if v0 <= v3 then goto L4fc074;
  #L4fc06a.  if v0 < v4 then goto L4fc0c8;
  #L4fc06e.  if v0 <= v2 then goto L4fc074;
  #L4fc072.  goto L4fc0c8;
  #L4fc074.  v8:= v8 + 1;
  #L4fc078.  if v8 >= v9 then goto L4fc0c8;
  #L4fc07c.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4fc082.  v0:= temp;
  #L4fc084.  if v0 < v5 then goto L4fc08c;
  #L4fc088.  if v0 <= v3 then goto L4fc074;
  #L4fc08c.  if v0 < v4 then goto L4fc094;
  #L4fc090.  if v0 <= v2 then goto L4fc074;
  #L4fc094.  v6:= 48I;
  #L4fc098.  if v0 < v6 then goto L4fc0a4;
  #L4fc09c.  v6:= 57I;
  #L4fc0a0.  if v0 <= v6 then goto L4fc074;
  #L4fc0a4.  v6:= 43I;
  #L4fc0a8.  if v0 == v6 then goto L4fc074;
  #L4fc0ac.  v6:= 45I;
  #L4fc0b0.  if v0 == v6 then goto L4fc074;
  #L4fc0b4.  v6:= 46I;
  #L4fc0b8.  if v0 != v6 then goto L4fc0be;
  #L4fc0bc.  goto L4fc074;
  #L4fc0be.  v7:= 58I;
  #L4fc0c2.  if v0 != v7 then goto L4fc0c8;
  #L4fc0c6.  return v8;
  #L4fc0c8.  return v1;
}
procedure `int` `slashCount`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lokhttp3/HttpUrl$Builder;.slashCount:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4fc0dc.  v0:= 0I;
  #L4fc0de.  if v4 >= v5 then goto L4fc104;
  #L4fc0e2.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4fc0e8.  v1:= temp;
  #L4fc0ea.  v2:= 92I;
  #L4fc0ee.  if v1 == v2 then goto L4fc0fa;
  #L4fc0f2.  v2:= 47I;
  #L4fc0f6.  if v1 != v2 then goto L4fc104;
  #L4fc0fa.  v0:= v0 + 1;
  #L4fc0fe.  v4:= v4 + 1;
  #L4fc102.  goto L4fc0de;
  #L4fc104.  return v0;
}
procedure `int` `a`(`okhttp3.HttpUrl$Builder` v2 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.a:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4fbf68.  v0:= v2.`okhttp3.HttpUrl$Builder.e` @type ^`int`;
  #L4fbf6c.  v1:= -1I;
  #L4fbf6e.  if v0 == v1 then goto L4fbf74;
  #L4fbf72.  goto L4fbf80;
  #L4fbf74.  v0:= v2.`okhttp3.HttpUrl$Builder.a` @type ^`java.lang.String` @kind object;
  #L4fbf78.  call temp:= `defaultPort`(v0) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L4fbf7e.  v0:= temp;
  #L4fbf80.  return v0;
}
procedure `okhttp3.HttpUrl$Builder` `addEncodedPathSegment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedPathSegment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4fc2dc.  if v7 == 0 then goto L4fc2fa;
  #L4fc2e0.  v2:= 0I;
  #L4fc2e2.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fc2e8.  v3:= temp;
  #L4fc2ea.  v4:= 0I;
  #L4fc2ec.  v5:= 1I;
  #L4fc2ee.  v0:= v6 @kind object;
  #L4fc2f0.  v1:= v7 @kind object;
  #L4fc2f2.  call `push`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L4fc2f8.  return v6 @kind object;
  #L4fc2fa.  v7:= new `java.lang.NullPointerException`;
  #L4fc2fe.  v0:= "encodedPathSegment == null" @kind object;
  #L4fc302.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fc308.  throw v7;
}
procedure `okhttp3.HttpUrl$Builder` `addEncodedPathSegments`(`okhttp3.HttpUrl$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedPathSegments:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fc31c.  if v2 == 0 then goto L4fc32c;
  #L4fc320.  v0:= 1I;
  #L4fc322.  call temp:= `addPathSegments`(v1, v2, v0) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;Z)Lokhttp3/HttpUrl$Builder;` @kind direct;
  #L4fc328.  v2:= temp @kind object;
  #L4fc32a.  return v2 @kind object;
  #L4fc32c.  v2:= new `java.lang.NullPointerException`;
  #L4fc330.  v0:= "encodedPathSegments == null" @kind object;
  #L4fc334.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fc33a.  throw v2;
}
procedure `okhttp3.HttpUrl$Builder` `addEncodedQueryParameter`(`okhttp3.HttpUrl$Builder` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4fc34c.  if v8 == 0 then goto L4fc3b0;
  #L4fc350.  v0:= v7.`okhttp3.HttpUrl$Builder.g` @type ^`java.util.List` @kind object;
  #L4fc354.  if v0 != 0 then goto L4fc366;
  #L4fc358.  v0:= new `java.util.ArrayList`;
  #L4fc35c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4fc362.  v7.`okhttp3.HttpUrl$Builder.g` @type ^`java.util.List` := v0 @kind object;
  #L4fc366.  v0:= v7.`okhttp3.HttpUrl$Builder.g` @type ^`java.util.List` @kind object;
  #L4fc36a.  v3:= 1I;
  #L4fc36c.  v4:= 0I;
  #L4fc36e.  v5:= 1I;
  #L4fc370.  v6:= 1I;
  #L4fc372.  v2:= " \"'<>#&=" @kind object;
  #L4fc376.  v1:= v8 @kind object;
  #L4fc378.  call temp:= `b`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/HttpUrl;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L4fc37e.  v8:= temp @kind object;
  #L4fc380.  call temp:= `add`(v0, v8) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fc386.  v8:= v7.`okhttp3.HttpUrl$Builder.g` @type ^`java.util.List` @kind object;
  #L4fc38a.  if v9 == 0 then goto L4fc3a6;
  #L4fc38e.  v2:= 1I;
  #L4fc390.  v3:= 0I;
  #L4fc392.  v4:= 1I;
  #L4fc394.  v5:= 1I;
  #L4fc396.  v1:= " \"'<>#&=" @kind object;
  #L4fc39a.  v0:= v9 @kind object;
  #L4fc39c.  call temp:= `b`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L4fc3a2.  v9:= temp @kind object;
  #L4fc3a4.  goto L4fc3a8;
  #L4fc3a6.  v9:= 0I;
  #L4fc3a8.  call temp:= `add`(v8, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fc3ae.  return v7 @kind object;
  #L4fc3b0.  v8:= new `java.lang.NullPointerException`;
  #L4fc3b4.  v9:= "encodedName == null" @kind object;
  #L4fc3b8.  call `<init>`(v8, v9) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fc3be.  throw v8;
}
procedure `okhttp3.HttpUrl$Builder` `addPathSegment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4fc3d0.  if v7 == 0 then goto L4fc3ee;
  #L4fc3d4.  v2:= 0I;
  #L4fc3d6.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fc3dc.  v3:= temp;
  #L4fc3de.  v4:= 0I;
  #L4fc3e0.  v5:= 0I;
  #L4fc3e2.  v0:= v6 @kind object;
  #L4fc3e4.  v1:= v7 @kind object;
  #L4fc3e6.  call `push`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl$Builder;.push:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L4fc3ec.  return v6 @kind object;
  #L4fc3ee.  v7:= new `java.lang.NullPointerException`;
  #L4fc3f2.  v0:= "pathSegment == null" @kind object;
  #L4fc3f6.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fc3fc.  throw v7;
}
procedure `okhttp3.HttpUrl$Builder` `addPathSegments`(`okhttp3.HttpUrl$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fc410.  if v2 == 0 then goto L4fc420;
  #L4fc414.  v0:= 0I;
  #L4fc416.  call temp:= `addPathSegments`(v1, v2, v0) @signature `Lokhttp3/HttpUrl$Builder;.addPathSegments:(Ljava/lang/String;Z)Lokhttp3/HttpUrl$Builder;` @kind direct;
  #L4fc41c.  v2:= temp @kind object;
  #L4fc41e.  return v2 @kind object;
  #L4fc420.  v2:= new `java.lang.NullPointerException`;
  #L4fc424.  v0:= "pathSegments == null" @kind object;
  #L4fc428.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fc42e.  throw v2;
}
procedure `okhttp3.HttpUrl$Builder` `addQueryParameter`(`okhttp3.HttpUrl$Builder` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.addQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4fc49c.  if v8 == 0 then goto L4fc500;
  #L4fc4a0.  v0:= v7.`okhttp3.HttpUrl$Builder.g` @type ^`java.util.List` @kind object;
  #L4fc4a4.  if v0 != 0 then goto L4fc4b6;
  #L4fc4a8.  v0:= new `java.util.ArrayList`;
  #L4fc4ac.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4fc4b2.  v7.`okhttp3.HttpUrl$Builder.g` @type ^`java.util.List` := v0 @kind object;
  #L4fc4b6.  v0:= v7.`okhttp3.HttpUrl$Builder.g` @type ^`java.util.List` @kind object;
  #L4fc4ba.  v3:= 0I;
  #L4fc4bc.  v4:= 0I;
  #L4fc4be.  v5:= 1I;
  #L4fc4c0.  v6:= 1I;
  #L4fc4c2.  v2:= " !\"#$&'(),/:;<=>?@[]\\^`{|}~" @kind object;
  #L4fc4c6.  v1:= v8 @kind object;
  #L4fc4c8.  call temp:= `b`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/HttpUrl;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L4fc4ce.  v8:= temp @kind object;
  #L4fc4d0.  call temp:= `add`(v0, v8) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fc4d6.  v8:= v7.`okhttp3.HttpUrl$Builder.g` @type ^`java.util.List` @kind object;
  #L4fc4da.  if v9 == 0 then goto L4fc4f6;
  #L4fc4de.  v2:= 0I;
  #L4fc4e0.  v3:= 0I;
  #L4fc4e2.  v4:= 1I;
  #L4fc4e4.  v5:= 1I;
  #L4fc4e6.  v1:= " !\"#$&'(),/:;<=>?@[]\\^`{|}~" @kind object;
  #L4fc4ea.  v0:= v9 @kind object;
  #L4fc4ec.  call temp:= `b`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L4fc4f2.  v9:= temp @kind object;
  #L4fc4f4.  goto L4fc4f8;
  #L4fc4f6.  v9:= 0I;
  #L4fc4f8.  call temp:= `add`(v8, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fc4fe.  return v7 @kind object;
  #L4fc500.  v8:= new `java.lang.NullPointerException`;
  #L4fc504.  v9:= "name == null" @kind object;
  #L4fc508.  call `<init>`(v8, v9) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fc50e.  throw v8;
}
procedure `okhttp3.HttpUrl$Builder` `b`(`okhttp3.HttpUrl$Builder` v21 @kind this, `okhttp3.HttpUrl` v22 @kind object, `java.lang.String` v23 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.b:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;

  #L4fc728.  v0:= v21 @kind object;
  #L4fc72c.  v1:= v22 @kind object;
  #L4fc730.  v10:= v23 @kind object;
  #L4fc734.  call temp:= `length`(v23) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fc73a.  v2:= temp;
  #L4fc73c.  v8:= 0I;
  #L4fc73e.  call temp:= `skipLeadingAsciiWhitespace`(v10, v8, v2) @signature `Lokhttp3/internal/Util;.skipLeadingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L4fc744.  v9:= temp;
  #L4fc746.  call temp:= `length`(v23) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fc74c.  v2:= temp;
  #L4fc74e.  call temp:= `skipTrailingAsciiWhitespace`(v10, v9, v2) @signature `Lokhttp3/internal/Util;.skipTrailingAsciiWhitespace:(Ljava/lang/String;II)I` @kind static;
  #L4fc754.  v11:= temp;
  #L4fc756.  call temp:= `schemeDelimiterOffset`(v10, v9, v11) @signature `Lokhttp3/HttpUrl$Builder;.schemeDelimiterOffset:(Ljava/lang/String;II)I` @kind static;
  #L4fc75c.  v12:= temp;
  #L4fc75e.  v13:= -1I;
  #L4fc760.  if v12 == v13 then goto L4fc7f8;
  #L4fc764.  v3:= 1I;
  #L4fc766.  v6:= 0I;
  #L4fc768.  v7:= 6I;
  #L4fc76a.  v5:= "https:" @kind object;
  #L4fc76e.  v2:= v23 @kind object;
  #L4fc772.  v4:= v9;
  #L4fc774.  call temp:= `regionMatches`(v2, v3, v4, v5, v6, v7) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L4fc77a.  v2:= temp;
  #L4fc77c.  if v2 == 0 then goto L4fc78e;
  #L4fc780.  v2:= "https" @kind object;
  #L4fc784.  v0.`okhttp3.HttpUrl$Builder.a` @type ^`java.lang.String` := v2 @kind object;
  #L4fc788.  v9:= v9 + 6;
  #L4fc78c.  goto L4fc804;
  #L4fc78e.  v3:= 1I;
  #L4fc790.  v6:= 0I;
  #L4fc792.  v7:= 5I;
  #L4fc794.  v5:= "http:" @kind object;
  #L4fc798.  v2:= v23 @kind object;
  #L4fc79c.  v4:= v9;
  #L4fc79e.  call temp:= `regionMatches`(v2, v3, v4, v5, v6, v7) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L4fc7a4.  v2:= temp;
  #L4fc7a6.  if v2 == 0 then goto L4fc7b8;
  #L4fc7aa.  v2:= "http" @kind object;
  #L4fc7ae.  v0.`okhttp3.HttpUrl$Builder.a` @type ^`java.lang.String` := v2 @kind object;
  #L4fc7b2.  v9:= v9 + 5;
  #L4fc7b6.  goto L4fc804;
  #L4fc7b8.  v1:= new `java.lang.IllegalArgumentException`;
  #L4fc7bc.  v2:= new `java.lang.StringBuilder`;
  #L4fc7c0.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fc7c6.  v3:= "Expected URL scheme 'http' or 'https' but was '" @kind object;
  #L4fc7ca.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc7d0.  call temp:= `substring`(v10, v8, v12) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L4fc7d6.  v3:= temp @kind object;
  #L4fc7d8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc7de.  v3:= "'" @kind object;
  #L4fc7e2.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc7e8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fc7ee.  v2:= temp @kind object;
  #L4fc7f0.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fc7f6.  throw v1;
  #L4fc7f8.  if v1 == 0 then goto L4fcb5c;
  #L4fc7fc.  v2:= v1.`okhttp3.HttpUrl.a` @type ^`java.lang.String` @kind object;
  #L4fc800.  v0.`okhttp3.HttpUrl$Builder.a` @type ^`java.lang.String` := v2 @kind object;
  #L4fc804.  call temp:= `slashCount`(v10, v9, v11) @signature `Lokhttp3/HttpUrl$Builder;.slashCount:(Ljava/lang/String;II)I` @kind static;
  #L4fc80a.  v2:= temp;
  #L4fc80c.  v3:= 2I;
  #L4fc80e.  v12:= 63I;
  #L4fc812.  v14:= 35I;
  #L4fc816.  if v2 >= v3 then goto L4fc89a;
  #L4fc81a.  if v1 == 0 then goto L4fc89a;
  #L4fc81e.  v3:= v1.`okhttp3.HttpUrl.a` @type ^`java.lang.String` @kind object;
  #L4fc822.  v4:= v0.`okhttp3.HttpUrl$Builder.a` @type ^`java.lang.String` @kind object;
  #L4fc826.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fc82c.  v3:= temp;
  #L4fc82e.  if v3 != 0 then goto L4fc834;
  #L4fc832.  goto L4fc89a;
  #L4fc834.  call temp:= `encodedUsername`(v22) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @kind virtual;
  #L4fc83a.  v2:= temp @kind object;
  #L4fc83c.  v0.`okhttp3.HttpUrl$Builder.b` @type ^`java.lang.String` := v2 @kind object;
  #L4fc840.  call temp:= `encodedPassword`(v22) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @kind virtual;
  #L4fc846.  v2:= temp @kind object;
  #L4fc848.  v0.`okhttp3.HttpUrl$Builder.c` @type ^`java.lang.String` := v2 @kind object;
  #L4fc84c.  v2:= v1.`okhttp3.HttpUrl.b` @type ^`java.lang.String` @kind object;
  #L4fc850.  v0.`okhttp3.HttpUrl$Builder.d` @type ^`java.lang.String` := v2 @kind object;
  #L4fc854.  v2:= v1.`okhttp3.HttpUrl.c` @type ^`int`;
  #L4fc858.  v0.`okhttp3.HttpUrl$Builder.e` @type ^`int` := v2;
  #L4fc85c.  v2:= v0.`okhttp3.HttpUrl$Builder.f` @type ^`java.util.List` @kind object;
  #L4fc860.  call `clear`(v2) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L4fc866.  v2:= v0.`okhttp3.HttpUrl$Builder.f` @type ^`java.util.List` @kind object;
  #L4fc86a.  call temp:= `encodedPathSegments`(v22) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @kind virtual;
  #L4fc870.  v3:= temp @kind object;
  #L4fc872.  call temp:= `addAll`(v2, v3) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L4fc878.  if v9 == v11 then goto L4fc888;
  #L4fc87c.  call temp:= `charAt`(v10, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4fc882.  v2:= temp;
  #L4fc884.  if v2 != v14 then goto L4fca86;
  #L4fc888.  call temp:= `encodedQuery`(v22) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @kind virtual;
  #L4fc88e.  v1:= temp @kind object;
  #L4fc890.  call temp:= `encodedQuery`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.encodedQuery:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L4fc896.  goto L4fca86;
  #L4fc89a.  v9:= v9 + v2 @kind int;
  #L4fc89c.  v2:= v9;
  #L4fc89e.  v16:= 0I;
  #L4fc8a2.  v17:= 0I;
  #L4fc8a6.  v1:= "@/\\?#" @kind object;
  #L4fc8aa.  call temp:= `delimiterOffset`(v10, v2, v11, v1) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L4fc8b0.  v9:= temp;
  #L4fc8b2.  if v9 == v11 then goto L4fc8c0;
  #L4fc8b6.  call temp:= `charAt`(v10, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4fc8bc.  v1:= temp;
  #L4fc8be.  goto L4fc8c2;
  #L4fc8c0.  v1:= -1I;
  #L4fc8c2.  if v1 == v13 then goto L4fc9f0;
  #L4fc8c6.  if v1 == v14 then goto L4fc9f0;
  #L4fc8ca.  v3:= 47I;
  #L4fc8ce.  if v1 == v3 then goto L4fc9f0;
  #L4fc8d2.  v3:= 92I;
  #L4fc8d6.  if v1 == v3 then goto L4fc9f0;
  #L4fc8da.  if v1 == v12 then goto L4fc9f0;
  #L4fc8de.  v3:= 64I;
  #L4fc8e2.  if v1 == v3 then goto L4fc8ea;
  #L4fc8e6.  goto L4fc9e4;
  #L4fc8ea.  v8:= "%40" @kind object;
  #L4fc8ee.  if v16 != 0 then goto L4fc994;
  #L4fc8f2.  v1:= 58I;
  #L4fc8f6.  call temp:= `delimiterOffset`(v10, v2, v9, v1) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L4fc8fc.  v7:= temp;
  #L4fc8fe.  v5:= 1I;
  #L4fc900.  v6:= 0I;
  #L4fc902.  v18:= 0I;
  #L4fc906.  v19:= 1I;
  #L4fc90a.  v20:= 0I;
  #L4fc90e.  v4:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L4fc912.  v1:= v23 @kind object;
  #L4fc916.  v3:= v7;
  #L4fc918.  v15:= v7;
  #L4fc91a.  v7:= v18;
  #L4fc91e.  v14:= v8 @kind object;
  #L4fc920.  v8:= v19;
  #L4fc924.  v12:= v9;
  #L4fc926.  v9:= v20 @kind object;
  #L4fc92a.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L4fc930.  v1:= temp @kind object;
  #L4fc932.  if v17 == 0 then goto L4fc95e;
  #L4fc936.  v2:= new `java.lang.StringBuilder`;
  #L4fc93a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fc940.  v3:= v0.`okhttp3.HttpUrl$Builder.b` @type ^`java.lang.String` @kind object;
  #L4fc944.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc94a.  call temp:= `append`(v2, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc950.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc956.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fc95c.  v1:= temp @kind object;
  #L4fc95e.  v0.`okhttp3.HttpUrl$Builder.b` @type ^`java.lang.String` := v1 @kind object;
  #L4fc962.  if v15 == v12 then goto L4fc98e;
  #L4fc966.  v2:= v15 + 1;
  #L4fc96a.  v5:= 1I;
  #L4fc96c.  v6:= 0I;
  #L4fc96e.  v7:= 0I;
  #L4fc970.  v8:= 1I;
  #L4fc972.  v9:= 0I;
  #L4fc974.  v4:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L4fc978.  v1:= v23 @kind object;
  #L4fc97c.  v3:= v12;
  #L4fc97e.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L4fc984.  v1:= temp @kind object;
  #L4fc986.  v0.`okhttp3.HttpUrl$Builder.c` @type ^`java.lang.String` := v1 @kind object;
  #L4fc98a.  v16:= 1I;
  #L4fc98e.  v17:= 1I;
  #L4fc992.  goto L4fc9e0;
  #L4fc994.  v14:= v8 @kind object;
  #L4fc996.  v12:= v9;
  #L4fc998.  v15:= new `java.lang.StringBuilder`;
  #L4fc99c.  call `<init>`(v15) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fc9a2.  v1:= v0.`okhttp3.HttpUrl$Builder.c` @type ^`java.lang.String` @kind object;
  #L4fc9a6.  call temp:= `append`(v15, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc9ac.  call temp:= `append`(v15, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc9b2.  v5:= 1I;
  #L4fc9b4.  v6:= 0I;
  #L4fc9b6.  v7:= 0I;
  #L4fc9b8.  v8:= 1I;
  #L4fc9ba.  v9:= 0I;
  #L4fc9bc.  v4:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L4fc9c0.  v1:= v23 @kind object;
  #L4fc9c4.  v3:= v12;
  #L4fc9c6.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L4fc9cc.  v1:= temp @kind object;
  #L4fc9ce.  call temp:= `append`(v15, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc9d4.  call temp:= `toString`(v15) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fc9da.  v1:= temp @kind object;
  #L4fc9dc.  v0.`okhttp3.HttpUrl$Builder.c` @type ^`java.lang.String` := v1 @kind object;
  #L4fc9e0.  v2:= v12 + 1;
  #L4fc9e4.  v12:= 63I;
  #L4fc9e8.  v14:= 35I;
  #L4fc9ec.  goto L4fc8a6;
  #L4fc9f0.  v12:= v9;
  #L4fc9f2.  call temp:= `portColonOffset`(v10, v2, v12) @signature `Lokhttp3/HttpUrl$Builder;.portColonOffset:(Ljava/lang/String;II)I` @kind static;
  #L4fc9f8.  v1:= temp;
  #L4fc9fa.  v3:= v1 + 1;
  #L4fc9fe.  v4:= 34I;
  #L4fca02.  if v3 >= v12 then goto L4fca60;
  #L4fca06.  call temp:= `canonicalizeHost`(v10, v2, v1) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L4fca0c.  v5:= temp @kind object;
  #L4fca0e.  v0.`okhttp3.HttpUrl$Builder.d` @type ^`java.lang.String` := v5 @kind object;
  #L4fca12.  call temp:= `parsePort`(v10, v3, v12) @signature `Lokhttp3/HttpUrl$Builder;.parsePort:(Ljava/lang/String;II)I` @kind static;
  #L4fca18.  v5:= temp;
  #L4fca1a.  v0.`okhttp3.HttpUrl$Builder.e` @type ^`int` := v5;
  #L4fca1e.  if v5 == v13 then goto L4fca24;
  #L4fca22.  goto L4fca7c;
  #L4fca24.  v1:= new `java.lang.IllegalArgumentException`;
  #L4fca28.  v2:= new `java.lang.StringBuilder`;
  #L4fca2c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fca32.  v5:= "Invalid URL port: \"" @kind object;
  #L4fca36.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fca3c.  call temp:= `substring`(v10, v3, v12) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L4fca42.  v3:= temp @kind object;
  #L4fca44.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fca4a.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fca50.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fca56.  v2:= temp @kind object;
  #L4fca58.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fca5e.  throw v1;
  #L4fca60.  call temp:= `canonicalizeHost`(v10, v2, v1) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L4fca66.  v3:= temp @kind object;
  #L4fca68.  v0.`okhttp3.HttpUrl$Builder.d` @type ^`java.lang.String` := v3 @kind object;
  #L4fca6c.  v3:= v0.`okhttp3.HttpUrl$Builder.a` @type ^`java.lang.String` @kind object;
  #L4fca70.  call temp:= `defaultPort`(v3) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L4fca76.  v3:= temp;
  #L4fca78.  v0.`okhttp3.HttpUrl$Builder.e` @type ^`int` := v3;
  #L4fca7c.  v3:= v0.`okhttp3.HttpUrl$Builder.d` @type ^`java.lang.String` @kind object;
  #L4fca80.  if v3 == 0 then goto L4fcb20;
  #L4fca84.  v9:= v12;
  #L4fca86.  v1:= "?#" @kind object;
  #L4fca8a.  call temp:= `delimiterOffset`(v10, v9, v11, v1) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L4fca90.  v1:= temp;
  #L4fca92.  call `resolvePath`(v0, v10, v9, v1) @signature `Lokhttp3/HttpUrl$Builder;.resolvePath:(Ljava/lang/String;II)V` @kind direct;
  #L4fca98.  if v1 >= v11 then goto L4fcae6;
  #L4fca9c.  call temp:= `charAt`(v10, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4fcaa2.  v2:= temp;
  #L4fcaa4.  v3:= 63I;
  #L4fcaa8.  if v2 != v3 then goto L4fcae6;
  #L4fcaac.  v2:= 35I;
  #L4fcab0.  call temp:= `delimiterOffset`(v10, v1, v11, v2) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L4fcab6.  v12:= temp;
  #L4fcab8.  v2:= v1 + 1;
  #L4fcabc.  v5:= 1I;
  #L4fcabe.  v6:= 0I;
  #L4fcac0.  v7:= 1I;
  #L4fcac2.  v8:= 1I;
  #L4fcac4.  v9:= 0I;
  #L4fcac6.  v4:= " \"'<>#" @kind object;
  #L4fcaca.  v1:= v23 @kind object;
  #L4fcace.  v3:= v12;
  #L4fcad0.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L4fcad6.  v1:= temp @kind object;
  #L4fcad8.  call temp:= `k`(v1) @signature `Lokhttp3/HttpUrl;.k:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L4fcade.  v1:= temp @kind object;
  #L4fcae0.  v0.`okhttp3.HttpUrl$Builder.g` @type ^`java.util.List` := v1 @kind object;
  #L4fcae4.  v1:= v12;
  #L4fcae6.  if v1 >= v11 then goto L4fcb1e;
  #L4fcaea.  call temp:= `charAt`(v10, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4fcaf0.  v2:= temp;
  #L4fcaf2.  v3:= 35I;
  #L4fcaf6.  if v2 != v3 then goto L4fcb1e;
  #L4fcafa.  v2:= 1I;
  #L4fcafc.  v2:= v2 + v1 @kind int;
  #L4fcafe.  v5:= 1I;
  #L4fcb00.  v6:= 0I;
  #L4fcb02.  v7:= 0I;
  #L4fcb04.  v8:= 0I;
  #L4fcb06.  v9:= 0I;
  #L4fcb08.  v4:= "" @kind object;
  #L4fcb0c.  v1:= v23 @kind object;
  #L4fcb10.  v3:= v11;
  #L4fcb12.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L4fcb18.  v1:= temp @kind object;
  #L4fcb1a.  v0.`okhttp3.HttpUrl$Builder.h` @type ^`java.lang.String` := v1 @kind object;
  #L4fcb1e.  return v0 @kind object;
  #L4fcb20.  v3:= new `java.lang.IllegalArgumentException`;
  #L4fcb24.  v5:= new `java.lang.StringBuilder`;
  #L4fcb28.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fcb2e.  v6:= "Invalid URL host: \"" @kind object;
  #L4fcb32.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fcb38.  call temp:= `substring`(v10, v2, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L4fcb3e.  v1:= temp @kind object;
  #L4fcb40.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fcb46.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fcb4c.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fcb52.  v1:= temp @kind object;
  #L4fcb54.  call `<init>`(v3, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fcb5a.  throw v3;
  #L4fcb5c.  v1:= new `java.lang.IllegalArgumentException`;
  #L4fcb60.  v2:= "Expected URL scheme 'http' or 'https' but no colon was found" @kind object;
  #L4fcb64.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fcb6a.  goto L4fcb6e;
  #L4fcb6c.  throw v1;
  #L4fcb6e.  goto L4fcb6c;
}
procedure `okhttp3.HttpUrl` `build`(`okhttp3.HttpUrl$Builder` v2 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fc290.  v0:= v2.`okhttp3.HttpUrl$Builder.a` @type ^`java.lang.String` @kind object;
  #L4fc294.  if v0 == 0 then goto L4fc2bc;
  #L4fc298.  v0:= v2.`okhttp3.HttpUrl$Builder.d` @type ^`java.lang.String` @kind object;
  #L4fc29c.  if v0 == 0 then goto L4fc2ac;
  #L4fc2a0.  v0:= new `okhttp3.HttpUrl`;
  #L4fc2a4.  call `<init>`(v0, v2) @signature `Lokhttp3/HttpUrl;.<init>:(Lokhttp3/HttpUrl$Builder;)V` @kind direct;
  #L4fc2aa.  return v0 @kind object;
  #L4fc2ac.  v0:= new `java.lang.IllegalStateException`;
  #L4fc2b0.  v1:= "host == null" @kind object;
  #L4fc2b4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fc2ba.  throw v0;
  #L4fc2bc.  v0:= new `java.lang.IllegalStateException`;
  #L4fc2c0.  v1:= "scheme == null" @kind object;
  #L4fc2c4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fc2ca.  throw v0;
}
procedure `okhttp3.HttpUrl$Builder` `c`(`okhttp3.HttpUrl$Builder` v10 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.c:()Lokhttp3/HttpUrl$Builder;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L4fcc50.  v0:= v10.`okhttp3.HttpUrl$Builder.f` @type ^`java.util.List` @kind object;
  #L4fcc54.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4fcc5a.  v0:= temp;
  #L4fcc5c.  v1:= 0I;
  #L4fcc5e.  v2:= 0I;
  #L4fcc60.  if v2 >= v0 then goto L4fcc9a;
  #L4fcc64.  v3:= v10.`okhttp3.HttpUrl$Builder.f` @type ^`java.util.List` @kind object;
  #L4fcc68.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4fcc6e.  v3:= temp @kind object;
  #L4fcc70.  v4:= v3 @kind object;
  #L4fcc72.  v4:= (`java.lang.String`) v4 @kind object;
  #L4fcc76.  v3:= v10.`okhttp3.HttpUrl$Builder.f` @type ^`java.util.List` @kind object;
  #L4fcc7a.  v6:= 1I;
  #L4fcc7c.  v7:= 1I;
  #L4fcc7e.  v8:= 0I;
  #L4fcc80.  v9:= 1I;
  #L4fcc82.  v5:= "[]" @kind object;
  #L4fcc86.  call temp:= `b`(v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L4fcc8c.  v4:= temp @kind object;
  #L4fcc8e.  call temp:= `set`(v3, v2, v4) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fcc94.  v2:= v2 + 1;
  #L4fcc98.  goto L4fcc60;
  #L4fcc9a.  v0:= v10.`okhttp3.HttpUrl$Builder.g` @type ^`java.util.List` @kind object;
  #L4fcc9e.  if v0 == 0 then goto L4fcce8;
  #L4fcca2.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4fcca8.  v0:= temp;
  #L4fccaa.  if v1 >= v0 then goto L4fcce8;
  #L4fccae.  v2:= v10.`okhttp3.HttpUrl$Builder.g` @type ^`java.util.List` @kind object;
  #L4fccb2.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4fccb8.  v2:= temp @kind object;
  #L4fccba.  v3:= v2 @kind object;
  #L4fccbc.  v3:= (`java.lang.String`) v3 @kind object;
  #L4fccc0.  if v3 == 0 then goto L4fcce2;
  #L4fccc4.  v2:= v10.`okhttp3.HttpUrl$Builder.g` @type ^`java.util.List` @kind object;
  #L4fccc8.  v5:= 1I;
  #L4fccca.  v6:= 1I;
  #L4fcccc.  v7:= 1I;
  #L4fccce.  v8:= 1I;
  #L4fccd0.  v4:= "\\^`{|}" @kind object;
  #L4fccd4.  call temp:= `b`(v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L4fccda.  v3:= temp @kind object;
  #L4fccdc.  call temp:= `set`(v2, v1, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fcce2.  v1:= v1 + 1;
  #L4fcce6.  goto L4fccaa;
  #L4fcce8.  v2:= v10.`okhttp3.HttpUrl$Builder.h` @type ^`java.lang.String` @kind object;
  #L4fccec.  if v2 == 0 then goto L4fcd08;
  #L4fccf0.  v4:= 1I;
  #L4fccf2.  v5:= 1I;
  #L4fccf4.  v6:= 0I;
  #L4fccf6.  v7:= 0I;
  #L4fccf8.  v3:= " \"#<>\\^`{|}" @kind object;
  #L4fccfc.  call temp:= `b`(v2, v3, v4, v5, v6, v7) @signature `Lokhttp3/HttpUrl;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L4fcd02.  v0:= temp @kind object;
  #L4fcd04.  v10.`okhttp3.HttpUrl$Builder.h` @type ^`java.lang.String` := v0 @kind object;
  #L4fcd08.  return v10 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `encodedFragment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.encodedFragment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4fc520.  if v7 == 0 then goto L4fc53c;
  #L4fc524.  v2:= 1I;
  #L4fc526.  v3:= 0I;
  #L4fc528.  v4:= 0I;
  #L4fc52a.  v5:= 0I;
  #L4fc52c.  v1:= "" @kind object;
  #L4fc530.  v0:= v7 @kind object;
  #L4fc532.  call temp:= `b`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L4fc538.  v7:= temp @kind object;
  #L4fc53a.  goto L4fc53e;
  #L4fc53c.  v7:= 0I;
  #L4fc53e.  v6.`okhttp3.HttpUrl$Builder.h` @type ^`java.lang.String` := v7 @kind object;
  #L4fc542.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `encodedPassword`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.encodedPassword:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4fc554.  if v7 == 0 then goto L4fc574;
  #L4fc558.  v2:= 1I;
  #L4fc55a.  v3:= 0I;
  #L4fc55c.  v4:= 0I;
  #L4fc55e.  v5:= 1I;
  #L4fc560.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L4fc564.  v0:= v7 @kind object;
  #L4fc566.  call temp:= `b`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L4fc56c.  v7:= temp @kind object;
  #L4fc56e.  v6.`okhttp3.HttpUrl$Builder.c` @type ^`java.lang.String` := v7 @kind object;
  #L4fc572.  return v6 @kind object;
  #L4fc574.  v7:= new `java.lang.NullPointerException`;
  #L4fc578.  v0:= "encodedPassword == null" @kind object;
  #L4fc57c.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fc582.  throw v7;
}
procedure `okhttp3.HttpUrl$Builder` `encodedPath`(`okhttp3.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.encodedPath:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4fc594.  if v4 == 0 then goto L4fc5e8;
  #L4fc598.  v0:= "/" @kind object;
  #L4fc59c.  call temp:= `startsWith`(v4, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L4fc5a2.  v0:= temp;
  #L4fc5a4.  if v0 == 0 then goto L4fc5ba;
  #L4fc5a8.  v0:= 0I;
  #L4fc5aa.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fc5b0.  v1:= temp;
  #L4fc5b2.  call `resolvePath`(v3, v4, v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.resolvePath:(Ljava/lang/String;II)V` @kind direct;
  #L4fc5b8.  return v3 @kind object;
  #L4fc5ba.  v0:= new `java.lang.IllegalArgumentException`;
  #L4fc5be.  v1:= new `java.lang.StringBuilder`;
  #L4fc5c2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fc5c8.  v2:= "unexpected encodedPath: " @kind object;
  #L4fc5cc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc5d2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc5d8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fc5de.  v4:= temp @kind object;
  #L4fc5e0.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fc5e6.  throw v0;
  #L4fc5e8.  v4:= new `java.lang.NullPointerException`;
  #L4fc5ec.  v0:= "encodedPath == null" @kind object;
  #L4fc5f0.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fc5f6.  throw v4;
}
procedure `okhttp3.HttpUrl$Builder` `encodedQuery`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.encodedQuery:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4fc608.  if v7 == 0 then goto L4fc62c;
  #L4fc60c.  v2:= 1I;
  #L4fc60e.  v3:= 0I;
  #L4fc610.  v4:= 1I;
  #L4fc612.  v5:= 1I;
  #L4fc614.  v1:= " \"'<>#" @kind object;
  #L4fc618.  v0:= v7 @kind object;
  #L4fc61a.  call temp:= `b`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L4fc620.  v7:= temp @kind object;
  #L4fc622.  call temp:= `k`(v7) @signature `Lokhttp3/HttpUrl;.k:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L4fc628.  v7:= temp @kind object;
  #L4fc62a.  goto L4fc62e;
  #L4fc62c.  v7:= 0I;
  #L4fc62e.  v6.`okhttp3.HttpUrl$Builder.g` @type ^`java.util.List` := v7 @kind object;
  #L4fc632.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `encodedUsername`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.encodedUsername:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4fc644.  if v7 == 0 then goto L4fc664;
  #L4fc648.  v2:= 1I;
  #L4fc64a.  v3:= 0I;
  #L4fc64c.  v4:= 0I;
  #L4fc64e.  v5:= 1I;
  #L4fc650.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L4fc654.  v0:= v7 @kind object;
  #L4fc656.  call temp:= `b`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L4fc65c.  v7:= temp @kind object;
  #L4fc65e.  v6.`okhttp3.HttpUrl$Builder.b` @type ^`java.lang.String` := v7 @kind object;
  #L4fc662.  return v6 @kind object;
  #L4fc664.  v7:= new `java.lang.NullPointerException`;
  #L4fc668.  v0:= "encodedUsername == null" @kind object;
  #L4fc66c.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fc672.  throw v7;
}
procedure `okhttp3.HttpUrl$Builder` `fragment`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.fragment:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4fc684.  if v7 == 0 then goto L4fc6a0;
  #L4fc688.  v2:= 0I;
  #L4fc68a.  v3:= 0I;
  #L4fc68c.  v4:= 0I;
  #L4fc68e.  v5:= 0I;
  #L4fc690.  v1:= "" @kind object;
  #L4fc694.  v0:= v7 @kind object;
  #L4fc696.  call temp:= `b`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L4fc69c.  v7:= temp @kind object;
  #L4fc69e.  goto L4fc6a2;
  #L4fc6a0.  v7:= 0I;
  #L4fc6a2.  v6.`okhttp3.HttpUrl$Builder.h` @type ^`java.lang.String` := v7 @kind object;
  #L4fc6a6.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `host`(`okhttp3.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.host:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4fc6b8.  if v4 == 0 then goto L4fc706;
  #L4fc6bc.  v0:= 0I;
  #L4fc6be.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fc6c4.  v1:= temp;
  #L4fc6c6.  call temp:= `canonicalizeHost`(v4, v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.canonicalizeHost:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L4fc6cc.  v0:= temp @kind object;
  #L4fc6ce.  if v0 == 0 then goto L4fc6d8;
  #L4fc6d2.  v3.`okhttp3.HttpUrl$Builder.d` @type ^`java.lang.String` := v0 @kind object;
  #L4fc6d6.  return v3 @kind object;
  #L4fc6d8.  v0:= new `java.lang.IllegalArgumentException`;
  #L4fc6dc.  v1:= new `java.lang.StringBuilder`;
  #L4fc6e0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fc6e6.  v2:= "unexpected host: " @kind object;
  #L4fc6ea.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc6f0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc6f6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fc6fc.  v4:= temp @kind object;
  #L4fc6fe.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fc704.  throw v0;
  #L4fc706.  v4:= new `java.lang.NullPointerException`;
  #L4fc70a.  v0:= "host == null" @kind object;
  #L4fc70e.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fc714.  throw v4;
}
procedure `okhttp3.HttpUrl$Builder` `password`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.password:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4fcb80.  if v7 == 0 then goto L4fcba0;
  #L4fcb84.  v2:= 0I;
  #L4fcb86.  v3:= 0I;
  #L4fcb88.  v4:= 0I;
  #L4fcb8a.  v5:= 1I;
  #L4fcb8c.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L4fcb90.  v0:= v7 @kind object;
  #L4fcb92.  call temp:= `b`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L4fcb98.  v7:= temp @kind object;
  #L4fcb9a.  v6.`okhttp3.HttpUrl$Builder.c` @type ^`java.lang.String` := v7 @kind object;
  #L4fcb9e.  return v6 @kind object;
  #L4fcba0.  v7:= new `java.lang.NullPointerException`;
  #L4fcba4.  v0:= "password == null" @kind object;
  #L4fcba8.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fcbae.  throw v7;
}
procedure `okhttp3.HttpUrl$Builder` `port`(`okhttp3.HttpUrl$Builder` v3 @kind this, `int` v4 ) @signature `Lokhttp3/HttpUrl$Builder;.port:(I)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4fcbc0.  if v4 <= 0 then goto L4fcbd4;
  #L4fcbc4.  v0:= 65535I;
  #L4fcbca.  if v4 > v0 then goto L4fcbd4;
  #L4fcbce.  v3.`okhttp3.HttpUrl$Builder.e` @type ^`int` := v4;
  #L4fcbd2.  return v3 @kind object;
  #L4fcbd4.  v0:= new `java.lang.IllegalArgumentException`;
  #L4fcbd8.  v1:= new `java.lang.StringBuilder`;
  #L4fcbdc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fcbe2.  v2:= "unexpected port: " @kind object;
  #L4fcbe6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fcbec.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fcbf2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fcbf8.  v4:= temp @kind object;
  #L4fcbfa.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fcc00.  throw v0;
}
procedure `okhttp3.HttpUrl$Builder` `query`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.query:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4fcc14.  if v7 == 0 then goto L4fcc38;
  #L4fcc18.  v2:= 0I;
  #L4fcc1a.  v3:= 0I;
  #L4fcc1c.  v4:= 1I;
  #L4fcc1e.  v5:= 1I;
  #L4fcc20.  v1:= " \"'<>#" @kind object;
  #L4fcc24.  v0:= v7 @kind object;
  #L4fcc26.  call temp:= `b`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L4fcc2c.  v7:= temp @kind object;
  #L4fcc2e.  call temp:= `k`(v7) @signature `Lokhttp3/HttpUrl;.k:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L4fcc34.  v7:= temp @kind object;
  #L4fcc36.  goto L4fcc3a;
  #L4fcc38.  v7:= 0I;
  #L4fcc3a.  v6.`okhttp3.HttpUrl$Builder.g` @type ^`java.util.List` := v7 @kind object;
  #L4fcc3e.  return v6 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `removeAllEncodedQueryParameters`(`okhttp3.HttpUrl$Builder` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.removeAllEncodedQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4fcd1c.  if v8 == 0 then goto L4fcd48;
  #L4fcd20.  v0:= v7.`okhttp3.HttpUrl$Builder.g` @type ^`java.util.List` @kind object;
  #L4fcd24.  if v0 != 0 then goto L4fcd2a;
  #L4fcd28.  return v7 @kind object;
  #L4fcd2a.  v3:= 1I;
  #L4fcd2c.  v4:= 0I;
  #L4fcd2e.  v5:= 1I;
  #L4fcd30.  v6:= 1I;
  #L4fcd32.  v2:= " \"'<>#&=" @kind object;
  #L4fcd36.  v1:= v8 @kind object;
  #L4fcd38.  call temp:= `b`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/HttpUrl;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L4fcd3e.  v8:= temp @kind object;
  #L4fcd40.  call `removeAllCanonicalQueryParameters`(v7, v8) @signature `Lokhttp3/HttpUrl$Builder;.removeAllCanonicalQueryParameters:(Ljava/lang/String;)V` @kind direct;
  #L4fcd46.  return v7 @kind object;
  #L4fcd48.  v8:= new `java.lang.NullPointerException`;
  #L4fcd4c.  v0:= "encodedName == null" @kind object;
  #L4fcd50.  call `<init>`(v8, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fcd56.  throw v8;
}
procedure `okhttp3.HttpUrl$Builder` `removeAllQueryParameters`(`okhttp3.HttpUrl$Builder` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.removeAllQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4fcd68.  if v8 == 0 then goto L4fcd94;
  #L4fcd6c.  v0:= v7.`okhttp3.HttpUrl$Builder.g` @type ^`java.util.List` @kind object;
  #L4fcd70.  if v0 != 0 then goto L4fcd76;
  #L4fcd74.  return v7 @kind object;
  #L4fcd76.  v3:= 0I;
  #L4fcd78.  v4:= 0I;
  #L4fcd7a.  v5:= 1I;
  #L4fcd7c.  v6:= 1I;
  #L4fcd7e.  v2:= " !\"#$&'(),/:;<=>?@[]\\^`{|}~" @kind object;
  #L4fcd82.  v1:= v8 @kind object;
  #L4fcd84.  call temp:= `b`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/HttpUrl;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L4fcd8a.  v8:= temp @kind object;
  #L4fcd8c.  call `removeAllCanonicalQueryParameters`(v7, v8) @signature `Lokhttp3/HttpUrl$Builder;.removeAllCanonicalQueryParameters:(Ljava/lang/String;)V` @kind direct;
  #L4fcd92.  return v7 @kind object;
  #L4fcd94.  v8:= new `java.lang.NullPointerException`;
  #L4fcd98.  v0:= "name == null" @kind object;
  #L4fcd9c.  call `<init>`(v8, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fcda2.  throw v8;
}
procedure `okhttp3.HttpUrl$Builder` `removePathSegment`(`okhttp3.HttpUrl$Builder` v1 @kind this, `int` v2 ) @signature `Lokhttp3/HttpUrl$Builder;.removePathSegment:(I)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fcdb4.  v0:= v1.`okhttp3.HttpUrl$Builder.f` @type ^`java.util.List` @kind object;
  #L4fcdb8.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L4fcdbe.  v2:= v1.`okhttp3.HttpUrl$Builder.f` @type ^`java.util.List` @kind object;
  #L4fcdc2.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L4fcdc8.  v2:= temp;
  #L4fcdca.  if v2 == 0 then goto L4fcddc;
  #L4fcdce.  v2:= v1.`okhttp3.HttpUrl$Builder.f` @type ^`java.util.List` @kind object;
  #L4fcdd2.  v0:= "" @kind object;
  #L4fcdd6.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fcddc.  return v1 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `scheme`(`okhttp3.HttpUrl$Builder` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.scheme:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4fcdf0.  if v4 == 0 then goto L4fce4c;
  #L4fcdf4.  v0:= "http" @kind object;
  #L4fcdf8.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4fcdfe.  v1:= temp;
  #L4fce00.  if v1 == 0 then goto L4fce0a;
  #L4fce04.  v3.`okhttp3.HttpUrl$Builder.a` @type ^`java.lang.String` := v0 @kind object;
  #L4fce08.  goto L4fce1c;
  #L4fce0a.  v0:= "https" @kind object;
  #L4fce0e.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4fce14.  v1:= temp;
  #L4fce16.  if v1 == 0 then goto L4fce1e;
  #L4fce1a.  goto L4fce04;
  #L4fce1c.  return v3 @kind object;
  #L4fce1e.  v0:= new `java.lang.IllegalArgumentException`;
  #L4fce22.  v1:= new `java.lang.StringBuilder`;
  #L4fce26.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fce2c.  v2:= "unexpected scheme: " @kind object;
  #L4fce30.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fce36.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fce3c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fce42.  v4:= temp @kind object;
  #L4fce44.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fce4a.  throw v0;
  #L4fce4c.  v4:= new `java.lang.NullPointerException`;
  #L4fce50.  v0:= "scheme == null" @kind object;
  #L4fce54.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fce5a.  goto L4fce5e;
  #L4fce5c.  throw v4;
  #L4fce5e.  goto L4fce5c;
}
procedure `okhttp3.HttpUrl$Builder` `setEncodedPathSegment`(`okhttp3.HttpUrl$Builder` v9 @kind this, `int` v10 , `java.lang.String` v11 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.setEncodedPathSegment:(ILjava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4fce70.  if v11 == 0 then goto L4fcee8;
  #L4fce74.  v1:= 0I;
  #L4fce76.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fce7c.  v2:= temp;
  #L4fce7e.  v4:= 1I;
  #L4fce80.  v5:= 0I;
  #L4fce82.  v6:= 0I;
  #L4fce84.  v7:= 1I;
  #L4fce86.  v8:= 0I;
  #L4fce88.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L4fce8c.  v0:= v11 @kind object;
  #L4fce8e.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L4fce94.  v0:= temp @kind object;
  #L4fce96.  v1:= v9.`okhttp3.HttpUrl$Builder.f` @type ^`java.util.List` @kind object;
  #L4fce9a.  call temp:= `set`(v1, v10, v0) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fcea0.  call temp:= `isDot`(v9, v0) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @kind direct;
  #L4fcea6.  v10:= temp;
  #L4fcea8.  if v10 != 0 then goto L4fceba;
  #L4fceac.  call temp:= `isDotDot`(v9, v0) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @kind direct;
  #L4fceb2.  v10:= temp;
  #L4fceb4.  if v10 != 0 then goto L4fceba;
  #L4fceb8.  return v9 @kind object;
  #L4fceba.  v10:= new `java.lang.IllegalArgumentException`;
  #L4fcebe.  v0:= new `java.lang.StringBuilder`;
  #L4fcec2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fcec8.  v1:= "unexpected path segment: " @kind object;
  #L4fcecc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fced2.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fced8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fcede.  v11:= temp @kind object;
  #L4fcee0.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fcee6.  throw v10;
  #L4fcee8.  v10:= new `java.lang.NullPointerException`;
  #L4fceec.  v11:= "encodedPathSegment == null" @kind object;
  #L4fcef0.  call `<init>`(v10, v11) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fcef6.  throw v10;
}
procedure `okhttp3.HttpUrl$Builder` `setEncodedQueryParameter`(`okhttp3.HttpUrl$Builder` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.setEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;

  #L4fcf08.  call temp:= `removeAllEncodedQueryParameters`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.removeAllEncodedQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L4fcf0e.  call temp:= `addEncodedQueryParameter`(v0, v1, v2) @signature `Lokhttp3/HttpUrl$Builder;.addEncodedQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L4fcf14.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `setPathSegment`(`okhttp3.HttpUrl$Builder` v9 @kind this, `int` v10 , `java.lang.String` v11 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.setPathSegment:(ILjava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4fcf28.  if v11 == 0 then goto L4fcfa0;
  #L4fcf2c.  v1:= 0I;
  #L4fcf2e.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fcf34.  v2:= temp;
  #L4fcf36.  v4:= 0I;
  #L4fcf38.  v5:= 0I;
  #L4fcf3a.  v6:= 0I;
  #L4fcf3c.  v7:= 1I;
  #L4fcf3e.  v8:= 0I;
  #L4fcf40.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L4fcf44.  v0:= v11 @kind object;
  #L4fcf46.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L4fcf4c.  v0:= temp @kind object;
  #L4fcf4e.  call temp:= `isDot`(v9, v0) @signature `Lokhttp3/HttpUrl$Builder;.isDot:(Ljava/lang/String;)Z` @kind direct;
  #L4fcf54.  v1:= temp;
  #L4fcf56.  if v1 != 0 then goto L4fcf72;
  #L4fcf5a.  call temp:= `isDotDot`(v9, v0) @signature `Lokhttp3/HttpUrl$Builder;.isDotDot:(Ljava/lang/String;)Z` @kind direct;
  #L4fcf60.  v1:= temp;
  #L4fcf62.  if v1 != 0 then goto L4fcf72;
  #L4fcf66.  v11:= v9.`okhttp3.HttpUrl$Builder.f` @type ^`java.util.List` @kind object;
  #L4fcf6a.  call temp:= `set`(v11, v10, v0) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fcf70.  return v9 @kind object;
  #L4fcf72.  v10:= new `java.lang.IllegalArgumentException`;
  #L4fcf76.  v0:= new `java.lang.StringBuilder`;
  #L4fcf7a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fcf80.  v1:= "unexpected path segment: " @kind object;
  #L4fcf84.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fcf8a.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fcf90.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fcf96.  v11:= temp @kind object;
  #L4fcf98.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fcf9e.  throw v10;
  #L4fcfa0.  v10:= new `java.lang.NullPointerException`;
  #L4fcfa4.  v11:= "pathSegment == null" @kind object;
  #L4fcfa8.  call `<init>`(v10, v11) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fcfae.  throw v10;
}
procedure `okhttp3.HttpUrl$Builder` `setQueryParameter`(`okhttp3.HttpUrl$Builder` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.setQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;

  #L4fcfc0.  call temp:= `removeAllQueryParameters`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.removeAllQueryParameters:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L4fcfc6.  call temp:= `addQueryParameter`(v0, v1, v2) @signature `Lokhttp3/HttpUrl$Builder;.addQueryParameter:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L4fcfcc.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.HttpUrl$Builder` v4 @kind this) @signature `Lokhttp3/HttpUrl$Builder;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fc13c.  v0:= new `java.lang.StringBuilder`;
  #L4fc140.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fc146.  v1:= v4.`okhttp3.HttpUrl$Builder.a` @type ^`java.lang.String` @kind object;
  #L4fc14a.  if v1 == 0 then goto L4fc15a;
  #L4fc14e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc154.  v1:= "://" @kind object;
  #L4fc158.  goto L4fc15e;
  #L4fc15a.  v1:= "//" @kind object;
  #L4fc15e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc164.  v1:= v4.`okhttp3.HttpUrl$Builder.b` @type ^`java.lang.String` @kind object;
  #L4fc168.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L4fc16e.  v1:= temp;
  #L4fc170.  v2:= 58I;
  #L4fc174.  if v1 == 0 then goto L4fc188;
  #L4fc178.  v1:= v4.`okhttp3.HttpUrl$Builder.c` @type ^`java.lang.String` @kind object;
  #L4fc17c.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L4fc182.  v1:= temp;
  #L4fc184.  if v1 != 0 then goto L4fc1bc;
  #L4fc188.  v1:= v4.`okhttp3.HttpUrl$Builder.b` @type ^`java.lang.String` @kind object;
  #L4fc18c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc192.  v1:= v4.`okhttp3.HttpUrl$Builder.c` @type ^`java.lang.String` @kind object;
  #L4fc196.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L4fc19c.  v1:= temp;
  #L4fc19e.  if v1 != 0 then goto L4fc1b2;
  #L4fc1a2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc1a8.  v1:= v4.`okhttp3.HttpUrl$Builder.c` @type ^`java.lang.String` @kind object;
  #L4fc1ac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc1b2.  v1:= 64I;
  #L4fc1b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc1bc.  v1:= v4.`okhttp3.HttpUrl$Builder.d` @type ^`java.lang.String` @kind object;
  #L4fc1c0.  v3:= -1I;
  #L4fc1c2.  if v1 == 0 then goto L4fc1fc;
  #L4fc1c6.  call temp:= `indexOf`(v1, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L4fc1cc.  v1:= temp;
  #L4fc1ce.  if v1 == v3 then goto L4fc1f2;
  #L4fc1d2.  v1:= 91I;
  #L4fc1d6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc1dc.  v1:= v4.`okhttp3.HttpUrl$Builder.d` @type ^`java.lang.String` @kind object;
  #L4fc1e0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc1e6.  v1:= 93I;
  #L4fc1ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc1f0.  goto L4fc1fc;
  #L4fc1f2.  v1:= v4.`okhttp3.HttpUrl$Builder.d` @type ^`java.lang.String` @kind object;
  #L4fc1f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc1fc.  v1:= v4.`okhttp3.HttpUrl$Builder.e` @type ^`int`;
  #L4fc200.  if v1 != v3 then goto L4fc20c;
  #L4fc204.  v1:= v4.`okhttp3.HttpUrl$Builder.a` @type ^`java.lang.String` @kind object;
  #L4fc208.  if v1 == 0 then goto L4fc234;
  #L4fc20c.  call temp:= `a`(v4) @signature `Lokhttp3/HttpUrl$Builder;.a:()I` @kind virtual;
  #L4fc212.  v1:= temp;
  #L4fc214.  v3:= v4.`okhttp3.HttpUrl$Builder.a` @type ^`java.lang.String` @kind object;
  #L4fc218.  if v3 == 0 then goto L4fc228;
  #L4fc21c.  call temp:= `defaultPort`(v3) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L4fc222.  v3:= temp;
  #L4fc224.  if v1 == v3 then goto L4fc234;
  #L4fc228.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc22e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc234.  v1:= v4.`okhttp3.HttpUrl$Builder.f` @type ^`java.util.List` @kind object;
  #L4fc238.  call `f`(v0, v1) @signature `Lokhttp3/HttpUrl;.f:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L4fc23e.  v1:= v4.`okhttp3.HttpUrl$Builder.g` @type ^`java.util.List` @kind object;
  #L4fc242.  if v1 == 0 then goto L4fc25a;
  #L4fc246.  v1:= 63I;
  #L4fc24a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc250.  v1:= v4.`okhttp3.HttpUrl$Builder.g` @type ^`java.util.List` @kind object;
  #L4fc254.  call `e`(v0, v1) @signature `Lokhttp3/HttpUrl;.e:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L4fc25a.  v1:= v4.`okhttp3.HttpUrl$Builder.h` @type ^`java.lang.String` @kind object;
  #L4fc25e.  if v1 == 0 then goto L4fc276;
  #L4fc262.  v1:= 35I;
  #L4fc266.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc26c.  v1:= v4.`okhttp3.HttpUrl$Builder.h` @type ^`java.lang.String` @kind object;
  #L4fc270.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fc276.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fc27c.  v0:= temp @kind object;
  #L4fc27e.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `username`(`okhttp3.HttpUrl$Builder` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/HttpUrl$Builder;.username:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4fcfe0.  if v7 == 0 then goto L4fd000;
  #L4fcfe4.  v2:= 0I;
  #L4fcfe6.  v3:= 0I;
  #L4fcfe8.  v4:= 0I;
  #L4fcfea.  v5:= 1I;
  #L4fcfec.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L4fcff0.  v0:= v7 @kind object;
  #L4fcff2.  call temp:= `b`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/HttpUrl;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L4fcff8.  v7:= temp @kind object;
  #L4fcffa.  v6.`okhttp3.HttpUrl$Builder.b` @type ^`java.lang.String` := v7 @kind object;
  #L4fcffe.  return v6 @kind object;
  #L4fd000.  v7:= new `java.lang.NullPointerException`;
  #L4fd004.  v0:= "username == null" @kind object;
  #L4fd008.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fd00e.  throw v7;
}
