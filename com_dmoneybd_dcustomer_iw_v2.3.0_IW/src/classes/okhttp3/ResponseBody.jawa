record `okhttp3.ResponseBody` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.io.Closeable` @kind interface {
  `java.io.Reader` `okhttp3.ResponseBody.reader` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.ResponseBody` v0 @kind this) @signature `Lokhttp3/ResponseBody;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L501488.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L50148e.  return @kind void;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.ResponseBody` v2 @kind this) @signature `Lokhttp3/ResponseBody;.charset:()Ljava/nio/charset/Charset;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L501348.  call temp:= `contentType`(v2) @signature `Lokhttp3/ResponseBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L50134e.  v0:= temp @kind object;
  #L501350.  if v0 == 0 then goto L501362;
  #L501354.  v1:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L501358.  call temp:= `charset`(v0, v1) @signature `Lokhttp3/MediaType;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind virtual;
  #L50135e.  v0:= temp @kind object;
  #L501360.  goto L501366;
  #L501362.  v0:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L501366.  return v0 @kind object;
}
procedure `okhttp3.ResponseBody` `create`(`okhttp3.MediaType` v1 @kind object, `long` v2 , `okio.BufferedSource` v4 @kind object) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;JLokio/BufferedSource;)Lokhttp3/ResponseBody;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L501420.  if v4 == 0 then goto L501430;
  #L501424.  v0:= new `okhttp3.ResponseBody$1`;
  #L501428.  call `<init>`(v0, v1, v2, v4) @signature `Lokhttp3/ResponseBody$1;.<init>:(Lokhttp3/MediaType;JLokio/BufferedSource;)V` @kind direct;
  #L50142e.  return v0 @kind object;
  #L501430.  v1:= new `java.lang.NullPointerException`;
  #L501434.  v2:= "source == null" @kind object;
  #L501438.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50143e.  throw v1;
}
procedure `okhttp3.ResponseBody` `create`(`okhttp3.MediaType` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;Ljava/lang/String;)Lokhttp3/ResponseBody;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L5013a8.  v0:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L5013ac.  if v2 == 0 then goto L5013ea;
  #L5013b0.  call temp:= `charset`(v2) @signature `Lokhttp3/MediaType;.charset:()Ljava/nio/charset/Charset;` @kind virtual;
  #L5013b6.  v1:= temp @kind object;
  #L5013b8.  if v1 != 0 then goto L5013e8;
  #L5013bc.  v1:= new `java.lang.StringBuilder`;
  #L5013c0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L5013c6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5013cc.  v2:= "; charset=utf-8" @kind object;
  #L5013d0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5013d6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L5013dc.  v2:= temp @kind object;
  #L5013de.  call temp:= `parse`(v2) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L5013e4.  v2:= temp @kind object;
  #L5013e6.  goto L5013ea;
  #L5013e8.  v0:= v1 @kind object;
  #L5013ea.  v1:= new `okio.Buffer`;
  #L5013ee.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L5013f4.  call temp:= `writeString`(v1, v3, v0) @signature `Lokio/Buffer;.writeString:(Ljava/lang/String;Ljava/nio/charset/Charset;)Lokio/Buffer;` @kind virtual;
  #L5013fa.  v3:= temp @kind object;
  #L5013fc.  call temp:= `size`(v3) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L501402.  v0:= temp @kind wide;
  #L501404.  call temp:= `create`(v2, v0, v3) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;JLokio/BufferedSource;)Lokhttp3/ResponseBody;` @kind static;
  #L50140a.  v2:= temp @kind object;
  #L50140c.  return v2 @kind object;
}
procedure `okhttp3.ResponseBody` `create`(`okhttp3.MediaType` v3 @kind object, `okio.ByteString` v4 @kind object) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;Lokio/ByteString;)Lokhttp3/ResponseBody;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L501450.  v0:= new `okio.Buffer`;
  #L501454.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L50145a.  call temp:= `write`(v0, v4) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L501460.  v0:= temp @kind object;
  #L501462.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L501468.  v4:= temp;
  #L50146a.  v1:= (`long`) v4 @kind i2l;
  #L50146c.  call temp:= `create`(v3, v1, v0) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;JLokio/BufferedSource;)Lokhttp3/ResponseBody;` @kind static;
  #L501472.  v3:= temp @kind object;
  #L501474.  return v3 @kind object;
}
procedure `okhttp3.ResponseBody` `create`(`okhttp3.MediaType` v3 @kind object, `byte`[] v4 @kind object) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;[B)Lokhttp3/ResponseBody;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L501378.  v0:= new `okio.Buffer`;
  #L50137c.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L501382.  call temp:= `write`(v0, v4) @signature `Lokio/Buffer;.write:([B)Lokio/Buffer;` @kind virtual;
  #L501388.  v0:= temp @kind object;
  #L50138a.  v4:= length @variable v4;
  #L50138c.  v1:= (`long`) v4 @kind i2l;
  #L50138e.  call temp:= `create`(v3, v1, v0) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;JLokio/BufferedSource;)Lokhttp3/ResponseBody;` @kind static;
  #L501394.  v3:= temp @kind object;
  #L501396.  return v3 @kind object;
}
procedure `java.io.InputStream` `byteStream`(`okhttp3.ResponseBody` v1 @kind this) @signature `Lokhttp3/ResponseBody;.byteStream:()Ljava/io/InputStream;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L501298.  call temp:= `source`(v1) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L50129e.  v0:= temp @kind object;
  #L5012a0.  call temp:= `inputStream`(v0) @signature `Lokio/BufferedSource;.inputStream:()Ljava/io/InputStream;` @kind interface;
  #L5012a6.  v0:= temp @kind object;
  #L5012a8.  return v0 @kind object;
}
procedure `byte`[] `bytes`(`okhttp3.ResponseBody` v6 @kind this) @signature `Lokhttp3/ResponseBody;.bytes:()[B` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L5011b0.  call temp:= `contentLength`(v6) @signature `Lokhttp3/ResponseBody;.contentLength:()J` @kind virtual;
  #L5011b6.  v0:= temp @kind wide;
  #L5011b8.  v2:= 2147483647L;
  #L5011be.  v4:= lcmp(v0, v2);
  #L5011c2.  if v4 > 0 then goto L50124c;
  #L5011c6.  call temp:= `source`(v6) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L5011cc.  v2:= temp @kind object;
  #L5011ce.  call temp:= `readByteArray`(v2) @signature `Lokio/BufferedSource;.readByteArray:()[B` @kind interface;
  #L5011d4.  v3:= temp @kind object;
  #L5011d6.  call `closeQuietly`(v2) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L5011dc.  v4:= -1L;
  #L5011e0.  v2:= lcmp(v0, v4);
  #L5011e4.  if v2 == 0 then goto L501240;
  #L5011e8.  v2:= length @variable v3;
  #L5011ea.  v4:= (`long`) v2 @kind i2l;
  #L5011ec.  v2:= lcmp(v0, v4);
  #L5011f0.  if v2 != 0 then goto L5011f6;
  #L5011f4.  goto L501240;
  #L5011f6.  v2:= new `java.io.IOException`;
  #L5011fa.  v4:= new `java.lang.StringBuilder`;
  #L5011fe.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L501204.  v5:= "Content-Length (" @kind object;
  #L501208.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50120e.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L501214.  v0:= ") and stream length (" @kind object;
  #L501218.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50121e.  v0:= length @variable v3;
  #L501220.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L501226.  v0:= ") disagree" @kind object;
  #L50122a.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L501230.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L501236.  v0:= temp @kind object;
  #L501238.  call `<init>`(v2, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50123e.  throw v2;
  #L501240.  return v3 @kind object;
  #L501242.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L501244.  call `closeQuietly`(v2) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L50124a.  throw v0;
  #L50124c.  v2:= new `java.io.IOException`;
  #L501250.  v3:= new `java.lang.StringBuilder`;
  #L501254.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L50125a.  v4:= "Cannot buffer entire body for content length: " @kind object;
  #L50125e.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L501264.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L50126a.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L501270.  v0:= temp @kind object;
  #L501272.  call `<init>`(v2, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L501278.  throw v2;
  catch `java.lang.Throwable` @[L5011ce..L5011d6] goto L501242;
}
procedure `java.io.Reader` `charStream`(`okhttp3.ResponseBody` v3 @kind this) @signature `Lokhttp3/ResponseBody;.charStream:()Ljava/io/Reader;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L5012bc.  v0:= v3.`okhttp3.ResponseBody.reader` @type ^`java.io.Reader` @kind object;
  #L5012c0.  if v0 == 0 then goto L5012c6;
  #L5012c4.  goto L5012e4;
  #L5012c6.  v0:= new `okhttp3.ResponseBody$BomAwareReader`;
  #L5012ca.  call temp:= `source`(v3) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L5012d0.  v1:= temp @kind object;
  #L5012d2.  call temp:= `charset`(v3) @signature `Lokhttp3/ResponseBody;.charset:()Ljava/nio/charset/Charset;` @kind direct;
  #L5012d8.  v2:= temp @kind object;
  #L5012da.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/ResponseBody$BomAwareReader;.<init>:(Lokio/BufferedSource;Ljava/nio/charset/Charset;)V` @kind direct;
  #L5012e0.  v3.`okhttp3.ResponseBody.reader` @type ^`java.io.Reader` := v0 @kind object;
  #L5012e4.  return v0 @kind object;
}
procedure `void` `close`(`okhttp3.ResponseBody` v1 @kind this) @signature `Lokhttp3/ResponseBody;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5014a0.  call temp:= `source`(v1) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L5014a6.  v0:= temp @kind object;
  #L5014a8.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L5014ae.  return @kind void;
}
procedure `long` `contentLength`() @signature `Lokhttp3/ResponseBody;.contentLength:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okhttp3.MediaType` `contentType`() @signature `Lokhttp3/ResponseBody;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okio.BufferedSource` `source`() @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `string`(`okhttp3.ResponseBody` v2 @kind this) @signature `Lokhttp3/ResponseBody;.string:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L5012f8.  call temp:= `source`(v2) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L5012fe.  v0:= temp @kind object;
  #L501300.  call temp:= `charset`(v2) @signature `Lokhttp3/ResponseBody;.charset:()Ljava/nio/charset/Charset;` @kind direct;
  #L501306.  v1:= temp @kind object;
  #L501308.  call temp:= `bomAwareCharset`(v0, v1) @signature `Lokhttp3/internal/Util;.bomAwareCharset:(Lokio/BufferedSource;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind static;
  #L50130e.  v1:= temp @kind object;
  #L501310.  call temp:= `readString`(v0, v1) @signature `Lokio/BufferedSource;.readString:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind interface;
  #L501316.  v1:= temp @kind object;
  #L501318.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L50131e.  return v1 @kind object;
  #L501320.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L501322.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L501328.  throw v1;
  catch `java.lang.Throwable` @[L501300..L501318] goto L501320;
}
