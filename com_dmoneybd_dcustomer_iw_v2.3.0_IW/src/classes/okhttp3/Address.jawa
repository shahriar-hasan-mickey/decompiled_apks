record `okhttp3.Address` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.HttpUrl` `okhttp3.Address.a` @AccessFlag FINAL;
  `okhttp3.Dns` `okhttp3.Address.b` @AccessFlag FINAL;
  `javax.net.SocketFactory` `okhttp3.Address.c` @AccessFlag FINAL;
  `okhttp3.Authenticator` `okhttp3.Address.d` @AccessFlag FINAL;
  `java.util.List` `okhttp3.Address.e` @AccessFlag FINAL;
  `java.util.List` `okhttp3.Address.f` @AccessFlag FINAL;
  `java.net.ProxySelector` `okhttp3.Address.g` @AccessFlag FINAL;
  `java.net.Proxy` `okhttp3.Address.h` @AccessFlag FINAL;
  `javax.net.ssl.SSLSocketFactory` `okhttp3.Address.i` @AccessFlag FINAL;
  `javax.net.ssl.HostnameVerifier` `okhttp3.Address.j` @AccessFlag FINAL;
  `okhttp3.CertificatePinner` `okhttp3.Address.k` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Address` v2 @kind this, `java.lang.String` v3 @kind object, `int` v4 , `okhttp3.Dns` v5 @kind object, `javax.net.SocketFactory` v6 @kind object, `javax.net.ssl.SSLSocketFactory` v7 @kind object, `javax.net.ssl.HostnameVerifier` v8 @kind object, `okhttp3.CertificatePinner` v9 @kind object, `okhttp3.Authenticator` v10 @kind object, `java.net.Proxy` v11 @kind object, `java.util.List` v12 @kind object, `java.util.List` v13 @kind object, `java.net.ProxySelector` v14 @kind object) @signature `Lokhttp3/Address;.<init>:(Ljava/lang/String;ILokhttp3/Dns;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;Lokhttp3/CertificatePinner;Lokhttp3/Authenticator;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4f6f7c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f6f82.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L4f6f86.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L4f6f8c.  if v7 == 0 then goto L4f6f96;
  #L4f6f90.  v1:= "https" @kind object;
  #L4f6f94.  goto L4f6f9a;
  #L4f6f96.  v1:= "http" @kind object;
  #L4f6f9a.  call temp:= `scheme`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.scheme:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L4f6fa0.  v0:= temp @kind object;
  #L4f6fa2.  call temp:= `host`(v0, v3) @signature `Lokhttp3/HttpUrl$Builder;.host:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L4f6fa8.  v3:= temp @kind object;
  #L4f6faa.  call temp:= `port`(v3, v4) @signature `Lokhttp3/HttpUrl$Builder;.port:(I)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L4f6fb0.  v3:= temp @kind object;
  #L4f6fb2.  call temp:= `build`(v3) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L4f6fb8.  v3:= temp @kind object;
  #L4f6fba.  v2.`okhttp3.Address.a` @type ^`okhttp3.HttpUrl` := v3 @kind object;
  #L4f6fbe.  if v5 == 0 then goto L4f7060;
  #L4f6fc2.  v2.`okhttp3.Address.b` @type ^`okhttp3.Dns` := v5 @kind object;
  #L4f6fc6.  if v6 == 0 then goto L4f7050;
  #L4f6fca.  v2.`okhttp3.Address.c` @type ^`javax.net.SocketFactory` := v6 @kind object;
  #L4f6fce.  if v10 == 0 then goto L4f7040;
  #L4f6fd2.  v2.`okhttp3.Address.d` @type ^`okhttp3.Authenticator` := v10 @kind object;
  #L4f6fd6.  if v12 == 0 then goto L4f7030;
  #L4f6fda.  call temp:= `immutableList`(v12) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L4f6fe0.  v3:= temp @kind object;
  #L4f6fe2.  v2.`okhttp3.Address.e` @type ^`java.util.List` := v3 @kind object;
  #L4f6fe6.  if v13 == 0 then goto L4f7020;
  #L4f6fea.  call temp:= `immutableList`(v13) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L4f6ff0.  v3:= temp @kind object;
  #L4f6ff2.  v2.`okhttp3.Address.f` @type ^`java.util.List` := v3 @kind object;
  #L4f6ff6.  if v14 == 0 then goto L4f7010;
  #L4f6ffa.  v2.`okhttp3.Address.g` @type ^`java.net.ProxySelector` := v14 @kind object;
  #L4f6ffe.  v2.`okhttp3.Address.h` @type ^`java.net.Proxy` := v11 @kind object;
  #L4f7002.  v2.`okhttp3.Address.i` @type ^`javax.net.ssl.SSLSocketFactory` := v7 @kind object;
  #L4f7006.  v2.`okhttp3.Address.j` @type ^`javax.net.ssl.HostnameVerifier` := v8 @kind object;
  #L4f700a.  v2.`okhttp3.Address.k` @type ^`okhttp3.CertificatePinner` := v9 @kind object;
  #L4f700e.  return @kind void;
  #L4f7010.  v3:= new `java.lang.NullPointerException`;
  #L4f7014.  v4:= "proxySelector == null" @kind object;
  #L4f7018.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f701e.  throw v3;
  #L4f7020.  v3:= new `java.lang.NullPointerException`;
  #L4f7024.  v4:= "connectionSpecs == null" @kind object;
  #L4f7028.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f702e.  throw v3;
  #L4f7030.  v3:= new `java.lang.NullPointerException`;
  #L4f7034.  v4:= "protocols == null" @kind object;
  #L4f7038.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f703e.  throw v3;
  #L4f7040.  v3:= new `java.lang.NullPointerException`;
  #L4f7044.  v4:= "proxyAuthenticator == null" @kind object;
  #L4f7048.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f704e.  throw v3;
  #L4f7050.  v3:= new `java.lang.NullPointerException`;
  #L4f7054.  v4:= "socketFactory == null" @kind object;
  #L4f7058.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f705e.  throw v3;
  #L4f7060.  v3:= new `java.lang.NullPointerException`;
  #L4f7064.  v4:= "dns == null" @kind object;
  #L4f7068.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f706e.  throw v3;
}
procedure `boolean` `a`(`okhttp3.Address` v2 @kind this, `okhttp3.Address` v3 @kind object) @signature `Lokhttp3/Address;.a:(Lokhttp3/Address;)Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4f6c0c.  v0:= v2.`okhttp3.Address.b` @type ^`okhttp3.Dns` @kind object;
  #L4f6c10.  v1:= v3.`okhttp3.Address.b` @type ^`okhttp3.Dns` @kind object;
  #L4f6c14.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4f6c1a.  v0:= temp;
  #L4f6c1c.  if v0 == 0 then goto L4f6ce8;
  #L4f6c20.  v0:= v2.`okhttp3.Address.d` @type ^`okhttp3.Authenticator` @kind object;
  #L4f6c24.  v1:= v3.`okhttp3.Address.d` @type ^`okhttp3.Authenticator` @kind object;
  #L4f6c28.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4f6c2e.  v0:= temp;
  #L4f6c30.  if v0 == 0 then goto L4f6ce8;
  #L4f6c34.  v0:= v2.`okhttp3.Address.e` @type ^`java.util.List` @kind object;
  #L4f6c38.  v1:= v3.`okhttp3.Address.e` @type ^`java.util.List` @kind object;
  #L4f6c3c.  call temp:= `equals`(v0, v1) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L4f6c42.  v0:= temp;
  #L4f6c44.  if v0 == 0 then goto L4f6ce8;
  #L4f6c48.  v0:= v2.`okhttp3.Address.f` @type ^`java.util.List` @kind object;
  #L4f6c4c.  v1:= v3.`okhttp3.Address.f` @type ^`java.util.List` @kind object;
  #L4f6c50.  call temp:= `equals`(v0, v1) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L4f6c56.  v0:= temp;
  #L4f6c58.  if v0 == 0 then goto L4f6ce8;
  #L4f6c5c.  v0:= v2.`okhttp3.Address.g` @type ^`java.net.ProxySelector` @kind object;
  #L4f6c60.  v1:= v3.`okhttp3.Address.g` @type ^`java.net.ProxySelector` @kind object;
  #L4f6c64.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4f6c6a.  v0:= temp;
  #L4f6c6c.  if v0 == 0 then goto L4f6ce8;
  #L4f6c70.  v0:= v2.`okhttp3.Address.h` @type ^`java.net.Proxy` @kind object;
  #L4f6c74.  v1:= v3.`okhttp3.Address.h` @type ^`java.net.Proxy` @kind object;
  #L4f6c78.  call temp:= `equal`(v0, v1) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4f6c7e.  v0:= temp;
  #L4f6c80.  if v0 == 0 then goto L4f6ce8;
  #L4f6c84.  v0:= v2.`okhttp3.Address.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L4f6c88.  v1:= v3.`okhttp3.Address.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L4f6c8c.  call temp:= `equal`(v0, v1) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4f6c92.  v0:= temp;
  #L4f6c94.  if v0 == 0 then goto L4f6ce8;
  #L4f6c98.  v0:= v2.`okhttp3.Address.j` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L4f6c9c.  v1:= v3.`okhttp3.Address.j` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L4f6ca0.  call temp:= `equal`(v0, v1) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4f6ca6.  v0:= temp;
  #L4f6ca8.  if v0 == 0 then goto L4f6ce8;
  #L4f6cac.  v0:= v2.`okhttp3.Address.k` @type ^`okhttp3.CertificatePinner` @kind object;
  #L4f6cb0.  v1:= v3.`okhttp3.Address.k` @type ^`okhttp3.CertificatePinner` @kind object;
  #L4f6cb4.  call temp:= `equal`(v0, v1) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4f6cba.  v0:= temp;
  #L4f6cbc.  if v0 == 0 then goto L4f6ce8;
  #L4f6cc0.  call temp:= `url`(v2) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L4f6cc6.  v0:= temp @kind object;
  #L4f6cc8.  call temp:= `port`(v0) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L4f6cce.  v0:= temp;
  #L4f6cd0.  call temp:= `url`(v3) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L4f6cd6.  v3:= temp @kind object;
  #L4f6cd8.  call temp:= `port`(v3) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L4f6cde.  v3:= temp;
  #L4f6ce0.  if v0 != v3 then goto L4f6ce8;
  #L4f6ce4.  v3:= 1I;
  #L4f6ce6.  goto L4f6cea;
  #L4f6ce8.  v3:= 0I;
  #L4f6cea.  return v3;
}
procedure `okhttp3.CertificatePinner` `certificatePinner`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.certificatePinner:()Lokhttp3/CertificatePinner;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f6f34.  v0:= v1.`okhttp3.Address.k` @type ^`okhttp3.CertificatePinner` @kind object;
  #L4f6f38.  return v0 @kind object;
}
procedure `java.util.List` `connectionSpecs`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.connectionSpecs:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f6ea4.  v0:= v1.`okhttp3.Address.f` @type ^`java.util.List` @kind object;
  #L4f6ea8.  return v0 @kind object;
}
procedure `okhttp3.Dns` `dns`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.dns:()Lokhttp3/Dns;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f6f4c.  v0:= v1.`okhttp3.Address.b` @type ^`okhttp3.Dns` @kind object;
  #L4f6f50.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.Address` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/Address;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f6bc8.  v0:= instanceof @variable v3 @type ^`okhttp3.Address` @kind boolean;
  #L4f6bcc.  if v0 == 0 then goto L4f6bf8;
  #L4f6bd0.  v0:= v2.`okhttp3.Address.a` @type ^`okhttp3.HttpUrl` @kind object;
  #L4f6bd4.  v3:= (`okhttp3.Address`) v3 @kind object;
  #L4f6bd8.  v1:= v3.`okhttp3.Address.a` @type ^`okhttp3.HttpUrl` @kind object;
  #L4f6bdc.  call temp:= `equals`(v0, v1) @signature `Lokhttp3/HttpUrl;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4f6be2.  v0:= temp;
  #L4f6be4.  if v0 == 0 then goto L4f6bf8;
  #L4f6be8.  call temp:= `a`(v2, v3) @signature `Lokhttp3/Address;.a:(Lokhttp3/Address;)Z` @kind virtual;
  #L4f6bee.  v3:= temp;
  #L4f6bf0.  if v3 == 0 then goto L4f6bf8;
  #L4f6bf4.  v3:= 1I;
  #L4f6bf6.  goto L4f6bfa;
  #L4f6bf8.  v3:= 0I;
  #L4f6bfa.  return v3;
}
procedure `int` `hashCode`(`okhttp3.Address` v3 @kind this) @signature `Lokhttp3/Address;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4f6cfc.  v0:= v3.`okhttp3.Address.a` @type ^`okhttp3.HttpUrl` @kind object;
  #L4f6d00.  call temp:= `hashCode`(v0) @signature `Lokhttp3/HttpUrl;.hashCode:()I` @kind virtual;
  #L4f6d06.  v0:= temp;
  #L4f6d08.  v1:= 527I;
  #L4f6d0c.  v1:= v1 + v0 @kind int;
  #L4f6d0e.  v1:= v1 * 31;
  #L4f6d12.  v0:= v3.`okhttp3.Address.b` @type ^`okhttp3.Dns` @kind object;
  #L4f6d16.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L4f6d1c.  v0:= temp;
  #L4f6d1e.  v1:= v1 + v0 @kind int;
  #L4f6d20.  v1:= v1 * 31;
  #L4f6d24.  v0:= v3.`okhttp3.Address.d` @type ^`okhttp3.Authenticator` @kind object;
  #L4f6d28.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L4f6d2e.  v0:= temp;
  #L4f6d30.  v1:= v1 + v0 @kind int;
  #L4f6d32.  v1:= v1 * 31;
  #L4f6d36.  v0:= v3.`okhttp3.Address.e` @type ^`java.util.List` @kind object;
  #L4f6d3a.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L4f6d40.  v0:= temp;
  #L4f6d42.  v1:= v1 + v0 @kind int;
  #L4f6d44.  v1:= v1 * 31;
  #L4f6d48.  v0:= v3.`okhttp3.Address.f` @type ^`java.util.List` @kind object;
  #L4f6d4c.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L4f6d52.  v0:= temp;
  #L4f6d54.  v1:= v1 + v0 @kind int;
  #L4f6d56.  v1:= v1 * 31;
  #L4f6d5a.  v0:= v3.`okhttp3.Address.g` @type ^`java.net.ProxySelector` @kind object;
  #L4f6d5e.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L4f6d64.  v0:= temp;
  #L4f6d66.  v1:= v1 + v0 @kind int;
  #L4f6d68.  v1:= v1 * 31;
  #L4f6d6c.  v0:= v3.`okhttp3.Address.h` @type ^`java.net.Proxy` @kind object;
  #L4f6d70.  v2:= 0I;
  #L4f6d72.  if v0 == 0 then goto L4f6d80;
  #L4f6d76.  call temp:= `hashCode`(v0) @signature `Ljava/net/Proxy;.hashCode:()I` @kind virtual;
  #L4f6d7c.  v0:= temp;
  #L4f6d7e.  goto L4f6d82;
  #L4f6d80.  v0:= 0I;
  #L4f6d82.  v1:= v1 + v0 @kind int;
  #L4f6d84.  v1:= v1 * 31;
  #L4f6d88.  v0:= v3.`okhttp3.Address.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L4f6d8c.  if v0 == 0 then goto L4f6d9a;
  #L4f6d90.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L4f6d96.  v0:= temp;
  #L4f6d98.  goto L4f6d9c;
  #L4f6d9a.  v0:= 0I;
  #L4f6d9c.  v1:= v1 + v0 @kind int;
  #L4f6d9e.  v1:= v1 * 31;
  #L4f6da2.  v0:= v3.`okhttp3.Address.j` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L4f6da6.  if v0 == 0 then goto L4f6db4;
  #L4f6daa.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L4f6db0.  v0:= temp;
  #L4f6db2.  goto L4f6db6;
  #L4f6db4.  v0:= 0I;
  #L4f6db6.  v1:= v1 + v0 @kind int;
  #L4f6db8.  v1:= v1 * 31;
  #L4f6dbc.  v0:= v3.`okhttp3.Address.k` @type ^`okhttp3.CertificatePinner` @kind object;
  #L4f6dc0.  if v0 == 0 then goto L4f6dcc;
  #L4f6dc4.  call temp:= `hashCode`(v0) @signature `Lokhttp3/CertificatePinner;.hashCode:()I` @kind virtual;
  #L4f6dca.  v2:= temp;
  #L4f6dcc.  v1:= v1 + v2 @kind int;
  #L4f6dce.  return v1;
}
procedure `javax.net.ssl.HostnameVerifier` `hostnameVerifier`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f6eec.  v0:= v1.`okhttp3.Address.j` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L4f6ef0.  return v0 @kind object;
}
procedure `java.util.List` `protocols`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.protocols:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f6ebc.  v0:= v1.`okhttp3.Address.e` @type ^`java.util.List` @kind object;
  #L4f6ec0.  return v0 @kind object;
}
procedure `java.net.Proxy` `proxy`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f6e74.  v0:= v1.`okhttp3.Address.h` @type ^`java.net.Proxy` @kind object;
  #L4f6e78.  return v0 @kind object;
}
procedure `okhttp3.Authenticator` `proxyAuthenticator`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.proxyAuthenticator:()Lokhttp3/Authenticator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f6f1c.  v0:= v1.`okhttp3.Address.d` @type ^`okhttp3.Authenticator` @kind object;
  #L4f6f20.  return v0 @kind object;
}
procedure `java.net.ProxySelector` `proxySelector`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f6e8c.  v0:= v1.`okhttp3.Address.g` @type ^`java.net.ProxySelector` @kind object;
  #L4f6e90.  return v0 @kind object;
}
procedure `javax.net.SocketFactory` `socketFactory`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.socketFactory:()Ljavax/net/SocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f6ed4.  v0:= v1.`okhttp3.Address.c` @type ^`javax.net.SocketFactory` @kind object;
  #L4f6ed8.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `sslSocketFactory`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f6f04.  v0:= v1.`okhttp3.Address.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L4f6f08.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Address` v2 @kind this) @signature `Lokhttp3/Address;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f6de0.  v0:= new `java.lang.StringBuilder`;
  #L4f6de4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4f6dea.  v1:= "Address{" @kind object;
  #L4f6dee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f6df4.  v1:= v2.`okhttp3.Address.a` @type ^`okhttp3.HttpUrl` @kind object;
  #L4f6df8.  call temp:= `host`(v1) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L4f6dfe.  v1:= temp @kind object;
  #L4f6e00.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f6e06.  v1:= ":" @kind object;
  #L4f6e0a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f6e10.  v1:= v2.`okhttp3.Address.a` @type ^`okhttp3.HttpUrl` @kind object;
  #L4f6e14.  call temp:= `port`(v1) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L4f6e1a.  v1:= temp;
  #L4f6e1c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f6e22.  v1:= v2.`okhttp3.Address.h` @type ^`java.net.Proxy` @kind object;
  #L4f6e26.  if v1 == 0 then goto L4f6e3a;
  #L4f6e2a.  v1:= ", proxy=" @kind object;
  #L4f6e2e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f6e34.  v1:= v2.`okhttp3.Address.h` @type ^`java.net.Proxy` @kind object;
  #L4f6e38.  goto L4f6e48;
  #L4f6e3a.  v1:= ", proxySelector=" @kind object;
  #L4f6e3e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f6e44.  v1:= v2.`okhttp3.Address.g` @type ^`java.net.ProxySelector` @kind object;
  #L4f6e48.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f6e4e.  v1:= "}" @kind object;
  #L4f6e52.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f6e58.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4f6e5e.  v0:= temp @kind object;
  #L4f6e60.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `url`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f6f64.  v0:= v1.`okhttp3.Address.a` @type ^`okhttp3.HttpUrl` @kind object;
  #L4f6f68.  return v0 @kind object;
}
