record `okhttp3.Response` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `okhttp3.Request` `okhttp3.Response.a` @AccessFlag FINAL;
  `okhttp3.Protocol` `okhttp3.Response.b` @AccessFlag FINAL;
  `int` `okhttp3.Response.c` @AccessFlag FINAL;
  `okhttp3.CacheControl` `okhttp3.Response.cacheControl` @AccessFlag PRIVATE_VOLATILE;
  `java.lang.String` `okhttp3.Response.d` @AccessFlag FINAL;
  `okhttp3.Handshake` `okhttp3.Response.e` @AccessFlag FINAL;
  `okhttp3.Headers` `okhttp3.Response.f` @AccessFlag FINAL;
  `okhttp3.ResponseBody` `okhttp3.Response.g` @AccessFlag FINAL;
  `okhttp3.Response` `okhttp3.Response.h` @AccessFlag FINAL;
  `okhttp3.Response` `okhttp3.Response.i` @AccessFlag FINAL;
  `okhttp3.Response` `okhttp3.Response.j` @AccessFlag FINAL;
  `long` `okhttp3.Response.k` @AccessFlag FINAL;
  `long` `okhttp3.Response.l` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Response` v2 @kind this, `okhttp3.Response$Builder` v3 @kind object) @signature `Lokhttp3/Response;.<init>:(Lokhttp3/Response$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L50184c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L501852.  v0:= v3.`okhttp3.Response$Builder.a` @type ^`okhttp3.Request` @kind object;
  #L501856.  v2.`okhttp3.Response.a` @type ^`okhttp3.Request` := v0 @kind object;
  #L50185a.  v0:= v3.`okhttp3.Response$Builder.b` @type ^`okhttp3.Protocol` @kind object;
  #L50185e.  v2.`okhttp3.Response.b` @type ^`okhttp3.Protocol` := v0 @kind object;
  #L501862.  v0:= v3.`okhttp3.Response$Builder.c` @type ^`int`;
  #L501866.  v2.`okhttp3.Response.c` @type ^`int` := v0;
  #L50186a.  v0:= v3.`okhttp3.Response$Builder.d` @type ^`java.lang.String` @kind object;
  #L50186e.  v2.`okhttp3.Response.d` @type ^`java.lang.String` := v0 @kind object;
  #L501872.  v0:= v3.`okhttp3.Response$Builder.e` @type ^`okhttp3.Handshake` @kind object;
  #L501876.  v2.`okhttp3.Response.e` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L50187a.  v0:= v3.`okhttp3.Response$Builder.f` @type ^`okhttp3.Headers$Builder` @kind object;
  #L50187e.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L501884.  v0:= temp @kind object;
  #L501886.  v2.`okhttp3.Response.f` @type ^`okhttp3.Headers` := v0 @kind object;
  #L50188a.  v0:= v3.`okhttp3.Response$Builder.g` @type ^`okhttp3.ResponseBody` @kind object;
  #L50188e.  v2.`okhttp3.Response.g` @type ^`okhttp3.ResponseBody` := v0 @kind object;
  #L501892.  v0:= v3.`okhttp3.Response$Builder.h` @type ^`okhttp3.Response` @kind object;
  #L501896.  v2.`okhttp3.Response.h` @type ^`okhttp3.Response` := v0 @kind object;
  #L50189a.  v0:= v3.`okhttp3.Response$Builder.i` @type ^`okhttp3.Response` @kind object;
  #L50189e.  v2.`okhttp3.Response.i` @type ^`okhttp3.Response` := v0 @kind object;
  #L5018a2.  v0:= v3.`okhttp3.Response$Builder.j` @type ^`okhttp3.Response` @kind object;
  #L5018a6.  v2.`okhttp3.Response.j` @type ^`okhttp3.Response` := v0 @kind object;
  #L5018aa.  v0:= v3.`okhttp3.Response$Builder.k` @type ^`long` @kind wide;
  #L5018ae.  v2.`okhttp3.Response.k` @type ^`long` := v0 @kind wide;
  #L5018b2.  v0:= v3.`okhttp3.Response$Builder.l` @type ^`long` @kind wide;
  #L5018b6.  v2.`okhttp3.Response.l` @type ^`long` := v0 @kind wide;
  #L5018ba.  return @kind void;
}
procedure `okhttp3.ResponseBody` `body`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5017bc.  v0:= v1.`okhttp3.Response.g` @type ^`okhttp3.ResponseBody` @kind object;
  #L5017c0.  return v0 @kind object;
}
procedure `okhttp3.CacheControl` `cacheControl`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5016cc.  v0:= v1.`okhttp3.Response.cacheControl` @type ^`okhttp3.CacheControl` @kind object;
  #L5016d0.  if v0 == 0 then goto L5016d6;
  #L5016d4.  goto L5016e6;
  #L5016d6.  v0:= v1.`okhttp3.Response.f` @type ^`okhttp3.Headers` @kind object;
  #L5016da.  call temp:= `parse`(v0) @signature `Lokhttp3/CacheControl;.parse:(Lokhttp3/Headers;)Lokhttp3/CacheControl;` @kind static;
  #L5016e0.  v0:= temp @kind object;
  #L5016e2.  v1.`okhttp3.Response.cacheControl` @type ^`okhttp3.CacheControl` := v0 @kind object;
  #L5016e6.  return v0 @kind object;
}
procedure `okhttp3.Response` `cacheResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.cacheResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L501758.  v0:= v1.`okhttp3.Response.i` @type ^`okhttp3.Response` @kind object;
  #L50175c.  return v0 @kind object;
}
procedure `java.util.List` `challenges`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.challenges:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L501630.  v0:= v2.`okhttp3.Response.c` @type ^`int`;
  #L501634.  v1:= 401I;
  #L501638.  if v0 != v1 then goto L501642;
  #L50163c.  v0:= "WWW-Authenticate" @kind object;
  #L501640.  goto L50164e;
  #L501642.  v1:= 407I;
  #L501646.  if v0 != v1 then goto L501660;
  #L50164a.  v0:= "Proxy-Authenticate" @kind object;
  #L50164e.  call temp:= `headers`(v2) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L501654.  v1:= temp @kind object;
  #L501656.  call temp:= `parseChallenges`(v1, v0) @signature `Lokhttp3/internal/http/HttpHeaders;.parseChallenges:(Lokhttp3/Headers;Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L50165c.  v0:= temp @kind object;
  #L50165e.  return v0 @kind object;
  #L501660.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L501666.  v0:= temp @kind object;
  #L501668.  return v0 @kind object;
}
procedure `void` `close`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5018cc.  v0:= v2.`okhttp3.Response.g` @type ^`okhttp3.ResponseBody` @kind object;
  #L5018d0.  if v0 == 0 then goto L5018dc;
  #L5018d4.  call `close`(v0) @signature `Lokhttp3/ResponseBody;.close:()V` @kind virtual;
  #L5018da.  return @kind void;
  #L5018dc.  v0:= new `java.lang.IllegalStateException`;
  #L5018e0.  v1:= "response is not eligible for a body and must not be closed" @kind object;
  #L5018e4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L5018ea.  throw v0;
}
procedure `int` `code`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.code:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L501538.  v0:= v1.`okhttp3.Response.c` @type ^`int`;
  #L50153c.  return v0;
}
procedure `okhttp3.Handshake` `handshake`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5016f8.  v0:= v1.`okhttp3.Response.e` @type ^`okhttp3.Handshake` @kind object;
  #L5016fc.  return v0 @kind object;
}
procedure `java.lang.String` `header`(`okhttp3.Response` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L501550.  v0:= 0I;
  #L501552.  call temp:= `header`(v1, v2, v0) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L501558.  v2:= temp @kind object;
  #L50155a.  return v2 @kind object;
}
procedure `java.lang.String` `header`(`okhttp3.Response` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50156c.  v0:= v1.`okhttp3.Response.f` @type ^`okhttp3.Headers` @kind object;
  #L501570.  call temp:= `get`(v0, v2) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L501576.  v2:= temp @kind object;
  #L501578.  if v2 == 0 then goto L50157e;
  #L50157c.  v3:= v2 @kind object;
  #L50157e.  return v3 @kind object;
}
procedure `java.util.List` `headers`(`okhttp3.Response` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Response;.headers:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50167c.  v0:= v1.`okhttp3.Response.f` @type ^`okhttp3.Headers` @kind object;
  #L501680.  call temp:= `values`(v0, v2) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L501686.  v2:= temp @kind object;
  #L501688.  return v2 @kind object;
}
procedure `okhttp3.Headers` `headers`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L501710.  v0:= v1.`okhttp3.Response.f` @type ^`okhttp3.Headers` @kind object;
  #L501714.  return v0 @kind object;
}
procedure `boolean` `isRedirect`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.isRedirect:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5014c0.  v0:= v2.`okhttp3.Response.c` @type ^`int`;
  #L5014c4.  v1:= 307I;
  #L5014c8.  if v0 == v1 then goto L5014de;
  #L5014cc.  v1:= 308I;
  #L5014d0.  if v0 == v1 then goto L5014de;
  #L5014d4.  goto L5014e4;
  #L5014da.  v0:= 0I;
  #L5014dc.  return v0;
  #L5014de.  v0:= 1I;
  #L5014e0.  return v0;
  #L5014e2.  
  #L5014e4.  switch v0
                  | 300 => goto L5014de
                  | 301 => goto L5014de
                  | 302 => goto L5014de
                  | 303 => goto L5014de
                  | else => goto L5014da;
}
procedure `boolean` `isSuccessful`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.isSuccessful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50150c.  v0:= v2.`okhttp3.Response.c` @type ^`int`;
  #L501510.  v1:= 200I;
  #L501514.  if v0 < v1 then goto L501524;
  #L501518.  v1:= 300I;
  #L50151c.  if v0 >= v1 then goto L501524;
  #L501520.  v0:= 1I;
  #L501522.  goto L501526;
  #L501524.  v0:= 0I;
  #L501526.  return v0;
}
procedure `java.lang.String` `message`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.message:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L501590.  v0:= v1.`okhttp3.Response.d` @type ^`java.lang.String` @kind object;
  #L501594.  return v0 @kind object;
}
procedure `okhttp3.Response` `networkResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.networkResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L501770.  v0:= v1.`okhttp3.Response.h` @type ^`okhttp3.Response` @kind object;
  #L501774.  return v0 @kind object;
}
procedure `okhttp3.Response$Builder` `newBuilder`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5017a0.  v0:= new `okhttp3.Response$Builder`;
  #L5017a4.  call `<init>`(v0, v1) @signature `Lokhttp3/Response$Builder;.<init>:(Lokhttp3/Response;)V` @kind direct;
  #L5017aa.  return v0 @kind object;
}
procedure `okhttp3.ResponseBody` `peekBody`(`okhttp3.Response` v4 @kind this, `long` v5 ) @signature `Lokhttp3/Response;.peekBody:(J)Lokhttp3/ResponseBody;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L5017d4.  v0:= v4.`okhttp3.Response.g` @type ^`okhttp3.ResponseBody` @kind object;
  #L5017d8.  call temp:= `source`(v0) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L5017de.  v0:= temp @kind object;
  #L5017e0.  call temp:= `request`(v0, v5) @signature `Lokio/BufferedSource;.request:(J)Z` @kind interface;
  #L5017e6.  call temp:= `buffer`(v0) @signature `Lokio/BufferedSource;.buffer:()Lokio/Buffer;` @kind interface;
  #L5017ec.  v0:= temp @kind object;
  #L5017ee.  call temp:= `clone`(v0) @signature `Lokio/Buffer;.clone:()Lokio/Buffer;` @kind virtual;
  #L5017f4.  v0:= temp @kind object;
  #L5017f6.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L5017fc.  v1:= temp @kind wide;
  #L5017fe.  v3:= lcmp(v1, v5);
  #L501802.  if v3 <= 0 then goto L50181e;
  #L501806.  v1:= new `okio.Buffer`;
  #L50180a.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L501810.  call `write`(v1, v0, v5) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L501816.  call `clear`(v0) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L50181c.  v0:= v1 @kind object;
  #L50181e.  v5:= v4.`okhttp3.Response.g` @type ^`okhttp3.ResponseBody` @kind object;
  #L501822.  call temp:= `contentType`(v5) @signature `Lokhttp3/ResponseBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L501828.  v5:= temp @kind object;
  #L50182a.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L501830.  v1:= temp @kind wide;
  #L501832.  call temp:= `create`(v5, v1, v0) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;JLokio/BufferedSource;)Lokhttp3/ResponseBody;` @kind static;
  #L501838.  v5:= temp @kind object;
  #L50183a.  return v5 @kind object;
}
procedure `okhttp3.Response` `priorResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.priorResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L501788.  v0:= v1.`okhttp3.Response.j` @type ^`okhttp3.Response` @kind object;
  #L50178c.  return v0 @kind object;
}
procedure `okhttp3.Protocol` `protocol`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.protocol:()Lokhttp3/Protocol;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L501728.  v0:= v1.`okhttp3.Response.b` @type ^`okhttp3.Protocol` @kind object;
  #L50172c.  return v0 @kind object;
}
procedure `long` `receivedResponseAtMillis`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50169c.  v0:= v2.`okhttp3.Response.l` @type ^`long` @kind wide;
  #L5016a0.  return v0 @kind wide;
}
procedure `okhttp3.Request` `request`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L501740.  v0:= v1.`okhttp3.Response.a` @type ^`okhttp3.Request` @kind object;
  #L501744.  return v0 @kind object;
}
procedure `long` `sentRequestAtMillis`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5016b4.  v0:= v2.`okhttp3.Response.k` @type ^`long` @kind wide;
  #L5016b8.  return v0 @kind wide;
}
procedure `java.lang.String` `toString`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5015a8.  v0:= new `java.lang.StringBuilder`;
  #L5015ac.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L5015b2.  v1:= "Response{protocol=" @kind object;
  #L5015b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5015bc.  v1:= v2.`okhttp3.Response.b` @type ^`okhttp3.Protocol` @kind object;
  #L5015c0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5015c6.  v1:= ", code=" @kind object;
  #L5015ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5015d0.  v1:= v2.`okhttp3.Response.c` @type ^`int`;
  #L5015d4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L5015da.  v1:= ", message=" @kind object;
  #L5015de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5015e4.  v1:= v2.`okhttp3.Response.d` @type ^`java.lang.String` @kind object;
  #L5015e8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5015ee.  v1:= ", url=" @kind object;
  #L5015f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5015f8.  v1:= v2.`okhttp3.Response.a` @type ^`okhttp3.Request` @kind object;
  #L5015fc.  call temp:= `url`(v1) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L501602.  v1:= temp @kind object;
  #L501604.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50160a.  v1:= 125I;
  #L50160e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L501614.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L50161a.  v0:= temp @kind object;
  #L50161c.  return v0 @kind object;
}
