record `okhttp3.Cookie$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.Cookie$Builder.a` @AccessFlag ;
  `java.lang.String` `okhttp3.Cookie$Builder.b` @AccessFlag ;
  `long` `okhttp3.Cookie$Builder.c` @AccessFlag ;
  `java.lang.String` `okhttp3.Cookie$Builder.d` @AccessFlag ;
  `java.lang.String` `okhttp3.Cookie$Builder.e` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.f` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.g` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.h` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.i` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.Cookie$Builder` v2 @kind this) @signature `Lokhttp3/Cookie$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4f9d50.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f9d56.  v0:= 253402300799999L;
  #L4f9d60.  v2.`okhttp3.Cookie$Builder.c` @type ^`long` := v0 @kind wide;
  #L4f9d64.  v0:= "/" @kind object;
  #L4f9d68.  v2.`okhttp3.Cookie$Builder.e` @type ^`java.lang.String` := v0 @kind object;
  #L4f9d6c.  return @kind void;
}
procedure `okhttp3.Cookie$Builder` `domain`(`okhttp3.Cookie$Builder` v2 @kind this, `java.lang.String` v3 @kind object, `boolean` v4 ) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4f9b84.  if v3 == 0 then goto L4f9bcc;
  #L4f9b88.  call temp:= `canonicalizeHost`(v3) @signature `Lokhttp3/internal/Util;.canonicalizeHost:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L4f9b8e.  v0:= temp @kind object;
  #L4f9b90.  if v0 == 0 then goto L4f9b9e;
  #L4f9b94.  v2.`okhttp3.Cookie$Builder.d` @type ^`java.lang.String` := v0 @kind object;
  #L4f9b98.  v2.`okhttp3.Cookie$Builder.i` @type ^`boolean` := v4 @kind boolean;
  #L4f9b9c.  return v2 @kind object;
  #L4f9b9e.  v4:= new `java.lang.IllegalArgumentException`;
  #L4f9ba2.  v0:= new `java.lang.StringBuilder`;
  #L4f9ba6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4f9bac.  v1:= "unexpected domain: " @kind object;
  #L4f9bb0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f9bb6.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f9bbc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4f9bc2.  v3:= temp @kind object;
  #L4f9bc4.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f9bca.  throw v4;
  #L4f9bcc.  v3:= new `java.lang.NullPointerException`;
  #L4f9bd0.  v4:= "domain == null" @kind object;
  #L4f9bd4.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f9bda.  throw v3;
}
procedure `okhttp3.Cookie` `build`(`okhttp3.Cookie$Builder` v1 @kind this) @signature `Lokhttp3/Cookie$Builder;.build:()Lokhttp3/Cookie;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f9b4c.  v0:= new `okhttp3.Cookie`;
  #L4f9b50.  call `<init>`(v0, v1) @signature `Lokhttp3/Cookie;.<init>:(Lokhttp3/Cookie$Builder;)V` @kind direct;
  #L4f9b56.  return v0 @kind object;
}
procedure `okhttp3.Cookie$Builder` `domain`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f9b68.  v0:= 0I;
  #L4f9b6a.  call temp:= `domain`(v1, v2, v0) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @kind direct;
  #L4f9b70.  v2:= temp @kind object;
  #L4f9b72.  return v2 @kind object;
}
procedure `okhttp3.Cookie$Builder` `expiresAt`(`okhttp3.Cookie$Builder` v3 @kind this, `long` v4 ) @signature `Lokhttp3/Cookie$Builder;.expiresAt:(J)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4f9bec.  v0:= 0L;
  #L4f9bf0.  v2:= lcmp(v4, v0);
  #L4f9bf4.  if v2 > 0 then goto L4f9bfc;
  #L4f9bf8.  v4:= -9223372036854775808L;
  #L4f9bfc.  v0:= 253402300799999L;
  #L4f9c06.  v2:= lcmp(v4, v0);
  #L4f9c0a.  if v2 <= 0 then goto L4f9c10;
  #L4f9c0e.  v4:= v0 @kind wide;
  #L4f9c10.  v3.`okhttp3.Cookie$Builder.c` @type ^`long` := v4 @kind wide;
  #L4f9c14.  v4:= 1I;
  #L4f9c16.  v3.`okhttp3.Cookie$Builder.h` @type ^`boolean` := v4 @kind boolean;
  #L4f9c1a.  return v3 @kind object;
}
procedure `okhttp3.Cookie$Builder` `hostOnlyDomain`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Cookie$Builder;.hostOnlyDomain:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f9c2c.  v0:= 1I;
  #L4f9c2e.  call temp:= `domain`(v1, v2, v0) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @kind direct;
  #L4f9c34.  v2:= temp @kind object;
  #L4f9c36.  return v2 @kind object;
}
procedure `okhttp3.Cookie$Builder` `httpOnly`(`okhttp3.Cookie$Builder` v1 @kind this) @signature `Lokhttp3/Cookie$Builder;.httpOnly:()Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f9c48.  v0:= 1I;
  #L4f9c4a.  v1.`okhttp3.Cookie$Builder.g` @type ^`boolean` := v0 @kind boolean;
  #L4f9c4e.  return v1 @kind object;
}
procedure `okhttp3.Cookie$Builder` `name`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Cookie$Builder;.name:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f9c60.  if v2 == 0 then goto L4f9c8e;
  #L4f9c64.  call temp:= `trim`(v2) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L4f9c6a.  v0:= temp @kind object;
  #L4f9c6c.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4f9c72.  v0:= temp;
  #L4f9c74.  if v0 == 0 then goto L4f9c7e;
  #L4f9c78.  v1.`okhttp3.Cookie$Builder.a` @type ^`java.lang.String` := v2 @kind object;
  #L4f9c7c.  return v1 @kind object;
  #L4f9c7e.  v2:= new `java.lang.IllegalArgumentException`;
  #L4f9c82.  v0:= "name is not trimmed" @kind object;
  #L4f9c86.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f9c8c.  throw v2;
  #L4f9c8e.  v2:= new `java.lang.NullPointerException`;
  #L4f9c92.  v0:= "name == null" @kind object;
  #L4f9c96.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f9c9c.  throw v2;
}
procedure `okhttp3.Cookie$Builder` `path`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Cookie$Builder;.path:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f9cb0.  v0:= "/" @kind object;
  #L4f9cb4.  call temp:= `startsWith`(v2, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L4f9cba.  v0:= temp;
  #L4f9cbc.  if v0 == 0 then goto L4f9cc6;
  #L4f9cc0.  v1.`okhttp3.Cookie$Builder.e` @type ^`java.lang.String` := v2 @kind object;
  #L4f9cc4.  return v1 @kind object;
  #L4f9cc6.  v2:= new `java.lang.IllegalArgumentException`;
  #L4f9cca.  v0:= "path must start with '/'" @kind object;
  #L4f9cce.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f9cd4.  throw v2;
}
procedure `okhttp3.Cookie$Builder` `secure`(`okhttp3.Cookie$Builder` v1 @kind this) @signature `Lokhttp3/Cookie$Builder;.secure:()Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f9ce8.  v0:= 1I;
  #L4f9cea.  v1.`okhttp3.Cookie$Builder.f` @type ^`boolean` := v0 @kind boolean;
  #L4f9cee.  return v1 @kind object;
}
procedure `okhttp3.Cookie$Builder` `value`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Cookie$Builder;.value:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f9d00.  if v2 == 0 then goto L4f9d2e;
  #L4f9d04.  call temp:= `trim`(v2) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L4f9d0a.  v0:= temp @kind object;
  #L4f9d0c.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4f9d12.  v0:= temp;
  #L4f9d14.  if v0 == 0 then goto L4f9d1e;
  #L4f9d18.  v1.`okhttp3.Cookie$Builder.b` @type ^`java.lang.String` := v2 @kind object;
  #L4f9d1c.  return v1 @kind object;
  #L4f9d1e.  v2:= new `java.lang.IllegalArgumentException`;
  #L4f9d22.  v0:= "value is not trimmed" @kind object;
  #L4f9d26.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f9d2c.  throw v2;
  #L4f9d2e.  v2:= new `java.lang.NullPointerException`;
  #L4f9d32.  v0:= "value == null" @kind object;
  #L4f9d36.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f9d3c.  throw v2;
}
