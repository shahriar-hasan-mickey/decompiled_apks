record `okhttp3.MultipartBody$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `okio.ByteString` `okhttp3.MultipartBody$Builder.boundary` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.MultipartBody$Builder.parts` @AccessFlag PRIVATE_FINAL;
  `okhttp3.MediaType` `okhttp3.MultipartBody$Builder.type` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.MultipartBody$Builder` v1 @kind this) @signature `Lokhttp3/MultipartBody$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4fe6d8.  call temp:= `randomUUID`() @signature `Ljava/util/UUID;.randomUUID:()Ljava/util/UUID;` @kind static;
  #L4fe6de.  v0:= temp @kind object;
  #L4fe6e0.  call temp:= `toString`(v0) @signature `Ljava/util/UUID;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fe6e6.  v0:= temp @kind object;
  #L4fe6e8.  call `<init>`(v1, v0) @signature `Lokhttp3/MultipartBody$Builder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fe6ee.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.MultipartBody$Builder` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4fe700.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fe706.  v0:= `@@okhttp3.MultipartBody.MIXED` @type ^`okhttp3.MediaType` @kind object;
  #L4fe70a.  v1.`okhttp3.MultipartBody$Builder.type` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L4fe70e.  v0:= new `java.util.ArrayList`;
  #L4fe712.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4fe718.  v1.`okhttp3.MultipartBody$Builder.parts` @type ^`java.util.List` := v0 @kind object;
  #L4fe71c.  call temp:= `encodeUtf8`(v2) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L4fe722.  v2:= temp @kind object;
  #L4fe724.  v1.`okhttp3.MultipartBody$Builder.boundary` @type ^`okio.ByteString` := v2 @kind object;
  #L4fe728.  return @kind void;
}
procedure `okhttp3.MultipartBody$Builder` `addFormDataPart`(`okhttp3.MultipartBody$Builder` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.addFormDataPart:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;

  #L4fe5a8.  call temp:= `createFormData`(v1, v2) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L4fe5ae.  v1:= temp @kind object;
  #L4fe5b0.  call temp:= `addPart`(v0, v1) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L4fe5b6.  v1:= temp @kind object;
  #L4fe5b8.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `addFormDataPart`(`okhttp3.MultipartBody$Builder` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `okhttp3.RequestBody` v3 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.addFormDataPart:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;

  #L4fe5cc.  call temp:= `createFormData`(v1, v2, v3) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L4fe5d2.  v1:= temp @kind object;
  #L4fe5d4.  call temp:= `addPart`(v0, v1) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L4fe5da.  v1:= temp @kind object;
  #L4fe5dc.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `addPart`(`okhttp3.MultipartBody$Builder` v0 @kind this, `okhttp3.Headers` v1 @kind object, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;

  #L4fe5f0.  call temp:= `create`(v1, v2) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L4fe5f6.  v1:= temp @kind object;
  #L4fe5f8.  call temp:= `addPart`(v0, v1) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L4fe5fe.  v1:= temp @kind object;
  #L4fe600.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody$Builder` `addPart`(`okhttp3.MultipartBody$Builder` v1 @kind this, `okhttp3.MultipartBody$Part` v2 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fe614.  if v2 == 0 then goto L4fe624;
  #L4fe618.  v0:= v1.`okhttp3.MultipartBody$Builder.parts` @type ^`java.util.List` @kind object;
  #L4fe61c.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fe622.  return v1 @kind object;
  #L4fe624.  v2:= new `java.lang.NullPointerException`;
  #L4fe628.  v0:= "part == null" @kind object;
  #L4fe62c.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fe632.  throw v2;
}
procedure `okhttp3.MultipartBody$Builder` `addPart`(`okhttp3.MultipartBody$Builder` v0 @kind this, `okhttp3.RequestBody` v1 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;

  #L4fe644.  call temp:= `create`(v1) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L4fe64a.  v1:= temp @kind object;
  #L4fe64c.  call temp:= `addPart`(v0, v1) @signature `Lokhttp3/MultipartBody$Builder;.addPart:(Lokhttp3/MultipartBody$Part;)Lokhttp3/MultipartBody$Builder;` @kind virtual;
  #L4fe652.  v1:= temp @kind object;
  #L4fe654.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody` `build`(`okhttp3.MultipartBody$Builder` v4 @kind this) @signature `Lokhttp3/MultipartBody$Builder;.build:()Lokhttp3/MultipartBody;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fe560.  v0:= v4.`okhttp3.MultipartBody$Builder.parts` @type ^`java.util.List` @kind object;
  #L4fe564.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L4fe56a.  v0:= temp;
  #L4fe56c.  if v0 != 0 then goto L4fe588;
  #L4fe570.  v0:= new `okhttp3.MultipartBody`;
  #L4fe574.  v1:= v4.`okhttp3.MultipartBody$Builder.boundary` @type ^`okio.ByteString` @kind object;
  #L4fe578.  v2:= v4.`okhttp3.MultipartBody$Builder.type` @type ^`okhttp3.MediaType` @kind object;
  #L4fe57c.  v3:= v4.`okhttp3.MultipartBody$Builder.parts` @type ^`java.util.List` @kind object;
  #L4fe580.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/MultipartBody;.<init>:(Lokio/ByteString;Lokhttp3/MediaType;Ljava/util/List;)V` @kind direct;
  #L4fe586.  return v0 @kind object;
  #L4fe588.  v0:= new `java.lang.IllegalStateException`;
  #L4fe58c.  v1:= "Multipart body must have at least one part." @kind object;
  #L4fe590.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fe596.  throw v0;
}
procedure `okhttp3.MultipartBody$Builder` `setType`(`okhttp3.MultipartBody$Builder` v3 @kind this, `okhttp3.MediaType` v4 @kind object) @signature `Lokhttp3/MultipartBody$Builder;.setType:(Lokhttp3/MediaType;)Lokhttp3/MultipartBody$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4fe668.  if v4 == 0 then goto L4fe6b8;
  #L4fe66c.  call temp:= `type`(v4) @signature `Lokhttp3/MediaType;.type:()Ljava/lang/String;` @kind virtual;
  #L4fe672.  v0:= temp @kind object;
  #L4fe674.  v1:= "multipart" @kind object;
  #L4fe678.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fe67e.  v0:= temp;
  #L4fe680.  if v0 == 0 then goto L4fe68a;
  #L4fe684.  v3.`okhttp3.MultipartBody$Builder.type` @type ^`okhttp3.MediaType` := v4 @kind object;
  #L4fe688.  return v3 @kind object;
  #L4fe68a.  v0:= new `java.lang.IllegalArgumentException`;
  #L4fe68e.  v1:= new `java.lang.StringBuilder`;
  #L4fe692.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fe698.  v2:= "multipart != " @kind object;
  #L4fe69c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe6a2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe6a8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fe6ae.  v4:= temp @kind object;
  #L4fe6b0.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fe6b6.  throw v0;
  #L4fe6b8.  v4:= new `java.lang.NullPointerException`;
  #L4fe6bc.  v0:= "type == null" @kind object;
  #L4fe6c0.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fe6c6.  throw v4;
}
