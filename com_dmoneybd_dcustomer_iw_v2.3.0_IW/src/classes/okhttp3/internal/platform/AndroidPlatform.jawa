record `okhttp3.internal.platform.AndroidPlatform` @kind class @AccessFlag  extends `okhttp3.internal.platform.Platform` @kind class {
  `okhttp3.internal.platform.AndroidPlatform$CloseGuard` `okhttp3.internal.platform.AndroidPlatform.closeGuard` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.platform.OptionalMethod` `okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.platform.OptionalMethod` `okhttp3.internal.platform.AndroidPlatform.setAlpnProtocols` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.platform.OptionalMethod` `okhttp3.internal.platform.AndroidPlatform.setHostname` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.platform.OptionalMethod` `okhttp3.internal.platform.AndroidPlatform.setUseSessionTickets` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `okhttp3.internal.platform.AndroidPlatform.sslParametersClass` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@okhttp3.internal.platform.AndroidPlatform.MAX_LOG_LENGTH` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`okhttp3.internal.platform.AndroidPlatform` v1 @kind this, `java.lang.Class` v2 @kind object, `okhttp3.internal.platform.OptionalMethod` v3 @kind object, `okhttp3.internal.platform.OptionalMethod` v4 @kind object, `okhttp3.internal.platform.OptionalMethod` v5 @kind object, `okhttp3.internal.platform.OptionalMethod` v6 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.<init>:(Ljava/lang/Class;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L505e84.  call `<init>`(v1) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L505e8a.  call temp:= `b`() @signature `Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;.b:()Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;` @kind static;
  #L505e90.  v0:= temp @kind object;
  #L505e92.  v1.`okhttp3.internal.platform.AndroidPlatform.closeGuard` @type ^`okhttp3.internal.platform.AndroidPlatform$CloseGuard` := v0 @kind object;
  #L505e96.  v1.`okhttp3.internal.platform.AndroidPlatform.sslParametersClass` @type ^`java.lang.Class` := v2 @kind object;
  #L505e9a.  v1.`okhttp3.internal.platform.AndroidPlatform.setUseSessionTickets` @type ^`okhttp3.internal.platform.OptionalMethod` := v3 @kind object;
  #L505e9e.  v1.`okhttp3.internal.platform.AndroidPlatform.setHostname` @type ^`okhttp3.internal.platform.OptionalMethod` := v4 @kind object;
  #L505ea2.  v1.`okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol` @type ^`okhttp3.internal.platform.OptionalMethod` := v5 @kind object;
  #L505ea6.  v1.`okhttp3.internal.platform.AndroidPlatform.setAlpnProtocols` @type ^`okhttp3.internal.platform.OptionalMethod` := v6 @kind object;
  #L505eaa.  return @kind void;
}
procedure `boolean` `api23IsCleartextTrafficPermitted`(`okhttp3.internal.platform.AndroidPlatform` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.Class` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.api23IsCleartextTrafficPermitted:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L5059a0.  v0:= "isCleartextTrafficPermitted" @kind object;
  #L5059a4.  v1:= 0I;
  #L5059a6.  v2:= new `java.lang.Class`[v1];
  #L5059aa.  call temp:= `getMethod`(v5, v0, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L5059b0.  v5:= temp @kind object;
  #L5059b2.  v0:= new `java.lang.Object`[v1];
  #L5059b6.  call temp:= `invoke`(v5, v6, v0) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L5059bc.  v5:= temp @kind object;
  #L5059be.  v5:= (`java.lang.Boolean`) v5 @kind object;
  #L5059c2.  call temp:= `booleanValue`(v5) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L5059c8.  v4:= temp;
  #L5059ca.  return v4;
  #L5059cc.  call temp:= `isCleartextTrafficPermitted`(v3, v4) @signature `Lokhttp3/internal/platform/Platform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @kind super;
  #L5059d2.  v4:= temp;
  #L5059d4.  return v4;
  catch `java.lang.NoSuchMethodException` @[L5059a0..L5059ca] goto L5059cc;
}
procedure `boolean` `api24IsCleartextTrafficPermitted`(`okhttp3.internal.platform.AndroidPlatform` v5 @kind this, `java.lang.String` v6 @kind object, `java.lang.Class` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.api24IsCleartextTrafficPermitted:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L5059f8.  v0:= "isCleartextTrafficPermitted" @kind object;
  #L5059fc.  v1:= 1I;
  #L5059fe.  v2:= new `java.lang.Class`[v1];
  #L505a02.  v3:= constclass @type ^`java.lang.String` @kind object;
  #L505a06.  v4:= 0I;
  #L505a08.  v2[v4]:= v3 @kind object;
  #L505a0c.  call temp:= `getMethod`(v7, v0, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L505a12.  v0:= temp @kind object;
  #L505a14.  v1:= new `java.lang.Object`[v1];
  #L505a18.  v1[v4]:= v6 @kind object;
  #L505a1c.  call temp:= `invoke`(v0, v8, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L505a22.  v0:= temp @kind object;
  #L505a24.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L505a28.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L505a2e.  v6:= temp;
  #L505a30.  return v6;
  #L505a32.  call temp:= `api23IsCleartextTrafficPermitted`(v5, v6, v7, v8) @signature `Lokhttp3/internal/platform/AndroidPlatform;.api23IsCleartextTrafficPermitted:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @kind direct;
  #L505a38.  v6:= temp;
  #L505a3a.  return v6;
  catch `java.lang.NoSuchMethodException` @[L5059f8..L505a30] goto L505a32;
}
procedure `okhttp3.internal.platform.Platform` `buildIfSupported`() @signature `Lokhttp3/internal/platform/AndroidPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L505cb8.  v0:= constclass @type ^`byte`[] @kind object;
  #L505cbc.  v1:= 0I;
  #L505cbe.  v2:= "com.android.org.conscrypt.SSLParametersImpl" @kind object;
  #L505cc2.  call temp:= `forName`(v2) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L505cc8.  v2:= temp @kind object;
  #L505cca.  v4:= v2 @kind object;
  #L505ccc.  goto L505cdc;
  #L505cce.  v2:= "org.apache.harmony.xnet.provider.jsse.SSLParametersImpl" @kind object;
  #L505cd2.  call temp:= `forName`(v2) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L505cd8.  v2:= temp @kind object;
  #L505cda.  goto L505cca;
  #L505cdc.  v5:= new `okhttp3.internal.platform.OptionalMethod`;
  #L505ce0.  v2:= "setUseSessionTickets" @kind object;
  #L505ce4.  v3:= 1I;
  #L505ce6.  v6:= new `java.lang.Class`[v3];
  #L505cea.  v7:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L505cee.  v8:= 0I;
  #L505cf0.  v6[v8]:= v7 @kind object;
  #L505cf4.  call `<init>`(v5, v1, v2, v6) @signature `Lokhttp3/internal/platform/OptionalMethod;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L505cfa.  v6:= new `okhttp3.internal.platform.OptionalMethod`;
  #L505cfe.  v2:= "setHostname" @kind object;
  #L505d02.  v7:= new `java.lang.Class`[v3];
  #L505d06.  v9:= constclass @type ^`java.lang.String` @kind object;
  #L505d0a.  v7[v8]:= v9 @kind object;
  #L505d0e.  call `<init>`(v6, v1, v2, v7) @signature `Lokhttp3/internal/platform/OptionalMethod;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L505d14.  call temp:= `supportsAlpn`() @signature `Lokhttp3/internal/platform/AndroidPlatform;.supportsAlpn:()Z` @kind static;
  #L505d1a.  v2:= temp;
  #L505d1c.  if v2 == 0 then goto L505d4e;
  #L505d20.  v2:= new `okhttp3.internal.platform.OptionalMethod`;
  #L505d24.  v7:= "getAlpnSelectedProtocol" @kind object;
  #L505d28.  v9:= new `java.lang.Class`[v8];
  #L505d2c.  call `<init>`(v2, v0, v7, v9) @signature `Lokhttp3/internal/platform/OptionalMethod;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L505d32.  v7:= new `okhttp3.internal.platform.OptionalMethod`;
  #L505d36.  v9:= "setAlpnProtocols" @kind object;
  #L505d3a.  v3:= new `java.lang.Class`[v3];
  #L505d3e.  v3[v8]:= v0 @kind object;
  #L505d42.  call `<init>`(v7, v1, v9, v3) @signature `Lokhttp3/internal/platform/OptionalMethod;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L505d48.  v8:= v7 @kind object;
  #L505d4a.  v7:= v2 @kind object;
  #L505d4c.  goto L505d52;
  #L505d4e.  v7:= v1 @kind object;
  #L505d50.  v8:= v7 @kind object;
  #L505d52.  v0:= new `okhttp3.internal.platform.AndroidPlatform`;
  #L505d56.  v3:= v0 @kind object;
  #L505d58.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/internal/platform/AndroidPlatform;.<init>:(Ljava/lang/Class;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;Lokhttp3/internal/platform/OptionalMethod;)V` @kind direct;
  #L505d5e.  return v0 @kind object;
  #L505d60.  return v1 @kind object;
  catch `java.lang.ClassNotFoundException` @[L505cbe..L505cca] goto L505cce;
  catch `java.lang.ClassNotFoundException` @[L505cce..L505d5e] goto L505d60;
}
procedure `boolean` `supportsAlpn`() @signature `Lokhttp3/internal/platform/AndroidPlatform;.supportsAlpn:()Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L505ae0.  v0:= "GMSCore_OpenSSL" @kind object;
  #L505ae4.  call temp:= `getProvider`(v0) @signature `Ljava/security/Security;.getProvider:(Ljava/lang/String;)Ljava/security/Provider;` @kind static;
  #L505aea.  v0:= temp @kind object;
  #L505aec.  v1:= 1I;
  #L505aee.  if v0 == 0 then goto L505af4;
  #L505af2.  return v1;
  #L505af4.  v0:= "android.net.Network" @kind object;
  #L505af8.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L505afe.  return v1;
  #L505b00.  v0:= 0I;
  #L505b02.  return v0;
  catch `java.lang.ClassNotFoundException` @[L505af4..L505afe] goto L505b00;
}
procedure `okhttp3.internal.tls.CertificateChainCleaner` `buildCertificateChainCleaner`(`okhttp3.internal.platform.AndroidPlatform` v8 @kind this, `javax.net.ssl.X509TrustManager` v9 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L505d90.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L505d94.  v1:= "android.net.http.X509TrustManagerExtensions" @kind object;
  #L505d98.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L505d9e.  v1:= temp @kind object;
  #L505da0.  v2:= 1I;
  #L505da2.  v3:= new `java.lang.Class`[v2];
  #L505da6.  v4:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L505daa.  v5:= 0I;
  #L505dac.  v3[v5]:= v4 @kind object;
  #L505db0.  call temp:= `getConstructor`(v1, v3) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L505db6.  v3:= temp @kind object;
  #L505db8.  v4:= new `java.lang.Object`[v2];
  #L505dbc.  v4[v5]:= v9 @kind object;
  #L505dc0.  call temp:= `newInstance`(v3, v4) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L505dc6.  v3:= temp @kind object;
  #L505dc8.  v4:= "checkServerTrusted" @kind object;
  #L505dcc.  v6:= 3I;
  #L505dce.  v6:= new `java.lang.Class`[v6];
  #L505dd2.  v7:= constclass @type ^`java.security.cert.X509Certificate`[] @kind object;
  #L505dd6.  v6[v5]:= v7 @kind object;
  #L505dda.  v6[v2]:= v0 @kind object;
  #L505dde.  v2:= 2I;
  #L505de0.  v6[v2]:= v0 @kind object;
  #L505de4.  call temp:= `getMethod`(v1, v4, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L505dea.  v0:= temp @kind object;
  #L505dec.  v1:= new `okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner`;
  #L505df0.  call `<init>`(v1, v3, v0) @signature `Lokhttp3/internal/platform/AndroidPlatform$AndroidCertificateChainCleaner;.<init>:(Ljava/lang/Object;Ljava/lang/reflect/Method;)V` @kind direct;
  #L505df6.  return v1 @kind object;
  #L505df8.  call temp:= `buildCertificateChainCleaner`(v8, v9) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @kind super;
  #L505dfe.  v9:= temp @kind object;
  #L505e00.  return v9 @kind object;
  catch `java.lang.Exception` @[L505d94..L505df6] goto L505df8;
}
procedure `okhttp3.internal.tls.TrustRootIndex` `buildTrustRootIndex`(`okhttp3.internal.platform.AndroidPlatform` v6 @kind this, `javax.net.ssl.X509TrustManager` v7 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L505e24.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L505e2a.  v0:= temp @kind object;
  #L505e2c.  v1:= "findTrustAnchorByIssuerAndSignature" @kind object;
  #L505e30.  v2:= 1I;
  #L505e32.  v3:= new `java.lang.Class`[v2];
  #L505e36.  v4:= 0I;
  #L505e38.  v5:= constclass @type ^`java.security.cert.X509Certificate` @kind object;
  #L505e3c.  v3[v4]:= v5 @kind object;
  #L505e40.  call temp:= `getDeclaredMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L505e46.  v0:= temp @kind object;
  #L505e48.  call `setAccessible`(v0, v2) @signature `Ljava/lang/reflect/Method;.setAccessible:(Z)V` @kind virtual;
  #L505e4e.  v1:= new `okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex`;
  #L505e52.  call `<init>`(v1, v7, v0) @signature `Lokhttp3/internal/platform/AndroidPlatform$AndroidTrustRootIndex;.<init>:(Ljavax/net/ssl/X509TrustManager;Ljava/lang/reflect/Method;)V` @kind direct;
  #L505e58.  return v1 @kind object;
  #L505e5a.  call temp:= `buildTrustRootIndex`(v6, v7) @signature `Lokhttp3/internal/platform/Platform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @kind super;
  #L505e60.  v7:= temp @kind object;
  #L505e62.  return v7 @kind object;
  catch `java.lang.NoSuchMethodException` @[L505e24..L505e58] goto L505e5a;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.AndroidPlatform` v5 @kind this, `javax.net.ssl.SSLSocket` v6 @kind object, `java.lang.String` v7 @kind object, `java.util.List` v8 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L505ebc.  v0:= 0I;
  #L505ebe.  v1:= 1I;
  #L505ec0.  if v7 == 0 then goto L505eec;
  #L505ec4.  v2:= v5.`okhttp3.internal.platform.AndroidPlatform.setUseSessionTickets` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L505ec8.  v3:= new `java.lang.Object`[v1];
  #L505ecc.  v4:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L505ed0.  v3[v0]:= v4 @kind object;
  #L505ed4.  call temp:= `invokeOptionalWithoutCheckedException`(v2, v6, v3) @signature `Lokhttp3/internal/platform/OptionalMethod;.invokeOptionalWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L505eda.  v2:= v5.`okhttp3.internal.platform.AndroidPlatform.setHostname` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L505ede.  v3:= new `java.lang.Object`[v1];
  #L505ee2.  v3[v0]:= v7 @kind object;
  #L505ee6.  call temp:= `invokeOptionalWithoutCheckedException`(v2, v6, v3) @signature `Lokhttp3/internal/platform/OptionalMethod;.invokeOptionalWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L505eec.  v7:= v5.`okhttp3.internal.platform.AndroidPlatform.setAlpnProtocols` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L505ef0.  if v7 == 0 then goto L505f1a;
  #L505ef4.  call temp:= `isSupported`(v7, v6) @signature `Lokhttp3/internal/platform/OptionalMethod;.isSupported:(Ljava/lang/Object;)Z` @kind virtual;
  #L505efa.  v7:= temp;
  #L505efc.  if v7 == 0 then goto L505f1a;
  #L505f00.  v7:= new `java.lang.Object`[v1];
  #L505f04.  call temp:= `a`(v8) @signature `Lokhttp3/internal/platform/Platform;.a:(Ljava/util/List;)[B` @kind static;
  #L505f0a.  v8:= temp @kind object;
  #L505f0c.  v7[v0]:= v8 @kind object;
  #L505f10.  v8:= v5.`okhttp3.internal.platform.AndroidPlatform.setAlpnProtocols` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L505f14.  call temp:= `invokeWithoutCheckedException`(v8, v6, v7) @signature `Lokhttp3/internal/platform/OptionalMethod;.invokeWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L505f1a.  return @kind void;
}
procedure `void` `connectSocket`(`okhttp3.internal.platform.AndroidPlatform` v1 @kind this, `java.net.Socket` v2 @kind object, `java.net.InetSocketAddress` v3 @kind object, `int` v4 ) @signature `Lokhttp3/internal/platform/AndroidPlatform;.connectSocket:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L505f2c.  v0:= "Exception in connect" @kind object;
  #L505f30.  call `connect`(v2, v3, v4) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #L505f36.  return @kind void;
  #L505f38.  v2:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L505f3a.  v3:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L505f3e.  v4:= 26I;
  #L505f42.  if v3 != v4 then goto L505f58;
  #L505f46.  v3:= new `java.io.IOException`;
  #L505f4a.  call `<init>`(v3, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L505f50.  call temp:= `initCause`(v3, v2) @signature `Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L505f56.  throw v3;
  #L505f58.  throw v2;
  #L505f5a.  v2:= Exception @type ^`java.lang.SecurityException` @kind object;
  #L505f5c.  v3:= new `java.io.IOException`;
  #L505f60.  call `<init>`(v3, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L505f66.  call temp:= `initCause`(v3, v2) @signature `Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L505f6c.  throw v3;
  #L505f6e.  v2:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L505f70.  call temp:= `isAndroidGetsocknameError`(v2) @signature `Lokhttp3/internal/Util;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @kind static;
  #L505f76.  v3:= temp;
  #L505f78.  if v3 == 0 then goto L505f88;
  #L505f7c.  v3:= new `java.io.IOException`;
  #L505f80.  call `<init>`(v3, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L505f86.  throw v3;
  #L505f88.  throw v2;
  catch `java.lang.AssertionError` @[L505f30..L505f36] goto L505f6e;
  catch `java.lang.SecurityException` @[L505f30..L505f36] goto L505f5a;
  catch `java.lang.ClassCastException` @[L505f30..L505f36] goto L505f38;
}
procedure `javax.net.ssl.SSLContext` `getSSLContext`(`okhttp3.internal.platform.AndroidPlatform` v3 @kind this) @signature `Lokhttp3/internal/platform/AndroidPlatform;.getSSLContext:()Ljavax/net/ssl/SSLContext;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L505b98.  v0:= 1I;
  #L505b9a.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L505b9e.  v2:= 16I;
  #L505ba2.  if v1 < v2 then goto L505bb0;
  #L505ba6.  v2:= 22I;
  #L505baa.  if v1 >= v2 then goto L505bb0;
  #L505bae.  goto L505bb6;
  #L505bb0.  v0:= 0I;
  #L505bb2.  goto L505bb6;
  #L505bb4.  
  #L505bb6.  if v0 == 0 then goto L505bc8;
  #L505bba.  v0:= "TLSv1.2" @kind object;
  #L505bbe.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L505bc4.  v0:= temp @kind object;
  #L505bc6.  return v0 @kind object;
  #L505bc8.  v0:= "TLS" @kind object;
  #L505bcc.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L505bd2.  v0:= temp @kind object;
  #L505bd4.  return v0 @kind object;
  #L505bd6.  v0:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L505bd8.  v1:= new `java.lang.IllegalStateException`;
  #L505bdc.  v2:= "No TLS provider" @kind object;
  #L505be0.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L505be6.  throw v1;
  catch `java.lang.NoClassDefFoundError` @[L505b9a..L505b9e] goto L505bb4;
  catch `java.security.NoSuchAlgorithmException` @[L505bba..L505bc6] goto L505bc8;
  catch `java.security.NoSuchAlgorithmException` @[L505bc8..L505bd4] goto L505bd6;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.AndroidPlatform` v3 @kind this, `javax.net.ssl.SSLSocket` v4 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L505b44.  v0:= v3.`okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L505b48.  v1:= 0I;
  #L505b4a.  if v0 != 0 then goto L505b50;
  #L505b4e.  return v1 @kind object;
  #L505b50.  call temp:= `isSupported`(v0, v4) @signature `Lokhttp3/internal/platform/OptionalMethod;.isSupported:(Ljava/lang/Object;)Z` @kind virtual;
  #L505b56.  v0:= temp;
  #L505b58.  if v0 != 0 then goto L505b5e;
  #L505b5c.  return v1 @kind object;
  #L505b5e.  v0:= v3.`okhttp3.internal.platform.AndroidPlatform.getAlpnSelectedProtocol` @type ^`okhttp3.internal.platform.OptionalMethod` @kind object;
  #L505b62.  v2:= 0I;
  #L505b64.  v2:= new `java.lang.Object`[v2];
  #L505b68.  call temp:= `invokeWithoutCheckedException`(v0, v4, v2) @signature `Lokhttp3/internal/platform/OptionalMethod;.invokeWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L505b6e.  v4:= temp @kind object;
  #L505b70.  v4:= (`byte`[]) v4 @kind object;
  #L505b74.  if v4 == 0 then goto L505b86;
  #L505b78.  v1:= new `java.lang.String`;
  #L505b7c.  v0:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L505b80.  call `<init>`(v1, v4, v0) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L505b86.  return v1 @kind object;
}
procedure `java.lang.Object` `getStackTraceForCloseable`(`okhttp3.internal.platform.AndroidPlatform` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.getStackTraceForCloseable:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L505b24.  v0:= v1.`okhttp3.internal.platform.AndroidPlatform.closeGuard` @type ^`okhttp3.internal.platform.AndroidPlatform$CloseGuard` @kind object;
  #L505b28.  call temp:= `a`(v0, v2) @signature `Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L505b2e.  v2:= temp @kind object;
  #L505b30.  return v2 @kind object;
}
procedure `boolean` `isCleartextTrafficPermitted`(`okhttp3.internal.platform.AndroidPlatform` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L505a5c.  v0:= "android.security.NetworkSecurityPolicy" @kind object;
  #L505a60.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L505a66.  v0:= temp @kind object;
  #L505a68.  v1:= "getInstance" @kind object;
  #L505a6c.  v2:= 0I;
  #L505a6e.  v3:= new `java.lang.Class`[v2];
  #L505a72.  call temp:= `getMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L505a78.  v1:= temp @kind object;
  #L505a7a.  v3:= 0I;
  #L505a7c.  v2:= new `java.lang.Object`[v2];
  #L505a80.  call temp:= `invoke`(v1, v3, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L505a86.  v1:= temp @kind object;
  #L505a88.  call temp:= `api24IsCleartextTrafficPermitted`(v4, v5, v0, v1) @signature `Lokhttp3/internal/platform/AndroidPlatform;.api24IsCleartextTrafficPermitted:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @kind direct;
  #L505a8e.  v5:= temp;
  #L505a90.  return v5;
  #L505a92.  v5:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L505a94.  goto L505a9c;
  #L505a96.  v5:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L505a98.  goto L505a9c;
  #L505a9a.  v5:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L505a9c.  v0:= "unable to determine cleartext support" @kind object;
  #L505aa0.  call temp:= `assertionError`(v0, v5) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L505aa6.  v5:= temp @kind object;
  #L505aa8.  throw v5;
  #L505aaa.  call temp:= `isCleartextTrafficPermitted`(v4, v5) @signature `Lokhttp3/internal/platform/Platform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @kind super;
  #L505ab0.  v5:= temp;
  #L505ab2.  return v5;
  catch `java.lang.ClassNotFoundException` @[L505a5c..L505a90] goto L505aaa;
  catch `java.lang.NoSuchMethodException` @[L505a5c..L505a90] goto L505aaa;
  catch `java.lang.IllegalAccessException` @[L505a5c..L505a90] goto L505a9a;
  catch `java.lang.IllegalArgumentException` @[L505a5c..L505a90] goto L505a96;
  catch `java.lang.reflect.InvocationTargetException` @[L505a5c..L505a90] goto L505a92;
}
procedure `void` `log`(`okhttp3.internal.platform.AndroidPlatform` v5 @kind this, `int` v6 , `java.lang.String` v7 @kind object, `java.lang.Throwable` v8 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L505fb0.  v0:= 5I;
  #L505fb2.  if v6 != v0 then goto L505fb8;
  #L505fb6.  goto L505fba;
  #L505fb8.  v0:= 3I;
  #L505fba.  v6:= 10I;
  #L505fbe.  if v8 == 0 then goto L505fee;
  #L505fc2.  v1:= new `java.lang.StringBuilder`;
  #L505fc6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L505fcc.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L505fd2.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L505fd8.  call temp:= `getStackTraceString`(v8) @signature `Landroid/util/Log;.getStackTraceString:(Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L505fde.  v7:= temp @kind object;
  #L505fe0.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L505fe6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L505fec.  v7:= temp @kind object;
  #L505fee.  v8:= 0I;
  #L505ff0.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L505ff6.  v1:= temp;
  #L505ff8.  if v8 >= v1 then goto L50603a;
  #L505ffc.  call temp:= `indexOf`(v7, v6, v8) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L506002.  v2:= temp;
  #L506004.  v3:= -1I;
  #L506006.  if v2 == v3 then goto L50600c;
  #L50600a.  goto L50600e;
  #L50600c.  v2:= v1;
  #L50600e.  v3:= v8 + 4000;
  #L506012.  call temp:= `min`(v2, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L506018.  v3:= temp;
  #L50601a.  call temp:= `substring`(v7, v8, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L506020.  v8:= temp @kind object;
  #L506022.  v4:= "OkHttp" @kind object;
  #L506026.  call temp:= `println`(v0, v4, v8) @signature `Landroid/util/Log;.println:(ILjava/lang/String;Ljava/lang/String;)I` @kind static;
  #L50602c.  if v3 < v2 then goto L506036;
  #L506030.  v8:= v3 + 1;
  #L506034.  goto L505ff8;
  #L506036.  v8:= v3;
  #L506038.  goto L50600e;
  #L50603a.  return @kind void;
}
procedure `void` `logCloseableLeak`(`okhttp3.internal.platform.AndroidPlatform` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.logCloseableLeak:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50604c.  v0:= v1.`okhttp3.internal.platform.AndroidPlatform.closeGuard` @type ^`okhttp3.internal.platform.AndroidPlatform$CloseGuard` @kind object;
  #L506050.  call temp:= `c`(v0, v3) @signature `Lokhttp3/internal/platform/AndroidPlatform$CloseGuard;.c:(Ljava/lang/Object;)Z` @kind virtual;
  #L506056.  v3:= temp;
  #L506058.  if v3 != 0 then goto L506066;
  #L50605c.  v3:= 5I;
  #L50605e.  v0:= 0I;
  #L506060.  call `log`(v1, v3, v2, v0) @signature `Lokhttp3/internal/platform/AndroidPlatform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L506066.  return @kind void;
}
procedure `javax.net.ssl.X509TrustManager` `trustManager`(`okhttp3.internal.platform.AndroidPlatform` v4 @kind this, `javax.net.ssl.SSLSocketFactory` v5 @kind object) @signature `Lokhttp3/internal/platform/AndroidPlatform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L505c20.  v0:= v4.`okhttp3.internal.platform.AndroidPlatform.sslParametersClass` @type ^`java.lang.Class` @kind object;
  #L505c24.  v1:= "sslParameters" @kind object;
  #L505c28.  call temp:= `b`(v5, v0, v1) @signature `Lokhttp3/internal/platform/Platform;.b:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L505c2e.  v0:= temp @kind object;
  #L505c30.  if v0 != 0 then goto L505c66;
  #L505c34.  v0:= "com.google.android.gms.org.conscrypt.SSLParametersImpl" @kind object;
  #L505c38.  v2:= 0I;
  #L505c3a.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L505c40.  v3:= temp @kind object;
  #L505c42.  call temp:= `getClassLoader`(v3) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L505c48.  v3:= temp @kind object;
  #L505c4a.  call temp:= `forName`(v0, v2, v3) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L505c50.  v0:= temp @kind object;
  #L505c52.  call temp:= `b`(v5, v0, v1) @signature `Lokhttp3/internal/platform/Platform;.b:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L505c58.  v0:= temp @kind object;
  #L505c5a.  goto L505c66;
  #L505c5c.  call temp:= `trustManager`(v4, v5) @signature `Lokhttp3/internal/platform/Platform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @kind super;
  #L505c62.  v5:= temp @kind object;
  #L505c64.  return v5 @kind object;
  #L505c66.  v5:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L505c6a.  v1:= "x509TrustManager" @kind object;
  #L505c6e.  call temp:= `b`(v0, v5, v1) @signature `Lokhttp3/internal/platform/Platform;.b:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L505c74.  v5:= temp @kind object;
  #L505c76.  v5:= (`javax.net.ssl.X509TrustManager`) v5 @kind object;
  #L505c7a.  if v5 == 0 then goto L505c80;
  #L505c7e.  return v5 @kind object;
  #L505c80.  v5:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L505c84.  v1:= "trustManager" @kind object;
  #L505c88.  call temp:= `b`(v0, v5, v1) @signature `Lokhttp3/internal/platform/Platform;.b:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L505c8e.  v5:= temp @kind object;
  #L505c90.  v5:= (`javax.net.ssl.X509TrustManager`) v5 @kind object;
  #L505c94.  return v5 @kind object;
  catch `java.lang.ClassNotFoundException` @[L505c34..L505c5a] goto L505c5c;
}
