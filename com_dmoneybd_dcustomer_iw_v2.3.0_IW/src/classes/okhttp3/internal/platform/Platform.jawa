record `okhttp3.internal.platform.Platform` @kind class @AccessFlag PUBLIC {
}
global `int` `@@okhttp3.internal.platform.Platform.INFO` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.internal.platform.Platform` `@@okhttp3.internal.platform.Platform.PLATFORM` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@okhttp3.internal.platform.Platform.WARN` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.logging.Logger` `@@okhttp3.internal.platform.Platform.logger` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/platform/Platform;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L506b38.  call temp:= `findPlatform`() @signature `Lokhttp3/internal/platform/Platform;.findPlatform:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L506b3e.  v0:= temp @kind object;
  #L506b40.  `@@okhttp3.internal.platform.Platform.PLATFORM` @type ^`okhttp3.internal.platform.Platform` := v0 @kind object;
  #L506b44.  v0:= constclass @type ^`okhttp3.OkHttpClient` @kind object;
  #L506b48.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L506b4e.  v0:= temp @kind object;
  #L506b50.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L506b56.  v0:= temp @kind object;
  #L506b58.  `@@okhttp3.internal.platform.Platform.logger` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L506b5c.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.platform.Platform` v0 @kind this) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L506b70.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L506b76.  return @kind void;
}
procedure `byte`[] `a`(`java.util.List` v5 @kind object) @signature `Lokhttp3/internal/platform/Platform;.a:(Ljava/util/List;)[B` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L506738.  v0:= new `okio.Buffer`;
  #L50673c.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L506742.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L506748.  v1:= temp;
  #L50674a.  v2:= 0I;
  #L50674c.  if v2 >= v1 then goto L506790;
  #L506750.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L506756.  v3:= temp @kind object;
  #L506758.  v3:= (`okhttp3.Protocol`) v3 @kind object;
  #L50675c.  v4:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L506760.  if v3 != v4 then goto L506766;
  #L506764.  goto L50678a;
  #L506766.  call temp:= `toString`(v3) @signature `Lokhttp3/Protocol;.toString:()Ljava/lang/String;` @kind virtual;
  #L50676c.  v4:= temp @kind object;
  #L50676e.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L506774.  v4:= temp;
  #L506776.  call temp:= `writeByte`(v0, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L50677c.  call temp:= `toString`(v3) @signature `Lokhttp3/Protocol;.toString:()Ljava/lang/String;` @kind virtual;
  #L506782.  v3:= temp @kind object;
  #L506784.  call temp:= `writeUtf8`(v0, v3) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;)Lokio/Buffer;` @kind virtual;
  #L50678a.  v2:= v2 + 1;
  #L50678e.  goto L50674c;
  #L506790.  call temp:= `readByteArray`(v0) @signature `Lokio/Buffer;.readByteArray:()[B` @kind virtual;
  #L506796.  v5:= temp @kind object;
  #L506798.  return v5 @kind object;
}
procedure `java.util.List` `alpnProtocolNames`(`java.util.List` v5 @kind object) @signature `Lokhttp3/internal/platform/Platform;.alpnProtocolNames:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L5068d8.  v0:= new `java.util.ArrayList`;
  #L5068dc.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L5068e2.  v1:= temp;
  #L5068e4.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L5068ea.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L5068f0.  v1:= temp;
  #L5068f2.  v2:= 0I;
  #L5068f4.  if v2 >= v1 then goto L506922;
  #L5068f8.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L5068fe.  v3:= temp @kind object;
  #L506900.  v3:= (`okhttp3.Protocol`) v3 @kind object;
  #L506904.  v4:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L506908.  if v3 != v4 then goto L50690e;
  #L50690c.  goto L50691c;
  #L50690e.  call temp:= `toString`(v3) @signature `Lokhttp3/Protocol;.toString:()Ljava/lang/String;` @kind virtual;
  #L506914.  v3:= temp @kind object;
  #L506916.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L50691c.  v2:= v2 + 1;
  #L506920.  goto L5068f4;
  #L506922.  return v0 @kind object;
}
procedure `java.lang.Object` `b`(`java.lang.Object` v5 @kind object, `java.lang.Class` v6 @kind object, `java.lang.String` v7 @kind object) @signature `Lokhttp3/internal/platform/Platform;.b:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L5067e0.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L5067e4.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L5067ea.  v1:= temp @kind object;
  #L5067ec.  v2:= 0I;
  #L5067ee.  if v1 == v0 then goto L50683e;
  #L5067f2.  call temp:= `getDeclaredField`(v1, v7) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L5067f8.  v3:= temp @kind object;
  #L5067fa.  v4:= 1I;
  #L5067fc.  call `setAccessible`(v3, v4) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L506802.  call temp:= `get`(v3, v5) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L506808.  v3:= temp @kind object;
  #L50680a.  if v3 == 0 then goto L506826;
  #L50680e.  call temp:= `isInstance`(v6, v3) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L506814.  v4:= temp;
  #L506816.  if v4 != 0 then goto L50681c;
  #L50681a.  goto L506826;
  #L50681c.  call temp:= `cast`(v6, v3) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L506822.  v5:= temp @kind object;
  #L506824.  return v5 @kind object;
  #L506826.  return v2 @kind object;
  #L506828.  v5:= new `java.lang.AssertionError`;
  #L50682c.  call `<init>`(v5) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L506832.  throw v5;
  #L506834.  call temp:= `getSuperclass`(v1) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L50683a.  v1:= temp @kind object;
  #L50683c.  goto L5067ec;
  #L50683e.  v1:= "delegate" @kind object;
  #L506842.  call temp:= `equals`(v7, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L506848.  v3:= temp;
  #L50684a.  if v3 != 0 then goto L506864;
  #L50684e.  call temp:= `b`(v5, v0, v1) @signature `Lokhttp3/internal/platform/Platform;.b:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L506854.  v5:= temp @kind object;
  #L506856.  if v5 == 0 then goto L506864;
  #L50685a.  call temp:= `b`(v5, v6, v7) @signature `Lokhttp3/internal/platform/Platform;.b:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L506860.  v5:= temp @kind object;
  #L506862.  return v5 @kind object;
  #L506864.  return v2 @kind object;
  catch `java.lang.NoSuchFieldException` @[L5067f2..L506824] goto L506834;
  catch `java.lang.IllegalAccessException` @[L5067f2..L506824] goto L506828;
}
procedure `okhttp3.internal.platform.Platform` `findPlatform`() @signature `Lokhttp3/internal/platform/Platform;.findPlatform:()Lokhttp3/internal/platform/Platform;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L506a04.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/platform/AndroidPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L506a0a.  v0:= temp @kind object;
  #L506a0c.  if v0 == 0 then goto L506a12;
  #L506a10.  return v0 @kind object;
  #L506a12.  call temp:= `isConscryptPreferred`() @signature `Lokhttp3/internal/platform/Platform;.isConscryptPreferred:()Z` @kind static;
  #L506a18.  v0:= temp;
  #L506a1a.  if v0 == 0 then goto L506a2c;
  #L506a1e.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/platform/ConscryptPlatform;.buildIfSupported:()Lokhttp3/internal/platform/ConscryptPlatform;` @kind static;
  #L506a24.  v0:= temp @kind object;
  #L506a26.  if v0 == 0 then goto L506a2c;
  #L506a2a.  return v0 @kind object;
  #L506a2c.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/platform/Jdk9Platform;.buildIfSupported:()Lokhttp3/internal/platform/Jdk9Platform;` @kind static;
  #L506a32.  v0:= temp @kind object;
  #L506a34.  if v0 == 0 then goto L506a3a;
  #L506a38.  return v0 @kind object;
  #L506a3a.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L506a40.  v0:= temp @kind object;
  #L506a42.  if v0 == 0 then goto L506a48;
  #L506a46.  return v0 @kind object;
  #L506a48.  v0:= new `okhttp3.internal.platform.Platform`;
  #L506a4c.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L506a52.  return v0 @kind object;
}
procedure `okhttp3.internal.platform.Platform` `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L506a64.  v0:= `@@okhttp3.internal.platform.Platform.PLATFORM` @type ^`okhttp3.internal.platform.Platform` @kind object;
  #L506a68.  return v0 @kind object;
}
procedure `boolean` `isConscryptPreferred`() @signature `Lokhttp3/internal/platform/Platform;.isConscryptPreferred:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L5066e4.  v0:= "okhttp.platform" @kind object;
  #L5066e8.  call temp:= `getProperty`(v0) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L5066ee.  v0:= temp @kind object;
  #L5066f0.  v1:= "conscrypt" @kind object;
  #L5066f4.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L5066fa.  v0:= temp;
  #L5066fc.  if v0 == 0 then goto L506704;
  #L506700.  v0:= 1I;
  #L506702.  return v0;
  #L506704.  call temp:= `getProviders`() @signature `Ljava/security/Security;.getProviders:()[Ljava/security/Provider;` @kind static;
  #L50670a.  v0:= temp @kind object;
  #L50670c.  v1:= 0I;
  #L50670e.  v0:= v0[v1] @kind object;
  #L506712.  call temp:= `getName`(v0) @signature `Ljava/security/Provider;.getName:()Ljava/lang/String;` @kind virtual;
  #L506718.  v0:= temp @kind object;
  #L50671a.  v1:= "Conscrypt" @kind object;
  #L50671e.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L506724.  v0:= temp;
  #L506726.  return v0;
}
procedure `void` `afterHandshake`(`okhttp3.internal.platform.Platform` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object) @signature `Lokhttp3/internal/platform/Platform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;

  #L506b88.  return @kind void;
}
procedure `okhttp3.internal.tls.CertificateChainCleaner` `buildCertificateChainCleaner`(`okhttp3.internal.platform.Platform` v3 @kind this, `javax.net.ssl.SSLSocketFactory` v4 @kind object) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/SSLSocketFactory;)Lokhttp3/internal/tls/CertificateChainCleaner;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L506a7c.  call temp:= `trustManager`(v3, v4) @signature `Lokhttp3/internal/platform/Platform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @kind virtual;
  #L506a82.  v0:= temp @kind object;
  #L506a84.  if v0 == 0 then goto L506a92;
  #L506a88.  call temp:= `buildCertificateChainCleaner`(v3, v0) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @kind virtual;
  #L506a8e.  v4:= temp @kind object;
  #L506a90.  return v4 @kind object;
  #L506a92.  v0:= new `java.lang.IllegalStateException`;
  #L506a96.  v1:= new `java.lang.StringBuilder`;
  #L506a9a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L506aa0.  v2:= "Unable to extract the trust manager on " @kind object;
  #L506aa4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L506aaa.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L506ab0.  v2:= temp @kind object;
  #L506ab2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L506ab8.  v2:= ", sslSocketFactory is " @kind object;
  #L506abc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L506ac2.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L506ac8.  v4:= temp @kind object;
  #L506aca.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L506ad0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L506ad6.  v4:= temp @kind object;
  #L506ad8.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L506ade.  throw v0;
}
procedure `okhttp3.internal.tls.CertificateChainCleaner` `buildCertificateChainCleaner`(`okhttp3.internal.platform.Platform` v1 @kind this, `javax.net.ssl.X509TrustManager` v2 @kind object) @signature `Lokhttp3/internal/platform/Platform;.buildCertificateChainCleaner:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/CertificateChainCleaner;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L506af0.  v0:= new `okhttp3.internal.tls.BasicCertificateChainCleaner`;
  #L506af4.  call temp:= `buildTrustRootIndex`(v1, v2) @signature `Lokhttp3/internal/platform/Platform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @kind virtual;
  #L506afa.  v2:= temp @kind object;
  #L506afc.  call `<init>`(v0, v2) @signature `Lokhttp3/internal/tls/BasicCertificateChainCleaner;.<init>:(Lokhttp3/internal/tls/TrustRootIndex;)V` @kind direct;
  #L506b02.  return v0 @kind object;
}
procedure `okhttp3.internal.tls.TrustRootIndex` `buildTrustRootIndex`(`okhttp3.internal.platform.Platform` v1 @kind this, `javax.net.ssl.X509TrustManager` v2 @kind object) @signature `Lokhttp3/internal/platform/Platform;.buildTrustRootIndex:(Ljavax/net/ssl/X509TrustManager;)Lokhttp3/internal/tls/TrustRootIndex;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L506b14.  v0:= new `okhttp3.internal.tls.BasicTrustRootIndex`;
  #L506b18.  call temp:= `getAcceptedIssuers`(v2) @signature `Ljavax/net/ssl/X509TrustManager;.getAcceptedIssuers:()[Ljava/security/cert/X509Certificate;` @kind interface;
  #L506b1e.  v2:= temp @kind object;
  #L506b20.  call `<init>`(v0, v2) @signature `Lokhttp3/internal/tls/BasicTrustRootIndex;.<init>:([Ljava/security/cert/X509Certificate;)V` @kind direct;
  #L506b26.  return v0 @kind object;
}
procedure `void` `configureSslSocketFactory`(`okhttp3.internal.platform.Platform` v0 @kind this, `javax.net.ssl.SSLSocketFactory` v1 @kind object) @signature `Lokhttp3/internal/platform/Platform;.configureSslSocketFactory:(Ljavax/net/ssl/SSLSocketFactory;)V` @AccessFlag PUBLIC {
    temp;

  #L506b9c.  return @kind void;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.Platform` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object, `java.lang.String` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lokhttp3/internal/platform/Platform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L506bb0.  return @kind void;
}
procedure `void` `connectSocket`(`okhttp3.internal.platform.Platform` v0 @kind this, `java.net.Socket` v1 @kind object, `java.net.InetSocketAddress` v2 @kind object, `int` v3 ) @signature `Lokhttp3/internal/platform/Platform;.connectSocket:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;

  #L506bc4.  call `connect`(v1, v2, v3) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #L506bca.  return @kind void;
}
procedure `java.lang.String` `getPrefix`(`okhttp3.internal.platform.Platform` v1 @kind this) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L506888.  v0:= "OkHttp" @kind object;
  #L50688c.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLContext` `getSSLContext`(`okhttp3.internal.platform.Platform` v3 @kind this) @signature `Lokhttp3/internal/platform/Platform;.getSSLContext:()Ljavax/net/ssl/SSLContext;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L506934.  v0:= "java.specification.version" @kind object;
  #L506938.  call temp:= `getProperty`(v0) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L50693e.  v0:= temp @kind object;
  #L506940.  v1:= "1.7" @kind object;
  #L506944.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L50694a.  v0:= temp;
  #L50694c.  if v0 == 0 then goto L50695e;
  #L506950.  v0:= "TLSv1.2" @kind object;
  #L506954.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L50695a.  v0:= temp @kind object;
  #L50695c.  return v0 @kind object;
  #L50695e.  v0:= "TLS" @kind object;
  #L506962.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L506968.  v0:= temp @kind object;
  #L50696a.  return v0 @kind object;
  #L50696c.  v0:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L50696e.  v1:= new `java.lang.IllegalStateException`;
  #L506972.  v2:= "No TLS provider" @kind object;
  #L506976.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L50697c.  throw v1;
  catch `java.security.NoSuchAlgorithmException` @[L506950..L50695c] goto L50695e;
  catch `java.security.NoSuchAlgorithmException` @[L50695e..L50696a] goto L50696c;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.Platform` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object) @signature `Lokhttp3/internal/platform/Platform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L5068a0.  v1:= 0I;
  #L5068a2.  return v1 @kind object;
}
procedure `java.lang.Object` `getStackTraceForCloseable`(`okhttp3.internal.platform.Platform` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/internal/platform/Platform;.getStackTraceForCloseable:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5067ac.  v0:= `@@okhttp3.internal.platform.Platform.logger` @type ^`java.util.logging.Logger` @kind object;
  #L5067b0.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L5067b4.  call temp:= `isLoggable`(v0, v1) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L5067ba.  v0:= temp;
  #L5067bc.  if v0 == 0 then goto L5067cc;
  #L5067c0.  v0:= new `java.lang.Throwable`;
  #L5067c4.  call `<init>`(v0, v3) @signature `Ljava/lang/Throwable;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L5067ca.  return v0 @kind object;
  #L5067cc.  v3:= 0I;
  #L5067ce.  return v3 @kind object;
}
procedure `boolean` `isCleartextTrafficPermitted`(`okhttp3.internal.platform.Platform` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/platform/Platform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;

  #L5066d0.  v1:= 1I;
  #L5066d2.  return v1;
}
procedure `void` `log`(`okhttp3.internal.platform.Platform` v1 @kind this, `int` v2 , `java.lang.String` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L506bdc.  v0:= 5I;
  #L506bde.  if v2 != v0 then goto L506be8;
  #L506be2.  v2:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L506be6.  goto L506bec;
  #L506be8.  v2:= `@@java.util.logging.Level.INFO` @type ^`java.util.logging.Level` @kind object;
  #L506bec.  v0:= `@@okhttp3.internal.platform.Platform.logger` @type ^`java.util.logging.Logger` @kind object;
  #L506bf0.  call `log`(v0, v2, v3, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L506bf6.  return @kind void;
}
procedure `void` `logCloseableLeak`(`okhttp3.internal.platform.Platform` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/internal/platform/Platform;.logCloseableLeak:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L506c08.  if v3 != 0 then goto L506c2e;
  #L506c0c.  v0:= new `java.lang.StringBuilder`;
  #L506c10.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L506c16.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L506c1c.  v2:= " To see where this was allocated, set the OkHttpClient logger level to FINE: Logger.getLogger(OkHttpClient.class.getName()).setLevel(Level.FINE);" @kind object;
  #L506c20.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L506c26.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L506c2c.  v2:= temp @kind object;
  #L506c2e.  v0:= 5I;
  #L506c30.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L506c34.  call `log`(v1, v0, v2, v3) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L506c3a.  return @kind void;
}
procedure `java.lang.String` `toString`(`okhttp3.internal.platform.Platform` v1 @kind this) @signature `Lokhttp3/internal/platform/Platform;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5068b4.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L5068ba.  v0:= temp @kind object;
  #L5068bc.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L5068c2.  v0:= temp @kind object;
  #L5068c4.  return v0 @kind object;
}
procedure `javax.net.ssl.X509TrustManager` `trustManager`(`okhttp3.internal.platform.Platform` v3 @kind this, `javax.net.ssl.SSLSocketFactory` v4 @kind object) @signature `Lokhttp3/internal/platform/Platform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L5069ac.  v0:= 0I;
  #L5069ae.  v1:= "sun.security.ssl.SSLContextImpl" @kind object;
  #L5069b2.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L5069b8.  v1:= temp @kind object;
  #L5069ba.  v2:= "context" @kind object;
  #L5069be.  call temp:= `b`(v4, v1, v2) @signature `Lokhttp3/internal/platform/Platform;.b:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L5069c4.  v4:= temp @kind object;
  #L5069c6.  if v4 != 0 then goto L5069cc;
  #L5069ca.  return v0 @kind object;
  #L5069cc.  v1:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L5069d0.  v2:= "trustManager" @kind object;
  #L5069d4.  call temp:= `b`(v4, v1, v2) @signature `Lokhttp3/internal/platform/Platform;.b:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L5069da.  v4:= temp @kind object;
  #L5069dc.  v4:= (`javax.net.ssl.X509TrustManager`) v4 @kind object;
  #L5069e0.  return v4 @kind object;
  #L5069e2.  return v0 @kind object;
  catch `java.lang.ClassNotFoundException` @[L5069ae..L5069e0] goto L5069e2;
}
