record `okhttp3.internal.platform.JdkWithJettyBootPlatform` @kind class @AccessFlag  extends `okhttp3.internal.platform.Platform` @kind class {
  `java.lang.Class` `okhttp3.internal.platform.JdkWithJettyBootPlatform.clientProviderClass` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.JdkWithJettyBootPlatform.getMethod` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.JdkWithJettyBootPlatform.putMethod` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.JdkWithJettyBootPlatform.removeMethod` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `okhttp3.internal.platform.JdkWithJettyBootPlatform.serverProviderClass` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.platform.JdkWithJettyBootPlatform` v0 @kind this, `java.lang.reflect.Method` v1 @kind object, `java.lang.reflect.Method` v2 @kind object, `java.lang.reflect.Method` v3 @kind object, `java.lang.Class` v4 @kind object, `java.lang.Class` v5 @kind object) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L5065c4.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L5065ca.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.putMethod` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L5065ce.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.getMethod` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L5065d2.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.removeMethod` @type ^`java.lang.reflect.Method` := v3 @kind object;
  #L5065d6.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.clientProviderClass` @type ^`java.lang.Class` := v4 @kind object;
  #L5065da.  v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform.serverProviderClass` @type ^`java.lang.Class` := v5 @kind object;
  #L5065de.  return @kind void;
}
procedure `okhttp3.internal.platform.Platform` `buildIfSupported`() @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.buildIfSupported:()Lokhttp3/internal/platform/Platform;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L5064a8.  v0:= "org.eclipse.jetty.alpn.ALPN" @kind object;
  #L5064ac.  v1:= "org.eclipse.jetty.alpn.ALPN" @kind object;
  #L5064b0.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L5064b6.  v1:= temp @kind object;
  #L5064b8.  v2:= new `java.lang.StringBuilder`;
  #L5064bc.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L5064c2.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5064c8.  v3:= "$Provider" @kind object;
  #L5064cc.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5064d2.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L5064d8.  v2:= temp @kind object;
  #L5064da.  call temp:= `forName`(v2) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L5064e0.  v2:= temp @kind object;
  #L5064e2.  v3:= new `java.lang.StringBuilder`;
  #L5064e6.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L5064ec.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5064f2.  v4:= "$ClientProvider" @kind object;
  #L5064f6.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5064fc.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L506502.  v3:= temp @kind object;
  #L506504.  call temp:= `forName`(v3) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L50650a.  v8:= temp @kind object;
  #L50650c.  v3:= new `java.lang.StringBuilder`;
  #L506510.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L506516.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50651c.  v0:= "$ServerProvider" @kind object;
  #L506520.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L506526.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L50652c.  v0:= temp @kind object;
  #L50652e.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L506534.  v9:= temp @kind object;
  #L506536.  v0:= "put" @kind object;
  #L50653a.  v3:= 2I;
  #L50653c.  v3:= new `java.lang.Class`[v3];
  #L506540.  v4:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L506544.  v5:= 0I;
  #L506546.  v3[v5]:= v4 @kind object;
  #L50654a.  v4:= 1I;
  #L50654c.  v3[v4]:= v2 @kind object;
  #L506550.  call temp:= `getMethod`(v1, v0, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L506556.  v0:= temp @kind object;
  #L506558.  v2:= "get" @kind object;
  #L50655c.  v3:= new `java.lang.Class`[v4];
  #L506560.  v6:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L506564.  v3[v5]:= v6 @kind object;
  #L506568.  call temp:= `getMethod`(v1, v2, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L50656e.  v6:= temp @kind object;
  #L506570.  v2:= "remove" @kind object;
  #L506574.  v3:= new `java.lang.Class`[v4];
  #L506578.  v4:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L50657c.  v3[v5]:= v4 @kind object;
  #L506580.  call temp:= `getMethod`(v1, v2, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L506586.  v7:= temp @kind object;
  #L506588.  v1:= new `okhttp3.internal.platform.JdkWithJettyBootPlatform`;
  #L50658c.  v4:= v1 @kind object;
  #L50658e.  v5:= v0 @kind object;
  #L506590.  call `<init>`(v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L506596.  return v1 @kind object;
  #L506598.  v0:= 0I;
  #L50659a.  return v0 @kind object;
  catch `java.lang.ClassNotFoundException` @[L5064a8..L5064ac] goto L506598;
  catch `java.lang.NoSuchMethodException` @[L5064a8..L5064ac] goto L506598;
  catch `java.lang.ClassNotFoundException` @[L5064b0..L506596] goto L506598;
  catch `java.lang.NoSuchMethodException` @[L5064b0..L506596] goto L506598;
}
procedure `void` `afterHandshake`(`okhttp3.internal.platform.JdkWithJettyBootPlatform` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L5065f0.  v0:= v4.`okhttp3.internal.platform.JdkWithJettyBootPlatform.removeMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L5065f4.  v1:= 0I;
  #L5065f6.  v2:= 1I;
  #L5065f8.  v2:= new `java.lang.Object`[v2];
  #L5065fc.  v3:= 0I;
  #L5065fe.  v2[v3]:= v5 @kind object;
  #L506602.  call temp:= `invoke`(v0, v1, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L506608.  return @kind void;
  #L50660a.  v5:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L50660c.  goto L506610;
  #L50660e.  v5:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L506610.  v0:= "unable to remove alpn" @kind object;
  #L506614.  call temp:= `assertionError`(v0, v5) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L50661a.  v5:= temp @kind object;
  #L50661c.  throw v5;
  catch `java.lang.IllegalAccessException` @[L5065f0..L506608] goto L50660e;
  catch `java.lang.reflect.InvocationTargetException` @[L5065f0..L506608] goto L50660a;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.JdkWithJettyBootPlatform` v5 @kind this, `javax.net.ssl.SSLSocket` v6 @kind object, `java.lang.String` v7 @kind object, `java.util.List` v8 @kind object) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L506640.  call temp:= `alpnProtocolNames`(v8) @signature `Lokhttp3/internal/platform/Platform;.alpnProtocolNames:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L506646.  v7:= temp @kind object;
  #L506648.  v8:= constclass @type ^`okhttp3.internal.platform.Platform` @kind object;
  #L50664c.  call temp:= `getClassLoader`(v8) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L506652.  v8:= temp @kind object;
  #L506654.  v0:= 2I;
  #L506656.  v1:= new `java.lang.Class`[v0];
  #L50665a.  v2:= v5.`okhttp3.internal.platform.JdkWithJettyBootPlatform.clientProviderClass` @type ^`java.lang.Class` @kind object;
  #L50665e.  v3:= 0I;
  #L506660.  v1[v3]:= v2 @kind object;
  #L506664.  v2:= v5.`okhttp3.internal.platform.JdkWithJettyBootPlatform.serverProviderClass` @type ^`java.lang.Class` @kind object;
  #L506668.  v4:= 1I;
  #L50666a.  v1[v4]:= v2 @kind object;
  #L50666e.  v2:= new `okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider`;
  #L506672.  call `<init>`(v2, v7) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform$JettyNegoProvider;.<init>:(Ljava/util/List;)V` @kind direct;
  #L506678.  call temp:= `newProxyInstance`(v8, v1, v2) @signature `Ljava/lang/reflect/Proxy;.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;` @kind static;
  #L50667e.  v7:= temp @kind object;
  #L506680.  v8:= v5.`okhttp3.internal.platform.JdkWithJettyBootPlatform.putMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L506684.  v1:= 0I;
  #L506686.  v0:= new `java.lang.Object`[v0];
  #L50668a.  v0[v3]:= v6 @kind object;
  #L50668e.  v0[v4]:= v7 @kind object;
  #L506692.  call temp:= `invoke`(v8, v1, v0) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L506698.  return @kind void;
  #L50669a.  v6:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L50669c.  goto L5066a0;
  #L50669e.  v6:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L5066a0.  v7:= "unable to set alpn" @kind object;
  #L5066a4.  call temp:= `assertionError`(v7, v6) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L5066aa.  v6:= temp @kind object;
  #L5066ac.  throw v6;
  catch `java.lang.reflect.InvocationTargetException` @[L506648..L506698] goto L50669e;
  catch `java.lang.IllegalAccessException` @[L506648..L506698] goto L50669a;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.JdkWithJettyBootPlatform` v3 @kind this, `javax.net.ssl.SSLSocket` v4 @kind object) @signature `Lokhttp3/internal/platform/JdkWithJettyBootPlatform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L50641c.  v0:= v3.`okhttp3.internal.platform.JdkWithJettyBootPlatform.getMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L506420.  v1:= 1I;
  #L506422.  v1:= new `java.lang.Object`[v1];
  #L506426.  v2:= 0I;
  #L506428.  v1[v2]:= v4 @kind object;
  #L50642c.  v4:= 0I;
  #L50642e.  call temp:= `invoke`(v0, v4, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L506434.  v0:= temp @kind object;
  #L506436.  call temp:= `getInvocationHandler`(v0) @signature `Ljava/lang/reflect/Proxy;.getInvocationHandler:(Ljava/lang/Object;)Ljava/lang/reflect/InvocationHandler;` @kind static;
  #L50643c.  v0:= temp @kind object;
  #L50643e.  v0:= (`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider`) v0 @kind object;
  #L506442.  v1:= v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider.a` @type ^`boolean` @kind boolean;
  #L506446.  if v1 != 0 then goto L506468;
  #L50644a.  v2:= v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider.b` @type ^`java.lang.String` @kind object;
  #L50644e.  if v2 != 0 then goto L506468;
  #L506452.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L506458.  v0:= temp @kind object;
  #L50645a.  v1:= 4I;
  #L50645c.  v2:= "ALPN callback dropped: HTTP/2 is disabled. Is alpn-boot on the boot class path?" @kind object;
  #L506460.  call `log`(v0, v1, v2, v4) @signature `Lokhttp3/internal/platform/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L506466.  return v4 @kind object;
  #L506468.  if v1 == 0 then goto L50646e;
  #L50646c.  goto L506472;
  #L50646e.  v4:= v0.`okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider.b` @type ^`java.lang.String` @kind object;
  #L506472.  return v4 @kind object;
  #L506474.  v4:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L506476.  goto L50647a;
  #L506478.  v4:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L50647a.  v0:= "unable to get selected protocol" @kind object;
  #L50647e.  call temp:= `assertionError`(v0, v4) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L506484.  v4:= temp @kind object;
  #L506486.  throw v4;
  catch `java.lang.reflect.InvocationTargetException` @[L50641c..L506472] goto L506478;
  catch `java.lang.IllegalAccessException` @[L50641c..L506472] goto L506474;
}
