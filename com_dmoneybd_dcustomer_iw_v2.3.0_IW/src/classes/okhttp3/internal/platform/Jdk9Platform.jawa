record `okhttp3.internal.platform.Jdk9Platform` @kind class @AccessFlag FINAL extends `okhttp3.internal.platform.Platform` @kind class {
  `java.lang.reflect.Method` `okhttp3.internal.platform.Jdk9Platform.a` @AccessFlag FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.Jdk9Platform.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.platform.Jdk9Platform` v0 @kind this, `java.lang.reflect.Method` v1 @kind object, `java.lang.reflect.Method` v2 @kind object) @signature `Lokhttp3/internal/platform/Jdk9Platform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L506384.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/Platform;.<init>:()V` @kind direct;
  #L50638a.  v0.`okhttp3.internal.platform.Jdk9Platform.a` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L50638e.  v0.`okhttp3.internal.platform.Jdk9Platform.b` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L506392.  return @kind void;
}
procedure `okhttp3.internal.platform.Jdk9Platform` `buildIfSupported`() @signature `Lokhttp3/internal/platform/Jdk9Platform;.buildIfSupported:()Lokhttp3/internal/platform/Jdk9Platform;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L506320.  v0:= constclass @type ^`javax.net.ssl.SSLParameters` @kind object;
  #L506324.  v1:= "setApplicationProtocols" @kind object;
  #L506328.  v2:= 1I;
  #L50632a.  v2:= new `java.lang.Class`[v2];
  #L50632e.  v3:= constclass @type ^`java.lang.String`[] @kind object;
  #L506332.  v4:= 0I;
  #L506334.  v2[v4]:= v3 @kind object;
  #L506338.  call temp:= `getMethod`(v0, v1, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L50633e.  v0:= temp @kind object;
  #L506340.  v1:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L506344.  v2:= "getApplicationProtocol" @kind object;
  #L506348.  v3:= new `java.lang.Class`[v4];
  #L50634c.  call temp:= `getMethod`(v1, v2, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L506352.  v1:= temp @kind object;
  #L506354.  v2:= new `okhttp3.internal.platform.Jdk9Platform`;
  #L506358.  call `<init>`(v2, v0, v1) @signature `Lokhttp3/internal/platform/Jdk9Platform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @kind direct;
  #L50635e.  return v2 @kind object;
  #L506360.  v0:= 0I;
  #L506362.  return v0 @kind object;
  catch `java.lang.NoSuchMethodException` @[L506320..L50635e] goto L506360;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.platform.Jdk9Platform` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object, `java.lang.String` v6 @kind object, `java.util.List` v7 @kind object) @signature `Lokhttp3/internal/platform/Jdk9Platform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L5063a4.  call temp:= `getSSLParameters`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getSSLParameters:()Ljavax/net/ssl/SSLParameters;` @kind virtual;
  #L5063aa.  v6:= temp @kind object;
  #L5063ac.  call temp:= `alpnProtocolNames`(v7) @signature `Lokhttp3/internal/platform/Platform;.alpnProtocolNames:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L5063b2.  v7:= temp @kind object;
  #L5063b4.  v0:= v4.`okhttp3.internal.platform.Jdk9Platform.a` @type ^`java.lang.reflect.Method` @kind object;
  #L5063b8.  v1:= 1I;
  #L5063ba.  v1:= new `java.lang.Object`[v1];
  #L5063be.  v2:= 0I;
  #L5063c0.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L5063c6.  v3:= temp;
  #L5063c8.  v3:= new `java.lang.String`[v3];
  #L5063cc.  call temp:= `toArray`(v7, v3) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L5063d2.  v7:= temp @kind object;
  #L5063d4.  v1[v2]:= v7 @kind object;
  #L5063d8.  call temp:= `invoke`(v0, v6, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L5063de.  call `setSSLParameters`(v5, v6) @signature `Ljavax/net/ssl/SSLSocket;.setSSLParameters:(Ljavax/net/ssl/SSLParameters;)V` @kind virtual;
  #L5063e4.  return @kind void;
  #L5063e6.  v5:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L5063e8.  goto L5063ec;
  #L5063ea.  v5:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L5063ec.  v6:= "unable to set ssl parameters" @kind object;
  #L5063f0.  call temp:= `assertionError`(v6, v5) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L5063f6.  v5:= temp @kind object;
  #L5063f8.  throw v5;
  catch `java.lang.IllegalAccessException` @[L5063a4..L5063e4] goto L5063ea;
  catch `java.lang.reflect.InvocationTargetException` @[L5063a4..L5063e4] goto L5063e6;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.platform.Jdk9Platform` v2 @kind this, `javax.net.ssl.SSLSocket` v3 @kind object) @signature `Lokhttp3/internal/platform/Jdk9Platform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L506298.  v0:= v2.`okhttp3.internal.platform.Jdk9Platform.b` @type ^`java.lang.reflect.Method` @kind object;
  #L50629c.  v1:= 0I;
  #L50629e.  v1:= new `java.lang.Object`[v1];
  #L5062a2.  call temp:= `invoke`(v0, v3, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L5062a8.  v3:= temp @kind object;
  #L5062aa.  v3:= (`java.lang.String`) v3 @kind object;
  #L5062ae.  if v3 == 0 then goto L5062c6;
  #L5062b2.  v0:= "" @kind object;
  #L5062b6.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L5062bc.  v0:= temp;
  #L5062be.  if v0 == 0 then goto L5062c4;
  #L5062c2.  goto L5062c6;
  #L5062c4.  return v3 @kind object;
  #L5062c6.  v3:= 0I;
  #L5062c8.  return v3 @kind object;
  #L5062ca.  v3:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L5062cc.  goto L5062d0;
  #L5062ce.  v3:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L5062d0.  v0:= "unable to get selected protocols" @kind object;
  #L5062d4.  call temp:= `assertionError`(v0, v3) @signature `Lokhttp3/internal/Util;.assertionError:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L5062da.  v3:= temp @kind object;
  #L5062dc.  throw v3;
  catch `java.lang.IllegalAccessException` @[L506298..L5062be] goto L5062ce;
  catch `java.lang.reflect.InvocationTargetException` @[L506298..L5062be] goto L5062ca;
}
procedure `javax.net.ssl.X509TrustManager` `trustManager`(`okhttp3.internal.platform.Jdk9Platform` v1 @kind this, `javax.net.ssl.SSLSocketFactory` v2 @kind object) @signature `Lokhttp3/internal/platform/Jdk9Platform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L506300.  v2:= new `java.lang.UnsupportedOperationException`;
  #L506304.  v0:= "clientBuilder.sslSocketFactory(SSLSocketFactory) not supported on JDK 9+" @kind object;
  #L506308.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50630e.  throw v2;
}
