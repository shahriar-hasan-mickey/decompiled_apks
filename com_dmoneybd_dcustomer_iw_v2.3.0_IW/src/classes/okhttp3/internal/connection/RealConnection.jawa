record `okhttp3.internal.connection.RealConnection` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.http2.Http2Connection$Listener` @kind class, `okhttp3.Connection` @kind interface {
  `int` `okhttp3.internal.connection.RealConnection.allocationLimit` @AccessFlag PUBLIC;
  `java.util.List` `okhttp3.internal.connection.RealConnection.allocations` @AccessFlag PUBLIC_FINAL;
  `okhttp3.ConnectionPool` `okhttp3.internal.connection.RealConnection.connectionPool` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Handshake` `okhttp3.internal.connection.RealConnection.handshake` @AccessFlag PRIVATE;
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.connection.RealConnection.http2Connection` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.connection.RealConnection.idleAtNanos` @AccessFlag PUBLIC;
  `boolean` `okhttp3.internal.connection.RealConnection.noNewStreams` @AccessFlag PUBLIC;
  `okhttp3.Protocol` `okhttp3.internal.connection.RealConnection.protocol` @AccessFlag PRIVATE;
  `java.net.Socket` `okhttp3.internal.connection.RealConnection.rawSocket` @AccessFlag PRIVATE;
  `okhttp3.Route` `okhttp3.internal.connection.RealConnection.route` @AccessFlag PRIVATE_FINAL;
  `okio.BufferedSink` `okhttp3.internal.connection.RealConnection.sink` @AccessFlag PRIVATE;
  `java.net.Socket` `okhttp3.internal.connection.RealConnection.socket` @AccessFlag PRIVATE;
  `okio.BufferedSource` `okhttp3.internal.connection.RealConnection.source` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.RealConnection.successCount` @AccessFlag PUBLIC;
}
global `int` `@@okhttp3.internal.connection.RealConnection.MAX_TUNNEL_ATTEMPTS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.connection.RealConnection.NPE_THROW_WITH_NULL` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`okhttp3.internal.connection.RealConnection` v2 @kind this, `okhttp3.ConnectionPool` v3 @kind object, `okhttp3.Route` v4 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.<init>:(Lokhttp3/ConnectionPool;Lokhttp3/Route;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L5047b8.  call `<init>`(v2) @signature `Lokhttp3/internal/http2/Http2Connection$Listener;.<init>:()V` @kind direct;
  #L5047be.  v0:= 1I;
  #L5047c0.  v2.`okhttp3.internal.connection.RealConnection.allocationLimit` @type ^`int` := v0;
  #L5047c4.  v0:= new `java.util.ArrayList`;
  #L5047c8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L5047ce.  v2.`okhttp3.internal.connection.RealConnection.allocations` @type ^`java.util.List` := v0 @kind object;
  #L5047d2.  v0:= 9223372036854775807L;
  #L5047dc.  v2.`okhttp3.internal.connection.RealConnection.idleAtNanos` @type ^`long` := v0 @kind wide;
  #L5047e0.  v2.`okhttp3.internal.connection.RealConnection.connectionPool` @type ^`okhttp3.ConnectionPool` := v3 @kind object;
  #L5047e4.  v2.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` := v4 @kind object;
  #L5047e8.  return @kind void;
}
procedure `void` `connectSocket`(`okhttp3.internal.connection.RealConnection` v4 @kind this, `int` v5 , `int` v6 , `okhttp3.Call` v7 @kind object, `okhttp3.EventListener` v8 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.connectSocket:(IILokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L504b10.  v0:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L504b14.  call temp:= `proxy`(v0) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L504b1a.  v0:= temp @kind object;
  #L504b1c.  v1:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L504b20.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L504b26.  v1:= temp @kind object;
  #L504b28.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L504b2e.  v2:= temp @kind object;
  #L504b30.  v3:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L504b34.  if v2 == v3 then goto L504b56;
  #L504b38.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L504b3e.  v2:= temp @kind object;
  #L504b40.  v3:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L504b44.  if v2 != v3 then goto L504b4a;
  #L504b48.  goto L504b56;
  #L504b4a.  v1:= new `java.net.Socket`;
  #L504b4e.  call `<init>`(v1, v0) @signature `Ljava/net/Socket;.<init>:(Ljava/net/Proxy;)V` @kind direct;
  #L504b54.  goto L504b66;
  #L504b56.  call temp:= `socketFactory`(v1) @signature `Lokhttp3/Address;.socketFactory:()Ljavax/net/SocketFactory;` @kind virtual;
  #L504b5c.  v1:= temp @kind object;
  #L504b5e.  call temp:= `createSocket`(v1) @signature `Ljavax/net/SocketFactory;.createSocket:()Ljava/net/Socket;` @kind virtual;
  #L504b64.  v1:= temp @kind object;
  #L504b66.  v4.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` := v1 @kind object;
  #L504b6a.  v1:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L504b6e.  call temp:= `socketAddress`(v1) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L504b74.  v1:= temp @kind object;
  #L504b76.  call `connectStart`(v8, v7, v1, v0) @signature `Lokhttp3/EventListener;.connectStart:(Lokhttp3/Call;Ljava/net/InetSocketAddress;Ljava/net/Proxy;)V` @kind virtual;
  #L504b7c.  v7:= v4.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L504b80.  call `setSoTimeout`(v7, v6) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L504b86.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L504b8c.  v6:= temp @kind object;
  #L504b8e.  v7:= v4.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L504b92.  v8:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L504b96.  call temp:= `socketAddress`(v8) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L504b9c.  v8:= temp @kind object;
  #L504b9e.  call `connectSocket`(v6, v7, v8, v5) @signature `Lokhttp3/internal/platform/Platform;.connectSocket:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @kind virtual;
  #L504ba4.  v5:= v4.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L504ba8.  call temp:= `source`(v5) @signature `Lokio/Okio;.source:(Ljava/net/Socket;)Lokio/Source;` @kind static;
  #L504bae.  v5:= temp @kind object;
  #L504bb0.  call temp:= `buffer`(v5) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L504bb6.  v5:= temp @kind object;
  #L504bb8.  v4.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.BufferedSource` := v5 @kind object;
  #L504bbc.  v5:= v4.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L504bc0.  call temp:= `sink`(v5) @signature `Lokio/Okio;.sink:(Ljava/net/Socket;)Lokio/Sink;` @kind static;
  #L504bc6.  v5:= temp @kind object;
  #L504bc8.  call temp:= `buffer`(v5) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L504bce.  v5:= temp @kind object;
  #L504bd0.  v4.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.BufferedSink` := v5 @kind object;
  #L504bd4.  goto L504bf0;
  #L504bd6.  v5:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L504bd8.  call temp:= `getMessage`(v5) @signature `Ljava/lang/NullPointerException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L504bde.  v6:= temp @kind object;
  #L504be0.  v7:= "throw with null exception" @kind object;
  #L504be4.  call temp:= `equals`(v7, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L504bea.  v6:= temp;
  #L504bec.  if v6 != 0 then goto L504bf2;
  #L504bf0.  return @kind void;
  #L504bf2.  v6:= new `java.io.IOException`;
  #L504bf6.  call `<init>`(v6, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L504bfc.  throw v6;
  #L504bfe.  v5:= Exception @type ^`java.net.ConnectException` @kind object;
  #L504c00.  v6:= new `java.net.ConnectException`;
  #L504c04.  v7:= new `java.lang.StringBuilder`;
  #L504c08.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L504c0e.  v8:= "Failed to connect to " @kind object;
  #L504c12.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L504c18.  v8:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L504c1c.  call temp:= `socketAddress`(v8) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L504c22.  v8:= temp @kind object;
  #L504c24.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L504c2a.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L504c30.  v7:= temp @kind object;
  #L504c32.  call `<init>`(v6, v7) @signature `Ljava/net/ConnectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L504c38.  call temp:= `initCause`(v6, v5) @signature `Ljava/net/ConnectException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L504c3e.  throw v6;
  catch `java.net.ConnectException` @[L504b86..L504ba4] goto L504bfe;
  catch `java.lang.NullPointerException` @[L504ba4..L504bd4] goto L504bd6;
}
procedure `void` `connectTls`(`okhttp3.internal.connection.RealConnection` v7 @kind this, `okhttp3.internal.connection.ConnectionSpecSelector` v8 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.connectTls:(Lokhttp3/internal/connection/ConnectionSpecSelector;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L504c6c.  v0:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L504c70.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L504c76.  v0:= temp @kind object;
  #L504c78.  call temp:= `sslSocketFactory`(v0) @signature `Lokhttp3/Address;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L504c7e.  v1:= temp @kind object;
  #L504c80.  v2:= 0I;
  #L504c82.  v3:= v7.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L504c86.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L504c8c.  v4:= temp @kind object;
  #L504c8e.  call temp:= `host`(v4) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L504c94.  v4:= temp @kind object;
  #L504c96.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L504c9c.  v5:= temp @kind object;
  #L504c9e.  call temp:= `port`(v5) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L504ca4.  v5:= temp;
  #L504ca6.  v6:= 1I;
  #L504ca8.  call temp:= `createSocket`(v1, v3, v4, v5, v6) @signature `Ljavax/net/ssl/SSLSocketFactory;.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;` @kind virtual;
  #L504cae.  v1:= temp @kind object;
  #L504cb0.  v1:= (`javax.net.ssl.SSLSocket`) v1 @kind object;
  #L504cb4.  call temp:= `configureSecureSocket`(v8, v1) @signature `Lokhttp3/internal/connection/ConnectionSpecSelector;.configureSecureSocket:(Ljavax/net/ssl/SSLSocket;)Lokhttp3/ConnectionSpec;` @kind virtual;
  #L504cba.  v8:= temp @kind object;
  #L504cbc.  call temp:= `supportsTlsExtensions`(v8) @signature `Lokhttp3/ConnectionSpec;.supportsTlsExtensions:()Z` @kind virtual;
  #L504cc2.  v3:= temp;
  #L504cc4.  if v3 == 0 then goto L504cee;
  #L504cc8.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L504cce.  v3:= temp @kind object;
  #L504cd0.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L504cd6.  v4:= temp @kind object;
  #L504cd8.  call temp:= `host`(v4) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L504cde.  v4:= temp @kind object;
  #L504ce0.  call temp:= `protocols`(v0) @signature `Lokhttp3/Address;.protocols:()Ljava/util/List;` @kind virtual;
  #L504ce6.  v5:= temp @kind object;
  #L504ce8.  call `configureTlsExtensions`(v3, v1, v4, v5) @signature `Lokhttp3/internal/platform/Platform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L504cee.  call `startHandshake`(v1) @signature `Ljavax/net/ssl/SSLSocket;.startHandshake:()V` @kind virtual;
  #L504cf4.  call temp:= `getSession`(v1) @signature `Ljavax/net/ssl/SSLSocket;.getSession:()Ljavax/net/ssl/SSLSession;` @kind virtual;
  #L504cfa.  v3:= temp @kind object;
  #L504cfc.  call temp:= `get`(v3) @signature `Lokhttp3/Handshake;.get:(Ljavax/net/ssl/SSLSession;)Lokhttp3/Handshake;` @kind static;
  #L504d02.  v4:= temp @kind object;
  #L504d04.  call temp:= `hostnameVerifier`(v0) @signature `Lokhttp3/Address;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L504d0a.  v5:= temp @kind object;
  #L504d0c.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L504d12.  v6:= temp @kind object;
  #L504d14.  call temp:= `host`(v6) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L504d1a.  v6:= temp @kind object;
  #L504d1c.  call temp:= `verify`(v5, v6, v3) @signature `Ljavax/net/ssl/HostnameVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @kind interface;
  #L504d22.  v3:= temp;
  #L504d24.  if v3 == 0 then goto L504dc4;
  #L504d28.  call temp:= `certificatePinner`(v0) @signature `Lokhttp3/Address;.certificatePinner:()Lokhttp3/CertificatePinner;` @kind virtual;
  #L504d2e.  v3:= temp @kind object;
  #L504d30.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L504d36.  v0:= temp @kind object;
  #L504d38.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L504d3e.  v0:= temp @kind object;
  #L504d40.  call temp:= `peerCertificates`(v4) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L504d46.  v5:= temp @kind object;
  #L504d48.  call `check`(v3, v0, v5) @signature `Lokhttp3/CertificatePinner;.check:(Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L504d4e.  call temp:= `supportsTlsExtensions`(v8) @signature `Lokhttp3/ConnectionSpec;.supportsTlsExtensions:()Z` @kind virtual;
  #L504d54.  v8:= temp;
  #L504d56.  if v8 == 0 then goto L504d6a;
  #L504d5a.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L504d60.  v8:= temp @kind object;
  #L504d62.  call temp:= `getSelectedProtocol`(v8, v1) @signature `Lokhttp3/internal/platform/Platform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @kind virtual;
  #L504d68.  v2:= temp @kind object;
  #L504d6a.  v7.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` := v1 @kind object;
  #L504d6e.  call temp:= `source`(v1) @signature `Lokio/Okio;.source:(Ljava/net/Socket;)Lokio/Source;` @kind static;
  #L504d74.  v8:= temp @kind object;
  #L504d76.  call temp:= `buffer`(v8) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L504d7c.  v8:= temp @kind object;
  #L504d7e.  v7.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.BufferedSource` := v8 @kind object;
  #L504d82.  v8:= v7.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L504d86.  call temp:= `sink`(v8) @signature `Lokio/Okio;.sink:(Ljava/net/Socket;)Lokio/Sink;` @kind static;
  #L504d8c.  v8:= temp @kind object;
  #L504d8e.  call temp:= `buffer`(v8) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L504d94.  v8:= temp @kind object;
  #L504d96.  v7.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.BufferedSink` := v8 @kind object;
  #L504d9a.  v7.`okhttp3.internal.connection.RealConnection.handshake` @type ^`okhttp3.Handshake` := v4 @kind object;
  #L504d9e.  if v2 == 0 then goto L504dac;
  #L504da2.  call temp:= `get`(v2) @signature `Lokhttp3/Protocol;.get:(Ljava/lang/String;)Lokhttp3/Protocol;` @kind static;
  #L504da8.  v8:= temp @kind object;
  #L504daa.  goto L504db0;
  #L504dac.  v8:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L504db0.  v7.`okhttp3.internal.connection.RealConnection.protocol` @type ^`okhttp3.Protocol` := v8 @kind object;
  #L504db4.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L504dba.  v8:= temp @kind object;
  #L504dbc.  call `afterHandshake`(v8, v1) @signature `Lokhttp3/internal/platform/Platform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @kind virtual;
  #L504dc2.  return @kind void;
  #L504dc4.  call temp:= `peerCertificates`(v4) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L504dca.  v8:= temp @kind object;
  #L504dcc.  v2:= 0I;
  #L504dce.  call temp:= `get`(v8, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L504dd4.  v8:= temp @kind object;
  #L504dd6.  v8:= (`java.security.cert.X509Certificate`) v8 @kind object;
  #L504dda.  v2:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L504dde.  v3:= new `java.lang.StringBuilder`;
  #L504de2.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L504de8.  v4:= "Hostname " @kind object;
  #L504dec.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L504df2.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L504df8.  v0:= temp @kind object;
  #L504dfa.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L504e00.  v0:= temp @kind object;
  #L504e02.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L504e08.  v0:= " not verified:\n    certificate: " @kind object;
  #L504e0c.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L504e12.  call temp:= `pin`(v8) @signature `Lokhttp3/CertificatePinner;.pin:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @kind static;
  #L504e18.  v0:= temp @kind object;
  #L504e1a.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L504e20.  v0:= "\n    DN: " @kind object;
  #L504e24.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L504e2a.  call temp:= `getSubjectDN`(v8) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L504e30.  v0:= temp @kind object;
  #L504e32.  call temp:= `getName`(v0) @signature `Ljava/security/Principal;.getName:()Ljava/lang/String;` @kind interface;
  #L504e38.  v0:= temp @kind object;
  #L504e3a.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L504e40.  v0:= "\n    subjectAltNames: " @kind object;
  #L504e44.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L504e4a.  call temp:= `allSubjectAltNames`(v8) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.allSubjectAltNames:(Ljava/security/cert/X509Certificate;)Ljava/util/List;` @kind static;
  #L504e50.  v8:= temp @kind object;
  #L504e52.  call temp:= `append`(v3, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L504e58.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L504e5e.  v8:= temp @kind object;
  #L504e60.  call `<init>`(v2, v8) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L504e66.  throw v2;
  #L504e68.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L504e6a.  v2:= v1 @kind object;
  #L504e6c.  goto L504e94;
  #L504e6e.  v8:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L504e70.  v2:= v1 @kind object;
  #L504e72.  goto L504e7a;
  #L504e74.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L504e76.  goto L504e94;
  #L504e78.  v8:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L504e7a.  call temp:= `isAndroidGetsocknameError`(v8) @signature `Lokhttp3/internal/Util;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @kind static;
  #L504e80.  v0:= temp;
  #L504e82.  if v0 == 0 then goto L504e92;
  #L504e86.  v0:= new `java.io.IOException`;
  #L504e8a.  call `<init>`(v0, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L504e90.  throw v0;
  #L504e92.  throw v8;
  #L504e94.  if v2 == 0 then goto L504ea6;
  #L504e98.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L504e9e.  v0:= temp @kind object;
  #L504ea0.  call `afterHandshake`(v0, v2) @signature `Lokhttp3/internal/platform/Platform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @kind virtual;
  #L504ea6.  call `closeQuietly`(v2) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L504eac.  throw v8;
  catch `java.lang.AssertionError` @[L504c82..L504cb4] goto L504e78;
  catch `java.lang.Throwable` @[L504c82..L504cb4] goto L504e74;
  catch `java.lang.AssertionError` @[L504cb4..L504db4] goto L504e6e;
  catch `java.lang.Throwable` @[L504cb4..L504db4] goto L504e68;
  catch `java.lang.AssertionError` @[L504dc4..L504e68] goto L504e6e;
  catch `java.lang.Throwable` @[L504dc4..L504e68] goto L504e68;
  catch `java.lang.Throwable` @[L504e7a..L504e94] goto L504e74;
}
procedure `void` `connectTunnel`(`okhttp3.internal.connection.RealConnection` v6 @kind this, `int` v7 , `int` v8 , `int` v9 , `okhttp3.Call` v10 @kind object, `okhttp3.EventListener` v11 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.connectTunnel:(IIILokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L504ef4.  call temp:= `createTunnelRequest`(v6) @signature `Lokhttp3/internal/connection/RealConnection;.createTunnelRequest:()Lokhttp3/Request;` @kind direct;
  #L504efa.  v0:= temp @kind object;
  #L504efc.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L504f02.  v1:= temp @kind object;
  #L504f04.  v2:= 0I;
  #L504f06.  v3:= 21I;
  #L504f0a.  if v2 >= v3 then goto L504f5e;
  #L504f0e.  call `connectSocket`(v6, v7, v8, v10, v11) @signature `Lokhttp3/internal/connection/RealConnection;.connectSocket:(IILokhttp3/Call;Lokhttp3/EventListener;)V` @kind direct;
  #L504f14.  call temp:= `createTunnel`(v6, v8, v9, v0, v1) @signature `Lokhttp3/internal/connection/RealConnection;.createTunnel:(IILokhttp3/Request;Lokhttp3/HttpUrl;)Lokhttp3/Request;` @kind direct;
  #L504f1a.  v0:= temp @kind object;
  #L504f1c.  if v0 != 0 then goto L504f22;
  #L504f20.  goto L504f5e;
  #L504f22.  v3:= v6.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L504f26.  call `closeQuietly`(v3) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L504f2c.  v3:= 0I;
  #L504f2e.  v6.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` := v3 @kind object;
  #L504f32.  v6.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.BufferedSink` := v3 @kind object;
  #L504f36.  v6.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.BufferedSource` := v3 @kind object;
  #L504f3a.  v4:= v6.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L504f3e.  call temp:= `socketAddress`(v4) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L504f44.  v4:= temp @kind object;
  #L504f46.  v5:= v6.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L504f4a.  call temp:= `proxy`(v5) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L504f50.  v5:= temp @kind object;
  #L504f52.  call `connectEnd`(v11, v10, v4, v5, v3) @signature `Lokhttp3/EventListener;.connectEnd:(Lokhttp3/Call;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lokhttp3/Protocol;)V` @kind virtual;
  #L504f58.  v2:= v2 + 1;
  #L504f5c.  goto L504f06;
  #L504f5e.  return @kind void;
}
procedure `okhttp3.Request` `createTunnel`(`okhttp3.internal.connection.RealConnection` v8 @kind this, `int` v9 , `int` v10 , `okhttp3.Request` v11 @kind object, `okhttp3.HttpUrl` v12 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.createTunnel:(IILokhttp3/Request;Lokhttp3/HttpUrl;)Lokhttp3/Request;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L5043c4.  v0:= new `java.lang.StringBuilder`;
  #L5043c8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L5043ce.  v1:= "CONNECT " @kind object;
  #L5043d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5043d8.  v1:= 1I;
  #L5043da.  call temp:= `hostHeader`(v12, v1) @signature `Lokhttp3/internal/Util;.hostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;` @kind static;
  #L5043e0.  v12:= temp @kind object;
  #L5043e2.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5043e8.  v12:= " HTTP/1.1" @kind object;
  #L5043ec.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5043f2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L5043f8.  v12:= temp @kind object;
  #L5043fa.  v0:= new `okhttp3.internal.http1.Http1Codec`;
  #L5043fe.  v1:= v8.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.BufferedSource` @kind object;
  #L504402.  v2:= v8.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.BufferedSink` @kind object;
  #L504406.  v3:= 0I;
  #L504408.  call `<init>`(v0, v3, v3, v1, v2) @signature `Lokhttp3/internal/http1/Http1Codec;.<init>:(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/StreamAllocation;Lokio/BufferedSource;Lokio/BufferedSink;)V` @kind direct;
  #L50440e.  v1:= v8.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.BufferedSource` @kind object;
  #L504412.  call temp:= `timeout`(v1) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L504418.  v1:= temp @kind object;
  #L50441a.  v4:= (`long`) v9 @kind i2l;
  #L50441c.  v2:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L504420.  call temp:= `timeout`(v1, v4, v2) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L504426.  v1:= v8.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.BufferedSink` @kind object;
  #L50442a.  call temp:= `timeout`(v1) @signature `Lokio/Sink;.timeout:()Lokio/Timeout;` @kind interface;
  #L504430.  v1:= temp @kind object;
  #L504432.  v4:= (`long`) v10 @kind i2l;
  #L504434.  call temp:= `timeout`(v1, v4, v2) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L50443a.  call temp:= `headers`(v11) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L504440.  v1:= temp @kind object;
  #L504442.  call `writeRequest`(v0, v1, v12) @signature `Lokhttp3/internal/http1/Http1Codec;.writeRequest:(Lokhttp3/Headers;Ljava/lang/String;)V` @kind virtual;
  #L504448.  call `finishRequest`(v0) @signature `Lokhttp3/internal/http1/Http1Codec;.finishRequest:()V` @kind virtual;
  #L50444e.  v1:= 0I;
  #L504450.  call temp:= `readResponseHeaders`(v0, v1) @signature `Lokhttp3/internal/http1/Http1Codec;.readResponseHeaders:(Z)Lokhttp3/Response$Builder;` @kind virtual;
  #L504456.  v1:= temp @kind object;
  #L504458.  call temp:= `request`(v1, v11) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L50445e.  v11:= temp @kind object;
  #L504460.  call temp:= `build`(v11) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L504466.  v11:= temp @kind object;
  #L504468.  call temp:= `contentLength`(v11) @signature `Lokhttp3/internal/http/HttpHeaders;.contentLength:(Lokhttp3/Response;)J` @kind static;
  #L50446e.  v4:= temp @kind wide;
  #L504470.  v6:= -1L;
  #L504474.  v1:= lcmp(v4, v6);
  #L504478.  if v1 != 0 then goto L504480;
  #L50447c.  v4:= 0L;
  #L504480.  call temp:= `newFixedLengthSource`(v0, v4) @signature `Lokhttp3/internal/http1/Http1Codec;.newFixedLengthSource:(J)Lokio/Source;` @kind virtual;
  #L504486.  v0:= temp @kind object;
  #L504488.  v1:= 2147483647I;
  #L50448e.  call temp:= `skipAll`(v0, v1, v2) @signature `Lokhttp3/internal/Util;.skipAll:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L504494.  call `close`(v0) @signature `Lokio/Source;.close:()V` @kind interface;
  #L50449a.  call temp:= `code`(v11) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L5044a0.  v0:= temp;
  #L5044a2.  v1:= 200I;
  #L5044a6.  if v0 == v1 then goto L50453e;
  #L5044aa.  v1:= 407I;
  #L5044ae.  if v0 != v1 then goto L504508;
  #L5044b2.  v0:= v8.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L5044b6.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L5044bc.  v0:= temp @kind object;
  #L5044be.  call temp:= `proxyAuthenticator`(v0) @signature `Lokhttp3/Address;.proxyAuthenticator:()Lokhttp3/Authenticator;` @kind virtual;
  #L5044c4.  v0:= temp @kind object;
  #L5044c6.  v1:= v8.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L5044ca.  call temp:= `authenticate`(v0, v1, v11) @signature `Lokhttp3/Authenticator;.authenticate:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;` @kind interface;
  #L5044d0.  v0:= temp @kind object;
  #L5044d2.  if v0 == 0 then goto L5044f8;
  #L5044d6.  v1:= "Connection" @kind object;
  #L5044da.  call temp:= `header`(v11, v1) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L5044e0.  v11:= temp @kind object;
  #L5044e2.  v1:= "close" @kind object;
  #L5044e6.  call temp:= `equalsIgnoreCase`(v1, v11) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L5044ec.  v11:= temp;
  #L5044ee.  if v11 == 0 then goto L5044f4;
  #L5044f2.  return v0 @kind object;
  #L5044f4.  v11:= v0 @kind object;
  #L5044f6.  goto L5043fa;
  #L5044f8.  v9:= new `java.io.IOException`;
  #L5044fc.  v10:= "Failed to authenticate with proxy" @kind object;
  #L504500.  call `<init>`(v9, v10) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L504506.  throw v9;
  #L504508.  v9:= new `java.io.IOException`;
  #L50450c.  v10:= new `java.lang.StringBuilder`;
  #L504510.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L504516.  v12:= "Unexpected response code for CONNECT: " @kind object;
  #L50451a.  call temp:= `append`(v10, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L504520.  call temp:= `code`(v11) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L504526.  v11:= temp;
  #L504528.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L50452e.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L504534.  v10:= temp @kind object;
  #L504536.  call `<init>`(v9, v10) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50453c.  throw v9;
  #L50453e.  v9:= v8.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.BufferedSource` @kind object;
  #L504542.  call temp:= `buffer`(v9) @signature `Lokio/BufferedSource;.buffer:()Lokio/Buffer;` @kind interface;
  #L504548.  v9:= temp @kind object;
  #L50454a.  call temp:= `exhausted`(v9) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L504550.  v9:= temp;
  #L504552.  if v9 == 0 then goto L504570;
  #L504556.  v9:= v8.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.BufferedSink` @kind object;
  #L50455a.  call temp:= `buffer`(v9) @signature `Lokio/BufferedSink;.buffer:()Lokio/Buffer;` @kind interface;
  #L504560.  v9:= temp @kind object;
  #L504562.  call temp:= `exhausted`(v9) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L504568.  v9:= temp;
  #L50456a.  if v9 == 0 then goto L504570;
  #L50456e.  return v3 @kind object;
  #L504570.  v9:= new `java.io.IOException`;
  #L504574.  v10:= "TLS tunnel buffered too many bytes!" @kind object;
  #L504578.  call `<init>`(v9, v10) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50457e.  goto L504582;
  #L504580.  throw v9;
  #L504582.  goto L504580;
}
procedure `okhttp3.Request` `createTunnelRequest`(`okhttp3.internal.connection.RealConnection` v4 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.createTunnelRequest:()Lokhttp3/Request;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L504594.  v0:= new `okhttp3.Request$Builder`;
  #L504598.  call `<init>`(v0) @signature `Lokhttp3/Request$Builder;.<init>:()V` @kind direct;
  #L50459e.  v1:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L5045a2.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L5045a8.  v1:= temp @kind object;
  #L5045aa.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L5045b0.  v1:= temp @kind object;
  #L5045b2.  call temp:= `url`(v0, v1) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L5045b8.  v0:= temp @kind object;
  #L5045ba.  v1:= "CONNECT" @kind object;
  #L5045be.  v2:= 0I;
  #L5045c0.  call temp:= `method`(v0, v1, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L5045c6.  v0:= temp @kind object;
  #L5045c8.  v1:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L5045cc.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L5045d2.  v1:= temp @kind object;
  #L5045d4.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L5045da.  v1:= temp @kind object;
  #L5045dc.  v2:= 1I;
  #L5045de.  call temp:= `hostHeader`(v1, v2) @signature `Lokhttp3/internal/Util;.hostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;` @kind static;
  #L5045e4.  v1:= temp @kind object;
  #L5045e6.  v2:= "Host" @kind object;
  #L5045ea.  call temp:= `header`(v0, v2, v1) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L5045f0.  v0:= temp @kind object;
  #L5045f2.  v1:= "Proxy-Connection" @kind object;
  #L5045f6.  v2:= "Keep-Alive" @kind object;
  #L5045fa.  call temp:= `header`(v0, v1, v2) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L504600.  v0:= temp @kind object;
  #L504602.  call temp:= `userAgent`() @signature `Lokhttp3/internal/Version;.userAgent:()Ljava/lang/String;` @kind static;
  #L504608.  v1:= temp @kind object;
  #L50460a.  v2:= "User-Agent" @kind object;
  #L50460e.  call temp:= `header`(v0, v2, v1) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L504614.  v0:= temp @kind object;
  #L504616.  call temp:= `build`(v0) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L50461c.  v0:= temp @kind object;
  #L50461e.  v1:= new `okhttp3.Response$Builder`;
  #L504622.  call `<init>`(v1) @signature `Lokhttp3/Response$Builder;.<init>:()V` @kind direct;
  #L504628.  call temp:= `request`(v1, v0) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L50462e.  v1:= temp @kind object;
  #L504630.  v2:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L504634.  call temp:= `protocol`(v1, v2) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @kind virtual;
  #L50463a.  v1:= temp @kind object;
  #L50463c.  v2:= 407I;
  #L504640.  call temp:= `code`(v1, v2) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @kind virtual;
  #L504646.  v1:= temp @kind object;
  #L504648.  v2:= "Preemptive Authenticate" @kind object;
  #L50464c.  call temp:= `message`(v1, v2) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L504652.  v1:= temp @kind object;
  #L504654.  v2:= `@@okhttp3.internal.Util.EMPTY_RESPONSE` @type ^`okhttp3.ResponseBody` @kind object;
  #L504658.  call temp:= `body`(v1, v2) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L50465e.  v1:= temp @kind object;
  #L504660.  v2:= -1L;
  #L504664.  call temp:= `sentRequestAtMillis`(v1, v2) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L50466a.  v1:= temp @kind object;
  #L50466c.  call temp:= `receivedResponseAtMillis`(v1, v2) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L504672.  v1:= temp @kind object;
  #L504674.  v2:= "Proxy-Authenticate" @kind object;
  #L504678.  v3:= "OkHttp-Preemptive" @kind object;
  #L50467c.  call temp:= `header`(v1, v2, v3) @signature `Lokhttp3/Response$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L504682.  v1:= temp @kind object;
  #L504684.  call temp:= `build`(v1) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L50468a.  v1:= temp @kind object;
  #L50468c.  v2:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L504690.  call temp:= `address`(v2) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L504696.  v2:= temp @kind object;
  #L504698.  call temp:= `proxyAuthenticator`(v2) @signature `Lokhttp3/Address;.proxyAuthenticator:()Lokhttp3/Authenticator;` @kind virtual;
  #L50469e.  v2:= temp @kind object;
  #L5046a0.  v3:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L5046a4.  call temp:= `authenticate`(v2, v3, v1) @signature `Lokhttp3/Authenticator;.authenticate:(Lokhttp3/Route;Lokhttp3/Response;)Lokhttp3/Request;` @kind interface;
  #L5046aa.  v1:= temp @kind object;
  #L5046ac.  if v1 == 0 then goto L5046b2;
  #L5046b0.  v0:= v1 @kind object;
  #L5046b2.  return v0 @kind object;
}
procedure `void` `establishProtocol`(`okhttp3.internal.connection.RealConnection` v1 @kind this, `okhttp3.internal.connection.ConnectionSpecSelector` v2 @kind object, `int` v3 , `okhttp3.Call` v4 @kind object, `okhttp3.EventListener` v5 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.establishProtocol:(Lokhttp3/internal/connection/ConnectionSpecSelector;ILokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L504f70.  v0:= v1.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L504f74.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L504f7a.  v0:= temp @kind object;
  #L504f7c.  call temp:= `sslSocketFactory`(v0) @signature `Lokhttp3/Address;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L504f82.  v0:= temp @kind object;
  #L504f84.  if v0 != 0 then goto L504fd2;
  #L504f88.  v2:= v1.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L504f8c.  call temp:= `address`(v2) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L504f92.  v2:= temp @kind object;
  #L504f94.  call temp:= `protocols`(v2) @signature `Lokhttp3/Address;.protocols:()Ljava/util/List;` @kind virtual;
  #L504f9a.  v2:= temp @kind object;
  #L504f9c.  v4:= `@@okhttp3.Protocol.H2_PRIOR_KNOWLEDGE` @type ^`okhttp3.Protocol` @kind object;
  #L504fa0.  call temp:= `contains`(v2, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L504fa6.  v2:= temp;
  #L504fa8.  if v2 == 0 then goto L504fc0;
  #L504fac.  v2:= v1.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L504fb0.  v1.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` := v2 @kind object;
  #L504fb4.  v1.`okhttp3.internal.connection.RealConnection.protocol` @type ^`okhttp3.Protocol` := v4 @kind object;
  #L504fb8.  call `startHttp2`(v1, v3) @signature `Lokhttp3/internal/connection/RealConnection;.startHttp2:(I)V` @kind direct;
  #L504fbe.  return @kind void;
  #L504fc0.  v2:= v1.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L504fc4.  v1.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` := v2 @kind object;
  #L504fc8.  v2:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L504fcc.  v1.`okhttp3.internal.connection.RealConnection.protocol` @type ^`okhttp3.Protocol` := v2 @kind object;
  #L504fd0.  return @kind void;
  #L504fd2.  call `secureConnectStart`(v5, v4) @signature `Lokhttp3/EventListener;.secureConnectStart:(Lokhttp3/Call;)V` @kind virtual;
  #L504fd8.  call `connectTls`(v1, v2) @signature `Lokhttp3/internal/connection/RealConnection;.connectTls:(Lokhttp3/internal/connection/ConnectionSpecSelector;)V` @kind direct;
  #L504fde.  v2:= v1.`okhttp3.internal.connection.RealConnection.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L504fe2.  call `secureConnectEnd`(v5, v4, v2) @signature `Lokhttp3/EventListener;.secureConnectEnd:(Lokhttp3/Call;Lokhttp3/Handshake;)V` @kind virtual;
  #L504fe8.  v2:= v1.`okhttp3.internal.connection.RealConnection.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L504fec.  v4:= `@@okhttp3.Protocol.HTTP_2` @type ^`okhttp3.Protocol` @kind object;
  #L504ff0.  if v2 != v4 then goto L504ffa;
  #L504ff4.  call `startHttp2`(v1, v3) @signature `Lokhttp3/internal/connection/RealConnection;.startHttp2:(I)V` @kind direct;
  #L504ffa.  return @kind void;
}
procedure `void` `startHttp2`(`okhttp3.internal.connection.RealConnection` v5 @kind this, `int` v6 ) @signature `Lokhttp3/internal/connection/RealConnection;.startHttp2:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L505060.  v0:= v5.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L505064.  v1:= 0I;
  #L505066.  call `setSoTimeout`(v0, v1) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L50506c.  v0:= new `okhttp3.internal.http2.Http2Connection$Builder`;
  #L505070.  v1:= 1I;
  #L505072.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.<init>:(Z)V` @kind direct;
  #L505078.  v1:= v5.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L50507c.  v2:= v5.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L505080.  call temp:= `address`(v2) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L505086.  v2:= temp @kind object;
  #L505088.  call temp:= `url`(v2) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L50508e.  v2:= temp @kind object;
  #L505090.  call temp:= `host`(v2) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L505096.  v2:= temp @kind object;
  #L505098.  v3:= v5.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.BufferedSource` @kind object;
  #L50509c.  v4:= v5.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.BufferedSink` @kind object;
  #L5050a0.  call temp:= `socket`(v0, v1, v2, v3, v4) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.socket:(Ljava/net/Socket;Ljava/lang/String;Lokio/BufferedSource;Lokio/BufferedSink;)Lokhttp3/internal/http2/Http2Connection$Builder;` @kind virtual;
  #L5050a6.  v0:= temp @kind object;
  #L5050a8.  call temp:= `listener`(v0, v5) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.listener:(Lokhttp3/internal/http2/Http2Connection$Listener;)Lokhttp3/internal/http2/Http2Connection$Builder;` @kind virtual;
  #L5050ae.  v0:= temp @kind object;
  #L5050b0.  call temp:= `pingIntervalMillis`(v0, v6) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.pingIntervalMillis:(I)Lokhttp3/internal/http2/Http2Connection$Builder;` @kind virtual;
  #L5050b6.  v6:= temp @kind object;
  #L5050b8.  call temp:= `build`(v6) @signature `Lokhttp3/internal/http2/Http2Connection$Builder;.build:()Lokhttp3/internal/http2/Http2Connection;` @kind virtual;
  #L5050be.  v6:= temp @kind object;
  #L5050c0.  v5.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` := v6 @kind object;
  #L5050c4.  call `start`(v6) @signature `Lokhttp3/internal/http2/Http2Connection;.start:()V` @kind virtual;
  #L5050ca.  return @kind void;
}
procedure `okhttp3.internal.connection.RealConnection` `testConnection`(`okhttp3.ConnectionPool` v1 @kind object, `okhttp3.Route` v2 @kind object, `java.net.Socket` v3 @kind object, `long` v4 ) @signature `Lokhttp3/internal/connection/RealConnection;.testConnection:(Lokhttp3/ConnectionPool;Lokhttp3/Route;Ljava/net/Socket;J)Lokhttp3/internal/connection/RealConnection;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L5046dc.  v0:= new `okhttp3.internal.connection.RealConnection`;
  #L5046e0.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/connection/RealConnection;.<init>:(Lokhttp3/ConnectionPool;Lokhttp3/Route;)V` @kind direct;
  #L5046e6.  v0.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` := v3 @kind object;
  #L5046ea.  v0.`okhttp3.internal.connection.RealConnection.idleAtNanos` @type ^`long` := v4 @kind wide;
  #L5046ee.  return v0 @kind object;
}
procedure `void` `cancel`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5047fc.  v0:= v1.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L504800.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L504806.  return @kind void;
}
procedure `void` `connect`(`okhttp3.internal.connection.RealConnection` v16 @kind this, `int` v17 , `int` v18 , `int` v19 , `int` v20 , `boolean` v21 , `okhttp3.Call` v22 @kind object, `okhttp3.EventListener` v23 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.connect:(IIIIZLokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L504818.  v7:= v16 @kind object;
  #L50481c.  v8:= v22 @kind object;
  #L504820.  v9:= v23 @kind object;
  #L504824.  v0:= v7.`okhttp3.internal.connection.RealConnection.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L504828.  if v0 != 0 then goto L504ab8;
  #L50482c.  v0:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L504830.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L504836.  v0:= temp @kind object;
  #L504838.  call temp:= `connectionSpecs`(v0) @signature `Lokhttp3/Address;.connectionSpecs:()Ljava/util/List;` @kind virtual;
  #L50483e.  v0:= temp @kind object;
  #L504840.  v10:= new `okhttp3.internal.connection.ConnectionSpecSelector`;
  #L504844.  call `<init>`(v10, v0) @signature `Lokhttp3/internal/connection/ConnectionSpecSelector;.<init>:(Ljava/util/List;)V` @kind direct;
  #L50484a.  v1:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L50484e.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L504854.  v1:= temp @kind object;
  #L504856.  call temp:= `sslSocketFactory`(v1) @signature `Lokhttp3/Address;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L50485c.  v1:= temp @kind object;
  #L50485e.  if v1 != 0 then goto L504900;
  #L504862.  v1:= `@@okhttp3.ConnectionSpec.CLEARTEXT` @type ^`okhttp3.ConnectionSpec` @kind object;
  #L504866.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L50486c.  v0:= temp;
  #L50486e.  if v0 == 0 then goto L5048e6;
  #L504872.  v0:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L504876.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L50487c.  v0:= temp @kind object;
  #L50487e.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L504884.  v0:= temp @kind object;
  #L504886.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L50488c.  v0:= temp @kind object;
  #L50488e.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L504894.  v1:= temp @kind object;
  #L504896.  call temp:= `isCleartextTrafficPermitted`(v1, v0) @signature `Lokhttp3/internal/platform/Platform;.isCleartextTrafficPermitted:(Ljava/lang/String;)Z` @kind virtual;
  #L50489c.  v1:= temp;
  #L50489e.  if v1 == 0 then goto L5048a4;
  #L5048a2.  goto L504924;
  #L5048a4.  v1:= new `okhttp3.internal.connection.RouteException`;
  #L5048a8.  v2:= new `java.net.UnknownServiceException`;
  #L5048ac.  v3:= new `java.lang.StringBuilder`;
  #L5048b0.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L5048b6.  v4:= "CLEARTEXT communication to " @kind object;
  #L5048ba.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5048c0.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5048c6.  v0:= " not permitted by network security policy" @kind object;
  #L5048ca.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5048d0.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L5048d6.  v0:= temp @kind object;
  #L5048d8.  call `<init>`(v2, v0) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L5048de.  call `<init>`(v1, v2) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L5048e4.  throw v1;
  #L5048e6.  v0:= new `okhttp3.internal.connection.RouteException`;
  #L5048ea.  v1:= new `java.net.UnknownServiceException`;
  #L5048ee.  v2:= "CLEARTEXT communication not enabled for client" @kind object;
  #L5048f2.  call `<init>`(v1, v2) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L5048f8.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L5048fe.  throw v0;
  #L504900.  v0:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L504904.  call temp:= `address`(v0) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L50490a.  v0:= temp @kind object;
  #L50490c.  call temp:= `protocols`(v0) @signature `Lokhttp3/Address;.protocols:()Ljava/util/List;` @kind virtual;
  #L504912.  v0:= temp @kind object;
  #L504914.  v1:= `@@okhttp3.Protocol.H2_PRIOR_KNOWLEDGE` @type ^`okhttp3.Protocol` @kind object;
  #L504918.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L50491e.  v0:= temp;
  #L504920.  if v0 != 0 then goto L504a9e;
  #L504924.  v11:= 0I;
  #L504926.  v12:= v11 @kind object;
  #L504928.  v0:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L50492c.  call temp:= `requiresTunnel`(v0) @signature `Lokhttp3/Route;.requiresTunnel:()Z` @kind virtual;
  #L504932.  v0:= temp;
  #L504934.  if v0 == 0 then goto L50496a;
  #L504938.  v1:= v16 @kind object;
  #L50493c.  v2:= v17;
  #L504940.  v3:= v18;
  #L504944.  v4:= v19;
  #L504948.  v5:= v22 @kind object;
  #L50494c.  v6:= v23 @kind object;
  #L504950.  call `connectTunnel`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/connection/RealConnection;.connectTunnel:(IIILokhttp3/Call;Lokhttp3/EventListener;)V` @kind direct;
  #L504956.  v0:= v7.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L50495a.  if v0 != 0 then goto L504960;
  #L50495e.  goto L5049a4;
  #L504960.  v13:= v17;
  #L504964.  v14:= v18;
  #L504968.  goto L504978;
  #L50496a.  v13:= v17;
  #L50496e.  v14:= v18;
  #L504972.  call `connectSocket`(v7, v13, v14, v8, v9) @signature `Lokhttp3/internal/connection/RealConnection;.connectSocket:(IILokhttp3/Call;Lokhttp3/EventListener;)V` @kind direct;
  #L504978.  v15:= v20;
  #L50497c.  call `establishProtocol`(v7, v10, v15, v8, v9) @signature `Lokhttp3/internal/connection/RealConnection;.establishProtocol:(Lokhttp3/internal/connection/ConnectionSpecSelector;ILokhttp3/Call;Lokhttp3/EventListener;)V` @kind direct;
  #L504982.  v0:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L504986.  call temp:= `socketAddress`(v0) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L50498c.  v0:= temp @kind object;
  #L50498e.  v1:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L504992.  call temp:= `proxy`(v1) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L504998.  v1:= temp @kind object;
  #L50499a.  v2:= v7.`okhttp3.internal.connection.RealConnection.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L50499e.  call `connectEnd`(v9, v8, v0, v1, v2) @signature `Lokhttp3/EventListener;.connectEnd:(Lokhttp3/Call;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lokhttp3/Protocol;)V` @kind virtual;
  #L5049a4.  v0:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L5049a8.  call temp:= `requiresTunnel`(v0) @signature `Lokhttp3/Route;.requiresTunnel:()Z` @kind virtual;
  #L5049ae.  v0:= temp;
  #L5049b0.  if v0 == 0 then goto L5049d8;
  #L5049b4.  v0:= v7.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L5049b8.  if v0 == 0 then goto L5049be;
  #L5049bc.  goto L5049d8;
  #L5049be.  v0:= new `java.net.ProtocolException`;
  #L5049c2.  v1:= "Too many tunnel connections attempted: 21" @kind object;
  #L5049c6.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L5049cc.  v1:= new `okhttp3.internal.connection.RouteException`;
  #L5049d0.  call `<init>`(v1, v0) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L5049d6.  throw v1;
  #L5049d8.  v0:= v7.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L5049dc.  if v0 == 0 then goto L504a00;
  #L5049e0.  v1:= v7.`okhttp3.internal.connection.RealConnection.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L5049e4.  @monitorenter v1
  #L5049e6.  v0:= v7.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L5049ea.  call temp:= `maxConcurrentStreams`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.maxConcurrentStreams:()I` @kind virtual;
  #L5049f0.  v0:= temp;
  #L5049f2.  v7.`okhttp3.internal.connection.RealConnection.allocationLimit` @type ^`int` := v0;
  #L5049f6.  @monitorexit v1
  #L5049f8.  goto L504a00;
  #L5049fa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5049fc.  @monitorexit v1
  #L5049fe.  throw v0;
  #L504a00.  return @kind void;
  #L504a02.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L504a04.  goto L504a18;
  #L504a06.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L504a08.  goto L504a14;
  #L504a0a.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L504a0c.  v13:= v17;
  #L504a10.  v14:= v18;
  #L504a14.  v15:= v20;
  #L504a18.  v1:= v7.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L504a1c.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L504a22.  v1:= v7.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` @kind object;
  #L504a26.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/net/Socket;)V` @kind static;
  #L504a2c.  v7.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` := v11 @kind object;
  #L504a30.  v7.`okhttp3.internal.connection.RealConnection.rawSocket` @type ^`java.net.Socket` := v11 @kind object;
  #L504a34.  v7.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.BufferedSource` := v11 @kind object;
  #L504a38.  v7.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.BufferedSink` := v11 @kind object;
  #L504a3c.  v7.`okhttp3.internal.connection.RealConnection.handshake` @type ^`okhttp3.Handshake` := v11 @kind object;
  #L504a40.  v7.`okhttp3.internal.connection.RealConnection.protocol` @type ^`okhttp3.Protocol` := v11 @kind object;
  #L504a44.  v7.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` := v11 @kind object;
  #L504a48.  v1:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L504a4c.  call temp:= `socketAddress`(v1) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L504a52.  v3:= temp @kind object;
  #L504a54.  v1:= v7.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L504a58.  call temp:= `proxy`(v1) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L504a5e.  v4:= temp @kind object;
  #L504a60.  v5:= 0I;
  #L504a62.  v1:= v23 @kind object;
  #L504a66.  v2:= v22 @kind object;
  #L504a6a.  v6:= v0 @kind object;
  #L504a6c.  call `connectFailed`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/EventListener;.connectFailed:(Lokhttp3/Call;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lokhttp3/Protocol;Ljava/io/IOException;)V` @kind virtual;
  #L504a72.  if v12 != 0 then goto L504a82;
  #L504a76.  v12:= new `okhttp3.internal.connection.RouteException`;
  #L504a7a.  call `<init>`(v12, v0) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L504a80.  goto L504a88;
  #L504a82.  call `addConnectException`(v12, v0) @signature `Lokhttp3/internal/connection/RouteException;.addConnectException:(Ljava/io/IOException;)V` @kind virtual;
  #L504a88.  if v21 == 0 then goto L504a9c;
  #L504a8c.  call temp:= `connectionFailed`(v10, v0) @signature `Lokhttp3/internal/connection/ConnectionSpecSelector;.connectionFailed:(Ljava/io/IOException;)Z` @kind virtual;
  #L504a92.  v0:= temp;
  #L504a94.  if v0 == 0 then goto L504a9c;
  #L504a98.  goto L504928;
  #L504a9c.  throw v12;
  #L504a9e.  v0:= new `okhttp3.internal.connection.RouteException`;
  #L504aa2.  v1:= new `java.net.UnknownServiceException`;
  #L504aa6.  v2:= "H2_PRIOR_KNOWLEDGE cannot be used with HTTPS" @kind object;
  #L504aaa.  call `<init>`(v1, v2) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L504ab0.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/connection/RouteException;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L504ab6.  throw v0;
  #L504ab8.  v0:= new `java.lang.IllegalStateException`;
  #L504abc.  v1:= "already connected" @kind object;
  #L504ac0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L504ac6.  goto L504aca;
  #L504ac8.  throw v0;
  #L504aca.  goto L504ac8;
  catch `java.io.IOException` @[L504928..L50495a] goto L504a0a;
  catch `java.io.IOException` @[L504972..L504978] goto L504a06;
  catch `java.io.IOException` @[L50497c..L5049a4] goto L504a02;
  catch `java.lang.Throwable` @[L5049e6..L5049fe] goto L5049fa;
}
procedure `okhttp3.Handshake` `handshake`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.handshake:()Lokhttp3/Handshake;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L504394.  v0:= v1.`okhttp3.internal.connection.RealConnection.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L504398.  return v0 @kind object;
}
procedure `boolean` `isEligible`(`okhttp3.internal.connection.RealConnection` v4 @kind this, `okhttp3.Address` v5 @kind object, `okhttp3.Route` v6 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.isEligible:(Lokhttp3/Address;Lokhttp3/Route;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L503f78.  v0:= v4.`okhttp3.internal.connection.RealConnection.allocations` @type ^`java.util.List` @kind object;
  #L503f7c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L503f82.  v0:= temp;
  #L503f84.  v1:= v4.`okhttp3.internal.connection.RealConnection.allocationLimit` @type ^`int`;
  #L503f88.  v2:= 0I;
  #L503f8a.  if v0 >= v1 then goto L5040c2;
  #L503f8e.  v0:= v4.`okhttp3.internal.connection.RealConnection.noNewStreams` @type ^`boolean` @kind boolean;
  #L503f92.  if v0 == 0 then goto L503f9a;
  #L503f96.  goto L5040c2;
  #L503f9a.  v0:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L503f9e.  v1:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L503fa2.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L503fa8.  v1:= temp @kind object;
  #L503faa.  call temp:= `equalsNonHost`(v0, v1, v5) @signature `Lokhttp3/internal/Internal;.equalsNonHost:(Lokhttp3/Address;Lokhttp3/Address;)Z` @kind virtual;
  #L503fb0.  v0:= temp;
  #L503fb2.  if v0 != 0 then goto L503fb8;
  #L503fb6.  return v2;
  #L503fb8.  call temp:= `url`(v5) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L503fbe.  v0:= temp @kind object;
  #L503fc0.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L503fc6.  v0:= temp @kind object;
  #L503fc8.  call temp:= `route`(v4) @signature `Lokhttp3/internal/connection/RealConnection;.route:()Lokhttp3/Route;` @kind virtual;
  #L503fce.  v1:= temp @kind object;
  #L503fd0.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L503fd6.  v1:= temp @kind object;
  #L503fd8.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L503fde.  v1:= temp @kind object;
  #L503fe0.  call temp:= `host`(v1) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L503fe6.  v1:= temp @kind object;
  #L503fe8.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L503fee.  v0:= temp;
  #L503ff0.  v1:= 1I;
  #L503ff2.  if v0 == 0 then goto L503ff8;
  #L503ff6.  return v1;
  #L503ff8.  v0:= v4.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L503ffc.  if v0 != 0 then goto L504002;
  #L504000.  return v2;
  #L504002.  if v6 != 0 then goto L504008;
  #L504006.  return v2;
  #L504008.  call temp:= `proxy`(v6) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L50400e.  v0:= temp @kind object;
  #L504010.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L504016.  v0:= temp @kind object;
  #L504018.  v3:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L50401c.  if v0 == v3 then goto L504022;
  #L504020.  return v2;
  #L504022.  v0:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L504026.  call temp:= `proxy`(v0) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L50402c.  v0:= temp @kind object;
  #L50402e.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L504034.  v0:= temp @kind object;
  #L504036.  v3:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L50403a.  if v0 == v3 then goto L504040;
  #L50403e.  return v2;
  #L504040.  v0:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L504044.  call temp:= `socketAddress`(v0) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L50404a.  v0:= temp @kind object;
  #L50404c.  call temp:= `socketAddress`(v6) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L504052.  v3:= temp @kind object;
  #L504054.  call temp:= `equals`(v0, v3) @signature `Ljava/net/InetSocketAddress;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L50405a.  v0:= temp;
  #L50405c.  if v0 != 0 then goto L504062;
  #L504060.  return v2;
  #L504062.  call temp:= `address`(v6) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L504068.  v6:= temp @kind object;
  #L50406a.  call temp:= `hostnameVerifier`(v6) @signature `Lokhttp3/Address;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L504070.  v6:= temp @kind object;
  #L504072.  v0:= `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @type ^`okhttp3.internal.tls.OkHostnameVerifier` @kind object;
  #L504076.  if v6 == v0 then goto L50407c;
  #L50407a.  return v2;
  #L50407c.  call temp:= `url`(v5) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L504082.  v6:= temp @kind object;
  #L504084.  call temp:= `supportsUrl`(v4, v6) @signature `Lokhttp3/internal/connection/RealConnection;.supportsUrl:(Lokhttp3/HttpUrl;)Z` @kind virtual;
  #L50408a.  v6:= temp;
  #L50408c.  if v6 != 0 then goto L504092;
  #L504090.  return v2;
  #L504092.  call temp:= `certificatePinner`(v5) @signature `Lokhttp3/Address;.certificatePinner:()Lokhttp3/CertificatePinner;` @kind virtual;
  #L504098.  v6:= temp @kind object;
  #L50409a.  call temp:= `url`(v5) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L5040a0.  v5:= temp @kind object;
  #L5040a2.  call temp:= `host`(v5) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L5040a8.  v5:= temp @kind object;
  #L5040aa.  call temp:= `handshake`(v4) @signature `Lokhttp3/internal/connection/RealConnection;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L5040b0.  v0:= temp @kind object;
  #L5040b2.  call temp:= `peerCertificates`(v0) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L5040b8.  v0:= temp @kind object;
  #L5040ba.  call `check`(v6, v5, v0) @signature `Lokhttp3/CertificatePinner;.check:(Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L5040c0.  return v1;
  #L5040c2.  return v2;
  catch `javax.net.ssl.SSLPeerUnverifiedException` @[L504092..L5040c0] goto L5040c2;
}
procedure `boolean` `isHealthy`(`okhttp3.internal.connection.RealConnection` v4 @kind this, `boolean` v5 ) @signature `Lokhttp3/internal/connection/RealConnection;.isHealthy:(Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L5040e4.  v0:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L5040e8.  call temp:= `isClosed`(v0) @signature `Ljava/net/Socket;.isClosed:()Z` @kind virtual;
  #L5040ee.  v0:= temp;
  #L5040f0.  v1:= 0I;
  #L5040f2.  if v0 != 0 then goto L504182;
  #L5040f6.  v0:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L5040fa.  call temp:= `isInputShutdown`(v0) @signature `Ljava/net/Socket;.isInputShutdown:()Z` @kind virtual;
  #L504100.  v0:= temp;
  #L504102.  if v0 != 0 then goto L504182;
  #L504106.  v0:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L50410a.  call temp:= `isOutputShutdown`(v0) @signature `Ljava/net/Socket;.isOutputShutdown:()Z` @kind virtual;
  #L504110.  v0:= temp;
  #L504112.  if v0 == 0 then goto L504118;
  #L504116.  goto L504182;
  #L504118.  v0:= v4.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L50411c.  v2:= 1I;
  #L50411e.  if v0 == 0 then goto L50412e;
  #L504122.  call temp:= `isShutdown`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.isShutdown:()Z` @kind virtual;
  #L504128.  v5:= temp;
  #L50412a.  v5:= v5 ^~ v2 @kind int;
  #L50412c.  return v5;
  #L50412e.  if v5 == 0 then goto L504180;
  #L504132.  v5:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L504136.  call temp:= `getSoTimeout`(v5) @signature `Ljava/net/Socket;.getSoTimeout:()I` @kind virtual;
  #L50413c.  v5:= temp;
  #L50413e.  v0:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L504142.  call `setSoTimeout`(v0, v2) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L504148.  v0:= v4.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.BufferedSource` @kind object;
  #L50414c.  call temp:= `exhausted`(v0) @signature `Lokio/BufferedSource;.exhausted:()Z` @kind interface;
  #L504152.  v0:= temp;
  #L504154.  if v0 == 0 then goto L504164;
  #L504158.  v0:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L50415c.  call `setSoTimeout`(v0, v5) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L504162.  return v1;
  #L504164.  v0:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L504168.  call `setSoTimeout`(v0, v5) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L50416e.  return v2;
  #L504170.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L504172.  v3:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L504176.  call `setSoTimeout`(v3, v5) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L50417c.  throw v0;
  #L50417e.  return v1;
  #L504180.  return v2;
  #L504182.  return v1;
  catch `java.net.SocketTimeoutException` @[L504132..L50413e] goto L504180;
  catch `java.io.IOException` @[L504132..L50413e] goto L50417e;
  catch `java.lang.Throwable` @[L50413e..L504154] goto L504170;
  catch `java.net.SocketTimeoutException` @[L504158..L50417e] goto L504180;
  catch `java.io.IOException` @[L504158..L50417e] goto L50417e;
}
procedure `boolean` `isMultiplexed`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.isMultiplexed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5041b8.  v0:= v1.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L5041bc.  if v0 == 0 then goto L5041c4;
  #L5041c0.  v0:= 1I;
  #L5041c2.  goto L5041c6;
  #L5041c4.  v0:= 0I;
  #L5041c6.  return v0;
}
procedure `okhttp3.internal.http.HttpCodec` `newCodec`(`okhttp3.internal.connection.RealConnection` v4 @kind this, `okhttp3.OkHttpClient` v5 @kind object, `okhttp3.Interceptor$Chain` v6 @kind object, `okhttp3.internal.connection.StreamAllocation` v7 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.newCodec:(Lokhttp3/OkHttpClient;Lokhttp3/Interceptor$Chain;Lokhttp3/internal/connection/StreamAllocation;)Lokhttp3/internal/http/HttpCodec;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L504700.  v0:= v4.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L504704.  if v0 == 0 then goto L504718;
  #L504708.  v0:= new `okhttp3.internal.http2.Http2Codec`;
  #L50470c.  v1:= v4.`okhttp3.internal.connection.RealConnection.http2Connection` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L504710.  call `<init>`(v0, v5, v6, v7, v1) @signature `Lokhttp3/internal/http2/Http2Codec;.<init>:(Lokhttp3/OkHttpClient;Lokhttp3/Interceptor$Chain;Lokhttp3/internal/connection/StreamAllocation;Lokhttp3/internal/http2/Http2Connection;)V` @kind direct;
  #L504716.  return v0 @kind object;
  #L504718.  v0:= v4.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L50471c.  call temp:= `readTimeoutMillis`(v6) @signature `Lokhttp3/Interceptor$Chain;.readTimeoutMillis:()I` @kind interface;
  #L504722.  v1:= temp;
  #L504724.  call `setSoTimeout`(v0, v1) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L50472a.  v0:= v4.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.BufferedSource` @kind object;
  #L50472e.  call temp:= `timeout`(v0) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L504734.  v0:= temp @kind object;
  #L504736.  call temp:= `readTimeoutMillis`(v6) @signature `Lokhttp3/Interceptor$Chain;.readTimeoutMillis:()I` @kind interface;
  #L50473c.  v1:= temp;
  #L50473e.  v1:= (`long`) v1 @kind i2l;
  #L504740.  v3:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L504744.  call temp:= `timeout`(v0, v1, v3) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L50474a.  v0:= v4.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.BufferedSink` @kind object;
  #L50474e.  call temp:= `timeout`(v0) @signature `Lokio/Sink;.timeout:()Lokio/Timeout;` @kind interface;
  #L504754.  v0:= temp @kind object;
  #L504756.  call temp:= `writeTimeoutMillis`(v6) @signature `Lokhttp3/Interceptor$Chain;.writeTimeoutMillis:()I` @kind interface;
  #L50475c.  v6:= temp;
  #L50475e.  v1:= (`long`) v6 @kind i2l;
  #L504760.  call temp:= `timeout`(v0, v1, v3) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L504766.  v6:= new `okhttp3.internal.http1.Http1Codec`;
  #L50476a.  v0:= v4.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.BufferedSource` @kind object;
  #L50476e.  v1:= v4.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.BufferedSink` @kind object;
  #L504772.  call `<init>`(v6, v5, v7, v0, v1) @signature `Lokhttp3/internal/http1/Http1Codec;.<init>:(Lokhttp3/OkHttpClient;Lokhttp3/internal/connection/StreamAllocation;Lokio/BufferedSource;Lokio/BufferedSink;)V` @kind direct;
  #L504778.  return v6 @kind object;
}
procedure `okhttp3.internal.ws.RealWebSocket$Streams` `newWebSocketStreams`(`okhttp3.internal.connection.RealConnection` v7 @kind this, `okhttp3.internal.connection.StreamAllocation` v8 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.newWebSocketStreams:(Lokhttp3/internal/connection/StreamAllocation;)Lokhttp3/internal/ws/RealWebSocket$Streams;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L50478c.  v6:= new `okhttp3.internal.connection.RealConnection$1`;
  #L504790.  v3:= v7.`okhttp3.internal.connection.RealConnection.source` @type ^`okio.BufferedSource` @kind object;
  #L504794.  v4:= v7.`okhttp3.internal.connection.RealConnection.sink` @type ^`okio.BufferedSink` @kind object;
  #L504798.  v2:= 1I;
  #L50479a.  v0:= v6 @kind object;
  #L50479c.  v1:= v7 @kind object;
  #L50479e.  v5:= v8 @kind object;
  #L5047a0.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/internal/connection/RealConnection$1;.<init>:(Lokhttp3/internal/connection/RealConnection;ZLokio/BufferedSource;Lokio/BufferedSink;Lokhttp3/internal/connection/StreamAllocation;)V` @kind direct;
  #L5047a6.  return v6 @kind object;
}
procedure `void` `onSettings`(`okhttp3.internal.connection.RealConnection` v1 @kind this, `okhttp3.internal.http2.Http2Connection` v2 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.onSettings:(Lokhttp3/internal/http2/Http2Connection;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50500c.  v0:= v1.`okhttp3.internal.connection.RealConnection.connectionPool` @type ^`okhttp3.ConnectionPool` @kind object;
  #L505010.  @monitorenter v0
  #L505012.  call temp:= `maxConcurrentStreams`(v2) @signature `Lokhttp3/internal/http2/Http2Connection;.maxConcurrentStreams:()I` @kind virtual;
  #L505018.  v2:= temp;
  #L50501a.  v1.`okhttp3.internal.connection.RealConnection.allocationLimit` @type ^`int` := v2;
  #L50501e.  @monitorexit v0
  #L505020.  return @kind void;
  #L505022.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L505024.  @monitorexit v0
  #L505026.  throw v2;
  catch `java.lang.Throwable` @[L505012..L505026] goto L505022;
}
procedure `void` `onStream`(`okhttp3.internal.connection.RealConnection` v1 @kind this, `okhttp3.internal.http2.Http2Stream` v2 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.onStream:(Lokhttp3/internal/http2/Http2Stream;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L505044.  v0:= `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L505048.  call `close`(v2, v0) @signature `Lokhttp3/internal/http2/Http2Stream;.close:(Lokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L50504e.  return @kind void;
}
procedure `okhttp3.Protocol` `protocol`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.protocol:()Lokhttp3/Protocol;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5043ac.  v0:= v1.`okhttp3.internal.connection.RealConnection.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L5043b0.  return v0 @kind object;
}
procedure `okhttp3.Route` `route`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.route:()Lokhttp3/Route;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5046c4.  v0:= v1.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L5046c8.  return v0 @kind object;
}
procedure `java.net.Socket` `socket`(`okhttp3.internal.connection.RealConnection` v1 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.socket:()Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50437c.  v0:= v1.`okhttp3.internal.connection.RealConnection.socket` @type ^`java.net.Socket` @kind object;
  #L504380.  return v0 @kind object;
}
procedure `boolean` `supportsUrl`(`okhttp3.internal.connection.RealConnection` v4 @kind this, `okhttp3.HttpUrl` v5 @kind object) @signature `Lokhttp3/internal/connection/RealConnection;.supportsUrl:(Lokhttp3/HttpUrl;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L5041d8.  call temp:= `port`(v5) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L5041de.  v0:= temp;
  #L5041e0.  v1:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L5041e4.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L5041ea.  v1:= temp @kind object;
  #L5041ec.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L5041f2.  v1:= temp @kind object;
  #L5041f4.  call temp:= `port`(v1) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L5041fa.  v1:= temp;
  #L5041fc.  v2:= 0I;
  #L5041fe.  if v0 == v1 then goto L504204;
  #L504202.  return v2;
  #L504204.  call temp:= `host`(v5) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L50420a.  v0:= temp @kind object;
  #L50420c.  v1:= v4.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L504210.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L504216.  v1:= temp @kind object;
  #L504218.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L50421e.  v1:= temp @kind object;
  #L504220.  call temp:= `host`(v1) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L504226.  v1:= temp @kind object;
  #L504228.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L50422e.  v0:= temp;
  #L504230.  v1:= 1I;
  #L504232.  if v0 != 0 then goto L504272;
  #L504236.  v0:= v4.`okhttp3.internal.connection.RealConnection.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L50423a.  if v0 == 0 then goto L504270;
  #L50423e.  v0:= `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @type ^`okhttp3.internal.tls.OkHostnameVerifier` @kind object;
  #L504242.  call temp:= `host`(v5) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L504248.  v5:= temp @kind object;
  #L50424a.  v3:= v4.`okhttp3.internal.connection.RealConnection.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L50424e.  call temp:= `peerCertificates`(v3) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L504254.  v3:= temp @kind object;
  #L504256.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L50425c.  v3:= temp @kind object;
  #L50425e.  v3:= (`java.security.cert.X509Certificate`) v3 @kind object;
  #L504262.  call temp:= `verify`(v0, v5, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind virtual;
  #L504268.  v5:= temp;
  #L50426a.  if v5 == 0 then goto L504270;
  #L50426e.  v2:= 1I;
  #L504270.  return v2;
  #L504272.  return v1;
}
procedure `java.lang.String` `toString`(`okhttp3.internal.connection.RealConnection` v2 @kind this) @signature `Lokhttp3/internal/connection/RealConnection;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L504284.  v0:= new `java.lang.StringBuilder`;
  #L504288.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L50428e.  v1:= "Connection{" @kind object;
  #L504292.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L504298.  v1:= v2.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L50429c.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L5042a2.  v1:= temp @kind object;
  #L5042a4.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L5042aa.  v1:= temp @kind object;
  #L5042ac.  call temp:= `host`(v1) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L5042b2.  v1:= temp @kind object;
  #L5042b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5042ba.  v1:= ":" @kind object;
  #L5042be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5042c4.  v1:= v2.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L5042c8.  call temp:= `address`(v1) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L5042ce.  v1:= temp @kind object;
  #L5042d0.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L5042d6.  v1:= temp @kind object;
  #L5042d8.  call temp:= `port`(v1) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L5042de.  v1:= temp;
  #L5042e0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L5042e6.  v1:= ", proxy=" @kind object;
  #L5042ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5042f0.  v1:= v2.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L5042f4.  call temp:= `proxy`(v1) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L5042fa.  v1:= temp @kind object;
  #L5042fc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L504302.  v1:= " hostAddress=" @kind object;
  #L504306.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50430c.  v1:= v2.`okhttp3.internal.connection.RealConnection.route` @type ^`okhttp3.Route` @kind object;
  #L504310.  call temp:= `socketAddress`(v1) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L504316.  v1:= temp @kind object;
  #L504318.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50431e.  v1:= " cipherSuite=" @kind object;
  #L504322.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L504328.  v1:= v2.`okhttp3.internal.connection.RealConnection.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L50432c.  if v1 == 0 then goto L50433a;
  #L504330.  call temp:= `cipherSuite`(v1) @signature `Lokhttp3/Handshake;.cipherSuite:()Lokhttp3/CipherSuite;` @kind virtual;
  #L504336.  v1:= temp @kind object;
  #L504338.  goto L50433e;
  #L50433a.  v1:= "none" @kind object;
  #L50433e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L504344.  v1:= " protocol=" @kind object;
  #L504348.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50434e.  v1:= v2.`okhttp3.internal.connection.RealConnection.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L504352.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L504358.  v1:= 125I;
  #L50435c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L504362.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L504368.  v0:= temp @kind object;
  #L50436a.  return v0 @kind object;
}
