record `okhttp3.MultipartBody$Part` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.Headers` `okhttp3.MultipartBody$Part.a` @AccessFlag FINAL;
  `okhttp3.RequestBody` `okhttp3.MultipartBody$Part.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.MultipartBody$Part` v0 @kind this, `okhttp3.Headers` v1 @kind object, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/MultipartBody$Part;.<init>:(Lokhttp3/Headers;Lokhttp3/RequestBody;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4fe8a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fe8aa.  v0.`okhttp3.MultipartBody$Part.a` @type ^`okhttp3.Headers` := v1 @kind object;
  #L4fe8ae.  v0.`okhttp3.MultipartBody$Part.b` @type ^`okhttp3.RequestBody` := v2 @kind object;
  #L4fe8b2.  return @kind void;
}
procedure `okhttp3.MultipartBody$Part` `create`(`okhttp3.Headers` v1 @kind object, `okhttp3.RequestBody` v2 @kind object) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4fe754.  if v2 == 0 then goto L4fe7b0;
  #L4fe758.  if v1 == 0 then goto L4fe77e;
  #L4fe75c.  v0:= "Content-Type" @kind object;
  #L4fe760.  call temp:= `get`(v1, v0) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4fe766.  v0:= temp @kind object;
  #L4fe768.  if v0 != 0 then goto L4fe76e;
  #L4fe76c.  goto L4fe77e;
  #L4fe76e.  v1:= new `java.lang.IllegalArgumentException`;
  #L4fe772.  v2:= "Unexpected header: Content-Type" @kind object;
  #L4fe776.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fe77c.  throw v1;
  #L4fe77e.  if v1 == 0 then goto L4fe7a4;
  #L4fe782.  v0:= "Content-Length" @kind object;
  #L4fe786.  call temp:= `get`(v1, v0) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4fe78c.  v0:= temp @kind object;
  #L4fe78e.  if v0 != 0 then goto L4fe794;
  #L4fe792.  goto L4fe7a4;
  #L4fe794.  v1:= new `java.lang.IllegalArgumentException`;
  #L4fe798.  v2:= "Unexpected header: Content-Length" @kind object;
  #L4fe79c.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fe7a2.  throw v1;
  #L4fe7a4.  v0:= new `okhttp3.MultipartBody$Part`;
  #L4fe7a8.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/MultipartBody$Part;.<init>:(Lokhttp3/Headers;Lokhttp3/RequestBody;)V` @kind direct;
  #L4fe7ae.  return v0 @kind object;
  #L4fe7b0.  v1:= new `java.lang.NullPointerException`;
  #L4fe7b4.  v2:= "body == null" @kind object;
  #L4fe7b8.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fe7be.  throw v1;
}
procedure `okhttp3.MultipartBody$Part` `create`(`okhttp3.RequestBody` v1 @kind object) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4fe7d0.  v0:= 0I;
  #L4fe7d2.  call temp:= `create`(v0, v1) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L4fe7d8.  v1:= temp @kind object;
  #L4fe7da.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `createFormData`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4fe7ec.  v0:= 0I;
  #L4fe7ee.  call temp:= `create`(v0, v2) @signature `Lokhttp3/RequestBody;.create:(Lokhttp3/MediaType;Ljava/lang/String;)Lokhttp3/RequestBody;` @kind static;
  #L4fe7f4.  v2:= temp @kind object;
  #L4fe7f6.  call temp:= `createFormData`(v1, v0, v2) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L4fe7fc.  v1:= temp @kind object;
  #L4fe7fe.  return v1 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `createFormData`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `okhttp3.RequestBody` v4 @kind object) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4fe810.  if v2 == 0 then goto L4fe86c;
  #L4fe814.  v0:= new `java.lang.StringBuilder`;
  #L4fe818.  v1:= "form-data; name=" @kind object;
  #L4fe81c.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fe822.  call temp:= `a`(v0, v2) @signature `Lokhttp3/MultipartBody;.a:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind static;
  #L4fe828.  if v3 == 0 then goto L4fe83c;
  #L4fe82c.  v2:= "; filename=" @kind object;
  #L4fe830.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe836.  call temp:= `a`(v0, v3) @signature `Lokhttp3/MultipartBody;.a:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind static;
  #L4fe83c.  v2:= 2I;
  #L4fe83e.  v2:= new `java.lang.String`[v2];
  #L4fe842.  v3:= 0I;
  #L4fe844.  v1:= "Content-Disposition" @kind object;
  #L4fe848.  v2[v3]:= v1 @kind object;
  #L4fe84c.  v3:= 1I;
  #L4fe84e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fe854.  v0:= temp @kind object;
  #L4fe856.  v2[v3]:= v0 @kind object;
  #L4fe85a.  call temp:= `of`(v2) @signature `Lokhttp3/Headers;.of:([Ljava/lang/String;)Lokhttp3/Headers;` @kind static;
  #L4fe860.  v2:= temp @kind object;
  #L4fe862.  call temp:= `create`(v2, v4) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L4fe868.  v2:= temp @kind object;
  #L4fe86a.  return v2 @kind object;
  #L4fe86c.  v2:= new `java.lang.NullPointerException`;
  #L4fe870.  v3:= "name == null" @kind object;
  #L4fe874.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fe87a.  throw v2;
}
procedure `okhttp3.RequestBody` `body`(`okhttp3.MultipartBody$Part` v1 @kind this) @signature `Lokhttp3/MultipartBody$Part;.body:()Lokhttp3/RequestBody;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fe88c.  v0:= v1.`okhttp3.MultipartBody$Part.b` @type ^`okhttp3.RequestBody` @kind object;
  #L4fe890.  return v0 @kind object;
}
procedure `okhttp3.Headers` `headers`(`okhttp3.MultipartBody$Part` v1 @kind this) @signature `Lokhttp3/MultipartBody$Part;.headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fe73c.  v0:= v1.`okhttp3.MultipartBody$Part.a` @type ^`okhttp3.Headers` @kind object;
  #L4fe740.  return v0 @kind object;
}
