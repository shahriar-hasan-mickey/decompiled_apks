record `okhttp3.ConnectionSpec` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `okhttp3.ConnectionSpec.a` @AccessFlag FINAL;
  `boolean` `okhttp3.ConnectionSpec.b` @AccessFlag FINAL;
  `java.lang.String`[] `okhttp3.ConnectionSpec.c` @AccessFlag FINAL;
  `java.lang.String`[] `okhttp3.ConnectionSpec.d` @AccessFlag FINAL;
}
global `okhttp3.CipherSuite`[] `@@okhttp3.ConnectionSpec.APPROVED_CIPHER_SUITES` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.ConnectionSpec` `@@okhttp3.ConnectionSpec.CLEARTEXT` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.ConnectionSpec` `@@okhttp3.ConnectionSpec.COMPATIBLE_TLS` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.ConnectionSpec` `@@okhttp3.ConnectionSpec.MODERN_TLS` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.CipherSuite`[] `@@okhttp3.ConnectionSpec.RESTRICTED_CIPHER_SUITES` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.ConnectionSpec` `@@okhttp3.ConnectionSpec.RESTRICTED_TLS` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/ConnectionSpec;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;

  #L4f98e4.  v0:= 11I;
  #L4f98e8.  v1:= new `okhttp3.CipherSuite`[v0];
  #L4f98ec.  v2:= `@@okhttp3.CipherSuite.TLS_AES_128_GCM_SHA256` @type ^`okhttp3.CipherSuite` @kind object;
  #L4f98f0.  v3:= 0I;
  #L4f98f2.  v1[v3]:= v2 @kind object;
  #L4f98f6.  v4:= `@@okhttp3.CipherSuite.TLS_AES_256_GCM_SHA384` @type ^`okhttp3.CipherSuite` @kind object;
  #L4f98fa.  v5:= 1I;
  #L4f98fc.  v1[v5]:= v4 @kind object;
  #L4f9900.  v6:= `@@okhttp3.CipherSuite.TLS_CHACHA20_POLY1305_SHA256` @type ^`okhttp3.CipherSuite` @kind object;
  #L4f9904.  v7:= 2I;
  #L4f9906.  v1[v7]:= v6 @kind object;
  #L4f990a.  v8:= `@@okhttp3.CipherSuite.TLS_AES_128_CCM_SHA256` @type ^`okhttp3.CipherSuite` @kind object;
  #L4f990e.  v9:= 3I;
  #L4f9910.  v1[v9]:= v8 @kind object;
  #L4f9914.  v10:= `@@okhttp3.CipherSuite.TLS_AES_256_CCM_8_SHA256` @type ^`okhttp3.CipherSuite` @kind object;
  #L4f9918.  v11:= 4I;
  #L4f991a.  v1[v11]:= v10 @kind object;
  #L4f991e.  v12:= `@@okhttp3.CipherSuite.TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256` @type ^`okhttp3.CipherSuite` @kind object;
  #L4f9922.  v13:= 5I;
  #L4f9924.  v1[v13]:= v12 @kind object;
  #L4f9928.  v14:= `@@okhttp3.CipherSuite.TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256` @type ^`okhttp3.CipherSuite` @kind object;
  #L4f992c.  v15:= 6I;
  #L4f992e.  v1[v15]:= v14 @kind object;
  #L4f9932.  v16:= `@@okhttp3.CipherSuite.TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384` @type ^`okhttp3.CipherSuite` @kind object;
  #L4f9936.  v17:= 7I;
  #L4f993a.  v1[v17]:= v16 @kind object;
  #L4f993e.  v18:= `@@okhttp3.CipherSuite.TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384` @type ^`okhttp3.CipherSuite` @kind object;
  #L4f9942.  v19:= 8I;
  #L4f9946.  v1[v19]:= v18 @kind object;
  #L4f994a.  v20:= `@@okhttp3.CipherSuite.TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256` @type ^`okhttp3.CipherSuite` @kind object;
  #L4f994e.  v21:= 9I;
  #L4f9952.  v1[v21]:= v20 @kind object;
  #L4f9956.  v22:= `@@okhttp3.CipherSuite.TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256` @type ^`okhttp3.CipherSuite` @kind object;
  #L4f995a.  v23:= 10I;
  #L4f995e.  v1[v23]:= v22 @kind object;
  #L4f9962.  `@@okhttp3.ConnectionSpec.RESTRICTED_CIPHER_SUITES` @type ^`okhttp3.CipherSuite`[] := v1 @kind object;
  #L4f9966.  v0:= 18I;
  #L4f996a.  v0:= new `okhttp3.CipherSuite`[v0];
  #L4f996e.  v0[v3]:= v2 @kind object;
  #L4f9972.  v0[v5]:= v4 @kind object;
  #L4f9976.  v0[v7]:= v6 @kind object;
  #L4f997a.  v0[v9]:= v8 @kind object;
  #L4f997e.  v0[v11]:= v10 @kind object;
  #L4f9982.  v0[v13]:= v12 @kind object;
  #L4f9986.  v0[v15]:= v14 @kind object;
  #L4f998a.  v0[v17]:= v16 @kind object;
  #L4f998e.  v0[v19]:= v18 @kind object;
  #L4f9992.  v0[v21]:= v20 @kind object;
  #L4f9996.  v0[v23]:= v22 @kind object;
  #L4f999a.  v2:= `@@okhttp3.CipherSuite.TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA` @type ^`okhttp3.CipherSuite` @kind object;
  #L4f999e.  v4:= 11I;
  #L4f99a2.  v0[v4]:= v2 @kind object;
  #L4f99a6.  v2:= `@@okhttp3.CipherSuite.TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA` @type ^`okhttp3.CipherSuite` @kind object;
  #L4f99aa.  v4:= 12I;
  #L4f99ae.  v0[v4]:= v2 @kind object;
  #L4f99b2.  v2:= `@@okhttp3.CipherSuite.TLS_RSA_WITH_AES_128_GCM_SHA256` @type ^`okhttp3.CipherSuite` @kind object;
  #L4f99b6.  v4:= 13I;
  #L4f99ba.  v0[v4]:= v2 @kind object;
  #L4f99be.  v2:= `@@okhttp3.CipherSuite.TLS_RSA_WITH_AES_256_GCM_SHA384` @type ^`okhttp3.CipherSuite` @kind object;
  #L4f99c2.  v4:= 14I;
  #L4f99c6.  v0[v4]:= v2 @kind object;
  #L4f99ca.  v2:= `@@okhttp3.CipherSuite.TLS_RSA_WITH_AES_128_CBC_SHA` @type ^`okhttp3.CipherSuite` @kind object;
  #L4f99ce.  v4:= 15I;
  #L4f99d2.  v0[v4]:= v2 @kind object;
  #L4f99d6.  v2:= `@@okhttp3.CipherSuite.TLS_RSA_WITH_AES_256_CBC_SHA` @type ^`okhttp3.CipherSuite` @kind object;
  #L4f99da.  v4:= 16I;
  #L4f99de.  v0[v4]:= v2 @kind object;
  #L4f99e2.  v2:= `@@okhttp3.CipherSuite.TLS_RSA_WITH_3DES_EDE_CBC_SHA` @type ^`okhttp3.CipherSuite` @kind object;
  #L4f99e6.  v4:= 17I;
  #L4f99ea.  v0[v4]:= v2 @kind object;
  #L4f99ee.  `@@okhttp3.ConnectionSpec.APPROVED_CIPHER_SUITES` @type ^`okhttp3.CipherSuite`[] := v0 @kind object;
  #L4f99f2.  v2:= new `okhttp3.ConnectionSpec$Builder`;
  #L4f99f6.  call `<init>`(v2, v5) @signature `Lokhttp3/ConnectionSpec$Builder;.<init>:(Z)V` @kind direct;
  #L4f99fc.  call temp:= `cipherSuites`(v2, v1) @signature `Lokhttp3/ConnectionSpec$Builder;.cipherSuites:([Lokhttp3/CipherSuite;)Lokhttp3/ConnectionSpec$Builder;` @kind virtual;
  #L4f9a02.  v1:= temp @kind object;
  #L4f9a04.  v2:= new `okhttp3.TlsVersion`[v7];
  #L4f9a08.  v4:= `@@okhttp3.TlsVersion.TLS_1_3` @type ^`okhttp3.TlsVersion` @kind object;
  #L4f9a0c.  v2[v3]:= v4 @kind object;
  #L4f9a10.  v6:= `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` @kind object;
  #L4f9a14.  v2[v5]:= v6 @kind object;
  #L4f9a18.  call temp:= `tlsVersions`(v1, v2) @signature `Lokhttp3/ConnectionSpec$Builder;.tlsVersions:([Lokhttp3/TlsVersion;)Lokhttp3/ConnectionSpec$Builder;` @kind virtual;
  #L4f9a1e.  v1:= temp @kind object;
  #L4f9a20.  call temp:= `supportsTlsExtensions`(v1, v5) @signature `Lokhttp3/ConnectionSpec$Builder;.supportsTlsExtensions:(Z)Lokhttp3/ConnectionSpec$Builder;` @kind virtual;
  #L4f9a26.  v1:= temp @kind object;
  #L4f9a28.  call temp:= `build`(v1) @signature `Lokhttp3/ConnectionSpec$Builder;.build:()Lokhttp3/ConnectionSpec;` @kind virtual;
  #L4f9a2e.  v1:= temp @kind object;
  #L4f9a30.  `@@okhttp3.ConnectionSpec.RESTRICTED_TLS` @type ^`okhttp3.ConnectionSpec` := v1 @kind object;
  #L4f9a34.  v1:= new `okhttp3.ConnectionSpec$Builder`;
  #L4f9a38.  call `<init>`(v1, v5) @signature `Lokhttp3/ConnectionSpec$Builder;.<init>:(Z)V` @kind direct;
  #L4f9a3e.  call temp:= `cipherSuites`(v1, v0) @signature `Lokhttp3/ConnectionSpec$Builder;.cipherSuites:([Lokhttp3/CipherSuite;)Lokhttp3/ConnectionSpec$Builder;` @kind virtual;
  #L4f9a44.  v1:= temp @kind object;
  #L4f9a46.  v2:= new `okhttp3.TlsVersion`[v11];
  #L4f9a4a.  v2[v3]:= v4 @kind object;
  #L4f9a4e.  v2[v5]:= v6 @kind object;
  #L4f9a52.  v4:= `@@okhttp3.TlsVersion.TLS_1_1` @type ^`okhttp3.TlsVersion` @kind object;
  #L4f9a56.  v2[v7]:= v4 @kind object;
  #L4f9a5a.  v4:= `@@okhttp3.TlsVersion.TLS_1_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L4f9a5e.  v2[v9]:= v4 @kind object;
  #L4f9a62.  call temp:= `tlsVersions`(v1, v2) @signature `Lokhttp3/ConnectionSpec$Builder;.tlsVersions:([Lokhttp3/TlsVersion;)Lokhttp3/ConnectionSpec$Builder;` @kind virtual;
  #L4f9a68.  v1:= temp @kind object;
  #L4f9a6a.  call temp:= `supportsTlsExtensions`(v1, v5) @signature `Lokhttp3/ConnectionSpec$Builder;.supportsTlsExtensions:(Z)Lokhttp3/ConnectionSpec$Builder;` @kind virtual;
  #L4f9a70.  v1:= temp @kind object;
  #L4f9a72.  call temp:= `build`(v1) @signature `Lokhttp3/ConnectionSpec$Builder;.build:()Lokhttp3/ConnectionSpec;` @kind virtual;
  #L4f9a78.  v1:= temp @kind object;
  #L4f9a7a.  `@@okhttp3.ConnectionSpec.MODERN_TLS` @type ^`okhttp3.ConnectionSpec` := v1 @kind object;
  #L4f9a7e.  v1:= new `okhttp3.ConnectionSpec$Builder`;
  #L4f9a82.  call `<init>`(v1, v5) @signature `Lokhttp3/ConnectionSpec$Builder;.<init>:(Z)V` @kind direct;
  #L4f9a88.  call temp:= `cipherSuites`(v1, v0) @signature `Lokhttp3/ConnectionSpec$Builder;.cipherSuites:([Lokhttp3/CipherSuite;)Lokhttp3/ConnectionSpec$Builder;` @kind virtual;
  #L4f9a8e.  v0:= temp @kind object;
  #L4f9a90.  v1:= new `okhttp3.TlsVersion`[v5];
  #L4f9a94.  v1[v3]:= v4 @kind object;
  #L4f9a98.  call temp:= `tlsVersions`(v0, v1) @signature `Lokhttp3/ConnectionSpec$Builder;.tlsVersions:([Lokhttp3/TlsVersion;)Lokhttp3/ConnectionSpec$Builder;` @kind virtual;
  #L4f9a9e.  v0:= temp @kind object;
  #L4f9aa0.  call temp:= `supportsTlsExtensions`(v0, v5) @signature `Lokhttp3/ConnectionSpec$Builder;.supportsTlsExtensions:(Z)Lokhttp3/ConnectionSpec$Builder;` @kind virtual;
  #L4f9aa6.  v0:= temp @kind object;
  #L4f9aa8.  call temp:= `build`(v0) @signature `Lokhttp3/ConnectionSpec$Builder;.build:()Lokhttp3/ConnectionSpec;` @kind virtual;
  #L4f9aae.  v0:= temp @kind object;
  #L4f9ab0.  `@@okhttp3.ConnectionSpec.COMPATIBLE_TLS` @type ^`okhttp3.ConnectionSpec` := v0 @kind object;
  #L4f9ab4.  v0:= new `okhttp3.ConnectionSpec$Builder`;
  #L4f9ab8.  call `<init>`(v0, v3) @signature `Lokhttp3/ConnectionSpec$Builder;.<init>:(Z)V` @kind direct;
  #L4f9abe.  call temp:= `build`(v0) @signature `Lokhttp3/ConnectionSpec$Builder;.build:()Lokhttp3/ConnectionSpec;` @kind virtual;
  #L4f9ac4.  v0:= temp @kind object;
  #L4f9ac6.  `@@okhttp3.ConnectionSpec.CLEARTEXT` @type ^`okhttp3.ConnectionSpec` := v0 @kind object;
  #L4f9aca.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.ConnectionSpec` v1 @kind this, `okhttp3.ConnectionSpec$Builder` v2 @kind object) @signature `Lokhttp3/ConnectionSpec;.<init>:(Lokhttp3/ConnectionSpec$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4f9adc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f9ae2.  v0:= v2.`okhttp3.ConnectionSpec$Builder.a` @type ^`boolean` @kind boolean;
  #L4f9ae6.  v1.`okhttp3.ConnectionSpec.a` @type ^`boolean` := v0 @kind boolean;
  #L4f9aea.  v0:= v2.`okhttp3.ConnectionSpec$Builder.b` @type ^`java.lang.String`[] @kind object;
  #L4f9aee.  v1.`okhttp3.ConnectionSpec.c` @type ^`java.lang.String`[] := v0 @kind object;
  #L4f9af2.  v0:= v2.`okhttp3.ConnectionSpec$Builder.c` @type ^`java.lang.String`[] @kind object;
  #L4f9af6.  v1.`okhttp3.ConnectionSpec.d` @type ^`java.lang.String`[] := v0 @kind object;
  #L4f9afa.  v2:= v2.`okhttp3.ConnectionSpec$Builder.d` @type ^`boolean` @kind boolean;
  #L4f9afe.  v1.`okhttp3.ConnectionSpec.b` @type ^`boolean` := v2 @kind boolean;
  #L4f9b02.  return @kind void;
}
procedure `okhttp3.ConnectionSpec` `supportedSpec`(`okhttp3.ConnectionSpec` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object, `boolean` v6 ) @signature `Lokhttp3/ConnectionSpec;.supportedSpec:(Ljavax/net/ssl/SSLSocket;Z)Lokhttp3/ConnectionSpec;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4f982c.  v0:= v4.`okhttp3.ConnectionSpec.c` @type ^`java.lang.String`[] @kind object;
  #L4f9830.  if v0 == 0 then goto L4f984e;
  #L4f9834.  v0:= `@@okhttp3.CipherSuite.a` @type ^`java.util.Comparator` @kind object;
  #L4f9838.  call temp:= `getEnabledCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L4f983e.  v1:= temp @kind object;
  #L4f9840.  v2:= v4.`okhttp3.ConnectionSpec.c` @type ^`java.lang.String`[] @kind object;
  #L4f9844.  call temp:= `intersect`(v0, v1, v2) @signature `Lokhttp3/internal/Util;.intersect:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L4f984a.  v0:= temp @kind object;
  #L4f984c.  goto L4f9856;
  #L4f984e.  call temp:= `getEnabledCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L4f9854.  v0:= temp @kind object;
  #L4f9856.  v1:= v4.`okhttp3.ConnectionSpec.d` @type ^`java.lang.String`[] @kind object;
  #L4f985a.  if v1 == 0 then goto L4f9878;
  #L4f985e.  v1:= `@@okhttp3.internal.Util.NATURAL_ORDER` @type ^`java.util.Comparator` @kind object;
  #L4f9862.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L4f9868.  v2:= temp @kind object;
  #L4f986a.  v3:= v4.`okhttp3.ConnectionSpec.d` @type ^`java.lang.String`[] @kind object;
  #L4f986e.  call temp:= `intersect`(v1, v2, v3) @signature `Lokhttp3/internal/Util;.intersect:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L4f9874.  v1:= temp @kind object;
  #L4f9876.  goto L4f9880;
  #L4f9878.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L4f987e.  v1:= temp @kind object;
  #L4f9880.  call temp:= `getSupportedCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getSupportedCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L4f9886.  v5:= temp @kind object;
  #L4f9888.  v2:= `@@okhttp3.CipherSuite.a` @type ^`java.util.Comparator` @kind object;
  #L4f988c.  v3:= "TLS_FALLBACK_SCSV" @kind object;
  #L4f9890.  call temp:= `indexOf`(v2, v5, v3) @signature `Lokhttp3/internal/Util;.indexOf:(Ljava/util/Comparator;[Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L4f9896.  v2:= temp;
  #L4f9898.  if v6 == 0 then goto L4f98ae;
  #L4f989c.  v6:= -1I;
  #L4f989e.  if v2 == v6 then goto L4f98ae;
  #L4f98a2.  v5:= v5[v2] @kind object;
  #L4f98a6.  call temp:= `concat`(v0, v5) @signature `Lokhttp3/internal/Util;.concat:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L4f98ac.  v0:= temp @kind object;
  #L4f98ae.  v5:= new `okhttp3.ConnectionSpec$Builder`;
  #L4f98b2.  call `<init>`(v5, v4) @signature `Lokhttp3/ConnectionSpec$Builder;.<init>:(Lokhttp3/ConnectionSpec;)V` @kind direct;
  #L4f98b8.  call temp:= `cipherSuites`(v5, v0) @signature `Lokhttp3/ConnectionSpec$Builder;.cipherSuites:([Ljava/lang/String;)Lokhttp3/ConnectionSpec$Builder;` @kind virtual;
  #L4f98be.  v5:= temp @kind object;
  #L4f98c0.  call temp:= `tlsVersions`(v5, v1) @signature `Lokhttp3/ConnectionSpec$Builder;.tlsVersions:([Ljava/lang/String;)Lokhttp3/ConnectionSpec$Builder;` @kind virtual;
  #L4f98c6.  v5:= temp @kind object;
  #L4f98c8.  call temp:= `build`(v5) @signature `Lokhttp3/ConnectionSpec$Builder;.build:()Lokhttp3/ConnectionSpec;` @kind virtual;
  #L4f98ce.  v5:= temp @kind object;
  #L4f98d0.  return v5 @kind object;
}
procedure `void` `a`(`okhttp3.ConnectionSpec` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object, `boolean` v3 ) @signature `Lokhttp3/ConnectionSpec;.a:(Ljavax/net/ssl/SSLSocket;Z)V` @AccessFlag  {
    temp;
    v0;

  #L4f9b14.  call temp:= `supportedSpec`(v1, v2, v3) @signature `Lokhttp3/ConnectionSpec;.supportedSpec:(Ljavax/net/ssl/SSLSocket;Z)Lokhttp3/ConnectionSpec;` @kind direct;
  #L4f9b1a.  v3:= temp @kind object;
  #L4f9b1c.  v0:= v3.`okhttp3.ConnectionSpec.d` @type ^`java.lang.String`[] @kind object;
  #L4f9b20.  if v0 == 0 then goto L4f9b2a;
  #L4f9b24.  call `setEnabledProtocols`(v2, v0) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledProtocols:([Ljava/lang/String;)V` @kind virtual;
  #L4f9b2a.  v3:= v3.`okhttp3.ConnectionSpec.c` @type ^`java.lang.String`[] @kind object;
  #L4f9b2e.  if v3 == 0 then goto L4f9b38;
  #L4f9b32.  call `setEnabledCipherSuites`(v2, v3) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledCipherSuites:([Ljava/lang/String;)V` @kind virtual;
  #L4f9b38.  return @kind void;
}
procedure `java.util.List` `cipherSuites`(`okhttp3.ConnectionSpec` v1 @kind this) @signature `Lokhttp3/ConnectionSpec;.cipherSuites:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f97dc.  v0:= v1.`okhttp3.ConnectionSpec.c` @type ^`java.lang.String`[] @kind object;
  #L4f97e0.  if v0 == 0 then goto L4f97ee;
  #L4f97e4.  call temp:= `a`(v0) @signature `Lokhttp3/CipherSuite;.a:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L4f97ea.  v0:= temp @kind object;
  #L4f97ec.  goto L4f97f0;
  #L4f97ee.  v0:= 0I;
  #L4f97f0.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.ConnectionSpec` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lokhttp3/ConnectionSpec;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4f95d4.  v0:= instanceof @variable v5 @type ^`okhttp3.ConnectionSpec` @kind boolean;
  #L4f95d8.  v1:= 0I;
  #L4f95da.  if v0 != 0 then goto L4f95e0;
  #L4f95de.  return v1;
  #L4f95e0.  v0:= 1I;
  #L4f95e2.  if v5 != v4 then goto L4f95e8;
  #L4f95e6.  return v0;
  #L4f95e8.  v5:= (`okhttp3.ConnectionSpec`) v5 @kind object;
  #L4f95ec.  v2:= v4.`okhttp3.ConnectionSpec.a` @type ^`boolean` @kind boolean;
  #L4f95f0.  v3:= v5.`okhttp3.ConnectionSpec.a` @type ^`boolean` @kind boolean;
  #L4f95f4.  if v2 == v3 then goto L4f95fa;
  #L4f95f8.  return v1;
  #L4f95fa.  if v2 == 0 then goto L4f9638;
  #L4f95fe.  v2:= v4.`okhttp3.ConnectionSpec.c` @type ^`java.lang.String`[] @kind object;
  #L4f9602.  v3:= v5.`okhttp3.ConnectionSpec.c` @type ^`java.lang.String`[] @kind object;
  #L4f9606.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L4f960c.  v2:= temp;
  #L4f960e.  if v2 != 0 then goto L4f9614;
  #L4f9612.  return v1;
  #L4f9614.  v2:= v4.`okhttp3.ConnectionSpec.d` @type ^`java.lang.String`[] @kind object;
  #L4f9618.  v3:= v5.`okhttp3.ConnectionSpec.d` @type ^`java.lang.String`[] @kind object;
  #L4f961c.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L4f9622.  v2:= temp;
  #L4f9624.  if v2 != 0 then goto L4f962a;
  #L4f9628.  return v1;
  #L4f962a.  v2:= v4.`okhttp3.ConnectionSpec.b` @type ^`boolean` @kind boolean;
  #L4f962e.  v5:= v5.`okhttp3.ConnectionSpec.b` @type ^`boolean` @kind boolean;
  #L4f9632.  if v2 == v5 then goto L4f9638;
  #L4f9636.  return v1;
  #L4f9638.  return v0;
}
procedure `int` `hashCode`(`okhttp3.ConnectionSpec` v2 @kind this) @signature `Lokhttp3/ConnectionSpec;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f96e0.  v0:= v2.`okhttp3.ConnectionSpec.a` @type ^`boolean` @kind boolean;
  #L4f96e4.  if v0 == 0 then goto L4f971c;
  #L4f96e8.  v0:= 527I;
  #L4f96ec.  v1:= v2.`okhttp3.ConnectionSpec.c` @type ^`java.lang.String`[] @kind object;
  #L4f96f0.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L4f96f6.  v1:= temp;
  #L4f96f8.  v0:= v0 + v1 @kind int;
  #L4f96fa.  v0:= v0 * 31;
  #L4f96fe.  v1:= v2.`okhttp3.ConnectionSpec.d` @type ^`java.lang.String`[] @kind object;
  #L4f9702.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L4f9708.  v1:= temp;
  #L4f970a.  v0:= v0 + v1 @kind int;
  #L4f970c.  v0:= v0 * 31;
  #L4f9710.  v1:= v2.`okhttp3.ConnectionSpec.b` @type ^`boolean` @kind boolean;
  #L4f9714.  v1:= v1 ^~ 1;
  #L4f9718.  v0:= v0 + v1 @kind int;
  #L4f971a.  goto L4f9720;
  #L4f971c.  v0:= 17I;
  #L4f9720.  return v0;
}
procedure `boolean` `isCompatible`(`okhttp3.ConnectionSpec` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object) @signature `Lokhttp3/ConnectionSpec;.isCompatible:(Ljavax/net/ssl/SSLSocket;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4f964c.  v0:= v4.`okhttp3.ConnectionSpec.a` @type ^`boolean` @kind boolean;
  #L4f9650.  v1:= 0I;
  #L4f9652.  if v0 != 0 then goto L4f9658;
  #L4f9656.  return v1;
  #L4f9658.  v0:= v4.`okhttp3.ConnectionSpec.d` @type ^`java.lang.String`[] @kind object;
  #L4f965c.  if v0 == 0 then goto L4f967a;
  #L4f9660.  v2:= `@@okhttp3.internal.Util.NATURAL_ORDER` @type ^`java.util.Comparator` @kind object;
  #L4f9664.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L4f966a.  v3:= temp @kind object;
  #L4f966c.  call temp:= `nonEmptyIntersection`(v2, v0, v3) @signature `Lokhttp3/internal/Util;.nonEmptyIntersection:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)Z` @kind static;
  #L4f9672.  v0:= temp;
  #L4f9674.  if v0 != 0 then goto L4f967a;
  #L4f9678.  return v1;
  #L4f967a.  v0:= v4.`okhttp3.ConnectionSpec.c` @type ^`java.lang.String`[] @kind object;
  #L4f967e.  if v0 == 0 then goto L4f969c;
  #L4f9682.  v2:= `@@okhttp3.CipherSuite.a` @type ^`java.util.Comparator` @kind object;
  #L4f9686.  call temp:= `getEnabledCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L4f968c.  v5:= temp @kind object;
  #L4f968e.  call temp:= `nonEmptyIntersection`(v2, v0, v5) @signature `Lokhttp3/internal/Util;.nonEmptyIntersection:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)Z` @kind static;
  #L4f9694.  v5:= temp;
  #L4f9696.  if v5 != 0 then goto L4f969c;
  #L4f969a.  return v1;
  #L4f969c.  v5:= 1I;
  #L4f969e.  return v5;
}
procedure `boolean` `isTls`(`okhttp3.ConnectionSpec` v1 @kind this) @signature `Lokhttp3/ConnectionSpec;.isTls:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f96b0.  v0:= v1.`okhttp3.ConnectionSpec.a` @type ^`boolean` @kind boolean;
  #L4f96b4.  return v0;
}
procedure `boolean` `supportsTlsExtensions`(`okhttp3.ConnectionSpec` v1 @kind this) @signature `Lokhttp3/ConnectionSpec;.supportsTlsExtensions:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f96c8.  v0:= v1.`okhttp3.ConnectionSpec.b` @type ^`boolean` @kind boolean;
  #L4f96cc.  return v0;
}
procedure `java.util.List` `tlsVersions`(`okhttp3.ConnectionSpec` v1 @kind this) @signature `Lokhttp3/ConnectionSpec;.tlsVersions:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f9804.  v0:= v1.`okhttp3.ConnectionSpec.d` @type ^`java.lang.String`[] @kind object;
  #L4f9808.  if v0 == 0 then goto L4f9816;
  #L4f980c.  call temp:= `a`(v0) @signature `Lokhttp3/TlsVersion;.a:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L4f9812.  v0:= temp @kind object;
  #L4f9814.  goto L4f9818;
  #L4f9816.  v0:= 0I;
  #L4f9818.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.ConnectionSpec` v4 @kind this) @signature `Lokhttp3/ConnectionSpec;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4f9734.  v0:= v4.`okhttp3.ConnectionSpec.a` @type ^`boolean` @kind boolean;
  #L4f9738.  if v0 != 0 then goto L4f9742;
  #L4f973c.  v0:= "ConnectionSpec()" @kind object;
  #L4f9740.  return v0 @kind object;
  #L4f9742.  v0:= v4.`okhttp3.ConnectionSpec.c` @type ^`java.lang.String`[] @kind object;
  #L4f9746.  v1:= "[all enabled]" @kind object;
  #L4f974a.  if v0 == 0 then goto L4f9760;
  #L4f974e.  call temp:= `cipherSuites`(v4) @signature `Lokhttp3/ConnectionSpec;.cipherSuites:()Ljava/util/List;` @kind virtual;
  #L4f9754.  v0:= temp @kind object;
  #L4f9756.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L4f975c.  v0:= temp @kind object;
  #L4f975e.  goto L4f9762;
  #L4f9760.  v0:= v1 @kind object;
  #L4f9762.  v2:= v4.`okhttp3.ConnectionSpec.d` @type ^`java.lang.String`[] @kind object;
  #L4f9766.  if v2 == 0 then goto L4f977a;
  #L4f976a.  call temp:= `tlsVersions`(v4) @signature `Lokhttp3/ConnectionSpec;.tlsVersions:()Ljava/util/List;` @kind virtual;
  #L4f9770.  v1:= temp @kind object;
  #L4f9772.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L4f9778.  v1:= temp @kind object;
  #L4f977a.  v2:= new `java.lang.StringBuilder`;
  #L4f977e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4f9784.  v3:= "ConnectionSpec(cipherSuites=" @kind object;
  #L4f9788.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f978e.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f9794.  v0:= ", tlsVersions=" @kind object;
  #L4f9798.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f979e.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f97a4.  v0:= ", supportsTlsExtensions=" @kind object;
  #L4f97a8.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f97ae.  v0:= v4.`okhttp3.ConnectionSpec.b` @type ^`boolean` @kind boolean;
  #L4f97b2.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f97b8.  v0:= ")" @kind object;
  #L4f97bc.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f97c2.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4f97c8.  v0:= temp @kind object;
  #L4f97ca.  return v0 @kind object;
}
