record `dagger.android.DaggerApplication` @kind class @AccessFlag PUBLIC_ABSTRACT extends `android.app.Application` @kind class, `dagger.android.HasActivityInjector` @kind interface, `dagger.android.HasFragmentInjector` @kind interface, `dagger.android.HasServiceInjector` @kind interface, `dagger.android.HasBroadcastReceiverInjector` @kind interface, `dagger.android.HasContentProviderInjector` @kind interface {
  `dagger.android.DispatchingAndroidInjector` `dagger.android.DaggerApplication.a` @AccessFlag ;
  `dagger.android.DispatchingAndroidInjector` `dagger.android.DaggerApplication.b` @AccessFlag ;
  `dagger.android.DispatchingAndroidInjector` `dagger.android.DaggerApplication.c` @AccessFlag ;
  `dagger.android.DispatchingAndroidInjector` `dagger.android.DaggerApplication.d` @AccessFlag ;
  `dagger.android.DispatchingAndroidInjector` `dagger.android.DaggerApplication.e` @AccessFlag ;
  `boolean` `dagger.android.DaggerApplication.needToInject` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`dagger.android.DaggerApplication` v1 @kind this) @signature `Ldagger/android/DaggerApplication;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4f6854.  call `<init>`(v1) @signature `Landroid/app/Application;.<init>:()V` @kind direct;
  #L4f685a.  v0:= 1I;
  #L4f685c.  v1.`dagger.android.DaggerApplication.needToInject` @type ^`boolean` := v0 @kind boolean;
  #L4f6860.  return @kind void;
}
procedure `void` `injectIfNecessary`(`dagger.android.DaggerApplication` v2 @kind this) @signature `Ldagger/android/DaggerApplication;.injectIfNecessary:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4f6874.  v0:= v2.`dagger.android.DaggerApplication.needToInject` @type ^`boolean` @kind boolean;
  #L4f6878.  if v0 == 0 then goto L4f68b8;
  #L4f687c.  @monitorenter v2
  #L4f687e.  v0:= v2.`dagger.android.DaggerApplication.needToInject` @type ^`boolean` @kind boolean;
  #L4f6882.  if v0 == 0 then goto L4f68ae;
  #L4f6886.  call temp:= `applicationInjector`(v2) @signature `Ldagger/android/DaggerApplication;.applicationInjector:()Ldagger/android/AndroidInjector;` @kind virtual;
  #L4f688c.  v0:= temp @kind object;
  #L4f688e.  call `inject`(v0, v2) @signature `Ldagger/android/AndroidInjector;.inject:(Ljava/lang/Object;)V` @kind interface;
  #L4f6894.  v0:= v2.`dagger.android.DaggerApplication.needToInject` @type ^`boolean` @kind boolean;
  #L4f6898.  if v0 != 0 then goto L4f689e;
  #L4f689c.  goto L4f68ae;
  #L4f689e.  v0:= new `java.lang.IllegalStateException`;
  #L4f68a2.  v1:= "The AndroidInjector returned from applicationInjector() did not inject the DaggerApplication" @kind object;
  #L4f68a6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f68ac.  throw v0;
  #L4f68ae.  @monitorexit v2
  #L4f68b0.  goto L4f68b8;
  #L4f68b2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f68b4.  @monitorexit v2
  #L4f68b6.  throw v0;
  #L4f68b8.  return @kind void;
  catch `java.lang.Throwable` @[L4f687e..L4f68b6] goto L4f68b2;
}
procedure `void` `a`(`dagger.android.DaggerApplication` v1 @kind this) @signature `Ldagger/android/DaggerApplication;.a:()V` @AccessFlag  {
    temp;
    v0;

  #L4f68f8.  v0:= 0I;
  #L4f68fa.  v1.`dagger.android.DaggerApplication.needToInject` @type ^`boolean` := v0 @kind boolean;
  #L4f68fe.  return @kind void;
}
procedure `dagger.android.AndroidInjector` `activityInjector`(`dagger.android.DaggerApplication` v1 @kind this) @signature `Ldagger/android/DaggerApplication;.activityInjector:()Ldagger/android/AndroidInjector;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4f6768.  call temp:= `activityInjector`(v1) @signature `Ldagger/android/DaggerApplication;.activityInjector:()Ldagger/android/DispatchingAndroidInjector;` @kind virtual;
  #L4f676e.  v0:= temp @kind object;
  #L4f6770.  return v0 @kind object;
}
procedure `dagger.android.DispatchingAndroidInjector` `activityInjector`(`dagger.android.DaggerApplication` v1 @kind this) @signature `Ldagger/android/DaggerApplication;.activityInjector:()Ldagger/android/DispatchingAndroidInjector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f67f4.  v0:= v1.`dagger.android.DaggerApplication.a` @type ^`dagger.android.DispatchingAndroidInjector` @kind object;
  #L4f67f8.  return v0 @kind object;
}
procedure `dagger.android.AndroidInjector` `applicationInjector`() @signature `Ldagger/android/DaggerApplication;.applicationInjector:()Ldagger/android/AndroidInjector;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `dagger.android.AndroidInjector` `broadcastReceiverInjector`(`dagger.android.DaggerApplication` v1 @kind this) @signature `Ldagger/android/DaggerApplication;.broadcastReceiverInjector:()Ldagger/android/AndroidInjector;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4f6784.  call temp:= `broadcastReceiverInjector`(v1) @signature `Ldagger/android/DaggerApplication;.broadcastReceiverInjector:()Ldagger/android/DispatchingAndroidInjector;` @kind virtual;
  #L4f678a.  v0:= temp @kind object;
  #L4f678c.  return v0 @kind object;
}
procedure `dagger.android.DispatchingAndroidInjector` `broadcastReceiverInjector`(`dagger.android.DaggerApplication` v1 @kind this) @signature `Ldagger/android/DaggerApplication;.broadcastReceiverInjector:()Ldagger/android/DispatchingAndroidInjector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f680c.  v0:= v1.`dagger.android.DaggerApplication.b` @type ^`dagger.android.DispatchingAndroidInjector` @kind object;
  #L4f6810.  return v0 @kind object;
}
procedure `dagger.android.AndroidInjector` `contentProviderInjector`(`dagger.android.DaggerApplication` v1 @kind this) @signature `Ldagger/android/DaggerApplication;.contentProviderInjector:()Ldagger/android/AndroidInjector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f67a0.  call `injectIfNecessary`(v1) @signature `Ldagger/android/DaggerApplication;.injectIfNecessary:()V` @kind direct;
  #L4f67a6.  v0:= v1.`dagger.android.DaggerApplication.e` @type ^`dagger.android.DispatchingAndroidInjector` @kind object;
  #L4f67aa.  return v0 @kind object;
}
procedure `dagger.android.AndroidInjector` `fragmentInjector`(`dagger.android.DaggerApplication` v1 @kind this) @signature `Ldagger/android/DaggerApplication;.fragmentInjector:()Ldagger/android/AndroidInjector;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4f67bc.  call temp:= `fragmentInjector`(v1) @signature `Ldagger/android/DaggerApplication;.fragmentInjector:()Ldagger/android/DispatchingAndroidInjector;` @kind virtual;
  #L4f67c2.  v0:= temp @kind object;
  #L4f67c4.  return v0 @kind object;
}
procedure `dagger.android.DispatchingAndroidInjector` `fragmentInjector`(`dagger.android.DaggerApplication` v1 @kind this) @signature `Ldagger/android/DaggerApplication;.fragmentInjector:()Ldagger/android/DispatchingAndroidInjector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f6824.  v0:= v1.`dagger.android.DaggerApplication.c` @type ^`dagger.android.DispatchingAndroidInjector` @kind object;
  #L4f6828.  return v0 @kind object;
}
procedure `void` `onCreate`(`dagger.android.DaggerApplication` v0 @kind this) @signature `Ldagger/android/DaggerApplication;.onCreate:()V` @AccessFlag PUBLIC {
    temp;

  #L4f68d8.  call `onCreate`(v0) @signature `Landroid/app/Application;.onCreate:()V` @kind super;
  #L4f68de.  call `injectIfNecessary`(v0) @signature `Ldagger/android/DaggerApplication;.injectIfNecessary:()V` @kind direct;
  #L4f68e4.  return @kind void;
}
procedure `dagger.android.AndroidInjector` `serviceInjector`(`dagger.android.DaggerApplication` v1 @kind this) @signature `Ldagger/android/DaggerApplication;.serviceInjector:()Ldagger/android/AndroidInjector;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4f67d8.  call temp:= `serviceInjector`(v1) @signature `Ldagger/android/DaggerApplication;.serviceInjector:()Ldagger/android/DispatchingAndroidInjector;` @kind virtual;
  #L4f67de.  v0:= temp @kind object;
  #L4f67e0.  return v0 @kind object;
}
procedure `dagger.android.DispatchingAndroidInjector` `serviceInjector`(`dagger.android.DaggerApplication` v1 @kind this) @signature `Ldagger/android/DaggerApplication;.serviceInjector:()Ldagger/android/DispatchingAndroidInjector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f683c.  v0:= v1.`dagger.android.DaggerApplication.d` @type ^`dagger.android.DispatchingAndroidInjector` @kind object;
  #L4f6840.  return v0 @kind object;
}
