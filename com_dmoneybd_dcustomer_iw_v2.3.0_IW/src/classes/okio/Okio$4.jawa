record `okio.Okio$4` @kind class @AccessFlag FINAL extends `okio.AsyncTimeout` @kind class {
  `java.net.Socket` `okio.Okio$4.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.Okio$4` v0 @kind this, `java.net.Socket` v1 @kind object) @signature `Lokio/Okio$4;.<init>:(Ljava/net/Socket;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L50c100.  v0.`okio.Okio$4.b` @type ^`java.net.Socket` := v1 @kind object;
  #L50c104.  call `<init>`(v0) @signature `Lokio/AsyncTimeout;.<init>:()V` @kind direct;
  #L50c10a.  return @kind void;
}
procedure `java.io.IOException` `newTimeoutException`(`okio.Okio$4` v2 @kind this, `java.io.IOException` v3 @kind object) @signature `Lokio/Okio$4;.newTimeoutException:(Ljava/io/IOException;)Ljava/io/IOException;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L50c0d4.  v0:= new `java.net.SocketTimeoutException`;
  #L50c0d8.  v1:= "timeout" @kind object;
  #L50c0dc.  call `<init>`(v0, v1) @signature `Ljava/net/SocketTimeoutException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50c0e2.  if v3 == 0 then goto L50c0ec;
  #L50c0e6.  call temp:= `initCause`(v0, v3) @signature `Ljava/io/InterruptedIOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L50c0ec.  return v0 @kind object;
}
procedure `void` `timedOut`(`okio.Okio$4` v5 @kind this) @signature `Lokio/Okio$4;.timedOut:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L50c11c.  v0:= "Failed to close timed out socket " @kind object;
  #L50c120.  v1:= v5.`okio.Okio$4.b` @type ^`java.net.Socket` @kind object;
  #L50c124.  call `close`(v1) @signature `Ljava/net/Socket;.close:()V` @kind virtual;
  #L50c12a.  goto L50c182;
  #L50c12c.  v1:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L50c12e.  call temp:= `a`(v1) @signature `Lokio/Okio;.a:(Ljava/lang/AssertionError;)Z` @kind static;
  #L50c134.  v2:= temp;
  #L50c136.  if v2 == 0 then goto L50c14e;
  #L50c13a.  v2:= `@@okio.Okio.a` @type ^`java.util.logging.Logger` @kind object;
  #L50c13e.  v3:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L50c142.  v4:= new `java.lang.StringBuilder`;
  #L50c146.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L50c14c.  goto L50c164;
  #L50c14e.  throw v1;
  #L50c150.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L50c152.  v2:= `@@okio.Okio.a` @type ^`java.util.logging.Logger` @kind object;
  #L50c156.  v3:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L50c15a.  v4:= new `java.lang.StringBuilder`;
  #L50c15e.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L50c164.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50c16a.  v0:= v5.`okio.Okio$4.b` @type ^`java.net.Socket` @kind object;
  #L50c16e.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50c174.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L50c17a.  v0:= temp @kind object;
  #L50c17c.  call `log`(v2, v3, v0, v1) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L50c182.  return @kind void;
  catch `java.lang.Exception` @[L50c120..L50c12a] goto L50c150;
  catch `java.lang.AssertionError` @[L50c120..L50c12a] goto L50c12c;
}
