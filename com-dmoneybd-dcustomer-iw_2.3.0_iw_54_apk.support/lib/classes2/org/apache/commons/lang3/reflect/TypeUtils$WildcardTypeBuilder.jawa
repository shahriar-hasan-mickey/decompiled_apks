record `org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder` @kind class @AccessFlag PUBLIC extends `org.apache.commons.lang3.builder.Builder` @kind interface {
  `java.lang.reflect.Type`[] `org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder.lowerBounds` @AccessFlag PRIVATE;
  `java.lang.reflect.Type`[] `org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder.upperBounds` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder` v0 @kind this) @signature `Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeBuilder;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder` v0 @kind this, `org.apache.commons.lang3.reflect.TypeUtils$1` v1 @kind object) @signature `Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeBuilder;.<init>:(Lorg/apache/commons/lang3/reflect/TypeUtils$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `build`(`org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder` v1 @kind this) @signature `Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeBuilder;.build:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.reflect.WildcardType` `build`(`org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder` v4 @kind this) @signature `Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeBuilder;.build:()Ljava/lang/reflect/WildcardType;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder` `withLowerBounds`(`org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder` v0 @kind this, `java.lang.reflect.Type`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeBuilder;.withLowerBounds:([Ljava/lang/reflect/Type;)Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeBuilder;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder` `withUpperBounds`(`org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeBuilder` v0 @kind this, `java.lang.reflect.Type`[] v1 @kind object) @signature `Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeBuilder;.withUpperBounds:([Ljava/lang/reflect/Type;)Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeBuilder;` @AccessFlag PUBLIC {

  # return;
}
