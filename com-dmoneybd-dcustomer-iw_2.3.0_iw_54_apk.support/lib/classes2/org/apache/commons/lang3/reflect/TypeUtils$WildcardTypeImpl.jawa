record `org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl` @kind class @AccessFlag FINAL extends `java.lang.reflect.WildcardType` @kind interface {
  `java.lang.reflect.Type`[] `org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl.lowerBounds` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Type`[] `org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl.upperBounds` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.reflect.Type`[] `@@org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl.EMPTY_BOUNDS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeImpl;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl` v1 @kind this, `java.lang.reflect.Type`[] v2 @kind object, `java.lang.reflect.Type`[] v3 @kind object) @signature `Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeImpl;.<init>:([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl` v0 @kind this, `java.lang.reflect.Type`[] v1 @kind object, `java.lang.reflect.Type`[] v2 @kind object, `org.apache.commons.lang3.reflect.TypeUtils$1` v3 @kind object) @signature `Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeImpl;.<init>:([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;Lorg/apache/commons/lang3/reflect/TypeUtils$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `equals`(`org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeImpl;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.reflect.Type`[] `getLowerBounds`(`org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl` v1 @kind this) @signature `Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeImpl;.getLowerBounds:()[Ljava/lang/reflect/Type;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.reflect.Type`[] `getUpperBounds`(`org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl` v1 @kind this) @signature `Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeImpl;.getUpperBounds:()[Ljava/lang/reflect/Type;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl` v2 @kind this) @signature `Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeImpl;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`org.apache.commons.lang3.reflect.TypeUtils$WildcardTypeImpl` v1 @kind this) @signature `Lorg/apache/commons/lang3/reflect/TypeUtils$WildcardTypeImpl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
