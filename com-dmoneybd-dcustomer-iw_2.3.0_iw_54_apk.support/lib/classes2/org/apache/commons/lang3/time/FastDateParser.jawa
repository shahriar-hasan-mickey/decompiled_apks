record `org.apache.commons.lang3.time.FastDateParser` @kind class @AccessFlag PUBLIC extends `org.apache.commons.lang3.time.DateParser` @kind interface, `java.io.Serializable` @kind interface {
  `int` `org.apache.commons.lang3.time.FastDateParser.century` @AccessFlag PRIVATE_FINAL;
  `java.util.Locale` `org.apache.commons.lang3.time.FastDateParser.locale` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.apache.commons.lang3.time.FastDateParser.pattern` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `org.apache.commons.lang3.time.FastDateParser.patterns` @AccessFlag PRIVATE_TRANSIENT;
  `int` `org.apache.commons.lang3.time.FastDateParser.startYear` @AccessFlag PRIVATE_FINAL;
  `java.util.TimeZone` `org.apache.commons.lang3.time.FastDateParser.timeZone` @AccessFlag PRIVATE_FINAL;
}
global `org.apache.commons.lang3.time.FastDateParser$Strategy` `@@org.apache.commons.lang3.time.FastDateParser.ABBREVIATED_YEAR_STRATEGY` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.apache.commons.lang3.time.FastDateParser$Strategy` `@@org.apache.commons.lang3.time.FastDateParser.DAY_OF_MONTH_STRATEGY` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.apache.commons.lang3.time.FastDateParser$Strategy` `@@org.apache.commons.lang3.time.FastDateParser.DAY_OF_WEEK_IN_MONTH_STRATEGY` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.apache.commons.lang3.time.FastDateParser$Strategy` `@@org.apache.commons.lang3.time.FastDateParser.DAY_OF_WEEK_STRATEGY` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.apache.commons.lang3.time.FastDateParser$Strategy` `@@org.apache.commons.lang3.time.FastDateParser.DAY_OF_YEAR_STRATEGY` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.apache.commons.lang3.time.FastDateParser$Strategy` `@@org.apache.commons.lang3.time.FastDateParser.HOUR12_STRATEGY` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.apache.commons.lang3.time.FastDateParser$Strategy` `@@org.apache.commons.lang3.time.FastDateParser.HOUR24_OF_DAY_STRATEGY` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.apache.commons.lang3.time.FastDateParser$Strategy` `@@org.apache.commons.lang3.time.FastDateParser.HOUR_OF_DAY_STRATEGY` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.apache.commons.lang3.time.FastDateParser$Strategy` `@@org.apache.commons.lang3.time.FastDateParser.HOUR_STRATEGY` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.apache.commons.lang3.time.FastDateParser$Strategy` `@@org.apache.commons.lang3.time.FastDateParser.LITERAL_YEAR_STRATEGY` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Comparator` `@@org.apache.commons.lang3.time.FastDateParser.LONGER_FIRST_LOWERCASE` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.apache.commons.lang3.time.FastDateParser$Strategy` `@@org.apache.commons.lang3.time.FastDateParser.MILLISECOND_STRATEGY` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.apache.commons.lang3.time.FastDateParser$Strategy` `@@org.apache.commons.lang3.time.FastDateParser.MINUTE_STRATEGY` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.apache.commons.lang3.time.FastDateParser$Strategy` `@@org.apache.commons.lang3.time.FastDateParser.NUMBER_MONTH_STRATEGY` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.apache.commons.lang3.time.FastDateParser$Strategy` `@@org.apache.commons.lang3.time.FastDateParser.SECOND_STRATEGY` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.apache.commons.lang3.time.FastDateParser$Strategy` `@@org.apache.commons.lang3.time.FastDateParser.WEEK_OF_MONTH_STRATEGY` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.apache.commons.lang3.time.FastDateParser$Strategy` `@@org.apache.commons.lang3.time.FastDateParser.WEEK_OF_YEAR_STRATEGY` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Locale` `@@org.apache.commons.lang3.time.FastDateParser.a` @AccessFlag STATIC_FINAL;
global `java.util.concurrent.ConcurrentMap`[] `@@org.apache.commons.lang3.time.FastDateParser.caches` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.apache.commons.lang3.time.FastDateParser.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/apache/commons/lang3/time/FastDateParser;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.time.FastDateParser` v1 @kind this, `java.lang.String` v2 @kind object, `java.util.TimeZone` v3 @kind object, `java.util.Locale` v4 @kind object) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.<init>:(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.time.FastDateParser` v0 @kind this, `java.lang.String` v1 @kind object, `java.util.TimeZone` v2 @kind object, `java.util.Locale` v3 @kind object, `java.util.Date` v4 @kind object) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.<init>:(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;Ljava/util/Date;)V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `java.lang.String` `a`(`org.apache.commons.lang3.time.FastDateParser` v0 @kind object) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.a:(Lorg/apache/commons/lang3/time/FastDateParser;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `int` `adjustYear`(`org.apache.commons.lang3.time.FastDateParser` v2 @kind this, `int` v3 ) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.adjustYear:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.Map` `appendDisplayNames`(`java.util.Calendar` v4 @kind object, `java.util.Locale` v5 @kind object, `int` v6 , `java.lang.StringBuilder` v7 @kind object) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.appendDisplayNames:(Ljava/util/Calendar;Ljava/util/Locale;ILjava/lang/StringBuilder;)Ljava/util/Map;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `b`(`char` v0 ) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.b:(C)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `org.apache.commons.lang3.time.FastDateParser$Strategy` `c`(`org.apache.commons.lang3.time.FastDateParser` v0 @kind object, `char` v1 , `int` v2 , `java.util.Calendar` v3 @kind object) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.c:(Lorg/apache/commons/lang3/time/FastDateParser;CILjava/util/Calendar;)Lorg/apache/commons/lang3/time/FastDateParser$Strategy;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.util.Map` `d`(`java.util.Calendar` v0 @kind object, `java.util.Locale` v1 @kind object, `int` v2 , `java.lang.StringBuilder` v3 @kind object) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.d:(Ljava/util/Calendar;Ljava/util/Locale;ILjava/lang/StringBuilder;)Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `int` `e`(`org.apache.commons.lang3.time.FastDateParser` v0 @kind object, `int` v1 ) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.e:(Lorg/apache/commons/lang3/time/FastDateParser;I)I` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.util.Comparator` `f`() @signature `Lorg/apache/commons/lang3/time/FastDateParser;.f:()Ljava/util/Comparator;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.StringBuilder` `g`(`java.lang.StringBuilder` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.g:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.util.concurrent.ConcurrentMap` `getCache`(`int` v3 ) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.getCache:(I)Ljava/util/concurrent/ConcurrentMap;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.time.FastDateParser$Strategy` `getLocaleSpecificStrategy`(`org.apache.commons.lang3.time.FastDateParser` v3 @kind this, `int` v4 , `java.util.Calendar` v5 @kind object) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.getLocaleSpecificStrategy:(ILjava/util/Calendar;)Lorg/apache/commons/lang3/time/FastDateParser$Strategy;` @AccessFlag PRIVATE {

  # return;
}
procedure `org.apache.commons.lang3.time.FastDateParser$Strategy` `getStrategy`(`org.apache.commons.lang3.time.FastDateParser` v2 @kind this, `char` v3 , `int` v4 , `java.util.Calendar` v5 @kind object) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.getStrategy:(CILjava/util/Calendar;)Lorg/apache/commons/lang3/time/FastDateParser$Strategy;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `init`(`org.apache.commons.lang3.time.FastDateParser` v2 @kind this, `java.util.Calendar` v3 @kind object) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.init:(Ljava/util/Calendar;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `isFormatLetter`(`char` v1 ) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.isFormatLetter:(C)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `readObject`(`org.apache.commons.lang3.time.FastDateParser` v1 @kind this, `java.io.ObjectInputStream` v2 @kind object) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.readObject:(Ljava/io/ObjectInputStream;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.StringBuilder` `simpleQuote`(`java.lang.StringBuilder` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.simpleQuote:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `equals`(`org.apache.commons.lang3.time.FastDateParser` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Locale` `getLocale`(`org.apache.commons.lang3.time.FastDateParser` v1 @kind this) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.getLocale:()Ljava/util/Locale;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getPattern`(`org.apache.commons.lang3.time.FastDateParser` v1 @kind this) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.getPattern:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.TimeZone` `getTimeZone`(`org.apache.commons.lang3.time.FastDateParser` v1 @kind this) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.getTimeZone:()Ljava/util/TimeZone;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`org.apache.commons.lang3.time.FastDateParser` v3 @kind this) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Date` `parse`(`org.apache.commons.lang3.time.FastDateParser` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.parse:(Ljava/lang/String;)Ljava/util/Date;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Date` `parse`(`org.apache.commons.lang3.time.FastDateParser` v2 @kind this, `java.lang.String` v3 @kind object, `java.text.ParsePosition` v4 @kind object) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `parse`(`org.apache.commons.lang3.time.FastDateParser` v8 @kind this, `java.lang.String` v9 @kind object, `java.text.ParsePosition` v10 @kind object, `java.util.Calendar` v11 @kind object) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.parse:(Ljava/lang/String;Ljava/text/ParsePosition;Ljava/util/Calendar;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `parseObject`(`org.apache.commons.lang3.time.FastDateParser` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.parseObject:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `parseObject`(`org.apache.commons.lang3.time.FastDateParser` v0 @kind this, `java.lang.String` v1 @kind object, `java.text.ParsePosition` v2 @kind object) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.parseObject:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`org.apache.commons.lang3.time.FastDateParser` v3 @kind this) @signature `Lorg/apache/commons/lang3/time/FastDateParser;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
