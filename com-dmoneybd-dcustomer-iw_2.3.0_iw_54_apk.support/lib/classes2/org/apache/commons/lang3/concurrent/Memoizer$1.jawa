record `org.apache.commons.lang3.concurrent.Memoizer$1` @kind class @AccessFlag  extends `java.util.concurrent.Callable` @kind interface {
  `java.lang.Object` `org.apache.commons.lang3.concurrent.Memoizer$1.a` @AccessFlag FINAL_SYNTHETIC;
  `org.apache.commons.lang3.concurrent.Memoizer` `org.apache.commons.lang3.concurrent.Memoizer$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.apache.commons.lang3.concurrent.Memoizer$1` v0 @kind this, `org.apache.commons.lang3.concurrent.Memoizer` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/apache/commons/lang3/concurrent/Memoizer$1;.<init>:(Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `call`(`org.apache.commons.lang3.concurrent.Memoizer$1` v2 @kind this) @signature `Lorg/apache/commons/lang3/concurrent/Memoizer$1;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
