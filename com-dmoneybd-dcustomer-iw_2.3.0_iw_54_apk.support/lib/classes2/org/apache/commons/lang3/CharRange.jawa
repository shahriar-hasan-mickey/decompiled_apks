record `org.apache.commons.lang3.CharRange` @kind class @AccessFlag FINAL extends `java.lang.Iterable` @kind interface, `java.io.Serializable` @kind interface {
  `char` `org.apache.commons.lang3.CharRange.end` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.apache.commons.lang3.CharRange.iToString` @AccessFlag PRIVATE_TRANSIENT;
  `boolean` `org.apache.commons.lang3.CharRange.negated` @AccessFlag PRIVATE_FINAL;
  `char` `org.apache.commons.lang3.CharRange.start` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@org.apache.commons.lang3.CharRange.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.apache.commons.lang3.CharRange` v1 @kind this, `char` v2 , `char` v3 , `boolean` v4 ) @signature `Lorg/apache/commons/lang3/CharRange;.<init>:(CCZ)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `boolean` `a`(`org.apache.commons.lang3.CharRange` v0 @kind object) @signature `Lorg/apache/commons/lang3/CharRange;.a:(Lorg/apache/commons/lang3/CharRange;)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `char` `b`(`org.apache.commons.lang3.CharRange` v0 @kind object) @signature `Lorg/apache/commons/lang3/CharRange;.b:(Lorg/apache/commons/lang3/CharRange;)C` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `char` `c`(`org.apache.commons.lang3.CharRange` v0 @kind object) @signature `Lorg/apache/commons/lang3/CharRange;.c:(Lorg/apache/commons/lang3/CharRange;)C` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `org.apache.commons.lang3.CharRange` `is`(`char` v2 ) @signature `Lorg/apache/commons/lang3/CharRange;.is:(C)Lorg/apache/commons/lang3/CharRange;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.CharRange` `isIn`(`char` v2 , `char` v3 ) @signature `Lorg/apache/commons/lang3/CharRange;.isIn:(CC)Lorg/apache/commons/lang3/CharRange;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.CharRange` `isNot`(`char` v2 ) @signature `Lorg/apache/commons/lang3/CharRange;.isNot:(C)Lorg/apache/commons/lang3/CharRange;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.CharRange` `isNotIn`(`char` v2 , `char` v3 ) @signature `Lorg/apache/commons/lang3/CharRange;.isNotIn:(CC)Lorg/apache/commons/lang3/CharRange;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `contains`(`org.apache.commons.lang3.CharRange` v3 @kind this, `char` v4 ) @signature `Lorg/apache/commons/lang3/CharRange;.contains:(C)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `contains`(`org.apache.commons.lang3.CharRange` v5 @kind this, `org.apache.commons.lang3.CharRange` v6 @kind object) @signature `Lorg/apache/commons/lang3/CharRange;.contains:(Lorg/apache/commons/lang3/CharRange;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`org.apache.commons.lang3.CharRange` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lorg/apache/commons/lang3/CharRange;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `char` `getEnd`(`org.apache.commons.lang3.CharRange` v1 @kind this) @signature `Lorg/apache/commons/lang3/CharRange;.getEnd:()C` @AccessFlag PUBLIC {

  # return;
}
procedure `char` `getStart`(`org.apache.commons.lang3.CharRange` v1 @kind this) @signature `Lorg/apache/commons/lang3/CharRange;.getStart:()C` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`org.apache.commons.lang3.CharRange` v2 @kind this) @signature `Lorg/apache/commons/lang3/CharRange;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isNegated`(`org.apache.commons.lang3.CharRange` v1 @kind this) @signature `Lorg/apache/commons/lang3/CharRange;.isNegated:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `iterator`(`org.apache.commons.lang3.CharRange` v2 @kind this) @signature `Lorg/apache/commons/lang3/CharRange;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`org.apache.commons.lang3.CharRange` v3 @kind this) @signature `Lorg/apache/commons/lang3/CharRange;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
