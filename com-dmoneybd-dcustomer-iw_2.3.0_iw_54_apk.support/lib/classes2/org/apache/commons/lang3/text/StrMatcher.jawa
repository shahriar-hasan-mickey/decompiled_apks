record `org.apache.commons.lang3.text.StrMatcher` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `org.apache.commons.lang3.text.StrMatcher` `@@org.apache.commons.lang3.text.StrMatcher.COMMA_MATCHER` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.apache.commons.lang3.text.StrMatcher` `@@org.apache.commons.lang3.text.StrMatcher.DOUBLE_QUOTE_MATCHER` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.apache.commons.lang3.text.StrMatcher` `@@org.apache.commons.lang3.text.StrMatcher.NONE_MATCHER` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.apache.commons.lang3.text.StrMatcher` `@@org.apache.commons.lang3.text.StrMatcher.QUOTE_MATCHER` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.apache.commons.lang3.text.StrMatcher` `@@org.apache.commons.lang3.text.StrMatcher.SINGLE_QUOTE_MATCHER` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.apache.commons.lang3.text.StrMatcher` `@@org.apache.commons.lang3.text.StrMatcher.SPACE_MATCHER` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.apache.commons.lang3.text.StrMatcher` `@@org.apache.commons.lang3.text.StrMatcher.SPLIT_MATCHER` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.apache.commons.lang3.text.StrMatcher` `@@org.apache.commons.lang3.text.StrMatcher.TAB_MATCHER` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.apache.commons.lang3.text.StrMatcher` `@@org.apache.commons.lang3.text.StrMatcher.TRIM_MATCHER` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/apache/commons/lang3/text/StrMatcher;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.text.StrMatcher` v0 @kind this) @signature `Lorg/apache/commons/lang3/text/StrMatcher;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `org.apache.commons.lang3.text.StrMatcher` `charMatcher`(`char` v1 ) @signature `Lorg/apache/commons/lang3/text/StrMatcher;.charMatcher:(C)Lorg/apache/commons/lang3/text/StrMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrMatcher` `charSetMatcher`(`java.lang.String` v2 @kind object) @signature `Lorg/apache/commons/lang3/text/StrMatcher;.charSetMatcher:(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrMatcher` `charSetMatcher`(`char`[] v2 @kind object) @signature `Lorg/apache/commons/lang3/text/StrMatcher;.charSetMatcher:([C)Lorg/apache/commons/lang3/text/StrMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrMatcher` `commaMatcher`() @signature `Lorg/apache/commons/lang3/text/StrMatcher;.commaMatcher:()Lorg/apache/commons/lang3/text/StrMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrMatcher` `doubleQuoteMatcher`() @signature `Lorg/apache/commons/lang3/text/StrMatcher;.doubleQuoteMatcher:()Lorg/apache/commons/lang3/text/StrMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrMatcher` `noneMatcher`() @signature `Lorg/apache/commons/lang3/text/StrMatcher;.noneMatcher:()Lorg/apache/commons/lang3/text/StrMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrMatcher` `quoteMatcher`() @signature `Lorg/apache/commons/lang3/text/StrMatcher;.quoteMatcher:()Lorg/apache/commons/lang3/text/StrMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrMatcher` `singleQuoteMatcher`() @signature `Lorg/apache/commons/lang3/text/StrMatcher;.singleQuoteMatcher:()Lorg/apache/commons/lang3/text/StrMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrMatcher` `spaceMatcher`() @signature `Lorg/apache/commons/lang3/text/StrMatcher;.spaceMatcher:()Lorg/apache/commons/lang3/text/StrMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrMatcher` `splitMatcher`() @signature `Lorg/apache/commons/lang3/text/StrMatcher;.splitMatcher:()Lorg/apache/commons/lang3/text/StrMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrMatcher` `stringMatcher`(`java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/text/StrMatcher;.stringMatcher:(Ljava/lang/String;)Lorg/apache/commons/lang3/text/StrMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrMatcher` `tabMatcher`() @signature `Lorg/apache/commons/lang3/text/StrMatcher;.tabMatcher:()Lorg/apache/commons/lang3/text/StrMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.apache.commons.lang3.text.StrMatcher` `trimMatcher`() @signature `Lorg/apache/commons/lang3/text/StrMatcher;.trimMatcher:()Lorg/apache/commons/lang3/text/StrMatcher;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `isMatch`(`org.apache.commons.lang3.text.StrMatcher` v2 @kind this, `char`[] v3 @kind object, `int` v4 ) @signature `Lorg/apache/commons/lang3/text/StrMatcher;.isMatch:([CI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `isMatch`(`char`[] v0 @kind object, `int` v1 , `int` v2 , `int` v3 ) @signature `Lorg/apache/commons/lang3/text/StrMatcher;.isMatch:([CIII)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
