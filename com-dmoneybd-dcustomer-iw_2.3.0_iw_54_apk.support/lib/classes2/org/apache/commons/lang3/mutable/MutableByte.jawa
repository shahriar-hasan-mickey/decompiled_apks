record `org.apache.commons.lang3.mutable.MutableByte` @kind class @AccessFlag PUBLIC extends `java.lang.Number` @kind class, `java.lang.Comparable` @kind interface, `org.apache.commons.lang3.mutable.Mutable` @kind interface {
  `byte` `org.apache.commons.lang3.mutable.MutableByte.value` @AccessFlag PRIVATE;
}
global `long` `@@org.apache.commons.lang3.mutable.MutableByte.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.apache.commons.lang3.mutable.MutableByte` v0 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.mutable.MutableByte` v0 @kind this, `byte` v1 ) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.<init>:(B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.mutable.MutableByte` v0 @kind this, `java.lang.Number` v1 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.<init>:(Ljava/lang/Number;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.apache.commons.lang3.mutable.MutableByte` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `add`(`org.apache.commons.lang3.mutable.MutableByte` v1 @kind this, `byte` v2 ) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.add:(B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `add`(`org.apache.commons.lang3.mutable.MutableByte` v1 @kind this, `java.lang.Number` v2 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.add:(Ljava/lang/Number;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte` `addAndGet`(`org.apache.commons.lang3.mutable.MutableByte` v1 @kind this, `byte` v2 ) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.addAndGet:(B)B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte` `addAndGet`(`org.apache.commons.lang3.mutable.MutableByte` v1 @kind this, `java.lang.Number` v2 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.addAndGet:(Ljava/lang/Number;)B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte` `byteValue`(`org.apache.commons.lang3.mutable.MutableByte` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.byteValue:()B` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `compareTo`(`org.apache.commons.lang3.mutable.MutableByte` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `compareTo`(`org.apache.commons.lang3.mutable.MutableByte` v1 @kind this, `org.apache.commons.lang3.mutable.MutableByte` v2 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.compareTo:(Lorg/apache/commons/lang3/mutable/MutableByte;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `decrement`(`org.apache.commons.lang3.mutable.MutableByte` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.decrement:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte` `decrementAndGet`(`org.apache.commons.lang3.mutable.MutableByte` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.decrementAndGet:()B` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `doubleValue`(`org.apache.commons.lang3.mutable.MutableByte` v2 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.doubleValue:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`org.apache.commons.lang3.mutable.MutableByte` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `float` `floatValue`(`org.apache.commons.lang3.mutable.MutableByte` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.floatValue:()F` @AccessFlag PUBLIC {

  # return;
}
procedure `byte` `getAndAdd`(`org.apache.commons.lang3.mutable.MutableByte` v1 @kind this, `byte` v2 ) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.getAndAdd:(B)B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte` `getAndAdd`(`org.apache.commons.lang3.mutable.MutableByte` v1 @kind this, `java.lang.Number` v2 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.getAndAdd:(Ljava/lang/Number;)B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte` `getAndDecrement`(`org.apache.commons.lang3.mutable.MutableByte` v2 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.getAndDecrement:()B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte` `getAndIncrement`(`org.apache.commons.lang3.mutable.MutableByte` v2 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.getAndIncrement:()B` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Byte` `getValue`(`org.apache.commons.lang3.mutable.MutableByte` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.getValue:()Ljava/lang/Byte;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `getValue`(`org.apache.commons.lang3.mutable.MutableByte` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `hashCode`(`org.apache.commons.lang3.mutable.MutableByte` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `increment`(`org.apache.commons.lang3.mutable.MutableByte` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.increment:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte` `incrementAndGet`(`org.apache.commons.lang3.mutable.MutableByte` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.incrementAndGet:()B` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `intValue`(`org.apache.commons.lang3.mutable.MutableByte` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.intValue:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `longValue`(`org.apache.commons.lang3.mutable.MutableByte` v2 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.longValue:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setValue`(`org.apache.commons.lang3.mutable.MutableByte` v0 @kind this, `byte` v1 ) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.setValue:(B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setValue`(`org.apache.commons.lang3.mutable.MutableByte` v0 @kind this, `java.lang.Number` v1 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.setValue:(Ljava/lang/Number;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setValue`(`org.apache.commons.lang3.mutable.MutableByte` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.setValue:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `subtract`(`org.apache.commons.lang3.mutable.MutableByte` v1 @kind this, `byte` v2 ) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.subtract:(B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `subtract`(`org.apache.commons.lang3.mutable.MutableByte` v1 @kind this, `java.lang.Number` v2 @kind object) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.subtract:(Ljava/lang/Number;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Byte` `toByte`(`org.apache.commons.lang3.mutable.MutableByte` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.toByte:()Ljava/lang/Byte;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`org.apache.commons.lang3.mutable.MutableByte` v1 @kind this) @signature `Lorg/apache/commons/lang3/mutable/MutableByte;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
