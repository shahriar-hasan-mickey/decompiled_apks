record `org.spongycastle.crypto.macs.Poly1305` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.Mac` @kind interface {
  `org.spongycastle.crypto.BlockCipher` `org.spongycastle.crypto.macs.Poly1305.cipher` @AccessFlag PRIVATE_FINAL;
  `byte`[] `org.spongycastle.crypto.macs.Poly1305.currentBlock` @AccessFlag PRIVATE_FINAL;
  `int` `org.spongycastle.crypto.macs.Poly1305.currentBlockOffset` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.macs.Poly1305.h0` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.macs.Poly1305.h1` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.macs.Poly1305.h2` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.macs.Poly1305.h3` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.macs.Poly1305.h4` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.macs.Poly1305.k0` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.macs.Poly1305.k1` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.macs.Poly1305.k2` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.macs.Poly1305.k3` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.macs.Poly1305.r0` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.macs.Poly1305.r1` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.macs.Poly1305.r2` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.macs.Poly1305.r3` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.macs.Poly1305.r4` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.macs.Poly1305.s1` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.macs.Poly1305.s2` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.macs.Poly1305.s3` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.macs.Poly1305.s4` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.macs.Poly1305.singleByte` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@org.spongycastle.crypto.macs.Poly1305.BLOCK_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.spongycastle.crypto.macs.Poly1305` v1 @kind this) @signature `Lorg/spongycastle/crypto/macs/Poly1305;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.macs.Poly1305` v2 @kind this, `org.spongycastle.crypto.BlockCipher` v3 @kind object) @signature `Lorg/spongycastle/crypto/macs/Poly1305;.<init>:(Lorg/spongycastle/crypto/BlockCipher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `long` `mul32x32_64`(`int` v2 , `int` v3 ) @signature `Lorg/spongycastle/crypto/macs/Poly1305;.mul32x32_64:(II)J` @AccessFlag PRIVATE_STATIC_FINAL {

  # return;
}
procedure `void` `processBlock`(`org.spongycastle.crypto.macs.Poly1305` v19 @kind this) @signature `Lorg/spongycastle/crypto/macs/Poly1305;.processBlock:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `setKey`(`org.spongycastle.crypto.macs.Poly1305` v7 @kind this, `byte`[] v8 @kind object, `byte`[] v9 @kind object) @signature `Lorg/spongycastle/crypto/macs/Poly1305;.setKey:([B[B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `doFinal`(`org.spongycastle.crypto.macs.Poly1305` v13 @kind this, `byte`[] v14 @kind object, `int` v15 ) @signature `Lorg/spongycastle/crypto/macs/Poly1305;.doFinal:([BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.spongycastle.crypto.macs.Poly1305` v2 @kind this) @signature `Lorg/spongycastle/crypto/macs/Poly1305;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getMacSize`(`org.spongycastle.crypto.macs.Poly1305` v1 @kind this) @signature `Lorg/spongycastle/crypto/macs/Poly1305;.getMacSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.macs.Poly1305` v2 @kind this, `org.spongycastle.crypto.CipherParameters` v3 @kind object) @signature `Lorg/spongycastle/crypto/macs/Poly1305;.init:(Lorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.spongycastle.crypto.macs.Poly1305` v1 @kind this) @signature `Lorg/spongycastle/crypto/macs/Poly1305;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.spongycastle.crypto.macs.Poly1305` v2 @kind this, `byte` v3 ) @signature `Lorg/spongycastle/crypto/macs/Poly1305;.update:(B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.spongycastle.crypto.macs.Poly1305` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lorg/spongycastle/crypto/macs/Poly1305;.update:([BII)V` @AccessFlag PUBLIC {

  # return;
}
