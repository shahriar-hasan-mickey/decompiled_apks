record `org.spongycastle.crypto.macs.OldHMac` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.Mac` @kind interface {
  `org.spongycastle.crypto.Digest` `org.spongycastle.crypto.macs.OldHMac.digest` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.macs.OldHMac.digestSize` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.macs.OldHMac.inputPad` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.macs.OldHMac.outputPad` @AccessFlag PRIVATE;
}
global `int` `@@org.spongycastle.crypto.macs.OldHMac.BLOCK_LENGTH` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte` `@@org.spongycastle.crypto.macs.OldHMac.IPAD` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte` `@@org.spongycastle.crypto.macs.OldHMac.OPAD` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.spongycastle.crypto.macs.OldHMac` v2 @kind this, `org.spongycastle.crypto.Digest` v3 @kind object) @signature `Lorg/spongycastle/crypto/macs/OldHMac;.<init>:(Lorg/spongycastle/crypto/Digest;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `doFinal`(`org.spongycastle.crypto.macs.OldHMac` v6 @kind this, `byte`[] v7 @kind object, `int` v8 ) @signature `Lorg/spongycastle/crypto/macs/OldHMac;.doFinal:([BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.spongycastle.crypto.macs.OldHMac` v2 @kind this) @signature `Lorg/spongycastle/crypto/macs/OldHMac;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getMacSize`(`org.spongycastle.crypto.macs.OldHMac` v1 @kind this) @signature `Lorg/spongycastle/crypto/macs/OldHMac;.getMacSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.crypto.Digest` `getUnderlyingDigest`(`org.spongycastle.crypto.macs.OldHMac` v1 @kind this) @signature `Lorg/spongycastle/crypto/macs/OldHMac;.getUnderlyingDigest:()Lorg/spongycastle/crypto/Digest;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.macs.OldHMac` v3 @kind this, `org.spongycastle.crypto.CipherParameters` v4 @kind object) @signature `Lorg/spongycastle/crypto/macs/OldHMac;.init:(Lorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.spongycastle.crypto.macs.OldHMac` v4 @kind this) @signature `Lorg/spongycastle/crypto/macs/OldHMac;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.spongycastle.crypto.macs.OldHMac` v1 @kind this, `byte` v2 ) @signature `Lorg/spongycastle/crypto/macs/OldHMac;.update:(B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.spongycastle.crypto.macs.OldHMac` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/spongycastle/crypto/macs/OldHMac;.update:([BII)V` @AccessFlag PUBLIC {

  # return;
}
