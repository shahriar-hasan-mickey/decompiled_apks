record `org.spongycastle.crypto.macs.GOST28147Mac` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.Mac` @kind interface {
  `byte`[] `org.spongycastle.crypto.macs.GOST28147Mac.S` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.macs.GOST28147Mac.blockSize` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.macs.GOST28147Mac.buf` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.macs.GOST28147Mac.bufOff` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.crypto.macs.GOST28147Mac.firstStep` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.macs.GOST28147Mac.mac` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.macs.GOST28147Mac.macSize` @AccessFlag PRIVATE;
  `int`[] `org.spongycastle.crypto.macs.GOST28147Mac.workingKey` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.crypto.macs.GOST28147Mac` v2 @kind this) @signature `Lorg/spongycastle/crypto/macs/GOST28147Mac;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `byte`[] `CM5func`(`org.spongycastle.crypto.macs.GOST28147Mac` v3 @kind this, `byte`[] v4 @kind object, `int` v5 , `byte`[] v6 @kind object) @signature `Lorg/spongycastle/crypto/macs/GOST28147Mac;.CM5func:([BI[B)[B` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `bytesToint`(`org.spongycastle.crypto.macs.GOST28147Mac` v3 @kind this, `byte`[] v4 @kind object, `int` v5 ) @signature `Lorg/spongycastle/crypto/macs/GOST28147Mac;.bytesToint:([BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int`[] `generateWorkingKey`(`org.spongycastle.crypto.macs.GOST28147Mac` v4 @kind this, `byte`[] v5 @kind object) @signature `Lorg/spongycastle/crypto/macs/GOST28147Mac;.generateWorkingKey:([B)[I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `gost28147MacFunc`(`org.spongycastle.crypto.macs.GOST28147Mac` v5 @kind this, `int`[] v6 @kind object, `byte`[] v7 @kind object, `int` v8 , `byte`[] v9 @kind object, `int` v10 ) @signature `Lorg/spongycastle/crypto/macs/GOST28147Mac;.gost28147MacFunc:([I[BI[BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `gost28147_mainStep`(`org.spongycastle.crypto.macs.GOST28147Mac` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lorg/spongycastle/crypto/macs/GOST28147Mac;.gost28147_mainStep:(II)I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `intTobytes`(`org.spongycastle.crypto.macs.GOST28147Mac` v2 @kind this, `int` v3 , `byte`[] v4 @kind object, `int` v5 ) @signature `Lorg/spongycastle/crypto/macs/GOST28147Mac;.intTobytes:(I[BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `doFinal`(`org.spongycastle.crypto.macs.GOST28147Mac` v8 @kind this, `byte`[] v9 @kind object, `int` v10 ) @signature `Lorg/spongycastle/crypto/macs/GOST28147Mac;.doFinal:([BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.spongycastle.crypto.macs.GOST28147Mac` v1 @kind this) @signature `Lorg/spongycastle/crypto/macs/GOST28147Mac;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getMacSize`(`org.spongycastle.crypto.macs.GOST28147Mac` v1 @kind this) @signature `Lorg/spongycastle/crypto/macs/GOST28147Mac;.getMacSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.macs.GOST28147Mac` v4 @kind this, `org.spongycastle.crypto.CipherParameters` v5 @kind object) @signature `Lorg/spongycastle/crypto/macs/GOST28147Mac;.init:(Lorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.spongycastle.crypto.macs.GOST28147Mac` v4 @kind this) @signature `Lorg/spongycastle/crypto/macs/GOST28147Mac;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.spongycastle.crypto.macs.GOST28147Mac` v10 @kind this, `byte` v11 ) @signature `Lorg/spongycastle/crypto/macs/GOST28147Mac;.update:(B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.spongycastle.crypto.macs.GOST28147Mac` v11 @kind this, `byte`[] v12 @kind object, `int` v13 , `int` v14 ) @signature `Lorg/spongycastle/crypto/macs/GOST28147Mac;.update:([BII)V` @AccessFlag PUBLIC {

  # return;
}
