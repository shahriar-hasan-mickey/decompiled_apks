record `org.spongycastle.crypto.agreement.srp.SRP6Util` @kind class @AccessFlag PUBLIC {
}
global `java.math.BigInteger` `@@org.spongycastle.crypto.agreement.srp.SRP6Util.ONE` @AccessFlag PRIVATE_STATIC;
global `java.math.BigInteger` `@@org.spongycastle.crypto.agreement.srp.SRP6Util.ZERO` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/crypto/agreement/srp/SRP6Util;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.agreement.srp.SRP6Util` v0 @kind this) @signature `Lorg/spongycastle/crypto/agreement/srp/SRP6Util;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.math.BigInteger` `calculateK`(`org.spongycastle.crypto.Digest` v0 @kind object, `java.math.BigInteger` v1 @kind object, `java.math.BigInteger` v2 @kind object) @signature `Lorg/spongycastle/crypto/agreement/srp/SRP6Util;.calculateK:(Lorg/spongycastle/crypto/Digest;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.math.BigInteger` `calculateKey`(`org.spongycastle.crypto.Digest` v1 @kind object, `java.math.BigInteger` v2 @kind object, `java.math.BigInteger` v3 @kind object) @signature `Lorg/spongycastle/crypto/agreement/srp/SRP6Util;.calculateKey:(Lorg/spongycastle/crypto/Digest;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.math.BigInteger` `calculateM1`(`org.spongycastle.crypto.Digest` v0 @kind object, `java.math.BigInteger` v1 @kind object, `java.math.BigInteger` v2 @kind object, `java.math.BigInteger` v3 @kind object, `java.math.BigInteger` v4 @kind object) @signature `Lorg/spongycastle/crypto/agreement/srp/SRP6Util;.calculateM1:(Lorg/spongycastle/crypto/Digest;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.math.BigInteger` `calculateM2`(`org.spongycastle.crypto.Digest` v0 @kind object, `java.math.BigInteger` v1 @kind object, `java.math.BigInteger` v2 @kind object, `java.math.BigInteger` v3 @kind object, `java.math.BigInteger` v4 @kind object) @signature `Lorg/spongycastle/crypto/agreement/srp/SRP6Util;.calculateM2:(Lorg/spongycastle/crypto/Digest;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.math.BigInteger` `calculateU`(`org.spongycastle.crypto.Digest` v0 @kind object, `java.math.BigInteger` v1 @kind object, `java.math.BigInteger` v2 @kind object, `java.math.BigInteger` v3 @kind object) @signature `Lorg/spongycastle/crypto/agreement/srp/SRP6Util;.calculateU:(Lorg/spongycastle/crypto/Digest;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.math.BigInteger` `calculateX`(`org.spongycastle.crypto.Digest` v3 @kind object, `java.math.BigInteger` v4 @kind object, `byte`[] v5 @kind object, `byte`[] v6 @kind object, `byte`[] v7 @kind object) @signature `Lorg/spongycastle/crypto/agreement/srp/SRP6Util;.calculateX:(Lorg/spongycastle/crypto/Digest;Ljava/math/BigInteger;[B[B[B)Ljava/math/BigInteger;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.math.BigInteger` `generatePrivateValue`(`org.spongycastle.crypto.Digest` v0 @kind object, `java.math.BigInteger` v1 @kind object, `java.math.BigInteger` v2 @kind object, `java.security.SecureRandom` v3 @kind object) @signature `Lorg/spongycastle/crypto/agreement/srp/SRP6Util;.generatePrivateValue:(Lorg/spongycastle/crypto/Digest;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/security/SecureRandom;)Ljava/math/BigInteger;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `getPadded`(`java.math.BigInteger` v3 @kind object, `int` v4 ) @signature `Lorg/spongycastle/crypto/agreement/srp/SRP6Util;.getPadded:(Ljava/math/BigInteger;I)[B` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.math.BigInteger` `hashPaddedPair`(`org.spongycastle.crypto.Digest` v1 @kind object, `java.math.BigInteger` v2 @kind object, `java.math.BigInteger` v3 @kind object, `java.math.BigInteger` v4 @kind object) @signature `Lorg/spongycastle/crypto/agreement/srp/SRP6Util;.hashPaddedPair:(Lorg/spongycastle/crypto/Digest;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.math.BigInteger` `hashPaddedTriplet`(`org.spongycastle.crypto.Digest` v1 @kind object, `java.math.BigInteger` v2 @kind object, `java.math.BigInteger` v3 @kind object, `java.math.BigInteger` v4 @kind object, `java.math.BigInteger` v5 @kind object) @signature `Lorg/spongycastle/crypto/agreement/srp/SRP6Util;.hashPaddedTriplet:(Lorg/spongycastle/crypto/Digest;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.math.BigInteger` `validatePublicValue`(`java.math.BigInteger` v0 @kind object, `java.math.BigInteger` v1 @kind object) @signature `Lorg/spongycastle/crypto/agreement/srp/SRP6Util;.validatePublicValue:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @AccessFlag PUBLIC_STATIC {

  # return;
}
