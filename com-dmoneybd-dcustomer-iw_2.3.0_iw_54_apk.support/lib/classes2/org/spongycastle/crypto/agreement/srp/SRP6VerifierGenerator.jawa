record `org.spongycastle.crypto.agreement.srp.SRP6VerifierGenerator` @kind class @AccessFlag PUBLIC {
  `java.math.BigInteger` `org.spongycastle.crypto.agreement.srp.SRP6VerifierGenerator.N` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.Digest` `org.spongycastle.crypto.agreement.srp.SRP6VerifierGenerator.digest` @AccessFlag PROTECTED;
  `java.math.BigInteger` `org.spongycastle.crypto.agreement.srp.SRP6VerifierGenerator.g` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.spongycastle.crypto.agreement.srp.SRP6VerifierGenerator` v0 @kind this) @signature `Lorg/spongycastle/crypto/agreement/srp/SRP6VerifierGenerator;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.math.BigInteger` `generateVerifier`(`org.spongycastle.crypto.agreement.srp.SRP6VerifierGenerator` v2 @kind this, `byte`[] v3 @kind object, `byte`[] v4 @kind object, `byte`[] v5 @kind object) @signature `Lorg/spongycastle/crypto/agreement/srp/SRP6VerifierGenerator;.generateVerifier:([B[B[B)Ljava/math/BigInteger;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.agreement.srp.SRP6VerifierGenerator` v0 @kind this, `java.math.BigInteger` v1 @kind object, `java.math.BigInteger` v2 @kind object, `org.spongycastle.crypto.Digest` v3 @kind object) @signature `Lorg/spongycastle/crypto/agreement/srp/SRP6VerifierGenerator;.init:(Ljava/math/BigInteger;Ljava/math/BigInteger;Lorg/spongycastle/crypto/Digest;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.agreement.srp.SRP6VerifierGenerator` v1 @kind this, `org.spongycastle.crypto.params.SRP6GroupParameters` v2 @kind object, `org.spongycastle.crypto.Digest` v3 @kind object) @signature `Lorg/spongycastle/crypto/agreement/srp/SRP6VerifierGenerator;.init:(Lorg/spongycastle/crypto/params/SRP6GroupParameters;Lorg/spongycastle/crypto/Digest;)V` @AccessFlag PUBLIC {

  # return;
}
