record `org.spongycastle.crypto.engines.Grainv1Engine` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.StreamCipher` @kind interface {
  `int` `org.spongycastle.crypto.engines.Grainv1Engine.index` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.crypto.engines.Grainv1Engine.initialised` @AccessFlag PRIVATE;
  `int`[] `org.spongycastle.crypto.engines.Grainv1Engine.lfsr` @AccessFlag PRIVATE;
  `int`[] `org.spongycastle.crypto.engines.Grainv1Engine.nfsr` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.engines.Grainv1Engine.out` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.engines.Grainv1Engine.output` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.engines.Grainv1Engine.workingIV` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.engines.Grainv1Engine.workingKey` @AccessFlag PRIVATE;
}
global `int` `@@org.spongycastle.crypto.engines.Grainv1Engine.STATE_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.spongycastle.crypto.engines.Grainv1Engine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/Grainv1Engine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `byte` `getKeyStream`(`org.spongycastle.crypto.engines.Grainv1Engine` v3 @kind this) @signature `Lorg/spongycastle/crypto/engines/Grainv1Engine;.getKeyStream:()B` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `getOutput`(`org.spongycastle.crypto.engines.Grainv1Engine` v15 @kind this) @signature `Lorg/spongycastle/crypto/engines/Grainv1Engine;.getOutput:()I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `getOutputLFSR`(`org.spongycastle.crypto.engines.Grainv1Engine` v10 @kind this) @signature `Lorg/spongycastle/crypto/engines/Grainv1Engine;.getOutputLFSR:()I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `getOutputNFSR`(`org.spongycastle.crypto.engines.Grainv1Engine` v19 @kind this) @signature `Lorg/spongycastle/crypto/engines/Grainv1Engine;.getOutputNFSR:()I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `initGrain`(`org.spongycastle.crypto.engines.Grainv1Engine` v5 @kind this) @signature `Lorg/spongycastle/crypto/engines/Grainv1Engine;.initGrain:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `oneRound`(`org.spongycastle.crypto.engines.Grainv1Engine` v4 @kind this) @signature `Lorg/spongycastle/crypto/engines/Grainv1Engine;.oneRound:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `setKey`(`org.spongycastle.crypto.engines.Grainv1Engine` v5 @kind this, `byte`[] v6 @kind object, `byte`[] v7 @kind object) @signature `Lorg/spongycastle/crypto/engines/Grainv1Engine;.setKey:([B[B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int`[] `shift`(`org.spongycastle.crypto.engines.Grainv1Engine` v3 @kind this, `int`[] v4 @kind object, `int` v5 ) @signature `Lorg/spongycastle/crypto/engines/Grainv1Engine;.shift:([II)[I` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.spongycastle.crypto.engines.Grainv1Engine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/Grainv1Engine;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.engines.Grainv1Engine` v3 @kind this, `boolean` v4 , `org.spongycastle.crypto.CipherParameters` v5 @kind object) @signature `Lorg/spongycastle/crypto/engines/Grainv1Engine;.init:(ZLorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBytes`(`org.spongycastle.crypto.engines.Grainv1Engine` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 , `byte`[] v8 @kind object, `int` v9 ) @signature `Lorg/spongycastle/crypto/engines/Grainv1Engine;.processBytes:([BII[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.spongycastle.crypto.engines.Grainv1Engine` v2 @kind this) @signature `Lorg/spongycastle/crypto/engines/Grainv1Engine;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte` `returnByte`(`org.spongycastle.crypto.engines.Grainv1Engine` v2 @kind this, `byte` v3 ) @signature `Lorg/spongycastle/crypto/engines/Grainv1Engine;.returnByte:(B)B` @AccessFlag PUBLIC {

  # return;
}
