record `org.spongycastle.crypto.engines.ISAACEngine` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.StreamCipher` @kind interface {
  `int` `org.spongycastle.crypto.engines.ISAACEngine.a` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.engines.ISAACEngine.b` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.engines.ISAACEngine.c` @AccessFlag PRIVATE;
  `int`[] `org.spongycastle.crypto.engines.ISAACEngine.engineState` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.engines.ISAACEngine.index` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.crypto.engines.ISAACEngine.initialised` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.engines.ISAACEngine.keyStream` @AccessFlag PRIVATE;
  `int`[] `org.spongycastle.crypto.engines.ISAACEngine.results` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.engines.ISAACEngine.sizeL` @AccessFlag PRIVATE_FINAL;
  `int` `org.spongycastle.crypto.engines.ISAACEngine.stateArraySize` @AccessFlag PRIVATE_FINAL;
  `byte`[] `org.spongycastle.crypto.engines.ISAACEngine.workingKey` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.crypto.engines.ISAACEngine` v3 @kind this) @signature `Lorg/spongycastle/crypto/engines/ISAACEngine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `isaac`(`org.spongycastle.crypto.engines.ISAACEngine` v6 @kind this) @signature `Lorg/spongycastle/crypto/engines/ISAACEngine;.isaac:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `mix`(`org.spongycastle.crypto.engines.ISAACEngine` v9 @kind this, `int`[] v10 @kind object) @signature `Lorg/spongycastle/crypto/engines/ISAACEngine;.mix:([I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `setKey`(`org.spongycastle.crypto.engines.ISAACEngine` v10 @kind this, `byte`[] v11 @kind object) @signature `Lorg/spongycastle/crypto/engines/ISAACEngine;.setKey:([B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.spongycastle.crypto.engines.ISAACEngine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/ISAACEngine;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.engines.ISAACEngine` v2 @kind this, `boolean` v3 , `org.spongycastle.crypto.CipherParameters` v4 @kind object) @signature `Lorg/spongycastle/crypto/engines/ISAACEngine;.init:(ZLorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBytes`(`org.spongycastle.crypto.engines.ISAACEngine` v5 @kind this, `byte`[] v6 @kind object, `int` v7 , `int` v8 , `byte`[] v9 @kind object, `int` v10 ) @signature `Lorg/spongycastle/crypto/engines/ISAACEngine;.processBytes:([BII[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.spongycastle.crypto.engines.ISAACEngine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/ISAACEngine;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte` `returnByte`(`org.spongycastle.crypto.engines.ISAACEngine` v2 @kind this, `byte` v3 ) @signature `Lorg/spongycastle/crypto/engines/ISAACEngine;.returnByte:(B)B` @AccessFlag PUBLIC {

  # return;
}
