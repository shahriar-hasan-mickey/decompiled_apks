record `org.spongycastle.crypto.engines.NaccacheSternEngine` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.AsymmetricBlockCipher` @kind interface {
  `boolean` `org.spongycastle.crypto.engines.NaccacheSternEngine.debug` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.crypto.engines.NaccacheSternEngine.forEncryption` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.params.NaccacheSternKeyParameters` `org.spongycastle.crypto.engines.NaccacheSternEngine.key` @AccessFlag PRIVATE;
  `java.util.Vector`[] `org.spongycastle.crypto.engines.NaccacheSternEngine.lookup` @AccessFlag PRIVATE;
}
global `java.math.BigInteger` `@@org.spongycastle.crypto.engines.NaccacheSternEngine.ONE` @AccessFlag PRIVATE_STATIC;
global `java.math.BigInteger` `@@org.spongycastle.crypto.engines.NaccacheSternEngine.ZERO` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/crypto/engines/NaccacheSternEngine;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.engines.NaccacheSternEngine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/NaccacheSternEngine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.math.BigInteger` `chineseRemainder`(`java.util.Vector` v5 @kind object, `java.util.Vector` v6 @kind object) @signature `Lorg/spongycastle/crypto/engines/NaccacheSternEngine;.chineseRemainder:(Ljava/util/Vector;Ljava/util/Vector;)Ljava/math/BigInteger;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `byte`[] `addCryptedBlocks`(`org.spongycastle.crypto.engines.NaccacheSternEngine` v4 @kind this, `byte`[] v5 @kind object, `byte`[] v6 @kind object) @signature `Lorg/spongycastle/crypto/engines/NaccacheSternEngine;.addCryptedBlocks:([B[B)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `encrypt`(`org.spongycastle.crypto.engines.NaccacheSternEngine` v4 @kind this, `java.math.BigInteger` v5 @kind object) @signature `Lorg/spongycastle/crypto/engines/NaccacheSternEngine;.encrypt:(Ljava/math/BigInteger;)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getInputBlockSize`(`org.spongycastle.crypto.engines.NaccacheSternEngine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/NaccacheSternEngine;.getInputBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getOutputBlockSize`(`org.spongycastle.crypto.engines.NaccacheSternEngine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/NaccacheSternEngine;.getOutputBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.engines.NaccacheSternEngine` v9 @kind this, `boolean` v10 , `org.spongycastle.crypto.CipherParameters` v11 @kind object) @signature `Lorg/spongycastle/crypto/engines/NaccacheSternEngine;.init:(ZLorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `processBlock`(`org.spongycastle.crypto.engines.NaccacheSternEngine` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lorg/spongycastle/crypto/engines/NaccacheSternEngine;.processBlock:([BII)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `processData`(`org.spongycastle.crypto.engines.NaccacheSternEngine` v11 @kind this, `byte`[] v12 @kind object) @signature `Lorg/spongycastle/crypto/engines/NaccacheSternEngine;.processData:([B)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setDebug`(`org.spongycastle.crypto.engines.NaccacheSternEngine` v0 @kind this, `boolean` v1 ) @signature `Lorg/spongycastle/crypto/engines/NaccacheSternEngine;.setDebug:(Z)V` @AccessFlag PUBLIC {

  # return;
}
