record `org.spongycastle.crypto.engines.RSAEngine` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.AsymmetricBlockCipher` @kind interface {
  `org.spongycastle.crypto.engines.RSACoreEngine` `org.spongycastle.crypto.engines.RSAEngine.core` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.crypto.engines.RSAEngine` v0 @kind this) @signature `Lorg/spongycastle/crypto/engines/RSAEngine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `getInputBlockSize`(`org.spongycastle.crypto.engines.RSAEngine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/RSAEngine;.getInputBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getOutputBlockSize`(`org.spongycastle.crypto.engines.RSAEngine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/RSAEngine;.getOutputBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.engines.RSAEngine` v1 @kind this, `boolean` v2 , `org.spongycastle.crypto.CipherParameters` v3 @kind object) @signature `Lorg/spongycastle/crypto/engines/RSAEngine;.init:(ZLorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `processBlock`(`org.spongycastle.crypto.engines.RSAEngine` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/spongycastle/crypto/engines/RSAEngine;.processBlock:([BII)[B` @AccessFlag PUBLIC {

  # return;
}
