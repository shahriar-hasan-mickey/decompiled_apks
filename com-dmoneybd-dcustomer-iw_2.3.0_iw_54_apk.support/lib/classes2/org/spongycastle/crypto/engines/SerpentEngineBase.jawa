record `org.spongycastle.crypto.engines.SerpentEngineBase` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.spongycastle.crypto.BlockCipher` @kind interface {
  `int` `org.spongycastle.crypto.engines.SerpentEngineBase.X0` @AccessFlag PROTECTED;
  `int` `org.spongycastle.crypto.engines.SerpentEngineBase.X1` @AccessFlag PROTECTED;
  `int` `org.spongycastle.crypto.engines.SerpentEngineBase.X2` @AccessFlag PROTECTED;
  `int` `org.spongycastle.crypto.engines.SerpentEngineBase.X3` @AccessFlag PROTECTED;
  `boolean` `org.spongycastle.crypto.engines.SerpentEngineBase.encrypting` @AccessFlag PROTECTED;
  `int`[] `org.spongycastle.crypto.engines.SerpentEngineBase.wKey` @AccessFlag PROTECTED;
}
global `int` `@@org.spongycastle.crypto.engines.SerpentEngineBase.BLOCK_SIZE` @AccessFlag PROTECTED_STATIC_FINAL;
procedure `void` `<init>`(`org.spongycastle.crypto.engines.SerpentEngineBase` v0 @kind this) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `int` `rotateLeft`(`int` v1 , `int` v2 ) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.rotateLeft:(II)I` @AccessFlag PROTECTED_STATIC {

  # return;
}
procedure `int` `rotateRight`(`int` v1 , `int` v2 ) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.rotateRight:(II)I` @AccessFlag PROTECTED_STATIC {

  # return;
}
procedure `void` `LT`(`org.spongycastle.crypto.engines.SerpentEngineBase` v5 @kind this) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.LT:()V` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `void` `decryptBlock`(`byte`[] v0 @kind object, `int` v1 , `byte`[] v2 @kind object, `int` v3 ) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.decryptBlock:([BI[BI)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `encryptBlock`(`byte`[] v0 @kind object, `int` v1 , `byte`[] v2 @kind object, `int` v3 ) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.encryptBlock:([BI[BI)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.spongycastle.crypto.engines.SerpentEngineBase` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getBlockSize`(`org.spongycastle.crypto.engines.SerpentEngineBase` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.getBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `ib0`(`org.spongycastle.crypto.engines.SerpentEngineBase` v3 @kind this, `int` v4 , `int` v5 , `int` v6 , `int` v7 ) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.ib0:(IIII)V` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `void` `ib1`(`org.spongycastle.crypto.engines.SerpentEngineBase` v1 @kind this, `int` v2 , `int` v3 , `int` v4 , `int` v5 ) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.ib1:(IIII)V` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `void` `ib2`(`org.spongycastle.crypto.engines.SerpentEngineBase` v3 @kind this, `int` v4 , `int` v5 , `int` v6 , `int` v7 ) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.ib2:(IIII)V` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `void` `ib3`(`org.spongycastle.crypto.engines.SerpentEngineBase` v3 @kind this, `int` v4 , `int` v5 , `int` v6 , `int` v7 ) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.ib3:(IIII)V` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `void` `ib4`(`org.spongycastle.crypto.engines.SerpentEngineBase` v2 @kind this, `int` v3 , `int` v4 , `int` v5 , `int` v6 ) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.ib4:(IIII)V` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `void` `ib5`(`org.spongycastle.crypto.engines.SerpentEngineBase` v5 @kind this, `int` v6 , `int` v7 , `int` v8 , `int` v9 ) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.ib5:(IIII)V` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `void` `ib6`(`org.spongycastle.crypto.engines.SerpentEngineBase` v3 @kind this, `int` v4 , `int` v5 , `int` v6 , `int` v7 ) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.ib6:(IIII)V` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `void` `ib7`(`org.spongycastle.crypto.engines.SerpentEngineBase` v4 @kind this, `int` v5 , `int` v6 , `int` v7 , `int` v8 ) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.ib7:(IIII)V` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.engines.SerpentEngineBase` v2 @kind this, `boolean` v3 , `org.spongycastle.crypto.CipherParameters` v4 @kind object) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.init:(ZLorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `inverseLT`(`org.spongycastle.crypto.engines.SerpentEngineBase` v5 @kind this) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.inverseLT:()V` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `int`[] `makeWorkingKey`(`byte`[] v0 @kind object) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.makeWorkingKey:([B)[I` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `int` `processBlock`(`org.spongycastle.crypto.engines.SerpentEngineBase` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `byte`[] v5 @kind object, `int` v6 ) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.processBlock:([BI[BI)I` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `reset`(`org.spongycastle.crypto.engines.SerpentEngineBase` v0 @kind this) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `sb0`(`org.spongycastle.crypto.engines.SerpentEngineBase` v3 @kind this, `int` v4 , `int` v5 , `int` v6 , `int` v7 ) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.sb0:(IIII)V` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `void` `sb1`(`org.spongycastle.crypto.engines.SerpentEngineBase` v1 @kind this, `int` v2 , `int` v3 , `int` v4 , `int` v5 ) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.sb1:(IIII)V` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `void` `sb2`(`org.spongycastle.crypto.engines.SerpentEngineBase` v4 @kind this, `int` v5 , `int` v6 , `int` v7 , `int` v8 ) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.sb2:(IIII)V` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `void` `sb3`(`org.spongycastle.crypto.engines.SerpentEngineBase` v3 @kind this, `int` v4 , `int` v5 , `int` v6 , `int` v7 ) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.sb3:(IIII)V` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `void` `sb4`(`org.spongycastle.crypto.engines.SerpentEngineBase` v2 @kind this, `int` v3 , `int` v4 , `int` v5 , `int` v6 ) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.sb4:(IIII)V` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `void` `sb5`(`org.spongycastle.crypto.engines.SerpentEngineBase` v3 @kind this, `int` v4 , `int` v5 , `int` v6 , `int` v7 ) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.sb5:(IIII)V` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `void` `sb6`(`org.spongycastle.crypto.engines.SerpentEngineBase` v2 @kind this, `int` v3 , `int` v4 , `int` v5 , `int` v6 ) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.sb6:(IIII)V` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `void` `sb7`(`org.spongycastle.crypto.engines.SerpentEngineBase` v2 @kind this, `int` v3 , `int` v4 , `int` v5 , `int` v6 ) @signature `Lorg/spongycastle/crypto/engines/SerpentEngineBase;.sb7:(IIII)V` @AccessFlag PROTECTED_FINAL {

  # return;
}
