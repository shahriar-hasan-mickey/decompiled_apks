record `org.spongycastle.crypto.engines.RSABlindingEngine` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.AsymmetricBlockCipher` @kind interface {
  `java.math.BigInteger` `org.spongycastle.crypto.engines.RSABlindingEngine.blindingFactor` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.engines.RSACoreEngine` `org.spongycastle.crypto.engines.RSABlindingEngine.core` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.crypto.engines.RSABlindingEngine.forEncryption` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.params.RSAKeyParameters` `org.spongycastle.crypto.engines.RSABlindingEngine.key` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.crypto.engines.RSABlindingEngine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/RSABlindingEngine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.math.BigInteger` `blindMessage`(`org.spongycastle.crypto.engines.RSABlindingEngine` v3 @kind this, `java.math.BigInteger` v4 @kind object) @signature `Lorg/spongycastle/crypto/engines/RSABlindingEngine;.blindMessage:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.math.BigInteger` `unblindMessage`(`org.spongycastle.crypto.engines.RSABlindingEngine` v2 @kind this, `java.math.BigInteger` v3 @kind object) @signature `Lorg/spongycastle/crypto/engines/RSABlindingEngine;.unblindMessage:(Ljava/math/BigInteger;)Ljava/math/BigInteger;` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `getInputBlockSize`(`org.spongycastle.crypto.engines.RSABlindingEngine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/RSABlindingEngine;.getInputBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getOutputBlockSize`(`org.spongycastle.crypto.engines.RSABlindingEngine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/RSABlindingEngine;.getOutputBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.engines.RSABlindingEngine` v2 @kind this, `boolean` v3 , `org.spongycastle.crypto.CipherParameters` v4 @kind object) @signature `Lorg/spongycastle/crypto/engines/RSABlindingEngine;.init:(ZLorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `processBlock`(`org.spongycastle.crypto.engines.RSABlindingEngine` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/spongycastle/crypto/engines/RSABlindingEngine;.processBlock:([BII)[B` @AccessFlag PUBLIC {

  # return;
}
