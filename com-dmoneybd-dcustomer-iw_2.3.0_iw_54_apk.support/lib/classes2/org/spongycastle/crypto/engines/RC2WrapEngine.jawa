record `org.spongycastle.crypto.engines.RC2WrapEngine` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.Wrapper` @kind interface {
  `org.spongycastle.crypto.Digest` `org.spongycastle.crypto.engines.RC2WrapEngine.a` @AccessFlag ;
  `byte`[] `org.spongycastle.crypto.engines.RC2WrapEngine.b` @AccessFlag ;
  `org.spongycastle.crypto.modes.CBCBlockCipher` `org.spongycastle.crypto.engines.RC2WrapEngine.engine` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.crypto.engines.RC2WrapEngine.forWrapping` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.engines.RC2WrapEngine.iv` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.CipherParameters` `org.spongycastle.crypto.engines.RC2WrapEngine.param` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.params.ParametersWithIV` `org.spongycastle.crypto.engines.RC2WrapEngine.paramPlusIV` @AccessFlag PRIVATE;
  `java.security.SecureRandom` `org.spongycastle.crypto.engines.RC2WrapEngine.sr` @AccessFlag PRIVATE;
}
global `byte`[] `@@org.spongycastle.crypto.engines.RC2WrapEngine.IV2` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/crypto/engines/RC2WrapEngine;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.engines.RC2WrapEngine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/RC2WrapEngine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `byte`[] `calculateCMSKeyChecksum`(`org.spongycastle.crypto.engines.RC2WrapEngine` v5 @kind this, `byte`[] v6 @kind object) @signature `Lorg/spongycastle/crypto/engines/RC2WrapEngine;.calculateCMSKeyChecksum:([B)[B` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `checkCMSKeyChecksum`(`org.spongycastle.crypto.engines.RC2WrapEngine` v0 @kind this, `byte`[] v1 @kind object, `byte`[] v2 @kind object) @signature `Lorg/spongycastle/crypto/engines/RC2WrapEngine;.checkCMSKeyChecksum:([B[B)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.spongycastle.crypto.engines.RC2WrapEngine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/RC2WrapEngine;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.engines.RC2WrapEngine` v1 @kind this, `boolean` v2 , `org.spongycastle.crypto.CipherParameters` v3 @kind object) @signature `Lorg/spongycastle/crypto/engines/RC2WrapEngine;.init:(ZLorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `unwrap`(`org.spongycastle.crypto.engines.RC2WrapEngine` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 ) @signature `Lorg/spongycastle/crypto/engines/RC2WrapEngine;.unwrap:([BII)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `wrap`(`org.spongycastle.crypto.engines.RC2WrapEngine` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lorg/spongycastle/crypto/engines/RC2WrapEngine;.wrap:([BII)[B` @AccessFlag PUBLIC {

  # return;
}
