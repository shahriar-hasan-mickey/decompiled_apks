record `org.spongycastle.crypto.engines.RC564Engine` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.BlockCipher` @kind interface {
  `long`[] `org.spongycastle.crypto.engines.RC564Engine._S` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.engines.RC564Engine._noRounds` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.crypto.engines.RC564Engine.forEncryption` @AccessFlag PRIVATE;
}
global `long` `@@org.spongycastle.crypto.engines.RC564Engine.P64` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.spongycastle.crypto.engines.RC564Engine.Q64` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@org.spongycastle.crypto.engines.RC564Engine.bytesPerWord` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@org.spongycastle.crypto.engines.RC564Engine.wordSize` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.spongycastle.crypto.engines.RC564Engine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/RC564Engine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `long` `bytesToWord`(`org.spongycastle.crypto.engines.RC564Engine` v5 @kind this, `byte`[] v6 @kind object, `int` v7 ) @signature `Lorg/spongycastle/crypto/engines/RC564Engine;.bytesToWord:([BI)J` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `decryptBlock`(`org.spongycastle.crypto.engines.RC564Engine` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `byte`[] v10 @kind object, `int` v11 ) @signature `Lorg/spongycastle/crypto/engines/RC564Engine;.decryptBlock:([BI[BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `encryptBlock`(`org.spongycastle.crypto.engines.RC564Engine` v8 @kind this, `byte`[] v9 @kind object, `int` v10 , `byte`[] v11 @kind object, `int` v12 ) @signature `Lorg/spongycastle/crypto/engines/RC564Engine;.encryptBlock:([BI[BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `long` `rotateLeft`(`org.spongycastle.crypto.engines.RC564Engine` v4 @kind this, `long` v5 , `long` v7 ) @signature `Lorg/spongycastle/crypto/engines/RC564Engine;.rotateLeft:(JJ)J` @AccessFlag PRIVATE {

  # return;
}
procedure `long` `rotateRight`(`org.spongycastle.crypto.engines.RC564Engine` v4 @kind this, `long` v5 , `long` v7 ) @signature `Lorg/spongycastle/crypto/engines/RC564Engine;.rotateRight:(JJ)J` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `setKey`(`org.spongycastle.crypto.engines.RC564Engine` v13 @kind this, `byte`[] v14 @kind object) @signature `Lorg/spongycastle/crypto/engines/RC564Engine;.setKey:([B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `wordToBytes`(`org.spongycastle.crypto.engines.RC564Engine` v4 @kind this, `long` v5 , `byte`[] v7 @kind object, `int` v8 ) @signature `Lorg/spongycastle/crypto/engines/RC564Engine;.wordToBytes:(J[BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.spongycastle.crypto.engines.RC564Engine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/RC564Engine;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getBlockSize`(`org.spongycastle.crypto.engines.RC564Engine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/RC564Engine;.getBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.engines.RC564Engine` v2 @kind this, `boolean` v3 , `org.spongycastle.crypto.CipherParameters` v4 @kind object) @signature `Lorg/spongycastle/crypto/engines/RC564Engine;.init:(ZLorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBlock`(`org.spongycastle.crypto.engines.RC564Engine` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `byte`[] v4 @kind object, `int` v5 ) @signature `Lorg/spongycastle/crypto/engines/RC564Engine;.processBlock:([BI[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.spongycastle.crypto.engines.RC564Engine` v0 @kind this) @signature `Lorg/spongycastle/crypto/engines/RC564Engine;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
