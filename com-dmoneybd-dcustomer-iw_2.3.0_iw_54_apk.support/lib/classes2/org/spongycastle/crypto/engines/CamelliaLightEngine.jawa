record `org.spongycastle.crypto.engines.CamelliaLightEngine` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.BlockCipher` @kind interface {
  `boolean` `org.spongycastle.crypto.engines.CamelliaLightEngine._keyis128` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.crypto.engines.CamelliaLightEngine.initialized` @AccessFlag PRIVATE;
  `int`[] `org.spongycastle.crypto.engines.CamelliaLightEngine.ke` @AccessFlag PRIVATE;
  `int`[] `org.spongycastle.crypto.engines.CamelliaLightEngine.kw` @AccessFlag PRIVATE;
  `int`[] `org.spongycastle.crypto.engines.CamelliaLightEngine.state` @AccessFlag PRIVATE;
  `int`[] `org.spongycastle.crypto.engines.CamelliaLightEngine.subkey` @AccessFlag PRIVATE;
}
global `int` `@@org.spongycastle.crypto.engines.CamelliaLightEngine.BLOCK_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@org.spongycastle.crypto.engines.CamelliaLightEngine.MASK8` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@org.spongycastle.crypto.engines.CamelliaLightEngine.SBOX1` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.spongycastle.crypto.engines.CamelliaLightEngine.SIGMA` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/crypto/engines/CamelliaLightEngine;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.engines.CamelliaLightEngine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/CamelliaLightEngine;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `bytes2int`(`org.spongycastle.crypto.engines.CamelliaLightEngine` v3 @kind this, `byte`[] v4 @kind object, `int` v5 ) @signature `Lorg/spongycastle/crypto/engines/CamelliaLightEngine;.bytes2int:([BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `camelliaF2`(`org.spongycastle.crypto.engines.CamelliaLightEngine` v9 @kind this, `int`[] v10 @kind object, `int`[] v11 @kind object, `int` v12 ) @signature `Lorg/spongycastle/crypto/engines/CamelliaLightEngine;.camelliaF2:([I[II)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `camelliaFLs`(`org.spongycastle.crypto.engines.CamelliaLightEngine` v6 @kind this, `int`[] v7 @kind object, `int`[] v8 @kind object, `int` v9 ) @signature `Lorg/spongycastle/crypto/engines/CamelliaLightEngine;.camelliaFLs:([I[II)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `decroldq`(`int` v9 , `int`[] v10 @kind object, `int` v11 , `int`[] v12 @kind object, `int` v13 ) @signature `Lorg/spongycastle/crypto/engines/CamelliaLightEngine;.decroldq:(I[II[II)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `decroldqo32`(`int` v9 , `int`[] v10 @kind object, `int` v11 , `int`[] v12 @kind object, `int` v13 ) @signature `Lorg/spongycastle/crypto/engines/CamelliaLightEngine;.decroldqo32:(I[II[II)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `int2bytes`(`org.spongycastle.crypto.engines.CamelliaLightEngine` v3 @kind this, `int` v4 , `byte`[] v5 @kind object, `int` v6 ) @signature `Lorg/spongycastle/crypto/engines/CamelliaLightEngine;.int2bytes:(I[BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `byte` `lRot8`(`org.spongycastle.crypto.engines.CamelliaLightEngine` v1 @kind this, `byte` v2 , `int` v3 ) @signature `Lorg/spongycastle/crypto/engines/CamelliaLightEngine;.lRot8:(BI)B` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `leftRotate`(`int` v1 , `int` v2 ) @signature `Lorg/spongycastle/crypto/engines/CamelliaLightEngine;.leftRotate:(II)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `processBlock128`(`org.spongycastle.crypto.engines.CamelliaLightEngine` v8 @kind this, `byte`[] v9 @kind object, `int` v10 , `byte`[] v11 @kind object, `int` v12 ) @signature `Lorg/spongycastle/crypto/engines/CamelliaLightEngine;.processBlock128:([BI[BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `processBlock192or256`(`org.spongycastle.crypto.engines.CamelliaLightEngine` v8 @kind this, `byte`[] v9 @kind object, `int` v10 , `byte`[] v11 @kind object, `int` v12 ) @signature `Lorg/spongycastle/crypto/engines/CamelliaLightEngine;.processBlock192or256:([BI[BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `rightRotate`(`int` v1 , `int` v2 ) @signature `Lorg/spongycastle/crypto/engines/CamelliaLightEngine;.rightRotate:(II)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `roldq`(`int` v9 , `int`[] v10 @kind object, `int` v11 , `int`[] v12 @kind object, `int` v13 ) @signature `Lorg/spongycastle/crypto/engines/CamelliaLightEngine;.roldq:(I[II[II)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `roldqo32`(`int` v9 , `int`[] v10 @kind object, `int` v11 , `int`[] v12 @kind object, `int` v13 ) @signature `Lorg/spongycastle/crypto/engines/CamelliaLightEngine;.roldqo32:(I[II[II)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `sbox2`(`org.spongycastle.crypto.engines.CamelliaLightEngine` v1 @kind this, `int` v2 ) @signature `Lorg/spongycastle/crypto/engines/CamelliaLightEngine;.sbox2:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `sbox3`(`org.spongycastle.crypto.engines.CamelliaLightEngine` v1 @kind this, `int` v2 ) @signature `Lorg/spongycastle/crypto/engines/CamelliaLightEngine;.sbox3:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `sbox4`(`org.spongycastle.crypto.engines.CamelliaLightEngine` v2 @kind this, `int` v3 ) @signature `Lorg/spongycastle/crypto/engines/CamelliaLightEngine;.sbox4:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `setKey`(`org.spongycastle.crypto.engines.CamelliaLightEngine` v23 @kind this, `boolean` v24 , `byte`[] v25 @kind object) @signature `Lorg/spongycastle/crypto/engines/CamelliaLightEngine;.setKey:(Z[B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.spongycastle.crypto.engines.CamelliaLightEngine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/CamelliaLightEngine;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getBlockSize`(`org.spongycastle.crypto.engines.CamelliaLightEngine` v1 @kind this) @signature `Lorg/spongycastle/crypto/engines/CamelliaLightEngine;.getBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.engines.CamelliaLightEngine` v1 @kind this, `boolean` v2 , `org.spongycastle.crypto.CipherParameters` v3 @kind object) @signature `Lorg/spongycastle/crypto/engines/CamelliaLightEngine;.init:(ZLorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBlock`(`org.spongycastle.crypto.engines.CamelliaLightEngine` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `byte`[] v5 @kind object, `int` v6 ) @signature `Lorg/spongycastle/crypto/engines/CamelliaLightEngine;.processBlock:([BI[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.spongycastle.crypto.engines.CamelliaLightEngine` v0 @kind this) @signature `Lorg/spongycastle/crypto/engines/CamelliaLightEngine;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
