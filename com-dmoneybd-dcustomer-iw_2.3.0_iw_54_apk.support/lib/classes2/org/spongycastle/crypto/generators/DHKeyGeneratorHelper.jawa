record `org.spongycastle.crypto.generators.DHKeyGeneratorHelper` @kind class @AccessFlag  {
}
global `java.math.BigInteger` `@@org.spongycastle.crypto.generators.DHKeyGeneratorHelper.ONE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.math.BigInteger` `@@org.spongycastle.crypto.generators.DHKeyGeneratorHelper.TWO` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.spongycastle.crypto.generators.DHKeyGeneratorHelper` `@@org.spongycastle.crypto.generators.DHKeyGeneratorHelper.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/crypto/generators/DHKeyGeneratorHelper;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.generators.DHKeyGeneratorHelper` v0 @kind this) @signature `Lorg/spongycastle/crypto/generators/DHKeyGeneratorHelper;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `java.math.BigInteger` `a`(`org.spongycastle.crypto.generators.DHKeyGeneratorHelper` v4 @kind this, `org.spongycastle.crypto.params.DHParameters` v5 @kind object, `java.security.SecureRandom` v6 @kind object) @signature `Lorg/spongycastle/crypto/generators/DHKeyGeneratorHelper;.a:(Lorg/spongycastle/crypto/params/DHParameters;Ljava/security/SecureRandom;)Ljava/math/BigInteger;` @AccessFlag  {

  # return;
}
procedure `java.math.BigInteger` `b`(`org.spongycastle.crypto.generators.DHKeyGeneratorHelper` v1 @kind this, `org.spongycastle.crypto.params.DHParameters` v2 @kind object, `java.math.BigInteger` v3 @kind object) @signature `Lorg/spongycastle/crypto/generators/DHKeyGeneratorHelper;.b:(Lorg/spongycastle/crypto/params/DHParameters;Ljava/math/BigInteger;)Ljava/math/BigInteger;` @AccessFlag  {

  # return;
}
