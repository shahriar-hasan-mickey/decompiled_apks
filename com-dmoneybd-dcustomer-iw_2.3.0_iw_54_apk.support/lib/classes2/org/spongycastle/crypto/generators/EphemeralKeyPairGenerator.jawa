record `org.spongycastle.crypto.generators.EphemeralKeyPairGenerator` @kind class @AccessFlag PUBLIC {
  `org.spongycastle.crypto.AsymmetricCipherKeyPairGenerator` `org.spongycastle.crypto.generators.EphemeralKeyPairGenerator.gen` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.KeyEncoder` `org.spongycastle.crypto.generators.EphemeralKeyPairGenerator.keyEncoder` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.crypto.generators.EphemeralKeyPairGenerator` v0 @kind this, `org.spongycastle.crypto.AsymmetricCipherKeyPairGenerator` v1 @kind object, `org.spongycastle.crypto.KeyEncoder` v2 @kind object) @signature `Lorg/spongycastle/crypto/generators/EphemeralKeyPairGenerator;.<init>:(Lorg/spongycastle/crypto/AsymmetricCipherKeyPairGenerator;Lorg/spongycastle/crypto/KeyEncoder;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.crypto.EphemeralKeyPair` `generate`(`org.spongycastle.crypto.generators.EphemeralKeyPairGenerator` v3 @kind this) @signature `Lorg/spongycastle/crypto/generators/EphemeralKeyPairGenerator;.generate:()Lorg/spongycastle/crypto/EphemeralKeyPair;` @AccessFlag PUBLIC {

  # return;
}
