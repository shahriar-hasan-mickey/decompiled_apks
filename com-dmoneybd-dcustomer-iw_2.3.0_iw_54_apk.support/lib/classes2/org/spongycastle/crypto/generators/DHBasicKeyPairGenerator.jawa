record `org.spongycastle.crypto.generators.DHBasicKeyPairGenerator` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.AsymmetricCipherKeyPairGenerator` @kind interface {
  `org.spongycastle.crypto.params.DHKeyGenerationParameters` `org.spongycastle.crypto.generators.DHBasicKeyPairGenerator.param` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.crypto.generators.DHBasicKeyPairGenerator` v0 @kind this) @signature `Lorg/spongycastle/crypto/generators/DHBasicKeyPairGenerator;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.crypto.AsymmetricCipherKeyPair` `generateKeyPair`(`org.spongycastle.crypto.generators.DHBasicKeyPairGenerator` v5 @kind this) @signature `Lorg/spongycastle/crypto/generators/DHBasicKeyPairGenerator;.generateKeyPair:()Lorg/spongycastle/crypto/AsymmetricCipherKeyPair;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.generators.DHBasicKeyPairGenerator` v0 @kind this, `org.spongycastle.crypto.KeyGenerationParameters` v1 @kind object) @signature `Lorg/spongycastle/crypto/generators/DHBasicKeyPairGenerator;.init:(Lorg/spongycastle/crypto/KeyGenerationParameters;)V` @AccessFlag PUBLIC {

  # return;
}
