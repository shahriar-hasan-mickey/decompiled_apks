record `org.spongycastle.crypto.generators.RSABlindingFactorGenerator` @kind class @AccessFlag PUBLIC {
  `org.spongycastle.crypto.params.RSAKeyParameters` `org.spongycastle.crypto.generators.RSABlindingFactorGenerator.key` @AccessFlag PRIVATE;
  `java.security.SecureRandom` `org.spongycastle.crypto.generators.RSABlindingFactorGenerator.random` @AccessFlag PRIVATE;
}
global `java.math.BigInteger` `@@org.spongycastle.crypto.generators.RSABlindingFactorGenerator.ONE` @AccessFlag PRIVATE_STATIC;
global `java.math.BigInteger` `@@org.spongycastle.crypto.generators.RSABlindingFactorGenerator.ZERO` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/crypto/generators/RSABlindingFactorGenerator;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.generators.RSABlindingFactorGenerator` v0 @kind this) @signature `Lorg/spongycastle/crypto/generators/RSABlindingFactorGenerator;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.math.BigInteger` `generateBlindingFactor`(`org.spongycastle.crypto.generators.RSABlindingFactorGenerator` v5 @kind this) @signature `Lorg/spongycastle/crypto/generators/RSABlindingFactorGenerator;.generateBlindingFactor:()Ljava/math/BigInteger;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.generators.RSABlindingFactorGenerator` v1 @kind this, `org.spongycastle.crypto.CipherParameters` v2 @kind object) @signature `Lorg/spongycastle/crypto/generators/RSABlindingFactorGenerator;.init:(Lorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
