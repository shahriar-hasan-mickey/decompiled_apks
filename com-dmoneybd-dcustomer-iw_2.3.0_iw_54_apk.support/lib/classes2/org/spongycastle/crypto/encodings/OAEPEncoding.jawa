record `org.spongycastle.crypto.encodings.OAEPEncoding` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.AsymmetricBlockCipher` @kind interface {
  `byte`[] `org.spongycastle.crypto.encodings.OAEPEncoding.defHash` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.AsymmetricBlockCipher` `org.spongycastle.crypto.encodings.OAEPEncoding.engine` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.crypto.encodings.OAEPEncoding.forEncryption` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.Digest` `org.spongycastle.crypto.encodings.OAEPEncoding.mgf1Hash` @AccessFlag PRIVATE;
  `java.security.SecureRandom` `org.spongycastle.crypto.encodings.OAEPEncoding.random` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.crypto.encodings.OAEPEncoding` v2 @kind this, `org.spongycastle.crypto.AsymmetricBlockCipher` v3 @kind object) @signature `Lorg/spongycastle/crypto/encodings/OAEPEncoding;.<init>:(Lorg/spongycastle/crypto/AsymmetricBlockCipher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.encodings.OAEPEncoding` v1 @kind this, `org.spongycastle.crypto.AsymmetricBlockCipher` v2 @kind object, `org.spongycastle.crypto.Digest` v3 @kind object) @signature `Lorg/spongycastle/crypto/encodings/OAEPEncoding;.<init>:(Lorg/spongycastle/crypto/AsymmetricBlockCipher;Lorg/spongycastle/crypto/Digest;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.encodings.OAEPEncoding` v0 @kind this, `org.spongycastle.crypto.AsymmetricBlockCipher` v1 @kind object, `org.spongycastle.crypto.Digest` v2 @kind object, `org.spongycastle.crypto.Digest` v3 @kind object, `byte`[] v4 @kind object) @signature `Lorg/spongycastle/crypto/encodings/OAEPEncoding;.<init>:(Lorg/spongycastle/crypto/AsymmetricBlockCipher;Lorg/spongycastle/crypto/Digest;Lorg/spongycastle/crypto/Digest;[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.encodings.OAEPEncoding` v0 @kind this, `org.spongycastle.crypto.AsymmetricBlockCipher` v1 @kind object, `org.spongycastle.crypto.Digest` v2 @kind object, `byte`[] v3 @kind object) @signature `Lorg/spongycastle/crypto/encodings/OAEPEncoding;.<init>:(Lorg/spongycastle/crypto/AsymmetricBlockCipher;Lorg/spongycastle/crypto/Digest;[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `ItoOSP`(`org.spongycastle.crypto.encodings.OAEPEncoding` v3 @kind this, `int` v4 , `byte`[] v5 @kind object) @signature `Lorg/spongycastle/crypto/encodings/OAEPEncoding;.ItoOSP:(I[B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `byte`[] `maskGeneratorFunction1`(`org.spongycastle.crypto.encodings.OAEPEncoding` v8 @kind this, `byte`[] v9 @kind object, `int` v10 , `int` v11 , `int` v12 ) @signature `Lorg/spongycastle/crypto/encodings/OAEPEncoding;.maskGeneratorFunction1:([BIII)[B` @AccessFlag PRIVATE {

  # return;
}
procedure `byte`[] `decodeBlock`(`org.spongycastle.crypto.encodings.OAEPEncoding` v4 @kind this, `byte`[] v5 @kind object, `int` v6 , `int` v7 ) @signature `Lorg/spongycastle/crypto/encodings/OAEPEncoding;.decodeBlock:([BII)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `encodeBlock`(`org.spongycastle.crypto.encodings.OAEPEncoding` v5 @kind this, `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lorg/spongycastle/crypto/encodings/OAEPEncoding;.encodeBlock:([BII)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getInputBlockSize`(`org.spongycastle.crypto.encodings.OAEPEncoding` v2 @kind this) @signature `Lorg/spongycastle/crypto/encodings/OAEPEncoding;.getInputBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getOutputBlockSize`(`org.spongycastle.crypto.encodings.OAEPEncoding` v2 @kind this) @signature `Lorg/spongycastle/crypto/encodings/OAEPEncoding;.getOutputBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.crypto.AsymmetricBlockCipher` `getUnderlyingCipher`(`org.spongycastle.crypto.encodings.OAEPEncoding` v1 @kind this) @signature `Lorg/spongycastle/crypto/encodings/OAEPEncoding;.getUnderlyingCipher:()Lorg/spongycastle/crypto/AsymmetricBlockCipher;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.encodings.OAEPEncoding` v1 @kind this, `boolean` v2 , `org.spongycastle.crypto.CipherParameters` v3 @kind object) @signature `Lorg/spongycastle/crypto/encodings/OAEPEncoding;.init:(ZLorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `processBlock`(`org.spongycastle.crypto.encodings.OAEPEncoding` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/spongycastle/crypto/encodings/OAEPEncoding;.processBlock:([BII)[B` @AccessFlag PUBLIC {

  # return;
}
