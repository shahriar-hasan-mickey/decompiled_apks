record `org.spongycastle.crypto.tls.TlsPSKKeyExchange` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.tls.AbstractTlsKeyExchange` @kind class {
  `short`[] `org.spongycastle.crypto.tls.TlsPSKKeyExchange.clientECPointFormats` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.params.DHPrivateKeyParameters` `org.spongycastle.crypto.tls.TlsPSKKeyExchange.dhAgreePrivateKey` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.params.DHPublicKeyParameters` `org.spongycastle.crypto.tls.TlsPSKKeyExchange.dhAgreePublicKey` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.params.DHParameters` `org.spongycastle.crypto.tls.TlsPSKKeyExchange.dhParameters` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.params.ECPrivateKeyParameters` `org.spongycastle.crypto.tls.TlsPSKKeyExchange.ecAgreePrivateKey` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.params.ECPublicKeyParameters` `org.spongycastle.crypto.tls.TlsPSKKeyExchange.ecAgreePublicKey` @AccessFlag PROTECTED;
  `int`[] `org.spongycastle.crypto.tls.TlsPSKKeyExchange.namedCurves` @AccessFlag PROTECTED;
  `byte`[] `org.spongycastle.crypto.tls.TlsPSKKeyExchange.premasterSecret` @AccessFlag PROTECTED;
  `byte`[] `org.spongycastle.crypto.tls.TlsPSKKeyExchange.psk` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.tls.TlsPSKIdentity` `org.spongycastle.crypto.tls.TlsPSKKeyExchange.pskIdentity` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.tls.TlsPSKIdentityManager` `org.spongycastle.crypto.tls.TlsPSKKeyExchange.pskIdentityManager` @AccessFlag PROTECTED;
  `byte`[] `org.spongycastle.crypto.tls.TlsPSKKeyExchange.psk_identity_hint` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.params.RSAKeyParameters` `org.spongycastle.crypto.tls.TlsPSKKeyExchange.rsaServerPublicKey` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.tls.TlsEncryptionCredentials` `org.spongycastle.crypto.tls.TlsPSKKeyExchange.serverCredentials` @AccessFlag PROTECTED;
  `short`[] `org.spongycastle.crypto.tls.TlsPSKKeyExchange.serverECPointFormats` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.params.AsymmetricKeyParameter` `org.spongycastle.crypto.tls.TlsPSKKeyExchange.serverPublicKey` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.TlsPSKKeyExchange` v0 @kind this, `int` v1 , `java.util.Vector` v2 @kind object, `org.spongycastle.crypto.tls.TlsPSKIdentity` v3 @kind object, `org.spongycastle.crypto.tls.TlsPSKIdentityManager` v4 @kind object, `org.spongycastle.crypto.params.DHParameters` v5 @kind object, `int`[] v6 @kind object, `short`[] v7 @kind object, `short`[] v8 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsPSKKeyExchange;.<init>:(ILjava/util/Vector;Lorg/spongycastle/crypto/tls/TlsPSKIdentity;Lorg/spongycastle/crypto/tls/TlsPSKIdentityManager;Lorg/spongycastle/crypto/params/DHParameters;[I[S[S)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `generateClientKeyExchange`(`org.spongycastle.crypto.tls.TlsPSKKeyExchange` v3 @kind this, `java.io.OutputStream` v4 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsPSKKeyExchange;.generateClientKeyExchange:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `generateOtherSecret`(`org.spongycastle.crypto.tls.TlsPSKKeyExchange` v3 @kind this, `int` v4 ) @signature `Lorg/spongycastle/crypto/tls/TlsPSKKeyExchange;.generateOtherSecret:(I)[B` @AccessFlag PROTECTED {

  # return;
}
procedure `byte`[] `generatePremasterSecret`(`org.spongycastle.crypto.tls.TlsPSKKeyExchange` v4 @kind this) @signature `Lorg/spongycastle/crypto/tls/TlsPSKKeyExchange;.generatePremasterSecret:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `generateServerKeyExchange`(`org.spongycastle.crypto.tls.TlsPSKKeyExchange` v4 @kind this) @signature `Lorg/spongycastle/crypto/tls/TlsPSKKeyExchange;.generateServerKeyExchange:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processClientCredentials`(`org.spongycastle.crypto.tls.TlsPSKKeyExchange` v1 @kind this, `org.spongycastle.crypto.tls.TlsCredentials` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsPSKKeyExchange;.processClientCredentials:(Lorg/spongycastle/crypto/tls/TlsCredentials;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processClientKeyExchange`(`org.spongycastle.crypto.tls.TlsPSKKeyExchange` v2 @kind this, `java.io.InputStream` v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsPSKKeyExchange;.processClientKeyExchange:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processServerCertificate`(`org.spongycastle.crypto.tls.TlsPSKKeyExchange` v2 @kind this, `org.spongycastle.crypto.tls.Certificate` v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsPSKKeyExchange;.processServerCertificate:(Lorg/spongycastle/crypto/tls/Certificate;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processServerCredentials`(`org.spongycastle.crypto.tls.TlsPSKKeyExchange` v1 @kind this, `org.spongycastle.crypto.tls.TlsCredentials` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsPSKKeyExchange;.processServerCredentials:(Lorg/spongycastle/crypto/tls/TlsCredentials;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processServerKeyExchange`(`org.spongycastle.crypto.tls.TlsPSKKeyExchange` v2 @kind this, `java.io.InputStream` v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsPSKKeyExchange;.processServerKeyExchange:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `requiresServerKeyExchange`(`org.spongycastle.crypto.tls.TlsPSKKeyExchange` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/TlsPSKKeyExchange;.requiresServerKeyExchange:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `skipServerCredentials`(`org.spongycastle.crypto.tls.TlsPSKKeyExchange` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/TlsPSKKeyExchange;.skipServerCredentials:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `validateCertificateRequest`(`org.spongycastle.crypto.tls.TlsPSKKeyExchange` v1 @kind this, `org.spongycastle.crypto.tls.CertificateRequest` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsPSKKeyExchange;.validateCertificateRequest:(Lorg/spongycastle/crypto/tls/CertificateRequest;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.crypto.params.RSAKeyParameters` `validateRSAPublicKey`(`org.spongycastle.crypto.tls.TlsPSKKeyExchange` v2 @kind this, `org.spongycastle.crypto.params.RSAKeyParameters` v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsPSKKeyExchange;.validateRSAPublicKey:(Lorg/spongycastle/crypto/params/RSAKeyParameters;)Lorg/spongycastle/crypto/params/RSAKeyParameters;` @AccessFlag PROTECTED {

  # return;
}
