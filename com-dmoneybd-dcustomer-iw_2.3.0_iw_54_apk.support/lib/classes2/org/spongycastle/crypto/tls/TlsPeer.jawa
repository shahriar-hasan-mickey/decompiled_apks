record `org.spongycastle.crypto.tls.TlsPeer` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `org.spongycastle.crypto.tls.TlsCipher` `getCipher`() @signature `Lorg/spongycastle/crypto/tls/TlsPeer;.getCipher:()Lorg/spongycastle/crypto/tls/TlsCipher;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsCompression` `getCompression`() @signature `Lorg/spongycastle/crypto/tls/TlsPeer;.getCompression:()Lorg/spongycastle/crypto/tls/TlsCompression;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `notifyAlertRaised`(`short` v0 , `short` v1 , `java.lang.String` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsPeer;.notifyAlertRaised:(SSLjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `notifyAlertReceived`(`short` v0 , `short` v1 ) @signature `Lorg/spongycastle/crypto/tls/TlsPeer;.notifyAlertReceived:(SS)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `notifyHandshakeComplete`() @signature `Lorg/spongycastle/crypto/tls/TlsPeer;.notifyHandshakeComplete:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `notifySecureRenegotiation`(`boolean` v0 ) @signature `Lorg/spongycastle/crypto/tls/TlsPeer;.notifySecureRenegotiation:(Z)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `shouldUseGMTUnixTime`() @signature `Lorg/spongycastle/crypto/tls/TlsPeer;.shouldUseGMTUnixTime:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
