record `org.spongycastle.crypto.tls.SRPTlsServer` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.tls.AbstractTlsServer` @kind class {
  `org.spongycastle.crypto.tls.TlsSRPLoginParameters` `org.spongycastle.crypto.tls.SRPTlsServer.loginParameters` @AccessFlag PROTECTED;
  `byte`[] `org.spongycastle.crypto.tls.SRPTlsServer.srpIdentity` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.tls.TlsSRPIdentityManager` `org.spongycastle.crypto.tls.SRPTlsServer.srpIdentityManager` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.SRPTlsServer` v0 @kind this, `org.spongycastle.crypto.tls.TlsCipherFactory` v1 @kind object, `org.spongycastle.crypto.tls.TlsSRPIdentityManager` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/SRPTlsServer;.<init>:(Lorg/spongycastle/crypto/tls/TlsCipherFactory;Lorg/spongycastle/crypto/tls/TlsSRPIdentityManager;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.SRPTlsServer` v1 @kind this, `org.spongycastle.crypto.tls.TlsSRPIdentityManager` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/SRPTlsServer;.<init>:(Lorg/spongycastle/crypto/tls/TlsSRPIdentityManager;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsKeyExchange` `createSRPKeyExchange`(`org.spongycastle.crypto.tls.SRPTlsServer` v4 @kind this, `int` v5 ) @signature `Lorg/spongycastle/crypto/tls/SRPTlsServer;.createSRPKeyExchange:(I)Lorg/spongycastle/crypto/tls/TlsKeyExchange;` @AccessFlag PROTECTED {

  # return;
}
procedure `int`[] `getCipherSuites`(`org.spongycastle.crypto.tls.SRPTlsServer` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/SRPTlsServer;.getCipherSuites:()[I` @AccessFlag PROTECTED {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsCredentials` `getCredentials`(`org.spongycastle.crypto.tls.SRPTlsServer` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/SRPTlsServer;.getCredentials:()Lorg/spongycastle/crypto/tls/TlsCredentials;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsSignerCredentials` `getDSASignerCredentials`(`org.spongycastle.crypto.tls.SRPTlsServer` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/SRPTlsServer;.getDSASignerCredentials:()Lorg/spongycastle/crypto/tls/TlsSignerCredentials;` @AccessFlag PROTECTED {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsKeyExchange` `getKeyExchange`(`org.spongycastle.crypto.tls.SRPTlsServer` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/SRPTlsServer;.getKeyExchange:()Lorg/spongycastle/crypto/tls/TlsKeyExchange;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsSignerCredentials` `getRSASignerCredentials`(`org.spongycastle.crypto.tls.SRPTlsServer` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/SRPTlsServer;.getRSASignerCredentials:()Lorg/spongycastle/crypto/tls/TlsSignerCredentials;` @AccessFlag PROTECTED {

  # return;
}
procedure `int` `getSelectedCipherSuite`(`org.spongycastle.crypto.tls.SRPTlsServer` v3 @kind this) @signature `Lorg/spongycastle/crypto/tls/SRPTlsServer;.getSelectedCipherSuite:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processClientExtensions`(`org.spongycastle.crypto.tls.SRPTlsServer` v0 @kind this, `java.util.Hashtable` v1 @kind object) @signature `Lorg/spongycastle/crypto/tls/SRPTlsServer;.processClientExtensions:(Ljava/util/Hashtable;)V` @AccessFlag PUBLIC {

  # return;
}
