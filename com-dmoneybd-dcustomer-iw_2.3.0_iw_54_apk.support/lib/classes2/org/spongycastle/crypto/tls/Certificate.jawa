record `org.spongycastle.crypto.tls.Certificate` @kind class @AccessFlag PUBLIC {
  `org.spongycastle.asn1.x509.Certificate`[] `org.spongycastle.crypto.tls.Certificate.certificateList` @AccessFlag PROTECTED;
}
global `org.spongycastle.crypto.tls.Certificate` `@@org.spongycastle.crypto.tls.Certificate.EMPTY_CHAIN` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/crypto/tls/Certificate;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.Certificate` v1 @kind this, `org.spongycastle.asn1.x509.Certificate`[] v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/Certificate;.<init>:([Lorg/spongycastle/asn1/x509/Certificate;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.crypto.tls.Certificate` `parse`(`java.io.InputStream` v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/Certificate;.parse:(Ljava/io/InputStream;)Lorg/spongycastle/crypto/tls/Certificate;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.asn1.x509.Certificate`[] `cloneCertificateList`(`org.spongycastle.crypto.tls.Certificate` v4 @kind this) @signature `Lorg/spongycastle/crypto/tls/Certificate;.cloneCertificateList:()[Lorg/spongycastle/asn1/x509/Certificate;` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `encode`(`org.spongycastle.crypto.tls.Certificate` v6 @kind this, `java.io.OutputStream` v7 @kind object) @signature `Lorg/spongycastle/crypto/tls/Certificate;.encode:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.asn1.x509.Certificate` `getCertificateAt`(`org.spongycastle.crypto.tls.Certificate` v1 @kind this, `int` v2 ) @signature `Lorg/spongycastle/crypto/tls/Certificate;.getCertificateAt:(I)Lorg/spongycastle/asn1/x509/Certificate;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.asn1.x509.Certificate`[] `getCertificateList`(`org.spongycastle.crypto.tls.Certificate` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/Certificate;.getCertificateList:()[Lorg/spongycastle/asn1/x509/Certificate;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getLength`(`org.spongycastle.crypto.tls.Certificate` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/Certificate;.getLength:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isEmpty`(`org.spongycastle.crypto.tls.Certificate` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/Certificate;.isEmpty:()Z` @AccessFlag PUBLIC {

  # return;
}
