record `org.spongycastle.crypto.tls.PSKTlsClient` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.tls.AbstractTlsClient` @kind class {
  `org.spongycastle.crypto.tls.TlsPSKIdentity` `org.spongycastle.crypto.tls.PSKTlsClient.pskIdentity` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.PSKTlsClient` v0 @kind this, `org.spongycastle.crypto.tls.TlsCipherFactory` v1 @kind object, `org.spongycastle.crypto.tls.TlsPSKIdentity` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/PSKTlsClient;.<init>:(Lorg/spongycastle/crypto/tls/TlsCipherFactory;Lorg/spongycastle/crypto/tls/TlsPSKIdentity;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.PSKTlsClient` v1 @kind this, `org.spongycastle.crypto.tls.TlsPSKIdentity` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/PSKTlsClient;.<init>:(Lorg/spongycastle/crypto/tls/TlsPSKIdentity;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsKeyExchange` `createPSKKeyExchange`(`org.spongycastle.crypto.tls.PSKTlsClient` v10 @kind this, `int` v11 ) @signature `Lorg/spongycastle/crypto/tls/PSKTlsClient;.createPSKKeyExchange:(I)Lorg/spongycastle/crypto/tls/TlsKeyExchange;` @AccessFlag PROTECTED {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsAuthentication` `getAuthentication`(`org.spongycastle.crypto.tls.PSKTlsClient` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/PSKTlsClient;.getAuthentication:()Lorg/spongycastle/crypto/tls/TlsAuthentication;` @AccessFlag PUBLIC {

  # return;
}
procedure `int`[] `getCipherSuites`(`org.spongycastle.crypto.tls.PSKTlsClient` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/PSKTlsClient;.getCipherSuites:()[I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsKeyExchange` `getKeyExchange`(`org.spongycastle.crypto.tls.PSKTlsClient` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/PSKTlsClient;.getKeyExchange:()Lorg/spongycastle/crypto/tls/TlsKeyExchange;` @AccessFlag PUBLIC {

  # return;
}
