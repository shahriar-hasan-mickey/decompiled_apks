record `org.spongycastle.crypto.tls.TlsKeyExchange` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `void` `generateClientKeyExchange`(`java.io.OutputStream` v0 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsKeyExchange;.generateClientKeyExchange:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte`[] `generatePremasterSecret`() @signature `Lorg/spongycastle/crypto/tls/TlsKeyExchange;.generatePremasterSecret:()[B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte`[] `generateServerKeyExchange`() @signature `Lorg/spongycastle/crypto/tls/TlsKeyExchange;.generateServerKeyExchange:()[B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.tls.TlsContext` v0 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsKeyExchange;.init:(Lorg/spongycastle/crypto/tls/TlsContext;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `processClientCertificate`(`org.spongycastle.crypto.tls.Certificate` v0 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsKeyExchange;.processClientCertificate:(Lorg/spongycastle/crypto/tls/Certificate;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `processClientCredentials`(`org.spongycastle.crypto.tls.TlsCredentials` v0 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsKeyExchange;.processClientCredentials:(Lorg/spongycastle/crypto/tls/TlsCredentials;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `processClientKeyExchange`(`java.io.InputStream` v0 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsKeyExchange;.processClientKeyExchange:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `processServerCertificate`(`org.spongycastle.crypto.tls.Certificate` v0 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsKeyExchange;.processServerCertificate:(Lorg/spongycastle/crypto/tls/Certificate;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `processServerCredentials`(`org.spongycastle.crypto.tls.TlsCredentials` v0 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsKeyExchange;.processServerCredentials:(Lorg/spongycastle/crypto/tls/TlsCredentials;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `processServerKeyExchange`(`java.io.InputStream` v0 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsKeyExchange;.processServerKeyExchange:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `requiresServerKeyExchange`() @signature `Lorg/spongycastle/crypto/tls/TlsKeyExchange;.requiresServerKeyExchange:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `skipClientCredentials`() @signature `Lorg/spongycastle/crypto/tls/TlsKeyExchange;.skipClientCredentials:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `skipServerCredentials`() @signature `Lorg/spongycastle/crypto/tls/TlsKeyExchange;.skipServerCredentials:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `skipServerKeyExchange`() @signature `Lorg/spongycastle/crypto/tls/TlsKeyExchange;.skipServerKeyExchange:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `validateCertificateRequest`(`org.spongycastle.crypto.tls.CertificateRequest` v0 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsKeyExchange;.validateCertificateRequest:(Lorg/spongycastle/crypto/tls/CertificateRequest;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
