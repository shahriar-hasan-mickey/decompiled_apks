record `org.spongycastle.crypto.tls.TlsInputStream` @kind class @AccessFlag  extends `java.io.InputStream` @kind class {
  `byte`[] `org.spongycastle.crypto.tls.TlsInputStream.buf` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.tls.TlsProtocol` `org.spongycastle.crypto.tls.TlsInputStream.handler` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.TlsInputStream` v1 @kind this, `org.spongycastle.crypto.tls.TlsProtocol` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsInputStream;.<init>:(Lorg/spongycastle/crypto/tls/TlsProtocol;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `int` `available`(`org.spongycastle.crypto.tls.TlsInputStream` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/TlsInputStream;.available:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `close`(`org.spongycastle.crypto.tls.TlsInputStream` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/TlsInputStream;.close:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`org.spongycastle.crypto.tls.TlsInputStream` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/TlsInputStream;.read:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`org.spongycastle.crypto.tls.TlsInputStream` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/spongycastle/crypto/tls/TlsInputStream;.read:([BII)I` @AccessFlag PUBLIC {

  # return;
}
