record `org.spongycastle.crypto.tls.DTLSClientProtocol` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.tls.DTLSProtocol` @kind class {
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.DTLSClientProtocol` v0 @kind this, `java.security.SecureRandom` v1 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSClientProtocol;.<init>:(Ljava/security/SecureRandom;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `byte`[] `patchClientHelloWithCookie`(`byte`[] v5 @kind object, `byte`[] v6 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSClientProtocol;.patchClientHelloWithCookie:([B[B)[B` @AccessFlag PROTECTED_STATIC {

  # return;
}
procedure `org.spongycastle.crypto.tls.DTLSTransport` `clientHandshake`(`org.spongycastle.crypto.tls.DTLSClientProtocol` v13 @kind this, `org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState` v14 @kind object, `org.spongycastle.crypto.tls.DTLSRecordLayer` v15 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSClientProtocol;.clientHandshake:(Lorg/spongycastle/crypto/tls/DTLSClientProtocol$ClientHandshakeState;Lorg/spongycastle/crypto/tls/DTLSRecordLayer;)Lorg/spongycastle/crypto/tls/DTLSTransport;` @AccessFlag PROTECTED {

  # return;
}
procedure `org.spongycastle.crypto.tls.DTLSTransport` `connect`(`org.spongycastle.crypto.tls.DTLSClientProtocol` v4 @kind this, `org.spongycastle.crypto.tls.TlsClient` v5 @kind object, `org.spongycastle.crypto.tls.DatagramTransport` v6 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSClientProtocol;.connect:(Lorg/spongycastle/crypto/tls/TlsClient;Lorg/spongycastle/crypto/tls/DatagramTransport;)Lorg/spongycastle/crypto/tls/DTLSTransport;` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `generateCertificateVerify`(`org.spongycastle.crypto.tls.DTLSClientProtocol` v0 @kind this, `org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState` v1 @kind object, `org.spongycastle.crypto.tls.DigitallySigned` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSClientProtocol;.generateCertificateVerify:(Lorg/spongycastle/crypto/tls/DTLSClientProtocol$ClientHandshakeState;Lorg/spongycastle/crypto/tls/DigitallySigned;)[B` @AccessFlag PROTECTED {

  # return;
}
procedure `byte`[] `generateClientHello`(`org.spongycastle.crypto.tls.DTLSClientProtocol` v6 @kind this, `org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState` v7 @kind object, `org.spongycastle.crypto.tls.TlsClient` v8 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSClientProtocol;.generateClientHello:(Lorg/spongycastle/crypto/tls/DTLSClientProtocol$ClientHandshakeState;Lorg/spongycastle/crypto/tls/TlsClient;)[B` @AccessFlag PROTECTED {

  # return;
}
procedure `byte`[] `generateClientKeyExchange`(`org.spongycastle.crypto.tls.DTLSClientProtocol` v1 @kind this, `org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSClientProtocol;.generateClientKeyExchange:(Lorg/spongycastle/crypto/tls/DTLSClientProtocol$ClientHandshakeState;)[B` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `invalidateSession`(`org.spongycastle.crypto.tls.DTLSClientProtocol` v2 @kind this, `org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState` v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSClientProtocol;.invalidateSession:(Lorg/spongycastle/crypto/tls/DTLSClientProtocol$ClientHandshakeState;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `processCertificateRequest`(`org.spongycastle.crypto.tls.DTLSClientProtocol` v1 @kind this, `org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState` v2 @kind object, `byte`[] v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSClientProtocol;.processCertificateRequest:(Lorg/spongycastle/crypto/tls/DTLSClientProtocol$ClientHandshakeState;[B)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `processCertificateStatus`(`org.spongycastle.crypto.tls.DTLSClientProtocol` v1 @kind this, `org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState` v2 @kind object, `byte`[] v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSClientProtocol;.processCertificateStatus:(Lorg/spongycastle/crypto/tls/DTLSClientProtocol$ClientHandshakeState;[B)V` @AccessFlag PROTECTED {

  # return;
}
procedure `byte`[] `processHelloVerifyRequest`(`org.spongycastle.crypto.tls.DTLSClientProtocol` v2 @kind this, `org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState` v3 @kind object, `byte`[] v4 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSClientProtocol;.processHelloVerifyRequest:(Lorg/spongycastle/crypto/tls/DTLSClientProtocol$ClientHandshakeState;[B)[B` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `processNewSessionTicket`(`org.spongycastle.crypto.tls.DTLSClientProtocol` v1 @kind this, `org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState` v2 @kind object, `byte`[] v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSClientProtocol;.processNewSessionTicket:(Lorg/spongycastle/crypto/tls/DTLSClientProtocol$ClientHandshakeState;[B)V` @AccessFlag PROTECTED {

  # return;
}
procedure `org.spongycastle.crypto.tls.Certificate` `processServerCertificate`(`org.spongycastle.crypto.tls.DTLSClientProtocol` v1 @kind this, `org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState` v2 @kind object, `byte`[] v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSClientProtocol;.processServerCertificate:(Lorg/spongycastle/crypto/tls/DTLSClientProtocol$ClientHandshakeState;[B)Lorg/spongycastle/crypto/tls/Certificate;` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `processServerHello`(`org.spongycastle.crypto.tls.DTLSClientProtocol` v8 @kind this, `org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState` v9 @kind object, `byte`[] v10 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSClientProtocol;.processServerHello:(Lorg/spongycastle/crypto/tls/DTLSClientProtocol$ClientHandshakeState;[B)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `processServerKeyExchange`(`org.spongycastle.crypto.tls.DTLSClientProtocol` v1 @kind this, `org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState` v2 @kind object, `byte`[] v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSClientProtocol;.processServerKeyExchange:(Lorg/spongycastle/crypto/tls/DTLSClientProtocol$ClientHandshakeState;[B)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `processServerSupplementalData`(`org.spongycastle.crypto.tls.DTLSClientProtocol` v1 @kind this, `org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState` v2 @kind object, `byte`[] v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSClientProtocol;.processServerSupplementalData:(Lorg/spongycastle/crypto/tls/DTLSClientProtocol$ClientHandshakeState;[B)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `reportServerVersion`(`org.spongycastle.crypto.tls.DTLSClientProtocol` v2 @kind this, `org.spongycastle.crypto.tls.DTLSClientProtocol$ClientHandshakeState` v3 @kind object, `org.spongycastle.crypto.tls.ProtocolVersion` v4 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSClientProtocol;.reportServerVersion:(Lorg/spongycastle/crypto/tls/DTLSClientProtocol$ClientHandshakeState;Lorg/spongycastle/crypto/tls/ProtocolVersion;)V` @AccessFlag PROTECTED {

  # return;
}
