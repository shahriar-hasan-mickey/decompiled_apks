record `org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.tls.TlsSRPGroupVerifier` @kind interface {
  `java.util.Vector` `org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier.groups` @AccessFlag PROTECTED;
}
global `java.util.Vector` `@@org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier.DEFAULT_GROUPS` @AccessFlag PROTECTED_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/crypto/tls/DefaultTlsSRPGroupVerifier;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/DefaultTlsSRPGroupVerifier;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier` v0 @kind this, `java.util.Vector` v1 @kind object) @signature `Lorg/spongycastle/crypto/tls/DefaultTlsSRPGroupVerifier;.<init>:(Ljava/util/Vector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `accept`(`org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier` v3 @kind this, `org.spongycastle.crypto.params.SRP6GroupParameters` v4 @kind object) @signature `Lorg/spongycastle/crypto/tls/DefaultTlsSRPGroupVerifier;.accept:(Lorg/spongycastle/crypto/params/SRP6GroupParameters;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `areGroupsEqual`(`org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier` v2 @kind this, `org.spongycastle.crypto.params.SRP6GroupParameters` v3 @kind object, `org.spongycastle.crypto.params.SRP6GroupParameters` v4 @kind object) @signature `Lorg/spongycastle/crypto/tls/DefaultTlsSRPGroupVerifier;.areGroupsEqual:(Lorg/spongycastle/crypto/params/SRP6GroupParameters;Lorg/spongycastle/crypto/params/SRP6GroupParameters;)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `areParametersEqual`(`org.spongycastle.crypto.tls.DefaultTlsSRPGroupVerifier` v0 @kind this, `java.math.BigInteger` v1 @kind object, `java.math.BigInteger` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/DefaultTlsSRPGroupVerifier;.areParametersEqual:(Ljava/math/BigInteger;Ljava/math/BigInteger;)Z` @AccessFlag PROTECTED {

  # return;
}
