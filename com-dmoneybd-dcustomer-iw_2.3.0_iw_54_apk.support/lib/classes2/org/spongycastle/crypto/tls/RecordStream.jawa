record `org.spongycastle.crypto.tls.RecordStream` @kind class @AccessFlag  {
  `java.io.ByteArrayOutputStream` `org.spongycastle.crypto.tls.RecordStream.buffer` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.tls.RecordStream.ciphertextLimit` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.tls.RecordStream.compressedLimit` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.tls.TlsProtocol` `org.spongycastle.crypto.tls.RecordStream.handler` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.tls.TlsHandshakeHash` `org.spongycastle.crypto.tls.RecordStream.handshakeHash` @AccessFlag PRIVATE;
  `java.io.InputStream` `org.spongycastle.crypto.tls.RecordStream.input` @AccessFlag PRIVATE;
  `java.io.OutputStream` `org.spongycastle.crypto.tls.RecordStream.output` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.tls.TlsCipher` `org.spongycastle.crypto.tls.RecordStream.pendingCipher` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.tls.TlsCompression` `org.spongycastle.crypto.tls.RecordStream.pendingCompression` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.tls.RecordStream.plaintextLimit` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.tls.TlsCipher` `org.spongycastle.crypto.tls.RecordStream.readCipher` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.tls.TlsCompression` `org.spongycastle.crypto.tls.RecordStream.readCompression` @AccessFlag PRIVATE;
  `long` `org.spongycastle.crypto.tls.RecordStream.readSeqNo` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.tls.ProtocolVersion` `org.spongycastle.crypto.tls.RecordStream.readVersion` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.crypto.tls.RecordStream.restrictReadVersion` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.tls.TlsCipher` `org.spongycastle.crypto.tls.RecordStream.writeCipher` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.tls.TlsCompression` `org.spongycastle.crypto.tls.RecordStream.writeCompression` @AccessFlag PRIVATE;
  `long` `org.spongycastle.crypto.tls.RecordStream.writeSeqNo` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.tls.ProtocolVersion` `org.spongycastle.crypto.tls.RecordStream.writeVersion` @AccessFlag PRIVATE;
}
global `int` `@@org.spongycastle.crypto.tls.RecordStream.DEFAULT_PLAINTEXT_LIMIT` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/crypto/tls/RecordStream;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.RecordStream` v3 @kind this, `org.spongycastle.crypto.tls.TlsProtocol` v4 @kind object, `java.io.InputStream` v5 @kind object, `java.io.OutputStream` v6 @kind object) @signature `Lorg/spongycastle/crypto/tls/RecordStream;.<init>:(Lorg/spongycastle/crypto/tls/TlsProtocol;Ljava/io/InputStream;Ljava/io/OutputStream;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `checkLength`(`int` v0 , `int` v1 , `short` v2 ) @signature `Lorg/spongycastle/crypto/tls/RecordStream;.checkLength:(IIS)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `checkType`(`short` v0 , `short` v1 ) @signature `Lorg/spongycastle/crypto/tls/RecordStream;.checkType:(SS)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `byte`[] `getBufferContents`(`org.spongycastle.crypto.tls.RecordStream` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/RecordStream;.getBufferContents:()[B` @AccessFlag PRIVATE {

  # return;
}
procedure `byte`[] `a`(`org.spongycastle.crypto.tls.RecordStream` v9 @kind this, `short` v10 , `java.io.InputStream` v11 @kind object, `int` v12 ) @signature `Lorg/spongycastle/crypto/tls/RecordStream;.a:(SLjava/io/InputStream;I)[B` @AccessFlag  {

  # return;
}
procedure `void` `b`(`org.spongycastle.crypto.tls.RecordStream` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/RecordStream;.b:()V` @AccessFlag  {

  # return;
}
procedure `void` `c`(`org.spongycastle.crypto.tls.RecordStream` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/RecordStream;.c:()V` @AccessFlag  {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsHandshakeHash` `d`(`org.spongycastle.crypto.tls.RecordStream` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/RecordStream;.d:()Lorg/spongycastle/crypto/tls/TlsHandshakeHash;` @AccessFlag  {

  # return;
}
procedure `int` `e`(`org.spongycastle.crypto.tls.RecordStream` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/RecordStream;.e:()I` @AccessFlag  {

  # return;
}
procedure `org.spongycastle.crypto.tls.ProtocolVersion` `f`(`org.spongycastle.crypto.tls.RecordStream` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/RecordStream;.f:()Lorg/spongycastle/crypto/tls/ProtocolVersion;` @AccessFlag  {

  # return;
}
procedure `void` `g`(`org.spongycastle.crypto.tls.RecordStream` v1 @kind this, `org.spongycastle.crypto.tls.TlsContext` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/RecordStream;.g:(Lorg/spongycastle/crypto/tls/TlsContext;)V` @AccessFlag  {

  # return;
}
procedure `void` `h`(`org.spongycastle.crypto.tls.RecordStream` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/RecordStream;.h:()V` @AccessFlag  {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsHandshakeHash` `i`(`org.spongycastle.crypto.tls.RecordStream` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/RecordStream;.i:()Lorg/spongycastle/crypto/tls/TlsHandshakeHash;` @AccessFlag  {

  # return;
}
procedure `boolean` `j`(`org.spongycastle.crypto.tls.RecordStream` v7 @kind this) @signature `Lorg/spongycastle/crypto/tls/RecordStream;.j:()Z` @AccessFlag  {

  # return;
}
procedure `void` `k`(`org.spongycastle.crypto.tls.RecordStream` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/RecordStream;.k:()V` @AccessFlag  {

  # return;
}
procedure `void` `l`(`org.spongycastle.crypto.tls.RecordStream` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/RecordStream;.l:()V` @AccessFlag  {

  # return;
}
procedure `void` `m`(`org.spongycastle.crypto.tls.RecordStream` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/RecordStream;.m:()V` @AccessFlag  {

  # return;
}
procedure `void` `n`(`org.spongycastle.crypto.tls.RecordStream` v0 @kind this, `org.spongycastle.crypto.tls.TlsCompression` v1 @kind object, `org.spongycastle.crypto.tls.TlsCipher` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/RecordStream;.n:(Lorg/spongycastle/crypto/tls/TlsCompression;Lorg/spongycastle/crypto/tls/TlsCipher;)V` @AccessFlag  {

  # return;
}
procedure `void` `o`(`org.spongycastle.crypto.tls.RecordStream` v0 @kind this, `int` v1 ) @signature `Lorg/spongycastle/crypto/tls/RecordStream;.o:(I)V` @AccessFlag  {

  # return;
}
procedure `void` `p`(`org.spongycastle.crypto.tls.RecordStream` v0 @kind this, `org.spongycastle.crypto.tls.ProtocolVersion` v1 @kind object) @signature `Lorg/spongycastle/crypto/tls/RecordStream;.p:(Lorg/spongycastle/crypto/tls/ProtocolVersion;)V` @AccessFlag  {

  # return;
}
procedure `void` `q`(`org.spongycastle.crypto.tls.RecordStream` v0 @kind this, `boolean` v1 ) @signature `Lorg/spongycastle/crypto/tls/RecordStream;.q:(Z)V` @AccessFlag  {

  # return;
}
procedure `void` `r`(`org.spongycastle.crypto.tls.RecordStream` v0 @kind this, `org.spongycastle.crypto.tls.ProtocolVersion` v1 @kind object) @signature `Lorg/spongycastle/crypto/tls/RecordStream;.r:(Lorg/spongycastle/crypto/tls/ProtocolVersion;)V` @AccessFlag  {

  # return;
}
procedure `void` `s`(`org.spongycastle.crypto.tls.RecordStream` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/spongycastle/crypto/tls/RecordStream;.s:([BII)V` @AccessFlag  {

  # return;
}
procedure `void` `t`(`org.spongycastle.crypto.tls.RecordStream` v13 @kind this, `short` v14 , `byte`[] v15 @kind object, `int` v16 , `int` v17 ) @signature `Lorg/spongycastle/crypto/tls/RecordStream;.t:(S[BII)V` @AccessFlag  {

  # return;
}
