record `org.spongycastle.crypto.tls.SRPTlsClient` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.tls.AbstractTlsClient` @kind class {
  `org.spongycastle.crypto.tls.TlsSRPGroupVerifier` `org.spongycastle.crypto.tls.SRPTlsClient.groupVerifier` @AccessFlag PROTECTED;
  `byte`[] `org.spongycastle.crypto.tls.SRPTlsClient.identity` @AccessFlag PROTECTED;
  `byte`[] `org.spongycastle.crypto.tls.SRPTlsClient.password` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.SRPTlsClient` v0 @kind this, `org.spongycastle.crypto.tls.TlsCipherFactory` v1 @kind object, `org.spongycastle.crypto.tls.TlsSRPGroupVerifier` v2 @kind object, `byte`[] v3 @kind object, `byte`[] v4 @kind object) @signature `Lorg/spongycastle/crypto/tls/SRPTlsClient;.<init>:(Lorg/spongycastle/crypto/tls/TlsCipherFactory;Lorg/spongycastle/crypto/tls/TlsSRPGroupVerifier;[B[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.SRPTlsClient` v1 @kind this, `org.spongycastle.crypto.tls.TlsCipherFactory` v2 @kind object, `byte`[] v3 @kind object, `byte`[] v4 @kind object) @signature `Lorg/spongycastle/crypto/tls/SRPTlsClient;.<init>:(Lorg/spongycastle/crypto/tls/TlsCipherFactory;[B[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.SRPTlsClient` v2 @kind this, `byte`[] v3 @kind object, `byte`[] v4 @kind object) @signature `Lorg/spongycastle/crypto/tls/SRPTlsClient;.<init>:([B[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsKeyExchange` `createSRPKeyExchange`(`org.spongycastle.crypto.tls.SRPTlsClient` v7 @kind this, `int` v8 ) @signature `Lorg/spongycastle/crypto/tls/SRPTlsClient;.createSRPKeyExchange:(I)Lorg/spongycastle/crypto/tls/TlsKeyExchange;` @AccessFlag PROTECTED {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsAuthentication` `getAuthentication`(`org.spongycastle.crypto.tls.SRPTlsClient` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/SRPTlsClient;.getAuthentication:()Lorg/spongycastle/crypto/tls/TlsAuthentication;` @AccessFlag PUBLIC {

  # return;
}
procedure `int`[] `getCipherSuites`(`org.spongycastle.crypto.tls.SRPTlsClient` v3 @kind this) @signature `Lorg/spongycastle/crypto/tls/SRPTlsClient;.getCipherSuites:()[I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Hashtable` `getClientExtensions`(`org.spongycastle.crypto.tls.SRPTlsClient` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/SRPTlsClient;.getClientExtensions:()Ljava/util/Hashtable;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.crypto.tls.TlsKeyExchange` `getKeyExchange`(`org.spongycastle.crypto.tls.SRPTlsClient` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/SRPTlsClient;.getKeyExchange:()Lorg/spongycastle/crypto/tls/TlsKeyExchange;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processServerExtensions`(`org.spongycastle.crypto.tls.SRPTlsClient` v2 @kind this, `java.util.Hashtable` v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/SRPTlsClient;.processServerExtensions:(Ljava/util/Hashtable;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `requireSRPServerExtension`(`org.spongycastle.crypto.tls.SRPTlsClient` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/SRPTlsClient;.requireSRPServerExtension:()Z` @AccessFlag PROTECTED {

  # return;
}
