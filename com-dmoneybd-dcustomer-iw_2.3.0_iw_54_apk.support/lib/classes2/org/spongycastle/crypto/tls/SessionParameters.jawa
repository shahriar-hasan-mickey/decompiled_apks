record `org.spongycastle.crypto.tls.SessionParameters` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `org.spongycastle.crypto.tls.SessionParameters.cipherSuite` @AccessFlag PRIVATE;
  `short` `org.spongycastle.crypto.tls.SessionParameters.compressionAlgorithm` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.tls.SessionParameters.encodedServerExtensions` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.tls.SessionParameters.masterSecret` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.tls.Certificate` `org.spongycastle.crypto.tls.SessionParameters.peerCertificate` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.tls.SessionParameters.pskIdentity` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.tls.SessionParameters.srpIdentity` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.SessionParameters` v1 @kind this, `int` v2 , `short` v3 , `byte`[] v4 @kind object, `org.spongycastle.crypto.tls.Certificate` v5 @kind object, `byte`[] v6 @kind object, `byte`[] v7 @kind object, `byte`[] v8 @kind object) @signature `Lorg/spongycastle/crypto/tls/SessionParameters;.<init>:(IS[BLorg/spongycastle/crypto/tls/Certificate;[B[B[B)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.SessionParameters` v0 @kind this, `int` v1 , `short` v2 , `byte`[] v3 @kind object, `org.spongycastle.crypto.tls.Certificate` v4 @kind object, `byte`[] v5 @kind object, `byte`[] v6 @kind object, `byte`[] v7 @kind object, `org.spongycastle.crypto.tls.SessionParameters$1` v8 @kind object) @signature `Lorg/spongycastle/crypto/tls/SessionParameters;.<init>:(IS[BLorg/spongycastle/crypto/tls/Certificate;[B[B[BLorg/spongycastle/crypto/tls/SessionParameters$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `void` `clear`(`org.spongycastle.crypto.tls.SessionParameters` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/SessionParameters;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.crypto.tls.SessionParameters` `copy`(`org.spongycastle.crypto.tls.SessionParameters` v9 @kind this) @signature `Lorg/spongycastle/crypto/tls/SessionParameters;.copy:()Lorg/spongycastle/crypto/tls/SessionParameters;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getCipherSuite`(`org.spongycastle.crypto.tls.SessionParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/SessionParameters;.getCipherSuite:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `short` `getCompressionAlgorithm`(`org.spongycastle.crypto.tls.SessionParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/SessionParameters;.getCompressionAlgorithm:()S` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getMasterSecret`(`org.spongycastle.crypto.tls.SessionParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/SessionParameters;.getMasterSecret:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getPSKIdentity`(`org.spongycastle.crypto.tls.SessionParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/SessionParameters;.getPSKIdentity:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.crypto.tls.Certificate` `getPeerCertificate`(`org.spongycastle.crypto.tls.SessionParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/SessionParameters;.getPeerCertificate:()Lorg/spongycastle/crypto/tls/Certificate;` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getPskIdentity`(`org.spongycastle.crypto.tls.SessionParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/SessionParameters;.getPskIdentity:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getSRPIdentity`(`org.spongycastle.crypto.tls.SessionParameters` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/SessionParameters;.getSRPIdentity:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Hashtable` `readServerExtensions`(`org.spongycastle.crypto.tls.SessionParameters` v2 @kind this) @signature `Lorg/spongycastle/crypto/tls/SessionParameters;.readServerExtensions:()Ljava/util/Hashtable;` @AccessFlag PUBLIC {

  # return;
}
