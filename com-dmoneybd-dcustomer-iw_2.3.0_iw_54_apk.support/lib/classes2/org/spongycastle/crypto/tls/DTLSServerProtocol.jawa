record `org.spongycastle.crypto.tls.DTLSServerProtocol` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.tls.DTLSProtocol` @kind class {
  `boolean` `org.spongycastle.crypto.tls.DTLSServerProtocol.verifyRequests` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.DTLSServerProtocol` v0 @kind this, `java.security.SecureRandom` v1 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSServerProtocol;.<init>:(Ljava/security/SecureRandom;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.crypto.tls.DTLSTransport` `accept`(`org.spongycastle.crypto.tls.DTLSServerProtocol` v4 @kind this, `org.spongycastle.crypto.tls.TlsServer` v5 @kind object, `org.spongycastle.crypto.tls.DatagramTransport` v6 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSServerProtocol;.accept:(Lorg/spongycastle/crypto/tls/TlsServer;Lorg/spongycastle/crypto/tls/DatagramTransport;)Lorg/spongycastle/crypto/tls/DTLSTransport;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `expectCertificateVerifyMessage`(`org.spongycastle.crypto.tls.DTLSServerProtocol` v0 @kind this, `org.spongycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState` v1 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSServerProtocol;.expectCertificateVerifyMessage:(Lorg/spongycastle/crypto/tls/DTLSServerProtocol$ServerHandshakeState;)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `byte`[] `generateCertificateRequest`(`org.spongycastle.crypto.tls.DTLSServerProtocol` v0 @kind this, `org.spongycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState` v1 @kind object, `org.spongycastle.crypto.tls.CertificateRequest` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSServerProtocol;.generateCertificateRequest:(Lorg/spongycastle/crypto/tls/DTLSServerProtocol$ServerHandshakeState;Lorg/spongycastle/crypto/tls/CertificateRequest;)[B` @AccessFlag PROTECTED {

  # return;
}
procedure `byte`[] `generateCertificateStatus`(`org.spongycastle.crypto.tls.DTLSServerProtocol` v0 @kind this, `org.spongycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState` v1 @kind object, `org.spongycastle.crypto.tls.CertificateStatus` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSServerProtocol;.generateCertificateStatus:(Lorg/spongycastle/crypto/tls/DTLSServerProtocol$ServerHandshakeState;Lorg/spongycastle/crypto/tls/CertificateStatus;)[B` @AccessFlag PROTECTED {

  # return;
}
procedure `byte`[] `generateNewSessionTicket`(`org.spongycastle.crypto.tls.DTLSServerProtocol` v0 @kind this, `org.spongycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState` v1 @kind object, `org.spongycastle.crypto.tls.NewSessionTicket` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSServerProtocol;.generateNewSessionTicket:(Lorg/spongycastle/crypto/tls/DTLSServerProtocol$ServerHandshakeState;Lorg/spongycastle/crypto/tls/NewSessionTicket;)[B` @AccessFlag PROTECTED {

  # return;
}
procedure `byte`[] `generateServerHello`(`org.spongycastle.crypto.tls.DTLSServerProtocol` v8 @kind this, `org.spongycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState` v9 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSServerProtocol;.generateServerHello:(Lorg/spongycastle/crypto/tls/DTLSServerProtocol$ServerHandshakeState;)[B` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `getVerifyRequests`(`org.spongycastle.crypto.tls.DTLSServerProtocol` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/DTLSServerProtocol;.getVerifyRequests:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `notifyClientCertificate`(`org.spongycastle.crypto.tls.DTLSServerProtocol` v1 @kind this, `org.spongycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState` v2 @kind object, `org.spongycastle.crypto.tls.Certificate` v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSServerProtocol;.notifyClientCertificate:(Lorg/spongycastle/crypto/tls/DTLSServerProtocol$ServerHandshakeState;Lorg/spongycastle/crypto/tls/Certificate;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `processCertificateVerify`(`org.spongycastle.crypto.tls.DTLSServerProtocol` v5 @kind this, `org.spongycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState` v6 @kind object, `byte`[] v7 @kind object, `org.spongycastle.crypto.tls.TlsHandshakeHash` v8 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSServerProtocol;.processCertificateVerify:(Lorg/spongycastle/crypto/tls/DTLSServerProtocol$ServerHandshakeState;[BLorg/spongycastle/crypto/tls/TlsHandshakeHash;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `processClientCertificate`(`org.spongycastle.crypto.tls.DTLSServerProtocol` v1 @kind this, `org.spongycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState` v2 @kind object, `byte`[] v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSServerProtocol;.processClientCertificate:(Lorg/spongycastle/crypto/tls/DTLSServerProtocol$ServerHandshakeState;[B)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `processClientHello`(`org.spongycastle.crypto.tls.DTLSServerProtocol` v6 @kind this, `org.spongycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState` v7 @kind object, `byte`[] v8 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSServerProtocol;.processClientHello:(Lorg/spongycastle/crypto/tls/DTLSServerProtocol$ServerHandshakeState;[B)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `processClientKeyExchange`(`org.spongycastle.crypto.tls.DTLSServerProtocol` v1 @kind this, `org.spongycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState` v2 @kind object, `byte`[] v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSServerProtocol;.processClientKeyExchange:(Lorg/spongycastle/crypto/tls/DTLSServerProtocol$ServerHandshakeState;[B)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `processClientSupplementalData`(`org.spongycastle.crypto.tls.DTLSServerProtocol` v1 @kind this, `org.spongycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState` v2 @kind object, `byte`[] v3 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSServerProtocol;.processClientSupplementalData:(Lorg/spongycastle/crypto/tls/DTLSServerProtocol$ServerHandshakeState;[B)V` @AccessFlag PROTECTED {

  # return;
}
procedure `org.spongycastle.crypto.tls.DTLSTransport` `serverHandshake`(`org.spongycastle.crypto.tls.DTLSServerProtocol` v10 @kind this, `org.spongycastle.crypto.tls.DTLSServerProtocol$ServerHandshakeState` v11 @kind object, `org.spongycastle.crypto.tls.DTLSRecordLayer` v12 @kind object) @signature `Lorg/spongycastle/crypto/tls/DTLSServerProtocol;.serverHandshake:(Lorg/spongycastle/crypto/tls/DTLSServerProtocol$ServerHandshakeState;Lorg/spongycastle/crypto/tls/DTLSRecordLayer;)Lorg/spongycastle/crypto/tls/DTLSTransport;` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `setVerifyRequests`(`org.spongycastle.crypto.tls.DTLSServerProtocol` v0 @kind this, `boolean` v1 ) @signature `Lorg/spongycastle/crypto/tls/DTLSServerProtocol;.setVerifyRequests:(Z)V` @AccessFlag PUBLIC {

  # return;
}
