record `org.spongycastle.crypto.tls.TlsDSSSigner` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.tls.TlsDSASigner` @kind class {
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.TlsDSSSigner` v0 @kind this) @signature `Lorg/spongycastle/crypto/tls/TlsDSSSigner;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.crypto.DSA` `createDSAImpl`(`org.spongycastle.crypto.tls.TlsDSSSigner` v2 @kind this, `short` v3 ) @signature `Lorg/spongycastle/crypto/tls/TlsDSSSigner;.createDSAImpl:(S)Lorg/spongycastle/crypto/DSA;` @AccessFlag PROTECTED {

  # return;
}
procedure `short` `getSignatureAlgorithm`(`org.spongycastle.crypto.tls.TlsDSSSigner` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/TlsDSSSigner;.getSignatureAlgorithm:()S` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `isValidPublicKey`(`org.spongycastle.crypto.tls.TlsDSSSigner` v0 @kind this, `org.spongycastle.crypto.params.AsymmetricKeyParameter` v1 @kind object) @signature `Lorg/spongycastle/crypto/tls/TlsDSSSigner;.isValidPublicKey:(Lorg/spongycastle/crypto/params/AsymmetricKeyParameter;)Z` @AccessFlag PUBLIC {

  # return;
}
