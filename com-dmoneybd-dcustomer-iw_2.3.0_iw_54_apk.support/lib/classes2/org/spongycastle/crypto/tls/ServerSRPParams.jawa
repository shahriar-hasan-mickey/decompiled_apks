record `org.spongycastle.crypto.tls.ServerSRPParams` @kind class @AccessFlag PUBLIC {
  `java.math.BigInteger` `org.spongycastle.crypto.tls.ServerSRPParams.B` @AccessFlag PROTECTED;
  `java.math.BigInteger` `org.spongycastle.crypto.tls.ServerSRPParams.N` @AccessFlag PROTECTED;
  `java.math.BigInteger` `org.spongycastle.crypto.tls.ServerSRPParams.g` @AccessFlag PROTECTED;
  `byte`[] `org.spongycastle.crypto.tls.ServerSRPParams.s` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.ServerSRPParams` v0 @kind this, `java.math.BigInteger` v1 @kind object, `java.math.BigInteger` v2 @kind object, `byte`[] v3 @kind object, `java.math.BigInteger` v4 @kind object) @signature `Lorg/spongycastle/crypto/tls/ServerSRPParams;.<init>:(Ljava/math/BigInteger;Ljava/math/BigInteger;[BLjava/math/BigInteger;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.crypto.tls.ServerSRPParams` `parse`(`java.io.InputStream` v4 @kind object) @signature `Lorg/spongycastle/crypto/tls/ServerSRPParams;.parse:(Ljava/io/InputStream;)Lorg/spongycastle/crypto/tls/ServerSRPParams;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `encode`(`org.spongycastle.crypto.tls.ServerSRPParams` v1 @kind this, `java.io.OutputStream` v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/ServerSRPParams;.encode:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.math.BigInteger` `getB`(`org.spongycastle.crypto.tls.ServerSRPParams` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/ServerSRPParams;.getB:()Ljava/math/BigInteger;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.math.BigInteger` `getG`(`org.spongycastle.crypto.tls.ServerSRPParams` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/ServerSRPParams;.getG:()Ljava/math/BigInteger;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.math.BigInteger` `getN`(`org.spongycastle.crypto.tls.ServerSRPParams` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/ServerSRPParams;.getN:()Ljava/math/BigInteger;` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getS`(`org.spongycastle.crypto.tls.ServerSRPParams` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/ServerSRPParams;.getS:()[B` @AccessFlag PUBLIC {

  # return;
}
