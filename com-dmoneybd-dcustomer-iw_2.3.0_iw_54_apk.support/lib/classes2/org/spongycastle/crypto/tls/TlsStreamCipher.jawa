record `org.spongycastle.crypto.tls.TlsStreamCipher` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.tls.TlsCipher` @kind interface {
  `org.spongycastle.crypto.tls.TlsContext` `org.spongycastle.crypto.tls.TlsStreamCipher.context` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.StreamCipher` `org.spongycastle.crypto.tls.TlsStreamCipher.decryptCipher` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.StreamCipher` `org.spongycastle.crypto.tls.TlsStreamCipher.encryptCipher` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.tls.TlsMac` `org.spongycastle.crypto.tls.TlsStreamCipher.readMac` @AccessFlag PROTECTED;
  `boolean` `org.spongycastle.crypto.tls.TlsStreamCipher.usesNonce` @AccessFlag PROTECTED;
  `org.spongycastle.crypto.tls.TlsMac` `org.spongycastle.crypto.tls.TlsStreamCipher.writeMac` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.TlsStreamCipher` v19 @kind this, `org.spongycastle.crypto.tls.TlsContext` v20 @kind object, `org.spongycastle.crypto.StreamCipher` v21 @kind object, `org.spongycastle.crypto.StreamCipher` v22 @kind object, `org.spongycastle.crypto.Digest` v23 @kind object, `org.spongycastle.crypto.Digest` v24 @kind object, `int` v25 , `boolean` v26 ) @signature `Lorg/spongycastle/crypto/tls/TlsStreamCipher;.<init>:(Lorg/spongycastle/crypto/tls/TlsContext;Lorg/spongycastle/crypto/StreamCipher;Lorg/spongycastle/crypto/StreamCipher;Lorg/spongycastle/crypto/Digest;Lorg/spongycastle/crypto/Digest;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `checkMAC`(`org.spongycastle.crypto.tls.TlsStreamCipher` v9 @kind this, `long` v10 , `short` v12 , `byte`[] v13 @kind object, `int` v14 , `int` v15 , `byte`[] v16 @kind object, `int` v17 , `int` v18 ) @signature `Lorg/spongycastle/crypto/tls/TlsStreamCipher;.checkMAC:(JS[BII[BII)V` @AccessFlag PROTECTED {

  # return;
}
procedure `byte`[] `decodeCiphertext`(`org.spongycastle.crypto.tls.TlsStreamCipher` v14 @kind this, `long` v15 , `short` v17 , `byte`[] v18 @kind object, `int` v19 , `int` v20 ) @signature `Lorg/spongycastle/crypto/tls/TlsStreamCipher;.decodeCiphertext:(JS[BII)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `encodePlaintext`(`org.spongycastle.crypto.tls.TlsStreamCipher` v12 @kind this, `long` v13 , `short` v15 , `byte`[] v16 @kind object, `int` v17 , `int` v18 ) @signature `Lorg/spongycastle/crypto/tls/TlsStreamCipher;.encodePlaintext:(JS[BII)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getPlaintextLimit`(`org.spongycastle.crypto.tls.TlsStreamCipher` v1 @kind this, `int` v2 ) @signature `Lorg/spongycastle/crypto/tls/TlsStreamCipher;.getPlaintextLimit:(I)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `updateIV`(`org.spongycastle.crypto.tls.TlsStreamCipher` v2 @kind this, `org.spongycastle.crypto.StreamCipher` v3 @kind object, `boolean` v4 , `long` v5 ) @signature `Lorg/spongycastle/crypto/tls/TlsStreamCipher;.updateIV:(Lorg/spongycastle/crypto/StreamCipher;ZJ)V` @AccessFlag PROTECTED {

  # return;
}
