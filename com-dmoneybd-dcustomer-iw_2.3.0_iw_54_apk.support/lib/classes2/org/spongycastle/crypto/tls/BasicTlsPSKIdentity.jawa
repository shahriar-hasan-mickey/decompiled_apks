record `org.spongycastle.crypto.tls.BasicTlsPSKIdentity` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.tls.TlsPSKIdentity` @kind interface {
  `byte`[] `org.spongycastle.crypto.tls.BasicTlsPSKIdentity.identity` @AccessFlag PROTECTED;
  `byte`[] `org.spongycastle.crypto.tls.BasicTlsPSKIdentity.psk` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.BasicTlsPSKIdentity` v0 @kind this, `java.lang.String` v1 @kind object, `byte`[] v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/BasicTlsPSKIdentity;.<init>:(Ljava/lang/String;[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.tls.BasicTlsPSKIdentity` v0 @kind this, `byte`[] v1 @kind object, `byte`[] v2 @kind object) @signature `Lorg/spongycastle/crypto/tls/BasicTlsPSKIdentity;.<init>:([B[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `byte`[] `getPSK`(`org.spongycastle.crypto.tls.BasicTlsPSKIdentity` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/BasicTlsPSKIdentity;.getPSK:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getPSKIdentity`(`org.spongycastle.crypto.tls.BasicTlsPSKIdentity` v1 @kind this) @signature `Lorg/spongycastle/crypto/tls/BasicTlsPSKIdentity;.getPSKIdentity:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `notifyIdentityHint`(`org.spongycastle.crypto.tls.BasicTlsPSKIdentity` v0 @kind this, `byte`[] v1 @kind object) @signature `Lorg/spongycastle/crypto/tls/BasicTlsPSKIdentity;.notifyIdentityHint:([B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `skipIdentityHint`(`org.spongycastle.crypto.tls.BasicTlsPSKIdentity` v0 @kind this) @signature `Lorg/spongycastle/crypto/tls/BasicTlsPSKIdentity;.skipIdentityHint:()V` @AccessFlag PUBLIC {

  # return;
}
