record `org.spongycastle.crypto.modes.GOFBBlockCipher` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.StreamBlockCipher` @kind class {
  `byte`[] `org.spongycastle.crypto.modes.GOFBBlockCipher.IV` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.crypto.modes.GOFBBlockCipher.a` @AccessFlag ;
  `int` `org.spongycastle.crypto.modes.GOFBBlockCipher.b` @AccessFlag ;
  `int` `org.spongycastle.crypto.modes.GOFBBlockCipher.blockSize` @AccessFlag PRIVATE_FINAL;
  `int` `org.spongycastle.crypto.modes.GOFBBlockCipher.byteCount` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.modes.GOFBBlockCipher.c` @AccessFlag ;
  `org.spongycastle.crypto.BlockCipher` `org.spongycastle.crypto.modes.GOFBBlockCipher.cipher` @AccessFlag PRIVATE_FINAL;
  `byte`[] `org.spongycastle.crypto.modes.GOFBBlockCipher.ofbOutV` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.modes.GOFBBlockCipher.ofbV` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.crypto.modes.GOFBBlockCipher` v2 @kind this, `org.spongycastle.crypto.BlockCipher` v3 @kind object) @signature `Lorg/spongycastle/crypto/modes/GOFBBlockCipher;.<init>:(Lorg/spongycastle/crypto/BlockCipher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `bytesToint`(`org.spongycastle.crypto.modes.GOFBBlockCipher` v3 @kind this, `byte`[] v4 @kind object, `int` v5 ) @signature `Lorg/spongycastle/crypto/modes/GOFBBlockCipher;.bytesToint:([BI)I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `intTobytes`(`org.spongycastle.crypto.modes.GOFBBlockCipher` v2 @kind this, `int` v3 , `byte`[] v4 @kind object, `int` v5 ) @signature `Lorg/spongycastle/crypto/modes/GOFBBlockCipher;.intTobytes:(I[BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `byte` `calculateByte`(`org.spongycastle.crypto.modes.GOFBBlockCipher` v5 @kind this, `byte` v6 ) @signature `Lorg/spongycastle/crypto/modes/GOFBBlockCipher;.calculateByte:(B)B` @AccessFlag PROTECTED {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.spongycastle.crypto.modes.GOFBBlockCipher` v2 @kind this) @signature `Lorg/spongycastle/crypto/modes/GOFBBlockCipher;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getBlockSize`(`org.spongycastle.crypto.modes.GOFBBlockCipher` v1 @kind this) @signature `Lorg/spongycastle/crypto/modes/GOFBBlockCipher;.getBlockSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.modes.GOFBBlockCipher` v6 @kind this, `boolean` v7 , `org.spongycastle.crypto.CipherParameters` v8 @kind object) @signature `Lorg/spongycastle/crypto/modes/GOFBBlockCipher;.init:(ZLorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `processBlock`(`org.spongycastle.crypto.modes.GOFBBlockCipher` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `byte`[] v9 @kind object, `int` v10 ) @signature `Lorg/spongycastle/crypto/modes/GOFBBlockCipher;.processBlock:([BI[BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.spongycastle.crypto.modes.GOFBBlockCipher` v4 @kind this) @signature `Lorg/spongycastle/crypto/modes/GOFBBlockCipher;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
