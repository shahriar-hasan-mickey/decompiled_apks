record `org.spongycastle.crypto.digests.Blake2bDigest` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.ExtendedDigest` @kind interface {
  `byte`[] `org.spongycastle.crypto.digests.Blake2bDigest.buffer` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.digests.Blake2bDigest.bufferPos` @AccessFlag PRIVATE;
  `long`[] `org.spongycastle.crypto.digests.Blake2bDigest.chainValue` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.digests.Blake2bDigest.digestLength` @AccessFlag PRIVATE;
  `long` `org.spongycastle.crypto.digests.Blake2bDigest.f0` @AccessFlag PRIVATE;
  `long`[] `org.spongycastle.crypto.digests.Blake2bDigest.internalState` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.digests.Blake2bDigest.key` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.digests.Blake2bDigest.keyLength` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.digests.Blake2bDigest.personalization` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.digests.Blake2bDigest.salt` @AccessFlag PRIVATE;
  `long` `org.spongycastle.crypto.digests.Blake2bDigest.t0` @AccessFlag PRIVATE;
  `long` `org.spongycastle.crypto.digests.Blake2bDigest.t1` @AccessFlag PRIVATE;
}
global `int` `@@org.spongycastle.crypto.digests.Blake2bDigest.BLOCK_LENGTH_BYTES` @AccessFlag PRIVATE_STATIC_FINAL;
global `long`[] `@@org.spongycastle.crypto.digests.Blake2bDigest.blake2b_IV` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[][] `@@org.spongycastle.crypto.digests.Blake2bDigest.blake2b_sigma` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@org.spongycastle.crypto.digests.Blake2bDigest.rOUNDS` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/crypto/digests/Blake2bDigest;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.digests.Blake2bDigest` v1 @kind this) @signature `Lorg/spongycastle/crypto/digests/Blake2bDigest;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.digests.Blake2bDigest` v3 @kind this, `int` v4 ) @signature `Lorg/spongycastle/crypto/digests/Blake2bDigest;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.digests.Blake2bDigest` v2 @kind this, `org.spongycastle.crypto.digests.Blake2bDigest` v3 @kind object) @signature `Lorg/spongycastle/crypto/digests/Blake2bDigest;.<init>:(Lorg/spongycastle/crypto/digests/Blake2bDigest;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.digests.Blake2bDigest` v5 @kind this, `byte`[] v6 @kind object) @signature `Lorg/spongycastle/crypto/digests/Blake2bDigest;.<init>:([B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.digests.Blake2bDigest` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `byte`[] v9 @kind object, `byte`[] v10 @kind object) @signature `Lorg/spongycastle/crypto/digests/Blake2bDigest;.<init>:([BI[B[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `G`(`org.spongycastle.crypto.digests.Blake2bDigest` v5 @kind this, `long` v6 , `long` v8 , `int` v10 , `int` v11 , `int` v12 , `int` v13 ) @signature `Lorg/spongycastle/crypto/digests/Blake2bDigest;.G:(JJIIII)V` @AccessFlag PRIVATE {

  # return;
}
procedure `long` `bytes2long`(`org.spongycastle.crypto.digests.Blake2bDigest` v7 @kind this, `byte`[] v8 @kind object, `int` v9 ) @signature `Lorg/spongycastle/crypto/digests/Blake2bDigest;.bytes2long:([BI)J` @AccessFlag PRIVATE_FINAL {

  # return;
}
procedure `void` `compress`(`org.spongycastle.crypto.digests.Blake2bDigest` v12 @kind this, `byte`[] v13 @kind object, `int` v14 ) @signature `Lorg/spongycastle/crypto/digests/Blake2bDigest;.compress:([BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.digests.Blake2bDigest` v11 @kind this) @signature `Lorg/spongycastle/crypto/digests/Blake2bDigest;.init:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `initializeInternalState`(`org.spongycastle.crypto.digests.Blake2bDigest` v6 @kind this) @signature `Lorg/spongycastle/crypto/digests/Blake2bDigest;.initializeInternalState:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `byte`[] `long2bytes`(`org.spongycastle.crypto.digests.Blake2bDigest` v4 @kind this, `long` v5 ) @signature `Lorg/spongycastle/crypto/digests/Blake2bDigest;.long2bytes:(J)[B` @AccessFlag PRIVATE_FINAL {

  # return;
}
procedure `long` `rotr64`(`org.spongycastle.crypto.digests.Blake2bDigest` v2 @kind this, `long` v3 , `int` v5 ) @signature `Lorg/spongycastle/crypto/digests/Blake2bDigest;.rotr64:(JI)J` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `clearKey`(`org.spongycastle.crypto.digests.Blake2bDigest` v2 @kind this) @signature `Lorg/spongycastle/crypto/digests/Blake2bDigest;.clearKey:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `clearSalt`(`org.spongycastle.crypto.digests.Blake2bDigest` v2 @kind this) @signature `Lorg/spongycastle/crypto/digests/Blake2bDigest;.clearSalt:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `doFinal`(`org.spongycastle.crypto.digests.Blake2bDigest` v8 @kind this, `byte`[] v9 @kind object, `int` v10 ) @signature `Lorg/spongycastle/crypto/digests/Blake2bDigest;.doFinal:([BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.spongycastle.crypto.digests.Blake2bDigest` v1 @kind this) @signature `Lorg/spongycastle/crypto/digests/Blake2bDigest;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getByteLength`(`org.spongycastle.crypto.digests.Blake2bDigest` v1 @kind this) @signature `Lorg/spongycastle/crypto/digests/Blake2bDigest;.getByteLength:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getDigestSize`(`org.spongycastle.crypto.digests.Blake2bDigest` v1 @kind this) @signature `Lorg/spongycastle/crypto/digests/Blake2bDigest;.getDigestSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.spongycastle.crypto.digests.Blake2bDigest` v4 @kind this) @signature `Lorg/spongycastle/crypto/digests/Blake2bDigest;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.spongycastle.crypto.digests.Blake2bDigest` v6 @kind this, `byte` v7 ) @signature `Lorg/spongycastle/crypto/digests/Blake2bDigest;.update:(B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.spongycastle.crypto.digests.Blake2bDigest` v11 @kind this, `byte`[] v12 @kind object, `int` v13 , `int` v14 ) @signature `Lorg/spongycastle/crypto/digests/Blake2bDigest;.update:([BII)V` @AccessFlag PUBLIC {

  # return;
}
