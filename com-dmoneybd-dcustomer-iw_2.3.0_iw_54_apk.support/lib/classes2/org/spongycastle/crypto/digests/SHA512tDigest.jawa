record `org.spongycastle.crypto.digests.SHA512tDigest` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.digests.LongDigest` @kind class {
  `long` `org.spongycastle.crypto.digests.SHA512tDigest.H1t` @AccessFlag PRIVATE;
  `long` `org.spongycastle.crypto.digests.SHA512tDigest.H2t` @AccessFlag PRIVATE;
  `long` `org.spongycastle.crypto.digests.SHA512tDigest.H3t` @AccessFlag PRIVATE;
  `long` `org.spongycastle.crypto.digests.SHA512tDigest.H4t` @AccessFlag PRIVATE;
  `long` `org.spongycastle.crypto.digests.SHA512tDigest.H5t` @AccessFlag PRIVATE;
  `long` `org.spongycastle.crypto.digests.SHA512tDigest.H6t` @AccessFlag PRIVATE;
  `long` `org.spongycastle.crypto.digests.SHA512tDigest.H7t` @AccessFlag PRIVATE;
  `long` `org.spongycastle.crypto.digests.SHA512tDigest.H8t` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.digests.SHA512tDigest.digestLength` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.crypto.digests.SHA512tDigest` v1 @kind this, `int` v2 ) @signature `Lorg/spongycastle/crypto/digests/SHA512tDigest;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.digests.SHA512tDigest` v1 @kind this, `org.spongycastle.crypto.digests.SHA512tDigest` v2 @kind object) @signature `Lorg/spongycastle/crypto/digests/SHA512tDigest;.<init>:(Lorg/spongycastle/crypto/digests/SHA512tDigest;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.digests.SHA512tDigest` v1 @kind this, `byte`[] v2 @kind object) @signature `Lorg/spongycastle/crypto/digests/SHA512tDigest;.<init>:([B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `intToBigEndian`(`int` v2 , `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lorg/spongycastle/crypto/digests/SHA512tDigest;.intToBigEndian:(I[BII)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `longToBigEndian`(`long` v3 , `byte`[] v5 @kind object, `int` v6 , `int` v7 ) @signature `Lorg/spongycastle/crypto/digests/SHA512tDigest;.longToBigEndian:(J[BII)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `readDigestLength`(`byte`[] v1 @kind object) @signature `Lorg/spongycastle/crypto/digests/SHA512tDigest;.readDigestLength:([B)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `tIvGenerate`(`org.spongycastle.crypto.digests.SHA512tDigest` v3 @kind this, `int` v4 ) @signature `Lorg/spongycastle/crypto/digests/SHA512tDigest;.tIvGenerate:(I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `org.spongycastle.util.Memoable` `copy`(`org.spongycastle.crypto.digests.SHA512tDigest` v1 @kind this) @signature `Lorg/spongycastle/crypto/digests/SHA512tDigest;.copy:()Lorg/spongycastle/util/Memoable;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `doFinal`(`org.spongycastle.crypto.digests.SHA512tDigest` v4 @kind this, `byte`[] v5 @kind object, `int` v6 ) @signature `Lorg/spongycastle/crypto/digests/SHA512tDigest;.doFinal:([BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.spongycastle.crypto.digests.SHA512tDigest` v2 @kind this) @signature `Lorg/spongycastle/crypto/digests/SHA512tDigest;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getDigestSize`(`org.spongycastle.crypto.digests.SHA512tDigest` v1 @kind this) @signature `Lorg/spongycastle/crypto/digests/SHA512tDigest;.getDigestSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getEncodedState`(`org.spongycastle.crypto.digests.SHA512tDigest` v3 @kind this) @signature `Lorg/spongycastle/crypto/digests/SHA512tDigest;.getEncodedState:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.spongycastle.crypto.digests.SHA512tDigest` v2 @kind this) @signature `Lorg/spongycastle/crypto/digests/SHA512tDigest;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.spongycastle.crypto.digests.SHA512tDigest` v2 @kind this, `org.spongycastle.util.Memoable` v3 @kind object) @signature `Lorg/spongycastle/crypto/digests/SHA512tDigest;.reset:(Lorg/spongycastle/util/Memoable;)V` @AccessFlag PUBLIC {

  # return;
}
