record `org.spongycastle.crypto.digests.RIPEMD256Digest` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.digests.GeneralDigest` @kind class {
  `int` `org.spongycastle.crypto.digests.RIPEMD256Digest.H0` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.digests.RIPEMD256Digest.H1` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.digests.RIPEMD256Digest.H2` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.digests.RIPEMD256Digest.H3` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.digests.RIPEMD256Digest.H4` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.digests.RIPEMD256Digest.H5` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.digests.RIPEMD256Digest.H6` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.digests.RIPEMD256Digest.H7` @AccessFlag PRIVATE;
  `int`[] `org.spongycastle.crypto.digests.RIPEMD256Digest.X` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.digests.RIPEMD256Digest.xOff` @AccessFlag PRIVATE;
}
global `int` `@@org.spongycastle.crypto.digests.RIPEMD256Digest.DIGEST_LENGTH` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.spongycastle.crypto.digests.RIPEMD256Digest` v1 @kind this) @signature `Lorg/spongycastle/crypto/digests/RIPEMD256Digest;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.digests.RIPEMD256Digest` v1 @kind this, `org.spongycastle.crypto.digests.RIPEMD256Digest` v2 @kind object) @signature `Lorg/spongycastle/crypto/digests/RIPEMD256Digest;.<init>:(Lorg/spongycastle/crypto/digests/RIPEMD256Digest;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `F1`(`org.spongycastle.crypto.digests.RIPEMD256Digest` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 , `int` v5 , `int` v6 ) @signature `Lorg/spongycastle/crypto/digests/RIPEMD256Digest;.F1:(IIIIII)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `F2`(`org.spongycastle.crypto.digests.RIPEMD256Digest` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 , `int` v5 , `int` v6 ) @signature `Lorg/spongycastle/crypto/digests/RIPEMD256Digest;.F2:(IIIIII)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `F3`(`org.spongycastle.crypto.digests.RIPEMD256Digest` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 , `int` v5 , `int` v6 ) @signature `Lorg/spongycastle/crypto/digests/RIPEMD256Digest;.F3:(IIIIII)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `F4`(`org.spongycastle.crypto.digests.RIPEMD256Digest` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 , `int` v5 , `int` v6 ) @signature `Lorg/spongycastle/crypto/digests/RIPEMD256Digest;.F4:(IIIIII)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `FF1`(`org.spongycastle.crypto.digests.RIPEMD256Digest` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 , `int` v5 , `int` v6 ) @signature `Lorg/spongycastle/crypto/digests/RIPEMD256Digest;.FF1:(IIIIII)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `FF2`(`org.spongycastle.crypto.digests.RIPEMD256Digest` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 , `int` v5 , `int` v6 ) @signature `Lorg/spongycastle/crypto/digests/RIPEMD256Digest;.FF2:(IIIIII)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `FF3`(`org.spongycastle.crypto.digests.RIPEMD256Digest` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 , `int` v5 , `int` v6 ) @signature `Lorg/spongycastle/crypto/digests/RIPEMD256Digest;.FF3:(IIIIII)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `FF4`(`org.spongycastle.crypto.digests.RIPEMD256Digest` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 , `int` v5 , `int` v6 ) @signature `Lorg/spongycastle/crypto/digests/RIPEMD256Digest;.FF4:(IIIIII)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `RL`(`org.spongycastle.crypto.digests.RIPEMD256Digest` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lorg/spongycastle/crypto/digests/RIPEMD256Digest;.RL:(II)I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `copyIn`(`org.spongycastle.crypto.digests.RIPEMD256Digest` v4 @kind this, `org.spongycastle.crypto.digests.RIPEMD256Digest` v5 @kind object) @signature `Lorg/spongycastle/crypto/digests/RIPEMD256Digest;.copyIn:(Lorg/spongycastle/crypto/digests/RIPEMD256Digest;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `f1`(`org.spongycastle.crypto.digests.RIPEMD256Digest` v0 @kind this, `int` v1 , `int` v2 , `int` v3 ) @signature `Lorg/spongycastle/crypto/digests/RIPEMD256Digest;.f1:(III)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `f2`(`org.spongycastle.crypto.digests.RIPEMD256Digest` v0 @kind this, `int` v1 , `int` v2 , `int` v3 ) @signature `Lorg/spongycastle/crypto/digests/RIPEMD256Digest;.f2:(III)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `f3`(`org.spongycastle.crypto.digests.RIPEMD256Digest` v0 @kind this, `int` v1 , `int` v2 , `int` v3 ) @signature `Lorg/spongycastle/crypto/digests/RIPEMD256Digest;.f3:(III)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `f4`(`org.spongycastle.crypto.digests.RIPEMD256Digest` v0 @kind this, `int` v1 , `int` v2 , `int` v3 ) @signature `Lorg/spongycastle/crypto/digests/RIPEMD256Digest;.f4:(III)I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `unpackWord`(`org.spongycastle.crypto.digests.RIPEMD256Digest` v2 @kind this, `int` v3 , `byte`[] v4 @kind object, `int` v5 ) @signature `Lorg/spongycastle/crypto/digests/RIPEMD256Digest;.unpackWord:(I[BI)V` @AccessFlag PRIVATE {

  # return;
}
procedure `org.spongycastle.util.Memoable` `copy`(`org.spongycastle.crypto.digests.RIPEMD256Digest` v1 @kind this) @signature `Lorg/spongycastle/crypto/digests/RIPEMD256Digest;.copy:()Lorg/spongycastle/util/Memoable;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `doFinal`(`org.spongycastle.crypto.digests.RIPEMD256Digest` v2 @kind this, `byte`[] v3 @kind object, `int` v4 ) @signature `Lorg/spongycastle/crypto/digests/RIPEMD256Digest;.doFinal:([BI)I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getAlgorithmName`(`org.spongycastle.crypto.digests.RIPEMD256Digest` v1 @kind this) @signature `Lorg/spongycastle/crypto/digests/RIPEMD256Digest;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getDigestSize`(`org.spongycastle.crypto.digests.RIPEMD256Digest` v1 @kind this) @signature `Lorg/spongycastle/crypto/digests/RIPEMD256Digest;.getDigestSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `processBlock`(`org.spongycastle.crypto.digests.RIPEMD256Digest` v32 @kind this) @signature `Lorg/spongycastle/crypto/digests/RIPEMD256Digest;.processBlock:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `processLength`(`org.spongycastle.crypto.digests.RIPEMD256Digest` v4 @kind this, `long` v5 ) @signature `Lorg/spongycastle/crypto/digests/RIPEMD256Digest;.processLength:(J)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `processWord`(`org.spongycastle.crypto.digests.RIPEMD256Digest` v6 @kind this, `byte`[] v7 @kind object, `int` v8 ) @signature `Lorg/spongycastle/crypto/digests/RIPEMD256Digest;.processWord:([BI)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `reset`(`org.spongycastle.crypto.digests.RIPEMD256Digest` v4 @kind this) @signature `Lorg/spongycastle/crypto/digests/RIPEMD256Digest;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.spongycastle.crypto.digests.RIPEMD256Digest` v0 @kind this, `org.spongycastle.util.Memoable` v1 @kind object) @signature `Lorg/spongycastle/crypto/digests/RIPEMD256Digest;.reset:(Lorg/spongycastle/util/Memoable;)V` @AccessFlag PUBLIC {

  # return;
}
