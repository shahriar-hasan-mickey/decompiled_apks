record `org.spongycastle.crypto.prng.SP800SecureRandomBuilder$HMacDRBGProvider` @kind class @AccessFlag  extends `org.spongycastle.crypto.prng.DRBGProvider` @kind interface {
  `org.spongycastle.crypto.Mac` `org.spongycastle.crypto.prng.SP800SecureRandomBuilder$HMacDRBGProvider.hMac` @AccessFlag PRIVATE_FINAL;
  `byte`[] `org.spongycastle.crypto.prng.SP800SecureRandomBuilder$HMacDRBGProvider.nonce` @AccessFlag PRIVATE_FINAL;
  `byte`[] `org.spongycastle.crypto.prng.SP800SecureRandomBuilder$HMacDRBGProvider.personalizationString` @AccessFlag PRIVATE_FINAL;
  `int` `org.spongycastle.crypto.prng.SP800SecureRandomBuilder$HMacDRBGProvider.securityStrength` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.spongycastle.crypto.prng.SP800SecureRandomBuilder$HMacDRBGProvider` v0 @kind this, `org.spongycastle.crypto.Mac` v1 @kind object, `byte`[] v2 @kind object, `byte`[] v3 @kind object, `int` v4 ) @signature `Lorg/spongycastle/crypto/prng/SP800SecureRandomBuilder$HMacDRBGProvider;.<init>:(Lorg/spongycastle/crypto/Mac;[B[BI)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.crypto.prng.drbg.SP80090DRBG` `get`(`org.spongycastle.crypto.prng.SP800SecureRandomBuilder$HMacDRBGProvider` v7 @kind this, `org.spongycastle.crypto.prng.EntropySource` v8 @kind object) @signature `Lorg/spongycastle/crypto/prng/SP800SecureRandomBuilder$HMacDRBGProvider;.get:(Lorg/spongycastle/crypto/prng/EntropySource;)Lorg/spongycastle/crypto/prng/drbg/SP80090DRBG;` @AccessFlag PUBLIC {

  # return;
}
