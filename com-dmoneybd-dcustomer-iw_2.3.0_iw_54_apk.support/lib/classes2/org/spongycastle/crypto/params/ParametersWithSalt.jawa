record `org.spongycastle.crypto.params.ParametersWithSalt` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.CipherParameters` @kind interface {
  `org.spongycastle.crypto.CipherParameters` `org.spongycastle.crypto.params.ParametersWithSalt.parameters` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.crypto.params.ParametersWithSalt.salt` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.crypto.params.ParametersWithSalt` v2 @kind this, `org.spongycastle.crypto.CipherParameters` v3 @kind object, `byte`[] v4 @kind object) @signature `Lorg/spongycastle/crypto/params/ParametersWithSalt;.<init>:(Lorg/spongycastle/crypto/CipherParameters;[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.params.ParametersWithSalt` v1 @kind this, `org.spongycastle.crypto.CipherParameters` v2 @kind object, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lorg/spongycastle/crypto/params/ParametersWithSalt;.<init>:(Lorg/spongycastle/crypto/CipherParameters;[BII)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.crypto.CipherParameters` `getParameters`(`org.spongycastle.crypto.params.ParametersWithSalt` v1 @kind this) @signature `Lorg/spongycastle/crypto/params/ParametersWithSalt;.getParameters:()Lorg/spongycastle/crypto/CipherParameters;` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getSalt`(`org.spongycastle.crypto.params.ParametersWithSalt` v1 @kind this) @signature `Lorg/spongycastle/crypto/params/ParametersWithSalt;.getSalt:()[B` @AccessFlag PUBLIC {

  # return;
}
