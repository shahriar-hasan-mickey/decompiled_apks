record `org.spongycastle.crypto.Wrapper` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `java.lang.String` `getAlgorithmName`() @signature `Lorg/spongycastle/crypto/Wrapper;.getAlgorithmName:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `init`(`boolean` v0 , `org.spongycastle.crypto.CipherParameters` v1 @kind object) @signature `Lorg/spongycastle/crypto/Wrapper;.init:(ZLorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte`[] `unwrap`(`byte`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Lorg/spongycastle/crypto/Wrapper;.unwrap:([BII)[B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte`[] `wrap`(`byte`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Lorg/spongycastle/crypto/Wrapper;.wrap:([BII)[B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
