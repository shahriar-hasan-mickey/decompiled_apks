record `org.spongycastle.crypto.signers.RandomDSAKCalculator` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.signers.DSAKCalculator` @kind interface {
  `java.math.BigInteger` `org.spongycastle.crypto.signers.RandomDSAKCalculator.q` @AccessFlag PRIVATE;
  `java.security.SecureRandom` `org.spongycastle.crypto.signers.RandomDSAKCalculator.random` @AccessFlag PRIVATE;
}
global `java.math.BigInteger` `@@org.spongycastle.crypto.signers.RandomDSAKCalculator.ZERO` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/crypto/signers/RandomDSAKCalculator;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.signers.RandomDSAKCalculator` v0 @kind this) @signature `Lorg/spongycastle/crypto/signers/RandomDSAKCalculator;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.signers.RandomDSAKCalculator` v0 @kind this, `java.math.BigInteger` v1 @kind object, `java.math.BigInteger` v2 @kind object, `byte`[] v3 @kind object) @signature `Lorg/spongycastle/crypto/signers/RandomDSAKCalculator;.init:(Ljava/math/BigInteger;Ljava/math/BigInteger;[B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.signers.RandomDSAKCalculator` v0 @kind this, `java.math.BigInteger` v1 @kind object, `java.security.SecureRandom` v2 @kind object) @signature `Lorg/spongycastle/crypto/signers/RandomDSAKCalculator;.init:(Ljava/math/BigInteger;Ljava/security/SecureRandom;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isDeterministic`(`org.spongycastle.crypto.signers.RandomDSAKCalculator` v1 @kind this) @signature `Lorg/spongycastle/crypto/signers/RandomDSAKCalculator;.isDeterministic:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.math.BigInteger` `nextK`(`org.spongycastle.crypto.signers.RandomDSAKCalculator` v3 @kind this) @signature `Lorg/spongycastle/crypto/signers/RandomDSAKCalculator;.nextK:()Ljava/math/BigInteger;` @AccessFlag PUBLIC {

  # return;
}
