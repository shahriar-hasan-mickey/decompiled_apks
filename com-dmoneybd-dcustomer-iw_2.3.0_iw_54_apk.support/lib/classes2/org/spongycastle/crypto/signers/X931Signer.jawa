record `org.spongycastle.crypto.signers.X931Signer` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.Signer` @kind interface {
  `byte`[] `org.spongycastle.crypto.signers.X931Signer.block` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.AsymmetricBlockCipher` `org.spongycastle.crypto.signers.X931Signer.cipher` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.Digest` `org.spongycastle.crypto.signers.X931Signer.digest` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.params.RSAKeyParameters` `org.spongycastle.crypto.signers.X931Signer.kParam` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.signers.X931Signer.keyBits` @AccessFlag PRIVATE;
  `int` `org.spongycastle.crypto.signers.X931Signer.trailer` @AccessFlag PRIVATE;
}
global `int` `@@org.spongycastle.crypto.signers.X931Signer.TRAILER_IMPLICIT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.spongycastle.crypto.signers.X931Signer.TRAILER_RIPEMD128` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.spongycastle.crypto.signers.X931Signer.TRAILER_RIPEMD160` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.spongycastle.crypto.signers.X931Signer.TRAILER_SHA1` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.spongycastle.crypto.signers.X931Signer.TRAILER_SHA224` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.spongycastle.crypto.signers.X931Signer.TRAILER_SHA256` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.spongycastle.crypto.signers.X931Signer.TRAILER_SHA384` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.spongycastle.crypto.signers.X931Signer.TRAILER_SHA512` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.spongycastle.crypto.signers.X931Signer.TRAILER_WHIRLPOOL` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`org.spongycastle.crypto.signers.X931Signer` v1 @kind this, `org.spongycastle.crypto.AsymmetricBlockCipher` v2 @kind object, `org.spongycastle.crypto.Digest` v3 @kind object) @signature `Lorg/spongycastle/crypto/signers/X931Signer;.<init>:(Lorg/spongycastle/crypto/AsymmetricBlockCipher;Lorg/spongycastle/crypto/Digest;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.crypto.signers.X931Signer` v1 @kind this, `org.spongycastle.crypto.AsymmetricBlockCipher` v2 @kind object, `org.spongycastle.crypto.Digest` v3 @kind object, `boolean` v4 ) @signature `Lorg/spongycastle/crypto/signers/X931Signer;.<init>:(Lorg/spongycastle/crypto/AsymmetricBlockCipher;Lorg/spongycastle/crypto/Digest;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `clearBlock`(`org.spongycastle.crypto.signers.X931Signer` v3 @kind this, `byte`[] v4 @kind object) @signature `Lorg/spongycastle/crypto/signers/X931Signer;.clearBlock:([B)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `createSignatureBlock`(`org.spongycastle.crypto.signers.X931Signer` v5 @kind this) @signature `Lorg/spongycastle/crypto/signers/X931Signer;.createSignatureBlock:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `byte`[] `generateSignature`(`org.spongycastle.crypto.signers.X931Signer` v5 @kind this) @signature `Lorg/spongycastle/crypto/signers/X931Signer;.generateSignature:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `init`(`org.spongycastle.crypto.signers.X931Signer` v1 @kind this, `boolean` v2 , `org.spongycastle.crypto.CipherParameters` v3 @kind object) @signature `Lorg/spongycastle/crypto/signers/X931Signer;.init:(ZLorg/spongycastle/crypto/CipherParameters;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`org.spongycastle.crypto.signers.X931Signer` v1 @kind this) @signature `Lorg/spongycastle/crypto/signers/X931Signer;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.spongycastle.crypto.signers.X931Signer` v1 @kind this, `byte` v2 ) @signature `Lorg/spongycastle/crypto/signers/X931Signer;.update:(B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.spongycastle.crypto.signers.X931Signer` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/spongycastle/crypto/signers/X931Signer;.update:([BII)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `verifySignature`(`org.spongycastle.crypto.signers.X931Signer` v3 @kind this, `byte`[] v4 @kind object) @signature `Lorg/spongycastle/crypto/signers/X931Signer;.verifySignature:([B)Z` @AccessFlag PUBLIC {

  # return;
}
