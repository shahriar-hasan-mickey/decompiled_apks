record `org.spongycastle.math.ec.ECFieldElement$F2m` @kind class @AccessFlag PUBLIC extends `org.spongycastle.math.ec.ECFieldElement` @kind class {
  `int`[] `org.spongycastle.math.ec.ECFieldElement$F2m.ks` @AccessFlag PRIVATE;
  `int` `org.spongycastle.math.ec.ECFieldElement$F2m.m` @AccessFlag PRIVATE;
  `int` `org.spongycastle.math.ec.ECFieldElement$F2m.representation` @AccessFlag PRIVATE;
  `org.spongycastle.math.ec.LongArray` `org.spongycastle.math.ec.ECFieldElement$F2m.x` @AccessFlag PRIVATE;
}
global `int` `@@org.spongycastle.math.ec.ECFieldElement$F2m.GNB` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.spongycastle.math.ec.ECFieldElement$F2m.PPB` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.spongycastle.math.ec.ECFieldElement$F2m.TPB` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`org.spongycastle.math.ec.ECFieldElement$F2m` v4 @kind this, `int` v5 , `int` v6 , `int` v7 , `int` v8 , `java.math.BigInteger` v9 @kind object) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.<init>:(IIIILjava/math/BigInteger;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.math.ec.ECFieldElement$F2m` v6 @kind this, `int` v7 , `int` v8 , `java.math.BigInteger` v9 @kind object) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.<init>:(IILjava/math/BigInteger;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.math.ec.ECFieldElement$F2m` v1 @kind this, `int` v2 , `int`[] v3 @kind object, `org.spongycastle.math.ec.LongArray` v4 @kind object) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.<init>:(I[ILorg/spongycastle/math/ec/LongArray;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `checkFieldElements`(`org.spongycastle.math.ec.ECFieldElement` v2 @kind object, `org.spongycastle.math.ec.ECFieldElement` v3 @kind object) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.checkFieldElements:(Lorg/spongycastle/math/ec/ECFieldElement;Lorg/spongycastle/math/ec/ECFieldElement;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECFieldElement` `add`(`org.spongycastle.math.ec.ECFieldElement$F2m` v3 @kind this, `org.spongycastle.math.ec.ECFieldElement` v4 @kind object) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.add:(Lorg/spongycastle/math/ec/ECFieldElement;)Lorg/spongycastle/math/ec/ECFieldElement;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECFieldElement` `addOne`(`org.spongycastle.math.ec.ECFieldElement$F2m` v4 @kind this) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.addOne:()Lorg/spongycastle/math/ec/ECFieldElement;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `bitLength`(`org.spongycastle.math.ec.ECFieldElement$F2m` v1 @kind this) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.bitLength:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECFieldElement` `divide`(`org.spongycastle.math.ec.ECFieldElement$F2m` v0 @kind this, `org.spongycastle.math.ec.ECFieldElement` v1 @kind object) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.divide:(Lorg/spongycastle/math/ec/ECFieldElement;)Lorg/spongycastle/math/ec/ECFieldElement;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`org.spongycastle.math.ec.ECFieldElement$F2m` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getFieldName`(`org.spongycastle.math.ec.ECFieldElement$F2m` v1 @kind this) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.getFieldName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getFieldSize`(`org.spongycastle.math.ec.ECFieldElement$F2m` v1 @kind this) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.getFieldSize:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getK1`(`org.spongycastle.math.ec.ECFieldElement$F2m` v2 @kind this) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.getK1:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getK2`(`org.spongycastle.math.ec.ECFieldElement$F2m` v3 @kind this) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.getK2:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getK3`(`org.spongycastle.math.ec.ECFieldElement$F2m` v3 @kind this) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.getK3:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getM`(`org.spongycastle.math.ec.ECFieldElement$F2m` v1 @kind this) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.getM:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getRepresentation`(`org.spongycastle.math.ec.ECFieldElement$F2m` v1 @kind this) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.getRepresentation:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`org.spongycastle.math.ec.ECFieldElement$F2m` v2 @kind this) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECFieldElement` `invert`(`org.spongycastle.math.ec.ECFieldElement$F2m` v4 @kind this) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.invert:()Lorg/spongycastle/math/ec/ECFieldElement;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isOne`(`org.spongycastle.math.ec.ECFieldElement$F2m` v1 @kind this) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.isOne:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isZero`(`org.spongycastle.math.ec.ECFieldElement$F2m` v1 @kind this) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.isZero:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECFieldElement` `multiply`(`org.spongycastle.math.ec.ECFieldElement$F2m` v4 @kind this, `org.spongycastle.math.ec.ECFieldElement` v5 @kind object) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.multiply:(Lorg/spongycastle/math/ec/ECFieldElement;)Lorg/spongycastle/math/ec/ECFieldElement;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECFieldElement` `multiplyMinusProduct`(`org.spongycastle.math.ec.ECFieldElement$F2m` v0 @kind this, `org.spongycastle.math.ec.ECFieldElement` v1 @kind object, `org.spongycastle.math.ec.ECFieldElement` v2 @kind object, `org.spongycastle.math.ec.ECFieldElement` v3 @kind object) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.multiplyMinusProduct:(Lorg/spongycastle/math/ec/ECFieldElement;Lorg/spongycastle/math/ec/ECFieldElement;Lorg/spongycastle/math/ec/ECFieldElement;)Lorg/spongycastle/math/ec/ECFieldElement;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECFieldElement` `multiplyPlusProduct`(`org.spongycastle.math.ec.ECFieldElement$F2m` v4 @kind this, `org.spongycastle.math.ec.ECFieldElement` v5 @kind object, `org.spongycastle.math.ec.ECFieldElement` v6 @kind object, `org.spongycastle.math.ec.ECFieldElement` v7 @kind object) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.multiplyPlusProduct:(Lorg/spongycastle/math/ec/ECFieldElement;Lorg/spongycastle/math/ec/ECFieldElement;Lorg/spongycastle/math/ec/ECFieldElement;)Lorg/spongycastle/math/ec/ECFieldElement;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECFieldElement` `negate`(`org.spongycastle.math.ec.ECFieldElement$F2m` v0 @kind this) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.negate:()Lorg/spongycastle/math/ec/ECFieldElement;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECFieldElement` `sqrt`(`org.spongycastle.math.ec.ECFieldElement$F2m` v1 @kind this) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.sqrt:()Lorg/spongycastle/math/ec/ECFieldElement;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECFieldElement` `square`(`org.spongycastle.math.ec.ECFieldElement$F2m` v4 @kind this) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.square:()Lorg/spongycastle/math/ec/ECFieldElement;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECFieldElement` `squareMinusProduct`(`org.spongycastle.math.ec.ECFieldElement$F2m` v0 @kind this, `org.spongycastle.math.ec.ECFieldElement` v1 @kind object, `org.spongycastle.math.ec.ECFieldElement` v2 @kind object) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.squareMinusProduct:(Lorg/spongycastle/math/ec/ECFieldElement;Lorg/spongycastle/math/ec/ECFieldElement;)Lorg/spongycastle/math/ec/ECFieldElement;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECFieldElement` `squarePlusProduct`(`org.spongycastle.math.ec.ECFieldElement$F2m` v4 @kind this, `org.spongycastle.math.ec.ECFieldElement` v5 @kind object, `org.spongycastle.math.ec.ECFieldElement` v6 @kind object) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.squarePlusProduct:(Lorg/spongycastle/math/ec/ECFieldElement;Lorg/spongycastle/math/ec/ECFieldElement;)Lorg/spongycastle/math/ec/ECFieldElement;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECFieldElement` `squarePow`(`org.spongycastle.math.ec.ECFieldElement$F2m` v4 @kind this, `int` v5 ) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.squarePow:(I)Lorg/spongycastle/math/ec/ECFieldElement;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.math.ec.ECFieldElement` `subtract`(`org.spongycastle.math.ec.ECFieldElement$F2m` v0 @kind this, `org.spongycastle.math.ec.ECFieldElement` v1 @kind object) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.subtract:(Lorg/spongycastle/math/ec/ECFieldElement;)Lorg/spongycastle/math/ec/ECFieldElement;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `testBitZero`(`org.spongycastle.math.ec.ECFieldElement$F2m` v1 @kind this) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.testBitZero:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.math.BigInteger` `toBigInteger`(`org.spongycastle.math.ec.ECFieldElement$F2m` v1 @kind this) @signature `Lorg/spongycastle/math/ec/ECFieldElement$F2m;.toBigInteger:()Ljava/math/BigInteger;` @AccessFlag PUBLIC {

  # return;
}
