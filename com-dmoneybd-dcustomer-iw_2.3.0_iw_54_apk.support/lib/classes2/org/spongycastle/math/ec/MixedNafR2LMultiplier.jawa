record `org.spongycastle.math.ec.MixedNafR2LMultiplier` @kind class @AccessFlag PUBLIC extends `org.spongycastle.math.ec.AbstractECMultiplier` @kind class {
  `int` `org.spongycastle.math.ec.MixedNafR2LMultiplier.additionCoord` @AccessFlag PROTECTED;
  `int` `org.spongycastle.math.ec.MixedNafR2LMultiplier.doublingCoord` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`org.spongycastle.math.ec.MixedNafR2LMultiplier` v2 @kind this) @signature `Lorg/spongycastle/math/ec/MixedNafR2LMultiplier;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.math.ec.MixedNafR2LMultiplier` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/spongycastle/math/ec/MixedNafR2LMultiplier;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.math.ec.ECCurve` `configureCurve`(`org.spongycastle.math.ec.MixedNafR2LMultiplier` v2 @kind this, `org.spongycastle.math.ec.ECCurve` v3 @kind object, `int` v4 ) @signature `Lorg/spongycastle/math/ec/MixedNafR2LMultiplier;.configureCurve:(Lorg/spongycastle/math/ec/ECCurve;I)Lorg/spongycastle/math/ec/ECCurve;` @AccessFlag PROTECTED {

  # return;
}
procedure `org.spongycastle.math.ec.ECPoint` `multiplyPositive`(`org.spongycastle.math.ec.MixedNafR2LMultiplier` v8 @kind this, `org.spongycastle.math.ec.ECPoint` v9 @kind object, `java.math.BigInteger` v10 @kind object) @signature `Lorg/spongycastle/math/ec/MixedNafR2LMultiplier;.multiplyPositive:(Lorg/spongycastle/math/ec/ECPoint;Ljava/math/BigInteger;)Lorg/spongycastle/math/ec/ECPoint;` @AccessFlag PROTECTED {

  # return;
}
