record `org.spongycastle.math.ec.custom.djb.Curve25519Field` @kind class @AccessFlag PUBLIC {
}
global `long` `@@org.spongycastle.math.ec.custom.djb.Curve25519Field.M` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@org.spongycastle.math.ec.custom.djb.Curve25519Field.P7` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.spongycastle.math.ec.custom.djb.Curve25519Field.PExt` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@org.spongycastle.math.ec.custom.djb.Curve25519Field.PInv` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.spongycastle.math.ec.custom.djb.Curve25519Field.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/math/ec/custom/djb/Curve25519Field;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.math.ec.custom.djb.Curve25519Field` v0 @kind this) @signature `Lorg/spongycastle/math/ec/custom/djb/Curve25519Field;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `add`(`int`[] v0 @kind object, `int`[] v1 @kind object, `int`[] v2 @kind object) @signature `Lorg/spongycastle/math/ec/custom/djb/Curve25519Field;.add:([I[I[I)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `addExt`(`int`[] v1 @kind object, `int`[] v2 @kind object, `int`[] v3 @kind object) @signature `Lorg/spongycastle/math/ec/custom/djb/Curve25519Field;.addExt:([I[I[I)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `addOne`(`int`[] v1 @kind object, `int`[] v2 @kind object) @signature `Lorg/spongycastle/math/ec/custom/djb/Curve25519Field;.addOne:([I[I)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `addPExtTo`(`int`[] v14 @kind object) @signature `Lorg/spongycastle/math/ec/custom/djb/Curve25519Field;.addPExtTo:([I)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `addPTo`(`int`[] v9 @kind object) @signature `Lorg/spongycastle/math/ec/custom/djb/Curve25519Field;.addPTo:([I)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int`[] `fromBigInteger`(`java.math.BigInteger` v2 @kind object) @signature `Lorg/spongycastle/math/ec/custom/djb/Curve25519Field;.fromBigInteger:(Ljava/math/BigInteger;)[I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `half`(`int`[] v3 @kind object, `int`[] v4 @kind object) @signature `Lorg/spongycastle/math/ec/custom/djb/Curve25519Field;.half:([I[I)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `multiply`(`int`[] v1 @kind object, `int`[] v2 @kind object, `int`[] v3 @kind object) @signature `Lorg/spongycastle/math/ec/custom/djb/Curve25519Field;.multiply:([I[I[I)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `multiplyAddToExt`(`int`[] v0 @kind object, `int`[] v1 @kind object, `int`[] v2 @kind object) @signature `Lorg/spongycastle/math/ec/custom/djb/Curve25519Field;.multiplyAddToExt:([I[I[I)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `negate`(`int`[] v1 @kind object, `int`[] v2 @kind object) @signature `Lorg/spongycastle/math/ec/custom/djb/Curve25519Field;.negate:([I[I)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `reduce`(`int`[] v8 @kind object, `int`[] v9 @kind object) @signature `Lorg/spongycastle/math/ec/custom/djb/Curve25519Field;.reduce:([I[I)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `reduce27`(`int` v3 , `int`[] v4 @kind object) @signature `Lorg/spongycastle/math/ec/custom/djb/Curve25519Field;.reduce27:(I[I)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `square`(`int`[] v1 @kind object, `int`[] v2 @kind object) @signature `Lorg/spongycastle/math/ec/custom/djb/Curve25519Field;.square:([I[I)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `squareN`(`int`[] v1 @kind object, `int` v2 , `int`[] v3 @kind object) @signature `Lorg/spongycastle/math/ec/custom/djb/Curve25519Field;.squareN:([II[I)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `subPExtFrom`(`int`[] v14 @kind object) @signature `Lorg/spongycastle/math/ec/custom/djb/Curve25519Field;.subPExtFrom:([I)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `subPFrom`(`int`[] v9 @kind object) @signature `Lorg/spongycastle/math/ec/custom/djb/Curve25519Field;.subPFrom:([I)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `subtract`(`int`[] v0 @kind object, `int`[] v1 @kind object, `int`[] v2 @kind object) @signature `Lorg/spongycastle/math/ec/custom/djb/Curve25519Field;.subtract:([I[I[I)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `subtractExt`(`int`[] v1 @kind object, `int`[] v2 @kind object, `int`[] v3 @kind object) @signature `Lorg/spongycastle/math/ec/custom/djb/Curve25519Field;.subtractExt:([I[I[I)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `twice`(`int`[] v2 @kind object, `int`[] v3 @kind object) @signature `Lorg/spongycastle/math/ec/custom/djb/Curve25519Field;.twice:([I[I)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
