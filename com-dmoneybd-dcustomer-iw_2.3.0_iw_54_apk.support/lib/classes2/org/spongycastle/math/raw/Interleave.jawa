record `org.spongycastle.math.raw.Interleave` @kind class @AccessFlag PUBLIC {
}
global `long` `@@org.spongycastle.math.raw.Interleave.M32` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.spongycastle.math.raw.Interleave.M64` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.spongycastle.math.raw.Interleave` v0 @kind this) @signature `Lorg/spongycastle/math/raw/Interleave;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `expand16to32`(`int` v1 ) @signature `Lorg/spongycastle/math/raw/Interleave;.expand16to32:(I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `expand32to64`(`int` v6 ) @signature `Lorg/spongycastle/math/raw/Interleave;.expand32to64:(I)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `expand64To128`(`long` v5 , `long`[] v7 @kind object, `int` v8 ) @signature `Lorg/spongycastle/math/raw/Interleave;.expand64To128:(J[JI)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `expand8to16`(`int` v1 ) @signature `Lorg/spongycastle/math/raw/Interleave;.expand8to16:(I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `long` `unshuffle`(`long` v5 ) @signature `Lorg/spongycastle/math/raw/Interleave;.unshuffle:(J)J` @AccessFlag PUBLIC_STATIC {

  # return;
}
