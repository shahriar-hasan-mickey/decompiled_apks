record `org.spongycastle.math.field.GF2Polynomial` @kind class @AccessFlag  extends `org.spongycastle.math.field.Polynomial` @kind interface {
  `int`[] `org.spongycastle.math.field.GF2Polynomial.exponents` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`org.spongycastle.math.field.GF2Polynomial` v0 @kind this, `int`[] v1 @kind object) @signature `Lorg/spongycastle/math/field/GF2Polynomial;.<init>:([I)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `equals`(`org.spongycastle.math.field.GF2Polynomial` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/spongycastle/math/field/GF2Polynomial;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getDegree`(`org.spongycastle.math.field.GF2Polynomial` v2 @kind this) @signature `Lorg/spongycastle/math/field/GF2Polynomial;.getDegree:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int`[] `getExponentsPresent`(`org.spongycastle.math.field.GF2Polynomial` v1 @kind this) @signature `Lorg/spongycastle/math/field/GF2Polynomial;.getExponentsPresent:()[I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`org.spongycastle.math.field.GF2Polynomial` v1 @kind this) @signature `Lorg/spongycastle/math/field/GF2Polynomial;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
