record `org.spongycastle.asn1.cms.PasswordRecipientInfo` @kind class @AccessFlag PUBLIC extends `org.spongycastle.asn1.ASN1Object` @kind class {
  `org.spongycastle.asn1.ASN1OctetString` `org.spongycastle.asn1.cms.PasswordRecipientInfo.encryptedKey` @AccessFlag PRIVATE;
  `org.spongycastle.asn1.x509.AlgorithmIdentifier` `org.spongycastle.asn1.cms.PasswordRecipientInfo.keyDerivationAlgorithm` @AccessFlag PRIVATE;
  `org.spongycastle.asn1.x509.AlgorithmIdentifier` `org.spongycastle.asn1.cms.PasswordRecipientInfo.keyEncryptionAlgorithm` @AccessFlag PRIVATE;
  `org.spongycastle.asn1.ASN1Integer` `org.spongycastle.asn1.cms.PasswordRecipientInfo.version` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.asn1.cms.PasswordRecipientInfo` v4 @kind this, `org.spongycastle.asn1.ASN1Sequence` v5 @kind object) @signature `Lorg/spongycastle/asn1/cms/PasswordRecipientInfo;.<init>:(Lorg/spongycastle/asn1/ASN1Sequence;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.asn1.cms.PasswordRecipientInfo` v3 @kind this, `org.spongycastle.asn1.x509.AlgorithmIdentifier` v4 @kind object, `org.spongycastle.asn1.ASN1OctetString` v5 @kind object) @signature `Lorg/spongycastle/asn1/cms/PasswordRecipientInfo;.<init>:(Lorg/spongycastle/asn1/x509/AlgorithmIdentifier;Lorg/spongycastle/asn1/ASN1OctetString;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.asn1.cms.PasswordRecipientInfo` v3 @kind this, `org.spongycastle.asn1.x509.AlgorithmIdentifier` v4 @kind object, `org.spongycastle.asn1.x509.AlgorithmIdentifier` v5 @kind object, `org.spongycastle.asn1.ASN1OctetString` v6 @kind object) @signature `Lorg/spongycastle/asn1/cms/PasswordRecipientInfo;.<init>:(Lorg/spongycastle/asn1/x509/AlgorithmIdentifier;Lorg/spongycastle/asn1/x509/AlgorithmIdentifier;Lorg/spongycastle/asn1/ASN1OctetString;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.asn1.cms.PasswordRecipientInfo` `getInstance`(`java.lang.Object` v1 @kind object) @signature `Lorg/spongycastle/asn1/cms/PasswordRecipientInfo;.getInstance:(Ljava/lang/Object;)Lorg/spongycastle/asn1/cms/PasswordRecipientInfo;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.asn1.cms.PasswordRecipientInfo` `getInstance`(`org.spongycastle.asn1.ASN1TaggedObject` v0 @kind object, `boolean` v1 ) @signature `Lorg/spongycastle/asn1/cms/PasswordRecipientInfo;.getInstance:(Lorg/spongycastle/asn1/ASN1TaggedObject;Z)Lorg/spongycastle/asn1/cms/PasswordRecipientInfo;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.asn1.ASN1OctetString` `getEncryptedKey`(`org.spongycastle.asn1.cms.PasswordRecipientInfo` v1 @kind this) @signature `Lorg/spongycastle/asn1/cms/PasswordRecipientInfo;.getEncryptedKey:()Lorg/spongycastle/asn1/ASN1OctetString;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.asn1.x509.AlgorithmIdentifier` `getKeyDerivationAlgorithm`(`org.spongycastle.asn1.cms.PasswordRecipientInfo` v1 @kind this) @signature `Lorg/spongycastle/asn1/cms/PasswordRecipientInfo;.getKeyDerivationAlgorithm:()Lorg/spongycastle/asn1/x509/AlgorithmIdentifier;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.asn1.x509.AlgorithmIdentifier` `getKeyEncryptionAlgorithm`(`org.spongycastle.asn1.cms.PasswordRecipientInfo` v1 @kind this) @signature `Lorg/spongycastle/asn1/cms/PasswordRecipientInfo;.getKeyEncryptionAlgorithm:()Lorg/spongycastle/asn1/x509/AlgorithmIdentifier;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.asn1.ASN1Integer` `getVersion`(`org.spongycastle.asn1.cms.PasswordRecipientInfo` v1 @kind this) @signature `Lorg/spongycastle/asn1/cms/PasswordRecipientInfo;.getVersion:()Lorg/spongycastle/asn1/ASN1Integer;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.asn1.ASN1Primitive` `toASN1Primitive`(`org.spongycastle.asn1.cms.PasswordRecipientInfo` v4 @kind this) @signature `Lorg/spongycastle/asn1/cms/PasswordRecipientInfo;.toASN1Primitive:()Lorg/spongycastle/asn1/ASN1Primitive;` @AccessFlag PUBLIC {

  # return;
}
