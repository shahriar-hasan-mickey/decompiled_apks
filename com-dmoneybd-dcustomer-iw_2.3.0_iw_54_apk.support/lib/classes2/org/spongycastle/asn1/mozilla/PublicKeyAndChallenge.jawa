record `org.spongycastle.asn1.mozilla.PublicKeyAndChallenge` @kind class @AccessFlag PUBLIC extends `org.spongycastle.asn1.ASN1Object` @kind class {
  `org.spongycastle.asn1.DERIA5String` `org.spongycastle.asn1.mozilla.PublicKeyAndChallenge.challenge` @AccessFlag PRIVATE;
  `org.spongycastle.asn1.ASN1Sequence` `org.spongycastle.asn1.mozilla.PublicKeyAndChallenge.pkacSeq` @AccessFlag PRIVATE;
  `org.spongycastle.asn1.x509.SubjectPublicKeyInfo` `org.spongycastle.asn1.mozilla.PublicKeyAndChallenge.spki` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.asn1.mozilla.PublicKeyAndChallenge` v1 @kind this, `org.spongycastle.asn1.ASN1Sequence` v2 @kind object) @signature `Lorg/spongycastle/asn1/mozilla/PublicKeyAndChallenge;.<init>:(Lorg/spongycastle/asn1/ASN1Sequence;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.asn1.mozilla.PublicKeyAndChallenge` `getInstance`(`java.lang.Object` v1 @kind object) @signature `Lorg/spongycastle/asn1/mozilla/PublicKeyAndChallenge;.getInstance:(Ljava/lang/Object;)Lorg/spongycastle/asn1/mozilla/PublicKeyAndChallenge;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.asn1.DERIA5String` `getChallenge`(`org.spongycastle.asn1.mozilla.PublicKeyAndChallenge` v1 @kind this) @signature `Lorg/spongycastle/asn1/mozilla/PublicKeyAndChallenge;.getChallenge:()Lorg/spongycastle/asn1/DERIA5String;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.asn1.x509.SubjectPublicKeyInfo` `getSubjectPublicKeyInfo`(`org.spongycastle.asn1.mozilla.PublicKeyAndChallenge` v1 @kind this) @signature `Lorg/spongycastle/asn1/mozilla/PublicKeyAndChallenge;.getSubjectPublicKeyInfo:()Lorg/spongycastle/asn1/x509/SubjectPublicKeyInfo;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.asn1.ASN1Primitive` `toASN1Primitive`(`org.spongycastle.asn1.mozilla.PublicKeyAndChallenge` v1 @kind this) @signature `Lorg/spongycastle/asn1/mozilla/PublicKeyAndChallenge;.toASN1Primitive:()Lorg/spongycastle/asn1/ASN1Primitive;` @AccessFlag PUBLIC {

  # return;
}
