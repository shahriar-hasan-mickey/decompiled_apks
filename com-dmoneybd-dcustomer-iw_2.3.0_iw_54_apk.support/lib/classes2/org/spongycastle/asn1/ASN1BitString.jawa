record `org.spongycastle.asn1.ASN1BitString` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.spongycastle.asn1.ASN1Primitive` @kind class, `org.spongycastle.asn1.ASN1String` @kind interface {
  `byte`[] `org.spongycastle.asn1.ASN1BitString.data` @AccessFlag PROTECTED_FINAL;
  `int` `org.spongycastle.asn1.ASN1BitString.padBits` @AccessFlag PROTECTED_FINAL;
}
global `char`[] `@@org.spongycastle.asn1.ASN1BitString.table` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/asn1/ASN1BitString;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.asn1.ASN1BitString` v1 @kind this, `byte`[] v2 @kind object, `int` v3 ) @signature `Lorg/spongycastle/asn1/ASN1BitString;.<init>:([BI)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.asn1.ASN1BitString` `d`(`int` v3 , `java.io.InputStream` v4 @kind object) @signature `Lorg/spongycastle/asn1/ASN1BitString;.d:(ILjava/io/InputStream;)Lorg/spongycastle/asn1/ASN1BitString;` @AccessFlag STATIC {

  # return;
}
procedure `byte`[] `derForm`(`byte`[] v3 @kind object, `int` v4 ) @signature `Lorg/spongycastle/asn1/ASN1BitString;.derForm:([BI)[B` @AccessFlag PROTECTED_STATIC {

  # return;
}
procedure `byte`[] `getBytes`(`int` v5 ) @signature `Lorg/spongycastle/asn1/ASN1BitString;.getBytes:(I)[B` @AccessFlag PROTECTED_STATIC {

  # return;
}
procedure `int` `getPadBits`(`int` v3 ) @signature `Lorg/spongycastle/asn1/ASN1BitString;.getPadBits:(I)I` @AccessFlag PROTECTED_STATIC {

  # return;
}
procedure `boolean` `asn1Equals`(`org.spongycastle.asn1.ASN1BitString` v3 @kind this, `org.spongycastle.asn1.ASN1Primitive` v4 @kind object) @signature `Lorg/spongycastle/asn1/ASN1BitString;.asn1Equals:(Lorg/spongycastle/asn1/ASN1Primitive;)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `org.spongycastle.asn1.ASN1Primitive` `b`(`org.spongycastle.asn1.ASN1BitString` v3 @kind this) @signature `Lorg/spongycastle/asn1/ASN1BitString;.b:()Lorg/spongycastle/asn1/ASN1Primitive;` @AccessFlag  {

  # return;
}
procedure `org.spongycastle.asn1.ASN1Primitive` `c`(`org.spongycastle.asn1.ASN1BitString` v3 @kind this) @signature `Lorg/spongycastle/asn1/ASN1BitString;.c:()Lorg/spongycastle/asn1/ASN1Primitive;` @AccessFlag  {

  # return;
}
procedure `byte`[] `getBytes`(`org.spongycastle.asn1.ASN1BitString` v2 @kind this) @signature `Lorg/spongycastle/asn1/ASN1BitString;.getBytes:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.asn1.ASN1Primitive` `getLoadedObject`(`org.spongycastle.asn1.ASN1BitString` v1 @kind this) @signature `Lorg/spongycastle/asn1/ASN1BitString;.getLoadedObject:()Lorg/spongycastle/asn1/ASN1Primitive;` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getOctets`(`org.spongycastle.asn1.ASN1BitString` v2 @kind this) @signature `Lorg/spongycastle/asn1/ASN1BitString;.getOctets:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getPadBits`(`org.spongycastle.asn1.ASN1BitString` v1 @kind this) @signature `Lorg/spongycastle/asn1/ASN1BitString;.getPadBits:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getString`(`org.spongycastle.asn1.ASN1BitString` v5 @kind this) @signature `Lorg/spongycastle/asn1/ASN1BitString;.getString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`org.spongycastle.asn1.ASN1BitString` v2 @kind this) @signature `Lorg/spongycastle/asn1/ASN1BitString;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `intValue`(`org.spongycastle.asn1.ASN1BitString` v6 @kind this) @signature `Lorg/spongycastle/asn1/ASN1BitString;.intValue:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`org.spongycastle.asn1.ASN1BitString` v1 @kind this) @signature `Lorg/spongycastle/asn1/ASN1BitString;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
