record `org.spongycastle.asn1.ASN1Boolean` @kind class @AccessFlag PUBLIC extends `org.spongycastle.asn1.ASN1Primitive` @kind class {
  `byte`[] `org.spongycastle.asn1.ASN1Boolean.value` @AccessFlag PRIVATE_FINAL;
}
global `org.spongycastle.asn1.ASN1Boolean` `@@org.spongycastle.asn1.ASN1Boolean.FALSE` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte`[] `@@org.spongycastle.asn1.ASN1Boolean.FALSE_VALUE` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.spongycastle.asn1.ASN1Boolean` `@@org.spongycastle.asn1.ASN1Boolean.TRUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte`[] `@@org.spongycastle.asn1.ASN1Boolean.TRUE_VALUE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/asn1/ASN1Boolean;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.asn1.ASN1Boolean` v0 @kind this, `boolean` v1 ) @signature `Lorg/spongycastle/asn1/ASN1Boolean;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.asn1.ASN1Boolean` v2 @kind this, `byte`[] v3 @kind object) @signature `Lorg/spongycastle/asn1/ASN1Boolean;.<init>:([B)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `org.spongycastle.asn1.ASN1Boolean` `d`(`byte`[] v2 @kind object) @signature `Lorg/spongycastle/asn1/ASN1Boolean;.d:([B)Lorg/spongycastle/asn1/ASN1Boolean;` @AccessFlag STATIC {

  # return;
}
procedure `org.spongycastle.asn1.ASN1Boolean` `getInstance`(`int` v0 ) @signature `Lorg/spongycastle/asn1/ASN1Boolean;.getInstance:(I)Lorg/spongycastle/asn1/ASN1Boolean;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.asn1.ASN1Boolean` `getInstance`(`java.lang.Object` v3 @kind object) @signature `Lorg/spongycastle/asn1/ASN1Boolean;.getInstance:(Ljava/lang/Object;)Lorg/spongycastle/asn1/ASN1Boolean;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.asn1.ASN1Boolean` `getInstance`(`org.spongycastle.asn1.ASN1TaggedObject` v0 @kind object, `boolean` v1 ) @signature `Lorg/spongycastle/asn1/ASN1Boolean;.getInstance:(Lorg/spongycastle/asn1/ASN1TaggedObject;Z)Lorg/spongycastle/asn1/ASN1Boolean;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `org.spongycastle.asn1.ASN1Boolean` `getInstance`(`boolean` v0 ) @signature `Lorg/spongycastle/asn1/ASN1Boolean;.getInstance:(Z)Lorg/spongycastle/asn1/ASN1Boolean;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `a`(`org.spongycastle.asn1.ASN1Boolean` v1 @kind this) @signature `Lorg/spongycastle/asn1/ASN1Boolean;.a:()I` @AccessFlag  {

  # return;
}
procedure `boolean` `asn1Equals`(`org.spongycastle.asn1.ASN1Boolean` v2 @kind this, `org.spongycastle.asn1.ASN1Primitive` v3 @kind object) @signature `Lorg/spongycastle/asn1/ASN1Boolean;.asn1Equals:(Lorg/spongycastle/asn1/ASN1Primitive;)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `encode`(`org.spongycastle.asn1.ASN1Boolean` v2 @kind this, `org.spongycastle.asn1.ASN1OutputStream` v3 @kind object) @signature `Lorg/spongycastle/asn1/ASN1Boolean;.encode:(Lorg/spongycastle/asn1/ASN1OutputStream;)V` @AccessFlag  {

  # return;
}
procedure `int` `hashCode`(`org.spongycastle.asn1.ASN1Boolean` v2 @kind this) @signature `Lorg/spongycastle/asn1/ASN1Boolean;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isConstructed`(`org.spongycastle.asn1.ASN1Boolean` v1 @kind this) @signature `Lorg/spongycastle/asn1/ASN1Boolean;.isConstructed:()Z` @AccessFlag  {

  # return;
}
procedure `boolean` `isTrue`(`org.spongycastle.asn1.ASN1Boolean` v2 @kind this) @signature `Lorg/spongycastle/asn1/ASN1Boolean;.isTrue:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`org.spongycastle.asn1.ASN1Boolean` v2 @kind this) @signature `Lorg/spongycastle/asn1/ASN1Boolean;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
