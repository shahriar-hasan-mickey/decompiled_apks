record `org.spongycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial` @kind class @AccessFlag PUBLIC {
  `java.math.BigDecimal`[] `org.spongycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial.a` @AccessFlag ;
}
global `java.math.BigDecimal` `@@org.spongycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial.ONE_HALF` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.math.BigDecimal` `@@org.spongycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial.ZERO` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial` v3 @kind this, `int` v4 ) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial;.<init>:(I)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial` v5 @kind this, `org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` v6 @kind object) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial;.<init>:(Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial` v0 @kind this, `java.math.BigDecimal`[] v1 @kind object) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial;.<init>:([Ljava/math/BigDecimal;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.math.BigDecimal`[] `copyOf`(`org.spongycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial` v2 @kind this, `java.math.BigDecimal`[] v3 @kind object, `int` v4 ) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial;.copyOf:([Ljava/math/BigDecimal;I)[Ljava/math/BigDecimal;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.math.BigDecimal`[] `copyOfRange`(`org.spongycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial` v2 @kind this, `java.math.BigDecimal`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial;.copyOfRange:([Ljava/math/BigDecimal;II)[Ljava/math/BigDecimal;` @AccessFlag PRIVATE {

  # return;
}
procedure `org.spongycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial` `multRecursive`(`org.spongycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial` v9 @kind this, `org.spongycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial` v10 @kind object) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial;.multRecursive:(Lorg/spongycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial;)Lorg/spongycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `a`(`org.spongycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial` v4 @kind this, `org.spongycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial` v5 @kind object) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial;.a:(Lorg/spongycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial;)V` @AccessFlag  {

  # return;
}
procedure `void` `add`(`org.spongycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial` v4 @kind this, `org.spongycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial` v5 @kind object) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial;.add:(Lorg/spongycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `clone`(`org.spongycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial` v2 @kind this) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.math.BigDecimal`[] `getCoeffs`(`org.spongycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial` v4 @kind this) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial;.getCoeffs:()[Ljava/math/BigDecimal;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `halve`(`org.spongycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial` v4 @kind this) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial;.halve:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial` `mult`(`org.spongycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial` v6 @kind this, `org.spongycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial` v7 @kind object) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial;.mult:(Lorg/spongycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial;)Lorg/spongycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial` `mult`(`org.spongycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial` v1 @kind this, `org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` v2 @kind object) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial;.mult:(Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;)Lorg/spongycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` `round`(`org.spongycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial` v7 @kind this) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/BigDecimalPolynomial;.round:()Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;` @AccessFlag PUBLIC {

  # return;
}
