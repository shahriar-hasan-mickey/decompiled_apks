record `org.spongycastle.pqc.math.ntru.polynomial.Polynomial` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` `mult`(`org.spongycastle.pqc.math.ntru.polynomial.BigIntPolynomial` v0 @kind object) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/Polynomial;.mult:(Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;)Lorg/spongycastle/pqc/math/ntru/polynomial/BigIntPolynomial;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial` `mult`(`org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial` v0 @kind object) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/Polynomial;.mult:(Lorg/spongycastle/pqc/math/ntru/polynomial/IntegerPolynomial;)Lorg/spongycastle/pqc/math/ntru/polynomial/IntegerPolynomial;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial` `mult`(`org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial` v0 @kind object, `int` v1 ) @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/Polynomial;.mult:(Lorg/spongycastle/pqc/math/ntru/polynomial/IntegerPolynomial;I)Lorg/spongycastle/pqc/math/ntru/polynomial/IntegerPolynomial;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial` `toIntegerPolynomial`() @signature `Lorg/spongycastle/pqc/math/ntru/polynomial/Polynomial;.toIntegerPolynomial:()Lorg/spongycastle/pqc/math/ntru/polynomial/IntegerPolynomial;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
