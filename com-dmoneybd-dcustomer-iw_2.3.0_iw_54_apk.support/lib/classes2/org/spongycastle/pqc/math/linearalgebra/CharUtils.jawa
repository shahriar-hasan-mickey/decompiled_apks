record `org.spongycastle.pqc.math.linearalgebra.CharUtils` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`org.spongycastle.pqc.math.linearalgebra.CharUtils` v0 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/CharUtils;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `char`[] `clone`(`char`[] v3 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/CharUtils;.clone:([C)[C` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `equals`(`char`[] v6 @kind object, `char`[] v7 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/CharUtils;.equals:([C[C)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `toByteArray`(`char`[] v3 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/CharUtils;.toByteArray:([C)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `byte`[] `toByteArrayForPBE`(`char`[] v7 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/CharUtils;.toByteArrayForPBE:([C)[B` @AccessFlag PUBLIC_STATIC {

  # return;
}
