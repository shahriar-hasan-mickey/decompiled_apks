record `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` @kind class @AccessFlag PUBLIC {
  `int`[] `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.coefficients` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.degree` @AccessFlag PRIVATE;
  `org.spongycastle.pqc.math.linearalgebra.GF2mField` `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.field` @AccessFlag PRIVATE;
}
global `char` `@@org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM.RANDOM_IRREDUCIBLE_POLYNOMIAL` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v0 @kind this, `org.spongycastle.pqc.math.linearalgebra.GF2mField` v1 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.<init>:(Lorg/spongycastle/pqc/math/linearalgebra/GF2mField;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v1 @kind this, `org.spongycastle.pqc.math.linearalgebra.GF2mField` v2 @kind object, `int` v3 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.<init>:(Lorg/spongycastle/pqc/math/linearalgebra/GF2mField;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v0 @kind this, `org.spongycastle.pqc.math.linearalgebra.GF2mField` v1 @kind object, `int` v2 , `char` v3 , `java.security.SecureRandom` v4 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.<init>:(Lorg/spongycastle/pqc/math/linearalgebra/GF2mField;ICLjava/security/SecureRandom;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v9 @kind this, `org.spongycastle.pqc.math.linearalgebra.GF2mField` v10 @kind object, `byte`[] v11 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.<init>:(Lorg/spongycastle/pqc/math/linearalgebra/GF2mField;[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v0 @kind this, `org.spongycastle.pqc.math.linearalgebra.GF2mField` v1 @kind object, `int`[] v2 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.<init>:(Lorg/spongycastle/pqc/math/linearalgebra/GF2mField;[I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v1 @kind this, `org.spongycastle.pqc.math.linearalgebra.GF2mVector` v2 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.<init>:(Lorg/spongycastle/pqc/math/linearalgebra/GF2mVector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v1 @kind this, `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v2 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.<init>:(Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int`[] `add`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v4 @kind this, `int`[] v5 @kind object, `int`[] v6 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.add:([I[I)[I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `computeDegree`(`int`[] v2 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.computeDegree:([I)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `computeDegree`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v2 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.computeDegree:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `int`[] `createRandomIrreduciblePolynomial`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v4 @kind this, `int` v5 , `java.security.SecureRandom` v6 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.createRandomIrreduciblePolynomial:(ILjava/security/SecureRandom;)[I` @AccessFlag PRIVATE {

  # return;
}
procedure `int`[][] `div`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v7 @kind this, `int`[] v8 @kind object, `int`[] v9 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.div:([I[I)[[I` @AccessFlag PRIVATE {

  # return;
}
procedure `int`[] `gcd`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v4 @kind this, `int`[] v5 @kind object, `int`[] v6 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.gcd:([I[I)[I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `headCoefficient`(`int`[] v2 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.headCoefficient:([I)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `isEqual`(`int`[] v5 @kind object, `int`[] v6 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.isEqual:([I[I)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `isIrreducible`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v8 @kind this, `int`[] v9 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.isIrreducible:([I)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `int`[] `mod`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v5 @kind this, `int`[] v6 @kind object, `int`[] v7 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.mod:([I[I)[I` @AccessFlag PRIVATE {

  # return;
}
procedure `int`[] `modDiv`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v6 @kind this, `int`[] v7 @kind object, `int`[] v8 @kind object, `int`[] v9 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.modDiv:([I[I[I)[I` @AccessFlag PRIVATE {

  # return;
}
procedure `int`[] `modMultiply`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v0 @kind this, `int`[] v1 @kind object, `int`[] v2 @kind object, `int`[] v3 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.modMultiply:([I[I[I)[I` @AccessFlag PRIVATE {

  # return;
}
procedure `int`[] `multWithElement`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v4 @kind this, `int`[] v5 @kind object, `int` v6 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.multWithElement:([II)[I` @AccessFlag PRIVATE {

  # return;
}
procedure `int`[] `multWithMonomial`(`int`[] v4 @kind object, `int` v5 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.multWithMonomial:([II)[I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int`[] `multiply`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v8 @kind this, `int`[] v9 @kind object, `int`[] v10 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.multiply:([I[I)[I` @AccessFlag PRIVATE {

  # return;
}
procedure `int`[] `normalForm`(`int`[] v3 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.normalForm:([I)[I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` `add`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v2 @kind this, `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v3 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.add:(Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;)Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` `addMonomial`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v2 @kind this, `int` v3 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.addMonomial:(I)Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `addToThis`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v1 @kind this, `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v2 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.addToThis:(Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM`[] `div`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v5 @kind this, `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v6 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.div:(Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;)[Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `evaluateAt`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v3 @kind this, `int` v4 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.evaluateAt:(I)I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` `gcd`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v2 @kind this, `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v3 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.gcd:(Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;)Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getCoefficient`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v1 @kind this, `int` v2 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.getCoefficient:(I)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getDegree`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v2 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.getDegree:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getEncoded`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v8 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.getEncoded:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getHeadCoefficient`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v2 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.getHeadCoefficient:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v4 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` `mod`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v2 @kind this, `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v3 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.mod:(Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;)Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` `modDiv`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v1 @kind this, `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v2 @kind object, `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v3 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.modDiv:(Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;)Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` `modInverse`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v3 @kind this, `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v4 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.modInverse:(Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;)Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` `modMultiply`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v1 @kind this, `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v2 @kind object, `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v3 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.modMultiply:(Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;)Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM`[] `modPolynomialToFracton`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v11 @kind this, `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v12 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.modPolynomialToFracton:(Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;)[Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` `modSquareMatrix`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v9 @kind this, `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM`[] v10 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.modSquareMatrix:([Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;)Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` `modSquareRoot`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v3 @kind this, `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v4 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.modSquareRoot:(Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;)Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` `modSquareRootMatrix`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v8 @kind this, `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM`[] v9 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.modSquareRootMatrix:([Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;)Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `multThisWithElement`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v1 @kind this, `int` v2 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.multThisWithElement:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` `multWithElement`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v2 @kind this, `int` v3 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.multWithElement:(I)Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` `multWithMonomial`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v2 @kind this, `int` v3 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.multWithMonomial:(I)Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` `multiply`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v2 @kind this, `org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v3 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.multiply:(Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;)Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`org.spongycastle.pqc.math.linearalgebra.PolynomialGF2mSmallM` v4 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/PolynomialGF2mSmallM;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
