record `org.spongycastle.pqc.math.linearalgebra.IntUtils` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`org.spongycastle.pqc.math.linearalgebra.IntUtils` v0 @kind this) @signature `Lorg/spongycastle/pqc/math/linearalgebra/IntUtils;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `int`[] `clone`(`int`[] v3 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/IntUtils;.clone:([I)[I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `equals`(`int`[] v6 @kind object, `int`[] v7 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/IntUtils;.equals:([I[I)Z` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `fill`(`int`[] v1 @kind object, `int` v2 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/IntUtils;.fill:([II)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `partition`(`int`[] v3 @kind object, `int` v4 , `int` v5 , `int` v6 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/IntUtils;.partition:([IIII)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `quicksort`(`int`[] v2 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/IntUtils;.quicksort:([I)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `quicksort`(`int`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/IntUtils;.quicksort:([III)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int`[] `subArray`(`int`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/spongycastle/pqc/math/linearalgebra/IntUtils;.subArray:([III)[I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toHexString`(`int`[] v0 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/IntUtils;.toHexString:([I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toString`(`int`[] v3 @kind object) @signature `Lorg/spongycastle/pqc/math/linearalgebra/IntUtils;.toString:([I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
