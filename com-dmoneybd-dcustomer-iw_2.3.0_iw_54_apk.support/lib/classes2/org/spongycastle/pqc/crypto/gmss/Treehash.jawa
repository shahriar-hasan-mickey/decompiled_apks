record `org.spongycastle.pqc.crypto.gmss.Treehash` @kind class @AccessFlag PUBLIC {
  `byte`[] `org.spongycastle.pqc.crypto.gmss.Treehash.firstNode` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.gmss.Treehash.firstNodeHeight` @AccessFlag PRIVATE;
  `java.util.Vector` `org.spongycastle.pqc.crypto.gmss.Treehash.heightOfNodes` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.pqc.crypto.gmss.Treehash.isFinished` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.pqc.crypto.gmss.Treehash.isInitialized` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.gmss.Treehash.maxHeight` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.Digest` `org.spongycastle.pqc.crypto.gmss.Treehash.messDigestTree` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.pqc.crypto.gmss.Treehash.seedActive` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.pqc.crypto.gmss.Treehash.seedInitialized` @AccessFlag PRIVATE;
  `byte`[] `org.spongycastle.pqc.crypto.gmss.Treehash.seedNext` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.gmss.Treehash.tailLength` @AccessFlag PRIVATE;
  `java.util.Vector` `org.spongycastle.pqc.crypto.gmss.Treehash.tailStack` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.pqc.crypto.gmss.Treehash` v0 @kind this, `java.util.Vector` v1 @kind object, `int` v2 , `org.spongycastle.crypto.Digest` v3 @kind object) @signature `Lorg/spongycastle/pqc/crypto/gmss/Treehash;.<init>:(Ljava/util/Vector;ILorg/spongycastle/crypto/Digest;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.crypto.gmss.Treehash` v5 @kind this, `org.spongycastle.crypto.Digest` v6 @kind object, `byte`[][] v7 @kind object, `int`[] v8 @kind object) @signature `Lorg/spongycastle/pqc/crypto/gmss/Treehash;.<init>:(Lorg/spongycastle/crypto/Digest;[[B[I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `destroy`(`org.spongycastle.pqc.crypto.gmss.Treehash` v2 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/Treehash;.destroy:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getFirstNode`(`org.spongycastle.pqc.crypto.gmss.Treehash` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/Treehash;.getFirstNode:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getFirstNodeHeight`(`org.spongycastle.pqc.crypto.gmss.Treehash` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/Treehash;.getFirstNodeHeight:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getLowestNodeHeight`(`org.spongycastle.pqc.crypto.gmss.Treehash` v2 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/Treehash;.getLowestNodeHeight:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getSeedActive`(`org.spongycastle.pqc.crypto.gmss.Treehash` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/Treehash;.getSeedActive:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[][] `getStatByte`(`org.spongycastle.pqc.crypto.gmss.Treehash` v5 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/Treehash;.getStatByte:()[[B` @AccessFlag PUBLIC {

  # return;
}
procedure `int`[] `getStatInt`(`org.spongycastle.pqc.crypto.gmss.Treehash` v5 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/Treehash;.getStatInt:()[I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Vector` `getTailStack`(`org.spongycastle.pqc.crypto.gmss.Treehash` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/Treehash;.getTailStack:()Ljava/util/Vector;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `initialize`(`org.spongycastle.pqc.crypto.gmss.Treehash` v4 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/Treehash;.initialize:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `initializeSeed`(`org.spongycastle.pqc.crypto.gmss.Treehash` v3 @kind this, `byte`[] v4 @kind object) @signature `Lorg/spongycastle/pqc/crypto/gmss/Treehash;.initializeSeed:([B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setFirstNode`(`org.spongycastle.pqc.crypto.gmss.Treehash` v1 @kind this, `byte`[] v2 @kind object) @signature `Lorg/spongycastle/pqc/crypto/gmss/Treehash;.setFirstNode:([B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`org.spongycastle.pqc.crypto.gmss.Treehash` v5 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/Treehash;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `update`(`org.spongycastle.pqc.crypto.gmss.Treehash` v6 @kind this, `org.spongycastle.pqc.crypto.gmss.util.GMSSRandom` v7 @kind object, `byte`[] v8 @kind object) @signature `Lorg/spongycastle/pqc/crypto/gmss/Treehash;.update:(Lorg/spongycastle/pqc/crypto/gmss/util/GMSSRandom;[B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `updateNextSeed`(`org.spongycastle.pqc.crypto.gmss.Treehash` v1 @kind this, `org.spongycastle.pqc.crypto.gmss.util.GMSSRandom` v2 @kind object) @signature `Lorg/spongycastle/pqc/crypto/gmss/Treehash;.updateNextSeed:(Lorg/spongycastle/pqc/crypto/gmss/util/GMSSRandom;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `wasFinished`(`org.spongycastle.pqc.crypto.gmss.Treehash` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/Treehash;.wasFinished:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `wasInitialized`(`org.spongycastle.pqc.crypto.gmss.Treehash` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/Treehash;.wasInitialized:()Z` @AccessFlag PUBLIC {

  # return;
}
