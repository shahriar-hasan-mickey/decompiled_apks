record `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters` @kind class @AccessFlag PUBLIC extends `org.spongycastle.pqc.crypto.gmss.GMSSKeyParameters` @kind class {
  `int`[] `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.K` @AccessFlag PRIVATE;
  `byte`[][][] `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.currentAuthPaths` @AccessFlag PRIVATE;
  `java.util.Vector`[][] `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.currentRetain` @AccessFlag PRIVATE;
  `byte`[][] `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.currentRootSig` @AccessFlag PRIVATE;
  `byte`[][] `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.currentSeeds` @AccessFlag PRIVATE;
  `java.util.Vector`[] `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.currentStack` @AccessFlag PRIVATE;
  `org.spongycastle.pqc.crypto.gmss.Treehash`[][] `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.currentTreehash` @AccessFlag PRIVATE;
  `org.spongycastle.pqc.crypto.gmss.GMSSDigestProvider` `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.digestProvider` @AccessFlag PRIVATE;
  `org.spongycastle.pqc.crypto.gmss.GMSSParameters` `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.gmssPS` @AccessFlag PRIVATE;
  `org.spongycastle.pqc.crypto.gmss.util.GMSSRandom` `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.gmssRandom` @AccessFlag PRIVATE;
  `int`[] `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.heightOfTrees` @AccessFlag PRIVATE;
  `int`[] `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.index` @AccessFlag PRIVATE;
  `byte`[][][] `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.keep` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.mdLength` @AccessFlag PRIVATE;
  `org.spongycastle.crypto.Digest` `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.messDigestTrees` @AccessFlag PRIVATE;
  `int`[] `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.minTreehash` @AccessFlag PRIVATE;
  `byte`[][][] `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.nextAuthPaths` @AccessFlag PRIVATE;
  `org.spongycastle.pqc.crypto.gmss.GMSSLeaf`[] `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.nextNextLeaf` @AccessFlag PRIVATE;
  `org.spongycastle.pqc.crypto.gmss.GMSSRootCalc`[] `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.nextNextRoot` @AccessFlag PRIVATE;
  `byte`[][] `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.nextNextSeeds` @AccessFlag PRIVATE;
  `java.util.Vector`[][] `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.nextRetain` @AccessFlag PRIVATE;
  `byte`[][] `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.nextRoot` @AccessFlag PRIVATE;
  `org.spongycastle.pqc.crypto.gmss.GMSSRootSig`[] `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.nextRootSig` @AccessFlag PRIVATE;
  `java.util.Vector`[] `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.nextStack` @AccessFlag PRIVATE;
  `org.spongycastle.pqc.crypto.gmss.Treehash`[][] `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.nextTreehash` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.numLayer` @AccessFlag PRIVATE;
  `int`[] `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.numLeafs` @AccessFlag PRIVATE;
  `int`[] `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.otsIndex` @AccessFlag PRIVATE;
  `org.spongycastle.pqc.crypto.gmss.GMSSLeaf`[] `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.upperLeaf` @AccessFlag PRIVATE;
  `org.spongycastle.pqc.crypto.gmss.GMSSLeaf`[] `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.upperTreehashLeaf` @AccessFlag PRIVATE;
  `boolean` `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters.used` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters` v2 @kind this, `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters` v3 @kind object) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSPrivateKeyParameters;.<init>:(Lorg/spongycastle/pqc/crypto/gmss/GMSSPrivateKeyParameters;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters` v16 @kind this, `int`[] v17 @kind object, `byte`[][] v18 @kind object, `byte`[][] v19 @kind object, `byte`[][][] v20 @kind object, `byte`[][][] v21 @kind object, `byte`[][][] v22 @kind object, `org.spongycastle.pqc.crypto.gmss.Treehash`[][] v23 @kind object, `org.spongycastle.pqc.crypto.gmss.Treehash`[][] v24 @kind object, `java.util.Vector`[] v25 @kind object, `java.util.Vector`[] v26 @kind object, `java.util.Vector`[][] v27 @kind object, `java.util.Vector`[][] v28 @kind object, `org.spongycastle.pqc.crypto.gmss.GMSSLeaf`[] v29 @kind object, `org.spongycastle.pqc.crypto.gmss.GMSSLeaf`[] v30 @kind object, `org.spongycastle.pqc.crypto.gmss.GMSSLeaf`[] v31 @kind object, `int`[] v32 @kind object, `byte`[][] v33 @kind object, `org.spongycastle.pqc.crypto.gmss.GMSSRootCalc`[] v34 @kind object, `byte`[][] v35 @kind object, `org.spongycastle.pqc.crypto.gmss.GMSSRootSig`[] v36 @kind object, `org.spongycastle.pqc.crypto.gmss.GMSSParameters` v37 @kind object, `org.spongycastle.pqc.crypto.gmss.GMSSDigestProvider` v38 @kind object) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSPrivateKeyParameters;.<init>:([I[[B[[B[[[B[[[B[[[B[[Lorg/spongycastle/pqc/crypto/gmss/Treehash;[[Lorg/spongycastle/pqc/crypto/gmss/Treehash;[Ljava/util/Vector;[Ljava/util/Vector;[[Ljava/util/Vector;[[Ljava/util/Vector;[Lorg/spongycastle/pqc/crypto/gmss/GMSSLeaf;[Lorg/spongycastle/pqc/crypto/gmss/GMSSLeaf;[Lorg/spongycastle/pqc/crypto/gmss/GMSSLeaf;[I[[B[Lorg/spongycastle/pqc/crypto/gmss/GMSSRootCalc;[[B[Lorg/spongycastle/pqc/crypto/gmss/GMSSRootSig;Lorg/spongycastle/pqc/crypto/gmss/GMSSParameters;Lorg/spongycastle/pqc/crypto/gmss/GMSSDigestProvider;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters` v23 @kind this, `byte`[][] v24 @kind object, `byte`[][] v25 @kind object, `byte`[][][] v26 @kind object, `byte`[][][] v27 @kind object, `org.spongycastle.pqc.crypto.gmss.Treehash`[][] v28 @kind object, `org.spongycastle.pqc.crypto.gmss.Treehash`[][] v29 @kind object, `java.util.Vector`[] v30 @kind object, `java.util.Vector`[] v31 @kind object, `java.util.Vector`[][] v32 @kind object, `java.util.Vector`[][] v33 @kind object, `byte`[][] v34 @kind object, `byte`[][] v35 @kind object, `org.spongycastle.pqc.crypto.gmss.GMSSParameters` v36 @kind object, `org.spongycastle.pqc.crypto.gmss.GMSSDigestProvider` v37 @kind object) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSPrivateKeyParameters;.<init>:([[B[[B[[[B[[[B[[Lorg/spongycastle/pqc/crypto/gmss/Treehash;[[Lorg/spongycastle/pqc/crypto/gmss/Treehash;[Ljava/util/Vector;[Ljava/util/Vector;[[Ljava/util/Vector;[[Ljava/util/Vector;[[B[[BLorg/spongycastle/pqc/crypto/gmss/GMSSParameters;Lorg/spongycastle/pqc/crypto/gmss/GMSSDigestProvider;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `computeAuthPaths`(`org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters` v13 @kind this, `int` v14 ) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSPrivateKeyParameters;.computeAuthPaths:(I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `getMinTreehashIndex`(`org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters` v5 @kind this, `int` v6 ) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSPrivateKeyParameters;.getMinTreehashIndex:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `heightOfPhi`(`org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters` v4 @kind this, `int` v5 ) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSPrivateKeyParameters;.heightOfPhi:(I)I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `nextKey`(`org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters` v4 @kind this, `int` v5 ) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSPrivateKeyParameters;.nextKey:(I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `nextTree`(`org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters` v7 @kind this, `int` v8 ) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSPrivateKeyParameters;.nextTree:(I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `updateKey`(`org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters` v8 @kind this, `int` v9 ) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSPrivateKeyParameters;.updateKey:(I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `updateNextNextAuthRoot`(`org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters` v5 @kind this, `int` v6 ) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSPrivateKeyParameters;.updateNextNextAuthRoot:(I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `byte`[][][] `getCurrentAuthPaths`(`org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSPrivateKeyParameters;.getCurrentAuthPaths:()[[[B` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[][] `getCurrentSeeds`(`org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSPrivateKeyParameters;.getCurrentSeeds:()[[B` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getIndex`(`org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters` v1 @kind this, `int` v2 ) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSPrivateKeyParameters;.getIndex:(I)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int`[] `getIndex`(`org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSPrivateKeyParameters;.getIndex:()[I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.crypto.gmss.GMSSDigestProvider` `getName`(`org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSPrivateKeyParameters;.getName:()Lorg/spongycastle/pqc/crypto/gmss/GMSSDigestProvider;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getNumLeafs`(`org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters` v1 @kind this, `int` v2 ) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSPrivateKeyParameters;.getNumLeafs:(I)I` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getSubtreeRootSig`(`org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters` v1 @kind this, `int` v2 ) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSPrivateKeyParameters;.getSubtreeRootSig:(I)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isUsed`(`org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSPrivateKeyParameters;.isUsed:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `markUsed`(`org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSPrivateKeyParameters;.markUsed:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters` `nextKey`(`org.spongycastle.pqc.crypto.gmss.GMSSPrivateKeyParameters` v2 @kind this) @signature `Lorg/spongycastle/pqc/crypto/gmss/GMSSPrivateKeyParameters;.nextKey:()Lorg/spongycastle/pqc/crypto/gmss/GMSSPrivateKeyParameters;` @AccessFlag PUBLIC {

  # return;
}
