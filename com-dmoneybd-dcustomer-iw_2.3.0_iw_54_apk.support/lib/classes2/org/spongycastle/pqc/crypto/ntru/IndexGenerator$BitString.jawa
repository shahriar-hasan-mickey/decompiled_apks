record `org.spongycastle.pqc.crypto.ntru.IndexGenerator$BitString` @kind class @AccessFlag PUBLIC {
  `byte`[] `org.spongycastle.pqc.crypto.ntru.IndexGenerator$BitString.a` @AccessFlag ;
  `int` `org.spongycastle.pqc.crypto.ntru.IndexGenerator$BitString.b` @AccessFlag ;
  `int` `org.spongycastle.pqc.crypto.ntru.IndexGenerator$BitString.c` @AccessFlag ;
}
procedure `void` `<init>`(`org.spongycastle.pqc.crypto.ntru.IndexGenerator$BitString` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/ntru/IndexGenerator$BitString;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`org.spongycastle.pqc.crypto.ntru.IndexGenerator$BitString` v2 @kind this, `byte`[] v3 @kind object) @signature `Lorg/spongycastle/pqc/crypto/ntru/IndexGenerator$BitString;.a:([B)V` @AccessFlag  {

  # return;
}
procedure `void` `appendBits`(`org.spongycastle.pqc.crypto.ntru.IndexGenerator$BitString` v6 @kind this, `byte` v7 ) @signature `Lorg/spongycastle/pqc/crypto/ntru/IndexGenerator$BitString;.appendBits:(B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getBytes`(`org.spongycastle.pqc.crypto.ntru.IndexGenerator$BitString` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/ntru/IndexGenerator$BitString;.getBytes:()[B` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getLeadingAsInt`(`org.spongycastle.pqc.crypto.ntru.IndexGenerator$BitString` v3 @kind this, `int` v4 ) @signature `Lorg/spongycastle/pqc/crypto/ntru/IndexGenerator$BitString;.getLeadingAsInt:(I)I` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.crypto.ntru.IndexGenerator$BitString` `getTrailing`(`org.spongycastle.pqc.crypto.ntru.IndexGenerator$BitString` v5 @kind this, `int` v6 ) @signature `Lorg/spongycastle/pqc/crypto/ntru/IndexGenerator$BitString;.getTrailing:(I)Lorg/spongycastle/pqc/crypto/ntru/IndexGenerator$BitString;` @AccessFlag PUBLIC {

  # return;
}
