record `org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis` @kind class @AccessFlag PUBLIC {
  `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters` `org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis.a` @AccessFlag ;
  `org.spongycastle.pqc.math.ntru.polynomial.Polynomial` `org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis.f` @AccessFlag PUBLIC;
  `org.spongycastle.pqc.math.ntru.polynomial.Polynomial` `org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis.fPrime` @AccessFlag PUBLIC;
  `org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial` `org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis.h` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis` v12 @kind this, `java.io.InputStream` v13 @kind object, `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters` v14 @kind object, `boolean` v15 ) @signature `Lorg/spongycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters$Basis;.<init>:(Ljava/io/InputStream;Lorg/spongycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters;Z)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis` v0 @kind this, `org.spongycastle.pqc.math.ntru.polynomial.Polynomial` v1 @kind object, `org.spongycastle.pqc.math.ntru.polynomial.Polynomial` v2 @kind object, `org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial` v3 @kind object, `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters` v4 @kind object) @signature `Lorg/spongycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters$Basis;.<init>:(Lorg/spongycastle/pqc/math/ntru/polynomial/Polynomial;Lorg/spongycastle/pqc/math/ntru/polynomial/Polynomial;Lorg/spongycastle/pqc/math/ntru/polynomial/IntegerPolynomial;Lorg/spongycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters;)V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `byte`[] `getEncoded`(`org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis` v1 @kind this, `org.spongycastle.pqc.math.ntru.polynomial.Polynomial` v2 @kind object) @signature `Lorg/spongycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters$Basis;.getEncoded:(Lorg/spongycastle/pqc/math/ntru/polynomial/Polynomial;)[B` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `a`(`org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis` v6 @kind this, `java.io.OutputStream` v7 @kind object, `boolean` v8 ) @signature `Lorg/spongycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters$Basis;.a:(Ljava/io/OutputStream;Z)V` @AccessFlag  {

  # return;
}
procedure `boolean` `equals`(`org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lorg/spongycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters$Basis;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis` v4 @kind this) @signature `Lorg/spongycastle/pqc/crypto/ntru/NTRUSigningPrivateKeyParameters$Basis;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
