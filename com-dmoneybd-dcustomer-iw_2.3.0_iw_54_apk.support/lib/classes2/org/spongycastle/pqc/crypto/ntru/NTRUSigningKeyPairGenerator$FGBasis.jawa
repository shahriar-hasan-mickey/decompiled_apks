record `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyPairGenerator$FGBasis` @kind class @AccessFlag PUBLIC extends `org.spongycastle.pqc.crypto.ntru.NTRUSigningPrivateKeyParameters$Basis` @kind class {
  `org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial` `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyPairGenerator$FGBasis.F` @AccessFlag PUBLIC;
  `org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial` `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyPairGenerator$FGBasis.G` @AccessFlag PUBLIC;
  `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyPairGenerator` `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyPairGenerator$FGBasis.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyPairGenerator$FGBasis` v0 @kind this, `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyPairGenerator` v1 @kind object, `org.spongycastle.pqc.math.ntru.polynomial.Polynomial` v2 @kind object, `org.spongycastle.pqc.math.ntru.polynomial.Polynomial` v3 @kind object, `org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial` v4 @kind object, `org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial` v5 @kind object, `org.spongycastle.pqc.math.ntru.polynomial.IntegerPolynomial` v6 @kind object, `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters` v7 @kind object) @signature `Lorg/spongycastle/pqc/crypto/ntru/NTRUSigningKeyPairGenerator$FGBasis;.<init>:(Lorg/spongycastle/pqc/crypto/ntru/NTRUSigningKeyPairGenerator;Lorg/spongycastle/pqc/math/ntru/polynomial/Polynomial;Lorg/spongycastle/pqc/math/ntru/polynomial/Polynomial;Lorg/spongycastle/pqc/math/ntru/polynomial/IntegerPolynomial;Lorg/spongycastle/pqc/math/ntru/polynomial/IntegerPolynomial;Lorg/spongycastle/pqc/math/ntru/polynomial/IntegerPolynomial;Lorg/spongycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `b`(`org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyPairGenerator$FGBasis` v6 @kind this) @signature `Lorg/spongycastle/pqc/crypto/ntru/NTRUSigningKeyPairGenerator$FGBasis;.b:()Z` @AccessFlag  {

  # return;
}
