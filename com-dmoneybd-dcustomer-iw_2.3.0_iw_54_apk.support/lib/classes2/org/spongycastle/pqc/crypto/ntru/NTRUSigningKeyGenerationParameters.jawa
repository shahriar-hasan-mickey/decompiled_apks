record `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters` @kind class @AccessFlag PUBLIC extends `org.spongycastle.crypto.KeyGenerationParameters` @kind class, `java.lang.Cloneable` @kind interface {
  `int` `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.B` @AccessFlag PUBLIC;
  `int` `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.N` @AccessFlag PUBLIC;
  `double` `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.a` @AccessFlag ;
  `double` `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.b` @AccessFlag ;
  `int` `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.basisType` @AccessFlag PUBLIC;
  `double` `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.betaSq` @AccessFlag PUBLIC;
  `double` `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.c` @AccessFlag ;
  `int` `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.d` @AccessFlag PUBLIC;
  `int` `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.d1` @AccessFlag PUBLIC;
  `int` `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.d2` @AccessFlag PUBLIC;
  `int` `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.d3` @AccessFlag PUBLIC;
  `int` `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.e` @AccessFlag ;
  `org.spongycastle.crypto.Digest` `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.hashAlg` @AccessFlag PUBLIC;
  `int` `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.keyGenAlg` @AccessFlag PUBLIC;
  `double` `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.keyNormBoundSq` @AccessFlag PUBLIC;
  `double` `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.normBoundSq` @AccessFlag PUBLIC;
  `int` `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.polyType` @AccessFlag PUBLIC;
  `boolean` `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.primeCheck` @AccessFlag PUBLIC;
  `int` `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.q` @AccessFlag PUBLIC;
  `int` `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.signFailTolerance` @AccessFlag PUBLIC;
  `boolean` `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.sparse` @AccessFlag PUBLIC;
}
global `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters` `@@org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.APR2011_439` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters` `@@org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.APR2011_439_PROD` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters` `@@org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.APR2011_743` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters` `@@org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.APR2011_743_PROD` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.BASIS_TYPE_STANDARD` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.BASIS_TYPE_TRANSPOSE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.KEY_GEN_ALG_FLOAT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.KEY_GEN_ALG_RESULTANT` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters` `@@org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.TEST157` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters` `@@org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters.TEST157_PROD` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/spongycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters` v3 @kind this, `int` v4 , `int` v5 , `int` v6 , `int` v7 , `int` v8 , `double` v9 , `double` v11 , `double` v13 , `boolean` v15 , `boolean` v16 , `int` v17 , `org.spongycastle.crypto.Digest` v18 @kind object) @signature `Lorg/spongycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters;.<init>:(IIIIIDDDZZILorg/spongycastle/crypto/Digest;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters` v3 @kind this, `int` v4 , `int` v5 , `int` v6 , `int` v7 , `int` v8 , `int` v9 , `int` v10 , `double` v11 , `double` v13 , `double` v15 , `boolean` v17 , `boolean` v18 , `int` v19 , `org.spongycastle.crypto.Digest` v20 @kind object) @signature `Lorg/spongycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters;.<init>:(IIIIIIIDDDZZILorg/spongycastle/crypto/Digest;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters` v3 @kind this, `java.io.InputStream` v4 @kind object) @signature `Lorg/spongycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters;.<init>:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `init`(`org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters` v2 @kind this) @signature `Lorg/spongycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters;.init:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Object` `clone`(`org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters` `clone`(`org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters` v37 @kind this) @signature `Lorg/spongycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters;.clone:()Lorg/spongycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lorg/spongycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `org.spongycastle.pqc.crypto.ntru.NTRUSigningParameters` `getSigningParameters`(`org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters` v11 @kind this) @signature `Lorg/spongycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters;.getSigningParameters:()Lorg/spongycastle/pqc/crypto/ntru/NTRUSigningParameters;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters` v7 @kind this) @signature `Lorg/spongycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters` v5 @kind this) @signature `Lorg/spongycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `writeTo`(`org.spongycastle.pqc.crypto.ntru.NTRUSigningKeyGenerationParameters` v3 @kind this, `java.io.OutputStream` v4 @kind object) @signature `Lorg/spongycastle/pqc/crypto/ntru/NTRUSigningKeyGenerationParameters;.writeTo:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {

  # return;
}
