record `org.spongycastle.pqc.crypto.rainbow.Layer` @kind class @AccessFlag PUBLIC {
  `short`[][][] `org.spongycastle.pqc.crypto.rainbow.Layer.coeff_alpha` @AccessFlag PRIVATE;
  `short`[][][] `org.spongycastle.pqc.crypto.rainbow.Layer.coeff_beta` @AccessFlag PRIVATE;
  `short`[] `org.spongycastle.pqc.crypto.rainbow.Layer.coeff_eta` @AccessFlag PRIVATE;
  `short`[][] `org.spongycastle.pqc.crypto.rainbow.Layer.coeff_gamma` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.rainbow.Layer.oi` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.rainbow.Layer.vi` @AccessFlag PRIVATE;
  `int` `org.spongycastle.pqc.crypto.rainbow.Layer.viNext` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.pqc.crypto.rainbow.Layer` v0 @kind this, `byte` v1 , `byte` v2 , `short`[][][] v3 @kind object, `short`[][][] v4 @kind object, `short`[][] v5 @kind object, `short`[] v6 @kind object) @signature `Lorg/spongycastle/pqc/crypto/rainbow/Layer;.<init>:(BB[[[S[[[S[[S[S)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.crypto.rainbow.Layer` v5 @kind this, `int` v6 , `int` v7 , `java.security.SecureRandom` v8 @kind object) @signature `Lorg/spongycastle/pqc/crypto/rainbow/Layer;.<init>:(IILjava/security/SecureRandom;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `equals`(`org.spongycastle.pqc.crypto.rainbow.Layer` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lorg/spongycastle/pqc/crypto/rainbow/Layer;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `short`[][][] `getCoeffAlpha`(`org.spongycastle.pqc.crypto.rainbow.Layer` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/rainbow/Layer;.getCoeffAlpha:()[[[S` @AccessFlag PUBLIC {

  # return;
}
procedure `short`[][][] `getCoeffBeta`(`org.spongycastle.pqc.crypto.rainbow.Layer` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/rainbow/Layer;.getCoeffBeta:()[[[S` @AccessFlag PUBLIC {

  # return;
}
procedure `short`[] `getCoeffEta`(`org.spongycastle.pqc.crypto.rainbow.Layer` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/rainbow/Layer;.getCoeffEta:()[S` @AccessFlag PUBLIC {

  # return;
}
procedure `short`[][] `getCoeffGamma`(`org.spongycastle.pqc.crypto.rainbow.Layer` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/rainbow/Layer;.getCoeffGamma:()[[S` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getOi`(`org.spongycastle.pqc.crypto.rainbow.Layer` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/rainbow/Layer;.getOi:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getVi`(`org.spongycastle.pqc.crypto.rainbow.Layer` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/rainbow/Layer;.getVi:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getViNext`(`org.spongycastle.pqc.crypto.rainbow.Layer` v1 @kind this) @signature `Lorg/spongycastle/pqc/crypto/rainbow/Layer;.getViNext:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`org.spongycastle.pqc.crypto.rainbow.Layer` v2 @kind this) @signature `Lorg/spongycastle/pqc/crypto/rainbow/Layer;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `short`[][] `plugInVinegars`(`org.spongycastle.pqc.crypto.rainbow.Layer` v9 @kind this, `short`[] v10 @kind object) @signature `Lorg/spongycastle/pqc/crypto/rainbow/Layer;.plugInVinegars:([S)[[S` @AccessFlag PUBLIC {

  # return;
}
