record `org.spongycastle.pqc.crypto.rainbow.util.ComputeInField` @kind class @AccessFlag PUBLIC {
  `short`[][] `org.spongycastle.pqc.crypto.rainbow.util.ComputeInField.A` @AccessFlag PRIVATE;
  `short`[] `org.spongycastle.pqc.crypto.rainbow.util.ComputeInField.a` @AccessFlag ;
}
procedure `void` `<init>`(`org.spongycastle.pqc.crypto.rainbow.util.ComputeInField` v0 @kind this) @signature `Lorg/spongycastle/pqc/crypto/rainbow/util/ComputeInField;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `computeZerosAbove`(`org.spongycastle.pqc.crypto.rainbow.util.ComputeInField` v8 @kind this) @signature `Lorg/spongycastle/pqc/crypto/rainbow/util/ComputeInField;.computeZerosAbove:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `computeZerosUnder`(`org.spongycastle.pqc.crypto.rainbow.util.ComputeInField` v9 @kind this, `boolean` v10 ) @signature `Lorg/spongycastle/pqc/crypto/rainbow/util/ComputeInField;.computeZerosUnder:(Z)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `substitute`(`org.spongycastle.pqc.crypto.rainbow.util.ComputeInField` v5 @kind this) @signature `Lorg/spongycastle/pqc/crypto/rainbow/util/ComputeInField;.substitute:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `short`[][] `addSquareMatrix`(`org.spongycastle.pqc.crypto.rainbow.util.ComputeInField` v7 @kind this, `short`[][] v8 @kind object, `short`[][] v9 @kind object) @signature `Lorg/spongycastle/pqc/crypto/rainbow/util/ComputeInField;.addSquareMatrix:([[S[[S)[[S` @AccessFlag PUBLIC {

  # return;
}
procedure `short`[] `addVect`(`org.spongycastle.pqc.crypto.rainbow.util.ComputeInField` v5 @kind this, `short`[] v6 @kind object, `short`[] v7 @kind object) @signature `Lorg/spongycastle/pqc/crypto/rainbow/util/ComputeInField;.addVect:([S[S)[S` @AccessFlag PUBLIC {

  # return;
}
procedure `short`[][] `inverse`(`org.spongycastle.pqc.crypto.rainbow.util.ComputeInField` v8 @kind this, `short`[][] v9 @kind object) @signature `Lorg/spongycastle/pqc/crypto/rainbow/util/ComputeInField;.inverse:([[S)[[S` @AccessFlag PUBLIC {

  # return;
}
procedure `short`[][] `multMatrix`(`org.spongycastle.pqc.crypto.rainbow.util.ComputeInField` v6 @kind this, `short` v7 , `short`[][] v8 @kind object) @signature `Lorg/spongycastle/pqc/crypto/rainbow/util/ComputeInField;.multMatrix:(S[[S)[[S` @AccessFlag PUBLIC {

  # return;
}
procedure `short`[] `multVect`(`org.spongycastle.pqc.crypto.rainbow.util.ComputeInField` v4 @kind this, `short` v5 , `short`[] v6 @kind object) @signature `Lorg/spongycastle/pqc/crypto/rainbow/util/ComputeInField;.multVect:(S[S)[S` @AccessFlag PUBLIC {

  # return;
}
procedure `short`[][] `multVects`(`org.spongycastle.pqc.crypto.rainbow.util.ComputeInField` v7 @kind this, `short`[] v8 @kind object, `short`[] v9 @kind object) @signature `Lorg/spongycastle/pqc/crypto/rainbow/util/ComputeInField;.multVects:([S[S)[[S` @AccessFlag PUBLIC {

  # return;
}
procedure `short`[] `multiplyMatrix`(`org.spongycastle.pqc.crypto.rainbow.util.ComputeInField` v6 @kind this, `short`[][] v7 @kind object, `short`[] v8 @kind object) @signature `Lorg/spongycastle/pqc/crypto/rainbow/util/ComputeInField;.multiplyMatrix:([[S[S)[S` @AccessFlag PUBLIC {

  # return;
}
procedure `short`[][] `multiplyMatrix`(`org.spongycastle.pqc.crypto.rainbow.util.ComputeInField` v7 @kind this, `short`[][] v8 @kind object, `short`[][] v9 @kind object) @signature `Lorg/spongycastle/pqc/crypto/rainbow/util/ComputeInField;.multiplyMatrix:([[S[[S)[[S` @AccessFlag PUBLIC {

  # return;
}
procedure `short`[] `solveEquation`(`org.spongycastle.pqc.crypto.rainbow.util.ComputeInField` v6 @kind this, `short`[][] v7 @kind object, `short`[] v8 @kind object) @signature `Lorg/spongycastle/pqc/crypto/rainbow/util/ComputeInField;.solveEquation:([[S[S)[S` @AccessFlag PUBLIC {

  # return;
}
