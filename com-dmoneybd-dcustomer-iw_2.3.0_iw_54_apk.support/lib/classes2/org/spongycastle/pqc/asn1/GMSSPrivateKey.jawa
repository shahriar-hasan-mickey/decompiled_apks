record `org.spongycastle.pqc.asn1.GMSSPrivateKey` @kind class @AccessFlag PUBLIC extends `org.spongycastle.asn1.ASN1Object` @kind class {
  `org.spongycastle.asn1.ASN1Primitive` `org.spongycastle.pqc.asn1.GMSSPrivateKey.primitive` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.spongycastle.pqc.asn1.GMSSPrivateKey` v9 @kind this, `org.spongycastle.asn1.ASN1Sequence` v10 @kind object) @signature `Lorg/spongycastle/pqc/asn1/GMSSPrivateKey;.<init>:(Lorg/spongycastle/asn1/ASN1Sequence;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`org.spongycastle.pqc.asn1.GMSSPrivateKey` v25 @kind this, `int`[] v26 @kind object, `byte`[][] v27 @kind object, `byte`[][] v28 @kind object, `byte`[][][] v29 @kind object, `byte`[][][] v30 @kind object, `org.spongycastle.pqc.crypto.gmss.Treehash`[][] v31 @kind object, `org.spongycastle.pqc.crypto.gmss.Treehash`[][] v32 @kind object, `java.util.Vector`[] v33 @kind object, `java.util.Vector`[] v34 @kind object, `java.util.Vector`[][] v35 @kind object, `java.util.Vector`[][] v36 @kind object, `byte`[][][] v37 @kind object, `org.spongycastle.pqc.crypto.gmss.GMSSLeaf`[] v38 @kind object, `org.spongycastle.pqc.crypto.gmss.GMSSLeaf`[] v39 @kind object, `org.spongycastle.pqc.crypto.gmss.GMSSLeaf`[] v40 @kind object, `int`[] v41 @kind object, `byte`[][] v42 @kind object, `org.spongycastle.pqc.crypto.gmss.GMSSRootCalc`[] v43 @kind object, `byte`[][] v44 @kind object, `org.spongycastle.pqc.crypto.gmss.GMSSRootSig`[] v45 @kind object, `org.spongycastle.pqc.crypto.gmss.GMSSParameters` v46 @kind object, `org.spongycastle.asn1.x509.AlgorithmIdentifier` v47 @kind object) @signature `Lorg/spongycastle/pqc/asn1/GMSSPrivateKey;.<init>:([I[[B[[B[[[B[[[B[[Lorg/spongycastle/pqc/crypto/gmss/Treehash;[[Lorg/spongycastle/pqc/crypto/gmss/Treehash;[Ljava/util/Vector;[Ljava/util/Vector;[[Ljava/util/Vector;[[Ljava/util/Vector;[[[B[Lorg/spongycastle/pqc/crypto/gmss/GMSSLeaf;[Lorg/spongycastle/pqc/crypto/gmss/GMSSLeaf;[Lorg/spongycastle/pqc/crypto/gmss/GMSSLeaf;[I[[B[Lorg/spongycastle/pqc/crypto/gmss/GMSSRootCalc;[[B[Lorg/spongycastle/pqc/crypto/gmss/GMSSRootSig;Lorg/spongycastle/pqc/crypto/gmss/GMSSParameters;Lorg/spongycastle/asn1/x509/AlgorithmIdentifier;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `checkBigIntegerInIntRange`(`org.spongycastle.asn1.ASN1Encodable` v3 @kind object) @signature `Lorg/spongycastle/pqc/asn1/GMSSPrivateKey;.checkBigIntegerInIntRange:(Lorg/spongycastle/asn1/ASN1Encodable;)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `org.spongycastle.asn1.ASN1Primitive` `encode`(`org.spongycastle.pqc.asn1.GMSSPrivateKey` v21 @kind this, `int`[] v22 @kind object, `byte`[][] v23 @kind object, `byte`[][] v24 @kind object, `byte`[][][] v25 @kind object, `byte`[][][] v26 @kind object, `byte`[][][] v27 @kind object, `org.spongycastle.pqc.crypto.gmss.Treehash`[][] v28 @kind object, `org.spongycastle.pqc.crypto.gmss.Treehash`[][] v29 @kind object, `java.util.Vector`[] v30 @kind object, `java.util.Vector`[] v31 @kind object, `java.util.Vector`[][] v32 @kind object, `java.util.Vector`[][] v33 @kind object, `org.spongycastle.pqc.crypto.gmss.GMSSLeaf`[] v34 @kind object, `org.spongycastle.pqc.crypto.gmss.GMSSLeaf`[] v35 @kind object, `org.spongycastle.pqc.crypto.gmss.GMSSLeaf`[] v36 @kind object, `int`[] v37 @kind object, `byte`[][] v38 @kind object, `org.spongycastle.pqc.crypto.gmss.GMSSRootCalc`[] v39 @kind object, `byte`[][] v40 @kind object, `org.spongycastle.pqc.crypto.gmss.GMSSRootSig`[] v41 @kind object, `org.spongycastle.pqc.crypto.gmss.GMSSParameters` v42 @kind object, `org.spongycastle.asn1.x509.AlgorithmIdentifier`[] v43 @kind object) @signature `Lorg/spongycastle/pqc/asn1/GMSSPrivateKey;.encode:([I[[B[[B[[[B[[[B[[[B[[Lorg/spongycastle/pqc/crypto/gmss/Treehash;[[Lorg/spongycastle/pqc/crypto/gmss/Treehash;[Ljava/util/Vector;[Ljava/util/Vector;[[Ljava/util/Vector;[[Ljava/util/Vector;[Lorg/spongycastle/pqc/crypto/gmss/GMSSLeaf;[Lorg/spongycastle/pqc/crypto/gmss/GMSSLeaf;[Lorg/spongycastle/pqc/crypto/gmss/GMSSLeaf;[I[[B[Lorg/spongycastle/pqc/crypto/gmss/GMSSRootCalc;[[B[Lorg/spongycastle/pqc/crypto/gmss/GMSSRootSig;Lorg/spongycastle/pqc/crypto/gmss/GMSSParameters;[Lorg/spongycastle/asn1/x509/AlgorithmIdentifier;)Lorg/spongycastle/asn1/ASN1Primitive;` @AccessFlag PRIVATE {

  # return;
}
procedure `org.spongycastle.asn1.ASN1Primitive` `toASN1Primitive`(`org.spongycastle.pqc.asn1.GMSSPrivateKey` v1 @kind this) @signature `Lorg/spongycastle/pqc/asn1/GMSSPrivateKey;.toASN1Primitive:()Lorg/spongycastle/asn1/ASN1Primitive;` @AccessFlag PUBLIC {

  # return;
}
