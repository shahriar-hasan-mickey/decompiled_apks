record `com.google.firebase.remoteconfig.FirebaseRemoteConfig$$Lambda$5` @kind class @AccessFlag FINAL_SYNTHETIC extends `com.google.android.gms.tasks.Continuation` @kind interface {
  `com.google.firebase.remoteconfig.FirebaseRemoteConfig` `com.google.firebase.remoteconfig.FirebaseRemoteConfig$$Lambda$5.arg$1` @AccessFlag PRIVATE_FINAL;
  `com.google.android.gms.tasks.Task` `com.google.firebase.remoteconfig.FirebaseRemoteConfig$$Lambda$5.arg$2` @AccessFlag PRIVATE_FINAL;
  `com.google.android.gms.tasks.Task` `com.google.firebase.remoteconfig.FirebaseRemoteConfig$$Lambda$5.arg$3` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.firebase.remoteconfig.FirebaseRemoteConfig$$Lambda$5` v0 @kind this, `com.google.firebase.remoteconfig.FirebaseRemoteConfig` v1 @kind object, `com.google.android.gms.tasks.Task` v2 @kind object, `com.google.android.gms.tasks.Task` v3 @kind object) @signature `Lcom/google/firebase/remoteconfig/FirebaseRemoteConfig$$Lambda$5;.<init>:(Lcom/google/firebase/remoteconfig/FirebaseRemoteConfig;Lcom/google/android/gms/tasks/Task;Lcom/google/android/gms/tasks/Task;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `com.google.android.gms.tasks.Continuation` `lambdaFactory$`(`com.google.firebase.remoteconfig.FirebaseRemoteConfig` v1 @kind object, `com.google.android.gms.tasks.Task` v2 @kind object, `com.google.android.gms.tasks.Task` v3 @kind object) @signature `Lcom/google/firebase/remoteconfig/FirebaseRemoteConfig$$Lambda$5;.lambdaFactory$:(Lcom/google/firebase/remoteconfig/FirebaseRemoteConfig;Lcom/google/android/gms/tasks/Task;Lcom/google/android/gms/tasks/Task;)Lcom/google/android/gms/tasks/Continuation;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.Object` `then`(`com.google.firebase.remoteconfig.FirebaseRemoteConfig$$Lambda$5` v3 @kind this, `com.google.android.gms.tasks.Task` v4 @kind object) @signature `Lcom/google/firebase/remoteconfig/FirebaseRemoteConfig$$Lambda$5;.then:(Lcom/google/android/gms/tasks/Task;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
