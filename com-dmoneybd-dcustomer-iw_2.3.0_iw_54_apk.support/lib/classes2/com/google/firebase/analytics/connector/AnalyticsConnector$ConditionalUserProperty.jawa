record `com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty` @kind class @AccessFlag PUBLIC {
  `boolean` `com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty.active` @AccessFlag PUBLIC;
  `long` `com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty.creationTimestamp` @AccessFlag PUBLIC;
  `java.lang.String` `com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty.expiredEventName` @AccessFlag PUBLIC;
  `android.os.Bundle` `com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty.expiredEventParams` @AccessFlag PUBLIC;
  `java.lang.String` `com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty.name` @AccessFlag PUBLIC;
  `java.lang.String` `com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty.origin` @AccessFlag PUBLIC;
  `long` `com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty.timeToLive` @AccessFlag PUBLIC;
  `java.lang.String` `com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty.timedOutEventName` @AccessFlag PUBLIC;
  `android.os.Bundle` `com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty.timedOutEventParams` @AccessFlag PUBLIC;
  `java.lang.String` `com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty.triggerEventName` @AccessFlag PUBLIC;
  `long` `com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty.triggerTimeout` @AccessFlag PUBLIC;
  `java.lang.String` `com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty.triggeredEventName` @AccessFlag PUBLIC;
  `android.os.Bundle` `com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty.triggeredEventParams` @AccessFlag PUBLIC;
  `long` `com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty.triggeredTimestamp` @AccessFlag PUBLIC;
  `java.lang.Object` `com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty.value` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty` v0 @kind this) @signature `Lcom/google/firebase/analytics/connector/AnalyticsConnector$ConditionalUserProperty;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
