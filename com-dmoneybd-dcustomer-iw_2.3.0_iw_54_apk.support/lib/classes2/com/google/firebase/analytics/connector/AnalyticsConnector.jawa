record `com.google.firebase.analytics.connector.AnalyticsConnector` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `void` `clearConditionalUserProperty`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `android.os.Bundle` v2 @kind object) @signature `Lcom/google/firebase/analytics/connector/AnalyticsConnector;.clearConditionalUserProperty:(Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.List` `getConditionalUserProperties`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lcom/google/firebase/analytics/connector/AnalyticsConnector;.getConditionalUserProperties:(Ljava/lang/String;Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getMaxUserProperties`(`java.lang.String` v0 @kind object) @signature `Lcom/google/firebase/analytics/connector/AnalyticsConnector;.getMaxUserProperties:(Ljava/lang/String;)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Map` `getUserProperties`(`boolean` v0 ) @signature `Lcom/google/firebase/analytics/connector/AnalyticsConnector;.getUserProperties:(Z)Ljava/util/Map;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `logEvent`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `android.os.Bundle` v2 @kind object) @signature `Lcom/google/firebase/analytics/connector/AnalyticsConnector;.logEvent:(Ljava/lang/String;Ljava/lang/String;Landroid/os/Bundle;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.google.firebase.analytics.connector.AnalyticsConnector$AnalyticsConnectorHandle` `registerAnalyticsConnectorListener`(`java.lang.String` v0 @kind object, `com.google.firebase.analytics.connector.AnalyticsConnector$AnalyticsConnectorListener` v1 @kind object) @signature `Lcom/google/firebase/analytics/connector/AnalyticsConnector;.registerAnalyticsConnectorListener:(Ljava/lang/String;Lcom/google/firebase/analytics/connector/AnalyticsConnector$AnalyticsConnectorListener;)Lcom/google/firebase/analytics/connector/AnalyticsConnector$AnalyticsConnectorHandle;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setConditionalUserProperty`(`com.google.firebase.analytics.connector.AnalyticsConnector$ConditionalUserProperty` v0 @kind object) @signature `Lcom/google/firebase/analytics/connector/AnalyticsConnector;.setConditionalUserProperty:(Lcom/google/firebase/analytics/connector/AnalyticsConnector$ConditionalUserProperty;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setUserProperty`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/firebase/analytics/connector/AnalyticsConnector;.setUserProperty:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
