record `com.google.zxing.datamatrix.encoder.HighLevelEncoder` @kind class @AccessFlag PUBLIC_FINAL {
}
global `char` `@@com.google.zxing.datamatrix.encoder.HighLevelEncoder.MACRO_05` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.zxing.datamatrix.encoder.HighLevelEncoder.MACRO_05_HEADER` @AccessFlag PRIVATE_STATIC_FINAL;
global `char` `@@com.google.zxing.datamatrix.encoder.HighLevelEncoder.MACRO_06` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.zxing.datamatrix.encoder.HighLevelEncoder.MACRO_06_HEADER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.zxing.datamatrix.encoder.HighLevelEncoder.MACRO_TRAILER` @AccessFlag PRIVATE_STATIC_FINAL;
global `char` `@@com.google.zxing.datamatrix.encoder.HighLevelEncoder.PAD` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.zxing.datamatrix.encoder.HighLevelEncoder` v0 @kind this) @signature `Lcom/google/zxing/datamatrix/encoder/HighLevelEncoder;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`char` v5 ) @signature `Lcom/google/zxing/datamatrix/encoder/HighLevelEncoder;.a:(C)V` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `b`(`char` v1 ) @signature `Lcom/google/zxing/datamatrix/encoder/HighLevelEncoder;.b:(C)Z` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `c`(`char` v1 ) @signature `Lcom/google/zxing/datamatrix/encoder/HighLevelEncoder;.c:(C)Z` @AccessFlag STATIC {

  # return;
}
procedure `int` `d`(`java.lang.CharSequence` v18 @kind object, `int` v19 , `int` v20 ) @signature `Lcom/google/zxing/datamatrix/encoder/HighLevelEncoder;.d:(Ljava/lang/CharSequence;II)I` @AccessFlag STATIC {

  # return;
}
procedure `int` `determineConsecutiveDigitCount`(`java.lang.CharSequence` v4 @kind object, `int` v5 ) @signature `Lcom/google/zxing/datamatrix/encoder/HighLevelEncoder;.determineConsecutiveDigitCount:(Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `encodeHighLevel`(`java.lang.String` v2 @kind object) @signature `Lcom/google/zxing/datamatrix/encoder/HighLevelEncoder;.encodeHighLevel:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `encodeHighLevel`(`java.lang.String` v6 @kind object, `com.google.zxing.datamatrix.encoder.SymbolShapeHint` v7 @kind object, `com.google.zxing.Dimension` v8 @kind object, `com.google.zxing.Dimension` v9 @kind object) @signature `Lcom/google/zxing/datamatrix/encoder/HighLevelEncoder;.encodeHighLevel:(Ljava/lang/String;Lcom/google/zxing/datamatrix/encoder/SymbolShapeHint;Lcom/google/zxing/Dimension;Lcom/google/zxing/Dimension;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `findMinimums`(`float`[] v4 @kind object, `int`[] v5 @kind object, `int` v6 , `byte`[] v7 @kind object) @signature `Lcom/google/zxing/datamatrix/encoder/HighLevelEncoder;.findMinimums:([F[II[B)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `getMinimumCount`(`byte`[] v3 @kind object) @signature `Lcom/google/zxing/datamatrix/encoder/HighLevelEncoder;.getMinimumCount:([B)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `isNativeC40`(`char` v1 ) @signature `Lcom/google/zxing/datamatrix/encoder/HighLevelEncoder;.isNativeC40:(C)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `isNativeEDIFACT`(`char` v1 ) @signature `Lcom/google/zxing/datamatrix/encoder/HighLevelEncoder;.isNativeEDIFACT:(C)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `isNativeText`(`char` v1 ) @signature `Lcom/google/zxing/datamatrix/encoder/HighLevelEncoder;.isNativeText:(C)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `isNativeX12`(`char` v1 ) @signature `Lcom/google/zxing/datamatrix/encoder/HighLevelEncoder;.isNativeX12:(C)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `isSpecialB256`(`char` v0 ) @signature `Lcom/google/zxing/datamatrix/encoder/HighLevelEncoder;.isSpecialB256:(C)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `isX12TermSep`(`char` v1 ) @signature `Lcom/google/zxing/datamatrix/encoder/HighLevelEncoder;.isX12TermSep:(C)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `char` `randomize253State`(`char` v0 , `int` v1 ) @signature `Lcom/google/zxing/datamatrix/encoder/HighLevelEncoder;.randomize253State:(CI)C` @AccessFlag PRIVATE_STATIC {

  # return;
}
