record `com.google.zxing.oned.Code128Writer` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.zxing.oned.OneDimensionalCodeWriter` @kind class {
}
global `int` `@@com.google.zxing.oned.Code128Writer.CODE_CODE_B` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.zxing.oned.Code128Writer.CODE_CODE_C` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.zxing.oned.Code128Writer.CODE_FNC_1` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.zxing.oned.Code128Writer.CODE_FNC_2` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.zxing.oned.Code128Writer.CODE_FNC_3` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.zxing.oned.Code128Writer.CODE_FNC_4_B` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.zxing.oned.Code128Writer.CODE_START_B` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.zxing.oned.Code128Writer.CODE_START_C` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.google.zxing.oned.Code128Writer.CODE_STOP` @AccessFlag PRIVATE_STATIC_FINAL;
global `char` `@@com.google.zxing.oned.Code128Writer.ESCAPE_FNC_1` @AccessFlag PRIVATE_STATIC_FINAL;
global `char` `@@com.google.zxing.oned.Code128Writer.ESCAPE_FNC_2` @AccessFlag PRIVATE_STATIC_FINAL;
global `char` `@@com.google.zxing.oned.Code128Writer.ESCAPE_FNC_3` @AccessFlag PRIVATE_STATIC_FINAL;
global `char` `@@com.google.zxing.oned.Code128Writer.ESCAPE_FNC_4` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.zxing.oned.Code128Writer` v0 @kind this) @signature `Lcom/google/zxing/oned/Code128Writer;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `isDigits`(`java.lang.CharSequence` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/google/zxing/oned/Code128Writer;.isDigits:(Ljava/lang/CharSequence;II)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.google.zxing.common.BitMatrix` `encode`(`com.google.zxing.oned.Code128Writer` v1 @kind this, `java.lang.String` v2 @kind object, `com.google.zxing.BarcodeFormat` v3 @kind object, `int` v4 , `int` v5 , `java.util.Map` v6 @kind object) @signature `Lcom/google/zxing/oned/Code128Writer;.encode:(Ljava/lang/String;Lcom/google/zxing/BarcodeFormat;IILjava/util/Map;)Lcom/google/zxing/common/BitMatrix;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean`[] `encode`(`com.google.zxing.oned.Code128Writer` v12 @kind this, `java.lang.String` v13 @kind object) @signature `Lcom/google/zxing/oned/Code128Writer;.encode:(Ljava/lang/String;)[Z` @AccessFlag PUBLIC {

  # return;
}
