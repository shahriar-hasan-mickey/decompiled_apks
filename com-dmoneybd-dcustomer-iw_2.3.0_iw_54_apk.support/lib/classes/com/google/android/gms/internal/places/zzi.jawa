record `com.google.android.gms.internal.places.zzi` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable` @kind class {
  `java.lang.String` `com.google.android.gms.internal.places.zzi.placeId` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.google.android.gms.internal.places.zzi.zzav` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.google.android.gms.internal.places.zzi.zzdd` @AccessFlag PRIVATE_FINAL;
}
global `android.os.Parcelable$Creator` `@@com.google.android.gms.internal.places.zzi.CREATOR` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/gms/internal/places/zzi;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.android.gms.internal.places.zzi` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lcom/google/android/gms/internal/places/zzi;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `equals`(`com.google.android.gms.internal.places.zzi` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/android/gms/internal/places/zzi;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `int` `hashCode`(`com.google.android.gms.internal.places.zzi` v3 @kind this) @signature `Lcom/google/android/gms/internal/places/zzi;.hashCode:()I` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.android.gms.internal.places.zzi` v3 @kind this) @signature `Lcom/google/android/gms/internal/places/zzi;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `writeToParcel`(`com.google.android.gms.internal.places.zzi` v3 @kind this, `android.os.Parcel` v4 @kind object, `int` v5 ) @signature `Lcom/google/android/gms/internal/places/zzi;.writeToParcel:(Landroid/os/Parcel;I)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
