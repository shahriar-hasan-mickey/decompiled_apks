record `com.google.android.gms.internal.vision.zzej` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.google.android.gms.internal.vision.zzeb` @kind class, `java.util.Set` @kind interface {
  `com.google.android.gms.internal.vision.zzee` `com.google.android.gms.internal.vision.zzej.zznf` @AccessFlag PRIVATE_TRANSIENT;
}
procedure `void` `<init>`(`com.google.android.gms.internal.vision.zzej` v0 @kind this) @signature `Lcom/google/android/gms/internal/vision/zzej;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `int` `g`(`int` v6 ) @signature `Lcom/google/android/gms/internal/vision/zzej;.g:(I)I` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `e`(`com.google.android.gms.internal.vision.zzej` v1 @kind this) @signature `Lcom/google/android/gms/internal/vision/zzej;.e:()Z` @AccessFlag  {

  # return;
}
procedure `boolean` `equals`(`com.google.android.gms.internal.vision.zzej` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/android/gms/internal/vision/zzej;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.android.gms.internal.vision.zzee` `f`(`com.google.android.gms.internal.vision.zzej` v1 @kind this) @signature `Lcom/google/android/gms/internal/vision/zzej;.f:()Lcom/google/android/gms/internal/vision/zzee;` @AccessFlag  {

  # return;
}
procedure `int` `hashCode`(`com.google.android.gms.internal.vision.zzej` v1 @kind this) @signature `Lcom/google/android/gms/internal/vision/zzej;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `iterator`(`com.google.android.gms.internal.vision.zzej` v1 @kind this) @signature `Lcom/google/android/gms/internal/vision/zzej;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.android.gms.internal.vision.zzee` `zzct`(`com.google.android.gms.internal.vision.zzej` v1 @kind this) @signature `Lcom/google/android/gms/internal/vision/zzej;.zzct:()Lcom/google/android/gms/internal/vision/zzee;` @AccessFlag PUBLIC {

  # return;
}
