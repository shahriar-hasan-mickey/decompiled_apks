record `com.google.android.gms.internal.places.zzg` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable` @kind class {
  `java.lang.String` `com.google.android.gms.internal.places.zzg.zzdc` @AccessFlag PRIVATE_FINAL;
}
global `android.os.Parcelable$Creator` `@@com.google.android.gms.internal.places.zzg.CREATOR` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.google.android.gms.internal.places.zzg` `@@com.google.android.gms.internal.places.zzg.zzda` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.google.android.gms.internal.places.zzg` `@@com.google.android.gms.internal.places.zzg.zzdb` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/gms/internal/places/zzg;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.android.gms.internal.places.zzg` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/google/android/gms/internal/places/zzg;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `equals`(`com.google.android.gms.internal.places.zzg` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/android/gms/internal/places/zzg;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `int` `hashCode`(`com.google.android.gms.internal.places.zzg` v3 @kind this) @signature `Lcom/google/android/gms/internal/places/zzg;.hashCode:()I` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.android.gms.internal.places.zzg` v3 @kind this) @signature `Lcom/google/android/gms/internal/places/zzg;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `void` `writeToParcel`(`com.google.android.gms.internal.places.zzg` v3 @kind this, `android.os.Parcel` v4 @kind object, `int` v5 ) @signature `Lcom/google/android/gms/internal/places/zzg;.writeToParcel:(Landroid/os/Parcel;I)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
