record `androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable` @kind class @AccessFlag  extends `androidx.core.graphics.drawable.RoundedBitmapDrawable` @kind class {
}
procedure `void` `<init>`(`androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable` v0 @kind this, `android.content.res.Resources` v1 @kind object, `android.graphics.Bitmap` v2 @kind object) @signature `Landroidx/core/graphics/drawable/RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable;.<init>:(Landroid/content/res/Resources;Landroid/graphics/Bitmap;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable` v6 @kind this, `int` v7 , `int` v8 , `int` v9 , `android.graphics.Rect` v10 @kind object, `android.graphics.Rect` v11 @kind object) @signature `Landroidx/core/graphics/drawable/RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable;.a:(IIILandroid/graphics/Rect;Landroid/graphics/Rect;)V` @AccessFlag  {

  # return;
}
procedure `boolean` `hasMipMap`(`androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable` v1 @kind this) @signature `Landroidx/core/graphics/drawable/RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable;.hasMipMap:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setMipMap`(`androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable` v1 @kind this, `boolean` v2 ) @signature `Landroidx/core/graphics/drawable/RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable;.setMipMap:(Z)V` @AccessFlag PUBLIC {

  # return;
}
