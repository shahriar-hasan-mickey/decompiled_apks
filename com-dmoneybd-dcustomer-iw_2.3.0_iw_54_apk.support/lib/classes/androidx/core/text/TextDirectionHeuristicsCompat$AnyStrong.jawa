record `androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong` @kind class @AccessFlag  extends `androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm` @kind interface {
  `boolean` `androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong.mLookForRtl` @AccessFlag PRIVATE_FINAL;
}
global `androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong` `@@androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Landroidx/core/text/TextDirectionHeuristicsCompat$AnyStrong;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong` v0 @kind this, `boolean` v1 ) @signature `Landroidx/core/text/TextDirectionHeuristicsCompat$AnyStrong;.<init>:(Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `int` `checkRtl`(`androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong` v4 @kind this, `java.lang.CharSequence` v5 @kind object, `int` v6 , `int` v7 ) @signature `Landroidx/core/text/TextDirectionHeuristicsCompat$AnyStrong;.checkRtl:(Ljava/lang/CharSequence;II)I` @AccessFlag PUBLIC {

  # return;
}
