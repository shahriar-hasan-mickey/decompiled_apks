record `androidx.biometric.Utils` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`androidx.biometric.Utils` v0 @kind this) @signature `Landroidx/biometric/Utils;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `boolean` `a`() @signature `Landroidx/biometric/Utils;.a:()Z` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `b`(`int` v0 ) @signature `Landroidx/biometric/Utils;.b:(I)Z` @AccessFlag STATIC {

  # return;
}
procedure `void` `c`(`java.lang.String` v4 @kind object, `androidx.fragment.app.FragmentActivity` v5 @kind object, `android.os.Bundle` v6 @kind object, `java.lang.Runnable` v7 @kind object) @signature `Landroidx/biometric/Utils;.c:(Ljava/lang/String;Landroidx/fragment/app/FragmentActivity;Landroid/os/Bundle;Ljava/lang/Runnable;)V` @AccessFlag STATIC {

  # return;
}
procedure `void` `d`(`androidx.fragment.app.FragmentActivity` v1 @kind object) @signature `Landroidx/biometric/Utils;.d:(Landroidx/fragment/app/FragmentActivity;)V` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `e`(`android.content.Context` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Landroidx/biometric/Utils;.e:(Landroid/content/Context;Ljava/lang/String;)Z` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `f`(`android.content.Context` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Landroidx/biometric/Utils;.f:(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `isModelInPrefixList`(`android.content.Context` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 ) @signature `Landroidx/biometric/Utils;.isModelInPrefixList:(Landroid/content/Context;Ljava/lang/String;I)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `boolean` `isVendorInList`(`android.content.Context` v3 @kind object, `java.lang.String` v4 @kind object, `int` v5 ) @signature `Landroidx/biometric/Utils;.isVendorInList:(Landroid/content/Context;Ljava/lang/String;I)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
