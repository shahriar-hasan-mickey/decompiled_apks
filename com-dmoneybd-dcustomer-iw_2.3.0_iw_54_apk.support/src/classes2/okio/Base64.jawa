record `okio.Base64` @kind class @AccessFlag FINAL {
}
global `byte`[] `@@okio.Base64.MAP` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@okio.Base64.URL_MAP` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/Base64;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2e19a0.  v0:= 64I;
  #L2e19a4.  v1:= new `byte`[v0];
  #L2e19a8.  goto L2e19c4;
  #L2e19ae.  `@@okio.Base64.MAP` @type ^`byte`[] := v1 @kind object;
  #L2e19b2.  v0:= new `byte`[v0];
  #L2e19b6.  goto L2e1a0c;
  #L2e19bc.  `@@okio.Base64.URL_MAP` @type ^`byte`[] := v0 @kind object;
  #L2e19c0.  return @kind void;
  #L2e19c2.  
  #L2e19c4.  v1:= (65I, 66I, 67I, 68I, 69I, 70I, 71I, 72I, 73I, 74I, 75I, 76I, 77I, 78I, 79I, 80I, 81I, 82I, 83I, 84I, 85I, 86I, 87I, 88I, 89I, 90I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 115I, 116I, 117I, 118I, 119I, 120I, 121I, 122I, 48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 43I, 47I) @kind object;
  #L2e1a0b.  goto L2e19ae;
  #L2e1a0c.  v0:= (65I, 66I, 67I, 68I, 69I, 70I, 71I, 72I, 73I, 74I, 75I, 76I, 77I, 78I, 79I, 80I, 81I, 82I, 83I, 84I, 85I, 86I, 87I, 88I, 89I, 90I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 115I, 116I, 117I, 118I, 119I, 120I, 121I, 122I, 48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 45I, 95I) @kind object;
  #L2e1a53.  goto L2e19bc;
}
procedure `void` `<init>`(`okio.Base64` v0 @kind this) @signature `Lokio/Base64;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2e1a64.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e1a6a.  return @kind void;
}
procedure `byte`[] `decode`(`java.lang.String` v15 @kind object) @signature `Lokio/Base64;.decode:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L2e1620.  call temp:= `length`(v15) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2e1626.  v0:= temp;
  #L2e1628.  v1:= 9I;
  #L2e162c.  v2:= 32I;
  #L2e1630.  v3:= 13I;
  #L2e1634.  v4:= 10I;
  #L2e1638.  if v0 <= 0 then goto L2e1668;
  #L2e163c.  v5:= v0 + -1;
  #L2e1640.  call temp:= `charAt`(v15, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2e1646.  v5:= temp;
  #L2e1648.  v6:= 61I;
  #L2e164c.  if v5 == v6 then goto L2e1662;
  #L2e1650.  if v5 == v4 then goto L2e1662;
  #L2e1654.  if v5 == v3 then goto L2e1662;
  #L2e1658.  if v5 == v2 then goto L2e1662;
  #L2e165c.  if v5 == v1 then goto L2e1662;
  #L2e1660.  goto L2e1668;
  #L2e1662.  v0:= v0 + -1;
  #L2e1666.  goto L2e1628;
  #L2e1668.  v5:= (`long`) v0 @kind i2l;
  #L2e166a.  v7:= 6L;
  #L2e166e.  v5:= v5 * v7 @kind long;
  #L2e1672.  v7:= 8L;
  #L2e1676.  v5:= v5 / v7 @kind long;
  #L2e1678.  v6:= (`int`) v5 @kind l2i;
  #L2e167a.  v5:= new `byte`[v6];
  #L2e167e.  v7:= 0I;
  #L2e1680.  v8:= 0I;
  #L2e1682.  v9:= 0I;
  #L2e1684.  v10:= 0I;
  #L2e1686.  v11:= 0I;
  #L2e1688.  v12:= 0I;
  #L2e168a.  if v8 >= v0 then goto L2e175c;
  #L2e168e.  call temp:= `charAt`(v15, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2e1694.  v13:= temp;
  #L2e1696.  v14:= 65I;
  #L2e169a.  if v13 < v14 then goto L2e16ac;
  #L2e169e.  v14:= 90I;
  #L2e16a2.  if v13 > v14 then goto L2e16ac;
  #L2e16a6.  v13:= v13 + -65;
  #L2e16aa.  goto L2e171a;
  #L2e16ac.  v14:= 97I;
  #L2e16b0.  if v13 < v14 then goto L2e16c2;
  #L2e16b4.  v14:= 122I;
  #L2e16b8.  if v13 > v14 then goto L2e16c2;
  #L2e16bc.  v13:= v13 + -71;
  #L2e16c0.  goto L2e171a;
  #L2e16c2.  v14:= 48I;
  #L2e16c6.  if v13 < v14 then goto L2e16d8;
  #L2e16ca.  v14:= 57I;
  #L2e16ce.  if v13 > v14 then goto L2e16d8;
  #L2e16d2.  v13:= v13 + 4;
  #L2e16d6.  goto L2e171a;
  #L2e16d8.  v14:= 43I;
  #L2e16dc.  if v13 == v14 then goto L2e1716;
  #L2e16e0.  v14:= 45I;
  #L2e16e4.  if v13 != v14 then goto L2e16ea;
  #L2e16e8.  goto L2e1716;
  #L2e16ea.  v14:= 47I;
  #L2e16ee.  if v13 == v14 then goto L2e1710;
  #L2e16f2.  v14:= 95I;
  #L2e16f6.  if v13 != v14 then goto L2e16fc;
  #L2e16fa.  goto L2e1710;
  #L2e16fc.  if v13 == v4 then goto L2e1756;
  #L2e1700.  if v13 == v3 then goto L2e1756;
  #L2e1704.  if v13 == v2 then goto L2e1756;
  #L2e1708.  if v13 != v1 then goto L2e170e;
  #L2e170c.  goto L2e1756;
  #L2e170e.  return v12 @kind object;
  #L2e1710.  v13:= 63I;
  #L2e1714.  goto L2e171a;
  #L2e1716.  v13:= 62I;
  #L2e171a.  v10:= v10 ^< 6;
  #L2e171e.  v12:= (`byte`) v13 @kind i2b;
  #L2e1720.  v10:= v10 ^| v12 @kind int;
  #L2e1722.  v9:= v9 + 1;
  #L2e1726.  v12:= v9 %% 4;
  #L2e172a.  if v12 != 0 then goto L2e1756;
  #L2e172e.  v12:= v11 + 1;
  #L2e1732.  v13:= v10 ^> 16;
  #L2e1736.  v13:= (`byte`) v13 @kind i2b;
  #L2e1738.  v5[v11]:= v13 @kind byte;
  #L2e173c.  v11:= v12 + 1;
  #L2e1740.  v13:= v10 ^> 8;
  #L2e1744.  v13:= (`byte`) v13 @kind i2b;
  #L2e1746.  v5[v12]:= v13 @kind byte;
  #L2e174a.  v12:= v11 + 1;
  #L2e174e.  v13:= (`byte`) v10 @kind i2b;
  #L2e1750.  v5[v11]:= v13 @kind byte;
  #L2e1754.  v11:= v12;
  #L2e1756.  v8:= v8 + 1;
  #L2e175a.  goto L2e1688;
  #L2e175c.  v9:= v9 %% 4;
  #L2e1760.  v15:= 1I;
  #L2e1762.  if v9 != v15 then goto L2e1768;
  #L2e1766.  return v12 @kind object;
  #L2e1768.  v15:= 2I;
  #L2e176a.  if v9 != v15 then goto L2e1784;
  #L2e176e.  v15:= v10 ^< 12;
  #L2e1772.  v0:= v11 + 1;
  #L2e1776.  v15:= v15 ^> 16;
  #L2e177a.  v15:= (`byte`) v15 @kind i2b;
  #L2e177c.  v5[v11]:= v15 @kind byte;
  #L2e1780.  v11:= v0;
  #L2e1782.  goto L2e17aa;
  #L2e1784.  v15:= 3I;
  #L2e1786.  if v9 != v15 then goto L2e17aa;
  #L2e178a.  v15:= v10 ^< 6;
  #L2e178e.  v0:= v11 + 1;
  #L2e1792.  v1:= v15 ^> 16;
  #L2e1796.  v1:= (`byte`) v1 @kind i2b;
  #L2e1798.  v5[v11]:= v1 @kind byte;
  #L2e179c.  v11:= v0 + 1;
  #L2e17a0.  v15:= v15 ^> 8;
  #L2e17a4.  v15:= (`byte`) v15 @kind i2b;
  #L2e17a6.  v5[v0]:= v15 @kind byte;
  #L2e17aa.  if v11 != v6 then goto L2e17b0;
  #L2e17ae.  return v5 @kind object;
  #L2e17b0.  v15:= new `byte`[v11];
  #L2e17b4.  call `arraycopy`(v5, v7, v15, v7, v11) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2e17ba.  return v15 @kind object;
}
procedure `java.lang.String` `encode`(`byte`[] v1 @kind object) @signature `Lokio/Base64;.encode:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2e17cc.  v0:= `@@okio.Base64.MAP` @type ^`byte`[] @kind object;
  #L2e17d0.  call temp:= `encode`(v1, v0) @signature `Lokio/Base64;.encode:([B[B)Ljava/lang/String;` @kind static;
  #L2e17d6.  v1:= temp @kind object;
  #L2e17d8.  return v1 @kind object;
}
procedure `java.lang.String` `encode`(`byte`[] v9 @kind object, `byte`[] v10 @kind object) @signature `Lokio/Base64;.encode:([B[B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2e17ec.  v0:= length @variable v9;
  #L2e17ee.  v1:= 2I;
  #L2e17f0.  v0:= v0 + v1 @kind int;
  #L2e17f2.  v0:= v0 / 3;
  #L2e17f6.  v0:= v0 * 4;
  #L2e17fa.  v0:= new `byte`[v0];
  #L2e17fe.  v2:= length @variable v9;
  #L2e1800.  v3:= length @variable v9;
  #L2e1802.  v3:= v3 %% 3;
  #L2e1806.  v2:= v2 - v3 @kind int;
  #L2e1808.  v3:= 0I;
  #L2e180a.  v4:= 0I;
  #L2e180c.  if v3 >= v2 then goto L2e1892;
  #L2e1810.  v5:= v4 + 1;
  #L2e1814.  v6:= v9[v3] @kind byte;
  #L2e1818.  v6:= v6 ^& 255;
  #L2e181c.  v6:= v6 ^> v1 @kind int;
  #L2e181e.  v6:= v10[v6] @kind byte;
  #L2e1822.  v0[v4]:= v6 @kind byte;
  #L2e1826.  v4:= v5 + 1;
  #L2e182a.  v6:= v9[v3] @kind byte;
  #L2e182e.  v6:= v6 ^& 3;
  #L2e1832.  v6:= v6 ^< 4;
  #L2e1836.  v7:= v3 + 1;
  #L2e183a.  v8:= v9[v7] @kind byte;
  #L2e183e.  v8:= v8 ^& 255;
  #L2e1842.  v8:= v8 ^> 4;
  #L2e1846.  v6:= v6 ^| v8 @kind int;
  #L2e1848.  v6:= v10[v6] @kind byte;
  #L2e184c.  v0[v5]:= v6 @kind byte;
  #L2e1850.  v5:= v4 + 1;
  #L2e1854.  v6:= v9[v7] @kind byte;
  #L2e1858.  v6:= v6 ^& 15;
  #L2e185c.  v6:= v6 ^< v1 @kind int;
  #L2e185e.  v7:= v3 + 2;
  #L2e1862.  v8:= v9[v7] @kind byte;
  #L2e1866.  v8:= v8 ^& 255;
  #L2e186a.  v8:= v8 ^> 6;
  #L2e186e.  v6:= v6 ^| v8 @kind int;
  #L2e1870.  v6:= v10[v6] @kind byte;
  #L2e1874.  v0[v4]:= v6 @kind byte;
  #L2e1878.  v4:= v5 + 1;
  #L2e187c.  v6:= v9[v7] @kind byte;
  #L2e1880.  v6:= v6 ^& 63;
  #L2e1884.  v6:= v10[v6] @kind byte;
  #L2e1888.  v0[v5]:= v6 @kind byte;
  #L2e188c.  v3:= v3 + 3;
  #L2e1890.  goto L2e180c;
  #L2e1892.  v3:= length @variable v9;
  #L2e1894.  v3:= v3 %% 3;
  #L2e1898.  v5:= 61I;
  #L2e189c.  v6:= 1I;
  #L2e189e.  if v3 == v6 then goto L2e1902;
  #L2e18a2.  if v3 == v1 then goto L2e18a8;
  #L2e18a6.  goto L2e193e;
  #L2e18a8.  v3:= v4 + 1;
  #L2e18ac.  v7:= v9[v2] @kind byte;
  #L2e18b0.  v7:= v7 ^& 255;
  #L2e18b4.  v7:= v7 ^> v1 @kind int;
  #L2e18b6.  v7:= v10[v7] @kind byte;
  #L2e18ba.  v0[v4]:= v7 @kind byte;
  #L2e18be.  v4:= v3 + 1;
  #L2e18c2.  v7:= v9[v2] @kind byte;
  #L2e18c6.  v7:= v7 ^& 3;
  #L2e18ca.  v7:= v7 ^< 4;
  #L2e18ce.  v2:= v2 + v6 @kind int;
  #L2e18d0.  v6:= v9[v2] @kind byte;
  #L2e18d4.  v6:= v6 ^& 255;
  #L2e18d8.  v6:= v6 ^> 4;
  #L2e18dc.  v6:= v6 ^| v7 @kind int;
  #L2e18de.  v6:= v10[v6] @kind byte;
  #L2e18e2.  v0[v3]:= v6 @kind byte;
  #L2e18e6.  v3:= v4 + 1;
  #L2e18ea.  v9:= v9[v2] @kind byte;
  #L2e18ee.  v9:= v9 ^& 15;
  #L2e18f2.  v9:= v9 ^< v1 @kind int;
  #L2e18f4.  v9:= v10[v9] @kind byte;
  #L2e18f8.  v0[v4]:= v9 @kind byte;
  #L2e18fc.  v0[v3]:= v5 @kind byte;
  #L2e1900.  goto L2e193e;
  #L2e1902.  v3:= v4 + 1;
  #L2e1906.  v6:= v9[v2] @kind byte;
  #L2e190a.  v6:= v6 ^& 255;
  #L2e190e.  v1:= v6 ^> 2;
  #L2e1912.  v1:= v10[v1] @kind byte;
  #L2e1916.  v0[v4]:= v1 @kind byte;
  #L2e191a.  v1:= v3 + 1;
  #L2e191e.  v9:= v9[v2] @kind byte;
  #L2e1922.  v9:= v9 ^& 3;
  #L2e1926.  v9:= v9 ^< 4;
  #L2e192a.  v9:= v10[v9] @kind byte;
  #L2e192e.  v0[v3]:= v9 @kind byte;
  #L2e1932.  v9:= v1 + 1;
  #L2e1936.  v0[v1]:= v5 @kind byte;
  #L2e193a.  v0[v9]:= v5 @kind byte;
  #L2e193e.  v9:= new `java.lang.String`;
  #L2e1942.  v10:= "US-ASCII" @kind object;
  #L2e1946.  call `<init>`(v9, v0, v10) @signature `Ljava/lang/String;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L2e194c.  return v9 @kind object;
  #L2e194e.  v9:= Exception @type ^`java.io.UnsupportedEncodingException` @kind object;
  #L2e1950.  v10:= new `java.lang.AssertionError`;
  #L2e1954.  call `<init>`(v10, v9) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2e195a.  goto L2e195e;
  #L2e195c.  throw v10;
  #L2e195e.  goto L2e195c;
  catch `java.io.UnsupportedEncodingException` @[L2e193e..L2e194c] goto L2e194e;
}
procedure `java.lang.String` `encodeUrl`(`byte`[] v1 @kind object) @signature `Lokio/Base64;.encodeUrl:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2e1980.  v0:= `@@okio.Base64.URL_MAP` @type ^`byte`[] @kind object;
  #L2e1984.  call temp:= `encode`(v1, v0) @signature `Lokio/Base64;.encode:([B[B)Ljava/lang/String;` @kind static;
  #L2e198a.  v1:= temp @kind object;
  #L2e198c.  return v1 @kind object;
}
