record `okio.RealBufferedSource$1` @kind class @AccessFlag  extends `java.io.InputStream` @kind class {
  `okio.RealBufferedSource` `okio.RealBufferedSource$1.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.RealBufferedSource$1` v0 @kind this, `okio.RealBufferedSource` v1 @kind object) @signature `Lokio/RealBufferedSource$1;.<init>:(Lokio/RealBufferedSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2e4dd0.  v0.`okio.RealBufferedSource$1.a` @type ^`okio.RealBufferedSource` := v1 @kind object;
  #L2e4dd4.  call `<init>`(v0) @signature `Ljava/io/InputStream;.<init>:()V` @kind direct;
  #L2e4dda.  return @kind void;
}
procedure `int` `available`(`okio.RealBufferedSource$1` v4 @kind this) @signature `Lokio/RealBufferedSource$1;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2e4c54.  v0:= v4.`okio.RealBufferedSource$1.a` @type ^`okio.RealBufferedSource` @kind object;
  #L2e4c58.  v1:= v0.`okio.RealBufferedSource.a` @type ^`boolean` @kind boolean;
  #L2e4c5c.  if v1 != 0 then goto L2e4c7a;
  #L2e4c60.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L2e4c64.  v0:= v0.`okio.Buffer.b` @type ^`long` @kind wide;
  #L2e4c68.  v2:= 2147483647L;
  #L2e4c6e.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L2e4c74.  v0:= temp @kind wide;
  #L2e4c76.  v1:= (`int`) v0 @kind l2i;
  #L2e4c78.  return v1;
  #L2e4c7a.  v0:= new `java.io.IOException`;
  #L2e4c7e.  v1:= "closed" @kind object;
  #L2e4c82.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e4c88.  throw v0;
}
procedure `void` `close`(`okio.RealBufferedSource$1` v1 @kind this) @signature `Lokio/RealBufferedSource$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e4dec.  v0:= v1.`okio.RealBufferedSource$1.a` @type ^`okio.RealBufferedSource` @kind object;
  #L2e4df0.  call `close`(v0) @signature `Lokio/RealBufferedSource;.close:()V` @kind virtual;
  #L2e4df6.  return @kind void;
}
procedure `int` `read`(`okio.RealBufferedSource$1` v7 @kind this) @signature `Lokio/RealBufferedSource$1;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2e4c9c.  v0:= v7.`okio.RealBufferedSource$1.a` @type ^`okio.RealBufferedSource` @kind object;
  #L2e4ca0.  v1:= v0.`okio.RealBufferedSource.a` @type ^`boolean` @kind boolean;
  #L2e4ca4.  if v1 != 0 then goto L2e4cf2;
  #L2e4ca8.  v1:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L2e4cac.  v2:= v1.`okio.Buffer.b` @type ^`long` @kind wide;
  #L2e4cb0.  v4:= 0L;
  #L2e4cb4.  v6:= lcmp(v2, v4);
  #L2e4cb8.  if v6 != 0 then goto L2e4cdc;
  #L2e4cbc.  v0:= v0.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L2e4cc0.  v2:= 8192L;
  #L2e4cc4.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L2e4cca.  v0:= temp @kind wide;
  #L2e4ccc.  v2:= -1L;
  #L2e4cd0.  v4:= lcmp(v0, v2);
  #L2e4cd4.  if v4 != 0 then goto L2e4cdc;
  #L2e4cd8.  v0:= -1I;
  #L2e4cda.  return v0;
  #L2e4cdc.  v0:= v7.`okio.RealBufferedSource$1.a` @type ^`okio.RealBufferedSource` @kind object;
  #L2e4ce0.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L2e4ce4.  call temp:= `readByte`(v0) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L2e4cea.  v0:= temp;
  #L2e4cec.  v0:= v0 ^& 255;
  #L2e4cf0.  return v0;
  #L2e4cf2.  v0:= new `java.io.IOException`;
  #L2e4cf6.  v1:= "closed" @kind object;
  #L2e4cfa.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e4d00.  throw v0;
}
procedure `int` `read`(`okio.RealBufferedSource$1` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lokio/RealBufferedSource$1;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2e4d14.  v0:= v7.`okio.RealBufferedSource$1.a` @type ^`okio.RealBufferedSource` @kind object;
  #L2e4d18.  v0:= v0.`okio.RealBufferedSource.a` @type ^`boolean` @kind boolean;
  #L2e4d1c.  if v0 != 0 then goto L2e4d78;
  #L2e4d20.  v0:= length @variable v8;
  #L2e4d22.  v1:= (`long`) v0 @kind i2l;
  #L2e4d24.  v3:= (`long`) v9 @kind i2l;
  #L2e4d26.  v5:= (`long`) v10 @kind i2l;
  #L2e4d28.  call `checkOffsetAndCount`(v1, v3, v5) @signature `Lokio/Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L2e4d2e.  v0:= v7.`okio.RealBufferedSource$1.a` @type ^`okio.RealBufferedSource` @kind object;
  #L2e4d32.  v1:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L2e4d36.  v2:= v1.`okio.Buffer.b` @type ^`long` @kind wide;
  #L2e4d3a.  v4:= 0L;
  #L2e4d3e.  v6:= lcmp(v2, v4);
  #L2e4d42.  if v6 != 0 then goto L2e4d66;
  #L2e4d46.  v0:= v0.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L2e4d4a.  v2:= 8192L;
  #L2e4d4e.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L2e4d54.  v0:= temp @kind wide;
  #L2e4d56.  v2:= -1L;
  #L2e4d5a.  v4:= lcmp(v0, v2);
  #L2e4d5e.  if v4 != 0 then goto L2e4d66;
  #L2e4d62.  v8:= -1I;
  #L2e4d64.  return v8;
  #L2e4d66.  v0:= v7.`okio.RealBufferedSource$1.a` @type ^`okio.RealBufferedSource` @kind object;
  #L2e4d6a.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L2e4d6e.  call temp:= `read`(v0, v8, v9, v10) @signature `Lokio/Buffer;.read:([BII)I` @kind virtual;
  #L2e4d74.  v8:= temp;
  #L2e4d76.  return v8;
  #L2e4d78.  v8:= new `java.io.IOException`;
  #L2e4d7c.  v9:= "closed" @kind object;
  #L2e4d80.  call `<init>`(v8, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e4d86.  throw v8;
}
procedure `java.lang.String` `toString`(`okio.RealBufferedSource$1` v2 @kind this) @signature `Lokio/RealBufferedSource$1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2e4d98.  v0:= new `java.lang.StringBuilder`;
  #L2e4d9c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2e4da2.  v1:= v2.`okio.RealBufferedSource$1.a` @type ^`okio.RealBufferedSource` @kind object;
  #L2e4da6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e4dac.  v1:= ".inputStream()" @kind object;
  #L2e4db0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e4db6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e4dbc.  v0:= temp @kind object;
  #L2e4dbe.  return v0 @kind object;
}
