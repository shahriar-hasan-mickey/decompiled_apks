record `okio.Options` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.AbstractList` @kind class, `java.util.RandomAccess` @kind interface {
  `okio.ByteString`[] `okio.Options.a` @AccessFlag FINAL;
  `int`[] `okio.Options.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okio.Options` v0 @kind this, `okio.ByteString`[] v1 @kind object, `int`[] v2 @kind object) @signature `Lokio/Options;.<init>:([Lokio/ByteString;[I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2e3c04.  call `<init>`(v0) @signature `Ljava/util/AbstractList;.<init>:()V` @kind direct;
  #L2e3c0a.  v0.`okio.Options.a` @type ^`okio.ByteString`[] := v1 @kind object;
  #L2e3c0e.  v0.`okio.Options.b` @type ^`int`[] := v2 @kind object;
  #L2e3c12.  return @kind void;
}
procedure `void` `buildTrieRecursive`(`long` v17 , `okio.Buffer` v19 @kind object, `int` v20 , `java.util.List` v21 @kind object, `int` v22 , `int` v23 , `java.util.List` v24 @kind object) @signature `Lokio/Options;.buildTrieRecursive:(JLokio/Buffer;ILjava/util/List;IILjava/util/List;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L2e3c24.  v0:= v19 @kind object;
  #L2e3c28.  v1:= v20;
  #L2e3c2c.  v10:= v21 @kind object;
  #L2e3c30.  v2:= v22;
  #L2e3c34.  v11:= v23;
  #L2e3c38.  v12:= v24 @kind object;
  #L2e3c3c.  if v2 >= v11 then goto L2e3f9c;
  #L2e3c40.  v3:= v2;
  #L2e3c42.  if v3 >= v11 then goto L2e3c70;
  #L2e3c46.  call temp:= `get`(v10, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e3c4c.  v4:= temp @kind object;
  #L2e3c4e.  v4:= (`okio.ByteString`) v4 @kind object;
  #L2e3c52.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L2e3c58.  v4:= temp;
  #L2e3c5a.  if v4 < v1 then goto L2e3c64;
  #L2e3c5e.  v3:= v3 + 1;
  #L2e3c62.  goto L2e3c42;
  #L2e3c64.  v0:= new `java.lang.AssertionError`;
  #L2e3c68.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2e3c6e.  throw v0;
  #L2e3c70.  call temp:= `get`(v21, v22) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e3c76.  v3:= temp @kind object;
  #L2e3c78.  v3:= (`okio.ByteString`) v3 @kind object;
  #L2e3c7c.  v4:= v11 + -1;
  #L2e3c80.  call temp:= `get`(v10, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e3c86.  v4:= temp @kind object;
  #L2e3c88.  v4:= (`okio.ByteString`) v4 @kind object;
  #L2e3c8c.  v5:= -1I;
  #L2e3c8e.  call temp:= `size`(v3) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L2e3c94.  v6:= temp;
  #L2e3c96.  if v1 != v6 then goto L2e3cbe;
  #L2e3c9a.  call temp:= `get`(v12, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e3ca0.  v3:= temp @kind object;
  #L2e3ca2.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L2e3ca6.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2e3cac.  v5:= temp;
  #L2e3cae.  v2:= v2 + 1;
  #L2e3cb2.  call temp:= `get`(v10, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e3cb8.  v3:= temp @kind object;
  #L2e3cba.  v3:= (`okio.ByteString`) v3 @kind object;
  #L2e3cbe.  v6:= v2;
  #L2e3cc0.  call temp:= `getByte`(v3, v1) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L2e3cc6.  v2:= temp;
  #L2e3cc8.  call temp:= `getByte`(v4, v1) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L2e3cce.  v7:= temp;
  #L2e3cd0.  v8:= 2L;
  #L2e3cd4.  if v2 == v7 then goto L2e3e7e;
  #L2e3cd8.  v2:= v6 + 1;
  #L2e3cdc.  v3:= 1I;
  #L2e3cde.  if v2 >= v11 then goto L2e3d1c;
  #L2e3ce2.  v4:= v2 + -1;
  #L2e3ce6.  call temp:= `get`(v10, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e3cec.  v4:= temp @kind object;
  #L2e3cee.  v4:= (`okio.ByteString`) v4 @kind object;
  #L2e3cf2.  call temp:= `getByte`(v4, v1) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L2e3cf8.  v4:= temp;
  #L2e3cfa.  call temp:= `get`(v10, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e3d00.  v7:= temp @kind object;
  #L2e3d02.  v7:= (`okio.ByteString`) v7 @kind object;
  #L2e3d06.  call temp:= `getByte`(v7, v1) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L2e3d0c.  v7:= temp;
  #L2e3d0e.  if v4 == v7 then goto L2e3d16;
  #L2e3d12.  v3:= v3 + 1;
  #L2e3d16.  v2:= v2 + 1;
  #L2e3d1a.  goto L2e3cde;
  #L2e3d1c.  call temp:= `intCount`(v19) @signature `Lokio/Options;.intCount:(Lokio/Buffer;)I` @kind static;
  #L2e3d22.  v2:= temp;
  #L2e3d24.  v13:= (`long`) v2 @kind i2l;
  #L2e3d26.  v13:= v17 + v13 @kind long;
  #L2e3d2a.  v13:= v13 + v8 @kind long;
  #L2e3d2c.  v2:= v3 * 2;
  #L2e3d30.  v7:= (`long`) v2 @kind i2l;
  #L2e3d32.  v13:= v13 + v7 @kind long;
  #L2e3d34.  call temp:= `writeInt`(v0, v3) @signature `Lokio/Buffer;.writeInt:(I)Lokio/Buffer;` @kind virtual;
  #L2e3d3a.  call temp:= `writeInt`(v0, v5) @signature `Lokio/Buffer;.writeInt:(I)Lokio/Buffer;` @kind virtual;
  #L2e3d40.  v2:= v6;
  #L2e3d42.  if v2 >= v11 then goto L2e3d8a;
  #L2e3d46.  call temp:= `get`(v10, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e3d4c.  v3:= temp @kind object;
  #L2e3d4e.  v3:= (`okio.ByteString`) v3 @kind object;
  #L2e3d52.  call temp:= `getByte`(v3, v1) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L2e3d58.  v3:= temp;
  #L2e3d5a.  if v2 == v6 then goto L2e3d7a;
  #L2e3d5e.  v4:= v2 + -1;
  #L2e3d62.  call temp:= `get`(v10, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e3d68.  v4:= temp @kind object;
  #L2e3d6a.  v4:= (`okio.ByteString`) v4 @kind object;
  #L2e3d6e.  call temp:= `getByte`(v4, v1) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L2e3d74.  v4:= temp;
  #L2e3d76.  if v3 == v4 then goto L2e3d84;
  #L2e3d7a.  v3:= v3 ^& 255;
  #L2e3d7e.  call temp:= `writeInt`(v0, v3) @signature `Lokio/Buffer;.writeInt:(I)Lokio/Buffer;` @kind virtual;
  #L2e3d84.  v2:= v2 + 1;
  #L2e3d88.  goto L2e3d42;
  #L2e3d8a.  v9:= new `okio.Buffer`;
  #L2e3d8e.  call `<init>`(v9) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L2e3d94.  v7:= v6;
  #L2e3d96.  if v7 >= v11 then goto L2e3e64;
  #L2e3d9a.  call temp:= `get`(v10, v7) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e3da0.  v2:= temp @kind object;
  #L2e3da2.  v2:= (`okio.ByteString`) v2 @kind object;
  #L2e3da6.  call temp:= `getByte`(v2, v1) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L2e3dac.  v2:= temp;
  #L2e3dae.  v3:= v7 + 1;
  #L2e3db2.  v4:= v3;
  #L2e3db4.  if v4 >= v11 then goto L2e3dda;
  #L2e3db8.  call temp:= `get`(v10, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e3dbe.  v5:= temp @kind object;
  #L2e3dc0.  v5:= (`okio.ByteString`) v5 @kind object;
  #L2e3dc4.  call temp:= `getByte`(v5, v1) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L2e3dca.  v5:= temp;
  #L2e3dcc.  if v2 == v5 then goto L2e3dd4;
  #L2e3dd0.  v8:= v4;
  #L2e3dd2.  goto L2e3ddc;
  #L2e3dd4.  v4:= v4 + 1;
  #L2e3dd8.  goto L2e3db4;
  #L2e3dda.  v8:= v11;
  #L2e3ddc.  if v3 != v8 then goto L2e3e20;
  #L2e3de0.  v2:= v1 + 1;
  #L2e3de4.  call temp:= `get`(v10, v7) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e3dea.  v3:= temp @kind object;
  #L2e3dec.  v3:= (`okio.ByteString`) v3 @kind object;
  #L2e3df0.  call temp:= `size`(v3) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L2e3df6.  v3:= temp;
  #L2e3df8.  if v2 != v3 then goto L2e3e20;
  #L2e3dfc.  call temp:= `get`(v12, v7) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e3e02.  v2:= temp @kind object;
  #L2e3e04.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L2e3e08.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2e3e0e.  v2:= temp;
  #L2e3e10.  call temp:= `writeInt`(v0, v2) @signature `Lokio/Buffer;.writeInt:(I)Lokio/Buffer;` @kind virtual;
  #L2e3e16.  v16:= v8;
  #L2e3e1a.  v17:= v9 @kind object;
  #L2e3e1e.  goto L2e3e5a;
  #L2e3e20.  call temp:= `intCount`(v9) @signature `Lokio/Options;.intCount:(Lokio/Buffer;)I` @kind static;
  #L2e3e26.  v2:= temp;
  #L2e3e28.  v2:= (`long`) v2 @kind i2l;
  #L2e3e2a.  v2:= v2 + v13 @kind long;
  #L2e3e2c.  v4:= -1L;
  #L2e3e30.  v2:= v2 * v4 @kind long;
  #L2e3e34.  v3:= (`int`) v2 @kind l2i;
  #L2e3e36.  call temp:= `writeInt`(v0, v3) @signature `Lokio/Buffer;.writeInt:(I)Lokio/Buffer;` @kind virtual;
  #L2e3e3c.  v5:= v1 + 1;
  #L2e3e40.  v2:= v13 @kind wide;
  #L2e3e42.  v4:= v9 @kind object;
  #L2e3e44.  v6:= v21 @kind object;
  #L2e3e48.  v16:= v8;
  #L2e3e4c.  v17:= v9 @kind object;
  #L2e3e50.  v9:= v24 @kind object;
  #L2e3e54.  call `buildTrieRecursive`(v2, v4, v5, v6, v7, v8, v9) @signature `Lokio/Options;.buildTrieRecursive:(JLokio/Buffer;ILjava/util/List;IILjava/util/List;)V` @kind static;
  #L2e3e5a.  v9:= v17 @kind object;
  #L2e3e5e.  v7:= v16;
  #L2e3e62.  goto L2e3d96;
  #L2e3e64.  v17:= v9 @kind object;
  #L2e3e68.  call temp:= `size`(v17) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2e3e6e.  v1:= temp @kind wide;
  #L2e3e70.  v3:= v17 @kind object;
  #L2e3e74.  call `write`(v0, v3, v1) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L2e3e7a.  goto L2e3f9a;
  #L2e3e7e.  v2:= 0I;
  #L2e3e80.  call temp:= `size`(v3) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L2e3e86.  v7:= temp;
  #L2e3e88.  call temp:= `size`(v4) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L2e3e8e.  v13:= temp;
  #L2e3e90.  call temp:= `min`(v7, v13) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L2e3e96.  v7:= temp;
  #L2e3e98.  v13:= v1;
  #L2e3e9a.  if v13 >= v7 then goto L2e3ebc;
  #L2e3e9e.  call temp:= `getByte`(v3, v13) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L2e3ea4.  v14:= temp;
  #L2e3ea6.  call temp:= `getByte`(v4, v13) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L2e3eac.  v15:= temp;
  #L2e3eae.  if v14 != v15 then goto L2e3ebc;
  #L2e3eb2.  v2:= v2 + 1;
  #L2e3eb6.  v13:= v13 + 1;
  #L2e3eba.  goto L2e3e9a;
  #L2e3ebc.  call temp:= `intCount`(v19) @signature `Lokio/Options;.intCount:(Lokio/Buffer;)I` @kind static;
  #L2e3ec2.  v4:= temp;
  #L2e3ec4.  v13:= (`long`) v4 @kind i2l;
  #L2e3ec6.  v13:= v17 + v13 @kind long;
  #L2e3eca.  v13:= v13 + v8 @kind long;
  #L2e3ecc.  v7:= (`long`) v2 @kind i2l;
  #L2e3ece.  v13:= v13 + v7 @kind long;
  #L2e3ed0.  v7:= 1L;
  #L2e3ed4.  v7:= v7 + v13 @kind long;
  #L2e3ed6.  v4:= -v2 @kind int;
  #L2e3ed8.  call temp:= `writeInt`(v0, v4) @signature `Lokio/Buffer;.writeInt:(I)Lokio/Buffer;` @kind virtual;
  #L2e3ede.  call temp:= `writeInt`(v0, v5) @signature `Lokio/Buffer;.writeInt:(I)Lokio/Buffer;` @kind virtual;
  #L2e3ee4.  v4:= v1;
  #L2e3ee6.  v5:= v1 + v2 @kind int;
  #L2e3eea.  if v4 >= v5 then goto L2e3f06;
  #L2e3eee.  call temp:= `getByte`(v3, v4) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L2e3ef4.  v5:= temp;
  #L2e3ef6.  v5:= v5 ^& 255;
  #L2e3efa.  call temp:= `writeInt`(v0, v5) @signature `Lokio/Buffer;.writeInt:(I)Lokio/Buffer;` @kind virtual;
  #L2e3f00.  v4:= v4 + 1;
  #L2e3f04.  goto L2e3ee6;
  #L2e3f06.  v1:= v6 + 1;
  #L2e3f0a.  if v1 != v11 then goto L2e3f4e;
  #L2e3f0e.  call temp:= `get`(v10, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e3f14.  v1:= temp @kind object;
  #L2e3f16.  v1:= (`okio.ByteString`) v1 @kind object;
  #L2e3f1a.  call temp:= `size`(v1) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L2e3f20.  v1:= temp;
  #L2e3f22.  if v5 != v1 then goto L2e3f42;
  #L2e3f26.  call temp:= `get`(v12, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e3f2c.  v1:= temp @kind object;
  #L2e3f2e.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L2e3f32.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2e3f38.  v1:= temp;
  #L2e3f3a.  call temp:= `writeInt`(v0, v1) @signature `Lokio/Buffer;.writeInt:(I)Lokio/Buffer;` @kind virtual;
  #L2e3f40.  goto L2e3f9a;
  #L2e3f42.  v0:= new `java.lang.AssertionError`;
  #L2e3f46.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2e3f4c.  throw v0;
  #L2e3f4e.  v9:= new `okio.Buffer`;
  #L2e3f52.  call `<init>`(v9) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L2e3f58.  call temp:= `intCount`(v9) @signature `Lokio/Options;.intCount:(Lokio/Buffer;)I` @kind static;
  #L2e3f5e.  v1:= temp;
  #L2e3f60.  v1:= (`long`) v1 @kind i2l;
  #L2e3f62.  v1:= v1 + v7 @kind long;
  #L2e3f64.  v3:= -1L;
  #L2e3f68.  v1:= v1 * v3 @kind long;
  #L2e3f6c.  v2:= (`int`) v1 @kind l2i;
  #L2e3f6e.  call temp:= `writeInt`(v0, v2) @signature `Lokio/Buffer;.writeInt:(I)Lokio/Buffer;` @kind virtual;
  #L2e3f74.  v1:= v7 @kind wide;
  #L2e3f76.  v3:= v9 @kind object;
  #L2e3f78.  v4:= v5;
  #L2e3f7a.  v5:= v21 @kind object;
  #L2e3f7e.  v7:= v23;
  #L2e3f82.  v8:= v24 @kind object;
  #L2e3f86.  call `buildTrieRecursive`(v1, v3, v4, v5, v6, v7, v8) @signature `Lokio/Options;.buildTrieRecursive:(JLokio/Buffer;ILjava/util/List;IILjava/util/List;)V` @kind static;
  #L2e3f8c.  call temp:= `size`(v9) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2e3f92.  v1:= temp @kind wide;
  #L2e3f94.  call `write`(v0, v9, v1) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L2e3f9a.  return @kind void;
  #L2e3f9c.  v0:= new `java.lang.AssertionError`;
  #L2e3fa0.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2e3fa6.  goto L2e3faa;
  #L2e3fa8.  throw v0;
  #L2e3faa.  goto L2e3fa8;
}
procedure `int` `intCount`(`okio.Buffer` v4 @kind object) @signature `Lokio/Options;.intCount:(Lokio/Buffer;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2e396c.  call temp:= `size`(v4) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2e3972.  v0:= temp @kind wide;
  #L2e3974.  v2:= 4L;
  #L2e3978.  v0:= v0 / v2 @kind long;
  #L2e397a.  v4:= (`int`) v0 @kind l2i;
  #L2e397c.  return v4;
}
procedure `okio.Options` `of`(`okio.ByteString`[] v10 @kind object) @signature `Lokio/Options;.of:([Lokio/ByteString;)Lokio/Options;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2e39e0.  v0:= length @variable v10;
  #L2e39e2.  v1:= 0I;
  #L2e39e4.  if v0 != 0 then goto L2e3a04;
  #L2e39e8.  v10:= new `okio.Options`;
  #L2e39ec.  v0:= new `okio.ByteString`[v1];
  #L2e39f0.  v1:= 2I;
  #L2e39f2.  v1:= new `int`[v1];
  #L2e39f6.  goto L2e3be4;
  #L2e39fc.  call `<init>`(v10, v0, v1) @signature `Lokio/Options;.<init>:([Lokio/ByteString;[I)V` @kind direct;
  #L2e3a02.  return v10 @kind object;
  #L2e3a04.  v6:= new `java.util.ArrayList`;
  #L2e3a08.  call temp:= `asList`(v10) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2e3a0e.  v0:= temp @kind object;
  #L2e3a10.  call `<init>`(v6, v0) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L2e3a16.  call `sort`(v6) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;)V` @kind static;
  #L2e3a1c.  v9:= new `java.util.ArrayList`;
  #L2e3a20.  call `<init>`(v9) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2e3a26.  v0:= 0I;
  #L2e3a28.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2e3a2e.  v2:= temp;
  #L2e3a30.  if v0 >= v2 then goto L2e3a4a;
  #L2e3a34.  v2:= -1I;
  #L2e3a36.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2e3a3c.  v2:= temp @kind object;
  #L2e3a3e.  call temp:= `add`(v9, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2e3a44.  v0:= v0 + 1;
  #L2e3a48.  goto L2e3a28;
  #L2e3a4a.  v0:= 0I;
  #L2e3a4c.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2e3a52.  v2:= temp;
  #L2e3a54.  if v0 >= v2 then goto L2e3a78;
  #L2e3a58.  v2:= v10[v0] @kind object;
  #L2e3a5c.  call temp:= `binarySearch`(v6, v2) @signature `Ljava/util/Collections;.binarySearch:(Ljava/util/List;Ljava/lang/Object;)I` @kind static;
  #L2e3a62.  v2:= temp;
  #L2e3a64.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2e3a6a.  v3:= temp @kind object;
  #L2e3a6c.  call temp:= `set`(v9, v2, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2e3a72.  v0:= v0 + 1;
  #L2e3a76.  goto L2e3a4c;
  #L2e3a78.  call temp:= `get`(v6, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e3a7e.  v0:= temp @kind object;
  #L2e3a80.  v0:= (`okio.ByteString`) v0 @kind object;
  #L2e3a84.  call temp:= `size`(v0) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L2e3a8a.  v0:= temp;
  #L2e3a8c.  if v0 == 0 then goto L2e3bd0;
  #L2e3a90.  v0:= 0I;
  #L2e3a92.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2e3a98.  v2:= temp;
  #L2e3a9a.  if v0 >= v2 then goto L2e3b5c;
  #L2e3a9e.  call temp:= `get`(v6, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e3aa4.  v2:= temp @kind object;
  #L2e3aa6.  v2:= (`okio.ByteString`) v2 @kind object;
  #L2e3aaa.  v3:= v0 + 1;
  #L2e3aae.  v4:= v3;
  #L2e3ab0.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2e3ab6.  v5:= temp;
  #L2e3ab8.  if v4 >= v5 then goto L2e3b58;
  #L2e3abc.  call temp:= `get`(v6, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e3ac2.  v5:= temp @kind object;
  #L2e3ac4.  v5:= (`okio.ByteString`) v5 @kind object;
  #L2e3ac8.  call temp:= `startsWith`(v5, v2) @signature `Lokio/ByteString;.startsWith:(Lokio/ByteString;)Z` @kind virtual;
  #L2e3ace.  v7:= temp;
  #L2e3ad0.  if v7 != 0 then goto L2e3ad6;
  #L2e3ad4.  goto L2e3b58;
  #L2e3ad6.  call temp:= `size`(v5) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L2e3adc.  v7:= temp;
  #L2e3ade.  call temp:= `size`(v2) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L2e3ae4.  v8:= temp;
  #L2e3ae6.  if v7 == v8 then goto L2e3b2a;
  #L2e3aea.  call temp:= `get`(v9, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e3af0.  v5:= temp @kind object;
  #L2e3af2.  v5:= (`java.lang.Integer`) v5 @kind object;
  #L2e3af6.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2e3afc.  v5:= temp;
  #L2e3afe.  call temp:= `get`(v9, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2e3b04.  v7:= temp @kind object;
  #L2e3b06.  v7:= (`java.lang.Integer`) v7 @kind object;
  #L2e3b0a.  call temp:= `intValue`(v7) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2e3b10.  v7:= temp;
  #L2e3b12.  if v5 <= v7 then goto L2e3b24;
  #L2e3b16.  call temp:= `remove`(v6, v4) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L2e3b1c.  call temp:= `remove`(v9, v4) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L2e3b22.  goto L2e3ab0;
  #L2e3b24.  v4:= v4 + 1;
  #L2e3b28.  goto L2e3ab0;
  #L2e3b2a.  v10:= new `java.lang.IllegalArgumentException`;
  #L2e3b2e.  v0:= new `java.lang.StringBuilder`;
  #L2e3b32.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2e3b38.  v1:= "duplicate option: " @kind object;
  #L2e3b3c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e3b42.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e3b48.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e3b4e.  v0:= temp @kind object;
  #L2e3b50.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e3b56.  throw v10;
  #L2e3b58.  v0:= v3;
  #L2e3b5a.  goto L2e3a92;
  #L2e3b5c.  v0:= new `okio.Buffer`;
  #L2e3b60.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L2e3b66.  v2:= 0L;
  #L2e3b6a.  v5:= 0I;
  #L2e3b6c.  v7:= 0I;
  #L2e3b6e.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2e3b74.  v8:= temp;
  #L2e3b76.  v4:= v0 @kind object;
  #L2e3b78.  call `buildTrieRecursive`(v2, v4, v5, v6, v7, v8, v9) @signature `Lokio/Options;.buildTrieRecursive:(JLokio/Buffer;ILjava/util/List;IILjava/util/List;)V` @kind static;
  #L2e3b7e.  call temp:= `intCount`(v0) @signature `Lokio/Options;.intCount:(Lokio/Buffer;)I` @kind static;
  #L2e3b84.  v2:= temp;
  #L2e3b86.  v3:= new `int`[v2];
  #L2e3b8a.  if v1 >= v2 then goto L2e3ba0;
  #L2e3b8e.  call temp:= `readInt`(v0) @signature `Lokio/Buffer;.readInt:()I` @kind virtual;
  #L2e3b94.  v4:= temp;
  #L2e3b96.  v3[v1]:= v4;
  #L2e3b9a.  v1:= v1 + 1;
  #L2e3b9e.  goto L2e3b8a;
  #L2e3ba0.  call temp:= `exhausted`(v0) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L2e3ba6.  v0:= temp;
  #L2e3ba8.  if v0 == 0 then goto L2e3bc4;
  #L2e3bac.  v0:= new `okio.Options`;
  #L2e3bb0.  call temp:= `clone`(v10) @signature `[Lokio/ByteString;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2e3bb6.  v10:= temp @kind object;
  #L2e3bb8.  v10:= (`okio.ByteString`[]) v10 @kind object;
  #L2e3bbc.  call `<init>`(v0, v10, v3) @signature `Lokio/Options;.<init>:([Lokio/ByteString;[I)V` @kind direct;
  #L2e3bc2.  return v0 @kind object;
  #L2e3bc4.  v10:= new `java.lang.AssertionError`;
  #L2e3bc8.  call `<init>`(v10) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2e3bce.  throw v10;
  #L2e3bd0.  v10:= new `java.lang.IllegalArgumentException`;
  #L2e3bd4.  v0:= "the empty byte string is not a supported option" @kind object;
  #L2e3bd8.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e3bde.  goto L2e3be2;
  #L2e3be0.  throw v10;
  #L2e3be2.  goto L2e3be0;
  #L2e3be4.  v1:= (0I, -1I) @kind object;
  #L2e3bf3.  goto L2e39fc;
}
procedure `java.lang.Object` `get`(`okio.Options` v0 @kind this, `int` v1 ) @signature `Lokio/Options;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2e39a8.  call temp:= `get`(v0, v1) @signature `Lokio/Options;.get:(I)Lokio/ByteString;` @kind virtual;
  #L2e39ae.  v1:= temp @kind object;
  #L2e39b0.  return v1 @kind object;
}
procedure `okio.ByteString` `get`(`okio.Options` v1 @kind this, `int` v2 ) @signature `Lokio/Options;.get:(I)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e39c4.  v0:= v1.`okio.Options.a` @type ^`okio.ByteString`[] @kind object;
  #L2e39c8.  v2:= v0[v2] @kind object;
  #L2e39cc.  return v2 @kind object;
}
procedure `int` `size`(`okio.Options` v1 @kind this) @signature `Lokio/Options;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e3990.  v0:= v1.`okio.Options.a` @type ^`okio.ByteString`[] @kind object;
  #L2e3994.  v0:= length @variable v0;
  #L2e3996.  return v0;
}
