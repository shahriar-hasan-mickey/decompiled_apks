record `okio.AsyncTimeout$1` @kind class @AccessFlag  extends `okio.Sink` @kind interface {
  `okio.Sink` `okio.AsyncTimeout$1.a` @AccessFlag FINAL_SYNTHETIC;
  `okio.AsyncTimeout` `okio.AsyncTimeout$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.AsyncTimeout$1` v0 @kind this, `okio.AsyncTimeout` v1 @kind object, `okio.Sink` v2 @kind object) @signature `Lokio/AsyncTimeout$1;.<init>:(Lokio/AsyncTimeout;Lokio/Sink;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2e1278.  v0.`okio.AsyncTimeout$1.b` @type ^`okio.AsyncTimeout` := v1 @kind object;
  #L2e127c.  v0.`okio.AsyncTimeout$1.a` @type ^`okio.Sink` := v2 @kind object;
  #L2e1280.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e1286.  return @kind void;
}
procedure `void` `close`(`okio.AsyncTimeout$1` v3 @kind this) @signature `Lokio/AsyncTimeout$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2e1298.  v0:= v3.`okio.AsyncTimeout$1.b` @type ^`okio.AsyncTimeout` @kind object;
  #L2e129c.  call `enter`(v0) @signature `Lokio/AsyncTimeout;.enter:()V` @kind virtual;
  #L2e12a2.  v0:= v3.`okio.AsyncTimeout$1.a` @type ^`okio.Sink` @kind object;
  #L2e12a6.  call `close`(v0) @signature `Lokio/Sink;.close:()V` @kind interface;
  #L2e12ac.  v0:= 1I;
  #L2e12ae.  v1:= v3.`okio.AsyncTimeout$1.b` @type ^`okio.AsyncTimeout` @kind object;
  #L2e12b2.  call `c`(v1, v0) @signature `Lokio/AsyncTimeout;.c:(Z)V` @kind virtual;
  #L2e12b8.  return @kind void;
  #L2e12ba.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2e12bc.  goto L2e12ce;
  #L2e12be.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L2e12c0.  v1:= v3.`okio.AsyncTimeout$1.b` @type ^`okio.AsyncTimeout` @kind object;
  #L2e12c4.  call temp:= `b`(v1, v0) @signature `Lokio/AsyncTimeout;.b:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L2e12ca.  v0:= temp @kind object;
  #L2e12cc.  throw v0;
  #L2e12ce.  v1:= v3.`okio.AsyncTimeout$1.b` @type ^`okio.AsyncTimeout` @kind object;
  #L2e12d2.  v2:= 0I;
  #L2e12d4.  call `c`(v1, v2) @signature `Lokio/AsyncTimeout;.c:(Z)V` @kind virtual;
  #L2e12da.  throw v0;
  catch `java.io.IOException` @[L2e12a2..L2e12ac] goto L2e12be;
  catch `java.lang.Throwable` @[L2e12a2..L2e12ac] goto L2e12ba;
  catch `java.lang.Throwable` @[L2e12c0..L2e12ce] goto L2e12ba;
}
procedure `void` `flush`(`okio.AsyncTimeout$1` v3 @kind this) @signature `Lokio/AsyncTimeout$1;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2e1304.  v0:= v3.`okio.AsyncTimeout$1.b` @type ^`okio.AsyncTimeout` @kind object;
  #L2e1308.  call `enter`(v0) @signature `Lokio/AsyncTimeout;.enter:()V` @kind virtual;
  #L2e130e.  v0:= v3.`okio.AsyncTimeout$1.a` @type ^`okio.Sink` @kind object;
  #L2e1312.  call `flush`(v0) @signature `Lokio/Sink;.flush:()V` @kind interface;
  #L2e1318.  v0:= 1I;
  #L2e131a.  v1:= v3.`okio.AsyncTimeout$1.b` @type ^`okio.AsyncTimeout` @kind object;
  #L2e131e.  call `c`(v1, v0) @signature `Lokio/AsyncTimeout;.c:(Z)V` @kind virtual;
  #L2e1324.  return @kind void;
  #L2e1326.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2e1328.  goto L2e133a;
  #L2e132a.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L2e132c.  v1:= v3.`okio.AsyncTimeout$1.b` @type ^`okio.AsyncTimeout` @kind object;
  #L2e1330.  call temp:= `b`(v1, v0) @signature `Lokio/AsyncTimeout;.b:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L2e1336.  v0:= temp @kind object;
  #L2e1338.  throw v0;
  #L2e133a.  v1:= v3.`okio.AsyncTimeout$1.b` @type ^`okio.AsyncTimeout` @kind object;
  #L2e133e.  v2:= 0I;
  #L2e1340.  call `c`(v1, v2) @signature `Lokio/AsyncTimeout;.c:(Z)V` @kind virtual;
  #L2e1346.  throw v0;
  catch `java.io.IOException` @[L2e130e..L2e1318] goto L2e132a;
  catch `java.lang.Throwable` @[L2e130e..L2e1318] goto L2e1326;
  catch `java.lang.Throwable` @[L2e132c..L2e133a] goto L2e1326;
}
procedure `okio.Timeout` `timeout`(`okio.AsyncTimeout$1` v1 @kind this) @signature `Lokio/AsyncTimeout$1;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e1260.  v0:= v1.`okio.AsyncTimeout$1.b` @type ^`okio.AsyncTimeout` @kind object;
  #L2e1264.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.AsyncTimeout$1` v2 @kind this) @signature `Lokio/AsyncTimeout$1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2e121c.  v0:= new `java.lang.StringBuilder`;
  #L2e1220.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2e1226.  v1:= "AsyncTimeout.sink(" @kind object;
  #L2e122a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e1230.  v1:= v2.`okio.AsyncTimeout$1.a` @type ^`okio.Sink` @kind object;
  #L2e1234.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e123a.  v1:= ")" @kind object;
  #L2e123e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e1244.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e124a.  v0:= temp @kind object;
  #L2e124c.  return v0 @kind object;
}
procedure `void` `write`(`okio.AsyncTimeout$1` v6 @kind this, `okio.Buffer` v7 @kind object, `long` v8 ) @signature `Lokio/AsyncTimeout$1;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2e1370.  v0:= v7.`okio.Buffer.b` @type ^`long` @kind wide;
  #L2e1374.  v2:= 0L;
  #L2e1378.  v4:= v8 @kind wide;
  #L2e137a.  call `checkOffsetAndCount`(v0, v2, v4) @signature `Lokio/Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L2e1380.  v0:= 0L;
  #L2e1384.  v2:= lcmp(v8, v0);
  #L2e1388.  if v2 <= 0 then goto L2e1404;
  #L2e138c.  v2:= v7.`okio.Buffer.a` @type ^`okio.Segment` @kind object;
  #L2e1390.  v3:= 65536L;
  #L2e1396.  v5:= lcmp(v0, v3);
  #L2e139a.  if v5 >= 0 then goto L2e13be;
  #L2e139e.  v3:= v2.`okio.Segment.c` @type ^`int`;
  #L2e13a2.  v4:= v2.`okio.Segment.b` @type ^`int`;
  #L2e13a6.  v3:= v3 - v4 @kind int;
  #L2e13a8.  v3:= (`long`) v3 @kind i2l;
  #L2e13aa.  v0:= v0 + v3 @kind long;
  #L2e13ac.  v3:= lcmp(v0, v8);
  #L2e13b0.  if v3 < 0 then goto L2e13b8;
  #L2e13b4.  v0:= v8 @kind wide;
  #L2e13b6.  goto L2e13be;
  #L2e13b8.  v2:= v2.`okio.Segment.f` @type ^`okio.Segment` @kind object;
  #L2e13bc.  goto L2e1390;
  #L2e13be.  v2:= 0I;
  #L2e13c0.  v3:= v6.`okio.AsyncTimeout$1.b` @type ^`okio.AsyncTimeout` @kind object;
  #L2e13c4.  call `enter`(v3) @signature `Lokio/AsyncTimeout;.enter:()V` @kind virtual;
  #L2e13ca.  v3:= v6.`okio.AsyncTimeout$1.a` @type ^`okio.Sink` @kind object;
  #L2e13ce.  call `write`(v3, v7, v0) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L2e13d4.  v8:= v8 - v0 @kind long;
  #L2e13d6.  v0:= 1I;
  #L2e13d8.  v1:= v6.`okio.AsyncTimeout$1.b` @type ^`okio.AsyncTimeout` @kind object;
  #L2e13dc.  call `c`(v1, v0) @signature `Lokio/AsyncTimeout;.c:(Z)V` @kind virtual;
  #L2e13e2.  goto L2e1380;
  #L2e13e4.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2e13e6.  goto L2e13f8;
  #L2e13e8.  v7:= Exception @type ^`java.io.IOException` @kind object;
  #L2e13ea.  v8:= v6.`okio.AsyncTimeout$1.b` @type ^`okio.AsyncTimeout` @kind object;
  #L2e13ee.  call temp:= `b`(v8, v7) @signature `Lokio/AsyncTimeout;.b:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L2e13f4.  v7:= temp @kind object;
  #L2e13f6.  throw v7;
  #L2e13f8.  v8:= v6.`okio.AsyncTimeout$1.b` @type ^`okio.AsyncTimeout` @kind object;
  #L2e13fc.  call `c`(v8, v2) @signature `Lokio/AsyncTimeout;.c:(Z)V` @kind virtual;
  #L2e1402.  throw v7;
  #L2e1404.  return @kind void;
  catch `java.io.IOException` @[L2e13ca..L2e13d4] goto L2e13e8;
  catch `java.lang.Throwable` @[L2e13ca..L2e13d4] goto L2e13e4;
  catch `java.lang.Throwable` @[L2e13ea..L2e13f8] goto L2e13e4;
}
