record `okio.Pipe` @kind class @AccessFlag PUBLIC_FINAL {
  `long` `okio.Pipe.a` @AccessFlag FINAL;
  `okio.Buffer` `okio.Pipe.b` @AccessFlag FINAL;
  `boolean` `okio.Pipe.c` @AccessFlag ;
  `boolean` `okio.Pipe.d` @AccessFlag ;
  `okio.Sink` `okio.Pipe.sink` @AccessFlag PRIVATE_FINAL;
  `okio.Source` `okio.Pipe.source` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okio.Pipe` v3 @kind this, `long` v4 ) @signature `Lokio/Pipe;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2e4340.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e4346.  v0:= new `okio.Buffer`;
  #L2e434a.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L2e4350.  v3.`okio.Pipe.b` @type ^`okio.Buffer` := v0 @kind object;
  #L2e4354.  v0:= new `okio.Pipe$PipeSink`;
  #L2e4358.  call `<init>`(v0, v3) @signature `Lokio/Pipe$PipeSink;.<init>:(Lokio/Pipe;)V` @kind direct;
  #L2e435e.  v3.`okio.Pipe.sink` @type ^`okio.Sink` := v0 @kind object;
  #L2e4362.  v0:= new `okio.Pipe$PipeSource`;
  #L2e4366.  call `<init>`(v0, v3) @signature `Lokio/Pipe$PipeSource;.<init>:(Lokio/Pipe;)V` @kind direct;
  #L2e436c.  v3.`okio.Pipe.source` @type ^`okio.Source` := v0 @kind object;
  #L2e4370.  v0:= 1L;
  #L2e4374.  v2:= lcmp(v4, v0);
  #L2e4378.  if v2 < 0 then goto L2e4382;
  #L2e437c.  v3.`okio.Pipe.a` @type ^`long` := v4 @kind wide;
  #L2e4380.  return @kind void;
  #L2e4382.  v0:= new `java.lang.IllegalArgumentException`;
  #L2e4386.  v1:= new `java.lang.StringBuilder`;
  #L2e438a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2e4390.  v2:= "maxBufferSize < 1: " @kind object;
  #L2e4394.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e439a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e43a0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e43a6.  v4:= temp @kind object;
  #L2e43a8.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e43ae.  throw v0;
}
procedure `okio.Sink` `sink`(`okio.Pipe` v1 @kind this) @signature `Lokio/Pipe;.sink:()Lokio/Sink;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e4310.  v0:= v1.`okio.Pipe.sink` @type ^`okio.Sink` @kind object;
  #L2e4314.  return v0 @kind object;
}
procedure `okio.Source` `source`(`okio.Pipe` v1 @kind this) @signature `Lokio/Pipe;.source:()Lokio/Source;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e4328.  v0:= v1.`okio.Pipe.source` @type ^`okio.Source` @kind object;
  #L2e432c.  return v0 @kind object;
}
