record `okio.ForwardingSource` @kind class @AccessFlag PUBLIC_ABSTRACT extends `okio.Source` @kind interface {
  `okio.Source` `okio.ForwardingSource.delegate` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okio.ForwardingSource` v1 @kind this, `okio.Source` v2 @kind object) @signature `Lokio/ForwardingSource;.<init>:(Lokio/Source;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2e2468.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e246e.  if v2 == 0 then goto L2e2478;
  #L2e2472.  v1.`okio.ForwardingSource.delegate` @type ^`okio.Source` := v2 @kind object;
  #L2e2476.  return @kind void;
  #L2e2478.  v2:= new `java.lang.IllegalArgumentException`;
  #L2e247c.  v0:= "delegate == null" @kind object;
  #L2e2480.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e2486.  throw v2;
}
procedure `void` `close`(`okio.ForwardingSource` v1 @kind this) @signature `Lokio/ForwardingSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e2498.  v0:= v1.`okio.ForwardingSource.delegate` @type ^`okio.Source` @kind object;
  #L2e249c.  call `close`(v0) @signature `Lokio/Source;.close:()V` @kind interface;
  #L2e24a2.  return @kind void;
}
procedure `okio.Source` `delegate`(`okio.ForwardingSource` v1 @kind this) @signature `Lokio/ForwardingSource;.delegate:()Lokio/Source;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2e2430.  v0:= v1.`okio.ForwardingSource.delegate` @type ^`okio.Source` @kind object;
  #L2e2434.  return v0 @kind object;
}
procedure `long` `read`(`okio.ForwardingSource` v1 @kind this, `okio.Buffer` v2 @kind object, `long` v3 ) @signature `Lokio/ForwardingSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e2410.  v0:= v1.`okio.ForwardingSource.delegate` @type ^`okio.Source` @kind object;
  #L2e2414.  call temp:= `read`(v0, v2, v3) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L2e241a.  v2:= temp @kind wide;
  #L2e241c.  return v2 @kind wide;
}
procedure `okio.Timeout` `timeout`(`okio.ForwardingSource` v1 @kind this) @signature `Lokio/ForwardingSource;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e2448.  v0:= v1.`okio.ForwardingSource.delegate` @type ^`okio.Source` @kind object;
  #L2e244c.  call temp:= `timeout`(v0) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L2e2452.  v0:= temp @kind object;
  #L2e2454.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.ForwardingSource` v2 @kind this) @signature `Lokio/ForwardingSource;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2e23b0.  v0:= new `java.lang.StringBuilder`;
  #L2e23b4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2e23ba.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2e23c0.  v1:= temp @kind object;
  #L2e23c2.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L2e23c8.  v1:= temp @kind object;
  #L2e23ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e23d0.  v1:= "(" @kind object;
  #L2e23d4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e23da.  v1:= v2.`okio.ForwardingSource.delegate` @type ^`okio.Source` @kind object;
  #L2e23de.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e23e4.  v1:= temp @kind object;
  #L2e23e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e23ec.  v1:= ")" @kind object;
  #L2e23f0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2e23f6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2e23fc.  v0:= temp @kind object;
  #L2e23fe.  return v0 @kind object;
}
