record `okio.Util` @kind class @AccessFlag FINAL {
}
global `java.nio.charset.Charset` `@@okio.Util.UTF_8` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/Util;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2e58fc.  v0:= "UTF-8" @kind object;
  #L2e5900.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L2e5906.  v0:= temp @kind object;
  #L2e5908.  `@@okio.Util.UTF_8` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L2e590c.  return @kind void;
}
procedure `void` `<init>`(`okio.Util` v0 @kind this) @signature `Lokio/Util;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2e5920.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e5926.  return @kind void;
}
procedure `boolean` `arrayRangeEquals`(`byte`[] v4 @kind object, `int` v5 , `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lokio/Util;.arrayRangeEquals:([BI[BII)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2e57c8.  v0:= 0I;
  #L2e57ca.  v1:= 0I;
  #L2e57cc.  if v1 >= v8 then goto L2e57ec;
  #L2e57d0.  v2:= v1 + v5 @kind int;
  #L2e57d4.  v2:= v4[v2] @kind byte;
  #L2e57d8.  v3:= v1 + v7 @kind int;
  #L2e57dc.  v3:= v6[v3] @kind byte;
  #L2e57e0.  if v2 == v3 then goto L2e57e6;
  #L2e57e4.  return v0;
  #L2e57e6.  v1:= v1 + 1;
  #L2e57ea.  goto L2e57cc;
  #L2e57ec.  v4:= 1I;
  #L2e57ee.  return v4;
}
procedure `void` `checkOffsetAndCount`(`long` v5 , `long` v7 , `long` v9 ) @signature `Lokio/Util;.checkOffsetAndCount:(JJJ)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2e5938.  v0:= v7 ^| v9 @kind long;
  #L2e593c.  v2:= 0L;
  #L2e5940.  v4:= lcmp(v0, v2);
  #L2e5944.  if v4 < 0 then goto L2e595e;
  #L2e5948.  v0:= lcmp(v7, v5);
  #L2e594c.  if v0 > 0 then goto L2e595e;
  #L2e5950.  v0:= v5 - v7 @kind long;
  #L2e5954.  v2:= lcmp(v0, v9);
  #L2e5958.  if v2 < 0 then goto L2e595e;
  #L2e595c.  return @kind void;
  #L2e595e.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L2e5962.  v1:= 3I;
  #L2e5964.  v1:= new `java.lang.Object`[v1];
  #L2e5968.  v2:= 0I;
  #L2e596a.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L2e5970.  v5:= temp @kind object;
  #L2e5972.  v1[v2]:= v5 @kind object;
  #L2e5976.  v5:= 1I;
  #L2e5978.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L2e597e.  v6:= temp @kind object;
  #L2e5980.  v1[v5]:= v6 @kind object;
  #L2e5984.  v5:= 2I;
  #L2e5986.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L2e598c.  v6:= temp @kind object;
  #L2e598e.  v1[v5]:= v6 @kind object;
  #L2e5992.  v5:= "size=%s offset=%s byteCount=%s" @kind object;
  #L2e5996.  call temp:= `format`(v5, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2e599c.  v5:= temp @kind object;
  #L2e599e.  call `<init>`(v0, v5) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e59a4.  throw v0;
}
procedure `int` `reverseBytesInt`(`int` v2 ) @signature `Lokio/Util;.reverseBytesInt:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2e5800.  v0:= -16777216I;
  #L2e5804.  v0:= v0 ^& v2 @kind int;
  #L2e5806.  v0:= v0 ^>> 24;
  #L2e580a.  v1:= 16711680I;
  #L2e580e.  v1:= v1 ^& v2 @kind int;
  #L2e5810.  v1:= v1 ^>> 8;
  #L2e5814.  v0:= v0 ^| v1 @kind int;
  #L2e5816.  v1:= 65280I;
  #L2e581c.  v1:= v1 ^& v2 @kind int;
  #L2e581e.  v1:= v1 ^< 8;
  #L2e5822.  v0:= v0 ^| v1 @kind int;
  #L2e5824.  v2:= v2 ^& 255;
  #L2e5828.  v2:= v2 ^< 24;
  #L2e582c.  v2:= v2 ^| v0 @kind int;
  #L2e582e.  return v2;
}
procedure `long` `reverseBytesLong`(`long` v8 ) @signature `Lokio/Util;.reverseBytesLong:(J)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2e5840.  v0:= -72057594037927936L;
  #L2e5844.  v0:= v0 ^& v8 @kind long;
  #L2e5846.  v2:= 56I;
  #L2e584a.  v0:= v0 ^>> v2 @kind long;
  #L2e584c.  v3:= 71776119061217280L;
  #L2e5850.  v3:= v3 ^& v8 @kind long;
  #L2e5852.  v5:= 40I;
  #L2e5856.  v3:= v3 ^>> v5 @kind long;
  #L2e5858.  v0:= v0 ^| v3 @kind long;
  #L2e585a.  v3:= 280375465082880L;
  #L2e5864.  v3:= v3 ^& v8 @kind long;
  #L2e5866.  v6:= 24I;
  #L2e586a.  v3:= v3 ^>> v6 @kind long;
  #L2e586c.  v0:= v0 ^| v3 @kind long;
  #L2e586e.  v3:= 1095216660480L;
  #L2e5878.  v3:= v3 ^& v8 @kind long;
  #L2e587a.  v7:= 8I;
  #L2e587e.  v3:= v3 ^>> v7 @kind long;
  #L2e5880.  v0:= v0 ^| v3 @kind long;
  #L2e5882.  v3:= 4278190080L;
  #L2e588c.  v3:= v3 ^& v8 @kind long;
  #L2e588e.  v3:= v3 ^< v7 @kind long;
  #L2e5890.  v0:= v0 ^| v3 @kind long;
  #L2e5892.  v3:= 16711680L;
  #L2e5898.  v3:= v3 ^& v8 @kind long;
  #L2e589a.  v3:= v3 ^< v6 @kind long;
  #L2e589c.  v0:= v0 ^| v3 @kind long;
  #L2e589e.  v3:= 65280L;
  #L2e58a4.  v3:= v3 ^& v8 @kind long;
  #L2e58a6.  v3:= v3 ^< v5 @kind long;
  #L2e58a8.  v0:= v0 ^| v3 @kind long;
  #L2e58aa.  v3:= 255L;
  #L2e58ae.  v8:= v8 ^& v3 @kind long;
  #L2e58b0.  v8:= v8 ^< v2 @kind long;
  #L2e58b2.  v8:= v8 ^| v0 @kind long;
  #L2e58b4.  return v8 @kind wide;
}
procedure `short` `reverseBytesShort`(`short` v1 ) @signature `Lokio/Util;.reverseBytesShort:(S)S` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2e58c8.  v0:= 65535I;
  #L2e58ce.  v1:= v1 ^& v0 @kind int;
  #L2e58d0.  v0:= 65280I;
  #L2e58d6.  v0:= v0 ^& v1 @kind int;
  #L2e58d8.  v0:= v0 ^>> 8;
  #L2e58dc.  v1:= v1 ^& 255;
  #L2e58e0.  v1:= v1 ^< 8;
  #L2e58e4.  v1:= v1 ^| v0 @kind int;
  #L2e58e6.  v1:= (`short`) v1 @kind i2s;
  #L2e58e8.  return v1;
}
procedure `void` `sneakyRethrow`(`java.lang.Throwable` v0 @kind object) @signature `Lokio/Util;.sneakyRethrow:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2e59b8.  call `sneakyThrow2`(v0) @signature `Lokio/Util;.sneakyThrow2:(Ljava/lang/Throwable;)V` @kind static;
  #L2e59be.  return @kind void;
}
procedure `void` `sneakyThrow2`(`java.lang.Throwable` v0 @kind object) @signature `Lokio/Util;.sneakyThrow2:(Ljava/lang/Throwable;)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L2e59d0.  throw v0;
}
