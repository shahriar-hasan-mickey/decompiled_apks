record `dagger.internal.SetBuilder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `dagger.internal.SetBuilder.contributions` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@dagger.internal.SetBuilder.SET_CONTRIBUTIONS_CANNOT_BE_NULL` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`dagger.internal.SetBuilder` v1 @kind this, `int` v2 ) @signature `Ldagger/internal/SetBuilder;.<init>:(I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L2cb75c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2cb762.  v0:= new `java.util.ArrayList`;
  #L2cb766.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L2cb76c.  v1.`dagger.internal.SetBuilder.contributions` @type ^`java.util.List` := v0 @kind object;
  #L2cb770.  return @kind void;
}
procedure `dagger.internal.SetBuilder` `newSetBuilder`(`int` v1 ) @signature `Ldagger/internal/SetBuilder;.newSetBuilder:(I)Ldagger/internal/SetBuilder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2cb6e0.  v0:= new `dagger.internal.SetBuilder`;
  #L2cb6e4.  call `<init>`(v0, v1) @signature `Ldagger/internal/SetBuilder;.<init>:(I)V` @kind direct;
  #L2cb6ea.  return v0 @kind object;
}
procedure `dagger.internal.SetBuilder` `add`(`dagger.internal.SetBuilder` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Ldagger/internal/SetBuilder;.add:(Ljava/lang/Object;)Ldagger/internal/SetBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2cb674.  v0:= v2.`dagger.internal.SetBuilder.contributions` @type ^`java.util.List` @kind object;
  #L2cb678.  v1:= "Set contributions cannot be null" @kind object;
  #L2cb67c.  call temp:= `checkNotNull`(v3, v1) @signature `Ldagger/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2cb682.  v3:= temp @kind object;
  #L2cb684.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2cb68a.  return v2 @kind object;
}
procedure `dagger.internal.SetBuilder` `addAll`(`dagger.internal.SetBuilder` v3 @kind this, `java.util.Collection` v4 @kind object) @signature `Ldagger/internal/SetBuilder;.addAll:(Ljava/util/Collection;)Ldagger/internal/SetBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2cb69c.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2cb6a2.  v0:= temp @kind object;
  #L2cb6a4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2cb6aa.  v1:= temp;
  #L2cb6ac.  if v1 == 0 then goto L2cb6c4;
  #L2cb6b0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2cb6b6.  v1:= temp @kind object;
  #L2cb6b8.  v2:= "Set contributions cannot be null" @kind object;
  #L2cb6bc.  call temp:= `checkNotNull`(v1, v2) @signature `Ldagger/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2cb6c2.  goto L2cb6a4;
  #L2cb6c4.  v0:= v3.`dagger.internal.SetBuilder.contributions` @type ^`java.util.List` @kind object;
  #L2cb6c8.  call temp:= `addAll`(v0, v4) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L2cb6ce.  return v3 @kind object;
}
procedure `java.util.Set` `build`(`dagger.internal.SetBuilder` v2 @kind this) @signature `Ldagger/internal/SetBuilder;.build:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2cb6fc.  v0:= v2.`dagger.internal.SetBuilder.contributions` @type ^`java.util.List` @kind object;
  #L2cb700.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2cb706.  v0:= temp;
  #L2cb708.  if v0 == 0 then goto L2cb742;
  #L2cb70c.  v1:= 1I;
  #L2cb70e.  if v0 == v1 then goto L2cb72a;
  #L2cb712.  v0:= new `java.util.HashSet`;
  #L2cb716.  v1:= v2.`dagger.internal.SetBuilder.contributions` @type ^`java.util.List` @kind object;
  #L2cb71a.  call `<init>`(v0, v1) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L2cb720.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L2cb726.  v0:= temp @kind object;
  #L2cb728.  return v0 @kind object;
  #L2cb72a.  v0:= v2.`dagger.internal.SetBuilder.contributions` @type ^`java.util.List` @kind object;
  #L2cb72e.  v1:= 0I;
  #L2cb730.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2cb736.  v0:= temp @kind object;
  #L2cb738.  call temp:= `singleton`(v0) @signature `Ljava/util/Collections;.singleton:(Ljava/lang/Object;)Ljava/util/Set;` @kind static;
  #L2cb73e.  v0:= temp @kind object;
  #L2cb740.  return v0 @kind object;
  #L2cb742.  call temp:= `emptySet`() @signature `Ljava/util/Collections;.emptySet:()Ljava/util/Set;` @kind static;
  #L2cb748.  v0:= temp @kind object;
  #L2cb74a.  return v0 @kind object;
}
