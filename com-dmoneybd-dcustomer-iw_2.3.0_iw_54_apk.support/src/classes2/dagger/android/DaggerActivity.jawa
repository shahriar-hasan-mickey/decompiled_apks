record `dagger.android.DaggerActivity` @kind class @AccessFlag PUBLIC_ABSTRACT extends `android.app.Activity` @kind class, `dagger.android.HasFragmentInjector` @kind interface {
  `dagger.android.DispatchingAndroidInjector` `dagger.android.DaggerActivity.a` @AccessFlag ;
}
procedure `void` `<init>`(`dagger.android.DaggerActivity` v0 @kind this) @signature `Ldagger/android/DaggerActivity;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2c95a8.  call `<init>`(v0) @signature `Landroid/app/Activity;.<init>:()V` @kind direct;
  #L2c95ae.  return @kind void;
}
procedure `dagger.android.AndroidInjector` `fragmentInjector`(`dagger.android.DaggerActivity` v1 @kind this) @signature `Ldagger/android/DaggerActivity;.fragmentInjector:()Ldagger/android/AndroidInjector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c9590.  v0:= v1.`dagger.android.DaggerActivity.a` @type ^`dagger.android.DispatchingAndroidInjector` @kind object;
  #L2c9594.  return v0 @kind object;
}
procedure `void` `onCreate`(`dagger.android.DaggerActivity` v0 @kind this, `android.os.Bundle` v1 @kind object) @signature `Ldagger/android/DaggerActivity;.onCreate:(Landroid/os/Bundle;)V` @AccessFlag PROTECTED {
    temp;

  #L2c95c0.  call `inject`(v0) @signature `Ldagger/android/AndroidInjection;.inject:(Landroid/app/Activity;)V` @kind static;
  #L2c95c6.  call `onCreate`(v0, v1) @signature `Landroid/app/Activity;.onCreate:(Landroid/os/Bundle;)V` @kind super;
  #L2c95cc.  return @kind void;
}
