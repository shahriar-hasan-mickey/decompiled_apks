record `dagger.android.AndroidInjection` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String` `@@dagger.android.AndroidInjection.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`dagger.android.AndroidInjection` v0 @kind this) @signature `Ldagger/android/AndroidInjection;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2c8f78.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c8f7e.  return @kind void;
}
procedure `dagger.android.HasFragmentInjector` `findHasFragmentInjector`(`android.app.Fragment` v3 @kind object) @signature `Ldagger/android/AndroidInjection;.findHasFragmentInjector:(Landroid/app/Fragment;)Ldagger/android/HasFragmentInjector;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2c8ee0.  v0:= v3 @kind object;
  #L2c8ee2.  call temp:= `getParentFragment`(v0) @signature `Landroid/app/Fragment;.getParentFragment:()Landroid/app/Fragment;` @kind virtual;
  #L2c8ee8.  v0:= temp @kind object;
  #L2c8eea.  if v0 == 0 then goto L2c8efc;
  #L2c8eee.  v1:= instanceof @variable v0 @type ^`dagger.android.HasFragmentInjector` @kind boolean;
  #L2c8ef2.  if v1 == 0 then goto L2c8ee2;
  #L2c8ef6.  v0:= (`dagger.android.HasFragmentInjector`) v0 @kind object;
  #L2c8efa.  return v0 @kind object;
  #L2c8efc.  call temp:= `getActivity`(v3) @signature `Landroid/app/Fragment;.getActivity:()Landroid/app/Activity;` @kind virtual;
  #L2c8f02.  v0:= temp @kind object;
  #L2c8f04.  v1:= instanceof @variable v0 @type ^`dagger.android.HasFragmentInjector` @kind boolean;
  #L2c8f08.  if v1 == 0 then goto L2c8f12;
  #L2c8f0c.  v0:= (`dagger.android.HasFragmentInjector`) v0 @kind object;
  #L2c8f10.  return v0 @kind object;
  #L2c8f12.  call temp:= `getApplication`(v0) @signature `Landroid/app/Activity;.getApplication:()Landroid/app/Application;` @kind virtual;
  #L2c8f18.  v1:= temp @kind object;
  #L2c8f1a.  v1:= instanceof @variable v1 @type ^`dagger.android.HasFragmentInjector` @kind boolean;
  #L2c8f1e.  if v1 == 0 then goto L2c8f30;
  #L2c8f22.  call temp:= `getApplication`(v0) @signature `Landroid/app/Activity;.getApplication:()Landroid/app/Application;` @kind virtual;
  #L2c8f28.  v3:= temp @kind object;
  #L2c8f2a.  v3:= (`dagger.android.HasFragmentInjector`) v3 @kind object;
  #L2c8f2e.  return v3 @kind object;
  #L2c8f30.  v0:= new `java.lang.IllegalArgumentException`;
  #L2c8f34.  v1:= 1I;
  #L2c8f36.  v1:= new `java.lang.Object`[v1];
  #L2c8f3a.  v2:= 0I;
  #L2c8f3c.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2c8f42.  v3:= temp @kind object;
  #L2c8f44.  call temp:= `getCanonicalName`(v3) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L2c8f4a.  v3:= temp @kind object;
  #L2c8f4c.  v1[v2]:= v3 @kind object;
  #L2c8f50.  v3:= "No injector was found for %s" @kind object;
  #L2c8f54.  call temp:= `format`(v3, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2c8f5a.  v3:= temp @kind object;
  #L2c8f5c.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c8f62.  goto L2c8f66;
  #L2c8f64.  throw v0;
  #L2c8f66.  goto L2c8f64;
}
procedure `void` `inject`(`android.app.Activity` v3 @kind object) @signature `Ldagger/android/AndroidInjection;.inject:(Landroid/app/Activity;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2c8f90.  v0:= "activity" @kind object;
  #L2c8f94.  call temp:= `checkNotNull`(v3, v0) @signature `Ldagger/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2c8f9a.  call temp:= `getApplication`(v3) @signature `Landroid/app/Activity;.getApplication:()Landroid/app/Application;` @kind virtual;
  #L2c8fa0.  v0:= temp @kind object;
  #L2c8fa2.  v1:= instanceof @variable v0 @type ^`dagger.android.HasActivityInjector` @kind boolean;
  #L2c8fa6.  if v1 == 0 then goto L2c8fd2;
  #L2c8faa.  v1:= v0 @kind object;
  #L2c8fac.  v1:= (`dagger.android.HasActivityInjector`) v1 @kind object;
  #L2c8fb0.  call temp:= `activityInjector`(v1) @signature `Ldagger/android/HasActivityInjector;.activityInjector:()Ldagger/android/AndroidInjector;` @kind interface;
  #L2c8fb6.  v1:= temp @kind object;
  #L2c8fb8.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2c8fbe.  v0:= temp @kind object;
  #L2c8fc0.  v2:= "%s.activityInjector() returned null" @kind object;
  #L2c8fc4.  call temp:= `checkNotNull`(v1, v2, v0) @signature `Ldagger/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2c8fca.  call `inject`(v1, v3) @signature `Ldagger/android/AndroidInjector;.inject:(Ljava/lang/Object;)V` @kind interface;
  #L2c8fd0.  return @kind void;
  #L2c8fd2.  v3:= new `java.lang.RuntimeException`;
  #L2c8fd6.  v1:= 2I;
  #L2c8fd8.  v1:= new `java.lang.Object`[v1];
  #L2c8fdc.  v2:= 0I;
  #L2c8fde.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2c8fe4.  v0:= temp @kind object;
  #L2c8fe6.  call temp:= `getCanonicalName`(v0) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L2c8fec.  v0:= temp @kind object;
  #L2c8fee.  v1[v2]:= v0 @kind object;
  #L2c8ff2.  v0:= 1I;
  #L2c8ff4.  v2:= constclass @type ^`dagger.android.HasActivityInjector` @kind object;
  #L2c8ff8.  call temp:= `getCanonicalName`(v2) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L2c8ffe.  v2:= temp @kind object;
  #L2c9000.  v1[v0]:= v2 @kind object;
  #L2c9004.  v0:= "%s does not implement %s" @kind object;
  #L2c9008.  call temp:= `format`(v0, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2c900e.  v0:= temp @kind object;
  #L2c9010.  call `<init>`(v3, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c9016.  throw v3;
}
procedure `void` `inject`(`android.app.Fragment` v5 @kind object) @signature `Ldagger/android/AndroidInjection;.inject:(Landroid/app/Fragment;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2c9028.  v0:= "fragment" @kind object;
  #L2c902c.  call temp:= `checkNotNull`(v5, v0) @signature `Ldagger/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2c9032.  call temp:= `findHasFragmentInjector`(v5) @signature `Ldagger/android/AndroidInjection;.findHasFragmentInjector:(Landroid/app/Fragment;)Ldagger/android/HasFragmentInjector;` @kind static;
  #L2c9038.  v0:= temp @kind object;
  #L2c903a.  v1:= "dagger.android" @kind object;
  #L2c903e.  v2:= 3I;
  #L2c9040.  call temp:= `isLoggable`(v1, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L2c9046.  v2:= temp;
  #L2c9048.  if v2 == 0 then goto L2c9090;
  #L2c904c.  v2:= 2I;
  #L2c904e.  v2:= new `java.lang.Object`[v2];
  #L2c9052.  v3:= 0I;
  #L2c9054.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2c905a.  v4:= temp @kind object;
  #L2c905c.  call temp:= `getCanonicalName`(v4) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L2c9062.  v4:= temp @kind object;
  #L2c9064.  v2[v3]:= v4 @kind object;
  #L2c9068.  v3:= 1I;
  #L2c906a.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2c9070.  v4:= temp @kind object;
  #L2c9072.  call temp:= `getCanonicalName`(v4) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L2c9078.  v4:= temp @kind object;
  #L2c907a.  v2[v3]:= v4 @kind object;
  #L2c907e.  v3:= "An injector for %s was found in %s" @kind object;
  #L2c9082.  call temp:= `format`(v3, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2c9088.  v2:= temp @kind object;
  #L2c908a.  call temp:= `d`(v1, v2) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2c9090.  call temp:= `fragmentInjector`(v0) @signature `Ldagger/android/HasFragmentInjector;.fragmentInjector:()Ldagger/android/AndroidInjector;` @kind interface;
  #L2c9096.  v1:= temp @kind object;
  #L2c9098.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2c909e.  v0:= temp @kind object;
  #L2c90a0.  v2:= "%s.fragmentInjector() returned null" @kind object;
  #L2c90a4.  call temp:= `checkNotNull`(v1, v2, v0) @signature `Ldagger/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2c90aa.  call `inject`(v1, v5) @signature `Ldagger/android/AndroidInjector;.inject:(Ljava/lang/Object;)V` @kind interface;
  #L2c90b0.  return @kind void;
}
procedure `void` `inject`(`android.app.Service` v3 @kind object) @signature `Ldagger/android/AndroidInjection;.inject:(Landroid/app/Service;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2c90c4.  v0:= "service" @kind object;
  #L2c90c8.  call temp:= `checkNotNull`(v3, v0) @signature `Ldagger/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2c90ce.  call temp:= `getApplication`(v3) @signature `Landroid/app/Service;.getApplication:()Landroid/app/Application;` @kind virtual;
  #L2c90d4.  v0:= temp @kind object;
  #L2c90d6.  v1:= instanceof @variable v0 @type ^`dagger.android.HasServiceInjector` @kind boolean;
  #L2c90da.  if v1 == 0 then goto L2c9106;
  #L2c90de.  v1:= v0 @kind object;
  #L2c90e0.  v1:= (`dagger.android.HasServiceInjector`) v1 @kind object;
  #L2c90e4.  call temp:= `serviceInjector`(v1) @signature `Ldagger/android/HasServiceInjector;.serviceInjector:()Ldagger/android/AndroidInjector;` @kind interface;
  #L2c90ea.  v1:= temp @kind object;
  #L2c90ec.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2c90f2.  v0:= temp @kind object;
  #L2c90f4.  v2:= "%s.serviceInjector() returned null" @kind object;
  #L2c90f8.  call temp:= `checkNotNull`(v1, v2, v0) @signature `Ldagger/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2c90fe.  call `inject`(v1, v3) @signature `Ldagger/android/AndroidInjector;.inject:(Ljava/lang/Object;)V` @kind interface;
  #L2c9104.  return @kind void;
  #L2c9106.  v3:= new `java.lang.RuntimeException`;
  #L2c910a.  v1:= 2I;
  #L2c910c.  v1:= new `java.lang.Object`[v1];
  #L2c9110.  v2:= 0I;
  #L2c9112.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2c9118.  v0:= temp @kind object;
  #L2c911a.  call temp:= `getCanonicalName`(v0) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L2c9120.  v0:= temp @kind object;
  #L2c9122.  v1[v2]:= v0 @kind object;
  #L2c9126.  v0:= 1I;
  #L2c9128.  v2:= constclass @type ^`dagger.android.HasServiceInjector` @kind object;
  #L2c912c.  call temp:= `getCanonicalName`(v2) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L2c9132.  v2:= temp @kind object;
  #L2c9134.  v1[v0]:= v2 @kind object;
  #L2c9138.  v0:= "%s does not implement %s" @kind object;
  #L2c913c.  call temp:= `format`(v0, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2c9142.  v0:= temp @kind object;
  #L2c9144.  call `<init>`(v3, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c914a.  throw v3;
}
procedure `void` `inject`(`android.content.BroadcastReceiver` v2 @kind object, `android.content.Context` v3 @kind object) @signature `Ldagger/android/AndroidInjection;.inject:(Landroid/content/BroadcastReceiver;Landroid/content/Context;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2c915c.  v0:= "broadcastReceiver" @kind object;
  #L2c9160.  call temp:= `checkNotNull`(v2, v0) @signature `Ldagger/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2c9166.  v0:= "context" @kind object;
  #L2c916a.  call temp:= `checkNotNull`(v3, v0) @signature `Ldagger/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2c9170.  call temp:= `getApplicationContext`(v3) @signature `Landroid/content/Context;.getApplicationContext:()Landroid/content/Context;` @kind virtual;
  #L2c9176.  v3:= temp @kind object;
  #L2c9178.  v3:= (`android.app.Application`) v3 @kind object;
  #L2c917c.  v0:= instanceof @variable v3 @type ^`dagger.android.HasBroadcastReceiverInjector` @kind boolean;
  #L2c9180.  if v0 == 0 then goto L2c91ac;
  #L2c9184.  v0:= v3 @kind object;
  #L2c9186.  v0:= (`dagger.android.HasBroadcastReceiverInjector`) v0 @kind object;
  #L2c918a.  call temp:= `broadcastReceiverInjector`(v0) @signature `Ldagger/android/HasBroadcastReceiverInjector;.broadcastReceiverInjector:()Ldagger/android/AndroidInjector;` @kind interface;
  #L2c9190.  v0:= temp @kind object;
  #L2c9192.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2c9198.  v3:= temp @kind object;
  #L2c919a.  v1:= "%s.broadcastReceiverInjector() returned null" @kind object;
  #L2c919e.  call temp:= `checkNotNull`(v0, v1, v3) @signature `Ldagger/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2c91a4.  call `inject`(v0, v2) @signature `Ldagger/android/AndroidInjector;.inject:(Ljava/lang/Object;)V` @kind interface;
  #L2c91aa.  return @kind void;
  #L2c91ac.  v2:= new `java.lang.RuntimeException`;
  #L2c91b0.  v0:= 2I;
  #L2c91b2.  v0:= new `java.lang.Object`[v0];
  #L2c91b6.  v1:= 0I;
  #L2c91b8.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2c91be.  v3:= temp @kind object;
  #L2c91c0.  call temp:= `getCanonicalName`(v3) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L2c91c6.  v3:= temp @kind object;
  #L2c91c8.  v0[v1]:= v3 @kind object;
  #L2c91cc.  v3:= 1I;
  #L2c91ce.  v1:= constclass @type ^`dagger.android.HasBroadcastReceiverInjector` @kind object;
  #L2c91d2.  call temp:= `getCanonicalName`(v1) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L2c91d8.  v1:= temp @kind object;
  #L2c91da.  v0[v3]:= v1 @kind object;
  #L2c91de.  v3:= "%s does not implement %s" @kind object;
  #L2c91e2.  call temp:= `format`(v3, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2c91e8.  v3:= temp @kind object;
  #L2c91ea.  call `<init>`(v2, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c91f0.  throw v2;
}
procedure `void` `inject`(`android.content.ContentProvider` v3 @kind object) @signature `Ldagger/android/AndroidInjection;.inject:(Landroid/content/ContentProvider;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2c9204.  v0:= "contentProvider" @kind object;
  #L2c9208.  call temp:= `checkNotNull`(v3, v0) @signature `Ldagger/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2c920e.  call temp:= `getContext`(v3) @signature `Landroid/content/ContentProvider;.getContext:()Landroid/content/Context;` @kind virtual;
  #L2c9214.  v0:= temp @kind object;
  #L2c9216.  call temp:= `getApplicationContext`(v0) @signature `Landroid/content/Context;.getApplicationContext:()Landroid/content/Context;` @kind virtual;
  #L2c921c.  v0:= temp @kind object;
  #L2c921e.  v0:= (`android.app.Application`) v0 @kind object;
  #L2c9222.  v1:= instanceof @variable v0 @type ^`dagger.android.HasContentProviderInjector` @kind boolean;
  #L2c9226.  if v1 == 0 then goto L2c9252;
  #L2c922a.  v1:= v0 @kind object;
  #L2c922c.  v1:= (`dagger.android.HasContentProviderInjector`) v1 @kind object;
  #L2c9230.  call temp:= `contentProviderInjector`(v1) @signature `Ldagger/android/HasContentProviderInjector;.contentProviderInjector:()Ldagger/android/AndroidInjector;` @kind interface;
  #L2c9236.  v1:= temp @kind object;
  #L2c9238.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2c923e.  v0:= temp @kind object;
  #L2c9240.  v2:= "%s.contentProviderInjector() returned null" @kind object;
  #L2c9244.  call temp:= `checkNotNull`(v1, v2, v0) @signature `Ldagger/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2c924a.  call `inject`(v1, v3) @signature `Ldagger/android/AndroidInjector;.inject:(Ljava/lang/Object;)V` @kind interface;
  #L2c9250.  return @kind void;
  #L2c9252.  v3:= new `java.lang.RuntimeException`;
  #L2c9256.  v1:= 2I;
  #L2c9258.  v1:= new `java.lang.Object`[v1];
  #L2c925c.  v2:= 0I;
  #L2c925e.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2c9264.  v0:= temp @kind object;
  #L2c9266.  call temp:= `getCanonicalName`(v0) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L2c926c.  v0:= temp @kind object;
  #L2c926e.  v1[v2]:= v0 @kind object;
  #L2c9272.  v0:= 1I;
  #L2c9274.  v2:= constclass @type ^`dagger.android.HasContentProviderInjector` @kind object;
  #L2c9278.  call temp:= `getCanonicalName`(v2) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L2c927e.  v2:= temp @kind object;
  #L2c9280.  v1[v0]:= v2 @kind object;
  #L2c9284.  v0:= "%s does not implement %s" @kind object;
  #L2c9288.  call temp:= `format`(v0, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2c928e.  v0:= temp @kind object;
  #L2c9290.  call `<init>`(v3, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c9296.  throw v3;
}
