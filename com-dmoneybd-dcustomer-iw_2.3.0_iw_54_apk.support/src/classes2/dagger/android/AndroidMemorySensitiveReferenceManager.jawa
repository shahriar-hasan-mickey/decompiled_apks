record `dagger.android.AndroidMemorySensitiveReferenceManager` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Set` `dagger.android.AndroidMemorySensitiveReferenceManager.managers` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`dagger.android.AndroidMemorySensitiveReferenceManager` v0 @kind this, `java.util.Set` v1 @kind object) @signature `Ldagger/android/AndroidMemorySensitiveReferenceManager;.<init>:(Ljava/util/Set;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2c9398.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c939e.  v0.`dagger.android.AndroidMemorySensitiveReferenceManager.managers` @type ^`java.util.Set` := v1 @kind object;
  #L2c93a2.  return @kind void;
}
procedure `void` `onTrimMemory`(`dagger.android.AndroidMemorySensitiveReferenceManager` v3 @kind this, `int` v4 ) @signature `Ldagger/android/AndroidMemorySensitiveReferenceManager;.onTrimMemory:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2c93b4.  v0:= v3.`dagger.android.AndroidMemorySensitiveReferenceManager.managers` @type ^`java.util.Set` @kind object;
  #L2c93b8.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2c93be.  v0:= temp @kind object;
  #L2c93c0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2c93c6.  v1:= temp;
  #L2c93c8.  if v1 == 0 then goto L2c9400;
  #L2c93cc.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2c93d2.  v1:= temp @kind object;
  #L2c93d4.  v1:= (`dagger.releasablereferences.TypedReleasableReferenceManager`) v1 @kind object;
  #L2c93d8.  call temp:= `metadata`(v1) @signature `Ldagger/releasablereferences/TypedReleasableReferenceManager;.metadata:()Ljava/lang/annotation/Annotation;` @kind interface;
  #L2c93de.  v2:= temp @kind object;
  #L2c93e0.  v2:= (`dagger.android.ReleaseReferencesAt`) v2 @kind object;
  #L2c93e4.  call temp:= `value`(v2) @signature `Ldagger/android/ReleaseReferencesAt;.value:()I` @kind interface;
  #L2c93ea.  v2:= temp;
  #L2c93ec.  if v4 < v2 then goto L2c93f8;
  #L2c93f0.  call `releaseStrongReferences`(v1) @signature `Ldagger/releasablereferences/TypedReleasableReferenceManager;.releaseStrongReferences:()V` @kind interface;
  #L2c93f6.  goto L2c93c0;
  #L2c93f8.  call `restoreStrongReferences`(v1) @signature `Ldagger/releasablereferences/TypedReleasableReferenceManager;.restoreStrongReferences:()V` @kind interface;
  #L2c93fe.  goto L2c93c0;
  #L2c9400.  return @kind void;
}
