record `okhttp3.CacheControl$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `okhttp3.CacheControl$Builder.a` @AccessFlag ;
  `boolean` `okhttp3.CacheControl$Builder.b` @AccessFlag ;
  `int` `okhttp3.CacheControl$Builder.c` @AccessFlag ;
  `int` `okhttp3.CacheControl$Builder.d` @AccessFlag ;
  `int` `okhttp3.CacheControl$Builder.e` @AccessFlag ;
  `boolean` `okhttp3.CacheControl$Builder.f` @AccessFlag ;
  `boolean` `okhttp3.CacheControl$Builder.g` @AccessFlag ;
  `boolean` `okhttp3.CacheControl$Builder.h` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.CacheControl$Builder` v1 @kind this) @signature `Lokhttp3/CacheControl$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2cfb0c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2cfb12.  v0:= -1I;
  #L2cfb14.  v1.`okhttp3.CacheControl$Builder.c` @type ^`int` := v0;
  #L2cfb18.  v1.`okhttp3.CacheControl$Builder.d` @type ^`int` := v0;
  #L2cfb1c.  v1.`okhttp3.CacheControl$Builder.e` @type ^`int` := v0;
  #L2cfb20.  return @kind void;
}
procedure `okhttp3.CacheControl` `build`(`okhttp3.CacheControl$Builder` v1 @kind this) @signature `Lokhttp3/CacheControl$Builder;.build:()Lokhttp3/CacheControl;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cf934.  v0:= new `okhttp3.CacheControl`;
  #L2cf938.  call `<init>`(v0, v1) @signature `Lokhttp3/CacheControl;.<init>:(Lokhttp3/CacheControl$Builder;)V` @kind direct;
  #L2cf93e.  return v0 @kind object;
}
procedure `okhttp3.CacheControl$Builder` `immutable`(`okhttp3.CacheControl$Builder` v1 @kind this) @signature `Lokhttp3/CacheControl$Builder;.immutable:()Lokhttp3/CacheControl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cf950.  v0:= 1I;
  #L2cf952.  v1.`okhttp3.CacheControl$Builder.h` @type ^`boolean` := v0 @kind boolean;
  #L2cf956.  return v1 @kind object;
}
procedure `okhttp3.CacheControl$Builder` `maxAge`(`okhttp3.CacheControl$Builder` v3 @kind this, `int` v4 , `java.util.concurrent.TimeUnit` v5 @kind object) @signature `Lokhttp3/CacheControl$Builder;.maxAge:(ILjava/util/concurrent/TimeUnit;)Lokhttp3/CacheControl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2cf968.  if v4 < 0 then goto L2cf994;
  #L2cf96c.  v0:= (`long`) v4 @kind i2l;
  #L2cf96e.  call temp:= `toSeconds`(v5, v0) @signature `Ljava/util/concurrent/TimeUnit;.toSeconds:(J)J` @kind virtual;
  #L2cf974.  v4:= temp @kind wide;
  #L2cf976.  v0:= 2147483647L;
  #L2cf97c.  v2:= lcmp(v4, v0);
  #L2cf980.  if v2 <= 0 then goto L2cf98c;
  #L2cf984.  v4:= 2147483647I;
  #L2cf98a.  goto L2cf98e;
  #L2cf98c.  v4:= (`int`) v4 @kind l2i;
  #L2cf98e.  v3.`okhttp3.CacheControl$Builder.c` @type ^`int` := v4;
  #L2cf992.  return v3 @kind object;
  #L2cf994.  v5:= new `java.lang.IllegalArgumentException`;
  #L2cf998.  v0:= new `java.lang.StringBuilder`;
  #L2cf99c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2cf9a2.  v1:= "maxAge < 0: " @kind object;
  #L2cf9a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cf9ac.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cf9b2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2cf9b8.  v4:= temp @kind object;
  #L2cf9ba.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2cf9c0.  throw v5;
}
procedure `okhttp3.CacheControl$Builder` `maxStale`(`okhttp3.CacheControl$Builder` v3 @kind this, `int` v4 , `java.util.concurrent.TimeUnit` v5 @kind object) @signature `Lokhttp3/CacheControl$Builder;.maxStale:(ILjava/util/concurrent/TimeUnit;)Lokhttp3/CacheControl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2cf9d4.  if v4 < 0 then goto L2cfa00;
  #L2cf9d8.  v0:= (`long`) v4 @kind i2l;
  #L2cf9da.  call temp:= `toSeconds`(v5, v0) @signature `Ljava/util/concurrent/TimeUnit;.toSeconds:(J)J` @kind virtual;
  #L2cf9e0.  v4:= temp @kind wide;
  #L2cf9e2.  v0:= 2147483647L;
  #L2cf9e8.  v2:= lcmp(v4, v0);
  #L2cf9ec.  if v2 <= 0 then goto L2cf9f8;
  #L2cf9f0.  v4:= 2147483647I;
  #L2cf9f6.  goto L2cf9fa;
  #L2cf9f8.  v4:= (`int`) v4 @kind l2i;
  #L2cf9fa.  v3.`okhttp3.CacheControl$Builder.d` @type ^`int` := v4;
  #L2cf9fe.  return v3 @kind object;
  #L2cfa00.  v5:= new `java.lang.IllegalArgumentException`;
  #L2cfa04.  v0:= new `java.lang.StringBuilder`;
  #L2cfa08.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2cfa0e.  v1:= "maxStale < 0: " @kind object;
  #L2cfa12.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cfa18.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cfa1e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2cfa24.  v4:= temp @kind object;
  #L2cfa26.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2cfa2c.  throw v5;
}
procedure `okhttp3.CacheControl$Builder` `minFresh`(`okhttp3.CacheControl$Builder` v3 @kind this, `int` v4 , `java.util.concurrent.TimeUnit` v5 @kind object) @signature `Lokhttp3/CacheControl$Builder;.minFresh:(ILjava/util/concurrent/TimeUnit;)Lokhttp3/CacheControl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2cfa40.  if v4 < 0 then goto L2cfa6c;
  #L2cfa44.  v0:= (`long`) v4 @kind i2l;
  #L2cfa46.  call temp:= `toSeconds`(v5, v0) @signature `Ljava/util/concurrent/TimeUnit;.toSeconds:(J)J` @kind virtual;
  #L2cfa4c.  v4:= temp @kind wide;
  #L2cfa4e.  v0:= 2147483647L;
  #L2cfa54.  v2:= lcmp(v4, v0);
  #L2cfa58.  if v2 <= 0 then goto L2cfa64;
  #L2cfa5c.  v4:= 2147483647I;
  #L2cfa62.  goto L2cfa66;
  #L2cfa64.  v4:= (`int`) v4 @kind l2i;
  #L2cfa66.  v3.`okhttp3.CacheControl$Builder.e` @type ^`int` := v4;
  #L2cfa6a.  return v3 @kind object;
  #L2cfa6c.  v5:= new `java.lang.IllegalArgumentException`;
  #L2cfa70.  v0:= new `java.lang.StringBuilder`;
  #L2cfa74.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2cfa7a.  v1:= "minFresh < 0: " @kind object;
  #L2cfa7e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cfa84.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2cfa8a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2cfa90.  v4:= temp @kind object;
  #L2cfa92.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2cfa98.  throw v5;
}
procedure `okhttp3.CacheControl$Builder` `noCache`(`okhttp3.CacheControl$Builder` v1 @kind this) @signature `Lokhttp3/CacheControl$Builder;.noCache:()Lokhttp3/CacheControl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cfaac.  v0:= 1I;
  #L2cfaae.  v1.`okhttp3.CacheControl$Builder.a` @type ^`boolean` := v0 @kind boolean;
  #L2cfab2.  return v1 @kind object;
}
procedure `okhttp3.CacheControl$Builder` `noStore`(`okhttp3.CacheControl$Builder` v1 @kind this) @signature `Lokhttp3/CacheControl$Builder;.noStore:()Lokhttp3/CacheControl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cfac4.  v0:= 1I;
  #L2cfac6.  v1.`okhttp3.CacheControl$Builder.b` @type ^`boolean` := v0 @kind boolean;
  #L2cfaca.  return v1 @kind object;
}
procedure `okhttp3.CacheControl$Builder` `noTransform`(`okhttp3.CacheControl$Builder` v1 @kind this) @signature `Lokhttp3/CacheControl$Builder;.noTransform:()Lokhttp3/CacheControl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cfadc.  v0:= 1I;
  #L2cfade.  v1.`okhttp3.CacheControl$Builder.g` @type ^`boolean` := v0 @kind boolean;
  #L2cfae2.  return v1 @kind object;
}
procedure `okhttp3.CacheControl$Builder` `onlyIfCached`(`okhttp3.CacheControl$Builder` v1 @kind this) @signature `Lokhttp3/CacheControl$Builder;.onlyIfCached:()Lokhttp3/CacheControl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cfaf4.  v0:= 1I;
  #L2cfaf6.  v1.`okhttp3.CacheControl$Builder.f` @type ^`boolean` := v0 @kind boolean;
  #L2cfafa.  return v1 @kind object;
}
