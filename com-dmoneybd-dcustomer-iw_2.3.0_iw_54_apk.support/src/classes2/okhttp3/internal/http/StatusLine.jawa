record `okhttp3.internal.http.StatusLine` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `okhttp3.internal.http.StatusLine.code` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `okhttp3.internal.http.StatusLine.message` @AccessFlag PUBLIC_FINAL;
  `okhttp3.Protocol` `okhttp3.internal.http.StatusLine.protocol` @AccessFlag PUBLIC_FINAL;
}
global `int` `@@okhttp3.internal.http.StatusLine.HTTP_CONTINUE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http.StatusLine.HTTP_PERM_REDIRECT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@okhttp3.internal.http.StatusLine.HTTP_TEMP_REDIRECT` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`okhttp3.internal.http.StatusLine` v0 @kind this, `okhttp3.Protocol` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lokhttp3/internal/http/StatusLine;.<init>:(Lokhttp3/Protocol;ILjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2d6f4c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d6f52.  v0.`okhttp3.internal.http.StatusLine.protocol` @type ^`okhttp3.Protocol` := v1 @kind object;
  #L2d6f56.  v0.`okhttp3.internal.http.StatusLine.code` @type ^`int` := v2;
  #L2d6f5a.  v0.`okhttp3.internal.http.StatusLine.message` @type ^`java.lang.String` := v3 @kind object;
  #L2d6f5e.  return @kind void;
}
procedure `okhttp3.internal.http.StatusLine` `get`(`okhttp3.Response` v3 @kind object) @signature `Lokhttp3/internal/http/StatusLine;.get:(Lokhttp3/Response;)Lokhttp3/internal/http/StatusLine;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2d6d34.  v0:= new `okhttp3.internal.http.StatusLine`;
  #L2d6d38.  call temp:= `protocol`(v3) @signature `Lokhttp3/Response;.protocol:()Lokhttp3/Protocol;` @kind virtual;
  #L2d6d3e.  v1:= temp @kind object;
  #L2d6d40.  call temp:= `code`(v3) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L2d6d46.  v2:= temp;
  #L2d6d48.  call temp:= `message`(v3) @signature `Lokhttp3/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L2d6d4e.  v3:= temp @kind object;
  #L2d6d50.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/internal/http/StatusLine;.<init>:(Lokhttp3/Protocol;ILjava/lang/String;)V` @kind direct;
  #L2d6d56.  return v0 @kind object;
}
procedure `okhttp3.internal.http.StatusLine` `parse`(`java.lang.String` v8 @kind object) @signature `Lokhttp3/internal/http/StatusLine;.parse:(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2d6d68.  v0:= "HTTP/1." @kind object;
  #L2d6d6c.  call temp:= `startsWith`(v8, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L2d6d72.  v0:= temp;
  #L2d6d74.  v1:= 32I;
  #L2d6d78.  v2:= 4I;
  #L2d6d7a.  v3:= 9I;
  #L2d6d7e.  v4:= "Unexpected status line: " @kind object;
  #L2d6d82.  if v0 == 0 then goto L2d6e1a;
  #L2d6d86.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2d6d8c.  v0:= temp;
  #L2d6d8e.  if v0 < v3 then goto L2d6df0;
  #L2d6d92.  v0:= 8I;
  #L2d6d96.  call temp:= `charAt`(v8, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2d6d9c.  v0:= temp;
  #L2d6d9e.  if v0 != v1 then goto L2d6df0;
  #L2d6da2.  v0:= 7I;
  #L2d6da4.  call temp:= `charAt`(v8, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2d6daa.  v0:= temp;
  #L2d6dac.  v0:= v0 + -48;
  #L2d6db0.  if v0 != 0 then goto L2d6dba;
  #L2d6db4.  v0:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L2d6db8.  goto L2d6e30;
  #L2d6dba.  v5:= 1I;
  #L2d6dbc.  if v0 != v5 then goto L2d6dc6;
  #L2d6dc0.  v0:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L2d6dc4.  goto L2d6e30;
  #L2d6dc6.  v0:= new `java.net.ProtocolException`;
  #L2d6dca.  v1:= new `java.lang.StringBuilder`;
  #L2d6dce.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d6dd4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d6dda.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d6de0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d6de6.  v8:= temp @kind object;
  #L2d6de8.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d6dee.  throw v0;
  #L2d6df0.  v0:= new `java.net.ProtocolException`;
  #L2d6df4.  v1:= new `java.lang.StringBuilder`;
  #L2d6df8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d6dfe.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d6e04.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d6e0a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d6e10.  v8:= temp @kind object;
  #L2d6e12.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d6e18.  throw v0;
  #L2d6e1a.  v0:= "ICY " @kind object;
  #L2d6e1e.  call temp:= `startsWith`(v8, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L2d6e24.  v0:= temp;
  #L2d6e26.  if v0 == 0 then goto L2d6f02;
  #L2d6e2a.  v0:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L2d6e2e.  v3:= 4I;
  #L2d6e30.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2d6e36.  v5:= temp;
  #L2d6e38.  v6:= v3 + 3;
  #L2d6e3c.  if v5 < v6 then goto L2d6ed8;
  #L2d6e40.  call temp:= `substring`(v8, v3, v6) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L2d6e46.  v5:= temp @kind object;
  #L2d6e48.  call temp:= `parseInt`(v5) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L2d6e4e.  v5:= temp;
  #L2d6e50.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2d6e56.  v7:= temp;
  #L2d6e58.  if v7 <= v6 then goto L2d6e9e;
  #L2d6e5c.  call temp:= `charAt`(v8, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2d6e62.  v6:= temp;
  #L2d6e64.  if v6 != v1 then goto L2d6e74;
  #L2d6e68.  v3:= v3 + v2 @kind int;
  #L2d6e6a.  call temp:= `substring`(v8, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L2d6e70.  v8:= temp @kind object;
  #L2d6e72.  goto L2d6ea2;
  #L2d6e74.  v0:= new `java.net.ProtocolException`;
  #L2d6e78.  v1:= new `java.lang.StringBuilder`;
  #L2d6e7c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d6e82.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d6e88.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d6e8e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d6e94.  v8:= temp @kind object;
  #L2d6e96.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d6e9c.  throw v0;
  #L2d6e9e.  v8:= "" @kind object;
  #L2d6ea2.  v1:= new `okhttp3.internal.http.StatusLine`;
  #L2d6ea6.  call `<init>`(v1, v0, v5, v8) @signature `Lokhttp3/internal/http/StatusLine;.<init>:(Lokhttp3/Protocol;ILjava/lang/String;)V` @kind direct;
  #L2d6eac.  return v1 @kind object;
  #L2d6eae.  v0:= new `java.net.ProtocolException`;
  #L2d6eb2.  v1:= new `java.lang.StringBuilder`;
  #L2d6eb6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d6ebc.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d6ec2.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d6ec8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d6ece.  v8:= temp @kind object;
  #L2d6ed0.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d6ed6.  throw v0;
  #L2d6ed8.  v0:= new `java.net.ProtocolException`;
  #L2d6edc.  v1:= new `java.lang.StringBuilder`;
  #L2d6ee0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d6ee6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d6eec.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d6ef2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d6ef8.  v8:= temp @kind object;
  #L2d6efa.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d6f00.  throw v0;
  #L2d6f02.  v0:= new `java.net.ProtocolException`;
  #L2d6f06.  v1:= new `java.lang.StringBuilder`;
  #L2d6f0a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d6f10.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d6f16.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d6f1c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d6f22.  v8:= temp @kind object;
  #L2d6f24.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d6f2a.  throw v0;
  catch `java.lang.NumberFormatException` @[L2d6e40..L2d6e50] goto L2d6eae;
}
procedure `java.lang.String` `toString`(`okhttp3.internal.http.StatusLine` v3 @kind this) @signature `Lokhttp3/internal/http/StatusLine;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2d6cc8.  v0:= new `java.lang.StringBuilder`;
  #L2d6ccc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d6cd2.  v1:= v3.`okhttp3.internal.http.StatusLine.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L2d6cd6.  v2:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L2d6cda.  if v1 != v2 then goto L2d6ce4;
  #L2d6cde.  v1:= "HTTP/1.0" @kind object;
  #L2d6ce2.  goto L2d6ce8;
  #L2d6ce4.  v1:= "HTTP/1.1" @kind object;
  #L2d6ce8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d6cee.  v1:= 32I;
  #L2d6cf2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d6cf8.  v2:= v3.`okhttp3.internal.http.StatusLine.code` @type ^`int`;
  #L2d6cfc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d6d02.  v2:= v3.`okhttp3.internal.http.StatusLine.message` @type ^`java.lang.String` @kind object;
  #L2d6d06.  if v2 == 0 then goto L2d6d1a;
  #L2d6d0a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d6d10.  v1:= v3.`okhttp3.internal.http.StatusLine.message` @type ^`java.lang.String` @kind object;
  #L2d6d14.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d6d1a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d6d20.  v0:= temp @kind object;
  #L2d6d22.  return v0 @kind object;
}
