record `okhttp3.internal.http.HttpDate` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.text.DateFormat`[] `@@okhttp3.internal.http.HttpDate.BROWSER_COMPATIBLE_DATE_FORMATS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.http.HttpDate.BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@okhttp3.internal.http.HttpDate.MAX_DATE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.ThreadLocal` `@@okhttp3.internal.http.HttpDate.STANDARD_DATE_FORMAT` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http/HttpDate;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2d5438.  v0:= new `okhttp3.internal.http.HttpDate$1`;
  #L2d543c.  call `<init>`(v0) @signature `Lokhttp3/internal/http/HttpDate$1;.<init>:()V` @kind direct;
  #L2d5442.  `@@okhttp3.internal.http.HttpDate.STANDARD_DATE_FORMAT` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L2d5446.  v0:= 15I;
  #L2d544a.  v0:= new `java.lang.String`[v0];
  #L2d544e.  v1:= 0I;
  #L2d5450.  v2:= "EEE, dd MMM yyyy HH:mm:ss zzz" @kind object;
  #L2d5454.  v0[v1]:= v2 @kind object;
  #L2d5458.  v1:= 1I;
  #L2d545a.  v2:= "EEEE, dd-MMM-yy HH:mm:ss zzz" @kind object;
  #L2d545e.  v0[v1]:= v2 @kind object;
  #L2d5462.  v1:= 2I;
  #L2d5464.  v2:= "EEE MMM d HH:mm:ss yyyy" @kind object;
  #L2d5468.  v0[v1]:= v2 @kind object;
  #L2d546c.  v1:= 3I;
  #L2d546e.  v2:= "EEE, dd-MMM-yyyy HH:mm:ss z" @kind object;
  #L2d5472.  v0[v1]:= v2 @kind object;
  #L2d5476.  v1:= 4I;
  #L2d5478.  v2:= "EEE, dd-MMM-yyyy HH-mm-ss z" @kind object;
  #L2d547c.  v0[v1]:= v2 @kind object;
  #L2d5480.  v1:= 5I;
  #L2d5482.  v2:= "EEE, dd MMM yy HH:mm:ss z" @kind object;
  #L2d5486.  v0[v1]:= v2 @kind object;
  #L2d548a.  v1:= 6I;
  #L2d548c.  v2:= "EEE dd-MMM-yyyy HH:mm:ss z" @kind object;
  #L2d5490.  v0[v1]:= v2 @kind object;
  #L2d5494.  v1:= 7I;
  #L2d5496.  v2:= "EEE dd MMM yyyy HH:mm:ss z" @kind object;
  #L2d549a.  v0[v1]:= v2 @kind object;
  #L2d549e.  v1:= 8I;
  #L2d54a2.  v2:= "EEE dd-MMM-yyyy HH-mm-ss z" @kind object;
  #L2d54a6.  v0[v1]:= v2 @kind object;
  #L2d54aa.  v1:= 9I;
  #L2d54ae.  v2:= "EEE dd-MMM-yy HH:mm:ss z" @kind object;
  #L2d54b2.  v0[v1]:= v2 @kind object;
  #L2d54b6.  v1:= 10I;
  #L2d54ba.  v2:= "EEE dd MMM yy HH:mm:ss z" @kind object;
  #L2d54be.  v0[v1]:= v2 @kind object;
  #L2d54c2.  v1:= 11I;
  #L2d54c6.  v2:= "EEE,dd-MMM-yy HH:mm:ss z" @kind object;
  #L2d54ca.  v0[v1]:= v2 @kind object;
  #L2d54ce.  v1:= 12I;
  #L2d54d2.  v2:= "EEE,dd-MMM-yyyy HH:mm:ss z" @kind object;
  #L2d54d6.  v0[v1]:= v2 @kind object;
  #L2d54da.  v1:= 13I;
  #L2d54de.  v2:= "EEE, dd-MM-yyyy HH:mm:ss z" @kind object;
  #L2d54e2.  v0[v1]:= v2 @kind object;
  #L2d54e6.  v1:= 14I;
  #L2d54ea.  v2:= "EEE MMM d yyyy HH:mm:ss z" @kind object;
  #L2d54ee.  v0[v1]:= v2 @kind object;
  #L2d54f2.  `@@okhttp3.internal.http.HttpDate.BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS` @type ^`java.lang.String`[] := v0 @kind object;
  #L2d54f6.  v0:= length @variable v0;
  #L2d54f8.  v0:= new `java.text.DateFormat`[v0];
  #L2d54fc.  `@@okhttp3.internal.http.HttpDate.BROWSER_COMPATIBLE_DATE_FORMATS` @type ^`java.text.DateFormat`[] := v0 @kind object;
  #L2d5500.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http.HttpDate` v0 @kind this) @signature `Lokhttp3/internal/http/HttpDate;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2d5514.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d551a.  return @kind void;
}
procedure `java.lang.String` `format`(`java.util.Date` v1 @kind object) @signature `Lokhttp3/internal/http/HttpDate;.format:(Ljava/util/Date;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2d5334.  v0:= `@@okhttp3.internal.http.HttpDate.STANDARD_DATE_FORMAT` @type ^`java.lang.ThreadLocal` @kind object;
  #L2d5338.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L2d533e.  v0:= temp @kind object;
  #L2d5340.  v0:= (`java.text.DateFormat`) v0 @kind object;
  #L2d5344.  call temp:= `format`(v0, v1) @signature `Ljava/text/DateFormat;.format:(Ljava/util/Date;)Ljava/lang/String;` @kind virtual;
  #L2d534a.  v1:= temp @kind object;
  #L2d534c.  return v1 @kind object;
}
procedure `java.util.Date` `parse`(`java.lang.String` v10 @kind object) @signature `Lokhttp3/internal/http/HttpDate;.parse:(Ljava/lang/String;)Ljava/util/Date;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2d5360.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2d5366.  v0:= temp;
  #L2d5368.  v1:= 0I;
  #L2d536a.  if v0 != 0 then goto L2d5370;
  #L2d536e.  return v1 @kind object;
  #L2d5370.  v0:= new `java.text.ParsePosition`;
  #L2d5374.  v2:= 0I;
  #L2d5376.  call `<init>`(v0, v2) @signature `Ljava/text/ParsePosition;.<init>:(I)V` @kind direct;
  #L2d537c.  v3:= `@@okhttp3.internal.http.HttpDate.STANDARD_DATE_FORMAT` @type ^`java.lang.ThreadLocal` @kind object;
  #L2d5380.  call temp:= `get`(v3) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L2d5386.  v3:= temp @kind object;
  #L2d5388.  v3:= (`java.text.DateFormat`) v3 @kind object;
  #L2d538c.  call temp:= `parse`(v3, v10, v0) @signature `Ljava/text/DateFormat;.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;` @kind virtual;
  #L2d5392.  v3:= temp @kind object;
  #L2d5394.  call temp:= `getIndex`(v0) @signature `Ljava/text/ParsePosition;.getIndex:()I` @kind virtual;
  #L2d539a.  v4:= temp;
  #L2d539c.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2d53a2.  v5:= temp;
  #L2d53a4.  if v4 != v5 then goto L2d53aa;
  #L2d53a8.  return v3 @kind object;
  #L2d53aa.  v3:= `@@okhttp3.internal.http.HttpDate.BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS` @type ^`java.lang.String`[] @kind object;
  #L2d53ae.  @monitorenter v3
  #L2d53b0.  v4:= length @variable v3;
  #L2d53b2.  v5:= 0I;
  #L2d53b4.  if v5 >= v4 then goto L2d540c;
  #L2d53b8.  v6:= `@@okhttp3.internal.http.HttpDate.BROWSER_COMPATIBLE_DATE_FORMATS` @type ^`java.text.DateFormat`[] @kind object;
  #L2d53bc.  v7:= v6[v5] @kind object;
  #L2d53c0.  if v7 != 0 then goto L2d53e8;
  #L2d53c4.  v7:= new `java.text.SimpleDateFormat`;
  #L2d53c8.  v8:= `@@okhttp3.internal.http.HttpDate.BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS` @type ^`java.lang.String`[] @kind object;
  #L2d53cc.  v8:= v8[v5] @kind object;
  #L2d53d0.  v9:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L2d53d4.  call `<init>`(v7, v8, v9) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V` @kind direct;
  #L2d53da.  v8:= `@@okhttp3.internal.Util.UTC` @type ^`java.util.TimeZone` @kind object;
  #L2d53de.  call `setTimeZone`(v7, v8) @signature `Ljava/text/DateFormat;.setTimeZone:(Ljava/util/TimeZone;)V` @kind virtual;
  #L2d53e4.  v6[v5]:= v7 @kind object;
  #L2d53e8.  call `setIndex`(v0, v2) @signature `Ljava/text/ParsePosition;.setIndex:(I)V` @kind virtual;
  #L2d53ee.  call temp:= `parse`(v7, v10, v0) @signature `Ljava/text/DateFormat;.parse:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;` @kind virtual;
  #L2d53f4.  v6:= temp @kind object;
  #L2d53f6.  call temp:= `getIndex`(v0) @signature `Ljava/text/ParsePosition;.getIndex:()I` @kind virtual;
  #L2d53fc.  v7:= temp;
  #L2d53fe.  if v7 == 0 then goto L2d5406;
  #L2d5402.  @monitorexit v3
  #L2d5404.  return v6 @kind object;
  #L2d5406.  v5:= v5 + 1;
  #L2d540a.  goto L2d53b4;
  #L2d540c.  @monitorexit v3
  #L2d540e.  return v1 @kind object;
  #L2d5410.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2d5412.  @monitorexit v3
  #L2d5414.  goto L2d5418;
  #L2d5416.  throw v10;
  #L2d5418.  goto L2d5416;
  catch `java.lang.Throwable` @[L2d53b0..L2d5414] goto L2d5410;
}
