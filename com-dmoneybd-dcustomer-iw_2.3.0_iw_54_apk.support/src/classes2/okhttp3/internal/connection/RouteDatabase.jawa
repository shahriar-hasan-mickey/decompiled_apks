record `okhttp3.internal.connection.RouteDatabase` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Set` `okhttp3.internal.connection.RouteDatabase.failedRoutes` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this) @signature `Lokhttp3/internal/connection/RouteDatabase;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2d3b0c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d3b12.  v0:= new `java.util.LinkedHashSet`;
  #L2d3b16.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L2d3b1c.  v1.`okhttp3.internal.connection.RouteDatabase.failedRoutes` @type ^`java.util.Set` := v0 @kind object;
  #L2d3b20.  return @kind void;
}
procedure `void` `connected`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this, `okhttp3.Route` v2 @kind object) @signature `Lokhttp3/internal/connection/RouteDatabase;.connected:(Lokhttp3/Route;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d3b34.  @monitorenter v1
  #L2d3b36.  v0:= v1.`okhttp3.internal.connection.RouteDatabase.failedRoutes` @type ^`java.util.Set` @kind object;
  #L2d3b3a.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L2d3b40.  @monitorexit v1
  #L2d3b42.  return @kind void;
  #L2d3b44.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2d3b46.  @monitorexit v1
  #L2d3b48.  throw v2;
  catch `java.lang.Throwable` @[L2d3b36..L2d3b40] goto L2d3b44;
}
procedure `void` `failed`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this, `okhttp3.Route` v2 @kind object) @signature `Lokhttp3/internal/connection/RouteDatabase;.failed:(Lokhttp3/Route;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d3b68.  @monitorenter v1
  #L2d3b6a.  v0:= v1.`okhttp3.internal.connection.RouteDatabase.failedRoutes` @type ^`java.util.Set` @kind object;
  #L2d3b6e.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2d3b74.  @monitorexit v1
  #L2d3b76.  return @kind void;
  #L2d3b78.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2d3b7a.  @monitorexit v1
  #L2d3b7c.  throw v2;
  catch `java.lang.Throwable` @[L2d3b6a..L2d3b74] goto L2d3b78;
}
procedure `boolean` `shouldPostpone`(`okhttp3.internal.connection.RouteDatabase` v1 @kind this, `okhttp3.Route` v2 @kind object) @signature `Lokhttp3/internal/connection/RouteDatabase;.shouldPostpone:(Lokhttp3/Route;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d3ad8.  @monitorenter v1
  #L2d3ada.  v0:= v1.`okhttp3.internal.connection.RouteDatabase.failedRoutes` @type ^`java.util.Set` @kind object;
  #L2d3ade.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L2d3ae4.  v2:= temp;
  #L2d3ae6.  @monitorexit v1
  #L2d3ae8.  return v2;
  #L2d3aea.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2d3aec.  @monitorexit v1
  #L2d3aee.  throw v2;
  catch `java.lang.Throwable` @[L2d3ada..L2d3ae6] goto L2d3aea;
}
