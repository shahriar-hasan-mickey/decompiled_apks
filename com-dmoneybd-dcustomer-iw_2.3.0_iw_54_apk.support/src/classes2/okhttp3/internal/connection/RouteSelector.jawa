record `okhttp3.internal.connection.RouteSelector` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.Address` `okhttp3.internal.connection.RouteSelector.address` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Call` `okhttp3.internal.connection.RouteSelector.call` @AccessFlag PRIVATE_FINAL;
  `okhttp3.EventListener` `okhttp3.internal.connection.RouteSelector.eventListener` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.RouteSelector.nextProxyIndex` @AccessFlag PRIVATE;
  `java.util.List` `okhttp3.internal.connection.RouteSelector.postponedRoutes` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.internal.connection.RouteSelector.proxies` @AccessFlag PRIVATE;
  `okhttp3.internal.connection.RouteDatabase` `okhttp3.internal.connection.RouteSelector.routeDatabase` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.RouteSelector` v1 @kind this, `okhttp3.Address` v2 @kind object, `okhttp3.internal.connection.RouteDatabase` v3 @kind object, `okhttp3.Call` v4 @kind object, `okhttp3.EventListener` v5 @kind object) @signature `Lokhttp3/internal/connection/RouteSelector;.<init>:(Lokhttp3/Address;Lokhttp3/internal/connection/RouteDatabase;Lokhttp3/Call;Lokhttp3/EventListener;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2d3ecc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d3ed2.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L2d3ed8.  v0:= temp @kind object;
  #L2d3eda.  v1.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` := v0 @kind object;
  #L2d3ede.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L2d3ee4.  v0:= temp @kind object;
  #L2d3ee6.  v1.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` := v0 @kind object;
  #L2d3eea.  v0:= new `java.util.ArrayList`;
  #L2d3eee.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2d3ef4.  v1.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` := v0 @kind object;
  #L2d3ef8.  v1.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` := v2 @kind object;
  #L2d3efc.  v1.`okhttp3.internal.connection.RouteSelector.routeDatabase` @type ^`okhttp3.internal.connection.RouteDatabase` := v3 @kind object;
  #L2d3f00.  v1.`okhttp3.internal.connection.RouteSelector.call` @type ^`okhttp3.Call` := v4 @kind object;
  #L2d3f04.  v1.`okhttp3.internal.connection.RouteSelector.eventListener` @type ^`okhttp3.EventListener` := v5 @kind object;
  #L2d3f08.  call temp:= `url`(v2) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L2d3f0e.  v3:= temp @kind object;
  #L2d3f10.  call temp:= `proxy`(v2) @signature `Lokhttp3/Address;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L2d3f16.  v2:= temp @kind object;
  #L2d3f18.  call `resetNextProxy`(v1, v3, v2) @signature `Lokhttp3/internal/connection/RouteSelector;.resetNextProxy:(Lokhttp3/HttpUrl;Ljava/net/Proxy;)V` @kind direct;
  #L2d3f1e.  return @kind void;
}
procedure `java.lang.String` `a`(`java.net.InetSocketAddress` v1 @kind object) @signature `Lokhttp3/internal/connection/RouteSelector;.a:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;

  #L2d3d28.  call temp:= `getAddress`(v1) @signature `Ljava/net/InetSocketAddress;.getAddress:()Ljava/net/InetAddress;` @kind virtual;
  #L2d3d2e.  v0:= temp @kind object;
  #L2d3d30.  if v0 != 0 then goto L2d3d3e;
  #L2d3d34.  call temp:= `getHostName`(v1) @signature `Ljava/net/InetSocketAddress;.getHostName:()Ljava/lang/String;` @kind virtual;
  #L2d3d3a.  v1:= temp @kind object;
  #L2d3d3c.  return v1 @kind object;
  #L2d3d3e.  call temp:= `getHostAddress`(v0) @signature `Ljava/net/InetAddress;.getHostAddress:()Ljava/lang/String;` @kind virtual;
  #L2d3d44.  v1:= temp @kind object;
  #L2d3d46.  return v1 @kind object;
}
procedure `boolean` `hasNextProxy`(`okhttp3.internal.connection.RouteSelector` v2 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNextProxy:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2d3cfc.  v0:= v2.`okhttp3.internal.connection.RouteSelector.nextProxyIndex` @type ^`int`;
  #L2d3d00.  v1:= v2.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` @kind object;
  #L2d3d04.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2d3d0a.  v1:= temp;
  #L2d3d0c.  if v0 >= v1 then goto L2d3d14;
  #L2d3d10.  v0:= 1I;
  #L2d3d12.  goto L2d3d16;
  #L2d3d14.  v0:= 0I;
  #L2d3d16.  return v0;
}
procedure `java.net.Proxy` `nextProxy`(`okhttp3.internal.connection.RouteSelector` v3 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.nextProxy:()Ljava/net/Proxy;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2d3d58.  call temp:= `hasNextProxy`(v3) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNextProxy:()Z` @kind direct;
  #L2d3d5e.  v0:= temp;
  #L2d3d60.  if v0 == 0 then goto L2d3d88;
  #L2d3d64.  v0:= v3.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` @kind object;
  #L2d3d68.  v1:= v3.`okhttp3.internal.connection.RouteSelector.nextProxyIndex` @type ^`int`;
  #L2d3d6c.  v2:= v1 + 1;
  #L2d3d70.  v3.`okhttp3.internal.connection.RouteSelector.nextProxyIndex` @type ^`int` := v2;
  #L2d3d74.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2d3d7a.  v0:= temp @kind object;
  #L2d3d7c.  v0:= (`java.net.Proxy`) v0 @kind object;
  #L2d3d80.  call `resetNextInetSocketAddress`(v3, v0) @signature `Lokhttp3/internal/connection/RouteSelector;.resetNextInetSocketAddress:(Ljava/net/Proxy;)V` @kind direct;
  #L2d3d86.  return v0 @kind object;
  #L2d3d88.  v0:= new `java.net.SocketException`;
  #L2d3d8c.  v1:= new `java.lang.StringBuilder`;
  #L2d3d90.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d3d96.  v2:= "No route to " @kind object;
  #L2d3d9a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d3da0.  v2:= v3.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L2d3da4.  call temp:= `url`(v2) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L2d3daa.  v2:= temp @kind object;
  #L2d3dac.  call temp:= `host`(v2) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L2d3db2.  v2:= temp @kind object;
  #L2d3db4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d3dba.  v2:= "; exhausted proxy configurations: " @kind object;
  #L2d3dbe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d3dc4.  v2:= v3.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` @kind object;
  #L2d3dc8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d3dce.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d3dd4.  v1:= temp @kind object;
  #L2d3dd6.  call `<init>`(v0, v1) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d3ddc.  throw v0;
}
procedure `void` `resetNextInetSocketAddress`(`okhttp3.internal.connection.RouteSelector` v6 @kind this, `java.net.Proxy` v7 @kind object) @signature `Lokhttp3/internal/connection/RouteSelector;.resetNextInetSocketAddress:(Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2d3fac.  v0:= new `java.util.ArrayList`;
  #L2d3fb0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2d3fb6.  v6.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` := v0 @kind object;
  #L2d3fba.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L2d3fc0.  v0:= temp @kind object;
  #L2d3fc2.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L2d3fc6.  if v0 == v1 then goto L2d4038;
  #L2d3fca.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L2d3fd0.  v0:= temp @kind object;
  #L2d3fd2.  v1:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L2d3fd6.  if v0 != v1 then goto L2d3fdc;
  #L2d3fda.  goto L2d4038;
  #L2d3fdc.  call temp:= `address`(v7) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L2d3fe2.  v0:= temp @kind object;
  #L2d3fe4.  v1:= instanceof @variable v0 @type ^`java.net.InetSocketAddress` @kind boolean;
  #L2d3fe8.  if v1 == 0 then goto L2d4002;
  #L2d3fec.  v0:= (`java.net.InetSocketAddress`) v0 @kind object;
  #L2d3ff0.  call temp:= `a`(v0) @signature `Lokhttp3/internal/connection/RouteSelector;.a:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @kind static;
  #L2d3ff6.  v1:= temp @kind object;
  #L2d3ff8.  call temp:= `getPort`(v0) @signature `Ljava/net/InetSocketAddress;.getPort:()I` @kind virtual;
  #L2d3ffe.  v0:= temp;
  #L2d4000.  goto L2d4060;
  #L2d4002.  v7:= new `java.lang.IllegalArgumentException`;
  #L2d4006.  v1:= new `java.lang.StringBuilder`;
  #L2d400a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d4010.  v2:= "Proxy.address() is not an InetSocketAddress: " @kind object;
  #L2d4014.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d401a.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2d4020.  v0:= temp @kind object;
  #L2d4022.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d4028.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d402e.  v0:= temp @kind object;
  #L2d4030.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d4036.  throw v7;
  #L2d4038.  v0:= v6.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L2d403c.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L2d4042.  v0:= temp @kind object;
  #L2d4044.  call temp:= `host`(v0) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L2d404a.  v1:= temp @kind object;
  #L2d404c.  v0:= v6.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L2d4050.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L2d4056.  v0:= temp @kind object;
  #L2d4058.  call temp:= `port`(v0) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L2d405e.  v0:= temp;
  #L2d4060.  v2:= 1I;
  #L2d4062.  if v0 < v2 then goto L2d4146;
  #L2d4066.  v2:= 65535I;
  #L2d406c.  if v0 > v2 then goto L2d4146;
  #L2d4070.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L2d4076.  v7:= temp @kind object;
  #L2d4078.  v2:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L2d407c.  if v7 != v2 then goto L2d4094;
  #L2d4080.  v7:= v6.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` @kind object;
  #L2d4084.  call temp:= `createUnresolved`(v1, v0) @signature `Ljava/net/InetSocketAddress;.createUnresolved:(Ljava/lang/String;I)Ljava/net/InetSocketAddress;` @kind static;
  #L2d408a.  v0:= temp @kind object;
  #L2d408c.  call temp:= `add`(v7, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2d4092.  goto L2d4104;
  #L2d4094.  v7:= v6.`okhttp3.internal.connection.RouteSelector.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L2d4098.  v2:= v6.`okhttp3.internal.connection.RouteSelector.call` @type ^`okhttp3.Call` @kind object;
  #L2d409c.  call `dnsStart`(v7, v2, v1) @signature `Lokhttp3/EventListener;.dnsStart:(Lokhttp3/Call;Ljava/lang/String;)V` @kind virtual;
  #L2d40a2.  v7:= v6.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L2d40a6.  call temp:= `dns`(v7) @signature `Lokhttp3/Address;.dns:()Lokhttp3/Dns;` @kind virtual;
  #L2d40ac.  v7:= temp @kind object;
  #L2d40ae.  call temp:= `lookup`(v7, v1) @signature `Lokhttp3/Dns;.lookup:(Ljava/lang/String;)Ljava/util/List;` @kind interface;
  #L2d40b4.  v7:= temp @kind object;
  #L2d40b6.  call temp:= `isEmpty`(v7) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2d40bc.  v2:= temp;
  #L2d40be.  if v2 != 0 then goto L2d4106;
  #L2d40c2.  v2:= v6.`okhttp3.internal.connection.RouteSelector.eventListener` @type ^`okhttp3.EventListener` @kind object;
  #L2d40c6.  v3:= v6.`okhttp3.internal.connection.RouteSelector.call` @type ^`okhttp3.Call` @kind object;
  #L2d40ca.  call `dnsEnd`(v2, v3, v1, v7) @signature `Lokhttp3/EventListener;.dnsEnd:(Lokhttp3/Call;Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L2d40d0.  v1:= 0I;
  #L2d40d2.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2d40d8.  v2:= temp;
  #L2d40da.  if v1 >= v2 then goto L2d4104;
  #L2d40de.  call temp:= `get`(v7, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2d40e4.  v3:= temp @kind object;
  #L2d40e6.  v3:= (`java.net.InetAddress`) v3 @kind object;
  #L2d40ea.  v4:= v6.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` @kind object;
  #L2d40ee.  v5:= new `java.net.InetSocketAddress`;
  #L2d40f2.  call `<init>`(v5, v3, v0) @signature `Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V` @kind direct;
  #L2d40f8.  call temp:= `add`(v4, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2d40fe.  v1:= v1 + 1;
  #L2d4102.  goto L2d40da;
  #L2d4104.  return @kind void;
  #L2d4106.  v7:= new `java.net.UnknownHostException`;
  #L2d410a.  v0:= new `java.lang.StringBuilder`;
  #L2d410e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d4114.  v2:= v6.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L2d4118.  call temp:= `dns`(v2) @signature `Lokhttp3/Address;.dns:()Lokhttp3/Dns;` @kind virtual;
  #L2d411e.  v2:= temp @kind object;
  #L2d4120.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d4126.  v2:= " returned no addresses for " @kind object;
  #L2d412a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d4130.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d4136.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d413c.  v0:= temp @kind object;
  #L2d413e.  call `<init>`(v7, v0) @signature `Ljava/net/UnknownHostException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d4144.  throw v7;
  #L2d4146.  v7:= new `java.net.SocketException`;
  #L2d414a.  v2:= new `java.lang.StringBuilder`;
  #L2d414e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d4154.  v3:= "No route to " @kind object;
  #L2d4158.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d415e.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d4164.  v1:= ":" @kind object;
  #L2d4168.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d416e.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d4174.  v0:= "; port is out of range" @kind object;
  #L2d4178.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d417e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d4184.  v0:= temp @kind object;
  #L2d4186.  call `<init>`(v7, v0) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d418c.  goto L2d4190;
  #L2d418e.  throw v7;
  #L2d4190.  goto L2d418e;
}
procedure `void` `resetNextProxy`(`okhttp3.internal.connection.RouteSelector` v1 @kind this, `okhttp3.HttpUrl` v2 @kind object, `java.net.Proxy` v3 @kind object) @signature `Lokhttp3/internal/connection/RouteSelector;.resetNextProxy:(Lokhttp3/HttpUrl;Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2d41a4.  v0:= 0I;
  #L2d41a6.  if v3 == 0 then goto L2d41b8;
  #L2d41aa.  call temp:= `singletonList`(v3) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2d41b0.  v2:= temp @kind object;
  #L2d41b2.  v1.`okhttp3.internal.connection.RouteSelector.proxies` @type ^`java.util.List` := v2 @kind object;
  #L2d41b6.  goto L2d4206;
  #L2d41b8.  v3:= v1.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L2d41bc.  call temp:= `proxySelector`(v3) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @kind virtual;
  #L2d41c2.  v3:= temp @kind object;
  #L2d41c4.  call temp:= `uri`(v2) @signature `Lokhttp3/HttpUrl;.uri:()Ljava/net/URI;` @kind virtual;
  #L2d41ca.  v2:= temp @kind object;
  #L2d41cc.  call temp:= `select`(v3, v2) @signature `Ljava/net/ProxySelector;.select:(Ljava/net/URI;)Ljava/util/List;` @kind virtual;
  #L2d41d2.  v2:= temp @kind object;
  #L2d41d4.  if v2 == 0 then goto L2d41ee;
  #L2d41d8.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2d41de.  v3:= temp;
  #L2d41e0.  if v3 != 0 then goto L2d41ee;
  #L2d41e4.  call temp:= `immutableList`(v2) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L2d41ea.  v2:= temp @kind object;
  #L2d41ec.  goto L2d41b2;
  #L2d41ee.  v2:= 1I;
  #L2d41f0.  v2:= new `java.net.Proxy`[v2];
  #L2d41f4.  v3:= `@@java.net.Proxy.NO_PROXY` @type ^`java.net.Proxy` @kind object;
  #L2d41f8.  v2[v0]:= v3 @kind object;
  #L2d41fc.  call temp:= `immutableList`(v2) @signature `Lokhttp3/internal/Util;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2d4202.  v2:= temp @kind object;
  #L2d4204.  goto L2d41b2;
  #L2d4206.  v1.`okhttp3.internal.connection.RouteSelector.nextProxyIndex` @type ^`int` := v0;
  #L2d420a.  return @kind void;
}
procedure `void` `connectFailed`(`okhttp3.internal.connection.RouteSelector` v3 @kind this, `okhttp3.Route` v4 @kind object, `java.io.IOException` v5 @kind object) @signature `Lokhttp3/internal/connection/RouteSelector;.connectFailed:(Lokhttp3/Route;Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2d3f30.  call temp:= `proxy`(v4) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L2d3f36.  v0:= temp @kind object;
  #L2d3f38.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L2d3f3e.  v0:= temp @kind object;
  #L2d3f40.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L2d3f44.  if v0 == v1 then goto L2d3f8e;
  #L2d3f48.  v0:= v3.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L2d3f4c.  call temp:= `proxySelector`(v0) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @kind virtual;
  #L2d3f52.  v0:= temp @kind object;
  #L2d3f54.  if v0 == 0 then goto L2d3f8e;
  #L2d3f58.  v0:= v3.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L2d3f5c.  call temp:= `proxySelector`(v0) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @kind virtual;
  #L2d3f62.  v0:= temp @kind object;
  #L2d3f64.  v1:= v3.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L2d3f68.  call temp:= `url`(v1) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L2d3f6e.  v1:= temp @kind object;
  #L2d3f70.  call temp:= `uri`(v1) @signature `Lokhttp3/HttpUrl;.uri:()Ljava/net/URI;` @kind virtual;
  #L2d3f76.  v1:= temp @kind object;
  #L2d3f78.  call temp:= `proxy`(v4) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @kind virtual;
  #L2d3f7e.  v2:= temp @kind object;
  #L2d3f80.  call temp:= `address`(v2) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L2d3f86.  v2:= temp @kind object;
  #L2d3f88.  call `connectFailed`(v0, v1, v2, v5) @signature `Ljava/net/ProxySelector;.connectFailed:(Ljava/net/URI;Ljava/net/SocketAddress;Ljava/io/IOException;)V` @kind virtual;
  #L2d3f8e.  v5:= v3.`okhttp3.internal.connection.RouteSelector.routeDatabase` @type ^`okhttp3.internal.connection.RouteDatabase` @kind object;
  #L2d3f92.  call `failed`(v5, v4) @signature `Lokhttp3/internal/connection/RouteDatabase;.failed:(Lokhttp3/Route;)V` @kind virtual;
  #L2d3f98.  return @kind void;
}
procedure `boolean` `hasNext`(`okhttp3.internal.connection.RouteSelector` v1 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d3cc4.  call temp:= `hasNextProxy`(v1) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNextProxy:()Z` @kind direct;
  #L2d3cca.  v0:= temp;
  #L2d3ccc.  if v0 != 0 then goto L2d3ce6;
  #L2d3cd0.  v0:= v1.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` @kind object;
  #L2d3cd4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2d3cda.  v0:= temp;
  #L2d3cdc.  if v0 != 0 then goto L2d3ce2;
  #L2d3ce0.  goto L2d3ce6;
  #L2d3ce2.  v0:= 0I;
  #L2d3ce4.  goto L2d3ce8;
  #L2d3ce6.  v0:= 1I;
  #L2d3ce8.  return v0;
}
procedure `okhttp3.internal.connection.RouteSelector$Selection` `next`(`okhttp3.internal.connection.RouteSelector` v7 @kind this) @signature `Lokhttp3/internal/connection/RouteSelector;.next:()Lokhttp3/internal/connection/RouteSelector$Selection;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2d3df0.  call temp:= `hasNext`(v7) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNext:()Z` @kind virtual;
  #L2d3df6.  v0:= temp;
  #L2d3df8.  if v0 == 0 then goto L2d3eaa;
  #L2d3dfc.  v0:= new `java.util.ArrayList`;
  #L2d3e00.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2d3e06.  call temp:= `hasNextProxy`(v7) @signature `Lokhttp3/internal/connection/RouteSelector;.hasNextProxy:()Z` @kind direct;
  #L2d3e0c.  v1:= temp;
  #L2d3e0e.  if v1 == 0 then goto L2d3e7e;
  #L2d3e12.  call temp:= `nextProxy`(v7) @signature `Lokhttp3/internal/connection/RouteSelector;.nextProxy:()Ljava/net/Proxy;` @kind direct;
  #L2d3e18.  v1:= temp @kind object;
  #L2d3e1a.  v2:= 0I;
  #L2d3e1c.  v3:= v7.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` @kind object;
  #L2d3e20.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2d3e26.  v3:= temp;
  #L2d3e28.  if v2 >= v3 then goto L2d3e72;
  #L2d3e2c.  v4:= new `okhttp3.Route`;
  #L2d3e30.  v5:= v7.`okhttp3.internal.connection.RouteSelector.address` @type ^`okhttp3.Address` @kind object;
  #L2d3e34.  v6:= v7.`okhttp3.internal.connection.RouteSelector.inetSocketAddresses` @type ^`java.util.List` @kind object;
  #L2d3e38.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2d3e3e.  v6:= temp @kind object;
  #L2d3e40.  v6:= (`java.net.InetSocketAddress`) v6 @kind object;
  #L2d3e44.  call `<init>`(v4, v5, v1, v6) @signature `Lokhttp3/Route;.<init>:(Lokhttp3/Address;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @kind direct;
  #L2d3e4a.  v5:= v7.`okhttp3.internal.connection.RouteSelector.routeDatabase` @type ^`okhttp3.internal.connection.RouteDatabase` @kind object;
  #L2d3e4e.  call temp:= `shouldPostpone`(v5, v4) @signature `Lokhttp3/internal/connection/RouteDatabase;.shouldPostpone:(Lokhttp3/Route;)Z` @kind virtual;
  #L2d3e54.  v5:= temp;
  #L2d3e56.  if v5 == 0 then goto L2d3e66;
  #L2d3e5a.  v5:= v7.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` @kind object;
  #L2d3e5e.  call temp:= `add`(v5, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2d3e64.  goto L2d3e6c;
  #L2d3e66.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2d3e6c.  v2:= v2 + 1;
  #L2d3e70.  goto L2d3e28;
  #L2d3e72.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2d3e78.  v1:= temp;
  #L2d3e7a.  if v1 != 0 then goto L2d3e06;
  #L2d3e7e.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2d3e84.  v1:= temp;
  #L2d3e86.  if v1 == 0 then goto L2d3e9e;
  #L2d3e8a.  v1:= v7.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` @kind object;
  #L2d3e8e.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L2d3e94.  v1:= v7.`okhttp3.internal.connection.RouteSelector.postponedRoutes` @type ^`java.util.List` @kind object;
  #L2d3e98.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L2d3e9e.  v1:= new `okhttp3.internal.connection.RouteSelector$Selection`;
  #L2d3ea2.  call `<init>`(v1, v0) @signature `Lokhttp3/internal/connection/RouteSelector$Selection;.<init>:(Ljava/util/List;)V` @kind direct;
  #L2d3ea8.  return v1 @kind object;
  #L2d3eaa.  v0:= new `java.util.NoSuchElementException`;
  #L2d3eae.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L2d3eb4.  goto L2d3eb8;
  #L2d3eb6.  throw v0;
  #L2d3eb8.  goto L2d3eb6;
}
