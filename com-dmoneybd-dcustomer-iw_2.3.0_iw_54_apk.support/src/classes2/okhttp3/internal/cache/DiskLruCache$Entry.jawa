record `okhttp3.internal.cache.DiskLruCache$Entry` @kind class @AccessFlag FINAL {
  `java.lang.String` `okhttp3.internal.cache.DiskLruCache$Entry.a` @AccessFlag FINAL;
  `long`[] `okhttp3.internal.cache.DiskLruCache$Entry.b` @AccessFlag FINAL;
  `java.io.File`[] `okhttp3.internal.cache.DiskLruCache$Entry.c` @AccessFlag FINAL;
  `java.io.File`[] `okhttp3.internal.cache.DiskLruCache$Entry.d` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.cache.DiskLruCache$Entry.e` @AccessFlag ;
  `okhttp3.internal.cache.DiskLruCache$Editor` `okhttp3.internal.cache.DiskLruCache$Entry.f` @AccessFlag ;
  `long` `okhttp3.internal.cache.DiskLruCache$Entry.g` @AccessFlag ;
  `okhttp3.internal.cache.DiskLruCache` `okhttp3.internal.cache.DiskLruCache$Entry.h` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.cache.DiskLruCache$Entry` v6 @kind this, `okhttp3.internal.cache.DiskLruCache` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.<init>:(Lokhttp3/internal/cache/DiskLruCache;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2d2e18.  v6.`okhttp3.internal.cache.DiskLruCache$Entry.h` @type ^`okhttp3.internal.cache.DiskLruCache` := v7 @kind object;
  #L2d2e1c.  call `<init>`(v6) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d2e22.  v6.`okhttp3.internal.cache.DiskLruCache$Entry.a` @type ^`java.lang.String` := v8 @kind object;
  #L2d2e26.  v0:= v7.`okhttp3.internal.cache.DiskLruCache.d` @type ^`int`;
  #L2d2e2a.  v1:= new `long`[v0];
  #L2d2e2e.  v6.`okhttp3.internal.cache.DiskLruCache$Entry.b` @type ^`long`[] := v1 @kind object;
  #L2d2e32.  v1:= new `java.io.File`[v0];
  #L2d2e36.  v6.`okhttp3.internal.cache.DiskLruCache$Entry.c` @type ^`java.io.File`[] := v1 @kind object;
  #L2d2e3a.  v0:= new `java.io.File`[v0];
  #L2d2e3e.  v6.`okhttp3.internal.cache.DiskLruCache$Entry.d` @type ^`java.io.File`[] := v0 @kind object;
  #L2d2e42.  v0:= new `java.lang.StringBuilder`;
  #L2d2e46.  call `<init>`(v0, v8) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d2e4c.  v8:= 46I;
  #L2d2e50.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d2e56.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L2d2e5c.  v8:= temp;
  #L2d2e5e.  v1:= 0I;
  #L2d2e60.  v2:= v7.`okhttp3.internal.cache.DiskLruCache.d` @type ^`int`;
  #L2d2e64.  if v1 >= v2 then goto L2d2ec0;
  #L2d2e68.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d2e6e.  v2:= v6.`okhttp3.internal.cache.DiskLruCache$Entry.c` @type ^`java.io.File`[] @kind object;
  #L2d2e72.  v3:= new `java.io.File`;
  #L2d2e76.  v4:= v7.`okhttp3.internal.cache.DiskLruCache.c` @type ^`java.io.File` @kind object;
  #L2d2e7a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d2e80.  v5:= temp @kind object;
  #L2d2e82.  call `<init>`(v3, v4, v5) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L2d2e88.  v2[v1]:= v3 @kind object;
  #L2d2e8c.  v2:= ".tmp" @kind object;
  #L2d2e90.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d2e96.  v2:= v6.`okhttp3.internal.cache.DiskLruCache$Entry.d` @type ^`java.io.File`[] @kind object;
  #L2d2e9a.  v3:= new `java.io.File`;
  #L2d2e9e.  v4:= v7.`okhttp3.internal.cache.DiskLruCache.c` @type ^`java.io.File` @kind object;
  #L2d2ea2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d2ea8.  v5:= temp @kind object;
  #L2d2eaa.  call `<init>`(v3, v4, v5) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L2d2eb0.  v2[v1]:= v3 @kind object;
  #L2d2eb4.  call `setLength`(v0, v8) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L2d2eba.  v1:= v1 + 1;
  #L2d2ebe.  goto L2d2e60;
  #L2d2ec0.  return @kind void;
}
procedure `java.io.IOException` `invalidLengths`(`okhttp3.internal.cache.DiskLruCache$Entry` v3 @kind this, `java.lang.String`[] v4 @kind object) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.invalidLengths:([Ljava/lang/String;)Ljava/io/IOException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2d2cf0.  v0:= new `java.io.IOException`;
  #L2d2cf4.  v1:= new `java.lang.StringBuilder`;
  #L2d2cf8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d2cfe.  v2:= "unexpected journal line: " @kind object;
  #L2d2d02.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d2d08.  call temp:= `toString`(v4) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2d2d0e.  v4:= temp @kind object;
  #L2d2d10.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d2d16.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d2d1c.  v4:= temp @kind object;
  #L2d2d1e.  call `<init>`(v0, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d2d24.  throw v0;
}
procedure `void` `a`(`okhttp3.internal.cache.DiskLruCache$Entry` v4 @kind this, `java.lang.String`[] v5 @kind object) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.a:([Ljava/lang/String;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2d2ed4.  v0:= length @variable v5;
  #L2d2ed6.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Entry.h` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L2d2eda.  v1:= v1.`okhttp3.internal.cache.DiskLruCache.d` @type ^`int`;
  #L2d2ede.  if v0 != v1 then goto L2d2f10;
  #L2d2ee2.  v0:= 0I;
  #L2d2ee4.  v1:= length @variable v5;
  #L2d2ee6.  if v0 >= v1 then goto L2d2f04;
  #L2d2eea.  v1:= v4.`okhttp3.internal.cache.DiskLruCache$Entry.b` @type ^`long`[] @kind object;
  #L2d2eee.  v2:= v5[v0] @kind object;
  #L2d2ef2.  call temp:= `parseLong`(v2) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L2d2ef8.  v2:= temp @kind wide;
  #L2d2efa.  v1[v0]:= v2 @kind wide;
  #L2d2efe.  v0:= v0 + 1;
  #L2d2f02.  goto L2d2ee4;
  #L2d2f04.  return @kind void;
  #L2d2f06.  call temp:= `invalidLengths`(v4, v5) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.invalidLengths:([Ljava/lang/String;)Ljava/io/IOException;` @kind direct;
  #L2d2f0c.  v5:= temp @kind object;
  #L2d2f0e.  throw v5;
  #L2d2f10.  call temp:= `invalidLengths`(v4, v5) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.invalidLengths:([Ljava/lang/String;)Ljava/io/IOException;` @kind direct;
  #L2d2f16.  v5:= temp @kind object;
  #L2d2f18.  goto L2d2f1c;
  #L2d2f1a.  throw v5;
  #L2d2f1c.  goto L2d2f1a;
  catch `java.lang.NumberFormatException` @[L2d2ee4..L2d2efe] goto L2d2f06;
}
procedure `okhttp3.internal.cache.DiskLruCache$Snapshot` `b`(`okhttp3.internal.cache.DiskLruCache$Entry` v10 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.b:()Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2d2d38.  v0:= v10.`okhttp3.internal.cache.DiskLruCache$Entry.h` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L2d2d3c.  call temp:= `holdsLock`(v0) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L2d2d42.  v0:= temp;
  #L2d2d44.  if v0 == 0 then goto L2d2ddc;
  #L2d2d48.  v0:= v10.`okhttp3.internal.cache.DiskLruCache$Entry.h` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L2d2d4c.  v0:= v0.`okhttp3.internal.cache.DiskLruCache.d` @type ^`int`;
  #L2d2d50.  v0:= new `okio.Source`[v0];
  #L2d2d54.  v1:= v10.`okhttp3.internal.cache.DiskLruCache$Entry.b` @type ^`long`[] @kind object;
  #L2d2d58.  call temp:= `clone`(v1) @signature `[J.clone:()Ljava/lang/Object;` @kind virtual;
  #L2d2d5e.  v1:= temp @kind object;
  #L2d2d60.  v7:= v1 @kind object;
  #L2d2d62.  v7:= (`long`[]) v7 @kind object;
  #L2d2d66.  v8:= 0I;
  #L2d2d68.  v1:= 0I;
  #L2d2d6a.  v2:= v10.`okhttp3.internal.cache.DiskLruCache$Entry.h` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L2d2d6e.  v3:= v2.`okhttp3.internal.cache.DiskLruCache.d` @type ^`int`;
  #L2d2d72.  if v1 >= v3 then goto L2d2d94;
  #L2d2d76.  v2:= v2.`okhttp3.internal.cache.DiskLruCache.b` @type ^`okhttp3.internal.io.FileSystem` @kind object;
  #L2d2d7a.  v3:= v10.`okhttp3.internal.cache.DiskLruCache$Entry.c` @type ^`java.io.File`[] @kind object;
  #L2d2d7e.  v3:= v3[v1] @kind object;
  #L2d2d82.  call temp:= `source`(v2, v3) @signature `Lokhttp3/internal/io/FileSystem;.source:(Ljava/io/File;)Lokio/Source;` @kind interface;
  #L2d2d88.  v2:= temp @kind object;
  #L2d2d8a.  v0[v1]:= v2 @kind object;
  #L2d2d8e.  v1:= v1 + 1;
  #L2d2d92.  goto L2d2d6a;
  #L2d2d94.  v9:= new `okhttp3.internal.cache.DiskLruCache$Snapshot`;
  #L2d2d98.  v3:= v10.`okhttp3.internal.cache.DiskLruCache$Entry.a` @type ^`java.lang.String` @kind object;
  #L2d2d9c.  v4:= v10.`okhttp3.internal.cache.DiskLruCache$Entry.g` @type ^`long` @kind wide;
  #L2d2da0.  v1:= v9 @kind object;
  #L2d2da2.  v6:= v0 @kind object;
  #L2d2da4.  call `<init>`(v1, v2, v3, v4, v6, v7) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.<init>:(Lokhttp3/internal/cache/DiskLruCache;Ljava/lang/String;J[Lokio/Source;[J)V` @kind direct;
  #L2d2daa.  return v9 @kind object;
  #L2d2dac.  
  #L2d2dae.  v1:= v10.`okhttp3.internal.cache.DiskLruCache$Entry.h` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L2d2db2.  v2:= v1.`okhttp3.internal.cache.DiskLruCache.d` @type ^`int`;
  #L2d2db6.  if v8 >= v2 then goto L2d2dd2;
  #L2d2dba.  v2:= v0[v8] @kind object;
  #L2d2dbe.  if v2 == 0 then goto L2d2dd2;
  #L2d2dc2.  v1:= v0[v8] @kind object;
  #L2d2dc6.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L2d2dcc.  v8:= v8 + 1;
  #L2d2dd0.  goto L2d2dae;
  #L2d2dd2.  call temp:= `e`(v1, v10) @signature `Lokhttp3/internal/cache/DiskLruCache;.e:(Lokhttp3/internal/cache/DiskLruCache$Entry;)Z` @kind virtual;
  #L2d2dd8.  v0:= 0I;
  #L2d2dda.  return v0 @kind object;
  #L2d2ddc.  v0:= new `java.lang.AssertionError`;
  #L2d2de0.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2d2de6.  goto L2d2dea;
  #L2d2de8.  throw v0;
  #L2d2dea.  goto L2d2de8;
  catch `java.io.FileNotFoundException` @[L2d2d6a..L2d2daa] goto L2d2dac;
  catch `java.io.IOException` @[L2d2dd2..L2d2dd8] goto L2d2dd8;
}
procedure `void` `c`(`okhttp3.internal.cache.DiskLruCache$Entry` v6 @kind this, `okio.BufferedSink` v7 @kind object) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.c:(Lokio/BufferedSink;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2d2f40.  v0:= v6.`okhttp3.internal.cache.DiskLruCache$Entry.b` @type ^`long`[] @kind object;
  #L2d2f44.  v1:= length @variable v0;
  #L2d2f46.  v2:= 0I;
  #L2d2f48.  if v2 >= v1 then goto L2d2f68;
  #L2d2f4c.  v3:= v0[v2] @kind wide;
  #L2d2f50.  v5:= 32I;
  #L2d2f54.  call temp:= `writeByte`(v7, v5) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L2d2f5a.  v5:= temp @kind object;
  #L2d2f5c.  call temp:= `writeDecimalLong`(v5, v3) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L2d2f62.  v2:= v2 + 1;
  #L2d2f66.  goto L2d2f48;
  #L2d2f68.  return @kind void;
}
