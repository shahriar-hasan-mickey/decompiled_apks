record `okhttp3.internal.cache.CacheInterceptor` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.Interceptor` @kind interface {
  `okhttp3.internal.cache.InternalCache` `okhttp3.internal.cache.CacheInterceptor.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.cache.CacheInterceptor` v0 @kind this, `okhttp3.internal.cache.InternalCache` v1 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor;.<init>:(Lokhttp3/internal/cache/InternalCache;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2d2174.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d217a.  v0.`okhttp3.internal.cache.CacheInterceptor.a` @type ^`okhttp3.internal.cache.InternalCache` := v1 @kind object;
  #L2d217e.  return @kind void;
}
procedure `boolean` `a`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor;.a:(Ljava/lang/String;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L2d1c40.  v0:= "Content-Length" @kind object;
  #L2d1c44.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2d1c4a.  v0:= temp;
  #L2d1c4c.  if v0 != 0 then goto L2d1c76;
  #L2d1c50.  v0:= "Content-Encoding" @kind object;
  #L2d1c54.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2d1c5a.  v0:= temp;
  #L2d1c5c.  if v0 != 0 then goto L2d1c76;
  #L2d1c60.  v0:= "Content-Type" @kind object;
  #L2d1c64.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2d1c6a.  v1:= temp;
  #L2d1c6c.  if v1 == 0 then goto L2d1c72;
  #L2d1c70.  goto L2d1c76;
  #L2d1c72.  v1:= 0I;
  #L2d1c74.  goto L2d1c78;
  #L2d1c76.  v1:= 1I;
  #L2d1c78.  return v1;
}
procedure `boolean` `b`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor;.b:(Ljava/lang/String;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L2d1c8c.  v0:= "Connection" @kind object;
  #L2d1c90.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2d1c96.  v0:= temp;
  #L2d1c98.  if v0 != 0 then goto L2d1d10;
  #L2d1c9c.  v0:= "Keep-Alive" @kind object;
  #L2d1ca0.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2d1ca6.  v0:= temp;
  #L2d1ca8.  if v0 != 0 then goto L2d1d10;
  #L2d1cac.  v0:= "Proxy-Authenticate" @kind object;
  #L2d1cb0.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2d1cb6.  v0:= temp;
  #L2d1cb8.  if v0 != 0 then goto L2d1d10;
  #L2d1cbc.  v0:= "Proxy-Authorization" @kind object;
  #L2d1cc0.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2d1cc6.  v0:= temp;
  #L2d1cc8.  if v0 != 0 then goto L2d1d10;
  #L2d1ccc.  v0:= "TE" @kind object;
  #L2d1cd0.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2d1cd6.  v0:= temp;
  #L2d1cd8.  if v0 != 0 then goto L2d1d10;
  #L2d1cdc.  v0:= "Trailers" @kind object;
  #L2d1ce0.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2d1ce6.  v0:= temp;
  #L2d1ce8.  if v0 != 0 then goto L2d1d10;
  #L2d1cec.  v0:= "Transfer-Encoding" @kind object;
  #L2d1cf0.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2d1cf6.  v0:= temp;
  #L2d1cf8.  if v0 != 0 then goto L2d1d10;
  #L2d1cfc.  v0:= "Upgrade" @kind object;
  #L2d1d00.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2d1d06.  v1:= temp;
  #L2d1d08.  if v1 != 0 then goto L2d1d10;
  #L2d1d0c.  v1:= 1I;
  #L2d1d0e.  goto L2d1d12;
  #L2d1d10.  v1:= 0I;
  #L2d1d12.  return v1;
}
procedure `okhttp3.Response` `cacheWritingResponse`(`okhttp3.internal.cache.CacheInterceptor` v4 @kind this, `okhttp3.internal.cache.CacheRequest` v5 @kind object, `okhttp3.Response` v6 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor;.cacheWritingResponse:(Lokhttp3/internal/cache/CacheRequest;Lokhttp3/Response;)Lokhttp3/Response;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2d1e04.  if v5 != 0 then goto L2d1e0a;
  #L2d1e08.  return v6 @kind object;
  #L2d1e0a.  call temp:= `body`(v5) @signature `Lokhttp3/internal/cache/CacheRequest;.body:()Lokio/Sink;` @kind interface;
  #L2d1e10.  v0:= temp @kind object;
  #L2d1e12.  if v0 != 0 then goto L2d1e18;
  #L2d1e16.  return v6 @kind object;
  #L2d1e18.  call temp:= `body`(v6) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L2d1e1e.  v1:= temp @kind object;
  #L2d1e20.  call temp:= `source`(v1) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L2d1e26.  v1:= temp @kind object;
  #L2d1e28.  call temp:= `buffer`(v0) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L2d1e2e.  v0:= temp @kind object;
  #L2d1e30.  v2:= new `okhttp3.internal.cache.CacheInterceptor$1`;
  #L2d1e34.  call `<init>`(v2, v4, v1, v5, v0) @signature `Lokhttp3/internal/cache/CacheInterceptor$1;.<init>:(Lokhttp3/internal/cache/CacheInterceptor;Lokio/BufferedSource;Lokhttp3/internal/cache/CacheRequest;Lokio/BufferedSink;)V` @kind direct;
  #L2d1e3a.  v5:= "Content-Type" @kind object;
  #L2d1e3e.  call temp:= `header`(v6, v5) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2d1e44.  v5:= temp @kind object;
  #L2d1e46.  call temp:= `body`(v6) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L2d1e4c.  v0:= temp @kind object;
  #L2d1e4e.  call temp:= `contentLength`(v0) @signature `Lokhttp3/ResponseBody;.contentLength:()J` @kind virtual;
  #L2d1e54.  v0:= temp @kind wide;
  #L2d1e56.  call temp:= `newBuilder`(v6) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L2d1e5c.  v6:= temp @kind object;
  #L2d1e5e.  v3:= new `okhttp3.internal.http.RealResponseBody`;
  #L2d1e62.  call temp:= `buffer`(v2) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L2d1e68.  v2:= temp @kind object;
  #L2d1e6a.  call `<init>`(v3, v5, v0, v2) @signature `Lokhttp3/internal/http/RealResponseBody;.<init>:(Ljava/lang/String;JLokio/BufferedSource;)V` @kind direct;
  #L2d1e70.  call temp:= `body`(v6, v3) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2d1e76.  v5:= temp @kind object;
  #L2d1e78.  call temp:= `build`(v5) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L2d1e7e.  v5:= temp @kind object;
  #L2d1e80.  return v5 @kind object;
}
procedure `okhttp3.Headers` `combine`(`okhttp3.Headers` v7 @kind object, `okhttp3.Headers` v8 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor;.combine:(Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2d1d24.  v0:= new `okhttp3.Headers$Builder`;
  #L2d1d28.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L2d1d2e.  call temp:= `size`(v7) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L2d1d34.  v1:= temp;
  #L2d1d36.  v2:= 0I;
  #L2d1d38.  v3:= 0I;
  #L2d1d3a.  if v3 >= v1 then goto L2d1da4;
  #L2d1d3e.  call temp:= `name`(v7, v3) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L2d1d44.  v4:= temp @kind object;
  #L2d1d46.  call temp:= `value`(v7, v3) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L2d1d4c.  v5:= temp @kind object;
  #L2d1d4e.  v6:= "Warning" @kind object;
  #L2d1d52.  call temp:= `equalsIgnoreCase`(v6, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2d1d58.  v6:= temp;
  #L2d1d5a.  if v6 == 0 then goto L2d1d70;
  #L2d1d5e.  v6:= "1" @kind object;
  #L2d1d62.  call temp:= `startsWith`(v5, v6) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L2d1d68.  v6:= temp;
  #L2d1d6a.  if v6 == 0 then goto L2d1d70;
  #L2d1d6e.  goto L2d1d9e;
  #L2d1d70.  call temp:= `a`(v4) @signature `Lokhttp3/internal/cache/CacheInterceptor;.a:(Ljava/lang/String;)Z` @kind static;
  #L2d1d76.  v6:= temp;
  #L2d1d78.  if v6 != 0 then goto L2d1d94;
  #L2d1d7c.  call temp:= `b`(v4) @signature `Lokhttp3/internal/cache/CacheInterceptor;.b:(Ljava/lang/String;)Z` @kind static;
  #L2d1d82.  v6:= temp;
  #L2d1d84.  if v6 == 0 then goto L2d1d94;
  #L2d1d88.  call temp:= `get`(v8, v4) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2d1d8e.  v6:= temp @kind object;
  #L2d1d90.  if v6 != 0 then goto L2d1d9e;
  #L2d1d94.  v6:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L2d1d98.  call `addLenient`(v6, v0, v4, v5) @signature `Lokhttp3/internal/Internal;.addLenient:(Lokhttp3/Headers$Builder;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L2d1d9e.  v3:= v3 + 1;
  #L2d1da2.  goto L2d1d3a;
  #L2d1da4.  call temp:= `size`(v8) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L2d1daa.  v7:= temp;
  #L2d1dac.  if v2 >= v7 then goto L2d1de8;
  #L2d1db0.  call temp:= `name`(v8, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L2d1db6.  v1:= temp @kind object;
  #L2d1db8.  call temp:= `a`(v1) @signature `Lokhttp3/internal/cache/CacheInterceptor;.a:(Ljava/lang/String;)Z` @kind static;
  #L2d1dbe.  v3:= temp;
  #L2d1dc0.  if v3 != 0 then goto L2d1de2;
  #L2d1dc4.  call temp:= `b`(v1) @signature `Lokhttp3/internal/cache/CacheInterceptor;.b:(Ljava/lang/String;)Z` @kind static;
  #L2d1dca.  v3:= temp;
  #L2d1dcc.  if v3 == 0 then goto L2d1de2;
  #L2d1dd0.  v3:= `@@okhttp3.internal.Internal.instance` @type ^`okhttp3.internal.Internal` @kind object;
  #L2d1dd4.  call temp:= `value`(v8, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L2d1dda.  v4:= temp @kind object;
  #L2d1ddc.  call `addLenient`(v3, v0, v1, v4) @signature `Lokhttp3/internal/Internal;.addLenient:(Lokhttp3/Headers$Builder;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L2d1de2.  v2:= v2 + 1;
  #L2d1de6.  goto L2d1dac;
  #L2d1de8.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L2d1dee.  v7:= temp @kind object;
  #L2d1df0.  return v7 @kind object;
}
procedure `okhttp3.Response` `stripBody`(`okhttp3.Response` v1 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2d2138.  if v1 == 0 then goto L2d2162;
  #L2d213c.  call temp:= `body`(v1) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L2d2142.  v0:= temp @kind object;
  #L2d2144.  if v0 == 0 then goto L2d2162;
  #L2d2148.  call temp:= `newBuilder`(v1) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L2d214e.  v1:= temp @kind object;
  #L2d2150.  v0:= 0I;
  #L2d2152.  call temp:= `body`(v1, v0) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2d2158.  v1:= temp @kind object;
  #L2d215a.  call temp:= `build`(v1) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L2d2160.  v1:= temp @kind object;
  #L2d2162.  return v1 @kind object;
}
procedure `okhttp3.Response` `intercept`(`okhttp3.internal.cache.CacheInterceptor` v5 @kind this, `okhttp3.Interceptor$Chain` v6 @kind object) @signature `Lokhttp3/internal/cache/CacheInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2d1e94.  v0:= v5.`okhttp3.internal.cache.CacheInterceptor.a` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L2d1e98.  if v0 == 0 then goto L2d1eae;
  #L2d1e9c.  call temp:= `request`(v6) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L2d1ea2.  v1:= temp @kind object;
  #L2d1ea4.  call temp:= `get`(v0, v1) @signature `Lokhttp3/internal/cache/InternalCache;.get:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #L2d1eaa.  v0:= temp @kind object;
  #L2d1eac.  goto L2d1eb0;
  #L2d1eae.  v0:= 0I;
  #L2d1eb0.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L2d1eb6.  v1:= temp @kind wide;
  #L2d1eb8.  v3:= new `okhttp3.internal.cache.CacheStrategy$Factory`;
  #L2d1ebc.  call temp:= `request`(v6) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L2d1ec2.  v4:= temp @kind object;
  #L2d1ec4.  call `<init>`(v3, v1, v4, v0) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.<init>:(JLokhttp3/Request;Lokhttp3/Response;)V` @kind direct;
  #L2d1eca.  call temp:= `get`(v3) @signature `Lokhttp3/internal/cache/CacheStrategy$Factory;.get:()Lokhttp3/internal/cache/CacheStrategy;` @kind virtual;
  #L2d1ed0.  v1:= temp @kind object;
  #L2d1ed2.  v2:= v1.`okhttp3.internal.cache.CacheStrategy.networkRequest` @type ^`okhttp3.Request` @kind object;
  #L2d1ed6.  v3:= v1.`okhttp3.internal.cache.CacheStrategy.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L2d1eda.  v4:= v5.`okhttp3.internal.cache.CacheInterceptor.a` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L2d1ede.  if v4 == 0 then goto L2d1ee8;
  #L2d1ee2.  call `trackResponse`(v4, v1) @signature `Lokhttp3/internal/cache/InternalCache;.trackResponse:(Lokhttp3/internal/cache/CacheStrategy;)V` @kind interface;
  #L2d1ee8.  if v0 == 0 then goto L2d1efe;
  #L2d1eec.  if v3 != 0 then goto L2d1efe;
  #L2d1ef0.  call temp:= `body`(v0) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L2d1ef6.  v1:= temp @kind object;
  #L2d1ef8.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L2d1efe.  if v2 != 0 then goto L2d1f76;
  #L2d1f02.  if v3 != 0 then goto L2d1f76;
  #L2d1f06.  v0:= new `okhttp3.Response$Builder`;
  #L2d1f0a.  call `<init>`(v0) @signature `Lokhttp3/Response$Builder;.<init>:()V` @kind direct;
  #L2d1f10.  call temp:= `request`(v6) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L2d1f16.  v6:= temp @kind object;
  #L2d1f18.  call temp:= `request`(v0, v6) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2d1f1e.  v6:= temp @kind object;
  #L2d1f20.  v0:= `@@okhttp3.Protocol.HTTP_1_1` @type ^`okhttp3.Protocol` @kind object;
  #L2d1f24.  call temp:= `protocol`(v6, v0) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2d1f2a.  v6:= temp @kind object;
  #L2d1f2c.  v0:= 504I;
  #L2d1f30.  call temp:= `code`(v6, v0) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @kind virtual;
  #L2d1f36.  v6:= temp @kind object;
  #L2d1f38.  v0:= "Unsatisfiable Request (only-if-cached)" @kind object;
  #L2d1f3c.  call temp:= `message`(v6, v0) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2d1f42.  v6:= temp @kind object;
  #L2d1f44.  v0:= `@@okhttp3.internal.Util.EMPTY_RESPONSE` @type ^`okhttp3.ResponseBody` @kind object;
  #L2d1f48.  call temp:= `body`(v6, v0) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2d1f4e.  v6:= temp @kind object;
  #L2d1f50.  v0:= -1L;
  #L2d1f54.  call temp:= `sentRequestAtMillis`(v6, v0) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L2d1f5a.  v6:= temp @kind object;
  #L2d1f5c.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L2d1f62.  v0:= temp @kind wide;
  #L2d1f64.  call temp:= `receivedResponseAtMillis`(v6, v0) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L2d1f6a.  v6:= temp @kind object;
  #L2d1f6c.  call temp:= `build`(v6) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L2d1f72.  v6:= temp @kind object;
  #L2d1f74.  return v6 @kind object;
  #L2d1f76.  if v2 != 0 then goto L2d1f9c;
  #L2d1f7a.  call temp:= `newBuilder`(v3) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L2d1f80.  v6:= temp @kind object;
  #L2d1f82.  call temp:= `stripBody`(v3) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L2d1f88.  v0:= temp @kind object;
  #L2d1f8a.  call temp:= `cacheResponse`(v6, v0) @signature `Lokhttp3/Response$Builder;.cacheResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2d1f90.  v6:= temp @kind object;
  #L2d1f92.  call temp:= `build`(v6) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L2d1f98.  v6:= temp @kind object;
  #L2d1f9a.  return v6 @kind object;
  #L2d1f9c.  call temp:= `proceed`(v6, v2) @signature `Lokhttp3/Interceptor$Chain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #L2d1fa2.  v6:= temp @kind object;
  #L2d1fa4.  if v6 != 0 then goto L2d1fba;
  #L2d1fa8.  if v0 == 0 then goto L2d1fba;
  #L2d1fac.  call temp:= `body`(v0) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L2d1fb2.  v0:= temp @kind object;
  #L2d1fb4.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L2d1fba.  if v3 == 0 then goto L2d2070;
  #L2d1fbe.  call temp:= `code`(v6) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L2d1fc4.  v0:= temp;
  #L2d1fc6.  v1:= 304I;
  #L2d1fca.  if v0 != v1 then goto L2d2062;
  #L2d1fce.  call temp:= `newBuilder`(v3) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L2d1fd4.  v0:= temp @kind object;
  #L2d1fd6.  call temp:= `headers`(v3) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L2d1fdc.  v1:= temp @kind object;
  #L2d1fde.  call temp:= `headers`(v6) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L2d1fe4.  v2:= temp @kind object;
  #L2d1fe6.  call temp:= `combine`(v1, v2) @signature `Lokhttp3/internal/cache/CacheInterceptor;.combine:(Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;` @kind static;
  #L2d1fec.  v1:= temp @kind object;
  #L2d1fee.  call temp:= `headers`(v0, v1) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2d1ff4.  v0:= temp @kind object;
  #L2d1ff6.  call temp:= `sentRequestAtMillis`(v6) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L2d1ffc.  v1:= temp @kind wide;
  #L2d1ffe.  call temp:= `sentRequestAtMillis`(v0, v1) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L2d2004.  v0:= temp @kind object;
  #L2d2006.  call temp:= `receivedResponseAtMillis`(v6) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L2d200c.  v1:= temp @kind wide;
  #L2d200e.  call temp:= `receivedResponseAtMillis`(v0, v1) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L2d2014.  v0:= temp @kind object;
  #L2d2016.  call temp:= `stripBody`(v3) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L2d201c.  v1:= temp @kind object;
  #L2d201e.  call temp:= `cacheResponse`(v0, v1) @signature `Lokhttp3/Response$Builder;.cacheResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2d2024.  v0:= temp @kind object;
  #L2d2026.  call temp:= `stripBody`(v6) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L2d202c.  v1:= temp @kind object;
  #L2d202e.  call temp:= `networkResponse`(v0, v1) @signature `Lokhttp3/Response$Builder;.networkResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2d2034.  v0:= temp @kind object;
  #L2d2036.  call temp:= `build`(v0) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L2d203c.  v0:= temp @kind object;
  #L2d203e.  call temp:= `body`(v6) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L2d2044.  v6:= temp @kind object;
  #L2d2046.  call `close`(v6) @signature `Lokhttp3/ResponseBody;.close:()V` @kind virtual;
  #L2d204c.  v6:= v5.`okhttp3.internal.cache.CacheInterceptor.a` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L2d2050.  call `trackConditionalCacheHit`(v6) @signature `Lokhttp3/internal/cache/InternalCache;.trackConditionalCacheHit:()V` @kind interface;
  #L2d2056.  v6:= v5.`okhttp3.internal.cache.CacheInterceptor.a` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L2d205a.  call `update`(v6, v3, v0) @signature `Lokhttp3/internal/cache/InternalCache;.update:(Lokhttp3/Response;Lokhttp3/Response;)V` @kind interface;
  #L2d2060.  return v0 @kind object;
  #L2d2062.  call temp:= `body`(v3) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L2d2068.  v0:= temp @kind object;
  #L2d206a.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L2d2070.  call temp:= `newBuilder`(v6) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L2d2076.  v0:= temp @kind object;
  #L2d2078.  call temp:= `stripBody`(v3) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L2d207e.  v1:= temp @kind object;
  #L2d2080.  call temp:= `cacheResponse`(v0, v1) @signature `Lokhttp3/Response$Builder;.cacheResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2d2086.  v0:= temp @kind object;
  #L2d2088.  call temp:= `stripBody`(v6) @signature `Lokhttp3/internal/cache/CacheInterceptor;.stripBody:(Lokhttp3/Response;)Lokhttp3/Response;` @kind static;
  #L2d208e.  v6:= temp @kind object;
  #L2d2090.  call temp:= `networkResponse`(v0, v6) @signature `Lokhttp3/Response$Builder;.networkResponse:(Lokhttp3/Response;)Lokhttp3/Response$Builder;` @kind virtual;
  #L2d2096.  v6:= temp @kind object;
  #L2d2098.  call temp:= `build`(v6) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L2d209e.  v6:= temp @kind object;
  #L2d20a0.  v0:= v5.`okhttp3.internal.cache.CacheInterceptor.a` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L2d20a4.  if v0 == 0 then goto L2d20f4;
  #L2d20a8.  call temp:= `hasBody`(v6) @signature `Lokhttp3/internal/http/HttpHeaders;.hasBody:(Lokhttp3/Response;)Z` @kind static;
  #L2d20ae.  v0:= temp;
  #L2d20b0.  if v0 == 0 then goto L2d20d6;
  #L2d20b4.  call temp:= `isCacheable`(v6, v2) @signature `Lokhttp3/internal/cache/CacheStrategy;.isCacheable:(Lokhttp3/Response;Lokhttp3/Request;)Z` @kind static;
  #L2d20ba.  v0:= temp;
  #L2d20bc.  if v0 == 0 then goto L2d20d6;
  #L2d20c0.  v0:= v5.`okhttp3.internal.cache.CacheInterceptor.a` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L2d20c4.  call temp:= `put`(v0, v6) @signature `Lokhttp3/internal/cache/InternalCache;.put:(Lokhttp3/Response;)Lokhttp3/internal/cache/CacheRequest;` @kind interface;
  #L2d20ca.  v0:= temp @kind object;
  #L2d20cc.  call temp:= `cacheWritingResponse`(v5, v0, v6) @signature `Lokhttp3/internal/cache/CacheInterceptor;.cacheWritingResponse:(Lokhttp3/internal/cache/CacheRequest;Lokhttp3/Response;)Lokhttp3/Response;` @kind direct;
  #L2d20d2.  v6:= temp @kind object;
  #L2d20d4.  return v6 @kind object;
  #L2d20d6.  call temp:= `method`(v2) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L2d20dc.  v0:= temp @kind object;
  #L2d20de.  call temp:= `invalidatesCache`(v0) @signature `Lokhttp3/internal/http/HttpMethod;.invalidatesCache:(Ljava/lang/String;)Z` @kind static;
  #L2d20e4.  v0:= temp;
  #L2d20e6.  if v0 == 0 then goto L2d20f4;
  #L2d20ea.  v0:= v5.`okhttp3.internal.cache.CacheInterceptor.a` @type ^`okhttp3.internal.cache.InternalCache` @kind object;
  #L2d20ee.  call `remove`(v0, v2) @signature `Lokhttp3/internal/cache/InternalCache;.remove:(Lokhttp3/Request;)V` @kind interface;
  #L2d20f4.  return v6 @kind object;
  #L2d20f6.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2d20f8.  if v0 == 0 then goto L2d210a;
  #L2d20fc.  call temp:= `body`(v0) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L2d2102.  v0:= temp @kind object;
  #L2d2104.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L2d210a.  throw v6;
  catch `java.lang.Throwable` @[L2d1f9c..L2d1fa4] goto L2d20f6;
  catch `java.io.IOException` @[L2d20ea..L2d20f4] goto L2d20f4;
}
