record `okhttp3.internal.cache.DiskLruCache$3` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `okhttp3.internal.cache.DiskLruCache$3.a` @AccessFlag FINAL;
  `okhttp3.internal.cache.DiskLruCache$Snapshot` `okhttp3.internal.cache.DiskLruCache$3.b` @AccessFlag ;
  `okhttp3.internal.cache.DiskLruCache$Snapshot` `okhttp3.internal.cache.DiskLruCache$3.c` @AccessFlag ;
  `okhttp3.internal.cache.DiskLruCache` `okhttp3.internal.cache.DiskLruCache$3.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.cache.DiskLruCache$3` v1 @kind this, `okhttp3.internal.cache.DiskLruCache` v2 @kind object) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.<init>:(Lokhttp3/internal/cache/DiskLruCache;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2d290c.  v1.`okhttp3.internal.cache.DiskLruCache$3.d` @type ^`okhttp3.internal.cache.DiskLruCache` := v2 @kind object;
  #L2d2910.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d2916.  v0:= new `java.util.ArrayList`;
  #L2d291a.  v2:= v2.`okhttp3.internal.cache.DiskLruCache.f` @type ^`java.util.LinkedHashMap` @kind object;
  #L2d291e.  call temp:= `values`(v2) @signature `Ljava/util/LinkedHashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L2d2924.  v2:= temp @kind object;
  #L2d2926.  call `<init>`(v0, v2) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L2d292c.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L2d2932.  v2:= temp @kind object;
  #L2d2934.  v1.`okhttp3.internal.cache.DiskLruCache$3.a` @type ^`java.util.Iterator` := v2 @kind object;
  #L2d2938.  return @kind void;
}
procedure `boolean` `hasNext`(`okhttp3.internal.cache.DiskLruCache$3` v4 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2d2834.  v0:= v4.`okhttp3.internal.cache.DiskLruCache$3.b` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` @kind object;
  #L2d2838.  v1:= 1I;
  #L2d283a.  if v0 == 0 then goto L2d2840;
  #L2d283e.  return v1;
  #L2d2840.  v0:= v4.`okhttp3.internal.cache.DiskLruCache$3.d` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L2d2844.  @monitorenter v0
  #L2d2846.  v2:= v4.`okhttp3.internal.cache.DiskLruCache$3.d` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L2d284a.  v2:= v2.`okhttp3.internal.cache.DiskLruCache.j` @type ^`boolean` @kind boolean;
  #L2d284e.  v3:= 0I;
  #L2d2850.  if v2 == 0 then goto L2d2858;
  #L2d2854.  @monitorexit v0
  #L2d2856.  return v3;
  #L2d2858.  v2:= v4.`okhttp3.internal.cache.DiskLruCache$3.a` @type ^`java.util.Iterator` @kind object;
  #L2d285c.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2d2862.  v2:= temp;
  #L2d2864.  if v2 == 0 then goto L2d288e;
  #L2d2868.  v2:= v4.`okhttp3.internal.cache.DiskLruCache$3.a` @type ^`java.util.Iterator` @kind object;
  #L2d286c.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2d2872.  v2:= temp @kind object;
  #L2d2874.  v2:= (`okhttp3.internal.cache.DiskLruCache$Entry`) v2 @kind object;
  #L2d2878.  call temp:= `b`(v2) @signature `Lokhttp3/internal/cache/DiskLruCache$Entry;.b:()Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @kind virtual;
  #L2d287e.  v2:= temp @kind object;
  #L2d2880.  if v2 != 0 then goto L2d2886;
  #L2d2884.  goto L2d2858;
  #L2d2886.  v4.`okhttp3.internal.cache.DiskLruCache$3.b` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v2 @kind object;
  #L2d288a.  @monitorexit v0
  #L2d288c.  return v1;
  #L2d288e.  @monitorexit v0
  #L2d2890.  return v3;
  #L2d2892.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2d2894.  @monitorexit v0
  #L2d2896.  goto L2d289a;
  #L2d2898.  throw v1;
  #L2d289a.  goto L2d2898;
  catch `java.lang.Throwable` @[L2d2846..L2d2896] goto L2d2892;
}
procedure `java.lang.Object` `next`(`okhttp3.internal.cache.DiskLruCache$3` v1 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2d28b8.  call temp:= `next`(v1) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.next:()Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @kind virtual;
  #L2d28be.  v0:= temp @kind object;
  #L2d28c0.  return v0 @kind object;
}
procedure `okhttp3.internal.cache.DiskLruCache$Snapshot` `next`(`okhttp3.internal.cache.DiskLruCache$3` v2 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.next:()Lokhttp3/internal/cache/DiskLruCache$Snapshot;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2d28d4.  call temp:= `hasNext`(v2) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.hasNext:()Z` @kind virtual;
  #L2d28da.  v0:= temp;
  #L2d28dc.  if v0 == 0 then goto L2d28f0;
  #L2d28e0.  v0:= v2.`okhttp3.internal.cache.DiskLruCache$3.b` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` @kind object;
  #L2d28e4.  v2.`okhttp3.internal.cache.DiskLruCache$3.c` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v0 @kind object;
  #L2d28e8.  v1:= 0I;
  #L2d28ea.  v2.`okhttp3.internal.cache.DiskLruCache$3.b` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v1 @kind object;
  #L2d28ee.  return v0 @kind object;
  #L2d28f0.  v0:= new `java.util.NoSuchElementException`;
  #L2d28f4.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L2d28fa.  throw v0;
}
procedure `void` `remove`(`okhttp3.internal.cache.DiskLruCache$3` v3 @kind this) @signature `Lokhttp3/internal/cache/DiskLruCache$3;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2d294c.  v0:= v3.`okhttp3.internal.cache.DiskLruCache$3.c` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` @kind object;
  #L2d2950.  if v0 == 0 then goto L2d2978;
  #L2d2954.  v1:= 0I;
  #L2d2956.  v2:= v3.`okhttp3.internal.cache.DiskLruCache$3.d` @type ^`okhttp3.internal.cache.DiskLruCache` @kind object;
  #L2d295a.  call temp:= `a`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.a:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;)Ljava/lang/String;` @kind static;
  #L2d2960.  v0:= temp @kind object;
  #L2d2962.  call temp:= `remove`(v2, v0) @signature `Lokhttp3/internal/cache/DiskLruCache;.remove:(Ljava/lang/String;)Z` @kind virtual;
  #L2d2968.  goto L2d2972;
  #L2d296a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2d296c.  v3.`okhttp3.internal.cache.DiskLruCache$3.c` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v1 @kind object;
  #L2d2970.  throw v0;
  #L2d2972.  v3.`okhttp3.internal.cache.DiskLruCache$3.c` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v1 @kind object;
  #L2d2976.  return @kind void;
  #L2d2978.  v0:= new `java.lang.IllegalStateException`;
  #L2d297c.  v1:= "remove() before next()" @kind object;
  #L2d2980.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d2986.  throw v0;
  catch `java.io.IOException` @[L2d2956..L2d2968] goto L2d2972;
  catch `java.lang.Throwable` @[L2d2956..L2d2968] goto L2d296a;
}
