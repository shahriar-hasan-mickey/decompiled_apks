record `okhttp3.internal.cache2.FileOperator` @kind class @AccessFlag FINAL {
  `java.nio.channels.FileChannel` `okhttp3.internal.cache2.FileOperator.fileChannel` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.cache2.FileOperator` v0 @kind this, `java.nio.channels.FileChannel` v1 @kind object) @signature `Lokhttp3/internal/cache2/FileOperator;.<init>:(Ljava/nio/channels/FileChannel;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2d3078.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d307e.  v0.`okhttp3.internal.cache2.FileOperator.fileChannel` @type ^`java.nio.channels.FileChannel` := v1 @kind object;
  #L2d3082.  return @kind void;
}
procedure `void` `read`(`okhttp3.internal.cache2.FileOperator` v9 @kind this, `long` v10 , `okio.Buffer` v12 @kind object, `long` v13 ) @signature `Lokhttp3/internal/cache2/FileOperator;.read:(JLokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2d3094.  v0:= 0L;
  #L2d3098.  v2:= lcmp(v13, v0);
  #L2d309c.  if v2 < 0 then goto L2d30c2;
  #L2d30a0.  v2:= lcmp(v13, v0);
  #L2d30a4.  if v2 <= 0 then goto L2d30c0;
  #L2d30a8.  v3:= v9.`okhttp3.internal.cache2.FileOperator.fileChannel` @type ^`java.nio.channels.FileChannel` @kind object;
  #L2d30ac.  v4:= v10 @kind wide;
  #L2d30ae.  v6:= v13 @kind wide;
  #L2d30b0.  v8:= v12 @kind object;
  #L2d30b2.  call temp:= `transferTo`(v3, v4, v6, v8) @signature `Ljava/nio/channels/FileChannel;.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J` @kind virtual;
  #L2d30b8.  v2:= temp @kind wide;
  #L2d30ba.  v10:= v10 + v2 @kind long;
  #L2d30bc.  v13:= v13 - v2 @kind long;
  #L2d30be.  goto L2d30a0;
  #L2d30c0.  return @kind void;
  #L2d30c2.  v10:= new `java.lang.IndexOutOfBoundsException`;
  #L2d30c6.  call `<init>`(v10) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L2d30cc.  goto L2d30d0;
  #L2d30ce.  throw v10;
  #L2d30d0.  goto L2d30ce;
}
procedure `void` `write`(`okhttp3.internal.cache2.FileOperator` v13 @kind this, `long` v14 , `okio.Buffer` v16 @kind object, `long` v17 ) @signature `Lokhttp3/internal/cache2/FileOperator;.write:(JLokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L2d30e4.  v0:= 0L;
  #L2d30e8.  v2:= lcmp(v17, v0);
  #L2d30ec.  if v2 < 0 then goto L2d312e;
  #L2d30f0.  call temp:= `size`(v16) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2d30f6.  v2:= temp @kind wide;
  #L2d30f8.  v4:= lcmp(v17, v2);
  #L2d30fc.  if v4 > 0 then goto L2d312e;
  #L2d3100.  v2:= v14 @kind wide;
  #L2d3102.  v11:= v17 @kind wide;
  #L2d3106.  v4:= lcmp(v11, v0);
  #L2d310a.  if v4 <= 0 then goto L2d312a;
  #L2d310e.  v4:= v13 @kind object;
  #L2d3110.  v5:= v4.`okhttp3.internal.cache2.FileOperator.fileChannel` @type ^`java.nio.channels.FileChannel` @kind object;
  #L2d3114.  v6:= v16 @kind object;
  #L2d3118.  v7:= v2 @kind wide;
  #L2d311a.  v9:= v11 @kind wide;
  #L2d311c.  call temp:= `transferFrom`(v5, v6, v7, v9) @signature `Ljava/nio/channels/FileChannel;.transferFrom:(Ljava/nio/channels/ReadableByteChannel;JJ)J` @kind virtual;
  #L2d3122.  v5:= temp @kind wide;
  #L2d3124.  v2:= v2 + v5 @kind long;
  #L2d3126.  v11:= v11 - v5 @kind long;
  #L2d3128.  goto L2d3106;
  #L2d312a.  v4:= v13 @kind object;
  #L2d312c.  return @kind void;
  #L2d312e.  v4:= v13 @kind object;
  #L2d3130.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L2d3134.  call `<init>`(v0) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L2d313a.  goto L2d313e;
  #L2d313c.  throw v0;
  #L2d313e.  goto L2d313c;
}
