record `okhttp3.internal.ws.WebSocketWriter$FrameSink` @kind class @AccessFlag FINAL extends `okio.Sink` @kind interface {
  `int` `okhttp3.internal.ws.WebSocketWriter$FrameSink.a` @AccessFlag ;
  `long` `okhttp3.internal.ws.WebSocketWriter$FrameSink.b` @AccessFlag ;
  `boolean` `okhttp3.internal.ws.WebSocketWriter$FrameSink.c` @AccessFlag ;
  `boolean` `okhttp3.internal.ws.WebSocketWriter$FrameSink.d` @AccessFlag ;
  `okhttp3.internal.ws.WebSocketWriter` `okhttp3.internal.ws.WebSocketWriter$FrameSink.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketWriter$FrameSink` v0 @kind this, `okhttp3.internal.ws.WebSocketWriter` v1 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.<init>:(Lokhttp3/internal/ws/WebSocketWriter;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2e0cd4.  v0.`okhttp3.internal.ws.WebSocketWriter$FrameSink.e` @type ^`okhttp3.internal.ws.WebSocketWriter` := v1 @kind object;
  #L2e0cd8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e0cde.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.ws.WebSocketWriter$FrameSink` v7 @kind this) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2e0cf0.  v0:= v7.`okhttp3.internal.ws.WebSocketWriter$FrameSink.d` @type ^`boolean` @kind boolean;
  #L2e0cf4.  if v0 != 0 then goto L2e0d2a;
  #L2e0cf8.  v1:= v7.`okhttp3.internal.ws.WebSocketWriter$FrameSink.e` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L2e0cfc.  v2:= v7.`okhttp3.internal.ws.WebSocketWriter$FrameSink.a` @type ^`int`;
  #L2e0d00.  v0:= v1.`okhttp3.internal.ws.WebSocketWriter.f` @type ^`okio.Buffer` @kind object;
  #L2e0d04.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2e0d0a.  v3:= temp @kind wide;
  #L2e0d0c.  v5:= v7.`okhttp3.internal.ws.WebSocketWriter$FrameSink.c` @type ^`boolean` @kind boolean;
  #L2e0d10.  v6:= 1I;
  #L2e0d12.  call `c`(v1, v2, v3, v5, v6) @signature `Lokhttp3/internal/ws/WebSocketWriter;.c:(IJZZ)V` @kind virtual;
  #L2e0d18.  v0:= 1I;
  #L2e0d1a.  v7.`okhttp3.internal.ws.WebSocketWriter$FrameSink.d` @type ^`boolean` := v0 @kind boolean;
  #L2e0d1e.  v0:= v7.`okhttp3.internal.ws.WebSocketWriter$FrameSink.e` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L2e0d22.  v1:= 0I;
  #L2e0d24.  v0.`okhttp3.internal.ws.WebSocketWriter.h` @type ^`boolean` := v1 @kind boolean;
  #L2e0d28.  return @kind void;
  #L2e0d2a.  v0:= new `java.io.IOException`;
  #L2e0d2e.  v1:= "closed" @kind object;
  #L2e0d32.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e0d38.  throw v0;
}
procedure `void` `flush`(`okhttp3.internal.ws.WebSocketWriter$FrameSink` v7 @kind this) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2e0d4c.  v0:= v7.`okhttp3.internal.ws.WebSocketWriter$FrameSink.d` @type ^`boolean` @kind boolean;
  #L2e0d50.  if v0 != 0 then goto L2e0d7c;
  #L2e0d54.  v1:= v7.`okhttp3.internal.ws.WebSocketWriter$FrameSink.e` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L2e0d58.  v2:= v7.`okhttp3.internal.ws.WebSocketWriter$FrameSink.a` @type ^`int`;
  #L2e0d5c.  v0:= v1.`okhttp3.internal.ws.WebSocketWriter.f` @type ^`okio.Buffer` @kind object;
  #L2e0d60.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2e0d66.  v3:= temp @kind wide;
  #L2e0d68.  v5:= v7.`okhttp3.internal.ws.WebSocketWriter$FrameSink.c` @type ^`boolean` @kind boolean;
  #L2e0d6c.  v6:= 0I;
  #L2e0d6e.  call `c`(v1, v2, v3, v5, v6) @signature `Lokhttp3/internal/ws/WebSocketWriter;.c:(IJZZ)V` @kind virtual;
  #L2e0d74.  v0:= 0I;
  #L2e0d76.  v7.`okhttp3.internal.ws.WebSocketWriter$FrameSink.c` @type ^`boolean` := v0 @kind boolean;
  #L2e0d7a.  return @kind void;
  #L2e0d7c.  v0:= new `java.io.IOException`;
  #L2e0d80.  v1:= "closed" @kind object;
  #L2e0d84.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e0d8a.  throw v0;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.ws.WebSocketWriter$FrameSink` v1 @kind this) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e0cb0.  v0:= v1.`okhttp3.internal.ws.WebSocketWriter$FrameSink.e` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L2e0cb4.  v0:= v0.`okhttp3.internal.ws.WebSocketWriter.c` @type ^`okio.BufferedSink` @kind object;
  #L2e0cb8.  call temp:= `timeout`(v0) @signature `Lokio/Sink;.timeout:()Lokio/Timeout;` @kind interface;
  #L2e0cbe.  v0:= temp @kind object;
  #L2e0cc0.  return v0 @kind object;
}
procedure `void` `write`(`okhttp3.internal.ws.WebSocketWriter$FrameSink` v6 @kind this, `okio.Buffer` v7 @kind object, `long` v8 ) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2e0d9c.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.d` @type ^`boolean` @kind boolean;
  #L2e0da0.  if v0 != 0 then goto L2e0e2e;
  #L2e0da4.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.e` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L2e0da8.  v0:= v0.`okhttp3.internal.ws.WebSocketWriter.f` @type ^`okio.Buffer` @kind object;
  #L2e0dac.  call `write`(v0, v7, v8) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L2e0db2.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.c` @type ^`boolean` @kind boolean;
  #L2e0db6.  v8:= 0I;
  #L2e0db8.  if v7 == 0 then goto L2e0df2;
  #L2e0dbc.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.b` @type ^`long` @kind wide;
  #L2e0dc0.  v2:= -1L;
  #L2e0dc4.  v7:= lcmp(v0, v2);
  #L2e0dc8.  if v7 == 0 then goto L2e0df2;
  #L2e0dcc.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.e` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L2e0dd0.  v7:= v7.`okhttp3.internal.ws.WebSocketWriter.f` @type ^`okio.Buffer` @kind object;
  #L2e0dd4.  call temp:= `size`(v7) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2e0dda.  v0:= temp @kind wide;
  #L2e0ddc.  v2:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.b` @type ^`long` @kind wide;
  #L2e0de0.  v4:= 8192L;
  #L2e0de4.  v2:= v2 - v4 @kind long;
  #L2e0de6.  v7:= lcmp(v0, v2);
  #L2e0dea.  if v7 <= 0 then goto L2e0df2;
  #L2e0dee.  v7:= 1I;
  #L2e0df0.  goto L2e0df4;
  #L2e0df2.  v7:= 0I;
  #L2e0df4.  v9:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.e` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L2e0df8.  v9:= v9.`okhttp3.internal.ws.WebSocketWriter.f` @type ^`okio.Buffer` @kind object;
  #L2e0dfc.  call temp:= `completeSegmentByteCount`(v9) @signature `Lokio/Buffer;.completeSegmentByteCount:()J` @kind virtual;
  #L2e0e02.  v2:= temp @kind wide;
  #L2e0e04.  v0:= 0L;
  #L2e0e08.  v9:= lcmp(v2, v0);
  #L2e0e0c.  if v9 <= 0 then goto L2e0e2c;
  #L2e0e10.  if v7 != 0 then goto L2e0e2c;
  #L2e0e14.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.e` @type ^`okhttp3.internal.ws.WebSocketWriter` @kind object;
  #L2e0e18.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.a` @type ^`int`;
  #L2e0e1c.  v4:= v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.c` @type ^`boolean` @kind boolean;
  #L2e0e20.  v5:= 0I;
  #L2e0e22.  call `c`(v0, v1, v2, v4, v5) @signature `Lokhttp3/internal/ws/WebSocketWriter;.c:(IJZZ)V` @kind virtual;
  #L2e0e28.  v6.`okhttp3.internal.ws.WebSocketWriter$FrameSink.c` @type ^`boolean` := v8 @kind boolean;
  #L2e0e2c.  return @kind void;
  #L2e0e2e.  v7:= new `java.io.IOException`;
  #L2e0e32.  v8:= "closed" @kind object;
  #L2e0e36.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e0e3c.  throw v7;
}
