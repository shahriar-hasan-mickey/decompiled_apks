record `okhttp3.internal.ws.WebSocketWriter` @kind class @AccessFlag FINAL {
  `boolean` `okhttp3.internal.ws.WebSocketWriter.a` @AccessFlag FINAL;
  `java.util.Random` `okhttp3.internal.ws.WebSocketWriter.b` @AccessFlag FINAL;
  `okio.BufferedSink` `okhttp3.internal.ws.WebSocketWriter.c` @AccessFlag FINAL;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketWriter.d` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketWriter.e` @AccessFlag ;
  `okio.Buffer` `okhttp3.internal.ws.WebSocketWriter.f` @AccessFlag FINAL;
  `okhttp3.internal.ws.WebSocketWriter$FrameSink` `okhttp3.internal.ws.WebSocketWriter.g` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.ws.WebSocketWriter.h` @AccessFlag ;
  `okio.Buffer$UnsafeCursor` `okhttp3.internal.ws.WebSocketWriter.maskCursor` @AccessFlag PRIVATE_FINAL;
  `byte`[] `okhttp3.internal.ws.WebSocketWriter.maskKey` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `boolean` v2 , `okio.BufferedSink` v3 @kind object, `java.util.Random` v4 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.<init>:(ZLokio/BufferedSink;Ljava/util/Random;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2e0e98.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e0e9e.  v0:= new `okio.Buffer`;
  #L2e0ea2.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L2e0ea8.  v1.`okhttp3.internal.ws.WebSocketWriter.f` @type ^`okio.Buffer` := v0 @kind object;
  #L2e0eac.  v0:= new `okhttp3.internal.ws.WebSocketWriter$FrameSink`;
  #L2e0eb0.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/ws/WebSocketWriter$FrameSink;.<init>:(Lokhttp3/internal/ws/WebSocketWriter;)V` @kind direct;
  #L2e0eb6.  v1.`okhttp3.internal.ws.WebSocketWriter.g` @type ^`okhttp3.internal.ws.WebSocketWriter$FrameSink` := v0 @kind object;
  #L2e0eba.  if v3 == 0 then goto L2e0f12;
  #L2e0ebe.  if v4 == 0 then goto L2e0f02;
  #L2e0ec2.  v1.`okhttp3.internal.ws.WebSocketWriter.a` @type ^`boolean` := v2 @kind boolean;
  #L2e0ec6.  v1.`okhttp3.internal.ws.WebSocketWriter.c` @type ^`okio.BufferedSink` := v3 @kind object;
  #L2e0eca.  call temp:= `buffer`(v3) @signature `Lokio/BufferedSink;.buffer:()Lokio/Buffer;` @kind interface;
  #L2e0ed0.  v3:= temp @kind object;
  #L2e0ed2.  v1.`okhttp3.internal.ws.WebSocketWriter.d` @type ^`okio.Buffer` := v3 @kind object;
  #L2e0ed6.  v1.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`java.util.Random` := v4 @kind object;
  #L2e0eda.  v3:= 0I;
  #L2e0edc.  if v2 == 0 then goto L2e0ee8;
  #L2e0ee0.  v4:= 4I;
  #L2e0ee2.  v4:= new `byte`[v4];
  #L2e0ee6.  goto L2e0eea;
  #L2e0ee8.  v4:= v3 @kind object;
  #L2e0eea.  v1.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] := v4 @kind object;
  #L2e0eee.  if v2 == 0 then goto L2e0efc;
  #L2e0ef2.  v3:= new `okio.Buffer$UnsafeCursor`;
  #L2e0ef6.  call `<init>`(v3) @signature `Lokio/Buffer$UnsafeCursor;.<init>:()V` @kind direct;
  #L2e0efc.  v1.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` := v3 @kind object;
  #L2e0f00.  return @kind void;
  #L2e0f02.  v2:= new `java.lang.NullPointerException`;
  #L2e0f06.  v3:= "random == null" @kind object;
  #L2e0f0a.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e0f10.  throw v2;
  #L2e0f12.  v2:= new `java.lang.NullPointerException`;
  #L2e0f16.  v3:= "sink == null" @kind object;
  #L2e0f1a.  call `<init>`(v2, v3) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e0f20.  throw v2;
}
procedure `void` `writeControlFrame`(`okhttp3.internal.ws.WebSocketWriter` v6 @kind this, `int` v7 , `okio.ByteString` v8 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2e0fa4.  v0:= v6.`okhttp3.internal.ws.WebSocketWriter.e` @type ^`boolean` @kind boolean;
  #L2e0fa8.  if v0 != 0 then goto L2e107e;
  #L2e0fac.  call temp:= `size`(v8) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L2e0fb2.  v0:= temp;
  #L2e0fb4.  v1:= (`long`) v0 @kind i2l;
  #L2e0fb6.  v3:= 125L;
  #L2e0fba.  v5:= lcmp(v1, v3);
  #L2e0fbe.  if v5 > 0 then goto L2e106e;
  #L2e0fc2.  v7:= v7 ^| 128;
  #L2e0fc6.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter.d` @type ^`okio.Buffer` @kind object;
  #L2e0fca.  call temp:= `writeByte`(v1, v7) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L2e0fd0.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.a` @type ^`boolean` @kind boolean;
  #L2e0fd4.  if v7 == 0 then goto L2e104e;
  #L2e0fd8.  v7:= v0 ^| 128;
  #L2e0fdc.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter.d` @type ^`okio.Buffer` @kind object;
  #L2e0fe0.  call temp:= `writeByte`(v1, v7) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L2e0fe6.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`java.util.Random` @kind object;
  #L2e0fea.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L2e0fee.  call `nextBytes`(v7, v1) @signature `Ljava/util/Random;.nextBytes:([B)V` @kind virtual;
  #L2e0ff4.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.d` @type ^`okio.Buffer` @kind object;
  #L2e0ff8.  v1:= v6.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L2e0ffc.  call temp:= `write`(v7, v1) @signature `Lokio/Buffer;.write:([B)Lokio/Buffer;` @kind virtual;
  #L2e1002.  if v0 <= 0 then goto L2e1062;
  #L2e1006.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.d` @type ^`okio.Buffer` @kind object;
  #L2e100a.  call temp:= `size`(v7) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2e1010.  v0:= temp @kind wide;
  #L2e1012.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.d` @type ^`okio.Buffer` @kind object;
  #L2e1016.  call temp:= `write`(v7, v8) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L2e101c.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.d` @type ^`okio.Buffer` @kind object;
  #L2e1020.  v8:= v6.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L2e1024.  call temp:= `readAndWriteUnsafe`(v7, v8) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L2e102a.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L2e102e.  call temp:= `seek`(v7, v0) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L2e1034.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L2e1038.  v8:= v6.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L2e103c.  call `b`(v7, v8) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.b:(Lokio/Buffer$UnsafeCursor;[B)V` @kind static;
  #L2e1042.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L2e1046.  call `close`(v7) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L2e104c.  goto L2e1062;
  #L2e104e.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.d` @type ^`okio.Buffer` @kind object;
  #L2e1052.  call temp:= `writeByte`(v7, v0) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L2e1058.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.d` @type ^`okio.Buffer` @kind object;
  #L2e105c.  call temp:= `write`(v7, v8) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L2e1062.  v7:= v6.`okhttp3.internal.ws.WebSocketWriter.c` @type ^`okio.BufferedSink` @kind object;
  #L2e1066.  call `flush`(v7) @signature `Lokio/BufferedSink;.flush:()V` @kind interface;
  #L2e106c.  return @kind void;
  #L2e106e.  v7:= new `java.lang.IllegalArgumentException`;
  #L2e1072.  v8:= "Payload size must be less than or equal to 125" @kind object;
  #L2e1076.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e107c.  throw v7;
  #L2e107e.  v7:= new `java.io.IOException`;
  #L2e1082.  v8:= "closed" @kind object;
  #L2e1086.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e108c.  throw v7;
}
procedure `okio.Sink` `a`(`okhttp3.internal.ws.WebSocketWriter` v2 @kind this, `int` v3 , `long` v4 ) @signature `Lokhttp3/internal/ws/WebSocketWriter;.a:(IJ)Lokio/Sink;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2e0e50.  v0:= v2.`okhttp3.internal.ws.WebSocketWriter.h` @type ^`boolean` @kind boolean;
  #L2e0e54.  if v0 != 0 then goto L2e0e76;
  #L2e0e58.  v0:= 1I;
  #L2e0e5a.  v2.`okhttp3.internal.ws.WebSocketWriter.h` @type ^`boolean` := v0 @kind boolean;
  #L2e0e5e.  v1:= v2.`okhttp3.internal.ws.WebSocketWriter.g` @type ^`okhttp3.internal.ws.WebSocketWriter$FrameSink` @kind object;
  #L2e0e62.  v1.`okhttp3.internal.ws.WebSocketWriter$FrameSink.a` @type ^`int` := v3;
  #L2e0e66.  v1.`okhttp3.internal.ws.WebSocketWriter$FrameSink.b` @type ^`long` := v4 @kind wide;
  #L2e0e6a.  v1.`okhttp3.internal.ws.WebSocketWriter$FrameSink.c` @type ^`boolean` := v0 @kind boolean;
  #L2e0e6e.  v3:= 0I;
  #L2e0e70.  v1.`okhttp3.internal.ws.WebSocketWriter$FrameSink.d` @type ^`boolean` := v3 @kind boolean;
  #L2e0e74.  return v1 @kind object;
  #L2e0e76.  v3:= new `java.lang.IllegalStateException`;
  #L2e0e7a.  v4:= "Another message writer is active. Did you call close()?" @kind object;
  #L2e0e7e.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e0e84.  throw v3;
}
procedure `void` `b`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `int` v2 , `okio.ByteString` v3 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.b:(ILokio/ByteString;)V` @AccessFlag  {
    temp;
    v0;

  #L2e0f34.  v0:= `@@okio.ByteString.EMPTY` @type ^`okio.ByteString` @kind object;
  #L2e0f38.  if v2 != 0 then goto L2e0f40;
  #L2e0f3c.  if v3 == 0 then goto L2e0f6c;
  #L2e0f40.  if v2 == 0 then goto L2e0f4a;
  #L2e0f44.  call `c`(v2) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.c:(I)V` @kind static;
  #L2e0f4a.  v0:= new `okio.Buffer`;
  #L2e0f4e.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L2e0f54.  call temp:= `writeShort`(v0, v2) @signature `Lokio/Buffer;.writeShort:(I)Lokio/Buffer;` @kind virtual;
  #L2e0f5a.  if v3 == 0 then goto L2e0f64;
  #L2e0f5e.  call temp:= `write`(v0, v3) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L2e0f64.  call temp:= `readByteString`(v0) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L2e0f6a.  v0:= temp @kind object;
  #L2e0f6c.  v2:= 8I;
  #L2e0f70.  v3:= 1I;
  #L2e0f72.  call `writeControlFrame`(v1, v2, v0) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @kind direct;
  #L2e0f78.  v1.`okhttp3.internal.ws.WebSocketWriter.e` @type ^`boolean` := v3 @kind boolean;
  #L2e0f7c.  return @kind void;
  #L2e0f7e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2e0f80.  v1.`okhttp3.internal.ws.WebSocketWriter.e` @type ^`boolean` := v3 @kind boolean;
  #L2e0f84.  throw v2;
  catch `java.lang.Throwable` @[L2e0f72..L2e0f78] goto L2e0f7e;
}
procedure `void` `c`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `int` v2 , `long` v3 , `boolean` v5 , `boolean` v6 ) @signature `Lokhttp3/internal/ws/WebSocketWriter;.c:(IJZZ)V` @AccessFlag  {
    temp;
    v0;

  #L2e10a0.  v0:= v1.`okhttp3.internal.ws.WebSocketWriter.e` @type ^`boolean` @kind boolean;
  #L2e10a4.  if v0 != 0 then goto L2e11c4;
  #L2e10a8.  v0:= 0I;
  #L2e10aa.  if v5 == 0 then goto L2e10b0;
  #L2e10ae.  goto L2e10b2;
  #L2e10b0.  v2:= 0I;
  #L2e10b2.  if v6 == 0 then goto L2e10ba;
  #L2e10b6.  v2:= v2 ^| 128;
  #L2e10ba.  v5:= v1.`okhttp3.internal.ws.WebSocketWriter.d` @type ^`okio.Buffer` @kind object;
  #L2e10be.  call temp:= `writeByte`(v5, v2) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L2e10c4.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.a` @type ^`boolean` @kind boolean;
  #L2e10c8.  if v2 == 0 then goto L2e10d0;
  #L2e10cc.  v0:= 128I;
  #L2e10d0.  v5:= 125L;
  #L2e10d4.  v2:= lcmp(v3, v5);
  #L2e10d8.  if v2 > 0 then goto L2e10ec;
  #L2e10dc.  v2:= (`int`) v3 @kind l2i;
  #L2e10de.  v2:= v2 ^| v0 @kind int;
  #L2e10e0.  v5:= v1.`okhttp3.internal.ws.WebSocketWriter.d` @type ^`okio.Buffer` @kind object;
  #L2e10e4.  call temp:= `writeByte`(v5, v2) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L2e10ea.  goto L2e112e;
  #L2e10ec.  v5:= 65535L;
  #L2e10f2.  v2:= lcmp(v3, v5);
  #L2e10f6.  if v2 > 0 then goto L2e1116;
  #L2e10fa.  v2:= v0 ^| 126;
  #L2e10fe.  v5:= v1.`okhttp3.internal.ws.WebSocketWriter.d` @type ^`okio.Buffer` @kind object;
  #L2e1102.  call temp:= `writeByte`(v5, v2) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L2e1108.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.d` @type ^`okio.Buffer` @kind object;
  #L2e110c.  v5:= (`int`) v3 @kind l2i;
  #L2e110e.  call temp:= `writeShort`(v2, v5) @signature `Lokio/Buffer;.writeShort:(I)Lokio/Buffer;` @kind virtual;
  #L2e1114.  goto L2e112e;
  #L2e1116.  v2:= v0 ^| 127;
  #L2e111a.  v5:= v1.`okhttp3.internal.ws.WebSocketWriter.d` @type ^`okio.Buffer` @kind object;
  #L2e111e.  call temp:= `writeByte`(v5, v2) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L2e1124.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.d` @type ^`okio.Buffer` @kind object;
  #L2e1128.  call temp:= `writeLong`(v2, v3) @signature `Lokio/Buffer;.writeLong:(J)Lokio/Buffer;` @kind virtual;
  #L2e112e.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.a` @type ^`boolean` @kind boolean;
  #L2e1132.  if v2 == 0 then goto L2e11aa;
  #L2e1136.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.b` @type ^`java.util.Random` @kind object;
  #L2e113a.  v5:= v1.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L2e113e.  call `nextBytes`(v2, v5) @signature `Ljava/util/Random;.nextBytes:([B)V` @kind virtual;
  #L2e1144.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.d` @type ^`okio.Buffer` @kind object;
  #L2e1148.  v5:= v1.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L2e114c.  call temp:= `write`(v2, v5) @signature `Lokio/Buffer;.write:([B)Lokio/Buffer;` @kind virtual;
  #L2e1152.  v5:= 0L;
  #L2e1156.  v2:= lcmp(v3, v5);
  #L2e115a.  if v2 <= 0 then goto L2e11b8;
  #L2e115e.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.d` @type ^`okio.Buffer` @kind object;
  #L2e1162.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2e1168.  v5:= temp @kind wide;
  #L2e116a.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.d` @type ^`okio.Buffer` @kind object;
  #L2e116e.  v0:= v1.`okhttp3.internal.ws.WebSocketWriter.f` @type ^`okio.Buffer` @kind object;
  #L2e1172.  call `write`(v2, v0, v3) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L2e1178.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.d` @type ^`okio.Buffer` @kind object;
  #L2e117c.  v3:= v1.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L2e1180.  call temp:= `readAndWriteUnsafe`(v2, v3) @signature `Lokio/Buffer;.readAndWriteUnsafe:(Lokio/Buffer$UnsafeCursor;)Lokio/Buffer$UnsafeCursor;` @kind virtual;
  #L2e1186.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L2e118a.  call temp:= `seek`(v2, v5) @signature `Lokio/Buffer$UnsafeCursor;.seek:(J)I` @kind virtual;
  #L2e1190.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L2e1194.  v3:= v1.`okhttp3.internal.ws.WebSocketWriter.maskKey` @type ^`byte`[] @kind object;
  #L2e1198.  call `b`(v2, v3) @signature `Lokhttp3/internal/ws/WebSocketProtocol;.b:(Lokio/Buffer$UnsafeCursor;[B)V` @kind static;
  #L2e119e.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.maskCursor` @type ^`okio.Buffer$UnsafeCursor` @kind object;
  #L2e11a2.  call `close`(v2) @signature `Lokio/Buffer$UnsafeCursor;.close:()V` @kind virtual;
  #L2e11a8.  goto L2e11b8;
  #L2e11aa.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.d` @type ^`okio.Buffer` @kind object;
  #L2e11ae.  v5:= v1.`okhttp3.internal.ws.WebSocketWriter.f` @type ^`okio.Buffer` @kind object;
  #L2e11b2.  call `write`(v2, v5, v3) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L2e11b8.  v2:= v1.`okhttp3.internal.ws.WebSocketWriter.c` @type ^`okio.BufferedSink` @kind object;
  #L2e11bc.  call temp:= `emit`(v2) @signature `Lokio/BufferedSink;.emit:()Lokio/BufferedSink;` @kind interface;
  #L2e11c2.  return @kind void;
  #L2e11c4.  v2:= new `java.io.IOException`;
  #L2e11c8.  v3:= "closed" @kind object;
  #L2e11cc.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e11d2.  throw v2;
}
procedure `void` `d`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `okio.ByteString` v2 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.d:(Lokio/ByteString;)V` @AccessFlag  {
    temp;
    v0;

  #L2e11e4.  v0:= 9I;
  #L2e11e8.  call `writeControlFrame`(v1, v0, v2) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @kind direct;
  #L2e11ee.  return @kind void;
}
procedure `void` `e`(`okhttp3.internal.ws.WebSocketWriter` v1 @kind this, `okio.ByteString` v2 @kind object) @signature `Lokhttp3/internal/ws/WebSocketWriter;.e:(Lokio/ByteString;)V` @AccessFlag  {
    temp;
    v0;

  #L2e1200.  v0:= 10I;
  #L2e1204.  call `writeControlFrame`(v1, v0, v2) @signature `Lokhttp3/internal/ws/WebSocketWriter;.writeControlFrame:(ILokio/ByteString;)V` @kind direct;
  #L2e120a.  return @kind void;
}
