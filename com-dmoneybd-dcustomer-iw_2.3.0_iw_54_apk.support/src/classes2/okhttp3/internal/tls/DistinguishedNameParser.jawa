record `okhttp3.internal.tls.DistinguishedNameParser` @kind class @AccessFlag FINAL {
  `int` `okhttp3.internal.tls.DistinguishedNameParser.beg` @AccessFlag PRIVATE;
  `char`[] `okhttp3.internal.tls.DistinguishedNameParser.chars` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.tls.DistinguishedNameParser.cur` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.internal.tls.DistinguishedNameParser.dn` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.internal.tls.DistinguishedNameParser.end` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.tls.DistinguishedNameParser.length` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.internal.tls.DistinguishedNameParser.pos` @AccessFlag PRIVATE;
}
procedure `java.lang.String` `escapedAV`(`okhttp3.internal.tls.DistinguishedNameParser` v8 @kind this) @signature `Lokhttp3/internal/tls/DistinguishedNameParser;.escapedAV:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2df7c4.  v0:= v8.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int`;
  #L2df7c8.  v8.`okhttp3.internal.tls.DistinguishedNameParser.beg` @type ^`int` := v0;
  #L2df7cc.  v8.`okhttp3.internal.tls.DistinguishedNameParser.end` @type ^`int` := v0;
  #L2df7d0.  v0:= v8.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int`;
  #L2df7d4.  v1:= v8.`okhttp3.internal.tls.DistinguishedNameParser.length` @type ^`int`;
  #L2df7d8.  if v0 < v1 then goto L2df7f6;
  #L2df7dc.  v0:= new `java.lang.String`;
  #L2df7e0.  v1:= v8.`okhttp3.internal.tls.DistinguishedNameParser.chars` @type ^`char`[] @kind object;
  #L2df7e4.  v2:= v8.`okhttp3.internal.tls.DistinguishedNameParser.beg` @type ^`int`;
  #L2df7e8.  v3:= v8.`okhttp3.internal.tls.DistinguishedNameParser.end` @type ^`int`;
  #L2df7ec.  v3:= v3 - v2 @kind int;
  #L2df7ee.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L2df7f4.  return v0 @kind object;
  #L2df7f6.  v1:= v8.`okhttp3.internal.tls.DistinguishedNameParser.chars` @type ^`char`[] @kind object;
  #L2df7fa.  v2:= v1[v0] @kind char;
  #L2df7fe.  v3:= 44I;
  #L2df802.  v4:= 43I;
  #L2df806.  v5:= 59I;
  #L2df80a.  v6:= 32I;
  #L2df80e.  if v2 == v6 then goto L2df87c;
  #L2df812.  if v2 == v5 then goto L2df862;
  #L2df816.  v5:= 92I;
  #L2df81a.  if v2 == v5 then goto L2df83c;
  #L2df81e.  if v2 == v4 then goto L2df862;
  #L2df822.  if v2 == v3 then goto L2df862;
  #L2df826.  v2:= v8.`okhttp3.internal.tls.DistinguishedNameParser.end` @type ^`int`;
  #L2df82a.  v3:= v2 + 1;
  #L2df82e.  v8.`okhttp3.internal.tls.DistinguishedNameParser.end` @type ^`int` := v3;
  #L2df832.  v3:= v1[v0] @kind char;
  #L2df836.  v1[v2]:= v3 @kind char;
  #L2df83a.  goto L2df858;
  #L2df83c.  v0:= v8.`okhttp3.internal.tls.DistinguishedNameParser.end` @type ^`int`;
  #L2df840.  v2:= v0 + 1;
  #L2df844.  v8.`okhttp3.internal.tls.DistinguishedNameParser.end` @type ^`int` := v2;
  #L2df848.  call temp:= `getEscaped`(v8) @signature `Lokhttp3/internal/tls/DistinguishedNameParser;.getEscaped:()C` @kind direct;
  #L2df84e.  v2:= temp;
  #L2df850.  v1[v0]:= v2 @kind char;
  #L2df854.  v0:= v8.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int`;
  #L2df858.  v0:= v0 + 1;
  #L2df85c.  v8.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int` := v0;
  #L2df860.  goto L2df7d0;
  #L2df862.  v0:= new `java.lang.String`;
  #L2df866.  v1:= v8.`okhttp3.internal.tls.DistinguishedNameParser.chars` @type ^`char`[] @kind object;
  #L2df86a.  v2:= v8.`okhttp3.internal.tls.DistinguishedNameParser.beg` @type ^`int`;
  #L2df86e.  v3:= v8.`okhttp3.internal.tls.DistinguishedNameParser.end` @type ^`int`;
  #L2df872.  v3:= v3 - v2 @kind int;
  #L2df874.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L2df87a.  return v0 @kind object;
  #L2df87c.  v2:= v8.`okhttp3.internal.tls.DistinguishedNameParser.end` @type ^`int`;
  #L2df880.  v8.`okhttp3.internal.tls.DistinguishedNameParser.cur` @type ^`int` := v2;
  #L2df884.  v0:= v0 + 1;
  #L2df888.  v8.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int` := v0;
  #L2df88c.  v0:= v2 + 1;
  #L2df890.  v8.`okhttp3.internal.tls.DistinguishedNameParser.end` @type ^`int` := v0;
  #L2df894.  v1[v2]:= v6 @kind char;
  #L2df898.  v0:= v8.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int`;
  #L2df89c.  v1:= v8.`okhttp3.internal.tls.DistinguishedNameParser.length` @type ^`int`;
  #L2df8a0.  if v0 >= v1 then goto L2df8ca;
  #L2df8a4.  v2:= v8.`okhttp3.internal.tls.DistinguishedNameParser.chars` @type ^`char`[] @kind object;
  #L2df8a8.  v7:= v2[v0] @kind char;
  #L2df8ac.  if v7 != v6 then goto L2df8ca;
  #L2df8b0.  v1:= v8.`okhttp3.internal.tls.DistinguishedNameParser.end` @type ^`int`;
  #L2df8b4.  v7:= v1 + 1;
  #L2df8b8.  v8.`okhttp3.internal.tls.DistinguishedNameParser.end` @type ^`int` := v7;
  #L2df8bc.  v2[v1]:= v6 @kind char;
  #L2df8c0.  v0:= v0 + 1;
  #L2df8c4.  v8.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int` := v0;
  #L2df8c8.  goto L2df898;
  #L2df8ca.  if v0 == v1 then goto L2df8ea;
  #L2df8ce.  v1:= v8.`okhttp3.internal.tls.DistinguishedNameParser.chars` @type ^`char`[] @kind object;
  #L2df8d2.  v2:= v1[v0] @kind char;
  #L2df8d6.  if v2 == v3 then goto L2df8ea;
  #L2df8da.  v2:= v1[v0] @kind char;
  #L2df8de.  if v2 == v4 then goto L2df8ea;
  #L2df8e2.  v0:= v1[v0] @kind char;
  #L2df8e6.  if v0 != v5 then goto L2df7d0;
  #L2df8ea.  v0:= new `java.lang.String`;
  #L2df8ee.  v1:= v8.`okhttp3.internal.tls.DistinguishedNameParser.chars` @type ^`char`[] @kind object;
  #L2df8f2.  v2:= v8.`okhttp3.internal.tls.DistinguishedNameParser.beg` @type ^`int`;
  #L2df8f6.  v3:= v8.`okhttp3.internal.tls.DistinguishedNameParser.cur` @type ^`int`;
  #L2df8fa.  v3:= v3 - v2 @kind int;
  #L2df8fc.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L2df902.  return v0 @kind object;
}
procedure `int` `getByte`(`okhttp3.internal.tls.DistinguishedNameParser` v9 @kind this, `int` v10 ) @signature `Lokhttp3/internal/tls/DistinguishedNameParser;.getByte:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2df6a0.  v0:= v10 + 1;
  #L2df6a4.  v1:= v9.`okhttp3.internal.tls.DistinguishedNameParser.length` @type ^`int`;
  #L2df6a8.  v2:= "Malformed DN: " @kind object;
  #L2df6ac.  if v0 >= v1 then goto L2df784;
  #L2df6b0.  v1:= v9.`okhttp3.internal.tls.DistinguishedNameParser.chars` @type ^`char`[] @kind object;
  #L2df6b4.  v10:= v1[v10] @kind char;
  #L2df6b8.  v3:= 70I;
  #L2df6bc.  v4:= 102I;
  #L2df6c0.  v5:= 65I;
  #L2df6c4.  v6:= 57I;
  #L2df6c8.  v7:= 97I;
  #L2df6cc.  v8:= 48I;
  #L2df6d0.  if v10 < v8 then goto L2df6dc;
  #L2df6d4.  if v10 > v6 then goto L2df6dc;
  #L2df6d8.  v10:= v10 - v8 @kind int;
  #L2df6da.  goto L2df6f6;
  #L2df6dc.  if v10 < v7 then goto L2df6ea;
  #L2df6e0.  if v10 > v4 then goto L2df6ea;
  #L2df6e4.  v10:= v10 + -87;
  #L2df6e8.  goto L2df6f6;
  #L2df6ea.  if v10 < v5 then goto L2df756;
  #L2df6ee.  if v10 > v3 then goto L2df756;
  #L2df6f2.  v10:= v10 + -55;
  #L2df6f6.  v0:= v1[v0] @kind char;
  #L2df6fa.  if v0 < v8 then goto L2df706;
  #L2df6fe.  if v0 > v6 then goto L2df706;
  #L2df702.  v0:= v0 - v8 @kind int;
  #L2df704.  goto L2df720;
  #L2df706.  if v0 < v7 then goto L2df714;
  #L2df70a.  if v0 > v4 then goto L2df714;
  #L2df70e.  v0:= v0 + -87;
  #L2df712.  goto L2df720;
  #L2df714.  if v0 < v5 then goto L2df728;
  #L2df718.  if v0 > v3 then goto L2df728;
  #L2df71c.  v0:= v0 + -55;
  #L2df720.  v10:= v10 ^< 4;
  #L2df724.  v10:= v10 + v0 @kind int;
  #L2df726.  return v10;
  #L2df728.  v10:= new `java.lang.IllegalStateException`;
  #L2df72c.  v0:= new `java.lang.StringBuilder`;
  #L2df730.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2df736.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2df73c.  v1:= v9.`okhttp3.internal.tls.DistinguishedNameParser.dn` @type ^`java.lang.String` @kind object;
  #L2df740.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2df746.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2df74c.  v0:= temp @kind object;
  #L2df74e.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2df754.  throw v10;
  #L2df756.  v10:= new `java.lang.IllegalStateException`;
  #L2df75a.  v0:= new `java.lang.StringBuilder`;
  #L2df75e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2df764.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2df76a.  v1:= v9.`okhttp3.internal.tls.DistinguishedNameParser.dn` @type ^`java.lang.String` @kind object;
  #L2df76e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2df774.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2df77a.  v0:= temp @kind object;
  #L2df77c.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2df782.  throw v10;
  #L2df784.  v10:= new `java.lang.IllegalStateException`;
  #L2df788.  v0:= new `java.lang.StringBuilder`;
  #L2df78c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2df792.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2df798.  v1:= v9.`okhttp3.internal.tls.DistinguishedNameParser.dn` @type ^`java.lang.String` @kind object;
  #L2df79c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2df7a2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2df7a8.  v0:= temp @kind object;
  #L2df7aa.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2df7b0.  throw v10;
}
procedure `char` `getEscaped`(`okhttp3.internal.tls.DistinguishedNameParser` v4 @kind this) @signature `Lokhttp3/internal/tls/DistinguishedNameParser;.getEscaped:()C` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2df4f4.  v0:= v4.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int`;
  #L2df4f8.  v0:= v0 + 1;
  #L2df4fc.  v4.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int` := v0;
  #L2df500.  v1:= v4.`okhttp3.internal.tls.DistinguishedNameParser.length` @type ^`int`;
  #L2df504.  if v0 == v1 then goto L2df55c;
  #L2df508.  v1:= v4.`okhttp3.internal.tls.DistinguishedNameParser.chars` @type ^`char`[] @kind object;
  #L2df50c.  v2:= v1[v0] @kind char;
  #L2df510.  v3:= 32I;
  #L2df514.  if v2 == v3 then goto L2df556;
  #L2df518.  v3:= 37I;
  #L2df51c.  if v2 == v3 then goto L2df556;
  #L2df520.  v3:= 92I;
  #L2df524.  if v2 == v3 then goto L2df556;
  #L2df528.  v3:= 95I;
  #L2df52c.  if v2 == v3 then goto L2df556;
  #L2df530.  v3:= 34I;
  #L2df534.  if v2 == v3 then goto L2df556;
  #L2df538.  v3:= 35I;
  #L2df53c.  if v2 == v3 then goto L2df556;
  #L2df540.  goto L2df590;
  #L2df546.  goto L2df5a4;
  #L2df54c.  call temp:= `getUTF8`(v4) @signature `Lokhttp3/internal/tls/DistinguishedNameParser;.getUTF8:()C` @kind direct;
  #L2df552.  v0:= temp;
  #L2df554.  return v0;
  #L2df556.  v0:= v1[v0] @kind char;
  #L2df55a.  return v0;
  #L2df55c.  v0:= new `java.lang.IllegalStateException`;
  #L2df560.  v1:= new `java.lang.StringBuilder`;
  #L2df564.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2df56a.  v2:= "Unexpected end of DN: " @kind object;
  #L2df56e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2df574.  v2:= v4.`okhttp3.internal.tls.DistinguishedNameParser.dn` @type ^`java.lang.String` @kind object;
  #L2df578.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2df57e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2df584.  v1:= temp @kind object;
  #L2df586.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2df58c.  throw v0;
  #L2df58e.  
  #L2df590.  switch v2
                  | 42 => goto L2df556
                  | 43 => goto L2df556
                  | 44 => goto L2df556
                  | else => goto L2df546;
  #L2df5a4.  switch v2
                  | 59 => goto L2df556
                  | 60 => goto L2df556
                  | 61 => goto L2df556
                  | 62 => goto L2df556
                  | else => goto L2df54c;
}
procedure `char` `getUTF8`(`okhttp3.internal.tls.DistinguishedNameParser` v9 @kind this) @signature `Lokhttp3/internal/tls/DistinguishedNameParser;.getUTF8:()C` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2df5cc.  v0:= v9.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int`;
  #L2df5d0.  call temp:= `getByte`(v9, v0) @signature `Lokhttp3/internal/tls/DistinguishedNameParser;.getByte:(I)I` @kind direct;
  #L2df5d6.  v0:= temp;
  #L2df5d8.  v1:= v9.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int`;
  #L2df5dc.  v2:= 1I;
  #L2df5de.  v1:= v1 + v2 @kind int;
  #L2df5e0.  v9.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int` := v1;
  #L2df5e4.  v1:= 128I;
  #L2df5e8.  if v0 >= v1 then goto L2df5f0;
  #L2df5ec.  v0:= (`char`) v0 @kind i2c;
  #L2df5ee.  return v0;
  #L2df5f0.  v3:= 192I;
  #L2df5f4.  v4:= 63I;
  #L2df5f8.  if v0 < v3 then goto L2df68e;
  #L2df5fc.  v3:= 247I;
  #L2df600.  if v0 > v3 then goto L2df68e;
  #L2df604.  v3:= 223I;
  #L2df608.  if v0 > v3 then goto L2df614;
  #L2df60c.  v0:= v0 ^& 31;
  #L2df610.  v3:= 1I;
  #L2df612.  goto L2df62a;
  #L2df614.  v3:= 239I;
  #L2df618.  if v0 > v3 then goto L2df624;
  #L2df61c.  v3:= 2I;
  #L2df61e.  v0:= v0 ^& 15;
  #L2df622.  goto L2df62a;
  #L2df624.  v3:= 3I;
  #L2df626.  v0:= v0 ^& 7;
  #L2df62a.  v5:= 0I;
  #L2df62c.  if v5 >= v3 then goto L2df68a;
  #L2df630.  v6:= v9.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int`;
  #L2df634.  v6:= v6 + v2 @kind int;
  #L2df636.  v9.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int` := v6;
  #L2df63a.  v7:= v9.`okhttp3.internal.tls.DistinguishedNameParser.length` @type ^`int`;
  #L2df63e.  if v6 == v7 then goto L2df688;
  #L2df642.  v7:= v9.`okhttp3.internal.tls.DistinguishedNameParser.chars` @type ^`char`[] @kind object;
  #L2df646.  v7:= v7[v6] @kind char;
  #L2df64a.  v8:= 92I;
  #L2df64e.  if v7 == v8 then goto L2df654;
  #L2df652.  goto L2df688;
  #L2df654.  v6:= v6 + 1;
  #L2df658.  v9.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int` := v6;
  #L2df65c.  call temp:= `getByte`(v9, v6) @signature `Lokhttp3/internal/tls/DistinguishedNameParser;.getByte:(I)I` @kind direct;
  #L2df662.  v6:= temp;
  #L2df664.  v7:= v9.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int`;
  #L2df668.  v7:= v7 + v2 @kind int;
  #L2df66a.  v9.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int` := v7;
  #L2df66e.  v7:= v6 ^& 192;
  #L2df672.  if v7 == v1 then goto L2df678;
  #L2df676.  return v4;
  #L2df678.  v0:= v0 ^< 6;
  #L2df67c.  v6:= v6 ^& 63;
  #L2df680.  v0:= v0 + v6 @kind int;
  #L2df682.  v5:= v5 + 1;
  #L2df686.  goto L2df62c;
  #L2df688.  return v4;
  #L2df68a.  v0:= (`char`) v0 @kind i2c;
  #L2df68c.  return v0;
  #L2df68e.  return v4;
}
procedure `java.lang.String` `hexAV`(`okhttp3.internal.tls.DistinguishedNameParser` v6 @kind this) @signature `Lokhttp3/internal/tls/DistinguishedNameParser;.hexAV:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2dfa6c.  v0:= v6.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int`;
  #L2dfa70.  v1:= v0 + 4;
  #L2dfa74.  v2:= v6.`okhttp3.internal.tls.DistinguishedNameParser.length` @type ^`int`;
  #L2dfa78.  v3:= "Unexpected end of DN: " @kind object;
  #L2dfa7c.  if v1 >= v2 then goto L2dfba2;
  #L2dfa80.  v6.`okhttp3.internal.tls.DistinguishedNameParser.beg` @type ^`int` := v0;
  #L2dfa84.  v0:= v0 + 1;
  #L2dfa88.  v6.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int` := v0;
  #L2dfa8c.  v0:= v6.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int`;
  #L2dfa90.  v1:= v6.`okhttp3.internal.tls.DistinguishedNameParser.length` @type ^`int`;
  #L2dfa94.  if v0 == v1 then goto L2dfb1a;
  #L2dfa98.  v1:= v6.`okhttp3.internal.tls.DistinguishedNameParser.chars` @type ^`char`[] @kind object;
  #L2dfa9c.  v2:= v1[v0] @kind char;
  #L2dfaa0.  v4:= 43I;
  #L2dfaa4.  if v2 == v4 then goto L2dfb1a;
  #L2dfaa8.  v2:= v1[v0] @kind char;
  #L2dfaac.  v4:= 44I;
  #L2dfab0.  if v2 == v4 then goto L2dfb1a;
  #L2dfab4.  v2:= v1[v0] @kind char;
  #L2dfab8.  v4:= 59I;
  #L2dfabc.  if v2 != v4 then goto L2dfac2;
  #L2dfac0.  goto L2dfb1a;
  #L2dfac2.  v2:= v1[v0] @kind char;
  #L2dfac6.  v4:= 32I;
  #L2dfaca.  if v2 != v4 then goto L2dfaf4;
  #L2dface.  v6.`okhttp3.internal.tls.DistinguishedNameParser.end` @type ^`int` := v0;
  #L2dfad2.  v0:= v0 + 1;
  #L2dfad6.  v6.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int` := v0;
  #L2dfada.  v0:= v6.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int`;
  #L2dfade.  v1:= v6.`okhttp3.internal.tls.DistinguishedNameParser.length` @type ^`int`;
  #L2dfae2.  if v0 >= v1 then goto L2dfb1e;
  #L2dfae6.  v1:= v6.`okhttp3.internal.tls.DistinguishedNameParser.chars` @type ^`char`[] @kind object;
  #L2dfaea.  v1:= v1[v0] @kind char;
  #L2dfaee.  if v1 != v4 then goto L2dfb1e;
  #L2dfaf2.  goto L2dfad2;
  #L2dfaf4.  v2:= v1[v0] @kind char;
  #L2dfaf8.  v5:= 65I;
  #L2dfafc.  if v2 < v5 then goto L2dfa84;
  #L2dfb00.  v2:= v1[v0] @kind char;
  #L2dfb04.  v5:= 70I;
  #L2dfb08.  if v2 > v5 then goto L2dfa84;
  #L2dfb0c.  v2:= v1[v0] @kind char;
  #L2dfb10.  v2:= v2 + v4 @kind int;
  #L2dfb12.  v2:= (`char`) v2 @kind i2c;
  #L2dfb14.  v1[v0]:= v2 @kind char;
  #L2dfb18.  goto L2dfa84;
  #L2dfb1a.  v6.`okhttp3.internal.tls.DistinguishedNameParser.end` @type ^`int` := v0;
  #L2dfb1e.  v0:= v6.`okhttp3.internal.tls.DistinguishedNameParser.end` @type ^`int`;
  #L2dfb22.  v1:= v6.`okhttp3.internal.tls.DistinguishedNameParser.beg` @type ^`int`;
  #L2dfb26.  v0:= v0 - v1 @kind int;
  #L2dfb28.  v2:= 5I;
  #L2dfb2a.  if v0 < v2 then goto L2dfb74;
  #L2dfb2e.  v2:= v0 ^& 1;
  #L2dfb32.  if v2 == 0 then goto L2dfb74;
  #L2dfb36.  v2:= v0 / 2;
  #L2dfb3a.  v3:= new `byte`[v2];
  #L2dfb3e.  v4:= 0I;
  #L2dfb40.  v1:= v1 + 1;
  #L2dfb44.  if v4 >= v2 then goto L2dfb60;
  #L2dfb48.  call temp:= `getByte`(v6, v1) @signature `Lokhttp3/internal/tls/DistinguishedNameParser;.getByte:(I)I` @kind direct;
  #L2dfb4e.  v5:= temp;
  #L2dfb50.  v5:= (`byte`) v5 @kind i2b;
  #L2dfb52.  v3[v4]:= v5 @kind byte;
  #L2dfb56.  v1:= v1 + 2;
  #L2dfb5a.  v4:= v4 + 1;
  #L2dfb5e.  goto L2dfb44;
  #L2dfb60.  v1:= new `java.lang.String`;
  #L2dfb64.  v2:= v6.`okhttp3.internal.tls.DistinguishedNameParser.chars` @type ^`char`[] @kind object;
  #L2dfb68.  v3:= v6.`okhttp3.internal.tls.DistinguishedNameParser.beg` @type ^`int`;
  #L2dfb6c.  call `<init>`(v1, v2, v3, v0) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L2dfb72.  return v1 @kind object;
  #L2dfb74.  v0:= new `java.lang.IllegalStateException`;
  #L2dfb78.  v1:= new `java.lang.StringBuilder`;
  #L2dfb7c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2dfb82.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dfb88.  v2:= v6.`okhttp3.internal.tls.DistinguishedNameParser.dn` @type ^`java.lang.String` @kind object;
  #L2dfb8c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dfb92.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2dfb98.  v1:= temp @kind object;
  #L2dfb9a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2dfba0.  throw v0;
  #L2dfba2.  v0:= new `java.lang.IllegalStateException`;
  #L2dfba6.  v1:= new `java.lang.StringBuilder`;
  #L2dfbaa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2dfbb0.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dfbb6.  v2:= v6.`okhttp3.internal.tls.DistinguishedNameParser.dn` @type ^`java.lang.String` @kind object;
  #L2dfbba.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dfbc0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2dfbc6.  v1:= temp @kind object;
  #L2dfbc8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2dfbce.  goto L2dfbd2;
  #L2dfbd0.  throw v0;
  #L2dfbd2.  goto L2dfbd0;
}
procedure `java.lang.String` `nextAT`(`okhttp3.internal.tls.DistinguishedNameParser` v7 @kind this) @signature `Lokhttp3/internal/tls/DistinguishedNameParser;.nextAT:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2dfbe4.  v0:= v7.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int`;
  #L2dfbe8.  v1:= v7.`okhttp3.internal.tls.DistinguishedNameParser.length` @type ^`int`;
  #L2dfbec.  v2:= 32I;
  #L2dfbf0.  if v0 >= v1 then goto L2dfc0a;
  #L2dfbf4.  v3:= v7.`okhttp3.internal.tls.DistinguishedNameParser.chars` @type ^`char`[] @kind object;
  #L2dfbf8.  v3:= v3[v0] @kind char;
  #L2dfbfc.  if v3 != v2 then goto L2dfc0a;
  #L2dfc00.  v0:= v0 + 1;
  #L2dfc04.  v7.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int` := v0;
  #L2dfc08.  goto L2dfbe4;
  #L2dfc0a.  if v0 != v1 then goto L2dfc12;
  #L2dfc0e.  v0:= 0I;
  #L2dfc10.  return v0 @kind object;
  #L2dfc12.  v7.`okhttp3.internal.tls.DistinguishedNameParser.beg` @type ^`int` := v0;
  #L2dfc16.  v0:= v0 + 1;
  #L2dfc1a.  v7.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int` := v0;
  #L2dfc1e.  v0:= v7.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int`;
  #L2dfc22.  v1:= v7.`okhttp3.internal.tls.DistinguishedNameParser.length` @type ^`int`;
  #L2dfc26.  v3:= 61I;
  #L2dfc2a.  if v0 >= v1 then goto L2dfc44;
  #L2dfc2e.  v4:= v7.`okhttp3.internal.tls.DistinguishedNameParser.chars` @type ^`char`[] @kind object;
  #L2dfc32.  v5:= v4[v0] @kind char;
  #L2dfc36.  if v5 == v3 then goto L2dfc44;
  #L2dfc3a.  v4:= v4[v0] @kind char;
  #L2dfc3e.  if v4 == v2 then goto L2dfc44;
  #L2dfc42.  goto L2dfc16;
  #L2dfc44.  v4:= "Unexpected end of DN: " @kind object;
  #L2dfc48.  if v0 >= v1 then goto L2dfd88;
  #L2dfc4c.  v7.`okhttp3.internal.tls.DistinguishedNameParser.end` @type ^`int` := v0;
  #L2dfc50.  v1:= v7.`okhttp3.internal.tls.DistinguishedNameParser.chars` @type ^`char`[] @kind object;
  #L2dfc54.  v0:= v1[v0] @kind char;
  #L2dfc58.  if v0 != v2 then goto L2dfcc6;
  #L2dfc5c.  v0:= v7.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int`;
  #L2dfc60.  v1:= v7.`okhttp3.internal.tls.DistinguishedNameParser.length` @type ^`int`;
  #L2dfc64.  if v0 >= v1 then goto L2dfc86;
  #L2dfc68.  v5:= v7.`okhttp3.internal.tls.DistinguishedNameParser.chars` @type ^`char`[] @kind object;
  #L2dfc6c.  v6:= v5[v0] @kind char;
  #L2dfc70.  if v6 == v3 then goto L2dfc86;
  #L2dfc74.  v5:= v5[v0] @kind char;
  #L2dfc78.  if v5 != v2 then goto L2dfc86;
  #L2dfc7c.  v0:= v0 + 1;
  #L2dfc80.  v7.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int` := v0;
  #L2dfc84.  goto L2dfc5c;
  #L2dfc86.  v5:= v7.`okhttp3.internal.tls.DistinguishedNameParser.chars` @type ^`char`[] @kind object;
  #L2dfc8a.  v5:= v5[v0] @kind char;
  #L2dfc8e.  if v5 != v3 then goto L2dfc98;
  #L2dfc92.  if v0 == v1 then goto L2dfc98;
  #L2dfc96.  goto L2dfcc6;
  #L2dfc98.  v0:= new `java.lang.IllegalStateException`;
  #L2dfc9c.  v1:= new `java.lang.StringBuilder`;
  #L2dfca0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2dfca6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dfcac.  v2:= v7.`okhttp3.internal.tls.DistinguishedNameParser.dn` @type ^`java.lang.String` @kind object;
  #L2dfcb0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dfcb6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2dfcbc.  v1:= temp @kind object;
  #L2dfcbe.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2dfcc4.  throw v0;
  #L2dfcc6.  v0:= v7.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int`;
  #L2dfcca.  v0:= v0 + 1;
  #L2dfcce.  v7.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int` := v0;
  #L2dfcd2.  v0:= v7.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int`;
  #L2dfcd6.  v1:= v7.`okhttp3.internal.tls.DistinguishedNameParser.length` @type ^`int`;
  #L2dfcda.  if v0 >= v1 then goto L2dfcec;
  #L2dfcde.  v1:= v7.`okhttp3.internal.tls.DistinguishedNameParser.chars` @type ^`char`[] @kind object;
  #L2dfce2.  v1:= v1[v0] @kind char;
  #L2dfce6.  if v1 != v2 then goto L2dfcec;
  #L2dfcea.  goto L2dfcca;
  #L2dfcec.  v0:= v7.`okhttp3.internal.tls.DistinguishedNameParser.end` @type ^`int`;
  #L2dfcf0.  v1:= v7.`okhttp3.internal.tls.DistinguishedNameParser.beg` @type ^`int`;
  #L2dfcf4.  v0:= v0 - v1 @kind int;
  #L2dfcf6.  v2:= 4I;
  #L2dfcf8.  if v0 <= v2 then goto L2dfd6e;
  #L2dfcfc.  v0:= v7.`okhttp3.internal.tls.DistinguishedNameParser.chars` @type ^`char`[] @kind object;
  #L2dfd00.  v3:= v1 + 3;
  #L2dfd04.  v3:= v0[v3] @kind char;
  #L2dfd08.  v4:= 46I;
  #L2dfd0c.  if v3 != v4 then goto L2dfd6e;
  #L2dfd10.  v3:= v0[v1] @kind char;
  #L2dfd14.  v4:= 79I;
  #L2dfd18.  if v3 == v4 then goto L2dfd28;
  #L2dfd1c.  v3:= v0[v1] @kind char;
  #L2dfd20.  v4:= 111I;
  #L2dfd24.  if v3 != v4 then goto L2dfd6e;
  #L2dfd28.  v3:= v1 + 1;
  #L2dfd2c.  v3:= v0[v3] @kind char;
  #L2dfd30.  v4:= 73I;
  #L2dfd34.  if v3 == v4 then goto L2dfd48;
  #L2dfd38.  v3:= v1 + 1;
  #L2dfd3c.  v3:= v0[v3] @kind char;
  #L2dfd40.  v4:= 105I;
  #L2dfd44.  if v3 != v4 then goto L2dfd6e;
  #L2dfd48.  v3:= v1 + 2;
  #L2dfd4c.  v3:= v0[v3] @kind char;
  #L2dfd50.  v4:= 68I;
  #L2dfd54.  if v3 == v4 then goto L2dfd68;
  #L2dfd58.  v3:= v1 + 2;
  #L2dfd5c.  v0:= v0[v3] @kind char;
  #L2dfd60.  v3:= 100I;
  #L2dfd64.  if v0 != v3 then goto L2dfd6e;
  #L2dfd68.  v1:= v1 + v2 @kind int;
  #L2dfd6a.  v7.`okhttp3.internal.tls.DistinguishedNameParser.beg` @type ^`int` := v1;
  #L2dfd6e.  v0:= new `java.lang.String`;
  #L2dfd72.  v1:= v7.`okhttp3.internal.tls.DistinguishedNameParser.chars` @type ^`char`[] @kind object;
  #L2dfd76.  v2:= v7.`okhttp3.internal.tls.DistinguishedNameParser.beg` @type ^`int`;
  #L2dfd7a.  v3:= v7.`okhttp3.internal.tls.DistinguishedNameParser.end` @type ^`int`;
  #L2dfd7e.  v3:= v3 - v2 @kind int;
  #L2dfd80.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L2dfd86.  return v0 @kind object;
  #L2dfd88.  v0:= new `java.lang.IllegalStateException`;
  #L2dfd8c.  v1:= new `java.lang.StringBuilder`;
  #L2dfd90.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2dfd96.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dfd9c.  v2:= v7.`okhttp3.internal.tls.DistinguishedNameParser.dn` @type ^`java.lang.String` @kind object;
  #L2dfda0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dfda6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2dfdac.  v1:= temp @kind object;
  #L2dfdae.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2dfdb4.  goto L2dfdb8;
  #L2dfdb6.  throw v0;
  #L2dfdb8.  goto L2dfdb6;
}
procedure `java.lang.String` `quotedAV`(`okhttp3.internal.tls.DistinguishedNameParser` v4 @kind this) @signature `Lokhttp3/internal/tls/DistinguishedNameParser;.quotedAV:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2dfdcc.  v0:= v4.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int`;
  #L2dfdd0.  v0:= v0 + 1;
  #L2dfdd4.  v4.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int` := v0;
  #L2dfdd8.  v4.`okhttp3.internal.tls.DistinguishedNameParser.beg` @type ^`int` := v0;
  #L2dfddc.  v4.`okhttp3.internal.tls.DistinguishedNameParser.end` @type ^`int` := v0;
  #L2dfde0.  v0:= v4.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int`;
  #L2dfde4.  v1:= v4.`okhttp3.internal.tls.DistinguishedNameParser.length` @type ^`int`;
  #L2dfde8.  if v0 == v1 then goto L2dfe7c;
  #L2dfdec.  v1:= v4.`okhttp3.internal.tls.DistinguishedNameParser.chars` @type ^`char`[] @kind object;
  #L2dfdf0.  v2:= v1[v0] @kind char;
  #L2dfdf4.  v3:= 34I;
  #L2dfdf8.  if v2 != v3 then goto L2dfe3c;
  #L2dfdfc.  v0:= v0 + 1;
  #L2dfe00.  v4.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int` := v0;
  #L2dfe04.  v0:= v4.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int`;
  #L2dfe08.  v1:= v4.`okhttp3.internal.tls.DistinguishedNameParser.length` @type ^`int`;
  #L2dfe0c.  if v0 >= v1 then goto L2dfe22;
  #L2dfe10.  v1:= v4.`okhttp3.internal.tls.DistinguishedNameParser.chars` @type ^`char`[] @kind object;
  #L2dfe14.  v1:= v1[v0] @kind char;
  #L2dfe18.  v2:= 32I;
  #L2dfe1c.  if v1 != v2 then goto L2dfe22;
  #L2dfe20.  goto L2dfdfc;
  #L2dfe22.  v0:= new `java.lang.String`;
  #L2dfe26.  v1:= v4.`okhttp3.internal.tls.DistinguishedNameParser.chars` @type ^`char`[] @kind object;
  #L2dfe2a.  v2:= v4.`okhttp3.internal.tls.DistinguishedNameParser.beg` @type ^`int`;
  #L2dfe2e.  v3:= v4.`okhttp3.internal.tls.DistinguishedNameParser.end` @type ^`int`;
  #L2dfe32.  v3:= v3 - v2 @kind int;
  #L2dfe34.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L2dfe3a.  return v0 @kind object;
  #L2dfe3c.  v2:= v1[v0] @kind char;
  #L2dfe40.  v3:= 92I;
  #L2dfe44.  if v2 != v3 then goto L2dfe5a;
  #L2dfe48.  v0:= v4.`okhttp3.internal.tls.DistinguishedNameParser.end` @type ^`int`;
  #L2dfe4c.  call temp:= `getEscaped`(v4) @signature `Lokhttp3/internal/tls/DistinguishedNameParser;.getEscaped:()C` @kind direct;
  #L2dfe52.  v2:= temp;
  #L2dfe54.  v1[v0]:= v2 @kind char;
  #L2dfe58.  goto L2dfe66;
  #L2dfe5a.  v2:= v4.`okhttp3.internal.tls.DistinguishedNameParser.end` @type ^`int`;
  #L2dfe5e.  v0:= v1[v0] @kind char;
  #L2dfe62.  v1[v2]:= v0 @kind char;
  #L2dfe66.  v0:= v4.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int`;
  #L2dfe6a.  v0:= v0 + 1;
  #L2dfe6e.  v4.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int` := v0;
  #L2dfe72.  v0:= v4.`okhttp3.internal.tls.DistinguishedNameParser.end` @type ^`int`;
  #L2dfe76.  v0:= v0 + 1;
  #L2dfe7a.  goto L2dfddc;
  #L2dfe7c.  v0:= new `java.lang.IllegalStateException`;
  #L2dfe80.  v1:= new `java.lang.StringBuilder`;
  #L2dfe84.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2dfe8a.  v2:= "Unexpected end of DN: " @kind object;
  #L2dfe8e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dfe94.  v2:= v4.`okhttp3.internal.tls.DistinguishedNameParser.dn` @type ^`java.lang.String` @kind object;
  #L2dfe98.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dfe9e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2dfea4.  v1:= temp @kind object;
  #L2dfea6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2dfeac.  goto L2dfeb0;
  #L2dfeae.  throw v0;
  #L2dfeb0.  goto L2dfeae;
}
procedure `java.lang.String` `findMostSpecific`(`okhttp3.internal.tls.DistinguishedNameParser` v8 @kind this, `java.lang.String` v9 @kind object) @signature `Lokhttp3/internal/tls/DistinguishedNameParser;.findMostSpecific:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2df914.  v0:= 0I;
  #L2df916.  v8.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int` := v0;
  #L2df91a.  v8.`okhttp3.internal.tls.DistinguishedNameParser.beg` @type ^`int` := v0;
  #L2df91e.  v8.`okhttp3.internal.tls.DistinguishedNameParser.end` @type ^`int` := v0;
  #L2df922.  v8.`okhttp3.internal.tls.DistinguishedNameParser.cur` @type ^`int` := v0;
  #L2df926.  v0:= v8.`okhttp3.internal.tls.DistinguishedNameParser.dn` @type ^`java.lang.String` @kind object;
  #L2df92a.  call temp:= `toCharArray`(v0) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L2df930.  v0:= temp @kind object;
  #L2df932.  v8.`okhttp3.internal.tls.DistinguishedNameParser.chars` @type ^`char`[] := v0 @kind object;
  #L2df936.  call temp:= `nextAT`(v8) @signature `Lokhttp3/internal/tls/DistinguishedNameParser;.nextAT:()Ljava/lang/String;` @kind direct;
  #L2df93c.  v0:= temp @kind object;
  #L2df93e.  v1:= 0I;
  #L2df940.  if v0 != 0 then goto L2df946;
  #L2df944.  return v1 @kind object;
  #L2df946.  v2:= v8.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int`;
  #L2df94a.  v3:= v8.`okhttp3.internal.tls.DistinguishedNameParser.length` @type ^`int`;
  #L2df94e.  if v2 != v3 then goto L2df954;
  #L2df952.  return v1 @kind object;
  #L2df954.  v3:= v8.`okhttp3.internal.tls.DistinguishedNameParser.chars` @type ^`char`[] @kind object;
  #L2df958.  v2:= v3[v2] @kind char;
  #L2df95c.  v3:= 34I;
  #L2df960.  v4:= 59I;
  #L2df964.  v5:= 44I;
  #L2df968.  v6:= 43I;
  #L2df96c.  if v2 == v3 then goto L2df99e;
  #L2df970.  v3:= 35I;
  #L2df974.  if v2 == v3 then goto L2df994;
  #L2df978.  if v2 == v6 then goto L2df98e;
  #L2df97c.  if v2 == v5 then goto L2df98e;
  #L2df980.  if v2 == v4 then goto L2df98e;
  #L2df984.  call temp:= `escapedAV`(v8) @signature `Lokhttp3/internal/tls/DistinguishedNameParser;.escapedAV:()Ljava/lang/String;` @kind direct;
  #L2df98a.  v2:= temp @kind object;
  #L2df98c.  goto L2df9a6;
  #L2df98e.  v2:= "" @kind object;
  #L2df992.  goto L2df9a6;
  #L2df994.  call temp:= `hexAV`(v8) @signature `Lokhttp3/internal/tls/DistinguishedNameParser;.hexAV:()Ljava/lang/String;` @kind direct;
  #L2df99a.  v2:= temp @kind object;
  #L2df99c.  goto L2df9a6;
  #L2df99e.  call temp:= `quotedAV`(v8) @signature `Lokhttp3/internal/tls/DistinguishedNameParser;.quotedAV:()Ljava/lang/String;` @kind direct;
  #L2df9a4.  v2:= temp @kind object;
  #L2df9a6.  call temp:= `equalsIgnoreCase`(v9, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2df9ac.  v0:= temp;
  #L2df9ae.  if v0 == 0 then goto L2df9b4;
  #L2df9b2.  return v2 @kind object;
  #L2df9b4.  v0:= v8.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int`;
  #L2df9b8.  v2:= v8.`okhttp3.internal.tls.DistinguishedNameParser.length` @type ^`int`;
  #L2df9bc.  if v0 < v2 then goto L2df9c2;
  #L2df9c0.  return v1 @kind object;
  #L2df9c2.  v2:= v8.`okhttp3.internal.tls.DistinguishedNameParser.chars` @type ^`char`[] @kind object;
  #L2df9c6.  v3:= v2[v0] @kind char;
  #L2df9ca.  v7:= "Malformed DN: " @kind object;
  #L2df9ce.  if v3 == v5 then goto L2dfa14;
  #L2df9d2.  v3:= v2[v0] @kind char;
  #L2df9d6.  if v3 != v4 then goto L2df9dc;
  #L2df9da.  goto L2dfa14;
  #L2df9dc.  v2:= v2[v0] @kind char;
  #L2df9e0.  if v2 != v6 then goto L2df9e6;
  #L2df9e4.  goto L2dfa14;
  #L2df9e6.  v9:= new `java.lang.IllegalStateException`;
  #L2df9ea.  v0:= new `java.lang.StringBuilder`;
  #L2df9ee.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2df9f4.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2df9fa.  v1:= v8.`okhttp3.internal.tls.DistinguishedNameParser.dn` @type ^`java.lang.String` @kind object;
  #L2df9fe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dfa04.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2dfa0a.  v0:= temp @kind object;
  #L2dfa0c.  call `<init>`(v9, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2dfa12.  throw v9;
  #L2dfa14.  v0:= v0 + 1;
  #L2dfa18.  v8.`okhttp3.internal.tls.DistinguishedNameParser.pos` @type ^`int` := v0;
  #L2dfa1c.  call temp:= `nextAT`(v8) @signature `Lokhttp3/internal/tls/DistinguishedNameParser;.nextAT:()Ljava/lang/String;` @kind direct;
  #L2dfa22.  v0:= temp @kind object;
  #L2dfa24.  if v0 == 0 then goto L2dfa2a;
  #L2dfa28.  goto L2df946;
  #L2dfa2a.  v9:= new `java.lang.IllegalStateException`;
  #L2dfa2e.  v0:= new `java.lang.StringBuilder`;
  #L2dfa32.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2dfa38.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dfa3e.  v1:= v8.`okhttp3.internal.tls.DistinguishedNameParser.dn` @type ^`java.lang.String` @kind object;
  #L2dfa42.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2dfa48.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2dfa4e.  v0:= temp @kind object;
  #L2dfa50.  call `<init>`(v9, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2dfa56.  goto L2dfa5a;
  #L2dfa58.  throw v9;
  #L2dfa5a.  goto L2dfa58;
}
