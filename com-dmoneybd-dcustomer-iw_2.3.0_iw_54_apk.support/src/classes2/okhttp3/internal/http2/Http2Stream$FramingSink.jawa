record `okhttp3.internal.http2.Http2Stream$FramingSink` @kind class @AccessFlag FINAL extends `okio.Sink` @kind interface {
  `boolean` `okhttp3.internal.http2.Http2Stream$FramingSink.a` @AccessFlag ;
  `boolean` `okhttp3.internal.http2.Http2Stream$FramingSink.b` @AccessFlag ;
  `okhttp3.internal.http2.Http2Stream` `okhttp3.internal.http2.Http2Stream$FramingSink.c` @AccessFlag FINAL_SYNTHETIC;
  `okio.Buffer` `okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@okhttp3.internal.http2.Http2Stream$FramingSink.EMIT_BUFFER_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L2dc08c.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Stream$FramingSink` v0 @kind this, `okhttp3.internal.http2.Http2Stream` v1 @kind object) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.<init>:(Lokhttp3/internal/http2/Http2Stream;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2dc0a0.  v0.`okhttp3.internal.http2.Http2Stream$FramingSink.c` @type ^`okhttp3.internal.http2.Http2Stream` := v1 @kind object;
  #L2dc0a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2dc0aa.  v1:= new `okio.Buffer`;
  #L2dc0ae.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L2dc0b4.  v0.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` := v1 @kind object;
  #L2dc0b8.  return @kind void;
}
procedure `void` `emitFrame`(`okhttp3.internal.http2.Http2Stream$FramingSink` v11 @kind this, `boolean` v12 ) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2dc1b0.  v0:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc1b4.  @monitorenter v0
  #L2dc1b6.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc1ba.  v1:= v1.`okhttp3.internal.http2.Http2Stream.g` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L2dc1be.  call `enter`(v1) @signature `Lokio/AsyncTimeout;.enter:()V` @kind virtual;
  #L2dc1c4.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc1c8.  v2:= v1.`okhttp3.internal.http2.Http2Stream.b` @type ^`long` @kind wide;
  #L2dc1cc.  v4:= 0L;
  #L2dc1d0.  v6:= lcmp(v2, v4);
  #L2dc1d4.  if v6 > 0 then goto L2dc1f8;
  #L2dc1d8.  v2:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.b` @type ^`boolean` @kind boolean;
  #L2dc1dc.  if v2 != 0 then goto L2dc1f8;
  #L2dc1e0.  v2:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.a` @type ^`boolean` @kind boolean;
  #L2dc1e4.  if v2 != 0 then goto L2dc1f8;
  #L2dc1e8.  v2:= v1.`okhttp3.internal.http2.Http2Stream.h` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L2dc1ec.  if v2 != 0 then goto L2dc1f8;
  #L2dc1f0.  call `j`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.j:()V` @kind virtual;
  #L2dc1f6.  goto L2dc1c4;
  #L2dc1f8.  v1:= v1.`okhttp3.internal.http2.Http2Stream.g` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L2dc1fc.  call `exitAndThrowIfTimedOut`(v1) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L2dc202.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc206.  call `e`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.e:()V` @kind virtual;
  #L2dc20c.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc210.  v1:= v1.`okhttp3.internal.http2.Http2Stream.b` @type ^`long` @kind wide;
  #L2dc214.  v3:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L2dc218.  call temp:= `size`(v3) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2dc21e.  v3:= temp @kind wide;
  #L2dc220.  call temp:= `min`(v1, v3) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L2dc226.  v9:= temp @kind wide;
  #L2dc228.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc22c.  v2:= v1.`okhttp3.internal.http2.Http2Stream.b` @type ^`long` @kind wide;
  #L2dc230.  v2:= v2 - v9 @kind long;
  #L2dc232.  v1.`okhttp3.internal.http2.Http2Stream.b` @type ^`long` := v2 @kind wide;
  #L2dc236.  @monitorexit v0
  #L2dc238.  v0:= v1.`okhttp3.internal.http2.Http2Stream.g` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L2dc23c.  call `enter`(v0) @signature `Lokio/AsyncTimeout;.enter:()V` @kind virtual;
  #L2dc242.  v0:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc246.  v5:= v0.`okhttp3.internal.http2.Http2Stream.d` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2dc24a.  v6:= v0.`okhttp3.internal.http2.Http2Stream.c` @type ^`int`;
  #L2dc24e.  if v12 == 0 then goto L2dc26c;
  #L2dc252.  v12:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L2dc256.  call temp:= `size`(v12) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2dc25c.  v0:= temp @kind wide;
  #L2dc25e.  v12:= lcmp(v9, v0);
  #L2dc262.  if v12 != 0 then goto L2dc26c;
  #L2dc266.  v12:= 1I;
  #L2dc268.  v7:= 1I;
  #L2dc26a.  goto L2dc270;
  #L2dc26c.  v12:= 0I;
  #L2dc26e.  v7:= 0I;
  #L2dc270.  v8:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L2dc274.  call `writeData`(v5, v6, v7, v8, v9) @signature `Lokhttp3/internal/http2/Http2Connection;.writeData:(IZLokio/Buffer;J)V` @kind virtual;
  #L2dc27a.  v12:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc27e.  v12:= v12.`okhttp3.internal.http2.Http2Stream.g` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L2dc282.  call `exitAndThrowIfTimedOut`(v12) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L2dc288.  return @kind void;
  #L2dc28a.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2dc28c.  v0:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc290.  v0:= v0.`okhttp3.internal.http2.Http2Stream.g` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L2dc294.  call `exitAndThrowIfTimedOut`(v0) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L2dc29a.  throw v12;
  #L2dc29c.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2dc29e.  v1:= v11.`okhttp3.internal.http2.Http2Stream$FramingSink.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc2a2.  v1:= v1.`okhttp3.internal.http2.Http2Stream.g` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L2dc2a6.  call `exitAndThrowIfTimedOut`(v1) @signature `Lokhttp3/internal/http2/Http2Stream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L2dc2ac.  throw v12;
  #L2dc2ae.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2dc2b0.  @monitorexit v0
  #L2dc2b2.  goto L2dc2b6;
  #L2dc2b4.  throw v12;
  #L2dc2b6.  goto L2dc2b4;
  catch `java.lang.Throwable` @[L2dc1b6..L2dc1c4] goto L2dc2ae;
  catch `java.lang.Throwable` @[L2dc1c4..L2dc1f6] goto L2dc29c;
  catch `java.lang.Throwable` @[L2dc1f8..L2dc238] goto L2dc2ae;
  catch `java.lang.Throwable` @[L2dc242..L2dc27a] goto L2dc28a;
  catch `java.lang.Throwable` @[L2dc29e..L2dc2b2] goto L2dc2ae;
}
procedure `void` `close`(`okhttp3.internal.http2.Http2Stream$FramingSink` v8 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2dc0cc.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc0d0.  @monitorenter v0
  #L2dc0d2.  v1:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.a` @type ^`boolean` @kind boolean;
  #L2dc0d6.  if v1 == 0 then goto L2dc0de;
  #L2dc0da.  @monitorexit v0
  #L2dc0dc.  return @kind void;
  #L2dc0de.  @monitorexit v0
  #L2dc0e0.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc0e4.  v0:= v0.`okhttp3.internal.http2.Http2Stream.e` @type ^`okhttp3.internal.http2.Http2Stream$FramingSink` @kind object;
  #L2dc0e8.  v0:= v0.`okhttp3.internal.http2.Http2Stream$FramingSink.b` @type ^`boolean` @kind boolean;
  #L2dc0ec.  v1:= 1I;
  #L2dc0ee.  if v0 != 0 then goto L2dc140;
  #L2dc0f2.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L2dc0f6.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2dc0fc.  v2:= temp @kind wide;
  #L2dc0fe.  v4:= 0L;
  #L2dc102.  v0:= lcmp(v2, v4);
  #L2dc106.  if v0 <= 0 then goto L2dc126;
  #L2dc10a.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L2dc10e.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2dc114.  v2:= temp @kind wide;
  #L2dc116.  v0:= lcmp(v2, v4);
  #L2dc11a.  if v0 <= 0 then goto L2dc140;
  #L2dc11e.  call `emitFrame`(v8, v1) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @kind direct;
  #L2dc124.  goto L2dc10a;
  #L2dc126.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc12a.  v2:= v0.`okhttp3.internal.http2.Http2Stream.d` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2dc12e.  v3:= v0.`okhttp3.internal.http2.Http2Stream.c` @type ^`int`;
  #L2dc132.  v4:= 1I;
  #L2dc134.  v5:= 0I;
  #L2dc136.  v6:= 0L;
  #L2dc13a.  call `writeData`(v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/http2/Http2Connection;.writeData:(IZLokio/Buffer;J)V` @kind virtual;
  #L2dc140.  v2:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc144.  @monitorenter v2
  #L2dc146.  v8.`okhttp3.internal.http2.Http2Stream$FramingSink.a` @type ^`boolean` := v1 @kind boolean;
  #L2dc14a.  @monitorexit v2
  #L2dc14c.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc150.  v0:= v0.`okhttp3.internal.http2.Http2Stream.d` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2dc154.  call `flush`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.flush:()V` @kind virtual;
  #L2dc15a.  v0:= v8.`okhttp3.internal.http2.Http2Stream$FramingSink.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc15e.  call `d`(v0) @signature `Lokhttp3/internal/http2/Http2Stream;.d:()V` @kind virtual;
  #L2dc164.  return @kind void;
  #L2dc166.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2dc168.  @monitorexit v2
  #L2dc16a.  throw v0;
  #L2dc16c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2dc16e.  @monitorexit v0
  #L2dc170.  goto L2dc174;
  #L2dc172.  throw v1;
  #L2dc174.  goto L2dc172;
  catch `java.lang.Throwable` @[L2dc0d2..L2dc0e0] goto L2dc16c;
  catch `java.lang.Throwable` @[L2dc146..L2dc14c] goto L2dc166;
  catch `java.lang.Throwable` @[L2dc168..L2dc16a] goto L2dc166;
  catch `java.lang.Throwable` @[L2dc16e..L2dc170] goto L2dc16c;
}
procedure `void` `flush`(`okhttp3.internal.http2.Http2Stream$FramingSink` v5 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2dc2f8.  v0:= v5.`okhttp3.internal.http2.Http2Stream$FramingSink.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc2fc.  @monitorenter v0
  #L2dc2fe.  v1:= v5.`okhttp3.internal.http2.Http2Stream$FramingSink.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc302.  call `e`(v1) @signature `Lokhttp3/internal/http2/Http2Stream;.e:()V` @kind virtual;
  #L2dc308.  @monitorexit v0
  #L2dc30a.  v0:= v5.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L2dc30e.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2dc314.  v0:= temp @kind wide;
  #L2dc316.  v2:= 0L;
  #L2dc31a.  v4:= lcmp(v0, v2);
  #L2dc31e.  if v4 <= 0 then goto L2dc33a;
  #L2dc322.  v0:= 0I;
  #L2dc324.  call `emitFrame`(v5, v0) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @kind direct;
  #L2dc32a.  v0:= v5.`okhttp3.internal.http2.Http2Stream$FramingSink.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc32e.  v0:= v0.`okhttp3.internal.http2.Http2Stream.d` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2dc332.  call `flush`(v0) @signature `Lokhttp3/internal/http2/Http2Connection;.flush:()V` @kind virtual;
  #L2dc338.  goto L2dc30a;
  #L2dc33a.  return @kind void;
  #L2dc33c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2dc33e.  @monitorexit v0
  #L2dc340.  goto L2dc344;
  #L2dc342.  throw v1;
  #L2dc344.  goto L2dc342;
  catch `java.lang.Throwable` @[L2dc2fe..L2dc30a] goto L2dc33c;
  catch `java.lang.Throwable` @[L2dc33e..L2dc340] goto L2dc33c;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.http2.Http2Stream$FramingSink` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2dc070.  v0:= v1.`okhttp3.internal.http2.Http2Stream$FramingSink.c` @type ^`okhttp3.internal.http2.Http2Stream` @kind object;
  #L2dc074.  v0:= v0.`okhttp3.internal.http2.Http2Stream.g` @type ^`okhttp3.internal.http2.Http2Stream$StreamTimeout` @kind object;
  #L2dc078.  return v0 @kind object;
}
procedure `void` `write`(`okhttp3.internal.http2.Http2Stream$FramingSink` v2 @kind this, `okio.Buffer` v3 @kind object, `long` v4 ) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2dc36c.  v0:= v2.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L2dc370.  call `write`(v0, v3, v4) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L2dc376.  v3:= v2.`okhttp3.internal.http2.Http2Stream$FramingSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L2dc37a.  call temp:= `size`(v3) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L2dc380.  v3:= temp @kind wide;
  #L2dc382.  v0:= 16384L;
  #L2dc386.  v5:= lcmp(v3, v0);
  #L2dc38a.  if v5 < 0 then goto L2dc398;
  #L2dc38e.  v3:= 0I;
  #L2dc390.  call `emitFrame`(v2, v3) @signature `Lokhttp3/internal/http2/Http2Stream$FramingSink;.emitFrame:(Z)V` @kind direct;
  #L2dc396.  goto L2dc376;
  #L2dc398.  return @kind void;
}
