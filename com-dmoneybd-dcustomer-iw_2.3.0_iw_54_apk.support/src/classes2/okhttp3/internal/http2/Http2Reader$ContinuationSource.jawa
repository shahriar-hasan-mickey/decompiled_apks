record `okhttp3.internal.http2.Http2Reader$ContinuationSource` @kind class @AccessFlag FINAL extends `okio.Source` @kind interface {
  `int` `okhttp3.internal.http2.Http2Reader$ContinuationSource.a` @AccessFlag ;
  `byte` `okhttp3.internal.http2.Http2Reader$ContinuationSource.b` @AccessFlag ;
  `int` `okhttp3.internal.http2.Http2Reader$ContinuationSource.c` @AccessFlag ;
  `int` `okhttp3.internal.http2.Http2Reader$ContinuationSource.d` @AccessFlag ;
  `short` `okhttp3.internal.http2.Http2Reader$ContinuationSource.e` @AccessFlag ;
  `okio.BufferedSource` `okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v0 @kind this, `okio.BufferedSource` v1 @kind object) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.<init>:(Lokio/BufferedSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2db62c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2db632.  v0.`okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @type ^`okio.BufferedSource` := v1 @kind object;
  #L2db636.  return @kind void;
}
procedure `void` `readContinuationHeader`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v7 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.readContinuationHeader:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2db65c.  v0:= v7.`okhttp3.internal.http2.Http2Reader$ContinuationSource.c` @type ^`int`;
  #L2db660.  v1:= v7.`okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L2db664.  call temp:= `b`(v1) @signature `Lokhttp3/internal/http2/Http2Reader;.b:(Lokio/BufferedSource;)I` @kind static;
  #L2db66a.  v1:= temp;
  #L2db66c.  v7.`okhttp3.internal.http2.Http2Reader$ContinuationSource.d` @type ^`int` := v1;
  #L2db670.  v7.`okhttp3.internal.http2.Http2Reader$ContinuationSource.a` @type ^`int` := v1;
  #L2db674.  v1:= v7.`okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L2db678.  call temp:= `readByte`(v1) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L2db67e.  v1:= temp;
  #L2db680.  v1:= v1 ^& 255;
  #L2db684.  v1:= (`byte`) v1 @kind i2b;
  #L2db686.  v2:= v7.`okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L2db68a.  call temp:= `readByte`(v2) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L2db690.  v2:= temp;
  #L2db692.  v2:= v2 ^& 255;
  #L2db696.  v2:= (`byte`) v2 @kind i2b;
  #L2db698.  v7.`okhttp3.internal.http2.Http2Reader$ContinuationSource.b` @type ^`byte` := v2 @kind byte;
  #L2db69c.  v2:= `@@okhttp3.internal.http2.Http2Reader.a` @type ^`java.util.logging.Logger` @kind object;
  #L2db6a0.  v3:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L2db6a4.  call temp:= `isLoggable`(v2, v3) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L2db6aa.  v3:= temp;
  #L2db6ac.  v4:= 1I;
  #L2db6ae.  if v3 == 0 then goto L2db6cc;
  #L2db6b2.  v3:= v7.`okhttp3.internal.http2.Http2Reader$ContinuationSource.c` @type ^`int`;
  #L2db6b6.  v5:= v7.`okhttp3.internal.http2.Http2Reader$ContinuationSource.a` @type ^`int`;
  #L2db6ba.  v6:= v7.`okhttp3.internal.http2.Http2Reader$ContinuationSource.b` @type ^`byte` @kind byte;
  #L2db6be.  call temp:= `b`(v4, v3, v5, v1, v6) @signature `Lokhttp3/internal/http2/Http2;.b:(ZIIBB)Ljava/lang/String;` @kind static;
  #L2db6c4.  v3:= temp @kind object;
  #L2db6c6.  call `fine`(v2, v3) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L2db6cc.  v2:= v7.`okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L2db6d0.  call temp:= `readInt`(v2) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L2db6d6.  v2:= temp;
  #L2db6d8.  v3:= 2147483647I;
  #L2db6de.  v2:= v2 ^& v3 @kind int;
  #L2db6e0.  v7.`okhttp3.internal.http2.Http2Reader$ContinuationSource.c` @type ^`int` := v2;
  #L2db6e4.  v3:= 9I;
  #L2db6e8.  v5:= 0I;
  #L2db6ea.  if v1 != v3 then goto L2db706;
  #L2db6ee.  if v2 != v0 then goto L2db6f4;
  #L2db6f2.  return @kind void;
  #L2db6f4.  v0:= new `java.lang.Object`[v5];
  #L2db6f8.  v1:= "TYPE_CONTINUATION streamId changed" @kind object;
  #L2db6fc.  call temp:= `d`(v1, v0) @signature `Lokhttp3/internal/http2/Http2;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2db702.  v0:= temp @kind object;
  #L2db704.  throw v0;
  #L2db706.  v0:= new `java.lang.Object`[v4];
  #L2db70a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L2db710.  v1:= temp @kind object;
  #L2db712.  v0[v5]:= v1 @kind object;
  #L2db716.  v1:= "%s != TYPE_CONTINUATION" @kind object;
  #L2db71a.  call temp:= `d`(v1, v0) @signature `Lokhttp3/internal/http2/Http2;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2db720.  v0:= temp @kind object;
  #L2db722.  throw v0;
}
procedure `void` `close`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v0 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L2db648.  return @kind void;
}
procedure `long` `read`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v6 @kind this, `okio.Buffer` v7 @kind object, `long` v8 ) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2db594.  v0:= v6.`okhttp3.internal.http2.Http2Reader$ContinuationSource.d` @type ^`int`;
  #L2db598.  v1:= -1L;
  #L2db59c.  if v0 != 0 then goto L2db5cc;
  #L2db5a0.  v0:= v6.`okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L2db5a4.  v3:= v6.`okhttp3.internal.http2.Http2Reader$ContinuationSource.e` @type ^`short` @kind short;
  #L2db5a8.  v3:= (`long`) v3 @kind i2l;
  #L2db5aa.  call `skip`(v0, v3) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L2db5b0.  v0:= 0I;
  #L2db5b2.  v6.`okhttp3.internal.http2.Http2Reader$ContinuationSource.e` @type ^`short` := v0 @kind char;
  #L2db5b6.  v0:= v6.`okhttp3.internal.http2.Http2Reader$ContinuationSource.b` @type ^`byte` @kind byte;
  #L2db5ba.  v0:= v0 ^& 4;
  #L2db5be.  if v0 == 0 then goto L2db5c4;
  #L2db5c2.  return v1 @kind wide;
  #L2db5c4.  call `readContinuationHeader`(v6) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.readContinuationHeader:()V` @kind direct;
  #L2db5ca.  goto L2db594;
  #L2db5cc.  v3:= v6.`okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L2db5d0.  v4:= (`long`) v0 @kind i2l;
  #L2db5d2.  call temp:= `min`(v8, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L2db5d8.  v8:= temp @kind wide;
  #L2db5da.  call temp:= `read`(v3, v7, v8) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L2db5e0.  v7:= temp @kind wide;
  #L2db5e2.  v9:= lcmp(v7, v1);
  #L2db5e6.  if v9 != 0 then goto L2db5ec;
  #L2db5ea.  return v1 @kind wide;
  #L2db5ec.  v9:= v6.`okhttp3.internal.http2.Http2Reader$ContinuationSource.d` @type ^`int`;
  #L2db5f0.  v0:= (`long`) v9 @kind i2l;
  #L2db5f2.  v0:= v0 - v7 @kind long;
  #L2db5f4.  v9:= (`int`) v0 @kind l2i;
  #L2db5f6.  v6.`okhttp3.internal.http2.Http2Reader$ContinuationSource.d` @type ^`int` := v9;
  #L2db5fa.  return v7 @kind wide;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.http2.Http2Reader$ContinuationSource` v1 @kind this) @signature `Lokhttp3/internal/http2/Http2Reader$ContinuationSource;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2db60c.  v0:= v1.`okhttp3.internal.http2.Http2Reader$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L2db610.  call temp:= `timeout`(v0) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L2db616.  v0:= temp @kind object;
  #L2db618.  return v0 @kind object;
}
