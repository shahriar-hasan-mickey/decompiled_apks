record `okhttp3.internal.http2.Header` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `okhttp3.internal.http2.Header.a` @AccessFlag FINAL;
  `okio.ByteString` `okhttp3.internal.http2.Header.name` @AccessFlag PUBLIC_FINAL;
  `okio.ByteString` `okhttp3.internal.http2.Header.value` @AccessFlag PUBLIC_FINAL;
}
global `okio.ByteString` `@@okhttp3.internal.http2.Header.PSEUDO_PREFIX` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.RESPONSE_STATUS` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.http2.Header.RESPONSE_STATUS_UTF8` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_AUTHORITY` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.http2.Header.TARGET_AUTHORITY_UTF8` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_METHOD` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.http2.Header.TARGET_METHOD_UTF8` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_PATH` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.http2.Header.TARGET_PATH_UTF8` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http2.Header.TARGET_SCHEME` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.http2.Header.TARGET_SCHEME_UTF8` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/Header;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2d8214.  v0:= ":" @kind object;
  #L2d8218.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L2d821e.  v0:= temp @kind object;
  #L2d8220.  `@@okhttp3.internal.http2.Header.PSEUDO_PREFIX` @type ^`okio.ByteString` := v0 @kind object;
  #L2d8224.  v0:= ":status" @kind object;
  #L2d8228.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L2d822e.  v0:= temp @kind object;
  #L2d8230.  `@@okhttp3.internal.http2.Header.RESPONSE_STATUS` @type ^`okio.ByteString` := v0 @kind object;
  #L2d8234.  v0:= ":method" @kind object;
  #L2d8238.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L2d823e.  v0:= temp @kind object;
  #L2d8240.  `@@okhttp3.internal.http2.Header.TARGET_METHOD` @type ^`okio.ByteString` := v0 @kind object;
  #L2d8244.  v0:= ":path" @kind object;
  #L2d8248.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L2d824e.  v0:= temp @kind object;
  #L2d8250.  `@@okhttp3.internal.http2.Header.TARGET_PATH` @type ^`okio.ByteString` := v0 @kind object;
  #L2d8254.  v0:= ":scheme" @kind object;
  #L2d8258.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L2d825e.  v0:= temp @kind object;
  #L2d8260.  `@@okhttp3.internal.http2.Header.TARGET_SCHEME` @type ^`okio.ByteString` := v0 @kind object;
  #L2d8264.  v0:= ":authority" @kind object;
  #L2d8268.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L2d826e.  v0:= temp @kind object;
  #L2d8270.  `@@okhttp3.internal.http2.Header.TARGET_AUTHORITY` @type ^`okio.ByteString` := v0 @kind object;
  #L2d8274.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Header` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/http2/Header;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2d8288.  call temp:= `encodeUtf8`(v1) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L2d828e.  v1:= temp @kind object;
  #L2d8290.  call temp:= `encodeUtf8`(v2) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L2d8296.  v2:= temp @kind object;
  #L2d8298.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @kind direct;
  #L2d829e.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Header` v0 @kind this, `okio.ByteString` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2d82b0.  call temp:= `encodeUtf8`(v2) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L2d82b6.  v2:= temp @kind object;
  #L2d82b8.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @kind direct;
  #L2d82be.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Header` v0 @kind this, `okio.ByteString` v1 @kind object, `okio.ByteString` v2 @kind object) @signature `Lokhttp3/internal/http2/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2d82d0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d82d6.  v0.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` := v1 @kind object;
  #L2d82da.  v0.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` := v2 @kind object;
  #L2d82de.  call temp:= `size`(v1) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L2d82e4.  v1:= temp;
  #L2d82e6.  v1:= v1 + 32;
  #L2d82ea.  call temp:= `size`(v2) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L2d82f0.  v2:= temp;
  #L2d82f2.  v1:= v1 + v2 @kind int;
  #L2d82f4.  v0.`okhttp3.internal.http2.Header.a` @type ^`int` := v1;
  #L2d82f8.  return @kind void;
}
procedure `boolean` `equals`(`okhttp3.internal.http2.Header` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lokhttp3/internal/http2/Header;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2d8148.  v0:= instanceof @variable v4 @type ^`okhttp3.internal.http2.Header` @kind boolean;
  #L2d814c.  v1:= 0I;
  #L2d814e.  if v0 == 0 then goto L2d8180;
  #L2d8152.  v4:= (`okhttp3.internal.http2.Header`) v4 @kind object;
  #L2d8156.  v0:= v3.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L2d815a.  v2:= v4.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L2d815e.  call temp:= `equals`(v0, v2) @signature `Lokio/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d8164.  v0:= temp;
  #L2d8166.  if v0 == 0 then goto L2d8180;
  #L2d816a.  v0:= v3.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L2d816e.  v4:= v4.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L2d8172.  call temp:= `equals`(v0, v4) @signature `Lokio/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d8178.  v4:= temp;
  #L2d817a.  if v4 == 0 then goto L2d8180;
  #L2d817e.  v1:= 1I;
  #L2d8180.  return v1;
}
procedure `int` `hashCode`(`okhttp3.internal.http2.Header` v2 @kind this) @signature `Lokhttp3/internal/http2/Header;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2d8194.  v0:= v2.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L2d8198.  call temp:= `hashCode`(v0) @signature `Lokio/ByteString;.hashCode:()I` @kind virtual;
  #L2d819e.  v0:= temp;
  #L2d81a0.  v1:= 527I;
  #L2d81a4.  v1:= v1 + v0 @kind int;
  #L2d81a6.  v1:= v1 * 31;
  #L2d81aa.  v0:= v2.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L2d81ae.  call temp:= `hashCode`(v0) @signature `Lokio/ByteString;.hashCode:()I` @kind virtual;
  #L2d81b4.  v0:= temp;
  #L2d81b6.  v1:= v1 + v0 @kind int;
  #L2d81b8.  return v1;
}
procedure `java.lang.String` `toString`(`okhttp3.internal.http2.Header` v3 @kind this) @signature `Lokhttp3/internal/http2/Header;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2d81cc.  v0:= 2I;
  #L2d81ce.  v0:= new `java.lang.Object`[v0];
  #L2d81d2.  v1:= v3.`okhttp3.internal.http2.Header.name` @type ^`okio.ByteString` @kind object;
  #L2d81d6.  call temp:= `utf8`(v1) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L2d81dc.  v1:= temp @kind object;
  #L2d81de.  v2:= 0I;
  #L2d81e0.  v0[v2]:= v1 @kind object;
  #L2d81e4.  v1:= v3.`okhttp3.internal.http2.Header.value` @type ^`okio.ByteString` @kind object;
  #L2d81e8.  call temp:= `utf8`(v1) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L2d81ee.  v1:= temp @kind object;
  #L2d81f0.  v2:= 1I;
  #L2d81f2.  v0[v2]:= v1 @kind object;
  #L2d81f6.  v1:= "%s: %s" @kind object;
  #L2d81fa.  call temp:= `format`(v1, v0) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2d8200.  v0:= temp @kind object;
  #L2d8202.  return v0 @kind object;
}
