record `okhttp3.internal.http2.Huffman$Node` @kind class @AccessFlag FINAL {
  `okhttp3.internal.http2.Huffman$Node`[] `okhttp3.internal.http2.Huffman$Node.a` @AccessFlag FINAL;
  `int` `okhttp3.internal.http2.Huffman$Node.b` @AccessFlag FINAL;
  `int` `okhttp3.internal.http2.Huffman$Node.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Huffman$Node` v1 @kind this) @signature `Lokhttp3/internal/http2/Huffman$Node;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2dd694.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2dd69a.  v0:= 256I;
  #L2dd69e.  v0:= new `okhttp3.internal.http2.Huffman$Node`[v0];
  #L2dd6a2.  v1.`okhttp3.internal.http2.Huffman$Node.a` @type ^`okhttp3.internal.http2.Huffman$Node`[] := v0 @kind object;
  #L2dd6a6.  v0:= 0I;
  #L2dd6a8.  v1.`okhttp3.internal.http2.Huffman$Node.b` @type ^`int` := v0;
  #L2dd6ac.  v1.`okhttp3.internal.http2.Huffman$Node.c` @type ^`int` := v0;
  #L2dd6b0.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Huffman$Node` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lokhttp3/internal/http2/Huffman$Node;.<init>:(II)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2dd6c4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2dd6ca.  v0:= 0I;
  #L2dd6cc.  v1.`okhttp3.internal.http2.Huffman$Node.a` @type ^`okhttp3.internal.http2.Huffman$Node`[] := v0 @kind object;
  #L2dd6d0.  v1.`okhttp3.internal.http2.Huffman$Node.b` @type ^`int` := v2;
  #L2dd6d4.  v2:= v3 ^& 7;
  #L2dd6d8.  if v2 != 0 then goto L2dd6e0;
  #L2dd6dc.  v2:= 8I;
  #L2dd6e0.  v1.`okhttp3.internal.http2.Huffman$Node.c` @type ^`int` := v2;
  #L2dd6e4.  return @kind void;
}
