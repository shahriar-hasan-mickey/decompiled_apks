record `okhttp3.internal.http2.ErrorCode` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `int` `okhttp3.internal.http2.ErrorCode.httpCode` @AccessFlag PUBLIC_FINAL;
}
global `okhttp3.internal.http2.ErrorCode`[] `@@okhttp3.internal.http2.ErrorCode.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.CANCEL` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.COMPRESSION_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.CONNECT_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.ENHANCE_YOUR_CALM` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.FLOW_CONTROL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.HTTP_1_1_REQUIRED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.INADEQUATE_SECURITY` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.internal.http2.ErrorCode` `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http2/ErrorCode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L2d7fe0.  v0:= new `okhttp3.internal.http2.ErrorCode`;
  #L2d7fe4.  v1:= "NO_ERROR" @kind object;
  #L2d7fe8.  v2:= 0I;
  #L2d7fea.  call `<init>`(v0, v1, v2, v2) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2d7ff0.  `@@okhttp3.internal.http2.ErrorCode.NO_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v0 @kind object;
  #L2d7ff4.  v1:= new `okhttp3.internal.http2.ErrorCode`;
  #L2d7ff8.  v3:= "PROTOCOL_ERROR" @kind object;
  #L2d7ffc.  v4:= 1I;
  #L2d7ffe.  call `<init>`(v1, v3, v4, v4) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2d8004.  `@@okhttp3.internal.http2.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v1 @kind object;
  #L2d8008.  v3:= new `okhttp3.internal.http2.ErrorCode`;
  #L2d800c.  v5:= "INTERNAL_ERROR" @kind object;
  #L2d8010.  v6:= 2I;
  #L2d8012.  call `<init>`(v3, v5, v6, v6) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2d8018.  `@@okhttp3.internal.http2.ErrorCode.INTERNAL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v3 @kind object;
  #L2d801c.  v5:= new `okhttp3.internal.http2.ErrorCode`;
  #L2d8020.  v7:= "FLOW_CONTROL_ERROR" @kind object;
  #L2d8024.  v8:= 3I;
  #L2d8026.  call `<init>`(v5, v7, v8, v8) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2d802c.  `@@okhttp3.internal.http2.ErrorCode.FLOW_CONTROL_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v5 @kind object;
  #L2d8030.  v7:= new `okhttp3.internal.http2.ErrorCode`;
  #L2d8034.  v9:= "REFUSED_STREAM" @kind object;
  #L2d8038.  v10:= 4I;
  #L2d803a.  v11:= 7I;
  #L2d803c.  call `<init>`(v7, v9, v10, v11) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2d8042.  `@@okhttp3.internal.http2.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.http2.ErrorCode` := v7 @kind object;
  #L2d8046.  v9:= new `okhttp3.internal.http2.ErrorCode`;
  #L2d804a.  v12:= "CANCEL" @kind object;
  #L2d804e.  v13:= 5I;
  #L2d8050.  v14:= 8I;
  #L2d8054.  call `<init>`(v9, v12, v13, v14) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2d805a.  `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` := v9 @kind object;
  #L2d805e.  v12:= new `okhttp3.internal.http2.ErrorCode`;
  #L2d8062.  v15:= "COMPRESSION_ERROR" @kind object;
  #L2d8066.  v13:= 6I;
  #L2d8068.  v10:= 9I;
  #L2d806c.  call `<init>`(v12, v15, v13, v10) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2d8072.  `@@okhttp3.internal.http2.ErrorCode.COMPRESSION_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v12 @kind object;
  #L2d8076.  v15:= new `okhttp3.internal.http2.ErrorCode`;
  #L2d807a.  v13:= "CONNECT_ERROR" @kind object;
  #L2d807e.  v8:= 10I;
  #L2d8082.  call `<init>`(v15, v13, v11, v8) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2d8088.  `@@okhttp3.internal.http2.ErrorCode.CONNECT_ERROR` @type ^`okhttp3.internal.http2.ErrorCode` := v15 @kind object;
  #L2d808c.  v13:= new `okhttp3.internal.http2.ErrorCode`;
  #L2d8090.  v11:= "ENHANCE_YOUR_CALM" @kind object;
  #L2d8094.  v6:= 11I;
  #L2d8098.  call `<init>`(v13, v11, v14, v6) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2d809e.  `@@okhttp3.internal.http2.ErrorCode.ENHANCE_YOUR_CALM` @type ^`okhttp3.internal.http2.ErrorCode` := v13 @kind object;
  #L2d80a2.  v11:= new `okhttp3.internal.http2.ErrorCode`;
  #L2d80a6.  v14:= "INADEQUATE_SECURITY" @kind object;
  #L2d80aa.  v4:= 12I;
  #L2d80ae.  call `<init>`(v11, v14, v10, v4) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2d80b4.  `@@okhttp3.internal.http2.ErrorCode.INADEQUATE_SECURITY` @type ^`okhttp3.internal.http2.ErrorCode` := v11 @kind object;
  #L2d80b8.  v4:= new `okhttp3.internal.http2.ErrorCode`;
  #L2d80bc.  v14:= "HTTP_1_1_REQUIRED" @kind object;
  #L2d80c0.  v10:= 13I;
  #L2d80c4.  call `<init>`(v4, v14, v8, v10) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L2d80ca.  `@@okhttp3.internal.http2.ErrorCode.HTTP_1_1_REQUIRED` @type ^`okhttp3.internal.http2.ErrorCode` := v4 @kind object;
  #L2d80ce.  v6:= new `okhttp3.internal.http2.ErrorCode`[v6];
  #L2d80d2.  v6[v2]:= v0 @kind object;
  #L2d80d6.  v0:= 1I;
  #L2d80d8.  v6[v0]:= v1 @kind object;
  #L2d80dc.  v0:= 2I;
  #L2d80de.  v6[v0]:= v3 @kind object;
  #L2d80e2.  v0:= 3I;
  #L2d80e4.  v6[v0]:= v5 @kind object;
  #L2d80e8.  v0:= 4I;
  #L2d80ea.  v6[v0]:= v7 @kind object;
  #L2d80ee.  v0:= 5I;
  #L2d80f0.  v6[v0]:= v9 @kind object;
  #L2d80f4.  v0:= 6I;
  #L2d80f6.  v6[v0]:= v12 @kind object;
  #L2d80fa.  v0:= 7I;
  #L2d80fc.  v6[v0]:= v15 @kind object;
  #L2d8100.  v0:= 8I;
  #L2d8104.  v6[v0]:= v13 @kind object;
  #L2d8108.  v0:= 9I;
  #L2d810c.  v6[v0]:= v11 @kind object;
  #L2d8110.  v6[v8]:= v4 @kind object;
  #L2d8114.  `@@okhttp3.internal.http2.ErrorCode.$VALUES` @type ^`okhttp3.internal.http2.ErrorCode`[] := v6 @kind object;
  #L2d8118.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http2.ErrorCode` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lokhttp3/internal/http2/ErrorCode;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2d812c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2d8132.  v0.`okhttp3.internal.http2.ErrorCode.httpCode` @type ^`int` := v3;
  #L2d8136.  return @kind void;
}
procedure `okhttp3.internal.http2.ErrorCode` `fromHttp2`(`int` v5 ) @signature `Lokhttp3/internal/http2/ErrorCode;.fromHttp2:(I)Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2d7f60.  call temp:= `values`() @signature `Lokhttp3/internal/http2/ErrorCode;.values:()[Lokhttp3/internal/http2/ErrorCode;` @kind static;
  #L2d7f66.  v0:= temp @kind object;
  #L2d7f68.  v1:= length @variable v0;
  #L2d7f6a.  v2:= 0I;
  #L2d7f6c.  if v2 >= v1 then goto L2d7f84;
  #L2d7f70.  v3:= v0[v2] @kind object;
  #L2d7f74.  v4:= v3.`okhttp3.internal.http2.ErrorCode.httpCode` @type ^`int`;
  #L2d7f78.  if v4 != v5 then goto L2d7f7e;
  #L2d7f7c.  return v3 @kind object;
  #L2d7f7e.  v2:= v2 + 1;
  #L2d7f82.  goto L2d7f6c;
  #L2d7f84.  v5:= 0I;
  #L2d7f86.  return v5 @kind object;
}
procedure `okhttp3.internal.http2.ErrorCode` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/http2/ErrorCode;.valueOf:(Ljava/lang/String;)Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2d7f98.  v0:= constclass @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L2d7f9c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L2d7fa2.  v1:= temp @kind object;
  #L2d7fa4.  v1:= (`okhttp3.internal.http2.ErrorCode`) v1 @kind object;
  #L2d7fa8.  return v1 @kind object;
}
procedure `okhttp3.internal.http2.ErrorCode`[] `values`() @signature `Lokhttp3/internal/http2/ErrorCode;.values:()[Lokhttp3/internal/http2/ErrorCode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2d7fbc.  v0:= `@@okhttp3.internal.http2.ErrorCode.$VALUES` @type ^`okhttp3.internal.http2.ErrorCode`[] @kind object;
  #L2d7fc0.  call temp:= `clone`(v0) @signature `[Lokhttp3/internal/http2/ErrorCode;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2d7fc6.  v0:= temp @kind object;
  #L2d7fc8.  v0:= (`okhttp3.internal.http2.ErrorCode`[]) v0 @kind object;
  #L2d7fcc.  return v0 @kind object;
}
