record `okhttp3.internal.http2.Http2Connection$4` @kind class @AccessFlag  extends `okhttp3.internal.NamedRunnable` @kind class {
  `int` `okhttp3.internal.http2.Http2Connection$4.a` @AccessFlag FINAL_SYNTHETIC;
  `java.util.List` `okhttp3.internal.http2.Http2Connection$4.b` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `okhttp3.internal.http2.Http2Connection$4.c` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.internal.http2.Http2Connection` `okhttp3.internal.http2.Http2Connection$4.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http2.Http2Connection$4` v0 @kind this, `okhttp3.internal.http2.Http2Connection` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `int` v4 , `java.util.List` v5 @kind object, `boolean` v6 ) @signature `Lokhttp3/internal/http2/Http2Connection$4;.<init>:(Lokhttp3/internal/http2/Http2Connection;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2d9c80.  v0.`okhttp3.internal.http2.Http2Connection$4.d` @type ^`okhttp3.internal.http2.Http2Connection` := v1 @kind object;
  #L2d9c84.  v0.`okhttp3.internal.http2.Http2Connection$4.a` @type ^`int` := v4;
  #L2d9c88.  v0.`okhttp3.internal.http2.Http2Connection$4.b` @type ^`java.util.List` := v5 @kind object;
  #L2d9c8c.  v0.`okhttp3.internal.http2.Http2Connection$4.c` @type ^`boolean` := v6 @kind boolean;
  #L2d9c90.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L2d9c96.  return @kind void;
}
procedure `void` `execute`(`okhttp3.internal.http2.Http2Connection$4` v4 @kind this) @signature `Lokhttp3/internal/http2/Http2Connection$4;.execute:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2d9ca8.  v0:= v4.`okhttp3.internal.http2.Http2Connection$4.d` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2d9cac.  v0:= v0.`okhttp3.internal.http2.Http2Connection.h` @type ^`okhttp3.internal.http2.PushObserver` @kind object;
  #L2d9cb0.  v1:= v4.`okhttp3.internal.http2.Http2Connection$4.a` @type ^`int`;
  #L2d9cb4.  v2:= v4.`okhttp3.internal.http2.Http2Connection$4.b` @type ^`java.util.List` @kind object;
  #L2d9cb8.  v3:= v4.`okhttp3.internal.http2.Http2Connection$4.c` @type ^`boolean` @kind boolean;
  #L2d9cbc.  call temp:= `onHeaders`(v0, v1, v2, v3) @signature `Lokhttp3/internal/http2/PushObserver;.onHeaders:(ILjava/util/List;Z)Z` @kind interface;
  #L2d9cc2.  v0:= temp;
  #L2d9cc4.  if v0 == 0 then goto L2d9cde;
  #L2d9cc8.  v1:= v4.`okhttp3.internal.http2.Http2Connection$4.d` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2d9ccc.  v1:= v1.`okhttp3.internal.http2.Http2Connection.o` @type ^`okhttp3.internal.http2.Http2Writer` @kind object;
  #L2d9cd0.  v2:= v4.`okhttp3.internal.http2.Http2Connection$4.a` @type ^`int`;
  #L2d9cd4.  v3:= `@@okhttp3.internal.http2.ErrorCode.CANCEL` @type ^`okhttp3.internal.http2.ErrorCode` @kind object;
  #L2d9cd8.  call `rstStream`(v1, v2, v3) @signature `Lokhttp3/internal/http2/Http2Writer;.rstStream:(ILokhttp3/internal/http2/ErrorCode;)V` @kind virtual;
  #L2d9cde.  if v0 != 0 then goto L2d9cea;
  #L2d9ce2.  v0:= v4.`okhttp3.internal.http2.Http2Connection$4.c` @type ^`boolean` @kind boolean;
  #L2d9ce6.  if v0 == 0 then goto L2d9d14;
  #L2d9cea.  v0:= v4.`okhttp3.internal.http2.Http2Connection$4.d` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2d9cee.  @monitorenter v0
  #L2d9cf0.  v1:= v4.`okhttp3.internal.http2.Http2Connection$4.d` @type ^`okhttp3.internal.http2.Http2Connection` @kind object;
  #L2d9cf4.  v1:= v1.`okhttp3.internal.http2.Http2Connection.q` @type ^`java.util.Set` @kind object;
  #L2d9cf8.  v2:= v4.`okhttp3.internal.http2.Http2Connection$4.a` @type ^`int`;
  #L2d9cfc.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2d9d02.  v2:= temp @kind object;
  #L2d9d04.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L2d9d0a.  @monitorexit v0
  #L2d9d0c.  goto L2d9d14;
  #L2d9d0e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2d9d10.  @monitorexit v0
  #L2d9d12.  throw v1;
  #L2d9d14.  return @kind void;
  catch `java.io.IOException` @[L2d9cc8..L2d9cf0] goto L2d9d14;
  catch `java.lang.Throwable` @[L2d9cf0..L2d9d12] goto L2d9d0e;
  catch `java.io.IOException` @[L2d9d12..L2d9d14] goto L2d9d14;
}
