record `okhttp3.Cache$CacheRequestImpl$1` @kind class @AccessFlag  extends `okio.ForwardingSink` @kind class {
  `okhttp3.Cache` `okhttp3.Cache$CacheRequestImpl$1.a` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.internal.cache.DiskLruCache$Editor` `okhttp3.Cache$CacheRequestImpl$1.b` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.Cache$CacheRequestImpl` `okhttp3.Cache$CacheRequestImpl$1.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.Cache$CacheRequestImpl$1` v0 @kind this, `okhttp3.Cache$CacheRequestImpl` v1 @kind object, `okio.Sink` v2 @kind object, `okhttp3.Cache` v3 @kind object, `okhttp3.internal.cache.DiskLruCache$Editor` v4 @kind object) @signature `Lokhttp3/Cache$CacheRequestImpl$1;.<init>:(Lokhttp3/Cache$CacheRequestImpl;Lokio/Sink;Lokhttp3/Cache;Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2cf798.  v0.`okhttp3.Cache$CacheRequestImpl$1.c` @type ^`okhttp3.Cache$CacheRequestImpl` := v1 @kind object;
  #L2cf79c.  v0.`okhttp3.Cache$CacheRequestImpl$1.a` @type ^`okhttp3.Cache` := v3 @kind object;
  #L2cf7a0.  v0.`okhttp3.Cache$CacheRequestImpl$1.b` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` := v4 @kind object;
  #L2cf7a4.  call `<init>`(v0, v2) @signature `Lokio/ForwardingSink;.<init>:(Lokio/Sink;)V` @kind direct;
  #L2cf7aa.  return @kind void;
}
procedure `void` `close`(`okhttp3.Cache$CacheRequestImpl$1` v4 @kind this) @signature `Lokhttp3/Cache$CacheRequestImpl$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2cf7bc.  v0:= v4.`okhttp3.Cache$CacheRequestImpl$1.c` @type ^`okhttp3.Cache$CacheRequestImpl` @kind object;
  #L2cf7c0.  v0:= v0.`okhttp3.Cache$CacheRequestImpl.b` @type ^`okhttp3.Cache` @kind object;
  #L2cf7c4.  @monitorenter v0
  #L2cf7c6.  v1:= v4.`okhttp3.Cache$CacheRequestImpl$1.c` @type ^`okhttp3.Cache$CacheRequestImpl` @kind object;
  #L2cf7ca.  v2:= v1.`okhttp3.Cache$CacheRequestImpl.a` @type ^`boolean` @kind boolean;
  #L2cf7ce.  if v2 == 0 then goto L2cf7d6;
  #L2cf7d2.  @monitorexit v0
  #L2cf7d4.  return @kind void;
  #L2cf7d6.  v2:= 1I;
  #L2cf7d8.  v1.`okhttp3.Cache$CacheRequestImpl.a` @type ^`boolean` := v2 @kind boolean;
  #L2cf7dc.  v1:= v1.`okhttp3.Cache$CacheRequestImpl.b` @type ^`okhttp3.Cache` @kind object;
  #L2cf7e0.  v3:= v1.`okhttp3.Cache.c` @type ^`int`;
  #L2cf7e4.  v3:= v3 + v2 @kind int;
  #L2cf7e6.  v1.`okhttp3.Cache.c` @type ^`int` := v3;
  #L2cf7ea.  @monitorexit v0
  #L2cf7ec.  call `close`(v4) @signature `Lokio/ForwardingSink;.close:()V` @kind super;
  #L2cf7f2.  v0:= v4.`okhttp3.Cache$CacheRequestImpl$1.b` @type ^`okhttp3.internal.cache.DiskLruCache$Editor` @kind object;
  #L2cf7f6.  call `commit`(v0) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.commit:()V` @kind virtual;
  #L2cf7fc.  return @kind void;
  #L2cf7fe.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2cf800.  @monitorexit v0
  #L2cf802.  throw v1;
  catch `java.lang.Throwable` @[L2cf7c6..L2cf7ec] goto L2cf7fe;
  catch `java.lang.Throwable` @[L2cf800..L2cf802] goto L2cf7fe;
}
