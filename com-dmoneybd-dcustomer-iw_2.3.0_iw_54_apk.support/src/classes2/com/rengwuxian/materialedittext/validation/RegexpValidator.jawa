record `com.rengwuxian.materialedittext.validation.RegexpValidator` @kind class @AccessFlag PUBLIC extends `com.rengwuxian.materialedittext.validation.METValidator` @kind class {
  `java.util.regex.Pattern` `com.rengwuxian.materialedittext.validation.RegexpValidator.pattern` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.rengwuxian.materialedittext.validation.RegexpValidator` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/rengwuxian/materialedittext/validation/RegexpValidator;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b3da8.  call `<init>`(v0, v1) @signature `Lcom/rengwuxian/materialedittext/validation/METValidator;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b3dae.  call temp:= `compile`(v2) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L2b3db4.  v1:= temp @kind object;
  #L2b3db6.  v0.`com.rengwuxian.materialedittext.validation.RegexpValidator.pattern` @type ^`java.util.regex.Pattern` := v1 @kind object;
  #L2b3dba.  return @kind void;
}
procedure `boolean` `isValid`(`com.rengwuxian.materialedittext.validation.RegexpValidator` v0 @kind this, `java.lang.CharSequence` v1 @kind object, `boolean` v2 ) @signature `Lcom/rengwuxian/materialedittext/validation/RegexpValidator;.isValid:(Ljava/lang/CharSequence;Z)Z` @AccessFlag PUBLIC {
    temp;

  #L2b3d80.  v2:= v0.`com.rengwuxian.materialedittext.validation.RegexpValidator.pattern` @type ^`java.util.regex.Pattern` @kind object;
  #L2b3d84.  call temp:= `matcher`(v2, v1) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L2b3d8a.  v1:= temp @kind object;
  #L2b3d8c.  call temp:= `matches`(v1) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L2b3d92.  v1:= temp;
  #L2b3d94.  return v1;
}
