record `com.rengwuxian.materialedittext.Colors` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`com.rengwuxian.materialedittext.Colors` v0 @kind this) @signature `Lcom/rengwuxian/materialedittext/Colors;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2abc18.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2abc1e.  return @kind void;
}
procedure `boolean` `isLight`(`int` v6 ) @signature `Lcom/rengwuxian/materialedittext/Colors;.isLight:(I)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2abb64.  call temp:= `red`(v6) @signature `Landroid/graphics/Color;.red:(I)I` @kind static;
  #L2abb6a.  v0:= temp;
  #L2abb6c.  call temp:= `red`(v6) @signature `Landroid/graphics/Color;.red:(I)I` @kind static;
  #L2abb72.  v1:= temp;
  #L2abb74.  v0:= v0 * v1 @kind int;
  #L2abb78.  v0:= (`double`) v0 @kind i2d;
  #L2abb7a.  v2:= 0.241D;
  #L2abb84.  call temp:= `isNaN`(v0) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2abb8a.  v0:= v0 * v2 @kind double;
  #L2abb8e.  call temp:= `green`(v6) @signature `Landroid/graphics/Color;.green:(I)I` @kind static;
  #L2abb94.  v2:= temp;
  #L2abb96.  call temp:= `green`(v6) @signature `Landroid/graphics/Color;.green:(I)I` @kind static;
  #L2abb9c.  v3:= temp;
  #L2abb9e.  v2:= v2 * v3 @kind int;
  #L2abba2.  v2:= (`double`) v2 @kind i2d;
  #L2abba4.  v4:= 0.691D;
  #L2abbae.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2abbb4.  v2:= v2 * v4 @kind double;
  #L2abbb8.  v0:= v0 + v2 @kind double;
  #L2abbba.  call temp:= `blue`(v6) @signature `Landroid/graphics/Color;.blue:(I)I` @kind static;
  #L2abbc0.  v2:= temp;
  #L2abbc2.  call temp:= `blue`(v6) @signature `Landroid/graphics/Color;.blue:(I)I` @kind static;
  #L2abbc8.  v6:= temp;
  #L2abbca.  v2:= v2 * v6 @kind int;
  #L2abbce.  v2:= (`double`) v2 @kind i2d;
  #L2abbd0.  v4:= 0.068D;
  #L2abbda.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2abbe0.  v2:= v2 * v4 @kind double;
  #L2abbe4.  v0:= v0 + v2 @kind double;
  #L2abbe6.  call temp:= `sqrt`(v0) @signature `Ljava/lang/Math;.sqrt:(D)D` @kind static;
  #L2abbec.  v0:= temp @kind wide;
  #L2abbee.  v2:= 130.0D;
  #L2abbf8.  v6:= dcmpl(v0, v2);
  #L2abbfc.  if v6 <= 0 then goto L2abc04;
  #L2abc00.  v6:= 1I;
  #L2abc02.  goto L2abc06;
  #L2abc04.  v6:= 0I;
  #L2abc06.  return v6;
}
