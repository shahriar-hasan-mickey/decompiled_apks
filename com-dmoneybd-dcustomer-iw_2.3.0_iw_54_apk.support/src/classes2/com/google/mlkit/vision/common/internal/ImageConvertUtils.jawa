record `com.google.mlkit.vision.common.internal.ImageConvertUtils` @kind class @AccessFlag PUBLIC {
}
global `com.google.mlkit.vision.common.internal.ImageConvertUtils` `@@com.google.mlkit.vision.common.internal.ImageConvertUtils.zza` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L244af0.  v0:= new `com.google.mlkit.vision.common.internal.ImageConvertUtils`;
  #L244af4.  call `<init>`(v0) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.<init>:()V` @kind direct;
  #L244afa.  `@@com.google.mlkit.vision.common.internal.ImageConvertUtils.zza` @type ^`com.google.mlkit.vision.common.internal.ImageConvertUtils` := v0 @kind object;
  #L244afe.  return @kind void;
}
procedure `void` `<init>`(`com.google.mlkit.vision.common.internal.ImageConvertUtils` v0 @kind this) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L244b10.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L244b16.  return @kind void;
}
procedure `com.google.mlkit.vision.common.internal.ImageConvertUtils` `getInstance`() @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.getInstance:()Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L24468c.  v0:= `@@com.google.mlkit.vision.common.internal.ImageConvertUtils.zza` @type ^`com.google.mlkit.vision.common.internal.ImageConvertUtils` @kind object;
  #L244690.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `zza`(`android.graphics.Bitmap` v7 @kind object, `int` v8 , `int` v9 , `int` v10 ) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.zza:(Landroid/graphics/Bitmap;III)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L244504.  if v8 != 0 then goto L244514;
  #L244508.  v8:= 0I;
  #L24450a.  call temp:= `createBitmap`(v7, v8, v8, v9, v10) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIII)Landroid/graphics/Bitmap;` @kind static;
  #L244510.  v7:= temp @kind object;
  #L244512.  return v7 @kind object;
  #L244514.  v5:= new `android.graphics.Matrix`;
  #L244518.  call `<init>`(v5) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L24451e.  v8:= (`float`) v8 @kind i2f;
  #L244520.  call temp:= `postRotate`(v5, v8) @signature `Landroid/graphics/Matrix;.postRotate:(F)Z` @kind virtual;
  #L244526.  v1:= 0I;
  #L244528.  v2:= 0I;
  #L24452a.  v6:= 1I;
  #L24452c.  v0:= v7 @kind object;
  #L24452e.  v3:= v9;
  #L244530.  v4:= v10;
  #L244532.  call temp:= `createBitmap`(v0, v1, v2, v3, v4, v5, v6) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;` @kind static;
  #L244538.  v7:= temp @kind object;
  #L24453a.  return v7 @kind object;
}
procedure `android.graphics.Bitmap` `zza`(`com.google.mlkit.vision.common.internal.ImageConvertUtils` v2 @kind this, `java.nio.ByteBuffer` v3 @kind object, `int` v4 , `int` v5 , `int` v6 ) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.zza:(Ljava/nio/ByteBuffer;III)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L24454c.  call temp:= `byteBufferToByteArray`(v2, v3) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.byteBufferToByteArray:(Ljava/nio/ByteBuffer;)[B` @kind virtual;
  #L244552.  v3:= temp @kind object;
  #L244554.  call temp:= `zza`(v3, v4, v5) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.zza:([BII)[B` @kind static;
  #L24455a.  v3:= temp @kind object;
  #L24455c.  v0:= length @variable v3;
  #L24455e.  v1:= 0I;
  #L244560.  call temp:= `decodeByteArray`(v3, v1, v0) @signature `Landroid/graphics/BitmapFactory;.decodeByteArray:([BII)Landroid/graphics/Bitmap;` @kind static;
  #L244566.  v3:= temp @kind object;
  #L244568.  call temp:= `zza`(v3, v6, v4, v5) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.zza:(Landroid/graphics/Bitmap;III)Landroid/graphics/Bitmap;` @kind static;
  #L24456e.  v3:= temp @kind object;
  #L244570.  return v3 @kind object;
}
procedure `java.nio.ByteBuffer` `zza`(`java.nio.ByteBuffer` v6 @kind object, `boolean` v7 ) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.zza:(Ljava/nio/ByteBuffer;Z)Ljava/nio/ByteBuffer;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L244a64.  call temp:= `rewind`(v6) @signature `Ljava/nio/ByteBuffer;.rewind:()Ljava/nio/Buffer;` @kind virtual;
  #L244a6a.  call temp:= `limit`(v6) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L244a70.  v0:= temp;
  #L244a72.  v1:= v0 / 6;
  #L244a76.  if v7 == 0 then goto L244a84;
  #L244a7a.  call temp:= `allocate`(v0) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L244a80.  v7:= temp @kind object;
  #L244a82.  goto L244a8c;
  #L244a84.  call temp:= `allocateDirect`(v0) @signature `Ljava/nio/ByteBuffer;.allocateDirect:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L244a8a.  v7:= temp @kind object;
  #L244a8c.  v0:= 0I;
  #L244a8e.  v2:= 0I;
  #L244a90.  v3:= v1 ^< 2;
  #L244a94.  if v2 >= v3 then goto L244aac;
  #L244a98.  call temp:= `get`(v6, v2) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L244a9e.  v3:= temp;
  #L244aa0.  call temp:= `put`(v7, v2, v3) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L244aa6.  v2:= v2 + 1;
  #L244aaa.  goto L244a90;
  #L244aac.  v2:= v1 ^< 1;
  #L244ab0.  if v0 >= v2 then goto L244adc;
  #L244ab4.  v2:= v3 + v0 @kind int;
  #L244ab8.  v4:= v0 %% 2;
  #L244abc.  v4:= v4 * v1 @kind int;
  #L244ac0.  v4:= v4 + v3 @kind int;
  #L244ac2.  v5:= v0 / 2;
  #L244ac6.  v4:= v4 + v5 @kind int;
  #L244ac8.  call temp:= `get`(v6, v4) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L244ace.  v4:= temp;
  #L244ad0.  call temp:= `put`(v7, v2, v4) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L244ad6.  v0:= v0 + 1;
  #L244ada.  goto L244aac;
  #L244adc.  return v7 @kind object;
}
procedure `java.nio.ByteBuffer` `zza`(`android.media.Image$Plane`[] v12 @kind object, `int` v13 , `int` v14 ) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.zza:([Landroid/media/Image$Plane;II)Ljava/nio/ByteBuffer;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L244948.  v4:= v13 * v14 @kind int;
  #L24494c.  v0:= v4 / 4;
  #L244950.  v1:= 2I;
  #L244952.  v0:= v0 * 2;
  #L244956.  v0:= v0 + v4 @kind int;
  #L244958.  v11:= new `byte`[v0];
  #L24495c.  v0:= 1I;
  #L24495e.  v2:= v12[v0] @kind object;
  #L244962.  call temp:= `getBuffer`(v2) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L244968.  v2:= temp @kind object;
  #L24496a.  v3:= v12[v1] @kind object;
  #L24496e.  call temp:= `getBuffer`(v3) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L244974.  v3:= temp @kind object;
  #L244976.  call temp:= `position`(v3) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L24497c.  v5:= temp;
  #L24497e.  call temp:= `limit`(v2) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L244984.  v6:= temp;
  #L244986.  v7:= v5 + 1;
  #L24498a.  call temp:= `position`(v3, v7) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L244990.  v7:= v6 + -1;
  #L244994.  call temp:= `limit`(v2, v7) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L24499a.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L2449a0.  v7:= temp;
  #L2449a2.  v8:= v4 * 2;
  #L2449a6.  v8:= v8 / 4;
  #L2449aa.  v9:= v8 + -2;
  #L2449ae.  v10:= 0I;
  #L2449b0.  if v7 != v9 then goto L2449c4;
  #L2449b4.  call temp:= `compareTo`(v3, v2) @signature `Ljava/nio/ByteBuffer;.compareTo:(Ljava/nio/ByteBuffer;)I` @kind virtual;
  #L2449ba.  v7:= temp;
  #L2449bc.  if v7 != 0 then goto L2449c4;
  #L2449c0.  v7:= 1I;
  #L2449c2.  goto L2449c6;
  #L2449c4.  v7:= 0I;
  #L2449c6.  call temp:= `position`(v3, v5) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L2449cc.  call temp:= `limit`(v2, v6) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L2449d2.  if v7 == 0 then goto L244a12;
  #L2449d6.  v13:= v12[v10] @kind object;
  #L2449da.  call temp:= `getBuffer`(v13) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L2449e0.  v13:= temp @kind object;
  #L2449e2.  call temp:= `get`(v13, v11, v10, v4) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2449e8.  v13:= v12[v0] @kind object;
  #L2449ec.  call temp:= `getBuffer`(v13) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L2449f2.  v13:= temp @kind object;
  #L2449f4.  v12:= v12[v1] @kind object;
  #L2449f8.  call temp:= `getBuffer`(v12) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L2449fe.  v12:= temp @kind object;
  #L244a00.  call temp:= `get`(v12, v11, v4, v0) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L244a06.  v4:= v4 + v0 @kind int;
  #L244a08.  v8:= v8 - v0 @kind int;
  #L244a0a.  call temp:= `get`(v13, v11, v4, v8) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L244a10.  goto L244a48;
  #L244a12.  v5:= v12[v10] @kind object;
  #L244a16.  v9:= 0I;
  #L244a18.  v10:= 1I;
  #L244a1a.  v6:= v13;
  #L244a1c.  v7:= v14;
  #L244a1e.  v8:= v11 @kind object;
  #L244a20.  call `zza`(v5, v6, v7, v8, v9, v10) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.zza:(Landroid/media/Image$Plane;II[BII)V` @kind static;
  #L244a26.  v5:= v12[v0] @kind object;
  #L244a2a.  v9:= v4 + 1;
  #L244a2e.  v10:= 2I;
  #L244a30.  call `zza`(v5, v6, v7, v8, v9, v10) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.zza:(Landroid/media/Image$Plane;II[BII)V` @kind static;
  #L244a36.  v0:= v12[v1] @kind object;
  #L244a3a.  v5:= 2I;
  #L244a3c.  v1:= v13;
  #L244a3e.  v2:= v14;
  #L244a40.  v3:= v11 @kind object;
  #L244a42.  call `zza`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.zza:(Landroid/media/Image$Plane;II[BII)V` @kind static;
  #L244a48.  call temp:= `wrap`(v11) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L244a4e.  v12:= temp @kind object;
  #L244a50.  return v12 @kind object;
}
procedure `void` `zza`(`android.media.Image$Plane` v7 @kind object, `int` v8 , `int` v9 , `byte`[] v10 @kind object, `int` v11 , `int` v12 ) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.zza:(Landroid/media/Image$Plane;II[BII)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L244b28.  call temp:= `getBuffer`(v7) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L244b2e.  v0:= temp @kind object;
  #L244b30.  call temp:= `rewind`(v0) @signature `Ljava/nio/ByteBuffer;.rewind:()Ljava/nio/Buffer;` @kind virtual;
  #L244b36.  call temp:= `limit`(v0) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L244b3c.  v1:= temp;
  #L244b3e.  call temp:= `getRowStride`(v7) @signature `Landroid/media/Image$Plane;.getRowStride:()I` @kind virtual;
  #L244b44.  v2:= temp;
  #L244b46.  v1:= v1 + v2 @kind int;
  #L244b48.  v1:= v1 + -1;
  #L244b4c.  call temp:= `getRowStride`(v7) @signature `Landroid/media/Image$Plane;.getRowStride:()I` @kind virtual;
  #L244b52.  v2:= temp;
  #L244b54.  v1:= v1 / v2 @kind int;
  #L244b56.  if v1 != 0 then goto L244b5c;
  #L244b5a.  return @kind void;
  #L244b5c.  v9:= v9 / v1 @kind int;
  #L244b5e.  v8:= v8 / v9 @kind int;
  #L244b60.  v9:= 0I;
  #L244b62.  v2:= 0I;
  #L244b64.  v3:= 0I;
  #L244b66.  if v2 >= v1 then goto L244ba0;
  #L244b6a.  v5:= v3;
  #L244b6c.  v4:= 0I;
  #L244b6e.  if v4 >= v8 then goto L244b90;
  #L244b72.  call temp:= `get`(v0, v5) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L244b78.  v6:= temp;
  #L244b7a.  v10[v11]:= v6 @kind byte;
  #L244b7e.  v11:= v11 + v12 @kind int;
  #L244b80.  call temp:= `getPixelStride`(v7) @signature `Landroid/media/Image$Plane;.getPixelStride:()I` @kind virtual;
  #L244b86.  v6:= temp;
  #L244b88.  v5:= v5 + v6 @kind int;
  #L244b8a.  v4:= v4 + 1;
  #L244b8e.  goto L244b6e;
  #L244b90.  call temp:= `getRowStride`(v7) @signature `Landroid/media/Image$Plane;.getRowStride:()I` @kind virtual;
  #L244b96.  v4:= temp;
  #L244b98.  v3:= v3 + v4 @kind int;
  #L244b9a.  v2:= v2 + 1;
  #L244b9e.  goto L244b66;
  #L244ba0.  return @kind void;
}
procedure `byte`[] `zza`(`byte`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.zza:([BII)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2445d4.  v6:= new `android.graphics.YuvImage`;
  #L2445d8.  v2:= 17I;
  #L2445dc.  v5:= 0I;
  #L2445de.  v0:= v6 @kind object;
  #L2445e0.  v1:= v7 @kind object;
  #L2445e2.  v3:= v8;
  #L2445e4.  v4:= v9;
  #L2445e6.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Landroid/graphics/YuvImage;.<init>:([BIII[I)V` @kind direct;
  #L2445ec.  v7:= new `java.io.ByteArrayOutputStream`;
  #L2445f0.  call `<init>`(v7) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L2445f6.  v0:= new `android.graphics.Rect`;
  #L2445fa.  v1:= 0I;
  #L2445fc.  call `<init>`(v0, v1, v1, v8, v9) @signature `Landroid/graphics/Rect;.<init>:(IIII)V` @kind direct;
  #L244602.  v8:= 100I;
  #L244606.  call temp:= `compressToJpeg`(v6, v0, v8, v7) @signature `Landroid/graphics/YuvImage;.compressToJpeg:(Landroid/graphics/Rect;ILjava/io/OutputStream;)Z` @kind virtual;
  #L24460c.  call temp:= `toByteArray`(v7) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L244612.  v8:= temp @kind object;
  #L244614.  call `close`(v7) @signature `Ljava/io/ByteArrayOutputStream;.close:()V` @kind virtual;
  #L24461a.  goto L244640;
  #L24461c.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L24461e.  call `close`(v7) @signature `Ljava/io/ByteArrayOutputStream;.close:()V` @kind virtual;
  #L244624.  goto L24462e;
  #L244626.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L244628.  call `zza`(v8, v7) @signature `Lcom/google/android/gms/internal/mlkit_vision_common/zzn;.zza:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L24462e.  throw v8;
  #L244630.  v8:= 0I;
  #L244632.  v7:= "ImageConvertUtils" @kind object;
  #L244636.  v9:= "Error closing ByteArrayOutputStream" @kind object;
  #L24463a.  call temp:= `w`(v7, v9) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L244640.  return v8 @kind object;
  catch `java.io.IOException` @[L2445ec..L2445f6] goto L244630;
  catch `java.lang.Throwable` @[L2445f6..L244614] goto L24461c;
  catch `java.io.IOException` @[L244614..L24461a] goto L244632;
  catch `java.lang.Throwable` @[L24461e..L244624] goto L244626;
  catch `java.io.IOException` @[L244628..L244630] goto L244630;
}
procedure `byte`[] `byteBufferToByteArray`(`com.google.mlkit.vision.common.internal.ImageConvertUtils` v3 @kind this, `java.nio.ByteBuffer` v4 @kind object) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.byteBufferToByteArray:(Ljava/nio/ByteBuffer;)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L244584.  call temp:= `hasArray`(v4) @signature `Ljava/nio/ByteBuffer;.hasArray:()Z` @kind virtual;
  #L24458a.  v0:= temp;
  #L24458c.  if v0 == 0 then goto L2445a6;
  #L244590.  call temp:= `arrayOffset`(v4) @signature `Ljava/nio/ByteBuffer;.arrayOffset:()I` @kind virtual;
  #L244596.  v0:= temp;
  #L244598.  if v0 != 0 then goto L2445a6;
  #L24459c.  call temp:= `array`(v4) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L2445a2.  v4:= temp @kind object;
  #L2445a4.  return v4 @kind object;
  #L2445a6.  call temp:= `rewind`(v4) @signature `Ljava/nio/ByteBuffer;.rewind:()Ljava/nio/Buffer;` @kind virtual;
  #L2445ac.  call temp:= `limit`(v4) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L2445b2.  v0:= temp;
  #L2445b4.  v1:= new `byte`[v0];
  #L2445b8.  v2:= 0I;
  #L2445ba.  call temp:= `get`(v4, v1, v2, v0) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2445c0.  return v1 @kind object;
}
procedure `java.nio.ByteBuffer` `cloneByteBuffer`(`com.google.mlkit.vision.common.internal.ImageConvertUtils` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.cloneByteBuffer:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2446a4.  call temp:= `checkNotNull`(v2) @signature `Lcom/google/android/gms/common/internal/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2446aa.  call temp:= `capacity`(v2) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L2446b0.  v0:= temp;
  #L2446b2.  call temp:= `allocate`(v0) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L2446b8.  v0:= temp @kind object;
  #L2446ba.  call temp:= `rewind`(v2) @signature `Ljava/nio/ByteBuffer;.rewind:()Ljava/nio/Buffer;` @kind virtual;
  #L2446c0.  call temp:= `put`(v0, v2) @signature `Ljava/nio/ByteBuffer;.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2446c6.  call temp:= `rewind`(v2) @signature `Ljava/nio/ByteBuffer;.rewind:()Ljava/nio/Buffer;` @kind virtual;
  #L2446cc.  call temp:= `flip`(v0) @signature `Ljava/nio/ByteBuffer;.flip:()Ljava/nio/Buffer;` @kind virtual;
  #L2446d2.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `convertJpegToUpRightBitmap`(`com.google.mlkit.vision.common.internal.ImageConvertUtils` v4 @kind this, `android.media.Image` v5 @kind object, `int` v6 ) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.convertJpegToUpRightBitmap:(Landroid/media/Image;I)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2442cc.  call temp:= `getFormat`(v5) @signature `Landroid/media/Image;.getFormat:()I` @kind virtual;
  #L2442d2.  v0:= temp;
  #L2442d4.  v1:= 1I;
  #L2442d6.  v2:= 0I;
  #L2442d8.  v3:= 256I;
  #L2442dc.  if v0 != v3 then goto L2442e4;
  #L2442e0.  v0:= 1I;
  #L2442e2.  goto L2442e6;
  #L2442e4.  v0:= 0I;
  #L2442e6.  v3:= "Only JPEG and YUV_420_888 are supported now" @kind object;
  #L2442ea.  call `checkArgument`(v0, v3) @signature `Lcom/google/android/gms/common/internal/Preconditions;.checkArgument:(ZLjava/lang/Object;)V` @kind static;
  #L2442f0.  call temp:= `getPlanes`(v5) @signature `Landroid/media/Image;.getPlanes:()[Landroid/media/Image$Plane;` @kind virtual;
  #L2442f6.  v0:= temp @kind object;
  #L2442f8.  if v0 == 0 then goto L244348;
  #L2442fc.  v3:= length @variable v0;
  #L2442fe.  if v3 != v1 then goto L244348;
  #L244302.  v0:= v0[v2] @kind object;
  #L244306.  call temp:= `getBuffer`(v0) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L24430c.  v0:= temp @kind object;
  #L24430e.  call temp:= `rewind`(v0) @signature `Ljava/nio/ByteBuffer;.rewind:()Ljava/nio/Buffer;` @kind virtual;
  #L244314.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L24431a.  v1:= temp;
  #L24431c.  v3:= new `byte`[v1];
  #L244320.  call temp:= `get`(v0, v3) @signature `Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L244326.  call temp:= `decodeByteArray`(v3, v2, v1) @signature `Landroid/graphics/BitmapFactory;.decodeByteArray:([BII)Landroid/graphics/Bitmap;` @kind static;
  #L24432c.  v0:= temp @kind object;
  #L24432e.  call temp:= `getWidth`(v5) @signature `Landroid/media/Image;.getWidth:()I` @kind virtual;
  #L244334.  v1:= temp;
  #L244336.  call temp:= `getHeight`(v5) @signature `Landroid/media/Image;.getHeight:()I` @kind virtual;
  #L24433c.  v5:= temp;
  #L24433e.  call temp:= `zza`(v0, v6, v1, v5) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.zza:(Landroid/graphics/Bitmap;III)Landroid/graphics/Bitmap;` @kind static;
  #L244344.  v5:= temp @kind object;
  #L244346.  return v5 @kind object;
  #L244348.  v5:= new `java.lang.IllegalArgumentException`;
  #L24434c.  v6:= "Unexpected image format, JPEG should have exactly 1 image plane" @kind object;
  #L244350.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L244356.  throw v5;
}
procedure `java.nio.ByteBuffer` `convertToNv21Buffer`(`com.google.mlkit.vision.common.internal.ImageConvertUtils` v17 @kind this, `com.google.mlkit.vision.common.InputImage` v18 @kind object, `boolean` v19 ) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.convertToNv21Buffer:(Lcom/google/mlkit/vision/common/InputImage;Z)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L2446e4.  v0:= v19;
  #L2446e8.  call temp:= `getFormat`(v18) @signature `Lcom/google/mlkit/vision/common/InputImage;.getFormat:()I` @kind virtual;
  #L2446ee.  v1:= temp;
  #L2446f0.  v2:= -1I;
  #L2446f2.  if v1 == v2 then goto L2447b6;
  #L2446f6.  v2:= 17I;
  #L2446fa.  if v1 == v2 then goto L244770;
  #L2446fe.  v2:= 35I;
  #L244702.  v3:= 13I;
  #L244706.  v4:= "Unsupported image format" @kind object;
  #L24470a.  if v1 == v2 then goto L244736;
  #L24470e.  v2:= 842094169I;
  #L244714.  if v1 != v2 then goto L24472a;
  #L244718.  call temp:= `getByteBuffer`(v18) @signature `Lcom/google/mlkit/vision/common/InputImage;.getByteBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L24471e.  v1:= temp @kind object;
  #L244720.  call temp:= `zza`(v1, v0) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.zza:(Ljava/nio/ByteBuffer;Z)Ljava/nio/ByteBuffer;` @kind static;
  #L244726.  v0:= temp @kind object;
  #L244728.  return v0 @kind object;
  #L24472a.  v0:= new `com.google.mlkit.common.MlKitException`;
  #L24472e.  call `<init>`(v0, v4, v3) @signature `Lcom/google/mlkit/common/MlKitException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L244734.  throw v0;
  #L244736.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L24473a.  v1:= 19I;
  #L24473e.  if v0 < v1 then goto L244764;
  #L244742.  call temp:= `getPlanes`(v18) @signature `Lcom/google/mlkit/vision/common/InputImage;.getPlanes:()[Landroid/media/Image$Plane;` @kind virtual;
  #L244748.  v0:= temp @kind object;
  #L24474a.  call temp:= `getWidth`(v18) @signature `Lcom/google/mlkit/vision/common/InputImage;.getWidth:()I` @kind virtual;
  #L244750.  v1:= temp;
  #L244752.  call temp:= `getHeight`(v18) @signature `Lcom/google/mlkit/vision/common/InputImage;.getHeight:()I` @kind virtual;
  #L244758.  v2:= temp;
  #L24475a.  call temp:= `zza`(v0, v1, v2) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.zza:([Landroid/media/Image$Plane;II)Ljava/nio/ByteBuffer;` @kind static;
  #L244760.  v0:= temp @kind object;
  #L244762.  return v0 @kind object;
  #L244764.  v0:= new `com.google.mlkit.common.MlKitException`;
  #L244768.  call `<init>`(v0, v4, v3) @signature `Lcom/google/mlkit/common/MlKitException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L24476e.  throw v0;
  #L244770.  if v0 == 0 then goto L2447ac;
  #L244774.  call temp:= `getByteBuffer`(v18) @signature `Lcom/google/mlkit/vision/common/InputImage;.getByteBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L24477a.  v0:= temp @kind object;
  #L24477c.  call temp:= `hasArray`(v0) @signature `Ljava/nio/ByteBuffer;.hasArray:()Z` @kind virtual;
  #L244782.  v1:= temp;
  #L244784.  if v1 == 0 then goto L24478a;
  #L244788.  return v0 @kind object;
  #L24478a.  call temp:= `rewind`(v0) @signature `Ljava/nio/ByteBuffer;.rewind:()Ljava/nio/Buffer;` @kind virtual;
  #L244790.  call temp:= `limit`(v0) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L244796.  v1:= temp;
  #L244798.  v1:= new `byte`[v1];
  #L24479c.  call temp:= `get`(v0, v1) @signature `Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2447a2.  call temp:= `wrap`(v1) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L2447a8.  v0:= temp @kind object;
  #L2447aa.  return v0 @kind object;
  #L2447ac.  call temp:= `getByteBuffer`(v18) @signature `Lcom/google/mlkit/vision/common/InputImage;.getByteBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L2447b2.  v0:= temp @kind object;
  #L2447b4.  return v0 @kind object;
  #L2447b6.  call temp:= `getBitmapInternal`(v18) @signature `Lcom/google/mlkit/vision/common/InputImage;.getBitmapInternal:()Landroid/graphics/Bitmap;` @kind virtual;
  #L2447bc.  v1:= temp @kind object;
  #L2447be.  call temp:= `getWidth`(v1) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2447c4.  v9:= temp;
  #L2447c6.  call temp:= `getHeight`(v1) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2447cc.  v10:= temp;
  #L2447ce.  v11:= v9 * v10 @kind int;
  #L2447d2.  v12:= new `int`[v11];
  #L2447d6.  v3:= 0I;
  #L2447d8.  v5:= 0I;
  #L2447da.  v6:= 0I;
  #L2447dc.  v2:= v12 @kind object;
  #L2447de.  v4:= v9;
  #L2447e0.  v7:= v9;
  #L2447e2.  v8:= v10;
  #L2447e4.  call `getPixels`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Landroid/graphics/Bitmap;.getPixels:([IIIIIII)V` @kind virtual;
  #L2447ea.  v1:= (`double`) v10 @kind i2d;
  #L2447ec.  v3:= 2.0D;
  #L2447f0.  call temp:= `isNaN`(v1) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2447f6.  v1:= v1 / v3 @kind double;
  #L2447f8.  call temp:= `ceil`(v1) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L2447fe.  v1:= temp @kind wide;
  #L244800.  v1:= (`int`) v1 @kind d2i;
  #L244802.  v1:= v1 * 2;
  #L244806.  v5:= (`double`) v9 @kind i2d;
  #L244808.  call temp:= `isNaN`(v5) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L24480e.  v5:= v5 / v3 @kind double;
  #L244810.  call temp:= `ceil`(v5) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L244816.  v2:= temp @kind wide;
  #L244818.  v2:= (`int`) v2 @kind d2i;
  #L24481a.  v1:= v1 * v2 @kind int;
  #L24481e.  v1:= v1 + v11 @kind int;
  #L244820.  if v0 == 0 then goto L24482e;
  #L244824.  call temp:= `allocate`(v1) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L24482a.  v0:= temp @kind object;
  #L24482c.  goto L244836;
  #L24482e.  call temp:= `allocateDirect`(v1) @signature `Ljava/nio/ByteBuffer;.allocateDirect:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L244834.  v0:= temp @kind object;
  #L244836.  v1:= 0I;
  #L244838.  v2:= 0I;
  #L24483a.  v3:= 0I;
  #L24483c.  v4:= 0I;
  #L24483e.  if v2 >= v10 then goto L244934;
  #L244842.  v5:= 0I;
  #L244844.  if v5 >= v9 then goto L24492e;
  #L244848.  v6:= v12[v3];
  #L24484c.  v6:= v6 ^> 16;
  #L244850.  v7:= 255I;
  #L244854.  v6:= v6 ^& v7 @kind int;
  #L244856.  v8:= v12[v3];
  #L24485a.  v8:= v8 ^> 8;
  #L24485e.  v8:= v8 ^& v7 @kind int;
  #L244860.  v13:= v12[v3];
  #L244864.  v13:= v13 ^& v7 @kind int;
  #L244866.  v14:= v6 * 66;
  #L24486a.  v15:= v8 * 129;
  #L24486e.  v14:= v14 + v15 @kind int;
  #L244870.  v15:= v13 * 25;
  #L244874.  v14:= v14 + v15 @kind int;
  #L244876.  v14:= v14 + 128;
  #L24487a.  v14:= v14 ^> 8;
  #L24487e.  v14:= v14 + 16;
  #L244882.  v15:= v6 * -38;
  #L244886.  v16:= v8 * 74;
  #L24488a.  v15:= v15 - v16 @kind int;
  #L24488e.  v16:= v13 * 112;
  #L244892.  v15:= v15 + v16 @kind int;
  #L244896.  v15:= v15 + 128;
  #L24489a.  v15:= v15 ^> 8;
  #L24489e.  v15:= v15 + 128;
  #L2448a2.  v6:= v6 * 112;
  #L2448a6.  v8:= v8 * 94;
  #L2448aa.  v6:= v6 - v8 @kind int;
  #L2448ac.  v13:= v13 * 18;
  #L2448b0.  v6:= v6 - v13 @kind int;
  #L2448b2.  v6:= v6 + 128;
  #L2448b6.  v6:= v6 ^> 8;
  #L2448ba.  v6:= v6 + 128;
  #L2448be.  v8:= v4 + 1;
  #L2448c2.  if v14 >= 0 then goto L2448ca;
  #L2448c6.  v13:= 0I;
  #L2448c8.  goto L2448d2;
  #L2448ca.  call temp:= `min`(v7, v14) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L2448d0.  v13:= temp;
  #L2448d2.  v13:= (`byte`) v13 @kind i2b;
  #L2448d4.  call temp:= `put`(v0, v4, v13) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2448da.  v4:= v2 %% 2;
  #L2448de.  if v4 != 0 then goto L244922;
  #L2448e2.  v4:= v3 %% 2;
  #L2448e6.  if v4 != 0 then goto L244922;
  #L2448ea.  v4:= v11 + 1;
  #L2448ee.  if v6 >= 0 then goto L2448f6;
  #L2448f2.  v6:= 0I;
  #L2448f4.  goto L2448fe;
  #L2448f6.  call temp:= `min`(v7, v6) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L2448fc.  v6:= temp;
  #L2448fe.  v6:= (`byte`) v6 @kind i2b;
  #L244900.  call temp:= `put`(v0, v11, v6) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L244906.  v11:= v4 + 1;
  #L24490a.  if v15 >= 0 then goto L244912;
  #L24490e.  v6:= 0I;
  #L244910.  goto L24491a;
  #L244912.  call temp:= `min`(v7, v15) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L244918.  v6:= temp;
  #L24491a.  v6:= (`byte`) v6 @kind i2b;
  #L24491c.  call temp:= `put`(v0, v4, v6) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L244922.  v3:= v3 + 1;
  #L244926.  v5:= v5 + 1;
  #L24492a.  v4:= v8;
  #L24492c.  goto L244844;
  #L24492e.  v2:= v2 + 1;
  #L244932.  goto L24483e;
  #L244934.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `convertToUpRightBitmap`(`com.google.mlkit.vision.common.internal.ImageConvertUtils` v5 @kind this, `com.google.mlkit.vision.common.InputImage` v6 @kind object) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.convertToUpRightBitmap:(Lcom/google/mlkit/vision/common/InputImage;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L244368.  call temp:= `getFormat`(v6) @signature `Lcom/google/mlkit/vision/common/InputImage;.getFormat:()I` @kind virtual;
  #L24436e.  v0:= temp;
  #L244370.  v1:= -1I;
  #L244372.  if v0 == v1 then goto L244478;
  #L244376.  v1:= 17I;
  #L24437a.  if v0 == v1 then goto L24444e;
  #L24437e.  v1:= 35I;
  #L244382.  v2:= 13I;
  #L244386.  v3:= "Unsupported image format" @kind object;
  #L24438a.  if v0 == v1 then goto L2443f4;
  #L24438e.  v1:= 842094169I;
  #L244394.  if v0 != v1 then goto L2443e8;
  #L244398.  call temp:= `getByteBuffer`(v6) @signature `Lcom/google/mlkit/vision/common/InputImage;.getByteBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L24439e.  v0:= temp @kind object;
  #L2443a0.  call temp:= `getWidth`(v6) @signature `Lcom/google/mlkit/vision/common/InputImage;.getWidth:()I` @kind virtual;
  #L2443a6.  v1:= temp;
  #L2443a8.  call temp:= `getHeight`(v6) @signature `Lcom/google/mlkit/vision/common/InputImage;.getHeight:()I` @kind virtual;
  #L2443ae.  v2:= temp;
  #L2443b0.  call temp:= `getRotationDegrees`(v6) @signature `Lcom/google/mlkit/vision/common/InputImage;.getRotationDegrees:()I` @kind virtual;
  #L2443b6.  v6:= temp;
  #L2443b8.  v3:= 1I;
  #L2443ba.  call temp:= `zza`(v0, v3) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.zza:(Ljava/nio/ByteBuffer;Z)Ljava/nio/ByteBuffer;` @kind static;
  #L2443c0.  v0:= temp @kind object;
  #L2443c2.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L2443c8.  v0:= temp @kind object;
  #L2443ca.  call temp:= `zza`(v0, v1, v2) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.zza:([BII)[B` @kind static;
  #L2443d0.  v0:= temp @kind object;
  #L2443d2.  v3:= 0I;
  #L2443d4.  v4:= length @variable v0;
  #L2443d6.  call temp:= `decodeByteArray`(v0, v3, v4) @signature `Landroid/graphics/BitmapFactory;.decodeByteArray:([BII)Landroid/graphics/Bitmap;` @kind static;
  #L2443dc.  v0:= temp @kind object;
  #L2443de.  call temp:= `zza`(v0, v6, v1, v2) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.zza:(Landroid/graphics/Bitmap;III)Landroid/graphics/Bitmap;` @kind static;
  #L2443e4.  v6:= temp @kind object;
  #L2443e6.  return v6 @kind object;
  #L2443e8.  v6:= new `com.google.mlkit.common.MlKitException`;
  #L2443ec.  call `<init>`(v6, v3, v2) @signature `Lcom/google/mlkit/common/MlKitException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2443f2.  throw v6;
  #L2443f4.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L2443f8.  v1:= 19I;
  #L2443fc.  if v0 < v1 then goto L244442;
  #L244400.  call temp:= `getPlanes`(v6) @signature `Lcom/google/mlkit/vision/common/InputImage;.getPlanes:()[Landroid/media/Image$Plane;` @kind virtual;
  #L244406.  v0:= temp @kind object;
  #L244408.  call temp:= `getWidth`(v6) @signature `Lcom/google/mlkit/vision/common/InputImage;.getWidth:()I` @kind virtual;
  #L24440e.  v1:= temp;
  #L244410.  call temp:= `getHeight`(v6) @signature `Lcom/google/mlkit/vision/common/InputImage;.getHeight:()I` @kind virtual;
  #L244416.  v2:= temp;
  #L244418.  call temp:= `zza`(v0, v1, v2) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.zza:([Landroid/media/Image$Plane;II)Ljava/nio/ByteBuffer;` @kind static;
  #L24441e.  v0:= temp @kind object;
  #L244420.  call temp:= `getWidth`(v6) @signature `Lcom/google/mlkit/vision/common/InputImage;.getWidth:()I` @kind virtual;
  #L244426.  v1:= temp;
  #L244428.  call temp:= `getHeight`(v6) @signature `Lcom/google/mlkit/vision/common/InputImage;.getHeight:()I` @kind virtual;
  #L24442e.  v2:= temp;
  #L244430.  call temp:= `getRotationDegrees`(v6) @signature `Lcom/google/mlkit/vision/common/InputImage;.getRotationDegrees:()I` @kind virtual;
  #L244436.  v6:= temp;
  #L244438.  call temp:= `zza`(v5, v0, v1, v2, v6) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.zza:(Ljava/nio/ByteBuffer;III)Landroid/graphics/Bitmap;` @kind direct;
  #L24443e.  v6:= temp @kind object;
  #L244440.  return v6 @kind object;
  #L244442.  v6:= new `com.google.mlkit.common.MlKitException`;
  #L244446.  call `<init>`(v6, v3, v2) @signature `Lcom/google/mlkit/common/MlKitException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L24444c.  throw v6;
  #L24444e.  call temp:= `getByteBuffer`(v6) @signature `Lcom/google/mlkit/vision/common/InputImage;.getByteBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L244454.  v0:= temp @kind object;
  #L244456.  call temp:= `getWidth`(v6) @signature `Lcom/google/mlkit/vision/common/InputImage;.getWidth:()I` @kind virtual;
  #L24445c.  v1:= temp;
  #L24445e.  call temp:= `getHeight`(v6) @signature `Lcom/google/mlkit/vision/common/InputImage;.getHeight:()I` @kind virtual;
  #L244464.  v2:= temp;
  #L244466.  call temp:= `getRotationDegrees`(v6) @signature `Lcom/google/mlkit/vision/common/InputImage;.getRotationDegrees:()I` @kind virtual;
  #L24446c.  v6:= temp;
  #L24446e.  call temp:= `zza`(v5, v0, v1, v2, v6) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.zza:(Ljava/nio/ByteBuffer;III)Landroid/graphics/Bitmap;` @kind direct;
  #L244474.  v6:= temp @kind object;
  #L244476.  return v6 @kind object;
  #L244478.  call temp:= `getBitmapInternal`(v6) @signature `Lcom/google/mlkit/vision/common/InputImage;.getBitmapInternal:()Landroid/graphics/Bitmap;` @kind virtual;
  #L24447e.  v0:= temp @kind object;
  #L244480.  call temp:= `getRotationDegrees`(v6) @signature `Lcom/google/mlkit/vision/common/InputImage;.getRotationDegrees:()I` @kind virtual;
  #L244486.  v1:= temp;
  #L244488.  call temp:= `getWidth`(v6) @signature `Lcom/google/mlkit/vision/common/InputImage;.getWidth:()I` @kind virtual;
  #L24448e.  v2:= temp;
  #L244490.  call temp:= `getHeight`(v6) @signature `Lcom/google/mlkit/vision/common/InputImage;.getHeight:()I` @kind virtual;
  #L244496.  v6:= temp;
  #L244498.  call temp:= `zza`(v0, v1, v2, v6) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.zza:(Landroid/graphics/Bitmap;III)Landroid/graphics/Bitmap;` @kind static;
  #L24449e.  v6:= temp @kind object;
  #L2444a0.  return v6 @kind object;
}
procedure `android.graphics.Bitmap` `getUpRightBitmap`(`com.google.mlkit.vision.common.internal.ImageConvertUtils` v3 @kind this, `com.google.mlkit.vision.common.InputImage` v4 @kind object) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.getUpRightBitmap:(Lcom/google/mlkit/vision/common/InputImage;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2444b4.  call temp:= `getBitmapInternal`(v4) @signature `Lcom/google/mlkit/vision/common/InputImage;.getBitmapInternal:()Landroid/graphics/Bitmap;` @kind virtual;
  #L2444ba.  v0:= temp @kind object;
  #L2444bc.  if v0 == 0 then goto L2444ea;
  #L2444c0.  call temp:= `getBitmapInternal`(v4) @signature `Lcom/google/mlkit/vision/common/InputImage;.getBitmapInternal:()Landroid/graphics/Bitmap;` @kind virtual;
  #L2444c6.  v0:= temp @kind object;
  #L2444c8.  call temp:= `getRotationDegrees`(v4) @signature `Lcom/google/mlkit/vision/common/InputImage;.getRotationDegrees:()I` @kind virtual;
  #L2444ce.  v1:= temp;
  #L2444d0.  call temp:= `getWidth`(v4) @signature `Lcom/google/mlkit/vision/common/InputImage;.getWidth:()I` @kind virtual;
  #L2444d6.  v2:= temp;
  #L2444d8.  call temp:= `getHeight`(v4) @signature `Lcom/google/mlkit/vision/common/InputImage;.getHeight:()I` @kind virtual;
  #L2444de.  v4:= temp;
  #L2444e0.  call temp:= `zza`(v0, v1, v2, v4) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.zza:(Landroid/graphics/Bitmap;III)Landroid/graphics/Bitmap;` @kind static;
  #L2444e6.  v4:= temp @kind object;
  #L2444e8.  return v4 @kind object;
  #L2444ea.  call temp:= `convertToUpRightBitmap`(v3, v4) @signature `Lcom/google/mlkit/vision/common/internal/ImageConvertUtils;.convertToUpRightBitmap:(Lcom/google/mlkit/vision/common/InputImage;)Landroid/graphics/Bitmap;` @kind virtual;
  #L2444f0.  v4:= temp @kind object;
  #L2444f2.  return v4 @kind object;
}
