record `com.google.mlkit.common.sdkinternal.TaskQueue` @kind class @AccessFlag PUBLIC {
  `java.lang.Object` `com.google.mlkit.common.sdkinternal.TaskQueue.zza` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.mlkit.common.sdkinternal.TaskQueue.zzb` @AccessFlag PRIVATE;
  `java.util.Queue` `com.google.mlkit.common.sdkinternal.TaskQueue.zzc` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicReference` `com.google.mlkit.common.sdkinternal.TaskQueue.zzd` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.mlkit.common.sdkinternal.TaskQueue` v1 @kind this) @signature `Lcom/google/mlkit/common/sdkinternal/TaskQueue;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L23ddb8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23ddbe.  v0:= new `java.lang.Object`;
  #L23ddc2.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23ddc8.  v1.`com.google.mlkit.common.sdkinternal.TaskQueue.zza` @type ^`java.lang.Object` := v0 @kind object;
  #L23ddcc.  v0:= new `java.util.ArrayDeque`;
  #L23ddd0.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L23ddd6.  v1.`com.google.mlkit.common.sdkinternal.TaskQueue.zzc` @type ^`java.util.Queue` := v0 @kind object;
  #L23ddda.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L23ddde.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L23dde4.  v1.`com.google.mlkit.common.sdkinternal.TaskQueue.zzd` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L23dde8.  return @kind void;
}
procedure `java.util.concurrent.atomic.AtomicReference` `a`(`com.google.mlkit.common.sdkinternal.TaskQueue` v0 @kind object) @signature `Lcom/google/mlkit/common/sdkinternal/TaskQueue;.a:(Lcom/google/mlkit/common/sdkinternal/TaskQueue;)Ljava/util/concurrent/atomic/AtomicReference;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L23dda0.  v0:= v0.`com.google.mlkit.common.sdkinternal.TaskQueue.zzd` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L23dda4.  return v0 @kind object;
}
procedure `void` `b`(`com.google.mlkit.common.sdkinternal.TaskQueue` v0 @kind object) @signature `Lcom/google/mlkit/common/sdkinternal/TaskQueue;.b:(Lcom/google/mlkit/common/sdkinternal/TaskQueue;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L23df3c.  call `zza`(v0) @signature `Lcom/google/mlkit/common/sdkinternal/TaskQueue;.zza:()V` @kind direct;
  #L23df42.  return @kind void;
}
procedure `void` `zza`(`com.google.mlkit.common.sdkinternal.TaskQueue` v2 @kind this) @signature `Lcom/google/mlkit/common/sdkinternal/TaskQueue;.zza:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L23de94.  v0:= v2.`com.google.mlkit.common.sdkinternal.TaskQueue.zza` @type ^`java.lang.Object` @kind object;
  #L23de98.  @monitorenter v0
  #L23de9a.  v1:= v2.`com.google.mlkit.common.sdkinternal.TaskQueue.zzc` @type ^`java.util.Queue` @kind object;
  #L23de9e.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Queue;.isEmpty:()Z` @kind interface;
  #L23dea4.  v1:= temp;
  #L23dea6.  if v1 == 0 then goto L23deb4;
  #L23deaa.  v1:= 0I;
  #L23deac.  v2.`com.google.mlkit.common.sdkinternal.TaskQueue.zzb` @type ^`boolean` := v1 @kind boolean;
  #L23deb0.  @monitorexit v0
  #L23deb2.  return @kind void;
  #L23deb4.  v1:= v2.`com.google.mlkit.common.sdkinternal.TaskQueue.zzc` @type ^`java.util.Queue` @kind object;
  #L23deb8.  call temp:= `remove`(v1) @signature `Ljava/util/Queue;.remove:()Ljava/lang/Object;` @kind interface;
  #L23debe.  v1:= temp @kind object;
  #L23dec0.  v1:= (`com.google.mlkit.common.sdkinternal.TaskQueue$zzb`) v1 @kind object;
  #L23dec4.  @monitorexit v0
  #L23dec6.  v0:= v1.`com.google.mlkit.common.sdkinternal.TaskQueue$zzb.a` @type ^`java.util.concurrent.Executor` @kind object;
  #L23deca.  v1:= v1.`com.google.mlkit.common.sdkinternal.TaskQueue$zzb.b` @type ^`java.lang.Runnable` @kind object;
  #L23dece.  call `zza`(v2, v0, v1) @signature `Lcom/google/mlkit/common/sdkinternal/TaskQueue;.zza:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V` @kind direct;
  #L23ded4.  return @kind void;
  #L23ded6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L23ded8.  @monitorexit v0
  #L23deda.  throw v1;
  catch `java.lang.Throwable` @[L23de9a..L23dec6] goto L23ded6;
  catch `java.lang.Throwable` @[L23ded8..L23deda] goto L23ded6;
}
procedure `void` `zza`(`com.google.mlkit.common.sdkinternal.TaskQueue` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object, `java.lang.Runnable` v3 @kind object) @signature `Lcom/google/mlkit/common/sdkinternal/TaskQueue;.zza:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L23df00.  v0:= new `com.google.mlkit.common.sdkinternal.zzp`;
  #L23df04.  call `<init>`(v0, v1, v3) @signature `Lcom/google/mlkit/common/sdkinternal/zzp;.<init>:(Lcom/google/mlkit/common/sdkinternal/TaskQueue;Ljava/lang/Runnable;)V` @kind direct;
  #L23df0a.  call `execute`(v2, v0) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L23df10.  return @kind void;
  #L23df12.  call `zza`(v1) @signature `Lcom/google/mlkit/common/sdkinternal/TaskQueue;.zza:()V` @kind direct;
  #L23df18.  return @kind void;
  catch `java.util.concurrent.RejectedExecutionException` @[L23df0a..L23df10] goto L23df12;
}
procedure `void` `checkIsRunningOnCurrentThread`(`com.google.mlkit.common.sdkinternal.TaskQueue` v2 @kind this) @signature `Lcom/google/mlkit/common/sdkinternal/TaskQueue;.checkIsRunningOnCurrentThread:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23ddfc.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L23de02.  v0:= temp @kind object;
  #L23de04.  v1:= v2.`com.google.mlkit.common.sdkinternal.TaskQueue.zzd` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L23de08.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L23de0e.  v1:= temp @kind object;
  #L23de10.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L23de16.  v0:= temp;
  #L23de18.  call `checkState`(v0) @signature `Lcom/google/android/gms/common/internal/Preconditions;.checkState:(Z)V` @kind static;
  #L23de1e.  return @kind void;
}
procedure `void` `submit`(`com.google.mlkit.common.sdkinternal.TaskQueue` v4 @kind this, `java.util.concurrent.Executor` v5 @kind object, `java.lang.Runnable` v6 @kind object) @signature `Lcom/google/mlkit/common/sdkinternal/TaskQueue;.submit:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L23de30.  v0:= v4.`com.google.mlkit.common.sdkinternal.TaskQueue.zza` @type ^`java.lang.Object` @kind object;
  #L23de34.  @monitorenter v0
  #L23de36.  v1:= v4.`com.google.mlkit.common.sdkinternal.TaskQueue.zzb` @type ^`boolean` @kind boolean;
  #L23de3a.  if v1 == 0 then goto L23de58;
  #L23de3e.  v1:= v4.`com.google.mlkit.common.sdkinternal.TaskQueue.zzc` @type ^`java.util.Queue` @kind object;
  #L23de42.  v2:= new `com.google.mlkit.common.sdkinternal.TaskQueue$zzb`;
  #L23de46.  v3:= 0I;
  #L23de48.  call `<init>`(v2, v5, v6, v3) @signature `Lcom/google/mlkit/common/sdkinternal/TaskQueue$zzb;.<init>:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;Lcom/google/mlkit/common/sdkinternal/zzo;)V` @kind direct;
  #L23de4e.  call temp:= `add`(v1, v2) @signature `Ljava/util/Queue;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L23de54.  @monitorexit v0
  #L23de56.  return @kind void;
  #L23de58.  v1:= 1I;
  #L23de5a.  v4.`com.google.mlkit.common.sdkinternal.TaskQueue.zzb` @type ^`boolean` := v1 @kind boolean;
  #L23de5e.  @monitorexit v0
  #L23de60.  call `zza`(v4, v5, v6) @signature `Lcom/google/mlkit/common/sdkinternal/TaskQueue;.zza:(Ljava/util/concurrent/Executor;Ljava/lang/Runnable;)V` @kind direct;
  #L23de66.  return @kind void;
  #L23de68.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L23de6a.  @monitorexit v0
  #L23de6c.  throw v5;
  catch `java.lang.Throwable` @[L23de36..L23de60] goto L23de68;
  catch `java.lang.Throwable` @[L23de6a..L23de6c] goto L23de68;
}
