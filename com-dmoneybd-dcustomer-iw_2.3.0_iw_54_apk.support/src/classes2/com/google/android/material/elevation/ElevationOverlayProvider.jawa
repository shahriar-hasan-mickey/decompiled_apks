record `com.google.android.material.elevation.ElevationOverlayProvider` @kind class @AccessFlag PUBLIC {
  `int` `com.google.android.material.elevation.ElevationOverlayProvider.colorSurface` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.android.material.elevation.ElevationOverlayProvider.displayDensity` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.elevation.ElevationOverlayProvider.elevationOverlayColor` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.elevation.ElevationOverlayProvider.elevationOverlayEnabled` @AccessFlag PRIVATE_FINAL;
}
global `float` `@@com.google.android.material.elevation.ElevationOverlayProvider.FORMULA_MULTIPLIER` @AccessFlag PRIVATE_STATIC_FINAL;
global `float` `@@com.google.android.material.elevation.ElevationOverlayProvider.FORMULA_OFFSET` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.android.material.elevation.ElevationOverlayProvider` v2 @kind this, `android.content.Context` v3 @kind object) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1cef68.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1cef6e.  v0:= `@@com.google.android.material.R$attr.elevationOverlayEnabled` @type ^`int`;
  #L1cef72.  v1:= 0I;
  #L1cef74.  call temp:= `resolveBoolean`(v3, v0, v1) @signature `Lcom/google/android/material/resources/MaterialAttributes;.resolveBoolean:(Landroid/content/Context;IZ)Z` @kind static;
  #L1cef7a.  v0:= temp;
  #L1cef7c.  v2.`com.google.android.material.elevation.ElevationOverlayProvider.elevationOverlayEnabled` @type ^`boolean` := v0 @kind boolean;
  #L1cef80.  v0:= `@@com.google.android.material.R$attr.elevationOverlayColor` @type ^`int`;
  #L1cef84.  call temp:= `getColor`(v3, v0, v1) @signature `Lcom/google/android/material/color/MaterialColors;.getColor:(Landroid/content/Context;II)I` @kind static;
  #L1cef8a.  v0:= temp;
  #L1cef8c.  v2.`com.google.android.material.elevation.ElevationOverlayProvider.elevationOverlayColor` @type ^`int` := v0;
  #L1cef90.  v0:= `@@com.google.android.material.R$attr.colorSurface` @type ^`int`;
  #L1cef94.  call temp:= `getColor`(v3, v0, v1) @signature `Lcom/google/android/material/color/MaterialColors;.getColor:(Landroid/content/Context;II)I` @kind static;
  #L1cef9a.  v0:= temp;
  #L1cef9c.  v2.`com.google.android.material.elevation.ElevationOverlayProvider.colorSurface` @type ^`int` := v0;
  #L1cefa0.  call temp:= `getResources`(v3) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1cefa6.  v3:= temp @kind object;
  #L1cefa8.  call temp:= `getDisplayMetrics`(v3) @signature `Landroid/content/res/Resources;.getDisplayMetrics:()Landroid/util/DisplayMetrics;` @kind virtual;
  #L1cefae.  v3:= temp @kind object;
  #L1cefb0.  v3:= v3.`android.util.DisplayMetrics.density` @type ^`float`;
  #L1cefb4.  v2.`com.google.android.material.elevation.ElevationOverlayProvider.displayDensity` @type ^`float` := v3;
  #L1cefb8.  return @kind void;
}
procedure `boolean` `isThemeSurfaceColor`(`com.google.android.material.elevation.ElevationOverlayProvider` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.isThemeSurfaceColor:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1ced68.  v0:= 255I;
  #L1ced6c.  call temp:= `setAlphaComponent`(v2, v0) @signature `Landroidx/core/graphics/ColorUtils;.setAlphaComponent:(II)I` @kind static;
  #L1ced72.  v2:= temp;
  #L1ced74.  v0:= v1.`com.google.android.material.elevation.ElevationOverlayProvider.colorSurface` @type ^`int`;
  #L1ced78.  if v2 != v0 then goto L1ced80;
  #L1ced7c.  v2:= 1I;
  #L1ced7e.  goto L1ced82;
  #L1ced80.  v2:= 0I;
  #L1ced82.  return v2;
}
procedure `int` `calculateOverlayAlpha`(`com.google.android.material.elevation.ElevationOverlayProvider` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.calculateOverlayAlpha:(F)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1cee0c.  call temp:= `calculateOverlayAlphaFraction`(v1, v2) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.calculateOverlayAlphaFraction:(F)F` @kind virtual;
  #L1cee12.  v2:= temp;
  #L1cee14.  v0:= 255.0F;
  #L1cee18.  v2:= v2 * v0 @kind float;
  #L1cee1c.  call temp:= `round`(v2) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L1cee22.  v2:= temp;
  #L1cee24.  return v2;
}
procedure `float` `calculateOverlayAlphaFraction`(`com.google.android.material.elevation.ElevationOverlayProvider` v3 @kind this, `float` v4 ) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.calculateOverlayAlphaFraction:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1ced94.  v0:= v3.`com.google.android.material.elevation.ElevationOverlayProvider.displayDensity` @type ^`float`;
  #L1ced98.  v1:= 0I;
  #L1ced9a.  v2:= fcmpg(v0, v1);
  #L1ced9e.  if v2 <= 0 then goto L1ceddc;
  #L1ceda2.  v2:= fcmpg(v4, v1);
  #L1ceda6.  if v2 > 0 then goto L1cedac;
  #L1cedaa.  goto L1ceddc;
  #L1cedac.  v4:= v4 / v0 @kind float;
  #L1cedae.  v0:= 4.5F;
  #L1cedb2.  v1:= (`double`) v4 @kind f2d;
  #L1cedb4.  call temp:= `log1p`(v1) @signature `Ljava/lang/Math;.log1p:(D)D` @kind static;
  #L1cedba.  v1:= temp @kind wide;
  #L1cedbc.  v4:= (`float`) v1 @kind d2f;
  #L1cedbe.  v4:= v4 * v0 @kind float;
  #L1cedc2.  v0:= 2.0F;
  #L1cedc6.  v4:= v4 + v0 @kind float;
  #L1cedc8.  v0:= 100.0F;
  #L1cedcc.  v4:= v4 / v0 @kind float;
  #L1cedce.  v0:= 1.0F;
  #L1cedd2.  call temp:= `min`(v4, v0) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L1cedd8.  v4:= temp;
  #L1cedda.  return v4;
  #L1ceddc.  return v1;
}
procedure `int` `compositeOverlay`(`com.google.android.material.elevation.ElevationOverlayProvider` v2 @kind this, `int` v3 , `float` v4 ) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.compositeOverlay:(IF)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1cee38.  call temp:= `calculateOverlayAlphaFraction`(v2, v4) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.calculateOverlayAlphaFraction:(F)F` @kind virtual;
  #L1cee3e.  v4:= temp;
  #L1cee40.  call temp:= `alpha`(v3) @signature `Landroid/graphics/Color;.alpha:(I)I` @kind static;
  #L1cee46.  v0:= temp;
  #L1cee48.  v1:= 255I;
  #L1cee4c.  call temp:= `setAlphaComponent`(v3, v1) @signature `Landroidx/core/graphics/ColorUtils;.setAlphaComponent:(II)I` @kind static;
  #L1cee52.  v3:= temp;
  #L1cee54.  v1:= v2.`com.google.android.material.elevation.ElevationOverlayProvider.elevationOverlayColor` @type ^`int`;
  #L1cee58.  call temp:= `layer`(v3, v1, v4) @signature `Lcom/google/android/material/color/MaterialColors;.layer:(IIF)I` @kind static;
  #L1cee5e.  v3:= temp;
  #L1cee60.  call temp:= `setAlphaComponent`(v3, v0) @signature `Landroidx/core/graphics/ColorUtils;.setAlphaComponent:(II)I` @kind static;
  #L1cee66.  v3:= temp;
  #L1cee68.  return v3;
}
procedure `int` `compositeOverlay`(`com.google.android.material.elevation.ElevationOverlayProvider` v0 @kind this, `int` v1 , `float` v2 , `android.view.View` v3 @kind object) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.compositeOverlay:(IFLandroid/view/View;)I` @AccessFlag PUBLIC {
    temp;

  #L1cee7c.  call temp:= `getParentAbsoluteElevation`(v0, v3) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.getParentAbsoluteElevation:(Landroid/view/View;)F` @kind virtual;
  #L1cee82.  v3:= temp;
  #L1cee84.  v2:= v2 + v3 @kind float;
  #L1cee86.  call temp:= `compositeOverlay`(v0, v1, v2) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.compositeOverlay:(IF)I` @kind virtual;
  #L1cee8c.  v1:= temp;
  #L1cee8e.  return v1;
}
procedure `int` `compositeOverlayIfNeeded`(`com.google.android.material.elevation.ElevationOverlayProvider` v1 @kind this, `int` v2 , `float` v3 ) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.compositeOverlayIfNeeded:(IF)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ceea0.  v0:= v1.`com.google.android.material.elevation.ElevationOverlayProvider.elevationOverlayEnabled` @type ^`boolean` @kind boolean;
  #L1ceea4.  if v0 == 0 then goto L1ceebc;
  #L1ceea8.  call temp:= `isThemeSurfaceColor`(v1, v2) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.isThemeSurfaceColor:(I)Z` @kind direct;
  #L1ceeae.  v0:= temp;
  #L1ceeb0.  if v0 == 0 then goto L1ceebc;
  #L1ceeb4.  call temp:= `compositeOverlay`(v1, v2, v3) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.compositeOverlay:(IF)I` @kind virtual;
  #L1ceeba.  v2:= temp;
  #L1ceebc.  return v2;
}
procedure `int` `compositeOverlayIfNeeded`(`com.google.android.material.elevation.ElevationOverlayProvider` v0 @kind this, `int` v1 , `float` v2 , `android.view.View` v3 @kind object) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.compositeOverlayIfNeeded:(IFLandroid/view/View;)I` @AccessFlag PUBLIC {
    temp;

  #L1ceed0.  call temp:= `getParentAbsoluteElevation`(v0, v3) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.getParentAbsoluteElevation:(Landroid/view/View;)F` @kind virtual;
  #L1ceed6.  v3:= temp;
  #L1ceed8.  v2:= v2 + v3 @kind float;
  #L1ceeda.  call temp:= `compositeOverlayIfNeeded`(v0, v1, v2) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.compositeOverlayIfNeeded:(IF)I` @kind virtual;
  #L1ceee0.  v1:= temp;
  #L1ceee2.  return v1;
}
procedure `int` `compositeOverlayWithThemeSurfaceColorIfNeeded`(`com.google.android.material.elevation.ElevationOverlayProvider` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.compositeOverlayWithThemeSurfaceColorIfNeeded:(F)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ceef4.  v0:= v1.`com.google.android.material.elevation.ElevationOverlayProvider.colorSurface` @type ^`int`;
  #L1ceef8.  call temp:= `compositeOverlayIfNeeded`(v1, v0, v2) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.compositeOverlayIfNeeded:(IF)I` @kind virtual;
  #L1ceefe.  v2:= temp;
  #L1cef00.  return v2;
}
procedure `int` `compositeOverlayWithThemeSurfaceColorIfNeeded`(`com.google.android.material.elevation.ElevationOverlayProvider` v0 @kind this, `float` v1 , `android.view.View` v2 @kind object) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.compositeOverlayWithThemeSurfaceColorIfNeeded:(FLandroid/view/View;)I` @AccessFlag PUBLIC {
    temp;

  #L1cef14.  call temp:= `getParentAbsoluteElevation`(v0, v2) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.getParentAbsoluteElevation:(Landroid/view/View;)F` @kind virtual;
  #L1cef1a.  v2:= temp;
  #L1cef1c.  v1:= v1 + v2 @kind float;
  #L1cef1e.  call temp:= `compositeOverlayWithThemeSurfaceColorIfNeeded`(v0, v1) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.compositeOverlayWithThemeSurfaceColorIfNeeded:(F)I` @kind virtual;
  #L1cef24.  v1:= temp;
  #L1cef26.  return v1;
}
procedure `float` `getParentAbsoluteElevation`(`com.google.android.material.elevation.ElevationOverlayProvider` v0 @kind this, `android.view.View` v1 @kind object) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.getParentAbsoluteElevation:(Landroid/view/View;)F` @AccessFlag PUBLIC {
    temp;

  #L1cedf0.  call temp:= `getParentAbsoluteElevation`(v1) @signature `Lcom/google/android/material/internal/ViewUtils;.getParentAbsoluteElevation:(Landroid/view/View;)F` @kind static;
  #L1cedf6.  v1:= temp;
  #L1cedf8.  return v1;
}
procedure `int` `getThemeElevationOverlayColor`(`com.google.android.material.elevation.ElevationOverlayProvider` v1 @kind this) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.getThemeElevationOverlayColor:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1cef38.  v0:= v1.`com.google.android.material.elevation.ElevationOverlayProvider.elevationOverlayColor` @type ^`int`;
  #L1cef3c.  return v0;
}
procedure `int` `getThemeSurfaceColor`(`com.google.android.material.elevation.ElevationOverlayProvider` v1 @kind this) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.getThemeSurfaceColor:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1cef50.  v0:= v1.`com.google.android.material.elevation.ElevationOverlayProvider.colorSurface` @type ^`int`;
  #L1cef54.  return v0;
}
procedure `boolean` `isThemeElevationOverlayEnabled`(`com.google.android.material.elevation.ElevationOverlayProvider` v1 @kind this) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.isThemeElevationOverlayEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ced50.  v0:= v1.`com.google.android.material.elevation.ElevationOverlayProvider.elevationOverlayEnabled` @type ^`boolean` @kind boolean;
  #L1ced54.  return v0;
}
