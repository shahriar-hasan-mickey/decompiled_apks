record `com.google.android.material.shape.MaterialShapeDrawable` @kind class @AccessFlag PUBLIC extends `android.graphics.drawable.Drawable` @kind class, `androidx.core.graphics.drawable.TintAwareDrawable` @kind interface, `com.google.android.material.shape.Shapeable` @kind interface {
  `com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] `com.google.android.material.shape.MaterialShapeDrawable.cornerShadowOperation` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` `com.google.android.material.shape.MaterialShapeDrawable.drawableState` @AccessFlag PRIVATE;
  `com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] `com.google.android.material.shape.MaterialShapeDrawable.edgeShadowOperation` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Paint` `com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @AccessFlag PRIVATE_FINAL;
  `android.graphics.RectF` `com.google.android.material.shape.MaterialShapeDrawable.insetRectF` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Matrix` `com.google.android.material.shape.MaterialShapeDrawable.matrix` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Rect` `com.google.android.material.shape.MaterialShapeDrawable.padding` @AccessFlag PRIVATE;
  `android.graphics.Path` `com.google.android.material.shape.MaterialShapeDrawable.path` @AccessFlag PRIVATE_FINAL;
  `android.graphics.RectF` `com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @AccessFlag PRIVATE;
  `android.graphics.Path` `com.google.android.material.shape.MaterialShapeDrawable.pathInsetByStroke` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.shape.ShapeAppearancePathProvider` `com.google.android.material.shape.MaterialShapeDrawable.pathProvider` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.shape.ShapeAppearancePathProvider$PathListener` `com.google.android.material.shape.MaterialShapeDrawable.pathShadowListener` @AccessFlag PRIVATE_FINAL;
  `android.graphics.RectF` `com.google.android.material.shape.MaterialShapeDrawable.rectF` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Region` `com.google.android.material.shape.MaterialShapeDrawable.scratchRegion` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.shadow.ShadowRenderer` `com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Paint` `com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.shape.ShapeAppearanceModel` `com.google.android.material.shape.MaterialShapeDrawable.strokeShapeAppearance` @AccessFlag PRIVATE;
  `android.graphics.PorterDuffColorFilter` `com.google.android.material.shape.MaterialShapeDrawable.strokeTintFilter` @AccessFlag PRIVATE;
  `android.graphics.PorterDuffColorFilter` `com.google.android.material.shape.MaterialShapeDrawable.tintFilter` @AccessFlag PRIVATE;
  `android.graphics.Region` `com.google.android.material.shape.MaterialShapeDrawable.transparentRegion` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@com.google.android.material.shape.MaterialShapeDrawable.SHADOW_COMPAT_MODE_ALWAYS` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.material.shape.MaterialShapeDrawable.SHADOW_COMPAT_MODE_DEFAULT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.google.android.material.shape.MaterialShapeDrawable.SHADOW_COMPAT_MODE_NEVER` @AccessFlag PUBLIC_STATIC_FINAL;
global `float` `@@com.google.android.material.shape.MaterialShapeDrawable.SHADOW_OFFSET_MULTIPLIER` @AccessFlag PRIVATE_STATIC_FINAL;
global `float` `@@com.google.android.material.shape.MaterialShapeDrawable.SHADOW_RADIUS_MULTIPLIER` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.Paint` `@@com.google.android.material.shape.MaterialShapeDrawable.clearPaint` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1dd67c.  v0:= new `android.graphics.Paint`;
  #L1dd680.  v1:= 1I;
  #L1dd682.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L1dd688.  `@@com.google.android.material.shape.MaterialShapeDrawable.clearPaint` @type ^`android.graphics.Paint` := v0 @kind object;
  #L1dd68c.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1dd6a0.  v0:= new `com.google.android.material.shape.ShapeAppearanceModel`;
  #L1dd6a4.  call `<init>`(v0) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.<init>:()V` @kind direct;
  #L1dd6aa.  call `<init>`(v1, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind direct;
  #L1dd6b0.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `android.content.Context` v1 @kind object, `android.util.AttributeSet` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1dd6c4.  call temp:= `builder`(v1, v2, v3, v4) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.builder:(Landroid/content/Context;Landroid/util/AttributeSet;II)Lcom/google/android/material/shape/ShapeAppearanceModel$Builder;` @kind static;
  #L1dd6ca.  v1:= temp @kind object;
  #L1dd6cc.  call temp:= `build`(v1) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel$Builder;.build:()Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L1dd6d2.  v1:= temp @kind object;
  #L1dd6d4.  call `<init>`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind direct;
  #L1dd6da.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.shape.MaterialShapeDrawable` v3 @kind this, `com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` v4 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1dd6ec.  call `<init>`(v3) @signature `Landroid/graphics/drawable/Drawable;.<init>:()V` @kind direct;
  #L1dd6f2.  v0:= 4I;
  #L1dd6f4.  v1:= new `com.google.android.material.shape.ShapePath$ShadowCompatOperation`[v0];
  #L1dd6f8.  v3.`com.google.android.material.shape.MaterialShapeDrawable.cornerShadowOperation` @type ^`com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] := v1 @kind object;
  #L1dd6fc.  v0:= new `com.google.android.material.shape.ShapePath$ShadowCompatOperation`[v0];
  #L1dd700.  v3.`com.google.android.material.shape.MaterialShapeDrawable.edgeShadowOperation` @type ^`com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] := v0 @kind object;
  #L1dd704.  v0:= new `android.graphics.Matrix`;
  #L1dd708.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L1dd70e.  v3.`com.google.android.material.shape.MaterialShapeDrawable.matrix` @type ^`android.graphics.Matrix` := v0 @kind object;
  #L1dd712.  v0:= new `android.graphics.Path`;
  #L1dd716.  call `<init>`(v0) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L1dd71c.  v3.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` := v0 @kind object;
  #L1dd720.  v0:= new `android.graphics.Path`;
  #L1dd724.  call `<init>`(v0) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L1dd72a.  v3.`com.google.android.material.shape.MaterialShapeDrawable.pathInsetByStroke` @type ^`android.graphics.Path` := v0 @kind object;
  #L1dd72e.  v0:= new `android.graphics.RectF`;
  #L1dd732.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L1dd738.  v3.`com.google.android.material.shape.MaterialShapeDrawable.rectF` @type ^`android.graphics.RectF` := v0 @kind object;
  #L1dd73c.  v0:= new `android.graphics.RectF`;
  #L1dd740.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L1dd746.  v3.`com.google.android.material.shape.MaterialShapeDrawable.insetRectF` @type ^`android.graphics.RectF` := v0 @kind object;
  #L1dd74a.  v0:= new `android.graphics.Region`;
  #L1dd74e.  call `<init>`(v0) @signature `Landroid/graphics/Region;.<init>:()V` @kind direct;
  #L1dd754.  v3.`com.google.android.material.shape.MaterialShapeDrawable.transparentRegion` @type ^`android.graphics.Region` := v0 @kind object;
  #L1dd758.  v0:= new `android.graphics.Region`;
  #L1dd75c.  call `<init>`(v0) @signature `Landroid/graphics/Region;.<init>:()V` @kind direct;
  #L1dd762.  v3.`com.google.android.material.shape.MaterialShapeDrawable.scratchRegion` @type ^`android.graphics.Region` := v0 @kind object;
  #L1dd766.  v0:= new `android.graphics.Paint`;
  #L1dd76a.  v1:= 1I;
  #L1dd76c.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L1dd772.  v3.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` := v0 @kind object;
  #L1dd776.  v2:= new `android.graphics.Paint`;
  #L1dd77a.  call `<init>`(v2, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L1dd780.  v3.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` := v2 @kind object;
  #L1dd784.  v1:= new `com.google.android.material.shadow.ShadowRenderer`;
  #L1dd788.  call `<init>`(v1) @signature `Lcom/google/android/material/shadow/ShadowRenderer;.<init>:()V` @kind direct;
  #L1dd78e.  v3.`com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @type ^`com.google.android.material.shadow.ShadowRenderer` := v1 @kind object;
  #L1dd792.  v1:= new `com.google.android.material.shape.ShapeAppearancePathProvider`;
  #L1dd796.  call `<init>`(v1) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.<init>:()V` @kind direct;
  #L1dd79c.  v3.`com.google.android.material.shape.MaterialShapeDrawable.pathProvider` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider` := v1 @kind object;
  #L1dd7a0.  v1:= new `android.graphics.RectF`;
  #L1dd7a4.  call `<init>`(v1) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L1dd7aa.  v3.`com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @type ^`android.graphics.RectF` := v1 @kind object;
  #L1dd7ae.  v3.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` := v4 @kind object;
  #L1dd7b2.  v4:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L1dd7b6.  call `setStyle`(v2, v4) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L1dd7bc.  v4:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L1dd7c0.  call `setStyle`(v0, v4) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L1dd7c6.  v4:= `@@com.google.android.material.shape.MaterialShapeDrawable.clearPaint` @type ^`android.graphics.Paint` @kind object;
  #L1dd7ca.  v0:= -1I;
  #L1dd7cc.  call `setColor`(v4, v0) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L1dd7d2.  v0:= new `android.graphics.PorterDuffXfermode`;
  #L1dd7d6.  v1:= `@@android.graphics.PorterDuff$Mode.DST_OUT` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L1dd7da.  call `<init>`(v0, v1) @signature `Landroid/graphics/PorterDuffXfermode;.<init>:(Landroid/graphics/PorterDuff$Mode;)V` @kind direct;
  #L1dd7e0.  call temp:= `setXfermode`(v4, v0) @signature `Landroid/graphics/Paint;.setXfermode:(Landroid/graphics/Xfermode;)Landroid/graphics/Xfermode;` @kind virtual;
  #L1dd7e6.  call temp:= `updateTintFilter`(v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @kind direct;
  #L1dd7ec.  call temp:= `getState`(v3) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L1dd7f2.  v4:= temp @kind object;
  #L1dd7f4.  call temp:= `updateColorsForState`(v3, v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateColorsForState:([I)Z` @kind direct;
  #L1dd7fa.  v4:= new `com.google.android.material.shape.MaterialShapeDrawable$1`;
  #L1dd7fe.  call `<init>`(v4, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable$1;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable;)V` @kind direct;
  #L1dd804.  v3.`com.google.android.material.shape.MaterialShapeDrawable.pathShadowListener` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider$PathListener` := v4 @kind object;
  #L1dd808.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` v1 @kind object, `com.google.android.material.shape.MaterialShapeDrawable$1` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;Lcom/google/android/material/shape/MaterialShapeDrawable$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1dd81c.  call `<init>`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;)V` @kind direct;
  #L1dd822.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `com.google.android.material.shape.ShapeAppearanceModel` v3 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1dd834.  v0:= new `com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState`;
  #L1dd838.  v1:= 0I;
  #L1dd83a.  call `<init>`(v0, v3, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;.<init>:(Lcom/google/android/material/shape/ShapeAppearanceModel;Lcom/google/android/material/elevation/ElevationOverlayProvider;)V` @kind direct;
  #L1dd840.  call `<init>`(v2, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;)V` @kind direct;
  #L1dd846.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `com.google.android.material.shape.ShapePathModel` v1 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/ShapePathModel;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1dd858.  call `<init>`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind direct;
  #L1dd85e.  return @kind void;
}
procedure `com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] `a`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.a:(Lcom/google/android/material/shape/MaterialShapeDrawable;)[Lcom/google/android/material/shape/ShapePath$ShadowCompatOperation;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1dd2d8.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable.cornerShadowOperation` @type ^`com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] @kind object;
  #L1dd2dc.  return v0 @kind object;
}
procedure `com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] `b`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.b:(Lcom/google/android/material/shape/MaterialShapeDrawable;)[Lcom/google/android/material/shape/ShapePath$ShadowCompatOperation;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1dd2f0.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable.edgeShadowOperation` @type ^`com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] @kind object;
  #L1dd2f4.  return v0 @kind object;
}
procedure `boolean` `c`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind object, `boolean` v1 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.c:(Lcom/google/android/material/shape/MaterialShapeDrawable;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1dce48.  v0.`com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @type ^`boolean` := v1 @kind boolean;
  #L1dce4c.  return v1;
}
procedure `android.graphics.PorterDuffColorFilter` `calculatePaintColorTintFilter`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.graphics.Paint` v2 @kind object, `boolean` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePaintColorTintFilter:(Landroid/graphics/Paint;Z)Landroid/graphics/PorterDuffColorFilter;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1dcc7c.  if v3 == 0 then goto L1dcca4;
  #L1dcc80.  call temp:= `getColor`(v2) @signature `Landroid/graphics/Paint;.getColor:()I` @kind virtual;
  #L1dcc86.  v2:= temp;
  #L1dcc88.  call temp:= `compositeElevationOverlayIfNeeded`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.compositeElevationOverlayIfNeeded:(I)I` @kind direct;
  #L1dcc8e.  v3:= temp;
  #L1dcc90.  if v3 == v2 then goto L1dcca4;
  #L1dcc94.  v2:= new `android.graphics.PorterDuffColorFilter`;
  #L1dcc98.  v0:= `@@android.graphics.PorterDuff$Mode.SRC_IN` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L1dcc9c.  call `<init>`(v2, v3, v0) @signature `Landroid/graphics/PorterDuffColorFilter;.<init>:(ILandroid/graphics/PorterDuff$Mode;)V` @kind direct;
  #L1dcca2.  return v2 @kind object;
  #L1dcca4.  v2:= 0I;
  #L1dcca6.  return v2 @kind object;
}
procedure `void` `calculatePath`(`com.google.android.material.shape.MaterialShapeDrawable` v4 @kind this, `android.graphics.RectF` v5 @kind object, `android.graphics.Path` v6 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePath:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1dd870.  call `calculatePathForSize`(v4, v5, v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePathForSize:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @kind virtual;
  #L1dd876.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd87a.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.scale` @type ^`float`;
  #L1dd87e.  v1:= 1.0F;
  #L1dd882.  v0:= fcmpl(v0, v1);
  #L1dd886.  if v0 == 0 then goto L1dd8c8;
  #L1dd88a.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.matrix` @type ^`android.graphics.Matrix` @kind object;
  #L1dd88e.  call `reset`(v0) @signature `Landroid/graphics/Matrix;.reset:()V` @kind virtual;
  #L1dd894.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.matrix` @type ^`android.graphics.Matrix` @kind object;
  #L1dd898.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd89c.  v1:= v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.scale` @type ^`float`;
  #L1dd8a0.  call temp:= `width`(v5) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L1dd8a6.  v2:= temp;
  #L1dd8a8.  v3:= 2.0F;
  #L1dd8ac.  v2:= v2 / v3 @kind float;
  #L1dd8ae.  call temp:= `height`(v5) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L1dd8b4.  v5:= temp;
  #L1dd8b6.  v5:= v5 / v3 @kind float;
  #L1dd8b8.  call `setScale`(v0, v1, v1, v2, v5) @signature `Landroid/graphics/Matrix;.setScale:(FFFF)V` @kind virtual;
  #L1dd8be.  v5:= v4.`com.google.android.material.shape.MaterialShapeDrawable.matrix` @type ^`android.graphics.Matrix` @kind object;
  #L1dd8c2.  call `transform`(v6, v5) @signature `Landroid/graphics/Path;.transform:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L1dd8c8.  v5:= v4.`com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @type ^`android.graphics.RectF` @kind object;
  #L1dd8cc.  v0:= 1I;
  #L1dd8ce.  call `computeBounds`(v6, v5, v0) @signature `Landroid/graphics/Path;.computeBounds:(Landroid/graphics/RectF;Z)V` @kind virtual;
  #L1dd8d4.  return @kind void;
}
procedure `void` `calculateStrokePath`(`com.google.android.material.shape.MaterialShapeDrawable` v5 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateStrokePath:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1dd91c.  call temp:= `getStrokeInsetLength`(v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeInsetLength:()F` @kind direct;
  #L1dd922.  v0:= temp;
  #L1dd924.  v0:= -v0 @kind float;
  #L1dd926.  call temp:= `getShapeAppearanceModel`(v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShapeAppearanceModel:()Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L1dd92c.  v1:= temp @kind object;
  #L1dd92e.  v2:= new `com.google.android.material.shape.MaterialShapeDrawable$2`;
  #L1dd932.  call `<init>`(v2, v5, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable$2;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable;F)V` @kind direct;
  #L1dd938.  call temp:= `withTransformedCornerSizes`(v1, v2) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.withTransformedCornerSizes:(Lcom/google/android/material/shape/ShapeAppearanceModel$CornerSizeUnaryOperator;)Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L1dd93e.  v0:= temp @kind object;
  #L1dd940.  v5.`com.google.android.material.shape.MaterialShapeDrawable.strokeShapeAppearance` @type ^`com.google.android.material.shape.ShapeAppearanceModel` := v0 @kind object;
  #L1dd944.  v1:= v5.`com.google.android.material.shape.MaterialShapeDrawable.pathProvider` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider` @kind object;
  #L1dd948.  v2:= v5.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd94c.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.interpolation` @type ^`float`;
  #L1dd950.  call temp:= `getBoundsInsetByStroke`(v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsInsetByStroke:()Landroid/graphics/RectF;` @kind direct;
  #L1dd956.  v3:= temp @kind object;
  #L1dd958.  v4:= v5.`com.google.android.material.shape.MaterialShapeDrawable.pathInsetByStroke` @type ^`android.graphics.Path` @kind object;
  #L1dd95c.  call `calculatePath`(v1, v0, v2, v3, v4) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.calculatePath:(Lcom/google/android/material/shape/ShapeAppearanceModel;FLandroid/graphics/RectF;Landroid/graphics/Path;)V` @kind virtual;
  #L1dd962.  return @kind void;
}
procedure `android.graphics.PorterDuffColorFilter` `calculateTintColorTintFilter`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `android.content.res.ColorStateList` v3 @kind object, `android.graphics.PorterDuff$Mode` v4 @kind object, `boolean` v5 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateTintColorTintFilter:(Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;Z)Landroid/graphics/PorterDuffColorFilter;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1dccb8.  call temp:= `getState`(v2) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L1dccbe.  v0:= temp @kind object;
  #L1dccc0.  v1:= 0I;
  #L1dccc2.  call temp:= `getColorForState`(v3, v0, v1) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L1dccc8.  v3:= temp;
  #L1dccca.  if v5 == 0 then goto L1dccd6;
  #L1dccce.  call temp:= `compositeElevationOverlayIfNeeded`(v2, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.compositeElevationOverlayIfNeeded:(I)I` @kind direct;
  #L1dccd4.  v3:= temp;
  #L1dccd6.  v5:= new `android.graphics.PorterDuffColorFilter`;
  #L1dccda.  call `<init>`(v5, v3, v4) @signature `Landroid/graphics/PorterDuffColorFilter;.<init>:(ILandroid/graphics/PorterDuff$Mode;)V` @kind direct;
  #L1dcce0.  return v5 @kind object;
}
procedure `android.graphics.PorterDuffColorFilter` `calculateTintFilter`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `android.content.res.ColorStateList` v1 @kind object, `android.graphics.PorterDuff$Mode` v2 @kind object, `android.graphics.Paint` v3 @kind object, `boolean` v4 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateTintFilter:(Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;Landroid/graphics/Paint;Z)Landroid/graphics/PorterDuffColorFilter;` @AccessFlag PRIVATE {
    temp;

  #L1dccf4.  if v1 == 0 then goto L1dcd08;
  #L1dccf8.  if v2 != 0 then goto L1dccfe;
  #L1dccfc.  goto L1dcd08;
  #L1dccfe.  call temp:= `calculateTintColorTintFilter`(v0, v1, v2, v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateTintColorTintFilter:(Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;Z)Landroid/graphics/PorterDuffColorFilter;` @kind direct;
  #L1dcd04.  v1:= temp @kind object;
  #L1dcd06.  goto L1dcd10;
  #L1dcd08.  call temp:= `calculatePaintColorTintFilter`(v0, v3, v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePaintColorTintFilter:(Landroid/graphics/Paint;Z)Landroid/graphics/PorterDuffColorFilter;` @kind direct;
  #L1dcd0e.  v1:= temp @kind object;
  #L1dcd10.  return v1 @kind object;
}
procedure `int` `compositeElevationOverlayIfNeeded`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.compositeElevationOverlayIfNeeded:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1dd504.  call temp:= `getZ`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getZ:()F` @kind virtual;
  #L1dd50a.  v0:= temp;
  #L1dd50c.  call temp:= `getParentAbsoluteElevation`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getParentAbsoluteElevation:()F` @kind virtual;
  #L1dd512.  v1:= temp;
  #L1dd514.  v0:= v0 + v1 @kind float;
  #L1dd516.  v1:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd51a.  v1:= v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevationOverlayProvider` @type ^`com.google.android.material.elevation.ElevationOverlayProvider` @kind object;
  #L1dd51e.  if v1 == 0 then goto L1dd52a;
  #L1dd522.  call temp:= `compositeOverlayIfNeeded`(v1, v3, v0) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.compositeOverlayIfNeeded:(IF)I` @kind virtual;
  #L1dd528.  v3:= temp;
  #L1dd52a.  return v3;
}
procedure `com.google.android.material.shape.MaterialShapeDrawable` `createWithElevationOverlay`(`android.content.Context` v1 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.createWithElevationOverlay:(Landroid/content/Context;)Lcom/google/android/material/shape/MaterialShapeDrawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1dd250.  v0:= 0I;
  #L1dd252.  call temp:= `createWithElevationOverlay`(v1, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.createWithElevationOverlay:(Landroid/content/Context;F)Lcom/google/android/material/shape/MaterialShapeDrawable;` @kind static;
  #L1dd258.  v1:= temp @kind object;
  #L1dd25a.  return v1 @kind object;
}
procedure `com.google.android.material.shape.MaterialShapeDrawable` `createWithElevationOverlay`(`android.content.Context` v2 @kind object, `float` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.createWithElevationOverlay:(Landroid/content/Context;F)Lcom/google/android/material/shape/MaterialShapeDrawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1dd26c.  v0:= `@@com.google.android.material.R$attr.colorSurface` @type ^`int`;
  #L1dd270.  v1:= constclass @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L1dd274.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L1dd27a.  v1:= temp @kind object;
  #L1dd27c.  call temp:= `getColor`(v2, v0, v1) @signature `Lcom/google/android/material/color/MaterialColors;.getColor:(Landroid/content/Context;ILjava/lang/String;)I` @kind static;
  #L1dd282.  v0:= temp;
  #L1dd284.  v1:= new `com.google.android.material.shape.MaterialShapeDrawable`;
  #L1dd288.  call `<init>`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:()V` @kind direct;
  #L1dd28e.  call `initializeElevationOverlay`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.initializeElevationOverlay:(Landroid/content/Context;)V` @kind virtual;
  #L1dd294.  call temp:= `valueOf`(v0) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L1dd29a.  v2:= temp @kind object;
  #L1dd29c.  call `setFillColor`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setFillColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1dd2a2.  call `setElevation`(v1, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setElevation:(F)V` @kind virtual;
  #L1dd2a8.  return v1 @kind object;
}
procedure `void` `drawCompatShadow`(`com.google.android.material.shape.MaterialShapeDrawable` v4 @kind this, `android.graphics.Canvas` v5 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawCompatShadow:(Landroid/graphics/Canvas;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1ddb64.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1ddb68.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int`;
  #L1ddb6c.  if v0 == 0 then goto L1ddb86;
  #L1ddb70.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L1ddb74.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @type ^`com.google.android.material.shadow.ShadowRenderer` @kind object;
  #L1ddb78.  call temp:= `getShadowPaint`(v1) @signature `Lcom/google/android/material/shadow/ShadowRenderer;.getShadowPaint:()Landroid/graphics/Paint;` @kind virtual;
  #L1ddb7e.  v1:= temp @kind object;
  #L1ddb80.  call `drawPath`(v5, v0, v1) @signature `Landroid/graphics/Canvas;.drawPath:(Landroid/graphics/Path;Landroid/graphics/Paint;)V` @kind virtual;
  #L1ddb86.  v0:= 0I;
  #L1ddb88.  v1:= 4I;
  #L1ddb8a.  if v0 >= v1 then goto L1ddbc8;
  #L1ddb8e.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.cornerShadowOperation` @type ^`com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] @kind object;
  #L1ddb92.  v1:= v1[v0] @kind object;
  #L1ddb96.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @type ^`com.google.android.material.shadow.ShadowRenderer` @kind object;
  #L1ddb9a.  v3:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1ddb9e.  v3:= v3.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L1ddba2.  call `draw`(v1, v2, v3, v5) @signature `Lcom/google/android/material/shape/ShapePath$ShadowCompatOperation;.draw:(Lcom/google/android/material/shadow/ShadowRenderer;ILandroid/graphics/Canvas;)V` @kind virtual;
  #L1ddba8.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.edgeShadowOperation` @type ^`com.google.android.material.shape.ShapePath$ShadowCompatOperation`[] @kind object;
  #L1ddbac.  v1:= v1[v0] @kind object;
  #L1ddbb0.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @type ^`com.google.android.material.shadow.ShadowRenderer` @kind object;
  #L1ddbb4.  v3:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1ddbb8.  v3:= v3.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L1ddbbc.  call `draw`(v1, v2, v3, v5) @signature `Lcom/google/android/material/shape/ShapePath$ShadowCompatOperation;.draw:(Lcom/google/android/material/shadow/ShadowRenderer;ILandroid/graphics/Canvas;)V` @kind virtual;
  #L1ddbc2.  v0:= v0 + 1;
  #L1ddbc6.  goto L1ddb88;
  #L1ddbc8.  call temp:= `getShadowOffsetX`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowOffsetX:()I` @kind virtual;
  #L1ddbce.  v0:= temp;
  #L1ddbd0.  call temp:= `getShadowOffsetY`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowOffsetY:()I` @kind virtual;
  #L1ddbd6.  v1:= temp;
  #L1ddbd8.  v2:= -v0 @kind int;
  #L1ddbda.  v2:= (`float`) v2 @kind i2f;
  #L1ddbdc.  v3:= -v1 @kind int;
  #L1ddbde.  v3:= (`float`) v3 @kind i2f;
  #L1ddbe0.  call `translate`(v5, v2, v3) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L1ddbe6.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L1ddbea.  v3:= `@@com.google.android.material.shape.MaterialShapeDrawable.clearPaint` @type ^`android.graphics.Paint` @kind object;
  #L1ddbee.  call `drawPath`(v5, v2, v3) @signature `Landroid/graphics/Canvas;.drawPath:(Landroid/graphics/Path;Landroid/graphics/Paint;)V` @kind virtual;
  #L1ddbf4.  v0:= (`float`) v0 @kind i2f;
  #L1ddbf6.  v1:= (`float`) v1 @kind i2f;
  #L1ddbf8.  call `translate`(v5, v0, v1) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L1ddbfe.  return @kind void;
}
procedure `void` `drawFillShape`(`com.google.android.material.shape.MaterialShapeDrawable` v6 @kind this, `android.graphics.Canvas` v7 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawFillShape:(Landroid/graphics/Canvas;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1ddc10.  v2:= v6.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L1ddc14.  v3:= v6.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L1ddc18.  v0:= v6.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1ddc1c.  v4:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L1ddc20.  call temp:= `getBoundsAsRectF`(v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L1ddc26.  v5:= temp @kind object;
  #L1ddc28.  v0:= v6 @kind object;
  #L1ddc2a.  v1:= v7 @kind object;
  #L1ddc2c.  call `drawShape`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawShape:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/Path;Lcom/google/android/material/shape/ShapeAppearanceModel;Landroid/graphics/RectF;)V` @kind direct;
  #L1ddc32.  return @kind void;
}
procedure `void` `drawShape`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.graphics.Canvas` v2 @kind object, `android.graphics.Paint` v3 @kind object, `android.graphics.Path` v4 @kind object, `com.google.android.material.shape.ShapeAppearanceModel` v5 @kind object, `android.graphics.RectF` v6 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawShape:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/Path;Lcom/google/android/material/shape/ShapeAppearanceModel;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1ddc70.  call temp:= `isRoundRect`(v5, v6) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.isRoundRect:(Landroid/graphics/RectF;)Z` @kind virtual;
  #L1ddc76.  v0:= temp;
  #L1ddc78.  if v0 == 0 then goto L1ddc94;
  #L1ddc7c.  call temp:= `getTopRightCornerSize`(v5) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getTopRightCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L1ddc82.  v4:= temp @kind object;
  #L1ddc84.  call temp:= `getCornerSize`(v4, v6) @signature `Lcom/google/android/material/shape/CornerSize;.getCornerSize:(Landroid/graphics/RectF;)F` @kind interface;
  #L1ddc8a.  v4:= temp;
  #L1ddc8c.  call `drawRoundRect`(v2, v6, v4, v4, v3) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L1ddc92.  goto L1ddc9a;
  #L1ddc94.  call `drawPath`(v2, v4, v3) @signature `Landroid/graphics/Canvas;.drawPath:(Landroid/graphics/Path;Landroid/graphics/Paint;)V` @kind virtual;
  #L1ddc9a.  return @kind void;
}
procedure `void` `drawStrokeShape`(`com.google.android.material.shape.MaterialShapeDrawable` v6 @kind this, `android.graphics.Canvas` v7 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawStrokeShape:(Landroid/graphics/Canvas;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1ddcac.  v2:= v6.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L1ddcb0.  v3:= v6.`com.google.android.material.shape.MaterialShapeDrawable.pathInsetByStroke` @type ^`android.graphics.Path` @kind object;
  #L1ddcb4.  v4:= v6.`com.google.android.material.shape.MaterialShapeDrawable.strokeShapeAppearance` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L1ddcb8.  call temp:= `getBoundsInsetByStroke`(v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsInsetByStroke:()Landroid/graphics/RectF;` @kind direct;
  #L1ddcbe.  v5:= temp @kind object;
  #L1ddcc0.  v0:= v6 @kind object;
  #L1ddcc2.  v1:= v7 @kind object;
  #L1ddcc4.  call `drawShape`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawShape:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/Path;Lcom/google/android/material/shape/ShapeAppearanceModel;Landroid/graphics/RectF;)V` @kind direct;
  #L1ddcca.  return @kind void;
}
procedure `android.graphics.RectF` `getBoundsInsetByStroke`(`com.google.android.material.shape.MaterialShapeDrawable` v6 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsInsetByStroke:()Landroid/graphics/RectF;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1dcd64.  call temp:= `getBoundsAsRectF`(v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L1dcd6a.  v0:= temp @kind object;
  #L1dcd6c.  call temp:= `getStrokeInsetLength`(v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeInsetLength:()F` @kind direct;
  #L1dcd72.  v1:= temp;
  #L1dcd74.  v2:= v6.`com.google.android.material.shape.MaterialShapeDrawable.insetRectF` @type ^`android.graphics.RectF` @kind object;
  #L1dcd78.  v3:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L1dcd7c.  v3:= v3 + v1 @kind float;
  #L1dcd7e.  v4:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L1dcd82.  v4:= v4 + v1 @kind float;
  #L1dcd84.  v5:= v0.`android.graphics.RectF.right` @type ^`float`;
  #L1dcd88.  v5:= v5 - v1 @kind float;
  #L1dcd8a.  v0:= v0.`android.graphics.RectF.bottom` @type ^`float`;
  #L1dcd8e.  v0:= v0 - v1 @kind float;
  #L1dcd90.  call `set`(v2, v3, v4, v5, v0) @signature `Landroid/graphics/RectF;.set:(FFFF)V` @kind virtual;
  #L1dcd96.  v0:= v6.`com.google.android.material.shape.MaterialShapeDrawable.insetRectF` @type ^`android.graphics.RectF` @kind object;
  #L1dcd9a.  return v0 @kind object;
}
procedure `float` `getStrokeInsetLength`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeInsetLength:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1dd40c.  call temp:= `hasStroke`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasStroke:()Z` @kind direct;
  #L1dd412.  v0:= temp;
  #L1dd414.  if v0 == 0 then goto L1dd42c;
  #L1dd418.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L1dd41c.  call temp:= `getStrokeWidth`(v0) @signature `Landroid/graphics/Paint;.getStrokeWidth:()F` @kind virtual;
  #L1dd422.  v0:= temp;
  #L1dd424.  v1:= 2.0F;
  #L1dd428.  v0:= v0 / v1 @kind float;
  #L1dd42a.  return v0;
  #L1dd42c.  v0:= 0I;
  #L1dd42e.  return v0;
}
procedure `boolean` `hasCompatShadow`(`com.google.android.material.shape.MaterialShapeDrawable` v3 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasCompatShadow:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1dce8c.  v0:= v3.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dce90.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatMode` @type ^`int`;
  #L1dce94.  v2:= 1I;
  #L1dce96.  if v1 == v2 then goto L1dceb6;
  #L1dce9a.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L1dce9e.  if v0 <= 0 then goto L1dceb6;
  #L1dcea2.  v0:= 2I;
  #L1dcea4.  if v1 == v0 then goto L1dceb8;
  #L1dcea8.  call temp:= `requiresCompatShadow`(v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.requiresCompatShadow:()Z` @kind direct;
  #L1dceae.  v0:= temp;
  #L1dceb0.  if v0 == 0 then goto L1dceb6;
  #L1dceb4.  goto L1dceb8;
  #L1dceb6.  v2:= 0I;
  #L1dceb8.  return v2;
}
procedure `boolean` `hasFill`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasFill:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1dcecc.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dced0.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.paintStyle` @type ^`android.graphics.Paint$Style` @kind object;
  #L1dced4.  v1:= `@@android.graphics.Paint$Style.FILL_AND_STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L1dced8.  if v0 == v1 then goto L1dceea;
  #L1dcedc.  v1:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L1dcee0.  if v0 != v1 then goto L1dcee6;
  #L1dcee4.  goto L1dceea;
  #L1dcee6.  v0:= 0I;
  #L1dcee8.  goto L1dceec;
  #L1dceea.  v0:= 1I;
  #L1dceec.  return v0;
}
procedure `boolean` `hasStroke`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasStroke:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1dcf00.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dcf04.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.paintStyle` @type ^`android.graphics.Paint$Style` @kind object;
  #L1dcf08.  v1:= `@@android.graphics.Paint$Style.FILL_AND_STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L1dcf0c.  if v0 == v1 then goto L1dcf18;
  #L1dcf10.  v1:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L1dcf14.  if v0 != v1 then goto L1dcf32;
  #L1dcf18.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L1dcf1c.  call temp:= `getStrokeWidth`(v0) @signature `Landroid/graphics/Paint;.getStrokeWidth:()F` @kind virtual;
  #L1dcf22.  v0:= temp;
  #L1dcf24.  v1:= 0I;
  #L1dcf26.  v0:= fcmpl(v0, v1);
  #L1dcf2a.  if v0 <= 0 then goto L1dcf32;
  #L1dcf2e.  v0:= 1I;
  #L1dcf30.  goto L1dcf34;
  #L1dcf32.  v0:= 0I;
  #L1dcf34.  return v0;
}
procedure `void` `invalidateSelfIgnoreShape`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @AccessFlag PRIVATE {
    temp;

  #L1dddc4.  call `invalidateSelf`(v0) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind super;
  #L1dddca.  return @kind void;
}
procedure `int` `modulateAlpha`(`int` v1 , `int` v2 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.modulateAlpha:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L1dd65c.  v0:= v2 ^>> 7;
  #L1dd660.  v2:= v2 + v0 @kind int;
  #L1dd662.  v1:= v1 * v2 @kind int;
  #L1dd666.  v1:= v1 ^>> 8;
  #L1dd66a.  return v1;
}
procedure `void` `prepareCanvasForShadow`(`com.google.android.material.shape.MaterialShapeDrawable` v5 @kind this, `android.graphics.Canvas` v6 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.prepareCanvasForShadow:(Landroid/graphics/Canvas;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1dddfc.  call temp:= `getShadowOffsetX`(v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowOffsetX:()I` @kind virtual;
  #L1dde02.  v0:= temp;
  #L1dde04.  call temp:= `getShadowOffsetY`(v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowOffsetY:()I` @kind virtual;
  #L1dde0a.  v1:= temp;
  #L1dde0c.  v2:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1dde10.  v3:= 21I;
  #L1dde14.  if v2 >= v3 then goto L1dde42;
  #L1dde18.  call temp:= `getClipBounds`(v6) @signature `Landroid/graphics/Canvas;.getClipBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L1dde1e.  v2:= temp @kind object;
  #L1dde20.  v3:= v5.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dde24.  v3:= v3.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L1dde28.  v4:= -v3 @kind int;
  #L1dde2a.  v3:= -v3 @kind int;
  #L1dde2c.  call `inset`(v2, v4, v3) @signature `Landroid/graphics/Rect;.inset:(II)V` @kind virtual;
  #L1dde32.  call `offset`(v2, v0, v1) @signature `Landroid/graphics/Rect;.offset:(II)V` @kind virtual;
  #L1dde38.  v3:= `@@android.graphics.Region$Op.REPLACE` @type ^`android.graphics.Region$Op` @kind object;
  #L1dde3c.  call temp:= `clipRect`(v6, v2, v3) @signature `Landroid/graphics/Canvas;.clipRect:(Landroid/graphics/Rect;Landroid/graphics/Region$Op;)Z` @kind virtual;
  #L1dde42.  v0:= (`float`) v0 @kind i2f;
  #L1dde44.  v1:= (`float`) v1 @kind i2f;
  #L1dde46.  call `translate`(v6, v0, v1) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L1dde4c.  return @kind void;
}
procedure `boolean` `requiresCompatShadow`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.requiresCompatShadow:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1dd0dc.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1dd0e0.  v1:= 21I;
  #L1dd0e4.  if v0 < v1 then goto L1dd10a;
  #L1dd0e8.  call temp:= `isRoundRect`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isRoundRect:()Z` @kind virtual;
  #L1dd0ee.  v0:= temp;
  #L1dd0f0.  if v0 != 0 then goto L1dd106;
  #L1dd0f4.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L1dd0f8.  call temp:= `isConvex`(v0) @signature `Landroid/graphics/Path;.isConvex:()Z` @kind virtual;
  #L1dd0fe.  v0:= temp;
  #L1dd100.  if v0 != 0 then goto L1dd106;
  #L1dd104.  goto L1dd10a;
  #L1dd106.  v0:= 0I;
  #L1dd108.  goto L1dd10c;
  #L1dd10a.  v0:= 1I;
  #L1dd10c.  return v0;
}
procedure `boolean` `updateColorsForState`(`com.google.android.material.shape.MaterialShapeDrawable` v4 @kind this, `int`[] v5 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateColorsForState:([I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1dd120.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd124.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.fillColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1dd128.  v1:= 1I;
  #L1dd12a.  if v0 == 0 then goto L1dd15c;
  #L1dd12e.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L1dd132.  call temp:= `getColor`(v0) @signature `Landroid/graphics/Paint;.getColor:()I` @kind virtual;
  #L1dd138.  v0:= temp;
  #L1dd13a.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd13e.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.fillColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1dd142.  call temp:= `getColorForState`(v2, v5, v0) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L1dd148.  v2:= temp;
  #L1dd14a.  if v0 == v2 then goto L1dd15c;
  #L1dd14e.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L1dd152.  call `setColor`(v0, v2) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L1dd158.  v0:= 1I;
  #L1dd15a.  goto L1dd15e;
  #L1dd15c.  v0:= 0I;
  #L1dd15e.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd162.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1dd166.  if v2 == 0 then goto L1dd196;
  #L1dd16a.  v2:= v4.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L1dd16e.  call temp:= `getColor`(v2) @signature `Landroid/graphics/Paint;.getColor:()I` @kind virtual;
  #L1dd174.  v2:= temp;
  #L1dd176.  v3:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd17a.  v3:= v3.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1dd17e.  call temp:= `getColorForState`(v3, v5, v2) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L1dd184.  v5:= temp;
  #L1dd186.  if v2 == v5 then goto L1dd196;
  #L1dd18a.  v0:= v4.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L1dd18e.  call `setColor`(v0, v5) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L1dd194.  goto L1dd198;
  #L1dd196.  v1:= v0;
  #L1dd198.  return v1;
}
procedure `boolean` `updateTintFilter`(`com.google.android.material.shape.MaterialShapeDrawable` v7 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1dd1ac.  v0:= v7.`com.google.android.material.shape.MaterialShapeDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L1dd1b0.  v1:= v7.`com.google.android.material.shape.MaterialShapeDrawable.strokeTintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L1dd1b4.  v2:= v7.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd1b8.  v3:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L1dd1bc.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintMode` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L1dd1c0.  v4:= v7.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L1dd1c4.  v5:= 1I;
  #L1dd1c6.  call temp:= `calculateTintFilter`(v7, v3, v2, v4, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateTintFilter:(Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;Landroid/graphics/Paint;Z)Landroid/graphics/PorterDuffColorFilter;` @kind direct;
  #L1dd1cc.  v2:= temp @kind object;
  #L1dd1ce.  v7.`com.google.android.material.shape.MaterialShapeDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` := v2 @kind object;
  #L1dd1d2.  v2:= v7.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd1d6.  v3:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeTintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L1dd1da.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintMode` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L1dd1de.  v4:= v7.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L1dd1e2.  v6:= 0I;
  #L1dd1e4.  call temp:= `calculateTintFilter`(v7, v3, v2, v4, v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateTintFilter:(Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;Landroid/graphics/Paint;Z)Landroid/graphics/PorterDuffColorFilter;` @kind direct;
  #L1dd1ea.  v2:= temp @kind object;
  #L1dd1ec.  v7.`com.google.android.material.shape.MaterialShapeDrawable.strokeTintFilter` @type ^`android.graphics.PorterDuffColorFilter` := v2 @kind object;
  #L1dd1f0.  v2:= v7.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd1f4.  v3:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.useTintColorForShadow` @type ^`boolean` @kind boolean;
  #L1dd1f8.  if v3 == 0 then goto L1dd21a;
  #L1dd1fc.  v3:= v7.`com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @type ^`com.google.android.material.shadow.ShadowRenderer` @kind object;
  #L1dd200.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L1dd204.  call temp:= `getState`(v7) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L1dd20a.  v4:= temp @kind object;
  #L1dd20c.  call temp:= `getColorForState`(v2, v4, v6) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L1dd212.  v2:= temp;
  #L1dd214.  call `setShadowColor`(v3, v2) @signature `Lcom/google/android/material/shadow/ShadowRenderer;.setShadowColor:(I)V` @kind virtual;
  #L1dd21a.  v2:= v7.`com.google.android.material.shape.MaterialShapeDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L1dd21e.  call temp:= `equals`(v0, v2) @signature `Landroidx/core/util/ObjectsCompat;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1dd224.  v0:= temp;
  #L1dd226.  if v0 == 0 then goto L1dd23e;
  #L1dd22a.  v0:= v7.`com.google.android.material.shape.MaterialShapeDrawable.strokeTintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L1dd22e.  call temp:= `equals`(v1, v0) @signature `Landroidx/core/util/ObjectsCompat;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1dd234.  v0:= temp;
  #L1dd236.  if v0 != 0 then goto L1dd23c;
  #L1dd23a.  goto L1dd23e;
  #L1dd23c.  v5:= 0I;
  #L1dd23e.  return v5;
}
procedure `void` `updateZ`(`com.google.android.material.shape.MaterialShapeDrawable` v4 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateZ:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1de34c.  call temp:= `getZ`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getZ:()F` @kind virtual;
  #L1de352.  v0:= temp;
  #L1de354.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1de358.  v2:= 0.75F;
  #L1de35c.  v2:= v2 * v0 @kind float;
  #L1de360.  v2:= (`double`) v2 @kind f2d;
  #L1de362.  call temp:= `ceil`(v2) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L1de368.  v2:= temp @kind wide;
  #L1de36a.  v2:= (`int`) v2 @kind d2i;
  #L1de36c.  v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int` := v2;
  #L1de370.  v1:= v4.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1de374.  v2:= 0.25F;
  #L1de378.  v0:= v0 * v2 @kind float;
  #L1de37c.  v2:= (`double`) v0 @kind f2d;
  #L1de37e.  call temp:= `ceil`(v2) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L1de384.  v2:= temp @kind wide;
  #L1de386.  v0:= (`int`) v2 @kind d2i;
  #L1de388.  v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int` := v0;
  #L1de38c.  call temp:= `updateTintFilter`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @kind direct;
  #L1de392.  call `invalidateSelfIgnoreShape`(v4) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L1de398.  return @kind void;
}
procedure `void` `calculatePathForSize`(`com.google.android.material.shape.MaterialShapeDrawable` v6 @kind this, `android.graphics.RectF` v7 @kind object, `android.graphics.Path` v8 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePathForSize:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1dd8e8.  v0:= v6.`com.google.android.material.shape.MaterialShapeDrawable.pathProvider` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider` @kind object;
  #L1dd8ec.  v1:= v6.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd8f0.  v2:= v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L1dd8f4.  v3:= v1.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.interpolation` @type ^`float`;
  #L1dd8f8.  v4:= v6.`com.google.android.material.shape.MaterialShapeDrawable.pathShadowListener` @type ^`com.google.android.material.shape.ShapeAppearancePathProvider$PathListener` @kind object;
  #L1dd8fc.  v1:= v2 @kind object;
  #L1dd8fe.  v2:= v3;
  #L1dd900.  v3:= v7 @kind object;
  #L1dd902.  v5:= v8 @kind object;
  #L1dd904.  call `calculatePath`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/shape/ShapeAppearancePathProvider;.calculatePath:(Lcom/google/android/material/shape/ShapeAppearanceModel;FLandroid/graphics/RectF;Lcom/google/android/material/shape/ShapeAppearancePathProvider$PathListener;Landroid/graphics/Path;)V` @kind virtual;
  #L1dd90a.  return @kind void;
}
procedure `void` `draw`(`com.google.android.material.shape.MaterialShapeDrawable` v8 @kind this, `android.graphics.Canvas` v9 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.draw:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1dd974.  v0:= v8.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L1dd978.  v1:= v8.`com.google.android.material.shape.MaterialShapeDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L1dd97c.  call temp:= `setColorFilter`(v0, v1) @signature `Landroid/graphics/Paint;.setColorFilter:(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;` @kind virtual;
  #L1dd982.  v0:= v8.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L1dd986.  call temp:= `getAlpha`(v0) @signature `Landroid/graphics/Paint;.getAlpha:()I` @kind virtual;
  #L1dd98c.  v0:= temp;
  #L1dd98e.  v1:= v8.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L1dd992.  v2:= v8.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd996.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.alpha` @type ^`int`;
  #L1dd99a.  call temp:= `modulateAlpha`(v0, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.modulateAlpha:(II)I` @kind static;
  #L1dd9a0.  v2:= temp;
  #L1dd9a2.  call `setAlpha`(v1, v2) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L1dd9a8.  v1:= v8.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L1dd9ac.  v2:= v8.`com.google.android.material.shape.MaterialShapeDrawable.strokeTintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L1dd9b0.  call temp:= `setColorFilter`(v1, v2) @signature `Landroid/graphics/Paint;.setColorFilter:(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;` @kind virtual;
  #L1dd9b6.  v1:= v8.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L1dd9ba.  v2:= v8.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd9be.  v2:= v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeWidth` @type ^`float`;
  #L1dd9c2.  call `setStrokeWidth`(v1, v2) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L1dd9c8.  v1:= v8.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L1dd9cc.  call temp:= `getAlpha`(v1) @signature `Landroid/graphics/Paint;.getAlpha:()I` @kind virtual;
  #L1dd9d2.  v1:= temp;
  #L1dd9d4.  v2:= v8.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L1dd9d8.  v3:= v8.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd9dc.  v3:= v3.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.alpha` @type ^`int`;
  #L1dd9e0.  call temp:= `modulateAlpha`(v1, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.modulateAlpha:(II)I` @kind static;
  #L1dd9e6.  v3:= temp;
  #L1dd9e8.  call `setAlpha`(v2, v3) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L1dd9ee.  v2:= v8.`com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @type ^`boolean` @kind boolean;
  #L1dd9f2.  if v2 == 0 then goto L1dda14;
  #L1dd9f6.  call `calculateStrokePath`(v8) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculateStrokePath:()V` @kind direct;
  #L1dd9fc.  call temp:= `getBoundsAsRectF`(v8) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L1dda02.  v2:= temp @kind object;
  #L1dda04.  v3:= v8.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L1dda08.  call `calculatePath`(v8, v2, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePath:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @kind direct;
  #L1dda0e.  v2:= 0I;
  #L1dda10.  v8.`com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @type ^`boolean` := v2 @kind boolean;
  #L1dda14.  call temp:= `hasCompatShadow`(v8) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasCompatShadow:()Z` @kind direct;
  #L1dda1a.  v2:= temp;
  #L1dda1c.  if v2 == 0 then goto L1ddb1a;
  #L1dda20.  call temp:= `save`(v9) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L1dda26.  call `prepareCanvasForShadow`(v8, v9) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.prepareCanvasForShadow:(Landroid/graphics/Canvas;)V` @kind direct;
  #L1dda2c.  v2:= v8.`com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @type ^`android.graphics.RectF` @kind object;
  #L1dda30.  call temp:= `width`(v2) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L1dda36.  v2:= temp;
  #L1dda38.  call temp:= `getBounds`(v8) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L1dda3e.  v3:= temp @kind object;
  #L1dda40.  call temp:= `width`(v3) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L1dda46.  v3:= temp;
  #L1dda48.  v3:= (`float`) v3 @kind i2f;
  #L1dda4a.  v2:= v2 - v3 @kind float;
  #L1dda4c.  v2:= (`int`) v2 @kind f2i;
  #L1dda4e.  v3:= v8.`com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @type ^`android.graphics.RectF` @kind object;
  #L1dda52.  call temp:= `height`(v3) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L1dda58.  v3:= temp;
  #L1dda5a.  call temp:= `getBounds`(v8) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L1dda60.  v4:= temp @kind object;
  #L1dda62.  call temp:= `height`(v4) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L1dda68.  v4:= temp;
  #L1dda6a.  v4:= (`float`) v4 @kind i2f;
  #L1dda6c.  v3:= v3 - v4 @kind float;
  #L1dda6e.  v3:= (`int`) v3 @kind f2i;
  #L1dda70.  v4:= v8.`com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @type ^`android.graphics.RectF` @kind object;
  #L1dda74.  call temp:= `width`(v4) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L1dda7a.  v4:= temp;
  #L1dda7c.  v4:= (`int`) v4 @kind f2i;
  #L1dda7e.  v5:= v8.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dda82.  v5:= v5.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L1dda86.  v5:= v5 * 2;
  #L1dda8a.  v4:= v4 + v5 @kind int;
  #L1dda8c.  v4:= v4 + v2 @kind int;
  #L1dda8e.  v5:= v8.`com.google.android.material.shape.MaterialShapeDrawable.pathBounds` @type ^`android.graphics.RectF` @kind object;
  #L1dda92.  call temp:= `height`(v5) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L1dda98.  v5:= temp;
  #L1dda9a.  v5:= (`int`) v5 @kind f2i;
  #L1dda9c.  v6:= v8.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1ddaa0.  v6:= v6.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L1ddaa4.  v6:= v6 * 2;
  #L1ddaa8.  v5:= v5 + v6 @kind int;
  #L1ddaaa.  v5:= v5 + v3 @kind int;
  #L1ddaac.  v6:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L1ddab0.  call temp:= `createBitmap`(v4, v5, v6) @signature `Landroid/graphics/Bitmap;.createBitmap:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L1ddab6.  v4:= temp @kind object;
  #L1ddab8.  v5:= new `android.graphics.Canvas`;
  #L1ddabc.  call `<init>`(v5, v4) @signature `Landroid/graphics/Canvas;.<init>:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L1ddac2.  call temp:= `getBounds`(v8) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L1ddac8.  v6:= temp @kind object;
  #L1ddaca.  v6:= v6.`android.graphics.Rect.left` @type ^`int`;
  #L1ddace.  v7:= v8.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1ddad2.  v7:= v7.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L1ddad6.  v6:= v6 - v7 @kind int;
  #L1ddad8.  v6:= v6 - v2 @kind int;
  #L1ddada.  v2:= (`float`) v6 @kind i2f;
  #L1ddadc.  call temp:= `getBounds`(v8) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L1ddae2.  v6:= temp @kind object;
  #L1ddae4.  v6:= v6.`android.graphics.Rect.top` @type ^`int`;
  #L1ddae8.  v7:= v8.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1ddaec.  v7:= v7.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L1ddaf0.  v6:= v6 - v7 @kind int;
  #L1ddaf2.  v6:= v6 - v3 @kind int;
  #L1ddaf4.  v3:= (`float`) v6 @kind i2f;
  #L1ddaf6.  v6:= -v2 @kind float;
  #L1ddaf8.  v7:= -v3 @kind float;
  #L1ddafa.  call `translate`(v5, v6, v7) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L1ddb00.  call `drawCompatShadow`(v8, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawCompatShadow:(Landroid/graphics/Canvas;)V` @kind direct;
  #L1ddb06.  v5:= 0I;
  #L1ddb08.  call `drawBitmap`(v9, v4, v2, v3, v5) @signature `Landroid/graphics/Canvas;.drawBitmap:(Landroid/graphics/Bitmap;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L1ddb0e.  call `recycle`(v4) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L1ddb14.  call `restore`(v9) @signature `Landroid/graphics/Canvas;.restore:()V` @kind virtual;
  #L1ddb1a.  call temp:= `hasFill`(v8) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasFill:()Z` @kind direct;
  #L1ddb20.  v2:= temp;
  #L1ddb22.  if v2 == 0 then goto L1ddb2c;
  #L1ddb26.  call `drawFillShape`(v8, v9) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawFillShape:(Landroid/graphics/Canvas;)V` @kind direct;
  #L1ddb2c.  call temp:= `hasStroke`(v8) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.hasStroke:()Z` @kind direct;
  #L1ddb32.  v2:= temp;
  #L1ddb34.  if v2 == 0 then goto L1ddb3e;
  #L1ddb38.  call `drawStrokeShape`(v8, v9) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawStrokeShape:(Landroid/graphics/Canvas;)V` @kind direct;
  #L1ddb3e.  v9:= v8.`com.google.android.material.shape.MaterialShapeDrawable.fillPaint` @type ^`android.graphics.Paint` @kind object;
  #L1ddb42.  call `setAlpha`(v9, v0) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L1ddb48.  v9:= v8.`com.google.android.material.shape.MaterialShapeDrawable.strokePaint` @type ^`android.graphics.Paint` @kind object;
  #L1ddb4c.  call `setAlpha`(v9, v1) @signature `Landroid/graphics/Paint;.setAlpha:(I)V` @kind virtual;
  #L1ddb52.  return @kind void;
}
procedure `void` `drawShape`(`com.google.android.material.shape.MaterialShapeDrawable` v7 @kind this, `android.graphics.Canvas` v8 @kind object, `android.graphics.Paint` v9 @kind object, `android.graphics.Path` v10 @kind object, `android.graphics.RectF` v11 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawShape:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/Path;Landroid/graphics/RectF;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1ddc44.  v0:= v7.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1ddc48.  v5:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L1ddc4c.  v1:= v7 @kind object;
  #L1ddc4e.  v2:= v8 @kind object;
  #L1ddc50.  v3:= v9 @kind object;
  #L1ddc52.  v4:= v10 @kind object;
  #L1ddc54.  v6:= v11 @kind object;
  #L1ddc56.  call `drawShape`(v1, v2, v3, v4, v5, v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawShape:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/Path;Lcom/google/android/material/shape/ShapeAppearanceModel;Landroid/graphics/RectF;)V` @kind direct;
  #L1ddc5c.  return @kind void;
}
procedure `float` `getBottomLeftCornerResolvedSize`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBottomLeftCornerResolvedSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dd334.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd338.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L1dd33c.  call temp:= `getBottomLeftCornerSize`(v0) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getBottomLeftCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L1dd342.  v0:= temp @kind object;
  #L1dd344.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L1dd34a.  v1:= temp @kind object;
  #L1dd34c.  call temp:= `getCornerSize`(v0, v1) @signature `Lcom/google/android/material/shape/CornerSize;.getCornerSize:(Landroid/graphics/RectF;)F` @kind interface;
  #L1dd352.  v0:= temp;
  #L1dd354.  return v0;
}
procedure `float` `getBottomRightCornerResolvedSize`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBottomRightCornerResolvedSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dd368.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd36c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L1dd370.  call temp:= `getBottomRightCornerSize`(v0) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getBottomRightCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L1dd376.  v0:= temp @kind object;
  #L1dd378.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L1dd37e.  v1:= temp @kind object;
  #L1dd380.  call temp:= `getCornerSize`(v0, v1) @signature `Lcom/google/android/material/shape/CornerSize;.getCornerSize:(Landroid/graphics/RectF;)F` @kind interface;
  #L1dd386.  v0:= temp;
  #L1dd388.  return v0;
}
procedure `android.graphics.RectF` `getBoundsAsRectF`(`com.google.android.material.shape.MaterialShapeDrawable` v5 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1dcd24.  call temp:= `getBounds`(v5) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L1dcd2a.  v0:= temp @kind object;
  #L1dcd2c.  v1:= v5.`com.google.android.material.shape.MaterialShapeDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1dcd30.  v2:= v0.`android.graphics.Rect.left` @type ^`int`;
  #L1dcd34.  v2:= (`float`) v2 @kind i2f;
  #L1dcd36.  v3:= v0.`android.graphics.Rect.top` @type ^`int`;
  #L1dcd3a.  v3:= (`float`) v3 @kind i2f;
  #L1dcd3c.  v4:= v0.`android.graphics.Rect.right` @type ^`int`;
  #L1dcd40.  v4:= (`float`) v4 @kind i2f;
  #L1dcd42.  v0:= v0.`android.graphics.Rect.bottom` @type ^`int`;
  #L1dcd46.  v0:= (`float`) v0 @kind i2f;
  #L1dcd48.  call `set`(v1, v2, v3, v4, v0) @signature `Landroid/graphics/RectF;.set:(FFFF)V` @kind virtual;
  #L1dcd4e.  v0:= v5.`com.google.android.material.shape.MaterialShapeDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1dcd52.  return v0 @kind object;
}
procedure `android.graphics.drawable.Drawable$ConstantState` `getConstantState`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getConstantState:()Landroid/graphics/drawable/Drawable$ConstantState;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dce30.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dce34.  return v0 @kind object;
}
procedure `float` `getElevation`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getElevation:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dd39c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd3a0.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevation` @type ^`float`;
  #L1dd3a4.  return v0;
}
procedure `android.content.res.ColorStateList` `getFillColor`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getFillColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dcbf0.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dcbf4.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.fillColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1dcbf8.  return v0 @kind object;
}
procedure `float` `getInterpolation`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getInterpolation:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dd3b8.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd3bc.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.interpolation` @type ^`float`;
  #L1dd3c0.  return v0;
}
procedure `int` `getOpacity`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getOpacity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dd53c.  v0:= -3I;
  #L1dd53e.  return v0;
}
procedure `void` `getOutline`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `android.graphics.Outline` v3 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getOutline:(Landroid/graphics/Outline;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ddcdc.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1ddce0.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatMode` @type ^`int`;
  #L1ddce4.  v1:= 2I;
  #L1ddce6.  if v0 != v1 then goto L1ddcec;
  #L1ddcea.  return @kind void;
  #L1ddcec.  call temp:= `isRoundRect`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isRoundRect:()Z` @kind virtual;
  #L1ddcf2.  v0:= temp;
  #L1ddcf4.  if v0 == 0 then goto L1ddd10;
  #L1ddcf8.  call temp:= `getTopLeftCornerResolvedSize`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTopLeftCornerResolvedSize:()F` @kind virtual;
  #L1ddcfe.  v0:= temp;
  #L1ddd00.  call temp:= `getBounds`(v2) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L1ddd06.  v1:= temp @kind object;
  #L1ddd08.  call `setRoundRect`(v3, v1, v0) @signature `Landroid/graphics/Outline;.setRoundRect:(Landroid/graphics/Rect;F)V` @kind virtual;
  #L1ddd0e.  return @kind void;
  #L1ddd10.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L1ddd16.  v0:= temp @kind object;
  #L1ddd18.  v1:= v2.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L1ddd1c.  call `calculatePath`(v2, v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePath:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @kind direct;
  #L1ddd22.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L1ddd26.  call temp:= `isConvex`(v0) @signature `Landroid/graphics/Path;.isConvex:()Z` @kind virtual;
  #L1ddd2c.  v0:= temp;
  #L1ddd2e.  if v0 == 0 then goto L1ddd3c;
  #L1ddd32.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L1ddd36.  call `setConvexPath`(v3, v0) @signature `Landroid/graphics/Outline;.setConvexPath:(Landroid/graphics/Path;)V` @kind virtual;
  #L1ddd3c.  return @kind void;
}
procedure `boolean` `getPadding`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.graphics.Rect` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getPadding:(Landroid/graphics/Rect;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dce60.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.padding` @type ^`android.graphics.Rect` @kind object;
  #L1dce64.  if v0 == 0 then goto L1dce72;
  #L1dce68.  call `set`(v2, v0) @signature `Landroid/graphics/Rect;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L1dce6e.  v2:= 1I;
  #L1dce70.  return v2;
  #L1dce72.  call temp:= `getPadding`(v1, v2) @signature `Landroid/graphics/drawable/Drawable;.getPadding:(Landroid/graphics/Rect;)Z` @kind super;
  #L1dce78.  v2:= temp;
  #L1dce7a.  return v2;
}
procedure `android.graphics.Paint$Style` `getPaintStyle`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getPaintStyle:()Landroid/graphics/Paint$Style;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dcc60.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dcc64.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.paintStyle` @type ^`android.graphics.Paint$Style` @kind object;
  #L1dcc68.  return v0 @kind object;
}
procedure `float` `getParentAbsoluteElevation`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getParentAbsoluteElevation:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dd3d4.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd3d8.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.parentAbsoluteElevation` @type ^`float`;
  #L1dd3dc.  return v0;
}
procedure `void` `getPathForSize`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `int` v3 , `int` v4 , `android.graphics.Path` v5 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getPathForSize:(IILandroid/graphics/Path;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ddd50.  v0:= new `android.graphics.RectF`;
  #L1ddd54.  v3:= (`float`) v3 @kind i2f;
  #L1ddd56.  v4:= (`float`) v4 @kind i2f;
  #L1ddd58.  v1:= 0I;
  #L1ddd5a.  call `<init>`(v0, v1, v1, v3, v4) @signature `Landroid/graphics/RectF;.<init>:(FFFF)V` @kind direct;
  #L1ddd60.  call `calculatePathForSize`(v2, v0, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePathForSize:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @kind virtual;
  #L1ddd66.  return @kind void;
}
procedure `float` `getScale`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getScale:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dd3f0.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd3f4.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.scale` @type ^`float`;
  #L1dd3f8.  return v0;
}
procedure `int` `getShadowCompatRotation`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowCompatRotation:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dd550.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd554.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRotation` @type ^`int`;
  #L1dd558.  return v0;
}
procedure `int` `getShadowCompatibilityMode`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowCompatibilityMode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dd56c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd570.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatMode` @type ^`int`;
  #L1dd574.  return v0;
}
procedure `int` `getShadowElevation`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowElevation:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dd588.  call temp:= `getElevation`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getElevation:()F` @kind virtual;
  #L1dd58e.  v0:= temp;
  #L1dd590.  v0:= (`int`) v0 @kind f2i;
  #L1dd592.  return v0;
}
procedure `int` `getShadowOffsetX`(`com.google.android.material.shape.MaterialShapeDrawable` v5 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowOffsetX:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1dd5a4.  v0:= v5.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd5a8.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int`;
  #L1dd5ac.  v1:= (`double`) v1 @kind i2d;
  #L1dd5ae.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRotation` @type ^`int`;
  #L1dd5b2.  v3:= (`double`) v0 @kind i2d;
  #L1dd5b4.  call temp:= `toRadians`(v3) @signature `Ljava/lang/Math;.toRadians:(D)D` @kind static;
  #L1dd5ba.  v3:= temp @kind wide;
  #L1dd5bc.  call temp:= `sin`(v3) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L1dd5c2.  v3:= temp @kind wide;
  #L1dd5c4.  call temp:= `isNaN`(v1) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L1dd5ca.  v1:= v1 * v3 @kind double;
  #L1dd5ce.  v0:= (`int`) v1 @kind d2i;
  #L1dd5d0.  return v0;
}
procedure `int` `getShadowOffsetY`(`com.google.android.material.shape.MaterialShapeDrawable` v5 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowOffsetY:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1dd5e4.  v0:= v5.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd5e8.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int`;
  #L1dd5ec.  v1:= (`double`) v1 @kind i2d;
  #L1dd5ee.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRotation` @type ^`int`;
  #L1dd5f2.  v3:= (`double`) v0 @kind i2d;
  #L1dd5f4.  call temp:= `toRadians`(v3) @signature `Ljava/lang/Math;.toRadians:(D)D` @kind static;
  #L1dd5fa.  v3:= temp @kind wide;
  #L1dd5fc.  call temp:= `cos`(v3) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L1dd602.  v3:= temp @kind wide;
  #L1dd604.  call temp:= `isNaN`(v1) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L1dd60a.  v1:= v1 * v3 @kind double;
  #L1dd60e.  v0:= (`int`) v1 @kind d2i;
  #L1dd610.  return v0;
}
procedure `int` `getShadowRadius`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowRadius:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dd624.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd628.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int`;
  #L1dd62c.  return v0;
}
procedure `int` `getShadowVerticalOffset`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShadowVerticalOffset:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dd640.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd644.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int`;
  #L1dd648.  return v0;
}
procedure `com.google.android.material.shape.ShapeAppearanceModel` `getShapeAppearanceModel`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShapeAppearanceModel:()Lcom/google/android/material/shape/ShapeAppearanceModel;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dd2bc.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd2c0.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L1dd2c4.  return v0 @kind object;
}
procedure `com.google.android.material.shape.ShapePathModel` `getShapedViewModel`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShapedViewModel:()Lcom/google/android/material/shape/ShapePathModel;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dd308.  call temp:= `getShapeAppearanceModel`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShapeAppearanceModel:()Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L1dd30e.  v0:= temp @kind object;
  #L1dd310.  v1:= instanceof @variable v0 @type ^`com.google.android.material.shape.ShapePathModel` @kind boolean;
  #L1dd314.  if v1 == 0 then goto L1dd31e;
  #L1dd318.  v0:= (`com.google.android.material.shape.ShapePathModel`) v0 @kind object;
  #L1dd31c.  goto L1dd320;
  #L1dd31e.  v0:= 0I;
  #L1dd320.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getStrokeColor`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dcc0c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dcc10.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1dcc14.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getStrokeTintList`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dcc28.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dcc2c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeTintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L1dcc30.  return v0 @kind object;
}
procedure `float` `getStrokeWidth`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getStrokeWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dd440.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd444.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeWidth` @type ^`float`;
  #L1dd448.  return v0;
}
procedure `android.content.res.ColorStateList` `getTintList`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTintList:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dcc44.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dcc48.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L1dcc4c.  return v0 @kind object;
}
procedure `float` `getTopLeftCornerResolvedSize`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTopLeftCornerResolvedSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dd45c.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd460.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L1dd464.  call temp:= `getTopLeftCornerSize`(v0) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getTopLeftCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L1dd46a.  v0:= temp @kind object;
  #L1dd46c.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L1dd472.  v1:= temp @kind object;
  #L1dd474.  call temp:= `getCornerSize`(v0, v1) @signature `Lcom/google/android/material/shape/CornerSize;.getCornerSize:(Landroid/graphics/RectF;)F` @kind interface;
  #L1dd47a.  v0:= temp;
  #L1dd47c.  return v0;
}
procedure `float` `getTopRightCornerResolvedSize`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTopRightCornerResolvedSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dd490.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd494.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L1dd498.  call temp:= `getTopRightCornerSize`(v0) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.getTopRightCornerSize:()Lcom/google/android/material/shape/CornerSize;` @kind virtual;
  #L1dd49e.  v0:= temp @kind object;
  #L1dd4a0.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L1dd4a6.  v1:= temp @kind object;
  #L1dd4a8.  call temp:= `getCornerSize`(v0, v1) @signature `Lcom/google/android/material/shape/CornerSize;.getCornerSize:(Landroid/graphics/RectF;)F` @kind interface;
  #L1dd4ae.  v0:= temp;
  #L1dd4b0.  return v0;
}
procedure `float` `getTranslationZ`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTranslationZ:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dd4c4.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd4c8.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.translationZ` @type ^`float`;
  #L1dd4cc.  return v0;
}
procedure `android.graphics.Region` `getTransparentRegion`(`com.google.android.material.shape.MaterialShapeDrawable` v3 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTransparentRegion:()Landroid/graphics/Region;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1dcdac.  call temp:= `getBounds`(v3) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L1dcdb2.  v0:= temp @kind object;
  #L1dcdb4.  v1:= v3.`com.google.android.material.shape.MaterialShapeDrawable.transparentRegion` @type ^`android.graphics.Region` @kind object;
  #L1dcdb8.  call temp:= `set`(v1, v0) @signature `Landroid/graphics/Region;.set:(Landroid/graphics/Rect;)Z` @kind virtual;
  #L1dcdbe.  call temp:= `getBoundsAsRectF`(v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L1dcdc4.  v0:= temp @kind object;
  #L1dcdc6.  v1:= v3.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L1dcdca.  call `calculatePath`(v3, v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePath:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @kind direct;
  #L1dcdd0.  v0:= v3.`com.google.android.material.shape.MaterialShapeDrawable.scratchRegion` @type ^`android.graphics.Region` @kind object;
  #L1dcdd4.  v1:= v3.`com.google.android.material.shape.MaterialShapeDrawable.path` @type ^`android.graphics.Path` @kind object;
  #L1dcdd8.  v2:= v3.`com.google.android.material.shape.MaterialShapeDrawable.transparentRegion` @type ^`android.graphics.Region` @kind object;
  #L1dcddc.  call temp:= `setPath`(v0, v1, v2) @signature `Landroid/graphics/Region;.setPath:(Landroid/graphics/Path;Landroid/graphics/Region;)Z` @kind virtual;
  #L1dcde2.  v0:= v3.`com.google.android.material.shape.MaterialShapeDrawable.transparentRegion` @type ^`android.graphics.Region` @kind object;
  #L1dcde6.  v1:= v3.`com.google.android.material.shape.MaterialShapeDrawable.scratchRegion` @type ^`android.graphics.Region` @kind object;
  #L1dcdea.  v2:= `@@android.graphics.Region$Op.DIFFERENCE` @type ^`android.graphics.Region$Op` @kind object;
  #L1dcdee.  call temp:= `op`(v0, v1, v2) @signature `Landroid/graphics/Region;.op:(Landroid/graphics/Region;Landroid/graphics/Region$Op;)Z` @kind virtual;
  #L1dcdf4.  v0:= v3.`com.google.android.material.shape.MaterialShapeDrawable.transparentRegion` @type ^`android.graphics.Region` @kind object;
  #L1dcdf8.  return v0 @kind object;
}
procedure `float` `getZ`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getZ:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dd4e0.  call temp:= `getElevation`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getElevation:()F` @kind virtual;
  #L1dd4e6.  v0:= temp;
  #L1dd4e8.  call temp:= `getTranslationZ`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTranslationZ:()F` @kind virtual;
  #L1dd4ee.  v1:= temp;
  #L1dd4f0.  v0:= v0 + v1 @kind float;
  #L1dd4f2.  return v0;
}
procedure `void` `initializeElevationOverlay`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `android.content.Context` v3 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.initializeElevationOverlay:(Landroid/content/Context;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ddd78.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1ddd7c.  v1:= new `com.google.android.material.elevation.ElevationOverlayProvider`;
  #L1ddd80.  call `<init>`(v1, v3) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L1ddd86.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevationOverlayProvider` @type ^`com.google.android.material.elevation.ElevationOverlayProvider` := v1 @kind object;
  #L1ddd8a.  call `updateZ`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateZ:()V` @kind direct;
  #L1ddd90.  return @kind void;
}
procedure `void` `invalidateSelf`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ddda4.  v0:= 1I;
  #L1ddda6.  v1.`com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @type ^`boolean` := v0 @kind boolean;
  #L1dddaa.  call `invalidateSelf`(v1) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind super;
  #L1dddb0.  return @kind void;
}
procedure `boolean` `isElevationOverlayEnabled`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isElevationOverlayEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dcf48.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dcf4c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevationOverlayProvider` @type ^`com.google.android.material.elevation.ElevationOverlayProvider` @kind object;
  #L1dcf50.  if v0 == 0 then goto L1dcf64;
  #L1dcf54.  call temp:= `isThemeElevationOverlayEnabled`(v0) @signature `Lcom/google/android/material/elevation/ElevationOverlayProvider;.isThemeElevationOverlayEnabled:()Z` @kind virtual;
  #L1dcf5a.  v0:= temp;
  #L1dcf5c.  if v0 == 0 then goto L1dcf64;
  #L1dcf60.  v0:= 1I;
  #L1dcf62.  goto L1dcf66;
  #L1dcf64.  v0:= 0I;
  #L1dcf66.  return v0;
}
procedure `boolean` `isElevationOverlayInitialized`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isElevationOverlayInitialized:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dcf78.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dcf7c.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevationOverlayProvider` @type ^`com.google.android.material.elevation.ElevationOverlayProvider` @kind object;
  #L1dcf80.  if v0 == 0 then goto L1dcf88;
  #L1dcf84.  v0:= 1I;
  #L1dcf86.  goto L1dcf8a;
  #L1dcf88.  v0:= 0I;
  #L1dcf8a.  return v0;
}
procedure `boolean` `isPointInTransparentRegion`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isPointInTransparentRegion:(II)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dcf9c.  call temp:= `getTransparentRegion`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTransparentRegion:()Landroid/graphics/Region;` @kind virtual;
  #L1dcfa2.  v0:= temp @kind object;
  #L1dcfa4.  call temp:= `contains`(v0, v2, v3) @signature `Landroid/graphics/Region;.contains:(II)Z` @kind virtual;
  #L1dcfaa.  v2:= temp;
  #L1dcfac.  return v2;
}
procedure `boolean` `isRoundRect`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isRoundRect:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dcfc0.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dcfc4.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L1dcfc8.  call temp:= `getBoundsAsRectF`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L1dcfce.  v1:= temp @kind object;
  #L1dcfd0.  call temp:= `isRoundRect`(v0, v1) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.isRoundRect:(Landroid/graphics/RectF;)Z` @kind virtual;
  #L1dcfd6.  v0:= temp;
  #L1dcfd8.  return v0;
}
procedure `boolean` `isShadowEnabled`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isShadowEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dcfec.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dcff0.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatMode` @type ^`int`;
  #L1dcff4.  if v0 == 0 then goto L1dd004;
  #L1dcff8.  v1:= 2I;
  #L1dcffa.  if v0 != v1 then goto L1dd000;
  #L1dcffe.  goto L1dd004;
  #L1dd000.  v0:= 0I;
  #L1dd002.  goto L1dd006;
  #L1dd004.  v0:= 1I;
  #L1dd006.  return v0;
}
procedure `boolean` `isStateful`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.isStateful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dd018.  call temp:= `isStateful`(v1) @signature `Landroid/graphics/drawable/Drawable;.isStateful:()Z` @kind super;
  #L1dd01e.  v0:= temp;
  #L1dd020.  if v0 != 0 then goto L1dd08a;
  #L1dd024.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd028.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L1dd02c.  if v0 == 0 then goto L1dd03c;
  #L1dd030.  call temp:= `isStateful`(v0) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L1dd036.  v0:= temp;
  #L1dd038.  if v0 != 0 then goto L1dd08a;
  #L1dd03c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd040.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeTintList` @type ^`android.content.res.ColorStateList` @kind object;
  #L1dd044.  if v0 == 0 then goto L1dd054;
  #L1dd048.  call temp:= `isStateful`(v0) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L1dd04e.  v0:= temp;
  #L1dd050.  if v0 != 0 then goto L1dd08a;
  #L1dd054.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd058.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1dd05c.  if v0 == 0 then goto L1dd06c;
  #L1dd060.  call temp:= `isStateful`(v0) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L1dd066.  v0:= temp;
  #L1dd068.  if v0 != 0 then goto L1dd08a;
  #L1dd06c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dd070.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.fillColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1dd074.  if v0 == 0 then goto L1dd086;
  #L1dd078.  call temp:= `isStateful`(v0) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L1dd07e.  v0:= temp;
  #L1dd080.  if v0 == 0 then goto L1dd086;
  #L1dd084.  goto L1dd08a;
  #L1dd086.  v0:= 0I;
  #L1dd088.  goto L1dd08c;
  #L1dd08a.  v0:= 1I;
  #L1dd08c.  return v0;
}
procedure `android.graphics.drawable.Drawable` `mutate`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.mutate:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dce0c.  v0:= new `com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState`;
  #L1dce10.  v1:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dce14.  call `<init>`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable$MaterialShapeDrawableState;)V` @kind direct;
  #L1dce1a.  v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` := v0 @kind object;
  #L1dce1e.  return v2 @kind object;
}
procedure `void` `onBoundsChange`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.graphics.Rect` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onBoundsChange:(Landroid/graphics/Rect;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1ddddc.  v0:= 1I;
  #L1dddde.  v1.`com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @type ^`boolean` := v0 @kind boolean;
  #L1ddde2.  call `onBoundsChange`(v1, v2) @signature `Landroid/graphics/drawable/Drawable;.onBoundsChange:(Landroid/graphics/Rect;)V` @kind super;
  #L1ddde8.  return @kind void;
}
procedure `boolean` `onStateChange`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `int`[] v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onStateChange:([I)Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1dd0a0.  call temp:= `updateColorsForState`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateColorsForState:([I)Z` @kind direct;
  #L1dd0a6.  v2:= temp;
  #L1dd0a8.  call temp:= `updateTintFilter`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @kind direct;
  #L1dd0ae.  v0:= temp;
  #L1dd0b0.  if v2 != 0 then goto L1dd0be;
  #L1dd0b4.  if v0 == 0 then goto L1dd0ba;
  #L1dd0b8.  goto L1dd0be;
  #L1dd0ba.  v2:= 0I;
  #L1dd0bc.  goto L1dd0c0;
  #L1dd0be.  v2:= 1I;
  #L1dd0c0.  if v2 == 0 then goto L1dd0ca;
  #L1dd0c4.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1dd0ca.  return v2;
}
procedure `void` `setAlpha`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setAlpha:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1dde60.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dde64.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.alpha` @type ^`int`;
  #L1dde68.  if v1 == v3 then goto L1dde76;
  #L1dde6c.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.alpha` @type ^`int` := v3;
  #L1dde70.  call `invalidateSelfIgnoreShape`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L1dde76.  return @kind void;
}
procedure `void` `setColorFilter`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.graphics.ColorFilter` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setColorFilter:(Landroid/graphics/ColorFilter;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dde88.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dde8c.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.colorFilter` @type ^`android.graphics.ColorFilter` := v2 @kind object;
  #L1dde90.  call `invalidateSelfIgnoreShape`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L1dde96.  return @kind void;
}
procedure `void` `setCornerSize`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setCornerSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1dded0.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1dded4.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L1dded8.  call temp:= `withCornerSize`(v0, v2) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.withCornerSize:(F)Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L1ddede.  v2:= temp @kind object;
  #L1ddee0.  call `setShapeAppearanceModel`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShapeAppearanceModel:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind virtual;
  #L1ddee6.  return @kind void;
}
procedure `void` `setCornerSize`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `com.google.android.material.shape.CornerSize` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setCornerSize:(Lcom/google/android/material/shape/CornerSize;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ddea8.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1ddeac.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` @kind object;
  #L1ddeb0.  call temp:= `withCornerSize`(v0, v2) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.withCornerSize:(Lcom/google/android/material/shape/CornerSize;)Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L1ddeb6.  v2:= temp @kind object;
  #L1ddeb8.  call `setShapeAppearanceModel`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShapeAppearanceModel:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind virtual;
  #L1ddebe.  return @kind void;
}
procedure `void` `setElevation`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `float` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setElevation:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ddef8.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1ddefc.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevation` @type ^`float`;
  #L1ddf00.  v1:= fcmpl(v1, v3);
  #L1ddf04.  if v1 == 0 then goto L1ddf12;
  #L1ddf08.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.elevation` @type ^`float` := v3;
  #L1ddf0c.  call `updateZ`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateZ:()V` @kind direct;
  #L1ddf12.  return @kind void;
}
procedure `void` `setFillColor`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `android.content.res.ColorStateList` v3 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setFillColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ddf24.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1ddf28.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.fillColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1ddf2c.  if v1 == v3 then goto L1ddf42;
  #L1ddf30.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.fillColor` @type ^`android.content.res.ColorStateList` := v3 @kind object;
  #L1ddf34.  call temp:= `getState`(v2) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L1ddf3a.  v3:= temp @kind object;
  #L1ddf3c.  call temp:= `onStateChange`(v2, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onStateChange:([I)Z` @kind virtual;
  #L1ddf42.  return @kind void;
}
procedure `void` `setInterpolation`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `float` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setInterpolation:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ddf54.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1ddf58.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.interpolation` @type ^`float`;
  #L1ddf5c.  v1:= fcmpl(v1, v3);
  #L1ddf60.  if v1 == 0 then goto L1ddf74;
  #L1ddf64.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.interpolation` @type ^`float` := v3;
  #L1ddf68.  v3:= 1I;
  #L1ddf6a.  v2.`com.google.android.material.shape.MaterialShapeDrawable.pathDirty` @type ^`boolean` := v3 @kind boolean;
  #L1ddf6e.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1ddf74.  return @kind void;
}
procedure `void` `setPadding`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `int` v3 , `int` v4 , `int` v5 , `int` v6 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setPadding:(IIII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ddf88.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1ddf8c.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.padding` @type ^`android.graphics.Rect` @kind object;
  #L1ddf90.  if v1 != 0 then goto L1ddfa2;
  #L1ddf94.  v1:= new `android.graphics.Rect`;
  #L1ddf98.  call `<init>`(v1) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L1ddf9e.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.padding` @type ^`android.graphics.Rect` := v1 @kind object;
  #L1ddfa2.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1ddfa6.  v0:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.padding` @type ^`android.graphics.Rect` @kind object;
  #L1ddfaa.  call `set`(v0, v3, v4, v5, v6) @signature `Landroid/graphics/Rect;.set:(IIII)V` @kind virtual;
  #L1ddfb0.  v3:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1ddfb4.  v3:= v3.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.padding` @type ^`android.graphics.Rect` @kind object;
  #L1ddfb8.  v2.`com.google.android.material.shape.MaterialShapeDrawable.padding` @type ^`android.graphics.Rect` := v3 @kind object;
  #L1ddfbc.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1ddfc2.  return @kind void;
}
procedure `void` `setPaintStyle`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.graphics.Paint$Style` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setPaintStyle:(Landroid/graphics/Paint$Style;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1ddfd4.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1ddfd8.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.paintStyle` @type ^`android.graphics.Paint$Style` := v2 @kind object;
  #L1ddfdc.  call `invalidateSelfIgnoreShape`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L1ddfe2.  return @kind void;
}
procedure `void` `setParentAbsoluteElevation`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `float` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setParentAbsoluteElevation:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1ddff4.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1ddff8.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.parentAbsoluteElevation` @type ^`float`;
  #L1ddffc.  v1:= fcmpl(v1, v3);
  #L1de000.  if v1 == 0 then goto L1de00e;
  #L1de004.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.parentAbsoluteElevation` @type ^`float` := v3;
  #L1de008.  call `updateZ`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateZ:()V` @kind direct;
  #L1de00e.  return @kind void;
}
procedure `void` `setScale`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `float` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setScale:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1de020.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1de024.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.scale` @type ^`float`;
  #L1de028.  v1:= fcmpl(v1, v3);
  #L1de02c.  if v1 == 0 then goto L1de03a;
  #L1de030.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.scale` @type ^`float` := v3;
  #L1de034.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1de03a.  return @kind void;
}
procedure `void` `setShadowColor`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1de04c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.shadowRenderer` @type ^`com.google.android.material.shadow.ShadowRenderer` @kind object;
  #L1de050.  call `setShadowColor`(v0, v2) @signature `Lcom/google/android/material/shadow/ShadowRenderer;.setShadowColor:(I)V` @kind virtual;
  #L1de056.  v2:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1de05a.  v0:= 0I;
  #L1de05c.  v2.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.useTintColorForShadow` @type ^`boolean` := v0 @kind boolean;
  #L1de060.  call `invalidateSelfIgnoreShape`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L1de066.  return @kind void;
}
procedure `void` `setShadowCompatRotation`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowCompatRotation:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1de078.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1de07c.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRotation` @type ^`int`;
  #L1de080.  if v1 == v3 then goto L1de08e;
  #L1de084.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRotation` @type ^`int` := v3;
  #L1de088.  call `invalidateSelfIgnoreShape`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L1de08e.  return @kind void;
}
procedure `void` `setShadowCompatibilityMode`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowCompatibilityMode:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1de0a0.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1de0a4.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatMode` @type ^`int`;
  #L1de0a8.  if v1 == v3 then goto L1de0b6;
  #L1de0ac.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatMode` @type ^`int` := v3;
  #L1de0b0.  call `invalidateSelfIgnoreShape`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L1de0b6.  return @kind void;
}
procedure `void` `setShadowElevation`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowElevation:(I)V` @AccessFlag PUBLIC {
    temp;

  #L1de0c8.  v1:= (`float`) v1 @kind i2f;
  #L1de0ca.  call `setElevation`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setElevation:(F)V` @kind virtual;
  #L1de0d0.  return @kind void;
}
procedure `void` `setShadowEnabled`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L1de0e4.  v1:= v1 ^~ 1;
  #L1de0e8.  call `setShadowCompatibilityMode`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowCompatibilityMode:(I)V` @kind virtual;
  #L1de0ee.  return @kind void;
}
procedure `void` `setShadowRadius`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowRadius:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1de100.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1de104.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatRadius` @type ^`int` := v2;
  #L1de108.  return @kind void;
}
procedure `void` `setShadowVerticalOffset`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShadowVerticalOffset:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1de11c.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1de120.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int`;
  #L1de124.  if v1 == v3 then goto L1de132;
  #L1de128.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shadowCompatOffset` @type ^`int` := v3;
  #L1de12c.  call `invalidateSelfIgnoreShape`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L1de132.  return @kind void;
}
procedure `void` `setShapeAppearanceModel`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `com.google.android.material.shape.ShapeAppearanceModel` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShapeAppearanceModel:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1de144.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1de148.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.shapeAppearanceModel` @type ^`com.google.android.material.shape.ShapeAppearanceModel` := v2 @kind object;
  #L1de14c.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1de152.  return @kind void;
}
procedure `void` `setShapedViewModel`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `com.google.android.material.shape.ShapePathModel` v1 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShapedViewModel:(Lcom/google/android/material/shape/ShapePathModel;)V` @AccessFlag PUBLIC {
    temp;

  #L1de164.  call `setShapeAppearanceModel`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShapeAppearanceModel:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind virtual;
  #L1de16a.  return @kind void;
}
procedure `void` `setStroke`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `float` v1 , `int` v2 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStroke:(FI)V` @AccessFlag PUBLIC {
    temp;

  #L1de19c.  call `setStrokeWidth`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeWidth:(F)V` @kind virtual;
  #L1de1a2.  call temp:= `valueOf`(v2) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L1de1a8.  v1:= temp @kind object;
  #L1de1aa.  call `setStrokeColor`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1de1b0.  return @kind void;
}
procedure `void` `setStroke`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `float` v1 , `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStroke:(FLandroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;

  #L1de17c.  call `setStrokeWidth`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeWidth:(F)V` @kind virtual;
  #L1de182.  call `setStrokeColor`(v0, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1de188.  return @kind void;
}
procedure `void` `setStrokeColor`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `android.content.res.ColorStateList` v3 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1de1c4.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1de1c8.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1de1cc.  if v1 == v3 then goto L1de1e2;
  #L1de1d0.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeColor` @type ^`android.content.res.ColorStateList` := v3 @kind object;
  #L1de1d4.  call temp:= `getState`(v2) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L1de1da.  v3:= temp @kind object;
  #L1de1dc.  call temp:= `onStateChange`(v2, v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onStateChange:([I)Z` @kind virtual;
  #L1de1e2.  return @kind void;
}
procedure `void` `setStrokeTint`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeTint:(I)V` @AccessFlag PUBLIC {
    temp;

  #L1de21c.  call temp:= `valueOf`(v1) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L1de222.  v1:= temp @kind object;
  #L1de224.  call `setStrokeTint`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1de22a.  return @kind void;
}
procedure `void` `setStrokeTint`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeTint:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1de1f4.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1de1f8.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeTintList` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L1de1fc.  call temp:= `updateTintFilter`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @kind direct;
  #L1de202.  call `invalidateSelfIgnoreShape`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L1de208.  return @kind void;
}
procedure `void` `setStrokeWidth`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeWidth:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1de23c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1de240.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.strokeWidth` @type ^`float` := v2;
  #L1de244.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1de24a.  return @kind void;
}
procedure `void` `setTint`(`com.google.android.material.shape.MaterialShapeDrawable` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setTint:(I)V` @AccessFlag PUBLIC {
    temp;

  #L1de25c.  call temp:= `valueOf`(v1) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L1de262.  v1:= temp @kind object;
  #L1de264.  call `setTintList`(v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setTintList:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1de26a.  return @kind void;
}
procedure `void` `setTintList`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1de27c.  v0:= v1.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1de280.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintList` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L1de284.  call temp:= `updateTintFilter`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @kind direct;
  #L1de28a.  call `invalidateSelfIgnoreShape`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L1de290.  return @kind void;
}
procedure `void` `setTintMode`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `android.graphics.PorterDuff$Mode` v3 @kind object) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setTintMode:(Landroid/graphics/PorterDuff$Mode;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1de2a4.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1de2a8.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintMode` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L1de2ac.  if v1 == v3 then goto L1de2c0;
  #L1de2b0.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.tintMode` @type ^`android.graphics.PorterDuff$Mode` := v3 @kind object;
  #L1de2b4.  call temp:= `updateTintFilter`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateTintFilter:()Z` @kind direct;
  #L1de2ba.  call `invalidateSelfIgnoreShape`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelfIgnoreShape:()V` @kind direct;
  #L1de2c0.  return @kind void;
}
procedure `void` `setTranslationZ`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `float` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setTranslationZ:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1de2d4.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1de2d8.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.translationZ` @type ^`float`;
  #L1de2dc.  v1:= fcmpl(v1, v3);
  #L1de2e0.  if v1 == 0 then goto L1de2ee;
  #L1de2e4.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.translationZ` @type ^`float` := v3;
  #L1de2e8.  call `updateZ`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.updateZ:()V` @kind direct;
  #L1de2ee.  return @kind void;
}
procedure `void` `setUseTintColorForShadow`(`com.google.android.material.shape.MaterialShapeDrawable` v2 @kind this, `boolean` v3 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setUseTintColorForShadow:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1de300.  v0:= v2.`com.google.android.material.shape.MaterialShapeDrawable.drawableState` @type ^`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState` @kind object;
  #L1de304.  v1:= v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.useTintColorForShadow` @type ^`boolean` @kind boolean;
  #L1de308.  if v1 == v3 then goto L1de316;
  #L1de30c.  v0.`com.google.android.material.shape.MaterialShapeDrawable$MaterialShapeDrawableState.useTintColorForShadow` @type ^`boolean` := v3 @kind boolean;
  #L1de310.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1de316.  return @kind void;
}
procedure `void` `setZ`(`com.google.android.material.shape.MaterialShapeDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setZ:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1de328.  call temp:= `getElevation`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getElevation:()F` @kind virtual;
  #L1de32e.  v0:= temp;
  #L1de330.  v2:= v2 - v0 @kind float;
  #L1de332.  call `setTranslationZ`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setTranslationZ:(F)V` @kind virtual;
  #L1de338.  return @kind void;
}
