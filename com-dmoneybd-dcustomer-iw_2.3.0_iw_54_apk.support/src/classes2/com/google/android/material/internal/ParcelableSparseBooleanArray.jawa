record `com.google.android.material.internal.ParcelableSparseBooleanArray` @kind class @AccessFlag PUBLIC extends `android.util.SparseBooleanArray` @kind class, `android.os.Parcelable` @kind interface {
}
global `android.os.Parcelable$Creator` `@@com.google.android.material.internal.ParcelableSparseBooleanArray.CREATOR` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/material/internal/ParcelableSparseBooleanArray;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1d80a0.  v0:= new `com.google.android.material.internal.ParcelableSparseBooleanArray$1`;
  #L1d80a4.  call `<init>`(v0) @signature `Lcom/google/android/material/internal/ParcelableSparseBooleanArray$1;.<init>:()V` @kind direct;
  #L1d80aa.  `@@com.google.android.material.internal.ParcelableSparseBooleanArray.CREATOR` @type ^`android.os.Parcelable$Creator` := v0 @kind object;
  #L1d80ae.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.internal.ParcelableSparseBooleanArray` v0 @kind this) @signature `Lcom/google/android/material/internal/ParcelableSparseBooleanArray;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1d80c0.  call `<init>`(v0) @signature `Landroid/util/SparseBooleanArray;.<init>:()V` @kind direct;
  #L1d80c6.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.internal.ParcelableSparseBooleanArray` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/internal/ParcelableSparseBooleanArray;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1d8124.  call `<init>`(v0, v1) @signature `Landroid/util/SparseBooleanArray;.<init>:(I)V` @kind direct;
  #L1d812a.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.internal.ParcelableSparseBooleanArray` v3 @kind this, `android.util.SparseBooleanArray` v4 @kind object) @signature `Lcom/google/android/material/internal/ParcelableSparseBooleanArray;.<init>:(Landroid/util/SparseBooleanArray;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1d80d8.  call temp:= `size`(v4) @signature `Landroid/util/SparseBooleanArray;.size:()I` @kind virtual;
  #L1d80de.  v0:= temp;
  #L1d80e0.  call `<init>`(v3, v0) @signature `Landroid/util/SparseBooleanArray;.<init>:(I)V` @kind direct;
  #L1d80e6.  v0:= 0I;
  #L1d80e8.  call temp:= `size`(v4) @signature `Landroid/util/SparseBooleanArray;.size:()I` @kind virtual;
  #L1d80ee.  v1:= temp;
  #L1d80f0.  if v0 >= v1 then goto L1d8110;
  #L1d80f4.  call temp:= `keyAt`(v4, v0) @signature `Landroid/util/SparseBooleanArray;.keyAt:(I)I` @kind virtual;
  #L1d80fa.  v1:= temp;
  #L1d80fc.  call temp:= `valueAt`(v4, v0) @signature `Landroid/util/SparseBooleanArray;.valueAt:(I)Z` @kind virtual;
  #L1d8102.  v2:= temp;
  #L1d8104.  call `put`(v3, v1, v2) @signature `Landroid/util/SparseBooleanArray;.put:(IZ)V` @kind virtual;
  #L1d810a.  v0:= v0 + 1;
  #L1d810e.  goto L1d80e8;
  #L1d8110.  return @kind void;
}
procedure `int` `describeContents`(`com.google.android.material.internal.ParcelableSparseBooleanArray` v1 @kind this) @signature `Lcom/google/android/material/internal/ParcelableSparseBooleanArray;.describeContents:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d808c.  v0:= 0I;
  #L1d808e.  return v0;
}
procedure `void` `writeToParcel`(`com.google.android.material.internal.ParcelableSparseBooleanArray` v3 @kind this, `android.os.Parcel` v4 @kind object, `int` v5 ) @signature `Lcom/google/android/material/internal/ParcelableSparseBooleanArray;.writeToParcel:(Landroid/os/Parcel;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1d813c.  call temp:= `size`(v3) @signature `Landroid/util/SparseBooleanArray;.size:()I` @kind virtual;
  #L1d8142.  v5:= temp;
  #L1d8144.  v5:= new `int`[v5];
  #L1d8148.  call temp:= `size`(v3) @signature `Landroid/util/SparseBooleanArray;.size:()I` @kind virtual;
  #L1d814e.  v0:= temp;
  #L1d8150.  v0:= new `boolean`[v0];
  #L1d8154.  v1:= 0I;
  #L1d8156.  call temp:= `size`(v3) @signature `Landroid/util/SparseBooleanArray;.size:()I` @kind virtual;
  #L1d815c.  v2:= temp;
  #L1d815e.  if v1 >= v2 then goto L1d8180;
  #L1d8162.  call temp:= `keyAt`(v3, v1) @signature `Landroid/util/SparseBooleanArray;.keyAt:(I)I` @kind virtual;
  #L1d8168.  v2:= temp;
  #L1d816a.  v5[v1]:= v2;
  #L1d816e.  call temp:= `valueAt`(v3, v1) @signature `Landroid/util/SparseBooleanArray;.valueAt:(I)Z` @kind virtual;
  #L1d8174.  v2:= temp;
  #L1d8176.  v0[v1]:= v2 @kind boolean;
  #L1d817a.  v1:= v1 + 1;
  #L1d817e.  goto L1d8156;
  #L1d8180.  call temp:= `size`(v3) @signature `Landroid/util/SparseBooleanArray;.size:()I` @kind virtual;
  #L1d8186.  v1:= temp;
  #L1d8188.  call `writeInt`(v4, v1) @signature `Landroid/os/Parcel;.writeInt:(I)V` @kind virtual;
  #L1d818e.  call `writeIntArray`(v4, v5) @signature `Landroid/os/Parcel;.writeIntArray:([I)V` @kind virtual;
  #L1d8194.  call `writeBooleanArray`(v4, v0) @signature `Landroid/os/Parcel;.writeBooleanArray:([Z)V` @kind virtual;
  #L1d819a.  return @kind void;
}
