record `com.google.android.material.chip.ChipDrawable` @kind class @AccessFlag PUBLIC extends `com.google.android.material.shape.MaterialShapeDrawable` @kind class, `androidx.core.graphics.drawable.TintAwareDrawable` @kind interface, `android.graphics.drawable.Drawable$Callback` @kind interface, `com.google.android.material.internal.TextDrawableHelper$TextDrawableDelegate` @kind interface {
  `int` `com.google.android.material.chip.ChipDrawable.alpha` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.checkable` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.google.android.material.chip.ChipDrawable.checkedIcon` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.checkedIconVisible` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipCornerRadius` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipEndPadding` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.google.android.material.chip.ChipDrawable.chipIcon` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipIconSize` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.chipIconTint` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.chipIconVisible` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipMinHeight` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.chip.ChipDrawable.chipPaint` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.android.material.chip.ChipDrawable.chipStartPadding` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.chipStrokeColor` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.chipSurfaceColor` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.google.android.material.chip.ChipDrawable.closeIcon` @AccessFlag PRIVATE;
  `java.lang.CharSequence` `com.google.android.material.chip.ChipDrawable.closeIconContentDescription` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.google.android.material.chip.ChipDrawable.closeIconRipple` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.closeIconSize` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @AccessFlag PRIVATE;
  `int`[] `com.google.android.material.chip.ChipDrawable.closeIconStateSet` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.closeIconTint` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.closeIconVisible` @AccessFlag PRIVATE;
  `android.graphics.ColorFilter` `com.google.android.material.chip.ChipDrawable.colorFilter` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.compatRippleColor` @AccessFlag PRIVATE;
  `android.content.Context` `com.google.android.material.chip.ChipDrawable.context` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.chip.ChipDrawable.currentChecked` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentChipSurfaceColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentCompositeSurfaceBackgroundColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentTextColor` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.currentTint` @AccessFlag PRIVATE;
  `android.graphics.Paint` `com.google.android.material.chip.ChipDrawable.debugPaint` @AccessFlag PRIVATE_FINAL;
  `java.lang.ref.WeakReference` `com.google.android.material.chip.ChipDrawable.delegate` @AccessFlag PRIVATE;
  `android.graphics.Paint$FontMetrics` `com.google.android.material.chip.ChipDrawable.fontMetrics` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.chip.ChipDrawable.hasChipIconTint` @AccessFlag PRIVATE;
  `com.google.android.material.animation.MotionSpec` `com.google.android.material.chip.ChipDrawable.hideMotionSpec` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.iconEndPadding` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.iconStartPadding` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipDrawable.maxWidth` @AccessFlag PRIVATE;
  `android.graphics.PointF` `com.google.android.material.chip.ChipDrawable.pointF` @AccessFlag PRIVATE_FINAL;
  `android.graphics.RectF` `com.google.android.material.chip.ChipDrawable.rectF` @AccessFlag PRIVATE_FINAL;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.rippleColor` @AccessFlag PRIVATE;
  `android.graphics.Path` `com.google.android.material.chip.ChipDrawable.shapePath` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.google.android.material.chip.ChipDrawable.shouldDrawText` @AccessFlag PRIVATE;
  `com.google.android.material.animation.MotionSpec` `com.google.android.material.chip.ChipDrawable.showMotionSpec` @AccessFlag PRIVATE;
  `java.lang.CharSequence` `com.google.android.material.chip.ChipDrawable.text` @AccessFlag PRIVATE;
  `com.google.android.material.internal.TextDrawableHelper` `com.google.android.material.chip.ChipDrawable.textDrawableHelper` @AccessFlag PRIVATE_FINAL;
  `float` `com.google.android.material.chip.ChipDrawable.textEndPadding` @AccessFlag PRIVATE;
  `float` `com.google.android.material.chip.ChipDrawable.textStartPadding` @AccessFlag PRIVATE;
  `android.content.res.ColorStateList` `com.google.android.material.chip.ChipDrawable.tint` @AccessFlag PRIVATE;
  `android.graphics.PorterDuffColorFilter` `com.google.android.material.chip.ChipDrawable.tintFilter` @AccessFlag PRIVATE;
  `android.graphics.PorterDuff$Mode` `com.google.android.material.chip.ChipDrawable.tintMode` @AccessFlag PRIVATE;
  `android.text.TextUtils$TruncateAt` `com.google.android.material.chip.ChipDrawable.truncateAt` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipDrawable.useCompatRipple` @AccessFlag PRIVATE;
}
global `boolean` `@@com.google.android.material.chip.ChipDrawable.DEBUG` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@com.google.android.material.chip.ChipDrawable.DEFAULT_STATE` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.google.android.material.chip.ChipDrawable.NAMESPACE_APP` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.drawable.ShapeDrawable` `@@com.google.android.material.chip.ChipDrawable.closeIconRippleMask` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/material/chip/ChipDrawable;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1c2220.  v0:= 1I;
  #L1c2222.  v0:= new `int`[v0];
  #L1c2226.  v1:= 0I;
  #L1c2228.  v2:= 16842910I;
  #L1c222e.  v0[v1]:= v2;
  #L1c2232.  `@@com.google.android.material.chip.ChipDrawable.DEFAULT_STATE` @type ^`int`[] := v0 @kind object;
  #L1c2236.  v0:= new `android.graphics.drawable.ShapeDrawable`;
  #L1c223a.  v1:= new `android.graphics.drawable.shapes.OvalShape`;
  #L1c223e.  call `<init>`(v1) @signature `Landroid/graphics/drawable/shapes/OvalShape;.<init>:()V` @kind direct;
  #L1c2244.  call `<init>`(v0, v1) @signature `Landroid/graphics/drawable/ShapeDrawable;.<init>:(Landroid/graphics/drawable/shapes/Shape;)V` @kind direct;
  #L1c224a.  `@@com.google.android.material.chip.ChipDrawable.closeIconRippleMask` @type ^`android.graphics.drawable.ShapeDrawable` := v0 @kind object;
  #L1c224e.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.Context` v2 @kind object, `android.util.AttributeSet` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L1c2260.  call `<init>`(v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;II)V` @kind direct;
  #L1c2266.  v3:= new `android.graphics.Paint`;
  #L1c226a.  v4:= 1I;
  #L1c226c.  call `<init>`(v3, v4) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L1c2272.  v1.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` := v3 @kind object;
  #L1c2276.  v3:= new `android.graphics.Paint$FontMetrics`;
  #L1c227a.  call `<init>`(v3) @signature `Landroid/graphics/Paint$FontMetrics;.<init>:()V` @kind direct;
  #L1c2280.  v1.`com.google.android.material.chip.ChipDrawable.fontMetrics` @type ^`android.graphics.Paint$FontMetrics` := v3 @kind object;
  #L1c2284.  v3:= new `android.graphics.RectF`;
  #L1c2288.  call `<init>`(v3) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L1c228e.  v1.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` := v3 @kind object;
  #L1c2292.  v3:= new `android.graphics.PointF`;
  #L1c2296.  call `<init>`(v3) @signature `Landroid/graphics/PointF;.<init>:()V` @kind direct;
  #L1c229c.  v1.`com.google.android.material.chip.ChipDrawable.pointF` @type ^`android.graphics.PointF` := v3 @kind object;
  #L1c22a0.  v3:= new `android.graphics.Path`;
  #L1c22a4.  call `<init>`(v3) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L1c22aa.  v1.`com.google.android.material.chip.ChipDrawable.shapePath` @type ^`android.graphics.Path` := v3 @kind object;
  #L1c22ae.  v3:= 255I;
  #L1c22b2.  v1.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int` := v3;
  #L1c22b6.  v3:= `@@android.graphics.PorterDuff$Mode.SRC_IN` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L1c22ba.  v1.`com.google.android.material.chip.ChipDrawable.tintMode` @type ^`android.graphics.PorterDuff$Mode` := v3 @kind object;
  #L1c22be.  v3:= new `java.lang.ref.WeakReference`;
  #L1c22c2.  v5:= 0I;
  #L1c22c4.  call `<init>`(v3, v5) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1c22ca.  v1.`com.google.android.material.chip.ChipDrawable.delegate` @type ^`java.lang.ref.WeakReference` := v3 @kind object;
  #L1c22ce.  call `initializeElevationOverlay`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.initializeElevationOverlay:(Landroid/content/Context;)V` @kind virtual;
  #L1c22d4.  v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` := v2 @kind object;
  #L1c22d8.  v3:= new `com.google.android.material.internal.TextDrawableHelper`;
  #L1c22dc.  call `<init>`(v3, v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.<init>:(Lcom/google/android/material/internal/TextDrawableHelper$TextDrawableDelegate;)V` @kind direct;
  #L1c22e2.  v1.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` := v3 @kind object;
  #L1c22e6.  v0:= "" @kind object;
  #L1c22ea.  v1.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` := v0 @kind object;
  #L1c22ee.  call temp:= `getTextPaint`(v3) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L1c22f4.  v3:= temp @kind object;
  #L1c22f6.  call temp:= `getResources`(v2) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c22fc.  v2:= temp @kind object;
  #L1c22fe.  call temp:= `getDisplayMetrics`(v2) @signature `Landroid/content/res/Resources;.getDisplayMetrics:()Landroid/util/DisplayMetrics;` @kind virtual;
  #L1c2304.  v2:= temp @kind object;
  #L1c2306.  v2:= v2.`android.util.DisplayMetrics.density` @type ^`float`;
  #L1c230a.  v3.`android.text.TextPaint.density` @type ^`float` := v2;
  #L1c230e.  v1.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` := v5 @kind object;
  #L1c2312.  v2:= `@@com.google.android.material.chip.ChipDrawable.DEFAULT_STATE` @type ^`int`[] @kind object;
  #L1c2316.  call temp:= `setState`(v1, v2) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L1c231c.  call temp:= `setCloseIconState`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconState:([I)Z` @kind virtual;
  #L1c2322.  v1.`com.google.android.material.chip.ChipDrawable.shouldDrawText` @type ^`boolean` := v4 @kind boolean;
  #L1c2326.  v2:= `@@com.google.android.material.ripple.RippleUtils.USE_FRAMEWORK_RIPPLE` @type ^`boolean` @kind boolean;
  #L1c232a.  if v2 == 0 then goto L1c233a;
  #L1c232e.  v2:= `@@com.google.android.material.chip.ChipDrawable.closeIconRippleMask` @type ^`android.graphics.drawable.ShapeDrawable` @kind object;
  #L1c2332.  v3:= -1I;
  #L1c2334.  call `setTint`(v2, v3) @signature `Landroid/graphics/drawable/ShapeDrawable;.setTint:(I)V` @kind virtual;
  #L1c233a.  return @kind void;
}
procedure `void` `applyChildDrawable`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.drawable.Drawable` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1c234c.  if v3 != 0 then goto L1c2352;
  #L1c2350.  return @kind void;
  #L1c2352.  call `setCallback`(v3, v2) @signature `Landroid/graphics/drawable/Drawable;.setCallback:(Landroid/graphics/drawable/Drawable$Callback;)V` @kind virtual;
  #L1c2358.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L1c235e.  v0:= temp;
  #L1c2360.  call temp:= `setLayoutDirection`(v3, v0) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setLayoutDirection:(Landroid/graphics/drawable/Drawable;I)Z` @kind static;
  #L1c2366.  call temp:= `getLevel`(v2) @signature `Landroid/graphics/drawable/Drawable;.getLevel:()I` @kind virtual;
  #L1c236c.  v0:= temp;
  #L1c236e.  call temp:= `setLevel`(v3, v0) @signature `Landroid/graphics/drawable/Drawable;.setLevel:(I)Z` @kind virtual;
  #L1c2374.  call temp:= `isVisible`(v2) @signature `Landroid/graphics/drawable/Drawable;.isVisible:()Z` @kind virtual;
  #L1c237a.  v0:= temp;
  #L1c237c.  v1:= 0I;
  #L1c237e.  call temp:= `setVisible`(v3, v0, v1) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind virtual;
  #L1c2384.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c2388.  if v3 != v0 then goto L1c23b2;
  #L1c238c.  call temp:= `isStateful`(v3) @signature `Landroid/graphics/drawable/Drawable;.isStateful:()Z` @kind virtual;
  #L1c2392.  v0:= temp;
  #L1c2394.  if v0 == 0 then goto L1c23a6;
  #L1c2398.  call temp:= `getCloseIconState`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconState:()[I` @kind virtual;
  #L1c239e.  v0:= temp @kind object;
  #L1c23a0.  call temp:= `setState`(v3, v0) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L1c23a6.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c23aa.  call `setTintList`(v3, v0) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTintList:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V` @kind static;
  #L1c23b0.  return @kind void;
  #L1c23b2.  call temp:= `isStateful`(v3) @signature `Landroid/graphics/drawable/Drawable;.isStateful:()Z` @kind virtual;
  #L1c23b8.  v0:= temp;
  #L1c23ba.  if v0 == 0 then goto L1c23cc;
  #L1c23be.  call temp:= `getState`(v2) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L1c23c4.  v0:= temp @kind object;
  #L1c23c6.  call temp:= `setState`(v3, v0) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L1c23cc.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c23d0.  if v3 != v0 then goto L1c23e6;
  #L1c23d4.  v3:= v2.`com.google.android.material.chip.ChipDrawable.hasChipIconTint` @type ^`boolean` @kind boolean;
  #L1c23d8.  if v3 == 0 then goto L1c23e6;
  #L1c23dc.  v3:= v2.`com.google.android.material.chip.ChipDrawable.chipIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c23e0.  call `setTintList`(v0, v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTintList:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V` @kind static;
  #L1c23e6.  return @kind void;
}
procedure `void` `calculateChipIconBounds`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.Rect` v3 @kind object, `android.graphics.RectF` v4 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1c23f8.  call `setEmpty`(v4) @signature `Landroid/graphics/RectF;.setEmpty:()V` @kind virtual;
  #L1c23fe.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L1c2404.  v0:= temp;
  #L1c2406.  if v0 != 0 then goto L1c2416;
  #L1c240a.  call temp:= `showsCheckedIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L1c2410.  v0:= temp;
  #L1c2412.  if v0 == 0 then goto L1c247a;
  #L1c2416.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L1c241a.  v1:= v2.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float`;
  #L1c241e.  v0:= v0 + v1 @kind float;
  #L1c2420.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L1c2426.  v1:= temp;
  #L1c2428.  if v1 != 0 then goto L1c2444;
  #L1c242c.  v1:= v3.`android.graphics.Rect.left` @type ^`int`;
  #L1c2430.  v1:= (`float`) v1 @kind i2f;
  #L1c2432.  v1:= v1 + v0 @kind float;
  #L1c2434.  v4.`android.graphics.RectF.left` @type ^`float` := v1;
  #L1c2438.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L1c243c.  v1:= v1 + v0 @kind float;
  #L1c243e.  v4.`android.graphics.RectF.right` @type ^`float` := v1;
  #L1c2442.  goto L1c245a;
  #L1c2444.  v1:= v3.`android.graphics.Rect.right` @type ^`int`;
  #L1c2448.  v1:= (`float`) v1 @kind i2f;
  #L1c244a.  v1:= v1 - v0 @kind float;
  #L1c244c.  v4.`android.graphics.RectF.right` @type ^`float` := v1;
  #L1c2450.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L1c2454.  v1:= v1 - v0 @kind float;
  #L1c2456.  v4.`android.graphics.RectF.left` @type ^`float` := v1;
  #L1c245a.  call temp:= `exactCenterY`(v3) @signature `Landroid/graphics/Rect;.exactCenterY:()F` @kind virtual;
  #L1c2460.  v3:= temp;
  #L1c2462.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L1c2466.  v1:= 2.0F;
  #L1c246a.  v1:= v0 / v1 @kind float;
  #L1c246e.  v3:= v3 - v1 @kind float;
  #L1c2470.  v4.`android.graphics.RectF.top` @type ^`float` := v3;
  #L1c2474.  v3:= v3 + v0 @kind float;
  #L1c2476.  v4.`android.graphics.RectF.bottom` @type ^`float` := v3;
  #L1c247a.  return @kind void;
}
procedure `void` `calculateChipTouchBounds`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.Rect` v3 @kind object, `android.graphics.RectF` v4 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1c248c.  call `set`(v4, v3) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L1c2492.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1c2498.  v0:= temp;
  #L1c249a.  if v0 == 0 then goto L1c24e0;
  #L1c249e.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L1c24a2.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L1c24a6.  v0:= v0 + v1 @kind float;
  #L1c24a8.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L1c24ac.  v0:= v0 + v1 @kind float;
  #L1c24ae.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L1c24b2.  v0:= v0 + v1 @kind float;
  #L1c24b4.  v1:= v2.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L1c24b8.  v0:= v0 + v1 @kind float;
  #L1c24ba.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L1c24c0.  v1:= temp;
  #L1c24c2.  if v1 != 0 then goto L1c24d4;
  #L1c24c6.  v3:= v3.`android.graphics.Rect.right` @type ^`int`;
  #L1c24ca.  v3:= (`float`) v3 @kind i2f;
  #L1c24cc.  v3:= v3 - v0 @kind float;
  #L1c24ce.  v4.`android.graphics.RectF.right` @type ^`float` := v3;
  #L1c24d2.  goto L1c24e0;
  #L1c24d4.  v3:= v3.`android.graphics.Rect.left` @type ^`int`;
  #L1c24d8.  v3:= (`float`) v3 @kind i2f;
  #L1c24da.  v3:= v3 + v0 @kind float;
  #L1c24dc.  v4.`android.graphics.RectF.left` @type ^`float` := v3;
  #L1c24e0.  return @kind void;
}
procedure `void` `calculateCloseIconBounds`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.Rect` v3 @kind object, `android.graphics.RectF` v4 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1c24f4.  call `setEmpty`(v4) @signature `Landroid/graphics/RectF;.setEmpty:()V` @kind virtual;
  #L1c24fa.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1c2500.  v0:= temp;
  #L1c2502.  if v0 == 0 then goto L1c256a;
  #L1c2506.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L1c250a.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L1c250e.  v0:= v0 + v1 @kind float;
  #L1c2510.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L1c2516.  v1:= temp;
  #L1c2518.  if v1 != 0 then goto L1c2534;
  #L1c251c.  v1:= v3.`android.graphics.Rect.right` @type ^`int`;
  #L1c2520.  v1:= (`float`) v1 @kind i2f;
  #L1c2522.  v1:= v1 - v0 @kind float;
  #L1c2524.  v4.`android.graphics.RectF.right` @type ^`float` := v1;
  #L1c2528.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L1c252c.  v1:= v1 - v0 @kind float;
  #L1c252e.  v4.`android.graphics.RectF.left` @type ^`float` := v1;
  #L1c2532.  goto L1c254a;
  #L1c2534.  v1:= v3.`android.graphics.Rect.left` @type ^`int`;
  #L1c2538.  v1:= (`float`) v1 @kind i2f;
  #L1c253a.  v1:= v1 + v0 @kind float;
  #L1c253c.  v4.`android.graphics.RectF.left` @type ^`float` := v1;
  #L1c2540.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L1c2544.  v1:= v1 + v0 @kind float;
  #L1c2546.  v4.`android.graphics.RectF.right` @type ^`float` := v1;
  #L1c254a.  call temp:= `exactCenterY`(v3) @signature `Landroid/graphics/Rect;.exactCenterY:()F` @kind virtual;
  #L1c2550.  v3:= temp;
  #L1c2552.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L1c2556.  v1:= 2.0F;
  #L1c255a.  v1:= v0 / v1 @kind float;
  #L1c255e.  v3:= v3 - v1 @kind float;
  #L1c2560.  v4.`android.graphics.RectF.top` @type ^`float` := v3;
  #L1c2564.  v3:= v3 + v0 @kind float;
  #L1c2566.  v4.`android.graphics.RectF.bottom` @type ^`float` := v3;
  #L1c256a.  return @kind void;
}
procedure `void` `calculateCloseIconTouchBounds`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `android.graphics.Rect` v4 @kind object, `android.graphics.RectF` v5 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1c257c.  call `setEmpty`(v5) @signature `Landroid/graphics/RectF;.setEmpty:()V` @kind virtual;
  #L1c2582.  call temp:= `showsCloseIcon`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1c2588.  v0:= temp;
  #L1c258a.  if v0 == 0 then goto L1c25ee;
  #L1c258e.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L1c2592.  v1:= v3.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L1c2596.  v0:= v0 + v1 @kind float;
  #L1c2598.  v1:= v3.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L1c259c.  v0:= v0 + v1 @kind float;
  #L1c259e.  v1:= v3.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L1c25a2.  v0:= v0 + v1 @kind float;
  #L1c25a4.  v1:= v3.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L1c25a8.  v0:= v0 + v1 @kind float;
  #L1c25aa.  call temp:= `getLayoutDirection`(v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L1c25b0.  v1:= temp;
  #L1c25b2.  if v1 != 0 then goto L1c25c8;
  #L1c25b6.  v1:= v4.`android.graphics.Rect.right` @type ^`int`;
  #L1c25ba.  v1:= (`float`) v1 @kind i2f;
  #L1c25bc.  v5.`android.graphics.RectF.right` @type ^`float` := v1;
  #L1c25c0.  v1:= v1 - v0 @kind float;
  #L1c25c2.  v5.`android.graphics.RectF.left` @type ^`float` := v1;
  #L1c25c6.  goto L1c25da;
  #L1c25c8.  v1:= v4.`android.graphics.Rect.left` @type ^`int`;
  #L1c25cc.  v2:= (`float`) v1 @kind i2f;
  #L1c25ce.  v5.`android.graphics.RectF.left` @type ^`float` := v2;
  #L1c25d2.  v1:= (`float`) v1 @kind i2f;
  #L1c25d4.  v1:= v1 + v0 @kind float;
  #L1c25d6.  v5.`android.graphics.RectF.right` @type ^`float` := v1;
  #L1c25da.  v0:= v4.`android.graphics.Rect.top` @type ^`int`;
  #L1c25de.  v0:= (`float`) v0 @kind i2f;
  #L1c25e0.  v5.`android.graphics.RectF.top` @type ^`float` := v0;
  #L1c25e4.  v4:= v4.`android.graphics.Rect.bottom` @type ^`int`;
  #L1c25e8.  v4:= (`float`) v4 @kind i2f;
  #L1c25ea.  v5.`android.graphics.RectF.bottom` @type ^`float` := v4;
  #L1c25ee.  return @kind void;
}
procedure `void` `calculateTextBounds`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `android.graphics.Rect` v4 @kind object, `android.graphics.RectF` v5 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1c2600.  call `setEmpty`(v5) @signature `Landroid/graphics/RectF;.setEmpty:()V` @kind virtual;
  #L1c2606.  v0:= v3.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L1c260a.  if v0 == 0 then goto L1c2688;
  #L1c260e.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L1c2612.  call temp:= `d`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.d:()F` @kind virtual;
  #L1c2618.  v1:= temp;
  #L1c261a.  v0:= v0 + v1 @kind float;
  #L1c261c.  v1:= v3.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L1c2620.  v0:= v0 + v1 @kind float;
  #L1c2622.  v1:= v3.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L1c2626.  call temp:= `e`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.e:()F` @kind virtual;
  #L1c262c.  v2:= temp;
  #L1c262e.  v1:= v1 + v2 @kind float;
  #L1c2630.  v2:= v3.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L1c2634.  v1:= v1 + v2 @kind float;
  #L1c2636.  call temp:= `getLayoutDirection`(v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L1c263c.  v2:= temp;
  #L1c263e.  if v2 != 0 then goto L1c265c;
  #L1c2642.  v2:= v4.`android.graphics.Rect.left` @type ^`int`;
  #L1c2646.  v2:= (`float`) v2 @kind i2f;
  #L1c2648.  v2:= v2 + v0 @kind float;
  #L1c264a.  v5.`android.graphics.RectF.left` @type ^`float` := v2;
  #L1c264e.  v0:= v4.`android.graphics.Rect.right` @type ^`int`;
  #L1c2652.  v0:= (`float`) v0 @kind i2f;
  #L1c2654.  v0:= v0 - v1 @kind float;
  #L1c2656.  v5.`android.graphics.RectF.right` @type ^`float` := v0;
  #L1c265a.  goto L1c2674;
  #L1c265c.  v2:= v4.`android.graphics.Rect.left` @type ^`int`;
  #L1c2660.  v2:= (`float`) v2 @kind i2f;
  #L1c2662.  v2:= v2 + v1 @kind float;
  #L1c2664.  v5.`android.graphics.RectF.left` @type ^`float` := v2;
  #L1c2668.  v1:= v4.`android.graphics.Rect.right` @type ^`int`;
  #L1c266c.  v1:= (`float`) v1 @kind i2f;
  #L1c266e.  v1:= v1 - v0 @kind float;
  #L1c2670.  v5.`android.graphics.RectF.right` @type ^`float` := v1;
  #L1c2674.  v0:= v4.`android.graphics.Rect.top` @type ^`int`;
  #L1c2678.  v0:= (`float`) v0 @kind i2f;
  #L1c267a.  v5.`android.graphics.RectF.top` @type ^`float` := v0;
  #L1c267e.  v4:= v4.`android.graphics.Rect.bottom` @type ^`int`;
  #L1c2682.  v4:= (`float`) v4 @kind i2f;
  #L1c2684.  v5.`android.graphics.RectF.bottom` @type ^`float` := v4;
  #L1c2688.  return @kind void;
}
procedure `float` `calculateTextCenterFromBaseline`(`com.google.android.material.chip.ChipDrawable` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextCenterFromBaseline:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1c1f88.  v0:= v2.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1c1f8c.  call temp:= `getTextPaint`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L1c1f92.  v0:= temp @kind object;
  #L1c1f94.  v1:= v2.`com.google.android.material.chip.ChipDrawable.fontMetrics` @type ^`android.graphics.Paint$FontMetrics` @kind object;
  #L1c1f98.  call temp:= `getFontMetrics`(v0, v1) @signature `Landroid/text/TextPaint;.getFontMetrics:(Landroid/graphics/Paint$FontMetrics;)F` @kind virtual;
  #L1c1f9e.  v0:= v2.`com.google.android.material.chip.ChipDrawable.fontMetrics` @type ^`android.graphics.Paint$FontMetrics` @kind object;
  #L1c1fa2.  v1:= v0.`android.graphics.Paint$FontMetrics.descent` @type ^`float`;
  #L1c1fa6.  v0:= v0.`android.graphics.Paint$FontMetrics.ascent` @type ^`float`;
  #L1c1faa.  v1:= v1 + v0 @kind float;
  #L1c1fac.  v0:= 2.0F;
  #L1c1fb0.  v1:= v1 / v0 @kind float;
  #L1c1fb2.  return v1;
}
procedure `boolean` `canShowCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.canShowCheckedIcon:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1c16c4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` @kind boolean;
  #L1c16c8.  if v0 == 0 then goto L1c16e0;
  #L1c16cc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c16d0.  if v0 == 0 then goto L1c16e0;
  #L1c16d4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` @kind boolean;
  #L1c16d8.  if v0 == 0 then goto L1c16e0;
  #L1c16dc.  v0:= 1I;
  #L1c16de.  goto L1c16e2;
  #L1c16e0.  v0:= 0I;
  #L1c16e2.  return v0;
}
procedure `com.google.android.material.chip.ChipDrawable` `createFromAttributes`(`android.content.Context` v1 @kind object, `android.util.AttributeSet` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.createFromAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;II)Lcom/google/android/material/chip/ChipDrawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1c1e94.  v0:= new `com.google.android.material.chip.ChipDrawable`;
  #L1c1e98.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;II)V` @kind direct;
  #L1c1e9e.  call `loadFromAttributes`(v0, v2, v3, v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.loadFromAttributes:(Landroid/util/AttributeSet;II)V` @kind direct;
  #L1c1ea4.  return v0 @kind object;
}
procedure `com.google.android.material.chip.ChipDrawable` `createFromResource`(`android.content.Context` v2 @kind object, `int` v3 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.createFromResource:(Landroid/content/Context;I)Lcom/google/android/material/chip/ChipDrawable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1c1eb8.  v0:= "chip" @kind object;
  #L1c1ebc.  call temp:= `parseDrawableXml`(v2, v3, v0) @signature `Lcom/google/android/material/drawable/DrawableUtils;.parseDrawableXml:(Landroid/content/Context;ILjava/lang/CharSequence;)Landroid/util/AttributeSet;` @kind static;
  #L1c1ec2.  v3:= temp @kind object;
  #L1c1ec4.  call temp:= `getStyleAttribute`(v3) @signature `Landroid/util/AttributeSet;.getStyleAttribute:()I` @kind interface;
  #L1c1eca.  v0:= temp;
  #L1c1ecc.  if v0 != 0 then goto L1c1ed4;
  #L1c1ed0.  v0:= `@@com.google.android.material.R$style.Widget_MaterialComponents_Chip_Entry` @type ^`int`;
  #L1c1ed4.  v1:= `@@com.google.android.material.R$attr.chipStandaloneStyle` @type ^`int`;
  #L1c1ed8.  call temp:= `createFromAttributes`(v2, v3, v1, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.createFromAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;II)Lcom/google/android/material/chip/ChipDrawable;` @kind static;
  #L1c1ede.  v2:= temp @kind object;
  #L1c1ee0.  return v2 @kind object;
}
procedure `void` `drawCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v5 @kind this, `android.graphics.Canvas` v6 @kind object, `android.graphics.Rect` v7 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCheckedIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1c275c.  call temp:= `showsCheckedIcon`(v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L1c2762.  v0:= temp;
  #L1c2764.  if v0 == 0 then goto L1c27c0;
  #L1c2768.  v0:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c276c.  call `calculateChipIconBounds`(v5, v7, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L1c2772.  v7:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c2776.  v0:= v7.`android.graphics.RectF.left` @type ^`float`;
  #L1c277a.  v7:= v7.`android.graphics.RectF.top` @type ^`float`;
  #L1c277e.  call `translate`(v6, v0, v7) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L1c2784.  v1:= v5.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c2788.  v2:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c278c.  call temp:= `width`(v2) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L1c2792.  v2:= temp;
  #L1c2794.  v2:= (`int`) v2 @kind f2i;
  #L1c2796.  v3:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c279a.  call temp:= `height`(v3) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L1c27a0.  v3:= temp;
  #L1c27a2.  v3:= (`int`) v3 @kind f2i;
  #L1c27a4.  v4:= 0I;
  #L1c27a6.  call `setBounds`(v1, v4, v4, v2, v3) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L1c27ac.  v1:= v5.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c27b0.  call `draw`(v1, v6) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L1c27b6.  v0:= -v0 @kind float;
  #L1c27b8.  v7:= -v7 @kind float;
  #L1c27ba.  call `translate`(v6, v0, v7) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L1c27c0.  return @kind void;
}
procedure `void` `drawChipBackground`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `android.graphics.Canvas` v4 @kind object, `android.graphics.Rect` v5 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipBackground:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1c27d4.  v0:= v3.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1c27d8.  if v0 != 0 then goto L1c2832;
  #L1c27dc.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1c27e0.  v1:= v3.`com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @type ^`int`;
  #L1c27e4.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L1c27ea.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1c27ee.  v1:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L1c27f2.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L1c27f8.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1c27fc.  call temp:= `getTintColorFilter`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTintColorFilter:()Landroid/graphics/ColorFilter;` @kind direct;
  #L1c2802.  v1:= temp @kind object;
  #L1c2804.  call temp:= `setColorFilter`(v0, v1) @signature `Landroid/graphics/Paint;.setColorFilter:(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;` @kind virtual;
  #L1c280a.  v0:= v3.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c280e.  call `set`(v0, v5) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L1c2814.  v5:= v3.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c2818.  call temp:= `getChipCornerRadius`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L1c281e.  v0:= temp;
  #L1c2820.  call temp:= `getChipCornerRadius`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L1c2826.  v1:= temp;
  #L1c2828.  v2:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1c282c.  call `drawRoundRect`(v4, v5, v0, v1, v2) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L1c2832.  return @kind void;
}
procedure `void` `drawChipIcon`(`com.google.android.material.chip.ChipDrawable` v5 @kind this, `android.graphics.Canvas` v6 @kind object, `android.graphics.Rect` v7 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1c2844.  call temp:= `showsChipIcon`(v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L1c284a.  v0:= temp;
  #L1c284c.  if v0 == 0 then goto L1c28a8;
  #L1c2850.  v0:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c2854.  call `calculateChipIconBounds`(v5, v7, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L1c285a.  v7:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c285e.  v0:= v7.`android.graphics.RectF.left` @type ^`float`;
  #L1c2862.  v7:= v7.`android.graphics.RectF.top` @type ^`float`;
  #L1c2866.  call `translate`(v6, v0, v7) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L1c286c.  v1:= v5.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c2870.  v2:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c2874.  call temp:= `width`(v2) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L1c287a.  v2:= temp;
  #L1c287c.  v2:= (`int`) v2 @kind f2i;
  #L1c287e.  v3:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c2882.  call temp:= `height`(v3) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L1c2888.  v3:= temp;
  #L1c288a.  v3:= (`int`) v3 @kind f2i;
  #L1c288c.  v4:= 0I;
  #L1c288e.  call `setBounds`(v1, v4, v4, v2, v3) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L1c2894.  v1:= v5.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c2898.  call `draw`(v1, v6) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L1c289e.  v0:= -v0 @kind float;
  #L1c28a0.  v7:= -v7 @kind float;
  #L1c28a2.  call `translate`(v6, v0, v7) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L1c28a8.  return @kind void;
}
procedure `void` `drawChipStroke`(`com.google.android.material.chip.ChipDrawable` v7 @kind this, `android.graphics.Canvas` v8 @kind object, `android.graphics.Rect` v9 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipStroke:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1c28bc.  v0:= v7.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L1c28c0.  v1:= 0I;
  #L1c28c2.  v0:= fcmpl(v0, v1);
  #L1c28c6.  if v0 <= 0 then goto L1c2962;
  #L1c28ca.  v0:= v7.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1c28ce.  if v0 != 0 then goto L1c2962;
  #L1c28d2.  v0:= v7.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1c28d6.  v1:= v7.`com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @type ^`int`;
  #L1c28da.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L1c28e0.  v0:= v7.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1c28e4.  v1:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L1c28e8.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L1c28ee.  v0:= v7.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1c28f2.  if v0 != 0 then goto L1c2908;
  #L1c28f6.  v0:= v7.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1c28fa.  call temp:= `getTintColorFilter`(v7) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTintColorFilter:()Landroid/graphics/ColorFilter;` @kind direct;
  #L1c2900.  v1:= temp @kind object;
  #L1c2902.  call temp:= `setColorFilter`(v0, v1) @signature `Landroid/graphics/Paint;.setColorFilter:(Landroid/graphics/ColorFilter;)Landroid/graphics/ColorFilter;` @kind virtual;
  #L1c2908.  v0:= v7.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c290c.  v1:= v9.`android.graphics.Rect.left` @type ^`int`;
  #L1c2910.  v1:= (`float`) v1 @kind i2f;
  #L1c2912.  v2:= v7.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L1c2916.  v3:= 2.0F;
  #L1c291a.  v4:= v2 / v3 @kind float;
  #L1c291e.  v1:= v1 + v4 @kind float;
  #L1c2920.  v4:= v9.`android.graphics.Rect.top` @type ^`int`;
  #L1c2924.  v4:= (`float`) v4 @kind i2f;
  #L1c2926.  v5:= v2 / v3 @kind float;
  #L1c292a.  v4:= v4 + v5 @kind float;
  #L1c292c.  v5:= v9.`android.graphics.Rect.right` @type ^`int`;
  #L1c2930.  v5:= (`float`) v5 @kind i2f;
  #L1c2932.  v6:= v2 / v3 @kind float;
  #L1c2936.  v5:= v5 - v6 @kind float;
  #L1c2938.  v9:= v9.`android.graphics.Rect.bottom` @type ^`int`;
  #L1c293c.  v9:= (`float`) v9 @kind i2f;
  #L1c293e.  v2:= v2 / v3 @kind float;
  #L1c2940.  v9:= v9 - v2 @kind float;
  #L1c2942.  call `set`(v0, v1, v4, v5, v9) @signature `Landroid/graphics/RectF;.set:(FFFF)V` @kind virtual;
  #L1c2948.  v9:= v7.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L1c294c.  v0:= v7.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L1c2950.  v0:= v0 / v3 @kind float;
  #L1c2952.  v9:= v9 - v0 @kind float;
  #L1c2954.  v0:= v7.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c2958.  v1:= v7.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1c295c.  call `drawRoundRect`(v8, v0, v9, v9, v1) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L1c2962.  return @kind void;
}
procedure `void` `drawChipSurface`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `android.graphics.Canvas` v4 @kind object, `android.graphics.Rect` v5 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipSurface:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1c2974.  v0:= v3.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1c2978.  if v0 != 0 then goto L1c29c0;
  #L1c297c.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1c2980.  v1:= v3.`com.google.android.material.chip.ChipDrawable.currentChipSurfaceColor` @type ^`int`;
  #L1c2984.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L1c298a.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1c298e.  v1:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L1c2992.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L1c2998.  v0:= v3.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c299c.  call `set`(v0, v5) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L1c29a2.  v5:= v3.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c29a6.  call temp:= `getChipCornerRadius`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L1c29ac.  v0:= temp;
  #L1c29ae.  call temp:= `getChipCornerRadius`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L1c29b4.  v1:= temp;
  #L1c29b6.  v2:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1c29ba.  call `drawRoundRect`(v4, v5, v0, v1, v2) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L1c29c0.  return @kind void;
}
procedure `void` `drawCloseIcon`(`com.google.android.material.chip.ChipDrawable` v5 @kind this, `android.graphics.Canvas` v6 @kind object, `android.graphics.Rect` v7 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCloseIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1c29d4.  call temp:= `showsCloseIcon`(v5) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1c29da.  v0:= temp;
  #L1c29dc.  if v0 == 0 then goto L1c2a66;
  #L1c29e0.  v0:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c29e4.  call `calculateCloseIconBounds`(v5, v7, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L1c29ea.  v7:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c29ee.  v0:= v7.`android.graphics.RectF.left` @type ^`float`;
  #L1c29f2.  v7:= v7.`android.graphics.RectF.top` @type ^`float`;
  #L1c29f6.  call `translate`(v6, v0, v7) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L1c29fc.  v1:= v5.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c2a00.  v2:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c2a04.  call temp:= `width`(v2) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L1c2a0a.  v2:= temp;
  #L1c2a0c.  v2:= (`int`) v2 @kind f2i;
  #L1c2a0e.  v3:= v5.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c2a12.  call temp:= `height`(v3) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L1c2a18.  v3:= temp;
  #L1c2a1a.  v3:= (`int`) v3 @kind f2i;
  #L1c2a1c.  v4:= 0I;
  #L1c2a1e.  call `setBounds`(v1, v4, v4, v2, v3) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L1c2a24.  v1:= `@@com.google.android.material.ripple.RippleUtils.USE_FRAMEWORK_RIPPLE` @type ^`boolean` @kind boolean;
  #L1c2a28.  if v1 == 0 then goto L1c2a52;
  #L1c2a2c.  v1:= v5.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c2a30.  v2:= v5.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c2a34.  call temp:= `getBounds`(v2) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L1c2a3a.  v2:= temp @kind object;
  #L1c2a3c.  call `setBounds`(v1, v2) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(Landroid/graphics/Rect;)V` @kind virtual;
  #L1c2a42.  v1:= v5.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c2a46.  call `jumpToCurrentState`(v1) @signature `Landroid/graphics/drawable/Drawable;.jumpToCurrentState:()V` @kind virtual;
  #L1c2a4c.  v1:= v5.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c2a50.  goto L1c2a56;
  #L1c2a52.  v1:= v5.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c2a56.  call `draw`(v1, v6) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L1c2a5c.  v0:= -v0 @kind float;
  #L1c2a5e.  v7:= -v7 @kind float;
  #L1c2a60.  call `translate`(v6, v0, v7) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L1c2a66.  return @kind void;
}
procedure `void` `drawCompatRipple`(`com.google.android.material.chip.ChipDrawable` v3 @kind this, `android.graphics.Canvas` v4 @kind object, `android.graphics.Rect` v5 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCompatRipple:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1c2a78.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1c2a7c.  v1:= v3.`com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @type ^`int`;
  #L1c2a80.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L1c2a86.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1c2a8a.  v1:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L1c2a8e.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L1c2a94.  v0:= v3.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c2a98.  call `set`(v0, v5) @signature `Landroid/graphics/RectF;.set:(Landroid/graphics/Rect;)V` @kind virtual;
  #L1c2a9e.  v0:= v3.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1c2aa2.  if v0 != 0 then goto L1c2ac6;
  #L1c2aa6.  v5:= v3.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c2aaa.  call temp:= `getChipCornerRadius`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L1c2ab0.  v0:= temp;
  #L1c2ab2.  call temp:= `getChipCornerRadius`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @kind virtual;
  #L1c2ab8.  v1:= temp;
  #L1c2aba.  v2:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1c2abe.  call `drawRoundRect`(v4, v5, v0, v1, v2) @signature `Landroid/graphics/Canvas;.drawRoundRect:(Landroid/graphics/RectF;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L1c2ac4.  goto L1c2af0;
  #L1c2ac6.  v0:= new `android.graphics.RectF`;
  #L1c2aca.  call `<init>`(v0, v5) @signature `Landroid/graphics/RectF;.<init>:(Landroid/graphics/Rect;)V` @kind direct;
  #L1c2ad0.  v5:= v3.`com.google.android.material.chip.ChipDrawable.shapePath` @type ^`android.graphics.Path` @kind object;
  #L1c2ad4.  call `calculatePathForSize`(v3, v0, v5) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.calculatePathForSize:(Landroid/graphics/RectF;Landroid/graphics/Path;)V` @kind virtual;
  #L1c2ada.  v5:= v3.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1c2ade.  v0:= v3.`com.google.android.material.chip.ChipDrawable.shapePath` @type ^`android.graphics.Path` @kind object;
  #L1c2ae2.  call temp:= `getBoundsAsRectF`(v3) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getBoundsAsRectF:()Landroid/graphics/RectF;` @kind virtual;
  #L1c2ae8.  v1:= temp @kind object;
  #L1c2aea.  call `drawShape`(v3, v4, v5, v0, v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.drawShape:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/Path;Landroid/graphics/RectF;)V` @kind super;
  #L1c2af0.  return @kind void;
}
procedure `void` `drawDebug`(`com.google.android.material.chip.ChipDrawable` v9 @kind this, `android.graphics.Canvas` v10 @kind object, `android.graphics.Rect` v11 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawDebug:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1c2b04.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L1c2b08.  if v0 == 0 then goto L1c2c0e;
  #L1c2b0c.  v1:= -16777216I;
  #L1c2b10.  v2:= 127I;
  #L1c2b14.  call temp:= `setAlphaComponent`(v1, v2) @signature `Landroidx/core/graphics/ColorUtils;.setAlphaComponent:(II)I` @kind static;
  #L1c2b1a.  v1:= temp;
  #L1c2b1c.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L1c2b22.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L1c2b26.  call `drawRect`(v10, v11, v0) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/Rect;Landroid/graphics/Paint;)V` @kind virtual;
  #L1c2b2c.  call temp:= `showsChipIcon`(v9) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L1c2b32.  v0:= temp;
  #L1c2b34.  if v0 != 0 then goto L1c2b44;
  #L1c2b38.  call temp:= `showsCheckedIcon`(v9) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L1c2b3e.  v0:= temp;
  #L1c2b40.  if v0 == 0 then goto L1c2b5c;
  #L1c2b44.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c2b48.  call `calculateChipIconBounds`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L1c2b4e.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c2b52.  v1:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L1c2b56.  call `drawRect`(v10, v0, v1) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L1c2b5c.  v0:= v9.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L1c2b60.  if v0 == 0 then goto L1c2b8c;
  #L1c2b64.  v0:= v11.`android.graphics.Rect.left` @type ^`int`;
  #L1c2b68.  v4:= (`float`) v0 @kind i2f;
  #L1c2b6a.  call temp:= `exactCenterY`(v11) @signature `Landroid/graphics/Rect;.exactCenterY:()F` @kind virtual;
  #L1c2b70.  v5:= temp;
  #L1c2b72.  v0:= v11.`android.graphics.Rect.right` @type ^`int`;
  #L1c2b76.  v6:= (`float`) v0 @kind i2f;
  #L1c2b78.  call temp:= `exactCenterY`(v11) @signature `Landroid/graphics/Rect;.exactCenterY:()F` @kind virtual;
  #L1c2b7e.  v7:= temp;
  #L1c2b80.  v8:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L1c2b84.  v3:= v10 @kind object;
  #L1c2b86.  call `drawLine`(v3, v4, v5, v6, v7, v8) @signature `Landroid/graphics/Canvas;.drawLine:(FFFFLandroid/graphics/Paint;)V` @kind virtual;
  #L1c2b8c.  call temp:= `showsCloseIcon`(v9) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1c2b92.  v0:= temp;
  #L1c2b94.  if v0 == 0 then goto L1c2bb0;
  #L1c2b98.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c2b9c.  call `calculateCloseIconBounds`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L1c2ba2.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c2ba6.  v1:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L1c2baa.  call `drawRect`(v10, v0, v1) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L1c2bb0.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L1c2bb4.  v1:= -65536I;
  #L1c2bb8.  call temp:= `setAlphaComponent`(v1, v2) @signature `Landroidx/core/graphics/ColorUtils;.setAlphaComponent:(II)I` @kind static;
  #L1c2bbe.  v1:= temp;
  #L1c2bc0.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L1c2bc6.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c2bca.  call `calculateChipTouchBounds`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L1c2bd0.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c2bd4.  v1:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L1c2bd8.  call `drawRect`(v10, v0, v1) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L1c2bde.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L1c2be2.  v1:= -16711936I;
  #L1c2be8.  call temp:= `setAlphaComponent`(v1, v2) @signature `Landroidx/core/graphics/ColorUtils;.setAlphaComponent:(II)I` @kind static;
  #L1c2bee.  v1:= temp;
  #L1c2bf0.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L1c2bf6.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c2bfa.  call `calculateCloseIconTouchBounds`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L1c2c00.  v11:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c2c04.  v0:= v9.`com.google.android.material.chip.ChipDrawable.debugPaint` @type ^`android.graphics.Paint` @kind object;
  #L1c2c08.  call `drawRect`(v10, v11, v0) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L1c2c0e.  return @kind void;
}
procedure `void` `drawText`(`com.google.android.material.chip.ChipDrawable` v9 @kind this, `android.graphics.Canvas` v10 @kind object, `android.graphics.Rect` v11 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawText:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1c2c20.  v0:= v9.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L1c2c24.  if v0 == 0 then goto L1c2d4a;
  #L1c2c28.  v0:= v9.`com.google.android.material.chip.ChipDrawable.pointF` @type ^`android.graphics.PointF` @kind object;
  #L1c2c2c.  call temp:= `f`(v9, v11, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.f:(Landroid/graphics/Rect;Landroid/graphics/PointF;)Landroid/graphics/Paint$Align;` @kind virtual;
  #L1c2c32.  v0:= temp @kind object;
  #L1c2c34.  v1:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c2c38.  call `calculateTextBounds`(v9, v11, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L1c2c3e.  v11:= v9.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1c2c42.  call temp:= `getTextAppearance`(v11) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L1c2c48.  v11:= temp @kind object;
  #L1c2c4a.  if v11 == 0 then goto L1c2c74;
  #L1c2c4e.  v11:= v9.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1c2c52.  call temp:= `getTextPaint`(v11) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L1c2c58.  v11:= temp @kind object;
  #L1c2c5a.  call temp:= `getState`(v9) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L1c2c60.  v1:= temp @kind object;
  #L1c2c62.  v11.`android.text.TextPaint.drawableState` @type ^`int`[] := v1 @kind object;
  #L1c2c66.  v11:= v9.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1c2c6a.  v1:= v9.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c2c6e.  call `updateTextPaintDrawState`(v11, v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.updateTextPaintDrawState:(Landroid/content/Context;)V` @kind virtual;
  #L1c2c74.  v11:= v9.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1c2c78.  call temp:= `getTextPaint`(v11) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L1c2c7e.  v11:= temp @kind object;
  #L1c2c80.  call `setTextAlign`(v11, v0) @signature `Landroid/text/TextPaint;.setTextAlign:(Landroid/graphics/Paint$Align;)V` @kind virtual;
  #L1c2c86.  v11:= v9.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1c2c8a.  call temp:= `getText`(v9) @signature `Lcom/google/android/material/chip/ChipDrawable;.getText:()Ljava/lang/CharSequence;` @kind virtual;
  #L1c2c90.  v0:= temp @kind object;
  #L1c2c92.  call temp:= `toString`(v0) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L1c2c98.  v0:= temp @kind object;
  #L1c2c9a.  call temp:= `getTextWidth`(v11, v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextWidth:(Ljava/lang/String;)F` @kind virtual;
  #L1c2ca0.  v11:= temp;
  #L1c2ca2.  call temp:= `round`(v11) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L1c2ca8.  v11:= temp;
  #L1c2caa.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c2cae.  call temp:= `width`(v0) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L1c2cb4.  v0:= temp;
  #L1c2cb6.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L1c2cbc.  v0:= temp;
  #L1c2cbe.  v1:= 0I;
  #L1c2cc0.  if v11 <= v0 then goto L1c2cc8;
  #L1c2cc4.  v11:= 1I;
  #L1c2cc6.  goto L1c2cca;
  #L1c2cc8.  v11:= 0I;
  #L1c2cca.  if v11 == 0 then goto L1c2ce0;
  #L1c2cce.  call temp:= `save`(v10) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L1c2cd4.  v1:= temp;
  #L1c2cd6.  v0:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c2cda.  call temp:= `clipRect`(v10, v0) @signature `Landroid/graphics/Canvas;.clipRect:(Landroid/graphics/RectF;)Z` @kind virtual;
  #L1c2ce0.  v0:= v9.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L1c2ce4.  if v11 == 0 then goto L1c2d14;
  #L1c2ce8.  v2:= v9.`com.google.android.material.chip.ChipDrawable.truncateAt` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L1c2cec.  if v2 == 0 then goto L1c2d14;
  #L1c2cf0.  v2:= v9.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1c2cf4.  call temp:= `getTextPaint`(v2) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L1c2cfa.  v2:= temp @kind object;
  #L1c2cfc.  v3:= v9.`com.google.android.material.chip.ChipDrawable.rectF` @type ^`android.graphics.RectF` @kind object;
  #L1c2d00.  call temp:= `width`(v3) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L1c2d06.  v3:= temp;
  #L1c2d08.  v4:= v9.`com.google.android.material.chip.ChipDrawable.truncateAt` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L1c2d0c.  call temp:= `ellipsize`(v0, v2, v3, v4) @signature `Landroid/text/TextUtils;.ellipsize:(Ljava/lang/CharSequence;Landroid/text/TextPaint;FLandroid/text/TextUtils$TruncateAt;)Ljava/lang/CharSequence;` @kind static;
  #L1c2d12.  v0:= temp @kind object;
  #L1c2d14.  v3:= v0 @kind object;
  #L1c2d16.  v4:= 0I;
  #L1c2d18.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L1c2d1e.  v5:= temp;
  #L1c2d20.  v0:= v9.`com.google.android.material.chip.ChipDrawable.pointF` @type ^`android.graphics.PointF` @kind object;
  #L1c2d24.  v6:= v0.`android.graphics.PointF.x` @type ^`float`;
  #L1c2d28.  v7:= v0.`android.graphics.PointF.y` @type ^`float`;
  #L1c2d2c.  v0:= v9.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1c2d30.  call temp:= `getTextPaint`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextPaint:()Landroid/text/TextPaint;` @kind virtual;
  #L1c2d36.  v8:= temp @kind object;
  #L1c2d38.  v2:= v10 @kind object;
  #L1c2d3a.  call `drawText`(v2, v3, v4, v5, v6, v7, v8) @signature `Landroid/graphics/Canvas;.drawText:(Ljava/lang/CharSequence;IIFFLandroid/graphics/Paint;)V` @kind virtual;
  #L1c2d40.  if v11 == 0 then goto L1c2d4a;
  #L1c2d44.  call `restoreToCount`(v10, v1) @signature `Landroid/graphics/Canvas;.restoreToCount:(I)V` @kind virtual;
  #L1c2d4a.  return @kind void;
}
procedure `android.graphics.ColorFilter` `getTintColorFilter`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTintColorFilter:()Landroid/graphics/ColorFilter;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1c15a4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.colorFilter` @type ^`android.graphics.ColorFilter` @kind object;
  #L1c15a8.  if v0 == 0 then goto L1c15ae;
  #L1c15ac.  goto L1c15b2;
  #L1c15ae.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` @kind object;
  #L1c15b2.  return v0 @kind object;
}
procedure `boolean` `hasState`(`int`[] v4 @kind object, `int` v5 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.hasState:([II)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c170c.  v0:= 0I;
  #L1c170e.  if v4 != 0 then goto L1c1714;
  #L1c1712.  return v0;
  #L1c1714.  v1:= length @variable v4;
  #L1c1716.  v2:= 0I;
  #L1c1718.  if v2 >= v1 then goto L1c172e;
  #L1c171c.  v3:= v4[v2];
  #L1c1720.  if v3 != v5 then goto L1c1728;
  #L1c1724.  v4:= 1I;
  #L1c1726.  return v4;
  #L1c1728.  v2:= v2 + 1;
  #L1c172c.  goto L1c1718;
  #L1c172e.  return v0;
}
procedure `boolean` `isStateful`(`android.content.res.ColorStateList` v0 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L1c18cc.  if v0 == 0 then goto L1c18e0;
  #L1c18d0.  call temp:= `isStateful`(v0) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L1c18d6.  v0:= temp;
  #L1c18d8.  if v0 == 0 then goto L1c18e0;
  #L1c18dc.  v0:= 1I;
  #L1c18de.  goto L1c18e2;
  #L1c18e0.  v0:= 0I;
  #L1c18e2.  return v0;
}
procedure `boolean` `isStateful`(`android.graphics.drawable.Drawable` v0 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L1c18f4.  if v0 == 0 then goto L1c1908;
  #L1c18f8.  call temp:= `isStateful`(v0) @signature `Landroid/graphics/drawable/Drawable;.isStateful:()Z` @kind virtual;
  #L1c18fe.  v0:= temp;
  #L1c1900.  if v0 == 0 then goto L1c1908;
  #L1c1904.  v0:= 1I;
  #L1c1906.  goto L1c190a;
  #L1c1908.  v0:= 0I;
  #L1c190a.  return v0;
}
procedure `boolean` `isStateful`(`com.google.android.material.resources.TextAppearance` v0 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Lcom/google/android/material/resources/TextAppearance;)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L1c191c.  if v0 == 0 then goto L1c1938;
  #L1c1920.  v0:= v0.`com.google.android.material.resources.TextAppearance.textColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c1924.  if v0 == 0 then goto L1c1938;
  #L1c1928.  call temp:= `isStateful`(v0) @signature `Landroid/content/res/ColorStateList;.isStateful:()Z` @kind virtual;
  #L1c192e.  v0:= temp;
  #L1c1930.  if v0 == 0 then goto L1c1938;
  #L1c1934.  v0:= 1I;
  #L1c1936.  goto L1c193a;
  #L1c1938.  v0:= 0I;
  #L1c193a.  return v0;
}
procedure `void` `loadFromAttributes`(`com.google.android.material.chip.ChipDrawable` v7 @kind this, `android.util.AttributeSet` v8 @kind object, `int` v9 , `int` v10 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.loadFromAttributes:(Landroid/util/AttributeSet;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1c2e38.  v0:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c2e3c.  v2:= `@@com.google.android.material.R$styleable.Chip` @type ^`int`[] @kind object;
  #L1c2e40.  v6:= 0I;
  #L1c2e42.  v5:= new `int`[v6];
  #L1c2e46.  v1:= v8 @kind object;
  #L1c2e48.  v3:= v9;
  #L1c2e4a.  v4:= v10;
  #L1c2e4c.  call temp:= `obtainStyledAttributes`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/internal/ThemeEnforcement;.obtainStyledAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;[III[I)Landroid/content/res/TypedArray;` @kind static;
  #L1c2e52.  v9:= temp @kind object;
  #L1c2e54.  v10:= `@@com.google.android.material.R$styleable.Chip_shapeAppearance` @type ^`int`;
  #L1c2e58.  call temp:= `hasValue`(v9, v10) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L1c2e5e.  v10:= temp;
  #L1c2e60.  v7.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` := v10 @kind boolean;
  #L1c2e64.  v10:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c2e68.  v0:= `@@com.google.android.material.R$styleable.Chip_chipSurfaceColor` @type ^`int`;
  #L1c2e6c.  call temp:= `getColorStateList`(v10, v9, v0) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1c2e72.  v10:= temp @kind object;
  #L1c2e74.  call `setChipSurfaceColor`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipSurfaceColor:(Landroid/content/res/ColorStateList;)V` @kind direct;
  #L1c2e7a.  v10:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c2e7e.  v0:= `@@com.google.android.material.R$styleable.Chip_chipBackgroundColor` @type ^`int`;
  #L1c2e82.  call temp:= `getColorStateList`(v10, v9, v0) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1c2e88.  v10:= temp @kind object;
  #L1c2e8a.  call `setChipBackgroundColor`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipBackgroundColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1c2e90.  v10:= `@@com.google.android.material.R$styleable.Chip_chipMinHeight` @type ^`int`;
  #L1c2e94.  v0:= 0I;
  #L1c2e96.  call temp:= `getDimension`(v9, v10, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1c2e9c.  v10:= temp;
  #L1c2e9e.  call `setChipMinHeight`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipMinHeight:(F)V` @kind virtual;
  #L1c2ea4.  v10:= `@@com.google.android.material.R$styleable.Chip_chipCornerRadius` @type ^`int`;
  #L1c2ea8.  call temp:= `hasValue`(v9, v10) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L1c2eae.  v1:= temp;
  #L1c2eb0.  if v1 == 0 then goto L1c2ec2;
  #L1c2eb4.  call temp:= `getDimension`(v9, v10, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1c2eba.  v10:= temp;
  #L1c2ebc.  call `setChipCornerRadius`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipCornerRadius:(F)V` @kind virtual;
  #L1c2ec2.  v10:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c2ec6.  v1:= `@@com.google.android.material.R$styleable.Chip_chipStrokeColor` @type ^`int`;
  #L1c2eca.  call temp:= `getColorStateList`(v10, v9, v1) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1c2ed0.  v10:= temp @kind object;
  #L1c2ed2.  call `setChipStrokeColor`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1c2ed8.  v10:= `@@com.google.android.material.R$styleable.Chip_chipStrokeWidth` @type ^`int`;
  #L1c2edc.  call temp:= `getDimension`(v9, v10, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1c2ee2.  v10:= temp;
  #L1c2ee4.  call `setChipStrokeWidth`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeWidth:(F)V` @kind virtual;
  #L1c2eea.  v10:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c2eee.  v1:= `@@com.google.android.material.R$styleable.Chip_rippleColor` @type ^`int`;
  #L1c2ef2.  call temp:= `getColorStateList`(v10, v9, v1) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1c2ef8.  v10:= temp @kind object;
  #L1c2efa.  call `setRippleColor`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setRippleColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1c2f00.  v10:= `@@com.google.android.material.R$styleable.Chip_android_text` @type ^`int`;
  #L1c2f04.  call temp:= `getText`(v9, v10) @signature `Landroid/content/res/TypedArray;.getText:(I)Ljava/lang/CharSequence;` @kind virtual;
  #L1c2f0a.  v10:= temp @kind object;
  #L1c2f0c.  call `setText`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setText:(Ljava/lang/CharSequence;)V` @kind virtual;
  #L1c2f12.  v10:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c2f16.  v1:= `@@com.google.android.material.R$styleable.Chip_android_textAppearance` @type ^`int`;
  #L1c2f1a.  call temp:= `getTextAppearance`(v10, v9, v1) @signature `Lcom/google/android/material/resources/MaterialResources;.getTextAppearance:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Lcom/google/android/material/resources/TextAppearance;` @kind static;
  #L1c2f20.  v10:= temp @kind object;
  #L1c2f22.  call `setTextAppearance`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;)V` @kind virtual;
  #L1c2f28.  v10:= `@@com.google.android.material.R$styleable.Chip_android_ellipsize` @type ^`int`;
  #L1c2f2c.  call temp:= `getInt`(v9, v10, v6) @signature `Landroid/content/res/TypedArray;.getInt:(II)I` @kind virtual;
  #L1c2f32.  v10:= temp;
  #L1c2f34.  v1:= 1I;
  #L1c2f36.  if v10 == v1 then goto L1c2f54;
  #L1c2f3a.  v1:= 2I;
  #L1c2f3c.  if v10 == v1 then goto L1c2f4e;
  #L1c2f40.  v1:= 3I;
  #L1c2f42.  if v10 == v1 then goto L1c2f48;
  #L1c2f46.  goto L1c2f5e;
  #L1c2f48.  v10:= `@@android.text.TextUtils$TruncateAt.END` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L1c2f4c.  goto L1c2f58;
  #L1c2f4e.  v10:= `@@android.text.TextUtils$TruncateAt.MIDDLE` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L1c2f52.  goto L1c2f58;
  #L1c2f54.  v10:= `@@android.text.TextUtils$TruncateAt.START` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L1c2f58.  call `setEllipsize`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setEllipsize:(Landroid/text/TextUtils$TruncateAt;)V` @kind virtual;
  #L1c2f5e.  v10:= `@@com.google.android.material.R$styleable.Chip_chipIconVisible` @type ^`int`;
  #L1c2f62.  call temp:= `getBoolean`(v9, v10, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L1c2f68.  v10:= temp;
  #L1c2f6a.  call `setChipIconVisible`(v7, v10) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @kind virtual;
  #L1c2f70.  v10:= "http://schemas.android.com/apk/res-auto" @kind object;
  #L1c2f74.  if v8 == 0 then goto L1c2faa;
  #L1c2f78.  v1:= "chipIconEnabled" @kind object;
  #L1c2f7c.  call temp:= `getAttributeValue`(v8, v10, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1c2f82.  v1:= temp @kind object;
  #L1c2f84.  if v1 == 0 then goto L1c2faa;
  #L1c2f88.  v1:= "chipIconVisible" @kind object;
  #L1c2f8c.  call temp:= `getAttributeValue`(v8, v10, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1c2f92.  v1:= temp @kind object;
  #L1c2f94.  if v1 != 0 then goto L1c2faa;
  #L1c2f98.  v1:= `@@com.google.android.material.R$styleable.Chip_chipIconEnabled` @type ^`int`;
  #L1c2f9c.  call temp:= `getBoolean`(v9, v1, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L1c2fa2.  v1:= temp;
  #L1c2fa4.  call `setChipIconVisible`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @kind virtual;
  #L1c2faa.  v1:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c2fae.  v2:= `@@com.google.android.material.R$styleable.Chip_chipIcon` @type ^`int`;
  #L1c2fb2.  call temp:= `getDrawable`(v1, v9, v2) @signature `Lcom/google/android/material/resources/MaterialResources;.getDrawable:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L1c2fb8.  v1:= temp @kind object;
  #L1c2fba.  call `setChipIcon`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L1c2fc0.  v1:= `@@com.google.android.material.R$styleable.Chip_chipIconTint` @type ^`int`;
  #L1c2fc4.  call temp:= `hasValue`(v9, v1) @signature `Landroid/content/res/TypedArray;.hasValue:(I)Z` @kind virtual;
  #L1c2fca.  v2:= temp;
  #L1c2fcc.  if v2 == 0 then goto L1c2fe2;
  #L1c2fd0.  v2:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c2fd4.  call temp:= `getColorStateList`(v2, v9, v1) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1c2fda.  v1:= temp @kind object;
  #L1c2fdc.  call `setChipIconTint`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1c2fe2.  v1:= `@@com.google.android.material.R$styleable.Chip_chipIconSize` @type ^`int`;
  #L1c2fe6.  call temp:= `getDimension`(v9, v1, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1c2fec.  v1:= temp;
  #L1c2fee.  call `setChipIconSize`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconSize:(F)V` @kind virtual;
  #L1c2ff4.  v1:= `@@com.google.android.material.R$styleable.Chip_closeIconVisible` @type ^`int`;
  #L1c2ff8.  call temp:= `getBoolean`(v9, v1, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L1c2ffe.  v1:= temp;
  #L1c3000.  call `setCloseIconVisible`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @kind virtual;
  #L1c3006.  if v8 == 0 then goto L1c303c;
  #L1c300a.  v1:= "closeIconEnabled" @kind object;
  #L1c300e.  call temp:= `getAttributeValue`(v8, v10, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1c3014.  v1:= temp @kind object;
  #L1c3016.  if v1 == 0 then goto L1c303c;
  #L1c301a.  v1:= "closeIconVisible" @kind object;
  #L1c301e.  call temp:= `getAttributeValue`(v8, v10, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1c3024.  v1:= temp @kind object;
  #L1c3026.  if v1 != 0 then goto L1c303c;
  #L1c302a.  v1:= `@@com.google.android.material.R$styleable.Chip_closeIconEnabled` @type ^`int`;
  #L1c302e.  call temp:= `getBoolean`(v9, v1, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L1c3034.  v1:= temp;
  #L1c3036.  call `setCloseIconVisible`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @kind virtual;
  #L1c303c.  v1:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c3040.  v2:= `@@com.google.android.material.R$styleable.Chip_closeIcon` @type ^`int`;
  #L1c3044.  call temp:= `getDrawable`(v1, v9, v2) @signature `Lcom/google/android/material/resources/MaterialResources;.getDrawable:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L1c304a.  v1:= temp @kind object;
  #L1c304c.  call `setCloseIcon`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L1c3052.  v1:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c3056.  v2:= `@@com.google.android.material.R$styleable.Chip_closeIconTint` @type ^`int`;
  #L1c305a.  call temp:= `getColorStateList`(v1, v9, v2) @signature `Lcom/google/android/material/resources/MaterialResources;.getColorStateList:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1c3060.  v1:= temp @kind object;
  #L1c3062.  call `setCloseIconTint`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1c3068.  v1:= `@@com.google.android.material.R$styleable.Chip_closeIconSize` @type ^`int`;
  #L1c306c.  call temp:= `getDimension`(v9, v1, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1c3072.  v1:= temp;
  #L1c3074.  call `setCloseIconSize`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconSize:(F)V` @kind virtual;
  #L1c307a.  v1:= `@@com.google.android.material.R$styleable.Chip_android_checkable` @type ^`int`;
  #L1c307e.  call temp:= `getBoolean`(v9, v1, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L1c3084.  v1:= temp;
  #L1c3086.  call `setCheckable`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckable:(Z)V` @kind virtual;
  #L1c308c.  v1:= `@@com.google.android.material.R$styleable.Chip_checkedIconVisible` @type ^`int`;
  #L1c3090.  call temp:= `getBoolean`(v9, v1, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L1c3096.  v1:= temp;
  #L1c3098.  call `setCheckedIconVisible`(v7, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L1c309e.  if v8 == 0 then goto L1c30d4;
  #L1c30a2.  v1:= "checkedIconEnabled" @kind object;
  #L1c30a6.  call temp:= `getAttributeValue`(v8, v10, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1c30ac.  v1:= temp @kind object;
  #L1c30ae.  if v1 == 0 then goto L1c30d4;
  #L1c30b2.  v1:= "checkedIconVisible" @kind object;
  #L1c30b6.  call temp:= `getAttributeValue`(v8, v10, v1) @signature `Landroid/util/AttributeSet;.getAttributeValue:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L1c30bc.  v8:= temp @kind object;
  #L1c30be.  if v8 != 0 then goto L1c30d4;
  #L1c30c2.  v8:= `@@com.google.android.material.R$styleable.Chip_checkedIconEnabled` @type ^`int`;
  #L1c30c6.  call temp:= `getBoolean`(v9, v8, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L1c30cc.  v8:= temp;
  #L1c30ce.  call `setCheckedIconVisible`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L1c30d4.  v8:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c30d8.  v10:= `@@com.google.android.material.R$styleable.Chip_checkedIcon` @type ^`int`;
  #L1c30dc.  call temp:= `getDrawable`(v8, v9, v10) @signature `Lcom/google/android/material/resources/MaterialResources;.getDrawable:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L1c30e2.  v8:= temp @kind object;
  #L1c30e4.  call `setCheckedIcon`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L1c30ea.  v8:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c30ee.  v10:= `@@com.google.android.material.R$styleable.Chip_showMotionSpec` @type ^`int`;
  #L1c30f2.  call temp:= `createFromAttribute`(v8, v9, v10) @signature `Lcom/google/android/material/animation/MotionSpec;.createFromAttribute:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Lcom/google/android/material/animation/MotionSpec;` @kind static;
  #L1c30f8.  v8:= temp @kind object;
  #L1c30fa.  call `setShowMotionSpec`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShowMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @kind virtual;
  #L1c3100.  v8:= v7.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c3104.  v10:= `@@com.google.android.material.R$styleable.Chip_hideMotionSpec` @type ^`int`;
  #L1c3108.  call temp:= `createFromAttribute`(v8, v9, v10) @signature `Lcom/google/android/material/animation/MotionSpec;.createFromAttribute:(Landroid/content/Context;Landroid/content/res/TypedArray;I)Lcom/google/android/material/animation/MotionSpec;` @kind static;
  #L1c310e.  v8:= temp @kind object;
  #L1c3110.  call `setHideMotionSpec`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setHideMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @kind virtual;
  #L1c3116.  v8:= `@@com.google.android.material.R$styleable.Chip_chipStartPadding` @type ^`int`;
  #L1c311a.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1c3120.  v8:= temp;
  #L1c3122.  call `setChipStartPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStartPadding:(F)V` @kind virtual;
  #L1c3128.  v8:= `@@com.google.android.material.R$styleable.Chip_iconStartPadding` @type ^`int`;
  #L1c312c.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1c3132.  v8:= temp;
  #L1c3134.  call `setIconStartPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconStartPadding:(F)V` @kind virtual;
  #L1c313a.  v8:= `@@com.google.android.material.R$styleable.Chip_iconEndPadding` @type ^`int`;
  #L1c313e.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1c3144.  v8:= temp;
  #L1c3146.  call `setIconEndPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconEndPadding:(F)V` @kind virtual;
  #L1c314c.  v8:= `@@com.google.android.material.R$styleable.Chip_textStartPadding` @type ^`int`;
  #L1c3150.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1c3156.  v8:= temp;
  #L1c3158.  call `setTextStartPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextStartPadding:(F)V` @kind virtual;
  #L1c315e.  v8:= `@@com.google.android.material.R$styleable.Chip_textEndPadding` @type ^`int`;
  #L1c3162.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1c3168.  v8:= temp;
  #L1c316a.  call `setTextEndPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextEndPadding:(F)V` @kind virtual;
  #L1c3170.  v8:= `@@com.google.android.material.R$styleable.Chip_closeIconStartPadding` @type ^`int`;
  #L1c3174.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1c317a.  v8:= temp;
  #L1c317c.  call `setCloseIconStartPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconStartPadding:(F)V` @kind virtual;
  #L1c3182.  v8:= `@@com.google.android.material.R$styleable.Chip_closeIconEndPadding` @type ^`int`;
  #L1c3186.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1c318c.  v8:= temp;
  #L1c318e.  call `setCloseIconEndPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEndPadding:(F)V` @kind virtual;
  #L1c3194.  v8:= `@@com.google.android.material.R$styleable.Chip_chipEndPadding` @type ^`int`;
  #L1c3198.  call temp:= `getDimension`(v9, v8, v0) @signature `Landroid/content/res/TypedArray;.getDimension:(IF)F` @kind virtual;
  #L1c319e.  v8:= temp;
  #L1c31a0.  call `setChipEndPadding`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipEndPadding:(F)V` @kind virtual;
  #L1c31a6.  v8:= `@@com.google.android.material.R$styleable.Chip_android_maxWidth` @type ^`int`;
  #L1c31aa.  v10:= 2147483647I;
  #L1c31b0.  call temp:= `getDimensionPixelSize`(v9, v8, v10) @signature `Landroid/content/res/TypedArray;.getDimensionPixelSize:(II)I` @kind virtual;
  #L1c31b6.  v8:= temp;
  #L1c31b8.  call `setMaxWidth`(v7, v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.setMaxWidth:(I)V` @kind virtual;
  #L1c31be.  call `recycle`(v9) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L1c31c4.  return @kind void;
}
procedure `boolean` `onStateChange`(`com.google.android.material.chip.ChipDrawable` v6 @kind this, `int`[] v7 @kind object, `int`[] v8 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I[I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1c1a64.  call temp:= `onStateChange`(v6, v7) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onStateChange:([I)Z` @kind super;
  #L1c1a6a.  v0:= temp;
  #L1c1a6c.  v1:= v6.`com.google.android.material.chip.ChipDrawable.chipSurfaceColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c1a70.  v2:= 0I;
  #L1c1a72.  if v1 == 0 then goto L1c1a84;
  #L1c1a76.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentChipSurfaceColor` @type ^`int`;
  #L1c1a7a.  call temp:= `getColorForState`(v1, v7, v3) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L1c1a80.  v1:= temp;
  #L1c1a82.  goto L1c1a86;
  #L1c1a84.  v1:= 0I;
  #L1c1a86.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentChipSurfaceColor` @type ^`int`;
  #L1c1a8a.  v4:= 1I;
  #L1c1a8c.  if v3 == v1 then goto L1c1a96;
  #L1c1a90.  v6.`com.google.android.material.chip.ChipDrawable.currentChipSurfaceColor` @type ^`int` := v1;
  #L1c1a94.  v0:= 1I;
  #L1c1a96.  v3:= v6.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c1a9a.  if v3 == 0 then goto L1c1aac;
  #L1c1a9e.  v5:= v6.`com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @type ^`int`;
  #L1c1aa2.  call temp:= `getColorForState`(v3, v7, v5) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L1c1aa8.  v3:= temp;
  #L1c1aaa.  goto L1c1aae;
  #L1c1aac.  v3:= 0I;
  #L1c1aae.  v5:= v6.`com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @type ^`int`;
  #L1c1ab2.  if v5 == v3 then goto L1c1abc;
  #L1c1ab6.  v6.`com.google.android.material.chip.ChipDrawable.currentChipBackgroundColor` @type ^`int` := v3;
  #L1c1aba.  v0:= 1I;
  #L1c1abc.  call temp:= `layer`(v1, v3) @signature `Lcom/google/android/material/color/MaterialColors;.layer:(II)I` @kind static;
  #L1c1ac2.  v1:= temp;
  #L1c1ac4.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentCompositeSurfaceBackgroundColor` @type ^`int`;
  #L1c1ac8.  if v3 == v1 then goto L1c1ad0;
  #L1c1acc.  v3:= 1I;
  #L1c1ace.  goto L1c1ad2;
  #L1c1ad0.  v3:= 0I;
  #L1c1ad2.  call temp:= `getFillColor`(v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getFillColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L1c1ad8.  v5:= temp @kind object;
  #L1c1ada.  if v5 != 0 then goto L1c1ae2;
  #L1c1ade.  v5:= 1I;
  #L1c1ae0.  goto L1c1ae4;
  #L1c1ae2.  v5:= 0I;
  #L1c1ae4.  v3:= v3 ^| v5 @kind int;
  #L1c1ae6.  if v3 == 0 then goto L1c1afe;
  #L1c1aea.  v6.`com.google.android.material.chip.ChipDrawable.currentCompositeSurfaceBackgroundColor` @type ^`int` := v1;
  #L1c1aee.  call temp:= `valueOf`(v1) @signature `Landroid/content/res/ColorStateList;.valueOf:(I)Landroid/content/res/ColorStateList;` @kind static;
  #L1c1af4.  v0:= temp @kind object;
  #L1c1af6.  call `setFillColor`(v6, v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setFillColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1c1afc.  v0:= 1I;
  #L1c1afe.  v1:= v6.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c1b02.  if v1 == 0 then goto L1c1b14;
  #L1c1b06.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @type ^`int`;
  #L1c1b0a.  call temp:= `getColorForState`(v1, v7, v3) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L1c1b10.  v1:= temp;
  #L1c1b12.  goto L1c1b16;
  #L1c1b14.  v1:= 0I;
  #L1c1b16.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @type ^`int`;
  #L1c1b1a.  if v3 == v1 then goto L1c1b24;
  #L1c1b1e.  v6.`com.google.android.material.chip.ChipDrawable.currentChipStrokeColor` @type ^`int` := v1;
  #L1c1b22.  v0:= 1I;
  #L1c1b24.  v1:= v6.`com.google.android.material.chip.ChipDrawable.compatRippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c1b28.  if v1 == 0 then goto L1c1b4a;
  #L1c1b2c.  call temp:= `shouldDrawRippleCompat`(v7) @signature `Lcom/google/android/material/ripple/RippleUtils;.shouldDrawRippleCompat:([I)Z` @kind static;
  #L1c1b32.  v1:= temp;
  #L1c1b34.  if v1 == 0 then goto L1c1b4a;
  #L1c1b38.  v1:= v6.`com.google.android.material.chip.ChipDrawable.compatRippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c1b3c.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @type ^`int`;
  #L1c1b40.  call temp:= `getColorForState`(v1, v7, v3) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L1c1b46.  v1:= temp;
  #L1c1b48.  goto L1c1b4c;
  #L1c1b4a.  v1:= 0I;
  #L1c1b4c.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @type ^`int`;
  #L1c1b50.  if v3 == v1 then goto L1c1b62;
  #L1c1b54.  v6.`com.google.android.material.chip.ChipDrawable.currentCompatRippleColor` @type ^`int` := v1;
  #L1c1b58.  v1:= v6.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L1c1b5c.  if v1 == 0 then goto L1c1b62;
  #L1c1b60.  v0:= 1I;
  #L1c1b62.  v1:= v6.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1c1b66.  call temp:= `getTextAppearance`(v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L1c1b6c.  v1:= temp @kind object;
  #L1c1b6e.  if v1 == 0 then goto L1c1ba4;
  #L1c1b72.  v1:= v6.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1c1b76.  call temp:= `getTextAppearance`(v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L1c1b7c.  v1:= temp @kind object;
  #L1c1b7e.  v1:= v1.`com.google.android.material.resources.TextAppearance.textColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c1b82.  if v1 == 0 then goto L1c1ba4;
  #L1c1b86.  v1:= v6.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1c1b8a.  call temp:= `getTextAppearance`(v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L1c1b90.  v1:= temp @kind object;
  #L1c1b92.  v1:= v1.`com.google.android.material.resources.TextAppearance.textColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c1b96.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentTextColor` @type ^`int`;
  #L1c1b9a.  call temp:= `getColorForState`(v1, v7, v3) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L1c1ba0.  v1:= temp;
  #L1c1ba2.  goto L1c1ba6;
  #L1c1ba4.  v1:= 0I;
  #L1c1ba6.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentTextColor` @type ^`int`;
  #L1c1baa.  if v3 == v1 then goto L1c1bb4;
  #L1c1bae.  v6.`com.google.android.material.chip.ChipDrawable.currentTextColor` @type ^`int` := v1;
  #L1c1bb2.  v0:= 1I;
  #L1c1bb4.  call temp:= `getState`(v6) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L1c1bba.  v1:= temp @kind object;
  #L1c1bbc.  v3:= 16842912I;
  #L1c1bc2.  call temp:= `hasState`(v1, v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.hasState:([II)Z` @kind static;
  #L1c1bc8.  v1:= temp;
  #L1c1bca.  if v1 == 0 then goto L1c1bda;
  #L1c1bce.  v1:= v6.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` @kind boolean;
  #L1c1bd2.  if v1 == 0 then goto L1c1bda;
  #L1c1bd6.  v1:= 1I;
  #L1c1bd8.  goto L1c1bdc;
  #L1c1bda.  v1:= 0I;
  #L1c1bdc.  v3:= v6.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` @kind boolean;
  #L1c1be0.  if v3 == v1 then goto L1c1c10;
  #L1c1be4.  v3:= v6.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c1be8.  if v3 == 0 then goto L1c1c10;
  #L1c1bec.  call temp:= `d`(v6) @signature `Lcom/google/android/material/chip/ChipDrawable;.d:()F` @kind virtual;
  #L1c1bf2.  v0:= temp;
  #L1c1bf4.  v6.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` := v1 @kind boolean;
  #L1c1bf8.  call temp:= `d`(v6) @signature `Lcom/google/android/material/chip/ChipDrawable;.d:()F` @kind virtual;
  #L1c1bfe.  v1:= temp;
  #L1c1c00.  v0:= fcmpl(v0, v1);
  #L1c1c04.  if v0 == 0 then goto L1c1c0e;
  #L1c1c08.  v0:= 1I;
  #L1c1c0a.  v1:= 1I;
  #L1c1c0c.  goto L1c1c12;
  #L1c1c0e.  v0:= 1I;
  #L1c1c10.  v1:= 0I;
  #L1c1c12.  v3:= v6.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c1c16.  if v3 == 0 then goto L1c1c28;
  #L1c1c1a.  v5:= v6.`com.google.android.material.chip.ChipDrawable.currentTint` @type ^`int`;
  #L1c1c1e.  call temp:= `getColorForState`(v3, v7, v5) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L1c1c24.  v3:= temp;
  #L1c1c26.  goto L1c1c2a;
  #L1c1c28.  v3:= 0I;
  #L1c1c2a.  v5:= v6.`com.google.android.material.chip.ChipDrawable.currentTint` @type ^`int`;
  #L1c1c2e.  if v5 == v3 then goto L1c1c4c;
  #L1c1c32.  v6.`com.google.android.material.chip.ChipDrawable.currentTint` @type ^`int` := v3;
  #L1c1c36.  v0:= v6.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c1c3a.  v3:= v6.`com.google.android.material.chip.ChipDrawable.tintMode` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L1c1c3e.  call temp:= `updateTintFilter`(v6, v0, v3) @signature `Lcom/google/android/material/drawable/DrawableUtils;.updateTintFilter:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;)Landroid/graphics/PorterDuffColorFilter;` @kind static;
  #L1c1c44.  v0:= temp @kind object;
  #L1c1c46.  v6.`com.google.android.material.chip.ChipDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` := v0 @kind object;
  #L1c1c4a.  goto L1c1c4e;
  #L1c1c4c.  v4:= v0;
  #L1c1c4e.  v0:= v6.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c1c52.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L1c1c58.  v0:= temp;
  #L1c1c5a.  if v0 == 0 then goto L1c1c6c;
  #L1c1c5e.  v0:= v6.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c1c62.  call temp:= `setState`(v0, v7) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L1c1c68.  v0:= temp;
  #L1c1c6a.  v4:= v4 ^| v0 @kind int;
  #L1c1c6c.  v0:= v6.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c1c70.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L1c1c76.  v0:= temp;
  #L1c1c78.  if v0 == 0 then goto L1c1c8a;
  #L1c1c7c.  v0:= v6.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c1c80.  call temp:= `setState`(v0, v7) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L1c1c86.  v0:= temp;
  #L1c1c88.  v4:= v4 ^| v0 @kind int;
  #L1c1c8a.  v0:= v6.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c1c8e.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L1c1c94.  v0:= temp;
  #L1c1c96.  if v0 == 0 then goto L1c1cc4;
  #L1c1c9a.  v0:= length @variable v7;
  #L1c1c9c.  v3:= length @variable v8;
  #L1c1c9e.  v0:= v0 + v3 @kind int;
  #L1c1ca0.  v0:= new `int`[v0];
  #L1c1ca4.  v3:= length @variable v7;
  #L1c1ca6.  call `arraycopy`(v7, v2, v0, v2, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1c1cac.  v7:= length @variable v7;
  #L1c1cae.  v3:= length @variable v8;
  #L1c1cb0.  call `arraycopy`(v8, v2, v0, v7, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L1c1cb6.  v7:= v6.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c1cba.  call temp:= `setState`(v7, v0) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L1c1cc0.  v7:= temp;
  #L1c1cc2.  v4:= v4 ^| v7 @kind int;
  #L1c1cc4.  v7:= `@@com.google.android.material.ripple.RippleUtils.USE_FRAMEWORK_RIPPLE` @type ^`boolean` @kind boolean;
  #L1c1cc8.  if v7 == 0 then goto L1c1cea;
  #L1c1ccc.  v7:= v6.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c1cd0.  call temp:= `isStateful`(v7) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L1c1cd6.  v7:= temp;
  #L1c1cd8.  if v7 == 0 then goto L1c1cea;
  #L1c1cdc.  v7:= v6.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c1ce0.  call temp:= `setState`(v7, v8) @signature `Landroid/graphics/drawable/Drawable;.setState:([I)Z` @kind virtual;
  #L1c1ce6.  v7:= temp;
  #L1c1ce8.  v4:= v4 ^| v7 @kind int;
  #L1c1cea.  if v4 == 0 then goto L1c1cf4;
  #L1c1cee.  call `invalidateSelf`(v6) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c1cf4.  if v1 == 0 then goto L1c1cfe;
  #L1c1cf8.  call `onSizeChange`(v6) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1c1cfe.  return v4;
}
procedure `void` `setChipSurfaceColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipSurfaceColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1c3910.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipSurfaceColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c3914.  if v0 == v2 then goto L1c392a;
  #L1c3918.  v1.`com.google.android.material.chip.ChipDrawable.chipSurfaceColor` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L1c391c.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L1c3922.  v2:= temp @kind object;
  #L1c3924.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L1c392a.  return @kind void;
}
procedure `boolean` `showsCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1c1de4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` @kind boolean;
  #L1c1de8.  if v0 == 0 then goto L1c1e00;
  #L1c1dec.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c1df0.  if v0 == 0 then goto L1c1e00;
  #L1c1df4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` @kind boolean;
  #L1c1df8.  if v0 == 0 then goto L1c1e00;
  #L1c1dfc.  v0:= 1I;
  #L1c1dfe.  goto L1c1e02;
  #L1c1e00.  v0:= 0I;
  #L1c1e02.  return v0;
}
procedure `boolean` `showsChipIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1c1e14.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconVisible` @type ^`boolean` @kind boolean;
  #L1c1e18.  if v0 == 0 then goto L1c1e28;
  #L1c1e1c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c1e20.  if v0 == 0 then goto L1c1e28;
  #L1c1e24.  v0:= 1I;
  #L1c1e26.  goto L1c1e2a;
  #L1c1e28.  v0:= 0I;
  #L1c1e2a.  return v0;
}
procedure `boolean` `showsCloseIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1c1e3c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconVisible` @type ^`boolean` @kind boolean;
  #L1c1e40.  if v0 == 0 then goto L1c1e50;
  #L1c1e44.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c1e48.  if v0 == 0 then goto L1c1e50;
  #L1c1e4c.  v0:= 1I;
  #L1c1e4e.  goto L1c1e52;
  #L1c1e50.  v0:= 0I;
  #L1c1e52.  return v0;
}
procedure `void` `unapplyChildDrawable`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1c40c8.  if v2 == 0 then goto L1c40d4;
  #L1c40cc.  v0:= 0I;
  #L1c40ce.  call `setCallback`(v2, v0) @signature `Landroid/graphics/drawable/Drawable;.setCallback:(Landroid/graphics/drawable/Drawable$Callback;)V` @kind virtual;
  #L1c40d4.  return @kind void;
}
procedure `void` `updateCompatRippleColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateCompatRippleColor:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1c410c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L1c4110.  if v0 == 0 then goto L1c4122;
  #L1c4114.  v0:= v1.`com.google.android.material.chip.ChipDrawable.rippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c4118.  call temp:= `sanitizeRippleDrawableColor`(v0) @signature `Lcom/google/android/material/ripple/RippleUtils;.sanitizeRippleDrawableColor:(Landroid/content/res/ColorStateList;)Landroid/content/res/ColorStateList;` @kind static;
  #L1c411e.  v0:= temp @kind object;
  #L1c4120.  goto L1c4124;
  #L1c4122.  v0:= 0I;
  #L1c4124.  v1.`com.google.android.material.chip.ChipDrawable.compatRippleColor` @type ^`android.content.res.ColorStateList` := v0 @kind object;
  #L1c4128.  return @kind void;
}
procedure `void` `updateFrameworkCloseIconRipple`(`com.google.android.material.chip.ChipDrawable` v4 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateFrameworkCloseIconRipple:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c413c.  v0:= new `android.graphics.drawable.RippleDrawable`;
  #L1c4140.  call temp:= `getRippleColor`(v4) @signature `Lcom/google/android/material/chip/ChipDrawable;.getRippleColor:()Landroid/content/res/ColorStateList;` @kind virtual;
  #L1c4146.  v1:= temp @kind object;
  #L1c4148.  call temp:= `sanitizeRippleDrawableColor`(v1) @signature `Lcom/google/android/material/ripple/RippleUtils;.sanitizeRippleDrawableColor:(Landroid/content/res/ColorStateList;)Landroid/content/res/ColorStateList;` @kind static;
  #L1c414e.  v1:= temp @kind object;
  #L1c4150.  v2:= v4.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c4154.  v3:= `@@com.google.android.material.chip.ChipDrawable.closeIconRippleMask` @type ^`android.graphics.drawable.ShapeDrawable` @kind object;
  #L1c4158.  call `<init>`(v0, v1, v2, v3) @signature `Landroid/graphics/drawable/RippleDrawable;.<init>:(Landroid/content/res/ColorStateList;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1c415e.  v4.`com.google.android.material.chip.ChipDrawable.closeIconRipple` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L1c4162.  return @kind void;
}
procedure `float` `d`(`com.google.android.material.chip.ChipDrawable` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.d:()F` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1c1f14.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L1c1f1a.  v0:= temp;
  #L1c1f1c.  if v0 != 0 then goto L1c1f32;
  #L1c1f20.  call temp:= `showsCheckedIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L1c1f26.  v0:= temp;
  #L1c1f28.  if v0 == 0 then goto L1c1f2e;
  #L1c1f2c.  goto L1c1f32;
  #L1c1f2e.  v0:= 0I;
  #L1c1f30.  return v0;
  #L1c1f32.  v0:= v2.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float`;
  #L1c1f36.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L1c1f3a.  v0:= v0 + v1 @kind float;
  #L1c1f3c.  v1:= v2.`com.google.android.material.chip.ChipDrawable.iconEndPadding` @type ^`float`;
  #L1c1f40.  v0:= v0 + v1 @kind float;
  #L1c1f42.  return v0;
}
procedure `void` `draw`(`com.google.android.material.chip.ChipDrawable` v9 @kind this, `android.graphics.Canvas` v10 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.draw:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L1c269c.  call temp:= `getBounds`(v9) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L1c26a2.  v0:= temp @kind object;
  #L1c26a4.  call temp:= `isEmpty`(v0) @signature `Landroid/graphics/Rect;.isEmpty:()Z` @kind virtual;
  #L1c26aa.  v1:= temp;
  #L1c26ac.  if v1 != 0 then goto L1c2748;
  #L1c26b0.  call temp:= `getAlpha`(v9) @signature `Lcom/google/android/material/chip/ChipDrawable;.getAlpha:()I` @kind virtual;
  #L1c26b6.  v1:= temp;
  #L1c26b8.  if v1 != 0 then goto L1c26be;
  #L1c26bc.  goto L1c2748;
  #L1c26be.  v1:= 0I;
  #L1c26c0.  v7:= v9.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L1c26c4.  v8:= 255I;
  #L1c26c8.  if v7 >= v8 then goto L1c26ee;
  #L1c26cc.  v1:= v0.`android.graphics.Rect.left` @type ^`int`;
  #L1c26d0.  v3:= (`float`) v1 @kind i2f;
  #L1c26d2.  v1:= v0.`android.graphics.Rect.top` @type ^`int`;
  #L1c26d6.  v4:= (`float`) v1 @kind i2f;
  #L1c26d8.  v1:= v0.`android.graphics.Rect.right` @type ^`int`;
  #L1c26dc.  v5:= (`float`) v1 @kind i2f;
  #L1c26de.  v1:= v0.`android.graphics.Rect.bottom` @type ^`int`;
  #L1c26e2.  v6:= (`float`) v1 @kind i2f;
  #L1c26e4.  v2:= v10 @kind object;
  #L1c26e6.  call temp:= `saveLayerAlpha`(v2, v3, v4, v5, v6, v7) @signature `Lcom/google/android/material/canvas/CanvasCompat;.saveLayerAlpha:(Landroid/graphics/Canvas;FFFFI)I` @kind static;
  #L1c26ec.  v1:= temp;
  #L1c26ee.  call `drawChipSurface`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipSurface:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L1c26f4.  call `drawChipBackground`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipBackground:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L1c26fa.  v2:= v9.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1c26fe.  if v2 == 0 then goto L1c2708;
  #L1c2702.  call `draw`(v9, v10) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.draw:(Landroid/graphics/Canvas;)V` @kind super;
  #L1c2708.  call `drawChipStroke`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipStroke:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L1c270e.  call `drawCompatRipple`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCompatRipple:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L1c2714.  call `drawChipIcon`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawChipIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L1c271a.  call `drawCheckedIcon`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCheckedIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L1c2720.  v2:= v9.`com.google.android.material.chip.ChipDrawable.shouldDrawText` @type ^`boolean` @kind boolean;
  #L1c2724.  if v2 == 0 then goto L1c272e;
  #L1c2728.  call `drawText`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawText:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L1c272e.  call `drawCloseIcon`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawCloseIcon:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L1c2734.  call `drawDebug`(v9, v10, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.drawDebug:(Landroid/graphics/Canvas;Landroid/graphics/Rect;)V` @kind direct;
  #L1c273a.  v0:= v9.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L1c273e.  if v0 >= v8 then goto L1c2748;
  #L1c2742.  call `restoreToCount`(v10, v1) @signature `Landroid/graphics/Canvas;.restoreToCount:(I)V` @kind virtual;
  #L1c2748.  return @kind void;
}
procedure `float` `e`(`com.google.android.material.chip.ChipDrawable` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.e:()F` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1c1f54.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1c1f5a.  v0:= temp;
  #L1c1f5c.  if v0 == 0 then goto L1c1f72;
  #L1c1f60.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L1c1f64.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L1c1f68.  v0:= v0 + v1 @kind float;
  #L1c1f6a.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L1c1f6e.  v0:= v0 + v1 @kind float;
  #L1c1f70.  return v0;
  #L1c1f72.  v0:= 0I;
  #L1c1f74.  return v0;
}
procedure `android.graphics.Paint$Align` `f`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.Rect` v3 @kind object, `android.graphics.PointF` v4 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.f:(Landroid/graphics/Rect;Landroid/graphics/PointF;)Landroid/graphics/Paint$Align;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L1c15c4.  v0:= 0I;
  #L1c15c6.  call `set`(v4, v0, v0) @signature `Landroid/graphics/PointF;.set:(FF)V` @kind virtual;
  #L1c15cc.  v0:= `@@android.graphics.Paint$Align.LEFT` @type ^`android.graphics.Paint$Align` @kind object;
  #L1c15d0.  v1:= v2.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L1c15d4.  if v1 == 0 then goto L1c1632;
  #L1c15d8.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L1c15dc.  call temp:= `d`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.d:()F` @kind virtual;
  #L1c15e2.  v1:= temp;
  #L1c15e4.  v0:= v0 + v1 @kind float;
  #L1c15e6.  v1:= v2.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L1c15ea.  v0:= v0 + v1 @kind float;
  #L1c15ec.  call temp:= `getLayoutDirection`(v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.getLayoutDirection:(Landroid/graphics/drawable/Drawable;)I` @kind static;
  #L1c15f2.  v1:= temp;
  #L1c15f4.  if v1 != 0 then goto L1c160a;
  #L1c15f8.  v1:= v3.`android.graphics.Rect.left` @type ^`int`;
  #L1c15fc.  v1:= (`float`) v1 @kind i2f;
  #L1c15fe.  v1:= v1 + v0 @kind float;
  #L1c1600.  v4.`android.graphics.PointF.x` @type ^`float` := v1;
  #L1c1604.  v0:= `@@android.graphics.Paint$Align.LEFT` @type ^`android.graphics.Paint$Align` @kind object;
  #L1c1608.  goto L1c161a;
  #L1c160a.  v1:= v3.`android.graphics.Rect.right` @type ^`int`;
  #L1c160e.  v1:= (`float`) v1 @kind i2f;
  #L1c1610.  v1:= v1 - v0 @kind float;
  #L1c1612.  v4.`android.graphics.PointF.x` @type ^`float` := v1;
  #L1c1616.  v0:= `@@android.graphics.Paint$Align.RIGHT` @type ^`android.graphics.Paint$Align` @kind object;
  #L1c161a.  call temp:= `centerY`(v3) @signature `Landroid/graphics/Rect;.centerY:()I` @kind virtual;
  #L1c1620.  v3:= temp;
  #L1c1622.  v3:= (`float`) v3 @kind i2f;
  #L1c1624.  call temp:= `calculateTextCenterFromBaseline`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateTextCenterFromBaseline:()F` @kind direct;
  #L1c162a.  v1:= temp;
  #L1c162c.  v3:= v3 - v1 @kind float;
  #L1c162e.  v4.`android.graphics.PointF.y` @type ^`float` := v3;
  #L1c1632.  return v0 @kind object;
}
procedure `void` `g`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.g:(Z)V` @AccessFlag  {
    temp;

  #L1c3e6c.  v0.`com.google.android.material.chip.ChipDrawable.shouldDrawText` @type ^`boolean` := v1 @kind boolean;
  #L1c3e70.  return @kind void;
}
procedure `int` `getAlpha`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getAlpha:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c210c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L1c2110.  return v0;
}
procedure `android.graphics.drawable.Drawable` `getCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCheckedIcon:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1644.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c1648.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getChipBackgroundColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipBackgroundColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1514.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c1518.  return v0 @kind object;
}
procedure `float` `getChipCornerRadius`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipCornerRadius:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1fc4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1c1fc8.  if v0 == 0 then goto L1c1fd6;
  #L1c1fcc.  call temp:= `getTopLeftCornerResolvedSize`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getTopLeftCornerResolvedSize:()F` @kind virtual;
  #L1c1fd2.  v0:= temp;
  #L1c1fd4.  goto L1c1fda;
  #L1c1fd6.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L1c1fda.  return v0;
}
procedure `float` `getChipEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1fec.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L1c1ff0.  return v0;
}
procedure `android.graphics.drawable.Drawable` `getChipIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIcon:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c165c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c1660.  if v0 == 0 then goto L1c166e;
  #L1c1664.  call temp:= `unwrap`(v0) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.unwrap:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L1c166a.  v0:= temp @kind object;
  #L1c166c.  goto L1c1670;
  #L1c166e.  v0:= 0I;
  #L1c1670.  return v0 @kind object;
}
procedure `float` `getChipIconSize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIconSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c2004.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L1c2008.  return v0;
}
procedure `android.content.res.ColorStateList` `getChipIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIconTint:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c152c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c1530.  return v0 @kind object;
}
procedure `float` `getChipMinHeight`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipMinHeight:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c201c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipMinHeight` @type ^`float`;
  #L1c2020.  return v0;
}
procedure `float` `getChipStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c2034.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L1c2038.  return v0;
}
procedure `android.content.res.ColorStateList` `getChipStrokeColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipStrokeColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1544.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c1548.  return v0 @kind object;
}
procedure `float` `getChipStrokeWidth`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipStrokeWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c204c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L1c2050.  return v0;
}
procedure `void` `getChipTouchBounds`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.RectF` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipTouchBounds:(Landroid/graphics/RectF;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c2d5c.  call temp:= `getBounds`(v1) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L1c2d62.  v0:= temp @kind object;
  #L1c2d64.  call `calculateChipTouchBounds`(v1, v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateChipTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L1c2d6a.  return @kind void;
}
procedure `android.graphics.drawable.Drawable` `getCloseIcon`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIcon:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1684.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c1688.  if v0 == 0 then goto L1c1696;
  #L1c168c.  call temp:= `unwrap`(v0) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.unwrap:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L1c1692.  v0:= temp @kind object;
  #L1c1694.  goto L1c1698;
  #L1c1696.  v0:= 0I;
  #L1c1698.  return v0 @kind object;
}
procedure `java.lang.CharSequence` `getCloseIconContentDescription`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconContentDescription:()Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c21f0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconContentDescription` @type ^`java.lang.CharSequence` @kind object;
  #L1c21f4.  return v0 @kind object;
}
procedure `float` `getCloseIconEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c2064.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L1c2068.  return v0;
}
procedure `float` `getCloseIconSize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c207c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L1c2080.  return v0;
}
procedure `float` `getCloseIconStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c2094.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L1c2098.  return v0;
}
procedure `int`[] `getCloseIconState`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconState:()[I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c21d8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconStateSet` @type ^`int`[] @kind object;
  #L1c21dc.  return v0 @kind object;
}
procedure `android.content.res.ColorStateList` `getCloseIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconTint:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c155c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c1560.  return v0 @kind object;
}
procedure `void` `getCloseIconTouchBounds`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.RectF` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconTouchBounds:(Landroid/graphics/RectF;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c2d7c.  call temp:= `getBounds`(v1) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L1c2d82.  v0:= temp @kind object;
  #L1c2d84.  call `calculateCloseIconTouchBounds`(v1, v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.calculateCloseIconTouchBounds:(Landroid/graphics/Rect;Landroid/graphics/RectF;)V` @kind direct;
  #L1c2d8a.  return @kind void;
}
procedure `android.graphics.ColorFilter` `getColorFilter`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getColorFilter:()Landroid/graphics/ColorFilter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c158c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.colorFilter` @type ^`android.graphics.ColorFilter` @kind object;
  #L1c1590.  return v0 @kind object;
}
procedure `android.text.TextUtils$TruncateAt` `getEllipsize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getEllipsize:()Landroid/text/TextUtils$TruncateAt;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c16ac.  v0:= v1.`com.google.android.material.chip.ChipDrawable.truncateAt` @type ^`android.text.TextUtils$TruncateAt` @kind object;
  #L1c16b0.  return v0 @kind object;
}
procedure `com.google.android.material.animation.MotionSpec` `getHideMotionSpec`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getHideMotionSpec:()Lcom/google/android/material/animation/MotionSpec;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1e64.  v0:= v1.`com.google.android.material.chip.ChipDrawable.hideMotionSpec` @type ^`com.google.android.material.animation.MotionSpec` @kind object;
  #L1c1e68.  return v0 @kind object;
}
procedure `float` `getIconEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIconEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c20ac.  v0:= v1.`com.google.android.material.chip.ChipDrawable.iconEndPadding` @type ^`float`;
  #L1c20b0.  return v0;
}
procedure `float` `getIconStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIconStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c20c4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float`;
  #L1c20c8.  return v0;
}
procedure `int` `getIntrinsicHeight`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIntrinsicHeight:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c2124.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipMinHeight` @type ^`float`;
  #L1c2128.  v0:= (`int`) v0 @kind f2i;
  #L1c212a.  return v0;
}
procedure `int` `getIntrinsicWidth`(`com.google.android.material.chip.ChipDrawable` v3 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIntrinsicWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c213c.  v0:= v3.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L1c2140.  call temp:= `d`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.d:()F` @kind virtual;
  #L1c2146.  v1:= temp;
  #L1c2148.  v0:= v0 + v1 @kind float;
  #L1c214a.  v1:= v3.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L1c214e.  v0:= v0 + v1 @kind float;
  #L1c2150.  v1:= v3.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1c2154.  call temp:= `getText`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.getText:()Ljava/lang/CharSequence;` @kind virtual;
  #L1c215a.  v2:= temp @kind object;
  #L1c215c.  call temp:= `toString`(v2) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L1c2162.  v2:= temp @kind object;
  #L1c2164.  call temp:= `getTextWidth`(v1, v2) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextWidth:(Ljava/lang/String;)F` @kind virtual;
  #L1c216a.  v1:= temp;
  #L1c216c.  v0:= v0 + v1 @kind float;
  #L1c216e.  v1:= v3.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L1c2172.  v0:= v0 + v1 @kind float;
  #L1c2174.  call temp:= `e`(v3) @signature `Lcom/google/android/material/chip/ChipDrawable;.e:()F` @kind virtual;
  #L1c217a.  v1:= temp;
  #L1c217c.  v0:= v0 + v1 @kind float;
  #L1c217e.  v1:= v3.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L1c2182.  v0:= v0 + v1 @kind float;
  #L1c2184.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L1c218a.  v0:= temp;
  #L1c218c.  v1:= v3.`com.google.android.material.chip.ChipDrawable.maxWidth` @type ^`int`;
  #L1c2190.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L1c2196.  v0:= temp;
  #L1c2198.  return v0;
}
procedure `int` `getMaxWidth`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getMaxWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c21ac.  v0:= v1.`com.google.android.material.chip.ChipDrawable.maxWidth` @type ^`int`;
  #L1c21b0.  return v0;
}
procedure `int` `getOpacity`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getOpacity:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c21c4.  v0:= -3I;
  #L1c21c6.  return v0;
}
procedure `void` `getOutline`(`com.google.android.material.chip.ChipDrawable` v8 @kind this, `android.graphics.Outline` v9 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.getOutline:(Landroid/graphics/Outline;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1c2d9c.  v0:= v8.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1c2da0.  if v0 == 0 then goto L1c2dac;
  #L1c2da4.  call `getOutline`(v8, v9) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getOutline:(Landroid/graphics/Outline;)V` @kind super;
  #L1c2daa.  return @kind void;
  #L1c2dac.  call temp:= `getBounds`(v8) @signature `Landroid/graphics/drawable/Drawable;.getBounds:()Landroid/graphics/Rect;` @kind virtual;
  #L1c2db2.  v0:= temp @kind object;
  #L1c2db4.  call temp:= `isEmpty`(v0) @signature `Landroid/graphics/Rect;.isEmpty:()Z` @kind virtual;
  #L1c2dba.  v1:= temp;
  #L1c2dbc.  if v1 != 0 then goto L1c2dcc;
  #L1c2dc0.  v1:= v8.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L1c2dc4.  call `setRoundRect`(v9, v0, v1) @signature `Landroid/graphics/Outline;.setRoundRect:(Landroid/graphics/Rect;F)V` @kind virtual;
  #L1c2dca.  goto L1c2dec;
  #L1c2dcc.  v3:= 0I;
  #L1c2dce.  v4:= 0I;
  #L1c2dd0.  call temp:= `getIntrinsicWidth`(v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIntrinsicWidth:()I` @kind virtual;
  #L1c2dd6.  v5:= temp;
  #L1c2dd8.  call temp:= `getIntrinsicHeight`(v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.getIntrinsicHeight:()I` @kind virtual;
  #L1c2dde.  v6:= temp;
  #L1c2de0.  v7:= v8.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L1c2de4.  v2:= v9 @kind object;
  #L1c2de6.  call `setRoundRect`(v2, v3, v4, v5, v6, v7) @signature `Landroid/graphics/Outline;.setRoundRect:(IIIIF)V` @kind virtual;
  #L1c2dec.  call temp:= `getAlpha`(v8) @signature `Lcom/google/android/material/chip/ChipDrawable;.getAlpha:()I` @kind virtual;
  #L1c2df2.  v0:= temp;
  #L1c2df4.  v0:= (`float`) v0 @kind i2f;
  #L1c2df6.  v1:= 255.0F;
  #L1c2dfa.  v0:= v0 / v1 @kind float;
  #L1c2dfc.  call `setAlpha`(v9, v0) @signature `Landroid/graphics/Outline;.setAlpha:(F)V` @kind virtual;
  #L1c2e02.  return @kind void;
}
procedure `android.content.res.ColorStateList` `getRippleColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getRippleColor:()Landroid/content/res/ColorStateList;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1574.  v0:= v1.`com.google.android.material.chip.ChipDrawable.rippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c1578.  return v0 @kind object;
}
procedure `com.google.android.material.animation.MotionSpec` `getShowMotionSpec`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getShowMotionSpec:()Lcom/google/android/material/animation/MotionSpec;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1e7c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.showMotionSpec` @type ^`com.google.android.material.animation.MotionSpec` @kind object;
  #L1c1e80.  return v0 @kind object;
}
procedure `java.lang.CharSequence` `getText`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getText:()Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c2208.  v0:= v1.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L1c220c.  return v0 @kind object;
}
procedure `com.google.android.material.resources.TextAppearance` `getTextAppearance`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1ef4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1c1ef8.  call temp:= `getTextAppearance`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L1c1efe.  v0:= temp @kind object;
  #L1c1f00.  return v0 @kind object;
}
procedure `float` `getTextEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextEndPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c20dc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L1c20e0.  return v0;
}
procedure `float` `getTextStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getTextStartPadding:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c20f4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L1c20f8.  return v0;
}
procedure `boolean` `getUseCompatRipple`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.getUseCompatRipple:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c16f4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L1c16f8.  return v0;
}
procedure `boolean` `h`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.h:()Z` @AccessFlag  {
    temp;
    v0;

  #L1c1dcc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.shouldDrawText` @type ^`boolean` @kind boolean;
  #L1c1dd0.  return v0;
}
procedure `void` `invalidateDrawable`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.invalidateDrawable:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;

  #L1c2e14.  call temp:= `getCallback`(v0) @signature `Landroid/graphics/drawable/Drawable;.getCallback:()Landroid/graphics/drawable/Drawable$Callback;` @kind virtual;
  #L1c2e1a.  v1:= temp @kind object;
  #L1c2e1c.  if v1 == 0 then goto L1c2e26;
  #L1c2e20.  call `invalidateDrawable`(v1, v0) @signature `Landroid/graphics/drawable/Drawable$Callback;.invalidateDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind interface;
  #L1c2e26.  return @kind void;
}
procedure `boolean` `isCheckable`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1740.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` @kind boolean;
  #L1c1744.  return v0;
}
procedure `boolean` `isCheckedIconEnabled`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckedIconEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1758.  call temp:= `isCheckedIconVisible`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckedIconVisible:()Z` @kind virtual;
  #L1c175e.  v0:= temp;
  #L1c1760.  return v0;
}
procedure `boolean` `isCheckedIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCheckedIconVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1774.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` @kind boolean;
  #L1c1778.  return v0;
}
procedure `boolean` `isChipIconEnabled`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isChipIconEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c178c.  call temp:= `isChipIconVisible`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.isChipIconVisible:()Z` @kind virtual;
  #L1c1792.  v0:= temp;
  #L1c1794.  return v0;
}
procedure `boolean` `isChipIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isChipIconVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c17a8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconVisible` @type ^`boolean` @kind boolean;
  #L1c17ac.  return v0;
}
procedure `boolean` `isCloseIconEnabled`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c17c0.  call temp:= `isCloseIconVisible`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconVisible:()Z` @kind virtual;
  #L1c17c6.  v0:= temp;
  #L1c17c8.  return v0;
}
procedure `boolean` `isCloseIconStateful`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconStateful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c17dc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c17e0.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L1c17e6.  v0:= temp;
  #L1c17e8.  return v0;
}
procedure `boolean` `isCloseIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isCloseIconVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c17fc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconVisible` @type ^`boolean` @kind boolean;
  #L1c1800.  return v0;
}
procedure `boolean` `isStateful`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1814.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipSurfaceColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c1818.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L1c181e.  v0:= temp;
  #L1c1820.  if v0 != 0 then goto L1c18b6;
  #L1c1824.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c1828.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L1c182e.  v0:= temp;
  #L1c1830.  if v0 != 0 then goto L1c18b6;
  #L1c1834.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c1838.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L1c183e.  v0:= temp;
  #L1c1840.  if v0 != 0 then goto L1c18b6;
  #L1c1844.  v0:= v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L1c1848.  if v0 == 0 then goto L1c185c;
  #L1c184c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.compatRippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c1850.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L1c1856.  v0:= temp;
  #L1c1858.  if v0 != 0 then goto L1c18b6;
  #L1c185c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1c1860.  call temp:= `getTextAppearance`(v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.getTextAppearance:()Lcom/google/android/material/resources/TextAppearance;` @kind virtual;
  #L1c1866.  v0:= temp @kind object;
  #L1c1868.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Lcom/google/android/material/resources/TextAppearance;)Z` @kind static;
  #L1c186e.  v0:= temp;
  #L1c1870.  if v0 != 0 then goto L1c18b6;
  #L1c1874.  call temp:= `canShowCheckedIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.canShowCheckedIcon:()Z` @kind direct;
  #L1c187a.  v0:= temp;
  #L1c187c.  if v0 != 0 then goto L1c18b6;
  #L1c1880.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c1884.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L1c188a.  v0:= temp;
  #L1c188c.  if v0 != 0 then goto L1c18b6;
  #L1c1890.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c1894.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/graphics/drawable/Drawable;)Z` @kind static;
  #L1c189a.  v0:= temp;
  #L1c189c.  if v0 != 0 then goto L1c18b6;
  #L1c18a0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c18a4.  call temp:= `isStateful`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.isStateful:(Landroid/content/res/ColorStateList;)Z` @kind static;
  #L1c18aa.  v0:= temp;
  #L1c18ac.  if v0 == 0 then goto L1c18b2;
  #L1c18b0.  goto L1c18b6;
  #L1c18b2.  v0:= 0I;
  #L1c18b4.  goto L1c18b8;
  #L1c18b6.  v0:= 1I;
  #L1c18b8.  return v0;
}
procedure `boolean` `onLayoutDirectionChanged`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.onLayoutDirectionChanged:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c194c.  call temp:= `onLayoutDirectionChanged`(v2, v3) @signature `Landroid/graphics/drawable/Drawable;.onLayoutDirectionChanged:(I)Z` @kind super;
  #L1c1952.  v0:= temp;
  #L1c1954.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L1c195a.  v1:= temp;
  #L1c195c.  if v1 == 0 then goto L1c196e;
  #L1c1960.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c1964.  call temp:= `setLayoutDirection`(v1, v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setLayoutDirection:(Landroid/graphics/drawable/Drawable;I)Z` @kind static;
  #L1c196a.  v1:= temp;
  #L1c196c.  v0:= v0 ^| v1 @kind int;
  #L1c196e.  call temp:= `showsCheckedIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L1c1974.  v1:= temp;
  #L1c1976.  if v1 == 0 then goto L1c1988;
  #L1c197a.  v1:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c197e.  call temp:= `setLayoutDirection`(v1, v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setLayoutDirection:(Landroid/graphics/drawable/Drawable;I)Z` @kind static;
  #L1c1984.  v1:= temp;
  #L1c1986.  v0:= v0 ^| v1 @kind int;
  #L1c1988.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1c198e.  v1:= temp;
  #L1c1990.  if v1 == 0 then goto L1c19a2;
  #L1c1994.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c1998.  call temp:= `setLayoutDirection`(v1, v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setLayoutDirection:(Landroid/graphics/drawable/Drawable;I)Z` @kind static;
  #L1c199e.  v3:= temp;
  #L1c19a0.  v0:= v0 ^| v3 @kind int;
  #L1c19a2.  if v0 == 0 then goto L1c19ac;
  #L1c19a6.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c19ac.  v3:= 1I;
  #L1c19ae.  return v3;
}
procedure `boolean` `onLevelChange`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.onLevelChange:(I)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1c19c0.  call temp:= `onLevelChange`(v2, v3) @signature `Landroid/graphics/drawable/Drawable;.onLevelChange:(I)Z` @kind super;
  #L1c19c6.  v0:= temp;
  #L1c19c8.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L1c19ce.  v1:= temp;
  #L1c19d0.  if v1 == 0 then goto L1c19e2;
  #L1c19d4.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c19d8.  call temp:= `setLevel`(v1, v3) @signature `Landroid/graphics/drawable/Drawable;.setLevel:(I)Z` @kind virtual;
  #L1c19de.  v1:= temp;
  #L1c19e0.  v0:= v0 ^| v1 @kind int;
  #L1c19e2.  call temp:= `showsCheckedIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L1c19e8.  v1:= temp;
  #L1c19ea.  if v1 == 0 then goto L1c19fc;
  #L1c19ee.  v1:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c19f2.  call temp:= `setLevel`(v1, v3) @signature `Landroid/graphics/drawable/Drawable;.setLevel:(I)Z` @kind virtual;
  #L1c19f8.  v1:= temp;
  #L1c19fa.  v0:= v0 ^| v1 @kind int;
  #L1c19fc.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1c1a02.  v1:= temp;
  #L1c1a04.  if v1 == 0 then goto L1c1a16;
  #L1c1a08.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c1a0c.  call temp:= `setLevel`(v1, v3) @signature `Landroid/graphics/drawable/Drawable;.setLevel:(I)Z` @kind virtual;
  #L1c1a12.  v3:= temp;
  #L1c1a14.  v0:= v0 ^| v3 @kind int;
  #L1c1a16.  if v0 == 0 then goto L1c1a20;
  #L1c1a1a.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c1a20.  return v0;
}
procedure `void` `onSizeChange`(`com.google.android.material.chip.ChipDrawable` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1c31d8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.delegate` @type ^`java.lang.ref.WeakReference` @kind object;
  #L1c31dc.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L1c31e2.  v0:= temp @kind object;
  #L1c31e4.  v0:= (`com.google.android.material.chip.ChipDrawable$Delegate`) v0 @kind object;
  #L1c31e8.  if v0 == 0 then goto L1c31f2;
  #L1c31ec.  call `onChipDrawableSizeChange`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable$Delegate;.onChipDrawableSizeChange:()V` @kind interface;
  #L1c31f2.  return @kind void;
}
procedure `boolean` `onStateChange`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int`[] v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1a34.  v0:= v1.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1c1a38.  if v0 == 0 then goto L1c1a42;
  #L1c1a3c.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.onStateChange:([I)Z` @kind super;
  #L1c1a42.  call temp:= `getCloseIconState`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIconState:()[I` @kind virtual;
  #L1c1a48.  v0:= temp @kind object;
  #L1c1a4a.  call temp:= `onStateChange`(v1, v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I[I)Z` @kind direct;
  #L1c1a50.  v2:= temp;
  #L1c1a52.  return v2;
}
procedure `void` `onTextSizeChange`(`com.google.android.material.chip.ChipDrawable` v0 @kind this) @signature `Lcom/google/android/material/chip/ChipDrawable;.onTextSizeChange:()V` @AccessFlag PUBLIC {
    temp;

  #L1c3204.  call `onSizeChange`(v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1c320a.  call `invalidateSelf`(v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c3210.  return @kind void;
}
procedure `void` `scheduleDrawable`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object, `java.lang.Runnable` v2 @kind object, `long` v3 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.scheduleDrawable:(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V` @AccessFlag PUBLIC {
    temp;

  #L1c3224.  call temp:= `getCallback`(v0) @signature `Landroid/graphics/drawable/Drawable;.getCallback:()Landroid/graphics/drawable/Drawable$Callback;` @kind virtual;
  #L1c322a.  v1:= temp @kind object;
  #L1c322c.  if v1 == 0 then goto L1c3236;
  #L1c3230.  call `scheduleDrawable`(v1, v0, v2, v3) @signature `Landroid/graphics/drawable/Drawable$Callback;.scheduleDrawable:(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V` @kind interface;
  #L1c3236.  return @kind void;
}
procedure `void` `setAlpha`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setAlpha:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3248.  v0:= v1.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int`;
  #L1c324c.  if v0 == v2 then goto L1c325a;
  #L1c3250.  v1.`com.google.android.material.chip.ChipDrawable.alpha` @type ^`int` := v2;
  #L1c3254.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c325a.  return @kind void;
}
procedure `void` `setCheckable`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckable:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c326c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` @kind boolean;
  #L1c3270.  if v0 == v2 then goto L1c32ae;
  #L1c3274.  v1.`com.google.android.material.chip.ChipDrawable.checkable` @type ^`boolean` := v2 @kind boolean;
  #L1c3278.  call temp:= `d`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.d:()F` @kind virtual;
  #L1c327e.  v0:= temp;
  #L1c3280.  if v2 != 0 then goto L1c3292;
  #L1c3284.  v2:= v1.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` @kind boolean;
  #L1c3288.  if v2 == 0 then goto L1c3292;
  #L1c328c.  v2:= 0I;
  #L1c328e.  v1.`com.google.android.material.chip.ChipDrawable.currentChecked` @type ^`boolean` := v2 @kind boolean;
  #L1c3292.  call temp:= `d`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.d:()F` @kind virtual;
  #L1c3298.  v2:= temp;
  #L1c329a.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c32a0.  v2:= fcmpl(v0, v2);
  #L1c32a4.  if v2 == 0 then goto L1c32ae;
  #L1c32a8.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1c32ae.  return @kind void;
}
procedure `void` `setCheckableResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckableResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c32c0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c32c4.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c32ca.  v0:= temp @kind object;
  #L1c32cc.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L1c32d2.  v2:= temp;
  #L1c32d4.  call `setCheckable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckable:(Z)V` @kind virtual;
  #L1c32da.  return @kind void;
}
procedure `void` `setCheckedIcon`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.drawable.Drawable` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIcon:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c32ec.  v0:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c32f0.  if v0 == v3 then goto L1c3330;
  #L1c32f4.  call temp:= `d`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.d:()F` @kind virtual;
  #L1c32fa.  v0:= temp;
  #L1c32fc.  v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` := v3 @kind object;
  #L1c3300.  call temp:= `d`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.d:()F` @kind virtual;
  #L1c3306.  v3:= temp;
  #L1c3308.  v1:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c330c.  call `unapplyChildDrawable`(v2, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1c3312.  v1:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c3316.  call `applyChildDrawable`(v2, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1c331c.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c3322.  v3:= fcmpl(v0, v3);
  #L1c3326.  if v3 == 0 then goto L1c3330;
  #L1c332a.  call `onSizeChange`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1c3330.  return @kind void;
}
procedure `void` `setCheckedIconEnabled`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L1c3344.  call `setCheckedIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L1c334a.  return @kind void;
}
procedure `void` `setCheckedIconEnabledResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconEnabledResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c335c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c3360.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c3366.  v0:= temp @kind object;
  #L1c3368.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L1c336e.  v2:= temp;
  #L1c3370.  call `setCheckedIconVisible`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L1c3376.  return @kind void;
}
procedure `void` `setCheckedIconResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3388.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c338c.  call temp:= `getDrawable`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getDrawable:(Landroid/content/Context;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L1c3392.  v2:= temp @kind object;
  #L1c3394.  call `setCheckedIcon`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L1c339a.  return @kind void;
}
procedure `void` `setCheckedIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3410.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c3414.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c341a.  v0:= temp @kind object;
  #L1c341c.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L1c3422.  v2:= temp;
  #L1c3424.  call `setCheckedIconVisible`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @kind virtual;
  #L1c342a.  return @kind void;
}
procedure `void` `setCheckedIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCheckedIconVisible:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c33ac.  v0:= v1.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` @kind boolean;
  #L1c33b0.  if v0 == v2 then goto L1c33fc;
  #L1c33b4.  call temp:= `showsCheckedIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L1c33ba.  v0:= temp;
  #L1c33bc.  v1.`com.google.android.material.chip.ChipDrawable.checkedIconVisible` @type ^`boolean` := v2 @kind boolean;
  #L1c33c0.  call temp:= `showsCheckedIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L1c33c6.  v2:= temp;
  #L1c33c8.  if v0 == v2 then goto L1c33d0;
  #L1c33cc.  v0:= 1I;
  #L1c33ce.  goto L1c33d2;
  #L1c33d0.  v0:= 0I;
  #L1c33d2.  if v0 == 0 then goto L1c33fc;
  #L1c33d6.  if v2 == 0 then goto L1c33e6;
  #L1c33da.  v2:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c33de.  call `applyChildDrawable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1c33e4.  goto L1c33f0;
  #L1c33e6.  v2:= v1.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c33ea.  call `unapplyChildDrawable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1c33f0.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c33f6.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1c33fc.  return @kind void;
}
procedure `void` `setChipBackgroundColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipBackgroundColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c343c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c3440.  if v0 == v2 then goto L1c3456;
  #L1c3444.  v1.`com.google.android.material.chip.ChipDrawable.chipBackgroundColor` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L1c3448.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L1c344e.  v2:= temp @kind object;
  #L1c3450.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L1c3456.  return @kind void;
}
procedure `void` `setChipBackgroundColorResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipBackgroundColorResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3468.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c346c.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1c3472.  v2:= temp @kind object;
  #L1c3474.  call `setChipBackgroundColor`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipBackgroundColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1c347a.  return @kind void;
}
procedure `void` `setChipCornerRadius`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipCornerRadius:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c348c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float`;
  #L1c3490.  v0:= fcmpl(v0, v2);
  #L1c3494.  if v0 == 0 then goto L1c34b2;
  #L1c3498.  v1.`com.google.android.material.chip.ChipDrawable.chipCornerRadius` @type ^`float` := v2;
  #L1c349c.  call temp:= `getShapeAppearanceModel`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getShapeAppearanceModel:()Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L1c34a2.  v0:= temp @kind object;
  #L1c34a4.  call temp:= `withCornerSize`(v0, v2) @signature `Lcom/google/android/material/shape/ShapeAppearanceModel;.withCornerSize:(F)Lcom/google/android/material/shape/ShapeAppearanceModel;` @kind virtual;
  #L1c34aa.  v2:= temp @kind object;
  #L1c34ac.  call `setShapeAppearanceModel`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setShapeAppearanceModel:(Lcom/google/android/material/shape/ShapeAppearanceModel;)V` @kind virtual;
  #L1c34b2.  return @kind void;
}
procedure `void` `setChipCornerRadiusResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipCornerRadiusResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c34c4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c34c8.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c34ce.  v0:= temp @kind object;
  #L1c34d0.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1c34d6.  v2:= temp;
  #L1c34d8.  call `setChipCornerRadius`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipCornerRadius:(F)V` @kind virtual;
  #L1c34de.  return @kind void;
}
procedure `void` `setChipEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c34f0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float`;
  #L1c34f4.  v0:= fcmpl(v0, v2);
  #L1c34f8.  if v0 == 0 then goto L1c350c;
  #L1c34fc.  v1.`com.google.android.material.chip.ChipDrawable.chipEndPadding` @type ^`float` := v2;
  #L1c3500.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c3506.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1c350c.  return @kind void;
}
procedure `void` `setChipEndPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3520.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c3524.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c352a.  v0:= temp @kind object;
  #L1c352c.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1c3532.  v2:= temp;
  #L1c3534.  call `setChipEndPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipEndPadding:(F)V` @kind virtual;
  #L1c353a.  return @kind void;
}
procedure `void` `setChipIcon`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.drawable.Drawable` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIcon:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c354c.  call temp:= `getChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getChipIcon:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L1c3552.  v0:= temp @kind object;
  #L1c3554.  if v0 == v3 then goto L1c35b4;
  #L1c3558.  call temp:= `d`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.d:()F` @kind virtual;
  #L1c355e.  v1:= temp;
  #L1c3560.  if v3 == 0 then goto L1c3576;
  #L1c3564.  call temp:= `wrap`(v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.wrap:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L1c356a.  v3:= temp @kind object;
  #L1c356c.  call temp:= `mutate`(v3) @signature `Landroid/graphics/drawable/Drawable;.mutate:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L1c3572.  v3:= temp @kind object;
  #L1c3574.  goto L1c3578;
  #L1c3576.  v3:= 0I;
  #L1c3578.  v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` := v3 @kind object;
  #L1c357c.  call temp:= `d`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.d:()F` @kind virtual;
  #L1c3582.  v3:= temp;
  #L1c3584.  call `unapplyChildDrawable`(v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1c358a.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L1c3590.  v0:= temp;
  #L1c3592.  if v0 == 0 then goto L1c35a0;
  #L1c3596.  v0:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c359a.  call `applyChildDrawable`(v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1c35a0.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c35a6.  v3:= fcmpl(v1, v3);
  #L1c35aa.  if v3 == 0 then goto L1c35b4;
  #L1c35ae.  call `onSizeChange`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1c35b4.  return @kind void;
}
procedure `void` `setChipIconEnabled`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L1c35c8.  call `setChipIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @kind virtual;
  #L1c35ce.  return @kind void;
}
procedure `void` `setChipIconEnabledResource`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconEnabledResource:(I)V` @AccessFlag PUBLIC {
    temp;

  #L1c35e0.  call `setChipIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(I)V` @kind virtual;
  #L1c35e6.  return @kind void;
}
procedure `void` `setChipIconResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c35f8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c35fc.  call temp:= `getDrawable`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getDrawable:(Landroid/content/Context;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L1c3602.  v2:= temp @kind object;
  #L1c3604.  call `setChipIcon`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L1c360a.  return @kind void;
}
procedure `void` `setChipIconSize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c361c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float`;
  #L1c3620.  v0:= fcmpl(v0, v2);
  #L1c3624.  if v0 == 0 then goto L1c3650;
  #L1c3628.  call temp:= `d`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.d:()F` @kind virtual;
  #L1c362e.  v0:= temp;
  #L1c3630.  v1.`com.google.android.material.chip.ChipDrawable.chipIconSize` @type ^`float` := v2;
  #L1c3634.  call temp:= `d`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.d:()F` @kind virtual;
  #L1c363a.  v2:= temp;
  #L1c363c.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c3642.  v2:= fcmpl(v0, v2);
  #L1c3646.  if v2 == 0 then goto L1c3650;
  #L1c364a.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1c3650.  return @kind void;
}
procedure `void` `setChipIconSizeResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconSizeResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3664.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c3668.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c366e.  v0:= temp @kind object;
  #L1c3670.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1c3676.  v2:= temp;
  #L1c3678.  call `setChipIconSize`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconSize:(F)V` @kind virtual;
  #L1c367e.  return @kind void;
}
procedure `void` `setChipIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconTint:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3690.  v0:= 1I;
  #L1c3692.  v1.`com.google.android.material.chip.ChipDrawable.hasChipIconTint` @type ^`boolean` := v0 @kind boolean;
  #L1c3696.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c369a.  if v0 == v2 then goto L1c36c6;
  #L1c369e.  v1.`com.google.android.material.chip.ChipDrawable.chipIconTint` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L1c36a2.  call temp:= `showsChipIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L1c36a8.  v0:= temp;
  #L1c36aa.  if v0 == 0 then goto L1c36b8;
  #L1c36ae.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c36b2.  call `setTintList`(v0, v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTintList:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V` @kind static;
  #L1c36b8.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L1c36be.  v2:= temp @kind object;
  #L1c36c0.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L1c36c6.  return @kind void;
}
procedure `void` `setChipIconTintResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconTintResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c36d8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c36dc.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1c36e2.  v2:= temp @kind object;
  #L1c36e4.  call `setChipIconTint`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1c36ea.  return @kind void;
}
procedure `void` `setChipIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3760.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c3764.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c376a.  v0:= temp @kind object;
  #L1c376c.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L1c3772.  v2:= temp;
  #L1c3774.  call `setChipIconVisible`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @kind virtual;
  #L1c377a.  return @kind void;
}
procedure `void` `setChipIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipIconVisible:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c36fc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipIconVisible` @type ^`boolean` @kind boolean;
  #L1c3700.  if v0 == v2 then goto L1c374c;
  #L1c3704.  call temp:= `showsChipIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L1c370a.  v0:= temp;
  #L1c370c.  v1.`com.google.android.material.chip.ChipDrawable.chipIconVisible` @type ^`boolean` := v2 @kind boolean;
  #L1c3710.  call temp:= `showsChipIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L1c3716.  v2:= temp;
  #L1c3718.  if v0 == v2 then goto L1c3720;
  #L1c371c.  v0:= 1I;
  #L1c371e.  goto L1c3722;
  #L1c3720.  v0:= 0I;
  #L1c3722.  if v0 == 0 then goto L1c374c;
  #L1c3726.  if v2 == 0 then goto L1c3736;
  #L1c372a.  v2:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c372e.  call `applyChildDrawable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1c3734.  goto L1c3740;
  #L1c3736.  v2:= v1.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c373a.  call `unapplyChildDrawable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1c3740.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c3746.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1c374c.  return @kind void;
}
procedure `void` `setChipMinHeight`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipMinHeight:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c378c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipMinHeight` @type ^`float`;
  #L1c3790.  v0:= fcmpl(v0, v2);
  #L1c3794.  if v0 == 0 then goto L1c37a8;
  #L1c3798.  v1.`com.google.android.material.chip.ChipDrawable.chipMinHeight` @type ^`float` := v2;
  #L1c379c.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c37a2.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1c37a8.  return @kind void;
}
procedure `void` `setChipMinHeightResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipMinHeightResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c37bc.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c37c0.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c37c6.  v0:= temp @kind object;
  #L1c37c8.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1c37ce.  v2:= temp;
  #L1c37d0.  call `setChipMinHeight`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipMinHeight:(F)V` @kind virtual;
  #L1c37d6.  return @kind void;
}
procedure `void` `setChipStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c37e8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float`;
  #L1c37ec.  v0:= fcmpl(v0, v2);
  #L1c37f0.  if v0 == 0 then goto L1c3804;
  #L1c37f4.  v1.`com.google.android.material.chip.ChipDrawable.chipStartPadding` @type ^`float` := v2;
  #L1c37f8.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c37fe.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1c3804.  return @kind void;
}
procedure `void` `setChipStartPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3818.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c381c.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c3822.  v0:= temp @kind object;
  #L1c3824.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1c382a.  v2:= temp;
  #L1c382c.  call `setChipStartPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStartPadding:(F)V` @kind virtual;
  #L1c3832.  return @kind void;
}
procedure `void` `setChipStrokeColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3844.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c3848.  if v0 == v2 then goto L1c386c;
  #L1c384c.  v1.`com.google.android.material.chip.ChipDrawable.chipStrokeColor` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L1c3850.  v0:= v1.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1c3854.  if v0 == 0 then goto L1c385e;
  #L1c3858.  call `setStrokeColor`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1c385e.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L1c3864.  v2:= temp @kind object;
  #L1c3866.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L1c386c.  return @kind void;
}
procedure `void` `setChipStrokeColorResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeColorResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3880.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c3884.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1c388a.  v2:= temp @kind object;
  #L1c388c.  call `setChipStrokeColor`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1c3892.  return @kind void;
}
procedure `void` `setChipStrokeWidth`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeWidth:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c38a4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float`;
  #L1c38a8.  v0:= fcmpl(v0, v2);
  #L1c38ac.  if v0 == 0 then goto L1c38d2;
  #L1c38b0.  v1.`com.google.android.material.chip.ChipDrawable.chipStrokeWidth` @type ^`float` := v2;
  #L1c38b4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.chipPaint` @type ^`android.graphics.Paint` @kind object;
  #L1c38b8.  call `setStrokeWidth`(v0, v2) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L1c38be.  v0:= v1.`com.google.android.material.chip.ChipDrawable.isShapeThemingEnabled` @type ^`boolean` @kind boolean;
  #L1c38c2.  if v0 == 0 then goto L1c38cc;
  #L1c38c6.  call `setStrokeWidth`(v1, v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.setStrokeWidth:(F)V` @kind super;
  #L1c38cc.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c38d2.  return @kind void;
}
procedure `void` `setChipStrokeWidthResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeWidthResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c38e4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c38e8.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c38ee.  v0:= temp @kind object;
  #L1c38f0.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1c38f6.  v2:= temp;
  #L1c38f8.  call `setChipStrokeWidth`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setChipStrokeWidth:(F)V` @kind virtual;
  #L1c38fe.  return @kind void;
}
procedure `void` `setCloseIcon`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `android.graphics.drawable.Drawable` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIcon:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c393c.  call temp:= `getCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.getCloseIcon:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L1c3942.  v0:= temp @kind object;
  #L1c3944.  if v0 == v3 then goto L1c39b2;
  #L1c3948.  call temp:= `e`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.e:()F` @kind virtual;
  #L1c394e.  v1:= temp;
  #L1c3950.  if v3 == 0 then goto L1c3966;
  #L1c3954.  call temp:= `wrap`(v3) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.wrap:(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L1c395a.  v3:= temp @kind object;
  #L1c395c.  call temp:= `mutate`(v3) @signature `Landroid/graphics/drawable/Drawable;.mutate:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L1c3962.  v3:= temp @kind object;
  #L1c3964.  goto L1c3968;
  #L1c3966.  v3:= 0I;
  #L1c3968.  v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` := v3 @kind object;
  #L1c396c.  v3:= `@@com.google.android.material.ripple.RippleUtils.USE_FRAMEWORK_RIPPLE` @type ^`boolean` @kind boolean;
  #L1c3970.  if v3 == 0 then goto L1c397a;
  #L1c3974.  call `updateFrameworkCloseIconRipple`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateFrameworkCloseIconRipple:()V` @kind direct;
  #L1c397a.  call temp:= `e`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.e:()F` @kind virtual;
  #L1c3980.  v3:= temp;
  #L1c3982.  call `unapplyChildDrawable`(v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1c3988.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1c398e.  v0:= temp;
  #L1c3990.  if v0 == 0 then goto L1c399e;
  #L1c3994.  v0:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c3998.  call `applyChildDrawable`(v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1c399e.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c39a4.  v3:= fcmpl(v1, v3);
  #L1c39a8.  if v3 == 0 then goto L1c39b2;
  #L1c39ac.  call `onSizeChange`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1c39b2.  return @kind void;
}
procedure `void` `setCloseIconContentDescription`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `java.lang.CharSequence` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconContentDescription:(Ljava/lang/CharSequence;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c39c4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconContentDescription` @type ^`java.lang.CharSequence` @kind object;
  #L1c39c8.  if v0 == v2 then goto L1c39e6;
  #L1c39cc.  call temp:= `getInstance`() @signature `Landroidx/core/text/BidiFormatter;.getInstance:()Landroidx/core/text/BidiFormatter;` @kind static;
  #L1c39d2.  v0:= temp @kind object;
  #L1c39d4.  call temp:= `unicodeWrap`(v0, v2) @signature `Landroidx/core/text/BidiFormatter;.unicodeWrap:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;` @kind virtual;
  #L1c39da.  v2:= temp @kind object;
  #L1c39dc.  v1.`com.google.android.material.chip.ChipDrawable.closeIconContentDescription` @type ^`java.lang.CharSequence` := v2 @kind object;
  #L1c39e0.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c39e6.  return @kind void;
}
procedure `void` `setCloseIconEnabled`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L1c39f8.  call `setCloseIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @kind virtual;
  #L1c39fe.  return @kind void;
}
procedure `void` `setCloseIconEnabledResource`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEnabledResource:(I)V` @AccessFlag PUBLIC {
    temp;

  #L1c3a10.  call `setCloseIconVisible`(v0, v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(I)V` @kind virtual;
  #L1c3a16.  return @kind void;
}
procedure `void` `setCloseIconEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3a28.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float`;
  #L1c3a2c.  v0:= fcmpl(v0, v2);
  #L1c3a30.  if v0 == 0 then goto L1c3a50;
  #L1c3a34.  v1.`com.google.android.material.chip.ChipDrawable.closeIconEndPadding` @type ^`float` := v2;
  #L1c3a38.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c3a3e.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1c3a44.  v2:= temp;
  #L1c3a46.  if v2 == 0 then goto L1c3a50;
  #L1c3a4a.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1c3a50.  return @kind void;
}
procedure `void` `setCloseIconEndPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3a64.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c3a68.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c3a6e.  v0:= temp @kind object;
  #L1c3a70.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1c3a76.  v2:= temp;
  #L1c3a78.  call `setCloseIconEndPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconEndPadding:(F)V` @kind virtual;
  #L1c3a7e.  return @kind void;
}
procedure `void` `setCloseIconResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3a90.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c3a94.  call temp:= `getDrawable`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getDrawable:(Landroid/content/Context;I)Landroid/graphics/drawable/Drawable;` @kind static;
  #L1c3a9a.  v2:= temp @kind object;
  #L1c3a9c.  call `setCloseIcon`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIcon:(Landroid/graphics/drawable/Drawable;)V` @kind virtual;
  #L1c3aa2.  return @kind void;
}
procedure `void` `setCloseIconSize`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3ab4.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float`;
  #L1c3ab8.  v0:= fcmpl(v0, v2);
  #L1c3abc.  if v0 == 0 then goto L1c3adc;
  #L1c3ac0.  v1.`com.google.android.material.chip.ChipDrawable.closeIconSize` @type ^`float` := v2;
  #L1c3ac4.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c3aca.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1c3ad0.  v2:= temp;
  #L1c3ad2.  if v2 == 0 then goto L1c3adc;
  #L1c3ad6.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1c3adc.  return @kind void;
}
procedure `void` `setCloseIconSizeResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconSizeResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3af0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c3af4.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c3afa.  v0:= temp @kind object;
  #L1c3afc.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1c3b02.  v2:= temp;
  #L1c3b04.  call `setCloseIconSize`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconSize:(F)V` @kind virtual;
  #L1c3b0a.  return @kind void;
}
procedure `void` `setCloseIconStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3b1c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float`;
  #L1c3b20.  v0:= fcmpl(v0, v2);
  #L1c3b24.  if v0 == 0 then goto L1c3b44;
  #L1c3b28.  v1.`com.google.android.material.chip.ChipDrawable.closeIconStartPadding` @type ^`float` := v2;
  #L1c3b2c.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c3b32.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1c3b38.  v2:= temp;
  #L1c3b3a.  if v2 == 0 then goto L1c3b44;
  #L1c3b3e.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1c3b44.  return @kind void;
}
procedure `void` `setCloseIconStartPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3b58.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c3b5c.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c3b62.  v0:= temp @kind object;
  #L1c3b64.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1c3b6a.  v2:= temp;
  #L1c3b6c.  call `setCloseIconStartPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconStartPadding:(F)V` @kind virtual;
  #L1c3b72.  return @kind void;
}
procedure `boolean` `setCloseIconState`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int`[] v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconState:([I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c1d10.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconStateSet` @type ^`int`[] @kind object;
  #L1c1d14.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Arrays;.equals:([I[I)Z` @kind static;
  #L1c1d1a.  v0:= temp;
  #L1c1d1c.  if v0 != 0 then goto L1c1d42;
  #L1c1d20.  v1.`com.google.android.material.chip.ChipDrawable.closeIconStateSet` @type ^`int`[] := v2 @kind object;
  #L1c1d24.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1c1d2a.  v0:= temp;
  #L1c1d2c.  if v0 == 0 then goto L1c1d42;
  #L1c1d30.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L1c1d36.  v0:= temp @kind object;
  #L1c1d38.  call temp:= `onStateChange`(v1, v0, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I[I)Z` @kind direct;
  #L1c1d3e.  v2:= temp;
  #L1c1d40.  return v2;
  #L1c1d42.  v2:= 0I;
  #L1c1d44.  return v2;
}
procedure `void` `setCloseIconTint`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconTint:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3b84.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconTint` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c3b88.  if v0 == v2 then goto L1c3bb4;
  #L1c3b8c.  v1.`com.google.android.material.chip.ChipDrawable.closeIconTint` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L1c3b90.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1c3b96.  v0:= temp;
  #L1c3b98.  if v0 == 0 then goto L1c3ba6;
  #L1c3b9c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c3ba0.  call `setTintList`(v0, v2) @signature `Landroidx/core/graphics/drawable/DrawableCompat;.setTintList:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V` @kind static;
  #L1c3ba6.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L1c3bac.  v2:= temp @kind object;
  #L1c3bae.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L1c3bb4.  return @kind void;
}
procedure `void` `setCloseIconTintResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconTintResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3bc8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c3bcc.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1c3bd2.  v2:= temp @kind object;
  #L1c3bd4.  call `setCloseIconTint`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconTint:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1c3bda.  return @kind void;
}
procedure `void` `setCloseIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3c50.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c3c54.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c3c5a.  v0:= temp @kind object;
  #L1c3c5c.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L1c3c62.  v2:= temp;
  #L1c3c64.  call `setCloseIconVisible`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @kind virtual;
  #L1c3c6a.  return @kind void;
}
procedure `void` `setCloseIconVisible`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setCloseIconVisible:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3bec.  v0:= v1.`com.google.android.material.chip.ChipDrawable.closeIconVisible` @type ^`boolean` @kind boolean;
  #L1c3bf0.  if v0 == v2 then goto L1c3c3c;
  #L1c3bf4.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1c3bfa.  v0:= temp;
  #L1c3bfc.  v1.`com.google.android.material.chip.ChipDrawable.closeIconVisible` @type ^`boolean` := v2 @kind boolean;
  #L1c3c00.  call temp:= `showsCloseIcon`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1c3c06.  v2:= temp;
  #L1c3c08.  if v0 == v2 then goto L1c3c10;
  #L1c3c0c.  v0:= 1I;
  #L1c3c0e.  goto L1c3c12;
  #L1c3c10.  v0:= 0I;
  #L1c3c12.  if v0 == 0 then goto L1c3c3c;
  #L1c3c16.  if v2 == 0 then goto L1c3c26;
  #L1c3c1a.  v2:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c3c1e.  call `applyChildDrawable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.applyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1c3c24.  goto L1c3c30;
  #L1c3c26.  v2:= v1.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c3c2a.  call `unapplyChildDrawable`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.unapplyChildDrawable:(Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L1c3c30.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c3c36.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1c3c3c.  return @kind void;
}
procedure `void` `setColorFilter`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.ColorFilter` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setColorFilter:(Landroid/graphics/ColorFilter;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3c7c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.colorFilter` @type ^`android.graphics.ColorFilter` @kind object;
  #L1c3c80.  if v0 == v2 then goto L1c3c8e;
  #L1c3c84.  v1.`com.google.android.material.chip.ChipDrawable.colorFilter` @type ^`android.graphics.ColorFilter` := v2 @kind object;
  #L1c3c88.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c3c8e.  return @kind void;
}
procedure `void` `setDelegate`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `com.google.android.material.chip.ChipDrawable$Delegate` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setDelegate:(Lcom/google/android/material/chip/ChipDrawable$Delegate;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3ca0.  v0:= new `java.lang.ref.WeakReference`;
  #L1c3ca4.  call `<init>`(v0, v2) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1c3caa.  v1.`com.google.android.material.chip.ChipDrawable.delegate` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L1c3cae.  return @kind void;
}
procedure `void` `setEllipsize`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `android.text.TextUtils$TruncateAt` v1 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setEllipsize:(Landroid/text/TextUtils$TruncateAt;)V` @AccessFlag PUBLIC {
    temp;

  #L1c3cc0.  v0.`com.google.android.material.chip.ChipDrawable.truncateAt` @type ^`android.text.TextUtils$TruncateAt` := v1 @kind object;
  #L1c3cc4.  return @kind void;
}
procedure `void` `setHideMotionSpec`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `com.google.android.material.animation.MotionSpec` v1 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setHideMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @AccessFlag PUBLIC {
    temp;

  #L1c3cd8.  v0.`com.google.android.material.chip.ChipDrawable.hideMotionSpec` @type ^`com.google.android.material.animation.MotionSpec` := v1 @kind object;
  #L1c3cdc.  return @kind void;
}
procedure `void` `setHideMotionSpecResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setHideMotionSpecResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3cf0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c3cf4.  call temp:= `createFromResource`(v0, v2) @signature `Lcom/google/android/material/animation/MotionSpec;.createFromResource:(Landroid/content/Context;I)Lcom/google/android/material/animation/MotionSpec;` @kind static;
  #L1c3cfa.  v2:= temp @kind object;
  #L1c3cfc.  call `setHideMotionSpec`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setHideMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @kind virtual;
  #L1c3d02.  return @kind void;
}
procedure `void` `setIconEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3d14.  v0:= v1.`com.google.android.material.chip.ChipDrawable.iconEndPadding` @type ^`float`;
  #L1c3d18.  v0:= fcmpl(v0, v2);
  #L1c3d1c.  if v0 == 0 then goto L1c3d48;
  #L1c3d20.  call temp:= `d`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.d:()F` @kind virtual;
  #L1c3d26.  v0:= temp;
  #L1c3d28.  v1.`com.google.android.material.chip.ChipDrawable.iconEndPadding` @type ^`float` := v2;
  #L1c3d2c.  call temp:= `d`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.d:()F` @kind virtual;
  #L1c3d32.  v2:= temp;
  #L1c3d34.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c3d3a.  v2:= fcmpl(v0, v2);
  #L1c3d3e.  if v2 == 0 then goto L1c3d48;
  #L1c3d42.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1c3d48.  return @kind void;
}
procedure `void` `setIconEndPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3d5c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c3d60.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c3d66.  v0:= temp @kind object;
  #L1c3d68.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1c3d6e.  v2:= temp;
  #L1c3d70.  call `setIconEndPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconEndPadding:(F)V` @kind virtual;
  #L1c3d76.  return @kind void;
}
procedure `void` `setIconStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3d88.  v0:= v1.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float`;
  #L1c3d8c.  v0:= fcmpl(v0, v2);
  #L1c3d90.  if v0 == 0 then goto L1c3dbc;
  #L1c3d94.  call temp:= `d`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.d:()F` @kind virtual;
  #L1c3d9a.  v0:= temp;
  #L1c3d9c.  v1.`com.google.android.material.chip.ChipDrawable.iconStartPadding` @type ^`float` := v2;
  #L1c3da0.  call temp:= `d`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.d:()F` @kind virtual;
  #L1c3da6.  v2:= temp;
  #L1c3da8.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c3dae.  v2:= fcmpl(v0, v2);
  #L1c3db2.  if v2 == 0 then goto L1c3dbc;
  #L1c3db6.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1c3dbc.  return @kind void;
}
procedure `void` `setIconStartPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3dd0.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c3dd4.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c3dda.  v0:= temp @kind object;
  #L1c3ddc.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1c3de2.  v2:= temp;
  #L1c3de4.  call `setIconStartPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setIconStartPadding:(F)V` @kind virtual;
  #L1c3dea.  return @kind void;
}
procedure `void` `setMaxWidth`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setMaxWidth:(I)V` @AccessFlag PUBLIC {
    temp;

  #L1c3dfc.  v0.`com.google.android.material.chip.ChipDrawable.maxWidth` @type ^`int` := v1;
  #L1c3e00.  return @kind void;
}
procedure `void` `setRippleColor`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setRippleColor:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3e14.  v0:= v1.`com.google.android.material.chip.ChipDrawable.rippleColor` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c3e18.  if v0 == v2 then goto L1c3e34;
  #L1c3e1c.  v1.`com.google.android.material.chip.ChipDrawable.rippleColor` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L1c3e20.  call `updateCompatRippleColor`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateCompatRippleColor:()V` @kind direct;
  #L1c3e26.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L1c3e2c.  v2:= temp @kind object;
  #L1c3e2e.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L1c3e34.  return @kind void;
}
procedure `void` `setRippleColorResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setRippleColorResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3e48.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c3e4c.  call temp:= `getColorStateList`(v0, v2) @signature `Landroidx/appcompat/content/res/AppCompatResources;.getColorStateList:(Landroid/content/Context;I)Landroid/content/res/ColorStateList;` @kind static;
  #L1c3e52.  v2:= temp @kind object;
  #L1c3e54.  call `setRippleColor`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setRippleColor:(Landroid/content/res/ColorStateList;)V` @kind virtual;
  #L1c3e5a.  return @kind void;
}
procedure `void` `setShowMotionSpec`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `com.google.android.material.animation.MotionSpec` v1 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShowMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @AccessFlag PUBLIC {
    temp;

  #L1c3e84.  v0.`com.google.android.material.chip.ChipDrawable.showMotionSpec` @type ^`com.google.android.material.animation.MotionSpec` := v1 @kind object;
  #L1c3e88.  return @kind void;
}
procedure `void` `setShowMotionSpecResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShowMotionSpecResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3e9c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c3ea0.  call temp:= `createFromResource`(v0, v2) @signature `Lcom/google/android/material/animation/MotionSpec;.createFromResource:(Landroid/content/Context;I)Lcom/google/android/material/animation/MotionSpec;` @kind static;
  #L1c3ea6.  v2:= temp @kind object;
  #L1c3ea8.  call `setShowMotionSpec`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setShowMotionSpec:(Lcom/google/android/material/animation/MotionSpec;)V` @kind virtual;
  #L1c3eae.  return @kind void;
}
procedure `void` `setText`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `java.lang.CharSequence` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setText:(Ljava/lang/CharSequence;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3ec0.  if v2 != 0 then goto L1c3ec8;
  #L1c3ec4.  v2:= "" @kind object;
  #L1c3ec8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` @kind object;
  #L1c3ecc.  call temp:= `equals`(v0, v2) @signature `Landroid/text/TextUtils;.equals:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z` @kind static;
  #L1c3ed2.  v0:= temp;
  #L1c3ed4.  if v0 != 0 then goto L1c3ef4;
  #L1c3ed8.  v1.`com.google.android.material.chip.ChipDrawable.text` @type ^`java.lang.CharSequence` := v2 @kind object;
  #L1c3edc.  v2:= v1.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1c3ee0.  v0:= 1I;
  #L1c3ee2.  call `setTextWidthDirty`(v2, v0) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.setTextWidthDirty:(Z)V` @kind virtual;
  #L1c3ee8.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c3eee.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1c3ef4.  return @kind void;
}
procedure `void` `setTextAppearance`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `com.google.android.material.resources.TextAppearance` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c3f08.  v0:= v2.`com.google.android.material.chip.ChipDrawable.textDrawableHelper` @type ^`com.google.android.material.internal.TextDrawableHelper` @kind object;
  #L1c3f0c.  v1:= v2.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c3f10.  call `setTextAppearance`(v0, v3, v1) @signature `Lcom/google/android/material/internal/TextDrawableHelper;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;Landroid/content/Context;)V` @kind virtual;
  #L1c3f16.  return @kind void;
}
procedure `void` `setTextAppearanceResource`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearanceResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c3f28.  v0:= new `com.google.android.material.resources.TextAppearance`;
  #L1c3f2c.  v1:= v2.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c3f30.  call `<init>`(v0, v1, v3) @signature `Lcom/google/android/material/resources/TextAppearance;.<init>:(Landroid/content/Context;I)V` @kind direct;
  #L1c3f36.  call `setTextAppearance`(v2, v0) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextAppearance:(Lcom/google/android/material/resources/TextAppearance;)V` @kind virtual;
  #L1c3f3c.  return @kind void;
}
procedure `void` `setTextEndPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextEndPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3f50.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float`;
  #L1c3f54.  v0:= fcmpl(v0, v2);
  #L1c3f58.  if v0 == 0 then goto L1c3f6c;
  #L1c3f5c.  v1.`com.google.android.material.chip.ChipDrawable.textEndPadding` @type ^`float` := v2;
  #L1c3f60.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c3f66.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1c3f6c.  return @kind void;
}
procedure `void` `setTextEndPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextEndPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3f80.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c3f84.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c3f8a.  v0:= temp @kind object;
  #L1c3f8c.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1c3f92.  v2:= temp;
  #L1c3f94.  call `setTextEndPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextEndPadding:(F)V` @kind virtual;
  #L1c3f9a.  return @kind void;
}
procedure `void` `setTextResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3fac.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c3fb0.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c3fb6.  v0:= temp @kind object;
  #L1c3fb8.  call temp:= `getString`(v0, v2) @signature `Landroid/content/res/Resources;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L1c3fbe.  v2:= temp @kind object;
  #L1c3fc0.  call `setText`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setText:(Ljava/lang/CharSequence;)V` @kind virtual;
  #L1c3fc6.  return @kind void;
}
procedure `void` `setTextStartPadding`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `float` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextStartPadding:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c3fd8.  v0:= v1.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float`;
  #L1c3fdc.  v0:= fcmpl(v0, v2);
  #L1c3fe0.  if v0 == 0 then goto L1c3ff4;
  #L1c3fe4.  v1.`com.google.android.material.chip.ChipDrawable.textStartPadding` @type ^`float` := v2;
  #L1c3fe8.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c3fee.  call `onSizeChange`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.onSizeChange:()V` @kind virtual;
  #L1c3ff4.  return @kind void;
}
procedure `void` `setTextStartPaddingResource`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextStartPaddingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c4008.  v0:= v1.`com.google.android.material.chip.ChipDrawable.context` @type ^`android.content.Context` @kind object;
  #L1c400c.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c4012.  v0:= temp @kind object;
  #L1c4014.  call temp:= `getDimension`(v0, v2) @signature `Landroid/content/res/Resources;.getDimension:(I)F` @kind virtual;
  #L1c401a.  v2:= temp;
  #L1c401c.  call `setTextStartPadding`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTextStartPadding:(F)V` @kind virtual;
  #L1c4022.  return @kind void;
}
procedure `void` `setTintList`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.content.res.ColorStateList` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTintList:(Landroid/content/res/ColorStateList;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c4034.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c4038.  if v0 == v2 then goto L1c404e;
  #L1c403c.  v1.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` := v2 @kind object;
  #L1c4040.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L1c4046.  v2:= temp @kind object;
  #L1c4048.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L1c404e.  return @kind void;
}
procedure `void` `setTintMode`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `android.graphics.PorterDuff$Mode` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.setTintMode:(Landroid/graphics/PorterDuff$Mode;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c4060.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tintMode` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L1c4064.  if v0 == v2 then goto L1c4082;
  #L1c4068.  v1.`com.google.android.material.chip.ChipDrawable.tintMode` @type ^`android.graphics.PorterDuff$Mode` := v2 @kind object;
  #L1c406c.  v0:= v1.`com.google.android.material.chip.ChipDrawable.tint` @type ^`android.content.res.ColorStateList` @kind object;
  #L1c4070.  call temp:= `updateTintFilter`(v1, v0, v2) @signature `Lcom/google/android/material/drawable/DrawableUtils;.updateTintFilter:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;)Landroid/graphics/PorterDuffColorFilter;` @kind static;
  #L1c4076.  v2:= temp @kind object;
  #L1c4078.  v1.`com.google.android.material.chip.ChipDrawable.tintFilter` @type ^`android.graphics.PorterDuffColorFilter` := v2 @kind object;
  #L1c407c.  call `invalidateSelf`(v1) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c4082.  return @kind void;
}
procedure `void` `setUseCompatRipple`(`com.google.android.material.chip.ChipDrawable` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setUseCompatRipple:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c4094.  v0:= v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` @kind boolean;
  #L1c4098.  if v0 == v2 then goto L1c40b4;
  #L1c409c.  v1.`com.google.android.material.chip.ChipDrawable.useCompatRipple` @type ^`boolean` := v2 @kind boolean;
  #L1c40a0.  call `updateCompatRippleColor`(v1) @signature `Lcom/google/android/material/chip/ChipDrawable;.updateCompatRippleColor:()V` @kind direct;
  #L1c40a6.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L1c40ac.  v2:= temp @kind object;
  #L1c40ae.  call temp:= `onStateChange`(v1, v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.onStateChange:([I)Z` @kind virtual;
  #L1c40b4.  return @kind void;
}
procedure `boolean` `setVisible`(`com.google.android.material.chip.ChipDrawable` v2 @kind this, `boolean` v3 , `boolean` v4 ) @signature `Lcom/google/android/material/chip/ChipDrawable;.setVisible:(ZZ)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c1d58.  call temp:= `setVisible`(v2, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind super;
  #L1c1d5e.  v0:= temp;
  #L1c1d60.  call temp:= `showsChipIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsChipIcon:()Z` @kind direct;
  #L1c1d66.  v1:= temp;
  #L1c1d68.  if v1 == 0 then goto L1c1d7a;
  #L1c1d6c.  v1:= v2.`com.google.android.material.chip.ChipDrawable.chipIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c1d70.  call temp:= `setVisible`(v1, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind virtual;
  #L1c1d76.  v1:= temp;
  #L1c1d78.  v0:= v0 ^| v1 @kind int;
  #L1c1d7a.  call temp:= `showsCheckedIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCheckedIcon:()Z` @kind direct;
  #L1c1d80.  v1:= temp;
  #L1c1d82.  if v1 == 0 then goto L1c1d94;
  #L1c1d86.  v1:= v2.`com.google.android.material.chip.ChipDrawable.checkedIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c1d8a.  call temp:= `setVisible`(v1, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind virtual;
  #L1c1d90.  v1:= temp;
  #L1c1d92.  v0:= v0 ^| v1 @kind int;
  #L1c1d94.  call temp:= `showsCloseIcon`(v2) @signature `Lcom/google/android/material/chip/ChipDrawable;.showsCloseIcon:()Z` @kind direct;
  #L1c1d9a.  v1:= temp;
  #L1c1d9c.  if v1 == 0 then goto L1c1dae;
  #L1c1da0.  v1:= v2.`com.google.android.material.chip.ChipDrawable.closeIcon` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L1c1da4.  call temp:= `setVisible`(v1, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setVisible:(ZZ)Z` @kind virtual;
  #L1c1daa.  v3:= temp;
  #L1c1dac.  v0:= v0 ^| v3 @kind int;
  #L1c1dae.  if v0 == 0 then goto L1c1db8;
  #L1c1db2.  call `invalidateSelf`(v2) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.invalidateSelf:()V` @kind virtual;
  #L1c1db8.  return v0;
}
procedure `void` `unscheduleDrawable`(`com.google.android.material.chip.ChipDrawable` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object, `java.lang.Runnable` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipDrawable;.unscheduleDrawable:(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;

  #L1c40e8.  call temp:= `getCallback`(v0) @signature `Landroid/graphics/drawable/Drawable;.getCallback:()Landroid/graphics/drawable/Drawable$Callback;` @kind virtual;
  #L1c40ee.  v1:= temp @kind object;
  #L1c40f0.  if v1 == 0 then goto L1c40fa;
  #L1c40f4.  call `unscheduleDrawable`(v1, v0, v2) @signature `Landroid/graphics/drawable/Drawable$Callback;.unscheduleDrawable:(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V` @kind interface;
  #L1c40fa.  return @kind void;
}
