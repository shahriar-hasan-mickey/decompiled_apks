record `com.google.android.material.chip.ChipGroup` @kind class @AccessFlag PUBLIC extends `com.google.android.material.internal.FlowLayout` @kind class {
  `int` `com.google.android.material.chip.ChipGroup.checkedId` @AccessFlag PRIVATE;
  `com.google.android.material.chip.ChipGroup$CheckedStateTracker` `com.google.android.material.chip.ChipGroup.checkedStateTracker` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.chip.ChipGroup.chipSpacingHorizontal` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipGroup.chipSpacingVertical` @AccessFlag PRIVATE;
  `com.google.android.material.chip.ChipGroup$OnCheckedChangeListener` `com.google.android.material.chip.ChipGroup.onCheckedChangeListener` @AccessFlag PRIVATE;
  `com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener` `com.google.android.material.chip.ChipGroup.passThroughListener` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipGroup.protectFromCheckedChange` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipGroup.singleSelection` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.content.Context` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c4520.  v0:= 0I;
  #L1c4522.  call `<init>`(v1, v2, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L1c4528.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.content.Context` v2 @kind object, `android.util.AttributeSet` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c453c.  v0:= `@@com.google.android.material.R$attr.chipGroupStyle` @type ^`int`;
  #L1c4540.  call `<init>`(v1, v2, v3, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L1c4546.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.chip.ChipGroup` v8 @kind this, `android.content.Context` v9 @kind object, `android.util.AttributeSet` v10 @kind object, `int` v11 ) @signature `Lcom/google/android/material/chip/ChipGroup;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1c4558.  call `<init>`(v8, v9, v10, v11) @signature `Lcom/google/android/material/internal/FlowLayout;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L1c455e.  v0:= new `com.google.android.material.chip.ChipGroup$CheckedStateTracker`;
  #L1c4562.  v1:= 0I;
  #L1c4564.  call `<init>`(v0, v8, v1) @signature `Lcom/google/android/material/chip/ChipGroup$CheckedStateTracker;.<init>:(Lcom/google/android/material/chip/ChipGroup;Lcom/google/android/material/chip/ChipGroup$1;)V` @kind direct;
  #L1c456a.  v8.`com.google.android.material.chip.ChipGroup.checkedStateTracker` @type ^`com.google.android.material.chip.ChipGroup$CheckedStateTracker` := v0 @kind object;
  #L1c456e.  v0:= new `com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener`;
  #L1c4572.  call `<init>`(v0, v8, v1) @signature `Lcom/google/android/material/chip/ChipGroup$PassThroughHierarchyChangeListener;.<init>:(Lcom/google/android/material/chip/ChipGroup;Lcom/google/android/material/chip/ChipGroup$1;)V` @kind direct;
  #L1c4578.  v8.`com.google.android.material.chip.ChipGroup.passThroughListener` @type ^`com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener` := v0 @kind object;
  #L1c457c.  v0:= -1I;
  #L1c457e.  v8.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int` := v0;
  #L1c4582.  v1:= 0I;
  #L1c4584.  v8.`com.google.android.material.chip.ChipGroup.protectFromCheckedChange` @type ^`boolean` := v1 @kind boolean;
  #L1c4588.  v4:= `@@com.google.android.material.R$styleable.ChipGroup` @type ^`int`[] @kind object;
  #L1c458c.  v6:= `@@com.google.android.material.R$style.Widget_MaterialComponents_ChipGroup` @type ^`int`;
  #L1c4590.  v7:= new `int`[v1];
  #L1c4594.  v2:= v9 @kind object;
  #L1c4596.  v3:= v10 @kind object;
  #L1c4598.  v5:= v11;
  #L1c459a.  call temp:= `obtainStyledAttributes`(v2, v3, v4, v5, v6, v7) @signature `Lcom/google/android/material/internal/ThemeEnforcement;.obtainStyledAttributes:(Landroid/content/Context;Landroid/util/AttributeSet;[III[I)Landroid/content/res/TypedArray;` @kind static;
  #L1c45a0.  v9:= temp @kind object;
  #L1c45a2.  v10:= `@@com.google.android.material.R$styleable.ChipGroup_chipSpacing` @type ^`int`;
  #L1c45a6.  call temp:= `getDimensionPixelOffset`(v9, v10, v1) @signature `Landroid/content/res/TypedArray;.getDimensionPixelOffset:(II)I` @kind virtual;
  #L1c45ac.  v10:= temp;
  #L1c45ae.  v11:= `@@com.google.android.material.R$styleable.ChipGroup_chipSpacingHorizontal` @type ^`int`;
  #L1c45b2.  call temp:= `getDimensionPixelOffset`(v9, v11, v10) @signature `Landroid/content/res/TypedArray;.getDimensionPixelOffset:(II)I` @kind virtual;
  #L1c45b8.  v11:= temp;
  #L1c45ba.  call `setChipSpacingHorizontal`(v8, v11) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingHorizontal:(I)V` @kind virtual;
  #L1c45c0.  v11:= `@@com.google.android.material.R$styleable.ChipGroup_chipSpacingVertical` @type ^`int`;
  #L1c45c4.  call temp:= `getDimensionPixelOffset`(v9, v11, v10) @signature `Landroid/content/res/TypedArray;.getDimensionPixelOffset:(II)I` @kind virtual;
  #L1c45ca.  v10:= temp;
  #L1c45cc.  call `setChipSpacingVertical`(v8, v10) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingVertical:(I)V` @kind virtual;
  #L1c45d2.  v10:= `@@com.google.android.material.R$styleable.ChipGroup_singleLine` @type ^`int`;
  #L1c45d6.  call temp:= `getBoolean`(v9, v10, v1) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L1c45dc.  v10:= temp;
  #L1c45de.  call `setSingleLine`(v8, v10) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleLine:(Z)V` @kind virtual;
  #L1c45e4.  v10:= `@@com.google.android.material.R$styleable.ChipGroup_singleSelection` @type ^`int`;
  #L1c45e8.  call temp:= `getBoolean`(v9, v10, v1) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L1c45ee.  v10:= temp;
  #L1c45f0.  call `setSingleSelection`(v8, v10) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleSelection:(Z)V` @kind virtual;
  #L1c45f6.  v10:= `@@com.google.android.material.R$styleable.ChipGroup_checkedChip` @type ^`int`;
  #L1c45fa.  call temp:= `getResourceId`(v9, v10, v0) @signature `Landroid/content/res/TypedArray;.getResourceId:(II)I` @kind virtual;
  #L1c4600.  v10:= temp;
  #L1c4602.  if v10 == v0 then goto L1c460a;
  #L1c4606.  v8.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int` := v10;
  #L1c460a.  call `recycle`(v9) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L1c4610.  v9:= v8.`com.google.android.material.chip.ChipGroup.passThroughListener` @type ^`com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener` @kind object;
  #L1c4614.  call `setOnHierarchyChangeListener`(v8, v9) @signature `Landroid/view/ViewGroup;.setOnHierarchyChangeListener:(Landroid/view/ViewGroup$OnHierarchyChangeListener;)V` @kind super;
  #L1c461a.  return @kind void;
}
procedure `boolean` `a`(`com.google.android.material.chip.ChipGroup` v0 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.a:(Lcom/google/android/material/chip/ChipGroup;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c440c.  v0:= v0.`com.google.android.material.chip.ChipGroup.protectFromCheckedChange` @type ^`boolean` @kind boolean;
  #L1c4410.  return v0;
}
procedure `int` `b`(`com.google.android.material.chip.ChipGroup` v0 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.b:(Lcom/google/android/material/chip/ChipGroup;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c44b4.  v0:= v0.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int`;
  #L1c44b8.  return v0;
}
procedure `boolean` `c`(`com.google.android.material.chip.ChipGroup` v0 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.c:(Lcom/google/android/material/chip/ChipGroup;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c4424.  v0:= v0.`com.google.android.material.chip.ChipGroup.singleSelection` @type ^`boolean` @kind boolean;
  #L1c4428.  return v0;
}
procedure `void` `d`(`com.google.android.material.chip.ChipGroup` v0 @kind object, `int` v1 , `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.d:(Lcom/google/android/material/chip/ChipGroup;IZ)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c462c.  call `setCheckedStateForView`(v0, v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedStateForView:(IZ)V` @kind direct;
  #L1c4632.  return @kind void;
}
procedure `void` `e`(`com.google.android.material.chip.ChipGroup` v0 @kind object, `int` v1 ) @signature `Lcom/google/android/material/chip/ChipGroup;.e:(Lcom/google/android/material/chip/ChipGroup;I)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c4644.  call `setCheckedId`(v0, v1) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(I)V` @kind direct;
  #L1c464a.  return @kind void;
}
procedure `com.google.android.material.chip.ChipGroup$CheckedStateTracker` `f`(`com.google.android.material.chip.ChipGroup` v0 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.f:(Lcom/google/android/material/chip/ChipGroup;)Lcom/google/android/material/chip/ChipGroup$CheckedStateTracker;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c449c.  v0:= v0.`com.google.android.material.chip.ChipGroup.checkedStateTracker` @type ^`com.google.android.material.chip.ChipGroup$CheckedStateTracker` @kind object;
  #L1c44a0.  return v0 @kind object;
}
procedure `void` `setCheckedId`(`com.google.android.material.chip.ChipGroup` v2 @kind this, `int` v3 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1c4784.  v2.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int` := v3;
  #L1c4788.  v0:= v2.`com.google.android.material.chip.ChipGroup.onCheckedChangeListener` @type ^`com.google.android.material.chip.ChipGroup$OnCheckedChangeListener` @kind object;
  #L1c478c.  if v0 == 0 then goto L1c479e;
  #L1c4790.  v1:= v2.`com.google.android.material.chip.ChipGroup.singleSelection` @type ^`boolean` @kind boolean;
  #L1c4794.  if v1 == 0 then goto L1c479e;
  #L1c4798.  call `onCheckedChanged`(v0, v2, v3) @signature `Lcom/google/android/material/chip/ChipGroup$OnCheckedChangeListener;.onCheckedChanged:(Lcom/google/android/material/chip/ChipGroup;I)V` @kind interface;
  #L1c479e.  return @kind void;
}
procedure `void` `setCheckedStateForView`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 , `boolean` v3 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedStateForView:(IZ)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1c47b0.  call temp:= `findViewById`(v1, v2) @signature `Landroid/view/ViewGroup;.findViewById:(I)Landroid/view/View;` @kind virtual;
  #L1c47b6.  v2:= temp @kind object;
  #L1c47b8.  v0:= instanceof @variable v2 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L1c47bc.  if v0 == 0 then goto L1c47d6;
  #L1c47c0.  v0:= 1I;
  #L1c47c2.  v1.`com.google.android.material.chip.ChipGroup.protectFromCheckedChange` @type ^`boolean` := v0 @kind boolean;
  #L1c47c6.  v2:= (`com.google.android.material.chip.Chip`) v2 @kind object;
  #L1c47ca.  call `setChecked`(v2, v3) @signature `Lcom/google/android/material/chip/Chip;.setChecked:(Z)V` @kind virtual;
  #L1c47d0.  v2:= 0I;
  #L1c47d2.  v1.`com.google.android.material.chip.ChipGroup.protectFromCheckedChange` @type ^`boolean` := v2 @kind boolean;
  #L1c47d6.  return @kind void;
}
procedure `void` `addView`(`com.google.android.material.chip.ChipGroup` v3 @kind this, `android.view.View` v4 @kind object, `int` v5 , `android.view.ViewGroup$LayoutParams` v6 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.addView:(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c465c.  v0:= instanceof @variable v4 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L1c4660.  if v0 == 0 then goto L1c469e;
  #L1c4664.  v0:= v4 @kind object;
  #L1c4666.  v0:= (`com.google.android.material.chip.Chip`) v0 @kind object;
  #L1c466a.  call temp:= `isChecked`(v0) @signature `Landroid/widget/CheckBox;.isChecked:()Z` @kind virtual;
  #L1c4670.  v1:= temp;
  #L1c4672.  if v1 == 0 then goto L1c469e;
  #L1c4676.  v1:= v3.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int`;
  #L1c467a.  v2:= -1I;
  #L1c467c.  if v1 == v2 then goto L1c4690;
  #L1c4680.  v2:= v3.`com.google.android.material.chip.ChipGroup.singleSelection` @type ^`boolean` @kind boolean;
  #L1c4684.  if v2 == 0 then goto L1c4690;
  #L1c4688.  v2:= 0I;
  #L1c468a.  call `setCheckedStateForView`(v3, v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedStateForView:(IZ)V` @kind direct;
  #L1c4690.  call temp:= `getId`(v0) @signature `Landroid/widget/CheckBox;.getId:()I` @kind virtual;
  #L1c4696.  v0:= temp;
  #L1c4698.  call `setCheckedId`(v3, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(I)V` @kind direct;
  #L1c469e.  call `addView`(v3, v4, v5, v6) @signature `Landroid/view/ViewGroup;.addView:(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;)V` @kind super;
  #L1c46a4.  return @kind void;
}
procedure `void` `check`(`com.google.android.material.chip.ChipGroup` v3 @kind this, `int` v4 ) @signature `Lcom/google/android/material/chip/ChipGroup;.check:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c46b8.  v0:= v3.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int`;
  #L1c46bc.  if v4 != v0 then goto L1c46c2;
  #L1c46c0.  return @kind void;
  #L1c46c2.  v1:= -1I;
  #L1c46c4.  if v0 == v1 then goto L1c46d8;
  #L1c46c8.  v2:= v3.`com.google.android.material.chip.ChipGroup.singleSelection` @type ^`boolean` @kind boolean;
  #L1c46cc.  if v2 == 0 then goto L1c46d8;
  #L1c46d0.  v2:= 0I;
  #L1c46d2.  call `setCheckedStateForView`(v3, v0, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedStateForView:(IZ)V` @kind direct;
  #L1c46d8.  if v4 == v1 then goto L1c46e4;
  #L1c46dc.  v0:= 1I;
  #L1c46de.  call `setCheckedStateForView`(v3, v4, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedStateForView:(IZ)V` @kind direct;
  #L1c46e4.  call `setCheckedId`(v3, v4) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(I)V` @kind direct;
  #L1c46ea.  return @kind void;
}
procedure `boolean` `checkLayoutParams`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.view.ViewGroup$LayoutParams` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.checkLayoutParams:(Landroid/view/ViewGroup$LayoutParams;)Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1c443c.  call temp:= `checkLayoutParams`(v1, v2) @signature `Landroid/view/ViewGroup;.checkLayoutParams:(Landroid/view/ViewGroup$LayoutParams;)Z` @kind super;
  #L1c4442.  v0:= temp;
  #L1c4444.  if v0 == 0 then goto L1c4454;
  #L1c4448.  v2:= instanceof @variable v2 @type ^`com.google.android.material.chip.ChipGroup$LayoutParams` @kind boolean;
  #L1c444c.  if v2 == 0 then goto L1c4454;
  #L1c4450.  v2:= 1I;
  #L1c4452.  goto L1c4456;
  #L1c4454.  v2:= 0I;
  #L1c4456.  return v2;
}
procedure `void` `clearCheck`(`com.google.android.material.chip.ChipGroup` v4 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.clearCheck:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c46fc.  v0:= 1I;
  #L1c46fe.  v4.`com.google.android.material.chip.ChipGroup.protectFromCheckedChange` @type ^`boolean` := v0 @kind boolean;
  #L1c4702.  v0:= 0I;
  #L1c4704.  v1:= 0I;
  #L1c4706.  call temp:= `getChildCount`(v4) @signature `Landroid/view/ViewGroup;.getChildCount:()I` @kind virtual;
  #L1c470c.  v2:= temp;
  #L1c470e.  if v1 >= v2 then goto L1c4732;
  #L1c4712.  call temp:= `getChildAt`(v4, v1) @signature `Landroid/view/ViewGroup;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L1c4718.  v2:= temp @kind object;
  #L1c471a.  v3:= instanceof @variable v2 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L1c471e.  if v3 == 0 then goto L1c472c;
  #L1c4722.  v2:= (`com.google.android.material.chip.Chip`) v2 @kind object;
  #L1c4726.  call `setChecked`(v2, v0) @signature `Lcom/google/android/material/chip/Chip;.setChecked:(Z)V` @kind virtual;
  #L1c472c.  v1:= v1 + 1;
  #L1c4730.  goto L1c4706;
  #L1c4732.  v4.`com.google.android.material.chip.ChipGroup.protectFromCheckedChange` @type ^`boolean` := v0 @kind boolean;
  #L1c4736.  v0:= -1I;
  #L1c4738.  call `setCheckedId`(v4, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(I)V` @kind direct;
  #L1c473e.  return @kind void;
}
procedure `android.view.ViewGroup$LayoutParams` `generateDefaultLayoutParams`(`com.google.android.material.chip.ChipGroup` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.generateDefaultLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1c43ac.  v0:= new `com.google.android.material.chip.ChipGroup$LayoutParams`;
  #L1c43b0.  v1:= -2I;
  #L1c43b2.  call `<init>`(v0, v1, v1) @signature `Lcom/google/android/material/chip/ChipGroup$LayoutParams;.<init>:(II)V` @kind direct;
  #L1c43b8.  return v0 @kind object;
}
procedure `android.view.ViewGroup$LayoutParams` `generateLayoutParams`(`com.google.android.material.chip.ChipGroup` v2 @kind this, `android.util.AttributeSet` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.generateLayoutParams:(Landroid/util/AttributeSet;)Landroid/view/ViewGroup$LayoutParams;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c43cc.  v0:= new `com.google.android.material.chip.ChipGroup$LayoutParams`;
  #L1c43d0.  call temp:= `getContext`(v2) @signature `Landroid/view/ViewGroup;.getContext:()Landroid/content/Context;` @kind virtual;
  #L1c43d6.  v1:= temp @kind object;
  #L1c43d8.  call `<init>`(v0, v1, v3) @signature `Lcom/google/android/material/chip/ChipGroup$LayoutParams;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L1c43de.  return v0 @kind object;
}
procedure `android.view.ViewGroup$LayoutParams` `generateLayoutParams`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.view.ViewGroup$LayoutParams` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.generateLayoutParams:(Landroid/view/ViewGroup$LayoutParams;)Landroid/view/ViewGroup$LayoutParams;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1c43f0.  v0:= new `com.google.android.material.chip.ChipGroup$LayoutParams`;
  #L1c43f4.  call `<init>`(v0, v2) @signature `Lcom/google/android/material/chip/ChipGroup$LayoutParams;.<init>:(Landroid/view/ViewGroup$LayoutParams;)V` @kind direct;
  #L1c43fa.  return v0 @kind object;
}
procedure `int` `getCheckedChipId`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.getCheckedChipId:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c44cc.  v0:= v1.`com.google.android.material.chip.ChipGroup.singleSelection` @type ^`boolean` @kind boolean;
  #L1c44d0.  if v0 == 0 then goto L1c44da;
  #L1c44d4.  v0:= v1.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int`;
  #L1c44d8.  goto L1c44dc;
  #L1c44da.  v0:= -1I;
  #L1c44dc.  return v0;
}
procedure `int` `getChipSpacingHorizontal`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.getChipSpacingHorizontal:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c44f0.  v0:= v1.`com.google.android.material.chip.ChipGroup.chipSpacingHorizontal` @type ^`int`;
  #L1c44f4.  return v0;
}
procedure `int` `getChipSpacingVertical`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.getChipSpacingVertical:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c4508.  v0:= v1.`com.google.android.material.chip.ChipGroup.chipSpacingVertical` @type ^`int`;
  #L1c450c.  return v0;
}
procedure `boolean` `isSingleLine`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.isSingleLine:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c4468.  call temp:= `isSingleLine`(v1) @signature `Lcom/google/android/material/internal/FlowLayout;.isSingleLine:()Z` @kind super;
  #L1c446e.  v0:= temp;
  #L1c4470.  return v0;
}
procedure `boolean` `isSingleSelection`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.isSingleSelection:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c4484.  v0:= v1.`com.google.android.material.chip.ChipGroup.singleSelection` @type ^`boolean` @kind boolean;
  #L1c4488.  return v0;
}
procedure `void` `onFinishInflate`(`com.google.android.material.chip.ChipGroup` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.onFinishInflate:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1c4750.  call `onFinishInflate`(v2) @signature `Landroid/view/ViewGroup;.onFinishInflate:()V` @kind super;
  #L1c4756.  v0:= v2.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int`;
  #L1c475a.  v1:= -1I;
  #L1c475c.  if v0 == v1 then goto L1c4772;
  #L1c4760.  v1:= 1I;
  #L1c4762.  call `setCheckedStateForView`(v2, v0, v1) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedStateForView:(IZ)V` @kind direct;
  #L1c4768.  v0:= v2.`com.google.android.material.chip.ChipGroup.checkedId` @type ^`int`;
  #L1c476c.  call `setCheckedId`(v2, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(I)V` @kind direct;
  #L1c4772.  return @kind void;
}
procedure `void` `setChipSpacing`(`com.google.android.material.chip.ChipGroup` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacing:(I)V` @AccessFlag PUBLIC {
    temp;

  #L1c47e8.  call `setChipSpacingHorizontal`(v0, v1) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingHorizontal:(I)V` @kind virtual;
  #L1c47ee.  call `setChipSpacingVertical`(v0, v1) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingVertical:(I)V` @kind virtual;
  #L1c47f4.  return @kind void;
}
procedure `void` `setChipSpacingHorizontal`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingHorizontal:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c4808.  v0:= v1.`com.google.android.material.chip.ChipGroup.chipSpacingHorizontal` @type ^`int`;
  #L1c480c.  if v0 == v2 then goto L1c4820;
  #L1c4810.  v1.`com.google.android.material.chip.ChipGroup.chipSpacingHorizontal` @type ^`int` := v2;
  #L1c4814.  call `setItemSpacing`(v1, v2) @signature `Lcom/google/android/material/internal/FlowLayout;.setItemSpacing:(I)V` @kind virtual;
  #L1c481a.  call `requestLayout`(v1) @signature `Landroid/view/ViewGroup;.requestLayout:()V` @kind virtual;
  #L1c4820.  return @kind void;
}
procedure `void` `setChipSpacingHorizontalResource`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingHorizontalResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c4834.  call temp:= `getResources`(v1) @signature `Landroid/view/ViewGroup;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c483a.  v0:= temp @kind object;
  #L1c483c.  call temp:= `getDimensionPixelOffset`(v0, v2) @signature `Landroid/content/res/Resources;.getDimensionPixelOffset:(I)I` @kind virtual;
  #L1c4842.  v2:= temp;
  #L1c4844.  call `setChipSpacingHorizontal`(v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingHorizontal:(I)V` @kind virtual;
  #L1c484a.  return @kind void;
}
procedure `void` `setChipSpacingResource`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c485c.  call temp:= `getResources`(v1) @signature `Landroid/view/ViewGroup;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c4862.  v0:= temp @kind object;
  #L1c4864.  call temp:= `getDimensionPixelOffset`(v0, v2) @signature `Landroid/content/res/Resources;.getDimensionPixelOffset:(I)I` @kind virtual;
  #L1c486a.  v2:= temp;
  #L1c486c.  call `setChipSpacing`(v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacing:(I)V` @kind virtual;
  #L1c4872.  return @kind void;
}
procedure `void` `setChipSpacingVertical`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingVertical:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c4884.  v0:= v1.`com.google.android.material.chip.ChipGroup.chipSpacingVertical` @type ^`int`;
  #L1c4888.  if v0 == v2 then goto L1c489c;
  #L1c488c.  v1.`com.google.android.material.chip.ChipGroup.chipSpacingVertical` @type ^`int` := v2;
  #L1c4890.  call `setLineSpacing`(v1, v2) @signature `Lcom/google/android/material/internal/FlowLayout;.setLineSpacing:(I)V` @kind virtual;
  #L1c4896.  call `requestLayout`(v1) @signature `Landroid/view/ViewGroup;.requestLayout:()V` @kind virtual;
  #L1c489c.  return @kind void;
}
procedure `void` `setChipSpacingVerticalResource`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingVerticalResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c48b0.  call temp:= `getResources`(v1) @signature `Landroid/view/ViewGroup;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c48b6.  v0:= temp @kind object;
  #L1c48b8.  call temp:= `getDimensionPixelOffset`(v0, v2) @signature `Landroid/content/res/Resources;.getDimensionPixelOffset:(I)I` @kind virtual;
  #L1c48be.  v2:= temp;
  #L1c48c0.  call `setChipSpacingVertical`(v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingVertical:(I)V` @kind virtual;
  #L1c48c6.  return @kind void;
}
procedure `void` `setDividerDrawableHorizontal`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.setDividerDrawableHorizontal:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c48d8.  v2:= new `java.lang.UnsupportedOperationException`;
  #L1c48dc.  v0:= "Changing divider drawables have no effect. ChipGroup do not use divider drawables as spacing." @kind object;
  #L1c48e0.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c48e6.  throw v2;
}
procedure `void` `setDividerDrawableVertical`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.setDividerDrawableVertical:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c48f8.  v2:= new `java.lang.UnsupportedOperationException`;
  #L1c48fc.  v0:= "Changing divider drawables have no effect. ChipGroup do not use divider drawables as spacing." @kind object;
  #L1c4900.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c4906.  throw v2;
}
procedure `void` `setFlexWrap`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setFlexWrap:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c4918.  v2:= new `java.lang.UnsupportedOperationException`;
  #L1c491c.  v0:= "Changing flex wrap not allowed. ChipGroup exposes a singleLine attribute instead." @kind object;
  #L1c4920.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c4926.  throw v2;
}
procedure `void` `setOnCheckedChangeListener`(`com.google.android.material.chip.ChipGroup` v0 @kind this, `com.google.android.material.chip.ChipGroup$OnCheckedChangeListener` v1 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.setOnCheckedChangeListener:(Lcom/google/android/material/chip/ChipGroup$OnCheckedChangeListener;)V` @AccessFlag PUBLIC {
    temp;

  #L1c4938.  v0.`com.google.android.material.chip.ChipGroup.onCheckedChangeListener` @type ^`com.google.android.material.chip.ChipGroup$OnCheckedChangeListener` := v1 @kind object;
  #L1c493c.  return @kind void;
}
procedure `void` `setOnHierarchyChangeListener`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.view.ViewGroup$OnHierarchyChangeListener` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.setOnHierarchyChangeListener:(Landroid/view/ViewGroup$OnHierarchyChangeListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c4950.  v0:= v1.`com.google.android.material.chip.ChipGroup.passThroughListener` @type ^`com.google.android.material.chip.ChipGroup$PassThroughHierarchyChangeListener` @kind object;
  #L1c4954.  call temp:= `a`(v0, v2) @signature `Lcom/google/android/material/chip/ChipGroup$PassThroughHierarchyChangeListener;.a:(Lcom/google/android/material/chip/ChipGroup$PassThroughHierarchyChangeListener;Landroid/view/ViewGroup$OnHierarchyChangeListener;)Landroid/view/ViewGroup$OnHierarchyChangeListener;` @kind static;
  #L1c495a.  return @kind void;
}
procedure `void` `setShowDividerHorizontal`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setShowDividerHorizontal:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c496c.  v2:= new `java.lang.UnsupportedOperationException`;
  #L1c4970.  v0:= "Changing divider modes has no effect. ChipGroup do not use divider drawables as spacing." @kind object;
  #L1c4974.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c497a.  throw v2;
}
procedure `void` `setShowDividerVertical`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setShowDividerVertical:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c498c.  v2:= new `java.lang.UnsupportedOperationException`;
  #L1c4990.  v0:= "Changing divider modes has no effect. ChipGroup do not use divider drawables as spacing." @kind object;
  #L1c4994.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c499a.  throw v2;
}
procedure `void` `setSingleLine`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleLine:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c49c4.  call temp:= `getResources`(v1) @signature `Landroid/view/ViewGroup;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c49ca.  v0:= temp @kind object;
  #L1c49cc.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L1c49d2.  v2:= temp;
  #L1c49d4.  call `setSingleLine`(v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleLine:(Z)V` @kind virtual;
  #L1c49da.  return @kind void;
}
procedure `void` `setSingleLine`(`com.google.android.material.chip.ChipGroup` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleLine:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L1c49ac.  call `setSingleLine`(v0, v1) @signature `Lcom/google/android/material/internal/FlowLayout;.setSingleLine:(Z)V` @kind super;
  #L1c49b2.  return @kind void;
}
procedure `void` `setSingleSelection`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleSelection:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c4a10.  call temp:= `getResources`(v1) @signature `Landroid/view/ViewGroup;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c4a16.  v0:= temp @kind object;
  #L1c4a18.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L1c4a1e.  v2:= temp;
  #L1c4a20.  call `setSingleSelection`(v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleSelection:(Z)V` @kind virtual;
  #L1c4a26.  return @kind void;
}
procedure `void` `setSingleSelection`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleSelection:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c49ec.  v0:= v1.`com.google.android.material.chip.ChipGroup.singleSelection` @type ^`boolean` @kind boolean;
  #L1c49f0.  if v0 == v2 then goto L1c49fe;
  #L1c49f4.  v1.`com.google.android.material.chip.ChipGroup.singleSelection` @type ^`boolean` := v2 @kind boolean;
  #L1c49f8.  call `clearCheck`(v1) @signature `Lcom/google/android/material/chip/ChipGroup;.clearCheck:()V` @kind virtual;
  #L1c49fe.  return @kind void;
}
