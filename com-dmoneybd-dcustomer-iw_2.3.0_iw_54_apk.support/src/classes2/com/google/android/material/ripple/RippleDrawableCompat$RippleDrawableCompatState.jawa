record `com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState` @kind class @AccessFlag FINAL extends `android.graphics.drawable.Drawable$ConstantState` @kind class {
  `com.google.android.material.shape.MaterialShapeDrawable` `com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState.a` @AccessFlag ;
  `boolean` `com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState.b` @AccessFlag ;
}
procedure `void` `<init>`(`com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState` v1 @kind this, `com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState` v2 @kind object) @signature `Lcom/google/android/material/ripple/RippleDrawableCompat$RippleDrawableCompatState;.<init>:(Lcom/google/android/material/ripple/RippleDrawableCompat$RippleDrawableCompatState;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1db038.  call `<init>`(v1) @signature `Landroid/graphics/drawable/Drawable$ConstantState;.<init>:()V` @kind direct;
  #L1db03e.  v0:= v2.`com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState.a` @type ^`com.google.android.material.shape.MaterialShapeDrawable` @kind object;
  #L1db042.  call temp:= `getConstantState`(v0) @signature `Lcom/google/android/material/shape/MaterialShapeDrawable;.getConstantState:()Landroid/graphics/drawable/Drawable$ConstantState;` @kind virtual;
  #L1db048.  v0:= temp @kind object;
  #L1db04a.  call temp:= `newDrawable`(v0) @signature `Landroid/graphics/drawable/Drawable$ConstantState;.newDrawable:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L1db050.  v0:= temp @kind object;
  #L1db052.  v0:= (`com.google.android.material.shape.MaterialShapeDrawable`) v0 @kind object;
  #L1db056.  v1.`com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState.a` @type ^`com.google.android.material.shape.MaterialShapeDrawable` := v0 @kind object;
  #L1db05a.  v2:= v2.`com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState.b` @type ^`boolean` @kind boolean;
  #L1db05e.  v1.`com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState.b` @type ^`boolean` := v2 @kind boolean;
  #L1db062.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState` v0 @kind this, `com.google.android.material.shape.MaterialShapeDrawable` v1 @kind object) @signature `Lcom/google/android/material/ripple/RippleDrawableCompat$RippleDrawableCompatState;.<init>:(Lcom/google/android/material/shape/MaterialShapeDrawable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1db074.  call `<init>`(v0) @signature `Landroid/graphics/drawable/Drawable$ConstantState;.<init>:()V` @kind direct;
  #L1db07a.  v0.`com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState.a` @type ^`com.google.android.material.shape.MaterialShapeDrawable` := v1 @kind object;
  #L1db07e.  v1:= 0I;
  #L1db080.  v0.`com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState.b` @type ^`boolean` := v1 @kind boolean;
  #L1db084.  return @kind void;
}
procedure `int` `getChangingConfigurations`(`com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState` v1 @kind this) @signature `Lcom/google/android/material/ripple/RippleDrawableCompat$RippleDrawableCompatState;.getChangingConfigurations:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1db024.  v0:= 0I;
  #L1db026.  return v0;
}
procedure `android.graphics.drawable.Drawable` `newDrawable`(`com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState` v1 @kind this) @signature `Lcom/google/android/material/ripple/RippleDrawableCompat$RippleDrawableCompatState;.newDrawable:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1dafe0.  call temp:= `newDrawable`(v1) @signature `Lcom/google/android/material/ripple/RippleDrawableCompat$RippleDrawableCompatState;.newDrawable:()Lcom/google/android/material/ripple/RippleDrawableCompat;` @kind virtual;
  #L1dafe6.  v0:= temp @kind object;
  #L1dafe8.  return v0 @kind object;
}
procedure `com.google.android.material.ripple.RippleDrawableCompat` `newDrawable`(`com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState` v3 @kind this) @signature `Lcom/google/android/material/ripple/RippleDrawableCompat$RippleDrawableCompatState;.newDrawable:()Lcom/google/android/material/ripple/RippleDrawableCompat;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1daffc.  v0:= new `com.google.android.material.ripple.RippleDrawableCompat`;
  #L1db000.  v1:= new `com.google.android.material.ripple.RippleDrawableCompat$RippleDrawableCompatState`;
  #L1db004.  call `<init>`(v1, v3) @signature `Lcom/google/android/material/ripple/RippleDrawableCompat$RippleDrawableCompatState;.<init>:(Lcom/google/android/material/ripple/RippleDrawableCompat$RippleDrawableCompatState;)V` @kind direct;
  #L1db00a.  v2:= 0I;
  #L1db00c.  call `<init>`(v0, v1, v2) @signature `Lcom/google/android/material/ripple/RippleDrawableCompat;.<init>:(Lcom/google/android/material/ripple/RippleDrawableCompat$RippleDrawableCompatState;Lcom/google/android/material/ripple/RippleDrawableCompat$1;)V` @kind direct;
  #L1db012.  return v0 @kind object;
}
