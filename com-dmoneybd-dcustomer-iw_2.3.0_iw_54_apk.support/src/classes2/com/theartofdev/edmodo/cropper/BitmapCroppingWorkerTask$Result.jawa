record `com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result` @kind class @AccessFlag FINAL {
  `java.lang.Exception` `com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result.a` @AccessFlag FINAL;
  `boolean` `com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result.b` @AccessFlag FINAL;
  `android.graphics.Bitmap` `com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result.bitmap` @AccessFlag PUBLIC_FINAL;
  `int` `com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result.c` @AccessFlag FINAL;
  `android.net.Uri` `com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result.uri` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result` v0 @kind this, `android.graphics.Bitmap` v1 @kind object, `int` v2 ) @signature `Lcom/theartofdev/edmodo/cropper/BitmapCroppingWorkerTask$Result;.<init>:(Landroid/graphics/Bitmap;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2bd4f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bd4fa.  v0.`com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result.bitmap` @type ^`android.graphics.Bitmap` := v1 @kind object;
  #L2bd4fe.  v1:= 0I;
  #L2bd500.  v0.`com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result.uri` @type ^`android.net.Uri` := v1 @kind object;
  #L2bd504.  v0.`com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result.a` @type ^`java.lang.Exception` := v1 @kind object;
  #L2bd508.  v1:= 0I;
  #L2bd50a.  v0.`com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result.b` @type ^`boolean` := v1 @kind boolean;
  #L2bd50e.  v0.`com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result.c` @type ^`int` := v2;
  #L2bd512.  return @kind void;
}
procedure `void` `<init>`(`com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result` v1 @kind this, `android.net.Uri` v2 @kind object, `int` v3 ) @signature `Lcom/theartofdev/edmodo/cropper/BitmapCroppingWorkerTask$Result;.<init>:(Landroid/net/Uri;I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2bd524.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bd52a.  v0:= 0I;
  #L2bd52c.  v1.`com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result.bitmap` @type ^`android.graphics.Bitmap` := v0 @kind object;
  #L2bd530.  v1.`com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result.uri` @type ^`android.net.Uri` := v2 @kind object;
  #L2bd534.  v1.`com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result.a` @type ^`java.lang.Exception` := v0 @kind object;
  #L2bd538.  v2:= 1I;
  #L2bd53a.  v1.`com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result.b` @type ^`boolean` := v2 @kind boolean;
  #L2bd53e.  v1.`com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result.c` @type ^`int` := v3;
  #L2bd542.  return @kind void;
}
procedure `void` `<init>`(`com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result` v1 @kind this, `java.lang.Exception` v2 @kind object, `boolean` v3 ) @signature `Lcom/theartofdev/edmodo/cropper/BitmapCroppingWorkerTask$Result;.<init>:(Ljava/lang/Exception;Z)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2bd554.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bd55a.  v0:= 0I;
  #L2bd55c.  v1.`com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result.bitmap` @type ^`android.graphics.Bitmap` := v0 @kind object;
  #L2bd560.  v1.`com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result.uri` @type ^`android.net.Uri` := v0 @kind object;
  #L2bd564.  v1.`com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result.a` @type ^`java.lang.Exception` := v2 @kind object;
  #L2bd568.  v1.`com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result.b` @type ^`boolean` := v3 @kind boolean;
  #L2bd56c.  v2:= 1I;
  #L2bd56e.  v1.`com.theartofdev.edmodo.cropper.BitmapCroppingWorkerTask$Result.c` @type ^`int` := v2;
  #L2bd572.  return @kind void;
}
