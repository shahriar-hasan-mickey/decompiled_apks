record `com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result` @kind class @AccessFlag PUBLIC_FINAL {
  `android.graphics.Bitmap` `com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result.bitmap` @AccessFlag PUBLIC_FINAL;
  `int` `com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result.degreesRotated` @AccessFlag PUBLIC_FINAL;
  `java.lang.Exception` `com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result.error` @AccessFlag PUBLIC_FINAL;
  `int` `com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result.loadSampleSize` @AccessFlag PUBLIC_FINAL;
  `android.net.Uri` `com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result.uri` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result` v0 @kind this, `android.net.Uri` v1 @kind object, `android.graphics.Bitmap` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/theartofdev/edmodo/cropper/BitmapLoadingWorkerTask$Result;.<init>:(Landroid/net/Uri;Landroid/graphics/Bitmap;II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2bd8a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bd8aa.  v0.`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result.uri` @type ^`android.net.Uri` := v1 @kind object;
  #L2bd8ae.  v0.`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result.bitmap` @type ^`android.graphics.Bitmap` := v2 @kind object;
  #L2bd8b2.  v0.`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result.loadSampleSize` @type ^`int` := v3;
  #L2bd8b6.  v0.`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result.degreesRotated` @type ^`int` := v4;
  #L2bd8ba.  v1:= 0I;
  #L2bd8bc.  v0.`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result.error` @type ^`java.lang.Exception` := v1 @kind object;
  #L2bd8c0.  return @kind void;
}
procedure `void` `<init>`(`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result` v0 @kind this, `android.net.Uri` v1 @kind object, `java.lang.Exception` v2 @kind object) @signature `Lcom/theartofdev/edmodo/cropper/BitmapLoadingWorkerTask$Result;.<init>:(Landroid/net/Uri;Ljava/lang/Exception;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2bd8d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bd8da.  v0.`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result.uri` @type ^`android.net.Uri` := v1 @kind object;
  #L2bd8de.  v1:= 0I;
  #L2bd8e0.  v0.`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result.bitmap` @type ^`android.graphics.Bitmap` := v1 @kind object;
  #L2bd8e4.  v1:= 0I;
  #L2bd8e6.  v0.`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result.loadSampleSize` @type ^`int` := v1;
  #L2bd8ea.  v0.`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result.degreesRotated` @type ^`int` := v1;
  #L2bd8ee.  v0.`com.theartofdev.edmodo.cropper.BitmapLoadingWorkerTask$Result.error` @type ^`java.lang.Exception` := v2 @kind object;
  #L2bd8f2.  return @kind void;
}
