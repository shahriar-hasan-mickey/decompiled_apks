record `co.infinum.goldfinger.crypto.impl.Base64CipherCrypter` @kind class @AccessFlag PUBLIC extends `co.infinum.goldfinger.crypto.CipherCrypter` @kind interface {
}
procedure `void` `<init>`(`co.infinum.goldfinger.crypto.impl.Base64CipherCrypter` v0 @kind this) @signature `Lco/infinum/goldfinger/crypto/impl/Base64CipherCrypter;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b0f68.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b0f6e.  return @kind void;
}
procedure `java.lang.String` `decrypt`(`co.infinum.goldfinger.crypto.impl.Base64CipherCrypter` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lco/infinum/goldfinger/crypto/impl/Base64CipherCrypter;.decrypt:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2b0ea0.  v1:= (`javax.crypto.Cipher`) v1 @kind object;
  #L2b0ea4.  call temp:= `decrypt`(v0, v1, v2) @signature `Lco/infinum/goldfinger/crypto/impl/Base64CipherCrypter;.decrypt:(Ljavax/crypto/Cipher;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2b0eaa.  v1:= temp @kind object;
  #L2b0eac.  return v1 @kind object;
}
procedure `java.lang.String` `decrypt`(`co.infinum.goldfinger.crypto.impl.Base64CipherCrypter` v1 @kind this, `javax.crypto.Cipher` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lco/infinum/goldfinger/crypto/impl/Base64CipherCrypter;.decrypt:(Ljavax/crypto/Cipher;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b0ec0.  v0:= 2I;
  #L2b0ec2.  call temp:= `decode`(v3, v0) @signature `Landroid/util/Base64;.decode:(Ljava/lang/String;I)[B` @kind static;
  #L2b0ec8.  v3:= temp @kind object;
  #L2b0eca.  v0:= new `java.lang.String`;
  #L2b0ece.  call temp:= `doFinal`(v2, v3) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L2b0ed4.  v2:= temp @kind object;
  #L2b0ed6.  call `<init>`(v0, v2) @signature `Ljava/lang/String;.<init>:([B)V` @kind direct;
  #L2b0edc.  return v0 @kind object;
  #L2b0ede.  v2:= 0I;
  #L2b0ee0.  return v2 @kind object;
  catch `java.lang.Exception` @[L2b0ec2..L2b0edc] goto L2b0ede;
}
procedure `java.lang.String` `encrypt`(`co.infinum.goldfinger.crypto.impl.Base64CipherCrypter` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lco/infinum/goldfinger/crypto/impl/Base64CipherCrypter;.encrypt:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2b0f04.  v1:= (`javax.crypto.Cipher`) v1 @kind object;
  #L2b0f08.  call temp:= `encrypt`(v0, v1, v2) @signature `Lco/infinum/goldfinger/crypto/impl/Base64CipherCrypter;.encrypt:(Ljavax/crypto/Cipher;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2b0f0e.  v1:= temp @kind object;
  #L2b0f10.  return v1 @kind object;
}
procedure `java.lang.String` `encrypt`(`co.infinum.goldfinger.crypto.impl.Base64CipherCrypter` v1 @kind this, `javax.crypto.Cipher` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lco/infinum/goldfinger/crypto/impl/Base64CipherCrypter;.encrypt:(Ljavax/crypto/Cipher;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b0f24.  v0:= `@@java.nio.charset.StandardCharsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L2b0f28.  call temp:= `getBytes`(v3, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L2b0f2e.  v3:= temp @kind object;
  #L2b0f30.  call temp:= `doFinal`(v2, v3) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L2b0f36.  v2:= temp @kind object;
  #L2b0f38.  v3:= 2I;
  #L2b0f3a.  call temp:= `encodeToString`(v2, v3) @signature `Landroid/util/Base64;.encodeToString:([BI)Ljava/lang/String;` @kind static;
  #L2b0f40.  v2:= temp @kind object;
  #L2b0f42.  return v2 @kind object;
  #L2b0f44.  v2:= 0I;
  #L2b0f46.  return v2 @kind object;
  catch `java.lang.Exception` @[L2b0f24..L2b0f42] goto L2b0f44;
}
