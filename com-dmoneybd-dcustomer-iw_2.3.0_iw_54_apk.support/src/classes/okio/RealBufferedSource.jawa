record `okio.RealBufferedSource` @kind class @AccessFlag FINAL extends `okio.BufferedSource` @kind interface {
  `boolean` `okio.RealBufferedSource.a` @AccessFlag ;
  `okio.Buffer` `okio.RealBufferedSource.buffer` @AccessFlag PUBLIC_FINAL;
  `okio.Source` `okio.RealBufferedSource.source` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`okio.RealBufferedSource` v1 @kind this, `okio.Source` v2 @kind object) @signature `Lokio/RealBufferedSource;.<init>:(Lokio/Source;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L50cfac.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L50cfb2.  v0:= new `okio.Buffer`;
  #L50cfb6.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L50cfbc.  v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` := v0 @kind object;
  #L50cfc0.  if v2 == 0 then goto L50cfca;
  #L50cfc4.  v1.`okio.RealBufferedSource.source` @type ^`okio.Source` := v2 @kind object;
  #L50cfc8.  return @kind void;
  #L50cfca.  v2:= new `java.lang.NullPointerException`;
  #L50cfce.  v0:= "source == null" @kind object;
  #L50cfd2.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50cfd8.  throw v2;
}
procedure `okio.Buffer` `buffer`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.buffer:()Lokio/Buffer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50ced4.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50ced8.  return v0 @kind object;
}
procedure `void` `close`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50cfec.  v0:= v1.`okio.RealBufferedSource.a` @type ^`boolean` @kind boolean;
  #L50cff0.  if v0 == 0 then goto L50cff6;
  #L50cff4.  return @kind void;
  #L50cff6.  v0:= 1I;
  #L50cff8.  v1.`okio.RealBufferedSource.a` @type ^`boolean` := v0 @kind boolean;
  #L50cffc.  v0:= v1.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L50d000.  call `close`(v0) @signature `Lokio/Source;.close:()V` @kind interface;
  #L50d006.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50d00a.  call `clear`(v0) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L50d010.  return @kind void;
}
procedure `boolean` `exhausted`(`okio.RealBufferedSource` v5 @kind this) @signature `Lokio/RealBufferedSource;.exhausted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L50c1a4.  v0:= v5.`okio.RealBufferedSource.a` @type ^`boolean` @kind boolean;
  #L50c1a8.  if v0 != 0 then goto L50c1e4;
  #L50c1ac.  v0:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c1b0.  call temp:= `exhausted`(v0) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L50c1b6.  v0:= temp;
  #L50c1b8.  if v0 == 0 then goto L50c1e0;
  #L50c1bc.  v0:= v5.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L50c1c0.  v1:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c1c4.  v2:= 8192L;
  #L50c1c8.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L50c1ce.  v0:= temp @kind wide;
  #L50c1d0.  v2:= -1L;
  #L50c1d4.  v4:= lcmp(v0, v2);
  #L50c1d8.  if v4 != 0 then goto L50c1e0;
  #L50c1dc.  v0:= 1I;
  #L50c1de.  goto L50c1e2;
  #L50c1e0.  v0:= 0I;
  #L50c1e2.  return v0;
  #L50c1e4.  v0:= new `java.lang.IllegalStateException`;
  #L50c1e8.  v1:= "closed" @kind object;
  #L50c1ec.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50c1f2.  throw v0;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v6 @kind this, `byte` v7 ) @signature `Lokio/RealBufferedSource;.indexOf:(B)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L50c960.  v2:= 0L;
  #L50c964.  v4:= 9223372036854775807L;
  #L50c96e.  v0:= v6 @kind object;
  #L50c970.  v1:= v7;
  #L50c972.  call temp:= `indexOf`(v0, v1, v2, v4) @signature `Lokio/RealBufferedSource;.indexOf:(BJJ)J` @kind virtual;
  #L50c978.  v0:= temp @kind wide;
  #L50c97a.  return v0 @kind wide;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v6 @kind this, `byte` v7 , `long` v8 ) @signature `Lokio/RealBufferedSource;.indexOf:(BJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L50c98c.  v4:= 9223372036854775807L;
  #L50c996.  v0:= v6 @kind object;
  #L50c998.  v1:= v7;
  #L50c99a.  v2:= v8 @kind wide;
  #L50c99c.  call temp:= `indexOf`(v0, v1, v2, v4) @signature `Lokio/RealBufferedSource;.indexOf:(BJJ)J` @kind virtual;
  #L50c9a2.  v7:= temp @kind wide;
  #L50c9a4.  return v7 @kind wide;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v9 @kind this, `byte` v10 , `long` v11 , `long` v13 ) @signature `Lokio/RealBufferedSource;.indexOf:(BJJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L50c9b8.  v0:= v9.`okio.RealBufferedSource.a` @type ^`boolean` @kind boolean;
  #L50c9bc.  if v0 != 0 then goto L50ca6c;
  #L50c9c0.  v0:= 0L;
  #L50c9c4.  v2:= lcmp(v11, v0);
  #L50c9c8.  if v2 < 0 then goto L50ca32;
  #L50c9cc.  v0:= lcmp(v13, v11);
  #L50c9d0.  if v0 < 0 then goto L50ca32;
  #L50c9d4.  v7:= -1L;
  #L50c9d8.  v0:= lcmp(v11, v13);
  #L50c9dc.  if v0 >= 0 then goto L50ca30;
  #L50c9e0.  v1:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c9e4.  v2:= v10;
  #L50c9e6.  v3:= v11 @kind wide;
  #L50c9e8.  v5:= v13 @kind wide;
  #L50c9ea.  call temp:= `indexOf`(v1, v2, v3, v5) @signature `Lokio/Buffer;.indexOf:(BJJ)J` @kind virtual;
  #L50c9f0.  v0:= temp @kind wide;
  #L50c9f2.  v2:= lcmp(v0, v7);
  #L50c9f6.  if v2 == 0 then goto L50c9fc;
  #L50c9fa.  return v0 @kind wide;
  #L50c9fc.  v0:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50ca00.  v1:= v0.`okio.Buffer.b` @type ^`long` @kind wide;
  #L50ca04.  v3:= lcmp(v1, v13);
  #L50ca08.  if v3 >= 0 then goto L50ca30;
  #L50ca0c.  v3:= v9.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L50ca10.  v4:= 8192L;
  #L50ca14.  call temp:= `read`(v3, v0, v4) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L50ca1a.  v3:= temp @kind wide;
  #L50ca1c.  v0:= lcmp(v3, v7);
  #L50ca20.  if v0 != 0 then goto L50ca26;
  #L50ca24.  goto L50ca30;
  #L50ca26.  call temp:= `max`(v11, v1) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L50ca2c.  v11:= temp @kind wide;
  #L50ca2e.  goto L50c9d4;
  #L50ca30.  return v7 @kind wide;
  #L50ca32.  v10:= new `java.lang.IllegalArgumentException`;
  #L50ca36.  v0:= 2I;
  #L50ca38.  v0:= new `java.lang.Object`[v0];
  #L50ca3c.  v1:= 0I;
  #L50ca3e.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L50ca44.  v11:= temp @kind object;
  #L50ca46.  v0[v1]:= v11 @kind object;
  #L50ca4a.  v11:= 1I;
  #L50ca4c.  call temp:= `valueOf`(v13) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L50ca52.  v12:= temp @kind object;
  #L50ca54.  v0[v11]:= v12 @kind object;
  #L50ca58.  v11:= "fromIndex=%s toIndex=%s" @kind object;
  #L50ca5c.  call temp:= `format`(v11, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L50ca62.  v11:= temp @kind object;
  #L50ca64.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50ca6a.  throw v10;
  #L50ca6c.  v10:= new `java.lang.IllegalStateException`;
  #L50ca70.  v11:= "closed" @kind object;
  #L50ca74.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50ca7a.  goto L50ca7e;
  #L50ca7c.  throw v10;
  #L50ca7e.  goto L50ca7c;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v2 @kind this, `okio.ByteString` v3 @kind object) @signature `Lokio/RealBufferedSource;.indexOf:(Lokio/ByteString;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50ca90.  v0:= 0L;
  #L50ca94.  call temp:= `indexOf`(v2, v3, v0) @signature `Lokio/RealBufferedSource;.indexOf:(Lokio/ByteString;J)J` @kind virtual;
  #L50ca9a.  v0:= temp @kind wide;
  #L50ca9c.  return v0 @kind wide;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v8 @kind this, `okio.ByteString` v9 @kind object, `long` v10 ) @signature `Lokio/RealBufferedSource;.indexOf:(Lokio/ByteString;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L50cab0.  v0:= v8.`okio.RealBufferedSource.a` @type ^`boolean` @kind boolean;
  #L50cab4.  if v0 != 0 then goto L50cb10;
  #L50cab8.  v0:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50cabc.  call temp:= `indexOf`(v0, v9, v10) @signature `Lokio/Buffer;.indexOf:(Lokio/ByteString;J)J` @kind virtual;
  #L50cac2.  v0:= temp @kind wide;
  #L50cac4.  v2:= -1L;
  #L50cac8.  v4:= lcmp(v0, v2);
  #L50cacc.  if v4 == 0 then goto L50cad2;
  #L50cad0.  return v0 @kind wide;
  #L50cad2.  v0:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50cad6.  v4:= v0.`okio.Buffer.b` @type ^`long` @kind wide;
  #L50cada.  v1:= v8.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L50cade.  v6:= 8192L;
  #L50cae2.  call temp:= `read`(v1, v0, v6) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L50cae8.  v0:= temp @kind wide;
  #L50caea.  v6:= lcmp(v0, v2);
  #L50caee.  if v6 != 0 then goto L50caf4;
  #L50caf2.  return v2 @kind wide;
  #L50caf4.  call temp:= `size`(v9) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L50cafa.  v0:= temp;
  #L50cafc.  v0:= (`long`) v0 @kind i2l;
  #L50cafe.  v4:= v4 - v0 @kind long;
  #L50cb00.  v0:= 1L;
  #L50cb04.  v4:= v4 + v0 @kind long;
  #L50cb06.  call temp:= `max`(v10, v4) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L50cb0c.  v10:= temp @kind wide;
  #L50cb0e.  goto L50cab8;
  #L50cb10.  v9:= new `java.lang.IllegalStateException`;
  #L50cb14.  v10:= "closed" @kind object;
  #L50cb18.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50cb1e.  goto L50cb22;
  #L50cb20.  throw v9;
  #L50cb22.  goto L50cb20;
}
procedure `long` `indexOfElement`(`okio.RealBufferedSource` v2 @kind this, `okio.ByteString` v3 @kind object) @signature `Lokio/RealBufferedSource;.indexOfElement:(Lokio/ByteString;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50cb34.  v0:= 0L;
  #L50cb38.  call temp:= `indexOfElement`(v2, v3, v0) @signature `Lokio/RealBufferedSource;.indexOfElement:(Lokio/ByteString;J)J` @kind virtual;
  #L50cb3e.  v0:= temp @kind wide;
  #L50cb40.  return v0 @kind wide;
}
procedure `long` `indexOfElement`(`okio.RealBufferedSource` v8 @kind this, `okio.ByteString` v9 @kind object, `long` v10 ) @signature `Lokio/RealBufferedSource;.indexOfElement:(Lokio/ByteString;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L50cb54.  v0:= v8.`okio.RealBufferedSource.a` @type ^`boolean` @kind boolean;
  #L50cb58.  if v0 != 0 then goto L50cba2;
  #L50cb5c.  v0:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50cb60.  call temp:= `indexOfElement`(v0, v9, v10) @signature `Lokio/Buffer;.indexOfElement:(Lokio/ByteString;J)J` @kind virtual;
  #L50cb66.  v0:= temp @kind wide;
  #L50cb68.  v2:= -1L;
  #L50cb6c.  v4:= lcmp(v0, v2);
  #L50cb70.  if v4 == 0 then goto L50cb76;
  #L50cb74.  return v0 @kind wide;
  #L50cb76.  v0:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50cb7a.  v4:= v0.`okio.Buffer.b` @type ^`long` @kind wide;
  #L50cb7e.  v1:= v8.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L50cb82.  v6:= 8192L;
  #L50cb86.  call temp:= `read`(v1, v0, v6) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L50cb8c.  v0:= temp @kind wide;
  #L50cb8e.  v6:= lcmp(v0, v2);
  #L50cb92.  if v6 != 0 then goto L50cb98;
  #L50cb96.  return v2 @kind wide;
  #L50cb98.  call temp:= `max`(v10, v4) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L50cb9e.  v10:= temp @kind wide;
  #L50cba0.  goto L50cb5c;
  #L50cba2.  v9:= new `java.lang.IllegalStateException`;
  #L50cba6.  v10:= "closed" @kind object;
  #L50cbaa.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50cbb0.  goto L50cbb4;
  #L50cbb2.  throw v9;
  #L50cbb4.  goto L50cbb2;
}
procedure `java.io.InputStream` `inputStream`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.inputStream:()Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50c630.  v0:= new `okio.RealBufferedSource$1`;
  #L50c634.  call `<init>`(v0, v1) @signature `Lokio/RealBufferedSource$1;.<init>:(Lokio/RealBufferedSource;)V` @kind direct;
  #L50c63a.  return v0 @kind object;
}
procedure `boolean` `isOpen`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.isOpen:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50c204.  v0:= v1.`okio.RealBufferedSource.a` @type ^`boolean` @kind boolean;
  #L50c208.  v0:= v0 ^~ 1;
  #L50c20c.  return v0;
}
procedure `boolean` `rangeEquals`(`okio.RealBufferedSource` v6 @kind this, `long` v7 , `okio.ByteString` v9 @kind object) @signature `Lokio/RealBufferedSource;.rangeEquals:(JLokio/ByteString;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L50c220.  call temp:= `size`(v9) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L50c226.  v5:= temp;
  #L50c228.  v4:= 0I;
  #L50c22a.  v0:= v6 @kind object;
  #L50c22c.  v1:= v7 @kind wide;
  #L50c22e.  v3:= v9 @kind object;
  #L50c230.  call temp:= `rangeEquals`(v0, v1, v3, v4, v5) @signature `Lokio/RealBufferedSource;.rangeEquals:(JLokio/ByteString;II)Z` @kind virtual;
  #L50c236.  v7:= temp;
  #L50c238.  return v7;
}
procedure `boolean` `rangeEquals`(`okio.RealBufferedSource` v7 @kind this, `long` v8 , `okio.ByteString` v10 @kind object, `int` v11 , `int` v12 ) @signature `Lokio/RealBufferedSource;.rangeEquals:(JLokio/ByteString;II)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L50c24c.  v0:= v7.`okio.RealBufferedSource.a` @type ^`boolean` @kind boolean;
  #L50c250.  if v0 != 0 then goto L50c2c2;
  #L50c254.  v0:= 0L;
  #L50c258.  v2:= 0I;
  #L50c25a.  v3:= lcmp(v8, v0);
  #L50c25e.  if v3 < 0 then goto L50c2c0;
  #L50c262.  if v11 < 0 then goto L50c2c0;
  #L50c266.  if v12 < 0 then goto L50c2c0;
  #L50c26a.  call temp:= `size`(v10) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L50c270.  v0:= temp;
  #L50c272.  v0:= v0 - v11 @kind int;
  #L50c274.  if v0 >= v12 then goto L50c27a;
  #L50c278.  goto L50c2c0;
  #L50c27a.  v0:= 0I;
  #L50c27c.  if v0 >= v12 then goto L50c2bc;
  #L50c280.  v3:= (`long`) v0 @kind i2l;
  #L50c282.  v3:= v3 + v8 @kind long;
  #L50c284.  v5:= 1L;
  #L50c288.  v5:= v5 + v3 @kind long;
  #L50c28a.  call temp:= `request`(v7, v5) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L50c290.  v1:= temp;
  #L50c292.  if v1 != 0 then goto L50c298;
  #L50c296.  return v2;
  #L50c298.  v1:= v7.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c29c.  call temp:= `getByte`(v1, v3) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L50c2a2.  v1:= temp;
  #L50c2a4.  v3:= v11 + v0 @kind int;
  #L50c2a8.  call temp:= `getByte`(v10, v3) @signature `Lokio/ByteString;.getByte:(I)B` @kind virtual;
  #L50c2ae.  v3:= temp;
  #L50c2b0.  if v1 == v3 then goto L50c2b6;
  #L50c2b4.  return v2;
  #L50c2b6.  v0:= v0 + 1;
  #L50c2ba.  goto L50c27c;
  #L50c2bc.  v8:= 1I;
  #L50c2be.  return v8;
  #L50c2c0.  return v2;
  #L50c2c2.  v8:= new `java.lang.IllegalStateException`;
  #L50c2c6.  v9:= "closed" @kind object;
  #L50c2ca.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50c2d0.  goto L50c2d4;
  #L50c2d2.  throw v8;
  #L50c2d4.  goto L50c2d2;
}
procedure `int` `read`(`okio.RealBufferedSource` v6 @kind this, `java.nio.ByteBuffer` v7 @kind object) @signature `Lokio/RealBufferedSource;.read:(Ljava/nio/ByteBuffer;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L50c490.  v0:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c494.  v1:= v0.`okio.Buffer.b` @type ^`long` @kind wide;
  #L50c498.  v3:= 0L;
  #L50c49c.  v5:= lcmp(v1, v3);
  #L50c4a0.  if v5 != 0 then goto L50c4c4;
  #L50c4a4.  v1:= v6.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L50c4a8.  v2:= 8192L;
  #L50c4ac.  call temp:= `read`(v1, v0, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L50c4b2.  v0:= temp @kind wide;
  #L50c4b4.  v2:= -1L;
  #L50c4b8.  v4:= lcmp(v0, v2);
  #L50c4bc.  if v4 != 0 then goto L50c4c4;
  #L50c4c0.  v7:= -1I;
  #L50c4c2.  return v7;
  #L50c4c4.  v0:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c4c8.  call temp:= `read`(v0, v7) @signature `Lokio/Buffer;.read:(Ljava/nio/ByteBuffer;)I` @kind virtual;
  #L50c4ce.  v7:= temp;
  #L50c4d0.  return v7;
}
procedure `int` `read`(`okio.RealBufferedSource` v2 @kind this, `byte`[] v3 @kind object) @signature `Lokio/RealBufferedSource;.read:([B)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50c3fc.  v0:= length @variable v3;
  #L50c3fe.  v1:= 0I;
  #L50c400.  call temp:= `read`(v2, v3, v1, v0) @signature `Lokio/RealBufferedSource;.read:([BII)I` @kind virtual;
  #L50c406.  v3:= temp;
  #L50c408.  return v3;
}
procedure `int` `read`(`okio.RealBufferedSource` v9 @kind this, `byte`[] v10 @kind object, `int` v11 , `int` v12 ) @signature `Lokio/RealBufferedSource;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L50c41c.  v0:= length @variable v10;
  #L50c41e.  v1:= (`long`) v0 @kind i2l;
  #L50c420.  v3:= (`long`) v11 @kind i2l;
  #L50c422.  v7:= (`long`) v12 @kind i2l;
  #L50c424.  v5:= v7 @kind wide;
  #L50c426.  call `checkOffsetAndCount`(v1, v3, v5) @signature `Lokio/Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L50c42c.  v12:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c430.  v0:= v12.`okio.Buffer.b` @type ^`long` @kind wide;
  #L50c434.  v2:= 0L;
  #L50c438.  v4:= lcmp(v0, v2);
  #L50c43c.  if v4 != 0 then goto L50c460;
  #L50c440.  v0:= v9.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L50c444.  v1:= 8192L;
  #L50c448.  call temp:= `read`(v0, v12, v1) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L50c44e.  v0:= temp @kind wide;
  #L50c450.  v2:= -1L;
  #L50c454.  v12:= lcmp(v0, v2);
  #L50c458.  if v12 != 0 then goto L50c460;
  #L50c45c.  v10:= -1I;
  #L50c45e.  return v10;
  #L50c460.  v12:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c464.  v0:= v12.`okio.Buffer.b` @type ^`long` @kind wide;
  #L50c468.  call temp:= `min`(v7, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L50c46e.  v0:= temp @kind wide;
  #L50c470.  v12:= (`int`) v0 @kind l2i;
  #L50c472.  v0:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c476.  call temp:= `read`(v0, v10, v11, v12) @signature `Lokio/Buffer;.read:([BII)I` @kind virtual;
  #L50c47c.  v10:= temp;
  #L50c47e.  return v10;
}
procedure `long` `read`(`okio.RealBufferedSource` v6 @kind this, `okio.Buffer` v7 @kind object, `long` v8 ) @signature `Lokio/RealBufferedSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L50cbc8.  if v7 == 0 then goto L50cc6a;
  #L50cbcc.  v0:= 0L;
  #L50cbd0.  v2:= lcmp(v8, v0);
  #L50cbd4.  if v2 < 0 then goto L50cc3c;
  #L50cbd8.  v2:= v6.`okio.RealBufferedSource.a` @type ^`boolean` @kind boolean;
  #L50cbdc.  if v2 != 0 then goto L50cc2c;
  #L50cbe0.  v2:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50cbe4.  v3:= v2.`okio.Buffer.b` @type ^`long` @kind wide;
  #L50cbe8.  v5:= lcmp(v3, v0);
  #L50cbec.  if v5 != 0 then goto L50cc0e;
  #L50cbf0.  v0:= v6.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L50cbf4.  v3:= 8192L;
  #L50cbf8.  call temp:= `read`(v0, v2, v3) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L50cbfe.  v0:= temp @kind wide;
  #L50cc00.  v2:= -1L;
  #L50cc04.  v4:= lcmp(v0, v2);
  #L50cc08.  if v4 != 0 then goto L50cc0e;
  #L50cc0c.  return v2 @kind wide;
  #L50cc0e.  v0:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50cc12.  v0:= v0.`okio.Buffer.b` @type ^`long` @kind wide;
  #L50cc16.  call temp:= `min`(v8, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L50cc1c.  v8:= temp @kind wide;
  #L50cc1e.  v0:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50cc22.  call temp:= `read`(v0, v7, v8) @signature `Lokio/Buffer;.read:(Lokio/Buffer;J)J` @kind virtual;
  #L50cc28.  v7:= temp @kind wide;
  #L50cc2a.  return v7 @kind wide;
  #L50cc2c.  v7:= new `java.lang.IllegalStateException`;
  #L50cc30.  v8:= "closed" @kind object;
  #L50cc34.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50cc3a.  throw v7;
  #L50cc3c.  v7:= new `java.lang.IllegalArgumentException`;
  #L50cc40.  v0:= new `java.lang.StringBuilder`;
  #L50cc44.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L50cc4a.  v1:= "byteCount < 0: " @kind object;
  #L50cc4e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50cc54.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L50cc5a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L50cc60.  v8:= temp @kind object;
  #L50cc62.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50cc68.  throw v7;
  #L50cc6a.  v7:= new `java.lang.IllegalArgumentException`;
  #L50cc6e.  v8:= "sink == null" @kind object;
  #L50cc72.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50cc78.  throw v7;
}
procedure `long` `readAll`(`okio.RealBufferedSource` v9 @kind this, `okio.Sink` v10 @kind object) @signature `Lokio/RealBufferedSource;.readAll:(Lokio/Sink;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L50cc8c.  if v10 == 0 then goto L50cd0a;
  #L50cc90.  v0:= 0L;
  #L50cc94.  v2:= v0 @kind wide;
  #L50cc96.  v4:= v9.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L50cc9a.  v5:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50cc9e.  v6:= 8192L;
  #L50cca2.  call temp:= `read`(v4, v5, v6) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L50cca8.  v4:= temp @kind wide;
  #L50ccaa.  v6:= -1L;
  #L50ccae.  v8:= lcmp(v4, v6);
  #L50ccb2.  v4:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50ccb6.  if v8 == 0 then goto L50ccd8;
  #L50ccba.  call temp:= `completeSegmentByteCount`(v4) @signature `Lokio/Buffer;.completeSegmentByteCount:()J` @kind virtual;
  #L50ccc0.  v4:= temp @kind wide;
  #L50ccc2.  v6:= lcmp(v4, v0);
  #L50ccc6.  if v6 <= 0 then goto L50cc96;
  #L50ccca.  v2:= v2 + v4 @kind long;
  #L50cccc.  v6:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50ccd0.  call `write`(v10, v6, v4) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L50ccd6.  goto L50cc96;
  #L50ccd8.  call temp:= `size`(v4) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L50ccde.  v4:= temp @kind wide;
  #L50cce0.  v6:= lcmp(v4, v0);
  #L50cce4.  if v6 <= 0 then goto L50cd08;
  #L50cce8.  v0:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50ccec.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L50ccf2.  v0:= temp @kind wide;
  #L50ccf4.  v2:= v2 + v0 @kind long;
  #L50ccf6.  v0:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50ccfa.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L50cd00.  v4:= temp @kind wide;
  #L50cd02.  call `write`(v10, v0, v4) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L50cd08.  return v2 @kind wide;
  #L50cd0a.  v10:= new `java.lang.IllegalArgumentException`;
  #L50cd0e.  v0:= "sink == null" @kind object;
  #L50cd12.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50cd18.  goto L50cd1c;
  #L50cd1a.  throw v10;
  #L50cd1c.  goto L50cd1a;
}
procedure `byte` `readByte`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readByte:()B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50c384.  v0:= 1L;
  #L50c388.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L50c38e.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c392.  call temp:= `readByte`(v0) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L50c398.  v0:= temp;
  #L50c39a.  return v0;
}
procedure `byte`[] `readByteArray`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readByteArray:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50c3ac.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c3b0.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L50c3b4.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L50c3ba.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c3be.  call temp:= `readByteArray`(v0) @signature `Lokio/Buffer;.readByteArray:()[B` @kind virtual;
  #L50c3c4.  v0:= temp @kind object;
  #L50c3c6.  return v0 @kind object;
}
procedure `byte`[] `readByteArray`(`okio.RealBufferedSource` v1 @kind this, `long` v2 ) @signature `Lokio/RealBufferedSource;.readByteArray:(J)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50c3d8.  call `require`(v1, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L50c3de.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c3e2.  call temp:= `readByteArray`(v0, v2) @signature `Lokio/Buffer;.readByteArray:(J)[B` @kind virtual;
  #L50c3e8.  v2:= temp @kind object;
  #L50c3ea.  return v2 @kind object;
}
procedure `okio.ByteString` `readByteString`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readByteString:()Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50ceec.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50cef0.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L50cef4.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L50cefa.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50cefe.  call temp:= `readByteString`(v0) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L50cf04.  v0:= temp @kind object;
  #L50cf06.  return v0 @kind object;
}
procedure `okio.ByteString` `readByteString`(`okio.RealBufferedSource` v1 @kind this, `long` v2 ) @signature `Lokio/RealBufferedSource;.readByteString:(J)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50cf18.  call `require`(v1, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L50cf1e.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50cf22.  call temp:= `readByteString`(v0, v2) @signature `Lokio/Buffer;.readByteString:(J)Lokio/ByteString;` @kind virtual;
  #L50cf28.  v2:= temp @kind object;
  #L50cf2a.  return v2 @kind object;
}
procedure `long` `readDecimalLong`(`okio.RealBufferedSource` v6 @kind this) @signature `Lokio/RealBufferedSource;.readDecimalLong:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L50cd30.  v0:= 1L;
  #L50cd34.  call `require`(v6, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L50cd3a.  v0:= 0I;
  #L50cd3c.  v1:= 0I;
  #L50cd3e.  v2:= v1 + 1;
  #L50cd42.  v3:= (`long`) v2 @kind i2l;
  #L50cd44.  call temp:= `request`(v6, v3) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L50cd4a.  v3:= temp;
  #L50cd4c.  if v3 == 0 then goto L50cdb0;
  #L50cd50.  v3:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50cd54.  v4:= (`long`) v1 @kind i2l;
  #L50cd56.  call temp:= `getByte`(v3, v4) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L50cd5c.  v3:= temp;
  #L50cd5e.  v4:= 48I;
  #L50cd62.  if v3 < v4 then goto L50cd6e;
  #L50cd66.  v4:= 57I;
  #L50cd6a.  if v3 <= v4 then goto L50cd7c;
  #L50cd6e.  if v1 != 0 then goto L50cd80;
  #L50cd72.  v4:= 45I;
  #L50cd76.  if v3 == v4 then goto L50cd7c;
  #L50cd7a.  goto L50cd80;
  #L50cd7c.  v1:= v2;
  #L50cd7e.  goto L50cd3e;
  #L50cd80.  if v1 == 0 then goto L50cd86;
  #L50cd84.  goto L50cdb0;
  #L50cd86.  v1:= new `java.lang.NumberFormatException`;
  #L50cd8a.  v2:= 1I;
  #L50cd8c.  v2:= new `java.lang.Object`[v2];
  #L50cd90.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L50cd96.  v3:= temp @kind object;
  #L50cd98.  v2[v0]:= v3 @kind object;
  #L50cd9c.  v0:= "Expected leading [0-9] or '-' character but was %#x" @kind object;
  #L50cda0.  call temp:= `format`(v0, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L50cda6.  v0:= temp @kind object;
  #L50cda8.  call `<init>`(v1, v0) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50cdae.  throw v1;
  #L50cdb0.  v0:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50cdb4.  call temp:= `readDecimalLong`(v0) @signature `Lokio/Buffer;.readDecimalLong:()J` @kind virtual;
  #L50cdba.  v0:= temp @kind wide;
  #L50cdbc.  return v0 @kind wide;
}
procedure `void` `readFully`(`okio.RealBufferedSource` v1 @kind this, `okio.Buffer` v2 @kind object, `long` v3 ) @signature `Lokio/RealBufferedSource;.readFully:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50d098.  call `require`(v1, v3) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L50d09e.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50d0a2.  call `readFully`(v0, v2, v3) @signature `Lokio/Buffer;.readFully:(Lokio/Buffer;J)V` @kind virtual;
  #L50d0a8.  return @kind void;
  #L50d0aa.  v3:= Exception @type ^`java.io.EOFException` @kind object;
  #L50d0ac.  v4:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50d0b0.  call temp:= `writeAll`(v2, v4) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L50d0b6.  throw v3;
  catch `java.io.EOFException` @[L50d098..L50d09e] goto L50d0aa;
}
procedure `void` `readFully`(`okio.RealBufferedSource` v8 @kind this, `byte`[] v9 @kind object) @signature `Lokio/RealBufferedSource;.readFully:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L50d024.  v0:= length @variable v9;
  #L50d026.  v0:= (`long`) v0 @kind i2l;
  #L50d028.  call `require`(v8, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L50d02e.  v0:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50d032.  call `readFully`(v0, v9) @signature `Lokio/Buffer;.readFully:([B)V` @kind virtual;
  #L50d038.  return @kind void;
  #L50d03a.  v0:= Exception @type ^`java.io.EOFException` @kind object;
  #L50d03c.  v1:= 0I;
  #L50d03e.  v2:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50d042.  v3:= v2.`okio.Buffer.b` @type ^`long` @kind wide;
  #L50d046.  v5:= 0L;
  #L50d04a.  v7:= lcmp(v3, v5);
  #L50d04e.  if v7 <= 0 then goto L50d072;
  #L50d052.  v4:= (`int`) v3 @kind l2i;
  #L50d054.  call temp:= `read`(v2, v9, v1, v4) @signature `Lokio/Buffer;.read:([BII)I` @kind virtual;
  #L50d05a.  v2:= temp;
  #L50d05c.  v3:= -1I;
  #L50d05e.  if v2 == v3 then goto L50d066;
  #L50d062.  v1:= v1 + v2 @kind int;
  #L50d064.  goto L50d03e;
  #L50d066.  v9:= new `java.lang.AssertionError`;
  #L50d06a.  call `<init>`(v9) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L50d070.  throw v9;
  #L50d072.  goto L50d076;
  #L50d074.  throw v0;
  #L50d076.  goto L50d074;
  catch `java.io.EOFException` @[L50d024..L50d02e] goto L50d03a;
}
procedure `long` `readHexadecimalUnsignedLong`(`okio.RealBufferedSource` v6 @kind this) @signature `Lokio/RealBufferedSource;.readHexadecimalUnsignedLong:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L50cdd0.  v0:= 1L;
  #L50cdd4.  call `require`(v6, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L50cdda.  v0:= 0I;
  #L50cddc.  v1:= 0I;
  #L50cdde.  v2:= v1 + 1;
  #L50cde2.  v3:= (`long`) v2 @kind i2l;
  #L50cde4.  call temp:= `request`(v6, v3) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L50cdea.  v3:= temp;
  #L50cdec.  if v3 == 0 then goto L50ce64;
  #L50cdf0.  v3:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50cdf4.  v4:= (`long`) v1 @kind i2l;
  #L50cdf6.  call temp:= `getByte`(v3, v4) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L50cdfc.  v3:= temp;
  #L50cdfe.  v4:= 48I;
  #L50ce02.  if v3 < v4 then goto L50ce0e;
  #L50ce06.  v4:= 57I;
  #L50ce0a.  if v3 <= v4 then goto L50ce30;
  #L50ce0e.  v4:= 97I;
  #L50ce12.  if v3 < v4 then goto L50ce1e;
  #L50ce16.  v4:= 102I;
  #L50ce1a.  if v3 <= v4 then goto L50ce30;
  #L50ce1e.  v4:= 65I;
  #L50ce22.  if v3 < v4 then goto L50ce34;
  #L50ce26.  v4:= 70I;
  #L50ce2a.  if v3 <= v4 then goto L50ce30;
  #L50ce2e.  goto L50ce34;
  #L50ce30.  v1:= v2;
  #L50ce32.  goto L50cdde;
  #L50ce34.  if v1 == 0 then goto L50ce3a;
  #L50ce38.  goto L50ce64;
  #L50ce3a.  v1:= new `java.lang.NumberFormatException`;
  #L50ce3e.  v2:= 1I;
  #L50ce40.  v2:= new `java.lang.Object`[v2];
  #L50ce44.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L50ce4a.  v3:= temp @kind object;
  #L50ce4c.  v2[v0]:= v3 @kind object;
  #L50ce50.  v0:= "Expected leading [0-9a-fA-F] character but was %#x" @kind object;
  #L50ce54.  call temp:= `format`(v0, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L50ce5a.  v0:= temp @kind object;
  #L50ce5c.  call `<init>`(v1, v0) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50ce62.  throw v1;
  #L50ce64.  v0:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50ce68.  call temp:= `readHexadecimalUnsignedLong`(v0) @signature `Lokio/Buffer;.readHexadecimalUnsignedLong:()J` @kind virtual;
  #L50ce6e.  v0:= temp @kind wide;
  #L50ce70.  return v0 @kind wide;
}
procedure `int` `readInt`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readInt:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50c4e4.  v0:= 4L;
  #L50c4e8.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L50c4ee.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c4f2.  call temp:= `readInt`(v0) @signature `Lokio/Buffer;.readInt:()I` @kind virtual;
  #L50c4f8.  v0:= temp;
  #L50c4fa.  return v0;
}
procedure `int` `readIntLe`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readIntLe:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50c50c.  v0:= 4L;
  #L50c510.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L50c516.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c51a.  call temp:= `readIntLe`(v0) @signature `Lokio/Buffer;.readIntLe:()I` @kind virtual;
  #L50c520.  v0:= temp;
  #L50c522.  return v0;
}
procedure `long` `readLong`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readLong:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50ce84.  v0:= 8L;
  #L50ce88.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L50ce8e.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50ce92.  call temp:= `readLong`(v0) @signature `Lokio/Buffer;.readLong:()J` @kind virtual;
  #L50ce98.  v0:= temp @kind wide;
  #L50ce9a.  return v0 @kind wide;
}
procedure `long` `readLongLe`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readLongLe:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50ceac.  v0:= 8L;
  #L50ceb0.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L50ceb6.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50ceba.  call temp:= `readLongLe`(v0) @signature `Lokio/Buffer;.readLongLe:()J` @kind virtual;
  #L50cec0.  v0:= temp @kind wide;
  #L50cec2.  return v0 @kind wide;
}
procedure `short` `readShort`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readShort:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50cf5c.  v0:= 2L;
  #L50cf60.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L50cf66.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50cf6a.  call temp:= `readShort`(v0) @signature `Lokio/Buffer;.readShort:()S` @kind virtual;
  #L50cf70.  v0:= temp;
  #L50cf72.  return v0;
}
procedure `short` `readShortLe`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readShortLe:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50cf84.  v0:= 2L;
  #L50cf88.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L50cf8e.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50cf92.  call temp:= `readShortLe`(v0) @signature `Lokio/Buffer;.readShortLe:()S` @kind virtual;
  #L50cf98.  v0:= temp;
  #L50cf9a.  return v0;
}
procedure `java.lang.String` `readString`(`okio.RealBufferedSource` v1 @kind this, `long` v2 , `java.nio.charset.Charset` v4 @kind object) @signature `Lokio/RealBufferedSource;.readString:(JLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50c68c.  call `require`(v1, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L50c692.  if v4 == 0 then goto L50c6a4;
  #L50c696.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c69a.  call temp:= `readString`(v0, v2, v4) @signature `Lokio/Buffer;.readString:(JLjava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L50c6a0.  v2:= temp @kind object;
  #L50c6a2.  return v2 @kind object;
  #L50c6a4.  v2:= new `java.lang.IllegalArgumentException`;
  #L50c6a8.  v3:= "charset == null" @kind object;
  #L50c6ac.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50c6b2.  throw v2;
}
procedure `java.lang.String` `readString`(`okio.RealBufferedSource` v2 @kind this, `java.nio.charset.Charset` v3 @kind object) @signature `Lokio/RealBufferedSource;.readString:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50c64c.  if v3 == 0 then goto L50c66c;
  #L50c650.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c654.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L50c658.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L50c65e.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c662.  call temp:= `readString`(v0, v3) @signature `Lokio/Buffer;.readString:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L50c668.  v3:= temp @kind object;
  #L50c66a.  return v3 @kind object;
  #L50c66c.  v3:= new `java.lang.IllegalArgumentException`;
  #L50c670.  v0:= "charset == null" @kind object;
  #L50c674.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50c67a.  throw v3;
}
procedure `java.lang.String` `readUtf8`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50c6c4.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c6c8.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L50c6cc.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L50c6d2.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c6d6.  call temp:= `readUtf8`(v0) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L50c6dc.  v0:= temp @kind object;
  #L50c6de.  return v0 @kind object;
}
procedure `java.lang.String` `readUtf8`(`okio.RealBufferedSource` v1 @kind this, `long` v2 ) @signature `Lokio/RealBufferedSource;.readUtf8:(J)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50c6f0.  call `require`(v1, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L50c6f6.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c6fa.  call temp:= `readUtf8`(v0, v2) @signature `Lokio/Buffer;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L50c700.  v2:= temp @kind object;
  #L50c702.  return v2 @kind object;
}
procedure `int` `readUtf8CodePoint`(`okio.RealBufferedSource` v3 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8CodePoint:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L50c534.  v0:= 1L;
  #L50c538.  call `require`(v3, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L50c53e.  v0:= v3.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c542.  v1:= 0L;
  #L50c546.  call temp:= `getByte`(v0, v1) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L50c54c.  v0:= temp;
  #L50c54e.  v1:= v0 ^& 224;
  #L50c552.  v2:= 192I;
  #L50c556.  if v1 != v2 then goto L50c566;
  #L50c55a.  v0:= 2L;
  #L50c55e.  call `require`(v3, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L50c564.  goto L50c58a;
  #L50c566.  v1:= v0 ^& 240;
  #L50c56a.  v2:= 224I;
  #L50c56e.  if v1 != v2 then goto L50c578;
  #L50c572.  v0:= 3L;
  #L50c576.  goto L50c55e;
  #L50c578.  v0:= v0 ^& 248;
  #L50c57c.  v1:= 240I;
  #L50c580.  if v0 != v1 then goto L50c58a;
  #L50c584.  v0:= 4L;
  #L50c588.  goto L50c55e;
  #L50c58a.  v0:= v3.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c58e.  call temp:= `readUtf8CodePoint`(v0) @signature `Lokio/Buffer;.readUtf8CodePoint:()I` @kind virtual;
  #L50c594.  v0:= temp;
  #L50c596.  return v0;
}
procedure `java.lang.String` `readUtf8Line`(`okio.RealBufferedSource` v5 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8Line:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L50c714.  v0:= 10I;
  #L50c718.  call temp:= `indexOf`(v5, v0) @signature `Lokio/RealBufferedSource;.indexOf:(B)J` @kind virtual;
  #L50c71e.  v0:= temp @kind wide;
  #L50c720.  v2:= -1L;
  #L50c724.  v4:= lcmp(v0, v2);
  #L50c728.  if v4 != 0 then goto L50c74e;
  #L50c72c.  v0:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c730.  v0:= v0.`okio.Buffer.b` @type ^`long` @kind wide;
  #L50c734.  v2:= 0L;
  #L50c738.  v4:= lcmp(v0, v2);
  #L50c73c.  if v4 == 0 then goto L50c74a;
  #L50c740.  call temp:= `readUtf8`(v5, v0) @signature `Lokio/RealBufferedSource;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L50c746.  v0:= temp @kind object;
  #L50c748.  goto L50c74c;
  #L50c74a.  v0:= 0I;
  #L50c74c.  return v0 @kind object;
  #L50c74e.  v2:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c752.  call temp:= `a`(v2, v0) @signature `Lokio/Buffer;.a:(J)Ljava/lang/String;` @kind virtual;
  #L50c758.  v0:= temp @kind object;
  #L50c75a.  return v0 @kind object;
}
procedure `java.lang.String` `readUtf8LineStrict`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50c76c.  v0:= 9223372036854775807L;
  #L50c776.  call temp:= `readUtf8LineStrict`(v2, v0) @signature `Lokio/RealBufferedSource;.readUtf8LineStrict:(J)Ljava/lang/String;` @kind virtual;
  #L50c77c.  v0:= temp @kind object;
  #L50c77e.  return v0 @kind object;
}
procedure `java.lang.String` `readUtf8LineStrict`(`okio.RealBufferedSource` v12 @kind this, `long` v13 ) @signature `Lokio/RealBufferedSource;.readUtf8LineStrict:(J)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L50c790.  v0:= 0L;
  #L50c794.  v2:= lcmp(v13, v0);
  #L50c798.  if v2 < 0 then goto L50c8de;
  #L50c79c.  v0:= 1L;
  #L50c7a0.  v2:= 9223372036854775807L;
  #L50c7aa.  v4:= lcmp(v13, v2);
  #L50c7ae.  if v4 != 0 then goto L50c7b6;
  #L50c7b2.  v4:= v2 @kind wide;
  #L50c7b4.  goto L50c7ba;
  #L50c7b6.  v4:= v13 + v0 @kind long;
  #L50c7ba.  v7:= 10I;
  #L50c7be.  v8:= 0L;
  #L50c7c2.  v6:= v12 @kind object;
  #L50c7c4.  v10:= v4 @kind wide;
  #L50c7c6.  call temp:= `indexOf`(v6, v7, v8, v10) @signature `Lokio/RealBufferedSource;.indexOf:(BJJ)J` @kind virtual;
  #L50c7cc.  v6:= temp @kind wide;
  #L50c7ce.  v8:= -1L;
  #L50c7d2.  v10:= lcmp(v6, v8);
  #L50c7d6.  if v10 == 0 then goto L50c7e8;
  #L50c7da.  v13:= v12.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c7de.  call temp:= `a`(v13, v6) @signature `Lokio/Buffer;.a:(J)Ljava/lang/String;` @kind virtual;
  #L50c7e4.  v13:= temp @kind object;
  #L50c7e6.  return v13 @kind object;
  #L50c7e8.  v6:= lcmp(v4, v2);
  #L50c7ec.  if v6 >= 0 then goto L50c844;
  #L50c7f0.  call temp:= `request`(v12, v4) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L50c7f6.  v2:= temp;
  #L50c7f8.  if v2 == 0 then goto L50c844;
  #L50c7fc.  v2:= v12.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c800.  v6:= v4 - v0 @kind long;
  #L50c804.  call temp:= `getByte`(v2, v6) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L50c80a.  v2:= temp;
  #L50c80c.  v3:= 13I;
  #L50c810.  if v2 != v3 then goto L50c844;
  #L50c814.  v0:= v0 + v4 @kind long;
  #L50c816.  call temp:= `request`(v12, v0) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L50c81c.  v0:= temp;
  #L50c81e.  if v0 == 0 then goto L50c844;
  #L50c822.  v0:= v12.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c826.  call temp:= `getByte`(v0, v4) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L50c82c.  v0:= temp;
  #L50c82e.  v1:= 10I;
  #L50c832.  if v0 != v1 then goto L50c844;
  #L50c836.  v13:= v12.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c83a.  call temp:= `a`(v13, v4) @signature `Lokio/Buffer;.a:(J)Ljava/lang/String;` @kind virtual;
  #L50c840.  v13:= temp @kind object;
  #L50c842.  return v13 @kind object;
  #L50c844.  v6:= new `okio.Buffer`;
  #L50c848.  call `<init>`(v6) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L50c84e.  v0:= v12.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c852.  v2:= 0L;
  #L50c856.  v4:= 32L;
  #L50c85a.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L50c860.  v7:= temp @kind wide;
  #L50c862.  call temp:= `min`(v4, v7) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L50c868.  v4:= temp @kind wide;
  #L50c86a.  v1:= v6 @kind object;
  #L50c86c.  call temp:= `copyTo`(v0, v1, v2, v4) @signature `Lokio/Buffer;.copyTo:(Lokio/Buffer;JJ)Lokio/Buffer;` @kind virtual;
  #L50c872.  v0:= new `java.io.EOFException`;
  #L50c876.  v1:= new `java.lang.StringBuilder`;
  #L50c87a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L50c880.  v2:= "\\n not found: limit=" @kind object;
  #L50c884.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50c88a.  v2:= v12.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c88e.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L50c894.  v2:= temp @kind wide;
  #L50c896.  call temp:= `min`(v2, v13) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L50c89c.  v13:= temp @kind wide;
  #L50c89e.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L50c8a4.  v13:= " content=" @kind object;
  #L50c8a8.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50c8ae.  call temp:= `readByteString`(v6) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L50c8b4.  v13:= temp @kind object;
  #L50c8b6.  call temp:= `hex`(v13) @signature `Lokio/ByteString;.hex:()Ljava/lang/String;` @kind virtual;
  #L50c8bc.  v13:= temp @kind object;
  #L50c8be.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50c8c4.  v13:= 8230I;
  #L50c8c8.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L50c8ce.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L50c8d4.  v13:= temp @kind object;
  #L50c8d6.  call `<init>`(v0, v13) @signature `Ljava/io/EOFException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50c8dc.  throw v0;
  #L50c8de.  v0:= new `java.lang.IllegalArgumentException`;
  #L50c8e2.  v1:= new `java.lang.StringBuilder`;
  #L50c8e6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L50c8ec.  v2:= "limit < 0: " @kind object;
  #L50c8f0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50c8f6.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L50c8fc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L50c902.  v13:= temp @kind object;
  #L50c904.  call `<init>`(v0, v13) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50c90a.  throw v0;
}
procedure `boolean` `request`(`okio.RealBufferedSource` v5 @kind this, `long` v6 ) @signature `Lokio/RealBufferedSource;.request:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L50c2e8.  v0:= 0L;
  #L50c2ec.  v2:= lcmp(v6, v0);
  #L50c2f0.  if v2 < 0 then goto L50c340;
  #L50c2f4.  v0:= v5.`okio.RealBufferedSource.a` @type ^`boolean` @kind boolean;
  #L50c2f8.  if v0 != 0 then goto L50c330;
  #L50c2fc.  v0:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c300.  v1:= v0.`okio.Buffer.b` @type ^`long` @kind wide;
  #L50c304.  v3:= lcmp(v1, v6);
  #L50c308.  if v3 >= 0 then goto L50c32c;
  #L50c30c.  v1:= v5.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L50c310.  v2:= 8192L;
  #L50c314.  call temp:= `read`(v1, v0, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L50c31a.  v0:= temp @kind wide;
  #L50c31c.  v2:= -1L;
  #L50c320.  v4:= lcmp(v0, v2);
  #L50c324.  if v4 != 0 then goto L50c2fc;
  #L50c328.  v6:= 0I;
  #L50c32a.  return v6;
  #L50c32c.  v6:= 1I;
  #L50c32e.  return v6;
  #L50c330.  v6:= new `java.lang.IllegalStateException`;
  #L50c334.  v7:= "closed" @kind object;
  #L50c338.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50c33e.  throw v6;
  #L50c340.  v0:= new `java.lang.IllegalArgumentException`;
  #L50c344.  v1:= new `java.lang.StringBuilder`;
  #L50c348.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L50c34e.  v2:= "byteCount < 0: " @kind object;
  #L50c352.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50c358.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L50c35e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L50c364.  v6:= temp @kind object;
  #L50c366.  call `<init>`(v0, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50c36c.  goto L50c370;
  #L50c36e.  throw v0;
  #L50c370.  goto L50c36e;
}
procedure `void` `require`(`okio.RealBufferedSource` v0 @kind this, `long` v1 ) @signature `Lokio/RealBufferedSource;.require:(J)V` @AccessFlag PUBLIC {
    temp;

  #L50d0d8.  call temp:= `request`(v0, v1) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L50d0de.  v1:= temp;
  #L50d0e0.  if v1 == 0 then goto L50d0e6;
  #L50d0e4.  return @kind void;
  #L50d0e6.  v1:= new `java.io.EOFException`;
  #L50d0ea.  call `<init>`(v1) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L50d0f0.  throw v1;
}
procedure `int` `select`(`okio.RealBufferedSource` v6 @kind this, `okio.Options` v7 @kind object) @signature `Lokio/RealBufferedSource;.select:(Lokio/Options;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L50c5a8.  v0:= v6.`okio.RealBufferedSource.a` @type ^`boolean` @kind boolean;
  #L50c5ac.  if v0 != 0 then goto L50c60c;
  #L50c5b0.  v0:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c5b4.  v1:= 1I;
  #L50c5b6.  call temp:= `b`(v0, v7, v1) @signature `Lokio/Buffer;.b:(Lokio/Options;Z)I` @kind virtual;
  #L50c5bc.  v0:= temp;
  #L50c5be.  v1:= -1I;
  #L50c5c0.  if v0 != v1 then goto L50c5c6;
  #L50c5c4.  return v1;
  #L50c5c6.  v2:= -2I;
  #L50c5c8.  if v0 != v2 then goto L50c5ee;
  #L50c5cc.  v0:= v6.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L50c5d0.  v2:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c5d4.  v3:= 8192L;
  #L50c5d8.  call temp:= `read`(v0, v2, v3) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L50c5de.  v2:= temp @kind wide;
  #L50c5e0.  v4:= -1L;
  #L50c5e4.  v0:= lcmp(v2, v4);
  #L50c5e8.  if v0 != 0 then goto L50c5b0;
  #L50c5ec.  return v1;
  #L50c5ee.  v7:= v7.`okio.Options.a` @type ^`okio.ByteString`[] @kind object;
  #L50c5f2.  v7:= v7[v0] @kind object;
  #L50c5f6.  call temp:= `size`(v7) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L50c5fc.  v7:= temp;
  #L50c5fe.  v1:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50c602.  v2:= (`long`) v7 @kind i2l;
  #L50c604.  call `skip`(v1, v2) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L50c60a.  return v0;
  #L50c60c.  v7:= new `java.lang.IllegalStateException`;
  #L50c610.  v0:= "closed" @kind object;
  #L50c614.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50c61a.  goto L50c61e;
  #L50c61c.  throw v7;
  #L50c61e.  goto L50c61c;
}
procedure `void` `skip`(`okio.RealBufferedSource` v6 @kind this, `long` v7 ) @signature `Lokio/RealBufferedSource;.skip:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L50d104.  v0:= v6.`okio.RealBufferedSource.a` @type ^`boolean` @kind boolean;
  #L50d108.  if v0 != 0 then goto L50d176;
  #L50d10c.  v0:= 0L;
  #L50d110.  v2:= lcmp(v7, v0);
  #L50d114.  if v2 <= 0 then goto L50d174;
  #L50d118.  v2:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50d11c.  v3:= v2.`okio.Buffer.b` @type ^`long` @kind wide;
  #L50d120.  v5:= lcmp(v3, v0);
  #L50d124.  if v5 != 0 then goto L50d152;
  #L50d128.  v0:= v6.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L50d12c.  v3:= 8192L;
  #L50d130.  call temp:= `read`(v0, v2, v3) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L50d136.  v0:= temp @kind wide;
  #L50d138.  v2:= -1L;
  #L50d13c.  v4:= lcmp(v0, v2);
  #L50d140.  if v4 == 0 then goto L50d146;
  #L50d144.  goto L50d152;
  #L50d146.  v7:= new `java.io.EOFException`;
  #L50d14a.  call `<init>`(v7) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L50d150.  throw v7;
  #L50d152.  v0:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50d156.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L50d15c.  v0:= temp @kind wide;
  #L50d15e.  call temp:= `min`(v7, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L50d164.  v0:= temp @kind wide;
  #L50d166.  v2:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L50d16a.  call `skip`(v2, v0) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L50d170.  v7:= v7 - v0 @kind long;
  #L50d172.  goto L50d10c;
  #L50d174.  return @kind void;
  #L50d176.  v7:= new `java.lang.IllegalStateException`;
  #L50d17a.  v8:= "closed" @kind object;
  #L50d17e.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50d184.  goto L50d188;
  #L50d186.  throw v7;
  #L50d188.  goto L50d186;
}
procedure `okio.Timeout` `timeout`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50cf3c.  v0:= v1.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L50cf40.  call temp:= `timeout`(v0) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L50cf46.  v0:= temp @kind object;
  #L50cf48.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50c91c.  v0:= new `java.lang.StringBuilder`;
  #L50c920.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L50c926.  v1:= "buffer(" @kind object;
  #L50c92a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50c930.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L50c934.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50c93a.  v1:= ")" @kind object;
  #L50c93e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50c944.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L50c94a.  v0:= temp @kind object;
  #L50c94c.  return v0 @kind object;
}
