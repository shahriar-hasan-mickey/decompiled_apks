record `okhttp3.Cookie` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.Cookie.domain` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Cookie.expiresAt` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.Cookie.hostOnly` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.Cookie.httpOnly` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cookie.name` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cookie.path` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.Cookie.persistent` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.Cookie.secure` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cookie.value` @AccessFlag PRIVATE_FINAL;
}
global `java.util.regex.Pattern` `@@okhttp3.Cookie.DAY_OF_MONTH_PATTERN` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.Cookie.MONTH_PATTERN` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.Cookie.TIME_PATTERN` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.Cookie.YEAR_PATTERN` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/Cookie;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4fa8e0.  v0:= "(\\d{2,4})[^\\d]*" @kind object;
  #L4fa8e4.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L4fa8ea.  v0:= temp @kind object;
  #L4fa8ec.  `@@okhttp3.Cookie.YEAR_PATTERN` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L4fa8f0.  v0:= "(?i)(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).*" @kind object;
  #L4fa8f4.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L4fa8fa.  v0:= temp @kind object;
  #L4fa8fc.  `@@okhttp3.Cookie.MONTH_PATTERN` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L4fa900.  v0:= "(\\d{1,2})[^\\d]*" @kind object;
  #L4fa904.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L4fa90a.  v0:= temp @kind object;
  #L4fa90c.  `@@okhttp3.Cookie.DAY_OF_MONTH_PATTERN` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L4fa910.  v0:= "(\\d{1,2}):(\\d{1,2}):(\\d{1,2})[^\\d]*" @kind object;
  #L4fa914.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L4fa91a.  v0:= temp @kind object;
  #L4fa91c.  `@@okhttp3.Cookie.TIME_PATTERN` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L4fa920.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cookie` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `long` v3 , `java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object, `boolean` v7 , `boolean` v8 , `boolean` v9 , `boolean` v10 ) @signature `Lokhttp3/Cookie;.<init>:(Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;ZZZZ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4fa934.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fa93a.  v0.`okhttp3.Cookie.name` @type ^`java.lang.String` := v1 @kind object;
  #L4fa93e.  v0.`okhttp3.Cookie.value` @type ^`java.lang.String` := v2 @kind object;
  #L4fa942.  v0.`okhttp3.Cookie.expiresAt` @type ^`long` := v3 @kind wide;
  #L4fa946.  v0.`okhttp3.Cookie.domain` @type ^`java.lang.String` := v5 @kind object;
  #L4fa94a.  v0.`okhttp3.Cookie.path` @type ^`java.lang.String` := v6 @kind object;
  #L4fa94e.  v0.`okhttp3.Cookie.secure` @type ^`boolean` := v7 @kind boolean;
  #L4fa952.  v0.`okhttp3.Cookie.httpOnly` @type ^`boolean` := v8 @kind boolean;
  #L4fa956.  v0.`okhttp3.Cookie.hostOnly` @type ^`boolean` := v9 @kind boolean;
  #L4fa95a.  v0.`okhttp3.Cookie.persistent` @type ^`boolean` := v10 @kind boolean;
  #L4fa95e.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cookie` v3 @kind this, `okhttp3.Cookie$Builder` v4 @kind object) @signature `Lokhttp3/Cookie;.<init>:(Lokhttp3/Cookie$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4fa970.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fa976.  v0:= v4.`okhttp3.Cookie$Builder.a` @type ^`java.lang.String` @kind object;
  #L4fa97a.  if v0 == 0 then goto L4fa9ec;
  #L4fa97e.  v1:= v4.`okhttp3.Cookie$Builder.b` @type ^`java.lang.String` @kind object;
  #L4fa982.  if v1 == 0 then goto L4fa9dc;
  #L4fa986.  v2:= v4.`okhttp3.Cookie$Builder.d` @type ^`java.lang.String` @kind object;
  #L4fa98a.  if v2 == 0 then goto L4fa9cc;
  #L4fa98e.  v3.`okhttp3.Cookie.name` @type ^`java.lang.String` := v0 @kind object;
  #L4fa992.  v3.`okhttp3.Cookie.value` @type ^`java.lang.String` := v1 @kind object;
  #L4fa996.  v0:= v4.`okhttp3.Cookie$Builder.c` @type ^`long` @kind wide;
  #L4fa99a.  v3.`okhttp3.Cookie.expiresAt` @type ^`long` := v0 @kind wide;
  #L4fa99e.  v3.`okhttp3.Cookie.domain` @type ^`java.lang.String` := v2 @kind object;
  #L4fa9a2.  v0:= v4.`okhttp3.Cookie$Builder.e` @type ^`java.lang.String` @kind object;
  #L4fa9a6.  v3.`okhttp3.Cookie.path` @type ^`java.lang.String` := v0 @kind object;
  #L4fa9aa.  v0:= v4.`okhttp3.Cookie$Builder.f` @type ^`boolean` @kind boolean;
  #L4fa9ae.  v3.`okhttp3.Cookie.secure` @type ^`boolean` := v0 @kind boolean;
  #L4fa9b2.  v0:= v4.`okhttp3.Cookie$Builder.g` @type ^`boolean` @kind boolean;
  #L4fa9b6.  v3.`okhttp3.Cookie.httpOnly` @type ^`boolean` := v0 @kind boolean;
  #L4fa9ba.  v0:= v4.`okhttp3.Cookie$Builder.h` @type ^`boolean` @kind boolean;
  #L4fa9be.  v3.`okhttp3.Cookie.persistent` @type ^`boolean` := v0 @kind boolean;
  #L4fa9c2.  v4:= v4.`okhttp3.Cookie$Builder.i` @type ^`boolean` @kind boolean;
  #L4fa9c6.  v3.`okhttp3.Cookie.hostOnly` @type ^`boolean` := v4 @kind boolean;
  #L4fa9ca.  return @kind void;
  #L4fa9cc.  v4:= new `java.lang.NullPointerException`;
  #L4fa9d0.  v0:= "builder.domain == null" @kind object;
  #L4fa9d4.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fa9da.  throw v4;
  #L4fa9dc.  v4:= new `java.lang.NullPointerException`;
  #L4fa9e0.  v0:= "builder.value == null" @kind object;
  #L4fa9e4.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fa9ea.  throw v4;
  #L4fa9ec.  v4:= new `java.lang.NullPointerException`;
  #L4fa9f0.  v0:= "builder.name == null" @kind object;
  #L4fa9f4.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fa9fa.  throw v4;
}
procedure `okhttp3.Cookie` `a`(`long` v23 , `okhttp3.HttpUrl` v25 @kind object, `java.lang.String` v26 @kind object) @signature `Lokhttp3/Cookie;.a:(JLokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/Cookie;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;

  #L4fa618.  v0:= v26 @kind object;
  #L4fa61c.  call temp:= `length`(v26) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fa622.  v1:= temp;
  #L4fa624.  v2:= 0I;
  #L4fa626.  v3:= 59I;
  #L4fa62a.  call temp:= `delimiterOffset`(v0, v2, v1, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L4fa630.  v4:= temp;
  #L4fa632.  v5:= 61I;
  #L4fa636.  call temp:= `delimiterOffset`(v0, v2, v4, v5) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L4fa63c.  v6:= temp;
  #L4fa63e.  v7:= 0I;
  #L4fa640.  if v6 != v4 then goto L4fa646;
  #L4fa644.  return v7 @kind object;
  #L4fa646.  call temp:= `trimSubstring`(v0, v2, v6) @signature `Lokhttp3/internal/Util;.trimSubstring:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L4fa64c.  v9:= temp @kind object;
  #L4fa64e.  call temp:= `isEmpty`(v9) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L4fa654.  v8:= temp;
  #L4fa656.  if v8 != 0 then goto L4fa882;
  #L4fa65a.  call temp:= `indexOfControlOrNonAscii`(v9) @signature `Lokhttp3/internal/Util;.indexOfControlOrNonAscii:(Ljava/lang/String;)I` @kind static;
  #L4fa660.  v8:= temp;
  #L4fa662.  v10:= -1I;
  #L4fa664.  if v8 == v10 then goto L4fa66c;
  #L4fa668.  goto L4fa882;
  #L4fa66c.  v8:= 1I;
  #L4fa66e.  v6:= v6 + v8 @kind int;
  #L4fa670.  call temp:= `trimSubstring`(v0, v6, v4) @signature `Lokhttp3/internal/Util;.trimSubstring:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L4fa676.  v6:= temp @kind object;
  #L4fa678.  call temp:= `indexOfControlOrNonAscii`(v6) @signature `Lokhttp3/internal/Util;.indexOfControlOrNonAscii:(Ljava/lang/String;)I` @kind static;
  #L4fa67e.  v11:= temp;
  #L4fa680.  if v11 == v10 then goto L4fa686;
  #L4fa684.  return v7 @kind object;
  #L4fa686.  v4:= v4 + v8 @kind int;
  #L4fa688.  v10:= -1L;
  #L4fa68c.  v12:= 253402300799999L;
  #L4fa696.  v8:= v7 @kind object;
  #L4fa698.  v14:= v8 @kind object;
  #L4fa69a.  v19:= v10 @kind wide;
  #L4fa69e.  v21:= v12 @kind wide;
  #L4fa6a2.  v15:= 0I;
  #L4fa6a4.  v16:= 0I;
  #L4fa6a8.  v17:= 1I;
  #L4fa6ac.  v18:= 0I;
  #L4fa6b0.  if v4 >= v1 then goto L4fa78c;
  #L4fa6b4.  call temp:= `delimiterOffset`(v0, v4, v1, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L4fa6ba.  v7:= temp;
  #L4fa6bc.  call temp:= `delimiterOffset`(v0, v4, v7, v5) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L4fa6c2.  v3:= temp;
  #L4fa6c4.  call temp:= `trimSubstring`(v0, v4, v3) @signature `Lokhttp3/internal/Util;.trimSubstring:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L4fa6ca.  v4:= temp @kind object;
  #L4fa6cc.  if v3 >= v7 then goto L4fa6de;
  #L4fa6d0.  v3:= v3 + 1;
  #L4fa6d4.  call temp:= `trimSubstring`(v0, v3, v7) @signature `Lokhttp3/internal/Util;.trimSubstring:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L4fa6da.  v3:= temp @kind object;
  #L4fa6dc.  goto L4fa6e2;
  #L4fa6de.  v3:= "" @kind object;
  #L4fa6e2.  v5:= "expires" @kind object;
  #L4fa6e6.  call temp:= `equalsIgnoreCase`(v4, v5) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4fa6ec.  v5:= temp;
  #L4fa6ee.  if v5 == 0 then goto L4fa704;
  #L4fa6f2.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fa6f8.  v4:= temp;
  #L4fa6fa.  call temp:= `parseExpires`(v3, v2, v4) @signature `Lokhttp3/Cookie;.parseExpires:(Ljava/lang/String;II)J` @kind static;
  #L4fa700.  v21:= temp @kind wide;
  #L4fa702.  goto L4fa71c;
  #L4fa704.  v5:= "max-age" @kind object;
  #L4fa708.  call temp:= `equalsIgnoreCase`(v4, v5) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4fa70e.  v5:= temp;
  #L4fa710.  if v5 == 0 then goto L4fa722;
  #L4fa714.  call temp:= `parseMaxAge`(v3) @signature `Lokhttp3/Cookie;.parseMaxAge:(Ljava/lang/String;)J` @kind static;
  #L4fa71a.  v19:= temp @kind wide;
  #L4fa71c.  v18:= 1I;
  #L4fa720.  goto L4fa77c;
  #L4fa722.  v5:= "domain" @kind object;
  #L4fa726.  call temp:= `equalsIgnoreCase`(v4, v5) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4fa72c.  v5:= temp;
  #L4fa72e.  if v5 == 0 then goto L4fa740;
  #L4fa732.  call temp:= `parseDomain`(v3) @signature `Lokhttp3/Cookie;.parseDomain:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L4fa738.  v14:= temp @kind object;
  #L4fa73a.  v17:= 0I;
  #L4fa73e.  goto L4fa77c;
  #L4fa740.  v5:= "path" @kind object;
  #L4fa744.  call temp:= `equalsIgnoreCase`(v4, v5) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4fa74a.  v5:= temp;
  #L4fa74c.  if v5 == 0 then goto L4fa754;
  #L4fa750.  v8:= v3 @kind object;
  #L4fa752.  goto L4fa77c;
  #L4fa754.  v3:= "secure" @kind object;
  #L4fa758.  call temp:= `equalsIgnoreCase`(v4, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4fa75e.  v3:= temp;
  #L4fa760.  if v3 == 0 then goto L4fa768;
  #L4fa764.  v15:= 1I;
  #L4fa766.  goto L4fa77c;
  #L4fa768.  v3:= "httponly" @kind object;
  #L4fa76c.  call temp:= `equalsIgnoreCase`(v4, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4fa772.  v3:= temp;
  #L4fa774.  if v3 == 0 then goto L4fa77c;
  #L4fa778.  v16:= 1I;
  #L4fa77c.  v4:= v7 + 1;
  #L4fa780.  v3:= 59I;
  #L4fa784.  v5:= 61I;
  #L4fa788.  v7:= 0I;
  #L4fa78a.  goto L4fa6b0;
  #L4fa78c.  v0:= -9223372036854775808L;
  #L4fa790.  v3:= lcmp(v19, v0);
  #L4fa794.  if v3 != 0 then goto L4fa79c;
  #L4fa798.  v11:= v0 @kind wide;
  #L4fa79a.  goto L4fa7e6;
  #L4fa79c.  v0:= lcmp(v19, v10);
  #L4fa7a0.  if v0 == 0 then goto L4fa7e2;
  #L4fa7a4.  v0:= 9223372036854775L;
  #L4fa7ae.  v3:= lcmp(v19, v0);
  #L4fa7b2.  if v3 > 0 then goto L4fa7c0;
  #L4fa7b6.  v0:= 1000L;
  #L4fa7ba.  v19:= v19 * v0 @kind long;
  #L4fa7be.  goto L4fa7ca;
  #L4fa7c0.  v19:= 9223372036854775807L;
  #L4fa7ca.  v0:= v23 + v19 @kind long;
  #L4fa7ce.  v3:= lcmp(v0, v23);
  #L4fa7d2.  if v3 < 0 then goto L4fa7de;
  #L4fa7d6.  v3:= lcmp(v0, v12);
  #L4fa7da.  if v3 <= 0 then goto L4fa798;
  #L4fa7de.  v11:= v12 @kind wide;
  #L4fa7e0.  goto L4fa7e6;
  #L4fa7e2.  v11:= v21 @kind wide;
  #L4fa7e6.  call temp:= `host`(v25) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L4fa7ec.  v0:= temp @kind object;
  #L4fa7ee.  if v14 != 0 then goto L4fa7f8;
  #L4fa7f2.  v13:= v0 @kind object;
  #L4fa7f4.  v1:= 0I;
  #L4fa7f6.  goto L4fa80c;
  #L4fa7f8.  call temp:= `domainMatch`(v0, v14) @signature `Lokhttp3/Cookie;.domainMatch:(Ljava/lang/String;Ljava/lang/String;)Z` @kind static;
  #L4fa7fe.  v1:= temp;
  #L4fa800.  if v1 != 0 then goto L4fa808;
  #L4fa804.  v1:= 0I;
  #L4fa806.  return v1 @kind object;
  #L4fa808.  v1:= 0I;
  #L4fa80a.  v13:= v14 @kind object;
  #L4fa80c.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fa812.  v0:= temp;
  #L4fa814.  call temp:= `length`(v13) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fa81a.  v3:= temp;
  #L4fa81c.  if v0 == v3 then goto L4fa836;
  #L4fa820.  call temp:= `get`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.get:()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;` @kind static;
  #L4fa826.  v0:= temp @kind object;
  #L4fa828.  call temp:= `getEffectiveTldPlusOne`(v0, v13) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.getEffectiveTldPlusOne:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4fa82e.  v0:= temp @kind object;
  #L4fa830.  if v0 != 0 then goto L4fa836;
  #L4fa834.  return v1 @kind object;
  #L4fa836.  v0:= "/" @kind object;
  #L4fa83a.  if v8 == 0 then goto L4fa850;
  #L4fa83e.  call temp:= `startsWith`(v8, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L4fa844.  v1:= temp;
  #L4fa846.  if v1 != 0 then goto L4fa84c;
  #L4fa84a.  goto L4fa850;
  #L4fa84c.  v14:= v8 @kind object;
  #L4fa84e.  goto L4fa872;
  #L4fa850.  call temp:= `encodedPath`(v25) @signature `Lokhttp3/HttpUrl;.encodedPath:()Ljava/lang/String;` @kind virtual;
  #L4fa856.  v1:= temp @kind object;
  #L4fa858.  v3:= 47I;
  #L4fa85c.  call temp:= `lastIndexOf`(v1, v3) @signature `Ljava/lang/String;.lastIndexOf:(I)I` @kind virtual;
  #L4fa862.  v3:= temp;
  #L4fa864.  if v3 == 0 then goto L4fa870;
  #L4fa868.  call temp:= `substring`(v1, v2, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L4fa86e.  v0:= temp @kind object;
  #L4fa870.  v14:= v0 @kind object;
  #L4fa872.  v0:= new `okhttp3.Cookie`;
  #L4fa876.  v8:= v0 @kind object;
  #L4fa878.  v10:= v6 @kind object;
  #L4fa87a.  call `<init>`(v8, v9, v10, v11, v13, v14, v15, v16, v17, v18) @signature `Lokhttp3/Cookie;.<init>:(Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;ZZZZ)V` @kind direct;
  #L4fa880.  return v0 @kind object;
  #L4fa882.  v0:= v7 @kind object;
  #L4fa884.  return v0 @kind object;
  catch `java.lang.IllegalArgumentException` @[L4fa6f2..L4fa702] goto L4fa77c;
  catch `java.lang.NumberFormatException` @[L4fa714..L4fa71c] goto L4fa77c;
  catch `java.lang.IllegalArgumentException` @[L4fa732..L4fa73a] goto L4fa77c;
}
procedure `int` `dateCharacterOffset`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 ) @signature `Lokhttp3/Cookie;.dateCharacterOffset:(Ljava/lang/String;IIZ)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4f9fd4.  if v4 >= v5 then goto L4fa04a;
  #L4f9fd8.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4f9fde.  v0:= temp;
  #L4f9fe0.  v1:= 32I;
  #L4f9fe4.  v2:= 1I;
  #L4f9fe6.  if v0 >= v1 then goto L4f9ff2;
  #L4f9fea.  v1:= 9I;
  #L4f9fee.  if v0 != v1 then goto L4fa038;
  #L4f9ff2.  v1:= 127I;
  #L4f9ff6.  if v0 >= v1 then goto L4fa038;
  #L4f9ffa.  v1:= 48I;
  #L4f9ffe.  if v0 < v1 then goto L4fa00a;
  #L4fa002.  v1:= 57I;
  #L4fa006.  if v0 <= v1 then goto L4fa038;
  #L4fa00a.  v1:= 97I;
  #L4fa00e.  if v0 < v1 then goto L4fa01a;
  #L4fa012.  v1:= 122I;
  #L4fa016.  if v0 <= v1 then goto L4fa038;
  #L4fa01a.  v1:= 65I;
  #L4fa01e.  if v0 < v1 then goto L4fa02a;
  #L4fa022.  v1:= 90I;
  #L4fa026.  if v0 <= v1 then goto L4fa038;
  #L4fa02a.  v1:= 58I;
  #L4fa02e.  if v0 != v1 then goto L4fa034;
  #L4fa032.  goto L4fa038;
  #L4fa034.  v0:= 0I;
  #L4fa036.  goto L4fa03a;
  #L4fa038.  v0:= 1I;
  #L4fa03a.  v1:= v6 ^~ 1;
  #L4fa03e.  if v0 != v1 then goto L4fa044;
  #L4fa042.  return v4;
  #L4fa044.  v4:= v4 + 1;
  #L4fa048.  goto L4f9fd4;
  #L4fa04a.  return v5;
}
procedure `boolean` `domainMatch`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Cookie;.domainMatch:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4f9d80.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4f9d86.  v0:= temp;
  #L4f9d88.  v1:= 1I;
  #L4f9d8a.  if v0 == 0 then goto L4f9d90;
  #L4f9d8e.  return v1;
  #L4f9d90.  call temp:= `endsWith`(v2, v3) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L4f9d96.  v0:= temp;
  #L4f9d98.  if v0 == 0 then goto L4f9dce;
  #L4f9d9c.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4f9da2.  v0:= temp;
  #L4f9da4.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4f9daa.  v3:= temp;
  #L4f9dac.  v0:= v0 - v3 @kind int;
  #L4f9dae.  v0:= v0 - v1 @kind int;
  #L4f9db0.  call temp:= `charAt`(v2, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4f9db6.  v3:= temp;
  #L4f9db8.  v0:= 46I;
  #L4f9dbc.  if v3 != v0 then goto L4f9dce;
  #L4f9dc0.  call temp:= `verifyAsIpAddress`(v2) @signature `Lokhttp3/internal/Util;.verifyAsIpAddress:(Ljava/lang/String;)Z` @kind static;
  #L4f9dc6.  v2:= temp;
  #L4f9dc8.  if v2 != 0 then goto L4f9dce;
  #L4f9dcc.  return v1;
  #L4f9dce.  v2:= 0I;
  #L4f9dd0.  return v2;
}
procedure `okhttp3.Cookie` `parse`(`okhttp3.HttpUrl` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Cookie;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/Cookie;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4fa8bc.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L4fa8c2.  v0:= temp @kind wide;
  #L4fa8c4.  call temp:= `a`(v0, v2, v3) @signature `Lokhttp3/Cookie;.a:(JLokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/Cookie;` @kind static;
  #L4fa8ca.  v2:= temp @kind object;
  #L4fa8cc.  return v2 @kind object;
}
procedure `java.util.List` `parseAll`(`okhttp3.HttpUrl` v4 @kind object, `okhttp3.Headers` v5 @kind object) @signature `Lokhttp3/Cookie;.parseAll:(Lokhttp3/HttpUrl;Lokhttp3/Headers;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fa2c4.  v0:= "Set-Cookie" @kind object;
  #L4fa2c8.  call temp:= `values`(v5, v0) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L4fa2ce.  v5:= temp @kind object;
  #L4fa2d0.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4fa2d6.  v0:= temp;
  #L4fa2d8.  v1:= 0I;
  #L4fa2da.  v2:= 0I;
  #L4fa2dc.  if v2 >= v0 then goto L4fa314;
  #L4fa2e0.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4fa2e6.  v3:= temp @kind object;
  #L4fa2e8.  v3:= (`java.lang.String`) v3 @kind object;
  #L4fa2ec.  call temp:= `parse`(v4, v3) @signature `Lokhttp3/Cookie;.parse:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/Cookie;` @kind static;
  #L4fa2f2.  v3:= temp @kind object;
  #L4fa2f4.  if v3 != 0 then goto L4fa2fa;
  #L4fa2f8.  goto L4fa30e;
  #L4fa2fa.  if v1 != 0 then goto L4fa308;
  #L4fa2fe.  v1:= new `java.util.ArrayList`;
  #L4fa302.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4fa308.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fa30e.  v2:= v2 + 1;
  #L4fa312.  goto L4fa2dc;
  #L4fa314.  if v1 == 0 then goto L4fa322;
  #L4fa318.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L4fa31e.  v4:= temp @kind object;
  #L4fa320.  goto L4fa32a;
  #L4fa322.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L4fa328.  v4:= temp @kind object;
  #L4fa32a.  return v4 @kind object;
}
procedure `java.lang.String` `parseDomain`(`java.lang.String` v2 @kind object) @signature `Lokhttp3/Cookie;.parseDomain:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4fa134.  v0:= "." @kind object;
  #L4fa138.  call temp:= `endsWith`(v2, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L4fa13e.  v1:= temp;
  #L4fa140.  if v1 != 0 then goto L4fa174;
  #L4fa144.  call temp:= `startsWith`(v2, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L4fa14a.  v0:= temp;
  #L4fa14c.  if v0 == 0 then goto L4fa15a;
  #L4fa150.  v0:= 1I;
  #L4fa152.  call temp:= `substring`(v2, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L4fa158.  v2:= temp @kind object;
  #L4fa15a.  call temp:= `canonicalizeHost`(v2) @signature `Lokhttp3/internal/Util;.canonicalizeHost:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L4fa160.  v2:= temp @kind object;
  #L4fa162.  if v2 == 0 then goto L4fa168;
  #L4fa166.  return v2 @kind object;
  #L4fa168.  v2:= new `java.lang.IllegalArgumentException`;
  #L4fa16c.  call `<init>`(v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L4fa172.  throw v2;
  #L4fa174.  v2:= new `java.lang.IllegalArgumentException`;
  #L4fa178.  call `<init>`(v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L4fa17e.  throw v2;
}
procedure `long` `parseExpires`(`java.lang.String` v12 @kind object, `int` v13 , `int` v14 ) @signature `Lokhttp3/Cookie;.parseExpires:(Ljava/lang/String;II)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L4fa354.  v0:= 0I;
  #L4fa356.  call temp:= `dateCharacterOffset`(v12, v13, v14, v0) @signature `Lokhttp3/Cookie;.dateCharacterOffset:(Ljava/lang/String;IIZ)I` @kind static;
  #L4fa35c.  v13:= temp;
  #L4fa35e.  v1:= `@@okhttp3.Cookie.TIME_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L4fa362.  call temp:= `matcher`(v1, v12) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L4fa368.  v1:= temp @kind object;
  #L4fa36a.  v2:= -1I;
  #L4fa36c.  v3:= -1I;
  #L4fa36e.  v4:= -1I;
  #L4fa370.  v5:= -1I;
  #L4fa372.  v6:= -1I;
  #L4fa374.  v7:= -1I;
  #L4fa376.  v8:= -1I;
  #L4fa378.  v9:= 2I;
  #L4fa37a.  v10:= 1I;
  #L4fa37c.  if v13 >= v14 then goto L4fa492;
  #L4fa380.  v11:= v13 + 1;
  #L4fa384.  call temp:= `dateCharacterOffset`(v12, v11, v14, v10) @signature `Lokhttp3/Cookie;.dateCharacterOffset:(Ljava/lang/String;IIZ)I` @kind static;
  #L4fa38a.  v11:= temp;
  #L4fa38c.  call temp:= `region`(v1, v13, v11) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L4fa392.  if v4 != v2 then goto L4fa3e2;
  #L4fa396.  v13:= `@@okhttp3.Cookie.TIME_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L4fa39a.  call temp:= `usePattern`(v1, v13) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L4fa3a0.  v13:= temp @kind object;
  #L4fa3a2.  call temp:= `matches`(v13) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L4fa3a8.  v13:= temp;
  #L4fa3aa.  if v13 == 0 then goto L4fa3e2;
  #L4fa3ae.  call temp:= `group`(v1, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L4fa3b4.  v13:= temp @kind object;
  #L4fa3b6.  call temp:= `parseInt`(v13) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L4fa3bc.  v4:= temp;
  #L4fa3be.  call temp:= `group`(v1, v9) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L4fa3c4.  v13:= temp @kind object;
  #L4fa3c6.  call temp:= `parseInt`(v13) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L4fa3cc.  v7:= temp;
  #L4fa3ce.  v13:= 3I;
  #L4fa3d0.  call temp:= `group`(v1, v13) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L4fa3d6.  v13:= temp @kind object;
  #L4fa3d8.  call temp:= `parseInt`(v13) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L4fa3de.  v8:= temp;
  #L4fa3e0.  goto L4fa482;
  #L4fa3e2.  if v5 != v2 then goto L4fa410;
  #L4fa3e6.  v13:= `@@okhttp3.Cookie.DAY_OF_MONTH_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L4fa3ea.  call temp:= `usePattern`(v1, v13) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L4fa3f0.  v13:= temp @kind object;
  #L4fa3f2.  call temp:= `matches`(v13) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L4fa3f8.  v13:= temp;
  #L4fa3fa.  if v13 == 0 then goto L4fa410;
  #L4fa3fe.  call temp:= `group`(v1, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L4fa404.  v13:= temp @kind object;
  #L4fa406.  call temp:= `parseInt`(v13) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L4fa40c.  v5:= temp;
  #L4fa40e.  goto L4fa482;
  #L4fa410.  if v6 != v2 then goto L4fa456;
  #L4fa414.  v13:= `@@okhttp3.Cookie.MONTH_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L4fa418.  call temp:= `usePattern`(v1, v13) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L4fa41e.  v9:= temp @kind object;
  #L4fa420.  call temp:= `matches`(v9) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L4fa426.  v9:= temp;
  #L4fa428.  if v9 == 0 then goto L4fa456;
  #L4fa42c.  call temp:= `group`(v1, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L4fa432.  v6:= temp @kind object;
  #L4fa434.  v9:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L4fa438.  call temp:= `toLowerCase`(v6, v9) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L4fa43e.  v6:= temp @kind object;
  #L4fa440.  call temp:= `pattern`(v13) @signature `Ljava/util/regex/Pattern;.pattern:()Ljava/lang/String;` @kind virtual;
  #L4fa446.  v13:= temp @kind object;
  #L4fa448.  call temp:= `indexOf`(v13, v6) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L4fa44e.  v13:= temp;
  #L4fa450.  v6:= v13 / 4;
  #L4fa454.  goto L4fa482;
  #L4fa456.  if v3 != v2 then goto L4fa482;
  #L4fa45a.  v13:= `@@okhttp3.Cookie.YEAR_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L4fa45e.  call temp:= `usePattern`(v1, v13) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L4fa464.  v13:= temp @kind object;
  #L4fa466.  call temp:= `matches`(v13) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L4fa46c.  v13:= temp;
  #L4fa46e.  if v13 == 0 then goto L4fa482;
  #L4fa472.  call temp:= `group`(v1, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L4fa478.  v13:= temp @kind object;
  #L4fa47a.  call temp:= `parseInt`(v13) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L4fa480.  v3:= temp;
  #L4fa482.  v11:= v11 + 1;
  #L4fa486.  call temp:= `dateCharacterOffset`(v12, v11, v14, v0) @signature `Lokhttp3/Cookie;.dateCharacterOffset:(Ljava/lang/String;IIZ)I` @kind static;
  #L4fa48c.  v13:= temp;
  #L4fa48e.  goto L4fa378;
  #L4fa492.  v12:= 70I;
  #L4fa496.  if v3 < v12 then goto L4fa4a6;
  #L4fa49a.  v12:= 99I;
  #L4fa49e.  if v3 > v12 then goto L4fa4a6;
  #L4fa4a2.  v3:= v3 + 1900;
  #L4fa4a6.  if v3 < 0 then goto L4fa4b6;
  #L4fa4aa.  v12:= 69I;
  #L4fa4ae.  if v3 > v12 then goto L4fa4b6;
  #L4fa4b2.  v3:= v3 + 2000;
  #L4fa4b6.  v12:= 1601I;
  #L4fa4ba.  if v3 < v12 then goto L4fa586;
  #L4fa4be.  if v6 == v2 then goto L4fa57a;
  #L4fa4c2.  if v5 < v10 then goto L4fa56e;
  #L4fa4c6.  v12:= 31I;
  #L4fa4ca.  if v5 > v12 then goto L4fa56e;
  #L4fa4ce.  if v4 < 0 then goto L4fa562;
  #L4fa4d2.  v12:= 23I;
  #L4fa4d6.  if v4 > v12 then goto L4fa562;
  #L4fa4da.  if v7 < 0 then goto L4fa556;
  #L4fa4de.  v12:= 59I;
  #L4fa4e2.  if v7 > v12 then goto L4fa556;
  #L4fa4e6.  if v8 < 0 then goto L4fa54a;
  #L4fa4ea.  if v8 > v12 then goto L4fa54a;
  #L4fa4ee.  v12:= new `java.util.GregorianCalendar`;
  #L4fa4f2.  v13:= `@@okhttp3.internal.Util.UTC` @type ^`java.util.TimeZone` @kind object;
  #L4fa4f6.  call `<init>`(v12, v13) @signature `Ljava/util/GregorianCalendar;.<init>:(Ljava/util/TimeZone;)V` @kind direct;
  #L4fa4fc.  call `setLenient`(v12, v0) @signature `Ljava/util/Calendar;.setLenient:(Z)V` @kind virtual;
  #L4fa502.  call `set`(v12, v10, v3) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L4fa508.  v6:= v6 - v10 @kind int;
  #L4fa50a.  call `set`(v12, v9, v6) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L4fa510.  v13:= 5I;
  #L4fa512.  call `set`(v12, v13, v5) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L4fa518.  v13:= 11I;
  #L4fa51c.  call `set`(v12, v13, v4) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L4fa522.  v13:= 12I;
  #L4fa526.  call `set`(v12, v13, v7) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L4fa52c.  v13:= 13I;
  #L4fa530.  call `set`(v12, v13, v8) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L4fa536.  v13:= 14I;
  #L4fa53a.  call `set`(v12, v13, v0) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L4fa540.  call temp:= `getTimeInMillis`(v12) @signature `Ljava/util/Calendar;.getTimeInMillis:()J` @kind virtual;
  #L4fa546.  v12:= temp @kind wide;
  #L4fa548.  return v12 @kind wide;
  #L4fa54a.  v12:= new `java.lang.IllegalArgumentException`;
  #L4fa54e.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L4fa554.  throw v12;
  #L4fa556.  v12:= new `java.lang.IllegalArgumentException`;
  #L4fa55a.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L4fa560.  throw v12;
  #L4fa562.  v12:= new `java.lang.IllegalArgumentException`;
  #L4fa566.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L4fa56c.  throw v12;
  #L4fa56e.  v12:= new `java.lang.IllegalArgumentException`;
  #L4fa572.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L4fa578.  throw v12;
  #L4fa57a.  v12:= new `java.lang.IllegalArgumentException`;
  #L4fa57e.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L4fa584.  throw v12;
  #L4fa586.  v12:= new `java.lang.IllegalArgumentException`;
  #L4fa58a.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L4fa590.  goto L4fa594;
  #L4fa592.  throw v12;
  #L4fa594.  goto L4fa592;
}
procedure `long` `parseMaxAge`(`java.lang.String` v6 @kind object) @signature `Lokhttp3/Cookie;.parseMaxAge:(Ljava/lang/String;)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4fa5a8.  v0:= -9223372036854775808L;
  #L4fa5ac.  call temp:= `parseLong`(v6) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L4fa5b2.  v2:= temp @kind wide;
  #L4fa5b4.  v4:= 0L;
  #L4fa5b8.  v6:= lcmp(v2, v4);
  #L4fa5bc.  if v6 > 0 then goto L4fa5c2;
  #L4fa5c0.  goto L4fa5c4;
  #L4fa5c2.  v0:= v2 @kind wide;
  #L4fa5c4.  return v0 @kind wide;
  #L4fa5c6.  v2:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L4fa5c8.  v3:= "-?\\d+" @kind object;
  #L4fa5cc.  call temp:= `matches`(v6, v3) @signature `Ljava/lang/String;.matches:(Ljava/lang/String;)Z` @kind virtual;
  #L4fa5d2.  v3:= temp;
  #L4fa5d4.  if v3 == 0 then goto L4fa5f6;
  #L4fa5d8.  v2:= "-" @kind object;
  #L4fa5dc.  call temp:= `startsWith`(v6, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L4fa5e2.  v6:= temp;
  #L4fa5e4.  if v6 == 0 then goto L4fa5ea;
  #L4fa5e8.  goto L4fa5f4;
  #L4fa5ea.  v0:= 9223372036854775807L;
  #L4fa5f4.  return v0 @kind wide;
  #L4fa5f6.  throw v2;
  catch `java.lang.NumberFormatException` @[L4fa5ac..L4fa5b4] goto L4fa5c6;
}
procedure `boolean` `pathMatch`(`okhttp3.HttpUrl` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Cookie;.pathMatch:(Lokhttp3/HttpUrl;Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4f9f40.  call temp:= `encodedPath`(v2) @signature `Lokhttp3/HttpUrl;.encodedPath:()Ljava/lang/String;` @kind virtual;
  #L4f9f46.  v2:= temp @kind object;
  #L4f9f48.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4f9f4e.  v0:= temp;
  #L4f9f50.  v1:= 1I;
  #L4f9f52.  if v0 == 0 then goto L4f9f58;
  #L4f9f56.  return v1;
  #L4f9f58.  call temp:= `startsWith`(v2, v3) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L4f9f5e.  v0:= temp;
  #L4f9f60.  if v0 == 0 then goto L4f9f90;
  #L4f9f64.  v0:= "/" @kind object;
  #L4f9f68.  call temp:= `endsWith`(v3, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L4f9f6e.  v0:= temp;
  #L4f9f70.  if v0 == 0 then goto L4f9f76;
  #L4f9f74.  return v1;
  #L4f9f76.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4f9f7c.  v3:= temp;
  #L4f9f7e.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4f9f84.  v2:= temp;
  #L4f9f86.  v3:= 47I;
  #L4f9f8a.  if v2 != v3 then goto L4f9f90;
  #L4f9f8e.  return v1;
  #L4f9f90.  v2:= 0I;
  #L4f9f92.  return v2;
}
procedure `java.lang.String` `b`(`okhttp3.Cookie` v6 @kind this, `boolean` v7 ) @signature `Lokhttp3/Cookie;.b:(Z)Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4fa1c4.  v0:= new `java.lang.StringBuilder`;
  #L4fa1c8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fa1ce.  v1:= v6.`okhttp3.Cookie.name` @type ^`java.lang.String` @kind object;
  #L4fa1d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fa1d8.  v1:= 61I;
  #L4fa1dc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fa1e2.  v1:= v6.`okhttp3.Cookie.value` @type ^`java.lang.String` @kind object;
  #L4fa1e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fa1ec.  v1:= v6.`okhttp3.Cookie.persistent` @type ^`boolean` @kind boolean;
  #L4fa1f0.  if v1 == 0 then goto L4fa230;
  #L4fa1f4.  v1:= v6.`okhttp3.Cookie.expiresAt` @type ^`long` @kind wide;
  #L4fa1f8.  v3:= -9223372036854775808L;
  #L4fa1fc.  v5:= lcmp(v1, v3);
  #L4fa200.  if v5 != 0 then goto L4fa20a;
  #L4fa204.  v1:= "; max-age=0" @kind object;
  #L4fa208.  goto L4fa22a;
  #L4fa20a.  v1:= "; expires=" @kind object;
  #L4fa20e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fa214.  v1:= new `java.util.Date`;
  #L4fa218.  v2:= v6.`okhttp3.Cookie.expiresAt` @type ^`long` @kind wide;
  #L4fa21c.  call `<init>`(v1, v2) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L4fa222.  call temp:= `format`(v1) @signature `Lokhttp3/internal/http/HttpDate;.format:(Ljava/util/Date;)Ljava/lang/String;` @kind static;
  #L4fa228.  v1:= temp @kind object;
  #L4fa22a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fa230.  v1:= v6.`okhttp3.Cookie.hostOnly` @type ^`boolean` @kind boolean;
  #L4fa234.  if v1 != 0 then goto L4fa25a;
  #L4fa238.  v1:= "; domain=" @kind object;
  #L4fa23c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fa242.  if v7 == 0 then goto L4fa250;
  #L4fa246.  v7:= "." @kind object;
  #L4fa24a.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fa250.  v7:= v6.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L4fa254.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fa25a.  v7:= "; path=" @kind object;
  #L4fa25e.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fa264.  v7:= v6.`okhttp3.Cookie.path` @type ^`java.lang.String` @kind object;
  #L4fa268.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fa26e.  v7:= v6.`okhttp3.Cookie.secure` @type ^`boolean` @kind boolean;
  #L4fa272.  if v7 == 0 then goto L4fa280;
  #L4fa276.  v7:= "; secure" @kind object;
  #L4fa27a.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fa280.  v7:= v6.`okhttp3.Cookie.httpOnly` @type ^`boolean` @kind boolean;
  #L4fa284.  if v7 == 0 then goto L4fa292;
  #L4fa288.  v7:= "; httponly" @kind object;
  #L4fa28c.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fa292.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fa298.  v7:= temp @kind object;
  #L4fa29a.  return v7 @kind object;
}
procedure `java.lang.String` `domain`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.domain:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa104.  v0:= v1.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L4fa108.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.Cookie` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lokhttp3/Cookie;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4f9de4.  v0:= instanceof @variable v7 @type ^`okhttp3.Cookie` @kind boolean;
  #L4f9de8.  v1:= 0I;
  #L4f9dea.  if v0 != 0 then goto L4f9df0;
  #L4f9dee.  return v1;
  #L4f9df0.  v7:= (`okhttp3.Cookie`) v7 @kind object;
  #L4f9df4.  v0:= v7.`okhttp3.Cookie.name` @type ^`java.lang.String` @kind object;
  #L4f9df8.  v2:= v6.`okhttp3.Cookie.name` @type ^`java.lang.String` @kind object;
  #L4f9dfc.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4f9e02.  v0:= temp;
  #L4f9e04.  if v0 == 0 then goto L4f9e86;
  #L4f9e08.  v0:= v7.`okhttp3.Cookie.value` @type ^`java.lang.String` @kind object;
  #L4f9e0c.  v2:= v6.`okhttp3.Cookie.value` @type ^`java.lang.String` @kind object;
  #L4f9e10.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4f9e16.  v0:= temp;
  #L4f9e18.  if v0 == 0 then goto L4f9e86;
  #L4f9e1c.  v0:= v7.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L4f9e20.  v2:= v6.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L4f9e24.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4f9e2a.  v0:= temp;
  #L4f9e2c.  if v0 == 0 then goto L4f9e86;
  #L4f9e30.  v0:= v7.`okhttp3.Cookie.path` @type ^`java.lang.String` @kind object;
  #L4f9e34.  v2:= v6.`okhttp3.Cookie.path` @type ^`java.lang.String` @kind object;
  #L4f9e38.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4f9e3e.  v0:= temp;
  #L4f9e40.  if v0 == 0 then goto L4f9e86;
  #L4f9e44.  v2:= v7.`okhttp3.Cookie.expiresAt` @type ^`long` @kind wide;
  #L4f9e48.  v4:= v6.`okhttp3.Cookie.expiresAt` @type ^`long` @kind wide;
  #L4f9e4c.  v0:= lcmp(v2, v4);
  #L4f9e50.  if v0 != 0 then goto L4f9e86;
  #L4f9e54.  v0:= v7.`okhttp3.Cookie.secure` @type ^`boolean` @kind boolean;
  #L4f9e58.  v2:= v6.`okhttp3.Cookie.secure` @type ^`boolean` @kind boolean;
  #L4f9e5c.  if v0 != v2 then goto L4f9e86;
  #L4f9e60.  v0:= v7.`okhttp3.Cookie.httpOnly` @type ^`boolean` @kind boolean;
  #L4f9e64.  v2:= v6.`okhttp3.Cookie.httpOnly` @type ^`boolean` @kind boolean;
  #L4f9e68.  if v0 != v2 then goto L4f9e86;
  #L4f9e6c.  v0:= v7.`okhttp3.Cookie.persistent` @type ^`boolean` @kind boolean;
  #L4f9e70.  v2:= v6.`okhttp3.Cookie.persistent` @type ^`boolean` @kind boolean;
  #L4f9e74.  if v0 != v2 then goto L4f9e86;
  #L4f9e78.  v7:= v7.`okhttp3.Cookie.hostOnly` @type ^`boolean` @kind boolean;
  #L4f9e7c.  v0:= v6.`okhttp3.Cookie.hostOnly` @type ^`boolean` @kind boolean;
  #L4f9e80.  if v7 != v0 then goto L4f9e86;
  #L4f9e84.  v1:= 1I;
  #L4f9e86.  return v1;
}
procedure `long` `expiresAt`(`okhttp3.Cookie` v2 @kind this) @signature `Lokhttp3/Cookie;.expiresAt:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fa33c.  v0:= v2.`okhttp3.Cookie.expiresAt` @type ^`long` @kind wide;
  #L4fa340.  return v0 @kind wide;
}
procedure `int` `hashCode`(`okhttp3.Cookie` v6 @kind this) @signature `Lokhttp3/Cookie;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4fa05c.  v0:= v6.`okhttp3.Cookie.name` @type ^`java.lang.String` @kind object;
  #L4fa060.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L4fa066.  v0:= temp;
  #L4fa068.  v1:= 527I;
  #L4fa06c.  v1:= v1 + v0 @kind int;
  #L4fa06e.  v1:= v1 * 31;
  #L4fa072.  v0:= v6.`okhttp3.Cookie.value` @type ^`java.lang.String` @kind object;
  #L4fa076.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L4fa07c.  v0:= temp;
  #L4fa07e.  v1:= v1 + v0 @kind int;
  #L4fa080.  v1:= v1 * 31;
  #L4fa084.  v0:= v6.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L4fa088.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L4fa08e.  v0:= temp;
  #L4fa090.  v1:= v1 + v0 @kind int;
  #L4fa092.  v1:= v1 * 31;
  #L4fa096.  v0:= v6.`okhttp3.Cookie.path` @type ^`java.lang.String` @kind object;
  #L4fa09a.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L4fa0a0.  v0:= temp;
  #L4fa0a2.  v1:= v1 + v0 @kind int;
  #L4fa0a4.  v1:= v1 * 31;
  #L4fa0a8.  v2:= v6.`okhttp3.Cookie.expiresAt` @type ^`long` @kind wide;
  #L4fa0ac.  v0:= 32I;
  #L4fa0b0.  v4:= v2 ^>> v0 @kind long;
  #L4fa0b4.  v2:= v2 ^~ v4 @kind long;
  #L4fa0b6.  v0:= (`int`) v2 @kind l2i;
  #L4fa0b8.  v1:= v1 + v0 @kind int;
  #L4fa0ba.  v1:= v1 * 31;
  #L4fa0be.  v0:= v6.`okhttp3.Cookie.secure` @type ^`boolean` @kind boolean;
  #L4fa0c2.  v0:= v0 ^~ 1;
  #L4fa0c6.  v1:= v1 + v0 @kind int;
  #L4fa0c8.  v1:= v1 * 31;
  #L4fa0cc.  v0:= v6.`okhttp3.Cookie.httpOnly` @type ^`boolean` @kind boolean;
  #L4fa0d0.  v0:= v0 ^~ 1;
  #L4fa0d4.  v1:= v1 + v0 @kind int;
  #L4fa0d6.  v1:= v1 * 31;
  #L4fa0da.  v0:= v6.`okhttp3.Cookie.persistent` @type ^`boolean` @kind boolean;
  #L4fa0de.  v0:= v0 ^~ 1;
  #L4fa0e2.  v1:= v1 + v0 @kind int;
  #L4fa0e4.  v1:= v1 * 31;
  #L4fa0e8.  v0:= v6.`okhttp3.Cookie.hostOnly` @type ^`boolean` @kind boolean;
  #L4fa0ec.  v0:= v0 ^~ 1;
  #L4fa0f0.  v1:= v1 + v0 @kind int;
  #L4fa0f2.  return v1;
}
procedure `boolean` `hostOnly`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.hostOnly:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f9e98.  v0:= v1.`okhttp3.Cookie.hostOnly` @type ^`boolean` @kind boolean;
  #L4f9e9c.  return v0;
}
procedure `boolean` `httpOnly`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.httpOnly:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f9eb0.  v0:= v1.`okhttp3.Cookie.httpOnly` @type ^`boolean` @kind boolean;
  #L4f9eb4.  return v0;
}
procedure `boolean` `matches`(`okhttp3.Cookie` v2 @kind this, `okhttp3.HttpUrl` v3 @kind object) @signature `Lokhttp3/Cookie;.matches:(Lokhttp3/HttpUrl;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f9ec8.  v0:= v2.`okhttp3.Cookie.hostOnly` @type ^`boolean` @kind boolean;
  #L4f9ecc.  if v0 == 0 then goto L4f9ee6;
  #L4f9ed0.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L4f9ed6.  v0:= temp @kind object;
  #L4f9ed8.  v1:= v2.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L4f9edc.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4f9ee2.  v0:= temp;
  #L4f9ee4.  goto L4f9efa;
  #L4f9ee6.  call temp:= `host`(v3) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L4f9eec.  v0:= temp @kind object;
  #L4f9eee.  v1:= v2.`okhttp3.Cookie.domain` @type ^`java.lang.String` @kind object;
  #L4f9ef2.  call temp:= `domainMatch`(v0, v1) @signature `Lokhttp3/Cookie;.domainMatch:(Ljava/lang/String;Ljava/lang/String;)Z` @kind static;
  #L4f9ef8.  v0:= temp;
  #L4f9efa.  v1:= 0I;
  #L4f9efc.  if v0 != 0 then goto L4f9f02;
  #L4f9f00.  return v1;
  #L4f9f02.  v0:= v2.`okhttp3.Cookie.path` @type ^`java.lang.String` @kind object;
  #L4f9f06.  call temp:= `pathMatch`(v3, v0) @signature `Lokhttp3/Cookie;.pathMatch:(Lokhttp3/HttpUrl;Ljava/lang/String;)Z` @kind static;
  #L4f9f0c.  v0:= temp;
  #L4f9f0e.  if v0 != 0 then goto L4f9f14;
  #L4f9f12.  return v1;
  #L4f9f14.  v0:= v2.`okhttp3.Cookie.secure` @type ^`boolean` @kind boolean;
  #L4f9f18.  if v0 == 0 then goto L4f9f2a;
  #L4f9f1c.  call temp:= `isHttps`(v3) @signature `Lokhttp3/HttpUrl;.isHttps:()Z` @kind virtual;
  #L4f9f22.  v3:= temp;
  #L4f9f24.  if v3 != 0 then goto L4f9f2a;
  #L4f9f28.  return v1;
  #L4f9f2a.  v3:= 1I;
  #L4f9f2c.  return v3;
}
procedure `java.lang.String` `name`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.name:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa11c.  v0:= v1.`okhttp3.Cookie.name` @type ^`java.lang.String` @kind object;
  #L4fa120.  return v0 @kind object;
}
procedure `java.lang.String` `path`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.path:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa190.  v0:= v1.`okhttp3.Cookie.path` @type ^`java.lang.String` @kind object;
  #L4fa194.  return v0 @kind object;
}
procedure `boolean` `persistent`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.persistent:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f9fa4.  v0:= v1.`okhttp3.Cookie.persistent` @type ^`boolean` @kind boolean;
  #L4f9fa8.  return v0;
}
procedure `boolean` `secure`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.secure:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f9fbc.  v0:= v1.`okhttp3.Cookie.secure` @type ^`boolean` @kind boolean;
  #L4f9fc0.  return v0;
}
procedure `java.lang.String` `toString`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa1a8.  v0:= 0I;
  #L4fa1aa.  call temp:= `b`(v1, v0) @signature `Lokhttp3/Cookie;.b:(Z)Ljava/lang/String;` @kind virtual;
  #L4fa1b0.  v0:= temp @kind object;
  #L4fa1b2.  return v0 @kind object;
}
procedure `java.lang.String` `value`(`okhttp3.Cookie` v1 @kind this) @signature `Lokhttp3/Cookie;.value:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fa2ac.  v0:= v1.`okhttp3.Cookie.value` @type ^`java.lang.String` @kind object;
  #L4fa2b0.  return v0 @kind object;
}
