record `okhttp3.Cache$Entry` @kind class @AccessFlag FINAL {
  `int` `okhttp3.Cache$Entry.code` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Handshake` `okhttp3.Cache$Entry.handshake` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.message` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Protocol` `okhttp3.Cache$Entry.protocol` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Cache$Entry.receivedResponseMillis` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.requestMethod` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Cache$Entry.responseHeaders` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Cache$Entry.sentRequestMillis` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.url` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Cache$Entry.varyHeaders` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.Cache$Entry.SENT_MILLIS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/Cache$Entry;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4f74e8.  v0:= new `java.lang.StringBuilder`;
  #L4f74ec.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4f74f2.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L4f74f8.  v1:= temp @kind object;
  #L4f74fa.  call temp:= `getPrefix`(v1) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @kind virtual;
  #L4f7500.  v1:= temp @kind object;
  #L4f7502.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7508.  v1:= "-Sent-Millis" @kind object;
  #L4f750c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7512.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4f7518.  v0:= temp @kind object;
  #L4f751a.  `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` := v0 @kind object;
  #L4f751e.  v0:= new `java.lang.StringBuilder`;
  #L4f7522.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4f7528.  call temp:= `get`() @signature `Lokhttp3/internal/platform/Platform;.get:()Lokhttp3/internal/platform/Platform;` @kind static;
  #L4f752e.  v1:= temp @kind object;
  #L4f7530.  call temp:= `getPrefix`(v1) @signature `Lokhttp3/internal/platform/Platform;.getPrefix:()Ljava/lang/String;` @kind virtual;
  #L4f7536.  v1:= temp @kind object;
  #L4f7538.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f753e.  v1:= "-Received-Millis" @kind object;
  #L4f7542.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7548.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4f754e.  v0:= temp @kind object;
  #L4f7550.  `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` := v0 @kind object;
  #L4f7554.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache$Entry` v2 @kind this, `okhttp3.Response` v3 @kind object) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokhttp3/Response;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4f7568.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f756e.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L4f7574.  v0:= temp @kind object;
  #L4f7576.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L4f757c.  v0:= temp @kind object;
  #L4f757e.  call temp:= `toString`(v0) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L4f7584.  v0:= temp @kind object;
  #L4f7586.  v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` := v0 @kind object;
  #L4f758a.  call temp:= `varyHeaders`(v3) @signature `Lokhttp3/internal/http/HttpHeaders;.varyHeaders:(Lokhttp3/Response;)Lokhttp3/Headers;` @kind static;
  #L4f7590.  v0:= temp @kind object;
  #L4f7592.  v2.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L4f7596.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L4f759c.  v0:= temp @kind object;
  #L4f759e.  call temp:= `method`(v0) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L4f75a4.  v0:= temp @kind object;
  #L4f75a6.  v2.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` := v0 @kind object;
  #L4f75aa.  call temp:= `protocol`(v3) @signature `Lokhttp3/Response;.protocol:()Lokhttp3/Protocol;` @kind virtual;
  #L4f75b0.  v0:= temp @kind object;
  #L4f75b2.  v2.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` := v0 @kind object;
  #L4f75b6.  call temp:= `code`(v3) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L4f75bc.  v0:= temp;
  #L4f75be.  v2.`okhttp3.Cache$Entry.code` @type ^`int` := v0;
  #L4f75c2.  call temp:= `message`(v3) @signature `Lokhttp3/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L4f75c8.  v0:= temp @kind object;
  #L4f75ca.  v2.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` := v0 @kind object;
  #L4f75ce.  call temp:= `headers`(v3) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L4f75d4.  v0:= temp @kind object;
  #L4f75d6.  v2.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L4f75da.  call temp:= `handshake`(v3) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L4f75e0.  v0:= temp @kind object;
  #L4f75e2.  v2.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L4f75e6.  call temp:= `sentRequestAtMillis`(v3) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L4f75ec.  v0:= temp @kind wide;
  #L4f75ee.  v2.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` := v0 @kind wide;
  #L4f75f2.  call temp:= `receivedResponseAtMillis`(v3) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L4f75f8.  v0:= temp @kind wide;
  #L4f75fa.  v2.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` := v0 @kind wide;
  #L4f75fe.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache$Entry` v8 @kind this, `okio.Source` v9 @kind object) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokio/Source;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4f7610.  call `<init>`(v8) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f7616.  call temp:= `buffer`(v9) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L4f761c.  v0:= temp @kind object;
  #L4f761e.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L4f7624.  v1:= temp @kind object;
  #L4f7626.  v8.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` := v1 @kind object;
  #L4f762a.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L4f7630.  v1:= temp @kind object;
  #L4f7632.  v8.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` := v1 @kind object;
  #L4f7636.  v1:= new `okhttp3.Headers$Builder`;
  #L4f763a.  call `<init>`(v1) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L4f7640.  call temp:= `c`(v0) @signature `Lokhttp3/Cache;.c:(Lokio/BufferedSource;)I` @kind static;
  #L4f7646.  v2:= temp;
  #L4f7648.  v3:= 0I;
  #L4f764a.  v4:= 0I;
  #L4f764c.  if v4 >= v2 then goto L4f7664;
  #L4f7650.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L4f7656.  v5:= temp @kind object;
  #L4f7658.  call temp:= `a`(v1, v5) @signature `Lokhttp3/Headers$Builder;.a:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L4f765e.  v4:= v4 + 1;
  #L4f7662.  goto L4f764c;
  #L4f7664.  call temp:= `build`(v1) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L4f766a.  v1:= temp @kind object;
  #L4f766c.  v8.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` := v1 @kind object;
  #L4f7670.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L4f7676.  v1:= temp @kind object;
  #L4f7678.  call temp:= `parse`(v1) @signature `Lokhttp3/internal/http/StatusLine;.parse:(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;` @kind static;
  #L4f767e.  v1:= temp @kind object;
  #L4f7680.  v2:= v1.`okhttp3.internal.http.StatusLine.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L4f7684.  v8.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` := v2 @kind object;
  #L4f7688.  v2:= v1.`okhttp3.internal.http.StatusLine.code` @type ^`int`;
  #L4f768c.  v8.`okhttp3.Cache$Entry.code` @type ^`int` := v2;
  #L4f7690.  v1:= v1.`okhttp3.internal.http.StatusLine.message` @type ^`java.lang.String` @kind object;
  #L4f7694.  v8.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` := v1 @kind object;
  #L4f7698.  v1:= new `okhttp3.Headers$Builder`;
  #L4f769c.  call `<init>`(v1) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L4f76a2.  call temp:= `c`(v0) @signature `Lokhttp3/Cache;.c:(Lokio/BufferedSource;)I` @kind static;
  #L4f76a8.  v2:= temp;
  #L4f76aa.  if v3 >= v2 then goto L4f76c2;
  #L4f76ae.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L4f76b4.  v4:= temp @kind object;
  #L4f76b6.  call temp:= `a`(v1, v4) @signature `Lokhttp3/Headers$Builder;.a:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L4f76bc.  v3:= v3 + 1;
  #L4f76c0.  goto L4f76aa;
  #L4f76c2.  v2:= `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` @kind object;
  #L4f76c6.  call temp:= `get`(v1, v2) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4f76cc.  v3:= temp @kind object;
  #L4f76ce.  v4:= `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` @kind object;
  #L4f76d2.  call temp:= `get`(v1, v4) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4f76d8.  v5:= temp @kind object;
  #L4f76da.  call temp:= `removeAll`(v1, v2) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L4f76e0.  call temp:= `removeAll`(v1, v4) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L4f76e6.  v6:= 0L;
  #L4f76ea.  if v3 == 0 then goto L4f76f8;
  #L4f76ee.  call temp:= `parseLong`(v3) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L4f76f4.  v2:= temp @kind wide;
  #L4f76f6.  goto L4f76fa;
  #L4f76f8.  v2:= v6 @kind wide;
  #L4f76fa.  v8.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` := v2 @kind wide;
  #L4f76fe.  if v5 == 0 then goto L4f770a;
  #L4f7702.  call temp:= `parseLong`(v5) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L4f7708.  v6:= temp @kind wide;
  #L4f770a.  v8.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` := v6 @kind wide;
  #L4f770e.  call temp:= `build`(v1) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L4f7714.  v1:= temp @kind object;
  #L4f7716.  v8.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` := v1 @kind object;
  #L4f771a.  call temp:= `isHttps`(v8) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @kind direct;
  #L4f7720.  v1:= temp;
  #L4f7722.  if v1 == 0 then goto L4f77c2;
  #L4f7726.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L4f772c.  v1:= temp @kind object;
  #L4f772e.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4f7734.  v2:= temp;
  #L4f7736.  if v2 > 0 then goto L4f778a;
  #L4f773a.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L4f7740.  v1:= temp @kind object;
  #L4f7742.  call temp:= `forJavaName`(v1) @signature `Lokhttp3/CipherSuite;.forJavaName:(Ljava/lang/String;)Lokhttp3/CipherSuite;` @kind static;
  #L4f7748.  v1:= temp @kind object;
  #L4f774a.  call temp:= `readCertificateList`(v8, v0) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/BufferedSource;)Ljava/util/List;` @kind direct;
  #L4f7750.  v2:= temp @kind object;
  #L4f7752.  call temp:= `readCertificateList`(v8, v0) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/BufferedSource;)Ljava/util/List;` @kind direct;
  #L4f7758.  v3:= temp @kind object;
  #L4f775a.  call temp:= `exhausted`(v0) @signature `Lokio/BufferedSource;.exhausted:()Z` @kind interface;
  #L4f7760.  v4:= temp;
  #L4f7762.  if v4 != 0 then goto L4f7778;
  #L4f7766.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L4f776c.  v0:= temp @kind object;
  #L4f776e.  call temp:= `forJavaName`(v0) @signature `Lokhttp3/TlsVersion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @kind static;
  #L4f7774.  v0:= temp @kind object;
  #L4f7776.  goto L4f777c;
  #L4f7778.  v0:= `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L4f777c.  call temp:= `get`(v0, v1, v2, v3) @signature `Lokhttp3/Handshake;.get:(Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Ljava/util/List;)Lokhttp3/Handshake;` @kind static;
  #L4f7782.  v0:= temp @kind object;
  #L4f7784.  v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L4f7788.  goto L4f77c8;
  #L4f778a.  v0:= new `java.io.IOException`;
  #L4f778e.  v2:= new `java.lang.StringBuilder`;
  #L4f7792.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4f7798.  v3:= "expected \"\" but was \"" @kind object;
  #L4f779c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f77a2.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f77a8.  v1:= "\"" @kind object;
  #L4f77ac.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f77b2.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4f77b8.  v1:= temp @kind object;
  #L4f77ba.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f77c0.  throw v0;
  #L4f77c2.  v0:= 0I;
  #L4f77c4.  v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L4f77c8.  call `close`(v9) @signature `Lokio/Source;.close:()V` @kind interface;
  #L4f77ce.  return @kind void;
  #L4f77d0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f77d2.  call `close`(v9) @signature `Lokio/Source;.close:()V` @kind interface;
  #L4f77d8.  goto L4f77dc;
  #L4f77da.  throw v0;
  #L4f77dc.  goto L4f77da;
  catch `java.lang.Throwable` @[L4f7616..L4f77c8] goto L4f77d0;
}
procedure `boolean` `isHttps`(`okhttp3.Cache$Entry` v2 @kind this) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4f72cc.  v0:= v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L4f72d0.  v1:= "https://" @kind object;
  #L4f72d4.  call temp:= `startsWith`(v0, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L4f72da.  v0:= temp;
  #L4f72dc.  return v0;
}
procedure `java.util.List` `readCertificateList`(`okhttp3.Cache$Entry` v6 @kind this, `okio.BufferedSource` v7 @kind object) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/BufferedSource;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4f7350.  call temp:= `c`(v7) @signature `Lokhttp3/Cache;.c:(Lokio/BufferedSource;)I` @kind static;
  #L4f7356.  v0:= temp;
  #L4f7358.  v1:= -1I;
  #L4f735a.  if v0 != v1 then goto L4f7368;
  #L4f735e.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L4f7364.  v7:= temp @kind object;
  #L4f7366.  return v7 @kind object;
  #L4f7368.  v1:= "X.509" @kind object;
  #L4f736c.  call temp:= `getInstance`(v1) @signature `Ljava/security/cert/CertificateFactory;.getInstance:(Ljava/lang/String;)Ljava/security/cert/CertificateFactory;` @kind static;
  #L4f7372.  v1:= temp @kind object;
  #L4f7374.  v2:= new `java.util.ArrayList`;
  #L4f7378.  call `<init>`(v2, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L4f737e.  v3:= 0I;
  #L4f7380.  if v3 >= v0 then goto L4f73c0;
  #L4f7384.  call temp:= `readUtf8LineStrict`(v7) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L4f738a.  v4:= temp @kind object;
  #L4f738c.  v5:= new `okio.Buffer`;
  #L4f7390.  call `<init>`(v5) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L4f7396.  call temp:= `decodeBase64`(v4) @signature `Lokio/ByteString;.decodeBase64:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L4f739c.  v4:= temp @kind object;
  #L4f739e.  call temp:= `write`(v5, v4) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L4f73a4.  call temp:= `inputStream`(v5) @signature `Lokio/Buffer;.inputStream:()Ljava/io/InputStream;` @kind virtual;
  #L4f73aa.  v4:= temp @kind object;
  #L4f73ac.  call temp:= `generateCertificate`(v1, v4) @signature `Ljava/security/cert/CertificateFactory;.generateCertificate:(Ljava/io/InputStream;)Ljava/security/cert/Certificate;` @kind virtual;
  #L4f73b2.  v4:= temp @kind object;
  #L4f73b4.  call temp:= `add`(v2, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4f73ba.  v3:= v3 + 1;
  #L4f73be.  goto L4f7380;
  #L4f73c0.  return v2 @kind object;
  #L4f73c2.  v7:= Exception @type ^`java.security.cert.CertificateException` @kind object;
  #L4f73c4.  v0:= new `java.io.IOException`;
  #L4f73c8.  call temp:= `getMessage`(v7) @signature `Ljava/security/cert/CertificateException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L4f73ce.  v7:= temp @kind object;
  #L4f73d0.  call `<init>`(v0, v7) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f73d6.  goto L4f73da;
  #L4f73d8.  throw v0;
  #L4f73da.  goto L4f73d8;
  catch `java.security.cert.CertificateException` @[L4f7368..L4f73ba] goto L4f73c2;
}
procedure `void` `writeCertList`(`okhttp3.Cache$Entry` v4 @kind this, `okio.BufferedSink` v5 @kind object, `java.util.List` v6 @kind object) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/BufferedSink;Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4f77fc.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4f7802.  v0:= temp;
  #L4f7804.  v0:= (`long`) v0 @kind i2l;
  #L4f7806.  call temp:= `writeDecimalLong`(v5, v0) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L4f780c.  v0:= temp @kind object;
  #L4f780e.  v1:= 10I;
  #L4f7812.  call temp:= `writeByte`(v0, v1) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L4f7818.  v0:= 0I;
  #L4f781a.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4f7820.  v2:= temp;
  #L4f7822.  if v0 >= v2 then goto L4f785e;
  #L4f7826.  call temp:= `get`(v6, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4f782c.  v3:= temp @kind object;
  #L4f782e.  v3:= (`java.security.cert.Certificate`) v3 @kind object;
  #L4f7832.  call temp:= `getEncoded`(v3) @signature `Ljava/security/cert/Certificate;.getEncoded:()[B` @kind virtual;
  #L4f7838.  v3:= temp @kind object;
  #L4f783a.  call temp:= `of`(v3) @signature `Lokio/ByteString;.of:([B)Lokio/ByteString;` @kind static;
  #L4f7840.  v3:= temp @kind object;
  #L4f7842.  call temp:= `base64`(v3) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @kind virtual;
  #L4f7848.  v3:= temp @kind object;
  #L4f784a.  call temp:= `writeUtf8`(v5, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L4f7850.  v3:= temp @kind object;
  #L4f7852.  call temp:= `writeByte`(v3, v1) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L4f7858.  v0:= v0 + 1;
  #L4f785c.  goto L4f7822;
  #L4f785e.  return @kind void;
  #L4f7860.  v5:= Exception @type ^`java.security.cert.CertificateEncodingException` @kind object;
  #L4f7862.  v6:= new `java.io.IOException`;
  #L4f7866.  call temp:= `getMessage`(v5) @signature `Ljava/security/cert/CertificateEncodingException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L4f786c.  v5:= temp @kind object;
  #L4f786e.  call `<init>`(v6, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f7874.  goto L4f7878;
  #L4f7876.  throw v6;
  #L4f7878.  goto L4f7876;
  catch `java.security.cert.CertificateEncodingException` @[L4f77fc..L4f7858] goto L4f7860;
}
procedure `boolean` `matches`(`okhttp3.Cache$Entry` v2 @kind this, `okhttp3.Request` v3 @kind object, `okhttp3.Response` v4 @kind object) @signature `Lokhttp3/Cache$Entry;.matches:(Lokhttp3/Request;Lokhttp3/Response;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f72f0.  v0:= v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L4f72f4.  call temp:= `url`(v3) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L4f72fa.  v1:= temp @kind object;
  #L4f72fc.  call temp:= `toString`(v1) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L4f7302.  v1:= temp @kind object;
  #L4f7304.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4f730a.  v0:= temp;
  #L4f730c.  if v0 == 0 then goto L4f733c;
  #L4f7310.  v0:= v2.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L4f7314.  call temp:= `method`(v3) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L4f731a.  v1:= temp @kind object;
  #L4f731c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4f7322.  v0:= temp;
  #L4f7324.  if v0 == 0 then goto L4f733c;
  #L4f7328.  v0:= v2.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L4f732c.  call temp:= `varyMatches`(v4, v0, v3) @signature `Lokhttp3/internal/http/HttpHeaders;.varyMatches:(Lokhttp3/Response;Lokhttp3/Headers;Lokhttp3/Request;)Z` @kind static;
  #L4f7332.  v3:= temp;
  #L4f7334.  if v3 == 0 then goto L4f733c;
  #L4f7338.  v3:= 1I;
  #L4f733a.  goto L4f733e;
  #L4f733c.  v3:= 0I;
  #L4f733e.  return v3;
}
procedure `okhttp3.Response` `response`(`okhttp3.Cache$Entry` v5 @kind this, `okhttp3.internal.cache.DiskLruCache$Snapshot` v6 @kind object) @signature `Lokhttp3/Cache$Entry;.response:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4f73fc.  v0:= v5.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L4f7400.  v1:= "Content-Type" @kind object;
  #L4f7404.  call temp:= `get`(v0, v1) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4f740a.  v0:= temp @kind object;
  #L4f740c.  v1:= v5.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L4f7410.  v2:= "Content-Length" @kind object;
  #L4f7414.  call temp:= `get`(v1, v2) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4f741a.  v1:= temp @kind object;
  #L4f741c.  v2:= new `okhttp3.Request$Builder`;
  #L4f7420.  call `<init>`(v2) @signature `Lokhttp3/Request$Builder;.<init>:()V` @kind direct;
  #L4f7426.  v3:= v5.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L4f742a.  call temp:= `url`(v2, v3) @signature `Lokhttp3/Request$Builder;.url:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L4f7430.  v2:= temp @kind object;
  #L4f7432.  v3:= v5.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L4f7436.  v4:= 0I;
  #L4f7438.  call temp:= `method`(v2, v3, v4) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L4f743e.  v2:= temp @kind object;
  #L4f7440.  v3:= v5.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L4f7444.  call temp:= `headers`(v2, v3) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @kind virtual;
  #L4f744a.  v2:= temp @kind object;
  #L4f744c.  call temp:= `build`(v2) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L4f7452.  v2:= temp @kind object;
  #L4f7454.  v3:= new `okhttp3.Response$Builder`;
  #L4f7458.  call `<init>`(v3) @signature `Lokhttp3/Response$Builder;.<init>:()V` @kind direct;
  #L4f745e.  call temp:= `request`(v3, v2) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L4f7464.  v2:= temp @kind object;
  #L4f7466.  v3:= v5.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L4f746a.  call temp:= `protocol`(v2, v3) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @kind virtual;
  #L4f7470.  v2:= temp @kind object;
  #L4f7472.  v3:= v5.`okhttp3.Cache$Entry.code` @type ^`int`;
  #L4f7476.  call temp:= `code`(v2, v3) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @kind virtual;
  #L4f747c.  v2:= temp @kind object;
  #L4f747e.  v3:= v5.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` @kind object;
  #L4f7482.  call temp:= `message`(v2, v3) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L4f7488.  v2:= temp @kind object;
  #L4f748a.  v3:= v5.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L4f748e.  call temp:= `headers`(v2, v3) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L4f7494.  v2:= temp @kind object;
  #L4f7496.  v3:= new `okhttp3.Cache$CacheResponseBody`;
  #L4f749a.  call `<init>`(v3, v6, v0, v1) @signature `Lokhttp3/Cache$CacheResponseBody;.<init>:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L4f74a0.  call temp:= `body`(v2, v3) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L4f74a6.  v6:= temp @kind object;
  #L4f74a8.  v0:= v5.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L4f74ac.  call temp:= `handshake`(v6, v0) @signature `Lokhttp3/Response$Builder;.handshake:(Lokhttp3/Handshake;)Lokhttp3/Response$Builder;` @kind virtual;
  #L4f74b2.  v6:= temp @kind object;
  #L4f74b4.  v0:= v5.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` @kind wide;
  #L4f74b8.  call temp:= `sentRequestAtMillis`(v6, v0) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L4f74be.  v6:= temp @kind object;
  #L4f74c0.  v0:= v5.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` @kind wide;
  #L4f74c4.  call temp:= `receivedResponseAtMillis`(v6, v0) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L4f74ca.  v6:= temp @kind object;
  #L4f74cc.  call temp:= `build`(v6) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L4f74d2.  v6:= temp @kind object;
  #L4f74d4.  return v6 @kind object;
}
procedure `void` `writeTo`(`okhttp3.Cache$Entry` v7 @kind this, `okhttp3.internal.cache.DiskLruCache$Editor` v8 @kind object) @signature `Lokhttp3/Cache$Entry;.writeTo:(Lokhttp3/internal/cache/DiskLruCache$Editor;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4f789c.  v0:= 0I;
  #L4f789e.  call temp:= `newSink`(v8, v0) @signature `Lokhttp3/internal/cache/DiskLruCache$Editor;.newSink:(I)Lokio/Sink;` @kind virtual;
  #L4f78a4.  v8:= temp @kind object;
  #L4f78a6.  call temp:= `buffer`(v8) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L4f78ac.  v8:= temp @kind object;
  #L4f78ae.  v1:= v7.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L4f78b2.  call temp:= `writeUtf8`(v8, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L4f78b8.  v1:= temp @kind object;
  #L4f78ba.  v2:= 10I;
  #L4f78be.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L4f78c4.  v1:= v7.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L4f78c8.  call temp:= `writeUtf8`(v8, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L4f78ce.  v1:= temp @kind object;
  #L4f78d0.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L4f78d6.  v1:= v7.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L4f78da.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L4f78e0.  v1:= temp;
  #L4f78e2.  v3:= (`long`) v1 @kind i2l;
  #L4f78e4.  call temp:= `writeDecimalLong`(v8, v3) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L4f78ea.  v1:= temp @kind object;
  #L4f78ec.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L4f78f2.  v1:= v7.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L4f78f6.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L4f78fc.  v1:= temp;
  #L4f78fe.  v3:= 0I;
  #L4f7900.  v4:= ": " @kind object;
  #L4f7904.  if v3 >= v1 then goto L4f7944;
  #L4f7908.  v5:= v7.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L4f790c.  call temp:= `name`(v5, v3) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L4f7912.  v5:= temp @kind object;
  #L4f7914.  call temp:= `writeUtf8`(v8, v5) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L4f791a.  v5:= temp @kind object;
  #L4f791c.  call temp:= `writeUtf8`(v5, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L4f7922.  v4:= temp @kind object;
  #L4f7924.  v5:= v7.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L4f7928.  call temp:= `value`(v5, v3) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L4f792e.  v5:= temp @kind object;
  #L4f7930.  call temp:= `writeUtf8`(v4, v5) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L4f7936.  v4:= temp @kind object;
  #L4f7938.  call temp:= `writeByte`(v4, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L4f793e.  v3:= v3 + 1;
  #L4f7942.  goto L4f7900;
  #L4f7944.  v1:= new `okhttp3.internal.http.StatusLine`;
  #L4f7948.  v3:= v7.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L4f794c.  v5:= v7.`okhttp3.Cache$Entry.code` @type ^`int`;
  #L4f7950.  v6:= v7.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` @kind object;
  #L4f7954.  call `<init>`(v1, v3, v5, v6) @signature `Lokhttp3/internal/http/StatusLine;.<init>:(Lokhttp3/Protocol;ILjava/lang/String;)V` @kind direct;
  #L4f795a.  call temp:= `toString`(v1) @signature `Lokhttp3/internal/http/StatusLine;.toString:()Ljava/lang/String;` @kind virtual;
  #L4f7960.  v1:= temp @kind object;
  #L4f7962.  call temp:= `writeUtf8`(v8, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L4f7968.  v1:= temp @kind object;
  #L4f796a.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L4f7970.  v1:= v7.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L4f7974.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L4f797a.  v1:= temp;
  #L4f797c.  v1:= v1 + 2;
  #L4f7980.  v5:= (`long`) v1 @kind i2l;
  #L4f7982.  call temp:= `writeDecimalLong`(v8, v5) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L4f7988.  v1:= temp @kind object;
  #L4f798a.  call temp:= `writeByte`(v1, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L4f7990.  v1:= v7.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L4f7994.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L4f799a.  v1:= temp;
  #L4f799c.  if v0 >= v1 then goto L4f79dc;
  #L4f79a0.  v3:= v7.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L4f79a4.  call temp:= `name`(v3, v0) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L4f79aa.  v3:= temp @kind object;
  #L4f79ac.  call temp:= `writeUtf8`(v8, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L4f79b2.  v3:= temp @kind object;
  #L4f79b4.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L4f79ba.  v3:= temp @kind object;
  #L4f79bc.  v5:= v7.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L4f79c0.  call temp:= `value`(v5, v0) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L4f79c6.  v5:= temp @kind object;
  #L4f79c8.  call temp:= `writeUtf8`(v3, v5) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L4f79ce.  v3:= temp @kind object;
  #L4f79d0.  call temp:= `writeByte`(v3, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L4f79d6.  v0:= v0 + 1;
  #L4f79da.  goto L4f799c;
  #L4f79dc.  v0:= `@@okhttp3.Cache$Entry.SENT_MILLIS` @type ^`java.lang.String` @kind object;
  #L4f79e0.  call temp:= `writeUtf8`(v8, v0) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L4f79e6.  v0:= temp @kind object;
  #L4f79e8.  call temp:= `writeUtf8`(v0, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L4f79ee.  v0:= temp @kind object;
  #L4f79f0.  v5:= v7.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` @kind wide;
  #L4f79f4.  call temp:= `writeDecimalLong`(v0, v5) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L4f79fa.  v0:= temp @kind object;
  #L4f79fc.  call temp:= `writeByte`(v0, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L4f7a02.  v0:= `@@okhttp3.Cache$Entry.RECEIVED_MILLIS` @type ^`java.lang.String` @kind object;
  #L4f7a06.  call temp:= `writeUtf8`(v8, v0) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L4f7a0c.  v0:= temp @kind object;
  #L4f7a0e.  call temp:= `writeUtf8`(v0, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L4f7a14.  v0:= temp @kind object;
  #L4f7a16.  v3:= v7.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` @kind wide;
  #L4f7a1a.  call temp:= `writeDecimalLong`(v0, v3) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L4f7a20.  v0:= temp @kind object;
  #L4f7a22.  call temp:= `writeByte`(v0, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L4f7a28.  call temp:= `isHttps`(v7) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @kind direct;
  #L4f7a2e.  v0:= temp;
  #L4f7a30.  if v0 == 0 then goto L4f7aa2;
  #L4f7a34.  call temp:= `writeByte`(v8, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L4f7a3a.  v0:= v7.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L4f7a3e.  call temp:= `cipherSuite`(v0) @signature `Lokhttp3/Handshake;.cipherSuite:()Lokhttp3/CipherSuite;` @kind virtual;
  #L4f7a44.  v0:= temp @kind object;
  #L4f7a46.  call temp:= `javaName`(v0) @signature `Lokhttp3/CipherSuite;.javaName:()Ljava/lang/String;` @kind virtual;
  #L4f7a4c.  v0:= temp @kind object;
  #L4f7a4e.  call temp:= `writeUtf8`(v8, v0) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L4f7a54.  v0:= temp @kind object;
  #L4f7a56.  call temp:= `writeByte`(v0, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L4f7a5c.  v0:= v7.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L4f7a60.  call temp:= `peerCertificates`(v0) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L4f7a66.  v0:= temp @kind object;
  #L4f7a68.  call `writeCertList`(v7, v8, v0) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/BufferedSink;Ljava/util/List;)V` @kind direct;
  #L4f7a6e.  v0:= v7.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L4f7a72.  call temp:= `localCertificates`(v0) @signature `Lokhttp3/Handshake;.localCertificates:()Ljava/util/List;` @kind virtual;
  #L4f7a78.  v0:= temp @kind object;
  #L4f7a7a.  call `writeCertList`(v7, v8, v0) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/BufferedSink;Ljava/util/List;)V` @kind direct;
  #L4f7a80.  v0:= v7.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L4f7a84.  call temp:= `tlsVersion`(v0) @signature `Lokhttp3/Handshake;.tlsVersion:()Lokhttp3/TlsVersion;` @kind virtual;
  #L4f7a8a.  v0:= temp @kind object;
  #L4f7a8c.  call temp:= `javaName`(v0) @signature `Lokhttp3/TlsVersion;.javaName:()Ljava/lang/String;` @kind virtual;
  #L4f7a92.  v0:= temp @kind object;
  #L4f7a94.  call temp:= `writeUtf8`(v8, v0) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L4f7a9a.  v0:= temp @kind object;
  #L4f7a9c.  call temp:= `writeByte`(v0, v2) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L4f7aa2.  call `close`(v8) @signature `Lokio/Sink;.close:()V` @kind interface;
  #L4f7aa8.  return @kind void;
}
