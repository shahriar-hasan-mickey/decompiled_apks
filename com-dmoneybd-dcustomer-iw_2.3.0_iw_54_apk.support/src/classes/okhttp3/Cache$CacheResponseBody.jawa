record `okhttp3.Cache$CacheResponseBody` @kind class @AccessFlag  extends `okhttp3.ResponseBody` @kind class {
  `okhttp3.internal.cache.DiskLruCache$Snapshot` `okhttp3.Cache$CacheResponseBody.a` @AccessFlag FINAL;
  `okio.BufferedSource` `okhttp3.Cache$CacheResponseBody.bodySource` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$CacheResponseBody.contentLength` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$CacheResponseBody.contentType` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.Cache$CacheResponseBody` v0 @kind this, `okhttp3.internal.cache.DiskLruCache$Snapshot` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Cache$CacheResponseBody;.<init>:(Lokhttp3/internal/cache/DiskLruCache$Snapshot;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4f7288.  call `<init>`(v0) @signature `Lokhttp3/ResponseBody;.<init>:()V` @kind direct;
  #L4f728e.  v0.`okhttp3.Cache$CacheResponseBody.a` @type ^`okhttp3.internal.cache.DiskLruCache$Snapshot` := v1 @kind object;
  #L4f7292.  v0.`okhttp3.Cache$CacheResponseBody.contentType` @type ^`java.lang.String` := v2 @kind object;
  #L4f7296.  v0.`okhttp3.Cache$CacheResponseBody.contentLength` @type ^`java.lang.String` := v3 @kind object;
  #L4f729a.  v2:= 1I;
  #L4f729c.  call temp:= `getSource`(v1, v2) @signature `Lokhttp3/internal/cache/DiskLruCache$Snapshot;.getSource:(I)Lokio/Source;` @kind virtual;
  #L4f72a2.  v2:= temp @kind object;
  #L4f72a4.  v3:= new `okhttp3.Cache$CacheResponseBody$1`;
  #L4f72a8.  call `<init>`(v3, v0, v2, v1) @signature `Lokhttp3/Cache$CacheResponseBody$1;.<init>:(Lokhttp3/Cache$CacheResponseBody;Lokio/Source;Lokhttp3/internal/cache/DiskLruCache$Snapshot;)V` @kind direct;
  #L4f72ae.  call temp:= `buffer`(v3) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L4f72b4.  v1:= temp @kind object;
  #L4f72b6.  v0.`okhttp3.Cache$CacheResponseBody.bodySource` @type ^`okio.BufferedSource` := v1 @kind object;
  #L4f72ba.  return @kind void;
}
procedure `long` `contentLength`(`okhttp3.Cache$CacheResponseBody` v3 @kind this) @signature `Lokhttp3/Cache$CacheResponseBody;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4f7210.  v0:= -1L;
  #L4f7214.  v2:= v3.`okhttp3.Cache$CacheResponseBody.contentLength` @type ^`java.lang.String` @kind object;
  #L4f7218.  if v2 == 0 then goto L4f7224;
  #L4f721c.  call temp:= `parseLong`(v2) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L4f7222.  v0:= temp @kind wide;
  #L4f7224.  return v0 @kind wide;
  catch `java.lang.NumberFormatException` @[L4f7214..L4f7224] goto L4f7224;
}
procedure `okhttp3.MediaType` `contentType`(`okhttp3.Cache$CacheResponseBody` v1 @kind this) @signature `Lokhttp3/Cache$CacheResponseBody;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f7248.  v0:= v1.`okhttp3.Cache$CacheResponseBody.contentType` @type ^`java.lang.String` @kind object;
  #L4f724c.  if v0 == 0 then goto L4f725a;
  #L4f7250.  call temp:= `parse`(v0) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L4f7256.  v0:= temp @kind object;
  #L4f7258.  goto L4f725c;
  #L4f725a.  v0:= 0I;
  #L4f725c.  return v0 @kind object;
}
procedure `okio.BufferedSource` `source`(`okhttp3.Cache$CacheResponseBody` v1 @kind this) @signature `Lokhttp3/Cache$CacheResponseBody;.source:()Lokio/BufferedSource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f7270.  v0:= v1.`okhttp3.Cache$CacheResponseBody.bodySource` @type ^`okio.BufferedSource` @kind object;
  #L4f7274.  return v0 @kind object;
}
