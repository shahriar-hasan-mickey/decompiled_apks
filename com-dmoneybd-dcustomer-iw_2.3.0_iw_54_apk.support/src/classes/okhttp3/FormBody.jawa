record `okhttp3.FormBody` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.RequestBody` @kind class {
  `java.util.List` `okhttp3.FormBody.encodedNames` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.FormBody.encodedValues` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.MediaType` `@@okhttp3.FormBody.CONTENT_TYPE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/FormBody;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4fb48c.  v0:= "application/x-www-form-urlencoded" @kind object;
  #L4fb490.  call temp:= `get`(v0) @signature `Lokhttp3/MediaType;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L4fb496.  v0:= temp @kind object;
  #L4fb498.  `@@okhttp3.FormBody.CONTENT_TYPE` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L4fb49c.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.FormBody` v0 @kind this, `java.util.List` v1 @kind object, `java.util.List` v2 @kind object) @signature `Lokhttp3/FormBody;.<init>:(Ljava/util/List;Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fb4b0.  call `<init>`(v0) @signature `Lokhttp3/RequestBody;.<init>:()V` @kind direct;
  #L4fb4b6.  call temp:= `immutableList`(v1) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L4fb4bc.  v1:= temp @kind object;
  #L4fb4be.  v0.`okhttp3.FormBody.encodedNames` @type ^`java.util.List` := v1 @kind object;
  #L4fb4c2.  call temp:= `immutableList`(v2) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L4fb4c8.  v1:= temp @kind object;
  #L4fb4ca.  v0.`okhttp3.FormBody.encodedValues` @type ^`java.util.List` := v1 @kind object;
  #L4fb4ce.  return @kind void;
}
procedure `long` `writeOrCountBytes`(`okhttp3.FormBody` v3 @kind this, `okio.BufferedSink` v4 @kind object, `boolean` v5 ) @signature `Lokhttp3/FormBody;.writeOrCountBytes:(Lokio/BufferedSink;Z)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4fb3d4.  if v5 == 0 then goto L4fb3e4;
  #L4fb3d8.  v4:= new `okio.Buffer`;
  #L4fb3dc.  call `<init>`(v4) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L4fb3e2.  goto L4fb3ec;
  #L4fb3e4.  call temp:= `buffer`(v4) @signature `Lokio/BufferedSink;.buffer:()Lokio/Buffer;` @kind interface;
  #L4fb3ea.  v4:= temp @kind object;
  #L4fb3ec.  v0:= 0I;
  #L4fb3ee.  v1:= v3.`okhttp3.FormBody.encodedNames` @type ^`java.util.List` @kind object;
  #L4fb3f2.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4fb3f8.  v1:= temp;
  #L4fb3fa.  if v0 >= v1 then goto L4fb448;
  #L4fb3fe.  if v0 <= 0 then goto L4fb40c;
  #L4fb402.  v2:= 38I;
  #L4fb406.  call temp:= `writeByte`(v4, v2) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L4fb40c.  v2:= v3.`okhttp3.FormBody.encodedNames` @type ^`java.util.List` @kind object;
  #L4fb410.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4fb416.  v2:= temp @kind object;
  #L4fb418.  v2:= (`java.lang.String`) v2 @kind object;
  #L4fb41c.  call temp:= `writeUtf8`(v4, v2) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;)Lokio/Buffer;` @kind virtual;
  #L4fb422.  v2:= 61I;
  #L4fb426.  call temp:= `writeByte`(v4, v2) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L4fb42c.  v2:= v3.`okhttp3.FormBody.encodedValues` @type ^`java.util.List` @kind object;
  #L4fb430.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4fb436.  v2:= temp @kind object;
  #L4fb438.  v2:= (`java.lang.String`) v2 @kind object;
  #L4fb43c.  call temp:= `writeUtf8`(v4, v2) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;)Lokio/Buffer;` @kind virtual;
  #L4fb442.  v0:= v0 + 1;
  #L4fb446.  goto L4fb3fa;
  #L4fb448.  if v5 == 0 then goto L4fb45c;
  #L4fb44c.  call temp:= `size`(v4) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L4fb452.  v0:= temp @kind wide;
  #L4fb454.  call `clear`(v4) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L4fb45a.  goto L4fb460;
  #L4fb45c.  v0:= 0L;
  #L4fb460.  return v0 @kind wide;
}
procedure `long` `contentLength`(`okhttp3.FormBody` v2 @kind this) @signature `Lokhttp3/FormBody;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fb3b4.  v0:= 0I;
  #L4fb3b6.  v1:= 1I;
  #L4fb3b8.  call temp:= `writeOrCountBytes`(v2, v0, v1) @signature `Lokhttp3/FormBody;.writeOrCountBytes:(Lokio/BufferedSink;Z)J` @kind direct;
  #L4fb3be.  v0:= temp @kind wide;
  #L4fb3c0.  return v0 @kind wide;
}
procedure `okhttp3.MediaType` `contentType`(`okhttp3.FormBody` v1 @kind this) @signature `Lokhttp3/FormBody;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fb474.  v0:= `@@okhttp3.FormBody.CONTENT_TYPE` @type ^`okhttp3.MediaType` @kind object;
  #L4fb478.  return v0 @kind object;
}
procedure `java.lang.String` `encodedName`(`okhttp3.FormBody` v1 @kind this, `int` v2 ) @signature `Lokhttp3/FormBody;.encodedName:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fb324.  v0:= v1.`okhttp3.FormBody.encodedNames` @type ^`java.util.List` @kind object;
  #L4fb328.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4fb32e.  v2:= temp @kind object;
  #L4fb330.  v2:= (`java.lang.String`) v2 @kind object;
  #L4fb334.  return v2 @kind object;
}
procedure `java.lang.String` `encodedValue`(`okhttp3.FormBody` v1 @kind this, `int` v2 ) @signature `Lokhttp3/FormBody;.encodedValue:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fb348.  v0:= v1.`okhttp3.FormBody.encodedValues` @type ^`java.util.List` @kind object;
  #L4fb34c.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4fb352.  v2:= temp @kind object;
  #L4fb354.  v2:= (`java.lang.String`) v2 @kind object;
  #L4fb358.  return v2 @kind object;
}
procedure `java.lang.String` `name`(`okhttp3.FormBody` v1 @kind this, `int` v2 ) @signature `Lokhttp3/FormBody;.name:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fb36c.  call temp:= `encodedName`(v1, v2) @signature `Lokhttp3/FormBody;.encodedName:(I)Ljava/lang/String;` @kind virtual;
  #L4fb372.  v2:= temp @kind object;
  #L4fb374.  v0:= 1I;
  #L4fb376.  call temp:= `h`(v2, v0) @signature `Lokhttp3/HttpUrl;.h:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L4fb37c.  v2:= temp @kind object;
  #L4fb37e.  return v2 @kind object;
}
procedure `int` `size`(`okhttp3.FormBody` v1 @kind this) @signature `Lokhttp3/FormBody;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fb304.  v0:= v1.`okhttp3.FormBody.encodedNames` @type ^`java.util.List` @kind object;
  #L4fb308.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4fb30e.  v0:= temp;
  #L4fb310.  return v0;
}
procedure `java.lang.String` `value`(`okhttp3.FormBody` v1 @kind this, `int` v2 ) @signature `Lokhttp3/FormBody;.value:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fb390.  call temp:= `encodedValue`(v1, v2) @signature `Lokhttp3/FormBody;.encodedValue:(I)Ljava/lang/String;` @kind virtual;
  #L4fb396.  v2:= temp @kind object;
  #L4fb398.  v0:= 1I;
  #L4fb39a.  call temp:= `h`(v2, v0) @signature `Lokhttp3/HttpUrl;.h:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L4fb3a0.  v2:= temp @kind object;
  #L4fb3a2.  return v2 @kind object;
}
procedure `void` `writeTo`(`okhttp3.FormBody` v1 @kind this, `okio.BufferedSink` v2 @kind object) @signature `Lokhttp3/FormBody;.writeTo:(Lokio/BufferedSink;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fb4e0.  v0:= 0I;
  #L4fb4e2.  call temp:= `writeOrCountBytes`(v1, v2, v0) @signature `Lokhttp3/FormBody;.writeOrCountBytes:(Lokio/BufferedSink;Z)J` @kind direct;
  #L4fb4e8.  return @kind void;
}
