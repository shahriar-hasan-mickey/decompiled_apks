record `okhttp3.CacheControl` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.CacheControl.a` @AccessFlag ;
  `boolean` `okhttp3.CacheControl.immutable` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.CacheControl.isPrivate` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.CacheControl.isPublic` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.CacheControl.maxAgeSeconds` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.CacheControl.maxStaleSeconds` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.CacheControl.minFreshSeconds` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.CacheControl.mustRevalidate` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.CacheControl.noCache` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.CacheControl.noStore` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.CacheControl.noTransform` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.CacheControl.onlyIfCached` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.CacheControl.sMaxAgeSeconds` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.CacheControl` `@@okhttp3.CacheControl.FORCE_CACHE` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.CacheControl` `@@okhttp3.CacheControl.FORCE_NETWORK` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/CacheControl;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4f8020.  v0:= new `okhttp3.CacheControl$Builder`;
  #L4f8024.  call `<init>`(v0) @signature `Lokhttp3/CacheControl$Builder;.<init>:()V` @kind direct;
  #L4f802a.  call temp:= `noCache`(v0) @signature `Lokhttp3/CacheControl$Builder;.noCache:()Lokhttp3/CacheControl$Builder;` @kind virtual;
  #L4f8030.  v0:= temp @kind object;
  #L4f8032.  call temp:= `build`(v0) @signature `Lokhttp3/CacheControl$Builder;.build:()Lokhttp3/CacheControl;` @kind virtual;
  #L4f8038.  v0:= temp @kind object;
  #L4f803a.  `@@okhttp3.CacheControl.FORCE_NETWORK` @type ^`okhttp3.CacheControl` := v0 @kind object;
  #L4f803e.  v0:= new `okhttp3.CacheControl$Builder`;
  #L4f8042.  call `<init>`(v0) @signature `Lokhttp3/CacheControl$Builder;.<init>:()V` @kind direct;
  #L4f8048.  call temp:= `onlyIfCached`(v0) @signature `Lokhttp3/CacheControl$Builder;.onlyIfCached:()Lokhttp3/CacheControl$Builder;` @kind virtual;
  #L4f804e.  v0:= temp @kind object;
  #L4f8050.  v1:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4f8054.  v2:= 2147483647I;
  #L4f805a.  call temp:= `maxStale`(v0, v2, v1) @signature `Lokhttp3/CacheControl$Builder;.maxStale:(ILjava/util/concurrent/TimeUnit;)Lokhttp3/CacheControl$Builder;` @kind virtual;
  #L4f8060.  v0:= temp @kind object;
  #L4f8062.  call temp:= `build`(v0) @signature `Lokhttp3/CacheControl$Builder;.build:()Lokhttp3/CacheControl;` @kind virtual;
  #L4f8068.  v0:= temp @kind object;
  #L4f806a.  `@@okhttp3.CacheControl.FORCE_CACHE` @type ^`okhttp3.CacheControl` := v0 @kind object;
  #L4f806e.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.CacheControl` v1 @kind this, `okhttp3.CacheControl$Builder` v2 @kind object) @signature `Lokhttp3/CacheControl;.<init>:(Lokhttp3/CacheControl$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4f80cc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f80d2.  v0:= v2.`okhttp3.CacheControl$Builder.a` @type ^`boolean` @kind boolean;
  #L4f80d6.  v1.`okhttp3.CacheControl.noCache` @type ^`boolean` := v0 @kind boolean;
  #L4f80da.  v0:= v2.`okhttp3.CacheControl$Builder.b` @type ^`boolean` @kind boolean;
  #L4f80de.  v1.`okhttp3.CacheControl.noStore` @type ^`boolean` := v0 @kind boolean;
  #L4f80e2.  v0:= v2.`okhttp3.CacheControl$Builder.c` @type ^`int`;
  #L4f80e6.  v1.`okhttp3.CacheControl.maxAgeSeconds` @type ^`int` := v0;
  #L4f80ea.  v0:= -1I;
  #L4f80ec.  v1.`okhttp3.CacheControl.sMaxAgeSeconds` @type ^`int` := v0;
  #L4f80f0.  v0:= 0I;
  #L4f80f2.  v1.`okhttp3.CacheControl.isPrivate` @type ^`boolean` := v0 @kind boolean;
  #L4f80f6.  v1.`okhttp3.CacheControl.isPublic` @type ^`boolean` := v0 @kind boolean;
  #L4f80fa.  v1.`okhttp3.CacheControl.mustRevalidate` @type ^`boolean` := v0 @kind boolean;
  #L4f80fe.  v0:= v2.`okhttp3.CacheControl$Builder.d` @type ^`int`;
  #L4f8102.  v1.`okhttp3.CacheControl.maxStaleSeconds` @type ^`int` := v0;
  #L4f8106.  v0:= v2.`okhttp3.CacheControl$Builder.e` @type ^`int`;
  #L4f810a.  v1.`okhttp3.CacheControl.minFreshSeconds` @type ^`int` := v0;
  #L4f810e.  v0:= v2.`okhttp3.CacheControl$Builder.f` @type ^`boolean` @kind boolean;
  #L4f8112.  v1.`okhttp3.CacheControl.onlyIfCached` @type ^`boolean` := v0 @kind boolean;
  #L4f8116.  v0:= v2.`okhttp3.CacheControl$Builder.g` @type ^`boolean` @kind boolean;
  #L4f811a.  v1.`okhttp3.CacheControl.noTransform` @type ^`boolean` := v0 @kind boolean;
  #L4f811e.  v2:= v2.`okhttp3.CacheControl$Builder.h` @type ^`boolean` @kind boolean;
  #L4f8122.  v1.`okhttp3.CacheControl.immutable` @type ^`boolean` := v2 @kind boolean;
  #L4f8126.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.CacheControl` v0 @kind this, `boolean` v1 , `boolean` v2 , `int` v3 , `int` v4 , `boolean` v5 , `boolean` v6 , `boolean` v7 , `int` v8 , `int` v9 , `boolean` v10 , `boolean` v11 , `boolean` v12 , `java.lang.String` v13 @kind object) @signature `Lokhttp3/CacheControl;.<init>:(ZZIIZZZIIZZZLjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4f8080.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f8086.  v0.`okhttp3.CacheControl.noCache` @type ^`boolean` := v1 @kind boolean;
  #L4f808a.  v0.`okhttp3.CacheControl.noStore` @type ^`boolean` := v2 @kind boolean;
  #L4f808e.  v0.`okhttp3.CacheControl.maxAgeSeconds` @type ^`int` := v3;
  #L4f8092.  v0.`okhttp3.CacheControl.sMaxAgeSeconds` @type ^`int` := v4;
  #L4f8096.  v0.`okhttp3.CacheControl.isPrivate` @type ^`boolean` := v5 @kind boolean;
  #L4f809a.  v0.`okhttp3.CacheControl.isPublic` @type ^`boolean` := v6 @kind boolean;
  #L4f809e.  v0.`okhttp3.CacheControl.mustRevalidate` @type ^`boolean` := v7 @kind boolean;
  #L4f80a2.  v0.`okhttp3.CacheControl.maxStaleSeconds` @type ^`int` := v8;
  #L4f80a6.  v0.`okhttp3.CacheControl.minFreshSeconds` @type ^`int` := v9;
  #L4f80aa.  v0.`okhttp3.CacheControl.onlyIfCached` @type ^`boolean` := v10 @kind boolean;
  #L4f80ae.  v0.`okhttp3.CacheControl.noTransform` @type ^`boolean` := v11 @kind boolean;
  #L4f80b2.  v0.`okhttp3.CacheControl.immutable` @type ^`boolean` := v12 @kind boolean;
  #L4f80b6.  v0.`okhttp3.CacheControl.a` @type ^`java.lang.String` := v13 @kind object;
  #L4f80ba.  return @kind void;
}
procedure `java.lang.String` `headerValue`(`okhttp3.CacheControl` v4 @kind this) @signature `Lokhttp3/CacheControl;.headerValue:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4f7bdc.  v0:= new `java.lang.StringBuilder`;
  #L4f7be0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4f7be6.  v1:= v4.`okhttp3.CacheControl.noCache` @type ^`boolean` @kind boolean;
  #L4f7bea.  if v1 == 0 then goto L4f7bf8;
  #L4f7bee.  v1:= "no-cache, " @kind object;
  #L4f7bf2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7bf8.  v1:= v4.`okhttp3.CacheControl.noStore` @type ^`boolean` @kind boolean;
  #L4f7bfc.  if v1 == 0 then goto L4f7c0a;
  #L4f7c00.  v1:= "no-store, " @kind object;
  #L4f7c04.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7c0a.  v1:= v4.`okhttp3.CacheControl.maxAgeSeconds` @type ^`int`;
  #L4f7c0e.  v2:= ", " @kind object;
  #L4f7c12.  v3:= -1I;
  #L4f7c14.  if v1 == v3 then goto L4f7c32;
  #L4f7c18.  v1:= "max-age=" @kind object;
  #L4f7c1c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7c22.  v1:= v4.`okhttp3.CacheControl.maxAgeSeconds` @type ^`int`;
  #L4f7c26.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7c2c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7c32.  v1:= v4.`okhttp3.CacheControl.sMaxAgeSeconds` @type ^`int`;
  #L4f7c36.  if v1 == v3 then goto L4f7c54;
  #L4f7c3a.  v1:= "s-maxage=" @kind object;
  #L4f7c3e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7c44.  v1:= v4.`okhttp3.CacheControl.sMaxAgeSeconds` @type ^`int`;
  #L4f7c48.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7c4e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7c54.  v1:= v4.`okhttp3.CacheControl.isPrivate` @type ^`boolean` @kind boolean;
  #L4f7c58.  if v1 == 0 then goto L4f7c66;
  #L4f7c5c.  v1:= "private, " @kind object;
  #L4f7c60.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7c66.  v1:= v4.`okhttp3.CacheControl.isPublic` @type ^`boolean` @kind boolean;
  #L4f7c6a.  if v1 == 0 then goto L4f7c78;
  #L4f7c6e.  v1:= "public, " @kind object;
  #L4f7c72.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7c78.  v1:= v4.`okhttp3.CacheControl.mustRevalidate` @type ^`boolean` @kind boolean;
  #L4f7c7c.  if v1 == 0 then goto L4f7c8a;
  #L4f7c80.  v1:= "must-revalidate, " @kind object;
  #L4f7c84.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7c8a.  v1:= v4.`okhttp3.CacheControl.maxStaleSeconds` @type ^`int`;
  #L4f7c8e.  if v1 == v3 then goto L4f7cac;
  #L4f7c92.  v1:= "max-stale=" @kind object;
  #L4f7c96.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7c9c.  v1:= v4.`okhttp3.CacheControl.maxStaleSeconds` @type ^`int`;
  #L4f7ca0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7ca6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7cac.  v1:= v4.`okhttp3.CacheControl.minFreshSeconds` @type ^`int`;
  #L4f7cb0.  if v1 == v3 then goto L4f7cce;
  #L4f7cb4.  v1:= "min-fresh=" @kind object;
  #L4f7cb8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7cbe.  v1:= v4.`okhttp3.CacheControl.minFreshSeconds` @type ^`int`;
  #L4f7cc2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7cc8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7cce.  v1:= v4.`okhttp3.CacheControl.onlyIfCached` @type ^`boolean` @kind boolean;
  #L4f7cd2.  if v1 == 0 then goto L4f7ce0;
  #L4f7cd6.  v1:= "only-if-cached, " @kind object;
  #L4f7cda.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7ce0.  v1:= v4.`okhttp3.CacheControl.noTransform` @type ^`boolean` @kind boolean;
  #L4f7ce4.  if v1 == 0 then goto L4f7cf2;
  #L4f7ce8.  v1:= "no-transform, " @kind object;
  #L4f7cec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7cf2.  v1:= v4.`okhttp3.CacheControl.immutable` @type ^`boolean` @kind boolean;
  #L4f7cf6.  if v1 == 0 then goto L4f7d04;
  #L4f7cfa.  v1:= "immutable, " @kind object;
  #L4f7cfe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7d04.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L4f7d0a.  v1:= temp;
  #L4f7d0c.  if v1 != 0 then goto L4f7d16;
  #L4f7d10.  v0:= "" @kind object;
  #L4f7d14.  return v0 @kind object;
  #L4f7d16.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L4f7d1c.  v1:= temp;
  #L4f7d1e.  v1:= v1 + -2;
  #L4f7d22.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L4f7d28.  v2:= temp;
  #L4f7d2a.  call temp:= `delete`(v0, v1, v2) @signature `Ljava/lang/StringBuilder;.delete:(II)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f7d30.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4f7d36.  v0:= temp @kind object;
  #L4f7d38.  return v0 @kind object;
}
procedure `okhttp3.CacheControl` `parse`(`okhttp3.Headers` v22 @kind object) @signature `Lokhttp3/CacheControl;.parse:(Lokhttp3/Headers;)Lokhttp3/CacheControl;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L4f7d74.  v0:= v22 @kind object;
  #L4f7d78.  call temp:= `size`(v22) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L4f7d7e.  v1:= temp;
  #L4f7d80.  v6:= 0I;
  #L4f7d82.  v7:= 1I;
  #L4f7d84.  v8:= 0I;
  #L4f7d86.  v9:= 0I;
  #L4f7d88.  v10:= 0I;
  #L4f7d8a.  v11:= -1I;
  #L4f7d8c.  v12:= -1I;
  #L4f7d8e.  v13:= 0I;
  #L4f7d90.  v14:= 0I;
  #L4f7d92.  v15:= 0I;
  #L4f7d94.  v16:= -1I;
  #L4f7d98.  v17:= -1I;
  #L4f7d9c.  v18:= 0I;
  #L4f7da0.  v19:= 0I;
  #L4f7da4.  v20:= 0I;
  #L4f7da8.  if v6 >= v1 then goto L4f7ff2;
  #L4f7dac.  call temp:= `name`(v0, v6) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L4f7db2.  v2:= temp @kind object;
  #L4f7db4.  call temp:= `value`(v0, v6) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L4f7dba.  v4:= temp @kind object;
  #L4f7dbc.  v3:= "Cache-Control" @kind object;
  #L4f7dc0.  call temp:= `equalsIgnoreCase`(v2, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4f7dc6.  v3:= temp;
  #L4f7dc8.  if v3 == 0 then goto L4f7dd6;
  #L4f7dcc.  if v8 == 0 then goto L4f7dd2;
  #L4f7dd0.  goto L4f7de6;
  #L4f7dd2.  v8:= v4 @kind object;
  #L4f7dd4.  goto L4f7de8;
  #L4f7dd6.  v3:= "Pragma" @kind object;
  #L4f7dda.  call temp:= `equalsIgnoreCase`(v2, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4f7de0.  v2:= temp;
  #L4f7de2.  if v2 == 0 then goto L4f7fe4;
  #L4f7de6.  v7:= 0I;
  #L4f7de8.  v2:= 0I;
  #L4f7dea.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4f7df0.  v3:= temp;
  #L4f7df2.  if v2 >= v3 then goto L4f7fe4;
  #L4f7df6.  v3:= "=,;" @kind object;
  #L4f7dfa.  call temp:= `skipUntil`(v4, v2, v3) @signature `Lokhttp3/internal/http/HttpHeaders;.skipUntil:(Ljava/lang/String;ILjava/lang/String;)I` @kind static;
  #L4f7e00.  v3:= temp;
  #L4f7e02.  call temp:= `substring`(v4, v2, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L4f7e08.  v2:= temp @kind object;
  #L4f7e0a.  call temp:= `trim`(v2) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L4f7e10.  v2:= temp @kind object;
  #L4f7e12.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4f7e18.  v5:= temp;
  #L4f7e1a.  if v3 == v5 then goto L4f7ea6;
  #L4f7e1e.  call temp:= `charAt`(v4, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4f7e24.  v5:= temp;
  #L4f7e26.  v0:= 44I;
  #L4f7e2a.  if v5 == v0 then goto L4f7ea6;
  #L4f7e2e.  call temp:= `charAt`(v4, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4f7e34.  v0:= temp;
  #L4f7e36.  v5:= 59I;
  #L4f7e3a.  if v0 != v5 then goto L4f7e40;
  #L4f7e3e.  goto L4f7ea6;
  #L4f7e40.  v3:= v3 + 1;
  #L4f7e44.  call temp:= `skipWhitespace`(v4, v3) @signature `Lokhttp3/internal/http/HttpHeaders;.skipWhitespace:(Ljava/lang/String;I)I` @kind static;
  #L4f7e4a.  v0:= temp;
  #L4f7e4c.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4f7e52.  v3:= temp;
  #L4f7e54.  if v0 >= v3 then goto L4f7e86;
  #L4f7e58.  call temp:= `charAt`(v4, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4f7e5e.  v3:= temp;
  #L4f7e60.  v5:= 34I;
  #L4f7e64.  if v3 != v5 then goto L4f7e86;
  #L4f7e68.  v0:= v0 + 1;
  #L4f7e6c.  v3:= "\"" @kind object;
  #L4f7e70.  call temp:= `skipUntil`(v4, v0, v3) @signature `Lokhttp3/internal/http/HttpHeaders;.skipUntil:(Ljava/lang/String;ILjava/lang/String;)I` @kind static;
  #L4f7e76.  v3:= temp;
  #L4f7e78.  call temp:= `substring`(v4, v0, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L4f7e7e.  v0:= temp @kind object;
  #L4f7e80.  v5:= 1I;
  #L4f7e82.  v3:= v3 + v5 @kind int;
  #L4f7e84.  goto L4f7eae;
  #L4f7e86.  v5:= 1I;
  #L4f7e88.  v3:= ",;" @kind object;
  #L4f7e8c.  call temp:= `skipUntil`(v4, v0, v3) @signature `Lokhttp3/internal/http/HttpHeaders;.skipUntil:(Ljava/lang/String;ILjava/lang/String;)I` @kind static;
  #L4f7e92.  v3:= temp;
  #L4f7e94.  call temp:= `substring`(v4, v0, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L4f7e9a.  v0:= temp @kind object;
  #L4f7e9c.  call temp:= `trim`(v0) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L4f7ea2.  v0:= temp @kind object;
  #L4f7ea4.  goto L4f7eae;
  #L4f7ea6.  v5:= 1I;
  #L4f7ea8.  v3:= v3 + 1;
  #L4f7eac.  v0:= 0I;
  #L4f7eae.  v5:= "no-cache" @kind object;
  #L4f7eb2.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4f7eb8.  v5:= temp;
  #L4f7eba.  if v5 == 0 then goto L4f7ec6;
  #L4f7ebe.  v5:= -1I;
  #L4f7ec0.  v9:= 1I;
  #L4f7ec2.  goto L4f7fda;
  #L4f7ec6.  v5:= "no-store" @kind object;
  #L4f7eca.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4f7ed0.  v5:= temp;
  #L4f7ed2.  if v5 == 0 then goto L4f7ede;
  #L4f7ed6.  v5:= -1I;
  #L4f7ed8.  v10:= 1I;
  #L4f7eda.  goto L4f7fda;
  #L4f7ede.  v5:= "max-age" @kind object;
  #L4f7ee2.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4f7ee8.  v5:= temp;
  #L4f7eea.  if v5 == 0 then goto L4f7efc;
  #L4f7eee.  v5:= -1I;
  #L4f7ef0.  call temp:= `parseSeconds`(v0, v5) @signature `Lokhttp3/internal/http/HttpHeaders;.parseSeconds:(Ljava/lang/String;I)I` @kind static;
  #L4f7ef6.  v11:= temp;
  #L4f7ef8.  goto L4f7fda;
  #L4f7efc.  v5:= "s-maxage" @kind object;
  #L4f7f00.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4f7f06.  v5:= temp;
  #L4f7f08.  if v5 == 0 then goto L4f7f18;
  #L4f7f0c.  v5:= -1I;
  #L4f7f0e.  call temp:= `parseSeconds`(v0, v5) @signature `Lokhttp3/internal/http/HttpHeaders;.parseSeconds:(Ljava/lang/String;I)I` @kind static;
  #L4f7f14.  v12:= temp;
  #L4f7f16.  goto L4f7fda;
  #L4f7f18.  v5:= "private" @kind object;
  #L4f7f1c.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4f7f22.  v5:= temp;
  #L4f7f24.  if v5 == 0 then goto L4f7f2e;
  #L4f7f28.  v5:= -1I;
  #L4f7f2a.  v13:= 1I;
  #L4f7f2c.  goto L4f7fda;
  #L4f7f2e.  v5:= "public" @kind object;
  #L4f7f32.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4f7f38.  v5:= temp;
  #L4f7f3a.  if v5 == 0 then goto L4f7f44;
  #L4f7f3e.  v5:= -1I;
  #L4f7f40.  v14:= 1I;
  #L4f7f42.  goto L4f7fda;
  #L4f7f44.  v5:= "must-revalidate" @kind object;
  #L4f7f48.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4f7f4e.  v5:= temp;
  #L4f7f50.  if v5 == 0 then goto L4f7f5a;
  #L4f7f54.  v5:= -1I;
  #L4f7f56.  v15:= 1I;
  #L4f7f58.  goto L4f7fda;
  #L4f7f5a.  v5:= "max-stale" @kind object;
  #L4f7f5e.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4f7f64.  v5:= temp;
  #L4f7f66.  if v5 == 0 then goto L4f7f7c;
  #L4f7f6a.  v2:= 2147483647I;
  #L4f7f70.  call temp:= `parseSeconds`(v0, v2) @signature `Lokhttp3/internal/http/HttpHeaders;.parseSeconds:(Ljava/lang/String;I)I` @kind static;
  #L4f7f76.  v16:= temp;
  #L4f7f78.  v5:= -1I;
  #L4f7f7a.  goto L4f7fda;
  #L4f7f7c.  v5:= "min-fresh" @kind object;
  #L4f7f80.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4f7f86.  v5:= temp;
  #L4f7f88.  if v5 == 0 then goto L4f7f98;
  #L4f7f8c.  v5:= -1I;
  #L4f7f8e.  call temp:= `parseSeconds`(v0, v5) @signature `Lokhttp3/internal/http/HttpHeaders;.parseSeconds:(Ljava/lang/String;I)I` @kind static;
  #L4f7f94.  v17:= temp;
  #L4f7f96.  goto L4f7fda;
  #L4f7f98.  v5:= -1I;
  #L4f7f9a.  v0:= "only-if-cached" @kind object;
  #L4f7f9e.  call temp:= `equalsIgnoreCase`(v0, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4f7fa4.  v0:= temp;
  #L4f7fa6.  if v0 == 0 then goto L4f7fb0;
  #L4f7faa.  v18:= 1I;
  #L4f7fae.  goto L4f7fda;
  #L4f7fb0.  v0:= "no-transform" @kind object;
  #L4f7fb4.  call temp:= `equalsIgnoreCase`(v0, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4f7fba.  v0:= temp;
  #L4f7fbc.  if v0 == 0 then goto L4f7fc6;
  #L4f7fc0.  v19:= 1I;
  #L4f7fc4.  goto L4f7fda;
  #L4f7fc6.  v0:= "immutable" @kind object;
  #L4f7fca.  call temp:= `equalsIgnoreCase`(v0, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4f7fd0.  v0:= temp;
  #L4f7fd2.  if v0 == 0 then goto L4f7fda;
  #L4f7fd6.  v20:= 1I;
  #L4f7fda.  v0:= v22 @kind object;
  #L4f7fde.  v2:= v3;
  #L4f7fe0.  goto L4f7dea;
  #L4f7fe4.  v5:= -1I;
  #L4f7fe6.  v6:= v6 + 1;
  #L4f7fea.  v0:= v22 @kind object;
  #L4f7fee.  goto L4f7da8;
  #L4f7ff2.  if v7 != 0 then goto L4f7ffc;
  #L4f7ff6.  v21:= 0I;
  #L4f7ffa.  goto L4f8000;
  #L4f7ffc.  v21:= v8 @kind object;
  #L4f8000.  v0:= new `okhttp3.CacheControl`;
  #L4f8004.  v8:= v0 @kind object;
  #L4f8006.  call `<init>`(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21) @signature `Lokhttp3/CacheControl;.<init>:(ZZIIZZZIIZZZLjava/lang/String;)V` @kind direct;
  #L4f800c.  return v0 @kind object;
}
procedure `boolean` `immutable`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.immutable:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f7abc.  v0:= v1.`okhttp3.CacheControl.immutable` @type ^`boolean` @kind boolean;
  #L4f7ac0.  return v0;
}
procedure `boolean` `isPrivate`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.isPrivate:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f7ad4.  v0:= v1.`okhttp3.CacheControl.isPrivate` @type ^`boolean` @kind boolean;
  #L4f7ad8.  return v0;
}
procedure `boolean` `isPublic`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.isPublic:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f7aec.  v0:= v1.`okhttp3.CacheControl.isPublic` @type ^`boolean` @kind boolean;
  #L4f7af0.  return v0;
}
procedure `int` `maxAgeSeconds`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f7b7c.  v0:= v1.`okhttp3.CacheControl.maxAgeSeconds` @type ^`int`;
  #L4f7b80.  return v0;
}
procedure `int` `maxStaleSeconds`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.maxStaleSeconds:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f7b94.  v0:= v1.`okhttp3.CacheControl.maxStaleSeconds` @type ^`int`;
  #L4f7b98.  return v0;
}
procedure `int` `minFreshSeconds`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.minFreshSeconds:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f7bac.  v0:= v1.`okhttp3.CacheControl.minFreshSeconds` @type ^`int`;
  #L4f7bb0.  return v0;
}
procedure `boolean` `mustRevalidate`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.mustRevalidate:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f7b04.  v0:= v1.`okhttp3.CacheControl.mustRevalidate` @type ^`boolean` @kind boolean;
  #L4f7b08.  return v0;
}
procedure `boolean` `noCache`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.noCache:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f7b1c.  v0:= v1.`okhttp3.CacheControl.noCache` @type ^`boolean` @kind boolean;
  #L4f7b20.  return v0;
}
procedure `boolean` `noStore`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.noStore:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f7b34.  v0:= v1.`okhttp3.CacheControl.noStore` @type ^`boolean` @kind boolean;
  #L4f7b38.  return v0;
}
procedure `boolean` `noTransform`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.noTransform:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f7b4c.  v0:= v1.`okhttp3.CacheControl.noTransform` @type ^`boolean` @kind boolean;
  #L4f7b50.  return v0;
}
procedure `boolean` `onlyIfCached`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.onlyIfCached:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f7b64.  v0:= v1.`okhttp3.CacheControl.onlyIfCached` @type ^`boolean` @kind boolean;
  #L4f7b68.  return v0;
}
procedure `int` `sMaxAgeSeconds`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.sMaxAgeSeconds:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f7bc4.  v0:= v1.`okhttp3.CacheControl.sMaxAgeSeconds` @type ^`int`;
  #L4f7bc8.  return v0;
}
procedure `java.lang.String` `toString`(`okhttp3.CacheControl` v1 @kind this) @signature `Lokhttp3/CacheControl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f7d4c.  v0:= v1.`okhttp3.CacheControl.a` @type ^`java.lang.String` @kind object;
  #L4f7d50.  if v0 == 0 then goto L4f7d56;
  #L4f7d54.  goto L4f7d62;
  #L4f7d56.  call temp:= `headerValue`(v1) @signature `Lokhttp3/CacheControl;.headerValue:()Ljava/lang/String;` @kind direct;
  #L4f7d5c.  v0:= temp @kind object;
  #L4f7d5e.  v1.`okhttp3.CacheControl.a` @type ^`java.lang.String` := v0 @kind object;
  #L4f7d62.  return v0 @kind object;
}
