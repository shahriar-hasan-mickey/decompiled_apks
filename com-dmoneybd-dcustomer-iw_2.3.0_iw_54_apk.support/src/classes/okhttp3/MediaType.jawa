record `okhttp3.MediaType` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.MediaType.charset` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.mediaType` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.subtype` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.type` @AccessFlag PRIVATE_FINAL;
}
global `java.util.regex.Pattern` `@@okhttp3.MediaType.PARAMETER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.MediaType.QUOTED` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.MediaType.TOKEN` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.MediaType.TYPE_SUBTYPE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/MediaType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4fe504.  v0:= "([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)/([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)" @kind object;
  #L4fe508.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L4fe50e.  v0:= temp @kind object;
  #L4fe510.  `@@okhttp3.MediaType.TYPE_SUBTYPE` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L4fe514.  v0:= ";\\s*(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)=(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)|\"([^\"]*)\"))?" @kind object;
  #L4fe518.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L4fe51e.  v0:= temp @kind object;
  #L4fe520.  `@@okhttp3.MediaType.PARAMETER` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L4fe524.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.MediaType` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lokhttp3/MediaType;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4fe538.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fe53e.  v0.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` := v1 @kind object;
  #L4fe542.  v0.`okhttp3.MediaType.type` @type ^`java.lang.String` := v2 @kind object;
  #L4fe546.  v0.`okhttp3.MediaType.subtype` @type ^`java.lang.String` := v3 @kind object;
  #L4fe54a.  v0.`okhttp3.MediaType.charset` @type ^`java.lang.String` := v4 @kind object;
  #L4fe54e.  return @kind void;
}
procedure `okhttp3.MediaType` `get`(`java.lang.String` v11 @kind object) @signature `Lokhttp3/MediaType;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4fe2d4.  v0:= `@@okhttp3.MediaType.TYPE_SUBTYPE` @type ^`java.util.regex.Pattern` @kind object;
  #L4fe2d8.  call temp:= `matcher`(v0, v11) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L4fe2de.  v0:= temp @kind object;
  #L4fe2e0.  call temp:= `lookingAt`(v0) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L4fe2e6.  v1:= temp;
  #L4fe2e8.  v2:= 34I;
  #L4fe2ec.  if v1 == 0 then goto L4fe48c;
  #L4fe2f0.  v1:= 1I;
  #L4fe2f2.  call temp:= `group`(v0, v1) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L4fe2f8.  v3:= temp @kind object;
  #L4fe2fa.  v4:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L4fe2fe.  call temp:= `toLowerCase`(v3, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L4fe304.  v3:= temp @kind object;
  #L4fe306.  v5:= 2I;
  #L4fe308.  call temp:= `group`(v0, v5) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L4fe30e.  v6:= temp @kind object;
  #L4fe310.  call temp:= `toLowerCase`(v6, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L4fe316.  v4:= temp @kind object;
  #L4fe318.  v6:= 0I;
  #L4fe31a.  v7:= `@@okhttp3.MediaType.PARAMETER` @type ^`java.util.regex.Pattern` @kind object;
  #L4fe31e.  call temp:= `matcher`(v7, v11) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L4fe324.  v7:= temp @kind object;
  #L4fe326.  call temp:= `end`(v0) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L4fe32c.  v0:= temp;
  #L4fe32e.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fe334.  v8:= temp;
  #L4fe336.  if v0 >= v8 then goto L4fe480;
  #L4fe33a.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fe340.  v8:= temp;
  #L4fe342.  call temp:= `region`(v7, v0, v8) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L4fe348.  call temp:= `lookingAt`(v7) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L4fe34e.  v8:= temp;
  #L4fe350.  v9:= "\" for: \"" @kind object;
  #L4fe354.  if v8 == 0 then goto L4fe438;
  #L4fe358.  call temp:= `group`(v7, v1) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L4fe35e.  v0:= temp @kind object;
  #L4fe360.  if v0 == 0 then goto L4fe42c;
  #L4fe364.  v8:= "charset" @kind object;
  #L4fe368.  call temp:= `equalsIgnoreCase`(v0, v8) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4fe36e.  v0:= temp;
  #L4fe370.  if v0 != 0 then goto L4fe376;
  #L4fe374.  goto L4fe42c;
  #L4fe376.  call temp:= `group`(v7, v5) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L4fe37c.  v0:= temp @kind object;
  #L4fe37e.  if v0 == 0 then goto L4fe3be;
  #L4fe382.  v8:= "'" @kind object;
  #L4fe386.  call temp:= `startsWith`(v0, v8) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L4fe38c.  v10:= temp;
  #L4fe38e.  if v10 == 0 then goto L4fe3c8;
  #L4fe392.  call temp:= `endsWith`(v0, v8) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L4fe398.  v8:= temp;
  #L4fe39a.  if v8 == 0 then goto L4fe3c8;
  #L4fe39e.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fe3a4.  v8:= temp;
  #L4fe3a6.  if v8 <= v5 then goto L4fe3c8;
  #L4fe3aa.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fe3b0.  v8:= temp;
  #L4fe3b2.  v8:= v8 - v1 @kind int;
  #L4fe3b4.  call temp:= `substring`(v0, v1, v8) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L4fe3ba.  v0:= temp @kind object;
  #L4fe3bc.  goto L4fe3c8;
  #L4fe3be.  v0:= 3I;
  #L4fe3c0.  call temp:= `group`(v7, v0) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L4fe3c6.  v0:= temp @kind object;
  #L4fe3c8.  if v6 == 0 then goto L4fe42a;
  #L4fe3cc.  call temp:= `equalsIgnoreCase`(v0, v6) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4fe3d2.  v8:= temp;
  #L4fe3d4.  if v8 == 0 then goto L4fe3da;
  #L4fe3d8.  goto L4fe42a;
  #L4fe3da.  v1:= new `java.lang.IllegalArgumentException`;
  #L4fe3de.  v3:= new `java.lang.StringBuilder`;
  #L4fe3e2.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fe3e8.  v4:= "Multiple charsets defined: \"" @kind object;
  #L4fe3ec.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe3f2.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe3f8.  v4:= "\" and: \"" @kind object;
  #L4fe3fc.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe402.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe408.  call temp:= `append`(v3, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe40e.  call temp:= `append`(v3, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe414.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe41a.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fe420.  v11:= temp @kind object;
  #L4fe422.  call `<init>`(v1, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fe428.  throw v1;
  #L4fe42a.  v6:= v0 @kind object;
  #L4fe42c.  call temp:= `end`(v7) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L4fe432.  v0:= temp;
  #L4fe434.  goto L4fe32e;
  #L4fe438.  v1:= new `java.lang.IllegalArgumentException`;
  #L4fe43c.  v3:= new `java.lang.StringBuilder`;
  #L4fe440.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fe446.  v4:= "Parameter is not formatted correctly: \"" @kind object;
  #L4fe44a.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe450.  call temp:= `substring`(v11, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L4fe456.  v0:= temp @kind object;
  #L4fe458.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe45e.  call temp:= `append`(v3, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe464.  call temp:= `append`(v3, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe46a.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe470.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fe476.  v11:= temp @kind object;
  #L4fe478.  call `<init>`(v1, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fe47e.  throw v1;
  #L4fe480.  v0:= new `okhttp3.MediaType`;
  #L4fe484.  call `<init>`(v0, v11, v3, v4, v6) @signature `Lokhttp3/MediaType;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L4fe48a.  return v0 @kind object;
  #L4fe48c.  v0:= new `java.lang.IllegalArgumentException`;
  #L4fe490.  v1:= new `java.lang.StringBuilder`;
  #L4fe494.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fe49a.  v3:= "No subtype found for: \"" @kind object;
  #L4fe49e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe4a4.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe4aa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe4b0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fe4b6.  v11:= temp @kind object;
  #L4fe4b8.  call `<init>`(v0, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fe4be.  goto L4fe4c2;
  #L4fe4c0.  throw v0;
  #L4fe4c2.  goto L4fe4c0;
}
procedure `okhttp3.MediaType` `parse`(`java.lang.String` v0 @kind object) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4fe4d4.  call temp:= `get`(v0) @signature `Lokhttp3/MediaType;.get:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L4fe4da.  v0:= temp @kind object;
  #L4fe4dc.  return v0 @kind object;
  #L4fe4de.  v0:= 0I;
  #L4fe4e0.  return v0 @kind object;
  catch `java.lang.IllegalArgumentException` @[L4fe4d4..L4fe4dc] goto L4fe4de;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.charset:()Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fe284.  v0:= 0I;
  #L4fe286.  call temp:= `charset`(v1, v0) @signature `Lokhttp3/MediaType;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind virtual;
  #L4fe28c.  v0:= temp @kind object;
  #L4fe28e.  return v0 @kind object;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.MediaType` v1 @kind this, `java.nio.charset.Charset` v2 @kind object) @signature `Lokhttp3/MediaType;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fe2a0.  v0:= v1.`okhttp3.MediaType.charset` @type ^`java.lang.String` @kind object;
  #L4fe2a4.  if v0 == 0 then goto L4fe2b0;
  #L4fe2a8.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L4fe2ae.  v2:= temp @kind object;
  #L4fe2b0.  return v2 @kind object;
  catch `java.lang.IllegalArgumentException` @[L4fe2a0..L4fe2b0] goto L4fe2b0;
}
procedure `boolean` `equals`(`okhttp3.MediaType` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/MediaType;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fe1e4.  v0:= instanceof @variable v2 @type ^`okhttp3.MediaType` @kind boolean;
  #L4fe1e8.  if v0 == 0 then goto L4fe208;
  #L4fe1ec.  v2:= (`okhttp3.MediaType`) v2 @kind object;
  #L4fe1f0.  v2:= v2.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L4fe1f4.  v0:= v1.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L4fe1f8.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fe1fe.  v2:= temp;
  #L4fe200.  if v2 == 0 then goto L4fe208;
  #L4fe204.  v2:= 1I;
  #L4fe206.  goto L4fe20a;
  #L4fe208.  v2:= 0I;
  #L4fe20a.  return v2;
}
procedure `int` `hashCode`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fe21c.  v0:= v1.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L4fe220.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L4fe226.  v0:= temp;
  #L4fe228.  return v0;
}
procedure `java.lang.String` `subtype`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.subtype:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fe23c.  v0:= v1.`okhttp3.MediaType.subtype` @type ^`java.lang.String` @kind object;
  #L4fe240.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fe254.  v0:= v1.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L4fe258.  return v0 @kind object;
}
procedure `java.lang.String` `type`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.type:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fe26c.  v0:= v1.`okhttp3.MediaType.type` @type ^`java.lang.String` @kind object;
  #L4fe270.  return v0 @kind object;
}
