record `okhttp3.HttpUrl` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.HttpUrl.a` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.HttpUrl.b` @AccessFlag FINAL;
  `int` `okhttp3.HttpUrl.c` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.HttpUrl.fragment` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.password` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.HttpUrl.pathSegments` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.HttpUrl.queryNamesAndValues` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.url` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.HttpUrl.username` @AccessFlag PRIVATE_FINAL;
}
global `char`[] `@@okhttp3.HttpUrl.HEX_DIGITS` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/HttpUrl;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4fde60.  v0:= 16I;
  #L4fde64.  v0:= new `char`[v0];
  #L4fde68.  goto L4fde74;
  #L4fde6e.  `@@okhttp3.HttpUrl.HEX_DIGITS` @type ^`char`[] := v0 @kind object;
  #L4fde72.  return @kind void;
  #L4fde74.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 65I, 66I, 67I, 68I, 69I, 70I) @kind object;
  #L4fde9b.  goto L4fde6e;
}
procedure `void` `<init>`(`okhttp3.HttpUrl` v4 @kind this, `okhttp3.HttpUrl$Builder` v5 @kind object) @signature `Lokhttp3/HttpUrl;.<init>:(Lokhttp3/HttpUrl$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fdeac.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fdeb2.  v0:= v5.`okhttp3.HttpUrl$Builder.a` @type ^`java.lang.String` @kind object;
  #L4fdeb6.  v4.`okhttp3.HttpUrl.a` @type ^`java.lang.String` := v0 @kind object;
  #L4fdeba.  v0:= v5.`okhttp3.HttpUrl$Builder.b` @type ^`java.lang.String` @kind object;
  #L4fdebe.  v1:= 0I;
  #L4fdec0.  call temp:= `h`(v0, v1) @signature `Lokhttp3/HttpUrl;.h:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L4fdec6.  v0:= temp @kind object;
  #L4fdec8.  v4.`okhttp3.HttpUrl.username` @type ^`java.lang.String` := v0 @kind object;
  #L4fdecc.  v0:= v5.`okhttp3.HttpUrl$Builder.c` @type ^`java.lang.String` @kind object;
  #L4fded0.  call temp:= `h`(v0, v1) @signature `Lokhttp3/HttpUrl;.h:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L4fded6.  v0:= temp @kind object;
  #L4fded8.  v4.`okhttp3.HttpUrl.password` @type ^`java.lang.String` := v0 @kind object;
  #L4fdedc.  v0:= v5.`okhttp3.HttpUrl$Builder.d` @type ^`java.lang.String` @kind object;
  #L4fdee0.  v4.`okhttp3.HttpUrl.b` @type ^`java.lang.String` := v0 @kind object;
  #L4fdee4.  call temp:= `a`(v5) @signature `Lokhttp3/HttpUrl$Builder;.a:()I` @kind virtual;
  #L4fdeea.  v0:= temp;
  #L4fdeec.  v4.`okhttp3.HttpUrl.c` @type ^`int` := v0;
  #L4fdef0.  v0:= v5.`okhttp3.HttpUrl$Builder.f` @type ^`java.util.List` @kind object;
  #L4fdef4.  call temp:= `percentDecode`(v4, v0, v1) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L4fdefa.  v0:= temp @kind object;
  #L4fdefc.  v4.`okhttp3.HttpUrl.pathSegments` @type ^`java.util.List` := v0 @kind object;
  #L4fdf00.  v0:= v5.`okhttp3.HttpUrl$Builder.g` @type ^`java.util.List` @kind object;
  #L4fdf04.  v2:= 0I;
  #L4fdf06.  if v0 == 0 then goto L4fdf16;
  #L4fdf0a.  v3:= 1I;
  #L4fdf0c.  call temp:= `percentDecode`(v4, v0, v3) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L4fdf12.  v0:= temp @kind object;
  #L4fdf14.  goto L4fdf18;
  #L4fdf16.  v0:= v2 @kind object;
  #L4fdf18.  v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` := v0 @kind object;
  #L4fdf1c.  v0:= v5.`okhttp3.HttpUrl$Builder.h` @type ^`java.lang.String` @kind object;
  #L4fdf20.  if v0 == 0 then goto L4fdf2c;
  #L4fdf24.  call temp:= `h`(v0, v1) @signature `Lokhttp3/HttpUrl;.h:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L4fdf2a.  v2:= temp @kind object;
  #L4fdf2c.  v4.`okhttp3.HttpUrl.fragment` @type ^`java.lang.String` := v2 @kind object;
  #L4fdf30.  call temp:= `toString`(v5) @signature `Lokhttp3/HttpUrl$Builder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fdf36.  v5:= temp @kind object;
  #L4fdf38.  v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` := v5 @kind object;
  #L4fdf3c.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.String` v11 @kind object, `int` v12 , `int` v13 , `java.lang.String` v14 @kind object, `boolean` v15 , `boolean` v16 , `boolean` v17 , `boolean` v18 , `java.nio.charset.Charset` v19 @kind object) @signature `Lokhttp3/HttpUrl;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4fd408.  v1:= v11 @kind object;
  #L4fd40a.  v3:= v13;
  #L4fd40c.  v2:= v12;
  #L4fd40e.  if v2 >= v3 then goto L4fd4ba;
  #L4fd412.  call temp:= `codePointAt`(v11, v2) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L4fd418.  v0:= temp;
  #L4fd41a.  v4:= 32I;
  #L4fd41e.  if v0 < v4 then goto L4fd47c;
  #L4fd422.  v4:= 127I;
  #L4fd426.  if v0 == v4 then goto L4fd47c;
  #L4fd42a.  v4:= 128I;
  #L4fd42e.  if v0 < v4 then goto L4fd436;
  #L4fd432.  if v18 != 0 then goto L4fd47c;
  #L4fd436.  v4:= v14 @kind object;
  #L4fd438.  call temp:= `indexOf`(v14, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L4fd43e.  v5:= temp;
  #L4fd440.  v6:= -1I;
  #L4fd442.  if v5 != v6 then goto L4fd47e;
  #L4fd446.  v5:= 37I;
  #L4fd44a.  if v0 != v5 then goto L4fd462;
  #L4fd44e.  if v15 == 0 then goto L4fd47e;
  #L4fd452.  if v16 == 0 then goto L4fd462;
  #L4fd456.  call temp:= `j`(v11, v2, v13) @signature `Lokhttp3/HttpUrl;.j:(Ljava/lang/String;II)Z` @kind static;
  #L4fd45c.  v5:= temp;
  #L4fd45e.  if v5 == 0 then goto L4fd47e;
  #L4fd462.  v5:= 43I;
  #L4fd466.  if v0 != v5 then goto L4fd470;
  #L4fd46a.  if v17 == 0 then goto L4fd470;
  #L4fd46e.  goto L4fd47e;
  #L4fd470.  call temp:= `charCount`(v0) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L4fd476.  v0:= temp;
  #L4fd478.  v2:= v2 + v0 @kind int;
  #L4fd47a.  goto L4fd40e;
  #L4fd47c.  v4:= v14 @kind object;
  #L4fd47e.  v10:= new `okio.Buffer`;
  #L4fd482.  call `<init>`(v10) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L4fd488.  v0:= v12;
  #L4fd48a.  call temp:= `writeUtf8`(v10, v11, v12, v2) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;II)Lokio/Buffer;` @kind virtual;
  #L4fd490.  v0:= v10 @kind object;
  #L4fd492.  v1:= v11 @kind object;
  #L4fd494.  v3:= v13;
  #L4fd496.  v4:= v14 @kind object;
  #L4fd498.  v5:= v15;
  #L4fd49a.  v6:= v16;
  #L4fd49e.  v7:= v17;
  #L4fd4a2.  v8:= v18;
  #L4fd4a6.  v9:= v19 @kind object;
  #L4fd4aa.  call `d`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/HttpUrl;.d:(Lokio/Buffer;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)V` @kind static;
  #L4fd4b0.  call temp:= `readUtf8`(v10) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L4fd4b6.  v0:= temp @kind object;
  #L4fd4b8.  return v0 @kind object;
  #L4fd4ba.  v0:= v12;
  #L4fd4bc.  call temp:= `substring`(v11, v12, v13) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L4fd4c2.  v0:= temp @kind object;
  #L4fd4c4.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`java.lang.String` v9 @kind object, `java.lang.String` v10 @kind object, `boolean` v11 , `boolean` v12 , `boolean` v13 , `boolean` v14 ) @signature `Lokhttp3/HttpUrl;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4fd4d8.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fd4de.  v2:= temp;
  #L4fd4e0.  v1:= 0I;
  #L4fd4e2.  v8:= 0I;
  #L4fd4e4.  v0:= v9 @kind object;
  #L4fd4e6.  v3:= v10 @kind object;
  #L4fd4e8.  v4:= v11;
  #L4fd4ea.  v5:= v12;
  #L4fd4ec.  v6:= v13;
  #L4fd4ee.  v7:= v14;
  #L4fd4f0.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L4fd4f6.  v9:= temp @kind object;
  #L4fd4f8.  return v9 @kind object;
}
procedure `java.lang.String` `c`(`java.lang.String` v9 @kind object, `java.lang.String` v10 @kind object, `boolean` v11 , `boolean` v12 , `boolean` v13 , `boolean` v14 , `java.nio.charset.Charset` v15 @kind object) @signature `Lokhttp3/HttpUrl;.c:(Ljava/lang/String;Ljava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4fd50c.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fd512.  v2:= temp;
  #L4fd514.  v1:= 0I;
  #L4fd516.  v0:= v9 @kind object;
  #L4fd518.  v3:= v10 @kind object;
  #L4fd51a.  v4:= v11;
  #L4fd51c.  v5:= v12;
  #L4fd51e.  v6:= v13;
  #L4fd520.  v7:= v14;
  #L4fd522.  v8:= v15 @kind object;
  #L4fd524.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/HttpUrl;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L4fd52a.  v9:= temp @kind object;
  #L4fd52c.  return v9 @kind object;
}
procedure `void` `d`(`okio.Buffer` v6 @kind object, `java.lang.String` v7 @kind object, `int` v8 , `int` v9 , `java.lang.String` v10 @kind object, `boolean` v11 , `boolean` v12 , `boolean` v13 , `boolean` v14 , `java.nio.charset.Charset` v15 @kind object) @signature `Lokhttp3/HttpUrl;.d:(Lokio/Buffer;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4fdf50.  v0:= 0I;
  #L4fdf52.  if v8 >= v9 then goto L4fe088;
  #L4fdf56.  call temp:= `codePointAt`(v7, v8) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L4fdf5c.  v1:= temp;
  #L4fdf5e.  if v11 == 0 then goto L4fdf86;
  #L4fdf62.  v2:= 9I;
  #L4fdf66.  if v1 == v2 then goto L4fe07a;
  #L4fdf6a.  v2:= 10I;
  #L4fdf6e.  if v1 == v2 then goto L4fe07a;
  #L4fdf72.  v2:= 12I;
  #L4fdf76.  if v1 == v2 then goto L4fe07a;
  #L4fdf7a.  v2:= 13I;
  #L4fdf7e.  if v1 != v2 then goto L4fdf86;
  #L4fdf82.  goto L4fe07a;
  #L4fdf86.  v2:= 43I;
  #L4fdf8a.  if v1 != v2 then goto L4fdfaa;
  #L4fdf8e.  if v13 == 0 then goto L4fdfaa;
  #L4fdf92.  if v11 == 0 then goto L4fdf9c;
  #L4fdf96.  v2:= "+" @kind object;
  #L4fdf9a.  goto L4fdfa0;
  #L4fdf9c.  v2:= "%2B" @kind object;
  #L4fdfa0.  call temp:= `writeUtf8`(v6, v2) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;)Lokio/Buffer;` @kind virtual;
  #L4fdfa6.  goto L4fe07a;
  #L4fdfaa.  v2:= 32I;
  #L4fdfae.  v3:= 37I;
  #L4fdfb2.  if v1 < v2 then goto L4fdffa;
  #L4fdfb6.  v2:= 127I;
  #L4fdfba.  if v1 == v2 then goto L4fdffa;
  #L4fdfbe.  v2:= 128I;
  #L4fdfc2.  if v1 < v2 then goto L4fdfca;
  #L4fdfc6.  if v14 != 0 then goto L4fdffa;
  #L4fdfca.  call temp:= `indexOf`(v10, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L4fdfd0.  v2:= temp;
  #L4fdfd2.  v4:= -1I;
  #L4fdfd4.  if v2 != v4 then goto L4fdffa;
  #L4fdfd8.  if v1 != v3 then goto L4fdff2;
  #L4fdfdc.  if v11 == 0 then goto L4fdffa;
  #L4fdfe0.  if v12 == 0 then goto L4fdff2;
  #L4fdfe4.  call temp:= `j`(v7, v8, v9) @signature `Lokhttp3/HttpUrl;.j:(Ljava/lang/String;II)Z` @kind static;
  #L4fdfea.  v2:= temp;
  #L4fdfec.  if v2 != 0 then goto L4fdff2;
  #L4fdff0.  goto L4fdffa;
  #L4fdff2.  call temp:= `writeUtf8CodePoint`(v6, v1) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L4fdff8.  goto L4fe07a;
  #L4fdffa.  if v0 != 0 then goto L4fe008;
  #L4fdffe.  v0:= new `okio.Buffer`;
  #L4fe002.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L4fe008.  if v15 == 0 then goto L4fe030;
  #L4fe00c.  v2:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L4fe010.  call temp:= `equals`(v15, v2) @signature `Ljava/nio/charset/Charset;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fe016.  v2:= temp;
  #L4fe018.  if v2 == 0 then goto L4fe01e;
  #L4fe01c.  goto L4fe030;
  #L4fe01e.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L4fe024.  v2:= temp;
  #L4fe026.  v2:= v2 + v8 @kind int;
  #L4fe028.  call temp:= `writeString`(v0, v7, v8, v2, v15) @signature `Lokio/Buffer;.writeString:(Ljava/lang/String;IILjava/nio/charset/Charset;)Lokio/Buffer;` @kind virtual;
  #L4fe02e.  goto L4fe036;
  #L4fe030.  call temp:= `writeUtf8CodePoint`(v0, v1) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L4fe036.  call temp:= `exhausted`(v0) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L4fe03c.  v2:= temp;
  #L4fe03e.  if v2 != 0 then goto L4fe07a;
  #L4fe042.  call temp:= `readByte`(v0) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L4fe048.  v2:= temp;
  #L4fe04a.  v2:= v2 ^& 255;
  #L4fe04e.  call temp:= `writeByte`(v6, v3) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L4fe054.  v4:= `@@okhttp3.HttpUrl.HEX_DIGITS` @type ^`char`[] @kind object;
  #L4fe058.  v5:= v2 ^> 4;
  #L4fe05c.  v5:= v5 ^& 15;
  #L4fe060.  v5:= v4[v5] @kind char;
  #L4fe064.  call temp:= `writeByte`(v6, v5) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L4fe06a.  v2:= v2 ^& 15;
  #L4fe06e.  v2:= v4[v2] @kind char;
  #L4fe072.  call temp:= `writeByte`(v6, v2) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L4fe078.  goto L4fe036;
  #L4fe07a.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L4fe080.  v1:= temp;
  #L4fe082.  v8:= v8 + v1 @kind int;
  #L4fe084.  goto L4fdf52;
  #L4fe088.  return @kind void;
}
procedure `int` `defaultPort`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4fd344.  v0:= "http" @kind object;
  #L4fd348.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fd34e.  v0:= temp;
  #L4fd350.  if v0 == 0 then goto L4fd35a;
  #L4fd354.  v1:= 80I;
  #L4fd358.  return v1;
  #L4fd35a.  v0:= "https" @kind object;
  #L4fd35e.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fd364.  v1:= temp;
  #L4fd366.  if v1 == 0 then goto L4fd370;
  #L4fd36a.  v1:= 443I;
  #L4fd36e.  return v1;
  #L4fd370.  v1:= -1I;
  #L4fd372.  return v1;
}
procedure `void` `e`(`java.lang.StringBuilder` v5 @kind object, `java.util.List` v6 @kind object) @signature `Lokhttp3/HttpUrl;.e:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4fe09c.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4fe0a2.  v0:= temp;
  #L4fe0a4.  v1:= 0I;
  #L4fe0a6.  if v1 >= v0 then goto L4fe0f4;
  #L4fe0aa.  call temp:= `get`(v6, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4fe0b0.  v2:= temp @kind object;
  #L4fe0b2.  v2:= (`java.lang.String`) v2 @kind object;
  #L4fe0b6.  v3:= v1 + 1;
  #L4fe0ba.  call temp:= `get`(v6, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4fe0c0.  v3:= temp @kind object;
  #L4fe0c2.  v3:= (`java.lang.String`) v3 @kind object;
  #L4fe0c6.  if v1 <= 0 then goto L4fe0d4;
  #L4fe0ca.  v4:= 38I;
  #L4fe0ce.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe0d4.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe0da.  if v3 == 0 then goto L4fe0ee;
  #L4fe0de.  v2:= 61I;
  #L4fe0e2.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe0e8.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe0ee.  v1:= v1 + 2;
  #L4fe0f2.  goto L4fe0a6;
  #L4fe0f4.  return @kind void;
}
procedure `void` `f`(`java.lang.StringBuilder` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lokhttp3/HttpUrl;.f:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4fe108.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4fe10e.  v0:= temp;
  #L4fe110.  v1:= 0I;
  #L4fe112.  if v1 >= v0 then goto L4fe138;
  #L4fe116.  v2:= 47I;
  #L4fe11a.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe120.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4fe126.  v2:= temp @kind object;
  #L4fe128.  v2:= (`java.lang.String`) v2 @kind object;
  #L4fe12c.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fe132.  v1:= v1 + 1;
  #L4fe136.  goto L4fe112;
  #L4fe138.  return @kind void;
}
procedure `java.lang.String` `g`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 ) @signature `Lokhttp3/HttpUrl;.g:(Ljava/lang/String;IIZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4fd760.  v0:= v4;
  #L4fd762.  if v0 >= v5 then goto L4fd7aa;
  #L4fd766.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4fd76c.  v1:= temp;
  #L4fd76e.  v2:= 37I;
  #L4fd772.  if v1 == v2 then goto L4fd78a;
  #L4fd776.  v2:= 43I;
  #L4fd77a.  if v1 != v2 then goto L4fd784;
  #L4fd77e.  if v6 == 0 then goto L4fd784;
  #L4fd782.  goto L4fd78a;
  #L4fd784.  v0:= v0 + 1;
  #L4fd788.  goto L4fd762;
  #L4fd78a.  v1:= new `okio.Buffer`;
  #L4fd78e.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L4fd794.  call temp:= `writeUtf8`(v1, v3, v4, v0) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;II)Lokio/Buffer;` @kind virtual;
  #L4fd79a.  call `i`(v1, v3, v0, v5, v6) @signature `Lokhttp3/HttpUrl;.i:(Lokio/Buffer;Ljava/lang/String;IIZ)V` @kind static;
  #L4fd7a0.  call temp:= `readUtf8`(v1) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L4fd7a6.  v3:= temp @kind object;
  #L4fd7a8.  return v3 @kind object;
  #L4fd7aa.  call temp:= `substring`(v3, v4, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L4fd7b0.  v3:= temp @kind object;
  #L4fd7b2.  return v3 @kind object;
}
procedure `okhttp3.HttpUrl` `get`(`java.lang.String` v2 @kind object) @signature `Lokhttp3/HttpUrl;.get:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4fdcb8.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L4fdcbc.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L4fdcc2.  v1:= 0I;
  #L4fdcc4.  call temp:= `b`(v0, v1, v2) @signature `Lokhttp3/HttpUrl$Builder;.b:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L4fdcca.  v2:= temp @kind object;
  #L4fdccc.  call temp:= `build`(v2) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L4fdcd2.  v2:= temp @kind object;
  #L4fdcd4.  return v2 @kind object;
}
procedure `okhttp3.HttpUrl` `get`(`java.net.URI` v0 @kind object) @signature `Lokhttp3/HttpUrl;.get:(Ljava/net/URI;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4fdce8.  call temp:= `toString`(v0) @signature `Ljava/net/URI;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fdcee.  v0:= temp @kind object;
  #L4fdcf0.  call temp:= `parse`(v0) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind static;
  #L4fdcf6.  v0:= temp @kind object;
  #L4fdcf8.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `get`(`java.net.URL` v0 @kind object) @signature `Lokhttp3/HttpUrl;.get:(Ljava/net/URL;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4fdd0c.  call temp:= `toString`(v0) @signature `Ljava/net/URL;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fdd12.  v0:= temp @kind object;
  #L4fdd14.  call temp:= `parse`(v0) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind static;
  #L4fdd1a.  v0:= temp @kind object;
  #L4fdd1c.  return v0 @kind object;
}
procedure `java.lang.String` `h`(`java.lang.String` v2 @kind object, `boolean` v3 ) @signature `Lokhttp3/HttpUrl;.h:(Ljava/lang/String;Z)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L4fd73c.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fd742.  v0:= temp;
  #L4fd744.  v1:= 0I;
  #L4fd746.  call temp:= `g`(v2, v1, v0, v3) @signature `Lokhttp3/HttpUrl;.g:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L4fd74c.  v2:= temp @kind object;
  #L4fd74e.  return v2 @kind object;
}
procedure `void` `i`(`okio.Buffer` v5 @kind object, `java.lang.String` v6 @kind object, `int` v7 , `int` v8 , `boolean` v9 ) @signature `Lokhttp3/HttpUrl;.i:(Lokio/Buffer;Ljava/lang/String;IIZ)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4fe14c.  if v7 >= v8 then goto L4fe1d0;
  #L4fe150.  call temp:= `codePointAt`(v6, v7) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L4fe156.  v0:= temp;
  #L4fe158.  v1:= 37I;
  #L4fe15c.  if v0 != v1 then goto L4fe1a6;
  #L4fe160.  v1:= v7 + 2;
  #L4fe164.  if v1 >= v8 then goto L4fe1a6;
  #L4fe168.  v2:= v7 + 1;
  #L4fe16c.  call temp:= `charAt`(v6, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4fe172.  v2:= temp;
  #L4fe174.  call temp:= `decodeHexDigit`(v2) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L4fe17a.  v2:= temp;
  #L4fe17c.  call temp:= `charAt`(v6, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4fe182.  v3:= temp;
  #L4fe184.  call temp:= `decodeHexDigit`(v3) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L4fe18a.  v3:= temp;
  #L4fe18c.  v4:= -1I;
  #L4fe18e.  if v2 == v4 then goto L4fe1be;
  #L4fe192.  if v3 == v4 then goto L4fe1be;
  #L4fe196.  v7:= v2 ^< 4;
  #L4fe19a.  v7:= v7 + v3 @kind int;
  #L4fe19c.  call temp:= `writeByte`(v5, v7) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L4fe1a2.  v7:= v1;
  #L4fe1a4.  goto L4fe1c4;
  #L4fe1a6.  v1:= 43I;
  #L4fe1aa.  if v0 != v1 then goto L4fe1be;
  #L4fe1ae.  if v9 == 0 then goto L4fe1be;
  #L4fe1b2.  v1:= 32I;
  #L4fe1b6.  call temp:= `writeByte`(v5, v1) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L4fe1bc.  goto L4fe1c4;
  #L4fe1be.  call temp:= `writeUtf8CodePoint`(v5, v0) @signature `Lokio/Buffer;.writeUtf8CodePoint:(I)Lokio/Buffer;` @kind virtual;
  #L4fe1c4.  call temp:= `charCount`(v0) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L4fe1ca.  v0:= temp;
  #L4fe1cc.  v7:= v7 + v0 @kind int;
  #L4fe1ce.  goto L4fe14c;
  #L4fe1d0.  return @kind void;
}
procedure `boolean` `j`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lokhttp3/HttpUrl;.j:(Ljava/lang/String;II)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4fd2e8.  v0:= v4 + 2;
  #L4fd2ec.  v1:= 1I;
  #L4fd2ee.  if v0 >= v5 then goto L4fd330;
  #L4fd2f2.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4fd2f8.  v5:= temp;
  #L4fd2fa.  v2:= 37I;
  #L4fd2fe.  if v5 != v2 then goto L4fd330;
  #L4fd302.  v4:= v4 + v1 @kind int;
  #L4fd304.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4fd30a.  v4:= temp;
  #L4fd30c.  call temp:= `decodeHexDigit`(v4) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L4fd312.  v4:= temp;
  #L4fd314.  v5:= -1I;
  #L4fd316.  if v4 == v5 then goto L4fd330;
  #L4fd31a.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4fd320.  v3:= temp;
  #L4fd322.  call temp:= `decodeHexDigit`(v3) @signature `Lokhttp3/internal/Util;.decodeHexDigit:(C)I` @kind static;
  #L4fd328.  v3:= temp;
  #L4fd32a.  if v3 == v5 then goto L4fd330;
  #L4fd32e.  goto L4fd332;
  #L4fd330.  v1:= 0I;
  #L4fd332.  return v1;
}
procedure `java.util.List` `k`(`java.lang.String` v5 @kind object) @signature `Lokhttp3/HttpUrl;.k:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4fdbc4.  v0:= new `java.util.ArrayList`;
  #L4fdbc8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4fdbce.  v1:= 0I;
  #L4fdbd0.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fdbd6.  v2:= temp;
  #L4fdbd8.  if v1 > v2 then goto L4fdc44;
  #L4fdbdc.  v2:= 38I;
  #L4fdbe0.  call temp:= `indexOf`(v5, v2, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L4fdbe6.  v2:= temp;
  #L4fdbe8.  v3:= -1I;
  #L4fdbea.  if v2 != v3 then goto L4fdbf6;
  #L4fdbee.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fdbf4.  v2:= temp;
  #L4fdbf6.  v4:= 61I;
  #L4fdbfa.  call temp:= `indexOf`(v5, v4, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L4fdc00.  v4:= temp;
  #L4fdc02.  if v4 == v3 then goto L4fdc28;
  #L4fdc06.  if v4 <= v2 then goto L4fdc0c;
  #L4fdc0a.  goto L4fdc28;
  #L4fdc0c.  call temp:= `substring`(v5, v1, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L4fdc12.  v1:= temp @kind object;
  #L4fdc14.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fdc1a.  v4:= v4 + 1;
  #L4fdc1e.  call temp:= `substring`(v5, v4, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L4fdc24.  v1:= temp @kind object;
  #L4fdc26.  goto L4fdc38;
  #L4fdc28.  call temp:= `substring`(v5, v1, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L4fdc2e.  v1:= temp @kind object;
  #L4fdc30.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fdc36.  v1:= 0I;
  #L4fdc38.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fdc3e.  v1:= v2 + 1;
  #L4fdc42.  goto L4fdbd0;
  #L4fdc44.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `parse`(`java.lang.String` v0 @kind object) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4fdd30.  call temp:= `get`(v0) @signature `Lokhttp3/HttpUrl;.get:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind static;
  #L4fdd36.  v0:= temp @kind object;
  #L4fdd38.  return v0 @kind object;
  #L4fdd3a.  v0:= 0I;
  #L4fdd3c.  return v0 @kind object;
  catch `java.lang.IllegalArgumentException` @[L4fdd30..L4fdd38] goto L4fdd3a;
}
procedure `java.util.List` `percentDecode`(`okhttp3.HttpUrl` v4 @kind this, `java.util.List` v5 @kind object, `boolean` v6 ) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/util/List;Z)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fdaec.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4fdaf2.  v0:= temp;
  #L4fdaf4.  v1:= new `java.util.ArrayList`;
  #L4fdaf8.  call `<init>`(v1, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L4fdafe.  v2:= 0I;
  #L4fdb00.  if v2 >= v0 then goto L4fdb2c;
  #L4fdb04.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4fdb0a.  v3:= temp @kind object;
  #L4fdb0c.  v3:= (`java.lang.String`) v3 @kind object;
  #L4fdb10.  if v3 == 0 then goto L4fdb1e;
  #L4fdb14.  call temp:= `h`(v3, v6) @signature `Lokhttp3/HttpUrl;.h:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L4fdb1a.  v3:= temp @kind object;
  #L4fdb1c.  goto L4fdb20;
  #L4fdb1e.  v3:= 0I;
  #L4fdb20.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fdb26.  v2:= v2 + 1;
  #L4fdb2a.  goto L4fdb00;
  #L4fdb2c.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L4fdb32.  v5:= temp @kind object;
  #L4fdb34.  return v5 @kind object;
}
procedure `java.lang.String` `encodedFragment`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.encodedFragment:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fd540.  v0:= v2.`okhttp3.HttpUrl.fragment` @type ^`java.lang.String` @kind object;
  #L4fd544.  if v0 != 0 then goto L4fd54c;
  #L4fd548.  v0:= 0I;
  #L4fd54a.  return v0 @kind object;
  #L4fd54c.  v0:= v2.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L4fd550.  v1:= 35I;
  #L4fd554.  call temp:= `indexOf`(v0, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L4fd55a.  v0:= temp;
  #L4fd55c.  v0:= v0 + 1;
  #L4fd560.  v1:= v2.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L4fd564.  call temp:= `substring`(v1, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L4fd56a.  v0:= temp @kind object;
  #L4fd56c.  return v0 @kind object;
}
procedure `java.lang.String` `encodedPassword`(`okhttp3.HttpUrl` v3 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4fd580.  v0:= v3.`okhttp3.HttpUrl.password` @type ^`java.lang.String` @kind object;
  #L4fd584.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L4fd58a.  v0:= temp;
  #L4fd58c.  if v0 == 0 then goto L4fd596;
  #L4fd590.  v0:= "" @kind object;
  #L4fd594.  return v0 @kind object;
  #L4fd596.  v0:= v3.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L4fd59a.  v1:= 58I;
  #L4fd59e.  v2:= v3.`okhttp3.HttpUrl.a` @type ^`java.lang.String` @kind object;
  #L4fd5a2.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fd5a8.  v2:= temp;
  #L4fd5aa.  v2:= v2 + 3;
  #L4fd5ae.  call temp:= `indexOf`(v0, v1, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L4fd5b4.  v0:= temp;
  #L4fd5b6.  v0:= v0 + 1;
  #L4fd5ba.  v1:= v3.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L4fd5be.  v2:= 64I;
  #L4fd5c2.  call temp:= `indexOf`(v1, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L4fd5c8.  v1:= temp;
  #L4fd5ca.  v2:= v3.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L4fd5ce.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L4fd5d4.  v0:= temp @kind object;
  #L4fd5d6.  return v0 @kind object;
}
procedure `java.lang.String` `encodedPath`(`okhttp3.HttpUrl` v4 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPath:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fd5e8.  v0:= v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L4fd5ec.  v1:= v4.`okhttp3.HttpUrl.a` @type ^`java.lang.String` @kind object;
  #L4fd5f0.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fd5f6.  v1:= temp;
  #L4fd5f8.  v1:= v1 + 3;
  #L4fd5fc.  v2:= 47I;
  #L4fd600.  call temp:= `indexOf`(v0, v2, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L4fd606.  v0:= temp;
  #L4fd608.  v1:= v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L4fd60c.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fd612.  v2:= temp;
  #L4fd614.  v3:= "?#" @kind object;
  #L4fd618.  call temp:= `delimiterOffset`(v1, v0, v2, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L4fd61e.  v1:= temp;
  #L4fd620.  v2:= v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L4fd624.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L4fd62a.  v0:= temp @kind object;
  #L4fd62c.  return v0 @kind object;
}
procedure `java.util.List` `encodedPathSegments`(`okhttp3.HttpUrl` v6 @kind this) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4fda54.  v0:= v6.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L4fda58.  v1:= v6.`okhttp3.HttpUrl.a` @type ^`java.lang.String` @kind object;
  #L4fda5c.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fda62.  v1:= temp;
  #L4fda64.  v1:= v1 + 3;
  #L4fda68.  v2:= 47I;
  #L4fda6c.  call temp:= `indexOf`(v0, v2, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L4fda72.  v0:= temp;
  #L4fda74.  v1:= v6.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L4fda78.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fda7e.  v3:= temp;
  #L4fda80.  v4:= "?#" @kind object;
  #L4fda84.  call temp:= `delimiterOffset`(v1, v0, v3, v4) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L4fda8a.  v1:= temp;
  #L4fda8c.  v3:= new `java.util.ArrayList`;
  #L4fda90.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4fda96.  if v0 >= v1 then goto L4fdac0;
  #L4fda9a.  v0:= v0 + 1;
  #L4fda9e.  v4:= v6.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L4fdaa2.  call temp:= `delimiterOffset`(v4, v0, v1, v2) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L4fdaa8.  v4:= temp;
  #L4fdaaa.  v5:= v6.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L4fdaae.  call temp:= `substring`(v5, v0, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L4fdab4.  v0:= temp @kind object;
  #L4fdab6.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fdabc.  v0:= v4;
  #L4fdabe.  goto L4fda96;
  #L4fdac0.  return v3 @kind object;
}
procedure `java.lang.String` `encodedQuery`(`okhttp3.HttpUrl` v4 @kind this) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fd640.  v0:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L4fd644.  if v0 != 0 then goto L4fd64c;
  #L4fd648.  v0:= 0I;
  #L4fd64a.  return v0 @kind object;
  #L4fd64c.  v0:= v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L4fd650.  v1:= 63I;
  #L4fd654.  call temp:= `indexOf`(v0, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L4fd65a.  v0:= temp;
  #L4fd65c.  v0:= v0 + 1;
  #L4fd660.  v1:= v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L4fd664.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fd66a.  v2:= temp;
  #L4fd66c.  v3:= 35I;
  #L4fd670.  call temp:= `delimiterOffset`(v1, v0, v2, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IIC)I` @kind static;
  #L4fd676.  v1:= temp;
  #L4fd678.  v2:= v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L4fd67c.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L4fd682.  v0:= temp @kind object;
  #L4fd684.  return v0 @kind object;
}
procedure `java.lang.String` `encodedUsername`(`okhttp3.HttpUrl` v4 @kind this) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fd698.  v0:= v4.`okhttp3.HttpUrl.username` @type ^`java.lang.String` @kind object;
  #L4fd69c.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L4fd6a2.  v0:= temp;
  #L4fd6a4.  if v0 == 0 then goto L4fd6ae;
  #L4fd6a8.  v0:= "" @kind object;
  #L4fd6ac.  return v0 @kind object;
  #L4fd6ae.  v0:= v4.`okhttp3.HttpUrl.a` @type ^`java.lang.String` @kind object;
  #L4fd6b2.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fd6b8.  v0:= temp;
  #L4fd6ba.  v0:= v0 + 3;
  #L4fd6be.  v1:= v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L4fd6c2.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fd6c8.  v2:= temp;
  #L4fd6ca.  v3:= ":@" @kind object;
  #L4fd6ce.  call temp:= `delimiterOffset`(v1, v0, v2, v3) @signature `Lokhttp3/internal/Util;.delimiterOffset:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L4fd6d4.  v1:= temp;
  #L4fd6d6.  v2:= v4.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L4fd6da.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L4fd6e0.  v0:= temp @kind object;
  #L4fd6e2.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.HttpUrl` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/HttpUrl;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fd28c.  v0:= instanceof @variable v2 @type ^`okhttp3.HttpUrl` @kind boolean;
  #L4fd290.  if v0 == 0 then goto L4fd2b0;
  #L4fd294.  v2:= (`okhttp3.HttpUrl`) v2 @kind object;
  #L4fd298.  v2:= v2.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L4fd29c.  v0:= v1.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L4fd2a0.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fd2a6.  v2:= temp;
  #L4fd2a8.  if v2 == 0 then goto L4fd2b0;
  #L4fd2ac.  v2:= 1I;
  #L4fd2ae.  goto L4fd2b2;
  #L4fd2b0.  v2:= 0I;
  #L4fd2b2.  return v2;
}
procedure `java.lang.String` `fragment`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.fragment:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fd6f4.  v0:= v1.`okhttp3.HttpUrl.fragment` @type ^`java.lang.String` @kind object;
  #L4fd6f8.  return v0 @kind object;
}
procedure `int` `hashCode`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fd384.  v0:= v1.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L4fd388.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L4fd38e.  v0:= temp;
  #L4fd390.  return v0;
}
procedure `java.lang.String` `host`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fd70c.  v0:= v1.`okhttp3.HttpUrl.b` @type ^`java.lang.String` @kind object;
  #L4fd710.  return v0 @kind object;
}
procedure `boolean` `isHttps`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.isHttps:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fd2c4.  v0:= v2.`okhttp3.HttpUrl.a` @type ^`java.lang.String` @kind object;
  #L4fd2c8.  v1:= "https" @kind object;
  #L4fd2cc.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fd2d2.  v0:= temp;
  #L4fd2d4.  return v0;
}
procedure `okhttp3.HttpUrl$Builder` `newBuilder`(`okhttp3.HttpUrl` v3 @kind this) @signature `Lokhttp3/HttpUrl;.newBuilder:()Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4fdd8c.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L4fdd90.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L4fdd96.  v1:= v3.`okhttp3.HttpUrl.a` @type ^`java.lang.String` @kind object;
  #L4fdd9a.  v0.`okhttp3.HttpUrl$Builder.a` @type ^`java.lang.String` := v1 @kind object;
  #L4fdd9e.  call temp:= `encodedUsername`(v3) @signature `Lokhttp3/HttpUrl;.encodedUsername:()Ljava/lang/String;` @kind virtual;
  #L4fdda4.  v1:= temp @kind object;
  #L4fdda6.  v0.`okhttp3.HttpUrl$Builder.b` @type ^`java.lang.String` := v1 @kind object;
  #L4fddaa.  call temp:= `encodedPassword`(v3) @signature `Lokhttp3/HttpUrl;.encodedPassword:()Ljava/lang/String;` @kind virtual;
  #L4fddb0.  v1:= temp @kind object;
  #L4fddb2.  v0.`okhttp3.HttpUrl$Builder.c` @type ^`java.lang.String` := v1 @kind object;
  #L4fddb6.  v1:= v3.`okhttp3.HttpUrl.b` @type ^`java.lang.String` @kind object;
  #L4fddba.  v0.`okhttp3.HttpUrl$Builder.d` @type ^`java.lang.String` := v1 @kind object;
  #L4fddbe.  v1:= v3.`okhttp3.HttpUrl.c` @type ^`int`;
  #L4fddc2.  v2:= v3.`okhttp3.HttpUrl.a` @type ^`java.lang.String` @kind object;
  #L4fddc6.  call temp:= `defaultPort`(v2) @signature `Lokhttp3/HttpUrl;.defaultPort:(Ljava/lang/String;)I` @kind static;
  #L4fddcc.  v2:= temp;
  #L4fddce.  if v1 == v2 then goto L4fddd8;
  #L4fddd2.  v1:= v3.`okhttp3.HttpUrl.c` @type ^`int`;
  #L4fddd6.  goto L4fddda;
  #L4fddd8.  v1:= -1I;
  #L4fddda.  v0.`okhttp3.HttpUrl$Builder.e` @type ^`int` := v1;
  #L4fddde.  v1:= v0.`okhttp3.HttpUrl$Builder.f` @type ^`java.util.List` @kind object;
  #L4fdde2.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L4fdde8.  v1:= v0.`okhttp3.HttpUrl$Builder.f` @type ^`java.util.List` @kind object;
  #L4fddec.  call temp:= `encodedPathSegments`(v3) @signature `Lokhttp3/HttpUrl;.encodedPathSegments:()Ljava/util/List;` @kind virtual;
  #L4fddf2.  v2:= temp @kind object;
  #L4fddf4.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L4fddfa.  call temp:= `encodedQuery`(v3) @signature `Lokhttp3/HttpUrl;.encodedQuery:()Ljava/lang/String;` @kind virtual;
  #L4fde00.  v1:= temp @kind object;
  #L4fde02.  call temp:= `encodedQuery`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.encodedQuery:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L4fde08.  call temp:= `encodedFragment`(v3) @signature `Lokhttp3/HttpUrl;.encodedFragment:()Ljava/lang/String;` @kind virtual;
  #L4fde0e.  v1:= temp @kind object;
  #L4fde10.  v0.`okhttp3.HttpUrl$Builder.h` @type ^`java.lang.String` := v1 @kind object;
  #L4fde14.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl$Builder` `newBuilder`(`okhttp3.HttpUrl` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fde28.  v0:= new `okhttp3.HttpUrl$Builder`;
  #L4fde2c.  call `<init>`(v0) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L4fde32.  call temp:= `b`(v0, v1, v2) @signature `Lokhttp3/HttpUrl$Builder;.b:(Lokhttp3/HttpUrl;Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L4fde38.  v2:= temp @kind object;
  #L4fde3a.  return v2 @kind object;
  #L4fde3c.  v2:= 0I;
  #L4fde3e.  return v2 @kind object;
  catch `java.lang.IllegalArgumentException` @[L4fde28..L4fde3a] goto L4fde3c;
}
procedure `java.lang.String` `password`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.password:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fd724.  v0:= v1.`okhttp3.HttpUrl.password` @type ^`java.lang.String` @kind object;
  #L4fd728.  return v0 @kind object;
}
procedure `java.util.List` `pathSegments`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.pathSegments:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fdad4.  v0:= v1.`okhttp3.HttpUrl.pathSegments` @type ^`java.util.List` @kind object;
  #L4fdad8.  return v0 @kind object;
}
procedure `int` `pathSize`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.pathSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fd3a4.  v0:= v1.`okhttp3.HttpUrl.pathSegments` @type ^`java.util.List` @kind object;
  #L4fd3a8.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4fd3ae.  v0:= temp;
  #L4fd3b0.  return v0;
}
procedure `int` `port`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.port:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fd3c4.  v0:= v1.`okhttp3.HttpUrl.c` @type ^`int`;
  #L4fd3c8.  return v0;
}
procedure `java.lang.String` `query`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.query:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fd7c4.  v0:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L4fd7c8.  if v0 != 0 then goto L4fd7d0;
  #L4fd7cc.  v0:= 0I;
  #L4fd7ce.  return v0 @kind object;
  #L4fd7d0.  v0:= new `java.lang.StringBuilder`;
  #L4fd7d4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fd7da.  v1:= v2.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L4fd7de.  call `e`(v0, v1) @signature `Lokhttp3/HttpUrl;.e:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L4fd7e4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fd7ea.  v0:= temp @kind object;
  #L4fd7ec.  return v0 @kind object;
}
procedure `java.lang.String` `queryParameter`(`okhttp3.HttpUrl` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lokhttp3/HttpUrl;.queryParameter:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fd800.  v0:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L4fd804.  v1:= 0I;
  #L4fd806.  if v0 != 0 then goto L4fd80c;
  #L4fd80a.  return v1 @kind object;
  #L4fd80c.  v2:= 0I;
  #L4fd80e.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4fd814.  v0:= temp;
  #L4fd816.  if v2 >= v0 then goto L4fd84e;
  #L4fd81a.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L4fd81e.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4fd824.  v3:= temp @kind object;
  #L4fd826.  call temp:= `equals`(v5, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fd82c.  v3:= temp;
  #L4fd82e.  if v3 == 0 then goto L4fd848;
  #L4fd832.  v5:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L4fd836.  v2:= v2 + 1;
  #L4fd83a.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4fd840.  v5:= temp @kind object;
  #L4fd842.  v5:= (`java.lang.String`) v5 @kind object;
  #L4fd846.  return v5 @kind object;
  #L4fd848.  v2:= v2 + 2;
  #L4fd84c.  goto L4fd816;
  #L4fd84e.  return v1 @kind object;
}
procedure `java.lang.String` `queryParameterName`(`okhttp3.HttpUrl` v1 @kind this, `int` v2 ) @signature `Lokhttp3/HttpUrl;.queryParameterName:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fd860.  v0:= v1.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L4fd864.  if v0 == 0 then goto L4fd87a;
  #L4fd868.  v2:= v2 * 2;
  #L4fd86c.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4fd872.  v2:= temp @kind object;
  #L4fd874.  v2:= (`java.lang.String`) v2 @kind object;
  #L4fd878.  return v2 @kind object;
  #L4fd87a.  v2:= new `java.lang.IndexOutOfBoundsException`;
  #L4fd87e.  call `<init>`(v2) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L4fd884.  throw v2;
}
procedure `java.util.Set` `queryParameterNames`(`okhttp3.HttpUrl` v4 @kind this) @signature `Lokhttp3/HttpUrl;.queryParameterNames:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fdc58.  v0:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L4fdc5c.  if v0 != 0 then goto L4fdc6a;
  #L4fdc60.  call temp:= `emptySet`() @signature `Ljava/util/Collections;.emptySet:()Ljava/util/Set;` @kind static;
  #L4fdc66.  v0:= temp @kind object;
  #L4fdc68.  return v0 @kind object;
  #L4fdc6a.  v0:= new `java.util.LinkedHashSet`;
  #L4fdc6e.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L4fdc74.  v1:= 0I;
  #L4fdc76.  v2:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L4fdc7a.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4fdc80.  v2:= temp;
  #L4fdc82.  if v1 >= v2 then goto L4fdc9e;
  #L4fdc86.  v3:= v4.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L4fdc8a.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4fdc90.  v3:= temp @kind object;
  #L4fdc92.  call temp:= `add`(v0, v3) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fdc98.  v1:= v1 + 2;
  #L4fdc9c.  goto L4fdc82;
  #L4fdc9e.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L4fdca4.  v0:= temp @kind object;
  #L4fdca6.  return v0 @kind object;
}
procedure `java.lang.String` `queryParameterValue`(`okhttp3.HttpUrl` v1 @kind this, `int` v2 ) @signature `Lokhttp3/HttpUrl;.queryParameterValue:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fd898.  v0:= v1.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L4fd89c.  if v0 == 0 then goto L4fd8b6;
  #L4fd8a0.  v2:= v2 * 2;
  #L4fd8a4.  v2:= v2 + 1;
  #L4fd8a8.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4fd8ae.  v2:= temp @kind object;
  #L4fd8b0.  v2:= (`java.lang.String`) v2 @kind object;
  #L4fd8b4.  return v2 @kind object;
  #L4fd8b6.  v2:= new `java.lang.IndexOutOfBoundsException`;
  #L4fd8ba.  call `<init>`(v2) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L4fd8c0.  throw v2;
}
procedure `java.util.List` `queryParameterValues`(`okhttp3.HttpUrl` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lokhttp3/HttpUrl;.queryParameterValues:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4fdb48.  v0:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L4fdb4c.  if v0 != 0 then goto L4fdb5a;
  #L4fdb50.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L4fdb56.  v6:= temp @kind object;
  #L4fdb58.  return v6 @kind object;
  #L4fdb5a.  v0:= new `java.util.ArrayList`;
  #L4fdb5e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4fdb64.  v1:= 0I;
  #L4fdb66.  v2:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L4fdb6a.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4fdb70.  v2:= temp;
  #L4fdb72.  if v1 >= v2 then goto L4fdbaa;
  #L4fdb76.  v3:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L4fdb7a.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4fdb80.  v3:= temp @kind object;
  #L4fdb82.  call temp:= `equals`(v6, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fdb88.  v3:= temp;
  #L4fdb8a.  if v3 == 0 then goto L4fdba4;
  #L4fdb8e.  v3:= v5.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L4fdb92.  v4:= v1 + 1;
  #L4fdb96.  call temp:= `get`(v3, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4fdb9c.  v3:= temp @kind object;
  #L4fdb9e.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fdba4.  v1:= v1 + 2;
  #L4fdba8.  goto L4fdb72;
  #L4fdbaa.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L4fdbb0.  v6:= temp @kind object;
  #L4fdbb2.  return v6 @kind object;
}
procedure `int` `querySize`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.querySize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fd3dc.  v0:= v1.`okhttp3.HttpUrl.queryNamesAndValues` @type ^`java.util.List` @kind object;
  #L4fd3e0.  if v0 == 0 then goto L4fd3f2;
  #L4fd3e4.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4fd3ea.  v0:= temp;
  #L4fd3ec.  v0:= v0 / 2;
  #L4fd3f0.  goto L4fd3f4;
  #L4fd3f2.  v0:= 0I;
  #L4fd3f4.  return v0;
}
procedure `java.lang.String` `redact`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.redact:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fd8d4.  v0:= "/..." @kind object;
  #L4fd8d8.  call temp:= `newBuilder`(v2, v0) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L4fd8de.  v0:= temp @kind object;
  #L4fd8e0.  v1:= "" @kind object;
  #L4fd8e4.  call temp:= `username`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.username:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L4fd8ea.  v0:= temp @kind object;
  #L4fd8ec.  call temp:= `password`(v0, v1) @signature `Lokhttp3/HttpUrl$Builder;.password:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L4fd8f2.  v0:= temp @kind object;
  #L4fd8f4.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L4fd8fa.  v0:= temp @kind object;
  #L4fd8fc.  call temp:= `toString`(v0) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fd902.  v0:= temp @kind object;
  #L4fd904.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `resolve`(`okhttp3.HttpUrl` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lokhttp3/HttpUrl;.resolve:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;

  #L4fdd60.  call temp:= `newBuilder`(v0, v1) @signature `Lokhttp3/HttpUrl;.newBuilder:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L4fdd66.  v1:= temp @kind object;
  #L4fdd68.  if v1 == 0 then goto L4fdd76;
  #L4fdd6c.  call temp:= `build`(v1) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L4fdd72.  v1:= temp @kind object;
  #L4fdd74.  goto L4fdd78;
  #L4fdd76.  v1:= 0I;
  #L4fdd78.  return v1 @kind object;
}
procedure `java.lang.String` `scheme`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fd918.  v0:= v1.`okhttp3.HttpUrl.a` @type ^`java.lang.String` @kind object;
  #L4fd91c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fd930.  v0:= v1.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L4fd934.  return v0 @kind object;
}
procedure `java.lang.String` `topPrivateDomain`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.topPrivateDomain:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fd948.  v0:= v2.`okhttp3.HttpUrl.b` @type ^`java.lang.String` @kind object;
  #L4fd94c.  call temp:= `verifyAsIpAddress`(v0) @signature `Lokhttp3/internal/Util;.verifyAsIpAddress:(Ljava/lang/String;)Z` @kind static;
  #L4fd952.  v0:= temp;
  #L4fd954.  if v0 == 0 then goto L4fd95c;
  #L4fd958.  v0:= 0I;
  #L4fd95a.  return v0 @kind object;
  #L4fd95c.  call temp:= `get`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.get:()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;` @kind static;
  #L4fd962.  v0:= temp @kind object;
  #L4fd964.  v1:= v2.`okhttp3.HttpUrl.b` @type ^`java.lang.String` @kind object;
  #L4fd968.  call temp:= `getEffectiveTldPlusOne`(v0, v1) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.getEffectiveTldPlusOne:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4fd96e.  v0:= temp @kind object;
  #L4fd970.  return v0 @kind object;
}
procedure `java.net.URI` `uri`(`okhttp3.HttpUrl` v4 @kind this) @signature `Lokhttp3/HttpUrl;.uri:()Ljava/net/URI;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fd99c.  call temp:= `newBuilder`(v4) @signature `Lokhttp3/HttpUrl;.newBuilder:()Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L4fd9a2.  v0:= temp @kind object;
  #L4fd9a4.  call temp:= `c`(v0) @signature `Lokhttp3/HttpUrl$Builder;.c:()Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L4fd9aa.  v0:= temp @kind object;
  #L4fd9ac.  call temp:= `toString`(v0) @signature `Lokhttp3/HttpUrl$Builder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fd9b2.  v0:= temp @kind object;
  #L4fd9b4.  v1:= new `java.net.URI`;
  #L4fd9b8.  call `<init>`(v1, v0) @signature `Ljava/net/URI;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fd9be.  return v1 @kind object;
  #L4fd9c0.  v1:= Exception @type ^`java.net.URISyntaxException` @kind object;
  #L4fd9c2.  v2:= "[\\u0000-\\u001F\\u007F-\\u009F\\p{javaWhitespace}]" @kind object;
  #L4fd9c6.  v3:= "" @kind object;
  #L4fd9ca.  call temp:= `replaceAll`(v0, v2, v3) @signature `Ljava/lang/String;.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4fd9d0.  v0:= temp @kind object;
  #L4fd9d2.  call temp:= `create`(v0) @signature `Ljava/net/URI;.create:(Ljava/lang/String;)Ljava/net/URI;` @kind static;
  #L4fd9d8.  v0:= temp @kind object;
  #L4fd9da.  return v0 @kind object;
  #L4fd9dc.  v0:= new `java.lang.RuntimeException`;
  #L4fd9e0.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L4fd9e6.  throw v0;
  catch `java.net.URISyntaxException` @[L4fd9b4..L4fd9be] goto L4fd9c0;
  catch `java.lang.Exception` @[L4fd9c2..L4fd9da] goto L4fd9dc;
}
procedure `java.net.URL` `url`(`okhttp3.HttpUrl` v2 @kind this) @signature `Lokhttp3/HttpUrl;.url:()Ljava/net/URL;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fda14.  v0:= new `java.net.URL`;
  #L4fda18.  v1:= v2.`okhttp3.HttpUrl.url` @type ^`java.lang.String` @kind object;
  #L4fda1c.  call `<init>`(v0, v1) @signature `Ljava/net/URL;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fda22.  return v0 @kind object;
  #L4fda24.  v0:= Exception @type ^`java.net.MalformedURLException` @kind object;
  #L4fda26.  v1:= new `java.lang.RuntimeException`;
  #L4fda2a.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L4fda30.  throw v1;
  catch `java.net.MalformedURLException` @[L4fda14..L4fda22] goto L4fda24;
}
procedure `java.lang.String` `username`(`okhttp3.HttpUrl` v1 @kind this) @signature `Lokhttp3/HttpUrl;.username:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fd984.  v0:= v1.`okhttp3.HttpUrl.username` @type ^`java.lang.String` @kind object;
  #L4fd988.  return v0 @kind object;
}
