record `okhttp3.Challenge` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Map` `okhttp3.Challenge.authParams` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Challenge.scheme` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.Challenge` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Challenge;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4f8d48.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f8d4e.  if v1 == 0 then goto L4f8d7c;
  #L4f8d52.  if v2 == 0 then goto L4f8d6c;
  #L4f8d56.  v0.`okhttp3.Challenge.scheme` @type ^`java.lang.String` := v1 @kind object;
  #L4f8d5a.  v1:= "realm" @kind object;
  #L4f8d5e.  call temp:= `singletonMap`(v1, v2) @signature `Ljava/util/Collections;.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;` @kind static;
  #L4f8d64.  v1:= temp @kind object;
  #L4f8d66.  v0.`okhttp3.Challenge.authParams` @type ^`java.util.Map` := v1 @kind object;
  #L4f8d6a.  return @kind void;
  #L4f8d6c.  v1:= new `java.lang.NullPointerException`;
  #L4f8d70.  v2:= "realm == null" @kind object;
  #L4f8d74.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f8d7a.  throw v1;
  #L4f8d7c.  v1:= new `java.lang.NullPointerException`;
  #L4f8d80.  v2:= "scheme == null" @kind object;
  #L4f8d84.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f8d8a.  throw v1;
}
procedure `void` `<init>`(`okhttp3.Challenge` v3 @kind this, `java.lang.String` v4 @kind object, `java.util.Map` v5 @kind object) @signature `Lokhttp3/Challenge;.<init>:(Ljava/lang/String;Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4f8d9c.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f8da2.  if v4 == 0 then goto L4f8e36;
  #L4f8da6.  if v5 == 0 then goto L4f8e26;
  #L4f8daa.  v3.`okhttp3.Challenge.scheme` @type ^`java.lang.String` := v4 @kind object;
  #L4f8dae.  v4:= new `java.util.LinkedHashMap`;
  #L4f8db2.  call `<init>`(v4) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L4f8db8.  call temp:= `entrySet`(v5) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L4f8dbe.  v5:= temp @kind object;
  #L4f8dc0.  call temp:= `iterator`(v5) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4f8dc6.  v5:= temp @kind object;
  #L4f8dc8.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4f8dce.  v0:= temp;
  #L4f8dd0.  if v0 == 0 then goto L4f8e18;
  #L4f8dd4.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4f8dda.  v0:= temp @kind object;
  #L4f8ddc.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L4f8de0.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L4f8de6.  v1:= temp @kind object;
  #L4f8de8.  if v1 != 0 then goto L4f8df0;
  #L4f8dec.  v1:= 0I;
  #L4f8dee.  goto L4f8e08;
  #L4f8df0.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L4f8df6.  v1:= temp @kind object;
  #L4f8df8.  v1:= (`java.lang.String`) v1 @kind object;
  #L4f8dfc.  v2:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L4f8e00.  call temp:= `toLowerCase`(v1, v2) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L4f8e06.  v1:= temp @kind object;
  #L4f8e08.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4f8e0e.  v0:= temp @kind object;
  #L4f8e10.  call temp:= `put`(v4, v1, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4f8e16.  goto L4f8dc8;
  #L4f8e18.  call temp:= `unmodifiableMap`(v4) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L4f8e1e.  v4:= temp @kind object;
  #L4f8e20.  v3.`okhttp3.Challenge.authParams` @type ^`java.util.Map` := v4 @kind object;
  #L4f8e24.  return @kind void;
  #L4f8e26.  v4:= new `java.lang.NullPointerException`;
  #L4f8e2a.  v5:= "authParams == null" @kind object;
  #L4f8e2e.  call `<init>`(v4, v5) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f8e34.  throw v4;
  #L4f8e36.  v4:= new `java.lang.NullPointerException`;
  #L4f8e3a.  v5:= "scheme == null" @kind object;
  #L4f8e3e.  call `<init>`(v4, v5) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f8e44.  goto L4f8e48;
  #L4f8e46.  throw v4;
  #L4f8e48.  goto L4f8e46;
}
procedure `java.util.Map` `authParams`(`okhttp3.Challenge` v1 @kind this) @signature `Lokhttp3/Challenge;.authParams:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f8cdc.  v0:= v1.`okhttp3.Challenge.authParams` @type ^`java.util.Map` @kind object;
  #L4f8ce0.  return v0 @kind object;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.Challenge` v2 @kind this) @signature `Lokhttp3/Challenge;.charset:()Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f8c94.  v0:= v2.`okhttp3.Challenge.authParams` @type ^`java.util.Map` @kind object;
  #L4f8c98.  v1:= "charset" @kind object;
  #L4f8c9c.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4f8ca2.  v0:= temp @kind object;
  #L4f8ca4.  v0:= (`java.lang.String`) v0 @kind object;
  #L4f8ca8.  if v0 == 0 then goto L4f8cb6;
  #L4f8cac.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L4f8cb2.  v0:= temp @kind object;
  #L4f8cb4.  return v0 @kind object;
  #L4f8cb6.  v0:= `@@okhttp3.internal.Util.ISO_8859_1` @type ^`java.nio.charset.Charset` @kind object;
  #L4f8cba.  return v0 @kind object;
  catch `java.lang.Exception` @[L4f8cac..L4f8cb4] goto L4f8cb6;
}
procedure `boolean` `equals`(`okhttp3.Challenge` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/Challenge;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f8b8c.  v0:= instanceof @variable v3 @type ^`okhttp3.Challenge` @kind boolean;
  #L4f8b90.  if v0 == 0 then goto L4f8bc4;
  #L4f8b94.  v3:= (`okhttp3.Challenge`) v3 @kind object;
  #L4f8b98.  v0:= v3.`okhttp3.Challenge.scheme` @type ^`java.lang.String` @kind object;
  #L4f8b9c.  v1:= v2.`okhttp3.Challenge.scheme` @type ^`java.lang.String` @kind object;
  #L4f8ba0.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4f8ba6.  v0:= temp;
  #L4f8ba8.  if v0 == 0 then goto L4f8bc4;
  #L4f8bac.  v3:= v3.`okhttp3.Challenge.authParams` @type ^`java.util.Map` @kind object;
  #L4f8bb0.  v0:= v2.`okhttp3.Challenge.authParams` @type ^`java.util.Map` @kind object;
  #L4f8bb4.  call temp:= `equals`(v3, v0) @signature `Ljava/util/Map;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L4f8bba.  v3:= temp;
  #L4f8bbc.  if v3 == 0 then goto L4f8bc4;
  #L4f8bc0.  v3:= 1I;
  #L4f8bc2.  goto L4f8bc6;
  #L4f8bc4.  v3:= 0I;
  #L4f8bc6.  return v3;
}
procedure `int` `hashCode`(`okhttp3.Challenge` v2 @kind this) @signature `Lokhttp3/Challenge;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f8bd8.  v0:= v2.`okhttp3.Challenge.scheme` @type ^`java.lang.String` @kind object;
  #L4f8bdc.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L4f8be2.  v0:= temp;
  #L4f8be4.  v1:= 899I;
  #L4f8be8.  v1:= v1 + v0 @kind int;
  #L4f8bea.  v1:= v1 * 31;
  #L4f8bee.  v0:= v2.`okhttp3.Challenge.authParams` @type ^`java.util.Map` @kind object;
  #L4f8bf2.  call temp:= `hashCode`(v0) @signature `Ljava/util/Map;.hashCode:()I` @kind interface;
  #L4f8bf8.  v0:= temp;
  #L4f8bfa.  v1:= v1 + v0 @kind int;
  #L4f8bfc.  return v1;
}
procedure `java.lang.String` `realm`(`okhttp3.Challenge` v2 @kind this) @signature `Lokhttp3/Challenge;.realm:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f8c10.  v0:= v2.`okhttp3.Challenge.authParams` @type ^`java.util.Map` @kind object;
  #L4f8c14.  v1:= "realm" @kind object;
  #L4f8c18.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4f8c1e.  v0:= temp @kind object;
  #L4f8c20.  v0:= (`java.lang.String`) v0 @kind object;
  #L4f8c24.  return v0 @kind object;
}
procedure `java.lang.String` `scheme`(`okhttp3.Challenge` v1 @kind this) @signature `Lokhttp3/Challenge;.scheme:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f8c38.  v0:= v1.`okhttp3.Challenge.scheme` @type ^`java.lang.String` @kind object;
  #L4f8c3c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Challenge` v2 @kind this) @signature `Lokhttp3/Challenge;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f8c50.  v0:= new `java.lang.StringBuilder`;
  #L4f8c54.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4f8c5a.  v1:= v2.`okhttp3.Challenge.scheme` @type ^`java.lang.String` @kind object;
  #L4f8c5e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f8c64.  v1:= " authParams=" @kind object;
  #L4f8c68.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f8c6e.  v1:= v2.`okhttp3.Challenge.authParams` @type ^`java.util.Map` @kind object;
  #L4f8c72.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f8c78.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4f8c7e.  v0:= temp @kind object;
  #L4f8c80.  return v0 @kind object;
}
procedure `okhttp3.Challenge` `withCharset`(`okhttp3.Challenge` v2 @kind this, `java.nio.charset.Charset` v3 @kind object) @signature `Lokhttp3/Challenge;.withCharset:(Ljava/nio/charset/Charset;)Lokhttp3/Challenge;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f8cf4.  if v3 == 0 then goto L4f8d28;
  #L4f8cf8.  v0:= new `java.util.LinkedHashMap`;
  #L4f8cfc.  v1:= v2.`okhttp3.Challenge.authParams` @type ^`java.util.Map` @kind object;
  #L4f8d00.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L4f8d06.  call temp:= `name`(v3) @signature `Ljava/nio/charset/Charset;.name:()Ljava/lang/String;` @kind virtual;
  #L4f8d0c.  v3:= temp @kind object;
  #L4f8d0e.  v1:= "charset" @kind object;
  #L4f8d12.  call temp:= `put`(v0, v1, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4f8d18.  v3:= new `okhttp3.Challenge`;
  #L4f8d1c.  v1:= v2.`okhttp3.Challenge.scheme` @type ^`java.lang.String` @kind object;
  #L4f8d20.  call `<init>`(v3, v1, v0) @signature `Lokhttp3/Challenge;.<init>:(Ljava/lang/String;Ljava/util/Map;)V` @kind direct;
  #L4f8d26.  return v3 @kind object;
  #L4f8d28.  v3:= new `java.lang.NullPointerException`;
  #L4f8d2c.  v0:= "charset == null" @kind object;
  #L4f8d30.  call `<init>`(v3, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4f8d36.  throw v3;
}
