record `okhttp3.Headers` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String`[] `okhttp3.Headers.namesAndValues` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.Headers` v1 @kind this, `okhttp3.Headers$Builder` v2 @kind object) @signature `Lokhttp3/Headers;.<init>:(Lokhttp3/Headers$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L4fbd18.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fbd1e.  v2:= v2.`okhttp3.Headers$Builder.a` @type ^`java.util.List` @kind object;
  #L4fbd22.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4fbd28.  v0:= temp;
  #L4fbd2a.  v0:= new `java.lang.String`[v0];
  #L4fbd2e.  call temp:= `toArray`(v2, v0) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L4fbd34.  v2:= temp @kind object;
  #L4fbd36.  v2:= (`java.lang.String`[]) v2 @kind object;
  #L4fbd3a.  v1.`okhttp3.Headers.namesAndValues` @type ^`java.lang.String`[] := v2 @kind object;
  #L4fbd3e.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Headers` v0 @kind this, `java.lang.String`[] v1 @kind object) @signature `Lokhttp3/Headers;.<init>:([Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4fbcfc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fbd02.  v0.`okhttp3.Headers.namesAndValues` @type ^`java.lang.String`[] := v1 @kind object;
  #L4fbd06.  return @kind void;
}
procedure `void` `a`(`java.lang.String` v5 @kind object) @signature `Lokhttp3/Headers;.a:(Ljava/lang/String;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4fbd50.  if v5 == 0 then goto L4fbdde;
  #L4fbd54.  call temp:= `isEmpty`(v5) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L4fbd5a.  v0:= temp;
  #L4fbd5c.  if v0 != 0 then goto L4fbdce;
  #L4fbd60.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fbd66.  v0:= temp;
  #L4fbd68.  v1:= 0I;
  #L4fbd6a.  v2:= 0I;
  #L4fbd6c.  if v2 >= v0 then goto L4fbdcc;
  #L4fbd70.  call temp:= `charAt`(v5, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4fbd76.  v3:= temp;
  #L4fbd78.  v4:= 32I;
  #L4fbd7c.  if v3 <= v4 then goto L4fbd8e;
  #L4fbd80.  v4:= 127I;
  #L4fbd84.  if v3 >= v4 then goto L4fbd8e;
  #L4fbd88.  v2:= v2 + 1;
  #L4fbd8c.  goto L4fbd6c;
  #L4fbd8e.  v0:= new `java.lang.IllegalArgumentException`;
  #L4fbd92.  v4:= 3I;
  #L4fbd94.  v4:= new `java.lang.Object`[v4];
  #L4fbd98.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4fbd9e.  v3:= temp @kind object;
  #L4fbda0.  v4[v1]:= v3 @kind object;
  #L4fbda4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4fbdaa.  v1:= temp @kind object;
  #L4fbdac.  v2:= 1I;
  #L4fbdae.  v4[v2]:= v1 @kind object;
  #L4fbdb2.  v1:= 2I;
  #L4fbdb4.  v4[v1]:= v5 @kind object;
  #L4fbdb8.  v5:= "Unexpected char %#04x at %d in header name: %s" @kind object;
  #L4fbdbc.  call temp:= `format`(v5, v4) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4fbdc2.  v5:= temp @kind object;
  #L4fbdc4.  call `<init>`(v0, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fbdca.  throw v0;
  #L4fbdcc.  return @kind void;
  #L4fbdce.  v5:= new `java.lang.IllegalArgumentException`;
  #L4fbdd2.  v0:= "name is empty" @kind object;
  #L4fbdd6.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fbddc.  throw v5;
  #L4fbdde.  v5:= new `java.lang.NullPointerException`;
  #L4fbde2.  v0:= "name == null" @kind object;
  #L4fbde6.  call `<init>`(v5, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fbdec.  goto L4fbdf0;
  #L4fbdee.  throw v5;
  #L4fbdf0.  goto L4fbdee;
}
procedure `void` `b`(`java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lokhttp3/Headers;.b:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4fbe04.  if v5 == 0 then goto L4fbe84;
  #L4fbe08.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fbe0e.  v0:= temp;
  #L4fbe10.  v1:= 0I;
  #L4fbe12.  v2:= 0I;
  #L4fbe14.  if v2 >= v0 then goto L4fbe82;
  #L4fbe18.  call temp:= `charAt`(v5, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L4fbe1e.  v3:= temp;
  #L4fbe20.  v4:= 31I;
  #L4fbe24.  if v3 > v4 then goto L4fbe30;
  #L4fbe28.  v4:= 9I;
  #L4fbe2c.  if v3 != v4 then goto L4fbe3e;
  #L4fbe30.  v4:= 127I;
  #L4fbe34.  if v3 >= v4 then goto L4fbe3e;
  #L4fbe38.  v2:= v2 + 1;
  #L4fbe3c.  goto L4fbe14;
  #L4fbe3e.  v0:= new `java.lang.IllegalArgumentException`;
  #L4fbe42.  v4:= 4I;
  #L4fbe44.  v4:= new `java.lang.Object`[v4];
  #L4fbe48.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4fbe4e.  v3:= temp @kind object;
  #L4fbe50.  v4[v1]:= v3 @kind object;
  #L4fbe54.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4fbe5a.  v1:= temp @kind object;
  #L4fbe5c.  v2:= 1I;
  #L4fbe5e.  v4[v2]:= v1 @kind object;
  #L4fbe62.  v1:= 2I;
  #L4fbe64.  v4[v1]:= v6 @kind object;
  #L4fbe68.  v6:= 3I;
  #L4fbe6a.  v4[v6]:= v5 @kind object;
  #L4fbe6e.  v5:= "Unexpected char %#04x at %d in %s value: %s" @kind object;
  #L4fbe72.  call temp:= `format`(v5, v4) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L4fbe78.  v5:= temp @kind object;
  #L4fbe7a.  call `<init>`(v0, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fbe80.  throw v0;
  #L4fbe82.  return @kind void;
  #L4fbe84.  v5:= new `java.lang.NullPointerException`;
  #L4fbe88.  v0:= new `java.lang.StringBuilder`;
  #L4fbe8c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fbe92.  v1:= "value for name " @kind object;
  #L4fbe96.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fbe9c.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fbea2.  v6:= " == null" @kind object;
  #L4fbea6.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fbeac.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fbeb2.  v6:= temp @kind object;
  #L4fbeb4.  call `<init>`(v5, v6) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fbeba.  goto L4fbebe;
  #L4fbebc.  throw v5;
  #L4fbebe.  goto L4fbebc;
}
procedure `java.lang.String` `get`(`java.lang.String`[] v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/Headers;.get:([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L4fb8b0.  v0:= length @variable v2;
  #L4fb8b2.  v0:= v0 + -2;
  #L4fb8b6.  if v0 < 0 then goto L4fb8da;
  #L4fb8ba.  v1:= v2[v0] @kind object;
  #L4fb8be.  call temp:= `equalsIgnoreCase`(v3, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4fb8c4.  v1:= temp;
  #L4fb8c6.  if v1 == 0 then goto L4fb8d4;
  #L4fb8ca.  v0:= v0 + 1;
  #L4fb8ce.  v2:= v2[v0] @kind object;
  #L4fb8d2.  return v2 @kind object;
  #L4fb8d4.  v0:= v0 + -2;
  #L4fb8d8.  goto L4fb8b6;
  #L4fb8da.  v2:= 0I;
  #L4fb8dc.  return v2 @kind object;
}
procedure `okhttp3.Headers` `of`(`java.util.Map` v4 @kind object) @signature `Lokhttp3/Headers;.of:(Ljava/util/Map;)Lokhttp3/Headers;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fbbf4.  if v4 == 0 then goto L4fbcac;
  #L4fbbf8.  call temp:= `size`(v4) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L4fbbfe.  v0:= temp;
  #L4fbc00.  v0:= v0 * 2;
  #L4fbc04.  v0:= new `java.lang.String`[v0];
  #L4fbc08.  v1:= 0I;
  #L4fbc0a.  call temp:= `entrySet`(v4) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L4fbc10.  v4:= temp @kind object;
  #L4fbc12.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4fbc18.  v4:= temp @kind object;
  #L4fbc1a.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4fbc20.  v2:= temp;
  #L4fbc22.  if v2 == 0 then goto L4fbca0;
  #L4fbc26.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4fbc2c.  v2:= temp @kind object;
  #L4fbc2e.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L4fbc32.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L4fbc38.  v3:= temp @kind object;
  #L4fbc3a.  if v3 == 0 then goto L4fbc90;
  #L4fbc3e.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4fbc44.  v3:= temp @kind object;
  #L4fbc46.  if v3 == 0 then goto L4fbc90;
  #L4fbc4a.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L4fbc50.  v3:= temp @kind object;
  #L4fbc52.  v3:= (`java.lang.String`) v3 @kind object;
  #L4fbc56.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L4fbc5c.  v3:= temp @kind object;
  #L4fbc5e.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L4fbc64.  v2:= temp @kind object;
  #L4fbc66.  v2:= (`java.lang.String`) v2 @kind object;
  #L4fbc6a.  call temp:= `trim`(v2) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L4fbc70.  v2:= temp @kind object;
  #L4fbc72.  call `a`(v3) @signature `Lokhttp3/Headers;.a:(Ljava/lang/String;)V` @kind static;
  #L4fbc78.  call `b`(v2, v3) @signature `Lokhttp3/Headers;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L4fbc7e.  v0[v1]:= v3 @kind object;
  #L4fbc82.  v3:= v1 + 1;
  #L4fbc86.  v0[v3]:= v2 @kind object;
  #L4fbc8a.  v1:= v1 + 2;
  #L4fbc8e.  goto L4fbc1a;
  #L4fbc90.  v4:= new `java.lang.IllegalArgumentException`;
  #L4fbc94.  v0:= "Headers cannot be null" @kind object;
  #L4fbc98.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fbc9e.  throw v4;
  #L4fbca0.  v4:= new `okhttp3.Headers`;
  #L4fbca4.  call `<init>`(v4, v0) @signature `Lokhttp3/Headers;.<init>:([Ljava/lang/String;)V` @kind direct;
  #L4fbcaa.  return v4 @kind object;
  #L4fbcac.  v4:= new `java.lang.NullPointerException`;
  #L4fbcb0.  v0:= "headers == null" @kind object;
  #L4fbcb4.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fbcba.  goto L4fbcbe;
  #L4fbcbc.  throw v4;
  #L4fbcbe.  goto L4fbcbc;
}
procedure `okhttp3.Headers` `of`(`java.lang.String`[] v3 @kind object) @signature `Lokhttp3/Headers;.of:([Ljava/lang/String;)Lokhttp3/Headers;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4fbb3c.  if v3 == 0 then goto L4fbbce;
  #L4fbb40.  v0:= length @variable v3;
  #L4fbb42.  v0:= v0 %% 2;
  #L4fbb46.  if v0 != 0 then goto L4fbbbe;
  #L4fbb4a.  call temp:= `clone`(v3) @signature `[Ljava/lang/String;.clone:()Ljava/lang/Object;` @kind virtual;
  #L4fbb50.  v3:= temp @kind object;
  #L4fbb52.  v3:= (`java.lang.String`[]) v3 @kind object;
  #L4fbb56.  v0:= 0I;
  #L4fbb58.  v1:= 0I;
  #L4fbb5a.  v2:= length @variable v3;
  #L4fbb5c.  if v1 >= v2 then goto L4fbb8e;
  #L4fbb60.  v2:= v3[v1] @kind object;
  #L4fbb64.  if v2 == 0 then goto L4fbb7e;
  #L4fbb68.  v2:= v3[v1] @kind object;
  #L4fbb6c.  call temp:= `trim`(v2) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L4fbb72.  v2:= temp @kind object;
  #L4fbb74.  v3[v1]:= v2 @kind object;
  #L4fbb78.  v1:= v1 + 1;
  #L4fbb7c.  goto L4fbb5a;
  #L4fbb7e.  v3:= new `java.lang.IllegalArgumentException`;
  #L4fbb82.  v0:= "Headers cannot be null" @kind object;
  #L4fbb86.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fbb8c.  throw v3;
  #L4fbb8e.  v1:= length @variable v3;
  #L4fbb90.  if v0 >= v1 then goto L4fbbb2;
  #L4fbb94.  v1:= v3[v0] @kind object;
  #L4fbb98.  v2:= v0 + 1;
  #L4fbb9c.  v2:= v3[v2] @kind object;
  #L4fbba0.  call `a`(v1) @signature `Lokhttp3/Headers;.a:(Ljava/lang/String;)V` @kind static;
  #L4fbba6.  call `b`(v2, v1) @signature `Lokhttp3/Headers;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L4fbbac.  v0:= v0 + 2;
  #L4fbbb0.  goto L4fbb8e;
  #L4fbbb2.  v0:= new `okhttp3.Headers`;
  #L4fbbb6.  call `<init>`(v0, v3) @signature `Lokhttp3/Headers;.<init>:([Ljava/lang/String;)V` @kind direct;
  #L4fbbbc.  return v0 @kind object;
  #L4fbbbe.  v3:= new `java.lang.IllegalArgumentException`;
  #L4fbbc2.  v0:= "Expected alternating header names and values" @kind object;
  #L4fbbc6.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fbbcc.  throw v3;
  #L4fbbce.  v3:= new `java.lang.NullPointerException`;
  #L4fbbd2.  v0:= "namesAndValues == null" @kind object;
  #L4fbbd6.  call `<init>`(v3, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4fbbdc.  goto L4fbbe0;
  #L4fbbde.  throw v3;
  #L4fbbe0.  goto L4fbbde;
}
procedure `long` `byteCount`(`okhttp3.Headers` v6 @kind this) @signature `Lokhttp3/Headers;.byteCount:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4fbafc.  v0:= v6.`okhttp3.Headers.namesAndValues` @type ^`java.lang.String`[] @kind object;
  #L4fbb00.  v1:= length @variable v0;
  #L4fbb02.  v1:= v1 * 2;
  #L4fbb06.  v1:= (`long`) v1 @kind i2l;
  #L4fbb08.  v0:= length @variable v0;
  #L4fbb0a.  v3:= 0I;
  #L4fbb0c.  if v3 >= v0 then goto L4fbb2a;
  #L4fbb10.  v4:= v6.`okhttp3.Headers.namesAndValues` @type ^`java.lang.String`[] @kind object;
  #L4fbb14.  v4:= v4[v3] @kind object;
  #L4fbb18.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4fbb1e.  v4:= temp;
  #L4fbb20.  v4:= (`long`) v4 @kind i2l;
  #L4fbb22.  v1:= v1 + v4 @kind long;
  #L4fbb24.  v3:= v3 + 1;
  #L4fbb28.  goto L4fbb0c;
  #L4fbb2a.  return v1 @kind wide;
}
procedure `boolean` `equals`(`okhttp3.Headers` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/Headers;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fb81c.  v0:= instanceof @variable v2 @type ^`okhttp3.Headers` @kind boolean;
  #L4fb820.  if v0 == 0 then goto L4fb840;
  #L4fb824.  v2:= (`okhttp3.Headers`) v2 @kind object;
  #L4fb828.  v2:= v2.`okhttp3.Headers.namesAndValues` @type ^`java.lang.String`[] @kind object;
  #L4fb82c.  v0:= v1.`okhttp3.Headers.namesAndValues` @type ^`java.lang.String`[] @kind object;
  #L4fb830.  call temp:= `equals`(v2, v0) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L4fb836.  v2:= temp;
  #L4fb838.  if v2 == 0 then goto L4fb840;
  #L4fb83c.  v2:= 1I;
  #L4fb83e.  goto L4fb842;
  #L4fb840.  v2:= 0I;
  #L4fb842.  return v2;
}
procedure `java.lang.String` `get`(`okhttp3.Headers` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fb890.  v0:= v1.`okhttp3.Headers.namesAndValues` @type ^`java.lang.String`[] @kind object;
  #L4fb894.  call temp:= `get`(v0, v2) @signature `Lokhttp3/Headers;.get:([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L4fb89a.  v2:= temp @kind object;
  #L4fb89c.  return v2 @kind object;
}
procedure `java.util.Date` `getDate`(`okhttp3.Headers` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lokhttp3/Headers;.getDate:(Ljava/lang/String;)Ljava/util/Date;` @AccessFlag PUBLIC {
    temp;

  #L4fb99c.  call temp:= `get`(v0, v1) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4fb9a2.  v1:= temp @kind object;
  #L4fb9a4.  if v1 == 0 then goto L4fb9b2;
  #L4fb9a8.  call temp:= `parse`(v1) @signature `Lokhttp3/internal/http/HttpDate;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L4fb9ae.  v1:= temp @kind object;
  #L4fb9b0.  goto L4fb9b4;
  #L4fb9b2.  v1:= 0I;
  #L4fb9b4.  return v1 @kind object;
}
procedure `int` `hashCode`(`okhttp3.Headers` v1 @kind this) @signature `Lokhttp3/Headers;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fb854.  v0:= v1.`okhttp3.Headers.namesAndValues` @type ^`java.lang.String`[] @kind object;
  #L4fb858.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L4fb85e.  v0:= temp;
  #L4fb860.  return v0;
}
procedure `java.lang.String` `name`(`okhttp3.Headers` v1 @kind this, `int` v2 ) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fb8f0.  v0:= v1.`okhttp3.Headers.namesAndValues` @type ^`java.lang.String`[] @kind object;
  #L4fb8f4.  v2:= v2 * 2;
  #L4fb8f8.  v2:= v0[v2] @kind object;
  #L4fb8fc.  return v2 @kind object;
}
procedure `java.util.Set` `names`(`okhttp3.Headers` v4 @kind this) @signature `Lokhttp3/Headers;.names:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fbab0.  v0:= new `java.util.TreeSet`;
  #L4fbab4.  v1:= `@@java.lang.String.CASE_INSENSITIVE_ORDER` @type ^`java.util.Comparator` @kind object;
  #L4fbab8.  call `<init>`(v0, v1) @signature `Ljava/util/TreeSet;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L4fbabe.  call temp:= `size`(v4) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L4fbac4.  v1:= temp;
  #L4fbac6.  v2:= 0I;
  #L4fbac8.  if v2 >= v1 then goto L4fbae0;
  #L4fbacc.  call temp:= `name`(v4, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L4fbad2.  v3:= temp @kind object;
  #L4fbad4.  call temp:= `add`(v0, v3) @signature `Ljava/util/TreeSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fbada.  v2:= v2 + 1;
  #L4fbade.  goto L4fbac8;
  #L4fbae0.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L4fbae6.  v0:= temp @kind object;
  #L4fbae8.  return v0 @kind object;
}
procedure `okhttp3.Headers$Builder` `newBuilder`(`okhttp3.Headers` v3 @kind this) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4fbcd0.  v0:= new `okhttp3.Headers$Builder`;
  #L4fbcd4.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L4fbcda.  v1:= v0.`okhttp3.Headers$Builder.a` @type ^`java.util.List` @kind object;
  #L4fbcde.  v2:= v3.`okhttp3.Headers.namesAndValues` @type ^`java.lang.String`[] @kind object;
  #L4fbce2.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/Collections;.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z` @kind static;
  #L4fbce8.  return v0 @kind object;
}
procedure `int` `size`(`okhttp3.Headers` v1 @kind this) @signature `Lokhttp3/Headers;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fb874.  v0:= v1.`okhttp3.Headers.namesAndValues` @type ^`java.lang.String`[] @kind object;
  #L4fb878.  v0:= length @variable v0;
  #L4fb87a.  v0:= v0 / 2;
  #L4fb87e.  return v0;
}
procedure `java.util.Map` `toMultimap`(`okhttp3.Headers` v6 @kind this) @signature `Lokhttp3/Headers;.toMultimap:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4fba38.  v0:= new `java.util.TreeMap`;
  #L4fba3c.  v1:= `@@java.lang.String.CASE_INSENSITIVE_ORDER` @type ^`java.util.Comparator` @kind object;
  #L4fba40.  call `<init>`(v0, v1) @signature `Ljava/util/TreeMap;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L4fba46.  call temp:= `size`(v6) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L4fba4c.  v1:= temp;
  #L4fba4e.  v2:= 0I;
  #L4fba50.  if v2 >= v1 then goto L4fba9e;
  #L4fba54.  call temp:= `name`(v6, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L4fba5a.  v3:= temp @kind object;
  #L4fba5c.  v4:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L4fba60.  call temp:= `toLowerCase`(v3, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L4fba66.  v3:= temp @kind object;
  #L4fba68.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fba6e.  v4:= temp @kind object;
  #L4fba70.  v4:= (`java.util.List`) v4 @kind object;
  #L4fba74.  if v4 != 0 then goto L4fba8a;
  #L4fba78.  v4:= new `java.util.ArrayList`;
  #L4fba7c.  v5:= 2I;
  #L4fba7e.  call `<init>`(v4, v5) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L4fba84.  call temp:= `put`(v0, v3, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4fba8a.  call temp:= `value`(v6, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L4fba90.  v3:= temp @kind object;
  #L4fba92.  call temp:= `add`(v4, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fba98.  v2:= v2 + 1;
  #L4fba9c.  goto L4fba50;
  #L4fba9e.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Headers` v4 @kind this) @signature `Lokhttp3/Headers;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fb910.  v0:= new `java.lang.StringBuilder`;
  #L4fb914.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4fb91a.  call temp:= `size`(v4) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L4fb920.  v1:= temp;
  #L4fb922.  v2:= 0I;
  #L4fb924.  if v2 >= v1 then goto L4fb95e;
  #L4fb928.  call temp:= `name`(v4, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L4fb92e.  v3:= temp @kind object;
  #L4fb930.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fb936.  v3:= ": " @kind object;
  #L4fb93a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fb940.  call temp:= `value`(v4, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L4fb946.  v3:= temp @kind object;
  #L4fb948.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fb94e.  v3:= "\n" @kind object;
  #L4fb952.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4fb958.  v2:= v2 + 1;
  #L4fb95c.  goto L4fb924;
  #L4fb95e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4fb964.  v0:= temp @kind object;
  #L4fb966.  return v0 @kind object;
}
procedure `java.lang.String` `value`(`okhttp3.Headers` v1 @kind this, `int` v2 ) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fb978.  v0:= v1.`okhttp3.Headers.namesAndValues` @type ^`java.lang.String`[] @kind object;
  #L4fb97c.  v2:= v2 * 2;
  #L4fb980.  v2:= v2 + 1;
  #L4fb984.  v2:= v0[v2] @kind object;
  #L4fb988.  return v2 @kind object;
}
procedure `java.util.List` `values`(`okhttp3.Headers` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fb9c8.  call temp:= `size`(v4) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L4fb9ce.  v0:= temp;
  #L4fb9d0.  v1:= 0I;
  #L4fb9d2.  v2:= 0I;
  #L4fb9d4.  if v2 >= v0 then goto L4fba10;
  #L4fb9d8.  call temp:= `name`(v4, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L4fb9de.  v3:= temp @kind object;
  #L4fb9e0.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4fb9e6.  v3:= temp;
  #L4fb9e8.  if v3 == 0 then goto L4fba0a;
  #L4fb9ec.  if v1 != 0 then goto L4fb9fc;
  #L4fb9f0.  v1:= new `java.util.ArrayList`;
  #L4fb9f4.  v3:= 2I;
  #L4fb9f6.  call `<init>`(v1, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L4fb9fc.  call temp:= `value`(v4, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L4fba02.  v3:= temp @kind object;
  #L4fba04.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fba0a.  v2:= v2 + 1;
  #L4fba0e.  goto L4fb9d4;
  #L4fba10.  if v1 == 0 then goto L4fba1e;
  #L4fba14.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L4fba1a.  v5:= temp @kind object;
  #L4fba1c.  goto L4fba26;
  #L4fba1e.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L4fba24.  v5:= temp @kind object;
  #L4fba26.  return v5 @kind object;
}
