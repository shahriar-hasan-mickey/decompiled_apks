record `okhttp3.Request` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.HttpUrl` `okhttp3.Request.a` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.Request.b` @AccessFlag FINAL;
  `okhttp3.Headers` `okhttp3.Request.c` @AccessFlag FINAL;
  `okhttp3.CacheControl` `okhttp3.Request.cacheControl` @AccessFlag PRIVATE_VOLATILE;
  `okhttp3.RequestBody` `okhttp3.Request.d` @AccessFlag FINAL;
  `java.util.Map` `okhttp3.Request.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Request` v1 @kind this, `okhttp3.Request$Builder` v2 @kind object) @signature `Lokhttp3/Request;.<init>:(Lokhttp3/Request$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L500c30.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L500c36.  v0:= v2.`okhttp3.Request$Builder.a` @type ^`okhttp3.HttpUrl` @kind object;
  #L500c3a.  v1.`okhttp3.Request.a` @type ^`okhttp3.HttpUrl` := v0 @kind object;
  #L500c3e.  v0:= v2.`okhttp3.Request$Builder.b` @type ^`java.lang.String` @kind object;
  #L500c42.  v1.`okhttp3.Request.b` @type ^`java.lang.String` := v0 @kind object;
  #L500c46.  v0:= v2.`okhttp3.Request$Builder.c` @type ^`okhttp3.Headers$Builder` @kind object;
  #L500c4a.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L500c50.  v0:= temp @kind object;
  #L500c52.  v1.`okhttp3.Request.c` @type ^`okhttp3.Headers` := v0 @kind object;
  #L500c56.  v0:= v2.`okhttp3.Request$Builder.d` @type ^`okhttp3.RequestBody` @kind object;
  #L500c5a.  v1.`okhttp3.Request.d` @type ^`okhttp3.RequestBody` := v0 @kind object;
  #L500c5e.  v2:= v2.`okhttp3.Request$Builder.e` @type ^`java.util.Map` @kind object;
  #L500c62.  call temp:= `immutableMap`(v2) @signature `Lokhttp3/internal/Util;.immutableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L500c68.  v2:= temp @kind object;
  #L500c6a.  v1.`okhttp3.Request.e` @type ^`java.util.Map` := v2 @kind object;
  #L500c6e.  return @kind void;
}
procedure `okhttp3.RequestBody` `body`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L500c18.  v0:= v1.`okhttp3.Request.d` @type ^`okhttp3.RequestBody` @kind object;
  #L500c1c.  return v0 @kind object;
}
procedure `okhttp3.CacheControl` `cacheControl`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L500ba0.  v0:= v1.`okhttp3.Request.cacheControl` @type ^`okhttp3.CacheControl` @kind object;
  #L500ba4.  if v0 == 0 then goto L500baa;
  #L500ba8.  goto L500bba;
  #L500baa.  v0:= v1.`okhttp3.Request.c` @type ^`okhttp3.Headers` @kind object;
  #L500bae.  call temp:= `parse`(v0) @signature `Lokhttp3/CacheControl;.parse:(Lokhttp3/Headers;)Lokhttp3/CacheControl;` @kind static;
  #L500bb4.  v0:= temp @kind object;
  #L500bb6.  v1.`okhttp3.Request.cacheControl` @type ^`okhttp3.CacheControl` := v0 @kind object;
  #L500bba.  return v0 @kind object;
}
procedure `java.lang.String` `header`(`okhttp3.Request` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L500adc.  v0:= v1.`okhttp3.Request.c` @type ^`okhttp3.Headers` @kind object;
  #L500ae0.  call temp:= `get`(v0, v2) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L500ae6.  v2:= temp @kind object;
  #L500ae8.  return v2 @kind object;
}
procedure `java.util.List` `headers`(`okhttp3.Request` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/Request;.headers:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L500b80.  v0:= v1.`okhttp3.Request.c` @type ^`okhttp3.Headers` @kind object;
  #L500b84.  call temp:= `values`(v0, v2) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L500b8a.  v2:= temp @kind object;
  #L500b8c.  return v2 @kind object;
}
procedure `okhttp3.Headers` `headers`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L500bcc.  v0:= v1.`okhttp3.Request.c` @type ^`okhttp3.Headers` @kind object;
  #L500bd0.  return v0 @kind object;
}
procedure `boolean` `isHttps`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.isHttps:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L500a74.  v0:= v1.`okhttp3.Request.a` @type ^`okhttp3.HttpUrl` @kind object;
  #L500a78.  call temp:= `isHttps`(v0) @signature `Lokhttp3/HttpUrl;.isHttps:()Z` @kind virtual;
  #L500a7e.  v0:= temp;
  #L500a80.  return v0;
}
procedure `java.lang.String` `method`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L500afc.  v0:= v1.`okhttp3.Request.b` @type ^`java.lang.String` @kind object;
  #L500b00.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `newBuilder`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L500bfc.  v0:= new `okhttp3.Request$Builder`;
  #L500c00.  call `<init>`(v0, v1) @signature `Lokhttp3/Request$Builder;.<init>:(Lokhttp3/Request;)V` @kind direct;
  #L500c06.  return v0 @kind object;
}
procedure `java.lang.Object` `tag`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.tag:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L500a94.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L500a98.  call temp:= `tag`(v1, v0) @signature `Lokhttp3/Request;.tag:(Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L500a9e.  v0:= temp @kind object;
  #L500aa0.  return v0 @kind object;
}
procedure `java.lang.Object` `tag`(`okhttp3.Request` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lokhttp3/Request;.tag:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L500ab4.  v0:= v1.`okhttp3.Request.e` @type ^`java.util.Map` @kind object;
  #L500ab8.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L500abe.  v0:= temp @kind object;
  #L500ac0.  call temp:= `cast`(v2, v0) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L500ac6.  v2:= temp @kind object;
  #L500ac8.  return v2 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Request` v2 @kind this) @signature `Lokhttp3/Request;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L500b14.  v0:= new `java.lang.StringBuilder`;
  #L500b18.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L500b1e.  v1:= "Request{method=" @kind object;
  #L500b22.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L500b28.  v1:= v2.`okhttp3.Request.b` @type ^`java.lang.String` @kind object;
  #L500b2c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L500b32.  v1:= ", url=" @kind object;
  #L500b36.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L500b3c.  v1:= v2.`okhttp3.Request.a` @type ^`okhttp3.HttpUrl` @kind object;
  #L500b40.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L500b46.  v1:= ", tags=" @kind object;
  #L500b4a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L500b50.  v1:= v2.`okhttp3.Request.e` @type ^`java.util.Map` @kind object;
  #L500b54.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L500b5a.  v1:= 125I;
  #L500b5e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L500b64.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L500b6a.  v0:= temp @kind object;
  #L500b6c.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `url`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L500be4.  v0:= v1.`okhttp3.Request.a` @type ^`okhttp3.HttpUrl` @kind object;
  #L500be8.  return v0 @kind object;
}
