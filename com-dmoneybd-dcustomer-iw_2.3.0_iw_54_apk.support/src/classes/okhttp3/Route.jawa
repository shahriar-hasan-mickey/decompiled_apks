record `okhttp3.Route` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.Address` `okhttp3.Route.a` @AccessFlag FINAL;
  `java.net.Proxy` `okhttp3.Route.b` @AccessFlag FINAL;
  `java.net.InetSocketAddress` `okhttp3.Route.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Route` v0 @kind this, `okhttp3.Address` v1 @kind object, `java.net.Proxy` v2 @kind object, `java.net.InetSocketAddress` v3 @kind object) @signature `Lokhttp3/Route;.<init>:(Lokhttp3/Address;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L501a68.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L501a6e.  if v1 == 0 then goto L501aa8;
  #L501a72.  if v2 == 0 then goto L501a98;
  #L501a76.  if v3 == 0 then goto L501a88;
  #L501a7a.  v0.`okhttp3.Route.a` @type ^`okhttp3.Address` := v1 @kind object;
  #L501a7e.  v0.`okhttp3.Route.b` @type ^`java.net.Proxy` := v2 @kind object;
  #L501a82.  v0.`okhttp3.Route.c` @type ^`java.net.InetSocketAddress` := v3 @kind object;
  #L501a86.  return @kind void;
  #L501a88.  v1:= new `java.lang.NullPointerException`;
  #L501a8c.  v2:= "inetSocketAddress == null" @kind object;
  #L501a90.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L501a96.  throw v1;
  #L501a98.  v1:= new `java.lang.NullPointerException`;
  #L501a9c.  v2:= "proxy == null" @kind object;
  #L501aa0.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L501aa6.  throw v1;
  #L501aa8.  v1:= new `java.lang.NullPointerException`;
  #L501aac.  v2:= "address == null" @kind object;
  #L501ab0.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L501ab6.  throw v1;
}
procedure `okhttp3.Address` `address`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L501a50.  v0:= v1.`okhttp3.Route.a` @type ^`okhttp3.Address` @kind object;
  #L501a54.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.Route` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/Route;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5018fc.  v0:= instanceof @variable v3 @type ^`okhttp3.Route` @kind boolean;
  #L501900.  if v0 == 0 then goto L501948;
  #L501904.  v3:= (`okhttp3.Route`) v3 @kind object;
  #L501908.  v0:= v3.`okhttp3.Route.a` @type ^`okhttp3.Address` @kind object;
  #L50190c.  v1:= v2.`okhttp3.Route.a` @type ^`okhttp3.Address` @kind object;
  #L501910.  call temp:= `equals`(v0, v1) @signature `Lokhttp3/Address;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L501916.  v0:= temp;
  #L501918.  if v0 == 0 then goto L501948;
  #L50191c.  v0:= v3.`okhttp3.Route.b` @type ^`java.net.Proxy` @kind object;
  #L501920.  v1:= v2.`okhttp3.Route.b` @type ^`java.net.Proxy` @kind object;
  #L501924.  call temp:= `equals`(v0, v1) @signature `Ljava/net/Proxy;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L50192a.  v0:= temp;
  #L50192c.  if v0 == 0 then goto L501948;
  #L501930.  v3:= v3.`okhttp3.Route.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L501934.  v0:= v2.`okhttp3.Route.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L501938.  call temp:= `equals`(v3, v0) @signature `Ljava/net/InetSocketAddress;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L50193e.  v3:= temp;
  #L501940.  if v3 == 0 then goto L501948;
  #L501944.  v3:= 1I;
  #L501946.  goto L50194a;
  #L501948.  v3:= 0I;
  #L50194a.  return v3;
}
procedure `int` `hashCode`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L501994.  v0:= v2.`okhttp3.Route.a` @type ^`okhttp3.Address` @kind object;
  #L501998.  call temp:= `hashCode`(v0) @signature `Lokhttp3/Address;.hashCode:()I` @kind virtual;
  #L50199e.  v0:= temp;
  #L5019a0.  v1:= 527I;
  #L5019a4.  v1:= v1 + v0 @kind int;
  #L5019a6.  v1:= v1 * 31;
  #L5019aa.  v0:= v2.`okhttp3.Route.b` @type ^`java.net.Proxy` @kind object;
  #L5019ae.  call temp:= `hashCode`(v0) @signature `Ljava/net/Proxy;.hashCode:()I` @kind virtual;
  #L5019b4.  v0:= temp;
  #L5019b6.  v1:= v1 + v0 @kind int;
  #L5019b8.  v1:= v1 * 31;
  #L5019bc.  v0:= v2.`okhttp3.Route.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L5019c0.  call temp:= `hashCode`(v0) @signature `Ljava/net/InetSocketAddress;.hashCode:()I` @kind virtual;
  #L5019c6.  v0:= temp;
  #L5019c8.  v1:= v1 + v0 @kind int;
  #L5019ca.  return v1;
}
procedure `java.net.Proxy` `proxy`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L501a38.  v0:= v1.`okhttp3.Route.b` @type ^`java.net.Proxy` @kind object;
  #L501a3c.  return v0 @kind object;
}
procedure `boolean` `requiresTunnel`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.requiresTunnel:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50195c.  v0:= v2.`okhttp3.Route.a` @type ^`okhttp3.Address` @kind object;
  #L501960.  v0:= v0.`okhttp3.Address.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L501964.  if v0 == 0 then goto L501980;
  #L501968.  v0:= v2.`okhttp3.Route.b` @type ^`java.net.Proxy` @kind object;
  #L50196c.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L501972.  v0:= temp @kind object;
  #L501974.  v1:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L501978.  if v0 != v1 then goto L501980;
  #L50197c.  v0:= 1I;
  #L50197e.  goto L501982;
  #L501980.  v0:= 0I;
  #L501982.  return v0;
}
procedure `java.net.InetSocketAddress` `socketAddress`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L501a20.  v0:= v1.`okhttp3.Route.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L501a24.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5019dc.  v0:= new `java.lang.StringBuilder`;
  #L5019e0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L5019e6.  v1:= "Route{" @kind object;
  #L5019ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5019f0.  v1:= v2.`okhttp3.Route.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L5019f4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5019fa.  v1:= "}" @kind object;
  #L5019fe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L501a04.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L501a0a.  v0:= temp @kind object;
  #L501a0c.  return v0 @kind object;
}
