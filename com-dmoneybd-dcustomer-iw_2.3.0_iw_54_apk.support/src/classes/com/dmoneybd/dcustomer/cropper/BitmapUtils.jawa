record `com.dmoneybd.dcustomer.cropper.BitmapUtils` @kind class @AccessFlag FINAL {
}
global `android.graphics.Rect` `@@com.dmoneybd.dcustomer.cropper.BitmapUtils.a` @AccessFlag STATIC_FINAL;
global `android.graphics.RectF` `@@com.dmoneybd.dcustomer.cropper.BitmapUtils.b` @AccessFlag STATIC_FINAL;
global `android.graphics.RectF` `@@com.dmoneybd.dcustomer.cropper.BitmapUtils.c` @AccessFlag STATIC_FINAL;
global `float`[] `@@com.dmoneybd.dcustomer.cropper.BitmapUtils.d` @AccessFlag STATIC_FINAL;
global `float`[] `@@com.dmoneybd.dcustomer.cropper.BitmapUtils.e` @AccessFlag STATIC_FINAL;
global `android.util.Pair` `@@com.dmoneybd.dcustomer.cropper.BitmapUtils.f` @AccessFlag STATIC;
global `int` `@@com.dmoneybd.dcustomer.cropper.BitmapUtils.mMaxTextureSize` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2dea2c.  v0:= new `android.graphics.Rect`;
  #L2dea30.  call `<init>`(v0) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L2dea36.  `@@com.dmoneybd.dcustomer.cropper.BitmapUtils.a` @type ^`android.graphics.Rect` := v0 @kind object;
  #L2dea3a.  v0:= new `android.graphics.RectF`;
  #L2dea3e.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L2dea44.  `@@com.dmoneybd.dcustomer.cropper.BitmapUtils.b` @type ^`android.graphics.RectF` := v0 @kind object;
  #L2dea48.  v0:= new `android.graphics.RectF`;
  #L2dea4c.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L2dea52.  `@@com.dmoneybd.dcustomer.cropper.BitmapUtils.c` @type ^`android.graphics.RectF` := v0 @kind object;
  #L2dea56.  v0:= 6I;
  #L2dea58.  v1:= new `float`[v0];
  #L2dea5c.  `@@com.dmoneybd.dcustomer.cropper.BitmapUtils.d` @type ^`float`[] := v1 @kind object;
  #L2dea60.  v0:= new `float`[v0];
  #L2dea64.  `@@com.dmoneybd.dcustomer.cropper.BitmapUtils.e` @type ^`float`[] := v0 @kind object;
  #L2dea68.  return @kind void;
}
procedure `void` `<init>`(`com.dmoneybd.dcustomer.cropper.BitmapUtils` v0 @kind this) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2dea7c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2dea82.  return @kind void;
}
procedure `com.dmoneybd.dcustomer.cropper.BitmapUtils$BitmapSampled` `a`(`android.content.Context` v16 @kind object, `android.net.Uri` v17 @kind object, `float`[] v18 @kind object, `int` v19 , `int` v20 , `int` v21 , `boolean` v22 , `int` v23 , `int` v24 , `int` v25 , `int` v26 , `boolean` v27 , `boolean` v28 ) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.a:(Landroid/content/Context;Landroid/net/Uri;[FIIIZIIIIZZ)Lcom/dmoneybd/dcustomer/cropper/BitmapUtils$BitmapSampled;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L2de1dc.  v0:= 1I;
  #L2de1de.  v15:= 1I;
  #L2de1e0.  v1:= v16 @kind object;
  #L2de1e4.  v2:= v17 @kind object;
  #L2de1e8.  v3:= v18 @kind object;
  #L2de1ec.  v4:= v19;
  #L2de1f0.  v5:= v20;
  #L2de1f4.  v6:= v21;
  #L2de1f8.  v7:= v22;
  #L2de1fc.  v8:= v23;
  #L2de200.  v9:= v24;
  #L2de204.  v10:= v25;
  #L2de208.  v11:= v26;
  #L2de20c.  v12:= v27;
  #L2de210.  v13:= v28;
  #L2de214.  v14:= v15;
  #L2de216.  call temp:= `cropBitmap`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.cropBitmap:(Landroid/content/Context;Landroid/net/Uri;[FIIIZIIIIZZI)Lcom/dmoneybd/dcustomer/cropper/BitmapUtils$BitmapSampled;` @kind static;
  #L2de21c.  v0:= temp @kind object;
  #L2de21e.  return v0 @kind object;
  #L2de220.  v0:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L2de222.  v1:= v0 @kind object;
  #L2de224.  v15:= v15 * 2;
  #L2de228.  v0:= 16I;
  #L2de22c.  if v15 > v0 then goto L2de232;
  #L2de230.  goto L2de1e0;
  #L2de232.  v0:= new `java.lang.RuntimeException`;
  #L2de236.  v2:= new `java.lang.StringBuilder`;
  #L2de23a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2de240.  v3:= "Failed to handle OOM by sampling (" @kind object;
  #L2de244.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2de24a.  call temp:= `append`(v2, v15) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2de250.  v3:= "): " @kind object;
  #L2de254.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2de25a.  v3:= v17 @kind object;
  #L2de25e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2de264.  v3:= "\r\n" @kind object;
  #L2de268.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2de26e.  call temp:= `getMessage`(v1) @signature `Ljava/lang/OutOfMemoryError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2de274.  v3:= temp @kind object;
  #L2de276.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2de27c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2de282.  v2:= temp @kind object;
  #L2de284.  call `<init>`(v0, v2, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L2de28a.  goto L2de28e;
  #L2de28c.  throw v0;
  #L2de28e.  goto L2de28c;
  catch `java.lang.OutOfMemoryError` @[L2de216..L2de21e] goto L2de220;
}
procedure `com.dmoneybd.dcustomer.cropper.BitmapUtils$BitmapSampled` `b`(`android.graphics.Bitmap` v12 @kind object, `float`[] v13 @kind object, `int` v14 , `boolean` v15 , `int` v16 , `int` v17 , `boolean` v18 , `boolean` v19 ) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.b:(Landroid/graphics/Bitmap;[FIZIIZZ)Lcom/dmoneybd/dcustomer/cropper/BitmapUtils$BitmapSampled;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L2de3e4.  v0:= 1I;
  #L2de3e6.  v1:= 1I;
  #L2de3e8.  v0:= 1.0F;
  #L2de3ec.  v2:= (`float`) v1 @kind i2f;
  #L2de3ee.  v9:= v0 / v2 @kind float;
  #L2de3f2.  v3:= v12 @kind object;
  #L2de3f4.  v4:= v13 @kind object;
  #L2de3f6.  v5:= v14;
  #L2de3f8.  v6:= v15;
  #L2de3fa.  v7:= v16;
  #L2de3fe.  v8:= v17;
  #L2de402.  v10:= v18;
  #L2de406.  v11:= v19;
  #L2de40a.  call temp:= `cropBitmapObjectWithScale`(v3, v4, v5, v6, v7, v8, v9, v10, v11) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.cropBitmapObjectWithScale:(Landroid/graphics/Bitmap;[FIZIIFZZ)Landroid/graphics/Bitmap;` @kind static;
  #L2de410.  v0:= temp @kind object;
  #L2de412.  v2:= new `com.dmoneybd.dcustomer.cropper.BitmapUtils$BitmapSampled`;
  #L2de416.  call `<init>`(v2, v0, v1) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils$BitmapSampled;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L2de41c.  return v2 @kind object;
  #L2de41e.  v0:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L2de420.  v1:= v1 * 2;
  #L2de424.  v2:= 8I;
  #L2de428.  if v1 > v2 then goto L2de42e;
  #L2de42c.  goto L2de3e8;
  #L2de42e.  goto L2de432;
  #L2de430.  throw v0;
  #L2de432.  goto L2de430;
  catch `java.lang.OutOfMemoryError` @[L2de40a..L2de41c] goto L2de41e;
}
procedure `com.dmoneybd.dcustomer.cropper.BitmapUtils$BitmapSampled` `c`(`android.content.Context` v3 @kind object, `android.net.Uri` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.c:(Landroid/content/Context;Landroid/net/Uri;II)Lcom/dmoneybd/dcustomer/cropper/BitmapUtils$BitmapSampled;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2de454.  call temp:= `getContentResolver`(v3) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L2de45a.  v3:= temp @kind object;
  #L2de45c.  call temp:= `decodeImageForOption`(v3, v4) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.decodeImageForOption:(Landroid/content/ContentResolver;Landroid/net/Uri;)Landroid/graphics/BitmapFactory$Options;` @kind static;
  #L2de462.  v0:= temp @kind object;
  #L2de464.  v1:= v0.`android.graphics.BitmapFactory$Options.outWidth` @type ^`int`;
  #L2de468.  v2:= v0.`android.graphics.BitmapFactory$Options.outHeight` @type ^`int`;
  #L2de46c.  call temp:= `calculateInSampleSizeByReqestedSize`(v1, v2, v5, v6) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.calculateInSampleSizeByReqestedSize:(IIII)I` @kind static;
  #L2de472.  v5:= temp;
  #L2de474.  v6:= v0.`android.graphics.BitmapFactory$Options.outWidth` @type ^`int`;
  #L2de478.  v1:= v0.`android.graphics.BitmapFactory$Options.outHeight` @type ^`int`;
  #L2de47c.  call temp:= `calculateInSampleSizeByMaxTextureSize`(v6, v1) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.calculateInSampleSizeByMaxTextureSize:(II)I` @kind static;
  #L2de482.  v6:= temp;
  #L2de484.  call temp:= `max`(v5, v6) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L2de48a.  v5:= temp;
  #L2de48c.  v0.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v5;
  #L2de490.  call temp:= `decodeImage`(v3, v4, v0) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.decodeImage:(Landroid/content/ContentResolver;Landroid/net/Uri;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L2de496.  v3:= temp @kind object;
  #L2de498.  v5:= new `com.dmoneybd.dcustomer.cropper.BitmapUtils$BitmapSampled`;
  #L2de49c.  v6:= v0.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int`;
  #L2de4a0.  call `<init>`(v5, v3, v6) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils$BitmapSampled;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L2de4a6.  return v5 @kind object;
  #L2de4a8.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L2de4aa.  v5:= new `java.lang.RuntimeException`;
  #L2de4ae.  v6:= new `java.lang.StringBuilder`;
  #L2de4b2.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2de4b8.  v0:= "Failed to load sampled bitmap: " @kind object;
  #L2de4bc.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2de4c2.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2de4c8.  v4:= "\r\n" @kind object;
  #L2de4cc.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2de4d2.  call temp:= `getMessage`(v3) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2de4d8.  v4:= temp @kind object;
  #L2de4da.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2de4e0.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2de4e6.  v4:= temp @kind object;
  #L2de4e8.  call `<init>`(v5, v4, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L2de4ee.  throw v5;
  catch `java.lang.Exception` @[L2de454..L2de4a6] goto L2de4a8;
}
procedure `int` `calculateInSampleSizeByMaxTextureSize`(`int` v3 , `int` v4 ) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.calculateInSampleSizeByMaxTextureSize:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2de8fc.  v0:= `@@com.dmoneybd.dcustomer.cropper.BitmapUtils.mMaxTextureSize` @type ^`int`;
  #L2de900.  if v0 != 0 then goto L2de910;
  #L2de904.  call temp:= `getMaxTextureSize`() @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.getMaxTextureSize:()I` @kind static;
  #L2de90a.  v0:= temp;
  #L2de90c.  `@@com.dmoneybd.dcustomer.cropper.BitmapUtils.mMaxTextureSize` @type ^`int` := v0;
  #L2de910.  v0:= `@@com.dmoneybd.dcustomer.cropper.BitmapUtils.mMaxTextureSize` @type ^`int`;
  #L2de914.  v1:= 1I;
  #L2de916.  if v0 <= 0 then goto L2de934;
  #L2de91a.  v0:= v4 / v1 @kind int;
  #L2de91e.  v2:= `@@com.dmoneybd.dcustomer.cropper.BitmapUtils.mMaxTextureSize` @type ^`int`;
  #L2de922.  if v0 > v2 then goto L2de92e;
  #L2de926.  v0:= v3 / v1 @kind int;
  #L2de92a.  if v0 <= v2 then goto L2de934;
  #L2de92e.  v1:= v1 * 2;
  #L2de932.  goto L2de91a;
  #L2de934.  return v1;
}
procedure `int` `calculateInSampleSizeByReqestedSize`(`int` v2 , `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.calculateInSampleSizeByReqestedSize:(IIII)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2de948.  v0:= 1I;
  #L2de94a.  if v3 > v5 then goto L2de952;
  #L2de94e.  if v2 <= v4 then goto L2de96c;
  #L2de952.  v1:= v3 / 2;
  #L2de956.  v1:= v1 / v0 @kind int;
  #L2de958.  if v1 <= v5 then goto L2de96c;
  #L2de95c.  v1:= v2 / 2;
  #L2de960.  v1:= v1 / v0 @kind int;
  #L2de962.  if v1 <= v4 then goto L2de96c;
  #L2de966.  v0:= v0 * 2;
  #L2de96a.  goto L2de952;
  #L2de96c.  return v0;
}
procedure `void` `closeSafe`(`java.io.Closeable` v0 @kind object) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.closeSafe:(Ljava/io/Closeable;)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L2dea94.  if v0 == 0 then goto L2dea9e;
  #L2dea98.  call `close`(v0) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #L2dea9e.  return @kind void;
  catch `java.io.IOException` @[L2dea98..L2dea9e] goto L2dea9e;
}
procedure `com.dmoneybd.dcustomer.cropper.BitmapUtils$BitmapSampled` `cropBitmap`(`android.content.Context` v14 @kind object, `android.net.Uri` v15 @kind object, `float`[] v16 @kind object, `int` v17 , `int` v18 , `int` v19 , `boolean` v20 , `int` v21 , `int` v22 , `int` v23 , `int` v24 , `boolean` v25 , `boolean` v26 , `int` v27 ) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.cropBitmap:(Landroid/content/Context;Landroid/net/Uri;[FIIIZIIIIZZI)Lcom/dmoneybd/dcustomer/cropper/BitmapUtils$BitmapSampled;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L2de2b0.  v0:= v17;
  #L2de2b4.  v1:= v16 @kind object;
  #L2de2b8.  v2:= v18;
  #L2de2bc.  v3:= v19;
  #L2de2c0.  v4:= v20;
  #L2de2c4.  v5:= v21;
  #L2de2c8.  v6:= v22;
  #L2de2cc.  call temp:= `g`(v1, v2, v3, v4, v5, v6) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.g:([FIIZII)Landroid/graphics/Rect;` @kind static;
  #L2de2d2.  v9:= temp @kind object;
  #L2de2d4.  if v23 <= 0 then goto L2de2de;
  #L2de2d8.  v10:= v23;
  #L2de2dc.  goto L2de2e8;
  #L2de2de.  call temp:= `width`(v9) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L2de2e4.  v1:= temp;
  #L2de2e6.  v10:= v1;
  #L2de2e8.  if v24 <= 0 then goto L2de2f2;
  #L2de2ec.  v11:= v24;
  #L2de2f0.  goto L2de2fc;
  #L2de2f2.  call temp:= `height`(v9) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L2de2f8.  v1:= temp;
  #L2de2fa.  v11:= v1;
  #L2de2fc.  v1:= 0I;
  #L2de2fe.  v8:= 1I;
  #L2de300.  v2:= v14 @kind object;
  #L2de302.  v3:= v15 @kind object;
  #L2de304.  v4:= v9 @kind object;
  #L2de306.  v5:= v10;
  #L2de308.  v6:= v11;
  #L2de30a.  v7:= v27;
  #L2de30e.  call temp:= `decodeSampledBitmapRegion`(v2, v3, v4, v5, v6, v7) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.decodeSampledBitmapRegion:(Landroid/content/Context;Landroid/net/Uri;Landroid/graphics/Rect;III)Lcom/dmoneybd/dcustomer/cropper/BitmapUtils$BitmapSampled;` @kind static;
  #L2de314.  v2:= temp @kind object;
  #L2de316.  v1:= v2.`com.dmoneybd.dcustomer.cropper.BitmapUtils$BitmapSampled.bitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L2de31a.  v8:= v2.`com.dmoneybd.dcustomer.cropper.BitmapUtils$BitmapSampled.a` @type ^`int`;
  #L2de31e.  goto L2de322;
  #L2de320.  
  #L2de322.  if v1 == 0 then goto L2de37e;
  #L2de326.  v12:= v25;
  #L2de32a.  v13:= v26;
  #L2de32e.  call temp:= `rotateAndFlipBitmapInt`(v1, v0, v12, v13) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.rotateAndFlipBitmapInt:(Landroid/graphics/Bitmap;IZZ)Landroid/graphics/Bitmap;` @kind static;
  #L2de334.  v10:= temp @kind object;
  #L2de336.  v1:= v0 %% 90;
  #L2de33a.  if v1 == 0 then goto L2de35e;
  #L2de33e.  v1:= v10 @kind object;
  #L2de340.  v2:= v16 @kind object;
  #L2de344.  v3:= v9 @kind object;
  #L2de346.  v4:= v17;
  #L2de34a.  v5:= v20;
  #L2de34e.  v6:= v21;
  #L2de352.  v7:= v22;
  #L2de356.  call temp:= `cropForRotatedImage`(v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.cropForRotatedImage:(Landroid/graphics/Bitmap;[FLandroid/graphics/Rect;IZII)Landroid/graphics/Bitmap;` @kind static;
  #L2de35c.  v10:= temp @kind object;
  #L2de35e.  v0:= new `com.dmoneybd.dcustomer.cropper.BitmapUtils$BitmapSampled`;
  #L2de362.  call `<init>`(v0, v10, v8) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils$BitmapSampled;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L2de368.  return v0 @kind object;
  #L2de36a.  v0:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L2de36c.  v1:= v10 @kind object;
  #L2de36e.  goto L2de372;
  #L2de370.  v0:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L2de372.  if v1 == 0 then goto L2de37c;
  #L2de376.  call `recycle`(v1) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L2de37c.  throw v0;
  #L2de37e.  v12:= v25;
  #L2de382.  v13:= v26;
  #L2de386.  v1:= v14 @kind object;
  #L2de388.  v2:= v15 @kind object;
  #L2de38a.  v3:= v16 @kind object;
  #L2de38e.  v4:= v17;
  #L2de392.  v5:= v20;
  #L2de396.  v6:= v21;
  #L2de39a.  v7:= v22;
  #L2de39e.  v8:= v27;
  #L2de3a2.  call temp:= `cropBitmap`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.cropBitmap:(Landroid/content/Context;Landroid/net/Uri;[FIZIIILandroid/graphics/Rect;IIZZ)Lcom/dmoneybd/dcustomer/cropper/BitmapUtils$BitmapSampled;` @kind static;
  #L2de3a8.  v0:= temp @kind object;
  #L2de3aa.  return v0 @kind object;
  catch `java.lang.Exception` @[L2de30e..L2de31e] goto L2de320;
  catch `java.lang.OutOfMemoryError` @[L2de32e..L2de336] goto L2de370;
  catch `java.lang.OutOfMemoryError` @[L2de336..L2de35e] goto L2de36a;
}
procedure `com.dmoneybd.dcustomer.cropper.BitmapUtils$BitmapSampled` `cropBitmap`(`android.content.Context` v15 @kind object, `android.net.Uri` v16 @kind object, `float`[] v17 @kind object, `int` v18 , `boolean` v19 , `int` v20 , `int` v21 , `int` v22 , `android.graphics.Rect` v23 @kind object, `int` v24 , `int` v25 , `boolean` v26 , `boolean` v27 ) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.cropBitmap:(Landroid/content/Context;Landroid/net/Uri;[FIZIIILandroid/graphics/Rect;IIZZ)Lcom/dmoneybd/dcustomer/cropper/BitmapUtils$BitmapSampled;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L2de08c.  v1:= v16 @kind object;
  #L2de090.  v0:= v17 @kind object;
  #L2de094.  v2:= 0I;
  #L2de096.  v3:= new `android.graphics.BitmapFactory$Options`;
  #L2de09a.  call `<init>`(v3) @signature `Landroid/graphics/BitmapFactory$Options;.<init>:()V` @kind direct;
  #L2de0a0.  call temp:= `width`(v23) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L2de0a6.  v4:= temp;
  #L2de0a8.  call temp:= `height`(v23) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L2de0ae.  v5:= temp;
  #L2de0b0.  v6:= v24;
  #L2de0b4.  v7:= v25;
  #L2de0b8.  call temp:= `calculateInSampleSizeByReqestedSize`(v4, v5, v6, v7) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.calculateInSampleSizeByReqestedSize:(IIII)I` @kind static;
  #L2de0be.  v4:= temp;
  #L2de0c0.  v4:= v4 * v22 @kind int;
  #L2de0c4.  v3.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v4;
  #L2de0c8.  call temp:= `getContentResolver`(v15) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L2de0ce.  v5:= temp @kind object;
  #L2de0d0.  call temp:= `decodeImage`(v5, v1, v3) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.decodeImage:(Landroid/content/ContentResolver;Landroid/net/Uri;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L2de0d6.  v5:= temp @kind object;
  #L2de0d8.  if v5 == 0 then goto L2de142;
  #L2de0dc.  v6:= length @variable v0;
  #L2de0de.  v7:= new `float`[v6];
  #L2de0e2.  v8:= length @variable v0;
  #L2de0e4.  v9:= 0I;
  #L2de0e6.  call `arraycopy`(v0, v9, v7, v9, v8) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2de0ec.  if v9 >= v6 then goto L2de106;
  #L2de0f0.  v0:= v7[v9];
  #L2de0f4.  v8:= v3.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int`;
  #L2de0f8.  v8:= (`float`) v8 @kind i2f;
  #L2de0fa.  v0:= v0 / v8 @kind float;
  #L2de0fc.  v7[v9]:= v0;
  #L2de100.  v9:= v9 + 1;
  #L2de104.  goto L2de0ec;
  #L2de106.  v12:= 1.0F;
  #L2de10a.  v6:= v5 @kind object;
  #L2de10c.  v8:= v18;
  #L2de110.  v9:= v19;
  #L2de114.  v10:= v20;
  #L2de118.  v11:= v21;
  #L2de11c.  v13:= v26;
  #L2de120.  v14:= v27;
  #L2de124.  call temp:= `cropBitmapObjectWithScale`(v6, v7, v8, v9, v10, v11, v12, v13, v14) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.cropBitmapObjectWithScale:(Landroid/graphics/Bitmap;[FIZIIFZZ)Landroid/graphics/Bitmap;` @kind static;
  #L2de12a.  v2:= temp @kind object;
  #L2de12c.  if v2 == v5 then goto L2de142;
  #L2de130.  call `recycle`(v5) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L2de136.  goto L2de142;
  #L2de138.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2de13a.  call `recycle`(v5) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L2de140.  throw v0;
  #L2de142.  v0:= new `com.dmoneybd.dcustomer.cropper.BitmapUtils$BitmapSampled`;
  #L2de146.  call `<init>`(v0, v2, v4) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils$BitmapSampled;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L2de14c.  return v0 @kind object;
  #L2de14e.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L2de150.  v2:= new `java.lang.RuntimeException`;
  #L2de154.  v3:= new `java.lang.StringBuilder`;
  #L2de158.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2de15e.  v4:= "Failed to load sampled bitmap: " @kind object;
  #L2de162.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2de168.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2de16e.  v1:= "\r\n" @kind object;
  #L2de172.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2de178.  call temp:= `getMessage`(v0) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2de17e.  v1:= temp @kind object;
  #L2de180.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2de186.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2de18c.  v1:= temp @kind object;
  #L2de18e.  call `<init>`(v2, v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L2de194.  throw v2;
  #L2de196.  v0:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L2de198.  if v2 == 0 then goto L2de1a2;
  #L2de19c.  call `recycle`(v2) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L2de1a2.  goto L2de1a6;
  #L2de1a4.  throw v0;
  #L2de1a6.  goto L2de1a4;
  catch `java.lang.OutOfMemoryError` @[L2de096..L2de0d8] goto L2de196;
  catch `java.lang.Exception` @[L2de096..L2de0d8] goto L2de14e;
  catch `java.lang.Throwable` @[L2de0dc..L2de12c] goto L2de138;
  catch `java.lang.OutOfMemoryError` @[L2de130..L2de142] goto L2de196;
  catch `java.lang.Exception` @[L2de130..L2de142] goto L2de14e;
}
procedure `android.graphics.Bitmap` `cropBitmapObjectWithScale`(`android.graphics.Bitmap` v10 @kind object, `float`[] v11 @kind object, `int` v12 , `boolean` v13 , `int` v14 , `int` v15 , `float` v16 , `boolean` v17 , `boolean` v18 ) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.cropBitmapObjectWithScale:(Landroid/graphics/Bitmap;[FIZIIFZZ)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2ddae0.  v7:= v10 @kind object;
  #L2ddae2.  v8:= v12;
  #L2ddae4.  v0:= v16;
  #L2ddae8.  call temp:= `getWidth`(v10) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2ddaee.  v2:= temp;
  #L2ddaf0.  call temp:= `getHeight`(v10) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2ddaf6.  v3:= temp;
  #L2ddaf8.  v1:= v11 @kind object;
  #L2ddafa.  v4:= v13;
  #L2ddafc.  v5:= v14;
  #L2ddafe.  v6:= v15;
  #L2ddb00.  call temp:= `g`(v1, v2, v3, v4, v5, v6) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.g:([FIIZII)Landroid/graphics/Rect;` @kind static;
  #L2ddb06.  v9:= temp @kind object;
  #L2ddb08.  v5:= new `android.graphics.Matrix`;
  #L2ddb0c.  call `<init>`(v5) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L2ddb12.  v1:= (`float`) v8 @kind i2f;
  #L2ddb14.  call temp:= `getWidth`(v10) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2ddb1a.  v2:= temp;
  #L2ddb1c.  v2:= v2 / 2;
  #L2ddb20.  v2:= (`float`) v2 @kind i2f;
  #L2ddb22.  call temp:= `getHeight`(v10) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2ddb28.  v3:= temp;
  #L2ddb2a.  v3:= v3 / 2;
  #L2ddb2e.  v3:= (`float`) v3 @kind i2f;
  #L2ddb30.  call `setRotate`(v5, v1, v2, v3) @signature `Landroid/graphics/Matrix;.setRotate:(FFF)V` @kind virtual;
  #L2ddb36.  if v17 == 0 then goto L2ddb3e;
  #L2ddb3a.  v1:= -v0 @kind float;
  #L2ddb3c.  goto L2ddb40;
  #L2ddb3e.  v1:= v0;
  #L2ddb40.  if v18 == 0 then goto L2ddb46;
  #L2ddb44.  v0:= -v0 @kind float;
  #L2ddb46.  call temp:= `postScale`(v5, v1, v0) @signature `Landroid/graphics/Matrix;.postScale:(FF)Z` @kind virtual;
  #L2ddb4c.  v1:= v9.`android.graphics.Rect.left` @type ^`int`;
  #L2ddb50.  v2:= v9.`android.graphics.Rect.top` @type ^`int`;
  #L2ddb54.  call temp:= `width`(v9) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L2ddb5a.  v3:= temp;
  #L2ddb5c.  call temp:= `height`(v9) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L2ddb62.  v4:= temp;
  #L2ddb64.  v6:= 1I;
  #L2ddb66.  v0:= v10 @kind object;
  #L2ddb68.  call temp:= `createBitmap`(v0, v1, v2, v3, v4, v5, v6) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;` @kind static;
  #L2ddb6e.  v0:= temp @kind object;
  #L2ddb70.  if v0 != v7 then goto L2ddb86;
  #L2ddb74.  call temp:= `getConfig`(v10) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L2ddb7a.  v0:= temp @kind object;
  #L2ddb7c.  v1:= 0I;
  #L2ddb7e.  call temp:= `copy`(v10, v0, v1) @signature `Landroid/graphics/Bitmap;.copy:(Landroid/graphics/Bitmap$Config;Z)Landroid/graphics/Bitmap;` @kind virtual;
  #L2ddb84.  v0:= temp @kind object;
  #L2ddb86.  v1:= v8 %% 90;
  #L2ddb8a.  if v1 == 0 then goto L2ddba2;
  #L2ddb8e.  v1:= v11 @kind object;
  #L2ddb90.  v2:= v9 @kind object;
  #L2ddb92.  v3:= v12;
  #L2ddb94.  v4:= v13;
  #L2ddb96.  v5:= v14;
  #L2ddb98.  v6:= v15;
  #L2ddb9a.  call temp:= `cropForRotatedImage`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.cropForRotatedImage:(Landroid/graphics/Bitmap;[FLandroid/graphics/Rect;IZII)Landroid/graphics/Bitmap;` @kind static;
  #L2ddba0.  v0:= temp @kind object;
  #L2ddba2.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `cropForRotatedImage`(`android.graphics.Bitmap` v8 @kind object, `float`[] v9 @kind object, `android.graphics.Rect` v10 @kind object, `int` v11 , `boolean` v12 , `int` v13 , `int` v14 ) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.cropForRotatedImage:(Landroid/graphics/Bitmap;[FLandroid/graphics/Rect;IZII)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2ddbb4.  v0:= v11 %% 90;
  #L2ddbb8.  if v0 == 0 then goto L2ddd0e;
  #L2ddbbc.  v0:= (`double`) v11 @kind i2d;
  #L2ddbbe.  call temp:= `toRadians`(v0) @signature `Ljava/lang/Math;.toRadians:(D)D` @kind static;
  #L2ddbc4.  v0:= temp @kind wide;
  #L2ddbc6.  v2:= 90I;
  #L2ddbca.  if v11 < v2 then goto L2ddbe6;
  #L2ddbce.  v2:= 180I;
  #L2ddbd2.  if v11 <= v2 then goto L2ddbe0;
  #L2ddbd6.  v2:= 270I;
  #L2ddbda.  if v11 >= v2 then goto L2ddbe0;
  #L2ddbde.  goto L2ddbe6;
  #L2ddbe0.  v11:= v10.`android.graphics.Rect.right` @type ^`int`;
  #L2ddbe4.  goto L2ddbea;
  #L2ddbe6.  v11:= v10.`android.graphics.Rect.left` @type ^`int`;
  #L2ddbea.  v2:= 0I;
  #L2ddbec.  v3:= 0I;
  #L2ddbee.  v4:= length @variable v9;
  #L2ddbf0.  if v3 >= v4 then goto L2ddcc8;
  #L2ddbf4.  v4:= v9[v3];
  #L2ddbf8.  v5:= v11 + -1;
  #L2ddbfc.  v5:= (`float`) v5 @kind i2f;
  #L2ddbfe.  v4:= fcmpl(v4, v5);
  #L2ddc02.  if v4 < 0 then goto L2ddcc2;
  #L2ddc06.  v4:= v9[v3];
  #L2ddc0a.  v5:= v11 + 1;
  #L2ddc0e.  v5:= (`float`) v5 @kind i2f;
  #L2ddc10.  v4:= fcmpg(v4, v5);
  #L2ddc14.  if v4 > 0 then goto L2ddcc2;
  #L2ddc18.  call temp:= `sin`(v0) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L2ddc1e.  v4:= temp @kind wide;
  #L2ddc20.  v11:= v10.`android.graphics.Rect.bottom` @type ^`int`;
  #L2ddc24.  v11:= (`float`) v11 @kind i2f;
  #L2ddc26.  v3:= v3 + 1;
  #L2ddc2a.  v2:= v9[v3];
  #L2ddc2e.  v11:= v11 - v2 @kind float;
  #L2ddc30.  v6:= (`double`) v11 @kind f2d;
  #L2ddc32.  call temp:= `isNaN`(v6) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2ddc38.  v4:= v4 * v6 @kind double;
  #L2ddc3c.  call temp:= `abs`(v4) @signature `Ljava/lang/Math;.abs:(D)D` @kind static;
  #L2ddc42.  v4:= temp @kind wide;
  #L2ddc44.  v2:= (`int`) v4 @kind d2i;
  #L2ddc46.  call temp:= `cos`(v0) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L2ddc4c.  v4:= temp @kind wide;
  #L2ddc4e.  v11:= v9[v3];
  #L2ddc52.  v6:= v10.`android.graphics.Rect.top` @type ^`int`;
  #L2ddc56.  v6:= (`float`) v6 @kind i2f;
  #L2ddc58.  v11:= v11 - v6 @kind float;
  #L2ddc5a.  v6:= (`double`) v11 @kind f2d;
  #L2ddc5c.  call temp:= `isNaN`(v6) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2ddc62.  v4:= v4 * v6 @kind double;
  #L2ddc66.  call temp:= `abs`(v4) @signature `Ljava/lang/Math;.abs:(D)D` @kind static;
  #L2ddc6c.  v4:= temp @kind wide;
  #L2ddc6e.  v11:= (`int`) v4 @kind d2i;
  #L2ddc70.  v4:= v9[v3];
  #L2ddc74.  v5:= v10.`android.graphics.Rect.top` @type ^`int`;
  #L2ddc78.  v5:= (`float`) v5 @kind i2f;
  #L2ddc7a.  v4:= v4 - v5 @kind float;
  #L2ddc7c.  v4:= (`double`) v4 @kind f2d;
  #L2ddc7e.  call temp:= `sin`(v0) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L2ddc84.  v6:= temp @kind wide;
  #L2ddc86.  call temp:= `isNaN`(v4) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2ddc8c.  v4:= v4 / v6 @kind double;
  #L2ddc8e.  call temp:= `abs`(v4) @signature `Ljava/lang/Math;.abs:(D)D` @kind static;
  #L2ddc94.  v4:= temp @kind wide;
  #L2ddc96.  v4:= (`int`) v4 @kind d2i;
  #L2ddc98.  v5:= v10.`android.graphics.Rect.bottom` @type ^`int`;
  #L2ddc9c.  v5:= (`float`) v5 @kind i2f;
  #L2ddc9e.  v9:= v9[v3];
  #L2ddca2.  v5:= v5 - v9 @kind float;
  #L2ddca4.  v5:= (`double`) v5 @kind f2d;
  #L2ddca6.  call temp:= `cos`(v0) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L2ddcac.  v0:= temp @kind wide;
  #L2ddcae.  call temp:= `isNaN`(v5) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2ddcb4.  v5:= v5 / v0 @kind double;
  #L2ddcb6.  call temp:= `abs`(v5) @signature `Ljava/lang/Math;.abs:(D)D` @kind static;
  #L2ddcbc.  v0:= temp @kind wide;
  #L2ddcbe.  v9:= (`int`) v0 @kind d2i;
  #L2ddcc0.  goto L2ddcce;
  #L2ddcc2.  v3:= v3 + 2;
  #L2ddcc6.  goto L2ddbee;
  #L2ddcc8.  v9:= 0I;
  #L2ddcca.  v11:= 0I;
  #L2ddccc.  v4:= 0I;
  #L2ddcce.  v4:= v4 + v2 @kind int;
  #L2ddcd0.  v9:= v9 + v11 @kind int;
  #L2ddcd2.  call `set`(v10, v2, v11, v4, v9) @signature `Landroid/graphics/Rect;.set:(IIII)V` @kind virtual;
  #L2ddcd8.  if v12 == 0 then goto L2ddce2;
  #L2ddcdc.  call `fixRectForAspectRatio`(v10, v13, v14) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.fixRectForAspectRatio:(Landroid/graphics/Rect;II)V` @kind static;
  #L2ddce2.  v9:= v10.`android.graphics.Rect.left` @type ^`int`;
  #L2ddce6.  v11:= v10.`android.graphics.Rect.top` @type ^`int`;
  #L2ddcea.  call temp:= `width`(v10) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L2ddcf0.  v12:= temp;
  #L2ddcf2.  call temp:= `height`(v10) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L2ddcf8.  v10:= temp;
  #L2ddcfa.  call temp:= `createBitmap`(v8, v9, v11, v12, v10) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIII)Landroid/graphics/Bitmap;` @kind static;
  #L2ddd00.  v9:= temp @kind object;
  #L2ddd02.  if v8 == v9 then goto L2ddd0c;
  #L2ddd06.  call `recycle`(v8) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L2ddd0c.  v8:= v9 @kind object;
  #L2ddd0e.  return v8 @kind object;
}
procedure `float` `d`(`float`[] v2 @kind object) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.d:([F)F` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2de74c.  v0:= 1I;
  #L2de74e.  v0:= v2[v0];
  #L2de752.  v1:= 3I;
  #L2de754.  v1:= v2[v1];
  #L2de758.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2de75e.  v0:= temp;
  #L2de760.  v1:= 5I;
  #L2de762.  v1:= v2[v1];
  #L2de766.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2de76c.  v0:= temp;
  #L2de76e.  v1:= 7I;
  #L2de770.  v2:= v2[v1];
  #L2de774.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2de77a.  v2:= temp;
  #L2de77c.  return v2;
}
procedure `android.graphics.Bitmap` `decodeImage`(`android.content.ContentResolver` v2 @kind object, `android.net.Uri` v3 @kind object, `android.graphics.BitmapFactory$Options` v4 @kind object) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.decodeImage:(Landroid/content/ContentResolver;Landroid/net/Uri;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2ddd20.  v0:= 0I;
  #L2ddd22.  call temp:= `openInputStream`(v2, v3) @signature `Landroid/content/ContentResolver;.openInputStream:(Landroid/net/Uri;)Ljava/io/InputStream;` @kind virtual;
  #L2ddd28.  v0:= temp @kind object;
  #L2ddd2a.  v1:= `@@com.dmoneybd.dcustomer.cropper.BitmapUtils.a` @type ^`android.graphics.Rect` @kind object;
  #L2ddd2e.  call temp:= `decodeStream`(v0, v1, v4) @signature `Landroid/graphics/BitmapFactory;.decodeStream:(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L2ddd34.  v2:= temp @kind object;
  #L2ddd36.  call `closeSafe`(v0) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.closeSafe:(Ljava/io/Closeable;)V` @kind static;
  #L2ddd3c.  return v2 @kind object;
  #L2ddd3e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ddd40.  goto L2ddd90;
  #L2ddd42.  v1:= v4.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int`;
  #L2ddd46.  v1:= v1 * 2;
  #L2ddd4a.  v4.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v1;
  #L2ddd4e.  call `closeSafe`(v0) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.closeSafe:(Ljava/io/Closeable;)V` @kind static;
  #L2ddd54.  v0:= v4.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int`;
  #L2ddd58.  v1:= 512I;
  #L2ddd5c.  if v0 > v1 then goto L2ddd62;
  #L2ddd60.  goto L2ddd20;
  #L2ddd62.  v2:= new `java.lang.RuntimeException`;
  #L2ddd66.  v4:= new `java.lang.StringBuilder`;
  #L2ddd6a.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ddd70.  v0:= "Failed to decode image: " @kind object;
  #L2ddd74.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ddd7a.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ddd80.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ddd86.  v3:= temp @kind object;
  #L2ddd88.  call `<init>`(v2, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ddd8e.  throw v2;
  #L2ddd90.  call `closeSafe`(v0) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.closeSafe:(Ljava/io/Closeable;)V` @kind static;
  #L2ddd96.  goto L2ddd9a;
  #L2ddd98.  throw v2;
  #L2ddd9a.  goto L2ddd98;
  catch `java.lang.OutOfMemoryError` @[L2ddd22..L2ddd36] goto L2ddd42;
  catch `java.lang.Throwable` @[L2ddd22..L2ddd36] goto L2ddd3e;
  catch `java.lang.Throwable` @[L2ddd42..L2ddd4e] goto L2ddd3e;
}
procedure `android.graphics.BitmapFactory$Options` `decodeImageForOption`(`android.content.ContentResolver` v1 @kind object, `android.net.Uri` v2 @kind object) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.decodeImageForOption:(Landroid/content/ContentResolver;Landroid/net/Uri;)Landroid/graphics/BitmapFactory$Options;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2ddf08.  call temp:= `openInputStream`(v1, v2) @signature `Landroid/content/ContentResolver;.openInputStream:(Landroid/net/Uri;)Ljava/io/InputStream;` @kind virtual;
  #L2ddf0e.  v1:= temp @kind object;
  #L2ddf10.  v2:= new `android.graphics.BitmapFactory$Options`;
  #L2ddf14.  call `<init>`(v2) @signature `Landroid/graphics/BitmapFactory$Options;.<init>:()V` @kind direct;
  #L2ddf1a.  v0:= 1I;
  #L2ddf1c.  v2.`android.graphics.BitmapFactory$Options.inJustDecodeBounds` @type ^`boolean` := v0 @kind boolean;
  #L2ddf20.  v0:= `@@com.dmoneybd.dcustomer.cropper.BitmapUtils.a` @type ^`android.graphics.Rect` @kind object;
  #L2ddf24.  call temp:= `decodeStream`(v1, v0, v2) @signature `Landroid/graphics/BitmapFactory;.decodeStream:(Ljava/io/InputStream;Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L2ddf2a.  v0:= 0I;
  #L2ddf2c.  v2.`android.graphics.BitmapFactory$Options.inJustDecodeBounds` @type ^`boolean` := v0 @kind boolean;
  #L2ddf30.  call `closeSafe`(v1) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.closeSafe:(Ljava/io/Closeable;)V` @kind static;
  #L2ddf36.  return v2 @kind object;
  #L2ddf38.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ddf3a.  goto L2ddf40;
  #L2ddf3c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ddf3e.  v1:= 0I;
  #L2ddf40.  call `closeSafe`(v1) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.closeSafe:(Ljava/io/Closeable;)V` @kind static;
  #L2ddf46.  throw v2;
  catch `java.lang.Throwable` @[L2ddf08..L2ddf10] goto L2ddf3c;
  catch `java.lang.Throwable` @[L2ddf10..L2ddf30] goto L2ddf38;
}
procedure `com.dmoneybd.dcustomer.cropper.BitmapUtils$BitmapSampled` `decodeSampledBitmapRegion`(`android.content.Context` v4 @kind object, `android.net.Uri` v5 @kind object, `android.graphics.Rect` v6 @kind object, `int` v7 , `int` v8 , `int` v9 ) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.decodeSampledBitmapRegion:(Landroid/content/Context;Landroid/net/Uri;Landroid/graphics/Rect;III)Lcom/dmoneybd/dcustomer/cropper/BitmapUtils$BitmapSampled;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2de510.  v0:= 0I;
  #L2de512.  v1:= new `android.graphics.BitmapFactory$Options`;
  #L2de516.  call `<init>`(v1) @signature `Landroid/graphics/BitmapFactory$Options;.<init>:()V` @kind direct;
  #L2de51c.  call temp:= `width`(v6) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L2de522.  v2:= temp;
  #L2de524.  call temp:= `height`(v6) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L2de52a.  v3:= temp;
  #L2de52c.  call temp:= `calculateInSampleSizeByReqestedSize`(v2, v3, v7, v8) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.calculateInSampleSizeByReqestedSize:(IIII)I` @kind static;
  #L2de532.  v7:= temp;
  #L2de534.  v9:= v9 * v7 @kind int;
  #L2de538.  v1.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v9;
  #L2de53c.  call temp:= `getContentResolver`(v4) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L2de542.  v4:= temp @kind object;
  #L2de544.  call temp:= `openInputStream`(v4, v5) @signature `Landroid/content/ContentResolver;.openInputStream:(Landroid/net/Uri;)Ljava/io/InputStream;` @kind virtual;
  #L2de54a.  v4:= temp @kind object;
  #L2de54c.  v7:= 0I;
  #L2de54e.  call temp:= `newInstance`(v4, v7) @signature `Landroid/graphics/BitmapRegionDecoder;.newInstance:(Ljava/io/InputStream;Z)Landroid/graphics/BitmapRegionDecoder;` @kind static;
  #L2de554.  v7:= temp @kind object;
  #L2de556.  v8:= new `com.dmoneybd.dcustomer.cropper.BitmapUtils$BitmapSampled`;
  #L2de55a.  call temp:= `decodeRegion`(v7, v6, v1) @signature `Landroid/graphics/BitmapRegionDecoder;.decodeRegion:(Landroid/graphics/Rect;Landroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind virtual;
  #L2de560.  v9:= temp @kind object;
  #L2de562.  v2:= v1.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int`;
  #L2de566.  call `<init>`(v8, v9, v2) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils$BitmapSampled;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L2de56c.  call `closeSafe`(v4) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.closeSafe:(Ljava/io/Closeable;)V` @kind static;
  #L2de572.  call `recycle`(v7) @signature `Landroid/graphics/BitmapRegionDecoder;.recycle:()V` @kind virtual;
  #L2de578.  return v8 @kind object;
  #L2de57a.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2de57c.  goto L2de5b8;
  #L2de57e.  v6:= Exception @type ^`java.lang.Exception` @kind object;
  #L2de580.  goto L2de5c0;
  #L2de582.  v8:= v1.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int`;
  #L2de586.  v8:= v8 * 2;
  #L2de58a.  v1.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v8;
  #L2de58e.  v9:= 512I;
  #L2de592.  if v8 <= v9 then goto L2de556;
  #L2de596.  call `closeSafe`(v4) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.closeSafe:(Ljava/io/Closeable;)V` @kind static;
  #L2de59c.  if v7 == 0 then goto L2de5a6;
  #L2de5a0.  call `recycle`(v7) @signature `Landroid/graphics/BitmapRegionDecoder;.recycle:()V` @kind virtual;
  #L2de5a6.  v4:= new `com.dmoneybd.dcustomer.cropper.BitmapUtils$BitmapSampled`;
  #L2de5aa.  v5:= 1I;
  #L2de5ac.  call `<init>`(v4, v0, v5) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils$BitmapSampled;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L2de5b2.  return v4 @kind object;
  #L2de5b4.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2de5b6.  v7:= v0 @kind object;
  #L2de5b8.  v0:= v4 @kind object;
  #L2de5ba.  goto L2de616;
  #L2de5bc.  v6:= Exception @type ^`java.lang.Exception` @kind object;
  #L2de5be.  v7:= v0 @kind object;
  #L2de5c0.  v0:= v4 @kind object;
  #L2de5c2.  goto L2de5ce;
  #L2de5c4.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2de5c6.  v7:= v0 @kind object;
  #L2de5c8.  goto L2de616;
  #L2de5ca.  v6:= Exception @type ^`java.lang.Exception` @kind object;
  #L2de5cc.  v7:= v0 @kind object;
  #L2de5ce.  v4:= new `java.lang.RuntimeException`;
  #L2de5d2.  v8:= new `java.lang.StringBuilder`;
  #L2de5d6.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2de5dc.  v9:= "Failed to load sampled bitmap: " @kind object;
  #L2de5e0.  call temp:= `append`(v8, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2de5e6.  call temp:= `append`(v8, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2de5ec.  v5:= "\r\n" @kind object;
  #L2de5f0.  call temp:= `append`(v8, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2de5f6.  call temp:= `getMessage`(v6) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2de5fc.  v5:= temp @kind object;
  #L2de5fe.  call temp:= `append`(v8, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2de604.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2de60a.  v5:= temp @kind object;
  #L2de60c.  call `<init>`(v4, v5, v6) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L2de612.  throw v4;
  #L2de614.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2de616.  call `closeSafe`(v0) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.closeSafe:(Ljava/io/Closeable;)V` @kind static;
  #L2de61c.  if v7 == 0 then goto L2de626;
  #L2de620.  call `recycle`(v7) @signature `Landroid/graphics/BitmapRegionDecoder;.recycle:()V` @kind virtual;
  #L2de626.  goto L2de62a;
  #L2de628.  throw v5;
  #L2de62a.  goto L2de628;
  catch `java.lang.Exception` @[L2de512..L2de54c] goto L2de5ca;
  catch `java.lang.Throwable` @[L2de512..L2de54c] goto L2de5c4;
  catch `java.lang.Exception` @[L2de54e..L2de556] goto L2de5bc;
  catch `java.lang.Throwable` @[L2de54e..L2de556] goto L2de5b4;
  catch `java.lang.OutOfMemoryError` @[L2de556..L2de56c] goto L2de582;
  catch `java.lang.Exception` @[L2de556..L2de56c] goto L2de57e;
  catch `java.lang.Throwable` @[L2de556..L2de56c] goto L2de57a;
  catch `java.lang.Exception` @[L2de582..L2de58e] goto L2de57e;
  catch `java.lang.Throwable` @[L2de582..L2de58e] goto L2de57a;
  catch `java.lang.Throwable` @[L2de5ce..L2de614] goto L2de614;
}
procedure `float` `e`(`float`[] v1 @kind object) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.e:([F)F` @AccessFlag STATIC {
    temp;
    v0;

  #L2de790.  call temp:= `j`(v1) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.j:([F)F` @kind static;
  #L2de796.  v0:= temp;
  #L2de798.  call temp:= `i`(v1) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.i:([F)F` @kind static;
  #L2de79e.  v1:= temp;
  #L2de7a0.  v0:= v0 + v1 @kind float;
  #L2de7a2.  v1:= 2.0F;
  #L2de7a6.  v0:= v0 / v1 @kind float;
  #L2de7a8.  return v0;
}
procedure `float` `f`(`float`[] v1 @kind object) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.f:([F)F` @AccessFlag STATIC {
    temp;
    v0;

  #L2de7bc.  call temp:= `d`(v1) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.d:([F)F` @kind static;
  #L2de7c2.  v0:= temp;
  #L2de7c4.  call temp:= `k`(v1) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.k:([F)F` @kind static;
  #L2de7ca.  v1:= temp;
  #L2de7cc.  v0:= v0 + v1 @kind float;
  #L2de7ce.  v1:= 2.0F;
  #L2de7d2.  v0:= v0 / v1 @kind float;
  #L2de7d4.  return v0;
}
procedure `void` `fixRectForAspectRatio`(`android.graphics.Rect` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.fixRectForAspectRatio:(Landroid/graphics/Rect;II)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2deac0.  if v2 != v3 then goto L2deb26;
  #L2deac4.  call temp:= `width`(v1) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L2deaca.  v2:= temp;
  #L2deacc.  call temp:= `height`(v1) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L2dead2.  v3:= temp;
  #L2dead4.  if v2 == v3 then goto L2deb26;
  #L2dead8.  call temp:= `height`(v1) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L2deade.  v2:= temp;
  #L2deae0.  call temp:= `width`(v1) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L2deae6.  v3:= temp;
  #L2deae8.  if v2 <= v3 then goto L2deb0a;
  #L2deaec.  v2:= v1.`android.graphics.Rect.bottom` @type ^`int`;
  #L2deaf0.  call temp:= `height`(v1) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L2deaf6.  v3:= temp;
  #L2deaf8.  call temp:= `width`(v1) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L2deafe.  v0:= temp;
  #L2deb00.  v3:= v3 - v0 @kind int;
  #L2deb02.  v2:= v2 - v3 @kind int;
  #L2deb04.  v1.`android.graphics.Rect.bottom` @type ^`int` := v2;
  #L2deb08.  goto L2deb26;
  #L2deb0a.  v2:= v1.`android.graphics.Rect.right` @type ^`int`;
  #L2deb0e.  call temp:= `width`(v1) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L2deb14.  v3:= temp;
  #L2deb16.  call temp:= `height`(v1) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L2deb1c.  v0:= temp;
  #L2deb1e.  v3:= v3 - v0 @kind int;
  #L2deb20.  v2:= v2 - v3 @kind int;
  #L2deb22.  v1.`android.graphics.Rect.right` @type ^`int` := v2;
  #L2deb26.  return @kind void;
}
procedure `android.graphics.Rect` `g`(`float`[] v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 , `int` v7 , `int` v8 ) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.g:([FIIZII)Landroid/graphics/Rect;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2ddf70.  call temp:= `i`(v3) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.i:([F)F` @kind static;
  #L2ddf76.  v0:= temp;
  #L2ddf78.  v1:= 0I;
  #L2ddf7a.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2ddf80.  v0:= temp;
  #L2ddf82.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L2ddf88.  v0:= temp;
  #L2ddf8a.  call temp:= `k`(v3) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.k:([F)F` @kind static;
  #L2ddf90.  v2:= temp;
  #L2ddf92.  call temp:= `max`(v1, v2) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2ddf98.  v1:= temp;
  #L2ddf9a.  call temp:= `round`(v1) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L2ddfa0.  v1:= temp;
  #L2ddfa2.  v4:= (`float`) v4 @kind i2f;
  #L2ddfa4.  call temp:= `j`(v3) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.j:([F)F` @kind static;
  #L2ddfaa.  v2:= temp;
  #L2ddfac.  call temp:= `min`(v4, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2ddfb2.  v4:= temp;
  #L2ddfb4.  call temp:= `round`(v4) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L2ddfba.  v4:= temp;
  #L2ddfbc.  v5:= (`float`) v5 @kind i2f;
  #L2ddfbe.  call temp:= `d`(v3) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.d:([F)F` @kind static;
  #L2ddfc4.  v3:= temp;
  #L2ddfc6.  call temp:= `min`(v5, v3) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2ddfcc.  v3:= temp;
  #L2ddfce.  call temp:= `round`(v3) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L2ddfd4.  v3:= temp;
  #L2ddfd6.  v5:= new `android.graphics.Rect`;
  #L2ddfda.  call `<init>`(v5, v0, v1, v4, v3) @signature `Landroid/graphics/Rect;.<init>:(IIII)V` @kind direct;
  #L2ddfe0.  if v6 == 0 then goto L2ddfea;
  #L2ddfe4.  call `fixRectForAspectRatio`(v5, v7, v8) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.fixRectForAspectRatio:(Landroid/graphics/Rect;II)V` @kind static;
  #L2ddfea.  return v5 @kind object;
}
procedure `int` `getMaxTextureSize`() @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.getMaxTextureSize:()I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2de980.  v0:= 2048I;
  #L2de984.  call temp:= `getEGL`() @signature `Ljavax/microedition/khronos/egl/EGLContext;.getEGL:()Ljavax/microedition/khronos/egl/EGL;` @kind static;
  #L2de98a.  v1:= temp @kind object;
  #L2de98c.  v1:= (`javax.microedition.khronos.egl.EGL10`) v1 @kind object;
  #L2de990.  v2:= `@@javax.microedition.khronos.egl.EGL10.EGL_DEFAULT_DISPLAY` @type ^`java.lang.Object` @kind object;
  #L2de994.  call temp:= `eglGetDisplay`(v1, v2) @signature `Ljavax/microedition/khronos/egl/EGL10;.eglGetDisplay:(Ljava/lang/Object;)Ljavax/microedition/khronos/egl/EGLDisplay;` @kind interface;
  #L2de99a.  v2:= temp @kind object;
  #L2de99c.  v3:= 2I;
  #L2de99e.  v3:= new `int`[v3];
  #L2de9a2.  call temp:= `eglInitialize`(v1, v2, v3) @signature `Ljavax/microedition/khronos/egl/EGL10;.eglInitialize:(Ljavax/microedition/khronos/egl/EGLDisplay;[I)Z` @kind interface;
  #L2de9a8.  v3:= 1I;
  #L2de9aa.  v4:= new `int`[v3];
  #L2de9ae.  v5:= 0I;
  #L2de9b0.  v6:= 0I;
  #L2de9b2.  call temp:= `eglGetConfigs`(v1, v2, v5, v6, v4) @signature `Ljavax/microedition/khronos/egl/EGL10;.eglGetConfigs:(Ljavax/microedition/khronos/egl/EGLDisplay;[Ljavax/microedition/khronos/egl/EGLConfig;I[I)Z` @kind interface;
  #L2de9b8.  v5:= v4[v6];
  #L2de9bc.  v5:= new `javax.microedition.khronos.egl.EGLConfig`[v5];
  #L2de9c0.  v7:= v4[v6];
  #L2de9c4.  call temp:= `eglGetConfigs`(v1, v2, v5, v7, v4) @signature `Ljavax/microedition/khronos/egl/EGL10;.eglGetConfigs:(Ljavax/microedition/khronos/egl/EGLDisplay;[Ljavax/microedition/khronos/egl/EGLConfig;I[I)Z` @kind interface;
  #L2de9ca.  v3:= new `int`[v3];
  #L2de9ce.  v7:= 0I;
  #L2de9d0.  v8:= 0I;
  #L2de9d2.  v9:= v4[v6];
  #L2de9d6.  if v7 >= v9 then goto L2de9fa;
  #L2de9da.  v9:= v5[v7] @kind object;
  #L2de9de.  v10:= 12332I;
  #L2de9e2.  call temp:= `eglGetConfigAttrib`(v1, v2, v9, v10, v3) @signature `Ljavax/microedition/khronos/egl/EGL10;.eglGetConfigAttrib:(Ljavax/microedition/khronos/egl/EGLDisplay;Ljavax/microedition/khronos/egl/EGLConfig;I[I)Z` @kind interface;
  #L2de9e8.  v9:= v3[v6];
  #L2de9ec.  if v8 >= v9 then goto L2de9f4;
  #L2de9f0.  v8:= v3[v6];
  #L2de9f4.  v7:= v7 + 1;
  #L2de9f8.  goto L2de9d2;
  #L2de9fa.  call temp:= `eglTerminate`(v1, v2) @signature `Ljavax/microedition/khronos/egl/EGL10;.eglTerminate:(Ljavax/microedition/khronos/egl/EGLDisplay;)Z` @kind interface;
  #L2dea00.  call temp:= `max`(v8, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L2dea06.  v0:= temp;
  #L2dea08.  return v0;
  catch `java.lang.Exception` @[L2de984..L2dea08] goto L2dea08;
}
procedure `float` `h`(`float`[] v1 @kind object) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.h:([F)F` @AccessFlag STATIC {
    temp;
    v0;

  #L2de7e8.  call temp:= `d`(v1) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.d:([F)F` @kind static;
  #L2de7ee.  v0:= temp;
  #L2de7f0.  call temp:= `k`(v1) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.k:([F)F` @kind static;
  #L2de7f6.  v1:= temp;
  #L2de7f8.  v0:= v0 - v1 @kind float;
  #L2de7fa.  return v0;
}
procedure `float` `i`(`float`[] v2 @kind object) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.i:([F)F` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2de80c.  v0:= 0I;
  #L2de80e.  v0:= v2[v0];
  #L2de812.  v1:= 2I;
  #L2de814.  v1:= v2[v1];
  #L2de818.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2de81e.  v0:= temp;
  #L2de820.  v1:= 4I;
  #L2de822.  v1:= v2[v1];
  #L2de826.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2de82c.  v0:= temp;
  #L2de82e.  v1:= 6I;
  #L2de830.  v2:= v2[v1];
  #L2de834.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2de83a.  v2:= temp;
  #L2de83c.  return v2;
}
procedure `float` `j`(`float`[] v2 @kind object) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.j:([F)F` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2de850.  v0:= 0I;
  #L2de852.  v0:= v2[v0];
  #L2de856.  v1:= 2I;
  #L2de858.  v1:= v2[v1];
  #L2de85c.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2de862.  v0:= temp;
  #L2de864.  v1:= 4I;
  #L2de866.  v1:= v2[v1];
  #L2de86a.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2de870.  v0:= temp;
  #L2de872.  v1:= 6I;
  #L2de874.  v2:= v2[v1];
  #L2de878.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2de87e.  v2:= temp;
  #L2de880.  return v2;
}
procedure `float` `k`(`float`[] v2 @kind object) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.k:([F)F` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2de894.  v0:= 1I;
  #L2de896.  v0:= v2[v0];
  #L2de89a.  v1:= 3I;
  #L2de89c.  v1:= v2[v1];
  #L2de8a0.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2de8a6.  v0:= temp;
  #L2de8a8.  v1:= 5I;
  #L2de8aa.  v1:= v2[v1];
  #L2de8ae.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2de8b4.  v0:= temp;
  #L2de8b6.  v1:= 7I;
  #L2de8b8.  v2:= v2[v1];
  #L2de8bc.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L2de8c2.  v2:= temp;
  #L2de8c4.  return v2;
}
procedure `float` `l`(`float`[] v1 @kind object) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.l:([F)F` @AccessFlag STATIC {
    temp;
    v0;

  #L2de8d8.  call temp:= `j`(v1) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.j:([F)F` @kind static;
  #L2de8de.  v0:= temp;
  #L2de8e0.  call temp:= `i`(v1) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.i:([F)F` @kind static;
  #L2de8e6.  v1:= temp;
  #L2de8e8.  v0:= v0 - v1 @kind float;
  #L2de8ea.  return v0;
}
procedure `android.graphics.Bitmap` `m`(`android.graphics.Bitmap` v5 @kind object, `int` v6 , `int` v7 , `com.dmoneybd.dcustomer.cropper.CropImageView$RequestSizeOptions` v8 @kind object) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.m:(Landroid/graphics/Bitmap;IILcom/dmoneybd/dcustomer/cropper/CropImageView$RequestSizeOptions;)Landroid/graphics/Bitmap;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2dddc4.  if v6 <= 0 then goto L2dde62;
  #L2dddc8.  if v7 <= 0 then goto L2dde62;
  #L2dddcc.  v0:= `@@com.dmoneybd.dcustomer.cropper.CropImageView$RequestSizeOptions.RESIZE_FIT` @type ^`com.dmoneybd.dcustomer.cropper.CropImageView$RequestSizeOptions` @kind object;
  #L2dddd0.  if v8 == v0 then goto L2ddde4;
  #L2dddd4.  v1:= `@@com.dmoneybd.dcustomer.cropper.CropImageView$RequestSizeOptions.RESIZE_INSIDE` @type ^`com.dmoneybd.dcustomer.cropper.CropImageView$RequestSizeOptions` @kind object;
  #L2dddd8.  if v8 == v1 then goto L2ddde4;
  #L2ddddc.  v1:= `@@com.dmoneybd.dcustomer.cropper.CropImageView$RequestSizeOptions.RESIZE_EXACT` @type ^`com.dmoneybd.dcustomer.cropper.CropImageView$RequestSizeOptions` @kind object;
  #L2ddde0.  if v8 != v1 then goto L2dde62;
  #L2ddde4.  v1:= 0I;
  #L2ddde6.  v2:= `@@com.dmoneybd.dcustomer.cropper.CropImageView$RequestSizeOptions.RESIZE_EXACT` @type ^`com.dmoneybd.dcustomer.cropper.CropImageView$RequestSizeOptions` @kind object;
  #L2dddea.  v3:= 0I;
  #L2dddec.  if v8 != v2 then goto L2dddfa;
  #L2dddf0.  call temp:= `createScaledBitmap`(v5, v6, v7, v3) @signature `Landroid/graphics/Bitmap;.createScaledBitmap:(Landroid/graphics/Bitmap;IIZ)Landroid/graphics/Bitmap;` @kind static;
  #L2dddf6.  v1:= temp @kind object;
  #L2dddf8.  goto L2dde42;
  #L2dddfa.  call temp:= `getWidth`(v5) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2dde00.  v2:= temp;
  #L2dde02.  call temp:= `getHeight`(v5) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2dde08.  v4:= temp;
  #L2dde0a.  v2:= (`float`) v2 @kind i2f;
  #L2dde0c.  v6:= (`float`) v6 @kind i2f;
  #L2dde0e.  v6:= v2 / v6 @kind float;
  #L2dde12.  v4:= (`float`) v4 @kind i2f;
  #L2dde14.  v7:= (`float`) v7 @kind i2f;
  #L2dde16.  v7:= v4 / v7 @kind float;
  #L2dde1a.  call temp:= `max`(v6, v7) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2dde20.  v6:= temp;
  #L2dde22.  v7:= 1.0F;
  #L2dde26.  v7:= fcmpl(v6, v7);
  #L2dde2a.  if v7 > 0 then goto L2dde32;
  #L2dde2e.  if v8 != v0 then goto L2dde42;
  #L2dde32.  v2:= v2 / v6 @kind float;
  #L2dde34.  v7:= (`int`) v2 @kind f2i;
  #L2dde36.  v4:= v4 / v6 @kind float;
  #L2dde38.  v6:= (`int`) v4 @kind f2i;
  #L2dde3a.  call temp:= `createScaledBitmap`(v5, v7, v6, v3) @signature `Landroid/graphics/Bitmap;.createScaledBitmap:(Landroid/graphics/Bitmap;IIZ)Landroid/graphics/Bitmap;` @kind static;
  #L2dde40.  v1:= temp @kind object;
  #L2dde42.  if v1 == 0 then goto L2dde62;
  #L2dde46.  if v1 == v5 then goto L2dde50;
  #L2dde4a.  call `recycle`(v5) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L2dde50.  return v1 @kind object;
  #L2dde52.  v6:= Exception @type ^`java.lang.Exception` @kind object;
  #L2dde54.  v7:= "AIC" @kind object;
  #L2dde58.  v8:= "Failed to resize cropped image, return bitmap before resize" @kind object;
  #L2dde5c.  call temp:= `w`(v7, v8, v6) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L2dde62.  return v5 @kind object;
  catch `java.lang.Exception` @[L2dddcc..L2dde50] goto L2dde52;
}
procedure `com.dmoneybd.dcustomer.cropper.BitmapUtils$RotateBitmapResult` `n`(`android.graphics.Bitmap` v1 @kind object, `android.content.Context` v2 @kind object, `android.net.Uri` v3 @kind object) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.n:(Landroid/graphics/Bitmap;Landroid/content/Context;Landroid/net/Uri;)Lcom/dmoneybd/dcustomer/cropper/BitmapUtils$RotateBitmapResult;` @AccessFlag STATIC {
    temp;
    v0;

  #L2de680.  v0:= 0I;
  #L2de682.  call temp:= `getContentResolver`(v2) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L2de688.  v2:= temp @kind object;
  #L2de68a.  call temp:= `openInputStream`(v2, v3) @signature `Landroid/content/ContentResolver;.openInputStream:(Landroid/net/Uri;)Ljava/io/InputStream;` @kind virtual;
  #L2de690.  v2:= temp @kind object;
  #L2de692.  if v2 == 0 then goto L2de6ac;
  #L2de696.  v3:= new `androidx.exifinterface.media.ExifInterface`;
  #L2de69a.  call `<init>`(v3, v2) @signature `Landroidx/exifinterface/media/ExifInterface;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L2de6a0.  call `close`(v2) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L2de6a6.  v0:= v3 @kind object;
  #L2de6a8.  goto L2de6ac;
  #L2de6aa.  
  #L2de6ac.  if v0 == 0 then goto L2de6ba;
  #L2de6b0.  call temp:= `o`(v1, v0) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.o:(Landroid/graphics/Bitmap;Landroidx/exifinterface/media/ExifInterface;)Lcom/dmoneybd/dcustomer/cropper/BitmapUtils$RotateBitmapResult;` @kind static;
  #L2de6b6.  v1:= temp @kind object;
  #L2de6b8.  goto L2de6c8;
  #L2de6ba.  v2:= new `com.dmoneybd.dcustomer.cropper.BitmapUtils$RotateBitmapResult`;
  #L2de6be.  v3:= 0I;
  #L2de6c0.  call `<init>`(v2, v1, v3) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils$RotateBitmapResult;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L2de6c6.  v1:= v2 @kind object;
  #L2de6c8.  return v1 @kind object;
  catch `java.lang.Exception` @[L2de682..L2de6a0] goto L2de6aa;
  catch `java.lang.Exception` @[L2de6a0..L2de6a6] goto L2de6a6;
}
procedure `com.dmoneybd.dcustomer.cropper.BitmapUtils$RotateBitmapResult` `o`(`android.graphics.Bitmap` v2 @kind object, `androidx.exifinterface.media.ExifInterface` v3 @kind object) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.o:(Landroid/graphics/Bitmap;Landroidx/exifinterface/media/ExifInterface;)Lcom/dmoneybd/dcustomer/cropper/BitmapUtils$RotateBitmapResult;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2de6f8.  v0:= "Orientation" @kind object;
  #L2de6fc.  v1:= 1I;
  #L2de6fe.  call temp:= `getAttributeInt`(v3, v0, v1) @signature `Landroidx/exifinterface/media/ExifInterface;.getAttributeInt:(Ljava/lang/String;I)I` @kind virtual;
  #L2de704.  v3:= temp;
  #L2de706.  v0:= 3I;
  #L2de708.  if v3 == v0 then goto L2de72a;
  #L2de70c.  v0:= 6I;
  #L2de70e.  if v3 == v0 then goto L2de724;
  #L2de712.  v0:= 8I;
  #L2de716.  if v3 == v0 then goto L2de71e;
  #L2de71a.  v3:= 0I;
  #L2de71c.  goto L2de72e;
  #L2de71e.  v3:= 270I;
  #L2de722.  goto L2de72e;
  #L2de724.  v3:= 90I;
  #L2de728.  goto L2de72e;
  #L2de72a.  v3:= 180I;
  #L2de72e.  v0:= new `com.dmoneybd.dcustomer.cropper.BitmapUtils$RotateBitmapResult`;
  #L2de732.  call `<init>`(v0, v2, v3) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils$RotateBitmapResult;.<init>:(Landroid/graphics/Bitmap;I)V` @kind direct;
  #L2de738.  return v0 @kind object;
}
procedure `void` `p`(`android.content.Context` v1 @kind object, `android.graphics.Bitmap` v2 @kind object, `android.net.Uri` v3 @kind object, `android.graphics.Bitmap$CompressFormat` v4 @kind object, `int` v5 ) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.p:(Landroid/content/Context;Landroid/graphics/Bitmap;Landroid/net/Uri;Landroid/graphics/Bitmap$CompressFormat;I)V` @AccessFlag STATIC {
    temp;
    v0;

  #L2deb38.  v0:= 0I;
  #L2deb3a.  call temp:= `getContentResolver`(v1) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L2deb40.  v1:= temp @kind object;
  #L2deb42.  call temp:= `openOutputStream`(v1, v3) @signature `Landroid/content/ContentResolver;.openOutputStream:(Landroid/net/Uri;)Ljava/io/OutputStream;` @kind virtual;
  #L2deb48.  v0:= temp @kind object;
  #L2deb4a.  call temp:= `compress`(v2, v4, v5, v0) @signature `Landroid/graphics/Bitmap;.compress:(Landroid/graphics/Bitmap$CompressFormat;ILjava/io/OutputStream;)Z` @kind virtual;
  #L2deb50.  call `closeSafe`(v0) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.closeSafe:(Ljava/io/Closeable;)V` @kind static;
  #L2deb56.  return @kind void;
  #L2deb58.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2deb5a.  call `closeSafe`(v0) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.closeSafe:(Ljava/io/Closeable;)V` @kind static;
  #L2deb60.  throw v1;
  catch `java.lang.Throwable` @[L2deb3a..L2deb50] goto L2deb58;
}
procedure `android.net.Uri` `q`(`android.content.Context` v3 @kind object, `android.graphics.Bitmap` v4 @kind object, `android.net.Uri` v5 @kind object) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.q:(Landroid/content/Context;Landroid/graphics/Bitmap;Landroid/net/Uri;)Landroid/net/Uri;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2ddffc.  v0:= 1I;
  #L2ddffe.  if v5 != 0 then goto L2de024;
  #L2de002.  v5:= "aic_state_store_temp" @kind object;
  #L2de006.  v1:= ".jpg" @kind object;
  #L2de00a.  call temp:= `getCacheDir`(v3) @signature `Landroid/content/Context;.getCacheDir:()Ljava/io/File;` @kind virtual;
  #L2de010.  v2:= temp @kind object;
  #L2de012.  call temp:= `createTempFile`(v5, v1, v2) @signature `Ljava/io/File;.createTempFile:(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;` @kind static;
  #L2de018.  v5:= temp @kind object;
  #L2de01a.  call temp:= `fromFile`(v5) @signature `Landroid/net/Uri;.fromFile:(Ljava/io/File;)Landroid/net/Uri;` @kind static;
  #L2de020.  v5:= temp @kind object;
  #L2de022.  goto L2de044;
  #L2de024.  v1:= new `java.io.File`;
  #L2de028.  call temp:= `getPath`(v5) @signature `Landroid/net/Uri;.getPath:()Ljava/lang/String;` @kind virtual;
  #L2de02e.  v2:= temp @kind object;
  #L2de030.  call `<init>`(v1, v2) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2de036.  call temp:= `exists`(v1) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L2de03c.  v1:= temp;
  #L2de03e.  if v1 == 0 then goto L2de044;
  #L2de042.  v0:= 0I;
  #L2de044.  if v0 == 0 then goto L2de056;
  #L2de048.  v0:= `@@android.graphics.Bitmap$CompressFormat.JPEG` @type ^`android.graphics.Bitmap$CompressFormat` @kind object;
  #L2de04c.  v1:= 95I;
  #L2de050.  call `p`(v3, v4, v5, v0, v1) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.p:(Landroid/content/Context;Landroid/graphics/Bitmap;Landroid/net/Uri;Landroid/graphics/Bitmap$CompressFormat;I)V` @kind static;
  #L2de056.  return v5 @kind object;
  #L2de058.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L2de05a.  v4:= "AIC" @kind object;
  #L2de05e.  v5:= "Failed to write bitmap to temp file for image-cropper save instance state" @kind object;
  #L2de062.  call temp:= `w`(v4, v5, v3) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L2de068.  v3:= 0I;
  #L2de06a.  return v3 @kind object;
  catch `java.lang.Exception` @[L2de002..L2de056] goto L2de058;
}
procedure `android.graphics.Bitmap` `rotateAndFlipBitmapInt`(`android.graphics.Bitmap` v7 @kind object, `int` v8 , `boolean` v9 , `boolean` v10 ) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.rotateAndFlipBitmapInt:(Landroid/graphics/Bitmap;IZZ)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2dde84.  if v8 > 0 then goto L2dde94;
  #L2dde88.  if v9 != 0 then goto L2dde94;
  #L2dde8c.  if v10 == 0 then goto L2dde92;
  #L2dde90.  goto L2dde94;
  #L2dde92.  return v7 @kind object;
  #L2dde94.  v5:= new `android.graphics.Matrix`;
  #L2dde98.  call `<init>`(v5) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L2dde9e.  v8:= (`float`) v8 @kind i2f;
  #L2ddea0.  call `setRotate`(v5, v8) @signature `Landroid/graphics/Matrix;.setRotate:(F)V` @kind virtual;
  #L2ddea6.  v8:= -1.0F;
  #L2ddeaa.  v0:= 1.0F;
  #L2ddeae.  if v9 == 0 then goto L2ddeb8;
  #L2ddeb2.  v9:= -1.0F;
  #L2ddeb6.  goto L2ddebc;
  #L2ddeb8.  v9:= 1.0F;
  #L2ddebc.  if v10 == 0 then goto L2ddec2;
  #L2ddec0.  goto L2ddec6;
  #L2ddec2.  v8:= 1.0F;
  #L2ddec6.  call temp:= `postScale`(v5, v9, v8) @signature `Landroid/graphics/Matrix;.postScale:(FF)Z` @kind virtual;
  #L2ddecc.  v1:= 0I;
  #L2ddece.  v2:= 0I;
  #L2dded0.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2dded6.  v3:= temp;
  #L2dded8.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2ddede.  v4:= temp;
  #L2ddee0.  v6:= 0I;
  #L2ddee2.  v0:= v7 @kind object;
  #L2ddee4.  call temp:= `createBitmap`(v0, v1, v2, v3, v4, v5, v6) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;` @kind static;
  #L2ddeea.  v8:= temp @kind object;
  #L2ddeec.  if v8 == v7 then goto L2ddef6;
  #L2ddef0.  call `recycle`(v7) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L2ddef6.  return v8 @kind object;
}
