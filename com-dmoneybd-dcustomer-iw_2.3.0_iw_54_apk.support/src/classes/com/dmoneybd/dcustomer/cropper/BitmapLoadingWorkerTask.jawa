record `com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask` @kind class @AccessFlag FINAL extends `android.os.AsyncTask` @kind class {
  `android.content.Context` `com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask.mContext` @AccessFlag PRIVATE_FINAL;
  `java.lang.ref.WeakReference` `com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask.mCropImageViewReference` @AccessFlag PRIVATE_FINAL;
  `int` `com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask.mHeight` @AccessFlag PRIVATE_FINAL;
  `android.net.Uri` `com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask.mUri` @AccessFlag PRIVATE_FINAL;
  `int` `com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask.mWidth` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask` v4 @kind this, `com.dmoneybd.dcustomer.cropper.CropImageView` v5 @kind object, `android.net.Uri` v6 @kind object) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapLoadingWorkerTask;.<init>:(Lcom/dmoneybd/dcustomer/cropper/CropImageView;Landroid/net/Uri;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2dd9a4.  call `<init>`(v4) @signature `Landroid/os/AsyncTask;.<init>:()V` @kind direct;
  #L2dd9aa.  v4.`com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask.mUri` @type ^`android.net.Uri` := v6 @kind object;
  #L2dd9ae.  v6:= new `java.lang.ref.WeakReference`;
  #L2dd9b2.  call `<init>`(v6, v5) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2dd9b8.  v4.`com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask.mCropImageViewReference` @type ^`java.lang.ref.WeakReference` := v6 @kind object;
  #L2dd9bc.  call temp:= `getContext`(v5) @signature `Landroid/widget/FrameLayout;.getContext:()Landroid/content/Context;` @kind virtual;
  #L2dd9c2.  v6:= temp @kind object;
  #L2dd9c4.  v4.`com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask.mContext` @type ^`android.content.Context` := v6 @kind object;
  #L2dd9c8.  call temp:= `getResources`(v5) @signature `Landroid/widget/FrameLayout;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L2dd9ce.  v5:= temp @kind object;
  #L2dd9d0.  call temp:= `getDisplayMetrics`(v5) @signature `Landroid/content/res/Resources;.getDisplayMetrics:()Landroid/util/DisplayMetrics;` @kind virtual;
  #L2dd9d6.  v5:= temp @kind object;
  #L2dd9d8.  v6:= v5.`android.util.DisplayMetrics.density` @type ^`float`;
  #L2dd9dc.  v0:= 1.0F;
  #L2dd9e0.  v1:= fcmpl(v6, v0);
  #L2dd9e4.  if v1 <= 0 then goto L2dd9ee;
  #L2dd9e8.  v0:= v0 / v6 @kind float;
  #L2dd9ea.  v0:= (`double`) v0 @kind f2d;
  #L2dd9ec.  goto L2dd9f2;
  #L2dd9ee.  v0:= 1.0D;
  #L2dd9f2.  v6:= v5.`android.util.DisplayMetrics.widthPixels` @type ^`int`;
  #L2dd9f6.  v2:= (`double`) v6 @kind i2d;
  #L2dd9f8.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2dd9fe.  v2:= v2 * v0 @kind double;
  #L2dda02.  v6:= (`int`) v2 @kind d2i;
  #L2dda04.  v4.`com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask.mWidth` @type ^`int` := v6;
  #L2dda08.  v5:= v5.`android.util.DisplayMetrics.heightPixels` @type ^`int`;
  #L2dda0c.  v5:= (`double`) v5 @kind i2d;
  #L2dda0e.  call temp:= `isNaN`(v5) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L2dda14.  v5:= v5 * v0 @kind double;
  #L2dda18.  v5:= (`int`) v5 @kind d2i;
  #L2dda1a.  v4.`com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask.mHeight` @type ^`int` := v5;
  #L2dda1e.  return @kind void;
}
procedure `com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask$Result` `doInBackground`(`com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask` v4 @kind this, `java.lang.Void`[] v5 @kind object) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapLoadingWorkerTask;.doInBackground:([Ljava/lang/Void;)Lcom/dmoneybd/dcustomer/cropper/BitmapLoadingWorkerTask$Result;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2dd8ec.  call temp:= `isCancelled`(v4) @signature `Landroid/os/AsyncTask;.isCancelled:()Z` @kind virtual;
  #L2dd8f2.  v5:= temp;
  #L2dd8f4.  if v5 != 0 then goto L2dd94c;
  #L2dd8f8.  v5:= v4.`com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask.mContext` @type ^`android.content.Context` @kind object;
  #L2dd8fc.  v0:= v4.`com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask.mUri` @type ^`android.net.Uri` @kind object;
  #L2dd900.  v1:= v4.`com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask.mWidth` @type ^`int`;
  #L2dd904.  v2:= v4.`com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask.mHeight` @type ^`int`;
  #L2dd908.  call temp:= `c`(v5, v0, v1, v2) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.c:(Landroid/content/Context;Landroid/net/Uri;II)Lcom/dmoneybd/dcustomer/cropper/BitmapUtils$BitmapSampled;` @kind static;
  #L2dd90e.  v5:= temp @kind object;
  #L2dd910.  call temp:= `isCancelled`(v4) @signature `Landroid/os/AsyncTask;.isCancelled:()Z` @kind virtual;
  #L2dd916.  v0:= temp;
  #L2dd918.  if v0 != 0 then goto L2dd94c;
  #L2dd91c.  v0:= v5.`com.dmoneybd.dcustomer.cropper.BitmapUtils$BitmapSampled.bitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L2dd920.  v1:= v4.`com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask.mContext` @type ^`android.content.Context` @kind object;
  #L2dd924.  v2:= v4.`com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask.mUri` @type ^`android.net.Uri` @kind object;
  #L2dd928.  call temp:= `n`(v0, v1, v2) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapUtils;.n:(Landroid/graphics/Bitmap;Landroid/content/Context;Landroid/net/Uri;)Lcom/dmoneybd/dcustomer/cropper/BitmapUtils$RotateBitmapResult;` @kind static;
  #L2dd92e.  v0:= temp @kind object;
  #L2dd930.  v1:= new `com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask$Result`;
  #L2dd934.  v2:= v4.`com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask.mUri` @type ^`android.net.Uri` @kind object;
  #L2dd938.  v3:= v0.`com.dmoneybd.dcustomer.cropper.BitmapUtils$RotateBitmapResult.bitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L2dd93c.  v5:= v5.`com.dmoneybd.dcustomer.cropper.BitmapUtils$BitmapSampled.a` @type ^`int`;
  #L2dd940.  v0:= v0.`com.dmoneybd.dcustomer.cropper.BitmapUtils$RotateBitmapResult.a` @type ^`int`;
  #L2dd944.  call `<init>`(v1, v2, v3, v5, v0) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapLoadingWorkerTask$Result;.<init>:(Landroid/net/Uri;Landroid/graphics/Bitmap;II)V` @kind direct;
  #L2dd94a.  return v1 @kind object;
  #L2dd94c.  v5:= 0I;
  #L2dd94e.  return v5 @kind object;
  #L2dd950.  v5:= Exception @type ^`java.lang.Exception` @kind object;
  #L2dd952.  v0:= new `com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask$Result`;
  #L2dd956.  v1:= v4.`com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask.mUri` @type ^`android.net.Uri` @kind object;
  #L2dd95a.  call `<init>`(v0, v1, v5) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapLoadingWorkerTask$Result;.<init>:(Landroid/net/Uri;Ljava/lang/Exception;)V` @kind direct;
  #L2dd960.  return v0 @kind object;
  catch `java.lang.Exception` @[L2dd8ec..L2dd94a] goto L2dd950;
}
procedure `java.lang.Object` `doInBackground`(`com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask` v0 @kind this, `java.lang.Object`[] v1 @kind object) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapLoadingWorkerTask;.doInBackground:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L2dd984.  v1:= (`java.lang.Void`[]) v1 @kind object;
  #L2dd988.  call temp:= `doInBackground`(v0, v1) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapLoadingWorkerTask;.doInBackground:([Ljava/lang/Void;)Lcom/dmoneybd/dcustomer/cropper/BitmapLoadingWorkerTask$Result;` @kind virtual;
  #L2dd98e.  v1:= temp @kind object;
  #L2dd990.  return v1 @kind object;
}
procedure `android.net.Uri` `getUri`(`com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask` v1 @kind this) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapLoadingWorkerTask;.getUri:()Landroid/net/Uri;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2dd8d4.  v0:= v1.`com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask.mUri` @type ^`android.net.Uri` @kind object;
  #L2dd8d8.  return v0 @kind object;
}
procedure `void` `onPostExecute`(`com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask` v2 @kind this, `com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask$Result` v3 @kind object) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapLoadingWorkerTask;.onPostExecute:(Lcom/dmoneybd/dcustomer/cropper/BitmapLoadingWorkerTask$Result;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L2dda30.  if v3 == 0 then goto L2dda70;
  #L2dda34.  v0:= 0I;
  #L2dda36.  call temp:= `isCancelled`(v2) @signature `Landroid/os/AsyncTask;.isCancelled:()Z` @kind virtual;
  #L2dda3c.  v1:= temp;
  #L2dda3e.  if v1 != 0 then goto L2dda5e;
  #L2dda42.  v1:= v2.`com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask.mCropImageViewReference` @type ^`java.lang.ref.WeakReference` @kind object;
  #L2dda46.  call temp:= `get`(v1) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L2dda4c.  v1:= temp @kind object;
  #L2dda4e.  v1:= (`com.dmoneybd.dcustomer.cropper.CropImageView`) v1 @kind object;
  #L2dda52.  if v1 == 0 then goto L2dda5e;
  #L2dda56.  v0:= 1I;
  #L2dda58.  call `e`(v1, v3) @signature `Lcom/dmoneybd/dcustomer/cropper/CropImageView;.e:(Lcom/dmoneybd/dcustomer/cropper/BitmapLoadingWorkerTask$Result;)V` @kind virtual;
  #L2dda5e.  if v0 != 0 then goto L2dda70;
  #L2dda62.  v3:= v3.`com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask$Result.bitmap` @type ^`android.graphics.Bitmap` @kind object;
  #L2dda66.  if v3 == 0 then goto L2dda70;
  #L2dda6a.  call `recycle`(v3) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L2dda70.  return @kind void;
}
procedure `void` `onPostExecute`(`com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapLoadingWorkerTask;.onPostExecute:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L2dda84.  v1:= (`com.dmoneybd.dcustomer.cropper.BitmapLoadingWorkerTask$Result`) v1 @kind object;
  #L2dda88.  call `onPostExecute`(v0, v1) @signature `Lcom/dmoneybd/dcustomer/cropper/BitmapLoadingWorkerTask;.onPostExecute:(Lcom/dmoneybd/dcustomer/cropper/BitmapLoadingWorkerTask$Result;)V` @kind virtual;
  #L2dda8e.  return @kind void;
}
