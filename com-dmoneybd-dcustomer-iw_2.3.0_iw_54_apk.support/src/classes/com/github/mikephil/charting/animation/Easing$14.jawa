record `com.github.mikephil.charting.animation.Easing$14` @kind class @AccessFlag FINAL extends `com.github.mikephil.charting.animation.Easing$EasingFunction` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.animation.Easing$14` v0 @kind this) @signature `Lcom/github/mikephil/charting/animation/Easing$14;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L383a4c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L383a52.  return @kind void;
}
procedure `float` `getInterpolation`(`com.github.mikephil.charting.animation.Easing$14` v4 @kind this, `float` v5 ) @signature `Lcom/github/mikephil/charting/animation/Easing$14;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L383a10.  v0:= 0I;
  #L383a12.  v1:= fcmpl(v5, v0);
  #L383a16.  if v1 != 0 then goto L383a1c;
  #L383a1a.  goto L383a3a;
  #L383a1c.  v0:= 2.0D;
  #L383a20.  v2:= 10.0F;
  #L383a24.  v3:= 1.0F;
  #L383a28.  v5:= v5 - v3 @kind float;
  #L383a2a.  v5:= v5 * v2 @kind float;
  #L383a2e.  v2:= (`double`) v5 @kind f2d;
  #L383a30.  call temp:= `pow`(v0, v2) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L383a36.  v0:= temp @kind wide;
  #L383a38.  v0:= (`float`) v0 @kind d2f;
  #L383a3a.  return v0;
}
