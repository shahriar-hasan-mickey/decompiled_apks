record `com.github.mikephil.charting.animation.Easing$25` @kind class @AccessFlag FINAL extends `com.github.mikephil.charting.animation.Easing$EasingFunction` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.animation.Easing$25` v0 @kind this) @signature `Lcom/github/mikephil/charting/animation/Easing$25;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L383fa4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L383faa.  return @kind void;
}
procedure `float` `getInterpolation`(`com.github.mikephil.charting.animation.Easing$25` v5 @kind this, `float` v6 ) @signature `Lcom/github/mikephil/charting/animation/Easing$25;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L383f44.  v0:= 2.0F;
  #L383f48.  v6:= v6 * v0 @kind float;
  #L383f4c.  v1:= 1080431359I;
  #L383f52.  v2:= 1076237055I;
  #L383f58.  v3:= 0.5F;
  #L383f5c.  v4:= 1.0F;
  #L383f60.  v4:= fcmpg(v6, v4);
  #L383f64.  if v4 >= 0 then goto L383f7c;
  #L383f68.  v0:= v6 * v6 @kind float;
  #L383f6c.  v1:= v1 * v6 @kind float;
  #L383f70.  v1:= v1 - v2 @kind float;
  #L383f72.  v0:= v0 * v1 @kind float;
  #L383f76.  v0:= v0 * v3 @kind float;
  #L383f7a.  return v0;
  #L383f7c.  v6:= v6 - v0 @kind float;
  #L383f7e.  v4:= v6 * v6 @kind float;
  #L383f82.  v1:= v1 * v6 @kind float;
  #L383f86.  v1:= v1 + v2 @kind float;
  #L383f88.  v4:= v4 * v1 @kind float;
  #L383f8c.  v4:= v4 + v0 @kind float;
  #L383f8e.  v4:= v4 * v3 @kind float;
  #L383f92.  return v4;
}
