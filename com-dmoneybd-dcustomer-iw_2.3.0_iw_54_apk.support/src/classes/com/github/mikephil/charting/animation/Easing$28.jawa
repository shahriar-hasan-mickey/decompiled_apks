record `com.github.mikephil.charting.animation.Easing$28` @kind class @AccessFlag FINAL extends `com.github.mikephil.charting.animation.Easing$EasingFunction` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.animation.Easing$28` v0 @kind this) @signature `Lcom/github/mikephil/charting/animation/Easing$28;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3840f8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3840fe.  return @kind void;
}
procedure `float` `getInterpolation`(`com.github.mikephil.charting.animation.Easing$28` v3 @kind this, `float` v4 ) @signature `Lcom/github/mikephil/charting/animation/Easing$28;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3840a4.  v0:= 2.0F;
  #L3840a8.  v1:= 0.5F;
  #L3840ac.  v2:= fcmpg(v4, v1);
  #L3840b0.  if v2 >= 0 then goto L3840ca;
  #L3840b4.  v2:= `@@com.github.mikephil.charting.animation.Easing.EaseInBounce` @type ^`com.github.mikephil.charting.animation.Easing$EasingFunction` @kind object;
  #L3840b8.  v4:= v4 * v0 @kind float;
  #L3840bc.  call temp:= `getInterpolation`(v2, v4) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunction;.getInterpolation:(F)F` @kind interface;
  #L3840c2.  v4:= temp;
  #L3840c4.  v4:= v4 * v1 @kind float;
  #L3840c8.  return v4;
  #L3840ca.  v2:= `@@com.github.mikephil.charting.animation.Easing.EaseOutBounce` @type ^`com.github.mikephil.charting.animation.Easing$EasingFunction` @kind object;
  #L3840ce.  v4:= v4 * v0 @kind float;
  #L3840d2.  v0:= 1.0F;
  #L3840d6.  v4:= v4 - v0 @kind float;
  #L3840d8.  call temp:= `getInterpolation`(v2, v4) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunction;.getInterpolation:(F)F` @kind interface;
  #L3840de.  v4:= temp;
  #L3840e0.  v4:= v4 * v1 @kind float;
  #L3840e4.  v4:= v4 + v1 @kind float;
  #L3840e6.  return v4;
}
