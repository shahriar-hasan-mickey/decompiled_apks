record `com.github.mikephil.charting.utils.ViewPortHandler` @kind class @AccessFlag PUBLIC {
  `android.graphics.Matrix` `com.github.mikephil.charting.utils.ViewPortHandler.mCenterViewPortMatrixBuffer` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.utils.ViewPortHandler.mChartHeight` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.utils.ViewPortHandler.mChartWidth` @AccessFlag PROTECTED;
  `android.graphics.RectF` `com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @AccessFlag PROTECTED;
  `android.graphics.Matrix` `com.github.mikephil.charting.utils.ViewPortHandler.mMatrixTouch` @AccessFlag PROTECTED_FINAL;
  `float` `com.github.mikephil.charting.utils.ViewPortHandler.mMaxScaleX` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.utils.ViewPortHandler.mMaxScaleY` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.utils.ViewPortHandler.mMinScaleX` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.utils.ViewPortHandler.mMinScaleY` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.utils.ViewPortHandler.mScaleX` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.utils.ViewPortHandler.mScaleY` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.utils.ViewPortHandler.mTransOffsetX` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.utils.ViewPortHandler.mTransOffsetY` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.utils.ViewPortHandler.mTransX` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.utils.ViewPortHandler.mTransY` @AccessFlag PRIVATE;
  `float`[] `com.github.mikephil.charting.utils.ViewPortHandler.matrixBuffer` @AccessFlag PROTECTED_FINAL;
  `float`[] `com.github.mikephil.charting.utils.ViewPortHandler.valsBufferForFitScreen` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.github.mikephil.charting.utils.ViewPortHandler` v3 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3a7030.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a7036.  v0:= new `android.graphics.Matrix`;
  #L3a703a.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3a7040.  v3.`com.github.mikephil.charting.utils.ViewPortHandler.mMatrixTouch` @type ^`android.graphics.Matrix` := v0 @kind object;
  #L3a7044.  v0:= new `android.graphics.RectF`;
  #L3a7048.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L3a704e.  v3.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` := v0 @kind object;
  #L3a7052.  v0:= 0I;
  #L3a7054.  v3.`com.github.mikephil.charting.utils.ViewPortHandler.mChartWidth` @type ^`float` := v0;
  #L3a7058.  v3.`com.github.mikephil.charting.utils.ViewPortHandler.mChartHeight` @type ^`float` := v0;
  #L3a705c.  v1:= 1.0F;
  #L3a7060.  v3.`com.github.mikephil.charting.utils.ViewPortHandler.mMinScaleY` @type ^`float` := v1;
  #L3a7064.  v2:= 2139095039I;
  #L3a706a.  v3.`com.github.mikephil.charting.utils.ViewPortHandler.mMaxScaleY` @type ^`float` := v2;
  #L3a706e.  v3.`com.github.mikephil.charting.utils.ViewPortHandler.mMinScaleX` @type ^`float` := v1;
  #L3a7072.  v3.`com.github.mikephil.charting.utils.ViewPortHandler.mMaxScaleX` @type ^`float` := v2;
  #L3a7076.  v3.`com.github.mikephil.charting.utils.ViewPortHandler.mScaleX` @type ^`float` := v1;
  #L3a707a.  v3.`com.github.mikephil.charting.utils.ViewPortHandler.mScaleY` @type ^`float` := v1;
  #L3a707e.  v3.`com.github.mikephil.charting.utils.ViewPortHandler.mTransX` @type ^`float` := v0;
  #L3a7082.  v3.`com.github.mikephil.charting.utils.ViewPortHandler.mTransY` @type ^`float` := v0;
  #L3a7086.  v3.`com.github.mikephil.charting.utils.ViewPortHandler.mTransOffsetX` @type ^`float` := v0;
  #L3a708a.  v3.`com.github.mikephil.charting.utils.ViewPortHandler.mTransOffsetY` @type ^`float` := v0;
  #L3a708e.  v0:= 9I;
  #L3a7092.  v1:= new `float`[v0];
  #L3a7096.  v3.`com.github.mikephil.charting.utils.ViewPortHandler.valsBufferForFitScreen` @type ^`float`[] := v1 @kind object;
  #L3a709a.  v1:= new `android.graphics.Matrix`;
  #L3a709e.  call `<init>`(v1) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3a70a4.  v3.`com.github.mikephil.charting.utils.ViewPortHandler.mCenterViewPortMatrixBuffer` @type ^`android.graphics.Matrix` := v1 @kind object;
  #L3a70a8.  v0:= new `float`[v0];
  #L3a70ac.  v3.`com.github.mikephil.charting.utils.ViewPortHandler.matrixBuffer` @type ^`float`[] := v0 @kind object;
  #L3a70b0.  return @kind void;
}
procedure `boolean` `canZoomInMoreX`(`com.github.mikephil.charting.utils.ViewPortHandler` v2 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.canZoomInMoreX:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a6ab4.  v0:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mScaleX` @type ^`float`;
  #L3a6ab8.  v1:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mMaxScaleX` @type ^`float`;
  #L3a6abc.  v0:= fcmpg(v0, v1);
  #L3a6ac0.  if v0 >= 0 then goto L3a6ac8;
  #L3a6ac4.  v0:= 1I;
  #L3a6ac6.  goto L3a6aca;
  #L3a6ac8.  v0:= 0I;
  #L3a6aca.  return v0;
}
procedure `boolean` `canZoomInMoreY`(`com.github.mikephil.charting.utils.ViewPortHandler` v2 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.canZoomInMoreY:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a6adc.  v0:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mScaleY` @type ^`float`;
  #L3a6ae0.  v1:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mMaxScaleY` @type ^`float`;
  #L3a6ae4.  v0:= fcmpg(v0, v1);
  #L3a6ae8.  if v0 >= 0 then goto L3a6af0;
  #L3a6aec.  v0:= 1I;
  #L3a6aee.  goto L3a6af2;
  #L3a6af0.  v0:= 0I;
  #L3a6af2.  return v0;
}
procedure `boolean` `canZoomOutMoreX`(`com.github.mikephil.charting.utils.ViewPortHandler` v2 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.canZoomOutMoreX:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a6b04.  v0:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mScaleX` @type ^`float`;
  #L3a6b08.  v1:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mMinScaleX` @type ^`float`;
  #L3a6b0c.  v0:= fcmpl(v0, v1);
  #L3a6b10.  if v0 <= 0 then goto L3a6b18;
  #L3a6b14.  v0:= 1I;
  #L3a6b16.  goto L3a6b1a;
  #L3a6b18.  v0:= 0I;
  #L3a6b1a.  return v0;
}
procedure `boolean` `canZoomOutMoreY`(`com.github.mikephil.charting.utils.ViewPortHandler` v2 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.canZoomOutMoreY:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a6b2c.  v0:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mScaleY` @type ^`float`;
  #L3a6b30.  v1:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mMinScaleY` @type ^`float`;
  #L3a6b34.  v0:= fcmpl(v0, v1);
  #L3a6b38.  if v0 <= 0 then goto L3a6b40;
  #L3a6b3c.  v0:= 1I;
  #L3a6b3e.  goto L3a6b42;
  #L3a6b40.  v0:= 0I;
  #L3a6b42.  return v0;
}
procedure `void` `centerViewPort`(`com.github.mikephil.charting.utils.ViewPortHandler` v4 @kind this, `float`[] v5 @kind object, `android.view.View` v6 @kind object) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.centerViewPort:([FLandroid/view/View;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a70c4.  v0:= v4.`com.github.mikephil.charting.utils.ViewPortHandler.mCenterViewPortMatrixBuffer` @type ^`android.graphics.Matrix` @kind object;
  #L3a70c8.  call `reset`(v0) @signature `Landroid/graphics/Matrix;.reset:()V` @kind virtual;
  #L3a70ce.  v1:= v4.`com.github.mikephil.charting.utils.ViewPortHandler.mMatrixTouch` @type ^`android.graphics.Matrix` @kind object;
  #L3a70d2.  call `set`(v0, v1) @signature `Landroid/graphics/Matrix;.set:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L3a70d8.  v1:= 0I;
  #L3a70da.  v1:= v5[v1];
  #L3a70de.  call temp:= `offsetLeft`(v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.offsetLeft:()F` @kind virtual;
  #L3a70e4.  v2:= temp;
  #L3a70e6.  v1:= v1 - v2 @kind float;
  #L3a70e8.  v2:= 1I;
  #L3a70ea.  v5:= v5[v2];
  #L3a70ee.  call temp:= `offsetTop`(v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.offsetTop:()F` @kind virtual;
  #L3a70f4.  v3:= temp;
  #L3a70f6.  v5:= v5 - v3 @kind float;
  #L3a70f8.  v1:= -v1 @kind float;
  #L3a70fa.  v5:= -v5 @kind float;
  #L3a70fc.  call temp:= `postTranslate`(v0, v1, v5) @signature `Landroid/graphics/Matrix;.postTranslate:(FF)Z` @kind virtual;
  #L3a7102.  call temp:= `refresh`(v4, v0, v6, v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.refresh:(Landroid/graphics/Matrix;Landroid/view/View;Z)Landroid/graphics/Matrix;` @kind virtual;
  #L3a7108.  return @kind void;
}
procedure `float` `contentBottom`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentBottom:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6de4.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a6de8.  v0:= v0.`android.graphics.RectF.bottom` @type ^`float`;
  #L3a6dec.  return v0;
}
procedure `float` `contentHeight`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentHeight:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6e00.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a6e04.  call temp:= `height`(v0) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L3a6e0a.  v0:= temp;
  #L3a6e0c.  return v0;
}
procedure `float` `contentLeft`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentLeft:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6e20.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a6e24.  v0:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L3a6e28.  return v0;
}
procedure `float` `contentRight`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentRight:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6e3c.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a6e40.  v0:= v0.`android.graphics.RectF.right` @type ^`float`;
  #L3a6e44.  return v0;
}
procedure `float` `contentTop`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6e58.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a6e5c.  v0:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L3a6e60.  return v0;
}
procedure `float` `contentWidth`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6e74.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a6e78.  call temp:= `width`(v0) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L3a6e7e.  v0:= temp;
  #L3a6e80.  return v0;
}
procedure `android.graphics.Matrix` `fitScreen`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.fitScreen:()Landroid/graphics/Matrix;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6910.  v0:= new `android.graphics.Matrix`;
  #L3a6914.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3a691a.  call `fitScreen`(v1, v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.fitScreen:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L3a6920.  return v0 @kind object;
}
procedure `void` `fitScreen`(`com.github.mikephil.charting.utils.ViewPortHandler` v6 @kind this, `android.graphics.Matrix` v7 @kind object) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.fitScreen:(Landroid/graphics/Matrix;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a711c.  v0:= 1.0F;
  #L3a7120.  v6.`com.github.mikephil.charting.utils.ViewPortHandler.mMinScaleX` @type ^`float` := v0;
  #L3a7124.  v6.`com.github.mikephil.charting.utils.ViewPortHandler.mMinScaleY` @type ^`float` := v0;
  #L3a7128.  v1:= v6.`com.github.mikephil.charting.utils.ViewPortHandler.mMatrixTouch` @type ^`android.graphics.Matrix` @kind object;
  #L3a712c.  call `set`(v7, v1) @signature `Landroid/graphics/Matrix;.set:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L3a7132.  v1:= v6.`com.github.mikephil.charting.utils.ViewPortHandler.valsBufferForFitScreen` @type ^`float`[] @kind object;
  #L3a7136.  v2:= 0I;
  #L3a7138.  v3:= 0I;
  #L3a713a.  v4:= 9I;
  #L3a713e.  v5:= 0I;
  #L3a7140.  if v3 >= v4 then goto L3a714e;
  #L3a7144.  v1[v3]:= v5;
  #L3a7148.  v3:= v3 + 1;
  #L3a714c.  goto L3a713a;
  #L3a714e.  call `getValues`(v7, v1) @signature `Landroid/graphics/Matrix;.getValues:([F)V` @kind virtual;
  #L3a7154.  v3:= 2I;
  #L3a7156.  v1[v3]:= v5;
  #L3a715a.  v3:= 5I;
  #L3a715c.  v1[v3]:= v5;
  #L3a7160.  v1[v2]:= v0;
  #L3a7164.  v2:= 4I;
  #L3a7166.  v1[v2]:= v0;
  #L3a716a.  call `setValues`(v7, v1) @signature `Landroid/graphics/Matrix;.setValues:([F)V` @kind virtual;
  #L3a7170.  return @kind void;
}
procedure `float` `getChartHeight`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getChartHeight:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6e94.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mChartHeight` @type ^`float`;
  #L3a6e98.  return v0;
}
procedure `float` `getChartWidth`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getChartWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6eac.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mChartWidth` @type ^`float`;
  #L3a6eb0.  return v0;
}
procedure `com.github.mikephil.charting.utils.MPPointF` `getContentCenter`(`com.github.mikephil.charting.utils.ViewPortHandler` v2 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getContentCenter:()Lcom/github/mikephil/charting/utils/MPPointF;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a6db0.  v0:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a6db4.  call temp:= `centerX`(v0) @signature `Landroid/graphics/RectF;.centerX:()F` @kind virtual;
  #L3a6dba.  v0:= temp;
  #L3a6dbc.  v1:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a6dc0.  call temp:= `centerY`(v1) @signature `Landroid/graphics/RectF;.centerY:()F` @kind virtual;
  #L3a6dc6.  v1:= temp;
  #L3a6dc8.  call temp:= `getInstance`(v0, v1) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.getInstance:(FF)Lcom/github/mikephil/charting/utils/MPPointF;` @kind static;
  #L3a6dce.  v0:= temp @kind object;
  #L3a6dd0.  return v0 @kind object;
}
procedure `android.graphics.RectF` `getContentRect`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getContentRect:()Landroid/graphics/RectF;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6a9c.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a6aa0.  return v0 @kind object;
}
procedure `android.graphics.Matrix` `getMatrixTouch`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getMatrixTouch:()Landroid/graphics/Matrix;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6934.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mMatrixTouch` @type ^`android.graphics.Matrix` @kind object;
  #L3a6938.  return v0 @kind object;
}
procedure `float` `getMaxScaleX`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getMaxScaleX:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6ec4.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mMaxScaleX` @type ^`float`;
  #L3a6ec8.  return v0;
}
procedure `float` `getMaxScaleY`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getMaxScaleY:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6edc.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mMaxScaleY` @type ^`float`;
  #L3a6ee0.  return v0;
}
procedure `float` `getMinScaleX`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getMinScaleX:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6ef4.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mMinScaleX` @type ^`float`;
  #L3a6ef8.  return v0;
}
procedure `float` `getMinScaleY`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getMinScaleY:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6f0c.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mMinScaleY` @type ^`float`;
  #L3a6f10.  return v0;
}
procedure `float` `getScaleX`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getScaleX:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6f24.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mScaleX` @type ^`float`;
  #L3a6f28.  return v0;
}
procedure `float` `getScaleY`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getScaleY:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6f3c.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mScaleY` @type ^`float`;
  #L3a6f40.  return v0;
}
procedure `float` `getSmallestContentExtension`(`com.github.mikephil.charting.utils.ViewPortHandler` v2 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getSmallestContentExtension:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a6f54.  v0:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a6f58.  call temp:= `width`(v0) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L3a6f5e.  v0:= temp;
  #L3a6f60.  v1:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a6f64.  call temp:= `height`(v1) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L3a6f6a.  v1:= temp;
  #L3a6f6c.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L3a6f72.  v0:= temp;
  #L3a6f74.  return v0;
}
procedure `float` `getTransX`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getTransX:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6f88.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mTransX` @type ^`float`;
  #L3a6f8c.  return v0;
}
procedure `float` `getTransY`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getTransY:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6fa0.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mTransY` @type ^`float`;
  #L3a6fa4.  return v0;
}
procedure `boolean` `hasChartDimens`(`com.github.mikephil.charting.utils.ViewPortHandler` v2 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.hasChartDimens:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a6b54.  v0:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mChartHeight` @type ^`float`;
  #L3a6b58.  v1:= 0I;
  #L3a6b5a.  v0:= fcmpl(v0, v1);
  #L3a6b5e.  if v0 <= 0 then goto L3a6b72;
  #L3a6b62.  v0:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mChartWidth` @type ^`float`;
  #L3a6b66.  v0:= fcmpl(v0, v1);
  #L3a6b6a.  if v0 <= 0 then goto L3a6b72;
  #L3a6b6e.  v0:= 1I;
  #L3a6b70.  return v0;
  #L3a6b72.  v0:= 0I;
  #L3a6b74.  return v0;
}
procedure `boolean` `hasNoDragOffset`(`com.github.mikephil.charting.utils.ViewPortHandler` v2 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.hasNoDragOffset:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a6b88.  v0:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mTransOffsetX` @type ^`float`;
  #L3a6b8c.  v1:= 0I;
  #L3a6b8e.  v0:= fcmpg(v0, v1);
  #L3a6b92.  if v0 > 0 then goto L3a6ba6;
  #L3a6b96.  v0:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mTransOffsetY` @type ^`float`;
  #L3a6b9a.  v0:= fcmpg(v0, v1);
  #L3a6b9e.  if v0 > 0 then goto L3a6ba6;
  #L3a6ba2.  v0:= 1I;
  #L3a6ba4.  goto L3a6ba8;
  #L3a6ba6.  v0:= 0I;
  #L3a6ba8.  return v0;
}
procedure `boolean` `isFullyZoomedOut`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isFullyZoomedOut:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6bbc.  call temp:= `isFullyZoomedOutX`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isFullyZoomedOutX:()Z` @kind virtual;
  #L3a6bc2.  v0:= temp;
  #L3a6bc4.  if v0 == 0 then goto L3a6bd8;
  #L3a6bc8.  call temp:= `isFullyZoomedOutY`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isFullyZoomedOutY:()Z` @kind virtual;
  #L3a6bce.  v0:= temp;
  #L3a6bd0.  if v0 == 0 then goto L3a6bd8;
  #L3a6bd4.  v0:= 1I;
  #L3a6bd6.  goto L3a6bda;
  #L3a6bd8.  v0:= 0I;
  #L3a6bda.  return v0;
}
procedure `boolean` `isFullyZoomedOutX`(`com.github.mikephil.charting.utils.ViewPortHandler` v2 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isFullyZoomedOutX:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a6bec.  v0:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mScaleX` @type ^`float`;
  #L3a6bf0.  v1:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mMinScaleX` @type ^`float`;
  #L3a6bf4.  v0:= fcmpl(v0, v1);
  #L3a6bf8.  if v0 > 0 then goto L3a6c0c;
  #L3a6bfc.  v0:= 1.0F;
  #L3a6c00.  v0:= fcmpl(v1, v0);
  #L3a6c04.  if v0 > 0 then goto L3a6c0c;
  #L3a6c08.  v0:= 1I;
  #L3a6c0a.  goto L3a6c0e;
  #L3a6c0c.  v0:= 0I;
  #L3a6c0e.  return v0;
}
procedure `boolean` `isFullyZoomedOutY`(`com.github.mikephil.charting.utils.ViewPortHandler` v2 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isFullyZoomedOutY:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a6c20.  v0:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mScaleY` @type ^`float`;
  #L3a6c24.  v1:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mMinScaleY` @type ^`float`;
  #L3a6c28.  v0:= fcmpl(v0, v1);
  #L3a6c2c.  if v0 > 0 then goto L3a6c40;
  #L3a6c30.  v0:= 1.0F;
  #L3a6c34.  v0:= fcmpl(v1, v0);
  #L3a6c38.  if v0 > 0 then goto L3a6c40;
  #L3a6c3c.  v0:= 1I;
  #L3a6c3e.  goto L3a6c42;
  #L3a6c40.  v0:= 0I;
  #L3a6c42.  return v0;
}
procedure `boolean` `isInBounds`(`com.github.mikephil.charting.utils.ViewPortHandler` v0 @kind this, `float` v1 , `float` v2 ) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isInBounds:(FF)Z` @AccessFlag PUBLIC {
    temp;

  #L3a6c54.  call temp:= `isInBoundsX`(v0, v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isInBoundsX:(F)Z` @kind virtual;
  #L3a6c5a.  v1:= temp;
  #L3a6c5c.  if v1 == 0 then goto L3a6c70;
  #L3a6c60.  call temp:= `isInBoundsY`(v0, v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isInBoundsY:(F)Z` @kind virtual;
  #L3a6c66.  v1:= temp;
  #L3a6c68.  if v1 == 0 then goto L3a6c70;
  #L3a6c6c.  v1:= 1I;
  #L3a6c6e.  goto L3a6c72;
  #L3a6c70.  v1:= 0I;
  #L3a6c72.  return v1;
}
procedure `boolean` `isInBoundsBottom`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this, `float` v2 ) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isInBoundsBottom:(F)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6c84.  v0:= 100.0F;
  #L3a6c88.  v2:= v2 * v0 @kind float;
  #L3a6c8c.  v2:= (`int`) v2 @kind f2i;
  #L3a6c8e.  v2:= (`float`) v2 @kind i2f;
  #L3a6c90.  v2:= v2 / v0 @kind float;
  #L3a6c92.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a6c96.  v0:= v0.`android.graphics.RectF.bottom` @type ^`float`;
  #L3a6c9a.  v2:= fcmpl(v0, v2);
  #L3a6c9e.  if v2 < 0 then goto L3a6ca6;
  #L3a6ca2.  v2:= 1I;
  #L3a6ca4.  goto L3a6ca8;
  #L3a6ca6.  v2:= 0I;
  #L3a6ca8.  return v2;
}
procedure `boolean` `isInBoundsLeft`(`com.github.mikephil.charting.utils.ViewPortHandler` v2 @kind this, `float` v3 ) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isInBoundsLeft:(F)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a6cbc.  v0:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a6cc0.  v0:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L3a6cc4.  v1:= 1.0F;
  #L3a6cc8.  v3:= v3 + v1 @kind float;
  #L3a6cca.  v3:= fcmpg(v0, v3);
  #L3a6cce.  if v3 > 0 then goto L3a6cd6;
  #L3a6cd2.  v3:= 1I;
  #L3a6cd4.  goto L3a6cd8;
  #L3a6cd6.  v3:= 0I;
  #L3a6cd8.  return v3;
}
procedure `boolean` `isInBoundsRight`(`com.github.mikephil.charting.utils.ViewPortHandler` v2 @kind this, `float` v3 ) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isInBoundsRight:(F)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a6cec.  v0:= 100.0F;
  #L3a6cf0.  v3:= v3 * v0 @kind float;
  #L3a6cf4.  v3:= (`int`) v3 @kind f2i;
  #L3a6cf6.  v3:= (`float`) v3 @kind i2f;
  #L3a6cf8.  v3:= v3 / v0 @kind float;
  #L3a6cfa.  v0:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a6cfe.  v0:= v0.`android.graphics.RectF.right` @type ^`float`;
  #L3a6d02.  v1:= 1.0F;
  #L3a6d06.  v3:= v3 - v1 @kind float;
  #L3a6d08.  v3:= fcmpl(v0, v3);
  #L3a6d0c.  if v3 < 0 then goto L3a6d14;
  #L3a6d10.  v3:= 1I;
  #L3a6d12.  goto L3a6d16;
  #L3a6d14.  v3:= 0I;
  #L3a6d16.  return v3;
}
procedure `boolean` `isInBoundsTop`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this, `float` v2 ) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isInBoundsTop:(F)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6d28.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a6d2c.  v0:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L3a6d30.  v2:= fcmpg(v0, v2);
  #L3a6d34.  if v2 > 0 then goto L3a6d3c;
  #L3a6d38.  v2:= 1I;
  #L3a6d3a.  goto L3a6d3e;
  #L3a6d3c.  v2:= 0I;
  #L3a6d3e.  return v2;
}
procedure `boolean` `isInBoundsX`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this, `float` v2 ) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isInBoundsX:(F)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6d50.  call temp:= `isInBoundsLeft`(v1, v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isInBoundsLeft:(F)Z` @kind virtual;
  #L3a6d56.  v0:= temp;
  #L3a6d58.  if v0 == 0 then goto L3a6d6c;
  #L3a6d5c.  call temp:= `isInBoundsRight`(v1, v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isInBoundsRight:(F)Z` @kind virtual;
  #L3a6d62.  v2:= temp;
  #L3a6d64.  if v2 == 0 then goto L3a6d6c;
  #L3a6d68.  v2:= 1I;
  #L3a6d6a.  goto L3a6d6e;
  #L3a6d6c.  v2:= 0I;
  #L3a6d6e.  return v2;
}
procedure `boolean` `isInBoundsY`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this, `float` v2 ) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isInBoundsY:(F)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6d80.  call temp:= `isInBoundsTop`(v1, v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isInBoundsTop:(F)Z` @kind virtual;
  #L3a6d86.  v0:= temp;
  #L3a6d88.  if v0 == 0 then goto L3a6d9c;
  #L3a6d8c.  call temp:= `isInBoundsBottom`(v1, v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isInBoundsBottom:(F)Z` @kind virtual;
  #L3a6d92.  v2:= temp;
  #L3a6d94.  if v2 == 0 then goto L3a6d9c;
  #L3a6d98.  v2:= 1I;
  #L3a6d9a.  goto L3a6d9e;
  #L3a6d9c.  v2:= 0I;
  #L3a6d9e.  return v2;
}
procedure `void` `limitTransAndScale`(`com.github.mikephil.charting.utils.ViewPortHandler` v9 @kind this, `android.graphics.Matrix` v10 @kind object, `android.graphics.RectF` v11 @kind object) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.limitTransAndScale:(Landroid/graphics/Matrix;Landroid/graphics/RectF;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3a7184.  v0:= v9.`com.github.mikephil.charting.utils.ViewPortHandler.matrixBuffer` @type ^`float`[] @kind object;
  #L3a7188.  call `getValues`(v10, v0) @signature `Landroid/graphics/Matrix;.getValues:([F)V` @kind virtual;
  #L3a718e.  v0:= v9.`com.github.mikephil.charting.utils.ViewPortHandler.matrixBuffer` @type ^`float`[] @kind object;
  #L3a7192.  v1:= 2I;
  #L3a7194.  v2:= v0[v1];
  #L3a7198.  v3:= 0I;
  #L3a719a.  v4:= v0[v3];
  #L3a719e.  v5:= 5I;
  #L3a71a0.  v6:= v0[v5];
  #L3a71a4.  v7:= 4I;
  #L3a71a6.  v0:= v0[v7];
  #L3a71aa.  v8:= v9.`com.github.mikephil.charting.utils.ViewPortHandler.mMinScaleX` @type ^`float`;
  #L3a71ae.  call temp:= `max`(v8, v4) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L3a71b4.  v4:= temp;
  #L3a71b6.  v8:= v9.`com.github.mikephil.charting.utils.ViewPortHandler.mMaxScaleX` @type ^`float`;
  #L3a71ba.  call temp:= `min`(v4, v8) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L3a71c0.  v4:= temp;
  #L3a71c2.  v9.`com.github.mikephil.charting.utils.ViewPortHandler.mScaleX` @type ^`float` := v4;
  #L3a71c6.  v4:= v9.`com.github.mikephil.charting.utils.ViewPortHandler.mMinScaleY` @type ^`float`;
  #L3a71ca.  call temp:= `max`(v4, v0) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L3a71d0.  v0:= temp;
  #L3a71d2.  v4:= v9.`com.github.mikephil.charting.utils.ViewPortHandler.mMaxScaleY` @type ^`float`;
  #L3a71d6.  call temp:= `min`(v0, v4) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L3a71dc.  v0:= temp;
  #L3a71de.  v9.`com.github.mikephil.charting.utils.ViewPortHandler.mScaleY` @type ^`float` := v0;
  #L3a71e2.  v0:= 0I;
  #L3a71e4.  if v11 == 0 then goto L3a71fa;
  #L3a71e8.  call temp:= `width`(v11) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L3a71ee.  v0:= temp;
  #L3a71f0.  call temp:= `height`(v11) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L3a71f6.  v11:= temp;
  #L3a71f8.  goto L3a71fc;
  #L3a71fa.  v11:= 0I;
  #L3a71fc.  v0:= -v0 @kind float;
  #L3a71fe.  v4:= v9.`com.github.mikephil.charting.utils.ViewPortHandler.mScaleX` @type ^`float`;
  #L3a7202.  v8:= 1.0F;
  #L3a7206.  v4:= v4 - v8 @kind float;
  #L3a7208.  v0:= v0 * v4 @kind float;
  #L3a720c.  v4:= v9.`com.github.mikephil.charting.utils.ViewPortHandler.mTransOffsetX` @type ^`float`;
  #L3a7210.  v0:= v0 - v4 @kind float;
  #L3a7212.  call temp:= `max`(v2, v0) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L3a7218.  v0:= temp;
  #L3a721a.  v2:= v9.`com.github.mikephil.charting.utils.ViewPortHandler.mTransOffsetX` @type ^`float`;
  #L3a721e.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L3a7224.  v0:= temp;
  #L3a7226.  v9.`com.github.mikephil.charting.utils.ViewPortHandler.mTransX` @type ^`float` := v0;
  #L3a722a.  v0:= v9.`com.github.mikephil.charting.utils.ViewPortHandler.mScaleY` @type ^`float`;
  #L3a722e.  v0:= v0 - v8 @kind float;
  #L3a7230.  v11:= v11 * v0 @kind float;
  #L3a7234.  v0:= v9.`com.github.mikephil.charting.utils.ViewPortHandler.mTransOffsetY` @type ^`float`;
  #L3a7238.  v11:= v11 + v0 @kind float;
  #L3a723a.  call temp:= `min`(v6, v11) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L3a7240.  v11:= temp;
  #L3a7242.  v0:= v9.`com.github.mikephil.charting.utils.ViewPortHandler.mTransOffsetY` @type ^`float`;
  #L3a7246.  v0:= -v0 @kind float;
  #L3a7248.  call temp:= `max`(v11, v0) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L3a724e.  v11:= temp;
  #L3a7250.  v9.`com.github.mikephil.charting.utils.ViewPortHandler.mTransY` @type ^`float` := v11;
  #L3a7254.  v0:= v9.`com.github.mikephil.charting.utils.ViewPortHandler.matrixBuffer` @type ^`float`[] @kind object;
  #L3a7258.  v2:= v9.`com.github.mikephil.charting.utils.ViewPortHandler.mTransX` @type ^`float`;
  #L3a725c.  v0[v1]:= v2;
  #L3a7260.  v1:= v9.`com.github.mikephil.charting.utils.ViewPortHandler.mScaleX` @type ^`float`;
  #L3a7264.  v0[v3]:= v1;
  #L3a7268.  v0[v5]:= v11;
  #L3a726c.  v11:= v9.`com.github.mikephil.charting.utils.ViewPortHandler.mScaleY` @type ^`float`;
  #L3a7270.  v0[v7]:= v11;
  #L3a7274.  call `setValues`(v10, v0) @signature `Landroid/graphics/Matrix;.setValues:([F)V` @kind virtual;
  #L3a727a.  return @kind void;
}
procedure `float` `offsetBottom`(`com.github.mikephil.charting.utils.ViewPortHandler` v2 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.offsetBottom:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a6fb8.  v0:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mChartHeight` @type ^`float`;
  #L3a6fbc.  v1:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a6fc0.  v1:= v1.`android.graphics.RectF.bottom` @type ^`float`;
  #L3a6fc4.  v0:= v0 - v1 @kind float;
  #L3a6fc6.  return v0;
}
procedure `float` `offsetLeft`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.offsetLeft:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6fd8.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a6fdc.  v0:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L3a6fe0.  return v0;
}
procedure `float` `offsetRight`(`com.github.mikephil.charting.utils.ViewPortHandler` v2 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.offsetRight:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a6ff4.  v0:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mChartWidth` @type ^`float`;
  #L3a6ff8.  v1:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a6ffc.  v1:= v1.`android.graphics.RectF.right` @type ^`float`;
  #L3a7000.  v0:= v0 - v1 @kind float;
  #L3a7002.  return v0;
}
procedure `float` `offsetTop`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.offsetTop:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a7014.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a7018.  v0:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L3a701c.  return v0;
}
procedure `android.graphics.Matrix` `refresh`(`com.github.mikephil.charting.utils.ViewPortHandler` v2 @kind this, `android.graphics.Matrix` v3 @kind object, `android.view.View` v4 @kind object, `boolean` v5 ) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.refresh:(Landroid/graphics/Matrix;Landroid/view/View;Z)Landroid/graphics/Matrix;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a694c.  v0:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mMatrixTouch` @type ^`android.graphics.Matrix` @kind object;
  #L3a6950.  call `set`(v0, v3) @signature `Landroid/graphics/Matrix;.set:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L3a6956.  v0:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mMatrixTouch` @type ^`android.graphics.Matrix` @kind object;
  #L3a695a.  v1:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a695e.  call `limitTransAndScale`(v2, v0, v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.limitTransAndScale:(Landroid/graphics/Matrix;Landroid/graphics/RectF;)V` @kind virtual;
  #L3a6964.  if v5 == 0 then goto L3a696e;
  #L3a6968.  call `invalidate`(v4) @signature `Landroid/view/View;.invalidate:()V` @kind virtual;
  #L3a696e.  v4:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mMatrixTouch` @type ^`android.graphics.Matrix` @kind object;
  #L3a6972.  call `set`(v3, v4) @signature `Landroid/graphics/Matrix;.set:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L3a6978.  return v3 @kind object;
}
procedure `void` `resetZoom`(`com.github.mikephil.charting.utils.ViewPortHandler` v2 @kind this, `android.graphics.Matrix` v3 @kind object) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.resetZoom:(Landroid/graphics/Matrix;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a728c.  call `reset`(v3) @signature `Landroid/graphics/Matrix;.reset:()V` @kind virtual;
  #L3a7292.  v0:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mMatrixTouch` @type ^`android.graphics.Matrix` @kind object;
  #L3a7296.  call `set`(v3, v0) @signature `Landroid/graphics/Matrix;.set:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L3a729c.  v0:= 1.0F;
  #L3a72a0.  v1:= 0I;
  #L3a72a2.  call temp:= `postScale`(v3, v0, v0, v1, v1) @signature `Landroid/graphics/Matrix;.postScale:(FFFF)Z` @kind virtual;
  #L3a72a8.  return @kind void;
}
procedure `void` `restrainViewPort`(`com.github.mikephil.charting.utils.ViewPortHandler` v2 @kind this, `float` v3 , `float` v4 , `float` v5 , `float` v6 ) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.restrainViewPort:(FFFF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a72bc.  v0:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a72c0.  v1:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mChartWidth` @type ^`float`;
  #L3a72c4.  v1:= v1 - v5 @kind float;
  #L3a72c6.  v5:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mChartHeight` @type ^`float`;
  #L3a72ca.  v5:= v5 - v6 @kind float;
  #L3a72cc.  call `set`(v0, v3, v4, v1, v5) @signature `Landroid/graphics/RectF;.set:(FFFF)V` @kind virtual;
  #L3a72d2.  return @kind void;
}
procedure `void` `setChartDimens`(`com.github.mikephil.charting.utils.ViewPortHandler` v4 @kind this, `float` v5 , `float` v6 ) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setChartDimens:(FF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a72e4.  call temp:= `offsetLeft`(v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.offsetLeft:()F` @kind virtual;
  #L3a72ea.  v0:= temp;
  #L3a72ec.  call temp:= `offsetTop`(v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.offsetTop:()F` @kind virtual;
  #L3a72f2.  v1:= temp;
  #L3a72f4.  call temp:= `offsetRight`(v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.offsetRight:()F` @kind virtual;
  #L3a72fa.  v2:= temp;
  #L3a72fc.  call temp:= `offsetBottom`(v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.offsetBottom:()F` @kind virtual;
  #L3a7302.  v3:= temp;
  #L3a7304.  v4.`com.github.mikephil.charting.utils.ViewPortHandler.mChartHeight` @type ^`float` := v6;
  #L3a7308.  v4.`com.github.mikephil.charting.utils.ViewPortHandler.mChartWidth` @type ^`float` := v5;
  #L3a730c.  call `restrainViewPort`(v4, v0, v1, v2, v3) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.restrainViewPort:(FFFF)V` @kind virtual;
  #L3a7312.  return @kind void;
}
procedure `void` `setDragOffsetX`(`com.github.mikephil.charting.utils.ViewPortHandler` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setDragOffsetX:(F)V` @AccessFlag PUBLIC {
    temp;

  #L3a7324.  call temp:= `convertDpToPixel`(v1) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L3a732a.  v1:= temp;
  #L3a732c.  v0.`com.github.mikephil.charting.utils.ViewPortHandler.mTransOffsetX` @type ^`float` := v1;
  #L3a7330.  return @kind void;
}
procedure `void` `setDragOffsetY`(`com.github.mikephil.charting.utils.ViewPortHandler` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setDragOffsetY:(F)V` @AccessFlag PUBLIC {
    temp;

  #L3a7344.  call temp:= `convertDpToPixel`(v1) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L3a734a.  v1:= temp;
  #L3a734c.  v0.`com.github.mikephil.charting.utils.ViewPortHandler.mTransOffsetY` @type ^`float` := v1;
  #L3a7350.  return @kind void;
}
procedure `void` `setMaximumScaleX`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this, `float` v2 ) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setMaximumScaleX:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a7364.  v0:= 0I;
  #L3a7366.  v0:= fcmpl(v2, v0);
  #L3a736a.  if v0 != 0 then goto L3a7374;
  #L3a736e.  v2:= 2139095039I;
  #L3a7374.  v1.`com.github.mikephil.charting.utils.ViewPortHandler.mMaxScaleX` @type ^`float` := v2;
  #L3a7378.  v2:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mMatrixTouch` @type ^`android.graphics.Matrix` @kind object;
  #L3a737c.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a7380.  call `limitTransAndScale`(v1, v2, v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.limitTransAndScale:(Landroid/graphics/Matrix;Landroid/graphics/RectF;)V` @kind virtual;
  #L3a7386.  return @kind void;
}
procedure `void` `setMaximumScaleY`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this, `float` v2 ) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setMaximumScaleY:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a7398.  v0:= 0I;
  #L3a739a.  v0:= fcmpl(v2, v0);
  #L3a739e.  if v0 != 0 then goto L3a73a8;
  #L3a73a2.  v2:= 2139095039I;
  #L3a73a8.  v1.`com.github.mikephil.charting.utils.ViewPortHandler.mMaxScaleY` @type ^`float` := v2;
  #L3a73ac.  v2:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mMatrixTouch` @type ^`android.graphics.Matrix` @kind object;
  #L3a73b0.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a73b4.  call `limitTransAndScale`(v1, v2, v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.limitTransAndScale:(Landroid/graphics/Matrix;Landroid/graphics/RectF;)V` @kind virtual;
  #L3a73ba.  return @kind void;
}
procedure `void` `setMinMaxScaleX`(`com.github.mikephil.charting.utils.ViewPortHandler` v2 @kind this, `float` v3 , `float` v4 ) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setMinMaxScaleX:(FF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a73cc.  v0:= 1.0F;
  #L3a73d0.  v1:= fcmpg(v3, v0);
  #L3a73d4.  if v1 >= 0 then goto L3a73dc;
  #L3a73d8.  v3:= 1.0F;
  #L3a73dc.  v0:= 0I;
  #L3a73de.  v0:= fcmpl(v4, v0);
  #L3a73e2.  if v0 != 0 then goto L3a73ec;
  #L3a73e6.  v4:= 2139095039I;
  #L3a73ec.  v2.`com.github.mikephil.charting.utils.ViewPortHandler.mMinScaleX` @type ^`float` := v3;
  #L3a73f0.  v2.`com.github.mikephil.charting.utils.ViewPortHandler.mMaxScaleX` @type ^`float` := v4;
  #L3a73f4.  v3:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mMatrixTouch` @type ^`android.graphics.Matrix` @kind object;
  #L3a73f8.  v4:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a73fc.  call `limitTransAndScale`(v2, v3, v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.limitTransAndScale:(Landroid/graphics/Matrix;Landroid/graphics/RectF;)V` @kind virtual;
  #L3a7402.  return @kind void;
}
procedure `void` `setMinMaxScaleY`(`com.github.mikephil.charting.utils.ViewPortHandler` v2 @kind this, `float` v3 , `float` v4 ) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setMinMaxScaleY:(FF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a7414.  v0:= 1.0F;
  #L3a7418.  v1:= fcmpg(v3, v0);
  #L3a741c.  if v1 >= 0 then goto L3a7424;
  #L3a7420.  v3:= 1.0F;
  #L3a7424.  v0:= 0I;
  #L3a7426.  v0:= fcmpl(v4, v0);
  #L3a742a.  if v0 != 0 then goto L3a7434;
  #L3a742e.  v4:= 2139095039I;
  #L3a7434.  v2.`com.github.mikephil.charting.utils.ViewPortHandler.mMinScaleY` @type ^`float` := v3;
  #L3a7438.  v2.`com.github.mikephil.charting.utils.ViewPortHandler.mMaxScaleY` @type ^`float` := v4;
  #L3a743c.  v3:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mMatrixTouch` @type ^`android.graphics.Matrix` @kind object;
  #L3a7440.  v4:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a7444.  call `limitTransAndScale`(v2, v3, v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.limitTransAndScale:(Landroid/graphics/Matrix;Landroid/graphics/RectF;)V` @kind virtual;
  #L3a744a.  return @kind void;
}
procedure `void` `setMinimumScaleX`(`com.github.mikephil.charting.utils.ViewPortHandler` v2 @kind this, `float` v3 ) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setMinimumScaleX:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a745c.  v0:= 1.0F;
  #L3a7460.  v1:= fcmpg(v3, v0);
  #L3a7464.  if v1 >= 0 then goto L3a746c;
  #L3a7468.  v3:= 1.0F;
  #L3a746c.  v2.`com.github.mikephil.charting.utils.ViewPortHandler.mMinScaleX` @type ^`float` := v3;
  #L3a7470.  v3:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mMatrixTouch` @type ^`android.graphics.Matrix` @kind object;
  #L3a7474.  v0:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a7478.  call `limitTransAndScale`(v2, v3, v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.limitTransAndScale:(Landroid/graphics/Matrix;Landroid/graphics/RectF;)V` @kind virtual;
  #L3a747e.  return @kind void;
}
procedure `void` `setMinimumScaleY`(`com.github.mikephil.charting.utils.ViewPortHandler` v2 @kind this, `float` v3 ) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setMinimumScaleY:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a7490.  v0:= 1.0F;
  #L3a7494.  v1:= fcmpg(v3, v0);
  #L3a7498.  if v1 >= 0 then goto L3a74a0;
  #L3a749c.  v3:= 1.0F;
  #L3a74a0.  v2.`com.github.mikephil.charting.utils.ViewPortHandler.mMinScaleY` @type ^`float` := v3;
  #L3a74a4.  v3:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mMatrixTouch` @type ^`android.graphics.Matrix` @kind object;
  #L3a74a8.  v0:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mContentRect` @type ^`android.graphics.RectF` @kind object;
  #L3a74ac.  call `limitTransAndScale`(v2, v3, v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.limitTransAndScale:(Landroid/graphics/Matrix;Landroid/graphics/RectF;)V` @kind virtual;
  #L3a74b2.  return @kind void;
}
procedure `android.graphics.Matrix` `setZoom`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this, `float` v2 , `float` v3 ) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setZoom:(FF)Landroid/graphics/Matrix;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a698c.  v0:= new `android.graphics.Matrix`;
  #L3a6990.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3a6996.  call `setZoom`(v1, v2, v3, v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setZoom:(FFLandroid/graphics/Matrix;)V` @kind virtual;
  #L3a699c.  return v0 @kind object;
}
procedure `android.graphics.Matrix` `setZoom`(`com.github.mikephil.charting.utils.ViewPortHandler` v2 @kind this, `float` v3 , `float` v4 , `float` v5 , `float` v6 ) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setZoom:(FFFF)Landroid/graphics/Matrix;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a69b0.  v0:= new `android.graphics.Matrix`;
  #L3a69b4.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3a69ba.  v1:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mMatrixTouch` @type ^`android.graphics.Matrix` @kind object;
  #L3a69be.  call `set`(v0, v1) @signature `Landroid/graphics/Matrix;.set:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L3a69c4.  call `setScale`(v0, v3, v4, v5, v6) @signature `Landroid/graphics/Matrix;.setScale:(FFFF)V` @kind virtual;
  #L3a69ca.  return v0 @kind object;
}
procedure `void` `setZoom`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this, `float` v2 , `float` v3 , `android.graphics.Matrix` v4 @kind object) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setZoom:(FFLandroid/graphics/Matrix;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a74c4.  call `reset`(v4) @signature `Landroid/graphics/Matrix;.reset:()V` @kind virtual;
  #L3a74ca.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mMatrixTouch` @type ^`android.graphics.Matrix` @kind object;
  #L3a74ce.  call `set`(v4, v0) @signature `Landroid/graphics/Matrix;.set:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L3a74d4.  call `setScale`(v4, v2, v3) @signature `Landroid/graphics/Matrix;.setScale:(FF)V` @kind virtual;
  #L3a74da.  return @kind void;
}
procedure `android.graphics.Matrix` `translate`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this, `float`[] v2 @kind object) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.translate:([F)Landroid/graphics/Matrix;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a69dc.  v0:= new `android.graphics.Matrix`;
  #L3a69e0.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3a69e6.  call `translate`(v1, v2, v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.translate:([FLandroid/graphics/Matrix;)V` @kind virtual;
  #L3a69ec.  return v0 @kind object;
}
procedure `void` `translate`(`com.github.mikephil.charting.utils.ViewPortHandler` v2 @kind this, `float`[] v3 @kind object, `android.graphics.Matrix` v4 @kind object) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.translate:([FLandroid/graphics/Matrix;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a74ec.  call `reset`(v4) @signature `Landroid/graphics/Matrix;.reset:()V` @kind virtual;
  #L3a74f2.  v0:= v2.`com.github.mikephil.charting.utils.ViewPortHandler.mMatrixTouch` @type ^`android.graphics.Matrix` @kind object;
  #L3a74f6.  call `set`(v4, v0) @signature `Landroid/graphics/Matrix;.set:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L3a74fc.  v0:= 0I;
  #L3a74fe.  v0:= v3[v0];
  #L3a7502.  call temp:= `offsetLeft`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.offsetLeft:()F` @kind virtual;
  #L3a7508.  v1:= temp;
  #L3a750a.  v0:= v0 - v1 @kind float;
  #L3a750c.  v1:= 1I;
  #L3a750e.  v3:= v3[v1];
  #L3a7512.  call temp:= `offsetTop`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.offsetTop:()F` @kind virtual;
  #L3a7518.  v1:= temp;
  #L3a751a.  v3:= v3 - v1 @kind float;
  #L3a751c.  v0:= -v0 @kind float;
  #L3a751e.  v3:= -v3 @kind float;
  #L3a7520.  call temp:= `postTranslate`(v4, v0, v3) @signature `Landroid/graphics/Matrix;.postTranslate:(FF)Z` @kind virtual;
  #L3a7526.  return @kind void;
}
procedure `android.graphics.Matrix` `zoom`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this, `float` v2 , `float` v3 ) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.zoom:(FF)Landroid/graphics/Matrix;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6a00.  v0:= new `android.graphics.Matrix`;
  #L3a6a04.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3a6a0a.  call `zoom`(v1, v2, v3, v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.zoom:(FFLandroid/graphics/Matrix;)V` @kind virtual;
  #L3a6a10.  return v0 @kind object;
}
procedure `android.graphics.Matrix` `zoom`(`com.github.mikephil.charting.utils.ViewPortHandler` v7 @kind this, `float` v8 , `float` v9 , `float` v10 , `float` v11 ) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.zoom:(FFFF)Landroid/graphics/Matrix;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a6a24.  v6:= new `android.graphics.Matrix`;
  #L3a6a28.  call `<init>`(v6) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3a6a2e.  v0:= v7 @kind object;
  #L3a6a30.  v1:= v8;
  #L3a6a32.  v2:= v9;
  #L3a6a34.  v3:= v10;
  #L3a6a36.  v4:= v11;
  #L3a6a38.  v5:= v6 @kind object;
  #L3a6a3a.  call `zoom`(v0, v1, v2, v3, v4, v5) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.zoom:(FFFFLandroid/graphics/Matrix;)V` @kind virtual;
  #L3a6a40.  return v6 @kind object;
}
procedure `void` `zoom`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this, `float` v2 , `float` v3 , `float` v4 , `float` v5 , `android.graphics.Matrix` v6 @kind object) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.zoom:(FFFFLandroid/graphics/Matrix;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a7560.  call `reset`(v6) @signature `Landroid/graphics/Matrix;.reset:()V` @kind virtual;
  #L3a7566.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mMatrixTouch` @type ^`android.graphics.Matrix` @kind object;
  #L3a756a.  call `set`(v6, v0) @signature `Landroid/graphics/Matrix;.set:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L3a7570.  call temp:= `postScale`(v6, v2, v3, v4, v5) @signature `Landroid/graphics/Matrix;.postScale:(FFFF)Z` @kind virtual;
  #L3a7576.  return @kind void;
}
procedure `void` `zoom`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this, `float` v2 , `float` v3 , `android.graphics.Matrix` v4 @kind object) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.zoom:(FFLandroid/graphics/Matrix;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a7538.  call `reset`(v4) @signature `Landroid/graphics/Matrix;.reset:()V` @kind virtual;
  #L3a753e.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mMatrixTouch` @type ^`android.graphics.Matrix` @kind object;
  #L3a7542.  call `set`(v4, v0) @signature `Landroid/graphics/Matrix;.set:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L3a7548.  call temp:= `postScale`(v4, v2, v3) @signature `Landroid/graphics/Matrix;.postScale:(FF)Z` @kind virtual;
  #L3a754e.  return @kind void;
}
procedure `android.graphics.Matrix` `zoomIn`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this, `float` v2 , `float` v3 ) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.zoomIn:(FF)Landroid/graphics/Matrix;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6a54.  v0:= new `android.graphics.Matrix`;
  #L3a6a58.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3a6a5e.  call `zoomIn`(v1, v2, v3, v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.zoomIn:(FFLandroid/graphics/Matrix;)V` @kind virtual;
  #L3a6a64.  return v0 @kind object;
}
procedure `void` `zoomIn`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this, `float` v2 , `float` v3 , `android.graphics.Matrix` v4 @kind object) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.zoomIn:(FFLandroid/graphics/Matrix;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a7588.  call `reset`(v4) @signature `Landroid/graphics/Matrix;.reset:()V` @kind virtual;
  #L3a758e.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mMatrixTouch` @type ^`android.graphics.Matrix` @kind object;
  #L3a7592.  call `set`(v4, v0) @signature `Landroid/graphics/Matrix;.set:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L3a7598.  v0:= 1068708659I;
  #L3a759e.  call temp:= `postScale`(v4, v0, v0, v2, v3) @signature `Landroid/graphics/Matrix;.postScale:(FFFF)Z` @kind virtual;
  #L3a75a4.  return @kind void;
}
procedure `android.graphics.Matrix` `zoomOut`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this, `float` v2 , `float` v3 ) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.zoomOut:(FF)Landroid/graphics/Matrix;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a6a78.  v0:= new `android.graphics.Matrix`;
  #L3a6a7c.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3a6a82.  call `zoomOut`(v1, v2, v3, v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.zoomOut:(FFLandroid/graphics/Matrix;)V` @kind virtual;
  #L3a6a88.  return v0 @kind object;
}
procedure `void` `zoomOut`(`com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind this, `float` v2 , `float` v3 , `android.graphics.Matrix` v4 @kind object) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.zoomOut:(FFLandroid/graphics/Matrix;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a75b8.  call `reset`(v4) @signature `Landroid/graphics/Matrix;.reset:()V` @kind virtual;
  #L3a75be.  v0:= v1.`com.github.mikephil.charting.utils.ViewPortHandler.mMatrixTouch` @type ^`android.graphics.Matrix` @kind object;
  #L3a75c2.  call `set`(v4, v0) @signature `Landroid/graphics/Matrix;.set:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L3a75c8.  v0:= 1060320051I;
  #L3a75ce.  call temp:= `postScale`(v4, v0, v0, v2, v3) @signature `Landroid/graphics/Matrix;.postScale:(FFFF)Z` @kind virtual;
  #L3a75d4.  return @kind void;
}
