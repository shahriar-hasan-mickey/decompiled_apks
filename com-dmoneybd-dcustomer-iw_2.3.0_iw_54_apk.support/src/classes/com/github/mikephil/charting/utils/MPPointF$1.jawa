record `com.github.mikephil.charting.utils.MPPointF$1` @kind class @AccessFlag FINAL extends `android.os.Parcelable$Creator` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.utils.MPPointF$1` v0 @kind this) @signature `Lcom/github/mikephil/charting/utils/MPPointF$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3a4d74.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a4d7a.  return @kind void;
}
procedure `com.github.mikephil.charting.utils.MPPointF` `createFromParcel`(`com.github.mikephil.charting.utils.MPPointF$1` v2 @kind this, `android.os.Parcel` v3 @kind object) @signature `Lcom/github/mikephil/charting/utils/MPPointF$1;.createFromParcel:(Landroid/os/Parcel;)Lcom/github/mikephil/charting/utils/MPPointF;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a4d00.  v0:= new `com.github.mikephil.charting.utils.MPPointF`;
  #L3a4d04.  v1:= 0I;
  #L3a4d06.  call `<init>`(v0, v1, v1) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.<init>:(FF)V` @kind direct;
  #L3a4d0c.  call `my_readFromParcel`(v0, v3) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.my_readFromParcel:(Landroid/os/Parcel;)V` @kind virtual;
  #L3a4d12.  return v0 @kind object;
}
procedure `java.lang.Object` `createFromParcel`(`com.github.mikephil.charting.utils.MPPointF$1` v0 @kind this, `android.os.Parcel` v1 @kind object) @signature `Lcom/github/mikephil/charting/utils/MPPointF$1;.createFromParcel:(Landroid/os/Parcel;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3a4d3c.  call temp:= `createFromParcel`(v0, v1) @signature `Lcom/github/mikephil/charting/utils/MPPointF$1;.createFromParcel:(Landroid/os/Parcel;)Lcom/github/mikephil/charting/utils/MPPointF;` @kind virtual;
  #L3a4d42.  v1:= temp @kind object;
  #L3a4d44.  return v1 @kind object;
}
procedure `com.github.mikephil.charting.utils.MPPointF`[] `newArray`(`com.github.mikephil.charting.utils.MPPointF$1` v0 @kind this, `int` v1 ) @signature `Lcom/github/mikephil/charting/utils/MPPointF$1;.newArray:(I)[Lcom/github/mikephil/charting/utils/MPPointF;` @AccessFlag PUBLIC {
    temp;

  #L3a4d24.  v1:= new `com.github.mikephil.charting.utils.MPPointF`[v1];
  #L3a4d28.  return v1 @kind object;
}
procedure `java.lang.Object`[] `newArray`(`com.github.mikephil.charting.utils.MPPointF$1` v0 @kind this, `int` v1 ) @signature `Lcom/github/mikephil/charting/utils/MPPointF$1;.newArray:(I)[Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3a4d58.  call temp:= `newArray`(v0, v1) @signature `Lcom/github/mikephil/charting/utils/MPPointF$1;.newArray:(I)[Lcom/github/mikephil/charting/utils/MPPointF;` @kind virtual;
  #L3a4d5e.  v1:= temp @kind object;
  #L3a4d60.  return v1 @kind object;
}
