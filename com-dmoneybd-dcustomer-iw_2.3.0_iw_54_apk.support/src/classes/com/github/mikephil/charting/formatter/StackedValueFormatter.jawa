record `com.github.mikephil.charting.formatter.StackedValueFormatter` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.formatter.ValueFormatter` @kind class {
  `boolean` `com.github.mikephil.charting.formatter.StackedValueFormatter.mDrawWholeStack` @AccessFlag PRIVATE;
  `java.text.DecimalFormat` `com.github.mikephil.charting.formatter.StackedValueFormatter.mFormat` @AccessFlag PRIVATE;
  `java.lang.String` `com.github.mikephil.charting.formatter.StackedValueFormatter.mSuffix` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.github.mikephil.charting.formatter.StackedValueFormatter` v1 @kind this, `boolean` v2 , `java.lang.String` v3 @kind object, `int` v4 ) @signature `Lcom/github/mikephil/charting/formatter/StackedValueFormatter;.<init>:(ZLjava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3947c0.  call `<init>`(v1) @signature `Lcom/github/mikephil/charting/formatter/ValueFormatter;.<init>:()V` @kind direct;
  #L3947c6.  v1.`com.github.mikephil.charting.formatter.StackedValueFormatter.mDrawWholeStack` @type ^`boolean` := v2 @kind boolean;
  #L3947ca.  v1.`com.github.mikephil.charting.formatter.StackedValueFormatter.mSuffix` @type ^`java.lang.String` := v3 @kind object;
  #L3947ce.  v2:= new `java.lang.StringBuffer`;
  #L3947d2.  call `<init>`(v2) @signature `Ljava/lang/StringBuffer;.<init>:()V` @kind direct;
  #L3947d8.  v3:= 0I;
  #L3947da.  if v3 >= v4 then goto L3947fc;
  #L3947de.  if v3 != 0 then goto L3947ec;
  #L3947e2.  v0:= "." @kind object;
  #L3947e6.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L3947ec.  v0:= "0" @kind object;
  #L3947f0.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L3947f6.  v3:= v3 + 1;
  #L3947fa.  goto L3947da;
  #L3947fc.  v3:= new `java.text.DecimalFormat`;
  #L394800.  v4:= new `java.lang.StringBuilder`;
  #L394804.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39480a.  v0:= "###,###,###,##0" @kind object;
  #L39480e.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L394814.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L39481a.  v2:= temp @kind object;
  #L39481c.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L394822.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L394828.  v2:= temp @kind object;
  #L39482a.  call `<init>`(v3, v2) @signature `Ljava/text/DecimalFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L394830.  v1.`com.github.mikephil.charting.formatter.StackedValueFormatter.mFormat` @type ^`java.text.DecimalFormat` := v3 @kind object;
  #L394834.  return @kind void;
}
procedure `java.lang.String` `getBarStackedLabel`(`com.github.mikephil.charting.formatter.StackedValueFormatter` v3 @kind this, `float` v4 , `com.github.mikephil.charting.data.BarEntry` v5 @kind object) @signature `Lcom/github/mikephil/charting/formatter/StackedValueFormatter;.getBarStackedLabel:(FLcom/github/mikephil/charting/data/BarEntry;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L394718.  v0:= v3.`com.github.mikephil.charting.formatter.StackedValueFormatter.mDrawWholeStack` @type ^`boolean` @kind boolean;
  #L39471c.  if v0 != 0 then goto L39477e;
  #L394720.  call temp:= `getYVals`(v5) @signature `Lcom/github/mikephil/charting/data/BarEntry;.getYVals:()[F` @kind virtual;
  #L394726.  v0:= temp @kind object;
  #L394728.  if v0 == 0 then goto L39477e;
  #L39472c.  v1:= length @variable v0;
  #L39472e.  v1:= v1 + -1;
  #L394732.  v0:= v0[v1];
  #L394736.  v4:= fcmpl(v0, v4);
  #L39473a.  if v4 != 0 then goto L394778;
  #L39473e.  v4:= new `java.lang.StringBuilder`;
  #L394742.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L394748.  v0:= v3.`com.github.mikephil.charting.formatter.StackedValueFormatter.mFormat` @type ^`java.text.DecimalFormat` @kind object;
  #L39474c.  call temp:= `getY`(v5) @signature `Lcom/github/mikephil/charting/data/BarEntry;.getY:()F` @kind virtual;
  #L394752.  v5:= temp;
  #L394754.  v1:= (`double`) v5 @kind f2d;
  #L394756.  call temp:= `format`(v0, v1) @signature `Ljava/text/DecimalFormat;.format:(D)Ljava/lang/String;` @kind virtual;
  #L39475c.  v5:= temp @kind object;
  #L39475e.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L394764.  v5:= v3.`com.github.mikephil.charting.formatter.StackedValueFormatter.mSuffix` @type ^`java.lang.String` @kind object;
  #L394768.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39476e.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L394774.  v4:= temp @kind object;
  #L394776.  return v4 @kind object;
  #L394778.  v4:= "" @kind object;
  #L39477c.  return v4 @kind object;
  #L39477e.  v5:= new `java.lang.StringBuilder`;
  #L394782.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L394788.  v0:= v3.`com.github.mikephil.charting.formatter.StackedValueFormatter.mFormat` @type ^`java.text.DecimalFormat` @kind object;
  #L39478c.  v1:= (`double`) v4 @kind f2d;
  #L39478e.  call temp:= `format`(v0, v1) @signature `Ljava/text/DecimalFormat;.format:(D)Ljava/lang/String;` @kind virtual;
  #L394794.  v4:= temp @kind object;
  #L394796.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39479c.  v4:= v3.`com.github.mikephil.charting.formatter.StackedValueFormatter.mSuffix` @type ^`java.lang.String` @kind object;
  #L3947a0.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3947a6.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3947ac.  v4:= temp @kind object;
  #L3947ae.  return v4 @kind object;
}
