record `com.github.mikephil.charting.data.BaseDataSet` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.github.mikephil.charting.interfaces.datasets.IDataSet` @kind interface {
  `com.github.mikephil.charting.components.YAxis$AxisDependency` `com.github.mikephil.charting.data.BaseDataSet.mAxisDependency` @AccessFlag PROTECTED;
  `java.util.List` `com.github.mikephil.charting.data.BaseDataSet.mColors` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.data.BaseDataSet.mDrawIcons` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.data.BaseDataSet.mDrawValues` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.components.Legend$LegendForm` `com.github.mikephil.charting.data.BaseDataSet.mForm` @AccessFlag PRIVATE;
  `android.graphics.DashPathEffect` `com.github.mikephil.charting.data.BaseDataSet.mFormLineDashEffect` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.data.BaseDataSet.mFormLineWidth` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.data.BaseDataSet.mFormSize` @AccessFlag PRIVATE;
  `com.github.mikephil.charting.model.GradientColor` `com.github.mikephil.charting.data.BaseDataSet.mGradientColor` @AccessFlag PROTECTED;
  `java.util.List` `com.github.mikephil.charting.data.BaseDataSet.mGradientColors` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.data.BaseDataSet.mHighlightEnabled` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.utils.MPPointF` `com.github.mikephil.charting.data.BaseDataSet.mIconsOffset` @AccessFlag PROTECTED;
  `java.lang.String` `com.github.mikephil.charting.data.BaseDataSet.mLabel` @AccessFlag PRIVATE;
  `java.util.List` `com.github.mikephil.charting.data.BaseDataSet.mValueColors` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.formatter.ValueFormatter` `com.github.mikephil.charting.data.BaseDataSet.mValueFormatter` @AccessFlag PROTECTED_TRANSIENT;
  `float` `com.github.mikephil.charting.data.BaseDataSet.mValueTextSize` @AccessFlag PROTECTED;
  `android.graphics.Typeface` `com.github.mikephil.charting.data.BaseDataSet.mValueTypeface` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.data.BaseDataSet.mVisible` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.BaseDataSet` v4 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L38f1c4.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38f1ca.  v0:= 0I;
  #L38f1cc.  v4.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` := v0 @kind object;
  #L38f1d0.  v4.`com.github.mikephil.charting.data.BaseDataSet.mGradientColor` @type ^`com.github.mikephil.charting.model.GradientColor` := v0 @kind object;
  #L38f1d4.  v4.`com.github.mikephil.charting.data.BaseDataSet.mGradientColors` @type ^`java.util.List` := v0 @kind object;
  #L38f1d8.  v4.`com.github.mikephil.charting.data.BaseDataSet.mValueColors` @type ^`java.util.List` := v0 @kind object;
  #L38f1dc.  v1:= "DataSet" @kind object;
  #L38f1e0.  v4.`com.github.mikephil.charting.data.BaseDataSet.mLabel` @type ^`java.lang.String` := v1 @kind object;
  #L38f1e4.  v1:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L38f1e8.  v4.`com.github.mikephil.charting.data.BaseDataSet.mAxisDependency` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` := v1 @kind object;
  #L38f1ec.  v1:= 1I;
  #L38f1ee.  v4.`com.github.mikephil.charting.data.BaseDataSet.mHighlightEnabled` @type ^`boolean` := v1 @kind boolean;
  #L38f1f2.  v2:= `@@com.github.mikephil.charting.components.Legend$LegendForm.DEFAULT` @type ^`com.github.mikephil.charting.components.Legend$LegendForm` @kind object;
  #L38f1f6.  v4.`com.github.mikephil.charting.data.BaseDataSet.mForm` @type ^`com.github.mikephil.charting.components.Legend$LegendForm` := v2 @kind object;
  #L38f1fa.  v2:= NaNF;
  #L38f1fe.  v4.`com.github.mikephil.charting.data.BaseDataSet.mFormSize` @type ^`float` := v2;
  #L38f202.  v4.`com.github.mikephil.charting.data.BaseDataSet.mFormLineWidth` @type ^`float` := v2;
  #L38f206.  v4.`com.github.mikephil.charting.data.BaseDataSet.mFormLineDashEffect` @type ^`android.graphics.DashPathEffect` := v0 @kind object;
  #L38f20a.  v4.`com.github.mikephil.charting.data.BaseDataSet.mDrawValues` @type ^`boolean` := v1 @kind boolean;
  #L38f20e.  v4.`com.github.mikephil.charting.data.BaseDataSet.mDrawIcons` @type ^`boolean` := v1 @kind boolean;
  #L38f212.  v0:= new `com.github.mikephil.charting.utils.MPPointF`;
  #L38f216.  call `<init>`(v0) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.<init>:()V` @kind direct;
  #L38f21c.  v4.`com.github.mikephil.charting.data.BaseDataSet.mIconsOffset` @type ^`com.github.mikephil.charting.utils.MPPointF` := v0 @kind object;
  #L38f220.  v0:= 17.0F;
  #L38f224.  v4.`com.github.mikephil.charting.data.BaseDataSet.mValueTextSize` @type ^`float` := v0;
  #L38f228.  v4.`com.github.mikephil.charting.data.BaseDataSet.mVisible` @type ^`boolean` := v1 @kind boolean;
  #L38f22c.  v0:= new `java.util.ArrayList`;
  #L38f230.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L38f236.  v4.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` := v0 @kind object;
  #L38f23a.  v0:= new `java.util.ArrayList`;
  #L38f23e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L38f244.  v4.`com.github.mikephil.charting.data.BaseDataSet.mValueColors` @type ^`java.util.List` := v0 @kind object;
  #L38f248.  v0:= v4.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` @kind object;
  #L38f24c.  v1:= 140I;
  #L38f250.  v2:= 234I;
  #L38f254.  v3:= 255I;
  #L38f258.  call temp:= `rgb`(v1, v2, v3) @signature `Landroid/graphics/Color;.rgb:(III)I` @kind static;
  #L38f25e.  v1:= temp;
  #L38f260.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L38f266.  v1:= temp @kind object;
  #L38f268.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38f26e.  v0:= v4.`com.github.mikephil.charting.data.BaseDataSet.mValueColors` @type ^`java.util.List` @kind object;
  #L38f272.  v1:= -16777216I;
  #L38f276.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L38f27c.  v1:= temp @kind object;
  #L38f27e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38f284.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L38f298.  call `<init>`(v0) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.<init>:()V` @kind direct;
  #L38f29e.  v0.`com.github.mikephil.charting.data.BaseDataSet.mLabel` @type ^`java.lang.String` := v1 @kind object;
  #L38f2a2.  return @kind void;
}
procedure `void` `addColor`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this, `int` v2 ) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.addColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f2b4.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` @kind object;
  #L38f2b8.  if v0 != 0 then goto L38f2ca;
  #L38f2bc.  v0:= new `java.util.ArrayList`;
  #L38f2c0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L38f2c6.  v1.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` := v0 @kind object;
  #L38f2ca.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` @kind object;
  #L38f2ce.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L38f2d4.  v2:= temp @kind object;
  #L38f2d6.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38f2dc.  return @kind void;
}
procedure `boolean` `contains`(`com.github.mikephil.charting.data.BaseDataSet` v3 @kind this, `com.github.mikephil.charting.data.Entry` v4 @kind object) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.contains:(Lcom/github/mikephil/charting/data/Entry;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L38ede0.  v0:= 0I;
  #L38ede2.  v1:= 0I;
  #L38ede4.  call temp:= `getEntryCount`(v3) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryCount:()I` @kind interface;
  #L38edea.  v2:= temp;
  #L38edec.  if v1 >= v2 then goto L38ee0e;
  #L38edf0.  call temp:= `getEntryForIndex`(v3, v1) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryForIndex:(I)Lcom/github/mikephil/charting/data/Entry;` @kind interface;
  #L38edf6.  v2:= temp @kind object;
  #L38edf8.  call temp:= `equals`(v2, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L38edfe.  v2:= temp;
  #L38ee00.  if v2 == 0 then goto L38ee08;
  #L38ee04.  v4:= 1I;
  #L38ee06.  return v4;
  #L38ee08.  v1:= v1 + 1;
  #L38ee0c.  goto L38ede4;
  #L38ee0e.  return v0;
}
procedure `void` `copy`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this, `com.github.mikephil.charting.data.BaseDataSet` v2 @kind object) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.copy:(Lcom/github/mikephil/charting/data/BaseDataSet;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L38f2f0.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mAxisDependency` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L38f2f4.  v2.`com.github.mikephil.charting.data.BaseDataSet.mAxisDependency` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` := v0 @kind object;
  #L38f2f8.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` @kind object;
  #L38f2fc.  v2.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` := v0 @kind object;
  #L38f300.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mDrawIcons` @type ^`boolean` @kind boolean;
  #L38f304.  v2.`com.github.mikephil.charting.data.BaseDataSet.mDrawIcons` @type ^`boolean` := v0 @kind boolean;
  #L38f308.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mDrawValues` @type ^`boolean` @kind boolean;
  #L38f30c.  v2.`com.github.mikephil.charting.data.BaseDataSet.mDrawValues` @type ^`boolean` := v0 @kind boolean;
  #L38f310.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mForm` @type ^`com.github.mikephil.charting.components.Legend$LegendForm` @kind object;
  #L38f314.  v2.`com.github.mikephil.charting.data.BaseDataSet.mForm` @type ^`com.github.mikephil.charting.components.Legend$LegendForm` := v0 @kind object;
  #L38f318.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mFormLineDashEffect` @type ^`android.graphics.DashPathEffect` @kind object;
  #L38f31c.  v2.`com.github.mikephil.charting.data.BaseDataSet.mFormLineDashEffect` @type ^`android.graphics.DashPathEffect` := v0 @kind object;
  #L38f320.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mFormLineWidth` @type ^`float`;
  #L38f324.  v2.`com.github.mikephil.charting.data.BaseDataSet.mFormLineWidth` @type ^`float` := v0;
  #L38f328.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mFormSize` @type ^`float`;
  #L38f32c.  v2.`com.github.mikephil.charting.data.BaseDataSet.mFormSize` @type ^`float` := v0;
  #L38f330.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mGradientColor` @type ^`com.github.mikephil.charting.model.GradientColor` @kind object;
  #L38f334.  v2.`com.github.mikephil.charting.data.BaseDataSet.mGradientColor` @type ^`com.github.mikephil.charting.model.GradientColor` := v0 @kind object;
  #L38f338.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mGradientColors` @type ^`java.util.List` @kind object;
  #L38f33c.  v2.`com.github.mikephil.charting.data.BaseDataSet.mGradientColors` @type ^`java.util.List` := v0 @kind object;
  #L38f340.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mHighlightEnabled` @type ^`boolean` @kind boolean;
  #L38f344.  v2.`com.github.mikephil.charting.data.BaseDataSet.mHighlightEnabled` @type ^`boolean` := v0 @kind boolean;
  #L38f348.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mIconsOffset` @type ^`com.github.mikephil.charting.utils.MPPointF` @kind object;
  #L38f34c.  v2.`com.github.mikephil.charting.data.BaseDataSet.mIconsOffset` @type ^`com.github.mikephil.charting.utils.MPPointF` := v0 @kind object;
  #L38f350.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mValueColors` @type ^`java.util.List` @kind object;
  #L38f354.  v2.`com.github.mikephil.charting.data.BaseDataSet.mValueColors` @type ^`java.util.List` := v0 @kind object;
  #L38f358.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mValueFormatter` @type ^`com.github.mikephil.charting.formatter.ValueFormatter` @kind object;
  #L38f35c.  v2.`com.github.mikephil.charting.data.BaseDataSet.mValueFormatter` @type ^`com.github.mikephil.charting.formatter.ValueFormatter` := v0 @kind object;
  #L38f360.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mValueColors` @type ^`java.util.List` @kind object;
  #L38f364.  v2.`com.github.mikephil.charting.data.BaseDataSet.mValueColors` @type ^`java.util.List` := v0 @kind object;
  #L38f368.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mValueTextSize` @type ^`float`;
  #L38f36c.  v2.`com.github.mikephil.charting.data.BaseDataSet.mValueTextSize` @type ^`float` := v0;
  #L38f370.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mVisible` @type ^`boolean` @kind boolean;
  #L38f374.  v2.`com.github.mikephil.charting.data.BaseDataSet.mVisible` @type ^`boolean` := v0 @kind boolean;
  #L38f378.  return @kind void;
}
procedure `com.github.mikephil.charting.components.YAxis$AxisDependency` `getAxisDependency`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getAxisDependency:()Lcom/github/mikephil/charting/components/YAxis$AxisDependency;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38ef78.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mAxisDependency` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L38ef7c.  return v0 @kind object;
}
procedure `int` `getColor`(`com.github.mikephil.charting.data.BaseDataSet` v2 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getColor:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38f060.  v0:= v2.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` @kind object;
  #L38f064.  v1:= 0I;
  #L38f066.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L38f06c.  v0:= temp @kind object;
  #L38f06e.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L38f072.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L38f078.  v0:= temp;
  #L38f07a.  return v0;
}
procedure `int` `getColor`(`com.github.mikephil.charting.data.BaseDataSet` v2 @kind this, `int` v3 ) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getColor:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38f08c.  v0:= v2.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` @kind object;
  #L38f090.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L38f096.  v1:= temp;
  #L38f098.  v3:= v3 %% v1 @kind int;
  #L38f09a.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L38f0a0.  v3:= temp @kind object;
  #L38f0a2.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L38f0a6.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L38f0ac.  v3:= temp;
  #L38f0ae.  return v3;
}
procedure `java.util.List` `getColors`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getColors:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f17c.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` @kind object;
  #L38f180.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.components.Legend$LegendForm` `getForm`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getForm:()Lcom/github/mikephil/charting/components/Legend$LegendForm;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38ef60.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mForm` @type ^`com.github.mikephil.charting.components.Legend$LegendForm` @kind object;
  #L38ef64.  return v0 @kind object;
}
procedure `android.graphics.DashPathEffect` `getFormLineDashEffect`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getFormLineDashEffect:()Landroid/graphics/DashPathEffect;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38edb0.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mFormLineDashEffect` @type ^`android.graphics.DashPathEffect` @kind object;
  #L38edb4.  return v0 @kind object;
}
procedure `float` `getFormLineWidth`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getFormLineWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f018.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mFormLineWidth` @type ^`float`;
  #L38f01c.  return v0;
}
procedure `float` `getFormSize`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getFormSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f030.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mFormSize` @type ^`float`;
  #L38f034.  return v0;
}
procedure `com.github.mikephil.charting.model.GradientColor` `getGradientColor`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getGradientColor:()Lcom/github/mikephil/charting/model/GradientColor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38efbc.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mGradientColor` @type ^`com.github.mikephil.charting.model.GradientColor` @kind object;
  #L38efc0.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.model.GradientColor` `getGradientColor`(`com.github.mikephil.charting.data.BaseDataSet` v2 @kind this, `int` v3 ) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getGradientColor:(I)Lcom/github/mikephil/charting/model/GradientColor;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38efd4.  v0:= v2.`com.github.mikephil.charting.data.BaseDataSet.mGradientColors` @type ^`java.util.List` @kind object;
  #L38efd8.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L38efde.  v1:= temp;
  #L38efe0.  v3:= v3 %% v1 @kind int;
  #L38efe2.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L38efe8.  v3:= temp @kind object;
  #L38efea.  v3:= (`com.github.mikephil.charting.model.GradientColor`) v3 @kind object;
  #L38efee.  return v3 @kind object;
}
procedure `java.util.List` `getGradientColors`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getGradientColors:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f194.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mGradientColors` @type ^`java.util.List` @kind object;
  #L38f198.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.utils.MPPointF` `getIconsOffset`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getIconsOffset:()Lcom/github/mikephil/charting/utils/MPPointF;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f000.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mIconsOffset` @type ^`com.github.mikephil.charting.utils.MPPointF` @kind object;
  #L38f004.  return v0 @kind object;
}
procedure `int` `getIndexInEntries`(`com.github.mikephil.charting.data.BaseDataSet` v3 @kind this, `int` v4 ) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getIndexInEntries:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L38f0c0.  v0:= 0I;
  #L38f0c2.  call temp:= `getEntryCount`(v3) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryCount:()I` @kind interface;
  #L38f0c8.  v1:= temp;
  #L38f0ca.  if v0 >= v1 then goto L38f0f0;
  #L38f0ce.  v1:= (`float`) v4 @kind i2f;
  #L38f0d0.  call temp:= `getEntryForIndex`(v3, v0) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryForIndex:(I)Lcom/github/mikephil/charting/data/Entry;` @kind interface;
  #L38f0d6.  v2:= temp @kind object;
  #L38f0d8.  call temp:= `getX`(v2) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L38f0de.  v2:= temp;
  #L38f0e0.  v1:= fcmpl(v1, v2);
  #L38f0e4.  if v1 != 0 then goto L38f0ea;
  #L38f0e8.  return v0;
  #L38f0ea.  v0:= v0 + 1;
  #L38f0ee.  goto L38f0c2;
  #L38f0f0.  v4:= -1I;
  #L38f0f2.  return v4;
}
procedure `java.lang.String` `getLabel`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getLabel:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f164.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mLabel` @type ^`java.lang.String` @kind object;
  #L38f168.  return v0 @kind object;
}
procedure `java.util.List` `getValueColors`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getValueColors:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f1ac.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mValueColors` @type ^`java.util.List` @kind object;
  #L38f1b0.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.formatter.ValueFormatter` `getValueFormatter`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getValueFormatter:()Lcom/github/mikephil/charting/formatter/ValueFormatter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38ef90.  call temp:= `needsFormatter`(v1) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.needsFormatter:()Z` @kind virtual;
  #L38ef96.  v0:= temp;
  #L38ef98.  if v0 == 0 then goto L38efa6;
  #L38ef9c.  call temp:= `getDefaultValueFormatter`() @signature `Lcom/github/mikephil/charting/utils/Utils;.getDefaultValueFormatter:()Lcom/github/mikephil/charting/formatter/ValueFormatter;` @kind static;
  #L38efa2.  v0:= temp @kind object;
  #L38efa4.  return v0 @kind object;
  #L38efa6.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mValueFormatter` @type ^`com.github.mikephil.charting.formatter.ValueFormatter` @kind object;
  #L38efaa.  return v0 @kind object;
}
procedure `int` `getValueTextColor`(`com.github.mikephil.charting.data.BaseDataSet` v2 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getValueTextColor:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38f104.  v0:= v2.`com.github.mikephil.charting.data.BaseDataSet.mValueColors` @type ^`java.util.List` @kind object;
  #L38f108.  v1:= 0I;
  #L38f10a.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L38f110.  v0:= temp @kind object;
  #L38f112.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L38f116.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L38f11c.  v0:= temp;
  #L38f11e.  return v0;
}
procedure `int` `getValueTextColor`(`com.github.mikephil.charting.data.BaseDataSet` v2 @kind this, `int` v3 ) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getValueTextColor:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38f130.  v0:= v2.`com.github.mikephil.charting.data.BaseDataSet.mValueColors` @type ^`java.util.List` @kind object;
  #L38f134.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L38f13a.  v1:= temp;
  #L38f13c.  v3:= v3 %% v1 @kind int;
  #L38f13e.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L38f144.  v3:= temp @kind object;
  #L38f146.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L38f14a.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L38f150.  v3:= temp;
  #L38f152.  return v3;
}
procedure `float` `getValueTextSize`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getValueTextSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f048.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mValueTextSize` @type ^`float`;
  #L38f04c.  return v0;
}
procedure `android.graphics.Typeface` `getValueTypeface`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getValueTypeface:()Landroid/graphics/Typeface;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38edc8.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mValueTypeface` @type ^`android.graphics.Typeface` @kind object;
  #L38edcc.  return v0 @kind object;
}
procedure `boolean` `isDrawIconsEnabled`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.isDrawIconsEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38ee20.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mDrawIcons` @type ^`boolean` @kind boolean;
  #L38ee24.  return v0;
}
procedure `boolean` `isDrawValuesEnabled`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.isDrawValuesEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38ee38.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mDrawValues` @type ^`boolean` @kind boolean;
  #L38ee3c.  return v0;
}
procedure `boolean` `isHighlightEnabled`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.isHighlightEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38ee50.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mHighlightEnabled` @type ^`boolean` @kind boolean;
  #L38ee54.  return v0;
}
procedure `boolean` `isVisible`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.isVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38ee68.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mVisible` @type ^`boolean` @kind boolean;
  #L38ee6c.  return v0;
}
procedure `boolean` `needsFormatter`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.needsFormatter:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38ee80.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mValueFormatter` @type ^`com.github.mikephil.charting.formatter.ValueFormatter` @kind object;
  #L38ee84.  if v0 != 0 then goto L38ee8c;
  #L38ee88.  v0:= 1I;
  #L38ee8a.  goto L38ee8e;
  #L38ee8c.  v0:= 0I;
  #L38ee8e.  return v0;
}
procedure `void` `notifyDataSetChanged`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.notifyDataSetChanged:()V` @AccessFlag PUBLIC {
    temp;

  #L38f38c.  call `calcMinMax`(v0) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.calcMinMax:()V` @kind interface;
  #L38f392.  return @kind void;
}
procedure `boolean` `removeEntry`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `int` v1 ) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.removeEntry:(I)Z` @AccessFlag PUBLIC {
    temp;

  #L38eea0.  call temp:= `getEntryForIndex`(v0, v1) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryForIndex:(I)Lcom/github/mikephil/charting/data/Entry;` @kind interface;
  #L38eea6.  v1:= temp @kind object;
  #L38eea8.  call temp:= `removeEntry`(v0, v1) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.removeEntry:(Lcom/github/mikephil/charting/data/Entry;)Z` @kind interface;
  #L38eeae.  v1:= temp;
  #L38eeb0.  return v1;
}
procedure `boolean` `removeEntryByXValue`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this, `float` v2 ) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.removeEntryByXValue:(F)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38eec4.  v0:= NaNF;
  #L38eec8.  call temp:= `getEntryForXValue`(v1, v2, v0) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryForXValue:(FF)Lcom/github/mikephil/charting/data/Entry;` @kind interface;
  #L38eece.  v2:= temp @kind object;
  #L38eed0.  call temp:= `removeEntry`(v1, v2) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.removeEntry:(Lcom/github/mikephil/charting/data/Entry;)Z` @kind interface;
  #L38eed6.  v2:= temp;
  #L38eed8.  return v2;
}
procedure `boolean` `removeFirst`(`com.github.mikephil.charting.data.BaseDataSet` v2 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.removeFirst:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38eeec.  call temp:= `getEntryCount`(v2) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryCount:()I` @kind interface;
  #L38eef2.  v0:= temp;
  #L38eef4.  v1:= 0I;
  #L38eef6.  if v0 <= 0 then goto L38ef0c;
  #L38eefa.  call temp:= `getEntryForIndex`(v2, v1) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryForIndex:(I)Lcom/github/mikephil/charting/data/Entry;` @kind interface;
  #L38ef00.  v0:= temp @kind object;
  #L38ef02.  call temp:= `removeEntry`(v2, v0) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.removeEntry:(Lcom/github/mikephil/charting/data/Entry;)Z` @kind interface;
  #L38ef08.  v0:= temp;
  #L38ef0a.  return v0;
  #L38ef0c.  return v1;
}
procedure `boolean` `removeLast`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.removeLast:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38ef20.  call temp:= `getEntryCount`(v1) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryCount:()I` @kind interface;
  #L38ef26.  v0:= temp;
  #L38ef28.  if v0 <= 0 then goto L38ef4a;
  #L38ef2c.  call temp:= `getEntryCount`(v1) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryCount:()I` @kind interface;
  #L38ef32.  v0:= temp;
  #L38ef34.  v0:= v0 + -1;
  #L38ef38.  call temp:= `getEntryForIndex`(v1, v0) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryForIndex:(I)Lcom/github/mikephil/charting/data/Entry;` @kind interface;
  #L38ef3e.  v0:= temp @kind object;
  #L38ef40.  call temp:= `removeEntry`(v1, v0) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.removeEntry:(Lcom/github/mikephil/charting/data/Entry;)Z` @kind interface;
  #L38ef46.  v0:= temp;
  #L38ef48.  return v0;
  #L38ef4a.  v0:= 0I;
  #L38ef4c.  return v0;
}
procedure `void` `resetColors`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.resetColors:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f3a4.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` @kind object;
  #L38f3a8.  if v0 != 0 then goto L38f3ba;
  #L38f3ac.  v0:= new `java.util.ArrayList`;
  #L38f3b0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L38f3b6.  v1.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` := v0 @kind object;
  #L38f3ba.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` @kind object;
  #L38f3be.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L38f3c4.  return @kind void;
}
procedure `void` `setAxisDependency`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `com.github.mikephil.charting.components.YAxis$AxisDependency` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setAxisDependency:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @AccessFlag PUBLIC {
    temp;

  #L38f3d8.  v0.`com.github.mikephil.charting.data.BaseDataSet.mAxisDependency` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` := v1 @kind object;
  #L38f3dc.  return @kind void;
}
procedure `void` `setColor`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this, `int` v2 ) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f3f0.  call `resetColors`(v1) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.resetColors:()V` @kind virtual;
  #L38f3f6.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` @kind object;
  #L38f3fa.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L38f400.  v2:= temp @kind object;
  #L38f402.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38f408.  return @kind void;
}
procedure `void` `setColor`(`com.github.mikephil.charting.data.BaseDataSet` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setColor:(II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38f41c.  call temp:= `red`(v3) @signature `Landroid/graphics/Color;.red:(I)I` @kind static;
  #L38f422.  v0:= temp;
  #L38f424.  call temp:= `green`(v3) @signature `Landroid/graphics/Color;.green:(I)I` @kind static;
  #L38f42a.  v1:= temp;
  #L38f42c.  call temp:= `blue`(v3) @signature `Landroid/graphics/Color;.blue:(I)I` @kind static;
  #L38f432.  v3:= temp;
  #L38f434.  call temp:= `argb`(v4, v0, v1, v3) @signature `Landroid/graphics/Color;.argb:(IIII)I` @kind static;
  #L38f43a.  v3:= temp;
  #L38f43c.  call `setColor`(v2, v3) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setColor:(I)V` @kind virtual;
  #L38f442.  return @kind void;
}
procedure `void` `setColors`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setColors:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L38f52c.  v0.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` := v1 @kind object;
  #L38f530.  return @kind void;
}
procedure `void` `setColors`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `int`[] v1 @kind object) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setColors:([I)V` @AccessFlag PUBLIC {
    temp;

  #L38f454.  call temp:= `createColors`(v1) @signature `Lcom/github/mikephil/charting/utils/ColorTemplate;.createColors:([I)Ljava/util/List;` @kind static;
  #L38f45a.  v1:= temp @kind object;
  #L38f45c.  v0.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` := v1 @kind object;
  #L38f460.  return @kind void;
}
procedure `void` `setColors`(`com.github.mikephil.charting.data.BaseDataSet` v5 @kind this, `int`[] v6 @kind object, `int` v7 ) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setColors:([II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L38f4dc.  call `resetColors`(v5) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.resetColors:()V` @kind virtual;
  #L38f4e2.  v0:= length @variable v6;
  #L38f4e4.  v1:= 0I;
  #L38f4e6.  if v1 >= v0 then goto L38f51a;
  #L38f4ea.  v2:= v6[v1];
  #L38f4ee.  call temp:= `red`(v2) @signature `Landroid/graphics/Color;.red:(I)I` @kind static;
  #L38f4f4.  v3:= temp;
  #L38f4f6.  call temp:= `green`(v2) @signature `Landroid/graphics/Color;.green:(I)I` @kind static;
  #L38f4fc.  v4:= temp;
  #L38f4fe.  call temp:= `blue`(v2) @signature `Landroid/graphics/Color;.blue:(I)I` @kind static;
  #L38f504.  v2:= temp;
  #L38f506.  call temp:= `argb`(v7, v3, v4, v2) @signature `Landroid/graphics/Color;.argb:(IIII)I` @kind static;
  #L38f50c.  v2:= temp;
  #L38f50e.  call `addColor`(v5, v2) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.addColor:(I)V` @kind virtual;
  #L38f514.  v1:= v1 + 1;
  #L38f518.  goto L38f4e6;
  #L38f51a.  return @kind void;
}
procedure `void` `setColors`(`com.github.mikephil.charting.data.BaseDataSet` v5 @kind this, `int`[] v6 @kind object, `android.content.Context` v7 @kind object) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setColors:([ILandroid/content/Context;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L38f474.  v0:= v5.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` @kind object;
  #L38f478.  if v0 != 0 then goto L38f48a;
  #L38f47c.  v0:= new `java.util.ArrayList`;
  #L38f480.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L38f486.  v5.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` := v0 @kind object;
  #L38f48a.  v0:= v5.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` @kind object;
  #L38f48e.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L38f494.  v0:= length @variable v6;
  #L38f496.  v1:= 0I;
  #L38f498.  if v1 >= v0 then goto L38f4c8;
  #L38f49c.  v2:= v6[v1];
  #L38f4a0.  v3:= v5.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` @kind object;
  #L38f4a4.  call temp:= `getResources`(v7) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L38f4aa.  v4:= temp @kind object;
  #L38f4ac.  call temp:= `getColor`(v4, v2) @signature `Landroid/content/res/Resources;.getColor:(I)I` @kind virtual;
  #L38f4b2.  v2:= temp;
  #L38f4b4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L38f4ba.  v2:= temp @kind object;
  #L38f4bc.  call temp:= `add`(v3, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38f4c2.  v1:= v1 + 1;
  #L38f4c6.  goto L38f498;
  #L38f4c8.  return @kind void;
}
procedure `void` `setDrawIcons`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setDrawIcons:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38f544.  v0.`com.github.mikephil.charting.data.BaseDataSet.mDrawIcons` @type ^`boolean` := v1 @kind boolean;
  #L38f548.  return @kind void;
}
procedure `void` `setDrawValues`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setDrawValues:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38f55c.  v0.`com.github.mikephil.charting.data.BaseDataSet.mDrawValues` @type ^`boolean` := v1 @kind boolean;
  #L38f560.  return @kind void;
}
procedure `void` `setForm`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `com.github.mikephil.charting.components.Legend$LegendForm` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setForm:(Lcom/github/mikephil/charting/components/Legend$LegendForm;)V` @AccessFlag PUBLIC {
    temp;

  #L38f574.  v0.`com.github.mikephil.charting.data.BaseDataSet.mForm` @type ^`com.github.mikephil.charting.components.Legend$LegendForm` := v1 @kind object;
  #L38f578.  return @kind void;
}
procedure `void` `setFormLineDashEffect`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `android.graphics.DashPathEffect` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setFormLineDashEffect:(Landroid/graphics/DashPathEffect;)V` @AccessFlag PUBLIC {
    temp;

  #L38f58c.  v0.`com.github.mikephil.charting.data.BaseDataSet.mFormLineDashEffect` @type ^`android.graphics.DashPathEffect` := v1 @kind object;
  #L38f590.  return @kind void;
}
procedure `void` `setFormLineWidth`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setFormLineWidth:(F)V` @AccessFlag PUBLIC {
    temp;

  #L38f5a4.  v0.`com.github.mikephil.charting.data.BaseDataSet.mFormLineWidth` @type ^`float` := v1;
  #L38f5a8.  return @kind void;
}
procedure `void` `setFormSize`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setFormSize:(F)V` @AccessFlag PUBLIC {
    temp;

  #L38f5bc.  v0.`com.github.mikephil.charting.data.BaseDataSet.mFormSize` @type ^`float` := v1;
  #L38f5c0.  return @kind void;
}
procedure `void` `setGradientColor`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setGradientColor:(II)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f5d4.  v0:= new `com.github.mikephil.charting.model.GradientColor`;
  #L38f5d8.  call `<init>`(v0, v2, v3) @signature `Lcom/github/mikephil/charting/model/GradientColor;.<init>:(II)V` @kind direct;
  #L38f5de.  v1.`com.github.mikephil.charting.data.BaseDataSet.mGradientColor` @type ^`com.github.mikephil.charting.model.GradientColor` := v0 @kind object;
  #L38f5e2.  return @kind void;
}
procedure `void` `setGradientColors`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setGradientColors:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L38f5f4.  v0.`com.github.mikephil.charting.data.BaseDataSet.mGradientColors` @type ^`java.util.List` := v1 @kind object;
  #L38f5f8.  return @kind void;
}
procedure `void` `setHighlightEnabled`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setHighlightEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38f60c.  v0.`com.github.mikephil.charting.data.BaseDataSet.mHighlightEnabled` @type ^`boolean` := v1 @kind boolean;
  #L38f610.  return @kind void;
}
procedure `void` `setIconsOffset`(`com.github.mikephil.charting.data.BaseDataSet` v2 @kind this, `com.github.mikephil.charting.utils.MPPointF` v3 @kind object) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setIconsOffset:(Lcom/github/mikephil/charting/utils/MPPointF;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38f624.  v0:= v2.`com.github.mikephil.charting.data.BaseDataSet.mIconsOffset` @type ^`com.github.mikephil.charting.utils.MPPointF` @kind object;
  #L38f628.  v1:= v3.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L38f62c.  v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float` := v1;
  #L38f630.  v3:= v3.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L38f634.  v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float` := v3;
  #L38f638.  return @kind void;
}
procedure `void` `setLabel`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setLabel:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L38f64c.  v0.`com.github.mikephil.charting.data.BaseDataSet.mLabel` @type ^`java.lang.String` := v1 @kind object;
  #L38f650.  return @kind void;
}
procedure `void` `setValueFormatter`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `com.github.mikephil.charting.formatter.ValueFormatter` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setValueFormatter:(Lcom/github/mikephil/charting/formatter/ValueFormatter;)V` @AccessFlag PUBLIC {
    temp;

  #L38f664.  if v1 != 0 then goto L38f66a;
  #L38f668.  return @kind void;
  #L38f66a.  v0.`com.github.mikephil.charting.data.BaseDataSet.mValueFormatter` @type ^`com.github.mikephil.charting.formatter.ValueFormatter` := v1 @kind object;
  #L38f66e.  return @kind void;
}
procedure `void` `setValueTextColor`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this, `int` v2 ) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setValueTextColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f680.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mValueColors` @type ^`java.util.List` @kind object;
  #L38f684.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L38f68a.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mValueColors` @type ^`java.util.List` @kind object;
  #L38f68e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L38f694.  v2:= temp @kind object;
  #L38f696.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38f69c.  return @kind void;
}
procedure `void` `setValueTextColors`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setValueTextColors:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L38f6b0.  v0.`com.github.mikephil.charting.data.BaseDataSet.mValueColors` @type ^`java.util.List` := v1 @kind object;
  #L38f6b4.  return @kind void;
}
procedure `void` `setValueTextSize`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setValueTextSize:(F)V` @AccessFlag PUBLIC {
    temp;

  #L38f6c8.  call temp:= `convertDpToPixel`(v1) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L38f6ce.  v1:= temp;
  #L38f6d0.  v0.`com.github.mikephil.charting.data.BaseDataSet.mValueTextSize` @type ^`float` := v1;
  #L38f6d4.  return @kind void;
}
procedure `void` `setValueTypeface`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `android.graphics.Typeface` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setValueTypeface:(Landroid/graphics/Typeface;)V` @AccessFlag PUBLIC {
    temp;

  #L38f6e8.  v0.`com.github.mikephil.charting.data.BaseDataSet.mValueTypeface` @type ^`android.graphics.Typeface` := v1 @kind object;
  #L38f6ec.  return @kind void;
}
procedure `void` `setVisible`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setVisible:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38f700.  v0.`com.github.mikephil.charting.data.BaseDataSet.mVisible` @type ^`boolean` := v1 @kind boolean;
  #L38f704.  return @kind void;
}
