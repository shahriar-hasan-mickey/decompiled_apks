record `com.github.mikephil.charting.data.LineRadarDataSet` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.github.mikephil.charting.data.LineScatterCandleRadarDataSet` @kind class, `com.github.mikephil.charting.interfaces.datasets.ILineRadarDataSet` @kind interface {
  `boolean` `com.github.mikephil.charting.data.LineRadarDataSet.mDrawFilled` @AccessFlag PRIVATE;
  `int` `com.github.mikephil.charting.data.LineRadarDataSet.mFillAlpha` @AccessFlag PRIVATE;
  `int` `com.github.mikephil.charting.data.LineRadarDataSet.mFillColor` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.github.mikephil.charting.data.LineRadarDataSet.mFillDrawable` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.data.LineRadarDataSet.mLineWidth` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.LineRadarDataSet` v1 @kind this, `java.util.List` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/github/mikephil/charting/data/LineRadarDataSet;.<init>:(Ljava/util/List;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L392bc4.  call `<init>`(v1, v2, v3) @signature `Lcom/github/mikephil/charting/data/LineScatterCandleRadarDataSet;.<init>:(Ljava/util/List;Ljava/lang/String;)V` @kind direct;
  #L392bca.  v2:= 140I;
  #L392bce.  v3:= 234I;
  #L392bd2.  v0:= 255I;
  #L392bd6.  call temp:= `rgb`(v2, v3, v0) @signature `Landroid/graphics/Color;.rgb:(III)I` @kind static;
  #L392bdc.  v2:= temp;
  #L392bde.  v1.`com.github.mikephil.charting.data.LineRadarDataSet.mFillColor` @type ^`int` := v2;
  #L392be2.  v2:= 85I;
  #L392be6.  v1.`com.github.mikephil.charting.data.LineRadarDataSet.mFillAlpha` @type ^`int` := v2;
  #L392bea.  v2:= 2.5F;
  #L392bee.  v1.`com.github.mikephil.charting.data.LineRadarDataSet.mLineWidth` @type ^`float` := v2;
  #L392bf2.  v2:= 0I;
  #L392bf4.  v1.`com.github.mikephil.charting.data.LineRadarDataSet.mDrawFilled` @type ^`boolean` := v2 @kind boolean;
  #L392bf8.  return @kind void;
}
procedure `void` `copy`(`com.github.mikephil.charting.data.LineRadarDataSet` v1 @kind this, `com.github.mikephil.charting.data.LineRadarDataSet` v2 @kind object) @signature `Lcom/github/mikephil/charting/data/LineRadarDataSet;.copy:(Lcom/github/mikephil/charting/data/LineRadarDataSet;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L392c0c.  call `copy`(v1, v2) @signature `Lcom/github/mikephil/charting/data/LineScatterCandleRadarDataSet;.copy:(Lcom/github/mikephil/charting/data/LineScatterCandleRadarDataSet;)V` @kind super;
  #L392c12.  v0:= v1.`com.github.mikephil.charting.data.LineRadarDataSet.mDrawFilled` @type ^`boolean` @kind boolean;
  #L392c16.  v2.`com.github.mikephil.charting.data.LineRadarDataSet.mDrawFilled` @type ^`boolean` := v0 @kind boolean;
  #L392c1a.  v0:= v1.`com.github.mikephil.charting.data.LineRadarDataSet.mFillAlpha` @type ^`int`;
  #L392c1e.  v2.`com.github.mikephil.charting.data.LineRadarDataSet.mFillAlpha` @type ^`int` := v0;
  #L392c22.  v0:= v1.`com.github.mikephil.charting.data.LineRadarDataSet.mFillColor` @type ^`int`;
  #L392c26.  v2.`com.github.mikephil.charting.data.LineRadarDataSet.mFillColor` @type ^`int` := v0;
  #L392c2a.  v0:= v1.`com.github.mikephil.charting.data.LineRadarDataSet.mFillDrawable` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L392c2e.  v2.`com.github.mikephil.charting.data.LineRadarDataSet.mFillDrawable` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L392c32.  v0:= v1.`com.github.mikephil.charting.data.LineRadarDataSet.mLineWidth` @type ^`float`;
  #L392c36.  v2.`com.github.mikephil.charting.data.LineRadarDataSet.mLineWidth` @type ^`float` := v0;
  #L392c3a.  return @kind void;
}
procedure `int` `getFillAlpha`(`com.github.mikephil.charting.data.LineRadarDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineRadarDataSet;.getFillAlpha:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392b94.  v0:= v1.`com.github.mikephil.charting.data.LineRadarDataSet.mFillAlpha` @type ^`int`;
  #L392b98.  return v0;
}
procedure `int` `getFillColor`(`com.github.mikephil.charting.data.LineRadarDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineRadarDataSet;.getFillColor:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392bac.  v0:= v1.`com.github.mikephil.charting.data.LineRadarDataSet.mFillColor` @type ^`int`;
  #L392bb0.  return v0;
}
procedure `android.graphics.drawable.Drawable` `getFillDrawable`(`com.github.mikephil.charting.data.LineRadarDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineRadarDataSet;.getFillDrawable:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392b4c.  v0:= v1.`com.github.mikephil.charting.data.LineRadarDataSet.mFillDrawable` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L392b50.  return v0 @kind object;
}
procedure `float` `getLineWidth`(`com.github.mikephil.charting.data.LineRadarDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineRadarDataSet;.getLineWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392b7c.  v0:= v1.`com.github.mikephil.charting.data.LineRadarDataSet.mLineWidth` @type ^`float`;
  #L392b80.  return v0;
}
procedure `boolean` `isDrawFilledEnabled`(`com.github.mikephil.charting.data.LineRadarDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineRadarDataSet;.isDrawFilledEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392b64.  v0:= v1.`com.github.mikephil.charting.data.LineRadarDataSet.mDrawFilled` @type ^`boolean` @kind boolean;
  #L392b68.  return v0;
}
procedure `void` `setDrawFilled`(`com.github.mikephil.charting.data.LineRadarDataSet` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/data/LineRadarDataSet;.setDrawFilled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L392c4c.  v0.`com.github.mikephil.charting.data.LineRadarDataSet.mDrawFilled` @type ^`boolean` := v1 @kind boolean;
  #L392c50.  return @kind void;
}
procedure `void` `setFillAlpha`(`com.github.mikephil.charting.data.LineRadarDataSet` v0 @kind this, `int` v1 ) @signature `Lcom/github/mikephil/charting/data/LineRadarDataSet;.setFillAlpha:(I)V` @AccessFlag PUBLIC {
    temp;

  #L392c64.  v0.`com.github.mikephil.charting.data.LineRadarDataSet.mFillAlpha` @type ^`int` := v1;
  #L392c68.  return @kind void;
}
procedure `void` `setFillColor`(`com.github.mikephil.charting.data.LineRadarDataSet` v0 @kind this, `int` v1 ) @signature `Lcom/github/mikephil/charting/data/LineRadarDataSet;.setFillColor:(I)V` @AccessFlag PUBLIC {
    temp;

  #L392c7c.  v0.`com.github.mikephil.charting.data.LineRadarDataSet.mFillColor` @type ^`int` := v1;
  #L392c80.  v1:= 0I;
  #L392c82.  v0.`com.github.mikephil.charting.data.LineRadarDataSet.mFillDrawable` @type ^`android.graphics.drawable.Drawable` := v1 @kind object;
  #L392c86.  return @kind void;
}
procedure `void` `setFillDrawable`(`com.github.mikephil.charting.data.LineRadarDataSet` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/LineRadarDataSet;.setFillDrawable:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;

  #L392c98.  v0.`com.github.mikephil.charting.data.LineRadarDataSet.mFillDrawable` @type ^`android.graphics.drawable.Drawable` := v1 @kind object;
  #L392c9c.  return @kind void;
}
procedure `void` `setLineWidth`(`com.github.mikephil.charting.data.LineRadarDataSet` v2 @kind this, `float` v3 ) @signature `Lcom/github/mikephil/charting/data/LineRadarDataSet;.setLineWidth:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L392cb0.  v0:= 0I;
  #L392cb2.  v1:= fcmpg(v3, v0);
  #L392cb6.  if v1 >= 0 then goto L392cbc;
  #L392cba.  v3:= 0I;
  #L392cbc.  v0:= 10.0F;
  #L392cc0.  v1:= fcmpl(v3, v0);
  #L392cc4.  if v1 <= 0 then goto L392ccc;
  #L392cc8.  v3:= 10.0F;
  #L392ccc.  call temp:= `convertDpToPixel`(v3) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L392cd2.  v3:= temp;
  #L392cd4.  v2.`com.github.mikephil.charting.data.LineRadarDataSet.mLineWidth` @type ^`float` := v3;
  #L392cd8.  return @kind void;
}
