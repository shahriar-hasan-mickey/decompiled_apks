record `com.github.mikephil.charting.data.Entry` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.data.BaseEntry` @kind class, `android.os.Parcelable` @kind interface {
  `float` `com.github.mikephil.charting.data.Entry.x` @AccessFlag PRIVATE;
}
global `android.os.Parcelable$Creator` `@@com.github.mikephil.charting.data.Entry.CREATOR` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/github/mikephil/charting/data/Entry;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L392294.  v0:= new `com.github.mikephil.charting.data.Entry$1`;
  #L392298.  call `<init>`(v0) @signature `Lcom/github/mikephil/charting/data/Entry$1;.<init>:()V` @kind direct;
  #L39229e.  `@@com.github.mikephil.charting.data.Entry.CREATOR` @type ^`android.os.Parcelable$Creator` := v0 @kind object;
  #L3922a2.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.Entry` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/Entry;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3922b4.  call `<init>`(v1) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.<init>:()V` @kind direct;
  #L3922ba.  v0:= 0I;
  #L3922bc.  v1.`com.github.mikephil.charting.data.Entry.x` @type ^`float` := v0;
  #L3922c0.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.Entry` v0 @kind this, `float` v1 , `float` v2 ) @signature `Lcom/github/mikephil/charting/data/Entry;.<init>:(FF)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L392334.  call `<init>`(v0, v2) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.<init>:(F)V` @kind direct;
  #L39233a.  v2:= 0I;
  #L39233c.  v0.`com.github.mikephil.charting.data.Entry.x` @type ^`float` := v2;
  #L392340.  v0.`com.github.mikephil.charting.data.Entry.x` @type ^`float` := v1;
  #L392344.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.Entry` v0 @kind this, `float` v1 , `float` v2 , `android.graphics.drawable.Drawable` v3 @kind object) @signature `Lcom/github/mikephil/charting/data/Entry;.<init>:(FFLandroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L392358.  call `<init>`(v0, v2, v3) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.<init>:(FLandroid/graphics/drawable/Drawable;)V` @kind direct;
  #L39235e.  v2:= 0I;
  #L392360.  v0.`com.github.mikephil.charting.data.Entry.x` @type ^`float` := v2;
  #L392364.  v0.`com.github.mikephil.charting.data.Entry.x` @type ^`float` := v1;
  #L392368.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.Entry` v0 @kind this, `float` v1 , `float` v2 , `android.graphics.drawable.Drawable` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/github/mikephil/charting/data/Entry;.<init>:(FFLandroid/graphics/drawable/Drawable;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L39237c.  call `<init>`(v0, v2, v3, v4) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.<init>:(FLandroid/graphics/drawable/Drawable;Ljava/lang/Object;)V` @kind direct;
  #L392382.  v2:= 0I;
  #L392384.  v0.`com.github.mikephil.charting.data.Entry.x` @type ^`float` := v2;
  #L392388.  v0.`com.github.mikephil.charting.data.Entry.x` @type ^`float` := v1;
  #L39238c.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.Entry` v0 @kind this, `float` v1 , `float` v2 , `java.lang.Object` v3 @kind object) @signature `Lcom/github/mikephil/charting/data/Entry;.<init>:(FFLjava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3923a0.  call `<init>`(v0, v2, v3) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.<init>:(FLjava/lang/Object;)V` @kind direct;
  #L3923a6.  v2:= 0I;
  #L3923a8.  v0.`com.github.mikephil.charting.data.Entry.x` @type ^`float` := v2;
  #L3923ac.  v0.`com.github.mikephil.charting.data.Entry.x` @type ^`float` := v1;
  #L3923b0.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.Entry` v2 @kind this, `android.os.Parcel` v3 @kind object) @signature `Lcom/github/mikephil/charting/data/Entry;.<init>:(Landroid/os/Parcel;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3922d4.  call `<init>`(v2) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.<init>:()V` @kind direct;
  #L3922da.  v0:= 0I;
  #L3922dc.  v2.`com.github.mikephil.charting.data.Entry.x` @type ^`float` := v0;
  #L3922e0.  call temp:= `readFloat`(v3) @signature `Landroid/os/Parcel;.readFloat:()F` @kind virtual;
  #L3922e6.  v0:= temp;
  #L3922e8.  v2.`com.github.mikephil.charting.data.Entry.x` @type ^`float` := v0;
  #L3922ec.  call temp:= `readFloat`(v3) @signature `Landroid/os/Parcel;.readFloat:()F` @kind virtual;
  #L3922f2.  v0:= temp;
  #L3922f4.  call `setY`(v2, v0) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.setY:(F)V` @kind virtual;
  #L3922fa.  call temp:= `readInt`(v3) @signature `Landroid/os/Parcel;.readInt:()I` @kind virtual;
  #L392300.  v0:= temp;
  #L392302.  v1:= 1I;
  #L392304.  if v0 != v1 then goto L392322;
  #L392308.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L39230c.  call temp:= `getClassLoader`(v0) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L392312.  v0:= temp @kind object;
  #L392314.  call temp:= `readParcelable`(v3, v0) @signature `Landroid/os/Parcel;.readParcelable:(Ljava/lang/ClassLoader;)Landroid/os/Parcelable;` @kind virtual;
  #L39231a.  v3:= temp @kind object;
  #L39231c.  call `setData`(v2, v3) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.setData:(Ljava/lang/Object;)V` @kind virtual;
  #L392322.  return @kind void;
}
procedure `com.github.mikephil.charting.data.Entry` `copy`(`com.github.mikephil.charting.data.Entry` v4 @kind this) @signature `Lcom/github/mikephil/charting/data/Entry;.copy:()Lcom/github/mikephil/charting/data/Entry;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3921e8.  v0:= new `com.github.mikephil.charting.data.Entry`;
  #L3921ec.  v1:= v4.`com.github.mikephil.charting.data.Entry.x` @type ^`float`;
  #L3921f0.  call temp:= `getY`(v4) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.getY:()F` @kind virtual;
  #L3921f6.  v2:= temp;
  #L3921f8.  call temp:= `getData`(v4) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.getData:()Ljava/lang/Object;` @kind virtual;
  #L3921fe.  v3:= temp @kind object;
  #L392200.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/github/mikephil/charting/data/Entry;.<init>:(FFLjava/lang/Object;)V` @kind direct;
  #L392206.  return v0 @kind object;
}
procedure `int` `describeContents`(`com.github.mikephil.charting.data.Entry` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/Entry;.describeContents:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392230.  v0:= 0I;
  #L392232.  return v0;
}
procedure `boolean` `equalTo`(`com.github.mikephil.charting.data.Entry` v3 @kind this, `com.github.mikephil.charting.data.Entry` v4 @kind object) @signature `Lcom/github/mikephil/charting/data/Entry;.equalTo:(Lcom/github/mikephil/charting/data/Entry;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L392170.  v0:= 0I;
  #L392172.  if v4 != 0 then goto L392178;
  #L392176.  return v0;
  #L392178.  call temp:= `getData`(v4) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.getData:()Ljava/lang/Object;` @kind virtual;
  #L39217e.  v1:= temp @kind object;
  #L392180.  call temp:= `getData`(v3) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.getData:()Ljava/lang/Object;` @kind virtual;
  #L392186.  v2:= temp @kind object;
  #L392188.  if v1 == v2 then goto L39218e;
  #L39218c.  return v0;
  #L39218e.  v1:= v4.`com.github.mikephil.charting.data.Entry.x` @type ^`float`;
  #L392192.  v2:= v3.`com.github.mikephil.charting.data.Entry.x` @type ^`float`;
  #L392196.  v1:= v1 - v2 @kind float;
  #L392198.  call temp:= `abs`(v1) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L39219e.  v1:= temp;
  #L3921a0.  v2:= `@@com.github.mikephil.charting.utils.Utils.FLOAT_EPSILON` @type ^`float`;
  #L3921a4.  v1:= fcmpl(v1, v2);
  #L3921a8.  if v1 <= 0 then goto L3921ae;
  #L3921ac.  return v0;
  #L3921ae.  call temp:= `getY`(v4) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.getY:()F` @kind virtual;
  #L3921b4.  v4:= temp;
  #L3921b6.  call temp:= `getY`(v3) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.getY:()F` @kind virtual;
  #L3921bc.  v1:= temp;
  #L3921be.  v4:= v4 - v1 @kind float;
  #L3921c0.  call temp:= `abs`(v4) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L3921c6.  v4:= temp;
  #L3921c8.  v4:= fcmpl(v4, v2);
  #L3921cc.  if v4 <= 0 then goto L3921d2;
  #L3921d0.  return v0;
  #L3921d2.  v4:= 1I;
  #L3921d4.  return v4;
}
procedure `float` `getX`(`com.github.mikephil.charting.data.Entry` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392218.  v0:= v1.`com.github.mikephil.charting.data.Entry.x` @type ^`float`;
  #L39221c.  return v0;
}
procedure `void` `setX`(`com.github.mikephil.charting.data.Entry` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/data/Entry;.setX:(F)V` @AccessFlag PUBLIC {
    temp;

  #L3923c4.  v0.`com.github.mikephil.charting.data.Entry.x` @type ^`float` := v1;
  #L3923c8.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.github.mikephil.charting.data.Entry` v2 @kind this) @signature `Lcom/github/mikephil/charting/data/Entry;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L392244.  v0:= new `java.lang.StringBuilder`;
  #L392248.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L39224e.  v1:= "Entry, x: " @kind object;
  #L392252.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L392258.  v1:= v2.`com.github.mikephil.charting.data.Entry.x` @type ^`float`;
  #L39225c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L392262.  v1:= " y: " @kind object;
  #L392266.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L39226c.  call temp:= `getY`(v2) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.getY:()F` @kind virtual;
  #L392272.  v1:= temp;
  #L392274.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L39227a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L392280.  v0:= temp @kind object;
  #L392282.  return v0 @kind object;
}
procedure `void` `writeToParcel`(`com.github.mikephil.charting.data.Entry` v1 @kind this, `android.os.Parcel` v2 @kind object, `int` v3 ) @signature `Lcom/github/mikephil/charting/data/Entry;.writeToParcel:(Landroid/os/Parcel;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3923dc.  v0:= v1.`com.github.mikephil.charting.data.Entry.x` @type ^`float`;
  #L3923e0.  call `writeFloat`(v2, v0) @signature `Landroid/os/Parcel;.writeFloat:(F)V` @kind virtual;
  #L3923e6.  call temp:= `getY`(v1) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.getY:()F` @kind virtual;
  #L3923ec.  v0:= temp;
  #L3923ee.  call `writeFloat`(v2, v0) @signature `Landroid/os/Parcel;.writeFloat:(F)V` @kind virtual;
  #L3923f4.  call temp:= `getData`(v1) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.getData:()Ljava/lang/Object;` @kind virtual;
  #L3923fa.  v0:= temp @kind object;
  #L3923fc.  if v0 == 0 then goto L39243c;
  #L392400.  call temp:= `getData`(v1) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.getData:()Ljava/lang/Object;` @kind virtual;
  #L392406.  v0:= temp @kind object;
  #L392408.  v0:= instanceof @variable v0 @type ^`android.os.Parcelable` @kind boolean;
  #L39240c.  if v0 == 0 then goto L39242c;
  #L392410.  v0:= 1I;
  #L392412.  call `writeInt`(v2, v0) @signature `Landroid/os/Parcel;.writeInt:(I)V` @kind virtual;
  #L392418.  call temp:= `getData`(v1) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.getData:()Ljava/lang/Object;` @kind virtual;
  #L39241e.  v0:= temp @kind object;
  #L392420.  v0:= (`android.os.Parcelable`) v0 @kind object;
  #L392424.  call `writeParcelable`(v2, v0, v3) @signature `Landroid/os/Parcel;.writeParcelable:(Landroid/os/Parcelable;I)V` @kind virtual;
  #L39242a.  goto L392444;
  #L39242c.  v2:= new `android.os.ParcelFormatException`;
  #L392430.  v3:= "Cannot parcel an Entry with non-parcelable data" @kind object;
  #L392434.  call `<init>`(v2, v3) @signature `Landroid/os/ParcelFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L39243a.  throw v2;
  #L39243c.  v3:= 0I;
  #L39243e.  call `writeInt`(v2, v3) @signature `Landroid/os/Parcel;.writeInt:(I)V` @kind virtual;
  #L392444.  return @kind void;
}
