record `com.github.mikephil.charting.data.ScatterData` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.data.BarLineScatterCandleBubbleData` @kind class {
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.ScatterData` v0 @kind this) @signature `Lcom/github/mikephil/charting/data/ScatterData;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L393e50.  call `<init>`(v0) @signature `Lcom/github/mikephil/charting/data/BarLineScatterCandleBubbleData;.<init>:()V` @kind direct;
  #L393e56.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.ScatterData` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/ScatterData;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L393e80.  call `<init>`(v0, v1) @signature `Lcom/github/mikephil/charting/data/BarLineScatterCandleBubbleData;.<init>:(Ljava/util/List;)V` @kind direct;
  #L393e86.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.ScatterData` v0 @kind this, `com.github.mikephil.charting.interfaces.datasets.IScatterDataSet`[] v1 @kind object) @signature `Lcom/github/mikephil/charting/data/ScatterData;.<init>:([Lcom/github/mikephil/charting/interfaces/datasets/IScatterDataSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L393e68.  call `<init>`(v0, v1) @signature `Lcom/github/mikephil/charting/data/BarLineScatterCandleBubbleData;.<init>:([Lcom/github/mikephil/charting/interfaces/datasets/IBarLineScatterCandleBubbleDataSet;)V` @kind direct;
  #L393e6e.  return @kind void;
}
procedure `float` `getGreatestShapeSize`(`com.github.mikephil.charting.data.ScatterData` v4 @kind this) @signature `Lcom/github/mikephil/charting/data/ScatterData;.getGreatestShapeSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L393e04.  v0:= v4.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L393e08.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L393e0e.  v0:= temp @kind object;
  #L393e10.  v1:= 0I;
  #L393e12.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L393e18.  v2:= temp;
  #L393e1a.  if v2 == 0 then goto L393e3e;
  #L393e1e.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L393e24.  v2:= temp @kind object;
  #L393e26.  v2:= (`com.github.mikephil.charting.interfaces.datasets.IScatterDataSet`) v2 @kind object;
  #L393e2a.  call temp:= `getScatterShapeSize`(v2) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IScatterDataSet;.getScatterShapeSize:()F` @kind interface;
  #L393e30.  v2:= temp;
  #L393e32.  v3:= fcmpl(v2, v1);
  #L393e36.  if v3 <= 0 then goto L393e12;
  #L393e3a.  v1:= v2;
  #L393e3c.  goto L393e12;
  #L393e3e.  return v1;
}
