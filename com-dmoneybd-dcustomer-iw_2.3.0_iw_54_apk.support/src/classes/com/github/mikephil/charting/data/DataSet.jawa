record `com.github.mikephil.charting.data.DataSet` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.github.mikephil.charting.data.BaseDataSet` @kind class {
  `java.util.List` `com.github.mikephil.charting.data.DataSet.mValues` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.data.DataSet.mXMax` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.data.DataSet.mXMin` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.data.DataSet.mYMax` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.data.DataSet.mYMin` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.DataSet` v1 @kind this, `java.util.List` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/github/mikephil/charting/data/DataSet;.<init>:(Ljava/util/List;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L391ddc.  call `<init>`(v1, v3) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L391de2.  v3:= 0I;
  #L391de4.  v1.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` := v3 @kind object;
  #L391de8.  v3:= -8388609I;
  #L391dee.  v1.`com.github.mikephil.charting.data.DataSet.mYMax` @type ^`float` := v3;
  #L391df2.  v0:= 2139095039I;
  #L391df8.  v1.`com.github.mikephil.charting.data.DataSet.mYMin` @type ^`float` := v0;
  #L391dfc.  v1.`com.github.mikephil.charting.data.DataSet.mXMax` @type ^`float` := v3;
  #L391e00.  v1.`com.github.mikephil.charting.data.DataSet.mXMin` @type ^`float` := v0;
  #L391e04.  v1.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` := v2 @kind object;
  #L391e08.  if v2 != 0 then goto L391e1a;
  #L391e0c.  v2:= new `java.util.ArrayList`;
  #L391e10.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L391e16.  v1.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` := v2 @kind object;
  #L391e1a.  call `calcMinMax`(v1) @signature `Lcom/github/mikephil/charting/data/DataSet;.calcMinMax:()V` @kind virtual;
  #L391e20.  return @kind void;
}
procedure `boolean` `addEntry`(`com.github.mikephil.charting.data.DataSet` v1 @kind this, `com.github.mikephil.charting.data.Entry` v2 @kind object) @signature `Lcom/github/mikephil/charting/data/DataSet;.addEntry:(Lcom/github/mikephil/charting/data/Entry;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39185c.  if v2 != 0 then goto L391864;
  #L391860.  v2:= 0I;
  #L391862.  return v2;
  #L391864.  call temp:= `getValues`(v1) @signature `Lcom/github/mikephil/charting/data/DataSet;.getValues:()Ljava/util/List;` @kind virtual;
  #L39186a.  v0:= temp @kind object;
  #L39186c.  if v0 != 0 then goto L39187a;
  #L391870.  v0:= new `java.util.ArrayList`;
  #L391874.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L39187a.  call `calcMinMax`(v1, v2) @signature `Lcom/github/mikephil/charting/data/DataSet;.calcMinMax:(Lcom/github/mikephil/charting/data/Entry;)V` @kind virtual;
  #L391880.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L391886.  v2:= temp;
  #L391888.  return v2;
}
procedure `void` `addEntryOrdered`(`com.github.mikephil.charting.data.DataSet` v3 @kind this, `com.github.mikephil.charting.data.Entry` v4 @kind object) @signature `Lcom/github/mikephil/charting/data/DataSet;.addEntryOrdered:(Lcom/github/mikephil/charting/data/Entry;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L391e34.  if v4 != 0 then goto L391e3a;
  #L391e38.  return @kind void;
  #L391e3a.  v0:= v3.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L391e3e.  if v0 != 0 then goto L391e50;
  #L391e42.  v0:= new `java.util.ArrayList`;
  #L391e46.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L391e4c.  v3.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` := v0 @kind object;
  #L391e50.  call `calcMinMax`(v3, v4) @signature `Lcom/github/mikephil/charting/data/DataSet;.calcMinMax:(Lcom/github/mikephil/charting/data/Entry;)V` @kind virtual;
  #L391e56.  v0:= v3.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L391e5a.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L391e60.  v0:= temp;
  #L391e62.  if v0 <= 0 then goto L391ec2;
  #L391e66.  v0:= v3.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L391e6a.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L391e70.  v1:= temp;
  #L391e72.  v1:= v1 + -1;
  #L391e76.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L391e7c.  v0:= temp @kind object;
  #L391e7e.  v0:= (`com.github.mikephil.charting.data.Entry`) v0 @kind object;
  #L391e82.  call temp:= `getX`(v0) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L391e88.  v0:= temp;
  #L391e8a.  call temp:= `getX`(v4) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L391e90.  v1:= temp;
  #L391e92.  v0:= fcmpl(v0, v1);
  #L391e96.  if v0 <= 0 then goto L391ec2;
  #L391e9a.  call temp:= `getX`(v4) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L391ea0.  v0:= temp;
  #L391ea2.  call temp:= `getY`(v4) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.getY:()F` @kind virtual;
  #L391ea8.  v1:= temp;
  #L391eaa.  v2:= `@@com.github.mikephil.charting.data.DataSet$Rounding.UP` @type ^`com.github.mikephil.charting.data.DataSet$Rounding` @kind object;
  #L391eae.  call temp:= `getEntryIndex`(v3, v0, v1, v2) @signature `Lcom/github/mikephil/charting/data/DataSet;.getEntryIndex:(FFLcom/github/mikephil/charting/data/DataSet$Rounding;)I` @kind virtual;
  #L391eb4.  v0:= temp;
  #L391eb6.  v1:= v3.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L391eba.  call `add`(v1, v0, v4) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L391ec0.  goto L391ecc;
  #L391ec2.  v0:= v3.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L391ec6.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L391ecc.  return @kind void;
}
procedure `void` `calcMinMax`(`com.github.mikephil.charting.data.DataSet` v2 @kind this) @signature `Lcom/github/mikephil/charting/data/DataSet;.calcMinMax:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L391ee0.  v0:= v2.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L391ee4.  if v0 == 0 then goto L391f3e;
  #L391ee8.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L391eee.  v0:= temp;
  #L391ef0.  if v0 == 0 then goto L391ef6;
  #L391ef4.  goto L391f3e;
  #L391ef6.  v0:= -8388609I;
  #L391efc.  v2.`com.github.mikephil.charting.data.DataSet.mYMax` @type ^`float` := v0;
  #L391f00.  v1:= 2139095039I;
  #L391f06.  v2.`com.github.mikephil.charting.data.DataSet.mYMin` @type ^`float` := v1;
  #L391f0a.  v2.`com.github.mikephil.charting.data.DataSet.mXMax` @type ^`float` := v0;
  #L391f0e.  v2.`com.github.mikephil.charting.data.DataSet.mXMin` @type ^`float` := v1;
  #L391f12.  v0:= v2.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L391f16.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L391f1c.  v0:= temp @kind object;
  #L391f1e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L391f24.  v1:= temp;
  #L391f26.  if v1 == 0 then goto L391f3e;
  #L391f2a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L391f30.  v1:= temp @kind object;
  #L391f32.  v1:= (`com.github.mikephil.charting.data.Entry`) v1 @kind object;
  #L391f36.  call `calcMinMax`(v2, v1) @signature `Lcom/github/mikephil/charting/data/DataSet;.calcMinMax:(Lcom/github/mikephil/charting/data/Entry;)V` @kind virtual;
  #L391f3c.  goto L391f1e;
  #L391f3e.  return @kind void;
}
procedure `void` `calcMinMax`(`com.github.mikephil.charting.data.DataSet` v0 @kind this, `com.github.mikephil.charting.data.Entry` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/DataSet;.calcMinMax:(Lcom/github/mikephil/charting/data/Entry;)V` @AccessFlag PROTECTED {
    temp;

  #L391f50.  if v1 != 0 then goto L391f56;
  #L391f54.  return @kind void;
  #L391f56.  call `calcMinMaxX`(v0, v1) @signature `Lcom/github/mikephil/charting/data/DataSet;.calcMinMaxX:(Lcom/github/mikephil/charting/data/Entry;)V` @kind virtual;
  #L391f5c.  call `calcMinMaxY`(v0, v1) @signature `Lcom/github/mikephil/charting/data/DataSet;.calcMinMaxY:(Lcom/github/mikephil/charting/data/Entry;)V` @kind virtual;
  #L391f62.  return @kind void;
}
procedure `void` `calcMinMaxX`(`com.github.mikephil.charting.data.DataSet` v2 @kind this, `com.github.mikephil.charting.data.Entry` v3 @kind object) @signature `Lcom/github/mikephil/charting/data/DataSet;.calcMinMaxX:(Lcom/github/mikephil/charting/data/Entry;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L391f74.  call temp:= `getX`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L391f7a.  v0:= temp;
  #L391f7c.  v1:= v2.`com.github.mikephil.charting.data.DataSet.mXMin` @type ^`float`;
  #L391f80.  v0:= fcmpg(v0, v1);
  #L391f84.  if v0 >= 0 then goto L391f94;
  #L391f88.  call temp:= `getX`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L391f8e.  v0:= temp;
  #L391f90.  v2.`com.github.mikephil.charting.data.DataSet.mXMin` @type ^`float` := v0;
  #L391f94.  call temp:= `getX`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L391f9a.  v0:= temp;
  #L391f9c.  v1:= v2.`com.github.mikephil.charting.data.DataSet.mXMax` @type ^`float`;
  #L391fa0.  v0:= fcmpl(v0, v1);
  #L391fa4.  if v0 <= 0 then goto L391fb4;
  #L391fa8.  call temp:= `getX`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L391fae.  v3:= temp;
  #L391fb0.  v2.`com.github.mikephil.charting.data.DataSet.mXMax` @type ^`float` := v3;
  #L391fb4.  return @kind void;
}
procedure `void` `calcMinMaxY`(`com.github.mikephil.charting.data.DataSet` v2 @kind this, `float` v3 , `float` v4 ) @signature `Lcom/github/mikephil/charting/data/DataSet;.calcMinMaxY:(FF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39201c.  v0:= v2.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L392020.  if v0 == 0 then goto L392082;
  #L392024.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L39202a.  v0:= temp;
  #L39202c.  if v0 == 0 then goto L392032;
  #L392030.  goto L392082;
  #L392032.  v0:= -8388609I;
  #L392038.  v2.`com.github.mikephil.charting.data.DataSet.mYMax` @type ^`float` := v0;
  #L39203c.  v0:= 2139095039I;
  #L392042.  v2.`com.github.mikephil.charting.data.DataSet.mYMin` @type ^`float` := v0;
  #L392046.  v0:= `@@com.github.mikephil.charting.data.DataSet$Rounding.DOWN` @type ^`com.github.mikephil.charting.data.DataSet$Rounding` @kind object;
  #L39204a.  v1:= NaNF;
  #L39204e.  call temp:= `getEntryIndex`(v2, v3, v1, v0) @signature `Lcom/github/mikephil/charting/data/DataSet;.getEntryIndex:(FFLcom/github/mikephil/charting/data/DataSet$Rounding;)I` @kind virtual;
  #L392054.  v3:= temp;
  #L392056.  v0:= `@@com.github.mikephil.charting.data.DataSet$Rounding.UP` @type ^`com.github.mikephil.charting.data.DataSet$Rounding` @kind object;
  #L39205a.  call temp:= `getEntryIndex`(v2, v4, v1, v0) @signature `Lcom/github/mikephil/charting/data/DataSet;.getEntryIndex:(FFLcom/github/mikephil/charting/data/DataSet$Rounding;)I` @kind virtual;
  #L392060.  v4:= temp;
  #L392062.  if v3 > v4 then goto L392082;
  #L392066.  v0:= v2.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L39206a.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L392070.  v0:= temp @kind object;
  #L392072.  v0:= (`com.github.mikephil.charting.data.Entry`) v0 @kind object;
  #L392076.  call `calcMinMaxY`(v2, v0) @signature `Lcom/github/mikephil/charting/data/DataSet;.calcMinMaxY:(Lcom/github/mikephil/charting/data/Entry;)V` @kind virtual;
  #L39207c.  v3:= v3 + 1;
  #L392080.  goto L392062;
  #L392082.  return @kind void;
}
procedure `void` `calcMinMaxY`(`com.github.mikephil.charting.data.DataSet` v2 @kind this, `com.github.mikephil.charting.data.Entry` v3 @kind object) @signature `Lcom/github/mikephil/charting/data/DataSet;.calcMinMaxY:(Lcom/github/mikephil/charting/data/Entry;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L391fc8.  call temp:= `getY`(v3) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.getY:()F` @kind virtual;
  #L391fce.  v0:= temp;
  #L391fd0.  v1:= v2.`com.github.mikephil.charting.data.DataSet.mYMin` @type ^`float`;
  #L391fd4.  v0:= fcmpg(v0, v1);
  #L391fd8.  if v0 >= 0 then goto L391fe8;
  #L391fdc.  call temp:= `getY`(v3) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.getY:()F` @kind virtual;
  #L391fe2.  v0:= temp;
  #L391fe4.  v2.`com.github.mikephil.charting.data.DataSet.mYMin` @type ^`float` := v0;
  #L391fe8.  call temp:= `getY`(v3) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.getY:()F` @kind virtual;
  #L391fee.  v0:= temp;
  #L391ff0.  v1:= v2.`com.github.mikephil.charting.data.DataSet.mYMax` @type ^`float`;
  #L391ff4.  v0:= fcmpl(v0, v1);
  #L391ff8.  if v0 <= 0 then goto L392008;
  #L391ffc.  call temp:= `getY`(v3) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.getY:()F` @kind virtual;
  #L392002.  v3:= temp;
  #L392004.  v2.`com.github.mikephil.charting.data.DataSet.mYMax` @type ^`float` := v3;
  #L392008.  return @kind void;
}
procedure `void` `clear`(`com.github.mikephil.charting.data.DataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/DataSet;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392094.  v0:= v1.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L392098.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L39209e.  call `notifyDataSetChanged`(v1) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.notifyDataSetChanged:()V` @kind virtual;
  #L3920a4.  return @kind void;
}
procedure `com.github.mikephil.charting.data.DataSet` `copy`() @signature `Lcom/github/mikephil/charting/data/DataSet;.copy:()Lcom/github/mikephil/charting/data/DataSet;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `copy`(`com.github.mikephil.charting.data.DataSet` v0 @kind this, `com.github.mikephil.charting.data.DataSet` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/DataSet;.copy:(Lcom/github/mikephil/charting/data/DataSet;)V` @AccessFlag PROTECTED {
    temp;

  #L3920b8.  call `copy`(v0, v1) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.copy:(Lcom/github/mikephil/charting/data/BaseDataSet;)V` @kind super;
  #L3920be.  return @kind void;
}
procedure `java.util.List` `getEntriesForXValue`(`com.github.mikephil.charting.data.DataSet` v6 @kind this, `float` v7 ) @signature `Lcom/github/mikephil/charting/data/DataSet;.getEntriesForXValue:(F)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L391ce0.  v0:= new `java.util.ArrayList`;
  #L391ce4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L391cea.  v1:= v6.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L391cee.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L391cf4.  v1:= temp;
  #L391cf6.  v1:= v1 + -1;
  #L391cfa.  v2:= 0I;
  #L391cfc.  if v2 > v1 then goto L391db2;
  #L391d00.  v3:= v1 + v2 @kind int;
  #L391d04.  v3:= v3 / 2;
  #L391d08.  v4:= v6.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L391d0c.  call temp:= `get`(v4, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L391d12.  v4:= temp @kind object;
  #L391d14.  v4:= (`com.github.mikephil.charting.data.Entry`) v4 @kind object;
  #L391d18.  call temp:= `getX`(v4) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L391d1e.  v5:= temp;
  #L391d20.  v5:= fcmpl(v7, v5);
  #L391d24.  if v5 != 0 then goto L391d92;
  #L391d28.  if v3 <= 0 then goto L391d56;
  #L391d2c.  v1:= v6.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L391d30.  v2:= v3 + -1;
  #L391d34.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L391d3a.  v1:= temp @kind object;
  #L391d3c.  v1:= (`com.github.mikephil.charting.data.Entry`) v1 @kind object;
  #L391d40.  call temp:= `getX`(v1) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L391d46.  v1:= temp;
  #L391d48.  v1:= fcmpl(v1, v7);
  #L391d4c.  if v1 != 0 then goto L391d56;
  #L391d50.  v3:= v3 + -1;
  #L391d54.  goto L391d28;
  #L391d56.  v1:= v6.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L391d5a.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L391d60.  v1:= temp;
  #L391d62.  if v3 >= v1 then goto L391db2;
  #L391d66.  v2:= v6.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L391d6a.  call temp:= `get`(v2, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L391d70.  v2:= temp @kind object;
  #L391d72.  v2:= (`com.github.mikephil.charting.data.Entry`) v2 @kind object;
  #L391d76.  call temp:= `getX`(v2) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L391d7c.  v4:= temp;
  #L391d7e.  v4:= fcmpl(v4, v7);
  #L391d82.  if v4 != 0 then goto L391db2;
  #L391d86.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L391d8c.  v3:= v3 + 1;
  #L391d90.  goto L391d62;
  #L391d92.  call temp:= `getX`(v4) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L391d98.  v4:= temp;
  #L391d9a.  v4:= fcmpl(v7, v4);
  #L391d9e.  if v4 <= 0 then goto L391daa;
  #L391da2.  v3:= v3 + 1;
  #L391da6.  v2:= v3;
  #L391da8.  goto L391cfc;
  #L391daa.  v3:= v3 + -1;
  #L391dae.  v1:= v3;
  #L391db0.  goto L391cfc;
  #L391db2.  return v0 @kind object;
}
procedure `int` `getEntryCount`(`com.github.mikephil.charting.data.DataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/DataSet;.getEntryCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3919ac.  v0:= v1.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L3919b0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3919b6.  v0:= temp;
  #L3919b8.  return v0;
}
procedure `com.github.mikephil.charting.data.Entry` `getEntryForIndex`(`com.github.mikephil.charting.data.DataSet` v1 @kind this, `int` v2 ) @signature `Lcom/github/mikephil/charting/data/DataSet;.getEntryForIndex:(I)Lcom/github/mikephil/charting/data/Entry;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3918d4.  v0:= v1.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L3918d8.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3918de.  v2:= temp @kind object;
  #L3918e0.  v2:= (`com.github.mikephil.charting.data.Entry`) v2 @kind object;
  #L3918e4.  return v2 @kind object;
}
procedure `com.github.mikephil.charting.data.Entry` `getEntryForXValue`(`com.github.mikephil.charting.data.DataSet` v1 @kind this, `float` v2 , `float` v3 ) @signature `Lcom/github/mikephil/charting/data/DataSet;.getEntryForXValue:(FF)Lcom/github/mikephil/charting/data/Entry;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3918f8.  v0:= `@@com.github.mikephil.charting.data.DataSet$Rounding.CLOSEST` @type ^`com.github.mikephil.charting.data.DataSet$Rounding` @kind object;
  #L3918fc.  call temp:= `getEntryForXValue`(v1, v2, v3, v0) @signature `Lcom/github/mikephil/charting/data/DataSet;.getEntryForXValue:(FFLcom/github/mikephil/charting/data/DataSet$Rounding;)Lcom/github/mikephil/charting/data/Entry;` @kind virtual;
  #L391902.  v2:= temp @kind object;
  #L391904.  return v2 @kind object;
}
procedure `com.github.mikephil.charting.data.Entry` `getEntryForXValue`(`com.github.mikephil.charting.data.DataSet` v0 @kind this, `float` v1 , `float` v2 , `com.github.mikephil.charting.data.DataSet$Rounding` v3 @kind object) @signature `Lcom/github/mikephil/charting/data/DataSet;.getEntryForXValue:(FFLcom/github/mikephil/charting/data/DataSet$Rounding;)Lcom/github/mikephil/charting/data/Entry;` @AccessFlag PUBLIC {
    temp;

  #L391918.  call temp:= `getEntryIndex`(v0, v1, v2, v3) @signature `Lcom/github/mikephil/charting/data/DataSet;.getEntryIndex:(FFLcom/github/mikephil/charting/data/DataSet$Rounding;)I` @kind virtual;
  #L39191e.  v1:= temp;
  #L391920.  v2:= -1I;
  #L391922.  if v1 <= v2 then goto L391938;
  #L391926.  v2:= v0.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L39192a.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L391930.  v1:= temp @kind object;
  #L391932.  v1:= (`com.github.mikephil.charting.data.Entry`) v1 @kind object;
  #L391936.  return v1 @kind object;
  #L391938.  v1:= 0I;
  #L39193a.  return v1 @kind object;
}
procedure `int` `getEntryIndex`(`com.github.mikephil.charting.data.DataSet` v10 @kind this, `float` v11 , `float` v12 , `com.github.mikephil.charting.data.DataSet$Rounding` v13 @kind object) @signature `Lcom/github/mikephil/charting/data/DataSet;.getEntryIndex:(FFLcom/github/mikephil/charting/data/DataSet$Rounding;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3919ec.  v0:= v10.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L3919f0.  v1:= -1I;
  #L3919f2.  if v0 == 0 then goto L391bb6;
  #L3919f6.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3919fc.  v0:= temp;
  #L3919fe.  if v0 == 0 then goto L391a06;
  #L391a02.  goto L391bb6;
  #L391a06.  v0:= 0I;
  #L391a08.  v2:= v10.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L391a0c.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L391a12.  v2:= temp;
  #L391a14.  v2:= v2 + -1;
  #L391a18.  if v0 >= v2 then goto L391a9e;
  #L391a1c.  v3:= v0 + v2 @kind int;
  #L391a20.  v3:= v3 / 2;
  #L391a24.  v4:= v10.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L391a28.  call temp:= `get`(v4, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L391a2e.  v4:= temp @kind object;
  #L391a30.  v4:= (`com.github.mikephil.charting.data.Entry`) v4 @kind object;
  #L391a34.  call temp:= `getX`(v4) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L391a3a.  v4:= temp;
  #L391a3c.  v4:= v4 - v11 @kind float;
  #L391a3e.  v5:= v10.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L391a42.  v6:= v3 + 1;
  #L391a46.  call temp:= `get`(v5, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L391a4c.  v5:= temp @kind object;
  #L391a4e.  v5:= (`com.github.mikephil.charting.data.Entry`) v5 @kind object;
  #L391a52.  call temp:= `getX`(v5) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L391a58.  v5:= temp;
  #L391a5a.  v5:= v5 - v11 @kind float;
  #L391a5c.  call temp:= `abs`(v4) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L391a62.  v7:= temp;
  #L391a64.  call temp:= `abs`(v5) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L391a6a.  v5:= temp;
  #L391a6c.  v8:= fcmpg(v5, v7);
  #L391a70.  if v8 >= 0 then goto L391a78;
  #L391a74.  v0:= v6;
  #L391a76.  goto L391a18;
  #L391a78.  v5:= fcmpg(v7, v5);
  #L391a7c.  if v5 >= 0 then goto L391a82;
  #L391a80.  goto L391a90;
  #L391a82.  v4:= (`double`) v4 @kind f2d;
  #L391a84.  v7:= 0L;
  #L391a88.  v9:= dcmpl(v4, v7);
  #L391a8c.  if v9 < 0 then goto L391a94;
  #L391a90.  v2:= v3;
  #L391a92.  goto L391a18;
  #L391a94.  v3:= dcmpg(v4, v7);
  #L391a98.  if v3 >= 0 then goto L391a18;
  #L391a9c.  goto L391a74;
  #L391a9e.  if v2 == v1 then goto L391bb4;
  #L391aa2.  v0:= v10.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L391aa6.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L391aac.  v0:= temp @kind object;
  #L391aae.  v0:= (`com.github.mikephil.charting.data.Entry`) v0 @kind object;
  #L391ab2.  call temp:= `getX`(v0) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L391ab8.  v0:= temp;
  #L391aba.  v1:= `@@com.github.mikephil.charting.data.DataSet$Rounding.UP` @type ^`com.github.mikephil.charting.data.DataSet$Rounding` @kind object;
  #L391abe.  if v13 != v1 then goto L391ae4;
  #L391ac2.  v11:= fcmpg(v0, v11);
  #L391ac6.  if v11 >= 0 then goto L391afc;
  #L391aca.  v11:= v10.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L391ace.  call temp:= `size`(v11) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L391ad4.  v11:= temp;
  #L391ad6.  v11:= v11 + -1;
  #L391ada.  if v2 >= v11 then goto L391afc;
  #L391ade.  v2:= v2 + 1;
  #L391ae2.  goto L391afc;
  #L391ae4.  v1:= `@@com.github.mikephil.charting.data.DataSet$Rounding.DOWN` @type ^`com.github.mikephil.charting.data.DataSet$Rounding` @kind object;
  #L391ae8.  if v13 != v1 then goto L391afc;
  #L391aec.  v11:= fcmpl(v0, v11);
  #L391af0.  if v11 <= 0 then goto L391afc;
  #L391af4.  if v2 <= 0 then goto L391afc;
  #L391af8.  v2:= v2 + -1;
  #L391afc.  call temp:= `isNaN`(v12) @signature `Ljava/lang/Float;.isNaN:(F)Z` @kind static;
  #L391b02.  v11:= temp;
  #L391b04.  if v11 != 0 then goto L391bb4;
  #L391b08.  if v2 <= 0 then goto L391b36;
  #L391b0c.  v11:= v10.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L391b10.  v13:= v2 + -1;
  #L391b14.  call temp:= `get`(v11, v13) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L391b1a.  v11:= temp @kind object;
  #L391b1c.  v11:= (`com.github.mikephil.charting.data.Entry`) v11 @kind object;
  #L391b20.  call temp:= `getX`(v11) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L391b26.  v11:= temp;
  #L391b28.  v11:= fcmpl(v11, v0);
  #L391b2c.  if v11 != 0 then goto L391b36;
  #L391b30.  v2:= v2 + -1;
  #L391b34.  goto L391b08;
  #L391b36.  v11:= v10.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L391b3a.  call temp:= `get`(v11, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L391b40.  v11:= temp @kind object;
  #L391b42.  v11:= (`com.github.mikephil.charting.data.Entry`) v11 @kind object;
  #L391b46.  call temp:= `getY`(v11) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.getY:()F` @kind virtual;
  #L391b4c.  v11:= temp;
  #L391b4e.  v13:= v2;
  #L391b50.  v2:= v2 + 1;
  #L391b54.  v1:= v10.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L391b58.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L391b5e.  v1:= temp;
  #L391b60.  if v2 < v1 then goto L391b66;
  #L391b64.  goto L391b86;
  #L391b66.  v1:= v10.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L391b6a.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L391b70.  v1:= temp @kind object;
  #L391b72.  v1:= (`com.github.mikephil.charting.data.Entry`) v1 @kind object;
  #L391b76.  call temp:= `getX`(v1) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L391b7c.  v3:= temp;
  #L391b7e.  v3:= fcmpl(v3, v0);
  #L391b82.  if v3 == 0 then goto L391b8a;
  #L391b86.  v2:= v13;
  #L391b88.  goto L391bb4;
  #L391b8a.  call temp:= `getY`(v1) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.getY:()F` @kind virtual;
  #L391b90.  v1:= temp;
  #L391b92.  v1:= v1 - v12 @kind float;
  #L391b94.  call temp:= `abs`(v1) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L391b9a.  v1:= temp;
  #L391b9c.  v3:= v11 - v12 @kind float;
  #L391ba0.  call temp:= `abs`(v3) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L391ba6.  v3:= temp;
  #L391ba8.  v1:= fcmpg(v1, v3);
  #L391bac.  if v1 >= 0 then goto L391b50;
  #L391bb0.  v11:= v12;
  #L391bb2.  goto L391b4e;
  #L391bb4.  return v2;
  #L391bb6.  return v1;
}
procedure `int` `getEntryIndex`(`com.github.mikephil.charting.data.DataSet` v1 @kind this, `com.github.mikephil.charting.data.Entry` v2 @kind object) @signature `Lcom/github/mikephil/charting/data/DataSet;.getEntryIndex:(Lcom/github/mikephil/charting/data/Entry;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3919cc.  v0:= v1.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L3919d0.  call temp:= `indexOf`(v0, v2) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L3919d6.  v2:= temp;
  #L3919d8.  return v2;
}
procedure `java.util.List` `getValues`(`com.github.mikephil.charting.data.DataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/DataSet;.getValues:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L391dc4.  v0:= v1.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L391dc8.  return v0 @kind object;
}
procedure `float` `getXMax`(`com.github.mikephil.charting.data.DataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/DataSet;.getXMax:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39194c.  v0:= v1.`com.github.mikephil.charting.data.DataSet.mXMax` @type ^`float`;
  #L391950.  return v0;
}
procedure `float` `getXMin`(`com.github.mikephil.charting.data.DataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/DataSet;.getXMin:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L391964.  v0:= v1.`com.github.mikephil.charting.data.DataSet.mXMin` @type ^`float`;
  #L391968.  return v0;
}
procedure `float` `getYMax`(`com.github.mikephil.charting.data.DataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/DataSet;.getYMax:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L39197c.  v0:= v1.`com.github.mikephil.charting.data.DataSet.mYMax` @type ^`float`;
  #L391980.  return v0;
}
procedure `float` `getYMin`(`com.github.mikephil.charting.data.DataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/DataSet;.getYMin:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L391994.  v0:= v1.`com.github.mikephil.charting.data.DataSet.mYMin` @type ^`float`;
  #L391998.  return v0;
}
procedure `boolean` `removeEntry`(`com.github.mikephil.charting.data.DataSet` v2 @kind this, `com.github.mikephil.charting.data.Entry` v3 @kind object) @signature `Lcom/github/mikephil/charting/data/DataSet;.removeEntry:(Lcom/github/mikephil/charting/data/Entry;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L39189c.  v0:= 0I;
  #L39189e.  if v3 != 0 then goto L3918a4;
  #L3918a2.  return v0;
  #L3918a4.  v1:= v2.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L3918a8.  if v1 != 0 then goto L3918ae;
  #L3918ac.  return v0;
  #L3918ae.  call temp:= `remove`(v1, v3) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3918b4.  v3:= temp;
  #L3918b6.  if v3 == 0 then goto L3918c0;
  #L3918ba.  call `calcMinMax`(v2) @signature `Lcom/github/mikephil/charting/data/DataSet;.calcMinMax:()V` @kind virtual;
  #L3918c0.  return v3;
}
procedure `void` `setValues`(`com.github.mikephil.charting.data.DataSet` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/DataSet;.setValues:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L3920d0.  v0.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` := v1 @kind object;
  #L3920d4.  call `notifyDataSetChanged`(v0) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.notifyDataSetChanged:()V` @kind virtual;
  #L3920da.  return @kind void;
}
procedure `java.lang.String` `toSimpleString`(`com.github.mikephil.charting.data.DataSet` v3 @kind this) @signature `Lcom/github/mikephil/charting/data/DataSet;.toSimpleString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L391bc8.  v0:= new `java.lang.StringBuffer`;
  #L391bcc.  call `<init>`(v0) @signature `Ljava/lang/StringBuffer;.<init>:()V` @kind direct;
  #L391bd2.  v1:= new `java.lang.StringBuilder`;
  #L391bd6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L391bdc.  v2:= "DataSet, label: " @kind object;
  #L391be0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L391be6.  call temp:= `getLabel`(v3) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getLabel:()Ljava/lang/String;` @kind virtual;
  #L391bec.  v2:= temp @kind object;
  #L391bee.  if v2 != 0 then goto L391bf8;
  #L391bf2.  v2:= "" @kind object;
  #L391bf6.  goto L391c00;
  #L391bf8.  call temp:= `getLabel`(v3) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getLabel:()Ljava/lang/String;` @kind virtual;
  #L391bfe.  v2:= temp @kind object;
  #L391c00.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L391c06.  v2:= ", entries: " @kind object;
  #L391c0a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L391c10.  v2:= v3.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L391c14.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L391c1a.  v2:= temp;
  #L391c1c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L391c22.  v2:= "\n" @kind object;
  #L391c26.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L391c2c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L391c32.  v1:= temp @kind object;
  #L391c34.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L391c3a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L391c40.  v0:= temp @kind object;
  #L391c42.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.github.mikephil.charting.data.DataSet` v4 @kind this) @signature `Lcom/github/mikephil/charting/data/DataSet;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L391c54.  v0:= new `java.lang.StringBuffer`;
  #L391c58.  call `<init>`(v0) @signature `Ljava/lang/StringBuffer;.<init>:()V` @kind direct;
  #L391c5e.  call temp:= `toSimpleString`(v4) @signature `Lcom/github/mikephil/charting/data/DataSet;.toSimpleString:()Ljava/lang/String;` @kind virtual;
  #L391c64.  v1:= temp @kind object;
  #L391c66.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L391c6c.  v1:= 0I;
  #L391c6e.  v2:= v4.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L391c72.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L391c78.  v2:= temp;
  #L391c7a.  if v1 >= v2 then goto L391cc4;
  #L391c7e.  v2:= new `java.lang.StringBuilder`;
  #L391c82.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L391c88.  v3:= v4.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L391c8c.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L391c92.  v3:= temp @kind object;
  #L391c94.  v3:= (`com.github.mikephil.charting.data.Entry`) v3 @kind object;
  #L391c98.  call temp:= `toString`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.toString:()Ljava/lang/String;` @kind virtual;
  #L391c9e.  v3:= temp @kind object;
  #L391ca0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L391ca6.  v3:= " " @kind object;
  #L391caa.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L391cb0.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L391cb6.  v2:= temp @kind object;
  #L391cb8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L391cbe.  v1:= v1 + 1;
  #L391cc2.  goto L391c6e;
  #L391cc4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L391cca.  v0:= temp @kind object;
  #L391ccc.  return v0 @kind object;
}
