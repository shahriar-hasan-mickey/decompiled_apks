record `com.github.mikephil.charting.data.filter.Approximator` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.filter.Approximator` v0 @kind this) @signature `Lcom/github/mikephil/charting/data/filter/Approximator;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L394090.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L394096.  return @kind void;
}
procedure `float`[] `a`(`com.github.mikephil.charting.data.filter.Approximator` v9 @kind this, `float`[][] v10 @kind object) @signature `Lcom/github/mikephil/charting/data/filter/Approximator;.a:([[F)[F` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L393f68.  v0:= length @variable v10;
  #L393f6a.  v1:= 0I;
  #L393f6c.  v2:= 0I;
  #L393f6e.  v3:= 0I;
  #L393f70.  if v2 >= v0 then goto L393f82;
  #L393f74.  v4:= v10[v2] @kind object;
  #L393f78.  v4:= length @variable v4;
  #L393f7a.  v3:= v3 + v4 @kind int;
  #L393f7c.  v2:= v2 + 1;
  #L393f80.  goto L393f70;
  #L393f82.  v0:= new `float`[v3];
  #L393f86.  v2:= length @variable v10;
  #L393f88.  v3:= 0I;
  #L393f8a.  v4:= 0I;
  #L393f8c.  if v3 >= v2 then goto L393fb4;
  #L393f90.  v5:= v10[v3] @kind object;
  #L393f94.  v6:= length @variable v5;
  #L393f96.  v7:= 0I;
  #L393f98.  if v7 >= v6 then goto L393fae;
  #L393f9c.  v8:= v5[v7];
  #L393fa0.  v0[v4]:= v8;
  #L393fa4.  v4:= v4 + 1;
  #L393fa8.  v7:= v7 + 1;
  #L393fac.  goto L393f98;
  #L393fae.  v3:= v3 + 1;
  #L393fb2.  goto L393f8c;
  #L393fb4.  return v0 @kind object;
}
procedure `float`[] `reduceWithDouglasPeucker`(`com.github.mikephil.charting.data.filter.Approximator` v10 @kind this, `float`[] v11 @kind object, `float` v12 ) @signature `Lcom/github/mikephil/charting/data/filter/Approximator;.reduceWithDouglasPeucker:([FF)[F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L393fc8.  v6:= new `com.github.mikephil.charting.data.filter.Approximator$Line`;
  #L393fcc.  v7:= 0I;
  #L393fce.  v2:= v11[v7];
  #L393fd2.  v8:= 1I;
  #L393fd4.  v3:= v11[v8];
  #L393fd8.  v0:= length @variable v11;
  #L393fda.  v9:= 2I;
  #L393fdc.  v0:= v0 - v9 @kind int;
  #L393fde.  v4:= v11[v0];
  #L393fe2.  v0:= length @variable v11;
  #L393fe4.  v0:= v0 - v8 @kind int;
  #L393fe6.  v5:= v11[v0];
  #L393fea.  v0:= v6 @kind object;
  #L393fec.  v1:= v10 @kind object;
  #L393fee.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/github/mikephil/charting/data/filter/Approximator$Line;.<init>:(Lcom/github/mikephil/charting/data/filter/Approximator;FFFF)V` @kind direct;
  #L393ff4.  v0:= 0I;
  #L393ff6.  v1:= 2I;
  #L393ff8.  v2:= 0I;
  #L393ffa.  v3:= length @variable v11;
  #L393ffc.  v3:= v3 - v9 @kind int;
  #L393ffe.  if v1 >= v3 then goto L394028;
  #L394002.  v3:= v11[v1];
  #L394006.  v4:= v1 + 1;
  #L39400a.  v4:= v11[v4];
  #L39400e.  call temp:= `distance`(v6, v3, v4) @signature `Lcom/github/mikephil/charting/data/filter/Approximator$Line;.distance:(FF)F` @kind virtual;
  #L394014.  v3:= temp;
  #L394016.  v4:= fcmpl(v3, v0);
  #L39401a.  if v4 <= 0 then goto L394022;
  #L39401e.  v2:= v1;
  #L394020.  v0:= v3;
  #L394022.  v1:= v1 + 2;
  #L394026.  goto L393ffa;
  #L394028.  v0:= fcmpl(v0, v12);
  #L39402c.  if v0 <= 0 then goto L394076;
  #L394030.  v0:= v2 + 2;
  #L394034.  call temp:= `copyOfRange`(v11, v7, v0) @signature `Ljava/util/Arrays;.copyOfRange:([FII)[F` @kind static;
  #L39403a.  v0:= temp @kind object;
  #L39403c.  call temp:= `reduceWithDouglasPeucker`(v10, v0, v12) @signature `Lcom/github/mikephil/charting/data/filter/Approximator;.reduceWithDouglasPeucker:([FF)[F` @kind virtual;
  #L394042.  v0:= temp @kind object;
  #L394044.  v1:= length @variable v11;
  #L394046.  call temp:= `copyOfRange`(v11, v2, v1) @signature `Ljava/util/Arrays;.copyOfRange:([FII)[F` @kind static;
  #L39404c.  v11:= temp @kind object;
  #L39404e.  call temp:= `reduceWithDouglasPeucker`(v10, v11, v12) @signature `Lcom/github/mikephil/charting/data/filter/Approximator;.reduceWithDouglasPeucker:([FF)[F` @kind virtual;
  #L394054.  v11:= temp @kind object;
  #L394056.  v12:= length @variable v11;
  #L394058.  call temp:= `copyOfRange`(v11, v9, v12) @signature `Ljava/util/Arrays;.copyOfRange:([FII)[F` @kind static;
  #L39405e.  v11:= temp @kind object;
  #L394060.  v12:= new `float`[][v9];
  #L394064.  v12[v7]:= v0 @kind object;
  #L394068.  v12[v8]:= v11 @kind object;
  #L39406c.  call temp:= `a`(v10, v12) @signature `Lcom/github/mikephil/charting/data/filter/Approximator;.a:([[F)[F` @kind virtual;
  #L394072.  v11:= temp @kind object;
  #L394074.  return v11 @kind object;
  #L394076.  call temp:= `getPoints`(v6) @signature `Lcom/github/mikephil/charting/data/filter/Approximator$Line;.getPoints:()[F` @kind virtual;
  #L39407c.  v11:= temp @kind object;
  #L39407e.  return v11 @kind object;
}
