record `com.github.mikephil.charting.listener.PieRadarChartTouchListener` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.listener.ChartTouchListener` @kind class {
  `java.util.ArrayList` `com.github.mikephil.charting.listener.PieRadarChartTouchListener._velocitySamples` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationAngularVelocity` @AccessFlag PRIVATE;
  `long` `com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationLastTime` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.listener.PieRadarChartTouchListener.mStartAngle` @AccessFlag PRIVATE;
  `com.github.mikephil.charting.utils.MPPointF` `com.github.mikephil.charting.listener.PieRadarChartTouchListener.mTouchStartPoint` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.github.mikephil.charting.listener.PieRadarChartTouchListener` v2 @kind this, `com.github.mikephil.charting.charts.PieRadarChartBase` v3 @kind object) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.<init>:(Lcom/github/mikephil/charting/charts/PieRadarChartBase;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3977d4.  call `<init>`(v2, v3) @signature `Lcom/github/mikephil/charting/listener/ChartTouchListener;.<init>:(Lcom/github/mikephil/charting/charts/Chart;)V` @kind direct;
  #L3977da.  v3:= 0I;
  #L3977dc.  call temp:= `getInstance`(v3, v3) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.getInstance:(FF)Lcom/github/mikephil/charting/utils/MPPointF;` @kind static;
  #L3977e2.  v0:= temp @kind object;
  #L3977e4.  v2.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mTouchStartPoint` @type ^`com.github.mikephil.charting.utils.MPPointF` := v0 @kind object;
  #L3977e8.  v2.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mStartAngle` @type ^`float` := v3;
  #L3977ec.  v0:= new `java.util.ArrayList`;
  #L3977f0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3977f6.  v2.`com.github.mikephil.charting.listener.PieRadarChartTouchListener._velocitySamples` @type ^`java.util.ArrayList` := v0 @kind object;
  #L3977fa.  v0:= 0L;
  #L3977fe.  v2.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationLastTime` @type ^`long` := v0 @kind wide;
  #L397802.  v2.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationAngularVelocity` @type ^`float` := v3;
  #L397806.  return @kind void;
}
procedure `float` `calculateVelocity`(`com.github.mikephil.charting.listener.PieRadarChartTouchListener` v13 @kind this) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.calculateVelocity:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L39767c.  v0:= v13.`com.github.mikephil.charting.listener.PieRadarChartTouchListener._velocitySamples` @type ^`java.util.ArrayList` @kind object;
  #L397680.  call temp:= `isEmpty`(v0) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L397686.  v0:= temp;
  #L397688.  v1:= 0I;
  #L39768a.  if v0 == 0 then goto L397690;
  #L39768e.  return v1;
  #L397690.  v0:= v13.`com.github.mikephil.charting.listener.PieRadarChartTouchListener._velocitySamples` @type ^`java.util.ArrayList` @kind object;
  #L397694.  v2:= 0I;
  #L397696.  call temp:= `get`(v0, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L39769c.  v0:= temp @kind object;
  #L39769e.  v0:= (`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample`) v0 @kind object;
  #L3976a2.  v3:= v13.`com.github.mikephil.charting.listener.PieRadarChartTouchListener._velocitySamples` @type ^`java.util.ArrayList` @kind object;
  #L3976a6.  call temp:= `size`(v3) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L3976ac.  v4:= temp;
  #L3976ae.  v5:= 1I;
  #L3976b0.  v4:= v4 - v5 @kind int;
  #L3976b2.  call temp:= `get`(v3, v4) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L3976b8.  v3:= temp @kind object;
  #L3976ba.  v3:= (`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample`) v3 @kind object;
  #L3976be.  v4:= v13.`com.github.mikephil.charting.listener.PieRadarChartTouchListener._velocitySamples` @type ^`java.util.ArrayList` @kind object;
  #L3976c2.  call temp:= `size`(v4) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L3976c8.  v4:= temp;
  #L3976ca.  v4:= v4 - v5 @kind int;
  #L3976cc.  v6:= v0 @kind object;
  #L3976ce.  if v4 < 0 then goto L3976fa;
  #L3976d2.  v6:= v13.`com.github.mikephil.charting.listener.PieRadarChartTouchListener._velocitySamples` @type ^`java.util.ArrayList` @kind object;
  #L3976d6.  call temp:= `get`(v6, v4) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L3976dc.  v6:= temp @kind object;
  #L3976de.  v6:= (`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample`) v6 @kind object;
  #L3976e2.  v7:= v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.angle` @type ^`float`;
  #L3976e6.  v8:= v3.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.angle` @type ^`float`;
  #L3976ea.  v7:= fcmpl(v7, v8);
  #L3976ee.  if v7 == 0 then goto L3976f4;
  #L3976f2.  goto L3976fa;
  #L3976f4.  v4:= v4 + -1;
  #L3976f8.  goto L3976ce;
  #L3976fa.  v7:= v3.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.time` @type ^`long` @kind wide;
  #L3976fe.  v9:= v0.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.time` @type ^`long` @kind wide;
  #L397702.  v7:= v7 - v9 @kind long;
  #L397704.  v4:= (`float`) v7 @kind l2f;
  #L397706.  v7:= 1000.0F;
  #L39770a.  v4:= v4 / v7 @kind float;
  #L39770c.  v1:= fcmpl(v4, v1);
  #L397710.  if v1 != 0 then goto L39771a;
  #L397714.  v4:= 1036831949I;
  #L39771a.  v1:= v3.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.angle` @type ^`float`;
  #L39771e.  v6:= v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.angle` @type ^`float`;
  #L397722.  v7:= fcmpl(v1, v6);
  #L397726.  if v7 < 0 then goto L39772c;
  #L39772a.  v2:= 1I;
  #L39772c.  v1:= v1 - v6 @kind float;
  #L39772e.  call temp:= `abs`(v1) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L397734.  v1:= temp;
  #L397736.  v5:= (`double`) v1 @kind f2d;
  #L397738.  v7:= 270.0D;
  #L397742.  v1:= dcmpl(v5, v7);
  #L397746.  if v1 <= 0 then goto L39774e;
  #L39774a.  v2:= v2 ^~ 1;
  #L39774e.  v1:= v3.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.angle` @type ^`float`;
  #L397752.  v5:= v0.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.angle` @type ^`float`;
  #L397756.  v6:= v1 - v5 @kind float;
  #L39775a.  v6:= (`double`) v6 @kind f2d;
  #L39775c.  v8:= 360.0D;
  #L397766.  v10:= 180.0D;
  #L397770.  v12:= dcmpl(v6, v10);
  #L397774.  if v12 <= 0 then goto L39778a;
  #L397778.  v5:= (`double`) v5 @kind f2d;
  #L39777a.  call temp:= `isNaN`(v5) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L397780.  v5:= v5 + v8 @kind double;
  #L397782.  v1:= (`float`) v5 @kind d2f;
  #L397784.  v0.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.angle` @type ^`float` := v1;
  #L397788.  goto L3977a6;
  #L39778a.  v5:= v5 - v1 @kind float;
  #L39778c.  v5:= (`double`) v5 @kind f2d;
  #L39778e.  v7:= dcmpl(v5, v10);
  #L397792.  if v7 <= 0 then goto L3977a6;
  #L397796.  v5:= (`double`) v1 @kind f2d;
  #L397798.  call temp:= `isNaN`(v5) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L39779e.  v5:= v5 + v8 @kind double;
  #L3977a0.  v1:= (`float`) v5 @kind d2f;
  #L3977a2.  v3.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.angle` @type ^`float` := v1;
  #L3977a6.  v1:= v3.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.angle` @type ^`float`;
  #L3977aa.  v0:= v0.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.angle` @type ^`float`;
  #L3977ae.  v1:= v1 - v0 @kind float;
  #L3977b0.  v1:= v1 / v4 @kind float;
  #L3977b2.  call temp:= `abs`(v1) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L3977b8.  v0:= temp;
  #L3977ba.  if v2 != 0 then goto L3977c0;
  #L3977be.  v0:= -v0 @kind float;
  #L3977c0.  return v0;
}
procedure `void` `resetVelocity`(`com.github.mikephil.charting.listener.PieRadarChartTouchListener` v1 @kind this) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.resetVelocity:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L397900.  v0:= v1.`com.github.mikephil.charting.listener.PieRadarChartTouchListener._velocitySamples` @type ^`java.util.ArrayList` @kind object;
  #L397904.  call `clear`(v0) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L39790a.  return @kind void;
}
procedure `void` `sampleVelocity`(`com.github.mikephil.charting.listener.PieRadarChartTouchListener` v7 @kind this, `float` v8 , `float` v9 ) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.sampleVelocity:(FF)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L39791c.  call temp:= `currentAnimationTimeMillis`() @signature `Landroid/view/animation/AnimationUtils;.currentAnimationTimeMillis:()J` @kind static;
  #L397922.  v0:= temp @kind wide;
  #L397924.  v2:= v7.`com.github.mikephil.charting.listener.PieRadarChartTouchListener._velocitySamples` @type ^`java.util.ArrayList` @kind object;
  #L397928.  v3:= new `com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample`;
  #L39792c.  v4:= v7.`com.github.mikephil.charting.listener.ChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L397930.  v4:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v4 @kind object;
  #L397934.  call temp:= `getAngleForPoint`(v4, v8, v9) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getAngleForPoint:(FF)F` @kind virtual;
  #L39793a.  v8:= temp;
  #L39793c.  call `<init>`(v3, v7, v0, v8) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener$AngularVelocitySample;.<init>:(Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;JF)V` @kind direct;
  #L397942.  call temp:= `add`(v2, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L397948.  v8:= v7.`com.github.mikephil.charting.listener.PieRadarChartTouchListener._velocitySamples` @type ^`java.util.ArrayList` @kind object;
  #L39794c.  call temp:= `size`(v8) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L397952.  v8:= temp;
  #L397954.  v9:= v8 + -2;
  #L397958.  if v9 <= 0 then goto L397992;
  #L39795c.  v9:= v7.`com.github.mikephil.charting.listener.PieRadarChartTouchListener._velocitySamples` @type ^`java.util.ArrayList` @kind object;
  #L397960.  v2:= 0I;
  #L397962.  call temp:= `get`(v9, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L397968.  v9:= temp @kind object;
  #L39796a.  v9:= (`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample`) v9 @kind object;
  #L39796e.  v3:= v9.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.time` @type ^`long` @kind wide;
  #L397972.  v3:= v0 - v3 @kind long;
  #L397976.  v5:= 1000L;
  #L39797a.  v9:= lcmp(v3, v5);
  #L39797e.  if v9 <= 0 then goto L397992;
  #L397982.  v9:= v7.`com.github.mikephil.charting.listener.PieRadarChartTouchListener._velocitySamples` @type ^`java.util.ArrayList` @kind object;
  #L397986.  call temp:= `remove`(v9, v2) @signature `Ljava/util/ArrayList;.remove:(I)Ljava/lang/Object;` @kind virtual;
  #L39798c.  v8:= v8 + -1;
  #L397990.  goto L397954;
  #L397992.  return @kind void;
}
procedure `void` `computeScroll`(`com.github.mikephil.charting.listener.PieRadarChartTouchListener` v6 @kind this) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.computeScroll:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L397818.  v0:= v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationAngularVelocity` @type ^`float`;
  #L39781c.  v1:= 0I;
  #L39781e.  v0:= fcmpl(v0, v1);
  #L397822.  if v0 != 0 then goto L397828;
  #L397826.  return @kind void;
  #L397828.  call temp:= `currentAnimationTimeMillis`() @signature `Landroid/view/animation/AnimationUtils;.currentAnimationTimeMillis:()J` @kind static;
  #L39782e.  v0:= temp @kind wide;
  #L397830.  v2:= v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationAngularVelocity` @type ^`float`;
  #L397834.  v3:= v6.`com.github.mikephil.charting.listener.ChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L397838.  v3:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v3 @kind object;
  #L39783c.  call temp:= `getDragDecelerationFrictionCoef`(v3) @signature `Lcom/github/mikephil/charting/charts/Chart;.getDragDecelerationFrictionCoef:()F` @kind virtual;
  #L397842.  v3:= temp;
  #L397844.  v2:= v2 * v3 @kind float;
  #L397848.  v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationAngularVelocity` @type ^`float` := v2;
  #L39784c.  v2:= v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationLastTime` @type ^`long` @kind wide;
  #L397850.  v2:= v0 - v2 @kind long;
  #L397854.  v2:= (`float`) v2 @kind l2f;
  #L397856.  v3:= 1000.0F;
  #L39785a.  v2:= v2 / v3 @kind float;
  #L39785c.  v3:= v6.`com.github.mikephil.charting.listener.ChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L397860.  v4:= v3 @kind object;
  #L397862.  v4:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v4 @kind object;
  #L397866.  v3:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v3 @kind object;
  #L39786a.  call temp:= `getRotationAngle`(v3) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRotationAngle:()F` @kind virtual;
  #L397870.  v3:= temp;
  #L397872.  v5:= v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationAngularVelocity` @type ^`float`;
  #L397876.  v5:= v5 * v2 @kind float;
  #L39787a.  v3:= v3 + v5 @kind float;
  #L39787c.  call `setRotationAngle`(v4, v3) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.setRotationAngle:(F)V` @kind virtual;
  #L397882.  v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationLastTime` @type ^`long` := v0 @kind wide;
  #L397886.  v0:= v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationAngularVelocity` @type ^`float`;
  #L39788a.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L397890.  v0:= temp;
  #L397892.  v0:= (`double`) v0 @kind f2d;
  #L397894.  v2:= 0.001D;
  #L39789e.  v4:= dcmpl(v0, v2);
  #L3978a2.  if v4 < 0 then goto L3978b2;
  #L3978a6.  v0:= v6.`com.github.mikephil.charting.listener.ChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L3978aa.  call `postInvalidateOnAnimation`(v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.postInvalidateOnAnimation:(Landroid/view/View;)V` @kind static;
  #L3978b0.  goto L3978b8;
  #L3978b2.  call `stopDeceleration`(v6) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.stopDeceleration:()V` @kind virtual;
  #L3978b8.  return @kind void;
}
procedure `void` `onLongPress`(`com.github.mikephil.charting.listener.PieRadarChartTouchListener` v1 @kind this, `android.view.MotionEvent` v2 @kind object) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.onLongPress:(Landroid/view/MotionEvent;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3978cc.  v0:= `@@com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture.LONG_PRESS` @type ^`com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture` @kind object;
  #L3978d0.  v1.`com.github.mikephil.charting.listener.ChartTouchListener.mLastGesture` @type ^`com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture` := v0 @kind object;
  #L3978d4.  v0:= v1.`com.github.mikephil.charting.listener.ChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L3978d8.  v0:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v0 @kind object;
  #L3978dc.  call temp:= `getOnChartGestureListener`(v0) @signature `Lcom/github/mikephil/charting/charts/Chart;.getOnChartGestureListener:()Lcom/github/mikephil/charting/listener/OnChartGestureListener;` @kind virtual;
  #L3978e2.  v0:= temp @kind object;
  #L3978e4.  if v0 == 0 then goto L3978ee;
  #L3978e8.  call `onChartLongPressed`(v0, v2) @signature `Lcom/github/mikephil/charting/listener/OnChartGestureListener;.onChartLongPressed:(Landroid/view/MotionEvent;)V` @kind interface;
  #L3978ee.  return @kind void;
}
procedure `boolean` `onSingleTapConfirmed`(`com.github.mikephil.charting.listener.PieRadarChartTouchListener` v0 @kind this, `android.view.MotionEvent` v1 @kind object) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.onSingleTapConfirmed:(Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;

  #L397464.  v1:= 1I;
  #L397466.  return v1;
}
procedure `boolean` `onSingleTapUp`(`com.github.mikephil.charting.listener.PieRadarChartTouchListener` v3 @kind this, `android.view.MotionEvent` v4 @kind object) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.onSingleTapUp:(Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L397478.  v0:= `@@com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture.SINGLE_TAP` @type ^`com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture` @kind object;
  #L39747c.  v3.`com.github.mikephil.charting.listener.ChartTouchListener.mLastGesture` @type ^`com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture` := v0 @kind object;
  #L397480.  v0:= v3.`com.github.mikephil.charting.listener.ChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L397484.  v0:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v0 @kind object;
  #L397488.  call temp:= `getOnChartGestureListener`(v0) @signature `Lcom/github/mikephil/charting/charts/Chart;.getOnChartGestureListener:()Lcom/github/mikephil/charting/listener/OnChartGestureListener;` @kind virtual;
  #L39748e.  v0:= temp @kind object;
  #L397490.  if v0 == 0 then goto L39749a;
  #L397494.  call `onChartSingleTapped`(v0, v4) @signature `Lcom/github/mikephil/charting/listener/OnChartGestureListener;.onChartSingleTapped:(Landroid/view/MotionEvent;)V` @kind interface;
  #L39749a.  v0:= v3.`com.github.mikephil.charting.listener.ChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L39749e.  v0:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v0 @kind object;
  #L3974a2.  call temp:= `isHighlightPerTapEnabled`(v0) @signature `Lcom/github/mikephil/charting/charts/Chart;.isHighlightPerTapEnabled:()Z` @kind virtual;
  #L3974a8.  v0:= temp;
  #L3974aa.  if v0 != 0 then goto L3974b2;
  #L3974ae.  v4:= 0I;
  #L3974b0.  return v4;
  #L3974b2.  v0:= v3.`com.github.mikephil.charting.listener.ChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L3974b6.  v0:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v0 @kind object;
  #L3974ba.  call temp:= `getX`(v4) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L3974c0.  v1:= temp;
  #L3974c2.  call temp:= `getY`(v4) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L3974c8.  v2:= temp;
  #L3974ca.  call temp:= `getHighlightByTouchPoint`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/charts/Chart;.getHighlightByTouchPoint:(FF)Lcom/github/mikephil/charting/highlight/Highlight;` @kind virtual;
  #L3974d0.  v0:= temp @kind object;
  #L3974d2.  call `performHighlight`(v3, v0, v4) @signature `Lcom/github/mikephil/charting/listener/ChartTouchListener;.performHighlight:(Lcom/github/mikephil/charting/highlight/Highlight;Landroid/view/MotionEvent;)V` @kind virtual;
  #L3974d8.  v4:= 1I;
  #L3974da.  return v4;
}
procedure `boolean` `onTouch`(`com.github.mikephil.charting.listener.PieRadarChartTouchListener` v5 @kind this, `android.view.View` v6 @kind object, `android.view.MotionEvent` v7 @kind object) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.onTouch:(Landroid/view/View;Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3974ec.  v6:= v5.`com.github.mikephil.charting.listener.ChartTouchListener.mGestureDetector` @type ^`android.view.GestureDetector` @kind object;
  #L3974f0.  call temp:= `onTouchEvent`(v6, v7) @signature `Landroid/view/GestureDetector;.onTouchEvent:(Landroid/view/MotionEvent;)Z` @kind virtual;
  #L3974f6.  v6:= temp;
  #L3974f8.  v0:= 1I;
  #L3974fa.  if v6 == 0 then goto L397500;
  #L3974fe.  return v0;
  #L397500.  v6:= v5.`com.github.mikephil.charting.listener.ChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L397504.  v6:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v6 @kind object;
  #L397508.  call temp:= `isRotationEnabled`(v6) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.isRotationEnabled:()Z` @kind virtual;
  #L39750e.  v6:= temp;
  #L397510.  if v6 == 0 then goto L39766a;
  #L397514.  call temp:= `getX`(v7) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L39751a.  v6:= temp;
  #L39751c.  call temp:= `getY`(v7) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L397522.  v1:= temp;
  #L397524.  call temp:= `getAction`(v7) @signature `Landroid/view/MotionEvent;.getAction:()I` @kind virtual;
  #L39752a.  v2:= temp;
  #L39752c.  if v2 == 0 then goto L39762c;
  #L397530.  if v2 == v0 then goto L3975c4;
  #L397534.  v3:= 2I;
  #L397536.  if v2 == v3 then goto L39753e;
  #L39753a.  goto L39766a;
  #L39753e.  v2:= v5.`com.github.mikephil.charting.listener.ChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L397542.  v2:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v2 @kind object;
  #L397546.  call temp:= `isDragDecelerationEnabled`(v2) @signature `Lcom/github/mikephil/charting/charts/Chart;.isDragDecelerationEnabled:()Z` @kind virtual;
  #L39754c.  v2:= temp;
  #L39754e.  if v2 == 0 then goto L397558;
  #L397552.  call `sampleVelocity`(v5, v6, v1) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.sampleVelocity:(FF)V` @kind direct;
  #L397558.  v2:= v5.`com.github.mikephil.charting.listener.ChartTouchListener.mTouchMode` @type ^`int`;
  #L39755c.  v3:= 6I;
  #L39755e.  if v2 != 0 then goto L3975a6;
  #L397562.  v2:= v5.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mTouchStartPoint` @type ^`com.github.mikephil.charting.utils.MPPointF` @kind object;
  #L397566.  v4:= v2.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L39756a.  v2:= v2.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L39756e.  call temp:= `distance`(v6, v4, v1, v2) @signature `Lcom/github/mikephil/charting/listener/ChartTouchListener;.distance:(FFFF)F` @kind static;
  #L397574.  v2:= temp;
  #L397576.  v4:= 8.0F;
  #L39757a.  call temp:= `convertDpToPixel`(v4) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L397580.  v4:= temp;
  #L397582.  v2:= fcmpl(v2, v4);
  #L397586.  if v2 <= 0 then goto L3975a6;
  #L39758a.  v6:= `@@com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture.ROTATE` @type ^`com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture` @kind object;
  #L39758e.  v5.`com.github.mikephil.charting.listener.ChartTouchListener.mLastGesture` @type ^`com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture` := v6 @kind object;
  #L397592.  v5.`com.github.mikephil.charting.listener.ChartTouchListener.mTouchMode` @type ^`int` := v3;
  #L397596.  v6:= v5.`com.github.mikephil.charting.listener.ChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L39759a.  v6:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v6 @kind object;
  #L39759e.  call `disableScroll`(v6) @signature `Lcom/github/mikephil/charting/charts/Chart;.disableScroll:()V` @kind virtual;
  #L3975a4.  goto L397624;
  #L3975a6.  v2:= v5.`com.github.mikephil.charting.listener.ChartTouchListener.mTouchMode` @type ^`int`;
  #L3975aa.  if v2 != v3 then goto L397624;
  #L3975ae.  call `updateGestureRotation`(v5, v6, v1) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.updateGestureRotation:(FF)V` @kind virtual;
  #L3975b4.  v6:= v5.`com.github.mikephil.charting.listener.ChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L3975b8.  v6:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v6 @kind object;
  #L3975bc.  call `invalidate`(v6) @signature `Landroid/view/ViewGroup;.invalidate:()V` @kind virtual;
  #L3975c2.  goto L397624;
  #L3975c4.  v2:= v5.`com.github.mikephil.charting.listener.ChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L3975c8.  v2:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v2 @kind object;
  #L3975cc.  call temp:= `isDragDecelerationEnabled`(v2) @signature `Lcom/github/mikephil/charting/charts/Chart;.isDragDecelerationEnabled:()Z` @kind virtual;
  #L3975d2.  v2:= temp;
  #L3975d4.  if v2 == 0 then goto L397610;
  #L3975d8.  call `stopDeceleration`(v5) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.stopDeceleration:()V` @kind virtual;
  #L3975de.  call `sampleVelocity`(v5, v6, v1) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.sampleVelocity:(FF)V` @kind direct;
  #L3975e4.  call temp:= `calculateVelocity`(v5) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.calculateVelocity:()F` @kind direct;
  #L3975ea.  v6:= temp;
  #L3975ec.  v5.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationAngularVelocity` @type ^`float` := v6;
  #L3975f0.  v1:= 0I;
  #L3975f2.  v6:= fcmpl(v6, v1);
  #L3975f6.  if v6 == 0 then goto L397610;
  #L3975fa.  call temp:= `currentAnimationTimeMillis`() @signature `Landroid/view/animation/AnimationUtils;.currentAnimationTimeMillis:()J` @kind static;
  #L397600.  v1:= temp @kind wide;
  #L397602.  v5.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationLastTime` @type ^`long` := v1 @kind wide;
  #L397606.  v6:= v5.`com.github.mikephil.charting.listener.ChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L39760a.  call `postInvalidateOnAnimation`(v6) @signature `Lcom/github/mikephil/charting/utils/Utils;.postInvalidateOnAnimation:(Landroid/view/View;)V` @kind static;
  #L397610.  v6:= v5.`com.github.mikephil.charting.listener.ChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L397614.  v6:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v6 @kind object;
  #L397618.  call `enableScroll`(v6) @signature `Lcom/github/mikephil/charting/charts/Chart;.enableScroll:()V` @kind virtual;
  #L39761e.  v6:= 0I;
  #L397620.  v5.`com.github.mikephil.charting.listener.ChartTouchListener.mTouchMode` @type ^`int` := v6;
  #L397624.  call `endAction`(v5, v7) @signature `Lcom/github/mikephil/charting/listener/ChartTouchListener;.endAction:(Landroid/view/MotionEvent;)V` @kind virtual;
  #L39762a.  goto L39766a;
  #L39762c.  call `startAction`(v5, v7) @signature `Lcom/github/mikephil/charting/listener/ChartTouchListener;.startAction:(Landroid/view/MotionEvent;)V` @kind virtual;
  #L397632.  call `stopDeceleration`(v5) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.stopDeceleration:()V` @kind virtual;
  #L397638.  call `resetVelocity`(v5) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.resetVelocity:()V` @kind direct;
  #L39763e.  v7:= v5.`com.github.mikephil.charting.listener.ChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L397642.  v7:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v7 @kind object;
  #L397646.  call temp:= `isDragDecelerationEnabled`(v7) @signature `Lcom/github/mikephil/charting/charts/Chart;.isDragDecelerationEnabled:()Z` @kind virtual;
  #L39764c.  v7:= temp;
  #L39764e.  if v7 == 0 then goto L397658;
  #L397652.  call `sampleVelocity`(v5, v6, v1) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.sampleVelocity:(FF)V` @kind direct;
  #L397658.  call `setGestureStartAngle`(v5, v6, v1) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.setGestureStartAngle:(FF)V` @kind virtual;
  #L39765e.  v7:= v5.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mTouchStartPoint` @type ^`com.github.mikephil.charting.utils.MPPointF` @kind object;
  #L397662.  v7.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float` := v6;
  #L397666.  v7.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float` := v1;
  #L39766a.  return v0;
}
procedure `void` `setGestureStartAngle`(`com.github.mikephil.charting.listener.PieRadarChartTouchListener` v1 @kind this, `float` v2 , `float` v3 ) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.setGestureStartAngle:(FF)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3979a4.  v0:= v1.`com.github.mikephil.charting.listener.ChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L3979a8.  v0:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v0 @kind object;
  #L3979ac.  call temp:= `getAngleForPoint`(v0, v2, v3) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getAngleForPoint:(FF)F` @kind virtual;
  #L3979b2.  v2:= temp;
  #L3979b4.  v3:= v1.`com.github.mikephil.charting.listener.ChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L3979b8.  v3:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v3 @kind object;
  #L3979bc.  call temp:= `getRawRotationAngle`(v3) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRawRotationAngle:()F` @kind virtual;
  #L3979c2.  v3:= temp;
  #L3979c4.  v2:= v2 - v3 @kind float;
  #L3979c6.  v1.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mStartAngle` @type ^`float` := v2;
  #L3979ca.  return @kind void;
}
procedure `void` `stopDeceleration`(`com.github.mikephil.charting.listener.PieRadarChartTouchListener` v1 @kind this) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.stopDeceleration:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3979dc.  v0:= 0I;
  #L3979de.  v1.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationAngularVelocity` @type ^`float` := v0;
  #L3979e2.  return @kind void;
}
procedure `void` `updateGestureRotation`(`com.github.mikephil.charting.listener.PieRadarChartTouchListener` v2 @kind this, `float` v3 , `float` v4 ) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.updateGestureRotation:(FF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3979f4.  v0:= v2.`com.github.mikephil.charting.listener.ChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L3979f8.  v1:= v0 @kind object;
  #L3979fa.  v1:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v1 @kind object;
  #L3979fe.  v0:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v0 @kind object;
  #L397a02.  call temp:= `getAngleForPoint`(v0, v3, v4) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getAngleForPoint:(FF)F` @kind virtual;
  #L397a08.  v3:= temp;
  #L397a0a.  v4:= v2.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mStartAngle` @type ^`float`;
  #L397a0e.  v3:= v3 - v4 @kind float;
  #L397a10.  call `setRotationAngle`(v1, v3) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.setRotationAngle:(F)V` @kind virtual;
  #L397a16.  return @kind void;
}
