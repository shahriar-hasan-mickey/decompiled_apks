record `com.github.mikephil.charting.components.YAxis` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.components.AxisBase` @kind class {
  `com.github.mikephil.charting.components.YAxis$AxisDependency` `com.github.mikephil.charting.components.YAxis.mAxisDependency` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.components.YAxis.mDrawBottomYLabelEntry` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.components.YAxis.mDrawTopYLabelEntry` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.components.YAxis.mDrawZeroLine` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.components.YAxis.mInverted` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.components.YAxis.mMaxWidth` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.components.YAxis.mMinWidth` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.components.YAxis$YAxisLabelPosition` `com.github.mikephil.charting.components.YAxis.mPosition` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.components.YAxis.mSpacePercentBottom` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.components.YAxis.mSpacePercentTop` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.components.YAxis.mUseAutoScaleRestrictionMax` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.components.YAxis.mUseAutoScaleRestrictionMin` @AccessFlag PRIVATE;
  `int` `com.github.mikephil.charting.components.YAxis.mZeroLineColor` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.components.YAxis.mZeroLineWidth` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.github.mikephil.charting.components.YAxis` v2 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L38e0cc.  call `<init>`(v2) @signature `Lcom/github/mikephil/charting/components/AxisBase;.<init>:()V` @kind direct;
  #L38e0d2.  v0:= 1I;
  #L38e0d4.  v2.`com.github.mikephil.charting.components.YAxis.mDrawBottomYLabelEntry` @type ^`boolean` := v0 @kind boolean;
  #L38e0d8.  v2.`com.github.mikephil.charting.components.YAxis.mDrawTopYLabelEntry` @type ^`boolean` := v0 @kind boolean;
  #L38e0dc.  v0:= 0I;
  #L38e0de.  v2.`com.github.mikephil.charting.components.YAxis.mInverted` @type ^`boolean` := v0 @kind boolean;
  #L38e0e2.  v2.`com.github.mikephil.charting.components.YAxis.mDrawZeroLine` @type ^`boolean` := v0 @kind boolean;
  #L38e0e6.  v2.`com.github.mikephil.charting.components.YAxis.mUseAutoScaleRestrictionMin` @type ^`boolean` := v0 @kind boolean;
  #L38e0ea.  v2.`com.github.mikephil.charting.components.YAxis.mUseAutoScaleRestrictionMax` @type ^`boolean` := v0 @kind boolean;
  #L38e0ee.  v0:= -7829368I;
  #L38e0f4.  v2.`com.github.mikephil.charting.components.YAxis.mZeroLineColor` @type ^`int` := v0;
  #L38e0f8.  v0:= 1.0F;
  #L38e0fc.  v2.`com.github.mikephil.charting.components.YAxis.mZeroLineWidth` @type ^`float` := v0;
  #L38e100.  v0:= 10.0F;
  #L38e104.  v2.`com.github.mikephil.charting.components.YAxis.mSpacePercentTop` @type ^`float` := v0;
  #L38e108.  v2.`com.github.mikephil.charting.components.YAxis.mSpacePercentBottom` @type ^`float` := v0;
  #L38e10c.  v0:= `@@com.github.mikephil.charting.components.YAxis$YAxisLabelPosition.OUTSIDE_CHART` @type ^`com.github.mikephil.charting.components.YAxis$YAxisLabelPosition` @kind object;
  #L38e110.  v2.`com.github.mikephil.charting.components.YAxis.mPosition` @type ^`com.github.mikephil.charting.components.YAxis$YAxisLabelPosition` := v0 @kind object;
  #L38e114.  v0:= 0I;
  #L38e116.  v2.`com.github.mikephil.charting.components.YAxis.mMinWidth` @type ^`float` := v0;
  #L38e11a.  v1:= InfinityF;
  #L38e11e.  v2.`com.github.mikephil.charting.components.YAxis.mMaxWidth` @type ^`float` := v1;
  #L38e122.  v1:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L38e126.  v2.`com.github.mikephil.charting.components.YAxis.mAxisDependency` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` := v1 @kind object;
  #L38e12a.  v2.`com.github.mikephil.charting.components.ComponentBase.mYOffset` @type ^`float` := v0;
  #L38e12e.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.components.YAxis` v2 @kind this, `com.github.mikephil.charting.components.YAxis$AxisDependency` v3 @kind object) @signature `Lcom/github/mikephil/charting/components/YAxis;.<init>:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L38e140.  call `<init>`(v2) @signature `Lcom/github/mikephil/charting/components/AxisBase;.<init>:()V` @kind direct;
  #L38e146.  v0:= 1I;
  #L38e148.  v2.`com.github.mikephil.charting.components.YAxis.mDrawBottomYLabelEntry` @type ^`boolean` := v0 @kind boolean;
  #L38e14c.  v2.`com.github.mikephil.charting.components.YAxis.mDrawTopYLabelEntry` @type ^`boolean` := v0 @kind boolean;
  #L38e150.  v0:= 0I;
  #L38e152.  v2.`com.github.mikephil.charting.components.YAxis.mInverted` @type ^`boolean` := v0 @kind boolean;
  #L38e156.  v2.`com.github.mikephil.charting.components.YAxis.mDrawZeroLine` @type ^`boolean` := v0 @kind boolean;
  #L38e15a.  v2.`com.github.mikephil.charting.components.YAxis.mUseAutoScaleRestrictionMin` @type ^`boolean` := v0 @kind boolean;
  #L38e15e.  v2.`com.github.mikephil.charting.components.YAxis.mUseAutoScaleRestrictionMax` @type ^`boolean` := v0 @kind boolean;
  #L38e162.  v0:= -7829368I;
  #L38e168.  v2.`com.github.mikephil.charting.components.YAxis.mZeroLineColor` @type ^`int` := v0;
  #L38e16c.  v0:= 1.0F;
  #L38e170.  v2.`com.github.mikephil.charting.components.YAxis.mZeroLineWidth` @type ^`float` := v0;
  #L38e174.  v0:= 10.0F;
  #L38e178.  v2.`com.github.mikephil.charting.components.YAxis.mSpacePercentTop` @type ^`float` := v0;
  #L38e17c.  v2.`com.github.mikephil.charting.components.YAxis.mSpacePercentBottom` @type ^`float` := v0;
  #L38e180.  v0:= `@@com.github.mikephil.charting.components.YAxis$YAxisLabelPosition.OUTSIDE_CHART` @type ^`com.github.mikephil.charting.components.YAxis$YAxisLabelPosition` @kind object;
  #L38e184.  v2.`com.github.mikephil.charting.components.YAxis.mPosition` @type ^`com.github.mikephil.charting.components.YAxis$YAxisLabelPosition` := v0 @kind object;
  #L38e188.  v0:= 0I;
  #L38e18a.  v2.`com.github.mikephil.charting.components.YAxis.mMinWidth` @type ^`float` := v0;
  #L38e18e.  v1:= InfinityF;
  #L38e192.  v2.`com.github.mikephil.charting.components.YAxis.mMaxWidth` @type ^`float` := v1;
  #L38e196.  v2.`com.github.mikephil.charting.components.YAxis.mAxisDependency` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` := v3 @kind object;
  #L38e19a.  v2.`com.github.mikephil.charting.components.ComponentBase.mYOffset` @type ^`float` := v0;
  #L38e19e.  return @kind void;
}
procedure `void` `calculate`(`com.github.mikephil.charting.components.YAxis` v4 @kind this, `float` v5 , `float` v6 ) @signature `Lcom/github/mikephil/charting/components/YAxis;.calculate:(FF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L38e1b0.  v0:= v6 - v5 @kind float;
  #L38e1b4.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L38e1ba.  v0:= temp;
  #L38e1bc.  v1:= 0I;
  #L38e1be.  v0:= fcmpl(v0, v1);
  #L38e1c2.  if v0 != 0 then goto L38e1ce;
  #L38e1c6.  v0:= 1.0F;
  #L38e1ca.  v6:= v6 + v0 @kind float;
  #L38e1cc.  v5:= v5 - v0 @kind float;
  #L38e1ce.  v0:= v6 - v5 @kind float;
  #L38e1d2.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L38e1d8.  v0:= temp;
  #L38e1da.  v1:= v4.`com.github.mikephil.charting.components.AxisBase.mCustomAxisMin` @type ^`boolean` @kind boolean;
  #L38e1de.  v2:= 100.0F;
  #L38e1e2.  if v1 == 0 then goto L38e1ec;
  #L38e1e6.  v5:= v4.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float`;
  #L38e1ea.  goto L38e1fe;
  #L38e1ec.  v1:= v0 / v2 @kind float;
  #L38e1f0.  call temp:= `getSpaceBottom`(v4) @signature `Lcom/github/mikephil/charting/components/YAxis;.getSpaceBottom:()F` @kind virtual;
  #L38e1f6.  v3:= temp;
  #L38e1f8.  v1:= v1 * v3 @kind float;
  #L38e1fc.  v5:= v5 - v1 @kind float;
  #L38e1fe.  v4.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float` := v5;
  #L38e202.  v5:= v4.`com.github.mikephil.charting.components.AxisBase.mCustomAxisMax` @type ^`boolean` @kind boolean;
  #L38e206.  if v5 == 0 then goto L38e210;
  #L38e20a.  v5:= v4.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float`;
  #L38e20e.  goto L38e222;
  #L38e210.  v0:= v0 / v2 @kind float;
  #L38e212.  call temp:= `getSpaceTop`(v4) @signature `Lcom/github/mikephil/charting/components/YAxis;.getSpaceTop:()F` @kind virtual;
  #L38e218.  v5:= temp;
  #L38e21a.  v0:= v0 * v5 @kind float;
  #L38e21e.  v5:= v6 + v0 @kind float;
  #L38e222.  v4.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float` := v5;
  #L38e226.  v6:= v4.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float`;
  #L38e22a.  v6:= v6 - v5 @kind float;
  #L38e22c.  call temp:= `abs`(v6) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L38e232.  v5:= temp;
  #L38e234.  v4.`com.github.mikephil.charting.components.AxisBase.mAxisRange` @type ^`float` := v5;
  #L38e238.  return @kind void;
}
procedure `com.github.mikephil.charting.components.YAxis$AxisDependency` `getAxisDependency`(`com.github.mikephil.charting.components.YAxis` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.getAxisDependency:()Lcom/github/mikephil/charting/components/YAxis$AxisDependency;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38df2c.  v0:= v1.`com.github.mikephil.charting.components.YAxis.mAxisDependency` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L38df30.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.components.YAxis$YAxisLabelPosition` `getLabelPosition`(`com.github.mikephil.charting.components.YAxis` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.getLabelPosition:()Lcom/github/mikephil/charting/components/YAxis$YAxisLabelPosition;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38df44.  v0:= v1.`com.github.mikephil.charting.components.YAxis.mPosition` @type ^`com.github.mikephil.charting.components.YAxis$YAxisLabelPosition` @kind object;
  #L38df48.  return v0 @kind object;
}
procedure `float` `getMaxWidth`(`com.github.mikephil.charting.components.YAxis` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.getMaxWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38df5c.  v0:= v1.`com.github.mikephil.charting.components.YAxis.mMaxWidth` @type ^`float`;
  #L38df60.  return v0;
}
procedure `float` `getMinWidth`(`com.github.mikephil.charting.components.YAxis` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.getMinWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38df74.  v0:= v1.`com.github.mikephil.charting.components.YAxis.mMinWidth` @type ^`float`;
  #L38df78.  return v0;
}
procedure `float` `getRequiredHeightSpace`(`com.github.mikephil.charting.components.YAxis` v2 @kind this, `android.graphics.Paint` v3 @kind object) @signature `Lcom/github/mikephil/charting/components/YAxis;.getRequiredHeightSpace:(Landroid/graphics/Paint;)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38df8c.  v0:= v2.`com.github.mikephil.charting.components.ComponentBase.mTextSize` @type ^`float`;
  #L38df90.  call `setTextSize`(v3, v0) @signature `Landroid/graphics/Paint;.setTextSize:(F)V` @kind virtual;
  #L38df96.  call temp:= `getLongestLabel`(v2) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getLongestLabel:()Ljava/lang/String;` @kind virtual;
  #L38df9c.  v0:= temp @kind object;
  #L38df9e.  call temp:= `calcTextHeight`(v3, v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.calcTextHeight:(Landroid/graphics/Paint;Ljava/lang/String;)I` @kind static;
  #L38dfa4.  v3:= temp;
  #L38dfa6.  v3:= (`float`) v3 @kind i2f;
  #L38dfa8.  call temp:= `getYOffset`(v2) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.getYOffset:()F` @kind virtual;
  #L38dfae.  v0:= temp;
  #L38dfb0.  v1:= 2.0F;
  #L38dfb4.  v0:= v0 * v1 @kind float;
  #L38dfb8.  v3:= v3 + v0 @kind float;
  #L38dfba.  return v3;
}
procedure `float` `getRequiredWidthSpace`(`com.github.mikephil.charting.components.YAxis` v7 @kind this, `android.graphics.Paint` v8 @kind object) @signature `Lcom/github/mikephil/charting/components/YAxis;.getRequiredWidthSpace:(Landroid/graphics/Paint;)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L38dfcc.  v0:= v7.`com.github.mikephil.charting.components.ComponentBase.mTextSize` @type ^`float`;
  #L38dfd0.  call `setTextSize`(v8, v0) @signature `Landroid/graphics/Paint;.setTextSize:(F)V` @kind virtual;
  #L38dfd6.  call temp:= `getLongestLabel`(v7) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getLongestLabel:()Ljava/lang/String;` @kind virtual;
  #L38dfdc.  v0:= temp @kind object;
  #L38dfde.  call temp:= `calcTextWidth`(v8, v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.calcTextWidth:(Landroid/graphics/Paint;Ljava/lang/String;)I` @kind static;
  #L38dfe4.  v8:= temp;
  #L38dfe6.  v8:= (`float`) v8 @kind i2f;
  #L38dfe8.  call temp:= `getXOffset`(v7) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.getXOffset:()F` @kind virtual;
  #L38dfee.  v0:= temp;
  #L38dff0.  v1:= 2.0F;
  #L38dff4.  v0:= v0 * v1 @kind float;
  #L38dff8.  v8:= v8 + v0 @kind float;
  #L38dffa.  call temp:= `getMinWidth`(v7) @signature `Lcom/github/mikephil/charting/components/YAxis;.getMinWidth:()F` @kind virtual;
  #L38e000.  v0:= temp;
  #L38e002.  call temp:= `getMaxWidth`(v7) @signature `Lcom/github/mikephil/charting/components/YAxis;.getMaxWidth:()F` @kind virtual;
  #L38e008.  v1:= temp;
  #L38e00a.  v2:= 0I;
  #L38e00c.  v3:= fcmpl(v0, v2);
  #L38e010.  if v3 <= 0 then goto L38e01c;
  #L38e014.  call temp:= `convertDpToPixel`(v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L38e01a.  v0:= temp;
  #L38e01c.  v2:= fcmpl(v1, v2);
  #L38e020.  if v2 <= 0 then goto L38e038;
  #L38e024.  v2:= InfinityF;
  #L38e028.  v2:= fcmpl(v1, v2);
  #L38e02c.  if v2 == 0 then goto L38e038;
  #L38e030.  call temp:= `convertDpToPixel`(v1) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L38e036.  v1:= temp;
  #L38e038.  v2:= (`double`) v1 @kind f2d;
  #L38e03a.  v4:= 0L;
  #L38e03e.  v6:= dcmpl(v2, v4);
  #L38e042.  if v6 <= 0 then goto L38e048;
  #L38e046.  goto L38e04a;
  #L38e048.  v1:= v8;
  #L38e04a.  call temp:= `min`(v8, v1) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L38e050.  v8:= temp;
  #L38e052.  call temp:= `max`(v0, v8) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L38e058.  v8:= temp;
  #L38e05a.  return v8;
}
procedure `float` `getSpaceBottom`(`com.github.mikephil.charting.components.YAxis` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.getSpaceBottom:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38e06c.  v0:= v1.`com.github.mikephil.charting.components.YAxis.mSpacePercentBottom` @type ^`float`;
  #L38e070.  return v0;
}
procedure `float` `getSpaceTop`(`com.github.mikephil.charting.components.YAxis` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.getSpaceTop:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38e084.  v0:= v1.`com.github.mikephil.charting.components.YAxis.mSpacePercentTop` @type ^`float`;
  #L38e088.  return v0;
}
procedure `int` `getZeroLineColor`(`com.github.mikephil.charting.components.YAxis` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.getZeroLineColor:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38e0b4.  v0:= v1.`com.github.mikephil.charting.components.YAxis.mZeroLineColor` @type ^`int`;
  #L38e0b8.  return v0;
}
procedure `float` `getZeroLineWidth`(`com.github.mikephil.charting.components.YAxis` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.getZeroLineWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38e09c.  v0:= v1.`com.github.mikephil.charting.components.YAxis.mZeroLineWidth` @type ^`float`;
  #L38e0a0.  return v0;
}
procedure `boolean` `isDrawBottomYLabelEntryEnabled`(`com.github.mikephil.charting.components.YAxis` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.isDrawBottomYLabelEntryEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38de5c.  v0:= v1.`com.github.mikephil.charting.components.YAxis.mDrawBottomYLabelEntry` @type ^`boolean` @kind boolean;
  #L38de60.  return v0;
}
procedure `boolean` `isDrawTopYLabelEntryEnabled`(`com.github.mikephil.charting.components.YAxis` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.isDrawTopYLabelEntryEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38de74.  v0:= v1.`com.github.mikephil.charting.components.YAxis.mDrawTopYLabelEntry` @type ^`boolean` @kind boolean;
  #L38de78.  return v0;
}
procedure `boolean` `isDrawZeroLineEnabled`(`com.github.mikephil.charting.components.YAxis` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.isDrawZeroLineEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38de8c.  v0:= v1.`com.github.mikephil.charting.components.YAxis.mDrawZeroLine` @type ^`boolean` @kind boolean;
  #L38de90.  return v0;
}
procedure `boolean` `isInverted`(`com.github.mikephil.charting.components.YAxis` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.isInverted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38dea4.  v0:= v1.`com.github.mikephil.charting.components.YAxis.mInverted` @type ^`boolean` @kind boolean;
  #L38dea8.  return v0;
}
procedure `boolean` `isUseAutoScaleMaxRestriction`(`com.github.mikephil.charting.components.YAxis` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.isUseAutoScaleMaxRestriction:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38debc.  v0:= v1.`com.github.mikephil.charting.components.YAxis.mUseAutoScaleRestrictionMax` @type ^`boolean` @kind boolean;
  #L38dec0.  return v0;
}
procedure `boolean` `isUseAutoScaleMinRestriction`(`com.github.mikephil.charting.components.YAxis` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.isUseAutoScaleMinRestriction:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38ded4.  v0:= v1.`com.github.mikephil.charting.components.YAxis.mUseAutoScaleRestrictionMin` @type ^`boolean` @kind boolean;
  #L38ded8.  return v0;
}
procedure `boolean` `needsOffset`(`com.github.mikephil.charting.components.YAxis` v2 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.needsOffset:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38deec.  call temp:= `isEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.isEnabled:()Z` @kind virtual;
  #L38def2.  v0:= temp;
  #L38def4.  if v0 == 0 then goto L38df18;
  #L38def8.  call temp:= `isDrawLabelsEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawLabelsEnabled:()Z` @kind virtual;
  #L38defe.  v0:= temp;
  #L38df00.  if v0 == 0 then goto L38df18;
  #L38df04.  call temp:= `getLabelPosition`(v2) @signature `Lcom/github/mikephil/charting/components/YAxis;.getLabelPosition:()Lcom/github/mikephil/charting/components/YAxis$YAxisLabelPosition;` @kind virtual;
  #L38df0a.  v0:= temp @kind object;
  #L38df0c.  v1:= `@@com.github.mikephil.charting.components.YAxis$YAxisLabelPosition.OUTSIDE_CHART` @type ^`com.github.mikephil.charting.components.YAxis$YAxisLabelPosition` @kind object;
  #L38df10.  if v0 != v1 then goto L38df18;
  #L38df14.  v0:= 1I;
  #L38df16.  return v0;
  #L38df18.  v0:= 0I;
  #L38df1a.  return v0;
}
procedure `void` `setDrawTopYLabelEntry`(`com.github.mikephil.charting.components.YAxis` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/components/YAxis;.setDrawTopYLabelEntry:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38e24c.  v0.`com.github.mikephil.charting.components.YAxis.mDrawTopYLabelEntry` @type ^`boolean` := v1 @kind boolean;
  #L38e250.  return @kind void;
}
procedure `void` `setDrawZeroLine`(`com.github.mikephil.charting.components.YAxis` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/components/YAxis;.setDrawZeroLine:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38e264.  v0.`com.github.mikephil.charting.components.YAxis.mDrawZeroLine` @type ^`boolean` := v1 @kind boolean;
  #L38e268.  return @kind void;
}
procedure `void` `setInverted`(`com.github.mikephil.charting.components.YAxis` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/components/YAxis;.setInverted:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38e27c.  v0.`com.github.mikephil.charting.components.YAxis.mInverted` @type ^`boolean` := v1 @kind boolean;
  #L38e280.  return @kind void;
}
procedure `void` `setMaxWidth`(`com.github.mikephil.charting.components.YAxis` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/components/YAxis;.setMaxWidth:(F)V` @AccessFlag PUBLIC {
    temp;

  #L38e294.  v0.`com.github.mikephil.charting.components.YAxis.mMaxWidth` @type ^`float` := v1;
  #L38e298.  return @kind void;
}
procedure `void` `setMinWidth`(`com.github.mikephil.charting.components.YAxis` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/components/YAxis;.setMinWidth:(F)V` @AccessFlag PUBLIC {
    temp;

  #L38e2ac.  v0.`com.github.mikephil.charting.components.YAxis.mMinWidth` @type ^`float` := v1;
  #L38e2b0.  return @kind void;
}
procedure `void` `setPosition`(`com.github.mikephil.charting.components.YAxis` v0 @kind this, `com.github.mikephil.charting.components.YAxis$YAxisLabelPosition` v1 @kind object) @signature `Lcom/github/mikephil/charting/components/YAxis;.setPosition:(Lcom/github/mikephil/charting/components/YAxis$YAxisLabelPosition;)V` @AccessFlag PUBLIC {
    temp;

  #L38e2c4.  v0.`com.github.mikephil.charting.components.YAxis.mPosition` @type ^`com.github.mikephil.charting.components.YAxis$YAxisLabelPosition` := v1 @kind object;
  #L38e2c8.  return @kind void;
}
procedure `void` `setSpaceBottom`(`com.github.mikephil.charting.components.YAxis` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/components/YAxis;.setSpaceBottom:(F)V` @AccessFlag PUBLIC {
    temp;

  #L38e2dc.  v0.`com.github.mikephil.charting.components.YAxis.mSpacePercentBottom` @type ^`float` := v1;
  #L38e2e0.  return @kind void;
}
procedure `void` `setSpaceTop`(`com.github.mikephil.charting.components.YAxis` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/components/YAxis;.setSpaceTop:(F)V` @AccessFlag PUBLIC {
    temp;

  #L38e2f4.  v0.`com.github.mikephil.charting.components.YAxis.mSpacePercentTop` @type ^`float` := v1;
  #L38e2f8.  return @kind void;
}
procedure `void` `setStartAtZero`(`com.github.mikephil.charting.components.YAxis` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/components/YAxis;.setStartAtZero:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38e30c.  if v1 == 0 then goto L38e31a;
  #L38e310.  v1:= 0I;
  #L38e312.  call `setAxisMinimum`(v0, v1) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setAxisMinimum:(F)V` @kind virtual;
  #L38e318.  goto L38e320;
  #L38e31a.  call `resetAxisMinimum`(v0) @signature `Lcom/github/mikephil/charting/components/AxisBase;.resetAxisMinimum:()V` @kind virtual;
  #L38e320.  return @kind void;
}
procedure `void` `setUseAutoScaleMaxRestriction`(`com.github.mikephil.charting.components.YAxis` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/components/YAxis;.setUseAutoScaleMaxRestriction:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38e334.  v0.`com.github.mikephil.charting.components.YAxis.mUseAutoScaleRestrictionMax` @type ^`boolean` := v1 @kind boolean;
  #L38e338.  return @kind void;
}
procedure `void` `setUseAutoScaleMinRestriction`(`com.github.mikephil.charting.components.YAxis` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/components/YAxis;.setUseAutoScaleMinRestriction:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L38e34c.  v0.`com.github.mikephil.charting.components.YAxis.mUseAutoScaleRestrictionMin` @type ^`boolean` := v1 @kind boolean;
  #L38e350.  return @kind void;
}
procedure `void` `setZeroLineColor`(`com.github.mikephil.charting.components.YAxis` v0 @kind this, `int` v1 ) @signature `Lcom/github/mikephil/charting/components/YAxis;.setZeroLineColor:(I)V` @AccessFlag PUBLIC {
    temp;

  #L38e364.  v0.`com.github.mikephil.charting.components.YAxis.mZeroLineColor` @type ^`int` := v1;
  #L38e368.  return @kind void;
}
procedure `void` `setZeroLineWidth`(`com.github.mikephil.charting.components.YAxis` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/components/YAxis;.setZeroLineWidth:(F)V` @AccessFlag PUBLIC {
    temp;

  #L38e37c.  call temp:= `convertDpToPixel`(v1) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L38e382.  v1:= temp;
  #L38e384.  v0.`com.github.mikephil.charting.components.YAxis.mZeroLineWidth` @type ^`float` := v1;
  #L38e388.  return @kind void;
}
