record `com.github.mikephil.charting.matrix.Vector3` @kind class @AccessFlag PUBLIC_FINAL {
  `float` `com.github.mikephil.charting.matrix.Vector3.x` @AccessFlag PUBLIC;
  `float` `com.github.mikephil.charting.matrix.Vector3.y` @AccessFlag PUBLIC;
  `float` `com.github.mikephil.charting.matrix.Vector3.z` @AccessFlag PUBLIC;
}
global `com.github.mikephil.charting.matrix.Vector3` `@@com.github.mikephil.charting.matrix.Vector3.UNIT_X` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.github.mikephil.charting.matrix.Vector3` `@@com.github.mikephil.charting.matrix.Vector3.UNIT_Y` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.github.mikephil.charting.matrix.Vector3` `@@com.github.mikephil.charting.matrix.Vector3.UNIT_Z` @AccessFlag PUBLIC_STATIC_FINAL;
global `com.github.mikephil.charting.matrix.Vector3` `@@com.github.mikephil.charting.matrix.Vector3.ZERO` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/github/mikephil/charting/matrix/Vector3;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L397bc0.  v0:= new `com.github.mikephil.charting.matrix.Vector3`;
  #L397bc4.  v1:= 0I;
  #L397bc6.  call `<init>`(v0, v1, v1, v1) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.<init>:(FFF)V` @kind direct;
  #L397bcc.  `@@com.github.mikephil.charting.matrix.Vector3.ZERO` @type ^`com.github.mikephil.charting.matrix.Vector3` := v0 @kind object;
  #L397bd0.  v0:= new `com.github.mikephil.charting.matrix.Vector3`;
  #L397bd4.  v2:= 1.0F;
  #L397bd8.  call `<init>`(v0, v2, v1, v1) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.<init>:(FFF)V` @kind direct;
  #L397bde.  `@@com.github.mikephil.charting.matrix.Vector3.UNIT_X` @type ^`com.github.mikephil.charting.matrix.Vector3` := v0 @kind object;
  #L397be2.  v0:= new `com.github.mikephil.charting.matrix.Vector3`;
  #L397be6.  call `<init>`(v0, v1, v2, v1) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.<init>:(FFF)V` @kind direct;
  #L397bec.  `@@com.github.mikephil.charting.matrix.Vector3.UNIT_Y` @type ^`com.github.mikephil.charting.matrix.Vector3` := v0 @kind object;
  #L397bf0.  v0:= new `com.github.mikephil.charting.matrix.Vector3`;
  #L397bf4.  call `<init>`(v0, v1, v1, v2) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.<init>:(FFF)V` @kind direct;
  #L397bfa.  `@@com.github.mikephil.charting.matrix.Vector3.UNIT_Z` @type ^`com.github.mikephil.charting.matrix.Vector3` := v0 @kind object;
  #L397bfe.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.matrix.Vector3` v0 @kind this) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L397c10.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L397c16.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.matrix.Vector3` v0 @kind this, `float` v1 , `float` v2 , `float` v3 ) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.<init>:(FFF)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L397c48.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L397c4e.  call `set`(v0, v1, v2, v3) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.set:(FFF)V` @kind virtual;
  #L397c54.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.matrix.Vector3` v0 @kind this, `com.github.mikephil.charting.matrix.Vector3` v1 @kind object) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.<init>:(Lcom/github/mikephil/charting/matrix/Vector3;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L397c28.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L397c2e.  call `set`(v0, v1) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.set:(Lcom/github/mikephil/charting/matrix/Vector3;)V` @kind virtual;
  #L397c34.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.matrix.Vector3` v3 @kind this, `float`[] v4 @kind object) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.<init>:([F)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L397c68.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L397c6e.  v0:= 0I;
  #L397c70.  v0:= v4[v0];
  #L397c74.  v1:= 1I;
  #L397c76.  v1:= v4[v1];
  #L397c7a.  v2:= 2I;
  #L397c7c.  v4:= v4[v2];
  #L397c80.  call `set`(v3, v0, v1, v4) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.set:(FFF)V` @kind virtual;
  #L397c86.  return @kind void;
}
procedure `void` `add`(`com.github.mikephil.charting.matrix.Vector3` v1 @kind this, `float` v2 , `float` v3 , `float` v4 ) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.add:(FFF)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L397cd4.  v0:= v1.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float`;
  #L397cd8.  v0:= v0 + v2 @kind float;
  #L397cda.  v1.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float` := v0;
  #L397cde.  v2:= v1.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float`;
  #L397ce2.  v2:= v2 + v3 @kind float;
  #L397ce4.  v1.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float` := v2;
  #L397ce8.  v2:= v1.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float`;
  #L397cec.  v2:= v2 + v4 @kind float;
  #L397cee.  v1.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float` := v2;
  #L397cf2.  return @kind void;
}
procedure `void` `add`(`com.github.mikephil.charting.matrix.Vector3` v2 @kind this, `com.github.mikephil.charting.matrix.Vector3` v3 @kind object) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.add:(Lcom/github/mikephil/charting/matrix/Vector3;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L397c98.  v0:= v2.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float`;
  #L397c9c.  v1:= v3.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float`;
  #L397ca0.  v0:= v0 + v1 @kind float;
  #L397ca2.  v2.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float` := v0;
  #L397ca6.  v0:= v2.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float`;
  #L397caa.  v1:= v3.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float`;
  #L397cae.  v0:= v0 + v1 @kind float;
  #L397cb0.  v2.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float` := v0;
  #L397cb4.  v0:= v2.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float`;
  #L397cb8.  v3:= v3.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float`;
  #L397cbc.  v0:= v0 + v3 @kind float;
  #L397cbe.  v2.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float` := v0;
  #L397cc2.  return @kind void;
}
procedure `com.github.mikephil.charting.matrix.Vector3` `cross`(`com.github.mikephil.charting.matrix.Vector3` v7 @kind this, `com.github.mikephil.charting.matrix.Vector3` v8 @kind object) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.cross:(Lcom/github/mikephil/charting/matrix/Vector3;)Lcom/github/mikephil/charting/matrix/Vector3;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L397a54.  v0:= new `com.github.mikephil.charting.matrix.Vector3`;
  #L397a58.  v1:= v7.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float`;
  #L397a5c.  v2:= v8.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float`;
  #L397a60.  v3:= v1 * v2 @kind float;
  #L397a64.  v4:= v7.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float`;
  #L397a68.  v5:= v8.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float`;
  #L397a6c.  v6:= v4 * v5 @kind float;
  #L397a70.  v3:= v3 - v6 @kind float;
  #L397a72.  v8:= v8.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float`;
  #L397a76.  v4:= v4 * v8 @kind float;
  #L397a7a.  v6:= v7.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float`;
  #L397a7e.  v2:= v2 * v6 @kind float;
  #L397a82.  v4:= v4 - v2 @kind float;
  #L397a84.  v6:= v6 * v5 @kind float;
  #L397a88.  v1:= v1 * v8 @kind float;
  #L397a8c.  v6:= v6 - v1 @kind float;
  #L397a8e.  call `<init>`(v0, v3, v4, v6) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.<init>:(FFF)V` @kind direct;
  #L397a94.  return v0 @kind object;
}
procedure `float` `distance2`(`com.github.mikephil.charting.matrix.Vector3` v3 @kind this, `com.github.mikephil.charting.matrix.Vector3` v4 @kind object) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.distance2:(Lcom/github/mikephil/charting/matrix/Vector3;)F` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L397aa8.  v0:= v3.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float`;
  #L397aac.  v1:= v4.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float`;
  #L397ab0.  v0:= v0 - v1 @kind float;
  #L397ab2.  v1:= v3.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float`;
  #L397ab6.  v2:= v4.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float`;
  #L397aba.  v1:= v1 - v2 @kind float;
  #L397abc.  v2:= v3.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float`;
  #L397ac0.  v4:= v4.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float`;
  #L397ac4.  v2:= v2 - v4 @kind float;
  #L397ac6.  v0:= v0 * v0 @kind float;
  #L397aca.  v1:= v1 * v1 @kind float;
  #L397ace.  v0:= v0 + v1 @kind float;
  #L397ad0.  v2:= v2 * v2 @kind float;
  #L397ad4.  v0:= v0 + v2 @kind float;
  #L397ad6.  return v0;
}
procedure `void` `divide`(`com.github.mikephil.charting.matrix.Vector3` v1 @kind this, `float` v2 ) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.divide:(F)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L397d04.  v0:= 0I;
  #L397d06.  v0:= fcmpl(v2, v0);
  #L397d0a.  if v0 == 0 then goto L397d2c;
  #L397d0e.  v0:= v1.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float`;
  #L397d12.  v0:= v0 / v2 @kind float;
  #L397d14.  v1.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float` := v0;
  #L397d18.  v0:= v1.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float`;
  #L397d1c.  v0:= v0 / v2 @kind float;
  #L397d1e.  v1.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float` := v0;
  #L397d22.  v0:= v1.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float`;
  #L397d26.  v0:= v0 / v2 @kind float;
  #L397d28.  v1.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float` := v0;
  #L397d2c.  return @kind void;
}
procedure `float` `dot`(`com.github.mikephil.charting.matrix.Vector3` v3 @kind this, `com.github.mikephil.charting.matrix.Vector3` v4 @kind object) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.dot:(Lcom/github/mikephil/charting/matrix/Vector3;)F` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L397ae8.  v0:= v3.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float`;
  #L397aec.  v1:= v4.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float`;
  #L397af0.  v0:= v0 * v1 @kind float;
  #L397af4.  v1:= v3.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float`;
  #L397af8.  v2:= v4.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float`;
  #L397afc.  v1:= v1 * v2 @kind float;
  #L397b00.  v0:= v0 + v1 @kind float;
  #L397b02.  v1:= v3.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float`;
  #L397b06.  v4:= v4.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float`;
  #L397b0a.  v1:= v1 * v4 @kind float;
  #L397b0e.  v0:= v0 + v1 @kind float;
  #L397b10.  return v0;
}
procedure `float` `length`(`com.github.mikephil.charting.matrix.Vector3` v2 @kind this) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.length:()F` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L397b24.  call temp:= `length2`(v2) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.length2:()F` @kind virtual;
  #L397b2a.  v0:= temp;
  #L397b2c.  v0:= (`double`) v0 @kind f2d;
  #L397b2e.  call temp:= `sqrt`(v0) @signature `Ljava/lang/Math;.sqrt:(D)D` @kind static;
  #L397b34.  v0:= temp @kind wide;
  #L397b36.  v0:= (`float`) v0 @kind d2f;
  #L397b38.  return v0;
}
procedure `float` `length2`(`com.github.mikephil.charting.matrix.Vector3` v2 @kind this) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.length2:()F` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L397b4c.  v0:= v2.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float`;
  #L397b50.  v0:= v0 * v0 @kind float;
  #L397b54.  v1:= v2.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float`;
  #L397b58.  v1:= v1 * v1 @kind float;
  #L397b5c.  v0:= v0 + v1 @kind float;
  #L397b5e.  v1:= v2.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float`;
  #L397b62.  v1:= v1 * v1 @kind float;
  #L397b66.  v0:= v0 + v1 @kind float;
  #L397b68.  return v0;
}
procedure `void` `multiply`(`com.github.mikephil.charting.matrix.Vector3` v1 @kind this, `float` v2 ) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.multiply:(F)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L397d84.  v0:= v1.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float`;
  #L397d88.  v0:= v0 * v2 @kind float;
  #L397d8c.  v1.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float` := v0;
  #L397d90.  v0:= v1.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float`;
  #L397d94.  v0:= v0 * v2 @kind float;
  #L397d98.  v1.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float` := v0;
  #L397d9c.  v0:= v1.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float`;
  #L397da0.  v0:= v0 * v2 @kind float;
  #L397da4.  v1.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float` := v0;
  #L397da8.  return @kind void;
}
procedure `void` `multiply`(`com.github.mikephil.charting.matrix.Vector3` v2 @kind this, `com.github.mikephil.charting.matrix.Vector3` v3 @kind object) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.multiply:(Lcom/github/mikephil/charting/matrix/Vector3;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L397d40.  v0:= v2.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float`;
  #L397d44.  v1:= v3.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float`;
  #L397d48.  v0:= v0 * v1 @kind float;
  #L397d4c.  v2.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float` := v0;
  #L397d50.  v0:= v2.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float`;
  #L397d54.  v1:= v3.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float`;
  #L397d58.  v0:= v0 * v1 @kind float;
  #L397d5c.  v2.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float` := v0;
  #L397d60.  v0:= v2.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float`;
  #L397d64.  v3:= v3.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float`;
  #L397d68.  v0:= v0 * v3 @kind float;
  #L397d6c.  v2.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float` := v0;
  #L397d70.  return @kind void;
}
procedure `float` `normalize`(`com.github.mikephil.charting.matrix.Vector3` v2 @kind this) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.normalize:()F` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L397b7c.  call temp:= `length`(v2) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.length:()F` @kind virtual;
  #L397b82.  v0:= temp;
  #L397b84.  v1:= 0I;
  #L397b86.  v1:= fcmpl(v0, v1);
  #L397b8a.  if v1 == 0 then goto L397bac;
  #L397b8e.  v1:= v2.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float`;
  #L397b92.  v1:= v1 / v0 @kind float;
  #L397b94.  v2.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float` := v1;
  #L397b98.  v1:= v2.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float`;
  #L397b9c.  v1:= v1 / v0 @kind float;
  #L397b9e.  v2.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float` := v1;
  #L397ba2.  v1:= v2.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float`;
  #L397ba6.  v1:= v1 / v0 @kind float;
  #L397ba8.  v2.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float` := v1;
  #L397bac.  return v0;
}
procedure `boolean` `pointsInSameDirection`(`com.github.mikephil.charting.matrix.Vector3` v1 @kind this, `com.github.mikephil.charting.matrix.Vector3` v2 @kind object) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.pointsInSameDirection:(Lcom/github/mikephil/charting/matrix/Vector3;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L397a28.  call temp:= `dot`(v1, v2) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.dot:(Lcom/github/mikephil/charting/matrix/Vector3;)F` @kind virtual;
  #L397a2e.  v2:= temp;
  #L397a30.  v0:= 0I;
  #L397a32.  v2:= fcmpl(v2, v0);
  #L397a36.  if v2 <= 0 then goto L397a3e;
  #L397a3a.  v2:= 1I;
  #L397a3c.  goto L397a40;
  #L397a3e.  v2:= 0I;
  #L397a40.  return v2;
}
procedure `void` `set`(`com.github.mikephil.charting.matrix.Vector3` v0 @kind this, `float` v1 , `float` v2 , `float` v3 ) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.set:(FFF)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L397de8.  v0.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float` := v1;
  #L397dec.  v0.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float` := v2;
  #L397df0.  v0.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float` := v3;
  #L397df4.  return @kind void;
}
procedure `void` `set`(`com.github.mikephil.charting.matrix.Vector3` v1 @kind this, `com.github.mikephil.charting.matrix.Vector3` v2 @kind object) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.set:(Lcom/github/mikephil/charting/matrix/Vector3;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L397dbc.  v0:= v2.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float`;
  #L397dc0.  v1.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float` := v0;
  #L397dc4.  v0:= v2.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float`;
  #L397dc8.  v1.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float` := v0;
  #L397dcc.  v2:= v2.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float`;
  #L397dd0.  v1.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float` := v2;
  #L397dd4.  return @kind void;
}
procedure `void` `subtract`(`com.github.mikephil.charting.matrix.Vector3` v2 @kind this, `com.github.mikephil.charting.matrix.Vector3` v3 @kind object) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.subtract:(Lcom/github/mikephil/charting/matrix/Vector3;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L397e08.  v0:= v2.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float`;
  #L397e0c.  v1:= v3.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float`;
  #L397e10.  v0:= v0 - v1 @kind float;
  #L397e12.  v2.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float` := v0;
  #L397e16.  v0:= v2.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float`;
  #L397e1a.  v1:= v3.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float`;
  #L397e1e.  v0:= v0 - v1 @kind float;
  #L397e20.  v2.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float` := v0;
  #L397e24.  v0:= v2.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float`;
  #L397e28.  v3:= v3.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float`;
  #L397e2c.  v0:= v0 - v3 @kind float;
  #L397e2e.  v2.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float` := v0;
  #L397e32.  return @kind void;
}
procedure `void` `subtractMultiple`(`com.github.mikephil.charting.matrix.Vector3` v2 @kind this, `com.github.mikephil.charting.matrix.Vector3` v3 @kind object, `float` v4 ) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.subtractMultiple:(Lcom/github/mikephil/charting/matrix/Vector3;F)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L397e44.  v0:= v2.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float`;
  #L397e48.  v1:= v3.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float`;
  #L397e4c.  v1:= v1 * v4 @kind float;
  #L397e50.  v0:= v0 - v1 @kind float;
  #L397e52.  v2.`com.github.mikephil.charting.matrix.Vector3.x` @type ^`float` := v0;
  #L397e56.  v0:= v2.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float`;
  #L397e5a.  v1:= v3.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float`;
  #L397e5e.  v1:= v1 * v4 @kind float;
  #L397e62.  v0:= v0 - v1 @kind float;
  #L397e64.  v2.`com.github.mikephil.charting.matrix.Vector3.y` @type ^`float` := v0;
  #L397e68.  v0:= v2.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float`;
  #L397e6c.  v3:= v3.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float`;
  #L397e70.  v3:= v3 * v4 @kind float;
  #L397e74.  v0:= v0 - v3 @kind float;
  #L397e76.  v2.`com.github.mikephil.charting.matrix.Vector3.z` @type ^`float` := v0;
  #L397e7a.  return @kind void;
}
procedure `void` `zero`(`com.github.mikephil.charting.matrix.Vector3` v1 @kind this) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.zero:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L397e8c.  v0:= 0I;
  #L397e8e.  call `set`(v1, v0, v0, v0) @signature `Lcom/github/mikephil/charting/matrix/Vector3;.set:(FFF)V` @kind virtual;
  #L397e94.  return @kind void;
}
