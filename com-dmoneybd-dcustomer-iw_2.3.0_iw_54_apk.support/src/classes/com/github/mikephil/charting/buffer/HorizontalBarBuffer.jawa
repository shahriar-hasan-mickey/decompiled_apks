record `com.github.mikephil.charting.buffer.HorizontalBarBuffer` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.buffer.BarBuffer` @kind class {
}
procedure `void` `<init>`(`com.github.mikephil.charting.buffer.HorizontalBarBuffer` v0 @kind this, `int` v1 , `int` v2 , `boolean` v3 ) @signature `Lcom/github/mikephil/charting/buffer/HorizontalBarBuffer;.<init>:(IIZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L38486c.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/github/mikephil/charting/buffer/BarBuffer;.<init>:(IIZ)V` @kind direct;
  #L384872.  return @kind void;
}
procedure `void` `feed`(`com.github.mikephil.charting.buffer.HorizontalBarBuffer` v18 @kind this, `com.github.mikephil.charting.interfaces.datasets.IBarDataSet` v19 @kind object) @signature `Lcom/github/mikephil/charting/buffer/HorizontalBarBuffer;.feed:(Lcom/github/mikephil/charting/interfaces/datasets/IBarDataSet;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L384884.  v0:= v18 @kind object;
  #L384888.  call temp:= `getEntryCount`(v19) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryCount:()I` @kind interface;
  #L38488e.  v1:= temp;
  #L384890.  v1:= (`float`) v1 @kind i2f;
  #L384892.  v2:= v0.`com.github.mikephil.charting.buffer.AbstractBuffer.phaseX` @type ^`float`;
  #L384896.  v1:= v1 * v2 @kind float;
  #L38489a.  v2:= v0.`com.github.mikephil.charting.buffer.BarBuffer.mBarWidth` @type ^`float`;
  #L38489e.  v3:= 2.0F;
  #L3848a2.  v2:= v2 / v3 @kind float;
  #L3848a4.  v4:= 0I;
  #L3848a6.  v5:= (`float`) v4 @kind i2f;
  #L3848a8.  v5:= fcmpg(v5, v1);
  #L3848ac.  if v5 >= 0 then goto L384a12;
  #L3848b0.  v5:= v19 @kind object;
  #L3848b4.  call temp:= `getEntryForIndex`(v5, v4) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryForIndex:(I)Lcom/github/mikephil/charting/data/Entry;` @kind interface;
  #L3848ba.  v6:= temp @kind object;
  #L3848bc.  v6:= (`com.github.mikephil.charting.data.BarEntry`) v6 @kind object;
  #L3848c0.  if v6 != 0 then goto L3848c8;
  #L3848c4.  goto L384a0a;
  #L3848c8.  call temp:= `getX`(v6) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L3848ce.  v7:= temp;
  #L3848d0.  call temp:= `getY`(v6) @signature `Lcom/github/mikephil/charting/data/BarEntry;.getY:()F` @kind virtual;
  #L3848d6.  v8:= temp;
  #L3848d8.  call temp:= `getYVals`(v6) @signature `Lcom/github/mikephil/charting/data/BarEntry;.getYVals:()[F` @kind virtual;
  #L3848de.  v9:= temp @kind object;
  #L3848e0.  v10:= v0.`com.github.mikephil.charting.buffer.BarBuffer.mContainsStacks` @type ^`boolean` @kind boolean;
  #L3848e4.  v11:= 0I;
  #L3848e6.  if v10 == 0 then goto L38499c;
  #L3848ea.  if v9 != 0 then goto L3848f2;
  #L3848ee.  goto L38499c;
  #L3848f2.  call temp:= `getNegativeSum`(v6) @signature `Lcom/github/mikephil/charting/data/BarEntry;.getNegativeSum:()F` @kind virtual;
  #L3848f8.  v6:= temp;
  #L3848fa.  v6:= -v6 @kind float;
  #L3848fc.  v8:= 0I;
  #L3848fe.  v10:= 0I;
  #L384900.  v12:= length @variable v9;
  #L384902.  if v8 >= v12 then goto L384a0a;
  #L384906.  v12:= v9[v8];
  #L38490a.  v13:= fcmpl(v12, v11);
  #L38490e.  if v13 < 0 then goto L38491e;
  #L384912.  v12:= v12 + v10 @kind float;
  #L384914.  v13:= v12;
  #L384916.  v12:= v6;
  #L384918.  v6:= v10;
  #L38491a.  v10:= v13;
  #L38491c.  goto L384932;
  #L38491e.  call temp:= `abs`(v12) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L384924.  v13:= temp;
  #L384926.  v13:= v13 + v6 @kind float;
  #L384928.  call temp:= `abs`(v12) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L38492e.  v12:= temp;
  #L384930.  v12:= v12 + v6 @kind float;
  #L384932.  v14:= v7 - v2 @kind float;
  #L384936.  v15:= v7 + v2 @kind float;
  #L38493a.  v3:= v0.`com.github.mikephil.charting.buffer.BarBuffer.mInverted` @type ^`boolean` @kind boolean;
  #L38493e.  if v3 == 0 then goto L38495e;
  #L384942.  v3:= fcmpl(v6, v13);
  #L384946.  if v3 < 0 then goto L38494e;
  #L38494a.  v3:= v6;
  #L38494c.  goto L384950;
  #L38494e.  v3:= v13;
  #L384950.  v16:= fcmpg(v6, v13);
  #L384954.  if v16 > 0 then goto L38495a;
  #L384958.  goto L384982;
  #L38495a.  v6:= v13;
  #L38495c.  goto L384982;
  #L38495e.  v3:= fcmpl(v6, v13);
  #L384962.  if v3 < 0 then goto L38496a;
  #L384966.  v3:= v6;
  #L384968.  goto L38496c;
  #L38496a.  v3:= v13;
  #L38496c.  v16:= fcmpg(v6, v13);
  #L384970.  if v16 > 0 then goto L384976;
  #L384974.  goto L384978;
  #L384976.  v6:= v13;
  #L384978.  v17:= v6;
  #L38497c.  v6:= v3;
  #L38497e.  v3:= v17;
  #L384982.  v13:= v0.`com.github.mikephil.charting.buffer.AbstractBuffer.phaseY` @type ^`float`;
  #L384986.  v6:= v6 * v13 @kind float;
  #L38498a.  v3:= v3 * v13 @kind float;
  #L38498e.  call `addBar`(v0, v3, v15, v6, v14) @signature `Lcom/github/mikephil/charting/buffer/BarBuffer;.addBar:(FFFF)V` @kind virtual;
  #L384994.  v8:= v8 + 1;
  #L384998.  v6:= v12;
  #L38499a.  goto L384900;
  #L38499c.  v3:= v7 - v2 @kind float;
  #L3849a0.  v7:= v7 + v2 @kind float;
  #L3849a2.  v6:= v0.`com.github.mikephil.charting.buffer.BarBuffer.mInverted` @type ^`boolean` @kind boolean;
  #L3849a6.  if v6 == 0 then goto L3849c6;
  #L3849aa.  v6:= fcmpl(v8, v11);
  #L3849ae.  if v6 < 0 then goto L3849b6;
  #L3849b2.  v6:= v8;
  #L3849b4.  goto L3849b8;
  #L3849b6.  v6:= 0I;
  #L3849b8.  v9:= fcmpg(v8, v11);
  #L3849bc.  if v9 > 0 then goto L3849c2;
  #L3849c0.  goto L3849ea;
  #L3849c2.  v8:= 0I;
  #L3849c4.  goto L3849ea;
  #L3849c6.  v6:= fcmpl(v8, v11);
  #L3849ca.  if v6 < 0 then goto L3849d2;
  #L3849ce.  v6:= v8;
  #L3849d0.  goto L3849d4;
  #L3849d2.  v6:= 0I;
  #L3849d4.  v9:= fcmpg(v8, v11);
  #L3849d8.  if v9 > 0 then goto L3849de;
  #L3849dc.  goto L3849e0;
  #L3849de.  v8:= 0I;
  #L3849e0.  v17:= v8;
  #L3849e4.  v8:= v6;
  #L3849e6.  v6:= v17;
  #L3849ea.  v9:= fcmpl(v8, v11);
  #L3849ee.  if v9 <= 0 then goto L3849fc;
  #L3849f2.  v9:= v0.`com.github.mikephil.charting.buffer.AbstractBuffer.phaseY` @type ^`float`;
  #L3849f6.  v8:= v8 * v9 @kind float;
  #L3849fa.  goto L384a04;
  #L3849fc.  v9:= v0.`com.github.mikephil.charting.buffer.AbstractBuffer.phaseY` @type ^`float`;
  #L384a00.  v6:= v6 * v9 @kind float;
  #L384a04.  call `addBar`(v0, v6, v7, v8, v3) @signature `Lcom/github/mikephil/charting/buffer/BarBuffer;.addBar:(FFFF)V` @kind virtual;
  #L384a0a.  v4:= v4 + 1;
  #L384a0e.  goto L3848a6;
  #L384a12.  call `reset`(v18) @signature `Lcom/github/mikephil/charting/buffer/AbstractBuffer;.reset:()V` @kind virtual;
  #L384a18.  return @kind void;
}
procedure `void` `feed`(`com.github.mikephil.charting.buffer.HorizontalBarBuffer` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/github/mikephil/charting/buffer/HorizontalBarBuffer;.feed:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L384a2c.  v1:= (`com.github.mikephil.charting.interfaces.datasets.IBarDataSet`) v1 @kind object;
  #L384a30.  call `feed`(v0, v1) @signature `Lcom/github/mikephil/charting/buffer/HorizontalBarBuffer;.feed:(Lcom/github/mikephil/charting/interfaces/datasets/IBarDataSet;)V` @kind virtual;
  #L384a36.  return @kind void;
}
