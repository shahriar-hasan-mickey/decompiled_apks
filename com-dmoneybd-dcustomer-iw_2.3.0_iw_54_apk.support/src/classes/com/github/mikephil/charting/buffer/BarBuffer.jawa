record `com.github.mikephil.charting.buffer.BarBuffer` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.buffer.AbstractBuffer` @kind class {
  `float` `com.github.mikephil.charting.buffer.BarBuffer.mBarWidth` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.buffer.BarBuffer.mContainsStacks` @AccessFlag PROTECTED;
  `int` `com.github.mikephil.charting.buffer.BarBuffer.mDataSetCount` @AccessFlag PROTECTED;
  `int` `com.github.mikephil.charting.buffer.BarBuffer.mDataSetIndex` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.buffer.BarBuffer.mInverted` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.github.mikephil.charting.buffer.BarBuffer` v1 @kind this, `int` v2 , `int` v3 , `boolean` v4 ) @signature `Lcom/github/mikephil/charting/buffer/BarBuffer;.<init>:(IIZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3845b8.  call `<init>`(v1, v2) @signature `Lcom/github/mikephil/charting/buffer/AbstractBuffer;.<init>:(I)V` @kind direct;
  #L3845be.  v2:= 0I;
  #L3845c0.  v1.`com.github.mikephil.charting.buffer.BarBuffer.mDataSetIndex` @type ^`int` := v2;
  #L3845c4.  v0:= 1I;
  #L3845c6.  v1.`com.github.mikephil.charting.buffer.BarBuffer.mDataSetCount` @type ^`int` := v0;
  #L3845ca.  v1.`com.github.mikephil.charting.buffer.BarBuffer.mContainsStacks` @type ^`boolean` := v2 @kind boolean;
  #L3845ce.  v1.`com.github.mikephil.charting.buffer.BarBuffer.mInverted` @type ^`boolean` := v2 @kind boolean;
  #L3845d2.  v2:= 1.0F;
  #L3845d6.  v1.`com.github.mikephil.charting.buffer.BarBuffer.mBarWidth` @type ^`float` := v2;
  #L3845da.  v1.`com.github.mikephil.charting.buffer.BarBuffer.mDataSetCount` @type ^`int` := v3;
  #L3845de.  v1.`com.github.mikephil.charting.buffer.BarBuffer.mContainsStacks` @type ^`boolean` := v4 @kind boolean;
  #L3845e2.  return @kind void;
}
procedure `void` `addBar`(`com.github.mikephil.charting.buffer.BarBuffer` v3 @kind this, `float` v4 , `float` v5 , `float` v6 , `float` v7 ) @signature `Lcom/github/mikephil/charting/buffer/BarBuffer;.addBar:(FFFF)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L3845f4.  v0:= v3.`com.github.mikephil.charting.buffer.AbstractBuffer.buffer` @type ^`float`[] @kind object;
  #L3845f8.  v1:= v3.`com.github.mikephil.charting.buffer.AbstractBuffer.index` @type ^`int`;
  #L3845fc.  v2:= v1 + 1;
  #L384600.  v3.`com.github.mikephil.charting.buffer.AbstractBuffer.index` @type ^`int` := v2;
  #L384604.  v0[v1]:= v4;
  #L384608.  v4:= v2 + 1;
  #L38460c.  v3.`com.github.mikephil.charting.buffer.AbstractBuffer.index` @type ^`int` := v4;
  #L384610.  v0[v2]:= v5;
  #L384614.  v5:= v4 + 1;
  #L384618.  v3.`com.github.mikephil.charting.buffer.AbstractBuffer.index` @type ^`int` := v5;
  #L38461c.  v0[v4]:= v6;
  #L384620.  v4:= v5 + 1;
  #L384624.  v3.`com.github.mikephil.charting.buffer.AbstractBuffer.index` @type ^`int` := v4;
  #L384628.  v0[v5]:= v7;
  #L38462c.  return @kind void;
}
procedure `void` `feed`(`com.github.mikephil.charting.buffer.BarBuffer` v18 @kind this, `com.github.mikephil.charting.interfaces.datasets.IBarDataSet` v19 @kind object) @signature `Lcom/github/mikephil/charting/buffer/BarBuffer;.feed:(Lcom/github/mikephil/charting/interfaces/datasets/IBarDataSet;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L384640.  v0:= v18 @kind object;
  #L384644.  call temp:= `getEntryCount`(v19) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryCount:()I` @kind interface;
  #L38464a.  v1:= temp;
  #L38464c.  v1:= (`float`) v1 @kind i2f;
  #L38464e.  v2:= v0.`com.github.mikephil.charting.buffer.AbstractBuffer.phaseX` @type ^`float`;
  #L384652.  v1:= v1 * v2 @kind float;
  #L384656.  v2:= v0.`com.github.mikephil.charting.buffer.BarBuffer.mBarWidth` @type ^`float`;
  #L38465a.  v3:= 2.0F;
  #L38465e.  v2:= v2 / v3 @kind float;
  #L384660.  v4:= 0I;
  #L384662.  v5:= (`float`) v4 @kind i2f;
  #L384664.  v5:= fcmpg(v5, v1);
  #L384668.  if v5 >= 0 then goto L3847ee;
  #L38466c.  v5:= v19 @kind object;
  #L384670.  call temp:= `getEntryForIndex`(v5, v4) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryForIndex:(I)Lcom/github/mikephil/charting/data/Entry;` @kind interface;
  #L384676.  v6:= temp @kind object;
  #L384678.  v6:= (`com.github.mikephil.charting.data.BarEntry`) v6 @kind object;
  #L38467c.  if v6 != 0 then goto L384684;
  #L384680.  goto L3847e6;
  #L384684.  call temp:= `getX`(v6) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L38468a.  v7:= temp;
  #L38468c.  call temp:= `getY`(v6) @signature `Lcom/github/mikephil/charting/data/BarEntry;.getY:()F` @kind virtual;
  #L384692.  v8:= temp;
  #L384694.  call temp:= `getYVals`(v6) @signature `Lcom/github/mikephil/charting/data/BarEntry;.getYVals:()[F` @kind virtual;
  #L38469a.  v9:= temp @kind object;
  #L38469c.  v10:= v0.`com.github.mikephil.charting.buffer.BarBuffer.mContainsStacks` @type ^`boolean` @kind boolean;
  #L3846a0.  v11:= 0I;
  #L3846a2.  if v10 == 0 then goto L384778;
  #L3846a6.  if v9 != 0 then goto L3846ae;
  #L3846aa.  goto L384778;
  #L3846ae.  call temp:= `getNegativeSum`(v6) @signature `Lcom/github/mikephil/charting/data/BarEntry;.getNegativeSum:()F` @kind virtual;
  #L3846b4.  v6:= temp;
  #L3846b6.  v6:= -v6 @kind float;
  #L3846b8.  v8:= 0I;
  #L3846ba.  v10:= 0I;
  #L3846bc.  v12:= length @variable v9;
  #L3846be.  if v8 >= v12 then goto L3847e6;
  #L3846c2.  v12:= v9[v8];
  #L3846c6.  v13:= fcmpl(v12, v11);
  #L3846ca.  if v13 != 0 then goto L3846e6;
  #L3846ce.  v13:= fcmpl(v10, v11);
  #L3846d2.  if v13 == 0 then goto L3846de;
  #L3846d6.  v13:= fcmpl(v6, v11);
  #L3846da.  if v13 != 0 then goto L3846e6;
  #L3846de.  v13:= v12;
  #L3846e0.  v12:= v6;
  #L3846e2.  v6:= v13;
  #L3846e4.  goto L38470e;
  #L3846e6.  v13:= fcmpl(v12, v11);
  #L3846ea.  if v13 < 0 then goto L3846fa;
  #L3846ee.  v12:= v12 + v10 @kind float;
  #L3846f0.  v13:= v12;
  #L3846f2.  v12:= v6;
  #L3846f4.  v6:= v10;
  #L3846f6.  v10:= v13;
  #L3846f8.  goto L38470e;
  #L3846fa.  call temp:= `abs`(v12) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L384700.  v13:= temp;
  #L384702.  v13:= v13 + v6 @kind float;
  #L384704.  call temp:= `abs`(v12) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L38470a.  v12:= temp;
  #L38470c.  v12:= v12 + v6 @kind float;
  #L38470e.  v14:= v7 - v2 @kind float;
  #L384712.  v15:= v7 + v2 @kind float;
  #L384716.  v3:= v0.`com.github.mikephil.charting.buffer.BarBuffer.mInverted` @type ^`boolean` @kind boolean;
  #L38471a.  if v3 == 0 then goto L38473a;
  #L38471e.  v3:= fcmpl(v6, v13);
  #L384722.  if v3 < 0 then goto L38472a;
  #L384726.  v3:= v6;
  #L384728.  goto L38472c;
  #L38472a.  v3:= v13;
  #L38472c.  v16:= fcmpg(v6, v13);
  #L384730.  if v16 > 0 then goto L384736;
  #L384734.  goto L38475e;
  #L384736.  v6:= v13;
  #L384738.  goto L38475e;
  #L38473a.  v3:= fcmpl(v6, v13);
  #L38473e.  if v3 < 0 then goto L384746;
  #L384742.  v3:= v6;
  #L384744.  goto L384748;
  #L384746.  v3:= v13;
  #L384748.  v16:= fcmpg(v6, v13);
  #L38474c.  if v16 > 0 then goto L384752;
  #L384750.  goto L384754;
  #L384752.  v6:= v13;
  #L384754.  v17:= v6;
  #L384758.  v6:= v3;
  #L38475a.  v3:= v17;
  #L38475e.  v13:= v0.`com.github.mikephil.charting.buffer.AbstractBuffer.phaseY` @type ^`float`;
  #L384762.  v6:= v6 * v13 @kind float;
  #L384766.  v3:= v3 * v13 @kind float;
  #L38476a.  call `addBar`(v0, v14, v6, v15, v3) @signature `Lcom/github/mikephil/charting/buffer/BarBuffer;.addBar:(FFFF)V` @kind virtual;
  #L384770.  v8:= v8 + 1;
  #L384774.  v6:= v12;
  #L384776.  goto L3846bc;
  #L384778.  v3:= v7 - v2 @kind float;
  #L38477c.  v7:= v7 + v2 @kind float;
  #L38477e.  v6:= v0.`com.github.mikephil.charting.buffer.BarBuffer.mInverted` @type ^`boolean` @kind boolean;
  #L384782.  if v6 == 0 then goto L3847a2;
  #L384786.  v6:= fcmpl(v8, v11);
  #L38478a.  if v6 < 0 then goto L384792;
  #L38478e.  v6:= v8;
  #L384790.  goto L384794;
  #L384792.  v6:= 0I;
  #L384794.  v9:= fcmpg(v8, v11);
  #L384798.  if v9 > 0 then goto L38479e;
  #L38479c.  goto L3847c6;
  #L38479e.  v8:= 0I;
  #L3847a0.  goto L3847c6;
  #L3847a2.  v6:= fcmpl(v8, v11);
  #L3847a6.  if v6 < 0 then goto L3847ae;
  #L3847aa.  v6:= v8;
  #L3847ac.  goto L3847b0;
  #L3847ae.  v6:= 0I;
  #L3847b0.  v9:= fcmpg(v8, v11);
  #L3847b4.  if v9 > 0 then goto L3847ba;
  #L3847b8.  goto L3847bc;
  #L3847ba.  v8:= 0I;
  #L3847bc.  v17:= v8;
  #L3847c0.  v8:= v6;
  #L3847c2.  v6:= v17;
  #L3847c6.  v9:= fcmpl(v8, v11);
  #L3847ca.  if v9 <= 0 then goto L3847d8;
  #L3847ce.  v9:= v0.`com.github.mikephil.charting.buffer.AbstractBuffer.phaseY` @type ^`float`;
  #L3847d2.  v8:= v8 * v9 @kind float;
  #L3847d6.  goto L3847e0;
  #L3847d8.  v9:= v0.`com.github.mikephil.charting.buffer.AbstractBuffer.phaseY` @type ^`float`;
  #L3847dc.  v6:= v6 * v9 @kind float;
  #L3847e0.  call `addBar`(v0, v3, v8, v7, v6) @signature `Lcom/github/mikephil/charting/buffer/BarBuffer;.addBar:(FFFF)V` @kind virtual;
  #L3847e6.  v4:= v4 + 1;
  #L3847ea.  goto L384662;
  #L3847ee.  call `reset`(v18) @signature `Lcom/github/mikephil/charting/buffer/AbstractBuffer;.reset:()V` @kind virtual;
  #L3847f4.  return @kind void;
}
procedure `void` `feed`(`com.github.mikephil.charting.buffer.BarBuffer` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/github/mikephil/charting/buffer/BarBuffer;.feed:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L384808.  v1:= (`com.github.mikephil.charting.interfaces.datasets.IBarDataSet`) v1 @kind object;
  #L38480c.  call `feed`(v0, v1) @signature `Lcom/github/mikephil/charting/buffer/BarBuffer;.feed:(Lcom/github/mikephil/charting/interfaces/datasets/IBarDataSet;)V` @kind virtual;
  #L384812.  return @kind void;
}
procedure `void` `setBarWidth`(`com.github.mikephil.charting.buffer.BarBuffer` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/buffer/BarBuffer;.setBarWidth:(F)V` @AccessFlag PUBLIC {
    temp;

  #L384824.  v0.`com.github.mikephil.charting.buffer.BarBuffer.mBarWidth` @type ^`float` := v1;
  #L384828.  return @kind void;
}
procedure `void` `setDataSet`(`com.github.mikephil.charting.buffer.BarBuffer` v0 @kind this, `int` v1 ) @signature `Lcom/github/mikephil/charting/buffer/BarBuffer;.setDataSet:(I)V` @AccessFlag PUBLIC {
    temp;

  #L38483c.  v0.`com.github.mikephil.charting.buffer.BarBuffer.mDataSetIndex` @type ^`int` := v1;
  #L384840.  return @kind void;
}
procedure `void` `setInverted`(`com.github.mikephil.charting.buffer.BarBuffer` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/buffer/BarBuffer;.setInverted:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L384854.  v0.`com.github.mikephil.charting.buffer.BarBuffer.mInverted` @type ^`boolean` := v1 @kind boolean;
  #L384858.  return @kind void;
}
