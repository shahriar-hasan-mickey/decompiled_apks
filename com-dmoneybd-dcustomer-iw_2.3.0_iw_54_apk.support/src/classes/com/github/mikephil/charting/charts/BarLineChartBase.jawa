record `com.github.mikephil.charting.charts.BarLineChartBase` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.github.mikephil.charting.charts.Chart` @kind class, `com.github.mikephil.charting.interfaces.dataprovider.BarLineScatterCandleBubbleDataProvider` @kind interface {
  `long` `com.github.mikephil.charting.charts.BarLineChartBase.drawCycles` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleMinMaxEnabled` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.components.YAxis` `com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.renderer.YAxisRenderer` `com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererLeft` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.renderer.YAxisRenderer` `com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererRight` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.components.YAxis` `com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @AccessFlag PROTECTED;
  `android.graphics.Paint` `com.github.mikephil.charting.charts.BarLineChartBase.mBorderPaint` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.charts.BarLineChartBase.mClipValuesToContent` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.charts.BarLineChartBase.mCustomViewPortEnabled` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.charts.BarLineChartBase.mDoubleTapToZoomEnabled` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.charts.BarLineChartBase.mDragXEnabled` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.charts.BarLineChartBase.mDragYEnabled` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.charts.BarLineChartBase.mDrawBorders` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.charts.BarLineChartBase.mDrawGridBackground` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.listener.OnDrawListener` `com.github.mikephil.charting.charts.BarLineChartBase.mDrawListener` @AccessFlag PROTECTED;
  `android.graphics.Matrix` `com.github.mikephil.charting.charts.BarLineChartBase.mFitScreenMatrixBuffer` @AccessFlag PROTECTED;
  `float`[] `com.github.mikephil.charting.charts.BarLineChartBase.mGetPositionBuffer` @AccessFlag PROTECTED;
  `android.graphics.Paint` `com.github.mikephil.charting.charts.BarLineChartBase.mGridBackgroundPaint` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.charts.BarLineChartBase.mHighlightPerDragEnabled` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.charts.BarLineChartBase.mKeepPositionOnRotation` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.utils.Transformer` `com.github.mikephil.charting.charts.BarLineChartBase.mLeftAxisTransformer` @AccessFlag PROTECTED;
  `int` `com.github.mikephil.charting.charts.BarLineChartBase.mMaxVisibleCount` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.charts.BarLineChartBase.mMinOffset` @AccessFlag PROTECTED;
  `android.graphics.RectF` `com.github.mikephil.charting.charts.BarLineChartBase.mOffsetsBuffer` @AccessFlag PRIVATE;
  `float`[] `com.github.mikephil.charting.charts.BarLineChartBase.mOnSizeChangedBuffer` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.charts.BarLineChartBase.mPinchZoomEnabled` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.utils.Transformer` `com.github.mikephil.charting.charts.BarLineChartBase.mRightAxisTransformer` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.charts.BarLineChartBase.mScaleXEnabled` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.charts.BarLineChartBase.mScaleYEnabled` @AccessFlag PRIVATE;
  `com.github.mikephil.charting.renderer.XAxisRenderer` `com.github.mikephil.charting.charts.BarLineChartBase.mXAxisRenderer` @AccessFlag PROTECTED;
  `android.graphics.Matrix` `com.github.mikephil.charting.charts.BarLineChartBase.mZoomMatrixBuffer` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.utils.MPPointD` `com.github.mikephil.charting.charts.BarLineChartBase.posForGetHighestVisibleX` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.utils.MPPointD` `com.github.mikephil.charting.charts.BarLineChartBase.posForGetLowestVisibleX` @AccessFlag PROTECTED;
  `long` `com.github.mikephil.charting.charts.BarLineChartBase.totalTime` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.github.mikephil.charting.charts.BarLineChartBase` v3 @kind this, `android.content.Context` v4 @kind object) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L385670.  call `<init>`(v3, v4) @signature `Lcom/github/mikephil/charting/charts/Chart;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L385676.  v4:= 100I;
  #L38567a.  v3.`com.github.mikephil.charting.charts.BarLineChartBase.mMaxVisibleCount` @type ^`int` := v4;
  #L38567e.  v4:= 0I;
  #L385680.  v3.`com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleMinMaxEnabled` @type ^`boolean` := v4 @kind boolean;
  #L385684.  v3.`com.github.mikephil.charting.charts.BarLineChartBase.mPinchZoomEnabled` @type ^`boolean` := v4 @kind boolean;
  #L385688.  v0:= 1I;
  #L38568a.  v3.`com.github.mikephil.charting.charts.BarLineChartBase.mDoubleTapToZoomEnabled` @type ^`boolean` := v0 @kind boolean;
  #L38568e.  v3.`com.github.mikephil.charting.charts.BarLineChartBase.mHighlightPerDragEnabled` @type ^`boolean` := v0 @kind boolean;
  #L385692.  v3.`com.github.mikephil.charting.charts.BarLineChartBase.mDragXEnabled` @type ^`boolean` := v0 @kind boolean;
  #L385696.  v3.`com.github.mikephil.charting.charts.BarLineChartBase.mDragYEnabled` @type ^`boolean` := v0 @kind boolean;
  #L38569a.  v3.`com.github.mikephil.charting.charts.BarLineChartBase.mScaleXEnabled` @type ^`boolean` := v0 @kind boolean;
  #L38569e.  v3.`com.github.mikephil.charting.charts.BarLineChartBase.mScaleYEnabled` @type ^`boolean` := v0 @kind boolean;
  #L3856a2.  v3.`com.github.mikephil.charting.charts.BarLineChartBase.mDrawGridBackground` @type ^`boolean` := v4 @kind boolean;
  #L3856a6.  v3.`com.github.mikephil.charting.charts.BarLineChartBase.mDrawBorders` @type ^`boolean` := v4 @kind boolean;
  #L3856aa.  v3.`com.github.mikephil.charting.charts.BarLineChartBase.mClipValuesToContent` @type ^`boolean` := v4 @kind boolean;
  #L3856ae.  v0:= 15.0F;
  #L3856b2.  v3.`com.github.mikephil.charting.charts.BarLineChartBase.mMinOffset` @type ^`float` := v0;
  #L3856b6.  v3.`com.github.mikephil.charting.charts.BarLineChartBase.mKeepPositionOnRotation` @type ^`boolean` := v4 @kind boolean;
  #L3856ba.  v0:= 0L;
  #L3856be.  v3.`com.github.mikephil.charting.charts.BarLineChartBase.totalTime` @type ^`long` := v0 @kind wide;
  #L3856c2.  v3.`com.github.mikephil.charting.charts.BarLineChartBase.drawCycles` @type ^`long` := v0 @kind wide;
  #L3856c6.  v0:= new `android.graphics.RectF`;
  #L3856ca.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L3856d0.  v3.`com.github.mikephil.charting.charts.BarLineChartBase.mOffsetsBuffer` @type ^`android.graphics.RectF` := v0 @kind object;
  #L3856d4.  v0:= new `android.graphics.Matrix`;
  #L3856d8.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3856de.  v3.`com.github.mikephil.charting.charts.BarLineChartBase.mZoomMatrixBuffer` @type ^`android.graphics.Matrix` := v0 @kind object;
  #L3856e2.  v0:= new `android.graphics.Matrix`;
  #L3856e6.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3856ec.  v3.`com.github.mikephil.charting.charts.BarLineChartBase.mFitScreenMatrixBuffer` @type ^`android.graphics.Matrix` := v0 @kind object;
  #L3856f0.  v3.`com.github.mikephil.charting.charts.BarLineChartBase.mCustomViewPortEnabled` @type ^`boolean` := v4 @kind boolean;
  #L3856f4.  v4:= 2I;
  #L3856f6.  v0:= new `float`[v4];
  #L3856fa.  v3.`com.github.mikephil.charting.charts.BarLineChartBase.mGetPositionBuffer` @type ^`float`[] := v0 @kind object;
  #L3856fe.  v0:= 0L;
  #L385702.  call temp:= `getInstance`(v0, v0) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.getInstance:(DD)Lcom/github/mikephil/charting/utils/MPPointD;` @kind static;
  #L385708.  v2:= temp @kind object;
  #L38570a.  v3.`com.github.mikephil.charting.charts.BarLineChartBase.posForGetLowestVisibleX` @type ^`com.github.mikephil.charting.utils.MPPointD` := v2 @kind object;
  #L38570e.  call temp:= `getInstance`(v0, v0) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.getInstance:(DD)Lcom/github/mikephil/charting/utils/MPPointD;` @kind static;
  #L385714.  v0:= temp @kind object;
  #L385716.  v3.`com.github.mikephil.charting.charts.BarLineChartBase.posForGetHighestVisibleX` @type ^`com.github.mikephil.charting.utils.MPPointD` := v0 @kind object;
  #L38571a.  v4:= new `float`[v4];
  #L38571e.  v3.`com.github.mikephil.charting.charts.BarLineChartBase.mOnSizeChangedBuffer` @type ^`float`[] := v4 @kind object;
  #L385722.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.charts.BarLineChartBase` v2 @kind this, `android.content.Context` v3 @kind object, `android.util.AttributeSet` v4 @kind object) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L385734.  call `<init>`(v2, v3, v4) @signature `Lcom/github/mikephil/charting/charts/Chart;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L38573a.  v3:= 100I;
  #L38573e.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.mMaxVisibleCount` @type ^`int` := v3;
  #L385742.  v3:= 0I;
  #L385744.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleMinMaxEnabled` @type ^`boolean` := v3 @kind boolean;
  #L385748.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.mPinchZoomEnabled` @type ^`boolean` := v3 @kind boolean;
  #L38574c.  v4:= 1I;
  #L38574e.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.mDoubleTapToZoomEnabled` @type ^`boolean` := v4 @kind boolean;
  #L385752.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.mHighlightPerDragEnabled` @type ^`boolean` := v4 @kind boolean;
  #L385756.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.mDragXEnabled` @type ^`boolean` := v4 @kind boolean;
  #L38575a.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.mDragYEnabled` @type ^`boolean` := v4 @kind boolean;
  #L38575e.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.mScaleXEnabled` @type ^`boolean` := v4 @kind boolean;
  #L385762.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.mScaleYEnabled` @type ^`boolean` := v4 @kind boolean;
  #L385766.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.mDrawGridBackground` @type ^`boolean` := v3 @kind boolean;
  #L38576a.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.mDrawBorders` @type ^`boolean` := v3 @kind boolean;
  #L38576e.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.mClipValuesToContent` @type ^`boolean` := v3 @kind boolean;
  #L385772.  v4:= 15.0F;
  #L385776.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.mMinOffset` @type ^`float` := v4;
  #L38577a.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.mKeepPositionOnRotation` @type ^`boolean` := v3 @kind boolean;
  #L38577e.  v0:= 0L;
  #L385782.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.totalTime` @type ^`long` := v0 @kind wide;
  #L385786.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.drawCycles` @type ^`long` := v0 @kind wide;
  #L38578a.  v4:= new `android.graphics.RectF`;
  #L38578e.  call `<init>`(v4) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L385794.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.mOffsetsBuffer` @type ^`android.graphics.RectF` := v4 @kind object;
  #L385798.  v4:= new `android.graphics.Matrix`;
  #L38579c.  call `<init>`(v4) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3857a2.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.mZoomMatrixBuffer` @type ^`android.graphics.Matrix` := v4 @kind object;
  #L3857a6.  v4:= new `android.graphics.Matrix`;
  #L3857aa.  call `<init>`(v4) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3857b0.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.mFitScreenMatrixBuffer` @type ^`android.graphics.Matrix` := v4 @kind object;
  #L3857b4.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.mCustomViewPortEnabled` @type ^`boolean` := v3 @kind boolean;
  #L3857b8.  v3:= 2I;
  #L3857ba.  v4:= new `float`[v3];
  #L3857be.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.mGetPositionBuffer` @type ^`float`[] := v4 @kind object;
  #L3857c2.  v0:= 0L;
  #L3857c6.  call temp:= `getInstance`(v0, v0) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.getInstance:(DD)Lcom/github/mikephil/charting/utils/MPPointD;` @kind static;
  #L3857cc.  v4:= temp @kind object;
  #L3857ce.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.posForGetLowestVisibleX` @type ^`com.github.mikephil.charting.utils.MPPointD` := v4 @kind object;
  #L3857d2.  call temp:= `getInstance`(v0, v0) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.getInstance:(DD)Lcom/github/mikephil/charting/utils/MPPointD;` @kind static;
  #L3857d8.  v4:= temp @kind object;
  #L3857da.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.posForGetHighestVisibleX` @type ^`com.github.mikephil.charting.utils.MPPointD` := v4 @kind object;
  #L3857de.  v3:= new `float`[v3];
  #L3857e2.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.mOnSizeChangedBuffer` @type ^`float`[] := v3 @kind object;
  #L3857e6.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `android.content.Context` v2 @kind object, `android.util.AttributeSet` v3 @kind object, `int` v4 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3857f8.  call `<init>`(v1, v2, v3, v4) @signature `Lcom/github/mikephil/charting/charts/Chart;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L3857fe.  v2:= 100I;
  #L385802.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.mMaxVisibleCount` @type ^`int` := v2;
  #L385806.  v2:= 0I;
  #L385808.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleMinMaxEnabled` @type ^`boolean` := v2 @kind boolean;
  #L38580c.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.mPinchZoomEnabled` @type ^`boolean` := v2 @kind boolean;
  #L385810.  v3:= 1I;
  #L385812.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.mDoubleTapToZoomEnabled` @type ^`boolean` := v3 @kind boolean;
  #L385816.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.mHighlightPerDragEnabled` @type ^`boolean` := v3 @kind boolean;
  #L38581a.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.mDragXEnabled` @type ^`boolean` := v3 @kind boolean;
  #L38581e.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.mDragYEnabled` @type ^`boolean` := v3 @kind boolean;
  #L385822.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.mScaleXEnabled` @type ^`boolean` := v3 @kind boolean;
  #L385826.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.mScaleYEnabled` @type ^`boolean` := v3 @kind boolean;
  #L38582a.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.mDrawGridBackground` @type ^`boolean` := v2 @kind boolean;
  #L38582e.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.mDrawBorders` @type ^`boolean` := v2 @kind boolean;
  #L385832.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.mClipValuesToContent` @type ^`boolean` := v2 @kind boolean;
  #L385836.  v3:= 15.0F;
  #L38583a.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.mMinOffset` @type ^`float` := v3;
  #L38583e.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.mKeepPositionOnRotation` @type ^`boolean` := v2 @kind boolean;
  #L385842.  v3:= 0L;
  #L385846.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.totalTime` @type ^`long` := v3 @kind wide;
  #L38584a.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.drawCycles` @type ^`long` := v3 @kind wide;
  #L38584e.  v3:= new `android.graphics.RectF`;
  #L385852.  call `<init>`(v3) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L385858.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.mOffsetsBuffer` @type ^`android.graphics.RectF` := v3 @kind object;
  #L38585c.  v3:= new `android.graphics.Matrix`;
  #L385860.  call `<init>`(v3) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L385866.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.mZoomMatrixBuffer` @type ^`android.graphics.Matrix` := v3 @kind object;
  #L38586a.  v3:= new `android.graphics.Matrix`;
  #L38586e.  call `<init>`(v3) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L385874.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.mFitScreenMatrixBuffer` @type ^`android.graphics.Matrix` := v3 @kind object;
  #L385878.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.mCustomViewPortEnabled` @type ^`boolean` := v2 @kind boolean;
  #L38587c.  v2:= 2I;
  #L38587e.  v3:= new `float`[v2];
  #L385882.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.mGetPositionBuffer` @type ^`float`[] := v3 @kind object;
  #L385886.  v3:= 0L;
  #L38588a.  call temp:= `getInstance`(v3, v3) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.getInstance:(DD)Lcom/github/mikephil/charting/utils/MPPointD;` @kind static;
  #L385890.  v0:= temp @kind object;
  #L385892.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.posForGetLowestVisibleX` @type ^`com.github.mikephil.charting.utils.MPPointD` := v0 @kind object;
  #L385896.  call temp:= `getInstance`(v3, v3) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.getInstance:(DD)Lcom/github/mikephil/charting/utils/MPPointD;` @kind static;
  #L38589c.  v3:= temp @kind object;
  #L38589e.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.posForGetHighestVisibleX` @type ^`com.github.mikephil.charting.utils.MPPointD` := v3 @kind object;
  #L3858a2.  v2:= new `float`[v2];
  #L3858a6.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.mOnSizeChangedBuffer` @type ^`float`[] := v2 @kind object;
  #L3858aa.  return @kind void;
}
procedure `void` `autoScale`(`com.github.mikephil.charting.charts.BarLineChartBase` v4 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.autoScale:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3858bc.  call temp:= `getLowestVisibleX`(v4) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getLowestVisibleX:()F` @kind virtual;
  #L3858c2.  v0:= temp;
  #L3858c4.  call temp:= `getHighestVisibleX`(v4) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getHighestVisibleX:()F` @kind virtual;
  #L3858ca.  v1:= temp;
  #L3858cc.  v2:= v4.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L3858d0.  v2:= (`com.github.mikephil.charting.data.BarLineScatterCandleBubbleData`) v2 @kind object;
  #L3858d4.  call `calcMinMaxY`(v2, v0, v1) @signature `Lcom/github/mikephil/charting/data/ChartData;.calcMinMaxY:(FF)V` @kind virtual;
  #L3858da.  v0:= v4.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3858de.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L3858e2.  v1:= (`com.github.mikephil.charting.data.BarLineScatterCandleBubbleData`) v1 @kind object;
  #L3858e6.  call temp:= `getXMin`(v1) @signature `Lcom/github/mikephil/charting/data/ChartData;.getXMin:()F` @kind virtual;
  #L3858ec.  v1:= temp;
  #L3858ee.  v2:= v4.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L3858f2.  v2:= (`com.github.mikephil.charting.data.BarLineScatterCandleBubbleData`) v2 @kind object;
  #L3858f6.  call temp:= `getXMax`(v2) @signature `Lcom/github/mikephil/charting/data/ChartData;.getXMax:()F` @kind virtual;
  #L3858fc.  v2:= temp;
  #L3858fe.  call `calculate`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/components/AxisBase;.calculate:(FF)V` @kind virtual;
  #L385904.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L385908.  call temp:= `isEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.isEnabled:()Z` @kind virtual;
  #L38590e.  v0:= temp;
  #L385910.  if v0 == 0 then goto L385942;
  #L385914.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L385918.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L38591c.  v1:= (`com.github.mikephil.charting.data.BarLineScatterCandleBubbleData`) v1 @kind object;
  #L385920.  v2:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L385924.  call temp:= `getYMin`(v1, v2) @signature `Lcom/github/mikephil/charting/data/ChartData;.getYMin:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L38592a.  v1:= temp;
  #L38592c.  v3:= v4.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L385930.  v3:= (`com.github.mikephil.charting.data.BarLineScatterCandleBubbleData`) v3 @kind object;
  #L385934.  call temp:= `getYMax`(v3, v2) @signature `Lcom/github/mikephil/charting/data/ChartData;.getYMax:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L38593a.  v2:= temp;
  #L38593c.  call `calculate`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/components/YAxis;.calculate:(FF)V` @kind virtual;
  #L385942.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L385946.  call temp:= `isEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.isEnabled:()Z` @kind virtual;
  #L38594c.  v0:= temp;
  #L38594e.  if v0 == 0 then goto L385980;
  #L385952.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L385956.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L38595a.  v1:= (`com.github.mikephil.charting.data.BarLineScatterCandleBubbleData`) v1 @kind object;
  #L38595e.  v2:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.RIGHT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L385962.  call temp:= `getYMin`(v1, v2) @signature `Lcom/github/mikephil/charting/data/ChartData;.getYMin:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L385968.  v1:= temp;
  #L38596a.  v3:= v4.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L38596e.  v3:= (`com.github.mikephil.charting.data.BarLineScatterCandleBubbleData`) v3 @kind object;
  #L385972.  call temp:= `getYMax`(v3, v2) @signature `Lcom/github/mikephil/charting/data/ChartData;.getYMax:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L385978.  v2:= temp;
  #L38597a.  call `calculate`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/components/YAxis;.calculate:(FF)V` @kind virtual;
  #L385980.  call `calculateOffsets`(v4) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.calculateOffsets:()V` @kind virtual;
  #L385986.  return @kind void;
}
procedure `void` `calcMinMax`(`com.github.mikephil.charting.charts.BarLineChartBase` v4 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.calcMinMax:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L385998.  v0:= v4.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L38599c.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L3859a0.  v1:= (`com.github.mikephil.charting.data.BarLineScatterCandleBubbleData`) v1 @kind object;
  #L3859a4.  call temp:= `getXMin`(v1) @signature `Lcom/github/mikephil/charting/data/ChartData;.getXMin:()F` @kind virtual;
  #L3859aa.  v1:= temp;
  #L3859ac.  v2:= v4.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L3859b0.  v2:= (`com.github.mikephil.charting.data.BarLineScatterCandleBubbleData`) v2 @kind object;
  #L3859b4.  call temp:= `getXMax`(v2) @signature `Lcom/github/mikephil/charting/data/ChartData;.getXMax:()F` @kind virtual;
  #L3859ba.  v2:= temp;
  #L3859bc.  call `calculate`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/components/AxisBase;.calculate:(FF)V` @kind virtual;
  #L3859c2.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L3859c6.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L3859ca.  v1:= (`com.github.mikephil.charting.data.BarLineScatterCandleBubbleData`) v1 @kind object;
  #L3859ce.  v2:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L3859d2.  call temp:= `getYMin`(v1, v2) @signature `Lcom/github/mikephil/charting/data/ChartData;.getYMin:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L3859d8.  v1:= temp;
  #L3859da.  v3:= v4.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L3859de.  v3:= (`com.github.mikephil.charting.data.BarLineScatterCandleBubbleData`) v3 @kind object;
  #L3859e2.  call temp:= `getYMax`(v3, v2) @signature `Lcom/github/mikephil/charting/data/ChartData;.getYMax:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L3859e8.  v2:= temp;
  #L3859ea.  call `calculate`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/components/YAxis;.calculate:(FF)V` @kind virtual;
  #L3859f0.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L3859f4.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L3859f8.  v1:= (`com.github.mikephil.charting.data.BarLineScatterCandleBubbleData`) v1 @kind object;
  #L3859fc.  v2:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.RIGHT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L385a00.  call temp:= `getYMin`(v1, v2) @signature `Lcom/github/mikephil/charting/data/ChartData;.getYMin:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L385a06.  v1:= temp;
  #L385a08.  v3:= v4.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L385a0c.  v3:= (`com.github.mikephil.charting.data.BarLineScatterCandleBubbleData`) v3 @kind object;
  #L385a10.  call temp:= `getYMax`(v3, v2) @signature `Lcom/github/mikephil/charting/data/ChartData;.getYMax:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L385a16.  v2:= temp;
  #L385a18.  call `calculate`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/components/YAxis;.calculate:(FF)V` @kind virtual;
  #L385a1e.  return @kind void;
}
procedure `void` `calculateLegendOffsets`(`com.github.mikephil.charting.charts.BarLineChartBase` v4 @kind this, `android.graphics.RectF` v5 @kind object) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.calculateLegendOffsets:(Landroid/graphics/RectF;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L385a30.  v0:= 0I;
  #L385a32.  v5.`android.graphics.RectF.left` @type ^`float` := v0;
  #L385a36.  v5.`android.graphics.RectF.right` @type ^`float` := v0;
  #L385a3a.  v5.`android.graphics.RectF.top` @type ^`float` := v0;
  #L385a3e.  v5.`android.graphics.RectF.bottom` @type ^`float` := v0;
  #L385a42.  v0:= v4.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L385a46.  if v0 == 0 then goto L385c24;
  #L385a4a.  call temp:= `isEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.isEnabled:()Z` @kind virtual;
  #L385a50.  v0:= temp;
  #L385a52.  if v0 == 0 then goto L385c24;
  #L385a56.  v0:= v4.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L385a5a.  call temp:= `isDrawInsideEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/Legend;.isDrawInsideEnabled:()Z` @kind virtual;
  #L385a60.  v0:= temp;
  #L385a62.  if v0 != 0 then goto L385c24;
  #L385a66.  v0:= `@@com.github.mikephil.charting.charts.BarLineChartBase$2.c` @type ^`int`[] @kind object;
  #L385a6a.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L385a6e.  call temp:= `getOrientation`(v1) @signature `Lcom/github/mikephil/charting/components/Legend;.getOrientation:()Lcom/github/mikephil/charting/components/Legend$LegendOrientation;` @kind virtual;
  #L385a74.  v1:= temp @kind object;
  #L385a76.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L385a7c.  v1:= temp;
  #L385a7e.  v0:= v0[v1];
  #L385a82.  v1:= 2I;
  #L385a84.  v2:= 1I;
  #L385a86.  if v0 == v2 then goto L385b48;
  #L385a8a.  if v0 == v1 then goto L385a92;
  #L385a8e.  goto L385c24;
  #L385a92.  v0:= `@@com.github.mikephil.charting.charts.BarLineChartBase$2.a` @type ^`int`[] @kind object;
  #L385a96.  v3:= v4.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L385a9a.  call temp:= `getVerticalAlignment`(v3) @signature `Lcom/github/mikephil/charting/components/Legend;.getVerticalAlignment:()Lcom/github/mikephil/charting/components/Legend$LegendVerticalAlignment;` @kind virtual;
  #L385aa0.  v3:= temp @kind object;
  #L385aa2.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L385aa8.  v3:= temp;
  #L385aaa.  v0:= v0[v3];
  #L385aae.  if v0 == v2 then goto L385b02;
  #L385ab2.  if v0 == v1 then goto L385aba;
  #L385ab6.  goto L385c24;
  #L385aba.  v0:= v5.`android.graphics.RectF.bottom` @type ^`float`;
  #L385abe.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L385ac2.  v1:= v1.`com.github.mikephil.charting.components.Legend.mNeededHeight` @type ^`float`;
  #L385ac6.  v2:= v4.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L385aca.  call temp:= `getChartHeight`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getChartHeight:()F` @kind virtual;
  #L385ad0.  v2:= temp;
  #L385ad2.  v3:= v4.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L385ad6.  call temp:= `getMaxSizePercent`(v3) @signature `Lcom/github/mikephil/charting/components/Legend;.getMaxSizePercent:()F` @kind virtual;
  #L385adc.  v3:= temp;
  #L385ade.  v2:= v2 * v3 @kind float;
  #L385ae2.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L385ae8.  v1:= temp;
  #L385aea.  v2:= v4.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L385aee.  call temp:= `getYOffset`(v2) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.getYOffset:()F` @kind virtual;
  #L385af4.  v2:= temp;
  #L385af6.  v1:= v1 + v2 @kind float;
  #L385af8.  v0:= v0 + v1 @kind float;
  #L385afa.  v5.`android.graphics.RectF.bottom` @type ^`float` := v0;
  #L385afe.  goto L385c24;
  #L385b02.  v0:= v5.`android.graphics.RectF.top` @type ^`float`;
  #L385b06.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L385b0a.  v1:= v1.`com.github.mikephil.charting.components.Legend.mNeededHeight` @type ^`float`;
  #L385b0e.  v2:= v4.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L385b12.  call temp:= `getChartHeight`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getChartHeight:()F` @kind virtual;
  #L385b18.  v2:= temp;
  #L385b1a.  v3:= v4.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L385b1e.  call temp:= `getMaxSizePercent`(v3) @signature `Lcom/github/mikephil/charting/components/Legend;.getMaxSizePercent:()F` @kind virtual;
  #L385b24.  v3:= temp;
  #L385b26.  v2:= v2 * v3 @kind float;
  #L385b2a.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L385b30.  v1:= temp;
  #L385b32.  v2:= v4.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L385b36.  call temp:= `getYOffset`(v2) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.getYOffset:()F` @kind virtual;
  #L385b3c.  v2:= temp;
  #L385b3e.  v1:= v1 + v2 @kind float;
  #L385b40.  v0:= v0 + v1 @kind float;
  #L385b42.  v5.`android.graphics.RectF.top` @type ^`float` := v0;
  #L385b46.  goto L385c24;
  #L385b48.  v0:= `@@com.github.mikephil.charting.charts.BarLineChartBase$2.b` @type ^`int`[] @kind object;
  #L385b4c.  v3:= v4.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L385b50.  call temp:= `getHorizontalAlignment`(v3) @signature `Lcom/github/mikephil/charting/components/Legend;.getHorizontalAlignment:()Lcom/github/mikephil/charting/components/Legend$LegendHorizontalAlignment;` @kind virtual;
  #L385b56.  v3:= temp @kind object;
  #L385b58.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L385b5e.  v3:= temp;
  #L385b60.  v0:= v0[v3];
  #L385b64.  if v0 == v2 then goto L385be0;
  #L385b68.  if v0 == v1 then goto L385b9a;
  #L385b6c.  v3:= 3I;
  #L385b6e.  if v0 == v3 then goto L385b74;
  #L385b72.  goto L385c24;
  #L385b74.  v0:= `@@com.github.mikephil.charting.charts.BarLineChartBase$2.a` @type ^`int`[] @kind object;
  #L385b78.  v3:= v4.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L385b7c.  call temp:= `getVerticalAlignment`(v3) @signature `Lcom/github/mikephil/charting/components/Legend;.getVerticalAlignment:()Lcom/github/mikephil/charting/components/Legend$LegendVerticalAlignment;` @kind virtual;
  #L385b82.  v3:= temp @kind object;
  #L385b84.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L385b8a.  v3:= temp;
  #L385b8c.  v0:= v0[v3];
  #L385b90.  if v0 == v2 then goto L385b02;
  #L385b94.  if v0 == v1 then goto L385aba;
  #L385b98.  goto L385c24;
  #L385b9a.  v0:= v5.`android.graphics.RectF.right` @type ^`float`;
  #L385b9e.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L385ba2.  v1:= v1.`com.github.mikephil.charting.components.Legend.mNeededWidth` @type ^`float`;
  #L385ba6.  v2:= v4.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L385baa.  call temp:= `getChartWidth`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getChartWidth:()F` @kind virtual;
  #L385bb0.  v2:= temp;
  #L385bb2.  v3:= v4.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L385bb6.  call temp:= `getMaxSizePercent`(v3) @signature `Lcom/github/mikephil/charting/components/Legend;.getMaxSizePercent:()F` @kind virtual;
  #L385bbc.  v3:= temp;
  #L385bbe.  v2:= v2 * v3 @kind float;
  #L385bc2.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L385bc8.  v1:= temp;
  #L385bca.  v2:= v4.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L385bce.  call temp:= `getXOffset`(v2) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.getXOffset:()F` @kind virtual;
  #L385bd4.  v2:= temp;
  #L385bd6.  v1:= v1 + v2 @kind float;
  #L385bd8.  v0:= v0 + v1 @kind float;
  #L385bda.  v5.`android.graphics.RectF.right` @type ^`float` := v0;
  #L385bde.  goto L385c24;
  #L385be0.  v0:= v5.`android.graphics.RectF.left` @type ^`float`;
  #L385be4.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L385be8.  v1:= v1.`com.github.mikephil.charting.components.Legend.mNeededWidth` @type ^`float`;
  #L385bec.  v2:= v4.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L385bf0.  call temp:= `getChartWidth`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getChartWidth:()F` @kind virtual;
  #L385bf6.  v2:= temp;
  #L385bf8.  v3:= v4.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L385bfc.  call temp:= `getMaxSizePercent`(v3) @signature `Lcom/github/mikephil/charting/components/Legend;.getMaxSizePercent:()F` @kind virtual;
  #L385c02.  v3:= temp;
  #L385c04.  v2:= v2 * v3 @kind float;
  #L385c08.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L385c0e.  v1:= temp;
  #L385c10.  v2:= v4.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L385c14.  call temp:= `getXOffset`(v2) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.getXOffset:()F` @kind virtual;
  #L385c1a.  v2:= temp;
  #L385c1c.  v1:= v1 + v2 @kind float;
  #L385c1e.  v0:= v0 + v1 @kind float;
  #L385c20.  v5.`android.graphics.RectF.left` @type ^`float` := v0;
  #L385c24.  return @kind void;
}
procedure `void` `calculateOffsets`(`com.github.mikephil.charting.charts.BarLineChartBase` v9 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.calculateOffsets:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L385c38.  v0:= v9.`com.github.mikephil.charting.charts.BarLineChartBase.mCustomViewPortEnabled` @type ^`boolean` @kind boolean;
  #L385c3c.  if v0 != 0 then goto L385e36;
  #L385c40.  v0:= v9.`com.github.mikephil.charting.charts.BarLineChartBase.mOffsetsBuffer` @type ^`android.graphics.RectF` @kind object;
  #L385c44.  call `calculateLegendOffsets`(v9, v0) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.calculateLegendOffsets:(Landroid/graphics/RectF;)V` @kind virtual;
  #L385c4a.  v0:= v9.`com.github.mikephil.charting.charts.BarLineChartBase.mOffsetsBuffer` @type ^`android.graphics.RectF` @kind object;
  #L385c4e.  v1:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L385c52.  v2:= 0I;
  #L385c54.  v1:= v1 + v2 @kind float;
  #L385c56.  v3:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L385c5a.  v3:= v3 + v2 @kind float;
  #L385c5c.  v4:= v0.`android.graphics.RectF.right` @type ^`float`;
  #L385c60.  v4:= v4 + v2 @kind float;
  #L385c62.  v0:= v0.`android.graphics.RectF.bottom` @type ^`float`;
  #L385c66.  v0:= v0 + v2 @kind float;
  #L385c68.  v2:= v9.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L385c6c.  call temp:= `needsOffset`(v2) @signature `Lcom/github/mikephil/charting/components/YAxis;.needsOffset:()Z` @kind virtual;
  #L385c72.  v2:= temp;
  #L385c74.  if v2 == 0 then goto L385c92;
  #L385c78.  v2:= v9.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L385c7c.  v5:= v9.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererLeft` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L385c80.  call temp:= `getPaintAxisLabels`(v5) @signature `Lcom/github/mikephil/charting/renderer/AxisRenderer;.getPaintAxisLabels:()Landroid/graphics/Paint;` @kind virtual;
  #L385c86.  v5:= temp @kind object;
  #L385c88.  call temp:= `getRequiredWidthSpace`(v2, v5) @signature `Lcom/github/mikephil/charting/components/YAxis;.getRequiredWidthSpace:(Landroid/graphics/Paint;)F` @kind virtual;
  #L385c8e.  v2:= temp;
  #L385c90.  v1:= v1 + v2 @kind float;
  #L385c92.  v2:= v9.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L385c96.  call temp:= `needsOffset`(v2) @signature `Lcom/github/mikephil/charting/components/YAxis;.needsOffset:()Z` @kind virtual;
  #L385c9c.  v2:= temp;
  #L385c9e.  if v2 == 0 then goto L385cbc;
  #L385ca2.  v2:= v9.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L385ca6.  v5:= v9.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererRight` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L385caa.  call temp:= `getPaintAxisLabels`(v5) @signature `Lcom/github/mikephil/charting/renderer/AxisRenderer;.getPaintAxisLabels:()Landroid/graphics/Paint;` @kind virtual;
  #L385cb0.  v5:= temp @kind object;
  #L385cb2.  call temp:= `getRequiredWidthSpace`(v2, v5) @signature `Lcom/github/mikephil/charting/components/YAxis;.getRequiredWidthSpace:(Landroid/graphics/Paint;)F` @kind virtual;
  #L385cb8.  v2:= temp;
  #L385cba.  v4:= v4 + v2 @kind float;
  #L385cbc.  v2:= v9.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L385cc0.  call temp:= `isEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.isEnabled:()Z` @kind virtual;
  #L385cc6.  v2:= temp;
  #L385cc8.  if v2 == 0 then goto L385d38;
  #L385ccc.  v2:= v9.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L385cd0.  call temp:= `isDrawLabelsEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawLabelsEnabled:()Z` @kind virtual;
  #L385cd6.  v2:= temp;
  #L385cd8.  if v2 == 0 then goto L385d38;
  #L385cdc.  v2:= v9.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L385ce0.  v5:= v2.`com.github.mikephil.charting.components.XAxis.mLabelRotatedHeight` @type ^`int`;
  #L385ce4.  v5:= (`float`) v5 @kind i2f;
  #L385ce6.  call temp:= `getYOffset`(v2) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.getYOffset:()F` @kind virtual;
  #L385cec.  v2:= temp;
  #L385cee.  v5:= v5 + v2 @kind float;
  #L385cf0.  v2:= v9.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L385cf4.  call temp:= `getPosition`(v2) @signature `Lcom/github/mikephil/charting/components/XAxis;.getPosition:()Lcom/github/mikephil/charting/components/XAxis$XAxisPosition;` @kind virtual;
  #L385cfa.  v2:= temp @kind object;
  #L385cfc.  v6:= `@@com.github.mikephil.charting.components.XAxis$XAxisPosition.BOTTOM` @type ^`com.github.mikephil.charting.components.XAxis$XAxisPosition` @kind object;
  #L385d00.  if v2 != v6 then goto L385d08;
  #L385d04.  v0:= v0 + v5 @kind float;
  #L385d06.  goto L385d38;
  #L385d08.  v2:= v9.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L385d0c.  call temp:= `getPosition`(v2) @signature `Lcom/github/mikephil/charting/components/XAxis;.getPosition:()Lcom/github/mikephil/charting/components/XAxis$XAxisPosition;` @kind virtual;
  #L385d12.  v2:= temp @kind object;
  #L385d14.  v6:= `@@com.github.mikephil.charting.components.XAxis$XAxisPosition.TOP` @type ^`com.github.mikephil.charting.components.XAxis$XAxisPosition` @kind object;
  #L385d18.  if v2 != v6 then goto L385d20;
  #L385d1c.  v3:= v3 + v5 @kind float;
  #L385d1e.  goto L385d38;
  #L385d20.  v2:= v9.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L385d24.  call temp:= `getPosition`(v2) @signature `Lcom/github/mikephil/charting/components/XAxis;.getPosition:()Lcom/github/mikephil/charting/components/XAxis$XAxisPosition;` @kind virtual;
  #L385d2a.  v2:= temp @kind object;
  #L385d2c.  v6:= `@@com.github.mikephil.charting.components.XAxis$XAxisPosition.BOTH_SIDED` @type ^`com.github.mikephil.charting.components.XAxis$XAxisPosition` @kind object;
  #L385d30.  if v2 != v6 then goto L385d38;
  #L385d34.  v0:= v0 + v5 @kind float;
  #L385d36.  goto L385d1c;
  #L385d38.  call temp:= `getExtraTopOffset`(v9) @signature `Lcom/github/mikephil/charting/charts/Chart;.getExtraTopOffset:()F` @kind virtual;
  #L385d3e.  v2:= temp;
  #L385d40.  v3:= v3 + v2 @kind float;
  #L385d42.  call temp:= `getExtraRightOffset`(v9) @signature `Lcom/github/mikephil/charting/charts/Chart;.getExtraRightOffset:()F` @kind virtual;
  #L385d48.  v2:= temp;
  #L385d4a.  v4:= v4 + v2 @kind float;
  #L385d4c.  call temp:= `getExtraBottomOffset`(v9) @signature `Lcom/github/mikephil/charting/charts/Chart;.getExtraBottomOffset:()F` @kind virtual;
  #L385d52.  v2:= temp;
  #L385d54.  v0:= v0 + v2 @kind float;
  #L385d56.  call temp:= `getExtraLeftOffset`(v9) @signature `Lcom/github/mikephil/charting/charts/Chart;.getExtraLeftOffset:()F` @kind virtual;
  #L385d5c.  v2:= temp;
  #L385d5e.  v1:= v1 + v2 @kind float;
  #L385d60.  v2:= v9.`com.github.mikephil.charting.charts.BarLineChartBase.mMinOffset` @type ^`float`;
  #L385d64.  call temp:= `convertDpToPixel`(v2) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L385d6a.  v2:= temp;
  #L385d6c.  v5:= v9.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L385d70.  call temp:= `max`(v2, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L385d76.  v6:= temp;
  #L385d78.  call temp:= `max`(v2, v3) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L385d7e.  v7:= temp;
  #L385d80.  call temp:= `max`(v2, v4) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L385d86.  v8:= temp;
  #L385d88.  call temp:= `max`(v2, v0) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L385d8e.  v2:= temp;
  #L385d90.  call `restrainViewPort`(v5, v6, v7, v8, v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.restrainViewPort:(FFFF)V` @kind virtual;
  #L385d96.  v2:= v9.`com.github.mikephil.charting.charts.Chart.mLogEnabled` @type ^`boolean` @kind boolean;
  #L385d9a.  if v2 == 0 then goto L385e36;
  #L385d9e.  v2:= new `java.lang.StringBuilder`;
  #L385da2.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L385da8.  v5:= "offsetLeft: " @kind object;
  #L385dac.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L385db2.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L385db8.  v1:= ", offsetTop: " @kind object;
  #L385dbc.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L385dc2.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L385dc8.  v1:= ", offsetRight: " @kind object;
  #L385dcc.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L385dd2.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L385dd8.  v1:= ", offsetBottom: " @kind object;
  #L385ddc.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L385de2.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L385de8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L385dee.  v0:= temp @kind object;
  #L385df0.  v1:= "MPAndroidChart" @kind object;
  #L385df4.  call temp:= `i`(v1, v0) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L385dfa.  v0:= new `java.lang.StringBuilder`;
  #L385dfe.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L385e04.  v2:= "Content: " @kind object;
  #L385e08.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L385e0e.  v2:= v9.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L385e12.  call temp:= `getContentRect`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getContentRect:()Landroid/graphics/RectF;` @kind virtual;
  #L385e18.  v2:= temp @kind object;
  #L385e1a.  call temp:= `toString`(v2) @signature `Landroid/graphics/RectF;.toString:()Ljava/lang/String;` @kind virtual;
  #L385e20.  v2:= temp @kind object;
  #L385e22.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L385e28.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L385e2e.  v0:= temp @kind object;
  #L385e30.  call temp:= `i`(v1, v0) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L385e36.  call `prepareOffsetMatrix`(v9) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.prepareOffsetMatrix:()V` @kind virtual;
  #L385e3c.  call `prepareValuePxMatrix`(v9) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.prepareValuePxMatrix:()V` @kind virtual;
  #L385e42.  return @kind void;
}
procedure `void` `centerViewTo`(`com.github.mikephil.charting.charts.BarLineChartBase` v4 @kind this, `float` v5 , `float` v6 , `com.github.mikephil.charting.components.YAxis$AxisDependency` v7 @kind object) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.centerViewTo:(FFLcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L385e54.  call temp:= `getAxisRange`(v4, v7) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getAxisRange:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L385e5a.  v0:= temp;
  #L385e5c.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L385e60.  call temp:= `getScaleY`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getScaleY:()F` @kind virtual;
  #L385e66.  v1:= temp;
  #L385e68.  v0:= v0 / v1 @kind float;
  #L385e6a.  call temp:= `getXAxis`(v4) @signature `Lcom/github/mikephil/charting/charts/Chart;.getXAxis:()Lcom/github/mikephil/charting/components/XAxis;` @kind virtual;
  #L385e70.  v1:= temp @kind object;
  #L385e72.  v1:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisRange` @type ^`float`;
  #L385e76.  v2:= v4.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L385e7a.  call temp:= `getScaleX`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getScaleX:()F` @kind virtual;
  #L385e80.  v2:= temp;
  #L385e82.  v1:= v1 / v2 @kind float;
  #L385e84.  v2:= v4.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L385e88.  v3:= 2.0F;
  #L385e8c.  v1:= v1 / v3 @kind float;
  #L385e8e.  v5:= v5 - v1 @kind float;
  #L385e90.  v0:= v0 / v3 @kind float;
  #L385e92.  v6:= v6 + v0 @kind float;
  #L385e94.  call temp:= `getTransformer`(v4, v7) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L385e9a.  v7:= temp @kind object;
  #L385e9c.  call temp:= `getInstance`(v2, v5, v6, v7, v4) @signature `Lcom/github/mikephil/charting/jobs/MoveViewJob;.getInstance:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;)Lcom/github/mikephil/charting/jobs/MoveViewJob;` @kind static;
  #L385ea2.  v5:= temp @kind object;
  #L385ea4.  call `addViewportJob`(v4, v5) @signature `Lcom/github/mikephil/charting/charts/Chart;.addViewportJob:(Ljava/lang/Runnable;)V` @kind virtual;
  #L385eaa.  return @kind void;
}
procedure `void` `centerViewToAnimated`(`com.github.mikephil.charting.charts.BarLineChartBase` v11 @kind this, `float` v12 , `float` v13 , `com.github.mikephil.charting.components.YAxis$AxisDependency` v14 @kind object, `long` v15 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.centerViewToAnimated:(FFLcom/github/mikephil/charting/components/YAxis$AxisDependency;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L385ebc.  v9:= v11 @kind object;
  #L385ebe.  v0:= v14 @kind object;
  #L385ec0.  v1:= v9.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L385ec4.  call temp:= `contentLeft`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentLeft:()F` @kind virtual;
  #L385eca.  v1:= temp;
  #L385ecc.  v2:= v9.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L385ed0.  call temp:= `contentTop`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L385ed6.  v2:= temp;
  #L385ed8.  call temp:= `getValuesByTouchPoint`(v11, v1, v2, v14) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getValuesByTouchPoint:(FFLcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/MPPointD;` @kind virtual;
  #L385ede.  v10:= temp @kind object;
  #L385ee0.  call temp:= `getAxisRange`(v11, v14) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getAxisRange:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L385ee6.  v1:= temp;
  #L385ee8.  v2:= v9.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L385eec.  call temp:= `getScaleY`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getScaleY:()F` @kind virtual;
  #L385ef2.  v2:= temp;
  #L385ef4.  v1:= v1 / v2 @kind float;
  #L385ef6.  call temp:= `getXAxis`(v11) @signature `Lcom/github/mikephil/charting/charts/Chart;.getXAxis:()Lcom/github/mikephil/charting/components/XAxis;` @kind virtual;
  #L385efc.  v2:= temp @kind object;
  #L385efe.  v2:= v2.`com.github.mikephil.charting.components.AxisBase.mAxisRange` @type ^`float`;
  #L385f02.  v3:= v9.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L385f06.  call temp:= `getScaleX`(v3) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getScaleX:()F` @kind virtual;
  #L385f0c.  v3:= temp;
  #L385f0e.  v2:= v2 / v3 @kind float;
  #L385f10.  v3:= v9.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L385f14.  v4:= 2.0F;
  #L385f18.  v2:= v2 / v4 @kind float;
  #L385f1a.  v2:= v12 - v2 @kind float;
  #L385f1e.  v1:= v1 / v4 @kind float;
  #L385f20.  v4:= v13 + v1 @kind float;
  #L385f24.  call temp:= `getTransformer`(v11, v14) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L385f2a.  v5:= temp @kind object;
  #L385f2c.  v0:= v10.`com.github.mikephil.charting.utils.MPPointD.x` @type ^`double` @kind wide;
  #L385f30.  v6:= (`float`) v0 @kind d2f;
  #L385f32.  v0:= v10.`com.github.mikephil.charting.utils.MPPointD.y` @type ^`double` @kind wide;
  #L385f36.  v7:= (`float`) v0 @kind d2f;
  #L385f38.  v0:= v3 @kind object;
  #L385f3a.  v1:= v2;
  #L385f3c.  v2:= v4;
  #L385f3e.  v3:= v5 @kind object;
  #L385f40.  v4:= v11 @kind object;
  #L385f42.  v5:= v6;
  #L385f44.  v6:= v7;
  #L385f46.  v7:= v15 @kind wide;
  #L385f48.  call temp:= `getInstance`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;.getInstance:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;FFJ)Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;` @kind static;
  #L385f4e.  v0:= temp @kind object;
  #L385f50.  call `addViewportJob`(v11, v0) @signature `Lcom/github/mikephil/charting/charts/Chart;.addViewportJob:(Ljava/lang/Runnable;)V` @kind virtual;
  #L385f56.  call `recycleInstance`(v10) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointD;)V` @kind static;
  #L385f5c.  return @kind void;
}
procedure `void` `centerViewToY`(`com.github.mikephil.charting.charts.BarLineChartBase` v3 @kind this, `float` v4 , `com.github.mikephil.charting.components.YAxis$AxisDependency` v5 @kind object) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.centerViewToY:(FLcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L385f70.  call temp:= `getAxisRange`(v3, v5) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getAxisRange:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L385f76.  v0:= temp;
  #L385f78.  v1:= v3.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L385f7c.  call temp:= `getScaleY`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getScaleY:()F` @kind virtual;
  #L385f82.  v1:= temp;
  #L385f84.  v0:= v0 / v1 @kind float;
  #L385f86.  v1:= v3.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L385f8a.  v2:= 2.0F;
  #L385f8e.  v0:= v0 / v2 @kind float;
  #L385f90.  v4:= v4 + v0 @kind float;
  #L385f92.  call temp:= `getTransformer`(v3, v5) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L385f98.  v5:= temp @kind object;
  #L385f9a.  v0:= 0I;
  #L385f9c.  call temp:= `getInstance`(v1, v0, v4, v5, v3) @signature `Lcom/github/mikephil/charting/jobs/MoveViewJob;.getInstance:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;)Lcom/github/mikephil/charting/jobs/MoveViewJob;` @kind static;
  #L385fa2.  v4:= temp @kind object;
  #L385fa4.  call `addViewportJob`(v3, v4) @signature `Lcom/github/mikephil/charting/charts/Chart;.addViewportJob:(Ljava/lang/Runnable;)V` @kind virtual;
  #L385faa.  return @kind void;
}
procedure `void` `computeScroll`(`com.github.mikephil.charting.charts.BarLineChartBase` v2 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.computeScroll:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L385fbc.  v0:= v2.`com.github.mikephil.charting.charts.Chart.mChartTouchListener` @type ^`com.github.mikephil.charting.listener.ChartTouchListener` @kind object;
  #L385fc0.  v1:= instanceof @variable v0 @type ^`com.github.mikephil.charting.listener.BarLineChartTouchListener` @kind boolean;
  #L385fc4.  if v1 == 0 then goto L385fd2;
  #L385fc8.  v0:= (`com.github.mikephil.charting.listener.BarLineChartTouchListener`) v0 @kind object;
  #L385fcc.  call `computeScroll`(v0) @signature `Lcom/github/mikephil/charting/listener/BarLineChartTouchListener;.computeScroll:()V` @kind virtual;
  #L385fd2.  return @kind void;
}
procedure `void` `drawGridBackground`(`com.github.mikephil.charting.charts.BarLineChartBase` v2 @kind this, `android.graphics.Canvas` v3 @kind object) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.drawGridBackground:(Landroid/graphics/Canvas;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L385fe4.  v0:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mDrawGridBackground` @type ^`boolean` @kind boolean;
  #L385fe8.  if v0 == 0 then goto L386002;
  #L385fec.  v0:= v2.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L385ff0.  call temp:= `getContentRect`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getContentRect:()Landroid/graphics/RectF;` @kind virtual;
  #L385ff6.  v0:= temp @kind object;
  #L385ff8.  v1:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mGridBackgroundPaint` @type ^`android.graphics.Paint` @kind object;
  #L385ffc.  call `drawRect`(v3, v0, v1) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L386002.  v0:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mDrawBorders` @type ^`boolean` @kind boolean;
  #L386006.  if v0 == 0 then goto L386020;
  #L38600a.  v0:= v2.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L38600e.  call temp:= `getContentRect`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getContentRect:()Landroid/graphics/RectF;` @kind virtual;
  #L386014.  v0:= temp @kind object;
  #L386016.  v1:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mBorderPaint` @type ^`android.graphics.Paint` @kind object;
  #L38601a.  call `drawRect`(v3, v0, v1) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L386020.  return @kind void;
}
procedure `void` `fitScreen`(`com.github.mikephil.charting.charts.BarLineChartBase` v3 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.fitScreen:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L386034.  v0:= v3.`com.github.mikephil.charting.charts.BarLineChartBase.mFitScreenMatrixBuffer` @type ^`android.graphics.Matrix` @kind object;
  #L386038.  v1:= v3.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L38603c.  call `fitScreen`(v1, v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.fitScreen:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L386042.  v1:= v3.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386046.  v2:= 0I;
  #L386048.  call temp:= `refresh`(v1, v0, v3, v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.refresh:(Landroid/graphics/Matrix;Landroid/view/View;Z)Landroid/graphics/Matrix;` @kind virtual;
  #L38604e.  call `calculateOffsets`(v3) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.calculateOffsets:()V` @kind virtual;
  #L386054.  call `postInvalidate`(v3) @signature `Landroid/view/ViewGroup;.postInvalidate:()V` @kind virtual;
  #L38605a.  return @kind void;
}
procedure `com.github.mikephil.charting.components.YAxis` `getAxis`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `com.github.mikephil.charting.components.YAxis$AxisDependency` v2 @kind object) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getAxis:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/components/YAxis;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L385274.  v0:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L385278.  if v2 != v0 then goto L385282;
  #L38527c.  v2:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L385280.  return v2 @kind object;
  #L385282.  v2:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L385286.  return v2 @kind object;
}
procedure `com.github.mikephil.charting.components.YAxis` `getAxisLeft`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getAxisLeft:()Lcom/github/mikephil/charting/components/YAxis;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L385298.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L38529c.  return v0 @kind object;
}
procedure `float` `getAxisRange`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `com.github.mikephil.charting.components.YAxis$AxisDependency` v2 @kind object) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getAxisRange:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @AccessFlag PROTECTED {
    temp;
    v0;

  #L38548c.  v0:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L385490.  if v2 != v0 then goto L38549e;
  #L385494.  v2:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L385498.  v2:= v2.`com.github.mikephil.charting.components.AxisBase.mAxisRange` @type ^`float`;
  #L38549c.  return v2;
  #L38549e.  v2:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L3854a2.  goto L385498;
}
procedure `com.github.mikephil.charting.components.YAxis` `getAxisRight`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getAxisRight:()Lcom/github/mikephil/charting/components/YAxis;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3852b0.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L3852b4.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.data.BarLineScatterCandleBubbleData` `getData`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getData:()Lcom/github/mikephil/charting/data/BarLineScatterCandleBubbleData;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3852c8.  call temp:= `getData`(v1) @signature `Lcom/github/mikephil/charting/charts/Chart;.getData:()Lcom/github/mikephil/charting/data/ChartData;` @kind super;
  #L3852ce.  v0:= temp @kind object;
  #L3852d0.  v0:= (`com.github.mikephil.charting.data.BarLineScatterCandleBubbleData`) v0 @kind object;
  #L3852d4.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.interfaces.datasets.IBarLineScatterCandleBubbleDataSet` `getDataSetByTouchPoint`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `float` v1 , `float` v2 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getDataSetByTouchPoint:(FF)Lcom/github/mikephil/charting/interfaces/datasets/IBarLineScatterCandleBubbleDataSet;` @AccessFlag PUBLIC {
    temp;

  #L38531c.  call temp:= `getHighlightByTouchPoint`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/charts/Chart;.getHighlightByTouchPoint:(FF)Lcom/github/mikephil/charting/highlight/Highlight;` @kind virtual;
  #L385322.  v1:= temp @kind object;
  #L385324.  if v1 == 0 then goto L385346;
  #L385328.  v2:= v0.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L38532c.  v2:= (`com.github.mikephil.charting.data.BarLineScatterCandleBubbleData`) v2 @kind object;
  #L385330.  call temp:= `getDataSetIndex`(v1) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.getDataSetIndex:()I` @kind virtual;
  #L385336.  v1:= temp;
  #L385338.  call temp:= `getDataSetByIndex`(v2, v1) @signature `Lcom/github/mikephil/charting/data/ChartData;.getDataSetByIndex:(I)Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;` @kind virtual;
  #L38533e.  v1:= temp @kind object;
  #L385340.  v1:= (`com.github.mikephil.charting.interfaces.datasets.IBarLineScatterCandleBubbleDataSet`) v1 @kind object;
  #L385344.  return v1 @kind object;
  #L385346.  v1:= 0I;
  #L385348.  return v1 @kind object;
}
procedure `com.github.mikephil.charting.listener.OnDrawListener` `getDrawListener`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getDrawListener:()Lcom/github/mikephil/charting/listener/OnDrawListener;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38535c.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mDrawListener` @type ^`com.github.mikephil.charting.listener.OnDrawListener` @kind object;
  #L385360.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.data.Entry` `getEntryByTouchPoint`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `float` v1 , `float` v2 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getEntryByTouchPoint:(FF)Lcom/github/mikephil/charting/data/Entry;` @AccessFlag PUBLIC {
    temp;

  #L3852e8.  call temp:= `getHighlightByTouchPoint`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/charts/Chart;.getHighlightByTouchPoint:(FF)Lcom/github/mikephil/charting/highlight/Highlight;` @kind virtual;
  #L3852ee.  v1:= temp @kind object;
  #L3852f0.  if v1 == 0 then goto L385306;
  #L3852f4.  v2:= v0.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L3852f8.  v2:= (`com.github.mikephil.charting.data.BarLineScatterCandleBubbleData`) v2 @kind object;
  #L3852fc.  call temp:= `getEntryForHighlight`(v2, v1) @signature `Lcom/github/mikephil/charting/data/ChartData;.getEntryForHighlight:(Lcom/github/mikephil/charting/highlight/Highlight;)Lcom/github/mikephil/charting/data/Entry;` @kind virtual;
  #L385302.  v1:= temp @kind object;
  #L385304.  return v1 @kind object;
  #L385306.  v1:= 0I;
  #L385308.  return v1 @kind object;
}
procedure `float` `getHighestVisibleX`(`com.github.mikephil.charting.charts.BarLineChartBase` v4 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getHighestVisibleX:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3854b4.  v0:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L3854b8.  call temp:= `getTransformer`(v4, v0) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L3854be.  v0:= temp @kind object;
  #L3854c0.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3854c4.  call temp:= `contentRight`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentRight:()F` @kind virtual;
  #L3854ca.  v1:= temp;
  #L3854cc.  v2:= v4.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3854d0.  call temp:= `contentBottom`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentBottom:()F` @kind virtual;
  #L3854d6.  v2:= temp;
  #L3854d8.  v3:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.posForGetHighestVisibleX` @type ^`com.github.mikephil.charting.utils.MPPointD` @kind object;
  #L3854dc.  call `getValuesByTouchPoint`(v0, v1, v2, v3) @signature `Lcom/github/mikephil/charting/utils/Transformer;.getValuesByTouchPoint:(FFLcom/github/mikephil/charting/utils/MPPointD;)V` @kind virtual;
  #L3854e2.  v0:= v4.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3854e6.  v0:= v0.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float`;
  #L3854ea.  v0:= (`double`) v0 @kind f2d;
  #L3854ec.  v2:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.posForGetHighestVisibleX` @type ^`com.github.mikephil.charting.utils.MPPointD` @kind object;
  #L3854f0.  v2:= v2.`com.github.mikephil.charting.utils.MPPointD.x` @type ^`double` @kind wide;
  #L3854f4.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(DD)D` @kind static;
  #L3854fa.  v0:= temp @kind wide;
  #L3854fc.  v0:= (`float`) v0 @kind d2f;
  #L3854fe.  return v0;
}
procedure `float` `getLowestVisibleX`(`com.github.mikephil.charting.charts.BarLineChartBase` v4 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getLowestVisibleX:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L385510.  v0:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L385514.  call temp:= `getTransformer`(v4, v0) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L38551a.  v0:= temp @kind object;
  #L38551c.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L385520.  call temp:= `contentLeft`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentLeft:()F` @kind virtual;
  #L385526.  v1:= temp;
  #L385528.  v2:= v4.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L38552c.  call temp:= `contentBottom`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentBottom:()F` @kind virtual;
  #L385532.  v2:= temp;
  #L385534.  v3:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.posForGetLowestVisibleX` @type ^`com.github.mikephil.charting.utils.MPPointD` @kind object;
  #L385538.  call `getValuesByTouchPoint`(v0, v1, v2, v3) @signature `Lcom/github/mikephil/charting/utils/Transformer;.getValuesByTouchPoint:(FFLcom/github/mikephil/charting/utils/MPPointD;)V` @kind virtual;
  #L38553e.  v0:= v4.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L385542.  v0:= v0.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float`;
  #L385546.  v0:= (`double`) v0 @kind f2d;
  #L385548.  v2:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.posForGetLowestVisibleX` @type ^`com.github.mikephil.charting.utils.MPPointD` @kind object;
  #L38554c.  v2:= v2.`com.github.mikephil.charting.utils.MPPointD.x` @type ^`double` @kind wide;
  #L385550.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(DD)D` @kind static;
  #L385556.  v0:= temp @kind wide;
  #L385558.  v0:= (`float`) v0 @kind d2f;
  #L38555a.  return v0;
}
procedure `int` `getMaxVisibleCount`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getMaxVisibleCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L385658.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mMaxVisibleCount` @type ^`int`;
  #L38565c.  return v0;
}
procedure `float` `getMinOffset`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getMinOffset:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38556c.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mMinOffset` @type ^`float`;
  #L385570.  return v0;
}
procedure `android.graphics.Paint` `getPaint`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `int` v2 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getPaint:(I)Landroid/graphics/Paint;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L385030.  call temp:= `getPaint`(v1, v2) @signature `Lcom/github/mikephil/charting/charts/Chart;.getPaint:(I)Landroid/graphics/Paint;` @kind super;
  #L385036.  v0:= temp @kind object;
  #L385038.  if v0 == 0 then goto L38503e;
  #L38503c.  return v0 @kind object;
  #L38503e.  v0:= 4I;
  #L385040.  if v2 == v0 then goto L385048;
  #L385044.  v2:= 0I;
  #L385046.  return v2 @kind object;
  #L385048.  v2:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mGridBackgroundPaint` @type ^`android.graphics.Paint` @kind object;
  #L38504c.  return v2 @kind object;
}
procedure `com.github.mikephil.charting.utils.MPPointD` `getPixelForValues`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `float` v1 , `float` v2 , `com.github.mikephil.charting.components.YAxis$AxisDependency` v3 @kind object) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getPixelForValues:(FFLcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/MPPointD;` @AccessFlag PUBLIC {
    temp;

  #L3853bc.  call temp:= `getTransformer`(v0, v3) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L3853c2.  v3:= temp @kind object;
  #L3853c4.  call temp:= `getPixelForValues`(v3, v1, v2) @signature `Lcom/github/mikephil/charting/utils/Transformer;.getPixelForValues:(FF)Lcom/github/mikephil/charting/utils/MPPointD;` @kind virtual;
  #L3853ca.  v1:= temp @kind object;
  #L3853cc.  return v1 @kind object;
}
procedure `com.github.mikephil.charting.utils.MPPointF` `getPosition`(`com.github.mikephil.charting.charts.BarLineChartBase` v3 @kind this, `com.github.mikephil.charting.data.Entry` v4 @kind object, `com.github.mikephil.charting.components.YAxis$AxisDependency` v5 @kind object) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getPosition:(Lcom/github/mikephil/charting/data/Entry;Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/MPPointF;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L385404.  if v4 != 0 then goto L38540c;
  #L385408.  v4:= 0I;
  #L38540a.  return v4 @kind object;
  #L38540c.  v0:= v3.`com.github.mikephil.charting.charts.BarLineChartBase.mGetPositionBuffer` @type ^`float`[] @kind object;
  #L385410.  call temp:= `getX`(v4) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L385416.  v1:= temp;
  #L385418.  v2:= 0I;
  #L38541a.  v0[v2]:= v1;
  #L38541e.  v0:= v3.`com.github.mikephil.charting.charts.BarLineChartBase.mGetPositionBuffer` @type ^`float`[] @kind object;
  #L385422.  call temp:= `getY`(v4) @signature `Lcom/github/mikephil/charting/data/BaseEntry;.getY:()F` @kind virtual;
  #L385428.  v4:= temp;
  #L38542a.  v1:= 1I;
  #L38542c.  v0[v1]:= v4;
  #L385430.  call temp:= `getTransformer`(v3, v5) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L385436.  v4:= temp @kind object;
  #L385438.  v5:= v3.`com.github.mikephil.charting.charts.BarLineChartBase.mGetPositionBuffer` @type ^`float`[] @kind object;
  #L38543c.  call `pointValuesToPixel`(v4, v5) @signature `Lcom/github/mikephil/charting/utils/Transformer;.pointValuesToPixel:([F)V` @kind virtual;
  #L385442.  v4:= v3.`com.github.mikephil.charting.charts.BarLineChartBase.mGetPositionBuffer` @type ^`float`[] @kind object;
  #L385446.  v5:= v4[v2];
  #L38544a.  v4:= v4[v1];
  #L38544e.  call temp:= `getInstance`(v5, v4) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.getInstance:(FF)Lcom/github/mikephil/charting/utils/MPPointF;` @kind static;
  #L385454.  v4:= temp @kind object;
  #L385456.  return v4 @kind object;
}
procedure `com.github.mikephil.charting.renderer.YAxisRenderer` `getRendererLeftYAxis`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getRendererLeftYAxis:()Lcom/github/mikephil/charting/renderer/YAxisRenderer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38538c.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererLeft` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L385390.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.renderer.YAxisRenderer` `getRendererRightYAxis`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getRendererRightYAxis:()Lcom/github/mikephil/charting/renderer/YAxisRenderer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3853a4.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererRight` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L3853a8.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.renderer.XAxisRenderer` `getRendererXAxis`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getRendererXAxis:()Lcom/github/mikephil/charting/renderer/XAxisRenderer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L385374.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxisRenderer` @type ^`com.github.mikephil.charting.renderer.XAxisRenderer` @kind object;
  #L385378.  return v0 @kind object;
}
procedure `float` `getScaleX`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getScaleX:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L385584.  v0:= v1.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L385588.  if v0 != 0 then goto L385592;
  #L38558c.  v0:= 1.0F;
  #L385590.  return v0;
  #L385592.  call temp:= `getScaleX`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getScaleX:()F` @kind virtual;
  #L385598.  v0:= temp;
  #L38559a.  return v0;
}
procedure `float` `getScaleY`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getScaleY:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3855ac.  v0:= v1.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3855b0.  if v0 != 0 then goto L3855ba;
  #L3855b4.  v0:= 1.0F;
  #L3855b8.  return v0;
  #L3855ba.  call temp:= `getScaleY`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getScaleY:()F` @kind virtual;
  #L3855c0.  v0:= temp;
  #L3855c2.  return v0;
}
procedure `com.github.mikephil.charting.utils.Transformer` `getTransformer`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `com.github.mikephil.charting.components.YAxis$AxisDependency` v2 @kind object) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L385468.  v0:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L38546c.  if v2 != v0 then goto L385476;
  #L385470.  v2:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mLeftAxisTransformer` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L385474.  return v2 @kind object;
  #L385476.  v2:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mRightAxisTransformer` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L38547a.  return v2 @kind object;
}
procedure `com.github.mikephil.charting.utils.MPPointD` `getValuesByTouchPoint`(`com.github.mikephil.charting.charts.BarLineChartBase` v2 @kind this, `float` v3 , `float` v4 , `com.github.mikephil.charting.components.YAxis$AxisDependency` v5 @kind object) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getValuesByTouchPoint:(FFLcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/MPPointD;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3853e0.  v0:= 0L;
  #L3853e4.  call temp:= `getInstance`(v0, v0) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.getInstance:(DD)Lcom/github/mikephil/charting/utils/MPPointD;` @kind static;
  #L3853ea.  v0:= temp @kind object;
  #L3853ec.  call `getValuesByTouchPoint`(v2, v3, v4, v5, v0) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getValuesByTouchPoint:(FFLcom/github/mikephil/charting/components/YAxis$AxisDependency;Lcom/github/mikephil/charting/utils/MPPointD;)V` @kind virtual;
  #L3853f2.  return v0 @kind object;
}
procedure `void` `getValuesByTouchPoint`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `float` v1 , `float` v2 , `com.github.mikephil.charting.components.YAxis$AxisDependency` v3 @kind object, `com.github.mikephil.charting.utils.MPPointD` v4 @kind object) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getValuesByTouchPoint:(FFLcom/github/mikephil/charting/components/YAxis$AxisDependency;Lcom/github/mikephil/charting/utils/MPPointD;)V` @AccessFlag PUBLIC {
    temp;

  #L38606c.  call temp:= `getTransformer`(v0, v3) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L386072.  v3:= temp @kind object;
  #L386074.  call `getValuesByTouchPoint`(v3, v1, v2, v4) @signature `Lcom/github/mikephil/charting/utils/Transformer;.getValuesByTouchPoint:(FFLcom/github/mikephil/charting/utils/MPPointD;)V` @kind virtual;
  #L38607a.  return @kind void;
}
procedure `float` `getVisibleXRange`(`com.github.mikephil.charting.charts.BarLineChartBase` v2 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getVisibleXRange:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3855d4.  call temp:= `getHighestVisibleX`(v2) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getHighestVisibleX:()F` @kind virtual;
  #L3855da.  v0:= temp;
  #L3855dc.  call temp:= `getLowestVisibleX`(v2) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getLowestVisibleX:()F` @kind virtual;
  #L3855e2.  v1:= temp;
  #L3855e4.  v0:= v0 - v1 @kind float;
  #L3855e6.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L3855ec.  v0:= temp;
  #L3855ee.  return v0;
}
procedure `float` `getYChartMax`(`com.github.mikephil.charting.charts.BarLineChartBase` v2 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getYChartMax:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L385600.  v0:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L385604.  v0:= v0.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float`;
  #L385608.  v1:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L38560c.  v1:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float`;
  #L385610.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L385616.  v0:= temp;
  #L385618.  return v0;
}
procedure `float` `getYChartMin`(`com.github.mikephil.charting.charts.BarLineChartBase` v2 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getYChartMin:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38562c.  v0:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L385630.  v0:= v0.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float`;
  #L385634.  v1:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L385638.  v1:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float`;
  #L38563c.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L385642.  v0:= temp;
  #L385644.  return v0;
}
procedure `boolean` `hasNoDragOffset`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.hasNoDragOffset:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L385060.  v0:= v1.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L385064.  call temp:= `hasNoDragOffset`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.hasNoDragOffset:()Z` @kind virtual;
  #L38506a.  v0:= temp;
  #L38506c.  return v0;
}
procedure `void` `init`(`com.github.mikephil.charting.charts.BarLineChartBase` v4 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.init:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L38608c.  call `init`(v4) @signature `Lcom/github/mikephil/charting/charts/Chart;.init:()V` @kind super;
  #L386092.  v0:= new `com.github.mikephil.charting.components.YAxis`;
  #L386096.  v1:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L38609a.  call `<init>`(v0, v1) @signature `Lcom/github/mikephil/charting/components/YAxis;.<init>:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @kind direct;
  #L3860a0.  v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` := v0 @kind object;
  #L3860a4.  v0:= new `com.github.mikephil.charting.components.YAxis`;
  #L3860a8.  v1:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.RIGHT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L3860ac.  call `<init>`(v0, v1) @signature `Lcom/github/mikephil/charting/components/YAxis;.<init>:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @kind direct;
  #L3860b2.  v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` := v0 @kind object;
  #L3860b6.  v0:= new `com.github.mikephil.charting.utils.Transformer`;
  #L3860ba.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3860be.  call `<init>`(v0, v1) @signature `Lcom/github/mikephil/charting/utils/Transformer;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;)V` @kind direct;
  #L3860c4.  v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLeftAxisTransformer` @type ^`com.github.mikephil.charting.utils.Transformer` := v0 @kind object;
  #L3860c8.  v0:= new `com.github.mikephil.charting.utils.Transformer`;
  #L3860cc.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3860d0.  call `<init>`(v0, v1) @signature `Lcom/github/mikephil/charting/utils/Transformer;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;)V` @kind direct;
  #L3860d6.  v4.`com.github.mikephil.charting.charts.BarLineChartBase.mRightAxisTransformer` @type ^`com.github.mikephil.charting.utils.Transformer` := v0 @kind object;
  #L3860da.  v0:= new `com.github.mikephil.charting.renderer.YAxisRenderer`;
  #L3860de.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3860e2.  v2:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L3860e6.  v3:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLeftAxisTransformer` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L3860ea.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;Lcom/github/mikephil/charting/components/YAxis;Lcom/github/mikephil/charting/utils/Transformer;)V` @kind direct;
  #L3860f0.  v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererLeft` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` := v0 @kind object;
  #L3860f4.  v0:= new `com.github.mikephil.charting.renderer.YAxisRenderer`;
  #L3860f8.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3860fc.  v2:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L386100.  v3:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mRightAxisTransformer` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L386104.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;Lcom/github/mikephil/charting/components/YAxis;Lcom/github/mikephil/charting/utils/Transformer;)V` @kind direct;
  #L38610a.  v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererRight` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` := v0 @kind object;
  #L38610e.  v0:= new `com.github.mikephil.charting.renderer.XAxisRenderer`;
  #L386112.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386116.  v2:= v4.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L38611a.  v3:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLeftAxisTransformer` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L38611e.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;Lcom/github/mikephil/charting/components/XAxis;Lcom/github/mikephil/charting/utils/Transformer;)V` @kind direct;
  #L386124.  v4.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxisRenderer` @type ^`com.github.mikephil.charting.renderer.XAxisRenderer` := v0 @kind object;
  #L386128.  v0:= new `com.github.mikephil.charting.highlight.ChartHighlighter`;
  #L38612c.  call `<init>`(v0, v4) @signature `Lcom/github/mikephil/charting/highlight/ChartHighlighter;.<init>:(Lcom/github/mikephil/charting/interfaces/dataprovider/BarLineScatterCandleBubbleDataProvider;)V` @kind direct;
  #L386132.  call `setHighlighter`(v4, v0) @signature `Lcom/github/mikephil/charting/charts/Chart;.setHighlighter:(Lcom/github/mikephil/charting/highlight/ChartHighlighter;)V` @kind virtual;
  #L386138.  v0:= new `com.github.mikephil.charting.listener.BarLineChartTouchListener`;
  #L38613c.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386140.  call temp:= `getMatrixTouch`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getMatrixTouch:()Landroid/graphics/Matrix;` @kind virtual;
  #L386146.  v1:= temp @kind object;
  #L386148.  v2:= 3.0F;
  #L38614c.  call `<init>`(v0, v4, v1, v2) @signature `Lcom/github/mikephil/charting/listener/BarLineChartTouchListener;.<init>:(Lcom/github/mikephil/charting/charts/BarLineChartBase;Landroid/graphics/Matrix;F)V` @kind direct;
  #L386152.  v4.`com.github.mikephil.charting.charts.Chart.mChartTouchListener` @type ^`com.github.mikephil.charting.listener.ChartTouchListener` := v0 @kind object;
  #L386156.  v0:= new `android.graphics.Paint`;
  #L38615a.  call `<init>`(v0) @signature `Landroid/graphics/Paint;.<init>:()V` @kind direct;
  #L386160.  v4.`com.github.mikephil.charting.charts.BarLineChartBase.mGridBackgroundPaint` @type ^`android.graphics.Paint` := v0 @kind object;
  #L386164.  v1:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L386168.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L38616e.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mGridBackgroundPaint` @type ^`android.graphics.Paint` @kind object;
  #L386172.  v1:= 240I;
  #L386176.  call temp:= `rgb`(v1, v1, v1) @signature `Landroid/graphics/Color;.rgb:(III)I` @kind static;
  #L38617c.  v1:= temp;
  #L38617e.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L386184.  v0:= new `android.graphics.Paint`;
  #L386188.  call `<init>`(v0) @signature `Landroid/graphics/Paint;.<init>:()V` @kind direct;
  #L38618e.  v4.`com.github.mikephil.charting.charts.BarLineChartBase.mBorderPaint` @type ^`android.graphics.Paint` := v0 @kind object;
  #L386192.  v1:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L386196.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L38619c.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mBorderPaint` @type ^`android.graphics.Paint` @kind object;
  #L3861a0.  v1:= -16777216I;
  #L3861a4.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L3861aa.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mBorderPaint` @type ^`android.graphics.Paint` @kind object;
  #L3861ae.  v1:= 1.0F;
  #L3861b2.  call temp:= `convertDpToPixel`(v1) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L3861b8.  v1:= temp;
  #L3861ba.  call `setStrokeWidth`(v0, v1) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L3861c0.  return @kind void;
}
procedure `boolean` `isAnyAxisInverted`(`com.github.mikephil.charting.charts.BarLineChartBase` v2 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isAnyAxisInverted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L385080.  v0:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L385084.  call temp:= `isInverted`(v0) @signature `Lcom/github/mikephil/charting/components/YAxis;.isInverted:()Z` @kind virtual;
  #L38508a.  v0:= temp;
  #L38508c.  v1:= 1I;
  #L38508e.  if v0 == 0 then goto L385094;
  #L385092.  return v1;
  #L385094.  v0:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L385098.  call temp:= `isInverted`(v0) @signature `Lcom/github/mikephil/charting/components/YAxis;.isInverted:()Z` @kind virtual;
  #L38509e.  v0:= temp;
  #L3850a0.  if v0 == 0 then goto L3850a6;
  #L3850a4.  return v1;
  #L3850a6.  v0:= 0I;
  #L3850a8.  return v0;
}
procedure `boolean` `isAutoScaleMinMaxEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isAutoScaleMinMaxEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3850bc.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleMinMaxEnabled` @type ^`boolean` @kind boolean;
  #L3850c0.  return v0;
}
procedure `boolean` `isClipValuesToContentEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isClipValuesToContentEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3850d4.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mClipValuesToContent` @type ^`boolean` @kind boolean;
  #L3850d8.  return v0;
}
procedure `boolean` `isDoubleTapToZoomEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isDoubleTapToZoomEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3850ec.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mDoubleTapToZoomEnabled` @type ^`boolean` @kind boolean;
  #L3850f0.  return v0;
}
procedure `boolean` `isDragEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isDragEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L385104.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mDragXEnabled` @type ^`boolean` @kind boolean;
  #L385108.  if v0 != 0 then goto L38511a;
  #L38510c.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mDragYEnabled` @type ^`boolean` @kind boolean;
  #L385110.  if v0 == 0 then goto L385116;
  #L385114.  goto L38511a;
  #L385116.  v0:= 0I;
  #L385118.  goto L38511c;
  #L38511a.  v0:= 1I;
  #L38511c.  return v0;
}
procedure `boolean` `isDragXEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isDragXEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L385130.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mDragXEnabled` @type ^`boolean` @kind boolean;
  #L385134.  return v0;
}
procedure `boolean` `isDragYEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isDragYEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L385148.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mDragYEnabled` @type ^`boolean` @kind boolean;
  #L38514c.  return v0;
}
procedure `boolean` `isDrawBordersEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isDrawBordersEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L385160.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mDrawBorders` @type ^`boolean` @kind boolean;
  #L385164.  return v0;
}
procedure `boolean` `isFullyZoomedOut`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isFullyZoomedOut:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L385178.  v0:= v1.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L38517c.  call temp:= `isFullyZoomedOut`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isFullyZoomedOut:()Z` @kind virtual;
  #L385182.  v0:= temp;
  #L385184.  return v0;
}
procedure `boolean` `isHighlightPerDragEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isHighlightPerDragEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L385198.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mHighlightPerDragEnabled` @type ^`boolean` @kind boolean;
  #L38519c.  return v0;
}
procedure `boolean` `isInverted`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `com.github.mikephil.charting.components.YAxis$AxisDependency` v1 @kind object) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isInverted:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Z` @AccessFlag PUBLIC {
    temp;

  #L3851b0.  call temp:= `getAxis`(v0, v1) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getAxis:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/components/YAxis;` @kind virtual;
  #L3851b6.  v1:= temp @kind object;
  #L3851b8.  call temp:= `isInverted`(v1) @signature `Lcom/github/mikephil/charting/components/YAxis;.isInverted:()Z` @kind virtual;
  #L3851be.  v1:= temp;
  #L3851c0.  return v1;
}
procedure `boolean` `isKeepPositionOnRotation`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isKeepPositionOnRotation:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3851d4.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mKeepPositionOnRotation` @type ^`boolean` @kind boolean;
  #L3851d8.  return v0;
}
procedure `boolean` `isPinchZoomEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isPinchZoomEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3851ec.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mPinchZoomEnabled` @type ^`boolean` @kind boolean;
  #L3851f0.  return v0;
}
procedure `boolean` `isScaleXEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isScaleXEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L385204.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mScaleXEnabled` @type ^`boolean` @kind boolean;
  #L385208.  return v0;
}
procedure `boolean` `isScaleYEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isScaleYEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38521c.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mScaleYEnabled` @type ^`boolean` @kind boolean;
  #L385220.  return v0;
}
procedure `void` `moveViewTo`(`com.github.mikephil.charting.charts.BarLineChartBase` v3 @kind this, `float` v4 , `float` v5 , `com.github.mikephil.charting.components.YAxis$AxisDependency` v6 @kind object) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.moveViewTo:(FFLcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3861d4.  call temp:= `getAxisRange`(v3, v6) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getAxisRange:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L3861da.  v0:= temp;
  #L3861dc.  v1:= v3.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3861e0.  call temp:= `getScaleY`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getScaleY:()F` @kind virtual;
  #L3861e6.  v1:= temp;
  #L3861e8.  v0:= v0 / v1 @kind float;
  #L3861ea.  v1:= v3.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3861ee.  v2:= 2.0F;
  #L3861f2.  v0:= v0 / v2 @kind float;
  #L3861f4.  v5:= v5 + v0 @kind float;
  #L3861f6.  call temp:= `getTransformer`(v3, v6) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L3861fc.  v6:= temp @kind object;
  #L3861fe.  call temp:= `getInstance`(v1, v4, v5, v6, v3) @signature `Lcom/github/mikephil/charting/jobs/MoveViewJob;.getInstance:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;)Lcom/github/mikephil/charting/jobs/MoveViewJob;` @kind static;
  #L386204.  v4:= temp @kind object;
  #L386206.  call `addViewportJob`(v3, v4) @signature `Lcom/github/mikephil/charting/charts/Chart;.addViewportJob:(Ljava/lang/Runnable;)V` @kind virtual;
  #L38620c.  return @kind void;
}
procedure `void` `moveViewToAnimated`(`com.github.mikephil.charting.charts.BarLineChartBase` v11 @kind this, `float` v12 , `float` v13 , `com.github.mikephil.charting.components.YAxis$AxisDependency` v14 @kind object, `long` v15 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.moveViewToAnimated:(FFLcom/github/mikephil/charting/components/YAxis$AxisDependency;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L386220.  v9:= v11 @kind object;
  #L386222.  v0:= v14 @kind object;
  #L386224.  v1:= v9.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386228.  call temp:= `contentLeft`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentLeft:()F` @kind virtual;
  #L38622e.  v1:= temp;
  #L386230.  v2:= v9.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386234.  call temp:= `contentTop`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L38623a.  v2:= temp;
  #L38623c.  call temp:= `getValuesByTouchPoint`(v11, v1, v2, v14) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getValuesByTouchPoint:(FFLcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/MPPointD;` @kind virtual;
  #L386242.  v10:= temp @kind object;
  #L386244.  call temp:= `getAxisRange`(v11, v14) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getAxisRange:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L38624a.  v1:= temp;
  #L38624c.  v2:= v9.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386250.  call temp:= `getScaleY`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getScaleY:()F` @kind virtual;
  #L386256.  v2:= temp;
  #L386258.  v1:= v1 / v2 @kind float;
  #L38625a.  v2:= v9.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L38625e.  v3:= 2.0F;
  #L386262.  v1:= v1 / v3 @kind float;
  #L386264.  v3:= v13 + v1 @kind float;
  #L386268.  call temp:= `getTransformer`(v11, v14) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L38626e.  v4:= temp @kind object;
  #L386270.  v0:= v10.`com.github.mikephil.charting.utils.MPPointD.x` @type ^`double` @kind wide;
  #L386274.  v5:= (`float`) v0 @kind d2f;
  #L386276.  v0:= v10.`com.github.mikephil.charting.utils.MPPointD.y` @type ^`double` @kind wide;
  #L38627a.  v6:= (`float`) v0 @kind d2f;
  #L38627c.  v0:= v2 @kind object;
  #L38627e.  v1:= v12;
  #L386280.  v2:= v3;
  #L386282.  v3:= v4 @kind object;
  #L386284.  v4:= v11 @kind object;
  #L386286.  v7:= v15 @kind wide;
  #L386288.  call temp:= `getInstance`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;.getInstance:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;FFJ)Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;` @kind static;
  #L38628e.  v0:= temp @kind object;
  #L386290.  call `addViewportJob`(v11, v0) @signature `Lcom/github/mikephil/charting/charts/Chart;.addViewportJob:(Ljava/lang/Runnable;)V` @kind virtual;
  #L386296.  call `recycleInstance`(v10) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointD;)V` @kind static;
  #L38629c.  return @kind void;
}
procedure `void` `moveViewToX`(`com.github.mikephil.charting.charts.BarLineChartBase` v3 @kind this, `float` v4 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.moveViewToX:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3862b0.  v0:= v3.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3862b4.  v1:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L3862b8.  call temp:= `getTransformer`(v3, v1) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L3862be.  v1:= temp @kind object;
  #L3862c0.  v2:= 0I;
  #L3862c2.  call temp:= `getInstance`(v0, v4, v2, v1, v3) @signature `Lcom/github/mikephil/charting/jobs/MoveViewJob;.getInstance:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;)Lcom/github/mikephil/charting/jobs/MoveViewJob;` @kind static;
  #L3862c8.  v4:= temp @kind object;
  #L3862ca.  call `addViewportJob`(v3, v4) @signature `Lcom/github/mikephil/charting/charts/Chart;.addViewportJob:(Ljava/lang/Runnable;)V` @kind virtual;
  #L3862d0.  return @kind void;
}
procedure `void` `notifyDataSetChanged`(`com.github.mikephil.charting.charts.BarLineChartBase` v4 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.notifyDataSetChanged:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3862e4.  v0:= v4.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L3862e8.  v1:= "MPAndroidChart" @kind object;
  #L3862ec.  if v0 != 0 then goto L386304;
  #L3862f0.  v0:= v4.`com.github.mikephil.charting.charts.Chart.mLogEnabled` @type ^`boolean` @kind boolean;
  #L3862f4.  if v0 == 0 then goto L386302;
  #L3862f8.  v0:= "Preparing... DATA NOT SET." @kind object;
  #L3862fc.  call temp:= `i`(v1, v0) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L386302.  return @kind void;
  #L386304.  v0:= v4.`com.github.mikephil.charting.charts.Chart.mLogEnabled` @type ^`boolean` @kind boolean;
  #L386308.  if v0 == 0 then goto L386316;
  #L38630c.  v0:= "Preparing..." @kind object;
  #L386310.  call temp:= `i`(v1, v0) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L386316.  v0:= v4.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L38631a.  if v0 == 0 then goto L386324;
  #L38631e.  call `initBuffers`(v0) @signature `Lcom/github/mikephil/charting/renderer/DataRenderer;.initBuffers:()V` @kind virtual;
  #L386324.  call `calcMinMax`(v4) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.calcMinMax:()V` @kind virtual;
  #L38632a.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererLeft` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L38632e.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L386332.  v2:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float`;
  #L386336.  v3:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float`;
  #L38633a.  call temp:= `isInverted`(v1) @signature `Lcom/github/mikephil/charting/components/YAxis;.isInverted:()Z` @kind virtual;
  #L386340.  v1:= temp;
  #L386342.  call `computeAxis`(v0, v2, v3, v1) @signature `Lcom/github/mikephil/charting/renderer/AxisRenderer;.computeAxis:(FFZ)V` @kind virtual;
  #L386348.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererRight` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L38634c.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L386350.  v2:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float`;
  #L386354.  v3:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float`;
  #L386358.  call temp:= `isInverted`(v1) @signature `Lcom/github/mikephil/charting/components/YAxis;.isInverted:()Z` @kind virtual;
  #L38635e.  v1:= temp;
  #L386360.  call `computeAxis`(v0, v2, v3, v1) @signature `Lcom/github/mikephil/charting/renderer/AxisRenderer;.computeAxis:(FFZ)V` @kind virtual;
  #L386366.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxisRenderer` @type ^`com.github.mikephil.charting.renderer.XAxisRenderer` @kind object;
  #L38636a.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L38636e.  v2:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float`;
  #L386372.  v1:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float`;
  #L386376.  v3:= 0I;
  #L386378.  call `computeAxis`(v0, v2, v1, v3) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.computeAxis:(FFZ)V` @kind virtual;
  #L38637e.  v0:= v4.`com.github.mikephil.charting.charts.Chart.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L386382.  if v0 == 0 then goto L386394;
  #L386386.  v0:= v4.`com.github.mikephil.charting.charts.Chart.mLegendRenderer` @type ^`com.github.mikephil.charting.renderer.LegendRenderer` @kind object;
  #L38638a.  v1:= v4.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L38638e.  call `computeLegend`(v0, v1) @signature `Lcom/github/mikephil/charting/renderer/LegendRenderer;.computeLegend:(Lcom/github/mikephil/charting/data/ChartData;)V` @kind virtual;
  #L386394.  call `calculateOffsets`(v4) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.calculateOffsets:()V` @kind virtual;
  #L38639a.  return @kind void;
}
procedure `void` `onDraw`(`com.github.mikephil.charting.charts.BarLineChartBase` v8 @kind this, `android.graphics.Canvas` v9 @kind object) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.onDraw:(Landroid/graphics/Canvas;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3863ac.  call `onDraw`(v8, v9) @signature `Lcom/github/mikephil/charting/charts/Chart;.onDraw:(Landroid/graphics/Canvas;)V` @kind super;
  #L3863b2.  v0:= v8.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L3863b6.  if v0 != 0 then goto L3863bc;
  #L3863ba.  return @kind void;
  #L3863bc.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L3863c2.  v0:= temp @kind wide;
  #L3863c4.  call `drawGridBackground`(v8, v9) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.drawGridBackground:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L3863ca.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleMinMaxEnabled` @type ^`boolean` @kind boolean;
  #L3863ce.  if v2 == 0 then goto L3863d8;
  #L3863d2.  call `autoScale`(v8) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.autoScale:()V` @kind virtual;
  #L3863d8.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L3863dc.  call temp:= `isEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.isEnabled:()Z` @kind virtual;
  #L3863e2.  v2:= temp;
  #L3863e4.  if v2 == 0 then goto L386406;
  #L3863e8.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererLeft` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L3863ec.  v3:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L3863f0.  v4:= v3.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float`;
  #L3863f4.  v5:= v3.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float`;
  #L3863f8.  call temp:= `isInverted`(v3) @signature `Lcom/github/mikephil/charting/components/YAxis;.isInverted:()Z` @kind virtual;
  #L3863fe.  v3:= temp;
  #L386400.  call `computeAxis`(v2, v4, v5, v3) @signature `Lcom/github/mikephil/charting/renderer/AxisRenderer;.computeAxis:(FFZ)V` @kind virtual;
  #L386406.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L38640a.  call temp:= `isEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.isEnabled:()Z` @kind virtual;
  #L386410.  v2:= temp;
  #L386412.  if v2 == 0 then goto L386434;
  #L386416.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererRight` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L38641a.  v3:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L38641e.  v4:= v3.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float`;
  #L386422.  v5:= v3.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float`;
  #L386426.  call temp:= `isInverted`(v3) @signature `Lcom/github/mikephil/charting/components/YAxis;.isInverted:()Z` @kind virtual;
  #L38642c.  v3:= temp;
  #L38642e.  call `computeAxis`(v2, v4, v5, v3) @signature `Lcom/github/mikephil/charting/renderer/AxisRenderer;.computeAxis:(FFZ)V` @kind virtual;
  #L386434.  v2:= v8.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L386438.  call temp:= `isEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.isEnabled:()Z` @kind virtual;
  #L38643e.  v2:= temp;
  #L386440.  if v2 == 0 then goto L38645c;
  #L386444.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxisRenderer` @type ^`com.github.mikephil.charting.renderer.XAxisRenderer` @kind object;
  #L386448.  v3:= v8.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L38644c.  v4:= v3.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float`;
  #L386450.  v3:= v3.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float`;
  #L386454.  v5:= 0I;
  #L386456.  call `computeAxis`(v2, v4, v3, v5) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.computeAxis:(FFZ)V` @kind virtual;
  #L38645c.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxisRenderer` @type ^`com.github.mikephil.charting.renderer.XAxisRenderer` @kind object;
  #L386460.  call `renderAxisLine`(v2, v9) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderAxisLine:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L386466.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererLeft` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L38646a.  call `renderAxisLine`(v2, v9) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.renderAxisLine:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L386470.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererRight` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L386474.  call `renderAxisLine`(v2, v9) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.renderAxisLine:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L38647a.  v2:= v8.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L38647e.  call temp:= `isDrawGridLinesBehindDataEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawGridLinesBehindDataEnabled:()Z` @kind virtual;
  #L386484.  v2:= temp;
  #L386486.  if v2 == 0 then goto L386494;
  #L38648a.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxisRenderer` @type ^`com.github.mikephil.charting.renderer.XAxisRenderer` @kind object;
  #L38648e.  call `renderGridLines`(v2, v9) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderGridLines:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L386494.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L386498.  call temp:= `isDrawGridLinesBehindDataEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawGridLinesBehindDataEnabled:()Z` @kind virtual;
  #L38649e.  v2:= temp;
  #L3864a0.  if v2 == 0 then goto L3864ae;
  #L3864a4.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererLeft` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L3864a8.  call `renderGridLines`(v2, v9) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.renderGridLines:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L3864ae.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L3864b2.  call temp:= `isDrawGridLinesBehindDataEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawGridLinesBehindDataEnabled:()Z` @kind virtual;
  #L3864b8.  v2:= temp;
  #L3864ba.  if v2 == 0 then goto L3864c8;
  #L3864be.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererRight` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L3864c2.  call `renderGridLines`(v2, v9) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.renderGridLines:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L3864c8.  v2:= v8.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3864cc.  call temp:= `isEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.isEnabled:()Z` @kind virtual;
  #L3864d2.  v2:= temp;
  #L3864d4.  if v2 == 0 then goto L3864f2;
  #L3864d8.  v2:= v8.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3864dc.  call temp:= `isDrawLimitLinesBehindDataEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawLimitLinesBehindDataEnabled:()Z` @kind virtual;
  #L3864e2.  v2:= temp;
  #L3864e4.  if v2 == 0 then goto L3864f2;
  #L3864e8.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxisRenderer` @type ^`com.github.mikephil.charting.renderer.XAxisRenderer` @kind object;
  #L3864ec.  call `renderLimitLines`(v2, v9) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderLimitLines:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L3864f2.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L3864f6.  call temp:= `isEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.isEnabled:()Z` @kind virtual;
  #L3864fc.  v2:= temp;
  #L3864fe.  if v2 == 0 then goto L38651c;
  #L386502.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L386506.  call temp:= `isDrawLimitLinesBehindDataEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawLimitLinesBehindDataEnabled:()Z` @kind virtual;
  #L38650c.  v2:= temp;
  #L38650e.  if v2 == 0 then goto L38651c;
  #L386512.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererLeft` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L386516.  call `renderLimitLines`(v2, v9) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.renderLimitLines:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L38651c.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L386520.  call temp:= `isEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.isEnabled:()Z` @kind virtual;
  #L386526.  v2:= temp;
  #L386528.  if v2 == 0 then goto L386546;
  #L38652c.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L386530.  call temp:= `isDrawLimitLinesBehindDataEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawLimitLinesBehindDataEnabled:()Z` @kind virtual;
  #L386536.  v2:= temp;
  #L386538.  if v2 == 0 then goto L386546;
  #L38653c.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererRight` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L386540.  call `renderLimitLines`(v2, v9) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.renderLimitLines:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L386546.  call temp:= `save`(v9) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L38654c.  v2:= temp;
  #L38654e.  v3:= v8.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386552.  call temp:= `getContentRect`(v3) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getContentRect:()Landroid/graphics/RectF;` @kind virtual;
  #L386558.  v3:= temp @kind object;
  #L38655a.  call temp:= `clipRect`(v9, v3) @signature `Landroid/graphics/Canvas;.clipRect:(Landroid/graphics/RectF;)Z` @kind virtual;
  #L386560.  v3:= v8.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L386564.  call `drawData`(v3, v9) @signature `Lcom/github/mikephil/charting/renderer/DataRenderer;.drawData:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L38656a.  v3:= v8.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L38656e.  call temp:= `isDrawGridLinesBehindDataEnabled`(v3) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawGridLinesBehindDataEnabled:()Z` @kind virtual;
  #L386574.  v3:= temp;
  #L386576.  if v3 != 0 then goto L386584;
  #L38657a.  v3:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxisRenderer` @type ^`com.github.mikephil.charting.renderer.XAxisRenderer` @kind object;
  #L38657e.  call `renderGridLines`(v3, v9) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderGridLines:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L386584.  v3:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L386588.  call temp:= `isDrawGridLinesBehindDataEnabled`(v3) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawGridLinesBehindDataEnabled:()Z` @kind virtual;
  #L38658e.  v3:= temp;
  #L386590.  if v3 != 0 then goto L38659e;
  #L386594.  v3:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererLeft` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L386598.  call `renderGridLines`(v3, v9) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.renderGridLines:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L38659e.  v3:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L3865a2.  call temp:= `isDrawGridLinesBehindDataEnabled`(v3) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawGridLinesBehindDataEnabled:()Z` @kind virtual;
  #L3865a8.  v3:= temp;
  #L3865aa.  if v3 != 0 then goto L3865b8;
  #L3865ae.  v3:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererRight` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L3865b2.  call `renderGridLines`(v3, v9) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.renderGridLines:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L3865b8.  call temp:= `valuesToHighlight`(v8) @signature `Lcom/github/mikephil/charting/charts/Chart;.valuesToHighlight:()Z` @kind virtual;
  #L3865be.  v3:= temp;
  #L3865c0.  if v3 == 0 then goto L3865d2;
  #L3865c4.  v3:= v8.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L3865c8.  v4:= v8.`com.github.mikephil.charting.charts.Chart.mIndicesToHighlight` @type ^`com.github.mikephil.charting.highlight.Highlight`[] @kind object;
  #L3865cc.  call `drawHighlighted`(v3, v9, v4) @signature `Lcom/github/mikephil/charting/renderer/DataRenderer;.drawHighlighted:(Landroid/graphics/Canvas;[Lcom/github/mikephil/charting/highlight/Highlight;)V` @kind virtual;
  #L3865d2.  call `restoreToCount`(v9, v2) @signature `Landroid/graphics/Canvas;.restoreToCount:(I)V` @kind virtual;
  #L3865d8.  v2:= v8.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L3865dc.  call `drawExtras`(v2, v9) @signature `Lcom/github/mikephil/charting/renderer/DataRenderer;.drawExtras:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L3865e2.  v2:= v8.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3865e6.  call temp:= `isEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.isEnabled:()Z` @kind virtual;
  #L3865ec.  v2:= temp;
  #L3865ee.  if v2 == 0 then goto L38660c;
  #L3865f2.  v2:= v8.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3865f6.  call temp:= `isDrawLimitLinesBehindDataEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawLimitLinesBehindDataEnabled:()Z` @kind virtual;
  #L3865fc.  v2:= temp;
  #L3865fe.  if v2 != 0 then goto L38660c;
  #L386602.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxisRenderer` @type ^`com.github.mikephil.charting.renderer.XAxisRenderer` @kind object;
  #L386606.  call `renderLimitLines`(v2, v9) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderLimitLines:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L38660c.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L386610.  call temp:= `isEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.isEnabled:()Z` @kind virtual;
  #L386616.  v2:= temp;
  #L386618.  if v2 == 0 then goto L386636;
  #L38661c.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L386620.  call temp:= `isDrawLimitLinesBehindDataEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawLimitLinesBehindDataEnabled:()Z` @kind virtual;
  #L386626.  v2:= temp;
  #L386628.  if v2 != 0 then goto L386636;
  #L38662c.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererLeft` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L386630.  call `renderLimitLines`(v2, v9) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.renderLimitLines:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L386636.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L38663a.  call temp:= `isEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.isEnabled:()Z` @kind virtual;
  #L386640.  v2:= temp;
  #L386642.  if v2 == 0 then goto L386660;
  #L386646.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L38664a.  call temp:= `isDrawLimitLinesBehindDataEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawLimitLinesBehindDataEnabled:()Z` @kind virtual;
  #L386650.  v2:= temp;
  #L386652.  if v2 != 0 then goto L386660;
  #L386656.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererRight` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L38665a.  call `renderLimitLines`(v2, v9) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.renderLimitLines:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L386660.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxisRenderer` @type ^`com.github.mikephil.charting.renderer.XAxisRenderer` @kind object;
  #L386664.  call `renderAxisLabels`(v2, v9) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderAxisLabels:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L38666a.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererLeft` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L38666e.  call `renderAxisLabels`(v2, v9) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.renderAxisLabels:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L386674.  v2:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererRight` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L386678.  call `renderAxisLabels`(v2, v9) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.renderAxisLabels:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L38667e.  call temp:= `isClipValuesToContentEnabled`(v8) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isClipValuesToContentEnabled:()Z` @kind virtual;
  #L386684.  v2:= temp;
  #L386686.  if v2 == 0 then goto L3866b6;
  #L38668a.  call temp:= `save`(v9) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L386690.  v2:= temp;
  #L386692.  v3:= v8.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386696.  call temp:= `getContentRect`(v3) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getContentRect:()Landroid/graphics/RectF;` @kind virtual;
  #L38669c.  v3:= temp @kind object;
  #L38669e.  call temp:= `clipRect`(v9, v3) @signature `Landroid/graphics/Canvas;.clipRect:(Landroid/graphics/RectF;)Z` @kind virtual;
  #L3866a4.  v3:= v8.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L3866a8.  call `drawValues`(v3, v9) @signature `Lcom/github/mikephil/charting/renderer/DataRenderer;.drawValues:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L3866ae.  call `restoreToCount`(v9, v2) @signature `Landroid/graphics/Canvas;.restoreToCount:(I)V` @kind virtual;
  #L3866b4.  goto L3866c0;
  #L3866b6.  v2:= v8.`com.github.mikephil.charting.charts.Chart.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L3866ba.  call `drawValues`(v2, v9) @signature `Lcom/github/mikephil/charting/renderer/DataRenderer;.drawValues:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L3866c0.  v2:= v8.`com.github.mikephil.charting.charts.Chart.mLegendRenderer` @type ^`com.github.mikephil.charting.renderer.LegendRenderer` @kind object;
  #L3866c4.  call `renderLegend`(v2, v9) @signature `Lcom/github/mikephil/charting/renderer/LegendRenderer;.renderLegend:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L3866ca.  call `drawDescription`(v8, v9) @signature `Lcom/github/mikephil/charting/charts/Chart;.drawDescription:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L3866d0.  call `drawMarkers`(v8, v9) @signature `Lcom/github/mikephil/charting/charts/Chart;.drawMarkers:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L3866d6.  v9:= v8.`com.github.mikephil.charting.charts.Chart.mLogEnabled` @type ^`boolean` @kind boolean;
  #L3866da.  if v9 == 0 then goto L386752;
  #L3866de.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L3866e4.  v2:= temp @kind wide;
  #L3866e6.  v2:= v2 - v0 @kind long;
  #L3866e8.  v0:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.totalTime` @type ^`long` @kind wide;
  #L3866ec.  v0:= v0 + v2 @kind long;
  #L3866ee.  v8.`com.github.mikephil.charting.charts.BarLineChartBase.totalTime` @type ^`long` := v0 @kind wide;
  #L3866f2.  v4:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.drawCycles` @type ^`long` @kind wide;
  #L3866f6.  v6:= 1L;
  #L3866fa.  v4:= v4 + v6 @kind long;
  #L3866fc.  v8.`com.github.mikephil.charting.charts.BarLineChartBase.drawCycles` @type ^`long` := v4 @kind wide;
  #L386700.  v0:= v0 / v4 @kind long;
  #L386702.  v9:= new `java.lang.StringBuilder`;
  #L386706.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L38670c.  v4:= "Drawtime: " @kind object;
  #L386710.  call temp:= `append`(v9, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386716.  call temp:= `append`(v9, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L38671c.  v2:= " ms, average: " @kind object;
  #L386720.  call temp:= `append`(v9, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386726.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L38672c.  v0:= " ms, cycles: " @kind object;
  #L386730.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386736.  v0:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.drawCycles` @type ^`long` @kind wide;
  #L38673a.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L386740.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L386746.  v9:= temp @kind object;
  #L386748.  v0:= "MPAndroidChart" @kind object;
  #L38674c.  call temp:= `i`(v0, v9) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L386752.  return @kind void;
}
procedure `void` `onSizeChanged`(`com.github.mikephil.charting.charts.BarLineChartBase` v4 @kind this, `int` v5 , `int` v6 , `int` v7 , `int` v8 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.onSizeChanged:(IIII)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L386764.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mOnSizeChangedBuffer` @type ^`float`[] @kind object;
  #L386768.  v1:= 1I;
  #L38676a.  v2:= 0I;
  #L38676c.  v0[v1]:= v2;
  #L386770.  v3:= 0I;
  #L386772.  v0[v3]:= v2;
  #L386776.  v2:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mKeepPositionOnRotation` @type ^`boolean` @kind boolean;
  #L38677a.  if v2 == 0 then goto L3867b8;
  #L38677e.  v2:= v4.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386782.  call temp:= `contentLeft`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentLeft:()F` @kind virtual;
  #L386788.  v2:= temp;
  #L38678a.  v0[v3]:= v2;
  #L38678e.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mOnSizeChangedBuffer` @type ^`float`[] @kind object;
  #L386792.  v2:= v4.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386796.  call temp:= `contentTop`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L38679c.  v2:= temp;
  #L38679e.  v0[v1]:= v2;
  #L3867a2.  v0:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L3867a6.  call temp:= `getTransformer`(v4, v0) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L3867ac.  v0:= temp @kind object;
  #L3867ae.  v2:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mOnSizeChangedBuffer` @type ^`float`[] @kind object;
  #L3867b2.  call `pixelsToValue`(v0, v2) @signature `Lcom/github/mikephil/charting/utils/Transformer;.pixelsToValue:([F)V` @kind virtual;
  #L3867b8.  call `onSizeChanged`(v4, v5, v6, v7, v8) @signature `Lcom/github/mikephil/charting/charts/Chart;.onSizeChanged:(IIII)V` @kind super;
  #L3867be.  v5:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mKeepPositionOnRotation` @type ^`boolean` @kind boolean;
  #L3867c2.  if v5 == 0 then goto L3867ec;
  #L3867c6.  v5:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L3867ca.  call temp:= `getTransformer`(v4, v5) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L3867d0.  v5:= temp @kind object;
  #L3867d2.  v6:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mOnSizeChangedBuffer` @type ^`float`[] @kind object;
  #L3867d6.  call `pointValuesToPixel`(v5, v6) @signature `Lcom/github/mikephil/charting/utils/Transformer;.pointValuesToPixel:([F)V` @kind virtual;
  #L3867dc.  v5:= v4.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3867e0.  v6:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mOnSizeChangedBuffer` @type ^`float`[] @kind object;
  #L3867e4.  call `centerViewPort`(v5, v6, v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.centerViewPort:([FLandroid/view/View;)V` @kind virtual;
  #L3867ea.  goto L3867fe;
  #L3867ec.  v5:= v4.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3867f0.  call temp:= `getMatrixTouch`(v5) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getMatrixTouch:()Landroid/graphics/Matrix;` @kind virtual;
  #L3867f6.  v6:= temp @kind object;
  #L3867f8.  call temp:= `refresh`(v5, v6, v4, v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.refresh:(Landroid/graphics/Matrix;Landroid/view/View;Z)Landroid/graphics/Matrix;` @kind virtual;
  #L3867fe.  return @kind void;
}
procedure `boolean` `onTouchEvent`(`com.github.mikephil.charting.charts.BarLineChartBase` v3 @kind this, `android.view.MotionEvent` v4 @kind object) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.onTouchEvent:(Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L385234.  call temp:= `onTouchEvent`(v3, v4) @signature `Landroid/view/ViewGroup;.onTouchEvent:(Landroid/view/MotionEvent;)Z` @kind super;
  #L38523a.  v0:= v3.`com.github.mikephil.charting.charts.Chart.mChartTouchListener` @type ^`com.github.mikephil.charting.listener.ChartTouchListener` @kind object;
  #L38523e.  v1:= 0I;
  #L385240.  if v0 == 0 then goto L385262;
  #L385244.  v2:= v3.`com.github.mikephil.charting.charts.Chart.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L385248.  if v2 != 0 then goto L38524e;
  #L38524c.  goto L385262;
  #L38524e.  v2:= v3.`com.github.mikephil.charting.charts.Chart.mTouchEnabled` @type ^`boolean` @kind boolean;
  #L385252.  if v2 != 0 then goto L385258;
  #L385256.  return v1;
  #L385258.  call temp:= `onTouch`(v0, v3, v4) @signature `Landroid/view/View$OnTouchListener;.onTouch:(Landroid/view/View;Landroid/view/MotionEvent;)Z` @kind interface;
  #L38525e.  v4:= temp;
  #L385260.  return v4;
  #L385262.  return v1;
}
procedure `void` `prepareOffsetMatrix`(`com.github.mikephil.charting.charts.BarLineChartBase` v2 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.prepareOffsetMatrix:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L386810.  v0:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mRightAxisTransformer` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L386814.  v1:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L386818.  call temp:= `isInverted`(v1) @signature `Lcom/github/mikephil/charting/components/YAxis;.isInverted:()Z` @kind virtual;
  #L38681e.  v1:= temp;
  #L386820.  call `prepareMatrixOffset`(v0, v1) @signature `Lcom/github/mikephil/charting/utils/Transformer;.prepareMatrixOffset:(Z)V` @kind virtual;
  #L386826.  v0:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mLeftAxisTransformer` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L38682a.  v1:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L38682e.  call temp:= `isInverted`(v1) @signature `Lcom/github/mikephil/charting/components/YAxis;.isInverted:()Z` @kind virtual;
  #L386834.  v1:= temp;
  #L386836.  call `prepareMatrixOffset`(v0, v1) @signature `Lcom/github/mikephil/charting/utils/Transformer;.prepareMatrixOffset:(Z)V` @kind virtual;
  #L38683c.  return @kind void;
}
procedure `void` `prepareValuePxMatrix`(`com.github.mikephil.charting.charts.BarLineChartBase` v5 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.prepareValuePxMatrix:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L386850.  v0:= v5.`com.github.mikephil.charting.charts.Chart.mLogEnabled` @type ^`boolean` @kind boolean;
  #L386854.  if v0 == 0 then goto L3868bc;
  #L386858.  v0:= new `java.lang.StringBuilder`;
  #L38685c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L386862.  v1:= "Preparing Value-Px Matrix, xmin: " @kind object;
  #L386866.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38686c.  v1:= v5.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L386870.  v1:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float`;
  #L386874.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L38687a.  v1:= ", xmax: " @kind object;
  #L38687e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L386884.  v1:= v5.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L386888.  v1:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float`;
  #L38688c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L386892.  v1:= ", xdelta: " @kind object;
  #L386896.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38689c.  v1:= v5.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3868a0.  v1:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisRange` @type ^`float`;
  #L3868a4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L3868aa.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3868b0.  v0:= temp @kind object;
  #L3868b2.  v1:= "MPAndroidChart" @kind object;
  #L3868b6.  call temp:= `i`(v1, v0) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3868bc.  v0:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mRightAxisTransformer` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L3868c0.  v1:= v5.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3868c4.  v2:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float`;
  #L3868c8.  v1:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisRange` @type ^`float`;
  #L3868cc.  v3:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L3868d0.  v4:= v3.`com.github.mikephil.charting.components.AxisBase.mAxisRange` @type ^`float`;
  #L3868d4.  v3:= v3.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float`;
  #L3868d8.  call `prepareMatrixValuePx`(v0, v2, v1, v4, v3) @signature `Lcom/github/mikephil/charting/utils/Transformer;.prepareMatrixValuePx:(FFFF)V` @kind virtual;
  #L3868de.  v0:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mLeftAxisTransformer` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L3868e2.  v1:= v5.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3868e6.  v2:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float`;
  #L3868ea.  v1:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisRange` @type ^`float`;
  #L3868ee.  v3:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L3868f2.  v4:= v3.`com.github.mikephil.charting.components.AxisBase.mAxisRange` @type ^`float`;
  #L3868f6.  v3:= v3.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float`;
  #L3868fa.  call `prepareMatrixValuePx`(v0, v2, v1, v4, v3) @signature `Lcom/github/mikephil/charting/utils/Transformer;.prepareMatrixValuePx:(FFFF)V` @kind virtual;
  #L386900.  return @kind void;
}
procedure `void` `resetTracking`(`com.github.mikephil.charting.charts.BarLineChartBase` v2 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.resetTracking:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L386914.  v0:= 0L;
  #L386918.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.totalTime` @type ^`long` := v0 @kind wide;
  #L38691c.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.drawCycles` @type ^`long` := v0 @kind wide;
  #L386920.  return @kind void;
}
procedure `void` `resetViewPortOffsets`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.resetViewPortOffsets:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386934.  v0:= 0I;
  #L386936.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.mCustomViewPortEnabled` @type ^`boolean` := v0 @kind boolean;
  #L38693a.  call `calculateOffsets`(v1) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.calculateOffsets:()V` @kind virtual;
  #L386940.  return @kind void;
}
procedure `void` `resetZoom`(`com.github.mikephil.charting.charts.BarLineChartBase` v3 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.resetZoom:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L386954.  v0:= v3.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386958.  v1:= v3.`com.github.mikephil.charting.charts.BarLineChartBase.mZoomMatrixBuffer` @type ^`android.graphics.Matrix` @kind object;
  #L38695c.  call `resetZoom`(v0, v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.resetZoom:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L386962.  v0:= v3.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386966.  v1:= v3.`com.github.mikephil.charting.charts.BarLineChartBase.mZoomMatrixBuffer` @type ^`android.graphics.Matrix` @kind object;
  #L38696a.  v2:= 0I;
  #L38696c.  call temp:= `refresh`(v0, v1, v3, v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.refresh:(Landroid/graphics/Matrix;Landroid/view/View;Z)Landroid/graphics/Matrix;` @kind virtual;
  #L386972.  call `calculateOffsets`(v3) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.calculateOffsets:()V` @kind virtual;
  #L386978.  call `postInvalidate`(v3) @signature `Landroid/view/ViewGroup;.postInvalidate:()V` @kind virtual;
  #L38697e.  return @kind void;
}
procedure `void` `setAutoScaleMinMaxEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setAutoScaleMinMaxEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L386990.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleMinMaxEnabled` @type ^`boolean` := v1 @kind boolean;
  #L386994.  return @kind void;
}
procedure `void` `setBorderColor`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `int` v2 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setBorderColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3869a8.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mBorderPaint` @type ^`android.graphics.Paint` @kind object;
  #L3869ac.  call `setColor`(v0, v2) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L3869b2.  return @kind void;
}
procedure `void` `setBorderWidth`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `float` v2 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setBorderWidth:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3869c4.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mBorderPaint` @type ^`android.graphics.Paint` @kind object;
  #L3869c8.  call temp:= `convertDpToPixel`(v2) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L3869ce.  v2:= temp;
  #L3869d0.  call `setStrokeWidth`(v0, v2) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L3869d6.  return @kind void;
}
procedure `void` `setClipValuesToContent`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setClipValuesToContent:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3869e8.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mClipValuesToContent` @type ^`boolean` := v1 @kind boolean;
  #L3869ec.  return @kind void;
}
procedure `void` `setDoubleTapToZoomEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setDoubleTapToZoomEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L386a00.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mDoubleTapToZoomEnabled` @type ^`boolean` := v1 @kind boolean;
  #L386a04.  return @kind void;
}
procedure `void` `setDragEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setDragEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L386a18.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mDragXEnabled` @type ^`boolean` := v1 @kind boolean;
  #L386a1c.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mDragYEnabled` @type ^`boolean` := v1 @kind boolean;
  #L386a20.  return @kind void;
}
procedure `void` `setDragOffsetX`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `float` v2 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setDragOffsetX:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386a34.  v0:= v1.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386a38.  call `setDragOffsetX`(v0, v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setDragOffsetX:(F)V` @kind virtual;
  #L386a3e.  return @kind void;
}
procedure `void` `setDragOffsetY`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `float` v2 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setDragOffsetY:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386a50.  v0:= v1.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386a54.  call `setDragOffsetY`(v0, v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setDragOffsetY:(F)V` @kind virtual;
  #L386a5a.  return @kind void;
}
procedure `void` `setDragXEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setDragXEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L386a6c.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mDragXEnabled` @type ^`boolean` := v1 @kind boolean;
  #L386a70.  return @kind void;
}
procedure `void` `setDragYEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setDragYEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L386a84.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mDragYEnabled` @type ^`boolean` := v1 @kind boolean;
  #L386a88.  return @kind void;
}
procedure `void` `setDrawBorders`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setDrawBorders:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L386a9c.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mDrawBorders` @type ^`boolean` := v1 @kind boolean;
  #L386aa0.  return @kind void;
}
procedure `void` `setDrawGridBackground`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setDrawGridBackground:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L386ab4.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mDrawGridBackground` @type ^`boolean` := v1 @kind boolean;
  #L386ab8.  return @kind void;
}
procedure `void` `setGridBackgroundColor`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `int` v2 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setGridBackgroundColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386acc.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mGridBackgroundPaint` @type ^`android.graphics.Paint` @kind object;
  #L386ad0.  call `setColor`(v0, v2) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L386ad6.  return @kind void;
}
procedure `void` `setHighlightPerDragEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setHighlightPerDragEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L386ae8.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mHighlightPerDragEnabled` @type ^`boolean` := v1 @kind boolean;
  #L386aec.  return @kind void;
}
procedure `void` `setKeepPositionOnRotation`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setKeepPositionOnRotation:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L386b00.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mKeepPositionOnRotation` @type ^`boolean` := v1 @kind boolean;
  #L386b04.  return @kind void;
}
procedure `void` `setMaxVisibleValueCount`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `int` v1 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setMaxVisibleValueCount:(I)V` @AccessFlag PUBLIC {
    temp;

  #L386b18.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mMaxVisibleCount` @type ^`int` := v1;
  #L386b1c.  return @kind void;
}
procedure `void` `setMinOffset`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `float` v1 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setMinOffset:(F)V` @AccessFlag PUBLIC {
    temp;

  #L386b30.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mMinOffset` @type ^`float` := v1;
  #L386b34.  return @kind void;
}
procedure `void` `setOnDrawListener`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `com.github.mikephil.charting.listener.OnDrawListener` v1 @kind object) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setOnDrawListener:(Lcom/github/mikephil/charting/listener/OnDrawListener;)V` @AccessFlag PUBLIC {
    temp;

  #L386b48.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mDrawListener` @type ^`com.github.mikephil.charting.listener.OnDrawListener` := v1 @kind object;
  #L386b4c.  return @kind void;
}
procedure `void` `setPaint`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `android.graphics.Paint` v2 @kind object, `int` v3 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setPaint:(Landroid/graphics/Paint;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386b60.  call `setPaint`(v1, v2, v3) @signature `Lcom/github/mikephil/charting/charts/Chart;.setPaint:(Landroid/graphics/Paint;I)V` @kind super;
  #L386b66.  v0:= 4I;
  #L386b68.  if v3 == v0 then goto L386b6e;
  #L386b6c.  goto L386b72;
  #L386b6e.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.mGridBackgroundPaint` @type ^`android.graphics.Paint` := v2 @kind object;
  #L386b72.  return @kind void;
}
procedure `void` `setPinchZoom`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setPinchZoom:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L386b84.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mPinchZoomEnabled` @type ^`boolean` := v1 @kind boolean;
  #L386b88.  return @kind void;
}
procedure `void` `setRendererLeftYAxis`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `com.github.mikephil.charting.renderer.YAxisRenderer` v1 @kind object) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setRendererLeftYAxis:(Lcom/github/mikephil/charting/renderer/YAxisRenderer;)V` @AccessFlag PUBLIC {
    temp;

  #L386b9c.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererLeft` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` := v1 @kind object;
  #L386ba0.  return @kind void;
}
procedure `void` `setRendererRightYAxis`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `com.github.mikephil.charting.renderer.YAxisRenderer` v1 @kind object) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setRendererRightYAxis:(Lcom/github/mikephil/charting/renderer/YAxisRenderer;)V` @AccessFlag PUBLIC {
    temp;

  #L386bb4.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererRight` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` := v1 @kind object;
  #L386bb8.  return @kind void;
}
procedure `void` `setScaleEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setScaleEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L386bcc.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mScaleXEnabled` @type ^`boolean` := v1 @kind boolean;
  #L386bd0.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mScaleYEnabled` @type ^`boolean` := v1 @kind boolean;
  #L386bd4.  return @kind void;
}
procedure `void` `setScaleMinima`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `float` v2 , `float` v3 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setScaleMinima:(FF)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386be8.  v0:= v1.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386bec.  call `setMinimumScaleX`(v0, v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setMinimumScaleX:(F)V` @kind virtual;
  #L386bf2.  v2:= v1.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386bf6.  call `setMinimumScaleY`(v2, v3) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setMinimumScaleY:(F)V` @kind virtual;
  #L386bfc.  return @kind void;
}
procedure `void` `setScaleXEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setScaleXEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L386c10.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mScaleXEnabled` @type ^`boolean` := v1 @kind boolean;
  #L386c14.  return @kind void;
}
procedure `void` `setScaleYEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `boolean` v1 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setScaleYEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L386c28.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mScaleYEnabled` @type ^`boolean` := v1 @kind boolean;
  #L386c2c.  return @kind void;
}
procedure `void` `setViewPortOffsets`(`com.github.mikephil.charting.charts.BarLineChartBase` v7 @kind this, `float` v8 , `float` v9 , `float` v10 , `float` v11 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setViewPortOffsets:(FFFF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L386c40.  v0:= 1I;
  #L386c42.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mCustomViewPortEnabled` @type ^`boolean` := v0 @kind boolean;
  #L386c46.  v0:= new `com.github.mikephil.charting.charts.BarLineChartBase$1`;
  #L386c4a.  v1:= v0 @kind object;
  #L386c4c.  v2:= v7 @kind object;
  #L386c4e.  v3:= v8;
  #L386c50.  v4:= v9;
  #L386c52.  v5:= v10;
  #L386c54.  v6:= v11;
  #L386c56.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase$1;.<init>:(Lcom/github/mikephil/charting/charts/BarLineChartBase;FFFF)V` @kind direct;
  #L386c5c.  call temp:= `post`(v7, v0) @signature `Landroid/view/ViewGroup;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L386c62.  return @kind void;
}
procedure `void` `setVisibleXRange`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `float` v2 , `float` v3 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setVisibleXRange:(FF)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386c74.  v0:= v1.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L386c78.  v0:= v0.`com.github.mikephil.charting.components.AxisBase.mAxisRange` @type ^`float`;
  #L386c7c.  v2:= v0 / v2 @kind float;
  #L386c80.  v0:= v0 / v3 @kind float;
  #L386c82.  v3:= v1.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386c86.  call `setMinMaxScaleX`(v3, v2, v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setMinMaxScaleX:(FF)V` @kind virtual;
  #L386c8c.  return @kind void;
}
procedure `void` `setVisibleXRangeMaximum`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `float` v2 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setVisibleXRangeMaximum:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386ca0.  v0:= v1.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L386ca4.  v0:= v0.`com.github.mikephil.charting.components.AxisBase.mAxisRange` @type ^`float`;
  #L386ca8.  v0:= v0 / v2 @kind float;
  #L386caa.  v2:= v1.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386cae.  call `setMinimumScaleX`(v2, v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setMinimumScaleX:(F)V` @kind virtual;
  #L386cb4.  return @kind void;
}
procedure `void` `setVisibleXRangeMinimum`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `float` v2 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setVisibleXRangeMinimum:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386cc8.  v0:= v1.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L386ccc.  v0:= v0.`com.github.mikephil.charting.components.AxisBase.mAxisRange` @type ^`float`;
  #L386cd0.  v0:= v0 / v2 @kind float;
  #L386cd2.  v2:= v1.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386cd6.  call `setMaximumScaleX`(v2, v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setMaximumScaleX:(F)V` @kind virtual;
  #L386cdc.  return @kind void;
}
procedure `void` `setVisibleYRange`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `float` v2 , `float` v3 , `com.github.mikephil.charting.components.YAxis$AxisDependency` v4 @kind object) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setVisibleYRange:(FFLcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L386cf0.  call temp:= `getAxisRange`(v1, v4) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getAxisRange:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L386cf6.  v0:= temp;
  #L386cf8.  v0:= v0 / v2 @kind float;
  #L386cfa.  call temp:= `getAxisRange`(v1, v4) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getAxisRange:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L386d00.  v2:= temp;
  #L386d02.  v2:= v2 / v3 @kind float;
  #L386d04.  v3:= v1.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386d08.  call `setMinMaxScaleY`(v3, v0, v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setMinMaxScaleY:(FF)V` @kind virtual;
  #L386d0e.  return @kind void;
}
procedure `void` `setVisibleYRangeMaximum`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `float` v1 , `com.github.mikephil.charting.components.YAxis$AxisDependency` v2 @kind object) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setVisibleYRangeMaximum:(FLcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @AccessFlag PUBLIC {
    temp;

  #L386d20.  call temp:= `getAxisRange`(v0, v2) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getAxisRange:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L386d26.  v2:= temp;
  #L386d28.  v2:= v2 / v1 @kind float;
  #L386d2a.  v1:= v0.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386d2e.  call `setMinimumScaleY`(v1, v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setMinimumScaleY:(F)V` @kind virtual;
  #L386d34.  return @kind void;
}
procedure `void` `setVisibleYRangeMinimum`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `float` v1 , `com.github.mikephil.charting.components.YAxis$AxisDependency` v2 @kind object) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setVisibleYRangeMinimum:(FLcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @AccessFlag PUBLIC {
    temp;

  #L386d48.  call temp:= `getAxisRange`(v0, v2) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getAxisRange:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L386d4e.  v2:= temp;
  #L386d50.  v2:= v2 / v1 @kind float;
  #L386d52.  v1:= v0.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386d56.  call `setMaximumScaleY`(v1, v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setMaximumScaleY:(F)V` @kind virtual;
  #L386d5c.  return @kind void;
}
procedure `void` `setXAxisRenderer`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `com.github.mikephil.charting.renderer.XAxisRenderer` v1 @kind object) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setXAxisRenderer:(Lcom/github/mikephil/charting/renderer/XAxisRenderer;)V` @AccessFlag PUBLIC {
    temp;

  #L386d70.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxisRenderer` @type ^`com.github.mikephil.charting.renderer.XAxisRenderer` := v1 @kind object;
  #L386d74.  return @kind void;
}
procedure `void` `zoom`(`com.github.mikephil.charting.charts.BarLineChartBase` v6 @kind this, `float` v7 , `float` v8 , `float` v9 , `float` v10 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.zoom:(FFFF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L386d88.  v0:= v6.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386d8c.  v4:= -v10 @kind float;
  #L386d8e.  v5:= v6.`com.github.mikephil.charting.charts.BarLineChartBase.mZoomMatrixBuffer` @type ^`android.graphics.Matrix` @kind object;
  #L386d92.  v1:= v7;
  #L386d94.  v2:= v8;
  #L386d96.  v3:= v9;
  #L386d98.  call `zoom`(v0, v1, v2, v3, v4, v5) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.zoom:(FFFFLandroid/graphics/Matrix;)V` @kind virtual;
  #L386d9e.  v7:= v6.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386da2.  v8:= v6.`com.github.mikephil.charting.charts.BarLineChartBase.mZoomMatrixBuffer` @type ^`android.graphics.Matrix` @kind object;
  #L386da6.  v9:= 0I;
  #L386da8.  call temp:= `refresh`(v7, v8, v6, v9) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.refresh:(Landroid/graphics/Matrix;Landroid/view/View;Z)Landroid/graphics/Matrix;` @kind virtual;
  #L386dae.  call `calculateOffsets`(v6) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.calculateOffsets:()V` @kind virtual;
  #L386db4.  call `postInvalidate`(v6) @signature `Landroid/view/ViewGroup;.postInvalidate:()V` @kind virtual;
  #L386dba.  return @kind void;
}
procedure `void` `zoom`(`com.github.mikephil.charting.charts.BarLineChartBase` v8 @kind this, `float` v9 , `float` v10 , `float` v11 , `float` v12 , `com.github.mikephil.charting.components.YAxis$AxisDependency` v13 @kind object) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.zoom:(FFFFLcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L386dcc.  v0:= v8.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386dd0.  call temp:= `getTransformer`(v8, v13) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L386dd6.  v5:= temp @kind object;
  #L386dd8.  v1:= v9;
  #L386dda.  v2:= v10;
  #L386ddc.  v3:= v11;
  #L386dde.  v4:= v12;
  #L386de0.  v6:= v13 @kind object;
  #L386de2.  v7:= v8 @kind object;
  #L386de4.  call temp:= `getInstance`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/github/mikephil/charting/jobs/ZoomJob;.getInstance:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFFFLcom/github/mikephil/charting/utils/Transformer;Lcom/github/mikephil/charting/components/YAxis$AxisDependency;Landroid/view/View;)Lcom/github/mikephil/charting/jobs/ZoomJob;` @kind static;
  #L386dea.  v9:= temp @kind object;
  #L386dec.  call `addViewportJob`(v8, v9) @signature `Lcom/github/mikephil/charting/charts/Chart;.addViewportJob:(Ljava/lang/Runnable;)V` @kind virtual;
  #L386df2.  return @kind void;
}
procedure `void` `zoomAndCenterAnimated`(`com.github.mikephil.charting.charts.BarLineChartBase` v17 @kind this, `float` v18 , `float` v19 , `float` v20 , `float` v21 , `com.github.mikephil.charting.components.YAxis$AxisDependency` v22 @kind object, `long` v23 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.zoomAndCenterAnimated:(FFFFLcom/github/mikephil/charting/components/YAxis$AxisDependency;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L386e04.  v15:= v17 @kind object;
  #L386e08.  v0:= v22 @kind object;
  #L386e0c.  v1:= v15.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386e10.  call temp:= `contentLeft`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentLeft:()F` @kind virtual;
  #L386e16.  v1:= temp;
  #L386e18.  v2:= v15.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386e1c.  call temp:= `contentTop`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L386e22.  v2:= temp;
  #L386e24.  call temp:= `getValuesByTouchPoint`(v15, v1, v2, v0) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getValuesByTouchPoint:(FFLcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/MPPointD;` @kind virtual;
  #L386e2a.  v13:= temp @kind object;
  #L386e2c.  v1:= v15.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386e30.  call temp:= `getTransformer`(v15, v0) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L386e36.  v2:= temp @kind object;
  #L386e38.  call temp:= `getAxis`(v15, v0) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getAxis:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/components/YAxis;` @kind virtual;
  #L386e3e.  v3:= temp @kind object;
  #L386e40.  v0:= v15.`com.github.mikephil.charting.charts.Chart.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L386e44.  v4:= v0.`com.github.mikephil.charting.components.AxisBase.mAxisRange` @type ^`float`;
  #L386e48.  v0:= v15.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386e4c.  call temp:= `getScaleX`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getScaleX:()F` @kind virtual;
  #L386e52.  v7:= temp;
  #L386e54.  v0:= v15.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386e58.  call temp:= `getScaleY`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getScaleY:()F` @kind virtual;
  #L386e5e.  v8:= temp;
  #L386e60.  v5:= v13.`com.github.mikephil.charting.utils.MPPointD.x` @type ^`double` @kind wide;
  #L386e64.  v11:= (`float`) v5 @kind d2f;
  #L386e66.  v5:= v13.`com.github.mikephil.charting.utils.MPPointD.y` @type ^`double` @kind wide;
  #L386e6a.  v12:= (`float`) v5 @kind d2f;
  #L386e6c.  v0:= v1 @kind object;
  #L386e6e.  v1:= v17 @kind object;
  #L386e72.  v5:= v18;
  #L386e76.  v6:= v19;
  #L386e7a.  v9:= v20;
  #L386e7e.  v10:= v21;
  #L386e82.  v16:= v13 @kind object;
  #L386e86.  v13:= v23 @kind wide;
  #L386e8a.  call temp:= `getInstance`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13) @signature `Lcom/github/mikephil/charting/jobs/AnimatedZoomJob;.getInstance:(Lcom/github/mikephil/charting/utils/ViewPortHandler;Landroid/view/View;Lcom/github/mikephil/charting/utils/Transformer;Lcom/github/mikephil/charting/components/YAxis;FFFFFFFFFJ)Lcom/github/mikephil/charting/jobs/AnimatedZoomJob;` @kind static;
  #L386e90.  v0:= temp @kind object;
  #L386e92.  call `addViewportJob`(v15, v0) @signature `Lcom/github/mikephil/charting/charts/Chart;.addViewportJob:(Ljava/lang/Runnable;)V` @kind virtual;
  #L386e98.  call `recycleInstance`(v16) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointD;)V` @kind static;
  #L386e9e.  return @kind void;
}
procedure `void` `zoomIn`(`com.github.mikephil.charting.charts.BarLineChartBase` v5 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.zoomIn:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L386eb0.  v0:= v5.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386eb4.  call temp:= `getContentCenter`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getContentCenter:()Lcom/github/mikephil/charting/utils/MPPointF;` @kind virtual;
  #L386eba.  v0:= temp @kind object;
  #L386ebc.  v1:= v5.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386ec0.  v2:= v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L386ec4.  v3:= v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L386ec8.  v3:= -v3 @kind float;
  #L386eca.  v4:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mZoomMatrixBuffer` @type ^`android.graphics.Matrix` @kind object;
  #L386ece.  call `zoomIn`(v1, v2, v3, v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.zoomIn:(FFLandroid/graphics/Matrix;)V` @kind virtual;
  #L386ed4.  v1:= v5.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386ed8.  v2:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mZoomMatrixBuffer` @type ^`android.graphics.Matrix` @kind object;
  #L386edc.  v3:= 0I;
  #L386ede.  call temp:= `refresh`(v1, v2, v5, v3) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.refresh:(Landroid/graphics/Matrix;Landroid/view/View;Z)Landroid/graphics/Matrix;` @kind virtual;
  #L386ee4.  call `recycleInstance`(v0) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointF;)V` @kind static;
  #L386eea.  call `calculateOffsets`(v5) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.calculateOffsets:()V` @kind virtual;
  #L386ef0.  call `postInvalidate`(v5) @signature `Landroid/view/ViewGroup;.postInvalidate:()V` @kind virtual;
  #L386ef6.  return @kind void;
}
procedure `void` `zoomOut`(`com.github.mikephil.charting.charts.BarLineChartBase` v5 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.zoomOut:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L386f08.  v0:= v5.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386f0c.  call temp:= `getContentCenter`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getContentCenter:()Lcom/github/mikephil/charting/utils/MPPointF;` @kind virtual;
  #L386f12.  v0:= temp @kind object;
  #L386f14.  v1:= v5.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386f18.  v2:= v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L386f1c.  v3:= v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L386f20.  v3:= -v3 @kind float;
  #L386f22.  v4:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mZoomMatrixBuffer` @type ^`android.graphics.Matrix` @kind object;
  #L386f26.  call `zoomOut`(v1, v2, v3, v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.zoomOut:(FFLandroid/graphics/Matrix;)V` @kind virtual;
  #L386f2c.  v1:= v5.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386f30.  v2:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mZoomMatrixBuffer` @type ^`android.graphics.Matrix` @kind object;
  #L386f34.  v3:= 0I;
  #L386f36.  call temp:= `refresh`(v1, v2, v5, v3) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.refresh:(Landroid/graphics/Matrix;Landroid/view/View;Z)Landroid/graphics/Matrix;` @kind virtual;
  #L386f3c.  call `recycleInstance`(v0) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointF;)V` @kind static;
  #L386f42.  call `calculateOffsets`(v5) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.calculateOffsets:()V` @kind virtual;
  #L386f48.  call `postInvalidate`(v5) @signature `Landroid/view/ViewGroup;.postInvalidate:()V` @kind virtual;
  #L386f4e.  return @kind void;
}
procedure `void` `zoomToCenter`(`com.github.mikephil.charting.charts.BarLineChartBase` v8 @kind this, `float` v9 , `float` v10 ) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.zoomToCenter:(FF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L386f60.  call temp:= `getCenterOffsets`(v8) @signature `Lcom/github/mikephil/charting/charts/Chart;.getCenterOffsets:()Lcom/github/mikephil/charting/utils/MPPointF;` @kind virtual;
  #L386f66.  v0:= temp @kind object;
  #L386f68.  v7:= v8.`com.github.mikephil.charting.charts.BarLineChartBase.mZoomMatrixBuffer` @type ^`android.graphics.Matrix` @kind object;
  #L386f6c.  v1:= v8.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386f70.  v4:= v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L386f74.  v0:= v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L386f78.  v5:= -v0 @kind float;
  #L386f7a.  v2:= v9;
  #L386f7c.  v3:= v10;
  #L386f7e.  v6:= v7 @kind object;
  #L386f80.  call `zoom`(v1, v2, v3, v4, v5, v6) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.zoom:(FFFFLandroid/graphics/Matrix;)V` @kind virtual;
  #L386f86.  v9:= v8.`com.github.mikephil.charting.charts.Chart.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L386f8a.  v10:= 0I;
  #L386f8c.  call temp:= `refresh`(v9, v7, v8, v10) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.refresh:(Landroid/graphics/Matrix;Landroid/view/View;Z)Landroid/graphics/Matrix;` @kind virtual;
  #L386f92.  return @kind void;
}
