record `com.android.volley.toolbox.DiskBasedCache$CountingInputStream` @kind class @AccessFlag  extends `java.io.FilterInputStream` @kind class {
  `long` `com.android.volley.toolbox.DiskBasedCache$CountingInputStream.bytesRead` @AccessFlag PRIVATE;
  `long` `com.android.volley.toolbox.DiskBasedCache$CountingInputStream.length` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.android.volley.toolbox.DiskBasedCache$CountingInputStream` v0 @kind this, `java.io.InputStream` v1 @kind object, `long` v2 ) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CountingInputStream;.<init>:(Ljava/io/InputStream;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2b46c0.  call `<init>`(v0, v1) @signature `Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L2b46c6.  v0.`com.android.volley.toolbox.DiskBasedCache$CountingInputStream.length` @type ^`long` := v2 @kind wide;
  #L2b46ca.  return @kind void;
}
procedure `long` `a`(`com.android.volley.toolbox.DiskBasedCache$CountingInputStream` v4 @kind this) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CountingInputStream;.a:()J` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b46a4.  v0:= v4.`com.android.volley.toolbox.DiskBasedCache$CountingInputStream.length` @type ^`long` @kind wide;
  #L2b46a8.  v2:= v4.`com.android.volley.toolbox.DiskBasedCache$CountingInputStream.bytesRead` @type ^`long` @kind wide;
  #L2b46ac.  v0:= v0 - v2 @kind long;
  #L2b46ae.  return v0 @kind wide;
}
procedure `int` `read`(`com.android.volley.toolbox.DiskBasedCache$CountingInputStream` v5 @kind this) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CountingInputStream;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2b4648.  call temp:= `read`(v5) @signature `Ljava/io/FilterInputStream;.read:()I` @kind super;
  #L2b464e.  v0:= temp;
  #L2b4650.  v1:= -1I;
  #L2b4652.  if v0 == v1 then goto L2b4664;
  #L2b4656.  v1:= v5.`com.android.volley.toolbox.DiskBasedCache$CountingInputStream.bytesRead` @type ^`long` @kind wide;
  #L2b465a.  v3:= 1L;
  #L2b465e.  v1:= v1 + v3 @kind long;
  #L2b4660.  v5.`com.android.volley.toolbox.DiskBasedCache$CountingInputStream.bytesRead` @type ^`long` := v1 @kind wide;
  #L2b4664.  return v0;
}
procedure `int` `read`(`com.android.volley.toolbox.DiskBasedCache$CountingInputStream` v2 @kind this, `byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CountingInputStream;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b4678.  call temp:= `read`(v2, v3, v4, v5) @signature `Ljava/io/FilterInputStream;.read:([BII)I` @kind super;
  #L2b467e.  v3:= temp;
  #L2b4680.  v4:= -1I;
  #L2b4682.  if v3 == v4 then goto L2b4692;
  #L2b4686.  v4:= v2.`com.android.volley.toolbox.DiskBasedCache$CountingInputStream.bytesRead` @type ^`long` @kind wide;
  #L2b468a.  v0:= (`long`) v3 @kind i2l;
  #L2b468c.  v4:= v4 + v0 @kind long;
  #L2b468e.  v2.`com.android.volley.toolbox.DiskBasedCache$CountingInputStream.bytesRead` @type ^`long` := v4 @kind wide;
  #L2b4692.  return v3;
}
