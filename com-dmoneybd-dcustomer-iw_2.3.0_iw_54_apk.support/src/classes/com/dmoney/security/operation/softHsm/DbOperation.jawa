record `com.dmoney.security.operation.softHsm.DbOperation` @kind class @AccessFlag PUBLIC {
  `java.sql.Connection` `com.dmoney.security.operation.softHsm.DbOperation._connection` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.dmoney.security.operation.softHsm.DbOperation` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/dmoney/security/operation/softHsm/DbOperation;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c9ec8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c9ece.  v3:= "org.sqlite.JDBC" @kind object;
  #L2c9ed2.  call temp:= `forName`(v3) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L2c9ed8.  v3:= new `java.lang.StringBuilder`;
  #L2c9edc.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c9ee2.  v0:= "jdbc:sqlite:" @kind object;
  #L2c9ee6.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9eec.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9ef2.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c9ef8.  v2:= temp @kind object;
  #L2c9efa.  call temp:= `getConnection`(v2) @signature `Ljava/sql/DriverManager;.getConnection:(Ljava/lang/String;)Ljava/sql/Connection;` @kind static;
  #L2c9f00.  v2:= temp @kind object;
  #L2c9f02.  v1.`com.dmoney.security.operation.softHsm.DbOperation._connection` @type ^`java.sql.Connection` := v2 @kind object;
  #L2c9f06.  return @kind void;
}
procedure `void` `CloseDbConnection`(`com.dmoney.security.operation.softHsm.DbOperation` v1 @kind this) @signature `Lcom/dmoney/security/operation/softHsm/DbOperation;.CloseDbConnection:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c9f18.  v0:= v1.`com.dmoney.security.operation.softHsm.DbOperation._connection` @type ^`java.sql.Connection` @kind object;
  #L2c9f1c.  call `close`(v0) @signature `Ljava/sql/Connection;.close:()V` @kind interface;
  #L2c9f22.  goto L2c9f2c;
  #L2c9f24.  v0:= Exception @type ^`java.sql.SQLException` @kind object;
  #L2c9f26.  call `printStackTrace`(v0) @signature `Ljava/sql/SQLException;.printStackTrace:()V` @kind virtual;
  #L2c9f2c.  return @kind void;
  catch `java.sql.SQLException` @[L2c9f18..L2c9f22] goto L2c9f24;
}
procedure `boolean` `DeleteAllData`(`com.dmoney.security.operation.softHsm.DbOperation` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/dmoney/security/operation/softHsm/DbOperation;.DeleteAllData:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c9a58.  v0:= new `java.lang.StringBuilder`;
  #L2c9a5c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c9a62.  v1:= "delete from " @kind object;
  #L2c9a66.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9a6c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9a72.  v3:= ";" @kind object;
  #L2c9a76.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9a7c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c9a82.  v3:= temp @kind object;
  #L2c9a84.  call temp:= `ExecuteQuery`(v2, v3) @signature `Lcom/dmoney/security/operation/softHsm/DbOperation;.ExecuteQuery:(Ljava/lang/String;)I` @kind virtual;
  #L2c9a8a.  v3:= temp;
  #L2c9a8c.  if v3 <= 0 then goto L2c9a94;
  #L2c9a90.  v3:= 1I;
  #L2c9a92.  goto L2c9a96;
  #L2c9a94.  v3:= 0I;
  #L2c9a96.  return v3;
}
procedure `boolean` `DeleteData`(`com.dmoney.security.operation.softHsm.DbOperation` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lcom/dmoney/security/operation/softHsm/DbOperation;.DeleteData:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c9aa8.  v0:= new `java.lang.StringBuilder`;
  #L2c9aac.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c9ab2.  v1:= "delete from " @kind object;
  #L2c9ab6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9abc.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9ac2.  v3:= " where " @kind object;
  #L2c9ac6.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9acc.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9ad2.  v3:= ";" @kind object;
  #L2c9ad6.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9adc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c9ae2.  v3:= temp @kind object;
  #L2c9ae4.  call temp:= `ExecuteQuery`(v2, v3) @signature `Lcom/dmoney/security/operation/softHsm/DbOperation;.ExecuteQuery:(Ljava/lang/String;)I` @kind virtual;
  #L2c9aea.  v3:= temp;
  #L2c9aec.  if v3 <= 0 then goto L2c9af4;
  #L2c9af0.  v3:= 1I;
  #L2c9af2.  goto L2c9af6;
  #L2c9af4.  v3:= 0I;
  #L2c9af6.  return v3;
}
procedure `int` `ExecuteQuery`(`com.dmoney.security.operation.softHsm.DbOperation` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/dmoney/security/operation/softHsm/DbOperation;.ExecuteQuery:(Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c9e60.  v0:= v1.`com.dmoney.security.operation.softHsm.DbOperation._connection` @type ^`java.sql.Connection` @kind object;
  #L2c9e64.  call temp:= `createStatement`(v0) @signature `Ljava/sql/Connection;.createStatement:()Ljava/sql/Statement;` @kind interface;
  #L2c9e6a.  v0:= temp @kind object;
  #L2c9e6c.  call temp:= `executeUpdate`(v0, v2) @signature `Ljava/sql/Statement;.executeUpdate:(Ljava/lang/String;)I` @kind interface;
  #L2c9e72.  v2:= temp;
  #L2c9e74.  return v2;
}
procedure `boolean` `ExecuteQueryScalar`(`com.dmoney.security.operation.softHsm.DbOperation` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/dmoney/security/operation/softHsm/DbOperation;.ExecuteQueryScalar:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c9b08.  v0:= v1.`com.dmoney.security.operation.softHsm.DbOperation._connection` @type ^`java.sql.Connection` @kind object;
  #L2c9b0c.  call temp:= `createStatement`(v0) @signature `Ljava/sql/Connection;.createStatement:()Ljava/sql/Statement;` @kind interface;
  #L2c9b12.  v0:= temp @kind object;
  #L2c9b14.  call temp:= `executeQuery`(v0, v2) @signature `Ljava/sql/Statement;.executeQuery:(Ljava/lang/String;)Ljava/sql/ResultSet;` @kind interface;
  #L2c9b1a.  v2:= temp @kind object;
  #L2c9b1c.  if v2 == 0 then goto L2c9b30;
  #L2c9b20.  call temp:= `next`(v2) @signature `Ljava/sql/ResultSet;.next:()Z` @kind interface;
  #L2c9b26.  v2:= temp;
  #L2c9b28.  if v2 == 0 then goto L2c9b30;
  #L2c9b2c.  v2:= 1I;
  #L2c9b2e.  return v2;
  #L2c9b30.  v2:= 0I;
  #L2c9b32.  return v2;
}
procedure `java.sql.ResultSet` `GetData`(`com.dmoney.security.operation.softHsm.DbOperation` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/dmoney/security/operation/softHsm/DbOperation;.GetData:(Ljava/lang/String;)Ljava/sql/ResultSet;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c9ea0.  v0:= v1.`com.dmoney.security.operation.softHsm.DbOperation._connection` @type ^`java.sql.Connection` @kind object;
  #L2c9ea4.  call temp:= `createStatement`(v0) @signature `Ljava/sql/Connection;.createStatement:()Ljava/sql/Statement;` @kind interface;
  #L2c9eaa.  v0:= temp @kind object;
  #L2c9eac.  call temp:= `executeQuery`(v0, v2) @signature `Ljava/sql/Statement;.executeQuery:(Ljava/lang/String;)Ljava/sql/ResultSet;` @kind interface;
  #L2c9eb2.  v2:= temp @kind object;
  #L2c9eb4.  return v2 @kind object;
}
procedure `boolean` `InsertData`(`com.dmoney.security.operation.softHsm.DbOperation` v7 @kind this, `java.lang.String` v8 @kind object, `java.util.Map` v9 @kind object) @signature `Lcom/dmoney/security/operation/softHsm/DbOperation;.InsertData:(Ljava/lang/String;Ljava/util/Map;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2c9b44.  v0:= new `java.lang.StringBuilder`;
  #L2c9b48.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c9b4e.  v1:= "INSERT OR IGNORE INTO " @kind object;
  #L2c9b52.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9b58.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9b5e.  v8:= " " @kind object;
  #L2c9b62.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9b68.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c9b6e.  v8:= temp @kind object;
  #L2c9b70.  v0:= new `java.lang.StringBuilder`;
  #L2c9b74.  v1:= 200I;
  #L2c9b78.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2c9b7e.  v2:= new `java.lang.StringBuilder`;
  #L2c9b82.  call `<init>`(v2, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2c9b88.  call temp:= `keySet`(v9) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L2c9b8e.  v1:= temp @kind object;
  #L2c9b90.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2c9b96.  v3:= temp @kind object;
  #L2c9b98.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2c9b9e.  v4:= temp;
  #L2c9ba0.  if v4 == 0 then goto L2c9be4;
  #L2c9ba4.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2c9baa.  v4:= temp @kind object;
  #L2c9bac.  v4:= (`java.lang.String`) v4 @kind object;
  #L2c9bb0.  v5:= new `java.lang.StringBuilder`;
  #L2c9bb4.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c9bba.  v6:= "," @kind object;
  #L2c9bbe.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9bc4.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9bca.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c9bd0.  v4:= temp @kind object;
  #L2c9bd2.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9bd8.  v4:= ",?" @kind object;
  #L2c9bdc.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9be2.  goto L2c9b98;
  #L2c9be4.  v3:= new `java.lang.StringBuilder`;
  #L2c9be8.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c9bee.  call temp:= `append`(v3, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9bf4.  v8:= "(" @kind object;
  #L2c9bf8.  call temp:= `append`(v3, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9bfe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c9c04.  v8:= temp @kind object;
  #L2c9c06.  v0:= 1I;
  #L2c9c08.  call temp:= `substring`(v8, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L2c9c0e.  v8:= temp @kind object;
  #L2c9c10.  call temp:= `append`(v3, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9c16.  v8:= ") VALUES (" @kind object;
  #L2c9c1a.  call temp:= `append`(v3, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9c20.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c9c26.  v8:= temp @kind object;
  #L2c9c28.  call temp:= `substring`(v8, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L2c9c2e.  v8:= temp @kind object;
  #L2c9c30.  call temp:= `append`(v3, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9c36.  v8:= ")" @kind object;
  #L2c9c3a.  call temp:= `append`(v3, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9c40.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c9c46.  v8:= temp @kind object;
  #L2c9c48.  v2:= v7.`com.dmoney.security.operation.softHsm.DbOperation._connection` @type ^`java.sql.Connection` @kind object;
  #L2c9c4c.  call temp:= `prepareStatement`(v2, v8) @signature `Ljava/sql/Connection;.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;` @kind interface;
  #L2c9c52.  v8:= temp @kind object;
  #L2c9c54.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2c9c5a.  v1:= temp @kind object;
  #L2c9c5c.  v2:= 1I;
  #L2c9c5e.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2c9c64.  v3:= temp;
  #L2c9c66.  if v3 == 0 then goto L2c9cca;
  #L2c9c6a.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2c9c70.  v3:= temp @kind object;
  #L2c9c72.  v3:= (`java.lang.String`) v3 @kind object;
  #L2c9c76.  call temp:= `get`(v9, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2c9c7c.  v3:= temp @kind object;
  #L2c9c7e.  if v3 == 0 then goto L2c9c5e;
  #L2c9c82.  v4:= instanceof @variable v3 @type ^`java.lang.String` @kind boolean;
  #L2c9c86.  if v4 == 0 then goto L2c9c96;
  #L2c9c8a.  v3:= (`java.lang.String`) v3 @kind object;
  #L2c9c8e.  call `setString`(v8, v2, v3) @signature `Ljava/sql/PreparedStatement;.setString:(ILjava/lang/String;)V` @kind interface;
  #L2c9c94.  goto L2c9ca8;
  #L2c9c96.  v4:= instanceof @variable v3 @type ^`byte`[] @kind boolean;
  #L2c9c9a.  if v4 == 0 then goto L2c9cae;
  #L2c9c9e.  v3:= (`byte`[]) v3 @kind object;
  #L2c9ca2.  call `setBytes`(v8, v2, v3) @signature `Ljava/sql/PreparedStatement;.setBytes:(I[B)V` @kind interface;
  #L2c9ca8.  v2:= v2 + 1;
  #L2c9cac.  goto L2c9c5e;
  #L2c9cae.  v8:= new `java.lang.UnsupportedOperationException`;
  #L2c9cb2.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2c9cb8.  v9:= temp @kind object;
  #L2c9cba.  call temp:= `getName`(v9) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2c9cc0.  v9:= temp @kind object;
  #L2c9cc2.  call `<init>`(v8, v9) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c9cc8.  throw v8;
  #L2c9cca.  call temp:= `executeUpdate`(v8) @signature `Ljava/sql/PreparedStatement;.executeUpdate:()I` @kind interface;
  #L2c9cd0.  v8:= temp;
  #L2c9cd2.  if v8 <= 0 then goto L2c9cd8;
  #L2c9cd6.  return v0;
  #L2c9cd8.  v8:= 0I;
  #L2c9cda.  return v8;
}
procedure `void` `OpenDbConnection`(`com.dmoney.security.operation.softHsm.DbOperation` v0 @kind this) @signature `Lcom/dmoney/security/operation/softHsm/DbOperation;.OpenDbConnection:()V` @AccessFlag PUBLIC {
    temp;

  #L2c9f50.  return @kind void;
}
procedure `boolean` `UpdateData`(`com.dmoney.security.operation.softHsm.DbOperation` v5 @kind this, `java.lang.String` v6 @kind object, `java.util.Map` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lcom/dmoney/security/operation/softHsm/DbOperation;.UpdateData:(Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2c9cec.  v0:= new `java.lang.StringBuilder`;
  #L2c9cf0.  v1:= 200I;
  #L2c9cf4.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2c9cfa.  v1:= new `java.util.ArrayList`;
  #L2c9cfe.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2c9d04.  if v7 == 0 then goto L2c9d70;
  #L2c9d08.  call temp:= `isEmpty`(v7) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L2c9d0e.  v2:= temp;
  #L2c9d10.  if v2 != 0 then goto L2c9d70;
  #L2c9d14.  call temp:= `keySet`(v7) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L2c9d1a.  v7:= temp @kind object;
  #L2c9d1c.  call temp:= `iterator`(v7) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2c9d22.  v7:= temp @kind object;
  #L2c9d24.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2c9d2a.  v2:= temp;
  #L2c9d2c.  if v2 == 0 then goto L2c9d70;
  #L2c9d30.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2c9d36.  v2:= temp @kind object;
  #L2c9d38.  v2:= (`java.lang.String`) v2 @kind object;
  #L2c9d3c.  v3:= new `java.lang.StringBuilder`;
  #L2c9d40.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c9d46.  v4:= "," @kind object;
  #L2c9d4a.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9d50.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9d56.  v2:= " =?" @kind object;
  #L2c9d5a.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9d60.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c9d66.  v2:= temp @kind object;
  #L2c9d68.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9d6e.  goto L2c9d24;
  #L2c9d70.  v7:= new `java.lang.StringBuilder`;
  #L2c9d74.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c9d7a.  v2:= "UPDATE " @kind object;
  #L2c9d7e.  call temp:= `append`(v7, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9d84.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9d8a.  v6:= " SET " @kind object;
  #L2c9d8e.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9d94.  v6:= 1I;
  #L2c9d96.  call temp:= `substring`(v0, v6) @signature `Ljava/lang/StringBuilder;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L2c9d9c.  v0:= temp @kind object;
  #L2c9d9e.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9da4.  v0:= " WHERE " @kind object;
  #L2c9da8.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9dae.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9db4.  v8:= ";" @kind object;
  #L2c9db8.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9dbe.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c9dc4.  v7:= temp @kind object;
  #L2c9dc6.  v8:= v5.`com.dmoney.security.operation.softHsm.DbOperation._connection` @type ^`java.sql.Connection` @kind object;
  #L2c9dca.  call temp:= `prepareStatement`(v8, v7) @signature `Ljava/sql/Connection;.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;` @kind interface;
  #L2c9dd0.  v7:= temp @kind object;
  #L2c9dd2.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2c9dd8.  v8:= temp @kind object;
  #L2c9dda.  v0:= 1I;
  #L2c9ddc.  call temp:= `hasNext`(v8) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2c9de2.  v1:= temp;
  #L2c9de4.  if v1 == 0 then goto L2c9e3c;
  #L2c9de8.  call temp:= `next`(v8) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2c9dee.  v1:= temp @kind object;
  #L2c9df0.  if v1 == 0 then goto L2c9ddc;
  #L2c9df4.  v2:= instanceof @variable v1 @type ^`java.lang.String` @kind boolean;
  #L2c9df8.  if v2 == 0 then goto L2c9e08;
  #L2c9dfc.  v1:= (`java.lang.String`) v1 @kind object;
  #L2c9e00.  call `setString`(v7, v0, v1) @signature `Ljava/sql/PreparedStatement;.setString:(ILjava/lang/String;)V` @kind interface;
  #L2c9e06.  goto L2c9e1a;
  #L2c9e08.  v2:= instanceof @variable v1 @type ^`byte`[] @kind boolean;
  #L2c9e0c.  if v2 == 0 then goto L2c9e20;
  #L2c9e10.  v1:= (`byte`[]) v1 @kind object;
  #L2c9e14.  call `setBytes`(v7, v0, v1) @signature `Ljava/sql/PreparedStatement;.setBytes:(I[B)V` @kind interface;
  #L2c9e1a.  v0:= v0 + 1;
  #L2c9e1e.  goto L2c9ddc;
  #L2c9e20.  v6:= new `java.lang.UnsupportedOperationException`;
  #L2c9e24.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2c9e2a.  v7:= temp @kind object;
  #L2c9e2c.  call temp:= `getName`(v7) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2c9e32.  v7:= temp @kind object;
  #L2c9e34.  call `<init>`(v6, v7) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c9e3a.  throw v6;
  #L2c9e3c.  call temp:= `executeUpdate`(v7) @signature `Ljava/sql/PreparedStatement;.executeUpdate:()I` @kind interface;
  #L2c9e42.  v7:= temp;
  #L2c9e44.  if v7 <= 0 then goto L2c9e4a;
  #L2c9e48.  return v6;
  #L2c9e4a.  v6:= 0I;
  #L2c9e4c.  return v6;
}
procedure `java.sql.Connection` `getConnection`(`com.dmoney.security.operation.softHsm.DbOperation` v1 @kind this) @signature `Lcom/dmoney/security/operation/softHsm/DbOperation;.getConnection:()Ljava/sql/Connection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c9e88.  v0:= v1.`com.dmoney.security.operation.softHsm.DbOperation._connection` @type ^`java.sql.Connection` @kind object;
  #L2c9e8c.  return v0 @kind object;
}
