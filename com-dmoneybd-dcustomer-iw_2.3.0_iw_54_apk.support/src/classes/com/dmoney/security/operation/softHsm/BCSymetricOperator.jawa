record `com.dmoney.security.operation.softHsm.BCSymetricOperator` @kind class @AccessFlag PUBLIC extends `com.dmoney.security.operation.interfaces.ISymmetricOperation` @kind interface {
}
procedure `void` `<init>`(`com.dmoney.security.operation.softHsm.BCSymetricOperator` v0 @kind this) @signature `Lcom/dmoney/security/operation/softHsm/BCSymetricOperator;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2c99f8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c99fe.  return @kind void;
}
procedure `byte`[] `Operate`(`com.dmoney.security.operation.softHsm.BCSymetricOperator` v4 @kind this, `byte`[] v5 @kind object, `byte`[] v6 @kind object, `boolean` v7 ) @signature `Lcom/dmoney/security/operation/softHsm/BCSymetricOperator;.Operate:([B[BZ)[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c9890.  v0:= new `javax.crypto.spec.SecretKeySpec`;
  #L2c9894.  v1:= length @variable v6;
  #L2c9896.  call temp:= `getInstance`() @signature `Lcom/dmoney/security/config/Configuration;.getInstance:()Lcom/dmoney/security/config/Configuration;` @kind static;
  #L2c989c.  v2:= temp @kind object;
  #L2c989e.  call temp:= `getSymetricKeyAlgo`(v2) @signature `Lcom/dmoney/security/config/Configuration;.getSymetricKeyAlgo:()Ljava/lang/String;` @kind virtual;
  #L2c98a4.  v2:= temp @kind object;
  #L2c98a6.  v3:= 0I;
  #L2c98a8.  call `<init>`(v0, v6, v3, v1, v2) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BIILjava/lang/String;)V` @kind direct;
  #L2c98ae.  v6:= 16I;
  #L2c98b2.  v6:= new `byte`[v6];
  #L2c98b6.  goto L2c98fc;
  #L2c98bc.  v1:= new `javax.crypto.spec.IvParameterSpec`;
  #L2c98c0.  call `<init>`(v1, v6) @signature `Ljavax/crypto/spec/IvParameterSpec;.<init>:([B)V` @kind direct;
  #L2c98c6.  call temp:= `getInstance`() @signature `Lcom/dmoney/security/config/Configuration;.getInstance:()Lcom/dmoney/security/config/Configuration;` @kind static;
  #L2c98cc.  v6:= temp @kind object;
  #L2c98ce.  call temp:= `getSymmetricMechanism`(v6) @signature `Lcom/dmoney/security/config/Configuration;.getSymmetricMechanism:()Ljava/lang/String;` @kind virtual;
  #L2c98d4.  v6:= temp @kind object;
  #L2c98d6.  v2:= `@@com.dmoney.security.config.Configuration.PROVIDER` @type ^`java.lang.String` @kind object;
  #L2c98da.  call temp:= `getInstance`(v6, v2) @signature `Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/Cipher;` @kind static;
  #L2c98e0.  v6:= temp @kind object;
  #L2c98e2.  if v7 == 0 then goto L2c98ea;
  #L2c98e6.  v7:= 1I;
  #L2c98e8.  goto L2c98ec;
  #L2c98ea.  v7:= 2I;
  #L2c98ec.  call `init`(v6, v7, v0, v1) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L2c98f2.  call temp:= `doFinal`(v6, v5) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L2c98f8.  v5:= temp @kind object;
  #L2c98fa.  return v5 @kind object;
  #L2c98fc.  v6:= (0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I) @kind object;
  #L2c9913.  goto L2c98bc;
}
procedure `byte`[] `customOperate`(`com.dmoney.security.operation.softHsm.BCSymetricOperator` v4 @kind this, `byte`[] v5 @kind object, `byte`[] v6 @kind object, `com.dmoney.security.model.servicemodels.enums.SymetricKeyType` v7 @kind object, `com.dmoney.security.model.servicemodels.enums.SymetricAlgoPaddinStyle` v8 @kind object, `com.dmoney.security.model.servicemodels.enums.SymetricBlockingMode` v9 @kind object, `boolean` v10 ) @signature `Lcom/dmoney/security/operation/softHsm/BCSymetricOperator;.customOperate:([B[BLcom/dmoney/security/model/servicemodels/enums/SymetricKeyType;Lcom/dmoney/security/model/servicemodels/enums/SymetricAlgoPaddinStyle;Lcom/dmoney/security/model/servicemodels/enums/SymetricBlockingMode;Z)[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c9924.  v0:= new `javax.crypto.spec.SecretKeySpec`;
  #L2c9928.  v1:= length @variable v6;
  #L2c992a.  call temp:= `toString`(v7) @signature `Lcom/dmoney/security/model/servicemodels/enums/SymetricKeyType;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c9930.  v2:= temp @kind object;
  #L2c9932.  v3:= 0I;
  #L2c9934.  call `<init>`(v0, v6, v3, v1, v2) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BIILjava/lang/String;)V` @kind direct;
  #L2c993a.  v6:= `@@com.dmoney.security.model.servicemodels.enums.SymetricBlockingMode.ECB` @type ^`com.dmoney.security.model.servicemodels.enums.SymetricBlockingMode` @kind object;
  #L2c993e.  if v9 == v6 then goto L2c995c;
  #L2c9942.  v6:= 16I;
  #L2c9946.  v6:= new `byte`[v6];
  #L2c994a.  goto L2c99d0;
  #L2c9950.  v1:= new `javax.crypto.spec.IvParameterSpec`;
  #L2c9954.  call `<init>`(v1, v6) @signature `Ljavax/crypto/spec/IvParameterSpec;.<init>:([B)V` @kind direct;
  #L2c995a.  goto L2c995e;
  #L2c995c.  v1:= 0I;
  #L2c995e.  v6:= new `java.lang.StringBuilder`;
  #L2c9962.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2c9968.  call temp:= `toString`(v7) @signature `Lcom/dmoney/security/model/servicemodels/enums/SymetricKeyType;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c996e.  v7:= temp @kind object;
  #L2c9970.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9976.  v7:= "/" @kind object;
  #L2c997a.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9980.  call temp:= `toString`(v9) @signature `Lcom/dmoney/security/model/servicemodels/enums/SymetricBlockingMode;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c9986.  v9:= temp @kind object;
  #L2c9988.  call temp:= `append`(v6, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c998e.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c9994.  call temp:= `toString`(v8) @signature `Lcom/dmoney/security/model/servicemodels/enums/SymetricAlgoPaddinStyle;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c999a.  v7:= temp @kind object;
  #L2c999c.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2c99a2.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2c99a8.  v6:= temp @kind object;
  #L2c99aa.  v7:= "BC" @kind object;
  #L2c99ae.  call temp:= `getInstance`(v6, v7) @signature `Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;Ljava/lang/String;)Ljavax/crypto/Cipher;` @kind static;
  #L2c99b4.  v6:= temp @kind object;
  #L2c99b6.  if v10 == 0 then goto L2c99be;
  #L2c99ba.  v7:= 1I;
  #L2c99bc.  goto L2c99c0;
  #L2c99be.  v7:= 2I;
  #L2c99c0.  call `init`(v6, v7, v0, v1) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L2c99c6.  call temp:= `doFinal`(v6, v5) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L2c99cc.  v5:= temp @kind object;
  #L2c99ce.  return v5 @kind object;
  #L2c99d0.  v6:= (0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I, 0I) @kind object;
  #L2c99e7.  goto L2c9950;
}
procedure `byte`[] `Decrypt`(`com.dmoney.security.operation.softHsm.BCSymetricOperator` v1 @kind this, `byte`[] v2 @kind object, `byte`[] v3 @kind object) @signature `Lcom/dmoney/security/operation/softHsm/BCSymetricOperator;.Decrypt:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c9808.  v0:= 0I;
  #L2c980a.  call temp:= `Operate`(v1, v2, v3, v0) @signature `Lcom/dmoney/security/operation/softHsm/BCSymetricOperator;.Operate:([B[BZ)[B` @kind direct;
  #L2c9810.  v2:= temp @kind object;
  #L2c9812.  return v2 @kind object;
}
procedure `byte`[] `DecryptWithCustom`(`com.dmoney.security.operation.softHsm.BCSymetricOperator` v7 @kind this, `byte`[] v8 @kind object, `byte`[] v9 @kind object, `com.dmoney.security.model.servicemodels.enums.SymetricKeyType` v10 @kind object, `com.dmoney.security.model.servicemodels.enums.SymetricAlgoPaddinStyle` v11 @kind object, `com.dmoney.security.model.servicemodels.enums.SymetricBlockingMode` v12 @kind object) @signature `Lcom/dmoney/security/operation/softHsm/BCSymetricOperator;.DecryptWithCustom:([B[BLcom/dmoney/security/model/servicemodels/enums/SymetricKeyType;Lcom/dmoney/security/model/servicemodels/enums/SymetricAlgoPaddinStyle;Lcom/dmoney/security/model/servicemodels/enums/SymetricBlockingMode;)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2c9824.  v6:= 0I;
  #L2c9826.  v0:= v7 @kind object;
  #L2c9828.  v1:= v8 @kind object;
  #L2c982a.  v2:= v9 @kind object;
  #L2c982c.  v3:= v10 @kind object;
  #L2c982e.  v4:= v11 @kind object;
  #L2c9830.  v5:= v12 @kind object;
  #L2c9832.  call temp:= `customOperate`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/dmoney/security/operation/softHsm/BCSymetricOperator;.customOperate:([B[BLcom/dmoney/security/model/servicemodels/enums/SymetricKeyType;Lcom/dmoney/security/model/servicemodels/enums/SymetricAlgoPaddinStyle;Lcom/dmoney/security/model/servicemodels/enums/SymetricBlockingMode;Z)[B` @kind direct;
  #L2c9838.  v8:= temp @kind object;
  #L2c983a.  return v8 @kind object;
}
procedure `byte`[] `Encrypt`(`com.dmoney.security.operation.softHsm.BCSymetricOperator` v1 @kind this, `byte`[] v2 @kind object, `byte`[] v3 @kind object) @signature `Lcom/dmoney/security/operation/softHsm/BCSymetricOperator;.Encrypt:([B[B)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2c984c.  v0:= 1I;
  #L2c984e.  call temp:= `Operate`(v1, v2, v3, v0) @signature `Lcom/dmoney/security/operation/softHsm/BCSymetricOperator;.Operate:([B[BZ)[B` @kind direct;
  #L2c9854.  v2:= temp @kind object;
  #L2c9856.  return v2 @kind object;
}
procedure `byte`[] `EncryptWithCustom`(`com.dmoney.security.operation.softHsm.BCSymetricOperator` v7 @kind this, `byte`[] v8 @kind object, `byte`[] v9 @kind object, `com.dmoney.security.model.servicemodels.enums.SymetricKeyType` v10 @kind object, `com.dmoney.security.model.servicemodels.enums.SymetricAlgoPaddinStyle` v11 @kind object, `com.dmoney.security.model.servicemodels.enums.SymetricBlockingMode` v12 @kind object) @signature `Lcom/dmoney/security/operation/softHsm/BCSymetricOperator;.EncryptWithCustom:([B[BLcom/dmoney/security/model/servicemodels/enums/SymetricKeyType;Lcom/dmoney/security/model/servicemodels/enums/SymetricAlgoPaddinStyle;Lcom/dmoney/security/model/servicemodels/enums/SymetricBlockingMode;)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2c9868.  v6:= 1I;
  #L2c986a.  v0:= v7 @kind object;
  #L2c986c.  v1:= v8 @kind object;
  #L2c986e.  v2:= v9 @kind object;
  #L2c9870.  v3:= v10 @kind object;
  #L2c9872.  v4:= v11 @kind object;
  #L2c9874.  v5:= v12 @kind object;
  #L2c9876.  call temp:= `customOperate`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/dmoney/security/operation/softHsm/BCSymetricOperator;.customOperate:([B[BLcom/dmoney/security/model/servicemodels/enums/SymetricKeyType;Lcom/dmoney/security/model/servicemodels/enums/SymetricAlgoPaddinStyle;Lcom/dmoney/security/model/servicemodels/enums/SymetricBlockingMode;Z)[B` @kind direct;
  #L2c987c.  v8:= temp @kind object;
  #L2c987e.  return v8 @kind object;
}
