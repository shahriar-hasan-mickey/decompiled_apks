record `com.dmoney.security.operation.softHsm.SQliteKeyStore` @kind class @AccessFlag PUBLIC extends `android.database.sqlite.SQLiteOpenHelper` @kind class, `com.dmoney.security.operation.interfaces.IKeyStore` @kind interface {
  `com.dmoney.security.operation.interfaces.IKeyWrapper` `com.dmoney.security.operation.softHsm.SQliteKeyStore.keyWrapper` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@com.dmoney.security.operation.softHsm.SQliteKeyStore.col_exchange_count` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.dmoney.security.operation.softHsm.SQliteKeyStore.col_identity` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.dmoney.security.operation.softHsm.SQliteKeyStore.col_is_exchange` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.dmoney.security.operation.softHsm.SQliteKeyStore.col_mac_key` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.dmoney.security.operation.softHsm.SQliteKeyStore.col_private_key` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.dmoney.security.operation.softHsm.SQliteKeyStore.col_public_key` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.dmoney.security.operation.softHsm.SQliteKeyStore.col_regenerate_count` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.dmoney.security.operation.softHsm.SQliteKeyStore.col_secret_key` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.dmoney.security.operation.softHsm.SQliteKeyStore.col_status` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.dmoney.security.operation.softHsm.SQliteKeyStore.db_dmoney_security_framework_db` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.dmoney.security.operation.softHsm.SQliteKeyStore.tbl_key_store` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.dmoney.security.operation.softHsm.SQliteKeyStore` v4 @kind this) @signature `Lcom/dmoney/security/operation/softHsm/SQliteKeyStore;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ca734.  call temp:= `getAppicationContext`() @signature `Lcom/dmoney/security/operation/softHsm/CurrentSqliteContextHolder;.getAppicationContext:()Landroid/content/Context;` @kind static;
  #L2ca73a.  v0:= temp @kind object;
  #L2ca73c.  v1:= "dmoney_security_framework_db" @kind object;
  #L2ca740.  v2:= 0I;
  #L2ca742.  v3:= 2I;
  #L2ca744.  call `<init>`(v4, v0, v1, v2, v3) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)V` @kind direct;
  #L2ca74a.  v0:= new `com.dmoney.security.operation.softHsm.BCKeyWrapper`;
  #L2ca74e.  call `<init>`(v0) @signature `Lcom/dmoney/security/operation/softHsm/BCKeyWrapper;.<init>:()V` @kind direct;
  #L2ca754.  v4.`com.dmoney.security.operation.softHsm.SQliteKeyStore.keyWrapper` @type ^`com.dmoney.security.operation.interfaces.IKeyWrapper` := v0 @kind object;
  #L2ca758.  return @kind void;
}
procedure `com.dmoney.security.operation.model.KeyStoreResponse` `AddKeyInfoByIdentity`(`com.dmoney.security.operation.softHsm.SQliteKeyStore` v5 @kind this, `com.dmoney.security.operation.model.KeyStoreModel` v6 @kind object) @signature `Lcom/dmoney/security/operation/softHsm/SQliteKeyStore;.AddKeyInfoByIdentity:(Lcom/dmoney/security/operation/model/KeyStoreModel;)Lcom/dmoney/security/operation/model/KeyStoreResponse;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2ca4f4.  v0:= new `com.dmoney.security.operation.model.KeyStoreResponse`;
  #L2ca4f8.  call `<init>`(v0) @signature `Lcom/dmoney/security/operation/model/KeyStoreResponse;.<init>:()V` @kind direct;
  #L2ca4fe.  v1:= 0I;
  #L2ca500.  call `setSuccess`(v0, v1) @signature `Lcom/dmoney/security/operation/model/KeyStoreResponse;.setSuccess:(Z)V` @kind virtual;
  #L2ca506.  if v6 == 0 then goto L2ca634;
  #L2ca50a.  call temp:= `getIdentity`(v6) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getIdentity:()Ljava/lang/String;` @kind virtual;
  #L2ca510.  v2:= temp @kind object;
  #L2ca512.  if v2 == 0 then goto L2ca634;
  #L2ca516.  call temp:= `getIdentity`(v6) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getIdentity:()Ljava/lang/String;` @kind virtual;
  #L2ca51c.  v2:= temp @kind object;
  #L2ca51e.  call temp:= `trim`(v2) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L2ca524.  v2:= temp @kind object;
  #L2ca526.  v3:= "" @kind object;
  #L2ca52a.  if v2 != v3 then goto L2ca532;
  #L2ca52e.  goto L2ca634;
  #L2ca532.  call temp:= `getSecretKey`(v6) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getSecretKey:()[B` @kind virtual;
  #L2ca538.  v2:= temp @kind object;
  #L2ca53a.  if v2 == 0 then goto L2ca560;
  #L2ca53e.  v2:= v5.`com.dmoney.security.operation.softHsm.SQliteKeyStore.keyWrapper` @type ^`com.dmoney.security.operation.interfaces.IKeyWrapper` @kind object;
  #L2ca542.  call temp:= `getIdentity`(v6) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getIdentity:()Ljava/lang/String;` @kind virtual;
  #L2ca548.  v3:= temp @kind object;
  #L2ca54a.  call temp:= `getSecretKey`(v6) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getSecretKey:()[B` @kind virtual;
  #L2ca550.  v4:= temp @kind object;
  #L2ca552.  call temp:= `WrapKey`(v2, v3, v4) @signature `Lcom/dmoney/security/operation/interfaces/IKeyWrapper;.WrapKey:(Ljava/lang/String;[B)[B` @kind interface;
  #L2ca558.  v2:= temp @kind object;
  #L2ca55a.  call `setSecretKey`(v6, v2) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.setSecretKey:([B)V` @kind virtual;
  #L2ca560.  call temp:= `getMacCKey`(v6) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getMacCKey:()[B` @kind virtual;
  #L2ca566.  v2:= temp @kind object;
  #L2ca568.  if v2 == 0 then goto L2ca58e;
  #L2ca56c.  v2:= v5.`com.dmoney.security.operation.softHsm.SQliteKeyStore.keyWrapper` @type ^`com.dmoney.security.operation.interfaces.IKeyWrapper` @kind object;
  #L2ca570.  call temp:= `getIdentity`(v6) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getIdentity:()Ljava/lang/String;` @kind virtual;
  #L2ca576.  v3:= temp @kind object;
  #L2ca578.  call temp:= `getMacCKey`(v6) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getMacCKey:()[B` @kind virtual;
  #L2ca57e.  v4:= temp @kind object;
  #L2ca580.  call temp:= `WrapKey`(v2, v3, v4) @signature `Lcom/dmoney/security/operation/interfaces/IKeyWrapper;.WrapKey:(Ljava/lang/String;[B)[B` @kind interface;
  #L2ca586.  v2:= temp @kind object;
  #L2ca588.  call `setMacCKey`(v6, v2) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.setMacCKey:([B)V` @kind virtual;
  #L2ca58e.  call temp:= `getPrivateKey`(v6) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getPrivateKey:()[B` @kind virtual;
  #L2ca594.  v2:= temp @kind object;
  #L2ca596.  if v2 == 0 then goto L2ca5bc;
  #L2ca59a.  v2:= v5.`com.dmoney.security.operation.softHsm.SQliteKeyStore.keyWrapper` @type ^`com.dmoney.security.operation.interfaces.IKeyWrapper` @kind object;
  #L2ca59e.  call temp:= `getIdentity`(v6) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getIdentity:()Ljava/lang/String;` @kind virtual;
  #L2ca5a4.  v3:= temp @kind object;
  #L2ca5a6.  call temp:= `getPrivateKey`(v6) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getPrivateKey:()[B` @kind virtual;
  #L2ca5ac.  v4:= temp @kind object;
  #L2ca5ae.  call temp:= `WrapKey`(v2, v3, v4) @signature `Lcom/dmoney/security/operation/interfaces/IKeyWrapper;.WrapKey:(Ljava/lang/String;[B)[B` @kind interface;
  #L2ca5b4.  v2:= temp @kind object;
  #L2ca5b6.  call `setPrivateKey`(v6, v2) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.setPrivateKey:([B)V` @kind virtual;
  #L2ca5bc.  call temp:= `getPublicKey`(v6) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getPublicKey:()[B` @kind virtual;
  #L2ca5c2.  v2:= temp @kind object;
  #L2ca5c4.  if v2 == 0 then goto L2ca5ea;
  #L2ca5c8.  v2:= v5.`com.dmoney.security.operation.softHsm.SQliteKeyStore.keyWrapper` @type ^`com.dmoney.security.operation.interfaces.IKeyWrapper` @kind object;
  #L2ca5cc.  call temp:= `getIdentity`(v6) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getIdentity:()Ljava/lang/String;` @kind virtual;
  #L2ca5d2.  v3:= temp @kind object;
  #L2ca5d4.  call temp:= `getPublicKey`(v6) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getPublicKey:()[B` @kind virtual;
  #L2ca5da.  v4:= temp @kind object;
  #L2ca5dc.  call temp:= `WrapKey`(v2, v3, v4) @signature `Lcom/dmoney/security/operation/interfaces/IKeyWrapper;.WrapKey:(Ljava/lang/String;[B)[B` @kind interface;
  #L2ca5e2.  v2:= temp @kind object;
  #L2ca5e4.  call `setPublicKey`(v6, v2) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.setPublicKey:([B)V` @kind virtual;
  #L2ca5ea.  call temp:= `getIdentity`(v6) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getIdentity:()Ljava/lang/String;` @kind virtual;
  #L2ca5f0.  v2:= temp @kind object;
  #L2ca5f2.  call temp:= `CheckKeyInfoByIdentity`(v5, v2) @signature `Lcom/dmoney/security/operation/softHsm/SQliteKeyStore;.CheckKeyInfoByIdentity:(Ljava/lang/String;)Z` @kind virtual;
  #L2ca5f8.  v2:= temp;
  #L2ca5fa.  v3:= 1I;
  #L2ca5fc.  v4:= "Failed to save Key Info in Database" @kind object;
  #L2ca600.  if v2 != 0 then goto L2ca612;
  #L2ca604.  call temp:= `SaveKeyInfoByIdentity`(v5, v6) @signature `Lcom/dmoney/security/operation/softHsm/SQliteKeyStore;.SaveKeyInfoByIdentity:(Lcom/dmoney/security/operation/model/KeyStoreModel;)Z` @kind virtual;
  #L2ca60a.  v6:= temp;
  #L2ca60c.  if v6 == 0 then goto L2ca626;
  #L2ca610.  goto L2ca61e;
  #L2ca612.  call temp:= `UpdateKeyInfoNotNullByIdentity`(v5, v6) @signature `Lcom/dmoney/security/operation/softHsm/SQliteKeyStore;.UpdateKeyInfoNotNullByIdentity:(Lcom/dmoney/security/operation/model/KeyStoreModel;)Z` @kind virtual;
  #L2ca618.  v6:= temp;
  #L2ca61a.  if v6 == 0 then goto L2ca626;
  #L2ca61e.  call `setSuccess`(v0, v3) @signature `Lcom/dmoney/security/operation/model/KeyStoreResponse;.setSuccess:(Z)V` @kind virtual;
  #L2ca624.  goto L2ca632;
  #L2ca626.  call `setSuccess`(v0, v1) @signature `Lcom/dmoney/security/operation/model/KeyStoreResponse;.setSuccess:(Z)V` @kind virtual;
  #L2ca62c.  call `setMessage`(v0, v4) @signature `Lcom/dmoney/security/operation/model/KeyStoreResponse;.setMessage:(Ljava/lang/String;)V` @kind virtual;
  #L2ca632.  return v0 @kind object;
  #L2ca634.  v6:= "Identity is either empty or null." @kind object;
  #L2ca638.  call `setMessage`(v0, v6) @signature `Lcom/dmoney/security/operation/model/KeyStoreResponse;.setMessage:(Ljava/lang/String;)V` @kind virtual;
  #L2ca63e.  return v0 @kind object;
}
procedure `boolean` `AddSessionKeyByIdentity`(`com.dmoney.security.operation.softHsm.SQliteKeyStore` v6 @kind this, `com.dmoney.security.operation.model.SessionKeyModel` v7 @kind object) @signature `Lcom/dmoney/security/operation/softHsm/SQliteKeyStore;.AddSessionKeyByIdentity:(Lcom/dmoney/security/operation/model/SessionKeyModel;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2c9f64.  call temp:= `getWritableDatabase`(v6) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.getWritableDatabase:()Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #L2c9f6a.  v0:= temp @kind object;
  #L2c9f6c.  call temp:= `getSecretKey`(v7) @signature `Lcom/dmoney/security/operation/model/SessionKeyModel;.getSecretKey:()[B` @kind virtual;
  #L2c9f72.  v1:= temp @kind object;
  #L2c9f74.  if v1 == 0 then goto L2c9f9a;
  #L2c9f78.  v1:= v6.`com.dmoney.security.operation.softHsm.SQliteKeyStore.keyWrapper` @type ^`com.dmoney.security.operation.interfaces.IKeyWrapper` @kind object;
  #L2c9f7c.  call temp:= `getIdentity`(v7) @signature `Lcom/dmoney/security/operation/model/SessionKeyModel;.getIdentity:()Ljava/lang/String;` @kind virtual;
  #L2c9f82.  v2:= temp @kind object;
  #L2c9f84.  call temp:= `getSecretKey`(v7) @signature `Lcom/dmoney/security/operation/model/SessionKeyModel;.getSecretKey:()[B` @kind virtual;
  #L2c9f8a.  v3:= temp @kind object;
  #L2c9f8c.  call temp:= `WrapKey`(v1, v2, v3) @signature `Lcom/dmoney/security/operation/interfaces/IKeyWrapper;.WrapKey:(Ljava/lang/String;[B)[B` @kind interface;
  #L2c9f92.  v1:= temp @kind object;
  #L2c9f94.  call `setSecretKey`(v7, v1) @signature `Lcom/dmoney/security/operation/model/SessionKeyModel;.setSecretKey:([B)V` @kind virtual;
  #L2c9f9a.  call temp:= `getMacKey`(v7) @signature `Lcom/dmoney/security/operation/model/SessionKeyModel;.getMacKey:()[B` @kind virtual;
  #L2c9fa0.  v1:= temp @kind object;
  #L2c9fa2.  if v1 == 0 then goto L2c9fc8;
  #L2c9fa6.  v1:= v6.`com.dmoney.security.operation.softHsm.SQliteKeyStore.keyWrapper` @type ^`com.dmoney.security.operation.interfaces.IKeyWrapper` @kind object;
  #L2c9faa.  call temp:= `getIdentity`(v7) @signature `Lcom/dmoney/security/operation/model/SessionKeyModel;.getIdentity:()Ljava/lang/String;` @kind virtual;
  #L2c9fb0.  v2:= temp @kind object;
  #L2c9fb2.  call temp:= `getMacKey`(v7) @signature `Lcom/dmoney/security/operation/model/SessionKeyModel;.getMacKey:()[B` @kind virtual;
  #L2c9fb8.  v3:= temp @kind object;
  #L2c9fba.  call temp:= `WrapKey`(v1, v2, v3) @signature `Lcom/dmoney/security/operation/interfaces/IKeyWrapper;.WrapKey:(Ljava/lang/String;[B)[B` @kind interface;
  #L2c9fc0.  v1:= temp @kind object;
  #L2c9fc2.  call `setMacKey`(v7, v1) @signature `Lcom/dmoney/security/operation/model/SessionKeyModel;.setMacKey:([B)V` @kind virtual;
  #L2c9fc8.  v1:= new `android.content.ContentValues`;
  #L2c9fcc.  call `<init>`(v1) @signature `Landroid/content/ContentValues;.<init>:()V` @kind direct;
  #L2c9fd2.  call temp:= `getSecretKey`(v7) @signature `Lcom/dmoney/security/operation/model/SessionKeyModel;.getSecretKey:()[B` @kind virtual;
  #L2c9fd8.  v2:= temp @kind object;
  #L2c9fda.  v3:= "secret_key" @kind object;
  #L2c9fde.  call `put`(v1, v3, v2) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;[B)V` @kind virtual;
  #L2c9fe4.  call temp:= `getMacKey`(v7) @signature `Lcom/dmoney/security/operation/model/SessionKeyModel;.getMacKey:()[B` @kind virtual;
  #L2c9fea.  v2:= temp @kind object;
  #L2c9fec.  v3:= "mac_key" @kind object;
  #L2c9ff0.  call `put`(v1, v3, v2) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;[B)V` @kind virtual;
  #L2c9ff6.  v2:= 1I;
  #L2c9ff8.  v3:= new `java.lang.String`[v2];
  #L2c9ffc.  call temp:= `getIdentity`(v7) @signature `Lcom/dmoney/security/operation/model/SessionKeyModel;.getIdentity:()Ljava/lang/String;` @kind virtual;
  #L2ca002.  v7:= temp @kind object;
  #L2ca004.  v4:= 0I;
  #L2ca006.  v3[v4]:= v7 @kind object;
  #L2ca00a.  v7:= "key_store" @kind object;
  #L2ca00e.  v5:= "identity =?" @kind object;
  #L2ca012.  call temp:= `update`(v0, v7, v1, v5, v3) @signature `Landroid/database/sqlite/SQLiteDatabase;.update:(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I` @kind virtual;
  #L2ca018.  v7:= temp;
  #L2ca01a.  if v7 <= 0 then goto L2ca020;
  #L2ca01e.  goto L2ca022;
  #L2ca020.  v2:= 0I;
  #L2ca022.  return v2;
}
procedure `boolean` `CheckKeyInfoByIdentity`(`com.dmoney.security.operation.softHsm.SQliteKeyStore` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/dmoney/security/operation/softHsm/SQliteKeyStore;.CheckKeyInfoByIdentity:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2ca034.  call temp:= `getWritableDatabase`(v3) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.getWritableDatabase:()Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #L2ca03a.  v0:= temp @kind object;
  #L2ca03c.  v1:= 1I;
  #L2ca03e.  v1:= new `java.lang.String`[v1];
  #L2ca042.  v2:= 0I;
  #L2ca044.  v1[v2]:= v4 @kind object;
  #L2ca048.  v4:= "SELECT identity FROM key_store WHERE identity= ?" @kind object;
  #L2ca04c.  call temp:= `rawQuery`(v0, v4, v1) @signature `Landroid/database/sqlite/SQLiteDatabase;.rawQuery:(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L2ca052.  v4:= temp @kind object;
  #L2ca054.  call temp:= `moveToFirst`(v4) @signature `Landroid/database/Cursor;.moveToFirst:()Z` @kind interface;
  #L2ca05a.  v4:= temp;
  #L2ca05c.  return v4;
}
procedure `boolean` `DeleteKeyInfoByIdentity`(`com.dmoney.security.operation.softHsm.SQliteKeyStore` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lcom/dmoney/security/operation/softHsm/SQliteKeyStore;.DeleteKeyInfoByIdentity:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2ca070.  call temp:= `getWritableDatabase`(v5) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.getWritableDatabase:()Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #L2ca076.  v0:= temp @kind object;
  #L2ca078.  v1:= 1I;
  #L2ca07a.  v2:= new `java.lang.String`[v1];
  #L2ca07e.  v3:= 0I;
  #L2ca080.  v2[v3]:= v6 @kind object;
  #L2ca084.  v6:= "key_store" @kind object;
  #L2ca088.  v4:= "identity =?" @kind object;
  #L2ca08c.  call temp:= `delete`(v0, v6, v4, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.delete:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I` @kind virtual;
  #L2ca092.  v6:= temp;
  #L2ca094.  if v6 <= 0 then goto L2ca09a;
  #L2ca098.  goto L2ca09c;
  #L2ca09a.  v1:= 0I;
  #L2ca09c.  return v1;
}
procedure `com.dmoney.security.operation.model.KeyStoreModel` `GetKeyInfoByIdentity`(`com.dmoney.security.operation.softHsm.SQliteKeyStore` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lcom/dmoney/security/operation/softHsm/SQliteKeyStore;.GetKeyInfoByIdentity:(Ljava/lang/String;)Lcom/dmoney/security/operation/model/KeyStoreModel;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2ca3ac.  call temp:= `getReadableDatabase`(v5) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.getReadableDatabase:()Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #L2ca3b2.  v0:= temp @kind object;
  #L2ca3b4.  v1:= 1I;
  #L2ca3b6.  v2:= new `java.lang.String`[v1];
  #L2ca3ba.  v3:= 0I;
  #L2ca3bc.  v2[v3]:= v6 @kind object;
  #L2ca3c0.  v4:= "SELECT private_key,public_key,secret_key,mac_key FROM key_store WHERE identity= ? LIMIT 1" @kind object;
  #L2ca3c4.  call temp:= `rawQuery`(v0, v4, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.rawQuery:(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L2ca3ca.  v0:= temp @kind object;
  #L2ca3cc.  call temp:= `moveToFirst`(v0) @signature `Landroid/database/Cursor;.moveToFirst:()Z` @kind interface;
  #L2ca3d2.  v2:= temp;
  #L2ca3d4.  if v2 == 0 then goto L2ca426;
  #L2ca3d8.  v2:= new `com.dmoney.security.operation.model.KeyStoreModel`;
  #L2ca3dc.  call `<init>`(v2) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.<init>:()V` @kind direct;
  #L2ca3e2.  call `setIdentity`(v2, v6) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.setIdentity:(Ljava/lang/String;)V` @kind virtual;
  #L2ca3e8.  call temp:= `getBlob`(v0, v3) @signature `Landroid/database/Cursor;.getBlob:(I)[B` @kind interface;
  #L2ca3ee.  v6:= temp @kind object;
  #L2ca3f0.  call `setPrivateKey`(v2, v6) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.setPrivateKey:([B)V` @kind virtual;
  #L2ca3f6.  call temp:= `getBlob`(v0, v1) @signature `Landroid/database/Cursor;.getBlob:(I)[B` @kind interface;
  #L2ca3fc.  v6:= temp @kind object;
  #L2ca3fe.  call `setPublicKey`(v2, v6) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.setPublicKey:([B)V` @kind virtual;
  #L2ca404.  v6:= 2I;
  #L2ca406.  call temp:= `getBlob`(v0, v6) @signature `Landroid/database/Cursor;.getBlob:(I)[B` @kind interface;
  #L2ca40c.  v6:= temp @kind object;
  #L2ca40e.  call `setSecretKey`(v2, v6) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.setSecretKey:([B)V` @kind virtual;
  #L2ca414.  v6:= 3I;
  #L2ca416.  call temp:= `getBlob`(v0, v6) @signature `Landroid/database/Cursor;.getBlob:(I)[B` @kind interface;
  #L2ca41c.  v6:= temp @kind object;
  #L2ca41e.  call `setMacCKey`(v2, v6) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.setMacCKey:([B)V` @kind virtual;
  #L2ca424.  goto L2ca428;
  #L2ca426.  v2:= 0I;
  #L2ca428.  call temp:= `getSecretKey`(v2) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getSecretKey:()[B` @kind virtual;
  #L2ca42e.  v6:= temp @kind object;
  #L2ca430.  if v6 == 0 then goto L2ca456;
  #L2ca434.  v6:= v5.`com.dmoney.security.operation.softHsm.SQliteKeyStore.keyWrapper` @type ^`com.dmoney.security.operation.interfaces.IKeyWrapper` @kind object;
  #L2ca438.  call temp:= `getIdentity`(v2) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getIdentity:()Ljava/lang/String;` @kind virtual;
  #L2ca43e.  v0:= temp @kind object;
  #L2ca440.  call temp:= `getSecretKey`(v2) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getSecretKey:()[B` @kind virtual;
  #L2ca446.  v1:= temp @kind object;
  #L2ca448.  call temp:= `UnWrapKey`(v6, v0, v1) @signature `Lcom/dmoney/security/operation/interfaces/IKeyWrapper;.UnWrapKey:(Ljava/lang/String;[B)[B` @kind interface;
  #L2ca44e.  v6:= temp @kind object;
  #L2ca450.  call `setSecretKey`(v2, v6) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.setSecretKey:([B)V` @kind virtual;
  #L2ca456.  call temp:= `getMacCKey`(v2) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getMacCKey:()[B` @kind virtual;
  #L2ca45c.  v6:= temp @kind object;
  #L2ca45e.  if v6 == 0 then goto L2ca484;
  #L2ca462.  v6:= v5.`com.dmoney.security.operation.softHsm.SQliteKeyStore.keyWrapper` @type ^`com.dmoney.security.operation.interfaces.IKeyWrapper` @kind object;
  #L2ca466.  call temp:= `getIdentity`(v2) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getIdentity:()Ljava/lang/String;` @kind virtual;
  #L2ca46c.  v0:= temp @kind object;
  #L2ca46e.  call temp:= `getMacCKey`(v2) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getMacCKey:()[B` @kind virtual;
  #L2ca474.  v1:= temp @kind object;
  #L2ca476.  call temp:= `UnWrapKey`(v6, v0, v1) @signature `Lcom/dmoney/security/operation/interfaces/IKeyWrapper;.UnWrapKey:(Ljava/lang/String;[B)[B` @kind interface;
  #L2ca47c.  v6:= temp @kind object;
  #L2ca47e.  call `setMacCKey`(v2, v6) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.setMacCKey:([B)V` @kind virtual;
  #L2ca484.  call temp:= `getPrivateKey`(v2) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getPrivateKey:()[B` @kind virtual;
  #L2ca48a.  v6:= temp @kind object;
  #L2ca48c.  if v6 == 0 then goto L2ca4b2;
  #L2ca490.  v6:= v5.`com.dmoney.security.operation.softHsm.SQliteKeyStore.keyWrapper` @type ^`com.dmoney.security.operation.interfaces.IKeyWrapper` @kind object;
  #L2ca494.  call temp:= `getIdentity`(v2) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getIdentity:()Ljava/lang/String;` @kind virtual;
  #L2ca49a.  v0:= temp @kind object;
  #L2ca49c.  call temp:= `getPrivateKey`(v2) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getPrivateKey:()[B` @kind virtual;
  #L2ca4a2.  v1:= temp @kind object;
  #L2ca4a4.  call temp:= `UnWrapKey`(v6, v0, v1) @signature `Lcom/dmoney/security/operation/interfaces/IKeyWrapper;.UnWrapKey:(Ljava/lang/String;[B)[B` @kind interface;
  #L2ca4aa.  v6:= temp @kind object;
  #L2ca4ac.  call `setPrivateKey`(v2, v6) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.setPrivateKey:([B)V` @kind virtual;
  #L2ca4b2.  call temp:= `getPublicKey`(v2) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getPublicKey:()[B` @kind virtual;
  #L2ca4b8.  v6:= temp @kind object;
  #L2ca4ba.  if v6 == 0 then goto L2ca4e0;
  #L2ca4be.  v6:= v5.`com.dmoney.security.operation.softHsm.SQliteKeyStore.keyWrapper` @type ^`com.dmoney.security.operation.interfaces.IKeyWrapper` @kind object;
  #L2ca4c2.  call temp:= `getIdentity`(v2) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getIdentity:()Ljava/lang/String;` @kind virtual;
  #L2ca4c8.  v0:= temp @kind object;
  #L2ca4ca.  call temp:= `getPublicKey`(v2) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getPublicKey:()[B` @kind virtual;
  #L2ca4d0.  v1:= temp @kind object;
  #L2ca4d2.  call temp:= `UnWrapKey`(v6, v0, v1) @signature `Lcom/dmoney/security/operation/interfaces/IKeyWrapper;.UnWrapKey:(Ljava/lang/String;[B)[B` @kind interface;
  #L2ca4d8.  v6:= temp @kind object;
  #L2ca4da.  call `setPublicKey`(v2, v6) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.setPublicKey:([B)V` @kind virtual;
  #L2ca4e0.  return v2 @kind object;
}
procedure `com.dmoney.security.operation.model.SessionKeyModel` `GetSessionKeyByIdentity`(`com.dmoney.security.operation.softHsm.SQliteKeyStore` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lcom/dmoney/security/operation/softHsm/SQliteKeyStore;.GetSessionKeyByIdentity:(Ljava/lang/String;)Lcom/dmoney/security/operation/model/SessionKeyModel;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2ca650.  call temp:= `getReadableDatabase`(v5) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.getReadableDatabase:()Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #L2ca656.  v0:= temp @kind object;
  #L2ca658.  v1:= 1I;
  #L2ca65a.  v2:= new `java.lang.String`[v1];
  #L2ca65e.  v3:= 0I;
  #L2ca660.  v2[v3]:= v6 @kind object;
  #L2ca664.  v4:= "SELECT secret_key,mac_key FROM key_store WHERE identity=?" @kind object;
  #L2ca668.  call temp:= `rawQuery`(v0, v4, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.rawQuery:(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L2ca66e.  v0:= temp @kind object;
  #L2ca670.  call temp:= `getCount`(v0) @signature `Landroid/database/Cursor;.getCount:()I` @kind interface;
  #L2ca676.  v2:= temp;
  #L2ca678.  if v2 <= 0 then goto L2ca6c2;
  #L2ca67c.  call temp:= `moveToFirst`(v0) @signature `Landroid/database/Cursor;.moveToFirst:()Z` @kind interface;
  #L2ca682.  v2:= temp;
  #L2ca684.  if v2 == 0 then goto L2ca6c2;
  #L2ca688.  v2:= new `com.dmoney.security.operation.model.SessionKeyModel`;
  #L2ca68c.  call `<init>`(v2) @signature `Lcom/dmoney/security/operation/model/SessionKeyModel;.<init>:()V` @kind direct;
  #L2ca692.  call temp:= `getBlob`(v0, v3) @signature `Landroid/database/Cursor;.getBlob:(I)[B` @kind interface;
  #L2ca698.  call temp:= `getBlob`(v0, v1) @signature `Landroid/database/Cursor;.getBlob:(I)[B` @kind interface;
  #L2ca69e.  call `setIdentity`(v2, v6) @signature `Lcom/dmoney/security/operation/model/SessionKeyModel;.setIdentity:(Ljava/lang/String;)V` @kind virtual;
  #L2ca6a4.  call temp:= `getBlob`(v0, v3) @signature `Landroid/database/Cursor;.getBlob:(I)[B` @kind interface;
  #L2ca6aa.  v6:= temp @kind object;
  #L2ca6ac.  call `setSecretKey`(v2, v6) @signature `Lcom/dmoney/security/operation/model/SessionKeyModel;.setSecretKey:([B)V` @kind virtual;
  #L2ca6b2.  call temp:= `getBlob`(v0, v1) @signature `Landroid/database/Cursor;.getBlob:(I)[B` @kind interface;
  #L2ca6b8.  v6:= temp @kind object;
  #L2ca6ba.  call `setMacKey`(v2, v6) @signature `Lcom/dmoney/security/operation/model/SessionKeyModel;.setMacKey:([B)V` @kind virtual;
  #L2ca6c0.  goto L2ca6c4;
  #L2ca6c2.  v2:= 0I;
  #L2ca6c4.  call temp:= `getSecretKey`(v2) @signature `Lcom/dmoney/security/operation/model/SessionKeyModel;.getSecretKey:()[B` @kind virtual;
  #L2ca6ca.  v6:= temp @kind object;
  #L2ca6cc.  if v6 == 0 then goto L2ca6f2;
  #L2ca6d0.  v6:= v5.`com.dmoney.security.operation.softHsm.SQliteKeyStore.keyWrapper` @type ^`com.dmoney.security.operation.interfaces.IKeyWrapper` @kind object;
  #L2ca6d4.  call temp:= `getIdentity`(v2) @signature `Lcom/dmoney/security/operation/model/SessionKeyModel;.getIdentity:()Ljava/lang/String;` @kind virtual;
  #L2ca6da.  v0:= temp @kind object;
  #L2ca6dc.  call temp:= `getSecretKey`(v2) @signature `Lcom/dmoney/security/operation/model/SessionKeyModel;.getSecretKey:()[B` @kind virtual;
  #L2ca6e2.  v1:= temp @kind object;
  #L2ca6e4.  call temp:= `UnWrapKey`(v6, v0, v1) @signature `Lcom/dmoney/security/operation/interfaces/IKeyWrapper;.UnWrapKey:(Ljava/lang/String;[B)[B` @kind interface;
  #L2ca6ea.  v6:= temp @kind object;
  #L2ca6ec.  call `setSecretKey`(v2, v6) @signature `Lcom/dmoney/security/operation/model/SessionKeyModel;.setSecretKey:([B)V` @kind virtual;
  #L2ca6f2.  call temp:= `getMacKey`(v2) @signature `Lcom/dmoney/security/operation/model/SessionKeyModel;.getMacKey:()[B` @kind virtual;
  #L2ca6f8.  v6:= temp @kind object;
  #L2ca6fa.  if v6 == 0 then goto L2ca720;
  #L2ca6fe.  v6:= v5.`com.dmoney.security.operation.softHsm.SQliteKeyStore.keyWrapper` @type ^`com.dmoney.security.operation.interfaces.IKeyWrapper` @kind object;
  #L2ca702.  call temp:= `getIdentity`(v2) @signature `Lcom/dmoney/security/operation/model/SessionKeyModel;.getIdentity:()Ljava/lang/String;` @kind virtual;
  #L2ca708.  v0:= temp @kind object;
  #L2ca70a.  call temp:= `getMacKey`(v2) @signature `Lcom/dmoney/security/operation/model/SessionKeyModel;.getMacKey:()[B` @kind virtual;
  #L2ca710.  v1:= temp @kind object;
  #L2ca712.  call temp:= `UnWrapKey`(v6, v0, v1) @signature `Lcom/dmoney/security/operation/interfaces/IKeyWrapper;.UnWrapKey:(Ljava/lang/String;[B)[B` @kind interface;
  #L2ca718.  v6:= temp @kind object;
  #L2ca71a.  call `setMacKey`(v2, v6) @signature `Lcom/dmoney/security/operation/model/SessionKeyModel;.setMacKey:([B)V` @kind virtual;
  #L2ca720.  return v2 @kind object;
}
procedure `boolean` `RemoveSessionKeyByIdentity`(`com.dmoney.security.operation.softHsm.SQliteKeyStore` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lcom/dmoney/security/operation/softHsm/SQliteKeyStore;.RemoveSessionKeyByIdentity:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2ca0b0.  call temp:= `getWritableDatabase`(v5) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.getWritableDatabase:()Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #L2ca0b6.  v0:= temp @kind object;
  #L2ca0b8.  v1:= new `android.content.ContentValues`;
  #L2ca0bc.  call `<init>`(v1) @signature `Landroid/content/ContentValues;.<init>:()V` @kind direct;
  #L2ca0c2.  v2:= "secret_key" @kind object;
  #L2ca0c6.  call `putNull`(v1, v2) @signature `Landroid/content/ContentValues;.putNull:(Ljava/lang/String;)V` @kind virtual;
  #L2ca0cc.  v2:= "mac_key" @kind object;
  #L2ca0d0.  call `putNull`(v1, v2) @signature `Landroid/content/ContentValues;.putNull:(Ljava/lang/String;)V` @kind virtual;
  #L2ca0d6.  v1:= 1I;
  #L2ca0d8.  v2:= new `java.lang.String`[v1];
  #L2ca0dc.  v3:= 0I;
  #L2ca0de.  v2[v3]:= v6 @kind object;
  #L2ca0e2.  v6:= "key_store" @kind object;
  #L2ca0e6.  v4:= "identity =?" @kind object;
  #L2ca0ea.  call temp:= `delete`(v0, v6, v4, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.delete:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I` @kind virtual;
  #L2ca0f0.  v6:= temp;
  #L2ca0f2.  if v6 <= 0 then goto L2ca0f8;
  #L2ca0f6.  goto L2ca0fa;
  #L2ca0f8.  v1:= 0I;
  #L2ca0fa.  return v1;
}
procedure `boolean` `SaveKeyInfoByIdentity`(`com.dmoney.security.operation.softHsm.SQliteKeyStore` v4 @kind this, `com.dmoney.security.operation.model.KeyStoreModel` v5 @kind object) @signature `Lcom/dmoney/security/operation/softHsm/SQliteKeyStore;.SaveKeyInfoByIdentity:(Lcom/dmoney/security/operation/model/KeyStoreModel;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ca10c.  v0:= new `android.content.ContentValues`;
  #L2ca110.  call `<init>`(v0) @signature `Landroid/content/ContentValues;.<init>:()V` @kind direct;
  #L2ca116.  call temp:= `getIdentity`(v5) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getIdentity:()Ljava/lang/String;` @kind virtual;
  #L2ca11c.  v1:= temp @kind object;
  #L2ca11e.  v2:= "identity" @kind object;
  #L2ca122.  call `put`(v0, v2, v1) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L2ca128.  call temp:= `getPrivateKey`(v5) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getPrivateKey:()[B` @kind virtual;
  #L2ca12e.  v1:= temp @kind object;
  #L2ca130.  v2:= "private_key" @kind object;
  #L2ca134.  call `put`(v0, v2, v1) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;[B)V` @kind virtual;
  #L2ca13a.  call temp:= `getPublicKey`(v5) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getPublicKey:()[B` @kind virtual;
  #L2ca140.  v1:= temp @kind object;
  #L2ca142.  v2:= "public_key" @kind object;
  #L2ca146.  call `put`(v0, v2, v1) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;[B)V` @kind virtual;
  #L2ca14c.  call temp:= `getSecretKey`(v5) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getSecretKey:()[B` @kind virtual;
  #L2ca152.  v1:= temp @kind object;
  #L2ca154.  v2:= "secret_key" @kind object;
  #L2ca158.  call `put`(v0, v2, v1) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;[B)V` @kind virtual;
  #L2ca15e.  call temp:= `getMacCKey`(v5) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getMacCKey:()[B` @kind virtual;
  #L2ca164.  v1:= temp @kind object;
  #L2ca166.  v2:= "mac_key" @kind object;
  #L2ca16a.  call `put`(v0, v2, v1) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;[B)V` @kind virtual;
  #L2ca170.  call temp:= `getExchange`(v5) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getExchange:()Ljava/lang/String;` @kind virtual;
  #L2ca176.  v1:= temp @kind object;
  #L2ca178.  v2:= "is_exchange" @kind object;
  #L2ca17c.  call `put`(v0, v2, v1) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L2ca182.  call temp:= `getExchangeCount`(v5) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getExchangeCount:()Ljava/lang/String;` @kind virtual;
  #L2ca188.  v1:= temp @kind object;
  #L2ca18a.  v2:= "exchange_count" @kind object;
  #L2ca18e.  call `put`(v0, v2, v1) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L2ca194.  call temp:= `getRegenerateCount`(v5) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getRegenerateCount:()Ljava/lang/String;` @kind virtual;
  #L2ca19a.  v1:= temp @kind object;
  #L2ca19c.  v2:= "regenerate_count" @kind object;
  #L2ca1a0.  call `put`(v0, v2, v1) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L2ca1a6.  call temp:= `getStatus`(v5) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getStatus:()Ljava/lang/String;` @kind virtual;
  #L2ca1ac.  v5:= temp @kind object;
  #L2ca1ae.  v1:= "status" @kind object;
  #L2ca1b2.  call `put`(v0, v1, v5) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L2ca1b8.  call temp:= `getWritableDatabase`(v4) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.getWritableDatabase:()Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #L2ca1be.  v5:= temp @kind object;
  #L2ca1c0.  v1:= "key_store" @kind object;
  #L2ca1c4.  v2:= 0I;
  #L2ca1c6.  call temp:= `insert`(v5, v1, v2, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.insert:(Ljava/lang/String;Ljava/lang/String;Landroid/content/ContentValues;)J` @kind virtual;
  #L2ca1cc.  v0:= temp @kind wide;
  #L2ca1ce.  v2:= 0L;
  #L2ca1d2.  v5:= lcmp(v0, v2);
  #L2ca1d6.  if v5 <= 0 then goto L2ca1de;
  #L2ca1da.  v5:= 1I;
  #L2ca1dc.  goto L2ca1e0;
  #L2ca1de.  v5:= 0I;
  #L2ca1e0.  return v5;
}
procedure `boolean` `UpdateKeyInfoByIdentity`(`com.dmoney.security.operation.softHsm.SQliteKeyStore` v6 @kind this, `com.dmoney.security.operation.model.KeyStoreModel` v7 @kind object) @signature `Lcom/dmoney/security/operation/softHsm/SQliteKeyStore;.UpdateKeyInfoByIdentity:(Lcom/dmoney/security/operation/model/KeyStoreModel;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2ca1f4.  v0:= new `android.content.ContentValues`;
  #L2ca1f8.  call `<init>`(v0) @signature `Landroid/content/ContentValues;.<init>:()V` @kind direct;
  #L2ca1fe.  call temp:= `getPrivateKey`(v7) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getPrivateKey:()[B` @kind virtual;
  #L2ca204.  v1:= temp @kind object;
  #L2ca206.  v2:= "private_key" @kind object;
  #L2ca20a.  call `put`(v0, v2, v1) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;[B)V` @kind virtual;
  #L2ca210.  call temp:= `getPublicKey`(v7) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getPublicKey:()[B` @kind virtual;
  #L2ca216.  v1:= temp @kind object;
  #L2ca218.  v2:= "public_key" @kind object;
  #L2ca21c.  call `put`(v0, v2, v1) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;[B)V` @kind virtual;
  #L2ca222.  call temp:= `getSecretKey`(v7) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getSecretKey:()[B` @kind virtual;
  #L2ca228.  v1:= temp @kind object;
  #L2ca22a.  v2:= "secret_key" @kind object;
  #L2ca22e.  call `put`(v0, v2, v1) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;[B)V` @kind virtual;
  #L2ca234.  call temp:= `getExchange`(v7) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getExchange:()Ljava/lang/String;` @kind virtual;
  #L2ca23a.  v1:= temp @kind object;
  #L2ca23c.  v2:= "is_exchange" @kind object;
  #L2ca240.  call `put`(v0, v2, v1) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L2ca246.  call temp:= `getExchangeCount`(v7) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getExchangeCount:()Ljava/lang/String;` @kind virtual;
  #L2ca24c.  v1:= temp @kind object;
  #L2ca24e.  v2:= "exchange_count" @kind object;
  #L2ca252.  call `put`(v0, v2, v1) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L2ca258.  call temp:= `getRegenerateCount`(v7) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getRegenerateCount:()Ljava/lang/String;` @kind virtual;
  #L2ca25e.  v1:= temp @kind object;
  #L2ca260.  v2:= "regenerate_count" @kind object;
  #L2ca264.  call `put`(v0, v2, v1) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L2ca26a.  call temp:= `getStatus`(v7) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getStatus:()Ljava/lang/String;` @kind virtual;
  #L2ca270.  v1:= temp @kind object;
  #L2ca272.  v2:= "status" @kind object;
  #L2ca276.  call `put`(v0, v2, v1) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L2ca27c.  call temp:= `getWritableDatabase`(v6) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.getWritableDatabase:()Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #L2ca282.  v1:= temp @kind object;
  #L2ca284.  v2:= 1I;
  #L2ca286.  v3:= new `java.lang.String`[v2];
  #L2ca28a.  call temp:= `getIdentity`(v7) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getIdentity:()Ljava/lang/String;` @kind virtual;
  #L2ca290.  v7:= temp @kind object;
  #L2ca292.  v4:= 0I;
  #L2ca294.  v3[v4]:= v7 @kind object;
  #L2ca298.  v7:= "key_store" @kind object;
  #L2ca29c.  v5:= "identity =?" @kind object;
  #L2ca2a0.  call temp:= `update`(v1, v7, v0, v5, v3) @signature `Landroid/database/sqlite/SQLiteDatabase;.update:(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I` @kind virtual;
  #L2ca2a6.  v7:= temp;
  #L2ca2a8.  if v7 <= 0 then goto L2ca2ae;
  #L2ca2ac.  goto L2ca2b0;
  #L2ca2ae.  v2:= 0I;
  #L2ca2b0.  return v2;
}
procedure `boolean` `UpdateKeyInfoNotNullByIdentity`(`com.dmoney.security.operation.softHsm.SQliteKeyStore` v6 @kind this, `com.dmoney.security.operation.model.KeyStoreModel` v7 @kind object) @signature `Lcom/dmoney/security/operation/softHsm/SQliteKeyStore;.UpdateKeyInfoNotNullByIdentity:(Lcom/dmoney/security/operation/model/KeyStoreModel;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2ca2c4.  v0:= new `android.content.ContentValues`;
  #L2ca2c8.  call `<init>`(v0) @signature `Landroid/content/ContentValues;.<init>:()V` @kind direct;
  #L2ca2ce.  call temp:= `getPrivateKey`(v7) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getPrivateKey:()[B` @kind virtual;
  #L2ca2d4.  v1:= temp @kind object;
  #L2ca2d6.  if v1 == 0 then goto L2ca2ec;
  #L2ca2da.  call temp:= `getPrivateKey`(v7) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getPrivateKey:()[B` @kind virtual;
  #L2ca2e0.  v1:= temp @kind object;
  #L2ca2e2.  v2:= "private_key" @kind object;
  #L2ca2e6.  call `put`(v0, v2, v1) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;[B)V` @kind virtual;
  #L2ca2ec.  call temp:= `getPublicKey`(v7) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getPublicKey:()[B` @kind virtual;
  #L2ca2f2.  v1:= temp @kind object;
  #L2ca2f4.  if v1 == 0 then goto L2ca30a;
  #L2ca2f8.  call temp:= `getPublicKey`(v7) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getPublicKey:()[B` @kind virtual;
  #L2ca2fe.  v1:= temp @kind object;
  #L2ca300.  v2:= "public_key" @kind object;
  #L2ca304.  call `put`(v0, v2, v1) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;[B)V` @kind virtual;
  #L2ca30a.  call temp:= `getSecretKey`(v7) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getSecretKey:()[B` @kind virtual;
  #L2ca310.  v1:= temp @kind object;
  #L2ca312.  if v1 == 0 then goto L2ca328;
  #L2ca316.  call temp:= `getSecretKey`(v7) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getSecretKey:()[B` @kind virtual;
  #L2ca31c.  v1:= temp @kind object;
  #L2ca31e.  v2:= "secret_key" @kind object;
  #L2ca322.  call `put`(v0, v2, v1) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;[B)V` @kind virtual;
  #L2ca328.  call temp:= `getMacCKey`(v7) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getMacCKey:()[B` @kind virtual;
  #L2ca32e.  v1:= temp @kind object;
  #L2ca330.  if v1 == 0 then goto L2ca346;
  #L2ca334.  call temp:= `getMacCKey`(v7) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getMacCKey:()[B` @kind virtual;
  #L2ca33a.  v1:= temp @kind object;
  #L2ca33c.  v2:= "mac_key" @kind object;
  #L2ca340.  call `put`(v0, v2, v1) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;[B)V` @kind virtual;
  #L2ca346.  call temp:= `getExchange`(v7) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getExchange:()Ljava/lang/String;` @kind virtual;
  #L2ca34c.  v1:= temp @kind object;
  #L2ca34e.  if v1 == 0 then goto L2ca364;
  #L2ca352.  call temp:= `getExchange`(v7) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getExchange:()Ljava/lang/String;` @kind virtual;
  #L2ca358.  v1:= temp @kind object;
  #L2ca35a.  v2:= "is_exchange" @kind object;
  #L2ca35e.  call `put`(v0, v2, v1) @signature `Landroid/content/ContentValues;.put:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L2ca364.  call temp:= `getWritableDatabase`(v6) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.getWritableDatabase:()Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #L2ca36a.  v1:= temp @kind object;
  #L2ca36c.  v2:= 1I;
  #L2ca36e.  v3:= new `java.lang.String`[v2];
  #L2ca372.  call temp:= `getIdentity`(v7) @signature `Lcom/dmoney/security/operation/model/KeyStoreModel;.getIdentity:()Ljava/lang/String;` @kind virtual;
  #L2ca378.  v7:= temp @kind object;
  #L2ca37a.  v4:= 0I;
  #L2ca37c.  v3[v4]:= v7 @kind object;
  #L2ca380.  v7:= "key_store" @kind object;
  #L2ca384.  v5:= "identity =?" @kind object;
  #L2ca388.  call temp:= `update`(v1, v7, v0, v5, v3) @signature `Landroid/database/sqlite/SQLiteDatabase;.update:(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I` @kind virtual;
  #L2ca38e.  v7:= temp;
  #L2ca390.  if v7 <= 0 then goto L2ca396;
  #L2ca394.  goto L2ca398;
  #L2ca396.  v2:= 0I;
  #L2ca398.  return v2;
}
procedure `void` `onCreate`(`com.dmoney.security.operation.softHsm.SQliteKeyStore` v1 @kind this, `android.database.sqlite.SQLiteDatabase` v2 @kind object) @signature `Lcom/dmoney/security/operation/softHsm/SQliteKeyStore;.onCreate:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ca76c.  v0:= "CREATE TABLE key_store(identity TEXT,private_key BLOB,public_key BLOB,secret_key BLOB,mac_key BLOB,exchange_count TEXT,is_exchange TEXT,regenerate_count TEXT,status TEXT)" @kind object;
  #L2ca770.  call `execSQL`(v2, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L2ca776.  return @kind void;
}
procedure `void` `onUpgrade`(`com.dmoney.security.operation.softHsm.SQliteKeyStore` v0 @kind this, `android.database.sqlite.SQLiteDatabase` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/dmoney/security/operation/softHsm/SQliteKeyStore;.onUpgrade:(Landroid/database/sqlite/SQLiteDatabase;II)V` @AccessFlag PUBLIC {
    temp;

  #L2ca788.  v2:= "DROP TABLE IF EXISTS key_store" @kind object;
  #L2ca78c.  call `execSQL`(v1, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L2ca792.  call `onCreate`(v0, v1) @signature `Lcom/dmoney/security/operation/softHsm/SQliteKeyStore;.onCreate:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind virtual;
  #L2ca798.  return @kind void;
}
