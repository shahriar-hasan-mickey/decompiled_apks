record `com.dmoney.security.operation.factory.OperatorFactory` @kind class @AccessFlag PUBLIC {
}
global `com.dmoney.security.operation.interfaces.IOperator` `@@com.dmoney.security.operation.factory.OperatorFactory.iOperator` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/dmoney/security/operation/factory/OperatorFactory;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L2c8cc4.  return @kind void;
}
procedure `void` `<init>`(`com.dmoney.security.operation.factory.OperatorFactory` v0 @kind this) @signature `Lcom/dmoney/security/operation/factory/OperatorFactory;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2c8cd8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c8cde.  return @kind void;
}
procedure `com.dmoney.security.operation.interfaces.IOperator` `GetOperator`() @signature `Lcom/dmoney/security/operation/factory/OperatorFactory;.GetOperator:()Lcom/dmoney/security/operation/interfaces/IOperator;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2c8c98.  v0:= `@@com.dmoney.security.operation.factory.OperatorFactory.iOperator` @type ^`com.dmoney.security.operation.interfaces.IOperator` @kind object;
  #L2c8c9c.  if v0 != 0 then goto L2c8cae;
  #L2c8ca0.  v0:= new `com.dmoney.security.operation.softHsm.SoftHSMOperator`;
  #L2c8ca4.  call `<init>`(v0) @signature `Lcom/dmoney/security/operation/softHsm/SoftHSMOperator;.<init>:()V` @kind direct;
  #L2c8caa.  `@@com.dmoney.security.operation.factory.OperatorFactory.iOperator` @type ^`com.dmoney.security.operation.interfaces.IOperator` := v0 @kind object;
  #L2c8cae.  v0:= `@@com.dmoney.security.operation.factory.OperatorFactory.iOperator` @type ^`com.dmoney.security.operation.interfaces.IOperator` @kind object;
  #L2c8cb2.  return v0 @kind object;
}
