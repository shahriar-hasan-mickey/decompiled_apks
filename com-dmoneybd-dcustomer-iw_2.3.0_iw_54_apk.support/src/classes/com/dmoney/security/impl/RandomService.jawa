record `com.dmoney.security.impl.RandomService` @kind class @AccessFlag PUBLIC extends `com.dmoney.security.interfaces.IRandomService` @kind interface {
  `com.dmoney.security.operation.interfaces.IOperator` `com.dmoney.security.impl.RandomService.a` @AccessFlag ;
}
procedure `void` `<init>`(`com.dmoney.security.impl.RandomService` v1 @kind this) @signature `Lcom/dmoney/security/impl/RandomService;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c21d8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c21de.  call temp:= `GetOperator`() @signature `Lcom/dmoney/security/operation/factory/OperatorFactory;.GetOperator:()Lcom/dmoney/security/operation/interfaces/IOperator;` @kind static;
  #L2c21e4.  v0:= temp @kind object;
  #L2c21e6.  v1.`com.dmoney.security.impl.RandomService.a` @type ^`com.dmoney.security.operation.interfaces.IOperator` := v0 @kind object;
  #L2c21ea.  return @kind void;
}
procedure `void` `<init>`(`com.dmoney.security.impl.RandomService` v0 @kind this, `com.dmoney.security.operation.interfaces.IOperator` v1 @kind object) @signature `Lcom/dmoney/security/impl/RandomService;.<init>:(Lcom/dmoney/security/operation/interfaces/IOperator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2c21fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c2202.  v0.`com.dmoney.security.impl.RandomService.a` @type ^`com.dmoney.security.operation.interfaces.IOperator` := v1 @kind object;
  #L2c2206.  return @kind void;
}
procedure `com.dmoney.security.model.servicemodels.responses.GeneratePinResponse` `GeneratePin`(`com.dmoney.security.impl.RandomService` v2 @kind this, `com.dmoney.security.model.servicemodels.requests.GeneratePinRequest` v3 @kind object) @signature `Lcom/dmoney/security/impl/RandomService;.GeneratePin:(Lcom/dmoney/security/model/servicemodels/requests/GeneratePinRequest;)Lcom/dmoney/security/model/servicemodels/responses/GeneratePinResponse;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c20c0.  if v3 == 0 then goto L2c2104;
  #L2c20c4.  v0:= v3.`com.dmoney.security.model.servicemodels.requests.GeneratePinRequest.NumberOfDigits` @type ^`int`;
  #L2c20c8.  if v0 <= 0 then goto L2c20f4;
  #L2c20cc.  v0:= new `com.dmoney.security.model.servicemodels.responses.GeneratePinResponse`;
  #L2c20d0.  call `<init>`(v0) @signature `Lcom/dmoney/security/model/servicemodels/responses/GeneratePinResponse;.<init>:()V` @kind direct;
  #L2c20d6.  v1:= v2.`com.dmoney.security.impl.RandomService.a` @type ^`com.dmoney.security.operation.interfaces.IOperator` @kind object;
  #L2c20da.  call temp:= `GetRandGenerator`(v1) @signature `Lcom/dmoney/security/operation/interfaces/IOperator;.GetRandGenerator:()Lcom/dmoney/security/operation/interfaces/IRandGenerator;` @kind interface;
  #L2c20e0.  v1:= temp @kind object;
  #L2c20e2.  v3:= v3.`com.dmoney.security.model.servicemodels.requests.GeneratePinRequest.NumberOfDigits` @type ^`int`;
  #L2c20e6.  call temp:= `GeneratePIN`(v1, v3) @signature `Lcom/dmoney/security/operation/interfaces/IRandGenerator;.GeneratePIN:(I)Ljava/lang/String;` @kind interface;
  #L2c20ec.  v3:= temp @kind object;
  #L2c20ee.  v0.`com.dmoney.security.model.servicemodels.responses.GeneratePinResponse.PinString` @type ^`java.lang.String` := v3 @kind object;
  #L2c20f2.  return v0 @kind object;
  #L2c20f4.  v3:= new `java.lang.IllegalArgumentException`;
  #L2c20f8.  v0:= "NumberOfDigits" @kind object;
  #L2c20fc.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c2102.  throw v3;
  #L2c2104.  v3:= new `java.lang.IllegalArgumentException`;
  #L2c2108.  v0:= "request" @kind object;
  #L2c210c.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c2112.  throw v3;
}
procedure `com.dmoney.security.model.servicemodels.responses.GenerateTokenResponse` `GenerateToken`(`com.dmoney.security.impl.RandomService` v2 @kind this, `com.dmoney.security.model.servicemodels.requests.GenerateTokenRequest` v3 @kind object) @signature `Lcom/dmoney/security/impl/RandomService;.GenerateToken:(Lcom/dmoney/security/model/servicemodels/requests/GenerateTokenRequest;)Lcom/dmoney/security/model/servicemodels/responses/GenerateTokenResponse;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2c2124.  if v3 == 0 then goto L2c21b8;
  #L2c2128.  v0:= v3.`com.dmoney.security.model.servicemodels.requests.GenerateTokenRequest.NumberOfBytes` @type ^`int`;
  #L2c212c.  if v0 <= 0 then goto L2c21a8;
  #L2c2130.  v0:= v3.`com.dmoney.security.model.servicemodels.requests.GenerateTokenRequest.ResultFormat` @type ^`com.dmoney.security.model.servicemodels.enums.ByteArrayStringFormat` @kind object;
  #L2c2134.  v1:= 0I;
  #L2c2136.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Enum;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2c213c.  v0:= temp;
  #L2c213e.  if v0 != 0 then goto L2c2198;
  #L2c2142.  v0:= v3.`com.dmoney.security.model.servicemodels.requests.GenerateTokenRequest.ResultFormat` @type ^`com.dmoney.security.model.servicemodels.enums.ByteArrayStringFormat` @kind object;
  #L2c2146.  v1:= `@@com.dmoney.security.model.servicemodels.enums.ByteArrayStringFormat.Hex` @type ^`com.dmoney.security.model.servicemodels.enums.ByteArrayStringFormat` @kind object;
  #L2c214a.  if v0 == v1 then goto L2c2168;
  #L2c214e.  v1:= `@@com.dmoney.security.model.servicemodels.enums.ByteArrayStringFormat.Base64` @type ^`com.dmoney.security.model.servicemodels.enums.ByteArrayStringFormat` @kind object;
  #L2c2152.  if v0 != v1 then goto L2c2158;
  #L2c2156.  goto L2c2168;
  #L2c2158.  v3:= new `java.lang.IllegalArgumentException`;
  #L2c215c.  v0:= "IllegalResultFormat" @kind object;
  #L2c2160.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c2166.  throw v3;
  #L2c2168.  v0:= new `com.dmoney.security.model.servicemodels.responses.GenerateTokenResponse`;
  #L2c216c.  call `<init>`(v0) @signature `Lcom/dmoney/security/model/servicemodels/responses/GenerateTokenResponse;.<init>:()V` @kind direct;
  #L2c2172.  v1:= v2.`com.dmoney.security.impl.RandomService.a` @type ^`com.dmoney.security.operation.interfaces.IOperator` @kind object;
  #L2c2176.  call temp:= `GetRandGenerator`(v1) @signature `Lcom/dmoney/security/operation/interfaces/IOperator;.GetRandGenerator:()Lcom/dmoney/security/operation/interfaces/IRandGenerator;` @kind interface;
  #L2c217c.  v1:= temp @kind object;
  #L2c217e.  v3:= v3.`com.dmoney.security.model.servicemodels.requests.GenerateTokenRequest.NumberOfBytes` @type ^`int`;
  #L2c2182.  call temp:= `GenerateToken`(v1, v3) @signature `Lcom/dmoney/security/operation/interfaces/IRandGenerator;.GenerateToken:(I)[B` @kind interface;
  #L2c2188.  v3:= temp @kind object;
  #L2c218a.  call temp:= `toHexString`(v3) @signature `Lorg/spongycastle/util/encoders/Hex;.toHexString:([B)Ljava/lang/String;` @kind static;
  #L2c2190.  v3:= temp @kind object;
  #L2c2192.  v0.`com.dmoney.security.model.servicemodels.responses.GenerateTokenResponse.RandomString` @type ^`java.lang.String` := v3 @kind object;
  #L2c2196.  return v0 @kind object;
  #L2c2198.  v3:= new `java.lang.IllegalArgumentException`;
  #L2c219c.  v0:= "ResultFormat" @kind object;
  #L2c21a0.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c21a6.  throw v3;
  #L2c21a8.  v3:= new `java.lang.IllegalArgumentException`;
  #L2c21ac.  v0:= "NumberOfBytes" @kind object;
  #L2c21b0.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c21b6.  throw v3;
  #L2c21b8.  v3:= new `java.lang.IllegalArgumentException`;
  #L2c21bc.  v0:= "request" @kind object;
  #L2c21c0.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c21c6.  throw v3;
}
