record `com.dmoney.security.impl.CryptoService` @kind class @AccessFlag PUBLIC extends `com.dmoney.security.interfaces.ICryptoService` @kind interface {
  `com.dmoney.security.operation.interfaces.IOperator` `com.dmoney.security.impl.CryptoService.a` @AccessFlag ;
}
procedure `void` `<init>`(`com.dmoney.security.impl.CryptoService` v1 @kind this) @signature `Lcom/dmoney/security/impl/CryptoService;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2c12e8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c12ee.  call temp:= `GetOperator`() @signature `Lcom/dmoney/security/operation/factory/OperatorFactory;.GetOperator:()Lcom/dmoney/security/operation/interfaces/IOperator;` @kind static;
  #L2c12f4.  v0:= temp @kind object;
  #L2c12f6.  v1.`com.dmoney.security.impl.CryptoService.a` @type ^`com.dmoney.security.operation.interfaces.IOperator` := v0 @kind object;
  #L2c12fa.  return @kind void;
}
procedure `void` `<init>`(`com.dmoney.security.impl.CryptoService` v0 @kind this, `com.dmoney.security.operation.interfaces.IOperator` v1 @kind object) @signature `Lcom/dmoney/security/impl/CryptoService;.<init>:(Lcom/dmoney/security/operation/interfaces/IOperator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2c130c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c1312.  v0.`com.dmoney.security.impl.CryptoService.a` @type ^`com.dmoney.security.operation.interfaces.IOperator` := v1 @kind object;
  #L2c1316.  return @kind void;
}
procedure `com.dmoney.security.model.servicemodels.responses.CreateDigitalSignatureResponse` `CreateDigitalSignature`(`com.dmoney.security.impl.CryptoService` v5 @kind this, `com.dmoney.security.model.servicemodels.requests.CreateDigitalSignatureRequest` v6 @kind object) @signature `Lcom/dmoney/security/impl/CryptoService;.CreateDigitalSignature:(Lcom/dmoney/security/model/servicemodels/requests/CreateDigitalSignatureRequest;)Lcom/dmoney/security/model/servicemodels/responses/CreateDigitalSignatureResponse;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2c0de0.  if v6 == 0 then goto L2c0e0a;
  #L2c0de4.  call temp:= `getData`(v6) @signature `Lcom/dmoney/security/model/servicemodels/requests/CreateDigitalSignatureRequest;.getData:()Ljava/lang/String;` @kind virtual;
  #L2c0dea.  v0:= temp @kind object;
  #L2c0dec.  if v0 == 0 then goto L2c0e0a;
  #L2c0df0.  call temp:= `getWrappedKey`(v6) @signature `Lcom/dmoney/security/model/servicemodels/requests/CreateDigitalSignatureRequest;.getWrappedKey:()Ljava/lang/String;` @kind virtual;
  #L2c0df6.  v0:= temp @kind object;
  #L2c0df8.  if v0 == 0 then goto L2c0e0a;
  #L2c0dfc.  call temp:= `getPassword`(v6) @signature `Lcom/dmoney/security/model/servicemodels/requests/CreateDigitalSignatureRequest;.getPassword:()Ljava/lang/String;` @kind virtual;
  #L2c0e02.  v0:= temp @kind object;
  #L2c0e04.  if v0 == 0 then goto L2c0e0a;
  #L2c0e08.  goto L2c0e22;
  #L2c0e0a.  v0:= new `java.lang.IllegalArgumentException`;
  #L2c0e0e.  v1:= "Invalid request model." @kind object;
  #L2c0e12.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c0e18.  throw v0;
  #L2c0e1a.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L2c0e1c.  call `printStackTrace`(v0) @signature `Ljava/lang/IllegalArgumentException;.printStackTrace:()V` @kind virtual;
  #L2c0e22.  v0:= new `com.dmoney.security.model.servicemodels.responses.CreateDigitalSignatureResponse`;
  #L2c0e26.  call `<init>`(v0) @signature `Lcom/dmoney/security/model/servicemodels/responses/CreateDigitalSignatureResponse;.<init>:()V` @kind direct;
  #L2c0e2c.  call temp:= `GetOperator`() @signature `Lcom/dmoney/security/operation/factory/OperatorFactory;.GetOperator:()Lcom/dmoney/security/operation/interfaces/IOperator;` @kind static;
  #L2c0e32.  v1:= temp @kind object;
  #L2c0e34.  call temp:= `GetKeyWrapper`(v1) @signature `Lcom/dmoney/security/operation/interfaces/IOperator;.GetKeyWrapper:()Lcom/dmoney/security/operation/interfaces/IKeyWrapper;` @kind interface;
  #L2c0e3a.  v1:= temp @kind object;
  #L2c0e3c.  call temp:= `getPassword`(v6) @signature `Lcom/dmoney/security/model/servicemodels/requests/CreateDigitalSignatureRequest;.getPassword:()Ljava/lang/String;` @kind virtual;
  #L2c0e42.  v2:= temp @kind object;
  #L2c0e44.  call temp:= `getWrappedKey`(v6) @signature `Lcom/dmoney/security/model/servicemodels/requests/CreateDigitalSignatureRequest;.getWrappedKey:()Ljava/lang/String;` @kind virtual;
  #L2c0e4a.  v3:= temp @kind object;
  #L2c0e4c.  v4:= 2I;
  #L2c0e4e.  call temp:= `decode`(v3, v4) @signature `Landroid/util/Base64;.decode:(Ljava/lang/String;I)[B` @kind static;
  #L2c0e54.  v3:= temp @kind object;
  #L2c0e56.  call temp:= `UnWrapKey`(v1, v2, v3) @signature `Lcom/dmoney/security/operation/interfaces/IKeyWrapper;.UnWrapKey:(Ljava/lang/String;[B)[B` @kind interface;
  #L2c0e5c.  v1:= temp @kind object;
  #L2c0e5e.  v2:= v5.`com.dmoney.security.impl.CryptoService.a` @type ^`com.dmoney.security.operation.interfaces.IOperator` @kind object;
  #L2c0e62.  call temp:= `GetAsymmetricOperation`(v2) @signature `Lcom/dmoney/security/operation/interfaces/IOperator;.GetAsymmetricOperation:()Lcom/dmoney/security/operation/interfaces/IAsymmetricOperation;` @kind interface;
  #L2c0e68.  v2:= temp @kind object;
  #L2c0e6a.  call temp:= `getData`(v6) @signature `Lcom/dmoney/security/model/servicemodels/requests/CreateDigitalSignatureRequest;.getData:()Ljava/lang/String;` @kind virtual;
  #L2c0e70.  v6:= temp @kind object;
  #L2c0e72.  call temp:= `getBytes`(v6) @signature `Ljava/lang/String;.getBytes:()[B` @kind virtual;
  #L2c0e78.  v6:= temp @kind object;
  #L2c0e7a.  call temp:= `Sign`(v2, v6, v1) @signature `Lcom/dmoney/security/operation/interfaces/IAsymmetricOperation;.Sign:([B[B)[B` @kind interface;
  #L2c0e80.  v6:= temp @kind object;
  #L2c0e82.  call temp:= `encodeToString`(v6, v4) @signature `Landroid/util/Base64;.encodeToString:([BI)Ljava/lang/String;` @kind static;
  #L2c0e88.  v6:= temp @kind object;
  #L2c0e8a.  call `setDigitalSignature`(v0, v6) @signature `Lcom/dmoney/security/model/servicemodels/responses/CreateDigitalSignatureResponse;.setDigitalSignature:(Ljava/lang/String;)V` @kind virtual;
  #L2c0e90.  return v0 @kind object;
  catch `java.lang.IllegalArgumentException` @[L2c0e0a..L2c0e1a] goto L2c0e1a;
}
procedure `com.dmoney.security.model.servicemodels.responses.CustomDecrypttWithSymetricKeyResponse` `DecryptWithSymetricKey`(`com.dmoney.security.impl.CryptoService` v9 @kind this, `com.dmoney.security.model.servicemodels.requests.CustomDecryptWithSymetricKeyRequest` v10 @kind object) @signature `Lcom/dmoney/security/impl/CryptoService;.DecryptWithSymetricKey:(Lcom/dmoney/security/model/servicemodels/requests/CustomDecryptWithSymetricKeyRequest;)Lcom/dmoney/security/model/servicemodels/responses/CustomDecrypttWithSymetricKeyResponse;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2c0eb4.  v0:= "CUSTOM:EncSym" @kind object;
  #L2c0eb8.  v1:= "public CustomDecrypttWithSymetricKeyResponse DecryptWithSymetricKey(CustomDecryptWithSymetricKeyRequest request)" @kind object;
  #L2c0ebc.  call temp:= `v`(v0, v1) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2c0ec2.  if v10 == 0 then goto L2c0fa2;
  #L2c0ec6.  call temp:= `getEncryptedData`(v10) @signature `Lcom/dmoney/security/model/servicemodels/requests/DecryptWithSymetricKeyRequest;.getEncryptedData:()Ljava/lang/String;` @kind virtual;
  #L2c0ecc.  v1:= temp @kind object;
  #L2c0ece.  if v1 == 0 then goto L2c0f92;
  #L2c0ed2.  call temp:= `getSecretKey`(v10) @signature `Lcom/dmoney/security/model/servicemodels/requests/DecryptWithSymetricKeyRequest;.getSecretKey:()Ljava/lang/String;` @kind virtual;
  #L2c0ed8.  v1:= temp @kind object;
  #L2c0eda.  if v1 == 0 then goto L2c0f82;
  #L2c0ede.  call temp:= `getSecretKey`(v10) @signature `Lcom/dmoney/security/model/servicemodels/requests/DecryptWithSymetricKeyRequest;.getSecretKey:()Ljava/lang/String;` @kind virtual;
  #L2c0ee4.  v1:= temp @kind object;
  #L2c0ee6.  call temp:= `trim`(v1) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L2c0eec.  v1:= temp @kind object;
  #L2c0eee.  v2:= "" @kind object;
  #L2c0ef2.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2c0ef8.  v1:= temp;
  #L2c0efa.  if v1 != 0 then goto L2c0f82;
  #L2c0efe.  v1:= new `com.dmoney.security.model.servicemodels.responses.CustomDecrypttWithSymetricKeyResponse`;
  #L2c0f02.  call `<init>`(v1) @signature `Lcom/dmoney/security/model/servicemodels/responses/CustomDecrypttWithSymetricKeyResponse;.<init>:()V` @kind direct;
  #L2c0f08.  v2:= v9.`com.dmoney.security.impl.CryptoService.a` @type ^`com.dmoney.security.operation.interfaces.IOperator` @kind object;
  #L2c0f0c.  call temp:= `GetSymmetricOperation`(v2) @signature `Lcom/dmoney/security/operation/interfaces/IOperator;.GetSymmetricOperation:()Lcom/dmoney/security/operation/interfaces/ISymmetricOperation;` @kind interface;
  #L2c0f12.  v3:= temp @kind object;
  #L2c0f14.  call temp:= `getEncryptedData`(v10) @signature `Lcom/dmoney/security/model/servicemodels/requests/DecryptWithSymetricKeyRequest;.getEncryptedData:()Ljava/lang/String;` @kind virtual;
  #L2c0f1a.  v2:= temp @kind object;
  #L2c0f1c.  v4:= v10.`com.dmoney.security.model.servicemodels.requests.CustomDecryptWithSymetricKeyRequest.EncryptedDataFormat` @type ^`com.dmoney.security.model.servicemodels.enums.ByteArrayStringFormat` @kind object;
  #L2c0f20.  call temp:= `ToByteArray`(v2, v4) @signature `Lcom/dmoney/security/model/utils/ByteArrayUtils;.ToByteArray:(Ljava/lang/String;Lcom/dmoney/security/model/servicemodels/enums/ByteArrayStringFormat;)[B` @kind static;
  #L2c0f26.  v4:= temp @kind object;
  #L2c0f28.  call temp:= `getSecretKey`(v10) @signature `Lcom/dmoney/security/model/servicemodels/requests/DecryptWithSymetricKeyRequest;.getSecretKey:()Ljava/lang/String;` @kind virtual;
  #L2c0f2e.  v2:= temp @kind object;
  #L2c0f30.  v5:= v10.`com.dmoney.security.model.servicemodels.requests.CustomDecryptWithSymetricKeyRequest.KeyFormat` @type ^`com.dmoney.security.model.servicemodels.enums.ByteArrayStringFormat` @kind object;
  #L2c0f34.  call temp:= `ToByteArray`(v2, v5) @signature `Lcom/dmoney/security/model/utils/ByteArrayUtils;.ToByteArray:(Ljava/lang/String;Lcom/dmoney/security/model/servicemodels/enums/ByteArrayStringFormat;)[B` @kind static;
  #L2c0f3a.  v5:= temp @kind object;
  #L2c0f3c.  v6:= v10.`com.dmoney.security.model.servicemodels.requests.CustomDecryptWithSymetricKeyRequest.KeyAlgo` @type ^`com.dmoney.security.model.servicemodels.enums.SymetricKeyType` @kind object;
  #L2c0f40.  v7:= v10.`com.dmoney.security.model.servicemodels.requests.CustomDecryptWithSymetricKeyRequest.Padding` @type ^`com.dmoney.security.model.servicemodels.enums.SymetricAlgoPaddinStyle` @kind object;
  #L2c0f44.  v8:= v10.`com.dmoney.security.model.servicemodels.requests.CustomDecryptWithSymetricKeyRequest.Mode` @type ^`com.dmoney.security.model.servicemodels.enums.SymetricBlockingMode` @kind object;
  #L2c0f48.  call temp:= `DecryptWithCustom`(v3, v4, v5, v6, v7, v8) @signature `Lcom/dmoney/security/operation/interfaces/ISymmetricOperation;.DecryptWithCustom:([B[BLcom/dmoney/security/model/servicemodels/enums/SymetricKeyType;Lcom/dmoney/security/model/servicemodels/enums/SymetricAlgoPaddinStyle;Lcom/dmoney/security/model/servicemodels/enums/SymetricBlockingMode;)[B` @kind interface;
  #L2c0f4e.  v2:= temp @kind object;
  #L2c0f50.  if v2 == 0 then goto L2c0f72;
  #L2c0f54.  v10:= v10.`com.dmoney.security.model.servicemodels.requests.CustomDecryptWithSymetricKeyRequest.ResultFormat` @type ^`com.dmoney.security.model.servicemodels.enums.ByteArrayStringFormat` @kind object;
  #L2c0f58.  call temp:= `ToFormattedString`(v2, v10) @signature `Lcom/dmoney/security/model/utils/ByteArrayUtils;.ToFormattedString:([BLcom/dmoney/security/model/servicemodels/enums/ByteArrayStringFormat;)Ljava/lang/String;` @kind static;
  #L2c0f5e.  v10:= temp @kind object;
  #L2c0f60.  call `setData`(v1, v10) @signature `Lcom/dmoney/security/model/servicemodels/responses/DecrypttWithSymetricKeyResponse;.setData:(Ljava/lang/String;)V` @kind virtual;
  #L2c0f66.  v10:= "Exiting public CustomEncryptWithSymetricKeyResponse EncryptWithSymetricKey(CustomEncryptWithSymetricKeyRequest request)" @kind object;
  #L2c0f6a.  call temp:= `v`(v0, v10) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2c0f70.  return v1 @kind object;
  #L2c0f72.  v10:= new `java.lang.IllegalStateException`;
  #L2c0f76.  v0:= "Encryption result is null" @kind object;
  #L2c0f7a.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c0f80.  throw v10;
  #L2c0f82.  v10:= new `java.security.InvalidParameterException`;
  #L2c0f86.  v0:= "key" @kind object;
  #L2c0f8a.  call `<init>`(v10, v0) @signature `Ljava/security/InvalidParameterException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c0f90.  throw v10;
  #L2c0f92.  v10:= new `java.security.InvalidParameterException`;
  #L2c0f96.  v0:= "data" @kind object;
  #L2c0f9a.  call `<init>`(v10, v0) @signature `Ljava/security/InvalidParameterException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c0fa0.  throw v10;
  #L2c0fa2.  v10:= new `java.security.InvalidParameterException`;
  #L2c0fa6.  v0:= "request" @kind object;
  #L2c0faa.  call `<init>`(v10, v0) @signature `Ljava/security/InvalidParameterException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c0fb0.  throw v10;
}
procedure `com.dmoney.security.model.servicemodels.responses.DecrypttWithSymetricKeyResponse` `DecryptWithSymetricKey`(`com.dmoney.security.impl.CryptoService` v5 @kind this, `com.dmoney.security.model.servicemodels.requests.DecryptWithSymetricKeyRequest` v6 @kind object) @signature `Lcom/dmoney/security/impl/CryptoService;.DecryptWithSymetricKey:(Lcom/dmoney/security/model/servicemodels/requests/DecryptWithSymetricKeyRequest;)Lcom/dmoney/security/model/servicemodels/responses/DecrypttWithSymetricKeyResponse;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2c10d4.  if v6 == 0 then goto L2c10f2;
  #L2c10d8.  call temp:= `getEncryptedData`(v6) @signature `Lcom/dmoney/security/model/servicemodels/requests/DecryptWithSymetricKeyRequest;.getEncryptedData:()Ljava/lang/String;` @kind virtual;
  #L2c10de.  v0:= temp @kind object;
  #L2c10e0.  if v0 == 0 then goto L2c10f2;
  #L2c10e4.  call temp:= `getSecretKey`(v6) @signature `Lcom/dmoney/security/model/servicemodels/requests/DecryptWithSymetricKeyRequest;.getSecretKey:()Ljava/lang/String;` @kind virtual;
  #L2c10ea.  v0:= temp @kind object;
  #L2c10ec.  if v0 == 0 then goto L2c10f2;
  #L2c10f0.  goto L2c110a;
  #L2c10f2.  v0:= new `java.lang.IllegalArgumentException`;
  #L2c10f6.  v1:= "Invalid request model." @kind object;
  #L2c10fa.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c1100.  throw v0;
  #L2c1102.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L2c1104.  call `printStackTrace`(v0) @signature `Ljava/lang/IllegalArgumentException;.printStackTrace:()V` @kind virtual;
  #L2c110a.  v0:= new `com.dmoney.security.model.servicemodels.responses.DecrypttWithSymetricKeyResponse`;
  #L2c110e.  call `<init>`(v0) @signature `Lcom/dmoney/security/model/servicemodels/responses/DecrypttWithSymetricKeyResponse;.<init>:()V` @kind direct;
  #L2c1114.  v1:= v5.`com.dmoney.security.impl.CryptoService.a` @type ^`com.dmoney.security.operation.interfaces.IOperator` @kind object;
  #L2c1118.  call temp:= `GetSymmetricOperation`(v1) @signature `Lcom/dmoney/security/operation/interfaces/IOperator;.GetSymmetricOperation:()Lcom/dmoney/security/operation/interfaces/ISymmetricOperation;` @kind interface;
  #L2c111e.  v1:= temp @kind object;
  #L2c1120.  v2:= new `java.lang.String`;
  #L2c1124.  call temp:= `getEncryptedData`(v6) @signature `Lcom/dmoney/security/model/servicemodels/requests/DecryptWithSymetricKeyRequest;.getEncryptedData:()Ljava/lang/String;` @kind virtual;
  #L2c112a.  v3:= temp @kind object;
  #L2c112c.  v4:= 2I;
  #L2c112e.  call temp:= `decode`(v3, v4) @signature `Landroid/util/Base64;.decode:(Ljava/lang/String;I)[B` @kind static;
  #L2c1134.  v3:= temp @kind object;
  #L2c1136.  call temp:= `getSecretKey`(v6) @signature `Lcom/dmoney/security/model/servicemodels/requests/DecryptWithSymetricKeyRequest;.getSecretKey:()Ljava/lang/String;` @kind virtual;
  #L2c113c.  v6:= temp @kind object;
  #L2c113e.  call temp:= `decode`(v6, v4) @signature `Landroid/util/Base64;.decode:(Ljava/lang/String;I)[B` @kind static;
  #L2c1144.  v6:= temp @kind object;
  #L2c1146.  call temp:= `Decrypt`(v1, v3, v6) @signature `Lcom/dmoney/security/operation/interfaces/ISymmetricOperation;.Decrypt:([B[B)[B` @kind interface;
  #L2c114c.  v6:= temp @kind object;
  #L2c114e.  call `<init>`(v2, v6) @signature `Ljava/lang/String;.<init>:([B)V` @kind direct;
  #L2c1154.  call `setData`(v0, v2) @signature `Lcom/dmoney/security/model/servicemodels/responses/DecrypttWithSymetricKeyResponse;.setData:(Ljava/lang/String;)V` @kind virtual;
  #L2c115a.  return v0 @kind object;
  catch `java.lang.IllegalArgumentException` @[L2c10f2..L2c1102] goto L2c1102;
}
procedure `com.dmoney.security.model.servicemodels.responses.CustomEncryptWithSymetricKeyResponse` `EncryptWithSymetricKey`(`com.dmoney.security.impl.CryptoService` v9 @kind this, `com.dmoney.security.model.servicemodels.requests.CustomEncryptWithSymetricKeyRequest` v10 @kind object) @signature `Lcom/dmoney/security/impl/CryptoService;.EncryptWithSymetricKey:(Lcom/dmoney/security/model/servicemodels/requests/CustomEncryptWithSymetricKeyRequest;)Lcom/dmoney/security/model/servicemodels/responses/CustomEncryptWithSymetricKeyResponse;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2c0fc4.  v0:= "CUSTOM:EncSym" @kind object;
  #L2c0fc8.  v1:= "Entering public CustomEncryptWithSymetricKeyResponse EncryptWithSymetricKey(CustomEncryptWithSymetricKeyRequest request)" @kind object;
  #L2c0fcc.  call temp:= `v`(v0, v1) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2c0fd2.  if v10 == 0 then goto L2c10b2;
  #L2c0fd6.  call temp:= `getData`(v10) @signature `Lcom/dmoney/security/model/servicemodels/requests/EncryptWithSymetricKeyRequest;.getData:()Ljava/lang/String;` @kind virtual;
  #L2c0fdc.  v1:= temp @kind object;
  #L2c0fde.  if v1 == 0 then goto L2c10a2;
  #L2c0fe2.  call temp:= `getSecretKey`(v10) @signature `Lcom/dmoney/security/model/servicemodels/requests/EncryptWithSymetricKeyRequest;.getSecretKey:()Ljava/lang/String;` @kind virtual;
  #L2c0fe8.  v1:= temp @kind object;
  #L2c0fea.  if v1 == 0 then goto L2c1092;
  #L2c0fee.  call temp:= `getSecretKey`(v10) @signature `Lcom/dmoney/security/model/servicemodels/requests/EncryptWithSymetricKeyRequest;.getSecretKey:()Ljava/lang/String;` @kind virtual;
  #L2c0ff4.  v1:= temp @kind object;
  #L2c0ff6.  call temp:= `trim`(v1) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L2c0ffc.  v1:= temp @kind object;
  #L2c0ffe.  v2:= "" @kind object;
  #L2c1002.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2c1008.  v1:= temp;
  #L2c100a.  if v1 != 0 then goto L2c1092;
  #L2c100e.  v1:= new `com.dmoney.security.model.servicemodels.responses.CustomEncryptWithSymetricKeyResponse`;
  #L2c1012.  call `<init>`(v1) @signature `Lcom/dmoney/security/model/servicemodels/responses/CustomEncryptWithSymetricKeyResponse;.<init>:()V` @kind direct;
  #L2c1018.  v2:= v9.`com.dmoney.security.impl.CryptoService.a` @type ^`com.dmoney.security.operation.interfaces.IOperator` @kind object;
  #L2c101c.  call temp:= `GetSymmetricOperation`(v2) @signature `Lcom/dmoney/security/operation/interfaces/IOperator;.GetSymmetricOperation:()Lcom/dmoney/security/operation/interfaces/ISymmetricOperation;` @kind interface;
  #L2c1022.  v3:= temp @kind object;
  #L2c1024.  call temp:= `getData`(v10) @signature `Lcom/dmoney/security/model/servicemodels/requests/EncryptWithSymetricKeyRequest;.getData:()Ljava/lang/String;` @kind virtual;
  #L2c102a.  v2:= temp @kind object;
  #L2c102c.  v4:= `@@com.dmoney.security.model.servicemodels.enums.ByteArrayStringFormat.PlainText` @type ^`com.dmoney.security.model.servicemodels.enums.ByteArrayStringFormat` @kind object;
  #L2c1030.  call temp:= `ToByteArray`(v2, v4) @signature `Lcom/dmoney/security/model/utils/ByteArrayUtils;.ToByteArray:(Ljava/lang/String;Lcom/dmoney/security/model/servicemodels/enums/ByteArrayStringFormat;)[B` @kind static;
  #L2c1036.  v4:= temp @kind object;
  #L2c1038.  call temp:= `getSecretKey`(v10) @signature `Lcom/dmoney/security/model/servicemodels/requests/EncryptWithSymetricKeyRequest;.getSecretKey:()Ljava/lang/String;` @kind virtual;
  #L2c103e.  v2:= temp @kind object;
  #L2c1040.  v5:= v10.`com.dmoney.security.model.servicemodels.requests.CustomEncryptWithSymetricKeyRequest.KeyFormat` @type ^`com.dmoney.security.model.servicemodels.enums.ByteArrayStringFormat` @kind object;
  #L2c1044.  call temp:= `ToByteArray`(v2, v5) @signature `Lcom/dmoney/security/model/utils/ByteArrayUtils;.ToByteArray:(Ljava/lang/String;Lcom/dmoney/security/model/servicemodels/enums/ByteArrayStringFormat;)[B` @kind static;
  #L2c104a.  v5:= temp @kind object;
  #L2c104c.  v6:= v10.`com.dmoney.security.model.servicemodels.requests.CustomEncryptWithSymetricKeyRequest.KeyAlgo` @type ^`com.dmoney.security.model.servicemodels.enums.SymetricKeyType` @kind object;
  #L2c1050.  v7:= v10.`com.dmoney.security.model.servicemodels.requests.CustomEncryptWithSymetricKeyRequest.Padding` @type ^`com.dmoney.security.model.servicemodels.enums.SymetricAlgoPaddinStyle` @kind object;
  #L2c1054.  v8:= v10.`com.dmoney.security.model.servicemodels.requests.CustomEncryptWithSymetricKeyRequest.Mode` @type ^`com.dmoney.security.model.servicemodels.enums.SymetricBlockingMode` @kind object;
  #L2c1058.  call temp:= `EncryptWithCustom`(v3, v4, v5, v6, v7, v8) @signature `Lcom/dmoney/security/operation/interfaces/ISymmetricOperation;.EncryptWithCustom:([B[BLcom/dmoney/security/model/servicemodels/enums/SymetricKeyType;Lcom/dmoney/security/model/servicemodels/enums/SymetricAlgoPaddinStyle;Lcom/dmoney/security/model/servicemodels/enums/SymetricBlockingMode;)[B` @kind interface;
  #L2c105e.  v2:= temp @kind object;
  #L2c1060.  if v2 == 0 then goto L2c1082;
  #L2c1064.  v10:= v10.`com.dmoney.security.model.servicemodels.requests.CustomEncryptWithSymetricKeyRequest.ResultFormat` @type ^`com.dmoney.security.model.servicemodels.enums.ByteArrayStringFormat` @kind object;
  #L2c1068.  call temp:= `ToFormattedString`(v2, v10) @signature `Lcom/dmoney/security/model/utils/ByteArrayUtils;.ToFormattedString:([BLcom/dmoney/security/model/servicemodels/enums/ByteArrayStringFormat;)Ljava/lang/String;` @kind static;
  #L2c106e.  v10:= temp @kind object;
  #L2c1070.  call `setEncryptedData`(v1, v10) @signature `Lcom/dmoney/security/model/servicemodels/responses/EncryptWithSymetricKeyResponse;.setEncryptedData:(Ljava/lang/String;)V` @kind virtual;
  #L2c1076.  v10:= "Exiting public CustomEncryptWithSymetricKeyResponse EncryptWithSymetricKey(CustomEncryptWithSymetricKeyRequest request)" @kind object;
  #L2c107a.  call temp:= `v`(v0, v10) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2c1080.  return v1 @kind object;
  #L2c1082.  v10:= new `java.lang.IllegalStateException`;
  #L2c1086.  v0:= "Encryption result is null" @kind object;
  #L2c108a.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c1090.  throw v10;
  #L2c1092.  v10:= new `java.security.InvalidParameterException`;
  #L2c1096.  v0:= "key" @kind object;
  #L2c109a.  call `<init>`(v10, v0) @signature `Ljava/security/InvalidParameterException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c10a0.  throw v10;
  #L2c10a2.  v10:= new `java.security.InvalidParameterException`;
  #L2c10a6.  v0:= "data" @kind object;
  #L2c10aa.  call `<init>`(v10, v0) @signature `Ljava/security/InvalidParameterException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c10b0.  throw v10;
  #L2c10b2.  v10:= new `java.security.InvalidParameterException`;
  #L2c10b6.  v0:= "request" @kind object;
  #L2c10ba.  call `<init>`(v10, v0) @signature `Ljava/security/InvalidParameterException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c10c0.  throw v10;
}
procedure `com.dmoney.security.model.servicemodels.responses.EncryptWithSymetricKeyResponse` `EncryptWithSymetricKey`(`com.dmoney.security.impl.CryptoService` v4 @kind this, `com.dmoney.security.model.servicemodels.requests.EncryptWithSymetricKeyRequest` v5 @kind object) @signature `Lcom/dmoney/security/impl/CryptoService;.EncryptWithSymetricKey:(Lcom/dmoney/security/model/servicemodels/requests/EncryptWithSymetricKeyRequest;)Lcom/dmoney/security/model/servicemodels/responses/EncryptWithSymetricKeyResponse;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2c117c.  if v5 == 0 then goto L2c119a;
  #L2c1180.  call temp:= `getData`(v5) @signature `Lcom/dmoney/security/model/servicemodels/requests/EncryptWithSymetricKeyRequest;.getData:()Ljava/lang/String;` @kind virtual;
  #L2c1186.  v0:= temp @kind object;
  #L2c1188.  if v0 == 0 then goto L2c119a;
  #L2c118c.  call temp:= `getSecretKey`(v5) @signature `Lcom/dmoney/security/model/servicemodels/requests/EncryptWithSymetricKeyRequest;.getSecretKey:()Ljava/lang/String;` @kind virtual;
  #L2c1192.  v0:= temp @kind object;
  #L2c1194.  if v0 == 0 then goto L2c119a;
  #L2c1198.  goto L2c11b2;
  #L2c119a.  v0:= new `java.lang.IllegalArgumentException`;
  #L2c119e.  v1:= "Invalid request model." @kind object;
  #L2c11a2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c11a8.  throw v0;
  #L2c11aa.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L2c11ac.  call `printStackTrace`(v0) @signature `Ljava/lang/IllegalArgumentException;.printStackTrace:()V` @kind virtual;
  #L2c11b2.  v0:= new `com.dmoney.security.model.servicemodels.responses.EncryptWithSymetricKeyResponse`;
  #L2c11b6.  call `<init>`(v0) @signature `Lcom/dmoney/security/model/servicemodels/responses/EncryptWithSymetricKeyResponse;.<init>:()V` @kind direct;
  #L2c11bc.  v1:= v4.`com.dmoney.security.impl.CryptoService.a` @type ^`com.dmoney.security.operation.interfaces.IOperator` @kind object;
  #L2c11c0.  call temp:= `GetSymmetricOperation`(v1) @signature `Lcom/dmoney/security/operation/interfaces/IOperator;.GetSymmetricOperation:()Lcom/dmoney/security/operation/interfaces/ISymmetricOperation;` @kind interface;
  #L2c11c6.  v1:= temp @kind object;
  #L2c11c8.  call temp:= `getData`(v5) @signature `Lcom/dmoney/security/model/servicemodels/requests/EncryptWithSymetricKeyRequest;.getData:()Ljava/lang/String;` @kind virtual;
  #L2c11ce.  v2:= temp @kind object;
  #L2c11d0.  call temp:= `getBytes`(v2) @signature `Ljava/lang/String;.getBytes:()[B` @kind virtual;
  #L2c11d6.  v2:= temp @kind object;
  #L2c11d8.  call temp:= `getSecretKey`(v5) @signature `Lcom/dmoney/security/model/servicemodels/requests/EncryptWithSymetricKeyRequest;.getSecretKey:()Ljava/lang/String;` @kind virtual;
  #L2c11de.  v5:= temp @kind object;
  #L2c11e0.  v3:= 2I;
  #L2c11e2.  call temp:= `decode`(v5, v3) @signature `Landroid/util/Base64;.decode:(Ljava/lang/String;I)[B` @kind static;
  #L2c11e8.  v5:= temp @kind object;
  #L2c11ea.  call temp:= `Encrypt`(v1, v2, v5) @signature `Lcom/dmoney/security/operation/interfaces/ISymmetricOperation;.Encrypt:([B[B)[B` @kind interface;
  #L2c11f0.  v5:= temp @kind object;
  #L2c11f2.  call temp:= `encodeToString`(v5, v3) @signature `Landroid/util/Base64;.encodeToString:([BI)Ljava/lang/String;` @kind static;
  #L2c11f8.  v5:= temp @kind object;
  #L2c11fa.  call `setEncryptedData`(v0, v5) @signature `Lcom/dmoney/security/model/servicemodels/responses/EncryptWithSymetricKeyResponse;.setEncryptedData:(Ljava/lang/String;)V` @kind virtual;
  #L2c1200.  return v0 @kind object;
  catch `java.lang.IllegalArgumentException` @[L2c119a..L2c11aa] goto L2c11aa;
}
procedure `com.dmoney.security.model.servicemodels.responses.VerifyDigitalSignatureResponse` `VefifyDigitalSignature`(`com.dmoney.security.impl.CryptoService` v5 @kind this, `com.dmoney.security.model.servicemodels.requests.VerifyDigitalSignatureRequest` v6 @kind object) @signature `Lcom/dmoney/security/impl/CryptoService;.VefifyDigitalSignature:(Lcom/dmoney/security/model/servicemodels/requests/VerifyDigitalSignatureRequest;)Lcom/dmoney/security/model/servicemodels/responses/VerifyDigitalSignatureResponse;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2c1224.  if v6 == 0 then goto L2c124e;
  #L2c1228.  call temp:= `getData`(v6) @signature `Lcom/dmoney/security/model/servicemodels/requests/VerifyDigitalSignatureRequest;.getData:()Ljava/lang/String;` @kind virtual;
  #L2c122e.  v0:= temp @kind object;
  #L2c1230.  if v0 == 0 then goto L2c124e;
  #L2c1234.  call temp:= `getDigitalSignature`(v6) @signature `Lcom/dmoney/security/model/servicemodels/requests/VerifyDigitalSignatureRequest;.getDigitalSignature:()Ljava/lang/String;` @kind virtual;
  #L2c123a.  v0:= temp @kind object;
  #L2c123c.  if v0 == 0 then goto L2c124e;
  #L2c1240.  call temp:= `getPublicKey`(v6) @signature `Lcom/dmoney/security/model/servicemodels/requests/VerifyDigitalSignatureRequest;.getPublicKey:()Ljava/lang/String;` @kind virtual;
  #L2c1246.  v0:= temp @kind object;
  #L2c1248.  if v0 == 0 then goto L2c124e;
  #L2c124c.  goto L2c1266;
  #L2c124e.  v0:= new `java.lang.IllegalArgumentException`;
  #L2c1252.  v1:= "Invalid request model." @kind object;
  #L2c1256.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2c125c.  throw v0;
  #L2c125e.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L2c1260.  call `printStackTrace`(v0) @signature `Ljava/lang/IllegalArgumentException;.printStackTrace:()V` @kind virtual;
  #L2c1266.  v0:= new `com.dmoney.security.model.servicemodels.responses.VerifyDigitalSignatureResponse`;
  #L2c126a.  call `<init>`(v0) @signature `Lcom/dmoney/security/model/servicemodels/responses/VerifyDigitalSignatureResponse;.<init>:()V` @kind direct;
  #L2c1270.  v1:= v5.`com.dmoney.security.impl.CryptoService.a` @type ^`com.dmoney.security.operation.interfaces.IOperator` @kind object;
  #L2c1274.  call temp:= `GetAsymmetricOperation`(v1) @signature `Lcom/dmoney/security/operation/interfaces/IOperator;.GetAsymmetricOperation:()Lcom/dmoney/security/operation/interfaces/IAsymmetricOperation;` @kind interface;
  #L2c127a.  v1:= temp @kind object;
  #L2c127c.  call temp:= `getData`(v6) @signature `Lcom/dmoney/security/model/servicemodels/requests/VerifyDigitalSignatureRequest;.getData:()Ljava/lang/String;` @kind virtual;
  #L2c1282.  v2:= temp @kind object;
  #L2c1284.  call temp:= `getBytes`(v2) @signature `Ljava/lang/String;.getBytes:()[B` @kind virtual;
  #L2c128a.  v2:= temp @kind object;
  #L2c128c.  call temp:= `getDigitalSignature`(v6) @signature `Lcom/dmoney/security/model/servicemodels/requests/VerifyDigitalSignatureRequest;.getDigitalSignature:()Ljava/lang/String;` @kind virtual;
  #L2c1292.  v3:= temp @kind object;
  #L2c1294.  v4:= 2I;
  #L2c1296.  call temp:= `decode`(v3, v4) @signature `Landroid/util/Base64;.decode:(Ljava/lang/String;I)[B` @kind static;
  #L2c129c.  v3:= temp @kind object;
  #L2c129e.  call temp:= `getPublicKey`(v6) @signature `Lcom/dmoney/security/model/servicemodels/requests/VerifyDigitalSignatureRequest;.getPublicKey:()Ljava/lang/String;` @kind virtual;
  #L2c12a4.  v6:= temp @kind object;
  #L2c12a6.  call temp:= `decode`(v6, v4) @signature `Landroid/util/Base64;.decode:(Ljava/lang/String;I)[B` @kind static;
  #L2c12ac.  v6:= temp @kind object;
  #L2c12ae.  call temp:= `Verify`(v1, v2, v3, v6) @signature `Lcom/dmoney/security/operation/interfaces/IAsymmetricOperation;.Verify:([B[B[B)Z` @kind interface;
  #L2c12b4.  v6:= temp;
  #L2c12b6.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L2c12bc.  v6:= temp @kind object;
  #L2c12be.  call `setSuccess`(v0, v6) @signature `Lcom/dmoney/security/model/servicemodels/responses/VerifyDigitalSignatureResponse;.setSuccess:(Ljava/lang/Boolean;)V` @kind virtual;
  #L2c12c4.  return v0 @kind object;
  catch `java.lang.IllegalArgumentException` @[L2c124e..L2c125e] goto L2c125e;
}
