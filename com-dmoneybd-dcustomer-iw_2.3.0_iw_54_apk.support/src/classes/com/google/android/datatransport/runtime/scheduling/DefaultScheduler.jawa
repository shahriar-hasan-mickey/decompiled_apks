record `com.google.android.datatransport.runtime.scheduling.DefaultScheduler` @kind class @AccessFlag PUBLIC extends `com.google.android.datatransport.runtime.scheduling.Scheduler` @kind interface {
  `com.google.android.datatransport.runtime.backends.BackendRegistry` `com.google.android.datatransport.runtime.scheduling.DefaultScheduler.backendRegistry` @AccessFlag PRIVATE_FINAL;
  `com.google.android.datatransport.runtime.scheduling.persistence.EventStore` `com.google.android.datatransport.runtime.scheduling.DefaultScheduler.eventStore` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.Executor` `com.google.android.datatransport.runtime.scheduling.DefaultScheduler.executor` @AccessFlag PRIVATE_FINAL;
  `com.google.android.datatransport.runtime.synchronization.SynchronizationGuard` `com.google.android.datatransport.runtime.scheduling.DefaultScheduler.guard` @AccessFlag PRIVATE_FINAL;
  `com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler` `com.google.android.datatransport.runtime.scheduling.DefaultScheduler.workScheduler` @AccessFlag PRIVATE_FINAL;
}
global `java.util.logging.Logger` `@@com.google.android.datatransport.runtime.scheduling.DefaultScheduler.LOGGER` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/datatransport/runtime/scheduling/DefaultScheduler;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3adc54.  v0:= constclass @type ^`com.google.android.datatransport.runtime.TransportRuntime` @kind object;
  #L3adc58.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3adc5e.  v0:= temp @kind object;
  #L3adc60.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L3adc66.  v0:= temp @kind object;
  #L3adc68.  `@@com.google.android.datatransport.runtime.scheduling.DefaultScheduler.LOGGER` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L3adc6c.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.datatransport.runtime.scheduling.DefaultScheduler` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object, `com.google.android.datatransport.runtime.backends.BackendRegistry` v2 @kind object, `com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler` v3 @kind object, `com.google.android.datatransport.runtime.scheduling.persistence.EventStore` v4 @kind object, `com.google.android.datatransport.runtime.synchronization.SynchronizationGuard` v5 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/DefaultScheduler;.<init>:(Ljava/util/concurrent/Executor;Lcom/google/android/datatransport/runtime/backends/BackendRegistry;Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/WorkScheduler;Lcom/google/android/datatransport/runtime/scheduling/persistence/EventStore;Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3adc80.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3adc86.  v0.`com.google.android.datatransport.runtime.scheduling.DefaultScheduler.executor` @type ^`java.util.concurrent.Executor` := v1 @kind object;
  #L3adc8a.  v0.`com.google.android.datatransport.runtime.scheduling.DefaultScheduler.backendRegistry` @type ^`com.google.android.datatransport.runtime.backends.BackendRegistry` := v2 @kind object;
  #L3adc8e.  v0.`com.google.android.datatransport.runtime.scheduling.DefaultScheduler.workScheduler` @type ^`com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler` := v3 @kind object;
  #L3adc92.  v0.`com.google.android.datatransport.runtime.scheduling.DefaultScheduler.eventStore` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.EventStore` := v4 @kind object;
  #L3adc96.  v0.`com.google.android.datatransport.runtime.scheduling.DefaultScheduler.guard` @type ^`com.google.android.datatransport.runtime.synchronization.SynchronizationGuard` := v5 @kind object;
  #L3adc9a.  return @kind void;
}
procedure `java.lang.Object` `a`(`com.google.android.datatransport.runtime.scheduling.DefaultScheduler` v1 @kind object, `com.google.android.datatransport.runtime.TransportContext` v2 @kind object, `com.google.android.datatransport.runtime.EventInternal` v3 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/DefaultScheduler;.a:(Lcom/google/android/datatransport/runtime/scheduling/DefaultScheduler;Lcom/google/android/datatransport/runtime/TransportContext;Lcom/google/android/datatransport/runtime/EventInternal;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L3adc28.  v0:= v1.`com.google.android.datatransport.runtime.scheduling.DefaultScheduler.eventStore` @type ^`com.google.android.datatransport.runtime.scheduling.persistence.EventStore` @kind object;
  #L3adc2c.  call temp:= `persist`(v0, v2, v3) @signature `Lcom/google/android/datatransport/runtime/scheduling/persistence/EventStore;.persist:(Lcom/google/android/datatransport/runtime/TransportContext;Lcom/google/android/datatransport/runtime/EventInternal;)Lcom/google/android/datatransport/runtime/scheduling/persistence/PersistedEvent;` @kind interface;
  #L3adc32.  v1:= v1.`com.google.android.datatransport.runtime.scheduling.DefaultScheduler.workScheduler` @type ^`com.google.android.datatransport.runtime.scheduling.jobscheduling.WorkScheduler` @kind object;
  #L3adc36.  v3:= 1I;
  #L3adc38.  call `schedule`(v1, v2, v3) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/WorkScheduler;.schedule:(Lcom/google/android/datatransport/runtime/TransportContext;I)V` @kind interface;
  #L3adc3e.  v1:= 0I;
  #L3adc40.  return v1 @kind object;
}
procedure `void` `b`(`com.google.android.datatransport.runtime.scheduling.DefaultScheduler` v2 @kind object, `com.google.android.datatransport.runtime.TransportContext` v3 @kind object, `com.google.android.datatransport.TransportScheduleCallback` v4 @kind object, `com.google.android.datatransport.runtime.EventInternal` v5 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/DefaultScheduler;.b:(Lcom/google/android/datatransport/runtime/scheduling/DefaultScheduler;Lcom/google/android/datatransport/runtime/TransportContext;Lcom/google/android/datatransport/TransportScheduleCallback;Lcom/google/android/datatransport/runtime/EventInternal;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L3adcac.  v0:= v2.`com.google.android.datatransport.runtime.scheduling.DefaultScheduler.backendRegistry` @type ^`com.google.android.datatransport.runtime.backends.BackendRegistry` @kind object;
  #L3adcb0.  call temp:= `getBackendName`(v3) @signature `Lcom/google/android/datatransport/runtime/TransportContext;.getBackendName:()Ljava/lang/String;` @kind virtual;
  #L3adcb6.  v1:= temp @kind object;
  #L3adcb8.  call temp:= `get`(v0, v1) @signature `Lcom/google/android/datatransport/runtime/backends/BackendRegistry;.get:(Ljava/lang/String;)Lcom/google/android/datatransport/runtime/backends/TransportBackend;` @kind interface;
  #L3adcbe.  v0:= temp @kind object;
  #L3adcc0.  if v0 != 0 then goto L3add00;
  #L3adcc4.  v2:= "Transport backend '%s' is not registered" @kind object;
  #L3adcc8.  v5:= 1I;
  #L3adcca.  v5:= new `java.lang.Object`[v5];
  #L3adcce.  v0:= 0I;
  #L3adcd0.  call temp:= `getBackendName`(v3) @signature `Lcom/google/android/datatransport/runtime/TransportContext;.getBackendName:()Ljava/lang/String;` @kind virtual;
  #L3adcd6.  v3:= temp @kind object;
  #L3adcd8.  v5[v0]:= v3 @kind object;
  #L3adcdc.  call temp:= `format`(v2, v5) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3adce2.  v2:= temp @kind object;
  #L3adce4.  v3:= `@@com.google.android.datatransport.runtime.scheduling.DefaultScheduler.LOGGER` @type ^`java.util.logging.Logger` @kind object;
  #L3adce8.  call `warning`(v3, v2) @signature `Ljava/util/logging/Logger;.warning:(Ljava/lang/String;)V` @kind virtual;
  #L3adcee.  v3:= new `java.lang.IllegalArgumentException`;
  #L3adcf2.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3adcf8.  call `onSchedule`(v4, v3) @signature `Lcom/google/android/datatransport/TransportScheduleCallback;.onSchedule:(Ljava/lang/Exception;)V` @kind interface;
  #L3adcfe.  return @kind void;
  #L3add00.  call temp:= `decorate`(v0, v5) @signature `Lcom/google/android/datatransport/runtime/backends/TransportBackend;.decorate:(Lcom/google/android/datatransport/runtime/EventInternal;)Lcom/google/android/datatransport/runtime/EventInternal;` @kind interface;
  #L3add06.  v5:= temp @kind object;
  #L3add08.  v0:= v2.`com.google.android.datatransport.runtime.scheduling.DefaultScheduler.guard` @type ^`com.google.android.datatransport.runtime.synchronization.SynchronizationGuard` @kind object;
  #L3add0c.  call temp:= `lambdaFactory$`(v2, v3, v5) @signature `Lcom/google/android/datatransport/runtime/scheduling/DefaultScheduler$$Lambda$2;.lambdaFactory$:(Lcom/google/android/datatransport/runtime/scheduling/DefaultScheduler;Lcom/google/android/datatransport/runtime/TransportContext;Lcom/google/android/datatransport/runtime/EventInternal;)Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard$CriticalSection;` @kind static;
  #L3add12.  v2:= temp @kind object;
  #L3add14.  call temp:= `runCriticalSection`(v0, v2) @signature `Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard;.runCriticalSection:(Lcom/google/android/datatransport/runtime/synchronization/SynchronizationGuard$CriticalSection;)Ljava/lang/Object;` @kind interface;
  #L3add1a.  v2:= 0I;
  #L3add1c.  call `onSchedule`(v4, v2) @signature `Lcom/google/android/datatransport/TransportScheduleCallback;.onSchedule:(Ljava/lang/Exception;)V` @kind interface;
  #L3add22.  goto L3add60;
  #L3add24.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L3add26.  v3:= `@@com.google.android.datatransport.runtime.scheduling.DefaultScheduler.LOGGER` @type ^`java.util.logging.Logger` @kind object;
  #L3add2a.  v5:= new `java.lang.StringBuilder`;
  #L3add2e.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3add34.  v0:= "Error scheduling event " @kind object;
  #L3add38.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3add3e.  call temp:= `getMessage`(v2) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3add44.  v0:= temp @kind object;
  #L3add46.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3add4c.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3add52.  v5:= temp @kind object;
  #L3add54.  call `warning`(v3, v5) @signature `Ljava/util/logging/Logger;.warning:(Ljava/lang/String;)V` @kind virtual;
  #L3add5a.  call `onSchedule`(v4, v2) @signature `Lcom/google/android/datatransport/TransportScheduleCallback;.onSchedule:(Ljava/lang/Exception;)V` @kind interface;
  #L3add60.  return @kind void;
  catch `java.lang.Exception` @[L3adcac..L3add22] goto L3add24;
}
procedure `void` `schedule`(`com.google.android.datatransport.runtime.scheduling.DefaultScheduler` v1 @kind this, `com.google.android.datatransport.runtime.TransportContext` v2 @kind object, `com.google.android.datatransport.runtime.EventInternal` v3 @kind object, `com.google.android.datatransport.TransportScheduleCallback` v4 @kind object) @signature `Lcom/google/android/datatransport/runtime/scheduling/DefaultScheduler;.schedule:(Lcom/google/android/datatransport/runtime/TransportContext;Lcom/google/android/datatransport/runtime/EventInternal;Lcom/google/android/datatransport/TransportScheduleCallback;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3add84.  v0:= v1.`com.google.android.datatransport.runtime.scheduling.DefaultScheduler.executor` @type ^`java.util.concurrent.Executor` @kind object;
  #L3add88.  call temp:= `lambdaFactory$`(v1, v2, v4, v3) @signature `Lcom/google/android/datatransport/runtime/scheduling/DefaultScheduler$$Lambda$1;.lambdaFactory$:(Lcom/google/android/datatransport/runtime/scheduling/DefaultScheduler;Lcom/google/android/datatransport/runtime/TransportContext;Lcom/google/android/datatransport/TransportScheduleCallback;Lcom/google/android/datatransport/runtime/EventInternal;)Ljava/lang/Runnable;` @kind static;
  #L3add8e.  v2:= temp @kind object;
  #L3add90.  call `execute`(v0, v2) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L3add96.  return @kind void;
}
