record `com.google.mlkit.vision.barcode.BarcodeScannerOptions$Builder` @kind class @AccessFlag PUBLIC {
  `int` `com.google.mlkit.vision.barcode.BarcodeScannerOptions$Builder.zza` @AccessFlag PRIVATE;
  `java.util.concurrent.Executor` `com.google.mlkit.vision.barcode.BarcodeScannerOptions$Builder.zzb` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.mlkit.vision.barcode.BarcodeScannerOptions$Builder` v1 @kind this) @signature `Lcom/google/mlkit/vision/barcode/BarcodeScannerOptions$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4f627c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f6282.  v0:= 0I;
  #L4f6284.  v1.`com.google.mlkit.vision.barcode.BarcodeScannerOptions$Builder.zza` @type ^`int` := v0;
  #L4f6288.  return @kind void;
}
procedure `com.google.mlkit.vision.barcode.BarcodeScannerOptions` `build`(`com.google.mlkit.vision.barcode.BarcodeScannerOptions$Builder` v4 @kind this) @signature `Lcom/google/mlkit/vision/barcode/BarcodeScannerOptions$Builder;.build:()Lcom/google/mlkit/vision/barcode/BarcodeScannerOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4f6204.  v0:= new `com.google.mlkit.vision.barcode.BarcodeScannerOptions`;
  #L4f6208.  v1:= v4.`com.google.mlkit.vision.barcode.BarcodeScannerOptions$Builder.zza` @type ^`int`;
  #L4f620c.  v2:= v4.`com.google.mlkit.vision.barcode.BarcodeScannerOptions$Builder.zzb` @type ^`java.util.concurrent.Executor` @kind object;
  #L4f6210.  v3:= 0I;
  #L4f6212.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/google/mlkit/vision/barcode/BarcodeScannerOptions;.<init>:(ILjava/util/concurrent/Executor;Lcom/google/mlkit/vision/barcode/zzb;)V` @kind direct;
  #L4f6218.  return v0 @kind object;
}
procedure `com.google.mlkit.vision.barcode.BarcodeScannerOptions$Builder` `setBarcodeFormats`(`com.google.mlkit.vision.barcode.BarcodeScannerOptions$Builder` v3 @kind this, `int` v4 , `int`[] v5 @kind object) @signature `Lcom/google/mlkit/vision/barcode/BarcodeScannerOptions$Builder;.setBarcodeFormats:(I[I)Lcom/google/mlkit/vision/barcode/BarcodeScannerOptions$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4f622c.  v3.`com.google.mlkit.vision.barcode.BarcodeScannerOptions$Builder.zza` @type ^`int` := v4;
  #L4f6230.  if v5 == 0 then goto L4f6250;
  #L4f6234.  v4:= length @variable v5;
  #L4f6236.  v0:= 0I;
  #L4f6238.  if v0 >= v4 then goto L4f6250;
  #L4f623c.  v1:= v5[v0];
  #L4f6240.  v2:= v3.`com.google.mlkit.vision.barcode.BarcodeScannerOptions$Builder.zza` @type ^`int`;
  #L4f6244.  v1:= v1 ^| v2 @kind int;
  #L4f6246.  v3.`com.google.mlkit.vision.barcode.BarcodeScannerOptions$Builder.zza` @type ^`int` := v1;
  #L4f624a.  v0:= v0 + 1;
  #L4f624e.  goto L4f6238;
  #L4f6250.  return v3 @kind object;
}
procedure `com.google.mlkit.vision.barcode.BarcodeScannerOptions$Builder` `setExecutor`(`com.google.mlkit.vision.barcode.BarcodeScannerOptions$Builder` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object) @signature `Lcom/google/mlkit/vision/barcode/BarcodeScannerOptions$Builder;.setExecutor:(Ljava/util/concurrent/Executor;)Lcom/google/mlkit/vision/barcode/BarcodeScannerOptions$Builder;` @AccessFlag PUBLIC {
    temp;

  #L4f6264.  v0.`com.google.mlkit.vision.barcode.BarcodeScannerOptions$Builder.zzb` @type ^`java.util.concurrent.Executor` := v1 @kind object;
  #L4f6268.  return v0 @kind object;
}
