record `dagger.android.support.DaggerApplication` @kind class @AccessFlag PUBLIC_ABSTRACT extends `dagger.android.DaggerApplication` @kind class, `dagger.android.support.HasSupportFragmentInjector` @kind interface {
  `dagger.android.DispatchingAndroidInjector` `dagger.android.support.DaggerApplication.f` @AccessFlag ;
}
procedure `void` `<init>`(`dagger.android.support.DaggerApplication` v0 @kind this) @signature `Ldagger/android/support/DaggerApplication;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4f6bb0.  call `<init>`(v0) @signature `Ldagger/android/DaggerApplication;.<init>:()V` @kind direct;
  #L4f6bb6.  return @kind void;
}
procedure `dagger.android.AndroidInjector` `applicationInjector`() @signature `Ldagger/android/support/DaggerApplication;.applicationInjector:()Ldagger/android/AndroidInjector;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `dagger.android.AndroidInjector` `supportFragmentInjector`(`dagger.android.support.DaggerApplication` v1 @kind this) @signature `Ldagger/android/support/DaggerApplication;.supportFragmentInjector:()Ldagger/android/AndroidInjector;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L4f6b7c.  call temp:= `supportFragmentInjector`(v1) @signature `Ldagger/android/support/DaggerApplication;.supportFragmentInjector:()Ldagger/android/DispatchingAndroidInjector;` @kind virtual;
  #L4f6b82.  v0:= temp @kind object;
  #L4f6b84.  return v0 @kind object;
}
procedure `dagger.android.DispatchingAndroidInjector` `supportFragmentInjector`(`dagger.android.support.DaggerApplication` v1 @kind this) @signature `Ldagger/android/support/DaggerApplication;.supportFragmentInjector:()Ldagger/android/DispatchingAndroidInjector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f6b98.  v0:= v1.`dagger.android.support.DaggerApplication.f` @type ^`dagger.android.DispatchingAndroidInjector` @kind object;
  #L4f6b9c.  return v0 @kind object;
}
