record `com.google.android.gms.maps.i.a` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `android.os.IInterface` @kind interface {
}
procedure `e.e.a.b.d.b` `E`() @signature `Lcom/google/android/gms/maps/i/a;.E:()Le/e/a/b/d/b;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `e.e.a.b.d.b` `a`(`float` v0 , `int` v1 , `int` v2 ) @signature `Lcom/google/android/gms/maps/i/a;.a:(FII)Le/e/a/b/d/b;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `e.e.a.b.d.b` `a`(`com.google.android.gms.maps.model.CameraPosition` v0 @kind object) @signature `Lcom/google/android/gms/maps/i/a;.a:(Lcom/google/android/gms/maps/model/CameraPosition;)Le/e/a/b/d/b;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `e.e.a.b.d.b` `a`(`com.google.android.gms.maps.model.LatLng` v0 @kind object, `float` v1 ) @signature `Lcom/google/android/gms/maps/i/a;.a:(Lcom/google/android/gms/maps/model/LatLng;F)Le/e/a/b/d/b;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `e.e.a.b.d.b` `a`(`com.google.android.gms.maps.model.LatLngBounds` v0 @kind object, `int` v1 ) @signature `Lcom/google/android/gms/maps/i/a;.a:(Lcom/google/android/gms/maps/model/LatLngBounds;I)Le/e/a/b/d/b;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `e.e.a.b.d.b` `c`(`float` v0 , `float` v1 ) @signature `Lcom/google/android/gms/maps/i/a;.c:(FF)Le/e/a/b/d/b;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `e.e.a.b.d.b` `e`(`com.google.android.gms.maps.model.LatLng` v0 @kind object) @signature `Lcom/google/android/gms/maps/i/a;.e:(Lcom/google/android/gms/maps/model/LatLng;)Le/e/a/b/d/b;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `e.e.a.b.d.b` `g`(`float` v0 ) @signature `Lcom/google/android/gms/maps/i/a;.g:(F)Le/e/a/b/d/b;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `e.e.a.b.d.b` `i`(`float` v0 ) @signature `Lcom/google/android/gms/maps/i/a;.i:(F)Le/e/a/b/d/b;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `e.e.a.b.d.b` `z`() @signature `Lcom/google/android/gms/maps/i/a;.z:()Le/e/a/b/d/b;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
