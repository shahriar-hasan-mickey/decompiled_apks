record `okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.concurrent.atomic.AtomicBoolean` `okhttp3.internal.publicsuffix.PublicSuffixDatabase.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.CountDownLatch` `okhttp3.internal.publicsuffix.PublicSuffixDatabase.b` @AccessFlag PRIVATE_FINAL;
  `byte`[] `okhttp3.internal.publicsuffix.PublicSuffixDatabase.c` @AccessFlag PRIVATE;
  `byte`[] `okhttp3.internal.publicsuffix.PublicSuffixDatabase.d` @AccessFlag PRIVATE;
}
global `byte`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.internal.publicsuffix.PublicSuffixDatabase` `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.h` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3f0474.  v0:= 1I;
  #L3f0476.  v0:= new `byte`[v0];
  #L3f047a.  v1:= 0I;
  #L3f047c.  v2:= 42I;
  #L3f0480.  v0[v1]:= v2 @kind byte;
  #L3f0484.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.e` @type ^`byte`[] := v0 @kind object;
  #L3f0488.  v0:= new `java.lang.String`[v1];
  #L3f048c.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.f` @type ^`java.lang.String`[] := v0 @kind object;
  #L3f0490.  v0:= "*" @kind object;
  #L3f0494.  temp:= new `java.lang.String`[v0];
  #L3f049a.  v0:= temp @kind object;
  #L3f049c.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.g` @type ^`java.lang.String`[] := v0 @kind object;
  #L3f04a0.  v0:= new `okhttp3.internal.publicsuffix.PublicSuffixDatabase`;
  #L3f04a4.  call `<init>`(v0) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<init>:()V` @kind direct;
  #L3f04aa.  `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.h` @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` := v0 @kind object;
  #L3f04ae.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v2 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3f04c0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f04c6.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L3f04ca.  v1:= 0I;
  #L3f04cc.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:(Z)V` @kind direct;
  #L3f04d2.  v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L3f04d6.  v0:= new `java.util.concurrent.CountDownLatch`;
  #L3f04da.  v1:= 1I;
  #L3f04dc.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/CountDownLatch;.<init>:(I)V` @kind direct;
  #L3f04e2.  v2.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.b` @type ^`java.util.concurrent.CountDownLatch` := v0 @kind object;
  #L3f04e6.  return @kind void;
}
procedure `java.lang.String` `a`(`byte`[] v16 @kind object, `byte`[][] v17 @kind object, `int` v18 ) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.a:([B[[BI)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3f00ac.  v0:= v16 @kind object;
  #L3f00b0.  v1:= v17 @kind object;
  #L3f00b4.  v2:= length @variable v0;
  #L3f00b6.  v3:= 0I;
  #L3f00b8.  v4:= v2;
  #L3f00ba.  v2:= 0I;
  #L3f00bc.  if v2 >= v4 then goto L3f01b6;
  #L3f00c0.  v5:= v2 + v4 @kind int;
  #L3f00c4.  v5:= v5 / 2;
  #L3f00c8.  v6:= 10I;
  #L3f00cc.  v7:= -1I;
  #L3f00ce.  if v5 <= v7 then goto L3f00e0;
  #L3f00d2.  v8:= v0[v5] @kind byte;
  #L3f00d6.  if v8 == v6 then goto L3f00e0;
  #L3f00da.  v5:= v5 + -1;
  #L3f00de.  goto L3f00c8;
  #L3f00e0.  v5:= v5 + 1;
  #L3f00e4.  v8:= 1I;
  #L3f00e6.  v9:= 1I;
  #L3f00e8.  v10:= v5 + v9 @kind int;
  #L3f00ec.  v11:= v0[v10] @kind byte;
  #L3f00f0.  if v11 == v6 then goto L3f00fa;
  #L3f00f4.  v9:= v9 + 1;
  #L3f00f8.  goto L3f00e8;
  #L3f00fa.  v6:= v10 - v5 @kind int;
  #L3f00fe.  v11:= v18;
  #L3f0102.  v9:= 0I;
  #L3f0104.  v12:= 0I;
  #L3f0106.  v13:= 0I;
  #L3f0108.  if v9 == 0 then goto L3f0118;
  #L3f010c.  v9:= 46I;
  #L3f0110.  v9:= 0I;
  #L3f0112.  v14:= 46I;
  #L3f0116.  goto L3f0124;
  #L3f0118.  v14:= v1[v11] @kind object;
  #L3f011c.  v14:= v14[v12] @kind byte;
  #L3f0120.  v14:= v14 ^& 255;
  #L3f0124.  v15:= v5 + v13 @kind int;
  #L3f0128.  v15:= v0[v15] @kind byte;
  #L3f012c.  v15:= v15 ^& 255;
  #L3f0130.  v14:= v14 - v15 @kind int;
  #L3f0132.  if v14 == 0 then goto L3f0138;
  #L3f0136.  goto L3f0158;
  #L3f0138.  v13:= v13 + 1;
  #L3f013c.  v12:= v12 + 1;
  #L3f0140.  if v13 != v6 then goto L3f0146;
  #L3f0144.  goto L3f0158;
  #L3f0146.  v15:= v1[v11] @kind object;
  #L3f014a.  v15:= length @variable v15;
  #L3f014c.  if v15 != v12 then goto L3f0108;
  #L3f0150.  v9:= length @variable v1;
  #L3f0152.  v9:= v9 - v8 @kind int;
  #L3f0154.  if v11 != v9 then goto L3f01ac;
  #L3f0158.  if v14 >= 0 then goto L3f0164;
  #L3f015c.  v5:= v5 + -1;
  #L3f0160.  v4:= v5;
  #L3f0162.  goto L3f00bc;
  #L3f0164.  if v14 <= 0 then goto L3f0170;
  #L3f0168.  v10:= v10 + 1;
  #L3f016c.  v2:= v10;
  #L3f016e.  goto L3f00bc;
  #L3f0170.  v7:= v6 - v13 @kind int;
  #L3f0174.  v8:= v1[v11] @kind object;
  #L3f0178.  v8:= length @variable v8;
  #L3f017a.  v8:= v8 - v12 @kind int;
  #L3f017c.  v11:= v11 + 1;
  #L3f0180.  v9:= length @variable v1;
  #L3f0182.  if v11 >= v9 then goto L3f0190;
  #L3f0186.  v9:= v1[v11] @kind object;
  #L3f018a.  v9:= length @variable v9;
  #L3f018c.  v8:= v8 + v9 @kind int;
  #L3f018e.  goto L3f017c;
  #L3f0190.  if v8 >= v7 then goto L3f0196;
  #L3f0194.  goto L3f015c;
  #L3f0196.  if v8 <= v7 then goto L3f019c;
  #L3f019a.  goto L3f0168;
  #L3f019c.  v1:= new `java.lang.String`;
  #L3f01a0.  v2:= `@@l.f0.c.i` @type ^`java.nio.charset.Charset` @kind object;
  #L3f01a4.  call `<init>`(v1, v0, v5, v6, v2) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L3f01aa.  goto L3f01b8;
  #L3f01ac.  v11:= v11 + 1;
  #L3f01b0.  v9:= 1I;
  #L3f01b2.  v12:= -1I;
  #L3f01b4.  goto L3f0108;
  #L3f01b6.  v1:= 0I;
  #L3f01b8.  return v1 @kind object;
}
procedure `okhttp3.internal.publicsuffix.PublicSuffixDatabase` `a`() @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.a:()Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f045c.  v0:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.h` @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind object;
  #L3f0460.  return v0 @kind object;
}
procedure `java.lang.String`[] `a`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v7 @kind this, `java.lang.String`[] v8 @kind object) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.a:([Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3f0298.  v0:= v7.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L3f029c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L3f02a2.  v0:= temp;
  #L3f02a4.  v1:= 0I;
  #L3f02a6.  v2:= 1I;
  #L3f02a8.  if v0 != 0 then goto L3f02c4;
  #L3f02ac.  v0:= v7.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L3f02b0.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L3f02b6.  v0:= temp;
  #L3f02b8.  if v0 == 0 then goto L3f02c4;
  #L3f02bc.  call `c`(v7) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.c:()V` @kind direct;
  #L3f02c2.  goto L3f02de;
  #L3f02c4.  v0:= v7.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.b` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L3f02c8.  call `await`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.await:()V` @kind virtual;
  #L3f02ce.  goto L3f02de;
  #L3f02d0.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3f02d6.  v0:= temp @kind object;
  #L3f02d8.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L3f02de.  @monitorenter v7
  #L3f02e0.  v0:= v7.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.c` @type ^`byte`[] @kind object;
  #L3f02e4.  if v0 == 0 then goto L3f0416;
  #L3f02e8.  @monitorexit v7
  #L3f02ea.  v0:= length @variable v8;
  #L3f02ec.  v0:= new `byte`[][v0];
  #L3f02f0.  v3:= 0I;
  #L3f02f2.  v4:= length @variable v8;
  #L3f02f4.  if v3 >= v4 then goto L3f0312;
  #L3f02f8.  v4:= v8[v3] @kind object;
  #L3f02fc.  v5:= `@@l.f0.c.i` @type ^`java.nio.charset.Charset` @kind object;
  #L3f0300.  call temp:= `getBytes`(v4, v5) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L3f0306.  v4:= temp @kind object;
  #L3f0308.  v0[v3]:= v4 @kind object;
  #L3f030c.  v3:= v3 + 1;
  #L3f0310.  goto L3f02f2;
  #L3f0312.  v8:= 0I;
  #L3f0314.  v3:= length @variable v0;
  #L3f0316.  v4:= 0I;
  #L3f0318.  if v8 >= v3 then goto L3f0334;
  #L3f031c.  v3:= v7.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.c` @type ^`byte`[] @kind object;
  #L3f0320.  call temp:= `a`(v3, v0, v8) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.a:([B[[BI)Ljava/lang/String;` @kind static;
  #L3f0326.  v3:= temp @kind object;
  #L3f0328.  if v3 == 0 then goto L3f032e;
  #L3f032c.  goto L3f0336;
  #L3f032e.  v8:= v8 + 1;
  #L3f0332.  goto L3f0314;
  #L3f0334.  v3:= v4 @kind object;
  #L3f0336.  v8:= length @variable v0;
  #L3f0338.  if v8 <= v2 then goto L3f0372;
  #L3f033c.  call temp:= `clone`(v0) @signature `[[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L3f0342.  v8:= temp @kind object;
  #L3f0344.  v8:= (`byte`[][]) v8 @kind object;
  #L3f0348.  v5:= 0I;
  #L3f034a.  v6:= length @variable v8;
  #L3f034c.  v6:= v6 - v2 @kind int;
  #L3f034e.  if v5 >= v6 then goto L3f0372;
  #L3f0352.  v6:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.e` @type ^`byte`[] @kind object;
  #L3f0356.  v8[v5]:= v6 @kind object;
  #L3f035a.  v6:= v7.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.c` @type ^`byte`[] @kind object;
  #L3f035e.  call temp:= `a`(v6, v8, v5) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.a:([B[[BI)Ljava/lang/String;` @kind static;
  #L3f0364.  v6:= temp @kind object;
  #L3f0366.  if v6 == 0 then goto L3f036c;
  #L3f036a.  goto L3f0374;
  #L3f036c.  v5:= v5 + 1;
  #L3f0370.  goto L3f034a;
  #L3f0372.  v6:= v4 @kind object;
  #L3f0374.  if v6 == 0 then goto L3f0398;
  #L3f0378.  v8:= length @variable v0;
  #L3f037a.  v8:= v8 - v2 @kind int;
  #L3f037c.  if v1 >= v8 then goto L3f0398;
  #L3f0380.  v8:= v7.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.d` @type ^`byte`[] @kind object;
  #L3f0384.  call temp:= `a`(v8, v0, v1) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.a:([B[[BI)Ljava/lang/String;` @kind static;
  #L3f038a.  v8:= temp @kind object;
  #L3f038c.  if v8 == 0 then goto L3f0392;
  #L3f0390.  goto L3f039a;
  #L3f0392.  v1:= v1 + 1;
  #L3f0396.  goto L3f0378;
  #L3f0398.  v8:= v4 @kind object;
  #L3f039a.  if v8 == 0 then goto L3f03ce;
  #L3f039e.  v0:= new `java.lang.StringBuilder`;
  #L3f03a2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f03a8.  v1:= "!" @kind object;
  #L3f03ac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f03b2.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f03b8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f03be.  v8:= temp @kind object;
  #L3f03c0.  v0:= "\\." @kind object;
  #L3f03c4.  call temp:= `split`(v8, v0) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L3f03ca.  v8:= temp @kind object;
  #L3f03cc.  return v8 @kind object;
  #L3f03ce.  if v3 != 0 then goto L3f03dc;
  #L3f03d2.  if v6 != 0 then goto L3f03dc;
  #L3f03d6.  v8:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.g` @type ^`java.lang.String`[] @kind object;
  #L3f03da.  return v8 @kind object;
  #L3f03dc.  if v3 == 0 then goto L3f03ee;
  #L3f03e0.  v8:= "\\." @kind object;
  #L3f03e4.  call temp:= `split`(v3, v8) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L3f03ea.  v8:= temp @kind object;
  #L3f03ec.  goto L3f03f2;
  #L3f03ee.  v8:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.f` @type ^`java.lang.String`[] @kind object;
  #L3f03f2.  if v6 == 0 then goto L3f0404;
  #L3f03f6.  v0:= "\\." @kind object;
  #L3f03fa.  call temp:= `split`(v6, v0) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L3f0400.  v0:= temp @kind object;
  #L3f0402.  goto L3f0408;
  #L3f0404.  v0:= `@@okhttp3.internal.publicsuffix.PublicSuffixDatabase.f` @type ^`java.lang.String`[] @kind object;
  #L3f0408.  v1:= length @variable v8;
  #L3f040a.  v2:= length @variable v0;
  #L3f040c.  if v1 <= v2 then goto L3f0412;
  #L3f0410.  goto L3f0414;
  #L3f0412.  v8:= v0 @kind object;
  #L3f0414.  return v8 @kind object;
  #L3f0416.  v8:= new `java.lang.IllegalStateException`;
  #L3f041a.  v0:= "Unable to load publicsuffixes.gz resource from the classpath." @kind object;
  #L3f041e.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f0424.  throw v8;
  #L3f0426.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f0428.  @monitorexit v7
  #L3f042a.  throw v8;
  catch `java.lang.InterruptedException` @[L3f02c4..L3f02ce] goto L3f02d0;
  catch `java.lang.Throwable` @[L3f02e0..L3f02ea] goto L3f0426;
  catch `java.lang.Throwable` @[L3f0416..L3f042a] goto L3f0426;
}
procedure `void` `b`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v3 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3f04f8.  v0:= constclass @type ^`okhttp3.internal.publicsuffix.PublicSuffixDatabase` @kind object;
  #L3f04fc.  v1:= "publicsuffixes.gz" @kind object;
  #L3f0500.  call temp:= `getResourceAsStream`(v0, v1) @signature `Ljava/lang/Class;.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;` @kind virtual;
  #L3f0506.  v0:= temp @kind object;
  #L3f0508.  if v0 != 0 then goto L3f050e;
  #L3f050c.  return @kind void;
  #L3f050e.  v1:= new `m.j`;
  #L3f0512.  call temp:= `a`(v0) @signature `Lm/l;.a:(Ljava/io/InputStream;)Lm/s;` @kind static;
  #L3f0518.  v0:= temp @kind object;
  #L3f051a.  call `<init>`(v1, v0) @signature `Lm/j;.<init>:(Lm/s;)V` @kind direct;
  #L3f0520.  call temp:= `a`(v1) @signature `Lm/l;.a:(Lm/s;)Lm/e;` @kind static;
  #L3f0526.  v0:= temp @kind object;
  #L3f0528.  call temp:= `readInt`(v0) @signature `Lm/e;.readInt:()I` @kind interface;
  #L3f052e.  v1:= temp;
  #L3f0530.  v1:= new `byte`[v1];
  #L3f0534.  call `readFully`(v0, v1) @signature `Lm/e;.readFully:([B)V` @kind interface;
  #L3f053a.  call temp:= `readInt`(v0) @signature `Lm/e;.readInt:()I` @kind interface;
  #L3f0540.  v2:= temp;
  #L3f0542.  v2:= new `byte`[v2];
  #L3f0546.  call `readFully`(v0, v2) @signature `Lm/e;.readFully:([B)V` @kind interface;
  #L3f054c.  call `a`(v0) @signature `Ll/f0/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L3f0552.  @monitorenter v3
  #L3f0554.  v3.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.c` @type ^`byte`[] := v1 @kind object;
  #L3f0558.  v3.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.d` @type ^`byte`[] := v2 @kind object;
  #L3f055c.  @monitorexit v3
  #L3f055e.  v0:= v3.`okhttp3.internal.publicsuffix.PublicSuffixDatabase.b` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L3f0562.  call `countDown`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L3f0568.  return @kind void;
  #L3f056a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f056c.  @monitorexit v3
  #L3f056e.  throw v0;
  #L3f0570.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f0572.  call `a`(v0) @signature `Ll/f0/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L3f0578.  throw v1;
  catch `java.lang.Throwable` @[L3f0528..L3f054c] goto L3f0570;
  catch `java.lang.Throwable` @[L3f0554..L3f055e] goto L3f056a;
  catch `java.lang.Throwable` @[L3f056c..L3f056e] goto L3f056a;
}
procedure `void` `c`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v5 @kind this) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.c:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3f05ac.  v0:= 0I;
  #L3f05ae.  call `b`(v5) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.b:()V` @kind direct;
  #L3f05b4.  if v0 == 0 then goto L3f05c6;
  #L3f05b8.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3f05be.  v0:= temp @kind object;
  #L3f05c0.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L3f05c6.  return @kind void;
  #L3f05c8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f05ca.  goto L3f0600;
  #L3f05cc.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L3f05ce.  call temp:= `c`() @signature `Ll/f0/j/f;.c:()Ll/f0/j/f;` @kind static;
  #L3f05d4.  v2:= temp @kind object;
  #L3f05d6.  v3:= 5I;
  #L3f05d8.  v4:= "Failed to read public suffix list" @kind object;
  #L3f05dc.  call `a`(v2, v3, v4, v1) @signature `Ll/f0/j/f;.a:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L3f05e2.  if v0 == 0 then goto L3f05f4;
  #L3f05e6.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3f05ec.  v0:= temp @kind object;
  #L3f05ee.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L3f05f4.  return @kind void;
  #L3f05f6.  call temp:= `interrupted`() @signature `Ljava/lang/Thread;.interrupted:()Z` @kind static;
  #L3f05fc.  v0:= 1I;
  #L3f05fe.  goto L3f05ae;
  #L3f0600.  if v0 == 0 then goto L3f0612;
  #L3f0604.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3f060a.  v0:= temp @kind object;
  #L3f060c.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L3f0612.  throw v1;
  catch `java.io.InterruptedIOException` @[L3f05ae..L3f05b4] goto L3f05f6;
  catch `java.io.IOException` @[L3f05ae..L3f05b4] goto L3f05cc;
  catch `java.lang.Throwable` @[L3f05ae..L3f05b4] goto L3f05c8;
  catch `java.lang.Throwable` @[L3f05ce..L3f05e2] goto L3f05c8;
  catch `java.lang.Throwable` @[L3f05f6..L3f05fc] goto L3f05c8;
}
procedure `java.lang.String` `a`(`okhttp3.internal.publicsuffix.PublicSuffixDatabase` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3f01cc.  if v8 == 0 then goto L3f0278;
  #L3f01d0.  call temp:= `toUnicode`(v8) @signature `Ljava/net/IDN;.toUnicode:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3f01d6.  v0:= temp @kind object;
  #L3f01d8.  v1:= "\\." @kind object;
  #L3f01dc.  call temp:= `split`(v0, v1) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L3f01e2.  v0:= temp @kind object;
  #L3f01e4.  call temp:= `a`(v7, v0) @signature `Lokhttp3/internal/publicsuffix/PublicSuffixDatabase;.a:([Ljava/lang/String;)[Ljava/lang/String;` @kind direct;
  #L3f01ea.  v2:= temp @kind object;
  #L3f01ec.  v3:= length @variable v0;
  #L3f01ee.  v4:= length @variable v2;
  #L3f01f0.  v5:= 33I;
  #L3f01f4.  v6:= 0I;
  #L3f01f6.  if v3 != v4 then goto L3f020e;
  #L3f01fa.  v3:= v2[v6] @kind object;
  #L3f01fe.  call temp:= `charAt`(v3, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3f0204.  v3:= temp;
  #L3f0206.  if v3 == v5 then goto L3f020e;
  #L3f020a.  v8:= 0I;
  #L3f020c.  return v8 @kind object;
  #L3f020e.  v3:= v2[v6] @kind object;
  #L3f0212.  call temp:= `charAt`(v3, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3f0218.  v3:= temp;
  #L3f021a.  v0:= length @variable v0;
  #L3f021c.  v2:= length @variable v2;
  #L3f021e.  if v3 != v5 then goto L3f0224;
  #L3f0222.  goto L3f0228;
  #L3f0224.  v2:= v2 + 1;
  #L3f0228.  v0:= v0 - v2 @kind int;
  #L3f022a.  v2:= new `java.lang.StringBuilder`;
  #L3f022e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f0234.  call temp:= `split`(v8, v1) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L3f023a.  v8:= temp @kind object;
  #L3f023c.  v1:= length @variable v8;
  #L3f023e.  if v0 >= v1 then goto L3f025c;
  #L3f0242.  v1:= v8[v0] @kind object;
  #L3f0246.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f024c.  v1:= 46I;
  #L3f0250.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f0256.  v0:= v0 + 1;
  #L3f025a.  goto L3f023c;
  #L3f025c.  call temp:= `length`(v2) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3f0262.  v8:= temp;
  #L3f0264.  v8:= v8 + -1;
  #L3f0268.  call temp:= `deleteCharAt`(v2, v8) @signature `Ljava/lang/StringBuilder;.deleteCharAt:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f026e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f0274.  v8:= temp @kind object;
  #L3f0276.  return v8 @kind object;
  #L3f0278.  v8:= new `java.lang.NullPointerException`;
  #L3f027c.  v0:= "domain == null" @kind object;
  #L3f0280.  call `<init>`(v8, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f0286.  throw v8;
}
