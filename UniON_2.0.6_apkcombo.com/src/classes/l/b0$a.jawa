record `l.b0$a` @kind class @AccessFlag  extends `l.b0` @kind class {
  `l.u` `l.b0$a.b` @AccessFlag FINAL_SYNTHETIC;
  `long` `l.b0$a.c` @AccessFlag FINAL_SYNTHETIC;
  `m.e` `l.b0$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`l.b0$a` v0 @kind this, `l.u` v1 @kind object, `long` v2 , `m.e` v4 @kind object) @signature `Ll/b0$a;.<init>:(Ll/u;JLm/e;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e0c64.  v0.`l.b0$a.b` @type ^`l.u` := v1 @kind object;
  #L3e0c68.  v0.`l.b0$a.c` @type ^`long` := v2 @kind wide;
  #L3e0c6c.  v0.`l.b0$a.d` @type ^`m.e` := v4 @kind object;
  #L3e0c70.  call `<init>`(v0) @signature `Ll/b0;.<init>:()V` @kind direct;
  #L3e0c76.  return @kind void;
}
procedure `long` `k`(`l.b0$a` v2 @kind this) @signature `Ll/b0$a;.k:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e0c1c.  v0:= v2.`l.b0$a.c` @type ^`long` @kind wide;
  #L3e0c20.  return v0 @kind wide;
}
procedure `l.u` `l`(`l.b0$a` v1 @kind this) @signature `Ll/b0$a;.l:()Ll/u;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e0c34.  v0:= v1.`l.b0$a.b` @type ^`l.u` @kind object;
  #L3e0c38.  return v0 @kind object;
}
procedure `m.e` `m`(`l.b0$a` v1 @kind this) @signature `Ll/b0$a;.m:()Lm/e;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e0c4c.  v0:= v1.`l.b0$a.d` @type ^`m.e` @kind object;
  #L3e0c50.  return v0 @kind object;
}
