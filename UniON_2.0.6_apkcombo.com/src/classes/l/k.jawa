record `l.k` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `l.k.a` @AccessFlag FINAL;
  `boolean` `l.k.b` @AccessFlag FINAL;
  `java.lang.String`[] `l.k.c` @AccessFlag FINAL;
  `java.lang.String`[] `l.k.d` @AccessFlag FINAL;
}
global `l.h`[] `@@l.k.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `l.h`[] `@@l.k.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `l.k` `@@l.k.g` @AccessFlag PUBLIC_STATIC_FINAL;
global `l.k` `@@l.k.h` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ll/k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L3db904.  v0:= 11I;
  #L3db908.  v1:= new `l.h`[v0];
  #L3db90c.  v2:= `@@l.h.q` @type ^`l.h` @kind object;
  #L3db910.  v3:= 0I;
  #L3db912.  v1[v3]:= v2 @kind object;
  #L3db916.  v2:= `@@l.h.r` @type ^`l.h` @kind object;
  #L3db91a.  v4:= 1I;
  #L3db91c.  v1[v4]:= v2 @kind object;
  #L3db920.  v2:= `@@l.h.s` @type ^`l.h` @kind object;
  #L3db924.  v5:= 2I;
  #L3db926.  v1[v5]:= v2 @kind object;
  #L3db92a.  v2:= `@@l.h.t` @type ^`l.h` @kind object;
  #L3db92e.  v6:= 3I;
  #L3db930.  v1[v6]:= v2 @kind object;
  #L3db934.  v2:= `@@l.h.u` @type ^`l.h` @kind object;
  #L3db938.  v7:= 4I;
  #L3db93a.  v1[v7]:= v2 @kind object;
  #L3db93e.  v2:= `@@l.h.k` @type ^`l.h` @kind object;
  #L3db942.  v8:= 5I;
  #L3db944.  v1[v8]:= v2 @kind object;
  #L3db948.  v2:= `@@l.h.m` @type ^`l.h` @kind object;
  #L3db94c.  v9:= 6I;
  #L3db94e.  v1[v9]:= v2 @kind object;
  #L3db952.  v2:= `@@l.h.l` @type ^`l.h` @kind object;
  #L3db956.  v10:= 7I;
  #L3db958.  v1[v10]:= v2 @kind object;
  #L3db95c.  v2:= `@@l.h.n` @type ^`l.h` @kind object;
  #L3db960.  v11:= 8I;
  #L3db964.  v1[v11]:= v2 @kind object;
  #L3db968.  v2:= `@@l.h.p` @type ^`l.h` @kind object;
  #L3db96c.  v12:= 9I;
  #L3db970.  v1[v12]:= v2 @kind object;
  #L3db974.  v2:= `@@l.h.o` @type ^`l.h` @kind object;
  #L3db978.  v13:= 10I;
  #L3db97c.  v1[v13]:= v2 @kind object;
  #L3db980.  `@@l.k.e` @type ^`l.h`[] := v1 @kind object;
  #L3db984.  v1:= 18I;
  #L3db988.  v1:= new `l.h`[v1];
  #L3db98c.  v2:= `@@l.h.q` @type ^`l.h` @kind object;
  #L3db990.  v1[v3]:= v2 @kind object;
  #L3db994.  v2:= `@@l.h.r` @type ^`l.h` @kind object;
  #L3db998.  v1[v4]:= v2 @kind object;
  #L3db99c.  v2:= `@@l.h.s` @type ^`l.h` @kind object;
  #L3db9a0.  v1[v5]:= v2 @kind object;
  #L3db9a4.  v2:= `@@l.h.t` @type ^`l.h` @kind object;
  #L3db9a8.  v1[v6]:= v2 @kind object;
  #L3db9ac.  v2:= `@@l.h.u` @type ^`l.h` @kind object;
  #L3db9b0.  v1[v7]:= v2 @kind object;
  #L3db9b4.  v2:= `@@l.h.k` @type ^`l.h` @kind object;
  #L3db9b8.  v1[v8]:= v2 @kind object;
  #L3db9bc.  v2:= `@@l.h.m` @type ^`l.h` @kind object;
  #L3db9c0.  v1[v9]:= v2 @kind object;
  #L3db9c4.  v2:= `@@l.h.l` @type ^`l.h` @kind object;
  #L3db9c8.  v1[v10]:= v2 @kind object;
  #L3db9cc.  v2:= `@@l.h.n` @type ^`l.h` @kind object;
  #L3db9d0.  v1[v11]:= v2 @kind object;
  #L3db9d4.  v2:= `@@l.h.p` @type ^`l.h` @kind object;
  #L3db9d8.  v1[v12]:= v2 @kind object;
  #L3db9dc.  v2:= `@@l.h.o` @type ^`l.h` @kind object;
  #L3db9e0.  v1[v13]:= v2 @kind object;
  #L3db9e4.  v2:= `@@l.h.i` @type ^`l.h` @kind object;
  #L3db9e8.  v1[v0]:= v2 @kind object;
  #L3db9ec.  v0:= `@@l.h.j` @type ^`l.h` @kind object;
  #L3db9f0.  v2:= 12I;
  #L3db9f4.  v1[v2]:= v0 @kind object;
  #L3db9f8.  v0:= `@@l.h.g` @type ^`l.h` @kind object;
  #L3db9fc.  v2:= 13I;
  #L3dba00.  v1[v2]:= v0 @kind object;
  #L3dba04.  v0:= `@@l.h.h` @type ^`l.h` @kind object;
  #L3dba08.  v2:= 14I;
  #L3dba0c.  v1[v2]:= v0 @kind object;
  #L3dba10.  v0:= `@@l.h.e` @type ^`l.h` @kind object;
  #L3dba14.  v2:= 15I;
  #L3dba18.  v1[v2]:= v0 @kind object;
  #L3dba1c.  v0:= `@@l.h.f` @type ^`l.h` @kind object;
  #L3dba20.  v2:= 16I;
  #L3dba24.  v1[v2]:= v0 @kind object;
  #L3dba28.  v0:= `@@l.h.d` @type ^`l.h` @kind object;
  #L3dba2c.  v2:= 17I;
  #L3dba30.  v1[v2]:= v0 @kind object;
  #L3dba34.  `@@l.k.f` @type ^`l.h`[] := v1 @kind object;
  #L3dba38.  v0:= new `l.k$a`;
  #L3dba3c.  call `<init>`(v0, v4) @signature `Ll/k$a;.<init>:(Z)V` @kind direct;
  #L3dba42.  v1:= `@@l.k.e` @type ^`l.h`[] @kind object;
  #L3dba46.  call temp:= `a`(v0, v1) @signature `Ll/k$a;.a:([Ll/h;)Ll/k$a;` @kind virtual;
  #L3dba4c.  v1:= new `l.d0`[v5];
  #L3dba50.  v2:= `@@l.d0.c` @type ^`l.d0` @kind object;
  #L3dba54.  v1[v3]:= v2 @kind object;
  #L3dba58.  v2:= `@@l.d0.d` @type ^`l.d0` @kind object;
  #L3dba5c.  v1[v4]:= v2 @kind object;
  #L3dba60.  call temp:= `a`(v0, v1) @signature `Ll/k$a;.a:([Ll/d0;)Ll/k$a;` @kind virtual;
  #L3dba66.  call temp:= `a`(v0, v4) @signature `Ll/k$a;.a:(Z)Ll/k$a;` @kind virtual;
  #L3dba6c.  call temp:= `a`(v0) @signature `Ll/k$a;.a:()Ll/k;` @kind virtual;
  #L3dba72.  v0:= new `l.k$a`;
  #L3dba76.  call `<init>`(v0, v4) @signature `Ll/k$a;.<init>:(Z)V` @kind direct;
  #L3dba7c.  v1:= `@@l.k.f` @type ^`l.h`[] @kind object;
  #L3dba80.  call temp:= `a`(v0, v1) @signature `Ll/k$a;.a:([Ll/h;)Ll/k$a;` @kind virtual;
  #L3dba86.  v1:= new `l.d0`[v7];
  #L3dba8a.  v2:= `@@l.d0.c` @type ^`l.d0` @kind object;
  #L3dba8e.  v1[v3]:= v2 @kind object;
  #L3dba92.  v2:= `@@l.d0.d` @type ^`l.d0` @kind object;
  #L3dba96.  v1[v4]:= v2 @kind object;
  #L3dba9a.  v2:= `@@l.d0.e` @type ^`l.d0` @kind object;
  #L3dba9e.  v1[v5]:= v2 @kind object;
  #L3dbaa2.  v2:= `@@l.d0.f` @type ^`l.d0` @kind object;
  #L3dbaa6.  v1[v6]:= v2 @kind object;
  #L3dbaaa.  call temp:= `a`(v0, v1) @signature `Ll/k$a;.a:([Ll/d0;)Ll/k$a;` @kind virtual;
  #L3dbab0.  call temp:= `a`(v0, v4) @signature `Ll/k$a;.a:(Z)Ll/k$a;` @kind virtual;
  #L3dbab6.  call temp:= `a`(v0) @signature `Ll/k$a;.a:()Ll/k;` @kind virtual;
  #L3dbabc.  v0:= temp @kind object;
  #L3dbabe.  `@@l.k.g` @type ^`l.k` := v0 @kind object;
  #L3dbac2.  v0:= new `l.k$a`;
  #L3dbac6.  call `<init>`(v0, v4) @signature `Ll/k$a;.<init>:(Z)V` @kind direct;
  #L3dbacc.  v1:= `@@l.k.f` @type ^`l.h`[] @kind object;
  #L3dbad0.  call temp:= `a`(v0, v1) @signature `Ll/k$a;.a:([Ll/h;)Ll/k$a;` @kind virtual;
  #L3dbad6.  v1:= new `l.d0`[v4];
  #L3dbada.  v2:= `@@l.d0.f` @type ^`l.d0` @kind object;
  #L3dbade.  v1[v3]:= v2 @kind object;
  #L3dbae2.  call temp:= `a`(v0, v1) @signature `Ll/k$a;.a:([Ll/d0;)Ll/k$a;` @kind virtual;
  #L3dbae8.  call temp:= `a`(v0, v4) @signature `Ll/k$a;.a:(Z)Ll/k$a;` @kind virtual;
  #L3dbaee.  call temp:= `a`(v0) @signature `Ll/k$a;.a:()Ll/k;` @kind virtual;
  #L3dbaf4.  v0:= new `l.k$a`;
  #L3dbaf8.  call `<init>`(v0, v3) @signature `Ll/k$a;.<init>:(Z)V` @kind direct;
  #L3dbafe.  call temp:= `a`(v0) @signature `Ll/k$a;.a:()Ll/k;` @kind virtual;
  #L3dbb04.  v0:= temp @kind object;
  #L3dbb06.  `@@l.k.h` @type ^`l.k` := v0 @kind object;
  #L3dbb0a.  return @kind void;
}
procedure `void` `<init>`(`l.k` v1 @kind this, `l.k$a` v2 @kind object) @signature `Ll/k;.<init>:(Ll/k$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3dbb1c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dbb22.  v0:= v2.`l.k$a.a` @type ^`boolean` @kind boolean;
  #L3dbb26.  v1.`l.k.a` @type ^`boolean` := v0 @kind boolean;
  #L3dbb2a.  v0:= v2.`l.k$a.b` @type ^`java.lang.String`[] @kind object;
  #L3dbb2e.  v1.`l.k.c` @type ^`java.lang.String`[] := v0 @kind object;
  #L3dbb32.  v0:= v2.`l.k$a.c` @type ^`java.lang.String`[] @kind object;
  #L3dbb36.  v1.`l.k.d` @type ^`java.lang.String`[] := v0 @kind object;
  #L3dbb3a.  v2:= v2.`l.k$a.d` @type ^`boolean` @kind boolean;
  #L3dbb3e.  v1.`l.k.b` @type ^`boolean` := v2 @kind boolean;
  #L3dbb42.  return @kind void;
}
procedure `l.k` `b`(`l.k` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object, `boolean` v6 ) @signature `Ll/k;.b:(Ljavax/net/ssl/SSLSocket;Z)Ll/k;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3db850.  v0:= v4.`l.k.c` @type ^`java.lang.String`[] @kind object;
  #L3db854.  if v0 == 0 then goto L3db872;
  #L3db858.  v0:= `@@l.h.b` @type ^`java.util.Comparator` @kind object;
  #L3db85c.  call temp:= `getEnabledCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L3db862.  v1:= temp @kind object;
  #L3db864.  v2:= v4.`l.k.c` @type ^`java.lang.String`[] @kind object;
  #L3db868.  call temp:= `a`(v0, v1, v2) @signature `Ll/f0/c;.a:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L3db86e.  v0:= temp @kind object;
  #L3db870.  goto L3db87a;
  #L3db872.  call temp:= `getEnabledCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L3db878.  v0:= temp @kind object;
  #L3db87a.  v1:= v4.`l.k.d` @type ^`java.lang.String`[] @kind object;
  #L3db87e.  if v1 == 0 then goto L3db89c;
  #L3db882.  v1:= `@@l.f0.c.o` @type ^`java.util.Comparator` @kind object;
  #L3db886.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L3db88c.  v2:= temp @kind object;
  #L3db88e.  v3:= v4.`l.k.d` @type ^`java.lang.String`[] @kind object;
  #L3db892.  call temp:= `a`(v1, v2, v3) @signature `Ll/f0/c;.a:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L3db898.  v1:= temp @kind object;
  #L3db89a.  goto L3db8a4;
  #L3db89c.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L3db8a2.  v1:= temp @kind object;
  #L3db8a4.  call temp:= `getSupportedCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getSupportedCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L3db8aa.  v5:= temp @kind object;
  #L3db8ac.  v2:= `@@l.h.b` @type ^`java.util.Comparator` @kind object;
  #L3db8b0.  v3:= "TLS_FALLBACK_SCSV" @kind object;
  #L3db8b4.  call temp:= `a`(v2, v5, v3) @signature `Ll/f0/c;.a:(Ljava/util/Comparator;[Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3db8ba.  v2:= temp;
  #L3db8bc.  if v6 == 0 then goto L3db8d2;
  #L3db8c0.  v6:= -1I;
  #L3db8c2.  if v2 == v6 then goto L3db8d2;
  #L3db8c6.  v5:= v5[v2] @kind object;
  #L3db8ca.  call temp:= `a`(v0, v5) @signature `Ll/f0/c;.a:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L3db8d0.  v0:= temp @kind object;
  #L3db8d2.  v5:= new `l.k$a`;
  #L3db8d6.  call `<init>`(v5, v4) @signature `Ll/k$a;.<init>:(Ll/k;)V` @kind direct;
  #L3db8dc.  call temp:= `a`(v5, v0) @signature `Ll/k$a;.a:([Ljava/lang/String;)Ll/k$a;` @kind virtual;
  #L3db8e2.  call temp:= `b`(v5, v1) @signature `Ll/k$a;.b:([Ljava/lang/String;)Ll/k$a;` @kind virtual;
  #L3db8e8.  call temp:= `a`(v5) @signature `Ll/k$a;.a:()Ll/k;` @kind virtual;
  #L3db8ee.  v5:= temp @kind object;
  #L3db8f0.  return v5 @kind object;
}
procedure `java.util.List` `a`(`l.k` v1 @kind this) @signature `Ll/k;.a:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3db800.  v0:= v1.`l.k.c` @type ^`java.lang.String`[] @kind object;
  #L3db804.  if v0 == 0 then goto L3db812;
  #L3db808.  call temp:= `a`(v0) @signature `Ll/h;.a:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L3db80e.  v0:= temp @kind object;
  #L3db810.  goto L3db814;
  #L3db812.  v0:= 0I;
  #L3db814.  return v0 @kind object;
}
procedure `void` `a`(`l.k` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object, `boolean` v3 ) @signature `Ll/k;.a:(Ljavax/net/ssl/SSLSocket;Z)V` @AccessFlag  {
    temp;
    v0;

  #L3dbb54.  call temp:= `b`(v1, v2, v3) @signature `Ll/k;.b:(Ljavax/net/ssl/SSLSocket;Z)Ll/k;` @kind direct;
  #L3dbb5a.  v3:= temp @kind object;
  #L3dbb5c.  v0:= v3.`l.k.d` @type ^`java.lang.String`[] @kind object;
  #L3dbb60.  if v0 == 0 then goto L3dbb6a;
  #L3dbb64.  call `setEnabledProtocols`(v2, v0) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledProtocols:([Ljava/lang/String;)V` @kind virtual;
  #L3dbb6a.  v3:= v3.`l.k.c` @type ^`java.lang.String`[] @kind object;
  #L3dbb6e.  if v3 == 0 then goto L3dbb78;
  #L3dbb72.  call `setEnabledCipherSuites`(v2, v3) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledCipherSuites:([Ljava/lang/String;)V` @kind virtual;
  #L3dbb78.  return @kind void;
}
procedure `boolean` `a`(`l.k` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object) @signature `Ll/k;.a:(Ljavax/net/ssl/SSLSocket;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3db670.  v0:= v4.`l.k.a` @type ^`boolean` @kind boolean;
  #L3db674.  v1:= 0I;
  #L3db676.  if v0 != 0 then goto L3db67c;
  #L3db67a.  return v1;
  #L3db67c.  v0:= v4.`l.k.d` @type ^`java.lang.String`[] @kind object;
  #L3db680.  if v0 == 0 then goto L3db69e;
  #L3db684.  v2:= `@@l.f0.c.o` @type ^`java.util.Comparator` @kind object;
  #L3db688.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L3db68e.  v3:= temp @kind object;
  #L3db690.  call temp:= `b`(v2, v0, v3) @signature `Ll/f0/c;.b:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)Z` @kind static;
  #L3db696.  v0:= temp;
  #L3db698.  if v0 != 0 then goto L3db69e;
  #L3db69c.  return v1;
  #L3db69e.  v0:= v4.`l.k.c` @type ^`java.lang.String`[] @kind object;
  #L3db6a2.  if v0 == 0 then goto L3db6c0;
  #L3db6a6.  v2:= `@@l.h.b` @type ^`java.util.Comparator` @kind object;
  #L3db6aa.  call temp:= `getEnabledCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L3db6b0.  v5:= temp @kind object;
  #L3db6b2.  call temp:= `b`(v2, v0, v5) @signature `Ll/f0/c;.b:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)Z` @kind static;
  #L3db6b8.  v5:= temp;
  #L3db6ba.  if v5 != 0 then goto L3db6c0;
  #L3db6be.  return v1;
  #L3db6c0.  v5:= 1I;
  #L3db6c2.  return v5;
}
procedure `boolean` `b`(`l.k` v1 @kind this) @signature `Ll/k;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3db6d4.  v0:= v1.`l.k.a` @type ^`boolean` @kind boolean;
  #L3db6d8.  return v0;
}
procedure `boolean` `c`(`l.k` v1 @kind this) @signature `Ll/k;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3db6ec.  v0:= v1.`l.k.b` @type ^`boolean` @kind boolean;
  #L3db6f0.  return v0;
}
procedure `java.util.List` `d`(`l.k` v1 @kind this) @signature `Ll/k;.d:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3db828.  v0:= v1.`l.k.d` @type ^`java.lang.String`[] @kind object;
  #L3db82c.  if v0 == 0 then goto L3db83a;
  #L3db830.  call temp:= `a`(v0) @signature `Ll/d0;.a:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L3db836.  v0:= temp @kind object;
  #L3db838.  goto L3db83c;
  #L3db83a.  v0:= 0I;
  #L3db83c.  return v0 @kind object;
}
procedure `boolean` `equals`(`l.k` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Ll/k;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3db5f8.  v0:= instanceof @variable v5 @type ^`l.k` @kind boolean;
  #L3db5fc.  v1:= 0I;
  #L3db5fe.  if v0 != 0 then goto L3db604;
  #L3db602.  return v1;
  #L3db604.  v0:= 1I;
  #L3db606.  if v5 != v4 then goto L3db60c;
  #L3db60a.  return v0;
  #L3db60c.  v5:= (`l.k`) v5 @kind object;
  #L3db610.  v2:= v4.`l.k.a` @type ^`boolean` @kind boolean;
  #L3db614.  v3:= v5.`l.k.a` @type ^`boolean` @kind boolean;
  #L3db618.  if v2 == v3 then goto L3db61e;
  #L3db61c.  return v1;
  #L3db61e.  if v2 == 0 then goto L3db65c;
  #L3db622.  v2:= v4.`l.k.c` @type ^`java.lang.String`[] @kind object;
  #L3db626.  v3:= v5.`l.k.c` @type ^`java.lang.String`[] @kind object;
  #L3db62a.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L3db630.  v2:= temp;
  #L3db632.  if v2 != 0 then goto L3db638;
  #L3db636.  return v1;
  #L3db638.  v2:= v4.`l.k.d` @type ^`java.lang.String`[] @kind object;
  #L3db63c.  v3:= v5.`l.k.d` @type ^`java.lang.String`[] @kind object;
  #L3db640.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L3db646.  v2:= temp;
  #L3db648.  if v2 != 0 then goto L3db64e;
  #L3db64c.  return v1;
  #L3db64e.  v2:= v4.`l.k.b` @type ^`boolean` @kind boolean;
  #L3db652.  v5:= v5.`l.k.b` @type ^`boolean` @kind boolean;
  #L3db656.  if v2 == v5 then goto L3db65c;
  #L3db65a.  return v1;
  #L3db65c.  return v0;
}
procedure `int` `hashCode`(`l.k` v2 @kind this) @signature `Ll/k;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3db704.  v0:= v2.`l.k.a` @type ^`boolean` @kind boolean;
  #L3db708.  if v0 == 0 then goto L3db740;
  #L3db70c.  v0:= 527I;
  #L3db710.  v1:= v2.`l.k.c` @type ^`java.lang.String`[] @kind object;
  #L3db714.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L3db71a.  v1:= temp;
  #L3db71c.  v0:= v0 + v1 @kind int;
  #L3db71e.  v0:= v0 * 31;
  #L3db722.  v1:= v2.`l.k.d` @type ^`java.lang.String`[] @kind object;
  #L3db726.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L3db72c.  v1:= temp;
  #L3db72e.  v0:= v0 + v1 @kind int;
  #L3db730.  v0:= v0 * 31;
  #L3db734.  v1:= v2.`l.k.b` @type ^`boolean` @kind boolean;
  #L3db738.  v1:= v1 ^~ 1;
  #L3db73c.  v0:= v0 + v1 @kind int;
  #L3db73e.  goto L3db744;
  #L3db740.  v0:= 17I;
  #L3db744.  return v0;
}
procedure `java.lang.String` `toString`(`l.k` v4 @kind this) @signature `Ll/k;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3db758.  v0:= v4.`l.k.a` @type ^`boolean` @kind boolean;
  #L3db75c.  if v0 != 0 then goto L3db766;
  #L3db760.  v0:= "ConnectionSpec()" @kind object;
  #L3db764.  return v0 @kind object;
  #L3db766.  v0:= v4.`l.k.c` @type ^`java.lang.String`[] @kind object;
  #L3db76a.  v1:= "[all enabled]" @kind object;
  #L3db76e.  if v0 == 0 then goto L3db784;
  #L3db772.  call temp:= `a`(v4) @signature `Ll/k;.a:()Ljava/util/List;` @kind virtual;
  #L3db778.  v0:= temp @kind object;
  #L3db77a.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3db780.  v0:= temp @kind object;
  #L3db782.  goto L3db786;
  #L3db784.  v0:= v1 @kind object;
  #L3db786.  v2:= v4.`l.k.d` @type ^`java.lang.String`[] @kind object;
  #L3db78a.  if v2 == 0 then goto L3db79e;
  #L3db78e.  call temp:= `d`(v4) @signature `Ll/k;.d:()Ljava/util/List;` @kind virtual;
  #L3db794.  v1:= temp @kind object;
  #L3db796.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3db79c.  v1:= temp @kind object;
  #L3db79e.  v2:= new `java.lang.StringBuilder`;
  #L3db7a2.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3db7a8.  v3:= "ConnectionSpec(cipherSuites=" @kind object;
  #L3db7ac.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3db7b2.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3db7b8.  v0:= ", tlsVersions=" @kind object;
  #L3db7bc.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3db7c2.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3db7c8.  v0:= ", supportsTlsExtensions=" @kind object;
  #L3db7cc.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3db7d2.  v0:= v4.`l.k.b` @type ^`boolean` @kind boolean;
  #L3db7d6.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3db7dc.  v0:= ")" @kind object;
  #L3db7e0.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3db7e6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3db7ec.  v0:= temp @kind object;
  #L3db7ee.  return v0 @kind object;
}
