record `l.s$a` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `l.s$a.a` @AccessFlag ;
  `java.lang.String` `l.s$a.b` @AccessFlag ;
  `java.lang.String` `l.s$a.c` @AccessFlag ;
  `java.lang.String` `l.s$a.d` @AccessFlag ;
  `int` `l.s$a.e` @AccessFlag ;
  `java.util.List` `l.s$a.f` @AccessFlag FINAL;
  `java.util.List` `l.s$a.g` @AccessFlag ;
  `java.lang.String` `l.s$a.h` @AccessFlag ;
}
procedure `void` `<init>`(`l.s$a` v2 @kind this) @signature `Ll/s$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3ddff0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ddff6.  v0:= "" @kind object;
  #L3ddffa.  v2.`l.s$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L3ddffe.  v2.`l.s$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L3de002.  v1:= -1I;
  #L3de004.  v2.`l.s$a.e` @type ^`int` := v1;
  #L3de008.  v1:= new `java.util.ArrayList`;
  #L3de00c.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3de012.  v2.`l.s$a.f` @type ^`java.util.List` := v1 @kind object;
  #L3de016.  v1:= v2.`l.s$a.f` @type ^`java.util.List` @kind object;
  #L3de01a.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3de020.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Ll/s$a;.a:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3dd70c.  v0:= 0I;
  #L3dd70e.  call temp:= `a`(v1, v2, v3, v0) @signature `Ll/s;.a:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L3dd714.  v1:= temp @kind object;
  #L3dd716.  call temp:= `a`(v1) @signature `Ll/f0/c;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3dd71c.  v1:= temp @kind object;
  #L3dd71e.  return v1 @kind object;
}
procedure `void` `a`(`l.s$a` v9 @kind this, `java.lang.String` v10 @kind object, `int` v11 , `int` v12 , `boolean` v13 , `boolean` v14 ) @signature `Ll/s$a;.a:(Ljava/lang/String;IIZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3de0a4.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L3de0a8.  v5:= 0I;
  #L3de0aa.  v6:= 0I;
  #L3de0ac.  v7:= 1I;
  #L3de0ae.  v8:= 0I;
  #L3de0b0.  v0:= v10 @kind object;
  #L3de0b2.  v1:= v11;
  #L3de0b4.  v2:= v12;
  #L3de0b6.  v4:= v14;
  #L3de0b8.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Ll/s;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L3de0be.  v10:= temp @kind object;
  #L3de0c0.  call temp:= `f`(v9, v10) @signature `Ll/s$a;.f:(Ljava/lang/String;)Z` @kind direct;
  #L3de0c6.  v11:= temp;
  #L3de0c8.  if v11 == 0 then goto L3de0ce;
  #L3de0cc.  return @kind void;
  #L3de0ce.  call temp:= `g`(v9, v10) @signature `Ll/s$a;.g:(Ljava/lang/String;)Z` @kind direct;
  #L3de0d4.  v11:= temp;
  #L3de0d6.  if v11 == 0 then goto L3de0e2;
  #L3de0da.  call `d`(v9) @signature `Ll/s$a;.d:()V` @kind direct;
  #L3de0e0.  return @kind void;
  #L3de0e2.  v11:= v9.`l.s$a.f` @type ^`java.util.List` @kind object;
  #L3de0e6.  call temp:= `size`(v11) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3de0ec.  v12:= temp;
  #L3de0ee.  v12:= v12 + -1;
  #L3de0f2.  call temp:= `get`(v11, v12) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3de0f8.  v11:= temp @kind object;
  #L3de0fa.  v11:= (`java.lang.String`) v11 @kind object;
  #L3de0fe.  call temp:= `isEmpty`(v11) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3de104.  v11:= temp;
  #L3de106.  if v11 == 0 then goto L3de122;
  #L3de10a.  v11:= v9.`l.s$a.f` @type ^`java.util.List` @kind object;
  #L3de10e.  call temp:= `size`(v11) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3de114.  v12:= temp;
  #L3de116.  v12:= v12 + -1;
  #L3de11a.  call temp:= `set`(v11, v12, v10) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3de120.  goto L3de12c;
  #L3de122.  v11:= v9.`l.s$a.f` @type ^`java.util.List` @kind object;
  #L3de126.  call temp:= `add`(v11, v10) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3de12c.  if v13 == 0 then goto L3de13e;
  #L3de130.  v10:= v9.`l.s$a.f` @type ^`java.util.List` @kind object;
  #L3de134.  v11:= "" @kind object;
  #L3de138.  call temp:= `add`(v10, v11) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3de13e.  return @kind void;
}
procedure `int` `b`(`java.lang.String` v10 @kind object, `int` v11 , `int` v12 ) @signature `Ll/s$a;.b:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3dd588.  v0:= -1I;
  #L3dd58a.  v4:= "" @kind object;
  #L3dd58e.  v5:= 0I;
  #L3dd590.  v6:= 0I;
  #L3dd592.  v7:= 0I;
  #L3dd594.  v8:= 1I;
  #L3dd596.  v9:= 0I;
  #L3dd598.  v1:= v10 @kind object;
  #L3dd59a.  v2:= v11;
  #L3dd59c.  v3:= v12;
  #L3dd59e.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Ll/s;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L3dd5a4.  v10:= temp @kind object;
  #L3dd5a6.  call temp:= `parseInt`(v10) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3dd5ac.  v10:= temp;
  #L3dd5ae.  if v10 <= 0 then goto L3dd5be;
  #L3dd5b2.  v11:= 65535I;
  #L3dd5b8.  if v10 > v11 then goto L3dd5be;
  #L3dd5bc.  return v10;
  #L3dd5be.  return v0;
  catch `java.lang.NumberFormatException` @[L3dd58a..L3dd5ae] goto L3dd5be;
}
procedure `int` `c`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Ll/s$a;.c:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3dd5e0.  if v3 >= v4 then goto L3dd61e;
  #L3dd5e4.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3dd5ea.  v0:= temp;
  #L3dd5ec.  v1:= 58I;
  #L3dd5f0.  if v0 == v1 then goto L3dd61c;
  #L3dd5f4.  v1:= 91I;
  #L3dd5f8.  if v0 == v1 then goto L3dd5fe;
  #L3dd5fc.  goto L3dd616;
  #L3dd5fe.  v3:= v3 + 1;
  #L3dd602.  if v3 >= v4 then goto L3dd616;
  #L3dd606.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3dd60c.  v0:= temp;
  #L3dd60e.  v1:= 93I;
  #L3dd612.  if v0 != v1 then goto L3dd5fe;
  #L3dd616.  v3:= v3 + 1;
  #L3dd61a.  goto L3dd5e0;
  #L3dd61c.  return v3;
  #L3dd61e.  return v4;
}
procedure `void` `d`(`l.s$a` v3 @kind this) @signature `Ll/s$a;.d:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3de034.  v0:= v3.`l.s$a.f` @type ^`java.util.List` @kind object;
  #L3de038.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3de03e.  v1:= temp;
  #L3de040.  v1:= v1 + -1;
  #L3de044.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L3de04a.  v0:= temp @kind object;
  #L3de04c.  v0:= (`java.lang.String`) v0 @kind object;
  #L3de050.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3de056.  v0:= temp;
  #L3de058.  v1:= "" @kind object;
  #L3de05c.  if v0 == 0 then goto L3de088;
  #L3de060.  v0:= v3.`l.s$a.f` @type ^`java.util.List` @kind object;
  #L3de064.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3de06a.  v0:= temp;
  #L3de06c.  if v0 != 0 then goto L3de088;
  #L3de070.  v0:= v3.`l.s$a.f` @type ^`java.util.List` @kind object;
  #L3de074.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3de07a.  v2:= temp;
  #L3de07c.  v2:= v2 + -1;
  #L3de080.  call temp:= `set`(v0, v2, v1) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3de086.  goto L3de092;
  #L3de088.  v0:= v3.`l.s$a.f` @type ^`java.util.List` @kind object;
  #L3de08c.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3de092.  return @kind void;
}
procedure `void` `d`(`l.s$a` v10 @kind this, `java.lang.String` v11 @kind object, `int` v12 , `int` v13 ) @signature `Ll/s$a;.d:(Ljava/lang/String;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3de150.  if v12 != v13 then goto L3de156;
  #L3de154.  return @kind void;
  #L3de156.  call temp:= `charAt`(v11, v12) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3de15c.  v0:= temp;
  #L3de15e.  v1:= 47I;
  #L3de162.  v2:= "" @kind object;
  #L3de166.  v3:= 1I;
  #L3de168.  if v0 == v1 then goto L3de18c;
  #L3de16c.  v1:= 92I;
  #L3de170.  if v0 != v1 then goto L3de176;
  #L3de174.  goto L3de18c;
  #L3de176.  v0:= v10.`l.s$a.f` @type ^`java.util.List` @kind object;
  #L3de17a.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3de180.  v1:= temp;
  #L3de182.  v1:= v1 - v3 @kind int;
  #L3de184.  call temp:= `set`(v0, v1, v2) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3de18a.  goto L3de1a2;
  #L3de18c.  v0:= v10.`l.s$a.f` @type ^`java.util.List` @kind object;
  #L3de190.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3de196.  v0:= v10.`l.s$a.f` @type ^`java.util.List` @kind object;
  #L3de19a.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3de1a0.  goto L3de1d2;
  #L3de1a2.  v6:= v12;
  #L3de1a4.  if v6 >= v13 then goto L3de1d8;
  #L3de1a8.  v12:= "/\\" @kind object;
  #L3de1ac.  call temp:= `a`(v11, v6, v13, v12) @signature `Ll/f0/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L3de1b2.  v12:= temp;
  #L3de1b4.  if v12 >= v13 then goto L3de1bc;
  #L3de1b8.  v0:= 1I;
  #L3de1ba.  goto L3de1be;
  #L3de1bc.  v0:= 0I;
  #L3de1be.  v9:= 1I;
  #L3de1c0.  v4:= v10 @kind object;
  #L3de1c2.  v5:= v11 @kind object;
  #L3de1c4.  v7:= v12;
  #L3de1c6.  v8:= v0;
  #L3de1c8.  call `a`(v4, v5, v6, v7, v8, v9) @signature `Ll/s$a;.a:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L3de1ce.  if v0 == 0 then goto L3de1a2;
  #L3de1d2.  v12:= v12 + 1;
  #L3de1d6.  goto L3de1a2;
  #L3de1d8.  return @kind void;
}
procedure `int` `e`(`java.lang.String` v7 @kind object, `int` v8 , `int` v9 ) @signature `Ll/s$a;.e:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3dd630.  v0:= v9 - v8 @kind int;
  #L3dd634.  v1:= -1I;
  #L3dd636.  v2:= 2I;
  #L3dd638.  if v0 >= v2 then goto L3dd63e;
  #L3dd63c.  return v1;
  #L3dd63e.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3dd644.  v0:= temp;
  #L3dd646.  v2:= 90I;
  #L3dd64a.  v3:= 122I;
  #L3dd64e.  v4:= 65I;
  #L3dd652.  v5:= 97I;
  #L3dd656.  if v0 < v5 then goto L3dd65e;
  #L3dd65a.  if v0 <= v3 then goto L3dd668;
  #L3dd65e.  if v0 < v4 then goto L3dd6bc;
  #L3dd662.  if v0 <= v2 then goto L3dd668;
  #L3dd666.  goto L3dd6bc;
  #L3dd668.  v8:= v8 + 1;
  #L3dd66c.  if v8 >= v9 then goto L3dd6bc;
  #L3dd670.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3dd676.  v0:= temp;
  #L3dd678.  if v0 < v5 then goto L3dd680;
  #L3dd67c.  if v0 <= v3 then goto L3dd668;
  #L3dd680.  if v0 < v4 then goto L3dd688;
  #L3dd684.  if v0 <= v2 then goto L3dd668;
  #L3dd688.  v6:= 48I;
  #L3dd68c.  if v0 < v6 then goto L3dd698;
  #L3dd690.  v6:= 57I;
  #L3dd694.  if v0 <= v6 then goto L3dd668;
  #L3dd698.  v6:= 43I;
  #L3dd69c.  if v0 == v6 then goto L3dd668;
  #L3dd6a0.  v6:= 45I;
  #L3dd6a4.  if v0 == v6 then goto L3dd668;
  #L3dd6a8.  v6:= 46I;
  #L3dd6ac.  if v0 != v6 then goto L3dd6b2;
  #L3dd6b0.  goto L3dd668;
  #L3dd6b2.  v7:= 58I;
  #L3dd6b6.  if v0 != v7 then goto L3dd6bc;
  #L3dd6ba.  return v8;
  #L3dd6bc.  return v1;
}
procedure `int` `f`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `Ll/s$a;.f:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3dd6d0.  v0:= 0I;
  #L3dd6d2.  if v4 >= v5 then goto L3dd6f8;
  #L3dd6d6.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3dd6dc.  v1:= temp;
  #L3dd6de.  v2:= 92I;
  #L3dd6e2.  if v1 == v2 then goto L3dd6ee;
  #L3dd6e6.  v2:= 47I;
  #L3dd6ea.  if v1 != v2 then goto L3dd6f8;
  #L3dd6ee.  v0:= v0 + 1;
  #L3dd6f2.  v4:= v4 + 1;
  #L3dd6f6.  goto L3dd6d2;
  #L3dd6f8.  return v0;
}
procedure `boolean` `f`(`l.s$a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Ll/s$a;.f:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3dd4c4.  v0:= "." @kind object;
  #L3dd4c8.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dd4ce.  v0:= temp;
  #L3dd4d0.  if v0 != 0 then goto L3dd4ea;
  #L3dd4d4.  v0:= "%2e" @kind object;
  #L3dd4d8.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3dd4de.  v2:= temp;
  #L3dd4e0.  if v2 == 0 then goto L3dd4e6;
  #L3dd4e4.  goto L3dd4ea;
  #L3dd4e6.  v2:= 0I;
  #L3dd4e8.  goto L3dd4ec;
  #L3dd4ea.  v2:= 1I;
  #L3dd4ec.  return v2;
}
procedure `boolean` `g`(`l.s$a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Ll/s$a;.g:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3dd500.  v0:= ".." @kind object;
  #L3dd504.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dd50a.  v0:= temp;
  #L3dd50c.  if v0 != 0 then goto L3dd546;
  #L3dd510.  v0:= "%2e." @kind object;
  #L3dd514.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3dd51a.  v0:= temp;
  #L3dd51c.  if v0 != 0 then goto L3dd546;
  #L3dd520.  v0:= ".%2e" @kind object;
  #L3dd524.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3dd52a.  v0:= temp;
  #L3dd52c.  if v0 != 0 then goto L3dd546;
  #L3dd530.  v0:= "%2e%2e" @kind object;
  #L3dd534.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3dd53a.  v2:= temp;
  #L3dd53c.  if v2 == 0 then goto L3dd542;
  #L3dd540.  goto L3dd546;
  #L3dd542.  v2:= 0I;
  #L3dd544.  goto L3dd548;
  #L3dd546.  v2:= 1I;
  #L3dd548.  return v2;
}
procedure `l.s$a` `a`(`l.s$a` v3 @kind this, `int` v4 ) @signature `Ll/s$a;.a:(I)Ll/s$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3dde14.  if v4 <= 0 then goto L3dde28;
  #L3dde18.  v0:= 65535I;
  #L3dde1e.  if v4 > v0 then goto L3dde28;
  #L3dde22.  v3.`l.s$a.e` @type ^`int` := v4;
  #L3dde26.  return v3 @kind object;
  #L3dde28.  v0:= new `java.lang.IllegalArgumentException`;
  #L3dde2c.  v1:= new `java.lang.StringBuilder`;
  #L3dde30.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3dde36.  v2:= "unexpected port: " @kind object;
  #L3dde3a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dde40.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dde46.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3dde4c.  v4:= temp @kind object;
  #L3dde4e.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dde54.  throw v0;
}
procedure `l.s$a` `a`(`l.s$a` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Ll/s$a;.a:(Ljava/lang/String;)Ll/s$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3dd8d0.  if v7 == 0 then goto L3dd8f4;
  #L3dd8d4.  v2:= 1I;
  #L3dd8d6.  v3:= 0I;
  #L3dd8d8.  v4:= 1I;
  #L3dd8da.  v5:= 1I;
  #L3dd8dc.  v1:= " \"'<>#" @kind object;
  #L3dd8e0.  v0:= v7 @kind object;
  #L3dd8e2.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `Ll/s;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L3dd8e8.  v7:= temp @kind object;
  #L3dd8ea.  call temp:= `e`(v7) @signature `Ll/s;.e:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L3dd8f0.  v7:= temp @kind object;
  #L3dd8f2.  goto L3dd8f6;
  #L3dd8f4.  v7:= 0I;
  #L3dd8f6.  v6.`l.s$a.g` @type ^`java.util.List` := v7 @kind object;
  #L3dd8fa.  return v6 @kind object;
}
procedure `l.s$a` `a`(`l.s$a` v21 @kind this, `l.s` v22 @kind object, `java.lang.String` v23 @kind object) @signature `Ll/s$a;.a:(Ll/s;Ljava/lang/String;)Ll/s$a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;

  #L3dd97c.  v0:= v21 @kind object;
  #L3dd980.  v1:= v22 @kind object;
  #L3dd984.  v10:= v23 @kind object;
  #L3dd988.  call temp:= `length`(v23) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3dd98e.  v2:= temp;
  #L3dd990.  v8:= 0I;
  #L3dd992.  call temp:= `b`(v10, v8, v2) @signature `Ll/f0/c;.b:(Ljava/lang/String;II)I` @kind static;
  #L3dd998.  v9:= temp;
  #L3dd99a.  call temp:= `length`(v23) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3dd9a0.  v2:= temp;
  #L3dd9a2.  call temp:= `c`(v10, v9, v2) @signature `Ll/f0/c;.c:(Ljava/lang/String;II)I` @kind static;
  #L3dd9a8.  v11:= temp;
  #L3dd9aa.  call temp:= `e`(v10, v9, v11) @signature `Ll/s$a;.e:(Ljava/lang/String;II)I` @kind static;
  #L3dd9b0.  v12:= temp;
  #L3dd9b2.  v13:= -1I;
  #L3dd9b4.  if v12 == v13 then goto L3dda4c;
  #L3dd9b8.  v3:= 1I;
  #L3dd9ba.  v6:= 0I;
  #L3dd9bc.  v7:= 6I;
  #L3dd9be.  v5:= "https:" @kind object;
  #L3dd9c2.  v2:= v23 @kind object;
  #L3dd9c6.  v4:= v9;
  #L3dd9c8.  call temp:= `regionMatches`(v2, v3, v4, v5, v6, v7) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L3dd9ce.  v2:= temp;
  #L3dd9d0.  if v2 == 0 then goto L3dd9e2;
  #L3dd9d4.  v2:= "https" @kind object;
  #L3dd9d8.  v0.`l.s$a.a` @type ^`java.lang.String` := v2 @kind object;
  #L3dd9dc.  v9:= v9 + 6;
  #L3dd9e0.  goto L3dda58;
  #L3dd9e2.  v3:= 1I;
  #L3dd9e4.  v6:= 0I;
  #L3dd9e6.  v7:= 5I;
  #L3dd9e8.  v5:= "http:" @kind object;
  #L3dd9ec.  v2:= v23 @kind object;
  #L3dd9f0.  v4:= v9;
  #L3dd9f2.  call temp:= `regionMatches`(v2, v3, v4, v5, v6, v7) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L3dd9f8.  v2:= temp;
  #L3dd9fa.  if v2 == 0 then goto L3dda0c;
  #L3dd9fe.  v2:= "http" @kind object;
  #L3dda02.  v0.`l.s$a.a` @type ^`java.lang.String` := v2 @kind object;
  #L3dda06.  v9:= v9 + 5;
  #L3dda0a.  goto L3dda58;
  #L3dda0c.  v1:= new `java.lang.IllegalArgumentException`;
  #L3dda10.  v2:= new `java.lang.StringBuilder`;
  #L3dda14.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3dda1a.  v3:= "Expected URL scheme 'http' or 'https' but was '" @kind object;
  #L3dda1e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dda24.  call temp:= `substring`(v10, v8, v12) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3dda2a.  v3:= temp @kind object;
  #L3dda2c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dda32.  v3:= "'" @kind object;
  #L3dda36.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dda3c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3dda42.  v2:= temp @kind object;
  #L3dda44.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dda4a.  throw v1;
  #L3dda4c.  if v1 == 0 then goto L3dddb4;
  #L3dda50.  v2:= v1.`l.s.a` @type ^`java.lang.String` @kind object;
  #L3dda54.  v0.`l.s$a.a` @type ^`java.lang.String` := v2 @kind object;
  #L3dda58.  call temp:= `f`(v10, v9, v11) @signature `Ll/s$a;.f:(Ljava/lang/String;II)I` @kind static;
  #L3dda5e.  v2:= temp;
  #L3dda60.  v3:= 2I;
  #L3dda62.  v12:= 63I;
  #L3dda66.  v14:= 35I;
  #L3dda6a.  if v2 >= v3 then goto L3ddaee;
  #L3dda6e.  if v1 == 0 then goto L3ddaee;
  #L3dda72.  v3:= v1.`l.s.a` @type ^`java.lang.String` @kind object;
  #L3dda76.  v4:= v0.`l.s$a.a` @type ^`java.lang.String` @kind object;
  #L3dda7a.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dda80.  v3:= temp;
  #L3dda82.  if v3 != 0 then goto L3dda88;
  #L3dda86.  goto L3ddaee;
  #L3dda88.  call temp:= `f`(v22) @signature `Ll/s;.f:()Ljava/lang/String;` @kind virtual;
  #L3dda8e.  v2:= temp @kind object;
  #L3dda90.  v0.`l.s$a.b` @type ^`java.lang.String` := v2 @kind object;
  #L3dda94.  call temp:= `b`(v22) @signature `Ll/s;.b:()Ljava/lang/String;` @kind virtual;
  #L3dda9a.  v2:= temp @kind object;
  #L3dda9c.  v0.`l.s$a.c` @type ^`java.lang.String` := v2 @kind object;
  #L3ddaa0.  v2:= v1.`l.s.d` @type ^`java.lang.String` @kind object;
  #L3ddaa4.  v0.`l.s$a.d` @type ^`java.lang.String` := v2 @kind object;
  #L3ddaa8.  v2:= v1.`l.s.e` @type ^`int`;
  #L3ddaac.  v0.`l.s$a.e` @type ^`int` := v2;
  #L3ddab0.  v2:= v0.`l.s$a.f` @type ^`java.util.List` @kind object;
  #L3ddab4.  call `clear`(v2) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3ddaba.  v2:= v0.`l.s$a.f` @type ^`java.util.List` @kind object;
  #L3ddabe.  call temp:= `d`(v22) @signature `Ll/s;.d:()Ljava/util/List;` @kind virtual;
  #L3ddac4.  v3:= temp @kind object;
  #L3ddac6.  call temp:= `addAll`(v2, v3) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L3ddacc.  if v9 == v11 then goto L3ddadc;
  #L3ddad0.  call temp:= `charAt`(v10, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3ddad6.  v2:= temp;
  #L3ddad8.  if v2 != v14 then goto L3ddcde;
  #L3ddadc.  call temp:= `e`(v22) @signature `Ll/s;.e:()Ljava/lang/String;` @kind virtual;
  #L3ddae2.  v1:= temp @kind object;
  #L3ddae4.  call temp:= `a`(v0, v1) @signature `Ll/s$a;.a:(Ljava/lang/String;)Ll/s$a;` @kind virtual;
  #L3ddaea.  goto L3ddcde;
  #L3ddaee.  v9:= v9 + v2 @kind int;
  #L3ddaf0.  v2:= v9;
  #L3ddaf2.  v16:= 0I;
  #L3ddaf6.  v17:= 0I;
  #L3ddafa.  v1:= "@/\\?#" @kind object;
  #L3ddafe.  call temp:= `a`(v10, v2, v11, v1) @signature `Ll/f0/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L3ddb04.  v9:= temp;
  #L3ddb06.  if v9 == v11 then goto L3ddb14;
  #L3ddb0a.  call temp:= `charAt`(v10, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3ddb10.  v1:= temp;
  #L3ddb12.  goto L3ddb16;
  #L3ddb14.  v1:= -1I;
  #L3ddb16.  if v1 == v13 then goto L3ddc44;
  #L3ddb1a.  if v1 == v14 then goto L3ddc44;
  #L3ddb1e.  v3:= 47I;
  #L3ddb22.  if v1 == v3 then goto L3ddc44;
  #L3ddb26.  v3:= 92I;
  #L3ddb2a.  if v1 == v3 then goto L3ddc44;
  #L3ddb2e.  if v1 == v12 then goto L3ddc44;
  #L3ddb32.  v3:= 64I;
  #L3ddb36.  if v1 == v3 then goto L3ddb3e;
  #L3ddb3a.  goto L3ddc38;
  #L3ddb3e.  v8:= "%40" @kind object;
  #L3ddb42.  if v16 != 0 then goto L3ddbe8;
  #L3ddb46.  v1:= 58I;
  #L3ddb4a.  call temp:= `a`(v10, v2, v9, v1) @signature `Ll/f0/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L3ddb50.  v7:= temp;
  #L3ddb52.  v5:= 1I;
  #L3ddb54.  v6:= 0I;
  #L3ddb56.  v18:= 0I;
  #L3ddb5a.  v19:= 1I;
  #L3ddb5e.  v20:= 0I;
  #L3ddb62.  v4:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L3ddb66.  v1:= v23 @kind object;
  #L3ddb6a.  v3:= v7;
  #L3ddb6c.  v15:= v7;
  #L3ddb6e.  v7:= v18;
  #L3ddb72.  v14:= v8 @kind object;
  #L3ddb74.  v8:= v19;
  #L3ddb78.  v12:= v9;
  #L3ddb7a.  v9:= v20 @kind object;
  #L3ddb7e.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Ll/s;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L3ddb84.  v1:= temp @kind object;
  #L3ddb86.  if v17 == 0 then goto L3ddbb2;
  #L3ddb8a.  v2:= new `java.lang.StringBuilder`;
  #L3ddb8e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ddb94.  v3:= v0.`l.s$a.b` @type ^`java.lang.String` @kind object;
  #L3ddb98.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ddb9e.  call temp:= `append`(v2, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ddba4.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ddbaa.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ddbb0.  v1:= temp @kind object;
  #L3ddbb2.  v0.`l.s$a.b` @type ^`java.lang.String` := v1 @kind object;
  #L3ddbb6.  if v15 == v12 then goto L3ddbe2;
  #L3ddbba.  v2:= v15 + 1;
  #L3ddbbe.  v5:= 1I;
  #L3ddbc0.  v6:= 0I;
  #L3ddbc2.  v7:= 0I;
  #L3ddbc4.  v8:= 1I;
  #L3ddbc6.  v9:= 0I;
  #L3ddbc8.  v4:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L3ddbcc.  v1:= v23 @kind object;
  #L3ddbd0.  v3:= v12;
  #L3ddbd2.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Ll/s;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L3ddbd8.  v1:= temp @kind object;
  #L3ddbda.  v0.`l.s$a.c` @type ^`java.lang.String` := v1 @kind object;
  #L3ddbde.  v16:= 1I;
  #L3ddbe2.  v17:= 1I;
  #L3ddbe6.  goto L3ddc34;
  #L3ddbe8.  v14:= v8 @kind object;
  #L3ddbea.  v12:= v9;
  #L3ddbec.  v15:= new `java.lang.StringBuilder`;
  #L3ddbf0.  call `<init>`(v15) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ddbf6.  v1:= v0.`l.s$a.c` @type ^`java.lang.String` @kind object;
  #L3ddbfa.  call temp:= `append`(v15, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ddc00.  call temp:= `append`(v15, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ddc06.  v5:= 1I;
  #L3ddc08.  v6:= 0I;
  #L3ddc0a.  v7:= 0I;
  #L3ddc0c.  v8:= 1I;
  #L3ddc0e.  v9:= 0I;
  #L3ddc10.  v4:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L3ddc14.  v1:= v23 @kind object;
  #L3ddc18.  v3:= v12;
  #L3ddc1a.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Ll/s;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L3ddc20.  v1:= temp @kind object;
  #L3ddc22.  call temp:= `append`(v15, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ddc28.  call temp:= `toString`(v15) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ddc2e.  v1:= temp @kind object;
  #L3ddc30.  v0.`l.s$a.c` @type ^`java.lang.String` := v1 @kind object;
  #L3ddc34.  v2:= v12 + 1;
  #L3ddc38.  v12:= 63I;
  #L3ddc3c.  v14:= 35I;
  #L3ddc40.  goto L3ddafa;
  #L3ddc44.  v12:= v9;
  #L3ddc46.  call temp:= `c`(v10, v2, v12) @signature `Ll/s$a;.c:(Ljava/lang/String;II)I` @kind static;
  #L3ddc4c.  v1:= temp;
  #L3ddc4e.  v3:= v1 + 1;
  #L3ddc52.  v4:= 34I;
  #L3ddc56.  if v3 >= v12 then goto L3ddcb8;
  #L3ddc5a.  call temp:= `a`(v10, v2, v1) @signature `Ll/s$a;.a:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L3ddc60.  v5:= temp @kind object;
  #L3ddc62.  v0.`l.s$a.d` @type ^`java.lang.String` := v5 @kind object;
  #L3ddc66.  call temp:= `b`(v10, v3, v12) @signature `Ll/s$a;.b:(Ljava/lang/String;II)I` @kind static;
  #L3ddc6c.  v5:= temp;
  #L3ddc6e.  v0.`l.s$a.e` @type ^`int` := v5;
  #L3ddc72.  v5:= v0.`l.s$a.e` @type ^`int`;
  #L3ddc76.  if v5 == v13 then goto L3ddc7c;
  #L3ddc7a.  goto L3ddcd4;
  #L3ddc7c.  v1:= new `java.lang.IllegalArgumentException`;
  #L3ddc80.  v2:= new `java.lang.StringBuilder`;
  #L3ddc84.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ddc8a.  v5:= "Invalid URL port: \"" @kind object;
  #L3ddc8e.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ddc94.  call temp:= `substring`(v10, v3, v12) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3ddc9a.  v3:= temp @kind object;
  #L3ddc9c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ddca2.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ddca8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ddcae.  v2:= temp @kind object;
  #L3ddcb0.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ddcb6.  throw v1;
  #L3ddcb8.  call temp:= `a`(v10, v2, v1) @signature `Ll/s$a;.a:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L3ddcbe.  v3:= temp @kind object;
  #L3ddcc0.  v0.`l.s$a.d` @type ^`java.lang.String` := v3 @kind object;
  #L3ddcc4.  v3:= v0.`l.s$a.a` @type ^`java.lang.String` @kind object;
  #L3ddcc8.  call temp:= `c`(v3) @signature `Ll/s;.c:(Ljava/lang/String;)I` @kind static;
  #L3ddcce.  v3:= temp;
  #L3ddcd0.  v0.`l.s$a.e` @type ^`int` := v3;
  #L3ddcd4.  v3:= v0.`l.s$a.d` @type ^`java.lang.String` @kind object;
  #L3ddcd8.  if v3 == 0 then goto L3ddd78;
  #L3ddcdc.  v9:= v12;
  #L3ddcde.  v1:= "?#" @kind object;
  #L3ddce2.  call temp:= `a`(v10, v9, v11, v1) @signature `Ll/f0/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L3ddce8.  v1:= temp;
  #L3ddcea.  call `d`(v0, v10, v9, v1) @signature `Ll/s$a;.d:(Ljava/lang/String;II)V` @kind direct;
  #L3ddcf0.  if v1 >= v11 then goto L3ddd3e;
  #L3ddcf4.  call temp:= `charAt`(v10, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3ddcfa.  v2:= temp;
  #L3ddcfc.  v3:= 63I;
  #L3ddd00.  if v2 != v3 then goto L3ddd3e;
  #L3ddd04.  v2:= 35I;
  #L3ddd08.  call temp:= `a`(v10, v1, v11, v2) @signature `Ll/f0/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L3ddd0e.  v12:= temp;
  #L3ddd10.  v2:= v1 + 1;
  #L3ddd14.  v5:= 1I;
  #L3ddd16.  v6:= 0I;
  #L3ddd18.  v7:= 1I;
  #L3ddd1a.  v8:= 1I;
  #L3ddd1c.  v9:= 0I;
  #L3ddd1e.  v4:= " \"'<>#" @kind object;
  #L3ddd22.  v1:= v23 @kind object;
  #L3ddd26.  v3:= v12;
  #L3ddd28.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Ll/s;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L3ddd2e.  v1:= temp @kind object;
  #L3ddd30.  call temp:= `e`(v1) @signature `Ll/s;.e:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L3ddd36.  v1:= temp @kind object;
  #L3ddd38.  v0.`l.s$a.g` @type ^`java.util.List` := v1 @kind object;
  #L3ddd3c.  v1:= v12;
  #L3ddd3e.  if v1 >= v11 then goto L3ddd76;
  #L3ddd42.  call temp:= `charAt`(v10, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3ddd48.  v2:= temp;
  #L3ddd4a.  v3:= 35I;
  #L3ddd4e.  if v2 != v3 then goto L3ddd76;
  #L3ddd52.  v2:= 1I;
  #L3ddd54.  v2:= v2 + v1 @kind int;
  #L3ddd56.  v5:= 1I;
  #L3ddd58.  v6:= 0I;
  #L3ddd5a.  v7:= 0I;
  #L3ddd5c.  v8:= 0I;
  #L3ddd5e.  v9:= 0I;
  #L3ddd60.  v4:= "" @kind object;
  #L3ddd64.  v1:= v23 @kind object;
  #L3ddd68.  v3:= v11;
  #L3ddd6a.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Ll/s;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L3ddd70.  v1:= temp @kind object;
  #L3ddd72.  v0.`l.s$a.h` @type ^`java.lang.String` := v1 @kind object;
  #L3ddd76.  return v0 @kind object;
  #L3ddd78.  v3:= new `java.lang.IllegalArgumentException`;
  #L3ddd7c.  v5:= new `java.lang.StringBuilder`;
  #L3ddd80.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ddd86.  v6:= "Invalid URL host: \"" @kind object;
  #L3ddd8a.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ddd90.  call temp:= `substring`(v10, v2, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3ddd96.  v1:= temp @kind object;
  #L3ddd98.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ddd9e.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ddda4.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3dddaa.  v1:= temp @kind object;
  #L3dddac.  call `<init>`(v3, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dddb2.  throw v3;
  #L3dddb4.  v1:= new `java.lang.IllegalArgumentException`;
  #L3dddb8.  v2:= "Expected URL scheme 'http' or 'https' but no colon was found" @kind object;
  #L3dddbc.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dddc2.  throw v1;
}
procedure `l.s` `a`(`l.s$a` v2 @kind this) @signature `Ll/s$a;.a:()Ll/s;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3dd884.  v0:= v2.`l.s$a.a` @type ^`java.lang.String` @kind object;
  #L3dd888.  if v0 == 0 then goto L3dd8b0;
  #L3dd88c.  v0:= v2.`l.s$a.d` @type ^`java.lang.String` @kind object;
  #L3dd890.  if v0 == 0 then goto L3dd8a0;
  #L3dd894.  v0:= new `l.s`;
  #L3dd898.  call `<init>`(v0, v2) @signature `Ll/s;.<init>:(Ll/s$a;)V` @kind direct;
  #L3dd89e.  return v0 @kind object;
  #L3dd8a0.  v0:= new `java.lang.IllegalStateException`;
  #L3dd8a4.  v1:= "host == null" @kind object;
  #L3dd8a8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dd8ae.  throw v0;
  #L3dd8b0.  v0:= new `java.lang.IllegalStateException`;
  #L3dd8b4.  v1:= "scheme == null" @kind object;
  #L3dd8b8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dd8be.  throw v0;
}
procedure `int` `b`(`l.s$a` v2 @kind this) @signature `Ll/s$a;.b:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3dd55c.  v0:= v2.`l.s$a.e` @type ^`int`;
  #L3dd560.  v1:= -1I;
  #L3dd562.  if v0 == v1 then goto L3dd568;
  #L3dd566.  goto L3dd574;
  #L3dd568.  v0:= v2.`l.s$a.a` @type ^`java.lang.String` @kind object;
  #L3dd56c.  call temp:= `c`(v0) @signature `Ll/s;.c:(Ljava/lang/String;)I` @kind static;
  #L3dd572.  v0:= temp;
  #L3dd574.  return v0;
}
procedure `l.s$a` `b`(`l.s$a` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Ll/s$a;.b:(Ljava/lang/String;)Ll/s$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3dd90c.  if v4 == 0 then goto L3dd95a;
  #L3dd910.  v0:= 0I;
  #L3dd912.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3dd918.  v1:= temp;
  #L3dd91a.  call temp:= `a`(v4, v0, v1) @signature `Ll/s$a;.a:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L3dd920.  v0:= temp @kind object;
  #L3dd922.  if v0 == 0 then goto L3dd92c;
  #L3dd926.  v3.`l.s$a.d` @type ^`java.lang.String` := v0 @kind object;
  #L3dd92a.  return v3 @kind object;
  #L3dd92c.  v0:= new `java.lang.IllegalArgumentException`;
  #L3dd930.  v1:= new `java.lang.StringBuilder`;
  #L3dd934.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3dd93a.  v2:= "unexpected host: " @kind object;
  #L3dd93e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd944.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd94a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3dd950.  v4:= temp @kind object;
  #L3dd952.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dd958.  throw v0;
  #L3dd95a.  v4:= new `java.lang.NullPointerException`;
  #L3dd95e.  v0:= "host == null" @kind object;
  #L3dd962.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dd968.  throw v4;
}
procedure `l.s$a` `c`(`l.s$a` v10 @kind this) @signature `Ll/s$a;.c:()Ll/s$a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3dde68.  v0:= v10.`l.s$a.f` @type ^`java.util.List` @kind object;
  #L3dde6c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3dde72.  v0:= temp;
  #L3dde74.  v1:= 0I;
  #L3dde76.  v2:= 0I;
  #L3dde78.  if v2 >= v0 then goto L3ddeb2;
  #L3dde7c.  v3:= v10.`l.s$a.f` @type ^`java.util.List` @kind object;
  #L3dde80.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3dde86.  v3:= temp @kind object;
  #L3dde88.  v4:= v3 @kind object;
  #L3dde8a.  v4:= (`java.lang.String`) v4 @kind object;
  #L3dde8e.  v3:= v10.`l.s$a.f` @type ^`java.util.List` @kind object;
  #L3dde92.  v6:= 1I;
  #L3dde94.  v7:= 1I;
  #L3dde96.  v8:= 0I;
  #L3dde98.  v9:= 1I;
  #L3dde9a.  v5:= "[]" @kind object;
  #L3dde9e.  call temp:= `a`(v4, v5, v6, v7, v8, v9) @signature `Ll/s;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L3ddea4.  v4:= temp @kind object;
  #L3ddea6.  call temp:= `set`(v3, v2, v4) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3ddeac.  v2:= v2 + 1;
  #L3ddeb0.  goto L3dde78;
  #L3ddeb2.  v0:= v10.`l.s$a.g` @type ^`java.util.List` @kind object;
  #L3ddeb6.  if v0 == 0 then goto L3ddf00;
  #L3ddeba.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3ddec0.  v0:= temp;
  #L3ddec2.  if v1 >= v0 then goto L3ddf00;
  #L3ddec6.  v2:= v10.`l.s$a.g` @type ^`java.util.List` @kind object;
  #L3ddeca.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3dded0.  v2:= temp @kind object;
  #L3dded2.  v3:= v2 @kind object;
  #L3dded4.  v3:= (`java.lang.String`) v3 @kind object;
  #L3dded8.  if v3 == 0 then goto L3ddefa;
  #L3ddedc.  v2:= v10.`l.s$a.g` @type ^`java.util.List` @kind object;
  #L3ddee0.  v5:= 1I;
  #L3ddee2.  v6:= 1I;
  #L3ddee4.  v7:= 1I;
  #L3ddee6.  v8:= 1I;
  #L3ddee8.  v4:= "\\^`{|}" @kind object;
  #L3ddeec.  call temp:= `a`(v3, v4, v5, v6, v7, v8) @signature `Ll/s;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L3ddef2.  v3:= temp @kind object;
  #L3ddef4.  call temp:= `set`(v2, v1, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3ddefa.  v1:= v1 + 1;
  #L3ddefe.  goto L3ddec2;
  #L3ddf00.  v2:= v10.`l.s$a.h` @type ^`java.lang.String` @kind object;
  #L3ddf04.  if v2 == 0 then goto L3ddf20;
  #L3ddf08.  v4:= 1I;
  #L3ddf0a.  v5:= 1I;
  #L3ddf0c.  v6:= 0I;
  #L3ddf0e.  v7:= 0I;
  #L3ddf10.  v3:= " \"#<>\\^`{|}" @kind object;
  #L3ddf14.  call temp:= `a`(v2, v3, v4, v5, v6, v7) @signature `Ll/s;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L3ddf1a.  v0:= temp @kind object;
  #L3ddf1c.  v10.`l.s$a.h` @type ^`java.lang.String` := v0 @kind object;
  #L3ddf20.  return v10 @kind object;
}
procedure `l.s$a` `c`(`l.s$a` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Ll/s$a;.c:(Ljava/lang/String;)Ll/s$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3dddd4.  if v7 == 0 then goto L3dddf4;
  #L3dddd8.  v2:= 0I;
  #L3dddda.  v3:= 0I;
  #L3ddddc.  v4:= 0I;
  #L3dddde.  v5:= 1I;
  #L3ddde0.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L3ddde4.  v0:= v7 @kind object;
  #L3ddde6.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `Ll/s;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L3dddec.  v7:= temp @kind object;
  #L3dddee.  v6.`l.s$a.c` @type ^`java.lang.String` := v7 @kind object;
  #L3dddf2.  return v6 @kind object;
  #L3dddf4.  v7:= new `java.lang.NullPointerException`;
  #L3dddf8.  v0:= "password == null" @kind object;
  #L3dddfc.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dde02.  throw v7;
}
procedure `l.s$a` `d`(`l.s$a` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Ll/s$a;.d:(Ljava/lang/String;)Ll/s$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ddf34.  if v4 == 0 then goto L3ddf90;
  #L3ddf38.  v0:= "http" @kind object;
  #L3ddf3c.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3ddf42.  v1:= temp;
  #L3ddf44.  if v1 == 0 then goto L3ddf4e;
  #L3ddf48.  v3.`l.s$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L3ddf4c.  goto L3ddf60;
  #L3ddf4e.  v0:= "https" @kind object;
  #L3ddf52.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3ddf58.  v1:= temp;
  #L3ddf5a.  if v1 == 0 then goto L3ddf62;
  #L3ddf5e.  goto L3ddf48;
  #L3ddf60.  return v3 @kind object;
  #L3ddf62.  v0:= new `java.lang.IllegalArgumentException`;
  #L3ddf66.  v1:= new `java.lang.StringBuilder`;
  #L3ddf6a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ddf70.  v2:= "unexpected scheme: " @kind object;
  #L3ddf74.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ddf7a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ddf80.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ddf86.  v4:= temp @kind object;
  #L3ddf88.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ddf8e.  throw v0;
  #L3ddf90.  v4:= new `java.lang.NullPointerException`;
  #L3ddf94.  v0:= "scheme == null" @kind object;
  #L3ddf98.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ddf9e.  throw v4;
}
procedure `l.s$a` `e`(`l.s$a` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Ll/s$a;.e:(Ljava/lang/String;)Ll/s$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ddfb0.  if v7 == 0 then goto L3ddfd0;
  #L3ddfb4.  v2:= 0I;
  #L3ddfb6.  v3:= 0I;
  #L3ddfb8.  v4:= 0I;
  #L3ddfba.  v5:= 1I;
  #L3ddfbc.  v1:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L3ddfc0.  v0:= v7 @kind object;
  #L3ddfc2.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `Ll/s;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L3ddfc8.  v7:= temp @kind object;
  #L3ddfca.  v6.`l.s$a.b` @type ^`java.lang.String` := v7 @kind object;
  #L3ddfce.  return v6 @kind object;
  #L3ddfd0.  v7:= new `java.lang.NullPointerException`;
  #L3ddfd4.  v0:= "username == null" @kind object;
  #L3ddfd8.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ddfde.  throw v7;
}
procedure `java.lang.String` `toString`(`l.s$a` v4 @kind this) @signature `Ll/s$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3dd730.  v0:= new `java.lang.StringBuilder`;
  #L3dd734.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3dd73a.  v1:= v4.`l.s$a.a` @type ^`java.lang.String` @kind object;
  #L3dd73e.  if v1 == 0 then goto L3dd74e;
  #L3dd742.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd748.  v1:= "://" @kind object;
  #L3dd74c.  goto L3dd752;
  #L3dd74e.  v1:= "//" @kind object;
  #L3dd752.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd758.  v1:= v4.`l.s$a.b` @type ^`java.lang.String` @kind object;
  #L3dd75c.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3dd762.  v1:= temp;
  #L3dd764.  v2:= 58I;
  #L3dd768.  if v1 == 0 then goto L3dd77c;
  #L3dd76c.  v1:= v4.`l.s$a.c` @type ^`java.lang.String` @kind object;
  #L3dd770.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3dd776.  v1:= temp;
  #L3dd778.  if v1 != 0 then goto L3dd7b0;
  #L3dd77c.  v1:= v4.`l.s$a.b` @type ^`java.lang.String` @kind object;
  #L3dd780.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd786.  v1:= v4.`l.s$a.c` @type ^`java.lang.String` @kind object;
  #L3dd78a.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3dd790.  v1:= temp;
  #L3dd792.  if v1 != 0 then goto L3dd7a6;
  #L3dd796.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd79c.  v1:= v4.`l.s$a.c` @type ^`java.lang.String` @kind object;
  #L3dd7a0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd7a6.  v1:= 64I;
  #L3dd7aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd7b0.  v1:= v4.`l.s$a.d` @type ^`java.lang.String` @kind object;
  #L3dd7b4.  v3:= -1I;
  #L3dd7b6.  if v1 == 0 then goto L3dd7f0;
  #L3dd7ba.  call temp:= `indexOf`(v1, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L3dd7c0.  v1:= temp;
  #L3dd7c2.  if v1 == v3 then goto L3dd7e6;
  #L3dd7c6.  v1:= 91I;
  #L3dd7ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd7d0.  v1:= v4.`l.s$a.d` @type ^`java.lang.String` @kind object;
  #L3dd7d4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd7da.  v1:= 93I;
  #L3dd7de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd7e4.  goto L3dd7f0;
  #L3dd7e6.  v1:= v4.`l.s$a.d` @type ^`java.lang.String` @kind object;
  #L3dd7ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd7f0.  v1:= v4.`l.s$a.e` @type ^`int`;
  #L3dd7f4.  if v1 != v3 then goto L3dd800;
  #L3dd7f8.  v1:= v4.`l.s$a.a` @type ^`java.lang.String` @kind object;
  #L3dd7fc.  if v1 == 0 then goto L3dd828;
  #L3dd800.  call temp:= `b`(v4) @signature `Ll/s$a;.b:()I` @kind virtual;
  #L3dd806.  v1:= temp;
  #L3dd808.  v3:= v4.`l.s$a.a` @type ^`java.lang.String` @kind object;
  #L3dd80c.  if v3 == 0 then goto L3dd81c;
  #L3dd810.  call temp:= `c`(v3) @signature `Ll/s;.c:(Ljava/lang/String;)I` @kind static;
  #L3dd816.  v3:= temp;
  #L3dd818.  if v1 == v3 then goto L3dd828;
  #L3dd81c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd822.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd828.  v1:= v4.`l.s$a.f` @type ^`java.util.List` @kind object;
  #L3dd82c.  call `b`(v0, v1) @signature `Ll/s;.b:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L3dd832.  v1:= v4.`l.s$a.g` @type ^`java.util.List` @kind object;
  #L3dd836.  if v1 == 0 then goto L3dd84e;
  #L3dd83a.  v1:= 63I;
  #L3dd83e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd844.  v1:= v4.`l.s$a.g` @type ^`java.util.List` @kind object;
  #L3dd848.  call `a`(v0, v1) @signature `Ll/s;.a:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L3dd84e.  v1:= v4.`l.s$a.h` @type ^`java.lang.String` @kind object;
  #L3dd852.  if v1 == 0 then goto L3dd86a;
  #L3dd856.  v1:= 35I;
  #L3dd85a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd860.  v1:= v4.`l.s$a.h` @type ^`java.lang.String` @kind object;
  #L3dd864.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dd86a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3dd870.  v0:= temp @kind object;
  #L3dd872.  return v0 @kind object;
}
