record `l.b0` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.io.Closeable` @kind interface {
}
procedure `void` `<init>`(`l.b0` v0 @kind this) @signature `Ll/b0;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e0d68.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e0d6e.  return @kind void;
}
procedure `l.b0` `a`(`l.u` v1 @kind object, `long` v2 , `m.e` v4 @kind object) @signature `Ll/b0;.a:(Ll/u;JLm/e;)Ll/b0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e0d38.  if v4 == 0 then goto L3e0d48;
  #L3e0d3c.  v0:= new `l.b0$a`;
  #L3e0d40.  call `<init>`(v0, v1, v2, v4) @signature `Ll/b0$a;.<init>:(Ll/u;JLm/e;)V` @kind direct;
  #L3e0d46.  return v0 @kind object;
  #L3e0d48.  v1:= new `java.lang.NullPointerException`;
  #L3e0d4c.  v2:= "source == null" @kind object;
  #L3e0d50.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e0d56.  throw v1;
}
procedure `l.b0` `a`(`l.u` v3 @kind object, `byte`[] v4 @kind object) @signature `Ll/b0;.a:(Ll/u;[B)Ll/b0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e0d08.  v0:= new `m.c`;
  #L3e0d0c.  call `<init>`(v0) @signature `Lm/c;.<init>:()V` @kind direct;
  #L3e0d12.  call temp:= `write`(v0, v4) @signature `Lm/c;.write:([B)Lm/c;` @kind virtual;
  #L3e0d18.  v4:= length @variable v4;
  #L3e0d1a.  v1:= (`long`) v4 @kind i2l;
  #L3e0d1c.  call temp:= `a`(v3, v1, v0) @signature `Ll/b0;.a:(Ll/u;JLm/e;)Ll/b0;` @kind static;
  #L3e0d22.  v3:= temp @kind object;
  #L3e0d24.  return v3 @kind object;
}
procedure `java.nio.charset.Charset` `o`(`l.b0` v2 @kind this) @signature `Ll/b0;.o:()Ljava/nio/charset/Charset;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e0cd8.  call temp:= `l`(v2) @signature `Ll/b0;.l:()Ll/u;` @kind virtual;
  #L3e0cde.  v0:= temp @kind object;
  #L3e0ce0.  if v0 == 0 then goto L3e0cf2;
  #L3e0ce4.  v1:= `@@l.f0.c.i` @type ^`java.nio.charset.Charset` @kind object;
  #L3e0ce8.  call temp:= `a`(v0, v1) @signature `Ll/u;.a:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind virtual;
  #L3e0cee.  v0:= temp @kind object;
  #L3e0cf0.  goto L3e0cf6;
  #L3e0cf2.  v0:= `@@l.f0.c.i` @type ^`java.nio.charset.Charset` @kind object;
  #L3e0cf6.  return v0 @kind object;
}
procedure `void` `close`(`l.b0` v1 @kind this) @signature `Ll/b0;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e0d80.  call temp:= `m`(v1) @signature `Ll/b0;.m:()Lm/e;` @kind virtual;
  #L3e0d86.  v0:= temp @kind object;
  #L3e0d88.  call `a`(v0) @signature `Ll/f0/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L3e0d8e.  return @kind void;
}
procedure `long` `k`() @signature `Ll/b0;.k:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `l.u` `l`() @signature `Ll/b0;.l:()Ll/u;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `m.e` `m`() @signature `Ll/b0;.m:()Lm/e;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `n`(`l.b0` v2 @kind this) @signature `Ll/b0;.n:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3e0c88.  call temp:= `m`(v2) @signature `Ll/b0;.m:()Lm/e;` @kind virtual;
  #L3e0c8e.  v0:= temp @kind object;
  #L3e0c90.  call temp:= `o`(v2) @signature `Ll/b0;.o:()Ljava/nio/charset/Charset;` @kind direct;
  #L3e0c96.  v1:= temp @kind object;
  #L3e0c98.  call temp:= `a`(v0, v1) @signature `Ll/f0/c;.a:(Lm/e;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind static;
  #L3e0c9e.  v1:= temp @kind object;
  #L3e0ca0.  call temp:= `a`(v0, v1) @signature `Lm/e;.a:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind interface;
  #L3e0ca6.  v1:= temp @kind object;
  #L3e0ca8.  call `a`(v0) @signature `Ll/f0/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L3e0cae.  return v1 @kind object;
  #L3e0cb0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e0cb2.  call `a`(v0) @signature `Ll/f0/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L3e0cb8.  throw v1;
  catch `java.lang.Throwable` @[L3e0c90..L3e0ca8] goto L3e0cb0;
}
