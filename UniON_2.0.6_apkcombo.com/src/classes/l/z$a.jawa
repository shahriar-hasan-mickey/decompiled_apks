record `l.z$a` @kind class @AccessFlag  extends `l.z` @kind class {
  `l.u` `l.z$a.a` @AccessFlag FINAL_SYNTHETIC;
  `int` `l.z$a.b` @AccessFlag FINAL_SYNTHETIC;
  `byte`[] `l.z$a.c` @AccessFlag FINAL_SYNTHETIC;
  `int` `l.z$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`l.z$a` v0 @kind this, `l.u` v1 @kind object, `int` v2 , `byte`[] v3 @kind object, `int` v4 ) @signature `Ll/z$a;.<init>:(Ll/u;I[BI)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e0564.  v0.`l.z$a.a` @type ^`l.u` := v1 @kind object;
  #L3e0568.  v0.`l.z$a.b` @type ^`int` := v2;
  #L3e056c.  v0.`l.z$a.c` @type ^`byte`[] := v3 @kind object;
  #L3e0570.  v0.`l.z$a.d` @type ^`int` := v4;
  #L3e0574.  call `<init>`(v0) @signature `Ll/z;.<init>:()V` @kind direct;
  #L3e057a.  return @kind void;
}
procedure `long` `a`(`l.z$a` v2 @kind this) @signature `Ll/z$a;.a:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e0534.  v0:= v2.`l.z$a.b` @type ^`int`;
  #L3e0538.  v0:= (`long`) v0 @kind i2l;
  #L3e053a.  return v0 @kind wide;
}
procedure `void` `a`(`l.z$a` v3 @kind this, `m.d` v4 @kind object) @signature `Ll/z$a;.a:(Lm/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e058c.  v0:= v3.`l.z$a.c` @type ^`byte`[] @kind object;
  #L3e0590.  v1:= v3.`l.z$a.d` @type ^`int`;
  #L3e0594.  v2:= v3.`l.z$a.b` @type ^`int`;
  #L3e0598.  call temp:= `write`(v4, v0, v1, v2) @signature `Lm/d;.write:([BII)Lm/d;` @kind interface;
  #L3e059e.  return @kind void;
}
procedure `l.u` `b`(`l.z$a` v1 @kind this) @signature `Ll/z$a;.b:()Ll/u;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e054c.  v0:= v1.`l.z$a.a` @type ^`l.u` @kind object;
  #L3e0550.  return v0 @kind object;
}
