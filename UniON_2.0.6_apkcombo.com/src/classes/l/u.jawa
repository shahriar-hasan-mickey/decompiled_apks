record `l.u` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `l.u.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `l.u.b` @AccessFlag PRIVATE_FINAL;
}
global `java.util.regex.Pattern` `@@l.u.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@l.u.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ll/u;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3df0a8.  v0:= "([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)/([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)" @kind object;
  #L3df0ac.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L3df0b2.  v0:= temp @kind object;
  #L3df0b4.  `@@l.u.c` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L3df0b8.  v0:= ";\\s*(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)=(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)|\"([^\"]*)\"))?" @kind object;
  #L3df0bc.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L3df0c2.  v0:= temp @kind object;
  #L3df0c4.  `@@l.u.d` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L3df0c8.  return @kind void;
}
procedure `void` `<init>`(`l.u` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Ll/u;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3df0dc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3df0e2.  v0.`l.u.a` @type ^`java.lang.String` := v1 @kind object;
  #L3df0e6.  v0.`l.u.b` @type ^`java.lang.String` := v4 @kind object;
  #L3df0ea.  return @kind void;
}
procedure `l.u` `a`(`java.lang.String` v11 @kind object) @signature `Ll/u;.a:(Ljava/lang/String;)Ll/u;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3dee78.  v0:= `@@l.u.c` @type ^`java.util.regex.Pattern` @kind object;
  #L3dee7c.  call temp:= `matcher`(v0, v11) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L3dee82.  v0:= temp @kind object;
  #L3dee84.  call temp:= `lookingAt`(v0) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L3dee8a.  v1:= temp;
  #L3dee8c.  v2:= 34I;
  #L3dee90.  if v1 == 0 then goto L3df034;
  #L3dee94.  v1:= 1I;
  #L3dee96.  call temp:= `group`(v0, v1) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L3dee9c.  v3:= temp @kind object;
  #L3dee9e.  v4:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L3deea2.  call temp:= `toLowerCase`(v3, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3deea8.  v3:= temp @kind object;
  #L3deeaa.  v4:= 2I;
  #L3deeac.  call temp:= `group`(v0, v4) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L3deeb2.  v5:= temp @kind object;
  #L3deeb4.  v6:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L3deeb8.  call temp:= `toLowerCase`(v5, v6) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3deebe.  v5:= temp @kind object;
  #L3deec0.  v6:= 0I;
  #L3deec2.  v7:= `@@l.u.d` @type ^`java.util.regex.Pattern` @kind object;
  #L3deec6.  call temp:= `matcher`(v7, v11) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L3deecc.  v7:= temp @kind object;
  #L3deece.  call temp:= `end`(v0) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L3deed4.  v0:= temp;
  #L3deed6.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3deedc.  v8:= temp;
  #L3deede.  if v0 >= v8 then goto L3df028;
  #L3deee2.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3deee8.  v8:= temp;
  #L3deeea.  call temp:= `region`(v7, v0, v8) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L3deef0.  call temp:= `lookingAt`(v7) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L3deef6.  v8:= temp;
  #L3deef8.  v9:= "\" for: \"" @kind object;
  #L3deefc.  if v8 == 0 then goto L3defe0;
  #L3def00.  call temp:= `group`(v7, v1) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L3def06.  v0:= temp @kind object;
  #L3def08.  if v0 == 0 then goto L3defd4;
  #L3def0c.  v8:= "charset" @kind object;
  #L3def10.  call temp:= `equalsIgnoreCase`(v0, v8) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3def16.  v0:= temp;
  #L3def18.  if v0 != 0 then goto L3def1e;
  #L3def1c.  goto L3defd4;
  #L3def1e.  call temp:= `group`(v7, v4) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L3def24.  v0:= temp @kind object;
  #L3def26.  if v0 == 0 then goto L3def66;
  #L3def2a.  v8:= "'" @kind object;
  #L3def2e.  call temp:= `startsWith`(v0, v8) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3def34.  v10:= temp;
  #L3def36.  if v10 == 0 then goto L3def70;
  #L3def3a.  call temp:= `endsWith`(v0, v8) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3def40.  v8:= temp;
  #L3def42.  if v8 == 0 then goto L3def70;
  #L3def46.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3def4c.  v8:= temp;
  #L3def4e.  if v8 <= v4 then goto L3def70;
  #L3def52.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3def58.  v8:= temp;
  #L3def5a.  v8:= v8 - v1 @kind int;
  #L3def5c.  call temp:= `substring`(v0, v1, v8) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3def62.  v0:= temp @kind object;
  #L3def64.  goto L3def70;
  #L3def66.  v0:= 3I;
  #L3def68.  call temp:= `group`(v7, v0) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L3def6e.  v0:= temp @kind object;
  #L3def70.  if v6 == 0 then goto L3defd2;
  #L3def74.  call temp:= `equalsIgnoreCase`(v0, v6) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3def7a.  v8:= temp;
  #L3def7c.  if v8 == 0 then goto L3def82;
  #L3def80.  goto L3defd2;
  #L3def82.  v1:= new `java.lang.IllegalArgumentException`;
  #L3def86.  v3:= new `java.lang.StringBuilder`;
  #L3def8a.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3def90.  v4:= "Multiple charsets defined: \"" @kind object;
  #L3def94.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3def9a.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3defa0.  v4:= "\" and: \"" @kind object;
  #L3defa4.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3defaa.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3defb0.  call temp:= `append`(v3, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3defb6.  call temp:= `append`(v3, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3defbc.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3defc2.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3defc8.  v11:= temp @kind object;
  #L3defca.  call `<init>`(v1, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3defd0.  throw v1;
  #L3defd2.  v6:= v0 @kind object;
  #L3defd4.  call temp:= `end`(v7) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L3defda.  v0:= temp;
  #L3defdc.  goto L3deed6;
  #L3defe0.  v1:= new `java.lang.IllegalArgumentException`;
  #L3defe4.  v3:= new `java.lang.StringBuilder`;
  #L3defe8.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3defee.  v4:= "Parameter is not formatted correctly: \"" @kind object;
  #L3deff2.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3deff8.  call temp:= `substring`(v11, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L3deffe.  v0:= temp @kind object;
  #L3df000.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df006.  call temp:= `append`(v3, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df00c.  call temp:= `append`(v3, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df012.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df018.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3df01e.  v11:= temp @kind object;
  #L3df020.  call `<init>`(v1, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3df026.  throw v1;
  #L3df028.  v0:= new `l.u`;
  #L3df02c.  call `<init>`(v0, v11, v3, v5, v6) @signature `Ll/u;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L3df032.  return v0 @kind object;
  #L3df034.  v0:= new `java.lang.IllegalArgumentException`;
  #L3df038.  v1:= new `java.lang.StringBuilder`;
  #L3df03c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3df042.  v3:= "No subtype found for: \"" @kind object;
  #L3df046.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df04c.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df052.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df058.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3df05e.  v11:= temp @kind object;
  #L3df060.  call `<init>`(v0, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3df066.  throw v0;
}
procedure `l.u` `b`(`java.lang.String` v0 @kind object) @signature `Ll/u;.b:(Ljava/lang/String;)Ll/u;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3df078.  call temp:= `a`(v0) @signature `Ll/u;.a:(Ljava/lang/String;)Ll/u;` @kind static;
  #L3df07e.  v0:= temp @kind object;
  #L3df080.  return v0 @kind object;
  #L3df082.  v0:= 0I;
  #L3df084.  return v0 @kind object;
  catch `java.lang.IllegalArgumentException` @[L3df078..L3df080] goto L3df082;
}
procedure `java.nio.charset.Charset` `a`(`l.u` v1 @kind this) @signature `Ll/u;.a:()Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dee24.  v0:= 0I;
  #L3dee26.  call temp:= `a`(v1, v0) @signature `Ll/u;.a:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind virtual;
  #L3dee2c.  v0:= temp @kind object;
  #L3dee2e.  return v0 @kind object;
}
procedure `java.nio.charset.Charset` `a`(`l.u` v1 @kind this, `java.nio.charset.Charset` v2 @kind object) @signature `Ll/u;.a:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dee40.  v0:= v1.`l.u.b` @type ^`java.lang.String` @kind object;
  #L3dee44.  if v0 == 0 then goto L3dee54;
  #L3dee48.  v0:= v1.`l.u.b` @type ^`java.lang.String` @kind object;
  #L3dee4c.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L3dee52.  v2:= temp @kind object;
  #L3dee54.  return v2 @kind object;
  catch `java.lang.IllegalArgumentException` @[L3dee40..L3dee54] goto L3dee54;
}
procedure `boolean` `equals`(`l.u` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Ll/u;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dedb4.  v0:= instanceof @variable v2 @type ^`l.u` @kind boolean;
  #L3dedb8.  if v0 == 0 then goto L3dedd8;
  #L3dedbc.  v2:= (`l.u`) v2 @kind object;
  #L3dedc0.  v2:= v2.`l.u.a` @type ^`java.lang.String` @kind object;
  #L3dedc4.  v0:= v1.`l.u.a` @type ^`java.lang.String` @kind object;
  #L3dedc8.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dedce.  v2:= temp;
  #L3dedd0.  if v2 == 0 then goto L3dedd8;
  #L3dedd4.  v2:= 1I;
  #L3dedd6.  goto L3dedda;
  #L3dedd8.  v2:= 0I;
  #L3dedda.  return v2;
}
procedure `int` `hashCode`(`l.u` v1 @kind this) @signature `Ll/u;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dedec.  v0:= v1.`l.u.a` @type ^`java.lang.String` @kind object;
  #L3dedf0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3dedf6.  v0:= temp;
  #L3dedf8.  return v0;
}
procedure `java.lang.String` `toString`(`l.u` v1 @kind this) @signature `Ll/u;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dee0c.  v0:= v1.`l.u.a` @type ^`java.lang.String` @kind object;
  #L3dee10.  return v0 @kind object;
}
