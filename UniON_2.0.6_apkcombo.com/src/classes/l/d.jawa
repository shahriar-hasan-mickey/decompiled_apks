record `l.d` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `l.d.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `l.d.b` @AccessFlag PRIVATE_FINAL;
  `int` `l.d.c` @AccessFlag PRIVATE_FINAL;
  `int` `l.d.d` @AccessFlag PRIVATE_FINAL;
  `boolean` `l.d.e` @AccessFlag PRIVATE_FINAL;
  `boolean` `l.d.f` @AccessFlag PRIVATE_FINAL;
  `boolean` `l.d.g` @AccessFlag PRIVATE_FINAL;
  `int` `l.d.h` @AccessFlag PRIVATE_FINAL;
  `int` `l.d.i` @AccessFlag PRIVATE_FINAL;
  `boolean` `l.d.j` @AccessFlag PRIVATE_FINAL;
  `boolean` `l.d.k` @AccessFlag PRIVATE_FINAL;
  `boolean` `l.d.l` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `l.d.m` @AccessFlag ;
}
procedure `void` `<clinit>`() @signature `Ll/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3d9ee8.  v0:= new `l.d$a`;
  #L3d9eec.  call `<init>`(v0) @signature `Ll/d$a;.<init>:()V` @kind direct;
  #L3d9ef2.  call temp:= `b`(v0) @signature `Ll/d$a;.b:()Ll/d$a;` @kind virtual;
  #L3d9ef8.  call temp:= `a`(v0) @signature `Ll/d$a;.a:()Ll/d;` @kind virtual;
  #L3d9efe.  v0:= new `l.d$a`;
  #L3d9f02.  call `<init>`(v0) @signature `Ll/d$a;.<init>:()V` @kind direct;
  #L3d9f08.  call temp:= `c`(v0) @signature `Ll/d$a;.c:()Ll/d$a;` @kind virtual;
  #L3d9f0e.  v1:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3d9f12.  v2:= 2147483647I;
  #L3d9f18.  call temp:= `a`(v0, v2, v1) @signature `Ll/d$a;.a:(ILjava/util/concurrent/TimeUnit;)Ll/d$a;` @kind virtual;
  #L3d9f1e.  call temp:= `a`(v0) @signature `Ll/d$a;.a:()Ll/d;` @kind virtual;
  #L3d9f24.  return @kind void;
}
procedure `void` `<init>`(`l.d` v1 @kind this, `l.d$a` v2 @kind object) @signature `Ll/d;.<init>:(Ll/d$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3d9f84.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d9f8a.  v0:= v2.`l.d$a.a` @type ^`boolean` @kind boolean;
  #L3d9f8e.  v1.`l.d.a` @type ^`boolean` := v0 @kind boolean;
  #L3d9f92.  v0:= v2.`l.d$a.b` @type ^`boolean` @kind boolean;
  #L3d9f96.  v1.`l.d.b` @type ^`boolean` := v0 @kind boolean;
  #L3d9f9a.  v0:= v2.`l.d$a.c` @type ^`int`;
  #L3d9f9e.  v1.`l.d.c` @type ^`int` := v0;
  #L3d9fa2.  v0:= -1I;
  #L3d9fa4.  v1.`l.d.d` @type ^`int` := v0;
  #L3d9fa8.  v0:= 0I;
  #L3d9faa.  v1.`l.d.e` @type ^`boolean` := v0 @kind boolean;
  #L3d9fae.  v1.`l.d.f` @type ^`boolean` := v0 @kind boolean;
  #L3d9fb2.  v1.`l.d.g` @type ^`boolean` := v0 @kind boolean;
  #L3d9fb6.  v0:= v2.`l.d$a.d` @type ^`int`;
  #L3d9fba.  v1.`l.d.h` @type ^`int` := v0;
  #L3d9fbe.  v0:= v2.`l.d$a.e` @type ^`int`;
  #L3d9fc2.  v1.`l.d.i` @type ^`int` := v0;
  #L3d9fc6.  v0:= v2.`l.d$a.f` @type ^`boolean` @kind boolean;
  #L3d9fca.  v1.`l.d.j` @type ^`boolean` := v0 @kind boolean;
  #L3d9fce.  v0:= v2.`l.d$a.g` @type ^`boolean` @kind boolean;
  #L3d9fd2.  v1.`l.d.k` @type ^`boolean` := v0 @kind boolean;
  #L3d9fd6.  v2:= v2.`l.d$a.h` @type ^`boolean` @kind boolean;
  #L3d9fda.  v1.`l.d.l` @type ^`boolean` := v2 @kind boolean;
  #L3d9fde.  return @kind void;
}
procedure `void` `<init>`(`l.d` v0 @kind this, `boolean` v1 , `boolean` v2 , `int` v3 , `int` v4 , `boolean` v5 , `boolean` v6 , `boolean` v7 , `int` v8 , `int` v9 , `boolean` v10 , `boolean` v11 , `boolean` v12 , `java.lang.String` v13 @kind object) @signature `Ll/d;.<init>:(ZZIIZZZIIZZZLjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3d9f38.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d9f3e.  v0.`l.d.a` @type ^`boolean` := v1 @kind boolean;
  #L3d9f42.  v0.`l.d.b` @type ^`boolean` := v2 @kind boolean;
  #L3d9f46.  v0.`l.d.c` @type ^`int` := v3;
  #L3d9f4a.  v0.`l.d.d` @type ^`int` := v4;
  #L3d9f4e.  v0.`l.d.e` @type ^`boolean` := v5 @kind boolean;
  #L3d9f52.  v0.`l.d.f` @type ^`boolean` := v6 @kind boolean;
  #L3d9f56.  v0.`l.d.g` @type ^`boolean` := v7 @kind boolean;
  #L3d9f5a.  v0.`l.d.h` @type ^`int` := v8;
  #L3d9f5e.  v0.`l.d.i` @type ^`int` := v9;
  #L3d9f62.  v0.`l.d.j` @type ^`boolean` := v10 @kind boolean;
  #L3d9f66.  v0.`l.d.k` @type ^`boolean` := v11 @kind boolean;
  #L3d9f6a.  v0.`l.d.l` @type ^`boolean` := v12 @kind boolean;
  #L3d9f6e.  v0.`l.d.m` @type ^`java.lang.String` := v13 @kind object;
  #L3d9f72.  return @kind void;
}
procedure `l.d` `a`(`l.r` v22 @kind object) @signature `Ll/d;.a:(Ll/r;)Ll/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L3d9c30.  v0:= v22 @kind object;
  #L3d9c34.  call temp:= `b`(v22) @signature `Ll/r;.b:()I` @kind virtual;
  #L3d9c3a.  v1:= temp;
  #L3d9c3c.  v6:= 0I;
  #L3d9c3e.  v7:= 1I;
  #L3d9c40.  v8:= 0I;
  #L3d9c42.  v9:= 0I;
  #L3d9c44.  v10:= 0I;
  #L3d9c46.  v11:= -1I;
  #L3d9c48.  v12:= -1I;
  #L3d9c4a.  v13:= 0I;
  #L3d9c4c.  v14:= 0I;
  #L3d9c4e.  v15:= 0I;
  #L3d9c50.  v16:= -1I;
  #L3d9c54.  v17:= -1I;
  #L3d9c58.  v18:= 0I;
  #L3d9c5c.  v19:= 0I;
  #L3d9c60.  v20:= 0I;
  #L3d9c64.  if v6 >= v1 then goto L3d9ebc;
  #L3d9c68.  call temp:= `a`(v0, v6) @signature `Ll/r;.a:(I)Ljava/lang/String;` @kind virtual;
  #L3d9c6e.  v2:= temp @kind object;
  #L3d9c70.  call temp:= `b`(v0, v6) @signature `Ll/r;.b:(I)Ljava/lang/String;` @kind virtual;
  #L3d9c76.  v4:= temp @kind object;
  #L3d9c78.  v3:= "Cache-Control" @kind object;
  #L3d9c7c.  call temp:= `equalsIgnoreCase`(v2, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3d9c82.  v3:= temp;
  #L3d9c84.  if v3 == 0 then goto L3d9c92;
  #L3d9c88.  if v8 == 0 then goto L3d9c8e;
  #L3d9c8c.  goto L3d9ca2;
  #L3d9c8e.  v8:= v4 @kind object;
  #L3d9c90.  goto L3d9ca4;
  #L3d9c92.  v3:= "Pragma" @kind object;
  #L3d9c96.  call temp:= `equalsIgnoreCase`(v2, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3d9c9c.  v2:= temp;
  #L3d9c9e.  if v2 == 0 then goto L3d9eae;
  #L3d9ca2.  v7:= 0I;
  #L3d9ca4.  v2:= 0I;
  #L3d9ca6.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3d9cac.  v3:= temp;
  #L3d9cae.  if v2 >= v3 then goto L3d9eae;
  #L3d9cb2.  v3:= "=,;" @kind object;
  #L3d9cb6.  call temp:= `a`(v4, v2, v3) @signature `Ll/f0/g/e;.a:(Ljava/lang/String;ILjava/lang/String;)I` @kind static;
  #L3d9cbc.  v3:= temp;
  #L3d9cbe.  call temp:= `substring`(v4, v2, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3d9cc4.  v2:= temp @kind object;
  #L3d9cc6.  call temp:= `trim`(v2) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L3d9ccc.  v2:= temp @kind object;
  #L3d9cce.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3d9cd4.  v5:= temp;
  #L3d9cd6.  if v3 == v5 then goto L3d9d62;
  #L3d9cda.  call temp:= `charAt`(v4, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3d9ce0.  v5:= temp;
  #L3d9ce2.  v0:= 44I;
  #L3d9ce6.  if v5 == v0 then goto L3d9d62;
  #L3d9cea.  call temp:= `charAt`(v4, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3d9cf0.  v0:= temp;
  #L3d9cf2.  v5:= 59I;
  #L3d9cf6.  if v0 != v5 then goto L3d9cfc;
  #L3d9cfa.  goto L3d9d62;
  #L3d9cfc.  v3:= v3 + 1;
  #L3d9d00.  call temp:= `b`(v4, v3) @signature `Ll/f0/g/e;.b:(Ljava/lang/String;I)I` @kind static;
  #L3d9d06.  v0:= temp;
  #L3d9d08.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3d9d0e.  v3:= temp;
  #L3d9d10.  if v0 >= v3 then goto L3d9d42;
  #L3d9d14.  call temp:= `charAt`(v4, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3d9d1a.  v3:= temp;
  #L3d9d1c.  v5:= 34I;
  #L3d9d20.  if v3 != v5 then goto L3d9d42;
  #L3d9d24.  v0:= v0 + 1;
  #L3d9d28.  v3:= "\"" @kind object;
  #L3d9d2c.  call temp:= `a`(v4, v0, v3) @signature `Ll/f0/g/e;.a:(Ljava/lang/String;ILjava/lang/String;)I` @kind static;
  #L3d9d32.  v3:= temp;
  #L3d9d34.  call temp:= `substring`(v4, v0, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3d9d3a.  v0:= temp @kind object;
  #L3d9d3c.  v5:= 1I;
  #L3d9d3e.  v3:= v3 + v5 @kind int;
  #L3d9d40.  goto L3d9d6a;
  #L3d9d42.  v5:= 1I;
  #L3d9d44.  v3:= ",;" @kind object;
  #L3d9d48.  call temp:= `a`(v4, v0, v3) @signature `Ll/f0/g/e;.a:(Ljava/lang/String;ILjava/lang/String;)I` @kind static;
  #L3d9d4e.  v3:= temp;
  #L3d9d50.  call temp:= `substring`(v4, v0, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3d9d56.  v0:= temp @kind object;
  #L3d9d58.  call temp:= `trim`(v0) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L3d9d5e.  v0:= temp @kind object;
  #L3d9d60.  goto L3d9d6a;
  #L3d9d62.  v5:= 1I;
  #L3d9d64.  v3:= v3 + 1;
  #L3d9d68.  v0:= 0I;
  #L3d9d6a.  v5:= "no-cache" @kind object;
  #L3d9d6e.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3d9d74.  v5:= temp;
  #L3d9d76.  if v5 == 0 then goto L3d9d82;
  #L3d9d7a.  v5:= -1I;
  #L3d9d7c.  v9:= 1I;
  #L3d9d7e.  goto L3d9ea4;
  #L3d9d82.  v5:= "no-store" @kind object;
  #L3d9d86.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3d9d8c.  v5:= temp;
  #L3d9d8e.  if v5 == 0 then goto L3d9d9a;
  #L3d9d92.  v5:= -1I;
  #L3d9d94.  v10:= 1I;
  #L3d9d96.  goto L3d9ea4;
  #L3d9d9a.  v5:= "max-age" @kind object;
  #L3d9d9e.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3d9da4.  v5:= temp;
  #L3d9da6.  if v5 == 0 then goto L3d9dba;
  #L3d9daa.  v5:= -1I;
  #L3d9dac.  call temp:= `a`(v0, v5) @signature `Ll/f0/g/e;.a:(Ljava/lang/String;I)I` @kind static;
  #L3d9db2.  v0:= temp;
  #L3d9db4.  v11:= v0;
  #L3d9db6.  goto L3d9ea4;
  #L3d9dba.  v5:= "s-maxage" @kind object;
  #L3d9dbe.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3d9dc4.  v5:= temp;
  #L3d9dc6.  if v5 == 0 then goto L3d9dda;
  #L3d9dca.  v5:= -1I;
  #L3d9dcc.  call temp:= `a`(v0, v5) @signature `Ll/f0/g/e;.a:(Ljava/lang/String;I)I` @kind static;
  #L3d9dd2.  v0:= temp;
  #L3d9dd4.  v12:= v0;
  #L3d9dd6.  goto L3d9ea4;
  #L3d9dda.  v5:= "private" @kind object;
  #L3d9dde.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3d9de4.  v5:= temp;
  #L3d9de6.  if v5 == 0 then goto L3d9df0;
  #L3d9dea.  v5:= -1I;
  #L3d9dec.  v13:= 1I;
  #L3d9dee.  goto L3d9ea4;
  #L3d9df0.  v5:= "public" @kind object;
  #L3d9df4.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3d9dfa.  v5:= temp;
  #L3d9dfc.  if v5 == 0 then goto L3d9e06;
  #L3d9e00.  v5:= -1I;
  #L3d9e02.  v14:= 1I;
  #L3d9e04.  goto L3d9ea4;
  #L3d9e06.  v5:= "must-revalidate" @kind object;
  #L3d9e0a.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3d9e10.  v5:= temp;
  #L3d9e12.  if v5 == 0 then goto L3d9e1c;
  #L3d9e16.  v5:= -1I;
  #L3d9e18.  v15:= 1I;
  #L3d9e1a.  goto L3d9ea4;
  #L3d9e1c.  v5:= "max-stale" @kind object;
  #L3d9e20.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3d9e26.  v5:= temp;
  #L3d9e28.  if v5 == 0 then goto L3d9e42;
  #L3d9e2c.  v2:= 2147483647I;
  #L3d9e32.  call temp:= `a`(v0, v2) @signature `Ll/f0/g/e;.a:(Ljava/lang/String;I)I` @kind static;
  #L3d9e38.  v0:= temp;
  #L3d9e3a.  v16:= v0;
  #L3d9e3e.  v5:= -1I;
  #L3d9e40.  goto L3d9ea4;
  #L3d9e42.  v5:= "min-fresh" @kind object;
  #L3d9e46.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3d9e4c.  v5:= temp;
  #L3d9e4e.  if v5 == 0 then goto L3d9e62;
  #L3d9e52.  v5:= -1I;
  #L3d9e54.  call temp:= `a`(v0, v5) @signature `Ll/f0/g/e;.a:(Ljava/lang/String;I)I` @kind static;
  #L3d9e5a.  v0:= temp;
  #L3d9e5c.  v17:= v0;
  #L3d9e60.  goto L3d9ea4;
  #L3d9e62.  v5:= -1I;
  #L3d9e64.  v0:= "only-if-cached" @kind object;
  #L3d9e68.  call temp:= `equalsIgnoreCase`(v0, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3d9e6e.  v0:= temp;
  #L3d9e70.  if v0 == 0 then goto L3d9e7a;
  #L3d9e74.  v18:= 1I;
  #L3d9e78.  goto L3d9ea4;
  #L3d9e7a.  v0:= "no-transform" @kind object;
  #L3d9e7e.  call temp:= `equalsIgnoreCase`(v0, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3d9e84.  v0:= temp;
  #L3d9e86.  if v0 == 0 then goto L3d9e90;
  #L3d9e8a.  v19:= 1I;
  #L3d9e8e.  goto L3d9ea4;
  #L3d9e90.  v0:= "immutable" @kind object;
  #L3d9e94.  call temp:= `equalsIgnoreCase`(v0, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3d9e9a.  v0:= temp;
  #L3d9e9c.  if v0 == 0 then goto L3d9ea4;
  #L3d9ea0.  v20:= 1I;
  #L3d9ea4.  v0:= v22 @kind object;
  #L3d9ea8.  v2:= v3;
  #L3d9eaa.  goto L3d9ca6;
  #L3d9eae.  v5:= -1I;
  #L3d9eb0.  v6:= v6 + 1;
  #L3d9eb4.  v0:= v22 @kind object;
  #L3d9eb8.  goto L3d9c64;
  #L3d9ebc.  if v7 != 0 then goto L3d9ec6;
  #L3d9ec0.  v21:= 0I;
  #L3d9ec4.  goto L3d9eca;
  #L3d9ec6.  v21:= v8 @kind object;
  #L3d9eca.  v0:= new `l.d`;
  #L3d9ece.  v8:= v0 @kind object;
  #L3d9ed0.  call `<init>`(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21) @signature `Ll/d;.<init>:(ZZIIZZZIIZZZLjava/lang/String;)V` @kind direct;
  #L3d9ed6.  return v0 @kind object;
}
procedure `java.lang.String` `j`(`l.d` v4 @kind this) @signature `Ll/d;.j:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d9a98.  v0:= new `java.lang.StringBuilder`;
  #L3d9a9c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d9aa2.  v1:= v4.`l.d.a` @type ^`boolean` @kind boolean;
  #L3d9aa6.  if v1 == 0 then goto L3d9ab4;
  #L3d9aaa.  v1:= "no-cache, " @kind object;
  #L3d9aae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9ab4.  v1:= v4.`l.d.b` @type ^`boolean` @kind boolean;
  #L3d9ab8.  if v1 == 0 then goto L3d9ac6;
  #L3d9abc.  v1:= "no-store, " @kind object;
  #L3d9ac0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9ac6.  v1:= v4.`l.d.c` @type ^`int`;
  #L3d9aca.  v2:= ", " @kind object;
  #L3d9ace.  v3:= -1I;
  #L3d9ad0.  if v1 == v3 then goto L3d9aee;
  #L3d9ad4.  v1:= "max-age=" @kind object;
  #L3d9ad8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9ade.  v1:= v4.`l.d.c` @type ^`int`;
  #L3d9ae2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9ae8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9aee.  v1:= v4.`l.d.d` @type ^`int`;
  #L3d9af2.  if v1 == v3 then goto L3d9b10;
  #L3d9af6.  v1:= "s-maxage=" @kind object;
  #L3d9afa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9b00.  v1:= v4.`l.d.d` @type ^`int`;
  #L3d9b04.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9b0a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9b10.  v1:= v4.`l.d.e` @type ^`boolean` @kind boolean;
  #L3d9b14.  if v1 == 0 then goto L3d9b22;
  #L3d9b18.  v1:= "private, " @kind object;
  #L3d9b1c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9b22.  v1:= v4.`l.d.f` @type ^`boolean` @kind boolean;
  #L3d9b26.  if v1 == 0 then goto L3d9b34;
  #L3d9b2a.  v1:= "public, " @kind object;
  #L3d9b2e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9b34.  v1:= v4.`l.d.g` @type ^`boolean` @kind boolean;
  #L3d9b38.  if v1 == 0 then goto L3d9b46;
  #L3d9b3c.  v1:= "must-revalidate, " @kind object;
  #L3d9b40.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9b46.  v1:= v4.`l.d.h` @type ^`int`;
  #L3d9b4a.  if v1 == v3 then goto L3d9b68;
  #L3d9b4e.  v1:= "max-stale=" @kind object;
  #L3d9b52.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9b58.  v1:= v4.`l.d.h` @type ^`int`;
  #L3d9b5c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9b62.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9b68.  v1:= v4.`l.d.i` @type ^`int`;
  #L3d9b6c.  if v1 == v3 then goto L3d9b8a;
  #L3d9b70.  v1:= "min-fresh=" @kind object;
  #L3d9b74.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9b7a.  v1:= v4.`l.d.i` @type ^`int`;
  #L3d9b7e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9b84.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9b8a.  v1:= v4.`l.d.j` @type ^`boolean` @kind boolean;
  #L3d9b8e.  if v1 == 0 then goto L3d9b9c;
  #L3d9b92.  v1:= "only-if-cached, " @kind object;
  #L3d9b96.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9b9c.  v1:= v4.`l.d.k` @type ^`boolean` @kind boolean;
  #L3d9ba0.  if v1 == 0 then goto L3d9bae;
  #L3d9ba4.  v1:= "no-transform, " @kind object;
  #L3d9ba8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9bae.  v1:= v4.`l.d.l` @type ^`boolean` @kind boolean;
  #L3d9bb2.  if v1 == 0 then goto L3d9bc0;
  #L3d9bb6.  v1:= "immutable, " @kind object;
  #L3d9bba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9bc0.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3d9bc6.  v1:= temp;
  #L3d9bc8.  if v1 != 0 then goto L3d9bd2;
  #L3d9bcc.  v0:= "" @kind object;
  #L3d9bd0.  return v0 @kind object;
  #L3d9bd2.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3d9bd8.  v1:= temp;
  #L3d9bda.  v1:= v1 + -2;
  #L3d9bde.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3d9be4.  v2:= temp;
  #L3d9be6.  call temp:= `delete`(v0, v1, v2) @signature `Ljava/lang/StringBuilder;.delete:(II)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9bec.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d9bf2.  v0:= temp @kind object;
  #L3d9bf4.  return v0 @kind object;
}
procedure `boolean` `a`(`l.d` v1 @kind this) @signature `Ll/d;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d99c0.  v0:= v1.`l.d.e` @type ^`boolean` @kind boolean;
  #L3d99c4.  return v0;
}
procedure `boolean` `b`(`l.d` v1 @kind this) @signature `Ll/d;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d99d8.  v0:= v1.`l.d.f` @type ^`boolean` @kind boolean;
  #L3d99dc.  return v0;
}
procedure `int` `c`(`l.d` v1 @kind this) @signature `Ll/d;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d9a50.  v0:= v1.`l.d.c` @type ^`int`;
  #L3d9a54.  return v0;
}
procedure `int` `d`(`l.d` v1 @kind this) @signature `Ll/d;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d9a68.  v0:= v1.`l.d.h` @type ^`int`;
  #L3d9a6c.  return v0;
}
procedure `int` `e`(`l.d` v1 @kind this) @signature `Ll/d;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d9a80.  v0:= v1.`l.d.i` @type ^`int`;
  #L3d9a84.  return v0;
}
procedure `boolean` `f`(`l.d` v1 @kind this) @signature `Ll/d;.f:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d99f0.  v0:= v1.`l.d.g` @type ^`boolean` @kind boolean;
  #L3d99f4.  return v0;
}
procedure `boolean` `g`(`l.d` v1 @kind this) @signature `Ll/d;.g:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d9a08.  v0:= v1.`l.d.a` @type ^`boolean` @kind boolean;
  #L3d9a0c.  return v0;
}
procedure `boolean` `h`(`l.d` v1 @kind this) @signature `Ll/d;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d9a20.  v0:= v1.`l.d.b` @type ^`boolean` @kind boolean;
  #L3d9a24.  return v0;
}
procedure `boolean` `i`(`l.d` v1 @kind this) @signature `Ll/d;.i:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d9a38.  v0:= v1.`l.d.j` @type ^`boolean` @kind boolean;
  #L3d9a3c.  return v0;
}
procedure `java.lang.String` `toString`(`l.d` v1 @kind this) @signature `Ll/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d9c08.  v0:= v1.`l.d.m` @type ^`java.lang.String` @kind object;
  #L3d9c0c.  if v0 == 0 then goto L3d9c12;
  #L3d9c10.  goto L3d9c1e;
  #L3d9c12.  call temp:= `j`(v1) @signature `Ll/d;.j:()Ljava/lang/String;` @kind direct;
  #L3d9c18.  v0:= temp @kind object;
  #L3d9c1a.  v1.`l.d.m` @type ^`java.lang.String` := v0 @kind object;
  #L3d9c1e.  return v0 @kind object;
}
