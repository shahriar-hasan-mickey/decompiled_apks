record `l.a0` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `l.y` `l.a0.b` @AccessFlag FINAL;
  `l.w` `l.a0.c` @AccessFlag FINAL;
  `int` `l.a0.d` @AccessFlag FINAL;
  `java.lang.String` `l.a0.e` @AccessFlag FINAL;
  `l.q` `l.a0.f` @AccessFlag FINAL;
  `l.r` `l.a0.g` @AccessFlag FINAL;
  `l.b0` `l.a0.h` @AccessFlag FINAL;
  `l.a0` `l.a0.i` @AccessFlag FINAL;
  `l.a0` `l.a0.j` @AccessFlag FINAL;
  `l.a0` `l.a0.k` @AccessFlag FINAL;
  `long` `l.a0.l` @AccessFlag FINAL;
  `long` `l.a0.m` @AccessFlag FINAL;
  `l.d` `l.a0.n` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`l.a0` v2 @kind this, `l.a0$a` v3 @kind object) @signature `Ll/a0;.<init>:(Ll/a0$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3e0f74.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e0f7a.  v0:= v3.`l.a0$a.a` @type ^`l.y` @kind object;
  #L3e0f7e.  v2.`l.a0.b` @type ^`l.y` := v0 @kind object;
  #L3e0f82.  v0:= v3.`l.a0$a.b` @type ^`l.w` @kind object;
  #L3e0f86.  v2.`l.a0.c` @type ^`l.w` := v0 @kind object;
  #L3e0f8a.  v0:= v3.`l.a0$a.c` @type ^`int`;
  #L3e0f8e.  v2.`l.a0.d` @type ^`int` := v0;
  #L3e0f92.  v0:= v3.`l.a0$a.d` @type ^`java.lang.String` @kind object;
  #L3e0f96.  v2.`l.a0.e` @type ^`java.lang.String` := v0 @kind object;
  #L3e0f9a.  v0:= v3.`l.a0$a.e` @type ^`l.q` @kind object;
  #L3e0f9e.  v2.`l.a0.f` @type ^`l.q` := v0 @kind object;
  #L3e0fa2.  v0:= v3.`l.a0$a.f` @type ^`l.r$a` @kind object;
  #L3e0fa6.  call temp:= `a`(v0) @signature `Ll/r$a;.a:()Ll/r;` @kind virtual;
  #L3e0fac.  v0:= temp @kind object;
  #L3e0fae.  v2.`l.a0.g` @type ^`l.r` := v0 @kind object;
  #L3e0fb2.  v0:= v3.`l.a0$a.g` @type ^`l.b0` @kind object;
  #L3e0fb6.  v2.`l.a0.h` @type ^`l.b0` := v0 @kind object;
  #L3e0fba.  v0:= v3.`l.a0$a.h` @type ^`l.a0` @kind object;
  #L3e0fbe.  v2.`l.a0.i` @type ^`l.a0` := v0 @kind object;
  #L3e0fc2.  v0:= v3.`l.a0$a.i` @type ^`l.a0` @kind object;
  #L3e0fc6.  v2.`l.a0.j` @type ^`l.a0` := v0 @kind object;
  #L3e0fca.  v0:= v3.`l.a0$a.j` @type ^`l.a0` @kind object;
  #L3e0fce.  v2.`l.a0.k` @type ^`l.a0` := v0 @kind object;
  #L3e0fd2.  v0:= v3.`l.a0$a.k` @type ^`long` @kind wide;
  #L3e0fd6.  v2.`l.a0.l` @type ^`long` := v0 @kind wide;
  #L3e0fda.  v0:= v3.`l.a0$a.l` @type ^`long` @kind wide;
  #L3e0fde.  v2.`l.a0.m` @type ^`long` := v0 @kind wide;
  #L3e0fe2.  return @kind void;
}
procedure `java.lang.String` `a`(`l.a0` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Ll/a0;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e0dd4.  v0:= v1.`l.a0.g` @type ^`l.r` @kind object;
  #L3e0dd8.  call temp:= `a`(v0, v2) @signature `Ll/r;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3e0dde.  v2:= temp @kind object;
  #L3e0de0.  if v2 == 0 then goto L3e0de6;
  #L3e0de4.  goto L3e0de8;
  #L3e0de6.  v2:= v3 @kind object;
  #L3e0de8.  return v2 @kind object;
}
procedure `java.lang.String` `b`(`l.a0` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Ll/a0;.b:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e0db8.  v0:= 0I;
  #L3e0dba.  call temp:= `a`(v1, v2, v0) @signature `Ll/a0;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3e0dc0.  v2:= temp @kind object;
  #L3e0dc2.  return v2 @kind object;
}
procedure `void` `close`(`l.a0` v2 @kind this) @signature `Ll/a0;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e0ff4.  v0:= v2.`l.a0.h` @type ^`l.b0` @kind object;
  #L3e0ff8.  if v0 == 0 then goto L3e1004;
  #L3e0ffc.  call `close`(v0) @signature `Ll/b0;.close:()V` @kind virtual;
  #L3e1002.  return @kind void;
  #L3e1004.  v0:= new `java.lang.IllegalStateException`;
  #L3e1008.  v1:= "response is not eligible for a body and must not be closed" @kind object;
  #L3e100c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e1012.  throw v0;
}
procedure `l.b0` `k`(`l.a0` v1 @kind this) @signature `Ll/a0;.k:()Ll/b0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e0f5c.  v0:= v1.`l.a0.h` @type ^`l.b0` @kind object;
  #L3e0f60.  return v0 @kind object;
}
procedure `l.d` `l`(`l.a0` v1 @kind this) @signature `Ll/a0;.l:()Ll/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e0eb4.  v0:= v1.`l.a0.n` @type ^`l.d` @kind object;
  #L3e0eb8.  if v0 == 0 then goto L3e0ebe;
  #L3e0ebc.  goto L3e0ece;
  #L3e0ebe.  v0:= v1.`l.a0.g` @type ^`l.r` @kind object;
  #L3e0ec2.  call temp:= `a`(v0) @signature `Ll/d;.a:(Ll/r;)Ll/d;` @kind static;
  #L3e0ec8.  v0:= temp @kind object;
  #L3e0eca.  v1.`l.a0.n` @type ^`l.d` := v0 @kind object;
  #L3e0ece.  return v0 @kind object;
}
procedure `int` `m`(`l.a0` v1 @kind this) @signature `Ll/a0;.m:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e0da0.  v0:= v1.`l.a0.d` @type ^`int`;
  #L3e0da4.  return v0;
}
procedure `l.q` `n`(`l.a0` v1 @kind this) @signature `Ll/a0;.n:()Ll/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e0ee0.  v0:= v1.`l.a0.f` @type ^`l.q` @kind object;
  #L3e0ee4.  return v0 @kind object;
}
procedure `l.r` `o`(`l.a0` v1 @kind this) @signature `Ll/a0;.o:()Ll/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e0ef8.  v0:= v1.`l.a0.g` @type ^`l.r` @kind object;
  #L3e0efc.  return v0 @kind object;
}
procedure `l.a0$a` `p`(`l.a0` v1 @kind this) @signature `Ll/a0;.p:()Ll/a0$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e0f40.  v0:= new `l.a0$a`;
  #L3e0f44.  call `<init>`(v0, v1) @signature `Ll/a0$a;.<init>:(Ll/a0;)V` @kind direct;
  #L3e0f4a.  return v0 @kind object;
}
procedure `l.a0` `q`(`l.a0` v1 @kind this) @signature `Ll/a0;.q:()Ll/a0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e0f28.  v0:= v1.`l.a0.k` @type ^`l.a0` @kind object;
  #L3e0f2c.  return v0 @kind object;
}
procedure `long` `r`(`l.a0` v2 @kind this) @signature `Ll/a0;.r:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e0e84.  v0:= v2.`l.a0.m` @type ^`long` @kind wide;
  #L3e0e88.  return v0 @kind wide;
}
procedure `l.y` `s`(`l.a0` v1 @kind this) @signature `Ll/a0;.s:()Ll/y;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e0f10.  v0:= v1.`l.a0.b` @type ^`l.y` @kind object;
  #L3e0f14.  return v0 @kind object;
}
procedure `long` `t`(`l.a0` v2 @kind this) @signature `Ll/a0;.t:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e0e9c.  v0:= v2.`l.a0.l` @type ^`long` @kind wide;
  #L3e0ea0.  return v0 @kind wide;
}
procedure `java.lang.String` `toString`(`l.a0` v2 @kind this) @signature `Ll/a0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e0dfc.  v0:= new `java.lang.StringBuilder`;
  #L3e0e00.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e0e06.  v1:= "Response{protocol=" @kind object;
  #L3e0e0a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0e10.  v1:= v2.`l.a0.c` @type ^`l.w` @kind object;
  #L3e0e14.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0e1a.  v1:= ", code=" @kind object;
  #L3e0e1e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0e24.  v1:= v2.`l.a0.d` @type ^`int`;
  #L3e0e28.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0e2e.  v1:= ", message=" @kind object;
  #L3e0e32.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0e38.  v1:= v2.`l.a0.e` @type ^`java.lang.String` @kind object;
  #L3e0e3c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0e42.  v1:= ", url=" @kind object;
  #L3e0e46.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0e4c.  v1:= v2.`l.a0.b` @type ^`l.y` @kind object;
  #L3e0e50.  call temp:= `g`(v1) @signature `Ll/y;.g:()Ll/s;` @kind virtual;
  #L3e0e56.  v1:= temp @kind object;
  #L3e0e58.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0e5e.  v1:= 125I;
  #L3e0e62.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0e68.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e0e6e.  v0:= temp @kind object;
  #L3e0e70.  return v0 @kind object;
}
