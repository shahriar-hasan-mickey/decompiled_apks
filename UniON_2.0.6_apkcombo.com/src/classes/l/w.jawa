record `l.w` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `l.w.b` @AccessFlag PRIVATE_FINAL;
}
global `l.w` `@@l.w.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `l.w` `@@l.w.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `l.w` `@@l.w.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `l.w` `@@l.w.f` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `l.w` `@@l.w.g` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `l.w` `@@l.w.h` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `l.w`[] `@@l.w.i` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Ll/w;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3dfa8c.  v0:= new `l.w`;
  #L3dfa90.  v1:= 0I;
  #L3dfa92.  v2:= "HTTP_1_0" @kind object;
  #L3dfa96.  v3:= "http/1.0" @kind object;
  #L3dfa9a.  call `<init>`(v0, v2, v1, v3) @signature `Ll/w;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L3dfaa0.  `@@l.w.c` @type ^`l.w` := v0 @kind object;
  #L3dfaa4.  v0:= new `l.w`;
  #L3dfaa8.  v2:= 1I;
  #L3dfaaa.  v3:= "HTTP_1_1" @kind object;
  #L3dfaae.  v4:= "http/1.1" @kind object;
  #L3dfab2.  call `<init>`(v0, v3, v2, v4) @signature `Ll/w;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L3dfab8.  `@@l.w.d` @type ^`l.w` := v0 @kind object;
  #L3dfabc.  v0:= new `l.w`;
  #L3dfac0.  v3:= 2I;
  #L3dfac2.  v4:= "SPDY_3" @kind object;
  #L3dfac6.  v5:= "spdy/3.1" @kind object;
  #L3dfaca.  call `<init>`(v0, v4, v3, v5) @signature `Ll/w;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L3dfad0.  `@@l.w.e` @type ^`l.w` := v0 @kind object;
  #L3dfad4.  v0:= new `l.w`;
  #L3dfad8.  v4:= 3I;
  #L3dfada.  v5:= "HTTP_2" @kind object;
  #L3dfade.  v6:= "h2" @kind object;
  #L3dfae2.  call `<init>`(v0, v5, v4, v6) @signature `Ll/w;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L3dfae8.  `@@l.w.f` @type ^`l.w` := v0 @kind object;
  #L3dfaec.  v0:= new `l.w`;
  #L3dfaf0.  v5:= 4I;
  #L3dfaf2.  v6:= "H2_PRIOR_KNOWLEDGE" @kind object;
  #L3dfaf6.  v7:= "h2_prior_knowledge" @kind object;
  #L3dfafa.  call `<init>`(v0, v6, v5, v7) @signature `Ll/w;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L3dfb00.  `@@l.w.g` @type ^`l.w` := v0 @kind object;
  #L3dfb04.  v0:= new `l.w`;
  #L3dfb08.  v6:= 5I;
  #L3dfb0a.  v7:= "QUIC" @kind object;
  #L3dfb0e.  v8:= "quic" @kind object;
  #L3dfb12.  call `<init>`(v0, v7, v6, v8) @signature `Ll/w;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L3dfb18.  `@@l.w.h` @type ^`l.w` := v0 @kind object;
  #L3dfb1c.  v0:= 6I;
  #L3dfb1e.  v0:= new `l.w`[v0];
  #L3dfb22.  v7:= `@@l.w.c` @type ^`l.w` @kind object;
  #L3dfb26.  v0[v1]:= v7 @kind object;
  #L3dfb2a.  v1:= `@@l.w.d` @type ^`l.w` @kind object;
  #L3dfb2e.  v0[v2]:= v1 @kind object;
  #L3dfb32.  v1:= `@@l.w.e` @type ^`l.w` @kind object;
  #L3dfb36.  v0[v3]:= v1 @kind object;
  #L3dfb3a.  v1:= `@@l.w.f` @type ^`l.w` @kind object;
  #L3dfb3e.  v0[v4]:= v1 @kind object;
  #L3dfb42.  v1:= `@@l.w.g` @type ^`l.w` @kind object;
  #L3dfb46.  v0[v5]:= v1 @kind object;
  #L3dfb4a.  v1:= `@@l.w.h` @type ^`l.w` @kind object;
  #L3dfb4e.  v0[v6]:= v1 @kind object;
  #L3dfb52.  `@@l.w.i` @type ^`l.w`[] := v0 @kind object;
  #L3dfb56.  return @kind void;
}
procedure `void` `<init>`(`l.w` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Ll/w;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3dfb68.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3dfb6e.  v0.`l.w.b` @type ^`java.lang.String` := v3 @kind object;
  #L3dfb72.  return @kind void;
}
procedure `l.w` `a`(`java.lang.String` v3 @kind object) @signature `Ll/w;.a:(Ljava/lang/String;)Ll/w;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3df968.  v0:= `@@l.w.c` @type ^`l.w` @kind object;
  #L3df96c.  v0:= v0.`l.w.b` @type ^`java.lang.String` @kind object;
  #L3df970.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3df976.  v0:= temp;
  #L3df978.  if v0 == 0 then goto L3df982;
  #L3df97c.  v3:= `@@l.w.c` @type ^`l.w` @kind object;
  #L3df980.  return v3 @kind object;
  #L3df982.  v0:= `@@l.w.d` @type ^`l.w` @kind object;
  #L3df986.  v0:= v0.`l.w.b` @type ^`java.lang.String` @kind object;
  #L3df98a.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3df990.  v0:= temp;
  #L3df992.  if v0 == 0 then goto L3df99c;
  #L3df996.  v3:= `@@l.w.d` @type ^`l.w` @kind object;
  #L3df99a.  return v3 @kind object;
  #L3df99c.  v0:= `@@l.w.g` @type ^`l.w` @kind object;
  #L3df9a0.  v0:= v0.`l.w.b` @type ^`java.lang.String` @kind object;
  #L3df9a4.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3df9aa.  v0:= temp;
  #L3df9ac.  if v0 == 0 then goto L3df9b6;
  #L3df9b0.  v3:= `@@l.w.g` @type ^`l.w` @kind object;
  #L3df9b4.  return v3 @kind object;
  #L3df9b6.  v0:= `@@l.w.f` @type ^`l.w` @kind object;
  #L3df9ba.  v0:= v0.`l.w.b` @type ^`java.lang.String` @kind object;
  #L3df9be.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3df9c4.  v0:= temp;
  #L3df9c6.  if v0 == 0 then goto L3df9d0;
  #L3df9ca.  v3:= `@@l.w.f` @type ^`l.w` @kind object;
  #L3df9ce.  return v3 @kind object;
  #L3df9d0.  v0:= `@@l.w.e` @type ^`l.w` @kind object;
  #L3df9d4.  v0:= v0.`l.w.b` @type ^`java.lang.String` @kind object;
  #L3df9d8.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3df9de.  v0:= temp;
  #L3df9e0.  if v0 == 0 then goto L3df9ea;
  #L3df9e4.  v3:= `@@l.w.e` @type ^`l.w` @kind object;
  #L3df9e8.  return v3 @kind object;
  #L3df9ea.  v0:= `@@l.w.h` @type ^`l.w` @kind object;
  #L3df9ee.  v0:= v0.`l.w.b` @type ^`java.lang.String` @kind object;
  #L3df9f2.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3df9f8.  v0:= temp;
  #L3df9fa.  if v0 == 0 then goto L3dfa04;
  #L3df9fe.  v3:= `@@l.w.h` @type ^`l.w` @kind object;
  #L3dfa02.  return v3 @kind object;
  #L3dfa04.  v0:= new `java.io.IOException`;
  #L3dfa08.  v1:= new `java.lang.StringBuilder`;
  #L3dfa0c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3dfa12.  v2:= "Unexpected protocol: " @kind object;
  #L3dfa16.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dfa1c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dfa22.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3dfa28.  v3:= temp @kind object;
  #L3dfa2a.  call `<init>`(v0, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dfa30.  throw v0;
}
procedure `l.w` `valueOf`(`java.lang.String` v1 @kind object) @signature `Ll/w;.valueOf:(Ljava/lang/String;)Ll/w;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dfa44.  v0:= constclass @type ^`l.w` @kind object;
  #L3dfa48.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L3dfa4e.  v1:= temp @kind object;
  #L3dfa50.  v1:= (`l.w`) v1 @kind object;
  #L3dfa54.  return v1 @kind object;
}
procedure `l.w`[] `values`() @signature `Ll/w;.values:()[Ll/w;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dfa68.  v0:= `@@l.w.i` @type ^`l.w`[] @kind object;
  #L3dfa6c.  call temp:= `clone`(v0) @signature `[Ll/w;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3dfa72.  v0:= temp @kind object;
  #L3dfa74.  v0:= (`l.w`[]) v0 @kind object;
  #L3dfa78.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`l.w` v1 @kind this) @signature `Ll/w;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3df950.  v0:= v1.`l.w.b` @type ^`java.lang.String` @kind object;
  #L3df954.  return v0 @kind object;
}
