record `l.d$a` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `l.d$a.a` @AccessFlag ;
  `boolean` `l.d$a.b` @AccessFlag ;
  `int` `l.d$a.c` @AccessFlag ;
  `int` `l.d$a.d` @AccessFlag ;
  `int` `l.d$a.e` @AccessFlag ;
  `boolean` `l.d$a.f` @AccessFlag ;
  `boolean` `l.d$a.g` @AccessFlag ;
  `boolean` `l.d$a.h` @AccessFlag ;
}
procedure `void` `<init>`(`l.d$a` v1 @kind this) @signature `Ll/d$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d9998.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d999e.  v0:= -1I;
  #L3d99a0.  v1.`l.d$a.c` @type ^`int` := v0;
  #L3d99a4.  v1.`l.d$a.d` @type ^`int` := v0;
  #L3d99a8.  v1.`l.d$a.e` @type ^`int` := v0;
  #L3d99ac.  return @kind void;
}
procedure `l.d$a` `a`(`l.d$a` v3 @kind this, `int` v4 , `java.util.concurrent.TimeUnit` v5 @kind object) @signature `Ll/d$a;.a:(ILjava/util/concurrent/TimeUnit;)Ll/d$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d98fc.  if v4 < 0 then goto L3d9928;
  #L3d9900.  v0:= (`long`) v4 @kind i2l;
  #L3d9902.  call temp:= `toSeconds`(v5, v0) @signature `Ljava/util/concurrent/TimeUnit;.toSeconds:(J)J` @kind virtual;
  #L3d9908.  v4:= temp @kind wide;
  #L3d990a.  v0:= 2147483647L;
  #L3d9910.  v2:= lcmp(v4, v0);
  #L3d9914.  if v2 <= 0 then goto L3d9920;
  #L3d9918.  v4:= 2147483647I;
  #L3d991e.  goto L3d9922;
  #L3d9920.  v4:= (`int`) v4 @kind l2i;
  #L3d9922.  v3.`l.d$a.d` @type ^`int` := v4;
  #L3d9926.  return v3 @kind object;
  #L3d9928.  v5:= new `java.lang.IllegalArgumentException`;
  #L3d992c.  v0:= new `java.lang.StringBuilder`;
  #L3d9930.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d9936.  v1:= "maxStale < 0: " @kind object;
  #L3d993a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9940.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9946.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d994c.  v4:= temp @kind object;
  #L3d994e.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d9954.  throw v5;
}
procedure `l.d` `a`(`l.d$a` v1 @kind this) @signature `Ll/d$a;.a:()Ll/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d98e0.  v0:= new `l.d`;
  #L3d98e4.  call `<init>`(v0, v1) @signature `Ll/d;.<init>:(Ll/d$a;)V` @kind direct;
  #L3d98ea.  return v0 @kind object;
}
procedure `l.d$a` `b`(`l.d$a` v1 @kind this) @signature `Ll/d$a;.b:()Ll/d$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d9968.  v0:= 1I;
  #L3d996a.  v1.`l.d$a.a` @type ^`boolean` := v0 @kind boolean;
  #L3d996e.  return v1 @kind object;
}
procedure `l.d$a` `c`(`l.d$a` v1 @kind this) @signature `Ll/d$a;.c:()Ll/d$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d9980.  v0:= 1I;
  #L3d9982.  v1.`l.d$a.f` @type ^`boolean` := v0 @kind boolean;
  #L3d9986.  return v1 @kind object;
}
