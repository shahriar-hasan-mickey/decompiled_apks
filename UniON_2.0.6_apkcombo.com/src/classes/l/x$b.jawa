record `l.x$b` @kind class @AccessFlag FINAL extends `l.f0.b` @kind class {
  `l.f` `l.x$b.c` @AccessFlag PRIVATE_FINAL;
  `l.x` `l.x$b.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<clinit>`() @signature `Ll/x$b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3dfc00.  v0:= constclass @type ^`l.x` @kind object;
  #L3dfc04.  return @kind void;
}
procedure `void` `a`(`l.x$b` v2 @kind this, `java.util.concurrent.ExecutorService` v3 @kind object) @signature `Ll/x$b;.a:(Ljava/util/concurrent/ExecutorService;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3dfd64.  call `execute`(v3, v2) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L3dfd6a.  goto L3dfdc0;
  #L3dfd6c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3dfd6e.  goto L3dfdc2;
  #L3dfd70.  v3:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L3dfd72.  v0:= new `java.io.InterruptedIOException`;
  #L3dfd76.  v1:= "executor rejected" @kind object;
  #L3dfd7a.  call `<init>`(v0, v1) @signature `Ljava/io/InterruptedIOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dfd80.  call temp:= `initCause`(v0, v3) @signature `Ljava/io/InterruptedIOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L3dfd86.  v3:= v2.`l.x$b.d` @type ^`l.x` @kind object;
  #L3dfd8a.  call temp:= `a`(v3) @signature `Ll/x;.a:(Ll/x;)Ll/p;` @kind static;
  #L3dfd90.  v3:= temp @kind object;
  #L3dfd92.  v1:= v2.`l.x$b.d` @type ^`l.x` @kind object;
  #L3dfd96.  call `a`(v3, v1, v0) @signature `Ll/p;.a:(Ll/e;Ljava/io/IOException;)V` @kind virtual;
  #L3dfd9c.  v3:= v2.`l.x$b.c` @type ^`l.f` @kind object;
  #L3dfda0.  v1:= v2.`l.x$b.d` @type ^`l.x` @kind object;
  #L3dfda4.  call `a`(v3, v1, v0) @signature `Ll/f;.a:(Ll/e;Ljava/io/IOException;)V` @kind interface;
  #L3dfdaa.  v3:= v2.`l.x$b.d` @type ^`l.x` @kind object;
  #L3dfdae.  v3:= v3.`l.x.b` @type ^`l.v` @kind object;
  #L3dfdb2.  call temp:= `j`(v3) @signature `Ll/v;.j:()Ll/n;` @kind virtual;
  #L3dfdb8.  v3:= temp @kind object;
  #L3dfdba.  call `a`(v3, v2) @signature `Ll/n;.a:(Ll/x$b;)V` @kind virtual;
  #L3dfdc0.  return @kind void;
  #L3dfdc2.  v0:= v2.`l.x$b.d` @type ^`l.x` @kind object;
  #L3dfdc6.  v0:= v0.`l.x.b` @type ^`l.v` @kind object;
  #L3dfdca.  call temp:= `j`(v0) @signature `Ll/v;.j:()Ll/n;` @kind virtual;
  #L3dfdd0.  v0:= temp @kind object;
  #L3dfdd2.  call `a`(v0, v2) @signature `Ll/n;.a:(Ll/x$b;)V` @kind virtual;
  #L3dfdd8.  throw v3;
  catch `java.util.concurrent.RejectedExecutionException` @[L3dfd64..L3dfd6a] goto L3dfd70;
  catch `java.lang.Throwable` @[L3dfd64..L3dfd6a] goto L3dfd6c;
  catch `java.lang.Throwable` @[L3dfd72..L3dfdaa] goto L3dfd6c;
}
procedure `void` `b`(`l.x$b` v5 @kind this) @signature `Ll/x$b;.b:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3dfc18.  v0:= v5.`l.x$b.d` @type ^`l.x` @kind object;
  #L3dfc1c.  v0:= v0.`l.x.d` @type ^`m.a` @kind object;
  #L3dfc20.  call `g`(v0) @signature `Lm/a;.g:()V` @kind virtual;
  #L3dfc26.  v0:= 1I;
  #L3dfc28.  v1:= 0I;
  #L3dfc2a.  v2:= v5.`l.x$b.d` @type ^`l.x` @kind object;
  #L3dfc2e.  call temp:= `b`(v2) @signature `Ll/x;.b:()Ll/a0;` @kind virtual;
  #L3dfc34.  v2:= temp @kind object;
  #L3dfc36.  v3:= v5.`l.x$b.d` @type ^`l.x` @kind object;
  #L3dfc3a.  v3:= v3.`l.x.c` @type ^`l.f0.g.j` @kind object;
  #L3dfc3e.  call temp:= `b`(v3) @signature `Ll/f0/g/j;.b:()Z` @kind virtual;
  #L3dfc44.  v1:= temp;
  #L3dfc46.  if v1 == 0 then goto L3dfc68;
  #L3dfc4a.  v1:= v5.`l.x$b.c` @type ^`l.f` @kind object;
  #L3dfc4e.  v2:= v5.`l.x$b.d` @type ^`l.x` @kind object;
  #L3dfc52.  v3:= new `java.io.IOException`;
  #L3dfc56.  v4:= "Canceled" @kind object;
  #L3dfc5a.  call `<init>`(v3, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dfc60.  call `a`(v1, v2, v3) @signature `Ll/f;.a:(Ll/e;Ljava/io/IOException;)V` @kind interface;
  #L3dfc66.  goto L3dfc76;
  #L3dfc68.  v1:= v5.`l.x$b.c` @type ^`l.f` @kind object;
  #L3dfc6c.  v3:= v5.`l.x$b.d` @type ^`l.x` @kind object;
  #L3dfc70.  call `a`(v1, v3, v2) @signature `Ll/f;.a:(Ll/e;Ll/a0;)V` @kind interface;
  #L3dfc76.  v0:= v5.`l.x$b.d` @type ^`l.x` @kind object;
  #L3dfc7a.  v0:= v0.`l.x.b` @type ^`l.v` @kind object;
  #L3dfc7e.  call temp:= `j`(v0) @signature `Ll/v;.j:()Ll/n;` @kind virtual;
  #L3dfc84.  v0:= temp @kind object;
  #L3dfc86.  call `a`(v0, v5) @signature `Ll/n;.a:(Ll/x$b;)V` @kind virtual;
  #L3dfc8c.  goto L3dfd12;
  #L3dfc8e.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L3dfc90.  goto L3dfc9c;
  #L3dfc92.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3dfc94.  goto L3dfd14;
  #L3dfc96.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3dfc98.  v1:= v0 @kind object;
  #L3dfc9a.  v0:= 0I;
  #L3dfc9c.  v2:= v5.`l.x$b.d` @type ^`l.x` @kind object;
  #L3dfca0.  call temp:= `a`(v2, v1) @signature `Ll/x;.a:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L3dfca6.  v1:= temp @kind object;
  #L3dfca8.  if v0 == 0 then goto L3dfcec;
  #L3dfcac.  call temp:= `c`() @signature `Ll/f0/j/f;.c:()Ll/f0/j/f;` @kind static;
  #L3dfcb2.  v0:= temp @kind object;
  #L3dfcb4.  v2:= 4I;
  #L3dfcb6.  v3:= new `java.lang.StringBuilder`;
  #L3dfcba.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3dfcc0.  v4:= "Callback failure for " @kind object;
  #L3dfcc4.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dfcca.  v4:= v5.`l.x$b.d` @type ^`l.x` @kind object;
  #L3dfcce.  call temp:= `e`(v4) @signature `Ll/x;.e:()Ljava/lang/String;` @kind virtual;
  #L3dfcd4.  v4:= temp @kind object;
  #L3dfcd6.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dfcdc.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3dfce2.  v3:= temp @kind object;
  #L3dfce4.  call `a`(v0, v2, v3, v1) @signature `Ll/f0/j/f;.a:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L3dfcea.  goto L3dfc76;
  #L3dfcec.  v0:= v5.`l.x$b.d` @type ^`l.x` @kind object;
  #L3dfcf0.  call temp:= `a`(v0) @signature `Ll/x;.a:(Ll/x;)Ll/p;` @kind static;
  #L3dfcf6.  v0:= temp @kind object;
  #L3dfcf8.  v2:= v5.`l.x$b.d` @type ^`l.x` @kind object;
  #L3dfcfc.  call `a`(v0, v2, v1) @signature `Ll/p;.a:(Ll/e;Ljava/io/IOException;)V` @kind virtual;
  #L3dfd02.  v0:= v5.`l.x$b.c` @type ^`l.f` @kind object;
  #L3dfd06.  v2:= v5.`l.x$b.d` @type ^`l.x` @kind object;
  #L3dfd0a.  call `a`(v0, v2, v1) @signature `Ll/f;.a:(Ll/e;Ljava/io/IOException;)V` @kind interface;
  #L3dfd10.  goto L3dfc76;
  #L3dfd12.  return @kind void;
  #L3dfd14.  v1:= v5.`l.x$b.d` @type ^`l.x` @kind object;
  #L3dfd18.  v1:= v1.`l.x.b` @type ^`l.v` @kind object;
  #L3dfd1c.  call temp:= `j`(v1) @signature `Ll/v;.j:()Ll/n;` @kind virtual;
  #L3dfd22.  v1:= temp @kind object;
  #L3dfd24.  call `a`(v1, v5) @signature `Ll/n;.a:(Ll/x$b;)V` @kind virtual;
  #L3dfd2a.  throw v0;
  catch `java.io.IOException` @[L3dfc2a..L3dfc46] goto L3dfc96;
  catch `java.lang.Throwable` @[L3dfc2a..L3dfc46] goto L3dfc92;
  catch `java.io.IOException` @[L3dfc4a..L3dfc76] goto L3dfc8e;
  catch `java.lang.Throwable` @[L3dfc4a..L3dfc76] goto L3dfc92;
  catch `java.lang.Throwable` @[L3dfc9c..L3dfd10] goto L3dfc92;
}
procedure `l.x` `c`(`l.x$b` v1 @kind this) @signature `Ll/x$b;.c:()Ll/x;` @AccessFlag  {
    temp;
    v0;

  #L3dfbe8.  v0:= v1.`l.x$b.d` @type ^`l.x` @kind object;
  #L3dfbec.  return v0 @kind object;
}
procedure `java.lang.String` `d`(`l.x$b` v1 @kind this) @signature `Ll/x$b;.d:()Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;

  #L3dfbbc.  v0:= v1.`l.x$b.d` @type ^`l.x` @kind object;
  #L3dfbc0.  v0:= v0.`l.x.f` @type ^`l.y` @kind object;
  #L3dfbc4.  call temp:= `g`(v0) @signature `Ll/y;.g:()Ll/s;` @kind virtual;
  #L3dfbca.  v0:= temp @kind object;
  #L3dfbcc.  call temp:= `g`(v0) @signature `Ll/s;.g:()Ljava/lang/String;` @kind virtual;
  #L3dfbd2.  v0:= temp @kind object;
  #L3dfbd4.  return v0 @kind object;
}
