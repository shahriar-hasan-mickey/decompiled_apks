record `l.a0$a` @kind class @AccessFlag PUBLIC {
  `l.y` `l.a0$a.a` @AccessFlag ;
  `l.w` `l.a0$a.b` @AccessFlag ;
  `int` `l.a0$a.c` @AccessFlag ;
  `java.lang.String` `l.a0$a.d` @AccessFlag ;
  `l.q` `l.a0$a.e` @AccessFlag ;
  `l.r$a` `l.a0$a.f` @AccessFlag ;
  `l.b0` `l.a0$a.g` @AccessFlag ;
  `l.a0` `l.a0$a.h` @AccessFlag ;
  `l.a0` `l.a0$a.i` @AccessFlag ;
  `l.a0` `l.a0$a.j` @AccessFlag ;
  `long` `l.a0$a.k` @AccessFlag ;
  `long` `l.a0$a.l` @AccessFlag ;
}
procedure `void` `<init>`(`l.a0$a` v1 @kind this) @signature `Ll/a0$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e0a50.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e0a56.  v0:= -1I;
  #L3e0a58.  v1.`l.a0$a.c` @type ^`int` := v0;
  #L3e0a5c.  v0:= new `l.r$a`;
  #L3e0a60.  call `<init>`(v0) @signature `Ll/r$a;.<init>:()V` @kind direct;
  #L3e0a66.  v1.`l.a0$a.f` @type ^`l.r$a` := v0 @kind object;
  #L3e0a6a.  return @kind void;
}
procedure `void` `<init>`(`l.a0$a` v2 @kind this, `l.a0` v3 @kind object) @signature `Ll/a0$a;.<init>:(Ll/a0;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3e0a7c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e0a82.  v0:= -1I;
  #L3e0a84.  v2.`l.a0$a.c` @type ^`int` := v0;
  #L3e0a88.  v0:= v3.`l.a0.b` @type ^`l.y` @kind object;
  #L3e0a8c.  v2.`l.a0$a.a` @type ^`l.y` := v0 @kind object;
  #L3e0a90.  v0:= v3.`l.a0.c` @type ^`l.w` @kind object;
  #L3e0a94.  v2.`l.a0$a.b` @type ^`l.w` := v0 @kind object;
  #L3e0a98.  v0:= v3.`l.a0.d` @type ^`int`;
  #L3e0a9c.  v2.`l.a0$a.c` @type ^`int` := v0;
  #L3e0aa0.  v0:= v3.`l.a0.e` @type ^`java.lang.String` @kind object;
  #L3e0aa4.  v2.`l.a0$a.d` @type ^`java.lang.String` := v0 @kind object;
  #L3e0aa8.  v0:= v3.`l.a0.f` @type ^`l.q` @kind object;
  #L3e0aac.  v2.`l.a0$a.e` @type ^`l.q` := v0 @kind object;
  #L3e0ab0.  v0:= v3.`l.a0.g` @type ^`l.r` @kind object;
  #L3e0ab4.  call temp:= `a`(v0) @signature `Ll/r;.a:()Ll/r$a;` @kind virtual;
  #L3e0aba.  v0:= temp @kind object;
  #L3e0abc.  v2.`l.a0$a.f` @type ^`l.r$a` := v0 @kind object;
  #L3e0ac0.  v0:= v3.`l.a0.h` @type ^`l.b0` @kind object;
  #L3e0ac4.  v2.`l.a0$a.g` @type ^`l.b0` := v0 @kind object;
  #L3e0ac8.  v0:= v3.`l.a0.i` @type ^`l.a0` @kind object;
  #L3e0acc.  v2.`l.a0$a.h` @type ^`l.a0` := v0 @kind object;
  #L3e0ad0.  v0:= v3.`l.a0.j` @type ^`l.a0` @kind object;
  #L3e0ad4.  v2.`l.a0$a.i` @type ^`l.a0` := v0 @kind object;
  #L3e0ad8.  v0:= v3.`l.a0.k` @type ^`l.a0` @kind object;
  #L3e0adc.  v2.`l.a0$a.j` @type ^`l.a0` := v0 @kind object;
  #L3e0ae0.  v0:= v3.`l.a0.l` @type ^`long` @kind wide;
  #L3e0ae4.  v2.`l.a0$a.k` @type ^`long` := v0 @kind wide;
  #L3e0ae8.  v0:= v3.`l.a0.m` @type ^`long` @kind wide;
  #L3e0aec.  v2.`l.a0$a.l` @type ^`long` := v0 @kind wide;
  #L3e0af0.  return @kind void;
}
procedure `void` `a`(`l.a0$a` v1 @kind this, `java.lang.String` v2 @kind object, `l.a0` v3 @kind object) @signature `Ll/a0$a;.a:(Ljava/lang/String;Ll/a0;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e0b30.  v0:= v3.`l.a0.h` @type ^`l.b0` @kind object;
  #L3e0b34.  if v0 != 0 then goto L3e0bdc;
  #L3e0b38.  v0:= v3.`l.a0.i` @type ^`l.a0` @kind object;
  #L3e0b3c.  if v0 != 0 then goto L3e0bae;
  #L3e0b40.  v0:= v3.`l.a0.j` @type ^`l.a0` @kind object;
  #L3e0b44.  if v0 != 0 then goto L3e0b80;
  #L3e0b48.  v3:= v3.`l.a0.k` @type ^`l.a0` @kind object;
  #L3e0b4c.  if v3 != 0 then goto L3e0b52;
  #L3e0b50.  return @kind void;
  #L3e0b52.  v3:= new `java.lang.IllegalArgumentException`;
  #L3e0b56.  v0:= new `java.lang.StringBuilder`;
  #L3e0b5a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e0b60.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0b66.  v2:= ".priorResponse != null" @kind object;
  #L3e0b6a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0b70.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e0b76.  v2:= temp @kind object;
  #L3e0b78.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e0b7e.  throw v3;
  #L3e0b80.  v3:= new `java.lang.IllegalArgumentException`;
  #L3e0b84.  v0:= new `java.lang.StringBuilder`;
  #L3e0b88.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e0b8e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0b94.  v2:= ".cacheResponse != null" @kind object;
  #L3e0b98.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0b9e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e0ba4.  v2:= temp @kind object;
  #L3e0ba6.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e0bac.  throw v3;
  #L3e0bae.  v3:= new `java.lang.IllegalArgumentException`;
  #L3e0bb2.  v0:= new `java.lang.StringBuilder`;
  #L3e0bb6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e0bbc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0bc2.  v2:= ".networkResponse != null" @kind object;
  #L3e0bc6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0bcc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e0bd2.  v2:= temp @kind object;
  #L3e0bd4.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e0bda.  throw v3;
  #L3e0bdc.  v3:= new `java.lang.IllegalArgumentException`;
  #L3e0be0.  v0:= new `java.lang.StringBuilder`;
  #L3e0be4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e0bea.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0bf0.  v2:= ".body != null" @kind object;
  #L3e0bf4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0bfa.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e0c00.  v2:= temp @kind object;
  #L3e0c02.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e0c08.  throw v3;
}
procedure `void` `d`(`l.a0$a` v1 @kind this, `l.a0` v2 @kind object) @signature `Ll/a0$a;.d:(Ll/a0;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e0b04.  v2:= v2.`l.a0.h` @type ^`l.b0` @kind object;
  #L3e0b08.  if v2 != 0 then goto L3e0b0e;
  #L3e0b0c.  return @kind void;
  #L3e0b0e.  v2:= new `java.lang.IllegalArgumentException`;
  #L3e0b12.  v0:= "priorResponse.body != null" @kind object;
  #L3e0b16.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e0b1c.  throw v2;
}
procedure `l.a0$a` `a`(`l.a0$a` v0 @kind this, `int` v1 ) @signature `Ll/a0$a;.a:(I)Ll/a0$a;` @AccessFlag PUBLIC {
    temp;

  #L3e0928.  v0.`l.a0$a.c` @type ^`int` := v1;
  #L3e092c.  return v0 @kind object;
}
procedure `l.a0$a` `a`(`l.a0$a` v0 @kind this, `long` v1 ) @signature `Ll/a0$a;.a:(J)Ll/a0$a;` @AccessFlag PUBLIC {
    temp;

  #L3e0a08.  v0.`l.a0$a.l` @type ^`long` := v1 @kind wide;
  #L3e0a0c.  return v0 @kind object;
}
procedure `l.a0$a` `a`(`l.a0$a` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Ll/a0$a;.a:(Ljava/lang/String;)Ll/a0$a;` @AccessFlag PUBLIC {
    temp;

  #L3e0994.  v0.`l.a0$a.d` @type ^`java.lang.String` := v1 @kind object;
  #L3e0998.  return v0 @kind object;
}
procedure `l.a0$a` `a`(`l.a0$a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Ll/a0$a;.a:(Ljava/lang/String;Ljava/lang/String;)Ll/a0$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e08d0.  v0:= v1.`l.a0$a.f` @type ^`l.r$a` @kind object;
  #L3e08d4.  call temp:= `a`(v0, v2, v3) @signature `Ll/r$a;.a:(Ljava/lang/String;Ljava/lang/String;)Ll/r$a;` @kind virtual;
  #L3e08da.  return v1 @kind object;
}
procedure `l.a0$a` `a`(`l.a0$a` v1 @kind this, `l.a0` v2 @kind object) @signature `Ll/a0$a;.a:(Ll/a0;)Ll/a0$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e0904.  if v2 == 0 then goto L3e0912;
  #L3e0908.  v0:= "cacheResponse" @kind object;
  #L3e090c.  call `a`(v1, v0, v2) @signature `Ll/a0$a;.a:(Ljava/lang/String;Ll/a0;)V` @kind direct;
  #L3e0912.  v1.`l.a0$a.i` @type ^`l.a0` := v2 @kind object;
  #L3e0916.  return v1 @kind object;
}
procedure `l.a0$a` `a`(`l.a0$a` v0 @kind this, `l.b0` v1 @kind object) @signature `Ll/a0$a;.a:(Ll/b0;)Ll/a0$a;` @AccessFlag PUBLIC {
    temp;

  #L3e08ec.  v0.`l.a0$a.g` @type ^`l.b0` := v1 @kind object;
  #L3e08f0.  return v0 @kind object;
}
procedure `l.a0$a` `a`(`l.a0$a` v0 @kind this, `l.q` v1 @kind object) @signature `Ll/a0$a;.a:(Ll/q;)Ll/a0$a;` @AccessFlag PUBLIC {
    temp;

  #L3e0940.  v0.`l.a0$a.e` @type ^`l.q` := v1 @kind object;
  #L3e0944.  return v0 @kind object;
}
procedure `l.a0$a` `a`(`l.a0$a` v0 @kind this, `l.r` v1 @kind object) @signature `Ll/a0$a;.a:(Ll/r;)Ll/a0$a;` @AccessFlag PUBLIC {
    temp;

  #L3e0974.  call temp:= `a`(v1) @signature `Ll/r;.a:()Ll/r$a;` @kind virtual;
  #L3e097a.  v1:= temp @kind object;
  #L3e097c.  v0.`l.a0$a.f` @type ^`l.r$a` := v1 @kind object;
  #L3e0980.  return v0 @kind object;
}
procedure `l.a0$a` `a`(`l.a0$a` v0 @kind this, `l.w` v1 @kind object) @signature `Ll/a0$a;.a:(Ll/w;)Ll/a0$a;` @AccessFlag PUBLIC {
    temp;

  #L3e09f0.  v0.`l.a0$a.b` @type ^`l.w` := v1 @kind object;
  #L3e09f4.  return v0 @kind object;
}
procedure `l.a0$a` `a`(`l.a0$a` v0 @kind this, `l.y` v1 @kind object) @signature `Ll/a0$a;.a:(Ll/y;)Ll/a0$a;` @AccessFlag PUBLIC {
    temp;

  #L3e0a20.  v0.`l.a0$a.a` @type ^`l.y` := v1 @kind object;
  #L3e0a24.  return v0 @kind object;
}
procedure `l.a0` `a`(`l.a0$a` v3 @kind this) @signature `Ll/a0$a;.a:()Ll/a0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e0830.  v0:= v3.`l.a0$a.a` @type ^`l.y` @kind object;
  #L3e0834.  if v0 == 0 then goto L3e08ae;
  #L3e0838.  v0:= v3.`l.a0$a.b` @type ^`l.w` @kind object;
  #L3e083c.  if v0 == 0 then goto L3e089e;
  #L3e0840.  v0:= v3.`l.a0$a.c` @type ^`int`;
  #L3e0844.  if v0 < 0 then goto L3e086c;
  #L3e0848.  v0:= v3.`l.a0$a.d` @type ^`java.lang.String` @kind object;
  #L3e084c.  if v0 == 0 then goto L3e085c;
  #L3e0850.  v0:= new `l.a0`;
  #L3e0854.  call `<init>`(v0, v3) @signature `Ll/a0;.<init>:(Ll/a0$a;)V` @kind direct;
  #L3e085a.  return v0 @kind object;
  #L3e085c.  v0:= new `java.lang.IllegalStateException`;
  #L3e0860.  v1:= "message == null" @kind object;
  #L3e0864.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e086a.  throw v0;
  #L3e086c.  v0:= new `java.lang.IllegalStateException`;
  #L3e0870.  v1:= new `java.lang.StringBuilder`;
  #L3e0874.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e087a.  v2:= "code < 0: " @kind object;
  #L3e087e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0884.  v2:= v3.`l.a0$a.c` @type ^`int`;
  #L3e0888.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e088e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e0894.  v1:= temp @kind object;
  #L3e0896.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e089c.  throw v0;
  #L3e089e.  v0:= new `java.lang.IllegalStateException`;
  #L3e08a2.  v1:= "protocol == null" @kind object;
  #L3e08a6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e08ac.  throw v0;
  #L3e08ae.  v0:= new `java.lang.IllegalStateException`;
  #L3e08b2.  v1:= "request == null" @kind object;
  #L3e08b6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e08bc.  throw v0;
}
procedure `l.a0$a` `b`(`l.a0$a` v0 @kind this, `long` v1 ) @signature `Ll/a0$a;.b:(J)Ll/a0$a;` @AccessFlag PUBLIC {
    temp;

  #L3e0a38.  v0.`l.a0$a.k` @type ^`long` := v1 @kind wide;
  #L3e0a3c.  return v0 @kind object;
}
procedure `l.a0$a` `b`(`l.a0$a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Ll/a0$a;.b:(Ljava/lang/String;Ljava/lang/String;)Ll/a0$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e0958.  v0:= v1.`l.a0$a.f` @type ^`l.r$a` @kind object;
  #L3e095c.  call temp:= `c`(v0, v2, v3) @signature `Ll/r$a;.c:(Ljava/lang/String;Ljava/lang/String;)Ll/r$a;` @kind virtual;
  #L3e0962.  return v1 @kind object;
}
procedure `l.a0$a` `b`(`l.a0$a` v1 @kind this, `l.a0` v2 @kind object) @signature `Ll/a0$a;.b:(Ll/a0;)Ll/a0$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e09ac.  if v2 == 0 then goto L3e09ba;
  #L3e09b0.  v0:= "networkResponse" @kind object;
  #L3e09b4.  call `a`(v1, v0, v2) @signature `Ll/a0$a;.a:(Ljava/lang/String;Ll/a0;)V` @kind direct;
  #L3e09ba.  v1.`l.a0$a.h` @type ^`l.a0` := v2 @kind object;
  #L3e09be.  return v1 @kind object;
}
procedure `l.a0$a` `c`(`l.a0$a` v0 @kind this, `l.a0` v1 @kind object) @signature `Ll/a0$a;.c:(Ll/a0;)Ll/a0$a;` @AccessFlag PUBLIC {
    temp;

  #L3e09d0.  if v1 == 0 then goto L3e09da;
  #L3e09d4.  call `d`(v0, v1) @signature `Ll/a0$a;.d:(Ll/a0;)V` @kind direct;
  #L3e09da.  v0.`l.a0$a.j` @type ^`l.a0` := v1 @kind object;
  #L3e09de.  return v0 @kind object;
}
