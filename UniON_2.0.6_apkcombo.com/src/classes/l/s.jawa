record `l.s` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `l.s.a` @AccessFlag FINAL;
  `java.lang.String` `l.s.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `l.s.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `l.s.d` @AccessFlag FINAL;
  `int` `l.s.e` @AccessFlag FINAL;
  `java.util.List` `l.s.f` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `l.s.g` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `l.s.h` @AccessFlag PRIVATE_FINAL;
}
global `char`[] `@@l.s.i` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ll/s;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3dea34.  v0:= 16I;
  #L3dea38.  v0:= new `char`[v0];
  #L3dea3c.  goto L3dea48;
  #L3dea42.  `@@l.s.i` @type ^`char`[] := v0 @kind object;
  #L3dea46.  return @kind void;
  #L3dea48.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 65I, 66I, 67I, 68I, 69I, 70I) @kind object;
  #L3dea6f.  goto L3dea42;
}
procedure `void` `<init>`(`l.s` v4 @kind this, `l.s$a` v5 @kind object) @signature `Ll/s;.<init>:(Ll/s$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3dea80.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dea86.  v0:= v5.`l.s$a.a` @type ^`java.lang.String` @kind object;
  #L3dea8a.  v4.`l.s.a` @type ^`java.lang.String` := v0 @kind object;
  #L3dea8e.  v0:= v5.`l.s$a.b` @type ^`java.lang.String` @kind object;
  #L3dea92.  v1:= 0I;
  #L3dea94.  call temp:= `a`(v0, v1) @signature `Ll/s;.a:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L3dea9a.  v0:= temp @kind object;
  #L3dea9c.  v4.`l.s.b` @type ^`java.lang.String` := v0 @kind object;
  #L3deaa0.  v0:= v5.`l.s$a.c` @type ^`java.lang.String` @kind object;
  #L3deaa4.  call temp:= `a`(v0, v1) @signature `Ll/s;.a:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L3deaaa.  v0:= temp @kind object;
  #L3deaac.  v4.`l.s.c` @type ^`java.lang.String` := v0 @kind object;
  #L3deab0.  v0:= v5.`l.s$a.d` @type ^`java.lang.String` @kind object;
  #L3deab4.  v4.`l.s.d` @type ^`java.lang.String` := v0 @kind object;
  #L3deab8.  call temp:= `b`(v5) @signature `Ll/s$a;.b:()I` @kind virtual;
  #L3deabe.  v0:= temp;
  #L3deac0.  v4.`l.s.e` @type ^`int` := v0;
  #L3deac4.  v0:= v5.`l.s$a.f` @type ^`java.util.List` @kind object;
  #L3deac8.  call temp:= `a`(v4, v0, v1) @signature `Ll/s;.a:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L3deace.  v0:= v5.`l.s$a.g` @type ^`java.util.List` @kind object;
  #L3dead2.  v2:= 0I;
  #L3dead4.  if v0 == 0 then goto L3deae4;
  #L3dead8.  v3:= 1I;
  #L3deada.  call temp:= `a`(v4, v0, v3) @signature `Ll/s;.a:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L3deae0.  v0:= temp @kind object;
  #L3deae2.  goto L3deae6;
  #L3deae4.  v0:= v2 @kind object;
  #L3deae6.  v4.`l.s.f` @type ^`java.util.List` := v0 @kind object;
  #L3deaea.  v0:= v5.`l.s$a.h` @type ^`java.lang.String` @kind object;
  #L3deaee.  if v0 == 0 then goto L3deafa;
  #L3deaf2.  call temp:= `a`(v0, v1) @signature `Ll/s;.a:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L3deaf8.  v2:= temp @kind object;
  #L3deafa.  v4.`l.s.g` @type ^`java.lang.String` := v2 @kind object;
  #L3deafe.  call temp:= `toString`(v5) @signature `Ll/s$a;.toString:()Ljava/lang/String;` @kind virtual;
  #L3deb04.  v5:= temp @kind object;
  #L3deb06.  v4.`l.s.h` @type ^`java.lang.String` := v5 @kind object;
  #L3deb0a.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.String` v11 @kind object, `int` v12 , `int` v13 , `java.lang.String` v14 @kind object, `boolean` v15 , `boolean` v16 , `boolean` v17 , `boolean` v18 , `java.nio.charset.Charset` v19 @kind object) @signature `Ll/s;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3de31c.  v1:= v11 @kind object;
  #L3de31e.  v3:= v13;
  #L3de320.  v2:= v12;
  #L3de322.  if v2 >= v3 then goto L3de3ce;
  #L3de326.  call temp:= `codePointAt`(v11, v2) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L3de32c.  v0:= temp;
  #L3de32e.  v4:= 32I;
  #L3de332.  if v0 < v4 then goto L3de390;
  #L3de336.  v4:= 127I;
  #L3de33a.  if v0 == v4 then goto L3de390;
  #L3de33e.  v4:= 128I;
  #L3de342.  if v0 < v4 then goto L3de34a;
  #L3de346.  if v18 != 0 then goto L3de390;
  #L3de34a.  v4:= v14 @kind object;
  #L3de34c.  call temp:= `indexOf`(v14, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L3de352.  v5:= temp;
  #L3de354.  v6:= -1I;
  #L3de356.  if v5 != v6 then goto L3de392;
  #L3de35a.  v5:= 37I;
  #L3de35e.  if v0 != v5 then goto L3de376;
  #L3de362.  if v15 == 0 then goto L3de392;
  #L3de366.  if v16 == 0 then goto L3de376;
  #L3de36a.  call temp:= `a`(v11, v2, v13) @signature `Ll/s;.a:(Ljava/lang/String;II)Z` @kind static;
  #L3de370.  v5:= temp;
  #L3de372.  if v5 == 0 then goto L3de392;
  #L3de376.  v5:= 43I;
  #L3de37a.  if v0 != v5 then goto L3de384;
  #L3de37e.  if v17 == 0 then goto L3de384;
  #L3de382.  goto L3de392;
  #L3de384.  call temp:= `charCount`(v0) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L3de38a.  v0:= temp;
  #L3de38c.  v2:= v2 + v0 @kind int;
  #L3de38e.  goto L3de322;
  #L3de390.  v4:= v14 @kind object;
  #L3de392.  v10:= new `m.c`;
  #L3de396.  call `<init>`(v10) @signature `Lm/c;.<init>:()V` @kind direct;
  #L3de39c.  v0:= v12;
  #L3de39e.  call temp:= `a`(v10, v11, v12, v2) @signature `Lm/c;.a:(Ljava/lang/String;II)Lm/c;` @kind virtual;
  #L3de3a4.  v0:= v10 @kind object;
  #L3de3a6.  v1:= v11 @kind object;
  #L3de3a8.  v3:= v13;
  #L3de3aa.  v4:= v14 @kind object;
  #L3de3ac.  v5:= v15;
  #L3de3ae.  v6:= v16;
  #L3de3b2.  v7:= v17;
  #L3de3b6.  v8:= v18;
  #L3de3ba.  v9:= v19 @kind object;
  #L3de3be.  call `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Ll/s;.a:(Lm/c;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)V` @kind static;
  #L3de3c4.  call temp:= `u`(v10) @signature `Lm/c;.u:()Ljava/lang/String;` @kind virtual;
  #L3de3ca.  v0:= temp @kind object;
  #L3de3cc.  return v0 @kind object;
  #L3de3ce.  v0:= v12;
  #L3de3d0.  call temp:= `substring`(v11, v12, v13) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3de3d6.  v0:= temp @kind object;
  #L3de3d8.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 ) @signature `Ll/s;.a:(Ljava/lang/String;IIZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3de610.  v0:= v4;
  #L3de612.  if v0 >= v5 then goto L3de65a;
  #L3de616.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3de61c.  v1:= temp;
  #L3de61e.  v2:= 37I;
  #L3de622.  if v1 == v2 then goto L3de63a;
  #L3de626.  v2:= 43I;
  #L3de62a.  if v1 != v2 then goto L3de634;
  #L3de62e.  if v6 == 0 then goto L3de634;
  #L3de632.  goto L3de63a;
  #L3de634.  v0:= v0 + 1;
  #L3de638.  goto L3de612;
  #L3de63a.  v1:= new `m.c`;
  #L3de63e.  call `<init>`(v1) @signature `Lm/c;.<init>:()V` @kind direct;
  #L3de644.  call temp:= `a`(v1, v3, v4, v0) @signature `Lm/c;.a:(Ljava/lang/String;II)Lm/c;` @kind virtual;
  #L3de64a.  call `a`(v1, v3, v0, v5, v6) @signature `Ll/s;.a:(Lm/c;Ljava/lang/String;IIZ)V` @kind static;
  #L3de650.  call temp:= `u`(v1) @signature `Lm/c;.u:()Ljava/lang/String;` @kind virtual;
  #L3de656.  v3:= temp @kind object;
  #L3de658.  return v3 @kind object;
  #L3de65a.  call temp:= `substring`(v3, v4, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3de660.  v3:= temp @kind object;
  #L3de662.  return v3 @kind object;
}
procedure `java.lang.String` `a`(`java.lang.String` v9 @kind object, `java.lang.String` v10 @kind object, `boolean` v11 , `boolean` v12 , `boolean` v13 , `boolean` v14 ) @signature `Ll/s;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3de3ec.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3de3f2.  v2:= temp;
  #L3de3f4.  v1:= 0I;
  #L3de3f6.  v8:= 0I;
  #L3de3f8.  v0:= v9 @kind object;
  #L3de3fa.  v3:= v10 @kind object;
  #L3de3fc.  v4:= v11;
  #L3de3fe.  v5:= v12;
  #L3de400.  v6:= v13;
  #L3de402.  v7:= v14;
  #L3de404.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Ll/s;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L3de40a.  v9:= temp @kind object;
  #L3de40c.  return v9 @kind object;
}
procedure `java.lang.String` `a`(`java.lang.String` v2 @kind object, `boolean` v3 ) @signature `Ll/s;.a:(Ljava/lang/String;Z)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L3de5ec.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3de5f2.  v0:= temp;
  #L3de5f4.  v1:= 0I;
  #L3de5f6.  call temp:= `a`(v2, v1, v0, v3) @signature `Ll/s;.a:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L3de5fc.  v2:= temp @kind object;
  #L3de5fe.  return v2 @kind object;
}
procedure `java.util.List` `a`(`l.s` v4 @kind this, `java.util.List` v5 @kind object, `boolean` v6 ) @signature `Ll/s;.a:(Ljava/util/List;Z)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3de818.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3de81e.  v0:= temp;
  #L3de820.  v1:= new `java.util.ArrayList`;
  #L3de824.  call `<init>`(v1, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3de82a.  v2:= 0I;
  #L3de82c.  if v2 >= v0 then goto L3de858;
  #L3de830.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3de836.  v3:= temp @kind object;
  #L3de838.  v3:= (`java.lang.String`) v3 @kind object;
  #L3de83c.  if v3 == 0 then goto L3de84a;
  #L3de840.  call temp:= `a`(v3, v6) @signature `Ll/s;.a:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L3de846.  v3:= temp @kind object;
  #L3de848.  goto L3de84c;
  #L3de84a.  v3:= 0I;
  #L3de84c.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3de852.  v2:= v2 + 1;
  #L3de856.  goto L3de82c;
  #L3de858.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L3de85e.  v5:= temp @kind object;
  #L3de860.  return v5 @kind object;
}
procedure `void` `a`(`java.lang.StringBuilder` v5 @kind object, `java.util.List` v6 @kind object) @signature `Ll/s;.a:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3dec6c.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3dec72.  v0:= temp;
  #L3dec74.  v1:= 0I;
  #L3dec76.  if v1 >= v0 then goto L3decc4;
  #L3dec7a.  call temp:= `get`(v6, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3dec80.  v2:= temp @kind object;
  #L3dec82.  v2:= (`java.lang.String`) v2 @kind object;
  #L3dec86.  v3:= v1 + 1;
  #L3dec8a.  call temp:= `get`(v6, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3dec90.  v3:= temp @kind object;
  #L3dec92.  v3:= (`java.lang.String`) v3 @kind object;
  #L3dec96.  if v1 <= 0 then goto L3deca4;
  #L3dec9a.  v4:= 38I;
  #L3dec9e.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3deca4.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3decaa.  if v3 == 0 then goto L3decbe;
  #L3decae.  v2:= 61I;
  #L3decb2.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3decb8.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3decbe.  v1:= v1 + 2;
  #L3decc2.  goto L3dec76;
  #L3decc4.  return @kind void;
}
procedure `void` `a`(`m.c` v6 @kind object, `java.lang.String` v7 @kind object, `int` v8 , `int` v9 , `java.lang.String` v10 @kind object, `boolean` v11 , `boolean` v12 , `boolean` v13 , `boolean` v14 , `java.nio.charset.Charset` v15 @kind object) @signature `Ll/s;.a:(Lm/c;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3deb1c.  v0:= 0I;
  #L3deb1e.  if v8 >= v9 then goto L3dec58;
  #L3deb22.  call temp:= `codePointAt`(v7, v8) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L3deb28.  v1:= temp;
  #L3deb2a.  if v11 == 0 then goto L3deb52;
  #L3deb2e.  v2:= 9I;
  #L3deb32.  if v1 == v2 then goto L3dec4a;
  #L3deb36.  v2:= 10I;
  #L3deb3a.  if v1 == v2 then goto L3dec4a;
  #L3deb3e.  v2:= 12I;
  #L3deb42.  if v1 == v2 then goto L3dec4a;
  #L3deb46.  v2:= 13I;
  #L3deb4a.  if v1 != v2 then goto L3deb52;
  #L3deb4e.  goto L3dec4a;
  #L3deb52.  v2:= 43I;
  #L3deb56.  if v1 != v2 then goto L3deb76;
  #L3deb5a.  if v13 == 0 then goto L3deb76;
  #L3deb5e.  if v11 == 0 then goto L3deb68;
  #L3deb62.  v2:= "+" @kind object;
  #L3deb66.  goto L3deb6c;
  #L3deb68.  v2:= "%2B" @kind object;
  #L3deb6c.  call temp:= `a`(v6, v2) @signature `Lm/c;.a:(Ljava/lang/String;)Lm/c;` @kind virtual;
  #L3deb72.  goto L3dec4a;
  #L3deb76.  v2:= 32I;
  #L3deb7a.  v3:= 37I;
  #L3deb7e.  if v1 < v2 then goto L3debc6;
  #L3deb82.  v2:= 127I;
  #L3deb86.  if v1 == v2 then goto L3debc6;
  #L3deb8a.  v2:= 128I;
  #L3deb8e.  if v1 < v2 then goto L3deb96;
  #L3deb92.  if v14 != 0 then goto L3debc6;
  #L3deb96.  call temp:= `indexOf`(v10, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L3deb9c.  v2:= temp;
  #L3deb9e.  v4:= -1I;
  #L3deba0.  if v2 != v4 then goto L3debc6;
  #L3deba4.  if v1 != v3 then goto L3debbe;
  #L3deba8.  if v11 == 0 then goto L3debc6;
  #L3debac.  if v12 == 0 then goto L3debbe;
  #L3debb0.  call temp:= `a`(v7, v8, v9) @signature `Ll/s;.a:(Ljava/lang/String;II)Z` @kind static;
  #L3debb6.  v2:= temp;
  #L3debb8.  if v2 != 0 then goto L3debbe;
  #L3debbc.  goto L3debc6;
  #L3debbe.  call temp:= `c`(v6, v1) @signature `Lm/c;.c:(I)Lm/c;` @kind virtual;
  #L3debc4.  goto L3dec4a;
  #L3debc6.  if v0 != 0 then goto L3debd4;
  #L3debca.  v0:= new `m.c`;
  #L3debce.  call `<init>`(v0) @signature `Lm/c;.<init>:()V` @kind direct;
  #L3debd4.  if v15 == 0 then goto L3debfc;
  #L3debd8.  v2:= `@@l.f0.c.i` @type ^`java.nio.charset.Charset` @kind object;
  #L3debdc.  call temp:= `equals`(v15, v2) @signature `Ljava/nio/charset/Charset;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3debe2.  v2:= temp;
  #L3debe4.  if v2 == 0 then goto L3debea;
  #L3debe8.  goto L3debfc;
  #L3debea.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L3debf0.  v2:= temp;
  #L3debf2.  v2:= v2 + v8 @kind int;
  #L3debf4.  call temp:= `a`(v0, v7, v8, v2, v15) @signature `Lm/c;.a:(Ljava/lang/String;IILjava/nio/charset/Charset;)Lm/c;` @kind virtual;
  #L3debfa.  goto L3dec02;
  #L3debfc.  call temp:= `c`(v0, v1) @signature `Lm/c;.c:(I)Lm/c;` @kind virtual;
  #L3dec02.  call temp:= `g`(v0) @signature `Lm/c;.g:()Z` @kind virtual;
  #L3dec08.  v2:= temp;
  #L3dec0a.  if v2 != 0 then goto L3dec4a;
  #L3dec0e.  call temp:= `readByte`(v0) @signature `Lm/c;.readByte:()B` @kind virtual;
  #L3dec14.  v2:= temp;
  #L3dec16.  v2:= v2 ^& 255;
  #L3dec1a.  call temp:= `writeByte`(v6, v3) @signature `Lm/c;.writeByte:(I)Lm/c;` @kind virtual;
  #L3dec20.  v4:= `@@l.s.i` @type ^`char`[] @kind object;
  #L3dec24.  v5:= v2 ^> 4;
  #L3dec28.  v5:= v5 ^& 15;
  #L3dec2c.  v4:= v4[v5] @kind char;
  #L3dec30.  call temp:= `writeByte`(v6, v4) @signature `Lm/c;.writeByte:(I)Lm/c;` @kind virtual;
  #L3dec36.  v4:= `@@l.s.i` @type ^`char`[] @kind object;
  #L3dec3a.  v2:= v2 ^& 15;
  #L3dec3e.  v2:= v4[v2] @kind char;
  #L3dec42.  call temp:= `writeByte`(v6, v2) @signature `Lm/c;.writeByte:(I)Lm/c;` @kind virtual;
  #L3dec48.  goto L3dec02;
  #L3dec4a.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L3dec50.  v1:= temp;
  #L3dec52.  v8:= v8 + v1 @kind int;
  #L3dec54.  goto L3deb1e;
  #L3dec58.  return @kind void;
}
procedure `void` `a`(`m.c` v5 @kind object, `java.lang.String` v6 @kind object, `int` v7 , `int` v8 , `boolean` v9 ) @signature `Ll/s;.a:(Lm/c;Ljava/lang/String;IIZ)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ded1c.  if v7 >= v8 then goto L3deda0;
  #L3ded20.  call temp:= `codePointAt`(v6, v7) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L3ded26.  v0:= temp;
  #L3ded28.  v1:= 37I;
  #L3ded2c.  if v0 != v1 then goto L3ded76;
  #L3ded30.  v1:= v7 + 2;
  #L3ded34.  if v1 >= v8 then goto L3ded76;
  #L3ded38.  v2:= v7 + 1;
  #L3ded3c.  call temp:= `charAt`(v6, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3ded42.  v2:= temp;
  #L3ded44.  call temp:= `a`(v2) @signature `Ll/f0/c;.a:(C)I` @kind static;
  #L3ded4a.  v2:= temp;
  #L3ded4c.  call temp:= `charAt`(v6, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3ded52.  v3:= temp;
  #L3ded54.  call temp:= `a`(v3) @signature `Ll/f0/c;.a:(C)I` @kind static;
  #L3ded5a.  v3:= temp;
  #L3ded5c.  v4:= -1I;
  #L3ded5e.  if v2 == v4 then goto L3ded8e;
  #L3ded62.  if v3 == v4 then goto L3ded8e;
  #L3ded66.  v7:= v2 ^< 4;
  #L3ded6a.  v7:= v7 + v3 @kind int;
  #L3ded6c.  call temp:= `writeByte`(v5, v7) @signature `Lm/c;.writeByte:(I)Lm/c;` @kind virtual;
  #L3ded72.  v7:= v1;
  #L3ded74.  goto L3ded94;
  #L3ded76.  v1:= 43I;
  #L3ded7a.  if v0 != v1 then goto L3ded8e;
  #L3ded7e.  if v9 == 0 then goto L3ded8e;
  #L3ded82.  v1:= 32I;
  #L3ded86.  call temp:= `writeByte`(v5, v1) @signature `Lm/c;.writeByte:(I)Lm/c;` @kind virtual;
  #L3ded8c.  goto L3ded94;
  #L3ded8e.  call temp:= `c`(v5, v0) @signature `Lm/c;.c:(I)Lm/c;` @kind virtual;
  #L3ded94.  call temp:= `charCount`(v0) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L3ded9a.  v0:= temp;
  #L3ded9c.  v7:= v7 + v0 @kind int;
  #L3ded9e.  goto L3ded1c;
  #L3deda0.  return @kind void;
}
procedure `boolean` `a`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `Ll/s;.a:(Ljava/lang/String;II)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3de248.  v0:= v4 + 2;
  #L3de24c.  v1:= 1I;
  #L3de24e.  if v0 >= v5 then goto L3de290;
  #L3de252.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3de258.  v5:= temp;
  #L3de25a.  v2:= 37I;
  #L3de25e.  if v5 != v2 then goto L3de290;
  #L3de262.  v4:= v4 + v1 @kind int;
  #L3de264.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3de26a.  v4:= temp;
  #L3de26c.  call temp:= `a`(v4) @signature `Ll/f0/c;.a:(C)I` @kind static;
  #L3de272.  v4:= temp;
  #L3de274.  v5:= -1I;
  #L3de276.  if v4 == v5 then goto L3de290;
  #L3de27a.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3de280.  v3:= temp;
  #L3de282.  call temp:= `a`(v3) @signature `Ll/f0/c;.a:(C)I` @kind static;
  #L3de288.  v3:= temp;
  #L3de28a.  if v3 == v5 then goto L3de290;
  #L3de28e.  goto L3de292;
  #L3de290.  v1:= 0I;
  #L3de292.  return v1;
}
procedure `void` `b`(`java.lang.StringBuilder` v3 @kind object, `java.util.List` v4 @kind object) @signature `Ll/s;.b:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3decd8.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3decde.  v0:= temp;
  #L3dece0.  v1:= 0I;
  #L3dece2.  if v1 >= v0 then goto L3ded08;
  #L3dece6.  v2:= 47I;
  #L3decea.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3decf0.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3decf6.  v2:= temp @kind object;
  #L3decf8.  v2:= (`java.lang.String`) v2 @kind object;
  #L3decfc.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ded02.  v1:= v1 + 1;
  #L3ded06.  goto L3dece2;
  #L3ded08.  return @kind void;
}
procedure `int` `c`(`java.lang.String` v1 @kind object) @signature `Ll/s;.c:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3de2a4.  v0:= "http" @kind object;
  #L3de2a8.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3de2ae.  v0:= temp;
  #L3de2b0.  if v0 == 0 then goto L3de2ba;
  #L3de2b4.  v1:= 80I;
  #L3de2b8.  return v1;
  #L3de2ba.  v0:= "https" @kind object;
  #L3de2be.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3de2c4.  v1:= temp;
  #L3de2c6.  if v1 == 0 then goto L3de2d0;
  #L3de2ca.  v1:= 443I;
  #L3de2ce.  return v1;
  #L3de2d0.  v1:= -1I;
  #L3de2d2.  return v1;
}
procedure `l.s` `d`(`java.lang.String` v2 @kind object) @signature `Ll/s;.d:(Ljava/lang/String;)Ll/s;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3de908.  v0:= new `l.s$a`;
  #L3de90c.  call `<init>`(v0) @signature `Ll/s$a;.<init>:()V` @kind direct;
  #L3de912.  v1:= 0I;
  #L3de914.  call temp:= `a`(v0, v1, v2) @signature `Ll/s$a;.a:(Ll/s;Ljava/lang/String;)Ll/s$a;` @kind virtual;
  #L3de91a.  call temp:= `a`(v0) @signature `Ll/s$a;.a:()Ll/s;` @kind virtual;
  #L3de920.  v2:= temp @kind object;
  #L3de922.  return v2 @kind object;
}
procedure `java.util.List` `e`(`java.lang.String` v5 @kind object) @signature `Ll/s;.e:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3de874.  v0:= new `java.util.ArrayList`;
  #L3de878.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3de87e.  v1:= 0I;
  #L3de880.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3de886.  v2:= temp;
  #L3de888.  if v1 > v2 then goto L3de8f4;
  #L3de88c.  v2:= 38I;
  #L3de890.  call temp:= `indexOf`(v5, v2, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L3de896.  v2:= temp;
  #L3de898.  v3:= -1I;
  #L3de89a.  if v2 != v3 then goto L3de8a6;
  #L3de89e.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3de8a4.  v2:= temp;
  #L3de8a6.  v4:= 61I;
  #L3de8aa.  call temp:= `indexOf`(v5, v4, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L3de8b0.  v4:= temp;
  #L3de8b2.  if v4 == v3 then goto L3de8d8;
  #L3de8b6.  if v4 <= v2 then goto L3de8bc;
  #L3de8ba.  goto L3de8d8;
  #L3de8bc.  call temp:= `substring`(v5, v1, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3de8c2.  v1:= temp @kind object;
  #L3de8c4.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3de8ca.  v4:= v4 + 1;
  #L3de8ce.  call temp:= `substring`(v5, v4, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3de8d4.  v1:= temp @kind object;
  #L3de8d6.  goto L3de8e8;
  #L3de8d8.  call temp:= `substring`(v5, v1, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3de8de.  v1:= temp @kind object;
  #L3de8e0.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3de8e6.  v1:= 0I;
  #L3de8e8.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3de8ee.  v1:= v2 + 1;
  #L3de8f2.  goto L3de880;
  #L3de8f4.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`l.s` v2 @kind this) @signature `Ll/s;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3de420.  v0:= v2.`l.s.g` @type ^`java.lang.String` @kind object;
  #L3de424.  if v0 != 0 then goto L3de42c;
  #L3de428.  v0:= 0I;
  #L3de42a.  return v0 @kind object;
  #L3de42c.  v0:= v2.`l.s.h` @type ^`java.lang.String` @kind object;
  #L3de430.  v1:= 35I;
  #L3de434.  call temp:= `indexOf`(v0, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L3de43a.  v0:= temp;
  #L3de43c.  v0:= v0 + 1;
  #L3de440.  v1:= v2.`l.s.h` @type ^`java.lang.String` @kind object;
  #L3de444.  call temp:= `substring`(v1, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L3de44a.  v0:= temp @kind object;
  #L3de44c.  return v0 @kind object;
}
procedure `l.s$a` `a`(`l.s` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Ll/s;.a:(Ljava/lang/String;)Ll/s$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de9fc.  v0:= new `l.s$a`;
  #L3dea00.  call `<init>`(v0) @signature `Ll/s$a;.<init>:()V` @kind direct;
  #L3dea06.  call temp:= `a`(v0, v1, v2) @signature `Ll/s$a;.a:(Ll/s;Ljava/lang/String;)Ll/s$a;` @kind virtual;
  #L3dea0c.  return v0 @kind object;
  #L3dea0e.  v2:= 0I;
  #L3dea10.  return v2 @kind object;
  catch `java.lang.IllegalArgumentException` @[L3de9fc..L3dea0c] goto L3dea0e;
}
procedure `java.lang.String` `b`(`l.s` v3 @kind this) @signature `Ll/s;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3de460.  v0:= v3.`l.s.c` @type ^`java.lang.String` @kind object;
  #L3de464.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3de46a.  v0:= temp;
  #L3de46c.  if v0 == 0 then goto L3de476;
  #L3de470.  v0:= "" @kind object;
  #L3de474.  return v0 @kind object;
  #L3de476.  v0:= v3.`l.s.h` @type ^`java.lang.String` @kind object;
  #L3de47a.  v1:= 58I;
  #L3de47e.  v2:= v3.`l.s.a` @type ^`java.lang.String` @kind object;
  #L3de482.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3de488.  v2:= temp;
  #L3de48a.  v2:= v2 + 3;
  #L3de48e.  call temp:= `indexOf`(v0, v1, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L3de494.  v0:= temp;
  #L3de496.  v0:= v0 + 1;
  #L3de49a.  v1:= v3.`l.s.h` @type ^`java.lang.String` @kind object;
  #L3de49e.  v2:= 64I;
  #L3de4a2.  call temp:= `indexOf`(v1, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L3de4a8.  v1:= temp;
  #L3de4aa.  v2:= v3.`l.s.h` @type ^`java.lang.String` @kind object;
  #L3de4ae.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3de4b4.  v0:= temp @kind object;
  #L3de4b6.  return v0 @kind object;
}
procedure `l.s` `b`(`l.s` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Ll/s;.b:(Ljava/lang/String;)Ll/s;` @AccessFlag PUBLIC {
    temp;

  #L3de934.  call temp:= `a`(v0, v1) @signature `Ll/s;.a:(Ljava/lang/String;)Ll/s$a;` @kind virtual;
  #L3de93a.  v1:= temp @kind object;
  #L3de93c.  if v1 == 0 then goto L3de94a;
  #L3de940.  call temp:= `a`(v1) @signature `Ll/s$a;.a:()Ll/s;` @kind virtual;
  #L3de946.  v1:= temp @kind object;
  #L3de948.  goto L3de94c;
  #L3de94a.  v1:= 0I;
  #L3de94c.  return v1 @kind object;
}
procedure `java.lang.String` `c`(`l.s` v4 @kind this) @signature `Ll/s;.c:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3de4c8.  v0:= v4.`l.s.h` @type ^`java.lang.String` @kind object;
  #L3de4cc.  v1:= v4.`l.s.a` @type ^`java.lang.String` @kind object;
  #L3de4d0.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3de4d6.  v1:= temp;
  #L3de4d8.  v1:= v1 + 3;
  #L3de4dc.  v2:= 47I;
  #L3de4e0.  call temp:= `indexOf`(v0, v2, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L3de4e6.  v0:= temp;
  #L3de4e8.  v1:= v4.`l.s.h` @type ^`java.lang.String` @kind object;
  #L3de4ec.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3de4f2.  v2:= temp;
  #L3de4f4.  v3:= "?#" @kind object;
  #L3de4f8.  call temp:= `a`(v1, v0, v2, v3) @signature `Ll/f0/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L3de4fe.  v1:= temp;
  #L3de500.  v2:= v4.`l.s.h` @type ^`java.lang.String` @kind object;
  #L3de504.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3de50a.  v0:= temp @kind object;
  #L3de50c.  return v0 @kind object;
}
procedure `java.util.List` `d`(`l.s` v6 @kind this) @signature `Ll/s;.d:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3de798.  v0:= v6.`l.s.h` @type ^`java.lang.String` @kind object;
  #L3de79c.  v1:= v6.`l.s.a` @type ^`java.lang.String` @kind object;
  #L3de7a0.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3de7a6.  v1:= temp;
  #L3de7a8.  v1:= v1 + 3;
  #L3de7ac.  v2:= 47I;
  #L3de7b0.  call temp:= `indexOf`(v0, v2, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L3de7b6.  v0:= temp;
  #L3de7b8.  v1:= v6.`l.s.h` @type ^`java.lang.String` @kind object;
  #L3de7bc.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3de7c2.  v3:= temp;
  #L3de7c4.  v4:= "?#" @kind object;
  #L3de7c8.  call temp:= `a`(v1, v0, v3, v4) @signature `Ll/f0/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L3de7ce.  v1:= temp;
  #L3de7d0.  v3:= new `java.util.ArrayList`;
  #L3de7d4.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3de7da.  if v0 >= v1 then goto L3de804;
  #L3de7de.  v0:= v0 + 1;
  #L3de7e2.  v4:= v6.`l.s.h` @type ^`java.lang.String` @kind object;
  #L3de7e6.  call temp:= `a`(v4, v0, v1, v2) @signature `Ll/f0/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L3de7ec.  v4:= temp;
  #L3de7ee.  v5:= v6.`l.s.h` @type ^`java.lang.String` @kind object;
  #L3de7f2.  call temp:= `substring`(v5, v0, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3de7f8.  v0:= temp @kind object;
  #L3de7fa.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3de800.  v0:= v4;
  #L3de802.  goto L3de7da;
  #L3de804.  return v3 @kind object;
}
procedure `java.lang.String` `e`(`l.s` v4 @kind this) @signature `Ll/s;.e:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3de520.  v0:= v4.`l.s.f` @type ^`java.util.List` @kind object;
  #L3de524.  if v0 != 0 then goto L3de52c;
  #L3de528.  v0:= 0I;
  #L3de52a.  return v0 @kind object;
  #L3de52c.  v0:= v4.`l.s.h` @type ^`java.lang.String` @kind object;
  #L3de530.  v1:= 63I;
  #L3de534.  call temp:= `indexOf`(v0, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L3de53a.  v0:= temp;
  #L3de53c.  v0:= v0 + 1;
  #L3de540.  v1:= v4.`l.s.h` @type ^`java.lang.String` @kind object;
  #L3de544.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3de54a.  v2:= temp;
  #L3de54c.  v3:= 35I;
  #L3de550.  call temp:= `a`(v1, v0, v2, v3) @signature `Ll/f0/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L3de556.  v1:= temp;
  #L3de558.  v2:= v4.`l.s.h` @type ^`java.lang.String` @kind object;
  #L3de55c.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3de562.  v0:= temp @kind object;
  #L3de564.  return v0 @kind object;
}
procedure `boolean` `equals`(`l.s` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Ll/s;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de1ec.  v0:= instanceof @variable v2 @type ^`l.s` @kind boolean;
  #L3de1f0.  if v0 == 0 then goto L3de210;
  #L3de1f4.  v2:= (`l.s`) v2 @kind object;
  #L3de1f8.  v2:= v2.`l.s.h` @type ^`java.lang.String` @kind object;
  #L3de1fc.  v0:= v1.`l.s.h` @type ^`java.lang.String` @kind object;
  #L3de200.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3de206.  v2:= temp;
  #L3de208.  if v2 == 0 then goto L3de210;
  #L3de20c.  v2:= 1I;
  #L3de20e.  goto L3de212;
  #L3de210.  v2:= 0I;
  #L3de212.  return v2;
}
procedure `java.lang.String` `f`(`l.s` v4 @kind this) @signature `Ll/s;.f:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3de578.  v0:= v4.`l.s.b` @type ^`java.lang.String` @kind object;
  #L3de57c.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3de582.  v0:= temp;
  #L3de584.  if v0 == 0 then goto L3de58e;
  #L3de588.  v0:= "" @kind object;
  #L3de58c.  return v0 @kind object;
  #L3de58e.  v0:= v4.`l.s.a` @type ^`java.lang.String` @kind object;
  #L3de592.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3de598.  v0:= temp;
  #L3de59a.  v0:= v0 + 3;
  #L3de59e.  v1:= v4.`l.s.h` @type ^`java.lang.String` @kind object;
  #L3de5a2.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3de5a8.  v2:= temp;
  #L3de5aa.  v3:= ":@" @kind object;
  #L3de5ae.  call temp:= `a`(v1, v0, v2, v3) @signature `Ll/f0/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L3de5b4.  v1:= temp;
  #L3de5b6.  v2:= v4.`l.s.h` @type ^`java.lang.String` @kind object;
  #L3de5ba.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3de5c0.  v0:= temp @kind object;
  #L3de5c2.  return v0 @kind object;
}
procedure `java.lang.String` `g`(`l.s` v1 @kind this) @signature `Ll/s;.g:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de5d4.  v0:= v1.`l.s.d` @type ^`java.lang.String` @kind object;
  #L3de5d8.  return v0 @kind object;
}
procedure `boolean` `h`(`l.s` v2 @kind this) @signature `Ll/s;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3de224.  v0:= v2.`l.s.a` @type ^`java.lang.String` @kind object;
  #L3de228.  v1:= "https" @kind object;
  #L3de22c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3de232.  v0:= temp;
  #L3de234.  return v0;
}
procedure `int` `hashCode`(`l.s` v1 @kind this) @signature `Ll/s;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de2e4.  v0:= v1.`l.s.h` @type ^`java.lang.String` @kind object;
  #L3de2e8.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3de2ee.  v0:= temp;
  #L3de2f0.  return v0;
}
procedure `l.s$a` `i`(`l.s` v3 @kind this) @signature `Ll/s;.i:()Ll/s$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3de960.  v0:= new `l.s$a`;
  #L3de964.  call `<init>`(v0) @signature `Ll/s$a;.<init>:()V` @kind direct;
  #L3de96a.  v1:= v3.`l.s.a` @type ^`java.lang.String` @kind object;
  #L3de96e.  v0.`l.s$a.a` @type ^`java.lang.String` := v1 @kind object;
  #L3de972.  call temp:= `f`(v3) @signature `Ll/s;.f:()Ljava/lang/String;` @kind virtual;
  #L3de978.  v1:= temp @kind object;
  #L3de97a.  v0.`l.s$a.b` @type ^`java.lang.String` := v1 @kind object;
  #L3de97e.  call temp:= `b`(v3) @signature `Ll/s;.b:()Ljava/lang/String;` @kind virtual;
  #L3de984.  v1:= temp @kind object;
  #L3de986.  v0.`l.s$a.c` @type ^`java.lang.String` := v1 @kind object;
  #L3de98a.  v1:= v3.`l.s.d` @type ^`java.lang.String` @kind object;
  #L3de98e.  v0.`l.s$a.d` @type ^`java.lang.String` := v1 @kind object;
  #L3de992.  v1:= v3.`l.s.e` @type ^`int`;
  #L3de996.  v2:= v3.`l.s.a` @type ^`java.lang.String` @kind object;
  #L3de99a.  call temp:= `c`(v2) @signature `Ll/s;.c:(Ljava/lang/String;)I` @kind static;
  #L3de9a0.  v2:= temp;
  #L3de9a2.  if v1 == v2 then goto L3de9ac;
  #L3de9a6.  v1:= v3.`l.s.e` @type ^`int`;
  #L3de9aa.  goto L3de9ae;
  #L3de9ac.  v1:= -1I;
  #L3de9ae.  v0.`l.s$a.e` @type ^`int` := v1;
  #L3de9b2.  v1:= v0.`l.s$a.f` @type ^`java.util.List` @kind object;
  #L3de9b6.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3de9bc.  v1:= v0.`l.s$a.f` @type ^`java.util.List` @kind object;
  #L3de9c0.  call temp:= `d`(v3) @signature `Ll/s;.d:()Ljava/util/List;` @kind virtual;
  #L3de9c6.  v2:= temp @kind object;
  #L3de9c8.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L3de9ce.  call temp:= `e`(v3) @signature `Ll/s;.e:()Ljava/lang/String;` @kind virtual;
  #L3de9d4.  v1:= temp @kind object;
  #L3de9d6.  call temp:= `a`(v0, v1) @signature `Ll/s$a;.a:(Ljava/lang/String;)Ll/s$a;` @kind virtual;
  #L3de9dc.  call temp:= `a`(v3) @signature `Ll/s;.a:()Ljava/lang/String;` @kind virtual;
  #L3de9e2.  v1:= temp @kind object;
  #L3de9e4.  v0.`l.s$a.h` @type ^`java.lang.String` := v1 @kind object;
  #L3de9e8.  return v0 @kind object;
}
procedure `int` `j`(`l.s` v1 @kind this) @signature `Ll/s;.j:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de304.  v0:= v1.`l.s.e` @type ^`int`;
  #L3de308.  return v0;
}
procedure `java.lang.String` `k`(`l.s` v2 @kind this) @signature `Ll/s;.k:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3de674.  v0:= v2.`l.s.f` @type ^`java.util.List` @kind object;
  #L3de678.  if v0 != 0 then goto L3de680;
  #L3de67c.  v0:= 0I;
  #L3de67e.  return v0 @kind object;
  #L3de680.  v0:= new `java.lang.StringBuilder`;
  #L3de684.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3de68a.  v1:= v2.`l.s.f` @type ^`java.util.List` @kind object;
  #L3de68e.  call `a`(v0, v1) @signature `Ll/s;.a:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L3de694.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3de69a.  v0:= temp @kind object;
  #L3de69c.  return v0 @kind object;
}
procedure `java.lang.String` `l`(`l.s` v2 @kind this) @signature `Ll/s;.l:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3de6b0.  v0:= "/..." @kind object;
  #L3de6b4.  call temp:= `a`(v2, v0) @signature `Ll/s;.a:(Ljava/lang/String;)Ll/s$a;` @kind virtual;
  #L3de6ba.  v0:= temp @kind object;
  #L3de6bc.  v1:= "" @kind object;
  #L3de6c0.  call temp:= `e`(v0, v1) @signature `Ll/s$a;.e:(Ljava/lang/String;)Ll/s$a;` @kind virtual;
  #L3de6c6.  call temp:= `c`(v0, v1) @signature `Ll/s$a;.c:(Ljava/lang/String;)Ll/s$a;` @kind virtual;
  #L3de6cc.  call temp:= `a`(v0) @signature `Ll/s$a;.a:()Ll/s;` @kind virtual;
  #L3de6d2.  v0:= temp @kind object;
  #L3de6d4.  call temp:= `toString`(v0) @signature `Ll/s;.toString:()Ljava/lang/String;` @kind virtual;
  #L3de6da.  v0:= temp @kind object;
  #L3de6dc.  return v0 @kind object;
}
procedure `java.lang.String` `m`(`l.s` v1 @kind this) @signature `Ll/s;.m:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de6f0.  v0:= v1.`l.s.a` @type ^`java.lang.String` @kind object;
  #L3de6f4.  return v0 @kind object;
}
procedure `java.net.URI` `n`(`l.s` v4 @kind this) @signature `Ll/s;.n:()Ljava/net/URI;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3de720.  call temp:= `i`(v4) @signature `Ll/s;.i:()Ll/s$a;` @kind virtual;
  #L3de726.  v0:= temp @kind object;
  #L3de728.  call temp:= `c`(v0) @signature `Ll/s$a;.c:()Ll/s$a;` @kind virtual;
  #L3de72e.  call temp:= `toString`(v0) @signature `Ll/s$a;.toString:()Ljava/lang/String;` @kind virtual;
  #L3de734.  v0:= temp @kind object;
  #L3de736.  v1:= new `java.net.URI`;
  #L3de73a.  call `<init>`(v1, v0) @signature `Ljava/net/URI;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3de740.  return v1 @kind object;
  #L3de742.  v1:= Exception @type ^`java.net.URISyntaxException` @kind object;
  #L3de744.  v2:= "[\\u0000-\\u001F\\u007F-\\u009F\\p{javaWhitespace}]" @kind object;
  #L3de748.  v3:= "" @kind object;
  #L3de74c.  call temp:= `replaceAll`(v0, v2, v3) @signature `Ljava/lang/String;.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3de752.  v0:= temp @kind object;
  #L3de754.  call temp:= `create`(v0) @signature `Ljava/net/URI;.create:(Ljava/lang/String;)Ljava/net/URI;` @kind static;
  #L3de75a.  v0:= temp @kind object;
  #L3de75c.  return v0 @kind object;
  #L3de75e.  v0:= new `java.lang.RuntimeException`;
  #L3de762.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3de768.  throw v0;
  catch `java.net.URISyntaxException` @[L3de736..L3de740] goto L3de742;
  catch `java.lang.Exception` @[L3de744..L3de75c] goto L3de75e;
}
procedure `java.lang.String` `toString`(`l.s` v1 @kind this) @signature `Ll/s;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de708.  v0:= v1.`l.s.h` @type ^`java.lang.String` @kind object;
  #L3de70c.  return v0 @kind object;
}
