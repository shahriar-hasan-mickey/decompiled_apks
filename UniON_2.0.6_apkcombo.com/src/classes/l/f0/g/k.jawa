record `l.f0.g.k` @kind class @AccessFlag PUBLIC_FINAL {
  `l.w` `l.f0.g.k.a` @AccessFlag PUBLIC_FINAL;
  `int` `l.f0.g.k.b` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `l.f0.g.k.c` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`l.f0.g.k` v0 @kind this, `l.w` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Ll/f0/g/k;.<init>:(Ll/w;ILjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e7218.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e721e.  v0.`l.f0.g.k.a` @type ^`l.w` := v1 @kind object;
  #L3e7222.  v0.`l.f0.g.k.b` @type ^`int` := v2;
  #L3e7226.  v0.`l.f0.g.k.c` @type ^`java.lang.String` := v3 @kind object;
  #L3e722a.  return @kind void;
}
procedure `l.f0.g.k` `a`(`java.lang.String` v8 @kind object) @signature `Ll/f0/g/k;.a:(Ljava/lang/String;)Ll/f0/g/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3e7034.  v0:= "HTTP/1." @kind object;
  #L3e7038.  call temp:= `startsWith`(v8, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3e703e.  v0:= temp;
  #L3e7040.  v1:= 32I;
  #L3e7044.  v2:= 4I;
  #L3e7046.  v3:= 9I;
  #L3e704a.  v4:= "Unexpected status line: " @kind object;
  #L3e704e.  if v0 == 0 then goto L3e70e6;
  #L3e7052.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3e7058.  v0:= temp;
  #L3e705a.  if v0 < v3 then goto L3e70bc;
  #L3e705e.  v0:= 8I;
  #L3e7062.  call temp:= `charAt`(v8, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3e7068.  v0:= temp;
  #L3e706a.  if v0 != v1 then goto L3e70bc;
  #L3e706e.  v0:= 7I;
  #L3e7070.  call temp:= `charAt`(v8, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3e7076.  v0:= temp;
  #L3e7078.  v0:= v0 + -48;
  #L3e707c.  if v0 != 0 then goto L3e7086;
  #L3e7080.  v0:= `@@l.w.c` @type ^`l.w` @kind object;
  #L3e7084.  goto L3e70fc;
  #L3e7086.  v5:= 1I;
  #L3e7088.  if v0 != v5 then goto L3e7092;
  #L3e708c.  v0:= `@@l.w.d` @type ^`l.w` @kind object;
  #L3e7090.  goto L3e70fc;
  #L3e7092.  v0:= new `java.net.ProtocolException`;
  #L3e7096.  v1:= new `java.lang.StringBuilder`;
  #L3e709a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e70a0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e70a6.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e70ac.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e70b2.  v8:= temp @kind object;
  #L3e70b4.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e70ba.  throw v0;
  #L3e70bc.  v0:= new `java.net.ProtocolException`;
  #L3e70c0.  v1:= new `java.lang.StringBuilder`;
  #L3e70c4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e70ca.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e70d0.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e70d6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e70dc.  v8:= temp @kind object;
  #L3e70de.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e70e4.  throw v0;
  #L3e70e6.  v0:= "ICY " @kind object;
  #L3e70ea.  call temp:= `startsWith`(v8, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3e70f0.  v0:= temp;
  #L3e70f2.  if v0 == 0 then goto L3e71ce;
  #L3e70f6.  v0:= `@@l.w.c` @type ^`l.w` @kind object;
  #L3e70fa.  v3:= 4I;
  #L3e70fc.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3e7102.  v5:= temp;
  #L3e7104.  v6:= v3 + 3;
  #L3e7108.  if v5 < v6 then goto L3e71a4;
  #L3e710c.  call temp:= `substring`(v8, v3, v6) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3e7112.  v5:= temp @kind object;
  #L3e7114.  call temp:= `parseInt`(v5) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3e711a.  v5:= temp;
  #L3e711c.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3e7122.  v7:= temp;
  #L3e7124.  if v7 <= v6 then goto L3e716a;
  #L3e7128.  call temp:= `charAt`(v8, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3e712e.  v6:= temp;
  #L3e7130.  if v6 != v1 then goto L3e7140;
  #L3e7134.  v3:= v3 + v2 @kind int;
  #L3e7136.  call temp:= `substring`(v8, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L3e713c.  v8:= temp @kind object;
  #L3e713e.  goto L3e716e;
  #L3e7140.  v0:= new `java.net.ProtocolException`;
  #L3e7144.  v1:= new `java.lang.StringBuilder`;
  #L3e7148.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e714e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e7154.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e715a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e7160.  v8:= temp @kind object;
  #L3e7162.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e7168.  throw v0;
  #L3e716a.  v8:= "" @kind object;
  #L3e716e.  v1:= new `l.f0.g.k`;
  #L3e7172.  call `<init>`(v1, v0, v5, v8) @signature `Ll/f0/g/k;.<init>:(Ll/w;ILjava/lang/String;)V` @kind direct;
  #L3e7178.  return v1 @kind object;
  #L3e717a.  v0:= new `java.net.ProtocolException`;
  #L3e717e.  v1:= new `java.lang.StringBuilder`;
  #L3e7182.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e7188.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e718e.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e7194.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e719a.  v8:= temp @kind object;
  #L3e719c.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e71a2.  throw v0;
  #L3e71a4.  v0:= new `java.net.ProtocolException`;
  #L3e71a8.  v1:= new `java.lang.StringBuilder`;
  #L3e71ac.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e71b2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e71b8.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e71be.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e71c4.  v8:= temp @kind object;
  #L3e71c6.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e71cc.  throw v0;
  #L3e71ce.  v0:= new `java.net.ProtocolException`;
  #L3e71d2.  v1:= new `java.lang.StringBuilder`;
  #L3e71d6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e71dc.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e71e2.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e71e8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e71ee.  v8:= temp @kind object;
  #L3e71f0.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e71f6.  throw v0;
  catch `java.lang.NumberFormatException` @[L3e710c..L3e711c] goto L3e717a;
}
procedure `java.lang.String` `toString`(`l.f0.g.k` v3 @kind this) @signature `Ll/f0/g/k;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e6fc8.  v0:= new `java.lang.StringBuilder`;
  #L3e6fcc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e6fd2.  v1:= v3.`l.f0.g.k.a` @type ^`l.w` @kind object;
  #L3e6fd6.  v2:= `@@l.w.c` @type ^`l.w` @kind object;
  #L3e6fda.  if v1 != v2 then goto L3e6fe4;
  #L3e6fde.  v1:= "HTTP/1.0" @kind object;
  #L3e6fe2.  goto L3e6fe8;
  #L3e6fe4.  v1:= "HTTP/1.1" @kind object;
  #L3e6fe8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6fee.  v1:= 32I;
  #L3e6ff2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6ff8.  v2:= v3.`l.f0.g.k.b` @type ^`int`;
  #L3e6ffc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e7002.  v2:= v3.`l.f0.g.k.c` @type ^`java.lang.String` @kind object;
  #L3e7006.  if v2 == 0 then goto L3e701a;
  #L3e700a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e7010.  v1:= v3.`l.f0.g.k.c` @type ^`java.lang.String` @kind object;
  #L3e7014.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e701a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e7020.  v0:= temp @kind object;
  #L3e7022.  return v0 @kind object;
}
