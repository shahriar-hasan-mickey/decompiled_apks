record `l.f0.g.i` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`l.s` v2 @kind object) @signature `Ll/f0/g/i;.a:(Ll/s;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e67ac.  call temp:= `c`(v2) @signature `Ll/s;.c:()Ljava/lang/String;` @kind virtual;
  #L3e67b2.  v0:= temp @kind object;
  #L3e67b4.  call temp:= `e`(v2) @signature `Ll/s;.e:()Ljava/lang/String;` @kind virtual;
  #L3e67ba.  v2:= temp @kind object;
  #L3e67bc.  if v2 == 0 then goto L3e67e8;
  #L3e67c0.  v1:= new `java.lang.StringBuilder`;
  #L3e67c4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e67ca.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e67d0.  v0:= 63I;
  #L3e67d4.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e67da.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e67e0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e67e6.  v0:= temp @kind object;
  #L3e67e8.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`l.y` v2 @kind object, `java.net.Proxy$Type` v3 @kind object) @signature `Ll/f0/g/i;.a:(Ll/y;Ljava/net/Proxy$Type;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e673c.  v0:= new `java.lang.StringBuilder`;
  #L3e6740.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e6746.  call temp:= `e`(v2) @signature `Ll/y;.e:()Ljava/lang/String;` @kind virtual;
  #L3e674c.  v1:= temp @kind object;
  #L3e674e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6754.  v1:= 32I;
  #L3e6758.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e675e.  call temp:= `b`(v2, v3) @signature `Ll/f0/g/i;.b:(Ll/y;Ljava/net/Proxy$Type;)Z` @kind static;
  #L3e6764.  v3:= temp;
  #L3e6766.  call temp:= `g`(v2) @signature `Ll/y;.g:()Ll/s;` @kind virtual;
  #L3e676c.  v2:= temp @kind object;
  #L3e676e.  if v3 == 0 then goto L3e677a;
  #L3e6772.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6778.  goto L3e6788;
  #L3e677a.  call temp:= `a`(v2) @signature `Ll/f0/g/i;.a:(Ll/s;)Ljava/lang/String;` @kind static;
  #L3e6780.  v2:= temp @kind object;
  #L3e6782.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6788.  v2:= " HTTP/1.1" @kind object;
  #L3e678c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6792.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e6798.  v2:= temp @kind object;
  #L3e679a.  return v2 @kind object;
}
procedure `boolean` `b`(`l.y` v0 @kind object, `java.net.Proxy$Type` v1 @kind object) @signature `Ll/f0/g/i;.b:(Ll/y;Ljava/net/Proxy$Type;)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3e6710.  call temp:= `d`(v0) @signature `Ll/y;.d:()Z` @kind virtual;
  #L3e6716.  v0:= temp;
  #L3e6718.  if v0 != 0 then goto L3e6728;
  #L3e671c.  v0:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L3e6720.  if v1 != v0 then goto L3e6728;
  #L3e6724.  v0:= 1I;
  #L3e6726.  goto L3e672a;
  #L3e6728.  v0:= 0I;
  #L3e672a.  return v0;
}
