record `l.f0.g.j` @kind class @AccessFlag PUBLIC_FINAL extends `l.t` @kind interface {
  `l.v` `l.f0.g.j.a` @AccessFlag PRIVATE_FINAL;
  `l.f0.f.g` `l.f0.g.j.b` @AccessFlag PRIVATE_VOLATILE;
  `java.lang.Object` `l.f0.g.j.c` @AccessFlag PRIVATE;
  `boolean` `l.f0.g.j.d` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`l.f0.g.j` v0 @kind this, `l.v` v1 @kind object, `boolean` v2 ) @signature `Ll/f0/g/j;.<init>:(Ll/v;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e6f6c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e6f72.  v0.`l.f0.g.j.a` @type ^`l.v` := v1 @kind object;
  #L3e6f76.  return @kind void;
}
procedure `int` `a`(`l.f0.g.j` v1 @kind this, `l.a0` v2 @kind object, `int` v3 ) @signature `Ll/f0/g/j;.a:(Ll/a0;I)I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e6938.  v0:= "Retry-After" @kind object;
  #L3e693c.  call temp:= `b`(v2, v0) @signature `Ll/a0;.b:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3e6942.  v2:= temp @kind object;
  #L3e6944.  if v2 != 0 then goto L3e694a;
  #L3e6948.  return v3;
  #L3e694a.  v3:= "\\d+" @kind object;
  #L3e694e.  call temp:= `matches`(v2, v3) @signature `Ljava/lang/String;.matches:(Ljava/lang/String;)Z` @kind virtual;
  #L3e6954.  v3:= temp;
  #L3e6956.  if v3 == 0 then goto L3e696c;
  #L3e695a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;` @kind static;
  #L3e6960.  v2:= temp @kind object;
  #L3e6962.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3e6968.  v2:= temp;
  #L3e696a.  return v2;
  #L3e696c.  v2:= 2147483647I;
  #L3e6972.  return v2;
}
procedure `l.a` `a`(`l.f0.g.j` v17 @kind this, `l.s` v18 @kind object) @signature `Ll/f0/g/j;.a:(Ll/s;)Ll/a;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L3e6984.  v0:= v17 @kind object;
  #L3e6988.  call temp:= `h`(v18) @signature `Ll/s;.h:()Z` @kind virtual;
  #L3e698e.  v1:= temp;
  #L3e6990.  v2:= 0I;
  #L3e6992.  if v1 == 0 then goto L3e69c2;
  #L3e6996.  v1:= v0.`l.f0.g.j.a` @type ^`l.v` @kind object;
  #L3e699a.  call temp:= `G`(v1) @signature `Ll/v;.G:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L3e69a0.  v2:= temp @kind object;
  #L3e69a2.  v1:= v0.`l.f0.g.j.a` @type ^`l.v` @kind object;
  #L3e69a6.  call temp:= `u`(v1) @signature `Ll/v;.u:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L3e69ac.  v1:= temp @kind object;
  #L3e69ae.  v3:= v0.`l.f0.g.j.a` @type ^`l.v` @kind object;
  #L3e69b2.  call temp:= `e`(v3) @signature `Ll/v;.e:()Ll/g;` @kind virtual;
  #L3e69b8.  v3:= temp @kind object;
  #L3e69ba.  v10:= v1 @kind object;
  #L3e69bc.  v9:= v2 @kind object;
  #L3e69be.  v11:= v3 @kind object;
  #L3e69c0.  goto L3e69c8;
  #L3e69c2.  v9:= v2 @kind object;
  #L3e69c4.  v10:= v9 @kind object;
  #L3e69c6.  v11:= v10 @kind object;
  #L3e69c8.  v1:= new `l.a`;
  #L3e69cc.  call temp:= `g`(v18) @signature `Ll/s;.g:()Ljava/lang/String;` @kind virtual;
  #L3e69d2.  v5:= temp @kind object;
  #L3e69d4.  call temp:= `j`(v18) @signature `Ll/s;.j:()I` @kind virtual;
  #L3e69da.  v6:= temp;
  #L3e69dc.  v2:= v0.`l.f0.g.j.a` @type ^`l.v` @kind object;
  #L3e69e0.  call temp:= `q`(v2) @signature `Ll/v;.q:()Ll/o;` @kind virtual;
  #L3e69e6.  v7:= temp @kind object;
  #L3e69e8.  v2:= v0.`l.f0.g.j.a` @type ^`l.v` @kind object;
  #L3e69ec.  call temp:= `F`(v2) @signature `Ll/v;.F:()Ljavax/net/SocketFactory;` @kind virtual;
  #L3e69f2.  v8:= temp @kind object;
  #L3e69f4.  v2:= v0.`l.f0.g.j.a` @type ^`l.v` @kind object;
  #L3e69f8.  call temp:= `B`(v2) @signature `Ll/v;.B:()Ll/b;` @kind virtual;
  #L3e69fe.  v12:= temp @kind object;
  #L3e6a00.  v2:= v0.`l.f0.g.j.a` @type ^`l.v` @kind object;
  #L3e6a04.  call temp:= `A`(v2) @signature `Ll/v;.A:()Ljava/net/Proxy;` @kind virtual;
  #L3e6a0a.  v13:= temp @kind object;
  #L3e6a0c.  v2:= v0.`l.f0.g.j.a` @type ^`l.v` @kind object;
  #L3e6a10.  call temp:= `z`(v2) @signature `Ll/v;.z:()Ljava/util/List;` @kind virtual;
  #L3e6a16.  v14:= temp @kind object;
  #L3e6a18.  v2:= v0.`l.f0.g.j.a` @type ^`l.v` @kind object;
  #L3e6a1c.  call temp:= `h`(v2) @signature `Ll/v;.h:()Ljava/util/List;` @kind virtual;
  #L3e6a22.  v15:= temp @kind object;
  #L3e6a24.  v2:= v0.`l.f0.g.j.a` @type ^`l.v` @kind object;
  #L3e6a28.  call temp:= `C`(v2) @signature `Ll/v;.C:()Ljava/net/ProxySelector;` @kind virtual;
  #L3e6a2e.  v16:= temp @kind object;
  #L3e6a30.  v4:= v1 @kind object;
  #L3e6a32.  call `<init>`(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16) @signature `Ll/a;.<init>:(Ljava/lang/String;ILl/o;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;Ll/g;Ll/b;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V` @kind direct;
  #L3e6a38.  return v1 @kind object;
}
procedure `l.y` `a`(`l.f0.g.j` v6 @kind this, `l.a0` v7 @kind object, `l.c0` v8 @kind object) @signature `Ll/f0/g/j;.a:(Ll/a0;Ll/c0;)Ll/y;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e6a4c.  if v7 == 0 then goto L3e6ce0;
  #L3e6a50.  call temp:= `m`(v7) @signature `Ll/a0;.m:()I` @kind virtual;
  #L3e6a56.  v0:= temp;
  #L3e6a58.  call temp:= `s`(v7) @signature `Ll/a0;.s:()Ll/y;` @kind virtual;
  #L3e6a5e.  v1:= temp @kind object;
  #L3e6a60.  call temp:= `e`(v1) @signature `Ll/y;.e:()Ljava/lang/String;` @kind virtual;
  #L3e6a66.  v1:= temp @kind object;
  #L3e6a68.  v2:= 307I;
  #L3e6a6c.  v3:= "GET" @kind object;
  #L3e6a70.  v4:= 0I;
  #L3e6a72.  if v0 == v2 then goto L3e6ba8;
  #L3e6a76.  v2:= 308I;
  #L3e6a7a.  if v0 == v2 then goto L3e6ba8;
  #L3e6a7e.  v2:= 401I;
  #L3e6a82.  if v0 == v2 then goto L3e6b92;
  #L3e6a86.  v2:= 503I;
  #L3e6a8a.  if v0 == v2 then goto L3e6b52;
  #L3e6a8e.  v2:= 407I;
  #L3e6a92.  if v0 == v2 then goto L3e6b02;
  #L3e6a96.  v8:= 408I;
  #L3e6a9a.  if v0 == v8 then goto L3e6aa6;
  #L3e6a9e.  goto L3e6cec;
  #L3e6aa4.  return v4 @kind object;
  #L3e6aa6.  v0:= v6.`l.f0.g.j.a` @type ^`l.v` @kind object;
  #L3e6aaa.  call temp:= `E`(v0) @signature `Ll/v;.E:()Z` @kind virtual;
  #L3e6ab0.  v0:= temp;
  #L3e6ab2.  if v0 != 0 then goto L3e6ab8;
  #L3e6ab6.  return v4 @kind object;
  #L3e6ab8.  call temp:= `s`(v7) @signature `Ll/a0;.s:()Ll/y;` @kind virtual;
  #L3e6abe.  v0:= temp @kind object;
  #L3e6ac0.  call temp:= `a`(v0) @signature `Ll/y;.a:()Ll/z;` @kind virtual;
  #L3e6ac6.  call temp:= `q`(v7) @signature `Ll/a0;.q:()Ll/a0;` @kind virtual;
  #L3e6acc.  v0:= temp @kind object;
  #L3e6ace.  if v0 == 0 then goto L3e6ae8;
  #L3e6ad2.  call temp:= `q`(v7) @signature `Ll/a0;.q:()Ll/a0;` @kind virtual;
  #L3e6ad8.  v0:= temp @kind object;
  #L3e6ada.  call temp:= `m`(v0) @signature `Ll/a0;.m:()I` @kind virtual;
  #L3e6ae0.  v0:= temp;
  #L3e6ae2.  if v0 != v8 then goto L3e6ae8;
  #L3e6ae6.  return v4 @kind object;
  #L3e6ae8.  v8:= 0I;
  #L3e6aea.  call temp:= `a`(v6, v7, v8) @signature `Ll/f0/g/j;.a:(Ll/a0;I)I` @kind direct;
  #L3e6af0.  v8:= temp;
  #L3e6af2.  if v8 <= 0 then goto L3e6af8;
  #L3e6af6.  return v4 @kind object;
  #L3e6af8.  call temp:= `s`(v7) @signature `Ll/a0;.s:()Ll/y;` @kind virtual;
  #L3e6afe.  v7:= temp @kind object;
  #L3e6b00.  return v7 @kind object;
  #L3e6b02.  if v8 == 0 then goto L3e6b10;
  #L3e6b06.  call temp:= `b`(v8) @signature `Ll/c0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L3e6b0c.  v0:= temp @kind object;
  #L3e6b0e.  goto L3e6b1c;
  #L3e6b10.  v0:= v6.`l.f0.g.j.a` @type ^`l.v` @kind object;
  #L3e6b14.  call temp:= `A`(v0) @signature `Ll/v;.A:()Ljava/net/Proxy;` @kind virtual;
  #L3e6b1a.  v0:= temp @kind object;
  #L3e6b1c.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L3e6b22.  v0:= temp @kind object;
  #L3e6b24.  v1:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L3e6b28.  if v0 != v1 then goto L3e6b42;
  #L3e6b2c.  v0:= v6.`l.f0.g.j.a` @type ^`l.v` @kind object;
  #L3e6b30.  call temp:= `B`(v0) @signature `Ll/v;.B:()Ll/b;` @kind virtual;
  #L3e6b36.  v0:= temp @kind object;
  #L3e6b38.  call temp:= `a`(v0, v8, v7) @signature `Ll/b;.a:(Ll/c0;Ll/a0;)Ll/y;` @kind interface;
  #L3e6b3e.  v7:= temp @kind object;
  #L3e6b40.  return v7 @kind object;
  #L3e6b42.  v7:= new `java.net.ProtocolException`;
  #L3e6b46.  v8:= "Received HTTP_PROXY_AUTH (407) code while not using proxy" @kind object;
  #L3e6b4a.  call `<init>`(v7, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e6b50.  throw v7;
  #L3e6b52.  call temp:= `q`(v7) @signature `Ll/a0;.q:()Ll/a0;` @kind virtual;
  #L3e6b58.  v8:= temp @kind object;
  #L3e6b5a.  if v8 == 0 then goto L3e6b74;
  #L3e6b5e.  call temp:= `q`(v7) @signature `Ll/a0;.q:()Ll/a0;` @kind virtual;
  #L3e6b64.  v8:= temp @kind object;
  #L3e6b66.  call temp:= `m`(v8) @signature `Ll/a0;.m:()I` @kind virtual;
  #L3e6b6c.  v8:= temp;
  #L3e6b6e.  if v8 != v2 then goto L3e6b74;
  #L3e6b72.  return v4 @kind object;
  #L3e6b74.  v8:= 2147483647I;
  #L3e6b7a.  call temp:= `a`(v6, v7, v8) @signature `Ll/f0/g/j;.a:(Ll/a0;I)I` @kind direct;
  #L3e6b80.  v8:= temp;
  #L3e6b82.  if v8 != 0 then goto L3e6b90;
  #L3e6b86.  call temp:= `s`(v7) @signature `Ll/a0;.s:()Ll/y;` @kind virtual;
  #L3e6b8c.  v7:= temp @kind object;
  #L3e6b8e.  return v7 @kind object;
  #L3e6b90.  return v4 @kind object;
  #L3e6b92.  v0:= v6.`l.f0.g.j.a` @type ^`l.v` @kind object;
  #L3e6b96.  call temp:= `c`(v0) @signature `Ll/v;.c:()Ll/b;` @kind virtual;
  #L3e6b9c.  v0:= temp @kind object;
  #L3e6b9e.  call temp:= `a`(v0, v8, v7) @signature `Ll/b;.a:(Ll/c0;Ll/a0;)Ll/y;` @kind interface;
  #L3e6ba4.  v7:= temp @kind object;
  #L3e6ba6.  return v7 @kind object;
  #L3e6ba8.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e6bae.  v8:= temp;
  #L3e6bb0.  if v8 != 0 then goto L3e6bc6;
  #L3e6bb4.  v8:= "HEAD" @kind object;
  #L3e6bb8.  call temp:= `equals`(v1, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e6bbe.  v8:= temp;
  #L3e6bc0.  if v8 != 0 then goto L3e6bc6;
  #L3e6bc4.  return v4 @kind object;
  #L3e6bc6.  v8:= v6.`l.f0.g.j.a` @type ^`l.v` @kind object;
  #L3e6bca.  call temp:= `s`(v8) @signature `Ll/v;.s:()Z` @kind virtual;
  #L3e6bd0.  v8:= temp;
  #L3e6bd2.  if v8 != 0 then goto L3e6bd8;
  #L3e6bd6.  return v4 @kind object;
  #L3e6bd8.  v8:= "Location" @kind object;
  #L3e6bdc.  call temp:= `b`(v7, v8) @signature `Ll/a0;.b:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3e6be2.  v8:= temp @kind object;
  #L3e6be4.  if v8 != 0 then goto L3e6bea;
  #L3e6be8.  return v4 @kind object;
  #L3e6bea.  call temp:= `s`(v7) @signature `Ll/a0;.s:()Ll/y;` @kind virtual;
  #L3e6bf0.  v0:= temp @kind object;
  #L3e6bf2.  call temp:= `g`(v0) @signature `Ll/y;.g:()Ll/s;` @kind virtual;
  #L3e6bf8.  v0:= temp @kind object;
  #L3e6bfa.  call temp:= `b`(v0, v8) @signature `Ll/s;.b:(Ljava/lang/String;)Ll/s;` @kind virtual;
  #L3e6c00.  v8:= temp @kind object;
  #L3e6c02.  if v8 != 0 then goto L3e6c08;
  #L3e6c06.  return v4 @kind object;
  #L3e6c08.  call temp:= `m`(v8) @signature `Ll/s;.m:()Ljava/lang/String;` @kind virtual;
  #L3e6c0e.  v0:= temp @kind object;
  #L3e6c10.  call temp:= `s`(v7) @signature `Ll/a0;.s:()Ll/y;` @kind virtual;
  #L3e6c16.  v2:= temp @kind object;
  #L3e6c18.  call temp:= `g`(v2) @signature `Ll/y;.g:()Ll/s;` @kind virtual;
  #L3e6c1e.  v2:= temp @kind object;
  #L3e6c20.  call temp:= `m`(v2) @signature `Ll/s;.m:()Ljava/lang/String;` @kind virtual;
  #L3e6c26.  v2:= temp @kind object;
  #L3e6c28.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e6c2e.  v0:= temp;
  #L3e6c30.  if v0 != 0 then goto L3e6c46;
  #L3e6c34.  v0:= v6.`l.f0.g.j.a` @type ^`l.v` @kind object;
  #L3e6c38.  call temp:= `t`(v0) @signature `Ll/v;.t:()Z` @kind virtual;
  #L3e6c3e.  v0:= temp;
  #L3e6c40.  if v0 != 0 then goto L3e6c46;
  #L3e6c44.  return v4 @kind object;
  #L3e6c46.  call temp:= `s`(v7) @signature `Ll/a0;.s:()Ll/y;` @kind virtual;
  #L3e6c4c.  v0:= temp @kind object;
  #L3e6c4e.  call temp:= `f`(v0) @signature `Ll/y;.f:()Ll/y$a;` @kind virtual;
  #L3e6c54.  v0:= temp @kind object;
  #L3e6c56.  call temp:= `b`(v1) @signature `Ll/f0/g/f;.b:(Ljava/lang/String;)Z` @kind static;
  #L3e6c5c.  v2:= temp;
  #L3e6c5e.  if v2 == 0 then goto L3e6cba;
  #L3e6c62.  call temp:= `d`(v1) @signature `Ll/f0/g/f;.d:(Ljava/lang/String;)Z` @kind static;
  #L3e6c68.  v2:= temp;
  #L3e6c6a.  call temp:= `c`(v1) @signature `Ll/f0/g/f;.c:(Ljava/lang/String;)Z` @kind static;
  #L3e6c70.  v5:= temp;
  #L3e6c72.  if v5 == 0 then goto L3e6c7e;
  #L3e6c76.  call temp:= `a`(v0, v3, v4) @signature `Ll/y$a;.a:(Ljava/lang/String;Ll/z;)Ll/y$a;` @kind virtual;
  #L3e6c7c.  goto L3e6c98;
  #L3e6c7e.  if v2 == 0 then goto L3e6c92;
  #L3e6c82.  call temp:= `s`(v7) @signature `Ll/a0;.s:()Ll/y;` @kind virtual;
  #L3e6c88.  v3:= temp @kind object;
  #L3e6c8a.  call temp:= `a`(v3) @signature `Ll/y;.a:()Ll/z;` @kind virtual;
  #L3e6c90.  v4:= temp @kind object;
  #L3e6c92.  call temp:= `a`(v0, v1, v4) @signature `Ll/y$a;.a:(Ljava/lang/String;Ll/z;)Ll/y$a;` @kind virtual;
  #L3e6c98.  if v2 != 0 then goto L3e6cba;
  #L3e6c9c.  v1:= "Transfer-Encoding" @kind object;
  #L3e6ca0.  call temp:= `a`(v0, v1) @signature `Ll/y$a;.a:(Ljava/lang/String;)Ll/y$a;` @kind virtual;
  #L3e6ca6.  v1:= "Content-Length" @kind object;
  #L3e6caa.  call temp:= `a`(v0, v1) @signature `Ll/y$a;.a:(Ljava/lang/String;)Ll/y$a;` @kind virtual;
  #L3e6cb0.  v1:= "Content-Type" @kind object;
  #L3e6cb4.  call temp:= `a`(v0, v1) @signature `Ll/y$a;.a:(Ljava/lang/String;)Ll/y$a;` @kind virtual;
  #L3e6cba.  call temp:= `a`(v6, v7, v8) @signature `Ll/f0/g/j;.a:(Ll/a0;Ll/s;)Z` @kind direct;
  #L3e6cc0.  v7:= temp;
  #L3e6cc2.  if v7 != 0 then goto L3e6cd0;
  #L3e6cc6.  v7:= "Authorization" @kind object;
  #L3e6cca.  call temp:= `a`(v0, v7) @signature `Ll/y$a;.a:(Ljava/lang/String;)Ll/y$a;` @kind virtual;
  #L3e6cd0.  call temp:= `a`(v0, v8) @signature `Ll/y$a;.a:(Ll/s;)Ll/y$a;` @kind virtual;
  #L3e6cd6.  call temp:= `a`(v0) @signature `Ll/y$a;.a:()Ll/y;` @kind virtual;
  #L3e6cdc.  v7:= temp @kind object;
  #L3e6cde.  return v7 @kind object;
  #L3e6ce0.  v7:= new `java.lang.IllegalStateException`;
  #L3e6ce4.  call `<init>`(v7) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L3e6cea.  throw v7;
  #L3e6cec.  switch v0
                  | 300 => goto L3e6bc6
                  | 301 => goto L3e6bc6
                  | 302 => goto L3e6bc6
                  | 303 => goto L3e6bc6
                  | else => goto L3e6aa4;
}
procedure `boolean` `a`(`l.f0.g.j` v2 @kind this, `java.io.IOException` v3 @kind object, `l.f0.f.g` v4 @kind object, `boolean` v5 , `l.y` v6 @kind object) @signature `Ll/f0/g/j;.a:(Ljava/io/IOException;Ll/f0/f/g;ZLl/y;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e6870.  call `a`(v4, v3) @signature `Ll/f0/f/g;.a:(Ljava/io/IOException;)V` @kind virtual;
  #L3e6876.  v0:= v2.`l.f0.g.j.a` @type ^`l.v` @kind object;
  #L3e687a.  call temp:= `E`(v0) @signature `Ll/v;.E:()Z` @kind virtual;
  #L3e6880.  v0:= temp;
  #L3e6882.  v1:= 0I;
  #L3e6884.  if v0 != 0 then goto L3e688a;
  #L3e6888.  return v1;
  #L3e688a.  if v5 == 0 then goto L3e6894;
  #L3e688e.  call temp:= `a`(v6) @signature `Ll/y;.a:()Ll/z;` @kind virtual;
  #L3e6894.  call temp:= `a`(v2, v3, v5) @signature `Ll/f0/g/j;.a:(Ljava/io/IOException;Z)Z` @kind direct;
  #L3e689a.  v3:= temp;
  #L3e689c.  if v3 != 0 then goto L3e68a2;
  #L3e68a0.  return v1;
  #L3e68a2.  call temp:= `d`(v4) @signature `Ll/f0/f/g;.d:()Z` @kind virtual;
  #L3e68a8.  v3:= temp;
  #L3e68aa.  if v3 != 0 then goto L3e68b0;
  #L3e68ae.  return v1;
  #L3e68b0.  v3:= 1I;
  #L3e68b2.  return v3;
}
procedure `boolean` `a`(`l.f0.g.j` v3 @kind this, `java.io.IOException` v4 @kind object, `boolean` v5 ) @signature `Ll/f0/g/j;.a:(Ljava/io/IOException;Z)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e6814.  v0:= instanceof @variable v4 @type ^`java.net.ProtocolException` @kind boolean;
  #L3e6818.  v1:= 0I;
  #L3e681a.  if v0 == 0 then goto L3e6820;
  #L3e681e.  return v1;
  #L3e6820.  v0:= instanceof @variable v4 @type ^`java.io.InterruptedIOException` @kind boolean;
  #L3e6824.  v2:= 1I;
  #L3e6826.  if v0 == 0 then goto L3e683a;
  #L3e682a.  v4:= instanceof @variable v4 @type ^`java.net.SocketTimeoutException` @kind boolean;
  #L3e682e.  if v4 == 0 then goto L3e6838;
  #L3e6832.  if v5 != 0 then goto L3e6838;
  #L3e6836.  v1:= 1I;
  #L3e6838.  return v1;
  #L3e683a.  v5:= instanceof @variable v4 @type ^`javax.net.ssl.SSLHandshakeException` @kind boolean;
  #L3e683e.  if v5 == 0 then goto L3e6854;
  #L3e6842.  call temp:= `getCause`(v4) @signature `Ljava/io/IOException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L3e6848.  v5:= temp @kind object;
  #L3e684a.  v5:= instanceof @variable v5 @type ^`java.security.cert.CertificateException` @kind boolean;
  #L3e684e.  if v5 == 0 then goto L3e6854;
  #L3e6852.  return v1;
  #L3e6854.  v4:= instanceof @variable v4 @type ^`javax.net.ssl.SSLPeerUnverifiedException` @kind boolean;
  #L3e6858.  if v4 == 0 then goto L3e685e;
  #L3e685c.  return v1;
  #L3e685e.  return v2;
}
procedure `boolean` `a`(`l.f0.g.j` v2 @kind this, `l.a0` v3 @kind object, `l.s` v4 @kind object) @signature `Ll/f0/g/j;.a:(Ll/a0;Ll/s;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e68c4.  call temp:= `s`(v3) @signature `Ll/a0;.s:()Ll/y;` @kind virtual;
  #L3e68ca.  v3:= temp @kind object;
  #L3e68cc.  call temp:= `g`(v3) @signature `Ll/y;.g:()Ll/s;` @kind virtual;
  #L3e68d2.  v3:= temp @kind object;
  #L3e68d4.  call temp:= `g`(v3) @signature `Ll/s;.g:()Ljava/lang/String;` @kind virtual;
  #L3e68da.  v0:= temp @kind object;
  #L3e68dc.  call temp:= `g`(v4) @signature `Ll/s;.g:()Ljava/lang/String;` @kind virtual;
  #L3e68e2.  v1:= temp @kind object;
  #L3e68e4.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e68ea.  v0:= temp;
  #L3e68ec.  if v0 == 0 then goto L3e6924;
  #L3e68f0.  call temp:= `j`(v3) @signature `Ll/s;.j:()I` @kind virtual;
  #L3e68f6.  v0:= temp;
  #L3e68f8.  call temp:= `j`(v4) @signature `Ll/s;.j:()I` @kind virtual;
  #L3e68fe.  v1:= temp;
  #L3e6900.  if v0 != v1 then goto L3e6924;
  #L3e6904.  call temp:= `m`(v3) @signature `Ll/s;.m:()Ljava/lang/String;` @kind virtual;
  #L3e690a.  v3:= temp @kind object;
  #L3e690c.  call temp:= `m`(v4) @signature `Ll/s;.m:()Ljava/lang/String;` @kind virtual;
  #L3e6912.  v4:= temp @kind object;
  #L3e6914.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e691a.  v3:= temp;
  #L3e691c.  if v3 == 0 then goto L3e6924;
  #L3e6920.  v3:= 1I;
  #L3e6922.  goto L3e6926;
  #L3e6924.  v3:= 0I;
  #L3e6926.  return v3;
}
procedure `l.a0` `a`(`l.f0.g.j` v14 @kind this, `l.t$a` v15 @kind object) @signature `Ll/f0/g/j;.a:(Ll/t$a;)Ll/a0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L3e6d14.  call temp:= `d`(v15) @signature `Ll/t$a;.d:()Ll/y;` @kind interface;
  #L3e6d1a.  v0:= temp @kind object;
  #L3e6d1c.  v15:= (`l.f0.g.g`) v15 @kind object;
  #L3e6d20.  call temp:= `e`(v15) @signature `Ll/f0/g/g;.e:()Ll/e;` @kind virtual;
  #L3e6d26.  v7:= temp @kind object;
  #L3e6d28.  call temp:= `g`(v15) @signature `Ll/f0/g/g;.g:()Ll/p;` @kind virtual;
  #L3e6d2e.  v8:= temp @kind object;
  #L3e6d30.  v9:= new `l.f0.f.g`;
  #L3e6d34.  v1:= v14.`l.f0.g.j.a` @type ^`l.v` @kind object;
  #L3e6d38.  call temp:= `g`(v1) @signature `Ll/v;.g:()Ll/j;` @kind virtual;
  #L3e6d3e.  v2:= temp @kind object;
  #L3e6d40.  call temp:= `g`(v0) @signature `Ll/y;.g:()Ll/s;` @kind virtual;
  #L3e6d46.  v1:= temp @kind object;
  #L3e6d48.  call temp:= `a`(v14, v1) @signature `Ll/f0/g/j;.a:(Ll/s;)Ll/a;` @kind direct;
  #L3e6d4e.  v3:= temp @kind object;
  #L3e6d50.  v6:= v14.`l.f0.g.j.c` @type ^`java.lang.Object` @kind object;
  #L3e6d54.  v1:= v9 @kind object;
  #L3e6d56.  v4:= v7 @kind object;
  #L3e6d58.  v5:= v8 @kind object;
  #L3e6d5a.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Ll/f0/f/g;.<init>:(Ll/j;Ll/a;Ll/e;Ll/p;Ljava/lang/Object;)V` @kind direct;
  #L3e6d60.  v14.`l.f0.g.j.b` @type ^`l.f0.f.g` := v9 @kind object;
  #L3e6d64.  v10:= 0I;
  #L3e6d66.  v11:= 0I;
  #L3e6d68.  v1:= v11 @kind object;
  #L3e6d6a.  v2:= 0I;
  #L3e6d6c.  v3:= v14.`l.f0.g.j.d` @type ^`boolean` @kind boolean;
  #L3e6d70.  if v3 != 0 then goto L3e6f1a;
  #L3e6d74.  call temp:= `a`(v15, v0, v9, v11, v11) @signature `Ll/f0/g/g;.a:(Ll/y;Ll/f0/f/g;Ll/f0/g/c;Ll/f0/f/c;)Ll/a0;` @kind virtual;
  #L3e6d7a.  v0:= temp @kind object;
  #L3e6d7c.  if v1 == 0 then goto L3e6dac;
  #L3e6d80.  call temp:= `p`(v0) @signature `Ll/a0;.p:()Ll/a0$a;` @kind virtual;
  #L3e6d86.  v0:= temp @kind object;
  #L3e6d88.  call temp:= `p`(v1) @signature `Ll/a0;.p:()Ll/a0$a;` @kind virtual;
  #L3e6d8e.  v1:= temp @kind object;
  #L3e6d90.  call temp:= `a`(v1, v11) @signature `Ll/a0$a;.a:(Ll/b0;)Ll/a0$a;` @kind virtual;
  #L3e6d96.  call temp:= `a`(v1) @signature `Ll/a0$a;.a:()Ll/a0;` @kind virtual;
  #L3e6d9c.  v1:= temp @kind object;
  #L3e6d9e.  call temp:= `c`(v0, v1) @signature `Ll/a0$a;.c:(Ll/a0;)Ll/a0$a;` @kind virtual;
  #L3e6da4.  call temp:= `a`(v0) @signature `Ll/a0$a;.a:()Ll/a0;` @kind virtual;
  #L3e6daa.  v0:= temp @kind object;
  #L3e6dac.  call temp:= `g`(v9) @signature `Ll/f0/f/g;.g:()Ll/c0;` @kind virtual;
  #L3e6db2.  v1:= temp @kind object;
  #L3e6db4.  call temp:= `a`(v14, v0, v1) @signature `Ll/f0/g/j;.a:(Ll/a0;Ll/c0;)Ll/y;` @kind direct;
  #L3e6dba.  v12:= temp @kind object;
  #L3e6dbc.  if v12 != 0 then goto L3e6dc8;
  #L3e6dc0.  call `f`(v9) @signature `Ll/f0/f/g;.f:()V` @kind virtual;
  #L3e6dc6.  return v0 @kind object;
  #L3e6dc8.  call temp:= `k`(v0) @signature `Ll/a0;.k:()Ll/b0;` @kind virtual;
  #L3e6dce.  v1:= temp @kind object;
  #L3e6dd0.  call `a`(v1) @signature `Ll/f0/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L3e6dd6.  v13:= v2 + 1;
  #L3e6dda.  v1:= 20I;
  #L3e6dde.  if v13 > v1 then goto L3e6e84;
  #L3e6de2.  call temp:= `a`(v12) @signature `Ll/y;.a:()Ll/z;` @kind virtual;
  #L3e6de8.  call temp:= `g`(v12) @signature `Ll/y;.g:()Ll/s;` @kind virtual;
  #L3e6dee.  v1:= temp @kind object;
  #L3e6df0.  call temp:= `a`(v14, v0, v1) @signature `Ll/f0/g/j;.a:(Ll/a0;Ll/s;)Z` @kind direct;
  #L3e6df6.  v1:= temp;
  #L3e6df8.  if v1 != 0 then goto L3e6e38;
  #L3e6dfc.  call `f`(v9) @signature `Ll/f0/f/g;.f:()V` @kind virtual;
  #L3e6e02.  v9:= new `l.f0.f.g`;
  #L3e6e06.  v1:= v14.`l.f0.g.j.a` @type ^`l.v` @kind object;
  #L3e6e0a.  call temp:= `g`(v1) @signature `Ll/v;.g:()Ll/j;` @kind virtual;
  #L3e6e10.  v2:= temp @kind object;
  #L3e6e12.  call temp:= `g`(v12) @signature `Ll/y;.g:()Ll/s;` @kind virtual;
  #L3e6e18.  v1:= temp @kind object;
  #L3e6e1a.  call temp:= `a`(v14, v1) @signature `Ll/f0/g/j;.a:(Ll/s;)Ll/a;` @kind direct;
  #L3e6e20.  v3:= temp @kind object;
  #L3e6e22.  v6:= v14.`l.f0.g.j.c` @type ^`java.lang.Object` @kind object;
  #L3e6e26.  v1:= v9 @kind object;
  #L3e6e28.  v4:= v7 @kind object;
  #L3e6e2a.  v5:= v8 @kind object;
  #L3e6e2c.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Ll/f0/f/g;.<init>:(Ll/j;Ll/a;Ll/e;Ll/p;Ljava/lang/Object;)V` @kind direct;
  #L3e6e32.  v14.`l.f0.g.j.b` @type ^`l.f0.f.g` := v9 @kind object;
  #L3e6e36.  goto L3e6e44;
  #L3e6e38.  call temp:= `b`(v9) @signature `Ll/f0/f/g;.b:()Ll/f0/g/c;` @kind virtual;
  #L3e6e3e.  v1:= temp @kind object;
  #L3e6e40.  if v1 != 0 then goto L3e6e4c;
  #L3e6e44.  v1:= v0 @kind object;
  #L3e6e46.  v0:= v12 @kind object;
  #L3e6e48.  v2:= v13;
  #L3e6e4a.  goto L3e6d6c;
  #L3e6e4c.  v15:= new `java.lang.IllegalStateException`;
  #L3e6e50.  v1:= new `java.lang.StringBuilder`;
  #L3e6e54.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e6e5a.  v2:= "Closing the body of " @kind object;
  #L3e6e5e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6e64.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6e6a.  v0:= " didn't close its backing stream. Bad interceptor?" @kind object;
  #L3e6e6e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6e74.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e6e7a.  v0:= temp @kind object;
  #L3e6e7c.  call `<init>`(v15, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e6e82.  throw v15;
  #L3e6e84.  call `f`(v9) @signature `Ll/f0/f/g;.f:()V` @kind virtual;
  #L3e6e8a.  v15:= new `java.net.ProtocolException`;
  #L3e6e8e.  v0:= new `java.lang.StringBuilder`;
  #L3e6e92.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e6e98.  v1:= "Too many follow-up requests: " @kind object;
  #L3e6e9c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6ea2.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6ea8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e6eae.  v0:= temp @kind object;
  #L3e6eb0.  call `<init>`(v15, v0) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e6eb6.  throw v15;
  #L3e6eb8.  v15:= Exception @type ^`java.io.IOException` @kind object;
  #L3e6eba.  call `f`(v9) @signature `Ll/f0/f/g;.f:()V` @kind virtual;
  #L3e6ec0.  throw v15;
  #L3e6ec2.  v15:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e6ec4.  goto L3e6f0c;
  #L3e6ec6.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L3e6ec8.  v4:= instanceof @variable v3 @type ^`l.f0.i.a` @kind boolean;
  #L3e6ecc.  if v4 != 0 then goto L3e6ed4;
  #L3e6ed0.  v4:= 1I;
  #L3e6ed2.  goto L3e6ed6;
  #L3e6ed4.  v4:= 0I;
  #L3e6ed6.  call temp:= `a`(v14, v3, v9, v4, v0) @signature `Ll/f0/g/j;.a:(Ljava/io/IOException;Ll/f0/f/g;ZLl/y;)Z` @kind direct;
  #L3e6edc.  v4:= temp;
  #L3e6ede.  if v4 == 0 then goto L3e6ee6;
  #L3e6ee2.  goto L3e6d6c;
  #L3e6ee6.  throw v3;
  #L3e6ee8.  v3:= Exception @type ^`l.f0.f.e` @kind object;
  #L3e6eea.  call temp:= `b`(v3) @signature `Ll/f0/f/e;.b:()Ljava/io/IOException;` @kind virtual;
  #L3e6ef0.  v4:= temp @kind object;
  #L3e6ef2.  call temp:= `a`(v14, v4, v9, v10, v0) @signature `Ll/f0/g/j;.a:(Ljava/io/IOException;Ll/f0/f/g;ZLl/y;)Z` @kind direct;
  #L3e6ef8.  v4:= temp;
  #L3e6efa.  if v4 == 0 then goto L3e6f02;
  #L3e6efe.  goto L3e6d6c;
  #L3e6f02.  call temp:= `a`(v3) @signature `Ll/f0/f/e;.a:()Ljava/io/IOException;` @kind virtual;
  #L3e6f08.  v15:= temp @kind object;
  #L3e6f0a.  throw v15;
  #L3e6f0c.  call `a`(v9, v11) @signature `Ll/f0/f/g;.a:(Ljava/io/IOException;)V` @kind virtual;
  #L3e6f12.  call `f`(v9) @signature `Ll/f0/f/g;.f:()V` @kind virtual;
  #L3e6f18.  throw v15;
  #L3e6f1a.  call `f`(v9) @signature `Ll/f0/f/g;.f:()V` @kind virtual;
  #L3e6f20.  v15:= new `java.io.IOException`;
  #L3e6f24.  v0:= "Canceled" @kind object;
  #L3e6f28.  call `<init>`(v15, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e6f2e.  throw v15;
  catch `l.f0.f.e` @[L3e6d74..L3e6d7c] goto L3e6ee8;
  catch `java.io.IOException` @[L3e6d74..L3e6d7c] goto L3e6ec6;
  catch `java.lang.Throwable` @[L3e6d74..L3e6d7c] goto L3e6ec2;
  catch `java.io.IOException` @[L3e6dac..L3e6dbc] goto L3e6eb8;
  catch `java.lang.Throwable` @[L3e6ec8..L3e6f0c] goto L3e6ec2;
}
procedure `void` `a`(`l.f0.g.j` v1 @kind this) @signature `Ll/f0/g/j;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6f88.  v0:= 1I;
  #L3e6f8a.  v1.`l.f0.g.j.d` @type ^`boolean` := v0 @kind boolean;
  #L3e6f8e.  v0:= v1.`l.f0.g.j.b` @type ^`l.f0.f.g` @kind object;
  #L3e6f92.  if v0 == 0 then goto L3e6f9c;
  #L3e6f96.  call `a`(v0) @signature `Ll/f0/f/g;.a:()V` @kind virtual;
  #L3e6f9c.  return @kind void;
}
procedure `void` `a`(`l.f0.g.j` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Ll/f0/g/j;.a:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L3e6fb0.  v0.`l.f0.g.j.c` @type ^`java.lang.Object` := v1 @kind object;
  #L3e6fb4.  return @kind void;
}
procedure `boolean` `b`(`l.f0.g.j` v1 @kind this) @signature `Ll/f0/g/j;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e67fc.  v0:= v1.`l.f0.g.j.d` @type ^`boolean` @kind boolean;
  #L3e6800.  return v0;
}
