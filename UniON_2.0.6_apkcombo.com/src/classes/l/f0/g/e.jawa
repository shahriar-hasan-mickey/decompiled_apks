record `l.f0.g.e` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<clinit>`() @signature `Ll/f0/g/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e6168.  v0:= "\"\\" @kind object;
  #L3e616c.  call temp:= `c`(v0) @signature `Lm/f;.c:(Ljava/lang/String;)Lm/f;` @kind static;
  #L3e6172.  v0:= "\t ,=" @kind object;
  #L3e6176.  call temp:= `c`(v0) @signature `Lm/f;.c:(Ljava/lang/String;)Lm/f;` @kind static;
  #L3e617c.  return @kind void;
}
procedure `int` `a`(`java.lang.String` v3 @kind object, `int` v4 ) @signature `Ll/f0/g/e;.a:(Ljava/lang/String;I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e6018.  call temp:= `parseLong`(v3) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L3e601e.  v3:= temp @kind wide;
  #L3e6020.  v0:= 2147483647L;
  #L3e6026.  v2:= lcmp(v3, v0);
  #L3e602a.  if v2 <= 0 then goto L3e6036;
  #L3e602e.  v3:= 2147483647I;
  #L3e6034.  return v3;
  #L3e6036.  v0:= 0L;
  #L3e603a.  v2:= lcmp(v3, v0);
  #L3e603e.  if v2 >= 0 then goto L3e6046;
  #L3e6042.  v3:= 0I;
  #L3e6044.  return v3;
  #L3e6046.  v4:= (`int`) v3 @kind l2i;
  #L3e6048.  return v4;
  catch `java.lang.NumberFormatException` @[L3e6018..L3e6020] goto L3e6048;
}
procedure `int` `a`(`java.lang.String` v2 @kind object, `int` v3 , `java.lang.String` v4 @kind object) @signature `Ll/f0/g/e;.a:(Ljava/lang/String;ILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e606c.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3e6072.  v0:= temp;
  #L3e6074.  if v3 >= v0 then goto L3e6096;
  #L3e6078.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3e607e.  v0:= temp;
  #L3e6080.  call temp:= `indexOf`(v4, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L3e6086.  v0:= temp;
  #L3e6088.  v1:= -1I;
  #L3e608a.  if v0 == v1 then goto L3e6090;
  #L3e608e.  goto L3e6096;
  #L3e6090.  v3:= v3 + 1;
  #L3e6094.  goto L3e606c;
  #L3e6096.  return v3;
}
procedure `long` `a`(`java.lang.String` v2 @kind object) @signature `Ll/f0/g/e;.a:(Ljava/lang/String;)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3e6134.  v0:= -1L;
  #L3e6138.  if v2 != 0 then goto L3e613e;
  #L3e613c.  return v0 @kind wide;
  #L3e613e.  call temp:= `parseLong`(v2) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L3e6144.  v0:= temp @kind wide;
  #L3e6146.  return v0 @kind wide;
  catch `java.lang.NumberFormatException` @[L3e613e..L3e6146] goto L3e6146;
}
procedure `long` `a`(`l.a0` v2 @kind object) @signature `Ll/f0/g/e;.a:(Ll/a0;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e6110.  call temp:= `o`(v2) @signature `Ll/a0;.o:()Ll/r;` @kind virtual;
  #L3e6116.  v2:= temp @kind object;
  #L3e6118.  call temp:= `a`(v2) @signature `Ll/f0/g/e;.a:(Ll/r;)J` @kind static;
  #L3e611e.  v0:= temp @kind wide;
  #L3e6120.  return v0 @kind wide;
}
procedure `long` `a`(`l.r` v2 @kind object) @signature `Ll/f0/g/e;.a:(Ll/r;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e60e8.  v0:= "Content-Length" @kind object;
  #L3e60ec.  call temp:= `a`(v2, v0) @signature `Ll/r;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3e60f2.  v2:= temp @kind object;
  #L3e60f4.  call temp:= `a`(v2) @signature `Ll/f0/g/e;.a:(Ljava/lang/String;)J` @kind static;
  #L3e60fa.  v0:= temp @kind wide;
  #L3e60fc.  return v0 @kind wide;
}
procedure `void` `a`(`l.m` v1 @kind object, `l.s` v2 @kind object, `l.r` v3 @kind object) @signature `Ll/f0/g/e;.a:(Ll/m;Ll/s;Ll/r;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e6190.  v0:= `@@l.m.a` @type ^`l.m` @kind object;
  #L3e6194.  if v1 != v0 then goto L3e619a;
  #L3e6198.  return @kind void;
  #L3e619a.  call temp:= `a`(v2, v3) @signature `Ll/l;.a:(Ll/s;Ll/r;)Ljava/util/List;` @kind static;
  #L3e61a0.  v3:= temp @kind object;
  #L3e61a2.  call temp:= `isEmpty`(v3) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3e61a8.  v0:= temp;
  #L3e61aa.  if v0 == 0 then goto L3e61b0;
  #L3e61ae.  return @kind void;
  #L3e61b0.  call `a`(v1, v2, v3) @signature `Ll/m;.a:(Ll/s;Ljava/util/List;)V` @kind interface;
  #L3e61b6.  return @kind void;
}
procedure `int` `b`(`java.lang.String` v2 @kind object, `int` v3 ) @signature `Ll/f0/g/e;.b:(Ljava/lang/String;I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e60a8.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3e60ae.  v0:= temp;
  #L3e60b0.  if v3 >= v0 then goto L3e60d4;
  #L3e60b4.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3e60ba.  v0:= temp;
  #L3e60bc.  v1:= 32I;
  #L3e60c0.  if v0 == v1 then goto L3e60ce;
  #L3e60c4.  v1:= 9I;
  #L3e60c8.  if v0 == v1 then goto L3e60ce;
  #L3e60cc.  goto L3e60d4;
  #L3e60ce.  v3:= v3 + 1;
  #L3e60d2.  goto L3e60a8;
  #L3e60d4.  return v3;
}
procedure `boolean` `b`(`l.a0` v8 @kind object) @signature `Ll/f0/g/e;.b:(Ll/a0;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3e5f80.  call temp:= `s`(v8) @signature `Ll/a0;.s:()Ll/y;` @kind virtual;
  #L3e5f86.  v0:= temp @kind object;
  #L3e5f88.  call temp:= `e`(v0) @signature `Ll/y;.e:()Ljava/lang/String;` @kind virtual;
  #L3e5f8e.  v0:= temp @kind object;
  #L3e5f90.  v1:= "HEAD" @kind object;
  #L3e5f94.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e5f9a.  v0:= temp;
  #L3e5f9c.  v1:= 0I;
  #L3e5f9e.  if v0 == 0 then goto L3e5fa4;
  #L3e5fa2.  return v1;
  #L3e5fa4.  call temp:= `m`(v8) @signature `Ll/a0;.m:()I` @kind virtual;
  #L3e5faa.  v0:= temp;
  #L3e5fac.  v2:= 100I;
  #L3e5fb0.  v3:= 1I;
  #L3e5fb2.  if v0 < v2 then goto L3e5fbe;
  #L3e5fb6.  v2:= 200I;
  #L3e5fba.  if v0 < v2 then goto L3e5fd0;
  #L3e5fbe.  v2:= 204I;
  #L3e5fc2.  if v0 == v2 then goto L3e5fd0;
  #L3e5fc6.  v2:= 304I;
  #L3e5fca.  if v0 == v2 then goto L3e5fd0;
  #L3e5fce.  return v3;
  #L3e5fd0.  call temp:= `a`(v8) @signature `Ll/f0/g/e;.a:(Ll/a0;)J` @kind static;
  #L3e5fd6.  v4:= temp @kind wide;
  #L3e5fd8.  v6:= -1L;
  #L3e5fdc.  v0:= lcmp(v4, v6);
  #L3e5fe0.  if v0 != 0 then goto L3e6004;
  #L3e5fe4.  v0:= "Transfer-Encoding" @kind object;
  #L3e5fe8.  call temp:= `b`(v8, v0) @signature `Ll/a0;.b:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3e5fee.  v8:= temp @kind object;
  #L3e5ff0.  v0:= "chunked" @kind object;
  #L3e5ff4.  call temp:= `equalsIgnoreCase`(v0, v8) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3e5ffa.  v8:= temp;
  #L3e5ffc.  if v8 == 0 then goto L3e6002;
  #L3e6000.  goto L3e6004;
  #L3e6002.  return v1;
  #L3e6004.  return v3;
}
