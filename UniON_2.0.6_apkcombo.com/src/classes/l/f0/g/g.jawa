record `l.f0.g.g` @kind class @AccessFlag PUBLIC_FINAL extends `l.t$a` @kind interface {
  `java.util.List` `l.f0.g.g.a` @AccessFlag PRIVATE_FINAL;
  `l.f0.f.g` `l.f0.g.g.b` @AccessFlag PRIVATE_FINAL;
  `l.f0.g.c` `l.f0.g.g.c` @AccessFlag PRIVATE_FINAL;
  `l.f0.f.c` `l.f0.g.g.d` @AccessFlag PRIVATE_FINAL;
  `int` `l.f0.g.g.e` @AccessFlag PRIVATE_FINAL;
  `l.y` `l.f0.g.g.f` @AccessFlag PRIVATE_FINAL;
  `l.e` `l.f0.g.g.g` @AccessFlag PRIVATE_FINAL;
  `l.p` `l.f0.g.g.h` @AccessFlag PRIVATE_FINAL;
  `int` `l.f0.g.g.i` @AccessFlag PRIVATE_FINAL;
  `int` `l.f0.g.g.j` @AccessFlag PRIVATE_FINAL;
  `int` `l.f0.g.g.k` @AccessFlag PRIVATE_FINAL;
  `int` `l.f0.g.g.l` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`l.f0.g.g` v0 @kind this, `java.util.List` v1 @kind object, `l.f0.f.g` v2 @kind object, `l.f0.g.c` v3 @kind object, `l.f0.f.c` v4 @kind object, `int` v5 , `l.y` v6 @kind object, `l.e` v7 @kind object, `l.p` v8 @kind object, `int` v9 , `int` v10 , `int` v11 ) @signature `Ll/f0/g/g;.<init>:(Ljava/util/List;Ll/f0/f/g;Ll/f0/g/c;Ll/f0/f/c;ILl/y;Ll/e;Ll/p;III)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e6650.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e6656.  v0.`l.f0.g.g.a` @type ^`java.util.List` := v1 @kind object;
  #L3e665a.  v0.`l.f0.g.g.d` @type ^`l.f0.f.c` := v4 @kind object;
  #L3e665e.  v0.`l.f0.g.g.b` @type ^`l.f0.f.g` := v2 @kind object;
  #L3e6662.  v0.`l.f0.g.g.c` @type ^`l.f0.g.c` := v3 @kind object;
  #L3e6666.  v0.`l.f0.g.g.e` @type ^`int` := v5;
  #L3e666a.  v0.`l.f0.g.g.f` @type ^`l.y` := v6 @kind object;
  #L3e666e.  v0.`l.f0.g.g.g` @type ^`l.e` := v7 @kind object;
  #L3e6672.  v0.`l.f0.g.g.h` @type ^`l.p` := v8 @kind object;
  #L3e6676.  v0.`l.f0.g.g.i` @type ^`int` := v9;
  #L3e667a.  v0.`l.f0.g.g.j` @type ^`int` := v10;
  #L3e667e.  v0.`l.f0.g.g.k` @type ^`int` := v11;
  #L3e6682.  return @kind void;
}
procedure `int` `a`(`l.f0.g.g` v1 @kind this) @signature `Ll/f0/g/g;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e631c.  v0:= v1.`l.f0.g.g.i` @type ^`int`;
  #L3e6320.  return v0;
}
procedure `l.a0` `a`(`l.f0.g.g` v3 @kind this, `l.y` v4 @kind object) @signature `Ll/f0/g/g;.a:(Ll/y;)Ll/a0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e63c4.  v0:= v3.`l.f0.g.g.b` @type ^`l.f0.f.g` @kind object;
  #L3e63c8.  v1:= v3.`l.f0.g.g.c` @type ^`l.f0.g.c` @kind object;
  #L3e63cc.  v2:= v3.`l.f0.g.g.d` @type ^`l.f0.f.c` @kind object;
  #L3e63d0.  call temp:= `a`(v3, v4, v0, v1, v2) @signature `Ll/f0/g/g;.a:(Ll/y;Ll/f0/f/g;Ll/f0/g/c;Ll/f0/f/c;)Ll/a0;` @kind virtual;
  #L3e63d6.  v4:= temp @kind object;
  #L3e63d8.  return v4 @kind object;
}
procedure `l.a0` `a`(`l.f0.g.g` v17 @kind this, `l.y` v18 @kind object, `l.f0.f.g` v19 @kind object, `l.f0.g.c` v20 @kind object, `l.f0.f.c` v21 @kind object) @signature `Ll/f0/g/g;.a:(Ll/y;Ll/f0/f/g;Ll/f0/g/c;Ll/f0/f/c;)Ll/a0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L3e63ec.  v0:= v17 @kind object;
  #L3e63f0.  v1:= v0.`l.f0.g.g.e` @type ^`int`;
  #L3e63f4.  v2:= v0.`l.f0.g.g.a` @type ^`java.util.List` @kind object;
  #L3e63f8.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e63fe.  v2:= temp;
  #L3e6400.  if v1 >= v2 then goto L3e6602;
  #L3e6404.  v1:= v0.`l.f0.g.g.l` @type ^`int`;
  #L3e6408.  v2:= 1I;
  #L3e640a.  v1:= v1 + v2 @kind int;
  #L3e640c.  v0.`l.f0.g.g.l` @type ^`int` := v1;
  #L3e6410.  v1:= v0.`l.f0.g.g.c` @type ^`l.f0.g.c` @kind object;
  #L3e6414.  v3:= "network interceptor " @kind object;
  #L3e6418.  if v1 == 0 then goto L3e647c;
  #L3e641c.  v1:= v0.`l.f0.g.g.d` @type ^`l.f0.f.c` @kind object;
  #L3e6420.  call temp:= `g`(v18) @signature `Ll/y;.g:()Ll/s;` @kind virtual;
  #L3e6426.  v4:= temp @kind object;
  #L3e6428.  call temp:= `a`(v1, v4) @signature `Ll/f0/f/c;.a:(Ll/s;)Z` @kind virtual;
  #L3e642e.  v1:= temp;
  #L3e6430.  if v1 == 0 then goto L3e6436;
  #L3e6434.  goto L3e647c;
  #L3e6436.  v1:= new `java.lang.IllegalStateException`;
  #L3e643a.  v4:= new `java.lang.StringBuilder`;
  #L3e643e.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e6444.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e644a.  v3:= v0.`l.f0.g.g.a` @type ^`java.util.List` @kind object;
  #L3e644e.  v5:= v0.`l.f0.g.g.e` @type ^`int`;
  #L3e6452.  v5:= v5 - v2 @kind int;
  #L3e6454.  call temp:= `get`(v3, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e645a.  v2:= temp @kind object;
  #L3e645c.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6462.  v2:= " must retain the same host and port" @kind object;
  #L3e6466.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e646c.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e6472.  v2:= temp @kind object;
  #L3e6474.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e647a.  throw v1;
  #L3e647c.  v1:= v0.`l.f0.g.g.c` @type ^`l.f0.g.c` @kind object;
  #L3e6480.  v4:= " must call proceed() exactly once" @kind object;
  #L3e6484.  if v1 == 0 then goto L3e64d4;
  #L3e6488.  v1:= v0.`l.f0.g.g.l` @type ^`int`;
  #L3e648c.  if v1 > v2 then goto L3e6492;
  #L3e6490.  goto L3e64d4;
  #L3e6492.  v1:= new `java.lang.IllegalStateException`;
  #L3e6496.  v5:= new `java.lang.StringBuilder`;
  #L3e649a.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e64a0.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e64a6.  v3:= v0.`l.f0.g.g.a` @type ^`java.util.List` @kind object;
  #L3e64aa.  v6:= v0.`l.f0.g.g.e` @type ^`int`;
  #L3e64ae.  v6:= v6 - v2 @kind int;
  #L3e64b0.  call temp:= `get`(v3, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e64b6.  v2:= temp @kind object;
  #L3e64b8.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e64be.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e64c4.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e64ca.  v2:= temp @kind object;
  #L3e64cc.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e64d2.  throw v1;
  #L3e64d4.  v1:= new `l.f0.g.g`;
  #L3e64d8.  v6:= v0.`l.f0.g.g.a` @type ^`java.util.List` @kind object;
  #L3e64dc.  v5:= v0.`l.f0.g.g.e` @type ^`int`;
  #L3e64e0.  v10:= v5 + 1;
  #L3e64e4.  v12:= v0.`l.f0.g.g.g` @type ^`l.e` @kind object;
  #L3e64e8.  v13:= v0.`l.f0.g.g.h` @type ^`l.p` @kind object;
  #L3e64ec.  v14:= v0.`l.f0.g.g.i` @type ^`int`;
  #L3e64f0.  v15:= v0.`l.f0.g.g.j` @type ^`int`;
  #L3e64f4.  v11:= v0.`l.f0.g.g.k` @type ^`int`;
  #L3e64f8.  v5:= v1 @kind object;
  #L3e64fa.  v7:= v19 @kind object;
  #L3e64fe.  v8:= v20 @kind object;
  #L3e6502.  v9:= v21 @kind object;
  #L3e6506.  v16:= v11;
  #L3e650a.  v11:= v18 @kind object;
  #L3e650e.  call `<init>`(v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16) @signature `Ll/f0/g/g;.<init>:(Ljava/util/List;Ll/f0/f/g;Ll/f0/g/c;Ll/f0/f/c;ILl/y;Ll/e;Ll/p;III)V` @kind direct;
  #L3e6514.  v5:= v0.`l.f0.g.g.a` @type ^`java.util.List` @kind object;
  #L3e6518.  v6:= v0.`l.f0.g.g.e` @type ^`int`;
  #L3e651c.  call temp:= `get`(v5, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e6522.  v5:= temp @kind object;
  #L3e6524.  v5:= (`l.t`) v5 @kind object;
  #L3e6528.  call temp:= `a`(v5, v1) @signature `Ll/t;.a:(Ll/t$a;)Ll/a0;` @kind interface;
  #L3e652e.  v6:= temp @kind object;
  #L3e6530.  if v20 == 0 then goto L3e6584;
  #L3e6534.  v7:= v0.`l.f0.g.g.e` @type ^`int`;
  #L3e6538.  v7:= v7 + v2 @kind int;
  #L3e653a.  v8:= v0.`l.f0.g.g.a` @type ^`java.util.List` @kind object;
  #L3e653e.  call temp:= `size`(v8) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e6544.  v8:= temp;
  #L3e6546.  if v7 >= v8 then goto L3e6584;
  #L3e654a.  v1:= v1.`l.f0.g.g.l` @type ^`int`;
  #L3e654e.  if v1 != v2 then goto L3e6554;
  #L3e6552.  goto L3e6584;
  #L3e6554.  v1:= new `java.lang.IllegalStateException`;
  #L3e6558.  v2:= new `java.lang.StringBuilder`;
  #L3e655c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e6562.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6568.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e656e.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6574.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e657a.  v2:= temp @kind object;
  #L3e657c.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e6582.  throw v1;
  #L3e6584.  v1:= "interceptor " @kind object;
  #L3e6588.  if v6 == 0 then goto L3e65ce;
  #L3e658c.  call temp:= `k`(v6) @signature `Ll/a0;.k:()Ll/b0;` @kind virtual;
  #L3e6592.  v2:= temp @kind object;
  #L3e6594.  if v2 == 0 then goto L3e659a;
  #L3e6598.  return v6 @kind object;
  #L3e659a.  v2:= new `java.lang.IllegalStateException`;
  #L3e659e.  v3:= new `java.lang.StringBuilder`;
  #L3e65a2.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e65a8.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e65ae.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e65b4.  v1:= " returned a response with no body" @kind object;
  #L3e65b8.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e65be.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e65c4.  v1:= temp @kind object;
  #L3e65c6.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e65cc.  throw v2;
  #L3e65ce.  v2:= new `java.lang.NullPointerException`;
  #L3e65d2.  v3:= new `java.lang.StringBuilder`;
  #L3e65d6.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e65dc.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e65e2.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e65e8.  v1:= " returned null" @kind object;
  #L3e65ec.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e65f2.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e65f8.  v1:= temp @kind object;
  #L3e65fa.  call `<init>`(v2, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e6600.  throw v2;
  #L3e6602.  v1:= new `java.lang.AssertionError`;
  #L3e6606.  call `<init>`(v1) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L3e660c.  throw v1;
}
procedure `int` `b`(`l.f0.g.g` v1 @kind this) @signature `Ll/f0/g/g;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6334.  v0:= v1.`l.f0.g.g.j` @type ^`int`;
  #L3e6338.  return v0;
}
procedure `int` `c`(`l.f0.g.g` v1 @kind this) @signature `Ll/f0/g/g;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e634c.  v0:= v1.`l.f0.g.g.k` @type ^`int`;
  #L3e6350.  return v0;
}
procedure `l.y` `d`(`l.f0.g.g` v1 @kind this) @signature `Ll/f0/g/g;.d:()Ll/y;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e63ac.  v0:= v1.`l.f0.g.g.f` @type ^`l.y` @kind object;
  #L3e63b0.  return v0 @kind object;
}
procedure `l.e` `e`(`l.f0.g.g` v1 @kind this) @signature `Ll/f0/g/g;.e:()Ll/e;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6364.  v0:= v1.`l.f0.g.g.g` @type ^`l.e` @kind object;
  #L3e6368.  return v0 @kind object;
}
procedure `l.i` `f`(`l.f0.g.g` v1 @kind this) @signature `Ll/f0/g/g;.f:()Ll/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e637c.  v0:= v1.`l.f0.g.g.d` @type ^`l.f0.f.c` @kind object;
  #L3e6380.  return v0 @kind object;
}
procedure `l.p` `g`(`l.f0.g.g` v1 @kind this) @signature `Ll/f0/g/g;.g:()Ll/p;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6394.  v0:= v1.`l.f0.g.g.h` @type ^`l.p` @kind object;
  #L3e6398.  return v0 @kind object;
}
procedure `l.f0.g.c` `h`(`l.f0.g.g` v1 @kind this) @signature `Ll/f0/g/g;.h:()Ll/f0/g/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6638.  v0:= v1.`l.f0.g.g.c` @type ^`l.f0.g.c` @kind object;
  #L3e663c.  return v0 @kind object;
}
procedure `l.f0.f.g` `i`(`l.f0.g.g` v1 @kind this) @signature `Ll/f0/g/g;.i:()Ll/f0/f/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6620.  v0:= v1.`l.f0.g.g.b` @type ^`l.f0.f.g` @kind object;
  #L3e6624.  return v0 @kind object;
}
