record `l.f0.i.f` @kind class @AccessFlag PUBLIC_FINAL extends `l.f0.g.c` @kind interface {
  `l.t$a` `l.f0.i.f.a` @AccessFlag PRIVATE_FINAL;
  `l.f0.f.g` `l.f0.i.f.b` @AccessFlag FINAL;
  `l.f0.i.g` `l.f0.i.f.c` @AccessFlag PRIVATE_FINAL;
  `l.f0.i.i` `l.f0.i.f.d` @AccessFlag PRIVATE;
  `l.w` `l.f0.i.f.e` @AccessFlag PRIVATE_FINAL;
}
global `java.util.List` `@@l.f0.i.f.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.List` `@@l.f0.i.f.g` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ll/f0/i/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3e9bc0.  v0:= "connection" @kind object;
  #L3e9bc4.  v1:= "host" @kind object;
  #L3e9bc8.  v2:= "keep-alive" @kind object;
  #L3e9bcc.  v3:= "proxy-connection" @kind object;
  #L3e9bd0.  v4:= "te" @kind object;
  #L3e9bd4.  v5:= "transfer-encoding" @kind object;
  #L3e9bd8.  v6:= "encoding" @kind object;
  #L3e9bdc.  v7:= "upgrade" @kind object;
  #L3e9be0.  v8:= ":method" @kind object;
  #L3e9be4.  v9:= ":path" @kind object;
  #L3e9be8.  v10:= ":scheme" @kind object;
  #L3e9bec.  v11:= ":authority" @kind object;
  #L3e9bf0.  temp:= new `java.lang.String`[v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11];
  #L3e9bf6.  v0:= temp @kind object;
  #L3e9bf8.  call temp:= `a`(v0) @signature `Ll/f0/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3e9bfe.  v0:= temp @kind object;
  #L3e9c00.  `@@l.f0.i.f.f` @type ^`java.util.List` := v0 @kind object;
  #L3e9c04.  v1:= "connection" @kind object;
  #L3e9c08.  v2:= "host" @kind object;
  #L3e9c0c.  v3:= "keep-alive" @kind object;
  #L3e9c10.  v4:= "proxy-connection" @kind object;
  #L3e9c14.  v5:= "te" @kind object;
  #L3e9c18.  v6:= "transfer-encoding" @kind object;
  #L3e9c1c.  v7:= "encoding" @kind object;
  #L3e9c20.  v8:= "upgrade" @kind object;
  #L3e9c24.  temp:= new `java.lang.String`[v1, v2, v3, v4, v5, v6, v7, v8];
  #L3e9c2a.  v0:= temp @kind object;
  #L3e9c2c.  call temp:= `a`(v0) @signature `Ll/f0/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3e9c32.  v0:= temp @kind object;
  #L3e9c34.  `@@l.f0.i.f.g` @type ^`java.util.List` := v0 @kind object;
  #L3e9c38.  return @kind void;
}
procedure `void` `<init>`(`l.f0.i.f` v0 @kind this, `l.v` v1 @kind object, `l.t$a` v2 @kind object, `l.f0.f.g` v3 @kind object, `l.f0.i.g` v4 @kind object) @signature `Ll/f0/i/f;.<init>:(Ll/v;Ll/t$a;Ll/f0/f/g;Ll/f0/i/g;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e9c4c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e9c52.  v0.`l.f0.i.f.a` @type ^`l.t$a` := v2 @kind object;
  #L3e9c56.  v0.`l.f0.i.f.b` @type ^`l.f0.f.g` := v3 @kind object;
  #L3e9c5a.  v0.`l.f0.i.f.c` @type ^`l.f0.i.g` := v4 @kind object;
  #L3e9c5e.  call temp:= `z`(v1) @signature `Ll/v;.z:()Ljava/util/List;` @kind virtual;
  #L3e9c64.  v1:= temp @kind object;
  #L3e9c66.  v2:= `@@l.w.g` @type ^`l.w` @kind object;
  #L3e9c6a.  call temp:= `contains`(v1, v2) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3e9c70.  v1:= temp;
  #L3e9c72.  if v1 == 0 then goto L3e9c7c;
  #L3e9c76.  v1:= `@@l.w.g` @type ^`l.w` @kind object;
  #L3e9c7a.  goto L3e9c80;
  #L3e9c7c.  v1:= `@@l.w.f` @type ^`l.w` @kind object;
  #L3e9c80.  v0.`l.f0.i.f.e` @type ^`l.w` := v1 @kind object;
  #L3e9c84.  return @kind void;
}
procedure `l.a0$a` `a`(`l.r` v7 @kind object, `l.w` v8 @kind object) @signature `Ll/f0/i/f;.a:(Ll/r;Ll/w;)Ll/a0$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e9a18.  v0:= new `l.r$a`;
  #L3e9a1c.  call `<init>`(v0) @signature `Ll/r$a;.<init>:()V` @kind direct;
  #L3e9a22.  call temp:= `b`(v7) @signature `Ll/r;.b:()I` @kind virtual;
  #L3e9a28.  v1:= temp;
  #L3e9a2a.  v2:= 0I;
  #L3e9a2c.  v3:= 0I;
  #L3e9a2e.  if v3 >= v1 then goto L3e9a9e;
  #L3e9a32.  call temp:= `a`(v7, v3) @signature `Ll/r;.a:(I)Ljava/lang/String;` @kind virtual;
  #L3e9a38.  v4:= temp @kind object;
  #L3e9a3a.  call temp:= `b`(v7, v3) @signature `Ll/r;.b:(I)Ljava/lang/String;` @kind virtual;
  #L3e9a40.  v5:= temp @kind object;
  #L3e9a42.  v6:= ":status" @kind object;
  #L3e9a46.  call temp:= `equals`(v4, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e9a4c.  v6:= temp;
  #L3e9a4e.  if v6 == 0 then goto L3e9a7e;
  #L3e9a52.  v2:= new `java.lang.StringBuilder`;
  #L3e9a56.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e9a5c.  v4:= "HTTP/1.1 " @kind object;
  #L3e9a60.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e9a66.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e9a6c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e9a72.  v2:= temp @kind object;
  #L3e9a74.  call temp:= `a`(v2) @signature `Ll/f0/g/k;.a:(Ljava/lang/String;)Ll/f0/g/k;` @kind static;
  #L3e9a7a.  v2:= temp @kind object;
  #L3e9a7c.  goto L3e9a98;
  #L3e9a7e.  v6:= `@@l.f0.i.f.g` @type ^`java.util.List` @kind object;
  #L3e9a82.  call temp:= `contains`(v6, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3e9a88.  v6:= temp;
  #L3e9a8a.  if v6 != 0 then goto L3e9a98;
  #L3e9a8e.  v6:= `@@l.f0.a.a` @type ^`l.f0.a` @kind object;
  #L3e9a92.  call `a`(v6, v0, v4, v5) @signature `Ll/f0/a;.a:(Ll/r$a;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L3e9a98.  v3:= v3 + 1;
  #L3e9a9c.  goto L3e9a2e;
  #L3e9a9e.  if v2 == 0 then goto L3e9ad6;
  #L3e9aa2.  v7:= new `l.a0$a`;
  #L3e9aa6.  call `<init>`(v7) @signature `Ll/a0$a;.<init>:()V` @kind direct;
  #L3e9aac.  call temp:= `a`(v7, v8) @signature `Ll/a0$a;.a:(Ll/w;)Ll/a0$a;` @kind virtual;
  #L3e9ab2.  v8:= v2.`l.f0.g.k.b` @type ^`int`;
  #L3e9ab6.  call temp:= `a`(v7, v8) @signature `Ll/a0$a;.a:(I)Ll/a0$a;` @kind virtual;
  #L3e9abc.  v8:= v2.`l.f0.g.k.c` @type ^`java.lang.String` @kind object;
  #L3e9ac0.  call temp:= `a`(v7, v8) @signature `Ll/a0$a;.a:(Ljava/lang/String;)Ll/a0$a;` @kind virtual;
  #L3e9ac6.  call temp:= `a`(v0) @signature `Ll/r$a;.a:()Ll/r;` @kind virtual;
  #L3e9acc.  v8:= temp @kind object;
  #L3e9ace.  call temp:= `a`(v7, v8) @signature `Ll/a0$a;.a:(Ll/r;)Ll/a0$a;` @kind virtual;
  #L3e9ad4.  return v7 @kind object;
  #L3e9ad6.  v7:= new `java.net.ProtocolException`;
  #L3e9ada.  v8:= "Expected ':status' header not present" @kind object;
  #L3e9ade.  call `<init>`(v7, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e9ae4.  throw v7;
}
procedure `java.util.List` `b`(`l.y` v6 @kind object) @signature `Ll/f0/i/f;.b:(Ll/y;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e9900.  call temp:= `c`(v6) @signature `Ll/y;.c:()Ll/r;` @kind virtual;
  #L3e9906.  v0:= temp @kind object;
  #L3e9908.  v1:= new `java.util.ArrayList`;
  #L3e990c.  call temp:= `b`(v0) @signature `Ll/r;.b:()I` @kind virtual;
  #L3e9912.  v2:= temp;
  #L3e9914.  v2:= v2 + 4;
  #L3e9918.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3e991e.  v2:= new `l.f0.i.c`;
  #L3e9922.  v3:= `@@l.f0.i.c.f` @type ^`m.f` @kind object;
  #L3e9926.  call temp:= `e`(v6) @signature `Ll/y;.e:()Ljava/lang/String;` @kind virtual;
  #L3e992c.  v4:= temp @kind object;
  #L3e992e.  call `<init>`(v2, v3, v4) @signature `Ll/f0/i/c;.<init>:(Lm/f;Ljava/lang/String;)V` @kind direct;
  #L3e9934.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e993a.  v2:= new `l.f0.i.c`;
  #L3e993e.  v3:= `@@l.f0.i.c.g` @type ^`m.f` @kind object;
  #L3e9942.  call temp:= `g`(v6) @signature `Ll/y;.g:()Ll/s;` @kind virtual;
  #L3e9948.  v4:= temp @kind object;
  #L3e994a.  call temp:= `a`(v4) @signature `Ll/f0/g/i;.a:(Ll/s;)Ljava/lang/String;` @kind static;
  #L3e9950.  v4:= temp @kind object;
  #L3e9952.  call `<init>`(v2, v3, v4) @signature `Ll/f0/i/c;.<init>:(Lm/f;Ljava/lang/String;)V` @kind direct;
  #L3e9958.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e995e.  v2:= "Host" @kind object;
  #L3e9962.  call temp:= `a`(v6, v2) @signature `Ll/y;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3e9968.  v2:= temp @kind object;
  #L3e996a.  if v2 == 0 then goto L3e9982;
  #L3e996e.  v3:= new `l.f0.i.c`;
  #L3e9972.  v4:= `@@l.f0.i.c.i` @type ^`m.f` @kind object;
  #L3e9976.  call `<init>`(v3, v4, v2) @signature `Ll/f0/i/c;.<init>:(Lm/f;Ljava/lang/String;)V` @kind direct;
  #L3e997c.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e9982.  v2:= new `l.f0.i.c`;
  #L3e9986.  v3:= `@@l.f0.i.c.h` @type ^`m.f` @kind object;
  #L3e998a.  call temp:= `g`(v6) @signature `Ll/y;.g:()Ll/s;` @kind virtual;
  #L3e9990.  v6:= temp @kind object;
  #L3e9992.  call temp:= `m`(v6) @signature `Ll/s;.m:()Ljava/lang/String;` @kind virtual;
  #L3e9998.  v6:= temp @kind object;
  #L3e999a.  call `<init>`(v2, v3, v6) @signature `Ll/f0/i/c;.<init>:(Lm/f;Ljava/lang/String;)V` @kind direct;
  #L3e99a0.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e99a6.  v6:= 0I;
  #L3e99a8.  call temp:= `b`(v0) @signature `Ll/r;.b:()I` @kind virtual;
  #L3e99ae.  v2:= temp;
  #L3e99b0.  if v6 >= v2 then goto L3e9a06;
  #L3e99b4.  call temp:= `a`(v0, v6) @signature `Ll/r;.a:(I)Ljava/lang/String;` @kind virtual;
  #L3e99ba.  v3:= temp @kind object;
  #L3e99bc.  v4:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L3e99c0.  call temp:= `toLowerCase`(v3, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3e99c6.  v3:= temp @kind object;
  #L3e99c8.  call temp:= `c`(v3) @signature `Lm/f;.c:(Ljava/lang/String;)Lm/f;` @kind static;
  #L3e99ce.  v3:= temp @kind object;
  #L3e99d0.  v4:= `@@l.f0.i.f.f` @type ^`java.util.List` @kind object;
  #L3e99d4.  call temp:= `o`(v3) @signature `Lm/f;.o:()Ljava/lang/String;` @kind virtual;
  #L3e99da.  v5:= temp @kind object;
  #L3e99dc.  call temp:= `contains`(v4, v5) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3e99e2.  v4:= temp;
  #L3e99e4.  if v4 != 0 then goto L3e9a00;
  #L3e99e8.  v4:= new `l.f0.i.c`;
  #L3e99ec.  call temp:= `b`(v0, v6) @signature `Ll/r;.b:(I)Ljava/lang/String;` @kind virtual;
  #L3e99f2.  v5:= temp @kind object;
  #L3e99f4.  call `<init>`(v4, v3, v5) @signature `Ll/f0/i/c;.<init>:(Lm/f;Ljava/lang/String;)V` @kind direct;
  #L3e99fa.  call temp:= `add`(v1, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e9a00.  v6:= v6 + 1;
  #L3e9a04.  goto L3e99b0;
  #L3e9a06.  return v1 @kind object;
}
procedure `l.a0$a` `a`(`l.f0.i.f` v2 @kind this, `boolean` v3 ) @signature `Ll/f0/i/f;.a:(Z)Ll/a0$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e9af8.  v0:= v2.`l.f0.i.f.d` @type ^`l.f0.i.i` @kind object;
  #L3e9afc.  call temp:= `j`(v0) @signature `Ll/f0/i/i;.j:()Ll/r;` @kind virtual;
  #L3e9b02.  v0:= temp @kind object;
  #L3e9b04.  v1:= v2.`l.f0.i.f.e` @type ^`l.w` @kind object;
  #L3e9b08.  call temp:= `a`(v0, v1) @signature `Ll/f0/i/f;.a:(Ll/r;Ll/w;)Ll/a0$a;` @kind static;
  #L3e9b0e.  v0:= temp @kind object;
  #L3e9b10.  if v3 == 0 then goto L3e9b2c;
  #L3e9b14.  v3:= `@@l.f0.a.a` @type ^`l.f0.a` @kind object;
  #L3e9b18.  call temp:= `a`(v3, v0) @signature `Ll/f0/a;.a:(Ll/a0$a;)I` @kind virtual;
  #L3e9b1e.  v3:= temp;
  #L3e9b20.  v1:= 100I;
  #L3e9b24.  if v3 != v1 then goto L3e9b2c;
  #L3e9b28.  v3:= 0I;
  #L3e9b2a.  return v3 @kind object;
  #L3e9b2c.  return v0 @kind object;
}
procedure `l.b0` `a`(`l.f0.i.f` v4 @kind this, `l.a0` v5 @kind object) @signature `Ll/f0/i/f;.a:(Ll/a0;)Ll/b0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e9b40.  v0:= v4.`l.f0.i.f.b` @type ^`l.f0.f.g` @kind object;
  #L3e9b44.  v1:= v0.`l.f0.f.g.f` @type ^`l.p` @kind object;
  #L3e9b48.  v0:= v0.`l.f0.f.g.e` @type ^`l.e` @kind object;
  #L3e9b4c.  call `e`(v1, v0) @signature `Ll/p;.e:(Ll/e;)V` @kind virtual;
  #L3e9b52.  v0:= "Content-Type" @kind object;
  #L3e9b56.  call temp:= `b`(v5, v0) @signature `Ll/a0;.b:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3e9b5c.  v0:= temp @kind object;
  #L3e9b5e.  call temp:= `a`(v5) @signature `Ll/f0/g/e;.a:(Ll/a0;)J` @kind static;
  #L3e9b64.  v1:= temp @kind wide;
  #L3e9b66.  v5:= new `l.f0.i.f$a`;
  #L3e9b6a.  v3:= v4.`l.f0.i.f.d` @type ^`l.f0.i.i` @kind object;
  #L3e9b6e.  call temp:= `e`(v3) @signature `Ll/f0/i/i;.e:()Lm/s;` @kind virtual;
  #L3e9b74.  v3:= temp @kind object;
  #L3e9b76.  call `<init>`(v5, v4, v3) @signature `Ll/f0/i/f$a;.<init>:(Ll/f0/i/f;Lm/s;)V` @kind direct;
  #L3e9b7c.  v3:= new `l.f0.g.h`;
  #L3e9b80.  call temp:= `a`(v5) @signature `Lm/l;.a:(Lm/s;)Lm/e;` @kind static;
  #L3e9b86.  v5:= temp @kind object;
  #L3e9b88.  call `<init>`(v3, v0, v1, v5) @signature `Ll/f0/g/h;.<init>:(Ljava/lang/String;JLm/e;)V` @kind direct;
  #L3e9b8e.  return v3 @kind object;
}
procedure `m.r` `a`(`l.f0.i.f` v0 @kind this, `l.y` v1 @kind object, `long` v2 ) @signature `Ll/f0/i/f;.a:(Ll/y;J)Lm/r;` @AccessFlag PUBLIC {
    temp;

  #L3e9ba0.  v1:= v0.`l.f0.i.f.d` @type ^`l.f0.i.i` @kind object;
  #L3e9ba4.  call temp:= `d`(v1) @signature `Ll/f0/i/i;.d:()Lm/r;` @kind virtual;
  #L3e9baa.  v1:= temp @kind object;
  #L3e9bac.  return v1 @kind object;
}
procedure `void` `a`(`l.f0.i.f` v1 @kind this) @signature `Ll/f0/i/f;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9cbc.  v0:= v1.`l.f0.i.f.d` @type ^`l.f0.i.i` @kind object;
  #L3e9cc0.  call temp:= `d`(v0) @signature `Ll/f0/i/i;.d:()Lm/r;` @kind virtual;
  #L3e9cc6.  v0:= temp @kind object;
  #L3e9cc8.  call `close`(v0) @signature `Lm/r;.close:()V` @kind interface;
  #L3e9cce.  return @kind void;
}
procedure `void` `a`(`l.f0.i.f` v3 @kind this, `l.y` v4 @kind object) @signature `Ll/f0/i/f;.a:(Ll/y;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e9cfc.  v0:= v3.`l.f0.i.f.d` @type ^`l.f0.i.i` @kind object;
  #L3e9d00.  if v0 == 0 then goto L3e9d06;
  #L3e9d04.  return @kind void;
  #L3e9d06.  call temp:= `a`(v4) @signature `Ll/y;.a:()Ll/z;` @kind virtual;
  #L3e9d0c.  v0:= temp @kind object;
  #L3e9d0e.  if v0 == 0 then goto L3e9d16;
  #L3e9d12.  v0:= 1I;
  #L3e9d14.  goto L3e9d18;
  #L3e9d16.  v0:= 0I;
  #L3e9d18.  call temp:= `b`(v4) @signature `Ll/f0/i/f;.b:(Ll/y;)Ljava/util/List;` @kind static;
  #L3e9d1e.  v4:= temp @kind object;
  #L3e9d20.  v1:= v3.`l.f0.i.f.c` @type ^`l.f0.i.g` @kind object;
  #L3e9d24.  call temp:= `a`(v1, v4, v0) @signature `Ll/f0/i/g;.a:(Ljava/util/List;Z)Ll/f0/i/i;` @kind virtual;
  #L3e9d2a.  v4:= temp @kind object;
  #L3e9d2c.  v3.`l.f0.i.f.d` @type ^`l.f0.i.i` := v4 @kind object;
  #L3e9d30.  v4:= v3.`l.f0.i.f.d` @type ^`l.f0.i.i` @kind object;
  #L3e9d34.  call temp:= `h`(v4) @signature `Ll/f0/i/i;.h:()Lm/t;` @kind virtual;
  #L3e9d3a.  v4:= temp @kind object;
  #L3e9d3c.  v0:= v3.`l.f0.i.f.a` @type ^`l.t$a` @kind object;
  #L3e9d40.  call temp:= `b`(v0) @signature `Ll/t$a;.b:()I` @kind interface;
  #L3e9d46.  v0:= temp;
  #L3e9d48.  v0:= (`long`) v0 @kind i2l;
  #L3e9d4a.  v2:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3e9d4e.  call temp:= `a`(v4, v0, v2) @signature `Lm/t;.a:(JLjava/util/concurrent/TimeUnit;)Lm/t;` @kind virtual;
  #L3e9d54.  v4:= v3.`l.f0.i.f.d` @type ^`l.f0.i.i` @kind object;
  #L3e9d58.  call temp:= `l`(v4) @signature `Ll/f0/i/i;.l:()Lm/t;` @kind virtual;
  #L3e9d5e.  v4:= temp @kind object;
  #L3e9d60.  v0:= v3.`l.f0.i.f.a` @type ^`l.t$a` @kind object;
  #L3e9d64.  call temp:= `c`(v0) @signature `Ll/t$a;.c:()I` @kind interface;
  #L3e9d6a.  v0:= temp;
  #L3e9d6c.  v0:= (`long`) v0 @kind i2l;
  #L3e9d6e.  v2:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3e9d72.  call temp:= `a`(v4, v0, v2) @signature `Lm/t;.a:(JLjava/util/concurrent/TimeUnit;)Lm/t;` @kind virtual;
  #L3e9d78.  return @kind void;
}
procedure `void` `b`(`l.f0.i.f` v1 @kind this) @signature `Ll/f0/i/f;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9ce0.  v0:= v1.`l.f0.i.f.c` @type ^`l.f0.i.g` @kind object;
  #L3e9ce4.  call `flush`(v0) @signature `Ll/f0/i/g;.flush:()V` @kind virtual;
  #L3e9cea.  return @kind void;
}
procedure `void` `cancel`(`l.f0.i.f` v2 @kind this) @signature `Ll/f0/i/f;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e9c98.  v0:= v2.`l.f0.i.f.d` @type ^`l.f0.i.i` @kind object;
  #L3e9c9c.  if v0 == 0 then goto L3e9caa;
  #L3e9ca0.  v1:= `@@l.f0.i.b.h` @type ^`l.f0.i.b` @kind object;
  #L3e9ca4.  call `b`(v0, v1) @signature `Ll/f0/i/i;.b:(Ll/f0/i/b;)V` @kind virtual;
  #L3e9caa.  return @kind void;
}
