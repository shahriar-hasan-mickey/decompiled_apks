record `l.f0.i.i$a` @kind class @AccessFlag FINAL extends `m.r` @kind interface {
  `m.c` `l.f0.i.i$a.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `l.f0.i.i$a.c` @AccessFlag ;
  `boolean` `l.f0.i.i$a.d` @AccessFlag ;
  `l.f0.i.i` `l.f0.i.i$a.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`l.f0.i.i$a` v0 @kind this, `l.f0.i.i` v1 @kind object) @signature `Ll/f0/i/i$a;.<init>:(Ll/f0/i/i;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ec20c.  v0.`l.f0.i.i$a.e` @type ^`l.f0.i.i` := v1 @kind object;
  #L3ec210.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ec216.  v1:= new `m.c`;
  #L3ec21a.  call `<init>`(v1) @signature `Lm/c;.<init>:()V` @kind direct;
  #L3ec220.  v0.`l.f0.i.i$a.b` @type ^`m.c` := v1 @kind object;
  #L3ec224.  return @kind void;
}
procedure `void` `a`(`l.f0.i.i$a` v11 @kind this, `boolean` v12 ) @signature `Ll/f0/i/i$a;.a:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3ec318.  v0:= v11.`l.f0.i.i$a.e` @type ^`l.f0.i.i` @kind object;
  #L3ec31c.  @monitorenter v0
  #L3ec31e.  v1:= v11.`l.f0.i.i$a.e` @type ^`l.f0.i.i` @kind object;
  #L3ec322.  v1:= v1.`l.f0.i.i.k` @type ^`l.f0.i.i$c` @kind object;
  #L3ec326.  call `g`(v1) @signature `Lm/a;.g:()V` @kind virtual;
  #L3ec32c.  v1:= v11.`l.f0.i.i$a.e` @type ^`l.f0.i.i` @kind object;
  #L3ec330.  v1:= v1.`l.f0.i.i.b` @type ^`long` @kind wide;
  #L3ec334.  v3:= 0L;
  #L3ec338.  v5:= lcmp(v1, v3);
  #L3ec33c.  if v5 > 0 then goto L3ec368;
  #L3ec340.  v1:= v11.`l.f0.i.i$a.d` @type ^`boolean` @kind boolean;
  #L3ec344.  if v1 != 0 then goto L3ec368;
  #L3ec348.  v1:= v11.`l.f0.i.i$a.c` @type ^`boolean` @kind boolean;
  #L3ec34c.  if v1 != 0 then goto L3ec368;
  #L3ec350.  v1:= v11.`l.f0.i.i$a.e` @type ^`l.f0.i.i` @kind object;
  #L3ec354.  v1:= v1.`l.f0.i.i.l` @type ^`l.f0.i.b` @kind object;
  #L3ec358.  if v1 != 0 then goto L3ec368;
  #L3ec35c.  v1:= v11.`l.f0.i.i$a.e` @type ^`l.f0.i.i` @kind object;
  #L3ec360.  call `k`(v1) @signature `Ll/f0/i/i;.k:()V` @kind virtual;
  #L3ec366.  goto L3ec32c;
  #L3ec368.  v1:= v11.`l.f0.i.i$a.e` @type ^`l.f0.i.i` @kind object;
  #L3ec36c.  v1:= v1.`l.f0.i.i.k` @type ^`l.f0.i.i$c` @kind object;
  #L3ec370.  call `k`(v1) @signature `Ll/f0/i/i$c;.k:()V` @kind virtual;
  #L3ec376.  v1:= v11.`l.f0.i.i$a.e` @type ^`l.f0.i.i` @kind object;
  #L3ec37a.  call `b`(v1) @signature `Ll/f0/i/i;.b:()V` @kind virtual;
  #L3ec380.  v1:= v11.`l.f0.i.i$a.e` @type ^`l.f0.i.i` @kind object;
  #L3ec384.  v1:= v1.`l.f0.i.i.b` @type ^`long` @kind wide;
  #L3ec388.  v3:= v11.`l.f0.i.i$a.b` @type ^`m.c` @kind object;
  #L3ec38c.  call temp:= `v`(v3) @signature `Lm/c;.v:()J` @kind virtual;
  #L3ec392.  v3:= temp @kind wide;
  #L3ec394.  call temp:= `min`(v1, v3) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3ec39a.  v9:= temp @kind wide;
  #L3ec39c.  v1:= v11.`l.f0.i.i$a.e` @type ^`l.f0.i.i` @kind object;
  #L3ec3a0.  v2:= v1.`l.f0.i.i.b` @type ^`long` @kind wide;
  #L3ec3a4.  v2:= v2 - v9 @kind long;
  #L3ec3a6.  v1.`l.f0.i.i.b` @type ^`long` := v2 @kind wide;
  #L3ec3aa.  @monitorexit v0
  #L3ec3ac.  v0:= v11.`l.f0.i.i$a.e` @type ^`l.f0.i.i` @kind object;
  #L3ec3b0.  v0:= v0.`l.f0.i.i.k` @type ^`l.f0.i.i$c` @kind object;
  #L3ec3b4.  call `g`(v0) @signature `Lm/a;.g:()V` @kind virtual;
  #L3ec3ba.  v0:= v11.`l.f0.i.i$a.e` @type ^`l.f0.i.i` @kind object;
  #L3ec3be.  v5:= v0.`l.f0.i.i.d` @type ^`l.f0.i.g` @kind object;
  #L3ec3c2.  v0:= v11.`l.f0.i.i$a.e` @type ^`l.f0.i.i` @kind object;
  #L3ec3c6.  v6:= v0.`l.f0.i.i.c` @type ^`int`;
  #L3ec3ca.  if v12 == 0 then goto L3ec3e8;
  #L3ec3ce.  v12:= v11.`l.f0.i.i$a.b` @type ^`m.c` @kind object;
  #L3ec3d2.  call temp:= `v`(v12) @signature `Lm/c;.v:()J` @kind virtual;
  #L3ec3d8.  v0:= temp @kind wide;
  #L3ec3da.  v12:= lcmp(v9, v0);
  #L3ec3de.  if v12 != 0 then goto L3ec3e8;
  #L3ec3e2.  v12:= 1I;
  #L3ec3e4.  v7:= 1I;
  #L3ec3e6.  goto L3ec3ec;
  #L3ec3e8.  v12:= 0I;
  #L3ec3ea.  v7:= 0I;
  #L3ec3ec.  v8:= v11.`l.f0.i.i$a.b` @type ^`m.c` @kind object;
  #L3ec3f0.  call `a`(v5, v6, v7, v8, v9) @signature `Ll/f0/i/g;.a:(IZLm/c;J)V` @kind virtual;
  #L3ec3f6.  v12:= v11.`l.f0.i.i$a.e` @type ^`l.f0.i.i` @kind object;
  #L3ec3fa.  v12:= v12.`l.f0.i.i.k` @type ^`l.f0.i.i$c` @kind object;
  #L3ec3fe.  call `k`(v12) @signature `Ll/f0/i/i$c;.k:()V` @kind virtual;
  #L3ec404.  return @kind void;
  #L3ec406.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec408.  v0:= v11.`l.f0.i.i$a.e` @type ^`l.f0.i.i` @kind object;
  #L3ec40c.  v0:= v0.`l.f0.i.i.k` @type ^`l.f0.i.i$c` @kind object;
  #L3ec410.  call `k`(v0) @signature `Ll/f0/i/i$c;.k:()V` @kind virtual;
  #L3ec416.  throw v12;
  #L3ec418.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec41a.  v1:= v11.`l.f0.i.i$a.e` @type ^`l.f0.i.i` @kind object;
  #L3ec41e.  v1:= v1.`l.f0.i.i.k` @type ^`l.f0.i.i$c` @kind object;
  #L3ec422.  call `k`(v1) @signature `Ll/f0/i/i$c;.k:()V` @kind virtual;
  #L3ec428.  throw v12;
  #L3ec42a.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec42c.  @monitorexit v0
  #L3ec42e.  throw v12;
  catch `java.lang.Throwable` @[L3ec31e..L3ec32c] goto L3ec42a;
  catch `java.lang.Throwable` @[L3ec32c..L3ec366] goto L3ec418;
  catch `java.lang.Throwable` @[L3ec368..L3ec3ac] goto L3ec42a;
  catch `java.lang.Throwable` @[L3ec3ba..L3ec3f6] goto L3ec406;
  catch `java.lang.Throwable` @[L3ec41a..L3ec42e] goto L3ec42a;
}
procedure `void` `b`(`l.f0.i.i$a` v2 @kind this, `m.c` v3 @kind object, `long` v4 ) @signature `Ll/f0/i/i$a;.b:(Lm/c;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ec4e4.  v0:= v2.`l.f0.i.i$a.b` @type ^`m.c` @kind object;
  #L3ec4e8.  call `b`(v0, v3, v4) @signature `Lm/c;.b:(Lm/c;J)V` @kind virtual;
  #L3ec4ee.  v3:= v2.`l.f0.i.i$a.b` @type ^`m.c` @kind object;
  #L3ec4f2.  call temp:= `v`(v3) @signature `Lm/c;.v:()J` @kind virtual;
  #L3ec4f8.  v3:= temp @kind wide;
  #L3ec4fa.  v0:= 16384L;
  #L3ec4fe.  v5:= lcmp(v3, v0);
  #L3ec502.  if v5 < 0 then goto L3ec510;
  #L3ec506.  v3:= 0I;
  #L3ec508.  call `a`(v2, v3) @signature `Ll/f0/i/i$a;.a:(Z)V` @kind direct;
  #L3ec50e.  goto L3ec4ee;
  #L3ec510.  return @kind void;
}
procedure `void` `close`(`l.f0.i.i$a` v8 @kind this) @signature `Ll/f0/i/i$a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3ec238.  v0:= v8.`l.f0.i.i$a.e` @type ^`l.f0.i.i` @kind object;
  #L3ec23c.  @monitorenter v0
  #L3ec23e.  v1:= v8.`l.f0.i.i$a.c` @type ^`boolean` @kind boolean;
  #L3ec242.  if v1 == 0 then goto L3ec24a;
  #L3ec246.  @monitorexit v0
  #L3ec248.  return @kind void;
  #L3ec24a.  @monitorexit v0
  #L3ec24c.  v0:= v8.`l.f0.i.i$a.e` @type ^`l.f0.i.i` @kind object;
  #L3ec250.  v0:= v0.`l.f0.i.i.i` @type ^`l.f0.i.i$a` @kind object;
  #L3ec254.  v0:= v0.`l.f0.i.i$a.d` @type ^`boolean` @kind boolean;
  #L3ec258.  v1:= 1I;
  #L3ec25a.  if v0 != 0 then goto L3ec2ac;
  #L3ec25e.  v0:= v8.`l.f0.i.i$a.b` @type ^`m.c` @kind object;
  #L3ec262.  call temp:= `v`(v0) @signature `Lm/c;.v:()J` @kind virtual;
  #L3ec268.  v2:= temp @kind wide;
  #L3ec26a.  v4:= 0L;
  #L3ec26e.  v0:= lcmp(v2, v4);
  #L3ec272.  if v0 <= 0 then goto L3ec292;
  #L3ec276.  v0:= v8.`l.f0.i.i$a.b` @type ^`m.c` @kind object;
  #L3ec27a.  call temp:= `v`(v0) @signature `Lm/c;.v:()J` @kind virtual;
  #L3ec280.  v2:= temp @kind wide;
  #L3ec282.  v0:= lcmp(v2, v4);
  #L3ec286.  if v0 <= 0 then goto L3ec2ac;
  #L3ec28a.  call `a`(v8, v1) @signature `Ll/f0/i/i$a;.a:(Z)V` @kind direct;
  #L3ec290.  goto L3ec276;
  #L3ec292.  v0:= v8.`l.f0.i.i$a.e` @type ^`l.f0.i.i` @kind object;
  #L3ec296.  v2:= v0.`l.f0.i.i.d` @type ^`l.f0.i.g` @kind object;
  #L3ec29a.  v3:= v0.`l.f0.i.i.c` @type ^`int`;
  #L3ec29e.  v4:= 1I;
  #L3ec2a0.  v5:= 0I;
  #L3ec2a2.  v6:= 0L;
  #L3ec2a6.  call `a`(v2, v3, v4, v5, v6) @signature `Ll/f0/i/g;.a:(IZLm/c;J)V` @kind virtual;
  #L3ec2ac.  v2:= v8.`l.f0.i.i$a.e` @type ^`l.f0.i.i` @kind object;
  #L3ec2b0.  @monitorenter v2
  #L3ec2b2.  v8.`l.f0.i.i$a.c` @type ^`boolean` := v1 @kind boolean;
  #L3ec2b6.  @monitorexit v2
  #L3ec2b8.  v0:= v8.`l.f0.i.i$a.e` @type ^`l.f0.i.i` @kind object;
  #L3ec2bc.  v0:= v0.`l.f0.i.i.d` @type ^`l.f0.i.g` @kind object;
  #L3ec2c0.  call `flush`(v0) @signature `Ll/f0/i/g;.flush:()V` @kind virtual;
  #L3ec2c6.  v0:= v8.`l.f0.i.i$a.e` @type ^`l.f0.i.i` @kind object;
  #L3ec2ca.  call `a`(v0) @signature `Ll/f0/i/i;.a:()V` @kind virtual;
  #L3ec2d0.  return @kind void;
  #L3ec2d2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec2d4.  @monitorexit v2
  #L3ec2d6.  throw v0;
  #L3ec2d8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec2da.  @monitorexit v0
  #L3ec2dc.  throw v1;
  catch `java.lang.Throwable` @[L3ec23e..L3ec24c] goto L3ec2d8;
  catch `java.lang.Throwable` @[L3ec2b2..L3ec2b8] goto L3ec2d2;
  catch `java.lang.Throwable` @[L3ec2d4..L3ec2d6] goto L3ec2d2;
  catch `java.lang.Throwable` @[L3ec2da..L3ec2dc] goto L3ec2d8;
}
procedure `m.t` `d`(`l.f0.i.i$a` v1 @kind this) @signature `Ll/f0/i/i$a;.d:()Lm/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ec1f0.  v0:= v1.`l.f0.i.i$a.e` @type ^`l.f0.i.i` @kind object;
  #L3ec1f4.  v0:= v0.`l.f0.i.i.k` @type ^`l.f0.i.i$c` @kind object;
  #L3ec1f8.  return v0 @kind object;
}
procedure `void` `flush`(`l.f0.i.i$a` v5 @kind this) @signature `Ll/f0/i/i$a;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ec474.  v0:= v5.`l.f0.i.i$a.e` @type ^`l.f0.i.i` @kind object;
  #L3ec478.  @monitorenter v0
  #L3ec47a.  v1:= v5.`l.f0.i.i$a.e` @type ^`l.f0.i.i` @kind object;
  #L3ec47e.  call `b`(v1) @signature `Ll/f0/i/i;.b:()V` @kind virtual;
  #L3ec484.  @monitorexit v0
  #L3ec486.  v0:= v5.`l.f0.i.i$a.b` @type ^`m.c` @kind object;
  #L3ec48a.  call temp:= `v`(v0) @signature `Lm/c;.v:()J` @kind virtual;
  #L3ec490.  v0:= temp @kind wide;
  #L3ec492.  v2:= 0L;
  #L3ec496.  v4:= lcmp(v0, v2);
  #L3ec49a.  if v4 <= 0 then goto L3ec4b6;
  #L3ec49e.  v0:= 0I;
  #L3ec4a0.  call `a`(v5, v0) @signature `Ll/f0/i/i$a;.a:(Z)V` @kind direct;
  #L3ec4a6.  v0:= v5.`l.f0.i.i$a.e` @type ^`l.f0.i.i` @kind object;
  #L3ec4aa.  v0:= v0.`l.f0.i.i.d` @type ^`l.f0.i.g` @kind object;
  #L3ec4ae.  call `flush`(v0) @signature `Ll/f0/i/g;.flush:()V` @kind virtual;
  #L3ec4b4.  goto L3ec486;
  #L3ec4b6.  return @kind void;
  #L3ec4b8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec4ba.  @monitorexit v0
  #L3ec4bc.  throw v1;
  catch `java.lang.Throwable` @[L3ec47a..L3ec486] goto L3ec4b8;
  catch `java.lang.Throwable` @[L3ec4ba..L3ec4bc] goto L3ec4b8;
}
