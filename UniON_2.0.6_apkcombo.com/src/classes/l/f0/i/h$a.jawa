record `l.f0.i.h$a` @kind class @AccessFlag FINAL extends `m.s` @kind interface {
  `m.e` `l.f0.i.h$a.b` @AccessFlag PRIVATE_FINAL;
  `int` `l.f0.i.h$a.c` @AccessFlag ;
  `byte` `l.f0.i.h$a.d` @AccessFlag ;
  `int` `l.f0.i.h$a.e` @AccessFlag ;
  `int` `l.f0.i.h$a.f` @AccessFlag ;
  `short` `l.f0.i.h$a.g` @AccessFlag ;
}
procedure `void` `<init>`(`l.f0.i.h$a` v0 @kind this, `m.e` v1 @kind object) @signature `Ll/f0/i/h$a;.<init>:(Lm/e;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3eb7a0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eb7a6.  v0.`l.f0.i.h$a.b` @type ^`m.e` := v1 @kind object;
  #L3eb7aa.  return @kind void;
}
procedure `void` `a`(`l.f0.i.h$a` v7 @kind this) @signature `Ll/f0/i/h$a;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3eb7d0.  v0:= v7.`l.f0.i.h$a.e` @type ^`int`;
  #L3eb7d4.  v1:= v7.`l.f0.i.h$a.b` @type ^`m.e` @kind object;
  #L3eb7d8.  call temp:= `a`(v1) @signature `Ll/f0/i/h;.a:(Lm/e;)I` @kind static;
  #L3eb7de.  v1:= temp;
  #L3eb7e0.  v7.`l.f0.i.h$a.f` @type ^`int` := v1;
  #L3eb7e4.  v7.`l.f0.i.h$a.c` @type ^`int` := v1;
  #L3eb7e8.  v1:= v7.`l.f0.i.h$a.b` @type ^`m.e` @kind object;
  #L3eb7ec.  call temp:= `readByte`(v1) @signature `Lm/e;.readByte:()B` @kind interface;
  #L3eb7f2.  v1:= temp;
  #L3eb7f4.  v1:= v1 ^& 255;
  #L3eb7f8.  v1:= (`byte`) v1 @kind i2b;
  #L3eb7fa.  v2:= v7.`l.f0.i.h$a.b` @type ^`m.e` @kind object;
  #L3eb7fe.  call temp:= `readByte`(v2) @signature `Lm/e;.readByte:()B` @kind interface;
  #L3eb804.  v2:= temp;
  #L3eb806.  v2:= v2 ^& 255;
  #L3eb80a.  v2:= (`byte`) v2 @kind i2b;
  #L3eb80c.  v7.`l.f0.i.h$a.d` @type ^`byte` := v2 @kind byte;
  #L3eb810.  v2:= `@@l.f0.i.h.f` @type ^`java.util.logging.Logger` @kind object;
  #L3eb814.  v3:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L3eb818.  call temp:= `isLoggable`(v2, v3) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L3eb81e.  v2:= temp;
  #L3eb820.  v3:= 1I;
  #L3eb822.  if v2 == 0 then goto L3eb844;
  #L3eb826.  v2:= `@@l.f0.i.h.f` @type ^`java.util.logging.Logger` @kind object;
  #L3eb82a.  v4:= v7.`l.f0.i.h$a.e` @type ^`int`;
  #L3eb82e.  v5:= v7.`l.f0.i.h$a.c` @type ^`int`;
  #L3eb832.  v6:= v7.`l.f0.i.h$a.d` @type ^`byte` @kind byte;
  #L3eb836.  call temp:= `a`(v3, v4, v5, v1, v6) @signature `Ll/f0/i/e;.a:(ZIIBB)Ljava/lang/String;` @kind static;
  #L3eb83c.  v4:= temp @kind object;
  #L3eb83e.  call `fine`(v2, v4) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L3eb844.  v2:= v7.`l.f0.i.h$a.b` @type ^`m.e` @kind object;
  #L3eb848.  call temp:= `readInt`(v2) @signature `Lm/e;.readInt:()I` @kind interface;
  #L3eb84e.  v2:= temp;
  #L3eb850.  v4:= 2147483647I;
  #L3eb856.  v2:= v2 ^& v4 @kind int;
  #L3eb858.  v7.`l.f0.i.h$a.e` @type ^`int` := v2;
  #L3eb85c.  v2:= 9I;
  #L3eb860.  v4:= 0I;
  #L3eb862.  v5:= 0I;
  #L3eb864.  if v1 != v2 then goto L3eb882;
  #L3eb868.  v1:= v7.`l.f0.i.h$a.e` @type ^`int`;
  #L3eb86c.  if v1 != v0 then goto L3eb872;
  #L3eb870.  return @kind void;
  #L3eb872.  v0:= new `java.lang.Object`[v5];
  #L3eb876.  v1:= "TYPE_CONTINUATION streamId changed" @kind object;
  #L3eb87a.  call temp:= `b`(v1, v0) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3eb880.  throw v4;
  #L3eb882.  v0:= new `java.lang.Object`[v3];
  #L3eb886.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L3eb88c.  v1:= temp @kind object;
  #L3eb88e.  v0[v5]:= v1 @kind object;
  #L3eb892.  v1:= "%s != TYPE_CONTINUATION" @kind object;
  #L3eb896.  call temp:= `b`(v1, v0) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3eb89c.  throw v4;
}
procedure `long` `a`(`l.f0.i.h$a` v6 @kind this, `m.c` v7 @kind object, `long` v8 ) @signature `Ll/f0/i/h$a;.a:(Lm/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3eb708.  v0:= v6.`l.f0.i.h$a.f` @type ^`int`;
  #L3eb70c.  v1:= -1L;
  #L3eb710.  if v0 != 0 then goto L3eb740;
  #L3eb714.  v0:= v6.`l.f0.i.h$a.b` @type ^`m.e` @kind object;
  #L3eb718.  v3:= v6.`l.f0.i.h$a.g` @type ^`short` @kind short;
  #L3eb71c.  v3:= (`long`) v3 @kind i2l;
  #L3eb71e.  call `skip`(v0, v3) @signature `Lm/e;.skip:(J)V` @kind interface;
  #L3eb724.  v0:= 0I;
  #L3eb726.  v6.`l.f0.i.h$a.g` @type ^`short` := v0 @kind char;
  #L3eb72a.  v0:= v6.`l.f0.i.h$a.d` @type ^`byte` @kind byte;
  #L3eb72e.  v0:= v0 ^& 4;
  #L3eb732.  if v0 == 0 then goto L3eb738;
  #L3eb736.  return v1 @kind wide;
  #L3eb738.  call `a`(v6) @signature `Ll/f0/i/h$a;.a:()V` @kind direct;
  #L3eb73e.  goto L3eb708;
  #L3eb740.  v3:= v6.`l.f0.i.h$a.b` @type ^`m.e` @kind object;
  #L3eb744.  v4:= (`long`) v0 @kind i2l;
  #L3eb746.  call temp:= `min`(v8, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3eb74c.  v8:= temp @kind wide;
  #L3eb74e.  call temp:= `a`(v3, v7, v8) @signature `Lm/s;.a:(Lm/c;J)J` @kind interface;
  #L3eb754.  v7:= temp @kind wide;
  #L3eb756.  v9:= lcmp(v7, v1);
  #L3eb75a.  if v9 != 0 then goto L3eb760;
  #L3eb75e.  return v1 @kind wide;
  #L3eb760.  v9:= v6.`l.f0.i.h$a.f` @type ^`int`;
  #L3eb764.  v0:= (`long`) v9 @kind i2l;
  #L3eb766.  v0:= v0 - v7 @kind long;
  #L3eb768.  v9:= (`int`) v0 @kind l2i;
  #L3eb76a.  v6.`l.f0.i.h$a.f` @type ^`int` := v9;
  #L3eb76e.  return v7 @kind wide;
}
procedure `void` `close`(`l.f0.i.h$a` v0 @kind this) @signature `Ll/f0/i/h$a;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L3eb7bc.  return @kind void;
}
procedure `m.t` `d`(`l.f0.i.h$a` v1 @kind this) @signature `Ll/f0/i/h$a;.d:()Lm/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb780.  v0:= v1.`l.f0.i.h$a.b` @type ^`m.e` @kind object;
  #L3eb784.  call temp:= `d`(v0) @signature `Lm/s;.d:()Lm/t;` @kind interface;
  #L3eb78a.  v0:= temp @kind object;
  #L3eb78c.  return v0 @kind object;
}
