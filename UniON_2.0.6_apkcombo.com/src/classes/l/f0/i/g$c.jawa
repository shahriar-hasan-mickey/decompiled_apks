record `l.f0.i.g$c` @kind class @AccessFlag  extends `l.f0.b` @kind class {
  `int` `l.f0.i.g$c.c` @AccessFlag FINAL_SYNTHETIC;
  `java.util.List` `l.f0.i.g$c.d` @AccessFlag FINAL_SYNTHETIC;
  `l.f0.i.g` `l.f0.i.g$c.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`l.f0.i.g$c` v0 @kind this, `l.f0.i.g` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `int` v4 , `java.util.List` v5 @kind object) @signature `Ll/f0/i/g$c;.<init>:(Ll/f0/i/g;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e9e58.  v0.`l.f0.i.g$c.e` @type ^`l.f0.i.g` := v1 @kind object;
  #L3e9e5c.  v0.`l.f0.i.g$c.c` @type ^`int` := v4;
  #L3e9e60.  v0.`l.f0.i.g$c.d` @type ^`java.util.List` := v5 @kind object;
  #L3e9e64.  call `<init>`(v0, v2, v3) @signature `Ll/f0/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e9e6a.  return @kind void;
}
procedure `void` `b`(`l.f0.i.g$c` v3 @kind this) @signature `Ll/f0/i/g$c;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e9e7c.  v0:= v3.`l.f0.i.g$c.e` @type ^`l.f0.i.g` @kind object;
  #L3e9e80.  v0:= v0.`l.f0.i.g.k` @type ^`l.f0.i.l` @kind object;
  #L3e9e84.  v1:= v3.`l.f0.i.g$c.c` @type ^`int`;
  #L3e9e88.  v2:= v3.`l.f0.i.g$c.d` @type ^`java.util.List` @kind object;
  #L3e9e8c.  call temp:= `a`(v0, v1, v2) @signature `Ll/f0/i/l;.a:(ILjava/util/List;)Z` @kind interface;
  #L3e9e92.  v0:= temp;
  #L3e9e94.  if v0 == 0 then goto L3e9ed8;
  #L3e9e98.  v0:= v3.`l.f0.i.g$c.e` @type ^`l.f0.i.g` @kind object;
  #L3e9e9c.  v0:= v0.`l.f0.i.g.s` @type ^`l.f0.i.j` @kind object;
  #L3e9ea0.  v1:= v3.`l.f0.i.g$c.c` @type ^`int`;
  #L3e9ea4.  v2:= `@@l.f0.i.b.h` @type ^`l.f0.i.b` @kind object;
  #L3e9ea8.  call `a`(v0, v1, v2) @signature `Ll/f0/i/j;.a:(ILl/f0/i/b;)V` @kind virtual;
  #L3e9eae.  v0:= v3.`l.f0.i.g$c.e` @type ^`l.f0.i.g` @kind object;
  #L3e9eb2.  @monitorenter v0
  #L3e9eb4.  v1:= v3.`l.f0.i.g$c.e` @type ^`l.f0.i.g` @kind object;
  #L3e9eb8.  v1:= v1.`l.f0.i.g.u` @type ^`java.util.Set` @kind object;
  #L3e9ebc.  v2:= v3.`l.f0.i.g$c.c` @type ^`int`;
  #L3e9ec0.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e9ec6.  v2:= temp @kind object;
  #L3e9ec8.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3e9ece.  @monitorexit v0
  #L3e9ed0.  goto L3e9ed8;
  #L3e9ed2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e9ed4.  @monitorexit v0
  #L3e9ed6.  throw v1;
  #L3e9ed8.  return @kind void;
  catch `java.io.IOException` @[L3e9e98..L3e9eb4] goto L3e9ed8;
  catch `java.lang.Throwable` @[L3e9eb4..L3e9ed6] goto L3e9ed2;
  catch `java.io.IOException` @[L3e9ed6..L3e9ed8] goto L3e9ed8;
}
