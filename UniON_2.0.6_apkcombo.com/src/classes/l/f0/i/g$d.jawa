record `l.f0.i.g$d` @kind class @AccessFlag  extends `l.f0.b` @kind class {
  `int` `l.f0.i.g$d.c` @AccessFlag FINAL_SYNTHETIC;
  `java.util.List` `l.f0.i.g$d.d` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `l.f0.i.g$d.e` @AccessFlag FINAL_SYNTHETIC;
  `l.f0.i.g` `l.f0.i.g$d.f` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`l.f0.i.g$d` v0 @kind this, `l.f0.i.g` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `int` v4 , `java.util.List` v5 @kind object, `boolean` v6 ) @signature `Ll/f0/i/g$d;.<init>:(Ll/f0/i/g;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e9f0c.  v0.`l.f0.i.g$d.f` @type ^`l.f0.i.g` := v1 @kind object;
  #L3e9f10.  v0.`l.f0.i.g$d.c` @type ^`int` := v4;
  #L3e9f14.  v0.`l.f0.i.g$d.d` @type ^`java.util.List` := v5 @kind object;
  #L3e9f18.  v0.`l.f0.i.g$d.e` @type ^`boolean` := v6 @kind boolean;
  #L3e9f1c.  call `<init>`(v0, v2, v3) @signature `Ll/f0/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e9f22.  return @kind void;
}
procedure `void` `b`(`l.f0.i.g$d` v4 @kind this) @signature `Ll/f0/i/g$d;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e9f34.  v0:= v4.`l.f0.i.g$d.f` @type ^`l.f0.i.g` @kind object;
  #L3e9f38.  v0:= v0.`l.f0.i.g.k` @type ^`l.f0.i.l` @kind object;
  #L3e9f3c.  v1:= v4.`l.f0.i.g$d.c` @type ^`int`;
  #L3e9f40.  v2:= v4.`l.f0.i.g$d.d` @type ^`java.util.List` @kind object;
  #L3e9f44.  v3:= v4.`l.f0.i.g$d.e` @type ^`boolean` @kind boolean;
  #L3e9f48.  call temp:= `a`(v0, v1, v2, v3) @signature `Ll/f0/i/l;.a:(ILjava/util/List;Z)Z` @kind interface;
  #L3e9f4e.  v0:= temp;
  #L3e9f50.  if v0 == 0 then goto L3e9f6a;
  #L3e9f54.  v1:= v4.`l.f0.i.g$d.f` @type ^`l.f0.i.g` @kind object;
  #L3e9f58.  v1:= v1.`l.f0.i.g.s` @type ^`l.f0.i.j` @kind object;
  #L3e9f5c.  v2:= v4.`l.f0.i.g$d.c` @type ^`int`;
  #L3e9f60.  v3:= `@@l.f0.i.b.h` @type ^`l.f0.i.b` @kind object;
  #L3e9f64.  call `a`(v1, v2, v3) @signature `Ll/f0/i/j;.a:(ILl/f0/i/b;)V` @kind virtual;
  #L3e9f6a.  if v0 != 0 then goto L3e9f76;
  #L3e9f6e.  v0:= v4.`l.f0.i.g$d.e` @type ^`boolean` @kind boolean;
  #L3e9f72.  if v0 == 0 then goto L3e9fa0;
  #L3e9f76.  v0:= v4.`l.f0.i.g$d.f` @type ^`l.f0.i.g` @kind object;
  #L3e9f7a.  @monitorenter v0
  #L3e9f7c.  v1:= v4.`l.f0.i.g$d.f` @type ^`l.f0.i.g` @kind object;
  #L3e9f80.  v1:= v1.`l.f0.i.g.u` @type ^`java.util.Set` @kind object;
  #L3e9f84.  v2:= v4.`l.f0.i.g$d.c` @type ^`int`;
  #L3e9f88.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e9f8e.  v2:= temp @kind object;
  #L3e9f90.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3e9f96.  @monitorexit v0
  #L3e9f98.  goto L3e9fa0;
  #L3e9f9a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e9f9c.  @monitorexit v0
  #L3e9f9e.  throw v1;
  #L3e9fa0.  return @kind void;
  catch `java.io.IOException` @[L3e9f54..L3e9f7c] goto L3e9fa0;
  catch `java.lang.Throwable` @[L3e9f7c..L3e9f9e] goto L3e9f9a;
  catch `java.io.IOException` @[L3e9f9e..L3e9fa0] goto L3e9fa0;
}
