record `l.f0.i.g` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `boolean` `l.f0.i.g.b` @AccessFlag FINAL;
  `l.f0.i.g$h` `l.f0.i.g.c` @AccessFlag FINAL;
  `java.util.Map` `l.f0.i.g.d` @AccessFlag FINAL;
  `java.lang.String` `l.f0.i.g.e` @AccessFlag FINAL;
  `int` `l.f0.i.g.f` @AccessFlag ;
  `int` `l.f0.i.g.g` @AccessFlag ;
  `boolean` `l.f0.i.g.h` @AccessFlag ;
  `java.util.concurrent.ScheduledExecutorService` `l.f0.i.g.i` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ExecutorService` `l.f0.i.g.j` @AccessFlag PRIVATE_FINAL;
  `l.f0.i.l` `l.f0.i.g.k` @AccessFlag FINAL;
  `boolean` `l.f0.i.g.l` @AccessFlag PRIVATE;
  `long` `l.f0.i.g.m` @AccessFlag ;
  `long` `l.f0.i.g.n` @AccessFlag ;
  `l.f0.i.m` `l.f0.i.g.o` @AccessFlag ;
  `l.f0.i.m` `l.f0.i.g.p` @AccessFlag FINAL;
  `boolean` `l.f0.i.g.q` @AccessFlag ;
  `java.net.Socket` `l.f0.i.g.r` @AccessFlag FINAL;
  `l.f0.i.j` `l.f0.i.g.s` @AccessFlag FINAL;
  `l.f0.i.g$j` `l.f0.i.g.t` @AccessFlag FINAL;
  `java.util.Set` `l.f0.i.g.u` @AccessFlag FINAL;
}
global `java.util.concurrent.ExecutorService` `@@l.f0.i.g.v` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ll/f0/i/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3ead40.  v0:= constclass @type ^`l.f0.i.g` @kind object;
  #L3ead44.  v0:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L3ead48.  v2:= 0I;
  #L3ead4a.  v3:= 2147483647I;
  #L3ead50.  v4:= 60L;
  #L3ead54.  v6:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3ead58.  v7:= new `java.util.concurrent.SynchronousQueue`;
  #L3ead5c.  call `<init>`(v7) @signature `Ljava/util/concurrent/SynchronousQueue;.<init>:()V` @kind direct;
  #L3ead62.  v1:= 1I;
  #L3ead64.  v8:= "OkHttp Http2Connection" @kind object;
  #L3ead68.  call temp:= `a`(v8, v1) @signature `Ll/f0/c;.a:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L3ead6e.  v8:= temp @kind object;
  #L3ead70.  v1:= v0 @kind object;
  #L3ead72.  call `<init>`(v1, v2, v3, v4, v6, v7, v8) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L3ead78.  `@@l.f0.i.g.v` @type ^`java.util.concurrent.ExecutorService` := v0 @kind object;
  #L3ead7c.  return @kind void;
}
procedure `void` `<init>`(`l.f0.i.g` v21 @kind this, `l.f0.i.g$g` v22 @kind object) @signature `Ll/f0/i/g;.<init>:(Ll/f0/i/g$g;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;

  #L3ead90.  v0:= v21 @kind object;
  #L3ead94.  v1:= v22 @kind object;
  #L3ead98.  call `<init>`(v21) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ead9e.  v2:= new `java.util.LinkedHashMap`;
  #L3eada2.  call `<init>`(v2) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L3eada8.  v0.`l.f0.i.g.d` @type ^`java.util.Map` := v2 @kind object;
  #L3eadac.  v2:= 0L;
  #L3eadb0.  v0.`l.f0.i.g.m` @type ^`long` := v2 @kind wide;
  #L3eadb4.  v2:= new `l.f0.i.m`;
  #L3eadb8.  call `<init>`(v2) @signature `Ll/f0/i/m;.<init>:()V` @kind direct;
  #L3eadbe.  v0.`l.f0.i.g.o` @type ^`l.f0.i.m` := v2 @kind object;
  #L3eadc2.  v2:= new `l.f0.i.m`;
  #L3eadc6.  call `<init>`(v2) @signature `Ll/f0/i/m;.<init>:()V` @kind direct;
  #L3eadcc.  v0.`l.f0.i.g.p` @type ^`l.f0.i.m` := v2 @kind object;
  #L3eadd0.  v2:= 0I;
  #L3eadd2.  v0.`l.f0.i.g.q` @type ^`boolean` := v2 @kind boolean;
  #L3eadd6.  v3:= new `java.util.LinkedHashSet`;
  #L3eadda.  call `<init>`(v3) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L3eade0.  v0.`l.f0.i.g.u` @type ^`java.util.Set` := v3 @kind object;
  #L3eade4.  v3:= v1.`l.f0.i.g$g.f` @type ^`l.f0.i.l` @kind object;
  #L3eade8.  v0.`l.f0.i.g.k` @type ^`l.f0.i.l` := v3 @kind object;
  #L3eadec.  v3:= v1.`l.f0.i.g$g.g` @type ^`boolean` @kind boolean;
  #L3eadf0.  v0.`l.f0.i.g.b` @type ^`boolean` := v3 @kind boolean;
  #L3eadf4.  v4:= v1.`l.f0.i.g$g.e` @type ^`l.f0.i.g$h` @kind object;
  #L3eadf8.  v0.`l.f0.i.g.c` @type ^`l.f0.i.g$h` := v4 @kind object;
  #L3eadfc.  v4:= 2I;
  #L3eadfe.  v5:= 1I;
  #L3eae00.  if v3 == 0 then goto L3eae08;
  #L3eae04.  v3:= 1I;
  #L3eae06.  goto L3eae0a;
  #L3eae08.  v3:= 2I;
  #L3eae0a.  v0.`l.f0.i.g.g` @type ^`int` := v3;
  #L3eae0e.  v3:= v1.`l.f0.i.g$g.g` @type ^`boolean` @kind boolean;
  #L3eae12.  if v3 == 0 then goto L3eae20;
  #L3eae16.  v3:= v0.`l.f0.i.g.g` @type ^`int`;
  #L3eae1a.  v3:= v3 + v4 @kind int;
  #L3eae1c.  v0.`l.f0.i.g.g` @type ^`int` := v3;
  #L3eae20.  v3:= v1.`l.f0.i.g$g.g` @type ^`boolean` @kind boolean;
  #L3eae24.  v4:= 7I;
  #L3eae26.  if v3 == 0 then goto L3eae38;
  #L3eae2a.  v3:= v0.`l.f0.i.g.o` @type ^`l.f0.i.m` @kind object;
  #L3eae2e.  v6:= 16777216I;
  #L3eae32.  call temp:= `a`(v3, v4, v6) @signature `Ll/f0/i/m;.a:(II)Ll/f0/i/m;` @kind virtual;
  #L3eae38.  v3:= v1.`l.f0.i.g$g.b` @type ^`java.lang.String` @kind object;
  #L3eae3c.  v0.`l.f0.i.g.e` @type ^`java.lang.String` := v3 @kind object;
  #L3eae40.  v3:= new `java.util.concurrent.ScheduledThreadPoolExecutor`;
  #L3eae44.  v6:= new `java.lang.Object`[v5];
  #L3eae48.  v7:= v0.`l.f0.i.g.e` @type ^`java.lang.String` @kind object;
  #L3eae4c.  v6[v2]:= v7 @kind object;
  #L3eae50.  v7:= "OkHttp %s Writer" @kind object;
  #L3eae54.  call temp:= `a`(v7, v6) @signature `Ll/f0/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3eae5a.  v6:= temp @kind object;
  #L3eae5c.  call temp:= `a`(v6, v2) @signature `Ll/f0/c;.a:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L3eae62.  v6:= temp @kind object;
  #L3eae64.  call `<init>`(v3, v5, v6) @signature `Ljava/util/concurrent/ScheduledThreadPoolExecutor;.<init>:(ILjava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L3eae6a.  v0.`l.f0.i.g.i` @type ^`java.util.concurrent.ScheduledExecutorService` := v3 @kind object;
  #L3eae6e.  v3:= v1.`l.f0.i.g$g.h` @type ^`int`;
  #L3eae72.  if v3 == 0 then goto L3eae96;
  #L3eae76.  v6:= v0.`l.f0.i.g.i` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L3eae7a.  v7:= new `l.f0.i.g$i`;
  #L3eae7e.  call `<init>`(v7, v0, v2, v2, v2) @signature `Ll/f0/i/g$i;.<init>:(Ll/f0/i/g;ZII)V` @kind direct;
  #L3eae84.  v3:= v1.`l.f0.i.g$g.h` @type ^`int`;
  #L3eae88.  v8:= (`long`) v3 @kind i2l;
  #L3eae8a.  v10:= (`long`) v3 @kind i2l;
  #L3eae8c.  v12:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3eae90.  call temp:= `scheduleAtFixedRate`(v6, v7, v8, v10, v12) @signature `Ljava/util/concurrent/ScheduledExecutorService;.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L3eae96.  v3:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L3eae9a.  v14:= 0I;
  #L3eae9c.  v15:= 1I;
  #L3eae9e.  v16:= 60L;
  #L3eaea2.  v18:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3eaea6.  v19:= new `java.util.concurrent.LinkedBlockingQueue`;
  #L3eaeaa.  call `<init>`(v19) @signature `Ljava/util/concurrent/LinkedBlockingQueue;.<init>:()V` @kind direct;
  #L3eaeb0.  v6:= new `java.lang.Object`[v5];
  #L3eaeb4.  v7:= v0.`l.f0.i.g.e` @type ^`java.lang.String` @kind object;
  #L3eaeb8.  v6[v2]:= v7 @kind object;
  #L3eaebc.  v2:= "OkHttp %s Push Observer" @kind object;
  #L3eaec0.  call temp:= `a`(v2, v6) @signature `Ll/f0/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3eaec6.  v2:= temp @kind object;
  #L3eaec8.  call temp:= `a`(v2, v5) @signature `Ll/f0/c;.a:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L3eaece.  v20:= temp @kind object;
  #L3eaed0.  v13:= v3 @kind object;
  #L3eaed2.  call `<init>`(v13, v14, v15, v16, v18, v19, v20) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L3eaed8.  v0.`l.f0.i.g.j` @type ^`java.util.concurrent.ExecutorService` := v3 @kind object;
  #L3eaedc.  v2:= v0.`l.f0.i.g.p` @type ^`l.f0.i.m` @kind object;
  #L3eaee0.  v3:= 65535I;
  #L3eaee6.  call temp:= `a`(v2, v4, v3) @signature `Ll/f0/i/m;.a:(II)Ll/f0/i/m;` @kind virtual;
  #L3eaeec.  v2:= v0.`l.f0.i.g.p` @type ^`l.f0.i.m` @kind object;
  #L3eaef0.  v3:= 5I;
  #L3eaef2.  v4:= 16384I;
  #L3eaef6.  call temp:= `a`(v2, v3, v4) @signature `Ll/f0/i/m;.a:(II)Ll/f0/i/m;` @kind virtual;
  #L3eaefc.  v2:= v0.`l.f0.i.g.p` @type ^`l.f0.i.m` @kind object;
  #L3eaf00.  call temp:= `c`(v2) @signature `Ll/f0/i/m;.c:()I` @kind virtual;
  #L3eaf06.  v2:= temp;
  #L3eaf08.  v2:= (`long`) v2 @kind i2l;
  #L3eaf0a.  v0.`l.f0.i.g.n` @type ^`long` := v2 @kind wide;
  #L3eaf0e.  v2:= v1.`l.f0.i.g$g.a` @type ^`java.net.Socket` @kind object;
  #L3eaf12.  v0.`l.f0.i.g.r` @type ^`java.net.Socket` := v2 @kind object;
  #L3eaf16.  v2:= new `l.f0.i.j`;
  #L3eaf1a.  v3:= v1.`l.f0.i.g$g.d` @type ^`m.d` @kind object;
  #L3eaf1e.  v4:= v0.`l.f0.i.g.b` @type ^`boolean` @kind boolean;
  #L3eaf22.  call `<init>`(v2, v3, v4) @signature `Ll/f0/i/j;.<init>:(Lm/d;Z)V` @kind direct;
  #L3eaf28.  v0.`l.f0.i.g.s` @type ^`l.f0.i.j` := v2 @kind object;
  #L3eaf2c.  v2:= new `l.f0.i.g$j`;
  #L3eaf30.  v3:= new `l.f0.i.h`;
  #L3eaf34.  v1:= v1.`l.f0.i.g$g.c` @type ^`m.e` @kind object;
  #L3eaf38.  v4:= v0.`l.f0.i.g.b` @type ^`boolean` @kind boolean;
  #L3eaf3c.  call `<init>`(v3, v1, v4) @signature `Ll/f0/i/h;.<init>:(Lm/e;Z)V` @kind direct;
  #L3eaf42.  call `<init>`(v2, v0, v3) @signature `Ll/f0/i/g$j;.<init>:(Ll/f0/i/g;Ll/f0/i/h;)V` @kind direct;
  #L3eaf48.  v0.`l.f0.i.g.t` @type ^`l.f0.i.g$j` := v2 @kind object;
  #L3eaf4c.  return @kind void;
}
procedure `void` `a`(`l.f0.i.g` v1 @kind this, `l.f0.b` v2 @kind object) @signature `Ll/f0/i/g;.a:(Ll/f0/b;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3eb1ac.  @monitorenter v1
  #L3eb1ae.  call temp:= `k`(v1) @signature `Ll/f0/i/g;.k:()Z` @kind virtual;
  #L3eb1b4.  v0:= temp;
  #L3eb1b6.  if v0 != 0 then goto L3eb1c4;
  #L3eb1ba.  v0:= v1.`l.f0.i.g.j` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3eb1be.  call `execute`(v0, v2) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L3eb1c4.  @monitorexit v1
  #L3eb1c6.  return @kind void;
  #L3eb1c8.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eb1ca.  @monitorexit v1
  #L3eb1cc.  throw v2;
  catch `java.lang.Throwable` @[L3eb1ae..L3eb1c4] goto L3eb1c8;
}
procedure `void` `a`(`l.f0.i.g` v0 @kind object) @signature `Ll/f0/i/g;.a:(Ll/f0/i/g;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3eaf60.  call `o`(v0) @signature `Ll/f0/i/g;.o:()V` @kind direct;
  #L3eaf66.  return @kind void;
}
procedure `boolean` `a`(`l.f0.i.g` v0 @kind object, `boolean` v1 ) @signature `Ll/f0/i/g;.a:(Ll/f0/i/g;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3eaa88.  v0.`l.f0.i.g.l` @type ^`boolean` := v1 @kind boolean;
  #L3eaa8c.  return v1;
}
procedure `java.util.concurrent.ScheduledExecutorService` `b`(`l.f0.i.g` v0 @kind object) @signature `Ll/f0/i/g;.b:(Ll/f0/i/g;)Ljava/util/concurrent/ScheduledExecutorService;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3eab44.  v0:= v0.`l.f0.i.g.i` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L3eab48.  return v0 @kind object;
}
procedure `l.f0.i.i` `b`(`l.f0.i.g` v10 @kind this, `int` v11 , `java.util.List` v12 @kind object, `boolean` v13 ) @signature `Ll/f0/i/g;.b:(ILjava/util/List;Z)Ll/f0/i/i;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3eab9c.  v6:= v13 ^~ 1;
  #L3eaba0.  v4:= 0I;
  #L3eaba2.  v7:= v10.`l.f0.i.g.s` @type ^`l.f0.i.j` @kind object;
  #L3eaba6.  @monitorenter v7
  #L3eaba8.  @monitorenter v10
  #L3eabaa.  v0:= v10.`l.f0.i.g.g` @type ^`int`;
  #L3eabae.  v1:= 1073741823I;
  #L3eabb4.  if v0 <= v1 then goto L3eabc2;
  #L3eabb8.  v0:= `@@l.f0.i.b.g` @type ^`l.f0.i.b` @kind object;
  #L3eabbc.  call `a`(v10, v0) @signature `Ll/f0/i/g;.a:(Ll/f0/i/b;)V` @kind virtual;
  #L3eabc2.  v0:= v10.`l.f0.i.g.h` @type ^`boolean` @kind boolean;
  #L3eabc6.  if v0 != 0 then goto L3eac7a;
  #L3eabca.  v8:= v10.`l.f0.i.g.g` @type ^`int`;
  #L3eabce.  v0:= v10.`l.f0.i.g.g` @type ^`int`;
  #L3eabd2.  v0:= v0 + 2;
  #L3eabd6.  v10.`l.f0.i.g.g` @type ^`int` := v0;
  #L3eabda.  v9:= new `l.f0.i.i`;
  #L3eabde.  v5:= 0I;
  #L3eabe0.  v0:= v9 @kind object;
  #L3eabe2.  v1:= v8;
  #L3eabe4.  v2:= v10 @kind object;
  #L3eabe6.  v3:= v6;
  #L3eabe8.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Ll/f0/i/i;.<init>:(ILl/f0/i/g;ZZLl/r;)V` @kind direct;
  #L3eabee.  if v13 == 0 then goto L3eac14;
  #L3eabf2.  v0:= v10.`l.f0.i.g.n` @type ^`long` @kind wide;
  #L3eabf6.  v2:= 0L;
  #L3eabfa.  v13:= lcmp(v0, v2);
  #L3eabfe.  if v13 == 0 then goto L3eac14;
  #L3eac02.  v0:= v9.`l.f0.i.i.b` @type ^`long` @kind wide;
  #L3eac06.  v13:= lcmp(v0, v2);
  #L3eac0a.  if v13 != 0 then goto L3eac10;
  #L3eac0e.  goto L3eac14;
  #L3eac10.  v13:= 0I;
  #L3eac12.  goto L3eac16;
  #L3eac14.  v13:= 1I;
  #L3eac16.  call temp:= `g`(v9) @signature `Ll/f0/i/i;.g:()Z` @kind virtual;
  #L3eac1c.  v0:= temp;
  #L3eac1e.  if v0 == 0 then goto L3eac34;
  #L3eac22.  v0:= v10.`l.f0.i.g.d` @type ^`java.util.Map` @kind object;
  #L3eac26.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3eac2c.  v1:= temp @kind object;
  #L3eac2e.  call temp:= `put`(v0, v1, v9) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3eac34.  @monitorexit v10
  #L3eac36.  if v11 != 0 then goto L3eac46;
  #L3eac3a.  v0:= v10.`l.f0.i.g.s` @type ^`l.f0.i.j` @kind object;
  #L3eac3e.  call `a`(v0, v6, v8, v11, v12) @signature `Ll/f0/i/j;.a:(ZIILjava/util/List;)V` @kind virtual;
  #L3eac44.  goto L3eac58;
  #L3eac46.  v0:= v10.`l.f0.i.g.b` @type ^`boolean` @kind boolean;
  #L3eac4a.  if v0 != 0 then goto L3eac6a;
  #L3eac4e.  v0:= v10.`l.f0.i.g.s` @type ^`l.f0.i.j` @kind object;
  #L3eac52.  call `a`(v0, v11, v8, v12) @signature `Ll/f0/i/j;.a:(IILjava/util/List;)V` @kind virtual;
  #L3eac58.  @monitorexit v7
  #L3eac5a.  if v13 == 0 then goto L3eac68;
  #L3eac5e.  v11:= v10.`l.f0.i.g.s` @type ^`l.f0.i.j` @kind object;
  #L3eac62.  call `flush`(v11) @signature `Ll/f0/i/j;.flush:()V` @kind virtual;
  #L3eac68.  return v9 @kind object;
  #L3eac6a.  v11:= new `java.lang.IllegalArgumentException`;
  #L3eac6e.  v12:= "client streams shouldn't have associated stream IDs" @kind object;
  #L3eac72.  call `<init>`(v11, v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3eac78.  throw v11;
  #L3eac7a.  v11:= new `l.f0.i.a`;
  #L3eac7e.  call `<init>`(v11) @signature `Ll/f0/i/a;.<init>:()V` @kind direct;
  #L3eac84.  throw v11;
  #L3eac86.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eac88.  @monitorexit v10
  #L3eac8a.  throw v11;
  #L3eac8c.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eac8e.  @monitorexit v7
  #L3eac90.  throw v11;
  catch `java.lang.Throwable` @[L3eaba8..L3eabaa] goto L3eac8c;
  catch `java.lang.Throwable` @[L3eabaa..L3eac36] goto L3eac86;
  catch `java.lang.Throwable` @[L3eac3a..L3eac5a] goto L3eac8c;
  catch `java.lang.Throwable` @[L3eac6a..L3eac7a] goto L3eac8c;
  catch `java.lang.Throwable` @[L3eac7a..L3eac8a] goto L3eac86;
  catch `java.lang.Throwable` @[L3eac8a..L3eac90] goto L3eac8c;
}
procedure `java.util.concurrent.ExecutorService` `n`() @signature `Ll/f0/i/g;.n:()Ljava/util/concurrent/ExecutorService;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L3eab2c.  v0:= `@@l.f0.i.g.v` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3eab30.  return v0 @kind object;
}
procedure `void` `o`(`l.f0.i.g` v2 @kind this) @signature `Ll/f0/i/g;.o:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3eb0ac.  v0:= `@@l.f0.i.b.d` @type ^`l.f0.i.b` @kind object;
  #L3eb0b0.  v1:= `@@l.f0.i.b.d` @type ^`l.f0.i.b` @kind object;
  #L3eb0b4.  call `a`(v2, v0, v1) @signature `Ll/f0/i/g;.a:(Ll/f0/i/b;Ll/f0/i/b;)V` @kind virtual;
  #L3eb0ba.  return @kind void;
  catch `java.io.IOException` @[L3eb0ac..L3eb0ba] goto L3eb0ba;
}
procedure `l.f0.i.i` `a`(`l.f0.i.g` v1 @kind this, `int` v2 ) @signature `Ll/f0/i/g;.a:(I)Ll/f0/i/i;` @AccessFlag  {
    temp;
    v0;

  #L3eab5c.  @monitorenter v1
  #L3eab5e.  v0:= v1.`l.f0.i.g.d` @type ^`java.util.Map` @kind object;
  #L3eab62.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3eab68.  v2:= temp @kind object;
  #L3eab6a.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3eab70.  v2:= temp @kind object;
  #L3eab72.  v2:= (`l.f0.i.i`) v2 @kind object;
  #L3eab76.  @monitorexit v1
  #L3eab78.  return v2 @kind object;
  #L3eab7a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eab7c.  @monitorexit v1
  #L3eab7e.  throw v2;
  catch `java.lang.Throwable` @[L3eab5e..L3eab76] goto L3eab7a;
}
procedure `l.f0.i.i` `a`(`l.f0.i.g` v1 @kind this, `java.util.List` v2 @kind object, `boolean` v3 ) @signature `Ll/f0/i/g;.a:(Ljava/util/List;Z)Ll/f0/i/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eacdc.  v0:= 0I;
  #L3eacde.  call temp:= `b`(v1, v0, v2, v3) @signature `Ll/f0/i/g;.b:(ILjava/util/List;Z)Ll/f0/i/i;` @kind direct;
  #L3eace4.  v2:= temp @kind object;
  #L3eace6.  return v2 @kind object;
}
procedure `void` `a`(`l.f0.i.g` v9 @kind this, `int` v10 , `long` v11 ) @signature `Ll/f0/i/g;.a:(IJ)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3eb6a8.  v0:= v9.`l.f0.i.g.i` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L3eb6ac.  v8:= new `l.f0.i.g$b`;
  #L3eb6b0.  v3:= "OkHttp Window Update %s stream %d" @kind object;
  #L3eb6b4.  v1:= 2I;
  #L3eb6b6.  v4:= new `java.lang.Object`[v1];
  #L3eb6ba.  v1:= 0I;
  #L3eb6bc.  v2:= v9.`l.f0.i.g.e` @type ^`java.lang.String` @kind object;
  #L3eb6c0.  v4[v1]:= v2 @kind object;
  #L3eb6c4.  v1:= 1I;
  #L3eb6c6.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3eb6cc.  v2:= temp @kind object;
  #L3eb6ce.  v4[v1]:= v2 @kind object;
  #L3eb6d2.  v1:= v8 @kind object;
  #L3eb6d4.  v2:= v9 @kind object;
  #L3eb6d6.  v5:= v10;
  #L3eb6d8.  v6:= v11 @kind wide;
  #L3eb6da.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Ll/f0/i/g$b;.<init>:(Ll/f0/i/g;Ljava/lang/String;[Ljava/lang/Object;IJ)V` @kind direct;
  #L3eb6e0.  call `execute`(v0, v8) @signature `Ljava/util/concurrent/ScheduledExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L3eb6e6.  return @kind void;
  catch `java.util.concurrent.RejectedExecutionException` @[L3eb6a8..L3eb6e6] goto L3eb6e6;
}
procedure `void` `a`(`l.f0.i.g` v8 @kind this, `int` v9 , `java.util.List` v10 @kind object) @signature `Ll/f0/i/g;.a:(ILjava/util/List;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3eb24c.  @monitorenter v8
  #L3eb24e.  v0:= v8.`l.f0.i.g.u` @type ^`java.util.Set` @kind object;
  #L3eb252.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3eb258.  v1:= temp @kind object;
  #L3eb25a.  call temp:= `contains`(v0, v1) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3eb260.  v0:= temp;
  #L3eb262.  if v0 == 0 then goto L3eb274;
  #L3eb266.  v10:= `@@l.f0.i.b.d` @type ^`l.f0.i.b` @kind object;
  #L3eb26a.  call `c`(v8, v9, v10) @signature `Ll/f0/i/g;.c:(ILl/f0/i/b;)V` @kind virtual;
  #L3eb270.  @monitorexit v8
  #L3eb272.  return @kind void;
  #L3eb274.  v0:= v8.`l.f0.i.g.u` @type ^`java.util.Set` @kind object;
  #L3eb278.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3eb27e.  v1:= temp @kind object;
  #L3eb280.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3eb286.  @monitorexit v8
  #L3eb288.  v0:= new `l.f0.i.g$c`;
  #L3eb28c.  v4:= "OkHttp %s Push Request[%s]" @kind object;
  #L3eb290.  v1:= 2I;
  #L3eb292.  v5:= new `java.lang.Object`[v1];
  #L3eb296.  v1:= 0I;
  #L3eb298.  v2:= v8.`l.f0.i.g.e` @type ^`java.lang.String` @kind object;
  #L3eb29c.  v5[v1]:= v2 @kind object;
  #L3eb2a0.  v1:= 1I;
  #L3eb2a2.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3eb2a8.  v2:= temp @kind object;
  #L3eb2aa.  v5[v1]:= v2 @kind object;
  #L3eb2ae.  v2:= v0 @kind object;
  #L3eb2b0.  v3:= v8 @kind object;
  #L3eb2b2.  v6:= v9;
  #L3eb2b4.  v7:= v10 @kind object;
  #L3eb2b6.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Ll/f0/i/g$c;.<init>:(Ll/f0/i/g;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;)V` @kind direct;
  #L3eb2bc.  call `a`(v8, v0) @signature `Ll/f0/i/g;.a:(Ll/f0/b;)V` @kind direct;
  #L3eb2c2.  return @kind void;
  #L3eb2c4.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eb2c6.  @monitorexit v8
  #L3eb2c8.  throw v9;
  catch `java.lang.Throwable` @[L3eb24e..L3eb288] goto L3eb2c4;
  catch `java.util.concurrent.RejectedExecutionException` @[L3eb288..L3eb2c2] goto L3eb2c2;
  catch `java.lang.Throwable` @[L3eb2c6..L3eb2c8] goto L3eb2c4;
}
procedure `void` `a`(`l.f0.i.g` v8 @kind this, `int` v9 , `java.util.List` v10 @kind object, `boolean` v11 ) @signature `Ll/f0/i/g;.a:(ILjava/util/List;Z)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3eb1ec.  v7:= new `l.f0.i.g$d`;
  #L3eb1f0.  v2:= "OkHttp %s Push Headers[%s]" @kind object;
  #L3eb1f4.  v0:= 2I;
  #L3eb1f6.  v3:= new `java.lang.Object`[v0];
  #L3eb1fa.  v0:= 0I;
  #L3eb1fc.  v1:= v8.`l.f0.i.g.e` @type ^`java.lang.String` @kind object;
  #L3eb200.  v3[v0]:= v1 @kind object;
  #L3eb204.  v0:= 1I;
  #L3eb206.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3eb20c.  v1:= temp @kind object;
  #L3eb20e.  v3[v0]:= v1 @kind object;
  #L3eb212.  v0:= v7 @kind object;
  #L3eb214.  v1:= v8 @kind object;
  #L3eb216.  v4:= v9;
  #L3eb218.  v5:= v10 @kind object;
  #L3eb21a.  v6:= v11;
  #L3eb21c.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Ll/f0/i/g$d;.<init>:(Ll/f0/i/g;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;Z)V` @kind direct;
  #L3eb222.  call `a`(v8, v7) @signature `Ll/f0/i/g;.a:(Ll/f0/b;)V` @kind direct;
  #L3eb228.  return @kind void;
  catch `java.util.concurrent.RejectedExecutionException` @[L3eb1ec..L3eb228] goto L3eb228;
}
procedure `void` `a`(`l.f0.i.g` v7 @kind this, `int` v8 , `l.f0.i.b` v9 @kind object) @signature `Ll/f0/i/g;.a:(ILl/f0/i/b;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3eb2fc.  v6:= new `l.f0.i.g$f`;
  #L3eb300.  v0:= 2I;
  #L3eb302.  v3:= new `java.lang.Object`[v0];
  #L3eb306.  v0:= v7.`l.f0.i.g.e` @type ^`java.lang.String` @kind object;
  #L3eb30a.  v1:= 0I;
  #L3eb30c.  v3[v1]:= v0 @kind object;
  #L3eb310.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3eb316.  v0:= temp @kind object;
  #L3eb318.  v1:= 1I;
  #L3eb31a.  v3[v1]:= v0 @kind object;
  #L3eb31e.  v2:= "OkHttp %s Push Reset[%s]" @kind object;
  #L3eb322.  v0:= v6 @kind object;
  #L3eb324.  v1:= v7 @kind object;
  #L3eb326.  v4:= v8;
  #L3eb328.  v5:= v9 @kind object;
  #L3eb32a.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Ll/f0/i/g$f;.<init>:(Ll/f0/i/g;Ljava/lang/String;[Ljava/lang/Object;ILl/f0/i/b;)V` @kind direct;
  #L3eb330.  call `a`(v7, v6) @signature `Ll/f0/i/g;.a:(Ll/f0/b;)V` @kind direct;
  #L3eb336.  return @kind void;
}
procedure `void` `a`(`l.f0.i.g` v8 @kind this, `int` v9 , `m.e` v10 @kind object, `int` v11 , `boolean` v12 ) @signature `Ll/f0/i/g;.a:(ILm/e;IZ)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3eb0f8.  v5:= new `m.c`;
  #L3eb0fc.  call `<init>`(v5) @signature `Lm/c;.<init>:()V` @kind direct;
  #L3eb102.  v0:= (`long`) v11 @kind i2l;
  #L3eb104.  call `d`(v10, v0) @signature `Lm/e;.d:(J)V` @kind interface;
  #L3eb10a.  call temp:= `a`(v10, v5, v0) @signature `Lm/s;.a:(Lm/c;J)J` @kind interface;
  #L3eb110.  call temp:= `v`(v5) @signature `Lm/c;.v:()J` @kind virtual;
  #L3eb116.  v2:= temp @kind wide;
  #L3eb118.  v10:= lcmp(v2, v0);
  #L3eb11c.  if v10 != 0 then goto L3eb15e;
  #L3eb120.  v10:= new `l.f0.i.g$e`;
  #L3eb124.  v0:= 2I;
  #L3eb126.  v3:= new `java.lang.Object`[v0];
  #L3eb12a.  v0:= 0I;
  #L3eb12c.  v1:= v8.`l.f0.i.g.e` @type ^`java.lang.String` @kind object;
  #L3eb130.  v3[v0]:= v1 @kind object;
  #L3eb134.  v0:= 1I;
  #L3eb136.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3eb13c.  v1:= temp @kind object;
  #L3eb13e.  v3[v0]:= v1 @kind object;
  #L3eb142.  v2:= "OkHttp %s Push Data[%s]" @kind object;
  #L3eb146.  v0:= v10 @kind object;
  #L3eb148.  v1:= v8 @kind object;
  #L3eb14a.  v4:= v9;
  #L3eb14c.  v6:= v11;
  #L3eb14e.  v7:= v12;
  #L3eb150.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Ll/f0/i/g$e;.<init>:(Ll/f0/i/g;Ljava/lang/String;[Ljava/lang/Object;ILm/c;IZ)V` @kind direct;
  #L3eb156.  call `a`(v8, v10) @signature `Ll/f0/i/g;.a:(Ll/f0/b;)V` @kind direct;
  #L3eb15c.  return @kind void;
  #L3eb15e.  v9:= new `java.io.IOException`;
  #L3eb162.  v10:= new `java.lang.StringBuilder`;
  #L3eb166.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3eb16c.  call temp:= `v`(v5) @signature `Lm/c;.v:()J` @kind virtual;
  #L3eb172.  v0:= temp @kind wide;
  #L3eb174.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb17a.  v12:= " != " @kind object;
  #L3eb17e.  call temp:= `append`(v10, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb184.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eb18a.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3eb190.  v10:= temp @kind object;
  #L3eb192.  call `<init>`(v9, v10) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3eb198.  throw v9;
}
procedure `void` `a`(`l.f0.i.g` v8 @kind this, `int` v9 , `boolean` v10 , `m.c` v11 @kind object, `long` v12 ) @signature `Ll/f0/i/g;.a:(IZLm/c;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3eb4c0.  v0:= 0I;
  #L3eb4c2.  v1:= 0L;
  #L3eb4c6.  v3:= lcmp(v12, v1);
  #L3eb4ca.  if v3 != 0 then goto L3eb4da;
  #L3eb4ce.  v12:= v8.`l.f0.i.g.s` @type ^`l.f0.i.j` @kind object;
  #L3eb4d2.  call `a`(v12, v10, v9, v11, v0) @signature `Ll/f0/i/j;.a:(ZILm/c;I)V` @kind virtual;
  #L3eb4d8.  return @kind void;
  #L3eb4da.  v3:= lcmp(v12, v1);
  #L3eb4de.  if v3 <= 0 then goto L3eb592;
  #L3eb4e2.  @monitorenter v8
  #L3eb4e4.  v3:= v8.`l.f0.i.g.n` @type ^`long` @kind wide;
  #L3eb4e8.  v5:= lcmp(v3, v1);
  #L3eb4ec.  if v5 > 0 then goto L3eb520;
  #L3eb4f0.  v3:= v8.`l.f0.i.g.d` @type ^`java.util.Map` @kind object;
  #L3eb4f4.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3eb4fa.  v4:= temp @kind object;
  #L3eb4fc.  call temp:= `containsKey`(v3, v4) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L3eb502.  v3:= temp;
  #L3eb504.  if v3 == 0 then goto L3eb510;
  #L3eb508.  call `wait`(v8) @signature `Ljava/lang/Object;.wait:()V` @kind virtual;
  #L3eb50e.  goto L3eb4e4;
  #L3eb510.  v9:= new `java.io.IOException`;
  #L3eb514.  v10:= "stream closed" @kind object;
  #L3eb518.  call `<init>`(v9, v10) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3eb51e.  throw v9;
  #L3eb520.  v3:= v8.`l.f0.i.g.n` @type ^`long` @kind wide;
  #L3eb524.  call temp:= `min`(v12, v3) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3eb52a.  v3:= temp @kind wide;
  #L3eb52c.  v4:= (`int`) v3 @kind l2i;
  #L3eb52e.  v3:= v8.`l.f0.i.g.s` @type ^`l.f0.i.j` @kind object;
  #L3eb532.  call temp:= `l`(v3) @signature `Ll/f0/i/j;.l:()I` @kind virtual;
  #L3eb538.  v3:= temp;
  #L3eb53a.  call temp:= `min`(v4, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3eb540.  v3:= temp;
  #L3eb542.  v4:= v8.`l.f0.i.g.n` @type ^`long` @kind wide;
  #L3eb546.  v6:= (`long`) v3 @kind i2l;
  #L3eb548.  v4:= v4 - v6 @kind long;
  #L3eb54a.  v8.`l.f0.i.g.n` @type ^`long` := v4 @kind wide;
  #L3eb54e.  @monitorexit v8
  #L3eb550.  v12:= v12 - v6 @kind long;
  #L3eb552.  v4:= v8.`l.f0.i.g.s` @type ^`l.f0.i.j` @kind object;
  #L3eb556.  if v10 == 0 then goto L3eb566;
  #L3eb55a.  v5:= lcmp(v12, v1);
  #L3eb55e.  if v5 != 0 then goto L3eb566;
  #L3eb562.  v5:= 1I;
  #L3eb564.  goto L3eb568;
  #L3eb566.  v5:= 0I;
  #L3eb568.  call `a`(v4, v5, v9, v11, v3) @signature `Ll/f0/i/j;.a:(ZILm/c;I)V` @kind virtual;
  #L3eb56e.  goto L3eb4da;
  #L3eb570.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eb572.  goto L3eb58e;
  #L3eb574.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3eb57a.  v9:= temp @kind object;
  #L3eb57c.  call `interrupt`(v9) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L3eb582.  v9:= new `java.io.InterruptedIOException`;
  #L3eb586.  call `<init>`(v9) @signature `Ljava/io/InterruptedIOException;.<init>:()V` @kind direct;
  #L3eb58c.  throw v9;
  #L3eb58e.  @monitorexit v8
  #L3eb590.  throw v9;
  #L3eb592.  return @kind void;
  catch `java.lang.InterruptedException` @[L3eb4e4..L3eb520] goto L3eb574;
  catch `java.lang.Throwable` @[L3eb4e4..L3eb520] goto L3eb570;
  catch `java.lang.Throwable` @[L3eb520..L3eb550] goto L3eb570;
  catch `java.lang.Throwable` @[L3eb574..L3eb590] goto L3eb570;
}
procedure `void` `a`(`l.f0.i.g` v4 @kind this, `l.f0.i.b` v5 @kind object) @signature `Ll/f0/i/g;.a:(Ll/f0/i/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3eb348.  v0:= v4.`l.f0.i.g.s` @type ^`l.f0.i.j` @kind object;
  #L3eb34c.  @monitorenter v0
  #L3eb34e.  @monitorenter v4
  #L3eb350.  v1:= v4.`l.f0.i.g.h` @type ^`boolean` @kind boolean;
  #L3eb354.  if v1 == 0 then goto L3eb35e;
  #L3eb358.  @monitorexit v4
  #L3eb35a.  @monitorexit v0
  #L3eb35c.  return @kind void;
  #L3eb35e.  v1:= 1I;
  #L3eb360.  v4.`l.f0.i.g.h` @type ^`boolean` := v1 @kind boolean;
  #L3eb364.  v1:= v4.`l.f0.i.g.f` @type ^`int`;
  #L3eb368.  @monitorexit v4
  #L3eb36a.  v2:= v4.`l.f0.i.g.s` @type ^`l.f0.i.j` @kind object;
  #L3eb36e.  v3:= `@@l.f0.c.a` @type ^`byte`[] @kind object;
  #L3eb372.  call `a`(v2, v1, v5, v3) @signature `Ll/f0/i/j;.a:(ILl/f0/i/b;[B)V` @kind virtual;
  #L3eb378.  @monitorexit v0
  #L3eb37a.  return @kind void;
  #L3eb37c.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eb37e.  @monitorexit v4
  #L3eb380.  throw v5;
  #L3eb382.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eb384.  @monitorexit v0
  #L3eb386.  throw v5;
  catch `java.lang.Throwable` @[L3eb34e..L3eb350] goto L3eb382;
  catch `java.lang.Throwable` @[L3eb350..L3eb35a] goto L3eb37c;
  catch `java.lang.Throwable` @[L3eb35a..L3eb35c] goto L3eb382;
  catch `java.lang.Throwable` @[L3eb360..L3eb36a] goto L3eb37c;
  catch `java.lang.Throwable` @[L3eb36a..L3eb37a] goto L3eb382;
  catch `java.lang.Throwable` @[L3eb37e..L3eb380] goto L3eb37c;
  catch `java.lang.Throwable` @[L3eb380..L3eb386] goto L3eb382;
}
procedure `void` `a`(`l.f0.i.g` v4 @kind this, `l.f0.i.b` v5 @kind object, `l.f0.i.b` v6 @kind object) @signature `Ll/f0/i/g;.a:(Ll/f0/i/b;Ll/f0/i/b;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3eaf98.  v0:= 0I;
  #L3eaf9a.  call `a`(v4, v5) @signature `Ll/f0/i/g;.a:(Ll/f0/i/b;)V` @kind virtual;
  #L3eafa0.  v5:= v0 @kind object;
  #L3eafa2.  goto L3eafa6;
  #L3eafa4.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L3eafa6.  @monitorenter v4
  #L3eafa8.  v1:= v4.`l.f0.i.g.d` @type ^`java.util.Map` @kind object;
  #L3eafac.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L3eafb2.  v1:= temp;
  #L3eafb4.  if v1 != 0 then goto L3eafea;
  #L3eafb8.  v0:= v4.`l.f0.i.g.d` @type ^`java.util.Map` @kind object;
  #L3eafbc.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L3eafc2.  v0:= temp @kind object;
  #L3eafc4.  v1:= v4.`l.f0.i.g.d` @type ^`java.util.Map` @kind object;
  #L3eafc8.  call temp:= `size`(v1) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L3eafce.  v1:= temp;
  #L3eafd0.  v1:= new `l.f0.i.i`[v1];
  #L3eafd4.  call temp:= `toArray`(v0, v1) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L3eafda.  v0:= temp @kind object;
  #L3eafdc.  v0:= (`l.f0.i.i`[]) v0 @kind object;
  #L3eafe0.  v1:= v4.`l.f0.i.g.d` @type ^`java.util.Map` @kind object;
  #L3eafe4.  call `clear`(v1) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L3eafea.  @monitorexit v4
  #L3eafec.  if v0 == 0 then goto L3eb012;
  #L3eaff0.  v1:= length @variable v0;
  #L3eaff2.  v2:= 0I;
  #L3eaff4.  if v2 >= v1 then goto L3eb012;
  #L3eaff8.  v3:= v0[v2] @kind object;
  #L3eaffc.  call `a`(v3, v6) @signature `Ll/f0/i/i;.a:(Ll/f0/i/b;)V` @kind virtual;
  #L3eb002.  goto L3eb00c;
  #L3eb004.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L3eb006.  if v5 == 0 then goto L3eb00c;
  #L3eb00a.  v5:= v3 @kind object;
  #L3eb00c.  v2:= v2 + 1;
  #L3eb010.  goto L3eaff4;
  #L3eb012.  v6:= v4.`l.f0.i.g.s` @type ^`l.f0.i.j` @kind object;
  #L3eb016.  call `close`(v6) @signature `Ll/f0/i/j;.close:()V` @kind virtual;
  #L3eb01c.  goto L3eb026;
  #L3eb01e.  v6:= Exception @type ^`java.io.IOException` @kind object;
  #L3eb020.  if v5 != 0 then goto L3eb026;
  #L3eb024.  v5:= v6 @kind object;
  #L3eb026.  v6:= v4.`l.f0.i.g.r` @type ^`java.net.Socket` @kind object;
  #L3eb02a.  call `close`(v6) @signature `Ljava/net/Socket;.close:()V` @kind virtual;
  #L3eb030.  goto L3eb034;
  #L3eb032.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L3eb034.  v6:= v4.`l.f0.i.g.i` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L3eb038.  call `shutdown`(v6) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdown:()V` @kind interface;
  #L3eb03e.  v6:= v4.`l.f0.i.g.j` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L3eb042.  call `shutdown`(v6) @signature `Ljava/util/concurrent/ExecutorService;.shutdown:()V` @kind interface;
  #L3eb048.  if v5 != 0 then goto L3eb04e;
  #L3eb04c.  return @kind void;
  #L3eb04e.  throw v5;
  #L3eb050.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eb052.  @monitorexit v4
  #L3eb054.  throw v5;
  catch `java.io.IOException` @[L3eaf9a..L3eafa0] goto L3eafa4;
  catch `java.lang.Throwable` @[L3eafa8..L3eafec] goto L3eb050;
  catch `java.io.IOException` @[L3eaffc..L3eb002] goto L3eb004;
  catch `java.io.IOException` @[L3eb012..L3eb01c] goto L3eb01e;
  catch `java.io.IOException` @[L3eb026..L3eb030] goto L3eb032;
  catch `java.lang.Throwable` @[L3eb052..L3eb054] goto L3eb050;
}
procedure `void` `a`(`l.f0.i.g` v5 @kind this, `boolean` v6 ) @signature `Ll/f0/i/g;.a:(Z)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3eb3f4.  if v6 == 0 then goto L3eb436;
  #L3eb3f8.  v6:= v5.`l.f0.i.g.s` @type ^`l.f0.i.j` @kind object;
  #L3eb3fc.  call `k`(v6) @signature `Ll/f0/i/j;.k:()V` @kind virtual;
  #L3eb402.  v6:= v5.`l.f0.i.g.s` @type ^`l.f0.i.j` @kind object;
  #L3eb406.  v0:= v5.`l.f0.i.g.o` @type ^`l.f0.i.m` @kind object;
  #L3eb40a.  call `b`(v6, v0) @signature `Ll/f0/i/j;.b:(Ll/f0/i/m;)V` @kind virtual;
  #L3eb410.  v6:= v5.`l.f0.i.g.o` @type ^`l.f0.i.m` @kind object;
  #L3eb414.  call temp:= `c`(v6) @signature `Ll/f0/i/m;.c:()I` @kind virtual;
  #L3eb41a.  v6:= temp;
  #L3eb41c.  v0:= 65535I;
  #L3eb422.  if v6 == v0 then goto L3eb436;
  #L3eb426.  v1:= v5.`l.f0.i.g.s` @type ^`l.f0.i.j` @kind object;
  #L3eb42a.  v2:= 0I;
  #L3eb42c.  v6:= v6 - v0 @kind int;
  #L3eb42e.  v3:= (`long`) v6 @kind i2l;
  #L3eb430.  call `a`(v1, v2, v3) @signature `Ll/f0/i/j;.a:(IJ)V` @kind virtual;
  #L3eb436.  v6:= new `java.lang.Thread`;
  #L3eb43a.  v0:= v5.`l.f0.i.g.t` @type ^`l.f0.i.g$j` @kind object;
  #L3eb43e.  call `<init>`(v6, v0) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L3eb444.  call `start`(v6) @signature `Ljava/lang/Thread;.start:()V` @kind virtual;
  #L3eb44a.  return @kind void;
}
procedure `void` `a`(`l.f0.i.g` v2 @kind this, `boolean` v3 , `int` v4 , `int` v5 ) @signature `Ll/f0/i/g;.a:(ZII)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3eb5c4.  if v3 != 0 then goto L3eb5e8;
  #L3eb5c8.  @monitorenter v2
  #L3eb5ca.  v0:= v2.`l.f0.i.g.l` @type ^`boolean` @kind boolean;
  #L3eb5ce.  v1:= 1I;
  #L3eb5d0.  v2.`l.f0.i.g.l` @type ^`boolean` := v1 @kind boolean;
  #L3eb5d4.  @monitorexit v2
  #L3eb5d6.  if v0 == 0 then goto L3eb5e8;
  #L3eb5da.  call `o`(v2) @signature `Ll/f0/i/g;.o:()V` @kind direct;
  #L3eb5e0.  return @kind void;
  #L3eb5e2.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eb5e4.  @monitorexit v2
  #L3eb5e6.  throw v3;
  #L3eb5e8.  v0:= v2.`l.f0.i.g.s` @type ^`l.f0.i.j` @kind object;
  #L3eb5ec.  call `a`(v0, v3, v4, v5) @signature `Ll/f0/i/j;.a:(ZII)V` @kind virtual;
  #L3eb5f2.  goto L3eb5fa;
  #L3eb5f4.  call `o`(v2) @signature `Ll/f0/i/g;.o:()V` @kind direct;
  #L3eb5fa.  return @kind void;
  catch `java.lang.Throwable` @[L3eb5ca..L3eb5d6] goto L3eb5e2;
  catch `java.lang.Throwable` @[L3eb5e4..L3eb5e6] goto L3eb5e2;
  catch `java.io.IOException` @[L3eb5e8..L3eb5f2] goto L3eb5f4;
}
procedure `void` `b`(`l.f0.i.g` v1 @kind this, `int` v2 , `l.f0.i.b` v3 @kind object) @signature `Ll/f0/i/g;.b:(ILl/f0/i/b;)V` @AccessFlag  {
    temp;
    v0;

  #L3eb62c.  v0:= v1.`l.f0.i.g.s` @type ^`l.f0.i.j` @kind object;
  #L3eb630.  call `a`(v0, v2, v3) @signature `Ll/f0/i/j;.a:(ILl/f0/i/b;)V` @kind virtual;
  #L3eb636.  return @kind void;
}
procedure `boolean` `b`(`l.f0.i.g` v1 @kind this, `int` v2 ) @signature `Ll/f0/i/g;.b:(I)Z` @AccessFlag  {
    temp;
    v0;

  #L3eaacc.  v0:= 1I;
  #L3eaace.  if v2 == 0 then goto L3eaada;
  #L3eaad2.  v2:= v2 ^& v0 @kind int;
  #L3eaad4.  if v2 != 0 then goto L3eaada;
  #L3eaad8.  goto L3eaadc;
  #L3eaada.  v0:= 0I;
  #L3eaadc.  return v0;
}
procedure `l.f0.i.i` `c`(`l.f0.i.g` v1 @kind this, `int` v2 ) @signature `Ll/f0/i/g;.c:(I)Ll/f0/i/i;` @AccessFlag  {
    temp;
    v0;

  #L3eacf8.  @monitorenter v1
  #L3eacfa.  v0:= v1.`l.f0.i.g.d` @type ^`java.util.Map` @kind object;
  #L3eacfe.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3ead04.  v2:= temp @kind object;
  #L3ead06.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3ead0c.  v2:= temp @kind object;
  #L3ead0e.  v2:= (`l.f0.i.i`) v2 @kind object;
  #L3ead12.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L3ead18.  @monitorexit v1
  #L3ead1a.  return v2 @kind object;
  #L3ead1c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ead1e.  @monitorexit v1
  #L3ead20.  throw v2;
  catch `java.lang.Throwable` @[L3eacfa..L3ead18] goto L3ead1c;
}
procedure `void` `c`(`l.f0.i.g` v8 @kind this, `int` v9 , `l.f0.i.b` v10 @kind object) @signature `Ll/f0/i/g;.c:(ILl/f0/i/b;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3eb648.  v0:= v8.`l.f0.i.g.i` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L3eb64c.  v7:= new `l.f0.i.g$a`;
  #L3eb650.  v3:= "OkHttp %s stream %d" @kind object;
  #L3eb654.  v1:= 2I;
  #L3eb656.  v4:= new `java.lang.Object`[v1];
  #L3eb65a.  v1:= 0I;
  #L3eb65c.  v2:= v8.`l.f0.i.g.e` @type ^`java.lang.String` @kind object;
  #L3eb660.  v4[v1]:= v2 @kind object;
  #L3eb664.  v1:= 1I;
  #L3eb666.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3eb66c.  v2:= temp @kind object;
  #L3eb66e.  v4[v1]:= v2 @kind object;
  #L3eb672.  v1:= v7 @kind object;
  #L3eb674.  v2:= v8 @kind object;
  #L3eb676.  v5:= v9;
  #L3eb678.  v6:= v10 @kind object;
  #L3eb67a.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Ll/f0/i/g$a;.<init>:(Ll/f0/i/g;Ljava/lang/String;[Ljava/lang/Object;ILl/f0/i/b;)V` @kind direct;
  #L3eb680.  call `execute`(v0, v7) @signature `Ljava/util/concurrent/ScheduledExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L3eb686.  return @kind void;
  catch `java.util.concurrent.RejectedExecutionException` @[L3eb648..L3eb686] goto L3eb686;
}
procedure `void` `close`(`l.f0.i.g` v2 @kind this) @signature `Ll/f0/i/g;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3eaf78.  v0:= `@@l.f0.i.b.c` @type ^`l.f0.i.b` @kind object;
  #L3eaf7c.  v1:= `@@l.f0.i.b.h` @type ^`l.f0.i.b` @kind object;
  #L3eaf80.  call `a`(v2, v0, v1) @signature `Ll/f0/i/g;.a:(Ll/f0/i/b;Ll/f0/i/b;)V` @kind virtual;
  #L3eaf86.  return @kind void;
}
procedure `void` `f`(`l.f0.i.g` v3 @kind this, `long` v4 ) @signature `Ll/f0/i/g;.f:(J)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3eb45c.  @monitorenter v3
  #L3eb45e.  v0:= v3.`l.f0.i.g.m` @type ^`long` @kind wide;
  #L3eb462.  v0:= v0 + v4 @kind long;
  #L3eb464.  v3.`l.f0.i.g.m` @type ^`long` := v0 @kind wide;
  #L3eb468.  v4:= v3.`l.f0.i.g.m` @type ^`long` @kind wide;
  #L3eb46c.  v0:= v3.`l.f0.i.g.o` @type ^`l.f0.i.m` @kind object;
  #L3eb470.  call temp:= `c`(v0) @signature `Ll/f0/i/m;.c:()I` @kind virtual;
  #L3eb476.  v0:= temp;
  #L3eb478.  v0:= v0 / 2;
  #L3eb47c.  v0:= (`long`) v0 @kind i2l;
  #L3eb47e.  v2:= lcmp(v4, v0);
  #L3eb482.  if v2 < 0 then goto L3eb49a;
  #L3eb486.  v4:= 0I;
  #L3eb488.  v0:= v3.`l.f0.i.g.m` @type ^`long` @kind wide;
  #L3eb48c.  call `a`(v3, v4, v0) @signature `Ll/f0/i/g;.a:(IJ)V` @kind virtual;
  #L3eb492.  v4:= 0L;
  #L3eb496.  v3.`l.f0.i.g.m` @type ^`long` := v4 @kind wide;
  #L3eb49a.  @monitorexit v3
  #L3eb49c.  return @kind void;
  #L3eb49e.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eb4a0.  @monitorexit v3
  #L3eb4a2.  throw v4;
  catch `java.lang.Throwable` @[L3eb45e..L3eb49a] goto L3eb49e;
}
procedure `void` `flush`(`l.f0.i.g` v1 @kind this) @signature `Ll/f0/i/g;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb0dc.  v0:= v1.`l.f0.i.g.s` @type ^`l.f0.i.j` @kind object;
  #L3eb0e0.  call `flush`(v0) @signature `Ll/f0/i/j;.flush:()V` @kind virtual;
  #L3eb0e6.  return @kind void;
}
procedure `boolean` `k`(`l.f0.i.g` v1 @kind this) @signature `Ll/f0/i/g;.k:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eaaa0.  @monitorenter v1
  #L3eaaa2.  v0:= v1.`l.f0.i.g.h` @type ^`boolean` @kind boolean;
  #L3eaaa6.  @monitorexit v1
  #L3eaaa8.  return v0;
  #L3eaaaa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eaaac.  @monitorexit v1
  #L3eaaae.  throw v0;
  catch `java.lang.Throwable` @[L3eaaa2..L3eaaa6] goto L3eaaaa;
}
procedure `int` `l`(`l.f0.i.g` v2 @kind this) @signature `Ll/f0/i/g;.l:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3eaaf0.  @monitorenter v2
  #L3eaaf2.  v0:= v2.`l.f0.i.g.p` @type ^`l.f0.i.m` @kind object;
  #L3eaaf6.  v1:= 2147483647I;
  #L3eaafc.  call temp:= `b`(v0, v1) @signature `Ll/f0/i/m;.b:(I)I` @kind virtual;
  #L3eab02.  v0:= temp;
  #L3eab04.  @monitorexit v2
  #L3eab06.  return v0;
  #L3eab08.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eab0a.  @monitorexit v2
  #L3eab0c.  throw v0;
  catch `java.lang.Throwable` @[L3eaaf2..L3eab04] goto L3eab08;
}
procedure `void` `m`(`l.f0.i.g` v1 @kind this) @signature `Ll/f0/i/g;.m:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb3d8.  v0:= 1I;
  #L3eb3da.  call `a`(v1, v0) @signature `Ll/f0/i/g;.a:(Z)V` @kind virtual;
  #L3eb3e0.  return @kind void;
}
