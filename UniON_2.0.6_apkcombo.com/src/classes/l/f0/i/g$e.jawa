record `l.f0.i.g$e` @kind class @AccessFlag  extends `l.f0.b` @kind class {
  `int` `l.f0.i.g$e.c` @AccessFlag FINAL_SYNTHETIC;
  `m.c` `l.f0.i.g$e.d` @AccessFlag FINAL_SYNTHETIC;
  `int` `l.f0.i.g$e.e` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `l.f0.i.g$e.f` @AccessFlag FINAL_SYNTHETIC;
  `l.f0.i.g` `l.f0.i.g$e.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`l.f0.i.g$e` v0 @kind this, `l.f0.i.g` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `int` v4 , `m.c` v5 @kind object, `int` v6 , `boolean` v7 ) @signature `Ll/f0/i/g$e;.<init>:(Ll/f0/i/g;Ljava/lang/String;[Ljava/lang/Object;ILm/c;IZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e9fd4.  v0.`l.f0.i.g$e.g` @type ^`l.f0.i.g` := v1 @kind object;
  #L3e9fd8.  v0.`l.f0.i.g$e.c` @type ^`int` := v4;
  #L3e9fdc.  v0.`l.f0.i.g$e.d` @type ^`m.c` := v5 @kind object;
  #L3e9fe0.  v0.`l.f0.i.g$e.e` @type ^`int` := v6;
  #L3e9fe4.  v0.`l.f0.i.g$e.f` @type ^`boolean` := v7 @kind boolean;
  #L3e9fe8.  call `<init>`(v0, v2, v3) @signature `Ll/f0/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e9fee.  return @kind void;
}
procedure `void` `b`(`l.f0.i.g$e` v5 @kind this) @signature `Ll/f0/i/g$e;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ea000.  v0:= v5.`l.f0.i.g$e.g` @type ^`l.f0.i.g` @kind object;
  #L3ea004.  v0:= v0.`l.f0.i.g.k` @type ^`l.f0.i.l` @kind object;
  #L3ea008.  v1:= v5.`l.f0.i.g$e.c` @type ^`int`;
  #L3ea00c.  v2:= v5.`l.f0.i.g$e.d` @type ^`m.c` @kind object;
  #L3ea010.  v3:= v5.`l.f0.i.g$e.e` @type ^`int`;
  #L3ea014.  v4:= v5.`l.f0.i.g$e.f` @type ^`boolean` @kind boolean;
  #L3ea018.  call temp:= `a`(v0, v1, v2, v3, v4) @signature `Ll/f0/i/l;.a:(ILm/e;IZ)Z` @kind interface;
  #L3ea01e.  v0:= temp;
  #L3ea020.  if v0 == 0 then goto L3ea03a;
  #L3ea024.  v1:= v5.`l.f0.i.g$e.g` @type ^`l.f0.i.g` @kind object;
  #L3ea028.  v1:= v1.`l.f0.i.g.s` @type ^`l.f0.i.j` @kind object;
  #L3ea02c.  v2:= v5.`l.f0.i.g$e.c` @type ^`int`;
  #L3ea030.  v3:= `@@l.f0.i.b.h` @type ^`l.f0.i.b` @kind object;
  #L3ea034.  call `a`(v1, v2, v3) @signature `Ll/f0/i/j;.a:(ILl/f0/i/b;)V` @kind virtual;
  #L3ea03a.  if v0 != 0 then goto L3ea046;
  #L3ea03e.  v0:= v5.`l.f0.i.g$e.f` @type ^`boolean` @kind boolean;
  #L3ea042.  if v0 == 0 then goto L3ea070;
  #L3ea046.  v0:= v5.`l.f0.i.g$e.g` @type ^`l.f0.i.g` @kind object;
  #L3ea04a.  @monitorenter v0
  #L3ea04c.  v1:= v5.`l.f0.i.g$e.g` @type ^`l.f0.i.g` @kind object;
  #L3ea050.  v1:= v1.`l.f0.i.g.u` @type ^`java.util.Set` @kind object;
  #L3ea054.  v2:= v5.`l.f0.i.g$e.c` @type ^`int`;
  #L3ea058.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3ea05e.  v2:= temp @kind object;
  #L3ea060.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3ea066.  @monitorexit v0
  #L3ea068.  goto L3ea070;
  #L3ea06a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ea06c.  @monitorexit v0
  #L3ea06e.  throw v1;
  #L3ea070.  return @kind void;
  catch `java.io.IOException` @[L3ea000..L3ea04c] goto L3ea070;
  catch `java.lang.Throwable` @[L3ea04c..L3ea06e] goto L3ea06a;
  catch `java.io.IOException` @[L3ea06e..L3ea070] goto L3ea070;
}
