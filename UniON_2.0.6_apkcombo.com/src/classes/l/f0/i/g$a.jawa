record `l.f0.i.g$a` @kind class @AccessFlag  extends `l.f0.b` @kind class {
  `int` `l.f0.i.g$a.c` @AccessFlag FINAL_SYNTHETIC;
  `l.f0.i.b` `l.f0.i.g$a.d` @AccessFlag FINAL_SYNTHETIC;
  `l.f0.i.g` `l.f0.i.g$a.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`l.f0.i.g$a` v0 @kind this, `l.f0.i.g` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `int` v4 , `l.f0.i.b` v5 @kind object) @signature `Ll/f0/i/g$a;.<init>:(Ll/f0/i/g;Ljava/lang/String;[Ljava/lang/Object;ILl/f0/i/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e9d8c.  v0.`l.f0.i.g$a.e` @type ^`l.f0.i.g` := v1 @kind object;
  #L3e9d90.  v0.`l.f0.i.g$a.c` @type ^`int` := v4;
  #L3e9d94.  v0.`l.f0.i.g$a.d` @type ^`l.f0.i.b` := v5 @kind object;
  #L3e9d98.  call `<init>`(v0, v2, v3) @signature `Ll/f0/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3e9d9e.  return @kind void;
}
procedure `void` `b`(`l.f0.i.g$a` v3 @kind this) @signature `Ll/f0/i/g$a;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e9db0.  v0:= v3.`l.f0.i.g$a.e` @type ^`l.f0.i.g` @kind object;
  #L3e9db4.  v1:= v3.`l.f0.i.g$a.c` @type ^`int`;
  #L3e9db8.  v2:= v3.`l.f0.i.g$a.d` @type ^`l.f0.i.b` @kind object;
  #L3e9dbc.  call `b`(v0, v1, v2) @signature `Ll/f0/i/g;.b:(ILl/f0/i/b;)V` @kind virtual;
  #L3e9dc2.  goto L3e9dce;
  #L3e9dc4.  v0:= v3.`l.f0.i.g$a.e` @type ^`l.f0.i.g` @kind object;
  #L3e9dc8.  call `a`(v0) @signature `Ll/f0/i/g;.a:(Ll/f0/i/g;)V` @kind static;
  #L3e9dce.  return @kind void;
  catch `java.io.IOException` @[L3e9db0..L3e9dc2] goto L3e9dc4;
}
