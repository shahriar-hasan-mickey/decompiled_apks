record `l.f0.i.c` @kind class @AccessFlag PUBLIC_FINAL {
  `m.f` `l.f0.i.c.a` @AccessFlag PUBLIC_FINAL;
  `m.f` `l.f0.i.c.b` @AccessFlag PUBLIC_FINAL;
  `int` `l.f0.i.c.c` @AccessFlag FINAL;
}
global `m.f` `@@l.f0.i.c.d` @AccessFlag PUBLIC_STATIC_FINAL;
global `m.f` `@@l.f0.i.c.e` @AccessFlag PUBLIC_STATIC_FINAL;
global `m.f` `@@l.f0.i.c.f` @AccessFlag PUBLIC_STATIC_FINAL;
global `m.f` `@@l.f0.i.c.g` @AccessFlag PUBLIC_STATIC_FINAL;
global `m.f` `@@l.f0.i.c.h` @AccessFlag PUBLIC_STATIC_FINAL;
global `m.f` `@@l.f0.i.c.i` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ll/f0/i/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e84d0.  v0:= ":" @kind object;
  #L3e84d4.  call temp:= `c`(v0) @signature `Lm/f;.c:(Ljava/lang/String;)Lm/f;` @kind static;
  #L3e84da.  v0:= temp @kind object;
  #L3e84dc.  `@@l.f0.i.c.d` @type ^`m.f` := v0 @kind object;
  #L3e84e0.  v0:= ":status" @kind object;
  #L3e84e4.  call temp:= `c`(v0) @signature `Lm/f;.c:(Ljava/lang/String;)Lm/f;` @kind static;
  #L3e84ea.  v0:= temp @kind object;
  #L3e84ec.  `@@l.f0.i.c.e` @type ^`m.f` := v0 @kind object;
  #L3e84f0.  v0:= ":method" @kind object;
  #L3e84f4.  call temp:= `c`(v0) @signature `Lm/f;.c:(Ljava/lang/String;)Lm/f;` @kind static;
  #L3e84fa.  v0:= temp @kind object;
  #L3e84fc.  `@@l.f0.i.c.f` @type ^`m.f` := v0 @kind object;
  #L3e8500.  v0:= ":path" @kind object;
  #L3e8504.  call temp:= `c`(v0) @signature `Lm/f;.c:(Ljava/lang/String;)Lm/f;` @kind static;
  #L3e850a.  v0:= temp @kind object;
  #L3e850c.  `@@l.f0.i.c.g` @type ^`m.f` := v0 @kind object;
  #L3e8510.  v0:= ":scheme" @kind object;
  #L3e8514.  call temp:= `c`(v0) @signature `Lm/f;.c:(Ljava/lang/String;)Lm/f;` @kind static;
  #L3e851a.  v0:= temp @kind object;
  #L3e851c.  `@@l.f0.i.c.h` @type ^`m.f` := v0 @kind object;
  #L3e8520.  v0:= ":authority" @kind object;
  #L3e8524.  call temp:= `c`(v0) @signature `Lm/f;.c:(Ljava/lang/String;)Lm/f;` @kind static;
  #L3e852a.  v0:= temp @kind object;
  #L3e852c.  `@@l.f0.i.c.i` @type ^`m.f` := v0 @kind object;
  #L3e8530.  return @kind void;
}
procedure `void` `<init>`(`l.f0.i.c` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Ll/f0/i/c;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e8544.  call temp:= `c`(v1) @signature `Lm/f;.c:(Ljava/lang/String;)Lm/f;` @kind static;
  #L3e854a.  v1:= temp @kind object;
  #L3e854c.  call temp:= `c`(v2) @signature `Lm/f;.c:(Ljava/lang/String;)Lm/f;` @kind static;
  #L3e8552.  v2:= temp @kind object;
  #L3e8554.  call `<init>`(v0, v1, v2) @signature `Ll/f0/i/c;.<init>:(Lm/f;Lm/f;)V` @kind direct;
  #L3e855a.  return @kind void;
}
procedure `void` `<init>`(`l.f0.i.c` v0 @kind this, `m.f` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Ll/f0/i/c;.<init>:(Lm/f;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e856c.  call temp:= `c`(v2) @signature `Lm/f;.c:(Ljava/lang/String;)Lm/f;` @kind static;
  #L3e8572.  v2:= temp @kind object;
  #L3e8574.  call `<init>`(v0, v1, v2) @signature `Ll/f0/i/c;.<init>:(Lm/f;Lm/f;)V` @kind direct;
  #L3e857a.  return @kind void;
}
procedure `void` `<init>`(`l.f0.i.c` v0 @kind this, `m.f` v1 @kind object, `m.f` v2 @kind object) @signature `Ll/f0/i/c;.<init>:(Lm/f;Lm/f;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e858c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e8592.  v0.`l.f0.i.c.a` @type ^`m.f` := v1 @kind object;
  #L3e8596.  v0.`l.f0.i.c.b` @type ^`m.f` := v2 @kind object;
  #L3e859a.  call temp:= `l`(v1) @signature `Lm/f;.l:()I` @kind virtual;
  #L3e85a0.  v1:= temp;
  #L3e85a2.  v1:= v1 + 32;
  #L3e85a6.  call temp:= `l`(v2) @signature `Lm/f;.l:()I` @kind virtual;
  #L3e85ac.  v2:= temp;
  #L3e85ae.  v1:= v1 + v2 @kind int;
  #L3e85b0.  v0.`l.f0.i.c.c` @type ^`int` := v1;
  #L3e85b4.  return @kind void;
}
procedure `boolean` `equals`(`l.f0.i.c` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Ll/f0/i/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e8404.  v0:= instanceof @variable v4 @type ^`l.f0.i.c` @kind boolean;
  #L3e8408.  v1:= 0I;
  #L3e840a.  if v0 == 0 then goto L3e843c;
  #L3e840e.  v4:= (`l.f0.i.c`) v4 @kind object;
  #L3e8412.  v0:= v3.`l.f0.i.c.a` @type ^`m.f` @kind object;
  #L3e8416.  v2:= v4.`l.f0.i.c.a` @type ^`m.f` @kind object;
  #L3e841a.  call temp:= `equals`(v0, v2) @signature `Lm/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e8420.  v0:= temp;
  #L3e8422.  if v0 == 0 then goto L3e843c;
  #L3e8426.  v0:= v3.`l.f0.i.c.b` @type ^`m.f` @kind object;
  #L3e842a.  v4:= v4.`l.f0.i.c.b` @type ^`m.f` @kind object;
  #L3e842e.  call temp:= `equals`(v0, v4) @signature `Lm/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e8434.  v4:= temp;
  #L3e8436.  if v4 == 0 then goto L3e843c;
  #L3e843a.  v1:= 1I;
  #L3e843c.  return v1;
}
procedure `int` `hashCode`(`l.f0.i.c` v2 @kind this) @signature `Ll/f0/i/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e8450.  v0:= v2.`l.f0.i.c.a` @type ^`m.f` @kind object;
  #L3e8454.  call temp:= `hashCode`(v0) @signature `Lm/f;.hashCode:()I` @kind virtual;
  #L3e845a.  v0:= temp;
  #L3e845c.  v1:= 527I;
  #L3e8460.  v1:= v1 + v0 @kind int;
  #L3e8462.  v1:= v1 * 31;
  #L3e8466.  v0:= v2.`l.f0.i.c.b` @type ^`m.f` @kind object;
  #L3e846a.  call temp:= `hashCode`(v0) @signature `Lm/f;.hashCode:()I` @kind virtual;
  #L3e8470.  v0:= temp;
  #L3e8472.  v1:= v1 + v0 @kind int;
  #L3e8474.  return v1;
}
procedure `java.lang.String` `toString`(`l.f0.i.c` v3 @kind this) @signature `Ll/f0/i/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e8488.  v0:= 2I;
  #L3e848a.  v0:= new `java.lang.Object`[v0];
  #L3e848e.  v1:= v3.`l.f0.i.c.a` @type ^`m.f` @kind object;
  #L3e8492.  call temp:= `o`(v1) @signature `Lm/f;.o:()Ljava/lang/String;` @kind virtual;
  #L3e8498.  v1:= temp @kind object;
  #L3e849a.  v2:= 0I;
  #L3e849c.  v0[v2]:= v1 @kind object;
  #L3e84a0.  v1:= v3.`l.f0.i.c.b` @type ^`m.f` @kind object;
  #L3e84a4.  call temp:= `o`(v1) @signature `Lm/f;.o:()Ljava/lang/String;` @kind virtual;
  #L3e84aa.  v1:= temp @kind object;
  #L3e84ac.  v2:= 1I;
  #L3e84ae.  v0[v2]:= v1 @kind object;
  #L3e84b2.  v1:= "%s: %s" @kind object;
  #L3e84b6.  call temp:= `a`(v1, v0) @signature `Ll/f0/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3e84bc.  v0:= temp @kind object;
  #L3e84be.  return v0 @kind object;
}
