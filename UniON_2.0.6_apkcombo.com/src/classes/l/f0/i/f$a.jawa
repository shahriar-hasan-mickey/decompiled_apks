record `l.f0.i.f$a` @kind class @AccessFlag  extends `m.h` @kind class {
  `boolean` `l.f0.i.f$a.c` @AccessFlag ;
  `long` `l.f0.i.f$a.d` @AccessFlag ;
  `l.f0.i.f` `l.f0.i.f$a.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`l.f0.i.f$a` v0 @kind this, `l.f0.i.f` v1 @kind object, `m.s` v2 @kind object) @signature `Ll/f0/i/f$a;.<init>:(Ll/f0/i/f;Lm/s;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e987c.  v0.`l.f0.i.f$a.e` @type ^`l.f0.i.f` := v1 @kind object;
  #L3e9880.  call `<init>`(v0, v2) @signature `Lm/h;.<init>:(Lm/s;)V` @kind direct;
  #L3e9886.  v1:= 0I;
  #L3e9888.  v0.`l.f0.i.f$a.c` @type ^`boolean` := v1 @kind boolean;
  #L3e988c.  v1:= 0L;
  #L3e9890.  v0.`l.f0.i.f$a.d` @type ^`long` := v1 @kind wide;
  #L3e9894.  return @kind void;
}
procedure `void` `a`(`l.f0.i.f$a` v7 @kind this, `java.io.IOException` v8 @kind object) @signature `Ll/f0/i/f$a;.a:(Ljava/io/IOException;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e98c8.  v0:= v7.`l.f0.i.f$a.c` @type ^`boolean` @kind boolean;
  #L3e98cc.  if v0 == 0 then goto L3e98d2;
  #L3e98d0.  return @kind void;
  #L3e98d2.  v0:= 1I;
  #L3e98d4.  v7.`l.f0.i.f$a.c` @type ^`boolean` := v0 @kind boolean;
  #L3e98d8.  v3:= v7.`l.f0.i.f$a.e` @type ^`l.f0.i.f` @kind object;
  #L3e98dc.  v1:= v3.`l.f0.i.f.b` @type ^`l.f0.f.g` @kind object;
  #L3e98e0.  v2:= 0I;
  #L3e98e2.  v4:= v7.`l.f0.i.f$a.d` @type ^`long` @kind wide;
  #L3e98e6.  v6:= v8 @kind object;
  #L3e98e8.  call `a`(v1, v2, v3, v4, v6) @signature `Ll/f0/f/g;.a:(ZLl/f0/g/c;JLjava/io/IOException;)V` @kind virtual;
  #L3e98ee.  return @kind void;
}
procedure `long` `a`(`l.f0.i.f$a` v2 @kind this, `m.c` v3 @kind object, `long` v4 ) @signature `Ll/f0/i/f$a;.a:(Lm/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e9828.  call temp:= `a`(v2) @signature `Lm/h;.a:()Lm/s;` @kind virtual;
  #L3e982e.  v0:= temp @kind object;
  #L3e9830.  call temp:= `a`(v0, v3, v4) @signature `Lm/s;.a:(Lm/c;J)J` @kind interface;
  #L3e9836.  v3:= temp @kind wide;
  #L3e9838.  v0:= 0L;
  #L3e983c.  v5:= lcmp(v3, v0);
  #L3e9840.  if v5 <= 0 then goto L3e984e;
  #L3e9844.  v0:= v2.`l.f0.i.f$a.d` @type ^`long` @kind wide;
  #L3e9848.  v0:= v0 + v3 @kind long;
  #L3e984a.  v2.`l.f0.i.f$a.d` @type ^`long` := v0 @kind wide;
  #L3e984e.  return v3 @kind wide;
  #L3e9850.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L3e9852.  call `a`(v2, v3) @signature `Ll/f0/i/f$a;.a:(Ljava/io/IOException;)V` @kind direct;
  #L3e9858.  throw v3;
  catch `java.io.IOException` @[L3e9828..L3e984e] goto L3e9850;
}
procedure `void` `close`(`l.f0.i.f$a` v1 @kind this) @signature `Ll/f0/i/f$a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e98a8.  call `close`(v1) @signature `Lm/h;.close:()V` @kind super;
  #L3e98ae.  v0:= 0I;
  #L3e98b0.  call `a`(v1, v0) @signature `Ll/f0/i/f$a;.a:(Ljava/io/IOException;)V` @kind direct;
  #L3e98b6.  return @kind void;
}
