record `l.f0.i.i$b` @kind class @AccessFlag FINAL extends `m.s` @kind interface {
  `m.c` `l.f0.i.i$b.b` @AccessFlag PRIVATE_FINAL;
  `m.c` `l.f0.i.i$b.c` @AccessFlag PRIVATE_FINAL;
  `long` `l.f0.i.i$b.d` @AccessFlag PRIVATE_FINAL;
  `boolean` `l.f0.i.i$b.e` @AccessFlag ;
  `boolean` `l.f0.i.i$b.f` @AccessFlag ;
  `l.f0.i.i` `l.f0.i.i$b.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`l.f0.i.i$b` v0 @kind this, `l.f0.i.i` v1 @kind object, `long` v2 ) @signature `Ll/f0/i/i$b;.<init>:(Ll/f0/i/i;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ec78c.  v0.`l.f0.i.i$b.g` @type ^`l.f0.i.i` := v1 @kind object;
  #L3ec790.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ec796.  v1:= new `m.c`;
  #L3ec79a.  call `<init>`(v1) @signature `Lm/c;.<init>:()V` @kind direct;
  #L3ec7a0.  v0.`l.f0.i.i$b.b` @type ^`m.c` := v1 @kind object;
  #L3ec7a4.  v1:= new `m.c`;
  #L3ec7a8.  call `<init>`(v1) @signature `Lm/c;.<init>:()V` @kind direct;
  #L3ec7ae.  v0.`l.f0.i.i$b.c` @type ^`m.c` := v1 @kind object;
  #L3ec7b2.  v0.`l.f0.i.i$b.d` @type ^`long` := v2 @kind wide;
  #L3ec7b6.  return @kind void;
}
procedure `void` `e`(`l.f0.i.i$b` v1 @kind this, `long` v2 ) @signature `Ll/f0/i/i$b;.e:(J)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ec9d0.  v0:= v1.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec9d4.  v0:= v0.`l.f0.i.i.d` @type ^`l.f0.i.g` @kind object;
  #L3ec9d8.  call `f`(v0, v2) @signature `Ll/f0/i/g;.f:(J)V` @kind virtual;
  #L3ec9de.  return @kind void;
}
procedure `long` `a`(`l.f0.i.i$b` v17 @kind this, `m.c` v18 @kind object, `long` v19 ) @signature `Ll/f0/i/i$b;.a:(Lm/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L3ec524.  v1:= v17 @kind object;
  #L3ec528.  v2:= v19 @kind wide;
  #L3ec52c.  v4:= 0L;
  #L3ec530.  v0:= lcmp(v2, v4);
  #L3ec534.  if v0 < 0 then goto L3ec700;
  #L3ec538.  v6:= v1.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec53c.  @monitorenter v6
  #L3ec53e.  v0:= v1.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec542.  v0:= v0.`l.f0.i.i.j` @type ^`l.f0.i.i$c` @kind object;
  #L3ec546.  call `g`(v0) @signature `Lm/a;.g:()V` @kind virtual;
  #L3ec54c.  v0:= v1.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec550.  v0:= v0.`l.f0.i.i.l` @type ^`l.f0.i.b` @kind object;
  #L3ec554.  if v0 == 0 then goto L3ec562;
  #L3ec558.  v0:= v1.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec55c.  v0:= v0.`l.f0.i.i.l` @type ^`l.f0.i.b` @kind object;
  #L3ec560.  goto L3ec564;
  #L3ec562.  v0:= 0I;
  #L3ec564.  v8:= v1.`l.f0.i.i$b.e` @type ^`boolean` @kind boolean;
  #L3ec568.  if v8 != 0 then goto L3ec6d8;
  #L3ec56c.  v8:= v1.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec570.  call temp:= `a`(v8) @signature `Ll/f0/i/i;.a:(Ll/f0/i/i;)Ljava/util/Deque;` @kind static;
  #L3ec576.  v8:= temp @kind object;
  #L3ec578.  call temp:= `isEmpty`(v8) @signature `Ljava/util/Deque;.isEmpty:()Z` @kind interface;
  #L3ec57e.  v8:= temp;
  #L3ec580.  v9:= -1L;
  #L3ec584.  if v8 != 0 then goto L3ec5c4;
  #L3ec588.  v8:= v1.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec58c.  call temp:= `b`(v8) @signature `Ll/f0/i/i;.b:(Ll/f0/i/i;)Ll/f0/i/c$a;` @kind static;
  #L3ec592.  v8:= temp @kind object;
  #L3ec594.  if v8 == 0 then goto L3ec5c4;
  #L3ec598.  v7:= v1.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec59c.  call temp:= `a`(v7) @signature `Ll/f0/i/i;.a:(Ll/f0/i/i;)Ljava/util/Deque;` @kind static;
  #L3ec5a2.  v7:= temp @kind object;
  #L3ec5a4.  call temp:= `removeFirst`(v7) @signature `Ljava/util/Deque;.removeFirst:()Ljava/lang/Object;` @kind interface;
  #L3ec5aa.  v7:= temp @kind object;
  #L3ec5ac.  v7:= (`l.r`) v7 @kind object;
  #L3ec5b0.  v8:= v1.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec5b4.  call temp:= `b`(v8) @signature `Ll/f0/i/i;.b:(Ll/f0/i/i;)Ll/f0/i/c$a;` @kind static;
  #L3ec5ba.  v8:= temp @kind object;
  #L3ec5bc.  v13:= v18 @kind object;
  #L3ec5c0.  v11:= v9 @kind wide;
  #L3ec5c2.  goto L3ec694;
  #L3ec5c4.  v8:= v1.`l.f0.i.i$b.c` @type ^`m.c` @kind object;
  #L3ec5c8.  call temp:= `v`(v8) @signature `Lm/c;.v:()J` @kind virtual;
  #L3ec5ce.  v11:= temp @kind wide;
  #L3ec5d0.  v8:= lcmp(v11, v4);
  #L3ec5d4.  if v8 <= 0 then goto L3ec660;
  #L3ec5d8.  v8:= v1.`l.f0.i.i$b.c` @type ^`m.c` @kind object;
  #L3ec5dc.  v11:= v1.`l.f0.i.i$b.c` @type ^`m.c` @kind object;
  #L3ec5e0.  call temp:= `v`(v11) @signature `Lm/c;.v:()J` @kind virtual;
  #L3ec5e6.  v11:= temp @kind wide;
  #L3ec5e8.  call temp:= `min`(v2, v11) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3ec5ee.  v11:= temp @kind wide;
  #L3ec5f0.  v13:= v18 @kind object;
  #L3ec5f4.  call temp:= `a`(v8, v13, v11) @signature `Lm/c;.a:(Lm/c;J)J` @kind virtual;
  #L3ec5fa.  v11:= temp @kind wide;
  #L3ec5fc.  v8:= v1.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec600.  v14:= v8.`l.f0.i.i.a` @type ^`long` @kind wide;
  #L3ec604.  v14:= v14 + v11 @kind long;
  #L3ec606.  v8.`l.f0.i.i.a` @type ^`long` := v14 @kind wide;
  #L3ec60a.  if v0 != 0 then goto L3ec690;
  #L3ec60e.  v8:= v1.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec612.  v14:= v8.`l.f0.i.i.a` @type ^`long` @kind wide;
  #L3ec616.  v8:= v1.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec61a.  v8:= v8.`l.f0.i.i.d` @type ^`l.f0.i.g` @kind object;
  #L3ec61e.  v8:= v8.`l.f0.i.g.o` @type ^`l.f0.i.m` @kind object;
  #L3ec622.  call temp:= `c`(v8) @signature `Ll/f0/i/m;.c:()I` @kind virtual;
  #L3ec628.  v8:= temp;
  #L3ec62a.  v8:= v8 / 2;
  #L3ec62e.  v7:= (`long`) v8 @kind i2l;
  #L3ec630.  v16:= lcmp(v14, v7);
  #L3ec634.  if v16 < 0 then goto L3ec690;
  #L3ec638.  v7:= v1.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec63c.  v7:= v7.`l.f0.i.i.d` @type ^`l.f0.i.g` @kind object;
  #L3ec640.  v8:= v1.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec644.  v8:= v8.`l.f0.i.i.c` @type ^`int`;
  #L3ec648.  v14:= v1.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec64c.  v14:= v14.`l.f0.i.i.a` @type ^`long` @kind wide;
  #L3ec650.  call `a`(v7, v8, v14) @signature `Ll/f0/i/g;.a:(IJ)V` @kind virtual;
  #L3ec656.  v7:= v1.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec65a.  v7.`l.f0.i.i.a` @type ^`long` := v4 @kind wide;
  #L3ec65e.  goto L3ec690;
  #L3ec660.  v13:= v18 @kind object;
  #L3ec664.  v7:= v1.`l.f0.i.i$b.f` @type ^`boolean` @kind boolean;
  #L3ec668.  if v7 != 0 then goto L3ec68e;
  #L3ec66c.  if v0 != 0 then goto L3ec68e;
  #L3ec670.  v0:= v1.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec674.  call `k`(v0) @signature `Ll/f0/i/i;.k:()V` @kind virtual;
  #L3ec67a.  v0:= v1.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec67e.  v0:= v0.`l.f0.i.i.j` @type ^`l.f0.i.i$c` @kind object;
  #L3ec682.  call `k`(v0) @signature `Ll/f0/i/i$c;.k:()V` @kind virtual;
  #L3ec688.  @monitorexit v6
  #L3ec68a.  goto L3ec538;
  #L3ec68e.  v11:= v9 @kind wide;
  #L3ec690.  v7:= 0I;
  #L3ec692.  v8:= 0I;
  #L3ec694.  v14:= v1.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec698.  v14:= v14.`l.f0.i.i.j` @type ^`l.f0.i.i$c` @kind object;
  #L3ec69c.  call `k`(v14) @signature `Ll/f0/i/i$c;.k:()V` @kind virtual;
  #L3ec6a2.  @monitorexit v6
  #L3ec6a4.  if v7 == 0 then goto L3ec6b6;
  #L3ec6a8.  if v8 == 0 then goto L3ec6b6;
  #L3ec6ac.  call `a`(v8, v7) @signature `Ll/f0/i/c$a;.a:(Ll/r;)V` @kind interface;
  #L3ec6b2.  goto L3ec538;
  #L3ec6b6.  v2:= lcmp(v11, v9);
  #L3ec6ba.  if v2 == 0 then goto L3ec6c6;
  #L3ec6be.  call `e`(v1, v11) @signature `Ll/f0/i/i$b;.e:(J)V` @kind direct;
  #L3ec6c4.  return v11 @kind wide;
  #L3ec6c6.  if v0 != 0 then goto L3ec6cc;
  #L3ec6ca.  return v9 @kind wide;
  #L3ec6cc.  v2:= new `l.f0.i.n`;
  #L3ec6d0.  call `<init>`(v2, v0) @signature `Ll/f0/i/n;.<init>:(Ll/f0/i/b;)V` @kind direct;
  #L3ec6d6.  throw v2;
  #L3ec6d8.  v0:= new `java.io.IOException`;
  #L3ec6dc.  v2:= "stream closed" @kind object;
  #L3ec6e0.  call `<init>`(v0, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ec6e6.  throw v0;
  #L3ec6e8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec6ea.  v2:= v1.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec6ee.  v2:= v2.`l.f0.i.i.j` @type ^`l.f0.i.i$c` @kind object;
  #L3ec6f2.  call `k`(v2) @signature `Ll/f0/i/i$c;.k:()V` @kind virtual;
  #L3ec6f8.  throw v0;
  #L3ec6fa.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec6fc.  @monitorexit v6
  #L3ec6fe.  throw v0;
  #L3ec700.  v0:= new `java.lang.IllegalArgumentException`;
  #L3ec704.  v4:= new `java.lang.StringBuilder`;
  #L3ec708.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ec70e.  v5:= "byteCount < 0: " @kind object;
  #L3ec712.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec718.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec71e.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ec724.  v2:= temp @kind object;
  #L3ec726.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ec72c.  throw v0;
  catch `java.lang.Throwable` @[L3ec53e..L3ec54c] goto L3ec6fa;
  catch `java.lang.Throwable` @[L3ec54c..L3ec67a] goto L3ec6e8;
  catch `java.lang.Throwable` @[L3ec67a..L3ec6a4] goto L3ec6fa;
  catch `java.lang.Throwable` @[L3ec6d8..L3ec6e8] goto L3ec6e8;
  catch `java.lang.Throwable` @[L3ec6ea..L3ec6fe] goto L3ec6fa;
}
procedure `void` `a`(`l.f0.i.i$b` v11 @kind this, `m.e` v12 @kind object, `long` v13 ) @signature `Ll/f0/i/i$b;.a:(Lm/e;J)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3ec8cc.  v0:= 0L;
  #L3ec8d0.  v2:= lcmp(v13, v0);
  #L3ec8d4.  if v2 <= 0 then goto L3ec99e;
  #L3ec8d8.  v2:= v11.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec8dc.  @monitorenter v2
  #L3ec8de.  v3:= v11.`l.f0.i.i$b.f` @type ^`boolean` @kind boolean;
  #L3ec8e2.  v4:= v11.`l.f0.i.i$b.c` @type ^`m.c` @kind object;
  #L3ec8e6.  call temp:= `v`(v4) @signature `Lm/c;.v:()J` @kind virtual;
  #L3ec8ec.  v4:= temp @kind wide;
  #L3ec8ee.  v4:= v4 + v13 @kind long;
  #L3ec8f0.  v6:= v11.`l.f0.i.i$b.d` @type ^`long` @kind wide;
  #L3ec8f4.  v8:= 1I;
  #L3ec8f6.  v9:= 0I;
  #L3ec8f8.  v10:= lcmp(v4, v6);
  #L3ec8fc.  if v10 <= 0 then goto L3ec904;
  #L3ec900.  v4:= 1I;
  #L3ec902.  goto L3ec906;
  #L3ec904.  v4:= 0I;
  #L3ec906.  @monitorexit v2
  #L3ec908.  if v4 == 0 then goto L3ec922;
  #L3ec90c.  call `skip`(v12, v13) @signature `Lm/e;.skip:(J)V` @kind interface;
  #L3ec912.  v12:= v11.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec916.  v13:= `@@l.f0.i.b.f` @type ^`l.f0.i.b` @kind object;
  #L3ec91a.  call `b`(v12, v13) @signature `Ll/f0/i/i;.b:(Ll/f0/i/b;)V` @kind virtual;
  #L3ec920.  return @kind void;
  #L3ec922.  if v3 == 0 then goto L3ec92e;
  #L3ec926.  call `skip`(v12, v13) @signature `Lm/e;.skip:(J)V` @kind interface;
  #L3ec92c.  return @kind void;
  #L3ec92e.  v2:= v11.`l.f0.i.i$b.b` @type ^`m.c` @kind object;
  #L3ec932.  call temp:= `a`(v12, v2, v13) @signature `Lm/s;.a:(Lm/c;J)J` @kind interface;
  #L3ec938.  v2:= temp @kind wide;
  #L3ec93a.  v4:= -1L;
  #L3ec93e.  v6:= lcmp(v2, v4);
  #L3ec942.  if v6 == 0 then goto L3ec98c;
  #L3ec946.  v13:= v13 - v2 @kind long;
  #L3ec948.  v2:= v11.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec94c.  @monitorenter v2
  #L3ec94e.  v3:= v11.`l.f0.i.i$b.c` @type ^`m.c` @kind object;
  #L3ec952.  call temp:= `v`(v3) @signature `Lm/c;.v:()J` @kind virtual;
  #L3ec958.  v3:= temp @kind wide;
  #L3ec95a.  v5:= lcmp(v3, v0);
  #L3ec95e.  if v5 != 0 then goto L3ec964;
  #L3ec962.  goto L3ec966;
  #L3ec964.  v8:= 0I;
  #L3ec966.  v0:= v11.`l.f0.i.i$b.c` @type ^`m.c` @kind object;
  #L3ec96a.  v1:= v11.`l.f0.i.i$b.b` @type ^`m.c` @kind object;
  #L3ec96e.  call temp:= `a`(v0, v1) @signature `Lm/c;.a:(Lm/s;)J` @kind virtual;
  #L3ec974.  if v8 == 0 then goto L3ec982;
  #L3ec978.  v0:= v11.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec97c.  call `notifyAll`(v0) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L3ec982.  @monitorexit v2
  #L3ec984.  goto L3ec8cc;
  #L3ec986.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec988.  @monitorexit v2
  #L3ec98a.  throw v12;
  #L3ec98c.  v12:= new `java.io.EOFException`;
  #L3ec990.  call `<init>`(v12) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L3ec996.  throw v12;
  #L3ec998.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec99a.  @monitorexit v2
  #L3ec99c.  throw v12;
  #L3ec99e.  return @kind void;
  catch `java.lang.Throwable` @[L3ec8de..L3ec908] goto L3ec998;
  catch `java.lang.Throwable` @[L3ec94e..L3ec98a] goto L3ec986;
  catch `java.lang.Throwable` @[L3ec99a..L3ec99c] goto L3ec998;
}
procedure `void` `close`(`l.f0.i.i$b` v7 @kind this) @signature `Ll/f0/i/i$b;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ec7c8.  v0:= v7.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec7cc.  @monitorenter v0
  #L3ec7ce.  v1:= 1I;
  #L3ec7d0.  v7.`l.f0.i.i$b.e` @type ^`boolean` := v1 @kind boolean;
  #L3ec7d4.  v1:= v7.`l.f0.i.i$b.c` @type ^`m.c` @kind object;
  #L3ec7d8.  call temp:= `v`(v1) @signature `Lm/c;.v:()J` @kind virtual;
  #L3ec7de.  v1:= temp @kind wide;
  #L3ec7e0.  v3:= v7.`l.f0.i.i$b.c` @type ^`m.c` @kind object;
  #L3ec7e4.  call `q`(v3) @signature `Lm/c;.q:()V` @kind virtual;
  #L3ec7ea.  v3:= v7.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec7ee.  call temp:= `a`(v3) @signature `Ll/f0/i/i;.a:(Ll/f0/i/i;)Ljava/util/Deque;` @kind static;
  #L3ec7f4.  v3:= temp @kind object;
  #L3ec7f6.  call temp:= `isEmpty`(v3) @signature `Ljava/util/Deque;.isEmpty:()Z` @kind interface;
  #L3ec7fc.  v3:= temp;
  #L3ec7fe.  v4:= 0I;
  #L3ec800.  if v3 != 0 then goto L3ec84a;
  #L3ec804.  v3:= v7.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec808.  call temp:= `b`(v3) @signature `Ll/f0/i/i;.b:(Ll/f0/i/i;)Ll/f0/i/c$a;` @kind static;
  #L3ec80e.  v3:= temp @kind object;
  #L3ec810.  if v3 == 0 then goto L3ec84a;
  #L3ec814.  v4:= new `java.util.ArrayList`;
  #L3ec818.  v3:= v7.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec81c.  call temp:= `a`(v3) @signature `Ll/f0/i/i;.a:(Ll/f0/i/i;)Ljava/util/Deque;` @kind static;
  #L3ec822.  v3:= temp @kind object;
  #L3ec824.  call `<init>`(v4, v3) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3ec82a.  v3:= v7.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec82e.  call temp:= `a`(v3) @signature `Ll/f0/i/i;.a:(Ll/f0/i/i;)Ljava/util/Deque;` @kind static;
  #L3ec834.  v3:= temp @kind object;
  #L3ec836.  call `clear`(v3) @signature `Ljava/util/Deque;.clear:()V` @kind interface;
  #L3ec83c.  v3:= v7.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec840.  call temp:= `b`(v3) @signature `Ll/f0/i/i;.b:(Ll/f0/i/i;)Ll/f0/i/c$a;` @kind static;
  #L3ec846.  v3:= temp @kind object;
  #L3ec848.  goto L3ec84c;
  #L3ec84a.  v3:= v4 @kind object;
  #L3ec84c.  v5:= v7.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec850.  call `notifyAll`(v5) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L3ec856.  @monitorexit v0
  #L3ec858.  v5:= 0L;
  #L3ec85c.  v0:= lcmp(v1, v5);
  #L3ec860.  if v0 <= 0 then goto L3ec86a;
  #L3ec864.  call `e`(v7, v1) @signature `Ll/f0/i/i$b;.e:(J)V` @kind direct;
  #L3ec86a.  v0:= v7.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec86e.  call `a`(v0) @signature `Ll/f0/i/i;.a:()V` @kind virtual;
  #L3ec874.  if v3 == 0 then goto L3ec8a0;
  #L3ec878.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3ec87e.  v0:= temp @kind object;
  #L3ec880.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3ec886.  v1:= temp;
  #L3ec888.  if v1 == 0 then goto L3ec8a0;
  #L3ec88c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3ec892.  v1:= temp @kind object;
  #L3ec894.  v1:= (`l.r`) v1 @kind object;
  #L3ec898.  call `a`(v3, v1) @signature `Ll/f0/i/c$a;.a:(Ll/r;)V` @kind interface;
  #L3ec89e.  goto L3ec880;
  #L3ec8a0.  return @kind void;
  #L3ec8a2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec8a4.  @monitorexit v0
  #L3ec8a6.  throw v1;
  catch `java.lang.Throwable` @[L3ec7d0..L3ec858] goto L3ec8a2;
  catch `java.lang.Throwable` @[L3ec8a4..L3ec8a6] goto L3ec8a2;
}
procedure `m.t` `d`(`l.f0.i.i$b` v1 @kind this) @signature `Ll/f0/i/i$b;.d:()Lm/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ec770.  v0:= v1.`l.f0.i.i$b.g` @type ^`l.f0.i.i` @kind object;
  #L3ec774.  v0:= v0.`l.f0.i.i.j` @type ^`l.f0.i.i$c` @kind object;
  #L3ec778.  return v0 @kind object;
}
