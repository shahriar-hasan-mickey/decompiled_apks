record `l.f0.i.g$j` @kind class @AccessFlag  extends `l.f0.b` @kind class, `l.f0.i.h$b` @kind interface {
  `l.f0.i.h` `l.f0.i.g$j.c` @AccessFlag FINAL;
  `l.f0.i.g` `l.f0.i.g$j.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`l.f0.i.g$j` v2 @kind this, `l.f0.i.g` v3 @kind object, `l.f0.i.h` v4 @kind object) @signature `Ll/f0/i/g$j;.<init>:(Ll/f0/i/g;Ll/f0/i/h;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3ea41c.  v2.`l.f0.i.g$j.d` @type ^`l.f0.i.g` := v3 @kind object;
  #L3ea420.  v0:= 1I;
  #L3ea422.  v0:= new `java.lang.Object`[v0];
  #L3ea426.  v3:= v3.`l.f0.i.g.e` @type ^`java.lang.String` @kind object;
  #L3ea42a.  v1:= 0I;
  #L3ea42c.  v0[v1]:= v3 @kind object;
  #L3ea430.  v3:= "OkHttp %s" @kind object;
  #L3ea434.  call `<init>`(v2, v3, v0) @signature `Ll/f0/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3ea43a.  v2.`l.f0.i.g$j.c` @type ^`l.f0.i.h` := v4 @kind object;
  #L3ea43e.  return @kind void;
}
procedure `void` `a`(`l.f0.i.g$j` v6 @kind this, `l.f0.i.m` v7 @kind object) @signature `Ll/f0/i/g$j;.a:(Ll/f0/i/m;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ea464.  v0:= v6.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea468.  call temp:= `b`(v0) @signature `Ll/f0/i/g;.b:(Ll/f0/i/g;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L3ea46e.  v0:= temp @kind object;
  #L3ea470.  v1:= new `l.f0.i.g$j$c`;
  #L3ea474.  v2:= "OkHttp %s ACK Settings" @kind object;
  #L3ea478.  v3:= 1I;
  #L3ea47a.  v3:= new `java.lang.Object`[v3];
  #L3ea47e.  v4:= 0I;
  #L3ea480.  v5:= v6.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea484.  v5:= v5.`l.f0.i.g.e` @type ^`java.lang.String` @kind object;
  #L3ea488.  v3[v4]:= v5 @kind object;
  #L3ea48c.  call `<init>`(v1, v6, v2, v3, v7) @signature `Ll/f0/i/g$j$c;.<init>:(Ll/f0/i/g$j;Ljava/lang/String;[Ljava/lang/Object;Ll/f0/i/m;)V` @kind direct;
  #L3ea492.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/ScheduledExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L3ea498.  return @kind void;
  catch `java.util.concurrent.RejectedExecutionException` @[L3ea464..L3ea498] goto L3ea498;
}
procedure `void` `a`(`l.f0.i.g$j` v0 @kind this) @signature `Ll/f0/i/g$j;.a:()V` @AccessFlag PUBLIC {
    temp;

  #L3ea450.  return @kind void;
}
procedure `void` `a`(`l.f0.i.g$j` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `boolean` v4 ) @signature `Ll/f0/i/g$j;.a:(IIIZ)V` @AccessFlag PUBLIC {
    temp;

  #L3ea84c.  return @kind void;
}
procedure `void` `a`(`l.f0.i.g$j` v0 @kind this, `int` v1 , `int` v2 , `java.util.List` v3 @kind object) @signature `Ll/f0/i/g$j;.a:(IILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L3ea860.  v1:= v0.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea864.  call `a`(v1, v2, v3) @signature `Ll/f0/i/g;.a:(ILjava/util/List;)V` @kind virtual;
  #L3ea86a.  return @kind void;
}
procedure `void` `a`(`l.f0.i.g$j` v3 @kind this, `int` v4 , `long` v5 ) @signature `Ll/f0/i/g$j;.a:(IJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3eaa14.  v0:= v3.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3eaa18.  if v4 != 0 then goto L3eaa40;
  #L3eaa1c.  @monitorenter v0
  #L3eaa1e.  v4:= v3.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3eaa22.  v1:= v4.`l.f0.i.g.n` @type ^`long` @kind wide;
  #L3eaa26.  v1:= v1 + v5 @kind long;
  #L3eaa28.  v4.`l.f0.i.g.n` @type ^`long` := v1 @kind wide;
  #L3eaa2c.  v4:= v3.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3eaa30.  call `notifyAll`(v4) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L3eaa36.  @monitorexit v0
  #L3eaa38.  goto L3eaa5e;
  #L3eaa3a.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eaa3c.  @monitorexit v0
  #L3eaa3e.  throw v4;
  #L3eaa40.  call temp:= `a`(v0, v4) @signature `Ll/f0/i/g;.a:(I)Ll/f0/i/i;` @kind virtual;
  #L3eaa46.  v4:= temp @kind object;
  #L3eaa48.  if v4 == 0 then goto L3eaa5e;
  #L3eaa4c.  @monitorenter v4
  #L3eaa4e.  call `a`(v4, v5) @signature `Ll/f0/i/i;.a:(J)V` @kind virtual;
  #L3eaa54.  @monitorexit v4
  #L3eaa56.  goto L3eaa5e;
  #L3eaa58.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eaa5a.  @monitorexit v4
  #L3eaa5c.  throw v5;
  #L3eaa5e.  return @kind void;
  catch `java.lang.Throwable` @[L3eaa1e..L3eaa3e] goto L3eaa3a;
  catch `java.lang.Throwable` @[L3eaa4e..L3eaa5c] goto L3eaa58;
}
procedure `void` `a`(`l.f0.i.g$j` v1 @kind this, `int` v2 , `l.f0.i.b` v3 @kind object) @signature `Ll/f0/i/g$j;.a:(ILl/f0/i/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ea87c.  v0:= v1.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea880.  call temp:= `b`(v0, v2) @signature `Ll/f0/i/g;.b:(I)Z` @kind virtual;
  #L3ea886.  v0:= temp;
  #L3ea888.  if v0 == 0 then goto L3ea898;
  #L3ea88c.  v0:= v1.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea890.  call `a`(v0, v2, v3) @signature `Ll/f0/i/g;.a:(ILl/f0/i/b;)V` @kind virtual;
  #L3ea896.  return @kind void;
  #L3ea898.  v0:= v1.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea89c.  call temp:= `c`(v0, v2) @signature `Ll/f0/i/g;.c:(I)Ll/f0/i/i;` @kind virtual;
  #L3ea8a2.  v2:= temp @kind object;
  #L3ea8a4.  if v2 == 0 then goto L3ea8ae;
  #L3ea8a8.  call `c`(v2, v3) @signature `Ll/f0/i/i;.c:(Ll/f0/i/b;)V` @kind virtual;
  #L3ea8ae.  return @kind void;
}
procedure `void` `a`(`l.f0.i.g$j` v3 @kind this, `int` v4 , `l.f0.i.b` v5 @kind object, `m.f` v6 @kind object) @signature `Ll/f0/i/g$j;.a:(ILl/f0/i/b;Lm/f;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ea5f4.  call temp:= `l`(v6) @signature `Lm/f;.l:()I` @kind virtual;
  #L3ea5fa.  v5:= v3.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea5fe.  @monitorenter v5
  #L3ea600.  v6:= v3.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea604.  v6:= v6.`l.f0.i.g.d` @type ^`java.util.Map` @kind object;
  #L3ea608.  call temp:= `values`(v6) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L3ea60e.  v6:= temp @kind object;
  #L3ea610.  v0:= v3.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea614.  v0:= v0.`l.f0.i.g.d` @type ^`java.util.Map` @kind object;
  #L3ea618.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L3ea61e.  v0:= temp;
  #L3ea620.  v0:= new `l.f0.i.i`[v0];
  #L3ea624.  call temp:= `toArray`(v6, v0) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L3ea62a.  v6:= temp @kind object;
  #L3ea62c.  v6:= (`l.f0.i.i`[]) v6 @kind object;
  #L3ea630.  v0:= v3.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea634.  v1:= 1I;
  #L3ea636.  v0.`l.f0.i.g.h` @type ^`boolean` := v1 @kind boolean;
  #L3ea63a.  @monitorexit v5
  #L3ea63c.  v5:= length @variable v6;
  #L3ea63e.  v0:= 0I;
  #L3ea640.  if v0 >= v5 then goto L3ea682;
  #L3ea644.  v1:= v6[v0] @kind object;
  #L3ea648.  call temp:= `c`(v1) @signature `Ll/f0/i/i;.c:()I` @kind virtual;
  #L3ea64e.  v2:= temp;
  #L3ea650.  if v2 <= v4 then goto L3ea67c;
  #L3ea654.  call temp:= `f`(v1) @signature `Ll/f0/i/i;.f:()Z` @kind virtual;
  #L3ea65a.  v2:= temp;
  #L3ea65c.  if v2 == 0 then goto L3ea67c;
  #L3ea660.  v2:= `@@l.f0.i.b.g` @type ^`l.f0.i.b` @kind object;
  #L3ea664.  call `c`(v1, v2) @signature `Ll/f0/i/i;.c:(Ll/f0/i/b;)V` @kind virtual;
  #L3ea66a.  v2:= v3.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea66e.  call temp:= `c`(v1) @signature `Ll/f0/i/i;.c:()I` @kind virtual;
  #L3ea674.  v1:= temp;
  #L3ea676.  call temp:= `c`(v2, v1) @signature `Ll/f0/i/g;.c:(I)Ll/f0/i/i;` @kind virtual;
  #L3ea67c.  v0:= v0 + 1;
  #L3ea680.  goto L3ea640;
  #L3ea682.  return @kind void;
  #L3ea684.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ea686.  @monitorexit v5
  #L3ea688.  throw v4;
  catch `java.lang.Throwable` @[L3ea600..L3ea63c] goto L3ea684;
  catch `java.lang.Throwable` @[L3ea686..L3ea688] goto L3ea684;
}
procedure `void` `a`(`l.f0.i.g$j` v3 @kind this, `boolean` v4 , `int` v5 , `int` v6 ) @signature `Ll/f0/i/g$j;.a:(ZII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ea7d4.  if v4 == 0 then goto L3ea7fe;
  #L3ea7d8.  v4:= v3.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea7dc.  @monitorenter v4
  #L3ea7de.  v5:= v3.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea7e2.  v6:= 0I;
  #L3ea7e4.  call temp:= `a`(v5, v6) @signature `Ll/f0/i/g;.a:(Ll/f0/i/g;Z)Z` @kind static;
  #L3ea7ea.  v5:= v3.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea7ee.  call `notifyAll`(v5) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L3ea7f4.  @monitorexit v4
  #L3ea7f6.  goto L3ea820;
  #L3ea7f8.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ea7fa.  @monitorexit v4
  #L3ea7fc.  throw v5;
  #L3ea7fe.  v4:= v3.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea802.  call temp:= `b`(v4) @signature `Ll/f0/i/g;.b:(Ll/f0/i/g;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L3ea808.  v4:= temp @kind object;
  #L3ea80a.  v0:= new `l.f0.i.g$i`;
  #L3ea80e.  v1:= v3.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea812.  v2:= 1I;
  #L3ea814.  call `<init>`(v0, v1, v2, v5, v6) @signature `Ll/f0/i/g$i;.<init>:(Ll/f0/i/g;ZII)V` @kind direct;
  #L3ea81a.  call `execute`(v4, v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L3ea820.  return @kind void;
  catch `java.lang.Throwable` @[L3ea7de..L3ea7fc] goto L3ea7f8;
  catch `java.util.concurrent.RejectedExecutionException` @[L3ea7fe..L3ea820] goto L3ea820;
}
procedure `void` `a`(`l.f0.i.g$j` v9 @kind this, `boolean` v10 , `int` v11 , `int` v12 , `java.util.List` v13 @kind object) @signature `Ll/f0/i/g$j;.a:(ZIILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3ea6b0.  v12:= v9.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea6b4.  call temp:= `b`(v12, v11) @signature `Ll/f0/i/g;.b:(I)Z` @kind virtual;
  #L3ea6ba.  v12:= temp;
  #L3ea6bc.  if v12 == 0 then goto L3ea6cc;
  #L3ea6c0.  v12:= v9.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea6c4.  call `a`(v12, v11, v13, v10) @signature `Ll/f0/i/g;.a:(ILjava/util/List;Z)V` @kind virtual;
  #L3ea6ca.  return @kind void;
  #L3ea6cc.  v12:= v9.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea6d0.  @monitorenter v12
  #L3ea6d2.  v0:= v9.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea6d6.  call temp:= `a`(v0, v11) @signature `Ll/f0/i/g;.a:(I)Ll/f0/i/i;` @kind virtual;
  #L3ea6dc.  v0:= temp @kind object;
  #L3ea6de.  if v0 != 0 then goto L3ea796;
  #L3ea6e2.  v0:= v9.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea6e6.  v0:= v0.`l.f0.i.g.h` @type ^`boolean` @kind boolean;
  #L3ea6ea.  if v0 == 0 then goto L3ea6f2;
  #L3ea6ee.  @monitorexit v12
  #L3ea6f0.  return @kind void;
  #L3ea6f2.  v0:= v9.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea6f6.  v0:= v0.`l.f0.i.g.f` @type ^`int`;
  #L3ea6fa.  if v11 > v0 then goto L3ea702;
  #L3ea6fe.  @monitorexit v12
  #L3ea700.  return @kind void;
  #L3ea702.  v0:= v11 %% 2;
  #L3ea706.  v1:= v9.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea70a.  v1:= v1.`l.f0.i.g.g` @type ^`int`;
  #L3ea70e.  v2:= 2I;
  #L3ea710.  v1:= v1 %% v2 @kind int;
  #L3ea712.  if v0 != v1 then goto L3ea71a;
  #L3ea716.  @monitorexit v12
  #L3ea718.  return @kind void;
  #L3ea71a.  call temp:= `b`(v13) @signature `Ll/f0/c;.b:(Ljava/util/List;)Ll/r;` @kind static;
  #L3ea720.  v8:= temp @kind object;
  #L3ea722.  v13:= new `l.f0.i.i`;
  #L3ea726.  v5:= v9.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea72a.  v6:= 0I;
  #L3ea72c.  v3:= v13 @kind object;
  #L3ea72e.  v4:= v11;
  #L3ea730.  v7:= v10;
  #L3ea732.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Ll/f0/i/i;.<init>:(ILl/f0/i/g;ZZLl/r;)V` @kind direct;
  #L3ea738.  v10:= v9.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea73c.  v10.`l.f0.i.g.f` @type ^`int` := v11;
  #L3ea740.  v10:= v9.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea744.  v10:= v10.`l.f0.i.g.d` @type ^`java.util.Map` @kind object;
  #L3ea748.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3ea74e.  v0:= temp @kind object;
  #L3ea750.  call temp:= `put`(v10, v0, v13) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3ea756.  call temp:= `n`() @signature `Ll/f0/i/g;.n:()Ljava/util/concurrent/ExecutorService;` @kind static;
  #L3ea75c.  v10:= temp @kind object;
  #L3ea75e.  v0:= new `l.f0.i.g$j$a`;
  #L3ea762.  v1:= "OkHttp %s stream %d" @kind object;
  #L3ea766.  v2:= new `java.lang.Object`[v2];
  #L3ea76a.  v3:= 0I;
  #L3ea76c.  v4:= v9.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea770.  v4:= v4.`l.f0.i.g.e` @type ^`java.lang.String` @kind object;
  #L3ea774.  v2[v3]:= v4 @kind object;
  #L3ea778.  v3:= 1I;
  #L3ea77a.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3ea780.  v11:= temp @kind object;
  #L3ea782.  v2[v3]:= v11 @kind object;
  #L3ea786.  call `<init>`(v0, v9, v1, v2, v13) @signature `Ll/f0/i/g$j$a;.<init>:(Ll/f0/i/g$j;Ljava/lang/String;[Ljava/lang/Object;Ll/f0/i/i;)V` @kind direct;
  #L3ea78c.  call `execute`(v10, v0) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L3ea792.  @monitorexit v12
  #L3ea794.  return @kind void;
  #L3ea796.  @monitorexit v12
  #L3ea798.  call `a`(v0, v13) @signature `Ll/f0/i/i;.a:(Ljava/util/List;)V` @kind virtual;
  #L3ea79e.  if v10 == 0 then goto L3ea7a8;
  #L3ea7a2.  call `i`(v0) @signature `Ll/f0/i/i;.i:()V` @kind virtual;
  #L3ea7a8.  return @kind void;
  #L3ea7aa.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ea7ac.  @monitorexit v12
  #L3ea7ae.  throw v10;
  catch `java.lang.Throwable` @[L3ea6d2..L3ea798] goto L3ea7aa;
  catch `java.lang.Throwable` @[L3ea7ac..L3ea7ae] goto L3ea7aa;
}
procedure `void` `a`(`l.f0.i.g$j` v2 @kind this, `boolean` v3 , `int` v4 , `m.e` v5 @kind object, `int` v6 ) @signature `Ll/f0/i/g$j;.a:(ZILm/e;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ea4bc.  v0:= v2.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea4c0.  call temp:= `b`(v0, v4) @signature `Ll/f0/i/g;.b:(I)Z` @kind virtual;
  #L3ea4c6.  v0:= temp;
  #L3ea4c8.  if v0 == 0 then goto L3ea4d8;
  #L3ea4cc.  v0:= v2.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea4d0.  call `a`(v0, v4, v5, v6, v3) @signature `Ll/f0/i/g;.a:(ILm/e;IZ)V` @kind virtual;
  #L3ea4d6.  return @kind void;
  #L3ea4d8.  v0:= v2.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea4dc.  call temp:= `a`(v0, v4) @signature `Ll/f0/i/g;.a:(I)Ll/f0/i/i;` @kind virtual;
  #L3ea4e2.  v0:= temp @kind object;
  #L3ea4e4.  if v0 != 0 then goto L3ea50a;
  #L3ea4e8.  v3:= v2.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea4ec.  v0:= `@@l.f0.i.b.d` @type ^`l.f0.i.b` @kind object;
  #L3ea4f0.  call `c`(v3, v4, v0) @signature `Ll/f0/i/g;.c:(ILl/f0/i/b;)V` @kind virtual;
  #L3ea4f6.  v3:= v2.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea4fa.  v0:= (`long`) v6 @kind i2l;
  #L3ea4fc.  call `f`(v3, v0) @signature `Ll/f0/i/g;.f:(J)V` @kind virtual;
  #L3ea502.  call `skip`(v5, v0) @signature `Lm/e;.skip:(J)V` @kind interface;
  #L3ea508.  return @kind void;
  #L3ea50a.  call `a`(v0, v5, v6) @signature `Ll/f0/i/i;.a:(Lm/e;I)V` @kind virtual;
  #L3ea510.  if v3 == 0 then goto L3ea51a;
  #L3ea514.  call `i`(v0) @signature `Ll/f0/i/i;.i:()V` @kind virtual;
  #L3ea51a.  return @kind void;
}
procedure `void` `a`(`l.f0.i.g$j` v10 @kind this, `boolean` v11 , `l.f0.i.m` v12 @kind object) @signature `Ll/f0/i/g$j;.a:(ZLl/f0/i/m;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3ea8c0.  v0:= v10.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea8c4.  @monitorenter v0
  #L3ea8c6.  v1:= v10.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea8ca.  v1:= v1.`l.f0.i.g.p` @type ^`l.f0.i.m` @kind object;
  #L3ea8ce.  call temp:= `c`(v1) @signature `Ll/f0/i/m;.c:()I` @kind virtual;
  #L3ea8d4.  v1:= temp;
  #L3ea8d6.  if v11 == 0 then goto L3ea8e8;
  #L3ea8da.  v11:= v10.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea8de.  v11:= v11.`l.f0.i.g.p` @type ^`l.f0.i.m` @kind object;
  #L3ea8e2.  call `a`(v11) @signature `Ll/f0/i/m;.a:()V` @kind virtual;
  #L3ea8e8.  v11:= v10.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea8ec.  v11:= v11.`l.f0.i.g.p` @type ^`l.f0.i.m` @kind object;
  #L3ea8f0.  call `a`(v11, v12) @signature `Ll/f0/i/m;.a:(Ll/f0/i/m;)V` @kind virtual;
  #L3ea8f6.  call `a`(v10, v12) @signature `Ll/f0/i/g$j;.a:(Ll/f0/i/m;)V` @kind direct;
  #L3ea8fc.  v11:= v10.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea900.  v11:= v11.`l.f0.i.g.p` @type ^`l.f0.i.m` @kind object;
  #L3ea904.  call temp:= `c`(v11) @signature `Ll/f0/i/m;.c:()I` @kind virtual;
  #L3ea90a.  v11:= temp;
  #L3ea90c.  v12:= -1I;
  #L3ea90e.  v2:= 0L;
  #L3ea912.  v4:= 1I;
  #L3ea914.  v5:= 0I;
  #L3ea916.  if v11 == v12 then goto L3ea97e;
  #L3ea91a.  if v11 == v1 then goto L3ea97e;
  #L3ea91e.  v11:= v11 - v1 @kind int;
  #L3ea920.  v11:= (`long`) v11 @kind i2l;
  #L3ea922.  v1:= v10.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea926.  v1:= v1.`l.f0.i.g.q` @type ^`boolean` @kind boolean;
  #L3ea92a.  if v1 != 0 then goto L3ea936;
  #L3ea92e.  v1:= v10.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea932.  v1.`l.f0.i.g.q` @type ^`boolean` := v4 @kind boolean;
  #L3ea936.  v1:= v10.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea93a.  v1:= v1.`l.f0.i.g.d` @type ^`java.util.Map` @kind object;
  #L3ea93e.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L3ea944.  v1:= temp;
  #L3ea946.  if v1 != 0 then goto L3ea980;
  #L3ea94a.  v1:= v10.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea94e.  v1:= v1.`l.f0.i.g.d` @type ^`java.util.Map` @kind object;
  #L3ea952.  call temp:= `values`(v1) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L3ea958.  v1:= temp @kind object;
  #L3ea95a.  v5:= v10.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea95e.  v5:= v5.`l.f0.i.g.d` @type ^`java.util.Map` @kind object;
  #L3ea962.  call temp:= `size`(v5) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L3ea968.  v5:= temp;
  #L3ea96a.  v5:= new `l.f0.i.i`[v5];
  #L3ea96e.  call temp:= `toArray`(v1, v5) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L3ea974.  v1:= temp @kind object;
  #L3ea976.  v5:= v1 @kind object;
  #L3ea978.  v5:= (`l.f0.i.i`[]) v5 @kind object;
  #L3ea97c.  goto L3ea980;
  #L3ea97e.  v11:= v2 @kind wide;
  #L3ea980.  call temp:= `n`() @signature `Ll/f0/i/g;.n:()Ljava/util/concurrent/ExecutorService;` @kind static;
  #L3ea986.  v1:= temp @kind object;
  #L3ea988.  v6:= new `l.f0.i.g$j$b`;
  #L3ea98c.  v7:= "OkHttp %s settings" @kind object;
  #L3ea990.  v4:= new `java.lang.Object`[v4];
  #L3ea994.  v8:= v10.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea998.  v8:= v8.`l.f0.i.g.e` @type ^`java.lang.String` @kind object;
  #L3ea99c.  v9:= 0I;
  #L3ea99e.  v4[v9]:= v8 @kind object;
  #L3ea9a2.  call `<init>`(v6, v10, v7, v4) @signature `Ll/f0/i/g$j$b;.<init>:(Ll/f0/i/g$j;Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L3ea9a8.  call `execute`(v1, v6) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L3ea9ae.  @monitorexit v0
  #L3ea9b0.  if v5 == 0 then goto L3ea9dc;
  #L3ea9b4.  v0:= lcmp(v11, v2);
  #L3ea9b8.  if v0 == 0 then goto L3ea9dc;
  #L3ea9bc.  v0:= length @variable v5;
  #L3ea9be.  if v9 >= v0 then goto L3ea9dc;
  #L3ea9c2.  v1:= v5[v9] @kind object;
  #L3ea9c6.  @monitorenter v1
  #L3ea9c8.  call `a`(v1, v11) @signature `Ll/f0/i/i;.a:(J)V` @kind virtual;
  #L3ea9ce.  @monitorexit v1
  #L3ea9d0.  v9:= v9 + 1;
  #L3ea9d4.  goto L3ea9be;
  #L3ea9d6.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ea9d8.  @monitorexit v1
  #L3ea9da.  throw v11;
  #L3ea9dc.  return @kind void;
  #L3ea9de.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ea9e0.  @monitorexit v0
  #L3ea9e2.  throw v11;
  catch `java.lang.Throwable` @[L3ea8c6..L3ea9b0] goto L3ea9de;
  catch `java.lang.Throwable` @[L3ea9c8..L3ea9da] goto L3ea9d6;
  catch `java.lang.Throwable` @[L3ea9e0..L3ea9e2] goto L3ea9de;
}
procedure `void` `b`(`l.f0.i.g$j` v4 @kind this) @signature `Ll/f0/i/g$j;.b:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ea52c.  v0:= `@@l.f0.i.b.e` @type ^`l.f0.i.b` @kind object;
  #L3ea530.  v1:= v4.`l.f0.i.g$j.c` @type ^`l.f0.i.h` @kind object;
  #L3ea534.  call `a`(v1, v4) @signature `Ll/f0/i/h;.a:(Ll/f0/i/h$b;)V` @kind virtual;
  #L3ea53a.  v1:= v4.`l.f0.i.g$j.c` @type ^`l.f0.i.h` @kind object;
  #L3ea53e.  v2:= 0I;
  #L3ea540.  call temp:= `a`(v1, v2, v4) @signature `Ll/f0/i/h;.a:(ZLl/f0/i/h$b;)Z` @kind virtual;
  #L3ea546.  v1:= temp;
  #L3ea548.  if v1 == 0 then goto L3ea54e;
  #L3ea54c.  goto L3ea53a;
  #L3ea54e.  v1:= `@@l.f0.i.b.c` @type ^`l.f0.i.b` @kind object;
  #L3ea552.  v0:= `@@l.f0.i.b.h` @type ^`l.f0.i.b` @kind object;
  #L3ea556.  v2:= v4.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea55a.  goto L3ea570;
  #L3ea55c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ea55e.  v1:= v0 @kind object;
  #L3ea560.  goto L3ea584;
  #L3ea562.  v1:= v0 @kind object;
  #L3ea564.  v1:= `@@l.f0.i.b.d` @type ^`l.f0.i.b` @kind object;
  #L3ea568.  v0:= `@@l.f0.i.b.d` @type ^`l.f0.i.b` @kind object;
  #L3ea56c.  v2:= v4.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea570.  call `a`(v2, v1, v0) @signature `Ll/f0/i/g;.a:(Ll/f0/i/b;Ll/f0/i/b;)V` @kind virtual;
  #L3ea576.  v0:= v4.`l.f0.i.g$j.c` @type ^`l.f0.i.h` @kind object;
  #L3ea57a.  call `a`(v0) @signature `Ll/f0/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L3ea580.  return @kind void;
  #L3ea582.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ea584.  v3:= v4.`l.f0.i.g$j.d` @type ^`l.f0.i.g` @kind object;
  #L3ea588.  call `a`(v3, v1, v0) @signature `Ll/f0/i/g;.a:(Ll/f0/i/b;Ll/f0/i/b;)V` @kind virtual;
  #L3ea58e.  v0:= v4.`l.f0.i.g$j.c` @type ^`l.f0.i.h` @kind object;
  #L3ea592.  call `a`(v0) @signature `Ll/f0/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L3ea598.  throw v2;
  catch `java.io.IOException` @[L3ea530..L3ea552] goto L3ea562;
  catch `java.lang.Throwable` @[L3ea530..L3ea552] goto L3ea55c;
  catch `java.io.IOException` @[L3ea552..L3ea556] goto L3ea564;
  catch `java.lang.Throwable` @[L3ea552..L3ea556] goto L3ea582;
  catch `java.io.IOException` @[L3ea556..L3ea55a] goto L3ea576;
  catch `java.lang.Throwable` @[L3ea564..L3ea56c] goto L3ea582;
  catch `java.io.IOException` @[L3ea56c..L3ea576] goto L3ea576;
  catch `java.io.IOException` @[L3ea584..L3ea58e] goto L3ea58e;
}
