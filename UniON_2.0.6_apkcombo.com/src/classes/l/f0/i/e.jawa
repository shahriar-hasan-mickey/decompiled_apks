record `l.f0.i.e` @kind class @AccessFlag PUBLIC_FINAL {
}
global `m.f` `@@l.f0.i.e.a` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@l.f0.i.e.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@l.f0.i.e.c` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@l.f0.i.e.d` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ll/f0/i/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3edbcc.  v0:= "PRI * HTTP/2.0\r\n\r\nSM\r\n\r\n" @kind object;
  #L3edbd0.  call temp:= `c`(v0) @signature `Lm/f;.c:(Ljava/lang/String;)Lm/f;` @kind static;
  #L3edbd6.  v0:= temp @kind object;
  #L3edbd8.  `@@l.f0.i.e.a` @type ^`m.f` := v0 @kind object;
  #L3edbdc.  v1:= "DATA" @kind object;
  #L3edbe0.  v2:= "HEADERS" @kind object;
  #L3edbe4.  v3:= "PRIORITY" @kind object;
  #L3edbe8.  v4:= "RST_STREAM" @kind object;
  #L3edbec.  v5:= "SETTINGS" @kind object;
  #L3edbf0.  v6:= "PUSH_PROMISE" @kind object;
  #L3edbf4.  v7:= "PING" @kind object;
  #L3edbf8.  v8:= "GOAWAY" @kind object;
  #L3edbfc.  v9:= "WINDOW_UPDATE" @kind object;
  #L3edc00.  v10:= "CONTINUATION" @kind object;
  #L3edc04.  temp:= new `java.lang.String`[v1, v2, v3, v4, v5, v6, v7, v8, v9, v10];
  #L3edc0a.  v0:= temp @kind object;
  #L3edc0c.  `@@l.f0.i.e.b` @type ^`java.lang.String`[] := v0 @kind object;
  #L3edc10.  v0:= 64I;
  #L3edc14.  v0:= new `java.lang.String`[v0];
  #L3edc18.  `@@l.f0.i.e.c` @type ^`java.lang.String`[] := v0 @kind object;
  #L3edc1c.  v0:= 256I;
  #L3edc20.  v0:= new `java.lang.String`[v0];
  #L3edc24.  `@@l.f0.i.e.d` @type ^`java.lang.String`[] := v0 @kind object;
  #L3edc28.  v0:= 0I;
  #L3edc2a.  v1:= 0I;
  #L3edc2c.  v2:= `@@l.f0.i.e.d` @type ^`java.lang.String`[] @kind object;
  #L3edc30.  v3:= length @variable v2;
  #L3edc32.  v4:= 32I;
  #L3edc36.  v5:= 1I;
  #L3edc38.  if v1 >= v3 then goto L3edc6e;
  #L3edc3c.  v3:= new `java.lang.Object`[v5];
  #L3edc40.  call temp:= `toBinaryString`(v1) @signature `Ljava/lang/Integer;.toBinaryString:(I)Ljava/lang/String;` @kind static;
  #L3edc46.  v5:= temp @kind object;
  #L3edc48.  v3[v0]:= v5 @kind object;
  #L3edc4c.  v5:= "%8s" @kind object;
  #L3edc50.  call temp:= `a`(v5, v3) @signature `Ll/f0/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3edc56.  v3:= temp @kind object;
  #L3edc58.  v5:= 48I;
  #L3edc5c.  call temp:= `replace`(v3, v4, v5) @signature `Ljava/lang/String;.replace:(CC)Ljava/lang/String;` @kind virtual;
  #L3edc62.  v3:= temp @kind object;
  #L3edc64.  v2[v1]:= v3 @kind object;
  #L3edc68.  v1:= v1 + 1;
  #L3edc6c.  goto L3edc2c;
  #L3edc6e.  v1:= `@@l.f0.i.e.c` @type ^`java.lang.String`[] @kind object;
  #L3edc72.  v2:= "" @kind object;
  #L3edc76.  v1[v0]:= v2 @kind object;
  #L3edc7a.  v2:= "END_STREAM" @kind object;
  #L3edc7e.  v1[v5]:= v2 @kind object;
  #L3edc82.  v2:= new `int`[v5];
  #L3edc86.  v2[v0]:= v5;
  #L3edc8a.  v3:= 8I;
  #L3edc8e.  v5:= "PADDED" @kind object;
  #L3edc92.  v1[v3]:= v5 @kind object;
  #L3edc96.  v1:= length @variable v2;
  #L3edc98.  v5:= 0I;
  #L3edc9a.  v6:= "|PADDED" @kind object;
  #L3edc9e.  if v5 >= v1 then goto L3edcde;
  #L3edca2.  v7:= v2[v5];
  #L3edca6.  v8:= `@@l.f0.i.e.c` @type ^`java.lang.String`[] @kind object;
  #L3edcaa.  v9:= v7 ^| 8;
  #L3edcae.  v10:= new `java.lang.StringBuilder`;
  #L3edcb2.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3edcb8.  v11:= `@@l.f0.i.e.c` @type ^`java.lang.String`[] @kind object;
  #L3edcbc.  v7:= v11[v7] @kind object;
  #L3edcc0.  call temp:= `append`(v10, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3edcc6.  call temp:= `append`(v10, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3edccc.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3edcd2.  v6:= temp @kind object;
  #L3edcd4.  v8[v9]:= v6 @kind object;
  #L3edcd8.  v5:= v5 + 1;
  #L3edcdc.  goto L3edc9a;
  #L3edcde.  v1:= `@@l.f0.i.e.c` @type ^`java.lang.String`[] @kind object;
  #L3edce2.  v5:= 4I;
  #L3edce4.  v7:= "END_HEADERS" @kind object;
  #L3edce8.  v1[v5]:= v7 @kind object;
  #L3edcec.  v5:= "PRIORITY" @kind object;
  #L3edcf0.  v1[v4]:= v5 @kind object;
  #L3edcf4.  v4:= 36I;
  #L3edcf8.  v5:= "END_HEADERS|PRIORITY" @kind object;
  #L3edcfc.  v1[v4]:= v5 @kind object;
  #L3edd00.  v1:= 3I;
  #L3edd02.  v1:= new `int`[v1];
  #L3edd06.  goto L3edde0;
  #L3edd0c.  v4:= length @variable v1;
  #L3edd0e.  v5:= 0I;
  #L3edd10.  if v5 >= v4 then goto L3eddb8;
  #L3edd14.  v7:= v1[v5];
  #L3edd18.  v8:= length @variable v2;
  #L3edd1a.  v9:= 0I;
  #L3edd1c.  if v9 >= v8 then goto L3eddb2;
  #L3edd20.  v10:= v2[v9];
  #L3edd24.  v11:= `@@l.f0.i.e.c` @type ^`java.lang.String`[] @kind object;
  #L3edd28.  v12:= v10 ^| v7 @kind int;
  #L3edd2c.  v13:= new `java.lang.StringBuilder`;
  #L3edd30.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3edd36.  v14:= `@@l.f0.i.e.c` @type ^`java.lang.String`[] @kind object;
  #L3edd3a.  v14:= v14[v10] @kind object;
  #L3edd3e.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3edd44.  v14:= 124I;
  #L3edd48.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3edd4e.  v15:= `@@l.f0.i.e.c` @type ^`java.lang.String`[] @kind object;
  #L3edd52.  v15:= v15[v7] @kind object;
  #L3edd56.  call temp:= `append`(v13, v15) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3edd5c.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3edd62.  v13:= temp @kind object;
  #L3edd64.  v11[v12]:= v13 @kind object;
  #L3edd68.  v11:= `@@l.f0.i.e.c` @type ^`java.lang.String`[] @kind object;
  #L3edd6c.  v12:= v12 ^| v3 @kind int;
  #L3edd6e.  v13:= new `java.lang.StringBuilder`;
  #L3edd72.  call `<init>`(v13) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3edd78.  v15:= `@@l.f0.i.e.c` @type ^`java.lang.String`[] @kind object;
  #L3edd7c.  v10:= v15[v10] @kind object;
  #L3edd80.  call temp:= `append`(v13, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3edd86.  call temp:= `append`(v13, v14) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3edd8c.  v10:= `@@l.f0.i.e.c` @type ^`java.lang.String`[] @kind object;
  #L3edd90.  v10:= v10[v7] @kind object;
  #L3edd94.  call temp:= `append`(v13, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3edd9a.  call temp:= `append`(v13, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3edda0.  call temp:= `toString`(v13) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3edda6.  v10:= temp @kind object;
  #L3edda8.  v11[v12]:= v10 @kind object;
  #L3eddac.  v9:= v9 + 1;
  #L3eddb0.  goto L3edd1c;
  #L3eddb2.  v5:= v5 + 1;
  #L3eddb6.  goto L3edd10;
  #L3eddb8.  v1:= `@@l.f0.i.e.c` @type ^`java.lang.String`[] @kind object;
  #L3eddbc.  v2:= length @variable v1;
  #L3eddbe.  if v0 >= v2 then goto L3edddc;
  #L3eddc2.  v2:= v1[v0] @kind object;
  #L3eddc6.  if v2 != 0 then goto L3eddd6;
  #L3eddca.  v2:= `@@l.f0.i.e.d` @type ^`java.lang.String`[] @kind object;
  #L3eddce.  v2:= v2[v0] @kind object;
  #L3eddd2.  v1[v0]:= v2 @kind object;
  #L3eddd6.  v0:= v0 + 1;
  #L3eddda.  goto L3eddb8;
  #L3edddc.  return @kind void;
  #L3eddde.  
  #L3edde0.  v1:= (4I, 32I, 36I) @kind object;
  #L3eddf3.  goto L3edd0c;
}
procedure `void` `<init>`(`l.f0.i.e` v0 @kind this) @signature `Ll/f0/i/e;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3ede04.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ede0a.  return @kind void;
}
procedure `java.lang.IllegalArgumentException` `a`(`java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Ll/f0/i/e;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @AccessFlag STATIC {
    temp;
    v0;

  #L3eda5c.  v0:= new `java.lang.IllegalArgumentException`;
  #L3eda60.  call temp:= `a`(v1, v2) @signature `Ll/f0/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3eda66.  v1:= temp @kind object;
  #L3eda68.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3eda6e.  throw v0;
}
procedure `java.lang.String` `a`(`byte` v2 , `byte` v3 ) @signature `Ll/f0/i/e;.a:(BB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L3eda80.  if v3 != 0 then goto L3eda8a;
  #L3eda84.  v2:= "" @kind object;
  #L3eda88.  return v2 @kind object;
  #L3eda8a.  v0:= 2I;
  #L3eda8c.  if v2 == v0 then goto L3edb1e;
  #L3eda90.  v0:= 3I;
  #L3eda92.  if v2 == v0 then goto L3edb1e;
  #L3eda96.  v0:= 4I;
  #L3eda98.  if v2 == v0 then goto L3edb08;
  #L3eda9c.  v0:= 6I;
  #L3eda9e.  if v2 == v0 then goto L3edb08;
  #L3edaa2.  v0:= 7I;
  #L3edaa4.  if v2 == v0 then goto L3edb1e;
  #L3edaa8.  v0:= 8I;
  #L3edaac.  if v2 == v0 then goto L3edb1e;
  #L3edab0.  v0:= `@@l.f0.i.e.c` @type ^`java.lang.String`[] @kind object;
  #L3edab4.  v1:= length @variable v0;
  #L3edab6.  if v3 >= v1 then goto L3edac0;
  #L3edaba.  v0:= v0[v3] @kind object;
  #L3edabe.  goto L3edac8;
  #L3edac0.  v0:= `@@l.f0.i.e.d` @type ^`java.lang.String`[] @kind object;
  #L3edac4.  v0:= v0[v3] @kind object;
  #L3edac8.  v1:= 5I;
  #L3edaca.  if v2 != v1 then goto L3edae8;
  #L3edace.  v1:= v3 ^& 4;
  #L3edad2.  if v1 == 0 then goto L3edae8;
  #L3edad6.  v2:= "HEADERS" @kind object;
  #L3edada.  v3:= "PUSH_PROMISE" @kind object;
  #L3edade.  call temp:= `replace`(v0, v2, v3) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L3edae4.  v2:= temp @kind object;
  #L3edae6.  return v2 @kind object;
  #L3edae8.  if v2 != 0 then goto L3edb06;
  #L3edaec.  v2:= v3 ^& 32;
  #L3edaf0.  if v2 == 0 then goto L3edb06;
  #L3edaf4.  v2:= "PRIORITY" @kind object;
  #L3edaf8.  v3:= "COMPRESSED" @kind object;
  #L3edafc.  call temp:= `replace`(v0, v2, v3) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L3edb02.  v2:= temp @kind object;
  #L3edb04.  return v2 @kind object;
  #L3edb06.  return v0 @kind object;
  #L3edb08.  v2:= 1I;
  #L3edb0a.  if v3 != v2 then goto L3edb14;
  #L3edb0e.  v2:= "ACK" @kind object;
  #L3edb12.  goto L3edb1c;
  #L3edb14.  v2:= `@@l.f0.i.e.d` @type ^`java.lang.String`[] @kind object;
  #L3edb18.  v2:= v2[v3] @kind object;
  #L3edb1c.  return v2 @kind object;
  #L3edb1e.  v2:= `@@l.f0.i.e.d` @type ^`java.lang.String`[] @kind object;
  #L3edb22.  v2:= v2[v3] @kind object;
  #L3edb26.  return v2 @kind object;
}
procedure `java.lang.String` `a`(`boolean` v4 , `int` v5 , `int` v6 , `byte` v7 , `byte` v8 ) @signature `Ll/f0/i/e;.a:(ZIIBB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3edb38.  v0:= `@@l.f0.i.e.b` @type ^`java.lang.String`[] @kind object;
  #L3edb3c.  v1:= length @variable v0;
  #L3edb3e.  v2:= 0I;
  #L3edb40.  v3:= 1I;
  #L3edb42.  if v7 >= v1 then goto L3edb4c;
  #L3edb46.  v0:= v0[v7] @kind object;
  #L3edb4a.  goto L3edb68;
  #L3edb4c.  v0:= new `java.lang.Object`[v3];
  #L3edb50.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L3edb56.  v1:= temp @kind object;
  #L3edb58.  v0[v2]:= v1 @kind object;
  #L3edb5c.  v1:= "0x%02x" @kind object;
  #L3edb60.  call temp:= `a`(v1, v0) @signature `Ll/f0/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3edb66.  v0:= temp @kind object;
  #L3edb68.  call temp:= `a`(v7, v8) @signature `Ll/f0/i/e;.a:(BB)Ljava/lang/String;` @kind static;
  #L3edb6e.  v7:= temp @kind object;
  #L3edb70.  v8:= 5I;
  #L3edb72.  v8:= new `java.lang.Object`[v8];
  #L3edb76.  if v4 == 0 then goto L3edb80;
  #L3edb7a.  v4:= "<<" @kind object;
  #L3edb7e.  goto L3edb84;
  #L3edb80.  v4:= ">>" @kind object;
  #L3edb84.  v8[v2]:= v4 @kind object;
  #L3edb88.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3edb8e.  v4:= temp @kind object;
  #L3edb90.  v8[v3]:= v4 @kind object;
  #L3edb94.  v4:= 2I;
  #L3edb96.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3edb9c.  v5:= temp @kind object;
  #L3edb9e.  v8[v4]:= v5 @kind object;
  #L3edba2.  v4:= 3I;
  #L3edba4.  v8[v4]:= v0 @kind object;
  #L3edba8.  v4:= 4I;
  #L3edbaa.  v8[v4]:= v7 @kind object;
  #L3edbae.  v4:= "%s 0x%08x %5d %-13s %s" @kind object;
  #L3edbb2.  call temp:= `a`(v4, v8) @signature `Ll/f0/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3edbb8.  v4:= temp @kind object;
  #L3edbba.  return v4 @kind object;
}
procedure `java.io.IOException` `b`(`java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @AccessFlag STATIC {
    temp;
    v0;

  #L3eda38.  v0:= new `java.io.IOException`;
  #L3eda3c.  call temp:= `a`(v1, v2) @signature `Ll/f0/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3eda42.  v1:= temp @kind object;
  #L3eda44.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3eda4a.  throw v0;
}
