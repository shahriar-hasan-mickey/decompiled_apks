record `l.f0.i.h` @kind class @AccessFlag FINAL extends `java.io.Closeable` @kind interface {
  `m.e` `l.f0.i.h.b` @AccessFlag PRIVATE_FINAL;
  `l.f0.i.h$a` `l.f0.i.h.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `l.f0.i.h.d` @AccessFlag PRIVATE_FINAL;
  `l.f0.i.d$a` `l.f0.i.h.e` @AccessFlag FINAL;
}
global `java.util.logging.Logger` `@@l.f0.i.h.f` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ll/f0/i/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3ebb04.  v0:= constclass @type ^`l.f0.i.e` @kind object;
  #L3ebb08.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3ebb0e.  v0:= temp @kind object;
  #L3ebb10.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L3ebb16.  v0:= temp @kind object;
  #L3ebb18.  `@@l.f0.i.h.f` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L3ebb1c.  return @kind void;
}
procedure `void` `<init>`(`l.f0.i.h` v1 @kind this, `m.e` v2 @kind object, `boolean` v3 ) @signature `Ll/f0/i/h;.<init>:(Lm/e;Z)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3ebb30.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ebb36.  v1.`l.f0.i.h.b` @type ^`m.e` := v2 @kind object;
  #L3ebb3a.  v1.`l.f0.i.h.d` @type ^`boolean` := v3 @kind boolean;
  #L3ebb3e.  v2:= new `l.f0.i.h$a`;
  #L3ebb42.  v3:= v1.`l.f0.i.h.b` @type ^`m.e` @kind object;
  #L3ebb46.  call `<init>`(v2, v3) @signature `Ll/f0/i/h$a;.<init>:(Lm/e;)V` @kind direct;
  #L3ebb4c.  v1.`l.f0.i.h.c` @type ^`l.f0.i.h$a` := v2 @kind object;
  #L3ebb50.  v2:= new `l.f0.i.d$a`;
  #L3ebb54.  v3:= v1.`l.f0.i.h.c` @type ^`l.f0.i.h$a` @kind object;
  #L3ebb58.  v0:= 4096I;
  #L3ebb5c.  call `<init>`(v2, v0, v3) @signature `Ll/f0/i/d$a;.<init>:(ILm/s;)V` @kind direct;
  #L3ebb62.  v1.`l.f0.i.h.e` @type ^`l.f0.i.d$a` := v2 @kind object;
  #L3ebb66.  return @kind void;
}
procedure `int` `a`(`int` v1 , `byte` v2 , `short` v3 ) @signature `Ll/f0/i/h;.a:(IBS)I` @AccessFlag STATIC {
    temp;
    v0;

  #L3eba28.  v2:= v2 ^& 8;
  #L3eba2c.  if v2 == 0 then goto L3eba34;
  #L3eba30.  v1:= v1 + -1;
  #L3eba34.  if v3 > v1 then goto L3eba3e;
  #L3eba38.  v1:= v1 - v3 @kind int;
  #L3eba3a.  v1:= (`short`) v1 @kind i2s;
  #L3eba3c.  return v1;
  #L3eba3e.  v2:= 2I;
  #L3eba40.  v2:= new `java.lang.Object`[v2];
  #L3eba44.  v0:= 0I;
  #L3eba46.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;` @kind static;
  #L3eba4c.  v3:= temp @kind object;
  #L3eba4e.  v2[v0]:= v3 @kind object;
  #L3eba52.  v3:= 1I;
  #L3eba54.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3eba5a.  v1:= temp @kind object;
  #L3eba5c.  v2[v3]:= v1 @kind object;
  #L3eba60.  v1:= "PROTOCOL_ERROR padding %s > remaining length %s" @kind object;
  #L3eba64.  call temp:= `b`(v1, v2) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3eba6a.  v1:= 0I;
  #L3eba6c.  throw v1;
}
procedure `int` `a`(`m.e` v2 @kind object) @signature `Ll/f0/i/h;.a:(Lm/e;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L3eba80.  call temp:= `readByte`(v2) @signature `Lm/e;.readByte:()B` @kind interface;
  #L3eba86.  v0:= temp;
  #L3eba88.  v0:= v0 ^& 255;
  #L3eba8c.  v0:= v0 ^< 16;
  #L3eba90.  call temp:= `readByte`(v2) @signature `Lm/e;.readByte:()B` @kind interface;
  #L3eba96.  v1:= temp;
  #L3eba98.  v1:= v1 ^& 255;
  #L3eba9c.  v1:= v1 ^< 8;
  #L3ebaa0.  v0:= v0 ^| v1 @kind int;
  #L3ebaa2.  call temp:= `readByte`(v2) @signature `Lm/e;.readByte:()B` @kind interface;
  #L3ebaa8.  v2:= temp;
  #L3ebaaa.  v2:= v2 ^& 255;
  #L3ebaae.  v2:= v2 ^| v0 @kind int;
  #L3ebab0.  return v2;
}
procedure `java.util.List` `a`(`l.f0.i.h` v1 @kind this, `int` v2 , `short` v3 , `byte` v4 , `int` v5 ) @signature `Ll/f0/i/h;.a:(ISBI)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ebac4.  v0:= v1.`l.f0.i.h.c` @type ^`l.f0.i.h$a` @kind object;
  #L3ebac8.  v0.`l.f0.i.h$a.f` @type ^`int` := v2;
  #L3ebacc.  v0.`l.f0.i.h$a.c` @type ^`int` := v2;
  #L3ebad0.  v0.`l.f0.i.h$a.g` @type ^`short` := v3 @kind char;
  #L3ebad4.  v0.`l.f0.i.h$a.d` @type ^`byte` := v4 @kind byte;
  #L3ebad8.  v0.`l.f0.i.h$a.e` @type ^`int` := v5;
  #L3ebadc.  v2:= v1.`l.f0.i.h.e` @type ^`l.f0.i.d$a` @kind object;
  #L3ebae0.  call `c`(v2) @signature `Ll/f0/i/d$a;.c:()V` @kind virtual;
  #L3ebae6.  v2:= v1.`l.f0.i.h.e` @type ^`l.f0.i.d$a` @kind object;
  #L3ebaea.  call temp:= `a`(v2) @signature `Ll/f0/i/d$a;.a:()Ljava/util/List;` @kind virtual;
  #L3ebaf0.  v2:= temp @kind object;
  #L3ebaf2.  return v2 @kind object;
}
procedure `void` `a`(`l.f0.i.h` v4 @kind this, `l.f0.i.h$b` v5 @kind object, `int` v6 ) @signature `Ll/f0/i/h;.a:(Ll/f0/i/h$b;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ebe8c.  v0:= v4.`l.f0.i.h.b` @type ^`m.e` @kind object;
  #L3ebe90.  call temp:= `readInt`(v0) @signature `Lm/e;.readInt:()I` @kind interface;
  #L3ebe96.  v0:= temp;
  #L3ebe98.  v1:= -2147483648I;
  #L3ebe9c.  v1:= v1 ^& v0 @kind int;
  #L3ebe9e.  v2:= 1I;
  #L3ebea0.  if v1 == 0 then goto L3ebea8;
  #L3ebea4.  v1:= 1I;
  #L3ebea6.  goto L3ebeaa;
  #L3ebea8.  v1:= 0I;
  #L3ebeaa.  v3:= 2147483647I;
  #L3ebeb0.  v0:= v0 ^& v3 @kind int;
  #L3ebeb2.  v3:= v4.`l.f0.i.h.b` @type ^`m.e` @kind object;
  #L3ebeb6.  call temp:= `readByte`(v3) @signature `Lm/e;.readByte:()B` @kind interface;
  #L3ebebc.  v3:= temp;
  #L3ebebe.  v3:= v3 ^& 255;
  #L3ebec2.  v3:= v3 + v2 @kind int;
  #L3ebec4.  call `a`(v5, v6, v0, v3, v1) @signature `Ll/f0/i/h$b;.a:(IIIZ)V` @kind interface;
  #L3ebeca.  return @kind void;
}
procedure `void` `a`(`l.f0.i.h` v5 @kind this, `l.f0.i.h$b` v6 @kind object, `int` v7 , `byte` v8 , `int` v9 ) @signature `Ll/f0/i/h;.a:(Ll/f0/i/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ebc54.  v0:= 0I;
  #L3ebc56.  v1:= 0I;
  #L3ebc58.  if v9 == 0 then goto L3ebcc6;
  #L3ebc5c.  v2:= v8 ^& 1;
  #L3ebc60.  v3:= 1I;
  #L3ebc62.  if v2 == 0 then goto L3ebc6a;
  #L3ebc66.  v2:= 1I;
  #L3ebc68.  goto L3ebc6c;
  #L3ebc6a.  v2:= 0I;
  #L3ebc6c.  v4:= v8 ^& 32;
  #L3ebc70.  if v4 == 0 then goto L3ebc76;
  #L3ebc74.  goto L3ebc78;
  #L3ebc76.  v3:= 0I;
  #L3ebc78.  if v3 != 0 then goto L3ebcb6;
  #L3ebc7c.  v0:= v8 ^& 8;
  #L3ebc80.  if v0 == 0 then goto L3ebc96;
  #L3ebc84.  v0:= v5.`l.f0.i.h.b` @type ^`m.e` @kind object;
  #L3ebc88.  call temp:= `readByte`(v0) @signature `Lm/e;.readByte:()B` @kind interface;
  #L3ebc8e.  v0:= temp;
  #L3ebc90.  v0:= v0 ^& 255;
  #L3ebc94.  v1:= (`short`) v0 @kind i2s;
  #L3ebc96.  call temp:= `a`(v7, v8, v1) @signature `Ll/f0/i/h;.a:(IBS)I` @kind static;
  #L3ebc9c.  v7:= temp;
  #L3ebc9e.  v8:= v5.`l.f0.i.h.b` @type ^`m.e` @kind object;
  #L3ebca2.  call `a`(v6, v2, v9, v8, v7) @signature `Ll/f0/i/h$b;.a:(ZILm/e;I)V` @kind interface;
  #L3ebca8.  v6:= v5.`l.f0.i.h.b` @type ^`m.e` @kind object;
  #L3ebcac.  v7:= (`long`) v1 @kind i2l;
  #L3ebcae.  call `skip`(v6, v7) @signature `Lm/e;.skip:(J)V` @kind interface;
  #L3ebcb4.  return @kind void;
  #L3ebcb6.  v6:= new `java.lang.Object`[v1];
  #L3ebcba.  v7:= "PROTOCOL_ERROR: FLAG_COMPRESSED without SETTINGS_COMPRESS_DATA" @kind object;
  #L3ebcbe.  call temp:= `b`(v7, v6) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3ebcc4.  throw v0;
  #L3ebcc6.  v6:= new `java.lang.Object`[v1];
  #L3ebcca.  v7:= "PROTOCOL_ERROR: TYPE_DATA streamId == 0" @kind object;
  #L3ebcce.  call temp:= `b`(v7, v6) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3ebcd4.  throw v0;
}
procedure `void` `b`(`l.f0.i.h` v4 @kind this, `l.f0.i.h$b` v5 @kind object, `int` v6 , `byte` v7 , `int` v8 ) @signature `Ll/f0/i/h;.b:(Ll/f0/i/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ebce8.  v7:= 1I;
  #L3ebcea.  v0:= 8I;
  #L3ebcee.  v1:= 0I;
  #L3ebcf0.  v2:= 0I;
  #L3ebcf2.  if v6 < v0 then goto L3ebd6a;
  #L3ebcf6.  if v8 != 0 then goto L3ebd5a;
  #L3ebcfa.  v8:= v4.`l.f0.i.h.b` @type ^`m.e` @kind object;
  #L3ebcfe.  call temp:= `readInt`(v8) @signature `Lm/e;.readInt:()I` @kind interface;
  #L3ebd04.  v8:= temp;
  #L3ebd06.  v3:= v4.`l.f0.i.h.b` @type ^`m.e` @kind object;
  #L3ebd0a.  call temp:= `readInt`(v3) @signature `Lm/e;.readInt:()I` @kind interface;
  #L3ebd10.  v3:= temp;
  #L3ebd12.  v6:= v6 - v0 @kind int;
  #L3ebd14.  call temp:= `a`(v3) @signature `Ll/f0/i/b;.a:(I)Ll/f0/i/b;` @kind static;
  #L3ebd1a.  v0:= temp @kind object;
  #L3ebd1c.  if v0 == 0 then goto L3ebd3e;
  #L3ebd20.  v7:= `@@m.f.f` @type ^`m.f` @kind object;
  #L3ebd24.  if v6 <= 0 then goto L3ebd36;
  #L3ebd28.  v7:= v4.`l.f0.i.h.b` @type ^`m.e` @kind object;
  #L3ebd2c.  v1:= (`long`) v6 @kind i2l;
  #L3ebd2e.  call temp:= `a`(v7, v1) @signature `Lm/e;.a:(J)Lm/f;` @kind interface;
  #L3ebd34.  v7:= temp @kind object;
  #L3ebd36.  call `a`(v5, v8, v0, v7) @signature `Ll/f0/i/h$b;.a:(ILl/f0/i/b;Lm/f;)V` @kind interface;
  #L3ebd3c.  return @kind void;
  #L3ebd3e.  v5:= new `java.lang.Object`[v7];
  #L3ebd42.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3ebd48.  v6:= temp @kind object;
  #L3ebd4a.  v5[v2]:= v6 @kind object;
  #L3ebd4e.  v6:= "TYPE_GOAWAY unexpected error code: %d" @kind object;
  #L3ebd52.  call temp:= `b`(v6, v5) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3ebd58.  throw v1;
  #L3ebd5a.  v5:= new `java.lang.Object`[v2];
  #L3ebd5e.  v6:= "TYPE_GOAWAY streamId != 0" @kind object;
  #L3ebd62.  call temp:= `b`(v6, v5) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3ebd68.  throw v1;
  #L3ebd6a.  v5:= new `java.lang.Object`[v7];
  #L3ebd6e.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3ebd74.  v6:= temp @kind object;
  #L3ebd76.  v5[v2]:= v6 @kind object;
  #L3ebd7a.  v6:= "TYPE_GOAWAY length < 8: %s" @kind object;
  #L3ebd7e.  call temp:= `b`(v6, v5) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3ebd84.  throw v1;
}
procedure `void` `c`(`l.f0.i.h` v3 @kind this, `l.f0.i.h$b` v4 @kind object, `int` v5 , `byte` v6 , `int` v7 ) @signature `Ll/f0/i/h;.c:(Ll/f0/i/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3ebd98.  v0:= 0I;
  #L3ebd9a.  if v7 == 0 then goto L3ebdf2;
  #L3ebd9e.  v1:= v6 ^& 1;
  #L3ebda2.  if v1 == 0 then goto L3ebdaa;
  #L3ebda6.  v1:= 1I;
  #L3ebda8.  goto L3ebdac;
  #L3ebdaa.  v1:= 0I;
  #L3ebdac.  v2:= v6 ^& 8;
  #L3ebdb0.  if v2 == 0 then goto L3ebdc6;
  #L3ebdb4.  v0:= v3.`l.f0.i.h.b` @type ^`m.e` @kind object;
  #L3ebdb8.  call temp:= `readByte`(v0) @signature `Lm/e;.readByte:()B` @kind interface;
  #L3ebdbe.  v0:= temp;
  #L3ebdc0.  v0:= v0 ^& 255;
  #L3ebdc4.  v0:= (`short`) v0 @kind i2s;
  #L3ebdc6.  v2:= v6 ^& 32;
  #L3ebdca.  if v2 == 0 then goto L3ebdd8;
  #L3ebdce.  call `a`(v3, v4, v7) @signature `Ll/f0/i/h;.a:(Ll/f0/i/h$b;I)V` @kind direct;
  #L3ebdd4.  v5:= v5 + -5;
  #L3ebdd8.  call temp:= `a`(v5, v6, v0) @signature `Ll/f0/i/h;.a:(IBS)I` @kind static;
  #L3ebdde.  v5:= temp;
  #L3ebde0.  call temp:= `a`(v3, v5, v0, v6, v7) @signature `Ll/f0/i/h;.a:(ISBI)Ljava/util/List;` @kind direct;
  #L3ebde6.  v5:= temp @kind object;
  #L3ebde8.  v6:= -1I;
  #L3ebdea.  call `a`(v4, v1, v7, v6, v5) @signature `Ll/f0/i/h$b;.a:(ZIILjava/util/List;)V` @kind interface;
  #L3ebdf0.  return @kind void;
  #L3ebdf2.  v4:= new `java.lang.Object`[v0];
  #L3ebdf6.  v5:= "PROTOCOL_ERROR: TYPE_HEADERS streamId == 0" @kind object;
  #L3ebdfa.  call temp:= `b`(v5, v4) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3ebe00.  v4:= 0I;
  #L3ebe02.  throw v4;
}
procedure `void` `d`(`l.f0.i.h` v4 @kind this, `l.f0.i.h$b` v5 @kind object, `int` v6 , `byte` v7 , `int` v8 ) @signature `Ll/f0/i/h;.d:(Ll/f0/i/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ebe14.  v0:= 0I;
  #L3ebe16.  v1:= 0I;
  #L3ebe18.  v2:= 1I;
  #L3ebe1a.  v3:= 8I;
  #L3ebe1e.  if v6 != v3 then goto L3ebe5e;
  #L3ebe22.  if v8 != 0 then goto L3ebe4e;
  #L3ebe26.  v6:= v4.`l.f0.i.h.b` @type ^`m.e` @kind object;
  #L3ebe2a.  call temp:= `readInt`(v6) @signature `Lm/e;.readInt:()I` @kind interface;
  #L3ebe30.  v6:= temp;
  #L3ebe32.  v8:= v4.`l.f0.i.h.b` @type ^`m.e` @kind object;
  #L3ebe36.  call temp:= `readInt`(v8) @signature `Lm/e;.readInt:()I` @kind interface;
  #L3ebe3c.  v8:= temp;
  #L3ebe3e.  v7:= v7 ^& v2 @kind int;
  #L3ebe40.  if v7 == 0 then goto L3ebe46;
  #L3ebe44.  v1:= 1I;
  #L3ebe46.  call `a`(v5, v1, v6, v8) @signature `Ll/f0/i/h$b;.a:(ZII)V` @kind interface;
  #L3ebe4c.  return @kind void;
  #L3ebe4e.  v5:= new `java.lang.Object`[v1];
  #L3ebe52.  v6:= "TYPE_PING streamId != 0" @kind object;
  #L3ebe56.  call temp:= `b`(v6, v5) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3ebe5c.  throw v0;
  #L3ebe5e.  v5:= new `java.lang.Object`[v2];
  #L3ebe62.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3ebe68.  v6:= temp @kind object;
  #L3ebe6a.  v5[v1]:= v6 @kind object;
  #L3ebe6e.  v6:= "TYPE_PING length != 8: %s" @kind object;
  #L3ebe72.  call temp:= `b`(v6, v5) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3ebe78.  throw v0;
}
procedure `void` `e`(`l.f0.i.h` v2 @kind this, `l.f0.i.h$b` v3 @kind object, `int` v4 , `byte` v5 , `int` v6 ) @signature `Ll/f0/i/h;.e:(Ll/f0/i/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3ebedc.  v5:= 0I;
  #L3ebede.  v0:= 0I;
  #L3ebee0.  v1:= 5I;
  #L3ebee2.  if v4 != v1 then goto L3ebf02;
  #L3ebee6.  if v6 == 0 then goto L3ebef2;
  #L3ebeea.  call `a`(v2, v3, v6) @signature `Ll/f0/i/h;.a:(Ll/f0/i/h$b;I)V` @kind direct;
  #L3ebef0.  return @kind void;
  #L3ebef2.  v3:= new `java.lang.Object`[v0];
  #L3ebef6.  v4:= "TYPE_PRIORITY streamId == 0" @kind object;
  #L3ebefa.  call temp:= `b`(v4, v3) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3ebf00.  throw v5;
  #L3ebf02.  v3:= 1I;
  #L3ebf04.  v3:= new `java.lang.Object`[v3];
  #L3ebf08.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3ebf0e.  v4:= temp @kind object;
  #L3ebf10.  v3[v0]:= v4 @kind object;
  #L3ebf14.  v4:= "TYPE_PRIORITY length: %d != 5" @kind object;
  #L3ebf18.  call temp:= `b`(v4, v3) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3ebf1e.  throw v5;
}
procedure `void` `f`(`l.f0.i.h` v3 @kind this, `l.f0.i.h$b` v4 @kind object, `int` v5 , `byte` v6 , `int` v7 ) @signature `Ll/f0/i/h;.f:(Ll/f0/i/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3ebf30.  v0:= 0I;
  #L3ebf32.  if v7 == 0 then goto L3ebf80;
  #L3ebf36.  v1:= v6 ^& 8;
  #L3ebf3a.  if v1 == 0 then goto L3ebf50;
  #L3ebf3e.  v0:= v3.`l.f0.i.h.b` @type ^`m.e` @kind object;
  #L3ebf42.  call temp:= `readByte`(v0) @signature `Lm/e;.readByte:()B` @kind interface;
  #L3ebf48.  v0:= temp;
  #L3ebf4a.  v0:= v0 ^& 255;
  #L3ebf4e.  v0:= (`short`) v0 @kind i2s;
  #L3ebf50.  v1:= v3.`l.f0.i.h.b` @type ^`m.e` @kind object;
  #L3ebf54.  call temp:= `readInt`(v1) @signature `Lm/e;.readInt:()I` @kind interface;
  #L3ebf5a.  v1:= temp;
  #L3ebf5c.  v2:= 2147483647I;
  #L3ebf62.  v1:= v1 ^& v2 @kind int;
  #L3ebf64.  v5:= v5 + -4;
  #L3ebf68.  call temp:= `a`(v5, v6, v0) @signature `Ll/f0/i/h;.a:(IBS)I` @kind static;
  #L3ebf6e.  v5:= temp;
  #L3ebf70.  call temp:= `a`(v3, v5, v0, v6, v7) @signature `Ll/f0/i/h;.a:(ISBI)Ljava/util/List;` @kind direct;
  #L3ebf76.  v5:= temp @kind object;
  #L3ebf78.  call `a`(v4, v7, v1, v5) @signature `Ll/f0/i/h$b;.a:(IILjava/util/List;)V` @kind interface;
  #L3ebf7e.  return @kind void;
  #L3ebf80.  v4:= new `java.lang.Object`[v0];
  #L3ebf84.  v5:= "PROTOCOL_ERROR: TYPE_PUSH_PROMISE streamId == 0" @kind object;
  #L3ebf88.  call temp:= `b`(v5, v4) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3ebf8e.  v4:= 0I;
  #L3ebf90.  throw v4;
}
procedure `void` `g`(`l.f0.i.h` v3 @kind this, `l.f0.i.h$b` v4 @kind object, `int` v5 , `byte` v6 , `int` v7 ) @signature `Ll/f0/i/h;.g:(Ll/f0/i/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3ebfa4.  v6:= 1I;
  #L3ebfa6.  v0:= 0I;
  #L3ebfa8.  v1:= 0I;
  #L3ebfaa.  v2:= 4I;
  #L3ebfac.  if v5 != v2 then goto L3ec000;
  #L3ebfb0.  if v7 == 0 then goto L3ebff0;
  #L3ebfb4.  v5:= v3.`l.f0.i.h.b` @type ^`m.e` @kind object;
  #L3ebfb8.  call temp:= `readInt`(v5) @signature `Lm/e;.readInt:()I` @kind interface;
  #L3ebfbe.  v5:= temp;
  #L3ebfc0.  call temp:= `a`(v5) @signature `Ll/f0/i/b;.a:(I)Ll/f0/i/b;` @kind static;
  #L3ebfc6.  v2:= temp @kind object;
  #L3ebfc8.  if v2 == 0 then goto L3ebfd4;
  #L3ebfcc.  call `a`(v4, v7, v2) @signature `Ll/f0/i/h$b;.a:(ILl/f0/i/b;)V` @kind interface;
  #L3ebfd2.  return @kind void;
  #L3ebfd4.  v4:= new `java.lang.Object`[v6];
  #L3ebfd8.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3ebfde.  v5:= temp @kind object;
  #L3ebfe0.  v4[v1]:= v5 @kind object;
  #L3ebfe4.  v5:= "TYPE_RST_STREAM unexpected error code: %d" @kind object;
  #L3ebfe8.  call temp:= `b`(v5, v4) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3ebfee.  throw v0;
  #L3ebff0.  v4:= new `java.lang.Object`[v1];
  #L3ebff4.  v5:= "TYPE_RST_STREAM streamId == 0" @kind object;
  #L3ebff8.  call temp:= `b`(v5, v4) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3ebffe.  throw v0;
  #L3ec000.  v4:= new `java.lang.Object`[v6];
  #L3ec004.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3ec00a.  v5:= temp @kind object;
  #L3ec00c.  v4[v1]:= v5 @kind object;
  #L3ec010.  v5:= "TYPE_RST_STREAM length: %d != 4" @kind object;
  #L3ec014.  call temp:= `b`(v5, v4) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3ec01a.  throw v0;
}
procedure `void` `h`(`l.f0.i.h` v6 @kind this, `l.f0.i.h$b` v7 @kind object, `int` v8 , `byte` v9 , `int` v10 ) @signature `Ll/f0/i/h;.h:(Ll/f0/i/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ec02c.  v0:= 0I;
  #L3ec02e.  v1:= 0I;
  #L3ec030.  if v10 != 0 then goto L3ec12e;
  #L3ec034.  v10:= 1I;
  #L3ec036.  v9:= v9 ^& v10 @kind int;
  #L3ec038.  if v9 == 0 then goto L3ec058;
  #L3ec03c.  if v8 != 0 then goto L3ec048;
  #L3ec040.  call `a`(v7) @signature `Ll/f0/i/h$b;.a:()V` @kind interface;
  #L3ec046.  return @kind void;
  #L3ec048.  v7:= new `java.lang.Object`[v1];
  #L3ec04c.  v8:= "FRAME_SIZE_ERROR ack frame should be empty!" @kind object;
  #L3ec050.  call temp:= `b`(v8, v7) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3ec056.  throw v0;
  #L3ec058.  v9:= v8 %% 6;
  #L3ec05c.  if v9 != 0 then goto L3ec112;
  #L3ec060.  v9:= new `l.f0.i.m`;
  #L3ec064.  call `<init>`(v9) @signature `Ll/f0/i/m;.<init>:()V` @kind direct;
  #L3ec06a.  v2:= 0I;
  #L3ec06c.  if v2 >= v8 then goto L3ec10a;
  #L3ec070.  v3:= v6.`l.f0.i.h.b` @type ^`m.e` @kind object;
  #L3ec074.  call temp:= `readShort`(v3) @signature `Lm/e;.readShort:()S` @kind interface;
  #L3ec07a.  v3:= temp;
  #L3ec07c.  v4:= 65535I;
  #L3ec082.  v3:= v3 ^& v4 @kind int;
  #L3ec084.  v4:= v6.`l.f0.i.h.b` @type ^`m.e` @kind object;
  #L3ec088.  call temp:= `readInt`(v4) @signature `Lm/e;.readInt:()I` @kind interface;
  #L3ec08e.  v4:= temp;
  #L3ec090.  goto L3ec140;
  #L3ec096.  goto L3ec0fe;
  #L3ec098.  v5:= 16384I;
  #L3ec09c.  if v4 < v5 then goto L3ec0ac;
  #L3ec0a0.  v5:= 16777215I;
  #L3ec0a6.  if v4 > v5 then goto L3ec0ac;
  #L3ec0aa.  goto L3ec0fe;
  #L3ec0ac.  v7:= new `java.lang.Object`[v10];
  #L3ec0b0.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3ec0b6.  v8:= temp @kind object;
  #L3ec0b8.  v7[v1]:= v8 @kind object;
  #L3ec0bc.  v8:= "PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: %s" @kind object;
  #L3ec0c0.  call temp:= `b`(v8, v7) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3ec0c6.  throw v0;
  #L3ec0c8.  v3:= 7I;
  #L3ec0ca.  if v4 < 0 then goto L3ec0d0;
  #L3ec0ce.  goto L3ec0fe;
  #L3ec0d0.  v7:= new `java.lang.Object`[v1];
  #L3ec0d4.  v8:= "PROTOCOL_ERROR SETTINGS_INITIAL_WINDOW_SIZE > 2^31 - 1" @kind object;
  #L3ec0d8.  call temp:= `b`(v8, v7) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3ec0de.  throw v0;
  #L3ec0e0.  v3:= 4I;
  #L3ec0e2.  goto L3ec0fe;
  #L3ec0e4.  if v4 == 0 then goto L3ec0fe;
  #L3ec0e8.  if v4 != v10 then goto L3ec0ee;
  #L3ec0ec.  goto L3ec0fe;
  #L3ec0ee.  v7:= new `java.lang.Object`[v1];
  #L3ec0f2.  v8:= "PROTOCOL_ERROR SETTINGS_ENABLE_PUSH != 0 or 1" @kind object;
  #L3ec0f6.  call temp:= `b`(v8, v7) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3ec0fc.  throw v0;
  #L3ec0fe.  call temp:= `a`(v9, v3, v4) @signature `Ll/f0/i/m;.a:(II)Ll/f0/i/m;` @kind virtual;
  #L3ec104.  v2:= v2 + 6;
  #L3ec108.  goto L3ec06c;
  #L3ec10a.  call `a`(v7, v1, v9) @signature `Ll/f0/i/h$b;.a:(ZLl/f0/i/m;)V` @kind interface;
  #L3ec110.  return @kind void;
  #L3ec112.  v7:= new `java.lang.Object`[v10];
  #L3ec116.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3ec11c.  v8:= temp @kind object;
  #L3ec11e.  v7[v1]:= v8 @kind object;
  #L3ec122.  v8:= "TYPE_SETTINGS length %% 6 != 0: %s" @kind object;
  #L3ec126.  call temp:= `b`(v8, v7) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3ec12c.  throw v0;
  #L3ec12e.  v7:= new `java.lang.Object`[v1];
  #L3ec132.  v8:= "TYPE_SETTINGS streamId != 0" @kind object;
  #L3ec136.  call temp:= `b`(v8, v7) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3ec13c.  throw v0;
  #L3ec13e.  
  #L3ec140.  switch v3
                  | 1 => goto L3ec0fe
                  | 2 => goto L3ec0e4
                  | 3 => goto L3ec0e0
                  | 4 => goto L3ec0c8
                  | 5 => goto L3ec098
                  | 6 => goto L3ec0fe
                  | else => goto L3ec096;
}
procedure `void` `i`(`l.f0.i.h` v6 @kind this, `l.f0.i.h$b` v7 @kind object, `int` v8 , `byte` v9 , `int` v10 ) @signature `Ll/f0/i/h;.i:(Ll/f0/i/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ec170.  v9:= 0I;
  #L3ec172.  v0:= 0I;
  #L3ec174.  v1:= 1I;
  #L3ec176.  v2:= 4I;
  #L3ec178.  if v8 != v2 then goto L3ec1c2;
  #L3ec17c.  v8:= v6.`l.f0.i.h.b` @type ^`m.e` @kind object;
  #L3ec180.  call temp:= `readInt`(v8) @signature `Lm/e;.readInt:()I` @kind interface;
  #L3ec186.  v8:= temp;
  #L3ec188.  v2:= (`long`) v8 @kind i2l;
  #L3ec18a.  v4:= 2147483647L;
  #L3ec190.  v2:= v2 ^& v4 @kind long;
  #L3ec192.  v4:= 0L;
  #L3ec196.  v8:= lcmp(v2, v4);
  #L3ec19a.  if v8 == 0 then goto L3ec1a6;
  #L3ec19e.  call `a`(v7, v10, v2) @signature `Ll/f0/i/h$b;.a:(IJ)V` @kind interface;
  #L3ec1a4.  return @kind void;
  #L3ec1a6.  v7:= new `java.lang.Object`[v1];
  #L3ec1aa.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3ec1b0.  v8:= temp @kind object;
  #L3ec1b2.  v7[v0]:= v8 @kind object;
  #L3ec1b6.  v8:= "windowSizeIncrement was 0" @kind object;
  #L3ec1ba.  call temp:= `b`(v8, v7) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3ec1c0.  throw v9;
  #L3ec1c2.  v7:= new `java.lang.Object`[v1];
  #L3ec1c6.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3ec1cc.  v8:= temp @kind object;
  #L3ec1ce.  v7[v0]:= v8 @kind object;
  #L3ec1d2.  v8:= "TYPE_WINDOW_UPDATE length !=4: %s" @kind object;
  #L3ec1d6.  call temp:= `b`(v8, v7) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3ec1dc.  throw v9;
}
procedure `void` `a`(`l.f0.i.h` v6 @kind this, `l.f0.i.h$b` v7 @kind object) @signature `Ll/f0/i/h;.a:(Ll/f0/i/h$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ebb94.  v0:= v6.`l.f0.i.h.d` @type ^`boolean` @kind boolean;
  #L3ebb98.  v1:= 0I;
  #L3ebb9a.  v2:= 0I;
  #L3ebb9c.  v3:= 1I;
  #L3ebb9e.  if v0 == 0 then goto L3ebbc0;
  #L3ebba2.  call temp:= `a`(v6, v3, v7) @signature `Ll/f0/i/h;.a:(ZLl/f0/i/h$b;)Z` @kind virtual;
  #L3ebba8.  v7:= temp;
  #L3ebbaa.  if v7 == 0 then goto L3ebbb0;
  #L3ebbae.  goto L3ebc24;
  #L3ebbb0.  v7:= new `java.lang.Object`[v2];
  #L3ebbb4.  v0:= "Required SETTINGS preface not received" @kind object;
  #L3ebbb8.  call temp:= `b`(v0, v7) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3ebbbe.  throw v1;
  #L3ebbc0.  v7:= v6.`l.f0.i.h.b` @type ^`m.e` @kind object;
  #L3ebbc4.  v0:= `@@l.f0.i.e.a` @type ^`m.f` @kind object;
  #L3ebbc8.  call temp:= `l`(v0) @signature `Lm/f;.l:()I` @kind virtual;
  #L3ebbce.  v0:= temp;
  #L3ebbd0.  v4:= (`long`) v0 @kind i2l;
  #L3ebbd2.  call temp:= `a`(v7, v4) @signature `Lm/e;.a:(J)Lm/f;` @kind interface;
  #L3ebbd8.  v7:= temp @kind object;
  #L3ebbda.  v0:= `@@l.f0.i.h.f` @type ^`java.util.logging.Logger` @kind object;
  #L3ebbde.  v4:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L3ebbe2.  call temp:= `isLoggable`(v0, v4) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L3ebbe8.  v0:= temp;
  #L3ebbea.  if v0 == 0 then goto L3ebc14;
  #L3ebbee.  v0:= `@@l.f0.i.h.f` @type ^`java.util.logging.Logger` @kind object;
  #L3ebbf2.  v4:= new `java.lang.Object`[v3];
  #L3ebbf6.  call temp:= `e`(v7) @signature `Lm/f;.e:()Ljava/lang/String;` @kind virtual;
  #L3ebbfc.  v5:= temp @kind object;
  #L3ebbfe.  v4[v2]:= v5 @kind object;
  #L3ebc02.  v5:= "<< CONNECTION %s" @kind object;
  #L3ebc06.  call temp:= `a`(v5, v4) @signature `Ll/f0/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3ebc0c.  v4:= temp @kind object;
  #L3ebc0e.  call `fine`(v0, v4) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L3ebc14.  v0:= `@@l.f0.i.e.a` @type ^`m.f` @kind object;
  #L3ebc18.  call temp:= `equals`(v0, v7) @signature `Lm/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ebc1e.  v0:= temp;
  #L3ebc20.  if v0 == 0 then goto L3ebc26;
  #L3ebc24.  return @kind void;
  #L3ebc26.  v0:= new `java.lang.Object`[v3];
  #L3ebc2a.  call temp:= `o`(v7) @signature `Lm/f;.o:()Ljava/lang/String;` @kind virtual;
  #L3ebc30.  v7:= temp @kind object;
  #L3ebc32.  v0[v2]:= v7 @kind object;
  #L3ebc36.  v7:= "Expected a connection header but was %s" @kind object;
  #L3ebc3a.  call temp:= `b`(v7, v0) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3ebc40.  throw v1;
}
procedure `boolean` `a`(`l.f0.i.h` v6 @kind this, `boolean` v7 , `l.f0.i.h$b` v8 @kind object) @signature `Ll/f0/i/h;.a:(ZLl/f0/i/h$b;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3eb8b0.  v0:= 0I;
  #L3eb8b2.  v1:= v6.`l.f0.i.h.b` @type ^`m.e` @kind object;
  #L3eb8b6.  v2:= 9L;
  #L3eb8ba.  call `d`(v1, v2) @signature `Lm/e;.d:(J)V` @kind interface;
  #L3eb8c0.  v1:= v6.`l.f0.i.h.b` @type ^`m.e` @kind object;
  #L3eb8c4.  call temp:= `a`(v1) @signature `Ll/f0/i/h;.a:(Lm/e;)I` @kind static;
  #L3eb8ca.  v1:= temp;
  #L3eb8cc.  v2:= 0I;
  #L3eb8ce.  v3:= 1I;
  #L3eb8d0.  if v1 < 0 then goto L3eb9be;
  #L3eb8d4.  v4:= 16384I;
  #L3eb8d8.  if v1 > v4 then goto L3eb9be;
  #L3eb8dc.  v4:= v6.`l.f0.i.h.b` @type ^`m.e` @kind object;
  #L3eb8e0.  call temp:= `readByte`(v4) @signature `Lm/e;.readByte:()B` @kind interface;
  #L3eb8e6.  v4:= temp;
  #L3eb8e8.  v4:= v4 ^& 255;
  #L3eb8ec.  v4:= (`byte`) v4 @kind i2b;
  #L3eb8ee.  if v7 == 0 then goto L3eb916;
  #L3eb8f2.  v7:= 4I;
  #L3eb8f4.  if v4 != v7 then goto L3eb8fa;
  #L3eb8f8.  goto L3eb916;
  #L3eb8fa.  v7:= new `java.lang.Object`[v3];
  #L3eb8fe.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L3eb904.  v8:= temp @kind object;
  #L3eb906.  v7[v0]:= v8 @kind object;
  #L3eb90a.  v8:= "Expected a SETTINGS frame but was %s" @kind object;
  #L3eb90e.  call temp:= `b`(v8, v7) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3eb914.  throw v2;
  #L3eb916.  v7:= v6.`l.f0.i.h.b` @type ^`m.e` @kind object;
  #L3eb91a.  call temp:= `readByte`(v7) @signature `Lm/e;.readByte:()B` @kind interface;
  #L3eb920.  v7:= temp;
  #L3eb922.  v7:= v7 ^& 255;
  #L3eb926.  v7:= (`byte`) v7 @kind i2b;
  #L3eb928.  v0:= v6.`l.f0.i.h.b` @type ^`m.e` @kind object;
  #L3eb92c.  call temp:= `readInt`(v0) @signature `Lm/e;.readInt:()I` @kind interface;
  #L3eb932.  v0:= temp;
  #L3eb934.  v2:= 2147483647I;
  #L3eb93a.  v0:= v0 ^& v2 @kind int;
  #L3eb93c.  v2:= `@@l.f0.i.h.f` @type ^`java.util.logging.Logger` @kind object;
  #L3eb940.  v5:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L3eb944.  call temp:= `isLoggable`(v2, v5) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L3eb94a.  v2:= temp;
  #L3eb94c.  if v2 == 0 then goto L3eb962;
  #L3eb950.  v2:= `@@l.f0.i.h.f` @type ^`java.util.logging.Logger` @kind object;
  #L3eb954.  call temp:= `a`(v3, v0, v1, v4, v7) @signature `Ll/f0/i/e;.a:(ZIIBB)Ljava/lang/String;` @kind static;
  #L3eb95a.  v5:= temp @kind object;
  #L3eb95c.  call `fine`(v2, v5) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L3eb962.  goto L3eb9dc;
  #L3eb968.  v7:= v6.`l.f0.i.h.b` @type ^`m.e` @kind object;
  #L3eb96c.  v0:= (`long`) v1 @kind i2l;
  #L3eb96e.  call `skip`(v7, v0) @signature `Lm/e;.skip:(J)V` @kind interface;
  #L3eb974.  goto L3eb9bc;
  #L3eb976.  call `i`(v6, v8, v1, v7, v0) @signature `Ll/f0/i/h;.i:(Ll/f0/i/h$b;IBI)V` @kind direct;
  #L3eb97c.  goto L3eb9bc;
  #L3eb97e.  call `b`(v6, v8, v1, v7, v0) @signature `Ll/f0/i/h;.b:(Ll/f0/i/h$b;IBI)V` @kind direct;
  #L3eb984.  goto L3eb9bc;
  #L3eb986.  call `d`(v6, v8, v1, v7, v0) @signature `Ll/f0/i/h;.d:(Ll/f0/i/h$b;IBI)V` @kind direct;
  #L3eb98c.  goto L3eb9bc;
  #L3eb98e.  call `f`(v6, v8, v1, v7, v0) @signature `Ll/f0/i/h;.f:(Ll/f0/i/h$b;IBI)V` @kind direct;
  #L3eb994.  goto L3eb9bc;
  #L3eb996.  call `h`(v6, v8, v1, v7, v0) @signature `Ll/f0/i/h;.h:(Ll/f0/i/h$b;IBI)V` @kind direct;
  #L3eb99c.  goto L3eb9bc;
  #L3eb99e.  call `g`(v6, v8, v1, v7, v0) @signature `Ll/f0/i/h;.g:(Ll/f0/i/h$b;IBI)V` @kind direct;
  #L3eb9a4.  goto L3eb9bc;
  #L3eb9a6.  call `e`(v6, v8, v1, v7, v0) @signature `Ll/f0/i/h;.e:(Ll/f0/i/h$b;IBI)V` @kind direct;
  #L3eb9ac.  goto L3eb9bc;
  #L3eb9ae.  call `c`(v6, v8, v1, v7, v0) @signature `Ll/f0/i/h;.c:(Ll/f0/i/h$b;IBI)V` @kind direct;
  #L3eb9b4.  goto L3eb9bc;
  #L3eb9b6.  call `a`(v6, v8, v1, v7, v0) @signature `Ll/f0/i/h;.a:(Ll/f0/i/h$b;IBI)V` @kind direct;
  #L3eb9bc.  return v3;
  #L3eb9be.  v7:= new `java.lang.Object`[v3];
  #L3eb9c2.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3eb9c8.  v8:= temp @kind object;
  #L3eb9ca.  v7[v0]:= v8 @kind object;
  #L3eb9ce.  v8:= "FRAME_SIZE_ERROR: %s" @kind object;
  #L3eb9d2.  call temp:= `b`(v8, v7) @signature `Ll/f0/i/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L3eb9d8.  throw v2;
  #L3eb9da.  return v0;
  #L3eb9dc.  switch v4
                  | 0 => goto L3eb9b6
                  | 1 => goto L3eb9ae
                  | 2 => goto L3eb9a6
                  | 3 => goto L3eb99e
                  | 4 => goto L3eb996
                  | 5 => goto L3eb98e
                  | 6 => goto L3eb986
                  | 7 => goto L3eb97e
                  | 8 => goto L3eb976
                  | else => goto L3eb968;
  catch `java.io.IOException` @[L3eb8b2..L3eb8c0] goto L3eb9da;
}
procedure `void` `close`(`l.f0.i.h` v1 @kind this) @signature `Ll/f0/i/h;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ebb78.  v0:= v1.`l.f0.i.h.b` @type ^`m.e` @kind object;
  #L3ebb7c.  call `close`(v0) @signature `Lm/s;.close:()V` @kind interface;
  #L3ebb82.  return @kind void;
}
