record `l.f0.f.f` @kind class @AccessFlag PUBLIC_FINAL {
  `l.a` `l.f0.f.f.a` @AccessFlag PRIVATE_FINAL;
  `l.f0.f.d` `l.f0.f.f.b` @AccessFlag PRIVATE_FINAL;
  `l.e` `l.f0.f.f.c` @AccessFlag PRIVATE_FINAL;
  `l.p` `l.f0.f.f.d` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `l.f0.f.f.e` @AccessFlag PRIVATE;
  `int` `l.f0.f.f.f` @AccessFlag PRIVATE;
  `java.util.List` `l.f0.f.f.g` @AccessFlag PRIVATE;
  `java.util.List` `l.f0.f.f.h` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`l.f0.f.f` v1 @kind this, `l.a` v2 @kind object, `l.f0.f.d` v3 @kind object, `l.e` v4 @kind object, `l.p` v5 @kind object) @signature `Ll/f0/f/f;.<init>:(Ll/a;Ll/f0/f/d;Ll/e;Ll/p;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e49b8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e49be.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L3e49c4.  v0:= temp @kind object;
  #L3e49c6.  v1.`l.f0.f.f.e` @type ^`java.util.List` := v0 @kind object;
  #L3e49ca.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L3e49d0.  v0:= temp @kind object;
  #L3e49d2.  v1.`l.f0.f.f.g` @type ^`java.util.List` := v0 @kind object;
  #L3e49d6.  v0:= new `java.util.ArrayList`;
  #L3e49da.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3e49e0.  v1.`l.f0.f.f.h` @type ^`java.util.List` := v0 @kind object;
  #L3e49e4.  v1.`l.f0.f.f.a` @type ^`l.a` := v2 @kind object;
  #L3e49e8.  v1.`l.f0.f.f.b` @type ^`l.f0.f.d` := v3 @kind object;
  #L3e49ec.  v1.`l.f0.f.f.c` @type ^`l.e` := v4 @kind object;
  #L3e49f0.  v1.`l.f0.f.f.d` @type ^`l.p` := v5 @kind object;
  #L3e49f4.  call temp:= `k`(v2) @signature `Ll/a;.k:()Ll/s;` @kind virtual;
  #L3e49fa.  v3:= temp @kind object;
  #L3e49fc.  call temp:= `f`(v2) @signature `Ll/a;.f:()Ljava/net/Proxy;` @kind virtual;
  #L3e4a02.  v2:= temp @kind object;
  #L3e4a04.  call `a`(v1, v3, v2) @signature `Ll/f0/f/f;.a:(Ll/s;Ljava/net/Proxy;)V` @kind direct;
  #L3e4a0a.  return @kind void;
}
procedure `java.lang.String` `a`(`java.net.InetSocketAddress` v1 @kind object) @signature `Ll/f0/f/f;.a:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;

  #L3e4818.  call temp:= `getAddress`(v1) @signature `Ljava/net/InetSocketAddress;.getAddress:()Ljava/net/InetAddress;` @kind virtual;
  #L3e481e.  v0:= temp @kind object;
  #L3e4820.  if v0 != 0 then goto L3e482e;
  #L3e4824.  call temp:= `getHostName`(v1) @signature `Ljava/net/InetSocketAddress;.getHostName:()Ljava/lang/String;` @kind virtual;
  #L3e482a.  v1:= temp @kind object;
  #L3e482c.  return v1 @kind object;
  #L3e482e.  call temp:= `getHostAddress`(v0) @signature `Ljava/net/InetAddress;.getHostAddress:()Ljava/lang/String;` @kind virtual;
  #L3e4834.  v1:= temp @kind object;
  #L3e4836.  return v1 @kind object;
}
procedure `void` `a`(`l.f0.f.f` v6 @kind this, `java.net.Proxy` v7 @kind object) @signature `Ll/f0/f/f;.a:(Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e4a98.  v0:= new `java.util.ArrayList`;
  #L3e4a9c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3e4aa2.  v6.`l.f0.f.f.g` @type ^`java.util.List` := v0 @kind object;
  #L3e4aa6.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L3e4aac.  v0:= temp @kind object;
  #L3e4aae.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L3e4ab2.  if v0 == v1 then goto L3e4b24;
  #L3e4ab6.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L3e4abc.  v0:= temp @kind object;
  #L3e4abe.  v1:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L3e4ac2.  if v0 != v1 then goto L3e4ac8;
  #L3e4ac6.  goto L3e4b24;
  #L3e4ac8.  call temp:= `address`(v7) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L3e4ace.  v0:= temp @kind object;
  #L3e4ad0.  v1:= instanceof @variable v0 @type ^`java.net.InetSocketAddress` @kind boolean;
  #L3e4ad4.  if v1 == 0 then goto L3e4aee;
  #L3e4ad8.  v0:= (`java.net.InetSocketAddress`) v0 @kind object;
  #L3e4adc.  call temp:= `a`(v0) @signature `Ll/f0/f/f;.a:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @kind static;
  #L3e4ae2.  v1:= temp @kind object;
  #L3e4ae4.  call temp:= `getPort`(v0) @signature `Ljava/net/InetSocketAddress;.getPort:()I` @kind virtual;
  #L3e4aea.  v0:= temp;
  #L3e4aec.  goto L3e4b4c;
  #L3e4aee.  v7:= new `java.lang.IllegalArgumentException`;
  #L3e4af2.  v1:= new `java.lang.StringBuilder`;
  #L3e4af6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e4afc.  v2:= "Proxy.address() is not an InetSocketAddress: " @kind object;
  #L3e4b00.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e4b06.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3e4b0c.  v0:= temp @kind object;
  #L3e4b0e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e4b14.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e4b1a.  v0:= temp @kind object;
  #L3e4b1c.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e4b22.  throw v7;
  #L3e4b24.  v0:= v6.`l.f0.f.f.a` @type ^`l.a` @kind object;
  #L3e4b28.  call temp:= `k`(v0) @signature `Ll/a;.k:()Ll/s;` @kind virtual;
  #L3e4b2e.  v0:= temp @kind object;
  #L3e4b30.  call temp:= `g`(v0) @signature `Ll/s;.g:()Ljava/lang/String;` @kind virtual;
  #L3e4b36.  v1:= temp @kind object;
  #L3e4b38.  v0:= v6.`l.f0.f.f.a` @type ^`l.a` @kind object;
  #L3e4b3c.  call temp:= `k`(v0) @signature `Ll/a;.k:()Ll/s;` @kind virtual;
  #L3e4b42.  v0:= temp @kind object;
  #L3e4b44.  call temp:= `j`(v0) @signature `Ll/s;.j:()I` @kind virtual;
  #L3e4b4a.  v0:= temp;
  #L3e4b4c.  v2:= 1I;
  #L3e4b4e.  if v0 < v2 then goto L3e4c32;
  #L3e4b52.  v2:= 65535I;
  #L3e4b58.  if v0 > v2 then goto L3e4c32;
  #L3e4b5c.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L3e4b62.  v7:= temp @kind object;
  #L3e4b64.  v2:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L3e4b68.  if v7 != v2 then goto L3e4b80;
  #L3e4b6c.  v7:= v6.`l.f0.f.f.g` @type ^`java.util.List` @kind object;
  #L3e4b70.  call temp:= `createUnresolved`(v1, v0) @signature `Ljava/net/InetSocketAddress;.createUnresolved:(Ljava/lang/String;I)Ljava/net/InetSocketAddress;` @kind static;
  #L3e4b76.  v0:= temp @kind object;
  #L3e4b78.  call temp:= `add`(v7, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e4b7e.  goto L3e4bf0;
  #L3e4b80.  v7:= v6.`l.f0.f.f.d` @type ^`l.p` @kind object;
  #L3e4b84.  v2:= v6.`l.f0.f.f.c` @type ^`l.e` @kind object;
  #L3e4b88.  call `a`(v7, v2, v1) @signature `Ll/p;.a:(Ll/e;Ljava/lang/String;)V` @kind virtual;
  #L3e4b8e.  v7:= v6.`l.f0.f.f.a` @type ^`l.a` @kind object;
  #L3e4b92.  call temp:= `c`(v7) @signature `Ll/a;.c:()Ll/o;` @kind virtual;
  #L3e4b98.  v7:= temp @kind object;
  #L3e4b9a.  call temp:= `a`(v7, v1) @signature `Ll/o;.a:(Ljava/lang/String;)Ljava/util/List;` @kind interface;
  #L3e4ba0.  v7:= temp @kind object;
  #L3e4ba2.  call temp:= `isEmpty`(v7) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3e4ba8.  v2:= temp;
  #L3e4baa.  if v2 != 0 then goto L3e4bf2;
  #L3e4bae.  v2:= v6.`l.f0.f.f.d` @type ^`l.p` @kind object;
  #L3e4bb2.  v3:= v6.`l.f0.f.f.c` @type ^`l.e` @kind object;
  #L3e4bb6.  call `a`(v2, v3, v1, v7) @signature `Ll/p;.a:(Ll/e;Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L3e4bbc.  v1:= 0I;
  #L3e4bbe.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e4bc4.  v2:= temp;
  #L3e4bc6.  if v1 >= v2 then goto L3e4bf0;
  #L3e4bca.  call temp:= `get`(v7, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e4bd0.  v3:= temp @kind object;
  #L3e4bd2.  v3:= (`java.net.InetAddress`) v3 @kind object;
  #L3e4bd6.  v4:= v6.`l.f0.f.f.g` @type ^`java.util.List` @kind object;
  #L3e4bda.  v5:= new `java.net.InetSocketAddress`;
  #L3e4bde.  call `<init>`(v5, v3, v0) @signature `Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V` @kind direct;
  #L3e4be4.  call temp:= `add`(v4, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e4bea.  v1:= v1 + 1;
  #L3e4bee.  goto L3e4bc6;
  #L3e4bf0.  return @kind void;
  #L3e4bf2.  v7:= new `java.net.UnknownHostException`;
  #L3e4bf6.  v0:= new `java.lang.StringBuilder`;
  #L3e4bfa.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e4c00.  v2:= v6.`l.f0.f.f.a` @type ^`l.a` @kind object;
  #L3e4c04.  call temp:= `c`(v2) @signature `Ll/a;.c:()Ll/o;` @kind virtual;
  #L3e4c0a.  v2:= temp @kind object;
  #L3e4c0c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e4c12.  v2:= " returned no addresses for " @kind object;
  #L3e4c16.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e4c1c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e4c22.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e4c28.  v0:= temp @kind object;
  #L3e4c2a.  call `<init>`(v7, v0) @signature `Ljava/net/UnknownHostException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e4c30.  throw v7;
  #L3e4c32.  v7:= new `java.net.SocketException`;
  #L3e4c36.  v2:= new `java.lang.StringBuilder`;
  #L3e4c3a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e4c40.  v3:= "No route to " @kind object;
  #L3e4c44.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e4c4a.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e4c50.  v1:= ":" @kind object;
  #L3e4c54.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e4c5a.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e4c60.  v0:= "; port is out of range" @kind object;
  #L3e4c64.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e4c6a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e4c70.  v0:= temp @kind object;
  #L3e4c72.  call `<init>`(v7, v0) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e4c78.  throw v7;
}
procedure `void` `a`(`l.f0.f.f` v1 @kind this, `l.s` v2 @kind object, `java.net.Proxy` v3 @kind object) @signature `Ll/f0/f/f;.a:(Ll/s;Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e4c8c.  v0:= 0I;
  #L3e4c8e.  if v3 == 0 then goto L3e4ca0;
  #L3e4c92.  call temp:= `singletonList`(v3) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3e4c98.  v2:= temp @kind object;
  #L3e4c9a.  v1.`l.f0.f.f.e` @type ^`java.util.List` := v2 @kind object;
  #L3e4c9e.  goto L3e4cee;
  #L3e4ca0.  v3:= v1.`l.f0.f.f.a` @type ^`l.a` @kind object;
  #L3e4ca4.  call temp:= `h`(v3) @signature `Ll/a;.h:()Ljava/net/ProxySelector;` @kind virtual;
  #L3e4caa.  v3:= temp @kind object;
  #L3e4cac.  call temp:= `n`(v2) @signature `Ll/s;.n:()Ljava/net/URI;` @kind virtual;
  #L3e4cb2.  v2:= temp @kind object;
  #L3e4cb4.  call temp:= `select`(v3, v2) @signature `Ljava/net/ProxySelector;.select:(Ljava/net/URI;)Ljava/util/List;` @kind virtual;
  #L3e4cba.  v2:= temp @kind object;
  #L3e4cbc.  if v2 == 0 then goto L3e4cd6;
  #L3e4cc0.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3e4cc6.  v3:= temp;
  #L3e4cc8.  if v3 != 0 then goto L3e4cd6;
  #L3e4ccc.  call temp:= `a`(v2) @signature `Ll/f0/c;.a:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L3e4cd2.  v2:= temp @kind object;
  #L3e4cd4.  goto L3e4c9a;
  #L3e4cd6.  v2:= 1I;
  #L3e4cd8.  v2:= new `java.net.Proxy`[v2];
  #L3e4cdc.  v3:= `@@java.net.Proxy.NO_PROXY` @type ^`java.net.Proxy` @kind object;
  #L3e4ce0.  v2[v0]:= v3 @kind object;
  #L3e4ce4.  call temp:= `a`(v2) @signature `Ll/f0/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3e4cea.  v2:= temp @kind object;
  #L3e4cec.  goto L3e4c9a;
  #L3e4cee.  v1.`l.f0.f.f.f` @type ^`int` := v0;
  #L3e4cf2.  return @kind void;
}
procedure `boolean` `c`(`l.f0.f.f` v2 @kind this) @signature `Ll/f0/f/f;.c:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e47ec.  v0:= v2.`l.f0.f.f.f` @type ^`int`;
  #L3e47f0.  v1:= v2.`l.f0.f.f.e` @type ^`java.util.List` @kind object;
  #L3e47f4.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e47fa.  v1:= temp;
  #L3e47fc.  if v0 >= v1 then goto L3e4804;
  #L3e4800.  v0:= 1I;
  #L3e4802.  goto L3e4806;
  #L3e4804.  v0:= 0I;
  #L3e4806.  return v0;
}
procedure `java.net.Proxy` `d`(`l.f0.f.f` v3 @kind this) @signature `Ll/f0/f/f;.d:()Ljava/net/Proxy;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e4848.  call temp:= `c`(v3) @signature `Ll/f0/f/f;.c:()Z` @kind direct;
  #L3e484e.  v0:= temp;
  #L3e4850.  if v0 == 0 then goto L3e4878;
  #L3e4854.  v0:= v3.`l.f0.f.f.e` @type ^`java.util.List` @kind object;
  #L3e4858.  v1:= v3.`l.f0.f.f.f` @type ^`int`;
  #L3e485c.  v2:= v1 + 1;
  #L3e4860.  v3.`l.f0.f.f.f` @type ^`int` := v2;
  #L3e4864.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e486a.  v0:= temp @kind object;
  #L3e486c.  v0:= (`java.net.Proxy`) v0 @kind object;
  #L3e4870.  call `a`(v3, v0) @signature `Ll/f0/f/f;.a:(Ljava/net/Proxy;)V` @kind direct;
  #L3e4876.  return v0 @kind object;
  #L3e4878.  v0:= new `java.net.SocketException`;
  #L3e487c.  v1:= new `java.lang.StringBuilder`;
  #L3e4880.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e4886.  v2:= "No route to " @kind object;
  #L3e488a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e4890.  v2:= v3.`l.f0.f.f.a` @type ^`l.a` @kind object;
  #L3e4894.  call temp:= `k`(v2) @signature `Ll/a;.k:()Ll/s;` @kind virtual;
  #L3e489a.  v2:= temp @kind object;
  #L3e489c.  call temp:= `g`(v2) @signature `Ll/s;.g:()Ljava/lang/String;` @kind virtual;
  #L3e48a2.  v2:= temp @kind object;
  #L3e48a4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e48aa.  v2:= "; exhausted proxy configurations: " @kind object;
  #L3e48ae.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e48b4.  v2:= v3.`l.f0.f.f.e` @type ^`java.util.List` @kind object;
  #L3e48b8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e48be.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e48c4.  v1:= temp @kind object;
  #L3e48c6.  call `<init>`(v0, v1) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e48cc.  throw v0;
}
procedure `void` `a`(`l.f0.f.f` v3 @kind this, `l.c0` v4 @kind object, `java.io.IOException` v5 @kind object) @signature `Ll/f0/f/f;.a:(Ll/c0;Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e4a1c.  call temp:= `b`(v4) @signature `Ll/c0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L3e4a22.  v0:= temp @kind object;
  #L3e4a24.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L3e4a2a.  v0:= temp @kind object;
  #L3e4a2c.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L3e4a30.  if v0 == v1 then goto L3e4a7a;
  #L3e4a34.  v0:= v3.`l.f0.f.f.a` @type ^`l.a` @kind object;
  #L3e4a38.  call temp:= `h`(v0) @signature `Ll/a;.h:()Ljava/net/ProxySelector;` @kind virtual;
  #L3e4a3e.  v0:= temp @kind object;
  #L3e4a40.  if v0 == 0 then goto L3e4a7a;
  #L3e4a44.  v0:= v3.`l.f0.f.f.a` @type ^`l.a` @kind object;
  #L3e4a48.  call temp:= `h`(v0) @signature `Ll/a;.h:()Ljava/net/ProxySelector;` @kind virtual;
  #L3e4a4e.  v0:= temp @kind object;
  #L3e4a50.  v1:= v3.`l.f0.f.f.a` @type ^`l.a` @kind object;
  #L3e4a54.  call temp:= `k`(v1) @signature `Ll/a;.k:()Ll/s;` @kind virtual;
  #L3e4a5a.  v1:= temp @kind object;
  #L3e4a5c.  call temp:= `n`(v1) @signature `Ll/s;.n:()Ljava/net/URI;` @kind virtual;
  #L3e4a62.  v1:= temp @kind object;
  #L3e4a64.  call temp:= `b`(v4) @signature `Ll/c0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L3e4a6a.  v2:= temp @kind object;
  #L3e4a6c.  call temp:= `address`(v2) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L3e4a72.  v2:= temp @kind object;
  #L3e4a74.  call `connectFailed`(v0, v1, v2, v5) @signature `Ljava/net/ProxySelector;.connectFailed:(Ljava/net/URI;Ljava/net/SocketAddress;Ljava/io/IOException;)V` @kind virtual;
  #L3e4a7a.  v5:= v3.`l.f0.f.f.b` @type ^`l.f0.f.d` @kind object;
  #L3e4a7e.  call `b`(v5, v4) @signature `Ll/f0/f/d;.b:(Ll/c0;)V` @kind virtual;
  #L3e4a84.  return @kind void;
}
procedure `boolean` `a`(`l.f0.f.f` v1 @kind this) @signature `Ll/f0/f/f;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e47b4.  call temp:= `c`(v1) @signature `Ll/f0/f/f;.c:()Z` @kind direct;
  #L3e47ba.  v0:= temp;
  #L3e47bc.  if v0 != 0 then goto L3e47d6;
  #L3e47c0.  v0:= v1.`l.f0.f.f.h` @type ^`java.util.List` @kind object;
  #L3e47c4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3e47ca.  v0:= temp;
  #L3e47cc.  if v0 != 0 then goto L3e47d2;
  #L3e47d0.  goto L3e47d6;
  #L3e47d2.  v0:= 0I;
  #L3e47d4.  goto L3e47d8;
  #L3e47d6.  v0:= 1I;
  #L3e47d8.  return v0;
}
procedure `l.f0.f.f$a` `b`(`l.f0.f.f` v7 @kind this) @signature `Ll/f0/f/f;.b:()Ll/f0/f/f$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e48e0.  call temp:= `a`(v7) @signature `Ll/f0/f/f;.a:()Z` @kind virtual;
  #L3e48e6.  v0:= temp;
  #L3e48e8.  if v0 == 0 then goto L3e499a;
  #L3e48ec.  v0:= new `java.util.ArrayList`;
  #L3e48f0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3e48f6.  call temp:= `c`(v7) @signature `Ll/f0/f/f;.c:()Z` @kind direct;
  #L3e48fc.  v1:= temp;
  #L3e48fe.  if v1 == 0 then goto L3e496e;
  #L3e4902.  call temp:= `d`(v7) @signature `Ll/f0/f/f;.d:()Ljava/net/Proxy;` @kind direct;
  #L3e4908.  v1:= temp @kind object;
  #L3e490a.  v2:= 0I;
  #L3e490c.  v3:= v7.`l.f0.f.f.g` @type ^`java.util.List` @kind object;
  #L3e4910.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e4916.  v3:= temp;
  #L3e4918.  if v2 >= v3 then goto L3e4962;
  #L3e491c.  v4:= new `l.c0`;
  #L3e4920.  v5:= v7.`l.f0.f.f.a` @type ^`l.a` @kind object;
  #L3e4924.  v6:= v7.`l.f0.f.f.g` @type ^`java.util.List` @kind object;
  #L3e4928.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e492e.  v6:= temp @kind object;
  #L3e4930.  v6:= (`java.net.InetSocketAddress`) v6 @kind object;
  #L3e4934.  call `<init>`(v4, v5, v1, v6) @signature `Ll/c0;.<init>:(Ll/a;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @kind direct;
  #L3e493a.  v5:= v7.`l.f0.f.f.b` @type ^`l.f0.f.d` @kind object;
  #L3e493e.  call temp:= `c`(v5, v4) @signature `Ll/f0/f/d;.c:(Ll/c0;)Z` @kind virtual;
  #L3e4944.  v5:= temp;
  #L3e4946.  if v5 == 0 then goto L3e4956;
  #L3e494a.  v5:= v7.`l.f0.f.f.h` @type ^`java.util.List` @kind object;
  #L3e494e.  call temp:= `add`(v5, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e4954.  goto L3e495c;
  #L3e4956.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e495c.  v2:= v2 + 1;
  #L3e4960.  goto L3e4918;
  #L3e4962.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3e4968.  v1:= temp;
  #L3e496a.  if v1 != 0 then goto L3e48f6;
  #L3e496e.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3e4974.  v1:= temp;
  #L3e4976.  if v1 == 0 then goto L3e498e;
  #L3e497a.  v1:= v7.`l.f0.f.f.h` @type ^`java.util.List` @kind object;
  #L3e497e.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L3e4984.  v1:= v7.`l.f0.f.f.h` @type ^`java.util.List` @kind object;
  #L3e4988.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3e498e.  v1:= new `l.f0.f.f$a`;
  #L3e4992.  call `<init>`(v1, v0) @signature `Ll/f0/f/f$a;.<init>:(Ljava/util/List;)V` @kind direct;
  #L3e4998.  return v1 @kind object;
  #L3e499a.  v0:= new `java.util.NoSuchElementException`;
  #L3e499e.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L3e49a4.  throw v0;
}
