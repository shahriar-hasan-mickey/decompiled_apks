record `l.f0.f.g` @kind class @AccessFlag PUBLIC_FINAL {
  `l.a` `l.f0.f.g.a` @AccessFlag PUBLIC_FINAL;
  `l.f0.f.f$a` `l.f0.f.g.b` @AccessFlag PRIVATE;
  `l.c0` `l.f0.f.g.c` @AccessFlag PRIVATE;
  `l.j` `l.f0.f.g.d` @AccessFlag PRIVATE_FINAL;
  `l.e` `l.f0.f.g.e` @AccessFlag PUBLIC_FINAL;
  `l.p` `l.f0.f.g.f` @AccessFlag PUBLIC_FINAL;
  `java.lang.Object` `l.f0.f.g.g` @AccessFlag PRIVATE_FINAL;
  `l.f0.f.f` `l.f0.f.g.h` @AccessFlag PRIVATE_FINAL;
  `int` `l.f0.f.g.i` @AccessFlag PRIVATE;
  `l.f0.f.c` `l.f0.f.g.j` @AccessFlag PRIVATE;
  `boolean` `l.f0.f.g.k` @AccessFlag PRIVATE;
  `boolean` `l.f0.f.g.l` @AccessFlag PRIVATE;
  `boolean` `l.f0.f.g.m` @AccessFlag PRIVATE;
  `l.f0.g.c` `l.f0.f.g.n` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`l.f0.f.g` v1 @kind this, `l.j` v2 @kind object, `l.a` v3 @kind object, `l.e` v4 @kind object, `l.p` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Ll/f0/f/g;.<init>:(Ll/j;Ll/a;Ll/e;Ll/p;Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e5328.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e532e.  v1.`l.f0.f.g.d` @type ^`l.j` := v2 @kind object;
  #L3e5332.  v1.`l.f0.f.g.a` @type ^`l.a` := v3 @kind object;
  #L3e5336.  v1.`l.f0.f.g.e` @type ^`l.e` := v4 @kind object;
  #L3e533a.  v1.`l.f0.f.g.f` @type ^`l.p` := v5 @kind object;
  #L3e533e.  v2:= new `l.f0.f.f`;
  #L3e5342.  call temp:= `i`(v1) @signature `Ll/f0/f/g;.i:()Ll/f0/f/d;` @kind direct;
  #L3e5348.  v0:= temp @kind object;
  #L3e534a.  call `<init>`(v2, v3, v0, v4, v5) @signature `Ll/f0/f/f;.<init>:(Ll/a;Ll/f0/f/d;Ll/e;Ll/p;)V` @kind direct;
  #L3e5350.  v1.`l.f0.f.g.h` @type ^`l.f0.f.f` := v2 @kind object;
  #L3e5354.  v1.`l.f0.f.g.g` @type ^`java.lang.Object` := v6 @kind object;
  #L3e5358.  return @kind void;
}
procedure `java.net.Socket` `a`(`l.f0.f.g` v1 @kind this, `boolean` v2 , `boolean` v3 , `boolean` v4 ) @signature `Ll/f0/f/g;.a:(ZZZ)Ljava/net/Socket;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e4d9c.  v0:= 0I;
  #L3e4d9e.  if v4 == 0 then goto L3e4da6;
  #L3e4da2.  v1.`l.f0.f.g.n` @type ^`l.f0.g.c` := v0 @kind object;
  #L3e4da6.  v4:= 1I;
  #L3e4da8.  if v3 == 0 then goto L3e4db0;
  #L3e4dac.  v1.`l.f0.f.g.l` @type ^`boolean` := v4 @kind boolean;
  #L3e4db0.  v3:= v1.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e4db4.  if v3 == 0 then goto L3e4e38;
  #L3e4db8.  if v2 == 0 then goto L3e4dc0;
  #L3e4dbc.  v3.`l.f0.f.c.k` @type ^`boolean` := v4 @kind boolean;
  #L3e4dc0.  v2:= v1.`l.f0.f.g.n` @type ^`l.f0.g.c` @kind object;
  #L3e4dc4.  if v2 != 0 then goto L3e4e38;
  #L3e4dc8.  v2:= v1.`l.f0.f.g.l` @type ^`boolean` @kind boolean;
  #L3e4dcc.  if v2 != 0 then goto L3e4ddc;
  #L3e4dd0.  v2:= v1.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e4dd4.  v2:= v2.`l.f0.f.c.k` @type ^`boolean` @kind boolean;
  #L3e4dd8.  if v2 == 0 then goto L3e4e38;
  #L3e4ddc.  v2:= v1.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e4de0.  call `b`(v1, v2) @signature `Ll/f0/f/g;.b:(Ll/f0/f/c;)V` @kind direct;
  #L3e4de6.  v2:= v1.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e4dea.  v2:= v2.`l.f0.f.c.n` @type ^`java.util.List` @kind object;
  #L3e4dee.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3e4df4.  v2:= temp;
  #L3e4df6.  if v2 == 0 then goto L3e4e30;
  #L3e4dfa.  v2:= v1.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e4dfe.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L3e4e04.  v3:= temp @kind wide;
  #L3e4e06.  v2.`l.f0.f.c.o` @type ^`long` := v3 @kind wide;
  #L3e4e0a.  v2:= `@@l.f0.a.a` @type ^`l.f0.a` @kind object;
  #L3e4e0e.  v3:= v1.`l.f0.f.g.d` @type ^`l.j` @kind object;
  #L3e4e12.  v4:= v1.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e4e16.  call temp:= `a`(v2, v3, v4) @signature `Ll/f0/a;.a:(Ll/j;Ll/f0/f/c;)Z` @kind virtual;
  #L3e4e1c.  v2:= temp;
  #L3e4e1e.  if v2 == 0 then goto L3e4e30;
  #L3e4e22.  v2:= v1.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e4e26.  call temp:= `e`(v2) @signature `Ll/f0/f/c;.e:()Ljava/net/Socket;` @kind virtual;
  #L3e4e2c.  v2:= temp @kind object;
  #L3e4e2e.  goto L3e4e32;
  #L3e4e30.  v2:= v0 @kind object;
  #L3e4e32.  v1.`l.f0.f.g.j` @type ^`l.f0.f.c` := v0 @kind object;
  #L3e4e36.  goto L3e4e3a;
  #L3e4e38.  v2:= v0 @kind object;
  #L3e4e3a.  return v2 @kind object;
}
procedure `l.f0.f.c` `a`(`l.f0.f.g` v18 @kind this, `int` v19 , `int` v20 , `int` v21 , `int` v22 , `boolean` v23 ) @signature `Ll/f0/f/g;.a:(IIIIZ)Ll/f0/f/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L3e4f2c.  v1:= v18 @kind object;
  #L3e4f30.  v2:= v1.`l.f0.f.g.d` @type ^`l.j` @kind object;
  #L3e4f34.  @monitorenter v2
  #L3e4f36.  v0:= v1.`l.f0.f.g.l` @type ^`boolean` @kind boolean;
  #L3e4f3a.  if v0 != 0 then goto L3e5186;
  #L3e4f3e.  v0:= v1.`l.f0.f.g.n` @type ^`l.f0.g.c` @kind object;
  #L3e4f42.  if v0 != 0 then goto L3e5176;
  #L3e4f46.  v0:= v1.`l.f0.f.g.m` @type ^`boolean` @kind boolean;
  #L3e4f4a.  if v0 != 0 then goto L3e5166;
  #L3e4f4e.  v0:= v1.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e4f52.  call temp:= `h`(v18) @signature `Ll/f0/f/g;.h:()Ljava/net/Socket;` @kind direct;
  #L3e4f58.  v3:= temp @kind object;
  #L3e4f5a.  v4:= v1.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e4f5e.  v5:= 0I;
  #L3e4f60.  if v4 == 0 then goto L3e4f6c;
  #L3e4f64.  v0:= v1.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e4f68.  v4:= v5 @kind object;
  #L3e4f6a.  goto L3e4f70;
  #L3e4f6c.  v4:= v0 @kind object;
  #L3e4f6e.  v0:= v5 @kind object;
  #L3e4f70.  v6:= v1.`l.f0.f.g.k` @type ^`boolean` @kind boolean;
  #L3e4f74.  if v6 != 0 then goto L3e4f7a;
  #L3e4f78.  v4:= v5 @kind object;
  #L3e4f7a.  v6:= 1I;
  #L3e4f7c.  v7:= 0I;
  #L3e4f7e.  if v0 != 0 then goto L3e4fb2;
  #L3e4f82.  v8:= `@@l.f0.a.a` @type ^`l.f0.a` @kind object;
  #L3e4f86.  v9:= v1.`l.f0.f.g.d` @type ^`l.j` @kind object;
  #L3e4f8a.  v10:= v1.`l.f0.f.g.a` @type ^`l.a` @kind object;
  #L3e4f8e.  call temp:= `a`(v8, v9, v10, v1, v5) @signature `Ll/f0/a;.a:(Ll/j;Ll/a;Ll/f0/f/g;Ll/c0;)Ll/f0/f/c;` @kind virtual;
  #L3e4f94.  v8:= v1.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e4f98.  if v8 == 0 then goto L3e4fa8;
  #L3e4f9c.  v0:= v1.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e4fa0.  v8:= v0 @kind object;
  #L3e4fa2.  v9:= v5 @kind object;
  #L3e4fa4.  v0:= 1I;
  #L3e4fa6.  goto L3e4fb8;
  #L3e4fa8.  v8:= v1.`l.f0.f.g.c` @type ^`l.c0` @kind object;
  #L3e4fac.  v9:= v8 @kind object;
  #L3e4fae.  v8:= v0 @kind object;
  #L3e4fb0.  goto L3e4fb6;
  #L3e4fb2.  v8:= v0 @kind object;
  #L3e4fb4.  v9:= v5 @kind object;
  #L3e4fb6.  v0:= 0I;
  #L3e4fb8.  @monitorexit v2
  #L3e4fba.  call `a`(v3) @signature `Ll/f0/c;.a:(Ljava/net/Socket;)V` @kind static;
  #L3e4fc0.  if v4 == 0 then goto L3e4fd2;
  #L3e4fc4.  v2:= v1.`l.f0.f.g.f` @type ^`l.p` @kind object;
  #L3e4fc8.  v3:= v1.`l.f0.f.g.e` @type ^`l.e` @kind object;
  #L3e4fcc.  call `b`(v2, v3, v4) @signature `Ll/p;.b:(Ll/e;Ll/i;)V` @kind virtual;
  #L3e4fd2.  if v0 == 0 then goto L3e4fe4;
  #L3e4fd6.  v2:= v1.`l.f0.f.g.f` @type ^`l.p` @kind object;
  #L3e4fda.  v3:= v1.`l.f0.f.g.e` @type ^`l.e` @kind object;
  #L3e4fde.  call `a`(v2, v3, v8) @signature `Ll/p;.a:(Ll/e;Ll/i;)V` @kind virtual;
  #L3e4fe4.  if v8 == 0 then goto L3e4fea;
  #L3e4fe8.  return v8 @kind object;
  #L3e4fea.  if v9 != 0 then goto L3e5016;
  #L3e4fee.  v2:= v1.`l.f0.f.g.b` @type ^`l.f0.f.f$a` @kind object;
  #L3e4ff2.  if v2 == 0 then goto L3e5002;
  #L3e4ff6.  call temp:= `b`(v2) @signature `Ll/f0/f/f$a;.b:()Z` @kind virtual;
  #L3e4ffc.  v2:= temp;
  #L3e4ffe.  if v2 != 0 then goto L3e5016;
  #L3e5002.  v2:= v1.`l.f0.f.g.h` @type ^`l.f0.f.f` @kind object;
  #L3e5006.  call temp:= `b`(v2) @signature `Ll/f0/f/f;.b:()Ll/f0/f/f$a;` @kind virtual;
  #L3e500c.  v2:= temp @kind object;
  #L3e500e.  v1.`l.f0.f.g.b` @type ^`l.f0.f.f$a` := v2 @kind object;
  #L3e5012.  v2:= 1I;
  #L3e5014.  goto L3e5018;
  #L3e5016.  v2:= 0I;
  #L3e5018.  v3:= v1.`l.f0.f.g.d` @type ^`l.j` @kind object;
  #L3e501c.  @monitorenter v3
  #L3e501e.  v4:= v1.`l.f0.f.g.m` @type ^`boolean` @kind boolean;
  #L3e5022.  if v4 != 0 then goto L3e5150;
  #L3e5026.  if v2 == 0 then goto L3e507c;
  #L3e502a.  v2:= v1.`l.f0.f.g.b` @type ^`l.f0.f.f$a` @kind object;
  #L3e502e.  call temp:= `a`(v2) @signature `Ll/f0/f/f$a;.a:()Ljava/util/List;` @kind virtual;
  #L3e5034.  v2:= temp @kind object;
  #L3e5036.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e503c.  v4:= temp;
  #L3e503e.  v10:= 0I;
  #L3e5040.  if v10 >= v4 then goto L3e507c;
  #L3e5044.  call temp:= `get`(v2, v10) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e504a.  v11:= temp @kind object;
  #L3e504c.  v11:= (`l.c0`) v11 @kind object;
  #L3e5050.  v12:= `@@l.f0.a.a` @type ^`l.f0.a` @kind object;
  #L3e5054.  v13:= v1.`l.f0.f.g.d` @type ^`l.j` @kind object;
  #L3e5058.  v14:= v1.`l.f0.f.g.a` @type ^`l.a` @kind object;
  #L3e505c.  call temp:= `a`(v12, v13, v14, v1, v11) @signature `Ll/f0/a;.a:(Ll/j;Ll/a;Ll/f0/f/g;Ll/c0;)Ll/f0/f/c;` @kind virtual;
  #L3e5062.  v12:= v1.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e5066.  if v12 == 0 then goto L3e5076;
  #L3e506a.  v8:= v1.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e506e.  v1.`l.f0.f.g.c` @type ^`l.c0` := v11 @kind object;
  #L3e5072.  v0:= 1I;
  #L3e5074.  goto L3e507c;
  #L3e5076.  v10:= v10 + 1;
  #L3e507a.  goto L3e5040;
  #L3e507c.  if v0 != 0 then goto L3e50ac;
  #L3e5080.  if v9 != 0 then goto L3e5090;
  #L3e5084.  v2:= v1.`l.f0.f.g.b` @type ^`l.f0.f.f$a` @kind object;
  #L3e5088.  call temp:= `c`(v2) @signature `Ll/f0/f/f$a;.c:()Ll/c0;` @kind virtual;
  #L3e508e.  v9:= temp @kind object;
  #L3e5090.  v1.`l.f0.f.g.c` @type ^`l.c0` := v9 @kind object;
  #L3e5094.  v1.`l.f0.f.g.i` @type ^`int` := v7;
  #L3e5098.  v8:= new `l.f0.f.c`;
  #L3e509c.  v2:= v1.`l.f0.f.g.d` @type ^`l.j` @kind object;
  #L3e50a0.  call `<init>`(v8, v2, v9) @signature `Ll/f0/f/c;.<init>:(Ll/j;Ll/c0;)V` @kind direct;
  #L3e50a6.  call `a`(v1, v8, v7) @signature `Ll/f0/f/g;.a:(Ll/f0/f/c;Z)V` @kind virtual;
  #L3e50ac.  @monitorexit v3
  #L3e50ae.  if v0 == 0 then goto L3e50c2;
  #L3e50b2.  v0:= v1.`l.f0.f.g.f` @type ^`l.p` @kind object;
  #L3e50b6.  v2:= v1.`l.f0.f.g.e` @type ^`l.e` @kind object;
  #L3e50ba.  call `a`(v0, v2, v8) @signature `Ll/p;.a:(Ll/e;Ll/i;)V` @kind virtual;
  #L3e50c0.  return v8 @kind object;
  #L3e50c2.  v0:= v1.`l.f0.f.g.e` @type ^`l.e` @kind object;
  #L3e50c6.  v2:= v1.`l.f0.f.g.f` @type ^`l.p` @kind object;
  #L3e50ca.  v10:= v8 @kind object;
  #L3e50cc.  v11:= v19;
  #L3e50d0.  v12:= v20;
  #L3e50d4.  v13:= v21;
  #L3e50d8.  v14:= v22;
  #L3e50dc.  v15:= v23;
  #L3e50e0.  v16:= v0 @kind object;
  #L3e50e4.  v17:= v2 @kind object;
  #L3e50e8.  call `a`(v10, v11, v12, v13, v14, v15, v16, v17) @signature `Ll/f0/f/c;.a:(IIIIZLl/e;Ll/p;)V` @kind virtual;
  #L3e50ee.  call temp:= `i`(v18) @signature `Ll/f0/f/g;.i:()Ll/f0/f/d;` @kind direct;
  #L3e50f4.  v0:= temp @kind object;
  #L3e50f6.  call temp:= `d`(v8) @signature `Ll/f0/f/c;.d:()Ll/c0;` @kind virtual;
  #L3e50fc.  v2:= temp @kind object;
  #L3e50fe.  call `a`(v0, v2) @signature `Ll/f0/f/d;.a:(Ll/c0;)V` @kind virtual;
  #L3e5104.  v2:= v1.`l.f0.f.g.d` @type ^`l.j` @kind object;
  #L3e5108.  @monitorenter v2
  #L3e510a.  v1.`l.f0.f.g.k` @type ^`boolean` := v6 @kind boolean;
  #L3e510e.  v0:= `@@l.f0.a.a` @type ^`l.f0.a` @kind object;
  #L3e5112.  v3:= v1.`l.f0.f.g.d` @type ^`l.j` @kind object;
  #L3e5116.  call `b`(v0, v3, v8) @signature `Ll/f0/a;.b:(Ll/j;Ll/f0/f/c;)V` @kind virtual;
  #L3e511c.  call temp:= `c`(v8) @signature `Ll/f0/f/c;.c:()Z` @kind virtual;
  #L3e5122.  v0:= temp;
  #L3e5124.  if v0 == 0 then goto L3e5140;
  #L3e5128.  v0:= `@@l.f0.a.a` @type ^`l.f0.a` @kind object;
  #L3e512c.  v3:= v1.`l.f0.f.g.d` @type ^`l.j` @kind object;
  #L3e5130.  v4:= v1.`l.f0.f.g.a` @type ^`l.a` @kind object;
  #L3e5134.  call temp:= `a`(v0, v3, v4, v1) @signature `Ll/f0/a;.a:(Ll/j;Ll/a;Ll/f0/f/g;)Ljava/net/Socket;` @kind virtual;
  #L3e513a.  v5:= temp @kind object;
  #L3e513c.  v8:= v1.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e5140.  @monitorexit v2
  #L3e5142.  call `a`(v5) @signature `Ll/f0/c;.a:(Ljava/net/Socket;)V` @kind static;
  #L3e5148.  goto L3e50b2;
  #L3e514a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e514c.  @monitorexit v2
  #L3e514e.  throw v0;
  #L3e5150.  v0:= new `java.io.IOException`;
  #L3e5154.  v2:= "Canceled" @kind object;
  #L3e5158.  call `<init>`(v0, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e515e.  throw v0;
  #L3e5160.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e5162.  @monitorexit v3
  #L3e5164.  throw v0;
  #L3e5166.  v0:= new `java.io.IOException`;
  #L3e516a.  v3:= "Canceled" @kind object;
  #L3e516e.  call `<init>`(v0, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e5174.  throw v0;
  #L3e5176.  v0:= new `java.lang.IllegalStateException`;
  #L3e517a.  v3:= "codec != null" @kind object;
  #L3e517e.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e5184.  throw v0;
  #L3e5186.  v0:= new `java.lang.IllegalStateException`;
  #L3e518a.  v3:= "released" @kind object;
  #L3e518e.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e5194.  throw v0;
  #L3e5196.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e5198.  @monitorexit v2
  #L3e519a.  throw v0;
  catch `java.lang.Throwable` @[L3e4f36..L3e4fba] goto L3e5196;
  catch `java.lang.Throwable` @[L3e501e..L3e50ae] goto L3e5160;
  catch `java.lang.Throwable` @[L3e510a..L3e5142] goto L3e514a;
  catch `java.lang.Throwable` @[L3e514c..L3e514e] goto L3e514a;
  catch `java.lang.Throwable` @[L3e5150..L3e5164] goto L3e5160;
  catch `java.lang.Throwable` @[L3e5166..L3e519a] goto L3e5196;
}
procedure `l.f0.f.c` `a`(`l.f0.f.g` v3 @kind this, `int` v4 , `int` v5 , `int` v6 , `int` v7 , `boolean` v8 , `boolean` v9 ) @signature `Ll/f0/f/g;.a:(IIIIZZ)Ll/f0/f/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e51e8.  call temp:= `a`(v3, v4, v5, v6, v7, v8) @signature `Ll/f0/f/g;.a:(IIIIZ)Ll/f0/f/c;` @kind direct;
  #L3e51ee.  v0:= temp @kind object;
  #L3e51f0.  v1:= v3.`l.f0.f.g.d` @type ^`l.j` @kind object;
  #L3e51f4.  @monitorenter v1
  #L3e51f6.  v2:= v0.`l.f0.f.c.l` @type ^`int`;
  #L3e51fa.  if v2 != 0 then goto L3e5202;
  #L3e51fe.  @monitorexit v1
  #L3e5200.  return v0 @kind object;
  #L3e5202.  @monitorexit v1
  #L3e5204.  call temp:= `a`(v0, v9) @signature `Ll/f0/f/c;.a:(Z)Z` @kind virtual;
  #L3e520a.  v1:= temp;
  #L3e520c.  if v1 != 0 then goto L3e5218;
  #L3e5210.  call `e`(v3) @signature `Ll/f0/f/g;.e:()V` @kind virtual;
  #L3e5216.  goto L3e51e8;
  #L3e5218.  return v0 @kind object;
  #L3e521a.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e521c.  @monitorexit v1
  #L3e521e.  throw v4;
  catch `java.lang.Throwable` @[L3e51f6..L3e5204] goto L3e521a;
  catch `java.lang.Throwable` @[L3e521c..L3e521e] goto L3e521a;
}
procedure `void` `b`(`l.f0.f.g` v3 @kind this, `l.f0.f.c` v4 @kind object) @signature `Ll/f0/f/g;.b:(Ll/f0/f/c;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e54f8.  v0:= v4.`l.f0.f.c.n` @type ^`java.util.List` @kind object;
  #L3e54fc.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e5502.  v0:= temp;
  #L3e5504.  v1:= 0I;
  #L3e5506.  if v1 >= v0 then goto L3e5538;
  #L3e550a.  v2:= v4.`l.f0.f.c.n` @type ^`java.util.List` @kind object;
  #L3e550e.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e5514.  v2:= temp @kind object;
  #L3e5516.  v2:= (`java.lang.ref.Reference`) v2 @kind object;
  #L3e551a.  call temp:= `get`(v2) @signature `Ljava/lang/ref/Reference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3e5520.  v2:= temp @kind object;
  #L3e5522.  if v2 != v3 then goto L3e5532;
  #L3e5526.  v4:= v4.`l.f0.f.c.n` @type ^`java.util.List` @kind object;
  #L3e552a.  call temp:= `remove`(v4, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L3e5530.  return @kind void;
  #L3e5532.  v1:= v1 + 1;
  #L3e5536.  goto L3e5506;
  #L3e5538.  v4:= new `java.lang.IllegalStateException`;
  #L3e553c.  call `<init>`(v4) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L3e5542.  throw v4;
}
procedure `java.net.Socket` `h`(`l.f0.f.g` v2 @kind this) @signature `Ll/f0/f/g;.h:()Ljava/net/Socket;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e4eb4.  v0:= v2.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e4eb8.  if v0 == 0 then goto L3e4ed2;
  #L3e4ebc.  v0:= v0.`l.f0.f.c.k` @type ^`boolean` @kind boolean;
  #L3e4ec0.  if v0 == 0 then goto L3e4ed2;
  #L3e4ec4.  v0:= 1I;
  #L3e4ec6.  v1:= 0I;
  #L3e4ec8.  call temp:= `a`(v2, v1, v1, v0) @signature `Ll/f0/f/g;.a:(ZZZ)Ljava/net/Socket;` @kind direct;
  #L3e4ece.  v0:= temp @kind object;
  #L3e4ed0.  return v0 @kind object;
  #L3e4ed2.  v0:= 0I;
  #L3e4ed4.  return v0 @kind object;
}
procedure `l.f0.f.d` `i`(`l.f0.f.g` v2 @kind this) @signature `Ll/f0/f/g;.i:()Ll/f0/f/d;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e5244.  v0:= `@@l.f0.a.a` @type ^`l.f0.a` @kind object;
  #L3e5248.  v1:= v2.`l.f0.f.g.d` @type ^`l.j` @kind object;
  #L3e524c.  call temp:= `a`(v0, v1) @signature `Ll/f0/a;.a:(Ll/j;)Ll/f0/f/d;` @kind virtual;
  #L3e5252.  v0:= temp @kind object;
  #L3e5254.  return v0 @kind object;
}
procedure `java.net.Socket` `a`(`l.f0.f.g` v3 @kind this, `l.f0.f.c` v4 @kind object) @signature `Ll/f0/f/g;.a:(Ll/f0/f/c;)Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e4e4c.  v0:= v3.`l.f0.f.g.n` @type ^`l.f0.g.c` @kind object;
  #L3e4e50.  if v0 != 0 then goto L3e4e98;
  #L3e4e54.  v0:= v3.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e4e58.  v0:= v0.`l.f0.f.c.n` @type ^`java.util.List` @kind object;
  #L3e4e5c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e4e62.  v0:= temp;
  #L3e4e64.  v1:= 1I;
  #L3e4e66.  if v0 != v1 then goto L3e4e98;
  #L3e4e6a.  v0:= v3.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e4e6e.  v0:= v0.`l.f0.f.c.n` @type ^`java.util.List` @kind object;
  #L3e4e72.  v2:= 0I;
  #L3e4e74.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e4e7a.  v0:= temp @kind object;
  #L3e4e7c.  v0:= (`java.lang.ref.Reference`) v0 @kind object;
  #L3e4e80.  call temp:= `a`(v3, v1, v2, v2) @signature `Ll/f0/f/g;.a:(ZZZ)Ljava/net/Socket;` @kind direct;
  #L3e4e86.  v1:= temp @kind object;
  #L3e4e88.  v3.`l.f0.f.g.j` @type ^`l.f0.f.c` := v4 @kind object;
  #L3e4e8c.  v4:= v4.`l.f0.f.c.n` @type ^`java.util.List` @kind object;
  #L3e4e90.  call temp:= `add`(v4, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e4e96.  return v1 @kind object;
  #L3e4e98.  v4:= new `java.lang.IllegalStateException`;
  #L3e4e9c.  call `<init>`(v4) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L3e4ea2.  throw v4;
}
procedure `l.f0.g.c` `a`(`l.f0.f.g` v7 @kind this, `l.v` v8 @kind object, `l.t$a` v9 @kind object, `boolean` v10 ) @signature `Ll/f0/f/g;.a:(Ll/v;Ll/t$a;Z)Ll/f0/g/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e5298.  call temp:= `a`(v9) @signature `Ll/t$a;.a:()I` @kind interface;
  #L3e529e.  v1:= temp;
  #L3e52a0.  call temp:= `b`(v9) @signature `Ll/t$a;.b:()I` @kind interface;
  #L3e52a6.  v2:= temp;
  #L3e52a8.  call temp:= `c`(v9) @signature `Ll/t$a;.c:()I` @kind interface;
  #L3e52ae.  v3:= temp;
  #L3e52b0.  call temp:= `y`(v8) @signature `Ll/v;.y:()I` @kind virtual;
  #L3e52b6.  v4:= temp;
  #L3e52b8.  call temp:= `E`(v8) @signature `Ll/v;.E:()Z` @kind virtual;
  #L3e52be.  v5:= temp;
  #L3e52c0.  v0:= v7 @kind object;
  #L3e52c2.  v6:= v10;
  #L3e52c4.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Ll/f0/f/g;.a:(IIIIZZ)Ll/f0/f/c;` @kind direct;
  #L3e52ca.  v10:= temp @kind object;
  #L3e52cc.  call temp:= `a`(v10, v8, v9, v7) @signature `Ll/f0/f/c;.a:(Ll/v;Ll/t$a;Ll/f0/f/g;)Ll/f0/g/c;` @kind virtual;
  #L3e52d2.  v8:= temp @kind object;
  #L3e52d4.  v9:= v7.`l.f0.f.g.d` @type ^`l.j` @kind object;
  #L3e52d8.  @monitorenter v9
  #L3e52da.  v7.`l.f0.f.g.n` @type ^`l.f0.g.c` := v8 @kind object;
  #L3e52de.  @monitorexit v9
  #L3e52e0.  return v8 @kind object;
  #L3e52e2.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e52e4.  @monitorexit v9
  #L3e52e6.  throw v8;
  #L3e52e8.  v8:= Exception @type ^`java.io.IOException` @kind object;
  #L3e52ea.  v9:= new `l.f0.f.e`;
  #L3e52ee.  call `<init>`(v9, v8) @signature `Ll/f0/f/e;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L3e52f4.  throw v9;
  catch `java.io.IOException` @[L3e52c4..L3e52da] goto L3e52e8;
  catch `java.lang.Throwable` @[L3e52da..L3e52e6] goto L3e52e2;
  catch `java.io.IOException` @[L3e52e6..L3e52e8] goto L3e52e8;
}
procedure `void` `a`(`l.f0.f.g` v3 @kind this) @signature `Ll/f0/f/g;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e53b4.  v0:= v3.`l.f0.f.g.d` @type ^`l.j` @kind object;
  #L3e53b8.  @monitorenter v0
  #L3e53ba.  v1:= 1I;
  #L3e53bc.  v3.`l.f0.f.g.m` @type ^`boolean` := v1 @kind boolean;
  #L3e53c0.  v1:= v3.`l.f0.f.g.n` @type ^`l.f0.g.c` @kind object;
  #L3e53c4.  v2:= v3.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e53c8.  @monitorexit v0
  #L3e53ca.  if v1 == 0 then goto L3e53d6;
  #L3e53ce.  call `cancel`(v1) @signature `Ll/f0/g/c;.cancel:()V` @kind interface;
  #L3e53d4.  goto L3e53e0;
  #L3e53d6.  if v2 == 0 then goto L3e53e0;
  #L3e53da.  call `a`(v2) @signature `Ll/f0/f/c;.a:()V` @kind virtual;
  #L3e53e0.  return @kind void;
  #L3e53e2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e53e4.  @monitorexit v0
  #L3e53e6.  throw v1;
  catch `java.lang.Throwable` @[L3e53bc..L3e53ca] goto L3e53e2;
  catch `java.lang.Throwable` @[L3e53e4..L3e53e6] goto L3e53e2;
}
procedure `void` `a`(`l.f0.f.g` v6 @kind this, `java.io.IOException` v7 @kind object) @signature `Ll/f0/f/g;.a:(Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e5554.  v0:= v6.`l.f0.f.g.d` @type ^`l.j` @kind object;
  #L3e5558.  @monitorenter v0
  #L3e555a.  v1:= instanceof @variable v7 @type ^`l.f0.i.n` @kind boolean;
  #L3e555e.  v2:= 0I;
  #L3e5560.  v3:= 0I;
  #L3e5562.  v4:= 1I;
  #L3e5564.  if v1 == 0 then goto L3e559a;
  #L3e5568.  v7:= (`l.f0.i.n`) v7 @kind object;
  #L3e556c.  v7:= v7.`l.f0.i.n.b` @type ^`l.f0.i.b` @kind object;
  #L3e5570.  v1:= `@@l.f0.i.b.g` @type ^`l.f0.i.b` @kind object;
  #L3e5574.  if v7 != v1 then goto L3e558c;
  #L3e5578.  v7:= v6.`l.f0.f.g.i` @type ^`int`;
  #L3e557c.  v7:= v7 + v4 @kind int;
  #L3e557e.  v6.`l.f0.f.g.i` @type ^`int` := v7;
  #L3e5582.  v7:= v6.`l.f0.f.g.i` @type ^`int`;
  #L3e5586.  if v7 <= v4 then goto L3e55e6;
  #L3e558a.  goto L3e5594;
  #L3e558c.  v1:= `@@l.f0.i.b.h` @type ^`l.f0.i.b` @kind object;
  #L3e5590.  if v7 == v1 then goto L3e55e6;
  #L3e5594.  v6.`l.f0.f.g.c` @type ^`l.c0` := v3 @kind object;
  #L3e5598.  goto L3e55e2;
  #L3e559a.  v1:= v6.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e559e.  if v1 == 0 then goto L3e55e6;
  #L3e55a2.  v1:= v6.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e55a6.  call temp:= `c`(v1) @signature `Ll/f0/f/c;.c:()Z` @kind virtual;
  #L3e55ac.  v1:= temp;
  #L3e55ae.  if v1 == 0 then goto L3e55ba;
  #L3e55b2.  v1:= instanceof @variable v7 @type ^`l.f0.i.a` @kind boolean;
  #L3e55b6.  if v1 == 0 then goto L3e55e6;
  #L3e55ba.  v1:= v6.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e55be.  v1:= v1.`l.f0.f.c.l` @type ^`int`;
  #L3e55c2.  if v1 != 0 then goto L3e55e2;
  #L3e55c6.  v1:= v6.`l.f0.f.g.c` @type ^`l.c0` @kind object;
  #L3e55ca.  if v1 == 0 then goto L3e5594;
  #L3e55ce.  if v7 == 0 then goto L3e5594;
  #L3e55d2.  v1:= v6.`l.f0.f.g.h` @type ^`l.f0.f.f` @kind object;
  #L3e55d6.  v5:= v6.`l.f0.f.g.c` @type ^`l.c0` @kind object;
  #L3e55da.  call `a`(v1, v5, v7) @signature `Ll/f0/f/f;.a:(Ll/c0;Ljava/io/IOException;)V` @kind virtual;
  #L3e55e0.  goto L3e5594;
  #L3e55e2.  v7:= 1I;
  #L3e55e4.  goto L3e55e8;
  #L3e55e6.  v7:= 0I;
  #L3e55e8.  v1:= v6.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e55ec.  call temp:= `a`(v6, v7, v2, v4) @signature `Ll/f0/f/g;.a:(ZZZ)Ljava/net/Socket;` @kind direct;
  #L3e55f2.  v7:= temp @kind object;
  #L3e55f4.  v2:= v6.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e55f8.  if v2 != 0 then goto L3e5604;
  #L3e55fc.  v2:= v6.`l.f0.f.g.k` @type ^`boolean` @kind boolean;
  #L3e5600.  if v2 != 0 then goto L3e5606;
  #L3e5604.  v1:= v3 @kind object;
  #L3e5606.  @monitorexit v0
  #L3e5608.  call `a`(v7) @signature `Ll/f0/c;.a:(Ljava/net/Socket;)V` @kind static;
  #L3e560e.  if v1 == 0 then goto L3e5620;
  #L3e5612.  v7:= v6.`l.f0.f.g.f` @type ^`l.p` @kind object;
  #L3e5616.  v0:= v6.`l.f0.f.g.e` @type ^`l.e` @kind object;
  #L3e561a.  call `b`(v7, v0, v1) @signature `Ll/p;.b:(Ll/e;Ll/i;)V` @kind virtual;
  #L3e5620.  return @kind void;
  #L3e5622.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e5624.  @monitorexit v0
  #L3e5626.  throw v7;
  catch `java.lang.Throwable` @[L3e555a..L3e5608] goto L3e5622;
  catch `java.lang.Throwable` @[L3e5624..L3e5626] goto L3e5622;
}
procedure `void` `a`(`l.f0.f.g` v1 @kind this, `l.f0.f.c` v2 @kind object, `boolean` v3 ) @signature `Ll/f0/f/g;.a:(Ll/f0/f/c;Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e536c.  v0:= v1.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e5370.  if v0 != 0 then goto L3e5396;
  #L3e5374.  v1.`l.f0.f.g.j` @type ^`l.f0.f.c` := v2 @kind object;
  #L3e5378.  v1.`l.f0.f.g.k` @type ^`boolean` := v3 @kind boolean;
  #L3e537c.  v2:= v2.`l.f0.f.c.n` @type ^`java.util.List` @kind object;
  #L3e5380.  v3:= new `l.f0.f.g$a`;
  #L3e5384.  v0:= v1.`l.f0.f.g.g` @type ^`java.lang.Object` @kind object;
  #L3e5388.  call `<init>`(v3, v1, v0) @signature `Ll/f0/f/g$a;.<init>:(Ll/f0/f/g;Ljava/lang/Object;)V` @kind direct;
  #L3e538e.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e5394.  return @kind void;
  #L3e5396.  v2:= new `java.lang.IllegalStateException`;
  #L3e539a.  call `<init>`(v2) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L3e53a0.  throw v2;
}
procedure `void` `a`(`l.f0.f.g` v2 @kind this, `boolean` v3 , `l.f0.g.c` v4 @kind object, `long` v5 , `java.io.IOException` v7 @kind object) @signature `Ll/f0/f/g;.a:(ZLl/f0/g/c;JLjava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e564c.  v0:= v2.`l.f0.f.g.f` @type ^`l.p` @kind object;
  #L3e5650.  v1:= v2.`l.f0.f.g.e` @type ^`l.e` @kind object;
  #L3e5654.  call `b`(v0, v1, v5) @signature `Ll/p;.b:(Ll/e;J)V` @kind virtual;
  #L3e565a.  v5:= v2.`l.f0.f.g.d` @type ^`l.j` @kind object;
  #L3e565e.  @monitorenter v5
  #L3e5660.  if v4 == 0 then goto L3e56fe;
  #L3e5664.  v6:= v2.`l.f0.f.g.n` @type ^`l.f0.g.c` @kind object;
  #L3e5668.  if v4 != v6 then goto L3e56fe;
  #L3e566c.  v4:= 1I;
  #L3e566e.  if v3 != 0 then goto L3e5680;
  #L3e5672.  v6:= v2.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e5676.  v0:= v6.`l.f0.f.c.l` @type ^`int`;
  #L3e567a.  v0:= v0 + v4 @kind int;
  #L3e567c.  v6.`l.f0.f.c.l` @type ^`int` := v0;
  #L3e5680.  v6:= v2.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e5684.  v0:= 0I;
  #L3e5686.  call temp:= `a`(v2, v3, v0, v4) @signature `Ll/f0/f/g;.a:(ZZZ)Ljava/net/Socket;` @kind direct;
  #L3e568c.  v3:= temp @kind object;
  #L3e568e.  v4:= v2.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e5692.  v0:= 0I;
  #L3e5694.  if v4 == 0 then goto L3e569a;
  #L3e5698.  v6:= v0 @kind object;
  #L3e569a.  v4:= v2.`l.f0.f.g.l` @type ^`boolean` @kind boolean;
  #L3e569e.  @monitorexit v5
  #L3e56a0.  call `a`(v3) @signature `Ll/f0/c;.a:(Ljava/net/Socket;)V` @kind static;
  #L3e56a6.  if v6 == 0 then goto L3e56b8;
  #L3e56aa.  v3:= v2.`l.f0.f.g.f` @type ^`l.p` @kind object;
  #L3e56ae.  v5:= v2.`l.f0.f.g.e` @type ^`l.e` @kind object;
  #L3e56b2.  call `b`(v3, v5, v6) @signature `Ll/p;.b:(Ll/e;Ll/i;)V` @kind virtual;
  #L3e56b8.  if v7 == 0 then goto L3e56dc;
  #L3e56bc.  v3:= `@@l.f0.a.a` @type ^`l.f0.a` @kind object;
  #L3e56c0.  v4:= v2.`l.f0.f.g.e` @type ^`l.e` @kind object;
  #L3e56c4.  call temp:= `a`(v3, v4, v7) @signature `Ll/f0/a;.a:(Ll/e;Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L3e56ca.  v3:= temp @kind object;
  #L3e56cc.  v4:= v2.`l.f0.f.g.f` @type ^`l.p` @kind object;
  #L3e56d0.  v5:= v2.`l.f0.f.g.e` @type ^`l.e` @kind object;
  #L3e56d4.  call `a`(v4, v5, v3) @signature `Ll/p;.a:(Ll/e;Ljava/io/IOException;)V` @kind virtual;
  #L3e56da.  goto L3e56fc;
  #L3e56dc.  if v4 == 0 then goto L3e56fc;
  #L3e56e0.  v3:= `@@l.f0.a.a` @type ^`l.f0.a` @kind object;
  #L3e56e4.  v4:= v2.`l.f0.f.g.e` @type ^`l.e` @kind object;
  #L3e56e8.  call temp:= `a`(v3, v4, v0) @signature `Ll/f0/a;.a:(Ll/e;Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L3e56ee.  v3:= v2.`l.f0.f.g.f` @type ^`l.p` @kind object;
  #L3e56f2.  v4:= v2.`l.f0.f.g.e` @type ^`l.e` @kind object;
  #L3e56f6.  call `a`(v3, v4) @signature `Ll/p;.a:(Ll/e;)V` @kind virtual;
  #L3e56fc.  return @kind void;
  #L3e56fe.  v3:= new `java.lang.IllegalStateException`;
  #L3e5702.  v6:= new `java.lang.StringBuilder`;
  #L3e5706.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e570c.  v7:= "expected " @kind object;
  #L3e5710.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e5716.  v7:= v2.`l.f0.f.g.n` @type ^`l.f0.g.c` @kind object;
  #L3e571a.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e5720.  v7:= " but was " @kind object;
  #L3e5724.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e572a.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e5730.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e5736.  v4:= temp @kind object;
  #L3e5738.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e573e.  throw v3;
  #L3e5740.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e5742.  @monitorexit v5
  #L3e5744.  throw v3;
  catch `java.lang.Throwable` @[L3e5664..L3e56a0] goto L3e5740;
  catch `java.lang.Throwable` @[L3e56fe..L3e5744] goto L3e5740;
}
procedure `l.f0.g.c` `b`(`l.f0.f.g` v2 @kind this) @signature `Ll/f0/f/g;.b:()Ll/f0/g/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e5268.  v0:= v2.`l.f0.f.g.d` @type ^`l.j` @kind object;
  #L3e526c.  @monitorenter v0
  #L3e526e.  v1:= v2.`l.f0.f.g.n` @type ^`l.f0.g.c` @kind object;
  #L3e5272.  @monitorexit v0
  #L3e5274.  return v1 @kind object;
  #L3e5276.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e5278.  @monitorexit v0
  #L3e527a.  throw v1;
  catch `java.lang.Throwable` @[L3e526e..L3e527a] goto L3e5276;
}
procedure `l.f0.f.c` `c`(`l.f0.f.g` v1 @kind this) @signature `Ll/f0/f/g;.c:()Ll/f0/f/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e4f00.  @monitorenter v1
  #L3e4f02.  v0:= v1.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e4f06.  @monitorexit v1
  #L3e4f08.  return v0 @kind object;
  #L3e4f0a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e4f0c.  @monitorexit v1
  #L3e4f0e.  throw v0;
  catch `java.lang.Throwable` @[L3e4f02..L3e4f06] goto L3e4f0a;
}
procedure `boolean` `d`(`l.f0.f.g` v1 @kind this) @signature `Ll/f0/f/g;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e4d20.  v0:= v1.`l.f0.f.g.c` @type ^`l.c0` @kind object;
  #L3e4d24.  if v0 != 0 then goto L3e4d52;
  #L3e4d28.  v0:= v1.`l.f0.f.g.b` @type ^`l.f0.f.f$a` @kind object;
  #L3e4d2c.  if v0 == 0 then goto L3e4d3c;
  #L3e4d30.  call temp:= `b`(v0) @signature `Ll/f0/f/f$a;.b:()Z` @kind virtual;
  #L3e4d36.  v0:= temp;
  #L3e4d38.  if v0 != 0 then goto L3e4d52;
  #L3e4d3c.  v0:= v1.`l.f0.f.g.h` @type ^`l.f0.f.f` @kind object;
  #L3e4d40.  call temp:= `a`(v0) @signature `Ll/f0/f/f;.a:()Z` @kind virtual;
  #L3e4d46.  v0:= temp;
  #L3e4d48.  if v0 == 0 then goto L3e4d4e;
  #L3e4d4c.  goto L3e4d52;
  #L3e4d4e.  v0:= 0I;
  #L3e4d50.  goto L3e4d54;
  #L3e4d52.  v0:= 1I;
  #L3e4d54.  return v0;
}
procedure `void` `e`(`l.f0.f.g` v4 @kind this) @signature `Ll/f0/f/g;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e540c.  v0:= v4.`l.f0.f.g.d` @type ^`l.j` @kind object;
  #L3e5410.  @monitorenter v0
  #L3e5412.  v1:= v4.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e5416.  v2:= 1I;
  #L3e5418.  v3:= 0I;
  #L3e541a.  call temp:= `a`(v4, v2, v3, v3) @signature `Ll/f0/f/g;.a:(ZZZ)Ljava/net/Socket;` @kind direct;
  #L3e5420.  v2:= temp @kind object;
  #L3e5422.  v3:= v4.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e5426.  if v3 == 0 then goto L3e542c;
  #L3e542a.  v1:= 0I;
  #L3e542c.  @monitorexit v0
  #L3e542e.  call `a`(v2) @signature `Ll/f0/c;.a:(Ljava/net/Socket;)V` @kind static;
  #L3e5434.  if v1 == 0 then goto L3e5446;
  #L3e5438.  v0:= v4.`l.f0.f.g.f` @type ^`l.p` @kind object;
  #L3e543c.  v2:= v4.`l.f0.f.g.e` @type ^`l.e` @kind object;
  #L3e5440.  call `b`(v0, v2, v1) @signature `Ll/p;.b:(Ll/e;Ll/i;)V` @kind virtual;
  #L3e5446.  return @kind void;
  #L3e5448.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e544a.  @monitorexit v0
  #L3e544c.  throw v1;
  catch `java.lang.Throwable` @[L3e5412..L3e542e] goto L3e5448;
  catch `java.lang.Throwable` @[L3e544a..L3e544c] goto L3e5448;
}
procedure `void` `f`(`l.f0.f.g` v5 @kind this) @signature `Ll/f0/f/g;.f:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e5474.  v0:= v5.`l.f0.f.g.d` @type ^`l.j` @kind object;
  #L3e5478.  @monitorenter v0
  #L3e547a.  v1:= v5.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e547e.  v2:= 1I;
  #L3e5480.  v3:= 0I;
  #L3e5482.  call temp:= `a`(v5, v3, v2, v3) @signature `Ll/f0/f/g;.a:(ZZZ)Ljava/net/Socket;` @kind direct;
  #L3e5488.  v2:= temp @kind object;
  #L3e548a.  v3:= v5.`l.f0.f.g.j` @type ^`l.f0.f.c` @kind object;
  #L3e548e.  v4:= 0I;
  #L3e5490.  if v3 == 0 then goto L3e5496;
  #L3e5494.  v1:= v4 @kind object;
  #L3e5496.  @monitorexit v0
  #L3e5498.  call `a`(v2) @signature `Ll/f0/c;.a:(Ljava/net/Socket;)V` @kind static;
  #L3e549e.  if v1 == 0 then goto L3e54cc;
  #L3e54a2.  v0:= `@@l.f0.a.a` @type ^`l.f0.a` @kind object;
  #L3e54a6.  v2:= v5.`l.f0.f.g.e` @type ^`l.e` @kind object;
  #L3e54aa.  call temp:= `a`(v0, v2, v4) @signature `Ll/f0/a;.a:(Ll/e;Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L3e54b0.  v0:= v5.`l.f0.f.g.f` @type ^`l.p` @kind object;
  #L3e54b4.  v2:= v5.`l.f0.f.g.e` @type ^`l.e` @kind object;
  #L3e54b8.  call `b`(v0, v2, v1) @signature `Ll/p;.b:(Ll/e;Ll/i;)V` @kind virtual;
  #L3e54be.  v0:= v5.`l.f0.f.g.f` @type ^`l.p` @kind object;
  #L3e54c2.  v1:= v5.`l.f0.f.g.e` @type ^`l.e` @kind object;
  #L3e54c6.  call `a`(v0, v1) @signature `Ll/p;.a:(Ll/e;)V` @kind virtual;
  #L3e54cc.  return @kind void;
  #L3e54ce.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e54d0.  @monitorexit v0
  #L3e54d2.  throw v1;
  catch `java.lang.Throwable` @[L3e547a..L3e5498] goto L3e54ce;
  catch `java.lang.Throwable` @[L3e54d0..L3e54d2] goto L3e54ce;
}
procedure `l.c0` `g`(`l.f0.f.g` v1 @kind this) @signature `Ll/f0/f/g;.g:()Ll/c0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e4ee8.  v0:= v1.`l.f0.f.g.c` @type ^`l.c0` @kind object;
  #L3e4eec.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`l.f0.f.g` v1 @kind this) @signature `Ll/f0/f/g;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e4d68.  call temp:= `c`(v1) @signature `Ll/f0/f/g;.c:()Ll/f0/f/c;` @kind virtual;
  #L3e4d6e.  v0:= temp @kind object;
  #L3e4d70.  if v0 == 0 then goto L3e4d7e;
  #L3e4d74.  call temp:= `toString`(v0) @signature `Ll/f0/f/c;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e4d7a.  v0:= temp @kind object;
  #L3e4d7c.  goto L3e4d8a;
  #L3e4d7e.  v0:= v1.`l.f0.f.g.a` @type ^`l.a` @kind object;
  #L3e4d82.  call temp:= `toString`(v0) @signature `Ll/a;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e4d88.  v0:= temp @kind object;
  #L3e4d8a.  return v0 @kind object;
}
