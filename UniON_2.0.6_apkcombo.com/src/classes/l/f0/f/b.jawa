record `l.f0.f.b` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `l.f0.f.b.a` @AccessFlag PRIVATE_FINAL;
  `int` `l.f0.f.b.b` @AccessFlag PRIVATE;
  `boolean` `l.f0.f.b.c` @AccessFlag PRIVATE;
  `boolean` `l.f0.f.b.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`l.f0.f.b` v1 @kind this, `java.util.List` v2 @kind object) @signature `Ll/f0/f/b;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e34b0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e34b6.  v0:= 0I;
  #L3e34b8.  v1.`l.f0.f.b.b` @type ^`int` := v0;
  #L3e34bc.  v1.`l.f0.f.b.a` @type ^`java.util.List` := v2 @kind object;
  #L3e34c0.  return @kind void;
}
procedure `boolean` `b`(`l.f0.f.b` v2 @kind this, `javax.net.ssl.SSLSocket` v3 @kind object) @signature `Ll/f0/f/b;.b:(Ljavax/net/ssl/SSLSocket;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e338c.  v0:= v2.`l.f0.f.b.b` @type ^`int`;
  #L3e3390.  v1:= v2.`l.f0.f.b.a` @type ^`java.util.List` @kind object;
  #L3e3394.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e339a.  v1:= temp;
  #L3e339c.  if v0 >= v1 then goto L3e33c6;
  #L3e33a0.  v1:= v2.`l.f0.f.b.a` @type ^`java.util.List` @kind object;
  #L3e33a4.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e33aa.  v1:= temp @kind object;
  #L3e33ac.  v1:= (`l.k`) v1 @kind object;
  #L3e33b0.  call temp:= `a`(v1, v3) @signature `Ll/k;.a:(Ljavax/net/ssl/SSLSocket;)Z` @kind virtual;
  #L3e33b6.  v1:= temp;
  #L3e33b8.  if v1 == 0 then goto L3e33c0;
  #L3e33bc.  v3:= 1I;
  #L3e33be.  return v3;
  #L3e33c0.  v0:= v0 + 1;
  #L3e33c4.  goto L3e3390;
  #L3e33c6.  v3:= 0I;
  #L3e33c8.  return v3;
}
procedure `l.k` `a`(`l.f0.f.b` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object) @signature `Ll/f0/f/b;.a:(Ljavax/net/ssl/SSLSocket;)Ll/k;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e33dc.  v0:= v4.`l.f0.f.b.b` @type ^`int`;
  #L3e33e0.  v1:= v4.`l.f0.f.b.a` @type ^`java.util.List` @kind object;
  #L3e33e4.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e33ea.  v1:= temp;
  #L3e33ec.  if v0 >= v1 then goto L3e3416;
  #L3e33f0.  v2:= v4.`l.f0.f.b.a` @type ^`java.util.List` @kind object;
  #L3e33f4.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e33fa.  v2:= temp @kind object;
  #L3e33fc.  v2:= (`l.k`) v2 @kind object;
  #L3e3400.  call temp:= `a`(v2, v5) @signature `Ll/k;.a:(Ljavax/net/ssl/SSLSocket;)Z` @kind virtual;
  #L3e3406.  v3:= temp;
  #L3e3408.  v0:= v0 + 1;
  #L3e340c.  if v3 == 0 then goto L3e33ec;
  #L3e3410.  v4.`l.f0.f.b.b` @type ^`int` := v0;
  #L3e3414.  goto L3e3418;
  #L3e3416.  v2:= 0I;
  #L3e3418.  if v2 == 0 then goto L3e3438;
  #L3e341c.  call temp:= `b`(v4, v5) @signature `Ll/f0/f/b;.b:(Ljavax/net/ssl/SSLSocket;)Z` @kind direct;
  #L3e3422.  v0:= temp;
  #L3e3424.  v4.`l.f0.f.b.c` @type ^`boolean` := v0 @kind boolean;
  #L3e3428.  v0:= `@@l.f0.a.a` @type ^`l.f0.a` @kind object;
  #L3e342c.  v1:= v4.`l.f0.f.b.d` @type ^`boolean` @kind boolean;
  #L3e3430.  call `a`(v0, v2, v5, v1) @signature `Ll/f0/a;.a:(Ll/k;Ljavax/net/ssl/SSLSocket;Z)V` @kind virtual;
  #L3e3436.  return v2 @kind object;
  #L3e3438.  v0:= new `java.net.UnknownServiceException`;
  #L3e343c.  v1:= new `java.lang.StringBuilder`;
  #L3e3440.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e3446.  v2:= "Unable to find acceptable protocols. isFallback=" @kind object;
  #L3e344a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3450.  v2:= v4.`l.f0.f.b.d` @type ^`boolean` @kind boolean;
  #L3e3454.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e345a.  v2:= ", modes=" @kind object;
  #L3e345e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3464.  v2:= v4.`l.f0.f.b.a` @type ^`java.util.List` @kind object;
  #L3e3468.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e346e.  v2:= ", supported protocols=" @kind object;
  #L3e3472.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e3478.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L3e347e.  v5:= temp @kind object;
  #L3e3480.  call temp:= `toString`(v5) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3e3486.  v5:= temp @kind object;
  #L3e3488.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e348e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e3494.  v5:= temp @kind object;
  #L3e3496.  call `<init>`(v0, v5) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e349c.  throw v0;
}
procedure `boolean` `a`(`l.f0.f.b` v4 @kind this, `java.io.IOException` v5 @kind object) @signature `Ll/f0/f/b;.a:(Ljava/io/IOException;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e3318.  v0:= 1I;
  #L3e331a.  v4.`l.f0.f.b.d` @type ^`boolean` := v0 @kind boolean;
  #L3e331e.  v1:= v4.`l.f0.f.b.c` @type ^`boolean` @kind boolean;
  #L3e3322.  v2:= 0I;
  #L3e3324.  if v1 != 0 then goto L3e332a;
  #L3e3328.  return v2;
  #L3e332a.  v1:= instanceof @variable v5 @type ^`java.net.ProtocolException` @kind boolean;
  #L3e332e.  if v1 == 0 then goto L3e3334;
  #L3e3332.  return v2;
  #L3e3334.  v1:= instanceof @variable v5 @type ^`java.io.InterruptedIOException` @kind boolean;
  #L3e3338.  if v1 == 0 then goto L3e333e;
  #L3e333c.  return v2;
  #L3e333e.  v1:= instanceof @variable v5 @type ^`javax.net.ssl.SSLHandshakeException` @kind boolean;
  #L3e3342.  if v1 == 0 then goto L3e3358;
  #L3e3346.  call temp:= `getCause`(v5) @signature `Ljava/io/IOException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L3e334c.  v3:= temp @kind object;
  #L3e334e.  v3:= instanceof @variable v3 @type ^`java.security.cert.CertificateException` @kind boolean;
  #L3e3352.  if v3 == 0 then goto L3e3358;
  #L3e3356.  return v2;
  #L3e3358.  v3:= instanceof @variable v5 @type ^`javax.net.ssl.SSLPeerUnverifiedException` @kind boolean;
  #L3e335c.  if v3 == 0 then goto L3e3362;
  #L3e3360.  return v2;
  #L3e3362.  if v1 != 0 then goto L3e337a;
  #L3e3366.  v1:= instanceof @variable v5 @type ^`javax.net.ssl.SSLProtocolException` @kind boolean;
  #L3e336a.  if v1 != 0 then goto L3e337a;
  #L3e336e.  v5:= instanceof @variable v5 @type ^`javax.net.ssl.SSLException` @kind boolean;
  #L3e3372.  if v5 == 0 then goto L3e3378;
  #L3e3376.  goto L3e337a;
  #L3e3378.  v0:= 0I;
  #L3e337a.  return v0;
}
