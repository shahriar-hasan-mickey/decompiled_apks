record `l.f0.h.a` @kind class @AccessFlag PUBLIC_FINAL extends `l.f0.g.c` @kind interface {
  `l.v` `l.f0.h.a.a` @AccessFlag FINAL;
  `l.f0.f.g` `l.f0.h.a.b` @AccessFlag FINAL;
  `m.e` `l.f0.h.a.c` @AccessFlag FINAL;
  `m.d` `l.f0.h.a.d` @AccessFlag FINAL;
  `int` `l.f0.h.a.e` @AccessFlag ;
  `long` `l.f0.h.a.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`l.f0.h.a` v2 @kind this, `l.v` v3 @kind object, `l.f0.f.g` v4 @kind object, `m.e` v5 @kind object, `m.d` v6 @kind object) @signature `Ll/f0/h/a;.<init>:(Ll/v;Ll/f0/f/g;Lm/e;Lm/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3e8020.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e8026.  v0:= 0I;
  #L3e8028.  v2.`l.f0.h.a.e` @type ^`int` := v0;
  #L3e802c.  v0:= 262144L;
  #L3e8032.  v2.`l.f0.h.a.f` @type ^`long` := v0 @kind wide;
  #L3e8036.  v2.`l.f0.h.a.a` @type ^`l.v` := v3 @kind object;
  #L3e803a.  v2.`l.f0.h.a.b` @type ^`l.f0.f.g` := v4 @kind object;
  #L3e803e.  v2.`l.f0.h.a.c` @type ^`m.e` := v5 @kind object;
  #L3e8042.  v2.`l.f0.h.a.d` @type ^`m.d` := v6 @kind object;
  #L3e8046.  return @kind void;
}
procedure `java.lang.String` `f`(`l.f0.h.a` v5 @kind this) @signature `Ll/f0/h/a;.f:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e7b4c.  v0:= v5.`l.f0.h.a.c` @type ^`m.e` @kind object;
  #L3e7b50.  v1:= v5.`l.f0.h.a.f` @type ^`long` @kind wide;
  #L3e7b54.  call temp:= `c`(v0, v1) @signature `Lm/e;.c:(J)Ljava/lang/String;` @kind interface;
  #L3e7b5a.  v0:= temp @kind object;
  #L3e7b5c.  v1:= v5.`l.f0.h.a.f` @type ^`long` @kind wide;
  #L3e7b60.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3e7b66.  v3:= temp;
  #L3e7b68.  v3:= (`long`) v3 @kind i2l;
  #L3e7b6a.  v1:= v1 - v3 @kind long;
  #L3e7b6c.  v5.`l.f0.h.a.f` @type ^`long` := v1 @kind wide;
  #L3e7b70.  return v0 @kind object;
}
procedure `l.a0$a` `a`(`l.f0.h.a` v4 @kind this, `boolean` v5 ) @signature `Ll/f0/h/a;.a:(Z)Ll/a0$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e7bc8.  v0:= v4.`l.f0.h.a.e` @type ^`int`;
  #L3e7bcc.  v1:= 3I;
  #L3e7bce.  v2:= 1I;
  #L3e7bd0.  if v0 == v2 then goto L3e7c0c;
  #L3e7bd4.  if v0 != v1 then goto L3e7bda;
  #L3e7bd8.  goto L3e7c0c;
  #L3e7bda.  v5:= new `java.lang.IllegalStateException`;
  #L3e7bde.  v0:= new `java.lang.StringBuilder`;
  #L3e7be2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e7be8.  v1:= "state: " @kind object;
  #L3e7bec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e7bf2.  v1:= v4.`l.f0.h.a.e` @type ^`int`;
  #L3e7bf6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e7bfc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e7c02.  v0:= temp @kind object;
  #L3e7c04.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e7c0a.  throw v5;
  #L3e7c0c.  call temp:= `f`(v4) @signature `Ll/f0/h/a;.f:()Ljava/lang/String;` @kind direct;
  #L3e7c12.  v0:= temp @kind object;
  #L3e7c14.  call temp:= `a`(v0) @signature `Ll/f0/g/k;.a:(Ljava/lang/String;)Ll/f0/g/k;` @kind static;
  #L3e7c1a.  v0:= temp @kind object;
  #L3e7c1c.  v2:= new `l.a0$a`;
  #L3e7c20.  call `<init>`(v2) @signature `Ll/a0$a;.<init>:()V` @kind direct;
  #L3e7c26.  v3:= v0.`l.f0.g.k.a` @type ^`l.w` @kind object;
  #L3e7c2a.  call temp:= `a`(v2, v3) @signature `Ll/a0$a;.a:(Ll/w;)Ll/a0$a;` @kind virtual;
  #L3e7c30.  v3:= v0.`l.f0.g.k.b` @type ^`int`;
  #L3e7c34.  call temp:= `a`(v2, v3) @signature `Ll/a0$a;.a:(I)Ll/a0$a;` @kind virtual;
  #L3e7c3a.  v3:= v0.`l.f0.g.k.c` @type ^`java.lang.String` @kind object;
  #L3e7c3e.  call temp:= `a`(v2, v3) @signature `Ll/a0$a;.a:(Ljava/lang/String;)Ll/a0$a;` @kind virtual;
  #L3e7c44.  call temp:= `e`(v4) @signature `Ll/f0/h/a;.e:()Ll/r;` @kind virtual;
  #L3e7c4a.  v3:= temp @kind object;
  #L3e7c4c.  call temp:= `a`(v2, v3) @signature `Ll/a0$a;.a:(Ll/r;)Ll/a0$a;` @kind virtual;
  #L3e7c52.  v3:= 100I;
  #L3e7c56.  if v5 == 0 then goto L3e7c66;
  #L3e7c5a.  v5:= v0.`l.f0.g.k.b` @type ^`int`;
  #L3e7c5e.  if v5 != v3 then goto L3e7c66;
  #L3e7c62.  v5:= 0I;
  #L3e7c64.  return v5 @kind object;
  #L3e7c66.  v5:= v0.`l.f0.g.k.b` @type ^`int`;
  #L3e7c6a.  if v5 != v3 then goto L3e7c74;
  #L3e7c6e.  v4.`l.f0.h.a.e` @type ^`int` := v1;
  #L3e7c72.  return v2 @kind object;
  #L3e7c74.  v5:= 4I;
  #L3e7c76.  v4.`l.f0.h.a.e` @type ^`int` := v5;
  #L3e7c7a.  return v2 @kind object;
  #L3e7c7c.  v5:= Exception @type ^`java.io.EOFException` @kind object;
  #L3e7c7e.  v0:= new `java.io.IOException`;
  #L3e7c82.  v1:= new `java.lang.StringBuilder`;
  #L3e7c86.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e7c8c.  v2:= "unexpected end of stream on " @kind object;
  #L3e7c90.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e7c96.  v2:= v4.`l.f0.h.a.b` @type ^`l.f0.f.g` @kind object;
  #L3e7c9a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e7ca0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e7ca6.  v1:= temp @kind object;
  #L3e7ca8.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e7cae.  call temp:= `initCause`(v0, v5) @signature `Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L3e7cb4.  throw v0;
  catch `java.io.EOFException` @[L3e7c0c..L3e7c7a] goto L3e7c7c;
}
procedure `l.b0` `a`(`l.f0.h.a` v6 @kind this, `l.a0` v7 @kind object) @signature `Ll/f0/h/a;.a:(Ll/a0;)Ll/b0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e7cd8.  v0:= v6.`l.f0.h.a.b` @type ^`l.f0.f.g` @kind object;
  #L3e7cdc.  v1:= v0.`l.f0.f.g.f` @type ^`l.p` @kind object;
  #L3e7ce0.  v0:= v0.`l.f0.f.g.e` @type ^`l.e` @kind object;
  #L3e7ce4.  call `e`(v1, v0) @signature `Ll/p;.e:(Ll/e;)V` @kind virtual;
  #L3e7cea.  v0:= "Content-Type" @kind object;
  #L3e7cee.  call temp:= `b`(v7, v0) @signature `Ll/a0;.b:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3e7cf4.  v0:= temp @kind object;
  #L3e7cf6.  call temp:= `b`(v7) @signature `Ll/f0/g/e;.b:(Ll/a0;)Z` @kind static;
  #L3e7cfc.  v1:= temp;
  #L3e7cfe.  if v1 != 0 then goto L3e7d22;
  #L3e7d02.  v1:= 0L;
  #L3e7d06.  call temp:= `b`(v6, v1) @signature `Ll/f0/h/a;.b:(J)Lm/s;` @kind virtual;
  #L3e7d0c.  v7:= temp @kind object;
  #L3e7d0e.  v3:= new `l.f0.g.h`;
  #L3e7d12.  call temp:= `a`(v7) @signature `Lm/l;.a:(Lm/s;)Lm/e;` @kind static;
  #L3e7d18.  v7:= temp @kind object;
  #L3e7d1a.  call `<init>`(v3, v0, v1, v7) @signature `Ll/f0/g/h;.<init>:(Ljava/lang/String;JLm/e;)V` @kind direct;
  #L3e7d20.  return v3 @kind object;
  #L3e7d22.  v1:= "Transfer-Encoding" @kind object;
  #L3e7d26.  call temp:= `b`(v7, v1) @signature `Ll/a0;.b:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3e7d2c.  v1:= temp @kind object;
  #L3e7d2e.  v2:= "chunked" @kind object;
  #L3e7d32.  call temp:= `equalsIgnoreCase`(v2, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3e7d38.  v1:= temp;
  #L3e7d3a.  v2:= -1L;
  #L3e7d3e.  if v1 == 0 then goto L3e7d6e;
  #L3e7d42.  call temp:= `s`(v7) @signature `Ll/a0;.s:()Ll/y;` @kind virtual;
  #L3e7d48.  v7:= temp @kind object;
  #L3e7d4a.  call temp:= `g`(v7) @signature `Ll/y;.g:()Ll/s;` @kind virtual;
  #L3e7d50.  v7:= temp @kind object;
  #L3e7d52.  call temp:= `a`(v6, v7) @signature `Ll/f0/h/a;.a:(Ll/s;)Lm/s;` @kind virtual;
  #L3e7d58.  v7:= temp @kind object;
  #L3e7d5a.  v1:= new `l.f0.g.h`;
  #L3e7d5e.  call temp:= `a`(v7) @signature `Lm/l;.a:(Lm/s;)Lm/e;` @kind static;
  #L3e7d64.  v7:= temp @kind object;
  #L3e7d66.  call `<init>`(v1, v0, v2, v7) @signature `Ll/f0/g/h;.<init>:(Ljava/lang/String;JLm/e;)V` @kind direct;
  #L3e7d6c.  return v1 @kind object;
  #L3e7d6e.  call temp:= `a`(v7) @signature `Ll/f0/g/e;.a:(Ll/a0;)J` @kind static;
  #L3e7d74.  v4:= temp @kind wide;
  #L3e7d76.  v7:= lcmp(v4, v2);
  #L3e7d7a.  if v7 == 0 then goto L3e7d9a;
  #L3e7d7e.  call temp:= `b`(v6, v4) @signature `Ll/f0/h/a;.b:(J)Lm/s;` @kind virtual;
  #L3e7d84.  v7:= temp @kind object;
  #L3e7d86.  v1:= new `l.f0.g.h`;
  #L3e7d8a.  call temp:= `a`(v7) @signature `Lm/l;.a:(Lm/s;)Lm/e;` @kind static;
  #L3e7d90.  v7:= temp @kind object;
  #L3e7d92.  call `<init>`(v1, v0, v4, v7) @signature `Ll/f0/g/h;.<init>:(Ljava/lang/String;JLm/e;)V` @kind direct;
  #L3e7d98.  return v1 @kind object;
  #L3e7d9a.  v7:= new `l.f0.g.h`;
  #L3e7d9e.  call temp:= `d`(v6) @signature `Ll/f0/h/a;.d:()Lm/s;` @kind virtual;
  #L3e7da4.  v1:= temp @kind object;
  #L3e7da6.  call temp:= `a`(v1) @signature `Lm/l;.a:(Lm/s;)Lm/e;` @kind static;
  #L3e7dac.  v1:= temp @kind object;
  #L3e7dae.  call `<init>`(v7, v0, v2, v1) @signature `Ll/f0/g/h;.<init>:(Ljava/lang/String;JLm/e;)V` @kind direct;
  #L3e7db4.  return v7 @kind object;
}
procedure `m.r` `a`(`l.f0.h.a` v2 @kind this, `long` v3 ) @signature `Ll/f0/h/a;.a:(J)Lm/r;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e7e84.  v0:= v2.`l.f0.h.a.e` @type ^`int`;
  #L3e7e88.  v1:= 1I;
  #L3e7e8a.  if v0 != v1 then goto L3e7ea0;
  #L3e7e8e.  v0:= 2I;
  #L3e7e90.  v2.`l.f0.h.a.e` @type ^`int` := v0;
  #L3e7e94.  v0:= new `l.f0.h.a$e`;
  #L3e7e98.  call `<init>`(v0, v2, v3) @signature `Ll/f0/h/a$e;.<init>:(Ll/f0/h/a;J)V` @kind direct;
  #L3e7e9e.  return v0 @kind object;
  #L3e7ea0.  v3:= new `java.lang.IllegalStateException`;
  #L3e7ea4.  v4:= new `java.lang.StringBuilder`;
  #L3e7ea8.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e7eae.  v0:= "state: " @kind object;
  #L3e7eb2.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e7eb8.  v0:= v2.`l.f0.h.a.e` @type ^`int`;
  #L3e7ebc.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e7ec2.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e7ec8.  v4:= temp @kind object;
  #L3e7eca.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e7ed0.  throw v3;
}
procedure `m.r` `a`(`l.f0.h.a` v2 @kind this, `l.y` v3 @kind object, `long` v4 ) @signature `Ll/f0/h/a;.a:(Ll/y;J)Lm/r;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e7dc8.  v0:= "Transfer-Encoding" @kind object;
  #L3e7dcc.  call temp:= `a`(v3, v0) @signature `Ll/y;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3e7dd2.  v3:= temp @kind object;
  #L3e7dd4.  v0:= "chunked" @kind object;
  #L3e7dd8.  call temp:= `equalsIgnoreCase`(v0, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3e7dde.  v3:= temp;
  #L3e7de0.  if v3 == 0 then goto L3e7dee;
  #L3e7de4.  call temp:= `c`(v2) @signature `Ll/f0/h/a;.c:()Lm/r;` @kind virtual;
  #L3e7dea.  v3:= temp @kind object;
  #L3e7dec.  return v3 @kind object;
  #L3e7dee.  v0:= -1L;
  #L3e7df2.  v3:= lcmp(v4, v0);
  #L3e7df6.  if v3 == 0 then goto L3e7e04;
  #L3e7dfa.  call temp:= `a`(v2, v4) @signature `Ll/f0/h/a;.a:(J)Lm/r;` @kind virtual;
  #L3e7e00.  v3:= temp @kind object;
  #L3e7e02.  return v3 @kind object;
  #L3e7e04.  v3:= new `java.lang.IllegalStateException`;
  #L3e7e08.  v4:= "Cannot stream a request body without chunked encoding or a known content length!" @kind object;
  #L3e7e0c.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e7e12.  throw v3;
}
procedure `m.s` `a`(`l.f0.h.a` v2 @kind this, `l.s` v3 @kind object) @signature `Ll/f0/h/a;.a:(Ll/s;)Lm/s;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e7ee4.  v0:= v2.`l.f0.h.a.e` @type ^`int`;
  #L3e7ee8.  v1:= 4I;
  #L3e7eea.  if v0 != v1 then goto L3e7f00;
  #L3e7eee.  v0:= 5I;
  #L3e7ef0.  v2.`l.f0.h.a.e` @type ^`int` := v0;
  #L3e7ef4.  v0:= new `l.f0.h.a$d`;
  #L3e7ef8.  call `<init>`(v0, v2, v3) @signature `Ll/f0/h/a$d;.<init>:(Ll/f0/h/a;Ll/s;)V` @kind direct;
  #L3e7efe.  return v0 @kind object;
  #L3e7f00.  v3:= new `java.lang.IllegalStateException`;
  #L3e7f04.  v0:= new `java.lang.StringBuilder`;
  #L3e7f08.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e7f0e.  v1:= "state: " @kind object;
  #L3e7f12.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e7f18.  v1:= v2.`l.f0.h.a.e` @type ^`int`;
  #L3e7f1c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e7f22.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e7f28.  v0:= temp @kind object;
  #L3e7f2a.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e7f30.  throw v3;
}
procedure `void` `a`(`l.f0.h.a` v1 @kind this) @signature `Ll/f0/h/a;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e80b0.  v0:= v1.`l.f0.h.a.d` @type ^`m.d` @kind object;
  #L3e80b4.  call `flush`(v0) @signature `Lm/d;.flush:()V` @kind interface;
  #L3e80ba.  return @kind void;
}
procedure `void` `a`(`l.f0.h.a` v4 @kind this, `l.r` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Ll/f0/h/a;.a:(Ll/r;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e80e8.  v0:= v4.`l.f0.h.a.e` @type ^`int`;
  #L3e80ec.  if v0 != 0 then goto L3e8162;
  #L3e80f0.  v0:= v4.`l.f0.h.a.d` @type ^`m.d` @kind object;
  #L3e80f4.  call temp:= `a`(v0, v6) @signature `Lm/d;.a:(Ljava/lang/String;)Lm/d;` @kind interface;
  #L3e80fa.  v6:= temp @kind object;
  #L3e80fc.  v0:= "\r\n" @kind object;
  #L3e8100.  call temp:= `a`(v6, v0) @signature `Lm/d;.a:(Ljava/lang/String;)Lm/d;` @kind interface;
  #L3e8106.  v6:= 0I;
  #L3e8108.  call temp:= `b`(v5) @signature `Ll/r;.b:()I` @kind virtual;
  #L3e810e.  v1:= temp;
  #L3e8110.  if v6 >= v1 then goto L3e8150;
  #L3e8114.  v2:= v4.`l.f0.h.a.d` @type ^`m.d` @kind object;
  #L3e8118.  call temp:= `a`(v5, v6) @signature `Ll/r;.a:(I)Ljava/lang/String;` @kind virtual;
  #L3e811e.  v3:= temp @kind object;
  #L3e8120.  call temp:= `a`(v2, v3) @signature `Lm/d;.a:(Ljava/lang/String;)Lm/d;` @kind interface;
  #L3e8126.  v2:= temp @kind object;
  #L3e8128.  v3:= ": " @kind object;
  #L3e812c.  call temp:= `a`(v2, v3) @signature `Lm/d;.a:(Ljava/lang/String;)Lm/d;` @kind interface;
  #L3e8132.  v2:= temp @kind object;
  #L3e8134.  call temp:= `b`(v5, v6) @signature `Ll/r;.b:(I)Ljava/lang/String;` @kind virtual;
  #L3e813a.  v3:= temp @kind object;
  #L3e813c.  call temp:= `a`(v2, v3) @signature `Lm/d;.a:(Ljava/lang/String;)Lm/d;` @kind interface;
  #L3e8142.  v2:= temp @kind object;
  #L3e8144.  call temp:= `a`(v2, v0) @signature `Lm/d;.a:(Ljava/lang/String;)Lm/d;` @kind interface;
  #L3e814a.  v6:= v6 + 1;
  #L3e814e.  goto L3e8110;
  #L3e8150.  v5:= v4.`l.f0.h.a.d` @type ^`m.d` @kind object;
  #L3e8154.  call temp:= `a`(v5, v0) @signature `Lm/d;.a:(Ljava/lang/String;)Lm/d;` @kind interface;
  #L3e815a.  v5:= 1I;
  #L3e815c.  v4.`l.f0.h.a.e` @type ^`int` := v5;
  #L3e8160.  return @kind void;
  #L3e8162.  v5:= new `java.lang.IllegalStateException`;
  #L3e8166.  v6:= new `java.lang.StringBuilder`;
  #L3e816a.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e8170.  v0:= "state: " @kind object;
  #L3e8174.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e817a.  v0:= v4.`l.f0.h.a.e` @type ^`int`;
  #L3e817e.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e8184.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e818a.  v6:= temp @kind object;
  #L3e818c.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e8192.  throw v5;
}
procedure `void` `a`(`l.f0.h.a` v1 @kind this, `l.y` v2 @kind object) @signature `Ll/f0/h/a;.a:(Ll/y;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e81a4.  v0:= v1.`l.f0.h.a.b` @type ^`l.f0.f.g` @kind object;
  #L3e81a8.  call temp:= `c`(v0) @signature `Ll/f0/f/g;.c:()Ll/f0/f/c;` @kind virtual;
  #L3e81ae.  v0:= temp @kind object;
  #L3e81b0.  call temp:= `d`(v0) @signature `Ll/f0/f/c;.d:()Ll/c0;` @kind virtual;
  #L3e81b6.  v0:= temp @kind object;
  #L3e81b8.  call temp:= `b`(v0) @signature `Ll/c0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L3e81be.  v0:= temp @kind object;
  #L3e81c0.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L3e81c6.  v0:= temp @kind object;
  #L3e81c8.  call temp:= `a`(v2, v0) @signature `Ll/f0/g/i;.a:(Ll/y;Ljava/net/Proxy$Type;)Ljava/lang/String;` @kind static;
  #L3e81ce.  v0:= temp @kind object;
  #L3e81d0.  call temp:= `c`(v2) @signature `Ll/y;.c:()Ll/r;` @kind virtual;
  #L3e81d6.  v2:= temp @kind object;
  #L3e81d8.  call `a`(v1, v2, v0) @signature `Ll/f0/h/a;.a:(Ll/r;Ljava/lang/String;)V` @kind virtual;
  #L3e81de.  return @kind void;
}
procedure `void` `a`(`l.f0.h.a` v2 @kind this, `m.i` v3 @kind object) @signature `Ll/f0/h/a;.a:(Lm/i;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3e8080.  call temp:= `g`(v3) @signature `Lm/i;.g:()Lm/t;` @kind virtual;
  #L3e8086.  v0:= temp @kind object;
  #L3e8088.  v1:= `@@m.t.d` @type ^`m.t` @kind object;
  #L3e808c.  call temp:= `a`(v3, v1) @signature `Lm/i;.a:(Lm/t;)Lm/i;` @kind virtual;
  #L3e8092.  call temp:= `a`(v0) @signature `Lm/t;.a:()Lm/t;` @kind virtual;
  #L3e8098.  call temp:= `b`(v0) @signature `Lm/t;.b:()Lm/t;` @kind virtual;
  #L3e809e.  return @kind void;
}
procedure `m.s` `b`(`l.f0.h.a` v2 @kind this, `long` v3 ) @signature `Ll/f0/h/a;.b:(J)Lm/s;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e7f44.  v0:= v2.`l.f0.h.a.e` @type ^`int`;
  #L3e7f48.  v1:= 4I;
  #L3e7f4a.  if v0 != v1 then goto L3e7f60;
  #L3e7f4e.  v0:= 5I;
  #L3e7f50.  v2.`l.f0.h.a.e` @type ^`int` := v0;
  #L3e7f54.  v0:= new `l.f0.h.a$f`;
  #L3e7f58.  call `<init>`(v0, v2, v3) @signature `Ll/f0/h/a$f;.<init>:(Ll/f0/h/a;J)V` @kind direct;
  #L3e7f5e.  return v0 @kind object;
  #L3e7f60.  v3:= new `java.lang.IllegalStateException`;
  #L3e7f64.  v4:= new `java.lang.StringBuilder`;
  #L3e7f68.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e7f6e.  v0:= "state: " @kind object;
  #L3e7f72.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e7f78.  v0:= v2.`l.f0.h.a.e` @type ^`int`;
  #L3e7f7c.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e7f82.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e7f88.  v4:= temp @kind object;
  #L3e7f8a.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e7f90.  throw v3;
}
procedure `void` `b`(`l.f0.h.a` v1 @kind this) @signature `Ll/f0/h/a;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e80cc.  v0:= v1.`l.f0.h.a.d` @type ^`m.d` @kind object;
  #L3e80d0.  call `flush`(v0) @signature `Lm/d;.flush:()V` @kind interface;
  #L3e80d6.  return @kind void;
}
procedure `m.r` `c`(`l.f0.h.a` v3 @kind this) @signature `Ll/f0/h/a;.c:()Lm/r;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e7e24.  v0:= v3.`l.f0.h.a.e` @type ^`int`;
  #L3e7e28.  v1:= 1I;
  #L3e7e2a.  if v0 != v1 then goto L3e7e40;
  #L3e7e2e.  v0:= 2I;
  #L3e7e30.  v3.`l.f0.h.a.e` @type ^`int` := v0;
  #L3e7e34.  v0:= new `l.f0.h.a$c`;
  #L3e7e38.  call `<init>`(v0, v3) @signature `Ll/f0/h/a$c;.<init>:(Ll/f0/h/a;)V` @kind direct;
  #L3e7e3e.  return v0 @kind object;
  #L3e7e40.  v0:= new `java.lang.IllegalStateException`;
  #L3e7e44.  v1:= new `java.lang.StringBuilder`;
  #L3e7e48.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e7e4e.  v2:= "state: " @kind object;
  #L3e7e52.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e7e58.  v2:= v3.`l.f0.h.a.e` @type ^`int`;
  #L3e7e5c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e7e62.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e7e68.  v1:= temp @kind object;
  #L3e7e6a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e7e70.  throw v0;
}
procedure `void` `cancel`(`l.f0.h.a` v1 @kind this) @signature `Ll/f0/h/a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8058.  v0:= v1.`l.f0.h.a.b` @type ^`l.f0.f.g` @kind object;
  #L3e805c.  call temp:= `c`(v0) @signature `Ll/f0/f/g;.c:()Ll/f0/f/c;` @kind virtual;
  #L3e8062.  v0:= temp @kind object;
  #L3e8064.  if v0 == 0 then goto L3e806e;
  #L3e8068.  call `a`(v0) @signature `Ll/f0/f/c;.a:()V` @kind virtual;
  #L3e806e.  return @kind void;
}
procedure `m.s` `d`(`l.f0.h.a` v3 @kind this) @signature `Ll/f0/h/a;.d:()Lm/s;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e7fa4.  v0:= v3.`l.f0.h.a.e` @type ^`int`;
  #L3e7fa8.  v1:= 4I;
  #L3e7faa.  if v0 != v1 then goto L3e7fde;
  #L3e7fae.  v0:= v3.`l.f0.h.a.b` @type ^`l.f0.f.g` @kind object;
  #L3e7fb2.  if v0 == 0 then goto L3e7fce;
  #L3e7fb6.  v1:= 5I;
  #L3e7fb8.  v3.`l.f0.h.a.e` @type ^`int` := v1;
  #L3e7fbc.  call `e`(v0) @signature `Ll/f0/f/g;.e:()V` @kind virtual;
  #L3e7fc2.  v0:= new `l.f0.h.a$g`;
  #L3e7fc6.  call `<init>`(v0, v3) @signature `Ll/f0/h/a$g;.<init>:(Ll/f0/h/a;)V` @kind direct;
  #L3e7fcc.  return v0 @kind object;
  #L3e7fce.  v0:= new `java.lang.IllegalStateException`;
  #L3e7fd2.  v1:= "streamAllocation == null" @kind object;
  #L3e7fd6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e7fdc.  throw v0;
  #L3e7fde.  v0:= new `java.lang.IllegalStateException`;
  #L3e7fe2.  v1:= new `java.lang.StringBuilder`;
  #L3e7fe6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e7fec.  v2:= "state: " @kind object;
  #L3e7ff0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e7ff6.  v2:= v3.`l.f0.h.a.e` @type ^`int`;
  #L3e7ffa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e8000.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e8006.  v1:= temp @kind object;
  #L3e8008.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e800e.  throw v0;
}
procedure `l.r` `e`(`l.f0.h.a` v3 @kind this) @signature `Ll/f0/h/a;.e:()Ll/r;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e7b84.  v0:= new `l.r$a`;
  #L3e7b88.  call `<init>`(v0) @signature `Ll/r$a;.<init>:()V` @kind direct;
  #L3e7b8e.  call temp:= `f`(v3) @signature `Ll/f0/h/a;.f:()Ljava/lang/String;` @kind direct;
  #L3e7b94.  v1:= temp @kind object;
  #L3e7b96.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3e7b9c.  v2:= temp;
  #L3e7b9e.  if v2 == 0 then goto L3e7bae;
  #L3e7ba2.  v2:= `@@l.f0.a.a` @type ^`l.f0.a` @kind object;
  #L3e7ba6.  call `a`(v2, v0, v1) @signature `Ll/f0/a;.a:(Ll/r$a;Ljava/lang/String;)V` @kind virtual;
  #L3e7bac.  goto L3e7b8e;
  #L3e7bae.  call temp:= `a`(v0) @signature `Ll/r$a;.a:()Ll/r;` @kind virtual;
  #L3e7bb4.  v0:= temp @kind object;
  #L3e7bb6.  return v0 @kind object;
}
