record `l.f0.c` @kind class @AccessFlag PUBLIC_FINAL {
}
global `byte`[] `@@l.f0.c.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String`[] `@@l.f0.c.b` @AccessFlag PUBLIC_STATIC_FINAL;
global `l.b0` `@@l.f0.c.c` @AccessFlag PUBLIC_STATIC_FINAL;
global `m.f` `@@l.f0.c.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `m.f` `@@l.f0.c.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `m.f` `@@l.f0.c.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `m.f` `@@l.f0.c.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `m.f` `@@l.f0.c.h` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@l.f0.c.i` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.nio.charset.Charset` `@@l.f0.c.j` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@l.f0.c.k` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@l.f0.c.l` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@l.f0.c.m` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.TimeZone` `@@l.f0.c.n` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.Comparator` `@@l.f0.c.o` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.reflect.Method` `@@l.f0.c.p` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@l.f0.c.q` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ll/f0/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e2354.  v0:= 0I;
  #L3e2356.  v1:= new `byte`[v0];
  #L3e235a.  `@@l.f0.c.a` @type ^`byte`[] := v1 @kind object;
  #L3e235e.  v1:= new `java.lang.String`[v0];
  #L3e2362.  `@@l.f0.c.b` @type ^`java.lang.String`[] := v1 @kind object;
  #L3e2366.  v1:= `@@l.f0.c.a` @type ^`byte`[] @kind object;
  #L3e236a.  v2:= 0I;
  #L3e236c.  call temp:= `a`(v2, v1) @signature `Ll/b0;.a:(Ll/u;[B)Ll/b0;` @kind static;
  #L3e2372.  v1:= temp @kind object;
  #L3e2374.  `@@l.f0.c.c` @type ^`l.b0` := v1 @kind object;
  #L3e2378.  v1:= `@@l.f0.c.a` @type ^`byte`[] @kind object;
  #L3e237c.  call temp:= `a`(v2, v1) @signature `Ll/z;.a:(Ll/u;[B)Ll/z;` @kind static;
  #L3e2382.  v1:= "efbbbf" @kind object;
  #L3e2386.  call temp:= `a`(v1) @signature `Lm/f;.a:(Ljava/lang/String;)Lm/f;` @kind static;
  #L3e238c.  v1:= temp @kind object;
  #L3e238e.  `@@l.f0.c.d` @type ^`m.f` := v1 @kind object;
  #L3e2392.  v1:= "feff" @kind object;
  #L3e2396.  call temp:= `a`(v1) @signature `Lm/f;.a:(Ljava/lang/String;)Lm/f;` @kind static;
  #L3e239c.  v1:= temp @kind object;
  #L3e239e.  `@@l.f0.c.e` @type ^`m.f` := v1 @kind object;
  #L3e23a2.  v1:= "fffe" @kind object;
  #L3e23a6.  call temp:= `a`(v1) @signature `Lm/f;.a:(Ljava/lang/String;)Lm/f;` @kind static;
  #L3e23ac.  v1:= temp @kind object;
  #L3e23ae.  `@@l.f0.c.f` @type ^`m.f` := v1 @kind object;
  #L3e23b2.  v1:= "0000ffff" @kind object;
  #L3e23b6.  call temp:= `a`(v1) @signature `Lm/f;.a:(Ljava/lang/String;)Lm/f;` @kind static;
  #L3e23bc.  v1:= temp @kind object;
  #L3e23be.  `@@l.f0.c.g` @type ^`m.f` := v1 @kind object;
  #L3e23c2.  v1:= "ffff0000" @kind object;
  #L3e23c6.  call temp:= `a`(v1) @signature `Lm/f;.a:(Ljava/lang/String;)Lm/f;` @kind static;
  #L3e23cc.  v1:= temp @kind object;
  #L3e23ce.  `@@l.f0.c.h` @type ^`m.f` := v1 @kind object;
  #L3e23d2.  v1:= "UTF-8" @kind object;
  #L3e23d6.  call temp:= `forName`(v1) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L3e23dc.  v1:= temp @kind object;
  #L3e23de.  `@@l.f0.c.i` @type ^`java.nio.charset.Charset` := v1 @kind object;
  #L3e23e2.  v1:= "ISO-8859-1" @kind object;
  #L3e23e6.  call temp:= `forName`(v1) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L3e23ec.  v1:= "UTF-16BE" @kind object;
  #L3e23f0.  call temp:= `forName`(v1) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L3e23f6.  v1:= temp @kind object;
  #L3e23f8.  `@@l.f0.c.j` @type ^`java.nio.charset.Charset` := v1 @kind object;
  #L3e23fc.  v1:= "UTF-16LE" @kind object;
  #L3e2400.  call temp:= `forName`(v1) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L3e2406.  v1:= temp @kind object;
  #L3e2408.  `@@l.f0.c.k` @type ^`java.nio.charset.Charset` := v1 @kind object;
  #L3e240c.  v1:= "UTF-32BE" @kind object;
  #L3e2410.  call temp:= `forName`(v1) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L3e2416.  v1:= temp @kind object;
  #L3e2418.  `@@l.f0.c.l` @type ^`java.nio.charset.Charset` := v1 @kind object;
  #L3e241c.  v1:= "UTF-32LE" @kind object;
  #L3e2420.  call temp:= `forName`(v1) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L3e2426.  v1:= temp @kind object;
  #L3e2428.  `@@l.f0.c.m` @type ^`java.nio.charset.Charset` := v1 @kind object;
  #L3e242c.  v1:= "GMT" @kind object;
  #L3e2430.  call temp:= `getTimeZone`(v1) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L3e2436.  v1:= temp @kind object;
  #L3e2438.  `@@l.f0.c.n` @type ^`java.util.TimeZone` := v1 @kind object;
  #L3e243c.  v1:= new `l.f0.c$a`;
  #L3e2440.  call `<init>`(v1) @signature `Ll/f0/c$a;.<init>:()V` @kind direct;
  #L3e2446.  `@@l.f0.c.o` @type ^`java.util.Comparator` := v1 @kind object;
  #L3e244a.  v1:= constclass @type ^`java.lang.Throwable` @kind object;
  #L3e244e.  v3:= 1I;
  #L3e2450.  v3:= new `java.lang.Class`[v3];
  #L3e2454.  v4:= constclass @type ^`java.lang.Throwable` @kind object;
  #L3e2458.  v3[v0]:= v4 @kind object;
  #L3e245c.  v0:= "addSuppressed" @kind object;
  #L3e2460.  call temp:= `getDeclaredMethod`(v1, v0, v3) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L3e2466.  v2:= temp @kind object;
  #L3e2468.  `@@l.f0.c.p` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L3e246c.  v0:= "([0-9a-fA-F]*:[0-9a-fA-F:.]*)|([\\d.]+)" @kind object;
  #L3e2470.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L3e2476.  v0:= temp @kind object;
  #L3e2478.  `@@l.f0.c.q` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L3e247c.  return @kind void;
  catch `java.lang.Exception` @[L3e244a..L3e245c] goto L3e2468;
  catch `java.lang.Exception` @[L3e2460..L3e2468] goto L3e2468;
}
procedure `int` `a`(`char` v2 ) @signature `Ll/f0/c;.a:(C)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e19e8.  v0:= 48I;
  #L3e19ec.  if v2 < v0 then goto L3e19fc;
  #L3e19f0.  v1:= 57I;
  #L3e19f4.  if v2 > v1 then goto L3e19fc;
  #L3e19f8.  v2:= v2 - v0 @kind int;
  #L3e19fa.  return v2;
  #L3e19fc.  v0:= 97I;
  #L3e1a00.  if v2 < v0 then goto L3e1a14;
  #L3e1a04.  v1:= 102I;
  #L3e1a08.  if v2 > v1 then goto L3e1a14;
  #L3e1a0c.  v2:= v2 - v0 @kind int;
  #L3e1a0e.  v2:= v2 + 10;
  #L3e1a12.  return v2;
  #L3e1a14.  v0:= 65I;
  #L3e1a18.  if v2 < v0 then goto L3e1a26;
  #L3e1a1c.  v1:= 70I;
  #L3e1a20.  if v2 > v1 then goto L3e1a26;
  #L3e1a24.  goto L3e1a0c;
  #L3e1a26.  v2:= -1I;
  #L3e1a28.  return v2;
}
procedure `int` `a`(`java.lang.String` v1 @kind object, `int` v2 , `int` v3 , `char` v4 ) @signature `Ll/f0/c;.a:(Ljava/lang/String;IIC)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e1a3c.  if v2 >= v3 then goto L3e1a54;
  #L3e1a40.  call temp:= `charAt`(v1, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3e1a46.  v0:= temp;
  #L3e1a48.  if v0 != v4 then goto L3e1a4e;
  #L3e1a4c.  return v2;
  #L3e1a4e.  v2:= v2 + 1;
  #L3e1a52.  goto L3e1a3c;
  #L3e1a54.  return v3;
}
procedure `int` `a`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 , `java.lang.String` v5 @kind object) @signature `Ll/f0/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e1a68.  if v3 >= v4 then goto L3e1a8a;
  #L3e1a6c.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3e1a72.  v0:= temp;
  #L3e1a74.  call temp:= `indexOf`(v5, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L3e1a7a.  v0:= temp;
  #L3e1a7c.  v1:= -1I;
  #L3e1a7e.  if v0 == v1 then goto L3e1a84;
  #L3e1a82.  return v3;
  #L3e1a84.  v3:= v3 + 1;
  #L3e1a88.  goto L3e1a68;
  #L3e1a8a.  return v4;
}
procedure `int` `a`(`java.lang.String` v5 @kind object, `long` v6 , `java.util.concurrent.TimeUnit` v8 @kind object) @signature `Ll/f0/c;.a:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e1904.  v0:= 0L;
  #L3e1908.  v2:= lcmp(v6, v0);
  #L3e190c.  if v2 < 0 then goto L3e19a8;
  #L3e1910.  if v8 == 0 then goto L3e1998;
  #L3e1914.  call temp:= `toMillis`(v8, v6) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L3e191a.  v6:= temp @kind wide;
  #L3e191c.  v3:= 2147483647L;
  #L3e1922.  v8:= lcmp(v6, v3);
  #L3e1926.  if v8 > 0 then goto L3e196a;
  #L3e192a.  v8:= lcmp(v6, v0);
  #L3e192e.  if v8 != 0 then goto L3e1966;
  #L3e1932.  if v2 > 0 then goto L3e1938;
  #L3e1936.  goto L3e1966;
  #L3e1938.  v6:= new `java.lang.IllegalArgumentException`;
  #L3e193c.  v7:= new `java.lang.StringBuilder`;
  #L3e1940.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e1946.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e194c.  v5:= " too small." @kind object;
  #L3e1950.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1956.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e195c.  v5:= temp @kind object;
  #L3e195e.  call `<init>`(v6, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e1964.  throw v6;
  #L3e1966.  v5:= (`int`) v6 @kind l2i;
  #L3e1968.  return v5;
  #L3e196a.  v6:= new `java.lang.IllegalArgumentException`;
  #L3e196e.  v7:= new `java.lang.StringBuilder`;
  #L3e1972.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e1978.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e197e.  v5:= " too large." @kind object;
  #L3e1982.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1988.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e198e.  v5:= temp @kind object;
  #L3e1990.  call `<init>`(v6, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e1996.  throw v6;
  #L3e1998.  v5:= new `java.lang.NullPointerException`;
  #L3e199c.  v6:= "unit == null" @kind object;
  #L3e19a0.  call `<init>`(v5, v6) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e19a6.  throw v5;
  #L3e19a8.  v6:= new `java.lang.IllegalArgumentException`;
  #L3e19ac.  v7:= new `java.lang.StringBuilder`;
  #L3e19b0.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e19b6.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e19bc.  v5:= " < 0" @kind object;
  #L3e19c0.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e19c6.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e19cc.  v5:= temp @kind object;
  #L3e19ce.  call `<init>`(v6, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e19d4.  throw v6;
}
procedure `int` `a`(`java.util.Comparator` v3 @kind object, `java.lang.String`[] v4 @kind object, `java.lang.String` v5 @kind object) @signature `Ll/f0/c;.a:(Ljava/util/Comparator;[Ljava/lang/String;Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e1a9c.  v0:= length @variable v4;
  #L3e1a9e.  v1:= 0I;
  #L3e1aa0.  if v1 >= v0 then goto L3e1abc;
  #L3e1aa4.  v2:= v4[v1] @kind object;
  #L3e1aa8.  call temp:= `compare`(v3, v2, v5) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L3e1aae.  v2:= temp;
  #L3e1ab0.  if v2 != 0 then goto L3e1ab6;
  #L3e1ab4.  return v1;
  #L3e1ab6.  v1:= v1 + 1;
  #L3e1aba.  goto L3e1aa0;
  #L3e1abc.  v3:= -1I;
  #L3e1abe.  return v3;
}
procedure `java.lang.AssertionError` `a`(`java.lang.String` v1 @kind object, `java.lang.Exception` v2 @kind object) @signature `Ll/f0/c;.a:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e1bbc.  v0:= new `java.lang.AssertionError`;
  #L3e1bc0.  call `<init>`(v0, v1) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3e1bc6.  call temp:= `initCause`(v0, v2) @signature `Ljava/lang/AssertionError;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L3e1bcc.  return v0 @kind object;
  catch `java.lang.IllegalStateException` @[L3e1bc6..L3e1bcc] goto L3e1bcc;
}
procedure `java.lang.String` `a`(`java.lang.String` v3 @kind object) @signature `Ll/f0/c;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e1bf0.  v0:= ":" @kind object;
  #L3e1bf4.  call temp:= `contains`(v3, v0) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L3e1bfa.  v0:= temp;
  #L3e1bfc.  v1:= 0I;
  #L3e1bfe.  if v0 == 0 then goto L3e1ca4;
  #L3e1c02.  v0:= "[" @kind object;
  #L3e1c06.  call temp:= `startsWith`(v3, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3e1c0c.  v0:= temp;
  #L3e1c0e.  if v0 == 0 then goto L3e1c38;
  #L3e1c12.  v0:= "]" @kind object;
  #L3e1c16.  call temp:= `endsWith`(v3, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3e1c1c.  v0:= temp;
  #L3e1c1e.  if v0 == 0 then goto L3e1c38;
  #L3e1c22.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3e1c28.  v0:= temp;
  #L3e1c2a.  v2:= 1I;
  #L3e1c2c.  v0:= v0 - v2 @kind int;
  #L3e1c2e.  call temp:= `a`(v3, v2, v0) @signature `Ll/f0/c;.a:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L3e1c34.  v0:= temp @kind object;
  #L3e1c36.  goto L3e1c4a;
  #L3e1c38.  v0:= 0I;
  #L3e1c3a.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3e1c40.  v2:= temp;
  #L3e1c42.  call temp:= `a`(v3, v0, v2) @signature `Ll/f0/c;.a:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L3e1c48.  v0:= temp @kind object;
  #L3e1c4a.  if v0 != 0 then goto L3e1c50;
  #L3e1c4e.  return v1 @kind object;
  #L3e1c50.  call temp:= `getAddress`(v0) @signature `Ljava/net/InetAddress;.getAddress:()[B` @kind virtual;
  #L3e1c56.  v0:= temp @kind object;
  #L3e1c58.  v1:= length @variable v0;
  #L3e1c5a.  v2:= 16I;
  #L3e1c5e.  if v1 != v2 then goto L3e1c6c;
  #L3e1c62.  call temp:= `a`(v0) @signature `Ll/f0/c;.a:([B)Ljava/lang/String;` @kind static;
  #L3e1c68.  v3:= temp @kind object;
  #L3e1c6a.  return v3 @kind object;
  #L3e1c6c.  v0:= new `java.lang.AssertionError`;
  #L3e1c70.  v1:= new `java.lang.StringBuilder`;
  #L3e1c74.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e1c7a.  v2:= "Invalid IPv6 address: '" @kind object;
  #L3e1c7e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1c84.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1c8a.  v3:= "'" @kind object;
  #L3e1c8e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1c94.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e1c9a.  v3:= temp @kind object;
  #L3e1c9c.  call `<init>`(v0, v3) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3e1ca2.  throw v0;
  #L3e1ca4.  call temp:= `toASCII`(v3) @signature `Ljava/net/IDN;.toASCII:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3e1caa.  v3:= temp @kind object;
  #L3e1cac.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L3e1cb0.  call temp:= `toLowerCase`(v3, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3e1cb6.  v3:= temp @kind object;
  #L3e1cb8.  call temp:= `isEmpty`(v3) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L3e1cbe.  v0:= temp;
  #L3e1cc0.  if v0 == 0 then goto L3e1cc6;
  #L3e1cc4.  return v1 @kind object;
  #L3e1cc6.  call temp:= `b`(v3) @signature `Ll/f0/c;.b:(Ljava/lang/String;)Z` @kind static;
  #L3e1ccc.  v0:= temp;
  #L3e1cce.  if v0 == 0 then goto L3e1cd4;
  #L3e1cd2.  return v1 @kind object;
  #L3e1cd4.  return v3 @kind object;
  #L3e1cd6.  return v1 @kind object;
  catch `java.lang.IllegalArgumentException` @[L3e1ca4..L3e1cce] goto L3e1cd6;
}
procedure `java.lang.String` `a`(`java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Ll/f0/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e1cf8.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L3e1cfc.  call temp:= `format`(v0, v1, v2) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3e1d02.  v1:= temp @kind object;
  #L3e1d04.  return v1 @kind object;
}
procedure `java.lang.String` `a`(`l.s` v3 @kind object, `boolean` v4 ) @signature `Ll/f0/c;.a:(Ll/s;Z)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e1d18.  call temp:= `g`(v3) @signature `Ll/s;.g:()Ljava/lang/String;` @kind virtual;
  #L3e1d1e.  v0:= temp @kind object;
  #L3e1d20.  v1:= ":" @kind object;
  #L3e1d24.  call temp:= `contains`(v0, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L3e1d2a.  v0:= temp;
  #L3e1d2c.  if v0 == 0 then goto L3e1d66;
  #L3e1d30.  v0:= new `java.lang.StringBuilder`;
  #L3e1d34.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e1d3a.  v2:= "[" @kind object;
  #L3e1d3e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1d44.  call temp:= `g`(v3) @signature `Ll/s;.g:()Ljava/lang/String;` @kind virtual;
  #L3e1d4a.  v2:= temp @kind object;
  #L3e1d4c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1d52.  v2:= "]" @kind object;
  #L3e1d56.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1d5c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e1d62.  v0:= temp @kind object;
  #L3e1d64.  goto L3e1d6e;
  #L3e1d66.  call temp:= `g`(v3) @signature `Ll/s;.g:()Ljava/lang/String;` @kind virtual;
  #L3e1d6c.  v0:= temp @kind object;
  #L3e1d6e.  if v4 != 0 then goto L3e1d8e;
  #L3e1d72.  call temp:= `j`(v3) @signature `Ll/s;.j:()I` @kind virtual;
  #L3e1d78.  v4:= temp;
  #L3e1d7a.  call temp:= `m`(v3) @signature `Ll/s;.m:()Ljava/lang/String;` @kind virtual;
  #L3e1d80.  v2:= temp @kind object;
  #L3e1d82.  call temp:= `c`(v2) @signature `Ll/s;.c:(Ljava/lang/String;)I` @kind static;
  #L3e1d88.  v2:= temp;
  #L3e1d8a.  if v4 == v2 then goto L3e1dba;
  #L3e1d8e.  v4:= new `java.lang.StringBuilder`;
  #L3e1d92.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e1d98.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1d9e.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1da4.  call temp:= `j`(v3) @signature `Ll/s;.j:()I` @kind virtual;
  #L3e1daa.  v3:= temp;
  #L3e1dac.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1db2.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e1db8.  v0:= temp @kind object;
  #L3e1dba.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`byte`[] v8 @kind object) @signature `Ll/f0/c;.a:([B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3e1dcc.  v0:= 0I;
  #L3e1dce.  v1:= -1I;
  #L3e1dd0.  v1:= 0I;
  #L3e1dd2.  v2:= -1I;
  #L3e1dd4.  v3:= 0I;
  #L3e1dd6.  v4:= length @variable v8;
  #L3e1dd8.  v5:= 16I;
  #L3e1ddc.  if v1 >= v4 then goto L3e1e18;
  #L3e1de0.  v4:= v1;
  #L3e1de2.  if v4 >= v5 then goto L3e1e00;
  #L3e1de6.  v6:= v8[v4] @kind byte;
  #L3e1dea.  if v6 != 0 then goto L3e1e00;
  #L3e1dee.  v6:= v4 + 1;
  #L3e1df2.  v6:= v8[v6] @kind byte;
  #L3e1df6.  if v6 != 0 then goto L3e1e00;
  #L3e1dfa.  v4:= v4 + 2;
  #L3e1dfe.  goto L3e1de2;
  #L3e1e00.  v5:= v4 - v1 @kind int;
  #L3e1e04.  if v5 <= v3 then goto L3e1e12;
  #L3e1e08.  v6:= 4I;
  #L3e1e0a.  if v5 < v6 then goto L3e1e12;
  #L3e1e0e.  v2:= v1;
  #L3e1e10.  v3:= v5;
  #L3e1e12.  v1:= v4 + 2;
  #L3e1e16.  goto L3e1dd6;
  #L3e1e18.  v1:= new `m.c`;
  #L3e1e1c.  call `<init>`(v1) @signature `Lm/c;.<init>:()V` @kind direct;
  #L3e1e22.  v4:= length @variable v8;
  #L3e1e24.  if v0 >= v4 then goto L3e1e76;
  #L3e1e28.  v4:= 58I;
  #L3e1e2c.  if v0 != v2 then goto L3e1e44;
  #L3e1e30.  call temp:= `writeByte`(v1, v4) @signature `Lm/c;.writeByte:(I)Lm/c;` @kind virtual;
  #L3e1e36.  v0:= v0 + v3 @kind int;
  #L3e1e38.  if v0 != v5 then goto L3e1e22;
  #L3e1e3c.  call temp:= `writeByte`(v1, v4) @signature `Lm/c;.writeByte:(I)Lm/c;` @kind virtual;
  #L3e1e42.  goto L3e1e22;
  #L3e1e44.  if v0 <= 0 then goto L3e1e4e;
  #L3e1e48.  call temp:= `writeByte`(v1, v4) @signature `Lm/c;.writeByte:(I)Lm/c;` @kind virtual;
  #L3e1e4e.  v4:= v8[v0] @kind byte;
  #L3e1e52.  v4:= v4 ^& 255;
  #L3e1e56.  v4:= v4 ^< 8;
  #L3e1e5a.  v6:= v0 + 1;
  #L3e1e5e.  v6:= v8[v6] @kind byte;
  #L3e1e62.  v6:= v6 ^& 255;
  #L3e1e66.  v4:= v4 ^| v6 @kind int;
  #L3e1e68.  v6:= (`long`) v4 @kind i2l;
  #L3e1e6a.  call temp:= `e`(v1, v6) @signature `Lm/c;.e:(J)Lm/c;` @kind virtual;
  #L3e1e70.  v0:= v0 + 2;
  #L3e1e74.  goto L3e1e22;
  #L3e1e76.  call temp:= `u`(v1) @signature `Lm/c;.u:()Ljava/lang/String;` @kind virtual;
  #L3e1e7c.  v8:= temp @kind object;
  #L3e1e7e.  return v8 @kind object;
}
procedure `java.net.InetAddress` `a`(`java.lang.String` v10 @kind object, `int` v11 , `int` v12 ) @signature `Ll/f0/c;.a:(Ljava/lang/String;II)Ljava/net/InetAddress;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3e1f5c.  v0:= 16I;
  #L3e1f60.  v0:= new `byte`[v0];
  #L3e1f64.  v1:= -1I;
  #L3e1f66.  v2:= 0I;
  #L3e1f68.  v3:= 0I;
  #L3e1f6a.  v4:= -1I;
  #L3e1f6c.  v5:= -1I;
  #L3e1f6e.  v6:= 0I;
  #L3e1f70.  if v11 >= v12 then goto L3e2052;
  #L3e1f74.  v7:= length @variable v0;
  #L3e1f76.  if v3 != v7 then goto L3e1f7c;
  #L3e1f7a.  return v6 @kind object;
  #L3e1f7c.  v7:= v11 + 2;
  #L3e1f80.  if v7 > v12 then goto L3e1fac;
  #L3e1f84.  v8:= 2I;
  #L3e1f86.  v9:= "::" @kind object;
  #L3e1f8a.  call temp:= `regionMatches`(v10, v11, v9, v2, v8) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L3e1f90.  v8:= temp;
  #L3e1f92.  if v8 == 0 then goto L3e1fac;
  #L3e1f96.  if v4 == v1 then goto L3e1f9c;
  #L3e1f9a.  return v6 @kind object;
  #L3e1f9c.  v3:= v3 + 2;
  #L3e1fa0.  v4:= v3;
  #L3e1fa2.  if v7 != v12 then goto L3e1fa8;
  #L3e1fa6.  goto L3e2052;
  #L3e1fa8.  v5:= v7;
  #L3e1faa.  goto L3e1ff4;
  #L3e1fac.  if v3 == 0 then goto L3e1ff2;
  #L3e1fb0.  v7:= 1I;
  #L3e1fb2.  v8:= ":" @kind object;
  #L3e1fb6.  call temp:= `regionMatches`(v10, v11, v8, v2, v7) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L3e1fbc.  v8:= temp;
  #L3e1fbe.  if v8 == 0 then goto L3e1fc8;
  #L3e1fc2.  v11:= v11 + 1;
  #L3e1fc6.  goto L3e1ff2;
  #L3e1fc8.  v8:= "." @kind object;
  #L3e1fcc.  call temp:= `regionMatches`(v10, v11, v8, v2, v7) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L3e1fd2.  v11:= temp;
  #L3e1fd4.  if v11 == 0 then goto L3e1ff0;
  #L3e1fd8.  v11:= v3 + -2;
  #L3e1fdc.  call temp:= `a`(v10, v5, v12, v0, v11) @signature `Ll/f0/c;.a:(Ljava/lang/String;II[BI)Z` @kind static;
  #L3e1fe2.  v10:= temp;
  #L3e1fe4.  if v10 != 0 then goto L3e1fea;
  #L3e1fe8.  return v6 @kind object;
  #L3e1fea.  v3:= v3 + 2;
  #L3e1fee.  goto L3e2052;
  #L3e1ff0.  return v6 @kind object;
  #L3e1ff2.  v5:= v11;
  #L3e1ff4.  v11:= v5;
  #L3e1ff6.  v7:= 0I;
  #L3e1ff8.  if v11 >= v12 then goto L3e201e;
  #L3e1ffc.  call temp:= `charAt`(v10, v11) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3e2002.  v8:= temp;
  #L3e2004.  call temp:= `a`(v8) @signature `Ll/f0/c;.a:(C)I` @kind static;
  #L3e200a.  v8:= temp;
  #L3e200c.  if v8 != v1 then goto L3e2012;
  #L3e2010.  goto L3e201e;
  #L3e2012.  v7:= v7 ^< 4;
  #L3e2016.  v7:= v7 + v8 @kind int;
  #L3e2018.  v11:= v11 + 1;
  #L3e201c.  goto L3e1ff8;
  #L3e201e.  v8:= v11 - v5 @kind int;
  #L3e2022.  if v8 == 0 then goto L3e2050;
  #L3e2026.  v9:= 4I;
  #L3e2028.  if v8 <= v9 then goto L3e202e;
  #L3e202c.  goto L3e2050;
  #L3e202e.  v6:= v3 + 1;
  #L3e2032.  v8:= v7 ^>> 8;
  #L3e2036.  v8:= v8 ^& 255;
  #L3e203a.  v8:= (`byte`) v8 @kind i2b;
  #L3e203c.  v0[v3]:= v8 @kind byte;
  #L3e2040.  v3:= v6 + 1;
  #L3e2044.  v7:= v7 ^& 255;
  #L3e2048.  v7:= (`byte`) v7 @kind i2b;
  #L3e204a.  v0[v6]:= v7 @kind byte;
  #L3e204e.  goto L3e1f6e;
  #L3e2050.  return v6 @kind object;
  #L3e2052.  v10:= length @variable v0;
  #L3e2054.  if v3 == v10 then goto L3e2078;
  #L3e2058.  if v4 != v1 then goto L3e205e;
  #L3e205c.  return v6 @kind object;
  #L3e205e.  v10:= length @variable v0;
  #L3e2060.  v11:= v3 - v4 @kind int;
  #L3e2064.  v10:= v10 - v11 @kind int;
  #L3e2066.  call `arraycopy`(v0, v4, v0, v10, v11) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3e206c.  v10:= length @variable v0;
  #L3e206e.  v10:= v10 - v3 @kind int;
  #L3e2070.  v10:= v10 + v4 @kind int;
  #L3e2072.  call `fill`(v0, v4, v10, v2) @signature `Ljava/util/Arrays;.fill:([BIIB)V` @kind static;
  #L3e2078.  call temp:= `getByAddress`(v0) @signature `Ljava/net/InetAddress;.getByAddress:([B)Ljava/net/InetAddress;` @kind static;
  #L3e207e.  v10:= temp @kind object;
  #L3e2080.  return v10 @kind object;
  #L3e2082.  v10:= new `java.lang.AssertionError`;
  #L3e2086.  call `<init>`(v10) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L3e208c.  throw v10;
  catch `java.net.UnknownHostException` @[L3e2078..L3e2080] goto L3e2082;
}
procedure `java.nio.charset.Charset` `a`(`m.e` v3 @kind object, `java.nio.charset.Charset` v4 @kind object) @signature `Ll/f0/c;.a:(Lm/e;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e20b0.  v0:= `@@l.f0.c.d` @type ^`m.f` @kind object;
  #L3e20b4.  v1:= 0L;
  #L3e20b8.  call temp:= `a`(v3, v1, v0) @signature `Lm/e;.a:(JLm/f;)Z` @kind interface;
  #L3e20be.  v0:= temp;
  #L3e20c0.  if v0 == 0 then goto L3e20de;
  #L3e20c4.  v4:= `@@l.f0.c.d` @type ^`m.f` @kind object;
  #L3e20c8.  call temp:= `l`(v4) @signature `Lm/f;.l:()I` @kind virtual;
  #L3e20ce.  v4:= temp;
  #L3e20d0.  v0:= (`long`) v4 @kind i2l;
  #L3e20d2.  call `skip`(v3, v0) @signature `Lm/e;.skip:(J)V` @kind interface;
  #L3e20d8.  v3:= `@@l.f0.c.i` @type ^`java.nio.charset.Charset` @kind object;
  #L3e20dc.  return v3 @kind object;
  #L3e20de.  v0:= `@@l.f0.c.e` @type ^`m.f` @kind object;
  #L3e20e2.  call temp:= `a`(v3, v1, v0) @signature `Lm/e;.a:(JLm/f;)Z` @kind interface;
  #L3e20e8.  v0:= temp;
  #L3e20ea.  if v0 == 0 then goto L3e2108;
  #L3e20ee.  v4:= `@@l.f0.c.e` @type ^`m.f` @kind object;
  #L3e20f2.  call temp:= `l`(v4) @signature `Lm/f;.l:()I` @kind virtual;
  #L3e20f8.  v4:= temp;
  #L3e20fa.  v0:= (`long`) v4 @kind i2l;
  #L3e20fc.  call `skip`(v3, v0) @signature `Lm/e;.skip:(J)V` @kind interface;
  #L3e2102.  v3:= `@@l.f0.c.j` @type ^`java.nio.charset.Charset` @kind object;
  #L3e2106.  return v3 @kind object;
  #L3e2108.  v0:= `@@l.f0.c.f` @type ^`m.f` @kind object;
  #L3e210c.  call temp:= `a`(v3, v1, v0) @signature `Lm/e;.a:(JLm/f;)Z` @kind interface;
  #L3e2112.  v0:= temp;
  #L3e2114.  if v0 == 0 then goto L3e2132;
  #L3e2118.  v4:= `@@l.f0.c.f` @type ^`m.f` @kind object;
  #L3e211c.  call temp:= `l`(v4) @signature `Lm/f;.l:()I` @kind virtual;
  #L3e2122.  v4:= temp;
  #L3e2124.  v0:= (`long`) v4 @kind i2l;
  #L3e2126.  call `skip`(v3, v0) @signature `Lm/e;.skip:(J)V` @kind interface;
  #L3e212c.  v3:= `@@l.f0.c.k` @type ^`java.nio.charset.Charset` @kind object;
  #L3e2130.  return v3 @kind object;
  #L3e2132.  v0:= `@@l.f0.c.g` @type ^`m.f` @kind object;
  #L3e2136.  call temp:= `a`(v3, v1, v0) @signature `Lm/e;.a:(JLm/f;)Z` @kind interface;
  #L3e213c.  v0:= temp;
  #L3e213e.  if v0 == 0 then goto L3e215c;
  #L3e2142.  v4:= `@@l.f0.c.g` @type ^`m.f` @kind object;
  #L3e2146.  call temp:= `l`(v4) @signature `Lm/f;.l:()I` @kind virtual;
  #L3e214c.  v4:= temp;
  #L3e214e.  v0:= (`long`) v4 @kind i2l;
  #L3e2150.  call `skip`(v3, v0) @signature `Lm/e;.skip:(J)V` @kind interface;
  #L3e2156.  v3:= `@@l.f0.c.l` @type ^`java.nio.charset.Charset` @kind object;
  #L3e215a.  return v3 @kind object;
  #L3e215c.  v0:= `@@l.f0.c.h` @type ^`m.f` @kind object;
  #L3e2160.  call temp:= `a`(v3, v1, v0) @signature `Lm/e;.a:(JLm/f;)Z` @kind interface;
  #L3e2166.  v0:= temp;
  #L3e2168.  if v0 == 0 then goto L3e2186;
  #L3e216c.  v4:= `@@l.f0.c.h` @type ^`m.f` @kind object;
  #L3e2170.  call temp:= `l`(v4) @signature `Lm/f;.l:()I` @kind virtual;
  #L3e2176.  v4:= temp;
  #L3e2178.  v0:= (`long`) v4 @kind i2l;
  #L3e217a.  call `skip`(v3, v0) @signature `Lm/e;.skip:(J)V` @kind interface;
  #L3e2180.  v3:= `@@l.f0.c.m` @type ^`java.nio.charset.Charset` @kind object;
  #L3e2184.  return v3 @kind object;
  #L3e2186.  return v4 @kind object;
}
procedure `java.util.List` `a`(`java.util.List` v1 @kind object) @signature `Ll/f0/c;.a:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e21c8.  v0:= new `java.util.ArrayList`;
  #L3e21cc.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3e21d2.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L3e21d8.  v1:= temp @kind object;
  #L3e21da.  return v1 @kind object;
}
procedure `java.util.List` `a`(`java.lang.Object`[] v0 @kind object) @signature `Ll/f0/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e2198.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3e219e.  v0:= temp @kind object;
  #L3e21a0.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L3e21a4.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3e21aa.  v0:= temp @kind object;
  #L3e21ac.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L3e21b2.  v0:= temp @kind object;
  #L3e21b4.  return v0 @kind object;
}
procedure `java.util.Map` `a`(`java.util.Map` v1 @kind object) @signature `Ll/f0/c;.a:(Ljava/util/Map;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e21ec.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L3e21f2.  v0:= temp;
  #L3e21f4.  if v0 == 0 then goto L3e2202;
  #L3e21f8.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L3e21fe.  v1:= temp @kind object;
  #L3e2200.  goto L3e2214;
  #L3e2202.  v0:= new `java.util.LinkedHashMap`;
  #L3e2206.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L3e220c.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L3e2212.  v1:= temp @kind object;
  #L3e2214.  return v1 @kind object;
}
procedure `java.util.concurrent.ThreadFactory` `a`(`java.lang.String` v1 @kind object, `boolean` v2 ) @signature `Ll/f0/c;.a:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e2228.  v0:= new `l.f0.c$b`;
  #L3e222c.  call `<init>`(v0, v1, v2) @signature `Ll/f0/c$b;.<init>:(Ljava/lang/String;Z)V` @kind direct;
  #L3e2232.  return v0 @kind object;
}
procedure `javax.net.ssl.X509TrustManager` `a`() @signature `Ll/f0/c;.a:()Ljavax/net/ssl/X509TrustManager;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e2244.  call temp:= `getDefaultAlgorithm`() @signature `Ljavax/net/ssl/TrustManagerFactory;.getDefaultAlgorithm:()Ljava/lang/String;` @kind static;
  #L3e224a.  v0:= temp @kind object;
  #L3e224c.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;` @kind static;
  #L3e2252.  v0:= temp @kind object;
  #L3e2254.  v1:= 0I;
  #L3e2256.  call `init`(v0, v1) @signature `Ljavax/net/ssl/TrustManagerFactory;.init:(Ljava/security/KeyStore;)V` @kind virtual;
  #L3e225c.  call temp:= `getTrustManagers`(v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.getTrustManagers:()[Ljavax/net/ssl/TrustManager;` @kind virtual;
  #L3e2262.  v0:= temp @kind object;
  #L3e2264.  v1:= length @variable v0;
  #L3e2266.  v2:= 1I;
  #L3e2268.  if v1 != v2 then goto L3e2284;
  #L3e226c.  v1:= 0I;
  #L3e226e.  v2:= v0[v1] @kind object;
  #L3e2272.  v2:= instanceof @variable v2 @type ^`javax.net.ssl.X509TrustManager` @kind boolean;
  #L3e2276.  if v2 == 0 then goto L3e2284;
  #L3e227a.  v0:= v0[v1] @kind object;
  #L3e227e.  v0:= (`javax.net.ssl.X509TrustManager`) v0 @kind object;
  #L3e2282.  return v0 @kind object;
  #L3e2284.  v1:= new `java.lang.IllegalStateException`;
  #L3e2288.  v2:= new `java.lang.StringBuilder`;
  #L3e228c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e2292.  v3:= "Unexpected default trust managers:" @kind object;
  #L3e2296.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e229c.  call temp:= `toString`(v0) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3e22a2.  v0:= temp @kind object;
  #L3e22a4.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e22aa.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e22b0.  v0:= temp @kind object;
  #L3e22b2.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e22b8.  throw v1;
  #L3e22ba.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L3e22bc.  v1:= "No System TLS" @kind object;
  #L3e22c0.  call temp:= `a`(v1, v0) @signature `Ll/f0/c;.a:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L3e22c6.  v0:= temp @kind object;
  #L3e22c8.  throw v0;
  catch `java.security.GeneralSecurityException` @[L3e2244..L3e22ba] goto L3e22ba;
}
procedure `void` `a`(`long` v5 , `long` v7 , `long` v9 ) @signature `Ll/f0/c;.a:(JJJ)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e24e4.  v0:= v7 ^| v9 @kind long;
  #L3e24e8.  v2:= 0L;
  #L3e24ec.  v4:= lcmp(v0, v2);
  #L3e24f0.  if v4 < 0 then goto L3e2508;
  #L3e24f4.  v0:= lcmp(v7, v5);
  #L3e24f8.  if v0 > 0 then goto L3e2508;
  #L3e24fc.  v5:= v5 - v7 @kind long;
  #L3e24fe.  v7:= lcmp(v5, v9);
  #L3e2502.  if v7 < 0 then goto L3e2508;
  #L3e2506.  return @kind void;
  #L3e2508.  v5:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L3e250c.  call `<init>`(v5) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L3e2512.  throw v5;
}
procedure `void` `a`(`java.io.Closeable` v0 @kind object) @signature `Ll/f0/c;.a:(Ljava/io/Closeable;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e2524.  if v0 == 0 then goto L3e2534;
  #L3e2528.  call `close`(v0) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #L3e252e.  goto L3e2534;
  #L3e2530.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L3e2532.  throw v0;
  #L3e2534.  return @kind void;
  catch `java.lang.RuntimeException` @[L3e2528..L3e252e] goto L3e2530;
  catch `java.lang.Exception` @[L3e2528..L3e252e] goto L3e2534;
}
procedure `void` `a`(`java.lang.Throwable` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Ll/f0/c;.a:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e24a8.  v0:= `@@l.f0.c.p` @type ^`java.lang.reflect.Method` @kind object;
  #L3e24ac.  if v0 == 0 then goto L3e24c2;
  #L3e24b0.  v1:= 1I;
  #L3e24b2.  v1:= new `java.lang.Object`[v1];
  #L3e24b6.  v2:= 0I;
  #L3e24b8.  v1[v2]:= v4 @kind object;
  #L3e24bc.  call temp:= `invoke`(v0, v3, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e24c2.  return @kind void;
  catch `java.lang.reflect.InvocationTargetException` @[L3e24b2..L3e24c2] goto L3e24c2;
  catch `java.lang.IllegalAccessException` @[L3e24b2..L3e24c2] goto L3e24c2;
}
procedure `void` `a`(`java.net.Socket` v1 @kind object) @signature `Ll/f0/c;.a:(Ljava/net/Socket;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e2558.  if v1 == 0 then goto L3e257a;
  #L3e255c.  call `close`(v1) @signature `Ljava/net/Socket;.close:()V` @kind virtual;
  #L3e2562.  goto L3e257a;
  #L3e2564.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L3e2566.  throw v1;
  #L3e2568.  v1:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L3e256a.  call temp:= `a`(v1) @signature `Ll/f0/c;.a:(Ljava/lang/AssertionError;)Z` @kind static;
  #L3e2570.  v0:= temp;
  #L3e2572.  if v0 == 0 then goto L3e2578;
  #L3e2576.  goto L3e257a;
  #L3e2578.  throw v1;
  #L3e257a.  return @kind void;
  catch `java.lang.AssertionError` @[L3e255c..L3e2562] goto L3e2568;
  catch `java.lang.RuntimeException` @[L3e255c..L3e2562] goto L3e2564;
  catch `java.lang.Exception` @[L3e255c..L3e2562] goto L3e257a;
}
procedure `boolean` `a`(`java.lang.AssertionError` v1 @kind object) @signature `Ll/f0/c;.a:(Ljava/lang/AssertionError;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e171c.  call temp:= `getCause`(v1) @signature `Ljava/lang/AssertionError;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L3e1722.  v0:= temp @kind object;
  #L3e1724.  if v0 == 0 then goto L3e1750;
  #L3e1728.  call temp:= `getMessage`(v1) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3e172e.  v0:= temp @kind object;
  #L3e1730.  if v0 == 0 then goto L3e1750;
  #L3e1734.  call temp:= `getMessage`(v1) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3e173a.  v1:= temp @kind object;
  #L3e173c.  v0:= "getsockname failed" @kind object;
  #L3e1740.  call temp:= `contains`(v1, v0) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L3e1746.  v1:= temp;
  #L3e1748.  if v1 == 0 then goto L3e1750;
  #L3e174c.  v1:= 1I;
  #L3e174e.  goto L3e1752;
  #L3e1750.  v1:= 0I;
  #L3e1752.  return v1;
}
procedure `boolean` `a`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Ll/f0/c;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e16ec.  if v0 == v1 then goto L3e1706;
  #L3e16f0.  if v0 == 0 then goto L3e1702;
  #L3e16f4.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e16fa.  v0:= temp;
  #L3e16fc.  if v0 == 0 then goto L3e1702;
  #L3e1700.  goto L3e1706;
  #L3e1702.  v0:= 0I;
  #L3e1704.  goto L3e1708;
  #L3e1706.  v0:= 1I;
  #L3e1708.  return v0;
}
procedure `boolean` `a`(`java.lang.String` v7 @kind object, `int` v8 , `int` v9 , `byte`[] v10 @kind object, `int` v11 ) @signature `Ll/f0/c;.a:(Ljava/lang/String;II[BI)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e1614.  v0:= v11;
  #L3e1616.  v1:= 0I;
  #L3e1618.  if v8 >= v9 then goto L3e169c;
  #L3e161c.  v2:= length @variable v10;
  #L3e161e.  if v0 != v2 then goto L3e1624;
  #L3e1622.  return v1;
  #L3e1624.  if v0 == v11 then goto L3e163e;
  #L3e1628.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3e162e.  v2:= temp;
  #L3e1630.  v3:= 46I;
  #L3e1634.  if v2 == v3 then goto L3e163a;
  #L3e1638.  return v1;
  #L3e163a.  v8:= v8 + 1;
  #L3e163e.  v2:= v8;
  #L3e1640.  v3:= 0I;
  #L3e1642.  if v2 >= v9 then goto L3e1682;
  #L3e1646.  call temp:= `charAt`(v7, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3e164c.  v4:= temp;
  #L3e164e.  v5:= 48I;
  #L3e1652.  if v4 < v5 then goto L3e1682;
  #L3e1656.  v6:= 57I;
  #L3e165a.  if v4 <= v6 then goto L3e1660;
  #L3e165e.  goto L3e1682;
  #L3e1660.  if v3 != 0 then goto L3e166a;
  #L3e1664.  if v8 == v2 then goto L3e166a;
  #L3e1668.  return v1;
  #L3e166a.  v3:= v3 * 10;
  #L3e166e.  v3:= v3 + v4 @kind int;
  #L3e1670.  v3:= v3 - v5 @kind int;
  #L3e1672.  v4:= 255I;
  #L3e1676.  if v3 <= v4 then goto L3e167c;
  #L3e167a.  return v1;
  #L3e167c.  v2:= v2 + 1;
  #L3e1680.  goto L3e1642;
  #L3e1682.  v8:= v2 - v8 @kind int;
  #L3e1686.  if v8 != 0 then goto L3e168c;
  #L3e168a.  return v1;
  #L3e168c.  v8:= v0 + 1;
  #L3e1690.  v1:= (`byte`) v3 @kind i2b;
  #L3e1692.  v10[v0]:= v1 @kind byte;
  #L3e1696.  v0:= v8;
  #L3e1698.  v8:= v2;
  #L3e169a.  goto L3e1616;
  #L3e169c.  v11:= v11 + 4;
  #L3e16a0.  if v0 == v11 then goto L3e16a6;
  #L3e16a4.  return v1;
  #L3e16a6.  v7:= 1I;
  #L3e16a8.  return v7;
}
procedure `boolean` `a`(`m.s` v0 @kind object, `int` v1 , `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Ll/f0/c;.a:(Lm/s;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e16bc.  call temp:= `b`(v0, v1, v2) @signature `Ll/f0/c;.b:(Lm/s;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L3e16c2.  v0:= temp;
  #L3e16c4.  return v0;
  #L3e16c6.  v0:= 0I;
  #L3e16c8.  return v0;
  catch `java.io.IOException` @[L3e16bc..L3e16c4] goto L3e16c6;
}
procedure `java.lang.String`[] `a`(`java.util.Comparator` v8 @kind object, `java.lang.String`[] v9 @kind object, `java.lang.String`[] v10 @kind object) @signature `Ll/f0/c;.a:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3e1eec.  v0:= new `java.util.ArrayList`;
  #L3e1ef0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3e1ef6.  v1:= length @variable v9;
  #L3e1ef8.  v2:= 0I;
  #L3e1efa.  v3:= 0I;
  #L3e1efc.  if v3 >= v1 then goto L3e1f30;
  #L3e1f00.  v4:= v9[v3] @kind object;
  #L3e1f04.  v5:= length @variable v10;
  #L3e1f06.  v6:= 0I;
  #L3e1f08.  if v6 >= v5 then goto L3e1f2a;
  #L3e1f0c.  v7:= v10[v6] @kind object;
  #L3e1f10.  call temp:= `compare`(v8, v4, v7) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L3e1f16.  v7:= temp;
  #L3e1f18.  if v7 != 0 then goto L3e1f24;
  #L3e1f1c.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e1f22.  goto L3e1f2a;
  #L3e1f24.  v6:= v6 + 1;
  #L3e1f28.  goto L3e1f08;
  #L3e1f2a.  v3:= v3 + 1;
  #L3e1f2e.  goto L3e1efc;
  #L3e1f30.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e1f36.  v8:= temp;
  #L3e1f38.  v8:= new `java.lang.String`[v8];
  #L3e1f3c.  call temp:= `toArray`(v0, v8) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L3e1f42.  v8:= temp @kind object;
  #L3e1f44.  v8:= (`java.lang.String`[]) v8 @kind object;
  #L3e1f48.  return v8 @kind object;
}
procedure `java.lang.String`[] `a`(`java.lang.String`[] v3 @kind object, `java.lang.String` v4 @kind object) @signature `Ll/f0/c;.a:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e1ebc.  v0:= length @variable v3;
  #L3e1ebe.  v0:= v0 + 1;
  #L3e1ec2.  v0:= new `java.lang.String`[v0];
  #L3e1ec6.  v1:= length @variable v3;
  #L3e1ec8.  v2:= 0I;
  #L3e1eca.  call `arraycopy`(v3, v2, v0, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3e1ed0.  v3:= length @variable v0;
  #L3e1ed2.  v3:= v3 + -1;
  #L3e1ed6.  v0[v3]:= v4 @kind object;
  #L3e1eda.  return v0 @kind object;
}
procedure `int` `b`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Ll/f0/c;.b:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e1b14.  if v3 >= v4 then goto L3e1b50;
  #L3e1b18.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3e1b1e.  v0:= temp;
  #L3e1b20.  v1:= 9I;
  #L3e1b24.  if v0 == v1 then goto L3e1b4a;
  #L3e1b28.  v1:= 10I;
  #L3e1b2c.  if v0 == v1 then goto L3e1b4a;
  #L3e1b30.  v1:= 12I;
  #L3e1b34.  if v0 == v1 then goto L3e1b4a;
  #L3e1b38.  v1:= 13I;
  #L3e1b3c.  if v0 == v1 then goto L3e1b4a;
  #L3e1b40.  v1:= 32I;
  #L3e1b44.  if v0 == v1 then goto L3e1b4a;
  #L3e1b48.  return v3;
  #L3e1b4a.  v3:= v3 + 1;
  #L3e1b4e.  goto L3e1b14;
  #L3e1b50.  return v4;
}
procedure `l.r` `b`(`java.util.List` v4 @kind object) @signature `Ll/f0/c;.b:(Ljava/util/List;)Ll/r;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e22ec.  v0:= new `l.r$a`;
  #L3e22f0.  call `<init>`(v0) @signature `Ll/r$a;.<init>:()V` @kind direct;
  #L3e22f6.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e22fc.  v4:= temp @kind object;
  #L3e22fe.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e2304.  v1:= temp;
  #L3e2306.  if v1 == 0 then goto L3e233a;
  #L3e230a.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e2310.  v1:= temp @kind object;
  #L3e2312.  v1:= (`l.f0.i.c`) v1 @kind object;
  #L3e2316.  v2:= `@@l.f0.a.a` @type ^`l.f0.a` @kind object;
  #L3e231a.  v3:= v1.`l.f0.i.c.a` @type ^`m.f` @kind object;
  #L3e231e.  call temp:= `o`(v3) @signature `Lm/f;.o:()Ljava/lang/String;` @kind virtual;
  #L3e2324.  v3:= temp @kind object;
  #L3e2326.  v1:= v1.`l.f0.i.c.b` @type ^`m.f` @kind object;
  #L3e232a.  call temp:= `o`(v1) @signature `Lm/f;.o:()Ljava/lang/String;` @kind virtual;
  #L3e2330.  v1:= temp @kind object;
  #L3e2332.  call `a`(v2, v0, v3, v1) @signature `Ll/f0/a;.a:(Ll/r$a;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L3e2338.  goto L3e22fe;
  #L3e233a.  call temp:= `a`(v0) @signature `Ll/r$a;.a:()Ll/r;` @kind virtual;
  #L3e2340.  v4:= temp @kind object;
  #L3e2342.  return v4 @kind object;
}
procedure `boolean` `b`(`java.lang.String` v5 @kind object) @signature `Ll/f0/c;.b:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e15b8.  v0:= 0I;
  #L3e15ba.  v1:= 0I;
  #L3e15bc.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3e15c2.  v2:= temp;
  #L3e15c4.  if v1 >= v2 then goto L3e1600;
  #L3e15c8.  call temp:= `charAt`(v5, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3e15ce.  v2:= temp;
  #L3e15d0.  v3:= 31I;
  #L3e15d4.  v4:= 1I;
  #L3e15d6.  if v2 <= v3 then goto L3e15fe;
  #L3e15da.  v3:= 127I;
  #L3e15de.  if v2 < v3 then goto L3e15e4;
  #L3e15e2.  goto L3e15fe;
  #L3e15e4.  v3:= " #%/:?@[\\]" @kind object;
  #L3e15e8.  call temp:= `indexOf`(v3, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L3e15ee.  v2:= temp;
  #L3e15f0.  v3:= -1I;
  #L3e15f2.  if v2 == v3 then goto L3e15f8;
  #L3e15f6.  return v4;
  #L3e15f8.  v1:= v1 + 1;
  #L3e15fc.  goto L3e15bc;
  #L3e15fe.  return v4;
  #L3e1600.  return v0;
}
procedure `boolean` `b`(`java.util.Comparator` v7 @kind object, `java.lang.String`[] v8 @kind object, `java.lang.String`[] v9 @kind object) @signature `Ll/f0/c;.b:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e1764.  v0:= 0I;
  #L3e1766.  if v8 == 0 then goto L3e17b0;
  #L3e176a.  if v9 == 0 then goto L3e17b0;
  #L3e176e.  v1:= length @variable v8;
  #L3e1770.  if v1 == 0 then goto L3e17b0;
  #L3e1774.  v1:= length @variable v9;
  #L3e1776.  if v1 != 0 then goto L3e177c;
  #L3e177a.  goto L3e17b0;
  #L3e177c.  v1:= length @variable v8;
  #L3e177e.  v2:= 0I;
  #L3e1780.  if v2 >= v1 then goto L3e17b0;
  #L3e1784.  v3:= v8[v2] @kind object;
  #L3e1788.  v4:= length @variable v9;
  #L3e178a.  v5:= 0I;
  #L3e178c.  if v5 >= v4 then goto L3e17aa;
  #L3e1790.  v6:= v9[v5] @kind object;
  #L3e1794.  call temp:= `compare`(v7, v3, v6) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L3e179a.  v6:= temp;
  #L3e179c.  if v6 != 0 then goto L3e17a4;
  #L3e17a0.  v7:= 1I;
  #L3e17a2.  return v7;
  #L3e17a4.  v5:= v5 + 1;
  #L3e17a8.  goto L3e178c;
  #L3e17aa.  v2:= v2 + 1;
  #L3e17ae.  goto L3e1780;
  #L3e17b0.  return v0;
}
procedure `boolean` `b`(`m.s` v11 @kind object, `int` v12 , `java.util.concurrent.TimeUnit` v13 @kind object) @signature `Ll/f0/c;.b:(Lm/s;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3e17c4.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L3e17ca.  v0:= temp @kind wide;
  #L3e17cc.  call temp:= `d`(v11) @signature `Lm/s;.d:()Lm/t;` @kind interface;
  #L3e17d2.  v2:= temp @kind object;
  #L3e17d4.  call temp:= `d`(v2) @signature `Lm/t;.d:()Z` @kind virtual;
  #L3e17da.  v2:= temp;
  #L3e17dc.  v3:= 9223372036854775807L;
  #L3e17e6.  if v2 == 0 then goto L3e17fe;
  #L3e17ea.  call temp:= `d`(v11) @signature `Lm/s;.d:()Lm/t;` @kind interface;
  #L3e17f0.  v2:= temp @kind object;
  #L3e17f2.  call temp:= `c`(v2) @signature `Lm/t;.c:()J` @kind virtual;
  #L3e17f8.  v5:= temp @kind wide;
  #L3e17fa.  v5:= v5 - v0 @kind long;
  #L3e17fc.  goto L3e1800;
  #L3e17fe.  v5:= v3 @kind wide;
  #L3e1800.  call temp:= `d`(v11) @signature `Lm/s;.d:()Lm/t;` @kind interface;
  #L3e1806.  v2:= temp @kind object;
  #L3e1808.  v7:= (`long`) v12 @kind i2l;
  #L3e180a.  call temp:= `toNanos`(v13, v7) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L3e1810.  v12:= temp @kind wide;
  #L3e1812.  call temp:= `min`(v5, v12) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3e1818.  v12:= temp @kind wide;
  #L3e181a.  v12:= v12 + v0 @kind long;
  #L3e181c.  call temp:= `a`(v2, v12) @signature `Lm/t;.a:(J)Lm/t;` @kind virtual;
  #L3e1822.  v12:= new `m.c`;
  #L3e1826.  call `<init>`(v12) @signature `Lm/c;.<init>:()V` @kind direct;
  #L3e182c.  v7:= 8192L;
  #L3e1830.  call temp:= `a`(v11, v12, v7) @signature `Lm/s;.a:(Lm/c;J)J` @kind interface;
  #L3e1836.  v7:= temp @kind wide;
  #L3e1838.  v9:= -1L;
  #L3e183c.  v13:= lcmp(v7, v9);
  #L3e1840.  if v13 == 0 then goto L3e184c;
  #L3e1844.  call `q`(v12) @signature `Lm/c;.q:()V` @kind virtual;
  #L3e184a.  goto L3e182c;
  #L3e184c.  v12:= 1I;
  #L3e184e.  v13:= lcmp(v5, v3);
  #L3e1852.  call temp:= `d`(v11) @signature `Lm/s;.d:()Lm/t;` @kind interface;
  #L3e1858.  v11:= temp @kind object;
  #L3e185a.  if v13 != 0 then goto L3e1866;
  #L3e185e.  call temp:= `a`(v11) @signature `Lm/t;.a:()Lm/t;` @kind virtual;
  #L3e1864.  goto L3e186e;
  #L3e1866.  v0:= v0 + v5 @kind long;
  #L3e1868.  call temp:= `a`(v11, v0) @signature `Lm/t;.a:(J)Lm/t;` @kind virtual;
  #L3e186e.  return v12;
  #L3e1870.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e1872.  v13:= lcmp(v5, v3);
  #L3e1876.  call temp:= `d`(v11) @signature `Lm/s;.d:()Lm/t;` @kind interface;
  #L3e187c.  v11:= temp @kind object;
  #L3e187e.  if v13 != 0 then goto L3e188a;
  #L3e1882.  call temp:= `a`(v11) @signature `Lm/t;.a:()Lm/t;` @kind virtual;
  #L3e1888.  goto L3e1892;
  #L3e188a.  v0:= v0 + v5 @kind long;
  #L3e188c.  call temp:= `a`(v11, v0) @signature `Lm/t;.a:(J)Lm/t;` @kind virtual;
  #L3e1892.  throw v12;
  #L3e1894.  
  #L3e1896.  v12:= 0I;
  #L3e1898.  v13:= lcmp(v5, v3);
  #L3e189c.  call temp:= `d`(v11) @signature `Lm/s;.d:()Lm/t;` @kind interface;
  #L3e18a2.  v11:= temp @kind object;
  #L3e18a4.  if v13 != 0 then goto L3e18b0;
  #L3e18a8.  call temp:= `a`(v11) @signature `Lm/t;.a:()Lm/t;` @kind virtual;
  #L3e18ae.  goto L3e18b8;
  #L3e18b0.  v0:= v0 + v5 @kind long;
  #L3e18b2.  call temp:= `a`(v11, v0) @signature `Lm/t;.a:(J)Lm/t;` @kind virtual;
  #L3e18b8.  return v12;
  catch `java.io.InterruptedIOException` @[L3e1822..L3e184a] goto L3e1894;
  catch `java.lang.Throwable` @[L3e1822..L3e184a] goto L3e1870;
}
procedure `int` `c`(`java.lang.String` v4 @kind object) @signature `Ll/f0/c;.c:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e1ad0.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3e1ad6.  v0:= temp;
  #L3e1ad8.  v1:= 0I;
  #L3e1ada.  if v1 >= v0 then goto L3e1b00;
  #L3e1ade.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3e1ae4.  v2:= temp;
  #L3e1ae6.  v3:= 31I;
  #L3e1aea.  if v2 <= v3 then goto L3e1afe;
  #L3e1aee.  v3:= 127I;
  #L3e1af2.  if v2 < v3 then goto L3e1af8;
  #L3e1af6.  goto L3e1afe;
  #L3e1af8.  v1:= v1 + 1;
  #L3e1afc.  goto L3e1ada;
  #L3e1afe.  return v1;
  #L3e1b00.  v4:= -1I;
  #L3e1b02.  return v4;
}
procedure `int` `c`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Ll/f0/c;.c:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e1b64.  v4:= v4 + -1;
  #L3e1b68.  if v4 < v3 then goto L3e1ba8;
  #L3e1b6c.  call temp:= `charAt`(v2, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3e1b72.  v0:= temp;
  #L3e1b74.  v1:= 9I;
  #L3e1b78.  if v0 == v1 then goto L3e1ba2;
  #L3e1b7c.  v1:= 10I;
  #L3e1b80.  if v0 == v1 then goto L3e1ba2;
  #L3e1b84.  v1:= 12I;
  #L3e1b88.  if v0 == v1 then goto L3e1ba2;
  #L3e1b8c.  v1:= 13I;
  #L3e1b90.  if v0 == v1 then goto L3e1ba2;
  #L3e1b94.  v1:= 32I;
  #L3e1b98.  if v0 == v1 then goto L3e1ba2;
  #L3e1b9c.  v4:= v4 + 1;
  #L3e1ba0.  return v4;
  #L3e1ba2.  v4:= v4 + -1;
  #L3e1ba6.  goto L3e1b68;
  #L3e1ba8.  return v3;
}
procedure `java.lang.String` `d`(`java.lang.String` v0 @kind object, `int` v1 , `int` v2 ) @signature `Ll/f0/c;.d:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e1e90.  call temp:= `b`(v0, v1, v2) @signature `Ll/f0/c;.b:(Ljava/lang/String;II)I` @kind static;
  #L3e1e96.  v1:= temp;
  #L3e1e98.  call temp:= `c`(v0, v1, v2) @signature `Ll/f0/c;.c:(Ljava/lang/String;II)I` @kind static;
  #L3e1e9e.  v2:= temp;
  #L3e1ea0.  call temp:= `substring`(v0, v1, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3e1ea6.  v0:= temp @kind object;
  #L3e1ea8.  return v0 @kind object;
}
procedure `boolean` `d`(`java.lang.String` v1 @kind object) @signature `Ll/f0/c;.d:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e18dc.  v0:= `@@l.f0.c.q` @type ^`java.util.regex.Pattern` @kind object;
  #L3e18e0.  call temp:= `matcher`(v0, v1) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L3e18e6.  v1:= temp @kind object;
  #L3e18e8.  call temp:= `matches`(v1) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L3e18ee.  v1:= temp;
  #L3e18f0.  return v1;
}
