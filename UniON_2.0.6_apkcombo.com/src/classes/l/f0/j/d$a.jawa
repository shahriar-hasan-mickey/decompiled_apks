record `l.f0.j.d$a` @kind class @AccessFlag  extends `java.lang.reflect.InvocationHandler` @kind interface {
  `java.util.List` `l.f0.j.d$a.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `l.f0.j.d$a.b` @AccessFlag ;
  `java.lang.String` `l.f0.j.d$a.c` @AccessFlag ;
}
procedure `void` `<init>`(`l.f0.j.d$a` v0 @kind this, `java.util.List` v1 @kind object) @signature `Ll/f0/j/d$a;.<init>:(Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ef6f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ef6fa.  v0.`l.f0.j.d$a.a` @type ^`java.util.List` := v1 @kind object;
  #L3ef6fe.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`l.f0.j.d$a` v5 @kind this, `java.lang.Object` v6 @kind object, `java.lang.reflect.Method` v7 @kind object, `java.lang.Object`[] v8 @kind object) @signature `Ll/f0/j/d$a;.invoke:(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ef59c.  call temp:= `getName`(v7) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L3ef5a2.  v6:= temp @kind object;
  #L3ef5a4.  call temp:= `getReturnType`(v7) @signature `Ljava/lang/reflect/Method;.getReturnType:()Ljava/lang/Class;` @kind virtual;
  #L3ef5aa.  v0:= temp @kind object;
  #L3ef5ac.  if v8 != 0 then goto L3ef5b4;
  #L3ef5b0.  v8:= `@@l.f0.c.b` @type ^`java.lang.String`[] @kind object;
  #L3ef5b4.  v1:= "supports" @kind object;
  #L3ef5b8.  call temp:= `equals`(v6, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ef5be.  v1:= temp;
  #L3ef5c0.  v2:= 1I;
  #L3ef5c2.  if v1 == 0 then goto L3ef5d8;
  #L3ef5c6.  v1:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L3ef5ca.  if v1 != v0 then goto L3ef5d8;
  #L3ef5ce.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L3ef5d4.  v6:= temp @kind object;
  #L3ef5d6.  return v6 @kind object;
  #L3ef5d8.  v1:= "unsupported" @kind object;
  #L3ef5dc.  call temp:= `equals`(v6, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ef5e2.  v1:= temp;
  #L3ef5e4.  v3:= 0I;
  #L3ef5e6.  if v1 == 0 then goto L3ef5f8;
  #L3ef5ea.  v1:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L3ef5ee.  if v1 != v0 then goto L3ef5f8;
  #L3ef5f2.  v5.`l.f0.j.d$a.b` @type ^`boolean` := v2 @kind boolean;
  #L3ef5f6.  return v3 @kind object;
  #L3ef5f8.  v1:= "protocols" @kind object;
  #L3ef5fc.  call temp:= `equals`(v6, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ef602.  v1:= temp;
  #L3ef604.  if v1 == 0 then goto L3ef614;
  #L3ef608.  v1:= length @variable v8;
  #L3ef60a.  if v1 != 0 then goto L3ef614;
  #L3ef60e.  v6:= v5.`l.f0.j.d$a.a` @type ^`java.util.List` @kind object;
  #L3ef612.  return v6 @kind object;
  #L3ef614.  v1:= "selectProtocol" @kind object;
  #L3ef618.  call temp:= `equals`(v6, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ef61e.  v1:= temp;
  #L3ef620.  v4:= 0I;
  #L3ef622.  if v1 != 0 then goto L3ef636;
  #L3ef626.  v1:= "select" @kind object;
  #L3ef62a.  call temp:= `equals`(v6, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ef630.  v1:= temp;
  #L3ef632.  if v1 == 0 then goto L3ef6a4;
  #L3ef636.  v1:= constclass @type ^`java.lang.String` @kind object;
  #L3ef63a.  if v1 != v0 then goto L3ef6a4;
  #L3ef63e.  v0:= length @variable v8;
  #L3ef640.  if v0 != v2 then goto L3ef6a4;
  #L3ef644.  v0:= v8[v4] @kind object;
  #L3ef648.  v0:= instanceof @variable v0 @type ^`java.util.List` @kind boolean;
  #L3ef64c.  if v0 == 0 then goto L3ef6a4;
  #L3ef650.  v6:= v8[v4] @kind object;
  #L3ef654.  v6:= (`java.util.List`) v6 @kind object;
  #L3ef658.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3ef65e.  v7:= temp;
  #L3ef660.  v8:= 0I;
  #L3ef662.  if v8 >= v7 then goto L3ef696;
  #L3ef666.  v0:= v5.`l.f0.j.d$a.a` @type ^`java.util.List` @kind object;
  #L3ef66a.  call temp:= `get`(v6, v8) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3ef670.  v1:= temp @kind object;
  #L3ef672.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3ef678.  v0:= temp;
  #L3ef67a.  if v0 == 0 then goto L3ef690;
  #L3ef67e.  call temp:= `get`(v6, v8) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3ef684.  v6:= temp @kind object;
  #L3ef686.  v6:= (`java.lang.String`) v6 @kind object;
  #L3ef68a.  v5.`l.f0.j.d$a.c` @type ^`java.lang.String` := v6 @kind object;
  #L3ef68e.  return v6 @kind object;
  #L3ef690.  v8:= v8 + 1;
  #L3ef694.  goto L3ef662;
  #L3ef696.  v6:= v5.`l.f0.j.d$a.a` @type ^`java.util.List` @kind object;
  #L3ef69a.  call temp:= `get`(v6, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3ef6a0.  v6:= temp @kind object;
  #L3ef6a2.  goto L3ef686;
  #L3ef6a4.  v0:= "protocolSelected" @kind object;
  #L3ef6a8.  call temp:= `equals`(v6, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ef6ae.  v0:= temp;
  #L3ef6b0.  if v0 != 0 then goto L3ef6c4;
  #L3ef6b4.  v0:= "selected" @kind object;
  #L3ef6b8.  call temp:= `equals`(v6, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ef6be.  v6:= temp;
  #L3ef6c0.  if v6 == 0 then goto L3ef6d8;
  #L3ef6c4.  v6:= length @variable v8;
  #L3ef6c6.  if v6 != v2 then goto L3ef6d8;
  #L3ef6ca.  v6:= v8[v4] @kind object;
  #L3ef6ce.  v6:= (`java.lang.String`) v6 @kind object;
  #L3ef6d2.  v5.`l.f0.j.d$a.c` @type ^`java.lang.String` := v6 @kind object;
  #L3ef6d6.  return v3 @kind object;
  #L3ef6d8.  call temp:= `invoke`(v7, v5, v8) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ef6de.  v6:= temp @kind object;
  #L3ef6e0.  return v6 @kind object;
}
