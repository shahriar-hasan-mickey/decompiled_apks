record `l.f0.j.a$c` @kind class @AccessFlag FINAL {
  `java.lang.reflect.Method` `l.f0.j.a$c.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `l.f0.j.a$c.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `l.f0.j.a$c.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`l.f0.j.a$c` v0 @kind this, `java.lang.reflect.Method` v1 @kind object, `java.lang.reflect.Method` v2 @kind object, `java.lang.reflect.Method` v3 @kind object) @signature `Ll/f0/j/a$c;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3eec14.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eec1a.  v0.`l.f0.j.a$c.a` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L3eec1e.  v0.`l.f0.j.a$c.b` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L3eec22.  v0.`l.f0.j.a$c.c` @type ^`java.lang.reflect.Method` := v3 @kind object;
  #L3eec26.  return @kind void;
}
procedure `l.f0.j.a$c` `a`() @signature `Ll/f0/j/a$c;.a:()Ll/f0/j/a$c;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3eeb94.  v0:= "dalvik.system.CloseGuard" @kind object;
  #L3eeb98.  v1:= 0I;
  #L3eeb9a.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L3eeba0.  v0:= temp @kind object;
  #L3eeba2.  v2:= "get" @kind object;
  #L3eeba6.  v3:= 0I;
  #L3eeba8.  v4:= new `java.lang.Class`[v3];
  #L3eebac.  call temp:= `getMethod`(v0, v2, v4) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L3eebb2.  v2:= temp @kind object;
  #L3eebb4.  v4:= "open" @kind object;
  #L3eebb8.  v5:= 1I;
  #L3eebba.  v5:= new `java.lang.Class`[v5];
  #L3eebbe.  v6:= constclass @type ^`java.lang.String` @kind object;
  #L3eebc2.  v5[v3]:= v6 @kind object;
  #L3eebc6.  call temp:= `getMethod`(v0, v4, v5) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L3eebcc.  v4:= temp @kind object;
  #L3eebce.  v5:= "warnIfOpen" @kind object;
  #L3eebd2.  v3:= new `java.lang.Class`[v3];
  #L3eebd6.  call temp:= `getMethod`(v0, v5, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L3eebdc.  v1:= temp @kind object;
  #L3eebde.  v0:= v1 @kind object;
  #L3eebe0.  v1:= v2 @kind object;
  #L3eebe2.  goto L3eebe8;
  #L3eebe4.  v0:= v1 @kind object;
  #L3eebe6.  v4:= v0 @kind object;
  #L3eebe8.  v2:= new `l.f0.j.a$c`;
  #L3eebec.  call `<init>`(v2, v1, v4, v0) @signature `Ll/f0/j/a$c;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @kind direct;
  #L3eebf2.  return v2 @kind object;
  catch `java.lang.Exception` @[L3eeb9a..L3eebde] goto L3eebe4;
}
procedure `java.lang.Object` `a`(`l.f0.j.a$c` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Ll/f0/j/a$c;.a:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3eeb44.  v0:= v5.`l.f0.j.a$c.a` @type ^`java.lang.reflect.Method` @kind object;
  #L3eeb48.  v1:= 0I;
  #L3eeb4a.  if v0 == 0 then goto L3eeb72;
  #L3eeb4e.  v2:= 0I;
  #L3eeb50.  v3:= new `java.lang.Object`[v2];
  #L3eeb54.  call temp:= `invoke`(v0, v1, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3eeb5a.  v0:= temp @kind object;
  #L3eeb5c.  v3:= v5.`l.f0.j.a$c.b` @type ^`java.lang.reflect.Method` @kind object;
  #L3eeb60.  v4:= 1I;
  #L3eeb62.  v4:= new `java.lang.Object`[v4];
  #L3eeb66.  v4[v2]:= v6 @kind object;
  #L3eeb6a.  call temp:= `invoke`(v3, v0, v4) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3eeb70.  return v0 @kind object;
  #L3eeb72.  return v1 @kind object;
  catch `java.lang.Exception` @[L3eeb50..L3eeb70] goto L3eeb72;
}
procedure `boolean` `a`(`l.f0.j.a$c` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Ll/f0/j/a$c;.a:(Ljava/lang/Object;)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3eeb0c.  v0:= 0I;
  #L3eeb0e.  if v4 == 0 then goto L3eeb22;
  #L3eeb12.  v1:= v3.`l.f0.j.a$c.c` @type ^`java.lang.reflect.Method` @kind object;
  #L3eeb16.  v2:= new `java.lang.Object`[v0];
  #L3eeb1a.  call temp:= `invoke`(v1, v4, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3eeb20.  v0:= 1I;
  #L3eeb22.  return v0;
  catch `java.lang.Exception` @[L3eeb12..L3eeb20] goto L3eeb22;
}
