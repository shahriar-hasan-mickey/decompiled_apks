record `l.f0.j.a` @kind class @AccessFlag  extends `l.f0.j.f` @kind class {
  `l.f0.j.e` `l.f0.j.a.c` @AccessFlag PRIVATE_FINAL;
  `l.f0.j.e` `l.f0.j.a.d` @AccessFlag PRIVATE_FINAL;
  `l.f0.j.e` `l.f0.j.a.e` @AccessFlag PRIVATE_FINAL;
  `l.f0.j.e` `l.f0.j.a.f` @AccessFlag PRIVATE_FINAL;
  `l.f0.j.a$c` `l.f0.j.a.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`l.f0.j.a` v0 @kind this, `java.lang.Class` v1 @kind object, `l.f0.j.e` v2 @kind object, `l.f0.j.e` v3 @kind object, `l.f0.j.e` v4 @kind object, `l.f0.j.e` v5 @kind object) @signature `Ll/f0/j/a;.<init>:(Ljava/lang/Class;Ll/f0/j/e;Ll/f0/j/e;Ll/f0/j/e;Ll/f0/j/e;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ef08c.  call `<init>`(v0) @signature `Ll/f0/j/f;.<init>:()V` @kind direct;
  #L3ef092.  call temp:= `a`() @signature `Ll/f0/j/a$c;.a:()Ll/f0/j/a$c;` @kind static;
  #L3ef098.  v1:= temp @kind object;
  #L3ef09a.  v0.`l.f0.j.a.g` @type ^`l.f0.j.a$c` := v1 @kind object;
  #L3ef09e.  v0.`l.f0.j.a.c` @type ^`l.f0.j.e` := v2 @kind object;
  #L3ef0a2.  v0.`l.f0.j.a.d` @type ^`l.f0.j.e` := v3 @kind object;
  #L3ef0a6.  v0.`l.f0.j.a.e` @type ^`l.f0.j.e` := v4 @kind object;
  #L3ef0aa.  v0.`l.f0.j.a.f` @type ^`l.f0.j.e` := v5 @kind object;
  #L3ef0ae.  return @kind void;
}
procedure `boolean` `a`(`l.f0.j.a` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.Class` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Ll/f0/j/a;.a:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3eec38.  v0:= "isCleartextTrafficPermitted" @kind object;
  #L3eec3c.  v1:= 0I;
  #L3eec3e.  v2:= new `java.lang.Class`[v1];
  #L3eec42.  call temp:= `getMethod`(v5, v0, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L3eec48.  v5:= temp @kind object;
  #L3eec4a.  v0:= new `java.lang.Object`[v1];
  #L3eec4e.  call temp:= `invoke`(v5, v6, v0) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3eec54.  v5:= temp @kind object;
  #L3eec56.  v5:= (`java.lang.Boolean`) v5 @kind object;
  #L3eec5a.  call temp:= `booleanValue`(v5) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L3eec60.  v4:= temp;
  #L3eec62.  return v4;
  #L3eec64.  call temp:= `b`(v3, v4) @signature `Ll/f0/j/f;.b:(Ljava/lang/String;)Z` @kind super;
  #L3eec6a.  v4:= temp;
  #L3eec6c.  return v4;
  catch `java.lang.NoSuchMethodException` @[L3eec38..L3eec62] goto L3eec64;
}
procedure `l.f0.j.f` `b`() @signature `Ll/f0/j/a;.b:()Ll/f0/j/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3eeebc.  v0:= constclass @type ^`byte`[] @kind object;
  #L3eeec0.  v1:= "com.android.org.conscrypt.SSLParametersImpl" @kind object;
  #L3eeec4.  v2:= 0I;
  #L3eeec6.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L3eeecc.  v1:= temp @kind object;
  #L3eeece.  v4:= v1 @kind object;
  #L3eeed0.  goto L3eeee0;
  #L3eeed2.  v1:= "org.apache.harmony.xnet.provider.jsse.SSLParametersImpl" @kind object;
  #L3eeed6.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L3eeedc.  v1:= temp @kind object;
  #L3eeede.  goto L3eeece;
  #L3eeee0.  v5:= new `l.f0.j.e`;
  #L3eeee4.  v1:= "setUseSessionTickets" @kind object;
  #L3eeee8.  v3:= 1I;
  #L3eeeea.  v6:= new `java.lang.Class`[v3];
  #L3eeeee.  v7:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L3eeef2.  v8:= 0I;
  #L3eeef4.  v6[v8]:= v7 @kind object;
  #L3eeef8.  call `<init>`(v5, v2, v1, v6) @signature `Ll/f0/j/e;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L3eeefe.  v6:= new `l.f0.j.e`;
  #L3eef02.  v1:= "setHostname" @kind object;
  #L3eef06.  v7:= new `java.lang.Class`[v3];
  #L3eef0a.  v9:= constclass @type ^`java.lang.String` @kind object;
  #L3eef0e.  v7[v8]:= v9 @kind object;
  #L3eef12.  call `<init>`(v6, v2, v1, v7) @signature `Ll/f0/j/e;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L3eef18.  call temp:= `e`() @signature `Ll/f0/j/a;.e:()Z` @kind static;
  #L3eef1e.  v1:= temp;
  #L3eef20.  if v1 == 0 then goto L3eef52;
  #L3eef24.  v1:= new `l.f0.j.e`;
  #L3eef28.  v7:= "getAlpnSelectedProtocol" @kind object;
  #L3eef2c.  v9:= new `java.lang.Class`[v8];
  #L3eef30.  call `<init>`(v1, v0, v7, v9) @signature `Ll/f0/j/e;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L3eef36.  v7:= new `l.f0.j.e`;
  #L3eef3a.  v9:= "setAlpnProtocols" @kind object;
  #L3eef3e.  v3:= new `java.lang.Class`[v3];
  #L3eef42.  v3[v8]:= v0 @kind object;
  #L3eef46.  call `<init>`(v7, v2, v9, v3) @signature `Ll/f0/j/e;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L3eef4c.  v8:= v7 @kind object;
  #L3eef4e.  v7:= v1 @kind object;
  #L3eef50.  goto L3eef56;
  #L3eef52.  v7:= v2 @kind object;
  #L3eef54.  v8:= v7 @kind object;
  #L3eef56.  v0:= new `l.f0.j.a`;
  #L3eef5a.  v3:= v0 @kind object;
  #L3eef5c.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Ll/f0/j/a;.<init>:(Ljava/lang/Class;Ll/f0/j/e;Ll/f0/j/e;Ll/f0/j/e;Ll/f0/j/e;)V` @kind direct;
  #L3eef62.  return v0 @kind object;
  #L3eef64.  return v2 @kind object;
  catch `java.lang.ClassNotFoundException` @[L3eeec6..L3eeece] goto L3eeed2;
  catch `java.lang.ClassNotFoundException` @[L3eeed6..L3eef62] goto L3eef64;
}
procedure `boolean` `b`(`l.f0.j.a` v5 @kind this, `java.lang.String` v6 @kind object, `java.lang.Class` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Ll/f0/j/a;.b:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3eec90.  v0:= "isCleartextTrafficPermitted" @kind object;
  #L3eec94.  v1:= 1I;
  #L3eec96.  v2:= new `java.lang.Class`[v1];
  #L3eec9a.  v3:= constclass @type ^`java.lang.String` @kind object;
  #L3eec9e.  v4:= 0I;
  #L3eeca0.  v2[v4]:= v3 @kind object;
  #L3eeca4.  call temp:= `getMethod`(v7, v0, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L3eecaa.  v0:= temp @kind object;
  #L3eecac.  v1:= new `java.lang.Object`[v1];
  #L3eecb0.  v1[v4]:= v6 @kind object;
  #L3eecb4.  call temp:= `invoke`(v0, v8, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3eecba.  v0:= temp @kind object;
  #L3eecbc.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L3eecc0.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L3eecc6.  v6:= temp;
  #L3eecc8.  return v6;
  #L3eecca.  call temp:= `a`(v5, v6, v7, v8) @signature `Ll/f0/j/a;.a:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @kind direct;
  #L3eecd0.  v6:= temp;
  #L3eecd2.  return v6;
  catch `java.lang.NoSuchMethodException` @[L3eec90..L3eecc8] goto L3eecca;
}
procedure `boolean` `e`() @signature `Ll/f0/j/a;.e:()Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3eed78.  v0:= "GMSCore_OpenSSL" @kind object;
  #L3eed7c.  call temp:= `getProvider`(v0) @signature `Ljava/security/Security;.getProvider:(Ljava/lang/String;)Ljava/security/Provider;` @kind static;
  #L3eed82.  v0:= temp @kind object;
  #L3eed84.  v1:= 1I;
  #L3eed86.  if v0 == 0 then goto L3eed8c;
  #L3eed8a.  return v1;
  #L3eed8c.  v0:= "android.net.Network" @kind object;
  #L3eed90.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L3eed96.  return v1;
  #L3eed98.  v0:= 0I;
  #L3eed9a.  return v0;
  catch `java.lang.ClassNotFoundException` @[L3eed90..L3eed96] goto L3eed98;
}
procedure `java.lang.Object` `a`(`l.f0.j.a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Ll/f0/j/a;.a:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eedbc.  v0:= v1.`l.f0.j.a.g` @type ^`l.f0.j.a$c` @kind object;
  #L3eedc0.  call temp:= `a`(v0, v2) @signature `Ll/f0/j/a$c;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L3eedc6.  v2:= temp @kind object;
  #L3eedc8.  return v2 @kind object;
}
procedure `javax.net.ssl.SSLContext` `a`(`l.f0.j.a` v3 @kind this) @signature `Ll/f0/j/a;.a:()Ljavax/net/ssl/SSLContext;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3eee30.  v0:= 1I;
  #L3eee32.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3eee36.  v2:= 16I;
  #L3eee3a.  if v1 < v2 then goto L3eee4c;
  #L3eee3e.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3eee42.  v2:= 22I;
  #L3eee46.  if v1 >= v2 then goto L3eee4c;
  #L3eee4a.  goto L3eee52;
  #L3eee4c.  v0:= 0I;
  #L3eee4e.  goto L3eee52;
  #L3eee50.  
  #L3eee52.  if v0 == 0 then goto L3eee64;
  #L3eee56.  v0:= "TLSv1.2" @kind object;
  #L3eee5a.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L3eee60.  v0:= temp @kind object;
  #L3eee62.  return v0 @kind object;
  #L3eee64.  v0:= "TLS" @kind object;
  #L3eee68.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L3eee6e.  v0:= temp @kind object;
  #L3eee70.  return v0 @kind object;
  #L3eee72.  v0:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L3eee74.  v1:= new `java.lang.IllegalStateException`;
  #L3eee78.  v2:= "No TLS provider" @kind object;
  #L3eee7c.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L3eee82.  throw v1;
  catch `java.lang.NoClassDefFoundError` @[L3eee32..L3eee42] goto L3eee50;
  catch `java.security.NoSuchAlgorithmException` @[L3eee56..L3eee62] goto L3eee64;
  catch `java.security.NoSuchAlgorithmException` @[L3eee64..L3eee70] goto L3eee72;
}
procedure `l.f0.l.c` `a`(`l.f0.j.a` v7 @kind this, `javax.net.ssl.X509TrustManager` v8 @kind object) @signature `Ll/f0/j/a;.a:(Ljavax/net/ssl/X509TrustManager;)Ll/f0/l/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3eef94.  v0:= "android.net.http.X509TrustManagerExtensions" @kind object;
  #L3eef98.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L3eef9e.  v0:= temp @kind object;
  #L3eefa0.  v1:= 1I;
  #L3eefa2.  v2:= new `java.lang.Class`[v1];
  #L3eefa6.  v3:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L3eefaa.  v4:= 0I;
  #L3eefac.  v2[v4]:= v3 @kind object;
  #L3eefb0.  call temp:= `getConstructor`(v0, v2) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L3eefb6.  v2:= temp @kind object;
  #L3eefb8.  v3:= new `java.lang.Object`[v1];
  #L3eefbc.  v3[v4]:= v8 @kind object;
  #L3eefc0.  call temp:= `newInstance`(v2, v3) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3eefc6.  v2:= temp @kind object;
  #L3eefc8.  v3:= "checkServerTrusted" @kind object;
  #L3eefcc.  v5:= 3I;
  #L3eefce.  v5:= new `java.lang.Class`[v5];
  #L3eefd2.  v6:= constclass @type ^`java.security.cert.X509Certificate`[] @kind object;
  #L3eefd6.  v5[v4]:= v6 @kind object;
  #L3eefda.  v4:= constclass @type ^`java.lang.String` @kind object;
  #L3eefde.  v5[v1]:= v4 @kind object;
  #L3eefe2.  v1:= 2I;
  #L3eefe4.  v4:= constclass @type ^`java.lang.String` @kind object;
  #L3eefe8.  v5[v1]:= v4 @kind object;
  #L3eefec.  call temp:= `getMethod`(v0, v3, v5) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L3eeff2.  v0:= temp @kind object;
  #L3eeff4.  v1:= new `l.f0.j.a$a`;
  #L3eeff8.  call `<init>`(v1, v2, v0) @signature `Ll/f0/j/a$a;.<init>:(Ljava/lang/Object;Ljava/lang/reflect/Method;)V` @kind direct;
  #L3eeffe.  return v1 @kind object;
  #L3ef000.  call temp:= `a`(v7, v8) @signature `Ll/f0/j/f;.a:(Ljavax/net/ssl/X509TrustManager;)Ll/f0/l/c;` @kind super;
  #L3ef006.  v8:= temp @kind object;
  #L3ef008.  return v8 @kind object;
  catch `java.lang.Exception` @[L3eef98..L3eeffe] goto L3ef000;
}
procedure `void` `a`(`l.f0.j.a` v5 @kind this, `int` v6 , `java.lang.String` v7 @kind object, `java.lang.Throwable` v8 @kind object) @signature `Ll/f0/j/a;.a:(ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ef1b8.  v0:= 5I;
  #L3ef1ba.  if v6 != v0 then goto L3ef1c0;
  #L3ef1be.  goto L3ef1c2;
  #L3ef1c0.  v0:= 3I;
  #L3ef1c2.  v6:= 10I;
  #L3ef1c6.  if v8 == 0 then goto L3ef1f6;
  #L3ef1ca.  v1:= new `java.lang.StringBuilder`;
  #L3ef1ce.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ef1d4.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ef1da.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ef1e0.  call temp:= `getStackTraceString`(v8) @signature `Landroid/util/Log;.getStackTraceString:(Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L3ef1e6.  v7:= temp @kind object;
  #L3ef1e8.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ef1ee.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ef1f4.  v7:= temp @kind object;
  #L3ef1f6.  v8:= 0I;
  #L3ef1f8.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3ef1fe.  v1:= temp;
  #L3ef200.  if v8 >= v1 then goto L3ef242;
  #L3ef204.  call temp:= `indexOf`(v7, v6, v8) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L3ef20a.  v2:= temp;
  #L3ef20c.  v3:= -1I;
  #L3ef20e.  if v2 == v3 then goto L3ef214;
  #L3ef212.  goto L3ef216;
  #L3ef214.  v2:= v1;
  #L3ef216.  v3:= v8 + 4000;
  #L3ef21a.  call temp:= `min`(v2, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3ef220.  v3:= temp;
  #L3ef222.  call temp:= `substring`(v7, v8, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3ef228.  v8:= temp @kind object;
  #L3ef22a.  v4:= "OkHttp" @kind object;
  #L3ef22e.  call temp:= `println`(v0, v4, v8) @signature `Landroid/util/Log;.println:(ILjava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ef234.  if v3 < v2 then goto L3ef23e;
  #L3ef238.  v8:= v3 + 1;
  #L3ef23c.  goto L3ef200;
  #L3ef23e.  v8:= v3;
  #L3ef240.  goto L3ef216;
  #L3ef242.  return @kind void;
}
procedure `void` `a`(`l.f0.j.a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Ll/f0/j/a;.a:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef254.  v0:= v1.`l.f0.j.a.g` @type ^`l.f0.j.a$c` @kind object;
  #L3ef258.  call temp:= `a`(v0, v3) @signature `Ll/f0/j/a$c;.a:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ef25e.  v3:= temp;
  #L3ef260.  if v3 != 0 then goto L3ef26e;
  #L3ef264.  v3:= 5I;
  #L3ef266.  v0:= 0I;
  #L3ef268.  call `a`(v1, v3, v2, v0) @signature `Ll/f0/j/a;.a:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L3ef26e.  return @kind void;
}
procedure `void` `a`(`l.f0.j.a` v1 @kind this, `java.net.Socket` v2 @kind object, `java.net.InetSocketAddress` v3 @kind object, `int` v4 ) @signature `Ll/f0/j/a;.a:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef134.  v0:= "Exception in connect" @kind object;
  #L3ef138.  call `connect`(v2, v3, v4) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #L3ef13e.  return @kind void;
  #L3ef140.  v2:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L3ef142.  v3:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3ef146.  v4:= 26I;
  #L3ef14a.  if v3 != v4 then goto L3ef160;
  #L3ef14e.  v3:= new `java.io.IOException`;
  #L3ef152.  call `<init>`(v3, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ef158.  call temp:= `initCause`(v3, v2) @signature `Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L3ef15e.  throw v3;
  #L3ef160.  throw v2;
  #L3ef162.  v2:= Exception @type ^`java.lang.SecurityException` @kind object;
  #L3ef164.  v3:= new `java.io.IOException`;
  #L3ef168.  call `<init>`(v3, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ef16e.  call temp:= `initCause`(v3, v2) @signature `Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L3ef174.  throw v3;
  #L3ef176.  v2:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L3ef178.  call temp:= `a`(v2) @signature `Ll/f0/c;.a:(Ljava/lang/AssertionError;)Z` @kind static;
  #L3ef17e.  v3:= temp;
  #L3ef180.  if v3 == 0 then goto L3ef190;
  #L3ef184.  v3:= new `java.io.IOException`;
  #L3ef188.  call `<init>`(v3, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3ef18e.  throw v3;
  #L3ef190.  throw v2;
  catch `java.lang.AssertionError` @[L3ef138..L3ef13e] goto L3ef176;
  catch `java.lang.SecurityException` @[L3ef138..L3ef13e] goto L3ef162;
  catch `java.lang.ClassCastException` @[L3ef138..L3ef13e] goto L3ef140;
}
procedure `void` `a`(`l.f0.j.a` v5 @kind this, `javax.net.ssl.SSLSocket` v6 @kind object, `java.lang.String` v7 @kind object, `java.util.List` v8 @kind object) @signature `Ll/f0/j/a;.a:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ef0c0.  v0:= 0I;
  #L3ef0c2.  v1:= 1I;
  #L3ef0c4.  if v7 == 0 then goto L3ef0f4;
  #L3ef0c8.  v2:= v5.`l.f0.j.a.c` @type ^`l.f0.j.e` @kind object;
  #L3ef0cc.  v3:= new `java.lang.Object`[v1];
  #L3ef0d0.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L3ef0d6.  v4:= temp @kind object;
  #L3ef0d8.  v3[v0]:= v4 @kind object;
  #L3ef0dc.  call temp:= `c`(v2, v6, v3) @signature `Ll/f0/j/e;.c:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ef0e2.  v2:= v5.`l.f0.j.a.d` @type ^`l.f0.j.e` @kind object;
  #L3ef0e6.  v3:= new `java.lang.Object`[v1];
  #L3ef0ea.  v3[v0]:= v7 @kind object;
  #L3ef0ee.  call temp:= `c`(v2, v6, v3) @signature `Ll/f0/j/e;.c:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ef0f4.  v7:= v5.`l.f0.j.a.f` @type ^`l.f0.j.e` @kind object;
  #L3ef0f8.  if v7 == 0 then goto L3ef122;
  #L3ef0fc.  call temp:= `a`(v7, v6) @signature `Ll/f0/j/e;.a:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ef102.  v7:= temp;
  #L3ef104.  if v7 == 0 then goto L3ef122;
  #L3ef108.  v7:= new `java.lang.Object`[v1];
  #L3ef10c.  call temp:= `b`(v8) @signature `Ll/f0/j/f;.b:(Ljava/util/List;)[B` @kind static;
  #L3ef112.  v8:= temp @kind object;
  #L3ef114.  v7[v0]:= v8 @kind object;
  #L3ef118.  v8:= v5.`l.f0.j.a.f` @type ^`l.f0.j.e` @kind object;
  #L3ef11c.  call temp:= `d`(v8, v6, v7) @signature `Ll/f0/j/e;.d:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ef122.  return @kind void;
}
procedure `java.lang.String` `b`(`l.f0.j.a` v3 @kind this, `javax.net.ssl.SSLSocket` v4 @kind object) @signature `Ll/f0/j/a;.b:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3eeddc.  v0:= v3.`l.f0.j.a.e` @type ^`l.f0.j.e` @kind object;
  #L3eede0.  v1:= 0I;
  #L3eede2.  if v0 != 0 then goto L3eede8;
  #L3eede6.  return v1 @kind object;
  #L3eede8.  call temp:= `a`(v0, v4) @signature `Ll/f0/j/e;.a:(Ljava/lang/Object;)Z` @kind virtual;
  #L3eedee.  v0:= temp;
  #L3eedf0.  if v0 != 0 then goto L3eedf6;
  #L3eedf4.  return v1 @kind object;
  #L3eedf6.  v0:= v3.`l.f0.j.a.e` @type ^`l.f0.j.e` @kind object;
  #L3eedfa.  v2:= 0I;
  #L3eedfc.  v2:= new `java.lang.Object`[v2];
  #L3eee00.  call temp:= `d`(v0, v4, v2) @signature `Ll/f0/j/e;.d:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3eee06.  v4:= temp @kind object;
  #L3eee08.  v4:= (`byte`[]) v4 @kind object;
  #L3eee0c.  if v4 == 0 then goto L3eee1e;
  #L3eee10.  v1:= new `java.lang.String`;
  #L3eee14.  v0:= `@@l.f0.c.i` @type ^`java.nio.charset.Charset` @kind object;
  #L3eee18.  call `<init>`(v1, v4, v0) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L3eee1e.  return v1 @kind object;
}
procedure `l.f0.l.e` `b`(`l.f0.j.a` v6 @kind this, `javax.net.ssl.X509TrustManager` v7 @kind object) @signature `Ll/f0/j/a;.b:(Ljavax/net/ssl/X509TrustManager;)Ll/f0/l/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ef02c.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3ef032.  v0:= temp @kind object;
  #L3ef034.  v1:= "findTrustAnchorByIssuerAndSignature" @kind object;
  #L3ef038.  v2:= 1I;
  #L3ef03a.  v3:= new `java.lang.Class`[v2];
  #L3ef03e.  v4:= 0I;
  #L3ef040.  v5:= constclass @type ^`java.security.cert.X509Certificate` @kind object;
  #L3ef044.  v3[v4]:= v5 @kind object;
  #L3ef048.  call temp:= `getDeclaredMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L3ef04e.  v0:= temp @kind object;
  #L3ef050.  call `setAccessible`(v0, v2) @signature `Ljava/lang/reflect/Method;.setAccessible:(Z)V` @kind virtual;
  #L3ef056.  v1:= new `l.f0.j.a$b`;
  #L3ef05a.  call `<init>`(v1, v7, v0) @signature `Ll/f0/j/a$b;.<init>:(Ljavax/net/ssl/X509TrustManager;Ljava/lang/reflect/Method;)V` @kind direct;
  #L3ef060.  return v1 @kind object;
  #L3ef062.  call temp:= `b`(v6, v7) @signature `Ll/f0/j/f;.b:(Ljavax/net/ssl/X509TrustManager;)Ll/f0/l/e;` @kind super;
  #L3ef068.  v7:= temp @kind object;
  #L3ef06a.  return v7 @kind object;
  catch `java.lang.NoSuchMethodException` @[L3ef02c..L3ef060] goto L3ef062;
}
procedure `boolean` `b`(`l.f0.j.a` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Ll/f0/j/a;.b:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3eecf4.  v0:= "android.security.NetworkSecurityPolicy" @kind object;
  #L3eecf8.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L3eecfe.  v0:= temp @kind object;
  #L3eed00.  v1:= "getInstance" @kind object;
  #L3eed04.  v2:= 0I;
  #L3eed06.  v3:= new `java.lang.Class`[v2];
  #L3eed0a.  call temp:= `getMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L3eed10.  v1:= temp @kind object;
  #L3eed12.  v3:= 0I;
  #L3eed14.  v2:= new `java.lang.Object`[v2];
  #L3eed18.  call temp:= `invoke`(v1, v3, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3eed1e.  v1:= temp @kind object;
  #L3eed20.  call temp:= `b`(v4, v5, v0, v1) @signature `Ll/f0/j/a;.b:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @kind direct;
  #L3eed26.  v5:= temp;
  #L3eed28.  return v5;
  #L3eed2a.  v5:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L3eed2c.  goto L3eed34;
  #L3eed2e.  v5:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L3eed30.  goto L3eed34;
  #L3eed32.  v5:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L3eed34.  v0:= "unable to determine cleartext support" @kind object;
  #L3eed38.  call temp:= `a`(v0, v5) @signature `Ll/f0/c;.a:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L3eed3e.  v5:= temp @kind object;
  #L3eed40.  throw v5;
  #L3eed42.  call temp:= `b`(v4, v5) @signature `Ll/f0/j/f;.b:(Ljava/lang/String;)Z` @kind super;
  #L3eed48.  v5:= temp;
  #L3eed4a.  return v5;
  catch `java.lang.ClassNotFoundException` @[L3eecf8..L3eed28] goto L3eed42;
  catch `java.lang.NoSuchMethodException` @[L3eecf8..L3eed28] goto L3eed42;
  catch `java.lang.IllegalAccessException` @[L3eecf8..L3eed28] goto L3eed32;
  catch `java.lang.IllegalArgumentException` @[L3eecf8..L3eed28] goto L3eed2e;
  catch `java.lang.reflect.InvocationTargetException` @[L3eecf8..L3eed28] goto L3eed2a;
}
