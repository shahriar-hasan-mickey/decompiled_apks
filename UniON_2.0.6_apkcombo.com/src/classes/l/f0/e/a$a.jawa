record `l.f0.e.a$a` @kind class @AccessFlag  extends `m.s` @kind interface {
  `boolean` `l.f0.e.a$a.b` @AccessFlag ;
  `m.e` `l.f0.e.a$a.c` @AccessFlag FINAL_SYNTHETIC;
  `l.f0.e.b` `l.f0.e.a$a.d` @AccessFlag FINAL_SYNTHETIC;
  `m.d` `l.f0.e.a$a.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`l.f0.e.a$a` v0 @kind this, `l.f0.e.a` v1 @kind object, `m.e` v2 @kind object, `l.f0.e.b` v3 @kind object, `m.d` v4 @kind object) @signature `Ll/f0/e/a$a;.<init>:(Ll/f0/e/a;Lm/e;Ll/f0/e/b;Lm/d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e2674.  v0.`l.f0.e.a$a.c` @type ^`m.e` := v2 @kind object;
  #L3e2678.  v0.`l.f0.e.a$a.d` @type ^`l.f0.e.b` := v3 @kind object;
  #L3e267c.  v0.`l.f0.e.a$a.e` @type ^`m.d` := v4 @kind object;
  #L3e2680.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e2686.  return @kind void;
}
procedure `long` `a`(`l.f0.e.a$a` v8 @kind this, `m.c` v9 @kind object, `long` v10 ) @signature `Ll/f0/e/a$a;.a:(Lm/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3e25b8.  v0:= 1I;
  #L3e25ba.  v1:= v8.`l.f0.e.a$a.c` @type ^`m.e` @kind object;
  #L3e25be.  call temp:= `a`(v1, v9, v10) @signature `Lm/s;.a:(Lm/c;J)J` @kind interface;
  #L3e25c4.  v10:= temp @kind wide;
  #L3e25c6.  v1:= -1L;
  #L3e25ca.  v3:= lcmp(v10, v1);
  #L3e25ce.  if v3 != 0 then goto L3e25ea;
  #L3e25d2.  v9:= v8.`l.f0.e.a$a.b` @type ^`boolean` @kind boolean;
  #L3e25d6.  if v9 != 0 then goto L3e25e8;
  #L3e25da.  v8.`l.f0.e.a$a.b` @type ^`boolean` := v0 @kind boolean;
  #L3e25de.  v9:= v8.`l.f0.e.a$a.e` @type ^`m.d` @kind object;
  #L3e25e2.  call `close`(v9) @signature `Lm/r;.close:()V` @kind interface;
  #L3e25e8.  return v1 @kind wide;
  #L3e25ea.  v0:= v8.`l.f0.e.a$a.e` @type ^`m.d` @kind object;
  #L3e25ee.  call temp:= `c`(v0) @signature `Lm/d;.c:()Lm/c;` @kind interface;
  #L3e25f4.  v3:= temp @kind object;
  #L3e25f6.  call temp:= `v`(v9) @signature `Lm/c;.v:()J` @kind virtual;
  #L3e25fc.  v0:= temp @kind wide;
  #L3e25fe.  v4:= v0 - v10 @kind long;
  #L3e2602.  v2:= v9 @kind object;
  #L3e2604.  v6:= v10 @kind wide;
  #L3e2606.  call temp:= `a`(v2, v3, v4, v6) @signature `Lm/c;.a:(Lm/c;JJ)Lm/c;` @kind virtual;
  #L3e260c.  v9:= v8.`l.f0.e.a$a.e` @type ^`m.d` @kind object;
  #L3e2610.  call temp:= `j`(v9) @signature `Lm/d;.j:()Lm/d;` @kind interface;
  #L3e2616.  return v10 @kind wide;
  #L3e2618.  v9:= Exception @type ^`java.io.IOException` @kind object;
  #L3e261a.  v10:= v8.`l.f0.e.a$a.b` @type ^`boolean` @kind boolean;
  #L3e261e.  if v10 != 0 then goto L3e2630;
  #L3e2622.  v8.`l.f0.e.a$a.b` @type ^`boolean` := v0 @kind boolean;
  #L3e2626.  v10:= v8.`l.f0.e.a$a.d` @type ^`l.f0.e.b` @kind object;
  #L3e262a.  call `b`(v10) @signature `Ll/f0/e/b;.b:()V` @kind interface;
  #L3e2630.  throw v9;
  catch `java.io.IOException` @[L3e25ba..L3e25c6] goto L3e2618;
}
procedure `void` `close`(`l.f0.e.a$a` v2 @kind this) @signature `Ll/f0/e/a$a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e2698.  v0:= v2.`l.f0.e.a$a.b` @type ^`boolean` @kind boolean;
  #L3e269c.  if v0 != 0 then goto L3e26c4;
  #L3e26a0.  v0:= 100I;
  #L3e26a4.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3e26a8.  call temp:= `a`(v2, v0, v1) @signature `Ll/f0/c;.a:(Lm/s;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L3e26ae.  v0:= temp;
  #L3e26b0.  if v0 != 0 then goto L3e26c4;
  #L3e26b4.  v0:= 1I;
  #L3e26b6.  v2.`l.f0.e.a$a.b` @type ^`boolean` := v0 @kind boolean;
  #L3e26ba.  v0:= v2.`l.f0.e.a$a.d` @type ^`l.f0.e.b` @kind object;
  #L3e26be.  call `b`(v0) @signature `Ll/f0/e/b;.b:()V` @kind interface;
  #L3e26c4.  v0:= v2.`l.f0.e.a$a.c` @type ^`m.e` @kind object;
  #L3e26c8.  call `close`(v0) @signature `Lm/s;.close:()V` @kind interface;
  #L3e26ce.  return @kind void;
}
procedure `m.t` `d`(`l.f0.e.a$a` v1 @kind this) @signature `Ll/f0/e/a$a;.d:()Lm/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2654.  v0:= v1.`l.f0.e.a$a.c` @type ^`m.e` @kind object;
  #L3e2658.  call temp:= `d`(v0) @signature `Lm/s;.d:()Lm/t;` @kind interface;
  #L3e265e.  v0:= temp @kind object;
  #L3e2660.  return v0 @kind object;
}
