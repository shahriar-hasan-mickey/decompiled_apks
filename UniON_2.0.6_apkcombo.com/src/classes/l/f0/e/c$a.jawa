record `l.f0.e.c$a` @kind class @AccessFlag PUBLIC {
  `long` `l.f0.e.c$a.a` @AccessFlag FINAL;
  `l.y` `l.f0.e.c$a.b` @AccessFlag FINAL;
  `l.a0` `l.f0.e.c$a.c` @AccessFlag FINAL;
  `java.util.Date` `l.f0.e.c$a.d` @AccessFlag PRIVATE;
  `java.lang.String` `l.f0.e.c$a.e` @AccessFlag PRIVATE;
  `java.util.Date` `l.f0.e.c$a.f` @AccessFlag PRIVATE;
  `java.lang.String` `l.f0.e.c$a.g` @AccessFlag PRIVATE;
  `java.util.Date` `l.f0.e.c$a.h` @AccessFlag PRIVATE;
  `long` `l.f0.e.c$a.i` @AccessFlag PRIVATE;
  `long` `l.f0.e.c$a.j` @AccessFlag PRIVATE;
  `java.lang.String` `l.f0.e.c$a.k` @AccessFlag PRIVATE;
  `int` `l.f0.e.c$a.l` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`l.f0.e.c$a` v3 @kind this, `long` v4 , `l.y` v6 @kind object, `l.a0` v7 @kind object) @signature `Ll/f0/e/c$a;.<init>:(JLl/y;Ll/a0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3e3074.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e307a.  v0:= -1I;
  #L3e307c.  v3.`l.f0.e.c$a.l` @type ^`int` := v0;
  #L3e3080.  v3.`l.f0.e.c$a.a` @type ^`long` := v4 @kind wide;
  #L3e3084.  v3.`l.f0.e.c$a.b` @type ^`l.y` := v6 @kind object;
  #L3e3088.  v3.`l.f0.e.c$a.c` @type ^`l.a0` := v7 @kind object;
  #L3e308c.  if v7 == 0 then goto L3e3168;
  #L3e3090.  call temp:= `t`(v7) @signature `Ll/a0;.t:()J` @kind virtual;
  #L3e3096.  v4:= temp @kind wide;
  #L3e3098.  v3.`l.f0.e.c$a.i` @type ^`long` := v4 @kind wide;
  #L3e309c.  call temp:= `r`(v7) @signature `Ll/a0;.r:()J` @kind virtual;
  #L3e30a2.  v4:= temp @kind wide;
  #L3e30a4.  v3.`l.f0.e.c$a.j` @type ^`long` := v4 @kind wide;
  #L3e30a8.  call temp:= `o`(v7) @signature `Ll/a0;.o:()Ll/r;` @kind virtual;
  #L3e30ae.  v4:= temp @kind object;
  #L3e30b0.  v5:= 0I;
  #L3e30b2.  call temp:= `b`(v4) @signature `Ll/r;.b:()I` @kind virtual;
  #L3e30b8.  v6:= temp;
  #L3e30ba.  if v5 >= v6 then goto L3e3168;
  #L3e30be.  call temp:= `a`(v4, v5) @signature `Ll/r;.a:(I)Ljava/lang/String;` @kind virtual;
  #L3e30c4.  v7:= temp @kind object;
  #L3e30c6.  call temp:= `b`(v4, v5) @signature `Ll/r;.b:(I)Ljava/lang/String;` @kind virtual;
  #L3e30cc.  v1:= temp @kind object;
  #L3e30ce.  v2:= "Date" @kind object;
  #L3e30d2.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3e30d8.  v2:= temp;
  #L3e30da.  if v2 == 0 then goto L3e30f0;
  #L3e30de.  call temp:= `a`(v1) @signature `Ll/f0/g/d;.a:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L3e30e4.  v7:= temp @kind object;
  #L3e30e6.  v3.`l.f0.e.c$a.d` @type ^`java.util.Date` := v7 @kind object;
  #L3e30ea.  v3.`l.f0.e.c$a.e` @type ^`java.lang.String` := v1 @kind object;
  #L3e30ee.  goto L3e3162;
  #L3e30f0.  v2:= "Expires" @kind object;
  #L3e30f4.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3e30fa.  v2:= temp;
  #L3e30fc.  if v2 == 0 then goto L3e310e;
  #L3e3100.  call temp:= `a`(v1) @signature `Ll/f0/g/d;.a:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L3e3106.  v7:= temp @kind object;
  #L3e3108.  v3.`l.f0.e.c$a.h` @type ^`java.util.Date` := v7 @kind object;
  #L3e310c.  goto L3e3162;
  #L3e310e.  v2:= "Last-Modified" @kind object;
  #L3e3112.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3e3118.  v2:= temp;
  #L3e311a.  if v2 == 0 then goto L3e3130;
  #L3e311e.  call temp:= `a`(v1) @signature `Ll/f0/g/d;.a:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L3e3124.  v7:= temp @kind object;
  #L3e3126.  v3.`l.f0.e.c$a.f` @type ^`java.util.Date` := v7 @kind object;
  #L3e312a.  v3.`l.f0.e.c$a.g` @type ^`java.lang.String` := v1 @kind object;
  #L3e312e.  goto L3e3162;
  #L3e3130.  v2:= "ETag" @kind object;
  #L3e3134.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3e313a.  v2:= temp;
  #L3e313c.  if v2 == 0 then goto L3e3146;
  #L3e3140.  v3.`l.f0.e.c$a.k` @type ^`java.lang.String` := v1 @kind object;
  #L3e3144.  goto L3e3162;
  #L3e3146.  v2:= "Age" @kind object;
  #L3e314a.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3e3150.  v7:= temp;
  #L3e3152.  if v7 == 0 then goto L3e3162;
  #L3e3156.  call temp:= `a`(v1, v0) @signature `Ll/f0/g/e;.a:(Ljava/lang/String;I)I` @kind static;
  #L3e315c.  v7:= temp;
  #L3e315e.  v3.`l.f0.e.c$a.l` @type ^`int` := v7;
  #L3e3162.  v5:= v5 + 1;
  #L3e3166.  goto L3e30ba;
  #L3e3168.  return @kind void;
}
procedure `boolean` `a`(`l.y` v1 @kind object) @signature `Ll/f0/e/c$a;.a:(Ll/y;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3e2c10.  v0:= "If-Modified-Since" @kind object;
  #L3e2c14.  call temp:= `a`(v1, v0) @signature `Ll/y;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3e2c1a.  v0:= temp @kind object;
  #L3e2c1c.  if v0 != 0 then goto L3e2c36;
  #L3e2c20.  v0:= "If-None-Match" @kind object;
  #L3e2c24.  call temp:= `a`(v1, v0) @signature `Ll/y;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3e2c2a.  v1:= temp @kind object;
  #L3e2c2c.  if v1 == 0 then goto L3e2c32;
  #L3e2c30.  goto L3e2c36;
  #L3e2c32.  v1:= 0I;
  #L3e2c34.  goto L3e2c38;
  #L3e2c36.  v1:= 1I;
  #L3e2c38.  return v1;
}
procedure `long` `b`(`l.f0.e.c$a` v9 @kind this) @signature `Ll/f0/e/c$a;.b:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3e2c88.  v0:= v9.`l.f0.e.c$a.d` @type ^`java.util.Date` @kind object;
  #L3e2c8c.  v1:= 0L;
  #L3e2c90.  if v0 == 0 then goto L3e2caa;
  #L3e2c94.  v3:= v9.`l.f0.e.c$a.j` @type ^`long` @kind wide;
  #L3e2c98.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L3e2c9e.  v5:= temp @kind wide;
  #L3e2ca0.  v3:= v3 - v5 @kind long;
  #L3e2ca2.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L3e2ca8.  v1:= temp @kind wide;
  #L3e2caa.  v0:= v9.`l.f0.e.c$a.l` @type ^`int`;
  #L3e2cae.  v3:= -1I;
  #L3e2cb0.  if v0 == v3 then goto L3e2cca;
  #L3e2cb4.  v3:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3e2cb8.  v4:= (`long`) v0 @kind i2l;
  #L3e2cba.  call temp:= `toMillis`(v3, v4) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L3e2cc0.  v3:= temp @kind wide;
  #L3e2cc2.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L3e2cc8.  v1:= temp @kind wide;
  #L3e2cca.  v3:= v9.`l.f0.e.c$a.j` @type ^`long` @kind wide;
  #L3e2cce.  v5:= v9.`l.f0.e.c$a.i` @type ^`long` @kind wide;
  #L3e2cd2.  v5:= v3 - v5 @kind long;
  #L3e2cd6.  v7:= v9.`l.f0.e.c$a.a` @type ^`long` @kind wide;
  #L3e2cda.  v7:= v7 - v3 @kind long;
  #L3e2cdc.  v1:= v1 + v5 @kind long;
  #L3e2cde.  v1:= v1 + v7 @kind long;
  #L3e2ce0.  return v1 @kind wide;
}
procedure `long` `c`(`l.f0.e.c$a` v7 @kind this) @signature `Ll/f0/e/c$a;.c:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e2cf4.  v0:= v7.`l.f0.e.c$a.c` @type ^`l.a0` @kind object;
  #L3e2cf8.  call temp:= `l`(v0) @signature `Ll/a0;.l:()Ll/d;` @kind virtual;
  #L3e2cfe.  v0:= temp @kind object;
  #L3e2d00.  call temp:= `c`(v0) @signature `Ll/d;.c:()I` @kind virtual;
  #L3e2d06.  v1:= temp;
  #L3e2d08.  v2:= -1I;
  #L3e2d0a.  if v1 == v2 then goto L3e2d26;
  #L3e2d0e.  v1:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3e2d12.  call temp:= `c`(v0) @signature `Ll/d;.c:()I` @kind virtual;
  #L3e2d18.  v0:= temp;
  #L3e2d1a.  v2:= (`long`) v0 @kind i2l;
  #L3e2d1c.  call temp:= `toMillis`(v1, v2) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L3e2d22.  v0:= temp @kind wide;
  #L3e2d24.  return v0 @kind wide;
  #L3e2d26.  v0:= v7.`l.f0.e.c$a.h` @type ^`java.util.Date` @kind object;
  #L3e2d2a.  v1:= 0L;
  #L3e2d2e.  if v0 == 0 then goto L3e2d64;
  #L3e2d32.  v0:= v7.`l.f0.e.c$a.d` @type ^`java.util.Date` @kind object;
  #L3e2d36.  if v0 == 0 then goto L3e2d44;
  #L3e2d3a.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L3e2d40.  v3:= temp @kind wide;
  #L3e2d42.  goto L3e2d48;
  #L3e2d44.  v3:= v7.`l.f0.e.c$a.j` @type ^`long` @kind wide;
  #L3e2d48.  v0:= v7.`l.f0.e.c$a.h` @type ^`java.util.Date` @kind object;
  #L3e2d4c.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L3e2d52.  v5:= temp @kind wide;
  #L3e2d54.  v3:= v5 - v3 @kind long;
  #L3e2d58.  v0:= lcmp(v3, v1);
  #L3e2d5c.  if v0 <= 0 then goto L3e2d62;
  #L3e2d60.  v1:= v3 @kind wide;
  #L3e2d62.  return v1 @kind wide;
  #L3e2d64.  v0:= v7.`l.f0.e.c$a.f` @type ^`java.util.Date` @kind object;
  #L3e2d68.  if v0 == 0 then goto L3e2dc0;
  #L3e2d6c.  v0:= v7.`l.f0.e.c$a.c` @type ^`l.a0` @kind object;
  #L3e2d70.  call temp:= `s`(v0) @signature `Ll/a0;.s:()Ll/y;` @kind virtual;
  #L3e2d76.  v0:= temp @kind object;
  #L3e2d78.  call temp:= `g`(v0) @signature `Ll/y;.g:()Ll/s;` @kind virtual;
  #L3e2d7e.  v0:= temp @kind object;
  #L3e2d80.  call temp:= `k`(v0) @signature `Ll/s;.k:()Ljava/lang/String;` @kind virtual;
  #L3e2d86.  v0:= temp @kind object;
  #L3e2d88.  if v0 != 0 then goto L3e2dc0;
  #L3e2d8c.  v0:= v7.`l.f0.e.c$a.d` @type ^`java.util.Date` @kind object;
  #L3e2d90.  if v0 == 0 then goto L3e2d9e;
  #L3e2d94.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L3e2d9a.  v3:= temp @kind wide;
  #L3e2d9c.  goto L3e2da2;
  #L3e2d9e.  v3:= v7.`l.f0.e.c$a.i` @type ^`long` @kind wide;
  #L3e2da2.  v0:= v7.`l.f0.e.c$a.f` @type ^`java.util.Date` @kind object;
  #L3e2da6.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L3e2dac.  v5:= temp @kind wide;
  #L3e2dae.  v3:= v3 - v5 @kind long;
  #L3e2db0.  v0:= lcmp(v3, v1);
  #L3e2db4.  if v0 <= 0 then goto L3e2dc0;
  #L3e2db8.  v0:= 10L;
  #L3e2dbc.  v1:= v3 / v0 @kind long;
  #L3e2dc0.  return v1 @kind wide;
}
procedure `l.f0.e.c` `d`(`l.f0.e.c$a` v13 @kind this) @signature `Ll/f0/e/c$a;.d:()Ll/f0/e/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L3e2e1c.  v0:= v13.`l.f0.e.c$a.c` @type ^`l.a0` @kind object;
  #L3e2e20.  v1:= 0I;
  #L3e2e22.  if v0 != 0 then goto L3e2e36;
  #L3e2e26.  v0:= new `l.f0.e.c`;
  #L3e2e2a.  v2:= v13.`l.f0.e.c$a.b` @type ^`l.y` @kind object;
  #L3e2e2e.  call `<init>`(v0, v2, v1) @signature `Ll/f0/e/c;.<init>:(Ll/y;Ll/a0;)V` @kind direct;
  #L3e2e34.  return v0 @kind object;
  #L3e2e36.  v0:= v13.`l.f0.e.c$a.b` @type ^`l.y` @kind object;
  #L3e2e3a.  call temp:= `d`(v0) @signature `Ll/y;.d:()Z` @kind virtual;
  #L3e2e40.  v0:= temp;
  #L3e2e42.  if v0 == 0 then goto L3e2e66;
  #L3e2e46.  v0:= v13.`l.f0.e.c$a.c` @type ^`l.a0` @kind object;
  #L3e2e4a.  call temp:= `n`(v0) @signature `Ll/a0;.n:()Ll/q;` @kind virtual;
  #L3e2e50.  v0:= temp @kind object;
  #L3e2e52.  if v0 != 0 then goto L3e2e66;
  #L3e2e56.  v0:= new `l.f0.e.c`;
  #L3e2e5a.  v2:= v13.`l.f0.e.c$a.b` @type ^`l.y` @kind object;
  #L3e2e5e.  call `<init>`(v0, v2, v1) @signature `Ll/f0/e/c;.<init>:(Ll/y;Ll/a0;)V` @kind direct;
  #L3e2e64.  return v0 @kind object;
  #L3e2e66.  v0:= v13.`l.f0.e.c$a.c` @type ^`l.a0` @kind object;
  #L3e2e6a.  v2:= v13.`l.f0.e.c$a.b` @type ^`l.y` @kind object;
  #L3e2e6e.  call temp:= `a`(v0, v2) @signature `Ll/f0/e/c;.a:(Ll/a0;Ll/y;)Z` @kind static;
  #L3e2e74.  v0:= temp;
  #L3e2e76.  if v0 != 0 then goto L3e2e8a;
  #L3e2e7a.  v0:= new `l.f0.e.c`;
  #L3e2e7e.  v2:= v13.`l.f0.e.c$a.b` @type ^`l.y` @kind object;
  #L3e2e82.  call `<init>`(v0, v2, v1) @signature `Ll/f0/e/c;.<init>:(Ll/y;Ll/a0;)V` @kind direct;
  #L3e2e88.  return v0 @kind object;
  #L3e2e8a.  v0:= v13.`l.f0.e.c$a.b` @type ^`l.y` @kind object;
  #L3e2e8e.  call temp:= `b`(v0) @signature `Ll/y;.b:()Ll/d;` @kind virtual;
  #L3e2e94.  v0:= temp @kind object;
  #L3e2e96.  call temp:= `g`(v0) @signature `Ll/d;.g:()Z` @kind virtual;
  #L3e2e9c.  v2:= temp;
  #L3e2e9e.  if v2 != 0 then goto L3e3054;
  #L3e2ea2.  v2:= v13.`l.f0.e.c$a.b` @type ^`l.y` @kind object;
  #L3e2ea6.  call temp:= `a`(v2) @signature `Ll/f0/e/c$a;.a:(Ll/y;)Z` @kind static;
  #L3e2eac.  v2:= temp;
  #L3e2eae.  if v2 == 0 then goto L3e2eb6;
  #L3e2eb2.  goto L3e3054;
  #L3e2eb6.  v2:= v13.`l.f0.e.c$a.c` @type ^`l.a0` @kind object;
  #L3e2eba.  call temp:= `l`(v2) @signature `Ll/a0;.l:()Ll/d;` @kind virtual;
  #L3e2ec0.  v2:= temp @kind object;
  #L3e2ec2.  call temp:= `b`(v13) @signature `Ll/f0/e/c$a;.b:()J` @kind direct;
  #L3e2ec8.  v3:= temp @kind wide;
  #L3e2eca.  call temp:= `c`(v13) @signature `Ll/f0/e/c$a;.c:()J` @kind direct;
  #L3e2ed0.  v5:= temp @kind wide;
  #L3e2ed2.  call temp:= `c`(v0) @signature `Ll/d;.c:()I` @kind virtual;
  #L3e2ed8.  v7:= temp;
  #L3e2eda.  v8:= -1I;
  #L3e2edc.  if v7 == v8 then goto L3e2efe;
  #L3e2ee0.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3e2ee4.  call temp:= `c`(v0) @signature `Ll/d;.c:()I` @kind virtual;
  #L3e2eea.  v9:= temp;
  #L3e2eec.  v9:= (`long`) v9 @kind i2l;
  #L3e2eee.  call temp:= `toMillis`(v7, v9) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L3e2ef4.  v9:= temp @kind wide;
  #L3e2ef6.  call temp:= `min`(v5, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3e2efc.  v5:= temp @kind wide;
  #L3e2efe.  call temp:= `e`(v0) @signature `Ll/d;.e:()I` @kind virtual;
  #L3e2f04.  v7:= temp;
  #L3e2f06.  v9:= 0L;
  #L3e2f0a.  if v7 == v8 then goto L3e2f26;
  #L3e2f0e.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3e2f12.  call temp:= `e`(v0) @signature `Ll/d;.e:()I` @kind virtual;
  #L3e2f18.  v11:= temp;
  #L3e2f1a.  v11:= (`long`) v11 @kind i2l;
  #L3e2f1c.  call temp:= `toMillis`(v7, v11) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L3e2f22.  v11:= temp @kind wide;
  #L3e2f24.  goto L3e2f28;
  #L3e2f26.  v11:= v9 @kind wide;
  #L3e2f28.  call temp:= `f`(v2) @signature `Ll/d;.f:()Z` @kind virtual;
  #L3e2f2e.  v7:= temp;
  #L3e2f30.  if v7 != 0 then goto L3e2f56;
  #L3e2f34.  call temp:= `d`(v0) @signature `Ll/d;.d:()I` @kind virtual;
  #L3e2f3a.  v7:= temp;
  #L3e2f3c.  if v7 == v8 then goto L3e2f56;
  #L3e2f40.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3e2f44.  call temp:= `d`(v0) @signature `Ll/d;.d:()I` @kind virtual;
  #L3e2f4a.  v0:= temp;
  #L3e2f4c.  v8:= (`long`) v0 @kind i2l;
  #L3e2f4e.  call temp:= `toMillis`(v7, v8) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L3e2f54.  v9:= temp @kind wide;
  #L3e2f56.  call temp:= `g`(v2) @signature `Ll/d;.g:()Z` @kind virtual;
  #L3e2f5c.  v0:= temp;
  #L3e2f5e.  if v0 != 0 then goto L3e2fc8;
  #L3e2f62.  v11:= v11 + v3 @kind long;
  #L3e2f64.  v9:= v9 + v5 @kind long;
  #L3e2f66.  v0:= lcmp(v11, v9);
  #L3e2f6a.  if v0 >= 0 then goto L3e2fc8;
  #L3e2f6e.  v0:= v13.`l.f0.e.c$a.c` @type ^`l.a0` @kind object;
  #L3e2f72.  call temp:= `p`(v0) @signature `Ll/a0;.p:()Ll/a0$a;` @kind virtual;
  #L3e2f78.  v0:= temp @kind object;
  #L3e2f7a.  v2:= "Warning" @kind object;
  #L3e2f7e.  v7:= lcmp(v11, v5);
  #L3e2f82.  if v7 < 0 then goto L3e2f90;
  #L3e2f86.  v5:= "110 HttpURLConnection \"Response is stale\"" @kind object;
  #L3e2f8a.  call temp:= `a`(v0, v2, v5) @signature `Ll/a0$a;.a:(Ljava/lang/String;Ljava/lang/String;)Ll/a0$a;` @kind virtual;
  #L3e2f90.  v5:= 86400000L;
  #L3e2f96.  v7:= lcmp(v3, v5);
  #L3e2f9a.  if v7 <= 0 then goto L3e2fb4;
  #L3e2f9e.  call temp:= `e`(v13) @signature `Ll/f0/e/c$a;.e:()Z` @kind direct;
  #L3e2fa4.  v3:= temp;
  #L3e2fa6.  if v3 == 0 then goto L3e2fb4;
  #L3e2faa.  v3:= "113 HttpURLConnection \"Heuristic expiration\"" @kind object;
  #L3e2fae.  call temp:= `a`(v0, v2, v3) @signature `Ll/a0$a;.a:(Ljava/lang/String;Ljava/lang/String;)Ll/a0$a;` @kind virtual;
  #L3e2fb4.  v2:= new `l.f0.e.c`;
  #L3e2fb8.  call temp:= `a`(v0) @signature `Ll/a0$a;.a:()Ll/a0;` @kind virtual;
  #L3e2fbe.  v0:= temp @kind object;
  #L3e2fc0.  call `<init>`(v2, v1, v0) @signature `Ll/f0/e/c;.<init>:(Ll/y;Ll/a0;)V` @kind direct;
  #L3e2fc6.  return v2 @kind object;
  #L3e2fc8.  v0:= v13.`l.f0.e.c$a.k` @type ^`java.lang.String` @kind object;
  #L3e2fcc.  v2:= "If-Modified-Since" @kind object;
  #L3e2fd0.  if v0 == 0 then goto L3e2fda;
  #L3e2fd4.  v2:= "If-None-Match" @kind object;
  #L3e2fd8.  goto L3e2ff4;
  #L3e2fda.  v0:= v13.`l.f0.e.c$a.f` @type ^`java.util.Date` @kind object;
  #L3e2fde.  if v0 == 0 then goto L3e2fe8;
  #L3e2fe2.  v0:= v13.`l.f0.e.c$a.g` @type ^`java.lang.String` @kind object;
  #L3e2fe6.  goto L3e2ff4;
  #L3e2fe8.  v0:= v13.`l.f0.e.c$a.d` @type ^`java.util.Date` @kind object;
  #L3e2fec.  if v0 == 0 then goto L3e3044;
  #L3e2ff0.  v0:= v13.`l.f0.e.c$a.e` @type ^`java.lang.String` @kind object;
  #L3e2ff4.  v1:= v13.`l.f0.e.c$a.b` @type ^`l.y` @kind object;
  #L3e2ff8.  call temp:= `c`(v1) @signature `Ll/y;.c:()Ll/r;` @kind virtual;
  #L3e2ffe.  v1:= temp @kind object;
  #L3e3000.  call temp:= `a`(v1) @signature `Ll/r;.a:()Ll/r$a;` @kind virtual;
  #L3e3006.  v1:= temp @kind object;
  #L3e3008.  v3:= `@@l.f0.a.a` @type ^`l.f0.a` @kind object;
  #L3e300c.  call `a`(v3, v1, v2, v0) @signature `Ll/f0/a;.a:(Ll/r$a;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L3e3012.  v0:= v13.`l.f0.e.c$a.b` @type ^`l.y` @kind object;
  #L3e3016.  call temp:= `f`(v0) @signature `Ll/y;.f:()Ll/y$a;` @kind virtual;
  #L3e301c.  v0:= temp @kind object;
  #L3e301e.  call temp:= `a`(v1) @signature `Ll/r$a;.a:()Ll/r;` @kind virtual;
  #L3e3024.  v1:= temp @kind object;
  #L3e3026.  call temp:= `a`(v0, v1) @signature `Ll/y$a;.a:(Ll/r;)Ll/y$a;` @kind virtual;
  #L3e302c.  call temp:= `a`(v0) @signature `Ll/y$a;.a:()Ll/y;` @kind virtual;
  #L3e3032.  v0:= temp @kind object;
  #L3e3034.  v1:= new `l.f0.e.c`;
  #L3e3038.  v2:= v13.`l.f0.e.c$a.c` @type ^`l.a0` @kind object;
  #L3e303c.  call `<init>`(v1, v0, v2) @signature `Ll/f0/e/c;.<init>:(Ll/y;Ll/a0;)V` @kind direct;
  #L3e3042.  return v1 @kind object;
  #L3e3044.  v0:= new `l.f0.e.c`;
  #L3e3048.  v2:= v13.`l.f0.e.c$a.b` @type ^`l.y` @kind object;
  #L3e304c.  call `<init>`(v0, v2, v1) @signature `Ll/f0/e/c;.<init>:(Ll/y;Ll/a0;)V` @kind direct;
  #L3e3052.  return v0 @kind object;
  #L3e3054.  v0:= new `l.f0.e.c`;
  #L3e3058.  v2:= v13.`l.f0.e.c$a.b` @type ^`l.y` @kind object;
  #L3e305c.  call `<init>`(v0, v2, v1) @signature `Ll/f0/e/c;.<init>:(Ll/y;Ll/a0;)V` @kind direct;
  #L3e3062.  return v0 @kind object;
}
procedure `boolean` `e`(`l.f0.e.c$a` v2 @kind this) @signature `Ll/f0/e/c$a;.e:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e2c4c.  v0:= v2.`l.f0.e.c$a.c` @type ^`l.a0` @kind object;
  #L3e2c50.  call temp:= `l`(v0) @signature `Ll/a0;.l:()Ll/d;` @kind virtual;
  #L3e2c56.  v0:= temp @kind object;
  #L3e2c58.  call temp:= `c`(v0) @signature `Ll/d;.c:()I` @kind virtual;
  #L3e2c5e.  v0:= temp;
  #L3e2c60.  v1:= -1I;
  #L3e2c62.  if v0 != v1 then goto L3e2c72;
  #L3e2c66.  v0:= v2.`l.f0.e.c$a.h` @type ^`java.util.Date` @kind object;
  #L3e2c6a.  if v0 != 0 then goto L3e2c72;
  #L3e2c6e.  v0:= 1I;
  #L3e2c70.  goto L3e2c74;
  #L3e2c72.  v0:= 0I;
  #L3e2c74.  return v0;
}
procedure `l.f0.e.c` `a`(`l.f0.e.c$a` v2 @kind this) @signature `Ll/f0/e/c$a;.a:()Ll/f0/e/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e2dd4.  call temp:= `d`(v2) @signature `Ll/f0/e/c$a;.d:()Ll/f0/e/c;` @kind direct;
  #L3e2dda.  v0:= temp @kind object;
  #L3e2ddc.  v1:= v0.`l.f0.e.c.a` @type ^`l.y` @kind object;
  #L3e2de0.  if v1 == 0 then goto L3e2e08;
  #L3e2de4.  v1:= v2.`l.f0.e.c$a.b` @type ^`l.y` @kind object;
  #L3e2de8.  call temp:= `b`(v1) @signature `Ll/y;.b:()Ll/d;` @kind virtual;
  #L3e2dee.  v1:= temp @kind object;
  #L3e2df0.  call temp:= `i`(v1) @signature `Ll/d;.i:()Z` @kind virtual;
  #L3e2df6.  v1:= temp;
  #L3e2df8.  if v1 == 0 then goto L3e2e08;
  #L3e2dfc.  v0:= new `l.f0.e.c`;
  #L3e2e00.  v1:= 0I;
  #L3e2e02.  call `<init>`(v0, v1, v1) @signature `Ll/f0/e/c;.<init>:(Ll/y;Ll/a0;)V` @kind direct;
  #L3e2e08.  return v0 @kind object;
}
