record `l.q` @kind class @AccessFlag PUBLIC_FINAL {
  `l.d0` `l.q.a` @AccessFlag PRIVATE_FINAL;
  `l.h` `l.q.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `l.q.c` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `l.q.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`l.q` v0 @kind this, `l.d0` v1 @kind object, `l.h` v2 @kind object, `java.util.List` v3 @kind object, `java.util.List` v4 @kind object) @signature `Ll/q;.<init>:(Ll/d0;Ll/h;Ljava/util/List;Ljava/util/List;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3dcf40.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dcf46.  v0.`l.q.a` @type ^`l.d0` := v1 @kind object;
  #L3dcf4a.  v0.`l.q.b` @type ^`l.h` := v2 @kind object;
  #L3dcf4e.  v0.`l.q.c` @type ^`java.util.List` := v3 @kind object;
  #L3dcf52.  v0.`l.q.d` @type ^`java.util.List` := v4 @kind object;
  #L3dcf56.  return @kind void;
}
procedure `l.q` `a`(`javax.net.ssl.SSLSession` v4 @kind object) @signature `Ll/q;.a:(Ljavax/net/ssl/SSLSession;)Ll/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3dce4c.  call temp:= `getCipherSuite`(v4) @signature `Ljavax/net/ssl/SSLSession;.getCipherSuite:()Ljava/lang/String;` @kind interface;
  #L3dce52.  v0:= temp @kind object;
  #L3dce54.  if v0 == 0 then goto L3dcf10;
  #L3dce58.  v1:= "SSL_NULL_WITH_NULL_NULL" @kind object;
  #L3dce5c.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dce62.  v1:= temp;
  #L3dce64.  if v1 != 0 then goto L3dcf00;
  #L3dce68.  call temp:= `a`(v0) @signature `Ll/h;.a:(Ljava/lang/String;)Ll/h;` @kind static;
  #L3dce6e.  v0:= temp @kind object;
  #L3dce70.  call temp:= `getProtocol`(v4) @signature `Ljavax/net/ssl/SSLSession;.getProtocol:()Ljava/lang/String;` @kind interface;
  #L3dce76.  v1:= temp @kind object;
  #L3dce78.  if v1 == 0 then goto L3dcef0;
  #L3dce7c.  v2:= "NONE" @kind object;
  #L3dce80.  call temp:= `equals`(v2, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dce86.  v2:= temp;
  #L3dce88.  if v2 != 0 then goto L3dcee0;
  #L3dce8c.  call temp:= `a`(v1) @signature `Ll/d0;.a:(Ljava/lang/String;)Ll/d0;` @kind static;
  #L3dce92.  v1:= temp @kind object;
  #L3dce94.  call temp:= `getPeerCertificates`(v4) @signature `Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L3dce9a.  v2:= temp @kind object;
  #L3dce9c.  goto L3dcea0;
  #L3dce9e.  v2:= 0I;
  #L3dcea0.  if v2 == 0 then goto L3dceae;
  #L3dcea4.  call temp:= `a`(v2) @signature `Ll/f0/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3dceaa.  v2:= temp @kind object;
  #L3dceac.  goto L3dceb6;
  #L3dceae.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L3dceb4.  v2:= temp @kind object;
  #L3dceb6.  call temp:= `getLocalCertificates`(v4) @signature `Ljavax/net/ssl/SSLSession;.getLocalCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L3dcebc.  v4:= temp @kind object;
  #L3dcebe.  if v4 == 0 then goto L3dcecc;
  #L3dcec2.  call temp:= `a`(v4) @signature `Ll/f0/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3dcec8.  v4:= temp @kind object;
  #L3dceca.  goto L3dced4;
  #L3dcecc.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L3dced2.  v4:= temp @kind object;
  #L3dced4.  v3:= new `l.q`;
  #L3dced8.  call `<init>`(v3, v1, v0, v2, v4) @signature `Ll/q;.<init>:(Ll/d0;Ll/h;Ljava/util/List;Ljava/util/List;)V` @kind direct;
  #L3dcede.  return v3 @kind object;
  #L3dcee0.  v4:= new `java.io.IOException`;
  #L3dcee4.  v0:= "tlsVersion == NONE" @kind object;
  #L3dcee8.  call `<init>`(v4, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dceee.  throw v4;
  #L3dcef0.  v4:= new `java.lang.IllegalStateException`;
  #L3dcef4.  v0:= "tlsVersion == null" @kind object;
  #L3dcef8.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dcefe.  throw v4;
  #L3dcf00.  v4:= new `java.io.IOException`;
  #L3dcf04.  v0:= "cipherSuite == SSL_NULL_WITH_NULL_NULL" @kind object;
  #L3dcf08.  call `<init>`(v4, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dcf0e.  throw v4;
  #L3dcf10.  v4:= new `java.lang.IllegalStateException`;
  #L3dcf14.  v0:= "cipherSuite == null" @kind object;
  #L3dcf18.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dcf1e.  throw v4;
  catch `javax.net.ssl.SSLPeerUnverifiedException` @[L3dce94..L3dce9c] goto L3dce9e;
}
procedure `l.h` `a`(`l.q` v1 @kind this) @signature `Ll/q;.a:()Ll/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dce34.  v0:= v1.`l.q.b` @type ^`l.h` @kind object;
  #L3dce38.  return v0 @kind object;
}
procedure `java.util.List` `b`(`l.q` v1 @kind this) @signature `Ll/q;.b:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dce1c.  v0:= v1.`l.q.c` @type ^`java.util.List` @kind object;
  #L3dce20.  return v0 @kind object;
}
procedure `boolean` `equals`(`l.q` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Ll/q;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3dcd4c.  v0:= instanceof @variable v4 @type ^`l.q` @kind boolean;
  #L3dcd50.  v1:= 0I;
  #L3dcd52.  if v0 != 0 then goto L3dcd58;
  #L3dcd56.  return v1;
  #L3dcd58.  v4:= (`l.q`) v4 @kind object;
  #L3dcd5c.  v0:= v3.`l.q.a` @type ^`l.d0` @kind object;
  #L3dcd60.  v2:= v4.`l.q.a` @type ^`l.d0` @kind object;
  #L3dcd64.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Enum;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dcd6a.  v0:= temp;
  #L3dcd6c.  if v0 == 0 then goto L3dcdae;
  #L3dcd70.  v0:= v3.`l.q.b` @type ^`l.h` @kind object;
  #L3dcd74.  v2:= v4.`l.q.b` @type ^`l.h` @kind object;
  #L3dcd78.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dcd7e.  v0:= temp;
  #L3dcd80.  if v0 == 0 then goto L3dcdae;
  #L3dcd84.  v0:= v3.`l.q.c` @type ^`java.util.List` @kind object;
  #L3dcd88.  v2:= v4.`l.q.c` @type ^`java.util.List` @kind object;
  #L3dcd8c.  call temp:= `equals`(v0, v2) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L3dcd92.  v0:= temp;
  #L3dcd94.  if v0 == 0 then goto L3dcdae;
  #L3dcd98.  v0:= v3.`l.q.d` @type ^`java.util.List` @kind object;
  #L3dcd9c.  v4:= v4.`l.q.d` @type ^`java.util.List` @kind object;
  #L3dcda0.  call temp:= `equals`(v0, v4) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L3dcda6.  v4:= temp;
  #L3dcda8.  if v4 == 0 then goto L3dcdae;
  #L3dcdac.  v1:= 1I;
  #L3dcdae.  return v1;
}
procedure `int` `hashCode`(`l.q` v2 @kind this) @signature `Ll/q;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3dcdc0.  v0:= v2.`l.q.a` @type ^`l.d0` @kind object;
  #L3dcdc4.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Enum;.hashCode:()I` @kind virtual;
  #L3dcdca.  v0:= temp;
  #L3dcdcc.  v1:= 527I;
  #L3dcdd0.  v1:= v1 + v0 @kind int;
  #L3dcdd2.  v1:= v1 * 31;
  #L3dcdd6.  v0:= v2.`l.q.b` @type ^`l.h` @kind object;
  #L3dcdda.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3dcde0.  v0:= temp;
  #L3dcde2.  v1:= v1 + v0 @kind int;
  #L3dcde4.  v1:= v1 * 31;
  #L3dcde8.  v0:= v2.`l.q.c` @type ^`java.util.List` @kind object;
  #L3dcdec.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L3dcdf2.  v0:= temp;
  #L3dcdf4.  v1:= v1 + v0 @kind int;
  #L3dcdf6.  v1:= v1 * 31;
  #L3dcdfa.  v0:= v2.`l.q.d` @type ^`java.util.List` @kind object;
  #L3dcdfe.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L3dce04.  v0:= temp;
  #L3dce06.  v1:= v1 + v0 @kind int;
  #L3dce08.  return v1;
}
