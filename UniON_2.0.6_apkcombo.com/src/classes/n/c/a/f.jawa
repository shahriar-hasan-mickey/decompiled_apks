record `n.c.a.f` @kind class @AccessFlag PUBLIC_FINAL extends `n.c.a.u.b` @kind class, `n.c.a.x.d` @kind interface, `n.c.a.x.f` @kind interface, `java.io.Serializable` @kind interface {
  `int` `n.c.a.f.b` @AccessFlag PRIVATE_FINAL;
  `short` `n.c.a.f.c` @AccessFlag PRIVATE_FINAL;
  `short` `n.c.a.f.d` @AccessFlag PRIVATE_FINAL;
}
global `n.c.a.f` `@@n.c.a.f.e` @AccessFlag PUBLIC_STATIC_FINAL;
global `n.c.a.f` `@@n.c.a.f.f` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/c/a/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L40b7f8.  v0:= 1I;
  #L40b7fa.  v1:= -999999999I;
  #L40b800.  call temp:= `a`(v1, v0, v0) @signature `Ln/c/a/f;.a:(III)Ln/c/a/f;` @kind static;
  #L40b806.  v0:= temp @kind object;
  #L40b808.  `@@n.c.a.f.e` @type ^`n.c.a.f` := v0 @kind object;
  #L40b80c.  v0:= 999999999I;
  #L40b812.  v1:= 12I;
  #L40b816.  v2:= 31I;
  #L40b81a.  call temp:= `a`(v0, v1, v2) @signature `Ln/c/a/f;.a:(III)Ln/c/a/f;` @kind static;
  #L40b820.  v0:= temp @kind object;
  #L40b822.  `@@n.c.a.f.f` @type ^`n.c.a.f` := v0 @kind object;
  #L40b826.  v0:= new `n.c.a.f$a`;
  #L40b82a.  call `<init>`(v0) @signature `Ln/c/a/f$a;.<init>:()V` @kind direct;
  #L40b830.  return @kind void;
}
procedure `void` `<init>`(`n.c.a.f` v0 @kind this, `int` v1 , `int` v2 , `int` v3 ) @signature `Ln/c/a/f;.<init>:(III)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L40b844.  call `<init>`(v0) @signature `Ln/c/a/u/b;.<init>:()V` @kind direct;
  #L40b84a.  v0.`n.c.a.f.b` @type ^`int` := v1;
  #L40b84e.  v1:= (`short`) v2 @kind i2s;
  #L40b850.  v0.`n.c.a.f.c` @type ^`short` := v1 @kind char;
  #L40b854.  v1:= (`short`) v3 @kind i2s;
  #L40b856.  v0.`n.c.a.f.d` @type ^`short` := v1 @kind char;
  #L40b85a.  return @kind void;
}
procedure `long` `B`(`n.c.a.f` v4 @kind this) @signature `Ln/c/a/f;.B:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40a9d4.  v0:= v4.`n.c.a.f.b` @type ^`int`;
  #L40a9d8.  v0:= (`long`) v0 @kind i2l;
  #L40a9da.  v2:= 12L;
  #L40a9de.  v0:= v0 * v2 @kind long;
  #L40a9e2.  v2:= v4.`n.c.a.f.c` @type ^`short` @kind short;
  #L40a9e6.  v2:= v2 + -1;
  #L40a9ea.  v2:= (`long`) v2 @kind i2l;
  #L40a9ec.  v0:= v0 + v2 @kind long;
  #L40a9ee.  return v0 @kind wide;
}
procedure `n.c.a.f` `a`(`int` v5 , `int` v6 ) @signature `Ln/c/a/f;.a:(II)Ln/c/a/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L40aeb4.  v0:= `@@n.c.a.x.a.D` @type ^`n.c.a.x.a` @kind object;
  #L40aeb8.  v1:= (`long`) v5 @kind i2l;
  #L40aeba.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40aec0.  v0:= `@@n.c.a.x.a.w` @type ^`n.c.a.x.a` @kind object;
  #L40aec4.  v3:= (`long`) v6 @kind i2l;
  #L40aec6.  call temp:= `b`(v0, v3) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40aecc.  v0:= `@@n.c.a.u.m.d` @type ^`n.c.a.u.m` @kind object;
  #L40aed0.  call temp:= `a`(v0, v1) @signature `Ln/c/a/u/m;.a:(J)Z` @kind virtual;
  #L40aed6.  v0:= temp;
  #L40aed8.  v1:= 366I;
  #L40aedc.  if v6 != v1 then goto L40af1e;
  #L40aee0.  if v0 == 0 then goto L40aee6;
  #L40aee4.  goto L40af1e;
  #L40aee6.  v6:= new `n.c.a.b`;
  #L40aeea.  v0:= new `java.lang.StringBuilder`;
  #L40aeee.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40aef4.  v1:= "Invalid date 'DayOfYear 366' as '" @kind object;
  #L40aef8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40aefe.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L40af04.  v5:= "' is not a leap year" @kind object;
  #L40af08.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40af0e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40af14.  v5:= temp @kind object;
  #L40af16.  call `<init>`(v6, v5) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40af1c.  throw v6;
  #L40af1e.  v1:= v6 + -1;
  #L40af22.  v1:= v1 / 31;
  #L40af26.  v1:= v1 + 1;
  #L40af2a.  call temp:= `a`(v1) @signature `Ln/c/a/i;.a:(I)Ln/c/a/i;` @kind static;
  #L40af30.  v1:= temp @kind object;
  #L40af32.  call temp:= `a`(v1, v0) @signature `Ln/c/a/i;.a:(Z)I` @kind virtual;
  #L40af38.  v2:= temp;
  #L40af3a.  call temp:= `b`(v1, v0) @signature `Ln/c/a/i;.b:(Z)I` @kind virtual;
  #L40af40.  v3:= temp;
  #L40af42.  v2:= v2 + v3 @kind int;
  #L40af44.  v2:= v2 + -1;
  #L40af48.  if v6 <= v2 then goto L40af58;
  #L40af4c.  v2:= 1L;
  #L40af50.  call temp:= `a`(v1, v2) @signature `Ln/c/a/i;.a:(J)Ln/c/a/i;` @kind virtual;
  #L40af56.  v1:= temp @kind object;
  #L40af58.  call temp:= `a`(v1, v0) @signature `Ln/c/a/i;.a:(Z)I` @kind virtual;
  #L40af5e.  v0:= temp;
  #L40af60.  v6:= v6 - v0 @kind int;
  #L40af62.  v6:= v6 + 1;
  #L40af66.  call temp:= `a`(v5, v1, v6) @signature `Ln/c/a/f;.a:(ILn/c/a/i;I)Ln/c/a/f;` @kind static;
  #L40af6c.  v5:= temp @kind object;
  #L40af6e.  return v5 @kind object;
}
procedure `n.c.a.f` `a`(`int` v3 , `int` v4 , `int` v5 ) @signature `Ln/c/a/f;.a:(III)Ln/c/a/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L40ad28.  v0:= `@@n.c.a.x.a.D` @type ^`n.c.a.x.a` @kind object;
  #L40ad2c.  v1:= (`long`) v3 @kind i2l;
  #L40ad2e.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40ad34.  v0:= `@@n.c.a.x.a.A` @type ^`n.c.a.x.a` @kind object;
  #L40ad38.  v1:= (`long`) v4 @kind i2l;
  #L40ad3a.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40ad40.  v0:= `@@n.c.a.x.a.v` @type ^`n.c.a.x.a` @kind object;
  #L40ad44.  v1:= (`long`) v5 @kind i2l;
  #L40ad46.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40ad4c.  call temp:= `a`(v4) @signature `Ln/c/a/i;.a:(I)Ln/c/a/i;` @kind static;
  #L40ad52.  v4:= temp @kind object;
  #L40ad54.  call temp:= `a`(v3, v4, v5) @signature `Ln/c/a/f;.a:(ILn/c/a/i;I)Ln/c/a/f;` @kind static;
  #L40ad5a.  v3:= temp @kind object;
  #L40ad5c.  return v3 @kind object;
}
procedure `n.c.a.f` `a`(`int` v3 , `n.c.a.i` v4 @kind object, `int` v5 ) @signature `Ln/c/a/f;.a:(ILn/c/a/i;I)Ln/c/a/f;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L40ab00.  v0:= 28I;
  #L40ab04.  if v5 <= v0 then goto L40abb2;
  #L40ab08.  v0:= `@@n.c.a.u.m.d` @type ^`n.c.a.u.m` @kind object;
  #L40ab0c.  v1:= (`long`) v3 @kind i2l;
  #L40ab0e.  call temp:= `a`(v0, v1) @signature `Ln/c/a/u/m;.a:(J)Z` @kind virtual;
  #L40ab14.  v0:= temp;
  #L40ab16.  call temp:= `b`(v4, v0) @signature `Ln/c/a/i;.b:(Z)I` @kind virtual;
  #L40ab1c.  v0:= temp;
  #L40ab1e.  if v5 <= v0 then goto L40abb2;
  #L40ab22.  v0:= 29I;
  #L40ab26.  if v5 != v0 then goto L40ab62;
  #L40ab2a.  v4:= new `n.c.a.b`;
  #L40ab2e.  v5:= new `java.lang.StringBuilder`;
  #L40ab32.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40ab38.  v0:= "Invalid date 'February 29' as '" @kind object;
  #L40ab3c.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40ab42.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L40ab48.  v3:= "' is not a leap year" @kind object;
  #L40ab4c.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40ab52.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40ab58.  v3:= temp @kind object;
  #L40ab5a.  call `<init>`(v4, v3) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40ab60.  throw v4;
  #L40ab62.  v3:= new `n.c.a.b`;
  #L40ab66.  v0:= new `java.lang.StringBuilder`;
  #L40ab6a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40ab70.  v1:= "Invalid date '" @kind object;
  #L40ab74.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40ab7a.  call temp:= `name`(v4) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L40ab80.  v4:= temp @kind object;
  #L40ab82.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40ab88.  v4:= " " @kind object;
  #L40ab8c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40ab92.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L40ab98.  v4:= "'" @kind object;
  #L40ab9c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40aba2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40aba8.  v4:= temp @kind object;
  #L40abaa.  call `<init>`(v3, v4) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40abb0.  throw v3;
  #L40abb2.  v0:= new `n.c.a.f`;
  #L40abb6.  call temp:= `getValue`(v4) @signature `Ln/c/a/i;.getValue:()I` @kind virtual;
  #L40abbc.  v4:= temp;
  #L40abbe.  call `<init>`(v0, v3, v4, v5) @signature `Ln/c/a/f;.<init>:(III)V` @kind direct;
  #L40abc4.  return v0 @kind object;
}
procedure `n.c.a.f` `a`(`java.io.DataInput` v2 @kind object) @signature `Ln/c/a/f;.a:(Ljava/io/DataInput;)Ln/c/a/f;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L40b1cc.  call temp:= `readInt`(v2) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L40b1d2.  v0:= temp;
  #L40b1d4.  call temp:= `readByte`(v2) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L40b1da.  v1:= temp;
  #L40b1dc.  call temp:= `readByte`(v2) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L40b1e2.  v2:= temp;
  #L40b1e4.  call temp:= `a`(v0, v1, v2) @signature `Ln/c/a/f;.a:(III)Ln/c/a/f;` @kind static;
  #L40b1ea.  v2:= temp @kind object;
  #L40b1ec.  return v2 @kind object;
}
procedure `n.c.a.f` `a`(`n.c.a.x.e` v3 @kind object) @signature `Ln/c/a/f;.a:(Ln/c/a/x/e;)Ln/c/a/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L40abd8.  call temp:= `b`() @signature `Ln/c/a/x/j;.b:()Ln/c/a/x/k;` @kind static;
  #L40abde.  v0:= temp @kind object;
  #L40abe0.  call temp:= `a`(v3, v0) @signature `Ln/c/a/x/e;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @kind interface;
  #L40abe6.  v0:= temp @kind object;
  #L40abe8.  v0:= (`n.c.a.f`) v0 @kind object;
  #L40abec.  if v0 == 0 then goto L40abf2;
  #L40abf0.  return v0 @kind object;
  #L40abf2.  v0:= new `n.c.a.b`;
  #L40abf6.  v1:= new `java.lang.StringBuilder`;
  #L40abfa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40ac00.  v2:= "Unable to obtain LocalDate from TemporalAccessor: " @kind object;
  #L40ac04.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40ac0a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40ac10.  v2:= ", type " @kind object;
  #L40ac14.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40ac1a.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L40ac20.  v3:= temp @kind object;
  #L40ac22.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L40ac28.  v3:= temp @kind object;
  #L40ac2a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40ac30.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40ac36.  v3:= temp @kind object;
  #L40ac38.  call `<init>`(v0, v3) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40ac3e.  throw v0;
}
procedure `n.c.a.f` `b`(`int` v3 , `int` v4 , `int` v5 ) @signature `Ln/c/a/f;.b:(III)Ln/c/a/f;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L40b200.  v0:= 2I;
  #L40b202.  if v4 == v0 then goto L40b232;
  #L40b206.  v0:= 4I;
  #L40b208.  if v4 == v0 then goto L40b224;
  #L40b20c.  v0:= 6I;
  #L40b20e.  if v4 == v0 then goto L40b224;
  #L40b212.  v0:= 9I;
  #L40b216.  if v4 == v0 then goto L40b224;
  #L40b21a.  v0:= 11I;
  #L40b21e.  if v4 == v0 then goto L40b224;
  #L40b222.  goto L40b250;
  #L40b224.  v0:= 30I;
  #L40b228.  call temp:= `min`(v5, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L40b22e.  v5:= temp;
  #L40b230.  goto L40b250;
  #L40b232.  v0:= `@@n.c.a.u.m.d` @type ^`n.c.a.u.m` @kind object;
  #L40b236.  v1:= (`long`) v3 @kind i2l;
  #L40b238.  call temp:= `a`(v0, v1) @signature `Ln/c/a/u/m;.a:(J)Z` @kind virtual;
  #L40b23e.  v0:= temp;
  #L40b240.  if v0 == 0 then goto L40b24a;
  #L40b244.  v0:= 29I;
  #L40b248.  goto L40b228;
  #L40b24a.  v0:= 28I;
  #L40b24e.  goto L40b228;
  #L40b250.  call temp:= `a`(v3, v4, v5) @signature `Ln/c/a/f;.a:(III)Ln/c/a/f;` @kind static;
  #L40b256.  v3:= temp @kind object;
  #L40b258.  return v3 @kind object;
}
procedure `n.c.a.f` `b`(`int` v3 , `n.c.a.i` v4 @kind object, `int` v5 ) @signature `Ln/c/a/f;.b:(ILn/c/a/i;I)Ln/c/a/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L40ad70.  v0:= `@@n.c.a.x.a.D` @type ^`n.c.a.x.a` @kind object;
  #L40ad74.  v1:= (`long`) v3 @kind i2l;
  #L40ad76.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40ad7c.  v0:= "month" @kind object;
  #L40ad80.  call temp:= `a`(v4, v0) @signature `Ln/c/a/w/d;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40ad86.  v0:= `@@n.c.a.x.a.v` @type ^`n.c.a.x.a` @kind object;
  #L40ad8a.  v1:= (`long`) v5 @kind i2l;
  #L40ad8c.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40ad92.  call temp:= `a`(v3, v4, v5) @signature `Ln/c/a/f;.a:(ILn/c/a/i;I)Ln/c/a/f;` @kind static;
  #L40ad98.  v3:= temp @kind object;
  #L40ad9a.  return v3 @kind object;
}
procedure `int` `e`(`n.c.a.f` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/f;.e:(Ln/c/a/x/i;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L40a5b8.  v0:= `@@n.c.a.f$b.a` @type ^`int`[] @kind object;
  #L40a5bc.  v1:= v4 @kind object;
  #L40a5be.  v1:= (`n.c.a.x.a`) v1 @kind object;
  #L40a5c2.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40a5c8.  v1:= temp;
  #L40a5ca.  v0:= v0[v1];
  #L40a5ce.  v1:= "Field too large for an int: " @kind object;
  #L40a5d2.  v2:= 1I;
  #L40a5d4.  goto L40a6e8;
  #L40a5da.  v0:= new `n.c.a.x.m`;
  #L40a5de.  v1:= new `java.lang.StringBuilder`;
  #L40a5e2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40a5e8.  v2:= "Unsupported field: " @kind object;
  #L40a5ec.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40a5f2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40a5f8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40a5fe.  v4:= temp @kind object;
  #L40a600.  call `<init>`(v0, v4) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40a606.  throw v0;
  #L40a608.  v4:= v3.`n.c.a.f.b` @type ^`int`;
  #L40a60c.  if v4 < v2 then goto L40a612;
  #L40a610.  goto L40a614;
  #L40a612.  v2:= 0I;
  #L40a614.  return v2;
  #L40a616.  v4:= v3.`n.c.a.f.b` @type ^`int`;
  #L40a61a.  return v4;
  #L40a61c.  v0:= new `n.c.a.b`;
  #L40a620.  v2:= new `java.lang.StringBuilder`;
  #L40a624.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40a62a.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40a630.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40a636.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40a63c.  v4:= temp @kind object;
  #L40a63e.  call `<init>`(v0, v4) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40a644.  throw v0;
  #L40a646.  v4:= v3.`n.c.a.f.c` @type ^`short` @kind short;
  #L40a64a.  return v4;
  #L40a64c.  call temp:= `u`(v3) @signature `Ln/c/a/f;.u:()I` @kind virtual;
  #L40a652.  v4:= temp;
  #L40a654.  v4:= v4 - v2 @kind int;
  #L40a656.  v4:= v4 / 7;
  #L40a65a.  v4:= v4 + v2 @kind int;
  #L40a65c.  return v4;
  #L40a65e.  v0:= new `n.c.a.b`;
  #L40a662.  v2:= new `java.lang.StringBuilder`;
  #L40a666.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40a66c.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40a672.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40a678.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40a67e.  v4:= temp @kind object;
  #L40a680.  call `<init>`(v0, v4) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40a686.  throw v0;
  #L40a688.  call temp:= `u`(v3) @signature `Ln/c/a/f;.u:()I` @kind virtual;
  #L40a68e.  v4:= temp;
  #L40a690.  v4:= v4 - v2 @kind int;
  #L40a692.  v4:= v4 %% 7;
  #L40a696.  v4:= v4 + v2 @kind int;
  #L40a698.  return v4;
  #L40a69a.  v4:= v3.`n.c.a.f.d` @type ^`short` @kind short;
  #L40a69e.  v4:= v4 - v2 @kind int;
  #L40a6a0.  v4:= v4 %% 7;
  #L40a6a4.  v4:= v4 + v2 @kind int;
  #L40a6a6.  return v4;
  #L40a6a8.  call temp:= `t`(v3) @signature `Ln/c/a/f;.t:()Ln/c/a/c;` @kind virtual;
  #L40a6ae.  v4:= temp @kind object;
  #L40a6b0.  call temp:= `getValue`(v4) @signature `Ln/c/a/c;.getValue:()I` @kind virtual;
  #L40a6b6.  v4:= temp;
  #L40a6b8.  return v4;
  #L40a6ba.  v4:= v3.`n.c.a.f.b` @type ^`int`;
  #L40a6be.  if v4 < v2 then goto L40a6c4;
  #L40a6c2.  goto L40a6c8;
  #L40a6c4.  v4:= v4 - 1;
  #L40a6c8.  return v4;
  #L40a6ca.  v4:= v3.`n.c.a.f.d` @type ^`short` @kind short;
  #L40a6ce.  v4:= v4 - v2 @kind int;
  #L40a6d0.  v4:= v4 / 7;
  #L40a6d4.  v4:= v4 + v2 @kind int;
  #L40a6d6.  return v4;
  #L40a6d8.  call temp:= `u`(v3) @signature `Ln/c/a/f;.u:()I` @kind virtual;
  #L40a6de.  v4:= temp;
  #L40a6e0.  return v4;
  #L40a6e2.  v4:= v3.`n.c.a.f.d` @type ^`short` @kind short;
  #L40a6e6.  return v4;
  #L40a6e8.  switch v0
                  | 1 => goto L40a6e2
                  | 2 => goto L40a6d8
                  | 3 => goto L40a6ca
                  | 4 => goto L40a6ba
                  | 5 => goto L40a6a8
                  | 6 => goto L40a69a
                  | 7 => goto L40a688
                  | 8 => goto L40a65e
                  | 9 => goto L40a64c
                  | 10 => goto L40a646
                  | 11 => goto L40a61c
                  | 12 => goto L40a616
                  | 13 => goto L40a608
                  | else => goto L40a5da;
}
procedure `n.c.a.f` `g`(`long` v22 ) @signature `Ln/c/a/f;.g:(J)Ln/c/a/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L40adac.  v0:= v22 @kind wide;
  #L40adb0.  v2:= `@@n.c.a.x.a.x` @type ^`n.c.a.x.a` @kind object;
  #L40adb4.  call temp:= `b`(v2, v0) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40adba.  v2:= 719528L;
  #L40adc0.  v0:= v0 + v2 @kind long;
  #L40adc2.  v2:= 60L;
  #L40adc6.  v0:= v0 - v2 @kind long;
  #L40adc8.  v2:= 1L;
  #L40adcc.  v4:= 146097L;
  #L40add2.  v6:= 0L;
  #L40add6.  v8:= 400L;
  #L40adda.  v10:= lcmp(v0, v6);
  #L40adde.  if v10 >= 0 then goto L40adf8;
  #L40ade2.  v10:= v0 + v2 @kind long;
  #L40ade6.  v10:= v10 / v4 @kind long;
  #L40ade8.  v10:= v10 - v2 @kind long;
  #L40adea.  v12:= v10 * v8 @kind long;
  #L40adee.  v10:= -v10 @kind long;
  #L40adf0.  v10:= v10 * v4 @kind long;
  #L40adf4.  v0:= v0 + v10 @kind long;
  #L40adf6.  goto L40adfa;
  #L40adf8.  v12:= v6 @kind wide;
  #L40adfa.  v10:= v0 * v8 @kind long;
  #L40adfe.  v14:= 591L;
  #L40ae02.  v10:= v10 + v14 @kind long;
  #L40ae04.  v10:= v10 / v4 @kind long;
  #L40ae06.  v4:= 365L;
  #L40ae0a.  v14:= v10 * v4 @kind long;
  #L40ae0e.  v16:= 4L;
  #L40ae12.  v18:= v10 / v16 @kind long;
  #L40ae16.  v14:= v14 + v18 @kind long;
  #L40ae1a.  v18:= 100L;
  #L40ae1e.  v20:= v10 / v18 @kind long;
  #L40ae22.  v14:= v14 - v20 @kind long;
  #L40ae26.  v20:= v10 / v8 @kind long;
  #L40ae2a.  v14:= v14 + v20 @kind long;
  #L40ae2e.  v14:= v0 - v14 @kind long;
  #L40ae32.  v20:= lcmp(v14, v6);
  #L40ae36.  if v20 >= 0 then goto L40ae56;
  #L40ae3a.  v10:= v10 - v2 @kind long;
  #L40ae3c.  v4:= v4 * v10 @kind long;
  #L40ae40.  v2:= v10 / v16 @kind long;
  #L40ae44.  v4:= v4 + v2 @kind long;
  #L40ae46.  v2:= v10 / v18 @kind long;
  #L40ae4a.  v4:= v4 - v2 @kind long;
  #L40ae4c.  v2:= v10 / v8 @kind long;
  #L40ae50.  v4:= v4 + v2 @kind long;
  #L40ae52.  v14:= v0 - v4 @kind long;
  #L40ae56.  v10:= v10 + v12 @kind long;
  #L40ae58.  v0:= (`int`) v14 @kind l2i;
  #L40ae5a.  v1:= v0 * 5;
  #L40ae5e.  v1:= v1 + 2;
  #L40ae62.  v1:= v1 / 153;
  #L40ae66.  v2:= v1 + 2;
  #L40ae6a.  v2:= v2 %% 12;
  #L40ae6e.  v2:= v2 + 1;
  #L40ae72.  v3:= v1 * 306;
  #L40ae76.  v3:= v3 + 5;
  #L40ae7a.  v3:= v3 / 10;
  #L40ae7e.  v0:= v0 - v3 @kind int;
  #L40ae80.  v0:= v0 + 1;
  #L40ae84.  v1:= v1 / 10;
  #L40ae88.  v3:= (`long`) v1 @kind i2l;
  #L40ae8a.  v10:= v10 + v3 @kind long;
  #L40ae8c.  v1:= `@@n.c.a.x.a.D` @type ^`n.c.a.x.a` @kind object;
  #L40ae90.  call temp:= `a`(v1, v10) @signature `Ln/c/a/x/a;.a:(J)I` @kind virtual;
  #L40ae96.  v1:= temp;
  #L40ae98.  v3:= new `n.c.a.f`;
  #L40ae9c.  call `<init>`(v3, v1, v2, v0) @signature `Ln/c/a/f;.<init>:(III)V` @kind direct;
  #L40aea2.  return v3 @kind object;
}
procedure `java.lang.Object` `readResolve`(`n.c.a.f` v2 @kind this) @signature `Ln/c/a/f;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L40a88c.  v0:= new `java.io.InvalidObjectException`;
  #L40a890.  v1:= "Deserialization via serialization delegate" @kind object;
  #L40a894.  call `<init>`(v0, v1) @signature `Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40a89a.  throw v0;
}
procedure `java.lang.Object` `writeReplace`(`n.c.a.f` v2 @kind this) @signature `Ln/c/a/f;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L40a8ac.  v0:= new `n.c.a.n`;
  #L40a8b0.  v1:= 3I;
  #L40a8b2.  call `<init>`(v0, v1, v2) @signature `Ln/c/a/n;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L40a8b8.  return v0 @kind object;
}
procedure `int` `A`(`n.c.a.f` v1 @kind this) @signature `Ln/c/a/f;.A:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40a83c.  call temp:= `y`(v1) @signature `Ln/c/a/f;.y:()Z` @kind virtual;
  #L40a842.  v0:= temp;
  #L40a844.  if v0 == 0 then goto L40a84e;
  #L40a848.  v0:= 366I;
  #L40a84c.  goto L40a852;
  #L40a84e.  v0:= 365I;
  #L40a852.  return v0;
}
procedure `int` `a`(`n.c.a.f` v2 @kind this, `n.c.a.f` v3 @kind object) @signature `Ln/c/a/f;.a:(Ln/c/a/f;)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L40a554.  v0:= v2.`n.c.a.f.b` @type ^`int`;
  #L40a558.  v1:= v3.`n.c.a.f.b` @type ^`int`;
  #L40a55c.  v0:= v0 - v1 @kind int;
  #L40a55e.  if v0 != 0 then goto L40a57a;
  #L40a562.  v0:= v2.`n.c.a.f.c` @type ^`short` @kind short;
  #L40a566.  v1:= v3.`n.c.a.f.c` @type ^`short` @kind short;
  #L40a56a.  v0:= v0 - v1 @kind int;
  #L40a56c.  if v0 != 0 then goto L40a57a;
  #L40a570.  v0:= v2.`n.c.a.f.d` @type ^`short` @kind short;
  #L40a574.  v3:= v3.`n.c.a.f.d` @type ^`short` @kind short;
  #L40a578.  v0:= v0 - v3 @kind int;
  #L40a57a.  return v0;
}
procedure `int` `a`(`n.c.a.f` v1 @kind this, `n.c.a.u.b` v2 @kind object) @signature `Ln/c/a/f;.a:(Ln/c/a/u/b;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40a524.  v0:= instanceof @variable v2 @type ^`n.c.a.f` @kind boolean;
  #L40a528.  if v0 == 0 then goto L40a53a;
  #L40a52c.  v2:= (`n.c.a.f`) v2 @kind object;
  #L40a530.  call temp:= `a`(v1, v2) @signature `Ln/c/a/f;.a:(Ln/c/a/f;)I` @kind virtual;
  #L40a536.  v2:= temp;
  #L40a538.  return v2;
  #L40a53a.  call temp:= `a`(v1, v2) @signature `Ln/c/a/u/b;.a:(Ln/c/a/u/b;)I` @kind super;
  #L40a540.  v2:= temp;
  #L40a542.  return v2;
}
procedure `java.lang.Object` `a`(`n.c.a.f` v1 @kind this, `n.c.a.x.k` v2 @kind object) @signature `Ln/c/a/f;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40a864.  call temp:= `b`() @signature `Ln/c/a/x/j;.b:()Ln/c/a/x/k;` @kind static;
  #L40a86a.  v0:= temp @kind object;
  #L40a86c.  if v2 != v0 then goto L40a872;
  #L40a870.  return v1 @kind object;
  #L40a872.  call temp:= `a`(v1, v2) @signature `Ln/c/a/u/b;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @kind super;
  #L40a878.  v2:= temp @kind object;
  #L40a87a.  return v2 @kind object;
}
procedure `n.c.a.f` `a`(`n.c.a.f` v2 @kind this, `int` v3 ) @signature `Ln/c/a/f;.a:(I)Ln/c/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40b464.  v0:= v2.`n.c.a.f.d` @type ^`short` @kind short;
  #L40b468.  if v0 != v3 then goto L40b46e;
  #L40b46c.  return v2 @kind object;
  #L40b46e.  v0:= v2.`n.c.a.f.b` @type ^`int`;
  #L40b472.  v1:= v2.`n.c.a.f.c` @type ^`short` @kind short;
  #L40b476.  call temp:= `a`(v0, v1, v3) @signature `Ln/c/a/f;.a:(III)Ln/c/a/f;` @kind static;
  #L40b47c.  v3:= temp @kind object;
  #L40b47e.  return v3 @kind object;
}
procedure `n.c.a.f` `a`(`n.c.a.f` v3 @kind this, `long` v4 ) @signature `Ln/c/a/f;.a:(J)Ln/c/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40ac98.  v0:= -9223372036854775808L;
  #L40ac9c.  v2:= lcmp(v4, v0);
  #L40aca0.  if v2 != 0 then goto L40acc4;
  #L40aca4.  v4:= 9223372036854775807L;
  #L40acae.  call temp:= `c`(v3, v4) @signature `Ln/c/a/f;.c:(J)Ln/c/a/f;` @kind virtual;
  #L40acb4.  v4:= temp @kind object;
  #L40acb6.  v0:= 1L;
  #L40acba.  call temp:= `c`(v4, v0) @signature `Ln/c/a/f;.c:(J)Ln/c/a/f;` @kind virtual;
  #L40acc0.  v4:= temp @kind object;
  #L40acc2.  goto L40acce;
  #L40acc4.  v4:= -v4 @kind long;
  #L40acc6.  call temp:= `c`(v3, v4) @signature `Ln/c/a/f;.c:(J)Ln/c/a/f;` @kind virtual;
  #L40accc.  v4:= temp @kind object;
  #L40acce.  return v4 @kind object;
}
procedure `n.c.a.f` `a`(`n.c.a.f` v3 @kind this, `long` v4 , `n.c.a.x.l` v6 @kind object) @signature `Ln/c/a/f;.a:(JLn/c/a/x/l;)Ln/c/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40ac50.  v0:= -9223372036854775808L;
  #L40ac54.  v2:= lcmp(v4, v0);
  #L40ac58.  if v2 != 0 then goto L40ac7c;
  #L40ac5c.  v4:= 9223372036854775807L;
  #L40ac66.  call temp:= `b`(v3, v4, v6) @signature `Ln/c/a/f;.b:(JLn/c/a/x/l;)Ln/c/a/f;` @kind virtual;
  #L40ac6c.  v4:= temp @kind object;
  #L40ac6e.  v0:= 1L;
  #L40ac72.  call temp:= `b`(v4, v0, v6) @signature `Ln/c/a/f;.b:(JLn/c/a/x/l;)Ln/c/a/f;` @kind virtual;
  #L40ac78.  v4:= temp @kind object;
  #L40ac7a.  goto L40ac86;
  #L40ac7c.  v4:= -v4 @kind long;
  #L40ac7e.  call temp:= `b`(v3, v4, v6) @signature `Ln/c/a/f;.b:(JLn/c/a/x/l;)Ln/c/a/f;` @kind virtual;
  #L40ac84.  v4:= temp @kind object;
  #L40ac86.  return v4 @kind object;
}
procedure `n.c.a.f` `a`(`n.c.a.f` v1 @kind this, `n.c.a.x.f` v2 @kind object) @signature `Ln/c/a/f;.a:(Ln/c/a/x/f;)Ln/c/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40b26c.  v0:= instanceof @variable v2 @type ^`n.c.a.f` @kind boolean;
  #L40b270.  if v0 == 0 then goto L40b27a;
  #L40b274.  v2:= (`n.c.a.f`) v2 @kind object;
  #L40b278.  return v2 @kind object;
  #L40b27a.  call temp:= `a`(v2, v1) @signature `Ln/c/a/x/f;.a:(Ln/c/a/x/d;)Ln/c/a/x/d;` @kind interface;
  #L40b280.  v2:= temp @kind object;
  #L40b282.  v2:= (`n.c.a.f`) v2 @kind object;
  #L40b286.  return v2 @kind object;
}
procedure `n.c.a.f` `a`(`n.c.a.f` v0 @kind this, `n.c.a.x.h` v1 @kind object) @signature `Ln/c/a/f;.a:(Ln/c/a/x/h;)Ln/c/a/f;` @AccessFlag PUBLIC {
    temp;

  #L40b0a0.  call temp:= `a`(v1, v0) @signature `Ln/c/a/x/h;.a:(Ln/c/a/x/d;)Ln/c/a/x/d;` @kind interface;
  #L40b0a6.  v1:= temp @kind object;
  #L40b0a8.  v1:= (`n.c.a.f`) v1 @kind object;
  #L40b0ac.  return v1 @kind object;
}
procedure `n.c.a.f` `a`(`n.c.a.f` v4 @kind this, `n.c.a.x.i` v5 @kind object, `long` v6 ) @signature `Ln/c/a/f;.a:(Ln/c/a/x/i;J)Ln/c/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40b298.  v0:= instanceof @variable v5 @type ^`n.c.a.x.a` @kind boolean;
  #L40b29c.  if v0 == 0 then goto L40b408;
  #L40b2a0.  v0:= v5 @kind object;
  #L40b2a2.  v0:= (`n.c.a.x.a`) v0 @kind object;
  #L40b2a6.  call temp:= `b`(v0, v6) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40b2ac.  v1:= `@@n.c.a.f$b.a` @type ^`int`[] @kind object;
  #L40b2b0.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40b2b6.  v0:= temp;
  #L40b2b8.  v0:= v1[v0];
  #L40b2bc.  v1:= 1I;
  #L40b2be.  goto L40b418;
  #L40b2c4.  v6:= new `n.c.a.x.m`;
  #L40b2c8.  v7:= new `java.lang.StringBuilder`;
  #L40b2cc.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40b2d2.  v0:= "Unsupported field: " @kind object;
  #L40b2d6.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40b2dc.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40b2e2.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40b2e8.  v5:= temp @kind object;
  #L40b2ea.  call `<init>`(v6, v5) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40b2f0.  throw v6;
  #L40b2f2.  v5:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L40b2f6.  call temp:= `d`(v4, v5) @signature `Ln/c/a/f;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L40b2fc.  v2:= temp @kind wide;
  #L40b2fe.  v5:= lcmp(v2, v6);
  #L40b302.  if v5 != 0 then goto L40b30a;
  #L40b306.  v5:= v4 @kind object;
  #L40b308.  goto L40b318;
  #L40b30a.  v5:= v4.`n.c.a.f.b` @type ^`int`;
  #L40b30e.  v1:= v1 - v5 @kind int;
  #L40b310.  call temp:= `d`(v4, v1) @signature `Ln/c/a/f;.d:(I)Ln/c/a/f;` @kind virtual;
  #L40b316.  v5:= temp @kind object;
  #L40b318.  return v5 @kind object;
  #L40b31a.  v5:= (`int`) v6 @kind l2i;
  #L40b31c.  call temp:= `d`(v4, v5) @signature `Ln/c/a/f;.d:(I)Ln/c/a/f;` @kind virtual;
  #L40b322.  v5:= temp @kind object;
  #L40b324.  return v5 @kind object;
  #L40b326.  v5:= `@@n.c.a.x.a.B` @type ^`n.c.a.x.a` @kind object;
  #L40b32a.  call temp:= `d`(v4, v5) @signature `Ln/c/a/f;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L40b330.  v0:= temp @kind wide;
  #L40b332.  v6:= v6 - v0 @kind long;
  #L40b334.  call temp:= `d`(v4, v6) @signature `Ln/c/a/f;.d:(J)Ln/c/a/f;` @kind virtual;
  #L40b33a.  v5:= temp @kind object;
  #L40b33c.  return v5 @kind object;
  #L40b33e.  v5:= (`int`) v6 @kind l2i;
  #L40b340.  call temp:= `c`(v4, v5) @signature `Ln/c/a/f;.c:(I)Ln/c/a/f;` @kind virtual;
  #L40b346.  v5:= temp @kind object;
  #L40b348.  return v5 @kind object;
  #L40b34a.  v5:= `@@n.c.a.x.a.z` @type ^`n.c.a.x.a` @kind object;
  #L40b34e.  call temp:= `d`(v4, v5) @signature `Ln/c/a/f;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L40b354.  v0:= temp @kind wide;
  #L40b356.  v6:= v6 - v0 @kind long;
  #L40b358.  call temp:= `e`(v4, v6) @signature `Ln/c/a/f;.e:(J)Ln/c/a/f;` @kind virtual;
  #L40b35e.  v5:= temp @kind object;
  #L40b360.  return v5 @kind object;
  #L40b362.  call temp:= `g`(v6) @signature `Ln/c/a/f;.g:(J)Ln/c/a/f;` @kind static;
  #L40b368.  v5:= temp @kind object;
  #L40b36a.  return v5 @kind object;
  #L40b36c.  v5:= `@@n.c.a.x.a.u` @type ^`n.c.a.x.a` @kind object;
  #L40b370.  call temp:= `d`(v4, v5) @signature `Ln/c/a/f;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L40b376.  v0:= temp @kind wide;
  #L40b378.  v6:= v6 - v0 @kind long;
  #L40b37a.  call temp:= `c`(v4, v6) @signature `Ln/c/a/f;.c:(J)Ln/c/a/f;` @kind virtual;
  #L40b380.  v5:= temp @kind object;
  #L40b382.  return v5 @kind object;
  #L40b384.  v5:= `@@n.c.a.x.a.t` @type ^`n.c.a.x.a` @kind object;
  #L40b388.  call temp:= `d`(v4, v5) @signature `Ln/c/a/f;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L40b38e.  v0:= temp @kind wide;
  #L40b390.  v6:= v6 - v0 @kind long;
  #L40b392.  call temp:= `c`(v4, v6) @signature `Ln/c/a/f;.c:(J)Ln/c/a/f;` @kind virtual;
  #L40b398.  v5:= temp @kind object;
  #L40b39a.  return v5 @kind object;
  #L40b39c.  call temp:= `t`(v4) @signature `Ln/c/a/f;.t:()Ln/c/a/c;` @kind virtual;
  #L40b3a2.  v5:= temp @kind object;
  #L40b3a4.  call temp:= `getValue`(v5) @signature `Ln/c/a/c;.getValue:()I` @kind virtual;
  #L40b3aa.  v5:= temp;
  #L40b3ac.  v0:= (`long`) v5 @kind i2l;
  #L40b3ae.  v6:= v6 - v0 @kind long;
  #L40b3b0.  call temp:= `c`(v4, v6) @signature `Ln/c/a/f;.c:(J)Ln/c/a/f;` @kind virtual;
  #L40b3b6.  v5:= temp @kind object;
  #L40b3b8.  return v5 @kind object;
  #L40b3ba.  v5:= v4.`n.c.a.f.b` @type ^`int`;
  #L40b3be.  if v5 < v1 then goto L40b3c4;
  #L40b3c2.  goto L40b3cc;
  #L40b3c4.  v0:= 1L;
  #L40b3c8.  v6:= v0 - v6 @kind long;
  #L40b3cc.  v5:= (`int`) v6 @kind l2i;
  #L40b3ce.  call temp:= `d`(v4, v5) @signature `Ln/c/a/f;.d:(I)Ln/c/a/f;` @kind virtual;
  #L40b3d4.  v5:= temp @kind object;
  #L40b3d6.  return v5 @kind object;
  #L40b3d8.  v5:= `@@n.c.a.x.a.y` @type ^`n.c.a.x.a` @kind object;
  #L40b3dc.  call temp:= `d`(v4, v5) @signature `Ln/c/a/f;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L40b3e2.  v0:= temp @kind wide;
  #L40b3e4.  v6:= v6 - v0 @kind long;
  #L40b3e6.  call temp:= `e`(v4, v6) @signature `Ln/c/a/f;.e:(J)Ln/c/a/f;` @kind virtual;
  #L40b3ec.  v5:= temp @kind object;
  #L40b3ee.  return v5 @kind object;
  #L40b3f0.  v5:= (`int`) v6 @kind l2i;
  #L40b3f2.  call temp:= `b`(v4, v5) @signature `Ln/c/a/f;.b:(I)Ln/c/a/f;` @kind virtual;
  #L40b3f8.  v5:= temp @kind object;
  #L40b3fa.  return v5 @kind object;
  #L40b3fc.  v5:= (`int`) v6 @kind l2i;
  #L40b3fe.  call temp:= `a`(v4, v5) @signature `Ln/c/a/f;.a:(I)Ln/c/a/f;` @kind virtual;
  #L40b404.  v5:= temp @kind object;
  #L40b406.  return v5 @kind object;
  #L40b408.  call temp:= `a`(v5, v4, v6) @signature `Ln/c/a/x/i;.a:(Ln/c/a/x/d;J)Ln/c/a/x/d;` @kind interface;
  #L40b40e.  v5:= temp @kind object;
  #L40b410.  v5:= (`n.c.a.f`) v5 @kind object;
  #L40b414.  return v5 @kind object;
  #L40b416.  
  #L40b418.  switch v0
                  | 1 => goto L40b3fc
                  | 2 => goto L40b3f0
                  | 3 => goto L40b3d8
                  | 4 => goto L40b3ba
                  | 5 => goto L40b39c
                  | 6 => goto L40b384
                  | 7 => goto L40b36c
                  | 8 => goto L40b362
                  | 9 => goto L40b34a
                  | 10 => goto L40b33e
                  | 11 => goto L40b326
                  | 12 => goto L40b31a
                  | 13 => goto L40b2f2
                  | else => goto L40b2c4;
}
procedure `n.c.a.g` `a`(`n.c.a.f` v0 @kind this, `n.c.a.h` v1 @kind object) @signature `Ln/c/a/f;.a:(Ln/c/a/h;)Ln/c/a/g;` @AccessFlag PUBLIC {
    temp;

  #L40b52c.  call temp:= `a`(v0, v1) @signature `Ln/c/a/g;.a:(Ln/c/a/f;Ln/c/a/h;)Ln/c/a/g;` @kind static;
  #L40b532.  v1:= temp @kind object;
  #L40b534.  return v1 @kind object;
}
procedure `n.c.a.u.b` `a`(`n.c.a.f` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/f;.a:(JLn/c/a/x/l;)Ln/c/a/u/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40b568.  call temp:= `a`(v0, v1, v3) @signature `Ln/c/a/f;.a:(JLn/c/a/x/l;)Ln/c/a/f;` @kind virtual;
  #L40b56e.  v1:= temp @kind object;
  #L40b570.  return v1 @kind object;
}
procedure `n.c.a.u.b` `a`(`n.c.a.f` v0 @kind this, `n.c.a.x.f` v1 @kind object) @signature `Ln/c/a/f;.a:(Ln/c/a/x/f;)Ln/c/a/u/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40b5bc.  call temp:= `a`(v0, v1) @signature `Ln/c/a/f;.a:(Ln/c/a/x/f;)Ln/c/a/f;` @kind virtual;
  #L40b5c2.  v1:= temp @kind object;
  #L40b5c4.  return v1 @kind object;
}
procedure `n.c.a.u.b` `a`(`n.c.a.f` v0 @kind this, `n.c.a.x.h` v1 @kind object) @signature `Ln/c/a/f;.a:(Ln/c/a/x/h;)Ln/c/a/u/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40b5a0.  call temp:= `a`(v0, v1) @signature `Ln/c/a/f;.a:(Ln/c/a/x/h;)Ln/c/a/f;` @kind virtual;
  #L40b5a6.  v1:= temp @kind object;
  #L40b5a8.  return v1 @kind object;
}
procedure `n.c.a.u.b` `a`(`n.c.a.f` v0 @kind this, `n.c.a.x.i` v1 @kind object, `long` v2 ) @signature `Ln/c/a/f;.a:(Ln/c/a/x/i;J)Ln/c/a/u/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40b5d8.  call temp:= `a`(v0, v1, v2) @signature `Ln/c/a/f;.a:(Ln/c/a/x/i;J)Ln/c/a/f;` @kind virtual;
  #L40b5de.  v1:= temp @kind object;
  #L40b5e0.  return v1 @kind object;
}
procedure `n.c.a.u.c` `a`(`n.c.a.f` v0 @kind this, `n.c.a.h` v1 @kind object) @signature `Ln/c/a/f;.a:(Ln/c/a/h;)Ln/c/a/u/c;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40b5f4.  call temp:= `a`(v0, v1) @signature `Ln/c/a/f;.a:(Ln/c/a/h;)Ln/c/a/g;` @kind virtual;
  #L40b5fa.  v1:= temp @kind object;
  #L40b5fc.  return v1 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.f` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/f;.a:(JLn/c/a/x/l;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40b67c.  call temp:= `a`(v0, v1, v3) @signature `Ln/c/a/f;.a:(JLn/c/a/x/l;)Ln/c/a/f;` @kind virtual;
  #L40b682.  v1:= temp @kind object;
  #L40b684.  return v1 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.f` v0 @kind this, `n.c.a.x.d` v1 @kind object) @signature `Ln/c/a/f;.a:(Ln/c/a/x/d;)Ln/c/a/x/d;` @AccessFlag PUBLIC {
    temp;

  #L40b660.  call temp:= `a`(v0, v1) @signature `Ln/c/a/u/b;.a:(Ln/c/a/x/d;)Ln/c/a/x/d;` @kind super;
  #L40b666.  v1:= temp @kind object;
  #L40b668.  return v1 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.f` v0 @kind this, `n.c.a.x.f` v1 @kind object) @signature `Ln/c/a/f;.a:(Ln/c/a/x/f;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40b6b4.  call temp:= `a`(v0, v1) @signature `Ln/c/a/f;.a:(Ln/c/a/x/f;)Ln/c/a/f;` @kind virtual;
  #L40b6ba.  v1:= temp @kind object;
  #L40b6bc.  return v1 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.f` v0 @kind this, `n.c.a.x.i` v1 @kind object, `long` v2 ) @signature `Ln/c/a/f;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40b6d0.  call temp:= `a`(v0, v1, v2) @signature `Ln/c/a/f;.a:(Ln/c/a/x/i;J)Ln/c/a/f;` @kind virtual;
  #L40b6d6.  v1:= temp @kind object;
  #L40b6d8.  return v1 @kind object;
}
procedure `n.c.a.x.n` `a`(`n.c.a.f` v4 @kind this, `n.c.a.x.i` v5 @kind object) @signature `Ln/c/a/f;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40b6ec.  v0:= instanceof @variable v5 @type ^`n.c.a.x.a` @kind boolean;
  #L40b6f0.  if v0 == 0 then goto L40b7dc;
  #L40b6f4.  v0:= v5 @kind object;
  #L40b6f6.  v0:= (`n.c.a.x.a`) v0 @kind object;
  #L40b6fa.  call temp:= `b`(v0) @signature `Ln/c/a/x/a;.b:()Z` @kind virtual;
  #L40b700.  v1:= temp;
  #L40b702.  if v1 == 0 then goto L40b7ae;
  #L40b706.  v1:= `@@n.c.a.f$b.a` @type ^`int`[] @kind object;
  #L40b70a.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40b710.  v0:= temp;
  #L40b712.  v0:= v1[v0];
  #L40b716.  v1:= 1I;
  #L40b718.  v2:= 1L;
  #L40b71c.  if v0 == v1 then goto L40b7a4;
  #L40b720.  v1:= 2I;
  #L40b722.  if v0 == v1 then goto L40b790;
  #L40b726.  v1:= 3I;
  #L40b728.  if v0 == v1 then goto L40b760;
  #L40b72c.  v1:= 4I;
  #L40b72e.  if v0 == v1 then goto L40b73c;
  #L40b732.  call temp:= `h`(v5) @signature `Ln/c/a/x/i;.h:()Ln/c/a/x/n;` @kind interface;
  #L40b738.  v5:= temp @kind object;
  #L40b73a.  return v5 @kind object;
  #L40b73c.  call temp:= `x`(v4) @signature `Ln/c/a/f;.x:()I` @kind virtual;
  #L40b742.  v5:= temp;
  #L40b744.  if v5 > 0 then goto L40b750;
  #L40b748.  v0:= 1000000000L;
  #L40b74e.  goto L40b756;
  #L40b750.  v0:= 999999999L;
  #L40b756.  call temp:= `a`(v2, v0) @signature `Ln/c/a/x/n;.a:(JJ)Ln/c/a/x/n;` @kind static;
  #L40b75c.  v5:= temp @kind object;
  #L40b75e.  return v5 @kind object;
  #L40b760.  call temp:= `v`(v4) @signature `Ln/c/a/f;.v:()Ln/c/a/i;` @kind virtual;
  #L40b766.  v5:= temp @kind object;
  #L40b768.  v0:= `@@n.c.a.i.c` @type ^`n.c.a.i` @kind object;
  #L40b76c.  if v5 != v0 then goto L40b782;
  #L40b770.  call temp:= `y`(v4) @signature `Ln/c/a/f;.y:()Z` @kind virtual;
  #L40b776.  v5:= temp;
  #L40b778.  if v5 != 0 then goto L40b782;
  #L40b77c.  v0:= 4L;
  #L40b780.  goto L40b786;
  #L40b782.  v0:= 5L;
  #L40b786.  call temp:= `a`(v2, v0) @signature `Ln/c/a/x/n;.a:(JJ)Ln/c/a/x/n;` @kind static;
  #L40b78c.  v5:= temp @kind object;
  #L40b78e.  return v5 @kind object;
  #L40b790.  call temp:= `A`(v4) @signature `Ln/c/a/f;.A:()I` @kind virtual;
  #L40b796.  v5:= temp;
  #L40b798.  v0:= (`long`) v5 @kind i2l;
  #L40b79a.  call temp:= `a`(v2, v0) @signature `Ln/c/a/x/n;.a:(JJ)Ln/c/a/x/n;` @kind static;
  #L40b7a0.  v5:= temp @kind object;
  #L40b7a2.  return v5 @kind object;
  #L40b7a4.  call temp:= `z`(v4) @signature `Ln/c/a/f;.z:()I` @kind virtual;
  #L40b7aa.  v5:= temp;
  #L40b7ac.  goto L40b798;
  #L40b7ae.  v0:= new `n.c.a.x.m`;
  #L40b7b2.  v1:= new `java.lang.StringBuilder`;
  #L40b7b6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40b7bc.  v2:= "Unsupported field: " @kind object;
  #L40b7c0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40b7c6.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40b7cc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40b7d2.  v5:= temp @kind object;
  #L40b7d4.  call `<init>`(v0, v5) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40b7da.  throw v0;
  #L40b7dc.  call temp:= `c`(v5, v4) @signature `Ln/c/a/x/i;.c:(Ln/c/a/x/e;)Ln/c/a/x/n;` @kind interface;
  #L40b7e2.  v5:= temp @kind object;
  #L40b7e4.  return v5 @kind object;
}
procedure `void` `a`(`n.c.a.f` v1 @kind this, `java.io.DataOutput` v2 @kind object) @signature `Ln/c/a/f;.a:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L40b86c.  v0:= v1.`n.c.a.f.b` @type ^`int`;
  #L40b870.  call `writeInt`(v2, v0) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L40b876.  v0:= v1.`n.c.a.f.c` @type ^`short` @kind short;
  #L40b87a.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L40b880.  v0:= v1.`n.c.a.f.d` @type ^`short` @kind short;
  #L40b884.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L40b88a.  return @kind void;
}
procedure `n.c.a.f` `b`(`n.c.a.f` v1 @kind this, `int` v2 ) @signature `Ln/c/a/f;.b:(I)Ln/c/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40b490.  call temp:= `u`(v1) @signature `Ln/c/a/f;.u:()I` @kind virtual;
  #L40b496.  v0:= temp;
  #L40b498.  if v0 != v2 then goto L40b49e;
  #L40b49c.  return v1 @kind object;
  #L40b49e.  v0:= v1.`n.c.a.f.b` @type ^`int`;
  #L40b4a2.  call temp:= `a`(v0, v2) @signature `Ln/c/a/f;.a:(II)Ln/c/a/f;` @kind static;
  #L40b4a8.  v2:= temp @kind object;
  #L40b4aa.  return v2 @kind object;
}
procedure `n.c.a.f` `b`(`n.c.a.f` v3 @kind this, `long` v4 ) @signature `Ln/c/a/f;.b:(J)Ln/c/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40ace0.  v0:= -9223372036854775808L;
  #L40ace4.  v2:= lcmp(v4, v0);
  #L40ace8.  if v2 != 0 then goto L40ad0c;
  #L40acec.  v4:= 9223372036854775807L;
  #L40acf6.  call temp:= `f`(v3, v4) @signature `Ln/c/a/f;.f:(J)Ln/c/a/f;` @kind virtual;
  #L40acfc.  v4:= temp @kind object;
  #L40acfe.  v0:= 1L;
  #L40ad02.  call temp:= `f`(v4, v0) @signature `Ln/c/a/f;.f:(J)Ln/c/a/f;` @kind virtual;
  #L40ad08.  v4:= temp @kind object;
  #L40ad0a.  goto L40ad16;
  #L40ad0c.  v4:= -v4 @kind long;
  #L40ad0e.  call temp:= `f`(v3, v4) @signature `Ln/c/a/f;.f:(J)Ln/c/a/f;` @kind virtual;
  #L40ad14.  v4:= temp @kind object;
  #L40ad16.  return v4 @kind object;
}
procedure `n.c.a.f` `b`(`n.c.a.f` v2 @kind this, `long` v3 , `n.c.a.x.l` v5 @kind object) @signature `Ln/c/a/f;.b:(JLn/c/a/x/l;)Ln/c/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40af80.  v0:= instanceof @variable v5 @type ^`n.c.a.x.b` @kind boolean;
  #L40af84.  if v0 == 0 then goto L40b05a;
  #L40af88.  v0:= v5 @kind object;
  #L40af8a.  v0:= (`n.c.a.x.b`) v0 @kind object;
  #L40af8e.  v1:= `@@n.c.a.f$b.b` @type ^`int`[] @kind object;
  #L40af92.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40af98.  v0:= temp;
  #L40af9a.  v0:= v1[v0];
  #L40af9e.  goto L40b068;
  #L40afa4.  v3:= new `n.c.a.x.m`;
  #L40afa8.  v4:= new `java.lang.StringBuilder`;
  #L40afac.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40afb2.  v0:= "Unsupported unit: " @kind object;
  #L40afb6.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40afbc.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40afc2.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40afc8.  v4:= temp @kind object;
  #L40afca.  call `<init>`(v3, v4) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40afd0.  throw v3;
  #L40afd2.  v5:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L40afd6.  call temp:= `d`(v2, v5) @signature `Ln/c/a/f;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L40afdc.  v0:= temp @kind wide;
  #L40afde.  call temp:= `d`(v0, v3) @signature `Ln/c/a/w/d;.d:(JJ)J` @kind static;
  #L40afe4.  v3:= temp @kind wide;
  #L40afe6.  call temp:= `a`(v2, v5, v3) @signature `Ln/c/a/f;.a:(Ln/c/a/x/i;J)Ln/c/a/f;` @kind virtual;
  #L40afec.  v3:= temp @kind object;
  #L40afee.  return v3 @kind object;
  #L40aff0.  v5:= 1000I;
  #L40aff4.  call temp:= `b`(v3, v5) @signature `Ln/c/a/w/d;.b:(JI)J` @kind static;
  #L40affa.  v3:= temp @kind wide;
  #L40affc.  call temp:= `f`(v2, v3) @signature `Ln/c/a/f;.f:(J)Ln/c/a/f;` @kind virtual;
  #L40b002.  v3:= temp @kind object;
  #L40b004.  return v3 @kind object;
  #L40b006.  v5:= 100I;
  #L40b00a.  call temp:= `b`(v3, v5) @signature `Ln/c/a/w/d;.b:(JI)J` @kind static;
  #L40b010.  v3:= temp @kind wide;
  #L40b012.  call temp:= `f`(v2, v3) @signature `Ln/c/a/f;.f:(J)Ln/c/a/f;` @kind virtual;
  #L40b018.  v3:= temp @kind object;
  #L40b01a.  return v3 @kind object;
  #L40b01c.  v5:= 10I;
  #L40b020.  call temp:= `b`(v3, v5) @signature `Ln/c/a/w/d;.b:(JI)J` @kind static;
  #L40b026.  v3:= temp @kind wide;
  #L40b028.  call temp:= `f`(v2, v3) @signature `Ln/c/a/f;.f:(J)Ln/c/a/f;` @kind virtual;
  #L40b02e.  v3:= temp @kind object;
  #L40b030.  return v3 @kind object;
  #L40b032.  call temp:= `f`(v2, v3) @signature `Ln/c/a/f;.f:(J)Ln/c/a/f;` @kind virtual;
  #L40b038.  v3:= temp @kind object;
  #L40b03a.  return v3 @kind object;
  #L40b03c.  call temp:= `d`(v2, v3) @signature `Ln/c/a/f;.d:(J)Ln/c/a/f;` @kind virtual;
  #L40b042.  v3:= temp @kind object;
  #L40b044.  return v3 @kind object;
  #L40b046.  call temp:= `e`(v2, v3) @signature `Ln/c/a/f;.e:(J)Ln/c/a/f;` @kind virtual;
  #L40b04c.  v3:= temp @kind object;
  #L40b04e.  return v3 @kind object;
  #L40b050.  call temp:= `c`(v2, v3) @signature `Ln/c/a/f;.c:(J)Ln/c/a/f;` @kind virtual;
  #L40b056.  v3:= temp @kind object;
  #L40b058.  return v3 @kind object;
  #L40b05a.  call temp:= `a`(v5, v2, v3) @signature `Ln/c/a/x/l;.a:(Ln/c/a/x/d;J)Ln/c/a/x/d;` @kind interface;
  #L40b060.  v3:= temp @kind object;
  #L40b062.  v3:= (`n.c.a.f`) v3 @kind object;
  #L40b066.  return v3 @kind object;
  #L40b068.  switch v0
                  | 1 => goto L40b050
                  | 2 => goto L40b046
                  | 3 => goto L40b03c
                  | 4 => goto L40b032
                  | 5 => goto L40b01c
                  | 6 => goto L40b006
                  | 7 => goto L40aff0
                  | 8 => goto L40afd2
                  | else => goto L40afa4;
}
procedure `n.c.a.u.b` `b`(`n.c.a.f` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/f;.b:(JLn/c/a/x/l;)Ln/c/a/u/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40b584.  call temp:= `b`(v0, v1, v3) @signature `Ln/c/a/f;.b:(JLn/c/a/x/l;)Ln/c/a/f;` @kind virtual;
  #L40b58a.  v1:= temp @kind object;
  #L40b58c.  return v1 @kind object;
}
procedure `n.c.a.x.d` `b`(`n.c.a.f` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/f;.b:(JLn/c/a/x/l;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40b698.  call temp:= `b`(v0, v1, v3) @signature `Ln/c/a/f;.b:(JLn/c/a/x/l;)Ln/c/a/f;` @kind virtual;
  #L40b69e.  v1:= temp @kind object;
  #L40b6a0.  return v1 @kind object;
}
procedure `boolean` `b`(`n.c.a.f` v1 @kind this, `n.c.a.u.b` v2 @kind object) @signature `Ln/c/a/f;.b:(Ln/c/a/u/b;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40a488.  v0:= instanceof @variable v2 @type ^`n.c.a.f` @kind boolean;
  #L40a48c.  if v0 == 0 then goto L40a4a8;
  #L40a490.  v2:= (`n.c.a.f`) v2 @kind object;
  #L40a494.  call temp:= `a`(v1, v2) @signature `Ln/c/a/f;.a:(Ln/c/a/f;)I` @kind virtual;
  #L40a49a.  v2:= temp;
  #L40a49c.  if v2 >= 0 then goto L40a4a4;
  #L40a4a0.  v2:= 1I;
  #L40a4a2.  goto L40a4a6;
  #L40a4a4.  v2:= 0I;
  #L40a4a6.  return v2;
  #L40a4a8.  call temp:= `b`(v1, v2) @signature `Ln/c/a/u/b;.b:(Ln/c/a/u/b;)Z` @kind super;
  #L40a4ae.  v2:= temp;
  #L40a4b0.  return v2;
}
procedure `boolean` `b`(`n.c.a.f` v0 @kind this, `n.c.a.x.i` v1 @kind object) @signature `Ln/c/a/f;.b:(Ln/c/a/x/i;)Z` @AccessFlag PUBLIC {
    temp;

  #L40a4e8.  call temp:= `b`(v0, v1) @signature `Ln/c/a/u/b;.b:(Ln/c/a/x/i;)Z` @kind super;
  #L40a4ee.  v1:= temp;
  #L40a4f0.  return v1;
}
procedure `int` `c`(`n.c.a.f` v1 @kind this, `n.c.a.x.i` v2 @kind object) @signature `Ln/c/a/f;.c:(Ln/c/a/x/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40a58c.  v0:= instanceof @variable v2 @type ^`n.c.a.x.a` @kind boolean;
  #L40a590.  if v0 == 0 then goto L40a59e;
  #L40a594.  call temp:= `e`(v1, v2) @signature `Ln/c/a/f;.e:(Ln/c/a/x/i;)I` @kind direct;
  #L40a59a.  v2:= temp;
  #L40a59c.  return v2;
  #L40a59e.  call temp:= `c`(v1, v2) @signature `Ln/c/a/w/c;.c:(Ln/c/a/x/i;)I` @kind super;
  #L40a5a4.  v2:= temp;
  #L40a5a6.  return v2;
}
procedure `n.c.a.f` `c`(`n.c.a.f` v3 @kind this, `int` v4 ) @signature `Ln/c/a/f;.c:(I)Ln/c/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40b4bc.  v0:= v3.`n.c.a.f.c` @type ^`short` @kind short;
  #L40b4c0.  if v0 != v4 then goto L40b4c6;
  #L40b4c4.  return v3 @kind object;
  #L40b4c6.  v0:= `@@n.c.a.x.a.A` @type ^`n.c.a.x.a` @kind object;
  #L40b4ca.  v1:= (`long`) v4 @kind i2l;
  #L40b4cc.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40b4d2.  v0:= v3.`n.c.a.f.b` @type ^`int`;
  #L40b4d6.  v1:= v3.`n.c.a.f.d` @type ^`short` @kind short;
  #L40b4da.  call temp:= `b`(v0, v4, v1) @signature `Ln/c/a/f;.b:(III)Ln/c/a/f;` @kind static;
  #L40b4e0.  v4:= temp @kind object;
  #L40b4e2.  return v4 @kind object;
}
procedure `n.c.a.f` `c`(`n.c.a.f` v3 @kind this, `long` v4 ) @signature `Ln/c/a/f;.c:(J)Ln/c/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40b0c0.  v0:= 0L;
  #L40b0c4.  v2:= lcmp(v4, v0);
  #L40b0c8.  if v2 != 0 then goto L40b0ce;
  #L40b0cc.  return v3 @kind object;
  #L40b0ce.  call temp:= `h`(v3) @signature `Ln/c/a/f;.h:()J` @kind virtual;
  #L40b0d4.  v0:= temp @kind wide;
  #L40b0d6.  call temp:= `d`(v0, v4) @signature `Ln/c/a/w/d;.d:(JJ)J` @kind static;
  #L40b0dc.  v4:= temp @kind wide;
  #L40b0de.  call temp:= `g`(v4) @signature `Ln/c/a/f;.g:(J)Ln/c/a/f;` @kind static;
  #L40b0e4.  v4:= temp @kind object;
  #L40b0e6.  return v4 @kind object;
}
procedure `int` `compareTo`(`n.c.a.f` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Ln/c/a/f;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40a504.  v1:= (`n.c.a.u.b`) v1 @kind object;
  #L40a508.  call temp:= `a`(v0, v1) @signature `Ln/c/a/f;.a:(Ln/c/a/u/b;)I` @kind virtual;
  #L40a50e.  v1:= temp;
  #L40a510.  return v1;
}
procedure `long` `d`(`n.c.a.f` v2 @kind this, `n.c.a.x.i` v3 @kind object) @signature `Ln/c/a/f;.d:(Ln/c/a/x/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40a980.  v0:= instanceof @variable v3 @type ^`n.c.a.x.a` @kind boolean;
  #L40a984.  if v0 == 0 then goto L40a9b8;
  #L40a988.  v0:= `@@n.c.a.x.a.x` @type ^`n.c.a.x.a` @kind object;
  #L40a98c.  if v3 != v0 then goto L40a99a;
  #L40a990.  call temp:= `h`(v2) @signature `Ln/c/a/f;.h:()J` @kind virtual;
  #L40a996.  v0:= temp @kind wide;
  #L40a998.  return v0 @kind wide;
  #L40a99a.  v0:= `@@n.c.a.x.a.B` @type ^`n.c.a.x.a` @kind object;
  #L40a99e.  if v3 != v0 then goto L40a9ac;
  #L40a9a2.  call temp:= `B`(v2) @signature `Ln/c/a/f;.B:()J` @kind direct;
  #L40a9a8.  v0:= temp @kind wide;
  #L40a9aa.  return v0 @kind wide;
  #L40a9ac.  call temp:= `e`(v2, v3) @signature `Ln/c/a/f;.e:(Ln/c/a/x/i;)I` @kind direct;
  #L40a9b2.  v3:= temp;
  #L40a9b4.  v0:= (`long`) v3 @kind i2l;
  #L40a9b6.  return v0 @kind wide;
  #L40a9b8.  call temp:= `b`(v3, v2) @signature `Ln/c/a/x/i;.b:(Ln/c/a/x/e;)J` @kind interface;
  #L40a9be.  v0:= temp @kind wide;
  #L40a9c0.  return v0 @kind wide;
}
procedure `n.c.a.f` `d`(`n.c.a.f` v3 @kind this, `int` v4 ) @signature `Ln/c/a/f;.d:(I)Ln/c/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40b4f4.  v0:= v3.`n.c.a.f.b` @type ^`int`;
  #L40b4f8.  if v0 != v4 then goto L40b4fe;
  #L40b4fc.  return v3 @kind object;
  #L40b4fe.  v0:= `@@n.c.a.x.a.D` @type ^`n.c.a.x.a` @kind object;
  #L40b502.  v1:= (`long`) v4 @kind i2l;
  #L40b504.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40b50a.  v0:= v3.`n.c.a.f.c` @type ^`short` @kind short;
  #L40b50e.  v1:= v3.`n.c.a.f.d` @type ^`short` @kind short;
  #L40b512.  call temp:= `b`(v4, v0, v1) @signature `Ln/c/a/f;.b:(III)Ln/c/a/f;` @kind static;
  #L40b518.  v4:= temp @kind object;
  #L40b51a.  return v4 @kind object;
}
procedure `n.c.a.f` `d`(`n.c.a.f` v6 @kind this, `long` v7 ) @signature `Ln/c/a/f;.d:(J)Ln/c/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L40b0f8.  v0:= 0L;
  #L40b0fc.  v2:= lcmp(v7, v0);
  #L40b100.  if v2 != 0 then goto L40b106;
  #L40b104.  return v6 @kind object;
  #L40b106.  v0:= v6.`n.c.a.f.b` @type ^`int`;
  #L40b10a.  v0:= (`long`) v0 @kind i2l;
  #L40b10c.  v2:= 12L;
  #L40b110.  v0:= v0 * v2 @kind long;
  #L40b114.  v4:= v6.`n.c.a.f.c` @type ^`short` @kind short;
  #L40b118.  v4:= v4 + -1;
  #L40b11c.  v4:= (`long`) v4 @kind i2l;
  #L40b11e.  v0:= v0 + v4 @kind long;
  #L40b120.  v0:= v0 + v7 @kind long;
  #L40b122.  v7:= `@@n.c.a.x.a.D` @type ^`n.c.a.x.a` @kind object;
  #L40b126.  call temp:= `b`(v0, v2) @signature `Ln/c/a/w/d;.b:(JJ)J` @kind static;
  #L40b12c.  v2:= temp @kind wide;
  #L40b12e.  call temp:= `a`(v7, v2) @signature `Ln/c/a/x/a;.a:(J)I` @kind virtual;
  #L40b134.  v7:= temp;
  #L40b136.  v8:= 12I;
  #L40b13a.  call temp:= `a`(v0, v8) @signature `Ln/c/a/w/d;.a:(JI)I` @kind static;
  #L40b140.  v8:= temp;
  #L40b142.  v8:= v8 + 1;
  #L40b146.  v0:= v6.`n.c.a.f.d` @type ^`short` @kind short;
  #L40b14a.  call temp:= `b`(v7, v8, v0) @signature `Ln/c/a/f;.b:(III)Ln/c/a/f;` @kind static;
  #L40b150.  v7:= temp @kind object;
  #L40b152.  return v7 @kind object;
}
procedure `n.c.a.f` `e`(`n.c.a.f` v1 @kind this, `long` v2 ) @signature `Ln/c/a/f;.e:(J)Ln/c/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40b164.  v0:= 7I;
  #L40b166.  call temp:= `b`(v2, v0) @signature `Ln/c/a/w/d;.b:(JI)J` @kind static;
  #L40b16c.  v2:= temp @kind wide;
  #L40b16e.  call temp:= `c`(v1, v2) @signature `Ln/c/a/f;.c:(J)Ln/c/a/f;` @kind virtual;
  #L40b174.  v2:= temp @kind object;
  #L40b176.  return v2 @kind object;
}
procedure `n.c.a.u.i` `e`(`n.c.a.f` v1 @kind this) @signature `Ln/c/a/f;.e:()Ln/c/a/u/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40b62c.  call temp:= `e`(v1) @signature `Ln/c/a/u/b;.e:()Ln/c/a/u/i;` @kind super;
  #L40b632.  v0:= temp @kind object;
  #L40b634.  return v0 @kind object;
}
procedure `boolean` `equals`(`n.c.a.f` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Ln/c/a/f;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40a44c.  v0:= 1I;
  #L40a44e.  if v3 != v4 then goto L40a454;
  #L40a452.  return v0;
  #L40a454.  v1:= instanceof @variable v4 @type ^`n.c.a.f` @kind boolean;
  #L40a458.  v2:= 0I;
  #L40a45a.  if v1 == 0 then goto L40a474;
  #L40a45e.  v4:= (`n.c.a.f`) v4 @kind object;
  #L40a462.  call temp:= `a`(v3, v4) @signature `Ln/c/a/f;.a:(Ln/c/a/f;)I` @kind virtual;
  #L40a468.  v4:= temp;
  #L40a46a.  if v4 != 0 then goto L40a470;
  #L40a46e.  goto L40a472;
  #L40a470.  v0:= 0I;
  #L40a472.  return v0;
  #L40a474.  return v2;
}
procedure `n.c.a.f` `f`(`n.c.a.f` v3 @kind this, `long` v4 ) @signature `Ln/c/a/f;.f:(J)Ln/c/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40b188.  v0:= 0L;
  #L40b18c.  v2:= lcmp(v4, v0);
  #L40b190.  if v2 != 0 then goto L40b196;
  #L40b194.  return v3 @kind object;
  #L40b196.  v0:= `@@n.c.a.x.a.D` @type ^`n.c.a.x.a` @kind object;
  #L40b19a.  v1:= v3.`n.c.a.f.b` @type ^`int`;
  #L40b19e.  v1:= (`long`) v1 @kind i2l;
  #L40b1a0.  v1:= v1 + v4 @kind long;
  #L40b1a2.  call temp:= `a`(v0, v1) @signature `Ln/c/a/x/a;.a:(J)I` @kind virtual;
  #L40b1a8.  v4:= temp;
  #L40b1aa.  v5:= v3.`n.c.a.f.c` @type ^`short` @kind short;
  #L40b1ae.  v0:= v3.`n.c.a.f.d` @type ^`short` @kind short;
  #L40b1b2.  call temp:= `b`(v4, v5, v0) @signature `Ln/c/a/f;.b:(III)Ln/c/a/f;` @kind static;
  #L40b1b8.  v4:= temp @kind object;
  #L40b1ba.  return v4 @kind object;
}
procedure `n.c.a.u.h` `g`(`n.c.a.f` v1 @kind this) @signature `Ln/c/a/f;.g:()Ln/c/a/u/h;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L40b610.  call temp:= `g`(v1) @signature `Ln/c/a/f;.g:()Ln/c/a/u/m;` @kind virtual;
  #L40b616.  v0:= temp @kind object;
  #L40b618.  return v0 @kind object;
}
procedure `n.c.a.u.m` `g`(`n.c.a.f` v1 @kind this) @signature `Ln/c/a/f;.g:()Ln/c/a/u/m;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40b648.  v0:= `@@n.c.a.u.m.d` @type ^`n.c.a.u.m` @kind object;
  #L40b64c.  return v0 @kind object;
}
procedure `long` `h`(`n.c.a.f` v12 @kind this) @signature `Ln/c/a/f;.h:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L40aa00.  v0:= v12.`n.c.a.f.b` @type ^`int`;
  #L40aa04.  v0:= (`long`) v0 @kind i2l;
  #L40aa06.  v2:= v12.`n.c.a.f.c` @type ^`short` @kind short;
  #L40aa0a.  v2:= (`long`) v2 @kind i2l;
  #L40aa0c.  v4:= 365L;
  #L40aa10.  v4:= v4 * v0 @kind long;
  #L40aa14.  v6:= 0L;
  #L40aa18.  v4:= v4 + v6 @kind long;
  #L40aa1a.  v8:= lcmp(v0, v6);
  #L40aa1e.  if v8 < 0 then goto L40aa4e;
  #L40aa22.  v6:= 3L;
  #L40aa26.  v6:= v6 + v0 @kind long;
  #L40aa28.  v8:= 4L;
  #L40aa2c.  v6:= v6 / v8 @kind long;
  #L40aa2e.  v8:= 99L;
  #L40aa32.  v8:= v8 + v0 @kind long;
  #L40aa34.  v10:= 100L;
  #L40aa38.  v8:= v8 / v10 @kind long;
  #L40aa3a.  v6:= v6 - v8 @kind long;
  #L40aa3c.  v8:= 399L;
  #L40aa40.  v0:= v0 + v8 @kind long;
  #L40aa42.  v8:= 400L;
  #L40aa46.  v0:= v0 / v8 @kind long;
  #L40aa48.  v6:= v6 + v0 @kind long;
  #L40aa4a.  v4:= v4 + v6 @kind long;
  #L40aa4c.  goto L40aa6a;
  #L40aa4e.  v6:= -4L;
  #L40aa52.  v6:= v0 / v6 @kind long;
  #L40aa56.  v8:= -100L;
  #L40aa5a.  v8:= v0 / v8 @kind long;
  #L40aa5e.  v6:= v6 - v8 @kind long;
  #L40aa60.  v8:= -400L;
  #L40aa64.  v0:= v0 / v8 @kind long;
  #L40aa66.  v6:= v6 + v0 @kind long;
  #L40aa68.  v4:= v4 - v6 @kind long;
  #L40aa6a.  v0:= 367L;
  #L40aa6e.  v0:= v0 * v2 @kind long;
  #L40aa72.  v6:= 362L;
  #L40aa76.  v0:= v0 - v6 @kind long;
  #L40aa78.  v6:= 12L;
  #L40aa7c.  v0:= v0 / v6 @kind long;
  #L40aa7e.  v4:= v4 + v0 @kind long;
  #L40aa80.  v0:= v12.`n.c.a.f.d` @type ^`short` @kind short;
  #L40aa84.  v0:= v0 + -1;
  #L40aa88.  v0:= (`long`) v0 @kind i2l;
  #L40aa8a.  v4:= v4 + v0 @kind long;
  #L40aa8c.  v0:= 2L;
  #L40aa90.  v6:= lcmp(v2, v0);
  #L40aa94.  if v6 <= 0 then goto L40aaac;
  #L40aa98.  v0:= 1L;
  #L40aa9c.  v4:= v4 - v0 @kind long;
  #L40aa9e.  call temp:= `y`(v12) @signature `Ln/c/a/f;.y:()Z` @kind virtual;
  #L40aaa4.  v2:= temp;
  #L40aaa6.  if v2 != 0 then goto L40aaac;
  #L40aaaa.  v4:= v4 - v0 @kind long;
  #L40aaac.  v0:= 719528L;
  #L40aab2.  v4:= v4 - v0 @kind long;
  #L40aab4.  return v4 @kind wide;
}
procedure `int` `hashCode`(`n.c.a.f` v4 @kind this) @signature `Ln/c/a/f;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40a7b0.  v0:= v4.`n.c.a.f.b` @type ^`int`;
  #L40a7b4.  v1:= v4.`n.c.a.f.c` @type ^`short` @kind short;
  #L40a7b8.  v2:= v4.`n.c.a.f.d` @type ^`short` @kind short;
  #L40a7bc.  v3:= v0 ^& -2048;
  #L40a7c0.  v0:= v0 ^< 11;
  #L40a7c4.  v1:= v1 ^< 6;
  #L40a7c8.  v0:= v0 + v1 @kind int;
  #L40a7ca.  v0:= v0 + v2 @kind int;
  #L40a7cc.  v0:= v0 ^~ v3 @kind int;
  #L40a7ce.  return v0;
}
procedure `int` `s`(`n.c.a.f` v1 @kind this) @signature `Ln/c/a/f;.s:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40a734.  v0:= v1.`n.c.a.f.d` @type ^`short` @kind short;
  #L40a738.  return v0;
}
procedure `n.c.a.c` `t`(`n.c.a.f` v4 @kind this) @signature `Ln/c/a/f;.t:()Ln/c/a/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40aac8.  call temp:= `h`(v4) @signature `Ln/c/a/f;.h:()J` @kind virtual;
  #L40aace.  v0:= temp @kind wide;
  #L40aad0.  v2:= 3L;
  #L40aad4.  v0:= v0 + v2 @kind long;
  #L40aad6.  v2:= 7I;
  #L40aad8.  call temp:= `a`(v0, v2) @signature `Ln/c/a/w/d;.a:(JI)I` @kind static;
  #L40aade.  v0:= temp;
  #L40aae0.  v0:= v0 + 1;
  #L40aae4.  call temp:= `a`(v0) @signature `Ln/c/a/c;.a:(I)Ln/c/a/c;` @kind static;
  #L40aaea.  v0:= temp @kind object;
  #L40aaec.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`n.c.a.f` v7 @kind this) @signature `Ln/c/a/f;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L40a8cc.  v0:= v7.`n.c.a.f.b` @type ^`int`;
  #L40a8d0.  v1:= v7.`n.c.a.f.c` @type ^`short` @kind short;
  #L40a8d4.  v2:= v7.`n.c.a.f.d` @type ^`short` @kind short;
  #L40a8d8.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L40a8de.  v3:= temp;
  #L40a8e0.  v4:= new `java.lang.StringBuilder`;
  #L40a8e4.  v5:= 10I;
  #L40a8e8.  call `<init>`(v4, v5) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L40a8ee.  v6:= 1000I;
  #L40a8f2.  if v3 >= v6 then goto L40a91c;
  #L40a8f6.  if v0 >= 0 then goto L40a908;
  #L40a8fa.  v0:= v0 + -10000;
  #L40a8fe.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L40a904.  v0:= 1I;
  #L40a906.  goto L40a914;
  #L40a908.  v0:= v0 + 10000;
  #L40a90c.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L40a912.  v0:= 0I;
  #L40a914.  call temp:= `deleteCharAt`(v4, v0) @signature `Ljava/lang/StringBuilder;.deleteCharAt:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L40a91a.  goto L40a934;
  #L40a91c.  v3:= 9999I;
  #L40a920.  if v0 <= v3 then goto L40a92e;
  #L40a924.  v3:= 43I;
  #L40a928.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L40a92e.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L40a934.  v0:= "-0" @kind object;
  #L40a938.  v3:= "-" @kind object;
  #L40a93c.  if v1 >= v5 then goto L40a944;
  #L40a940.  v6:= v0 @kind object;
  #L40a942.  goto L40a946;
  #L40a944.  v6:= v3 @kind object;
  #L40a946.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40a94c.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L40a952.  if v2 >= v5 then goto L40a958;
  #L40a956.  goto L40a95a;
  #L40a958.  v0:= v3 @kind object;
  #L40a95a.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40a960.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L40a966.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40a96c.  v0:= temp @kind object;
  #L40a96e.  return v0 @kind object;
}
procedure `int` `u`(`n.c.a.f` v2 @kind this) @signature `Ln/c/a/f;.u:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40a74c.  call temp:= `v`(v2) @signature `Ln/c/a/f;.v:()Ln/c/a/i;` @kind virtual;
  #L40a752.  v0:= temp @kind object;
  #L40a754.  call temp:= `y`(v2) @signature `Ln/c/a/f;.y:()Z` @kind virtual;
  #L40a75a.  v1:= temp;
  #L40a75c.  call temp:= `a`(v0, v1) @signature `Ln/c/a/i;.a:(Z)I` @kind virtual;
  #L40a762.  v0:= temp;
  #L40a764.  v1:= v2.`n.c.a.f.d` @type ^`short` @kind short;
  #L40a768.  v0:= v0 + v1 @kind int;
  #L40a76a.  v0:= v0 + -1;
  #L40a76e.  return v0;
}
procedure `n.c.a.i` `v`(`n.c.a.f` v1 @kind this) @signature `Ln/c/a/f;.v:()Ln/c/a/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40b548.  v0:= v1.`n.c.a.f.c` @type ^`short` @kind short;
  #L40b54c.  call temp:= `a`(v0) @signature `Ln/c/a/i;.a:(I)Ln/c/a/i;` @kind static;
  #L40b552.  v0:= temp @kind object;
  #L40b554.  return v0 @kind object;
}
procedure `int` `w`(`n.c.a.f` v1 @kind this) @signature `Ln/c/a/f;.w:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40a780.  v0:= v1.`n.c.a.f.c` @type ^`short` @kind short;
  #L40a784.  return v0;
}
procedure `int` `x`(`n.c.a.f` v1 @kind this) @signature `Ln/c/a/f;.x:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40a798.  v0:= v1.`n.c.a.f.b` @type ^`int`;
  #L40a79c.  return v0;
}
procedure `boolean` `y`(`n.c.a.f` v3 @kind this) @signature `Ln/c/a/f;.y:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40a4c4.  v0:= `@@n.c.a.u.m.d` @type ^`n.c.a.u.m` @kind object;
  #L40a4c8.  v1:= v3.`n.c.a.f.b` @type ^`int`;
  #L40a4cc.  v1:= (`long`) v1 @kind i2l;
  #L40a4ce.  call temp:= `a`(v0, v1) @signature `Ln/c/a/u/m;.a:(J)Z` @kind virtual;
  #L40a4d4.  v0:= temp;
  #L40a4d6.  return v0;
}
procedure `int` `z`(`n.c.a.f` v2 @kind this) @signature `Ln/c/a/f;.z:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40a7e0.  v0:= v2.`n.c.a.f.c` @type ^`short` @kind short;
  #L40a7e4.  v1:= 2I;
  #L40a7e6.  if v0 == v1 then goto L40a812;
  #L40a7ea.  v1:= 4I;
  #L40a7ec.  if v0 == v1 then goto L40a80c;
  #L40a7f0.  v1:= 6I;
  #L40a7f2.  if v0 == v1 then goto L40a80c;
  #L40a7f6.  v1:= 9I;
  #L40a7fa.  if v0 == v1 then goto L40a80c;
  #L40a7fe.  v1:= 11I;
  #L40a802.  if v0 == v1 then goto L40a80c;
  #L40a806.  v0:= 31I;
  #L40a80a.  return v0;
  #L40a80c.  v0:= 30I;
  #L40a810.  return v0;
  #L40a812.  call temp:= `y`(v2) @signature `Ln/c/a/f;.y:()Z` @kind virtual;
  #L40a818.  v0:= temp;
  #L40a81a.  if v0 == 0 then goto L40a824;
  #L40a81e.  v0:= 29I;
  #L40a822.  goto L40a828;
  #L40a824.  v0:= 28I;
  #L40a828.  return v0;
}
