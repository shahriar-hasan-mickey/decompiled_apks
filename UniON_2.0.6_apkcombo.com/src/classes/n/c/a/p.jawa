record `n.c.a.p` @kind class @AccessFlag PUBLIC_FINAL extends `n.c.a.w.c` @kind class, `n.c.a.x.d` @kind interface, `n.c.a.x.f` @kind interface, `java.lang.Comparable` @kind interface, `java.io.Serializable` @kind interface {
  `int` `n.c.a.p.b` @AccessFlag PRIVATE_FINAL;
  `int` `n.c.a.p.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<clinit>`() @signature `Ln/c/a/p;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L410118.  v0:= new `n.c.a.p$a`;
  #L41011c.  call `<init>`(v0) @signature `Ln/c/a/p$a;.<init>:()V` @kind direct;
  #L410122.  v0:= new `n.c.a.v.c`;
  #L410126.  call `<init>`(v0) @signature `Ln/c/a/v/c;.<init>:()V` @kind direct;
  #L41012c.  v1:= `@@n.c.a.x.a.D` @type ^`n.c.a.x.a` @kind object;
  #L410130.  v2:= `@@n.c.a.v.j.f` @type ^`n.c.a.v.j` @kind object;
  #L410134.  v3:= 4I;
  #L410136.  v4:= 10I;
  #L41013a.  call temp:= `a`(v0, v1, v3, v4, v2) @signature `Ln/c/a/v/c;.a:(Ln/c/a/x/i;IILn/c/a/v/j;)Ln/c/a/v/c;` @kind virtual;
  #L410140.  v1:= 45I;
  #L410144.  call temp:= `a`(v0, v1) @signature `Ln/c/a/v/c;.a:(C)Ln/c/a/v/c;` @kind virtual;
  #L41014a.  v1:= `@@n.c.a.x.a.A` @type ^`n.c.a.x.a` @kind object;
  #L41014e.  v2:= 2I;
  #L410150.  call temp:= `a`(v0, v1, v2) @signature `Ln/c/a/v/c;.a:(Ln/c/a/x/i;I)Ln/c/a/v/c;` @kind virtual;
  #L410156.  call temp:= `i`(v0) @signature `Ln/c/a/v/c;.i:()Ln/c/a/v/b;` @kind virtual;
  #L41015c.  return @kind void;
}
procedure `void` `<init>`(`n.c.a.p` v0 @kind this, `int` v1 , `int` v2 ) @signature `Ln/c/a/p;.<init>:(II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L410170.  call `<init>`(v0) @signature `Ln/c/a/w/c;.<init>:()V` @kind direct;
  #L410176.  v0.`n.c.a.p.b` @type ^`int` := v1;
  #L41017a.  v0.`n.c.a.p.c` @type ^`int` := v2;
  #L41017e.  return @kind void;
}
procedure `n.c.a.p` `a`(`int` v3 , `int` v4 ) @signature `Ln/c/a/p;.a:(II)Ln/c/a/p;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L40fc54.  v0:= `@@n.c.a.x.a.D` @type ^`n.c.a.x.a` @kind object;
  #L40fc58.  v1:= (`long`) v3 @kind i2l;
  #L40fc5a.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40fc60.  v0:= `@@n.c.a.x.a.A` @type ^`n.c.a.x.a` @kind object;
  #L40fc64.  v1:= (`long`) v4 @kind i2l;
  #L40fc66.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40fc6c.  v0:= new `n.c.a.p`;
  #L40fc70.  call `<init>`(v0, v3, v4) @signature `Ln/c/a/p;.<init>:(II)V` @kind direct;
  #L40fc76.  return v0 @kind object;
}
procedure `n.c.a.p` `a`(`java.io.DataInput` v1 @kind object) @signature `Ln/c/a/p;.a:(Ljava/io/DataInput;)Ln/c/a/p;` @AccessFlag STATIC {
    temp;
    v0;

  #L40fe34.  call temp:= `readInt`(v1) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L40fe3a.  v0:= temp;
  #L40fe3c.  call temp:= `readByte`(v1) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L40fe42.  v1:= temp;
  #L40fe44.  call temp:= `a`(v0, v1) @signature `Ln/c/a/p;.a:(II)Ln/c/a/p;` @kind static;
  #L40fe4a.  v1:= temp @kind object;
  #L40fe4c.  return v1 @kind object;
}
procedure `n.c.a.p` `a`(`n.c.a.x.e` v3 @kind object) @signature `Ln/c/a/p;.a:(Ln/c/a/x/e;)Ln/c/a/p;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L40fb4c.  v0:= instanceof @variable v3 @type ^`n.c.a.p` @kind boolean;
  #L40fb50.  if v0 == 0 then goto L40fb5a;
  #L40fb54.  v3:= (`n.c.a.p`) v3 @kind object;
  #L40fb58.  return v3 @kind object;
  #L40fb5a.  v0:= `@@n.c.a.u.m.d` @type ^`n.c.a.u.m` @kind object;
  #L40fb5e.  call temp:= `c`(v3) @signature `Ln/c/a/u/h;.c:(Ln/c/a/x/e;)Ln/c/a/u/h;` @kind static;
  #L40fb64.  v1:= temp @kind object;
  #L40fb66.  call temp:= `equals`(v0, v1) @signature `Ln/c/a/u/h;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L40fb6c.  v0:= temp;
  #L40fb6e.  if v0 != 0 then goto L40fb7a;
  #L40fb72.  call temp:= `a`(v3) @signature `Ln/c/a/f;.a:(Ln/c/a/x/e;)Ln/c/a/f;` @kind static;
  #L40fb78.  v3:= temp @kind object;
  #L40fb7a.  v0:= `@@n.c.a.x.a.D` @type ^`n.c.a.x.a` @kind object;
  #L40fb7e.  call temp:= `c`(v3, v0) @signature `Ln/c/a/x/e;.c:(Ln/c/a/x/i;)I` @kind interface;
  #L40fb84.  v0:= temp;
  #L40fb86.  v1:= `@@n.c.a.x.a.A` @type ^`n.c.a.x.a` @kind object;
  #L40fb8a.  call temp:= `c`(v3, v1) @signature `Ln/c/a/x/e;.c:(Ln/c/a/x/i;)I` @kind interface;
  #L40fb90.  v1:= temp;
  #L40fb92.  call temp:= `a`(v0, v1) @signature `Ln/c/a/p;.a:(II)Ln/c/a/p;` @kind static;
  #L40fb98.  v3:= temp @kind object;
  #L40fb9a.  return v3 @kind object;
  #L40fb9c.  v0:= new `n.c.a.b`;
  #L40fba0.  v1:= new `java.lang.StringBuilder`;
  #L40fba4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40fbaa.  v2:= "Unable to obtain YearMonth from TemporalAccessor: " @kind object;
  #L40fbae.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40fbb4.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40fbba.  v2:= ", type " @kind object;
  #L40fbbe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40fbc4.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L40fbca.  v3:= temp @kind object;
  #L40fbcc.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L40fbd2.  v3:= temp @kind object;
  #L40fbd4.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40fbda.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40fbe0.  v3:= temp @kind object;
  #L40fbe2.  call `<init>`(v0, v3) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40fbe8.  throw v0;
  catch `n.c.a.b` @[L40fb5a..L40fb9a] goto L40fb9c;
}
procedure `n.c.a.p` `b`(`n.c.a.p` v1 @kind this, `int` v2 , `int` v3 ) @signature `Ln/c/a/p;.b:(II)Ln/c/a/p;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L40fe60.  v0:= v1.`n.c.a.p.b` @type ^`int`;
  #L40fe64.  if v0 != v2 then goto L40fe72;
  #L40fe68.  v0:= v1.`n.c.a.p.c` @type ^`int`;
  #L40fe6c.  if v0 != v3 then goto L40fe72;
  #L40fe70.  return v1 @kind object;
  #L40fe72.  v0:= new `n.c.a.p`;
  #L40fe76.  call `<init>`(v0, v2, v3) @signature `Ln/c/a/p;.<init>:(II)V` @kind direct;
  #L40fe7c.  return v0 @kind object;
}
procedure `long` `h`(`n.c.a.p` v4 @kind this) @signature `Ln/c/a/p;.h:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40fb20.  v0:= v4.`n.c.a.p.b` @type ^`int`;
  #L40fb24.  v0:= (`long`) v0 @kind i2l;
  #L40fb26.  v2:= 12L;
  #L40fb2a.  v0:= v0 * v2 @kind long;
  #L40fb2e.  v2:= v4.`n.c.a.p.c` @type ^`int`;
  #L40fb32.  v2:= v2 + -1;
  #L40fb36.  v2:= (`long`) v2 @kind i2l;
  #L40fb38.  v0:= v0 + v2 @kind long;
  #L40fb3a.  return v0 @kind wide;
}
procedure `java.lang.Object` `readResolve`(`n.c.a.p` v2 @kind this) @signature `Ln/c/a/p;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L40f98c.  v0:= new `java.io.InvalidObjectException`;
  #L40f990.  v1:= "Deserialization via serialization delegate" @kind object;
  #L40f994.  call `<init>`(v0, v1) @signature `Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40f99a.  throw v0;
}
procedure `java.lang.Object` `writeReplace`(`n.c.a.p` v2 @kind this) @signature `Ln/c/a/p;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L40f9ac.  v0:= new `n.c.a.n`;
  #L40f9b0.  v1:= 68I;
  #L40f9b4.  call `<init>`(v0, v1, v2) @signature `Ln/c/a/n;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L40f9ba.  return v0 @kind object;
}
procedure `int` `a`(`n.c.a.p` v2 @kind this, `n.c.a.p` v3 @kind object) @signature `Ln/c/a/p;.a:(Ln/c/a/p;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40f87c.  v0:= v2.`n.c.a.p.b` @type ^`int`;
  #L40f880.  v1:= v3.`n.c.a.p.b` @type ^`int`;
  #L40f884.  v0:= v0 - v1 @kind int;
  #L40f886.  if v0 != 0 then goto L40f894;
  #L40f88a.  v0:= v2.`n.c.a.p.c` @type ^`int`;
  #L40f88e.  v3:= v3.`n.c.a.p.c` @type ^`int`;
  #L40f892.  v0:= v0 - v3 @kind int;
  #L40f894.  return v0;
}
procedure `java.lang.Object` `a`(`n.c.a.p` v1 @kind this, `n.c.a.x.k` v2 @kind object) @signature `Ln/c/a/p;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40f90c.  call temp:= `a`() @signature `Ln/c/a/x/j;.a:()Ln/c/a/x/k;` @kind static;
  #L40f912.  v0:= temp @kind object;
  #L40f914.  if v2 != v0 then goto L40f91e;
  #L40f918.  v2:= `@@n.c.a.u.m.d` @type ^`n.c.a.u.m` @kind object;
  #L40f91c.  return v2 @kind object;
  #L40f91e.  call temp:= `e`() @signature `Ln/c/a/x/j;.e:()Ln/c/a/x/k;` @kind static;
  #L40f924.  v0:= temp @kind object;
  #L40f926.  if v2 != v0 then goto L40f930;
  #L40f92a.  v2:= `@@n.c.a.x.b.l` @type ^`n.c.a.x.b` @kind object;
  #L40f92e.  return v2 @kind object;
  #L40f930.  call temp:= `b`() @signature `Ln/c/a/x/j;.b:()Ln/c/a/x/k;` @kind static;
  #L40f936.  v0:= temp @kind object;
  #L40f938.  if v2 == v0 then goto L40f978;
  #L40f93c.  call temp:= `c`() @signature `Ln/c/a/x/j;.c:()Ln/c/a/x/k;` @kind static;
  #L40f942.  v0:= temp @kind object;
  #L40f944.  if v2 == v0 then goto L40f978;
  #L40f948.  call temp:= `f`() @signature `Ln/c/a/x/j;.f:()Ln/c/a/x/k;` @kind static;
  #L40f94e.  v0:= temp @kind object;
  #L40f950.  if v2 == v0 then goto L40f978;
  #L40f954.  call temp:= `g`() @signature `Ln/c/a/x/j;.g:()Ln/c/a/x/k;` @kind static;
  #L40f95a.  v0:= temp @kind object;
  #L40f95c.  if v2 == v0 then goto L40f978;
  #L40f960.  call temp:= `d`() @signature `Ln/c/a/x/j;.d:()Ln/c/a/x/k;` @kind static;
  #L40f966.  v0:= temp @kind object;
  #L40f968.  if v2 != v0 then goto L40f96e;
  #L40f96c.  goto L40f978;
  #L40f96e.  call temp:= `a`(v1, v2) @signature `Ln/c/a/w/c;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @kind super;
  #L40f974.  v2:= temp @kind object;
  #L40f976.  return v2 @kind object;
  #L40f978.  v2:= 0I;
  #L40f97a.  return v2 @kind object;
}
procedure `n.c.a.p` `a`(`n.c.a.p` v3 @kind this, `int` v4 ) @signature `Ln/c/a/p;.a:(I)Ln/c/a/p;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40ffb4.  v0:= `@@n.c.a.x.a.A` @type ^`n.c.a.x.a` @kind object;
  #L40ffb8.  v1:= (`long`) v4 @kind i2l;
  #L40ffba.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40ffc0.  v0:= v3.`n.c.a.p.b` @type ^`int`;
  #L40ffc4.  call temp:= `b`(v3, v0, v4) @signature `Ln/c/a/p;.b:(II)Ln/c/a/p;` @kind direct;
  #L40ffca.  v4:= temp @kind object;
  #L40ffcc.  return v4 @kind object;
}
procedure `n.c.a.p` `a`(`n.c.a.p` v6 @kind this, `long` v7 ) @signature `Ln/c/a/p;.a:(J)Ln/c/a/p;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L40fd8c.  v0:= 0L;
  #L40fd90.  v2:= lcmp(v7, v0);
  #L40fd94.  if v2 != 0 then goto L40fd9a;
  #L40fd98.  return v6 @kind object;
  #L40fd9a.  v0:= v6.`n.c.a.p.b` @type ^`int`;
  #L40fd9e.  v0:= (`long`) v0 @kind i2l;
  #L40fda0.  v2:= 12L;
  #L40fda4.  v0:= v0 * v2 @kind long;
  #L40fda8.  v4:= v6.`n.c.a.p.c` @type ^`int`;
  #L40fdac.  v4:= v4 + -1;
  #L40fdb0.  v4:= (`long`) v4 @kind i2l;
  #L40fdb2.  v0:= v0 + v4 @kind long;
  #L40fdb4.  v0:= v0 + v7 @kind long;
  #L40fdb6.  v7:= `@@n.c.a.x.a.D` @type ^`n.c.a.x.a` @kind object;
  #L40fdba.  call temp:= `b`(v0, v2) @signature `Ln/c/a/w/d;.b:(JJ)J` @kind static;
  #L40fdc0.  v2:= temp @kind wide;
  #L40fdc2.  call temp:= `a`(v7, v2) @signature `Ln/c/a/x/a;.a:(J)I` @kind virtual;
  #L40fdc8.  v7:= temp;
  #L40fdca.  v8:= 12I;
  #L40fdce.  call temp:= `a`(v0, v8) @signature `Ln/c/a/w/d;.a:(JI)I` @kind static;
  #L40fdd4.  v8:= temp;
  #L40fdd6.  v8:= v8 + 1;
  #L40fdda.  call temp:= `b`(v6, v7, v8) @signature `Ln/c/a/p;.b:(II)Ln/c/a/p;` @kind direct;
  #L40fde0.  v7:= temp @kind object;
  #L40fde2.  return v7 @kind object;
}
procedure `n.c.a.p` `a`(`n.c.a.p` v3 @kind this, `long` v4 , `n.c.a.x.l` v6 @kind object) @signature `Ln/c/a/p;.a:(JLn/c/a/x/l;)Ln/c/a/p;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40fc0c.  v0:= -9223372036854775808L;
  #L40fc10.  v2:= lcmp(v4, v0);
  #L40fc14.  if v2 != 0 then goto L40fc38;
  #L40fc18.  v4:= 9223372036854775807L;
  #L40fc22.  call temp:= `b`(v3, v4, v6) @signature `Ln/c/a/p;.b:(JLn/c/a/x/l;)Ln/c/a/p;` @kind virtual;
  #L40fc28.  v4:= temp @kind object;
  #L40fc2a.  v0:= 1L;
  #L40fc2e.  call temp:= `b`(v4, v0, v6) @signature `Ln/c/a/p;.b:(JLn/c/a/x/l;)Ln/c/a/p;` @kind virtual;
  #L40fc34.  v4:= temp @kind object;
  #L40fc36.  goto L40fc42;
  #L40fc38.  v4:= -v4 @kind long;
  #L40fc3a.  call temp:= `b`(v3, v4, v6) @signature `Ln/c/a/p;.b:(JLn/c/a/x/l;)Ln/c/a/p;` @kind virtual;
  #L40fc40.  v4:= temp @kind object;
  #L40fc42.  return v4 @kind object;
}
procedure `n.c.a.p` `a`(`n.c.a.p` v0 @kind this, `n.c.a.x.f` v1 @kind object) @signature `Ln/c/a/p;.a:(Ln/c/a/x/f;)Ln/c/a/p;` @AccessFlag PUBLIC {
    temp;

  #L40fe90.  call temp:= `a`(v1, v0) @signature `Ln/c/a/x/f;.a:(Ln/c/a/x/d;)Ln/c/a/x/d;` @kind interface;
  #L40fe96.  v1:= temp @kind object;
  #L40fe98.  v1:= (`n.c.a.p`) v1 @kind object;
  #L40fe9c.  return v1 @kind object;
}
procedure `n.c.a.p` `a`(`n.c.a.p` v4 @kind this, `n.c.a.x.i` v5 @kind object, `long` v6 ) @signature `Ln/c/a/p;.a:(Ln/c/a/x/i;J)Ln/c/a/p;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40feb0.  v0:= instanceof @variable v5 @type ^`n.c.a.x.a` @kind boolean;
  #L40feb4.  if v0 == 0 then goto L40ff94;
  #L40feb8.  v0:= v5 @kind object;
  #L40feba.  v0:= (`n.c.a.x.a`) v0 @kind object;
  #L40febe.  call temp:= `b`(v0, v6) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40fec4.  v1:= `@@n.c.a.p$b.a` @type ^`int`[] @kind object;
  #L40fec8.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40fece.  v0:= temp;
  #L40fed0.  v0:= v1[v0];
  #L40fed4.  v1:= 1I;
  #L40fed6.  if v0 == v1 then goto L40ff88;
  #L40feda.  v2:= 2I;
  #L40fedc.  if v0 == v2 then goto L40ff70;
  #L40fee0.  v2:= 3I;
  #L40fee2.  if v0 == v2 then goto L40ff54;
  #L40fee6.  v2:= 4I;
  #L40fee8.  if v0 == v2 then goto L40ff48;
  #L40feec.  v2:= 5I;
  #L40feee.  if v0 != v2 then goto L40ff1a;
  #L40fef2.  v5:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L40fef6.  call temp:= `d`(v4, v5) @signature `Ln/c/a/p;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L40fefc.  v2:= temp @kind wide;
  #L40fefe.  v5:= lcmp(v2, v6);
  #L40ff02.  if v5 != 0 then goto L40ff0a;
  #L40ff06.  v5:= v4 @kind object;
  #L40ff08.  goto L40ff18;
  #L40ff0a.  v5:= v4.`n.c.a.p.b` @type ^`int`;
  #L40ff0e.  v1:= v1 - v5 @kind int;
  #L40ff10.  call temp:= `b`(v4, v1) @signature `Ln/c/a/p;.b:(I)Ln/c/a/p;` @kind virtual;
  #L40ff16.  v5:= temp @kind object;
  #L40ff18.  return v5 @kind object;
  #L40ff1a.  v6:= new `n.c.a.x.m`;
  #L40ff1e.  v7:= new `java.lang.StringBuilder`;
  #L40ff22.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40ff28.  v0:= "Unsupported field: " @kind object;
  #L40ff2c.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40ff32.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40ff38.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40ff3e.  v5:= temp @kind object;
  #L40ff40.  call `<init>`(v6, v5) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40ff46.  throw v6;
  #L40ff48.  v5:= (`int`) v6 @kind l2i;
  #L40ff4a.  call temp:= `b`(v4, v5) @signature `Ln/c/a/p;.b:(I)Ln/c/a/p;` @kind virtual;
  #L40ff50.  v5:= temp @kind object;
  #L40ff52.  return v5 @kind object;
  #L40ff54.  v5:= v4.`n.c.a.p.b` @type ^`int`;
  #L40ff58.  if v5 >= v1 then goto L40ff64;
  #L40ff5c.  v0:= 1L;
  #L40ff60.  v6:= v0 - v6 @kind long;
  #L40ff64.  v5:= (`int`) v6 @kind l2i;
  #L40ff66.  call temp:= `b`(v4, v5) @signature `Ln/c/a/p;.b:(I)Ln/c/a/p;` @kind virtual;
  #L40ff6c.  v5:= temp @kind object;
  #L40ff6e.  return v5 @kind object;
  #L40ff70.  v5:= `@@n.c.a.x.a.B` @type ^`n.c.a.x.a` @kind object;
  #L40ff74.  call temp:= `d`(v4, v5) @signature `Ln/c/a/p;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L40ff7a.  v0:= temp @kind wide;
  #L40ff7c.  v6:= v6 - v0 @kind long;
  #L40ff7e.  call temp:= `a`(v4, v6) @signature `Ln/c/a/p;.a:(J)Ln/c/a/p;` @kind virtual;
  #L40ff84.  v5:= temp @kind object;
  #L40ff86.  return v5 @kind object;
  #L40ff88.  v5:= (`int`) v6 @kind l2i;
  #L40ff8a.  call temp:= `a`(v4, v5) @signature `Ln/c/a/p;.a:(I)Ln/c/a/p;` @kind virtual;
  #L40ff90.  v5:= temp @kind object;
  #L40ff92.  return v5 @kind object;
  #L40ff94.  call temp:= `a`(v5, v4, v6) @signature `Ln/c/a/x/i;.a:(Ln/c/a/x/d;J)Ln/c/a/x/d;` @kind interface;
  #L40ff9a.  v5:= temp @kind object;
  #L40ff9c.  v5:= (`n.c.a.p`) v5 @kind object;
  #L40ffa0.  return v5 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.p` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/p;.a:(JLn/c/a/x/l;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L41005c.  call temp:= `a`(v0, v1, v3) @signature `Ln/c/a/p;.a:(JLn/c/a/x/l;)Ln/c/a/p;` @kind virtual;
  #L410062.  v1:= temp @kind object;
  #L410064.  return v1 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.p` v3 @kind this, `n.c.a.x.d` v4 @kind object) @signature `Ln/c/a/p;.a:(Ln/c/a/x/d;)Ln/c/a/x/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L41000c.  call temp:= `c`(v4) @signature `Ln/c/a/u/h;.c:(Ln/c/a/x/e;)Ln/c/a/u/h;` @kind static;
  #L410012.  v0:= temp @kind object;
  #L410014.  v1:= `@@n.c.a.u.m.d` @type ^`n.c.a.u.m` @kind object;
  #L410018.  call temp:= `equals`(v0, v1) @signature `Ln/c/a/u/h;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L41001e.  v0:= temp;
  #L410020.  if v0 == 0 then goto L41003a;
  #L410024.  v0:= `@@n.c.a.x.a.B` @type ^`n.c.a.x.a` @kind object;
  #L410028.  call temp:= `h`(v3) @signature `Ln/c/a/p;.h:()J` @kind direct;
  #L41002e.  v1:= temp @kind wide;
  #L410030.  call temp:= `a`(v4, v0, v1) @signature `Ln/c/a/x/d;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @kind interface;
  #L410036.  v4:= temp @kind object;
  #L410038.  return v4 @kind object;
  #L41003a.  v4:= new `n.c.a.b`;
  #L41003e.  v0:= "Adjustment only supported on ISO date-time" @kind object;
  #L410042.  call `<init>`(v4, v0) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L410048.  throw v4;
}
procedure `n.c.a.x.d` `a`(`n.c.a.p` v0 @kind this, `n.c.a.x.f` v1 @kind object) @signature `Ln/c/a/p;.a:(Ln/c/a/x/f;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L410094.  call temp:= `a`(v0, v1) @signature `Ln/c/a/p;.a:(Ln/c/a/x/f;)Ln/c/a/p;` @kind virtual;
  #L41009a.  v1:= temp @kind object;
  #L41009c.  return v1 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.p` v0 @kind this, `n.c.a.x.i` v1 @kind object, `long` v2 ) @signature `Ln/c/a/p;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4100b0.  call temp:= `a`(v0, v1, v2) @signature `Ln/c/a/p;.a:(Ln/c/a/x/i;J)Ln/c/a/p;` @kind virtual;
  #L4100b6.  v1:= temp @kind object;
  #L4100b8.  return v1 @kind object;
}
procedure `n.c.a.x.n` `a`(`n.c.a.p` v4 @kind this, `n.c.a.x.i` v5 @kind object) @signature `Ln/c/a/p;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4100cc.  v0:= `@@n.c.a.x.a.C` @type ^`n.c.a.x.a` @kind object;
  #L4100d0.  if v5 != v0 then goto L4100fc;
  #L4100d4.  call temp:= `e`(v4) @signature `Ln/c/a/p;.e:()I` @kind virtual;
  #L4100da.  v5:= temp;
  #L4100dc.  v0:= 1L;
  #L4100e0.  if v5 > 0 then goto L4100ec;
  #L4100e4.  v2:= 1000000000L;
  #L4100ea.  goto L4100f2;
  #L4100ec.  v2:= 999999999L;
  #L4100f2.  call temp:= `a`(v0, v2) @signature `Ln/c/a/x/n;.a:(JJ)Ln/c/a/x/n;` @kind static;
  #L4100f8.  v5:= temp @kind object;
  #L4100fa.  return v5 @kind object;
  #L4100fc.  call temp:= `a`(v4, v5) @signature `Ln/c/a/w/c;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @kind super;
  #L410102.  v5:= temp @kind object;
  #L410104.  return v5 @kind object;
}
procedure `void` `a`(`n.c.a.p` v1 @kind this, `java.io.DataOutput` v2 @kind object) @signature `Ln/c/a/p;.a:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L410190.  v0:= v1.`n.c.a.p.b` @type ^`int`;
  #L410194.  call `writeInt`(v2, v0) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L41019a.  v0:= v1.`n.c.a.p.c` @type ^`int`;
  #L41019e.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L4101a4.  return @kind void;
}
procedure `n.c.a.p` `b`(`n.c.a.p` v3 @kind this, `int` v4 ) @signature `Ln/c/a/p;.b:(I)Ln/c/a/p;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40ffe0.  v0:= `@@n.c.a.x.a.D` @type ^`n.c.a.x.a` @kind object;
  #L40ffe4.  v1:= (`long`) v4 @kind i2l;
  #L40ffe6.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40ffec.  v0:= v3.`n.c.a.p.c` @type ^`int`;
  #L40fff0.  call temp:= `b`(v3, v4, v0) @signature `Ln/c/a/p;.b:(II)Ln/c/a/p;` @kind direct;
  #L40fff6.  v4:= temp @kind object;
  #L40fff8.  return v4 @kind object;
}
procedure `n.c.a.p` `b`(`n.c.a.p` v3 @kind this, `long` v4 ) @signature `Ln/c/a/p;.b:(J)Ln/c/a/p;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40fdf4.  v0:= 0L;
  #L40fdf8.  v2:= lcmp(v4, v0);
  #L40fdfc.  if v2 != 0 then goto L40fe02;
  #L40fe00.  return v3 @kind object;
  #L40fe02.  v0:= `@@n.c.a.x.a.D` @type ^`n.c.a.x.a` @kind object;
  #L40fe06.  v1:= v3.`n.c.a.p.b` @type ^`int`;
  #L40fe0a.  v1:= (`long`) v1 @kind i2l;
  #L40fe0c.  v1:= v1 + v4 @kind long;
  #L40fe0e.  call temp:= `a`(v0, v1) @signature `Ln/c/a/x/a;.a:(J)I` @kind virtual;
  #L40fe14.  v4:= temp;
  #L40fe16.  v5:= v3.`n.c.a.p.c` @type ^`int`;
  #L40fe1a.  call temp:= `b`(v3, v4, v5) @signature `Ln/c/a/p;.b:(II)Ln/c/a/p;` @kind direct;
  #L40fe20.  v4:= temp @kind object;
  #L40fe22.  return v4 @kind object;
}
procedure `n.c.a.p` `b`(`n.c.a.p` v2 @kind this, `long` v3 , `n.c.a.x.l` v5 @kind object) @signature `Ln/c/a/p;.b:(JLn/c/a/x/l;)Ln/c/a/p;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40fc88.  v0:= instanceof @variable v5 @type ^`n.c.a.x.b` @kind boolean;
  #L40fc8c.  if v0 == 0 then goto L40fd4e;
  #L40fc90.  v0:= `@@n.c.a.p$b.b` @type ^`int`[] @kind object;
  #L40fc94.  v1:= v5 @kind object;
  #L40fc96.  v1:= (`n.c.a.x.b`) v1 @kind object;
  #L40fc9a.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40fca0.  v1:= temp;
  #L40fca2.  v0:= v0[v1];
  #L40fca6.  goto L40fd5c;
  #L40fcac.  v3:= new `n.c.a.x.m`;
  #L40fcb0.  v4:= new `java.lang.StringBuilder`;
  #L40fcb4.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40fcba.  v0:= "Unsupported unit: " @kind object;
  #L40fcbe.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40fcc4.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40fcca.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40fcd0.  v4:= temp @kind object;
  #L40fcd2.  call `<init>`(v3, v4) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40fcd8.  throw v3;
  #L40fcda.  v5:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L40fcde.  call temp:= `d`(v2, v5) @signature `Ln/c/a/p;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L40fce4.  v0:= temp @kind wide;
  #L40fce6.  call temp:= `d`(v0, v3) @signature `Ln/c/a/w/d;.d:(JJ)J` @kind static;
  #L40fcec.  v3:= temp @kind wide;
  #L40fcee.  call temp:= `a`(v2, v5, v3) @signature `Ln/c/a/p;.a:(Ln/c/a/x/i;J)Ln/c/a/p;` @kind virtual;
  #L40fcf4.  v3:= temp @kind object;
  #L40fcf6.  return v3 @kind object;
  #L40fcf8.  v5:= 1000I;
  #L40fcfc.  call temp:= `b`(v3, v5) @signature `Ln/c/a/w/d;.b:(JI)J` @kind static;
  #L40fd02.  v3:= temp @kind wide;
  #L40fd04.  call temp:= `b`(v2, v3) @signature `Ln/c/a/p;.b:(J)Ln/c/a/p;` @kind virtual;
  #L40fd0a.  v3:= temp @kind object;
  #L40fd0c.  return v3 @kind object;
  #L40fd0e.  v5:= 100I;
  #L40fd12.  call temp:= `b`(v3, v5) @signature `Ln/c/a/w/d;.b:(JI)J` @kind static;
  #L40fd18.  v3:= temp @kind wide;
  #L40fd1a.  call temp:= `b`(v2, v3) @signature `Ln/c/a/p;.b:(J)Ln/c/a/p;` @kind virtual;
  #L40fd20.  v3:= temp @kind object;
  #L40fd22.  return v3 @kind object;
  #L40fd24.  v5:= 10I;
  #L40fd28.  call temp:= `b`(v3, v5) @signature `Ln/c/a/w/d;.b:(JI)J` @kind static;
  #L40fd2e.  v3:= temp @kind wide;
  #L40fd30.  call temp:= `b`(v2, v3) @signature `Ln/c/a/p;.b:(J)Ln/c/a/p;` @kind virtual;
  #L40fd36.  v3:= temp @kind object;
  #L40fd38.  return v3 @kind object;
  #L40fd3a.  call temp:= `b`(v2, v3) @signature `Ln/c/a/p;.b:(J)Ln/c/a/p;` @kind virtual;
  #L40fd40.  v3:= temp @kind object;
  #L40fd42.  return v3 @kind object;
  #L40fd44.  call temp:= `a`(v2, v3) @signature `Ln/c/a/p;.a:(J)Ln/c/a/p;` @kind virtual;
  #L40fd4a.  v3:= temp @kind object;
  #L40fd4c.  return v3 @kind object;
  #L40fd4e.  call temp:= `a`(v5, v2, v3) @signature `Ln/c/a/x/l;.a:(Ln/c/a/x/d;J)Ln/c/a/x/d;` @kind interface;
  #L40fd54.  v3:= temp @kind object;
  #L40fd56.  v3:= (`n.c.a.p`) v3 @kind object;
  #L40fd5a.  return v3 @kind object;
  #L40fd5c.  switch v0
                  | 1 => goto L40fd44
                  | 2 => goto L40fd3a
                  | 3 => goto L40fd24
                  | 4 => goto L40fd0e
                  | 5 => goto L40fcf8
                  | 6 => goto L40fcda
                  | else => goto L40fcac;
}
procedure `n.c.a.x.d` `b`(`n.c.a.p` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/p;.b:(JLn/c/a/x/l;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L410078.  call temp:= `b`(v0, v1, v3) @signature `Ln/c/a/p;.b:(JLn/c/a/x/l;)Ln/c/a/p;` @kind virtual;
  #L41007e.  v1:= temp @kind object;
  #L410080.  return v1 @kind object;
}
procedure `boolean` `b`(`n.c.a.p` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/p;.b:(Ln/c/a/x/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40f7fc.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L40f800.  v1:= 1I;
  #L40f802.  v2:= 0I;
  #L40f804.  if v0 == 0 then goto L40f836;
  #L40f808.  v0:= `@@n.c.a.x.a.D` @type ^`n.c.a.x.a` @kind object;
  #L40f80c.  if v4 == v0 then goto L40f834;
  #L40f810.  v0:= `@@n.c.a.x.a.A` @type ^`n.c.a.x.a` @kind object;
  #L40f814.  if v4 == v0 then goto L40f834;
  #L40f818.  v0:= `@@n.c.a.x.a.B` @type ^`n.c.a.x.a` @kind object;
  #L40f81c.  if v4 == v0 then goto L40f834;
  #L40f820.  v0:= `@@n.c.a.x.a.C` @type ^`n.c.a.x.a` @kind object;
  #L40f824.  if v4 == v0 then goto L40f834;
  #L40f828.  v0:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L40f82c.  if v4 != v0 then goto L40f832;
  #L40f830.  goto L40f834;
  #L40f832.  v1:= 0I;
  #L40f834.  return v1;
  #L40f836.  if v4 == 0 then goto L40f848;
  #L40f83a.  call temp:= `a`(v4, v3) @signature `Ln/c/a/x/i;.a:(Ln/c/a/x/e;)Z` @kind interface;
  #L40f840.  v4:= temp;
  #L40f842.  if v4 == 0 then goto L40f848;
  #L40f846.  goto L40f84a;
  #L40f848.  v1:= 0I;
  #L40f84a.  return v1;
}
procedure `int` `c`(`n.c.a.p` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/p;.c:(Ln/c/a/x/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40f8a8.  call temp:= `a`(v3, v4) @signature `Ln/c/a/p;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @kind virtual;
  #L40f8ae.  v0:= temp @kind object;
  #L40f8b0.  call temp:= `d`(v3, v4) @signature `Ln/c/a/p;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L40f8b6.  v1:= temp @kind wide;
  #L40f8b8.  call temp:= `a`(v0, v1, v4) @signature `Ln/c/a/x/n;.a:(JLn/c/a/x/i;)I` @kind virtual;
  #L40f8be.  v4:= temp;
  #L40f8c0.  return v4;
}
procedure `int` `compareTo`(`n.c.a.p` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Ln/c/a/p;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40f85c.  v1:= (`n.c.a.p`) v1 @kind object;
  #L40f860.  call temp:= `a`(v0, v1) @signature `Ln/c/a/p;.a:(Ln/c/a/p;)I` @kind virtual;
  #L40f866.  v1:= temp;
  #L40f868.  return v1;
}
procedure `long` `d`(`n.c.a.p` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/p;.d:(Ln/c/a/x/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40fa64.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L40fa68.  if v0 == 0 then goto L40fb04;
  #L40fa6c.  v0:= `@@n.c.a.p$b.a` @type ^`int`[] @kind object;
  #L40fa70.  v1:= v4 @kind object;
  #L40fa72.  v1:= (`n.c.a.x.a`) v1 @kind object;
  #L40fa76.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40fa7c.  v1:= temp;
  #L40fa7e.  v0:= v0[v1];
  #L40fa82.  v1:= 1I;
  #L40fa84.  if v0 == v1 then goto L40fafe;
  #L40fa88.  v2:= 2I;
  #L40fa8a.  if v0 == v2 then goto L40faf4;
  #L40fa8e.  v2:= 3I;
  #L40fa90.  if v0 == v2 then goto L40fae4;
  #L40fa94.  v2:= 4I;
  #L40fa96.  if v0 == v2 then goto L40fadc;
  #L40fa9a.  v2:= 5I;
  #L40fa9c.  if v0 != v2 then goto L40faae;
  #L40faa0.  v4:= v3.`n.c.a.p.b` @type ^`int`;
  #L40faa4.  if v4 >= v1 then goto L40faaa;
  #L40faa8.  v1:= 0I;
  #L40faaa.  v0:= (`long`) v1 @kind i2l;
  #L40faac.  return v0 @kind wide;
  #L40faae.  v0:= new `n.c.a.x.m`;
  #L40fab2.  v1:= new `java.lang.StringBuilder`;
  #L40fab6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40fabc.  v2:= "Unsupported field: " @kind object;
  #L40fac0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40fac6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40facc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40fad2.  v4:= temp @kind object;
  #L40fad4.  call `<init>`(v0, v4) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40fada.  throw v0;
  #L40fadc.  v4:= v3.`n.c.a.p.b` @type ^`int`;
  #L40fae0.  v0:= (`long`) v4 @kind i2l;
  #L40fae2.  return v0 @kind wide;
  #L40fae4.  v4:= v3.`n.c.a.p.b` @type ^`int`;
  #L40fae8.  if v4 >= v1 then goto L40faf0;
  #L40faec.  v4:= v4 - 1;
  #L40faf0.  v0:= (`long`) v4 @kind i2l;
  #L40faf2.  return v0 @kind wide;
  #L40faf4.  call temp:= `h`(v3) @signature `Ln/c/a/p;.h:()J` @kind direct;
  #L40fafa.  v0:= temp @kind wide;
  #L40fafc.  return v0 @kind wide;
  #L40fafe.  v4:= v3.`n.c.a.p.c` @type ^`int`;
  #L40fb02.  goto L40fae0;
  #L40fb04.  call temp:= `b`(v4, v3) @signature `Ln/c/a/x/i;.b:(Ln/c/a/x/e;)J` @kind interface;
  #L40fb0a.  v0:= temp @kind wide;
  #L40fb0c.  return v0 @kind wide;
}
procedure `int` `e`(`n.c.a.p` v1 @kind this) @signature `Ln/c/a/p;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40f8d4.  v0:= v1.`n.c.a.p.b` @type ^`int`;
  #L40f8d8.  return v0;
}
procedure `boolean` `equals`(`n.c.a.p` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Ln/c/a/p;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40f7b4.  v0:= 1I;
  #L40f7b6.  if v4 != v5 then goto L40f7bc;
  #L40f7ba.  return v0;
  #L40f7bc.  v1:= instanceof @variable v5 @type ^`n.c.a.p` @kind boolean;
  #L40f7c0.  v2:= 0I;
  #L40f7c2.  if v1 == 0 then goto L40f7e8;
  #L40f7c6.  v5:= (`n.c.a.p`) v5 @kind object;
  #L40f7ca.  v1:= v4.`n.c.a.p.b` @type ^`int`;
  #L40f7ce.  v3:= v5.`n.c.a.p.b` @type ^`int`;
  #L40f7d2.  if v1 != v3 then goto L40f7e4;
  #L40f7d6.  v1:= v4.`n.c.a.p.c` @type ^`int`;
  #L40f7da.  v5:= v5.`n.c.a.p.c` @type ^`int`;
  #L40f7de.  if v1 != v5 then goto L40f7e4;
  #L40f7e2.  goto L40f7e6;
  #L40f7e4.  v0:= 0I;
  #L40f7e6.  return v0;
  #L40f7e8.  return v2;
}
procedure `int` `hashCode`(`n.c.a.p` v2 @kind this) @signature `Ln/c/a/p;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40f8ec.  v0:= v2.`n.c.a.p.b` @type ^`int`;
  #L40f8f0.  v1:= v2.`n.c.a.p.c` @type ^`int`;
  #L40f8f4.  v1:= v1 ^< 27;
  #L40f8f8.  v0:= v0 ^~ v1 @kind int;
  #L40f8fa.  return v0;
}
procedure `java.lang.String` `toString`(`n.c.a.p` v3 @kind this) @signature `Ln/c/a/p;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40f9cc.  v0:= v3.`n.c.a.p.b` @type ^`int`;
  #L40f9d0.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L40f9d6.  v0:= temp;
  #L40f9d8.  v1:= new `java.lang.StringBuilder`;
  #L40f9dc.  v2:= 9I;
  #L40f9e0.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L40f9e6.  v2:= 1000I;
  #L40f9ea.  if v0 >= v2 then goto L40fa18;
  #L40f9ee.  v0:= v3.`n.c.a.p.b` @type ^`int`;
  #L40f9f2.  if v0 >= 0 then goto L40fa04;
  #L40f9f6.  v0:= v0 + -10000;
  #L40f9fa.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L40fa00.  v0:= 1I;
  #L40fa02.  goto L40fa10;
  #L40fa04.  v0:= v0 + 10000;
  #L40fa08.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L40fa0e.  v0:= 0I;
  #L40fa10.  call temp:= `deleteCharAt`(v1, v0) @signature `Ljava/lang/StringBuilder;.deleteCharAt:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L40fa16.  goto L40fa22;
  #L40fa18.  v0:= v3.`n.c.a.p.b` @type ^`int`;
  #L40fa1c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L40fa22.  v0:= v3.`n.c.a.p.c` @type ^`int`;
  #L40fa26.  v2:= 10I;
  #L40fa2a.  if v0 >= v2 then goto L40fa34;
  #L40fa2e.  v0:= "-0" @kind object;
  #L40fa32.  goto L40fa38;
  #L40fa34.  v0:= "-" @kind object;
  #L40fa38.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40fa3e.  v0:= v3.`n.c.a.p.c` @type ^`int`;
  #L40fa42.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L40fa48.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40fa4e.  v0:= temp @kind object;
  #L40fa50.  return v0 @kind object;
}
