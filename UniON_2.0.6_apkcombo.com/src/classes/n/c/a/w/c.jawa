record `n.c.a.w.c` @kind class @AccessFlag PUBLIC_ABSTRACT extends `n.c.a.x.e` @kind interface {
}
procedure `void` `<init>`(`n.c.a.w.c` v0 @kind this) @signature `Ln/c/a/w/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L423054.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42305a.  return @kind void;
}
procedure `java.lang.Object` `a`(`n.c.a.w.c` v1 @kind this, `n.c.a.x.k` v2 @kind object) @signature `Ln/c/a/w/c;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L422fa8.  call temp:= `g`() @signature `Ln/c/a/x/j;.g:()Ln/c/a/x/k;` @kind static;
  #L422fae.  v0:= temp @kind object;
  #L422fb0.  if v2 == v0 then goto L422fd8;
  #L422fb4.  call temp:= `a`() @signature `Ln/c/a/x/j;.a:()Ln/c/a/x/k;` @kind static;
  #L422fba.  v0:= temp @kind object;
  #L422fbc.  if v2 == v0 then goto L422fd8;
  #L422fc0.  call temp:= `e`() @signature `Ln/c/a/x/j;.e:()Ln/c/a/x/k;` @kind static;
  #L422fc6.  v0:= temp @kind object;
  #L422fc8.  if v2 != v0 then goto L422fce;
  #L422fcc.  goto L422fd8;
  #L422fce.  call temp:= `a`(v2, v1) @signature `Ln/c/a/x/k;.a:(Ln/c/a/x/e;)Ljava/lang/Object;` @kind interface;
  #L422fd4.  v2:= temp @kind object;
  #L422fd6.  return v2 @kind object;
  #L422fd8.  v2:= 0I;
  #L422fda.  return v2 @kind object;
}
procedure `n.c.a.x.n` `a`(`n.c.a.w.c` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/w/c;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L422fec.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L422ff0.  if v0 == 0 then goto L423038;
  #L422ff4.  call temp:= `b`(v3, v4) @signature `Ln/c/a/x/e;.b:(Ln/c/a/x/i;)Z` @kind interface;
  #L422ffa.  v0:= temp;
  #L422ffc.  if v0 == 0 then goto L42300a;
  #L423000.  call temp:= `h`(v4) @signature `Ln/c/a/x/i;.h:()Ln/c/a/x/n;` @kind interface;
  #L423006.  v4:= temp @kind object;
  #L423008.  return v4 @kind object;
  #L42300a.  v0:= new `n.c.a.x.m`;
  #L42300e.  v1:= new `java.lang.StringBuilder`;
  #L423012.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L423018.  v2:= "Unsupported field: " @kind object;
  #L42301c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L423022.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L423028.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42302e.  v4:= temp @kind object;
  #L423030.  call `<init>`(v0, v4) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L423036.  throw v0;
  #L423038.  call temp:= `c`(v4, v3) @signature `Ln/c/a/x/i;.c:(Ln/c/a/x/e;)Ln/c/a/x/n;` @kind interface;
  #L42303e.  v4:= temp @kind object;
  #L423040.  return v4 @kind object;
}
procedure `int` `c`(`n.c.a.w.c` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/w/c;.c:(Ln/c/a/x/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L422f7c.  call temp:= `a`(v3, v4) @signature `Ln/c/a/w/c;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @kind virtual;
  #L422f82.  v0:= temp @kind object;
  #L422f84.  call temp:= `d`(v3, v4) @signature `Ln/c/a/x/e;.d:(Ln/c/a/x/i;)J` @kind interface;
  #L422f8a.  v1:= temp @kind wide;
  #L422f8c.  call temp:= `a`(v0, v1, v4) @signature `Ln/c/a/x/n;.a:(JLn/c/a/x/i;)I` @kind virtual;
  #L422f92.  v4:= temp;
  #L422f94.  return v4;
}
