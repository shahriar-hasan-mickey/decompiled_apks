record `n.c.a.w.a` @kind class @AccessFlag PUBLIC_ABSTRACT extends `n.c.a.w.c` @kind class, `n.c.a.u.i` @kind interface {
}
procedure `void` `<init>`(`n.c.a.w.a` v0 @kind this) @signature `Ln/c/a/w/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L422f64.  call `<init>`(v0) @signature `Ln/c/a/w/c;.<init>:()V` @kind direct;
  #L422f6a.  return @kind void;
}
procedure `java.lang.Object` `a`(`n.c.a.w.a` v1 @kind this, `n.c.a.x.k` v2 @kind object) @signature `Ln/c/a/w/a;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L422e5c.  call temp:= `e`() @signature `Ln/c/a/x/j;.e:()Ln/c/a/x/k;` @kind static;
  #L422e62.  v0:= temp @kind object;
  #L422e64.  if v2 != v0 then goto L422e6e;
  #L422e68.  v2:= `@@n.c.a.x.b.q` @type ^`n.c.a.x.b` @kind object;
  #L422e6c.  return v2 @kind object;
  #L422e6e.  call temp:= `a`() @signature `Ln/c/a/x/j;.a:()Ln/c/a/x/k;` @kind static;
  #L422e74.  v0:= temp @kind object;
  #L422e76.  if v2 == v0 then goto L422ec2;
  #L422e7a.  call temp:= `f`() @signature `Ln/c/a/x/j;.f:()Ln/c/a/x/k;` @kind static;
  #L422e80.  v0:= temp @kind object;
  #L422e82.  if v2 == v0 then goto L422ec2;
  #L422e86.  call temp:= `g`() @signature `Ln/c/a/x/j;.g:()Ln/c/a/x/k;` @kind static;
  #L422e8c.  v0:= temp @kind object;
  #L422e8e.  if v2 == v0 then goto L422ec2;
  #L422e92.  call temp:= `d`() @signature `Ln/c/a/x/j;.d:()Ln/c/a/x/k;` @kind static;
  #L422e98.  v0:= temp @kind object;
  #L422e9a.  if v2 == v0 then goto L422ec2;
  #L422e9e.  call temp:= `b`() @signature `Ln/c/a/x/j;.b:()Ln/c/a/x/k;` @kind static;
  #L422ea4.  v0:= temp @kind object;
  #L422ea6.  if v2 == v0 then goto L422ec2;
  #L422eaa.  call temp:= `c`() @signature `Ln/c/a/x/j;.c:()Ln/c/a/x/k;` @kind static;
  #L422eb0.  v0:= temp @kind object;
  #L422eb2.  if v2 != v0 then goto L422eb8;
  #L422eb6.  goto L422ec2;
  #L422eb8.  call temp:= `a`(v2, v1) @signature `Ln/c/a/x/k;.a:(Ln/c/a/x/e;)Ljava/lang/Object;` @kind interface;
  #L422ebe.  v2:= temp @kind object;
  #L422ec0.  return v2 @kind object;
  #L422ec2.  v2:= 0I;
  #L422ec4.  return v2 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.w.a` v3 @kind this, `n.c.a.x.d` v4 @kind object) @signature `Ln/c/a/w/a;.a:(Ln/c/a/x/d;)Ln/c/a/x/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L422f3c.  v0:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L422f40.  call temp:= `getValue`(v3) @signature `Ln/c/a/u/i;.getValue:()I` @kind interface;
  #L422f46.  v1:= temp;
  #L422f48.  v1:= (`long`) v1 @kind i2l;
  #L422f4a.  call temp:= `a`(v4, v0, v1) @signature `Ln/c/a/x/d;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @kind interface;
  #L422f50.  v4:= temp @kind object;
  #L422f52.  return v4 @kind object;
}
procedure `boolean` `b`(`n.c.a.w.a` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/w/a;.b:(Ln/c/a/x/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L422de0.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L422de4.  v1:= 1I;
  #L422de6.  v2:= 0I;
  #L422de8.  if v0 == 0 then goto L422dfa;
  #L422dec.  v0:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L422df0.  if v4 != v0 then goto L422df6;
  #L422df4.  goto L422df8;
  #L422df6.  v1:= 0I;
  #L422df8.  return v1;
  #L422dfa.  if v4 == 0 then goto L422e0c;
  #L422dfe.  call temp:= `a`(v4, v3) @signature `Ln/c/a/x/i;.a:(Ln/c/a/x/e;)Z` @kind interface;
  #L422e04.  v4:= temp;
  #L422e06.  if v4 == 0 then goto L422e0c;
  #L422e0a.  goto L422e0e;
  #L422e0c.  v1:= 0I;
  #L422e0e.  return v1;
}
procedure `int` `c`(`n.c.a.w.a` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/w/a;.c:(Ln/c/a/x/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L422e20.  v0:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L422e24.  if v4 != v0 then goto L422e32;
  #L422e28.  call temp:= `getValue`(v3) @signature `Ln/c/a/u/i;.getValue:()I` @kind interface;
  #L422e2e.  v4:= temp;
  #L422e30.  return v4;
  #L422e32.  call temp:= `a`(v3, v4) @signature `Ln/c/a/w/c;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @kind virtual;
  #L422e38.  v0:= temp @kind object;
  #L422e3a.  call temp:= `d`(v3, v4) @signature `Ln/c/a/w/a;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L422e40.  v1:= temp @kind wide;
  #L422e42.  call temp:= `a`(v0, v1, v4) @signature `Ln/c/a/x/n;.a:(JLn/c/a/x/i;)I` @kind virtual;
  #L422e48.  v4:= temp;
  #L422e4a.  return v4;
}
procedure `long` `d`(`n.c.a.w.a` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/w/a;.d:(Ln/c/a/x/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L422ed8.  v0:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L422edc.  if v4 != v0 then goto L422eec;
  #L422ee0.  call temp:= `getValue`(v3) @signature `Ln/c/a/u/i;.getValue:()I` @kind interface;
  #L422ee6.  v4:= temp;
  #L422ee8.  v0:= (`long`) v4 @kind i2l;
  #L422eea.  return v0 @kind wide;
  #L422eec.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L422ef0.  if v0 != 0 then goto L422efe;
  #L422ef4.  call temp:= `b`(v4, v3) @signature `Ln/c/a/x/i;.b:(Ln/c/a/x/e;)J` @kind interface;
  #L422efa.  v0:= temp @kind wide;
  #L422efc.  return v0 @kind wide;
  #L422efe.  v0:= new `n.c.a.x.m`;
  #L422f02.  v1:= new `java.lang.StringBuilder`;
  #L422f06.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L422f0c.  v2:= "Unsupported field: " @kind object;
  #L422f10.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L422f16.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L422f1c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L422f22.  v4:= temp @kind object;
  #L422f24.  call `<init>`(v0, v4) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L422f2a.  throw v0;
}
