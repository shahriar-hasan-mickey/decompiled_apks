record `n.c.a.d` @kind class @AccessFlag PUBLIC_FINAL extends `n.c.a.x.h` @kind interface, `java.lang.Comparable` @kind interface, `java.io.Serializable` @kind interface {
  `long` `n.c.a.d.b` @AccessFlag PRIVATE_FINAL;
  `int` `n.c.a.d.c` @AccessFlag PRIVATE_FINAL;
}
global `n.c.a.d` `@@n.c.a.d.d` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/c/a/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L408574.  v0:= new `n.c.a.d`;
  #L408578.  v1:= 0L;
  #L40857c.  v3:= 0I;
  #L40857e.  call `<init>`(v0, v1, v3) @signature `Ln/c/a/d;.<init>:(JI)V` @kind direct;
  #L408584.  `@@n.c.a.d.d` @type ^`n.c.a.d` := v0 @kind object;
  #L408588.  v0:= 1000000000L;
  #L40858e.  call temp:= `valueOf`(v0) @signature `Ljava/math/BigInteger;.valueOf:(J)Ljava/math/BigInteger;` @kind static;
  #L408594.  v0:= "([-+]?)P(?:([-+]?[0-9]+)D)?(T(?:([-+]?[0-9]+)H)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)(?:[.,]([0-9]{0,9}))?S)?)?" @kind object;
  #L408598.  v1:= 2I;
  #L40859a.  call temp:= `compile`(v0, v1) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;` @kind static;
  #L4085a0.  return @kind void;
}
procedure `void` `<init>`(`n.c.a.d` v0 @kind this, `long` v1 , `int` v3 ) @signature `Ln/c/a/d;.<init>:(JI)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4085b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4085ba.  v0.`n.c.a.d.b` @type ^`long` := v1 @kind wide;
  #L4085be.  v0.`n.c.a.d.c` @type ^`int` := v3;
  #L4085c2.  return @kind void;
}
procedure `n.c.a.d` `a`(`long` v4 ) @signature `Ln/c/a/d;.a:(J)Ln/c/a/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40846c.  v0:= 1000000000L;
  #L408472.  v2:= v4 / v0 @kind long;
  #L408476.  v4:= v4 %% v0 @kind long;
  #L408478.  v5:= (`int`) v4 @kind l2i;
  #L40847a.  if v5 >= 0 then goto L40848c;
  #L40847e.  v4:= 1000000000I;
  #L408484.  v5:= v5 + v4 @kind int;
  #L408486.  v0:= 1L;
  #L40848a.  v2:= v2 - v0 @kind long;
  #L40848c.  call temp:= `a`(v2, v5) @signature `Ln/c/a/d;.a:(JI)Ln/c/a/d;` @kind static;
  #L408492.  v4:= temp @kind object;
  #L408494.  return v4 @kind object;
}
procedure `n.c.a.d` `a`(`long` v5 , `int` v7 ) @signature `Ln/c/a/d;.a:(JI)Ln/c/a/d;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L408438.  v0:= (`long`) v7 @kind i2l;
  #L40843a.  v0:= v0 ^| v5 @kind long;
  #L40843c.  v2:= 0L;
  #L408440.  v4:= lcmp(v0, v2);
  #L408444.  if v4 != 0 then goto L40844e;
  #L408448.  v5:= `@@n.c.a.d.d` @type ^`n.c.a.d` @kind object;
  #L40844c.  return v5 @kind object;
  #L40844e.  v0:= new `n.c.a.d`;
  #L408452.  call `<init>`(v0, v5, v7) @signature `Ln/c/a/d;.<init>:(JI)V` @kind direct;
  #L408458.  return v0 @kind object;
}
procedure `n.c.a.d` `a`(`long` v2 , `long` v4 ) @signature `Ln/c/a/d;.a:(JJ)Ln/c/a/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4084c4.  v0:= 1000000000L;
  #L4084ca.  call temp:= `b`(v4, v0) @signature `Ln/c/a/w/d;.b:(JJ)J` @kind static;
  #L4084d0.  v0:= temp @kind wide;
  #L4084d2.  call temp:= `d`(v2, v0) @signature `Ln/c/a/w/d;.d:(JJ)J` @kind static;
  #L4084d8.  v2:= temp @kind wide;
  #L4084da.  v0:= 1000000000I;
  #L4084e0.  call temp:= `a`(v4, v0) @signature `Ln/c/a/w/d;.a:(JI)I` @kind static;
  #L4084e6.  v4:= temp;
  #L4084e8.  call temp:= `a`(v2, v4) @signature `Ln/c/a/d;.a:(JI)Ln/c/a/d;` @kind static;
  #L4084ee.  v2:= temp @kind object;
  #L4084f0.  return v2 @kind object;
}
procedure `n.c.a.d` `a`(`java.io.DataInput` v4 @kind object) @signature `Ln/c/a/d;.a:(Ljava/io/DataInput;)Ln/c/a/d;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L408504.  call temp:= `readLong`(v4) @signature `Ljava/io/DataInput;.readLong:()J` @kind interface;
  #L40850a.  v0:= temp @kind wide;
  #L40850c.  call temp:= `readInt`(v4) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L408512.  v4:= temp;
  #L408514.  v2:= (`long`) v4 @kind i2l;
  #L408516.  call temp:= `a`(v0, v2) @signature `Ln/c/a/d;.a:(JJ)Ln/c/a/d;` @kind static;
  #L40851c.  v4:= temp @kind object;
  #L40851e.  return v4 @kind object;
}
procedure `n.c.a.d` `b`(`long` v1 ) @signature `Ln/c/a/d;.b:(J)Ln/c/a/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4084a8.  v0:= 0I;
  #L4084aa.  call temp:= `a`(v1, v0) @signature `Ln/c/a/d;.a:(JI)Ln/c/a/d;` @kind static;
  #L4084b0.  v1:= temp @kind object;
  #L4084b2.  return v1 @kind object;
}
procedure `java.lang.Object` `readResolve`(`n.c.a.d` v2 @kind this) @signature `Ln/c/a/d;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L408288.  v0:= new `java.io.InvalidObjectException`;
  #L40828c.  v1:= "Deserialization via serialization delegate" @kind object;
  #L408290.  call `<init>`(v0, v1) @signature `Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L408296.  throw v0;
}
procedure `java.lang.Object` `writeReplace`(`n.c.a.d` v2 @kind this) @signature `Ln/c/a/d;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4082a8.  v0:= new `n.c.a.n`;
  #L4082ac.  v1:= 1I;
  #L4082ae.  call `<init>`(v0, v1, v2) @signature `Ln/c/a/n;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L4082b4.  return v0 @kind object;
}
procedure `int` `a`(`n.c.a.d` v4 @kind this, `n.c.a.d` v5 @kind object) @signature `Ln/c/a/d;.a:(Ln/c/a/d;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L408228.  v0:= v4.`n.c.a.d.b` @type ^`long` @kind wide;
  #L40822c.  v2:= v5.`n.c.a.d.b` @type ^`long` @kind wide;
  #L408230.  call temp:= `a`(v0, v2) @signature `Ln/c/a/w/d;.a:(JJ)I` @kind static;
  #L408236.  v0:= temp;
  #L408238.  if v0 == 0 then goto L40823e;
  #L40823c.  return v0;
  #L40823e.  v0:= v4.`n.c.a.d.c` @type ^`int`;
  #L408242.  v5:= v5.`n.c.a.d.c` @type ^`int`;
  #L408246.  v0:= v0 - v5 @kind int;
  #L408248.  return v0;
}
procedure `n.c.a.x.d` `a`(`n.c.a.d` v5 @kind this, `n.c.a.x.d` v6 @kind object) @signature `Ln/c/a/d;.a:(Ln/c/a/x/d;)Ln/c/a/x/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L408530.  v0:= v5.`n.c.a.d.b` @type ^`long` @kind wide;
  #L408534.  v2:= 0L;
  #L408538.  v4:= lcmp(v0, v2);
  #L40853c.  if v4 == 0 then goto L40854c;
  #L408540.  v2:= `@@n.c.a.x.b.f` @type ^`n.c.a.x.b` @kind object;
  #L408544.  call temp:= `b`(v6, v0, v2) @signature `Ln/c/a/x/d;.b:(JLn/c/a/x/l;)Ln/c/a/x/d;` @kind interface;
  #L40854a.  v6:= temp @kind object;
  #L40854c.  v0:= v5.`n.c.a.d.c` @type ^`int`;
  #L408550.  if v0 == 0 then goto L408562;
  #L408554.  v0:= (`long`) v0 @kind i2l;
  #L408556.  v2:= `@@n.c.a.x.b.c` @type ^`n.c.a.x.b` @kind object;
  #L40855a.  call temp:= `b`(v6, v0, v2) @signature `Ln/c/a/x/d;.b:(JLn/c/a/x/l;)Ln/c/a/x/d;` @kind interface;
  #L408560.  v6:= temp @kind object;
  #L408562.  return v6 @kind object;
}
procedure `void` `a`(`n.c.a.d` v2 @kind this, `java.io.DataOutput` v3 @kind object) @signature `Ln/c/a/d;.a:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4085d4.  v0:= v2.`n.c.a.d.b` @type ^`long` @kind wide;
  #L4085d8.  call `writeLong`(v3, v0) @signature `Ljava/io/DataOutput;.writeLong:(J)V` @kind interface;
  #L4085de.  v0:= v2.`n.c.a.d.c` @type ^`int`;
  #L4085e2.  call `writeInt`(v3, v0) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L4085e8.  return @kind void;
}
procedure `long` `b`(`n.c.a.d` v2 @kind this) @signature `Ln/c/a/d;.b:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L408420.  v0:= v2.`n.c.a.d.b` @type ^`long` @kind wide;
  #L408424.  return v0 @kind wide;
}
procedure `int` `compareTo`(`n.c.a.d` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Ln/c/a/d;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L408208.  v1:= (`n.c.a.d`) v1 @kind object;
  #L40820c.  call temp:= `a`(v0, v1) @signature `Ln/c/a/d;.a:(Ln/c/a/d;)I` @kind virtual;
  #L408212.  v1:= temp;
  #L408214.  return v1;
}
procedure `boolean` `equals`(`n.c.a.d` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Ln/c/a/d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4081bc.  v0:= 1I;
  #L4081be.  if v7 != v8 then goto L4081c4;
  #L4081c2.  return v0;
  #L4081c4.  v1:= instanceof @variable v8 @type ^`n.c.a.d` @kind boolean;
  #L4081c8.  v2:= 0I;
  #L4081ca.  if v1 == 0 then goto L4081f4;
  #L4081ce.  v8:= (`n.c.a.d`) v8 @kind object;
  #L4081d2.  v3:= v7.`n.c.a.d.b` @type ^`long` @kind wide;
  #L4081d6.  v5:= v8.`n.c.a.d.b` @type ^`long` @kind wide;
  #L4081da.  v1:= lcmp(v3, v5);
  #L4081de.  if v1 != 0 then goto L4081f0;
  #L4081e2.  v1:= v7.`n.c.a.d.c` @type ^`int`;
  #L4081e6.  v8:= v8.`n.c.a.d.c` @type ^`int`;
  #L4081ea.  if v1 != v8 then goto L4081f0;
  #L4081ee.  goto L4081f2;
  #L4081f0.  v0:= 0I;
  #L4081f2.  return v0;
  #L4081f4.  return v2;
}
procedure `int` `hashCode`(`n.c.a.d` v4 @kind this) @signature `Ln/c/a/d;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40825c.  v0:= v4.`n.c.a.d.b` @type ^`long` @kind wide;
  #L408260.  v2:= 32I;
  #L408264.  v2:= v0 ^>> v2 @kind long;
  #L408268.  v0:= v0 ^~ v2 @kind long;
  #L40826a.  v1:= (`int`) v0 @kind l2i;
  #L40826c.  v0:= v4.`n.c.a.d.c` @type ^`int`;
  #L408270.  v0:= v0 * 51;
  #L408274.  v1:= v1 + v0 @kind int;
  #L408276.  return v1;
}
procedure `java.lang.String` `toString`(`n.c.a.d` v8 @kind this) @signature `Ln/c/a/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4082c8.  v0:= `@@n.c.a.d.d` @type ^`n.c.a.d` @kind object;
  #L4082cc.  if v8 != v0 then goto L4082d6;
  #L4082d0.  v0:= "PT0S" @kind object;
  #L4082d4.  return v0 @kind object;
  #L4082d6.  v0:= v8.`n.c.a.d.b` @type ^`long` @kind wide;
  #L4082da.  v2:= 3600L;
  #L4082de.  v4:= v0 / v2 @kind long;
  #L4082e2.  v2:= v0 %% v2 @kind long;
  #L4082e6.  v6:= 60L;
  #L4082ea.  v2:= v2 / v6 @kind long;
  #L4082ec.  v3:= (`int`) v2 @kind l2i;
  #L4082ee.  v0:= v0 %% v6 @kind long;
  #L4082f0.  v1:= (`int`) v0 @kind l2i;
  #L4082f2.  v0:= new `java.lang.StringBuilder`;
  #L4082f6.  v2:= 24I;
  #L4082fa.  call `<init>`(v0, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L408300.  v2:= "PT" @kind object;
  #L408304.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40830a.  v6:= 0L;
  #L40830e.  v2:= lcmp(v4, v6);
  #L408312.  if v2 == 0 then goto L408326;
  #L408316.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L40831c.  v2:= 72I;
  #L408320.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L408326.  if v3 == 0 then goto L40833a;
  #L40832a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L408330.  v2:= 77I;
  #L408334.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L40833a.  if v1 != 0 then goto L40835e;
  #L40833e.  v2:= v8.`n.c.a.d.c` @type ^`int`;
  #L408342.  if v2 != 0 then goto L40835e;
  #L408346.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L40834c.  v2:= temp;
  #L40834e.  v3:= 2I;
  #L408350.  if v2 <= v3 then goto L40835e;
  #L408354.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40835a.  v0:= temp @kind object;
  #L40835c.  return v0 @kind object;
  #L40835e.  if v1 >= 0 then goto L408388;
  #L408362.  v2:= v8.`n.c.a.d.c` @type ^`int`;
  #L408366.  if v2 <= 0 then goto L408388;
  #L40836a.  v2:= -1I;
  #L40836c.  if v1 != v2 then goto L40837c;
  #L408370.  v2:= "-0" @kind object;
  #L408374.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40837a.  goto L40838e;
  #L40837c.  v2:= v1 + 1;
  #L408380.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L408386.  goto L40838e;
  #L408388.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L40838e.  v2:= v8.`n.c.a.d.c` @type ^`int`;
  #L408392.  if v2 <= 0 then goto L4083fc;
  #L408396.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L40839c.  v2:= temp;
  #L40839e.  if v1 >= 0 then goto L4083b0;
  #L4083a2.  v1:= 2000000000I;
  #L4083a8.  v3:= v8.`n.c.a.d.c` @type ^`int`;
  #L4083ac.  v1:= v1 - v3 @kind int;
  #L4083ae.  goto L4083bc;
  #L4083b0.  v1:= v8.`n.c.a.d.c` @type ^`int`;
  #L4083b4.  v3:= 1000000000I;
  #L4083ba.  v1:= v1 + v3 @kind int;
  #L4083bc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4083c2.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L4083c8.  v1:= temp;
  #L4083ca.  v1:= v1 + -1;
  #L4083ce.  call temp:= `charAt`(v0, v1) @signature `Ljava/lang/StringBuilder;.charAt:(I)C` @kind virtual;
  #L4083d4.  v1:= temp;
  #L4083d6.  v3:= 48I;
  #L4083da.  if v1 != v3 then goto L4083f2;
  #L4083de.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L4083e4.  v1:= temp;
  #L4083e6.  v1:= v1 + -1;
  #L4083ea.  call `setLength`(v0, v1) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L4083f0.  goto L4083c2;
  #L4083f2.  v1:= 46I;
  #L4083f6.  call `setCharAt`(v0, v2, v1) @signature `Ljava/lang/StringBuilder;.setCharAt:(IC)V` @kind virtual;
  #L4083fc.  v1:= 83I;
  #L408400.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L408406.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40840c.  v0:= temp @kind object;
  #L40840e.  return v0 @kind object;
}
