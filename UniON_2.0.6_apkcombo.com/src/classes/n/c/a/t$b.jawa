record `n.c.a.t$b` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@n.c.a.t$b.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Ln/c/a/t$b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L411f34.  call temp:= `values`() @signature `Ln/c/a/x/a;.values:()[Ln/c/a/x/a;` @kind static;
  #L411f3a.  v0:= temp @kind object;
  #L411f3c.  v0:= length @variable v0;
  #L411f3e.  v0:= new `int`[v0];
  #L411f42.  `@@n.c.a.t$b.a` @type ^`int`[] := v0 @kind object;
  #L411f46.  v0:= `@@n.c.a.t$b.a` @type ^`int`[] @kind object;
  #L411f4a.  v1:= `@@n.c.a.x.a.F` @type ^`n.c.a.x.a` @kind object;
  #L411f4e.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L411f54.  v1:= temp;
  #L411f56.  v2:= 1I;
  #L411f58.  v0[v1]:= v2;
  #L411f5c.  v0:= `@@n.c.a.t$b.a` @type ^`int`[] @kind object;
  #L411f60.  v1:= `@@n.c.a.x.a.G` @type ^`n.c.a.x.a` @kind object;
  #L411f64.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L411f6a.  v1:= temp;
  #L411f6c.  v2:= 2I;
  #L411f6e.  v0[v1]:= v2;
  #L411f72.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L411f46..L411f5c] goto L411f5c;
  catch `java.lang.NoSuchFieldError` @[L411f5c..L411f72] goto L411f72;
}
