record `n.c.a.j$b` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@n.c.a.j$b.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Ln/c/a/j$b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L40cf64.  call temp:= `values`() @signature `Ln/c/a/x/a;.values:()[Ln/c/a/x/a;` @kind static;
  #L40cf6a.  v0:= temp @kind object;
  #L40cf6c.  v0:= length @variable v0;
  #L40cf6e.  v0:= new `int`[v0];
  #L40cf72.  `@@n.c.a.j$b.a` @type ^`int`[] := v0 @kind object;
  #L40cf76.  v0:= `@@n.c.a.j$b.a` @type ^`int`[] @kind object;
  #L40cf7a.  v1:= `@@n.c.a.x.a.v` @type ^`n.c.a.x.a` @kind object;
  #L40cf7e.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40cf84.  v1:= temp;
  #L40cf86.  v2:= 1I;
  #L40cf88.  v0[v1]:= v2;
  #L40cf8c.  v0:= `@@n.c.a.j$b.a` @type ^`int`[] @kind object;
  #L40cf90.  v1:= `@@n.c.a.x.a.A` @type ^`n.c.a.x.a` @kind object;
  #L40cf94.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40cf9a.  v1:= temp;
  #L40cf9c.  v2:= 2I;
  #L40cf9e.  v0[v1]:= v2;
  #L40cfa2.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L40cf76..L40cf8c] goto L40cf8c;
  catch `java.lang.NoSuchFieldError` @[L40cf8c..L40cfa2] goto L40cfa2;
}
