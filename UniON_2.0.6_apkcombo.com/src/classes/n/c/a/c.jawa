record `n.c.a.c` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `n.c.a.x.e` @kind interface, `n.c.a.x.f` @kind interface {
}
global `n.c.a.c` `@@n.c.a.c.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.c` `@@n.c.a.c.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.c` `@@n.c.a.c.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.c` `@@n.c.a.c.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.c` `@@n.c.a.c.f` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.c` `@@n.c.a.c.g` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.c` `@@n.c.a.c.h` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.c`[] `@@n.c.a.c.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `n.c.a.c`[] `@@n.c.a.c.j` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Ln/c/a/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L4080ac.  v0:= new `n.c.a.c`;
  #L4080b0.  v1:= 0I;
  #L4080b2.  v2:= "MONDAY" @kind object;
  #L4080b6.  call `<init>`(v0, v2, v1) @signature `Ln/c/a/c;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4080bc.  `@@n.c.a.c.b` @type ^`n.c.a.c` := v0 @kind object;
  #L4080c0.  v0:= new `n.c.a.c`;
  #L4080c4.  v2:= 1I;
  #L4080c6.  v3:= "TUESDAY" @kind object;
  #L4080ca.  call `<init>`(v0, v3, v2) @signature `Ln/c/a/c;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4080d0.  `@@n.c.a.c.c` @type ^`n.c.a.c` := v0 @kind object;
  #L4080d4.  v0:= new `n.c.a.c`;
  #L4080d8.  v3:= 2I;
  #L4080da.  v4:= "WEDNESDAY" @kind object;
  #L4080de.  call `<init>`(v0, v4, v3) @signature `Ln/c/a/c;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4080e4.  `@@n.c.a.c.d` @type ^`n.c.a.c` := v0 @kind object;
  #L4080e8.  v0:= new `n.c.a.c`;
  #L4080ec.  v4:= 3I;
  #L4080ee.  v5:= "THURSDAY" @kind object;
  #L4080f2.  call `<init>`(v0, v5, v4) @signature `Ln/c/a/c;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4080f8.  `@@n.c.a.c.e` @type ^`n.c.a.c` := v0 @kind object;
  #L4080fc.  v0:= new `n.c.a.c`;
  #L408100.  v5:= 4I;
  #L408102.  v6:= "FRIDAY" @kind object;
  #L408106.  call `<init>`(v0, v6, v5) @signature `Ln/c/a/c;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L40810c.  `@@n.c.a.c.f` @type ^`n.c.a.c` := v0 @kind object;
  #L408110.  v0:= new `n.c.a.c`;
  #L408114.  v6:= 5I;
  #L408116.  v7:= "SATURDAY" @kind object;
  #L40811a.  call `<init>`(v0, v7, v6) @signature `Ln/c/a/c;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L408120.  `@@n.c.a.c.g` @type ^`n.c.a.c` := v0 @kind object;
  #L408124.  v0:= new `n.c.a.c`;
  #L408128.  v7:= 6I;
  #L40812a.  v8:= "SUNDAY" @kind object;
  #L40812e.  call `<init>`(v0, v8, v7) @signature `Ln/c/a/c;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L408134.  `@@n.c.a.c.h` @type ^`n.c.a.c` := v0 @kind object;
  #L408138.  v0:= 7I;
  #L40813a.  v0:= new `n.c.a.c`[v0];
  #L40813e.  v8:= `@@n.c.a.c.b` @type ^`n.c.a.c` @kind object;
  #L408142.  v0[v1]:= v8 @kind object;
  #L408146.  v1:= `@@n.c.a.c.c` @type ^`n.c.a.c` @kind object;
  #L40814a.  v0[v2]:= v1 @kind object;
  #L40814e.  v1:= `@@n.c.a.c.d` @type ^`n.c.a.c` @kind object;
  #L408152.  v0[v3]:= v1 @kind object;
  #L408156.  v1:= `@@n.c.a.c.e` @type ^`n.c.a.c` @kind object;
  #L40815a.  v0[v4]:= v1 @kind object;
  #L40815e.  v1:= `@@n.c.a.c.f` @type ^`n.c.a.c` @kind object;
  #L408162.  v0[v5]:= v1 @kind object;
  #L408166.  v1:= `@@n.c.a.c.g` @type ^`n.c.a.c` @kind object;
  #L40816a.  v0[v6]:= v1 @kind object;
  #L40816e.  v1:= `@@n.c.a.c.h` @type ^`n.c.a.c` @kind object;
  #L408172.  v0[v7]:= v1 @kind object;
  #L408176.  `@@n.c.a.c.j` @type ^`n.c.a.c`[] := v0 @kind object;
  #L40817a.  v0:= new `n.c.a.c$a`;
  #L40817e.  call `<init>`(v0) @signature `Ln/c/a/c$a;.<init>:()V` @kind direct;
  #L408184.  call temp:= `values`() @signature `Ln/c/a/c;.values:()[Ln/c/a/c;` @kind static;
  #L40818a.  v0:= temp @kind object;
  #L40818c.  `@@n.c.a.c.i` @type ^`n.c.a.c`[] := v0 @kind object;
  #L408190.  return @kind void;
}
procedure `void` `<init>`(`n.c.a.c` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Ln/c/a/c;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L4081a4.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4081aa.  return @kind void;
}
procedure `n.c.a.c` `a`(`int` v3 ) @signature `Ln/c/a/c;.a:(I)Ln/c/a/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L407f80.  v0:= 1I;
  #L407f82.  if v3 < v0 then goto L407f98;
  #L407f86.  v1:= 7I;
  #L407f88.  if v3 > v1 then goto L407f98;
  #L407f8c.  v1:= `@@n.c.a.c.i` @type ^`n.c.a.c`[] @kind object;
  #L407f90.  v3:= v3 - v0 @kind int;
  #L407f92.  v3:= v1[v3] @kind object;
  #L407f96.  return v3 @kind object;
  #L407f98.  v0:= new `n.c.a.b`;
  #L407f9c.  v1:= new `java.lang.StringBuilder`;
  #L407fa0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L407fa6.  v2:= "Invalid value for DayOfWeek: " @kind object;
  #L407faa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L407fb0.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L407fb6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L407fbc.  v3:= temp @kind object;
  #L407fbe.  call `<init>`(v0, v3) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L407fc4.  throw v0;
}
procedure `n.c.a.c` `a`(`n.c.a.x.e` v4 @kind object) @signature `Ln/c/a/c;.a:(Ln/c/a/x/e;)Ln/c/a/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L407eec.  v0:= instanceof @variable v4 @type ^`n.c.a.c` @kind boolean;
  #L407ef0.  if v0 == 0 then goto L407efa;
  #L407ef4.  v4:= (`n.c.a.c`) v4 @kind object;
  #L407ef8.  return v4 @kind object;
  #L407efa.  v0:= `@@n.c.a.x.a.s` @type ^`n.c.a.x.a` @kind object;
  #L407efe.  call temp:= `c`(v4, v0) @signature `Ln/c/a/x/e;.c:(Ln/c/a/x/i;)I` @kind interface;
  #L407f04.  v0:= temp;
  #L407f06.  call temp:= `a`(v0) @signature `Ln/c/a/c;.a:(I)Ln/c/a/c;` @kind static;
  #L407f0c.  v4:= temp @kind object;
  #L407f0e.  return v4 @kind object;
  #L407f10.  v0:= Exception @type ^`n.c.a.b` @kind object;
  #L407f12.  v1:= new `n.c.a.b`;
  #L407f16.  v2:= new `java.lang.StringBuilder`;
  #L407f1a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L407f20.  v3:= "Unable to obtain DayOfWeek from TemporalAccessor: " @kind object;
  #L407f24.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L407f2a.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L407f30.  v3:= ", type " @kind object;
  #L407f34.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L407f3a.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L407f40.  v4:= temp @kind object;
  #L407f42.  call temp:= `getName`(v4) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L407f48.  v4:= temp @kind object;
  #L407f4a.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L407f50.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L407f56.  v4:= temp @kind object;
  #L407f58.  call `<init>`(v1, v4, v0) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L407f5e.  throw v1;
  catch `n.c.a.b` @[L407efa..L407f0e] goto L407f10;
}
procedure `n.c.a.c` `valueOf`(`java.lang.String` v1 @kind object) @signature `Ln/c/a/c;.valueOf:(Ljava/lang/String;)Ln/c/a/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L407fd8.  v0:= constclass @type ^`n.c.a.c` @kind object;
  #L407fdc.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L407fe2.  v1:= temp @kind object;
  #L407fe4.  v1:= (`n.c.a.c`) v1 @kind object;
  #L407fe8.  return v1 @kind object;
}
procedure `n.c.a.c`[] `values`() @signature `Ln/c/a/c;.values:()[Ln/c/a/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L407ffc.  v0:= `@@n.c.a.c.j` @type ^`n.c.a.c`[] @kind object;
  #L408000.  call temp:= `clone`(v0) @signature `[Ln/c/a/c;.clone:()Ljava/lang/Object;` @kind virtual;
  #L408006.  v0:= temp @kind object;
  #L408008.  v0:= (`n.c.a.c`[]) v0 @kind object;
  #L40800c.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`n.c.a.c` v1 @kind this, `n.c.a.x.k` v2 @kind object) @signature `Ln/c/a/c;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L407e0c.  call temp:= `e`() @signature `Ln/c/a/x/j;.e:()Ln/c/a/x/k;` @kind static;
  #L407e12.  v0:= temp @kind object;
  #L407e14.  if v2 != v0 then goto L407e1e;
  #L407e18.  v2:= `@@n.c.a.x.b.j` @type ^`n.c.a.x.b` @kind object;
  #L407e1c.  return v2 @kind object;
  #L407e1e.  call temp:= `b`() @signature `Ln/c/a/x/j;.b:()Ln/c/a/x/k;` @kind static;
  #L407e24.  v0:= temp @kind object;
  #L407e26.  if v2 == v0 then goto L407e72;
  #L407e2a.  call temp:= `c`() @signature `Ln/c/a/x/j;.c:()Ln/c/a/x/k;` @kind static;
  #L407e30.  v0:= temp @kind object;
  #L407e32.  if v2 == v0 then goto L407e72;
  #L407e36.  call temp:= `a`() @signature `Ln/c/a/x/j;.a:()Ln/c/a/x/k;` @kind static;
  #L407e3c.  v0:= temp @kind object;
  #L407e3e.  if v2 == v0 then goto L407e72;
  #L407e42.  call temp:= `f`() @signature `Ln/c/a/x/j;.f:()Ln/c/a/x/k;` @kind static;
  #L407e48.  v0:= temp @kind object;
  #L407e4a.  if v2 == v0 then goto L407e72;
  #L407e4e.  call temp:= `g`() @signature `Ln/c/a/x/j;.g:()Ln/c/a/x/k;` @kind static;
  #L407e54.  v0:= temp @kind object;
  #L407e56.  if v2 == v0 then goto L407e72;
  #L407e5a.  call temp:= `d`() @signature `Ln/c/a/x/j;.d:()Ln/c/a/x/k;` @kind static;
  #L407e60.  v0:= temp @kind object;
  #L407e62.  if v2 != v0 then goto L407e68;
  #L407e66.  goto L407e72;
  #L407e68.  call temp:= `a`(v2, v1) @signature `Ln/c/a/x/k;.a:(Ln/c/a/x/e;)Ljava/lang/Object;` @kind interface;
  #L407e6e.  v2:= temp @kind object;
  #L407e70.  return v2 @kind object;
  #L407e72.  v2:= 0I;
  #L407e74.  return v2 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.c` v3 @kind this, `n.c.a.x.d` v4 @kind object) @signature `Ln/c/a/c;.a:(Ln/c/a/x/d;)Ln/c/a/x/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L408020.  v0:= `@@n.c.a.x.a.s` @type ^`n.c.a.x.a` @kind object;
  #L408024.  call temp:= `getValue`(v3) @signature `Ln/c/a/c;.getValue:()I` @kind virtual;
  #L40802a.  v1:= temp;
  #L40802c.  v1:= (`long`) v1 @kind i2l;
  #L40802e.  call temp:= `a`(v4, v0, v1) @signature `Ln/c/a/x/d;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @kind interface;
  #L408034.  v4:= temp @kind object;
  #L408036.  return v4 @kind object;
}
procedure `n.c.a.x.n` `a`(`n.c.a.c` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/c;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L408048.  v0:= `@@n.c.a.x.a.s` @type ^`n.c.a.x.a` @kind object;
  #L40804c.  if v4 != v0 then goto L40805a;
  #L408050.  call temp:= `h`(v4) @signature `Ln/c/a/x/i;.h:()Ln/c/a/x/n;` @kind interface;
  #L408056.  v4:= temp @kind object;
  #L408058.  return v4 @kind object;
  #L40805a.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L40805e.  if v0 != 0 then goto L40806c;
  #L408062.  call temp:= `c`(v4, v3) @signature `Ln/c/a/x/i;.c:(Ln/c/a/x/e;)Ln/c/a/x/n;` @kind interface;
  #L408068.  v4:= temp @kind object;
  #L40806a.  return v4 @kind object;
  #L40806c.  v0:= new `n.c.a.x.m`;
  #L408070.  v1:= new `java.lang.StringBuilder`;
  #L408074.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40807a.  v2:= "Unsupported field: " @kind object;
  #L40807e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L408084.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40808a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L408090.  v4:= temp @kind object;
  #L408092.  call `<init>`(v0, v4) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L408098.  throw v0;
}
procedure `boolean` `b`(`n.c.a.c` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/c;.b:(Ln/c/a/x/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L407d70.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L407d74.  v1:= 1I;
  #L407d76.  v2:= 0I;
  #L407d78.  if v0 == 0 then goto L407d8a;
  #L407d7c.  v0:= `@@n.c.a.x.a.s` @type ^`n.c.a.x.a` @kind object;
  #L407d80.  if v4 != v0 then goto L407d86;
  #L407d84.  goto L407d88;
  #L407d86.  v1:= 0I;
  #L407d88.  return v1;
  #L407d8a.  if v4 == 0 then goto L407d9c;
  #L407d8e.  call temp:= `a`(v4, v3) @signature `Ln/c/a/x/i;.a:(Ln/c/a/x/e;)Z` @kind interface;
  #L407d94.  v4:= temp;
  #L407d96.  if v4 == 0 then goto L407d9c;
  #L407d9a.  goto L407d9e;
  #L407d9c.  v1:= 0I;
  #L407d9e.  return v1;
}
procedure `int` `c`(`n.c.a.c` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/c;.c:(Ln/c/a/x/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L407db0.  v0:= `@@n.c.a.x.a.s` @type ^`n.c.a.x.a` @kind object;
  #L407db4.  if v4 != v0 then goto L407dc2;
  #L407db8.  call temp:= `getValue`(v3) @signature `Ln/c/a/c;.getValue:()I` @kind virtual;
  #L407dbe.  v4:= temp;
  #L407dc0.  return v4;
  #L407dc2.  call temp:= `a`(v3, v4) @signature `Ln/c/a/c;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @kind virtual;
  #L407dc8.  v0:= temp @kind object;
  #L407dca.  call temp:= `d`(v3, v4) @signature `Ln/c/a/c;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L407dd0.  v1:= temp @kind wide;
  #L407dd2.  call temp:= `a`(v0, v1, v4) @signature `Ln/c/a/x/n;.a:(JLn/c/a/x/i;)I` @kind virtual;
  #L407dd8.  v4:= temp;
  #L407dda.  return v4;
}
procedure `long` `d`(`n.c.a.c` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/c;.d:(Ln/c/a/x/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L407e88.  v0:= `@@n.c.a.x.a.s` @type ^`n.c.a.x.a` @kind object;
  #L407e8c.  if v4 != v0 then goto L407e9c;
  #L407e90.  call temp:= `getValue`(v3) @signature `Ln/c/a/c;.getValue:()I` @kind virtual;
  #L407e96.  v4:= temp;
  #L407e98.  v0:= (`long`) v4 @kind i2l;
  #L407e9a.  return v0 @kind wide;
  #L407e9c.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L407ea0.  if v0 != 0 then goto L407eae;
  #L407ea4.  call temp:= `b`(v4, v3) @signature `Ln/c/a/x/i;.b:(Ln/c/a/x/e;)J` @kind interface;
  #L407eaa.  v0:= temp @kind wide;
  #L407eac.  return v0 @kind wide;
  #L407eae.  v0:= new `n.c.a.x.m`;
  #L407eb2.  v1:= new `java.lang.StringBuilder`;
  #L407eb6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L407ebc.  v2:= "Unsupported field: " @kind object;
  #L407ec0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L407ec6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L407ecc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L407ed2.  v4:= temp @kind object;
  #L407ed4.  call `<init>`(v0, v4) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L407eda.  throw v0;
}
procedure `int` `getValue`(`n.c.a.c` v1 @kind this) @signature `Ln/c/a/c;.getValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L407dec.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L407df2.  v0:= temp;
  #L407df4.  v0:= v0 + 1;
  #L407df8.  return v0;
}
