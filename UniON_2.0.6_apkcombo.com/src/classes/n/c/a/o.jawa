record `n.c.a.o` @kind class @AccessFlag PUBLIC_FINAL extends `n.c.a.w.c` @kind class, `n.c.a.x.d` @kind interface, `n.c.a.x.f` @kind interface, `java.lang.Comparable` @kind interface, `java.io.Serializable` @kind interface {
  `int` `n.c.a.o.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<clinit>`() @signature `Ln/c/a/o;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4108fc.  v0:= new `n.c.a.o$a`;
  #L410900.  call `<init>`(v0) @signature `Ln/c/a/o$a;.<init>:()V` @kind direct;
  #L410906.  v0:= new `n.c.a.v.c`;
  #L41090a.  call `<init>`(v0) @signature `Ln/c/a/v/c;.<init>:()V` @kind direct;
  #L410910.  v1:= `@@n.c.a.x.a.D` @type ^`n.c.a.x.a` @kind object;
  #L410914.  v2:= `@@n.c.a.v.j.f` @type ^`n.c.a.v.j` @kind object;
  #L410918.  v3:= 4I;
  #L41091a.  v4:= 10I;
  #L41091e.  call temp:= `a`(v0, v1, v3, v4, v2) @signature `Ln/c/a/v/c;.a:(Ln/c/a/x/i;IILn/c/a/v/j;)Ln/c/a/v/c;` @kind virtual;
  #L410924.  call temp:= `i`(v0) @signature `Ln/c/a/v/c;.i:()Ln/c/a/v/b;` @kind virtual;
  #L41092a.  return @kind void;
}
procedure `void` `<init>`(`n.c.a.o` v0 @kind this, `int` v1 ) @signature `Ln/c/a/o;.<init>:(I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L41093c.  call `<init>`(v0) @signature `Ln/c/a/w/c;.<init>:()V` @kind direct;
  #L410942.  v0.`n.c.a.o.b` @type ^`int` := v1;
  #L410946.  return @kind void;
}
procedure `n.c.a.o` `a`(`int` v3 ) @signature `Ln/c/a/o;.a:(I)Ln/c/a/o;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L410588.  v0:= `@@n.c.a.x.a.D` @type ^`n.c.a.x.a` @kind object;
  #L41058c.  v1:= (`long`) v3 @kind i2l;
  #L41058e.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L410594.  v0:= new `n.c.a.o`;
  #L410598.  call `<init>`(v0, v3) @signature `Ln/c/a/o;.<init>:(I)V` @kind direct;
  #L41059e.  return v0 @kind object;
}
procedure `n.c.a.o` `a`(`java.io.DataInput` v0 @kind object) @signature `Ln/c/a/o;.a:(Ljava/io/DataInput;)Ln/c/a/o;` @AccessFlag STATIC {
    temp;

  #L4106e0.  call temp:= `readInt`(v0) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L4106e6.  v0:= temp;
  #L4106e8.  call temp:= `a`(v0) @signature `Ln/c/a/o;.a:(I)Ln/c/a/o;` @kind static;
  #L4106ee.  v0:= temp @kind object;
  #L4106f0.  return v0 @kind object;
}
procedure `n.c.a.o` `a`(`n.c.a.x.e` v3 @kind object) @signature `Ln/c/a/o;.a:(Ln/c/a/x/e;)Ln/c/a/o;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L41048c.  v0:= instanceof @variable v3 @type ^`n.c.a.o` @kind boolean;
  #L410490.  if v0 == 0 then goto L41049a;
  #L410494.  v3:= (`n.c.a.o`) v3 @kind object;
  #L410498.  return v3 @kind object;
  #L41049a.  v0:= `@@n.c.a.u.m.d` @type ^`n.c.a.u.m` @kind object;
  #L41049e.  call temp:= `c`(v3) @signature `Ln/c/a/u/h;.c:(Ln/c/a/x/e;)Ln/c/a/u/h;` @kind static;
  #L4104a4.  v1:= temp @kind object;
  #L4104a6.  call temp:= `equals`(v0, v1) @signature `Ln/c/a/u/h;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4104ac.  v0:= temp;
  #L4104ae.  if v0 != 0 then goto L4104ba;
  #L4104b2.  call temp:= `a`(v3) @signature `Ln/c/a/f;.a:(Ln/c/a/x/e;)Ln/c/a/f;` @kind static;
  #L4104b8.  v3:= temp @kind object;
  #L4104ba.  v0:= `@@n.c.a.x.a.D` @type ^`n.c.a.x.a` @kind object;
  #L4104be.  call temp:= `c`(v3, v0) @signature `Ln/c/a/x/e;.c:(Ln/c/a/x/i;)I` @kind interface;
  #L4104c4.  v0:= temp;
  #L4104c6.  call temp:= `a`(v0) @signature `Ln/c/a/o;.a:(I)Ln/c/a/o;` @kind static;
  #L4104cc.  v3:= temp @kind object;
  #L4104ce.  return v3 @kind object;
  #L4104d0.  v0:= new `n.c.a.b`;
  #L4104d4.  v1:= new `java.lang.StringBuilder`;
  #L4104d8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4104de.  v2:= "Unable to obtain Year from TemporalAccessor: " @kind object;
  #L4104e2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4104e8.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4104ee.  v2:= ", type " @kind object;
  #L4104f2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4104f8.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4104fe.  v3:= temp @kind object;
  #L410500.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L410506.  v3:= temp @kind object;
  #L410508.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41050e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L410514.  v3:= temp @kind object;
  #L410516.  call `<init>`(v0, v3) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41051c.  throw v0;
  catch `n.c.a.b` @[L41049a..L4104ce] goto L4104d0;
}
procedure `boolean` `b`(`long` v5 ) @signature `Ln/c/a/o;.b:(J)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4101f4.  v0:= 3L;
  #L4101f8.  v0:= v0 ^& v5 @kind long;
  #L4101fa.  v2:= 0L;
  #L4101fe.  v4:= lcmp(v0, v2);
  #L410202.  if v4 != 0 then goto L410228;
  #L410206.  v0:= 100L;
  #L41020a.  v0:= v5 %% v0 @kind long;
  #L41020e.  v4:= lcmp(v0, v2);
  #L410212.  if v4 != 0 then goto L410224;
  #L410216.  v0:= 400L;
  #L41021a.  v5:= v5 %% v0 @kind long;
  #L41021c.  v0:= lcmp(v5, v2);
  #L410220.  if v0 != 0 then goto L410228;
  #L410224.  v5:= 1I;
  #L410226.  goto L41022a;
  #L410228.  v5:= 0I;
  #L41022a.  return v5;
}
procedure `java.lang.Object` `readResolve`(`n.c.a.o` v2 @kind this) @signature `Ln/c/a/o;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L41038c.  v0:= new `java.io.InvalidObjectException`;
  #L410390.  v1:= "Deserialization via serialization delegate" @kind object;
  #L410394.  call `<init>`(v0, v1) @signature `Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41039a.  throw v0;
}
procedure `java.lang.Object` `writeReplace`(`n.c.a.o` v2 @kind this) @signature `Ln/c/a/o;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4103ac.  v0:= new `n.c.a.n`;
  #L4103b0.  v1:= 67I;
  #L4103b4.  call `<init>`(v0, v1, v2) @signature `Ln/c/a/n;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L4103ba.  return v0 @kind object;
}
procedure `int` `a`(`n.c.a.o` v1 @kind this, `n.c.a.o` v2 @kind object) @signature `Ln/c/a/o;.a:(Ln/c/a/o;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4102ac.  v0:= v1.`n.c.a.o.b` @type ^`int`;
  #L4102b0.  v2:= v2.`n.c.a.o.b` @type ^`int`;
  #L4102b4.  v0:= v0 - v2 @kind int;
  #L4102b6.  return v0;
}
procedure `java.lang.Object` `a`(`n.c.a.o` v1 @kind this, `n.c.a.x.k` v2 @kind object) @signature `Ln/c/a/o;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41030c.  call temp:= `a`() @signature `Ln/c/a/x/j;.a:()Ln/c/a/x/k;` @kind static;
  #L410312.  v0:= temp @kind object;
  #L410314.  if v2 != v0 then goto L41031e;
  #L410318.  v2:= `@@n.c.a.u.m.d` @type ^`n.c.a.u.m` @kind object;
  #L41031c.  return v2 @kind object;
  #L41031e.  call temp:= `e`() @signature `Ln/c/a/x/j;.e:()Ln/c/a/x/k;` @kind static;
  #L410324.  v0:= temp @kind object;
  #L410326.  if v2 != v0 then goto L410330;
  #L41032a.  v2:= `@@n.c.a.x.b.m` @type ^`n.c.a.x.b` @kind object;
  #L41032e.  return v2 @kind object;
  #L410330.  call temp:= `b`() @signature `Ln/c/a/x/j;.b:()Ln/c/a/x/k;` @kind static;
  #L410336.  v0:= temp @kind object;
  #L410338.  if v2 == v0 then goto L410378;
  #L41033c.  call temp:= `c`() @signature `Ln/c/a/x/j;.c:()Ln/c/a/x/k;` @kind static;
  #L410342.  v0:= temp @kind object;
  #L410344.  if v2 == v0 then goto L410378;
  #L410348.  call temp:= `f`() @signature `Ln/c/a/x/j;.f:()Ln/c/a/x/k;` @kind static;
  #L41034e.  v0:= temp @kind object;
  #L410350.  if v2 == v0 then goto L410378;
  #L410354.  call temp:= `g`() @signature `Ln/c/a/x/j;.g:()Ln/c/a/x/k;` @kind static;
  #L41035a.  v0:= temp @kind object;
  #L41035c.  if v2 == v0 then goto L410378;
  #L410360.  call temp:= `d`() @signature `Ln/c/a/x/j;.d:()Ln/c/a/x/k;` @kind static;
  #L410366.  v0:= temp @kind object;
  #L410368.  if v2 != v0 then goto L41036e;
  #L41036c.  goto L410378;
  #L41036e.  call temp:= `a`(v1, v2) @signature `Ln/c/a/w/c;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @kind super;
  #L410374.  v2:= temp @kind object;
  #L410376.  return v2 @kind object;
  #L410378.  v2:= 0I;
  #L41037a.  return v2 @kind object;
}
procedure `n.c.a.o` `a`(`n.c.a.o` v3 @kind this, `long` v4 ) @signature `Ln/c/a/o;.a:(J)Ln/c/a/o;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4106a4.  v0:= 0L;
  #L4106a8.  v2:= lcmp(v4, v0);
  #L4106ac.  if v2 != 0 then goto L4106b2;
  #L4106b0.  return v3 @kind object;
  #L4106b2.  v0:= `@@n.c.a.x.a.D` @type ^`n.c.a.x.a` @kind object;
  #L4106b6.  v1:= v3.`n.c.a.o.b` @type ^`int`;
  #L4106ba.  v1:= (`long`) v1 @kind i2l;
  #L4106bc.  v1:= v1 + v4 @kind long;
  #L4106be.  call temp:= `a`(v0, v1) @signature `Ln/c/a/x/a;.a:(J)I` @kind virtual;
  #L4106c4.  v4:= temp;
  #L4106c6.  call temp:= `a`(v4) @signature `Ln/c/a/o;.a:(I)Ln/c/a/o;` @kind static;
  #L4106cc.  v4:= temp @kind object;
  #L4106ce.  return v4 @kind object;
}
procedure `n.c.a.o` `a`(`n.c.a.o` v3 @kind this, `long` v4 , `n.c.a.x.l` v6 @kind object) @signature `Ln/c/a/o;.a:(JLn/c/a/x/l;)Ln/c/a/o;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L410540.  v0:= -9223372036854775808L;
  #L410544.  v2:= lcmp(v4, v0);
  #L410548.  if v2 != 0 then goto L41056c;
  #L41054c.  v4:= 9223372036854775807L;
  #L410556.  call temp:= `b`(v3, v4, v6) @signature `Ln/c/a/o;.b:(JLn/c/a/x/l;)Ln/c/a/o;` @kind virtual;
  #L41055c.  v4:= temp @kind object;
  #L41055e.  v0:= 1L;
  #L410562.  call temp:= `b`(v4, v0, v6) @signature `Ln/c/a/o;.b:(JLn/c/a/x/l;)Ln/c/a/o;` @kind virtual;
  #L410568.  v4:= temp @kind object;
  #L41056a.  goto L410576;
  #L41056c.  v4:= -v4 @kind long;
  #L41056e.  call temp:= `b`(v3, v4, v6) @signature `Ln/c/a/o;.b:(JLn/c/a/x/l;)Ln/c/a/o;` @kind virtual;
  #L410574.  v4:= temp @kind object;
  #L410576.  return v4 @kind object;
}
procedure `n.c.a.o` `a`(`n.c.a.o` v0 @kind this, `n.c.a.x.f` v1 @kind object) @signature `Ln/c/a/o;.a:(Ln/c/a/x/f;)Ln/c/a/o;` @AccessFlag PUBLIC {
    temp;

  #L410704.  call temp:= `a`(v1, v0) @signature `Ln/c/a/x/f;.a:(Ln/c/a/x/d;)Ln/c/a/x/d;` @kind interface;
  #L41070a.  v1:= temp @kind object;
  #L41070c.  v1:= (`n.c.a.o`) v1 @kind object;
  #L410710.  return v1 @kind object;
}
procedure `n.c.a.o` `a`(`n.c.a.o` v4 @kind this, `n.c.a.x.i` v5 @kind object, `long` v6 ) @signature `Ln/c/a/o;.a:(Ln/c/a/x/i;J)Ln/c/a/o;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L410724.  v0:= instanceof @variable v5 @type ^`n.c.a.x.a` @kind boolean;
  #L410728.  if v0 == 0 then goto L4107d8;
  #L41072c.  v0:= v5 @kind object;
  #L41072e.  v0:= (`n.c.a.x.a`) v0 @kind object;
  #L410732.  call temp:= `b`(v0, v6) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L410738.  v1:= `@@n.c.a.o$b.a` @type ^`int`[] @kind object;
  #L41073c.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L410742.  v0:= temp;
  #L410744.  v0:= v1[v0];
  #L410748.  v1:= 1I;
  #L41074a.  if v0 == v1 then goto L4107bc;
  #L41074e.  v2:= 2I;
  #L410750.  if v0 == v2 then goto L4107b0;
  #L410754.  v2:= 3I;
  #L410756.  if v0 != v2 then goto L410782;
  #L41075a.  v5:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L41075e.  call temp:= `d`(v4, v5) @signature `Ln/c/a/o;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L410764.  v2:= temp @kind wide;
  #L410766.  v5:= lcmp(v2, v6);
  #L41076a.  if v5 != 0 then goto L410772;
  #L41076e.  v5:= v4 @kind object;
  #L410770.  goto L410780;
  #L410772.  v5:= v4.`n.c.a.o.b` @type ^`int`;
  #L410776.  v1:= v1 - v5 @kind int;
  #L410778.  call temp:= `a`(v1) @signature `Ln/c/a/o;.a:(I)Ln/c/a/o;` @kind static;
  #L41077e.  v5:= temp @kind object;
  #L410780.  return v5 @kind object;
  #L410782.  v6:= new `n.c.a.x.m`;
  #L410786.  v7:= new `java.lang.StringBuilder`;
  #L41078a.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L410790.  v0:= "Unsupported field: " @kind object;
  #L410794.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41079a.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4107a0.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4107a6.  v5:= temp @kind object;
  #L4107a8.  call `<init>`(v6, v5) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4107ae.  throw v6;
  #L4107b0.  v5:= (`int`) v6 @kind l2i;
  #L4107b2.  call temp:= `a`(v5) @signature `Ln/c/a/o;.a:(I)Ln/c/a/o;` @kind static;
  #L4107b8.  v5:= temp @kind object;
  #L4107ba.  return v5 @kind object;
  #L4107bc.  v5:= v4.`n.c.a.o.b` @type ^`int`;
  #L4107c0.  if v5 >= v1 then goto L4107cc;
  #L4107c4.  v0:= 1L;
  #L4107c8.  v6:= v0 - v6 @kind long;
  #L4107cc.  v5:= (`int`) v6 @kind l2i;
  #L4107ce.  call temp:= `a`(v5) @signature `Ln/c/a/o;.a:(I)Ln/c/a/o;` @kind static;
  #L4107d4.  v5:= temp @kind object;
  #L4107d6.  return v5 @kind object;
  #L4107d8.  call temp:= `a`(v5, v4, v6) @signature `Ln/c/a/x/i;.a:(Ln/c/a/x/d;J)Ln/c/a/x/d;` @kind interface;
  #L4107de.  v5:= temp @kind object;
  #L4107e0.  v5:= (`n.c.a.o`) v5 @kind object;
  #L4107e4.  return v5 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.o` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/o;.a:(JLn/c/a/x/l;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L410844.  call temp:= `a`(v0, v1, v3) @signature `Ln/c/a/o;.a:(JLn/c/a/x/l;)Ln/c/a/o;` @kind virtual;
  #L41084a.  v1:= temp @kind object;
  #L41084c.  return v1 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.o` v3 @kind this, `n.c.a.x.d` v4 @kind object) @signature `Ln/c/a/o;.a:(Ln/c/a/x/d;)Ln/c/a/x/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4107f8.  call temp:= `c`(v4) @signature `Ln/c/a/u/h;.c:(Ln/c/a/x/e;)Ln/c/a/u/h;` @kind static;
  #L4107fe.  v0:= temp @kind object;
  #L410800.  v1:= `@@n.c.a.u.m.d` @type ^`n.c.a.u.m` @kind object;
  #L410804.  call temp:= `equals`(v0, v1) @signature `Ln/c/a/u/h;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L41080a.  v0:= temp;
  #L41080c.  if v0 == 0 then goto L410824;
  #L410810.  v0:= `@@n.c.a.x.a.D` @type ^`n.c.a.x.a` @kind object;
  #L410814.  v1:= v3.`n.c.a.o.b` @type ^`int`;
  #L410818.  v1:= (`long`) v1 @kind i2l;
  #L41081a.  call temp:= `a`(v4, v0, v1) @signature `Ln/c/a/x/d;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @kind interface;
  #L410820.  v4:= temp @kind object;
  #L410822.  return v4 @kind object;
  #L410824.  v4:= new `n.c.a.b`;
  #L410828.  v0:= "Adjustment only supported on ISO date-time" @kind object;
  #L41082c.  call `<init>`(v4, v0) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L410832.  throw v4;
}
procedure `n.c.a.x.d` `a`(`n.c.a.o` v0 @kind this, `n.c.a.x.f` v1 @kind object) @signature `Ln/c/a/o;.a:(Ln/c/a/x/f;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L41087c.  call temp:= `a`(v0, v1) @signature `Ln/c/a/o;.a:(Ln/c/a/x/f;)Ln/c/a/o;` @kind virtual;
  #L410882.  v1:= temp @kind object;
  #L410884.  return v1 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.o` v0 @kind this, `n.c.a.x.i` v1 @kind object, `long` v2 ) @signature `Ln/c/a/o;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L410898.  call temp:= `a`(v0, v1, v2) @signature `Ln/c/a/o;.a:(Ln/c/a/x/i;J)Ln/c/a/o;` @kind virtual;
  #L41089e.  v1:= temp @kind object;
  #L4108a0.  return v1 @kind object;
}
procedure `n.c.a.x.n` `a`(`n.c.a.o` v4 @kind this, `n.c.a.x.i` v5 @kind object) @signature `Ln/c/a/o;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4108b4.  v0:= `@@n.c.a.x.a.C` @type ^`n.c.a.x.a` @kind object;
  #L4108b8.  if v5 != v0 then goto L4108e0;
  #L4108bc.  v5:= v4.`n.c.a.o.b` @type ^`int`;
  #L4108c0.  v0:= 1L;
  #L4108c4.  if v5 > 0 then goto L4108d0;
  #L4108c8.  v2:= 1000000000L;
  #L4108ce.  goto L4108d6;
  #L4108d0.  v2:= 999999999L;
  #L4108d6.  call temp:= `a`(v0, v2) @signature `Ln/c/a/x/n;.a:(JJ)Ln/c/a/x/n;` @kind static;
  #L4108dc.  v5:= temp @kind object;
  #L4108de.  return v5 @kind object;
  #L4108e0.  call temp:= `a`(v4, v5) @signature `Ln/c/a/w/c;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @kind super;
  #L4108e6.  v5:= temp @kind object;
  #L4108e8.  return v5 @kind object;
}
procedure `void` `a`(`n.c.a.o` v1 @kind this, `java.io.DataOutput` v2 @kind object) @signature `Ln/c/a/o;.a:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L410958.  v0:= v1.`n.c.a.o.b` @type ^`int`;
  #L41095c.  call `writeInt`(v2, v0) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L410962.  return @kind void;
}
procedure `n.c.a.o` `b`(`n.c.a.o` v2 @kind this, `long` v3 , `n.c.a.x.l` v5 @kind object) @signature `Ln/c/a/o;.b:(JLn/c/a/x/l;)Ln/c/a/o;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4105b0.  v0:= instanceof @variable v5 @type ^`n.c.a.x.b` @kind boolean;
  #L4105b4.  if v0 == 0 then goto L410684;
  #L4105b8.  v0:= `@@n.c.a.o$b.b` @type ^`int`[] @kind object;
  #L4105bc.  v1:= v5 @kind object;
  #L4105be.  v1:= (`n.c.a.x.b`) v1 @kind object;
  #L4105c2.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4105c8.  v1:= temp;
  #L4105ca.  v0:= v0[v1];
  #L4105ce.  v1:= 1I;
  #L4105d0.  if v0 == v1 then goto L41067a;
  #L4105d4.  v1:= 2I;
  #L4105d6.  if v0 == v1 then goto L410664;
  #L4105da.  v1:= 3I;
  #L4105dc.  if v0 == v1 then goto L41064e;
  #L4105e0.  v1:= 4I;
  #L4105e2.  if v0 == v1 then goto L410638;
  #L4105e6.  v1:= 5I;
  #L4105e8.  if v0 != v1 then goto L41060a;
  #L4105ec.  v5:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L4105f0.  call temp:= `d`(v2, v5) @signature `Ln/c/a/o;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L4105f6.  v0:= temp @kind wide;
  #L4105f8.  call temp:= `d`(v0, v3) @signature `Ln/c/a/w/d;.d:(JJ)J` @kind static;
  #L4105fe.  v3:= temp @kind wide;
  #L410600.  call temp:= `a`(v2, v5, v3) @signature `Ln/c/a/o;.a:(Ln/c/a/x/i;J)Ln/c/a/o;` @kind virtual;
  #L410606.  v3:= temp @kind object;
  #L410608.  return v3 @kind object;
  #L41060a.  v3:= new `n.c.a.x.m`;
  #L41060e.  v4:= new `java.lang.StringBuilder`;
  #L410612.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L410618.  v0:= "Unsupported unit: " @kind object;
  #L41061c.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L410622.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L410628.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L41062e.  v4:= temp @kind object;
  #L410630.  call `<init>`(v3, v4) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L410636.  throw v3;
  #L410638.  v5:= 1000I;
  #L41063c.  call temp:= `b`(v3, v5) @signature `Ln/c/a/w/d;.b:(JI)J` @kind static;
  #L410642.  v3:= temp @kind wide;
  #L410644.  call temp:= `a`(v2, v3) @signature `Ln/c/a/o;.a:(J)Ln/c/a/o;` @kind virtual;
  #L41064a.  v3:= temp @kind object;
  #L41064c.  return v3 @kind object;
  #L41064e.  v5:= 100I;
  #L410652.  call temp:= `b`(v3, v5) @signature `Ln/c/a/w/d;.b:(JI)J` @kind static;
  #L410658.  v3:= temp @kind wide;
  #L41065a.  call temp:= `a`(v2, v3) @signature `Ln/c/a/o;.a:(J)Ln/c/a/o;` @kind virtual;
  #L410660.  v3:= temp @kind object;
  #L410662.  return v3 @kind object;
  #L410664.  v5:= 10I;
  #L410668.  call temp:= `b`(v3, v5) @signature `Ln/c/a/w/d;.b:(JI)J` @kind static;
  #L41066e.  v3:= temp @kind wide;
  #L410670.  call temp:= `a`(v2, v3) @signature `Ln/c/a/o;.a:(J)Ln/c/a/o;` @kind virtual;
  #L410676.  v3:= temp @kind object;
  #L410678.  return v3 @kind object;
  #L41067a.  call temp:= `a`(v2, v3) @signature `Ln/c/a/o;.a:(J)Ln/c/a/o;` @kind virtual;
  #L410680.  v3:= temp @kind object;
  #L410682.  return v3 @kind object;
  #L410684.  call temp:= `a`(v5, v2, v3) @signature `Ln/c/a/x/l;.a:(Ln/c/a/x/d;J)Ln/c/a/x/d;` @kind interface;
  #L41068a.  v3:= temp @kind object;
  #L41068c.  v3:= (`n.c.a.o`) v3 @kind object;
  #L410690.  return v3 @kind object;
}
procedure `n.c.a.x.d` `b`(`n.c.a.o` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/o;.b:(JLn/c/a/x/l;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L410860.  call temp:= `b`(v0, v1, v3) @signature `Ln/c/a/o;.b:(JLn/c/a/x/l;)Ln/c/a/o;` @kind virtual;
  #L410866.  v1:= temp @kind object;
  #L410868.  return v1 @kind object;
}
procedure `boolean` `b`(`n.c.a.o` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/o;.b:(Ln/c/a/x/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L41023c.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L410240.  v1:= 1I;
  #L410242.  v2:= 0I;
  #L410244.  if v0 == 0 then goto L410266;
  #L410248.  v0:= `@@n.c.a.x.a.D` @type ^`n.c.a.x.a` @kind object;
  #L41024c.  if v4 == v0 then goto L410264;
  #L410250.  v0:= `@@n.c.a.x.a.C` @type ^`n.c.a.x.a` @kind object;
  #L410254.  if v4 == v0 then goto L410264;
  #L410258.  v0:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L41025c.  if v4 != v0 then goto L410262;
  #L410260.  goto L410264;
  #L410262.  v1:= 0I;
  #L410264.  return v1;
  #L410266.  if v4 == 0 then goto L410278;
  #L41026a.  call temp:= `a`(v4, v3) @signature `Ln/c/a/x/i;.a:(Ln/c/a/x/e;)Z` @kind interface;
  #L410270.  v4:= temp;
  #L410272.  if v4 == 0 then goto L410278;
  #L410276.  goto L41027a;
  #L410278.  v1:= 0I;
  #L41027a.  return v1;
}
procedure `int` `c`(`n.c.a.o` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/o;.c:(Ln/c/a/x/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4102c8.  call temp:= `a`(v3, v4) @signature `Ln/c/a/o;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @kind virtual;
  #L4102ce.  v0:= temp @kind object;
  #L4102d0.  call temp:= `d`(v3, v4) @signature `Ln/c/a/o;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L4102d6.  v1:= temp @kind wide;
  #L4102d8.  call temp:= `a`(v0, v1, v4) @signature `Ln/c/a/x/n;.a:(JLn/c/a/x/i;)I` @kind virtual;
  #L4102de.  v4:= temp;
  #L4102e0.  return v4;
}
procedure `int` `compareTo`(`n.c.a.o` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Ln/c/a/o;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L41028c.  v1:= (`n.c.a.o`) v1 @kind object;
  #L410290.  call temp:= `a`(v0, v1) @signature `Ln/c/a/o;.a:(Ln/c/a/o;)I` @kind virtual;
  #L410296.  v1:= temp;
  #L410298.  return v1;
}
procedure `long` `d`(`n.c.a.o` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/o;.d:(Ln/c/a/x/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4103ec.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L4103f0.  if v0 == 0 then goto L410470;
  #L4103f4.  v0:= `@@n.c.a.o$b.a` @type ^`int`[] @kind object;
  #L4103f8.  v1:= v4 @kind object;
  #L4103fa.  v1:= (`n.c.a.x.a`) v1 @kind object;
  #L4103fe.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L410404.  v1:= temp;
  #L410406.  v0:= v0[v1];
  #L41040a.  v1:= 1I;
  #L41040c.  if v0 == v1 then goto L410460;
  #L410410.  v2:= 2I;
  #L410412.  if v0 == v2 then goto L410458;
  #L410416.  v2:= 3I;
  #L410418.  if v0 != v2 then goto L41042a;
  #L41041c.  v4:= v3.`n.c.a.o.b` @type ^`int`;
  #L410420.  if v4 >= v1 then goto L410426;
  #L410424.  v1:= 0I;
  #L410426.  v0:= (`long`) v1 @kind i2l;
  #L410428.  return v0 @kind wide;
  #L41042a.  v0:= new `n.c.a.x.m`;
  #L41042e.  v1:= new `java.lang.StringBuilder`;
  #L410432.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L410438.  v2:= "Unsupported field: " @kind object;
  #L41043c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L410442.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L410448.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L41044e.  v4:= temp @kind object;
  #L410450.  call `<init>`(v0, v4) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L410456.  throw v0;
  #L410458.  v4:= v3.`n.c.a.o.b` @type ^`int`;
  #L41045c.  v0:= (`long`) v4 @kind i2l;
  #L41045e.  return v0 @kind wide;
  #L410460.  v4:= v3.`n.c.a.o.b` @type ^`int`;
  #L410464.  if v4 >= v1 then goto L41046c;
  #L410468.  v4:= v4 - 1;
  #L41046c.  v0:= (`long`) v4 @kind i2l;
  #L41046e.  return v0 @kind wide;
  #L410470.  call temp:= `b`(v4, v3) @signature `Ln/c/a/x/i;.b:(Ln/c/a/x/e;)J` @kind interface;
  #L410476.  v0:= temp @kind wide;
  #L410478.  return v0 @kind wide;
}
procedure `boolean` `equals`(`n.c.a.o` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Ln/c/a/o;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4101b8.  v0:= 1I;
  #L4101ba.  if v3 != v4 then goto L4101c0;
  #L4101be.  return v0;
  #L4101c0.  v1:= instanceof @variable v4 @type ^`n.c.a.o` @kind boolean;
  #L4101c4.  v2:= 0I;
  #L4101c6.  if v1 == 0 then goto L4101e0;
  #L4101ca.  v1:= v3.`n.c.a.o.b` @type ^`int`;
  #L4101ce.  v4:= (`n.c.a.o`) v4 @kind object;
  #L4101d2.  v4:= v4.`n.c.a.o.b` @type ^`int`;
  #L4101d6.  if v1 != v4 then goto L4101dc;
  #L4101da.  goto L4101de;
  #L4101dc.  v0:= 0I;
  #L4101de.  return v0;
  #L4101e0.  return v2;
}
procedure `int` `hashCode`(`n.c.a.o` v1 @kind this) @signature `Ln/c/a/o;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4102f4.  v0:= v1.`n.c.a.o.b` @type ^`int`;
  #L4102f8.  return v0;
}
procedure `java.lang.String` `toString`(`n.c.a.o` v1 @kind this) @signature `Ln/c/a/o;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4103cc.  v0:= v1.`n.c.a.o.b` @type ^`int`;
  #L4103d0.  call temp:= `toString`(v0) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L4103d6.  v0:= temp @kind object;
  #L4103d8.  return v0 @kind object;
}
