record `n.c.a.x.c$c` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class, `n.c.a.x.l` @kind interface {
  `java.lang.String` `n.c.a.x.c$c.b` @AccessFlag PRIVATE_FINAL;
}
global `n.c.a.x.c$c` `@@n.c.a.x.c$c.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.x.c$c` `@@n.c.a.x.c$c.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.x.c$c`[] `@@n.c.a.x.c$c.e` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Ln/c/a/x/c$c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4251b8.  v0:= new `n.c.a.x.c$c`;
  #L4251bc.  v1:= 31556952L;
  #L4251c2.  call temp:= `b`(v1) @signature `Ln/c/a/d;.b:(J)Ln/c/a/d;` @kind static;
  #L4251c8.  v1:= temp @kind object;
  #L4251ca.  v2:= 0I;
  #L4251cc.  v3:= "WEEK_BASED_YEARS" @kind object;
  #L4251d0.  v4:= "WeekBasedYears" @kind object;
  #L4251d4.  call `<init>`(v0, v3, v2, v4, v1) @signature `Ln/c/a/x/c$c;.<init>:(Ljava/lang/String;ILjava/lang/String;Ln/c/a/d;)V` @kind direct;
  #L4251da.  `@@n.c.a.x.c$c.c` @type ^`n.c.a.x.c$c` := v0 @kind object;
  #L4251de.  v0:= new `n.c.a.x.c$c`;
  #L4251e2.  v3:= 7889238L;
  #L4251e8.  call temp:= `b`(v3) @signature `Ln/c/a/d;.b:(J)Ln/c/a/d;` @kind static;
  #L4251ee.  v1:= temp @kind object;
  #L4251f0.  v3:= 1I;
  #L4251f2.  v4:= "QUARTER_YEARS" @kind object;
  #L4251f6.  v5:= "QuarterYears" @kind object;
  #L4251fa.  call `<init>`(v0, v4, v3, v5, v1) @signature `Ln/c/a/x/c$c;.<init>:(Ljava/lang/String;ILjava/lang/String;Ln/c/a/d;)V` @kind direct;
  #L425200.  `@@n.c.a.x.c$c.d` @type ^`n.c.a.x.c$c` := v0 @kind object;
  #L425204.  v0:= 2I;
  #L425206.  v0:= new `n.c.a.x.c$c`[v0];
  #L42520a.  v1:= `@@n.c.a.x.c$c.c` @type ^`n.c.a.x.c$c` @kind object;
  #L42520e.  v0[v2]:= v1 @kind object;
  #L425212.  v1:= `@@n.c.a.x.c$c.d` @type ^`n.c.a.x.c$c` @kind object;
  #L425216.  v0[v3]:= v1 @kind object;
  #L42521a.  `@@n.c.a.x.c$c.e` @type ^`n.c.a.x.c$c`[] := v0 @kind object;
  #L42521e.  return @kind void;
}
procedure `void` `<init>`(`n.c.a.x.c$c` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object, `n.c.a.d` v4 @kind object) @signature `Ln/c/a/x/c$c;.<init>:(Ljava/lang/String;ILjava/lang/String;Ln/c/a/d;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L425230.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L425236.  v0.`n.c.a.x.c$c.b` @type ^`java.lang.String` := v3 @kind object;
  #L42523a.  return @kind void;
}
procedure `n.c.a.x.c$c` `valueOf`(`java.lang.String` v1 @kind object) @signature `Ln/c/a/x/c$c;.valueOf:(Ljava/lang/String;)Ln/c/a/x/c$c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4250e4.  v0:= constclass @type ^`n.c.a.x.c$c` @kind object;
  #L4250e8.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L4250ee.  v1:= temp @kind object;
  #L4250f0.  v1:= (`n.c.a.x.c$c`) v1 @kind object;
  #L4250f4.  return v1 @kind object;
}
procedure `n.c.a.x.c$c`[] `values`() @signature `Ln/c/a/x/c$c;.values:()[Ln/c/a/x/c$c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L425108.  v0:= `@@n.c.a.x.c$c.e` @type ^`n.c.a.x.c$c`[] @kind object;
  #L42510c.  call temp:= `clone`(v0) @signature `[Ln/c/a/x/c$c;.clone:()Ljava/lang/Object;` @kind virtual;
  #L425112.  v0:= temp @kind object;
  #L425114.  v0:= (`n.c.a.x.c$c`[]) v0 @kind object;
  #L425118.  return v0 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.x.c$c` v5 @kind this, `n.c.a.x.d` v6 @kind object, `long` v7 ) @signature `Ln/c/a/x/c$c;.a:(Ln/c/a/x/d;J)Ln/c/a/x/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L42512c.  v0:= `@@n.c.a.x.c$a.a` @type ^`int`[] @kind object;
  #L425130.  call temp:= `ordinal`(v5) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L425136.  v1:= temp;
  #L425138.  v0:= v0[v1];
  #L42513c.  v1:= 1I;
  #L42513e.  if v0 == v1 then goto L425184;
  #L425142.  v1:= 2I;
  #L425144.  if v0 != v1 then goto L425174;
  #L425148.  v0:= 256L;
  #L42514c.  v2:= v7 / v0 @kind long;
  #L425150.  v4:= `@@n.c.a.x.b.m` @type ^`n.c.a.x.b` @kind object;
  #L425154.  call temp:= `b`(v6, v2, v4) @signature `Ln/c/a/x/d;.b:(JLn/c/a/x/l;)Ln/c/a/x/d;` @kind interface;
  #L42515a.  v6:= temp @kind object;
  #L42515c.  v7:= v7 %% v0 @kind long;
  #L42515e.  v0:= 3L;
  #L425162.  v7:= v7 * v0 @kind long;
  #L425166.  v0:= `@@n.c.a.x.b.l` @type ^`n.c.a.x.b` @kind object;
  #L42516a.  call temp:= `b`(v6, v7, v0) @signature `Ln/c/a/x/d;.b:(JLn/c/a/x/l;)Ln/c/a/x/d;` @kind interface;
  #L425170.  v6:= temp @kind object;
  #L425172.  return v6 @kind object;
  #L425174.  v6:= new `java.lang.IllegalStateException`;
  #L425178.  v7:= "Unreachable" @kind object;
  #L42517c.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L425182.  throw v6;
  #L425184.  v0:= `@@n.c.a.x.c.c` @type ^`n.c.a.x.i` @kind object;
  #L425188.  call temp:= `c`(v6, v0) @signature `Ln/c/a/x/e;.c:(Ln/c/a/x/i;)I` @kind interface;
  #L42518e.  v0:= temp;
  #L425190.  v0:= (`long`) v0 @kind i2l;
  #L425192.  call temp:= `d`(v0, v7) @signature `Ln/c/a/w/d;.d:(JJ)J` @kind static;
  #L425198.  v7:= temp @kind wide;
  #L42519a.  v0:= `@@n.c.a.x.c.c` @type ^`n.c.a.x.i` @kind object;
  #L42519e.  call temp:= `a`(v6, v0, v7) @signature `Ln/c/a/x/d;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @kind interface;
  #L4251a4.  v6:= temp @kind object;
  #L4251a6.  return v6 @kind object;
}
procedure `boolean` `b`(`n.c.a.x.c$c` v1 @kind this) @signature `Ln/c/a/x/c$c;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4250b8.  v0:= 1I;
  #L4250ba.  return v0;
}
procedure `java.lang.String` `toString`(`n.c.a.x.c$c` v1 @kind this) @signature `Ln/c/a/x/c$c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4250cc.  v0:= v1.`n.c.a.x.c$c.b` @type ^`java.lang.String` @kind object;
  #L4250d0.  return v0 @kind object;
}
