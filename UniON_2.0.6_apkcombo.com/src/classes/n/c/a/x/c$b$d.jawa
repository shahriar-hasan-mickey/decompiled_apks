record `n.c.a.x.c$b$d` @kind class @AccessFlag FINAL_ENUM extends `n.c.a.x.c$b` @kind class {
}
procedure `void` `<init>`(`n.c.a.x.c$b$d` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Ln/c/a/x/c$b$d;.<init>:(Ljava/lang/String;I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L424cac.  v0:= 0I;
  #L424cae.  call `<init>`(v1, v2, v3, v0) @signature `Ln/c/a/x/c$b;.<init>:(Ljava/lang/String;ILn/c/a/x/c$a;)V` @kind direct;
  #L424cb4.  return @kind void;
}
procedure `n.c.a.x.d` `a`(`n.c.a.x.c$b$d` v3 @kind this, `n.c.a.x.d` v4 @kind object, `long` v5 ) @signature `Ln/c/a/x/c$b$d;.a:(Ln/c/a/x/d;J)Ln/c/a/x/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L424bbc.  call temp:= `a`(v3, v4) @signature `Ln/c/a/x/c$b$d;.a:(Ln/c/a/x/e;)Z` @kind virtual;
  #L424bc2.  v0:= temp;
  #L424bc4.  if v0 == 0 then goto L424c4a;
  #L424bc8.  call temp:= `h`(v3) @signature `Ln/c/a/x/c$b$d;.h:()Ln/c/a/x/n;` @kind virtual;
  #L424bce.  v0:= temp @kind object;
  #L424bd0.  v1:= `@@n.c.a.x.c$b.e` @type ^`n.c.a.x.c$b` @kind object;
  #L424bd4.  call temp:= `a`(v0, v5, v1) @signature `Ln/c/a/x/n;.a:(JLn/c/a/x/i;)I` @kind virtual;
  #L424bda.  v5:= temp;
  #L424bdc.  call temp:= `a`(v4) @signature `Ln/c/a/f;.a:(Ln/c/a/x/e;)Ln/c/a/f;` @kind static;
  #L424be2.  v6:= temp @kind object;
  #L424be4.  v0:= `@@n.c.a.x.a.s` @type ^`n.c.a.x.a` @kind object;
  #L424be8.  call temp:= `c`(v6, v0) @signature `Ln/c/a/f;.c:(Ln/c/a/x/i;)I` @kind virtual;
  #L424bee.  v0:= temp;
  #L424bf0.  call temp:= `b`(v6) @signature `Ln/c/a/x/c$b;.b:(Ln/c/a/f;)I` @kind static;
  #L424bf6.  v6:= temp;
  #L424bf8.  v1:= 53I;
  #L424bfc.  v2:= 52I;
  #L424c00.  if v6 != v1 then goto L424c14;
  #L424c04.  call temp:= `a`(v5) @signature `Ln/c/a/x/c$b;.a:(I)I` @kind static;
  #L424c0a.  v1:= temp;
  #L424c0c.  if v1 != v2 then goto L424c14;
  #L424c10.  v6:= 52I;
  #L424c14.  v1:= 4I;
  #L424c16.  v2:= 1I;
  #L424c18.  call temp:= `a`(v5, v2, v1) @signature `Ln/c/a/f;.a:(III)Ln/c/a/f;` @kind static;
  #L424c1e.  v5:= temp @kind object;
  #L424c20.  v1:= `@@n.c.a.x.a.s` @type ^`n.c.a.x.a` @kind object;
  #L424c24.  call temp:= `c`(v5, v1) @signature `Ln/c/a/f;.c:(Ln/c/a/x/i;)I` @kind virtual;
  #L424c2a.  v1:= temp;
  #L424c2c.  v0:= v0 - v1 @kind int;
  #L424c2e.  v6:= v6 - v2 @kind int;
  #L424c30.  v6:= v6 * 7;
  #L424c34.  v0:= v0 + v6 @kind int;
  #L424c36.  v0:= (`long`) v0 @kind i2l;
  #L424c38.  call temp:= `c`(v5, v0) @signature `Ln/c/a/f;.c:(J)Ln/c/a/f;` @kind virtual;
  #L424c3e.  v5:= temp @kind object;
  #L424c40.  call temp:= `a`(v4, v5) @signature `Ln/c/a/x/d;.a:(Ln/c/a/x/f;)Ln/c/a/x/d;` @kind interface;
  #L424c46.  v4:= temp @kind object;
  #L424c48.  return v4 @kind object;
  #L424c4a.  v4:= new `n.c.a.x.m`;
  #L424c4e.  v5:= "Unsupported field: WeekBasedYear" @kind object;
  #L424c52.  call `<init>`(v4, v5) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L424c58.  throw v4;
}
procedure `boolean` `a`(`n.c.a.x.c$b$d` v1 @kind this, `n.c.a.x.e` v2 @kind object) @signature `Ln/c/a/x/c$b$d;.a:(Ln/c/a/x/e;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L424b30.  v0:= `@@n.c.a.x.a.x` @type ^`n.c.a.x.a` @kind object;
  #L424b34.  call temp:= `b`(v2, v0) @signature `Ln/c/a/x/e;.b:(Ln/c/a/x/i;)Z` @kind interface;
  #L424b3a.  v0:= temp;
  #L424b3c.  if v0 == 0 then goto L424b50;
  #L424b40.  call temp:= `d`(v2) @signature `Ln/c/a/x/c$b;.d:(Ln/c/a/x/e;)Z` @kind static;
  #L424b46.  v2:= temp;
  #L424b48.  if v2 == 0 then goto L424b50;
  #L424b4c.  v2:= 1I;
  #L424b4e.  goto L424b52;
  #L424b50.  v2:= 0I;
  #L424b52.  return v2;
}
procedure `long` `b`(`n.c.a.x.c$b$d` v2 @kind this, `n.c.a.x.e` v3 @kind object) @signature `Ln/c/a/x/c$b$d;.b:(Ln/c/a/x/e;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L424b7c.  call temp:= `b`(v3, v2) @signature `Ln/c/a/x/e;.b:(Ln/c/a/x/i;)Z` @kind interface;
  #L424b82.  v0:= temp;
  #L424b84.  if v0 == 0 then goto L424b9c;
  #L424b88.  call temp:= `a`(v3) @signature `Ln/c/a/f;.a:(Ln/c/a/x/e;)Ln/c/a/f;` @kind static;
  #L424b8e.  v3:= temp @kind object;
  #L424b90.  call temp:= `c`(v3) @signature `Ln/c/a/x/c$b;.c:(Ln/c/a/f;)I` @kind static;
  #L424b96.  v3:= temp;
  #L424b98.  v0:= (`long`) v3 @kind i2l;
  #L424b9a.  return v0 @kind wide;
  #L424b9c.  v3:= new `n.c.a.x.m`;
  #L424ba0.  v0:= "Unsupported field: WeekBasedYear" @kind object;
  #L424ba4.  call `<init>`(v3, v0) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L424baa.  throw v3;
}
procedure `n.c.a.x.n` `c`(`n.c.a.x.c$b$d` v0 @kind this, `n.c.a.x.e` v1 @kind object) @signature `Ln/c/a/x/c$b$d;.c:(Ln/c/a/x/e;)Ln/c/a/x/n;` @AccessFlag PUBLIC {
    temp;

  #L424c8c.  v1:= `@@n.c.a.x.a.D` @type ^`n.c.a.x.a` @kind object;
  #L424c90.  call temp:= `h`(v1) @signature `Ln/c/a/x/a;.h:()Ln/c/a/x/n;` @kind virtual;
  #L424c96.  v1:= temp @kind object;
  #L424c98.  return v1 @kind object;
}
procedure `n.c.a.x.n` `h`(`n.c.a.x.c$b$d` v1 @kind this) @signature `Ln/c/a/x/c$b$d;.h:()Ln/c/a/x/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L424c6c.  v0:= `@@n.c.a.x.a.D` @type ^`n.c.a.x.a` @kind object;
  #L424c70.  call temp:= `h`(v0) @signature `Ln/c/a/x/a;.h:()Ln/c/a/x/n;` @kind virtual;
  #L424c76.  v0:= temp @kind object;
  #L424c78.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`n.c.a.x.c$b$d` v1 @kind this) @signature `Ln/c/a/x/c$b$d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L424b64.  v0:= "WeekBasedYear" @kind object;
  #L424b68.  return v0 @kind object;
}
