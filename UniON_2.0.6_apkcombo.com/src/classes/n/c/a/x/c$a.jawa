record `n.c.a.x.c$a` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@n.c.a.x.c$a.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Ln/c/a/x/c$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L424338.  call temp:= `values`() @signature `Ln/c/a/x/c$c;.values:()[Ln/c/a/x/c$c;` @kind static;
  #L42433e.  v0:= temp @kind object;
  #L424340.  v0:= length @variable v0;
  #L424342.  v0:= new `int`[v0];
  #L424346.  `@@n.c.a.x.c$a.a` @type ^`int`[] := v0 @kind object;
  #L42434a.  v0:= `@@n.c.a.x.c$a.a` @type ^`int`[] @kind object;
  #L42434e.  v1:= `@@n.c.a.x.c$c.c` @type ^`n.c.a.x.c$c` @kind object;
  #L424352.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L424358.  v1:= temp;
  #L42435a.  v2:= 1I;
  #L42435c.  v0[v1]:= v2;
  #L424360.  v0:= `@@n.c.a.x.c$a.a` @type ^`int`[] @kind object;
  #L424364.  v1:= `@@n.c.a.x.c$c.d` @type ^`n.c.a.x.c$c` @kind object;
  #L424368.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L42436e.  v1:= temp;
  #L424370.  v2:= 2I;
  #L424372.  v0[v1]:= v2;
  #L424376.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L42434a..L424360] goto L424360;
  catch `java.lang.NoSuchFieldError` @[L424360..L424376] goto L424376;
}
