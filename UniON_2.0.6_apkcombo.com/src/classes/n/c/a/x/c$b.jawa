record `n.c.a.x.c$b` @kind class @AccessFlag ABSTRACT_ENUM extends `java.lang.Enum` @kind class, `n.c.a.x.i` @kind interface {
}
global `n.c.a.x.c$b` `@@n.c.a.x.c$b.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.x.c$b` `@@n.c.a.x.c$b.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.x.c$b` `@@n.c.a.x.c$b.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.x.c$b` `@@n.c.a.x.c$b.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `int`[] `@@n.c.a.x.c$b.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `n.c.a.x.c$b`[] `@@n.c.a.x.c$b.g` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Ln/c/a/x/c$b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L424fc0.  v0:= new `n.c.a.x.c$b$a`;
  #L424fc4.  v1:= 0I;
  #L424fc6.  v2:= "DAY_OF_QUARTER" @kind object;
  #L424fca.  call `<init>`(v0, v2, v1) @signature `Ln/c/a/x/c$b$a;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L424fd0.  `@@n.c.a.x.c$b.b` @type ^`n.c.a.x.c$b` := v0 @kind object;
  #L424fd4.  v0:= new `n.c.a.x.c$b$b`;
  #L424fd8.  v2:= 1I;
  #L424fda.  v3:= "QUARTER_OF_YEAR" @kind object;
  #L424fde.  call `<init>`(v0, v3, v2) @signature `Ln/c/a/x/c$b$b;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L424fe4.  `@@n.c.a.x.c$b.c` @type ^`n.c.a.x.c$b` := v0 @kind object;
  #L424fe8.  v0:= new `n.c.a.x.c$b$c`;
  #L424fec.  v3:= 2I;
  #L424fee.  v4:= "WEEK_OF_WEEK_BASED_YEAR" @kind object;
  #L424ff2.  call `<init>`(v0, v4, v3) @signature `Ln/c/a/x/c$b$c;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L424ff8.  `@@n.c.a.x.c$b.d` @type ^`n.c.a.x.c$b` := v0 @kind object;
  #L424ffc.  v0:= new `n.c.a.x.c$b$d`;
  #L425000.  v4:= 3I;
  #L425002.  v5:= "WEEK_BASED_YEAR" @kind object;
  #L425006.  call `<init>`(v0, v5, v4) @signature `Ln/c/a/x/c$b$d;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L42500c.  `@@n.c.a.x.c$b.e` @type ^`n.c.a.x.c$b` := v0 @kind object;
  #L425010.  v0:= 4I;
  #L425012.  v0:= new `n.c.a.x.c$b`[v0];
  #L425016.  v5:= `@@n.c.a.x.c$b.b` @type ^`n.c.a.x.c$b` @kind object;
  #L42501a.  v0[v1]:= v5 @kind object;
  #L42501e.  v1:= `@@n.c.a.x.c$b.c` @type ^`n.c.a.x.c$b` @kind object;
  #L425022.  v0[v2]:= v1 @kind object;
  #L425026.  v1:= `@@n.c.a.x.c$b.d` @type ^`n.c.a.x.c$b` @kind object;
  #L42502a.  v0[v3]:= v1 @kind object;
  #L42502e.  v1:= `@@n.c.a.x.c$b.e` @type ^`n.c.a.x.c$b` @kind object;
  #L425032.  v0[v4]:= v1 @kind object;
  #L425036.  `@@n.c.a.x.c$b.g` @type ^`n.c.a.x.c$b`[] := v0 @kind object;
  #L42503a.  v0:= 8I;
  #L42503e.  v0:= new `int`[v0];
  #L425042.  goto L425050;
  #L425048.  `@@n.c.a.x.c$b.f` @type ^`int`[] := v0 @kind object;
  #L42504c.  return @kind void;
  #L42504e.  
  #L425050.  v0:= (0I, 90I, 181I, 273I, 0I, 91I, 182I, 274I) @kind object;
  #L425077.  goto L425048;
}
procedure `void` `<init>`(`n.c.a.x.c$b` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Ln/c/a/x/c$b;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L425088.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L42508e.  return @kind void;
}
procedure `void` `<init>`(`n.c.a.x.c$b` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `n.c.a.x.c$a` v3 @kind object) @signature `Ln/c/a/x/c$b;.<init>:(Ljava/lang/String;ILn/c/a/x/c$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L4250a0.  call `<init>`(v0, v1, v2) @signature `Ln/c/a/x/c$b;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L4250a6.  return @kind void;
}
procedure `int` `a`(`int` v0 ) @signature `Ln/c/a/x/c$b;.a:(I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L424d6c.  call temp:= `b`(v0) @signature `Ln/c/a/x/c$b;.b:(I)I` @kind static;
  #L424d72.  v0:= temp;
  #L424d74.  return v0;
}
procedure `n.c.a.x.n` `a`(`n.c.a.f` v0 @kind object) @signature `Ln/c/a/x/c$b;.a:(Ln/c/a/f;)Ln/c/a/x/n;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L424f74.  call temp:= `f`(v0) @signature `Ln/c/a/x/c$b;.f:(Ln/c/a/f;)Ln/c/a/x/n;` @kind static;
  #L424f7a.  v0:= temp @kind object;
  #L424f7c.  return v0 @kind object;
}
procedure `int` `b`(`int` v2 ) @signature `Ln/c/a/x/c$b;.b:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L424eac.  v0:= 1I;
  #L424eae.  call temp:= `a`(v2, v0, v0) @signature `Ln/c/a/f;.a:(III)Ln/c/a/f;` @kind static;
  #L424eb4.  v2:= temp @kind object;
  #L424eb6.  call temp:= `t`(v2) @signature `Ln/c/a/f;.t:()Ln/c/a/c;` @kind virtual;
  #L424ebc.  v0:= temp @kind object;
  #L424ebe.  v1:= `@@n.c.a.c.e` @type ^`n.c.a.c` @kind object;
  #L424ec2.  if v0 == v1 then goto L424eea;
  #L424ec6.  call temp:= `t`(v2) @signature `Ln/c/a/f;.t:()Ln/c/a/c;` @kind virtual;
  #L424ecc.  v0:= temp @kind object;
  #L424ece.  v1:= `@@n.c.a.c.d` @type ^`n.c.a.c` @kind object;
  #L424ed2.  if v0 != v1 then goto L424ee4;
  #L424ed6.  call temp:= `y`(v2) @signature `Ln/c/a/f;.y:()Z` @kind virtual;
  #L424edc.  v2:= temp;
  #L424ede.  if v2 == 0 then goto L424ee4;
  #L424ee2.  goto L424eea;
  #L424ee4.  v2:= 52I;
  #L424ee8.  return v2;
  #L424eea.  v2:= 53I;
  #L424eee.  return v2;
}
procedure `int` `b`(`n.c.a.f` v0 @kind object) @signature `Ln/c/a/x/c$b;.b:(Ln/c/a/f;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L424d34.  call temp:= `d`(v0) @signature `Ln/c/a/x/c$b;.d:(Ln/c/a/f;)I` @kind static;
  #L424d3a.  v0:= temp;
  #L424d3c.  return v0;
}
procedure `int` `c`(`n.c.a.f` v0 @kind object) @signature `Ln/c/a/x/c$b;.c:(Ln/c/a/f;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L424d50.  call temp:= `e`(v0) @signature `Ln/c/a/x/c$b;.e:(Ln/c/a/f;)I` @kind static;
  #L424d56.  v0:= temp;
  #L424d58.  return v0;
}
procedure `int` `d`(`n.c.a.f` v5 @kind object) @signature `Ln/c/a/x/c$b;.d:(Ln/c/a/f;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L424d88.  call temp:= `t`(v5) @signature `Ln/c/a/f;.t:()Ln/c/a/c;` @kind virtual;
  #L424d8e.  v0:= temp @kind object;
  #L424d90.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L424d96.  v0:= temp;
  #L424d98.  call temp:= `u`(v5) @signature `Ln/c/a/f;.u:()I` @kind virtual;
  #L424d9e.  v1:= temp;
  #L424da0.  v2:= 1I;
  #L424da2.  v1:= v1 - v2 @kind int;
  #L424da4.  v0:= v0 - 3;
  #L424da8.  v0:= v0 + v1 @kind int;
  #L424daa.  v3:= v0 / 7;
  #L424dae.  v3:= v3 * 7;
  #L424db2.  v0:= v0 - v3 @kind int;
  #L424db4.  v0:= v0 + -3;
  #L424db8.  v3:= -3I;
  #L424dba.  if v0 >= v3 then goto L424dc2;
  #L424dbe.  v0:= v0 + 7;
  #L424dc2.  if v1 >= v0 then goto L424df2;
  #L424dc6.  v0:= 180I;
  #L424dca.  call temp:= `b`(v5, v0) @signature `Ln/c/a/f;.b:(I)Ln/c/a/f;` @kind virtual;
  #L424dd0.  v5:= temp @kind object;
  #L424dd2.  v0:= 1L;
  #L424dd6.  call temp:= `b`(v5, v0) @signature `Ln/c/a/f;.b:(J)Ln/c/a/f;` @kind virtual;
  #L424ddc.  v5:= temp @kind object;
  #L424dde.  call temp:= `f`(v5) @signature `Ln/c/a/x/c$b;.f:(Ln/c/a/f;)Ln/c/a/x/n;` @kind static;
  #L424de4.  v5:= temp @kind object;
  #L424de6.  call temp:= `a`(v5) @signature `Ln/c/a/x/n;.a:()J` @kind virtual;
  #L424dec.  v0:= temp @kind wide;
  #L424dee.  v5:= (`int`) v0 @kind l2i;
  #L424df0.  return v5;
  #L424df2.  v1:= v1 - v0 @kind int;
  #L424df4.  v1:= v1 / 7;
  #L424df8.  v1:= v1 + v2 @kind int;
  #L424dfa.  v4:= 53I;
  #L424dfe.  if v1 != v4 then goto L424e26;
  #L424e02.  if v0 == v3 then goto L424e1e;
  #L424e06.  v3:= -2I;
  #L424e08.  if v0 != v3 then goto L424e1a;
  #L424e0c.  call temp:= `y`(v5) @signature `Ln/c/a/f;.y:()Z` @kind virtual;
  #L424e12.  v5:= temp;
  #L424e14.  if v5 == 0 then goto L424e1a;
  #L424e18.  goto L424e1e;
  #L424e1a.  v5:= 0I;
  #L424e1c.  goto L424e20;
  #L424e1e.  v5:= 1I;
  #L424e20.  if v5 != 0 then goto L424e26;
  #L424e24.  v1:= 1I;
  #L424e26.  return v1;
}
procedure `boolean` `d`(`n.c.a.x.e` v0 @kind object) @signature `Ln/c/a/x/c$b;.d:(Ln/c/a/x/e;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L424cc8.  call temp:= `e`(v0) @signature `Ln/c/a/x/c$b;.e:(Ln/c/a/x/e;)Z` @kind static;
  #L424cce.  v0:= temp;
  #L424cd0.  return v0;
}
procedure `int` `e`(`n.c.a.f` v4 @kind object) @signature `Ln/c/a/x/c$b;.e:(Ln/c/a/f;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L424e38.  call temp:= `x`(v4) @signature `Ln/c/a/f;.x:()I` @kind virtual;
  #L424e3e.  v0:= temp;
  #L424e40.  call temp:= `u`(v4) @signature `Ln/c/a/f;.u:()I` @kind virtual;
  #L424e46.  v1:= temp;
  #L424e48.  v2:= 3I;
  #L424e4a.  if v1 > v2 then goto L424e6c;
  #L424e4e.  call temp:= `t`(v4) @signature `Ln/c/a/f;.t:()Ln/c/a/c;` @kind virtual;
  #L424e54.  v4:= temp @kind object;
  #L424e56.  call temp:= `ordinal`(v4) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L424e5c.  v4:= temp;
  #L424e5e.  v1:= v1 - v4 @kind int;
  #L424e60.  v4:= -2I;
  #L424e62.  if v1 >= v4 then goto L424e9a;
  #L424e66.  v0:= v0 + -1;
  #L424e6a.  goto L424e9a;
  #L424e6c.  v2:= 363I;
  #L424e70.  if v1 < v2 then goto L424e9a;
  #L424e74.  call temp:= `t`(v4) @signature `Ln/c/a/f;.t:()Ln/c/a/c;` @kind virtual;
  #L424e7a.  v3:= temp @kind object;
  #L424e7c.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L424e82.  v3:= temp;
  #L424e84.  v1:= v1 - v2 @kind int;
  #L424e86.  call temp:= `y`(v4) @signature `Ln/c/a/f;.y:()Z` @kind virtual;
  #L424e8c.  v4:= temp;
  #L424e8e.  v1:= v1 - v4 @kind int;
  #L424e90.  v1:= v1 - v3 @kind int;
  #L424e92.  if v1 < 0 then goto L424e9a;
  #L424e96.  v0:= v0 + 1;
  #L424e9a.  return v0;
}
procedure `boolean` `e`(`n.c.a.x.e` v1 @kind object) @signature `Ln/c/a/x/c$b;.e:(Ln/c/a/x/e;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L424cf8.  call temp:= `c`(v1) @signature `Ln/c/a/u/h;.c:(Ln/c/a/x/e;)Ln/c/a/u/h;` @kind static;
  #L424cfe.  v1:= temp @kind object;
  #L424d00.  v0:= `@@n.c.a.u.m.d` @type ^`n.c.a.u.m` @kind object;
  #L424d04.  call temp:= `equals`(v1, v0) @signature `Ln/c/a/u/h;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L424d0a.  v1:= temp;
  #L424d0c.  return v1;
}
procedure `n.c.a.x.n` `f`(`n.c.a.f` v4 @kind object) @signature `Ln/c/a/x/c$b;.f:(Ln/c/a/f;)Ln/c/a/x/n;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L424f90.  call temp:= `e`(v4) @signature `Ln/c/a/x/c$b;.e:(Ln/c/a/f;)I` @kind static;
  #L424f96.  v4:= temp;
  #L424f98.  call temp:= `b`(v4) @signature `Ln/c/a/x/c$b;.b:(I)I` @kind static;
  #L424f9e.  v4:= temp;
  #L424fa0.  v0:= (`long`) v4 @kind i2l;
  #L424fa2.  v2:= 1L;
  #L424fa6.  call temp:= `a`(v2, v0) @signature `Ln/c/a/x/n;.a:(JJ)Ln/c/a/x/n;` @kind static;
  #L424fac.  v4:= temp @kind object;
  #L424fae.  return v4 @kind object;
}
procedure `int`[] `k`() @signature `Ln/c/a/x/c$b;.k:()[I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L424f00.  v0:= `@@n.c.a.x.c$b.f` @type ^`int`[] @kind object;
  #L424f04.  return v0 @kind object;
}
procedure `n.c.a.x.c$b` `valueOf`(`java.lang.String` v1 @kind object) @signature `Ln/c/a/x/c$b;.valueOf:(Ljava/lang/String;)Ln/c/a/x/c$b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L424f18.  v0:= constclass @type ^`n.c.a.x.c$b` @kind object;
  #L424f1c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L424f22.  v1:= temp @kind object;
  #L424f24.  v1:= (`n.c.a.x.c$b`) v1 @kind object;
  #L424f28.  return v1 @kind object;
}
procedure `n.c.a.x.c$b`[] `values`() @signature `Ln/c/a/x/c$b;.values:()[Ln/c/a/x/c$b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L424f3c.  v0:= `@@n.c.a.x.c$b.g` @type ^`n.c.a.x.c$b`[] @kind object;
  #L424f40.  call temp:= `clone`(v0) @signature `[Ln/c/a/x/c$b;.clone:()Ljava/lang/Object;` @kind virtual;
  #L424f46.  v0:= temp @kind object;
  #L424f48.  v0:= (`n.c.a.x.c$b`[]) v0 @kind object;
  #L424f4c.  return v0 @kind object;
}
procedure `n.c.a.x.e` `a`(`n.c.a.x.c$b` v0 @kind this, `java.util.Map` v1 @kind object, `n.c.a.x.e` v2 @kind object, `n.c.a.v.i` v3 @kind object) @signature `Ln/c/a/x/c$b;.a:(Ljava/util/Map;Ln/c/a/x/e;Ln/c/a/v/i;)Ln/c/a/x/e;` @AccessFlag PUBLIC {
    temp;

  #L424f60.  v1:= 0I;
  #L424f62.  return v1 @kind object;
}
procedure `boolean` `b`(`n.c.a.x.c$b` v1 @kind this) @signature `Ln/c/a/x/c$b;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L424ce4.  v0:= 1I;
  #L424ce6.  return v0;
}
procedure `boolean` `e`(`n.c.a.x.c$b` v1 @kind this) @signature `Ln/c/a/x/c$b;.e:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L424d20.  v0:= 0I;
  #L424d22.  return v0;
}
