record `n.c.a.x.j$e` @kind class @AccessFlag  extends `n.c.a.x.k` @kind interface {
}
procedure `void` `<init>`(`n.c.a.x.j$e` v0 @kind this) @signature `Ln/c/a/x/j$e;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L425554.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42555a.  return @kind void;
}
procedure `java.lang.Object` `a`(`n.c.a.x.j$e` v0 @kind this, `n.c.a.x.e` v1 @kind object) @signature `Ln/c/a/x/j$e;.a:(Ln/c/a/x/e;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4254fc.  call temp:= `a`(v0, v1) @signature `Ln/c/a/x/j$e;.a:(Ln/c/a/x/e;)Ln/c/a/r;` @kind virtual;
  #L425502.  v1:= temp @kind object;
  #L425504.  return v1 @kind object;
}
procedure `n.c.a.r` `a`(`n.c.a.x.j$e` v1 @kind this, `n.c.a.x.e` v2 @kind object) @signature `Ln/c/a/x/j$e;.a:(Ln/c/a/x/e;)Ln/c/a/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L425518.  v0:= `@@n.c.a.x.a.G` @type ^`n.c.a.x.a` @kind object;
  #L42551c.  call temp:= `b`(v2, v0) @signature `Ln/c/a/x/e;.b:(Ln/c/a/x/i;)Z` @kind interface;
  #L425522.  v0:= temp;
  #L425524.  if v0 == 0 then goto L42553e;
  #L425528.  v0:= `@@n.c.a.x.a.G` @type ^`n.c.a.x.a` @kind object;
  #L42552c.  call temp:= `c`(v2, v0) @signature `Ln/c/a/x/e;.c:(Ln/c/a/x/i;)I` @kind interface;
  #L425532.  v2:= temp;
  #L425534.  call temp:= `b`(v2) @signature `Ln/c/a/r;.b:(I)Ln/c/a/r;` @kind static;
  #L42553a.  v2:= temp @kind object;
  #L42553c.  return v2 @kind object;
  #L42553e.  v2:= 0I;
  #L425540.  return v2 @kind object;
}
