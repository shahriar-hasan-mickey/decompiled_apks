record `n.c.a.k$c` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@n.c.a.k$c.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Ln/c/a/k$c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L40dd6c.  call temp:= `values`() @signature `Ln/c/a/x/a;.values:()[Ln/c/a/x/a;` @kind static;
  #L40dd72.  v0:= temp @kind object;
  #L40dd74.  v0:= length @variable v0;
  #L40dd76.  v0:= new `int`[v0];
  #L40dd7a.  `@@n.c.a.k$c.a` @type ^`int`[] := v0 @kind object;
  #L40dd7e.  v0:= `@@n.c.a.k$c.a` @type ^`int`[] @kind object;
  #L40dd82.  v1:= `@@n.c.a.x.a.F` @type ^`n.c.a.x.a` @kind object;
  #L40dd86.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40dd8c.  v1:= temp;
  #L40dd8e.  v2:= 1I;
  #L40dd90.  v0[v1]:= v2;
  #L40dd94.  v0:= `@@n.c.a.k$c.a` @type ^`int`[] @kind object;
  #L40dd98.  v1:= `@@n.c.a.x.a.G` @type ^`n.c.a.x.a` @kind object;
  #L40dd9c.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40dda2.  v1:= temp;
  #L40dda4.  v2:= 2I;
  #L40dda6.  v0[v1]:= v2;
  #L40ddaa.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L40dd7e..L40dd94] goto L40dd94;
  catch `java.lang.NoSuchFieldError` @[L40dd94..L40ddaa] goto L40ddaa;
}
