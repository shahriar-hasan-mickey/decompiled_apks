record `n.c.a.u.f$a` @kind class @AccessFlag  extends `java.util.Comparator` @kind interface {
}
procedure `void` `<init>`(`n.c.a.u.f$a` v0 @kind this) @signature `Ln/c/a/u/f$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4142b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4142ba.  return @kind void;
}
procedure `int` `a`(`n.c.a.u.f$a` v4 @kind this, `n.c.a.u.f` v5 @kind object, `n.c.a.u.f` v6 @kind object) @signature `Ln/c/a/u/f$a;.a:(Ln/c/a/u/f;Ln/c/a/u/f;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L41425c.  call temp:= `s`(v5) @signature `Ln/c/a/u/f;.s:()J` @kind virtual;
  #L414262.  v0:= temp @kind wide;
  #L414264.  call temp:= `s`(v6) @signature `Ln/c/a/u/f;.s:()J` @kind virtual;
  #L41426a.  v2:= temp @kind wide;
  #L41426c.  call temp:= `a`(v0, v2) @signature `Ln/c/a/w/d;.a:(JJ)I` @kind static;
  #L414272.  v0:= temp;
  #L414274.  if v0 != 0 then goto L4142a0;
  #L414278.  call temp:= `w`(v5) @signature `Ln/c/a/u/f;.w:()Ln/c/a/h;` @kind virtual;
  #L41427e.  v5:= temp @kind object;
  #L414280.  call temp:= `u`(v5) @signature `Ln/c/a/h;.u:()J` @kind virtual;
  #L414286.  v0:= temp @kind wide;
  #L414288.  call temp:= `w`(v6) @signature `Ln/c/a/u/f;.w:()Ln/c/a/h;` @kind virtual;
  #L41428e.  v5:= temp @kind object;
  #L414290.  call temp:= `u`(v5) @signature `Ln/c/a/h;.u:()J` @kind virtual;
  #L414296.  v5:= temp @kind wide;
  #L414298.  call temp:= `a`(v0, v5) @signature `Ln/c/a/w/d;.a:(JJ)I` @kind static;
  #L41429e.  v0:= temp;
  #L4142a0.  return v0;
}
procedure `int` `compare`(`n.c.a.u.f$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Ln/c/a/u/f$a;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L414238.  v1:= (`n.c.a.u.f`) v1 @kind object;
  #L41423c.  v2:= (`n.c.a.u.f`) v2 @kind object;
  #L414240.  call temp:= `a`(v0, v1, v2) @signature `Ln/c/a/u/f$a;.a:(Ln/c/a/u/f;Ln/c/a/u/f;)I` @kind virtual;
  #L414246.  v1:= temp;
  #L414248.  return v1;
}
