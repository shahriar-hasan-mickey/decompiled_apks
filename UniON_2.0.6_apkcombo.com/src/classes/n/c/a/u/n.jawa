record `n.c.a.u.n` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `n.c.a.u.i` @kind interface {
}
global `n.c.a.u.n` `@@n.c.a.u.n.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.u.n` `@@n.c.a.u.n.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.u.n`[] `@@n.c.a.u.n.d` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Ln/c/a/u/n;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L418ec4.  v0:= new `n.c.a.u.n`;
  #L418ec8.  v1:= 0I;
  #L418eca.  v2:= "BCE" @kind object;
  #L418ece.  call `<init>`(v0, v2, v1) @signature `Ln/c/a/u/n;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L418ed4.  `@@n.c.a.u.n.b` @type ^`n.c.a.u.n` := v0 @kind object;
  #L418ed8.  v0:= new `n.c.a.u.n`;
  #L418edc.  v2:= 1I;
  #L418ede.  v3:= "CE" @kind object;
  #L418ee2.  call `<init>`(v0, v3, v2) @signature `Ln/c/a/u/n;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L418ee8.  `@@n.c.a.u.n.c` @type ^`n.c.a.u.n` := v0 @kind object;
  #L418eec.  v0:= 2I;
  #L418eee.  v0:= new `n.c.a.u.n`[v0];
  #L418ef2.  v3:= `@@n.c.a.u.n.b` @type ^`n.c.a.u.n` @kind object;
  #L418ef6.  v0[v1]:= v3 @kind object;
  #L418efa.  v1:= `@@n.c.a.u.n.c` @type ^`n.c.a.u.n` @kind object;
  #L418efe.  v0[v2]:= v1 @kind object;
  #L418f02.  `@@n.c.a.u.n.d` @type ^`n.c.a.u.n`[] := v0 @kind object;
  #L418f06.  return @kind void;
}
procedure `void` `<init>`(`n.c.a.u.n` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Ln/c/a/u/n;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L418f18.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L418f1e.  return @kind void;
}
procedure `n.c.a.u.n` `a`(`int` v3 ) @signature `Ln/c/a/u/n;.a:(I)Ln/c/a/u/n;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L418d9c.  if v3 == 0 then goto L418dda;
  #L418da0.  v0:= 1I;
  #L418da2.  if v3 != v0 then goto L418dac;
  #L418da6.  v3:= `@@n.c.a.u.n.c` @type ^`n.c.a.u.n` @kind object;
  #L418daa.  return v3 @kind object;
  #L418dac.  v0:= new `n.c.a.b`;
  #L418db0.  v1:= new `java.lang.StringBuilder`;
  #L418db4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L418dba.  v2:= "Invalid era: " @kind object;
  #L418dbe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L418dc4.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L418dca.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L418dd0.  v3:= temp @kind object;
  #L418dd2.  call `<init>`(v0, v3) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L418dd8.  throw v0;
  #L418dda.  v3:= `@@n.c.a.u.n.b` @type ^`n.c.a.u.n` @kind object;
  #L418dde.  return v3 @kind object;
}
procedure `n.c.a.u.n` `valueOf`(`java.lang.String` v1 @kind object) @signature `Ln/c/a/u/n;.valueOf:(Ljava/lang/String;)Ln/c/a/u/n;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L418df0.  v0:= constclass @type ^`n.c.a.u.n` @kind object;
  #L418df4.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L418dfa.  v1:= temp @kind object;
  #L418dfc.  v1:= (`n.c.a.u.n`) v1 @kind object;
  #L418e00.  return v1 @kind object;
}
procedure `n.c.a.u.n`[] `values`() @signature `Ln/c/a/u/n;.values:()[Ln/c/a/u/n;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L418e14.  v0:= `@@n.c.a.u.n.d` @type ^`n.c.a.u.n`[] @kind object;
  #L418e18.  call temp:= `clone`(v0) @signature `[Ln/c/a/u/n;.clone:()Ljava/lang/Object;` @kind virtual;
  #L418e1e.  v0:= temp @kind object;
  #L418e20.  v0:= (`n.c.a.u.n`[]) v0 @kind object;
  #L418e24.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`n.c.a.u.n` v1 @kind this, `n.c.a.x.k` v2 @kind object) @signature `Ln/c/a/u/n;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L418cbc.  call temp:= `e`() @signature `Ln/c/a/x/j;.e:()Ln/c/a/x/k;` @kind static;
  #L418cc2.  v0:= temp @kind object;
  #L418cc4.  if v2 != v0 then goto L418cce;
  #L418cc8.  v2:= `@@n.c.a.x.b.q` @type ^`n.c.a.x.b` @kind object;
  #L418ccc.  return v2 @kind object;
  #L418cce.  call temp:= `a`() @signature `Ln/c/a/x/j;.a:()Ln/c/a/x/k;` @kind static;
  #L418cd4.  v0:= temp @kind object;
  #L418cd6.  if v2 == v0 then goto L418d22;
  #L418cda.  call temp:= `f`() @signature `Ln/c/a/x/j;.f:()Ln/c/a/x/k;` @kind static;
  #L418ce0.  v0:= temp @kind object;
  #L418ce2.  if v2 == v0 then goto L418d22;
  #L418ce6.  call temp:= `g`() @signature `Ln/c/a/x/j;.g:()Ln/c/a/x/k;` @kind static;
  #L418cec.  v0:= temp @kind object;
  #L418cee.  if v2 == v0 then goto L418d22;
  #L418cf2.  call temp:= `d`() @signature `Ln/c/a/x/j;.d:()Ln/c/a/x/k;` @kind static;
  #L418cf8.  v0:= temp @kind object;
  #L418cfa.  if v2 == v0 then goto L418d22;
  #L418cfe.  call temp:= `b`() @signature `Ln/c/a/x/j;.b:()Ln/c/a/x/k;` @kind static;
  #L418d04.  v0:= temp @kind object;
  #L418d06.  if v2 == v0 then goto L418d22;
  #L418d0a.  call temp:= `c`() @signature `Ln/c/a/x/j;.c:()Ln/c/a/x/k;` @kind static;
  #L418d10.  v0:= temp @kind object;
  #L418d12.  if v2 != v0 then goto L418d18;
  #L418d16.  goto L418d22;
  #L418d18.  call temp:= `a`(v2, v1) @signature `Ln/c/a/x/k;.a:(Ln/c/a/x/e;)Ljava/lang/Object;` @kind interface;
  #L418d1e.  v2:= temp @kind object;
  #L418d20.  return v2 @kind object;
  #L418d22.  v2:= 0I;
  #L418d24.  return v2 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.u.n` v3 @kind this, `n.c.a.x.d` v4 @kind object) @signature `Ln/c/a/u/n;.a:(Ln/c/a/x/d;)Ln/c/a/x/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L418e38.  v0:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L418e3c.  call temp:= `getValue`(v3) @signature `Ln/c/a/u/n;.getValue:()I` @kind virtual;
  #L418e42.  v1:= temp;
  #L418e44.  v1:= (`long`) v1 @kind i2l;
  #L418e46.  call temp:= `a`(v4, v0, v1) @signature `Ln/c/a/x/d;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @kind interface;
  #L418e4c.  v4:= temp @kind object;
  #L418e4e.  return v4 @kind object;
}
procedure `n.c.a.x.n` `a`(`n.c.a.u.n` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/u/n;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L418e60.  v0:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L418e64.  if v4 != v0 then goto L418e72;
  #L418e68.  call temp:= `h`(v4) @signature `Ln/c/a/x/i;.h:()Ln/c/a/x/n;` @kind interface;
  #L418e6e.  v4:= temp @kind object;
  #L418e70.  return v4 @kind object;
  #L418e72.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L418e76.  if v0 != 0 then goto L418e84;
  #L418e7a.  call temp:= `c`(v4, v3) @signature `Ln/c/a/x/i;.c:(Ln/c/a/x/e;)Ln/c/a/x/n;` @kind interface;
  #L418e80.  v4:= temp @kind object;
  #L418e82.  return v4 @kind object;
  #L418e84.  v0:= new `n.c.a.x.m`;
  #L418e88.  v1:= new `java.lang.StringBuilder`;
  #L418e8c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L418e92.  v2:= "Unsupported field: " @kind object;
  #L418e96.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L418e9c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L418ea2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L418ea8.  v4:= temp @kind object;
  #L418eaa.  call `<init>`(v0, v4) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L418eb0.  throw v0;
}
procedure `boolean` `b`(`n.c.a.u.n` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/u/n;.b:(Ln/c/a/x/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L418c24.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L418c28.  v1:= 1I;
  #L418c2a.  v2:= 0I;
  #L418c2c.  if v0 == 0 then goto L418c3e;
  #L418c30.  v0:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L418c34.  if v4 != v0 then goto L418c3a;
  #L418c38.  goto L418c3c;
  #L418c3a.  v1:= 0I;
  #L418c3c.  return v1;
  #L418c3e.  if v4 == 0 then goto L418c50;
  #L418c42.  call temp:= `a`(v4, v3) @signature `Ln/c/a/x/i;.a:(Ln/c/a/x/e;)Z` @kind interface;
  #L418c48.  v4:= temp;
  #L418c4a.  if v4 == 0 then goto L418c50;
  #L418c4e.  goto L418c52;
  #L418c50.  v1:= 0I;
  #L418c52.  return v1;
}
procedure `int` `c`(`n.c.a.u.n` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/u/n;.c:(Ln/c/a/x/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L418c64.  v0:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L418c68.  if v4 != v0 then goto L418c76;
  #L418c6c.  call temp:= `getValue`(v3) @signature `Ln/c/a/u/n;.getValue:()I` @kind virtual;
  #L418c72.  v4:= temp;
  #L418c74.  return v4;
  #L418c76.  call temp:= `a`(v3, v4) @signature `Ln/c/a/u/n;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @kind virtual;
  #L418c7c.  v0:= temp @kind object;
  #L418c7e.  call temp:= `d`(v3, v4) @signature `Ln/c/a/u/n;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L418c84.  v1:= temp @kind wide;
  #L418c86.  call temp:= `a`(v0, v1, v4) @signature `Ln/c/a/x/n;.a:(JLn/c/a/x/i;)I` @kind virtual;
  #L418c8c.  v4:= temp;
  #L418c8e.  return v4;
}
procedure `long` `d`(`n.c.a.u.n` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/u/n;.d:(Ln/c/a/x/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L418d38.  v0:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L418d3c.  if v4 != v0 then goto L418d4c;
  #L418d40.  call temp:= `getValue`(v3) @signature `Ln/c/a/u/n;.getValue:()I` @kind virtual;
  #L418d46.  v4:= temp;
  #L418d48.  v0:= (`long`) v4 @kind i2l;
  #L418d4a.  return v0 @kind wide;
  #L418d4c.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L418d50.  if v0 != 0 then goto L418d5e;
  #L418d54.  call temp:= `b`(v4, v3) @signature `Ln/c/a/x/i;.b:(Ln/c/a/x/e;)J` @kind interface;
  #L418d5a.  v0:= temp @kind wide;
  #L418d5c.  return v0 @kind wide;
  #L418d5e.  v0:= new `n.c.a.x.m`;
  #L418d62.  v1:= new `java.lang.StringBuilder`;
  #L418d66.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L418d6c.  v2:= "Unsupported field: " @kind object;
  #L418d70.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L418d76.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L418d7c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L418d82.  v4:= temp @kind object;
  #L418d84.  call `<init>`(v0, v4) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L418d8a.  throw v0;
}
procedure `int` `getValue`(`n.c.a.u.n` v1 @kind this) @signature `Ln/c/a/u/n;.getValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L418ca0.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L418ca6.  v0:= temp;
  #L418ca8.  return v0;
}
