record `n.c.a.u.a` @kind class @AccessFlag ABSTRACT extends `n.c.a.u.b` @kind class, `n.c.a.x.d` @kind interface, `n.c.a.x.f` @kind interface, `java.io.Serializable` @kind interface {
}
procedure `void` `<init>`(`n.c.a.u.a` v0 @kind this) @signature `Ln/c/a/u/a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L412f4c.  call `<init>`(v0) @signature `Ln/c/a/u/b;.<init>:()V` @kind direct;
  #L412f52.  return @kind void;
}
procedure `n.c.a.u.a` `a`(`long` v0 ) @signature `Ln/c/a/u/a;.a:(J)Ln/c/a/u/a;` @AccessFlag ABSTRACT {

  # return;
}
procedure `n.c.a.u.c` `a`(`n.c.a.u.a` v0 @kind this, `n.c.a.h` v1 @kind object) @signature `Ln/c/a/u/a;.a:(Ln/c/a/h;)Ln/c/a/u/c;` @AccessFlag PUBLIC {
    temp;

  #L412f14.  call temp:= `a`(v0, v1) @signature `Ln/c/a/u/d;.a:(Ln/c/a/u/b;Ln/c/a/h;)Ln/c/a/u/d;` @kind static;
  #L412f1a.  v1:= temp @kind object;
  #L412f1c.  return v1 @kind object;
}
procedure `n.c.a.u.a` `b`(`long` v0 ) @signature `Ln/c/a/u/a;.b:(J)Ln/c/a/u/a;` @AccessFlag ABSTRACT {

  # return;
}
procedure `n.c.a.u.a` `b`(`n.c.a.u.a` v2 @kind this, `long` v3 , `n.c.a.x.l` v5 @kind object) @signature `Ln/c/a/u/a;.b:(JLn/c/a/x/l;)Ln/c/a/u/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L412dc8.  v0:= instanceof @variable v5 @type ^`n.c.a.x.b` @kind boolean;
  #L412dcc.  if v0 == 0 then goto L412ea4;
  #L412dd0.  v0:= v5 @kind object;
  #L412dd2.  v0:= (`n.c.a.x.b`) v0 @kind object;
  #L412dd6.  v1:= `@@n.c.a.u.a$a.a` @type ^`int`[] @kind object;
  #L412dda.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L412de0.  v0:= temp;
  #L412de2.  v0:= v1[v0];
  #L412de6.  goto L412ec4;
  #L412dec.  v3:= new `n.c.a.b`;
  #L412df0.  v4:= new `java.lang.StringBuilder`;
  #L412df4.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L412dfa.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L412e00.  v5:= " not valid for chronology " @kind object;
  #L412e04.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L412e0a.  call temp:= `g`(v2) @signature `Ln/c/a/u/b;.g:()Ln/c/a/u/h;` @kind virtual;
  #L412e10.  v5:= temp @kind object;
  #L412e12.  call temp:= `e`(v5) @signature `Ln/c/a/u/h;.e:()Ljava/lang/String;` @kind virtual;
  #L412e18.  v5:= temp @kind object;
  #L412e1a.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L412e20.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L412e26.  v4:= temp @kind object;
  #L412e28.  call `<init>`(v3, v4) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L412e2e.  throw v3;
  #L412e30.  v5:= 1000I;
  #L412e34.  call temp:= `b`(v3, v5) @signature `Ln/c/a/w/d;.b:(JI)J` @kind static;
  #L412e3a.  v3:= temp @kind wide;
  #L412e3c.  call temp:= `c`(v2, v3) @signature `Ln/c/a/u/a;.c:(J)Ln/c/a/u/a;` @kind virtual;
  #L412e42.  v3:= temp @kind object;
  #L412e44.  return v3 @kind object;
  #L412e46.  v5:= 100I;
  #L412e4a.  call temp:= `b`(v3, v5) @signature `Ln/c/a/w/d;.b:(JI)J` @kind static;
  #L412e50.  v3:= temp @kind wide;
  #L412e52.  call temp:= `c`(v2, v3) @signature `Ln/c/a/u/a;.c:(J)Ln/c/a/u/a;` @kind virtual;
  #L412e58.  v3:= temp @kind object;
  #L412e5a.  return v3 @kind object;
  #L412e5c.  v5:= 10I;
  #L412e60.  call temp:= `b`(v3, v5) @signature `Ln/c/a/w/d;.b:(JI)J` @kind static;
  #L412e66.  v3:= temp @kind wide;
  #L412e68.  call temp:= `c`(v2, v3) @signature `Ln/c/a/u/a;.c:(J)Ln/c/a/u/a;` @kind virtual;
  #L412e6e.  v3:= temp @kind object;
  #L412e70.  return v3 @kind object;
  #L412e72.  call temp:= `c`(v2, v3) @signature `Ln/c/a/u/a;.c:(J)Ln/c/a/u/a;` @kind virtual;
  #L412e78.  v3:= temp @kind object;
  #L412e7a.  return v3 @kind object;
  #L412e7c.  call temp:= `b`(v2, v3) @signature `Ln/c/a/u/a;.b:(J)Ln/c/a/u/a;` @kind virtual;
  #L412e82.  v3:= temp @kind object;
  #L412e84.  return v3 @kind object;
  #L412e86.  v5:= 7I;
  #L412e88.  call temp:= `b`(v3, v5) @signature `Ln/c/a/w/d;.b:(JI)J` @kind static;
  #L412e8e.  v3:= temp @kind wide;
  #L412e90.  call temp:= `a`(v2, v3) @signature `Ln/c/a/u/a;.a:(J)Ln/c/a/u/a;` @kind virtual;
  #L412e96.  v3:= temp @kind object;
  #L412e98.  return v3 @kind object;
  #L412e9a.  call temp:= `a`(v2, v3) @signature `Ln/c/a/u/a;.a:(J)Ln/c/a/u/a;` @kind virtual;
  #L412ea0.  v3:= temp @kind object;
  #L412ea2.  return v3 @kind object;
  #L412ea4.  call temp:= `g`(v2) @signature `Ln/c/a/u/b;.g:()Ln/c/a/u/h;` @kind virtual;
  #L412eaa.  v0:= temp @kind object;
  #L412eac.  call temp:= `a`(v5, v2, v3) @signature `Ln/c/a/x/l;.a:(Ln/c/a/x/d;J)Ln/c/a/x/d;` @kind interface;
  #L412eb2.  v3:= temp @kind object;
  #L412eb4.  call temp:= `a`(v0, v3) @signature `Ln/c/a/u/h;.a:(Ln/c/a/x/d;)Ln/c/a/u/b;` @kind virtual;
  #L412eba.  v3:= temp @kind object;
  #L412ebc.  v3:= (`n.c.a.u.a`) v3 @kind object;
  #L412ec0.  return v3 @kind object;
  #L412ec2.  
  #L412ec4.  switch v0
                  | 1 => goto L412e9a
                  | 2 => goto L412e86
                  | 3 => goto L412e7c
                  | 4 => goto L412e72
                  | 5 => goto L412e5c
                  | 6 => goto L412e46
                  | 7 => goto L412e30
                  | else => goto L412dec;
}
procedure `n.c.a.u.b` `b`(`n.c.a.u.a` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/u/a;.b:(JLn/c/a/x/l;)Ln/c/a/u/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L412ef8.  call temp:= `b`(v0, v1, v3) @signature `Ln/c/a/u/a;.b:(JLn/c/a/x/l;)Ln/c/a/u/a;` @kind virtual;
  #L412efe.  v1:= temp @kind object;
  #L412f00.  return v1 @kind object;
}
procedure `n.c.a.x.d` `b`(`n.c.a.u.a` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/u/a;.b:(JLn/c/a/x/l;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L412f30.  call temp:= `b`(v0, v1, v3) @signature `Ln/c/a/u/a;.b:(JLn/c/a/x/l;)Ln/c/a/u/a;` @kind virtual;
  #L412f36.  v1:= temp @kind object;
  #L412f38.  return v1 @kind object;
}
procedure `n.c.a.u.a` `c`(`long` v0 ) @signature `Ln/c/a/u/a;.c:(J)Ln/c/a/u/a;` @AccessFlag ABSTRACT {

  # return;
}
