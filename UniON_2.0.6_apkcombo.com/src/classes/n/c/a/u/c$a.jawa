record `n.c.a.u.c$a` @kind class @AccessFlag  extends `java.util.Comparator` @kind interface {
}
procedure `void` `<init>`(`n.c.a.u.c$a` v0 @kind this) @signature `Ln/c/a/u/c$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L413058.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L41305e.  return @kind void;
}
procedure `int` `a`(`n.c.a.u.c$a` v4 @kind this, `n.c.a.u.c` v5 @kind object, `n.c.a.u.c` v6 @kind object) @signature `Ln/c/a/u/c$a;.a:(Ln/c/a/u/c;Ln/c/a/u/c;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L412ff0.  call temp:= `e`(v5) @signature `Ln/c/a/u/c;.e:()Ln/c/a/u/b;` @kind virtual;
  #L412ff6.  v0:= temp @kind object;
  #L412ff8.  call temp:= `h`(v0) @signature `Ln/c/a/u/b;.h:()J` @kind virtual;
  #L412ffe.  v0:= temp @kind wide;
  #L413000.  call temp:= `e`(v6) @signature `Ln/c/a/u/c;.e:()Ln/c/a/u/b;` @kind virtual;
  #L413006.  v2:= temp @kind object;
  #L413008.  call temp:= `h`(v2) @signature `Ln/c/a/u/b;.h:()J` @kind virtual;
  #L41300e.  v2:= temp @kind wide;
  #L413010.  call temp:= `a`(v0, v2) @signature `Ln/c/a/w/d;.a:(JJ)I` @kind static;
  #L413016.  v0:= temp;
  #L413018.  if v0 != 0 then goto L413044;
  #L41301c.  call temp:= `h`(v5) @signature `Ln/c/a/u/c;.h:()Ln/c/a/h;` @kind virtual;
  #L413022.  v5:= temp @kind object;
  #L413024.  call temp:= `u`(v5) @signature `Ln/c/a/h;.u:()J` @kind virtual;
  #L41302a.  v0:= temp @kind wide;
  #L41302c.  call temp:= `h`(v6) @signature `Ln/c/a/u/c;.h:()Ln/c/a/h;` @kind virtual;
  #L413032.  v5:= temp @kind object;
  #L413034.  call temp:= `u`(v5) @signature `Ln/c/a/h;.u:()J` @kind virtual;
  #L41303a.  v5:= temp @kind wide;
  #L41303c.  call temp:= `a`(v0, v5) @signature `Ln/c/a/w/d;.a:(JJ)I` @kind static;
  #L413042.  v0:= temp;
  #L413044.  return v0;
}
procedure `int` `compare`(`n.c.a.u.c$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Ln/c/a/u/c$a;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L412fcc.  v1:= (`n.c.a.u.c`) v1 @kind object;
  #L412fd0.  v2:= (`n.c.a.u.c`) v2 @kind object;
  #L412fd4.  call temp:= `a`(v0, v1, v2) @signature `Ln/c/a/u/c$a;.a:(Ln/c/a/u/c;Ln/c/a/u/c;)I` @kind virtual;
  #L412fda.  v1:= temp;
  #L412fdc.  return v1;
}
