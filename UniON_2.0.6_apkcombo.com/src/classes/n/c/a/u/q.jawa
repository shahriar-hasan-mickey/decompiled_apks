record `n.c.a.u.q` @kind class @AccessFlag PUBLIC_FINAL extends `n.c.a.w.a` @kind class, `java.io.Serializable` @kind interface {
  `int` `n.c.a.u.q.b` @AccessFlag PRIVATE_FINAL;
  `n.c.a.f` `n.c.a.u.q.c` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `java.lang.String` `n.c.a.u.q.d` @AccessFlag PRIVATE_FINAL_TRANSIENT;
}
global `n.c.a.u.q` `@@n.c.a.u.q.e` @AccessFlag PUBLIC_STATIC_FINAL;
global `n.c.a.u.q` `@@n.c.a.u.q.f` @AccessFlag PUBLIC_STATIC_FINAL;
global `n.c.a.u.q` `@@n.c.a.u.q.g` @AccessFlag PUBLIC_STATIC_FINAL;
global `n.c.a.u.q` `@@n.c.a.u.q.h` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.concurrent.atomic.AtomicReference` `@@n.c.a.u.q.i` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/c/a/u/q;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L41a4ec.  v0:= new `n.c.a.u.q`;
  #L41a4f0.  v1:= 8I;
  #L41a4f4.  v2:= 1868I;
  #L41a4f8.  v3:= 9I;
  #L41a4fc.  call temp:= `a`(v2, v3, v1) @signature `Ln/c/a/f;.a:(III)Ln/c/a/f;` @kind static;
  #L41a502.  v2:= temp @kind object;
  #L41a504.  v3:= -1I;
  #L41a506.  v4:= "Meiji" @kind object;
  #L41a50a.  call `<init>`(v0, v3, v2, v4) @signature `Ln/c/a/u/q;.<init>:(ILn/c/a/f;Ljava/lang/String;)V` @kind direct;
  #L41a510.  `@@n.c.a.u.q.e` @type ^`n.c.a.u.q` := v0 @kind object;
  #L41a514.  v0:= new `n.c.a.u.q`;
  #L41a518.  v2:= 1912I;
  #L41a51c.  v3:= 7I;
  #L41a51e.  v4:= 30I;
  #L41a522.  call temp:= `a`(v2, v3, v4) @signature `Ln/c/a/f;.a:(III)Ln/c/a/f;` @kind static;
  #L41a528.  v2:= temp @kind object;
  #L41a52a.  v3:= 0I;
  #L41a52c.  v4:= "Taisho" @kind object;
  #L41a530.  call `<init>`(v0, v3, v2, v4) @signature `Ln/c/a/u/q;.<init>:(ILn/c/a/f;Ljava/lang/String;)V` @kind direct;
  #L41a536.  `@@n.c.a.u.q.f` @type ^`n.c.a.u.q` := v0 @kind object;
  #L41a53a.  v0:= new `n.c.a.u.q`;
  #L41a53e.  v2:= 1926I;
  #L41a542.  v4:= 12I;
  #L41a546.  v5:= 25I;
  #L41a54a.  call temp:= `a`(v2, v4, v5) @signature `Ln/c/a/f;.a:(III)Ln/c/a/f;` @kind static;
  #L41a550.  v2:= temp @kind object;
  #L41a552.  v4:= 1I;
  #L41a554.  v5:= "Showa" @kind object;
  #L41a558.  call `<init>`(v0, v4, v2, v5) @signature `Ln/c/a/u/q;.<init>:(ILn/c/a/f;Ljava/lang/String;)V` @kind direct;
  #L41a55e.  `@@n.c.a.u.q.g` @type ^`n.c.a.u.q` := v0 @kind object;
  #L41a562.  v0:= new `n.c.a.u.q`;
  #L41a566.  v2:= 1989I;
  #L41a56a.  call temp:= `a`(v2, v4, v1) @signature `Ln/c/a/f;.a:(III)Ln/c/a/f;` @kind static;
  #L41a570.  v1:= temp @kind object;
  #L41a572.  v2:= 2I;
  #L41a574.  v5:= "Heisei" @kind object;
  #L41a578.  call `<init>`(v0, v2, v1, v5) @signature `Ln/c/a/u/q;.<init>:(ILn/c/a/f;Ljava/lang/String;)V` @kind direct;
  #L41a57e.  `@@n.c.a.u.q.h` @type ^`n.c.a.u.q` := v0 @kind object;
  #L41a582.  v0:= 4I;
  #L41a584.  v0:= new `n.c.a.u.q`[v0];
  #L41a588.  v1:= `@@n.c.a.u.q.e` @type ^`n.c.a.u.q` @kind object;
  #L41a58c.  v0[v3]:= v1 @kind object;
  #L41a590.  v1:= `@@n.c.a.u.q.f` @type ^`n.c.a.u.q` @kind object;
  #L41a594.  v0[v4]:= v1 @kind object;
  #L41a598.  v1:= `@@n.c.a.u.q.g` @type ^`n.c.a.u.q` @kind object;
  #L41a59c.  v0[v2]:= v1 @kind object;
  #L41a5a0.  v1:= `@@n.c.a.u.q.h` @type ^`n.c.a.u.q` @kind object;
  #L41a5a4.  v2:= 3I;
  #L41a5a6.  v0[v2]:= v1 @kind object;
  #L41a5aa.  v1:= new `java.util.concurrent.atomic.AtomicReference`;
  #L41a5ae.  call `<init>`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L41a5b4.  `@@n.c.a.u.q.i` @type ^`java.util.concurrent.atomic.AtomicReference` := v1 @kind object;
  #L41a5b8.  return @kind void;
}
procedure `void` `<init>`(`n.c.a.u.q` v0 @kind this, `int` v1 , `n.c.a.f` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Ln/c/a/u/q;.<init>:(ILn/c/a/f;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L41a5cc.  call `<init>`(v0) @signature `Ln/c/a/w/a;.<init>:()V` @kind direct;
  #L41a5d2.  v0.`n.c.a.u.q.b` @type ^`int` := v1;
  #L41a5d6.  v0.`n.c.a.u.q.c` @type ^`n.c.a.f` := v2 @kind object;
  #L41a5da.  v0.`n.c.a.u.q.d` @type ^`java.lang.String` := v3 @kind object;
  #L41a5de.  return @kind void;
}
procedure `n.c.a.u.q` `a`(`int` v2 ) @signature `Ln/c/a/u/q;.a:(I)Ln/c/a/u/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L41a408.  v0:= `@@n.c.a.u.q.i` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L41a40c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L41a412.  v0:= temp @kind object;
  #L41a414.  v0:= (`n.c.a.u.q`[]) v0 @kind object;
  #L41a418.  v1:= `@@n.c.a.u.q.e` @type ^`n.c.a.u.q` @kind object;
  #L41a41c.  v1:= v1.`n.c.a.u.q.b` @type ^`int`;
  #L41a420.  if v2 < v1 then goto L41a444;
  #L41a424.  v1:= length @variable v0;
  #L41a426.  v1:= v1 + -1;
  #L41a42a.  v1:= v0[v1] @kind object;
  #L41a42e.  v1:= v1.`n.c.a.u.q.b` @type ^`int`;
  #L41a432.  if v2 > v1 then goto L41a444;
  #L41a436.  call temp:= `b`(v2) @signature `Ln/c/a/u/q;.b:(I)I` @kind static;
  #L41a43c.  v2:= temp;
  #L41a43e.  v2:= v0[v2] @kind object;
  #L41a442.  return v2 @kind object;
  #L41a444.  v2:= new `n.c.a.b`;
  #L41a448.  v0:= "japaneseEra is invalid" @kind object;
  #L41a44c.  call `<init>`(v2, v0) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41a452.  throw v2;
}
procedure `n.c.a.u.q` `a`(`java.io.DataInput` v0 @kind object) @signature `Ln/c/a/u/q;.a:(Ljava/io/DataInput;)Ln/c/a/u/q;` @AccessFlag STATIC {
    temp;

  #L41a464.  call temp:= `readByte`(v0) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L41a46a.  v0:= temp;
  #L41a46c.  call temp:= `a`(v0) @signature `Ln/c/a/u/q;.a:(I)Ln/c/a/u/q;` @kind static;
  #L41a472.  v0:= temp @kind object;
  #L41a474.  return v0 @kind object;
}
procedure `n.c.a.u.q` `a`(`n.c.a.f` v4 @kind object) @signature `Ln/c/a/u/q;.a:(Ln/c/a/f;)Ln/c/a/u/q;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L41a37c.  v0:= `@@n.c.a.u.q.e` @type ^`n.c.a.u.q` @kind object;
  #L41a380.  v0:= v0.`n.c.a.u.q.c` @type ^`n.c.a.f` @kind object;
  #L41a384.  call temp:= `b`(v4, v0) @signature `Ln/c/a/f;.b:(Ln/c/a/u/b;)Z` @kind virtual;
  #L41a38a.  v0:= temp;
  #L41a38c.  if v0 != 0 then goto L41a3ca;
  #L41a390.  v0:= `@@n.c.a.u.q.i` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L41a394.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L41a39a.  v0:= temp @kind object;
  #L41a39c.  v0:= (`n.c.a.u.q`[]) v0 @kind object;
  #L41a3a0.  v1:= length @variable v0;
  #L41a3a2.  v1:= v1 + -1;
  #L41a3a6.  if v1 < 0 then goto L41a3c6;
  #L41a3aa.  v2:= v0[v1] @kind object;
  #L41a3ae.  v3:= v2.`n.c.a.u.q.c` @type ^`n.c.a.f` @kind object;
  #L41a3b2.  call temp:= `a`(v4, v3) @signature `Ln/c/a/f;.a:(Ln/c/a/u/b;)I` @kind virtual;
  #L41a3b8.  v3:= temp;
  #L41a3ba.  if v3 < 0 then goto L41a3c0;
  #L41a3be.  return v2 @kind object;
  #L41a3c0.  v1:= v1 + -1;
  #L41a3c4.  goto L41a3a6;
  #L41a3c6.  v4:= 0I;
  #L41a3c8.  return v4 @kind object;
  #L41a3ca.  v0:= new `n.c.a.b`;
  #L41a3ce.  v1:= new `java.lang.StringBuilder`;
  #L41a3d2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L41a3d8.  v2:= "Date too early: " @kind object;
  #L41a3dc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41a3e2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41a3e8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L41a3ee.  v4:= temp @kind object;
  #L41a3f0.  call `<init>`(v0, v4) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41a3f6.  throw v0;
}
procedure `int` `b`(`int` v0 ) @signature `Ln/c/a/u/q;.b:(I)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L41a278.  v0:= v0 + 1;
  #L41a27c.  return v0;
}
procedure `java.lang.Object` `readResolve`(`n.c.a.u.q` v3 @kind this) @signature `Ln/c/a/u/q;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L41a290.  v0:= v3.`n.c.a.u.q.b` @type ^`int`;
  #L41a294.  call temp:= `a`(v0) @signature `Ln/c/a/u/q;.a:(I)Ln/c/a/u/q;` @kind static;
  #L41a29a.  v0:= temp @kind object;
  #L41a29c.  return v0 @kind object;
  #L41a29e.  v0:= Exception @type ^`n.c.a.b` @kind object;
  #L41a2a0.  v1:= new `java.io.InvalidObjectException`;
  #L41a2a4.  v2:= "Invalid era" @kind object;
  #L41a2a8.  call `<init>`(v1, v2) @signature `Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41a2ae.  call temp:= `initCause`(v1, v0) @signature `Ljava/io/InvalidObjectException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L41a2b4.  throw v1;
  catch `n.c.a.b` @[L41a290..L41a29c] goto L41a29e;
}
procedure `n.c.a.u.q`[] `s`() @signature `Ln/c/a/u/q;.s:()[Ln/c/a/u/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L41a488.  v0:= `@@n.c.a.u.q.i` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L41a48c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L41a492.  v0:= temp @kind object;
  #L41a494.  v0:= (`n.c.a.u.q`[]) v0 @kind object;
  #L41a498.  v1:= length @variable v0;
  #L41a49a.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L41a4a0.  v0:= temp @kind object;
  #L41a4a2.  v0:= (`n.c.a.u.q`[]) v0 @kind object;
  #L41a4a6.  return v0 @kind object;
}
procedure `java.lang.Object` `writeReplace`(`n.c.a.u.q` v2 @kind this) @signature `Ln/c/a/u/q;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L41a2d8.  v0:= new `n.c.a.u.u`;
  #L41a2dc.  v1:= 2I;
  #L41a2de.  call `<init>`(v0, v1, v2) @signature `Ln/c/a/u/u;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L41a2e4.  return v0 @kind object;
}
procedure `n.c.a.x.n` `a`(`n.c.a.u.q` v1 @kind this, `n.c.a.x.i` v2 @kind object) @signature `Ln/c/a/u/q;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41a4b8.  v0:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L41a4bc.  if v2 != v0 then goto L41a4d2;
  #L41a4c0.  v2:= `@@n.c.a.u.o.e` @type ^`n.c.a.u.o` @kind object;
  #L41a4c4.  v0:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L41a4c8.  call temp:= `a`(v2, v0) @signature `Ln/c/a/u/o;.a:(Ln/c/a/x/a;)Ln/c/a/x/n;` @kind virtual;
  #L41a4ce.  v2:= temp @kind object;
  #L41a4d0.  return v2 @kind object;
  #L41a4d2.  call temp:= `a`(v1, v2) @signature `Ln/c/a/w/c;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @kind super;
  #L41a4d8.  v2:= temp @kind object;
  #L41a4da.  return v2 @kind object;
}
procedure `void` `a`(`n.c.a.u.q` v1 @kind this, `java.io.DataOutput` v2 @kind object) @signature `Ln/c/a/u/q;.a:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L41a5f0.  call temp:= `getValue`(v1) @signature `Ln/c/a/u/q;.getValue:()I` @kind virtual;
  #L41a5f6.  v0:= temp;
  #L41a5f8.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L41a5fe.  return @kind void;
}
procedure `n.c.a.f` `e`(`n.c.a.u.q` v3 @kind this) @signature `Ln/c/a/u/q;.e:()Ln/c/a/f;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L41a310.  v0:= v3.`n.c.a.u.q.b` @type ^`int`;
  #L41a314.  call temp:= `b`(v0) @signature `Ln/c/a/u/q;.b:(I)I` @kind static;
  #L41a31a.  v0:= temp;
  #L41a31c.  call temp:= `s`() @signature `Ln/c/a/u/q;.s:()[Ln/c/a/u/q;` @kind static;
  #L41a322.  v1:= temp @kind object;
  #L41a324.  v2:= length @variable v1;
  #L41a326.  v2:= v2 + -1;
  #L41a32a.  if v0 < v2 then goto L41a334;
  #L41a32e.  v0:= `@@n.c.a.f.f` @type ^`n.c.a.f` @kind object;
  #L41a332.  return v0 @kind object;
  #L41a334.  v0:= v0 + 1;
  #L41a338.  v0:= v1[v0] @kind object;
  #L41a33c.  call temp:= `h`(v0) @signature `Ln/c/a/u/q;.h:()Ln/c/a/f;` @kind virtual;
  #L41a342.  v0:= temp @kind object;
  #L41a344.  v1:= 1L;
  #L41a348.  call temp:= `a`(v0, v1) @signature `Ln/c/a/f;.a:(J)Ln/c/a/f;` @kind virtual;
  #L41a34e.  v0:= temp @kind object;
  #L41a350.  return v0 @kind object;
}
procedure `int` `getValue`(`n.c.a.u.q` v1 @kind this) @signature `Ln/c/a/u/q;.getValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41a260.  v0:= v1.`n.c.a.u.q.b` @type ^`int`;
  #L41a264.  return v0;
}
procedure `n.c.a.f` `h`(`n.c.a.u.q` v1 @kind this) @signature `Ln/c/a/u/q;.h:()Ln/c/a/f;` @AccessFlag  {
    temp;
    v0;

  #L41a364.  v0:= v1.`n.c.a.u.q.c` @type ^`n.c.a.f` @kind object;
  #L41a368.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`n.c.a.u.q` v1 @kind this) @signature `Ln/c/a/u/q;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41a2f8.  v0:= v1.`n.c.a.u.q.d` @type ^`java.lang.String` @kind object;
  #L41a2fc.  return v0 @kind object;
}
