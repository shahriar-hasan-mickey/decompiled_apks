record `n.c.a.u.x` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `n.c.a.u.i` @kind interface {
}
global `n.c.a.u.x` `@@n.c.a.u.x.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.u.x` `@@n.c.a.u.x.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.u.x`[] `@@n.c.a.u.x.d` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Ln/c/a/u/x;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L41c698.  v0:= new `n.c.a.u.x`;
  #L41c69c.  v1:= 0I;
  #L41c69e.  v2:= "BEFORE_BE" @kind object;
  #L41c6a2.  call `<init>`(v0, v2, v1) @signature `Ln/c/a/u/x;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L41c6a8.  `@@n.c.a.u.x.b` @type ^`n.c.a.u.x` := v0 @kind object;
  #L41c6ac.  v0:= new `n.c.a.u.x`;
  #L41c6b0.  v2:= 1I;
  #L41c6b2.  v3:= "BE" @kind object;
  #L41c6b6.  call `<init>`(v0, v3, v2) @signature `Ln/c/a/u/x;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L41c6bc.  `@@n.c.a.u.x.c` @type ^`n.c.a.u.x` := v0 @kind object;
  #L41c6c0.  v0:= 2I;
  #L41c6c2.  v0:= new `n.c.a.u.x`[v0];
  #L41c6c6.  v3:= `@@n.c.a.u.x.b` @type ^`n.c.a.u.x` @kind object;
  #L41c6ca.  v0[v1]:= v3 @kind object;
  #L41c6ce.  v1:= `@@n.c.a.u.x.c` @type ^`n.c.a.u.x` @kind object;
  #L41c6d2.  v0[v2]:= v1 @kind object;
  #L41c6d6.  `@@n.c.a.u.x.d` @type ^`n.c.a.u.x`[] := v0 @kind object;
  #L41c6da.  return @kind void;
}
procedure `void` `<init>`(`n.c.a.u.x` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Ln/c/a/u/x;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L41c6ec.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L41c6f2.  return @kind void;
}
procedure `n.c.a.u.x` `a`(`int` v1 ) @signature `Ln/c/a/u/x;.a:(I)Ln/c/a/u/x;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41c568.  if v1 == 0 then goto L41c588;
  #L41c56c.  v0:= 1I;
  #L41c56e.  if v1 != v0 then goto L41c578;
  #L41c572.  v1:= `@@n.c.a.u.x.c` @type ^`n.c.a.u.x` @kind object;
  #L41c576.  return v1 @kind object;
  #L41c578.  v1:= new `n.c.a.b`;
  #L41c57c.  v0:= "Era is not valid for ThaiBuddhistEra" @kind object;
  #L41c580.  call `<init>`(v1, v0) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41c586.  throw v1;
  #L41c588.  v1:= `@@n.c.a.u.x.b` @type ^`n.c.a.u.x` @kind object;
  #L41c58c.  return v1 @kind object;
}
procedure `n.c.a.u.x` `a`(`java.io.DataInput` v0 @kind object) @signature `Ln/c/a/u/x;.a:(Ljava/io/DataInput;)Ln/c/a/u/x;` @AccessFlag STATIC {
    temp;

  #L41c5a0.  call temp:= `readByte`(v0) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L41c5a6.  v0:= temp;
  #L41c5a8.  call temp:= `a`(v0) @signature `Ln/c/a/u/x;.a:(I)Ln/c/a/u/x;` @kind static;
  #L41c5ae.  v0:= temp @kind object;
  #L41c5b0.  return v0 @kind object;
}
procedure `n.c.a.u.x` `valueOf`(`java.lang.String` v1 @kind object) @signature `Ln/c/a/u/x;.valueOf:(Ljava/lang/String;)Ln/c/a/u/x;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41c5c4.  v0:= constclass @type ^`n.c.a.u.x` @kind object;
  #L41c5c8.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L41c5ce.  v1:= temp @kind object;
  #L41c5d0.  v1:= (`n.c.a.u.x`) v1 @kind object;
  #L41c5d4.  return v1 @kind object;
}
procedure `n.c.a.u.x`[] `values`() @signature `Ln/c/a/u/x;.values:()[Ln/c/a/u/x;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41c5e8.  v0:= `@@n.c.a.u.x.d` @type ^`n.c.a.u.x`[] @kind object;
  #L41c5ec.  call temp:= `clone`(v0) @signature `[Ln/c/a/u/x;.clone:()Ljava/lang/Object;` @kind virtual;
  #L41c5f2.  v0:= temp @kind object;
  #L41c5f4.  v0:= (`n.c.a.u.x`[]) v0 @kind object;
  #L41c5f8.  return v0 @kind object;
}
procedure `java.lang.Object` `writeReplace`(`n.c.a.u.x` v2 @kind this) @signature `Ln/c/a/u/x;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L41c4e4.  v0:= new `n.c.a.u.u`;
  #L41c4e8.  v1:= 8I;
  #L41c4ec.  call `<init>`(v0, v1, v2) @signature `Ln/c/a/u/u;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L41c4f2.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`n.c.a.u.x` v1 @kind this, `n.c.a.x.k` v2 @kind object) @signature `Ln/c/a/u/x;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41c468.  call temp:= `e`() @signature `Ln/c/a/x/j;.e:()Ln/c/a/x/k;` @kind static;
  #L41c46e.  v0:= temp @kind object;
  #L41c470.  if v2 != v0 then goto L41c47a;
  #L41c474.  v2:= `@@n.c.a.x.b.q` @type ^`n.c.a.x.b` @kind object;
  #L41c478.  return v2 @kind object;
  #L41c47a.  call temp:= `a`() @signature `Ln/c/a/x/j;.a:()Ln/c/a/x/k;` @kind static;
  #L41c480.  v0:= temp @kind object;
  #L41c482.  if v2 == v0 then goto L41c4ce;
  #L41c486.  call temp:= `f`() @signature `Ln/c/a/x/j;.f:()Ln/c/a/x/k;` @kind static;
  #L41c48c.  v0:= temp @kind object;
  #L41c48e.  if v2 == v0 then goto L41c4ce;
  #L41c492.  call temp:= `g`() @signature `Ln/c/a/x/j;.g:()Ln/c/a/x/k;` @kind static;
  #L41c498.  v0:= temp @kind object;
  #L41c49a.  if v2 == v0 then goto L41c4ce;
  #L41c49e.  call temp:= `d`() @signature `Ln/c/a/x/j;.d:()Ln/c/a/x/k;` @kind static;
  #L41c4a4.  v0:= temp @kind object;
  #L41c4a6.  if v2 == v0 then goto L41c4ce;
  #L41c4aa.  call temp:= `b`() @signature `Ln/c/a/x/j;.b:()Ln/c/a/x/k;` @kind static;
  #L41c4b0.  v0:= temp @kind object;
  #L41c4b2.  if v2 == v0 then goto L41c4ce;
  #L41c4b6.  call temp:= `c`() @signature `Ln/c/a/x/j;.c:()Ln/c/a/x/k;` @kind static;
  #L41c4bc.  v0:= temp @kind object;
  #L41c4be.  if v2 != v0 then goto L41c4c4;
  #L41c4c2.  goto L41c4ce;
  #L41c4c4.  call temp:= `a`(v2, v1) @signature `Ln/c/a/x/k;.a:(Ln/c/a/x/e;)Ljava/lang/Object;` @kind interface;
  #L41c4ca.  v2:= temp @kind object;
  #L41c4cc.  return v2 @kind object;
  #L41c4ce.  v2:= 0I;
  #L41c4d0.  return v2 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.u.x` v3 @kind this, `n.c.a.x.d` v4 @kind object) @signature `Ln/c/a/u/x;.a:(Ln/c/a/x/d;)Ln/c/a/x/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L41c60c.  v0:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L41c610.  call temp:= `getValue`(v3) @signature `Ln/c/a/u/x;.getValue:()I` @kind virtual;
  #L41c616.  v1:= temp;
  #L41c618.  v1:= (`long`) v1 @kind i2l;
  #L41c61a.  call temp:= `a`(v4, v0, v1) @signature `Ln/c/a/x/d;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @kind interface;
  #L41c620.  v4:= temp @kind object;
  #L41c622.  return v4 @kind object;
}
procedure `n.c.a.x.n` `a`(`n.c.a.u.x` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/u/x;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L41c634.  v0:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L41c638.  if v4 != v0 then goto L41c646;
  #L41c63c.  call temp:= `h`(v4) @signature `Ln/c/a/x/i;.h:()Ln/c/a/x/n;` @kind interface;
  #L41c642.  v4:= temp @kind object;
  #L41c644.  return v4 @kind object;
  #L41c646.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L41c64a.  if v0 != 0 then goto L41c658;
  #L41c64e.  call temp:= `c`(v4, v3) @signature `Ln/c/a/x/i;.c:(Ln/c/a/x/e;)Ln/c/a/x/n;` @kind interface;
  #L41c654.  v4:= temp @kind object;
  #L41c656.  return v4 @kind object;
  #L41c658.  v0:= new `n.c.a.x.m`;
  #L41c65c.  v1:= new `java.lang.StringBuilder`;
  #L41c660.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L41c666.  v2:= "Unsupported field: " @kind object;
  #L41c66a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41c670.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41c676.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L41c67c.  v4:= temp @kind object;
  #L41c67e.  call `<init>`(v0, v4) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41c684.  throw v0;
}
procedure `void` `a`(`n.c.a.u.x` v1 @kind this, `java.io.DataOutput` v2 @kind object) @signature `Ln/c/a/u/x;.a:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L41c704.  call temp:= `getValue`(v1) @signature `Ln/c/a/u/x;.getValue:()I` @kind virtual;
  #L41c70a.  v0:= temp;
  #L41c70c.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L41c712.  return @kind void;
}
procedure `boolean` `b`(`n.c.a.u.x` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/u/x;.b:(Ln/c/a/x/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L41c3d0.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L41c3d4.  v1:= 1I;
  #L41c3d6.  v2:= 0I;
  #L41c3d8.  if v0 == 0 then goto L41c3ea;
  #L41c3dc.  v0:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L41c3e0.  if v4 != v0 then goto L41c3e6;
  #L41c3e4.  goto L41c3e8;
  #L41c3e6.  v1:= 0I;
  #L41c3e8.  return v1;
  #L41c3ea.  if v4 == 0 then goto L41c3fc;
  #L41c3ee.  call temp:= `a`(v4, v3) @signature `Ln/c/a/x/i;.a:(Ln/c/a/x/e;)Z` @kind interface;
  #L41c3f4.  v4:= temp;
  #L41c3f6.  if v4 == 0 then goto L41c3fc;
  #L41c3fa.  goto L41c3fe;
  #L41c3fc.  v1:= 0I;
  #L41c3fe.  return v1;
}
procedure `int` `c`(`n.c.a.u.x` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/u/x;.c:(Ln/c/a/x/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L41c410.  v0:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L41c414.  if v4 != v0 then goto L41c422;
  #L41c418.  call temp:= `getValue`(v3) @signature `Ln/c/a/u/x;.getValue:()I` @kind virtual;
  #L41c41e.  v4:= temp;
  #L41c420.  return v4;
  #L41c422.  call temp:= `a`(v3, v4) @signature `Ln/c/a/u/x;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @kind virtual;
  #L41c428.  v0:= temp @kind object;
  #L41c42a.  call temp:= `d`(v3, v4) @signature `Ln/c/a/u/x;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L41c430.  v1:= temp @kind wide;
  #L41c432.  call temp:= `a`(v0, v1, v4) @signature `Ln/c/a/x/n;.a:(JLn/c/a/x/i;)I` @kind virtual;
  #L41c438.  v4:= temp;
  #L41c43a.  return v4;
}
procedure `long` `d`(`n.c.a.u.x` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/u/x;.d:(Ln/c/a/x/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L41c504.  v0:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L41c508.  if v4 != v0 then goto L41c518;
  #L41c50c.  call temp:= `getValue`(v3) @signature `Ln/c/a/u/x;.getValue:()I` @kind virtual;
  #L41c512.  v4:= temp;
  #L41c514.  v0:= (`long`) v4 @kind i2l;
  #L41c516.  return v0 @kind wide;
  #L41c518.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L41c51c.  if v0 != 0 then goto L41c52a;
  #L41c520.  call temp:= `b`(v4, v3) @signature `Ln/c/a/x/i;.b:(Ln/c/a/x/e;)J` @kind interface;
  #L41c526.  v0:= temp @kind wide;
  #L41c528.  return v0 @kind wide;
  #L41c52a.  v0:= new `n.c.a.x.m`;
  #L41c52e.  v1:= new `java.lang.StringBuilder`;
  #L41c532.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L41c538.  v2:= "Unsupported field: " @kind object;
  #L41c53c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41c542.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41c548.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L41c54e.  v4:= temp @kind object;
  #L41c550.  call `<init>`(v0, v4) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41c556.  throw v0;
}
procedure `int` `getValue`(`n.c.a.u.x` v1 @kind this) @signature `Ln/c/a/u/x;.getValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41c44c.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L41c452.  v0:= temp;
  #L41c454.  return v0;
}
