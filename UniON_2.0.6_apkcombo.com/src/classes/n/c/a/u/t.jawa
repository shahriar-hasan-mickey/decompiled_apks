record `n.c.a.u.t` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `n.c.a.u.i` @kind interface {
}
global `n.c.a.u.t` `@@n.c.a.u.t.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.u.t` `@@n.c.a.u.t.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.u.t`[] `@@n.c.a.u.t.d` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Ln/c/a/u/t;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L41b490.  v0:= new `n.c.a.u.t`;
  #L41b494.  v1:= 0I;
  #L41b496.  v2:= "BEFORE_ROC" @kind object;
  #L41b49a.  call `<init>`(v0, v2, v1) @signature `Ln/c/a/u/t;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L41b4a0.  `@@n.c.a.u.t.b` @type ^`n.c.a.u.t` := v0 @kind object;
  #L41b4a4.  v0:= new `n.c.a.u.t`;
  #L41b4a8.  v2:= 1I;
  #L41b4aa.  v3:= "ROC" @kind object;
  #L41b4ae.  call `<init>`(v0, v3, v2) @signature `Ln/c/a/u/t;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L41b4b4.  `@@n.c.a.u.t.c` @type ^`n.c.a.u.t` := v0 @kind object;
  #L41b4b8.  v0:= 2I;
  #L41b4ba.  v0:= new `n.c.a.u.t`[v0];
  #L41b4be.  v3:= `@@n.c.a.u.t.b` @type ^`n.c.a.u.t` @kind object;
  #L41b4c2.  v0[v1]:= v3 @kind object;
  #L41b4c6.  v1:= `@@n.c.a.u.t.c` @type ^`n.c.a.u.t` @kind object;
  #L41b4ca.  v0[v2]:= v1 @kind object;
  #L41b4ce.  `@@n.c.a.u.t.d` @type ^`n.c.a.u.t`[] := v0 @kind object;
  #L41b4d2.  return @kind void;
}
procedure `void` `<init>`(`n.c.a.u.t` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Ln/c/a/u/t;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L41b4e4.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L41b4ea.  return @kind void;
}
procedure `n.c.a.u.t` `a`(`int` v3 ) @signature `Ln/c/a/u/t;.a:(I)Ln/c/a/u/t;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L41b344.  if v3 == 0 then goto L41b382;
  #L41b348.  v0:= 1I;
  #L41b34a.  if v3 != v0 then goto L41b354;
  #L41b34e.  v3:= `@@n.c.a.u.t.c` @type ^`n.c.a.u.t` @kind object;
  #L41b352.  return v3 @kind object;
  #L41b354.  v0:= new `n.c.a.b`;
  #L41b358.  v1:= new `java.lang.StringBuilder`;
  #L41b35c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L41b362.  v2:= "Invalid era: " @kind object;
  #L41b366.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41b36c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L41b372.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L41b378.  v3:= temp @kind object;
  #L41b37a.  call `<init>`(v0, v3) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41b380.  throw v0;
  #L41b382.  v3:= `@@n.c.a.u.t.b` @type ^`n.c.a.u.t` @kind object;
  #L41b386.  return v3 @kind object;
}
procedure `n.c.a.u.t` `a`(`java.io.DataInput` v0 @kind object) @signature `Ln/c/a/u/t;.a:(Ljava/io/DataInput;)Ln/c/a/u/t;` @AccessFlag STATIC {
    temp;

  #L41b398.  call temp:= `readByte`(v0) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L41b39e.  v0:= temp;
  #L41b3a0.  call temp:= `a`(v0) @signature `Ln/c/a/u/t;.a:(I)Ln/c/a/u/t;` @kind static;
  #L41b3a6.  v0:= temp @kind object;
  #L41b3a8.  return v0 @kind object;
}
procedure `n.c.a.u.t` `valueOf`(`java.lang.String` v1 @kind object) @signature `Ln/c/a/u/t;.valueOf:(Ljava/lang/String;)Ln/c/a/u/t;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41b3bc.  v0:= constclass @type ^`n.c.a.u.t` @kind object;
  #L41b3c0.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L41b3c6.  v1:= temp @kind object;
  #L41b3c8.  v1:= (`n.c.a.u.t`) v1 @kind object;
  #L41b3cc.  return v1 @kind object;
}
procedure `n.c.a.u.t`[] `values`() @signature `Ln/c/a/u/t;.values:()[Ln/c/a/u/t;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L41b3e0.  v0:= `@@n.c.a.u.t.d` @type ^`n.c.a.u.t`[] @kind object;
  #L41b3e4.  call temp:= `clone`(v0) @signature `[Ln/c/a/u/t;.clone:()Ljava/lang/Object;` @kind virtual;
  #L41b3ea.  v0:= temp @kind object;
  #L41b3ec.  v0:= (`n.c.a.u.t`[]) v0 @kind object;
  #L41b3f0.  return v0 @kind object;
}
procedure `java.lang.Object` `writeReplace`(`n.c.a.u.t` v2 @kind this) @signature `Ln/c/a/u/t;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L41b2c0.  v0:= new `n.c.a.u.u`;
  #L41b2c4.  v1:= 6I;
  #L41b2c6.  call `<init>`(v0, v1, v2) @signature `Ln/c/a/u/u;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L41b2cc.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`n.c.a.u.t` v1 @kind this, `n.c.a.x.k` v2 @kind object) @signature `Ln/c/a/u/t;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41b244.  call temp:= `e`() @signature `Ln/c/a/x/j;.e:()Ln/c/a/x/k;` @kind static;
  #L41b24a.  v0:= temp @kind object;
  #L41b24c.  if v2 != v0 then goto L41b256;
  #L41b250.  v2:= `@@n.c.a.x.b.q` @type ^`n.c.a.x.b` @kind object;
  #L41b254.  return v2 @kind object;
  #L41b256.  call temp:= `a`() @signature `Ln/c/a/x/j;.a:()Ln/c/a/x/k;` @kind static;
  #L41b25c.  v0:= temp @kind object;
  #L41b25e.  if v2 == v0 then goto L41b2aa;
  #L41b262.  call temp:= `f`() @signature `Ln/c/a/x/j;.f:()Ln/c/a/x/k;` @kind static;
  #L41b268.  v0:= temp @kind object;
  #L41b26a.  if v2 == v0 then goto L41b2aa;
  #L41b26e.  call temp:= `g`() @signature `Ln/c/a/x/j;.g:()Ln/c/a/x/k;` @kind static;
  #L41b274.  v0:= temp @kind object;
  #L41b276.  if v2 == v0 then goto L41b2aa;
  #L41b27a.  call temp:= `d`() @signature `Ln/c/a/x/j;.d:()Ln/c/a/x/k;` @kind static;
  #L41b280.  v0:= temp @kind object;
  #L41b282.  if v2 == v0 then goto L41b2aa;
  #L41b286.  call temp:= `b`() @signature `Ln/c/a/x/j;.b:()Ln/c/a/x/k;` @kind static;
  #L41b28c.  v0:= temp @kind object;
  #L41b28e.  if v2 == v0 then goto L41b2aa;
  #L41b292.  call temp:= `c`() @signature `Ln/c/a/x/j;.c:()Ln/c/a/x/k;` @kind static;
  #L41b298.  v0:= temp @kind object;
  #L41b29a.  if v2 != v0 then goto L41b2a0;
  #L41b29e.  goto L41b2aa;
  #L41b2a0.  call temp:= `a`(v2, v1) @signature `Ln/c/a/x/k;.a:(Ln/c/a/x/e;)Ljava/lang/Object;` @kind interface;
  #L41b2a6.  v2:= temp @kind object;
  #L41b2a8.  return v2 @kind object;
  #L41b2aa.  v2:= 0I;
  #L41b2ac.  return v2 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.u.t` v3 @kind this, `n.c.a.x.d` v4 @kind object) @signature `Ln/c/a/u/t;.a:(Ln/c/a/x/d;)Ln/c/a/x/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L41b404.  v0:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L41b408.  call temp:= `getValue`(v3) @signature `Ln/c/a/u/t;.getValue:()I` @kind virtual;
  #L41b40e.  v1:= temp;
  #L41b410.  v1:= (`long`) v1 @kind i2l;
  #L41b412.  call temp:= `a`(v4, v0, v1) @signature `Ln/c/a/x/d;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @kind interface;
  #L41b418.  v4:= temp @kind object;
  #L41b41a.  return v4 @kind object;
}
procedure `n.c.a.x.n` `a`(`n.c.a.u.t` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/u/t;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L41b42c.  v0:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L41b430.  if v4 != v0 then goto L41b43e;
  #L41b434.  call temp:= `h`(v4) @signature `Ln/c/a/x/i;.h:()Ln/c/a/x/n;` @kind interface;
  #L41b43a.  v4:= temp @kind object;
  #L41b43c.  return v4 @kind object;
  #L41b43e.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L41b442.  if v0 != 0 then goto L41b450;
  #L41b446.  call temp:= `c`(v4, v3) @signature `Ln/c/a/x/i;.c:(Ln/c/a/x/e;)Ln/c/a/x/n;` @kind interface;
  #L41b44c.  v4:= temp @kind object;
  #L41b44e.  return v4 @kind object;
  #L41b450.  v0:= new `n.c.a.x.m`;
  #L41b454.  v1:= new `java.lang.StringBuilder`;
  #L41b458.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L41b45e.  v2:= "Unsupported field: " @kind object;
  #L41b462.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41b468.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41b46e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L41b474.  v4:= temp @kind object;
  #L41b476.  call `<init>`(v0, v4) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41b47c.  throw v0;
}
procedure `void` `a`(`n.c.a.u.t` v1 @kind this, `java.io.DataOutput` v2 @kind object) @signature `Ln/c/a/u/t;.a:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L41b4fc.  call temp:= `getValue`(v1) @signature `Ln/c/a/u/t;.getValue:()I` @kind virtual;
  #L41b502.  v0:= temp;
  #L41b504.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L41b50a.  return @kind void;
}
procedure `boolean` `b`(`n.c.a.u.t` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/u/t;.b:(Ln/c/a/x/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L41b1ac.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L41b1b0.  v1:= 1I;
  #L41b1b2.  v2:= 0I;
  #L41b1b4.  if v0 == 0 then goto L41b1c6;
  #L41b1b8.  v0:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L41b1bc.  if v4 != v0 then goto L41b1c2;
  #L41b1c0.  goto L41b1c4;
  #L41b1c2.  v1:= 0I;
  #L41b1c4.  return v1;
  #L41b1c6.  if v4 == 0 then goto L41b1d8;
  #L41b1ca.  call temp:= `a`(v4, v3) @signature `Ln/c/a/x/i;.a:(Ln/c/a/x/e;)Z` @kind interface;
  #L41b1d0.  v4:= temp;
  #L41b1d2.  if v4 == 0 then goto L41b1d8;
  #L41b1d6.  goto L41b1da;
  #L41b1d8.  v1:= 0I;
  #L41b1da.  return v1;
}
procedure `int` `c`(`n.c.a.u.t` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/u/t;.c:(Ln/c/a/x/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L41b1ec.  v0:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L41b1f0.  if v4 != v0 then goto L41b1fe;
  #L41b1f4.  call temp:= `getValue`(v3) @signature `Ln/c/a/u/t;.getValue:()I` @kind virtual;
  #L41b1fa.  v4:= temp;
  #L41b1fc.  return v4;
  #L41b1fe.  call temp:= `a`(v3, v4) @signature `Ln/c/a/u/t;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @kind virtual;
  #L41b204.  v0:= temp @kind object;
  #L41b206.  call temp:= `d`(v3, v4) @signature `Ln/c/a/u/t;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L41b20c.  v1:= temp @kind wide;
  #L41b20e.  call temp:= `a`(v0, v1, v4) @signature `Ln/c/a/x/n;.a:(JLn/c/a/x/i;)I` @kind virtual;
  #L41b214.  v4:= temp;
  #L41b216.  return v4;
}
procedure `long` `d`(`n.c.a.u.t` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/u/t;.d:(Ln/c/a/x/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L41b2e0.  v0:= `@@n.c.a.x.a.E` @type ^`n.c.a.x.a` @kind object;
  #L41b2e4.  if v4 != v0 then goto L41b2f4;
  #L41b2e8.  call temp:= `getValue`(v3) @signature `Ln/c/a/u/t;.getValue:()I` @kind virtual;
  #L41b2ee.  v4:= temp;
  #L41b2f0.  v0:= (`long`) v4 @kind i2l;
  #L41b2f2.  return v0 @kind wide;
  #L41b2f4.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L41b2f8.  if v0 != 0 then goto L41b306;
  #L41b2fc.  call temp:= `b`(v4, v3) @signature `Ln/c/a/x/i;.b:(Ln/c/a/x/e;)J` @kind interface;
  #L41b302.  v0:= temp @kind wide;
  #L41b304.  return v0 @kind wide;
  #L41b306.  v0:= new `n.c.a.x.m`;
  #L41b30a.  v1:= new `java.lang.StringBuilder`;
  #L41b30e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L41b314.  v2:= "Unsupported field: " @kind object;
  #L41b318.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41b31e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41b324.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L41b32a.  v4:= temp @kind object;
  #L41b32c.  call `<init>`(v0, v4) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41b332.  throw v0;
}
procedure `int` `getValue`(`n.c.a.u.t` v1 @kind this) @signature `Ln/c/a/u/t;.getValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41b228.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L41b22e.  v0:= temp;
  #L41b230.  return v0;
}
