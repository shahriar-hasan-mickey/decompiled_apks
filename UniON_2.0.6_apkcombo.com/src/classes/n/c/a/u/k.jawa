record `n.c.a.u.k` @kind class @AccessFlag PUBLIC_FINAL extends `n.c.a.u.a` @kind class, `java.io.Serializable` @kind interface {
  `n.c.a.u.l` `n.c.a.u.k.b` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `int` `n.c.a.u.k.c` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `int` `n.c.a.u.k.d` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `int` `n.c.a.u.k.e` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `int` `n.c.a.u.k.f` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `n.c.a.c` `n.c.a.u.k.g` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `long` `n.c.a.u.k.h` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.Integer`[] `@@n.c.a.u.k.A` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Integer`[] `@@n.c.a.u.k.B` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Integer`[] `@@n.c.a.u.k.C` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Integer`[] `@@n.c.a.u.k.D` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Integer`[] `@@n.c.a.u.k.E` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@n.c.a.u.k.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@n.c.a.u.k.j` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@n.c.a.u.k.k` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@n.c.a.u.k.l` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@n.c.a.u.k.m` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@n.c.a.u.k.n` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@n.c.a.u.k.o` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@n.c.a.u.k.p` @AccessFlag PRIVATE_STATIC_FINAL;
global `char` `@@n.c.a.u.k.q` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@n.c.a.u.k.r` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@n.c.a.u.k.s` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.HashMap` `@@n.c.a.u.k.t` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.HashMap` `@@n.c.a.u.k.u` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.HashMap` `@@n.c.a.u.k.v` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Long`[] `@@n.c.a.u.k.w` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Integer`[] `@@n.c.a.u.k.x` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Integer`[] `@@n.c.a.u.k.y` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Integer`[] `@@n.c.a.u.k.z` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/c/a/u/k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L416bfc.  v0:= 12I;
  #L416c00.  v1:= new `int`[v0];
  #L416c04.  goto L416ee4;
  #L416c0a.  `@@n.c.a.u.k.i` @type ^`int`[] := v1 @kind object;
  #L416c0e.  v1:= new `int`[v0];
  #L416c12.  goto L416f1c;
  #L416c18.  `@@n.c.a.u.k.j` @type ^`int`[] := v1 @kind object;
  #L416c1c.  v1:= new `int`[v0];
  #L416c20.  goto L416f54;
  #L416c26.  `@@n.c.a.u.k.k` @type ^`int`[] := v1 @kind object;
  #L416c2a.  v0:= new `int`[v0];
  #L416c2e.  goto L416f8c;
  #L416c34.  `@@n.c.a.u.k.l` @type ^`int`[] := v0 @kind object;
  #L416c38.  v0:= 7I;
  #L416c3a.  v1:= new `int`[v0];
  #L416c3e.  goto L416fc4;
  #L416c44.  `@@n.c.a.u.k.m` @type ^`int`[] := v1 @kind object;
  #L416c48.  v1:= new `int`[v0];
  #L416c4c.  goto L416fe8;
  #L416c52.  `@@n.c.a.u.k.n` @type ^`int`[] := v1 @kind object;
  #L416c56.  v0:= new `int`[v0];
  #L416c5a.  goto L41700c;
  #L416c60.  `@@n.c.a.u.k.o` @type ^`int`[] := v0 @kind object;
  #L416c64.  v0:= 30I;
  #L416c68.  v0:= new `int`[v0];
  #L416c6c.  goto L417030;
  #L416c72.  `@@n.c.a.u.k.p` @type ^`int`[] := v0 @kind object;
  #L416c76.  v0:= `@@java.io.File.separatorChar` @type ^`char` @kind char;
  #L416c7a.  `@@n.c.a.u.k.q` @type ^`char` := v0 @kind char;
  #L416c7e.  v0:= `@@java.io.File.pathSeparator` @type ^`java.lang.String` @kind object;
  #L416c82.  `@@n.c.a.u.k.r` @type ^`java.lang.String` := v0 @kind object;
  #L416c86.  v0:= new `java.lang.StringBuilder`;
  #L416c8a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L416c90.  v1:= "org" @kind object;
  #L416c94.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L416c9a.  v1:= `@@n.c.a.u.k.q` @type ^`char` @kind char;
  #L416c9e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L416ca4.  v1:= "threeten" @kind object;
  #L416ca8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L416cae.  v1:= `@@n.c.a.u.k.q` @type ^`char` @kind char;
  #L416cb2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L416cb8.  v1:= "bp" @kind object;
  #L416cbc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L416cc2.  v1:= `@@n.c.a.u.k.q` @type ^`char` @kind char;
  #L416cc6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L416ccc.  v1:= "chrono" @kind object;
  #L416cd0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L416cd6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L416cdc.  v0:= temp @kind object;
  #L416cde.  `@@n.c.a.u.k.s` @type ^`java.lang.String` := v0 @kind object;
  #L416ce2.  v0:= new `java.util.HashMap`;
  #L416ce6.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L416cec.  `@@n.c.a.u.k.t` @type ^`java.util.HashMap` := v0 @kind object;
  #L416cf0.  v0:= new `java.util.HashMap`;
  #L416cf4.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L416cfa.  `@@n.c.a.u.k.u` @type ^`java.util.HashMap` := v0 @kind object;
  #L416cfe.  v0:= new `java.util.HashMap`;
  #L416d02.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L416d08.  `@@n.c.a.u.k.v` @type ^`java.util.HashMap` := v0 @kind object;
  #L416d0c.  v0:= `@@n.c.a.u.k.i` @type ^`int`[] @kind object;
  #L416d10.  v0:= length @variable v0;
  #L416d12.  v0:= new `java.lang.Integer`[v0];
  #L416d16.  `@@n.c.a.u.k.A` @type ^`java.lang.Integer`[] := v0 @kind object;
  #L416d1a.  v0:= 0I;
  #L416d1c.  v1:= 0I;
  #L416d1e.  v2:= `@@n.c.a.u.k.i` @type ^`int`[] @kind object;
  #L416d22.  v3:= length @variable v2;
  #L416d24.  if v1 >= v3 then goto L416d42;
  #L416d28.  v3:= `@@n.c.a.u.k.A` @type ^`java.lang.Integer`[] @kind object;
  #L416d2c.  v2:= v2[v1];
  #L416d30.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L416d36.  v2:= temp @kind object;
  #L416d38.  v3[v1]:= v2 @kind object;
  #L416d3c.  v1:= v1 + 1;
  #L416d40.  goto L416d1e;
  #L416d42.  v1:= `@@n.c.a.u.k.j` @type ^`int`[] @kind object;
  #L416d46.  v1:= length @variable v1;
  #L416d48.  v1:= new `java.lang.Integer`[v1];
  #L416d4c.  `@@n.c.a.u.k.B` @type ^`java.lang.Integer`[] := v1 @kind object;
  #L416d50.  v1:= 0I;
  #L416d52.  v2:= `@@n.c.a.u.k.j` @type ^`int`[] @kind object;
  #L416d56.  v3:= length @variable v2;
  #L416d58.  if v1 >= v3 then goto L416d76;
  #L416d5c.  v3:= `@@n.c.a.u.k.B` @type ^`java.lang.Integer`[] @kind object;
  #L416d60.  v2:= v2[v1];
  #L416d64.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L416d6a.  v2:= temp @kind object;
  #L416d6c.  v3[v1]:= v2 @kind object;
  #L416d70.  v1:= v1 + 1;
  #L416d74.  goto L416d52;
  #L416d76.  v1:= `@@n.c.a.u.k.k` @type ^`int`[] @kind object;
  #L416d7a.  v1:= length @variable v1;
  #L416d7c.  v1:= new `java.lang.Integer`[v1];
  #L416d80.  `@@n.c.a.u.k.C` @type ^`java.lang.Integer`[] := v1 @kind object;
  #L416d84.  v1:= 0I;
  #L416d86.  v2:= `@@n.c.a.u.k.k` @type ^`int`[] @kind object;
  #L416d8a.  v3:= length @variable v2;
  #L416d8c.  if v1 >= v3 then goto L416daa;
  #L416d90.  v3:= `@@n.c.a.u.k.C` @type ^`java.lang.Integer`[] @kind object;
  #L416d94.  v2:= v2[v1];
  #L416d98.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L416d9e.  v2:= temp @kind object;
  #L416da0.  v3[v1]:= v2 @kind object;
  #L416da4.  v1:= v1 + 1;
  #L416da8.  goto L416d86;
  #L416daa.  v1:= `@@n.c.a.u.k.l` @type ^`int`[] @kind object;
  #L416dae.  v1:= length @variable v1;
  #L416db0.  v1:= new `java.lang.Integer`[v1];
  #L416db4.  `@@n.c.a.u.k.D` @type ^`java.lang.Integer`[] := v1 @kind object;
  #L416db8.  v1:= 0I;
  #L416dba.  v2:= `@@n.c.a.u.k.l` @type ^`int`[] @kind object;
  #L416dbe.  v3:= length @variable v2;
  #L416dc0.  if v1 >= v3 then goto L416dde;
  #L416dc4.  v3:= `@@n.c.a.u.k.D` @type ^`java.lang.Integer`[] @kind object;
  #L416dc8.  v2:= v2[v1];
  #L416dcc.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L416dd2.  v2:= temp @kind object;
  #L416dd4.  v3[v1]:= v2 @kind object;
  #L416dd8.  v1:= v1 + 1;
  #L416ddc.  goto L416dba;
  #L416dde.  v1:= `@@n.c.a.u.k.p` @type ^`int`[] @kind object;
  #L416de2.  v1:= length @variable v1;
  #L416de4.  v1:= new `java.lang.Integer`[v1];
  #L416de8.  `@@n.c.a.u.k.E` @type ^`java.lang.Integer`[] := v1 @kind object;
  #L416dec.  v1:= 0I;
  #L416dee.  v2:= `@@n.c.a.u.k.p` @type ^`int`[] @kind object;
  #L416df2.  v3:= length @variable v2;
  #L416df4.  if v1 >= v3 then goto L416e12;
  #L416df8.  v3:= `@@n.c.a.u.k.E` @type ^`java.lang.Integer`[] @kind object;
  #L416dfc.  v2:= v2[v1];
  #L416e00.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L416e06.  v2:= temp @kind object;
  #L416e08.  v3[v1]:= v2 @kind object;
  #L416e0c.  v1:= v1 + 1;
  #L416e10.  goto L416dee;
  #L416e12.  v1:= 334I;
  #L416e16.  v1:= new `java.lang.Long`[v1];
  #L416e1a.  `@@n.c.a.u.k.w` @type ^`java.lang.Long`[] := v1 @kind object;
  #L416e1e.  v1:= 0I;
  #L416e20.  v2:= `@@n.c.a.u.k.w` @type ^`java.lang.Long`[] @kind object;
  #L416e24.  v3:= length @variable v2;
  #L416e26.  if v1 >= v3 then goto L416e42;
  #L416e2a.  v3:= v1 * 10631;
  #L416e2e.  v3:= (`long`) v3 @kind i2l;
  #L416e30.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L416e36.  v3:= temp @kind object;
  #L416e38.  v2[v1]:= v3 @kind object;
  #L416e3c.  v1:= v1 + 1;
  #L416e40.  goto L416e20;
  #L416e42.  v1:= `@@n.c.a.u.k.m` @type ^`int`[] @kind object;
  #L416e46.  v1:= length @variable v1;
  #L416e48.  v1:= new `java.lang.Integer`[v1];
  #L416e4c.  `@@n.c.a.u.k.x` @type ^`java.lang.Integer`[] := v1 @kind object;
  #L416e50.  v1:= 0I;
  #L416e52.  v2:= `@@n.c.a.u.k.m` @type ^`int`[] @kind object;
  #L416e56.  v3:= length @variable v2;
  #L416e58.  if v1 >= v3 then goto L416e76;
  #L416e5c.  v3:= `@@n.c.a.u.k.x` @type ^`java.lang.Integer`[] @kind object;
  #L416e60.  v2:= v2[v1];
  #L416e64.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L416e6a.  v2:= temp @kind object;
  #L416e6c.  v3[v1]:= v2 @kind object;
  #L416e70.  v1:= v1 + 1;
  #L416e74.  goto L416e52;
  #L416e76.  v1:= `@@n.c.a.u.k.n` @type ^`int`[] @kind object;
  #L416e7a.  v1:= length @variable v1;
  #L416e7c.  v1:= new `java.lang.Integer`[v1];
  #L416e80.  `@@n.c.a.u.k.y` @type ^`java.lang.Integer`[] := v1 @kind object;
  #L416e84.  v1:= 0I;
  #L416e86.  v2:= `@@n.c.a.u.k.n` @type ^`int`[] @kind object;
  #L416e8a.  v3:= length @variable v2;
  #L416e8c.  if v1 >= v3 then goto L416eaa;
  #L416e90.  v3:= `@@n.c.a.u.k.y` @type ^`java.lang.Integer`[] @kind object;
  #L416e94.  v2:= v2[v1];
  #L416e98.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L416e9e.  v2:= temp @kind object;
  #L416ea0.  v3[v1]:= v2 @kind object;
  #L416ea4.  v1:= v1 + 1;
  #L416ea8.  goto L416e86;
  #L416eaa.  v1:= `@@n.c.a.u.k.o` @type ^`int`[] @kind object;
  #L416eae.  v1:= length @variable v1;
  #L416eb0.  v1:= new `java.lang.Integer`[v1];
  #L416eb4.  `@@n.c.a.u.k.z` @type ^`java.lang.Integer`[] := v1 @kind object;
  #L416eb8.  v1:= `@@n.c.a.u.k.o` @type ^`int`[] @kind object;
  #L416ebc.  v2:= length @variable v1;
  #L416ebe.  if v0 >= v2 then goto L416edc;
  #L416ec2.  v2:= `@@n.c.a.u.k.z` @type ^`java.lang.Integer`[] @kind object;
  #L416ec6.  v1:= v1[v0];
  #L416eca.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L416ed0.  v1:= temp @kind object;
  #L416ed2.  v2[v0]:= v1 @kind object;
  #L416ed6.  v0:= v0 + 1;
  #L416eda.  goto L416eb8;
  #L416edc.  call `x`() @signature `Ln/c/a/u/k;.x:()V` @kind static;
  #L416ee2.  return @kind void;
  #L416ee4.  v1:= (0I, 30I, 59I, 89I, 118I, 148I, 177I, 207I, 236I, 266I, 295I, 325I) @kind object;
  #L416f1b.  goto L416c0a;
  #L416f1c.  v1:= (0I, 30I, 59I, 89I, 118I, 148I, 177I, 207I, 236I, 266I, 295I, 325I) @kind object;
  #L416f53.  goto L416c18;
  #L416f54.  v1:= (30I, 29I, 30I, 29I, 30I, 29I, 30I, 29I, 30I, 29I, 30I, 29I) @kind object;
  #L416f8b.  goto L416c26;
  #L416f8c.  v0:= (30I, 29I, 30I, 29I, 30I, 29I, 30I, 29I, 30I, 29I, 30I, 30I) @kind object;
  #L416fc3.  goto L416c34;
  #L416fc4.  v1:= (0I, 1I, 0I, 1I, 0I, 1I, 1I) @kind object;
  #L416fe7.  goto L416c44;
  #L416fe8.  v1:= (1I, 9999I, 11I, 51I, 5I, 29I, 354I) @kind object;
  #L41700b.  goto L416c52;
  #L41700c.  v0:= (1I, 9999I, 11I, 52I, 6I, 30I, 355I) @kind object;
  #L41702f.  goto L416c60;
  #L417030.  v0:= (0I, 354I, 709I, 1063I, 1417I, 1772I, 2126I, 2481I, 2835I, 3189I, 3544I, 3898I, 4252I, 4607I, 4961I, 5315I, 5670I, 6024I, 6379I, 6733I, 7087I, 7442I, 7796I, 8150I, 8505I, 8859I, 9214I, 9568I, 9922I, 10277I) @kind object;
  #L4170af.  goto L416c72;
  catch `java.io.IOException` @[L416edc..L416ee2] goto L416ee2;
  catch `java.text.ParseException` @[L416edc..L416ee2] goto L416ee2;
}
procedure `void` `<init>`(`n.c.a.u.k` v6 @kind this, `long` v7 ) @signature `Ln/c/a/u/k;.<init>:(J)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4170d4.  call `<init>`(v6) @signature `Ln/c/a/u/a;.<init>:()V` @kind direct;
  #L4170da.  call temp:= `e`(v7) @signature `Ln/c/a/u/k;.e:(J)[I` @kind static;
  #L4170e0.  v0:= temp @kind object;
  #L4170e2.  v1:= 1I;
  #L4170e4.  v2:= v0[v1];
  #L4170e8.  call `d`(v2) @signature `Ln/c/a/u/k;.d:(I)V` @kind static;
  #L4170ee.  v2:= 2I;
  #L4170f0.  v3:= v0[v2];
  #L4170f4.  call `c`(v3) @signature `Ln/c/a/u/k;.c:(I)V` @kind static;
  #L4170fa.  v3:= 3I;
  #L4170fc.  v4:= v0[v3];
  #L417100.  call `a`(v4) @signature `Ln/c/a/u/k;.a:(I)V` @kind static;
  #L417106.  v4:= 4I;
  #L417108.  v5:= v0[v4];
  #L41710c.  call `b`(v5) @signature `Ln/c/a/u/k;.b:(I)V` @kind static;
  #L417112.  v5:= 0I;
  #L417114.  v5:= v0[v5];
  #L417118.  call temp:= `b`(v5) @signature `Ln/c/a/u/l;.b:(I)Ln/c/a/u/l;` @kind static;
  #L41711e.  v5:= temp @kind object;
  #L417120.  v6.`n.c.a.u.k.b` @type ^`n.c.a.u.l` := v5 @kind object;
  #L417124.  v1:= v0[v1];
  #L417128.  v6.`n.c.a.u.k.c` @type ^`int` := v1;
  #L41712c.  v1:= v0[v2];
  #L417130.  v6.`n.c.a.u.k.d` @type ^`int` := v1;
  #L417134.  v1:= v0[v3];
  #L417138.  v6.`n.c.a.u.k.e` @type ^`int` := v1;
  #L41713c.  v1:= v0[v4];
  #L417140.  v6.`n.c.a.u.k.f` @type ^`int` := v1;
  #L417144.  v1:= 5I;
  #L417146.  v0:= v0[v1];
  #L41714a.  call temp:= `a`(v0) @signature `Ln/c/a/c;.a:(I)Ln/c/a/c;` @kind static;
  #L417150.  v0:= temp @kind object;
  #L417152.  v6.`n.c.a.u.k.g` @type ^`n.c.a.c` := v0 @kind object;
  #L417156.  v6.`n.c.a.u.k.h` @type ^`long` := v7 @kind wide;
  #L41715a.  v7:= v6.`n.c.a.u.k.c` @type ^`int`;
  #L41715e.  v7:= (`long`) v7 @kind i2l;
  #L417160.  call temp:= `f`(v7) @signature `Ln/c/a/u/k;.f:(J)Z` @kind static;
  #L417166.  return @kind void;
}
procedure `int` `a`(`int` v0 , `int` v1 ) @signature `Ln/c/a/u/k;.a:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L415be8.  call temp:= `f`(v1) @signature `Ln/c/a/u/k;.f:(I)[Ljava/lang/Integer;` @kind static;
  #L415bee.  v1:= temp @kind object;
  #L415bf0.  v0:= v1[v0] @kind object;
  #L415bf4.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L415bfa.  v0:= temp;
  #L415bfc.  return v0;
}
procedure `int` `a`(`int` v3 , `int` v4 , `int` v5 ) @signature `Ln/c/a/u/k;.a:(III)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L415b10.  call temp:= `f`(v5) @signature `Ln/c/a/u/k;.f:(I)[Ljava/lang/Integer;` @kind static;
  #L415b16.  v0:= temp @kind object;
  #L415b18.  if v3 < 0 then goto L415b30;
  #L415b1c.  if v4 <= 0 then goto L415b2e;
  #L415b20.  v4:= v0[v4] @kind object;
  #L415b24.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L415b2a.  v4:= temp;
  #L415b2c.  v3:= v3 - v4 @kind int;
  #L415b2e.  return v3;
  #L415b30.  v1:= (`long`) v5 @kind i2l;
  #L415b32.  call temp:= `f`(v1) @signature `Ln/c/a/u/k;.f:(J)Z` @kind static;
  #L415b38.  v5:= temp;
  #L415b3a.  if v5 == 0 then goto L415b44;
  #L415b3e.  v3:= v3 + 355;
  #L415b42.  goto L415b48;
  #L415b44.  v3:= v3 + 354;
  #L415b48.  if v4 <= 0 then goto L415b52;
  #L415b4c.  v4:= v0[v4] @kind object;
  #L415b50.  goto L415b24;
  #L415b52.  return v3;
}
procedure `int` `a`(`int` v5 , `long` v6 ) @signature `Ln/c/a/u/k;.a:(IJ)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L415cbc.  call temp:= `e`(v5) @signature `Ln/c/a/u/k;.e:(I)[Ljava/lang/Integer;` @kind static;
  #L415cc2.  v5:= temp @kind object;
  #L415cc4.  v0:= 0I;
  #L415cc6.  v1:= 0L;
  #L415cca.  v3:= lcmp(v6, v1);
  #L415cce.  if v3 != 0 then goto L415cd4;
  #L415cd2.  return v0;
  #L415cd4.  v1:= 29I;
  #L415cd8.  if v3 <= 0 then goto L415d06;
  #L415cdc.  v2:= length @variable v5;
  #L415cde.  if v0 >= v2 then goto L415d04;
  #L415ce2.  v2:= v5[v0] @kind object;
  #L415ce6.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L415cec.  v2:= temp;
  #L415cee.  v2:= (`long`) v2 @kind i2l;
  #L415cf0.  v4:= lcmp(v6, v2);
  #L415cf4.  if v4 >= 0 then goto L415cfe;
  #L415cf8.  v0:= v0 + -1;
  #L415cfc.  return v0;
  #L415cfe.  v0:= v0 + 1;
  #L415d02.  goto L415cdc;
  #L415d04.  return v1;
  #L415d06.  v6:= -v6 @kind long;
  #L415d08.  v2:= length @variable v5;
  #L415d0a.  if v0 >= v2 then goto L415d30;
  #L415d0e.  v2:= v5[v0] @kind object;
  #L415d12.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L415d18.  v2:= temp;
  #L415d1a.  v2:= (`long`) v2 @kind i2l;
  #L415d1c.  v4:= lcmp(v6, v2);
  #L415d20.  if v4 > 0 then goto L415d2a;
  #L415d24.  v0:= v0 + -1;
  #L415d28.  return v0;
  #L415d2a.  v0:= v0 + 1;
  #L415d2e.  goto L415d08;
  #L415d30.  return v1;
}
procedure `int` `a`(`long` v2 , `int` v4 ) @signature `Ln/c/a/u/k;.a:(JI)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L415ac4.  v0:= `@@n.c.a.u.k.w` @type ^`java.lang.Long`[] @kind object;
  #L415ac8.  v0:= v0[v4] @kind object;
  #L415acc.  goto L415ad0;
  #L415ace.  v0:= 0I;
  #L415ad0.  if v0 != 0 then goto L415ae2;
  #L415ad4.  v4:= v4 * 10631;
  #L415ad8.  v0:= (`long`) v4 @kind i2l;
  #L415ada.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L415ae0.  v0:= temp @kind object;
  #L415ae2.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L415ae8.  v0:= temp @kind wide;
  #L415aea.  v2:= v2 - v0 @kind long;
  #L415aec.  v3:= (`int`) v2 @kind l2i;
  #L415aee.  return v3;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L415ac4..L415acc] goto L415ace;
}
procedure `n.c.a.u.b` `a`(`java.io.DataInput` v3 @kind object) @signature `Ln/c/a/u/k;.a:(Ljava/io/DataInput;)Ln/c/a/u/b;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4165d4.  call temp:= `readInt`(v3) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L4165da.  v0:= temp;
  #L4165dc.  call temp:= `readByte`(v3) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L4165e2.  v1:= temp;
  #L4165e4.  call temp:= `readByte`(v3) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L4165ea.  v3:= temp;
  #L4165ec.  v2:= `@@n.c.a.u.j.d` @type ^`n.c.a.u.j` @kind object;
  #L4165f0.  call temp:= `a`(v2, v0, v1, v3) @signature `Ln/c/a/u/j;.a:(III)Ln/c/a/u/k;` @kind virtual;
  #L4165f6.  v3:= temp @kind object;
  #L4165f8.  return v3 @kind object;
}
procedure `n.c.a.u.k` `a`(`n.c.a.u.l` v1 @kind object, `int` v2 , `int` v3 , `int` v4 ) @signature `Ln/c/a/u/k;.a:(Ln/c/a/u/l;III)Ln/c/a/u/k;` @AccessFlag STATIC {
    temp;
    v0;

  #L416704.  v0:= "era" @kind object;
  #L416708.  call temp:= `a`(v1, v0) @signature `Ln/c/a/w/d;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L41670e.  call `d`(v2) @signature `Ln/c/a/u/k;.d:(I)V` @kind static;
  #L416714.  call `c`(v3) @signature `Ln/c/a/u/k;.c:(I)V` @kind static;
  #L41671a.  call `a`(v4) @signature `Ln/c/a/u/k;.a:(I)V` @kind static;
  #L416720.  call temp:= `a`(v1, v2) @signature `Ln/c/a/u/l;.a:(I)I` @kind virtual;
  #L416726.  v1:= temp;
  #L416728.  call temp:= `c`(v1, v3, v4) @signature `Ln/c/a/u/k;.c:(III)J` @kind static;
  #L41672e.  v1:= temp @kind wide;
  #L416730.  v3:= new `n.c.a.u.k`;
  #L416734.  call `<init>`(v3, v1) @signature `Ln/c/a/u/k;.<init>:(J)V` @kind direct;
  #L41673a.  return v3 @kind object;
}
procedure `void` `a`(`int` v3 ) @signature `Ln/c/a/u/k;.a:(I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4178a8.  v0:= 1I;
  #L4178aa.  if v3 < v0 then goto L4178bc;
  #L4178ae.  call temp:= `v`() @signature `Ln/c/a/u/k;.v:()I` @kind static;
  #L4178b4.  v0:= temp;
  #L4178b6.  if v3 > v0 then goto L4178bc;
  #L4178ba.  return @kind void;
  #L4178bc.  v0:= new `n.c.a.b`;
  #L4178c0.  v1:= new `java.lang.StringBuilder`;
  #L4178c4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4178ca.  v2:= "Invalid day of month of Hijrah date, day " @kind object;
  #L4178ce.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4178d4.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4178da.  v3:= " greater than " @kind object;
  #L4178de.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4178e4.  call temp:= `v`() @signature `Ln/c/a/u/k;.v:()I` @kind static;
  #L4178ea.  v3:= temp;
  #L4178ec.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4178f2.  v3:= " or less than 1" @kind object;
  #L4178f6.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4178fc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L417902.  v3:= temp @kind object;
  #L417904.  call `<init>`(v0, v3) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41790a.  throw v0;
}
procedure `void` `a`(`int` v15 , `int` v16 , `int` v17 , `int` v18 , `int` v19 ) @signature `Ln/c/a/u/k;.a:(IIIII)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L417178.  v0:= v15;
  #L41717a.  v1:= v16;
  #L41717e.  v2:= v17;
  #L417182.  v3:= v18;
  #L417186.  v4:= v19;
  #L41718a.  v5:= 1I;
  #L41718c.  if v0 < v5 then goto L417888;
  #L417190.  if v2 < v5 then goto L417878;
  #L417194.  if v1 < 0 then goto L417868;
  #L417198.  v6:= 11I;
  #L41719c.  if v1 > v6 then goto L417868;
  #L4171a0.  if v3 < 0 then goto L417858;
  #L4171a4.  if v3 > v6 then goto L417858;
  #L4171a8.  v7:= 9999I;
  #L4171ac.  if v2 > v7 then goto L417848;
  #L4171b0.  if v2 < v0 then goto L417838;
  #L4171b4.  if v2 != v0 then goto L4171ce;
  #L4171b8.  if v3 < v1 then goto L4171be;
  #L4171bc.  goto L4171ce;
  #L4171be.  v0:= new `java.lang.IllegalArgumentException`;
  #L4171c2.  v1:= "startYear == endYear && endMonth < startMonth" @kind object;
  #L4171c6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4171cc.  throw v0;
  #L4171ce.  v7:= (`long`) v0 @kind i2l;
  #L4171d0.  call temp:= `f`(v7) @signature `Ln/c/a/u/k;.f:(J)Z` @kind static;
  #L4171d6.  v7:= temp;
  #L4171d8.  v8:= `@@n.c.a.u.k.t` @type ^`java.util.HashMap` @kind object;
  #L4171dc.  call temp:= `valueOf`(v15) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4171e2.  v9:= temp @kind object;
  #L4171e4.  call temp:= `get`(v8, v9) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4171ea.  v8:= temp @kind object;
  #L4171ec.  v8:= (`java.lang.Integer`[]) v8 @kind object;
  #L4171f0.  if v8 != 0 then goto L417250;
  #L4171f4.  if v7 == 0 then goto L417224;
  #L4171f8.  v8:= `@@n.c.a.u.k.j` @type ^`int`[] @kind object;
  #L4171fc.  v8:= length @variable v8;
  #L4171fe.  v8:= new `java.lang.Integer`[v8];
  #L417202.  v10:= 0I;
  #L417204.  v11:= `@@n.c.a.u.k.j` @type ^`int`[] @kind object;
  #L417208.  v12:= length @variable v11;
  #L41720a.  if v10 >= v12 then goto L417250;
  #L41720e.  v11:= v11[v10];
  #L417212.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L417218.  v11:= temp @kind object;
  #L41721a.  v8[v10]:= v11 @kind object;
  #L41721e.  v10:= v10 + 1;
  #L417222.  goto L417204;
  #L417224.  v8:= `@@n.c.a.u.k.i` @type ^`int`[] @kind object;
  #L417228.  v8:= length @variable v8;
  #L41722a.  v8:= new `java.lang.Integer`[v8];
  #L41722e.  v10:= 0I;
  #L417230.  v11:= `@@n.c.a.u.k.i` @type ^`int`[] @kind object;
  #L417234.  v12:= length @variable v11;
  #L417236.  if v10 >= v12 then goto L417250;
  #L41723a.  v11:= v11[v10];
  #L41723e.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L417244.  v11:= temp @kind object;
  #L417246.  v8[v10]:= v11 @kind object;
  #L41724a.  v10:= v10 + 1;
  #L41724e.  goto L417230;
  #L417250.  v10:= length @variable v8;
  #L417252.  v10:= new `java.lang.Integer`[v10];
  #L417256.  v11:= 0I;
  #L417258.  v12:= 12I;
  #L41725c.  if v11 >= v12 then goto L41729e;
  #L417260.  if v11 <= v1 then goto L417280;
  #L417264.  v12:= v8[v11] @kind object;
  #L417268.  call temp:= `intValue`(v12) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L41726e.  v12:= temp;
  #L417270.  v12:= v12 - v4 @kind int;
  #L417272.  call temp:= `valueOf`(v12) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L417278.  v12:= temp @kind object;
  #L41727a.  v10[v11]:= v12 @kind object;
  #L41727e.  goto L417298;
  #L417280.  v12:= v8[v11] @kind object;
  #L417284.  call temp:= `intValue`(v12) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L41728a.  v12:= temp;
  #L41728c.  call temp:= `valueOf`(v12) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L417292.  v12:= temp @kind object;
  #L417294.  v10[v11]:= v12 @kind object;
  #L417298.  v11:= v11 + 1;
  #L41729c.  goto L417258;
  #L41729e.  v8:= `@@n.c.a.u.k.t` @type ^`java.util.HashMap` @kind object;
  #L4172a2.  call temp:= `valueOf`(v15) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4172a8.  v11:= temp @kind object;
  #L4172aa.  call temp:= `put`(v8, v11, v10) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4172b0.  v8:= `@@n.c.a.u.k.u` @type ^`java.util.HashMap` @kind object;
  #L4172b4.  call temp:= `valueOf`(v15) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4172ba.  v10:= temp @kind object;
  #L4172bc.  call temp:= `get`(v8, v10) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4172c2.  v8:= temp @kind object;
  #L4172c4.  v8:= (`java.lang.Integer`[]) v8 @kind object;
  #L4172c8.  if v8 != 0 then goto L417328;
  #L4172cc.  if v7 == 0 then goto L4172fc;
  #L4172d0.  v7:= `@@n.c.a.u.k.l` @type ^`int`[] @kind object;
  #L4172d4.  v7:= length @variable v7;
  #L4172d6.  v8:= new `java.lang.Integer`[v7];
  #L4172da.  v7:= 0I;
  #L4172dc.  v10:= `@@n.c.a.u.k.l` @type ^`int`[] @kind object;
  #L4172e0.  v11:= length @variable v10;
  #L4172e2.  if v7 >= v11 then goto L417328;
  #L4172e6.  v10:= v10[v7];
  #L4172ea.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4172f0.  v10:= temp @kind object;
  #L4172f2.  v8[v7]:= v10 @kind object;
  #L4172f6.  v7:= v7 + 1;
  #L4172fa.  goto L4172dc;
  #L4172fc.  v7:= `@@n.c.a.u.k.k` @type ^`int`[] @kind object;
  #L417300.  v7:= length @variable v7;
  #L417302.  v8:= new `java.lang.Integer`[v7];
  #L417306.  v7:= 0I;
  #L417308.  v10:= `@@n.c.a.u.k.k` @type ^`int`[] @kind object;
  #L41730c.  v11:= length @variable v10;
  #L41730e.  if v7 >= v11 then goto L417328;
  #L417312.  v10:= v10[v7];
  #L417316.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L41731c.  v10:= temp @kind object;
  #L41731e.  v8[v7]:= v10 @kind object;
  #L417322.  v7:= v7 + 1;
  #L417326.  goto L417308;
  #L417328.  v7:= length @variable v8;
  #L41732a.  v7:= new `java.lang.Integer`[v7];
  #L41732e.  v10:= 0I;
  #L417330.  if v10 >= v12 then goto L417372;
  #L417334.  if v10 != v1 then goto L417354;
  #L417338.  v11:= v8[v10] @kind object;
  #L41733c.  call temp:= `intValue`(v11) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L417342.  v11:= temp;
  #L417344.  v11:= v11 - v4 @kind int;
  #L417346.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L41734c.  v11:= temp @kind object;
  #L41734e.  v7[v10]:= v11 @kind object;
  #L417352.  goto L41736c;
  #L417354.  v11:= v8[v10] @kind object;
  #L417358.  call temp:= `intValue`(v11) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L41735e.  v11:= temp;
  #L417360.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L417366.  v11:= temp @kind object;
  #L417368.  v7[v10]:= v11 @kind object;
  #L41736c.  v10:= v10 + 1;
  #L417370.  goto L417330;
  #L417372.  v8:= `@@n.c.a.u.k.u` @type ^`java.util.HashMap` @kind object;
  #L417376.  call temp:= `valueOf`(v15) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L41737c.  v10:= temp @kind object;
  #L41737e.  call temp:= `put`(v8, v10, v7) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L417384.  if v0 == v2 then goto L41751c;
  #L417388.  v7:= v0 + -1;
  #L41738c.  v8:= v7 / 30;
  #L417390.  v7:= v7 %% 30;
  #L417394.  v10:= `@@n.c.a.u.k.v` @type ^`java.util.HashMap` @kind object;
  #L417398.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L41739e.  v11:= temp @kind object;
  #L4173a0.  call temp:= `get`(v10, v11) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4173a6.  v10:= temp @kind object;
  #L4173a8.  v10:= (`java.lang.Integer`[]) v10 @kind object;
  #L4173ac.  if v10 != 0 then goto L4173dc;
  #L4173b0.  v10:= `@@n.c.a.u.k.p` @type ^`int`[] @kind object;
  #L4173b4.  v10:= length @variable v10;
  #L4173b6.  v10:= new `java.lang.Integer`[v10];
  #L4173ba.  v11:= 0I;
  #L4173bc.  v13:= length @variable v10;
  #L4173be.  if v11 >= v13 then goto L4173dc;
  #L4173c2.  v13:= `@@n.c.a.u.k.p` @type ^`int`[] @kind object;
  #L4173c6.  v13:= v13[v11];
  #L4173ca.  call temp:= `valueOf`(v13) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4173d0.  v13:= temp @kind object;
  #L4173d2.  v10[v11]:= v13 @kind object;
  #L4173d6.  v11:= v11 + 1;
  #L4173da.  goto L4173bc;
  #L4173dc.  v7:= v7 + v5 @kind int;
  #L4173de.  v11:= `@@n.c.a.u.k.p` @type ^`int`[] @kind object;
  #L4173e2.  v11:= length @variable v11;
  #L4173e4.  if v7 >= v11 then goto L417408;
  #L4173e8.  v11:= v10[v7] @kind object;
  #L4173ec.  call temp:= `intValue`(v11) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4173f2.  v11:= temp;
  #L4173f4.  v11:= v11 - v4 @kind int;
  #L4173f6.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4173fc.  v11:= temp @kind object;
  #L4173fe.  v10[v7]:= v11 @kind object;
  #L417402.  v7:= v7 + 1;
  #L417406.  goto L4173de;
  #L417408.  v7:= `@@n.c.a.u.k.v` @type ^`java.util.HashMap` @kind object;
  #L41740c.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L417412.  v11:= temp @kind object;
  #L417414.  call temp:= `put`(v7, v11, v10) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L41741a.  v7:= v2 + -1;
  #L41741e.  v10:= v7 / 30;
  #L417422.  if v8 == v10 then goto L41748e;
  #L417426.  v8:= v8 + v5 @kind int;
  #L417428.  v11:= `@@n.c.a.u.k.w` @type ^`java.lang.Long`[] @kind object;
  #L41742c.  v13:= length @variable v11;
  #L41742e.  if v8 >= v13 then goto L41745a;
  #L417432.  v13:= v11[v8] @kind object;
  #L417436.  call temp:= `longValue`(v13) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L41743c.  v13:= temp @kind wide;
  #L41743e.  v5:= (`long`) v4 @kind i2l;
  #L417440.  v13:= v13 - v5 @kind long;
  #L417442.  call temp:= `valueOf`(v13) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L417448.  v5:= temp @kind object;
  #L41744a.  v11[v8]:= v5 @kind object;
  #L41744e.  v8:= v8 + 1;
  #L417452.  v5:= 1I;
  #L417454.  v6:= 11I;
  #L417458.  goto L417428;
  #L41745a.  v5:= v10 + 1;
  #L41745e.  v6:= `@@n.c.a.u.k.w` @type ^`java.lang.Long`[] @kind object;
  #L417462.  v8:= length @variable v6;
  #L417464.  if v5 >= v8 then goto L41748e;
  #L417468.  v8:= v6[v5] @kind object;
  #L41746c.  call temp:= `longValue`(v8) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L417472.  v13:= temp @kind wide;
  #L417474.  v11:= v10;
  #L417476.  v9:= (`long`) v4 @kind i2l;
  #L417478.  v13:= v13 + v9 @kind long;
  #L41747a.  call temp:= `valueOf`(v13) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L417480.  v9:= temp @kind object;
  #L417482.  v6[v5]:= v9 @kind object;
  #L417486.  v5:= v5 + 1;
  #L41748a.  v10:= v11;
  #L41748c.  goto L41745e;
  #L41748e.  v11:= v10;
  #L417490.  v7:= v7 %% 30;
  #L417494.  v5:= `@@n.c.a.u.k.v` @type ^`java.util.HashMap` @kind object;
  #L417498.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L41749e.  v6:= temp @kind object;
  #L4174a0.  call temp:= `get`(v5, v6) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4174a6.  v5:= temp @kind object;
  #L4174a8.  v5:= (`java.lang.Integer`[]) v5 @kind object;
  #L4174ac.  if v5 != 0 then goto L4174dc;
  #L4174b0.  v5:= `@@n.c.a.u.k.p` @type ^`int`[] @kind object;
  #L4174b4.  v5:= length @variable v5;
  #L4174b6.  v5:= new `java.lang.Integer`[v5];
  #L4174ba.  v6:= 0I;
  #L4174bc.  v9:= length @variable v5;
  #L4174be.  if v6 >= v9 then goto L4174dc;
  #L4174c2.  v9:= `@@n.c.a.u.k.p` @type ^`int`[] @kind object;
  #L4174c6.  v9:= v9[v6];
  #L4174ca.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4174d0.  v9:= temp @kind object;
  #L4174d2.  v5[v6]:= v9 @kind object;
  #L4174d6.  v6:= v6 + 1;
  #L4174da.  goto L4174bc;
  #L4174dc.  v6:= 1I;
  #L4174de.  v7:= v7 + v6 @kind int;
  #L4174e0.  v6:= `@@n.c.a.u.k.p` @type ^`int`[] @kind object;
  #L4174e4.  v6:= length @variable v6;
  #L4174e6.  if v7 >= v6 then goto L41750a;
  #L4174ea.  v6:= v5[v7] @kind object;
  #L4174ee.  call temp:= `intValue`(v6) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4174f4.  v6:= temp;
  #L4174f6.  v6:= v6 + v4 @kind int;
  #L4174f8.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4174fe.  v6:= temp @kind object;
  #L417500.  v5[v7]:= v6 @kind object;
  #L417504.  v7:= v7 + 1;
  #L417508.  goto L4174e0;
  #L41750a.  v6:= `@@n.c.a.u.k.v` @type ^`java.util.HashMap` @kind object;
  #L41750e.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L417514.  v7:= temp @kind object;
  #L417516.  call temp:= `put`(v6, v7, v5) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L41751c.  v5:= (`long`) v2 @kind i2l;
  #L41751e.  call temp:= `f`(v5) @signature `Ln/c/a/u/k;.f:(J)Z` @kind static;
  #L417524.  v5:= temp;
  #L417526.  v6:= `@@n.c.a.u.k.t` @type ^`java.util.HashMap` @kind object;
  #L41752a.  call temp:= `valueOf`(v17) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L417530.  v7:= temp @kind object;
  #L417532.  call temp:= `get`(v6, v7) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L417538.  v6:= temp @kind object;
  #L41753a.  v6:= (`java.lang.Integer`[]) v6 @kind object;
  #L41753e.  if v6 != 0 then goto L41759e;
  #L417542.  if v5 == 0 then goto L417572;
  #L417546.  v6:= `@@n.c.a.u.k.j` @type ^`int`[] @kind object;
  #L41754a.  v6:= length @variable v6;
  #L41754c.  v6:= new `java.lang.Integer`[v6];
  #L417550.  v7:= 0I;
  #L417552.  v9:= `@@n.c.a.u.k.j` @type ^`int`[] @kind object;
  #L417556.  v10:= length @variable v9;
  #L417558.  if v7 >= v10 then goto L41759e;
  #L41755c.  v9:= v9[v7];
  #L417560.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L417566.  v9:= temp @kind object;
  #L417568.  v6[v7]:= v9 @kind object;
  #L41756c.  v7:= v7 + 1;
  #L417570.  goto L417552;
  #L417572.  v6:= `@@n.c.a.u.k.i` @type ^`int`[] @kind object;
  #L417576.  v6:= length @variable v6;
  #L417578.  v6:= new `java.lang.Integer`[v6];
  #L41757c.  v7:= 0I;
  #L41757e.  v9:= `@@n.c.a.u.k.i` @type ^`int`[] @kind object;
  #L417582.  v10:= length @variable v9;
  #L417584.  if v7 >= v10 then goto L41759e;
  #L417588.  v9:= v9[v7];
  #L41758c.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L417592.  v9:= temp @kind object;
  #L417594.  v6[v7]:= v9 @kind object;
  #L417598.  v7:= v7 + 1;
  #L41759c.  goto L41757e;
  #L41759e.  v7:= length @variable v6;
  #L4175a0.  v7:= new `java.lang.Integer`[v7];
  #L4175a4.  v9:= 0I;
  #L4175a6.  if v9 >= v12 then goto L4175e8;
  #L4175aa.  if v9 <= v3 then goto L4175ca;
  #L4175ae.  v10:= v6[v9] @kind object;
  #L4175b2.  call temp:= `intValue`(v10) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4175b8.  v10:= temp;
  #L4175ba.  v10:= v10 + v4 @kind int;
  #L4175bc.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4175c2.  v10:= temp @kind object;
  #L4175c4.  v7[v9]:= v10 @kind object;
  #L4175c8.  goto L4175e2;
  #L4175ca.  v10:= v6[v9] @kind object;
  #L4175ce.  call temp:= `intValue`(v10) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4175d4.  v10:= temp;
  #L4175d6.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4175dc.  v10:= temp @kind object;
  #L4175de.  v7[v9]:= v10 @kind object;
  #L4175e2.  v9:= v9 + 1;
  #L4175e6.  goto L4175a6;
  #L4175e8.  v6:= `@@n.c.a.u.k.t` @type ^`java.util.HashMap` @kind object;
  #L4175ec.  call temp:= `valueOf`(v17) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4175f2.  v9:= temp @kind object;
  #L4175f4.  call temp:= `put`(v6, v9, v7) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4175fa.  v6:= `@@n.c.a.u.k.u` @type ^`java.util.HashMap` @kind object;
  #L4175fe.  call temp:= `valueOf`(v17) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L417604.  v7:= temp @kind object;
  #L417606.  call temp:= `get`(v6, v7) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L41760c.  v6:= temp @kind object;
  #L41760e.  v6:= (`java.lang.Integer`[]) v6 @kind object;
  #L417612.  if v6 != 0 then goto L417672;
  #L417616.  if v5 == 0 then goto L417646;
  #L41761a.  v5:= `@@n.c.a.u.k.l` @type ^`int`[] @kind object;
  #L41761e.  v5:= length @variable v5;
  #L417620.  v6:= new `java.lang.Integer`[v5];
  #L417624.  v5:= 0I;
  #L417626.  v7:= `@@n.c.a.u.k.l` @type ^`int`[] @kind object;
  #L41762a.  v9:= length @variable v7;
  #L41762c.  if v5 >= v9 then goto L417672;
  #L417630.  v7:= v7[v5];
  #L417634.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L41763a.  v7:= temp @kind object;
  #L41763c.  v6[v5]:= v7 @kind object;
  #L417640.  v5:= v5 + 1;
  #L417644.  goto L417626;
  #L417646.  v5:= `@@n.c.a.u.k.k` @type ^`int`[] @kind object;
  #L41764a.  v5:= length @variable v5;
  #L41764c.  v6:= new `java.lang.Integer`[v5];
  #L417650.  v5:= 0I;
  #L417652.  v7:= `@@n.c.a.u.k.k` @type ^`int`[] @kind object;
  #L417656.  v9:= length @variable v7;
  #L417658.  if v5 >= v9 then goto L417672;
  #L41765c.  v7:= v7[v5];
  #L417660.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L417666.  v7:= temp @kind object;
  #L417668.  v6[v5]:= v7 @kind object;
  #L41766c.  v5:= v5 + 1;
  #L417670.  goto L417652;
  #L417672.  v5:= length @variable v6;
  #L417674.  v5:= new `java.lang.Integer`[v5];
  #L417678.  v8:= 0I;
  #L41767a.  if v8 >= v12 then goto L4176bc;
  #L41767e.  if v8 != v3 then goto L41769e;
  #L417682.  v7:= v6[v8] @kind object;
  #L417686.  call temp:= `intValue`(v7) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L41768c.  v7:= temp;
  #L41768e.  v7:= v7 + v4 @kind int;
  #L417690.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L417696.  v7:= temp @kind object;
  #L417698.  v5[v8]:= v7 @kind object;
  #L41769c.  goto L4176b6;
  #L41769e.  v7:= v6[v8] @kind object;
  #L4176a2.  call temp:= `intValue`(v7) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4176a8.  v7:= temp;
  #L4176aa.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4176b0.  v7:= temp @kind object;
  #L4176b2.  v5[v8]:= v7 @kind object;
  #L4176b6.  v8:= v8 + 1;
  #L4176ba.  goto L41767a;
  #L4176bc.  v4:= `@@n.c.a.u.k.u` @type ^`java.util.HashMap` @kind object;
  #L4176c0.  call temp:= `valueOf`(v17) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4176c6.  v6:= temp @kind object;
  #L4176c8.  call temp:= `put`(v4, v6, v5) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4176ce.  v4:= `@@n.c.a.u.k.u` @type ^`java.util.HashMap` @kind object;
  #L4176d2.  call temp:= `valueOf`(v15) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4176d8.  v5:= temp @kind object;
  #L4176da.  call temp:= `get`(v4, v5) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4176e0.  v4:= temp @kind object;
  #L4176e2.  v4:= (`java.lang.Integer`[]) v4 @kind object;
  #L4176e6.  v5:= `@@n.c.a.u.k.u` @type ^`java.util.HashMap` @kind object;
  #L4176ea.  call temp:= `valueOf`(v17) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4176f0.  v6:= temp @kind object;
  #L4176f2.  call temp:= `get`(v5, v6) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4176f8.  v5:= temp @kind object;
  #L4176fa.  v5:= (`java.lang.Integer`[]) v5 @kind object;
  #L4176fe.  v6:= `@@n.c.a.u.k.t` @type ^`java.util.HashMap` @kind object;
  #L417702.  call temp:= `valueOf`(v15) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L417708.  v0:= temp @kind object;
  #L41770a.  call temp:= `get`(v6, v0) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L417710.  v0:= temp @kind object;
  #L417712.  v0:= (`java.lang.Integer`[]) v0 @kind object;
  #L417716.  v6:= `@@n.c.a.u.k.t` @type ^`java.util.HashMap` @kind object;
  #L41771a.  call temp:= `valueOf`(v17) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L417720.  v2:= temp @kind object;
  #L417722.  call temp:= `get`(v6, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L417728.  v2:= temp @kind object;
  #L41772a.  v2:= (`java.lang.Integer`[]) v2 @kind object;
  #L41772e.  v1:= v4[v1] @kind object;
  #L417732.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L417738.  v1:= temp;
  #L41773a.  v3:= v5[v3] @kind object;
  #L41773e.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L417744.  v3:= temp;
  #L417746.  v6:= 11I;
  #L41774a.  v0:= v0[v6] @kind object;
  #L41774e.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L417754.  v0:= temp;
  #L417756.  v4:= v4[v6] @kind object;
  #L41775a.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L417760.  v4:= temp;
  #L417762.  v0:= v0 + v4 @kind int;
  #L417764.  v2:= v2[v6] @kind object;
  #L417768.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L41776e.  v2:= temp;
  #L417770.  v4:= v5[v6] @kind object;
  #L417774.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L41777a.  v4:= temp;
  #L41777c.  v2:= v2 + v4 @kind int;
  #L41777e.  v4:= `@@n.c.a.u.k.z` @type ^`java.lang.Integer`[] @kind object;
  #L417782.  v5:= 5I;
  #L417784.  v4:= v4[v5] @kind object;
  #L417788.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L41778e.  v4:= temp;
  #L417790.  v6:= `@@n.c.a.u.k.y` @type ^`java.lang.Integer`[] @kind object;
  #L417794.  v6:= v6[v5] @kind object;
  #L417798.  call temp:= `intValue`(v6) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L41779e.  v6:= temp;
  #L4177a0.  if v4 >= v1 then goto L4177a6;
  #L4177a4.  v4:= v1;
  #L4177a6.  if v4 >= v3 then goto L4177ac;
  #L4177aa.  v4:= v3;
  #L4177ac.  v7:= `@@n.c.a.u.k.z` @type ^`java.lang.Integer`[] @kind object;
  #L4177b0.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4177b6.  v4:= temp @kind object;
  #L4177b8.  v7[v5]:= v4 @kind object;
  #L4177bc.  if v6 <= v1 then goto L4177c2;
  #L4177c0.  goto L4177c4;
  #L4177c2.  v1:= v6;
  #L4177c4.  if v1 <= v3 then goto L4177ca;
  #L4177c8.  v1:= v3;
  #L4177ca.  v3:= `@@n.c.a.u.k.y` @type ^`java.lang.Integer`[] @kind object;
  #L4177ce.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4177d4.  v1:= temp @kind object;
  #L4177d6.  v3[v5]:= v1 @kind object;
  #L4177da.  v1:= `@@n.c.a.u.k.z` @type ^`java.lang.Integer`[] @kind object;
  #L4177de.  v3:= 6I;
  #L4177e0.  v1:= v1[v3] @kind object;
  #L4177e4.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4177ea.  v1:= temp;
  #L4177ec.  v4:= `@@n.c.a.u.k.y` @type ^`java.lang.Integer`[] @kind object;
  #L4177f0.  v4:= v4[v3] @kind object;
  #L4177f4.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4177fa.  v4:= temp;
  #L4177fc.  if v1 >= v0 then goto L417802;
  #L417800.  v1:= v0;
  #L417802.  if v1 >= v2 then goto L417808;
  #L417806.  v1:= v2;
  #L417808.  v5:= `@@n.c.a.u.k.z` @type ^`java.lang.Integer`[] @kind object;
  #L41780c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L417812.  v1:= temp @kind object;
  #L417814.  v5[v3]:= v1 @kind object;
  #L417818.  if v4 <= v0 then goto L41781e;
  #L41781c.  goto L417820;
  #L41781e.  v0:= v4;
  #L417820.  if v0 <= v2 then goto L417826;
  #L417824.  v0:= v2;
  #L417826.  v1:= `@@n.c.a.u.k.y` @type ^`java.lang.Integer`[] @kind object;
  #L41782a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L417830.  v0:= temp @kind object;
  #L417832.  v1[v3]:= v0 @kind object;
  #L417836.  return @kind void;
  #L417838.  v0:= new `java.lang.IllegalArgumentException`;
  #L41783c.  v1:= "startYear > endYear" @kind object;
  #L417840.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L417846.  throw v0;
  #L417848.  v0:= new `java.lang.IllegalArgumentException`;
  #L41784c.  v1:= "endYear > 9999" @kind object;
  #L417850.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L417856.  throw v0;
  #L417858.  v0:= new `java.lang.IllegalArgumentException`;
  #L41785c.  v1:= "endMonth < 0 || endMonth > 11" @kind object;
  #L417860.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L417866.  throw v0;
  #L417868.  v0:= new `java.lang.IllegalArgumentException`;
  #L41786c.  v1:= "startMonth < 0 || startMonth > 11" @kind object;
  #L417870.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L417876.  throw v0;
  #L417878.  v0:= new `java.lang.IllegalArgumentException`;
  #L41787c.  v1:= "endYear < 1" @kind object;
  #L417880.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L417886.  throw v0;
  #L417888.  v0:= new `java.lang.IllegalArgumentException`;
  #L41788c.  v1:= "startYear < 1" @kind object;
  #L417890.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L417896.  throw v0;
}
procedure `void` `a`(`java.lang.String` v10 @kind object, `int` v11 ) @signature `Ln/c/a/u/k;.a:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L4179b0.  v0:= new `java.util.StringTokenizer`;
  #L4179b4.  v1:= ";" @kind object;
  #L4179b8.  call `<init>`(v0, v10, v1) @signature `Ljava/util/StringTokenizer;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L4179be.  call temp:= `hasMoreTokens`(v0) @signature `Ljava/util/StringTokenizer;.hasMoreTokens:()Z` @kind virtual;
  #L4179c4.  v10:= temp;
  #L4179c6.  if v10 == 0 then goto L417cbe;
  #L4179ca.  call temp:= `nextToken`(v0) @signature `Ljava/util/StringTokenizer;.nextToken:()Ljava/lang/String;` @kind virtual;
  #L4179d0.  v10:= temp @kind object;
  #L4179d2.  v1:= 58I;
  #L4179d6.  call temp:= `indexOf`(v10, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L4179dc.  v1:= temp;
  #L4179de.  v2:= -1I;
  #L4179e0.  v3:= "." @kind object;
  #L4179e4.  if v1 == v2 then goto L417c8a;
  #L4179e8.  v4:= v1 + 1;
  #L4179ec.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L4179f2.  v5:= temp;
  #L4179f4.  call temp:= `substring`(v10, v4, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L4179fa.  v4:= temp @kind object;
  #L4179fc.  call temp:= `parseInt`(v4) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L417a02.  v4:= temp;
  #L417a04.  v5:= 45I;
  #L417a08.  call temp:= `indexOf`(v10, v5) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L417a0e.  v5:= temp;
  #L417a10.  if v5 == v2 then goto L417c22;
  #L417a14.  v6:= 0I;
  #L417a16.  call temp:= `substring`(v10, v6, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L417a1c.  v7:= temp @kind object;
  #L417a1e.  v5:= v5 + 1;
  #L417a22.  call temp:= `substring`(v10, v5, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L417a28.  v10:= temp @kind object;
  #L417a2a.  v1:= 47I;
  #L417a2e.  call temp:= `indexOf`(v7, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L417a34.  v5:= temp;
  #L417a36.  call temp:= `indexOf`(v10, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L417a3c.  v1:= temp;
  #L417a3e.  if v5 == v2 then goto L417bee;
  #L417a42.  call temp:= `substring`(v7, v6, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L417a48.  v8:= temp @kind object;
  #L417a4a.  v5:= v5 + 1;
  #L417a4e.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L417a54.  v9:= temp;
  #L417a56.  call temp:= `substring`(v7, v5, v9) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L417a5c.  v5:= temp @kind object;
  #L417a5e.  call temp:= `parseInt`(v8) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L417a64.  v7:= temp;
  #L417a66.  call temp:= `parseInt`(v5) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L417a6c.  v5:= temp;
  #L417a6e.  if v1 == v2 then goto L417b52;
  #L417a72.  call temp:= `substring`(v10, v6, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L417a78.  v6:= temp @kind object;
  #L417a7a.  v1:= v1 + 1;
  #L417a7e.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L417a84.  v8:= temp;
  #L417a86.  call temp:= `substring`(v10, v1, v8) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L417a8c.  v10:= temp @kind object;
  #L417a8e.  call temp:= `parseInt`(v6) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L417a94.  v1:= temp;
  #L417a96.  call temp:= `parseInt`(v10) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L417a9c.  v10:= temp;
  #L417a9e.  if v7 == v2 then goto L417ab6;
  #L417aa2.  if v5 == v2 then goto L417ab6;
  #L417aa6.  if v1 == v2 then goto L417ab6;
  #L417aaa.  if v10 == v2 then goto L417ab6;
  #L417aae.  call `a`(v7, v5, v1, v10, v4) @signature `Ln/c/a/u/k;.a:(IIIII)V` @kind static;
  #L417ab4.  goto L4179be;
  #L417ab6.  v10:= new `java.text.ParseException`;
  #L417aba.  v0:= new `java.lang.StringBuilder`;
  #L417abe.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L417ac4.  v1:= "Unknown error at line " @kind object;
  #L417ac8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L417ace.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L417ad4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L417ada.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L417ae0.  v0:= temp @kind object;
  #L417ae2.  call `<init>`(v10, v0, v11) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L417ae8.  throw v10;
  #L417aea.  v10:= new `java.text.ParseException`;
  #L417aee.  v0:= new `java.lang.StringBuilder`;
  #L417af2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L417af8.  v1:= "End month is not properly set at line " @kind object;
  #L417afc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L417b02.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L417b08.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L417b0e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L417b14.  v0:= temp @kind object;
  #L417b16.  call `<init>`(v10, v0, v11) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L417b1c.  throw v10;
  #L417b1e.  v10:= new `java.text.ParseException`;
  #L417b22.  v0:= new `java.lang.StringBuilder`;
  #L417b26.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L417b2c.  v1:= "End year is not properly set at line " @kind object;
  #L417b30.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L417b36.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L417b3c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L417b42.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L417b48.  v0:= temp @kind object;
  #L417b4a.  call `<init>`(v10, v0, v11) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L417b50.  throw v10;
  #L417b52.  v10:= new `java.text.ParseException`;
  #L417b56.  v0:= new `java.lang.StringBuilder`;
  #L417b5a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L417b60.  v1:= "End year/month has incorrect format at line " @kind object;
  #L417b64.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L417b6a.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L417b70.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L417b76.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L417b7c.  v0:= temp @kind object;
  #L417b7e.  call `<init>`(v10, v0, v11) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L417b84.  throw v10;
  #L417b86.  v10:= new `java.text.ParseException`;
  #L417b8a.  v0:= new `java.lang.StringBuilder`;
  #L417b8e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L417b94.  v1:= "Start month is not properly set at line " @kind object;
  #L417b98.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L417b9e.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L417ba4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L417baa.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L417bb0.  v0:= temp @kind object;
  #L417bb2.  call `<init>`(v10, v0, v11) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L417bb8.  throw v10;
  #L417bba.  v10:= new `java.text.ParseException`;
  #L417bbe.  v0:= new `java.lang.StringBuilder`;
  #L417bc2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L417bc8.  v1:= "Start year is not properly set at line " @kind object;
  #L417bcc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L417bd2.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L417bd8.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L417bde.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L417be4.  v0:= temp @kind object;
  #L417be6.  call `<init>`(v10, v0, v11) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L417bec.  throw v10;
  #L417bee.  v10:= new `java.text.ParseException`;
  #L417bf2.  v0:= new `java.lang.StringBuilder`;
  #L417bf6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L417bfc.  v1:= "Start year/month has incorrect format at line " @kind object;
  #L417c00.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L417c06.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L417c0c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L417c12.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L417c18.  v0:= temp @kind object;
  #L417c1a.  call `<init>`(v10, v0, v11) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L417c20.  throw v10;
  #L417c22.  v10:= new `java.text.ParseException`;
  #L417c26.  v0:= new `java.lang.StringBuilder`;
  #L417c2a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L417c30.  v1:= "Start and end year/month has incorrect format at line " @kind object;
  #L417c34.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L417c3a.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L417c40.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L417c46.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L417c4c.  v0:= temp @kind object;
  #L417c4e.  call `<init>`(v10, v0, v11) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L417c54.  throw v10;
  #L417c56.  v10:= new `java.text.ParseException`;
  #L417c5a.  v0:= new `java.lang.StringBuilder`;
  #L417c5e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L417c64.  v1:= "Offset is not properly set at line " @kind object;
  #L417c68.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L417c6e.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L417c74.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L417c7a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L417c80.  v0:= temp @kind object;
  #L417c82.  call `<init>`(v10, v0, v11) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L417c88.  throw v10;
  #L417c8a.  v10:= new `java.text.ParseException`;
  #L417c8e.  v0:= new `java.lang.StringBuilder`;
  #L417c92.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L417c98.  v1:= "Offset has incorrect format at line " @kind object;
  #L417c9c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L417ca2.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L417ca8.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L417cae.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L417cb4.  v0:= temp @kind object;
  #L417cb6.  call `<init>`(v10, v0, v11) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L417cbc.  throw v10;
  #L417cbe.  return @kind void;
  catch `java.lang.NumberFormatException` @[L4179fc..L417a04] goto L417c56;
  catch `java.lang.NumberFormatException` @[L417a5e..L417a66] goto L417bba;
  catch `java.lang.NumberFormatException` @[L417a66..L417a6e] goto L417b86;
  catch `java.lang.NumberFormatException` @[L417a8e..L417a96] goto L417b1e;
  catch `java.lang.NumberFormatException` @[L417a96..L417a9e] goto L417aea;
}
procedure `int` `b`(`int` v0 , `int` v1 ) @signature `Ln/c/a/u/k;.b:(II)I` @AccessFlag STATIC {
    temp;

  #L415c10.  call temp:= `g`(v1) @signature `Ln/c/a/u/k;.g:(I)[Ljava/lang/Integer;` @kind static;
  #L415c16.  v1:= temp @kind object;
  #L415c18.  v0:= v1[v0] @kind object;
  #L415c1c.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L415c22.  v0:= temp;
  #L415c24.  return v0;
}
procedure `int` `b`(`int` v0 , `int` v1 , `int` v2 ) @signature `Ln/c/a/u/k;.b:(III)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L415b64.  call temp:= `e`(v0) @signature `Ln/c/a/u/k;.e:(I)[Ljava/lang/Integer;` @kind static;
  #L415b6a.  v0:= temp @kind object;
  #L415b6c.  if v1 <= 0 then goto L415b80;
  #L415b70.  v0:= v0[v2] @kind object;
  #L415b74.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L415b7a.  v0:= temp;
  #L415b7c.  v1:= v1 - v0 @kind int;
  #L415b7e.  return v1;
  #L415b80.  v0:= v0[v2] @kind object;
  #L415b84.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L415b8a.  v0:= temp;
  #L415b8c.  v0:= v0 + v1 @kind int;
  #L415b8e.  return v0;
}
procedure `void` `b`(`int` v1 ) @signature `Ln/c/a/u/k;.b:(I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L41791c.  v0:= 1I;
  #L41791e.  if v1 < v0 then goto L417930;
  #L417922.  call temp:= `w`() @signature `Ln/c/a/u/k;.w:()I` @kind static;
  #L417928.  v0:= temp;
  #L41792a.  if v1 > v0 then goto L417930;
  #L41792e.  return @kind void;
  #L417930.  v1:= new `n.c.a.b`;
  #L417934.  v0:= "Invalid day of year of Hijrah date" @kind object;
  #L417938.  call `<init>`(v1, v0) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41793e.  throw v1;
}
procedure `int` `c`(`int` v5 , `int` v6 ) @signature `Ln/c/a/u/k;.c:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L415c38.  call temp:= `f`(v6) @signature `Ln/c/a/u/k;.f:(I)[Ljava/lang/Integer;` @kind static;
  #L415c3e.  v0:= temp @kind object;
  #L415c40.  v1:= 11I;
  #L415c44.  v2:= 0I;
  #L415c46.  if v5 < 0 then goto L415c6e;
  #L415c4a.  v6:= length @variable v0;
  #L415c4c.  if v2 >= v6 then goto L415c6c;
  #L415c50.  v6:= v0[v2] @kind object;
  #L415c54.  call temp:= `intValue`(v6) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L415c5a.  v6:= temp;
  #L415c5c.  if v5 >= v6 then goto L415c66;
  #L415c60.  v2:= v2 + -1;
  #L415c64.  return v2;
  #L415c66.  v2:= v2 + 1;
  #L415c6a.  goto L415c4a;
  #L415c6c.  return v1;
  #L415c6e.  v3:= (`long`) v6 @kind i2l;
  #L415c70.  call temp:= `f`(v3) @signature `Ln/c/a/u/k;.f:(J)Z` @kind static;
  #L415c76.  v6:= temp;
  #L415c78.  if v6 == 0 then goto L415c82;
  #L415c7c.  v5:= v5 + 355;
  #L415c80.  goto L415c86;
  #L415c82.  v5:= v5 + 354;
  #L415c86.  v6:= length @variable v0;
  #L415c88.  if v2 >= v6 then goto L415ca8;
  #L415c8c.  v6:= v0[v2] @kind object;
  #L415c90.  call temp:= `intValue`(v6) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L415c96.  v6:= temp;
  #L415c98.  if v5 >= v6 then goto L415ca2;
  #L415c9c.  v2:= v2 + -1;
  #L415ca0.  return v2;
  #L415ca2.  v2:= v2 + 1;
  #L415ca6.  goto L415c86;
  #L415ca8.  return v1;
}
procedure `long` `c`(`int` v2 , `int` v3 , `int` v4 ) @signature `Ln/c/a/u/k;.c:(III)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L416320.  call temp:= `i`(v2) @signature `Ln/c/a/u/k;.i:(I)J` @kind static;
  #L416326.  v0:= temp @kind wide;
  #L416328.  v3:= v3 + -1;
  #L41632c.  call temp:= `a`(v3, v2) @signature `Ln/c/a/u/k;.a:(II)I` @kind static;
  #L416332.  v2:= temp;
  #L416334.  v2:= (`long`) v2 @kind i2l;
  #L416336.  v0:= v0 + v2 @kind long;
  #L416338.  v2:= (`long`) v4 @kind i2l;
  #L41633a.  v0:= v0 + v2 @kind long;
  #L41633c.  return v0 @kind wide;
}
procedure `void` `c`(`int` v1 ) @signature `Ln/c/a/u/k;.c:(I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L417950.  v0:= 1I;
  #L417952.  if v1 < v0 then goto L417960;
  #L417956.  v0:= 12I;
  #L41795a.  if v1 > v0 then goto L417960;
  #L41795e.  return @kind void;
  #L417960.  v1:= new `n.c.a.b`;
  #L417964.  v0:= "Invalid month of Hijrah date" @kind object;
  #L417968.  call `<init>`(v1, v0) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41796e.  throw v1;
}
procedure `int` `d`(`long` v5 ) @signature `Ln/c/a/u/k;.d:(J)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L415a68.  v0:= `@@n.c.a.u.k.w` @type ^`java.lang.Long`[] @kind object;
  #L415a6c.  v1:= 0I;
  #L415a6e.  v2:= length @variable v0;
  #L415a70.  if v1 >= v2 then goto L415a94;
  #L415a74.  v2:= v0[v1] @kind object;
  #L415a78.  call temp:= `longValue`(v2) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L415a7e.  v2:= temp @kind wide;
  #L415a80.  v4:= lcmp(v5, v2);
  #L415a84.  if v4 >= 0 then goto L415a8e;
  #L415a88.  v1:= v1 + -1;
  #L415a8c.  return v1;
  #L415a8e.  v1:= v1 + 1;
  #L415a92.  goto L415a6e;
  #L415a94.  v0:= (`int`) v5 @kind l2i;
  #L415a96.  v0:= v0 / 10631;
  #L415a9a.  goto L415aa2;
  #L415a9c.  v6:= (`int`) v5 @kind l2i;
  #L415a9e.  v0:= v6 / 10631;
  #L415aa2.  return v0;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L415a6e..L415a9a] goto L415a9c;
}
procedure `n.c.a.u.k` `d`(`int` v2 , `int` v3 , `int` v4 ) @signature `Ln/c/a/u/k;.d:(III)Ln/c/a/u/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4166d0.  v0:= 1I;
  #L4166d2.  if v2 < v0 then goto L4166e4;
  #L4166d6.  v0:= `@@n.c.a.u.l.c` @type ^`n.c.a.u.l` @kind object;
  #L4166da.  call temp:= `a`(v0, v2, v3, v4) @signature `Ln/c/a/u/k;.a:(Ln/c/a/u/l;III)Ln/c/a/u/k;` @kind static;
  #L4166e0.  v2:= temp @kind object;
  #L4166e2.  goto L4166f2;
  #L4166e4.  v1:= `@@n.c.a.u.l.b` @type ^`n.c.a.u.l` @kind object;
  #L4166e8.  v0:= v0 - v2 @kind int;
  #L4166ea.  call temp:= `a`(v1, v0, v3, v4) @signature `Ln/c/a/u/k;.a:(Ln/c/a/u/l;III)Ln/c/a/u/k;` @kind static;
  #L4166f0.  v2:= temp @kind object;
  #L4166f2.  return v2 @kind object;
}
procedure `void` `d`(`int` v1 ) @signature `Ln/c/a/u/k;.d:(I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L417980.  v0:= 1I;
  #L417982.  if v1 < v0 then goto L417990;
  #L417986.  v0:= 9999I;
  #L41798a.  if v1 > v0 then goto L417990;
  #L41798e.  return @kind void;
  #L417990.  v1:= new `n.c.a.b`;
  #L417994.  v0:= "Invalid year of Hijrah Era" @kind object;
  #L417998.  call `<init>`(v1, v0) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41799e.  throw v1;
}
procedure `n.c.a.u.k` `e`(`int` v1 , `int` v2 , `int` v3 ) @signature `Ln/c/a/u/k;.e:(III)Ln/c/a/u/k;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L416874.  v0:= v2 + -1;
  #L416878.  call temp:= `a`(v0, v1) @signature `Ln/c/a/u/k;.a:(II)I` @kind static;
  #L41687e.  v0:= temp;
  #L416880.  if v3 <= v0 then goto L416886;
  #L416884.  v3:= v0;
  #L416886.  call temp:= `d`(v1, v2, v3) @signature `Ln/c/a/u/k;.d:(III)Ln/c/a/u/k;` @kind static;
  #L41688c.  v1:= temp @kind object;
  #L41688e.  return v1 @kind object;
}
procedure `int`[] `e`(`long` v9 ) @signature `Ln/c/a/u/k;.e:(J)[I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L415e48.  v0:= -492148L;
  #L415e4e.  v9:= v9 - v0 @kind long;
  #L415e50.  v0:= 1I;
  #L415e52.  v1:= 0L;
  #L415e56.  v3:= lcmp(v9, v1);
  #L415e5a.  if v3 < 0 then goto L415ea8;
  #L415e5e.  call temp:= `d`(v9) @signature `Ln/c/a/u/k;.d:(J)I` @kind static;
  #L415e64.  v1:= temp;
  #L415e66.  call temp:= `a`(v9, v1) @signature `Ln/c/a/u/k;.a:(JI)I` @kind static;
  #L415e6c.  v2:= temp;
  #L415e6e.  v3:= (`long`) v2 @kind i2l;
  #L415e70.  call temp:= `a`(v1, v3) @signature `Ln/c/a/u/k;.a:(IJ)I` @kind static;
  #L415e76.  v3:= temp;
  #L415e78.  call temp:= `b`(v1, v2, v3) @signature `Ln/c/a/u/k;.b:(III)I` @kind static;
  #L415e7e.  v2:= temp;
  #L415e80.  v1:= v1 * 30;
  #L415e84.  v1:= v1 + v3 @kind int;
  #L415e86.  v1:= v1 + v0 @kind int;
  #L415e88.  call temp:= `c`(v2, v1) @signature `Ln/c/a/u/k;.c:(II)I` @kind static;
  #L415e8e.  v3:= temp;
  #L415e90.  call temp:= `a`(v2, v3, v1) @signature `Ln/c/a/u/k;.a:(III)I` @kind static;
  #L415e96.  v4:= temp;
  #L415e98.  v4:= v4 + v0 @kind int;
  #L415e9a.  v5:= `@@n.c.a.u.l.c` @type ^`n.c.a.u.l` @kind object;
  #L415e9e.  call temp:= `getValue`(v5) @signature `Ln/c/a/u/l;.getValue:()I` @kind virtual;
  #L415ea4.  v5:= temp;
  #L415ea6.  goto L415f16;
  #L415ea8.  v1:= (`int`) v9 @kind l2i;
  #L415eaa.  v2:= v1 / 10631;
  #L415eae.  v1:= v1 %% 10631;
  #L415eb2.  if v1 != 0 then goto L415ebe;
  #L415eb6.  v1:= -10631I;
  #L415eba.  v2:= v2 + 1;
  #L415ebe.  v3:= (`long`) v1 @kind i2l;
  #L415ec0.  call temp:= `a`(v2, v3) @signature `Ln/c/a/u/k;.a:(IJ)I` @kind static;
  #L415ec6.  v3:= temp;
  #L415ec8.  call temp:= `b`(v2, v1, v3) @signature `Ln/c/a/u/k;.b:(III)I` @kind static;
  #L415ece.  v1:= temp;
  #L415ed0.  v2:= v2 * 30;
  #L415ed4.  v2:= v2 - v3 @kind int;
  #L415ed6.  v2:= v2 - 1;
  #L415eda.  v3:= (`long`) v2 @kind i2l;
  #L415edc.  call temp:= `f`(v3) @signature `Ln/c/a/u/k;.f:(J)Z` @kind static;
  #L415ee2.  v3:= temp;
  #L415ee4.  if v3 == 0 then goto L415eee;
  #L415ee8.  v1:= v1 + 355;
  #L415eec.  goto L415ef2;
  #L415eee.  v1:= v1 + 354;
  #L415ef2.  call temp:= `c`(v1, v2) @signature `Ln/c/a/u/k;.c:(II)I` @kind static;
  #L415ef8.  v3:= temp;
  #L415efa.  call temp:= `a`(v1, v3, v2) @signature `Ln/c/a/u/k;.a:(III)I` @kind static;
  #L415f00.  v4:= temp;
  #L415f02.  v4:= v4 + v0 @kind int;
  #L415f04.  v5:= `@@n.c.a.u.l.b` @type ^`n.c.a.u.l` @kind object;
  #L415f08.  call temp:= `getValue`(v5) @signature `Ln/c/a/u/l;.getValue:()I` @kind virtual;
  #L415f0e.  v5:= temp;
  #L415f10.  v8:= v2;
  #L415f12.  v2:= v1;
  #L415f14.  v1:= v8;
  #L415f16.  v6:= 5L;
  #L415f1a.  v9:= v9 + v6 @kind long;
  #L415f1c.  v6:= 7L;
  #L415f20.  v9:= v9 %% v6 @kind long;
  #L415f22.  v10:= (`int`) v9 @kind l2i;
  #L415f24.  v9:= 0I;
  #L415f26.  if v10 > 0 then goto L415f2e;
  #L415f2a.  v6:= 7I;
  #L415f2c.  goto L415f30;
  #L415f2e.  v6:= 0I;
  #L415f30.  v10:= v10 + v6 @kind int;
  #L415f32.  v6:= 6I;
  #L415f34.  v6:= new `int`[v6];
  #L415f38.  v6[v9]:= v5;
  #L415f3c.  v6[v0]:= v1;
  #L415f40.  v9:= 2I;
  #L415f42.  v3:= v3 + v0 @kind int;
  #L415f44.  v6[v9]:= v3;
  #L415f48.  v9:= 3I;
  #L415f4a.  v6[v9]:= v4;
  #L415f4e.  v9:= 4I;
  #L415f50.  v2:= v2 + v0 @kind int;
  #L415f52.  v6[v9]:= v2;
  #L415f56.  v9:= 5I;
  #L415f58.  v6[v9]:= v10;
  #L415f5c.  return v6 @kind object;
}
procedure `java.lang.Integer`[] `e`(`int` v1 ) @signature `Ln/c/a/u/k;.e:(I)[Ljava/lang/Integer;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L4161e0.  v0:= `@@n.c.a.u.k.v` @type ^`java.util.HashMap` @kind object;
  #L4161e4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4161ea.  v1:= temp @kind object;
  #L4161ec.  call temp:= `get`(v0, v1) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4161f2.  v1:= temp @kind object;
  #L4161f4.  v1:= (`java.lang.Integer`[]) v1 @kind object;
  #L4161f8.  goto L4161fc;
  #L4161fa.  v1:= 0I;
  #L4161fc.  if v1 != 0 then goto L416204;
  #L416200.  v1:= `@@n.c.a.u.k.E` @type ^`java.lang.Integer`[] @kind object;
  #L416204.  return v1 @kind object;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L4161e0..L4161f8] goto L4161fa;
}
procedure `boolean` `f`(`long` v4 ) @signature `Ln/c/a/u/k;.f:(J)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L415a24.  v0:= 0L;
  #L415a28.  v2:= lcmp(v4, v0);
  #L415a2c.  if v2 <= 0 then goto L415a32;
  #L415a30.  goto L415a34;
  #L415a32.  v4:= -v4 @kind long;
  #L415a34.  v0:= 11L;
  #L415a38.  v4:= v4 * v0 @kind long;
  #L415a3c.  v2:= 14L;
  #L415a40.  v4:= v4 + v2 @kind long;
  #L415a42.  v2:= 30L;
  #L415a46.  v4:= v4 %% v2 @kind long;
  #L415a48.  v2:= lcmp(v4, v0);
  #L415a4c.  if v2 >= 0 then goto L415a54;
  #L415a50.  v4:= 1I;
  #L415a52.  goto L415a56;
  #L415a54.  v4:= 0I;
  #L415a56.  return v4;
}
procedure `java.lang.Integer`[] `f`(`int` v2 ) @signature `Ln/c/a/u/k;.f:(I)[Ljava/lang/Integer;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L416228.  v0:= `@@n.c.a.u.k.t` @type ^`java.util.HashMap` @kind object;
  #L41622c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L416232.  v1:= temp @kind object;
  #L416234.  call temp:= `get`(v0, v1) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L41623a.  v0:= temp @kind object;
  #L41623c.  v0:= (`java.lang.Integer`[]) v0 @kind object;
  #L416240.  goto L416244;
  #L416242.  v0:= 0I;
  #L416244.  if v0 != 0 then goto L416260;
  #L416248.  v0:= (`long`) v2 @kind i2l;
  #L41624a.  call temp:= `f`(v0) @signature `Ln/c/a/u/k;.f:(J)Z` @kind static;
  #L416250.  v2:= temp;
  #L416252.  if v2 == 0 then goto L41625c;
  #L416256.  v0:= `@@n.c.a.u.k.B` @type ^`java.lang.Integer`[] @kind object;
  #L41625a.  goto L416260;
  #L41625c.  v0:= `@@n.c.a.u.k.A` @type ^`java.lang.Integer`[] @kind object;
  #L416260.  return v0 @kind object;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L416228..L416240] goto L416242;
}
procedure `n.c.a.u.k` `g`(`long` v1 ) @signature `Ln/c/a/u/k;.g:(J)Ln/c/a/u/k;` @AccessFlag STATIC {
    temp;
    v0;

  #L41674c.  v0:= new `n.c.a.u.k`;
  #L416750.  call `<init>`(v0, v1) @signature `Ln/c/a/u/k;.<init>:(J)V` @kind direct;
  #L416756.  return v0 @kind object;
}
procedure `java.lang.Integer`[] `g`(`int` v2 ) @signature `Ln/c/a/u/k;.g:(I)[Ljava/lang/Integer;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L416284.  v0:= `@@n.c.a.u.k.u` @type ^`java.util.HashMap` @kind object;
  #L416288.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L41628e.  v1:= temp @kind object;
  #L416290.  call temp:= `get`(v0, v1) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L416296.  v0:= temp @kind object;
  #L416298.  v0:= (`java.lang.Integer`[]) v0 @kind object;
  #L41629c.  goto L4162a0;
  #L41629e.  v0:= 0I;
  #L4162a0.  if v0 != 0 then goto L4162bc;
  #L4162a4.  v0:= (`long`) v2 @kind i2l;
  #L4162a6.  call temp:= `f`(v0) @signature `Ln/c/a/u/k;.f:(J)Z` @kind static;
  #L4162ac.  v2:= temp;
  #L4162ae.  if v2 == 0 then goto L4162b8;
  #L4162b2.  v0:= `@@n.c.a.u.k.D` @type ^`java.lang.Integer`[] @kind object;
  #L4162b6.  goto L4162bc;
  #L4162b8.  v0:= `@@n.c.a.u.k.C` @type ^`java.lang.Integer`[] @kind object;
  #L4162bc.  return v0 @kind object;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L416284..L41629c] goto L41629e;
}
procedure `int` `h`(`int` v4 ) @signature `Ln/c/a/u/k;.h:(I)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L415d44.  v0:= v4 + -1;
  #L415d48.  v1:= v0 / 30;
  #L415d4c.  v2:= `@@n.c.a.u.k.v` @type ^`java.util.HashMap` @kind object;
  #L415d50.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L415d56.  v3:= temp @kind object;
  #L415d58.  call temp:= `get`(v2, v3) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L415d5e.  v2:= temp @kind object;
  #L415d60.  v2:= (`java.lang.Integer`[]) v2 @kind object;
  #L415d64.  goto L415d68;
  #L415d66.  v2:= 0I;
  #L415d68.  if v2 == 0 then goto L415dc4;
  #L415d6c.  v0:= v0 %% 30;
  #L415d70.  v4:= 29I;
  #L415d74.  if v0 != v4 then goto L415dae;
  #L415d78.  v4:= `@@n.c.a.u.k.w` @type ^`java.lang.Long`[] @kind object;
  #L415d7c.  v3:= v1 + 1;
  #L415d80.  v4:= v4[v3] @kind object;
  #L415d84.  call temp:= `intValue`(v4) @signature `Ljava/lang/Long;.intValue:()I` @kind virtual;
  #L415d8a.  v4:= temp;
  #L415d8c.  v3:= `@@n.c.a.u.k.w` @type ^`java.lang.Long`[] @kind object;
  #L415d90.  v1:= v3[v1] @kind object;
  #L415d94.  call temp:= `intValue`(v1) @signature `Ljava/lang/Long;.intValue:()I` @kind virtual;
  #L415d9a.  v1:= temp;
  #L415d9c.  v4:= v4 - v1 @kind int;
  #L415d9e.  v0:= v2[v0] @kind object;
  #L415da2.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L415da8.  v0:= temp;
  #L415daa.  v4:= v4 - v0 @kind int;
  #L415dac.  return v4;
  #L415dae.  v4:= v0 + 1;
  #L415db2.  v4:= v2[v4] @kind object;
  #L415db6.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L415dbc.  v4:= temp;
  #L415dbe.  v0:= v2[v0] @kind object;
  #L415dc2.  goto L415da2;
  #L415dc4.  v0:= (`long`) v4 @kind i2l;
  #L415dc6.  call temp:= `f`(v0) @signature `Ln/c/a/u/k;.f:(J)Z` @kind static;
  #L415dcc.  v4:= temp;
  #L415dce.  if v4 == 0 then goto L415dd8;
  #L415dd2.  v4:= 355I;
  #L415dd6.  goto L415ddc;
  #L415dd8.  v4:= 354I;
  #L415ddc.  return v4;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L415d4c..L415d64] goto L415d66;
}
procedure `long` `i`(`int` v4 ) @signature `Ln/c/a/u/k;.i:(I)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L416488.  v4:= v4 + -1;
  #L41648c.  v0:= v4 / 30;
  #L416490.  v4:= v4 %% 30;
  #L416494.  call temp:= `e`(v0) @signature `Ln/c/a/u/k;.e:(I)[Ljava/lang/Integer;` @kind static;
  #L41649a.  v1:= temp @kind object;
  #L41649c.  call temp:= `abs`(v4) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L4164a2.  v2:= temp;
  #L4164a4.  v1:= v1[v2] @kind object;
  #L4164a8.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4164ae.  v1:= temp;
  #L4164b0.  if v4 >= 0 then goto L4164b6;
  #L4164b4.  v1:= -v1 @kind int;
  #L4164b6.  v4:= `@@n.c.a.u.k.w` @type ^`java.lang.Long`[] @kind object;
  #L4164ba.  v4:= v4[v0] @kind object;
  #L4164be.  goto L4164c2;
  #L4164c0.  v4:= 0I;
  #L4164c2.  if v4 != 0 then goto L4164d4;
  #L4164c6.  v0:= v0 * 10631;
  #L4164ca.  v2:= (`long`) v0 @kind i2l;
  #L4164cc.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4164d2.  v4:= temp @kind object;
  #L4164d4.  call temp:= `longValue`(v4) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L4164da.  v2:= temp @kind wide;
  #L4164dc.  v0:= (`long`) v1 @kind i2l;
  #L4164de.  v2:= v2 + v0 @kind long;
  #L4164e0.  v0:= -492148L;
  #L4164e6.  v2:= v2 + v0 @kind long;
  #L4164e8.  v0:= 1L;
  #L4164ec.  v2:= v2 - v0 @kind long;
  #L4164ee.  return v2 @kind wide;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L4164b6..L4164be] goto L4164c0;
}
procedure `java.lang.Object` `readResolve`(`n.c.a.u.k` v3 @kind this) @signature `Ln/c/a/u/k;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4162e0.  v0:= new `n.c.a.u.k`;
  #L4162e4.  v1:= v3.`n.c.a.u.k.h` @type ^`long` @kind wide;
  #L4162e8.  call `<init>`(v0, v1) @signature `Ln/c/a/u/k;.<init>:(J)V` @kind direct;
  #L4162ee.  return v0 @kind object;
}
procedure `java.io.InputStream` `u`() @signature `Ln/c/a/u/k;.u:()Ljava/io/InputStream;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L415f70.  v0:= "org.threeten.bp.i18n.HijrahDate.deviationConfigFile" @kind object;
  #L415f74.  call temp:= `getProperty`(v0) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L415f7a.  v0:= temp @kind object;
  #L415f7c.  if v0 != 0 then goto L415f84;
  #L415f80.  v0:= "hijrah_deviation.cfg" @kind object;
  #L415f84.  v1:= "org.threeten.bp.i18n.HijrahDate.deviationConfigDir" @kind object;
  #L415f88.  call temp:= `getProperty`(v1) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L415f8e.  v1:= temp @kind object;
  #L415f90.  v2:= 0I;
  #L415f92.  if v1 == 0 then goto L416030;
  #L415f96.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L415f9c.  v3:= temp;
  #L415f9e.  v4:= "file.separator" @kind object;
  #L415fa2.  if v3 != 0 then goto L415fba;
  #L415fa6.  call temp:= `getProperty`(v4) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L415fac.  v3:= temp @kind object;
  #L415fae.  call temp:= `endsWith`(v1, v3) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L415fb4.  v3:= temp;
  #L415fb6.  if v3 != 0 then goto L415fe0;
  #L415fba.  v3:= new `java.lang.StringBuilder`;
  #L415fbe.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L415fc4.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L415fca.  call temp:= `getProperty`(v4) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L415fd0.  v1:= temp @kind object;
  #L415fd2.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L415fd8.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L415fde.  v1:= temp @kind object;
  #L415fe0.  v3:= new `java.io.File`;
  #L415fe4.  v4:= new `java.lang.StringBuilder`;
  #L415fe8.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L415fee.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L415ff4.  v1:= `@@n.c.a.u.k.q` @type ^`char` @kind char;
  #L415ff8.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L415ffe.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L416004.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L41600a.  v0:= temp @kind object;
  #L41600c.  call `<init>`(v3, v0) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L416012.  call temp:= `exists`(v3) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L416018.  v0:= temp;
  #L41601a.  if v0 == 0 then goto L41602e;
  #L41601e.  v0:= new `java.io.FileInputStream`;
  #L416022.  call `<init>`(v0, v3) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L416028.  return v0 @kind object;
  #L41602a.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L41602c.  throw v0;
  #L41602e.  return v2 @kind object;
  #L416030.  v1:= "java.class.path" @kind object;
  #L416034.  call temp:= `getProperty`(v1) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L41603a.  v1:= temp @kind object;
  #L41603c.  v3:= new `java.util.StringTokenizer`;
  #L416040.  v4:= `@@n.c.a.u.k.r` @type ^`java.lang.String` @kind object;
  #L416044.  call `<init>`(v3, v1, v4) @signature `Ljava/util/StringTokenizer;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L41604a.  call temp:= `hasMoreTokens`(v3) @signature `Ljava/util/StringTokenizer;.hasMoreTokens:()Z` @kind virtual;
  #L416050.  v1:= temp;
  #L416052.  if v1 == 0 then goto L416198;
  #L416056.  call temp:= `nextToken`(v3) @signature `Ljava/util/StringTokenizer;.nextToken:()Ljava/lang/String;` @kind virtual;
  #L41605c.  v1:= temp @kind object;
  #L41605e.  v4:= new `java.io.File`;
  #L416062.  call `<init>`(v4, v1) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L416068.  call temp:= `exists`(v4) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L41606e.  v5:= temp;
  #L416070.  if v5 == 0 then goto L41604a;
  #L416074.  call temp:= `isDirectory`(v4) @signature `Ljava/io/File;.isDirectory:()Z` @kind virtual;
  #L41607a.  v5:= temp;
  #L41607c.  if v5 == 0 then goto L41610e;
  #L416080.  v4:= new `java.io.File`;
  #L416084.  v5:= new `java.lang.StringBuilder`;
  #L416088.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L41608e.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L416094.  v6:= `@@n.c.a.u.k.q` @type ^`char` @kind char;
  #L416098.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L41609e.  v6:= `@@n.c.a.u.k.s` @type ^`java.lang.String` @kind object;
  #L4160a2.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4160a8.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4160ae.  v5:= temp @kind object;
  #L4160b0.  call `<init>`(v4, v5, v0) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L4160b6.  call temp:= `exists`(v4) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L4160bc.  v4:= temp;
  #L4160be.  if v4 == 0 then goto L41604a;
  #L4160c2.  v2:= new `java.io.FileInputStream`;
  #L4160c6.  v3:= new `java.lang.StringBuilder`;
  #L4160ca.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4160d0.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4160d6.  v1:= `@@n.c.a.u.k.q` @type ^`char` @kind char;
  #L4160da.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4160e0.  v1:= `@@n.c.a.u.k.s` @type ^`java.lang.String` @kind object;
  #L4160e4.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4160ea.  v1:= `@@n.c.a.u.k.q` @type ^`char` @kind char;
  #L4160ee.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4160f4.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4160fa.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L416100.  v0:= temp @kind object;
  #L416102.  call `<init>`(v2, v0) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L416108.  return v2 @kind object;
  #L41610a.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L41610c.  throw v0;
  #L41610e.  v1:= new `java.util.zip.ZipFile`;
  #L416112.  call `<init>`(v1, v4) @signature `Ljava/util/zip/ZipFile;.<init>:(Ljava/io/File;)V` @kind direct;
  #L416118.  goto L41611c;
  #L41611a.  v1:= v2 @kind object;
  #L41611c.  if v1 == 0 then goto L41604a;
  #L416120.  v4:= new `java.lang.StringBuilder`;
  #L416124.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L41612a.  v5:= `@@n.c.a.u.k.s` @type ^`java.lang.String` @kind object;
  #L41612e.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L416134.  v5:= `@@n.c.a.u.k.q` @type ^`char` @kind char;
  #L416138.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L41613e.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L416144.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L41614a.  v4:= temp @kind object;
  #L41614c.  call temp:= `getEntry`(v1, v4) @signature `Ljava/util/zip/ZipFile;.getEntry:(Ljava/lang/String;)Ljava/util/zip/ZipEntry;` @kind virtual;
  #L416152.  v5:= temp @kind object;
  #L416154.  if v5 != 0 then goto L416186;
  #L416158.  v5:= `@@n.c.a.u.k.q` @type ^`char` @kind char;
  #L41615c.  v6:= 92I;
  #L416160.  v7:= 47I;
  #L416164.  if v5 != v7 then goto L416172;
  #L416168.  call temp:= `replace`(v4, v7, v6) @signature `Ljava/lang/String;.replace:(CC)Ljava/lang/String;` @kind virtual;
  #L41616e.  v4:= temp @kind object;
  #L416170.  goto L41617e;
  #L416172.  if v5 != v6 then goto L41617e;
  #L416176.  call temp:= `replace`(v4, v6, v7) @signature `Ljava/lang/String;.replace:(CC)Ljava/lang/String;` @kind virtual;
  #L41617c.  v4:= temp @kind object;
  #L41617e.  call temp:= `getEntry`(v1, v4) @signature `Ljava/util/zip/ZipFile;.getEntry:(Ljava/lang/String;)Ljava/util/zip/ZipEntry;` @kind virtual;
  #L416184.  v5:= temp @kind object;
  #L416186.  if v5 == 0 then goto L41604a;
  #L41618a.  call temp:= `getInputStream`(v1, v5) @signature `Ljava/util/zip/ZipFile;.getInputStream:(Ljava/util/zip/ZipEntry;)Ljava/io/InputStream;` @kind virtual;
  #L416190.  v0:= temp @kind object;
  #L416192.  return v0 @kind object;
  #L416194.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L416196.  throw v0;
  #L416198.  return v2 @kind object;
  catch `java.io.IOException` @[L41601e..L416028] goto L41602a;
  catch `java.io.IOException` @[L4160c2..L416108] goto L41610a;
  catch `java.io.IOException` @[L41610e..L416118] goto L41611a;
  catch `java.io.IOException` @[L41618a..L416192] goto L416194;
}
procedure `int` `v`() @signature `Ln/c/a/u/k;.v:()I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L415ba0.  v0:= `@@n.c.a.u.k.z` @type ^`java.lang.Integer`[] @kind object;
  #L415ba4.  v1:= 5I;
  #L415ba6.  v0:= v0[v1] @kind object;
  #L415baa.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L415bb0.  v0:= temp;
  #L415bb2.  return v0;
}
procedure `int` `w`() @signature `Ln/c/a/u/k;.w:()I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L415bc4.  v0:= `@@n.c.a.u.k.z` @type ^`java.lang.Integer`[] @kind object;
  #L415bc8.  v1:= 6I;
  #L415bca.  v0:= v0[v1] @kind object;
  #L415bce.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L415bd4.  v0:= temp;
  #L415bd6.  return v0;
}
procedure `java.lang.Object` `writeReplace`(`n.c.a.u.k` v2 @kind this) @signature `Ln/c/a/u/k;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L416300.  v0:= new `n.c.a.u.u`;
  #L416304.  v1:= 3I;
  #L416306.  call `<init>`(v0, v1, v2) @signature `Ln/c/a/u/u;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L41630c.  return v0 @kind object;
}
procedure `void` `x`() @signature `Ln/c/a/u/k;.x:()V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L417d14.  call temp:= `u`() @signature `Ln/c/a/u/k;.u:()Ljava/io/InputStream;` @kind static;
  #L417d1a.  v0:= temp @kind object;
  #L417d1c.  if v0 == 0 then goto L417d74;
  #L417d20.  v1:= 0I;
  #L417d22.  v2:= new `java.io.BufferedReader`;
  #L417d26.  v3:= new `java.io.InputStreamReader`;
  #L417d2a.  call `<init>`(v3, v0) @signature `Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L417d30.  call `<init>`(v2, v3) @signature `Ljava/io/BufferedReader;.<init>:(Ljava/io/Reader;)V` @kind direct;
  #L417d36.  v0:= 0I;
  #L417d38.  call temp:= `readLine`(v2) @signature `Ljava/io/BufferedReader;.readLine:()Ljava/lang/String;` @kind virtual;
  #L417d3e.  v1:= temp @kind object;
  #L417d40.  if v1 == 0 then goto L417d58;
  #L417d44.  v0:= v0 + 1;
  #L417d48.  call temp:= `trim`(v1) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L417d4e.  v1:= temp @kind object;
  #L417d50.  call `a`(v1, v0) @signature `Ln/c/a/u/k;.a:(Ljava/lang/String;I)V` @kind static;
  #L417d56.  goto L417d38;
  #L417d58.  call `close`(v2) @signature `Ljava/io/BufferedReader;.close:()V` @kind virtual;
  #L417d5e.  goto L417d74;
  #L417d60.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L417d62.  v1:= v2 @kind object;
  #L417d64.  goto L417d68;
  #L417d66.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L417d68.  if v1 == 0 then goto L417d72;
  #L417d6c.  call `close`(v1) @signature `Ljava/io/BufferedReader;.close:()V` @kind virtual;
  #L417d72.  throw v0;
  #L417d74.  return @kind void;
  catch `java.lang.Throwable` @[L417d22..L417d36] goto L417d66;
  catch `java.lang.Throwable` @[L417d38..L417d56] goto L417d60;
}
procedure `n.c.a.u.a` `a`(`n.c.a.u.k` v0 @kind this, `long` v1 ) @signature `Ln/c/a/u/k;.a:(J)Ln/c/a/u/a;` @AccessFlag SYNTHETIC {
    temp;

  #L41652c.  call temp:= `a`(v0, v1) @signature `Ln/c/a/u/k;.a:(J)Ln/c/a/u/k;` @kind virtual;
  #L416532.  v1:= temp @kind object;
  #L416534.  return v1 @kind object;
}
procedure `n.c.a.u.b` `a`(`n.c.a.u.k` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/u/k;.a:(JLn/c/a/x/l;)Ln/c/a/u/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L416580.  call temp:= `a`(v0, v1, v3) @signature `Ln/c/a/u/k;.a:(JLn/c/a/x/l;)Ln/c/a/u/k;` @kind virtual;
  #L416586.  v1:= temp @kind object;
  #L416588.  return v1 @kind object;
}
procedure `n.c.a.u.b` `a`(`n.c.a.u.k` v0 @kind this, `n.c.a.x.f` v1 @kind object) @signature `Ln/c/a/u/k;.a:(Ln/c/a/x/f;)Ln/c/a/u/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L41660c.  call temp:= `a`(v0, v1) @signature `Ln/c/a/u/k;.a:(Ln/c/a/x/f;)Ln/c/a/u/k;` @kind virtual;
  #L416612.  v1:= temp @kind object;
  #L416614.  return v1 @kind object;
}
procedure `n.c.a.u.b` `a`(`n.c.a.u.k` v0 @kind this, `n.c.a.x.h` v1 @kind object) @signature `Ln/c/a/u/k;.a:(Ln/c/a/x/h;)Ln/c/a/u/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4165b8.  call temp:= `a`(v0, v1) @signature `Ln/c/a/u/k;.a:(Ln/c/a/x/h;)Ln/c/a/u/k;` @kind virtual;
  #L4165be.  v1:= temp @kind object;
  #L4165c0.  return v1 @kind object;
}
procedure `n.c.a.u.b` `a`(`n.c.a.u.k` v0 @kind this, `n.c.a.x.i` v1 @kind object, `long` v2 ) @signature `Ln/c/a/u/k;.a:(Ln/c/a/x/i;J)Ln/c/a/u/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L416628.  call temp:= `a`(v0, v1, v2) @signature `Ln/c/a/u/k;.a:(Ln/c/a/x/i;J)Ln/c/a/u/k;` @kind virtual;
  #L41662e.  v1:= temp @kind object;
  #L416630.  return v1 @kind object;
}
procedure `n.c.a.u.c` `a`(`n.c.a.u.k` v0 @kind this, `n.c.a.h` v1 @kind object) @signature `Ln/c/a/u/k;.a:(Ln/c/a/h;)Ln/c/a/u/c;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L416644.  call temp:= `a`(v0, v1) @signature `Ln/c/a/u/a;.a:(Ln/c/a/h;)Ln/c/a/u/c;` @kind super;
  #L41664a.  v1:= temp @kind object;
  #L41664c.  return v1 @kind object;
}
procedure `n.c.a.u.k` `a`(`n.c.a.u.k` v3 @kind this, `long` v4 ) @signature `Ln/c/a/u/k;.a:(J)Ln/c/a/u/k;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4167a8.  v0:= new `n.c.a.u.k`;
  #L4167ac.  v1:= v3.`n.c.a.u.k.h` @type ^`long` @kind wide;
  #L4167b0.  v1:= v1 + v4 @kind long;
  #L4167b2.  call `<init>`(v0, v1) @signature `Ln/c/a/u/k;.<init>:(J)V` @kind direct;
  #L4167b8.  return v0 @kind object;
}
procedure `n.c.a.u.k` `a`(`n.c.a.u.k` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/u/k;.a:(JLn/c/a/x/l;)Ln/c/a/u/k;` @AccessFlag PUBLIC {
    temp;

  #L4166b0.  call temp:= `a`(v0, v1, v3) @signature `Ln/c/a/u/b;.a:(JLn/c/a/x/l;)Ln/c/a/u/b;` @kind super;
  #L4166b6.  v1:= temp @kind object;
  #L4166b8.  v1:= (`n.c.a.u.k`) v1 @kind object;
  #L4166bc.  return v1 @kind object;
}
procedure `n.c.a.u.k` `a`(`n.c.a.u.k` v0 @kind this, `n.c.a.x.f` v1 @kind object) @signature `Ln/c/a/u/k;.a:(Ln/c/a/x/f;)Ln/c/a/u/k;` @AccessFlag PUBLIC {
    temp;

  #L4168a0.  call temp:= `a`(v0, v1) @signature `Ln/c/a/u/b;.a:(Ln/c/a/x/f;)Ln/c/a/u/b;` @kind super;
  #L4168a6.  v1:= temp @kind object;
  #L4168a8.  v1:= (`n.c.a.u.k`) v1 @kind object;
  #L4168ac.  return v1 @kind object;
}
procedure `n.c.a.u.k` `a`(`n.c.a.u.k` v0 @kind this, `n.c.a.x.h` v1 @kind object) @signature `Ln/c/a/u/k;.a:(Ln/c/a/x/h;)Ln/c/a/u/k;` @AccessFlag PUBLIC {
    temp;

  #L416788.  call temp:= `a`(v0, v1) @signature `Ln/c/a/u/b;.a:(Ln/c/a/x/h;)Ln/c/a/u/b;` @kind super;
  #L41678e.  v1:= temp @kind object;
  #L416790.  v1:= (`n.c.a.u.k`) v1 @kind object;
  #L416794.  return v1 @kind object;
}
procedure `n.c.a.u.k` `a`(`n.c.a.u.k` v5 @kind this, `n.c.a.x.i` v6 @kind object, `long` v7 ) @signature `Ln/c/a/u/k;.a:(Ln/c/a/x/i;J)Ln/c/a/u/k;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4168c0.  v0:= instanceof @variable v6 @type ^`n.c.a.x.a` @kind boolean;
  #L4168c4.  if v0 == 0 then goto L416a3a;
  #L4168c8.  v0:= v6 @kind object;
  #L4168ca.  v0:= (`n.c.a.x.a`) v0 @kind object;
  #L4168ce.  call temp:= `b`(v0, v7) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L4168d4.  v1:= (`int`) v7 @kind l2i;
  #L4168d6.  v2:= `@@n.c.a.u.k$a.a` @type ^`int`[] @kind object;
  #L4168da.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L4168e0.  v0:= temp;
  #L4168e2.  v0:= v2[v0];
  #L4168e6.  v2:= 7L;
  #L4168ea.  v4:= 1I;
  #L4168ec.  goto L416a48;
  #L4168f2.  v7:= new `n.c.a.x.m`;
  #L4168f6.  v8:= new `java.lang.StringBuilder`;
  #L4168fa.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L416900.  v0:= "Unsupported field: " @kind object;
  #L416904.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41690a.  call temp:= `append`(v8, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L416910.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L416916.  v6:= temp @kind object;
  #L416918.  call `<init>`(v7, v6) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41691e.  throw v7;
  #L416920.  v6:= v5.`n.c.a.u.k.c` @type ^`int`;
  #L416924.  v4:= v4 - v6 @kind int;
  #L416926.  v6:= v5.`n.c.a.u.k.d` @type ^`int`;
  #L41692a.  v7:= v5.`n.c.a.u.k.e` @type ^`int`;
  #L41692e.  call temp:= `e`(v4, v6, v7) @signature `Ln/c/a/u/k;.e:(III)Ln/c/a/u/k;` @kind static;
  #L416934.  v6:= temp @kind object;
  #L416936.  return v6 @kind object;
  #L416938.  v6:= v5.`n.c.a.u.k.d` @type ^`int`;
  #L41693c.  v7:= v5.`n.c.a.u.k.e` @type ^`int`;
  #L416940.  call temp:= `e`(v1, v6, v7) @signature `Ln/c/a/u/k;.e:(III)Ln/c/a/u/k;` @kind static;
  #L416946.  v6:= temp @kind object;
  #L416948.  return v6 @kind object;
  #L41694a.  v6:= v5.`n.c.a.u.k.c` @type ^`int`;
  #L41694e.  v7:= v5.`n.c.a.u.k.e` @type ^`int`;
  #L416952.  call temp:= `e`(v6, v1, v7) @signature `Ln/c/a/u/k;.e:(III)Ln/c/a/u/k;` @kind static;
  #L416958.  v6:= temp @kind object;
  #L41695a.  return v6 @kind object;
  #L41695c.  v6:= `@@n.c.a.x.a.z` @type ^`n.c.a.x.a` @kind object;
  #L416960.  call temp:= `d`(v5, v6) @signature `Ln/c/a/u/k;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L416966.  v0:= temp @kind wide;
  #L416968.  v7:= v7 - v0 @kind long;
  #L41696a.  v7:= v7 * v2 @kind long;
  #L41696e.  call temp:= `a`(v5, v7) @signature `Ln/c/a/u/k;.a:(J)Ln/c/a/u/k;` @kind virtual;
  #L416974.  v6:= temp @kind object;
  #L416976.  return v6 @kind object;
  #L416978.  v6:= new `n.c.a.u.k`;
  #L41697c.  v7:= (`long`) v1 @kind i2l;
  #L41697e.  call `<init>`(v6, v7) @signature `Ln/c/a/u/k;.<init>:(J)V` @kind direct;
  #L416984.  return v6 @kind object;
  #L416986.  v6:= `@@n.c.a.x.a.u` @type ^`n.c.a.x.a` @kind object;
  #L41698a.  call temp:= `d`(v5, v6) @signature `Ln/c/a/u/k;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L416990.  v0:= temp @kind wide;
  #L416992.  v7:= v7 - v0 @kind long;
  #L416994.  call temp:= `a`(v5, v7) @signature `Ln/c/a/u/k;.a:(J)Ln/c/a/u/k;` @kind virtual;
  #L41699a.  v6:= temp @kind object;
  #L41699c.  return v6 @kind object;
  #L41699e.  v6:= `@@n.c.a.x.a.t` @type ^`n.c.a.x.a` @kind object;
  #L4169a2.  call temp:= `d`(v5, v6) @signature `Ln/c/a/u/k;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L4169a8.  v0:= temp @kind wide;
  #L4169aa.  v7:= v7 - v0 @kind long;
  #L4169ac.  call temp:= `a`(v5, v7) @signature `Ln/c/a/u/k;.a:(J)Ln/c/a/u/k;` @kind virtual;
  #L4169b2.  v6:= temp @kind object;
  #L4169b4.  return v6 @kind object;
  #L4169b6.  v6:= v5.`n.c.a.u.k.g` @type ^`n.c.a.c` @kind object;
  #L4169ba.  call temp:= `getValue`(v6) @signature `Ln/c/a/c;.getValue:()I` @kind virtual;
  #L4169c0.  v6:= temp;
  #L4169c2.  v0:= (`long`) v6 @kind i2l;
  #L4169c4.  v7:= v7 - v0 @kind long;
  #L4169c6.  call temp:= `a`(v5, v7) @signature `Ln/c/a/u/k;.a:(J)Ln/c/a/u/k;` @kind virtual;
  #L4169cc.  v6:= temp @kind object;
  #L4169ce.  return v6 @kind object;
  #L4169d0.  v6:= v5.`n.c.a.u.k.c` @type ^`int`;
  #L4169d4.  if v6 < v4 then goto L4169da;
  #L4169d8.  goto L4169de;
  #L4169da.  v1:= v1 - 1;
  #L4169de.  v6:= v5.`n.c.a.u.k.d` @type ^`int`;
  #L4169e2.  v7:= v5.`n.c.a.u.k.e` @type ^`int`;
  #L4169e6.  call temp:= `e`(v1, v6, v7) @signature `Ln/c/a/u/k;.e:(III)Ln/c/a/u/k;` @kind static;
  #L4169ec.  v6:= temp @kind object;
  #L4169ee.  return v6 @kind object;
  #L4169f0.  v6:= `@@n.c.a.x.a.y` @type ^`n.c.a.x.a` @kind object;
  #L4169f4.  call temp:= `d`(v5, v6) @signature `Ln/c/a/u/k;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L4169fa.  v0:= temp @kind wide;
  #L4169fc.  v7:= v7 - v0 @kind long;
  #L4169fe.  v7:= v7 * v2 @kind long;
  #L416a02.  call temp:= `a`(v5, v7) @signature `Ln/c/a/u/k;.a:(J)Ln/c/a/u/k;` @kind virtual;
  #L416a08.  v6:= temp @kind object;
  #L416a0a.  return v6 @kind object;
  #L416a0c.  v6:= v5.`n.c.a.u.k.c` @type ^`int`;
  #L416a10.  v1:= v1 - v4 @kind int;
  #L416a12.  v7:= v1 / 30;
  #L416a16.  v7:= v7 + v4 @kind int;
  #L416a18.  v1:= v1 %% 30;
  #L416a1c.  v1:= v1 + v4 @kind int;
  #L416a1e.  call temp:= `e`(v6, v7, v1) @signature `Ln/c/a/u/k;.e:(III)Ln/c/a/u/k;` @kind static;
  #L416a24.  v6:= temp @kind object;
  #L416a26.  return v6 @kind object;
  #L416a28.  v6:= v5.`n.c.a.u.k.c` @type ^`int`;
  #L416a2c.  v7:= v5.`n.c.a.u.k.d` @type ^`int`;
  #L416a30.  call temp:= `e`(v6, v7, v1) @signature `Ln/c/a/u/k;.e:(III)Ln/c/a/u/k;` @kind static;
  #L416a36.  v6:= temp @kind object;
  #L416a38.  return v6 @kind object;
  #L416a3a.  call temp:= `a`(v6, v5, v7) @signature `Ln/c/a/x/i;.a:(Ln/c/a/x/d;J)Ln/c/a/x/d;` @kind interface;
  #L416a40.  v6:= temp @kind object;
  #L416a42.  v6:= (`n.c.a.u.k`) v6 @kind object;
  #L416a46.  return v6 @kind object;
  #L416a48.  switch v0
                  | 1 => goto L416a28
                  | 2 => goto L416a0c
                  | 3 => goto L4169f0
                  | 4 => goto L4169d0
                  | 5 => goto L4169b6
                  | 6 => goto L41699e
                  | 7 => goto L416986
                  | 8 => goto L416978
                  | 9 => goto L41695c
                  | 10 => goto L41694a
                  | 11 => goto L416938
                  | 12 => goto L416920
                  | else => goto L4168f2;
}
procedure `n.c.a.x.d` `a`(`n.c.a.u.k` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/u/k;.a:(JLn/c/a/x/l;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L416aa8.  call temp:= `a`(v0, v1, v3) @signature `Ln/c/a/u/k;.a:(JLn/c/a/x/l;)Ln/c/a/u/k;` @kind virtual;
  #L416aae.  v1:= temp @kind object;
  #L416ab0.  return v1 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.u.k` v0 @kind this, `n.c.a.x.f` v1 @kind object) @signature `Ln/c/a/u/k;.a:(Ln/c/a/x/f;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L416ae0.  call temp:= `a`(v0, v1) @signature `Ln/c/a/u/k;.a:(Ln/c/a/x/f;)Ln/c/a/u/k;` @kind virtual;
  #L416ae6.  v1:= temp @kind object;
  #L416ae8.  return v1 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.u.k` v0 @kind this, `n.c.a.x.i` v1 @kind object, `long` v2 ) @signature `Ln/c/a/u/k;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L416afc.  call temp:= `a`(v0, v1, v2) @signature `Ln/c/a/u/k;.a:(Ln/c/a/x/i;J)Ln/c/a/u/k;` @kind virtual;
  #L416b02.  v1:= temp @kind object;
  #L416b04.  return v1 @kind object;
}
procedure `n.c.a.x.n` `a`(`n.c.a.u.k` v4 @kind this, `n.c.a.x.i` v5 @kind object) @signature `Ln/c/a/u/k;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L416b18.  v0:= instanceof @variable v5 @type ^`n.c.a.x.a` @kind boolean;
  #L416b1c.  if v0 == 0 then goto L416be0;
  #L416b20.  call temp:= `b`(v4, v5) @signature `Ln/c/a/u/b;.b:(Ln/c/a/x/i;)Z` @kind virtual;
  #L416b26.  v0:= temp;
  #L416b28.  if v0 == 0 then goto L416bb2;
  #L416b2c.  v5:= (`n.c.a.x.a`) v5 @kind object;
  #L416b30.  v0:= `@@n.c.a.u.k$a.a` @type ^`int`[] @kind object;
  #L416b34.  call temp:= `ordinal`(v5) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L416b3a.  v1:= temp;
  #L416b3c.  v0:= v0[v1];
  #L416b40.  v1:= 1I;
  #L416b42.  v2:= 1L;
  #L416b46.  if v0 == v1 then goto L416b9e;
  #L416b4a.  v1:= 2I;
  #L416b4c.  if v0 == v1 then goto L416b8a;
  #L416b50.  v1:= 3I;
  #L416b52.  if v0 == v1 then goto L416b7c;
  #L416b56.  v1:= 4I;
  #L416b58.  if v0 == v1 then goto L416b6e;
  #L416b5c.  call temp:= `g`(v4) @signature `Ln/c/a/u/k;.g:()Ln/c/a/u/j;` @kind virtual;
  #L416b62.  v0:= temp @kind object;
  #L416b64.  call temp:= `a`(v0, v5) @signature `Ln/c/a/u/j;.a:(Ln/c/a/x/a;)Ln/c/a/x/n;` @kind virtual;
  #L416b6a.  v5:= temp @kind object;
  #L416b6c.  return v5 @kind object;
  #L416b6e.  v0:= 1000L;
  #L416b72.  call temp:= `a`(v2, v0) @signature `Ln/c/a/x/n;.a:(JJ)Ln/c/a/x/n;` @kind static;
  #L416b78.  v5:= temp @kind object;
  #L416b7a.  return v5 @kind object;
  #L416b7c.  v0:= 5L;
  #L416b80.  call temp:= `a`(v2, v0) @signature `Ln/c/a/x/n;.a:(JJ)Ln/c/a/x/n;` @kind static;
  #L416b86.  v5:= temp @kind object;
  #L416b88.  return v5 @kind object;
  #L416b8a.  call temp:= `t`(v4) @signature `Ln/c/a/u/k;.t:()I` @kind virtual;
  #L416b90.  v5:= temp;
  #L416b92.  v0:= (`long`) v5 @kind i2l;
  #L416b94.  call temp:= `a`(v2, v0) @signature `Ln/c/a/x/n;.a:(JJ)Ln/c/a/x/n;` @kind static;
  #L416b9a.  v5:= temp @kind object;
  #L416b9c.  return v5 @kind object;
  #L416b9e.  call temp:= `s`(v4) @signature `Ln/c/a/u/k;.s:()I` @kind virtual;
  #L416ba4.  v5:= temp;
  #L416ba6.  v0:= (`long`) v5 @kind i2l;
  #L416ba8.  call temp:= `a`(v2, v0) @signature `Ln/c/a/x/n;.a:(JJ)Ln/c/a/x/n;` @kind static;
  #L416bae.  v5:= temp @kind object;
  #L416bb0.  return v5 @kind object;
  #L416bb2.  v0:= new `n.c.a.x.m`;
  #L416bb6.  v1:= new `java.lang.StringBuilder`;
  #L416bba.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L416bc0.  v2:= "Unsupported field: " @kind object;
  #L416bc4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L416bca.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L416bd0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L416bd6.  v5:= temp @kind object;
  #L416bd8.  call `<init>`(v0, v5) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L416bde.  throw v0;
  #L416be0.  call temp:= `c`(v5, v4) @signature `Ln/c/a/x/i;.c:(Ln/c/a/x/e;)Ln/c/a/x/n;` @kind interface;
  #L416be6.  v5:= temp @kind object;
  #L416be8.  return v5 @kind object;
}
procedure `void` `a`(`n.c.a.u.k` v1 @kind this, `java.io.DataOutput` v2 @kind object) @signature `Ln/c/a/u/k;.a:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L417da0.  v0:= `@@n.c.a.x.a.D` @type ^`n.c.a.x.a` @kind object;
  #L417da4.  call temp:= `c`(v1, v0) @signature `Ln/c/a/w/c;.c:(Ln/c/a/x/i;)I` @kind virtual;
  #L417daa.  v0:= temp;
  #L417dac.  call `writeInt`(v2, v0) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L417db2.  v0:= `@@n.c.a.x.a.A` @type ^`n.c.a.x.a` @kind object;
  #L417db6.  call temp:= `c`(v1, v0) @signature `Ln/c/a/w/c;.c:(Ln/c/a/x/i;)I` @kind virtual;
  #L417dbc.  v0:= temp;
  #L417dbe.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L417dc4.  v0:= `@@n.c.a.x.a.v` @type ^`n.c.a.x.a` @kind object;
  #L417dc8.  call temp:= `c`(v1, v0) @signature `Ln/c/a/w/c;.c:(Ln/c/a/x/i;)I` @kind virtual;
  #L417dce.  v0:= temp;
  #L417dd0.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L417dd6.  return @kind void;
}
procedure `n.c.a.u.a` `b`(`n.c.a.u.k` v0 @kind this, `long` v1 ) @signature `Ln/c/a/u/k;.b:(J)Ln/c/a/u/a;` @AccessFlag SYNTHETIC {
    temp;

  #L416548.  call temp:= `b`(v0, v1) @signature `Ln/c/a/u/k;.b:(J)Ln/c/a/u/k;` @kind virtual;
  #L41654e.  v1:= temp @kind object;
  #L416550.  return v1 @kind object;
}
procedure `n.c.a.u.a` `b`(`n.c.a.u.k` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/u/k;.b:(JLn/c/a/x/l;)Ln/c/a/u/a;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L416510.  call temp:= `b`(v0, v1, v3) @signature `Ln/c/a/u/k;.b:(JLn/c/a/x/l;)Ln/c/a/u/k;` @kind virtual;
  #L416516.  v1:= temp @kind object;
  #L416518.  return v1 @kind object;
}
procedure `n.c.a.u.b` `b`(`n.c.a.u.k` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/u/k;.b:(JLn/c/a/x/l;)Ln/c/a/u/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L41659c.  call temp:= `b`(v0, v1, v3) @signature `Ln/c/a/u/k;.b:(JLn/c/a/x/l;)Ln/c/a/u/k;` @kind virtual;
  #L4165a2.  v1:= temp @kind object;
  #L4165a4.  return v1 @kind object;
}
procedure `n.c.a.u.k` `b`(`n.c.a.u.k` v3 @kind this, `long` v4 ) @signature `Ln/c/a/u/k;.b:(J)Ln/c/a/u/k;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L4167cc.  v0:= 0L;
  #L4167d0.  v2:= lcmp(v4, v0);
  #L4167d4.  if v2 != 0 then goto L4167da;
  #L4167d8.  return v3 @kind object;
  #L4167da.  v0:= v3.`n.c.a.u.k.d` @type ^`int`;
  #L4167de.  v1:= 1I;
  #L4167e0.  v0:= v0 - v1 @kind int;
  #L4167e2.  v5:= (`int`) v4 @kind l2i;
  #L4167e4.  v0:= v0 + v5 @kind int;
  #L4167e6.  v4:= v0 / 12;
  #L4167ea.  v0:= v0 %% 12;
  #L4167ee.  if v0 >= 0 then goto L416800;
  #L4167f2.  v0:= v0 + 12;
  #L4167f6.  call temp:= `e`(v4, v1) @signature `Ln/c/a/w/d;.e:(II)I` @kind static;
  #L4167fc.  v4:= temp;
  #L4167fe.  goto L4167ee;
  #L416800.  v5:= v3.`n.c.a.u.k.c` @type ^`int`;
  #L416804.  call temp:= `d`(v5, v4) @signature `Ln/c/a/w/d;.d:(II)I` @kind static;
  #L41680a.  v4:= temp;
  #L41680c.  v5:= v3.`n.c.a.u.k.b` @type ^`n.c.a.u.l` @kind object;
  #L416810.  v0:= v0 + v1 @kind int;
  #L416812.  v1:= v3.`n.c.a.u.k.e` @type ^`int`;
  #L416816.  call temp:= `a`(v5, v4, v0, v1) @signature `Ln/c/a/u/k;.a:(Ln/c/a/u/l;III)Ln/c/a/u/k;` @kind static;
  #L41681c.  v4:= temp @kind object;
  #L41681e.  return v4 @kind object;
}
procedure `n.c.a.u.k` `b`(`n.c.a.u.k` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/u/k;.b:(JLn/c/a/x/l;)Ln/c/a/u/k;` @AccessFlag PUBLIC {
    temp;

  #L416768.  call temp:= `b`(v0, v1, v3) @signature `Ln/c/a/u/a;.b:(JLn/c/a/x/l;)Ln/c/a/u/a;` @kind super;
  #L41676e.  v1:= temp @kind object;
  #L416770.  v1:= (`n.c.a.u.k`) v1 @kind object;
  #L416774.  return v1 @kind object;
}
procedure `n.c.a.x.d` `b`(`n.c.a.u.k` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/u/k;.b:(JLn/c/a/x/l;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L416ac4.  call temp:= `b`(v0, v1, v3) @signature `Ln/c/a/u/k;.b:(JLn/c/a/x/l;)Ln/c/a/u/k;` @kind virtual;
  #L416aca.  v1:= temp @kind object;
  #L416acc.  return v1 @kind object;
}
procedure `n.c.a.u.a` `c`(`n.c.a.u.k` v0 @kind this, `long` v1 ) @signature `Ln/c/a/u/k;.c:(J)Ln/c/a/u/a;` @AccessFlag SYNTHETIC {
    temp;

  #L416564.  call temp:= `c`(v0, v1) @signature `Ln/c/a/u/k;.c:(J)Ln/c/a/u/k;` @kind virtual;
  #L41656a.  v1:= temp @kind object;
  #L41656c.  return v1 @kind object;
}
procedure `n.c.a.u.k` `c`(`n.c.a.u.k` v3 @kind this, `long` v4 ) @signature `Ln/c/a/u/k;.c:(J)Ln/c/a/u/k;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L416830.  v0:= 0L;
  #L416834.  v2:= lcmp(v4, v0);
  #L416838.  if v2 != 0 then goto L41683e;
  #L41683c.  return v3 @kind object;
  #L41683e.  v0:= v3.`n.c.a.u.k.c` @type ^`int`;
  #L416842.  v5:= (`int`) v4 @kind l2i;
  #L416844.  call temp:= `d`(v0, v5) @signature `Ln/c/a/w/d;.d:(II)I` @kind static;
  #L41684a.  v4:= temp;
  #L41684c.  v5:= v3.`n.c.a.u.k.b` @type ^`n.c.a.u.l` @kind object;
  #L416850.  v0:= v3.`n.c.a.u.k.d` @type ^`int`;
  #L416854.  v1:= v3.`n.c.a.u.k.e` @type ^`int`;
  #L416858.  call temp:= `a`(v5, v4, v0, v1) @signature `Ln/c/a/u/k;.a:(Ln/c/a/u/l;III)Ln/c/a/u/k;` @kind static;
  #L41685e.  v4:= temp @kind object;
  #L416860.  return v4 @kind object;
}
procedure `long` `d`(`n.c.a.u.k` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/u/k;.d:(Ln/c/a/x/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L416350.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L416354.  if v0 == 0 then goto L41640e;
  #L416358.  v0:= `@@n.c.a.u.k$a.a` @type ^`int`[] @kind object;
  #L41635c.  v1:= v4 @kind object;
  #L41635e.  v1:= (`n.c.a.x.a`) v1 @kind object;
  #L416362.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L416368.  v1:= temp;
  #L41636a.  v0:= v0[v1];
  #L41636e.  goto L416418;
  #L416374.  v0:= new `n.c.a.x.m`;
  #L416378.  v1:= new `java.lang.StringBuilder`;
  #L41637c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L416382.  v2:= "Unsupported field: " @kind object;
  #L416386.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41638c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L416392.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L416398.  v4:= temp @kind object;
  #L41639a.  call `<init>`(v0, v4) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4163a0.  throw v0;
  #L4163a2.  v4:= v3.`n.c.a.u.k.b` @type ^`n.c.a.u.l` @kind object;
  #L4163a6.  call temp:= `getValue`(v4) @signature `Ln/c/a/u/l;.getValue:()I` @kind virtual;
  #L4163ac.  v4:= temp;
  #L4163ae.  v0:= (`long`) v4 @kind i2l;
  #L4163b0.  return v0 @kind wide;
  #L4163b2.  v4:= v3.`n.c.a.u.k.c` @type ^`int`;
  #L4163b6.  goto L4163ae;
  #L4163b8.  v4:= v3.`n.c.a.u.k.d` @type ^`int`;
  #L4163bc.  goto L4163ae;
  #L4163be.  v4:= v3.`n.c.a.u.k.f` @type ^`int`;
  #L4163c2.  v4:= v4 + -1;
  #L4163c6.  v4:= v4 / 7;
  #L4163ca.  v4:= v4 + 1;
  #L4163ce.  goto L4163ae;
  #L4163d0.  call temp:= `h`(v3) @signature `Ln/c/a/u/k;.h:()J` @kind virtual;
  #L4163d6.  v0:= temp @kind wide;
  #L4163d8.  return v0 @kind wide;
  #L4163da.  v4:= v3.`n.c.a.u.k.f` @type ^`int`;
  #L4163de.  v4:= v4 + -1;
  #L4163e2.  v4:= v4 %% 7;
  #L4163e6.  goto L4163ca;
  #L4163e8.  v4:= v3.`n.c.a.u.k.e` @type ^`int`;
  #L4163ec.  goto L4163de;
  #L4163ee.  v4:= v3.`n.c.a.u.k.g` @type ^`n.c.a.c` @kind object;
  #L4163f2.  call temp:= `getValue`(v4) @signature `Ln/c/a/c;.getValue:()I` @kind virtual;
  #L4163f8.  v4:= temp;
  #L4163fa.  goto L4163ae;
  #L4163fc.  v4:= v3.`n.c.a.u.k.e` @type ^`int`;
  #L416400.  goto L4163c2;
  #L416402.  v4:= v3.`n.c.a.u.k.f` @type ^`int`;
  #L416406.  goto L4163ae;
  #L416408.  v4:= v3.`n.c.a.u.k.e` @type ^`int`;
  #L41640c.  goto L4163ae;
  #L41640e.  call temp:= `b`(v4, v3) @signature `Ln/c/a/x/i;.b:(Ln/c/a/x/e;)J` @kind interface;
  #L416414.  v0:= temp @kind wide;
  #L416416.  return v0 @kind wide;
  #L416418.  switch v0
                  | 1 => goto L416408
                  | 2 => goto L416402
                  | 3 => goto L4163fc
                  | 4 => goto L4163b2
                  | 5 => goto L4163ee
                  | 6 => goto L4163e8
                  | 7 => goto L4163da
                  | 8 => goto L4163d0
                  | 9 => goto L4163be
                  | 10 => goto L4163b8
                  | 11 => goto L4163b2
                  | 12 => goto L4163a2
                  | else => goto L416374;
}
procedure `n.c.a.u.i` `e`(`n.c.a.u.k` v1 @kind this) @signature `Ln/c/a/u/k;.e:()Ln/c/a/u/i;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L41667c.  call temp:= `e`(v1) @signature `Ln/c/a/u/k;.e:()Ln/c/a/u/l;` @kind virtual;
  #L416682.  v0:= temp @kind object;
  #L416684.  return v0 @kind object;
}
procedure `n.c.a.u.l` `e`(`n.c.a.u.k` v1 @kind this) @signature `Ln/c/a/u/k;.e:()Ln/c/a/u/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L416a90.  v0:= v1.`n.c.a.u.k.b` @type ^`n.c.a.u.l` @kind object;
  #L416a94.  return v0 @kind object;
}
procedure `n.c.a.u.h` `g`(`n.c.a.u.k` v1 @kind this) @signature `Ln/c/a/u/k;.g:()Ln/c/a/u/h;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L416660.  call temp:= `g`(v1) @signature `Ln/c/a/u/k;.g:()Ln/c/a/u/j;` @kind virtual;
  #L416666.  v0:= temp @kind object;
  #L416668.  return v0 @kind object;
}
procedure `n.c.a.u.j` `g`(`n.c.a.u.k` v1 @kind this) @signature `Ln/c/a/u/k;.g:()Ln/c/a/u/j;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L416698.  v0:= `@@n.c.a.u.j.d` @type ^`n.c.a.u.j` @kind object;
  #L41669c.  return v0 @kind object;
}
procedure `long` `h`(`n.c.a.u.k` v3 @kind this) @signature `Ln/c/a/u/k;.h:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L416460.  v0:= v3.`n.c.a.u.k.c` @type ^`int`;
  #L416464.  v1:= v3.`n.c.a.u.k.d` @type ^`int`;
  #L416468.  v2:= v3.`n.c.a.u.k.e` @type ^`int`;
  #L41646c.  call temp:= `c`(v0, v1, v2) @signature `Ln/c/a/u/k;.c:(III)J` @kind static;
  #L416472.  v0:= temp @kind wide;
  #L416474.  return v0 @kind wide;
}
procedure `int` `s`(`n.c.a.u.k` v2 @kind this) @signature `Ln/c/a/u/k;.s:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L415e00.  v0:= v2.`n.c.a.u.k.d` @type ^`int`;
  #L415e04.  v0:= v0 + -1;
  #L415e08.  v1:= v2.`n.c.a.u.k.c` @type ^`int`;
  #L415e0c.  call temp:= `b`(v0, v1) @signature `Ln/c/a/u/k;.b:(II)I` @kind static;
  #L415e12.  v0:= temp;
  #L415e14.  return v0;
}
procedure `int` `t`(`n.c.a.u.k` v1 @kind this) @signature `Ln/c/a/u/k;.t:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L415e28.  v0:= v1.`n.c.a.u.k.c` @type ^`int`;
  #L415e2c.  call temp:= `h`(v0) @signature `Ln/c/a/u/k;.h:(I)I` @kind static;
  #L415e32.  v0:= temp;
  #L415e34.  return v0;
}
