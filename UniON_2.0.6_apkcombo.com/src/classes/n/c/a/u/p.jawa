record `n.c.a.u.p` @kind class @AccessFlag PUBLIC_FINAL extends `n.c.a.u.a` @kind class, `java.io.Serializable` @kind interface {
  `n.c.a.f` `n.c.a.u.p.b` @AccessFlag PRIVATE_FINAL;
  `n.c.a.u.q` `n.c.a.u.p.c` @AccessFlag PRIVATE_TRANSIENT;
  `int` `n.c.a.u.p.d` @AccessFlag PRIVATE_TRANSIENT;
}
global `n.c.a.f` `@@n.c.a.u.p.e` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/c/a/u/p;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L41a130.  v0:= 1I;
  #L41a132.  v1:= 1873I;
  #L41a136.  call temp:= `a`(v1, v0, v0) @signature `Ln/c/a/f;.a:(III)Ln/c/a/f;` @kind static;
  #L41a13c.  v0:= temp @kind object;
  #L41a13e.  `@@n.c.a.u.p.e` @type ^`n.c.a.f` := v0 @kind object;
  #L41a142.  return @kind void;
}
procedure `void` `<init>`(`n.c.a.u.p` v2 @kind this, `n.c.a.f` v3 @kind object) @signature `Ln/c/a/u/p;.<init>:(Ln/c/a/f;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L41a154.  call `<init>`(v2) @signature `Ln/c/a/u/a;.<init>:()V` @kind direct;
  #L41a15a.  v0:= `@@n.c.a.u.p.e` @type ^`n.c.a.f` @kind object;
  #L41a15e.  call temp:= `b`(v3, v0) @signature `Ln/c/a/f;.b:(Ln/c/a/u/b;)Z` @kind virtual;
  #L41a164.  v0:= temp;
  #L41a166.  if v0 != 0 then goto L41a1a2;
  #L41a16a.  call temp:= `a`(v3) @signature `Ln/c/a/u/q;.a:(Ln/c/a/f;)Ln/c/a/u/q;` @kind static;
  #L41a170.  v0:= temp @kind object;
  #L41a172.  v2.`n.c.a.u.p.c` @type ^`n.c.a.u.q` := v0 @kind object;
  #L41a176.  v0:= v2.`n.c.a.u.p.c` @type ^`n.c.a.u.q` @kind object;
  #L41a17a.  call temp:= `h`(v0) @signature `Ln/c/a/u/q;.h:()Ln/c/a/f;` @kind virtual;
  #L41a180.  v0:= temp @kind object;
  #L41a182.  call temp:= `x`(v0) @signature `Ln/c/a/f;.x:()I` @kind virtual;
  #L41a188.  v0:= temp;
  #L41a18a.  v0:= v0 + -1;
  #L41a18e.  call temp:= `x`(v3) @signature `Ln/c/a/f;.x:()I` @kind virtual;
  #L41a194.  v1:= temp;
  #L41a196.  v1:= v1 - v0 @kind int;
  #L41a198.  v2.`n.c.a.u.p.d` @type ^`int` := v1;
  #L41a19c.  v2.`n.c.a.u.p.b` @type ^`n.c.a.f` := v3 @kind object;
  #L41a1a0.  return @kind void;
  #L41a1a2.  v3:= new `n.c.a.b`;
  #L41a1a6.  v0:= "Minimum supported date is January 1st Meiji 6" @kind object;
  #L41a1aa.  call `<init>`(v3, v0) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41a1b0.  throw v3;
}
procedure `n.c.a.u.b` `a`(`java.io.DataInput` v3 @kind object) @signature `Ln/c/a/u/p;.a:(Ljava/io/DataInput;)Ln/c/a/u/b;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L419c40.  call temp:= `readInt`(v3) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L419c46.  v0:= temp;
  #L419c48.  call temp:= `readByte`(v3) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L419c4e.  v1:= temp;
  #L419c50.  call temp:= `readByte`(v3) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L419c56.  v3:= temp;
  #L419c58.  v2:= `@@n.c.a.u.o.e` @type ^`n.c.a.u.o` @kind object;
  #L419c5c.  call temp:= `a`(v2, v0, v1, v3) @signature `Ln/c/a/u/o;.a:(III)Ln/c/a/u/p;` @kind virtual;
  #L419c62.  v3:= temp @kind object;
  #L419c64.  return v3 @kind object;
}
procedure `n.c.a.u.p` `a`(`n.c.a.u.p` v1 @kind this, `n.c.a.f` v2 @kind object) @signature `Ln/c/a/u/p;.a:(Ln/c/a/f;)Ln/c/a/u/p;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L419df4.  v0:= v1.`n.c.a.u.p.b` @type ^`n.c.a.f` @kind object;
  #L419df8.  call temp:= `equals`(v2, v0) @signature `Ln/c/a/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L419dfe.  v0:= temp;
  #L419e00.  if v0 == 0 then goto L419e08;
  #L419e04.  v0:= v1 @kind object;
  #L419e06.  goto L419e12;
  #L419e08.  v0:= new `n.c.a.u.p`;
  #L419e0c.  call `<init>`(v0, v2) @signature `Ln/c/a/u/p;.<init>:(Ln/c/a/f;)V` @kind direct;
  #L419e12.  return v0 @kind object;
}
procedure `n.c.a.u.p` `a`(`n.c.a.u.p` v1 @kind this, `n.c.a.u.q` v2 @kind object, `int` v3 ) @signature `Ln/c/a/u/p;.a:(Ln/c/a/u/q;I)Ln/c/a/u/p;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L419f58.  v0:= `@@n.c.a.u.o.e` @type ^`n.c.a.u.o` @kind object;
  #L419f5c.  call temp:= `a`(v0, v2, v3) @signature `Ln/c/a/u/o;.a:(Ln/c/a/u/i;I)I` @kind virtual;
  #L419f62.  v2:= temp;
  #L419f64.  v3:= v1.`n.c.a.u.p.b` @type ^`n.c.a.f` @kind object;
  #L419f68.  call temp:= `d`(v3, v2) @signature `Ln/c/a/f;.d:(I)Ln/c/a/f;` @kind virtual;
  #L419f6e.  v2:= temp @kind object;
  #L419f70.  call temp:= `a`(v1, v2) @signature `Ln/c/a/u/p;.a:(Ln/c/a/f;)Ln/c/a/u/p;` @kind direct;
  #L419f76.  v2:= temp @kind object;
  #L419f78.  return v2 @kind object;
}
procedure `n.c.a.x.n` `a`(`n.c.a.u.p` v5 @kind this, `int` v6 ) @signature `Ln/c/a/u/p;.a:(I)Ln/c/a/x/n;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L41a014.  v0:= `@@n.c.a.u.o.d` @type ^`java.util.Locale` @kind object;
  #L41a018.  call temp:= `getInstance`(v0) @signature `Ljava/util/Calendar;.getInstance:(Ljava/util/Locale;)Ljava/util/Calendar;` @kind static;
  #L41a01e.  v0:= temp @kind object;
  #L41a020.  v1:= v5.`n.c.a.u.p.c` @type ^`n.c.a.u.q` @kind object;
  #L41a024.  call temp:= `getValue`(v1) @signature `Ln/c/a/u/q;.getValue:()I` @kind virtual;
  #L41a02a.  v1:= temp;
  #L41a02c.  v1:= v1 + 2;
  #L41a030.  v2:= 0I;
  #L41a032.  call `set`(v0, v2, v1) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L41a038.  v1:= v5.`n.c.a.u.p.d` @type ^`int`;
  #L41a03c.  v2:= v5.`n.c.a.u.p.b` @type ^`n.c.a.f` @kind object;
  #L41a040.  call temp:= `w`(v2) @signature `Ln/c/a/f;.w:()I` @kind virtual;
  #L41a046.  v2:= temp;
  #L41a048.  v2:= v2 + -1;
  #L41a04c.  v3:= v5.`n.c.a.u.p.b` @type ^`n.c.a.f` @kind object;
  #L41a050.  call temp:= `s`(v3) @signature `Ln/c/a/f;.s:()I` @kind virtual;
  #L41a056.  v3:= temp;
  #L41a058.  call `set`(v0, v1, v2, v3) @signature `Ljava/util/Calendar;.set:(III)V` @kind virtual;
  #L41a05e.  call temp:= `getActualMinimum`(v0, v6) @signature `Ljava/util/Calendar;.getActualMinimum:(I)I` @kind virtual;
  #L41a064.  v1:= temp;
  #L41a066.  v1:= (`long`) v1 @kind i2l;
  #L41a068.  call temp:= `getActualMaximum`(v0, v6) @signature `Ljava/util/Calendar;.getActualMaximum:(I)I` @kind virtual;
  #L41a06e.  v6:= temp;
  #L41a070.  v3:= (`long`) v6 @kind i2l;
  #L41a072.  call temp:= `a`(v1, v3) @signature `Ln/c/a/x/n;.a:(JJ)Ln/c/a/x/n;` @kind static;
  #L41a078.  v6:= temp @kind object;
  #L41a07a.  return v6 @kind object;
}
procedure `n.c.a.u.p` `b`(`n.c.a.u.p` v1 @kind this, `int` v2 ) @signature `Ln/c/a/u/p;.b:(I)Ln/c/a/u/p;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L419f34.  call temp:= `e`(v1) @signature `Ln/c/a/u/p;.e:()Ln/c/a/u/q;` @kind virtual;
  #L419f3a.  v0:= temp @kind object;
  #L419f3c.  call temp:= `a`(v1, v0, v2) @signature `Ln/c/a/u/p;.a:(Ln/c/a/u/q;I)Ln/c/a/u/p;` @kind direct;
  #L419f42.  v2:= temp @kind object;
  #L419f44.  return v2 @kind object;
}
procedure `void` `readObject`(`n.c.a.u.p` v1 @kind this, `java.io.ObjectInputStream` v2 @kind object) @signature `Ln/c/a/u/p;.readObject:(Ljava/io/ObjectInputStream;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L41a1c4.  call `defaultReadObject`(v2) @signature `Ljava/io/ObjectInputStream;.defaultReadObject:()V` @kind virtual;
  #L41a1ca.  v2:= v1.`n.c.a.u.p.b` @type ^`n.c.a.f` @kind object;
  #L41a1ce.  call temp:= `a`(v2) @signature `Ln/c/a/u/q;.a:(Ln/c/a/f;)Ln/c/a/u/q;` @kind static;
  #L41a1d4.  v2:= temp @kind object;
  #L41a1d6.  v1.`n.c.a.u.p.c` @type ^`n.c.a.u.q` := v2 @kind object;
  #L41a1da.  v2:= v1.`n.c.a.u.p.c` @type ^`n.c.a.u.q` @kind object;
  #L41a1de.  call temp:= `h`(v2) @signature `Ln/c/a/u/q;.h:()Ln/c/a/f;` @kind virtual;
  #L41a1e4.  v2:= temp @kind object;
  #L41a1e6.  call temp:= `x`(v2) @signature `Ln/c/a/f;.x:()I` @kind virtual;
  #L41a1ec.  v2:= temp;
  #L41a1ee.  v2:= v2 + -1;
  #L41a1f2.  v0:= v1.`n.c.a.u.p.b` @type ^`n.c.a.f` @kind object;
  #L41a1f6.  call temp:= `x`(v0) @signature `Ln/c/a/f;.x:()I` @kind virtual;
  #L41a1fc.  v0:= temp;
  #L41a1fe.  v0:= v0 - v2 @kind int;
  #L41a200.  v1.`n.c.a.u.p.d` @type ^`int` := v0;
  #L41a204.  return @kind void;
}
procedure `long` `s`(`n.c.a.u.p` v3 @kind this) @signature `Ln/c/a/u/p;.s:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L419a4c.  v0:= v3.`n.c.a.u.p.d` @type ^`int`;
  #L419a50.  v1:= 1I;
  #L419a52.  if v0 != v1 then goto L419a7e;
  #L419a56.  v0:= v3.`n.c.a.u.p.b` @type ^`n.c.a.f` @kind object;
  #L419a5a.  call temp:= `u`(v0) @signature `Ln/c/a/f;.u:()I` @kind virtual;
  #L419a60.  v0:= temp;
  #L419a62.  v2:= v3.`n.c.a.u.p.c` @type ^`n.c.a.u.q` @kind object;
  #L419a66.  call temp:= `h`(v2) @signature `Ln/c/a/u/q;.h:()Ln/c/a/f;` @kind virtual;
  #L419a6c.  v2:= temp @kind object;
  #L419a6e.  call temp:= `u`(v2) @signature `Ln/c/a/f;.u:()I` @kind virtual;
  #L419a74.  v2:= temp;
  #L419a76.  v0:= v0 - v2 @kind int;
  #L419a78.  v0:= v0 + v1 @kind int;
  #L419a7a.  v0:= (`long`) v0 @kind i2l;
  #L419a7c.  return v0 @kind wide;
  #L419a7e.  v0:= v3.`n.c.a.u.p.b` @type ^`n.c.a.f` @kind object;
  #L419a82.  call temp:= `u`(v0) @signature `Ln/c/a/f;.u:()I` @kind virtual;
  #L419a88.  v0:= temp;
  #L419a8a.  goto L419a7a;
}
procedure `java.lang.Object` `writeReplace`(`n.c.a.u.p` v2 @kind this) @signature `Ln/c/a/u/p;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L419a2c.  v0:= new `n.c.a.u.u`;
  #L419a30.  v1:= 1I;
  #L419a32.  call `<init>`(v0, v1, v2) @signature `Ln/c/a/u/u;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L419a38.  return v0 @kind object;
}
procedure `n.c.a.u.a` `a`(`n.c.a.u.p` v0 @kind this, `long` v1 ) @signature `Ln/c/a/u/p;.a:(J)Ln/c/a/u/a;` @AccessFlag SYNTHETIC {
    temp;

  #L419b98.  call temp:= `a`(v0, v1) @signature `Ln/c/a/u/p;.a:(J)Ln/c/a/u/p;` @kind virtual;
  #L419b9e.  v1:= temp @kind object;
  #L419ba0.  return v1 @kind object;
}
procedure `n.c.a.u.b` `a`(`n.c.a.u.p` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/u/p;.a:(JLn/c/a/x/l;)Ln/c/a/u/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L419bec.  call temp:= `a`(v0, v1, v3) @signature `Ln/c/a/u/p;.a:(JLn/c/a/x/l;)Ln/c/a/u/p;` @kind virtual;
  #L419bf2.  v1:= temp @kind object;
  #L419bf4.  return v1 @kind object;
}
procedure `n.c.a.u.b` `a`(`n.c.a.u.p` v0 @kind this, `n.c.a.x.f` v1 @kind object) @signature `Ln/c/a/u/p;.a:(Ln/c/a/x/f;)Ln/c/a/u/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L419c78.  call temp:= `a`(v0, v1) @signature `Ln/c/a/u/p;.a:(Ln/c/a/x/f;)Ln/c/a/u/p;` @kind virtual;
  #L419c7e.  v1:= temp @kind object;
  #L419c80.  return v1 @kind object;
}
procedure `n.c.a.u.b` `a`(`n.c.a.u.p` v0 @kind this, `n.c.a.x.h` v1 @kind object) @signature `Ln/c/a/u/p;.a:(Ln/c/a/x/h;)Ln/c/a/u/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L419c24.  call temp:= `a`(v0, v1) @signature `Ln/c/a/u/p;.a:(Ln/c/a/x/h;)Ln/c/a/u/p;` @kind virtual;
  #L419c2a.  v1:= temp @kind object;
  #L419c2c.  return v1 @kind object;
}
procedure `n.c.a.u.b` `a`(`n.c.a.u.p` v0 @kind this, `n.c.a.x.i` v1 @kind object, `long` v2 ) @signature `Ln/c/a/u/p;.a:(Ln/c/a/x/i;J)Ln/c/a/u/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L419c94.  call temp:= `a`(v0, v1, v2) @signature `Ln/c/a/u/p;.a:(Ln/c/a/x/i;J)Ln/c/a/u/p;` @kind virtual;
  #L419c9a.  v1:= temp @kind object;
  #L419c9c.  return v1 @kind object;
}
procedure `n.c.a.u.c` `a`(`n.c.a.u.p` v0 @kind this, `n.c.a.h` v1 @kind object) @signature `Ln/c/a/u/p;.a:(Ln/c/a/h;)Ln/c/a/u/c;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L419cb0.  call temp:= `a`(v0, v1) @signature `Ln/c/a/u/a;.a:(Ln/c/a/h;)Ln/c/a/u/c;` @kind super;
  #L419cb6.  v1:= temp @kind object;
  #L419cb8.  return v1 @kind object;
}
procedure `n.c.a.u.p` `a`(`n.c.a.u.p` v1 @kind this, `long` v2 ) @signature `Ln/c/a/u/p;.a:(J)Ln/c/a/u/p;` @AccessFlag  {
    temp;
    v0;

  #L419d7c.  v0:= v1.`n.c.a.u.p.b` @type ^`n.c.a.f` @kind object;
  #L419d80.  call temp:= `c`(v0, v2) @signature `Ln/c/a/f;.c:(J)Ln/c/a/f;` @kind virtual;
  #L419d86.  v2:= temp @kind object;
  #L419d88.  call temp:= `a`(v1, v2) @signature `Ln/c/a/u/p;.a:(Ln/c/a/f;)Ln/c/a/u/p;` @kind direct;
  #L419d8e.  v2:= temp @kind object;
  #L419d90.  return v2 @kind object;
}
procedure `n.c.a.u.p` `a`(`n.c.a.u.p` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/u/p;.a:(JLn/c/a/x/l;)Ln/c/a/u/p;` @AccessFlag PUBLIC {
    temp;

  #L419d1c.  call temp:= `a`(v0, v1, v3) @signature `Ln/c/a/u/b;.a:(JLn/c/a/x/l;)Ln/c/a/u/b;` @kind super;
  #L419d22.  v1:= temp @kind object;
  #L419d24.  v1:= (`n.c.a.u.p`) v1 @kind object;
  #L419d28.  return v1 @kind object;
}
procedure `n.c.a.u.p` `a`(`n.c.a.u.p` v0 @kind this, `n.c.a.x.f` v1 @kind object) @signature `Ln/c/a/u/p;.a:(Ln/c/a/x/f;)Ln/c/a/u/p;` @AccessFlag PUBLIC {
    temp;

  #L419e24.  call temp:= `a`(v0, v1) @signature `Ln/c/a/u/b;.a:(Ln/c/a/x/f;)Ln/c/a/u/b;` @kind super;
  #L419e2a.  v1:= temp @kind object;
  #L419e2c.  v1:= (`n.c.a.u.p`) v1 @kind object;
  #L419e30.  return v1 @kind object;
}
procedure `n.c.a.u.p` `a`(`n.c.a.u.p` v0 @kind this, `n.c.a.x.h` v1 @kind object) @signature `Ln/c/a/u/p;.a:(Ln/c/a/x/h;)Ln/c/a/u/p;` @AccessFlag PUBLIC {
    temp;

  #L419d5c.  call temp:= `a`(v0, v1) @signature `Ln/c/a/u/b;.a:(Ln/c/a/x/h;)Ln/c/a/u/b;` @kind super;
  #L419d62.  v1:= temp @kind object;
  #L419d64.  v1:= (`n.c.a.u.p`) v1 @kind object;
  #L419d68.  return v1 @kind object;
}
procedure `n.c.a.u.p` `a`(`n.c.a.u.p` v6 @kind this, `n.c.a.x.i` v7 @kind object, `long` v8 ) @signature `Ln/c/a/u/p;.a:(Ln/c/a/x/i;J)Ln/c/a/u/p;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L419e44.  v0:= instanceof @variable v7 @type ^`n.c.a.x.a` @kind boolean;
  #L419e48.  if v0 == 0 then goto L419f14;
  #L419e4c.  v0:= v7 @kind object;
  #L419e4e.  v0:= (`n.c.a.x.a`) v0 @kind object;
  #L419e52.  call temp:= `d`(v6, v0) @signature `Ln/c/a/u/p;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L419e58.  v1:= temp @kind wide;
  #L419e5a.  v3:= lcmp(v1, v8);
  #L419e5e.  if v3 != 0 then goto L419e64;
  #L419e62.  return v6 @kind object;
  #L419e64.  v1:= `@@n.c.a.u.p$a.a` @type ^`int`[] @kind object;
  #L419e68.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L419e6e.  v2:= temp;
  #L419e70.  v1:= v1[v2];
  #L419e74.  v2:= 7I;
  #L419e76.  v3:= 2I;
  #L419e78.  v4:= 1I;
  #L419e7a.  if v1 == v4 then goto L419e88;
  #L419e7e.  if v1 == v3 then goto L419e88;
  #L419e82.  if v1 == v2 then goto L419e88;
  #L419e86.  goto L419ebc;
  #L419e88.  call temp:= `g`(v6) @signature `Ln/c/a/u/p;.g:()Ln/c/a/u/o;` @kind virtual;
  #L419e8e.  v1:= temp @kind object;
  #L419e90.  call temp:= `a`(v1, v0) @signature `Ln/c/a/u/o;.a:(Ln/c/a/x/a;)Ln/c/a/x/n;` @kind virtual;
  #L419e96.  v1:= temp @kind object;
  #L419e98.  call temp:= `a`(v1, v8, v0) @signature `Ln/c/a/x/n;.a:(JLn/c/a/x/i;)I` @kind virtual;
  #L419e9e.  v1:= temp;
  #L419ea0.  v5:= `@@n.c.a.u.p$a.a` @type ^`int`[] @kind object;
  #L419ea4.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L419eaa.  v0:= temp;
  #L419eac.  v0:= v5[v0];
  #L419eb0.  if v0 == v4 then goto L419ef2;
  #L419eb4.  if v0 == v3 then goto L419ee8;
  #L419eb8.  if v0 == v2 then goto L419ed2;
  #L419ebc.  v0:= v6.`n.c.a.u.p.b` @type ^`n.c.a.f` @kind object;
  #L419ec0.  call temp:= `a`(v0, v7, v8) @signature `Ln/c/a/f;.a:(Ln/c/a/x/i;J)Ln/c/a/f;` @kind virtual;
  #L419ec6.  v7:= temp @kind object;
  #L419ec8.  call temp:= `a`(v6, v7) @signature `Ln/c/a/u/p;.a:(Ln/c/a/f;)Ln/c/a/u/p;` @kind direct;
  #L419ece.  v7:= temp @kind object;
  #L419ed0.  return v7 @kind object;
  #L419ed2.  call temp:= `a`(v1) @signature `Ln/c/a/u/q;.a:(I)Ln/c/a/u/q;` @kind static;
  #L419ed8.  v7:= temp @kind object;
  #L419eda.  v8:= v6.`n.c.a.u.p.d` @type ^`int`;
  #L419ede.  call temp:= `a`(v6, v7, v8) @signature `Ln/c/a/u/p;.a:(Ln/c/a/u/q;I)Ln/c/a/u/p;` @kind direct;
  #L419ee4.  v7:= temp @kind object;
  #L419ee6.  return v7 @kind object;
  #L419ee8.  call temp:= `b`(v6, v1) @signature `Ln/c/a/u/p;.b:(I)Ln/c/a/u/p;` @kind direct;
  #L419eee.  v7:= temp @kind object;
  #L419ef0.  return v7 @kind object;
  #L419ef2.  v7:= v6.`n.c.a.u.p.b` @type ^`n.c.a.f` @kind object;
  #L419ef6.  v8:= (`long`) v1 @kind i2l;
  #L419ef8.  call temp:= `s`(v6) @signature `Ln/c/a/u/p;.s:()J` @kind direct;
  #L419efe.  v0:= temp @kind wide;
  #L419f00.  v8:= v8 - v0 @kind long;
  #L419f02.  call temp:= `c`(v7, v8) @signature `Ln/c/a/f;.c:(J)Ln/c/a/f;` @kind virtual;
  #L419f08.  v7:= temp @kind object;
  #L419f0a.  call temp:= `a`(v6, v7) @signature `Ln/c/a/u/p;.a:(Ln/c/a/f;)Ln/c/a/u/p;` @kind direct;
  #L419f10.  v7:= temp @kind object;
  #L419f12.  return v7 @kind object;
  #L419f14.  call temp:= `a`(v7, v6, v8) @signature `Ln/c/a/x/i;.a:(Ln/c/a/x/d;J)Ln/c/a/x/d;` @kind interface;
  #L419f1a.  v7:= temp @kind object;
  #L419f1c.  v7:= (`n.c.a.u.p`) v7 @kind object;
  #L419f20.  return v7 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.u.p` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/u/p;.a:(JLn/c/a/x/l;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L419fa4.  call temp:= `a`(v0, v1, v3) @signature `Ln/c/a/u/p;.a:(JLn/c/a/x/l;)Ln/c/a/u/p;` @kind virtual;
  #L419faa.  v1:= temp @kind object;
  #L419fac.  return v1 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.u.p` v0 @kind this, `n.c.a.x.f` v1 @kind object) @signature `Ln/c/a/u/p;.a:(Ln/c/a/x/f;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L419fdc.  call temp:= `a`(v0, v1) @signature `Ln/c/a/u/p;.a:(Ln/c/a/x/f;)Ln/c/a/u/p;` @kind virtual;
  #L419fe2.  v1:= temp @kind object;
  #L419fe4.  return v1 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.u.p` v0 @kind this, `n.c.a.x.i` v1 @kind object, `long` v2 ) @signature `Ln/c/a/u/p;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L419ff8.  call temp:= `a`(v0, v1, v2) @signature `Ln/c/a/u/p;.a:(Ln/c/a/x/i;J)Ln/c/a/u/p;` @kind virtual;
  #L419ffe.  v1:= temp @kind object;
  #L41a000.  return v1 @kind object;
}
procedure `n.c.a.x.n` `a`(`n.c.a.u.p` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/u/p;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L41a08c.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L41a090.  if v0 == 0 then goto L41a116;
  #L41a094.  call temp:= `b`(v3, v4) @signature `Ln/c/a/u/p;.b:(Ln/c/a/x/i;)Z` @kind virtual;
  #L41a09a.  v0:= temp;
  #L41a09c.  if v0 == 0 then goto L41a0e8;
  #L41a0a0.  v4:= (`n.c.a.x.a`) v4 @kind object;
  #L41a0a4.  v0:= `@@n.c.a.u.p$a.a` @type ^`int`[] @kind object;
  #L41a0a8.  call temp:= `ordinal`(v4) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L41a0ae.  v1:= temp;
  #L41a0b0.  v0:= v0[v1];
  #L41a0b4.  v1:= 1I;
  #L41a0b6.  if v0 == v1 then goto L41a0dc;
  #L41a0ba.  v2:= 2I;
  #L41a0bc.  if v0 == v2 then goto L41a0d2;
  #L41a0c0.  call temp:= `g`(v3) @signature `Ln/c/a/u/p;.g:()Ln/c/a/u/o;` @kind virtual;
  #L41a0c6.  v0:= temp @kind object;
  #L41a0c8.  call temp:= `a`(v0, v4) @signature `Ln/c/a/u/o;.a:(Ln/c/a/x/a;)Ln/c/a/x/n;` @kind virtual;
  #L41a0ce.  v4:= temp @kind object;
  #L41a0d0.  return v4 @kind object;
  #L41a0d2.  call temp:= `a`(v3, v1) @signature `Ln/c/a/u/p;.a:(I)Ln/c/a/x/n;` @kind direct;
  #L41a0d8.  v4:= temp @kind object;
  #L41a0da.  return v4 @kind object;
  #L41a0dc.  v4:= 6I;
  #L41a0de.  call temp:= `a`(v3, v4) @signature `Ln/c/a/u/p;.a:(I)Ln/c/a/x/n;` @kind direct;
  #L41a0e4.  v4:= temp @kind object;
  #L41a0e6.  return v4 @kind object;
  #L41a0e8.  v0:= new `n.c.a.x.m`;
  #L41a0ec.  v1:= new `java.lang.StringBuilder`;
  #L41a0f0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L41a0f6.  v2:= "Unsupported field: " @kind object;
  #L41a0fa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41a100.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41a106.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L41a10c.  v4:= temp @kind object;
  #L41a10e.  call `<init>`(v0, v4) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L41a114.  throw v0;
  #L41a116.  call temp:= `c`(v4, v3) @signature `Ln/c/a/x/i;.c:(Ln/c/a/x/e;)Ln/c/a/x/n;` @kind interface;
  #L41a11c.  v4:= temp @kind object;
  #L41a11e.  return v4 @kind object;
}
procedure `void` `a`(`n.c.a.u.p` v1 @kind this, `java.io.DataOutput` v2 @kind object) @signature `Ln/c/a/u/p;.a:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L41a218.  v0:= `@@n.c.a.x.a.D` @type ^`n.c.a.x.a` @kind object;
  #L41a21c.  call temp:= `c`(v1, v0) @signature `Ln/c/a/w/c;.c:(Ln/c/a/x/i;)I` @kind virtual;
  #L41a222.  v0:= temp;
  #L41a224.  call `writeInt`(v2, v0) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L41a22a.  v0:= `@@n.c.a.x.a.A` @type ^`n.c.a.x.a` @kind object;
  #L41a22e.  call temp:= `c`(v1, v0) @signature `Ln/c/a/w/c;.c:(Ln/c/a/x/i;)I` @kind virtual;
  #L41a234.  v0:= temp;
  #L41a236.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L41a23c.  v0:= `@@n.c.a.x.a.v` @type ^`n.c.a.x.a` @kind object;
  #L41a240.  call temp:= `c`(v1, v0) @signature `Ln/c/a/w/c;.c:(Ln/c/a/x/i;)I` @kind virtual;
  #L41a246.  v0:= temp;
  #L41a248.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L41a24e.  return @kind void;
}
procedure `n.c.a.u.a` `b`(`n.c.a.u.p` v0 @kind this, `long` v1 ) @signature `Ln/c/a/u/p;.b:(J)Ln/c/a/u/a;` @AccessFlag SYNTHETIC {
    temp;

  #L419bb4.  call temp:= `b`(v0, v1) @signature `Ln/c/a/u/p;.b:(J)Ln/c/a/u/p;` @kind virtual;
  #L419bba.  v1:= temp @kind object;
  #L419bbc.  return v1 @kind object;
}
procedure `n.c.a.u.a` `b`(`n.c.a.u.p` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/u/p;.b:(JLn/c/a/x/l;)Ln/c/a/u/a;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L419b7c.  call temp:= `b`(v0, v1, v3) @signature `Ln/c/a/u/p;.b:(JLn/c/a/x/l;)Ln/c/a/u/p;` @kind virtual;
  #L419b82.  v1:= temp @kind object;
  #L419b84.  return v1 @kind object;
}
procedure `n.c.a.u.b` `b`(`n.c.a.u.p` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/u/p;.b:(JLn/c/a/x/l;)Ln/c/a/u/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L419c08.  call temp:= `b`(v0, v1, v3) @signature `Ln/c/a/u/p;.b:(JLn/c/a/x/l;)Ln/c/a/u/p;` @kind virtual;
  #L419c0e.  v1:= temp @kind object;
  #L419c10.  return v1 @kind object;
}
procedure `n.c.a.u.p` `b`(`n.c.a.u.p` v1 @kind this, `long` v2 ) @signature `Ln/c/a/u/p;.b:(J)Ln/c/a/u/p;` @AccessFlag  {
    temp;
    v0;

  #L419da4.  v0:= v1.`n.c.a.u.p.b` @type ^`n.c.a.f` @kind object;
  #L419da8.  call temp:= `d`(v0, v2) @signature `Ln/c/a/f;.d:(J)Ln/c/a/f;` @kind virtual;
  #L419dae.  v2:= temp @kind object;
  #L419db0.  call temp:= `a`(v1, v2) @signature `Ln/c/a/u/p;.a:(Ln/c/a/f;)Ln/c/a/u/p;` @kind direct;
  #L419db6.  v2:= temp @kind object;
  #L419db8.  return v2 @kind object;
}
procedure `n.c.a.u.p` `b`(`n.c.a.u.p` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/u/p;.b:(JLn/c/a/x/l;)Ln/c/a/u/p;` @AccessFlag PUBLIC {
    temp;

  #L419d3c.  call temp:= `b`(v0, v1, v3) @signature `Ln/c/a/u/a;.b:(JLn/c/a/x/l;)Ln/c/a/u/a;` @kind super;
  #L419d42.  v1:= temp @kind object;
  #L419d44.  v1:= (`n.c.a.u.p`) v1 @kind object;
  #L419d48.  return v1 @kind object;
}
procedure `n.c.a.x.d` `b`(`n.c.a.u.p` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/u/p;.b:(JLn/c/a/x/l;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L419fc0.  call temp:= `b`(v0, v1, v3) @signature `Ln/c/a/u/p;.b:(JLn/c/a/x/l;)Ln/c/a/u/p;` @kind virtual;
  #L419fc6.  v1:= temp @kind object;
  #L419fc8.  return v1 @kind object;
}
procedure `boolean` `b`(`n.c.a.u.p` v1 @kind this, `n.c.a.x.i` v2 @kind object) @signature `Ln/c/a/u/p;.b:(Ln/c/a/x/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4199b4.  v0:= `@@n.c.a.x.a.t` @type ^`n.c.a.x.a` @kind object;
  #L4199b8.  if v2 == v0 then goto L4199e0;
  #L4199bc.  v0:= `@@n.c.a.x.a.u` @type ^`n.c.a.x.a` @kind object;
  #L4199c0.  if v2 == v0 then goto L4199e0;
  #L4199c4.  v0:= `@@n.c.a.x.a.y` @type ^`n.c.a.x.a` @kind object;
  #L4199c8.  if v2 == v0 then goto L4199e0;
  #L4199cc.  v0:= `@@n.c.a.x.a.z` @type ^`n.c.a.x.a` @kind object;
  #L4199d0.  if v2 != v0 then goto L4199d6;
  #L4199d4.  goto L4199e0;
  #L4199d6.  call temp:= `b`(v1, v2) @signature `Ln/c/a/u/b;.b:(Ln/c/a/x/i;)Z` @kind super;
  #L4199dc.  v2:= temp;
  #L4199de.  return v2;
  #L4199e0.  v2:= 0I;
  #L4199e2.  return v2;
}
procedure `n.c.a.u.a` `c`(`n.c.a.u.p` v0 @kind this, `long` v1 ) @signature `Ln/c/a/u/p;.c:(J)Ln/c/a/u/a;` @AccessFlag SYNTHETIC {
    temp;

  #L419bd0.  call temp:= `c`(v0, v1) @signature `Ln/c/a/u/p;.c:(J)Ln/c/a/u/p;` @kind virtual;
  #L419bd6.  v1:= temp @kind object;
  #L419bd8.  return v1 @kind object;
}
procedure `n.c.a.u.p` `c`(`n.c.a.u.p` v1 @kind this, `long` v2 ) @signature `Ln/c/a/u/p;.c:(J)Ln/c/a/u/p;` @AccessFlag  {
    temp;
    v0;

  #L419dcc.  v0:= v1.`n.c.a.u.p.b` @type ^`n.c.a.f` @kind object;
  #L419dd0.  call temp:= `f`(v0, v2) @signature `Ln/c/a/f;.f:(J)Ln/c/a/f;` @kind virtual;
  #L419dd6.  v2:= temp @kind object;
  #L419dd8.  call temp:= `a`(v1, v2) @signature `Ln/c/a/u/p;.a:(Ln/c/a/f;)Ln/c/a/u/p;` @kind direct;
  #L419dde.  v2:= temp @kind object;
  #L419de0.  return v2 @kind object;
}
procedure `long` `d`(`n.c.a.u.p` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/u/p;.d:(Ln/c/a/x/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L419a9c.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L419aa0.  if v0 == 0 then goto L419b1e;
  #L419aa4.  v0:= `@@n.c.a.u.p$a.a` @type ^`int`[] @kind object;
  #L419aa8.  v1:= v4 @kind object;
  #L419aaa.  v1:= (`n.c.a.x.a`) v1 @kind object;
  #L419aae.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L419ab4.  v1:= temp;
  #L419ab6.  v0:= v0[v1];
  #L419aba.  goto L419b28;
  #L419ac0.  v0:= v3.`n.c.a.u.p.b` @type ^`n.c.a.f` @kind object;
  #L419ac4.  call temp:= `d`(v0, v4) @signature `Ln/c/a/f;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L419aca.  v0:= temp @kind wide;
  #L419acc.  return v0 @kind wide;
  #L419ace.  v4:= v3.`n.c.a.u.p.c` @type ^`n.c.a.u.q` @kind object;
  #L419ad2.  call temp:= `getValue`(v4) @signature `Ln/c/a/u/q;.getValue:()I` @kind virtual;
  #L419ad8.  v4:= temp;
  #L419ada.  v0:= (`long`) v4 @kind i2l;
  #L419adc.  return v0 @kind wide;
  #L419ade.  v0:= new `n.c.a.x.m`;
  #L419ae2.  v1:= new `java.lang.StringBuilder`;
  #L419ae6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L419aec.  v2:= "Unsupported field: " @kind object;
  #L419af0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L419af6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L419afc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L419b02.  v4:= temp @kind object;
  #L419b04.  call `<init>`(v0, v4) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L419b0a.  throw v0;
  #L419b0c.  v4:= v3.`n.c.a.u.p.d` @type ^`int`;
  #L419b10.  v0:= (`long`) v4 @kind i2l;
  #L419b12.  return v0 @kind wide;
  #L419b14.  call temp:= `s`(v3) @signature `Ln/c/a/u/p;.s:()J` @kind direct;
  #L419b1a.  v0:= temp @kind wide;
  #L419b1c.  return v0 @kind wide;
  #L419b1e.  call temp:= `b`(v4, v3) @signature `Ln/c/a/x/i;.b:(Ln/c/a/x/e;)J` @kind interface;
  #L419b24.  v0:= temp @kind wide;
  #L419b26.  return v0 @kind wide;
  #L419b28.  switch v0
                  | 1 => goto L419b14
                  | 2 => goto L419b0c
                  | 3 => goto L419ade
                  | 4 => goto L419ade
                  | 5 => goto L419ade
                  | 6 => goto L419ade
                  | 7 => goto L419ace
                  | else => goto L419ac0;
}
procedure `n.c.a.u.i` `e`(`n.c.a.u.p` v1 @kind this) @signature `Ln/c/a/u/p;.e:()Ln/c/a/u/i;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L419ce8.  call temp:= `e`(v1) @signature `Ln/c/a/u/p;.e:()Ln/c/a/u/q;` @kind virtual;
  #L419cee.  v0:= temp @kind object;
  #L419cf0.  return v0 @kind object;
}
procedure `n.c.a.u.q` `e`(`n.c.a.u.p` v1 @kind this) @signature `Ln/c/a/u/p;.e:()Ln/c/a/u/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L419f8c.  v0:= v1.`n.c.a.u.p.c` @type ^`n.c.a.u.q` @kind object;
  #L419f90.  return v0 @kind object;
}
procedure `boolean` `equals`(`n.c.a.u.p` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Ln/c/a/u/p;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L419978.  if v1 != v2 then goto L419980;
  #L41997c.  v2:= 1I;
  #L41997e.  return v2;
  #L419980.  v0:= instanceof @variable v2 @type ^`n.c.a.u.p` @kind boolean;
  #L419984.  if v0 == 0 then goto L41999e;
  #L419988.  v2:= (`n.c.a.u.p`) v2 @kind object;
  #L41998c.  v0:= v1.`n.c.a.u.p.b` @type ^`n.c.a.f` @kind object;
  #L419990.  v2:= v2.`n.c.a.u.p.b` @type ^`n.c.a.f` @kind object;
  #L419994.  call temp:= `equals`(v0, v2) @signature `Ln/c/a/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L41999a.  v2:= temp;
  #L41999c.  return v2;
  #L41999e.  v2:= 0I;
  #L4199a0.  return v2;
}
procedure `n.c.a.u.h` `g`(`n.c.a.u.p` v1 @kind this) @signature `Ln/c/a/u/p;.g:()Ln/c/a/u/h;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L419ccc.  call temp:= `g`(v1) @signature `Ln/c/a/u/p;.g:()Ln/c/a/u/o;` @kind virtual;
  #L419cd2.  v0:= temp @kind object;
  #L419cd4.  return v0 @kind object;
}
procedure `n.c.a.u.o` `g`(`n.c.a.u.p` v1 @kind this) @signature `Ln/c/a/u/p;.g:()Ln/c/a/u/o;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L419d04.  v0:= `@@n.c.a.u.o.e` @type ^`n.c.a.u.o` @kind object;
  #L419d08.  return v0 @kind object;
}
procedure `long` `h`(`n.c.a.u.p` v2 @kind this) @signature `Ln/c/a/u/p;.h:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L419b5c.  v0:= v2.`n.c.a.u.p.b` @type ^`n.c.a.f` @kind object;
  #L419b60.  call temp:= `h`(v0) @signature `Ln/c/a/f;.h:()J` @kind virtual;
  #L419b66.  v0:= temp @kind wide;
  #L419b68.  return v0 @kind wide;
}
procedure `int` `hashCode`(`n.c.a.u.p` v2 @kind this) @signature `Ln/c/a/u/p;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4199f4.  call temp:= `g`(v2) @signature `Ln/c/a/u/p;.g:()Ln/c/a/u/o;` @kind virtual;
  #L4199fa.  v0:= temp @kind object;
  #L4199fc.  call temp:= `e`(v0) @signature `Ln/c/a/u/o;.e:()Ljava/lang/String;` @kind virtual;
  #L419a02.  v0:= temp @kind object;
  #L419a04.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L419a0a.  v0:= temp;
  #L419a0c.  v1:= v2.`n.c.a.u.p.b` @type ^`n.c.a.f` @kind object;
  #L419a10.  call temp:= `hashCode`(v1) @signature `Ln/c/a/f;.hashCode:()I` @kind virtual;
  #L419a16.  v1:= temp;
  #L419a18.  v0:= v0 ^~ v1 @kind int;
  #L419a1a.  return v0;
}
