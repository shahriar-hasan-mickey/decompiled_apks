record `n.c.a.u.f` @kind class @AccessFlag PUBLIC_ABSTRACT extends `n.c.a.w.b` @kind class, `n.c.a.x.d` @kind interface, `java.lang.Comparable` @kind interface {
}
procedure `void` `<clinit>`() @signature `Ln/c/a/u/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L414f54.  v0:= new `n.c.a.u.f$a`;
  #L414f58.  call `<init>`(v0) @signature `Ln/c/a/u/f$a;.<init>:()V` @kind direct;
  #L414f5e.  return @kind void;
}
procedure `void` `<init>`(`n.c.a.u.f` v0 @kind this) @signature `Ln/c/a/u/f;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L414f70.  call `<init>`(v0) @signature `Ln/c/a/w/b;.<init>:()V` @kind direct;
  #L414f76.  return @kind void;
}
procedure `int` `a`(`n.c.a.u.f` v4 @kind this, `n.c.a.u.f` v5 @kind object) @signature `Ln/c/a/u/f;.a:(Ln/c/a/u/f;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4149d4.  call temp:= `s`(v4) @signature `Ln/c/a/u/f;.s:()J` @kind virtual;
  #L4149da.  v0:= temp @kind wide;
  #L4149dc.  call temp:= `s`(v5) @signature `Ln/c/a/u/f;.s:()J` @kind virtual;
  #L4149e2.  v2:= temp @kind wide;
  #L4149e4.  call temp:= `a`(v0, v2) @signature `Ln/c/a/w/d;.a:(JJ)I` @kind static;
  #L4149ea.  v0:= temp;
  #L4149ec.  if v0 != 0 then goto L414a86;
  #L4149f0.  call temp:= `w`(v4) @signature `Ln/c/a/u/f;.w:()Ln/c/a/h;` @kind virtual;
  #L4149f6.  v0:= temp @kind object;
  #L4149f8.  call temp:= `s`(v0) @signature `Ln/c/a/h;.s:()I` @kind virtual;
  #L4149fe.  v0:= temp;
  #L414a00.  call temp:= `w`(v5) @signature `Ln/c/a/u/f;.w:()Ln/c/a/h;` @kind virtual;
  #L414a06.  v1:= temp @kind object;
  #L414a08.  call temp:= `s`(v1) @signature `Ln/c/a/h;.s:()I` @kind virtual;
  #L414a0e.  v1:= temp;
  #L414a10.  v0:= v0 - v1 @kind int;
  #L414a12.  if v0 != 0 then goto L414a86;
  #L414a16.  call temp:= `v`(v4) @signature `Ln/c/a/u/f;.v:()Ln/c/a/u/c;` @kind virtual;
  #L414a1c.  v0:= temp @kind object;
  #L414a1e.  call temp:= `v`(v5) @signature `Ln/c/a/u/f;.v:()Ln/c/a/u/c;` @kind virtual;
  #L414a24.  v1:= temp @kind object;
  #L414a26.  call temp:= `a`(v0, v1) @signature `Ln/c/a/u/c;.a:(Ln/c/a/u/c;)I` @kind virtual;
  #L414a2c.  v0:= temp;
  #L414a2e.  if v0 != 0 then goto L414a86;
  #L414a32.  call temp:= `h`(v4) @signature `Ln/c/a/u/f;.h:()Ln/c/a/q;` @kind virtual;
  #L414a38.  v0:= temp @kind object;
  #L414a3a.  call temp:= `b`(v0) @signature `Ln/c/a/q;.b:()Ljava/lang/String;` @kind virtual;
  #L414a40.  v0:= temp @kind object;
  #L414a42.  call temp:= `h`(v5) @signature `Ln/c/a/u/f;.h:()Ln/c/a/q;` @kind virtual;
  #L414a48.  v1:= temp @kind object;
  #L414a4a.  call temp:= `b`(v1) @signature `Ln/c/a/q;.b:()Ljava/lang/String;` @kind virtual;
  #L414a50.  v1:= temp @kind object;
  #L414a52.  call temp:= `compareTo`(v0, v1) @signature `Ljava/lang/String;.compareTo:(Ljava/lang/String;)I` @kind virtual;
  #L414a58.  v0:= temp;
  #L414a5a.  if v0 != 0 then goto L414a86;
  #L414a5e.  call temp:= `u`(v4) @signature `Ln/c/a/u/f;.u:()Ln/c/a/u/b;` @kind virtual;
  #L414a64.  v0:= temp @kind object;
  #L414a66.  call temp:= `g`(v0) @signature `Ln/c/a/u/b;.g:()Ln/c/a/u/h;` @kind virtual;
  #L414a6c.  v0:= temp @kind object;
  #L414a6e.  call temp:= `u`(v5) @signature `Ln/c/a/u/f;.u:()Ln/c/a/u/b;` @kind virtual;
  #L414a74.  v5:= temp @kind object;
  #L414a76.  call temp:= `g`(v5) @signature `Ln/c/a/u/b;.g:()Ln/c/a/u/h;` @kind virtual;
  #L414a7c.  v5:= temp @kind object;
  #L414a7e.  call temp:= `a`(v0, v5) @signature `Ln/c/a/u/h;.a:(Ln/c/a/u/h;)I` @kind virtual;
  #L414a84.  v0:= temp;
  #L414a86.  return v0;
}
procedure `java.lang.Object` `a`(`n.c.a.u.f` v2 @kind this, `n.c.a.x.k` v3 @kind object) @signature `Ln/c/a/u/f;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L414b80.  call temp:= `g`() @signature `Ln/c/a/x/j;.g:()Ln/c/a/x/k;` @kind static;
  #L414b86.  v0:= temp @kind object;
  #L414b88.  if v3 == v0 then goto L414c26;
  #L414b8c.  call temp:= `f`() @signature `Ln/c/a/x/j;.f:()Ln/c/a/x/k;` @kind static;
  #L414b92.  v0:= temp @kind object;
  #L414b94.  if v3 != v0 then goto L414b9a;
  #L414b98.  goto L414c26;
  #L414b9a.  call temp:= `a`() @signature `Ln/c/a/x/j;.a:()Ln/c/a/x/k;` @kind static;
  #L414ba0.  v0:= temp @kind object;
  #L414ba2.  if v3 != v0 then goto L414bb8;
  #L414ba6.  call temp:= `u`(v2) @signature `Ln/c/a/u/f;.u:()Ln/c/a/u/b;` @kind virtual;
  #L414bac.  v3:= temp @kind object;
  #L414bae.  call temp:= `g`(v3) @signature `Ln/c/a/u/b;.g:()Ln/c/a/u/h;` @kind virtual;
  #L414bb4.  v3:= temp @kind object;
  #L414bb6.  return v3 @kind object;
  #L414bb8.  call temp:= `e`() @signature `Ln/c/a/x/j;.e:()Ln/c/a/x/k;` @kind static;
  #L414bbe.  v0:= temp @kind object;
  #L414bc0.  if v3 != v0 then goto L414bca;
  #L414bc4.  v3:= `@@n.c.a.x.b.c` @type ^`n.c.a.x.b` @kind object;
  #L414bc8.  return v3 @kind object;
  #L414bca.  call temp:= `d`() @signature `Ln/c/a/x/j;.d:()Ln/c/a/x/k;` @kind static;
  #L414bd0.  v0:= temp @kind object;
  #L414bd2.  if v3 != v0 then goto L414be0;
  #L414bd6.  call temp:= `e`(v2) @signature `Ln/c/a/u/f;.e:()Ln/c/a/r;` @kind virtual;
  #L414bdc.  v3:= temp @kind object;
  #L414bde.  return v3 @kind object;
  #L414be0.  call temp:= `b`() @signature `Ln/c/a/x/j;.b:()Ln/c/a/x/k;` @kind static;
  #L414be6.  v0:= temp @kind object;
  #L414be8.  if v3 != v0 then goto L414c06;
  #L414bec.  call temp:= `u`(v2) @signature `Ln/c/a/u/f;.u:()Ln/c/a/u/b;` @kind virtual;
  #L414bf2.  v3:= temp @kind object;
  #L414bf4.  call temp:= `h`(v3) @signature `Ln/c/a/u/b;.h:()J` @kind virtual;
  #L414bfa.  v0:= temp @kind wide;
  #L414bfc.  call temp:= `g`(v0) @signature `Ln/c/a/f;.g:(J)Ln/c/a/f;` @kind static;
  #L414c02.  v3:= temp @kind object;
  #L414c04.  return v3 @kind object;
  #L414c06.  call temp:= `c`() @signature `Ln/c/a/x/j;.c:()Ln/c/a/x/k;` @kind static;
  #L414c0c.  v0:= temp @kind object;
  #L414c0e.  if v3 != v0 then goto L414c1c;
  #L414c12.  call temp:= `w`(v2) @signature `Ln/c/a/u/f;.w:()Ln/c/a/h;` @kind virtual;
  #L414c18.  v3:= temp @kind object;
  #L414c1a.  return v3 @kind object;
  #L414c1c.  call temp:= `a`(v2, v3) @signature `Ln/c/a/w/c;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @kind super;
  #L414c22.  v3:= temp @kind object;
  #L414c24.  return v3 @kind object;
  #L414c26.  call temp:= `h`(v2) @signature `Ln/c/a/u/f;.h:()Ln/c/a/q;` @kind virtual;
  #L414c2c.  v3:= temp @kind object;
  #L414c2e.  return v3 @kind object;
}
procedure `n.c.a.u.f` `a`(`n.c.a.u.f` v1 @kind this, `long` v2 , `n.c.a.x.l` v4 @kind object) @signature `Ln/c/a/u/f;.a:(JLn/c/a/x/l;)Ln/c/a/u/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L414e2c.  call temp:= `u`(v1) @signature `Ln/c/a/u/f;.u:()Ln/c/a/u/b;` @kind virtual;
  #L414e32.  v0:= temp @kind object;
  #L414e34.  call temp:= `g`(v0) @signature `Ln/c/a/u/b;.g:()Ln/c/a/u/h;` @kind virtual;
  #L414e3a.  v0:= temp @kind object;
  #L414e3c.  call temp:= `a`(v1, v2, v4) @signature `Ln/c/a/w/b;.a:(JLn/c/a/x/l;)Ln/c/a/x/d;` @kind super;
  #L414e42.  v2:= temp @kind object;
  #L414e44.  call temp:= `c`(v0, v2) @signature `Ln/c/a/u/h;.c:(Ln/c/a/x/d;)Ln/c/a/u/g;` @kind virtual;
  #L414e4a.  v2:= temp @kind object;
  #L414e4c.  return v2 @kind object;
}
procedure `n.c.a.u.f` `a`(`n.c.a.q` v0 @kind object) @signature `Ln/c/a/u/f;.a:(Ln/c/a/q;)Ln/c/a/u/f;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `n.c.a.u.f` `a`(`n.c.a.u.f` v1 @kind this, `n.c.a.x.f` v2 @kind object) @signature `Ln/c/a/u/f;.a:(Ln/c/a/x/f;)Ln/c/a/u/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L414e60.  call temp:= `u`(v1) @signature `Ln/c/a/u/f;.u:()Ln/c/a/u/b;` @kind virtual;
  #L414e66.  v0:= temp @kind object;
  #L414e68.  call temp:= `g`(v0) @signature `Ln/c/a/u/b;.g:()Ln/c/a/u/h;` @kind virtual;
  #L414e6e.  v0:= temp @kind object;
  #L414e70.  call temp:= `a`(v1, v2) @signature `Ln/c/a/w/b;.a:(Ln/c/a/x/f;)Ln/c/a/x/d;` @kind super;
  #L414e76.  v2:= temp @kind object;
  #L414e78.  call temp:= `c`(v0, v2) @signature `Ln/c/a/u/h;.c:(Ln/c/a/x/d;)Ln/c/a/u/g;` @kind virtual;
  #L414e7e.  v2:= temp @kind object;
  #L414e80.  return v2 @kind object;
}
procedure `n.c.a.u.f` `a`(`n.c.a.x.i` v0 @kind object, `long` v1 ) @signature `Ln/c/a/u/f;.a:(Ln/c/a/x/i;J)Ln/c/a/u/f;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `n.c.a.x.d` `a`(`n.c.a.u.f` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/u/f;.a:(JLn/c/a/x/l;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L414e94.  call temp:= `a`(v0, v1, v3) @signature `Ln/c/a/u/f;.a:(JLn/c/a/x/l;)Ln/c/a/u/f;` @kind virtual;
  #L414e9a.  v1:= temp @kind object;
  #L414e9c.  return v1 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.u.f` v0 @kind this, `n.c.a.x.f` v1 @kind object) @signature `Ln/c/a/u/f;.a:(Ln/c/a/x/f;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L414ecc.  call temp:= `a`(v0, v1) @signature `Ln/c/a/u/f;.a:(Ln/c/a/x/f;)Ln/c/a/u/f;` @kind virtual;
  #L414ed2.  v1:= temp @kind object;
  #L414ed4.  return v1 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.u.f` v0 @kind this, `n.c.a.x.i` v1 @kind object, `long` v2 ) @signature `Ln/c/a/u/f;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L414ee8.  call temp:= `a`(v0, v1, v2) @signature `Ln/c/a/u/f;.a:(Ln/c/a/x/i;J)Ln/c/a/u/f;` @kind virtual;
  #L414eee.  v1:= temp @kind object;
  #L414ef0.  return v1 @kind object;
}
procedure `n.c.a.x.n` `a`(`n.c.a.u.f` v1 @kind this, `n.c.a.x.i` v2 @kind object) @signature `Ln/c/a/u/f;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L414f04.  v0:= instanceof @variable v2 @type ^`n.c.a.x.a` @kind boolean;
  #L414f08.  if v0 == 0 then goto L414f3a;
  #L414f0c.  v0:= `@@n.c.a.x.a.F` @type ^`n.c.a.x.a` @kind object;
  #L414f10.  if v2 == v0 then goto L414f30;
  #L414f14.  v0:= `@@n.c.a.x.a.G` @type ^`n.c.a.x.a` @kind object;
  #L414f18.  if v2 != v0 then goto L414f1e;
  #L414f1c.  goto L414f30;
  #L414f1e.  call temp:= `v`(v1) @signature `Ln/c/a/u/f;.v:()Ln/c/a/u/c;` @kind virtual;
  #L414f24.  v0:= temp @kind object;
  #L414f26.  call temp:= `a`(v0, v2) @signature `Ln/c/a/w/c;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @kind virtual;
  #L414f2c.  v2:= temp @kind object;
  #L414f2e.  return v2 @kind object;
  #L414f30.  call temp:= `h`(v2) @signature `Ln/c/a/x/i;.h:()Ln/c/a/x/n;` @kind interface;
  #L414f36.  v2:= temp @kind object;
  #L414f38.  return v2 @kind object;
  #L414f3a.  call temp:= `c`(v2, v1) @signature `Ln/c/a/x/i;.c:(Ln/c/a/x/e;)Ln/c/a/x/n;` @kind interface;
  #L414f40.  v2:= temp @kind object;
  #L414f42.  return v2 @kind object;
}
procedure `n.c.a.u.f` `b`(`long` v0 , `n.c.a.x.l` v2 @kind object) @signature `Ln/c/a/u/f;.b:(JLn/c/a/x/l;)Ln/c/a/u/f;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `n.c.a.x.d` `b`(`n.c.a.u.f` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/u/f;.b:(JLn/c/a/x/l;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L414eb0.  call temp:= `b`(v0, v1, v3) @signature `Ln/c/a/u/f;.b:(JLn/c/a/x/l;)Ln/c/a/u/f;` @kind virtual;
  #L414eb6.  v1:= temp @kind object;
  #L414eb8.  return v1 @kind object;
}
procedure `boolean` `b`(`n.c.a.u.f` v5 @kind this, `n.c.a.u.f` v6 @kind object) @signature `Ln/c/a/u/f;.b:(Ln/c/a/u/f;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L414958.  call temp:= `s`(v5) @signature `Ln/c/a/u/f;.s:()J` @kind virtual;
  #L41495e.  v0:= temp @kind wide;
  #L414960.  call temp:= `s`(v6) @signature `Ln/c/a/u/f;.s:()J` @kind virtual;
  #L414966.  v2:= temp @kind wide;
  #L414968.  v4:= lcmp(v0, v2);
  #L41496c.  if v4 < 0 then goto L41499e;
  #L414970.  if v4 != 0 then goto L41499a;
  #L414974.  call temp:= `w`(v5) @signature `Ln/c/a/u/f;.w:()Ln/c/a/h;` @kind virtual;
  #L41497a.  v0:= temp @kind object;
  #L41497c.  call temp:= `s`(v0) @signature `Ln/c/a/h;.s:()I` @kind virtual;
  #L414982.  v0:= temp;
  #L414984.  call temp:= `w`(v6) @signature `Ln/c/a/u/f;.w:()Ln/c/a/h;` @kind virtual;
  #L41498a.  v6:= temp @kind object;
  #L41498c.  call temp:= `s`(v6) @signature `Ln/c/a/h;.s:()I` @kind virtual;
  #L414992.  v6:= temp;
  #L414994.  if v0 >= v6 then goto L41499a;
  #L414998.  goto L41499e;
  #L41499a.  v6:= 0I;
  #L41499c.  goto L4149a0;
  #L41499e.  v6:= 1I;
  #L4149a0.  return v6;
}
procedure `int` `c`(`n.c.a.u.f` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/u/f;.c:(Ln/c/a/x/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L414a98.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L414a9c.  if v0 == 0 then goto L414b14;
  #L414aa0.  v0:= `@@n.c.a.u.f$b.a` @type ^`int`[] @kind object;
  #L414aa4.  v1:= v4 @kind object;
  #L414aa6.  v1:= (`n.c.a.x.a`) v1 @kind object;
  #L414aaa.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L414ab0.  v1:= temp;
  #L414ab2.  v0:= v0[v1];
  #L414ab6.  v1:= 1I;
  #L414ab8.  if v0 == v1 then goto L414ae6;
  #L414abc.  v1:= 2I;
  #L414abe.  if v0 == v1 then goto L414ad4;
  #L414ac2.  call temp:= `v`(v3) @signature `Ln/c/a/u/f;.v:()Ln/c/a/u/c;` @kind virtual;
  #L414ac8.  v0:= temp @kind object;
  #L414aca.  call temp:= `c`(v0, v4) @signature `Ln/c/a/w/c;.c:(Ln/c/a/x/i;)I` @kind virtual;
  #L414ad0.  v4:= temp;
  #L414ad2.  return v4;
  #L414ad4.  call temp:= `e`(v3) @signature `Ln/c/a/u/f;.e:()Ln/c/a/r;` @kind virtual;
  #L414ada.  v4:= temp @kind object;
  #L414adc.  call temp:= `k`(v4) @signature `Ln/c/a/r;.k:()I` @kind virtual;
  #L414ae2.  v4:= temp;
  #L414ae4.  return v4;
  #L414ae6.  v0:= new `n.c.a.x.m`;
  #L414aea.  v1:= new `java.lang.StringBuilder`;
  #L414aee.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L414af4.  v2:= "Field too large for an int: " @kind object;
  #L414af8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L414afe.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L414b04.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L414b0a.  v4:= temp @kind object;
  #L414b0c.  call `<init>`(v0, v4) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L414b12.  throw v0;
  #L414b14.  call temp:= `c`(v3, v4) @signature `Ln/c/a/w/c;.c:(Ln/c/a/x/i;)I` @kind super;
  #L414b1a.  v4:= temp;
  #L414b1c.  return v4;
}
procedure `int` `compareTo`(`n.c.a.u.f` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Ln/c/a/u/f;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4149b4.  v1:= (`n.c.a.u.f`) v1 @kind object;
  #L4149b8.  call temp:= `a`(v0, v1) @signature `Ln/c/a/u/f;.a:(Ln/c/a/u/f;)I` @kind virtual;
  #L4149be.  v1:= temp;
  #L4149c0.  return v1;
}
procedure `long` `d`(`n.c.a.u.f` v2 @kind this, `n.c.a.x.i` v3 @kind object) @signature `Ln/c/a/u/f;.d:(Ln/c/a/x/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L414ce8.  v0:= instanceof @variable v3 @type ^`n.c.a.x.a` @kind boolean;
  #L414cec.  if v0 == 0 then goto L414d42;
  #L414cf0.  v0:= `@@n.c.a.u.f$b.a` @type ^`int`[] @kind object;
  #L414cf4.  v1:= v3 @kind object;
  #L414cf6.  v1:= (`n.c.a.x.a`) v1 @kind object;
  #L414cfa.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L414d00.  v1:= temp;
  #L414d02.  v0:= v0[v1];
  #L414d06.  v1:= 1I;
  #L414d08.  if v0 == v1 then goto L414d38;
  #L414d0c.  v1:= 2I;
  #L414d0e.  if v0 == v1 then goto L414d24;
  #L414d12.  call temp:= `v`(v2) @signature `Ln/c/a/u/f;.v:()Ln/c/a/u/c;` @kind virtual;
  #L414d18.  v0:= temp @kind object;
  #L414d1a.  call temp:= `d`(v0, v3) @signature `Ln/c/a/x/e;.d:(Ln/c/a/x/i;)J` @kind interface;
  #L414d20.  v0:= temp @kind wide;
  #L414d22.  return v0 @kind wide;
  #L414d24.  call temp:= `e`(v2) @signature `Ln/c/a/u/f;.e:()Ln/c/a/r;` @kind virtual;
  #L414d2a.  v3:= temp @kind object;
  #L414d2c.  call temp:= `k`(v3) @signature `Ln/c/a/r;.k:()I` @kind virtual;
  #L414d32.  v3:= temp;
  #L414d34.  v0:= (`long`) v3 @kind i2l;
  #L414d36.  return v0 @kind wide;
  #L414d38.  call temp:= `s`(v2) @signature `Ln/c/a/u/f;.s:()J` @kind virtual;
  #L414d3e.  v0:= temp @kind wide;
  #L414d40.  return v0 @kind wide;
  #L414d42.  call temp:= `b`(v3, v2) @signature `Ln/c/a/x/i;.b:(Ln/c/a/x/e;)J` @kind interface;
  #L414d48.  v0:= temp @kind wide;
  #L414d4a.  return v0 @kind wide;
}
procedure `n.c.a.r` `e`() @signature `Ln/c/a/u/f;.e:()Ln/c/a/r;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `equals`(`n.c.a.u.f` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Ln/c/a/u/f;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L41491c.  v0:= 1I;
  #L41491e.  if v3 != v4 then goto L414924;
  #L414922.  return v0;
  #L414924.  v1:= instanceof @variable v4 @type ^`n.c.a.u.f` @kind boolean;
  #L414928.  v2:= 0I;
  #L41492a.  if v1 == 0 then goto L414944;
  #L41492e.  v4:= (`n.c.a.u.f`) v4 @kind object;
  #L414932.  call temp:= `a`(v3, v4) @signature `Ln/c/a/u/f;.a:(Ln/c/a/u/f;)I` @kind virtual;
  #L414938.  v4:= temp;
  #L41493a.  if v4 != 0 then goto L414940;
  #L41493e.  goto L414942;
  #L414940.  v0:= 0I;
  #L414942.  return v0;
  #L414944.  return v2;
}
procedure `n.c.a.q` `h`() @signature `Ln/c/a/u/f;.h:()Ln/c/a/q;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `hashCode`(`n.c.a.u.f` v3 @kind this) @signature `Ln/c/a/u/f;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L414b30.  call temp:= `v`(v3) @signature `Ln/c/a/u/f;.v:()Ln/c/a/u/c;` @kind virtual;
  #L414b36.  v0:= temp @kind object;
  #L414b38.  call temp:= `hashCode`(v0) @signature `Ln/c/a/u/c;.hashCode:()I` @kind virtual;
  #L414b3e.  v0:= temp;
  #L414b40.  call temp:= `e`(v3) @signature `Ln/c/a/u/f;.e:()Ln/c/a/r;` @kind virtual;
  #L414b46.  v1:= temp @kind object;
  #L414b48.  call temp:= `hashCode`(v1) @signature `Ln/c/a/r;.hashCode:()I` @kind virtual;
  #L414b4e.  v1:= temp;
  #L414b50.  v0:= v0 ^~ v1 @kind int;
  #L414b52.  call temp:= `h`(v3) @signature `Ln/c/a/u/f;.h:()Ln/c/a/q;` @kind virtual;
  #L414b58.  v1:= temp @kind object;
  #L414b5a.  call temp:= `hashCode`(v1) @signature `Ln/c/a/q;.hashCode:()I` @kind virtual;
  #L414b60.  v1:= temp;
  #L414b62.  v2:= 3I;
  #L414b64.  call temp:= `rotateLeft`(v1, v2) @signature `Ljava/lang/Integer;.rotateLeft:(II)I` @kind static;
  #L414b6a.  v1:= temp;
  #L414b6c.  v0:= v0 ^~ v1 @kind int;
  #L414b6e.  return v0;
}
procedure `long` `s`(`n.c.a.u.f` v4 @kind this) @signature `Ln/c/a/u/f;.s:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L414d5c.  call temp:= `u`(v4) @signature `Ln/c/a/u/f;.u:()Ln/c/a/u/b;` @kind virtual;
  #L414d62.  v0:= temp @kind object;
  #L414d64.  call temp:= `h`(v0) @signature `Ln/c/a/u/b;.h:()J` @kind virtual;
  #L414d6a.  v0:= temp @kind wide;
  #L414d6c.  v2:= 86400L;
  #L414d72.  v0:= v0 * v2 @kind long;
  #L414d76.  call temp:= `w`(v4) @signature `Ln/c/a/u/f;.w:()Ln/c/a/h;` @kind virtual;
  #L414d7c.  v2:= temp @kind object;
  #L414d7e.  call temp:= `v`(v2) @signature `Ln/c/a/h;.v:()I` @kind virtual;
  #L414d84.  v2:= temp;
  #L414d86.  v2:= (`long`) v2 @kind i2l;
  #L414d88.  v0:= v0 + v2 @kind long;
  #L414d8a.  call temp:= `e`(v4) @signature `Ln/c/a/u/f;.e:()Ln/c/a/r;` @kind virtual;
  #L414d90.  v2:= temp @kind object;
  #L414d92.  call temp:= `k`(v2) @signature `Ln/c/a/r;.k:()I` @kind virtual;
  #L414d98.  v2:= temp;
  #L414d9a.  v2:= (`long`) v2 @kind i2l;
  #L414d9c.  v0:= v0 - v2 @kind long;
  #L414d9e.  return v0 @kind wide;
}
procedure `n.c.a.e` `t`(`n.c.a.u.f` v4 @kind this) @signature `Ln/c/a/u/f;.t:()Ln/c/a/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L414db0.  call temp:= `s`(v4) @signature `Ln/c/a/u/f;.s:()J` @kind virtual;
  #L414db6.  v0:= temp @kind wide;
  #L414db8.  call temp:= `w`(v4) @signature `Ln/c/a/u/f;.w:()Ln/c/a/h;` @kind virtual;
  #L414dbe.  v2:= temp @kind object;
  #L414dc0.  call temp:= `s`(v2) @signature `Ln/c/a/h;.s:()I` @kind virtual;
  #L414dc6.  v2:= temp;
  #L414dc8.  v2:= (`long`) v2 @kind i2l;
  #L414dca.  call temp:= `a`(v0, v2) @signature `Ln/c/a/e;.a:(JJ)Ln/c/a/e;` @kind static;
  #L414dd0.  v0:= temp @kind object;
  #L414dd2.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`n.c.a.u.f` v3 @kind this) @signature `Ln/c/a/u/f;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L414c40.  v0:= new `java.lang.StringBuilder`;
  #L414c44.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L414c4a.  call temp:= `v`(v3) @signature `Ln/c/a/u/f;.v:()Ln/c/a/u/c;` @kind virtual;
  #L414c50.  v1:= temp @kind object;
  #L414c52.  call temp:= `toString`(v1) @signature `Ln/c/a/u/c;.toString:()Ljava/lang/String;` @kind virtual;
  #L414c58.  v1:= temp @kind object;
  #L414c5a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L414c60.  call temp:= `e`(v3) @signature `Ln/c/a/u/f;.e:()Ln/c/a/r;` @kind virtual;
  #L414c66.  v1:= temp @kind object;
  #L414c68.  call temp:= `toString`(v1) @signature `Ln/c/a/r;.toString:()Ljava/lang/String;` @kind virtual;
  #L414c6e.  v1:= temp @kind object;
  #L414c70.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L414c76.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L414c7c.  v0:= temp @kind object;
  #L414c7e.  call temp:= `e`(v3) @signature `Ln/c/a/u/f;.e:()Ln/c/a/r;` @kind virtual;
  #L414c84.  v1:= temp @kind object;
  #L414c86.  call temp:= `h`(v3) @signature `Ln/c/a/u/f;.h:()Ln/c/a/q;` @kind virtual;
  #L414c8c.  v2:= temp @kind object;
  #L414c8e.  if v1 == v2 then goto L414cd4;
  #L414c92.  v1:= new `java.lang.StringBuilder`;
  #L414c96.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L414c9c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L414ca2.  v0:= 91I;
  #L414ca6.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L414cac.  call temp:= `h`(v3) @signature `Ln/c/a/u/f;.h:()Ln/c/a/q;` @kind virtual;
  #L414cb2.  v0:= temp @kind object;
  #L414cb4.  call temp:= `toString`(v0) @signature `Ln/c/a/q;.toString:()Ljava/lang/String;` @kind virtual;
  #L414cba.  v0:= temp @kind object;
  #L414cbc.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L414cc2.  v0:= 93I;
  #L414cc6.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L414ccc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L414cd2.  v0:= temp @kind object;
  #L414cd4.  return v0 @kind object;
}
procedure `n.c.a.u.b` `u`(`n.c.a.u.f` v1 @kind this) @signature `Ln/c/a/u/f;.u:()Ln/c/a/u/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L414e08.  call temp:= `v`(v1) @signature `Ln/c/a/u/f;.v:()Ln/c/a/u/c;` @kind virtual;
  #L414e0e.  v0:= temp @kind object;
  #L414e10.  call temp:= `e`(v0) @signature `Ln/c/a/u/c;.e:()Ln/c/a/u/b;` @kind virtual;
  #L414e16.  v0:= temp @kind object;
  #L414e18.  return v0 @kind object;
}
procedure `n.c.a.u.c` `v`() @signature `Ln/c/a/u/f;.v:()Ln/c/a/u/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `n.c.a.h` `w`(`n.c.a.u.f` v1 @kind this) @signature `Ln/c/a/u/f;.w:()Ln/c/a/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L414de4.  call temp:= `v`(v1) @signature `Ln/c/a/u/f;.v:()Ln/c/a/u/c;` @kind virtual;
  #L414dea.  v0:= temp @kind object;
  #L414dec.  call temp:= `h`(v0) @signature `Ln/c/a/u/c;.h:()Ln/c/a/h;` @kind virtual;
  #L414df2.  v0:= temp @kind object;
  #L414df4.  return v0 @kind object;
}
