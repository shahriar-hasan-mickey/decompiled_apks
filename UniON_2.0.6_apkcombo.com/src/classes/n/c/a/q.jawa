record `n.c.a.q` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.io.Serializable` @kind interface {
}
procedure `void` `<clinit>`() @signature `Ln/c/a/q;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L410e30.  v0:= new `n.c.a.q$a`;
  #L410e34.  call `<init>`(v0) @signature `Ln/c/a/q$a;.<init>:()V` @kind direct;
  #L410e3a.  v0:= new `java.util.HashMap`;
  #L410e3e.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L410e44.  v1:= "ACT" @kind object;
  #L410e48.  v2:= "Australia/Darwin" @kind object;
  #L410e4c.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410e52.  v1:= "AET" @kind object;
  #L410e56.  v2:= "Australia/Sydney" @kind object;
  #L410e5a.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410e60.  v1:= "AGT" @kind object;
  #L410e64.  v2:= "America/Argentina/Buenos_Aires" @kind object;
  #L410e68.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410e6e.  v1:= "ART" @kind object;
  #L410e72.  v2:= "Africa/Cairo" @kind object;
  #L410e76.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410e7c.  v1:= "AST" @kind object;
  #L410e80.  v2:= "America/Anchorage" @kind object;
  #L410e84.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410e8a.  v1:= "BET" @kind object;
  #L410e8e.  v2:= "America/Sao_Paulo" @kind object;
  #L410e92.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410e98.  v1:= "BST" @kind object;
  #L410e9c.  v2:= "Asia/Dhaka" @kind object;
  #L410ea0.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410ea6.  v1:= "CAT" @kind object;
  #L410eaa.  v2:= "Africa/Harare" @kind object;
  #L410eae.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410eb4.  v1:= "CNT" @kind object;
  #L410eb8.  v2:= "America/St_Johns" @kind object;
  #L410ebc.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410ec2.  v1:= "CST" @kind object;
  #L410ec6.  v2:= "America/Chicago" @kind object;
  #L410eca.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410ed0.  v1:= "CTT" @kind object;
  #L410ed4.  v2:= "Asia/Shanghai" @kind object;
  #L410ed8.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410ede.  v1:= "EAT" @kind object;
  #L410ee2.  v2:= "Africa/Addis_Ababa" @kind object;
  #L410ee6.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410eec.  v1:= "ECT" @kind object;
  #L410ef0.  v2:= "Europe/Paris" @kind object;
  #L410ef4.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410efa.  v1:= "IET" @kind object;
  #L410efe.  v2:= "America/Indiana/Indianapolis" @kind object;
  #L410f02.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410f08.  v1:= "IST" @kind object;
  #L410f0c.  v2:= "Asia/Kolkata" @kind object;
  #L410f10.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410f16.  v1:= "JST" @kind object;
  #L410f1a.  v2:= "Asia/Tokyo" @kind object;
  #L410f1e.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410f24.  v1:= "MIT" @kind object;
  #L410f28.  v2:= "Pacific/Apia" @kind object;
  #L410f2c.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410f32.  v1:= "NET" @kind object;
  #L410f36.  v2:= "Asia/Yerevan" @kind object;
  #L410f3a.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410f40.  v1:= "NST" @kind object;
  #L410f44.  v2:= "Pacific/Auckland" @kind object;
  #L410f48.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410f4e.  v1:= "PLT" @kind object;
  #L410f52.  v2:= "Asia/Karachi" @kind object;
  #L410f56.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410f5c.  v1:= "PNT" @kind object;
  #L410f60.  v2:= "America/Phoenix" @kind object;
  #L410f64.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410f6a.  v1:= "PRT" @kind object;
  #L410f6e.  v2:= "America/Puerto_Rico" @kind object;
  #L410f72.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410f78.  v1:= "PST" @kind object;
  #L410f7c.  v2:= "America/Los_Angeles" @kind object;
  #L410f80.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410f86.  v1:= "SST" @kind object;
  #L410f8a.  v2:= "Pacific/Guadalcanal" @kind object;
  #L410f8e.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410f94.  v1:= "VST" @kind object;
  #L410f98.  v2:= "Asia/Ho_Chi_Minh" @kind object;
  #L410f9c.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410fa2.  v1:= "EST" @kind object;
  #L410fa6.  v2:= "-05:00" @kind object;
  #L410faa.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410fb0.  v1:= "MST" @kind object;
  #L410fb4.  v2:= "-07:00" @kind object;
  #L410fb8.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410fbe.  v1:= "HST" @kind object;
  #L410fc2.  v2:= "-10:00" @kind object;
  #L410fc6.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L410fcc.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L410fd2.  return @kind void;
}
procedure `void` `<init>`(`n.c.a.q` v2 @kind this) @signature `Ln/c/a/q;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L410fe4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L410fea.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L410ff0.  v0:= temp @kind object;
  #L410ff2.  v1:= constclass @type ^`n.c.a.r` @kind object;
  #L410ff6.  if v0 == v1 then goto L41101c;
  #L410ffa.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L411000.  v0:= temp @kind object;
  #L411002.  v1:= constclass @type ^`n.c.a.s` @kind object;
  #L411006.  if v0 != v1 then goto L41100c;
  #L41100a.  goto L41101c;
  #L41100c.  v0:= new `java.lang.AssertionError`;
  #L411010.  v1:= "Invalid subclass" @kind object;
  #L411014.  call `<init>`(v0, v1) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L41101a.  throw v0;
  #L41101c.  return @kind void;
}
procedure `n.c.a.q` `a`(`java.lang.String` v5 @kind object) @signature `Ln/c/a/q;.a:(Ljava/lang/String;)Ln/c/a/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L410b04.  v0:= "zoneId" @kind object;
  #L410b08.  call temp:= `a`(v5, v0) @signature `Ln/c/a/w/d;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L410b0e.  v0:= "Z" @kind object;
  #L410b12.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L410b18.  v0:= temp;
  #L410b1a.  if v0 == 0 then goto L410b24;
  #L410b1e.  v5:= `@@n.c.a.r.f` @type ^`n.c.a.r` @kind object;
  #L410b22.  return v5 @kind object;
  #L410b24.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L410b2a.  v0:= temp;
  #L410b2c.  v1:= 1I;
  #L410b2e.  if v0 == v1 then goto L410d04;
  #L410b32.  v0:= "+" @kind object;
  #L410b36.  call temp:= `startsWith`(v5, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L410b3c.  v0:= temp;
  #L410b3e.  if v0 != 0 then goto L410cfa;
  #L410b42.  v0:= "-" @kind object;
  #L410b46.  call temp:= `startsWith`(v5, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L410b4c.  v0:= temp;
  #L410b4e.  if v0 == 0 then goto L410b56;
  #L410b52.  goto L410cfa;
  #L410b56.  v0:= "UTC" @kind object;
  #L410b5a.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L410b60.  v0:= temp;
  #L410b62.  if v0 != 0 then goto L410ce2;
  #L410b66.  v0:= "GMT" @kind object;
  #L410b6a.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L410b70.  v0:= temp;
  #L410b72.  if v0 != 0 then goto L410ce2;
  #L410b76.  v0:= "UT" @kind object;
  #L410b7a.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L410b80.  v2:= temp;
  #L410b82.  if v2 == 0 then goto L410b8a;
  #L410b86.  goto L410ce2;
  #L410b8a.  v2:= "UTC+" @kind object;
  #L410b8e.  call temp:= `startsWith`(v5, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L410b94.  v2:= temp;
  #L410b96.  if v2 != 0 then goto L410c64;
  #L410b9a.  v2:= "GMT+" @kind object;
  #L410b9e.  call temp:= `startsWith`(v5, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L410ba4.  v2:= temp;
  #L410ba6.  if v2 != 0 then goto L410c64;
  #L410baa.  v2:= "UTC-" @kind object;
  #L410bae.  call temp:= `startsWith`(v5, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L410bb4.  v2:= temp;
  #L410bb6.  if v2 != 0 then goto L410c64;
  #L410bba.  v2:= "GMT-" @kind object;
  #L410bbe.  call temp:= `startsWith`(v5, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L410bc4.  v2:= temp;
  #L410bc6.  if v2 == 0 then goto L410bcc;
  #L410bca.  goto L410c64;
  #L410bcc.  v2:= "UT+" @kind object;
  #L410bd0.  call temp:= `startsWith`(v5, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L410bd6.  v2:= temp;
  #L410bd8.  if v2 != 0 then goto L410bf8;
  #L410bdc.  v2:= "UT-" @kind object;
  #L410be0.  call temp:= `startsWith`(v5, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L410be6.  v2:= temp;
  #L410be8.  if v2 == 0 then goto L410bee;
  #L410bec.  goto L410bf8;
  #L410bee.  call temp:= `a`(v5, v1) @signature `Ln/c/a/s;.a:(Ljava/lang/String;Z)Ln/c/a/s;` @kind static;
  #L410bf4.  v5:= temp @kind object;
  #L410bf6.  return v5 @kind object;
  #L410bf8.  v1:= 2I;
  #L410bfa.  call temp:= `substring`(v5, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L410c00.  v5:= temp @kind object;
  #L410c02.  call temp:= `a`(v5) @signature `Ln/c/a/r;.a:(Ljava/lang/String;)Ln/c/a/r;` @kind static;
  #L410c08.  v5:= temp @kind object;
  #L410c0a.  call temp:= `k`(v5) @signature `Ln/c/a/r;.k:()I` @kind virtual;
  #L410c10.  v1:= temp;
  #L410c12.  if v1 != 0 then goto L410c2a;
  #L410c16.  v1:= new `n.c.a.s`;
  #L410c1a.  call temp:= `e`(v5) @signature `Ln/c/a/r;.e:()Ln/c/a/y/f;` @kind virtual;
  #L410c20.  v5:= temp @kind object;
  #L410c22.  call `<init>`(v1, v0, v5) @signature `Ln/c/a/s;.<init>:(Ljava/lang/String;Ln/c/a/y/f;)V` @kind direct;
  #L410c28.  return v1 @kind object;
  #L410c2a.  v1:= new `n.c.a.s`;
  #L410c2e.  v2:= new `java.lang.StringBuilder`;
  #L410c32.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L410c38.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L410c3e.  call temp:= `b`(v5) @signature `Ln/c/a/r;.b:()Ljava/lang/String;` @kind virtual;
  #L410c44.  v0:= temp @kind object;
  #L410c46.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L410c4c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L410c52.  v0:= temp @kind object;
  #L410c54.  call temp:= `e`(v5) @signature `Ln/c/a/r;.e:()Ln/c/a/y/f;` @kind virtual;
  #L410c5a.  v5:= temp @kind object;
  #L410c5c.  call `<init>`(v1, v0, v5) @signature `Ln/c/a/s;.<init>:(Ljava/lang/String;Ln/c/a/y/f;)V` @kind direct;
  #L410c62.  return v1 @kind object;
  #L410c64.  v0:= 3I;
  #L410c66.  call temp:= `substring`(v5, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L410c6c.  v1:= temp @kind object;
  #L410c6e.  call temp:= `a`(v1) @signature `Ln/c/a/r;.a:(Ljava/lang/String;)Ln/c/a/r;` @kind static;
  #L410c74.  v1:= temp @kind object;
  #L410c76.  call temp:= `k`(v1) @signature `Ln/c/a/r;.k:()I` @kind virtual;
  #L410c7c.  v2:= temp;
  #L410c7e.  v3:= 0I;
  #L410c80.  if v2 != 0 then goto L410ca0;
  #L410c84.  v2:= new `n.c.a.s`;
  #L410c88.  call temp:= `substring`(v5, v3, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L410c8e.  v5:= temp @kind object;
  #L410c90.  call temp:= `e`(v1) @signature `Ln/c/a/r;.e:()Ln/c/a/y/f;` @kind virtual;
  #L410c96.  v0:= temp @kind object;
  #L410c98.  call `<init>`(v2, v5, v0) @signature `Ln/c/a/s;.<init>:(Ljava/lang/String;Ln/c/a/y/f;)V` @kind direct;
  #L410c9e.  return v2 @kind object;
  #L410ca0.  v2:= new `n.c.a.s`;
  #L410ca4.  v4:= new `java.lang.StringBuilder`;
  #L410ca8.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L410cae.  call temp:= `substring`(v5, v3, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L410cb4.  v5:= temp @kind object;
  #L410cb6.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L410cbc.  call temp:= `b`(v1) @signature `Ln/c/a/r;.b:()Ljava/lang/String;` @kind virtual;
  #L410cc2.  v5:= temp @kind object;
  #L410cc4.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L410cca.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L410cd0.  v5:= temp @kind object;
  #L410cd2.  call temp:= `e`(v1) @signature `Ln/c/a/r;.e:()Ln/c/a/y/f;` @kind virtual;
  #L410cd8.  v0:= temp @kind object;
  #L410cda.  call `<init>`(v2, v5, v0) @signature `Ln/c/a/s;.<init>:(Ljava/lang/String;Ln/c/a/y/f;)V` @kind direct;
  #L410ce0.  return v2 @kind object;
  #L410ce2.  v0:= new `n.c.a.s`;
  #L410ce6.  v1:= `@@n.c.a.r.f` @type ^`n.c.a.r` @kind object;
  #L410cea.  call temp:= `e`(v1) @signature `Ln/c/a/r;.e:()Ln/c/a/y/f;` @kind virtual;
  #L410cf0.  v1:= temp @kind object;
  #L410cf2.  call `<init>`(v0, v5, v1) @signature `Ln/c/a/s;.<init>:(Ljava/lang/String;Ln/c/a/y/f;)V` @kind direct;
  #L410cf8.  return v0 @kind object;
  #L410cfa.  call temp:= `a`(v5) @signature `Ln/c/a/r;.a:(Ljava/lang/String;)Ln/c/a/r;` @kind static;
  #L410d00.  v5:= temp @kind object;
  #L410d02.  return v5 @kind object;
  #L410d04.  v0:= new `n.c.a.b`;
  #L410d08.  v1:= new `java.lang.StringBuilder`;
  #L410d0c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L410d12.  v2:= "Invalid zone: " @kind object;
  #L410d16.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L410d1c.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L410d22.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L410d28.  v5:= temp @kind object;
  #L410d2a.  call `<init>`(v0, v5) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L410d30.  throw v0;
}
procedure `n.c.a.q` `a`(`java.lang.String` v2 @kind object, `n.c.a.r` v3 @kind object) @signature `Ln/c/a/q;.a:(Ljava/lang/String;Ln/c/a/r;)Ln/c/a/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L410d44.  v0:= "prefix" @kind object;
  #L410d48.  call temp:= `a`(v2, v0) @signature `Ln/c/a/w/d;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L410d4e.  v0:= "offset" @kind object;
  #L410d52.  call temp:= `a`(v3, v0) @signature `Ln/c/a/w/d;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L410d58.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L410d5e.  v0:= temp;
  #L410d60.  if v0 != 0 then goto L410d66;
  #L410d64.  return v3 @kind object;
  #L410d66.  v0:= "GMT" @kind object;
  #L410d6a.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L410d70.  v0:= temp;
  #L410d72.  if v0 != 0 then goto L410dc6;
  #L410d76.  v0:= "UTC" @kind object;
  #L410d7a.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L410d80.  v0:= temp;
  #L410d82.  if v0 != 0 then goto L410dc6;
  #L410d86.  v0:= "UT" @kind object;
  #L410d8a.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L410d90.  v0:= temp;
  #L410d92.  if v0 == 0 then goto L410d98;
  #L410d96.  goto L410dc6;
  #L410d98.  v3:= new `java.lang.IllegalArgumentException`;
  #L410d9c.  v0:= new `java.lang.StringBuilder`;
  #L410da0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L410da6.  v1:= "Invalid prefix, must be GMT, UTC or UT: " @kind object;
  #L410daa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L410db0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L410db6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L410dbc.  v2:= temp @kind object;
  #L410dbe.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L410dc4.  throw v3;
  #L410dc6.  call temp:= `k`(v3) @signature `Ln/c/a/r;.k:()I` @kind virtual;
  #L410dcc.  v0:= temp;
  #L410dce.  if v0 != 0 then goto L410de6;
  #L410dd2.  v0:= new `n.c.a.s`;
  #L410dd6.  call temp:= `e`(v3) @signature `Ln/c/a/r;.e:()Ln/c/a/y/f;` @kind virtual;
  #L410ddc.  v3:= temp @kind object;
  #L410dde.  call `<init>`(v0, v2, v3) @signature `Ln/c/a/s;.<init>:(Ljava/lang/String;Ln/c/a/y/f;)V` @kind direct;
  #L410de4.  return v0 @kind object;
  #L410de6.  v0:= new `n.c.a.s`;
  #L410dea.  v1:= new `java.lang.StringBuilder`;
  #L410dee.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L410df4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L410dfa.  call temp:= `b`(v3) @signature `Ln/c/a/r;.b:()Ljava/lang/String;` @kind virtual;
  #L410e00.  v2:= temp @kind object;
  #L410e02.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L410e08.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L410e0e.  v2:= temp @kind object;
  #L410e10.  call temp:= `e`(v3) @signature `Ln/c/a/r;.e:()Ln/c/a/y/f;` @kind virtual;
  #L410e16.  v3:= temp @kind object;
  #L410e18.  call `<init>`(v0, v2, v3) @signature `Ln/c/a/s;.<init>:(Ljava/lang/String;Ln/c/a/y/f;)V` @kind direct;
  #L410e1e.  return v0 @kind object;
}
procedure `n.c.a.q` `a`(`n.c.a.x.e` v3 @kind object) @signature `Ln/c/a/q;.a:(Ln/c/a/x/e;)Ln/c/a/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L410a48.  call temp:= `f`() @signature `Ln/c/a/x/j;.f:()Ln/c/a/x/k;` @kind static;
  #L410a4e.  v0:= temp @kind object;
  #L410a50.  call temp:= `a`(v3, v0) @signature `Ln/c/a/x/e;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @kind interface;
  #L410a56.  v0:= temp @kind object;
  #L410a58.  v0:= (`n.c.a.q`) v0 @kind object;
  #L410a5c.  if v0 == 0 then goto L410a62;
  #L410a60.  return v0 @kind object;
  #L410a62.  v0:= new `n.c.a.b`;
  #L410a66.  v1:= new `java.lang.StringBuilder`;
  #L410a6a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L410a70.  v2:= "Unable to obtain ZoneId from TemporalAccessor: " @kind object;
  #L410a74.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L410a7a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L410a80.  v2:= ", type " @kind object;
  #L410a84.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L410a8a.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L410a90.  v3:= temp @kind object;
  #L410a92.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L410a98.  v3:= temp @kind object;
  #L410a9a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L410aa0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L410aa6.  v3:= temp @kind object;
  #L410aa8.  call `<init>`(v0, v3) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L410aae.  throw v0;
}
procedure `void` `a`(`java.io.DataOutput` v0 @kind object) @signature `Ln/c/a/q;.a:(Ljava/io/DataOutput;)V` @AccessFlag ABSTRACT {

  # return;
}
procedure `java.lang.String` `b`() @signature `Ln/c/a/q;.b:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `n.c.a.y.f` `e`() @signature `Ln/c/a/q;.e:()Ln/c/a/y/f;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `equals`(`n.c.a.q` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Ln/c/a/q;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4109c4.  if v1 != v2 then goto L4109cc;
  #L4109c8.  v2:= 1I;
  #L4109ca.  return v2;
  #L4109cc.  v0:= instanceof @variable v2 @type ^`n.c.a.q` @kind boolean;
  #L4109d0.  if v0 == 0 then goto L4109f2;
  #L4109d4.  v2:= (`n.c.a.q`) v2 @kind object;
  #L4109d8.  call temp:= `b`(v1) @signature `Ln/c/a/q;.b:()Ljava/lang/String;` @kind virtual;
  #L4109de.  v0:= temp @kind object;
  #L4109e0.  call temp:= `b`(v2) @signature `Ln/c/a/q;.b:()Ljava/lang/String;` @kind virtual;
  #L4109e6.  v2:= temp @kind object;
  #L4109e8.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4109ee.  v2:= temp;
  #L4109f0.  return v2;
  #L4109f2.  v2:= 0I;
  #L4109f4.  return v2;
}
procedure `n.c.a.q` `h`(`n.c.a.q` v2 @kind this) @signature `Ln/c/a/q;.h:()Ln/c/a/q;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L410ac0.  call temp:= `e`(v2) @signature `Ln/c/a/q;.e:()Ln/c/a/y/f;` @kind virtual;
  #L410ac6.  v0:= temp @kind object;
  #L410ac8.  call temp:= `a`(v0) @signature `Ln/c/a/y/f;.a:()Z` @kind virtual;
  #L410ace.  v1:= temp;
  #L410ad0.  if v1 == 0 then goto L410ae2;
  #L410ad4.  v1:= `@@n.c.a.e.d` @type ^`n.c.a.e` @kind object;
  #L410ad8.  call temp:= `a`(v0, v1) @signature `Ln/c/a/y/f;.a:(Ln/c/a/e;)Ln/c/a/r;` @kind virtual;
  #L410ade.  v0:= temp @kind object;
  #L410ae0.  return v0 @kind object;
  #L410ae2.  return v2 @kind object;
  catch `n.c.a.y.g` @[L410ac0..L410ae0] goto L410ae2;
}
procedure `int` `hashCode`(`n.c.a.q` v1 @kind this) @signature `Ln/c/a/q;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L410a08.  call temp:= `b`(v1) @signature `Ln/c/a/q;.b:()Ljava/lang/String;` @kind virtual;
  #L410a0e.  v0:= temp @kind object;
  #L410a10.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L410a16.  v0:= temp;
  #L410a18.  return v0;
}
procedure `java.lang.String` `toString`(`n.c.a.q` v1 @kind this) @signature `Ln/c/a/q;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L410a2c.  call temp:= `b`(v1) @signature `Ln/c/a/q;.b:()Ljava/lang/String;` @kind virtual;
  #L410a32.  v0:= temp @kind object;
  #L410a34.  return v0 @kind object;
}
