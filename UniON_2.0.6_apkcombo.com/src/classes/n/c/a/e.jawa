record `n.c.a.e` @kind class @AccessFlag PUBLIC_FINAL extends `n.c.a.w.c` @kind class, `n.c.a.x.d` @kind interface, `n.c.a.x.f` @kind interface, `java.lang.Comparable` @kind interface, `java.io.Serializable` @kind interface {
  `long` `n.c.a.e.b` @AccessFlag PRIVATE_FINAL;
  `int` `n.c.a.e.c` @AccessFlag PRIVATE_FINAL;
}
global `n.c.a.e` `@@n.c.a.e.d` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/c/a/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4091e8.  v0:= new `n.c.a.e`;
  #L4091ec.  v1:= 0L;
  #L4091f0.  v3:= 0I;
  #L4091f2.  call `<init>`(v0, v1, v3) @signature `Ln/c/a/e;.<init>:(JI)V` @kind direct;
  #L4091f8.  `@@n.c.a.e.d` @type ^`n.c.a.e` := v0 @kind object;
  #L4091fc.  v3:= -31557014167219200L;
  #L409206.  call temp:= `a`(v3, v1) @signature `Ln/c/a/e;.a:(JJ)Ln/c/a/e;` @kind static;
  #L40920c.  v0:= 31556889864403199L;
  #L409216.  v2:= 999999999L;
  #L40921c.  call temp:= `a`(v0, v2) @signature `Ln/c/a/e;.a:(JJ)Ln/c/a/e;` @kind static;
  #L409222.  v0:= new `n.c.a.e$a`;
  #L409226.  call `<init>`(v0) @signature `Ln/c/a/e$a;.<init>:()V` @kind direct;
  #L40922c.  return @kind void;
}
procedure `void` `<init>`(`n.c.a.e` v0 @kind this, `long` v1 , `int` v3 ) @signature `Ln/c/a/e;.<init>:(JI)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L409240.  call `<init>`(v0) @signature `Ln/c/a/w/c;.<init>:()V` @kind direct;
  #L409246.  v0.`n.c.a.e.b` @type ^`long` := v1 @kind wide;
  #L40924a.  v0.`n.c.a.e.c` @type ^`int` := v3;
  #L40924e.  return @kind void;
}
procedure `n.c.a.e` `a`(`long` v5 , `int` v7 ) @signature `Ln/c/a/e;.a:(JI)Ln/c/a/e;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L408bfc.  v0:= (`long`) v7 @kind i2l;
  #L408bfe.  v0:= v0 ^| v5 @kind long;
  #L408c00.  v2:= 0L;
  #L408c04.  v4:= lcmp(v0, v2);
  #L408c08.  if v4 != 0 then goto L408c12;
  #L408c0c.  v5:= `@@n.c.a.e.d` @type ^`n.c.a.e` @kind object;
  #L408c10.  return v5 @kind object;
  #L408c12.  v0:= -31557014167219200L;
  #L408c1c.  v2:= lcmp(v5, v0);
  #L408c20.  if v2 < 0 then goto L408c42;
  #L408c24.  v0:= 31556889864403199L;
  #L408c2e.  v2:= lcmp(v5, v0);
  #L408c32.  if v2 > 0 then goto L408c42;
  #L408c36.  v0:= new `n.c.a.e`;
  #L408c3a.  call `<init>`(v0, v5, v7) @signature `Ln/c/a/e;.<init>:(JI)V` @kind direct;
  #L408c40.  return v0 @kind object;
  #L408c42.  v5:= new `n.c.a.b`;
  #L408c46.  v6:= "Instant exceeds minimum or maximum instant" @kind object;
  #L408c4a.  call `<init>`(v5, v6) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L408c50.  throw v5;
}
procedure `n.c.a.e` `a`(`long` v2 , `long` v4 ) @signature `Ln/c/a/e;.a:(JJ)Ln/c/a/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L408d98.  v0:= 1000000000L;
  #L408d9e.  call temp:= `b`(v4, v0) @signature `Ln/c/a/w/d;.b:(JJ)J` @kind static;
  #L408da4.  v0:= temp @kind wide;
  #L408da6.  call temp:= `d`(v2, v0) @signature `Ln/c/a/w/d;.d:(JJ)J` @kind static;
  #L408dac.  v2:= temp @kind wide;
  #L408dae.  v0:= 1000000000I;
  #L408db4.  call temp:= `a`(v4, v0) @signature `Ln/c/a/w/d;.a:(JI)I` @kind static;
  #L408dba.  v4:= temp;
  #L408dbc.  call temp:= `a`(v2, v4) @signature `Ln/c/a/e;.a:(JI)Ln/c/a/e;` @kind static;
  #L408dc2.  v2:= temp @kind object;
  #L408dc4.  return v2 @kind object;
}
procedure `n.c.a.e` `a`(`java.io.DataInput` v4 @kind object) @signature `Ln/c/a/e;.a:(Ljava/io/DataInput;)Ln/c/a/e;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L408fcc.  call temp:= `readLong`(v4) @signature `Ljava/io/DataInput;.readLong:()J` @kind interface;
  #L408fd2.  v0:= temp @kind wide;
  #L408fd4.  call temp:= `readInt`(v4) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L408fda.  v4:= temp;
  #L408fdc.  v2:= (`long`) v4 @kind i2l;
  #L408fde.  call temp:= `a`(v0, v2) @signature `Ln/c/a/e;.a:(JJ)Ln/c/a/e;` @kind static;
  #L408fe4.  v4:= temp @kind object;
  #L408fe6.  return v4 @kind object;
}
procedure `n.c.a.e` `a`(`n.c.a.x.e` v4 @kind object) @signature `Ln/c/a/e;.a:(Ln/c/a/x/e;)Ln/c/a/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L408c64.  v0:= `@@n.c.a.x.a.F` @type ^`n.c.a.x.a` @kind object;
  #L408c68.  call temp:= `d`(v4, v0) @signature `Ln/c/a/x/e;.d:(Ln/c/a/x/i;)J` @kind interface;
  #L408c6e.  v0:= temp @kind wide;
  #L408c70.  v2:= `@@n.c.a.x.a.d` @type ^`n.c.a.x.a` @kind object;
  #L408c74.  call temp:= `c`(v4, v2) @signature `Ln/c/a/x/e;.c:(Ln/c/a/x/i;)I` @kind interface;
  #L408c7a.  v2:= temp;
  #L408c7c.  v2:= (`long`) v2 @kind i2l;
  #L408c7e.  call temp:= `a`(v0, v2) @signature `Ln/c/a/e;.a:(JJ)Ln/c/a/e;` @kind static;
  #L408c84.  v4:= temp @kind object;
  #L408c86.  return v4 @kind object;
  #L408c88.  v0:= Exception @type ^`n.c.a.b` @kind object;
  #L408c8a.  v1:= new `n.c.a.b`;
  #L408c8e.  v2:= new `java.lang.StringBuilder`;
  #L408c92.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L408c98.  v3:= "Unable to obtain Instant from TemporalAccessor: " @kind object;
  #L408c9c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L408ca2.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L408ca8.  v3:= ", type " @kind object;
  #L408cac.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L408cb2.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L408cb8.  v4:= temp @kind object;
  #L408cba.  call temp:= `getName`(v4) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L408cc0.  v4:= temp @kind object;
  #L408cc2.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L408cc8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L408cce.  v4:= temp @kind object;
  #L408cd0.  call `<init>`(v1, v4, v0) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L408cd6.  throw v1;
  catch `n.c.a.b` @[L408c64..L408c86] goto L408c88;
}
procedure `n.c.a.e` `b`(`n.c.a.e` v5 @kind this, `long` v6 , `long` v8 ) @signature `Ln/c/a/e;.b:(JJ)Ln/c/a/e;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L408dd8.  v0:= v6 ^| v8 @kind long;
  #L408ddc.  v2:= 0L;
  #L408de0.  v4:= lcmp(v0, v2);
  #L408de4.  if v4 != 0 then goto L408dea;
  #L408de8.  return v5 @kind object;
  #L408dea.  v0:= v5.`n.c.a.e.b` @type ^`long` @kind wide;
  #L408dee.  call temp:= `d`(v0, v6) @signature `Ln/c/a/w/d;.d:(JJ)J` @kind static;
  #L408df4.  v6:= temp @kind wide;
  #L408df6.  v0:= 1000000000L;
  #L408dfc.  v2:= v8 / v0 @kind long;
  #L408e00.  call temp:= `d`(v6, v2) @signature `Ln/c/a/w/d;.d:(JJ)J` @kind static;
  #L408e06.  v6:= temp @kind wide;
  #L408e08.  v8:= v8 %% v0 @kind long;
  #L408e0a.  v0:= v5.`n.c.a.e.c` @type ^`int`;
  #L408e0e.  v0:= (`long`) v0 @kind i2l;
  #L408e10.  v0:= v0 + v8 @kind long;
  #L408e12.  call temp:= `a`(v6, v0) @signature `Ln/c/a/e;.a:(JJ)Ln/c/a/e;` @kind static;
  #L408e18.  v6:= temp @kind object;
  #L408e1a.  return v6 @kind object;
}
procedure `n.c.a.e` `d`(`long` v3 ) @signature `Ln/c/a/e;.d:(J)Ln/c/a/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L408d40.  v0:= 1000L;
  #L408d44.  call temp:= `b`(v3, v0) @signature `Ln/c/a/w/d;.b:(JJ)J` @kind static;
  #L408d4a.  v0:= temp @kind wide;
  #L408d4c.  v2:= 1000I;
  #L408d50.  call temp:= `a`(v3, v2) @signature `Ln/c/a/w/d;.a:(JI)I` @kind static;
  #L408d56.  v3:= temp;
  #L408d58.  v4:= 1000000I;
  #L408d5e.  v3:= v3 * v4 @kind int;
  #L408d62.  call temp:= `a`(v0, v3) @signature `Ln/c/a/e;.a:(JI)Ln/c/a/e;` @kind static;
  #L408d68.  v3:= temp @kind object;
  #L408d6a.  return v3 @kind object;
}
procedure `n.c.a.e` `e`(`long` v1 ) @signature `Ln/c/a/e;.e:(J)Ln/c/a/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L408d7c.  v0:= 0I;
  #L408d7e.  call temp:= `a`(v1, v0) @signature `Ln/c/a/e;.a:(JI)Ln/c/a/e;` @kind static;
  #L408d84.  v1:= temp @kind object;
  #L408d86.  return v1 @kind object;
}
procedure `java.lang.Object` `readResolve`(`n.c.a.e` v2 @kind this) @signature `Ln/c/a/e;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L408a78.  v0:= new `java.io.InvalidObjectException`;
  #L408a7c.  v1:= "Deserialization via serialization delegate" @kind object;
  #L408a80.  call `<init>`(v0, v1) @signature `Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L408a86.  throw v0;
}
procedure `java.lang.Object` `writeReplace`(`n.c.a.e` v2 @kind this) @signature `Ln/c/a/e;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L408a98.  v0:= new `n.c.a.n`;
  #L408a9c.  v1:= 2I;
  #L408a9e.  call `<init>`(v0, v1, v2) @signature `Ln/c/a/n;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L408aa4.  return v0 @kind object;
}
procedure `int` `a`(`n.c.a.e` v4 @kind this, `n.c.a.e` v5 @kind object) @signature `Ln/c/a/e;.a:(Ln/c/a/e;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4088dc.  v0:= v4.`n.c.a.e.b` @type ^`long` @kind wide;
  #L4088e0.  v2:= v5.`n.c.a.e.b` @type ^`long` @kind wide;
  #L4088e4.  call temp:= `a`(v0, v2) @signature `Ln/c/a/w/d;.a:(JJ)I` @kind static;
  #L4088ea.  v0:= temp;
  #L4088ec.  if v0 == 0 then goto L4088f2;
  #L4088f0.  return v0;
  #L4088f2.  v0:= v4.`n.c.a.e.c` @type ^`int`;
  #L4088f6.  v5:= v5.`n.c.a.e.c` @type ^`int`;
  #L4088fa.  v0:= v0 - v5 @kind int;
  #L4088fc.  return v0;
}
procedure `java.lang.Object` `a`(`n.c.a.e` v1 @kind this, `n.c.a.x.k` v2 @kind object) @signature `Ln/c/a/e;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4089fc.  call temp:= `e`() @signature `Ln/c/a/x/j;.e:()Ln/c/a/x/k;` @kind static;
  #L408a02.  v0:= temp @kind object;
  #L408a04.  if v2 != v0 then goto L408a0e;
  #L408a08.  v2:= `@@n.c.a.x.b.c` @type ^`n.c.a.x.b` @kind object;
  #L408a0c.  return v2 @kind object;
  #L408a0e.  call temp:= `b`() @signature `Ln/c/a/x/j;.b:()Ln/c/a/x/k;` @kind static;
  #L408a14.  v0:= temp @kind object;
  #L408a16.  if v2 == v0 then goto L408a62;
  #L408a1a.  call temp:= `c`() @signature `Ln/c/a/x/j;.c:()Ln/c/a/x/k;` @kind static;
  #L408a20.  v0:= temp @kind object;
  #L408a22.  if v2 == v0 then goto L408a62;
  #L408a26.  call temp:= `a`() @signature `Ln/c/a/x/j;.a:()Ln/c/a/x/k;` @kind static;
  #L408a2c.  v0:= temp @kind object;
  #L408a2e.  if v2 == v0 then goto L408a62;
  #L408a32.  call temp:= `g`() @signature `Ln/c/a/x/j;.g:()Ln/c/a/x/k;` @kind static;
  #L408a38.  v0:= temp @kind object;
  #L408a3a.  if v2 == v0 then goto L408a62;
  #L408a3e.  call temp:= `f`() @signature `Ln/c/a/x/j;.f:()Ln/c/a/x/k;` @kind static;
  #L408a44.  v0:= temp @kind object;
  #L408a46.  if v2 == v0 then goto L408a62;
  #L408a4a.  call temp:= `d`() @signature `Ln/c/a/x/j;.d:()Ln/c/a/x/k;` @kind static;
  #L408a50.  v0:= temp @kind object;
  #L408a52.  if v2 != v0 then goto L408a58;
  #L408a56.  goto L408a62;
  #L408a58.  call temp:= `a`(v2, v1) @signature `Ln/c/a/x/k;.a:(Ln/c/a/x/e;)Ljava/lang/Object;` @kind interface;
  #L408a5e.  v2:= temp @kind object;
  #L408a60.  return v2 @kind object;
  #L408a62.  v2:= 0I;
  #L408a64.  return v2 @kind object;
}
procedure `n.c.a.e` `a`(`n.c.a.e` v4 @kind this, `long` v5 ) @signature `Ln/c/a/e;.a:(J)Ln/c/a/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L408f5c.  v0:= 1000L;
  #L408f60.  v2:= v5 / v0 @kind long;
  #L408f64.  v5:= v5 %% v0 @kind long;
  #L408f66.  v0:= 1000000L;
  #L408f6c.  v5:= v5 * v0 @kind long;
  #L408f70.  call temp:= `b`(v4, v2, v5) @signature `Ln/c/a/e;.b:(JJ)Ln/c/a/e;` @kind direct;
  #L408f76.  v5:= temp @kind object;
  #L408f78.  return v5 @kind object;
}
procedure `n.c.a.e` `a`(`n.c.a.e` v3 @kind this, `long` v4 , `n.c.a.x.l` v6 @kind object) @signature `Ln/c/a/e;.a:(JLn/c/a/x/l;)Ln/c/a/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L408cf8.  v0:= -9223372036854775808L;
  #L408cfc.  v2:= lcmp(v4, v0);
  #L408d00.  if v2 != 0 then goto L408d24;
  #L408d04.  v4:= 9223372036854775807L;
  #L408d0e.  call temp:= `b`(v3, v4, v6) @signature `Ln/c/a/e;.b:(JLn/c/a/x/l;)Ln/c/a/e;` @kind virtual;
  #L408d14.  v4:= temp @kind object;
  #L408d16.  v0:= 1L;
  #L408d1a.  call temp:= `b`(v4, v0, v6) @signature `Ln/c/a/e;.b:(JLn/c/a/x/l;)Ln/c/a/e;` @kind virtual;
  #L408d20.  v4:= temp @kind object;
  #L408d22.  goto L408d2e;
  #L408d24.  v4:= -v4 @kind long;
  #L408d26.  call temp:= `b`(v3, v4, v6) @signature `Ln/c/a/e;.b:(JLn/c/a/x/l;)Ln/c/a/e;` @kind virtual;
  #L408d2c.  v4:= temp @kind object;
  #L408d2e.  return v4 @kind object;
}
procedure `n.c.a.e` `a`(`n.c.a.e` v0 @kind this, `n.c.a.x.f` v1 @kind object) @signature `Ln/c/a/e;.a:(Ln/c/a/x/f;)Ln/c/a/e;` @AccessFlag PUBLIC {
    temp;

  #L408ff8.  call temp:= `a`(v1, v0) @signature `Ln/c/a/x/f;.a:(Ln/c/a/x/d;)Ln/c/a/x/d;` @kind interface;
  #L408ffe.  v1:= temp @kind object;
  #L409000.  v1:= (`n.c.a.e`) v1 @kind object;
  #L409004.  return v1 @kind object;
}
procedure `n.c.a.e` `a`(`n.c.a.e` v2 @kind this, `n.c.a.x.i` v3 @kind object, `long` v4 ) @signature `Ln/c/a/e;.a:(Ln/c/a/x/i;J)Ln/c/a/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L409018.  v0:= instanceof @variable v3 @type ^`n.c.a.x.a` @kind boolean;
  #L40901c.  if v0 == 0 then goto L409108;
  #L409020.  v0:= v3 @kind object;
  #L409022.  v0:= (`n.c.a.x.a`) v0 @kind object;
  #L409026.  call temp:= `b`(v0, v4) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40902c.  v1:= `@@n.c.a.e$b.a` @type ^`int`[] @kind object;
  #L409030.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L409036.  v0:= temp;
  #L409038.  v0:= v1[v0];
  #L40903c.  v1:= 1I;
  #L40903e.  if v0 == v1 then goto L4090e6;
  #L409042.  v1:= 2I;
  #L409044.  if v0 == v1 then goto L4090c6;
  #L409048.  v1:= 3I;
  #L40904a.  if v0 == v1 then goto L4090a0;
  #L40904e.  v1:= 4I;
  #L409050.  if v0 != v1 then goto L409072;
  #L409054.  v0:= v2.`n.c.a.e.b` @type ^`long` @kind wide;
  #L409058.  v3:= lcmp(v4, v0);
  #L40905c.  if v3 == 0 then goto L40906e;
  #L409060.  v3:= v2.`n.c.a.e.c` @type ^`int`;
  #L409064.  call temp:= `a`(v4, v3) @signature `Ln/c/a/e;.a:(JI)Ln/c/a/e;` @kind static;
  #L40906a.  v3:= temp @kind object;
  #L40906c.  goto L409070;
  #L40906e.  v3:= v2 @kind object;
  #L409070.  return v3 @kind object;
  #L409072.  v4:= new `n.c.a.x.m`;
  #L409076.  v5:= new `java.lang.StringBuilder`;
  #L40907a.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L409080.  v0:= "Unsupported field: " @kind object;
  #L409084.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40908a.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L409090.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L409096.  v3:= temp @kind object;
  #L409098.  call `<init>`(v4, v3) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40909e.  throw v4;
  #L4090a0.  v3:= (`int`) v4 @kind l2i;
  #L4090a2.  v4:= 1000000I;
  #L4090a8.  v3:= v3 * v4 @kind int;
  #L4090ac.  v4:= v2.`n.c.a.e.c` @type ^`int`;
  #L4090b0.  if v3 == v4 then goto L4090c2;
  #L4090b4.  v4:= v2.`n.c.a.e.b` @type ^`long` @kind wide;
  #L4090b8.  call temp:= `a`(v4, v3) @signature `Ln/c/a/e;.a:(JI)Ln/c/a/e;` @kind static;
  #L4090be.  v3:= temp @kind object;
  #L4090c0.  goto L4090c4;
  #L4090c2.  v3:= v2 @kind object;
  #L4090c4.  return v3 @kind object;
  #L4090c6.  v3:= (`int`) v4 @kind l2i;
  #L4090c8.  v3:= v3 * 1000;
  #L4090cc.  v4:= v2.`n.c.a.e.c` @type ^`int`;
  #L4090d0.  if v3 == v4 then goto L4090e2;
  #L4090d4.  v4:= v2.`n.c.a.e.b` @type ^`long` @kind wide;
  #L4090d8.  call temp:= `a`(v4, v3) @signature `Ln/c/a/e;.a:(JI)Ln/c/a/e;` @kind static;
  #L4090de.  v3:= temp @kind object;
  #L4090e0.  goto L4090e4;
  #L4090e2.  v3:= v2 @kind object;
  #L4090e4.  return v3 @kind object;
  #L4090e6.  v3:= v2.`n.c.a.e.c` @type ^`int`;
  #L4090ea.  v0:= (`long`) v3 @kind i2l;
  #L4090ec.  v3:= lcmp(v4, v0);
  #L4090f0.  if v3 == 0 then goto L409104;
  #L4090f4.  v0:= v2.`n.c.a.e.b` @type ^`long` @kind wide;
  #L4090f8.  v3:= (`int`) v4 @kind l2i;
  #L4090fa.  call temp:= `a`(v0, v3) @signature `Ln/c/a/e;.a:(JI)Ln/c/a/e;` @kind static;
  #L409100.  v3:= temp @kind object;
  #L409102.  goto L409106;
  #L409104.  v3:= v2 @kind object;
  #L409106.  return v3 @kind object;
  #L409108.  call temp:= `a`(v3, v2, v4) @signature `Ln/c/a/x/i;.a:(Ln/c/a/x/d;J)Ln/c/a/x/d;` @kind interface;
  #L40910e.  v3:= temp @kind object;
  #L409110.  v3:= (`n.c.a.e`) v3 @kind object;
  #L409114.  return v3 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.e` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/e;.a:(JLn/c/a/x/l;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40915c.  call temp:= `a`(v0, v1, v3) @signature `Ln/c/a/e;.a:(JLn/c/a/x/l;)Ln/c/a/e;` @kind virtual;
  #L409162.  v1:= temp @kind object;
  #L409164.  return v1 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.e` v3 @kind this, `n.c.a.x.d` v4 @kind object) @signature `Ln/c/a/e;.a:(Ln/c/a/x/d;)Ln/c/a/x/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L409128.  v0:= `@@n.c.a.x.a.F` @type ^`n.c.a.x.a` @kind object;
  #L40912c.  v1:= v3.`n.c.a.e.b` @type ^`long` @kind wide;
  #L409130.  call temp:= `a`(v4, v0, v1) @signature `Ln/c/a/x/d;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @kind interface;
  #L409136.  v4:= temp @kind object;
  #L409138.  v0:= `@@n.c.a.x.a.d` @type ^`n.c.a.x.a` @kind object;
  #L40913c.  v1:= v3.`n.c.a.e.c` @type ^`int`;
  #L409140.  v1:= (`long`) v1 @kind i2l;
  #L409142.  call temp:= `a`(v4, v0, v1) @signature `Ln/c/a/x/d;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @kind interface;
  #L409148.  v4:= temp @kind object;
  #L40914a.  return v4 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.e` v0 @kind this, `n.c.a.x.f` v1 @kind object) @signature `Ln/c/a/e;.a:(Ln/c/a/x/f;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L409194.  call temp:= `a`(v0, v1) @signature `Ln/c/a/e;.a:(Ln/c/a/x/f;)Ln/c/a/e;` @kind virtual;
  #L40919a.  v1:= temp @kind object;
  #L40919c.  return v1 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.e` v0 @kind this, `n.c.a.x.i` v1 @kind object, `long` v2 ) @signature `Ln/c/a/e;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4091b0.  call temp:= `a`(v0, v1, v2) @signature `Ln/c/a/e;.a:(Ln/c/a/x/i;J)Ln/c/a/e;` @kind virtual;
  #L4091b6.  v1:= temp @kind object;
  #L4091b8.  return v1 @kind object;
}
procedure `n.c.a.x.n` `a`(`n.c.a.e` v0 @kind this, `n.c.a.x.i` v1 @kind object) @signature `Ln/c/a/e;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @AccessFlag PUBLIC {
    temp;

  #L4091cc.  call temp:= `a`(v0, v1) @signature `Ln/c/a/w/c;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @kind super;
  #L4091d2.  v1:= temp @kind object;
  #L4091d4.  return v1 @kind object;
}
procedure `void` `a`(`n.c.a.e` v2 @kind this, `java.io.DataOutput` v3 @kind object) @signature `Ln/c/a/e;.a:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L409260.  v0:= v2.`n.c.a.e.b` @type ^`long` @kind wide;
  #L409264.  call `writeLong`(v3, v0) @signature `Ljava/io/DataOutput;.writeLong:(J)V` @kind interface;
  #L40926a.  v0:= v2.`n.c.a.e.c` @type ^`int`;
  #L40926e.  call `writeInt`(v3, v0) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L409274.  return @kind void;
}
procedure `n.c.a.e` `b`(`n.c.a.e` v2 @kind this, `long` v3 ) @signature `Ln/c/a/e;.b:(J)Ln/c/a/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L408f8c.  v0:= 0L;
  #L408f90.  call temp:= `b`(v2, v0, v3) @signature `Ln/c/a/e;.b:(JJ)Ln/c/a/e;` @kind direct;
  #L408f96.  v3:= temp @kind object;
  #L408f98.  return v3 @kind object;
}
procedure `n.c.a.e` `b`(`n.c.a.e` v4 @kind this, `long` v5 , `n.c.a.x.l` v7 @kind object) @signature `Ln/c/a/e;.b:(JLn/c/a/x/l;)Ln/c/a/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L408e2c.  v0:= instanceof @variable v7 @type ^`n.c.a.x.b` @kind boolean;
  #L408e30.  if v0 == 0 then goto L408f16;
  #L408e34.  v0:= `@@n.c.a.e$b.b` @type ^`int`[] @kind object;
  #L408e38.  v1:= v7 @kind object;
  #L408e3a.  v1:= (`n.c.a.x.b`) v1 @kind object;
  #L408e3e.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L408e44.  v1:= temp;
  #L408e46.  v0:= v0[v1];
  #L408e4a.  goto L408f24;
  #L408e50.  v5:= new `n.c.a.x.m`;
  #L408e54.  v6:= new `java.lang.StringBuilder`;
  #L408e58.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L408e5e.  v0:= "Unsupported unit: " @kind object;
  #L408e62.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L408e68.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L408e6e.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L408e74.  v6:= temp @kind object;
  #L408e76.  call `<init>`(v5, v6) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L408e7c.  throw v5;
  #L408e7e.  v7:= 86400I;
  #L408e84.  call temp:= `b`(v5, v7) @signature `Ln/c/a/w/d;.b:(JI)J` @kind static;
  #L408e8a.  v5:= temp @kind wide;
  #L408e8c.  call temp:= `c`(v4, v5) @signature `Ln/c/a/e;.c:(J)Ln/c/a/e;` @kind virtual;
  #L408e92.  v5:= temp @kind object;
  #L408e94.  return v5 @kind object;
  #L408e96.  v7:= 43200I;
  #L408e9c.  call temp:= `b`(v5, v7) @signature `Ln/c/a/w/d;.b:(JI)J` @kind static;
  #L408ea2.  v5:= temp @kind wide;
  #L408ea4.  call temp:= `c`(v4, v5) @signature `Ln/c/a/e;.c:(J)Ln/c/a/e;` @kind virtual;
  #L408eaa.  v5:= temp @kind object;
  #L408eac.  return v5 @kind object;
  #L408eae.  v7:= 3600I;
  #L408eb2.  call temp:= `b`(v5, v7) @signature `Ln/c/a/w/d;.b:(JI)J` @kind static;
  #L408eb8.  v5:= temp @kind wide;
  #L408eba.  call temp:= `c`(v4, v5) @signature `Ln/c/a/e;.c:(J)Ln/c/a/e;` @kind virtual;
  #L408ec0.  v5:= temp @kind object;
  #L408ec2.  return v5 @kind object;
  #L408ec4.  v7:= 60I;
  #L408ec8.  call temp:= `b`(v5, v7) @signature `Ln/c/a/w/d;.b:(JI)J` @kind static;
  #L408ece.  v5:= temp @kind wide;
  #L408ed0.  call temp:= `c`(v4, v5) @signature `Ln/c/a/e;.c:(J)Ln/c/a/e;` @kind virtual;
  #L408ed6.  v5:= temp @kind object;
  #L408ed8.  return v5 @kind object;
  #L408eda.  call temp:= `c`(v4, v5) @signature `Ln/c/a/e;.c:(J)Ln/c/a/e;` @kind virtual;
  #L408ee0.  v5:= temp @kind object;
  #L408ee2.  return v5 @kind object;
  #L408ee4.  call temp:= `a`(v4, v5) @signature `Ln/c/a/e;.a:(J)Ln/c/a/e;` @kind virtual;
  #L408eea.  v5:= temp @kind object;
  #L408eec.  return v5 @kind object;
  #L408eee.  v0:= 1000000L;
  #L408ef4.  v2:= v5 / v0 @kind long;
  #L408ef8.  v5:= v5 %% v0 @kind long;
  #L408efa.  v0:= 1000L;
  #L408efe.  v5:= v5 * v0 @kind long;
  #L408f02.  call temp:= `b`(v4, v2, v5) @signature `Ln/c/a/e;.b:(JJ)Ln/c/a/e;` @kind direct;
  #L408f08.  v5:= temp @kind object;
  #L408f0a.  return v5 @kind object;
  #L408f0c.  call temp:= `b`(v4, v5) @signature `Ln/c/a/e;.b:(J)Ln/c/a/e;` @kind virtual;
  #L408f12.  v5:= temp @kind object;
  #L408f14.  return v5 @kind object;
  #L408f16.  call temp:= `a`(v7, v4, v5) @signature `Ln/c/a/x/l;.a:(Ln/c/a/x/d;J)Ln/c/a/x/d;` @kind interface;
  #L408f1c.  v5:= temp @kind object;
  #L408f1e.  v5:= (`n.c.a.e`) v5 @kind object;
  #L408f22.  return v5 @kind object;
  #L408f24.  switch v0
                  | 1 => goto L408f0c
                  | 2 => goto L408eee
                  | 3 => goto L408ee4
                  | 4 => goto L408eda
                  | 5 => goto L408ec4
                  | 6 => goto L408eae
                  | 7 => goto L408e96
                  | 8 => goto L408e7e
                  | else => goto L408e50;
}
procedure `n.c.a.x.d` `b`(`n.c.a.e` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/e;.b:(JLn/c/a/x/l;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L409178.  call temp:= `b`(v0, v1, v3) @signature `Ln/c/a/e;.b:(JLn/c/a/x/l;)Ln/c/a/e;` @kind virtual;
  #L40917e.  v1:= temp @kind object;
  #L409180.  return v1 @kind object;
}
procedure `boolean` `b`(`n.c.a.e` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/e;.b:(Ln/c/a/x/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L408864.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L408868.  v1:= 1I;
  #L40886a.  v2:= 0I;
  #L40886c.  if v0 == 0 then goto L408896;
  #L408870.  v0:= `@@n.c.a.x.a.F` @type ^`n.c.a.x.a` @kind object;
  #L408874.  if v4 == v0 then goto L408894;
  #L408878.  v0:= `@@n.c.a.x.a.d` @type ^`n.c.a.x.a` @kind object;
  #L40887c.  if v4 == v0 then goto L408894;
  #L408880.  v0:= `@@n.c.a.x.a.f` @type ^`n.c.a.x.a` @kind object;
  #L408884.  if v4 == v0 then goto L408894;
  #L408888.  v0:= `@@n.c.a.x.a.h` @type ^`n.c.a.x.a` @kind object;
  #L40888c.  if v4 != v0 then goto L408892;
  #L408890.  goto L408894;
  #L408892.  v1:= 0I;
  #L408894.  return v1;
  #L408896.  if v4 == 0 then goto L4088a8;
  #L40889a.  call temp:= `a`(v4, v3) @signature `Ln/c/a/x/i;.a:(Ln/c/a/x/e;)Z` @kind interface;
  #L4088a0.  v4:= temp;
  #L4088a2.  if v4 == 0 then goto L4088a8;
  #L4088a6.  goto L4088aa;
  #L4088a8.  v1:= 0I;
  #L4088aa.  return v1;
}
procedure `int` `c`(`n.c.a.e` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/e;.c:(Ln/c/a/x/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L408910.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L408914.  if v0 == 0 then goto L40898c;
  #L408918.  v0:= `@@n.c.a.e$b.a` @type ^`int`[] @kind object;
  #L40891c.  v1:= v4 @kind object;
  #L40891e.  v1:= (`n.c.a.x.a`) v1 @kind object;
  #L408922.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L408928.  v1:= temp;
  #L40892a.  v0:= v0[v1];
  #L40892e.  v1:= 1I;
  #L408930.  if v0 == v1 then goto L408986;
  #L408934.  v1:= 2I;
  #L408936.  if v0 == v1 then goto L40897c;
  #L40893a.  v1:= 3I;
  #L40893c.  if v0 != v1 then goto L40894e;
  #L408940.  v4:= v3.`n.c.a.e.c` @type ^`int`;
  #L408944.  v0:= 1000000I;
  #L40894a.  v4:= v4 / v0 @kind int;
  #L40894c.  return v4;
  #L40894e.  v0:= new `n.c.a.x.m`;
  #L408952.  v1:= new `java.lang.StringBuilder`;
  #L408956.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40895c.  v2:= "Unsupported field: " @kind object;
  #L408960.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L408966.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40896c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L408972.  v4:= temp @kind object;
  #L408974.  call `<init>`(v0, v4) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40897a.  throw v0;
  #L40897c.  v4:= v3.`n.c.a.e.c` @type ^`int`;
  #L408980.  v4:= v4 / 1000;
  #L408984.  return v4;
  #L408986.  v4:= v3.`n.c.a.e.c` @type ^`int`;
  #L40898a.  return v4;
  #L40898c.  call temp:= `a`(v3, v4) @signature `Ln/c/a/e;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @kind virtual;
  #L408992.  v0:= temp @kind object;
  #L408994.  call temp:= `b`(v4, v3) @signature `Ln/c/a/x/i;.b:(Ln/c/a/x/e;)J` @kind interface;
  #L40899a.  v1:= temp @kind wide;
  #L40899c.  call temp:= `a`(v0, v1, v4) @signature `Ln/c/a/x/n;.a:(JLn/c/a/x/i;)I` @kind virtual;
  #L4089a2.  v4:= temp;
  #L4089a4.  return v4;
}
procedure `n.c.a.e` `c`(`n.c.a.e` v2 @kind this, `long` v3 ) @signature `Ln/c/a/e;.c:(J)Ln/c/a/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L408fac.  v0:= 0L;
  #L408fb0.  call temp:= `b`(v2, v3, v0) @signature `Ln/c/a/e;.b:(JJ)Ln/c/a/e;` @kind direct;
  #L408fb6.  v3:= temp @kind object;
  #L408fb8.  return v3 @kind object;
}
procedure `int` `compareTo`(`n.c.a.e` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Ln/c/a/e;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4088bc.  v1:= (`n.c.a.e`) v1 @kind object;
  #L4088c0.  call temp:= `a`(v0, v1) @signature `Ln/c/a/e;.a:(Ln/c/a/e;)I` @kind virtual;
  #L4088c6.  v1:= temp;
  #L4088c8.  return v1;
}
procedure `long` `d`(`n.c.a.e` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/e;.d:(Ln/c/a/x/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L408af0.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L408af4.  if v0 == 0 then goto L408b7a;
  #L408af8.  v0:= `@@n.c.a.e$b.a` @type ^`int`[] @kind object;
  #L408afc.  v1:= v4 @kind object;
  #L408afe.  v1:= (`n.c.a.x.a`) v1 @kind object;
  #L408b02.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L408b08.  v1:= temp;
  #L408b0a.  v0:= v0[v1];
  #L408b0e.  v1:= 1I;
  #L408b10.  if v0 == v1 then goto L408b74;
  #L408b14.  v1:= 2I;
  #L408b16.  if v0 == v1 then goto L408b6a;
  #L408b1a.  v1:= 3I;
  #L408b1c.  if v0 == v1 then goto L408b5a;
  #L408b20.  v1:= 4I;
  #L408b22.  if v0 != v1 then goto L408b2c;
  #L408b26.  v0:= v3.`n.c.a.e.b` @type ^`long` @kind wide;
  #L408b2a.  return v0 @kind wide;
  #L408b2c.  v0:= new `n.c.a.x.m`;
  #L408b30.  v1:= new `java.lang.StringBuilder`;
  #L408b34.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L408b3a.  v2:= "Unsupported field: " @kind object;
  #L408b3e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L408b44.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L408b4a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L408b50.  v4:= temp @kind object;
  #L408b52.  call `<init>`(v0, v4) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L408b58.  throw v0;
  #L408b5a.  v4:= v3.`n.c.a.e.c` @type ^`int`;
  #L408b5e.  v0:= 1000000I;
  #L408b64.  v4:= v4 / v0 @kind int;
  #L408b66.  v0:= (`long`) v4 @kind i2l;
  #L408b68.  return v0 @kind wide;
  #L408b6a.  v4:= v3.`n.c.a.e.c` @type ^`int`;
  #L408b6e.  v4:= v4 / 1000;
  #L408b72.  goto L408b66;
  #L408b74.  v4:= v3.`n.c.a.e.c` @type ^`int`;
  #L408b78.  goto L408b66;
  #L408b7a.  call temp:= `b`(v4, v3) @signature `Ln/c/a/x/i;.b:(Ln/c/a/x/e;)J` @kind interface;
  #L408b80.  v0:= temp @kind wide;
  #L408b82.  return v0 @kind wide;
}
procedure `long` `e`(`n.c.a.e` v2 @kind this) @signature `Ln/c/a/e;.e:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L408ad8.  v0:= v2.`n.c.a.e.b` @type ^`long` @kind wide;
  #L408adc.  return v0 @kind wide;
}
procedure `boolean` `equals`(`n.c.a.e` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Ln/c/a/e;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L408818.  v0:= 1I;
  #L40881a.  if v7 != v8 then goto L408820;
  #L40881e.  return v0;
  #L408820.  v1:= instanceof @variable v8 @type ^`n.c.a.e` @kind boolean;
  #L408824.  v2:= 0I;
  #L408826.  if v1 == 0 then goto L408850;
  #L40882a.  v8:= (`n.c.a.e`) v8 @kind object;
  #L40882e.  v3:= v7.`n.c.a.e.b` @type ^`long` @kind wide;
  #L408832.  v5:= v8.`n.c.a.e.b` @type ^`long` @kind wide;
  #L408836.  v1:= lcmp(v3, v5);
  #L40883a.  if v1 != 0 then goto L40884c;
  #L40883e.  v1:= v7.`n.c.a.e.c` @type ^`int`;
  #L408842.  v8:= v8.`n.c.a.e.c` @type ^`int`;
  #L408846.  if v1 != v8 then goto L40884c;
  #L40884a.  goto L40884e;
  #L40884c.  v0:= 0I;
  #L40884e.  return v0;
  #L408850.  return v2;
}
procedure `int` `h`(`n.c.a.e` v1 @kind this) @signature `Ln/c/a/e;.h:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4089b8.  v0:= v1.`n.c.a.e.c` @type ^`int`;
  #L4089bc.  return v0;
}
procedure `int` `hashCode`(`n.c.a.e` v4 @kind this) @signature `Ln/c/a/e;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4089d0.  v0:= v4.`n.c.a.e.b` @type ^`long` @kind wide;
  #L4089d4.  v2:= 32I;
  #L4089d8.  v2:= v0 ^>> v2 @kind long;
  #L4089dc.  v0:= v0 ^~ v2 @kind long;
  #L4089de.  v1:= (`int`) v0 @kind l2i;
  #L4089e0.  v0:= v4.`n.c.a.e.c` @type ^`int`;
  #L4089e4.  v0:= v0 * 51;
  #L4089e8.  v1:= v1 + v0 @kind int;
  #L4089ea.  return v1;
}
procedure `long` `s`(`n.c.a.e` v8 @kind this) @signature `Ln/c/a/e;.s:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L408b94.  v0:= v8.`n.c.a.e.b` @type ^`long` @kind wide;
  #L408b98.  v2:= 1000000I;
  #L408b9e.  v3:= 1000L;
  #L408ba2.  v5:= 0L;
  #L408ba6.  v7:= lcmp(v0, v5);
  #L408baa.  if v7 < 0 then goto L408bc8;
  #L408bae.  call temp:= `e`(v0, v3) @signature `Ln/c/a/w/d;.e:(JJ)J` @kind static;
  #L408bb4.  v0:= temp @kind wide;
  #L408bb6.  v3:= v8.`n.c.a.e.c` @type ^`int`;
  #L408bba.  v3:= v3 / v2 @kind int;
  #L408bbc.  v2:= (`long`) v3 @kind i2l;
  #L408bbe.  call temp:= `d`(v0, v2) @signature `Ln/c/a/w/d;.d:(JJ)J` @kind static;
  #L408bc4.  v0:= temp @kind wide;
  #L408bc6.  return v0 @kind wide;
  #L408bc8.  v5:= 1L;
  #L408bcc.  v0:= v0 + v5 @kind long;
  #L408bce.  call temp:= `e`(v0, v3) @signature `Ln/c/a/w/d;.e:(JJ)J` @kind static;
  #L408bd4.  v0:= temp @kind wide;
  #L408bd6.  v5:= v8.`n.c.a.e.c` @type ^`int`;
  #L408bda.  v5:= v5 / v2 @kind int;
  #L408bdc.  v5:= (`long`) v5 @kind i2l;
  #L408bde.  v3:= v3 - v5 @kind long;
  #L408be0.  call temp:= `f`(v0, v3) @signature `Ln/c/a/w/d;.f:(JJ)J` @kind static;
  #L408be6.  v0:= temp @kind wide;
  #L408be8.  return v0 @kind wide;
}
procedure `java.lang.String` `toString`(`n.c.a.e` v1 @kind this) @signature `Ln/c/a/e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L408ab8.  v0:= `@@n.c.a.v.b.l` @type ^`n.c.a.v.b` @kind object;
  #L408abc.  call temp:= `a`(v0, v1) @signature `Ln/c/a/v/b;.a:(Ln/c/a/x/e;)Ljava/lang/String;` @kind virtual;
  #L408ac2.  v0:= temp @kind object;
  #L408ac4.  return v0 @kind object;
}
