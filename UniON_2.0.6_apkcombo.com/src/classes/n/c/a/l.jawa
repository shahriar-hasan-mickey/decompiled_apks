record `n.c.a.l` @kind class @AccessFlag PUBLIC_FINAL extends `n.c.a.w.c` @kind class, `n.c.a.x.d` @kind interface, `n.c.a.x.f` @kind interface, `java.lang.Comparable` @kind interface, `java.io.Serializable` @kind interface {
  `n.c.a.h` `n.c.a.l.b` @AccessFlag PRIVATE_FINAL;
  `n.c.a.r` `n.c.a.l.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<clinit>`() @signature `Ln/c/a/l;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L40ee28.  v0:= `@@n.c.a.h.f` @type ^`n.c.a.h` @kind object;
  #L40ee2c.  v1:= `@@n.c.a.r.h` @type ^`n.c.a.r` @kind object;
  #L40ee30.  call temp:= `a`(v0, v1) @signature `Ln/c/a/h;.a:(Ln/c/a/r;)Ln/c/a/l;` @kind virtual;
  #L40ee36.  v0:= `@@n.c.a.h.g` @type ^`n.c.a.h` @kind object;
  #L40ee3a.  v1:= `@@n.c.a.r.g` @type ^`n.c.a.r` @kind object;
  #L40ee3e.  call temp:= `a`(v0, v1) @signature `Ln/c/a/h;.a:(Ln/c/a/r;)Ln/c/a/l;` @kind virtual;
  #L40ee44.  v0:= new `n.c.a.l$a`;
  #L40ee48.  call `<init>`(v0) @signature `Ln/c/a/l$a;.<init>:()V` @kind direct;
  #L40ee4e.  return @kind void;
}
procedure `void` `<init>`(`n.c.a.l` v1 @kind this, `n.c.a.h` v2 @kind object, `n.c.a.r` v3 @kind object) @signature `Ln/c/a/l;.<init>:(Ln/c/a/h;Ln/c/a/r;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L40ee60.  call `<init>`(v1) @signature `Ln/c/a/w/c;.<init>:()V` @kind direct;
  #L40ee66.  v0:= "time" @kind object;
  #L40ee6a.  call temp:= `a`(v2, v0) @signature `Ln/c/a/w/d;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40ee70.  v2:= (`n.c.a.h`) v2 @kind object;
  #L40ee74.  v1.`n.c.a.l.b` @type ^`n.c.a.h` := v2 @kind object;
  #L40ee78.  v2:= "offset" @kind object;
  #L40ee7c.  call temp:= `a`(v3, v2) @signature `Ln/c/a/w/d;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40ee82.  v3:= (`n.c.a.r`) v3 @kind object;
  #L40ee86.  v1.`n.c.a.l.c` @type ^`n.c.a.r` := v3 @kind object;
  #L40ee8a.  return @kind void;
}
procedure `n.c.a.l` `a`(`java.io.DataInput` v1 @kind object) @signature `Ln/c/a/l;.a:(Ljava/io/DataInput;)Ln/c/a/l;` @AccessFlag STATIC {
    temp;
    v0;

  #L40ebe4.  call temp:= `a`(v1) @signature `Ln/c/a/h;.a:(Ljava/io/DataInput;)Ln/c/a/h;` @kind static;
  #L40ebea.  v0:= temp @kind object;
  #L40ebec.  call temp:= `a`(v1) @signature `Ln/c/a/r;.a:(Ljava/io/DataInput;)Ln/c/a/r;` @kind static;
  #L40ebf2.  v1:= temp @kind object;
  #L40ebf4.  call temp:= `a`(v0, v1) @signature `Ln/c/a/l;.a:(Ln/c/a/h;Ln/c/a/r;)Ln/c/a/l;` @kind static;
  #L40ebfa.  v1:= temp @kind object;
  #L40ebfc.  return v1 @kind object;
}
procedure `n.c.a.l` `a`(`n.c.a.h` v1 @kind object, `n.c.a.r` v2 @kind object) @signature `Ln/c/a/l;.a:(Ln/c/a/h;Ln/c/a/r;)Ln/c/a/l;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L40eb88.  v0:= new `n.c.a.l`;
  #L40eb8c.  call `<init>`(v0, v1, v2) @signature `Ln/c/a/l;.<init>:(Ln/c/a/h;Ln/c/a/r;)V` @kind direct;
  #L40eb92.  return v0 @kind object;
}
procedure `n.c.a.l` `a`(`n.c.a.x.e` v3 @kind object) @signature `Ln/c/a/l;.a:(Ln/c/a/x/e;)Ln/c/a/l;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L40eaa8.  v0:= instanceof @variable v3 @type ^`n.c.a.l` @kind boolean;
  #L40eaac.  if v0 == 0 then goto L40eab6;
  #L40eab0.  v3:= (`n.c.a.l`) v3 @kind object;
  #L40eab4.  return v3 @kind object;
  #L40eab6.  call temp:= `a`(v3) @signature `Ln/c/a/h;.a:(Ln/c/a/x/e;)Ln/c/a/h;` @kind static;
  #L40eabc.  v0:= temp @kind object;
  #L40eabe.  call temp:= `a`(v3) @signature `Ln/c/a/r;.a:(Ln/c/a/x/e;)Ln/c/a/r;` @kind static;
  #L40eac4.  v1:= temp @kind object;
  #L40eac6.  v2:= new `n.c.a.l`;
  #L40eaca.  call `<init>`(v2, v0, v1) @signature `Ln/c/a/l;.<init>:(Ln/c/a/h;Ln/c/a/r;)V` @kind direct;
  #L40ead0.  return v2 @kind object;
  #L40ead2.  v0:= new `n.c.a.b`;
  #L40ead6.  v1:= new `java.lang.StringBuilder`;
  #L40eada.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40eae0.  v2:= "Unable to obtain OffsetTime from TemporalAccessor: " @kind object;
  #L40eae4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40eaea.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40eaf0.  v2:= ", type " @kind object;
  #L40eaf4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40eafa.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L40eb00.  v3:= temp @kind object;
  #L40eb02.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L40eb08.  v3:= temp @kind object;
  #L40eb0a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40eb10.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40eb16.  v3:= temp @kind object;
  #L40eb18.  call `<init>`(v0, v3) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40eb1e.  throw v0;
  catch `n.c.a.b` @[L40eab6..L40ead0] goto L40ead2;
}
procedure `n.c.a.l` `b`(`n.c.a.l` v1 @kind this, `n.c.a.h` v2 @kind object, `n.c.a.r` v3 @kind object) @signature `Ln/c/a/l;.b:(Ln/c/a/h;Ln/c/a/r;)Ln/c/a/l;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L40ec10.  v0:= v1.`n.c.a.l.b` @type ^`n.c.a.h` @kind object;
  #L40ec14.  if v0 != v2 then goto L40ec2a;
  #L40ec18.  v0:= v1.`n.c.a.l.c` @type ^`n.c.a.r` @kind object;
  #L40ec1c.  call temp:= `equals`(v0, v3) @signature `Ln/c/a/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L40ec22.  v0:= temp;
  #L40ec24.  if v0 == 0 then goto L40ec2a;
  #L40ec28.  return v1 @kind object;
  #L40ec2a.  v0:= new `n.c.a.l`;
  #L40ec2e.  call `<init>`(v0, v2, v3) @signature `Ln/c/a/l;.<init>:(Ln/c/a/h;Ln/c/a/r;)V` @kind direct;
  #L40ec34.  return v0 @kind object;
}
procedure `long` `h`(`n.c.a.l` v6 @kind this) @signature `Ln/c/a/l;.h:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L40ea70.  v0:= v6.`n.c.a.l.b` @type ^`n.c.a.h` @kind object;
  #L40ea74.  call temp:= `u`(v0) @signature `Ln/c/a/h;.u:()J` @kind virtual;
  #L40ea7a.  v0:= temp @kind wide;
  #L40ea7c.  v2:= v6.`n.c.a.l.c` @type ^`n.c.a.r` @kind object;
  #L40ea80.  call temp:= `k`(v2) @signature `Ln/c/a/r;.k:()I` @kind virtual;
  #L40ea86.  v2:= temp;
  #L40ea88.  v2:= (`long`) v2 @kind i2l;
  #L40ea8a.  v4:= 1000000000L;
  #L40ea90.  v2:= v2 * v4 @kind long;
  #L40ea94.  v0:= v0 - v2 @kind long;
  #L40ea96.  return v0 @kind wide;
}
procedure `java.lang.Object` `readResolve`(`n.c.a.l` v2 @kind this) @signature `Ln/c/a/l;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L40e99c.  v0:= new `java.io.InvalidObjectException`;
  #L40e9a0.  v1:= "Deserialization via serialization delegate" @kind object;
  #L40e9a4.  call `<init>`(v0, v1) @signature `Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40e9aa.  throw v0;
}
procedure `java.lang.Object` `writeReplace`(`n.c.a.l` v2 @kind this) @signature `Ln/c/a/l;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L40e9bc.  v0:= new `n.c.a.n`;
  #L40e9c0.  v1:= 66I;
  #L40e9c4.  call `<init>`(v0, v1, v2) @signature `Ln/c/a/n;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L40e9ca.  return v0 @kind object;
}
procedure `int` `a`(`n.c.a.l` v4 @kind this, `n.c.a.l` v5 @kind object) @signature `Ln/c/a/l;.a:(Ln/c/a/l;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40e864.  v0:= v4.`n.c.a.l.c` @type ^`n.c.a.r` @kind object;
  #L40e868.  v1:= v5.`n.c.a.l.c` @type ^`n.c.a.r` @kind object;
  #L40e86c.  call temp:= `equals`(v0, v1) @signature `Ln/c/a/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L40e872.  v0:= temp;
  #L40e874.  if v0 == 0 then goto L40e88a;
  #L40e878.  v0:= v4.`n.c.a.l.b` @type ^`n.c.a.h` @kind object;
  #L40e87c.  v5:= v5.`n.c.a.l.b` @type ^`n.c.a.h` @kind object;
  #L40e880.  call temp:= `a`(v0, v5) @signature `Ln/c/a/h;.a:(Ln/c/a/h;)I` @kind virtual;
  #L40e886.  v5:= temp;
  #L40e888.  return v5;
  #L40e88a.  call temp:= `h`(v4) @signature `Ln/c/a/l;.h:()J` @kind direct;
  #L40e890.  v0:= temp @kind wide;
  #L40e892.  call temp:= `h`(v5) @signature `Ln/c/a/l;.h:()J` @kind direct;
  #L40e898.  v2:= temp @kind wide;
  #L40e89a.  call temp:= `a`(v0, v2) @signature `Ln/c/a/w/d;.a:(JJ)I` @kind static;
  #L40e8a0.  v0:= temp;
  #L40e8a2.  if v0 != 0 then goto L40e8b6;
  #L40e8a6.  v0:= v4.`n.c.a.l.b` @type ^`n.c.a.h` @kind object;
  #L40e8aa.  v5:= v5.`n.c.a.l.b` @type ^`n.c.a.h` @kind object;
  #L40e8ae.  call temp:= `a`(v0, v5) @signature `Ln/c/a/h;.a:(Ln/c/a/h;)I` @kind virtual;
  #L40e8b4.  v0:= temp;
  #L40e8b6.  return v0;
}
procedure `java.lang.Object` `a`(`n.c.a.l` v1 @kind this, `n.c.a.x.k` v2 @kind object) @signature `Ln/c/a/l;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40e910.  call temp:= `e`() @signature `Ln/c/a/x/j;.e:()Ln/c/a/x/k;` @kind static;
  #L40e916.  v0:= temp @kind object;
  #L40e918.  if v2 != v0 then goto L40e922;
  #L40e91c.  v2:= `@@n.c.a.x.b.c` @type ^`n.c.a.x.b` @kind object;
  #L40e920.  return v2 @kind object;
  #L40e922.  call temp:= `d`() @signature `Ln/c/a/x/j;.d:()Ln/c/a/x/k;` @kind static;
  #L40e928.  v0:= temp @kind object;
  #L40e92a.  if v2 == v0 then goto L40e982;
  #L40e92e.  call temp:= `f`() @signature `Ln/c/a/x/j;.f:()Ln/c/a/x/k;` @kind static;
  #L40e934.  v0:= temp @kind object;
  #L40e936.  if v2 != v0 then goto L40e93c;
  #L40e93a.  goto L40e982;
  #L40e93c.  call temp:= `c`() @signature `Ln/c/a/x/j;.c:()Ln/c/a/x/k;` @kind static;
  #L40e942.  v0:= temp @kind object;
  #L40e944.  if v2 != v0 then goto L40e94e;
  #L40e948.  v2:= v1.`n.c.a.l.b` @type ^`n.c.a.h` @kind object;
  #L40e94c.  return v2 @kind object;
  #L40e94e.  call temp:= `a`() @signature `Ln/c/a/x/j;.a:()Ln/c/a/x/k;` @kind static;
  #L40e954.  v0:= temp @kind object;
  #L40e956.  if v2 == v0 then goto L40e97e;
  #L40e95a.  call temp:= `b`() @signature `Ln/c/a/x/j;.b:()Ln/c/a/x/k;` @kind static;
  #L40e960.  v0:= temp @kind object;
  #L40e962.  if v2 == v0 then goto L40e97e;
  #L40e966.  call temp:= `g`() @signature `Ln/c/a/x/j;.g:()Ln/c/a/x/k;` @kind static;
  #L40e96c.  v0:= temp @kind object;
  #L40e96e.  if v2 != v0 then goto L40e974;
  #L40e972.  goto L40e97e;
  #L40e974.  call temp:= `a`(v1, v2) @signature `Ln/c/a/w/c;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @kind super;
  #L40e97a.  v2:= temp @kind object;
  #L40e97c.  return v2 @kind object;
  #L40e97e.  v2:= 0I;
  #L40e980.  return v2 @kind object;
  #L40e982.  call temp:= `e`(v1) @signature `Ln/c/a/l;.e:()Ln/c/a/r;` @kind virtual;
  #L40e988.  v2:= temp @kind object;
  #L40e98a.  return v2 @kind object;
}
procedure `n.c.a.l` `a`(`n.c.a.l` v3 @kind this, `long` v4 , `n.c.a.x.l` v6 @kind object) @signature `Ln/c/a/l;.a:(JLn/c/a/x/l;)Ln/c/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40eb40.  v0:= -9223372036854775808L;
  #L40eb44.  v2:= lcmp(v4, v0);
  #L40eb48.  if v2 != 0 then goto L40eb6c;
  #L40eb4c.  v4:= 9223372036854775807L;
  #L40eb56.  call temp:= `b`(v3, v4, v6) @signature `Ln/c/a/l;.b:(JLn/c/a/x/l;)Ln/c/a/l;` @kind virtual;
  #L40eb5c.  v4:= temp @kind object;
  #L40eb5e.  v0:= 1L;
  #L40eb62.  call temp:= `b`(v4, v0, v6) @signature `Ln/c/a/l;.b:(JLn/c/a/x/l;)Ln/c/a/l;` @kind virtual;
  #L40eb68.  v4:= temp @kind object;
  #L40eb6a.  goto L40eb76;
  #L40eb6c.  v4:= -v4 @kind long;
  #L40eb6e.  call temp:= `b`(v3, v4, v6) @signature `Ln/c/a/l;.b:(JLn/c/a/x/l;)Ln/c/a/l;` @kind virtual;
  #L40eb74.  v4:= temp @kind object;
  #L40eb76.  return v4 @kind object;
}
procedure `n.c.a.l` `a`(`n.c.a.l` v1 @kind this, `n.c.a.x.f` v2 @kind object) @signature `Ln/c/a/l;.a:(Ln/c/a/x/f;)Ln/c/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40ec48.  v0:= instanceof @variable v2 @type ^`n.c.a.h` @kind boolean;
  #L40ec4c.  if v0 == 0 then goto L40ec62;
  #L40ec50.  v2:= (`n.c.a.h`) v2 @kind object;
  #L40ec54.  v0:= v1.`n.c.a.l.c` @type ^`n.c.a.r` @kind object;
  #L40ec58.  call temp:= `b`(v1, v2, v0) @signature `Ln/c/a/l;.b:(Ln/c/a/h;Ln/c/a/r;)Ln/c/a/l;` @kind direct;
  #L40ec5e.  v2:= temp @kind object;
  #L40ec60.  return v2 @kind object;
  #L40ec62.  v0:= instanceof @variable v2 @type ^`n.c.a.r` @kind boolean;
  #L40ec66.  if v0 == 0 then goto L40ec7c;
  #L40ec6a.  v0:= v1.`n.c.a.l.b` @type ^`n.c.a.h` @kind object;
  #L40ec6e.  v2:= (`n.c.a.r`) v2 @kind object;
  #L40ec72.  call temp:= `b`(v1, v0, v2) @signature `Ln/c/a/l;.b:(Ln/c/a/h;Ln/c/a/r;)Ln/c/a/l;` @kind direct;
  #L40ec78.  v2:= temp @kind object;
  #L40ec7a.  return v2 @kind object;
  #L40ec7c.  v0:= instanceof @variable v2 @type ^`n.c.a.l` @kind boolean;
  #L40ec80.  if v0 == 0 then goto L40ec8a;
  #L40ec84.  v2:= (`n.c.a.l`) v2 @kind object;
  #L40ec88.  return v2 @kind object;
  #L40ec8a.  call temp:= `a`(v2, v1) @signature `Ln/c/a/x/f;.a:(Ln/c/a/x/d;)Ln/c/a/x/d;` @kind interface;
  #L40ec90.  v2:= temp @kind object;
  #L40ec92.  v2:= (`n.c.a.l`) v2 @kind object;
  #L40ec96.  return v2 @kind object;
}
procedure `n.c.a.l` `a`(`n.c.a.l` v1 @kind this, `n.c.a.x.i` v2 @kind object, `long` v3 ) @signature `Ln/c/a/l;.a:(Ln/c/a/x/i;J)Ln/c/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40eca8.  v0:= instanceof @variable v2 @type ^`n.c.a.x.a` @kind boolean;
  #L40ecac.  if v0 == 0 then goto L40ecf4;
  #L40ecb0.  v0:= `@@n.c.a.x.a.G` @type ^`n.c.a.x.a` @kind object;
  #L40ecb4.  if v2 != v0 then goto L40ecda;
  #L40ecb8.  v2:= (`n.c.a.x.a`) v2 @kind object;
  #L40ecbc.  v0:= v1.`n.c.a.l.b` @type ^`n.c.a.h` @kind object;
  #L40ecc0.  call temp:= `a`(v2, v3) @signature `Ln/c/a/x/a;.a:(J)I` @kind virtual;
  #L40ecc6.  v2:= temp;
  #L40ecc8.  call temp:= `b`(v2) @signature `Ln/c/a/r;.b:(I)Ln/c/a/r;` @kind static;
  #L40ecce.  v2:= temp @kind object;
  #L40ecd0.  call temp:= `b`(v1, v0, v2) @signature `Ln/c/a/l;.b:(Ln/c/a/h;Ln/c/a/r;)Ln/c/a/l;` @kind direct;
  #L40ecd6.  v2:= temp @kind object;
  #L40ecd8.  return v2 @kind object;
  #L40ecda.  v0:= v1.`n.c.a.l.b` @type ^`n.c.a.h` @kind object;
  #L40ecde.  call temp:= `a`(v0, v2, v3) @signature `Ln/c/a/h;.a:(Ln/c/a/x/i;J)Ln/c/a/h;` @kind virtual;
  #L40ece4.  v2:= temp @kind object;
  #L40ece6.  v3:= v1.`n.c.a.l.c` @type ^`n.c.a.r` @kind object;
  #L40ecea.  call temp:= `b`(v1, v2, v3) @signature `Ln/c/a/l;.b:(Ln/c/a/h;Ln/c/a/r;)Ln/c/a/l;` @kind direct;
  #L40ecf0.  v2:= temp @kind object;
  #L40ecf2.  return v2 @kind object;
  #L40ecf4.  call temp:= `a`(v2, v1, v3) @signature `Ln/c/a/x/i;.a:(Ln/c/a/x/d;J)Ln/c/a/x/d;` @kind interface;
  #L40ecfa.  v2:= temp @kind object;
  #L40ecfc.  v2:= (`n.c.a.l`) v2 @kind object;
  #L40ed00.  return v2 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.l` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/l;.a:(JLn/c/a/x/l;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40ed74.  call temp:= `a`(v0, v1, v3) @signature `Ln/c/a/l;.a:(JLn/c/a/x/l;)Ln/c/a/l;` @kind virtual;
  #L40ed7a.  v1:= temp @kind object;
  #L40ed7c.  return v1 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.l` v3 @kind this, `n.c.a.x.d` v4 @kind object) @signature `Ln/c/a/l;.a:(Ln/c/a/x/d;)Ln/c/a/x/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40ed2c.  v0:= `@@n.c.a.x.a.e` @type ^`n.c.a.x.a` @kind object;
  #L40ed30.  v1:= v3.`n.c.a.l.b` @type ^`n.c.a.h` @kind object;
  #L40ed34.  call temp:= `u`(v1) @signature `Ln/c/a/h;.u:()J` @kind virtual;
  #L40ed3a.  v1:= temp @kind wide;
  #L40ed3c.  call temp:= `a`(v4, v0, v1) @signature `Ln/c/a/x/d;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @kind interface;
  #L40ed42.  v4:= temp @kind object;
  #L40ed44.  v0:= `@@n.c.a.x.a.G` @type ^`n.c.a.x.a` @kind object;
  #L40ed48.  call temp:= `e`(v3) @signature `Ln/c/a/l;.e:()Ln/c/a/r;` @kind virtual;
  #L40ed4e.  v1:= temp @kind object;
  #L40ed50.  call temp:= `k`(v1) @signature `Ln/c/a/r;.k:()I` @kind virtual;
  #L40ed56.  v1:= temp;
  #L40ed58.  v1:= (`long`) v1 @kind i2l;
  #L40ed5a.  call temp:= `a`(v4, v0, v1) @signature `Ln/c/a/x/d;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @kind interface;
  #L40ed60.  v4:= temp @kind object;
  #L40ed62.  return v4 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.l` v0 @kind this, `n.c.a.x.f` v1 @kind object) @signature `Ln/c/a/l;.a:(Ln/c/a/x/f;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40edac.  call temp:= `a`(v0, v1) @signature `Ln/c/a/l;.a:(Ln/c/a/x/f;)Ln/c/a/l;` @kind virtual;
  #L40edb2.  v1:= temp @kind object;
  #L40edb4.  return v1 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.l` v0 @kind this, `n.c.a.x.i` v1 @kind object, `long` v2 ) @signature `Ln/c/a/l;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40edc8.  call temp:= `a`(v0, v1, v2) @signature `Ln/c/a/l;.a:(Ln/c/a/x/i;J)Ln/c/a/l;` @kind virtual;
  #L40edce.  v1:= temp @kind object;
  #L40edd0.  return v1 @kind object;
}
procedure `n.c.a.x.n` `a`(`n.c.a.l` v1 @kind this, `n.c.a.x.i` v2 @kind object) @signature `Ln/c/a/l;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40ede4.  v0:= instanceof @variable v2 @type ^`n.c.a.x.a` @kind boolean;
  #L40ede8.  if v0 == 0 then goto L40ee0c;
  #L40edec.  v0:= `@@n.c.a.x.a.G` @type ^`n.c.a.x.a` @kind object;
  #L40edf0.  if v2 != v0 then goto L40edfe;
  #L40edf4.  call temp:= `h`(v2) @signature `Ln/c/a/x/i;.h:()Ln/c/a/x/n;` @kind interface;
  #L40edfa.  v2:= temp @kind object;
  #L40edfc.  return v2 @kind object;
  #L40edfe.  v0:= v1.`n.c.a.l.b` @type ^`n.c.a.h` @kind object;
  #L40ee02.  call temp:= `a`(v0, v2) @signature `Ln/c/a/h;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @kind virtual;
  #L40ee08.  v2:= temp @kind object;
  #L40ee0a.  return v2 @kind object;
  #L40ee0c.  call temp:= `c`(v2, v1) @signature `Ln/c/a/x/i;.c:(Ln/c/a/x/e;)Ln/c/a/x/n;` @kind interface;
  #L40ee12.  v2:= temp @kind object;
  #L40ee14.  return v2 @kind object;
}
procedure `void` `a`(`n.c.a.l` v1 @kind this, `java.io.DataOutput` v2 @kind object) @signature `Ln/c/a/l;.a:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L40ee9c.  v0:= v1.`n.c.a.l.b` @type ^`n.c.a.h` @kind object;
  #L40eea0.  call `a`(v0, v2) @signature `Ln/c/a/h;.a:(Ljava/io/DataOutput;)V` @kind virtual;
  #L40eea6.  v0:= v1.`n.c.a.l.c` @type ^`n.c.a.r` @kind object;
  #L40eeaa.  call `b`(v0, v2) @signature `Ln/c/a/r;.b:(Ljava/io/DataOutput;)V` @kind virtual;
  #L40eeb0.  return @kind void;
}
procedure `n.c.a.l` `b`(`n.c.a.l` v1 @kind this, `long` v2 , `n.c.a.x.l` v4 @kind object) @signature `Ln/c/a/l;.b:(JLn/c/a/x/l;)Ln/c/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40eba4.  v0:= instanceof @variable v4 @type ^`n.c.a.x.b` @kind boolean;
  #L40eba8.  if v0 == 0 then goto L40ebc6;
  #L40ebac.  v0:= v1.`n.c.a.l.b` @type ^`n.c.a.h` @kind object;
  #L40ebb0.  call temp:= `b`(v0, v2, v4) @signature `Ln/c/a/h;.b:(JLn/c/a/x/l;)Ln/c/a/h;` @kind virtual;
  #L40ebb6.  v2:= temp @kind object;
  #L40ebb8.  v3:= v1.`n.c.a.l.c` @type ^`n.c.a.r` @kind object;
  #L40ebbc.  call temp:= `b`(v1, v2, v3) @signature `Ln/c/a/l;.b:(Ln/c/a/h;Ln/c/a/r;)Ln/c/a/l;` @kind direct;
  #L40ebc2.  v2:= temp @kind object;
  #L40ebc4.  return v2 @kind object;
  #L40ebc6.  call temp:= `a`(v4, v1, v2) @signature `Ln/c/a/x/l;.a:(Ln/c/a/x/d;J)Ln/c/a/x/d;` @kind interface;
  #L40ebcc.  v2:= temp @kind object;
  #L40ebce.  v2:= (`n.c.a.l`) v2 @kind object;
  #L40ebd2.  return v2 @kind object;
}
procedure `n.c.a.x.d` `b`(`n.c.a.l` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/l;.b:(JLn/c/a/x/l;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40ed90.  call temp:= `b`(v0, v1, v3) @signature `Ln/c/a/l;.b:(JLn/c/a/x/l;)Ln/c/a/l;` @kind virtual;
  #L40ed96.  v1:= temp @kind object;
  #L40ed98.  return v1 @kind object;
}
procedure `boolean` `b`(`n.c.a.l` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/l;.b:(Ln/c/a/x/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40e7f8.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L40e7fc.  v1:= 1I;
  #L40e7fe.  v2:= 0I;
  #L40e800.  if v0 == 0 then goto L40e81e;
  #L40e804.  call temp:= `e`(v4) @signature `Ln/c/a/x/i;.e:()Z` @kind interface;
  #L40e80a.  v0:= temp;
  #L40e80c.  if v0 != 0 then goto L40e81c;
  #L40e810.  v0:= `@@n.c.a.x.a.G` @type ^`n.c.a.x.a` @kind object;
  #L40e814.  if v4 != v0 then goto L40e81a;
  #L40e818.  goto L40e81c;
  #L40e81a.  v1:= 0I;
  #L40e81c.  return v1;
  #L40e81e.  if v4 == 0 then goto L40e830;
  #L40e822.  call temp:= `a`(v4, v3) @signature `Ln/c/a/x/i;.a:(Ln/c/a/x/e;)Z` @kind interface;
  #L40e828.  v4:= temp;
  #L40e82a.  if v4 == 0 then goto L40e830;
  #L40e82e.  goto L40e832;
  #L40e830.  v1:= 0I;
  #L40e832.  return v1;
}
procedure `int` `c`(`n.c.a.l` v0 @kind this, `n.c.a.x.i` v1 @kind object) @signature `Ln/c/a/l;.c:(Ln/c/a/x/i;)I` @AccessFlag PUBLIC {
    temp;

  #L40e8c8.  call temp:= `c`(v0, v1) @signature `Ln/c/a/w/c;.c:(Ln/c/a/x/i;)I` @kind super;
  #L40e8ce.  v1:= temp;
  #L40e8d0.  return v1;
}
procedure `int` `compareTo`(`n.c.a.l` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Ln/c/a/l;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40e844.  v1:= (`n.c.a.l`) v1 @kind object;
  #L40e848.  call temp:= `a`(v0, v1) @signature `Ln/c/a/l;.a:(Ln/c/a/l;)I` @kind virtual;
  #L40e84e.  v1:= temp;
  #L40e850.  return v1;
}
procedure `long` `d`(`n.c.a.l` v2 @kind this, `n.c.a.x.i` v3 @kind object) @signature `Ln/c/a/l;.d:(Ln/c/a/x/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40ea24.  v0:= instanceof @variable v3 @type ^`n.c.a.x.a` @kind boolean;
  #L40ea28.  if v0 == 0 then goto L40ea56;
  #L40ea2c.  v0:= `@@n.c.a.x.a.G` @type ^`n.c.a.x.a` @kind object;
  #L40ea30.  if v3 != v0 then goto L40ea48;
  #L40ea34.  call temp:= `e`(v2) @signature `Ln/c/a/l;.e:()Ln/c/a/r;` @kind virtual;
  #L40ea3a.  v3:= temp @kind object;
  #L40ea3c.  call temp:= `k`(v3) @signature `Ln/c/a/r;.k:()I` @kind virtual;
  #L40ea42.  v3:= temp;
  #L40ea44.  v0:= (`long`) v3 @kind i2l;
  #L40ea46.  return v0 @kind wide;
  #L40ea48.  v0:= v2.`n.c.a.l.b` @type ^`n.c.a.h` @kind object;
  #L40ea4c.  call temp:= `d`(v0, v3) @signature `Ln/c/a/h;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L40ea52.  v0:= temp @kind wide;
  #L40ea54.  return v0 @kind wide;
  #L40ea56.  call temp:= `b`(v3, v2) @signature `Ln/c/a/x/i;.b:(Ln/c/a/x/e;)J` @kind interface;
  #L40ea5c.  v0:= temp @kind wide;
  #L40ea5e.  return v0 @kind wide;
}
procedure `n.c.a.r` `e`(`n.c.a.l` v1 @kind this) @signature `Ln/c/a/l;.e:()Ln/c/a/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40ed14.  v0:= v1.`n.c.a.l.c` @type ^`n.c.a.r` @kind object;
  #L40ed18.  return v0 @kind object;
}
procedure `boolean` `equals`(`n.c.a.l` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Ln/c/a/l;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40e7a0.  v0:= 1I;
  #L40e7a2.  if v4 != v5 then goto L40e7a8;
  #L40e7a6.  return v0;
  #L40e7a8.  v1:= instanceof @variable v5 @type ^`n.c.a.l` @kind boolean;
  #L40e7ac.  v2:= 0I;
  #L40e7ae.  if v1 == 0 then goto L40e7e4;
  #L40e7b2.  v5:= (`n.c.a.l`) v5 @kind object;
  #L40e7b6.  v1:= v4.`n.c.a.l.b` @type ^`n.c.a.h` @kind object;
  #L40e7ba.  v3:= v5.`n.c.a.l.b` @type ^`n.c.a.h` @kind object;
  #L40e7be.  call temp:= `equals`(v1, v3) @signature `Ln/c/a/h;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L40e7c4.  v1:= temp;
  #L40e7c6.  if v1 == 0 then goto L40e7e0;
  #L40e7ca.  v1:= v4.`n.c.a.l.c` @type ^`n.c.a.r` @kind object;
  #L40e7ce.  v5:= v5.`n.c.a.l.c` @type ^`n.c.a.r` @kind object;
  #L40e7d2.  call temp:= `equals`(v1, v5) @signature `Ln/c/a/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L40e7d8.  v5:= temp;
  #L40e7da.  if v5 == 0 then goto L40e7e0;
  #L40e7de.  goto L40e7e2;
  #L40e7e0.  v0:= 0I;
  #L40e7e2.  return v0;
  #L40e7e4.  return v2;
}
procedure `int` `hashCode`(`n.c.a.l` v2 @kind this) @signature `Ln/c/a/l;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40e8e4.  v0:= v2.`n.c.a.l.b` @type ^`n.c.a.h` @kind object;
  #L40e8e8.  call temp:= `hashCode`(v0) @signature `Ln/c/a/h;.hashCode:()I` @kind virtual;
  #L40e8ee.  v0:= temp;
  #L40e8f0.  v1:= v2.`n.c.a.l.c` @type ^`n.c.a.r` @kind object;
  #L40e8f4.  call temp:= `hashCode`(v1) @signature `Ln/c/a/r;.hashCode:()I` @kind virtual;
  #L40e8fa.  v1:= temp;
  #L40e8fc.  v0:= v0 ^~ v1 @kind int;
  #L40e8fe.  return v0;
}
procedure `java.lang.String` `toString`(`n.c.a.l` v2 @kind this) @signature `Ln/c/a/l;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40e9dc.  v0:= new `java.lang.StringBuilder`;
  #L40e9e0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40e9e6.  v1:= v2.`n.c.a.l.b` @type ^`n.c.a.h` @kind object;
  #L40e9ea.  call temp:= `toString`(v1) @signature `Ln/c/a/h;.toString:()Ljava/lang/String;` @kind virtual;
  #L40e9f0.  v1:= temp @kind object;
  #L40e9f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40e9f8.  v1:= v2.`n.c.a.l.c` @type ^`n.c.a.r` @kind object;
  #L40e9fc.  call temp:= `toString`(v1) @signature `Ln/c/a/r;.toString:()Ljava/lang/String;` @kind virtual;
  #L40ea02.  v1:= temp @kind object;
  #L40ea04.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40ea0a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40ea10.  v0:= temp @kind object;
  #L40ea12.  return v0 @kind object;
}
