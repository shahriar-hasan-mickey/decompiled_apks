record `n.c.a.y.c` @kind class @AccessFlag PUBLIC_FINAL extends `n.c.a.y.i` @kind class {
  `java.util.List` `n.c.a.y.c.c` @AccessFlag PRIVATE;
  `java.util.concurrent.ConcurrentNavigableMap` `n.c.a.y.c.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`n.c.a.y.c` v2 @kind this, `java.io.InputStream` v3 @kind object) @signature `Ln/c/a/y/c;.<init>:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L426a84.  call `<init>`(v2) @signature `Ln/c/a/y/i;.<init>:()V` @kind direct;
  #L426a8a.  v0:= new `java.util.concurrent.ConcurrentSkipListMap`;
  #L426a8e.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentSkipListMap;.<init>:()V` @kind direct;
  #L426a94.  v2.`n.c.a.y.c.d` @type ^`java.util.concurrent.ConcurrentNavigableMap` := v0 @kind object;
  #L426a98.  v0:= new `java.util.concurrent.CopyOnWriteArraySet`;
  #L426a9c.  call `<init>`(v0) @signature `Ljava/util/concurrent/CopyOnWriteArraySet;.<init>:()V` @kind direct;
  #L426aa2.  call temp:= `a`(v2, v3) @signature `Ln/c/a/y/c;.a:(Ljava/io/InputStream;)Z` @kind direct;
  #L426aa8.  return @kind void;
  #L426aaa.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L426aac.  v0:= new `n.c.a.y.g`;
  #L426ab0.  v1:= "Unable to load TZDB time-zone rules" @kind object;
  #L426ab4.  call `<init>`(v0, v1, v3) @signature `Ln/c/a/y/g;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L426aba.  throw v0;
  catch `java.lang.Exception` @[L426aa2..L426aa8] goto L426aaa;
}
procedure `boolean` `a`(`n.c.a.y.c` v3 @kind this, `java.io.InputStream` v4 @kind object) @signature `Ln/c/a/y/c;.a:(Ljava/io/InputStream;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4267dc.  call temp:= `b`(v3, v4) @signature `Ln/c/a/y/c;.b:(Ljava/io/InputStream;)Ljava/lang/Iterable;` @kind direct;
  #L4267e2.  v4:= temp @kind object;
  #L4267e4.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4267ea.  v4:= temp @kind object;
  #L4267ec.  v0:= 0I;
  #L4267ee.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4267f4.  v1:= temp;
  #L4267f6.  if v1 == 0 then goto L42687a;
  #L4267fa.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L426800.  v0:= temp @kind object;
  #L426802.  v0:= (`n.c.a.y.c$a`) v0 @kind object;
  #L426806.  v1:= v3.`n.c.a.y.c.d` @type ^`java.util.concurrent.ConcurrentNavigableMap` @kind object;
  #L42680a.  call temp:= `a`(v0) @signature `Ln/c/a/y/c$a;.a:(Ln/c/a/y/c$a;)Ljava/lang/String;` @kind static;
  #L426810.  v2:= temp @kind object;
  #L426812.  call temp:= `putIfAbsent`(v1, v2, v0) @signature `Ljava/util/concurrent/ConcurrentNavigableMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L426818.  v1:= temp @kind object;
  #L42681a.  v1:= (`n.c.a.y.c$a`) v1 @kind object;
  #L42681e.  if v1 == 0 then goto L426876;
  #L426822.  call temp:= `a`(v1) @signature `Ln/c/a/y/c$a;.a:(Ln/c/a/y/c$a;)Ljava/lang/String;` @kind static;
  #L426828.  v1:= temp @kind object;
  #L42682a.  call temp:= `a`(v0) @signature `Ln/c/a/y/c$a;.a:(Ln/c/a/y/c$a;)Ljava/lang/String;` @kind static;
  #L426830.  v2:= temp @kind object;
  #L426832.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L426838.  v1:= temp;
  #L42683a.  if v1 == 0 then goto L426840;
  #L42683e.  goto L426876;
  #L426840.  v4:= new `n.c.a.y.g`;
  #L426844.  v1:= new `java.lang.StringBuilder`;
  #L426848.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42684e.  v2:= "Data already loaded for TZDB time-zone rules version: " @kind object;
  #L426852.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L426858.  call temp:= `a`(v0) @signature `Ln/c/a/y/c$a;.a:(Ln/c/a/y/c$a;)Ljava/lang/String;` @kind static;
  #L42685e.  v0:= temp @kind object;
  #L426860.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L426866.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42686c.  v0:= temp @kind object;
  #L42686e.  call `<init>`(v4, v0) @signature `Ln/c/a/y/g;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L426874.  throw v4;
  #L426876.  v0:= 1I;
  #L426878.  goto L4267ee;
  #L42687a.  return v0;
}
procedure `java.lang.Iterable` `b`(`n.c.a.y.c` v12 @kind this, `java.io.InputStream` v13 @kind object) @signature `Ln/c/a/y/c;.b:(Ljava/io/InputStream;)Ljava/lang/Iterable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L42688c.  v0:= new `java.io.DataInputStream`;
  #L426890.  call `<init>`(v0, v13) @signature `Ljava/io/DataInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L426896.  call temp:= `readByte`(v0) @signature `Ljava/io/DataInputStream;.readByte:()B` @kind virtual;
  #L42689c.  v13:= temp;
  #L42689e.  v1:= "File format not recognised" @kind object;
  #L4268a2.  v2:= 1I;
  #L4268a4.  if v13 != v2 then goto L4269be;
  #L4268a8.  call temp:= `readUTF`(v0) @signature `Ljava/io/DataInputStream;.readUTF:()Ljava/lang/String;` @kind virtual;
  #L4268ae.  v13:= temp @kind object;
  #L4268b0.  v2:= "TZDB" @kind object;
  #L4268b4.  call temp:= `equals`(v2, v13) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4268ba.  v13:= temp;
  #L4268bc.  if v13 == 0 then goto L4269b2;
  #L4268c0.  call temp:= `readShort`(v0) @signature `Ljava/io/DataInputStream;.readShort:()S` @kind virtual;
  #L4268c6.  v13:= temp;
  #L4268c8.  v1:= new `java.lang.String`[v13];
  #L4268cc.  v2:= 0I;
  #L4268ce.  v3:= 0I;
  #L4268d0.  if v3 >= v13 then goto L4268e6;
  #L4268d4.  call temp:= `readUTF`(v0) @signature `Ljava/io/DataInputStream;.readUTF:()Ljava/lang/String;` @kind virtual;
  #L4268da.  v4:= temp @kind object;
  #L4268dc.  v1[v3]:= v4 @kind object;
  #L4268e0.  v3:= v3 + 1;
  #L4268e4.  goto L4268d0;
  #L4268e6.  call temp:= `readShort`(v0) @signature `Ljava/io/DataInputStream;.readShort:()S` @kind virtual;
  #L4268ec.  v3:= temp;
  #L4268ee.  v4:= new `java.lang.String`[v3];
  #L4268f2.  v5:= 0I;
  #L4268f4.  if v5 >= v3 then goto L42690a;
  #L4268f8.  call temp:= `readUTF`(v0) @signature `Ljava/io/DataInputStream;.readUTF:()Ljava/lang/String;` @kind virtual;
  #L4268fe.  v6:= temp @kind object;
  #L426900.  v4[v5]:= v6 @kind object;
  #L426904.  v5:= v5 + 1;
  #L426908.  goto L4268f4;
  #L42690a.  call temp:= `asList`(v4) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L426910.  v3:= temp @kind object;
  #L426912.  v12.`n.c.a.y.c.c` @type ^`java.util.List` := v3 @kind object;
  #L426916.  call temp:= `readShort`(v0) @signature `Ljava/io/DataInputStream;.readShort:()S` @kind virtual;
  #L42691c.  v3:= temp;
  #L42691e.  v5:= new `java.lang.Object`[v3];
  #L426922.  v6:= 0I;
  #L426924.  if v6 >= v3 then goto L426944;
  #L426928.  call temp:= `readShort`(v0) @signature `Ljava/io/DataInputStream;.readShort:()S` @kind virtual;
  #L42692e.  v7:= temp;
  #L426930.  v7:= new `byte`[v7];
  #L426934.  call `readFully`(v0, v7) @signature `Ljava/io/DataInputStream;.readFully:([B)V` @kind virtual;
  #L42693a.  v5[v6]:= v7 @kind object;
  #L42693e.  v6:= v6 + 1;
  #L426942.  goto L426924;
  #L426944.  v3:= new `java.util.concurrent.atomic.AtomicReferenceArray`;
  #L426948.  call `<init>`(v3, v5) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.<init>:([Ljava/lang/Object;)V` @kind direct;
  #L42694e.  v5:= new `java.util.HashSet`;
  #L426952.  call `<init>`(v5, v13) @signature `Ljava/util/HashSet;.<init>:(I)V` @kind direct;
  #L426958.  v6:= 0I;
  #L42695a.  if v6 >= v13 then goto L4269b0;
  #L42695e.  call temp:= `readShort`(v0) @signature `Ljava/io/DataInputStream;.readShort:()S` @kind virtual;
  #L426964.  v7:= temp;
  #L426966.  v8:= new `java.lang.String`[v7];
  #L42696a.  v9:= new `short`[v7];
  #L42696e.  v10:= 0I;
  #L426970.  if v10 >= v7 then goto L426996;
  #L426974.  call temp:= `readShort`(v0) @signature `Ljava/io/DataInputStream;.readShort:()S` @kind virtual;
  #L42697a.  v11:= temp;
  #L42697c.  v11:= v4[v11] @kind object;
  #L426980.  v8[v10]:= v11 @kind object;
  #L426984.  call temp:= `readShort`(v0) @signature `Ljava/io/DataInputStream;.readShort:()S` @kind virtual;
  #L42698a.  v11:= temp;
  #L42698c.  v9[v10]:= v11 @kind short;
  #L426990.  v10:= v10 + 1;
  #L426994.  goto L426970;
  #L426996.  v7:= new `n.c.a.y.c$a`;
  #L42699a.  v10:= v1[v6] @kind object;
  #L42699e.  call `<init>`(v7, v10, v8, v9, v3) @signature `Ln/c/a/y/c$a;.<init>:(Ljava/lang/String;[Ljava/lang/String;[SLjava/util/concurrent/atomic/AtomicReferenceArray;)V` @kind direct;
  #L4269a4.  call temp:= `add`(v5, v7) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4269aa.  v6:= v6 + 1;
  #L4269ae.  goto L42695a;
  #L4269b0.  return v5 @kind object;
  #L4269b2.  v13:= new `java.io.StreamCorruptedException`;
  #L4269b6.  call `<init>`(v13, v1) @signature `Ljava/io/StreamCorruptedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4269bc.  throw v13;
  #L4269be.  v13:= new `java.io.StreamCorruptedException`;
  #L4269c2.  call `<init>`(v13, v1) @signature `Ljava/io/StreamCorruptedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4269c8.  throw v13;
}
procedure `java.util.Set` `a`(`n.c.a.y.c` v2 @kind this) @signature `Ln/c/a/y/c;.a:()Ljava/util/Set;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L4269f4.  v0:= new `java.util.HashSet`;
  #L4269f8.  v1:= v2.`n.c.a.y.c.c` @type ^`java.util.List` @kind object;
  #L4269fc.  call `<init>`(v0, v1) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L426a02.  return v0 @kind object;
}
procedure `n.c.a.y.f` `a`(`n.c.a.y.c` v2 @kind this, `java.lang.String` v3 @kind object, `boolean` v4 ) @signature `Ln/c/a/y/c;.a:(Ljava/lang/String;Z)Ln/c/a/y/f;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L426a14.  v4:= "zoneId" @kind object;
  #L426a18.  call temp:= `a`(v3, v4) @signature `Ln/c/a/w/d;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L426a1e.  v4:= v2.`n.c.a.y.c.d` @type ^`java.util.concurrent.ConcurrentNavigableMap` @kind object;
  #L426a22.  call temp:= `lastEntry`(v4) @signature `Ljava/util/concurrent/ConcurrentNavigableMap;.lastEntry:()Ljava/util/Map$Entry;` @kind interface;
  #L426a28.  v4:= temp @kind object;
  #L426a2a.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L426a30.  v4:= temp @kind object;
  #L426a32.  v4:= (`n.c.a.y.c$a`) v4 @kind object;
  #L426a36.  call temp:= `a`(v4, v3) @signature `Ln/c/a/y/c$a;.a:(Ljava/lang/String;)Ln/c/a/y/f;` @kind virtual;
  #L426a3c.  v4:= temp @kind object;
  #L426a3e.  if v4 == 0 then goto L426a44;
  #L426a42.  return v4 @kind object;
  #L426a44.  v4:= new `n.c.a.y.g`;
  #L426a48.  v0:= new `java.lang.StringBuilder`;
  #L426a4c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L426a52.  v1:= "Unknown time-zone ID: " @kind object;
  #L426a56.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L426a5c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L426a62.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L426a68.  v3:= temp @kind object;
  #L426a6a.  call `<init>`(v4, v3) @signature `Ln/c/a/y/g;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L426a70.  throw v4;
}
procedure `java.lang.String` `toString`(`n.c.a.y.c` v1 @kind this) @signature `Ln/c/a/y/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4269dc.  v0:= "TZDB" @kind object;
  #L4269e0.  return v0 @kind object;
}
