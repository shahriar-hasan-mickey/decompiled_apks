record `n.c.a.y.b` @kind class @AccessFlag FINAL extends `n.c.a.y.f` @kind class, `java.io.Serializable` @kind interface {
  `long`[] `n.c.a.y.b.b` @AccessFlag PRIVATE_FINAL;
  `n.c.a.r`[] `n.c.a.y.b.c` @AccessFlag PRIVATE_FINAL;
  `long`[] `n.c.a.y.b.d` @AccessFlag PRIVATE_FINAL;
  `n.c.a.g`[] `n.c.a.y.b.e` @AccessFlag PRIVATE_FINAL;
  `n.c.a.r`[] `n.c.a.y.b.f` @AccessFlag PRIVATE_FINAL;
  `n.c.a.y.e`[] `n.c.a.y.b.g` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ConcurrentMap` `n.c.a.y.b.h` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`n.c.a.y.b` v5 @kind this, `long`[] v6 @kind object, `n.c.a.r`[] v7 @kind object, `long`[] v8 @kind object, `n.c.a.r`[] v9 @kind object, `n.c.a.y.e`[] v10 @kind object) @signature `Ln/c/a/y/b;.<init>:([J[Ln/c/a/r;[J[Ln/c/a/r;[Ln/c/a/y/e;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L426518.  call `<init>`(v5) @signature `Ln/c/a/y/f;.<init>:()V` @kind direct;
  #L42651e.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L426522.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L426528.  v5.`n.c.a.y.b.h` @type ^`java.util.concurrent.ConcurrentMap` := v0 @kind object;
  #L42652c.  v5.`n.c.a.y.b.b` @type ^`long`[] := v6 @kind object;
  #L426530.  v5.`n.c.a.y.b.c` @type ^`n.c.a.r`[] := v7 @kind object;
  #L426534.  v5.`n.c.a.y.b.d` @type ^`long`[] := v8 @kind object;
  #L426538.  v5.`n.c.a.y.b.f` @type ^`n.c.a.r`[] := v9 @kind object;
  #L42653c.  v5.`n.c.a.y.b.g` @type ^`n.c.a.y.e`[] := v10 @kind object;
  #L426540.  v6:= new `java.util.ArrayList`;
  #L426544.  call `<init>`(v6) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L42654a.  v7:= 0I;
  #L42654c.  v10:= length @variable v8;
  #L42654e.  if v7 >= v10 then goto L4265b0;
  #L426552.  v10:= v9[v7] @kind object;
  #L426556.  v0:= v7 + 1;
  #L42655a.  v1:= v9[v0] @kind object;
  #L42655e.  v2:= new `n.c.a.y.d`;
  #L426562.  v3:= v8[v7] @kind wide;
  #L426566.  call `<init>`(v2, v3, v10, v1) @signature `Ln/c/a/y/d;.<init>:(JLn/c/a/r;Ln/c/a/r;)V` @kind direct;
  #L42656c.  call temp:= `o`(v2) @signature `Ln/c/a/y/d;.o:()Z` @kind virtual;
  #L426572.  v7:= temp;
  #L426574.  if v7 == 0 then goto L426590;
  #L426578.  call temp:= `e`(v2) @signature `Ln/c/a/y/d;.e:()Ln/c/a/g;` @kind virtual;
  #L42657e.  v7:= temp @kind object;
  #L426580.  call temp:= `add`(v6, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L426586.  call temp:= `b`(v2) @signature `Ln/c/a/y/d;.b:()Ln/c/a/g;` @kind virtual;
  #L42658c.  v7:= temp @kind object;
  #L42658e.  goto L4265a6;
  #L426590.  call temp:= `b`(v2) @signature `Ln/c/a/y/d;.b:()Ln/c/a/g;` @kind virtual;
  #L426596.  v7:= temp @kind object;
  #L426598.  call temp:= `add`(v6, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L42659e.  call temp:= `e`(v2) @signature `Ln/c/a/y/d;.e:()Ln/c/a/g;` @kind virtual;
  #L4265a4.  v7:= temp @kind object;
  #L4265a6.  call temp:= `add`(v6, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4265ac.  v7:= v0;
  #L4265ae.  goto L42654c;
  #L4265b0.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4265b6.  v7:= temp;
  #L4265b8.  v7:= new `n.c.a.g`[v7];
  #L4265bc.  call temp:= `toArray`(v6, v7) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L4265c2.  v6:= temp @kind object;
  #L4265c4.  v6:= (`n.c.a.g`[]) v6 @kind object;
  #L4265c8.  v5.`n.c.a.y.b.e` @type ^`n.c.a.g`[] := v6 @kind object;
  #L4265cc.  return @kind void;
}
procedure `int` `a`(`n.c.a.y.b` v2 @kind this, `long` v3 , `n.c.a.r` v5 @kind object) @signature `Ln/c/a/y/b;.a:(JLn/c/a/r;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L425ff8.  call temp:= `k`(v5) @signature `Ln/c/a/r;.k:()I` @kind virtual;
  #L425ffe.  v5:= temp;
  #L426000.  v0:= (`long`) v5 @kind i2l;
  #L426002.  v3:= v3 + v0 @kind long;
  #L426004.  v0:= 86400L;
  #L42600a.  call temp:= `b`(v3, v0) @signature `Ln/c/a/w/d;.b:(JJ)J` @kind static;
  #L426010.  v3:= temp @kind wide;
  #L426012.  call temp:= `g`(v3) @signature `Ln/c/a/f;.g:(J)Ln/c/a/f;` @kind static;
  #L426018.  v3:= temp @kind object;
  #L42601a.  call temp:= `x`(v3) @signature `Ln/c/a/f;.x:()I` @kind virtual;
  #L426020.  v3:= temp;
  #L426022.  return v3;
}
procedure `java.lang.Object` `a`(`n.c.a.y.b` v2 @kind this, `n.c.a.g` v3 @kind object, `n.c.a.y.d` v4 @kind object) @signature `Ln/c/a/y/b;.a:(Ln/c/a/g;Ln/c/a/y/d;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L42608c.  call temp:= `e`(v4) @signature `Ln/c/a/y/d;.e:()Ln/c/a/g;` @kind virtual;
  #L426092.  v0:= temp @kind object;
  #L426094.  call temp:= `o`(v4) @signature `Ln/c/a/y/d;.o:()Z` @kind virtual;
  #L42609a.  v1:= temp;
  #L42609c.  call temp:= `c`(v3, v0) @signature `Ln/c/a/g;.c:(Ln/c/a/u/c;)Z` @kind virtual;
  #L4260a2.  v0:= temp;
  #L4260a4.  if v1 == 0 then goto L4260d6;
  #L4260a8.  if v0 == 0 then goto L4260b6;
  #L4260ac.  call temp:= `m`(v4) @signature `Ln/c/a/y/d;.m:()Ln/c/a/r;` @kind virtual;
  #L4260b2.  v3:= temp @kind object;
  #L4260b4.  return v3 @kind object;
  #L4260b6.  call temp:= `b`(v4) @signature `Ln/c/a/y/d;.b:()Ln/c/a/g;` @kind virtual;
  #L4260bc.  v0:= temp @kind object;
  #L4260be.  call temp:= `c`(v3, v0) @signature `Ln/c/a/g;.c:(Ln/c/a/u/c;)Z` @kind virtual;
  #L4260c4.  v3:= temp;
  #L4260c6.  if v3 == 0 then goto L4260cc;
  #L4260ca.  return v4 @kind object;
  #L4260cc.  call temp:= `l`(v4) @signature `Ln/c/a/y/d;.l:()Ln/c/a/r;` @kind virtual;
  #L4260d2.  v3:= temp @kind object;
  #L4260d4.  return v3 @kind object;
  #L4260d6.  if v0 != 0 then goto L4260e4;
  #L4260da.  call temp:= `l`(v4) @signature `Ln/c/a/y/d;.l:()Ln/c/a/r;` @kind virtual;
  #L4260e0.  v3:= temp @kind object;
  #L4260e2.  return v3 @kind object;
  #L4260e4.  call temp:= `b`(v4) @signature `Ln/c/a/y/d;.b:()Ln/c/a/g;` @kind virtual;
  #L4260ea.  v0:= temp @kind object;
  #L4260ec.  call temp:= `c`(v3, v0) @signature `Ln/c/a/g;.c:(Ln/c/a/u/c;)Z` @kind virtual;
  #L4260f2.  v3:= temp;
  #L4260f4.  if v3 == 0 then goto L426102;
  #L4260f8.  call temp:= `m`(v4) @signature `Ln/c/a/y/d;.m:()Ln/c/a/r;` @kind virtual;
  #L4260fe.  v3:= temp @kind object;
  #L426100.  return v3 @kind object;
  #L426102.  return v4 @kind object;
}
procedure `n.c.a.y.b` `a`(`java.io.DataInput` v8 @kind object) @signature `Ln/c/a/y/b;.a:(Ljava/io/DataInput;)Ln/c/a/y/b;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L4263b0.  call temp:= `readInt`(v8) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L4263b6.  v0:= temp;
  #L4263b8.  v2:= new `long`[v0];
  #L4263bc.  v1:= 0I;
  #L4263be.  v3:= 0I;
  #L4263c0.  if v3 >= v0 then goto L4263d6;
  #L4263c4.  call temp:= `b`(v8) @signature `Ln/c/a/y/a;.b:(Ljava/io/DataInput;)J` @kind static;
  #L4263ca.  v4:= temp @kind wide;
  #L4263cc.  v2[v3]:= v4 @kind wide;
  #L4263d0.  v3:= v3 + 1;
  #L4263d4.  goto L4263c0;
  #L4263d6.  v0:= v0 + 1;
  #L4263da.  v3:= new `n.c.a.r`[v0];
  #L4263de.  v0:= 0I;
  #L4263e0.  v4:= length @variable v3;
  #L4263e2.  if v0 >= v4 then goto L4263f8;
  #L4263e6.  call temp:= `c`(v8) @signature `Ln/c/a/y/a;.c:(Ljava/io/DataInput;)Ln/c/a/r;` @kind static;
  #L4263ec.  v4:= temp @kind object;
  #L4263ee.  v3[v0]:= v4 @kind object;
  #L4263f2.  v0:= v0 + 1;
  #L4263f6.  goto L4263e0;
  #L4263f8.  call temp:= `readInt`(v8) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L4263fe.  v0:= temp;
  #L426400.  v4:= new `long`[v0];
  #L426404.  v5:= 0I;
  #L426406.  if v5 >= v0 then goto L42641c;
  #L42640a.  call temp:= `b`(v8) @signature `Ln/c/a/y/a;.b:(Ljava/io/DataInput;)J` @kind static;
  #L426410.  v6:= temp @kind wide;
  #L426412.  v4[v5]:= v6 @kind wide;
  #L426416.  v5:= v5 + 1;
  #L42641a.  goto L426406;
  #L42641c.  v0:= v0 + 1;
  #L426420.  v5:= new `n.c.a.r`[v0];
  #L426424.  v0:= 0I;
  #L426426.  v6:= length @variable v5;
  #L426428.  if v0 >= v6 then goto L42643e;
  #L42642c.  call temp:= `c`(v8) @signature `Ln/c/a/y/a;.c:(Ljava/io/DataInput;)Ln/c/a/r;` @kind static;
  #L426432.  v6:= temp @kind object;
  #L426434.  v5[v0]:= v6 @kind object;
  #L426438.  v0:= v0 + 1;
  #L42643c.  goto L426426;
  #L42643e.  call temp:= `readByte`(v8) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L426444.  v0:= temp;
  #L426446.  v6:= new `n.c.a.y.e`[v0];
  #L42644a.  if v1 >= v0 then goto L426460;
  #L42644e.  call temp:= `a`(v8) @signature `Ln/c/a/y/e;.a:(Ljava/io/DataInput;)Ln/c/a/y/e;` @kind static;
  #L426454.  v7:= temp @kind object;
  #L426456.  v6[v1]:= v7 @kind object;
  #L42645a.  v1:= v1 + 1;
  #L42645e.  goto L42644a;
  #L426460.  v8:= new `n.c.a.y.b`;
  #L426464.  v1:= v8 @kind object;
  #L426466.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Ln/c/a/y/b;.<init>:([J[Ln/c/a/r;[J[Ln/c/a/r;[Ln/c/a/y/e;)V` @kind direct;
  #L42646c.  return v8 @kind object;
}
procedure `n.c.a.y.d`[] `a`(`n.c.a.y.b` v5 @kind this, `int` v6 ) @signature `Ln/c/a/y/b;.a:(I)[Ln/c/a/y/d;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4264ac.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4264b2.  v0:= temp @kind object;
  #L4264b4.  v1:= v5.`n.c.a.y.b.h` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L4264b8.  call temp:= `get`(v1, v0) @signature `Ljava/util/concurrent/ConcurrentMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4264be.  v1:= temp @kind object;
  #L4264c0.  v1:= (`n.c.a.y.d`[]) v1 @kind object;
  #L4264c4.  if v1 == 0 then goto L4264ca;
  #L4264c8.  return v1 @kind object;
  #L4264ca.  v1:= v5.`n.c.a.y.b.g` @type ^`n.c.a.y.e`[] @kind object;
  #L4264ce.  v2:= length @variable v1;
  #L4264d0.  v2:= new `n.c.a.y.d`[v2];
  #L4264d4.  v3:= 0I;
  #L4264d6.  v4:= length @variable v1;
  #L4264d8.  if v3 >= v4 then goto L4264f2;
  #L4264dc.  v4:= v1[v3] @kind object;
  #L4264e0.  call temp:= `a`(v4, v6) @signature `Ln/c/a/y/e;.a:(I)Ln/c/a/y/d;` @kind virtual;
  #L4264e6.  v4:= temp @kind object;
  #L4264e8.  v2[v3]:= v4 @kind object;
  #L4264ec.  v3:= v3 + 1;
  #L4264f0.  goto L4264d6;
  #L4264f2.  v1:= 2100I;
  #L4264f6.  if v6 >= v1 then goto L426504;
  #L4264fa.  v6:= v5.`n.c.a.y.b.h` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L4264fe.  call temp:= `putIfAbsent`(v6, v0, v2) @signature `Ljava/util/concurrent/ConcurrentMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L426504.  return v2 @kind object;
}
procedure `java.lang.Object` `c`(`n.c.a.y.b` v6 @kind this, `n.c.a.g` v7 @kind object) @signature `Ln/c/a/y/b;.c:(Ln/c/a/g;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L426114.  v0:= v6.`n.c.a.y.b.g` @type ^`n.c.a.y.e`[] @kind object;
  #L426118.  v0:= length @variable v0;
  #L42611a.  v1:= 0I;
  #L42611c.  if v0 <= 0 then goto L426188;
  #L426120.  v0:= v6.`n.c.a.y.b.e` @type ^`n.c.a.g`[] @kind object;
  #L426124.  v2:= length @variable v0;
  #L426126.  v2:= v2 + -1;
  #L42612a.  v0:= v0[v2] @kind object;
  #L42612e.  call temp:= `b`(v7, v0) @signature `Ln/c/a/g;.b:(Ln/c/a/u/c;)Z` @kind virtual;
  #L426134.  v0:= temp;
  #L426136.  if v0 == 0 then goto L426188;
  #L42613a.  call temp:= `z`(v7) @signature `Ln/c/a/g;.z:()I` @kind virtual;
  #L426140.  v0:= temp;
  #L426142.  call temp:= `a`(v6, v0) @signature `Ln/c/a/y/b;.a:(I)[Ln/c/a/y/d;` @kind direct;
  #L426148.  v0:= temp @kind object;
  #L42614a.  v2:= 0I;
  #L42614c.  v3:= length @variable v0;
  #L42614e.  if v1 >= v3 then goto L426186;
  #L426152.  v2:= v0[v1] @kind object;
  #L426156.  call temp:= `a`(v6, v7, v2) @signature `Ln/c/a/y/b;.a:(Ln/c/a/g;Ln/c/a/y/d;)Ljava/lang/Object;` @kind direct;
  #L42615c.  v4:= temp @kind object;
  #L42615e.  v5:= instanceof @variable v4 @type ^`n.c.a.y.d` @kind boolean;
  #L426162.  if v5 != 0 then goto L426184;
  #L426166.  call temp:= `m`(v2) @signature `Ln/c/a/y/d;.m:()Ln/c/a/r;` @kind virtual;
  #L42616c.  v2:= temp @kind object;
  #L42616e.  call temp:= `equals`(v4, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L426174.  v2:= temp;
  #L426176.  if v2 == 0 then goto L42617c;
  #L42617a.  goto L426184;
  #L42617c.  v1:= v1 + 1;
  #L426180.  v2:= v4 @kind object;
  #L426182.  goto L42614e;
  #L426184.  return v4 @kind object;
  #L426186.  return v2 @kind object;
  #L426188.  v0:= v6.`n.c.a.y.b.e` @type ^`n.c.a.g`[] @kind object;
  #L42618c.  call temp:= `binarySearch`(v0, v7) @signature `Ljava/util/Arrays;.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I` @kind static;
  #L426192.  v7:= temp;
  #L426194.  v0:= -1I;
  #L426196.  if v7 != v0 then goto L4261a4;
  #L42619a.  v7:= v6.`n.c.a.y.b.f` @type ^`n.c.a.r`[] @kind object;
  #L42619e.  v7:= v7[v1] @kind object;
  #L4261a2.  return v7 @kind object;
  #L4261a4.  if v7 >= 0 then goto L4261b0;
  #L4261a8.  v7:= -v7 @kind int;
  #L4261aa.  v7:= v7 + -2;
  #L4261ae.  goto L4261d8;
  #L4261b0.  v0:= v6.`n.c.a.y.b.e` @type ^`n.c.a.g`[] @kind object;
  #L4261b4.  v1:= length @variable v0;
  #L4261b6.  v1:= v1 + -1;
  #L4261ba.  if v7 >= v1 then goto L4261d8;
  #L4261be.  v1:= v0[v7] @kind object;
  #L4261c2.  v2:= v7 + 1;
  #L4261c6.  v0:= v0[v2] @kind object;
  #L4261ca.  call temp:= `equals`(v1, v0) @signature `Ln/c/a/g;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4261d0.  v0:= temp;
  #L4261d2.  if v0 == 0 then goto L4261d8;
  #L4261d6.  v7:= v2;
  #L4261d8.  v0:= v7 ^& 1;
  #L4261dc.  if v0 != 0 then goto L426230;
  #L4261e0.  v0:= v6.`n.c.a.y.b.e` @type ^`n.c.a.g`[] @kind object;
  #L4261e4.  v1:= v0[v7] @kind object;
  #L4261e8.  v2:= v7 + 1;
  #L4261ec.  v0:= v0[v2] @kind object;
  #L4261f0.  v2:= v6.`n.c.a.y.b.f` @type ^`n.c.a.r`[] @kind object;
  #L4261f4.  v7:= v7 / 2;
  #L4261f8.  v3:= v2[v7] @kind object;
  #L4261fc.  v7:= v7 + 1;
  #L426200.  v7:= v2[v7] @kind object;
  #L426204.  call temp:= `k`(v7) @signature `Ln/c/a/r;.k:()I` @kind virtual;
  #L42620a.  v2:= temp;
  #L42620c.  call temp:= `k`(v3) @signature `Ln/c/a/r;.k:()I` @kind virtual;
  #L426212.  v4:= temp;
  #L426214.  if v2 <= v4 then goto L426224;
  #L426218.  v0:= new `n.c.a.y.d`;
  #L42621c.  call `<init>`(v0, v1, v3, v7) @signature `Ln/c/a/y/d;.<init>:(Ln/c/a/g;Ln/c/a/r;Ln/c/a/r;)V` @kind direct;
  #L426222.  return v0 @kind object;
  #L426224.  v1:= new `n.c.a.y.d`;
  #L426228.  call `<init>`(v1, v0, v3, v7) @signature `Ln/c/a/y/d;.<init>:(Ln/c/a/g;Ln/c/a/r;Ln/c/a/r;)V` @kind direct;
  #L42622e.  return v1 @kind object;
  #L426230.  v0:= v6.`n.c.a.y.b.f` @type ^`n.c.a.r`[] @kind object;
  #L426234.  v7:= v7 / 2;
  #L426238.  v7:= v7 + 1;
  #L42623c.  v7:= v0[v7] @kind object;
  #L426240.  return v7 @kind object;
}
procedure `java.lang.Object` `writeReplace`(`n.c.a.y.b` v2 @kind this) @signature `Ln/c/a/y/b;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L426254.  v0:= new `n.c.a.y.a`;
  #L426258.  v1:= 1I;
  #L42625a.  call `<init>`(v0, v1, v2) @signature `Ln/c/a/y/a;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L426260.  return v0 @kind object;
}
procedure `n.c.a.r` `a`(`n.c.a.y.b` v7 @kind this, `n.c.a.e` v8 @kind object) @signature `Ln/c/a/y/b;.a:(Ln/c/a/e;)Ln/c/a/r;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4262fc.  call temp:= `e`(v8) @signature `Ln/c/a/e;.e:()J` @kind virtual;
  #L426302.  v0:= temp @kind wide;
  #L426304.  v8:= v7.`n.c.a.y.b.g` @type ^`n.c.a.y.e`[] @kind object;
  #L426308.  v8:= length @variable v8;
  #L42630a.  if v8 <= 0 then goto L42637a;
  #L42630e.  v8:= v7.`n.c.a.y.b.d` @type ^`long`[] @kind object;
  #L426312.  v2:= length @variable v8;
  #L426314.  v2:= v2 + -1;
  #L426318.  v2:= v8[v2] @kind wide;
  #L42631c.  v8:= lcmp(v0, v2);
  #L426320.  if v8 <= 0 then goto L42637a;
  #L426324.  v8:= v7.`n.c.a.y.b.f` @type ^`n.c.a.r`[] @kind object;
  #L426328.  v2:= length @variable v8;
  #L42632a.  v2:= v2 + -1;
  #L42632e.  v8:= v8[v2] @kind object;
  #L426332.  call temp:= `a`(v7, v0, v8) @signature `Ln/c/a/y/b;.a:(JLn/c/a/r;)I` @kind direct;
  #L426338.  v8:= temp;
  #L42633a.  call temp:= `a`(v7, v8) @signature `Ln/c/a/y/b;.a:(I)[Ln/c/a/y/d;` @kind direct;
  #L426340.  v8:= temp @kind object;
  #L426342.  v2:= 0I;
  #L426344.  v3:= 0I;
  #L426346.  v4:= length @variable v8;
  #L426348.  if v3 >= v4 then goto L426370;
  #L42634c.  v2:= v8[v3] @kind object;
  #L426350.  call temp:= `p`(v2) @signature `Ln/c/a/y/d;.p:()J` @kind virtual;
  #L426356.  v4:= temp @kind wide;
  #L426358.  v6:= lcmp(v0, v4);
  #L42635c.  if v6 >= 0 then goto L42636a;
  #L426360.  call temp:= `m`(v2) @signature `Ln/c/a/y/d;.m:()Ln/c/a/r;` @kind virtual;
  #L426366.  v8:= temp @kind object;
  #L426368.  return v8 @kind object;
  #L42636a.  v3:= v3 + 1;
  #L42636e.  goto L426346;
  #L426370.  call temp:= `l`(v2) @signature `Ln/c/a/y/d;.l:()Ln/c/a/r;` @kind virtual;
  #L426376.  v8:= temp @kind object;
  #L426378.  return v8 @kind object;
  #L42637a.  v8:= v7.`n.c.a.y.b.d` @type ^`long`[] @kind object;
  #L42637e.  call temp:= `binarySearch`(v8, v0) @signature `Ljava/util/Arrays;.binarySearch:([JJ)I` @kind static;
  #L426384.  v8:= temp;
  #L426386.  if v8 >= 0 then goto L426390;
  #L42638a.  v8:= -v8 @kind int;
  #L42638c.  v8:= v8 + -2;
  #L426390.  v0:= v7.`n.c.a.y.b.f` @type ^`n.c.a.r`[] @kind object;
  #L426394.  v8:= v8 + 1;
  #L426398.  v8:= v0[v8] @kind object;
  #L42639c.  return v8 @kind object;
}
procedure `n.c.a.y.d` `a`(`n.c.a.y.b` v1 @kind this, `n.c.a.g` v2 @kind object) @signature `Ln/c/a/y/b;.a:(Ln/c/a/g;)Ln/c/a/y/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L426480.  call temp:= `c`(v1, v2) @signature `Ln/c/a/y/b;.c:(Ln/c/a/g;)Ljava/lang/Object;` @kind direct;
  #L426486.  v2:= temp @kind object;
  #L426488.  v0:= instanceof @variable v2 @type ^`n.c.a.y.d` @kind boolean;
  #L42648c.  if v0 == 0 then goto L426496;
  #L426490.  v2:= (`n.c.a.y.d`) v2 @kind object;
  #L426494.  goto L426498;
  #L426496.  v2:= 0I;
  #L426498.  return v2 @kind object;
}
procedure `void` `a`(`n.c.a.y.b` v6 @kind this, `java.io.DataOutput` v7 @kind object) @signature `Ln/c/a/y/b;.a:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4265e0.  v0:= v6.`n.c.a.y.b.b` @type ^`long`[] @kind object;
  #L4265e4.  v0:= length @variable v0;
  #L4265e6.  call `writeInt`(v7, v0) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L4265ec.  v0:= v6.`n.c.a.y.b.b` @type ^`long`[] @kind object;
  #L4265f0.  v1:= length @variable v0;
  #L4265f2.  v2:= 0I;
  #L4265f4.  v3:= 0I;
  #L4265f6.  if v3 >= v1 then goto L42660a;
  #L4265fa.  v4:= v0[v3] @kind wide;
  #L4265fe.  call `a`(v4, v7) @signature `Ln/c/a/y/a;.a:(JLjava/io/DataOutput;)V` @kind static;
  #L426604.  v3:= v3 + 1;
  #L426608.  goto L4265f6;
  #L42660a.  v0:= v6.`n.c.a.y.b.c` @type ^`n.c.a.r`[] @kind object;
  #L42660e.  v1:= length @variable v0;
  #L426610.  v3:= 0I;
  #L426612.  if v3 >= v1 then goto L426626;
  #L426616.  v4:= v0[v3] @kind object;
  #L42661a.  call `a`(v4, v7) @signature `Ln/c/a/y/a;.a:(Ln/c/a/r;Ljava/io/DataOutput;)V` @kind static;
  #L426620.  v3:= v3 + 1;
  #L426624.  goto L426612;
  #L426626.  v0:= v6.`n.c.a.y.b.d` @type ^`long`[] @kind object;
  #L42662a.  v0:= length @variable v0;
  #L42662c.  call `writeInt`(v7, v0) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L426632.  v0:= v6.`n.c.a.y.b.d` @type ^`long`[] @kind object;
  #L426636.  v1:= length @variable v0;
  #L426638.  v3:= 0I;
  #L42663a.  if v3 >= v1 then goto L42664e;
  #L42663e.  v4:= v0[v3] @kind wide;
  #L426642.  call `a`(v4, v7) @signature `Ln/c/a/y/a;.a:(JLjava/io/DataOutput;)V` @kind static;
  #L426648.  v3:= v3 + 1;
  #L42664c.  goto L42663a;
  #L42664e.  v0:= v6.`n.c.a.y.b.f` @type ^`n.c.a.r`[] @kind object;
  #L426652.  v1:= length @variable v0;
  #L426654.  v3:= 0I;
  #L426656.  if v3 >= v1 then goto L42666a;
  #L42665a.  v4:= v0[v3] @kind object;
  #L42665e.  call `a`(v4, v7) @signature `Ln/c/a/y/a;.a:(Ln/c/a/r;Ljava/io/DataOutput;)V` @kind static;
  #L426664.  v3:= v3 + 1;
  #L426668.  goto L426656;
  #L42666a.  v0:= v6.`n.c.a.y.b.g` @type ^`n.c.a.y.e`[] @kind object;
  #L42666e.  v0:= length @variable v0;
  #L426670.  call `writeByte`(v7, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L426676.  v0:= v6.`n.c.a.y.b.g` @type ^`n.c.a.y.e`[] @kind object;
  #L42667a.  v1:= length @variable v0;
  #L42667c.  if v2 >= v1 then goto L426690;
  #L426680.  v3:= v0[v2] @kind object;
  #L426684.  call `a`(v3, v7) @signature `Ln/c/a/y/e;.a:(Ljava/io/DataOutput;)V` @kind virtual;
  #L42668a.  v2:= v2 + 1;
  #L42668e.  goto L42667c;
  #L426690.  return @kind void;
}
procedure `boolean` `a`(`n.c.a.y.b` v1 @kind this) @signature `Ln/c/a/y/b;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L425fb0.  v0:= v1.`n.c.a.y.b.d` @type ^`long`[] @kind object;
  #L425fb4.  v0:= length @variable v0;
  #L425fb6.  if v0 != 0 then goto L425fbe;
  #L425fba.  v0:= 1I;
  #L425fbc.  goto L425fc0;
  #L425fbe.  v0:= 0I;
  #L425fc0.  return v0;
}
procedure `boolean` `a`(`n.c.a.y.b` v0 @kind this, `n.c.a.g` v1 @kind object, `n.c.a.r` v2 @kind object) @signature `Ln/c/a/y/b;.a:(Ln/c/a/g;Ln/c/a/r;)Z` @AccessFlag PUBLIC {
    temp;

  #L425fd4.  call temp:= `b`(v0, v1) @signature `Ln/c/a/y/b;.b:(Ln/c/a/g;)Ljava/util/List;` @kind virtual;
  #L425fda.  v1:= temp @kind object;
  #L425fdc.  call temp:= `contains`(v1, v2) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L425fe2.  v1:= temp;
  #L425fe4.  return v1;
}
procedure `java.util.List` `b`(`n.c.a.y.b` v1 @kind this, `n.c.a.g` v2 @kind object) @signature `Ln/c/a/y/b;.b:(Ln/c/a/g;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4262c0.  call temp:= `c`(v1, v2) @signature `Ln/c/a/y/b;.c:(Ln/c/a/g;)Ljava/lang/Object;` @kind direct;
  #L4262c6.  v2:= temp @kind object;
  #L4262c8.  v0:= instanceof @variable v2 @type ^`n.c.a.y.d` @kind boolean;
  #L4262cc.  if v0 == 0 then goto L4262de;
  #L4262d0.  v2:= (`n.c.a.y.d`) v2 @kind object;
  #L4262d4.  call temp:= `n`(v2) @signature `Ln/c/a/y/d;.n:()Ljava/util/List;` @kind virtual;
  #L4262da.  v2:= temp @kind object;
  #L4262dc.  return v2 @kind object;
  #L4262de.  v2:= (`n.c.a.r`) v2 @kind object;
  #L4262e2.  call temp:= `singletonList`(v2) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L4262e8.  v2:= temp @kind object;
  #L4262ea.  return v2 @kind object;
}
procedure `boolean` `equals`(`n.c.a.y.b` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Ln/c/a/y/b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L425edc.  v0:= 1I;
  #L425ede.  if v4 != v5 then goto L425ee4;
  #L425ee2.  return v0;
  #L425ee4.  v1:= instanceof @variable v5 @type ^`n.c.a.y.b` @kind boolean;
  #L425ee8.  v2:= 0I;
  #L425eea.  if v1 == 0 then goto L425f5c;
  #L425eee.  v5:= (`n.c.a.y.b`) v5 @kind object;
  #L425ef2.  v1:= v4.`n.c.a.y.b.b` @type ^`long`[] @kind object;
  #L425ef6.  v3:= v5.`n.c.a.y.b.b` @type ^`long`[] @kind object;
  #L425efa.  call temp:= `equals`(v1, v3) @signature `Ljava/util/Arrays;.equals:([J[J)Z` @kind static;
  #L425f00.  v1:= temp;
  #L425f02.  if v1 == 0 then goto L425f58;
  #L425f06.  v1:= v4.`n.c.a.y.b.c` @type ^`n.c.a.r`[] @kind object;
  #L425f0a.  v3:= v5.`n.c.a.y.b.c` @type ^`n.c.a.r`[] @kind object;
  #L425f0e.  call temp:= `equals`(v1, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L425f14.  v1:= temp;
  #L425f16.  if v1 == 0 then goto L425f58;
  #L425f1a.  v1:= v4.`n.c.a.y.b.d` @type ^`long`[] @kind object;
  #L425f1e.  v3:= v5.`n.c.a.y.b.d` @type ^`long`[] @kind object;
  #L425f22.  call temp:= `equals`(v1, v3) @signature `Ljava/util/Arrays;.equals:([J[J)Z` @kind static;
  #L425f28.  v1:= temp;
  #L425f2a.  if v1 == 0 then goto L425f58;
  #L425f2e.  v1:= v4.`n.c.a.y.b.f` @type ^`n.c.a.r`[] @kind object;
  #L425f32.  v3:= v5.`n.c.a.y.b.f` @type ^`n.c.a.r`[] @kind object;
  #L425f36.  call temp:= `equals`(v1, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L425f3c.  v1:= temp;
  #L425f3e.  if v1 == 0 then goto L425f58;
  #L425f42.  v1:= v4.`n.c.a.y.b.g` @type ^`n.c.a.y.e`[] @kind object;
  #L425f46.  v5:= v5.`n.c.a.y.b.g` @type ^`n.c.a.y.e`[] @kind object;
  #L425f4a.  call temp:= `equals`(v1, v5) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L425f50.  v5:= temp;
  #L425f52.  if v5 == 0 then goto L425f58;
  #L425f56.  goto L425f5a;
  #L425f58.  v0:= 0I;
  #L425f5a.  return v0;
  #L425f5c.  v1:= instanceof @variable v5 @type ^`n.c.a.y.f$a` @kind boolean;
  #L425f60.  if v1 == 0 then goto L425f9e;
  #L425f64.  call temp:= `a`(v4) @signature `Ln/c/a/y/b;.a:()Z` @kind virtual;
  #L425f6a.  v1:= temp;
  #L425f6c.  if v1 == 0 then goto L425f9a;
  #L425f70.  v1:= `@@n.c.a.e.d` @type ^`n.c.a.e` @kind object;
  #L425f74.  call temp:= `a`(v4, v1) @signature `Ln/c/a/y/b;.a:(Ln/c/a/e;)Ln/c/a/r;` @kind virtual;
  #L425f7a.  v1:= temp @kind object;
  #L425f7c.  v5:= (`n.c.a.y.f$a`) v5 @kind object;
  #L425f80.  v3:= `@@n.c.a.e.d` @type ^`n.c.a.e` @kind object;
  #L425f84.  call temp:= `a`(v5, v3) @signature `Ln/c/a/y/f$a;.a:(Ln/c/a/e;)Ln/c/a/r;` @kind virtual;
  #L425f8a.  v5:= temp @kind object;
  #L425f8c.  call temp:= `equals`(v1, v5) @signature `Ln/c/a/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L425f92.  v5:= temp;
  #L425f94.  if v5 == 0 then goto L425f9a;
  #L425f98.  goto L425f9c;
  #L425f9a.  v0:= 0I;
  #L425f9c.  return v0;
  #L425f9e.  return v2;
}
procedure `int` `hashCode`(`n.c.a.y.b` v2 @kind this) @signature `Ln/c/a/y/b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L426034.  v0:= v2.`n.c.a.y.b.b` @type ^`long`[] @kind object;
  #L426038.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([J)I` @kind static;
  #L42603e.  v0:= temp;
  #L426040.  v1:= v2.`n.c.a.y.b.c` @type ^`n.c.a.r`[] @kind object;
  #L426044.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L42604a.  v1:= temp;
  #L42604c.  v0:= v0 ^~ v1 @kind int;
  #L42604e.  v1:= v2.`n.c.a.y.b.d` @type ^`long`[] @kind object;
  #L426052.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([J)I` @kind static;
  #L426058.  v1:= temp;
  #L42605a.  v0:= v0 ^~ v1 @kind int;
  #L42605c.  v1:= v2.`n.c.a.y.b.f` @type ^`n.c.a.r`[] @kind object;
  #L426060.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L426066.  v1:= temp;
  #L426068.  v0:= v0 ^~ v1 @kind int;
  #L42606a.  v1:= v2.`n.c.a.y.b.g` @type ^`n.c.a.y.e`[] @kind object;
  #L42606e.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L426074.  v1:= temp;
  #L426076.  v0:= v0 ^~ v1 @kind int;
  #L426078.  return v0;
}
procedure `java.lang.String` `toString`(`n.c.a.y.b` v3 @kind this) @signature `Ln/c/a/y/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L426274.  v0:= new `java.lang.StringBuilder`;
  #L426278.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42627e.  v1:= "StandardZoneRules[currentStandardOffset=" @kind object;
  #L426282.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L426288.  v1:= v3.`n.c.a.y.b.c` @type ^`n.c.a.r`[] @kind object;
  #L42628c.  v2:= length @variable v1;
  #L42628e.  v2:= v2 + -1;
  #L426292.  v1:= v1[v2] @kind object;
  #L426296.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42629c.  v1:= "]" @kind object;
  #L4262a0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4262a6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4262ac.  v0:= temp @kind object;
  #L4262ae.  return v0 @kind object;
}
