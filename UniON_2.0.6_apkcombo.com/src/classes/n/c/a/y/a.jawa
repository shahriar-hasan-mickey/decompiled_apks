record `n.c.a.y.a` @kind class @AccessFlag FINAL extends `java.io.Externalizable` @kind interface {
  `byte` `n.c.a.y.a.b` @AccessFlag PRIVATE;
  `java.lang.Object` `n.c.a.y.a.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`n.c.a.y.a` v0 @kind this) @signature `Ln/c/a/y/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L425d28.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L425d2e.  return @kind void;
}
procedure `void` `<init>`(`n.c.a.y.a` v0 @kind this, `byte` v1 , `java.lang.Object` v2 @kind object) @signature `Ln/c/a/y/a;.<init>:(BLjava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L425d40.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L425d46.  v0.`n.c.a.y.a.b` @type ^`byte` := v1 @kind byte;
  #L425d4a.  v0.`n.c.a.y.a.c` @type ^`java.lang.Object` := v2 @kind object;
  #L425d4e.  return @kind void;
}
procedure `java.lang.Object` `a`(`byte` v1 , `java.io.DataInput` v2 @kind object) @signature `Ln/c/a/y/a;.a:(BLjava/io/DataInput;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L425c1c.  v0:= 1I;
  #L425c1e.  if v1 == v0 then goto L425c52;
  #L425c22.  v0:= 2I;
  #L425c24.  if v1 == v0 then goto L425c48;
  #L425c28.  v0:= 3I;
  #L425c2a.  if v1 != v0 then goto L425c38;
  #L425c2e.  call temp:= `a`(v2) @signature `Ln/c/a/y/e;.a:(Ljava/io/DataInput;)Ln/c/a/y/e;` @kind static;
  #L425c34.  v1:= temp @kind object;
  #L425c36.  return v1 @kind object;
  #L425c38.  v1:= new `java.io.StreamCorruptedException`;
  #L425c3c.  v2:= "Unknown serialized type" @kind object;
  #L425c40.  call `<init>`(v1, v2) @signature `Ljava/io/StreamCorruptedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L425c46.  throw v1;
  #L425c48.  call temp:= `a`(v2) @signature `Ln/c/a/y/d;.a:(Ljava/io/DataInput;)Ln/c/a/y/d;` @kind static;
  #L425c4e.  v1:= temp @kind object;
  #L425c50.  return v1 @kind object;
  #L425c52.  call temp:= `a`(v2) @signature `Ln/c/a/y/b;.a:(Ljava/io/DataInput;)Ln/c/a/y/b;` @kind static;
  #L425c58.  v1:= temp @kind object;
  #L425c5a.  return v1 @kind object;
}
procedure `java.lang.Object` `a`(`java.io.DataInput` v1 @kind object) @signature `Ln/c/a/y/a;.a:(Ljava/io/DataInput;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;

  #L425bf8.  call temp:= `readByte`(v1) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L425bfe.  v0:= temp;
  #L425c00.  call temp:= `a`(v0, v1) @signature `Ln/c/a/y/a;.a:(BLjava/io/DataInput;)Ljava/lang/Object;` @kind static;
  #L425c06.  v1:= temp @kind object;
  #L425c08.  return v1 @kind object;
}
procedure `void` `a`(`byte` v1 , `java.lang.Object` v2 @kind object, `java.io.DataOutput` v3 @kind object) @signature `Ln/c/a/y/a;.a:(BLjava/lang/Object;Ljava/io/DataOutput;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L425e40.  call `writeByte`(v3, v1) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L425e46.  v0:= 1I;
  #L425e48.  if v1 == v0 then goto L425e80;
  #L425e4c.  v0:= 2I;
  #L425e4e.  if v1 == v0 then goto L425e74;
  #L425e52.  v0:= 3I;
  #L425e54.  if v1 != v0 then goto L425e64;
  #L425e58.  v2:= (`n.c.a.y.e`) v2 @kind object;
  #L425e5c.  call `a`(v2, v3) @signature `Ln/c/a/y/e;.a:(Ljava/io/DataOutput;)V` @kind virtual;
  #L425e62.  goto L425e8a;
  #L425e64.  v1:= new `java.io.InvalidClassException`;
  #L425e68.  v2:= "Unknown serialized type" @kind object;
  #L425e6c.  call `<init>`(v1, v2) @signature `Ljava/io/InvalidClassException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L425e72.  throw v1;
  #L425e74.  v2:= (`n.c.a.y.d`) v2 @kind object;
  #L425e78.  call `a`(v2, v3) @signature `Ln/c/a/y/d;.a:(Ljava/io/DataOutput;)V` @kind virtual;
  #L425e7e.  goto L425e8a;
  #L425e80.  v2:= (`n.c.a.y.b`) v2 @kind object;
  #L425e84.  call `a`(v2, v3) @signature `Ln/c/a/y/b;.a:(Ljava/io/DataOutput;)V` @kind virtual;
  #L425e8a.  return @kind void;
}
procedure `void` `a`(`long` v8 , `java.io.DataOutput` v10 @kind object) @signature `Ln/c/a/y/a;.a:(JLjava/io/DataOutput;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L425d90.  v0:= 255I;
  #L425d94.  v1:= -4575744000L;
  #L425d9e.  v3:= lcmp(v8, v1);
  #L425da2.  if v3 < 0 then goto L425e00;
  #L425da6.  v1:= 10413792000L;
  #L425db0.  v3:= lcmp(v8, v1);
  #L425db4.  if v3 >= 0 then goto L425e00;
  #L425db8.  v1:= 900L;
  #L425dbc.  v3:= v8 %% v1 @kind long;
  #L425dc0.  v5:= 0L;
  #L425dc4.  v7:= lcmp(v3, v5);
  #L425dc8.  if v7 != 0 then goto L425e00;
  #L425dcc.  v3:= 4575744000L;
  #L425dd6.  v8:= v8 + v3 @kind long;
  #L425dd8.  v8:= v8 / v1 @kind long;
  #L425dda.  v9:= (`int`) v8 @kind l2i;
  #L425ddc.  v8:= v9 ^>> 16;
  #L425de0.  v8:= v8 ^& v0 @kind int;
  #L425de2.  call `writeByte`(v10, v8) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L425de8.  v8:= v9 ^>> 8;
  #L425dec.  v8:= v8 ^& v0 @kind int;
  #L425dee.  call `writeByte`(v10, v8) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L425df4.  v8:= v9 ^& 255;
  #L425df8.  call `writeByte`(v10, v8) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L425dfe.  goto L425e0c;
  #L425e00.  call `writeByte`(v10, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L425e06.  call `writeLong`(v10, v8) @signature `Ljava/io/DataOutput;.writeLong:(J)V` @kind interface;
  #L425e0c.  return @kind void;
}
procedure `void` `a`(`n.c.a.r` v2 @kind object, `java.io.DataOutput` v3 @kind object) @signature `Ln/c/a/y/a;.a:(Ln/c/a/r;Ljava/io/DataOutput;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L425e9c.  call temp:= `k`(v2) @signature `Ln/c/a/r;.k:()I` @kind virtual;
  #L425ea2.  v2:= temp;
  #L425ea4.  v0:= v2 %% 900;
  #L425ea8.  v1:= 127I;
  #L425eac.  if v0 != 0 then goto L425eb6;
  #L425eb0.  v0:= v2 / 900;
  #L425eb4.  goto L425eba;
  #L425eb6.  v0:= 127I;
  #L425eba.  call `writeByte`(v3, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L425ec0.  if v0 != v1 then goto L425eca;
  #L425ec4.  call `writeInt`(v3, v2) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L425eca.  return @kind void;
}
procedure `long` `b`(`java.io.DataInput` v4 @kind object) @signature `Ln/c/a/y/a;.b:(Ljava/io/DataInput;)J` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L425c84.  call temp:= `readByte`(v4) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L425c8a.  v0:= temp;
  #L425c8c.  v1:= 255I;
  #L425c90.  v0:= v0 ^& v1 @kind int;
  #L425c92.  if v0 != v1 then goto L425ca0;
  #L425c96.  call temp:= `readLong`(v4) @signature `Ljava/io/DataInput;.readLong:()J` @kind interface;
  #L425c9c.  v0:= temp @kind wide;
  #L425c9e.  return v0 @kind wide;
  #L425ca0.  call temp:= `readByte`(v4) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L425ca6.  v2:= temp;
  #L425ca8.  v2:= v2 ^& v1 @kind int;
  #L425caa.  call temp:= `readByte`(v4) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L425cb0.  v4:= temp;
  #L425cb2.  v4:= v4 ^& v1 @kind int;
  #L425cb4.  v0:= v0 ^< 16;
  #L425cb8.  v1:= v2 ^< 8;
  #L425cbc.  v0:= v0 + v1 @kind int;
  #L425cbe.  v0:= v0 + v4 @kind int;
  #L425cc0.  v0:= (`long`) v0 @kind i2l;
  #L425cc2.  v2:= 900L;
  #L425cc6.  v0:= v0 * v2 @kind long;
  #L425cca.  v2:= 4575744000L;
  #L425cd4.  v0:= v0 - v2 @kind long;
  #L425cd6.  return v0 @kind wide;
}
procedure `n.c.a.r` `c`(`java.io.DataInput` v2 @kind object) @signature `Ln/c/a/y/a;.c:(Ljava/io/DataInput;)Ln/c/a/r;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L425ce8.  call temp:= `readByte`(v2) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L425cee.  v0:= temp;
  #L425cf0.  v1:= 127I;
  #L425cf4.  if v0 != v1 then goto L425d0a;
  #L425cf8.  call temp:= `readInt`(v2) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L425cfe.  v2:= temp;
  #L425d00.  call temp:= `b`(v2) @signature `Ln/c/a/r;.b:(I)Ln/c/a/r;` @kind static;
  #L425d06.  v2:= temp @kind object;
  #L425d08.  goto L425d16;
  #L425d0a.  v0:= v0 * 900;
  #L425d0e.  call temp:= `b`(v0) @signature `Ln/c/a/r;.b:(I)Ln/c/a/r;` @kind static;
  #L425d14.  v2:= temp @kind object;
  #L425d16.  return v2 @kind object;
}
procedure `java.lang.Object` `readResolve`(`n.c.a.y.a` v1 @kind this) @signature `Ln/c/a/y/a;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L425c6c.  v0:= v1.`n.c.a.y.a.c` @type ^`java.lang.Object` @kind object;
  #L425c70.  return v0 @kind object;
}
procedure `void` `readExternal`(`n.c.a.y.a` v1 @kind this, `java.io.ObjectInput` v2 @kind object) @signature `Ln/c/a/y/a;.readExternal:(Ljava/io/ObjectInput;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L425d60.  call temp:= `readByte`(v2) @signature `Ljava/io/ObjectInput;.readByte:()B` @kind interface;
  #L425d66.  v0:= temp;
  #L425d68.  v1.`n.c.a.y.a.b` @type ^`byte` := v0 @kind byte;
  #L425d6c.  v0:= v1.`n.c.a.y.a.b` @type ^`byte` @kind byte;
  #L425d70.  call temp:= `a`(v0, v2) @signature `Ln/c/a/y/a;.a:(BLjava/io/DataInput;)Ljava/lang/Object;` @kind static;
  #L425d76.  v2:= temp @kind object;
  #L425d78.  v1.`n.c.a.y.a.c` @type ^`java.lang.Object` := v2 @kind object;
  #L425d7c.  return @kind void;
}
procedure `void` `writeExternal`(`n.c.a.y.a` v2 @kind this, `java.io.ObjectOutput` v3 @kind object) @signature `Ln/c/a/y/a;.writeExternal:(Ljava/io/ObjectOutput;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L425e20.  v0:= v2.`n.c.a.y.a.b` @type ^`byte` @kind byte;
  #L425e24.  v1:= v2.`n.c.a.y.a.c` @type ^`java.lang.Object` @kind object;
  #L425e28.  call `a`(v0, v1, v3) @signature `Ln/c/a/y/a;.a:(BLjava/lang/Object;Ljava/io/DataOutput;)V` @kind static;
  #L425e2e.  return @kind void;
}
