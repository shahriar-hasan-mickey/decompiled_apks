record `n.c.a.y.f` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`n.c.a.y.f` v0 @kind this) @signature `Ln/c/a/y/f;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L427d40.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L427d46.  return @kind void;
}
procedure `n.c.a.y.f` `a`(`n.c.a.r` v1 @kind object) @signature `Ln/c/a/y/f;.a:(Ln/c/a/r;)Ln/c/a/y/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L427d18.  v0:= "offset" @kind object;
  #L427d1c.  call temp:= `a`(v1, v0) @signature `Ln/c/a/w/d;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L427d22.  v0:= new `n.c.a.y.f$a`;
  #L427d26.  call `<init>`(v0, v1) @signature `Ln/c/a/y/f$a;.<init>:(Ln/c/a/r;)V` @kind direct;
  #L427d2c.  return v0 @kind object;
}
procedure `n.c.a.r` `a`(`n.c.a.e` v0 @kind object) @signature `Ln/c/a/y/f;.a:(Ln/c/a/e;)Ln/c/a/r;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `n.c.a.y.d` `a`(`n.c.a.g` v0 @kind object) @signature `Ln/c/a/y/f;.a:(Ln/c/a/g;)Ln/c/a/y/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `a`() @signature `Ln/c/a/y/f;.a:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `a`(`n.c.a.g` v0 @kind object, `n.c.a.r` v1 @kind object) @signature `Ln/c/a/y/f;.a:(Ln/c/a/g;Ln/c/a/r;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.List` `b`(`n.c.a.g` v0 @kind object) @signature `Ln/c/a/y/f;.b:(Ln/c/a/g;)Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
