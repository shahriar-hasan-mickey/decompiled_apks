record `n.c.a.y.i` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `java.util.concurrent.CopyOnWriteArrayList` `@@n.c.a.y.i.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.ConcurrentMap` `@@n.c.a.y.i.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/c/a/y/i;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L427bfc.  v0:= new `java.util.concurrent.CopyOnWriteArrayList`;
  #L427c00.  call `<init>`(v0) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.<init>:()V` @kind direct;
  #L427c06.  `@@n.c.a.y.i.a` @type ^`java.util.concurrent.CopyOnWriteArrayList` := v0 @kind object;
  #L427c0a.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L427c0e.  v1:= 512I;
  #L427c12.  v2:= 0.75F;
  #L427c16.  v3:= 2I;
  #L427c18.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:(IFI)V` @kind direct;
  #L427c1e.  `@@n.c.a.y.i.b` @type ^`java.util.concurrent.ConcurrentMap` := v0 @kind object;
  #L427c22.  call `b`() @signature `Ln/c/a/y/h;.b:()V` @kind static;
  #L427c28.  return @kind void;
}
procedure `void` `<init>`(`n.c.a.y.i` v0 @kind this) @signature `Ln/c/a/y/i;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L427c3c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L427c42.  return @kind void;
}
procedure `n.c.a.y.i` `a`(`java.lang.String` v3 @kind object) @signature `Ln/c/a/y/i;.a:(Ljava/lang/String;)Ln/c/a/y/i;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L427b88.  v0:= `@@n.c.a.y.i.b` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L427b8c.  call temp:= `get`(v0, v3) @signature `Ljava/util/concurrent/ConcurrentMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L427b92.  v0:= temp @kind object;
  #L427b94.  v0:= (`n.c.a.y.i`) v0 @kind object;
  #L427b98.  if v0 != 0 then goto L427bea;
  #L427b9c.  v0:= `@@n.c.a.y.i.b` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L427ba0.  call temp:= `isEmpty`(v0) @signature `Ljava/util/concurrent/ConcurrentMap;.isEmpty:()Z` @kind interface;
  #L427ba6.  v0:= temp;
  #L427ba8.  if v0 == 0 then goto L427bbc;
  #L427bac.  v3:= new `n.c.a.y.g`;
  #L427bb0.  v0:= "No time-zone data files registered" @kind object;
  #L427bb4.  call `<init>`(v3, v0) @signature `Ln/c/a/y/g;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L427bba.  throw v3;
  #L427bbc.  v0:= new `n.c.a.y.g`;
  #L427bc0.  v1:= new `java.lang.StringBuilder`;
  #L427bc4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L427bca.  v2:= "Unknown time-zone ID: " @kind object;
  #L427bce.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L427bd4.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L427bda.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L427be0.  v3:= temp @kind object;
  #L427be2.  call `<init>`(v0, v3) @signature `Ln/c/a/y/g;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L427be8.  throw v0;
  #L427bea.  return v0 @kind object;
}
procedure `void` `a`(`n.c.a.y.i` v1 @kind object) @signature `Ln/c/a/y/i;.a:(Ln/c/a/y/i;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L427c54.  v0:= "provider" @kind object;
  #L427c58.  call temp:= `a`(v1, v0) @signature `Ln/c/a/w/d;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L427c5e.  call `b`(v1) @signature `Ln/c/a/y/i;.b:(Ln/c/a/y/i;)V` @kind static;
  #L427c64.  v0:= `@@n.c.a.y.i.a` @type ^`java.util.concurrent.CopyOnWriteArrayList` @kind object;
  #L427c68.  call temp:= `add`(v0, v1) @signature `Ljava/util/concurrent/CopyOnWriteArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L427c6e.  return @kind void;
}
procedure `java.util.Set` `b`() @signature `Ln/c/a/y/i;.b:()Ljava/util/Set;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L427b34.  v0:= `@@n.c.a.y.i.b` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L427b38.  call temp:= `keySet`(v0) @signature `Ljava/util/concurrent/ConcurrentMap;.keySet:()Ljava/util/Set;` @kind interface;
  #L427b3e.  v0:= temp @kind object;
  #L427b40.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L427b46.  v0:= temp @kind object;
  #L427b48.  return v0 @kind object;
}
procedure `n.c.a.y.f` `b`(`java.lang.String` v1 @kind object, `boolean` v2 ) @signature `Ln/c/a/y/i;.b:(Ljava/lang/String;Z)Ln/c/a/y/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L427b5c.  v0:= "zoneId" @kind object;
  #L427b60.  call temp:= `a`(v1, v0) @signature `Ln/c/a/w/d;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L427b66.  call temp:= `a`(v1) @signature `Ln/c/a/y/i;.a:(Ljava/lang/String;)Ln/c/a/y/i;` @kind static;
  #L427b6c.  v0:= temp @kind object;
  #L427b6e.  call temp:= `a`(v0, v1, v2) @signature `Ln/c/a/y/i;.a:(Ljava/lang/String;Z)Ln/c/a/y/f;` @kind virtual;
  #L427b74.  v1:= temp @kind object;
  #L427b76.  return v1 @kind object;
}
procedure `void` `b`(`n.c.a.y.i` v4 @kind object) @signature `Ln/c/a/y/i;.b:(Ln/c/a/y/i;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L427c80.  call temp:= `a`(v4) @signature `Ln/c/a/y/i;.a:()Ljava/util/Set;` @kind virtual;
  #L427c86.  v0:= temp @kind object;
  #L427c88.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L427c8e.  v0:= temp @kind object;
  #L427c90.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L427c96.  v1:= temp;
  #L427c98.  if v1 == 0 then goto L427d06;
  #L427c9c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L427ca2.  v1:= temp @kind object;
  #L427ca4.  v1:= (`java.lang.String`) v1 @kind object;
  #L427ca8.  v2:= "zoneId" @kind object;
  #L427cac.  call temp:= `a`(v1, v2) @signature `Ln/c/a/w/d;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L427cb2.  v2:= `@@n.c.a.y.i.b` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L427cb6.  call temp:= `putIfAbsent`(v2, v1, v4) @signature `Ljava/util/concurrent/ConcurrentMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L427cbc.  v2:= temp @kind object;
  #L427cbe.  v2:= (`n.c.a.y.i`) v2 @kind object;
  #L427cc2.  if v2 != 0 then goto L427cc8;
  #L427cc6.  goto L427c90;
  #L427cc8.  v0:= new `n.c.a.y.g`;
  #L427ccc.  v2:= new `java.lang.StringBuilder`;
  #L427cd0.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L427cd6.  v3:= "Unable to register zone as one already registered with that ID: " @kind object;
  #L427cda.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L427ce0.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L427ce6.  v1:= ", currently loading from provider: " @kind object;
  #L427cea.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L427cf0.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L427cf6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L427cfc.  v4:= temp @kind object;
  #L427cfe.  call `<init>`(v0, v4) @signature `Ln/c/a/y/g;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L427d04.  throw v0;
  #L427d06.  return @kind void;
}
procedure `java.util.Set` `a`() @signature `Ln/c/a/y/i;.a:()Ljava/util/Set;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `n.c.a.y.f` `a`(`java.lang.String` v0 @kind object, `boolean` v1 ) @signature `Ln/c/a/y/i;.a:(Ljava/lang/String;Z)Ln/c/a/y/f;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
