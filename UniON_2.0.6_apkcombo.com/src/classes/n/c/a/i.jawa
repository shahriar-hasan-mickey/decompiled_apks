record `n.c.a.i` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class, `n.c.a.x.e` @kind interface, `n.c.a.x.f` @kind interface {
}
global `n.c.a.i` `@@n.c.a.i.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.i` `@@n.c.a.i.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.i` `@@n.c.a.i.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.i` `@@n.c.a.i.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.i` `@@n.c.a.i.f` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.i` `@@n.c.a.i.g` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.i` `@@n.c.a.i.h` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.i` `@@n.c.a.i.i` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.i` `@@n.c.a.i.j` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.i` `@@n.c.a.i.k` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.i` `@@n.c.a.i.l` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.i` `@@n.c.a.i.m` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `n.c.a.i`[] `@@n.c.a.i.n` @AccessFlag PRIVATE_STATIC_FINAL;
global `n.c.a.i`[] `@@n.c.a.i.o` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Ln/c/a/i;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L40daf0.  v0:= new `n.c.a.i`;
  #L40daf4.  v1:= 0I;
  #L40daf6.  v2:= "JANUARY" @kind object;
  #L40dafa.  call `<init>`(v0, v2, v1) @signature `Ln/c/a/i;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L40db00.  `@@n.c.a.i.b` @type ^`n.c.a.i` := v0 @kind object;
  #L40db04.  v0:= new `n.c.a.i`;
  #L40db08.  v2:= 1I;
  #L40db0a.  v3:= "FEBRUARY" @kind object;
  #L40db0e.  call `<init>`(v0, v3, v2) @signature `Ln/c/a/i;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L40db14.  `@@n.c.a.i.c` @type ^`n.c.a.i` := v0 @kind object;
  #L40db18.  v0:= new `n.c.a.i`;
  #L40db1c.  v3:= 2I;
  #L40db1e.  v4:= "MARCH" @kind object;
  #L40db22.  call `<init>`(v0, v4, v3) @signature `Ln/c/a/i;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L40db28.  `@@n.c.a.i.d` @type ^`n.c.a.i` := v0 @kind object;
  #L40db2c.  v0:= new `n.c.a.i`;
  #L40db30.  v4:= 3I;
  #L40db32.  v5:= "APRIL" @kind object;
  #L40db36.  call `<init>`(v0, v5, v4) @signature `Ln/c/a/i;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L40db3c.  `@@n.c.a.i.e` @type ^`n.c.a.i` := v0 @kind object;
  #L40db40.  v0:= new `n.c.a.i`;
  #L40db44.  v5:= 4I;
  #L40db46.  v6:= "MAY" @kind object;
  #L40db4a.  call `<init>`(v0, v6, v5) @signature `Ln/c/a/i;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L40db50.  `@@n.c.a.i.f` @type ^`n.c.a.i` := v0 @kind object;
  #L40db54.  v0:= new `n.c.a.i`;
  #L40db58.  v6:= 5I;
  #L40db5a.  v7:= "JUNE" @kind object;
  #L40db5e.  call `<init>`(v0, v7, v6) @signature `Ln/c/a/i;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L40db64.  `@@n.c.a.i.g` @type ^`n.c.a.i` := v0 @kind object;
  #L40db68.  v0:= new `n.c.a.i`;
  #L40db6c.  v7:= 6I;
  #L40db6e.  v8:= "JULY" @kind object;
  #L40db72.  call `<init>`(v0, v8, v7) @signature `Ln/c/a/i;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L40db78.  `@@n.c.a.i.h` @type ^`n.c.a.i` := v0 @kind object;
  #L40db7c.  v0:= new `n.c.a.i`;
  #L40db80.  v8:= 7I;
  #L40db82.  v9:= "AUGUST" @kind object;
  #L40db86.  call `<init>`(v0, v9, v8) @signature `Ln/c/a/i;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L40db8c.  `@@n.c.a.i.i` @type ^`n.c.a.i` := v0 @kind object;
  #L40db90.  v0:= new `n.c.a.i`;
  #L40db94.  v9:= 8I;
  #L40db98.  v10:= "SEPTEMBER" @kind object;
  #L40db9c.  call `<init>`(v0, v10, v9) @signature `Ln/c/a/i;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L40dba2.  `@@n.c.a.i.j` @type ^`n.c.a.i` := v0 @kind object;
  #L40dba6.  v0:= new `n.c.a.i`;
  #L40dbaa.  v10:= 9I;
  #L40dbae.  v11:= "OCTOBER" @kind object;
  #L40dbb2.  call `<init>`(v0, v11, v10) @signature `Ln/c/a/i;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L40dbb8.  `@@n.c.a.i.k` @type ^`n.c.a.i` := v0 @kind object;
  #L40dbbc.  v0:= new `n.c.a.i`;
  #L40dbc0.  v11:= 10I;
  #L40dbc4.  v12:= "NOVEMBER" @kind object;
  #L40dbc8.  call `<init>`(v0, v12, v11) @signature `Ln/c/a/i;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L40dbce.  `@@n.c.a.i.l` @type ^`n.c.a.i` := v0 @kind object;
  #L40dbd2.  v0:= new `n.c.a.i`;
  #L40dbd6.  v12:= 11I;
  #L40dbda.  v13:= "DECEMBER" @kind object;
  #L40dbde.  call `<init>`(v0, v13, v12) @signature `Ln/c/a/i;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L40dbe4.  `@@n.c.a.i.m` @type ^`n.c.a.i` := v0 @kind object;
  #L40dbe8.  v0:= 12I;
  #L40dbec.  v0:= new `n.c.a.i`[v0];
  #L40dbf0.  v13:= `@@n.c.a.i.b` @type ^`n.c.a.i` @kind object;
  #L40dbf4.  v0[v1]:= v13 @kind object;
  #L40dbf8.  v1:= `@@n.c.a.i.c` @type ^`n.c.a.i` @kind object;
  #L40dbfc.  v0[v2]:= v1 @kind object;
  #L40dc00.  v1:= `@@n.c.a.i.d` @type ^`n.c.a.i` @kind object;
  #L40dc04.  v0[v3]:= v1 @kind object;
  #L40dc08.  v1:= `@@n.c.a.i.e` @type ^`n.c.a.i` @kind object;
  #L40dc0c.  v0[v4]:= v1 @kind object;
  #L40dc10.  v1:= `@@n.c.a.i.f` @type ^`n.c.a.i` @kind object;
  #L40dc14.  v0[v5]:= v1 @kind object;
  #L40dc18.  v1:= `@@n.c.a.i.g` @type ^`n.c.a.i` @kind object;
  #L40dc1c.  v0[v6]:= v1 @kind object;
  #L40dc20.  v1:= `@@n.c.a.i.h` @type ^`n.c.a.i` @kind object;
  #L40dc24.  v0[v7]:= v1 @kind object;
  #L40dc28.  v1:= `@@n.c.a.i.i` @type ^`n.c.a.i` @kind object;
  #L40dc2c.  v0[v8]:= v1 @kind object;
  #L40dc30.  v1:= `@@n.c.a.i.j` @type ^`n.c.a.i` @kind object;
  #L40dc34.  v0[v9]:= v1 @kind object;
  #L40dc38.  v1:= `@@n.c.a.i.k` @type ^`n.c.a.i` @kind object;
  #L40dc3c.  v0[v10]:= v1 @kind object;
  #L40dc40.  v1:= `@@n.c.a.i.l` @type ^`n.c.a.i` @kind object;
  #L40dc44.  v0[v11]:= v1 @kind object;
  #L40dc48.  v1:= `@@n.c.a.i.m` @type ^`n.c.a.i` @kind object;
  #L40dc4c.  v0[v12]:= v1 @kind object;
  #L40dc50.  `@@n.c.a.i.o` @type ^`n.c.a.i`[] := v0 @kind object;
  #L40dc54.  v0:= new `n.c.a.i$a`;
  #L40dc58.  call `<init>`(v0) @signature `Ln/c/a/i$a;.<init>:()V` @kind direct;
  #L40dc5e.  call temp:= `values`() @signature `Ln/c/a/i;.values:()[Ln/c/a/i;` @kind static;
  #L40dc64.  v0:= temp @kind object;
  #L40dc66.  `@@n.c.a.i.n` @type ^`n.c.a.i`[] := v0 @kind object;
  #L40dc6a.  return @kind void;
}
procedure `void` `<init>`(`n.c.a.i` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Ln/c/a/i;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L40dc7c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L40dc82.  return @kind void;
}
procedure `n.c.a.i` `a`(`int` v3 ) @signature `Ln/c/a/i;.a:(I)Ln/c/a/i;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L40d968.  v0:= 1I;
  #L40d96a.  if v3 < v0 then goto L40d982;
  #L40d96e.  v1:= 12I;
  #L40d972.  if v3 > v1 then goto L40d982;
  #L40d976.  v1:= `@@n.c.a.i.n` @type ^`n.c.a.i`[] @kind object;
  #L40d97a.  v3:= v3 - v0 @kind int;
  #L40d97c.  v3:= v1[v3] @kind object;
  #L40d980.  return v3 @kind object;
  #L40d982.  v0:= new `n.c.a.b`;
  #L40d986.  v1:= new `java.lang.StringBuilder`;
  #L40d98a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40d990.  v2:= "Invalid value for MonthOfYear: " @kind object;
  #L40d994.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40d99a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L40d9a0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40d9a6.  v3:= temp @kind object;
  #L40d9a8.  call `<init>`(v0, v3) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40d9ae.  throw v0;
}
procedure `n.c.a.i` `a`(`n.c.a.x.e` v4 @kind object) @signature `Ln/c/a/i;.a:(Ln/c/a/x/e;)Ln/c/a/i;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40d8b4.  v0:= instanceof @variable v4 @type ^`n.c.a.i` @kind boolean;
  #L40d8b8.  if v0 == 0 then goto L40d8c2;
  #L40d8bc.  v4:= (`n.c.a.i`) v4 @kind object;
  #L40d8c0.  return v4 @kind object;
  #L40d8c2.  v0:= `@@n.c.a.u.m.d` @type ^`n.c.a.u.m` @kind object;
  #L40d8c6.  call temp:= `c`(v4) @signature `Ln/c/a/u/h;.c:(Ln/c/a/x/e;)Ln/c/a/u/h;` @kind static;
  #L40d8cc.  v1:= temp @kind object;
  #L40d8ce.  call temp:= `equals`(v0, v1) @signature `Ln/c/a/u/h;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L40d8d4.  v0:= temp;
  #L40d8d6.  if v0 != 0 then goto L40d8e2;
  #L40d8da.  call temp:= `a`(v4) @signature `Ln/c/a/f;.a:(Ln/c/a/x/e;)Ln/c/a/f;` @kind static;
  #L40d8e0.  v4:= temp @kind object;
  #L40d8e2.  v0:= `@@n.c.a.x.a.A` @type ^`n.c.a.x.a` @kind object;
  #L40d8e6.  call temp:= `c`(v4, v0) @signature `Ln/c/a/x/e;.c:(Ln/c/a/x/i;)I` @kind interface;
  #L40d8ec.  v0:= temp;
  #L40d8ee.  call temp:= `a`(v0) @signature `Ln/c/a/i;.a:(I)Ln/c/a/i;` @kind static;
  #L40d8f4.  v4:= temp @kind object;
  #L40d8f6.  return v4 @kind object;
  #L40d8f8.  v0:= Exception @type ^`n.c.a.b` @kind object;
  #L40d8fa.  v1:= new `n.c.a.b`;
  #L40d8fe.  v2:= new `java.lang.StringBuilder`;
  #L40d902.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40d908.  v3:= "Unable to obtain Month from TemporalAccessor: " @kind object;
  #L40d90c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40d912.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40d918.  v3:= ", type " @kind object;
  #L40d91c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40d922.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L40d928.  v4:= temp @kind object;
  #L40d92a.  call temp:= `getName`(v4) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L40d930.  v4:= temp @kind object;
  #L40d932.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40d938.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40d93e.  v4:= temp @kind object;
  #L40d940.  call `<init>`(v1, v4, v0) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L40d946.  throw v1;
  catch `n.c.a.b` @[L40d8c2..L40d8f6] goto L40d8f8;
}
procedure `n.c.a.i` `valueOf`(`java.lang.String` v1 @kind object) @signature `Ln/c/a/i;.valueOf:(Ljava/lang/String;)Ln/c/a/i;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L40d9f4.  v0:= constclass @type ^`n.c.a.i` @kind object;
  #L40d9f8.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L40d9fe.  v1:= temp @kind object;
  #L40da00.  v1:= (`n.c.a.i`) v1 @kind object;
  #L40da04.  return v1 @kind object;
}
procedure `n.c.a.i`[] `values`() @signature `Ln/c/a/i;.values:()[Ln/c/a/i;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L40da18.  v0:= `@@n.c.a.i.o` @type ^`n.c.a.i`[] @kind object;
  #L40da1c.  call temp:= `clone`(v0) @signature `[Ln/c/a/i;.clone:()Ljava/lang/Object;` @kind virtual;
  #L40da22.  v0:= temp @kind object;
  #L40da24.  v0:= (`n.c.a.i`[]) v0 @kind object;
  #L40da28.  return v0 @kind object;
}
procedure `int` `a`(`n.c.a.i` v2 @kind this, `boolean` v3 ) @signature `Ln/c/a/i;.a:(Z)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40d5d8.  v0:= `@@n.c.a.i$b.a` @type ^`int`[] @kind object;
  #L40d5dc.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40d5e2.  v1:= temp;
  #L40d5e4.  v0:= v0[v1];
  #L40d5e8.  goto L40d634;
  #L40d5ee.  v3:= v3 + 335;
  #L40d5f2.  return v3;
  #L40d5f4.  v3:= v3 + 274;
  #L40d5f8.  return v3;
  #L40d5fa.  v3:= v3 + 213;
  #L40d5fe.  return v3;
  #L40d600.  v3:= v3 + 182;
  #L40d604.  return v3;
  #L40d606.  v3:= v3 + 121;
  #L40d60a.  return v3;
  #L40d60c.  v3:= v3 + 60;
  #L40d610.  return v3;
  #L40d612.  v3:= 1I;
  #L40d614.  return v3;
  #L40d616.  v3:= v3 + 305;
  #L40d61a.  return v3;
  #L40d61c.  v3:= v3 + 244;
  #L40d620.  return v3;
  #L40d622.  v3:= v3 + 152;
  #L40d626.  return v3;
  #L40d628.  v3:= v3 + 91;
  #L40d62c.  return v3;
  #L40d62e.  v3:= 32I;
  #L40d632.  return v3;
  #L40d634.  switch v0
                  | 1 => goto L40d62e
                  | 2 => goto L40d628
                  | 3 => goto L40d622
                  | 4 => goto L40d61c
                  | 5 => goto L40d616
                  | 6 => goto L40d612
                  | 7 => goto L40d60c
                  | 8 => goto L40d606
                  | 9 => goto L40d600
                  | 10 => goto L40d5fa
                  | 11 => goto L40d5f4
                  | else => goto L40d5ee;
}
procedure `java.lang.Object` `a`(`n.c.a.i` v1 @kind this, `n.c.a.x.k` v2 @kind object) @signature `Ln/c/a/i;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40d7d0.  call temp:= `a`() @signature `Ln/c/a/x/j;.a:()Ln/c/a/x/k;` @kind static;
  #L40d7d6.  v0:= temp @kind object;
  #L40d7d8.  if v2 != v0 then goto L40d7e2;
  #L40d7dc.  v2:= `@@n.c.a.u.m.d` @type ^`n.c.a.u.m` @kind object;
  #L40d7e0.  return v2 @kind object;
  #L40d7e2.  call temp:= `e`() @signature `Ln/c/a/x/j;.e:()Ln/c/a/x/k;` @kind static;
  #L40d7e8.  v0:= temp @kind object;
  #L40d7ea.  if v2 != v0 then goto L40d7f4;
  #L40d7ee.  v2:= `@@n.c.a.x.b.l` @type ^`n.c.a.x.b` @kind object;
  #L40d7f2.  return v2 @kind object;
  #L40d7f4.  call temp:= `b`() @signature `Ln/c/a/x/j;.b:()Ln/c/a/x/k;` @kind static;
  #L40d7fa.  v0:= temp @kind object;
  #L40d7fc.  if v2 == v0 then goto L40d83c;
  #L40d800.  call temp:= `c`() @signature `Ln/c/a/x/j;.c:()Ln/c/a/x/k;` @kind static;
  #L40d806.  v0:= temp @kind object;
  #L40d808.  if v2 == v0 then goto L40d83c;
  #L40d80c.  call temp:= `f`() @signature `Ln/c/a/x/j;.f:()Ln/c/a/x/k;` @kind static;
  #L40d812.  v0:= temp @kind object;
  #L40d814.  if v2 == v0 then goto L40d83c;
  #L40d818.  call temp:= `g`() @signature `Ln/c/a/x/j;.g:()Ln/c/a/x/k;` @kind static;
  #L40d81e.  v0:= temp @kind object;
  #L40d820.  if v2 == v0 then goto L40d83c;
  #L40d824.  call temp:= `d`() @signature `Ln/c/a/x/j;.d:()Ln/c/a/x/k;` @kind static;
  #L40d82a.  v0:= temp @kind object;
  #L40d82c.  if v2 != v0 then goto L40d832;
  #L40d830.  goto L40d83c;
  #L40d832.  call temp:= `a`(v2, v1) @signature `Ln/c/a/x/k;.a:(Ln/c/a/x/e;)Ljava/lang/Object;` @kind interface;
  #L40d838.  v2:= temp @kind object;
  #L40d83a.  return v2 @kind object;
  #L40d83c.  v2:= 0I;
  #L40d83e.  return v2 @kind object;
}
procedure `n.c.a.i` `a`(`n.c.a.i` v2 @kind this, `long` v3 ) @signature `Ln/c/a/i;.a:(J)Ln/c/a/i;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40d9c0.  v0:= 12L;
  #L40d9c4.  v3:= v3 %% v0 @kind long;
  #L40d9c6.  v4:= (`int`) v3 @kind l2i;
  #L40d9c8.  v3:= `@@n.c.a.i.n` @type ^`n.c.a.i`[] @kind object;
  #L40d9cc.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40d9d2.  v0:= temp;
  #L40d9d4.  v4:= v4 + 12;
  #L40d9d8.  v0:= v0 + v4 @kind int;
  #L40d9da.  v0:= v0 %% 12;
  #L40d9de.  v3:= v3[v0] @kind object;
  #L40d9e2.  return v3 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.i` v3 @kind this, `n.c.a.x.d` v4 @kind object) @signature `Ln/c/a/i;.a:(Ln/c/a/x/d;)Ln/c/a/x/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40da3c.  call temp:= `c`(v4) @signature `Ln/c/a/u/h;.c:(Ln/c/a/x/e;)Ln/c/a/u/h;` @kind static;
  #L40da42.  v0:= temp @kind object;
  #L40da44.  v1:= `@@n.c.a.u.m.d` @type ^`n.c.a.u.m` @kind object;
  #L40da48.  call temp:= `equals`(v0, v1) @signature `Ln/c/a/u/h;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L40da4e.  v0:= temp;
  #L40da50.  if v0 == 0 then goto L40da6c;
  #L40da54.  v0:= `@@n.c.a.x.a.A` @type ^`n.c.a.x.a` @kind object;
  #L40da58.  call temp:= `getValue`(v3) @signature `Ln/c/a/i;.getValue:()I` @kind virtual;
  #L40da5e.  v1:= temp;
  #L40da60.  v1:= (`long`) v1 @kind i2l;
  #L40da62.  call temp:= `a`(v4, v0, v1) @signature `Ln/c/a/x/d;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @kind interface;
  #L40da68.  v4:= temp @kind object;
  #L40da6a.  return v4 @kind object;
  #L40da6c.  v4:= new `n.c.a.b`;
  #L40da70.  v0:= "Adjustment only supported on ISO date-time" @kind object;
  #L40da74.  call `<init>`(v4, v0) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40da7a.  throw v4;
}
procedure `n.c.a.x.n` `a`(`n.c.a.i` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/i;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40da8c.  v0:= `@@n.c.a.x.a.A` @type ^`n.c.a.x.a` @kind object;
  #L40da90.  if v4 != v0 then goto L40da9e;
  #L40da94.  call temp:= `h`(v4) @signature `Ln/c/a/x/i;.h:()Ln/c/a/x/n;` @kind interface;
  #L40da9a.  v4:= temp @kind object;
  #L40da9c.  return v4 @kind object;
  #L40da9e.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L40daa2.  if v0 != 0 then goto L40dab0;
  #L40daa6.  call temp:= `c`(v4, v3) @signature `Ln/c/a/x/i;.c:(Ln/c/a/x/e;)Ln/c/a/x/n;` @kind interface;
  #L40daac.  v4:= temp @kind object;
  #L40daae.  return v4 @kind object;
  #L40dab0.  v0:= new `n.c.a.x.m`;
  #L40dab4.  v1:= new `java.lang.StringBuilder`;
  #L40dab8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40dabe.  v2:= "Unsupported field: " @kind object;
  #L40dac2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40dac8.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40dace.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40dad4.  v4:= temp @kind object;
  #L40dad6.  call `<init>`(v0, v4) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40dadc.  throw v0;
}
procedure `int` `b`(`n.c.a.i` v2 @kind this) @signature `Ln/c/a/i;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40d730.  v0:= `@@n.c.a.i$b.a` @type ^`int`[] @kind object;
  #L40d734.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40d73a.  v1:= temp;
  #L40d73c.  v0:= v0[v1];
  #L40d740.  v1:= 1I;
  #L40d742.  if v0 == v1 then goto L40d76a;
  #L40d746.  v1:= 2I;
  #L40d748.  if v0 == v1 then goto L40d764;
  #L40d74c.  v1:= 3I;
  #L40d74e.  if v0 == v1 then goto L40d764;
  #L40d752.  v1:= 4I;
  #L40d754.  if v0 == v1 then goto L40d764;
  #L40d758.  v1:= 5I;
  #L40d75a.  if v0 == v1 then goto L40d764;
  #L40d75e.  v0:= 31I;
  #L40d762.  return v0;
  #L40d764.  v0:= 30I;
  #L40d768.  return v0;
  #L40d76a.  v0:= 29I;
  #L40d76e.  return v0;
}
procedure `int` `b`(`n.c.a.i` v2 @kind this, `boolean` v3 ) @signature `Ln/c/a/i;.b:(Z)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40d6d4.  v0:= `@@n.c.a.i$b.a` @type ^`int`[] @kind object;
  #L40d6d8.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40d6de.  v1:= temp;
  #L40d6e0.  v0:= v0[v1];
  #L40d6e4.  v1:= 1I;
  #L40d6e6.  if v0 == v1 then goto L40d70e;
  #L40d6ea.  v3:= 2I;
  #L40d6ec.  if v0 == v3 then goto L40d708;
  #L40d6f0.  v3:= 3I;
  #L40d6f2.  if v0 == v3 then goto L40d708;
  #L40d6f6.  v3:= 4I;
  #L40d6f8.  if v0 == v3 then goto L40d708;
  #L40d6fc.  v3:= 5I;
  #L40d6fe.  if v0 == v3 then goto L40d708;
  #L40d702.  v3:= 31I;
  #L40d706.  return v3;
  #L40d708.  v3:= 30I;
  #L40d70c.  return v3;
  #L40d70e.  if v3 == 0 then goto L40d718;
  #L40d712.  v3:= 29I;
  #L40d716.  goto L40d71c;
  #L40d718.  v3:= 28I;
  #L40d71c.  return v3;
}
procedure `boolean` `b`(`n.c.a.i` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/i;.b:(Ln/c/a/x/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40d598.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L40d59c.  v1:= 1I;
  #L40d59e.  v2:= 0I;
  #L40d5a0.  if v0 == 0 then goto L40d5b2;
  #L40d5a4.  v0:= `@@n.c.a.x.a.A` @type ^`n.c.a.x.a` @kind object;
  #L40d5a8.  if v4 != v0 then goto L40d5ae;
  #L40d5ac.  goto L40d5b0;
  #L40d5ae.  v1:= 0I;
  #L40d5b0.  return v1;
  #L40d5b2.  if v4 == 0 then goto L40d5c4;
  #L40d5b6.  call temp:= `a`(v4, v3) @signature `Ln/c/a/x/i;.a:(Ln/c/a/x/e;)Z` @kind interface;
  #L40d5bc.  v4:= temp;
  #L40d5be.  if v4 == 0 then goto L40d5c4;
  #L40d5c2.  goto L40d5c6;
  #L40d5c4.  v1:= 0I;
  #L40d5c6.  return v1;
}
procedure `int` `c`(`n.c.a.i` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/i;.c:(Ln/c/a/x/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40d678.  v0:= `@@n.c.a.x.a.A` @type ^`n.c.a.x.a` @kind object;
  #L40d67c.  if v4 != v0 then goto L40d68a;
  #L40d680.  call temp:= `getValue`(v3) @signature `Ln/c/a/i;.getValue:()I` @kind virtual;
  #L40d686.  v4:= temp;
  #L40d688.  return v4;
  #L40d68a.  call temp:= `a`(v3, v4) @signature `Ln/c/a/i;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @kind virtual;
  #L40d690.  v0:= temp @kind object;
  #L40d692.  call temp:= `d`(v3, v4) @signature `Ln/c/a/i;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L40d698.  v1:= temp @kind wide;
  #L40d69a.  call temp:= `a`(v0, v1, v4) @signature `Ln/c/a/x/n;.a:(JLn/c/a/x/i;)I` @kind virtual;
  #L40d6a0.  v4:= temp;
  #L40d6a2.  return v4;
}
procedure `long` `d`(`n.c.a.i` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/i;.d:(Ln/c/a/x/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40d850.  v0:= `@@n.c.a.x.a.A` @type ^`n.c.a.x.a` @kind object;
  #L40d854.  if v4 != v0 then goto L40d864;
  #L40d858.  call temp:= `getValue`(v3) @signature `Ln/c/a/i;.getValue:()I` @kind virtual;
  #L40d85e.  v4:= temp;
  #L40d860.  v0:= (`long`) v4 @kind i2l;
  #L40d862.  return v0 @kind wide;
  #L40d864.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L40d868.  if v0 != 0 then goto L40d876;
  #L40d86c.  call temp:= `b`(v4, v3) @signature `Ln/c/a/x/i;.b:(Ln/c/a/x/e;)J` @kind interface;
  #L40d872.  v0:= temp @kind wide;
  #L40d874.  return v0 @kind wide;
  #L40d876.  v0:= new `n.c.a.x.m`;
  #L40d87a.  v1:= new `java.lang.StringBuilder`;
  #L40d87e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40d884.  v2:= "Unsupported field: " @kind object;
  #L40d888.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40d88e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40d894.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40d89a.  v4:= temp @kind object;
  #L40d89c.  call `<init>`(v0, v4) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40d8a2.  throw v0;
}
procedure `int` `e`(`n.c.a.i` v2 @kind this) @signature `Ln/c/a/i;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40d780.  v0:= `@@n.c.a.i$b.a` @type ^`int`[] @kind object;
  #L40d784.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40d78a.  v1:= temp;
  #L40d78c.  v0:= v0[v1];
  #L40d790.  v1:= 1I;
  #L40d792.  if v0 == v1 then goto L40d7ba;
  #L40d796.  v1:= 2I;
  #L40d798.  if v0 == v1 then goto L40d7b4;
  #L40d79c.  v1:= 3I;
  #L40d79e.  if v0 == v1 then goto L40d7b4;
  #L40d7a2.  v1:= 4I;
  #L40d7a4.  if v0 == v1 then goto L40d7b4;
  #L40d7a8.  v1:= 5I;
  #L40d7aa.  if v0 == v1 then goto L40d7b4;
  #L40d7ae.  v0:= 31I;
  #L40d7b2.  return v0;
  #L40d7b4.  v0:= 30I;
  #L40d7b8.  return v0;
  #L40d7ba.  v0:= 28I;
  #L40d7be.  return v0;
}
procedure `int` `getValue`(`n.c.a.i` v1 @kind this) @signature `Ln/c/a/i;.getValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40d6b4.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40d6ba.  v0:= temp;
  #L40d6bc.  v0:= v0 + 1;
  #L40d6c0.  return v0;
}
