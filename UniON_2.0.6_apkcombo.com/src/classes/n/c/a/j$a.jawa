record `n.c.a.j$a` @kind class @AccessFlag  extends `n.c.a.x.k` @kind interface {
}
procedure `void` `<init>`(`n.c.a.j$a` v0 @kind this) @signature `Ln/c/a/j$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L40cf4c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40cf52.  return @kind void;
}
procedure `java.lang.Object` `a`(`n.c.a.j$a` v0 @kind this, `n.c.a.x.e` v1 @kind object) @signature `Ln/c/a/j$a;.a:(Ln/c/a/x/e;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40cf14.  call temp:= `a`(v0, v1) @signature `Ln/c/a/j$a;.a:(Ln/c/a/x/e;)Ln/c/a/j;` @kind virtual;
  #L40cf1a.  v1:= temp @kind object;
  #L40cf1c.  return v1 @kind object;
}
procedure `n.c.a.j` `a`(`n.c.a.j$a` v0 @kind this, `n.c.a.x.e` v1 @kind object) @signature `Ln/c/a/j$a;.a:(Ln/c/a/x/e;)Ln/c/a/j;` @AccessFlag PUBLIC {
    temp;

  #L40cf30.  call temp:= `a`(v1) @signature `Ln/c/a/j;.a:(Ln/c/a/x/e;)Ln/c/a/j;` @kind static;
  #L40cf36.  v1:= temp @kind object;
  #L40cf38.  return v1 @kind object;
}
