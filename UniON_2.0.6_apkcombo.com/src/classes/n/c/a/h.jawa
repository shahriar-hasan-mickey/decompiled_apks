record `n.c.a.h` @kind class @AccessFlag PUBLIC_FINAL extends `n.c.a.w.c` @kind class, `n.c.a.x.d` @kind interface, `n.c.a.x.f` @kind interface, `java.lang.Comparable` @kind interface, `java.io.Serializable` @kind interface {
  `byte` `n.c.a.h.b` @AccessFlag PRIVATE_FINAL;
  `byte` `n.c.a.h.c` @AccessFlag PRIVATE_FINAL;
  `byte` `n.c.a.h.d` @AccessFlag PRIVATE_FINAL;
  `int` `n.c.a.h.e` @AccessFlag PRIVATE_FINAL;
}
global `n.c.a.h` `@@n.c.a.h.f` @AccessFlag PUBLIC_STATIC_FINAL;
global `n.c.a.h` `@@n.c.a.h.g` @AccessFlag PUBLIC_STATIC_FINAL;
global `n.c.a.h`[] `@@n.c.a.h.h` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/c/a/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40cbc0.  v0:= new `n.c.a.h$a`;
  #L40cbc4.  call `<init>`(v0) @signature `Ln/c/a/h$a;.<init>:()V` @kind direct;
  #L40cbca.  v0:= 24I;
  #L40cbce.  v0:= new `n.c.a.h`[v0];
  #L40cbd2.  `@@n.c.a.h.h` @type ^`n.c.a.h`[] := v0 @kind object;
  #L40cbd6.  v0:= 0I;
  #L40cbd8.  v1:= 0I;
  #L40cbda.  v2:= `@@n.c.a.h.h` @type ^`n.c.a.h`[] @kind object;
  #L40cbde.  v3:= length @variable v2;
  #L40cbe0.  if v1 >= v3 then goto L40cbf8;
  #L40cbe4.  v3:= new `n.c.a.h`;
  #L40cbe8.  call `<init>`(v3, v1, v0, v0, v0) @signature `Ln/c/a/h;.<init>:(IIII)V` @kind direct;
  #L40cbee.  v2[v1]:= v3 @kind object;
  #L40cbf2.  v1:= v1 + 1;
  #L40cbf6.  goto L40cbda;
  #L40cbf8.  v1:= v2[v0] @kind object;
  #L40cbfc.  v1:= 12I;
  #L40cc00.  v1:= v2[v1] @kind object;
  #L40cc04.  v0:= v2[v0] @kind object;
  #L40cc08.  `@@n.c.a.h.f` @type ^`n.c.a.h` := v0 @kind object;
  #L40cc0c.  v0:= new `n.c.a.h`;
  #L40cc10.  v1:= 23I;
  #L40cc14.  v2:= 999999999I;
  #L40cc1a.  v3:= 59I;
  #L40cc1e.  call `<init>`(v0, v1, v3, v3, v2) @signature `Ln/c/a/h;.<init>:(IIII)V` @kind direct;
  #L40cc24.  `@@n.c.a.h.g` @type ^`n.c.a.h` := v0 @kind object;
  #L40cc28.  return @kind void;
}
procedure `void` `<init>`(`n.c.a.h` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Ln/c/a/h;.<init>:(IIII)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L40cc3c.  call `<init>`(v0) @signature `Ln/c/a/w/c;.<init>:()V` @kind direct;
  #L40cc42.  v1:= (`byte`) v1 @kind i2b;
  #L40cc44.  v0.`n.c.a.h.b` @type ^`byte` := v1 @kind byte;
  #L40cc48.  v1:= (`byte`) v2 @kind i2b;
  #L40cc4a.  v0.`n.c.a.h.c` @type ^`byte` := v1 @kind byte;
  #L40cc4e.  v1:= (`byte`) v3 @kind i2b;
  #L40cc50.  v0.`n.c.a.h.d` @type ^`byte` := v1 @kind byte;
  #L40cc54.  v0.`n.c.a.h.e` @type ^`int` := v4;
  #L40cc58.  return @kind void;
}
procedure `n.c.a.h` `a`(`int` v3 , `int` v4 ) @signature `Ln/c/a/h;.a:(II)Ln/c/a/h;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L40c2e8.  v0:= `@@n.c.a.x.a.p` @type ^`n.c.a.x.a` @kind object;
  #L40c2ec.  v1:= (`long`) v3 @kind i2l;
  #L40c2ee.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40c2f4.  if v4 != 0 then goto L40c302;
  #L40c2f8.  v4:= `@@n.c.a.h.h` @type ^`n.c.a.h`[] @kind object;
  #L40c2fc.  v3:= v4[v3] @kind object;
  #L40c300.  return v3 @kind object;
  #L40c302.  v0:= `@@n.c.a.x.a.l` @type ^`n.c.a.x.a` @kind object;
  #L40c306.  v1:= (`long`) v4 @kind i2l;
  #L40c308.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40c30e.  v0:= new `n.c.a.h`;
  #L40c312.  v1:= 0I;
  #L40c314.  call `<init>`(v0, v3, v4, v1, v1) @signature `Ln/c/a/h;.<init>:(IIII)V` @kind direct;
  #L40c31a.  return v0 @kind object;
}
procedure `n.c.a.h` `a`(`int` v3 , `int` v4 , `int` v5 ) @signature `Ln/c/a/h;.a:(III)Ln/c/a/h;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L40c32c.  v0:= `@@n.c.a.x.a.p` @type ^`n.c.a.x.a` @kind object;
  #L40c330.  v1:= (`long`) v3 @kind i2l;
  #L40c332.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40c338.  v0:= v4 ^| v5 @kind int;
  #L40c33c.  if v0 != 0 then goto L40c34a;
  #L40c340.  v4:= `@@n.c.a.h.h` @type ^`n.c.a.h`[] @kind object;
  #L40c344.  v3:= v4[v3] @kind object;
  #L40c348.  return v3 @kind object;
  #L40c34a.  v0:= `@@n.c.a.x.a.l` @type ^`n.c.a.x.a` @kind object;
  #L40c34e.  v1:= (`long`) v4 @kind i2l;
  #L40c350.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40c356.  v0:= `@@n.c.a.x.a.j` @type ^`n.c.a.x.a` @kind object;
  #L40c35a.  v1:= (`long`) v5 @kind i2l;
  #L40c35c.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40c362.  v0:= new `n.c.a.h`;
  #L40c366.  v1:= 0I;
  #L40c368.  call `<init>`(v0, v3, v4, v5, v1) @signature `Ln/c/a/h;.<init>:(IIII)V` @kind direct;
  #L40c36e.  return v0 @kind object;
}
procedure `n.c.a.h` `a`(`int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Ln/c/a/h;.a:(IIII)Ln/c/a/h;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L40c1f8.  v0:= v2 ^| v3 @kind int;
  #L40c1fc.  v0:= v0 ^| v4 @kind int;
  #L40c1fe.  if v0 != 0 then goto L40c20c;
  #L40c202.  v2:= `@@n.c.a.h.h` @type ^`n.c.a.h`[] @kind object;
  #L40c206.  v1:= v2[v1] @kind object;
  #L40c20a.  return v1 @kind object;
  #L40c20c.  v0:= new `n.c.a.h`;
  #L40c210.  call `<init>`(v0, v1, v2, v3, v4) @signature `Ln/c/a/h;.<init>:(IIII)V` @kind direct;
  #L40c216.  return v0 @kind object;
}
procedure `n.c.a.h` `a`(`long` v4 , `int` v6 ) @signature `Ln/c/a/h;.a:(JI)Ln/c/a/h;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40c484.  v0:= `@@n.c.a.x.a.k` @type ^`n.c.a.x.a` @kind object;
  #L40c488.  call temp:= `b`(v0, v4) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40c48e.  v0:= `@@n.c.a.x.a.d` @type ^`n.c.a.x.a` @kind object;
  #L40c492.  v1:= (`long`) v6 @kind i2l;
  #L40c494.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40c49a.  v0:= 3600L;
  #L40c49e.  v0:= v4 / v0 @kind long;
  #L40c4a2.  v1:= (`int`) v0 @kind l2i;
  #L40c4a4.  v0:= v1 * 3600;
  #L40c4a8.  v2:= (`long`) v0 @kind i2l;
  #L40c4aa.  v4:= v4 - v2 @kind long;
  #L40c4ac.  v2:= 60L;
  #L40c4b0.  v2:= v4 / v2 @kind long;
  #L40c4b4.  v0:= (`int`) v2 @kind l2i;
  #L40c4b6.  v2:= v0 * 60;
  #L40c4ba.  v2:= (`long`) v2 @kind i2l;
  #L40c4bc.  v4:= v4 - v2 @kind long;
  #L40c4be.  v5:= (`int`) v4 @kind l2i;
  #L40c4c0.  call temp:= `a`(v1, v0, v5, v6) @signature `Ln/c/a/h;.a:(IIII)Ln/c/a/h;` @kind static;
  #L40c4c6.  v4:= temp @kind object;
  #L40c4c8.  return v4 @kind object;
}
procedure `n.c.a.h` `a`(`java.io.DataInput` v4 @kind object) @signature `Ln/c/a/h;.a:(Ljava/io/DataInput;)Ln/c/a/h;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40c78c.  call temp:= `readByte`(v4) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L40c792.  v0:= temp;
  #L40c794.  v1:= 0I;
  #L40c796.  if v0 >= 0 then goto L40c7a2;
  #L40c79a.  v0:= ~v0 @kind int;
  #L40c79c.  v4:= 0I;
  #L40c79e.  v2:= 0I;
  #L40c7a0.  goto L40c7d4;
  #L40c7a2.  call temp:= `readByte`(v4) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L40c7a8.  v2:= temp;
  #L40c7aa.  if v2 >= 0 then goto L40c7b6;
  #L40c7ae.  v4:= ~v2 @kind int;
  #L40c7b0.  v2:= v4;
  #L40c7b2.  v4:= 0I;
  #L40c7b4.  goto L40c7d4;
  #L40c7b6.  call temp:= `readByte`(v4) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L40c7bc.  v3:= temp;
  #L40c7be.  if v3 >= 0 then goto L40c7c8;
  #L40c7c2.  v4:= ~v3 @kind int;
  #L40c7c4.  v1:= v4;
  #L40c7c6.  goto L40c7b2;
  #L40c7c8.  call temp:= `readInt`(v4) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L40c7ce.  v1:= temp;
  #L40c7d0.  v4:= v1;
  #L40c7d2.  v1:= v3;
  #L40c7d4.  call temp:= `b`(v0, v2, v1, v4) @signature `Ln/c/a/h;.b:(IIII)Ln/c/a/h;` @kind static;
  #L40c7da.  v4:= temp @kind object;
  #L40c7dc.  return v4 @kind object;
}
procedure `n.c.a.h` `a`(`n.c.a.x.e` v3 @kind object) @signature `Ln/c/a/h;.a:(Ln/c/a/x/e;)Ln/c/a/h;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L40c228.  call temp:= `c`() @signature `Ln/c/a/x/j;.c:()Ln/c/a/x/k;` @kind static;
  #L40c22e.  v0:= temp @kind object;
  #L40c230.  call temp:= `a`(v3, v0) @signature `Ln/c/a/x/e;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @kind interface;
  #L40c236.  v0:= temp @kind object;
  #L40c238.  v0:= (`n.c.a.h`) v0 @kind object;
  #L40c23c.  if v0 == 0 then goto L40c242;
  #L40c240.  return v0 @kind object;
  #L40c242.  v0:= new `n.c.a.b`;
  #L40c246.  v1:= new `java.lang.StringBuilder`;
  #L40c24a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40c250.  v2:= "Unable to obtain LocalTime from TemporalAccessor: " @kind object;
  #L40c254.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40c25a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40c260.  v2:= ", type " @kind object;
  #L40c264.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40c26a.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L40c270.  v3:= temp @kind object;
  #L40c272.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L40c278.  v3:= temp @kind object;
  #L40c27a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40c280.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40c286.  v3:= temp @kind object;
  #L40c288.  call `<init>`(v0, v3) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40c28e.  throw v0;
}
procedure `n.c.a.h` `b`(`int` v3 , `int` v4 , `int` v5 , `int` v6 ) @signature `Ln/c/a/h;.b:(IIII)Ln/c/a/h;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L40c380.  v0:= `@@n.c.a.x.a.p` @type ^`n.c.a.x.a` @kind object;
  #L40c384.  v1:= (`long`) v3 @kind i2l;
  #L40c386.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40c38c.  v0:= `@@n.c.a.x.a.l` @type ^`n.c.a.x.a` @kind object;
  #L40c390.  v1:= (`long`) v4 @kind i2l;
  #L40c392.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40c398.  v0:= `@@n.c.a.x.a.j` @type ^`n.c.a.x.a` @kind object;
  #L40c39c.  v1:= (`long`) v5 @kind i2l;
  #L40c39e.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40c3a4.  v0:= `@@n.c.a.x.a.d` @type ^`n.c.a.x.a` @kind object;
  #L40c3a8.  v1:= (`long`) v6 @kind i2l;
  #L40c3aa.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40c3b0.  call temp:= `a`(v3, v4, v5, v6) @signature `Ln/c/a/h;.a:(IIII)Ln/c/a/h;` @kind static;
  #L40c3b6.  v3:= temp @kind object;
  #L40c3b8.  return v3 @kind object;
}
procedure `int` `e`(`n.c.a.h` v4 @kind this, `n.c.a.x.i` v5 @kind object) @signature `Ln/c/a/h;.e:(Ln/c/a/x/i;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40bd68.  v0:= `@@n.c.a.h$b.a` @type ^`int`[] @kind object;
  #L40bd6c.  v1:= v5 @kind object;
  #L40bd6e.  v1:= (`n.c.a.x.a`) v1 @kind object;
  #L40bd72.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40bd78.  v1:= temp;
  #L40bd7a.  v0:= v0[v1];
  #L40bd7e.  v1:= "Field too large for an int: " @kind object;
  #L40bd82.  v2:= 12I;
  #L40bd86.  goto L40bea0;
  #L40bd8c.  v0:= new `n.c.a.x.m`;
  #L40bd90.  v1:= new `java.lang.StringBuilder`;
  #L40bd94.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40bd9a.  v2:= "Unsupported field: " @kind object;
  #L40bd9e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40bda4.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40bdaa.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40bdb0.  v5:= temp @kind object;
  #L40bdb2.  call `<init>`(v0, v5) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40bdb8.  throw v0;
  #L40bdba.  v5:= v4.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40bdbe.  v5:= v5 / v2 @kind int;
  #L40bdc0.  return v5;
  #L40bdc2.  v5:= v4.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40bdc6.  if v5 != 0 then goto L40bdce;
  #L40bdca.  v5:= 24I;
  #L40bdce.  return v5;
  #L40bdd0.  v5:= v4.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40bdd4.  return v5;
  #L40bdd6.  v5:= v4.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40bdda.  v5:= v5 %% v2 @kind int;
  #L40bddc.  v0:= v5 %% 12;
  #L40bde0.  if v0 != 0 then goto L40bde8;
  #L40bde4.  v5:= 12I;
  #L40bde8.  return v5;
  #L40bdea.  v5:= v4.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40bdee.  v5:= v5 %% v2 @kind int;
  #L40bdf0.  return v5;
  #L40bdf2.  v5:= v4.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40bdf6.  v5:= v5 * 60;
  #L40bdfa.  v0:= v4.`n.c.a.h.c` @type ^`byte` @kind byte;
  #L40bdfe.  v5:= v5 + v0 @kind int;
  #L40be00.  return v5;
  #L40be02.  v5:= v4.`n.c.a.h.c` @type ^`byte` @kind byte;
  #L40be06.  return v5;
  #L40be08.  call temp:= `v`(v4) @signature `Ln/c/a/h;.v:()I` @kind virtual;
  #L40be0e.  v5:= temp;
  #L40be10.  return v5;
  #L40be12.  v5:= v4.`n.c.a.h.d` @type ^`byte` @kind byte;
  #L40be16.  return v5;
  #L40be18.  call temp:= `u`(v4) @signature `Ln/c/a/h;.u:()J` @kind virtual;
  #L40be1e.  v0:= temp @kind wide;
  #L40be20.  v2:= 1000000L;
  #L40be26.  v0:= v0 / v2 @kind long;
  #L40be28.  v5:= (`int`) v0 @kind l2i;
  #L40be2a.  return v5;
  #L40be2c.  v5:= v4.`n.c.a.h.e` @type ^`int`;
  #L40be30.  v0:= 1000000I;
  #L40be36.  v5:= v5 / v0 @kind int;
  #L40be38.  return v5;
  #L40be3a.  v0:= new `n.c.a.b`;
  #L40be3e.  v2:= new `java.lang.StringBuilder`;
  #L40be42.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40be48.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40be4e.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40be54.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40be5a.  v5:= temp @kind object;
  #L40be5c.  call `<init>`(v0, v5) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40be62.  throw v0;
  #L40be64.  v5:= v4.`n.c.a.h.e` @type ^`int`;
  #L40be68.  v5:= v5 / 1000;
  #L40be6c.  return v5;
  #L40be6e.  v0:= new `n.c.a.b`;
  #L40be72.  v2:= new `java.lang.StringBuilder`;
  #L40be76.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40be7c.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40be82.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40be88.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40be8e.  v5:= temp @kind object;
  #L40be90.  call `<init>`(v0, v5) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40be96.  throw v0;
  #L40be98.  v5:= v4.`n.c.a.h.e` @type ^`int`;
  #L40be9c.  return v5;
  #L40be9e.  
  #L40bea0.  switch v0
                  | 1 => goto L40be98
                  | 2 => goto L40be6e
                  | 3 => goto L40be64
                  | 4 => goto L40be3a
                  | 5 => goto L40be2c
                  | 6 => goto L40be18
                  | 7 => goto L40be12
                  | 8 => goto L40be08
                  | 9 => goto L40be02
                  | 10 => goto L40bdf2
                  | 11 => goto L40bdea
                  | 12 => goto L40bdd6
                  | 13 => goto L40bdd0
                  | 14 => goto L40bdc2
                  | 15 => goto L40bdba
                  | else => goto L40bd8c;
}
procedure `n.c.a.h` `e`(`long` v8 ) @signature `Ln/c/a/h;.e:(J)Ln/c/a/h;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L40c3cc.  v0:= `@@n.c.a.x.a.e` @type ^`n.c.a.x.a` @kind object;
  #L40c3d0.  call temp:= `b`(v0, v8) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40c3d6.  v0:= 3600000000000L;
  #L40c3e0.  v2:= v8 / v0 @kind long;
  #L40c3e4.  v3:= (`int`) v2 @kind l2i;
  #L40c3e6.  v4:= (`long`) v3 @kind i2l;
  #L40c3e8.  v4:= v4 * v0 @kind long;
  #L40c3ec.  v8:= v8 - v4 @kind long;
  #L40c3ee.  v0:= 60000000000L;
  #L40c3f8.  v4:= v8 / v0 @kind long;
  #L40c3fc.  v2:= (`int`) v4 @kind l2i;
  #L40c3fe.  v4:= (`long`) v2 @kind i2l;
  #L40c400.  v4:= v4 * v0 @kind long;
  #L40c404.  v8:= v8 - v4 @kind long;
  #L40c406.  v0:= 1000000000L;
  #L40c40c.  v4:= v8 / v0 @kind long;
  #L40c410.  v5:= (`int`) v4 @kind l2i;
  #L40c412.  v6:= (`long`) v5 @kind i2l;
  #L40c414.  v6:= v6 * v0 @kind long;
  #L40c418.  v8:= v8 - v6 @kind long;
  #L40c41a.  v9:= (`int`) v8 @kind l2i;
  #L40c41c.  call temp:= `a`(v3, v2, v5, v9) @signature `Ln/c/a/h;.a:(IIII)Ln/c/a/h;` @kind static;
  #L40c422.  v8:= temp @kind object;
  #L40c424.  return v8 @kind object;
}
procedure `n.c.a.h` `f`(`long` v4 ) @signature `Ln/c/a/h;.f:(J)Ln/c/a/h;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40c438.  v0:= `@@n.c.a.x.a.k` @type ^`n.c.a.x.a` @kind object;
  #L40c43c.  call temp:= `b`(v0, v4) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40c442.  v0:= 3600L;
  #L40c446.  v0:= v4 / v0 @kind long;
  #L40c44a.  v1:= (`int`) v0 @kind l2i;
  #L40c44c.  v0:= v1 * 3600;
  #L40c450.  v2:= (`long`) v0 @kind i2l;
  #L40c452.  v4:= v4 - v2 @kind long;
  #L40c454.  v2:= 60L;
  #L40c458.  v2:= v4 / v2 @kind long;
  #L40c45c.  v0:= (`int`) v2 @kind l2i;
  #L40c45e.  v2:= v0 * 60;
  #L40c462.  v2:= (`long`) v2 @kind i2l;
  #L40c464.  v4:= v4 - v2 @kind long;
  #L40c466.  v5:= (`int`) v4 @kind l2i;
  #L40c468.  v4:= 0I;
  #L40c46a.  call temp:= `a`(v1, v0, v5, v4) @signature `Ln/c/a/h;.a:(IIII)Ln/c/a/h;` @kind static;
  #L40c470.  v4:= temp @kind object;
  #L40c472.  return v4 @kind object;
}
procedure `java.lang.Object` `readResolve`(`n.c.a.h` v2 @kind this) @signature `Ln/c/a/h;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L40c024.  v0:= new `java.io.InvalidObjectException`;
  #L40c028.  v1:= "Deserialization via serialization delegate" @kind object;
  #L40c02c.  call `<init>`(v0, v1) @signature `Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40c032.  throw v0;
}
procedure `java.lang.Object` `writeReplace`(`n.c.a.h` v2 @kind this) @signature `Ln/c/a/h;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L40c044.  v0:= new `n.c.a.n`;
  #L40c048.  v1:= 5I;
  #L40c04a.  call `<init>`(v0, v1, v2) @signature `Ln/c/a/n;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L40c050.  return v0 @kind object;
}
procedure `int` `a`(`n.c.a.h` v2 @kind this, `n.c.a.h` v3 @kind object) @signature `Ln/c/a/h;.a:(Ln/c/a/h;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40bcdc.  v0:= v2.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40bce0.  v1:= v3.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40bce4.  call temp:= `a`(v0, v1) @signature `Ln/c/a/w/d;.a:(II)I` @kind static;
  #L40bcea.  v0:= temp;
  #L40bcec.  if v0 != 0 then goto L40bd28;
  #L40bcf0.  v0:= v2.`n.c.a.h.c` @type ^`byte` @kind byte;
  #L40bcf4.  v1:= v3.`n.c.a.h.c` @type ^`byte` @kind byte;
  #L40bcf8.  call temp:= `a`(v0, v1) @signature `Ln/c/a/w/d;.a:(II)I` @kind static;
  #L40bcfe.  v0:= temp;
  #L40bd00.  if v0 != 0 then goto L40bd28;
  #L40bd04.  v0:= v2.`n.c.a.h.d` @type ^`byte` @kind byte;
  #L40bd08.  v1:= v3.`n.c.a.h.d` @type ^`byte` @kind byte;
  #L40bd0c.  call temp:= `a`(v0, v1) @signature `Ln/c/a/w/d;.a:(II)I` @kind static;
  #L40bd12.  v0:= temp;
  #L40bd14.  if v0 != 0 then goto L40bd28;
  #L40bd18.  v0:= v2.`n.c.a.h.e` @type ^`int`;
  #L40bd1c.  v3:= v3.`n.c.a.h.e` @type ^`int`;
  #L40bd20.  call temp:= `a`(v0, v3) @signature `Ln/c/a/w/d;.a:(II)I` @kind static;
  #L40bd26.  v0:= temp;
  #L40bd28.  return v0;
}
procedure `java.lang.Object` `a`(`n.c.a.h` v1 @kind this, `n.c.a.x.k` v2 @kind object) @signature `Ln/c/a/h;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40bfa8.  call temp:= `e`() @signature `Ln/c/a/x/j;.e:()Ln/c/a/x/k;` @kind static;
  #L40bfae.  v0:= temp @kind object;
  #L40bfb0.  if v2 != v0 then goto L40bfba;
  #L40bfb4.  v2:= `@@n.c.a.x.b.c` @type ^`n.c.a.x.b` @kind object;
  #L40bfb8.  return v2 @kind object;
  #L40bfba.  call temp:= `c`() @signature `Ln/c/a/x/j;.c:()Ln/c/a/x/k;` @kind static;
  #L40bfc0.  v0:= temp @kind object;
  #L40bfc2.  if v2 != v0 then goto L40bfc8;
  #L40bfc6.  return v1 @kind object;
  #L40bfc8.  call temp:= `a`() @signature `Ln/c/a/x/j;.a:()Ln/c/a/x/k;` @kind static;
  #L40bfce.  v0:= temp @kind object;
  #L40bfd0.  if v2 == v0 then goto L40c010;
  #L40bfd4.  call temp:= `g`() @signature `Ln/c/a/x/j;.g:()Ln/c/a/x/k;` @kind static;
  #L40bfda.  v0:= temp @kind object;
  #L40bfdc.  if v2 == v0 then goto L40c010;
  #L40bfe0.  call temp:= `f`() @signature `Ln/c/a/x/j;.f:()Ln/c/a/x/k;` @kind static;
  #L40bfe6.  v0:= temp @kind object;
  #L40bfe8.  if v2 == v0 then goto L40c010;
  #L40bfec.  call temp:= `d`() @signature `Ln/c/a/x/j;.d:()Ln/c/a/x/k;` @kind static;
  #L40bff2.  v0:= temp @kind object;
  #L40bff4.  if v2 == v0 then goto L40c010;
  #L40bff8.  call temp:= `b`() @signature `Ln/c/a/x/j;.b:()Ln/c/a/x/k;` @kind static;
  #L40bffe.  v0:= temp @kind object;
  #L40c000.  if v2 != v0 then goto L40c006;
  #L40c004.  goto L40c010;
  #L40c006.  call temp:= `a`(v2, v1) @signature `Ln/c/a/x/k;.a:(Ln/c/a/x/e;)Ljava/lang/Object;` @kind interface;
  #L40c00c.  v2:= temp @kind object;
  #L40c00e.  return v2 @kind object;
  #L40c010.  v2:= 0I;
  #L40c012.  return v2 @kind object;
}
procedure `n.c.a.h` `a`(`n.c.a.h` v3 @kind this, `int` v4 ) @signature `Ln/c/a/h;.a:(I)Ln/c/a/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40ca00.  v0:= v3.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40ca04.  if v0 != v4 then goto L40ca0a;
  #L40ca08.  return v3 @kind object;
  #L40ca0a.  v0:= `@@n.c.a.x.a.p` @type ^`n.c.a.x.a` @kind object;
  #L40ca0e.  v1:= (`long`) v4 @kind i2l;
  #L40ca10.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40ca16.  v0:= v3.`n.c.a.h.c` @type ^`byte` @kind byte;
  #L40ca1a.  v1:= v3.`n.c.a.h.d` @type ^`byte` @kind byte;
  #L40ca1e.  v2:= v3.`n.c.a.h.e` @type ^`int`;
  #L40ca22.  call temp:= `a`(v4, v0, v1, v2) @signature `Ln/c/a/h;.a:(IIII)Ln/c/a/h;` @kind static;
  #L40ca28.  v4:= temp @kind object;
  #L40ca2a.  return v4 @kind object;
}
procedure `n.c.a.h` `a`(`n.c.a.h` v3 @kind this, `long` v4 ) @signature `Ln/c/a/h;.a:(J)Ln/c/a/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40c5ec.  v0:= 0L;
  #L40c5f0.  v2:= lcmp(v4, v0);
  #L40c5f4.  if v2 != 0 then goto L40c5fa;
  #L40c5f8.  return v3 @kind object;
  #L40c5fa.  v0:= 24L;
  #L40c5fe.  v4:= v4 %% v0 @kind long;
  #L40c600.  v5:= (`int`) v4 @kind l2i;
  #L40c602.  v4:= v3.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40c606.  v5:= v5 + v4 @kind int;
  #L40c608.  v5:= v5 + 24;
  #L40c60c.  v5:= v5 %% 24;
  #L40c610.  v4:= v3.`n.c.a.h.c` @type ^`byte` @kind byte;
  #L40c614.  v0:= v3.`n.c.a.h.d` @type ^`byte` @kind byte;
  #L40c618.  v1:= v3.`n.c.a.h.e` @type ^`int`;
  #L40c61c.  call temp:= `a`(v5, v4, v0, v1) @signature `Ln/c/a/h;.a:(IIII)Ln/c/a/h;` @kind static;
  #L40c622.  v4:= temp @kind object;
  #L40c624.  return v4 @kind object;
}
procedure `n.c.a.h` `a`(`n.c.a.h` v3 @kind this, `long` v4 , `n.c.a.x.l` v6 @kind object) @signature `Ln/c/a/h;.a:(JLn/c/a/x/l;)Ln/c/a/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40c2a0.  v0:= -9223372036854775808L;
  #L40c2a4.  v2:= lcmp(v4, v0);
  #L40c2a8.  if v2 != 0 then goto L40c2cc;
  #L40c2ac.  v4:= 9223372036854775807L;
  #L40c2b6.  call temp:= `b`(v3, v4, v6) @signature `Ln/c/a/h;.b:(JLn/c/a/x/l;)Ln/c/a/h;` @kind virtual;
  #L40c2bc.  v4:= temp @kind object;
  #L40c2be.  v0:= 1L;
  #L40c2c2.  call temp:= `b`(v4, v0, v6) @signature `Ln/c/a/h;.b:(JLn/c/a/x/l;)Ln/c/a/h;` @kind virtual;
  #L40c2c8.  v4:= temp @kind object;
  #L40c2ca.  goto L40c2d6;
  #L40c2cc.  v4:= -v4 @kind long;
  #L40c2ce.  call temp:= `b`(v3, v4, v6) @signature `Ln/c/a/h;.b:(JLn/c/a/x/l;)Ln/c/a/h;` @kind virtual;
  #L40c2d4.  v4:= temp @kind object;
  #L40c2d6.  return v4 @kind object;
}
procedure `n.c.a.h` `a`(`n.c.a.h` v1 @kind this, `n.c.a.x.f` v2 @kind object) @signature `Ln/c/a/h;.a:(Ln/c/a/x/f;)Ln/c/a/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40c7f0.  v0:= instanceof @variable v2 @type ^`n.c.a.h` @kind boolean;
  #L40c7f4.  if v0 == 0 then goto L40c7fe;
  #L40c7f8.  v2:= (`n.c.a.h`) v2 @kind object;
  #L40c7fc.  return v2 @kind object;
  #L40c7fe.  call temp:= `a`(v2, v1) @signature `Ln/c/a/x/f;.a:(Ln/c/a/x/d;)Ln/c/a/x/d;` @kind interface;
  #L40c804.  v2:= temp @kind object;
  #L40c806.  v2:= (`n.c.a.h`) v2 @kind object;
  #L40c80a.  return v2 @kind object;
}
procedure `n.c.a.h` `a`(`n.c.a.h` v5 @kind this, `n.c.a.x.i` v6 @kind object, `long` v7 ) @signature `Ln/c/a/h;.a:(Ln/c/a/x/i;J)Ln/c/a/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L40c81c.  v0:= instanceof @variable v6 @type ^`n.c.a.x.a` @kind boolean;
  #L40c820.  if v0 == 0 then goto L40c99e;
  #L40c824.  v0:= v6 @kind object;
  #L40c826.  v0:= (`n.c.a.x.a`) v0 @kind object;
  #L40c82a.  call temp:= `b`(v0, v7) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40c830.  v1:= `@@n.c.a.h$b.a` @type ^`int`[] @kind object;
  #L40c834.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40c83a.  v0:= temp;
  #L40c83c.  v0:= v1[v0];
  #L40c840.  v1:= 0L;
  #L40c844.  v3:= 12L;
  #L40c848.  goto L40c9ac;
  #L40c84e.  v7:= new `n.c.a.x.m`;
  #L40c852.  v8:= new `java.lang.StringBuilder`;
  #L40c856.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40c85c.  v0:= "Unsupported field: " @kind object;
  #L40c860.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40c866.  call temp:= `append`(v8, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40c86c.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40c872.  v6:= temp @kind object;
  #L40c874.  call `<init>`(v7, v6) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40c87a.  throw v7;
  #L40c87c.  v6:= v5.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40c880.  v6:= v6 / 12;
  #L40c884.  v0:= (`long`) v6 @kind i2l;
  #L40c886.  v7:= v7 - v0 @kind long;
  #L40c888.  v7:= v7 * v3 @kind long;
  #L40c88c.  call temp:= `a`(v5, v7) @signature `Ln/c/a/h;.a:(J)Ln/c/a/h;` @kind virtual;
  #L40c892.  v6:= temp @kind object;
  #L40c894.  return v6 @kind object;
  #L40c896.  v3:= 24L;
  #L40c89a.  v6:= lcmp(v7, v3);
  #L40c89e.  if v6 != 0 then goto L40c8a4;
  #L40c8a2.  v7:= v1 @kind wide;
  #L40c8a4.  v6:= (`int`) v7 @kind l2i;
  #L40c8a6.  call temp:= `a`(v5, v6) @signature `Ln/c/a/h;.a:(I)Ln/c/a/h;` @kind virtual;
  #L40c8ac.  v6:= temp @kind object;
  #L40c8ae.  return v6 @kind object;
  #L40c8b0.  v6:= (`int`) v7 @kind l2i;
  #L40c8b2.  call temp:= `a`(v5, v6) @signature `Ln/c/a/h;.a:(I)Ln/c/a/h;` @kind virtual;
  #L40c8b8.  v6:= temp @kind object;
  #L40c8ba.  return v6 @kind object;
  #L40c8bc.  v6:= lcmp(v7, v3);
  #L40c8c0.  if v6 != 0 then goto L40c8c6;
  #L40c8c4.  v7:= v1 @kind wide;
  #L40c8c6.  v6:= v5.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40c8ca.  v6:= v6 %% 12;
  #L40c8ce.  v0:= (`long`) v6 @kind i2l;
  #L40c8d0.  v7:= v7 - v0 @kind long;
  #L40c8d2.  call temp:= `a`(v5, v7) @signature `Ln/c/a/h;.a:(J)Ln/c/a/h;` @kind virtual;
  #L40c8d8.  v6:= temp @kind object;
  #L40c8da.  return v6 @kind object;
  #L40c8dc.  v6:= v5.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40c8e0.  v6:= v6 %% 12;
  #L40c8e4.  v0:= (`long`) v6 @kind i2l;
  #L40c8e6.  v7:= v7 - v0 @kind long;
  #L40c8e8.  call temp:= `a`(v5, v7) @signature `Ln/c/a/h;.a:(J)Ln/c/a/h;` @kind virtual;
  #L40c8ee.  v6:= temp @kind object;
  #L40c8f0.  return v6 @kind object;
  #L40c8f2.  v6:= v5.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40c8f6.  v6:= v6 * 60;
  #L40c8fa.  v0:= v5.`n.c.a.h.c` @type ^`byte` @kind byte;
  #L40c8fe.  v6:= v6 + v0 @kind int;
  #L40c900.  v0:= (`long`) v6 @kind i2l;
  #L40c902.  v7:= v7 - v0 @kind long;
  #L40c904.  call temp:= `b`(v5, v7) @signature `Ln/c/a/h;.b:(J)Ln/c/a/h;` @kind virtual;
  #L40c90a.  v6:= temp @kind object;
  #L40c90c.  return v6 @kind object;
  #L40c90e.  v6:= (`int`) v7 @kind l2i;
  #L40c910.  call temp:= `b`(v5, v6) @signature `Ln/c/a/h;.b:(I)Ln/c/a/h;` @kind virtual;
  #L40c916.  v6:= temp @kind object;
  #L40c918.  return v6 @kind object;
  #L40c91a.  call temp:= `v`(v5) @signature `Ln/c/a/h;.v:()I` @kind virtual;
  #L40c920.  v6:= temp;
  #L40c922.  v0:= (`long`) v6 @kind i2l;
  #L40c924.  v7:= v7 - v0 @kind long;
  #L40c926.  call temp:= `d`(v5, v7) @signature `Ln/c/a/h;.d:(J)Ln/c/a/h;` @kind virtual;
  #L40c92c.  v6:= temp @kind object;
  #L40c92e.  return v6 @kind object;
  #L40c930.  v6:= (`int`) v7 @kind l2i;
  #L40c932.  call temp:= `d`(v5, v6) @signature `Ln/c/a/h;.d:(I)Ln/c/a/h;` @kind virtual;
  #L40c938.  v6:= temp @kind object;
  #L40c93a.  return v6 @kind object;
  #L40c93c.  v0:= 1000000L;
  #L40c942.  v7:= v7 * v0 @kind long;
  #L40c946.  call temp:= `e`(v7) @signature `Ln/c/a/h;.e:(J)Ln/c/a/h;` @kind static;
  #L40c94c.  v6:= temp @kind object;
  #L40c94e.  return v6 @kind object;
  #L40c950.  v6:= (`int`) v7 @kind l2i;
  #L40c952.  v7:= 1000000I;
  #L40c958.  v6:= v6 * v7 @kind int;
  #L40c95c.  call temp:= `c`(v5, v6) @signature `Ln/c/a/h;.c:(I)Ln/c/a/h;` @kind virtual;
  #L40c962.  v6:= temp @kind object;
  #L40c964.  return v6 @kind object;
  #L40c966.  v0:= 1000L;
  #L40c96a.  v7:= v7 * v0 @kind long;
  #L40c96e.  call temp:= `e`(v7) @signature `Ln/c/a/h;.e:(J)Ln/c/a/h;` @kind static;
  #L40c974.  v6:= temp @kind object;
  #L40c976.  return v6 @kind object;
  #L40c978.  v6:= (`int`) v7 @kind l2i;
  #L40c97a.  v6:= v6 * 1000;
  #L40c97e.  call temp:= `c`(v5, v6) @signature `Ln/c/a/h;.c:(I)Ln/c/a/h;` @kind virtual;
  #L40c984.  v6:= temp @kind object;
  #L40c986.  return v6 @kind object;
  #L40c988.  call temp:= `e`(v7) @signature `Ln/c/a/h;.e:(J)Ln/c/a/h;` @kind static;
  #L40c98e.  v6:= temp @kind object;
  #L40c990.  return v6 @kind object;
  #L40c992.  v6:= (`int`) v7 @kind l2i;
  #L40c994.  call temp:= `c`(v5, v6) @signature `Ln/c/a/h;.c:(I)Ln/c/a/h;` @kind virtual;
  #L40c99a.  v6:= temp @kind object;
  #L40c99c.  return v6 @kind object;
  #L40c99e.  call temp:= `a`(v6, v5, v7) @signature `Ln/c/a/x/i;.a:(Ln/c/a/x/d;J)Ln/c/a/x/d;` @kind interface;
  #L40c9a4.  v6:= temp @kind object;
  #L40c9a6.  v6:= (`n.c.a.h`) v6 @kind object;
  #L40c9aa.  return v6 @kind object;
  #L40c9ac.  switch v0
                  | 1 => goto L40c992
                  | 2 => goto L40c988
                  | 3 => goto L40c978
                  | 4 => goto L40c966
                  | 5 => goto L40c950
                  | 6 => goto L40c93c
                  | 7 => goto L40c930
                  | 8 => goto L40c91a
                  | 9 => goto L40c90e
                  | 10 => goto L40c8f2
                  | 11 => goto L40c8dc
                  | 12 => goto L40c8bc
                  | 13 => goto L40c8b0
                  | 14 => goto L40c896
                  | 15 => goto L40c87c
                  | else => goto L40c84e;
}
procedure `n.c.a.l` `a`(`n.c.a.h` v0 @kind this, `n.c.a.r` v1 @kind object) @signature `Ln/c/a/h;.a:(Ln/c/a/r;)Ln/c/a/l;` @AccessFlag PUBLIC {
    temp;

  #L40caf0.  call temp:= `a`(v0, v1) @signature `Ln/c/a/l;.a:(Ln/c/a/h;Ln/c/a/r;)Ln/c/a/l;` @kind static;
  #L40caf6.  v1:= temp @kind object;
  #L40caf8.  return v1 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.h` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/h;.a:(JLn/c/a/x/l;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40cb34.  call temp:= `a`(v0, v1, v3) @signature `Ln/c/a/h;.a:(JLn/c/a/x/l;)Ln/c/a/h;` @kind virtual;
  #L40cb3a.  v1:= temp @kind object;
  #L40cb3c.  return v1 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.h` v3 @kind this, `n.c.a.x.d` v4 @kind object) @signature `Ln/c/a/h;.a:(Ln/c/a/x/d;)Ln/c/a/x/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40cb0c.  v0:= `@@n.c.a.x.a.e` @type ^`n.c.a.x.a` @kind object;
  #L40cb10.  call temp:= `u`(v3) @signature `Ln/c/a/h;.u:()J` @kind virtual;
  #L40cb16.  v1:= temp @kind wide;
  #L40cb18.  call temp:= `a`(v4, v0, v1) @signature `Ln/c/a/x/d;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @kind interface;
  #L40cb1e.  v4:= temp @kind object;
  #L40cb20.  return v4 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.h` v0 @kind this, `n.c.a.x.f` v1 @kind object) @signature `Ln/c/a/h;.a:(Ln/c/a/x/f;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40cb6c.  call temp:= `a`(v0, v1) @signature `Ln/c/a/h;.a:(Ln/c/a/x/f;)Ln/c/a/h;` @kind virtual;
  #L40cb72.  v1:= temp @kind object;
  #L40cb74.  return v1 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.h` v0 @kind this, `n.c.a.x.i` v1 @kind object, `long` v2 ) @signature `Ln/c/a/h;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40cb88.  call temp:= `a`(v0, v1, v2) @signature `Ln/c/a/h;.a:(Ln/c/a/x/i;J)Ln/c/a/h;` @kind virtual;
  #L40cb8e.  v1:= temp @kind object;
  #L40cb90.  return v1 @kind object;
}
procedure `n.c.a.x.n` `a`(`n.c.a.h` v0 @kind this, `n.c.a.x.i` v1 @kind object) @signature `Ln/c/a/h;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @AccessFlag PUBLIC {
    temp;

  #L40cba4.  call temp:= `a`(v0, v1) @signature `Ln/c/a/w/c;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @kind super;
  #L40cbaa.  v1:= temp @kind object;
  #L40cbac.  return v1 @kind object;
}
procedure `void` `a`(`n.c.a.h` v1 @kind this, `java.io.DataOutput` v2 @kind object) @signature `Ln/c/a/h;.a:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L40cc6c.  v0:= v1.`n.c.a.h.e` @type ^`int`;
  #L40cc70.  if v0 != 0 then goto L40ccbc;
  #L40cc74.  v0:= v1.`n.c.a.h.d` @type ^`byte` @kind byte;
  #L40cc78.  if v0 != 0 then goto L40cc9a;
  #L40cc7c.  v0:= v1.`n.c.a.h.c` @type ^`byte` @kind byte;
  #L40cc80.  if v0 != 0 then goto L40cc8a;
  #L40cc84.  v0:= v1.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40cc88.  goto L40ccb2;
  #L40cc8a.  v0:= v1.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40cc8e.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L40cc94.  v0:= v1.`n.c.a.h.c` @type ^`byte` @kind byte;
  #L40cc98.  goto L40ccb2;
  #L40cc9a.  v0:= v1.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40cc9e.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L40cca4.  v0:= v1.`n.c.a.h.c` @type ^`byte` @kind byte;
  #L40cca8.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L40ccae.  v0:= v1.`n.c.a.h.d` @type ^`byte` @kind byte;
  #L40ccb2.  v0:= ~v0 @kind int;
  #L40ccb4.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L40ccba.  goto L40cce4;
  #L40ccbc.  v0:= v1.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40ccc0.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L40ccc6.  v0:= v1.`n.c.a.h.c` @type ^`byte` @kind byte;
  #L40ccca.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L40ccd0.  v0:= v1.`n.c.a.h.d` @type ^`byte` @kind byte;
  #L40ccd4.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L40ccda.  v0:= v1.`n.c.a.h.e` @type ^`int`;
  #L40ccde.  call `writeInt`(v2, v0) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L40cce4.  return @kind void;
}
procedure `n.c.a.h` `b`(`n.c.a.h` v3 @kind this, `int` v4 ) @signature `Ln/c/a/h;.b:(I)Ln/c/a/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40ca3c.  v0:= v3.`n.c.a.h.c` @type ^`byte` @kind byte;
  #L40ca40.  if v0 != v4 then goto L40ca46;
  #L40ca44.  return v3 @kind object;
  #L40ca46.  v0:= `@@n.c.a.x.a.l` @type ^`n.c.a.x.a` @kind object;
  #L40ca4a.  v1:= (`long`) v4 @kind i2l;
  #L40ca4c.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40ca52.  v0:= v3.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40ca56.  v1:= v3.`n.c.a.h.d` @type ^`byte` @kind byte;
  #L40ca5a.  v2:= v3.`n.c.a.h.e` @type ^`int`;
  #L40ca5e.  call temp:= `a`(v0, v4, v1, v2) @signature `Ln/c/a/h;.a:(IIII)Ln/c/a/h;` @kind static;
  #L40ca64.  v4:= temp @kind object;
  #L40ca66.  return v4 @kind object;
}
procedure `n.c.a.h` `b`(`n.c.a.h` v3 @kind this, `long` v4 ) @signature `Ln/c/a/h;.b:(J)Ln/c/a/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40c638.  v0:= 0L;
  #L40c63c.  v2:= lcmp(v4, v0);
  #L40c640.  if v2 != 0 then goto L40c646;
  #L40c644.  return v3 @kind object;
  #L40c646.  v0:= v3.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40c64a.  v0:= v0 * 60;
  #L40c64e.  v1:= v3.`n.c.a.h.c` @type ^`byte` @kind byte;
  #L40c652.  v0:= v0 + v1 @kind int;
  #L40c654.  v1:= 1440L;
  #L40c658.  v4:= v4 %% v1 @kind long;
  #L40c65a.  v5:= (`int`) v4 @kind l2i;
  #L40c65c.  v5:= v5 + v0 @kind int;
  #L40c65e.  v5:= v5 + 1440;
  #L40c662.  v5:= v5 %% 1440;
  #L40c666.  if v0 != v5 then goto L40c66c;
  #L40c66a.  return v3 @kind object;
  #L40c66c.  v4:= v5 / 60;
  #L40c670.  v5:= v5 %% 60;
  #L40c674.  v0:= v3.`n.c.a.h.d` @type ^`byte` @kind byte;
  #L40c678.  v1:= v3.`n.c.a.h.e` @type ^`int`;
  #L40c67c.  call temp:= `a`(v4, v5, v0, v1) @signature `Ln/c/a/h;.a:(IIII)Ln/c/a/h;` @kind static;
  #L40c682.  v4:= temp @kind object;
  #L40c684.  return v4 @kind object;
}
procedure `n.c.a.h` `b`(`n.c.a.h` v2 @kind this, `long` v3 , `n.c.a.x.l` v5 @kind object) @signature `Ln/c/a/h;.b:(JLn/c/a/x/l;)Ln/c/a/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40c4dc.  v0:= instanceof @variable v5 @type ^`n.c.a.x.b` @kind boolean;
  #L40c4e0.  if v0 == 0 then goto L40c5a8;
  #L40c4e4.  v0:= v5 @kind object;
  #L40c4e6.  v0:= (`n.c.a.x.b`) v0 @kind object;
  #L40c4ea.  v1:= `@@n.c.a.h$b.b` @type ^`int`[] @kind object;
  #L40c4ee.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40c4f4.  v0:= temp;
  #L40c4f6.  v0:= v1[v0];
  #L40c4fa.  goto L40c5b8;
  #L40c500.  v3:= new `n.c.a.x.m`;
  #L40c504.  v4:= new `java.lang.StringBuilder`;
  #L40c508.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40c50e.  v0:= "Unsupported unit: " @kind object;
  #L40c512.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40c518.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40c51e.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40c524.  v4:= temp @kind object;
  #L40c526.  call `<init>`(v3, v4) @signature `Ln/c/a/x/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40c52c.  throw v3;
  #L40c52e.  v0:= 2L;
  #L40c532.  v3:= v3 %% v0 @kind long;
  #L40c534.  v0:= 12L;
  #L40c538.  v3:= v3 * v0 @kind long;
  #L40c53c.  call temp:= `a`(v2, v3) @signature `Ln/c/a/h;.a:(J)Ln/c/a/h;` @kind virtual;
  #L40c542.  v3:= temp @kind object;
  #L40c544.  return v3 @kind object;
  #L40c546.  call temp:= `a`(v2, v3) @signature `Ln/c/a/h;.a:(J)Ln/c/a/h;` @kind virtual;
  #L40c54c.  v3:= temp @kind object;
  #L40c54e.  return v3 @kind object;
  #L40c550.  call temp:= `b`(v2, v3) @signature `Ln/c/a/h;.b:(J)Ln/c/a/h;` @kind virtual;
  #L40c556.  v3:= temp @kind object;
  #L40c558.  return v3 @kind object;
  #L40c55a.  call temp:= `d`(v2, v3) @signature `Ln/c/a/h;.d:(J)Ln/c/a/h;` @kind virtual;
  #L40c560.  v3:= temp @kind object;
  #L40c562.  return v3 @kind object;
  #L40c564.  v0:= 86400000L;
  #L40c56a.  v3:= v3 %% v0 @kind long;
  #L40c56c.  v0:= 1000000L;
  #L40c572.  v3:= v3 * v0 @kind long;
  #L40c576.  call temp:= `c`(v2, v3) @signature `Ln/c/a/h;.c:(J)Ln/c/a/h;` @kind virtual;
  #L40c57c.  v3:= temp @kind object;
  #L40c57e.  return v3 @kind object;
  #L40c580.  v0:= 86400000000L;
  #L40c58a.  v3:= v3 %% v0 @kind long;
  #L40c58c.  v0:= 1000L;
  #L40c590.  v3:= v3 * v0 @kind long;
  #L40c594.  call temp:= `c`(v2, v3) @signature `Ln/c/a/h;.c:(J)Ln/c/a/h;` @kind virtual;
  #L40c59a.  v3:= temp @kind object;
  #L40c59c.  return v3 @kind object;
  #L40c59e.  call temp:= `c`(v2, v3) @signature `Ln/c/a/h;.c:(J)Ln/c/a/h;` @kind virtual;
  #L40c5a4.  v3:= temp @kind object;
  #L40c5a6.  return v3 @kind object;
  #L40c5a8.  call temp:= `a`(v5, v2, v3) @signature `Ln/c/a/x/l;.a:(Ln/c/a/x/d;J)Ln/c/a/x/d;` @kind interface;
  #L40c5ae.  v3:= temp @kind object;
  #L40c5b0.  v3:= (`n.c.a.h`) v3 @kind object;
  #L40c5b4.  return v3 @kind object;
  #L40c5b6.  
  #L40c5b8.  switch v0
                  | 1 => goto L40c59e
                  | 2 => goto L40c580
                  | 3 => goto L40c564
                  | 4 => goto L40c55a
                  | 5 => goto L40c550
                  | 6 => goto L40c546
                  | 7 => goto L40c52e
                  | else => goto L40c500;
}
procedure `n.c.a.x.d` `b`(`n.c.a.h` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/h;.b:(JLn/c/a/x/l;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40cb50.  call temp:= `b`(v0, v1, v3) @signature `Ln/c/a/h;.b:(JLn/c/a/x/l;)Ln/c/a/h;` @kind virtual;
  #L40cb56.  v1:= temp @kind object;
  #L40cb58.  return v1 @kind object;
}
procedure `boolean` `b`(`n.c.a.h` v1 @kind this, `n.c.a.x.i` v2 @kind object) @signature `Ln/c/a/h;.b:(Ln/c/a/x/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40bc80.  v0:= instanceof @variable v2 @type ^`n.c.a.x.a` @kind boolean;
  #L40bc84.  if v0 == 0 then goto L40bc92;
  #L40bc88.  call temp:= `e`(v2) @signature `Ln/c/a/x/i;.e:()Z` @kind interface;
  #L40bc8e.  v2:= temp;
  #L40bc90.  return v2;
  #L40bc92.  if v2 == 0 then goto L40bca6;
  #L40bc96.  call temp:= `a`(v2, v1) @signature `Ln/c/a/x/i;.a:(Ln/c/a/x/e;)Z` @kind interface;
  #L40bc9c.  v2:= temp;
  #L40bc9e.  if v2 == 0 then goto L40bca6;
  #L40bca2.  v2:= 1I;
  #L40bca4.  goto L40bca8;
  #L40bca6.  v2:= 0I;
  #L40bca8.  return v2;
}
procedure `int` `c`(`n.c.a.h` v1 @kind this, `n.c.a.x.i` v2 @kind object) @signature `Ln/c/a/h;.c:(Ln/c/a/x/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40bd3c.  v0:= instanceof @variable v2 @type ^`n.c.a.x.a` @kind boolean;
  #L40bd40.  if v0 == 0 then goto L40bd4e;
  #L40bd44.  call temp:= `e`(v1, v2) @signature `Ln/c/a/h;.e:(Ln/c/a/x/i;)I` @kind direct;
  #L40bd4a.  v2:= temp;
  #L40bd4c.  return v2;
  #L40bd4e.  call temp:= `c`(v1, v2) @signature `Ln/c/a/w/c;.c:(Ln/c/a/x/i;)I` @kind super;
  #L40bd54.  v2:= temp;
  #L40bd56.  return v2;
}
procedure `n.c.a.h` `c`(`n.c.a.h` v3 @kind this, `int` v4 ) @signature `Ln/c/a/h;.c:(I)Ln/c/a/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40ca78.  v0:= v3.`n.c.a.h.e` @type ^`int`;
  #L40ca7c.  if v0 != v4 then goto L40ca82;
  #L40ca80.  return v3 @kind object;
  #L40ca82.  v0:= `@@n.c.a.x.a.d` @type ^`n.c.a.x.a` @kind object;
  #L40ca86.  v1:= (`long`) v4 @kind i2l;
  #L40ca88.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40ca8e.  v0:= v3.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40ca92.  v1:= v3.`n.c.a.h.c` @type ^`byte` @kind byte;
  #L40ca96.  v2:= v3.`n.c.a.h.d` @type ^`byte` @kind byte;
  #L40ca9a.  call temp:= `a`(v0, v1, v2, v4) @signature `Ln/c/a/h;.a:(IIII)Ln/c/a/h;` @kind static;
  #L40caa0.  v4:= temp @kind object;
  #L40caa2.  return v4 @kind object;
}
procedure `n.c.a.h` `c`(`n.c.a.h` v8 @kind this, `long` v9 ) @signature `Ln/c/a/h;.c:(J)Ln/c/a/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L40c698.  v0:= 0L;
  #L40c69c.  v2:= lcmp(v9, v0);
  #L40c6a0.  if v2 != 0 then goto L40c6a6;
  #L40c6a4.  return v8 @kind object;
  #L40c6a6.  call temp:= `u`(v8) @signature `Ln/c/a/h;.u:()J` @kind virtual;
  #L40c6ac.  v0:= temp @kind wide;
  #L40c6ae.  v2:= 86400000000000L;
  #L40c6b8.  v9:= v9 %% v2 @kind long;
  #L40c6ba.  v9:= v9 + v0 @kind long;
  #L40c6bc.  v9:= v9 + v2 @kind long;
  #L40c6be.  v9:= v9 %% v2 @kind long;
  #L40c6c0.  v2:= lcmp(v0, v9);
  #L40c6c4.  if v2 != 0 then goto L40c6ca;
  #L40c6c8.  return v8 @kind object;
  #L40c6ca.  v0:= 3600000000000L;
  #L40c6d4.  v0:= v9 / v0 @kind long;
  #L40c6d8.  v1:= (`int`) v0 @kind l2i;
  #L40c6da.  v2:= 60000000000L;
  #L40c6e4.  v2:= v9 / v2 @kind long;
  #L40c6e8.  v4:= 60L;
  #L40c6ec.  v2:= v2 %% v4 @kind long;
  #L40c6ee.  v0:= (`int`) v2 @kind l2i;
  #L40c6f0.  v2:= 1000000000L;
  #L40c6f6.  v6:= v9 / v2 @kind long;
  #L40c6fa.  v6:= v6 %% v4 @kind long;
  #L40c6fc.  v4:= (`int`) v6 @kind l2i;
  #L40c6fe.  v9:= v9 %% v2 @kind long;
  #L40c700.  v10:= (`int`) v9 @kind l2i;
  #L40c702.  call temp:= `a`(v1, v0, v4, v10) @signature `Ln/c/a/h;.a:(IIII)Ln/c/a/h;` @kind static;
  #L40c708.  v9:= temp @kind object;
  #L40c70a.  return v9 @kind object;
}
procedure `int` `compareTo`(`n.c.a.h` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Ln/c/a/h;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40bcbc.  v1:= (`n.c.a.h`) v1 @kind object;
  #L40bcc0.  call temp:= `a`(v0, v1) @signature `Ln/c/a/h;.a:(Ln/c/a/h;)I` @kind virtual;
  #L40bcc6.  v1:= temp;
  #L40bcc8.  return v1;
}
procedure `long` `d`(`n.c.a.h` v4 @kind this, `n.c.a.x.i` v5 @kind object) @signature `Ln/c/a/h;.d:(Ln/c/a/x/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40c148.  v0:= instanceof @variable v5 @type ^`n.c.a.x.a` @kind boolean;
  #L40c14c.  if v0 == 0 then goto L40c186;
  #L40c150.  v0:= `@@n.c.a.x.a.e` @type ^`n.c.a.x.a` @kind object;
  #L40c154.  if v5 != v0 then goto L40c162;
  #L40c158.  call temp:= `u`(v4) @signature `Ln/c/a/h;.u:()J` @kind virtual;
  #L40c15e.  v0:= temp @kind wide;
  #L40c160.  return v0 @kind wide;
  #L40c162.  v0:= `@@n.c.a.x.a.g` @type ^`n.c.a.x.a` @kind object;
  #L40c166.  if v5 != v0 then goto L40c17a;
  #L40c16a.  call temp:= `u`(v4) @signature `Ln/c/a/h;.u:()J` @kind virtual;
  #L40c170.  v0:= temp @kind wide;
  #L40c172.  v2:= 1000L;
  #L40c176.  v0:= v0 / v2 @kind long;
  #L40c178.  return v0 @kind wide;
  #L40c17a.  call temp:= `e`(v4, v5) @signature `Ln/c/a/h;.e:(Ln/c/a/x/i;)I` @kind direct;
  #L40c180.  v5:= temp;
  #L40c182.  v0:= (`long`) v5 @kind i2l;
  #L40c184.  return v0 @kind wide;
  #L40c186.  call temp:= `b`(v5, v4) @signature `Ln/c/a/x/i;.b:(Ln/c/a/x/e;)J` @kind interface;
  #L40c18c.  v0:= temp @kind wide;
  #L40c18e.  return v0 @kind wide;
}
procedure `n.c.a.h` `d`(`n.c.a.h` v3 @kind this, `int` v4 ) @signature `Ln/c/a/h;.d:(I)Ln/c/a/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40cab4.  v0:= v3.`n.c.a.h.d` @type ^`byte` @kind byte;
  #L40cab8.  if v0 != v4 then goto L40cabe;
  #L40cabc.  return v3 @kind object;
  #L40cabe.  v0:= `@@n.c.a.x.a.j` @type ^`n.c.a.x.a` @kind object;
  #L40cac2.  v1:= (`long`) v4 @kind i2l;
  #L40cac4.  call temp:= `b`(v0, v1) @signature `Ln/c/a/x/a;.b:(J)J` @kind virtual;
  #L40caca.  v0:= v3.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40cace.  v1:= v3.`n.c.a.h.c` @type ^`byte` @kind byte;
  #L40cad2.  v2:= v3.`n.c.a.h.e` @type ^`int`;
  #L40cad6.  call temp:= `a`(v0, v1, v4, v2) @signature `Ln/c/a/h;.a:(IIII)Ln/c/a/h;` @kind static;
  #L40cadc.  v4:= temp @kind object;
  #L40cade.  return v4 @kind object;
}
procedure `n.c.a.h` `d`(`n.c.a.h` v3 @kind this, `long` v4 ) @signature `Ln/c/a/h;.d:(J)Ln/c/a/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40c71c.  v0:= 0L;
  #L40c720.  v2:= lcmp(v4, v0);
  #L40c724.  if v2 != 0 then goto L40c72a;
  #L40c728.  return v3 @kind object;
  #L40c72a.  v0:= v3.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40c72e.  v0:= v0 * 3600;
  #L40c732.  v1:= v3.`n.c.a.h.c` @type ^`byte` @kind byte;
  #L40c736.  v1:= v1 * 60;
  #L40c73a.  v0:= v0 + v1 @kind int;
  #L40c73c.  v1:= v3.`n.c.a.h.d` @type ^`byte` @kind byte;
  #L40c740.  v0:= v0 + v1 @kind int;
  #L40c742.  v1:= 86400L;
  #L40c748.  v4:= v4 %% v1 @kind long;
  #L40c74a.  v5:= (`int`) v4 @kind l2i;
  #L40c74c.  v5:= v5 + v0 @kind int;
  #L40c74e.  v4:= 86400I;
  #L40c754.  v5:= v5 + v4 @kind int;
  #L40c756.  v5:= v5 %% v4 @kind int;
  #L40c758.  if v0 != v5 then goto L40c75e;
  #L40c75c.  return v3 @kind object;
  #L40c75e.  v4:= v5 / 3600;
  #L40c762.  v0:= v5 / 60;
  #L40c766.  v0:= v0 %% 60;
  #L40c76a.  v5:= v5 %% 60;
  #L40c76e.  v1:= v3.`n.c.a.h.e` @type ^`int`;
  #L40c772.  call temp:= `a`(v4, v0, v5, v1) @signature `Ln/c/a/h;.a:(IIII)Ln/c/a/h;` @kind static;
  #L40c778.  v4:= temp @kind object;
  #L40c77a.  return v4 @kind object;
}
procedure `int` `e`(`n.c.a.h` v1 @kind this) @signature `Ln/c/a/h;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40bef4.  v0:= v1.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40bef8.  return v0;
}
procedure `boolean` `equals`(`n.c.a.h` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Ln/c/a/h;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40bc20.  v0:= 1I;
  #L40bc22.  if v4 != v5 then goto L40bc28;
  #L40bc26.  return v0;
  #L40bc28.  v1:= instanceof @variable v5 @type ^`n.c.a.h` @kind boolean;
  #L40bc2c.  v2:= 0I;
  #L40bc2e.  if v1 == 0 then goto L40bc6c;
  #L40bc32.  v5:= (`n.c.a.h`) v5 @kind object;
  #L40bc36.  v1:= v4.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40bc3a.  v3:= v5.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40bc3e.  if v1 != v3 then goto L40bc68;
  #L40bc42.  v1:= v4.`n.c.a.h.c` @type ^`byte` @kind byte;
  #L40bc46.  v3:= v5.`n.c.a.h.c` @type ^`byte` @kind byte;
  #L40bc4a.  if v1 != v3 then goto L40bc68;
  #L40bc4e.  v1:= v4.`n.c.a.h.d` @type ^`byte` @kind byte;
  #L40bc52.  v3:= v5.`n.c.a.h.d` @type ^`byte` @kind byte;
  #L40bc56.  if v1 != v3 then goto L40bc68;
  #L40bc5a.  v1:= v4.`n.c.a.h.e` @type ^`int`;
  #L40bc5e.  v5:= v5.`n.c.a.h.e` @type ^`int`;
  #L40bc62.  if v1 != v5 then goto L40bc68;
  #L40bc66.  goto L40bc6a;
  #L40bc68.  v0:= 0I;
  #L40bc6a.  return v0;
  #L40bc6c.  return v2;
}
procedure `int` `h`(`n.c.a.h` v1 @kind this) @signature `Ln/c/a/h;.h:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40bf0c.  v0:= v1.`n.c.a.h.c` @type ^`byte` @kind byte;
  #L40bf10.  return v0;
}
procedure `int` `hashCode`(`n.c.a.h` v4 @kind this) @signature `Ln/c/a/h;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40bf54.  call temp:= `u`(v4) @signature `Ln/c/a/h;.u:()J` @kind virtual;
  #L40bf5a.  v0:= temp @kind wide;
  #L40bf5c.  v2:= 32I;
  #L40bf60.  v2:= v0 ^>> v2 @kind long;
  #L40bf64.  v0:= v0 ^~ v2 @kind long;
  #L40bf66.  v1:= (`int`) v0 @kind l2i;
  #L40bf68.  return v1;
}
procedure `int` `s`(`n.c.a.h` v1 @kind this) @signature `Ln/c/a/h;.s:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40bf24.  v0:= v1.`n.c.a.h.e` @type ^`int`;
  #L40bf28.  return v0;
}
procedure `int` `t`(`n.c.a.h` v1 @kind this) @signature `Ln/c/a/h;.t:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40bf3c.  v0:= v1.`n.c.a.h.d` @type ^`byte` @kind byte;
  #L40bf40.  return v0;
}
procedure `java.lang.String` `toString`(`n.c.a.h` v8 @kind this) @signature `Ln/c/a/h;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L40c064.  v0:= new `java.lang.StringBuilder`;
  #L40c068.  v1:= 18I;
  #L40c06c.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L40c072.  v1:= v8.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40c076.  v2:= v8.`n.c.a.h.c` @type ^`byte` @kind byte;
  #L40c07a.  v3:= v8.`n.c.a.h.d` @type ^`byte` @kind byte;
  #L40c07e.  v4:= v8.`n.c.a.h.e` @type ^`int`;
  #L40c082.  v5:= 10I;
  #L40c086.  if v1 >= v5 then goto L40c090;
  #L40c08a.  v6:= "0" @kind object;
  #L40c08e.  goto L40c094;
  #L40c090.  v6:= "" @kind object;
  #L40c094.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40c09a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L40c0a0.  v1:= ":0" @kind object;
  #L40c0a4.  v6:= ":" @kind object;
  #L40c0a8.  if v2 >= v5 then goto L40c0b0;
  #L40c0ac.  v7:= v1 @kind object;
  #L40c0ae.  goto L40c0b2;
  #L40c0b0.  v7:= v6 @kind object;
  #L40c0b2.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40c0b8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L40c0be.  if v3 > 0 then goto L40c0c6;
  #L40c0c2.  if v4 <= 0 then goto L40c12e;
  #L40c0c6.  if v3 >= v5 then goto L40c0cc;
  #L40c0ca.  goto L40c0ce;
  #L40c0cc.  v1:= v6 @kind object;
  #L40c0ce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40c0d4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L40c0da.  if v4 <= 0 then goto L40c12e;
  #L40c0de.  v1:= 46I;
  #L40c0e2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L40c0e8.  v1:= 1000000I;
  #L40c0ee.  v2:= v4 %% v1 @kind int;
  #L40c0f2.  v3:= 1I;
  #L40c0f4.  if v2 != 0 then goto L40c116;
  #L40c0f8.  v4:= v4 / v1 @kind int;
  #L40c0fa.  v4:= v4 + 1000;
  #L40c0fe.  call temp:= `toString`(v4) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L40c104.  v1:= temp @kind object;
  #L40c106.  call temp:= `substring`(v1, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L40c10c.  v1:= temp @kind object;
  #L40c10e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40c114.  goto L40c12e;
  #L40c116.  v2:= v4 %% 1000;
  #L40c11a.  if v2 != 0 then goto L40c124;
  #L40c11e.  v4:= v4 / 1000;
  #L40c122.  goto L40c12a;
  #L40c124.  v1:= 1000000000I;
  #L40c12a.  v4:= v4 + v1 @kind int;
  #L40c12c.  goto L40c0fe;
  #L40c12e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40c134.  v0:= temp @kind object;
  #L40c136.  return v0 @kind object;
}
procedure `long` `u`(`n.c.a.h` v6 @kind this) @signature `Ln/c/a/h;.u:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L40c1a0.  v0:= v6.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40c1a4.  v0:= (`long`) v0 @kind i2l;
  #L40c1a6.  v2:= 3600000000000L;
  #L40c1b0.  v0:= v0 * v2 @kind long;
  #L40c1b4.  v2:= v6.`n.c.a.h.c` @type ^`byte` @kind byte;
  #L40c1b8.  v2:= (`long`) v2 @kind i2l;
  #L40c1ba.  v4:= 60000000000L;
  #L40c1c4.  v2:= v2 * v4 @kind long;
  #L40c1c8.  v0:= v0 + v2 @kind long;
  #L40c1ca.  v2:= v6.`n.c.a.h.d` @type ^`byte` @kind byte;
  #L40c1ce.  v2:= (`long`) v2 @kind i2l;
  #L40c1d0.  v4:= 1000000000L;
  #L40c1d6.  v2:= v2 * v4 @kind long;
  #L40c1da.  v0:= v0 + v2 @kind long;
  #L40c1dc.  v2:= v6.`n.c.a.h.e` @type ^`int`;
  #L40c1e0.  v2:= (`long`) v2 @kind i2l;
  #L40c1e2.  v0:= v0 + v2 @kind long;
  #L40c1e4.  return v0 @kind wide;
}
procedure `int` `v`(`n.c.a.h` v2 @kind this) @signature `Ln/c/a/h;.v:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40bf7c.  v0:= v2.`n.c.a.h.b` @type ^`byte` @kind byte;
  #L40bf80.  v0:= v0 * 3600;
  #L40bf84.  v1:= v2.`n.c.a.h.c` @type ^`byte` @kind byte;
  #L40bf88.  v1:= v1 * 60;
  #L40bf8c.  v0:= v0 + v1 @kind int;
  #L40bf8e.  v1:= v2.`n.c.a.h.d` @type ^`byte` @kind byte;
  #L40bf92.  v0:= v0 + v1 @kind int;
  #L40bf94.  return v0;
}
