record `n.c.a.k` @kind class @AccessFlag PUBLIC_FINAL extends `n.c.a.w.b` @kind class, `n.c.a.x.d` @kind interface, `n.c.a.x.f` @kind interface, `java.lang.Comparable` @kind interface, `java.io.Serializable` @kind interface {
  `n.c.a.g` `n.c.a.k.b` @AccessFlag PRIVATE_FINAL;
  `n.c.a.r` `n.c.a.k.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<clinit>`() @signature `Ln/c/a/k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L40e6a8.  v0:= `@@n.c.a.g.d` @type ^`n.c.a.g` @kind object;
  #L40e6ac.  v1:= `@@n.c.a.r.h` @type ^`n.c.a.r` @kind object;
  #L40e6b0.  call temp:= `c`(v0, v1) @signature `Ln/c/a/g;.c:(Ln/c/a/r;)Ln/c/a/k;` @kind virtual;
  #L40e6b6.  v0:= `@@n.c.a.g.e` @type ^`n.c.a.g` @kind object;
  #L40e6ba.  v1:= `@@n.c.a.r.g` @type ^`n.c.a.r` @kind object;
  #L40e6be.  call temp:= `c`(v0, v1) @signature `Ln/c/a/g;.c:(Ln/c/a/r;)Ln/c/a/k;` @kind virtual;
  #L40e6c4.  v0:= new `n.c.a.k$a`;
  #L40e6c8.  call `<init>`(v0) @signature `Ln/c/a/k$a;.<init>:()V` @kind direct;
  #L40e6ce.  v0:= new `n.c.a.k$b`;
  #L40e6d2.  call `<init>`(v0) @signature `Ln/c/a/k$b;.<init>:()V` @kind direct;
  #L40e6d8.  return @kind void;
}
procedure `void` `<init>`(`n.c.a.k` v1 @kind this, `n.c.a.g` v2 @kind object, `n.c.a.r` v3 @kind object) @signature `Ln/c/a/k;.<init>:(Ln/c/a/g;Ln/c/a/r;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L40e6ec.  call `<init>`(v1) @signature `Ln/c/a/w/b;.<init>:()V` @kind direct;
  #L40e6f2.  v0:= "dateTime" @kind object;
  #L40e6f6.  call temp:= `a`(v2, v0) @signature `Ln/c/a/w/d;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40e6fc.  v2:= (`n.c.a.g`) v2 @kind object;
  #L40e700.  v1.`n.c.a.k.b` @type ^`n.c.a.g` := v2 @kind object;
  #L40e704.  v2:= "offset" @kind object;
  #L40e708.  call temp:= `a`(v3, v2) @signature `Ln/c/a/w/d;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40e70e.  v3:= (`n.c.a.r`) v3 @kind object;
  #L40e712.  v1.`n.c.a.k.c` @type ^`n.c.a.r` := v3 @kind object;
  #L40e716.  return @kind void;
}
procedure `n.c.a.k` `a`(`java.io.DataInput` v1 @kind object) @signature `Ln/c/a/k;.a:(Ljava/io/DataInput;)Ln/c/a/k;` @AccessFlag STATIC {
    temp;
    v0;

  #L40e3d4.  call temp:= `a`(v1) @signature `Ln/c/a/g;.a:(Ljava/io/DataInput;)Ln/c/a/g;` @kind static;
  #L40e3da.  v0:= temp @kind object;
  #L40e3dc.  call temp:= `a`(v1) @signature `Ln/c/a/r;.a:(Ljava/io/DataInput;)Ln/c/a/r;` @kind static;
  #L40e3e2.  v1:= temp @kind object;
  #L40e3e4.  call temp:= `a`(v0, v1) @signature `Ln/c/a/k;.a:(Ln/c/a/g;Ln/c/a/r;)Ln/c/a/k;` @kind static;
  #L40e3ea.  v1:= temp @kind object;
  #L40e3ec.  return v1 @kind object;
}
procedure `n.c.a.k` `a`(`n.c.a.e` v2 @kind object, `n.c.a.q` v3 @kind object) @signature `Ln/c/a/k;.a:(Ln/c/a/e;Ln/c/a/q;)Ln/c/a/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L40e33c.  v0:= "instant" @kind object;
  #L40e340.  call temp:= `a`(v2, v0) @signature `Ln/c/a/w/d;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40e346.  v0:= "zone" @kind object;
  #L40e34a.  call temp:= `a`(v3, v0) @signature `Ln/c/a/w/d;.a:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L40e350.  call temp:= `e`(v3) @signature `Ln/c/a/q;.e:()Ln/c/a/y/f;` @kind virtual;
  #L40e356.  v3:= temp @kind object;
  #L40e358.  call temp:= `a`(v3, v2) @signature `Ln/c/a/y/f;.a:(Ln/c/a/e;)Ln/c/a/r;` @kind virtual;
  #L40e35e.  v3:= temp @kind object;
  #L40e360.  call temp:= `e`(v2) @signature `Ln/c/a/e;.e:()J` @kind virtual;
  #L40e366.  v0:= temp @kind wide;
  #L40e368.  call temp:= `h`(v2) @signature `Ln/c/a/e;.h:()I` @kind virtual;
  #L40e36e.  v2:= temp;
  #L40e370.  call temp:= `a`(v0, v2, v3) @signature `Ln/c/a/g;.a:(JILn/c/a/r;)Ln/c/a/g;` @kind static;
  #L40e376.  v2:= temp @kind object;
  #L40e378.  v0:= new `n.c.a.k`;
  #L40e37c.  call `<init>`(v0, v2, v3) @signature `Ln/c/a/k;.<init>:(Ln/c/a/g;Ln/c/a/r;)V` @kind direct;
  #L40e382.  return v0 @kind object;
}
procedure `n.c.a.k` `a`(`n.c.a.g` v1 @kind object, `n.c.a.r` v2 @kind object) @signature `Ln/c/a/k;.a:(Ln/c/a/g;Ln/c/a/r;)Ln/c/a/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L40e320.  v0:= new `n.c.a.k`;
  #L40e324.  call `<init>`(v0, v1, v2) @signature `Ln/c/a/k;.<init>:(Ln/c/a/g;Ln/c/a/r;)V` @kind direct;
  #L40e32a.  return v0 @kind object;
}
procedure `n.c.a.k` `a`(`n.c.a.x.e` v3 @kind object) @signature `Ln/c/a/k;.a:(Ln/c/a/x/e;)Ln/c/a/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L40e21c.  v0:= instanceof @variable v3 @type ^`n.c.a.k` @kind boolean;
  #L40e220.  if v0 == 0 then goto L40e22a;
  #L40e224.  v3:= (`n.c.a.k`) v3 @kind object;
  #L40e228.  return v3 @kind object;
  #L40e22a.  call temp:= `a`(v3) @signature `Ln/c/a/r;.a:(Ln/c/a/x/e;)Ln/c/a/r;` @kind static;
  #L40e230.  v0:= temp @kind object;
  #L40e232.  call temp:= `a`(v3) @signature `Ln/c/a/g;.a:(Ln/c/a/x/e;)Ln/c/a/g;` @kind static;
  #L40e238.  v1:= temp @kind object;
  #L40e23a.  call temp:= `a`(v1, v0) @signature `Ln/c/a/k;.a:(Ln/c/a/g;Ln/c/a/r;)Ln/c/a/k;` @kind static;
  #L40e240.  v3:= temp @kind object;
  #L40e242.  return v3 @kind object;
  #L40e244.  call temp:= `a`(v3) @signature `Ln/c/a/e;.a:(Ln/c/a/x/e;)Ln/c/a/e;` @kind static;
  #L40e24a.  v1:= temp @kind object;
  #L40e24c.  call temp:= `a`(v1, v0) @signature `Ln/c/a/k;.a:(Ln/c/a/e;Ln/c/a/q;)Ln/c/a/k;` @kind static;
  #L40e252.  v3:= temp @kind object;
  #L40e254.  return v3 @kind object;
  #L40e256.  v0:= new `n.c.a.b`;
  #L40e25a.  v1:= new `java.lang.StringBuilder`;
  #L40e25e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40e264.  v2:= "Unable to obtain OffsetDateTime from TemporalAccessor: " @kind object;
  #L40e268.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40e26e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40e274.  v2:= ", type " @kind object;
  #L40e278.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40e27e.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L40e284.  v3:= temp @kind object;
  #L40e286.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L40e28c.  v3:= temp @kind object;
  #L40e28e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40e294.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40e29a.  v3:= temp @kind object;
  #L40e29c.  call `<init>`(v0, v3) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40e2a2.  throw v0;
  catch `n.c.a.b` @[L40e22a..L40e232] goto L40e256;
  catch `n.c.a.b` @[L40e232..L40e242] goto L40e244;
  catch `n.c.a.b` @[L40e244..L40e254] goto L40e256;
}
procedure `n.c.a.k` `b`(`n.c.a.k` v1 @kind this, `n.c.a.g` v2 @kind object, `n.c.a.r` v3 @kind object) @signature `Ln/c/a/k;.b:(Ln/c/a/g;Ln/c/a/r;)Ln/c/a/k;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L40e400.  v0:= v1.`n.c.a.k.b` @type ^`n.c.a.g` @kind object;
  #L40e404.  if v0 != v2 then goto L40e41a;
  #L40e408.  v0:= v1.`n.c.a.k.c` @type ^`n.c.a.r` @kind object;
  #L40e40c.  call temp:= `equals`(v0, v3) @signature `Ln/c/a/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L40e412.  v0:= temp;
  #L40e414.  if v0 == 0 then goto L40e41a;
  #L40e418.  return v1 @kind object;
  #L40e41a.  v0:= new `n.c.a.k`;
  #L40e41e.  call `<init>`(v0, v2, v3) @signature `Ln/c/a/k;.<init>:(Ln/c/a/g;Ln/c/a/r;)V` @kind direct;
  #L40e424.  return v0 @kind object;
}
procedure `java.lang.Object` `readResolve`(`n.c.a.k` v2 @kind this) @signature `Ln/c/a/k;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L40e0a8.  v0:= new `java.io.InvalidObjectException`;
  #L40e0ac.  v1:= "Deserialization via serialization delegate" @kind object;
  #L40e0b0.  call `<init>`(v0, v1) @signature `Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40e0b6.  throw v0;
}
procedure `java.lang.Object` `writeReplace`(`n.c.a.k` v2 @kind this) @signature `Ln/c/a/k;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L40e0c8.  v0:= new `n.c.a.n`;
  #L40e0cc.  v1:= 69I;
  #L40e0d0.  call `<init>`(v0, v1, v2) @signature `Ln/c/a/n;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L40e0d6.  return v0 @kind object;
}
procedure `int` `a`(`n.c.a.k` v4 @kind this, `n.c.a.k` v5 @kind object) @signature `Ln/c/a/k;.a:(Ln/c/a/k;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40de84.  call temp:= `h`(v4) @signature `Ln/c/a/k;.h:()Ln/c/a/r;` @kind virtual;
  #L40de8a.  v0:= temp @kind object;
  #L40de8c.  call temp:= `h`(v5) @signature `Ln/c/a/k;.h:()Ln/c/a/r;` @kind virtual;
  #L40de92.  v1:= temp @kind object;
  #L40de94.  call temp:= `equals`(v0, v1) @signature `Ln/c/a/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L40de9a.  v0:= temp;
  #L40de9c.  if v0 == 0 then goto L40deba;
  #L40dea0.  call temp:= `u`(v4) @signature `Ln/c/a/k;.u:()Ln/c/a/g;` @kind virtual;
  #L40dea6.  v0:= temp @kind object;
  #L40dea8.  call temp:= `u`(v5) @signature `Ln/c/a/k;.u:()Ln/c/a/g;` @kind virtual;
  #L40deae.  v5:= temp @kind object;
  #L40deb0.  call temp:= `a`(v0, v5) @signature `Ln/c/a/g;.a:(Ln/c/a/u/c;)I` @kind virtual;
  #L40deb6.  v5:= temp;
  #L40deb8.  return v5;
  #L40deba.  call temp:= `s`(v4) @signature `Ln/c/a/k;.s:()J` @kind virtual;
  #L40dec0.  v0:= temp @kind wide;
  #L40dec2.  call temp:= `s`(v5) @signature `Ln/c/a/k;.s:()J` @kind virtual;
  #L40dec8.  v2:= temp @kind wide;
  #L40deca.  call temp:= `a`(v0, v2) @signature `Ln/c/a/w/d;.a:(JJ)I` @kind static;
  #L40ded0.  v0:= temp;
  #L40ded2.  if v0 != 0 then goto L40df14;
  #L40ded6.  call temp:= `v`(v4) @signature `Ln/c/a/k;.v:()Ln/c/a/h;` @kind virtual;
  #L40dedc.  v0:= temp @kind object;
  #L40dede.  call temp:= `s`(v0) @signature `Ln/c/a/h;.s:()I` @kind virtual;
  #L40dee4.  v0:= temp;
  #L40dee6.  call temp:= `v`(v5) @signature `Ln/c/a/k;.v:()Ln/c/a/h;` @kind virtual;
  #L40deec.  v1:= temp @kind object;
  #L40deee.  call temp:= `s`(v1) @signature `Ln/c/a/h;.s:()I` @kind virtual;
  #L40def4.  v1:= temp;
  #L40def6.  v0:= v0 - v1 @kind int;
  #L40def8.  if v0 != 0 then goto L40df14;
  #L40defc.  call temp:= `u`(v4) @signature `Ln/c/a/k;.u:()Ln/c/a/g;` @kind virtual;
  #L40df02.  v0:= temp @kind object;
  #L40df04.  call temp:= `u`(v5) @signature `Ln/c/a/k;.u:()Ln/c/a/g;` @kind virtual;
  #L40df0a.  v5:= temp @kind object;
  #L40df0c.  call temp:= `a`(v0, v5) @signature `Ln/c/a/g;.a:(Ln/c/a/u/c;)I` @kind virtual;
  #L40df12.  v0:= temp;
  #L40df14.  return v0;
}
procedure `java.lang.Object` `a`(`n.c.a.k` v1 @kind this, `n.c.a.x.k` v2 @kind object) @signature `Ln/c/a/k;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40e008.  call temp:= `a`() @signature `Ln/c/a/x/j;.a:()Ln/c/a/x/k;` @kind static;
  #L40e00e.  v0:= temp @kind object;
  #L40e010.  if v2 != v0 then goto L40e01a;
  #L40e014.  v2:= `@@n.c.a.u.m.d` @type ^`n.c.a.u.m` @kind object;
  #L40e018.  return v2 @kind object;
  #L40e01a.  call temp:= `e`() @signature `Ln/c/a/x/j;.e:()Ln/c/a/x/k;` @kind static;
  #L40e020.  v0:= temp @kind object;
  #L40e022.  if v2 != v0 then goto L40e02c;
  #L40e026.  v2:= `@@n.c.a.x.b.c` @type ^`n.c.a.x.b` @kind object;
  #L40e02a.  return v2 @kind object;
  #L40e02c.  call temp:= `d`() @signature `Ln/c/a/x/j;.d:()Ln/c/a/x/k;` @kind static;
  #L40e032.  v0:= temp @kind object;
  #L40e034.  if v2 == v0 then goto L40e08c;
  #L40e038.  call temp:= `f`() @signature `Ln/c/a/x/j;.f:()Ln/c/a/x/k;` @kind static;
  #L40e03e.  v0:= temp @kind object;
  #L40e040.  if v2 != v0 then goto L40e046;
  #L40e044.  goto L40e08c;
  #L40e046.  call temp:= `b`() @signature `Ln/c/a/x/j;.b:()Ln/c/a/x/k;` @kind static;
  #L40e04c.  v0:= temp @kind object;
  #L40e04e.  if v2 != v0 then goto L40e05c;
  #L40e052.  call temp:= `t`(v1) @signature `Ln/c/a/k;.t:()Ln/c/a/f;` @kind virtual;
  #L40e058.  v2:= temp @kind object;
  #L40e05a.  return v2 @kind object;
  #L40e05c.  call temp:= `c`() @signature `Ln/c/a/x/j;.c:()Ln/c/a/x/k;` @kind static;
  #L40e062.  v0:= temp @kind object;
  #L40e064.  if v2 != v0 then goto L40e072;
  #L40e068.  call temp:= `v`(v1) @signature `Ln/c/a/k;.v:()Ln/c/a/h;` @kind virtual;
  #L40e06e.  v2:= temp @kind object;
  #L40e070.  return v2 @kind object;
  #L40e072.  call temp:= `g`() @signature `Ln/c/a/x/j;.g:()Ln/c/a/x/k;` @kind static;
  #L40e078.  v0:= temp @kind object;
  #L40e07a.  if v2 != v0 then goto L40e082;
  #L40e07e.  v2:= 0I;
  #L40e080.  return v2 @kind object;
  #L40e082.  call temp:= `a`(v1, v2) @signature `Ln/c/a/w/c;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @kind super;
  #L40e088.  v2:= temp @kind object;
  #L40e08a.  return v2 @kind object;
  #L40e08c.  call temp:= `h`(v1) @signature `Ln/c/a/k;.h:()Ln/c/a/r;` @kind virtual;
  #L40e092.  v2:= temp @kind object;
  #L40e094.  return v2 @kind object;
}
procedure `n.c.a.k` `a`(`n.c.a.k` v3 @kind this, `long` v4 , `n.c.a.x.l` v6 @kind object) @signature `Ln/c/a/k;.a:(JLn/c/a/x/l;)Ln/c/a/k;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40e2d8.  v0:= -9223372036854775808L;
  #L40e2dc.  v2:= lcmp(v4, v0);
  #L40e2e0.  if v2 != 0 then goto L40e304;
  #L40e2e4.  v4:= 9223372036854775807L;
  #L40e2ee.  call temp:= `b`(v3, v4, v6) @signature `Ln/c/a/k;.b:(JLn/c/a/x/l;)Ln/c/a/k;` @kind virtual;
  #L40e2f4.  v4:= temp @kind object;
  #L40e2f6.  v0:= 1L;
  #L40e2fa.  call temp:= `b`(v4, v0, v6) @signature `Ln/c/a/k;.b:(JLn/c/a/x/l;)Ln/c/a/k;` @kind virtual;
  #L40e300.  v4:= temp @kind object;
  #L40e302.  goto L40e30e;
  #L40e304.  v4:= -v4 @kind long;
  #L40e306.  call temp:= `b`(v3, v4, v6) @signature `Ln/c/a/k;.b:(JLn/c/a/x/l;)Ln/c/a/k;` @kind virtual;
  #L40e30c.  v4:= temp @kind object;
  #L40e30e.  return v4 @kind object;
}
procedure `n.c.a.k` `a`(`n.c.a.k` v1 @kind this, `n.c.a.x.f` v2 @kind object) @signature `Ln/c/a/k;.a:(Ln/c/a/x/f;)Ln/c/a/k;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40e438.  v0:= instanceof @variable v2 @type ^`n.c.a.f` @kind boolean;
  #L40e43c.  if v0 != 0 then goto L40e4a2;
  #L40e440.  v0:= instanceof @variable v2 @type ^`n.c.a.h` @kind boolean;
  #L40e444.  if v0 != 0 then goto L40e4a2;
  #L40e448.  v0:= instanceof @variable v2 @type ^`n.c.a.g` @kind boolean;
  #L40e44c.  if v0 == 0 then goto L40e452;
  #L40e450.  goto L40e4a2;
  #L40e452.  v0:= instanceof @variable v2 @type ^`n.c.a.e` @kind boolean;
  #L40e456.  if v0 == 0 then goto L40e46c;
  #L40e45a.  v2:= (`n.c.a.e`) v2 @kind object;
  #L40e45e.  v0:= v1.`n.c.a.k.c` @type ^`n.c.a.r` @kind object;
  #L40e462.  call temp:= `a`(v2, v0) @signature `Ln/c/a/k;.a:(Ln/c/a/e;Ln/c/a/q;)Ln/c/a/k;` @kind static;
  #L40e468.  v2:= temp @kind object;
  #L40e46a.  return v2 @kind object;
  #L40e46c.  v0:= instanceof @variable v2 @type ^`n.c.a.r` @kind boolean;
  #L40e470.  if v0 == 0 then goto L40e486;
  #L40e474.  v0:= v1.`n.c.a.k.b` @type ^`n.c.a.g` @kind object;
  #L40e478.  v2:= (`n.c.a.r`) v2 @kind object;
  #L40e47c.  call temp:= `b`(v1, v0, v2) @signature `Ln/c/a/k;.b:(Ln/c/a/g;Ln/c/a/r;)Ln/c/a/k;` @kind direct;
  #L40e482.  v2:= temp @kind object;
  #L40e484.  return v2 @kind object;
  #L40e486.  v0:= instanceof @variable v2 @type ^`n.c.a.k` @kind boolean;
  #L40e48a.  if v0 == 0 then goto L40e494;
  #L40e48e.  v2:= (`n.c.a.k`) v2 @kind object;
  #L40e492.  return v2 @kind object;
  #L40e494.  call temp:= `a`(v2, v1) @signature `Ln/c/a/x/f;.a:(Ln/c/a/x/d;)Ln/c/a/x/d;` @kind interface;
  #L40e49a.  v2:= temp @kind object;
  #L40e49c.  v2:= (`n.c.a.k`) v2 @kind object;
  #L40e4a0.  return v2 @kind object;
  #L40e4a2.  v0:= v1.`n.c.a.k.b` @type ^`n.c.a.g` @kind object;
  #L40e4a6.  call temp:= `a`(v0, v2) @signature `Ln/c/a/g;.a:(Ln/c/a/x/f;)Ln/c/a/g;` @kind virtual;
  #L40e4ac.  v2:= temp @kind object;
  #L40e4ae.  v0:= v1.`n.c.a.k.c` @type ^`n.c.a.r` @kind object;
  #L40e4b2.  call temp:= `b`(v1, v2, v0) @signature `Ln/c/a/k;.b:(Ln/c/a/g;Ln/c/a/r;)Ln/c/a/k;` @kind direct;
  #L40e4b8.  v2:= temp @kind object;
  #L40e4ba.  return v2 @kind object;
}
procedure `n.c.a.k` `a`(`n.c.a.k` v3 @kind this, `n.c.a.x.i` v4 @kind object, `long` v5 ) @signature `Ln/c/a/k;.a:(Ln/c/a/x/i;J)Ln/c/a/k;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40e4cc.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L40e4d0.  if v0 == 0 then goto L40e54e;
  #L40e4d4.  v0:= v4 @kind object;
  #L40e4d6.  v0:= (`n.c.a.x.a`) v0 @kind object;
  #L40e4da.  v1:= `@@n.c.a.k$c.a` @type ^`int`[] @kind object;
  #L40e4de.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40e4e4.  v2:= temp;
  #L40e4e6.  v1:= v1[v2];
  #L40e4ea.  v2:= 1I;
  #L40e4ec.  if v1 == v2 then goto L40e52e;
  #L40e4f0.  v2:= 2I;
  #L40e4f2.  if v1 == v2 then goto L40e510;
  #L40e4f6.  v0:= v3.`n.c.a.k.b` @type ^`n.c.a.g` @kind object;
  #L40e4fa.  call temp:= `a`(v0, v4, v5) @signature `Ln/c/a/g;.a:(Ln/c/a/x/i;J)Ln/c/a/g;` @kind virtual;
  #L40e500.  v4:= temp @kind object;
  #L40e502.  v5:= v3.`n.c.a.k.c` @type ^`n.c.a.r` @kind object;
  #L40e506.  call temp:= `b`(v3, v4, v5) @signature `Ln/c/a/k;.b:(Ln/c/a/g;Ln/c/a/r;)Ln/c/a/k;` @kind direct;
  #L40e50c.  v4:= temp @kind object;
  #L40e50e.  return v4 @kind object;
  #L40e510.  v4:= v3.`n.c.a.k.b` @type ^`n.c.a.g` @kind object;
  #L40e514.  call temp:= `a`(v0, v5) @signature `Ln/c/a/x/a;.a:(J)I` @kind virtual;
  #L40e51a.  v5:= temp;
  #L40e51c.  call temp:= `b`(v5) @signature `Ln/c/a/r;.b:(I)Ln/c/a/r;` @kind static;
  #L40e522.  v5:= temp @kind object;
  #L40e524.  call temp:= `b`(v3, v4, v5) @signature `Ln/c/a/k;.b:(Ln/c/a/g;Ln/c/a/r;)Ln/c/a/k;` @kind direct;
  #L40e52a.  v4:= temp @kind object;
  #L40e52c.  return v4 @kind object;
  #L40e52e.  call temp:= `e`(v3) @signature `Ln/c/a/k;.e:()I` @kind virtual;
  #L40e534.  v4:= temp;
  #L40e536.  v0:= (`long`) v4 @kind i2l;
  #L40e538.  call temp:= `a`(v5, v0) @signature `Ln/c/a/e;.a:(JJ)Ln/c/a/e;` @kind static;
  #L40e53e.  v4:= temp @kind object;
  #L40e540.  v5:= v3.`n.c.a.k.c` @type ^`n.c.a.r` @kind object;
  #L40e544.  call temp:= `a`(v4, v5) @signature `Ln/c/a/k;.a:(Ln/c/a/e;Ln/c/a/q;)Ln/c/a/k;` @kind static;
  #L40e54a.  v4:= temp @kind object;
  #L40e54c.  return v4 @kind object;
  #L40e54e.  call temp:= `a`(v4, v3, v5) @signature `Ln/c/a/x/i;.a:(Ln/c/a/x/d;J)Ln/c/a/x/d;` @kind interface;
  #L40e554.  v4:= temp @kind object;
  #L40e556.  v4:= (`n.c.a.k`) v4 @kind object;
  #L40e55a.  return v4 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.k` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/k;.a:(JLn/c/a/x/l;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40e5ec.  call temp:= `a`(v0, v1, v3) @signature `Ln/c/a/k;.a:(JLn/c/a/x/l;)Ln/c/a/k;` @kind virtual;
  #L40e5f2.  v1:= temp @kind object;
  #L40e5f4.  return v1 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.k` v3 @kind this, `n.c.a.x.d` v4 @kind object) @signature `Ln/c/a/k;.a:(Ln/c/a/x/d;)Ln/c/a/x/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40e584.  v0:= `@@n.c.a.x.a.x` @type ^`n.c.a.x.a` @kind object;
  #L40e588.  call temp:= `t`(v3) @signature `Ln/c/a/k;.t:()Ln/c/a/f;` @kind virtual;
  #L40e58e.  v1:= temp @kind object;
  #L40e590.  call temp:= `h`(v1) @signature `Ln/c/a/f;.h:()J` @kind virtual;
  #L40e596.  v1:= temp @kind wide;
  #L40e598.  call temp:= `a`(v4, v0, v1) @signature `Ln/c/a/x/d;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @kind interface;
  #L40e59e.  v4:= temp @kind object;
  #L40e5a0.  v0:= `@@n.c.a.x.a.e` @type ^`n.c.a.x.a` @kind object;
  #L40e5a4.  call temp:= `v`(v3) @signature `Ln/c/a/k;.v:()Ln/c/a/h;` @kind virtual;
  #L40e5aa.  v1:= temp @kind object;
  #L40e5ac.  call temp:= `u`(v1) @signature `Ln/c/a/h;.u:()J` @kind virtual;
  #L40e5b2.  v1:= temp @kind wide;
  #L40e5b4.  call temp:= `a`(v4, v0, v1) @signature `Ln/c/a/x/d;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @kind interface;
  #L40e5ba.  v4:= temp @kind object;
  #L40e5bc.  v0:= `@@n.c.a.x.a.G` @type ^`n.c.a.x.a` @kind object;
  #L40e5c0.  call temp:= `h`(v3) @signature `Ln/c/a/k;.h:()Ln/c/a/r;` @kind virtual;
  #L40e5c6.  v1:= temp @kind object;
  #L40e5c8.  call temp:= `k`(v1) @signature `Ln/c/a/r;.k:()I` @kind virtual;
  #L40e5ce.  v1:= temp;
  #L40e5d0.  v1:= (`long`) v1 @kind i2l;
  #L40e5d2.  call temp:= `a`(v4, v0, v1) @signature `Ln/c/a/x/d;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @kind interface;
  #L40e5d8.  v4:= temp @kind object;
  #L40e5da.  return v4 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.k` v0 @kind this, `n.c.a.x.f` v1 @kind object) @signature `Ln/c/a/k;.a:(Ln/c/a/x/f;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40e624.  call temp:= `a`(v0, v1) @signature `Ln/c/a/k;.a:(Ln/c/a/x/f;)Ln/c/a/k;` @kind virtual;
  #L40e62a.  v1:= temp @kind object;
  #L40e62c.  return v1 @kind object;
}
procedure `n.c.a.x.d` `a`(`n.c.a.k` v0 @kind this, `n.c.a.x.i` v1 @kind object, `long` v2 ) @signature `Ln/c/a/k;.a:(Ln/c/a/x/i;J)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40e640.  call temp:= `a`(v0, v1, v2) @signature `Ln/c/a/k;.a:(Ln/c/a/x/i;J)Ln/c/a/k;` @kind virtual;
  #L40e646.  v1:= temp @kind object;
  #L40e648.  return v1 @kind object;
}
procedure `n.c.a.x.n` `a`(`n.c.a.k` v1 @kind this, `n.c.a.x.i` v2 @kind object) @signature `Ln/c/a/k;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40e65c.  v0:= instanceof @variable v2 @type ^`n.c.a.x.a` @kind boolean;
  #L40e660.  if v0 == 0 then goto L40e68e;
  #L40e664.  v0:= `@@n.c.a.x.a.F` @type ^`n.c.a.x.a` @kind object;
  #L40e668.  if v2 == v0 then goto L40e684;
  #L40e66c.  v0:= `@@n.c.a.x.a.G` @type ^`n.c.a.x.a` @kind object;
  #L40e670.  if v2 != v0 then goto L40e676;
  #L40e674.  goto L40e684;
  #L40e676.  v0:= v1.`n.c.a.k.b` @type ^`n.c.a.g` @kind object;
  #L40e67a.  call temp:= `a`(v0, v2) @signature `Ln/c/a/g;.a:(Ln/c/a/x/i;)Ln/c/a/x/n;` @kind virtual;
  #L40e680.  v2:= temp @kind object;
  #L40e682.  return v2 @kind object;
  #L40e684.  call temp:= `h`(v2) @signature `Ln/c/a/x/i;.h:()Ln/c/a/x/n;` @kind interface;
  #L40e68a.  v2:= temp @kind object;
  #L40e68c.  return v2 @kind object;
  #L40e68e.  call temp:= `c`(v2, v1) @signature `Ln/c/a/x/i;.c:(Ln/c/a/x/e;)Ln/c/a/x/n;` @kind interface;
  #L40e694.  v2:= temp @kind object;
  #L40e696.  return v2 @kind object;
}
procedure `void` `a`(`n.c.a.k` v1 @kind this, `java.io.DataOutput` v2 @kind object) @signature `Ln/c/a/k;.a:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L40e728.  v0:= v1.`n.c.a.k.b` @type ^`n.c.a.g` @kind object;
  #L40e72c.  call `a`(v0, v2) @signature `Ln/c/a/g;.a:(Ljava/io/DataOutput;)V` @kind virtual;
  #L40e732.  v0:= v1.`n.c.a.k.c` @type ^`n.c.a.r` @kind object;
  #L40e736.  call `b`(v0, v2) @signature `Ln/c/a/r;.b:(Ljava/io/DataOutput;)V` @kind virtual;
  #L40e73c.  return @kind void;
}
procedure `n.c.a.k` `b`(`n.c.a.k` v1 @kind this, `long` v2 , `n.c.a.x.l` v4 @kind object) @signature `Ln/c/a/k;.b:(JLn/c/a/x/l;)Ln/c/a/k;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40e394.  v0:= instanceof @variable v4 @type ^`n.c.a.x.b` @kind boolean;
  #L40e398.  if v0 == 0 then goto L40e3b6;
  #L40e39c.  v0:= v1.`n.c.a.k.b` @type ^`n.c.a.g` @kind object;
  #L40e3a0.  call temp:= `b`(v0, v2, v4) @signature `Ln/c/a/g;.b:(JLn/c/a/x/l;)Ln/c/a/g;` @kind virtual;
  #L40e3a6.  v2:= temp @kind object;
  #L40e3a8.  v3:= v1.`n.c.a.k.c` @type ^`n.c.a.r` @kind object;
  #L40e3ac.  call temp:= `b`(v1, v2, v3) @signature `Ln/c/a/k;.b:(Ln/c/a/g;Ln/c/a/r;)Ln/c/a/k;` @kind direct;
  #L40e3b2.  v2:= temp @kind object;
  #L40e3b4.  return v2 @kind object;
  #L40e3b6.  call temp:= `a`(v4, v1, v2) @signature `Ln/c/a/x/l;.a:(Ln/c/a/x/d;J)Ln/c/a/x/d;` @kind interface;
  #L40e3bc.  v2:= temp @kind object;
  #L40e3be.  v2:= (`n.c.a.k`) v2 @kind object;
  #L40e3c2.  return v2 @kind object;
}
procedure `n.c.a.x.d` `b`(`n.c.a.k` v0 @kind this, `long` v1 , `n.c.a.x.l` v3 @kind object) @signature `Ln/c/a/k;.b:(JLn/c/a/x/l;)Ln/c/a/x/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40e608.  call temp:= `b`(v0, v1, v3) @signature `Ln/c/a/k;.b:(JLn/c/a/x/l;)Ln/c/a/k;` @kind virtual;
  #L40e60e.  v1:= temp @kind object;
  #L40e610.  return v1 @kind object;
}
procedure `boolean` `b`(`n.c.a.k` v1 @kind this, `n.c.a.x.i` v2 @kind object) @signature `Ln/c/a/k;.b:(Ln/c/a/x/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40de30.  v0:= instanceof @variable v2 @type ^`n.c.a.x.a` @kind boolean;
  #L40de34.  if v0 != 0 then goto L40de4e;
  #L40de38.  if v2 == 0 then goto L40de4a;
  #L40de3c.  call temp:= `a`(v2, v1) @signature `Ln/c/a/x/i;.a:(Ln/c/a/x/e;)Z` @kind interface;
  #L40de42.  v2:= temp;
  #L40de44.  if v2 == 0 then goto L40de4a;
  #L40de48.  goto L40de4e;
  #L40de4a.  v2:= 0I;
  #L40de4c.  goto L40de50;
  #L40de4e.  v2:= 1I;
  #L40de50.  return v2;
}
procedure `int` `c`(`n.c.a.k` v3 @kind this, `n.c.a.x.i` v4 @kind object) @signature `Ln/c/a/k;.c:(Ln/c/a/x/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40df28.  v0:= instanceof @variable v4 @type ^`n.c.a.x.a` @kind boolean;
  #L40df2c.  if v0 == 0 then goto L40dfa0;
  #L40df30.  v0:= `@@n.c.a.k$c.a` @type ^`int`[] @kind object;
  #L40df34.  v1:= v4 @kind object;
  #L40df36.  v1:= (`n.c.a.x.a`) v1 @kind object;
  #L40df3a.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40df40.  v1:= temp;
  #L40df42.  v0:= v0[v1];
  #L40df46.  v1:= 1I;
  #L40df48.  if v0 == v1 then goto L40df72;
  #L40df4c.  v1:= 2I;
  #L40df4e.  if v0 == v1 then goto L40df60;
  #L40df52.  v0:= v3.`n.c.a.k.b` @type ^`n.c.a.g` @kind object;
  #L40df56.  call temp:= `c`(v0, v4) @signature `Ln/c/a/g;.c:(Ln/c/a/x/i;)I` @kind virtual;
  #L40df5c.  v4:= temp;
  #L40df5e.  return v4;
  #L40df60.  call temp:= `h`(v3) @signature `Ln/c/a/k;.h:()Ln/c/a/r;` @kind virtual;
  #L40df66.  v4:= temp @kind object;
  #L40df68.  call temp:= `k`(v4) @signature `Ln/c/a/r;.k:()I` @kind virtual;
  #L40df6e.  v4:= temp;
  #L40df70.  return v4;
  #L40df72.  v0:= new `n.c.a.b`;
  #L40df76.  v1:= new `java.lang.StringBuilder`;
  #L40df7a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40df80.  v2:= "Field too large for an int: " @kind object;
  #L40df84.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40df8a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40df90.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40df96.  v4:= temp @kind object;
  #L40df98.  call `<init>`(v0, v4) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40df9e.  throw v0;
  #L40dfa0.  call temp:= `c`(v3, v4) @signature `Ln/c/a/w/c;.c:(Ln/c/a/x/i;)I` @kind super;
  #L40dfa6.  v4:= temp;
  #L40dfa8.  return v4;
}
procedure `int` `compareTo`(`n.c.a.k` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Ln/c/a/k;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40de64.  v1:= (`n.c.a.k`) v1 @kind object;
  #L40de68.  call temp:= `a`(v0, v1) @signature `Ln/c/a/k;.a:(Ln/c/a/k;)I` @kind virtual;
  #L40de6e.  v1:= temp;
  #L40de70.  return v1;
}
procedure `long` `d`(`n.c.a.k` v2 @kind this, `n.c.a.x.i` v3 @kind object) @signature `Ln/c/a/k;.d:(Ln/c/a/x/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40e130.  v0:= instanceof @variable v3 @type ^`n.c.a.x.a` @kind boolean;
  #L40e134.  if v0 == 0 then goto L40e186;
  #L40e138.  v0:= `@@n.c.a.k$c.a` @type ^`int`[] @kind object;
  #L40e13c.  v1:= v3 @kind object;
  #L40e13e.  v1:= (`n.c.a.x.a`) v1 @kind object;
  #L40e142.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L40e148.  v1:= temp;
  #L40e14a.  v0:= v0[v1];
  #L40e14e.  v1:= 1I;
  #L40e150.  if v0 == v1 then goto L40e17c;
  #L40e154.  v1:= 2I;
  #L40e156.  if v0 == v1 then goto L40e168;
  #L40e15a.  v0:= v2.`n.c.a.k.b` @type ^`n.c.a.g` @kind object;
  #L40e15e.  call temp:= `d`(v0, v3) @signature `Ln/c/a/g;.d:(Ln/c/a/x/i;)J` @kind virtual;
  #L40e164.  v0:= temp @kind wide;
  #L40e166.  return v0 @kind wide;
  #L40e168.  call temp:= `h`(v2) @signature `Ln/c/a/k;.h:()Ln/c/a/r;` @kind virtual;
  #L40e16e.  v3:= temp @kind object;
  #L40e170.  call temp:= `k`(v3) @signature `Ln/c/a/r;.k:()I` @kind virtual;
  #L40e176.  v3:= temp;
  #L40e178.  v0:= (`long`) v3 @kind i2l;
  #L40e17a.  return v0 @kind wide;
  #L40e17c.  call temp:= `s`(v2) @signature `Ln/c/a/k;.s:()J` @kind virtual;
  #L40e182.  v0:= temp @kind wide;
  #L40e184.  return v0 @kind wide;
  #L40e186.  call temp:= `b`(v3, v2) @signature `Ln/c/a/x/i;.b:(Ln/c/a/x/e;)J` @kind interface;
  #L40e18c.  v0:= temp @kind wide;
  #L40e18e.  return v0 @kind wide;
}
procedure `int` `e`(`n.c.a.k` v1 @kind this) @signature `Ln/c/a/k;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40dfbc.  v0:= v1.`n.c.a.k.b` @type ^`n.c.a.g` @kind object;
  #L40dfc0.  call temp:= `x`(v0) @signature `Ln/c/a/g;.x:()I` @kind virtual;
  #L40dfc6.  v0:= temp;
  #L40dfc8.  return v0;
}
procedure `boolean` `equals`(`n.c.a.k` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Ln/c/a/k;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L40ddd8.  v0:= 1I;
  #L40ddda.  if v4 != v5 then goto L40dde0;
  #L40ddde.  return v0;
  #L40dde0.  v1:= instanceof @variable v5 @type ^`n.c.a.k` @kind boolean;
  #L40dde4.  v2:= 0I;
  #L40dde6.  if v1 == 0 then goto L40de1c;
  #L40ddea.  v5:= (`n.c.a.k`) v5 @kind object;
  #L40ddee.  v1:= v4.`n.c.a.k.b` @type ^`n.c.a.g` @kind object;
  #L40ddf2.  v3:= v5.`n.c.a.k.b` @type ^`n.c.a.g` @kind object;
  #L40ddf6.  call temp:= `equals`(v1, v3) @signature `Ln/c/a/g;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L40ddfc.  v1:= temp;
  #L40ddfe.  if v1 == 0 then goto L40de18;
  #L40de02.  v1:= v4.`n.c.a.k.c` @type ^`n.c.a.r` @kind object;
  #L40de06.  v5:= v5.`n.c.a.k.c` @type ^`n.c.a.r` @kind object;
  #L40de0a.  call temp:= `equals`(v1, v5) @signature `Ln/c/a/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L40de10.  v5:= temp;
  #L40de12.  if v5 == 0 then goto L40de18;
  #L40de16.  goto L40de1a;
  #L40de18.  v0:= 0I;
  #L40de1a.  return v0;
  #L40de1c.  return v2;
}
procedure `n.c.a.r` `h`(`n.c.a.k` v1 @kind this) @signature `Ln/c/a/k;.h:()Ln/c/a/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40e56c.  v0:= v1.`n.c.a.k.c` @type ^`n.c.a.r` @kind object;
  #L40e570.  return v0 @kind object;
}
procedure `int` `hashCode`(`n.c.a.k` v2 @kind this) @signature `Ln/c/a/k;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40dfdc.  v0:= v2.`n.c.a.k.b` @type ^`n.c.a.g` @kind object;
  #L40dfe0.  call temp:= `hashCode`(v0) @signature `Ln/c/a/g;.hashCode:()I` @kind virtual;
  #L40dfe6.  v0:= temp;
  #L40dfe8.  v1:= v2.`n.c.a.k.c` @type ^`n.c.a.r` @kind object;
  #L40dfec.  call temp:= `hashCode`(v1) @signature `Ln/c/a/r;.hashCode:()I` @kind virtual;
  #L40dff2.  v1:= temp;
  #L40dff4.  v0:= v0 ^~ v1 @kind int;
  #L40dff6.  return v0;
}
procedure `long` `s`(`n.c.a.k` v2 @kind this) @signature `Ln/c/a/k;.s:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40e1a0.  v0:= v2.`n.c.a.k.b` @type ^`n.c.a.g` @kind object;
  #L40e1a4.  v1:= v2.`n.c.a.k.c` @type ^`n.c.a.r` @kind object;
  #L40e1a8.  call temp:= `a`(v0, v1) @signature `Ln/c/a/u/c;.a:(Ln/c/a/r;)J` @kind virtual;
  #L40e1ae.  v0:= temp @kind wide;
  #L40e1b0.  return v0 @kind wide;
}
procedure `n.c.a.f` `t`(`n.c.a.k` v1 @kind this) @signature `Ln/c/a/k;.t:()Ln/c/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40e1c4.  v0:= v1.`n.c.a.k.b` @type ^`n.c.a.g` @kind object;
  #L40e1c8.  call temp:= `e`(v0) @signature `Ln/c/a/g;.e:()Ln/c/a/f;` @kind virtual;
  #L40e1ce.  v0:= temp @kind object;
  #L40e1d0.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`n.c.a.k` v2 @kind this) @signature `Ln/c/a/k;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40e0e8.  v0:= new `java.lang.StringBuilder`;
  #L40e0ec.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40e0f2.  v1:= v2.`n.c.a.k.b` @type ^`n.c.a.g` @kind object;
  #L40e0f6.  call temp:= `toString`(v1) @signature `Ln/c/a/g;.toString:()Ljava/lang/String;` @kind virtual;
  #L40e0fc.  v1:= temp @kind object;
  #L40e0fe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40e104.  v1:= v2.`n.c.a.k.c` @type ^`n.c.a.r` @kind object;
  #L40e108.  call temp:= `toString`(v1) @signature `Ln/c/a/r;.toString:()Ljava/lang/String;` @kind virtual;
  #L40e10e.  v1:= temp @kind object;
  #L40e110.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40e116.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40e11c.  v0:= temp @kind object;
  #L40e11e.  return v0 @kind object;
}
procedure `n.c.a.g` `u`(`n.c.a.k` v1 @kind this) @signature `Ln/c/a/k;.u:()Ln/c/a/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40e1e4.  v0:= v1.`n.c.a.k.b` @type ^`n.c.a.g` @kind object;
  #L40e1e8.  return v0 @kind object;
}
procedure `n.c.a.h` `v`(`n.c.a.k` v1 @kind this) @signature `Ln/c/a/k;.v:()Ln/c/a/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40e1fc.  v0:= v1.`n.c.a.k.b` @type ^`n.c.a.g` @kind object;
  #L40e200.  call temp:= `h`(v0) @signature `Ln/c/a/g;.h:()Ln/c/a/h;` @kind virtual;
  #L40e206.  v0:= temp @kind object;
  #L40e208.  return v0 @kind object;
}
