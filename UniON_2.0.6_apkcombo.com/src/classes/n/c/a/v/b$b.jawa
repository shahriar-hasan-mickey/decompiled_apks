record `n.c.a.v.b$b` @kind class @AccessFlag  extends `n.c.a.x.k` @kind interface {
}
procedure `void` `<init>`(`n.c.a.v.b$b` v0 @kind this) @signature `Ln/c/a/v/b$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L41ddac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L41ddb2.  return @kind void;
}
procedure `java.lang.Boolean` `a`(`n.c.a.v.b$b` v1 @kind this, `n.c.a.x.e` v2 @kind object) @signature `Ln/c/a/v/b$b;.a:(Ln/c/a/x/e;)Ljava/lang/Boolean;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41dd60.  v0:= instanceof @variable v2 @type ^`n.c.a.v.a` @kind boolean;
  #L41dd64.  if v0 == 0 then goto L41dd7a;
  #L41dd68.  v2:= (`n.c.a.v.a`) v2 @kind object;
  #L41dd6c.  v2:= v2.`n.c.a.v.a.g` @type ^`boolean` @kind boolean;
  #L41dd70.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L41dd76.  v2:= temp @kind object;
  #L41dd78.  return v2 @kind object;
  #L41dd7a.  v2:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L41dd7e.  return v2 @kind object;
}
procedure `java.lang.Object` `a`(`n.c.a.v.b$b` v0 @kind this, `n.c.a.x.e` v1 @kind object) @signature `Ln/c/a/v/b$b;.a:(Ln/c/a/x/e;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L41dd90.  call temp:= `a`(v0, v1) @signature `Ln/c/a/v/b$b;.a:(Ln/c/a/x/e;)Ljava/lang/Boolean;` @kind virtual;
  #L41dd96.  v1:= temp @kind object;
  #L41dd98.  return v1 @kind object;
}
