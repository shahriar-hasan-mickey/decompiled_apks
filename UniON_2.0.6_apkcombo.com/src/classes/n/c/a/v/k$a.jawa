record `n.c.a.v.k$a` @kind class @AccessFlag  extends `java.util.Comparator` @kind interface {
}
procedure `void` `<init>`(`n.c.a.v.k$a` v0 @kind this) @signature `Ln/c/a/v/k$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L422ab8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L422abe.  return @kind void;
}
procedure `int` `a`(`n.c.a.v.k$a` v0 @kind this, `java.util.Map$Entry` v1 @kind object, `java.util.Map$Entry` v2 @kind object) @signature `Ln/c/a/v/k$a;.a:(Ljava/util/Map$Entry;Ljava/util/Map$Entry;)I` @AccessFlag PUBLIC {
    temp;

  #L422a7c.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L422a82.  v2:= temp @kind object;
  #L422a84.  v2:= (`java.lang.String`) v2 @kind object;
  #L422a88.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L422a8e.  v2:= temp;
  #L422a90.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L422a96.  v1:= temp @kind object;
  #L422a98.  v1:= (`java.lang.String`) v1 @kind object;
  #L422a9c.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L422aa2.  v1:= temp;
  #L422aa4.  v2:= v2 - v1 @kind int;
  #L422aa6.  return v2;
}
procedure `int` `compare`(`n.c.a.v.k$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Ln/c/a/v/k$a;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L422a58.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L422a5c.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L422a60.  call temp:= `a`(v0, v1, v2) @signature `Ln/c/a/v/k$a;.a:(Ljava/util/Map$Entry;Ljava/util/Map$Entry;)I` @kind virtual;
  #L422a66.  v1:= temp;
  #L422a68.  return v1;
}
