record `n.c.a.v.k` @kind class @AccessFlag FINAL extends `n.c.a.v.g` @kind class {
}
global `java.util.Comparator` `@@n.c.a.v.k.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/c/a/v/k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L422c9c.  v0:= new `n.c.a.v.k$a`;
  #L422ca0.  call `<init>`(v0) @signature `Ln/c/a/v/k$a;.<init>:()V` @kind direct;
  #L422ca6.  `@@n.c.a.v.k.a` @type ^`java.util.Comparator` := v0 @kind object;
  #L422caa.  return @kind void;
}
procedure `java.util.Comparator` `a`() @signature `Ln/c/a/v/k;.a:()Ljava/util/Comparator;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L422c4c.  v0:= `@@n.c.a.v.k.a` @type ^`java.util.Comparator` @kind object;
  #L422c50.  return v0 @kind object;
}
procedure `java.util.Map$Entry` `a`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Ln/c/a/v/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L422c64.  call temp:= `b`(v0, v1) @signature `Ln/c/a/v/k;.b:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;` @kind static;
  #L422c6a.  v0:= temp @kind object;
  #L422c6c.  return v0 @kind object;
}
procedure `java.util.Map$Entry` `b`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Ln/c/a/v/k;.b:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L422c80.  v0:= new `java.util.AbstractMap$SimpleImmutableEntry`;
  #L422c84.  call `<init>`(v0, v1, v2) @signature `Ljava/util/AbstractMap$SimpleImmutableEntry;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L422c8a.  return v0 @kind object;
}
