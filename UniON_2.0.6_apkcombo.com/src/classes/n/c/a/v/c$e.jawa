record `n.c.a.v.c$e` @kind class @AccessFlag FINAL extends `n.c.a.v.c$g` @kind interface {
  `char` `n.c.a.v.c$e.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`n.c.a.v.c$e` v0 @kind this, `char` v1 ) @signature `Ln/c/a/v/c$e;.<init>:(C)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L41e070.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L41e076.  v0.`n.c.a.v.c$e.b` @type ^`char` := v1 @kind char;
  #L41e07a.  return @kind void;
}
procedure `int` `a`(`n.c.a.v.c$e` v1 @kind this, `n.c.a.v.d` v2 @kind object, `java.lang.CharSequence` v3 @kind object, `int` v4 ) @signature `Ln/c/a/v/c$e;.a:(Ln/c/a/v/d;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41dfdc.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L41dfe2.  v0:= temp;
  #L41dfe4.  if v4 != v0 then goto L41dfec;
  #L41dfe8.  v2:= ~v4 @kind int;
  #L41dfea.  return v2;
  #L41dfec.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L41dff2.  v3:= temp;
  #L41dff4.  v0:= v1.`n.c.a.v.c$e.b` @type ^`char` @kind char;
  #L41dff8.  call temp:= `a`(v2, v0, v3) @signature `Ln/c/a/v/d;.a:(CC)Z` @kind virtual;
  #L41dffe.  v2:= temp;
  #L41e000.  if v2 != 0 then goto L41e008;
  #L41e004.  v2:= ~v4 @kind int;
  #L41e006.  return v2;
  #L41e008.  v4:= v4 + 1;
  #L41e00c.  return v4;
}
procedure `boolean` `a`(`n.c.a.v.c$e` v0 @kind this, `n.c.a.v.f` v1 @kind object, `java.lang.StringBuilder` v2 @kind object) @signature `Ln/c/a/v/c$e;.a:(Ln/c/a/v/f;Ljava/lang/StringBuilder;)Z` @AccessFlag PUBLIC {
    temp;

  #L41dfbc.  v1:= v0.`n.c.a.v.c$e.b` @type ^`char` @kind char;
  #L41dfc0.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L41dfc6.  v1:= 1I;
  #L41dfc8.  return v1;
}
procedure `java.lang.String` `toString`(`n.c.a.v.c$e` v3 @kind this) @signature `Ln/c/a/v/c$e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L41e020.  v0:= v3.`n.c.a.v.c$e.b` @type ^`char` @kind char;
  #L41e024.  v1:= 39I;
  #L41e028.  if v0 != v1 then goto L41e032;
  #L41e02c.  v0:= "''" @kind object;
  #L41e030.  return v0 @kind object;
  #L41e032.  v0:= new `java.lang.StringBuilder`;
  #L41e036.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L41e03c.  v1:= "'" @kind object;
  #L41e040.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41e046.  v2:= v3.`n.c.a.v.c$e.b` @type ^`char` @kind char;
  #L41e04a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L41e050.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41e056.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L41e05c.  v0:= temp @kind object;
  #L41e05e.  return v0 @kind object;
}
