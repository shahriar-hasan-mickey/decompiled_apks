record `n.c.a.v.c$a` @kind class @AccessFlag  extends `n.c.a.x.k` @kind interface {
}
procedure `void` `<init>`(`n.c.a.v.c$a` v0 @kind this) @signature `Ln/c/a/v/c$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L41de18.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L41de1e.  return @kind void;
}
procedure `java.lang.Object` `a`(`n.c.a.v.c$a` v0 @kind this, `n.c.a.x.e` v1 @kind object) @signature `Ln/c/a/v/c$a;.a:(Ln/c/a/x/e;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L41ddc4.  call temp:= `a`(v0, v1) @signature `Ln/c/a/v/c$a;.a:(Ln/c/a/x/e;)Ln/c/a/q;` @kind virtual;
  #L41ddca.  v1:= temp @kind object;
  #L41ddcc.  return v1 @kind object;
}
procedure `n.c.a.q` `a`(`n.c.a.v.c$a` v1 @kind this, `n.c.a.x.e` v2 @kind object) @signature `Ln/c/a/v/c$a;.a:(Ln/c/a/x/e;)Ln/c/a/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41dde0.  call temp:= `g`() @signature `Ln/c/a/x/j;.g:()Ln/c/a/x/k;` @kind static;
  #L41dde6.  v0:= temp @kind object;
  #L41dde8.  call temp:= `a`(v2, v0) @signature `Ln/c/a/x/e;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @kind interface;
  #L41ddee.  v2:= temp @kind object;
  #L41ddf0.  v2:= (`n.c.a.q`) v2 @kind object;
  #L41ddf4.  if v2 == 0 then goto L41de02;
  #L41ddf8.  v0:= instanceof @variable v2 @type ^`n.c.a.r` @kind boolean;
  #L41ddfc.  if v0 != 0 then goto L41de02;
  #L41de00.  goto L41de04;
  #L41de02.  v2:= 0I;
  #L41de04.  return v2 @kind object;
}
