record `n.c.a.v.f` @kind class @AccessFlag FINAL {
  `n.c.a.x.e` `n.c.a.v.f.a` @AccessFlag PRIVATE;
  `java.util.Locale` `n.c.a.v.f.b` @AccessFlag PRIVATE;
  `n.c.a.v.h` `n.c.a.v.f.c` @AccessFlag PRIVATE;
  `int` `n.c.a.v.f.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`n.c.a.v.f` v0 @kind this, `n.c.a.x.e` v1 @kind object, `n.c.a.v.b` v2 @kind object) @signature `Ln/c/a/v/f;.<init>:(Ln/c/a/x/e;Ln/c/a/v/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L422560.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L422566.  call temp:= `a`(v1, v2) @signature `Ln/c/a/v/f;.a:(Ln/c/a/x/e;Ln/c/a/v/b;)Ln/c/a/x/e;` @kind static;
  #L42256c.  v1:= temp @kind object;
  #L42256e.  v0.`n.c.a.v.f.a` @type ^`n.c.a.x.e` := v1 @kind object;
  #L422572.  call temp:= `c`(v2) @signature `Ln/c/a/v/b;.c:()Ljava/util/Locale;` @kind virtual;
  #L422578.  v1:= temp @kind object;
  #L42257a.  v0.`n.c.a.v.f.b` @type ^`java.util.Locale` := v1 @kind object;
  #L42257e.  call temp:= `b`(v2) @signature `Ln/c/a/v/b;.b:()Ln/c/a/v/h;` @kind virtual;
  #L422584.  v1:= temp @kind object;
  #L422586.  v0.`n.c.a.v.f.c` @type ^`n.c.a.v.h` := v1 @kind object;
  #L42258a.  return @kind void;
}
procedure `n.c.a.x.e` `a`(`n.c.a.x.e` v9 @kind object, `n.c.a.v.b` v10 @kind object) @signature `Ln/c/a/v/f;.a:(Ln/c/a/x/e;Ln/c/a/v/b;)Ln/c/a/x/e;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L422374.  call temp:= `a`(v10) @signature `Ln/c/a/v/b;.a:()Ln/c/a/u/h;` @kind virtual;
  #L42237a.  v0:= temp @kind object;
  #L42237c.  call temp:= `d`(v10) @signature `Ln/c/a/v/b;.d:()Ln/c/a/q;` @kind virtual;
  #L422382.  v10:= temp @kind object;
  #L422384.  if v0 != 0 then goto L42238e;
  #L422388.  if v10 != 0 then goto L42238e;
  #L42238c.  return v9 @kind object;
  #L42238e.  call temp:= `a`() @signature `Ln/c/a/x/j;.a:()Ln/c/a/x/k;` @kind static;
  #L422394.  v1:= temp @kind object;
  #L422396.  call temp:= `a`(v9, v1) @signature `Ln/c/a/x/e;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @kind interface;
  #L42239c.  v1:= temp @kind object;
  #L42239e.  v1:= (`n.c.a.u.h`) v1 @kind object;
  #L4223a2.  call temp:= `g`() @signature `Ln/c/a/x/j;.g:()Ln/c/a/x/k;` @kind static;
  #L4223a8.  v2:= temp @kind object;
  #L4223aa.  call temp:= `a`(v9, v2) @signature `Ln/c/a/x/e;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @kind interface;
  #L4223b0.  v2:= temp @kind object;
  #L4223b2.  v2:= (`n.c.a.q`) v2 @kind object;
  #L4223b6.  call temp:= `a`(v1, v0) @signature `Ln/c/a/w/d;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4223bc.  v3:= temp;
  #L4223be.  v4:= 0I;
  #L4223c0.  if v3 == 0 then goto L4223c6;
  #L4223c4.  v0:= v4 @kind object;
  #L4223c6.  call temp:= `a`(v2, v10) @signature `Ln/c/a/w/d;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4223cc.  v3:= temp;
  #L4223ce.  if v3 == 0 then goto L4223d4;
  #L4223d2.  v10:= v4 @kind object;
  #L4223d4.  if v0 != 0 then goto L4223de;
  #L4223d8.  if v10 != 0 then goto L4223de;
  #L4223dc.  return v9 @kind object;
  #L4223de.  if v0 == 0 then goto L4223e6;
  #L4223e2.  v3:= v0 @kind object;
  #L4223e4.  goto L4223e8;
  #L4223e6.  v3:= v1 @kind object;
  #L4223e8.  if v10 == 0 then goto L4223ee;
  #L4223ec.  v2:= v10 @kind object;
  #L4223ee.  v5:= " " @kind object;
  #L4223f2.  if v10 == 0 then goto L422492;
  #L4223f6.  v6:= `@@n.c.a.x.a.F` @type ^`n.c.a.x.a` @kind object;
  #L4223fa.  call temp:= `b`(v9, v6) @signature `Ln/c/a/x/e;.b:(Ln/c/a/x/i;)Z` @kind interface;
  #L422400.  v6:= temp;
  #L422402.  if v6 == 0 then goto L422422;
  #L422406.  if v3 == 0 then goto L42240c;
  #L42240a.  goto L422410;
  #L42240c.  v3:= `@@n.c.a.u.m.d` @type ^`n.c.a.u.m` @kind object;
  #L422410.  call temp:= `a`(v9) @signature `Ln/c/a/e;.a:(Ln/c/a/x/e;)Ln/c/a/e;` @kind static;
  #L422416.  v9:= temp @kind object;
  #L422418.  call temp:= `a`(v3, v9, v10) @signature `Ln/c/a/u/h;.a:(Ln/c/a/e;Ln/c/a/q;)Ln/c/a/u/f;` @kind virtual;
  #L42241e.  v9:= temp @kind object;
  #L422420.  return v9 @kind object;
  #L422422.  call temp:= `h`(v10) @signature `Ln/c/a/q;.h:()Ln/c/a/q;` @kind virtual;
  #L422428.  v6:= temp @kind object;
  #L42242a.  call temp:= `d`() @signature `Ln/c/a/x/j;.d:()Ln/c/a/x/k;` @kind static;
  #L422430.  v7:= temp @kind object;
  #L422432.  call temp:= `a`(v9, v7) @signature `Ln/c/a/x/e;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @kind interface;
  #L422438.  v7:= temp @kind object;
  #L42243a.  v7:= (`n.c.a.r`) v7 @kind object;
  #L42243e.  v8:= instanceof @variable v6 @type ^`n.c.a.r` @kind boolean;
  #L422442.  if v8 == 0 then goto L422492;
  #L422446.  if v7 == 0 then goto L422492;
  #L42244a.  call temp:= `equals`(v6, v7) @signature `Ln/c/a/q;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L422450.  v6:= temp;
  #L422452.  if v6 == 0 then goto L422458;
  #L422456.  goto L422492;
  #L422458.  v0:= new `n.c.a.b`;
  #L42245c.  v1:= new `java.lang.StringBuilder`;
  #L422460.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L422466.  v2:= "Invalid override zone for temporal: " @kind object;
  #L42246a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L422470.  call temp:= `append`(v1, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L422476.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42247c.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L422482.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L422488.  v9:= temp @kind object;
  #L42248a.  call `<init>`(v0, v9) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L422490.  throw v0;
  #L422492.  if v0 == 0 then goto L42252a;
  #L422496.  v10:= `@@n.c.a.x.a.x` @type ^`n.c.a.x.a` @kind object;
  #L42249a.  call temp:= `b`(v9, v10) @signature `Ln/c/a/x/e;.b:(Ln/c/a/x/i;)Z` @kind interface;
  #L4224a0.  v10:= temp;
  #L4224a2.  if v10 == 0 then goto L4224b0;
  #L4224a6.  call temp:= `a`(v3, v9) @signature `Ln/c/a/u/h;.a:(Ln/c/a/x/e;)Ln/c/a/u/b;` @kind virtual;
  #L4224ac.  v4:= temp @kind object;
  #L4224ae.  goto L42252a;
  #L4224b0.  v10:= `@@n.c.a.u.m.d` @type ^`n.c.a.u.m` @kind object;
  #L4224b4.  if v0 != v10 then goto L4224bc;
  #L4224b8.  if v1 == 0 then goto L42252a;
  #L4224bc.  call temp:= `values`() @signature `Ln/c/a/x/a;.values:()[Ln/c/a/x/a;` @kind static;
  #L4224c2.  v10:= temp @kind object;
  #L4224c4.  v1:= length @variable v10;
  #L4224c6.  v6:= 0I;
  #L4224c8.  if v6 >= v1 then goto L42252a;
  #L4224cc.  v7:= v10[v6] @kind object;
  #L4224d0.  call temp:= `b`(v7) @signature `Ln/c/a/x/a;.b:()Z` @kind virtual;
  #L4224d6.  v8:= temp;
  #L4224d8.  if v8 == 0 then goto L422524;
  #L4224dc.  call temp:= `b`(v9, v7) @signature `Ln/c/a/x/e;.b:(Ln/c/a/x/i;)Z` @kind interface;
  #L4224e2.  v7:= temp;
  #L4224e4.  if v7 != 0 then goto L4224ea;
  #L4224e8.  goto L422524;
  #L4224ea.  v10:= new `n.c.a.b`;
  #L4224ee.  v1:= new `java.lang.StringBuilder`;
  #L4224f2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4224f8.  v2:= "Invalid override chronology for temporal: " @kind object;
  #L4224fc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L422502.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L422508.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L42250e.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L422514.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L42251a.  v9:= temp @kind object;
  #L42251c.  call `<init>`(v10, v9) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L422522.  throw v10;
  #L422524.  v6:= v6 + 1;
  #L422528.  goto L4224c8;
  #L42252a.  v10:= new `n.c.a.v.f$a`;
  #L42252e.  call `<init>`(v10, v4, v9, v3, v2) @signature `Ln/c/a/v/f$a;.<init>:(Ln/c/a/u/b;Ln/c/a/x/e;Ln/c/a/u/h;Ln/c/a/q;)V` @kind direct;
  #L422534.  return v10 @kind object;
}
procedure `java.lang.Long` `a`(`n.c.a.v.f` v2 @kind this, `n.c.a.x.i` v3 @kind object) @signature `Ln/c/a/v/f;.a:(Ln/c/a/x/i;)Ljava/lang/Long;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L422274.  v0:= v2.`n.c.a.v.f.a` @type ^`n.c.a.x.e` @kind object;
  #L422278.  call temp:= `d`(v0, v3) @signature `Ln/c/a/x/e;.d:(Ln/c/a/x/i;)J` @kind interface;
  #L42227e.  v0:= temp @kind wide;
  #L422280.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L422286.  v3:= temp @kind object;
  #L422288.  return v3 @kind object;
  #L42228a.  v3:= Exception @type ^`n.c.a.b` @kind object;
  #L42228c.  v0:= v2.`n.c.a.v.f.d` @type ^`int`;
  #L422290.  if v0 <= 0 then goto L422298;
  #L422294.  v3:= 0I;
  #L422296.  return v3 @kind object;
  #L422298.  throw v3;
  catch `n.c.a.b` @[L422274..L422288] goto L42228a;
}
procedure `java.lang.Object` `a`(`n.c.a.v.f` v2 @kind this, `n.c.a.x.k` v3 @kind object) @signature `Ln/c/a/v/f;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L4222bc.  v0:= v2.`n.c.a.v.f.a` @type ^`n.c.a.x.e` @kind object;
  #L4222c0.  call temp:= `a`(v0, v3) @signature `Ln/c/a/x/e;.a:(Ln/c/a/x/k;)Ljava/lang/Object;` @kind interface;
  #L4222c6.  v3:= temp @kind object;
  #L4222c8.  if v3 != 0 then goto L422310;
  #L4222cc.  v0:= v2.`n.c.a.v.f.d` @type ^`int`;
  #L4222d0.  if v0 == 0 then goto L4222d6;
  #L4222d4.  goto L422310;
  #L4222d6.  v3:= new `n.c.a.b`;
  #L4222da.  v0:= new `java.lang.StringBuilder`;
  #L4222de.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4222e4.  v1:= "Unable to extract value: " @kind object;
  #L4222e8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4222ee.  v1:= v2.`n.c.a.v.f.a` @type ^`n.c.a.x.e` @kind object;
  #L4222f2.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4222f8.  v1:= temp @kind object;
  #L4222fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L422300.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L422306.  v0:= temp @kind object;
  #L422308.  call `<init>`(v3, v0) @signature `Ln/c/a/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L42230e.  throw v3;
  #L422310.  return v3 @kind object;
}
procedure `void` `a`(`n.c.a.v.f` v1 @kind this) @signature `Ln/c/a/v/f;.a:()V` @AccessFlag  {
    temp;
    v0;

  #L42259c.  v0:= v1.`n.c.a.v.f.d` @type ^`int`;
  #L4225a0.  v0:= v0 + -1;
  #L4225a4.  v1.`n.c.a.v.f.d` @type ^`int` := v0;
  #L4225a8.  return @kind void;
}
procedure `java.util.Locale` `b`(`n.c.a.v.f` v1 @kind this) @signature `Ln/c/a/v/f;.b:()Ljava/util/Locale;` @AccessFlag  {
    temp;
    v0;

  #L422344.  v0:= v1.`n.c.a.v.f.b` @type ^`java.util.Locale` @kind object;
  #L422348.  return v0 @kind object;
}
procedure `n.c.a.v.h` `c`(`n.c.a.v.f` v1 @kind this) @signature `Ln/c/a/v/f;.c:()Ln/c/a/v/h;` @AccessFlag  {
    temp;
    v0;

  #L42235c.  v0:= v1.`n.c.a.v.f.c` @type ^`n.c.a.v.h` @kind object;
  #L422360.  return v0 @kind object;
}
procedure `n.c.a.x.e` `d`(`n.c.a.v.f` v1 @kind this) @signature `Ln/c/a/v/f;.d:()Ln/c/a/x/e;` @AccessFlag  {
    temp;
    v0;

  #L422548.  v0:= v1.`n.c.a.v.f.a` @type ^`n.c.a.x.e` @kind object;
  #L42254c.  return v0 @kind object;
}
procedure `void` `e`(`n.c.a.v.f` v1 @kind this) @signature `Ln/c/a/v/f;.e:()V` @AccessFlag  {
    temp;
    v0;

  #L4225bc.  v0:= v1.`n.c.a.v.f.d` @type ^`int`;
  #L4225c0.  v0:= v0 + 1;
  #L4225c4.  v1.`n.c.a.v.f.d` @type ^`int` := v0;
  #L4225c8.  return @kind void;
}
procedure `java.lang.String` `toString`(`n.c.a.v.f` v1 @kind this) @signature `Ln/c/a/v/f;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L422324.  v0:= v1.`n.c.a.v.f.a` @type ^`n.c.a.x.e` @kind object;
  #L422328.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L42232e.  v0:= temp @kind object;
  #L422330.  return v0 @kind object;
}
