record `n.c.a.v.h` @kind class @AccessFlag PUBLIC_FINAL {
  `char` `n.c.a.v.h.a` @AccessFlag PRIVATE_FINAL;
  `char` `n.c.a.v.h.b` @AccessFlag PRIVATE_FINAL;
  `char` `n.c.a.v.h.c` @AccessFlag PRIVATE_FINAL;
  `char` `n.c.a.v.h.d` @AccessFlag PRIVATE_FINAL;
}
global `n.c.a.v.h` `@@n.c.a.v.h.e` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/c/a/v/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4227d0.  v0:= new `n.c.a.v.h`;
  #L4227d4.  v1:= 48I;
  #L4227d8.  v2:= 43I;
  #L4227dc.  v3:= 45I;
  #L4227e0.  v4:= 46I;
  #L4227e4.  call `<init>`(v0, v1, v2, v3, v4) @signature `Ln/c/a/v/h;.<init>:(CCCC)V` @kind direct;
  #L4227ea.  `@@n.c.a.v.h.e` @type ^`n.c.a.v.h` := v0 @kind object;
  #L4227ee.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L4227f2.  v1:= 16I;
  #L4227f6.  v2:= 0.75F;
  #L4227fa.  v3:= 2I;
  #L4227fc.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:(IFI)V` @kind direct;
  #L422802.  return @kind void;
}
procedure `void` `<init>`(`n.c.a.v.h` v0 @kind this, `char` v1 , `char` v2 , `char` v3 , `char` v4 ) @signature `Ln/c/a/v/h;.<init>:(CCCC)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L422814.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L42281a.  v0.`n.c.a.v.h.a` @type ^`char` := v1 @kind char;
  #L42281e.  v0.`n.c.a.v.h.b` @type ^`char` := v2 @kind char;
  #L422822.  v0.`n.c.a.v.h.c` @type ^`char` := v3 @kind char;
  #L422826.  v0.`n.c.a.v.h.d` @type ^`char` := v4 @kind char;
  #L42282a.  return @kind void;
}
procedure `char` `a`(`n.c.a.v.h` v1 @kind this) @signature `Ln/c/a/v/h;.a:()C` @AccessFlag PUBLIC {
    temp;
    v0;

  #L422670.  v0:= v1.`n.c.a.v.h.d` @type ^`char` @kind char;
  #L422674.  return v0;
}
procedure `int` `a`(`n.c.a.v.h` v1 @kind this, `char` v2 ) @signature `Ln/c/a/v/h;.a:(C)I` @AccessFlag  {
    temp;
    v0;

  #L4226d0.  v0:= v1.`n.c.a.v.h.a` @type ^`char` @kind char;
  #L4226d4.  v2:= v2 - v0 @kind int;
  #L4226d6.  if v2 < 0 then goto L4226e4;
  #L4226da.  v0:= 9I;
  #L4226de.  if v2 > v0 then goto L4226e4;
  #L4226e2.  goto L4226e6;
  #L4226e4.  v2:= -1I;
  #L4226e6.  return v2;
}
procedure `java.lang.String` `a`(`n.c.a.v.h` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Ln/c/a/v/h;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L422720.  v0:= v3.`n.c.a.v.h.a` @type ^`char` @kind char;
  #L422724.  v1:= 48I;
  #L422728.  if v0 != v1 then goto L42272e;
  #L42272c.  return v4 @kind object;
  #L42272e.  v0:= v0 - v1 @kind int;
  #L422730.  call temp:= `toCharArray`(v4) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L422736.  v4:= temp @kind object;
  #L422738.  v1:= 0I;
  #L42273a.  v2:= length @variable v4;
  #L42273c.  if v1 >= v2 then goto L422752;
  #L422740.  v2:= v4[v1] @kind char;
  #L422744.  v2:= v2 + v0 @kind int;
  #L422746.  v2:= (`char`) v2 @kind i2c;
  #L422748.  v4[v1]:= v2 @kind char;
  #L42274c.  v1:= v1 + 1;
  #L422750.  goto L42273a;
  #L422752.  v0:= new `java.lang.String`;
  #L422756.  call `<init>`(v0, v4) @signature `Ljava/lang/String;.<init>:([C)V` @kind direct;
  #L42275c.  return v0 @kind object;
}
procedure `char` `b`(`n.c.a.v.h` v1 @kind this) @signature `Ln/c/a/v/h;.b:()C` @AccessFlag PUBLIC {
    temp;
    v0;

  #L422688.  v0:= v1.`n.c.a.v.h.c` @type ^`char` @kind char;
  #L42268c.  return v0;
}
procedure `char` `c`(`n.c.a.v.h` v1 @kind this) @signature `Ln/c/a/v/h;.c:()C` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4226a0.  v0:= v1.`n.c.a.v.h.b` @type ^`char` @kind char;
  #L4226a4.  return v0;
}
procedure `char` `d`(`n.c.a.v.h` v1 @kind this) @signature `Ln/c/a/v/h;.d:()C` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4226b8.  v0:= v1.`n.c.a.v.h.a` @type ^`char` @kind char;
  #L4226bc.  return v0;
}
procedure `boolean` `equals`(`n.c.a.v.h` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Ln/c/a/v/h;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L422610.  v0:= 1I;
  #L422612.  if v4 != v5 then goto L422618;
  #L422616.  return v0;
  #L422618.  v1:= instanceof @variable v5 @type ^`n.c.a.v.h` @kind boolean;
  #L42261c.  v2:= 0I;
  #L42261e.  if v1 == 0 then goto L42265c;
  #L422622.  v5:= (`n.c.a.v.h`) v5 @kind object;
  #L422626.  v1:= v4.`n.c.a.v.h.a` @type ^`char` @kind char;
  #L42262a.  v3:= v5.`n.c.a.v.h.a` @type ^`char` @kind char;
  #L42262e.  if v1 != v3 then goto L422658;
  #L422632.  v1:= v4.`n.c.a.v.h.b` @type ^`char` @kind char;
  #L422636.  v3:= v5.`n.c.a.v.h.b` @type ^`char` @kind char;
  #L42263a.  if v1 != v3 then goto L422658;
  #L42263e.  v1:= v4.`n.c.a.v.h.c` @type ^`char` @kind char;
  #L422642.  v3:= v5.`n.c.a.v.h.c` @type ^`char` @kind char;
  #L422646.  if v1 != v3 then goto L422658;
  #L42264a.  v1:= v4.`n.c.a.v.h.d` @type ^`char` @kind char;
  #L42264e.  v5:= v5.`n.c.a.v.h.d` @type ^`char` @kind char;
  #L422652.  if v1 != v5 then goto L422658;
  #L422656.  goto L42265a;
  #L422658.  v0:= 0I;
  #L42265a.  return v0;
  #L42265c.  return v2;
}
procedure `int` `hashCode`(`n.c.a.v.h` v2 @kind this) @signature `Ln/c/a/v/h;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4226f8.  v0:= v2.`n.c.a.v.h.a` @type ^`char` @kind char;
  #L4226fc.  v1:= v2.`n.c.a.v.h.b` @type ^`char` @kind char;
  #L422700.  v0:= v0 + v1 @kind int;
  #L422702.  v1:= v2.`n.c.a.v.h.c` @type ^`char` @kind char;
  #L422706.  v0:= v0 + v1 @kind int;
  #L422708.  v1:= v2.`n.c.a.v.h.d` @type ^`char` @kind char;
  #L42270c.  v0:= v0 + v1 @kind int;
  #L42270e.  return v0;
}
procedure `java.lang.String` `toString`(`n.c.a.v.h` v2 @kind this) @signature `Ln/c/a/v/h;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L422770.  v0:= new `java.lang.StringBuilder`;
  #L422774.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L42277a.  v1:= "DecimalStyle[" @kind object;
  #L42277e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L422784.  v1:= v2.`n.c.a.v.h.a` @type ^`char` @kind char;
  #L422788.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L42278e.  v1:= v2.`n.c.a.v.h.b` @type ^`char` @kind char;
  #L422792.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L422798.  v1:= v2.`n.c.a.v.h.c` @type ^`char` @kind char;
  #L42279c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4227a2.  v1:= v2.`n.c.a.v.h.d` @type ^`char` @kind char;
  #L4227a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4227ac.  v1:= "]" @kind object;
  #L4227b0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4227b6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4227bc.  v0:= temp @kind object;
  #L4227be.  return v0 @kind object;
}
