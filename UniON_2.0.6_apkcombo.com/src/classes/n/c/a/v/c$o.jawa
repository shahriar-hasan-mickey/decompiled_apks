record `n.c.a.v.c$o` @kind class @AccessFlag FINAL extends `n.c.a.v.c$g` @kind interface {
  `n.c.a.x.i` `n.c.a.v.c$o.b` @AccessFlag PRIVATE_FINAL;
  `n.c.a.v.l` `n.c.a.v.c$o.c` @AccessFlag PRIVATE_FINAL;
  `n.c.a.v.g` `n.c.a.v.c$o.d` @AccessFlag PRIVATE_FINAL;
  `n.c.a.v.c$j` `n.c.a.v.c$o.e` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`n.c.a.v.c$o` v0 @kind this, `n.c.a.x.i` v1 @kind object, `n.c.a.v.l` v2 @kind object, `n.c.a.v.g` v3 @kind object) @signature `Ln/c/a/v/c$o;.<init>:(Ln/c/a/x/i;Ln/c/a/v/l;Ln/c/a/v/g;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L41fef4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L41fefa.  v0.`n.c.a.v.c$o.b` @type ^`n.c.a.x.i` := v1 @kind object;
  #L41fefe.  v0.`n.c.a.v.c$o.c` @type ^`n.c.a.v.l` := v2 @kind object;
  #L41ff02.  v0.`n.c.a.v.c$o.d` @type ^`n.c.a.v.g` := v3 @kind object;
  #L41ff06.  return @kind void;
}
procedure `n.c.a.v.c$j` `a`(`n.c.a.v.c$o` v5 @kind this) @signature `Ln/c/a/v/c$o;.a:()Ln/c/a/v/c$j;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L41feb8.  v0:= v5.`n.c.a.v.c$o.e` @type ^`n.c.a.v.c$j` @kind object;
  #L41febc.  if v0 != 0 then goto L41fedc;
  #L41fec0.  v0:= new `n.c.a.v.c$j`;
  #L41fec4.  v1:= v5.`n.c.a.v.c$o.b` @type ^`n.c.a.x.i` @kind object;
  #L41fec8.  v2:= 1I;
  #L41feca.  v3:= 19I;
  #L41fece.  v4:= `@@n.c.a.v.j.b` @type ^`n.c.a.v.j` @kind object;
  #L41fed2.  call `<init>`(v0, v1, v2, v3, v4) @signature `Ln/c/a/v/c$j;.<init>:(Ln/c/a/x/i;IILn/c/a/v/j;)V` @kind direct;
  #L41fed8.  v5.`n.c.a.v.c$o.e` @type ^`n.c.a.v.c$j` := v0 @kind object;
  #L41fedc.  v0:= v5.`n.c.a.v.c$o.e` @type ^`n.c.a.v.c$j` @kind object;
  #L41fee0.  return v0 @kind object;
}
procedure `int` `a`(`n.c.a.v.c$o` v10 @kind this, `n.c.a.v.d` v11 @kind object, `java.lang.CharSequence` v12 @kind object, `int` v13 ) @signature `Ln/c/a/v/c$o;.a:(Ln/c/a/v/d;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L41fd4c.  call temp:= `length`(v12) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L41fd52.  v0:= temp;
  #L41fd54.  if v13 < 0 then goto L41fe22;
  #L41fd58.  if v13 > v0 then goto L41fe22;
  #L41fd5c.  call temp:= `f`(v11) @signature `Ln/c/a/v/d;.f:()Z` @kind virtual;
  #L41fd62.  v0:= temp;
  #L41fd64.  if v0 == 0 then goto L41fd6e;
  #L41fd68.  v0:= v10.`n.c.a.v.c$o.c` @type ^`n.c.a.v.l` @kind object;
  #L41fd6c.  goto L41fd70;
  #L41fd6e.  v0:= 0I;
  #L41fd70.  v1:= v10.`n.c.a.v.c$o.d` @type ^`n.c.a.v.g` @kind object;
  #L41fd74.  v2:= v10.`n.c.a.v.c$o.b` @type ^`n.c.a.x.i` @kind object;
  #L41fd78.  call temp:= `c`(v11) @signature `Ln/c/a/v/d;.c:()Ljava/util/Locale;` @kind virtual;
  #L41fd7e.  v3:= temp @kind object;
  #L41fd80.  call temp:= `a`(v1, v2, v0, v3) @signature `Ln/c/a/v/g;.a:(Ln/c/a/x/i;Ln/c/a/v/l;Ljava/util/Locale;)Ljava/util/Iterator;` @kind virtual;
  #L41fd86.  v0:= temp @kind object;
  #L41fd88.  if v0 == 0 then goto L41fe10;
  #L41fd8c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L41fd92.  v1:= temp;
  #L41fd94.  if v1 == 0 then goto L41fe00;
  #L41fd98.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L41fd9e.  v1:= temp @kind object;
  #L41fda0.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L41fda4.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L41fdaa.  v2:= temp @kind object;
  #L41fdac.  v2:= (`java.lang.String`) v2 @kind object;
  #L41fdb0.  v5:= 0I;
  #L41fdb2.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L41fdb8.  v8:= temp;
  #L41fdba.  v3:= v11 @kind object;
  #L41fdbc.  v4:= v2 @kind object;
  #L41fdbe.  v6:= v12 @kind object;
  #L41fdc0.  v7:= v13;
  #L41fdc2.  call temp:= `a`(v3, v4, v5, v6, v7, v8) @signature `Ln/c/a/v/d;.a:(Ljava/lang/CharSequence;ILjava/lang/CharSequence;II)Z` @kind virtual;
  #L41fdc8.  v3:= temp;
  #L41fdca.  if v3 == 0 then goto L41fd8c;
  #L41fdce.  v5:= v10.`n.c.a.v.c$o.b` @type ^`n.c.a.x.i` @kind object;
  #L41fdd2.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L41fdd8.  v12:= temp @kind object;
  #L41fdda.  v12:= (`java.lang.Long`) v12 @kind object;
  #L41fdde.  call temp:= `longValue`(v12) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L41fde4.  v6:= temp @kind wide;
  #L41fde6.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L41fdec.  v12:= temp;
  #L41fdee.  v9:= v13 + v12 @kind int;
  #L41fdf2.  v4:= v11 @kind object;
  #L41fdf4.  v8:= v13;
  #L41fdf6.  call temp:= `a`(v4, v5, v6, v8, v9) @signature `Ln/c/a/v/d;.a:(Ln/c/a/x/i;JII)I` @kind virtual;
  #L41fdfc.  v11:= temp;
  #L41fdfe.  return v11;
  #L41fe00.  call temp:= `f`(v11) @signature `Ln/c/a/v/d;.f:()Z` @kind virtual;
  #L41fe06.  v0:= temp;
  #L41fe08.  if v0 == 0 then goto L41fe10;
  #L41fe0c.  v11:= ~v13 @kind int;
  #L41fe0e.  return v11;
  #L41fe10.  call temp:= `a`(v10) @signature `Ln/c/a/v/c$o;.a:()Ln/c/a/v/c$j;` @kind direct;
  #L41fe16.  v0:= temp @kind object;
  #L41fe18.  call temp:= `a`(v0, v11, v12, v13) @signature `Ln/c/a/v/c$j;.a:(Ln/c/a/v/d;Ljava/lang/CharSequence;I)I` @kind virtual;
  #L41fe1e.  v11:= temp;
  #L41fe20.  return v11;
  #L41fe22.  v11:= new `java.lang.IndexOutOfBoundsException`;
  #L41fe26.  call `<init>`(v11) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L41fe2c.  throw v11;
}
procedure `boolean` `a`(`n.c.a.v.c$o` v7 @kind this, `n.c.a.v.f` v8 @kind object, `java.lang.StringBuilder` v9 @kind object) @signature `Ln/c/a/v/c$o;.a:(Ln/c/a/v/f;Ljava/lang/StringBuilder;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L41fcd8.  v0:= v7.`n.c.a.v.c$o.b` @type ^`n.c.a.x.i` @kind object;
  #L41fcdc.  call temp:= `a`(v8, v0) @signature `Ln/c/a/v/f;.a:(Ln/c/a/x/i;)Ljava/lang/Long;` @kind virtual;
  #L41fce2.  v0:= temp @kind object;
  #L41fce4.  if v0 != 0 then goto L41fcec;
  #L41fce8.  v8:= 0I;
  #L41fcea.  return v8;
  #L41fcec.  v1:= v7.`n.c.a.v.c$o.d` @type ^`n.c.a.v.g` @kind object;
  #L41fcf0.  v2:= v7.`n.c.a.v.c$o.b` @type ^`n.c.a.x.i` @kind object;
  #L41fcf4.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L41fcfa.  v3:= temp @kind wide;
  #L41fcfc.  v5:= v7.`n.c.a.v.c$o.c` @type ^`n.c.a.v.l` @kind object;
  #L41fd00.  call temp:= `b`(v8) @signature `Ln/c/a/v/f;.b:()Ljava/util/Locale;` @kind virtual;
  #L41fd06.  v6:= temp @kind object;
  #L41fd08.  v0:= v1 @kind object;
  #L41fd0a.  v1:= v2 @kind object;
  #L41fd0c.  v2:= v3 @kind wide;
  #L41fd0e.  v4:= v5 @kind object;
  #L41fd10.  v5:= v6 @kind object;
  #L41fd12.  call temp:= `a`(v0, v1, v2, v4, v5) @signature `Ln/c/a/v/g;.a:(Ln/c/a/x/i;JLn/c/a/v/l;Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L41fd18.  v0:= temp @kind object;
  #L41fd1a.  if v0 != 0 then goto L41fd30;
  #L41fd1e.  call temp:= `a`(v7) @signature `Ln/c/a/v/c$o;.a:()Ln/c/a/v/c$j;` @kind direct;
  #L41fd24.  v0:= temp @kind object;
  #L41fd26.  call temp:= `a`(v0, v8, v9) @signature `Ln/c/a/v/c$j;.a:(Ln/c/a/v/f;Ljava/lang/StringBuilder;)Z` @kind virtual;
  #L41fd2c.  v8:= temp;
  #L41fd2e.  return v8;
  #L41fd30.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41fd36.  v8:= 1I;
  #L41fd38.  return v8;
}
procedure `java.lang.String` `toString`(`n.c.a.v.c$o` v4 @kind this) @signature `Ln/c/a/v/c$o;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L41fe40.  v0:= v4.`n.c.a.v.c$o.c` @type ^`n.c.a.v.l` @kind object;
  #L41fe44.  v1:= `@@n.c.a.v.l.b` @type ^`n.c.a.v.l` @kind object;
  #L41fe48.  v2:= ")" @kind object;
  #L41fe4c.  v3:= "Text(" @kind object;
  #L41fe50.  if v0 != v1 then goto L41fe7e;
  #L41fe54.  v0:= new `java.lang.StringBuilder`;
  #L41fe58.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L41fe5e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41fe64.  v1:= v4.`n.c.a.v.c$o.b` @type ^`n.c.a.x.i` @kind object;
  #L41fe68.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41fe6e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41fe74.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L41fe7a.  v0:= temp @kind object;
  #L41fe7c.  return v0 @kind object;
  #L41fe7e.  v0:= new `java.lang.StringBuilder`;
  #L41fe82.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L41fe88.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41fe8e.  v1:= v4.`n.c.a.v.c$o.b` @type ^`n.c.a.x.i` @kind object;
  #L41fe92.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41fe98.  v1:= "," @kind object;
  #L41fe9c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41fea2.  v1:= v4.`n.c.a.v.c$o.c` @type ^`n.c.a.v.l` @kind object;
  #L41fea6.  goto L41fe68;
}
