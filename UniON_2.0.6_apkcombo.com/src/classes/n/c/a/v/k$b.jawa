record `n.c.a.v.k$b` @kind class @AccessFlag FINAL {
  `java.util.Map` `n.c.a.v.k$b.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `n.c.a.v.k$b.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`n.c.a.v.k$b` v9 @kind this, `java.util.Map` v10 @kind object) @signature `Ln/c/a/v/k$b;.<init>:(Ljava/util/Map;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L422b44.  call `<init>`(v9) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L422b4a.  v9.`n.c.a.v.k$b.a` @type ^`java.util.Map` := v10 @kind object;
  #L422b4e.  v0:= new `java.util.HashMap`;
  #L422b52.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L422b58.  v1:= new `java.util.ArrayList`;
  #L422b5c.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L422b62.  call temp:= `keySet`(v10) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L422b68.  v2:= temp @kind object;
  #L422b6a.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L422b70.  v2:= temp @kind object;
  #L422b72.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L422b78.  v3:= temp;
  #L422b7a.  if v3 == 0 then goto L422c28;
  #L422b7e.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L422b84.  v3:= temp @kind object;
  #L422b86.  v3:= (`n.c.a.v.l`) v3 @kind object;
  #L422b8a.  v4:= new `java.util.HashMap`;
  #L422b8e.  call `<init>`(v4) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L422b94.  call temp:= `get`(v10, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L422b9a.  v5:= temp @kind object;
  #L422b9c.  v5:= (`java.util.Map`) v5 @kind object;
  #L422ba0.  call temp:= `entrySet`(v5) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L422ba6.  v5:= temp @kind object;
  #L422ba8.  call temp:= `iterator`(v5) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L422bae.  v5:= temp @kind object;
  #L422bb0.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L422bb6.  v6:= temp;
  #L422bb8.  if v6 == 0 then goto L422bf2;
  #L422bbc.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L422bc2.  v6:= temp @kind object;
  #L422bc4.  v6:= (`java.util.Map$Entry`) v6 @kind object;
  #L422bc8.  call temp:= `getValue`(v6) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L422bce.  v7:= temp @kind object;
  #L422bd0.  call temp:= `getValue`(v6) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L422bd6.  v8:= temp @kind object;
  #L422bd8.  call temp:= `getKey`(v6) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L422bde.  v6:= temp @kind object;
  #L422be0.  call temp:= `a`(v8, v6) @signature `Ln/c/a/v/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map$Entry;` @kind static;
  #L422be6.  v6:= temp @kind object;
  #L422be8.  call temp:= `put`(v4, v7, v6) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L422bee.  v6:= temp @kind object;
  #L422bf0.  goto L422bb0;
  #L422bf2.  v5:= new `java.util.ArrayList`;
  #L422bf6.  call temp:= `values`(v4) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L422bfc.  v4:= temp @kind object;
  #L422bfe.  call `<init>`(v5, v4) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L422c04.  call temp:= `a`() @signature `Ln/c/a/v/k;.a:()Ljava/util/Comparator;` @kind static;
  #L422c0a.  v4:= temp @kind object;
  #L422c0c.  call `sort`(v5, v4) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;Ljava/util/Comparator;)V` @kind static;
  #L422c12.  call temp:= `put`(v0, v3, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L422c18.  call temp:= `addAll`(v1, v5) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L422c1e.  v3:= 0I;
  #L422c20.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L422c26.  goto L422b72;
  #L422c28.  call temp:= `a`() @signature `Ln/c/a/v/k;.a:()Ljava/util/Comparator;` @kind static;
  #L422c2e.  v10:= temp @kind object;
  #L422c30.  call `sort`(v1, v10) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;Ljava/util/Comparator;)V` @kind static;
  #L422c36.  v9.`n.c.a.v.k$b.b` @type ^`java.util.Map` := v0 @kind object;
  #L422c3a.  return @kind void;
}
procedure `java.lang.String` `a`(`n.c.a.v.k$b` v1 @kind this, `long` v2 , `n.c.a.v.l` v4 @kind object) @signature `Ln/c/a/v/k$b;.a:(JLn/c/a/v/l;)Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;

  #L422ad0.  v0:= v1.`n.c.a.v.k$b.a` @type ^`java.util.Map` @kind object;
  #L422ad4.  call temp:= `get`(v0, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L422ada.  v4:= temp @kind object;
  #L422adc.  v4:= (`java.util.Map`) v4 @kind object;
  #L422ae0.  if v4 == 0 then goto L422afa;
  #L422ae4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L422aea.  v2:= temp @kind object;
  #L422aec.  call temp:= `get`(v4, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L422af2.  v2:= temp @kind object;
  #L422af4.  v2:= (`java.lang.String`) v2 @kind object;
  #L422af8.  goto L422afc;
  #L422afa.  v2:= 0I;
  #L422afc.  return v2 @kind object;
}
procedure `java.util.Iterator` `a`(`n.c.a.v.k$b` v1 @kind this, `n.c.a.v.l` v2 @kind object) @signature `Ln/c/a/v/k$b;.a:(Ln/c/a/v/l;)Ljava/util/Iterator;` @AccessFlag  {
    temp;
    v0;

  #L422b10.  v0:= v1.`n.c.a.v.k$b.b` @type ^`java.util.Map` @kind object;
  #L422b14.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L422b1a.  v2:= temp @kind object;
  #L422b1c.  v2:= (`java.util.List`) v2 @kind object;
  #L422b20.  if v2 == 0 then goto L422b2e;
  #L422b24.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L422b2a.  v2:= temp @kind object;
  #L422b2c.  goto L422b30;
  #L422b2e.  v2:= 0I;
  #L422b30.  return v2 @kind object;
}
