record `n.b.a.d$a` @kind class @AccessFlag  extends `n.b.a.d` @kind class {
  `n.b.a.h` `n.b.a.d$a.A` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `byte` `n.b.a.d$a.z` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`n.b.a.d$a` v0 @kind this, `java.lang.String` v1 @kind object, `byte` v2 , `n.b.a.h` v3 @kind object, `n.b.a.h` v4 @kind object) @signature `Ln/b/a/d$a;.<init>:(Ljava/lang/String;BLn/b/a/h;Ln/b/a/h;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3f6e5c.  call `<init>`(v0, v1) @signature `Ln/b/a/d;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f6e62.  v0.`n.b.a.d$a.z` @type ^`byte` := v2 @kind byte;
  #L3f6e66.  v0.`n.b.a.d$a.A` @type ^`n.b.a.h` := v3 @kind object;
  #L3f6e6a.  return @kind void;
}
procedure `n.b.a.c` `a`(`n.b.a.d$a` v1 @kind this, `n.b.a.a` v2 @kind object) @signature `Ln/b/a/d$a;.a:(Ln/b/a/a;)Ln/b/a/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f6ccc.  call temp:= `a`(v2) @signature `Ln/b/a/e;.a:(Ln/b/a/a;)Ln/b/a/a;` @kind static;
  #L3f6cd2.  v2:= temp @kind object;
  #L3f6cd4.  v0:= v1.`n.b.a.d$a.z` @type ^`byte` @kind byte;
  #L3f6cd8.  goto L3f6dd0;
  #L3f6cde.  v2:= new `java.lang.InternalError`;
  #L3f6ce2.  call `<init>`(v2) @signature `Ljava/lang/InternalError;.<init>:()V` @kind direct;
  #L3f6ce8.  throw v2;
  #L3f6cea.  call temp:= `s`(v2) @signature `Ln/b/a/a;.s:()Ln/b/a/c;` @kind virtual;
  #L3f6cf0.  v2:= temp @kind object;
  #L3f6cf2.  return v2 @kind object;
  #L3f6cf4.  call temp:= `r`(v2) @signature `Ln/b/a/a;.r:()Ln/b/a/c;` @kind virtual;
  #L3f6cfa.  v2:= temp @kind object;
  #L3f6cfc.  return v2 @kind object;
  #L3f6cfe.  call temp:= `z`(v2) @signature `Ln/b/a/a;.z:()Ln/b/a/c;` @kind virtual;
  #L3f6d04.  v2:= temp @kind object;
  #L3f6d06.  return v2 @kind object;
  #L3f6d08.  call temp:= `y`(v2) @signature `Ln/b/a/a;.y:()Ln/b/a/c;` @kind virtual;
  #L3f6d0e.  v2:= temp @kind object;
  #L3f6d10.  return v2 @kind object;
  #L3f6d12.  call temp:= `u`(v2) @signature `Ln/b/a/a;.u:()Ln/b/a/c;` @kind virtual;
  #L3f6d18.  v2:= temp @kind object;
  #L3f6d1a.  return v2 @kind object;
  #L3f6d1c.  call temp:= `t`(v2) @signature `Ln/b/a/a;.t:()Ln/b/a/c;` @kind virtual;
  #L3f6d22.  v2:= temp @kind object;
  #L3f6d24.  return v2 @kind object;
  #L3f6d26.  call temp:= `n`(v2) @signature `Ln/b/a/a;.n:()Ln/b/a/c;` @kind virtual;
  #L3f6d2c.  v2:= temp @kind object;
  #L3f6d2e.  return v2 @kind object;
  #L3f6d30.  call temp:= `c`(v2) @signature `Ln/b/a/a;.c:()Ln/b/a/c;` @kind virtual;
  #L3f6d36.  v2:= temp @kind object;
  #L3f6d38.  return v2 @kind object;
  #L3f6d3a.  call temp:= `d`(v2) @signature `Ln/b/a/a;.d:()Ln/b/a/c;` @kind virtual;
  #L3f6d40.  v2:= temp @kind object;
  #L3f6d42.  return v2 @kind object;
  #L3f6d44.  call temp:= `o`(v2) @signature `Ln/b/a/a;.o:()Ln/b/a/c;` @kind virtual;
  #L3f6d4a.  v2:= temp @kind object;
  #L3f6d4c.  return v2 @kind object;
  #L3f6d4e.  call temp:= `l`(v2) @signature `Ln/b/a/a;.l:()Ln/b/a/c;` @kind virtual;
  #L3f6d54.  v2:= temp @kind object;
  #L3f6d56.  return v2 @kind object;
  #L3f6d58.  call temp:= `f`(v2) @signature `Ln/b/a/a;.f:()Ln/b/a/c;` @kind virtual;
  #L3f6d5e.  v2:= temp @kind object;
  #L3f6d60.  return v2 @kind object;
  #L3f6d62.  call temp:= `B`(v2) @signature `Ln/b/a/a;.B:()Ln/b/a/c;` @kind virtual;
  #L3f6d68.  v2:= temp @kind object;
  #L3f6d6a.  return v2 @kind object;
  #L3f6d6c.  call temp:= `D`(v2) @signature `Ln/b/a/a;.D:()Ln/b/a/c;` @kind virtual;
  #L3f6d72.  v2:= temp @kind object;
  #L3f6d74.  return v2 @kind object;
  #L3f6d76.  call temp:= `E`(v2) @signature `Ln/b/a/a;.E:()Ln/b/a/c;` @kind virtual;
  #L3f6d7c.  v2:= temp @kind object;
  #L3f6d7e.  return v2 @kind object;
  #L3f6d80.  call temp:= `e`(v2) @signature `Ln/b/a/a;.e:()Ln/b/a/c;` @kind virtual;
  #L3f6d86.  v2:= temp @kind object;
  #L3f6d88.  return v2 @kind object;
  #L3f6d8a.  call temp:= `w`(v2) @signature `Ln/b/a/a;.w:()Ln/b/a/c;` @kind virtual;
  #L3f6d90.  v2:= temp @kind object;
  #L3f6d92.  return v2 @kind object;
  #L3f6d94.  call temp:= `g`(v2) @signature `Ln/b/a/a;.g:()Ln/b/a/c;` @kind virtual;
  #L3f6d9a.  v2:= temp @kind object;
  #L3f6d9c.  return v2 @kind object;
  #L3f6d9e.  call temp:= `H`(v2) @signature `Ln/b/a/a;.H:()Ln/b/a/c;` @kind virtual;
  #L3f6da4.  v2:= temp @kind object;
  #L3f6da6.  return v2 @kind object;
  #L3f6da8.  call temp:= `I`(v2) @signature `Ln/b/a/a;.I:()Ln/b/a/c;` @kind virtual;
  #L3f6dae.  v2:= temp @kind object;
  #L3f6db0.  return v2 @kind object;
  #L3f6db2.  call temp:= `b`(v2) @signature `Ln/b/a/a;.b:()Ln/b/a/c;` @kind virtual;
  #L3f6db8.  v2:= temp @kind object;
  #L3f6dba.  return v2 @kind object;
  #L3f6dbc.  call temp:= `J`(v2) @signature `Ln/b/a/a;.J:()Ln/b/a/c;` @kind virtual;
  #L3f6dc2.  v2:= temp @kind object;
  #L3f6dc4.  return v2 @kind object;
  #L3f6dc6.  call temp:= `i`(v2) @signature `Ln/b/a/a;.i:()Ln/b/a/c;` @kind virtual;
  #L3f6dcc.  v2:= temp @kind object;
  #L3f6dce.  return v2 @kind object;
  #L3f6dd0.  switch v0
                  | 1 => goto L3f6dc6
                  | 2 => goto L3f6dbc
                  | 3 => goto L3f6db2
                  | 4 => goto L3f6da8
                  | 5 => goto L3f6d9e
                  | 6 => goto L3f6d94
                  | 7 => goto L3f6d8a
                  | 8 => goto L3f6d80
                  | 9 => goto L3f6d76
                  | 10 => goto L3f6d6c
                  | 11 => goto L3f6d62
                  | 12 => goto L3f6d58
                  | 13 => goto L3f6d4e
                  | 14 => goto L3f6d44
                  | 15 => goto L3f6d3a
                  | 16 => goto L3f6d30
                  | 17 => goto L3f6d26
                  | 18 => goto L3f6d1c
                  | 19 => goto L3f6d12
                  | 20 => goto L3f6d08
                  | 21 => goto L3f6cfe
                  | 22 => goto L3f6cf4
                  | 23 => goto L3f6cea
                  | else => goto L3f6cde;
}
procedure `n.b.a.h` `a`(`n.b.a.d$a` v1 @kind this) @signature `Ln/b/a/d$a;.a:()Ln/b/a/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f6e44.  v0:= v1.`n.b.a.d$a.A` @type ^`n.b.a.h` @kind object;
  #L3f6e48.  return v0 @kind object;
}
procedure `boolean` `equals`(`n.b.a.d$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Ln/b/a/d$a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f6c74.  v0:= 1I;
  #L3f6c76.  if v3 != v4 then goto L3f6c7c;
  #L3f6c7a.  return v0;
  #L3f6c7c.  v1:= instanceof @variable v4 @type ^`n.b.a.d$a` @kind boolean;
  #L3f6c80.  v2:= 0I;
  #L3f6c82.  if v1 == 0 then goto L3f6c9c;
  #L3f6c86.  v1:= v3.`n.b.a.d$a.z` @type ^`byte` @kind byte;
  #L3f6c8a.  v4:= (`n.b.a.d$a`) v4 @kind object;
  #L3f6c8e.  v4:= v4.`n.b.a.d$a.z` @type ^`byte` @kind byte;
  #L3f6c92.  if v1 != v4 then goto L3f6c98;
  #L3f6c96.  goto L3f6c9a;
  #L3f6c98.  v0:= 0I;
  #L3f6c9a.  return v0;
  #L3f6c9c.  return v2;
}
procedure `int` `hashCode`(`n.b.a.d$a` v2 @kind this) @signature `Ln/b/a/d$a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f6cb0.  v0:= v2.`n.b.a.d$a.z` @type ^`byte` @kind byte;
  #L3f6cb4.  v1:= 1I;
  #L3f6cb6.  v0:= v1 ^< v0 @kind int;
  #L3f6cba.  return v0;
}
