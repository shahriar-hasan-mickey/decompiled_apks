record `n.b.a.v.b$d` @kind class @AccessFlag FINAL {
  `n.b.a.v.b$b` `n.b.a.v.b$d.a` @AccessFlag FINAL;
  `java.lang.String` `n.b.a.v.b$d.b` @AccessFlag FINAL;
  `int` `n.b.a.v.b$d.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`n.b.a.v.b$d` v0 @kind this, `n.b.a.v.b$b` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Ln/b/a/v/b$d;.<init>:(Ln/b/a/v/b$b;Ljava/lang/String;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L406e48.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L406e4e.  v0.`n.b.a.v.b$d.a` @type ^`n.b.a.v.b$b` := v1 @kind object;
  #L406e52.  v0.`n.b.a.v.b$d.b` @type ^`java.lang.String` := v2 @kind object;
  #L406e56.  v0.`n.b.a.v.b$d.c` @type ^`int` := v3;
  #L406e5a.  return @kind void;
}
procedure `n.b.a.v.b$d` `a`(`java.io.DataInput` v5 @kind object) @signature `Ln/b/a/v/b$d;.a:(Ljava/io/DataInput;)Ln/b/a/v/b$d;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L406e10.  v0:= new `n.b.a.v.b$d`;
  #L406e14.  call temp:= `a`(v5) @signature `Ln/b/a/v/b$b;.a:(Ljava/io/DataInput;)Ln/b/a/v/b$b;` @kind static;
  #L406e1a.  v1:= temp @kind object;
  #L406e1c.  call temp:= `readUTF`(v5) @signature `Ljava/io/DataInput;.readUTF:()Ljava/lang/String;` @kind interface;
  #L406e22.  v2:= temp @kind object;
  #L406e24.  call temp:= `a`(v5) @signature `Ln/b/a/v/b;.a:(Ljava/io/DataInput;)J` @kind static;
  #L406e2a.  v3:= temp @kind wide;
  #L406e2c.  v5:= (`int`) v3 @kind l2i;
  #L406e2e.  call `<init>`(v0, v1, v2, v5) @signature `Ln/b/a/v/b$d;.<init>:(Ln/b/a/v/b$b;Ljava/lang/String;I)V` @kind direct;
  #L406e34.  return v0 @kind object;
}
procedure `long` `a`(`n.b.a.v.b$d` v1 @kind this, `long` v2 , `int` v4 , `int` v5 ) @signature `Ln/b/a/v/b$d;.a:(JII)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L406dd0.  v0:= v1.`n.b.a.v.b$d.a` @type ^`n.b.a.v.b$b` @kind object;
  #L406dd4.  call temp:= `a`(v0, v2, v4, v5) @signature `Ln/b/a/v/b$b;.a:(JII)J` @kind virtual;
  #L406dda.  v2:= temp @kind wide;
  #L406ddc.  return v2 @kind wide;
}
procedure `java.lang.String` `a`(`n.b.a.v.b$d` v1 @kind this) @signature `Ln/b/a/v/b$d;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L406d60.  v0:= v1.`n.b.a.v.b$d.b` @type ^`java.lang.String` @kind object;
  #L406d64.  return v0 @kind object;
}
procedure `int` `b`(`n.b.a.v.b$d` v1 @kind this) @signature `Ln/b/a/v/b$d;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L406d48.  v0:= v1.`n.b.a.v.b$d.c` @type ^`int`;
  #L406d4c.  return v0;
}
procedure `long` `b`(`n.b.a.v.b$d` v1 @kind this, `long` v2 , `int` v4 , `int` v5 ) @signature `Ln/b/a/v/b$d;.b:(JII)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L406df0.  v0:= v1.`n.b.a.v.b$d.a` @type ^`n.b.a.v.b$b` @kind object;
  #L406df4.  call temp:= `b`(v0, v2, v4, v5) @signature `Ln/b/a/v/b$b;.b:(JII)J` @kind virtual;
  #L406dfa.  v2:= temp @kind wide;
  #L406dfc.  return v2 @kind wide;
}
procedure `boolean` `equals`(`n.b.a.v.b$d` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Ln/b/a/v/b$d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L406ce4.  v0:= 1I;
  #L406ce6.  if v4 != v5 then goto L406cec;
  #L406cea.  return v0;
  #L406cec.  v1:= instanceof @variable v5 @type ^`n.b.a.v.b$d` @kind boolean;
  #L406cf0.  v2:= 0I;
  #L406cf2.  if v1 == 0 then goto L406d34;
  #L406cf6.  v5:= (`n.b.a.v.b$d`) v5 @kind object;
  #L406cfa.  v1:= v4.`n.b.a.v.b$d.c` @type ^`int`;
  #L406cfe.  v3:= v5.`n.b.a.v.b$d.c` @type ^`int`;
  #L406d02.  if v1 != v3 then goto L406d30;
  #L406d06.  v1:= v4.`n.b.a.v.b$d.b` @type ^`java.lang.String` @kind object;
  #L406d0a.  v3:= v5.`n.b.a.v.b$d.b` @type ^`java.lang.String` @kind object;
  #L406d0e.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L406d14.  v1:= temp;
  #L406d16.  if v1 == 0 then goto L406d30;
  #L406d1a.  v1:= v4.`n.b.a.v.b$d.a` @type ^`n.b.a.v.b$b` @kind object;
  #L406d1e.  v5:= v5.`n.b.a.v.b$d.a` @type ^`n.b.a.v.b$b` @kind object;
  #L406d22.  call temp:= `equals`(v1, v5) @signature `Ln/b/a/v/b$b;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L406d28.  v5:= temp;
  #L406d2a.  if v5 == 0 then goto L406d30;
  #L406d2e.  goto L406d32;
  #L406d30.  v0:= 0I;
  #L406d32.  return v0;
  #L406d34.  return v2;
}
procedure `java.lang.String` `toString`(`n.b.a.v.b$d` v2 @kind this) @signature `Ln/b/a/v/b$d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L406d78.  v0:= new `java.lang.StringBuilder`;
  #L406d7c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L406d82.  v1:= v2.`n.b.a.v.b$d.a` @type ^`n.b.a.v.b$b` @kind object;
  #L406d86.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L406d8c.  v1:= " named " @kind object;
  #L406d90.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L406d96.  v1:= v2.`n.b.a.v.b$d.b` @type ^`java.lang.String` @kind object;
  #L406d9a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L406da0.  v1:= " at " @kind object;
  #L406da4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L406daa.  v1:= v2.`n.b.a.v.b$d.c` @type ^`int`;
  #L406dae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L406db4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L406dba.  v0:= temp @kind object;
  #L406dbc.  return v0 @kind object;
}
