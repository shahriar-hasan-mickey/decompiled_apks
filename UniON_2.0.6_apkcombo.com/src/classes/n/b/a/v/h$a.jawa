record `n.b.a.v.h$a` @kind class @AccessFlag  extends `java.security.PrivilegedAction` @kind interface {
  `java.lang.String` `n.b.a.v.h$a.a` @AccessFlag FINAL_SYNTHETIC;
  `n.b.a.v.h` `n.b.a.v.h$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`n.b.a.v.h$a` v0 @kind this, `n.b.a.v.h` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Ln/b/a/v/h$a;.<init>:(Ln/b/a/v/h;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L407680.  v0.`n.b.a.v.h$a.b` @type ^`n.b.a.v.h` := v1 @kind object;
  #L407684.  v0.`n.b.a.v.h$a.a` @type ^`java.lang.String` := v2 @kind object;
  #L407688.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40768e.  return @kind void;
}
procedure `java.io.InputStream` `run`(`n.b.a.v.h$a` v2 @kind this) @signature `Ln/b/a/v/h$a;.run:()Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L40761c.  v0:= v2.`n.b.a.v.h$a.b` @type ^`n.b.a.v.h` @kind object;
  #L407620.  call temp:= `a`(v0) @signature `Ln/b/a/v/h;.a:(Ln/b/a/v/h;)Ljava/lang/ClassLoader;` @kind static;
  #L407626.  v0:= temp @kind object;
  #L407628.  if v0 == 0 then goto L407646;
  #L40762c.  v0:= v2.`n.b.a.v.h$a.b` @type ^`n.b.a.v.h` @kind object;
  #L407630.  call temp:= `a`(v0) @signature `Ln/b/a/v/h;.a:(Ln/b/a/v/h;)Ljava/lang/ClassLoader;` @kind static;
  #L407636.  v0:= temp @kind object;
  #L407638.  v1:= v2.`n.b.a.v.h$a.a` @type ^`java.lang.String` @kind object;
  #L40763c.  call temp:= `getResourceAsStream`(v0, v1) @signature `Ljava/lang/ClassLoader;.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;` @kind virtual;
  #L407642.  v0:= temp @kind object;
  #L407644.  return v0 @kind object;
  #L407646.  v0:= v2.`n.b.a.v.h$a.a` @type ^`java.lang.String` @kind object;
  #L40764a.  call temp:= `getSystemResourceAsStream`(v0) @signature `Ljava/lang/ClassLoader;.getSystemResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;` @kind static;
  #L407650.  v0:= temp @kind object;
  #L407652.  return v0 @kind object;
}
procedure `java.lang.Object` `run`(`n.b.a.v.h$a` v1 @kind this) @signature `Ln/b/a/v/h$a;.run:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L407664.  call temp:= `run`(v1) @signature `Ln/b/a/v/h$a;.run:()Ljava/io/InputStream;` @kind virtual;
  #L40766a.  v0:= temp @kind object;
  #L40766c.  return v0 @kind object;
}
