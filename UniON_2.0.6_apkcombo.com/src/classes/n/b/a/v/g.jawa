record `n.b.a.v.g` @kind class @AccessFlag PUBLIC_FINAL extends `n.b.a.v.f` @kind interface {
}
global `java.util.Set` `@@n.b.a.v.g.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/b/a/v/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4075e0.  v0:= "UTC" @kind object;
  #L4075e4.  call temp:= `singleton`(v0) @signature `Ljava/util/Collections;.singleton:(Ljava/lang/Object;)Ljava/util/Set;` @kind static;
  #L4075ea.  v0:= temp @kind object;
  #L4075ec.  `@@n.b.a.v.g.a` @type ^`java.util.Set` := v0 @kind object;
  #L4075f0.  return @kind void;
}
procedure `void` `<init>`(`n.b.a.v.g` v0 @kind this) @signature `Ln/b/a/v/g;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L407604.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40760a.  return @kind void;
}
procedure `java.util.Set` `a`(`n.b.a.v.g` v1 @kind this) @signature `Ln/b/a/v/g;.a:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40759c.  v0:= `@@n.b.a.v.g.a` @type ^`java.util.Set` @kind object;
  #L4075a0.  return v0 @kind object;
}
procedure `n.b.a.f` `a`(`n.b.a.v.g` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Ln/b/a/v/g;.a:(Ljava/lang/String;)Ln/b/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4075b4.  v0:= "UTC" @kind object;
  #L4075b8.  call temp:= `equalsIgnoreCase`(v0, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L4075be.  v2:= temp;
  #L4075c0.  if v2 == 0 then goto L4075ca;
  #L4075c4.  v2:= `@@n.b.a.f.c` @type ^`n.b.a.f` @kind object;
  #L4075c8.  return v2 @kind object;
  #L4075ca.  v2:= 0I;
  #L4075cc.  return v2 @kind object;
}
