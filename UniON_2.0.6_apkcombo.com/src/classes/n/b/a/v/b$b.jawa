record `n.b.a.v.b$b` @kind class @AccessFlag FINAL {
  `char` `n.b.a.v.b$b.a` @AccessFlag FINAL;
  `int` `n.b.a.v.b$b.b` @AccessFlag FINAL;
  `int` `n.b.a.v.b$b.c` @AccessFlag FINAL;
  `int` `n.b.a.v.b$b.d` @AccessFlag FINAL;
  `boolean` `n.b.a.v.b$b.e` @AccessFlag FINAL;
  `int` `n.b.a.v.b$b.f` @AccessFlag FINAL;
}
procedure `void` `<init>`(`n.b.a.v.b$b` v1 @kind this, `char` v2 , `int` v3 , `int` v4 , `int` v5 , `boolean` v6 , `int` v7 ) @signature `Ln/b/a/v/b$b;.<init>:(CIIIZI)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L406860.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L406866.  v0:= 117I;
  #L40686a.  if v2 == v0 then goto L4068ae;
  #L40686e.  v0:= 119I;
  #L406872.  if v2 == v0 then goto L4068ae;
  #L406876.  v0:= 115I;
  #L40687a.  if v2 != v0 then goto L406880;
  #L40687e.  goto L4068ae;
  #L406880.  v3:= new `java.lang.IllegalArgumentException`;
  #L406884.  v4:= new `java.lang.StringBuilder`;
  #L406888.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40688e.  v5:= "Unknown mode: " @kind object;
  #L406892.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L406898.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L40689e.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4068a4.  v2:= temp @kind object;
  #L4068a6.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4068ac.  throw v3;
  #L4068ae.  v1.`n.b.a.v.b$b.a` @type ^`char` := v2 @kind char;
  #L4068b2.  v1.`n.b.a.v.b$b.b` @type ^`int` := v3;
  #L4068b6.  v1.`n.b.a.v.b$b.c` @type ^`int` := v4;
  #L4068ba.  v1.`n.b.a.v.b$b.d` @type ^`int` := v5;
  #L4068be.  v1.`n.b.a.v.b$b.e` @type ^`boolean` := v6 @kind boolean;
  #L4068c2.  v1.`n.b.a.v.b$b.f` @type ^`int` := v7;
  #L4068c6.  return @kind void;
}
procedure `long` `a`(`n.b.a.v.b$b` v2 @kind this, `n.b.a.a` v3 @kind object, `long` v4 ) @signature `Ln/b/a/v/b$b;.a:(Ln/b/a/a;J)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L40665c.  v0:= v2.`n.b.a.v.b$b.c` @type ^`int`;
  #L406660.  if v0 < 0 then goto L40667a;
  #L406664.  call temp:= `e`(v3) @signature `Ln/b/a/a;.e:()Ln/b/a/c;` @kind virtual;
  #L40666a.  v3:= temp @kind object;
  #L40666c.  v0:= v2.`n.b.a.v.b$b.c` @type ^`int`;
  #L406670.  call temp:= `b`(v3, v4, v0) @signature `Ln/b/a/c;.b:(JI)J` @kind virtual;
  #L406676.  v3:= temp @kind wide;
  #L406678.  goto L4066b0;
  #L40667a.  call temp:= `e`(v3) @signature `Ln/b/a/a;.e:()Ln/b/a/c;` @kind virtual;
  #L406680.  v0:= temp @kind object;
  #L406682.  v1:= 1I;
  #L406684.  call temp:= `b`(v0, v4, v1) @signature `Ln/b/a/c;.b:(JI)J` @kind virtual;
  #L40668a.  v4:= temp @kind wide;
  #L40668c.  call temp:= `w`(v3) @signature `Ln/b/a/a;.w:()Ln/b/a/c;` @kind virtual;
  #L406692.  v0:= temp @kind object;
  #L406694.  call temp:= `a`(v0, v4, v1) @signature `Ln/b/a/c;.a:(JI)J` @kind virtual;
  #L40669a.  v4:= temp @kind wide;
  #L40669c.  call temp:= `e`(v3) @signature `Ln/b/a/a;.e:()Ln/b/a/c;` @kind virtual;
  #L4066a2.  v3:= temp @kind object;
  #L4066a4.  v0:= v2.`n.b.a.v.b$b.c` @type ^`int`;
  #L4066a8.  call temp:= `a`(v3, v4, v0) @signature `Ln/b/a/c;.a:(JI)J` @kind virtual;
  #L4066ae.  v3:= temp @kind wide;
  #L4066b0.  return v3 @kind wide;
}
procedure `n.b.a.v.b$b` `a`(`java.io.DataInput` v10 @kind object) @signature `Ln/b/a/v/b$b;.a:(Ljava/io/DataInput;)Ln/b/a/v/b$b;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L40680c.  v7:= new `n.b.a.v.b$b`;
  #L406810.  call temp:= `readUnsignedByte`(v10) @signature `Ljava/io/DataInput;.readUnsignedByte:()I` @kind interface;
  #L406816.  v0:= temp;
  #L406818.  v1:= (`char`) v0 @kind i2c;
  #L40681a.  call temp:= `readUnsignedByte`(v10) @signature `Ljava/io/DataInput;.readUnsignedByte:()I` @kind interface;
  #L406820.  v2:= temp;
  #L406822.  call temp:= `readByte`(v10) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L406828.  v3:= temp;
  #L40682a.  call temp:= `readUnsignedByte`(v10) @signature `Ljava/io/DataInput;.readUnsignedByte:()I` @kind interface;
  #L406830.  v4:= temp;
  #L406832.  call temp:= `readBoolean`(v10) @signature `Ljava/io/DataInput;.readBoolean:()Z` @kind interface;
  #L406838.  v5:= temp;
  #L40683a.  call temp:= `a`(v10) @signature `Ln/b/a/v/b;.a:(Ljava/io/DataInput;)J` @kind static;
  #L406840.  v8:= temp @kind wide;
  #L406842.  v6:= (`int`) v8 @kind l2i;
  #L406844.  v0:= v7 @kind object;
  #L406846.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Ln/b/a/v/b$b;.<init>:(CIIIZI)V` @kind direct;
  #L40684c.  return v7 @kind object;
}
procedure `long` `b`(`n.b.a.v.b$b` v3 @kind this, `n.b.a.a` v4 @kind object, `long` v5 ) @signature `Ln/b/a/v/b$b;.b:(Ln/b/a/a;J)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4066c4.  call temp:= `a`(v3, v4, v5) @signature `Ln/b/a/v/b$b;.a:(Ln/b/a/a;J)J` @kind direct;
  #L4066ca.  v4:= temp @kind wide;
  #L4066cc.  goto L406716;
  #L4066ce.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L4066d0.  v1:= v3.`n.b.a.v.b$b.b` @type ^`int`;
  #L4066d4.  v2:= 2I;
  #L4066d6.  if v1 != v2 then goto L406718;
  #L4066da.  v1:= v3.`n.b.a.v.b$b.c` @type ^`int`;
  #L4066de.  v2:= 29I;
  #L4066e2.  if v1 != v2 then goto L406718;
  #L4066e6.  call temp:= `H`(v4) @signature `Ln/b/a/a;.H:()Ln/b/a/c;` @kind virtual;
  #L4066ec.  v0:= temp @kind object;
  #L4066ee.  call temp:= `b`(v0, v5) @signature `Ln/b/a/c;.b:(J)Z` @kind virtual;
  #L4066f4.  v0:= temp;
  #L4066f6.  if v0 != 0 then goto L40670e;
  #L4066fa.  call temp:= `H`(v4) @signature `Ln/b/a/a;.H:()Ln/b/a/c;` @kind virtual;
  #L406700.  v0:= temp @kind object;
  #L406702.  v1:= 1I;
  #L406704.  call temp:= `a`(v0, v5, v1) @signature `Ln/b/a/c;.a:(JI)J` @kind virtual;
  #L40670a.  v5:= temp @kind wide;
  #L40670c.  goto L4066e6;
  #L40670e.  call temp:= `a`(v3, v4, v5) @signature `Ln/b/a/v/b$b;.a:(Ln/b/a/a;J)J` @kind direct;
  #L406714.  v4:= temp @kind wide;
  #L406716.  return v4 @kind wide;
  #L406718.  throw v0;
  catch `java.lang.IllegalArgumentException` @[L4066c4..L4066cc] goto L4066ce;
}
procedure `long` `c`(`n.b.a.v.b$b` v3 @kind this, `n.b.a.a` v4 @kind object, `long` v5 ) @signature `Ln/b/a/v/b$b;.c:(Ln/b/a/a;J)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L40673c.  call temp:= `a`(v3, v4, v5) @signature `Ln/b/a/v/b$b;.a:(Ln/b/a/a;J)J` @kind direct;
  #L406742.  v4:= temp @kind wide;
  #L406744.  goto L40678e;
  #L406746.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L406748.  v1:= v3.`n.b.a.v.b$b.b` @type ^`int`;
  #L40674c.  v2:= 2I;
  #L40674e.  if v1 != v2 then goto L406790;
  #L406752.  v1:= v3.`n.b.a.v.b$b.c` @type ^`int`;
  #L406756.  v2:= 29I;
  #L40675a.  if v1 != v2 then goto L406790;
  #L40675e.  call temp:= `H`(v4) @signature `Ln/b/a/a;.H:()Ln/b/a/c;` @kind virtual;
  #L406764.  v0:= temp @kind object;
  #L406766.  call temp:= `b`(v0, v5) @signature `Ln/b/a/c;.b:(J)Z` @kind virtual;
  #L40676c.  v0:= temp;
  #L40676e.  if v0 != 0 then goto L406786;
  #L406772.  call temp:= `H`(v4) @signature `Ln/b/a/a;.H:()Ln/b/a/c;` @kind virtual;
  #L406778.  v0:= temp @kind object;
  #L40677a.  v1:= -1I;
  #L40677c.  call temp:= `a`(v0, v5, v1) @signature `Ln/b/a/c;.a:(JI)J` @kind virtual;
  #L406782.  v5:= temp @kind wide;
  #L406784.  goto L40675e;
  #L406786.  call temp:= `a`(v3, v4, v5) @signature `Ln/b/a/v/b$b;.a:(Ln/b/a/a;J)J` @kind direct;
  #L40678c.  v4:= temp @kind wide;
  #L40678e.  return v4 @kind wide;
  #L406790.  throw v0;
  catch `java.lang.IllegalArgumentException` @[L40673c..L406744] goto L406746;
}
procedure `long` `d`(`n.b.a.v.b$b` v2 @kind this, `n.b.a.a` v3 @kind object, `long` v4 ) @signature `Ln/b/a/v/b$b;.d:(Ln/b/a/a;J)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4067b4.  call temp:= `f`(v3) @signature `Ln/b/a/a;.f:()Ln/b/a/c;` @kind virtual;
  #L4067ba.  v0:= temp @kind object;
  #L4067bc.  call temp:= `a`(v0, v4) @signature `Ln/b/a/c;.a:(J)I` @kind virtual;
  #L4067c2.  v0:= temp;
  #L4067c4.  v1:= v2.`n.b.a.v.b$b.d` @type ^`int`;
  #L4067c8.  v1:= v1 - v0 @kind int;
  #L4067ca.  if v1 == 0 then goto L4067f8;
  #L4067ce.  v0:= v2.`n.b.a.v.b$b.e` @type ^`boolean` @kind boolean;
  #L4067d2.  if v0 == 0 then goto L4067e0;
  #L4067d6.  if v1 >= 0 then goto L4067e8;
  #L4067da.  v1:= v1 + 7;
  #L4067de.  goto L4067e8;
  #L4067e0.  if v1 <= 0 then goto L4067e8;
  #L4067e4.  v1:= v1 + -7;
  #L4067e8.  call temp:= `f`(v3) @signature `Ln/b/a/a;.f:()Ln/b/a/c;` @kind virtual;
  #L4067ee.  v3:= temp @kind object;
  #L4067f0.  call temp:= `a`(v3, v4, v1) @signature `Ln/b/a/c;.a:(JI)J` @kind virtual;
  #L4067f6.  v4:= temp @kind wide;
  #L4067f8.  return v4 @kind wide;
}
procedure `long` `a`(`n.b.a.v.b$b` v6 @kind this, `long` v7 , `int` v9 , `int` v10 ) @signature `Ln/b/a/v/b$b;.a:(JII)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L406434.  v0:= v6.`n.b.a.v.b$b.a` @type ^`char` @kind char;
  #L406438.  v1:= 0I;
  #L40643a.  v2:= 119I;
  #L40643e.  if v0 != v2 then goto L406446;
  #L406442.  v9:= v9 + v10 @kind int;
  #L406444.  goto L406452;
  #L406446.  v10:= 115I;
  #L40644a.  if v0 != v10 then goto L406450;
  #L40644e.  goto L406452;
  #L406450.  v9:= 0I;
  #L406452.  v9:= (`long`) v9 @kind i2l;
  #L406454.  v7:= v7 + v9 @kind long;
  #L406456.  call temp:= `O`() @signature `Ln/b/a/s/q;.O:()Ln/b/a/s/q;` @kind static;
  #L40645c.  v0:= temp @kind object;
  #L40645e.  call temp:= `w`(v0) @signature `Ln/b/a/s/a;.w:()Ln/b/a/c;` @kind virtual;
  #L406464.  v2:= temp @kind object;
  #L406466.  v3:= v6.`n.b.a.v.b$b.b` @type ^`int`;
  #L40646a.  call temp:= `b`(v2, v7, v3) @signature `Ln/b/a/c;.b:(JI)J` @kind virtual;
  #L406470.  v2:= temp @kind wide;
  #L406472.  call temp:= `r`(v0) @signature `Ln/b/a/s/a;.r:()Ln/b/a/c;` @kind virtual;
  #L406478.  v4:= temp @kind object;
  #L40647a.  call temp:= `b`(v4, v2, v1) @signature `Ln/b/a/c;.b:(JI)J` @kind virtual;
  #L406480.  v2:= temp @kind wide;
  #L406482.  call temp:= `r`(v0) @signature `Ln/b/a/s/a;.r:()Ln/b/a/c;` @kind virtual;
  #L406488.  v4:= temp @kind object;
  #L40648a.  v5:= v6.`n.b.a.v.b$b.f` @type ^`int`;
  #L40648e.  call temp:= `a`(v4, v2, v5) @signature `Ln/b/a/c;.a:(JI)J` @kind virtual;
  #L406494.  v2:= temp @kind wide;
  #L406496.  call temp:= `b`(v6, v0, v2) @signature `Ln/b/a/v/b$b;.b:(Ln/b/a/a;J)J` @kind direct;
  #L40649c.  v2:= temp @kind wide;
  #L40649e.  v4:= v6.`n.b.a.v.b$b.d` @type ^`int`;
  #L4064a2.  v5:= 1I;
  #L4064a4.  if v4 != 0 then goto L4064ca;
  #L4064a8.  v4:= lcmp(v2, v7);
  #L4064ac.  if v4 > 0 then goto L40650e;
  #L4064b0.  call temp:= `H`(v0) @signature `Ln/b/a/s/a;.H:()Ln/b/a/c;` @kind virtual;
  #L4064b6.  v7:= temp @kind object;
  #L4064b8.  call temp:= `a`(v7, v2, v5) @signature `Ln/b/a/c;.a:(JI)J` @kind virtual;
  #L4064be.  v7:= temp @kind wide;
  #L4064c0.  call temp:= `b`(v6, v0, v7) @signature `Ln/b/a/v/b$b;.b:(Ln/b/a/a;J)J` @kind direct;
  #L4064c6.  v2:= temp @kind wide;
  #L4064c8.  goto L40650e;
  #L4064ca.  call temp:= `d`(v6, v0, v2) @signature `Ln/b/a/v/b$b;.d:(Ln/b/a/a;J)J` @kind direct;
  #L4064d0.  v2:= temp @kind wide;
  #L4064d2.  v4:= lcmp(v2, v7);
  #L4064d6.  if v4 > 0 then goto L40650e;
  #L4064da.  call temp:= `H`(v0) @signature `Ln/b/a/s/a;.H:()Ln/b/a/c;` @kind virtual;
  #L4064e0.  v7:= temp @kind object;
  #L4064e2.  call temp:= `a`(v7, v2, v5) @signature `Ln/b/a/c;.a:(JI)J` @kind virtual;
  #L4064e8.  v7:= temp @kind wide;
  #L4064ea.  call temp:= `w`(v0) @signature `Ln/b/a/s/a;.w:()Ln/b/a/c;` @kind virtual;
  #L4064f0.  v2:= temp @kind object;
  #L4064f2.  v3:= v6.`n.b.a.v.b$b.b` @type ^`int`;
  #L4064f6.  call temp:= `b`(v2, v7, v3) @signature `Ln/b/a/c;.b:(JI)J` @kind virtual;
  #L4064fc.  v7:= temp @kind wide;
  #L4064fe.  call temp:= `b`(v6, v0, v7) @signature `Ln/b/a/v/b$b;.b:(Ln/b/a/a;J)J` @kind direct;
  #L406504.  v7:= temp @kind wide;
  #L406506.  call temp:= `d`(v6, v0, v7) @signature `Ln/b/a/v/b$b;.d:(Ln/b/a/a;J)J` @kind direct;
  #L40650c.  v2:= temp @kind wide;
  #L40650e.  call temp:= `r`(v0) @signature `Ln/b/a/s/a;.r:()Ln/b/a/c;` @kind virtual;
  #L406514.  v7:= temp @kind object;
  #L406516.  call temp:= `b`(v7, v2, v1) @signature `Ln/b/a/c;.b:(JI)J` @kind virtual;
  #L40651c.  v7:= temp @kind wide;
  #L40651e.  call temp:= `r`(v0) @signature `Ln/b/a/s/a;.r:()Ln/b/a/c;` @kind virtual;
  #L406524.  v0:= temp @kind object;
  #L406526.  v1:= v6.`n.b.a.v.b$b.f` @type ^`int`;
  #L40652a.  call temp:= `a`(v0, v7, v1) @signature `Ln/b/a/c;.a:(JI)J` @kind virtual;
  #L406530.  v7:= temp @kind wide;
  #L406532.  v7:= v7 - v9 @kind long;
  #L406534.  return v7 @kind wide;
}
procedure `long` `b`(`n.b.a.v.b$b` v6 @kind this, `long` v7 , `int` v9 , `int` v10 ) @signature `Ln/b/a/v/b$b;.b:(JII)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L406548.  v0:= v6.`n.b.a.v.b$b.a` @type ^`char` @kind char;
  #L40654c.  v1:= 0I;
  #L40654e.  v2:= 119I;
  #L406552.  if v0 != v2 then goto L40655a;
  #L406556.  v9:= v9 + v10 @kind int;
  #L406558.  goto L406566;
  #L40655a.  v10:= 115I;
  #L40655e.  if v0 != v10 then goto L406564;
  #L406562.  goto L406566;
  #L406564.  v9:= 0I;
  #L406566.  v9:= (`long`) v9 @kind i2l;
  #L406568.  v7:= v7 + v9 @kind long;
  #L40656a.  call temp:= `O`() @signature `Ln/b/a/s/q;.O:()Ln/b/a/s/q;` @kind static;
  #L406570.  v0:= temp @kind object;
  #L406572.  call temp:= `w`(v0) @signature `Ln/b/a/s/a;.w:()Ln/b/a/c;` @kind virtual;
  #L406578.  v2:= temp @kind object;
  #L40657a.  v3:= v6.`n.b.a.v.b$b.b` @type ^`int`;
  #L40657e.  call temp:= `b`(v2, v7, v3) @signature `Ln/b/a/c;.b:(JI)J` @kind virtual;
  #L406584.  v2:= temp @kind wide;
  #L406586.  call temp:= `r`(v0) @signature `Ln/b/a/s/a;.r:()Ln/b/a/c;` @kind virtual;
  #L40658c.  v4:= temp @kind object;
  #L40658e.  call temp:= `b`(v4, v2, v1) @signature `Ln/b/a/c;.b:(JI)J` @kind virtual;
  #L406594.  v2:= temp @kind wide;
  #L406596.  call temp:= `r`(v0) @signature `Ln/b/a/s/a;.r:()Ln/b/a/c;` @kind virtual;
  #L40659c.  v4:= temp @kind object;
  #L40659e.  v5:= v6.`n.b.a.v.b$b.f` @type ^`int`;
  #L4065a2.  call temp:= `a`(v4, v2, v5) @signature `Ln/b/a/c;.a:(JI)J` @kind virtual;
  #L4065a8.  v2:= temp @kind wide;
  #L4065aa.  call temp:= `c`(v6, v0, v2) @signature `Ln/b/a/v/b$b;.c:(Ln/b/a/a;J)J` @kind direct;
  #L4065b0.  v2:= temp @kind wide;
  #L4065b2.  v4:= v6.`n.b.a.v.b$b.d` @type ^`int`;
  #L4065b6.  v5:= -1I;
  #L4065b8.  if v4 != 0 then goto L4065de;
  #L4065bc.  v4:= lcmp(v2, v7);
  #L4065c0.  if v4 < 0 then goto L406622;
  #L4065c4.  call temp:= `H`(v0) @signature `Ln/b/a/s/a;.H:()Ln/b/a/c;` @kind virtual;
  #L4065ca.  v7:= temp @kind object;
  #L4065cc.  call temp:= `a`(v7, v2, v5) @signature `Ln/b/a/c;.a:(JI)J` @kind virtual;
  #L4065d2.  v7:= temp @kind wide;
  #L4065d4.  call temp:= `c`(v6, v0, v7) @signature `Ln/b/a/v/b$b;.c:(Ln/b/a/a;J)J` @kind direct;
  #L4065da.  v2:= temp @kind wide;
  #L4065dc.  goto L406622;
  #L4065de.  call temp:= `d`(v6, v0, v2) @signature `Ln/b/a/v/b$b;.d:(Ln/b/a/a;J)J` @kind direct;
  #L4065e4.  v2:= temp @kind wide;
  #L4065e6.  v4:= lcmp(v2, v7);
  #L4065ea.  if v4 < 0 then goto L406622;
  #L4065ee.  call temp:= `H`(v0) @signature `Ln/b/a/s/a;.H:()Ln/b/a/c;` @kind virtual;
  #L4065f4.  v7:= temp @kind object;
  #L4065f6.  call temp:= `a`(v7, v2, v5) @signature `Ln/b/a/c;.a:(JI)J` @kind virtual;
  #L4065fc.  v7:= temp @kind wide;
  #L4065fe.  call temp:= `w`(v0) @signature `Ln/b/a/s/a;.w:()Ln/b/a/c;` @kind virtual;
  #L406604.  v2:= temp @kind object;
  #L406606.  v3:= v6.`n.b.a.v.b$b.b` @type ^`int`;
  #L40660a.  call temp:= `b`(v2, v7, v3) @signature `Ln/b/a/c;.b:(JI)J` @kind virtual;
  #L406610.  v7:= temp @kind wide;
  #L406612.  call temp:= `c`(v6, v0, v7) @signature `Ln/b/a/v/b$b;.c:(Ln/b/a/a;J)J` @kind direct;
  #L406618.  v7:= temp @kind wide;
  #L40661a.  call temp:= `d`(v6, v0, v7) @signature `Ln/b/a/v/b$b;.d:(Ln/b/a/a;J)J` @kind direct;
  #L406620.  v2:= temp @kind wide;
  #L406622.  call temp:= `r`(v0) @signature `Ln/b/a/s/a;.r:()Ln/b/a/c;` @kind virtual;
  #L406628.  v7:= temp @kind object;
  #L40662a.  call temp:= `b`(v7, v2, v1) @signature `Ln/b/a/c;.b:(JI)J` @kind virtual;
  #L406630.  v7:= temp @kind wide;
  #L406632.  call temp:= `r`(v0) @signature `Ln/b/a/s/a;.r:()Ln/b/a/c;` @kind virtual;
  #L406638.  v0:= temp @kind object;
  #L40663a.  v1:= v6.`n.b.a.v.b$b.f` @type ^`int`;
  #L40663e.  call temp:= `a`(v0, v7, v1) @signature `Ln/b/a/c;.a:(JI)J` @kind virtual;
  #L406644.  v7:= temp @kind wide;
  #L406646.  v7:= v7 - v9 @kind long;
  #L406648.  return v7 @kind wide;
}
procedure `boolean` `equals`(`n.b.a.v.b$b` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Ln/b/a/v/b$b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4062f8.  v0:= 1I;
  #L4062fa.  if v4 != v5 then goto L406300;
  #L4062fe.  return v0;
  #L406300.  v1:= instanceof @variable v5 @type ^`n.b.a.v.b$b` @kind boolean;
  #L406304.  v2:= 0I;
  #L406306.  if v1 == 0 then goto L40635c;
  #L40630a.  v5:= (`n.b.a.v.b$b`) v5 @kind object;
  #L40630e.  v1:= v4.`n.b.a.v.b$b.a` @type ^`char` @kind char;
  #L406312.  v3:= v5.`n.b.a.v.b$b.a` @type ^`char` @kind char;
  #L406316.  if v1 != v3 then goto L406358;
  #L40631a.  v1:= v4.`n.b.a.v.b$b.b` @type ^`int`;
  #L40631e.  v3:= v5.`n.b.a.v.b$b.b` @type ^`int`;
  #L406322.  if v1 != v3 then goto L406358;
  #L406326.  v1:= v4.`n.b.a.v.b$b.c` @type ^`int`;
  #L40632a.  v3:= v5.`n.b.a.v.b$b.c` @type ^`int`;
  #L40632e.  if v1 != v3 then goto L406358;
  #L406332.  v1:= v4.`n.b.a.v.b$b.d` @type ^`int`;
  #L406336.  v3:= v5.`n.b.a.v.b$b.d` @type ^`int`;
  #L40633a.  if v1 != v3 then goto L406358;
  #L40633e.  v1:= v4.`n.b.a.v.b$b.e` @type ^`boolean` @kind boolean;
  #L406342.  v3:= v5.`n.b.a.v.b$b.e` @type ^`boolean` @kind boolean;
  #L406346.  if v1 != v3 then goto L406358;
  #L40634a.  v1:= v4.`n.b.a.v.b$b.f` @type ^`int`;
  #L40634e.  v5:= v5.`n.b.a.v.b$b.f` @type ^`int`;
  #L406352.  if v1 != v5 then goto L406358;
  #L406356.  goto L40635a;
  #L406358.  v0:= 0I;
  #L40635a.  return v0;
  #L40635c.  return v2;
}
procedure `java.lang.String` `toString`(`n.b.a.v.b$b` v3 @kind this) @signature `Ln/b/a/v/b$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L406370.  v0:= new `java.lang.StringBuilder`;
  #L406374.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40637a.  v1:= "[OfYear]\nMode: " @kind object;
  #L40637e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L406384.  v1:= v3.`n.b.a.v.b$b.a` @type ^`char` @kind char;
  #L406388.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L40638e.  v1:= 10I;
  #L406392.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L406398.  v2:= "MonthOfYear: " @kind object;
  #L40639c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4063a2.  v2:= v3.`n.b.a.v.b$b.b` @type ^`int`;
  #L4063a6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4063ac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4063b2.  v2:= "DayOfMonth: " @kind object;
  #L4063b6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4063bc.  v2:= v3.`n.b.a.v.b$b.c` @type ^`int`;
  #L4063c0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4063c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4063cc.  v2:= "DayOfWeek: " @kind object;
  #L4063d0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4063d6.  v2:= v3.`n.b.a.v.b$b.d` @type ^`int`;
  #L4063da.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4063e0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4063e6.  v2:= "AdvanceDayOfWeek: " @kind object;
  #L4063ea.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4063f0.  v2:= v3.`n.b.a.v.b$b.e` @type ^`boolean` @kind boolean;
  #L4063f4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L4063fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L406400.  v2:= "MillisOfDay: " @kind object;
  #L406404.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40640a.  v2:= v3.`n.b.a.v.b$b.f` @type ^`int`;
  #L40640e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L406414.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L40641a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L406420.  v0:= temp @kind object;
  #L406422.  return v0 @kind object;
}
