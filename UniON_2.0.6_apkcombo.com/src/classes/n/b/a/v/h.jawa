record `n.b.a.v.h` @kind class @AccessFlag PUBLIC extends `n.b.a.v.f` @kind interface {
  `java.io.File` `n.b.a.v.h.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `n.b.a.v.h.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.ClassLoader` `n.b.a.v.h.c` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `n.b.a.v.h.d` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `n.b.a.v.h.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`n.b.a.v.h` v3 @kind this, `java.io.File` v4 @kind object) @signature `Ln/b/a/v/h;.<init>:(Ljava/io/File;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L407938.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40793e.  if v4 == 0 then goto L407a00;
  #L407942.  call temp:= `exists`(v4) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L407948.  v0:= temp;
  #L40794a.  if v0 == 0 then goto L4079d2;
  #L40794e.  call temp:= `isDirectory`(v4) @signature `Ljava/io/File;.isDirectory:()Z` @kind virtual;
  #L407954.  v0:= temp;
  #L407956.  if v0 == 0 then goto L4079a4;
  #L40795a.  v3.`n.b.a.v.h.a` @type ^`java.io.File` := v4 @kind object;
  #L40795e.  v4:= 0I;
  #L407960.  v3.`n.b.a.v.h.b` @type ^`java.lang.String` := v4 @kind object;
  #L407964.  v3.`n.b.a.v.h.c` @type ^`java.lang.ClassLoader` := v4 @kind object;
  #L407968.  v4:= "ZoneInfoMap" @kind object;
  #L40796c.  call temp:= `c`(v3, v4) @signature `Ln/b/a/v/h;.c:(Ljava/lang/String;)Ljava/io/InputStream;` @kind direct;
  #L407972.  v4:= temp @kind object;
  #L407974.  call temp:= `a`(v4) @signature `Ln/b/a/v/h;.a:(Ljava/io/InputStream;)Ljava/util/Map;` @kind static;
  #L40797a.  v4:= temp @kind object;
  #L40797c.  v3.`n.b.a.v.h.d` @type ^`java.util.Map` := v4 @kind object;
  #L407980.  v4:= new `java.util.TreeSet`;
  #L407984.  v0:= v3.`n.b.a.v.h.d` @type ^`java.util.Map` @kind object;
  #L407988.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L40798e.  v0:= temp @kind object;
  #L407990.  call `<init>`(v4, v0) @signature `Ljava/util/TreeSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L407996.  call temp:= `unmodifiableSortedSet`(v4) @signature `Ljava/util/Collections;.unmodifiableSortedSet:(Ljava/util/SortedSet;)Ljava/util/SortedSet;` @kind static;
  #L40799c.  v4:= temp @kind object;
  #L40799e.  v3.`n.b.a.v.h.e` @type ^`java.util.Set` := v4 @kind object;
  #L4079a2.  return @kind void;
  #L4079a4.  v0:= new `java.io.IOException`;
  #L4079a8.  v1:= new `java.lang.StringBuilder`;
  #L4079ac.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4079b2.  v2:= "File doesn't refer to a directory: " @kind object;
  #L4079b6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4079bc.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4079c2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4079c8.  v4:= temp @kind object;
  #L4079ca.  call `<init>`(v0, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4079d0.  throw v0;
  #L4079d2.  v0:= new `java.io.IOException`;
  #L4079d6.  v1:= new `java.lang.StringBuilder`;
  #L4079da.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4079e0.  v2:= "File directory doesn't exist: " @kind object;
  #L4079e4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4079ea.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4079f0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L4079f6.  v4:= temp @kind object;
  #L4079f8.  call `<init>`(v0, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4079fe.  throw v0;
  #L407a00.  v4:= new `java.lang.IllegalArgumentException`;
  #L407a04.  v0:= "No file directory provided" @kind object;
  #L407a08.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L407a0e.  throw v4;
}
procedure `void` `<init>`(`n.b.a.v.h` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Ln/b/a/v/h;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L407a20.  v0:= 0I;
  #L407a22.  v1:= 0I;
  #L407a24.  call `<init>`(v2, v3, v0, v1) @signature `Ln/b/a/v/h;.<init>:(Ljava/lang/String;Ljava/lang/ClassLoader;Z)V` @kind direct;
  #L407a2a.  return @kind void;
}
procedure `void` `<init>`(`n.b.a.v.h` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.ClassLoader` v3 @kind object, `boolean` v4 ) @signature `Ln/b/a/v/h;.<init>:(Ljava/lang/String;Ljava/lang/ClassLoader;Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L407a3c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L407a42.  if v2 == 0 then goto L407ad6;
  #L407a46.  v0:= "/" @kind object;
  #L407a4a.  call temp:= `endsWith`(v2, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L407a50.  v0:= temp;
  #L407a52.  if v0 != 0 then goto L407a78;
  #L407a56.  v0:= new `java.lang.StringBuilder`;
  #L407a5a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L407a60.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L407a66.  v2:= 47I;
  #L407a6a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L407a70.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L407a76.  v2:= temp @kind object;
  #L407a78.  v0:= 0I;
  #L407a7a.  v1.`n.b.a.v.h.a` @type ^`java.io.File` := v0 @kind object;
  #L407a7e.  v1.`n.b.a.v.h.b` @type ^`java.lang.String` := v2 @kind object;
  #L407a82.  if v3 != 0 then goto L407a96;
  #L407a86.  if v4 != 0 then goto L407a96;
  #L407a8a.  v2:= constclass @type ^`n.b.a.v.h` @kind object;
  #L407a8e.  call temp:= `getClassLoader`(v2) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L407a94.  v3:= temp @kind object;
  #L407a96.  v1.`n.b.a.v.h.c` @type ^`java.lang.ClassLoader` := v3 @kind object;
  #L407a9a.  v2:= "ZoneInfoMap" @kind object;
  #L407a9e.  call temp:= `c`(v1, v2) @signature `Ln/b/a/v/h;.c:(Ljava/lang/String;)Ljava/io/InputStream;` @kind direct;
  #L407aa4.  v2:= temp @kind object;
  #L407aa6.  call temp:= `a`(v2) @signature `Ln/b/a/v/h;.a:(Ljava/io/InputStream;)Ljava/util/Map;` @kind static;
  #L407aac.  v2:= temp @kind object;
  #L407aae.  v1.`n.b.a.v.h.d` @type ^`java.util.Map` := v2 @kind object;
  #L407ab2.  v2:= new `java.util.TreeSet`;
  #L407ab6.  v3:= v1.`n.b.a.v.h.d` @type ^`java.util.Map` @kind object;
  #L407aba.  call temp:= `keySet`(v3) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L407ac0.  v3:= temp @kind object;
  #L407ac2.  call `<init>`(v2, v3) @signature `Ljava/util/TreeSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L407ac8.  call temp:= `unmodifiableSortedSet`(v2) @signature `Ljava/util/Collections;.unmodifiableSortedSet:(Ljava/util/SortedSet;)Ljava/util/SortedSet;` @kind static;
  #L407ace.  v2:= temp @kind object;
  #L407ad0.  v1.`n.b.a.v.h.e` @type ^`java.util.Set` := v2 @kind object;
  #L407ad4.  return @kind void;
  #L407ad6.  v2:= new `java.lang.IllegalArgumentException`;
  #L407ada.  v3:= "No resource path provided" @kind object;
  #L407ade.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L407ae4.  throw v2;
}
procedure `java.lang.ClassLoader` `a`(`n.b.a.v.h` v0 @kind object) @signature `Ln/b/a/v/h;.a:(Ln/b/a/v/h;)Ljava/lang/ClassLoader;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L407750.  v0:= v0.`n.b.a.v.h.c` @type ^`java.lang.ClassLoader` @kind object;
  #L407754.  return v0 @kind object;
}
procedure `java.util.Map` `a`(`java.io.InputStream` v2 @kind object) @signature `Ln/b/a/v/h;.a:(Ljava/io/InputStream;)Ljava/util/Map;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L407768.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L40776c.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L407772.  v1:= new `java.io.DataInputStream`;
  #L407776.  call `<init>`(v1, v2) @signature `Ljava/io/DataInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L40777c.  call `a`(v1, v0) @signature `Ln/b/a/v/h;.a:(Ljava/io/DataInputStream;Ljava/util/Map;)V` @kind static;
  #L407782.  call `close`(v1) @signature `Ljava/io/DataInputStream;.close:()V` @kind virtual;
  #L407788.  v2:= new `java.lang.ref.SoftReference`;
  #L40778c.  v1:= `@@n.b.a.f.c` @type ^`n.b.a.f` @kind object;
  #L407790.  call `<init>`(v2, v1) @signature `Ljava/lang/ref/SoftReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L407796.  v1:= "UTC" @kind object;
  #L40779a.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4077a0.  return v0 @kind object;
  #L4077a2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4077a4.  call `close`(v1) @signature `Ljava/io/DataInputStream;.close:()V` @kind virtual;
  #L4077aa.  throw v2;
  catch `java.lang.Throwable` @[L40777c..L407782] goto L4077a2;
  catch `java.io.IOException` @[L407782..L407788] goto L407788;
  catch `java.io.IOException` @[L4077a4..L4077aa] goto L4077aa;
}
procedure `void` `a`(`java.io.DataInputStream` v5 @kind object, `java.util.Map` v6 @kind object) @signature `Ln/b/a/v/h;.a:(Ljava/io/DataInputStream;Ljava/util/Map;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L407af8.  call temp:= `readUnsignedShort`(v5) @signature `Ljava/io/DataInputStream;.readUnsignedShort:()I` @kind virtual;
  #L407afe.  v0:= temp;
  #L407b00.  v1:= new `java.lang.String`[v0];
  #L407b04.  v2:= 0I;
  #L407b06.  v3:= 0I;
  #L407b08.  if v3 >= v0 then goto L407b26;
  #L407b0c.  call temp:= `readUTF`(v5) @signature `Ljava/io/DataInputStream;.readUTF:()Ljava/lang/String;` @kind virtual;
  #L407b12.  v4:= temp @kind object;
  #L407b14.  call temp:= `intern`(v4) @signature `Ljava/lang/String;.intern:()Ljava/lang/String;` @kind virtual;
  #L407b1a.  v4:= temp @kind object;
  #L407b1c.  v1[v3]:= v4 @kind object;
  #L407b20.  v3:= v3 + 1;
  #L407b24.  goto L407b08;
  #L407b26.  call temp:= `readUnsignedShort`(v5) @signature `Ljava/io/DataInputStream;.readUnsignedShort:()I` @kind virtual;
  #L407b2c.  v0:= temp;
  #L407b2e.  if v2 >= v0 then goto L407b66;
  #L407b32.  call temp:= `readUnsignedShort`(v5) @signature `Ljava/io/DataInputStream;.readUnsignedShort:()I` @kind virtual;
  #L407b38.  v3:= temp;
  #L407b3a.  v3:= v1[v3] @kind object;
  #L407b3e.  call temp:= `readUnsignedShort`(v5) @signature `Ljava/io/DataInputStream;.readUnsignedShort:()I` @kind virtual;
  #L407b44.  v4:= temp;
  #L407b46.  v4:= v1[v4] @kind object;
  #L407b4a.  call temp:= `put`(v6, v3, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L407b50.  v2:= v2 + 1;
  #L407b54.  goto L407b2e;
  #L407b56.  v5:= new `java.io.IOException`;
  #L407b5a.  v6:= "Corrupt zone info map" @kind object;
  #L407b5e.  call `<init>`(v5, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L407b64.  throw v5;
  #L407b66.  return @kind void;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L407b32..L407b50] goto L407b56;
}
procedure `n.b.a.f` `b`(`n.b.a.v.h` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Ln/b/a/v/h;.b:(Ljava/lang/String;)Ln/b/a/f;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L407870.  v0:= 0I;
  #L407872.  call temp:= `c`(v5, v6) @signature `Ln/b/a/v/h;.c:(Ljava/lang/String;)Ljava/io/InputStream;` @kind direct;
  #L407878.  v1:= temp @kind object;
  #L40787a.  call temp:= `a`(v1, v6) @signature `Ln/b/a/v/b;.a:(Ljava/io/InputStream;Ljava/lang/String;)Ln/b/a/f;` @kind static;
  #L407880.  v2:= temp @kind object;
  #L407882.  v3:= v5.`n.b.a.v.h.d` @type ^`java.util.Map` @kind object;
  #L407886.  v4:= new `java.lang.ref.SoftReference`;
  #L40788a.  call `<init>`(v4, v2) @signature `Ljava/lang/ref/SoftReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L407890.  call temp:= `put`(v3, v6, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L407896.  if v1 == 0 then goto L4078a0;
  #L40789a.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L4078a0.  return v2 @kind object;
  #L4078a2.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4078a4.  goto L4078d0;
  #L4078a6.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L4078a8.  goto L4078b4;
  #L4078aa.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4078ac.  v1:= v0 @kind object;
  #L4078ae.  goto L4078d0;
  #L4078b0.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L4078b2.  v1:= v0 @kind object;
  #L4078b4.  call `a`(v5, v2) @signature `Ln/b/a/v/h;.a:(Ljava/lang/Exception;)V` @kind virtual;
  #L4078ba.  v2:= v5.`n.b.a.v.h.d` @type ^`java.util.Map` @kind object;
  #L4078be.  call temp:= `remove`(v2, v6) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4078c4.  if v1 == 0 then goto L4078ce;
  #L4078c8.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L4078ce.  return v0 @kind object;
  #L4078d0.  if v1 == 0 then goto L4078da;
  #L4078d4.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L4078da.  throw v6;
  catch `java.io.IOException` @[L407872..L40787a] goto L4078b0;
  catch `java.lang.Throwable` @[L407872..L40787a] goto L4078aa;
  catch `java.io.IOException` @[L40787a..L407896] goto L4078a6;
  catch `java.lang.Throwable` @[L40787a..L407896] goto L4078a2;
  catch `java.io.IOException` @[L40789a..L4078a0] goto L4078a0;
  catch `java.lang.Throwable` @[L4078b4..L4078c4] goto L4078a2;
  catch `java.io.IOException` @[L4078c8..L4078ce] goto L4078ce;
  catch `java.io.IOException` @[L4078d4..L4078da] goto L4078da;
}
procedure `java.io.InputStream` `c`(`n.b.a.v.h` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Ln/b/a/v/h;.c:(Ljava/lang/String;)Ljava/io/InputStream;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L4076a0.  v0:= v3.`n.b.a.v.h.a` @type ^`java.io.File` @kind object;
  #L4076a4.  if v0 == 0 then goto L4076be;
  #L4076a8.  v1:= new `java.io.FileInputStream`;
  #L4076ac.  v2:= new `java.io.File`;
  #L4076b0.  call `<init>`(v2, v0, v4) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L4076b6.  call `<init>`(v1, v2) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L4076bc.  goto L40773e;
  #L4076be.  v0:= v3.`n.b.a.v.h.b` @type ^`java.lang.String` @kind object;
  #L4076c2.  call temp:= `concat`(v0, v4) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4076c8.  v4:= temp @kind object;
  #L4076ca.  v0:= new `n.b.a.v.h$a`;
  #L4076ce.  call `<init>`(v0, v3, v4) @signature `Ln/b/a/v/h$a;.<init>:(Ln/b/a/v/h;Ljava/lang/String;)V` @kind direct;
  #L4076d4.  call temp:= `doPrivileged`(v0) @signature `Ljava/security/AccessController;.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;` @kind static;
  #L4076da.  v0:= temp @kind object;
  #L4076dc.  v1:= v0 @kind object;
  #L4076de.  v1:= (`java.io.InputStream`) v1 @kind object;
  #L4076e2.  if v1 != 0 then goto L40773e;
  #L4076e6.  v0:= new `java.lang.StringBuilder`;
  #L4076ea.  v1:= 40I;
  #L4076ee.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L4076f4.  v1:= "Resource not found: \"" @kind object;
  #L4076f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4076fe.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L407704.  v4:= "\" ClassLoader: " @kind object;
  #L407708.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40770e.  v4:= v3.`n.b.a.v.h.c` @type ^`java.lang.ClassLoader` @kind object;
  #L407712.  if v4 == 0 then goto L407720;
  #L407716.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L40771c.  v4:= temp @kind object;
  #L40771e.  goto L407724;
  #L407720.  v4:= "system" @kind object;
  #L407724.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40772a.  v4:= new `java.io.IOException`;
  #L40772e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L407734.  v0:= temp @kind object;
  #L407736.  call `<init>`(v4, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40773c.  throw v4;
  #L40773e.  return v1 @kind object;
}
procedure `java.util.Set` `a`(`n.b.a.v.h` v1 @kind this) @signature `Ln/b/a/v/h;.a:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4077e0.  v0:= v1.`n.b.a.v.h.e` @type ^`java.util.Set` @kind object;
  #L4077e4.  return v0 @kind object;
}
procedure `n.b.a.f` `a`(`n.b.a.v.h` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Ln/b/a/v/h;.a:(Ljava/lang/String;)Ln/b/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4077f8.  v0:= 0I;
  #L4077fa.  if v3 != 0 then goto L407800;
  #L4077fe.  return v0 @kind object;
  #L407800.  v1:= v2.`n.b.a.v.h.d` @type ^`java.util.Map` @kind object;
  #L407804.  call temp:= `get`(v1, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40780a.  v1:= temp @kind object;
  #L40780c.  if v1 != 0 then goto L407812;
  #L407810.  return v0 @kind object;
  #L407812.  v0:= instanceof @variable v1 @type ^`java.lang.ref.SoftReference` @kind boolean;
  #L407816.  if v0 == 0 then goto L40783a;
  #L40781a.  v1:= (`java.lang.ref.SoftReference`) v1 @kind object;
  #L40781e.  call temp:= `get`(v1) @signature `Ljava/lang/ref/SoftReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L407824.  v0:= temp @kind object;
  #L407826.  v0:= (`n.b.a.f`) v0 @kind object;
  #L40782a.  if v0 == 0 then goto L407830;
  #L40782e.  return v0 @kind object;
  #L407830.  call temp:= `b`(v2, v3) @signature `Ln/b/a/v/h;.b:(Ljava/lang/String;)Ln/b/a/f;` @kind direct;
  #L407836.  v3:= temp @kind object;
  #L407838.  return v3 @kind object;
  #L40783a.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L407840.  v0:= temp;
  #L407842.  if v0 == 0 then goto L407850;
  #L407846.  call temp:= `b`(v2, v3) @signature `Ln/b/a/v/h;.b:(Ljava/lang/String;)Ln/b/a/f;` @kind direct;
  #L40784c.  v3:= temp @kind object;
  #L40784e.  return v3 @kind object;
  #L407850.  v1:= (`java.lang.String`) v1 @kind object;
  #L407854.  call temp:= `a`(v2, v1) @signature `Ln/b/a/v/h;.a:(Ljava/lang/String;)Ln/b/a/f;` @kind virtual;
  #L40785a.  v3:= temp @kind object;
  #L40785c.  return v3 @kind object;
}
procedure `void` `a`(`n.b.a.v.h` v0 @kind this, `java.lang.Exception` v1 @kind object) @signature `Ln/b/a/v/h;.a:(Ljava/lang/Exception;)V` @AccessFlag PROTECTED {
    temp;

  #L407b88.  call `printStackTrace`(v1) @signature `Ljava/lang/Exception;.printStackTrace:()V` @kind virtual;
  #L407b8e.  return @kind void;
}
