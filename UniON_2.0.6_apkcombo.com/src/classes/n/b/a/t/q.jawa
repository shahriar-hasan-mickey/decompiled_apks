record `n.b.a.t.q` @kind class @AccessFlag PUBLIC_FINAL extends `n.b.a.g` @kind class, `java.io.Serializable` @kind interface {
  `n.b.a.h` `n.b.a.t.q.b` @AccessFlag PRIVATE_FINAL;
}
global `java.util.HashMap` `@@n.b.a.t.q.c` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`n.b.a.t.q` v0 @kind this, `n.b.a.h` v1 @kind object) @signature `Ln/b/a/t/q;.<init>:(Ln/b/a/h;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L400338.  call `<init>`(v0) @signature `Ln/b/a/g;.<init>:()V` @kind direct;
  #L40033e.  v0.`n.b.a.t.q.b` @type ^`n.b.a.h` := v1 @kind object;
  #L400342.  return @kind void;
}
procedure `n.b.a.t.q` `a`(`n.b.a.h` v3 @kind object) @signature `Ln/b/a/t/q;.a:(Ln/b/a/h;)Ln/b/a/t/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4002c8.  v0:= constclass @type ^`n.b.a.t.q` @kind object;
  #L4002cc.  @monitorenter v0
  #L4002ce.  v1:= `@@n.b.a.t.q.c` @type ^`java.util.HashMap` @kind object;
  #L4002d2.  if v1 != 0 then goto L4002ea;
  #L4002d6.  v1:= new `java.util.HashMap`;
  #L4002da.  v2:= 7I;
  #L4002dc.  call `<init>`(v1, v2) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L4002e2.  `@@n.b.a.t.q.c` @type ^`java.util.HashMap` := v1 @kind object;
  #L4002e6.  v1:= 0I;
  #L4002e8.  goto L4002fa;
  #L4002ea.  v1:= `@@n.b.a.t.q.c` @type ^`java.util.HashMap` @kind object;
  #L4002ee.  call temp:= `get`(v1, v3) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L4002f4.  v1:= temp @kind object;
  #L4002f6.  v1:= (`n.b.a.t.q`) v1 @kind object;
  #L4002fa.  if v1 != 0 then goto L400312;
  #L4002fe.  v1:= new `n.b.a.t.q`;
  #L400302.  call `<init>`(v1, v3) @signature `Ln/b/a/t/q;.<init>:(Ln/b/a/h;)V` @kind direct;
  #L400308.  v2:= `@@n.b.a.t.q.c` @type ^`java.util.HashMap` @kind object;
  #L40030c.  call temp:= `put`(v2, v3, v1) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L400312.  @monitorexit v0
  #L400314.  return v1 @kind object;
  #L400316.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L400318.  @monitorexit v0
  #L40031a.  throw v3;
  catch `java.lang.Throwable` @[L4002ce..L400312] goto L400316;
}
procedure `java.lang.UnsupportedOperationException` `m`(`n.b.a.t.q` v3 @kind this) @signature `Ln/b/a/t/q;.m:()Ljava/lang/UnsupportedOperationException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L40021c.  v0:= new `java.lang.UnsupportedOperationException`;
  #L400220.  v1:= new `java.lang.StringBuilder`;
  #L400224.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40022a.  v2:= v3.`n.b.a.t.q.b` @type ^`n.b.a.h` @kind object;
  #L40022e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L400234.  v2:= " field is unsupported" @kind object;
  #L400238.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40023e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L400244.  v1:= temp @kind object;
  #L400246.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40024c.  return v0 @kind object;
}
procedure `int` `a`(`n.b.a.t.q` v0 @kind this, `n.b.a.g` v1 @kind object) @signature `Ln/b/a/t/q;.a:(Ln/b/a/g;)I` @AccessFlag PUBLIC {
    temp;

  #L40017c.  v1:= 0I;
  #L40017e.  return v1;
}
procedure `long` `a`(`n.b.a.t.q` v0 @kind this, `long` v1 , `int` v3 ) @signature `Ln/b/a/t/q;.a:(JI)J` @AccessFlag PUBLIC {
    temp;

  #L400260.  call temp:= `m`(v0) @signature `Ln/b/a/t/q;.m:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L400266.  v1:= temp @kind object;
  #L400268.  throw v1;
}
procedure `long` `a`(`n.b.a.t.q` v0 @kind this, `long` v1 , `long` v3 ) @signature `Ln/b/a/t/q;.a:(JJ)J` @AccessFlag PUBLIC {
    temp;

  #L40027c.  call temp:= `m`(v0) @signature `Ln/b/a/t/q;.m:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L400282.  v1:= temp @kind object;
  #L400284.  throw v1;
}
procedure `n.b.a.h` `b`(`n.b.a.t.q` v1 @kind this) @signature `Ln/b/a/t/q;.b:()Ln/b/a/h;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L4002b0.  v0:= v1.`n.b.a.t.q.b` @type ^`n.b.a.h` @kind object;
  #L4002b4.  return v0 @kind object;
}
procedure `int` `compareTo`(`n.b.a.t.q` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Ln/b/a/t/q;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L40015c.  v1:= (`n.b.a.g`) v1 @kind object;
  #L400160.  call temp:= `a`(v0, v1) @signature `Ln/b/a/t/q;.a:(Ln/b/a/g;)I` @kind virtual;
  #L400166.  v1:= temp;
  #L400168.  return v1;
}
procedure `long` `e`(`n.b.a.t.q` v2 @kind this) @signature `Ln/b/a/t/q;.e:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L400298.  v0:= 0L;
  #L40029c.  return v0 @kind wide;
}
procedure `boolean` `equals`(`n.b.a.t.q` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Ln/b/a/t/q;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L4000d4.  v0:= 1I;
  #L4000d6.  if v3 != v4 then goto L4000dc;
  #L4000da.  return v0;
  #L4000dc.  v1:= instanceof @variable v4 @type ^`n.b.a.t.q` @kind boolean;
  #L4000e0.  v2:= 0I;
  #L4000e2.  if v1 == 0 then goto L400122;
  #L4000e6.  v4:= (`n.b.a.t.q`) v4 @kind object;
  #L4000ea.  call temp:= `l`(v4) @signature `Ln/b/a/t/q;.l:()Ljava/lang/String;` @kind virtual;
  #L4000f0.  v1:= temp @kind object;
  #L4000f2.  if v1 != 0 then goto L400108;
  #L4000f6.  call temp:= `l`(v3) @signature `Ln/b/a/t/q;.l:()Ljava/lang/String;` @kind virtual;
  #L4000fc.  v4:= temp @kind object;
  #L4000fe.  if v4 != 0 then goto L400104;
  #L400102.  goto L400106;
  #L400104.  v0:= 0I;
  #L400106.  return v0;
  #L400108.  call temp:= `l`(v4) @signature `Ln/b/a/t/q;.l:()Ljava/lang/String;` @kind virtual;
  #L40010e.  v4:= temp @kind object;
  #L400110.  call temp:= `l`(v3) @signature `Ln/b/a/t/q;.l:()Ljava/lang/String;` @kind virtual;
  #L400116.  v0:= temp @kind object;
  #L400118.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L40011e.  v4:= temp;
  #L400120.  return v4;
  #L400122.  return v2;
}
procedure `boolean` `h`(`n.b.a.t.q` v1 @kind this) @signature `Ln/b/a/t/q;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L400134.  v0:= 1I;
  #L400136.  return v0;
}
procedure `int` `hashCode`(`n.b.a.t.q` v1 @kind this) @signature `Ln/b/a/t/q;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L400190.  call temp:= `l`(v1) @signature `Ln/b/a/t/q;.l:()Ljava/lang/String;` @kind virtual;
  #L400196.  v0:= temp @kind object;
  #L400198.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L40019e.  v0:= temp;
  #L4001a0.  return v0;
}
procedure `boolean` `k`(`n.b.a.t.q` v1 @kind this) @signature `Ln/b/a/t/q;.k:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L400148.  v0:= 0I;
  #L40014a.  return v0;
}
procedure `java.lang.String` `l`(`n.b.a.t.q` v1 @kind this) @signature `Ln/b/a/t/q;.l:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4001b4.  v0:= v1.`n.b.a.t.q.b` @type ^`n.b.a.h` @kind object;
  #L4001b8.  call temp:= `a`(v0) @signature `Ln/b/a/h;.a:()Ljava/lang/String;` @kind virtual;
  #L4001be.  v0:= temp @kind object;
  #L4001c0.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`n.b.a.t.q` v2 @kind this) @signature `Ln/b/a/t/q;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4001d4.  v0:= new `java.lang.StringBuilder`;
  #L4001d8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L4001de.  v1:= "UnsupportedDurationField[" @kind object;
  #L4001e2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4001e8.  call temp:= `l`(v2) @signature `Ln/b/a/t/q;.l:()Ljava/lang/String;` @kind virtual;
  #L4001ee.  v1:= temp @kind object;
  #L4001f0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4001f6.  v1:= 93I;
  #L4001fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L400200.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L400206.  v0:= temp @kind object;
  #L400208.  return v0 @kind object;
}
