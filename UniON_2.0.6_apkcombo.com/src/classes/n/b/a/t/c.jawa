record `n.b.a.t.c` @kind class @AccessFlag PUBLIC_ABSTRACT extends `n.b.a.g` @kind class, `java.io.Serializable` @kind interface {
  `n.b.a.h` `n.b.a.t.c.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`n.b.a.t.c` v1 @kind this, `n.b.a.h` v2 @kind object) @signature `Ln/b/a/t/c;.<init>:(Ln/b/a/h;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L3fe85c.  call `<init>`(v1) @signature `Ln/b/a/g;.<init>:()V` @kind direct;
  #L3fe862.  if v2 == 0 then goto L3fe86c;
  #L3fe866.  v1.`n.b.a.t.c.b` @type ^`n.b.a.h` := v2 @kind object;
  #L3fe86a.  return @kind void;
  #L3fe86c.  v2:= new `java.lang.IllegalArgumentException`;
  #L3fe870.  v0:= "The type must not be null" @kind object;
  #L3fe874.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fe87a.  throw v2;
}
procedure `int` `a`(`n.b.a.t.c` v4 @kind this, `n.b.a.g` v5 @kind object) @signature `Ln/b/a/t/c;.a:(Ln/b/a/g;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fe7a4.  call temp:= `e`(v5) @signature `Ln/b/a/g;.e:()J` @kind virtual;
  #L3fe7aa.  v0:= temp @kind wide;
  #L3fe7ac.  call temp:= `e`(v4) @signature `Ln/b/a/g;.e:()J` @kind virtual;
  #L3fe7b2.  v2:= temp @kind wide;
  #L3fe7b4.  v5:= lcmp(v2, v0);
  #L3fe7b8.  if v5 != 0 then goto L3fe7c0;
  #L3fe7bc.  v5:= 0I;
  #L3fe7be.  return v5;
  #L3fe7c0.  if v5 >= 0 then goto L3fe7c8;
  #L3fe7c4.  v5:= -1I;
  #L3fe7c6.  return v5;
  #L3fe7c8.  v5:= 1I;
  #L3fe7ca.  return v5;
}
procedure `n.b.a.h` `b`(`n.b.a.t.c` v1 @kind this) @signature `Ln/b/a/t/c;.b:()Ln/b/a/h;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe844.  v0:= v1.`n.b.a.t.c.b` @type ^`n.b.a.h` @kind object;
  #L3fe848.  return v0 @kind object;
}
procedure `int` `compareTo`(`n.b.a.t.c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Ln/b/a/t/c;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3fe784.  v1:= (`n.b.a.g`) v1 @kind object;
  #L3fe788.  call temp:= `a`(v0, v1) @signature `Ln/b/a/t/c;.a:(Ln/b/a/g;)I` @kind virtual;
  #L3fe78e.  v1:= temp;
  #L3fe790.  return v1;
}
procedure `boolean` `k`(`n.b.a.t.c` v1 @kind this) @signature `Ln/b/a/t/c;.k:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe770.  v0:= 1I;
  #L3fe772.  return v0;
}
procedure `java.lang.String` `l`(`n.b.a.t.c` v1 @kind this) @signature `Ln/b/a/t/c;.l:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe7dc.  v0:= v1.`n.b.a.t.c.b` @type ^`n.b.a.h` @kind object;
  #L3fe7e0.  call temp:= `a`(v0) @signature `Ln/b/a/h;.a:()Ljava/lang/String;` @kind virtual;
  #L3fe7e6.  v0:= temp @kind object;
  #L3fe7e8.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`n.b.a.t.c` v2 @kind this) @signature `Ln/b/a/t/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fe7fc.  v0:= new `java.lang.StringBuilder`;
  #L3fe800.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fe806.  v1:= "DurationField[" @kind object;
  #L3fe80a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fe810.  call temp:= `l`(v2) @signature `Ln/b/a/t/c;.l:()Ljava/lang/String;` @kind virtual;
  #L3fe816.  v1:= temp @kind object;
  #L3fe818.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fe81e.  v1:= 93I;
  #L3fe822.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fe828.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fe82e.  v0:= temp @kind object;
  #L3fe830.  return v0 @kind object;
}
