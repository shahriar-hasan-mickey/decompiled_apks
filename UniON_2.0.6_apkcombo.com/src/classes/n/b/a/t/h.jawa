record `n.b.a.t.h` @kind class @AccessFlag PUBLIC_ABSTRACT extends `n.b.a.t.b` @kind class {
  `long` `n.b.a.t.h.b` @AccessFlag FINAL;
  `n.b.a.g` `n.b.a.t.h.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`n.b.a.t.h` v0 @kind this, `n.b.a.d` v1 @kind object, `long` v2 ) @signature `Ln/b/a/t/h;.<init>:(Ln/b/a/d;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ff064.  call `<init>`(v0, v1) @signature `Ln/b/a/t/b;.<init>:(Ln/b/a/d;)V` @kind direct;
  #L3ff06a.  v0.`n.b.a.t.h.b` @type ^`long` := v2 @kind wide;
  #L3ff06e.  v2:= new `n.b.a.t.h$a`;
  #L3ff072.  call temp:= `a`(v1) @signature `Ln/b/a/d;.a:()Ln/b/a/h;` @kind virtual;
  #L3ff078.  v1:= temp @kind object;
  #L3ff07a.  call `<init>`(v2, v0, v1) @signature `Ln/b/a/t/h$a;.<init>:(Ln/b/a/t/h;Ln/b/a/h;)V` @kind direct;
  #L3ff080.  v0.`n.b.a.t.h.c` @type ^`n.b.a.g` := v2 @kind object;
  #L3ff084.  return @kind void;
}
procedure `long` `a`(`long` v0 , `long` v2 ) @signature `Ln/b/a/t/h;.a:(JJ)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `n.b.a.g` `a`(`n.b.a.t.h` v1 @kind this) @signature `Ln/b/a/t/h;.a:()Ln/b/a/g;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff04c.  v0:= v1.`n.b.a.t.h.c` @type ^`n.b.a.g` @kind object;
  #L3ff050.  return v0 @kind object;
}
