record `n.b.a.t.r` @kind class @AccessFlag PUBLIC_FINAL extends `n.b.a.t.d` @kind class {
}
procedure `void` `<init>`(`n.b.a.t.r` v0 @kind this, `n.b.a.c` v1 @kind object, `n.b.a.d` v2 @kind object) @signature `Ln/b/a/t/r;.<init>:(Ln/b/a/c;Ln/b/a/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L40053c.  call `<init>`(v0, v1, v2) @signature `Ln/b/a/t/d;.<init>:(Ln/b/a/c;Ln/b/a/d;)V` @kind direct;
  #L400542.  call temp:= `d`(v1) @signature `Ln/b/a/c;.d:()I` @kind virtual;
  #L400548.  v1:= temp;
  #L40054a.  if v1 != 0 then goto L400550;
  #L40054e.  return @kind void;
  #L400550.  v1:= new `java.lang.IllegalArgumentException`;
  #L400554.  v2:= "Wrapped field's minumum value must be zero" @kind object;
  #L400558.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40055e.  throw v1;
}
procedure `int` `a`(`n.b.a.t.r` v1 @kind this, `long` v2 ) @signature `Ln/b/a/t/r;.a:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L400378.  call temp:= `j`(v1) @signature `Ln/b/a/t/d;.j:()Ln/b/a/c;` @kind virtual;
  #L40037e.  v0:= temp @kind object;
  #L400380.  call temp:= `a`(v0, v2) @signature `Ln/b/a/c;.a:(J)I` @kind virtual;
  #L400386.  v2:= temp;
  #L400388.  if v2 != 0 then goto L400394;
  #L40038c.  call temp:= `c`(v1) @signature `Ln/b/a/t/r;.c:()I` @kind virtual;
  #L400392.  v2:= temp;
  #L400394.  return v2;
}
procedure `long` `a`(`n.b.a.t.r` v1 @kind this, `long` v2 , `int` v4 ) @signature `Ln/b/a/t/r;.a:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4003e4.  call temp:= `j`(v1) @signature `Ln/b/a/t/d;.j:()Ln/b/a/c;` @kind virtual;
  #L4003ea.  v0:= temp @kind object;
  #L4003ec.  call temp:= `a`(v0, v2, v4) @signature `Ln/b/a/c;.a:(JI)J` @kind virtual;
  #L4003f2.  v2:= temp @kind wide;
  #L4003f4.  return v2 @kind wide;
}
procedure `long` `b`(`n.b.a.t.r` v2 @kind this, `long` v3 , `int` v5 ) @signature `Ln/b/a/t/r;.b:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4004e0.  call temp:= `c`(v2) @signature `Ln/b/a/t/r;.c:()I` @kind virtual;
  #L4004e6.  v0:= temp;
  #L4004e8.  v1:= 1I;
  #L4004ea.  call `a`(v2, v5, v1, v0) @signature `Ln/b/a/t/g;.a:(Ln/b/a/c;III)V` @kind static;
  #L4004f0.  if v5 != v0 then goto L4004f6;
  #L4004f4.  v5:= 0I;
  #L4004f6.  call temp:= `j`(v2) @signature `Ln/b/a/t/d;.j:()Ln/b/a/c;` @kind virtual;
  #L4004fc.  v0:= temp @kind object;
  #L4004fe.  call temp:= `b`(v0, v3, v5) @signature `Ln/b/a/c;.b:(JI)J` @kind virtual;
  #L400504.  v3:= temp @kind wide;
  #L400506.  return v3 @kind wide;
}
procedure `n.b.a.g` `b`(`n.b.a.t.r` v1 @kind this) @signature `Ln/b/a/t/r;.b:()Ln/b/a/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L400518.  call temp:= `j`(v1) @signature `Ln/b/a/t/d;.j:()Ln/b/a/c;` @kind virtual;
  #L40051e.  v0:= temp @kind object;
  #L400520.  call temp:= `b`(v0) @signature `Ln/b/a/c;.b:()Ln/b/a/g;` @kind virtual;
  #L400526.  v0:= temp @kind object;
  #L400528.  return v0 @kind object;
}
procedure `boolean` `b`(`n.b.a.t.r` v1 @kind this, `long` v2 ) @signature `Ln/b/a/t/r;.b:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L400354.  call temp:= `j`(v1) @signature `Ln/b/a/t/d;.j:()Ln/b/a/c;` @kind virtual;
  #L40035a.  v0:= temp @kind object;
  #L40035c.  call temp:= `b`(v0, v2) @signature `Ln/b/a/c;.b:(J)Z` @kind virtual;
  #L400362.  v2:= temp;
  #L400364.  return v2;
}
procedure `int` `c`(`n.b.a.t.r` v1 @kind this) @signature `Ln/b/a/t/r;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4003a8.  call temp:= `j`(v1) @signature `Ln/b/a/t/d;.j:()Ln/b/a/c;` @kind virtual;
  #L4003ae.  v0:= temp @kind object;
  #L4003b0.  call temp:= `c`(v0) @signature `Ln/b/a/c;.c:()I` @kind virtual;
  #L4003b6.  v0:= temp;
  #L4003b8.  v0:= v0 + 1;
  #L4003bc.  return v0;
}
procedure `long` `c`(`n.b.a.t.r` v1 @kind this, `long` v2 ) @signature `Ln/b/a/t/r;.c:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L400408.  call temp:= `j`(v1) @signature `Ln/b/a/t/d;.j:()Ln/b/a/c;` @kind virtual;
  #L40040e.  v0:= temp @kind object;
  #L400410.  call temp:= `c`(v0, v2) @signature `Ln/b/a/c;.c:(J)J` @kind virtual;
  #L400416.  v2:= temp @kind wide;
  #L400418.  return v2 @kind wide;
}
procedure `int` `d`(`n.b.a.t.r` v1 @kind this) @signature `Ln/b/a/t/r;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4003d0.  v0:= 1I;
  #L4003d2.  return v0;
}
procedure `long` `d`(`n.b.a.t.r` v1 @kind this, `long` v2 ) @signature `Ln/b/a/t/r;.d:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40042c.  call temp:= `j`(v1) @signature `Ln/b/a/t/d;.j:()Ln/b/a/c;` @kind virtual;
  #L400432.  v0:= temp @kind object;
  #L400434.  call temp:= `d`(v0, v2) @signature `Ln/b/a/c;.d:(J)J` @kind virtual;
  #L40043a.  v2:= temp @kind wide;
  #L40043c.  return v2 @kind wide;
}
procedure `long` `e`(`n.b.a.t.r` v1 @kind this, `long` v2 ) @signature `Ln/b/a/t/r;.e:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L400450.  call temp:= `j`(v1) @signature `Ln/b/a/t/d;.j:()Ln/b/a/c;` @kind virtual;
  #L400456.  v0:= temp @kind object;
  #L400458.  call temp:= `e`(v0, v2) @signature `Ln/b/a/c;.e:(J)J` @kind virtual;
  #L40045e.  v2:= temp @kind wide;
  #L400460.  return v2 @kind wide;
}
procedure `long` `f`(`n.b.a.t.r` v1 @kind this, `long` v2 ) @signature `Ln/b/a/t/r;.f:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L400474.  call temp:= `j`(v1) @signature `Ln/b/a/t/d;.j:()Ln/b/a/c;` @kind virtual;
  #L40047a.  v0:= temp @kind object;
  #L40047c.  call temp:= `f`(v0, v2) @signature `Ln/b/a/c;.f:(J)J` @kind virtual;
  #L400482.  v2:= temp @kind wide;
  #L400484.  return v2 @kind wide;
}
procedure `long` `g`(`n.b.a.t.r` v1 @kind this, `long` v2 ) @signature `Ln/b/a/t/r;.g:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L400498.  call temp:= `j`(v1) @signature `Ln/b/a/t/d;.j:()Ln/b/a/c;` @kind virtual;
  #L40049e.  v0:= temp @kind object;
  #L4004a0.  call temp:= `g`(v0, v2) @signature `Ln/b/a/c;.g:(J)J` @kind virtual;
  #L4004a6.  v2:= temp @kind wide;
  #L4004a8.  return v2 @kind wide;
}
procedure `long` `h`(`n.b.a.t.r` v1 @kind this, `long` v2 ) @signature `Ln/b/a/t/r;.h:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4004bc.  call temp:= `j`(v1) @signature `Ln/b/a/t/d;.j:()Ln/b/a/c;` @kind virtual;
  #L4004c2.  v0:= temp @kind object;
  #L4004c4.  call temp:= `h`(v0, v2) @signature `Ln/b/a/c;.h:(J)J` @kind virtual;
  #L4004ca.  v2:= temp @kind wide;
  #L4004cc.  return v2 @kind wide;
}
