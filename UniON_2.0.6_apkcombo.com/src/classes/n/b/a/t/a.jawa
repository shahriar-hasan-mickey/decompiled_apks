record `n.b.a.t.a` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.io.Serializable` @kind interface {
}
procedure `void` `<init>`(`n.b.a.t.a` v0 @kind this) @signature `Ln/b/a/t/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3fe3f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fe3fa.  return @kind void;
}
procedure `int` `a`(`n.b.a.t.a` v3 @kind this) @signature `Ln/b/a/t/a;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3fe210.  call temp:= `c`(v3) @signature `Ln/b/a/t/a;.c:()Ln/b/a/c;` @kind virtual;
  #L3fe216.  v0:= temp @kind object;
  #L3fe218.  call temp:= `f`(v3) @signature `Ln/b/a/t/a;.f:()J` @kind virtual;
  #L3fe21e.  v1:= temp @kind wide;
  #L3fe220.  call temp:= `a`(v0, v1) @signature `Ln/b/a/c;.a:(J)I` @kind virtual;
  #L3fe226.  v0:= temp;
  #L3fe228.  return v0;
}
procedure `java.lang.String` `a`(`n.b.a.t.a` v3 @kind this, `java.util.Locale` v4 @kind object) @signature `Ln/b/a/t/a;.a:(Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3fe2ec.  call temp:= `c`(v3) @signature `Ln/b/a/t/a;.c:()Ln/b/a/c;` @kind virtual;
  #L3fe2f2.  v0:= temp @kind object;
  #L3fe2f4.  call temp:= `f`(v3) @signature `Ln/b/a/t/a;.f:()J` @kind virtual;
  #L3fe2fa.  v1:= temp @kind wide;
  #L3fe2fc.  call temp:= `a`(v0, v1, v4) @signature `Ln/b/a/c;.a:(JLjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3fe302.  v4:= temp @kind object;
  #L3fe304.  return v4 @kind object;
}
procedure `java.lang.String` `b`(`n.b.a.t.a` v3 @kind this, `java.util.Locale` v4 @kind object) @signature `Ln/b/a/t/a;.b:(Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3fe318.  call temp:= `c`(v3) @signature `Ln/b/a/t/a;.c:()Ln/b/a/c;` @kind virtual;
  #L3fe31e.  v0:= temp @kind object;
  #L3fe320.  call temp:= `f`(v3) @signature `Ln/b/a/t/a;.f:()J` @kind virtual;
  #L3fe326.  v1:= temp @kind wide;
  #L3fe328.  call temp:= `b`(v0, v1, v4) @signature `Ln/b/a/c;.b:(JLjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3fe32e.  v4:= temp @kind object;
  #L3fe330.  return v4 @kind object;
}
procedure `n.b.a.a` `b`(`n.b.a.t.a` v2 @kind this) @signature `Ln/b/a/t/a;.b:()Ln/b/a/a;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3fe3b0.  v0:= new `java.lang.UnsupportedOperationException`;
  #L3fe3b4.  v1:= "The method getChronology() was added in v1.4 and needs to be implemented by subclasses of AbstractReadableInstantFieldProperty" @kind object;
  #L3fe3b8.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fe3be.  throw v0;
}
procedure `int` `c`(`n.b.a.t.a` v1 @kind this, `java.util.Locale` v2 @kind object) @signature `Ln/b/a/t/a;.c:(Ljava/util/Locale;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fe23c.  call temp:= `c`(v1) @signature `Ln/b/a/t/a;.c:()Ln/b/a/c;` @kind virtual;
  #L3fe242.  v0:= temp @kind object;
  #L3fe244.  call temp:= `a`(v0, v2) @signature `Ln/b/a/c;.a:(Ljava/util/Locale;)I` @kind virtual;
  #L3fe24a.  v2:= temp;
  #L3fe24c.  return v2;
}
procedure `n.b.a.c` `c`() @signature `Ln/b/a/t/a;.c:()Ln/b/a/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `n.b.a.d` `d`(`n.b.a.t.a` v1 @kind this) @signature `Ln/b/a/t/a;.d:()Ln/b/a/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fe3d0.  call temp:= `c`(v1) @signature `Ln/b/a/t/a;.c:()Ln/b/a/c;` @kind virtual;
  #L3fe3d6.  v0:= temp @kind object;
  #L3fe3d8.  call temp:= `g`(v0) @signature `Ln/b/a/c;.g:()Ln/b/a/d;` @kind virtual;
  #L3fe3de.  v0:= temp @kind object;
  #L3fe3e0.  return v0 @kind object;
}
procedure `int` `e`(`n.b.a.t.a` v1 @kind this) @signature `Ln/b/a/t/a;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fe260.  call temp:= `c`(v1) @signature `Ln/b/a/t/a;.c:()Ln/b/a/c;` @kind virtual;
  #L3fe266.  v0:= temp @kind object;
  #L3fe268.  call temp:= `c`(v0) @signature `Ln/b/a/c;.c:()I` @kind virtual;
  #L3fe26e.  v0:= temp;
  #L3fe270.  return v0;
}
procedure `boolean` `equals`(`n.b.a.t.a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Ln/b/a/t/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fe194.  v0:= 1I;
  #L3fe196.  if v4 != v5 then goto L3fe19c;
  #L3fe19a.  return v0;
  #L3fe19c.  v1:= instanceof @variable v5 @type ^`n.b.a.t.a` @kind boolean;
  #L3fe1a0.  v2:= 0I;
  #L3fe1a2.  if v1 != 0 then goto L3fe1a8;
  #L3fe1a6.  return v2;
  #L3fe1a8.  v5:= (`n.b.a.t.a`) v5 @kind object;
  #L3fe1ac.  call temp:= `a`(v4) @signature `Ln/b/a/t/a;.a:()I` @kind virtual;
  #L3fe1b2.  v1:= temp;
  #L3fe1b4.  call temp:= `a`(v5) @signature `Ln/b/a/t/a;.a:()I` @kind virtual;
  #L3fe1ba.  v3:= temp;
  #L3fe1bc.  if v1 != v3 then goto L3fe1fa;
  #L3fe1c0.  call temp:= `d`(v4) @signature `Ln/b/a/t/a;.d:()Ln/b/a/d;` @kind virtual;
  #L3fe1c6.  v1:= temp @kind object;
  #L3fe1c8.  call temp:= `d`(v5) @signature `Ln/b/a/t/a;.d:()Ln/b/a/d;` @kind virtual;
  #L3fe1ce.  v3:= temp @kind object;
  #L3fe1d0.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fe1d6.  v1:= temp;
  #L3fe1d8.  if v1 == 0 then goto L3fe1fa;
  #L3fe1dc.  call temp:= `b`(v4) @signature `Ln/b/a/t/a;.b:()Ln/b/a/a;` @kind virtual;
  #L3fe1e2.  v1:= temp @kind object;
  #L3fe1e4.  call temp:= `b`(v5) @signature `Ln/b/a/t/a;.b:()Ln/b/a/a;` @kind virtual;
  #L3fe1ea.  v5:= temp @kind object;
  #L3fe1ec.  call temp:= `a`(v1, v5) @signature `Ln/b/a/t/g;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3fe1f2.  v5:= temp;
  #L3fe1f4.  if v5 == 0 then goto L3fe1fa;
  #L3fe1f8.  goto L3fe1fc;
  #L3fe1fa.  v0:= 0I;
  #L3fe1fc.  return v0;
}
procedure `long` `f`() @signature `Ln/b/a/t/a;.f:()J` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `int` `g`(`n.b.a.t.a` v1 @kind this) @signature `Ln/b/a/t/a;.g:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fe284.  call temp:= `c`(v1) @signature `Ln/b/a/t/a;.c:()Ln/b/a/c;` @kind virtual;
  #L3fe28a.  v0:= temp @kind object;
  #L3fe28c.  call temp:= `d`(v0) @signature `Ln/b/a/c;.d:()I` @kind virtual;
  #L3fe292.  v0:= temp;
  #L3fe294.  return v0;
}
procedure `java.lang.String` `h`(`n.b.a.t.a` v1 @kind this) @signature `Ln/b/a/t/a;.h:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fe344.  call temp:= `c`(v1) @signature `Ln/b/a/t/a;.c:()Ln/b/a/c;` @kind virtual;
  #L3fe34a.  v0:= temp @kind object;
  #L3fe34c.  call temp:= `e`(v0) @signature `Ln/b/a/c;.e:()Ljava/lang/String;` @kind virtual;
  #L3fe352.  v0:= temp @kind object;
  #L3fe354.  return v0 @kind object;
}
procedure `int` `hashCode`(`n.b.a.t.a` v2 @kind this) @signature `Ln/b/a/t/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fe2a8.  call temp:= `a`(v2) @signature `Ln/b/a/t/a;.a:()I` @kind virtual;
  #L3fe2ae.  v0:= temp;
  #L3fe2b0.  v0:= v0 * 17;
  #L3fe2b4.  call temp:= `d`(v2) @signature `Ln/b/a/t/a;.d:()Ln/b/a/d;` @kind virtual;
  #L3fe2ba.  v1:= temp @kind object;
  #L3fe2bc.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3fe2c2.  v1:= temp;
  #L3fe2c4.  v0:= v0 + v1 @kind int;
  #L3fe2c6.  call temp:= `b`(v2) @signature `Ln/b/a/t/a;.b:()Ln/b/a/a;` @kind virtual;
  #L3fe2cc.  v1:= temp @kind object;
  #L3fe2ce.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3fe2d4.  v1:= temp;
  #L3fe2d6.  v0:= v0 + v1 @kind int;
  #L3fe2d8.  return v0;
}
procedure `java.lang.String` `toString`(`n.b.a.t.a` v2 @kind this) @signature `Ln/b/a/t/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fe368.  v0:= new `java.lang.StringBuilder`;
  #L3fe36c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fe372.  v1:= "Property[" @kind object;
  #L3fe376.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fe37c.  call temp:= `h`(v2) @signature `Ln/b/a/t/a;.h:()Ljava/lang/String;` @kind virtual;
  #L3fe382.  v1:= temp @kind object;
  #L3fe384.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fe38a.  v1:= "]" @kind object;
  #L3fe38e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fe394.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fe39a.  v0:= temp @kind object;
  #L3fe39c.  return v0 @kind object;
}
