record `n.b.a.t.i` @kind class @AccessFlag PUBLIC_FINAL extends `n.b.a.g` @kind class, `java.io.Serializable` @kind interface {
}
global `n.b.a.g` `@@n.b.a.t.i.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/b/a/t/i;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3ff1f4.  v0:= new `n.b.a.t.i`;
  #L3ff1f8.  call `<init>`(v0) @signature `Ln/b/a/t/i;.<init>:()V` @kind direct;
  #L3ff1fe.  `@@n.b.a.t.i.b` @type ^`n.b.a.g` := v0 @kind object;
  #L3ff202.  return @kind void;
}
procedure `void` `<init>`(`n.b.a.t.i` v0 @kind this) @signature `Ln/b/a/t/i;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3ff214.  call `<init>`(v0) @signature `Ln/b/a/g;.<init>:()V` @kind direct;
  #L3ff21a.  return @kind void;
}
procedure `int` `a`(`n.b.a.t.i` v4 @kind this, `n.b.a.g` v5 @kind object) @signature `Ln/b/a/t/i;.a:(Ln/b/a/g;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ff11c.  call temp:= `e`(v5) @signature `Ln/b/a/g;.e:()J` @kind virtual;
  #L3ff122.  v0:= temp @kind wide;
  #L3ff124.  call temp:= `e`(v4) @signature `Ln/b/a/t/i;.e:()J` @kind virtual;
  #L3ff12a.  v2:= temp @kind wide;
  #L3ff12c.  v5:= lcmp(v2, v0);
  #L3ff130.  if v5 != 0 then goto L3ff138;
  #L3ff134.  v5:= 0I;
  #L3ff136.  return v5;
  #L3ff138.  if v5 >= 0 then goto L3ff140;
  #L3ff13c.  v5:= -1I;
  #L3ff13e.  return v5;
  #L3ff140.  v5:= 1I;
  #L3ff142.  return v5;
}
procedure `long` `a`(`n.b.a.t.i` v2 @kind this, `long` v3 , `int` v5 ) @signature `Ln/b/a/t/i;.a:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ff188.  v0:= (`long`) v5 @kind i2l;
  #L3ff18a.  call temp:= `a`(v3, v0) @signature `Ln/b/a/t/g;.a:(JJ)J` @kind static;
  #L3ff190.  v3:= temp @kind wide;
  #L3ff192.  return v3 @kind wide;
}
procedure `long` `a`(`n.b.a.t.i` v0 @kind this, `long` v1 , `long` v3 ) @signature `Ln/b/a/t/i;.a:(JJ)J` @AccessFlag PUBLIC {
    temp;

  #L3ff1a4.  call temp:= `a`(v1, v3) @signature `Ln/b/a/t/g;.a:(JJ)J` @kind static;
  #L3ff1aa.  v1:= temp @kind wide;
  #L3ff1ac.  return v1 @kind wide;
}
procedure `n.b.a.h` `b`(`n.b.a.t.i` v1 @kind this) @signature `Ln/b/a/t/i;.b:()Ln/b/a/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ff1d8.  call temp:= `g`() @signature `Ln/b/a/h;.g:()Ln/b/a/h;` @kind static;
  #L3ff1de.  v0:= temp @kind object;
  #L3ff1e0.  return v0 @kind object;
}
procedure `int` `compareTo`(`n.b.a.t.i` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Ln/b/a/t/i;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3ff0fc.  v1:= (`n.b.a.g`) v1 @kind object;
  #L3ff100.  call temp:= `a`(v0, v1) @signature `Ln/b/a/t/i;.a:(Ln/b/a/g;)I` @kind virtual;
  #L3ff106.  v1:= temp;
  #L3ff108.  return v1;
}
procedure `long` `e`(`n.b.a.t.i` v2 @kind this) @signature `Ln/b/a/t/i;.e:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3ff1c0.  v0:= 1L;
  #L3ff1c4.  return v0 @kind wide;
}
procedure `boolean` `equals`(`n.b.a.t.i` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Ln/b/a/t/i;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ff098.  v0:= instanceof @variable v7 @type ^`n.b.a.t.i` @kind boolean;
  #L3ff09c.  v1:= 0I;
  #L3ff09e.  if v0 == 0 then goto L3ff0c0;
  #L3ff0a2.  call temp:= `e`(v6) @signature `Ln/b/a/t/i;.e:()J` @kind virtual;
  #L3ff0a8.  v2:= temp @kind wide;
  #L3ff0aa.  v7:= (`n.b.a.t.i`) v7 @kind object;
  #L3ff0ae.  call temp:= `e`(v7) @signature `Ln/b/a/t/i;.e:()J` @kind virtual;
  #L3ff0b4.  v4:= temp @kind wide;
  #L3ff0b6.  v7:= lcmp(v2, v4);
  #L3ff0ba.  if v7 != 0 then goto L3ff0c0;
  #L3ff0be.  v1:= 1I;
  #L3ff0c0.  return v1;
}
procedure `boolean` `h`(`n.b.a.t.i` v1 @kind this) @signature `Ln/b/a/t/i;.h:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff0d4.  v0:= 1I;
  #L3ff0d6.  return v0;
}
procedure `int` `hashCode`(`n.b.a.t.i` v2 @kind this) @signature `Ln/b/a/t/i;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ff154.  call temp:= `e`(v2) @signature `Ln/b/a/t/i;.e:()J` @kind virtual;
  #L3ff15a.  v0:= temp @kind wide;
  #L3ff15c.  v1:= (`int`) v0 @kind l2i;
  #L3ff15e.  return v1;
}
procedure `boolean` `k`(`n.b.a.t.i` v1 @kind this) @signature `Ln/b/a/t/i;.k:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ff0e8.  v0:= 1I;
  #L3ff0ea.  return v0;
}
procedure `java.lang.String` `toString`(`n.b.a.t.i` v1 @kind this) @signature `Ln/b/a/t/i;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ff170.  v0:= "DurationField[millis]" @kind object;
  #L3ff174.  return v0 @kind object;
}
