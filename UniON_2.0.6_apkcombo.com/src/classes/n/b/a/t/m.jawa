record `n.b.a.t.m` @kind class @AccessFlag PUBLIC extends `n.b.a.t.c` @kind class {
  `long` `n.b.a.t.m.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`n.b.a.t.m` v0 @kind this, `n.b.a.h` v1 @kind object, `long` v2 ) @signature `Ln/b/a/t/m;.<init>:(Ln/b/a/h;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ff8d8.  call `<init>`(v0, v1) @signature `Ln/b/a/t/c;.<init>:(Ln/b/a/h;)V` @kind direct;
  #L3ff8de.  v0.`n.b.a.t.m.c` @type ^`long` := v2 @kind wide;
  #L3ff8e2.  return @kind void;
}
procedure `long` `a`(`n.b.a.t.m` v4 @kind this, `long` v5 , `int` v7 ) @signature `Ln/b/a/t/m;.a:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ff874.  v0:= (`long`) v7 @kind i2l;
  #L3ff876.  v2:= v4.`n.b.a.t.m.c` @type ^`long` @kind wide;
  #L3ff87a.  v0:= v0 * v2 @kind long;
  #L3ff87e.  call temp:= `a`(v5, v0) @signature `Ln/b/a/t/g;.a:(JJ)J` @kind static;
  #L3ff884.  v5:= temp @kind wide;
  #L3ff886.  return v5 @kind wide;
}
procedure `long` `a`(`n.b.a.t.m` v2 @kind this, `long` v3 , `long` v5 ) @signature `Ln/b/a/t/m;.a:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ff898.  v0:= v2.`n.b.a.t.m.c` @type ^`long` @kind wide;
  #L3ff89c.  call temp:= `b`(v5, v0) @signature `Ln/b/a/t/g;.b:(JJ)J` @kind static;
  #L3ff8a2.  v5:= temp @kind wide;
  #L3ff8a4.  call temp:= `a`(v3, v5) @signature `Ln/b/a/t/g;.a:(JJ)J` @kind static;
  #L3ff8aa.  v3:= temp @kind wide;
  #L3ff8ac.  return v3 @kind wide;
}
procedure `long` `e`(`n.b.a.t.m` v2 @kind this) @signature `Ln/b/a/t/m;.e:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3ff8c0.  v0:= v2.`n.b.a.t.m.c` @type ^`long` @kind wide;
  #L3ff8c4.  return v0 @kind wide;
}
procedure `boolean` `equals`(`n.b.a.t.m` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Ln/b/a/t/m;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ff7d8.  v0:= 1I;
  #L3ff7da.  if v7 != v8 then goto L3ff7e0;
  #L3ff7de.  return v0;
  #L3ff7e0.  v1:= instanceof @variable v8 @type ^`n.b.a.t.m` @kind boolean;
  #L3ff7e4.  v2:= 0I;
  #L3ff7e6.  if v1 == 0 then goto L3ff818;
  #L3ff7ea.  v8:= (`n.b.a.t.m`) v8 @kind object;
  #L3ff7ee.  call temp:= `b`(v7) @signature `Ln/b/a/t/c;.b:()Ln/b/a/h;` @kind virtual;
  #L3ff7f4.  v1:= temp @kind object;
  #L3ff7f6.  call temp:= `b`(v8) @signature `Ln/b/a/t/c;.b:()Ln/b/a/h;` @kind virtual;
  #L3ff7fc.  v3:= temp @kind object;
  #L3ff7fe.  if v1 != v3 then goto L3ff814;
  #L3ff802.  v3:= v7.`n.b.a.t.m.c` @type ^`long` @kind wide;
  #L3ff806.  v5:= v8.`n.b.a.t.m.c` @type ^`long` @kind wide;
  #L3ff80a.  v8:= lcmp(v3, v5);
  #L3ff80e.  if v8 != 0 then goto L3ff814;
  #L3ff812.  goto L3ff816;
  #L3ff814.  v0:= 0I;
  #L3ff816.  return v0;
  #L3ff818.  return v2;
}
procedure `boolean` `h`(`n.b.a.t.m` v1 @kind this) @signature `Ln/b/a/t/m;.h:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ff82c.  v0:= 1I;
  #L3ff82e.  return v0;
}
procedure `int` `hashCode`(`n.b.a.t.m` v4 @kind this) @signature `Ln/b/a/t/m;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ff840.  v0:= v4.`n.b.a.t.m.c` @type ^`long` @kind wide;
  #L3ff844.  v2:= 32I;
  #L3ff848.  v2:= v0 ^>> v2 @kind long;
  #L3ff84c.  v0:= v0 ^~ v2 @kind long;
  #L3ff84e.  v1:= (`int`) v0 @kind l2i;
  #L3ff850.  call temp:= `b`(v4) @signature `Ln/b/a/t/c;.b:()Ln/b/a/h;` @kind virtual;
  #L3ff856.  v0:= temp @kind object;
  #L3ff858.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3ff85e.  v0:= temp;
  #L3ff860.  v1:= v1 + v0 @kind int;
  #L3ff862.  return v1;
}
