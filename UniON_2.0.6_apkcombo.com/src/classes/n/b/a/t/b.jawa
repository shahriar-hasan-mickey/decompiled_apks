record `n.b.a.t.b` @kind class @AccessFlag PUBLIC_ABSTRACT extends `n.b.a.c` @kind class {
  `n.b.a.d` `n.b.a.t.b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`n.b.a.t.b` v1 @kind this, `n.b.a.d` v2 @kind object) @signature `Ln/b/a/t/b;.<init>:(Ln/b/a/d;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L3fe740.  call `<init>`(v1) @signature `Ln/b/a/c;.<init>:()V` @kind direct;
  #L3fe746.  if v2 == 0 then goto L3fe750;
  #L3fe74a.  v1.`n.b.a.t.b.a` @type ^`n.b.a.d` := v2 @kind object;
  #L3fe74e.  return @kind void;
  #L3fe750.  v2:= new `java.lang.IllegalArgumentException`;
  #L3fe754.  v0:= "The type must not be null" @kind object;
  #L3fe758.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fe75e.  throw v2;
}
procedure `int` `a`(`n.b.a.t.b` v1 @kind this, `java.lang.String` v2 @kind object, `java.util.Locale` v3 @kind object) @signature `Ln/b/a/t/b;.a:(Ljava/lang/String;Ljava/util/Locale;)I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3fe434.  call temp:= `parseInt`(v2) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3fe43a.  v2:= temp;
  #L3fe43c.  return v2;
  #L3fe43e.  v3:= new `n.b.a.i`;
  #L3fe442.  call temp:= `g`(v1) @signature `Ln/b/a/t/b;.g:()Ln/b/a/d;` @kind virtual;
  #L3fe448.  v0:= temp @kind object;
  #L3fe44a.  call `<init>`(v3, v0, v2) @signature `Ln/b/a/i;.<init>:(Ln/b/a/d;Ljava/lang/String;)V` @kind direct;
  #L3fe450.  throw v3;
  catch `java.lang.NumberFormatException` @[L3fe434..L3fe43c] goto L3fe43e;
}
procedure `int` `a`(`n.b.a.t.b` v1 @kind this, `java.util.Locale` v2 @kind object) @signature `Ln/b/a/t/b;.a:(Ljava/util/Locale;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fe474.  call temp:= `c`(v1) @signature `Ln/b/a/c;.c:()I` @kind virtual;
  #L3fe47a.  v2:= temp;
  #L3fe47c.  if v2 < 0 then goto L3fe4a4;
  #L3fe480.  v0:= 10I;
  #L3fe484.  if v2 >= v0 then goto L3fe48c;
  #L3fe488.  v2:= 1I;
  #L3fe48a.  return v2;
  #L3fe48c.  v0:= 100I;
  #L3fe490.  if v2 >= v0 then goto L3fe498;
  #L3fe494.  v2:= 2I;
  #L3fe496.  return v2;
  #L3fe498.  v0:= 1000I;
  #L3fe49c.  if v2 >= v0 then goto L3fe4a4;
  #L3fe4a0.  v2:= 3I;
  #L3fe4a2.  return v2;
  #L3fe4a4.  call temp:= `toString`(v2) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L3fe4aa.  v2:= temp @kind object;
  #L3fe4ac.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3fe4b2.  v2:= temp;
  #L3fe4b4.  return v2;
}
procedure `long` `a`(`n.b.a.t.b` v1 @kind this, `long` v2 , `int` v4 ) @signature `Ln/b/a/t/b;.a:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fe5cc.  call temp:= `a`(v1) @signature `Ln/b/a/c;.a:()Ln/b/a/g;` @kind virtual;
  #L3fe5d2.  v0:= temp @kind object;
  #L3fe5d4.  call temp:= `a`(v0, v2, v4) @signature `Ln/b/a/g;.a:(JI)J` @kind virtual;
  #L3fe5da.  v2:= temp @kind wide;
  #L3fe5dc.  return v2 @kind wide;
}
procedure `long` `a`(`n.b.a.t.b` v0 @kind this, `long` v1 , `java.lang.String` v3 @kind object, `java.util.Locale` v4 @kind object) @signature `Ln/b/a/t/b;.a:(JLjava/lang/String;Ljava/util/Locale;)J` @AccessFlag PUBLIC {
    temp;

  #L3fe6f0.  call temp:= `a`(v0, v3, v4) @signature `Ln/b/a/t/b;.a:(Ljava/lang/String;Ljava/util/Locale;)I` @kind virtual;
  #L3fe6f6.  v3:= temp;
  #L3fe6f8.  call temp:= `b`(v0, v1, v3) @signature `Ln/b/a/c;.b:(JI)J` @kind virtual;
  #L3fe6fe.  v1:= temp @kind wide;
  #L3fe700.  return v1 @kind wide;
}
procedure `java.lang.String` `a`(`n.b.a.t.b` v0 @kind this, `int` v1 , `java.util.Locale` v2 @kind object) @signature `Ln/b/a/t/b;.a:(ILjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3fe4e4.  call temp:= `b`(v0, v1, v2) @signature `Ln/b/a/t/b;.b:(ILjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3fe4ea.  v1:= temp @kind object;
  #L3fe4ec.  return v1 @kind object;
}
procedure `java.lang.String` `a`(`n.b.a.t.b` v0 @kind this, `long` v1 , `java.util.Locale` v3 @kind object) @signature `Ln/b/a/t/b;.a:(JLjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3fe500.  call temp:= `a`(v0, v1) @signature `Ln/b/a/c;.a:(J)I` @kind virtual;
  #L3fe506.  v1:= temp;
  #L3fe508.  call temp:= `a`(v0, v1, v3) @signature `Ln/b/a/t/b;.a:(ILjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3fe50e.  v1:= temp @kind object;
  #L3fe510.  return v1 @kind object;
}
procedure `java.lang.String` `b`(`n.b.a.t.b` v0 @kind this, `int` v1 , `java.util.Locale` v2 @kind object) @signature `Ln/b/a/t/b;.b:(ILjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3fe524.  call temp:= `toString`(v1) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L3fe52a.  v1:= temp @kind object;
  #L3fe52c.  return v1 @kind object;
}
procedure `java.lang.String` `b`(`n.b.a.t.b` v0 @kind this, `long` v1 , `java.util.Locale` v3 @kind object) @signature `Ln/b/a/t/b;.b:(JLjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3fe540.  call temp:= `a`(v0, v1) @signature `Ln/b/a/c;.a:(J)I` @kind virtual;
  #L3fe546.  v1:= temp;
  #L3fe548.  call temp:= `b`(v0, v1, v3) @signature `Ln/b/a/t/b;.b:(ILjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3fe54e.  v1:= temp @kind object;
  #L3fe550.  return v1 @kind object;
}
procedure `n.b.a.g` `b`(`n.b.a.t.b` v1 @kind this) @signature `Ln/b/a/t/b;.b:()Ln/b/a/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fe72c.  v0:= 0I;
  #L3fe72e.  return v0 @kind object;
}
procedure `boolean` `b`(`n.b.a.t.b` v0 @kind this, `long` v1 ) @signature `Ln/b/a/t/b;.b:(J)Z` @AccessFlag PUBLIC {
    temp;

  #L3fe40c.  v1:= 0I;
  #L3fe40e.  return v1;
}
procedure `long` `c`(`n.b.a.t.b` v2 @kind this, `long` v3 ) @signature `Ln/b/a/t/b;.c:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fe5f0.  call temp:= `e`(v2, v3) @signature `Ln/b/a/c;.e:(J)J` @kind virtual;
  #L3fe5f6.  v0:= temp @kind wide;
  #L3fe5f8.  v3:= v3 - v0 @kind long;
  #L3fe5fa.  return v3 @kind wide;
}
procedure `long` `d`(`n.b.a.t.b` v3 @kind this, `long` v4 ) @signature `Ln/b/a/t/b;.d:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3fe60c.  call temp:= `e`(v3, v4) @signature `Ln/b/a/c;.e:(J)J` @kind virtual;
  #L3fe612.  v0:= temp @kind wide;
  #L3fe614.  v2:= lcmp(v0, v4);
  #L3fe618.  if v2 == 0 then goto L3fe626;
  #L3fe61c.  v4:= 1I;
  #L3fe61e.  call temp:= `a`(v3, v0, v4) @signature `Ln/b/a/t/b;.a:(JI)J` @kind virtual;
  #L3fe624.  v4:= temp @kind wide;
  #L3fe626.  return v4 @kind wide;
}
procedure `java.lang.String` `e`(`n.b.a.t.b` v1 @kind this) @signature `Ln/b/a/t/b;.e:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe564.  v0:= v1.`n.b.a.t.b.a` @type ^`n.b.a.d` @kind object;
  #L3fe568.  call temp:= `b`(v0) @signature `Ln/b/a/d;.b:()Ljava/lang/String;` @kind virtual;
  #L3fe56e.  v0:= temp @kind object;
  #L3fe570.  return v0 @kind object;
}
procedure `long` `f`(`n.b.a.t.b` v7 @kind this, `long` v8 ) @signature `Ln/b/a/t/b;.f:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fe638.  call temp:= `e`(v7, v8) @signature `Ln/b/a/c;.e:(J)J` @kind virtual;
  #L3fe63e.  v0:= temp @kind wide;
  #L3fe640.  call temp:= `d`(v7, v8) @signature `Ln/b/a/t/b;.d:(J)J` @kind virtual;
  #L3fe646.  v2:= temp @kind wide;
  #L3fe648.  v4:= v8 - v0 @kind long;
  #L3fe64c.  v8:= v2 - v8 @kind long;
  #L3fe650.  v6:= lcmp(v8, v4);
  #L3fe654.  if v6 > 0 then goto L3fe65a;
  #L3fe658.  return v2 @kind wide;
  #L3fe65a.  return v0 @kind wide;
}
procedure `long` `g`(`n.b.a.t.b` v7 @kind this, `long` v8 ) @signature `Ln/b/a/t/b;.g:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fe66c.  call temp:= `e`(v7, v8) @signature `Ln/b/a/c;.e:(J)J` @kind virtual;
  #L3fe672.  v0:= temp @kind wide;
  #L3fe674.  call temp:= `d`(v7, v8) @signature `Ln/b/a/t/b;.d:(J)J` @kind virtual;
  #L3fe67a.  v2:= temp @kind wide;
  #L3fe67c.  v4:= v8 - v0 @kind long;
  #L3fe680.  v8:= v2 - v8 @kind long;
  #L3fe684.  v6:= lcmp(v4, v8);
  #L3fe688.  if v6 >= 0 then goto L3fe68e;
  #L3fe68c.  return v0 @kind wide;
  #L3fe68e.  v6:= lcmp(v8, v4);
  #L3fe692.  if v6 >= 0 then goto L3fe698;
  #L3fe696.  return v2 @kind wide;
  #L3fe698.  call temp:= `a`(v7, v2) @signature `Ln/b/a/c;.a:(J)I` @kind virtual;
  #L3fe69e.  v8:= temp;
  #L3fe6a0.  v8:= v8 ^& 1;
  #L3fe6a4.  if v8 != 0 then goto L3fe6aa;
  #L3fe6a8.  return v2 @kind wide;
  #L3fe6aa.  return v0 @kind wide;
}
procedure `n.b.a.d` `g`(`n.b.a.t.b` v1 @kind this) @signature `Ln/b/a/t/b;.g:()Ln/b/a/d;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe714.  v0:= v1.`n.b.a.t.b.a` @type ^`n.b.a.d` @kind object;
  #L3fe718.  return v0 @kind object;
}
procedure `long` `h`(`n.b.a.t.b` v7 @kind this, `long` v8 ) @signature `Ln/b/a/t/b;.h:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fe6bc.  call temp:= `e`(v7, v8) @signature `Ln/b/a/c;.e:(J)J` @kind virtual;
  #L3fe6c2.  v0:= temp @kind wide;
  #L3fe6c4.  call temp:= `d`(v7, v8) @signature `Ln/b/a/t/b;.d:(J)J` @kind virtual;
  #L3fe6ca.  v2:= temp @kind wide;
  #L3fe6cc.  v4:= v8 - v0 @kind long;
  #L3fe6d0.  v8:= v2 - v8 @kind long;
  #L3fe6d4.  v6:= lcmp(v4, v8);
  #L3fe6d8.  if v6 > 0 then goto L3fe6de;
  #L3fe6dc.  return v0 @kind wide;
  #L3fe6de.  return v2 @kind wide;
}
procedure `int` `i`(`n.b.a.t.b` v0 @kind this, `long` v1 ) @signature `Ln/b/a/t/b;.i:(J)I` @AccessFlag PUBLIC {
    temp;

  #L3fe4c8.  call temp:= `c`(v0) @signature `Ln/b/a/c;.c:()I` @kind virtual;
  #L3fe4ce.  v1:= temp;
  #L3fe4d0.  return v1;
}
procedure `boolean` `i`(`n.b.a.t.b` v1 @kind this) @signature `Ln/b/a/t/b;.i:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fe420.  v0:= 1I;
  #L3fe422.  return v0;
}
procedure `java.lang.String` `toString`(`n.b.a.t.b` v2 @kind this) @signature `Ln/b/a/t/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fe584.  v0:= new `java.lang.StringBuilder`;
  #L3fe588.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fe58e.  v1:= "DateTimeField[" @kind object;
  #L3fe592.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fe598.  call temp:= `e`(v2) @signature `Ln/b/a/t/b;.e:()Ljava/lang/String;` @kind virtual;
  #L3fe59e.  v1:= temp @kind object;
  #L3fe5a0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fe5a6.  v1:= 93I;
  #L3fe5aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fe5b0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fe5b6.  v0:= temp @kind object;
  #L3fe5b8.  return v0 @kind object;
}
