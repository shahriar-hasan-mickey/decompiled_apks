record `n.b.a.t.h$a` @kind class @AccessFlag FINAL extends `n.b.a.t.c` @kind class {
  `n.b.a.t.h` `n.b.a.t.h$a.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`n.b.a.t.h$a` v0 @kind this, `n.b.a.t.h` v1 @kind object, `n.b.a.h` v2 @kind object) @signature `Ln/b/a/t/h$a;.<init>:(Ln/b/a/t/h;Ln/b/a/h;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ff030.  v0.`n.b.a.t.h$a.c` @type ^`n.b.a.t.h` := v1 @kind object;
  #L3ff034.  call `<init>`(v0, v2) @signature `Ln/b/a/t/c;.<init>:(Ln/b/a/h;)V` @kind direct;
  #L3ff03a.  return @kind void;
}
procedure `long` `a`(`n.b.a.t.h$a` v1 @kind this, `long` v2 , `int` v4 ) @signature `Ln/b/a/t/h$a;.a:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fefd4.  v0:= v1.`n.b.a.t.h$a.c` @type ^`n.b.a.t.h` @kind object;
  #L3fefd8.  call temp:= `a`(v0, v2, v4) @signature `Ln/b/a/t/b;.a:(JI)J` @kind virtual;
  #L3fefde.  v2:= temp @kind wide;
  #L3fefe0.  return v2 @kind wide;
}
procedure `long` `a`(`n.b.a.t.h$a` v1 @kind this, `long` v2 , `long` v4 ) @signature `Ln/b/a/t/h$a;.a:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3feff4.  v0:= v1.`n.b.a.t.h$a.c` @type ^`n.b.a.t.h` @kind object;
  #L3feff8.  call temp:= `a`(v0, v2, v4) @signature `Ln/b/a/t/h;.a:(JJ)J` @kind virtual;
  #L3feffe.  v2:= temp @kind wide;
  #L3ff000.  return v2 @kind wide;
}
procedure `long` `e`(`n.b.a.t.h$a` v2 @kind this) @signature `Ln/b/a/t/h$a;.e:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ff014.  v0:= v2.`n.b.a.t.h$a.c` @type ^`n.b.a.t.h` @kind object;
  #L3ff018.  v0:= v0.`n.b.a.t.h.b` @type ^`long` @kind wide;
  #L3ff01c.  return v0 @kind wide;
}
procedure `boolean` `h`(`n.b.a.t.h$a` v1 @kind this) @signature `Ln/b/a/t/h$a;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fefc0.  v0:= 0I;
  #L3fefc2.  return v0;
}
