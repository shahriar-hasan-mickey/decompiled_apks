record `n.b.a.j` @kind class @AccessFlag PUBLIC extends `java.lang.IllegalArgumentException` @kind class {
}
procedure `void` `<init>`(`n.b.a.j` v0 @kind this, `long` v1 , `java.lang.String` v3 @kind object) @signature `Ln/b/a/j;.<init>:(JLjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f8d80.  call temp:= `a`(v1, v3) @signature `Ln/b/a/j;.a:(JLjava/lang/String;)Ljava/lang/String;` @kind static;
  #L3f8d86.  v1:= temp @kind object;
  #L3f8d88.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f8d8e.  return @kind void;
}
procedure `void` `<init>`(`n.b.a.j` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Ln/b/a/j;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f8d68.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f8d6e.  return @kind void;
}
procedure `java.lang.String` `a`(`long` v2 , `java.lang.String` v4 @kind object) @signature `Ln/b/a/j;.a:(JLjava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3f8cd8.  v0:= "yyyy-MM-dd'T'HH:mm:ss.SSS" @kind object;
  #L3f8cdc.  call temp:= `b`(v0) @signature `Ln/b/a/u/a;.b:(Ljava/lang/String;)Ln/b/a/u/b;` @kind static;
  #L3f8ce2.  v0:= temp @kind object;
  #L3f8ce4.  v1:= new `n.b.a.k`;
  #L3f8ce8.  call `<init>`(v1, v2) @signature `Ln/b/a/k;.<init>:(J)V` @kind direct;
  #L3f8cee.  call temp:= `a`(v0, v1) @signature `Ln/b/a/u/b;.a:(Ln/b/a/p;)Ljava/lang/String;` @kind virtual;
  #L3f8cf4.  v2:= temp @kind object;
  #L3f8cf6.  if v4 == 0 then goto L3f8d28;
  #L3f8cfa.  v3:= new `java.lang.StringBuilder`;
  #L3f8cfe.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f8d04.  v0:= " (" @kind object;
  #L3f8d08.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f8d0e.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f8d14.  v4:= ")" @kind object;
  #L3f8d18.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f8d1e.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f8d24.  v3:= temp @kind object;
  #L3f8d26.  goto L3f8d2c;
  #L3f8d28.  v3:= "" @kind object;
  #L3f8d2c.  v4:= new `java.lang.StringBuilder`;
  #L3f8d30.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f8d36.  v0:= "Illegal instant due to time zone offset transition (daylight savings time 'gap'): " @kind object;
  #L3f8d3a.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f8d40.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f8d46.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f8d4c.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f8d52.  v2:= temp @kind object;
  #L3f8d54.  return v2 @kind object;
}
