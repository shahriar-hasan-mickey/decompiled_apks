record `n.b.a.h$a` @kind class @AccessFlag  extends `n.b.a.h` @kind class {
  `byte` `n.b.a.h$a.o` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`n.b.a.h$a` v0 @kind this, `java.lang.String` v1 @kind object, `byte` v2 ) @signature `Ln/b/a/h$a;.<init>:(Ljava/lang/String;B)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3f87c8.  call `<init>`(v0, v1) @signature `Ln/b/a/h;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f87ce.  v0.`n.b.a.h$a.o` @type ^`byte` := v2 @kind byte;
  #L3f87d2.  return @kind void;
}
procedure `n.b.a.g` `a`(`n.b.a.h$a` v1 @kind this, `n.b.a.a` v2 @kind object) @signature `Ln/b/a/h$a;.a:(Ln/b/a/a;)Ln/b/a/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f86e8.  call temp:= `a`(v2) @signature `Ln/b/a/e;.a:(Ln/b/a/a;)Ln/b/a/a;` @kind static;
  #L3f86ee.  v2:= temp @kind object;
  #L3f86f0.  v0:= v1.`n.b.a.h$a.o` @type ^`byte` @kind byte;
  #L3f86f4.  goto L3f8780;
  #L3f86fa.  v2:= new `java.lang.InternalError`;
  #L3f86fe.  call `<init>`(v2) @signature `Ljava/lang/InternalError;.<init>:()V` @kind direct;
  #L3f8704.  throw v2;
  #L3f8706.  call temp:= `q`(v2) @signature `Ln/b/a/a;.q:()Ln/b/a/g;` @kind virtual;
  #L3f870c.  v2:= temp @kind object;
  #L3f870e.  return v2 @kind object;
  #L3f8710.  call temp:= `A`(v2) @signature `Ln/b/a/a;.A:()Ln/b/a/g;` @kind virtual;
  #L3f8716.  v2:= temp @kind object;
  #L3f8718.  return v2 @kind object;
  #L3f871a.  call temp:= `v`(v2) @signature `Ln/b/a/a;.v:()Ln/b/a/g;` @kind virtual;
  #L3f8720.  v2:= temp @kind object;
  #L3f8722.  return v2 @kind object;
  #L3f8724.  call temp:= `p`(v2) @signature `Ln/b/a/a;.p:()Ln/b/a/g;` @kind virtual;
  #L3f872a.  v2:= temp @kind object;
  #L3f872c.  return v2 @kind object;
  #L3f872e.  call temp:= `m`(v2) @signature `Ln/b/a/a;.m:()Ln/b/a/g;` @kind virtual;
  #L3f8734.  v2:= temp @kind object;
  #L3f8736.  return v2 @kind object;
  #L3f8738.  call temp:= `h`(v2) @signature `Ln/b/a/a;.h:()Ln/b/a/g;` @kind virtual;
  #L3f873e.  v2:= temp @kind object;
  #L3f8740.  return v2 @kind object;
  #L3f8742.  call temp:= `C`(v2) @signature `Ln/b/a/a;.C:()Ln/b/a/g;` @kind virtual;
  #L3f8748.  v2:= temp @kind object;
  #L3f874a.  return v2 @kind object;
  #L3f874c.  call temp:= `x`(v2) @signature `Ln/b/a/a;.x:()Ln/b/a/g;` @kind virtual;
  #L3f8752.  v2:= temp @kind object;
  #L3f8754.  return v2 @kind object;
  #L3f8756.  call temp:= `K`(v2) @signature `Ln/b/a/a;.K:()Ln/b/a/g;` @kind virtual;
  #L3f875c.  v2:= temp @kind object;
  #L3f875e.  return v2 @kind object;
  #L3f8760.  call temp:= `F`(v2) @signature `Ln/b/a/a;.F:()Ln/b/a/g;` @kind virtual;
  #L3f8766.  v2:= temp @kind object;
  #L3f8768.  return v2 @kind object;
  #L3f876a.  call temp:= `a`(v2) @signature `Ln/b/a/a;.a:()Ln/b/a/g;` @kind virtual;
  #L3f8770.  v2:= temp @kind object;
  #L3f8772.  return v2 @kind object;
  #L3f8774.  call temp:= `j`(v2) @signature `Ln/b/a/a;.j:()Ln/b/a/g;` @kind virtual;
  #L3f877a.  v2:= temp @kind object;
  #L3f877c.  return v2 @kind object;
  #L3f877e.  
  #L3f8780.  switch v0
                  | 1 => goto L3f8774
                  | 2 => goto L3f876a
                  | 3 => goto L3f8760
                  | 4 => goto L3f8756
                  | 5 => goto L3f874c
                  | 6 => goto L3f8742
                  | 7 => goto L3f8738
                  | 8 => goto L3f872e
                  | 9 => goto L3f8724
                  | 10 => goto L3f871a
                  | 11 => goto L3f8710
                  | 12 => goto L3f8706
                  | else => goto L3f86fa;
}
procedure `boolean` `equals`(`n.b.a.h$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Ln/b/a/h$a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f8690.  v0:= 1I;
  #L3f8692.  if v3 != v4 then goto L3f8698;
  #L3f8696.  return v0;
  #L3f8698.  v1:= instanceof @variable v4 @type ^`n.b.a.h$a` @kind boolean;
  #L3f869c.  v2:= 0I;
  #L3f869e.  if v1 == 0 then goto L3f86b8;
  #L3f86a2.  v1:= v3.`n.b.a.h$a.o` @type ^`byte` @kind byte;
  #L3f86a6.  v4:= (`n.b.a.h$a`) v4 @kind object;
  #L3f86aa.  v4:= v4.`n.b.a.h$a.o` @type ^`byte` @kind byte;
  #L3f86ae.  if v1 != v4 then goto L3f86b4;
  #L3f86b2.  goto L3f86b6;
  #L3f86b4.  v0:= 0I;
  #L3f86b6.  return v0;
  #L3f86b8.  return v2;
}
procedure `int` `hashCode`(`n.b.a.h$a` v2 @kind this) @signature `Ln/b/a/h$a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f86cc.  v0:= v2.`n.b.a.h$a.o` @type ^`byte` @kind byte;
  #L3f86d0.  v1:= 1I;
  #L3f86d2.  v0:= v1 ^< v0 @kind int;
  #L3f86d6.  return v0;
}
