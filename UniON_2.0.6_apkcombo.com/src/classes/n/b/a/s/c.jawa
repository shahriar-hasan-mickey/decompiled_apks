record `n.b.a.s.c` @kind class @AccessFlag ABSTRACT extends `n.b.a.s.a` @kind class {
  `n.b.a.s.c$b`[] `n.b.a.s.c.M` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `int` `n.b.a.s.c.N` @AccessFlag PRIVATE_FINAL;
}
global `n.b.a.g` `@@n.b.a.s.c.O` @AccessFlag PRIVATE_STATIC_FINAL;
global `n.b.a.g` `@@n.b.a.s.c.P` @AccessFlag PRIVATE_STATIC_FINAL;
global `n.b.a.g` `@@n.b.a.s.c.Q` @AccessFlag PRIVATE_STATIC_FINAL;
global `n.b.a.g` `@@n.b.a.s.c.R` @AccessFlag PRIVATE_STATIC_FINAL;
global `n.b.a.g` `@@n.b.a.s.c.S` @AccessFlag PRIVATE_STATIC_FINAL;
global `n.b.a.g` `@@n.b.a.s.c.T` @AccessFlag PRIVATE_STATIC_FINAL;
global `n.b.a.g` `@@n.b.a.s.c.U` @AccessFlag PRIVATE_STATIC_FINAL;
global `n.b.a.c` `@@n.b.a.s.c.V` @AccessFlag PRIVATE_STATIC_FINAL;
global `n.b.a.c` `@@n.b.a.s.c.W` @AccessFlag PRIVATE_STATIC_FINAL;
global `n.b.a.c` `@@n.b.a.s.c.X` @AccessFlag PRIVATE_STATIC_FINAL;
global `n.b.a.c` `@@n.b.a.s.c.Y` @AccessFlag PRIVATE_STATIC_FINAL;
global `n.b.a.c` `@@n.b.a.s.c.Z` @AccessFlag PRIVATE_STATIC_FINAL;
global `n.b.a.c` `@@n.b.a.s.c.a0` @AccessFlag PRIVATE_STATIC_FINAL;
global `n.b.a.c` `@@n.b.a.s.c.b0` @AccessFlag PRIVATE_STATIC_FINAL;
global `n.b.a.c` `@@n.b.a.s.c.c0` @AccessFlag PRIVATE_STATIC_FINAL;
global `n.b.a.c` `@@n.b.a.s.c.d0` @AccessFlag PRIVATE_STATIC_FINAL;
global `n.b.a.c` `@@n.b.a.s.c.e0` @AccessFlag PRIVATE_STATIC_FINAL;
global `n.b.a.c` `@@n.b.a.s.c.f0` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/b/a/s/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fad84.  v0:= `@@n.b.a.t.i.b` @type ^`n.b.a.g` @kind object;
  #L3fad88.  `@@n.b.a.s.c.O` @type ^`n.b.a.g` := v0 @kind object;
  #L3fad8c.  v0:= new `n.b.a.t.m`;
  #L3fad90.  call temp:= `j`() @signature `Ln/b/a/h;.j:()Ln/b/a/h;` @kind static;
  #L3fad96.  v1:= temp @kind object;
  #L3fad98.  v2:= 1000L;
  #L3fad9c.  call `<init>`(v0, v1, v2) @signature `Ln/b/a/t/m;.<init>:(Ln/b/a/h;J)V` @kind direct;
  #L3fada2.  `@@n.b.a.s.c.P` @type ^`n.b.a.g` := v0 @kind object;
  #L3fada6.  v0:= new `n.b.a.t.m`;
  #L3fadaa.  call temp:= `h`() @signature `Ln/b/a/h;.h:()Ln/b/a/h;` @kind static;
  #L3fadb0.  v1:= temp @kind object;
  #L3fadb2.  v2:= 60000L;
  #L3fadb8.  call `<init>`(v0, v1, v2) @signature `Ln/b/a/t/m;.<init>:(Ln/b/a/h;J)V` @kind direct;
  #L3fadbe.  `@@n.b.a.s.c.Q` @type ^`n.b.a.g` := v0 @kind object;
  #L3fadc2.  v0:= new `n.b.a.t.m`;
  #L3fadc6.  call temp:= `f`() @signature `Ln/b/a/h;.f:()Ln/b/a/h;` @kind static;
  #L3fadcc.  v1:= temp @kind object;
  #L3fadce.  v2:= 3600000L;
  #L3fadd4.  call `<init>`(v0, v1, v2) @signature `Ln/b/a/t/m;.<init>:(Ln/b/a/h;J)V` @kind direct;
  #L3fadda.  `@@n.b.a.s.c.R` @type ^`n.b.a.g` := v0 @kind object;
  #L3fadde.  v0:= new `n.b.a.t.m`;
  #L3fade2.  call temp:= `e`() @signature `Ln/b/a/h;.e:()Ln/b/a/h;` @kind static;
  #L3fade8.  v1:= temp @kind object;
  #L3fadea.  v2:= 43200000L;
  #L3fadf0.  call `<init>`(v0, v1, v2) @signature `Ln/b/a/t/m;.<init>:(Ln/b/a/h;J)V` @kind direct;
  #L3fadf6.  `@@n.b.a.s.c.S` @type ^`n.b.a.g` := v0 @kind object;
  #L3fadfa.  v0:= new `n.b.a.t.m`;
  #L3fadfe.  call temp:= `c`() @signature `Ln/b/a/h;.c:()Ln/b/a/h;` @kind static;
  #L3fae04.  v1:= temp @kind object;
  #L3fae06.  v2:= 86400000L;
  #L3fae0c.  call `<init>`(v0, v1, v2) @signature `Ln/b/a/t/m;.<init>:(Ln/b/a/h;J)V` @kind direct;
  #L3fae12.  `@@n.b.a.s.c.T` @type ^`n.b.a.g` := v0 @kind object;
  #L3fae16.  v0:= new `n.b.a.t.m`;
  #L3fae1a.  call temp:= `k`() @signature `Ln/b/a/h;.k:()Ln/b/a/h;` @kind static;
  #L3fae20.  v1:= temp @kind object;
  #L3fae22.  v2:= 604800000L;
  #L3fae28.  call `<init>`(v0, v1, v2) @signature `Ln/b/a/t/m;.<init>:(Ln/b/a/h;J)V` @kind direct;
  #L3fae2e.  `@@n.b.a.s.c.U` @type ^`n.b.a.g` := v0 @kind object;
  #L3fae32.  v0:= new `n.b.a.t.k`;
  #L3fae36.  call temp:= `n`() @signature `Ln/b/a/d;.n:()Ln/b/a/d;` @kind static;
  #L3fae3c.  v1:= temp @kind object;
  #L3fae3e.  v2:= `@@n.b.a.s.c.O` @type ^`n.b.a.g` @kind object;
  #L3fae42.  v3:= `@@n.b.a.s.c.P` @type ^`n.b.a.g` @kind object;
  #L3fae46.  call `<init>`(v0, v1, v2, v3) @signature `Ln/b/a/t/k;.<init>:(Ln/b/a/d;Ln/b/a/g;Ln/b/a/g;)V` @kind direct;
  #L3fae4c.  `@@n.b.a.s.c.V` @type ^`n.b.a.c` := v0 @kind object;
  #L3fae50.  v0:= new `n.b.a.t.k`;
  #L3fae54.  call temp:= `m`() @signature `Ln/b/a/d;.m:()Ln/b/a/d;` @kind static;
  #L3fae5a.  v1:= temp @kind object;
  #L3fae5c.  v2:= `@@n.b.a.s.c.O` @type ^`n.b.a.g` @kind object;
  #L3fae60.  v3:= `@@n.b.a.s.c.T` @type ^`n.b.a.g` @kind object;
  #L3fae64.  call `<init>`(v0, v1, v2, v3) @signature `Ln/b/a/t/k;.<init>:(Ln/b/a/d;Ln/b/a/g;Ln/b/a/g;)V` @kind direct;
  #L3fae6a.  `@@n.b.a.s.c.W` @type ^`n.b.a.c` := v0 @kind object;
  #L3fae6e.  v0:= new `n.b.a.t.k`;
  #L3fae72.  call temp:= `s`() @signature `Ln/b/a/d;.s:()Ln/b/a/d;` @kind static;
  #L3fae78.  v1:= temp @kind object;
  #L3fae7a.  v2:= `@@n.b.a.s.c.P` @type ^`n.b.a.g` @kind object;
  #L3fae7e.  v3:= `@@n.b.a.s.c.Q` @type ^`n.b.a.g` @kind object;
  #L3fae82.  call `<init>`(v0, v1, v2, v3) @signature `Ln/b/a/t/k;.<init>:(Ln/b/a/d;Ln/b/a/g;Ln/b/a/g;)V` @kind direct;
  #L3fae88.  `@@n.b.a.s.c.X` @type ^`n.b.a.c` := v0 @kind object;
  #L3fae8c.  v0:= new `n.b.a.t.k`;
  #L3fae90.  call temp:= `r`() @signature `Ln/b/a/d;.r:()Ln/b/a/d;` @kind static;
  #L3fae96.  v1:= temp @kind object;
  #L3fae98.  v2:= `@@n.b.a.s.c.P` @type ^`n.b.a.g` @kind object;
  #L3fae9c.  v3:= `@@n.b.a.s.c.T` @type ^`n.b.a.g` @kind object;
  #L3faea0.  call `<init>`(v0, v1, v2, v3) @signature `Ln/b/a/t/k;.<init>:(Ln/b/a/d;Ln/b/a/g;Ln/b/a/g;)V` @kind direct;
  #L3faea6.  `@@n.b.a.s.c.Y` @type ^`n.b.a.c` := v0 @kind object;
  #L3faeaa.  v0:= new `n.b.a.t.k`;
  #L3faeae.  call temp:= `p`() @signature `Ln/b/a/d;.p:()Ln/b/a/d;` @kind static;
  #L3faeb4.  v1:= temp @kind object;
  #L3faeb6.  v2:= `@@n.b.a.s.c.Q` @type ^`n.b.a.g` @kind object;
  #L3faeba.  v3:= `@@n.b.a.s.c.R` @type ^`n.b.a.g` @kind object;
  #L3faebe.  call `<init>`(v0, v1, v2, v3) @signature `Ln/b/a/t/k;.<init>:(Ln/b/a/d;Ln/b/a/g;Ln/b/a/g;)V` @kind direct;
  #L3faec4.  `@@n.b.a.s.c.Z` @type ^`n.b.a.c` := v0 @kind object;
  #L3faec8.  v0:= new `n.b.a.t.k`;
  #L3faecc.  call temp:= `o`() @signature `Ln/b/a/d;.o:()Ln/b/a/d;` @kind static;
  #L3faed2.  v1:= temp @kind object;
  #L3faed4.  v2:= `@@n.b.a.s.c.Q` @type ^`n.b.a.g` @kind object;
  #L3faed8.  v3:= `@@n.b.a.s.c.T` @type ^`n.b.a.g` @kind object;
  #L3faedc.  call `<init>`(v0, v1, v2, v3) @signature `Ln/b/a/t/k;.<init>:(Ln/b/a/d;Ln/b/a/g;Ln/b/a/g;)V` @kind direct;
  #L3faee2.  `@@n.b.a.s.c.a0` @type ^`n.b.a.c` := v0 @kind object;
  #L3faee6.  v0:= new `n.b.a.t.k`;
  #L3faeea.  call temp:= `k`() @signature `Ln/b/a/d;.k:()Ln/b/a/d;` @kind static;
  #L3faef0.  v1:= temp @kind object;
  #L3faef2.  v2:= `@@n.b.a.s.c.R` @type ^`n.b.a.g` @kind object;
  #L3faef6.  v3:= `@@n.b.a.s.c.T` @type ^`n.b.a.g` @kind object;
  #L3faefa.  call `<init>`(v0, v1, v2, v3) @signature `Ln/b/a/t/k;.<init>:(Ln/b/a/d;Ln/b/a/g;Ln/b/a/g;)V` @kind direct;
  #L3faf00.  `@@n.b.a.s.c.b0` @type ^`n.b.a.c` := v0 @kind object;
  #L3faf04.  v0:= new `n.b.a.t.k`;
  #L3faf08.  call temp:= `l`() @signature `Ln/b/a/d;.l:()Ln/b/a/d;` @kind static;
  #L3faf0e.  v1:= temp @kind object;
  #L3faf10.  v2:= `@@n.b.a.s.c.R` @type ^`n.b.a.g` @kind object;
  #L3faf14.  v3:= `@@n.b.a.s.c.S` @type ^`n.b.a.g` @kind object;
  #L3faf18.  call `<init>`(v0, v1, v2, v3) @signature `Ln/b/a/t/k;.<init>:(Ln/b/a/d;Ln/b/a/g;Ln/b/a/g;)V` @kind direct;
  #L3faf1e.  `@@n.b.a.s.c.c0` @type ^`n.b.a.c` := v0 @kind object;
  #L3faf22.  v0:= new `n.b.a.t.r`;
  #L3faf26.  v1:= `@@n.b.a.s.c.b0` @type ^`n.b.a.c` @kind object;
  #L3faf2a.  call temp:= `d`() @signature `Ln/b/a/d;.d:()Ln/b/a/d;` @kind static;
  #L3faf30.  v2:= temp @kind object;
  #L3faf32.  call `<init>`(v0, v1, v2) @signature `Ln/b/a/t/r;.<init>:(Ln/b/a/c;Ln/b/a/d;)V` @kind direct;
  #L3faf38.  `@@n.b.a.s.c.d0` @type ^`n.b.a.c` := v0 @kind object;
  #L3faf3c.  v0:= new `n.b.a.t.r`;
  #L3faf40.  v1:= `@@n.b.a.s.c.c0` @type ^`n.b.a.c` @kind object;
  #L3faf44.  call temp:= `e`() @signature `Ln/b/a/d;.e:()Ln/b/a/d;` @kind static;
  #L3faf4a.  v2:= temp @kind object;
  #L3faf4c.  call `<init>`(v0, v1, v2) @signature `Ln/b/a/t/r;.<init>:(Ln/b/a/c;Ln/b/a/d;)V` @kind direct;
  #L3faf52.  `@@n.b.a.s.c.e0` @type ^`n.b.a.c` := v0 @kind object;
  #L3faf56.  v0:= new `n.b.a.s.c$a`;
  #L3faf5a.  call `<init>`(v0) @signature `Ln/b/a/s/c$a;.<init>:()V` @kind direct;
  #L3faf60.  `@@n.b.a.s.c.f0` @type ^`n.b.a.c` := v0 @kind object;
  #L3faf64.  return @kind void;
}
procedure `void` `<init>`(`n.b.a.s.c` v1 @kind this, `n.b.a.a` v2 @kind object, `java.lang.Object` v3 @kind object, `int` v4 ) @signature `Ln/b/a/s/c;.<init>:(Ln/b/a/a;Ljava/lang/Object;I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3faf78.  call `<init>`(v1, v2, v3) @signature `Ln/b/a/s/a;.<init>:(Ln/b/a/a;Ljava/lang/Object;)V` @kind direct;
  #L3faf7e.  v2:= 1024I;
  #L3faf82.  v2:= new `n.b.a.s.c$b`[v2];
  #L3faf86.  v1.`n.b.a.s.c.M` @type ^`n.b.a.s.c$b`[] := v2 @kind object;
  #L3faf8a.  v2:= 1I;
  #L3faf8c.  if v4 < v2 then goto L3faf9c;
  #L3faf90.  v2:= 7I;
  #L3faf92.  if v4 > v2 then goto L3faf9c;
  #L3faf96.  v1.`n.b.a.s.c.N` @type ^`int` := v4;
  #L3faf9a.  return @kind void;
  #L3faf9c.  v2:= new `java.lang.IllegalArgumentException`;
  #L3fafa0.  v3:= new `java.lang.StringBuilder`;
  #L3fafa4.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fafaa.  v0:= "Invalid min days in first week: " @kind object;
  #L3fafae.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fafb4.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fafba.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fafc0.  v3:= temp @kind object;
  #L3fafc2.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fafc8.  throw v2;
}
procedure `n.b.a.g` `X`() @signature `Ln/b/a/s/c;.X:()Ln/b/a/g;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L3fad10.  v0:= `@@n.b.a.s.c.S` @type ^`n.b.a.g` @kind object;
  #L3fad14.  return v0 @kind object;
}
procedure `n.b.a.g` `Y`() @signature `Ln/b/a/s/c;.Y:()Ln/b/a/g;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L3fad28.  v0:= `@@n.b.a.s.c.T` @type ^`n.b.a.g` @kind object;
  #L3fad2c.  return v0 @kind object;
}
procedure `n.b.a.s.c$b` `g`(`n.b.a.s.c` v4 @kind this, `int` v5 ) @signature `Ln/b/a/s/c;.g:(I)Ln/b/a/s/c$b;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fad40.  v0:= v4.`n.b.a.s.c.M` @type ^`n.b.a.s.c$b`[] @kind object;
  #L3fad44.  v1:= v5 ^& 1023;
  #L3fad48.  v0:= v0[v1] @kind object;
  #L3fad4c.  if v0 == 0 then goto L3fad58;
  #L3fad50.  v2:= v0.`n.b.a.s.c$b.a` @type ^`int`;
  #L3fad54.  if v2 == v5 then goto L3fad72;
  #L3fad58.  v0:= new `n.b.a.s.c$b`;
  #L3fad5c.  call temp:= `a`(v4, v5) @signature `Ln/b/a/s/c;.a:(I)J` @kind virtual;
  #L3fad62.  v2:= temp @kind wide;
  #L3fad64.  call `<init>`(v0, v5, v2) @signature `Ln/b/a/s/c$b;.<init>:(IJ)V` @kind direct;
  #L3fad6a.  v5:= v4.`n.b.a.s.c.M` @type ^`n.b.a.s.c$b`[] @kind object;
  #L3fad6e.  v5[v1]:= v0 @kind object;
  #L3fad72.  return v0 @kind object;
}
procedure `long` `N`() @signature `Ln/b/a/s/c;.N:()J` @AccessFlag ABSTRACT {

  # return;
}
procedure `long` `O`() @signature `Ln/b/a/s/c;.O:()J` @AccessFlag ABSTRACT {

  # return;
}
procedure `long` `P`() @signature `Ln/b/a/s/c;.P:()J` @AccessFlag ABSTRACT {

  # return;
}
procedure `long` `Q`() @signature `Ln/b/a/s/c;.Q:()J` @AccessFlag ABSTRACT {

  # return;
}
procedure `int` `R`(`n.b.a.s.c` v1 @kind this) @signature `Ln/b/a/s/c;.R:()I` @AccessFlag  {
    temp;
    v0;

  #L3fa860.  v0:= 31I;
  #L3fa864.  return v0;
}
procedure `int` `S`(`n.b.a.s.c` v1 @kind this) @signature `Ln/b/a/s/c;.S:()I` @AccessFlag  {
    temp;
    v0;

  #L3fa8e8.  v0:= 366I;
  #L3fa8ec.  return v0;
}
procedure `int` `T`(`n.b.a.s.c` v1 @kind this) @signature `Ln/b/a/s/c;.T:()I` @AccessFlag  {
    temp;
    v0;

  #L3fa900.  v0:= 12I;
  #L3fa904.  return v0;
}
procedure `int` `U`() @signature `Ln/b/a/s/c;.U:()I` @AccessFlag ABSTRACT {

  # return;
}
procedure `int` `V`() @signature `Ln/b/a/s/c;.V:()I` @AccessFlag ABSTRACT {

  # return;
}
procedure `int` `W`(`n.b.a.s.c` v1 @kind this) @signature `Ln/b/a/s/c;.W:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fa954.  v0:= v1.`n.b.a.s.c.N` @type ^`int`;
  #L3fa958.  return v0;
}
procedure `int` `a`(`int` v0 , `int` v1 ) @signature `Ln/b/a/s/c;.a:(II)I` @AccessFlag ABSTRACT {

  # return;
}
procedure `int` `a`(`n.b.a.s.c` v2 @kind this, `long` v3 ) @signature `Ln/b/a/s/c;.a:(J)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3fa72c.  call temp:= `i`(v2, v3) @signature `Ln/b/a/s/c;.i:(J)I` @kind virtual;
  #L3fa732.  v0:= temp;
  #L3fa734.  call temp:= `d`(v2, v3, v0) @signature `Ln/b/a/s/c;.d:(JI)I` @kind virtual;
  #L3fa73a.  v1:= temp;
  #L3fa73c.  call temp:= `a`(v2, v3, v0, v1) @signature `Ln/b/a/s/c;.a:(JII)I` @kind virtual;
  #L3fa742.  v3:= temp;
  #L3fa744.  return v3;
}
procedure `int` `a`(`n.b.a.s.c` v1 @kind this, `long` v2 , `int` v4 ) @signature `Ln/b/a/s/c;.a:(JI)I` @AccessFlag  {
    temp;
    v0;

  #L3fa758.  call temp:= `d`(v1, v2, v4) @signature `Ln/b/a/s/c;.d:(JI)I` @kind virtual;
  #L3fa75e.  v0:= temp;
  #L3fa760.  call temp:= `a`(v1, v2, v4, v0) @signature `Ln/b/a/s/c;.a:(JII)I` @kind virtual;
  #L3fa766.  v2:= temp;
  #L3fa768.  return v2;
}
procedure `int` `a`(`n.b.a.s.c` v2 @kind this, `long` v3 , `int` v5 , `int` v6 ) @signature `Ln/b/a/s/c;.a:(JII)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3fa77c.  call temp:= `e`(v2, v5) @signature `Ln/b/a/s/c;.e:(I)J` @kind virtual;
  #L3fa782.  v0:= temp @kind wide;
  #L3fa784.  call temp:= `b`(v2, v5, v6) @signature `Ln/b/a/s/c;.b:(II)J` @kind virtual;
  #L3fa78a.  v5:= temp @kind wide;
  #L3fa78c.  v0:= v0 + v5 @kind long;
  #L3fa78e.  v3:= v3 - v0 @kind long;
  #L3fa790.  v5:= 86400000L;
  #L3fa796.  v3:= v3 / v5 @kind long;
  #L3fa798.  v4:= (`int`) v3 @kind l2i;
  #L3fa79a.  v4:= v4 + 1;
  #L3fa79e.  return v4;
}
procedure `long` `a`(`int` v0 ) @signature `Ln/b/a/s/c;.a:(I)J` @AccessFlag ABSTRACT {

  # return;
}
procedure `long` `a`(`n.b.a.s.c` v4 @kind this, `int` v5 , `int` v6 , `int` v7 ) @signature `Ln/b/a/s/c;.a:(III)J` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fac88.  call temp:= `e`(v4, v5) @signature `Ln/b/a/s/c;.e:(I)J` @kind virtual;
  #L3fac8e.  v0:= temp @kind wide;
  #L3fac90.  call temp:= `b`(v4, v5, v6) @signature `Ln/b/a/s/c;.b:(II)J` @kind virtual;
  #L3fac96.  v5:= temp @kind wide;
  #L3fac98.  v0:= v0 + v5 @kind long;
  #L3fac9a.  v7:= v7 + -1;
  #L3fac9e.  v5:= (`long`) v7 @kind i2l;
  #L3faca0.  v2:= 86400000L;
  #L3faca6.  v5:= v5 * v2 @kind long;
  #L3facaa.  v0:= v0 + v5 @kind long;
  #L3facac.  return v0 @kind wide;
}
procedure `void` `a`(`n.b.a.s.c` v6 @kind this, `n.b.a.s.a$a` v7 @kind object) @signature `Ln/b/a/s/c;.a:(Ln/b/a/s/a$a;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fafdc.  v0:= `@@n.b.a.s.c.O` @type ^`n.b.a.g` @kind object;
  #L3fafe0.  v7.`n.b.a.s.a$a.a` @type ^`n.b.a.g` := v0 @kind object;
  #L3fafe4.  v0:= `@@n.b.a.s.c.P` @type ^`n.b.a.g` @kind object;
  #L3fafe8.  v7.`n.b.a.s.a$a.b` @type ^`n.b.a.g` := v0 @kind object;
  #L3fafec.  v0:= `@@n.b.a.s.c.Q` @type ^`n.b.a.g` @kind object;
  #L3faff0.  v7.`n.b.a.s.a$a.c` @type ^`n.b.a.g` := v0 @kind object;
  #L3faff4.  v0:= `@@n.b.a.s.c.R` @type ^`n.b.a.g` @kind object;
  #L3faff8.  v7.`n.b.a.s.a$a.d` @type ^`n.b.a.g` := v0 @kind object;
  #L3faffc.  v0:= `@@n.b.a.s.c.S` @type ^`n.b.a.g` @kind object;
  #L3fb000.  v7.`n.b.a.s.a$a.e` @type ^`n.b.a.g` := v0 @kind object;
  #L3fb004.  v0:= `@@n.b.a.s.c.T` @type ^`n.b.a.g` @kind object;
  #L3fb008.  v7.`n.b.a.s.a$a.f` @type ^`n.b.a.g` := v0 @kind object;
  #L3fb00c.  v0:= `@@n.b.a.s.c.U` @type ^`n.b.a.g` @kind object;
  #L3fb010.  v7.`n.b.a.s.a$a.g` @type ^`n.b.a.g` := v0 @kind object;
  #L3fb014.  v0:= `@@n.b.a.s.c.V` @type ^`n.b.a.c` @kind object;
  #L3fb018.  v7.`n.b.a.s.a$a.m` @type ^`n.b.a.c` := v0 @kind object;
  #L3fb01c.  v0:= `@@n.b.a.s.c.W` @type ^`n.b.a.c` @kind object;
  #L3fb020.  v7.`n.b.a.s.a$a.n` @type ^`n.b.a.c` := v0 @kind object;
  #L3fb024.  v0:= `@@n.b.a.s.c.X` @type ^`n.b.a.c` @kind object;
  #L3fb028.  v7.`n.b.a.s.a$a.o` @type ^`n.b.a.c` := v0 @kind object;
  #L3fb02c.  v0:= `@@n.b.a.s.c.Y` @type ^`n.b.a.c` @kind object;
  #L3fb030.  v7.`n.b.a.s.a$a.p` @type ^`n.b.a.c` := v0 @kind object;
  #L3fb034.  v0:= `@@n.b.a.s.c.Z` @type ^`n.b.a.c` @kind object;
  #L3fb038.  v7.`n.b.a.s.a$a.q` @type ^`n.b.a.c` := v0 @kind object;
  #L3fb03c.  v0:= `@@n.b.a.s.c.a0` @type ^`n.b.a.c` @kind object;
  #L3fb040.  v7.`n.b.a.s.a$a.r` @type ^`n.b.a.c` := v0 @kind object;
  #L3fb044.  v0:= `@@n.b.a.s.c.b0` @type ^`n.b.a.c` @kind object;
  #L3fb048.  v7.`n.b.a.s.a$a.s` @type ^`n.b.a.c` := v0 @kind object;
  #L3fb04c.  v0:= `@@n.b.a.s.c.c0` @type ^`n.b.a.c` @kind object;
  #L3fb050.  v7.`n.b.a.s.a$a.u` @type ^`n.b.a.c` := v0 @kind object;
  #L3fb054.  v0:= `@@n.b.a.s.c.d0` @type ^`n.b.a.c` @kind object;
  #L3fb058.  v7.`n.b.a.s.a$a.t` @type ^`n.b.a.c` := v0 @kind object;
  #L3fb05c.  v0:= `@@n.b.a.s.c.e0` @type ^`n.b.a.c` @kind object;
  #L3fb060.  v7.`n.b.a.s.a$a.v` @type ^`n.b.a.c` := v0 @kind object;
  #L3fb064.  v0:= `@@n.b.a.s.c.f0` @type ^`n.b.a.c` @kind object;
  #L3fb068.  v7.`n.b.a.s.a$a.w` @type ^`n.b.a.c` := v0 @kind object;
  #L3fb06c.  v0:= new `n.b.a.s.j`;
  #L3fb070.  call `<init>`(v0, v6) @signature `Ln/b/a/s/j;.<init>:(Ln/b/a/s/c;)V` @kind direct;
  #L3fb076.  v7.`n.b.a.s.a$a.E` @type ^`n.b.a.c` := v0 @kind object;
  #L3fb07a.  v0:= new `n.b.a.s.o`;
  #L3fb07e.  v1:= v7.`n.b.a.s.a$a.E` @type ^`n.b.a.c` @kind object;
  #L3fb082.  call `<init>`(v0, v1, v6) @signature `Ln/b/a/s/o;.<init>:(Ln/b/a/c;Ln/b/a/s/c;)V` @kind direct;
  #L3fb088.  v7.`n.b.a.s.a$a.F` @type ^`n.b.a.c` := v0 @kind object;
  #L3fb08c.  v0:= new `n.b.a.t.j`;
  #L3fb090.  v1:= v7.`n.b.a.s.a$a.F` @type ^`n.b.a.c` @kind object;
  #L3fb094.  v2:= 99I;
  #L3fb098.  call `<init>`(v0, v1, v2) @signature `Ln/b/a/t/j;.<init>:(Ln/b/a/c;I)V` @kind direct;
  #L3fb09e.  v1:= new `n.b.a.t.f`;
  #L3fb0a2.  call temp:= `c`() @signature `Ln/b/a/d;.c:()Ln/b/a/d;` @kind static;
  #L3fb0a8.  v2:= temp @kind object;
  #L3fb0aa.  v3:= 100I;
  #L3fb0ae.  call `<init>`(v1, v0, v2, v3) @signature `Ln/b/a/t/f;.<init>:(Ln/b/a/c;Ln/b/a/d;I)V` @kind direct;
  #L3fb0b4.  v7.`n.b.a.s.a$a.H` @type ^`n.b.a.c` := v1 @kind object;
  #L3fb0b8.  v0:= v7.`n.b.a.s.a$a.H` @type ^`n.b.a.c` @kind object;
  #L3fb0bc.  call temp:= `a`(v0) @signature `Ln/b/a/c;.a:()Ln/b/a/g;` @kind virtual;
  #L3fb0c2.  v0:= temp @kind object;
  #L3fb0c4.  v7.`n.b.a.s.a$a.k` @type ^`n.b.a.g` := v0 @kind object;
  #L3fb0c8.  v0:= new `n.b.a.t.n`;
  #L3fb0cc.  v1:= v7.`n.b.a.s.a$a.H` @type ^`n.b.a.c` @kind object;
  #L3fb0d0.  v1:= (`n.b.a.t.f`) v1 @kind object;
  #L3fb0d4.  call `<init>`(v0, v1) @signature `Ln/b/a/t/n;.<init>:(Ln/b/a/t/f;)V` @kind direct;
  #L3fb0da.  v1:= new `n.b.a.t.j`;
  #L3fb0de.  call temp:= `x`() @signature `Ln/b/a/d;.x:()Ln/b/a/d;` @kind static;
  #L3fb0e4.  v2:= temp @kind object;
  #L3fb0e6.  v4:= 1I;
  #L3fb0e8.  call `<init>`(v1, v0, v2, v4) @signature `Ln/b/a/t/j;.<init>:(Ln/b/a/c;Ln/b/a/d;I)V` @kind direct;
  #L3fb0ee.  v7.`n.b.a.s.a$a.G` @type ^`n.b.a.c` := v1 @kind object;
  #L3fb0f2.  v0:= new `n.b.a.s.l`;
  #L3fb0f6.  call `<init>`(v0, v6) @signature `Ln/b/a/s/l;.<init>:(Ln/b/a/s/c;)V` @kind direct;
  #L3fb0fc.  v7.`n.b.a.s.a$a.I` @type ^`n.b.a.c` := v0 @kind object;
  #L3fb100.  v0:= new `n.b.a.s.k`;
  #L3fb104.  v1:= v7.`n.b.a.s.a$a.f` @type ^`n.b.a.g` @kind object;
  #L3fb108.  call `<init>`(v0, v6, v1) @signature `Ln/b/a/s/k;.<init>:(Ln/b/a/s/c;Ln/b/a/g;)V` @kind direct;
  #L3fb10e.  v7.`n.b.a.s.a$a.x` @type ^`n.b.a.c` := v0 @kind object;
  #L3fb112.  v0:= new `n.b.a.s.d`;
  #L3fb116.  v1:= v7.`n.b.a.s.a$a.f` @type ^`n.b.a.g` @kind object;
  #L3fb11a.  call `<init>`(v0, v6, v1) @signature `Ln/b/a/s/d;.<init>:(Ln/b/a/s/c;Ln/b/a/g;)V` @kind direct;
  #L3fb120.  v7.`n.b.a.s.a$a.y` @type ^`n.b.a.c` := v0 @kind object;
  #L3fb124.  v0:= new `n.b.a.s.e`;
  #L3fb128.  v1:= v7.`n.b.a.s.a$a.f` @type ^`n.b.a.g` @kind object;
  #L3fb12c.  call `<init>`(v0, v6, v1) @signature `Ln/b/a/s/e;.<init>:(Ln/b/a/s/c;Ln/b/a/g;)V` @kind direct;
  #L3fb132.  v7.`n.b.a.s.a$a.z` @type ^`n.b.a.c` := v0 @kind object;
  #L3fb136.  v0:= new `n.b.a.s.n`;
  #L3fb13a.  call `<init>`(v0, v6) @signature `Ln/b/a/s/n;.<init>:(Ln/b/a/s/c;)V` @kind direct;
  #L3fb140.  v7.`n.b.a.s.a$a.D` @type ^`n.b.a.c` := v0 @kind object;
  #L3fb144.  v0:= new `n.b.a.s.i`;
  #L3fb148.  call `<init>`(v0, v6) @signature `Ln/b/a/s/i;.<init>:(Ln/b/a/s/c;)V` @kind direct;
  #L3fb14e.  v7.`n.b.a.s.a$a.B` @type ^`n.b.a.c` := v0 @kind object;
  #L3fb152.  v0:= new `n.b.a.s.h`;
  #L3fb156.  v1:= v7.`n.b.a.s.a$a.g` @type ^`n.b.a.g` @kind object;
  #L3fb15a.  call `<init>`(v0, v6, v1) @signature `Ln/b/a/s/h;.<init>:(Ln/b/a/s/c;Ln/b/a/g;)V` @kind direct;
  #L3fb160.  v7.`n.b.a.s.a$a.A` @type ^`n.b.a.c` := v0 @kind object;
  #L3fb164.  v0:= new `n.b.a.t.n`;
  #L3fb168.  v1:= v7.`n.b.a.s.a$a.B` @type ^`n.b.a.c` @kind object;
  #L3fb16c.  v2:= v7.`n.b.a.s.a$a.k` @type ^`n.b.a.g` @kind object;
  #L3fb170.  call temp:= `v`() @signature `Ln/b/a/d;.v:()Ln/b/a/d;` @kind static;
  #L3fb176.  v5:= temp @kind object;
  #L3fb178.  call `<init>`(v0, v1, v2, v5, v3) @signature `Ln/b/a/t/n;.<init>:(Ln/b/a/c;Ln/b/a/g;Ln/b/a/d;I)V` @kind direct;
  #L3fb17e.  v1:= new `n.b.a.t.j`;
  #L3fb182.  call temp:= `v`() @signature `Ln/b/a/d;.v:()Ln/b/a/d;` @kind static;
  #L3fb188.  v2:= temp @kind object;
  #L3fb18a.  call `<init>`(v1, v0, v2, v4) @signature `Ln/b/a/t/j;.<init>:(Ln/b/a/c;Ln/b/a/d;I)V` @kind direct;
  #L3fb190.  v7.`n.b.a.s.a$a.C` @type ^`n.b.a.c` := v1 @kind object;
  #L3fb194.  v0:= v7.`n.b.a.s.a$a.E` @type ^`n.b.a.c` @kind object;
  #L3fb198.  call temp:= `a`(v0) @signature `Ln/b/a/c;.a:()Ln/b/a/g;` @kind virtual;
  #L3fb19e.  v0:= temp @kind object;
  #L3fb1a0.  v7.`n.b.a.s.a$a.j` @type ^`n.b.a.g` := v0 @kind object;
  #L3fb1a4.  v0:= v7.`n.b.a.s.a$a.D` @type ^`n.b.a.c` @kind object;
  #L3fb1a8.  call temp:= `a`(v0) @signature `Ln/b/a/c;.a:()Ln/b/a/g;` @kind virtual;
  #L3fb1ae.  v0:= temp @kind object;
  #L3fb1b0.  v7.`n.b.a.s.a$a.i` @type ^`n.b.a.g` := v0 @kind object;
  #L3fb1b4.  v0:= v7.`n.b.a.s.a$a.B` @type ^`n.b.a.c` @kind object;
  #L3fb1b8.  call temp:= `a`(v0) @signature `Ln/b/a/c;.a:()Ln/b/a/g;` @kind virtual;
  #L3fb1be.  v0:= temp @kind object;
  #L3fb1c0.  v7.`n.b.a.s.a$a.h` @type ^`n.b.a.g` := v0 @kind object;
  #L3fb1c4.  return @kind void;
}
procedure `int` `b`(`n.b.a.s.c` v0 @kind this, `int` v1 ) @signature `Ln/b/a/s/c;.b:(I)I` @AccessFlag  {
    temp;

  #L3fa8c0.  call temp:= `f`(v0, v1) @signature `Ln/b/a/s/c;.f:(I)Z` @kind virtual;
  #L3fa8c6.  v1:= temp;
  #L3fa8c8.  if v1 == 0 then goto L3fa8d2;
  #L3fa8cc.  v1:= 366I;
  #L3fa8d0.  goto L3fa8d6;
  #L3fa8d2.  v1:= 365I;
  #L3fa8d6.  return v1;
}
procedure `int` `b`(`n.b.a.s.c` v7 @kind this, `long` v8 ) @signature `Ln/b/a/s/c;.b:(J)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fa7b0.  v0:= 7L;
  #L3fa7b4.  v2:= 86400000L;
  #L3fa7ba.  v4:= 0L;
  #L3fa7be.  v6:= lcmp(v8, v4);
  #L3fa7c2.  if v6 < 0 then goto L3fa7ca;
  #L3fa7c6.  v8:= v8 / v2 @kind long;
  #L3fa7c8.  goto L3fa7f0;
  #L3fa7ca.  v4:= 86399999L;
  #L3fa7d0.  v8:= v8 - v4 @kind long;
  #L3fa7d2.  v8:= v8 / v2 @kind long;
  #L3fa7d4.  v2:= -3L;
  #L3fa7d8.  v4:= lcmp(v8, v2);
  #L3fa7dc.  if v4 >= 0 then goto L3fa7f0;
  #L3fa7e0.  v2:= 4L;
  #L3fa7e4.  v8:= v8 + v2 @kind long;
  #L3fa7e6.  v8:= v8 %% v0 @kind long;
  #L3fa7e8.  v9:= (`int`) v8 @kind l2i;
  #L3fa7ea.  v9:= v9 + 7;
  #L3fa7ee.  return v9;
  #L3fa7f0.  v2:= 3L;
  #L3fa7f4.  v8:= v8 + v2 @kind long;
  #L3fa7f6.  v8:= v8 %% v0 @kind long;
  #L3fa7f8.  v9:= (`int`) v8 @kind l2i;
  #L3fa7fa.  v9:= v9 + 1;
  #L3fa7fe.  return v9;
}
procedure `int` `b`(`n.b.a.s.c` v2 @kind this, `long` v3 , `int` v5 ) @signature `Ln/b/a/s/c;.b:(JI)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3fa834.  call temp:= `e`(v2, v5) @signature `Ln/b/a/s/c;.e:(I)J` @kind virtual;
  #L3fa83a.  v0:= temp @kind wide;
  #L3fa83c.  v3:= v3 - v0 @kind long;
  #L3fa83e.  v0:= 86400000L;
  #L3fa844.  v3:= v3 / v0 @kind long;
  #L3fa846.  v4:= (`int`) v3 @kind l2i;
  #L3fa848.  v4:= v4 + 1;
  #L3fa84c.  return v4;
}
procedure `long` `b`(`int` v0 , `int` v1 ) @signature `Ln/b/a/s/c;.b:(II)J` @AccessFlag ABSTRACT {

  # return;
}
procedure `int` `c`(`n.b.a.s.c` v1 @kind this, `long` v2 ) @signature `Ln/b/a/s/c;.c:(J)I` @AccessFlag  {
    temp;
    v0;

  #L3fa810.  call temp:= `i`(v1, v2) @signature `Ln/b/a/s/c;.i:(J)I` @kind virtual;
  #L3fa816.  v0:= temp;
  #L3fa818.  call temp:= `b`(v1, v2, v0) @signature `Ln/b/a/s/c;.b:(JI)I` @kind virtual;
  #L3fa81e.  v2:= temp;
  #L3fa820.  return v2;
}
procedure `int` `c`(`n.b.a.s.c` v0 @kind this, `long` v1 , `int` v3 ) @signature `Ln/b/a/s/c;.c:(JI)I` @AccessFlag  {
    temp;

  #L3fa8a4.  call temp:= `d`(v0, v1) @signature `Ln/b/a/s/c;.d:(J)I` @kind virtual;
  #L3fa8aa.  v1:= temp;
  #L3fa8ac.  return v1;
}
procedure `long` `c`(`n.b.a.s.c` v7 @kind this, `int` v8 ) @signature `Ln/b/a/s/c;.c:(I)J` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fac18.  call temp:= `e`(v7, v8) @signature `Ln/b/a/s/c;.e:(I)J` @kind virtual;
  #L3fac1e.  v0:= temp @kind wide;
  #L3fac20.  call temp:= `b`(v7, v0) @signature `Ln/b/a/s/c;.b:(J)I` @kind virtual;
  #L3fac26.  v8:= temp;
  #L3fac28.  v2:= v7.`n.b.a.s.c.N` @type ^`int`;
  #L3fac2c.  v2:= v2 - 8;
  #L3fac30.  v3:= 86400000L;
  #L3fac36.  if v8 <= v2 then goto L3fac48;
  #L3fac3a.  v8:= v8 - 8;
  #L3fac3e.  v5:= (`long`) v8 @kind i2l;
  #L3fac40.  v5:= v5 * v3 @kind long;
  #L3fac44.  v0:= v0 + v5 @kind long;
  #L3fac46.  return v0 @kind wide;
  #L3fac48.  v8:= v8 + -1;
  #L3fac4c.  v5:= (`long`) v8 @kind i2l;
  #L3fac4e.  v5:= v5 * v3 @kind long;
  #L3fac52.  v0:= v0 - v5 @kind long;
  #L3fac54.  return v0 @kind wide;
}
procedure `long` `c`(`n.b.a.s.c` v2 @kind this, `int` v3 , `int` v4 ) @signature `Ln/b/a/s/c;.c:(II)J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3facc0.  call temp:= `e`(v2, v3) @signature `Ln/b/a/s/c;.e:(I)J` @kind virtual;
  #L3facc6.  v0:= temp @kind wide;
  #L3facc8.  call temp:= `b`(v2, v3, v4) @signature `Ln/b/a/s/c;.b:(II)J` @kind virtual;
  #L3facce.  v3:= temp @kind wide;
  #L3facd0.  v0:= v0 + v3 @kind long;
  #L3facd2.  return v0 @kind wide;
}
procedure `int` `d`(`n.b.a.s.c` v4 @kind this, `int` v5 ) @signature `Ln/b/a/s/c;.d:(I)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3faa08.  call temp:= `c`(v4, v5) @signature `Ln/b/a/s/c;.c:(I)J` @kind virtual;
  #L3faa0e.  v0:= temp @kind wide;
  #L3faa10.  v5:= v5 + 1;
  #L3faa14.  call temp:= `c`(v4, v5) @signature `Ln/b/a/s/c;.c:(I)J` @kind virtual;
  #L3faa1a.  v2:= temp @kind wide;
  #L3faa1c.  v2:= v2 - v0 @kind long;
  #L3faa1e.  v0:= 604800000L;
  #L3faa24.  v2:= v2 / v0 @kind long;
  #L3faa26.  v5:= (`int`) v2 @kind l2i;
  #L3faa28.  return v5;
}
procedure `int` `d`(`n.b.a.s.c` v1 @kind this, `long` v2 ) @signature `Ln/b/a/s/c;.d:(J)I` @AccessFlag  {
    temp;
    v0;

  #L3fa878.  call temp:= `i`(v1, v2) @signature `Ln/b/a/s/c;.i:(J)I` @kind virtual;
  #L3fa87e.  v0:= temp;
  #L3fa880.  call temp:= `d`(v1, v2, v0) @signature `Ln/b/a/s/c;.d:(JI)I` @kind virtual;
  #L3fa886.  v2:= temp;
  #L3fa888.  call temp:= `a`(v1, v0, v2) @signature `Ln/b/a/s/c;.a:(II)I` @kind virtual;
  #L3fa88e.  v2:= temp;
  #L3fa890.  return v2;
}
procedure `int` `d`(`long` v0 , `int` v2 ) @signature `Ln/b/a/s/c;.d:(JI)I` @AccessFlag ABSTRACT {

  # return;
}
procedure `int` `e`(`n.b.a.s.c` v5 @kind this, `long` v6 ) @signature `Ln/b/a/s/c;.e:(J)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3fa918.  v0:= 86400000L;
  #L3fa91e.  v2:= 0L;
  #L3fa922.  v4:= lcmp(v6, v2);
  #L3fa926.  if v4 < 0 then goto L3fa930;
  #L3fa92a.  v6:= v6 %% v0 @kind long;
  #L3fa92c.  v7:= (`int`) v6 @kind l2i;
  #L3fa92e.  return v7;
  #L3fa930.  v2:= 86399999I;
  #L3fa936.  v3:= 1L;
  #L3fa93a.  v6:= v6 + v3 @kind long;
  #L3fa93c.  v6:= v6 %% v0 @kind long;
  #L3fa93e.  v7:= (`int`) v6 @kind l2i;
  #L3fa940.  v7:= v7 + v2 @kind int;
  #L3fa942.  return v7;
}
procedure `int` `e`(`n.b.a.s.c` v5 @kind this, `long` v6 , `int` v8 ) @signature `Ln/b/a/s/c;.e:(JI)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3fa9b4.  call temp:= `c`(v5, v8) @signature `Ln/b/a/s/c;.c:(I)J` @kind virtual;
  #L3fa9ba.  v0:= temp @kind wide;
  #L3fa9bc.  v2:= 1I;
  #L3fa9be.  v3:= lcmp(v6, v0);
  #L3fa9c2.  if v3 >= 0 then goto L3fa9d2;
  #L3fa9c6.  v8:= v8 - v2 @kind int;
  #L3fa9c8.  call temp:= `d`(v5, v8) @signature `Ln/b/a/s/c;.d:(I)I` @kind virtual;
  #L3fa9ce.  v6:= temp;
  #L3fa9d0.  return v6;
  #L3fa9d2.  v8:= v8 + v2 @kind int;
  #L3fa9d4.  call temp:= `c`(v5, v8) @signature `Ln/b/a/s/c;.c:(I)J` @kind virtual;
  #L3fa9da.  v3:= temp @kind wide;
  #L3fa9dc.  v8:= lcmp(v6, v3);
  #L3fa9e0.  if v8 < 0 then goto L3fa9e6;
  #L3fa9e4.  return v2;
  #L3fa9e6.  v6:= v6 - v0 @kind long;
  #L3fa9e8.  v0:= 604800000L;
  #L3fa9ee.  v6:= v6 / v0 @kind long;
  #L3fa9f0.  v7:= (`int`) v6 @kind l2i;
  #L3fa9f2.  v7:= v7 + v2 @kind int;
  #L3fa9f4.  return v7;
}
procedure `long` `e`(`n.b.a.s.c` v2 @kind this, `int` v3 ) @signature `Ln/b/a/s/c;.e:(I)J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3fac68.  call temp:= `g`(v2, v3) @signature `Ln/b/a/s/c;.g:(I)Ln/b/a/s/c$b;` @kind direct;
  #L3fac6e.  v3:= temp @kind object;
  #L3fac70.  v0:= v3.`n.b.a.s.c$b.b` @type ^`long` @kind wide;
  #L3fac74.  return v0 @kind wide;
}
procedure `boolean` `equals`(`n.b.a.s.c` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Ln/b/a/s/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fa6a8.  v0:= 1I;
  #L3fa6aa.  if v4 != v5 then goto L3fa6b0;
  #L3fa6ae.  return v0;
  #L3fa6b0.  v1:= 0I;
  #L3fa6b2.  if v5 == 0 then goto L3fa704;
  #L3fa6b6.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3fa6bc.  v2:= temp @kind object;
  #L3fa6be.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3fa6c4.  v3:= temp @kind object;
  #L3fa6c6.  if v2 != v3 then goto L3fa704;
  #L3fa6ca.  v5:= (`n.b.a.s.c`) v5 @kind object;
  #L3fa6ce.  call temp:= `W`(v4) @signature `Ln/b/a/s/c;.W:()I` @kind virtual;
  #L3fa6d4.  v2:= temp;
  #L3fa6d6.  call temp:= `W`(v5) @signature `Ln/b/a/s/c;.W:()I` @kind virtual;
  #L3fa6dc.  v3:= temp;
  #L3fa6de.  if v2 != v3 then goto L3fa700;
  #L3fa6e2.  call temp:= `k`(v4) @signature `Ln/b/a/s/c;.k:()Ln/b/a/f;` @kind virtual;
  #L3fa6e8.  v2:= temp @kind object;
  #L3fa6ea.  call temp:= `k`(v5) @signature `Ln/b/a/s/c;.k:()Ln/b/a/f;` @kind virtual;
  #L3fa6f0.  v5:= temp @kind object;
  #L3fa6f2.  call temp:= `equals`(v2, v5) @signature `Ln/b/a/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fa6f8.  v5:= temp;
  #L3fa6fa.  if v5 == 0 then goto L3fa700;
  #L3fa6fe.  goto L3fa702;
  #L3fa700.  v0:= 0I;
  #L3fa702.  return v0;
  #L3fa704.  return v1;
}
procedure `int` `f`(`n.b.a.s.c` v1 @kind this, `long` v2 ) @signature `Ln/b/a/s/c;.f:(J)I` @AccessFlag  {
    temp;
    v0;

  #L3fa96c.  call temp:= `i`(v1, v2) @signature `Ln/b/a/s/c;.i:(J)I` @kind virtual;
  #L3fa972.  v0:= temp;
  #L3fa974.  call temp:= `d`(v1, v2, v0) @signature `Ln/b/a/s/c;.d:(JI)I` @kind virtual;
  #L3fa97a.  v2:= temp;
  #L3fa97c.  return v2;
}
procedure `long` `f`(`long` v0 , `int` v2 ) @signature `Ln/b/a/s/c;.f:(JI)J` @AccessFlag ABSTRACT {

  # return;
}
procedure `boolean` `f`(`int` v0 ) @signature `Ln/b/a/s/c;.f:(I)Z` @AccessFlag ABSTRACT {

  # return;
}
procedure `int` `g`(`n.b.a.s.c` v1 @kind this, `long` v2 ) @signature `Ln/b/a/s/c;.g:(J)I` @AccessFlag  {
    temp;
    v0;

  #L3fa990.  call temp:= `i`(v1, v2) @signature `Ln/b/a/s/c;.i:(J)I` @kind virtual;
  #L3fa996.  v0:= temp;
  #L3fa998.  call temp:= `e`(v1, v2, v0) @signature `Ln/b/a/s/c;.e:(JI)I` @kind virtual;
  #L3fa99e.  v2:= temp;
  #L3fa9a0.  return v2;
}
procedure `int` `h`(`n.b.a.s.c` v3 @kind this, `long` v4 ) @signature `Ln/b/a/s/c;.h:(J)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3faa3c.  call temp:= `i`(v3, v4) @signature `Ln/b/a/s/c;.i:(J)I` @kind virtual;
  #L3faa42.  v0:= temp;
  #L3faa44.  call temp:= `e`(v3, v4, v0) @signature `Ln/b/a/s/c;.e:(JI)I` @kind virtual;
  #L3faa4a.  v1:= temp;
  #L3faa4c.  v2:= 1I;
  #L3faa4e.  if v1 != v2 then goto L3faa64;
  #L3faa52.  v0:= 604800000L;
  #L3faa58.  v4:= v4 + v0 @kind long;
  #L3faa5a.  call temp:= `i`(v3, v4) @signature `Ln/b/a/s/c;.i:(J)I` @kind virtual;
  #L3faa60.  v4:= temp;
  #L3faa62.  return v4;
  #L3faa64.  v2:= 51I;
  #L3faa68.  if v1 <= v2 then goto L3faa76;
  #L3faa6c.  v0:= 1209600000L;
  #L3faa72.  v4:= v4 - v0 @kind long;
  #L3faa74.  goto L3faa5a;
  #L3faa76.  return v0;
}
procedure `int` `hashCode`(`n.b.a.s.c` v2 @kind this) @signature `Ln/b/a/s/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fab1c.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3fab22.  v0:= temp @kind object;
  #L3fab24.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3fab2a.  v0:= temp @kind object;
  #L3fab2c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3fab32.  v0:= temp;
  #L3fab34.  v0:= v0 * 11;
  #L3fab38.  call temp:= `k`(v2) @signature `Ln/b/a/s/c;.k:()Ln/b/a/f;` @kind virtual;
  #L3fab3e.  v1:= temp @kind object;
  #L3fab40.  call temp:= `hashCode`(v1) @signature `Ln/b/a/f;.hashCode:()I` @kind virtual;
  #L3fab46.  v1:= temp;
  #L3fab48.  v0:= v0 + v1 @kind int;
  #L3fab4a.  call temp:= `W`(v2) @signature `Ln/b/a/s/c;.W:()I` @kind virtual;
  #L3fab50.  v1:= temp;
  #L3fab52.  v0:= v0 + v1 @kind int;
  #L3fab54.  return v0;
}
procedure `int` `i`(`n.b.a.s.c` v8 @kind this, `long` v9 ) @signature `Ln/b/a/s/c;.i:(J)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3faa88.  call temp:= `Q`(v8) @signature `Ln/b/a/s/c;.Q:()J` @kind virtual;
  #L3faa8e.  v0:= temp @kind wide;
  #L3faa90.  v2:= 1I;
  #L3faa92.  v2:= v9 ^> v2 @kind long;
  #L3faa96.  call temp:= `N`(v8) @signature `Ln/b/a/s/c;.N:()J` @kind virtual;
  #L3faa9c.  v4:= temp @kind wide;
  #L3faa9e.  v2:= v2 + v4 @kind long;
  #L3faaa0.  v4:= 0L;
  #L3faaa4.  v6:= lcmp(v2, v4);
  #L3faaa8.  if v6 >= 0 then goto L3faab4;
  #L3faaac.  v2:= v2 - v0 @kind long;
  #L3faaae.  v6:= 1L;
  #L3faab2.  v2:= v2 + v6 @kind long;
  #L3faab4.  v2:= v2 / v0 @kind long;
  #L3faab6.  v0:= (`int`) v2 @kind l2i;
  #L3faab8.  call temp:= `e`(v8, v0) @signature `Ln/b/a/s/c;.e:(I)J` @kind virtual;
  #L3faabe.  v1:= temp @kind wide;
  #L3faac0.  v6:= v9 - v1 @kind long;
  #L3faac4.  v3:= lcmp(v6, v4);
  #L3faac8.  if v3 >= 0 then goto L3faad2;
  #L3faacc.  v0:= v0 + -1;
  #L3faad0.  goto L3fab08;
  #L3faad2.  v3:= 31536000000L;
  #L3faadc.  v5:= lcmp(v6, v3);
  #L3faae0.  if v5 < 0 then goto L3fab08;
  #L3faae4.  call temp:= `f`(v8, v0) @signature `Ln/b/a/s/c;.f:(I)Z` @kind virtual;
  #L3faaea.  v5:= temp;
  #L3faaec.  if v5 == 0 then goto L3faafa;
  #L3faaf0.  v3:= 31622400000L;
  #L3faafa.  v1:= v1 + v3 @kind long;
  #L3faafc.  v3:= lcmp(v1, v9);
  #L3fab00.  if v3 > 0 then goto L3fab08;
  #L3fab04.  v0:= v0 + 1;
  #L3fab08.  return v0;
}
procedure `boolean` `j`(`n.b.a.s.c` v0 @kind this, `long` v1 ) @signature `Ln/b/a/s/c;.j:(J)Z` @AccessFlag  {
    temp;

  #L3fa718.  v1:= 0I;
  #L3fa71a.  return v1;
}
procedure `n.b.a.f` `k`(`n.b.a.s.c` v1 @kind this) @signature `Ln/b/a/s/c;.k:()Ln/b/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3face4.  call temp:= `L`(v1) @signature `Ln/b/a/s/a;.L:()Ln/b/a/a;` @kind virtual;
  #L3facea.  v0:= temp @kind object;
  #L3facec.  if v0 == 0 then goto L3facfa;
  #L3facf0.  call temp:= `k`(v0) @signature `Ln/b/a/a;.k:()Ln/b/a/f;` @kind virtual;
  #L3facf6.  v0:= temp @kind object;
  #L3facf8.  return v0 @kind object;
  #L3facfa.  v0:= `@@n.b.a.f.c` @type ^`n.b.a.f` @kind object;
  #L3facfe.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`n.b.a.s.c` v3 @kind this) @signature `Ln/b/a/s/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3fab68.  v0:= new `java.lang.StringBuilder`;
  #L3fab6c.  v1:= 60I;
  #L3fab70.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L3fab76.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3fab7c.  v1:= temp @kind object;
  #L3fab7e.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3fab84.  v1:= temp @kind object;
  #L3fab86.  v2:= 46I;
  #L3fab8a.  call temp:= `lastIndexOf`(v1, v2) @signature `Ljava/lang/String;.lastIndexOf:(I)I` @kind virtual;
  #L3fab90.  v2:= temp;
  #L3fab92.  if v2 < 0 then goto L3faba2;
  #L3fab96.  v2:= v2 + 1;
  #L3fab9a.  call temp:= `substring`(v1, v2) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L3faba0.  v1:= temp @kind object;
  #L3faba2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3faba8.  v1:= 91I;
  #L3fabac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fabb2.  call temp:= `k`(v3) @signature `Ln/b/a/s/c;.k:()Ln/b/a/f;` @kind virtual;
  #L3fabb8.  v1:= temp @kind object;
  #L3fabba.  if v1 == 0 then goto L3fabcc;
  #L3fabbe.  call temp:= `a`(v1) @signature `Ln/b/a/f;.a:()Ljava/lang/String;` @kind virtual;
  #L3fabc4.  v1:= temp @kind object;
  #L3fabc6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fabcc.  call temp:= `W`(v3) @signature `Ln/b/a/s/c;.W:()I` @kind virtual;
  #L3fabd2.  v1:= temp;
  #L3fabd4.  v2:= 4I;
  #L3fabd6.  if v1 == v2 then goto L3fabf2;
  #L3fabda.  v1:= ",mdfw=" @kind object;
  #L3fabde.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fabe4.  call temp:= `W`(v3) @signature `Ln/b/a/s/c;.W:()I` @kind virtual;
  #L3fabea.  v1:= temp;
  #L3fabec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fabf2.  v1:= 93I;
  #L3fabf6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fabfc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fac02.  v0:= temp @kind object;
  #L3fac04.  return v0 @kind object;
}
