record `n.b.a.s.s$a` @kind class @AccessFlag FINAL extends `n.b.a.t.b` @kind class {
  `n.b.a.c` `n.b.a.s.s$a.b` @AccessFlag FINAL;
  `n.b.a.f` `n.b.a.s.s$a.c` @AccessFlag FINAL;
  `n.b.a.g` `n.b.a.s.s$a.d` @AccessFlag FINAL;
  `boolean` `n.b.a.s.s$a.e` @AccessFlag FINAL;
  `n.b.a.g` `n.b.a.s.s$a.f` @AccessFlag FINAL;
  `n.b.a.g` `n.b.a.s.s$a.g` @AccessFlag FINAL;
}
procedure `void` `<init>`(`n.b.a.s.s$a` v1 @kind this, `n.b.a.c` v2 @kind object, `n.b.a.f` v3 @kind object, `n.b.a.g` v4 @kind object, `n.b.a.g` v5 @kind object, `n.b.a.g` v6 @kind object) @signature `Ln/b/a/s/s$a;.<init>:(Ln/b/a/c;Ln/b/a/f;Ln/b/a/g;Ln/b/a/g;Ln/b/a/g;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3fd960.  call temp:= `g`(v2) @signature `Ln/b/a/c;.g:()Ln/b/a/d;` @kind virtual;
  #L3fd966.  v0:= temp @kind object;
  #L3fd968.  call `<init>`(v1, v0) @signature `Ln/b/a/t/b;.<init>:(Ln/b/a/d;)V` @kind direct;
  #L3fd96e.  call temp:= `i`(v2) @signature `Ln/b/a/c;.i:()Z` @kind virtual;
  #L3fd974.  v0:= temp;
  #L3fd976.  if v0 == 0 then goto L3fd99c;
  #L3fd97a.  v1.`n.b.a.s.s$a.b` @type ^`n.b.a.c` := v2 @kind object;
  #L3fd97e.  v1.`n.b.a.s.s$a.c` @type ^`n.b.a.f` := v3 @kind object;
  #L3fd982.  v1.`n.b.a.s.s$a.d` @type ^`n.b.a.g` := v4 @kind object;
  #L3fd986.  call temp:= `a`(v4) @signature `Ln/b/a/s/s;.a:(Ln/b/a/g;)Z` @kind static;
  #L3fd98c.  v2:= temp;
  #L3fd98e.  v1.`n.b.a.s.s$a.e` @type ^`boolean` := v2 @kind boolean;
  #L3fd992.  v1.`n.b.a.s.s$a.f` @type ^`n.b.a.g` := v5 @kind object;
  #L3fd996.  v1.`n.b.a.s.s$a.g` @type ^`n.b.a.g` := v6 @kind object;
  #L3fd99a.  return @kind void;
  #L3fd99c.  v2:= new `java.lang.IllegalArgumentException`;
  #L3fd9a0.  call `<init>`(v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3fd9a6.  throw v2;
}
procedure `int` `j`(`n.b.a.s.s$a` v8 @kind this, `long` v9 ) @signature `Ln/b/a/s/s$a;.j:(J)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3fd5f0.  v0:= v8.`n.b.a.s.s$a.c` @type ^`n.b.a.f` @kind object;
  #L3fd5f4.  call temp:= `c`(v0, v9) @signature `Ln/b/a/f;.c:(J)I` @kind virtual;
  #L3fd5fa.  v0:= temp;
  #L3fd5fc.  v1:= (`long`) v0 @kind i2l;
  #L3fd5fe.  v3:= v9 + v1 @kind long;
  #L3fd602.  v3:= v3 ^~ v9 @kind long;
  #L3fd604.  v5:= 0L;
  #L3fd608.  v7:= lcmp(v3, v5);
  #L3fd60c.  if v7 >= 0 then goto L3fd62c;
  #L3fd610.  v9:= v9 ^~ v1 @kind long;
  #L3fd612.  v1:= lcmp(v9, v5);
  #L3fd616.  if v1 >= 0 then goto L3fd61c;
  #L3fd61a.  goto L3fd62c;
  #L3fd61c.  v9:= new `java.lang.ArithmeticException`;
  #L3fd620.  v10:= "Adding time zone offset caused overflow" @kind object;
  #L3fd624.  call `<init>`(v9, v10) @signature `Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fd62a.  throw v9;
  #L3fd62c.  return v0;
}
procedure `int` `a`(`n.b.a.s.s$a` v1 @kind this, `long` v2 ) @signature `Ln/b/a/s/s$a;.a:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd564.  v0:= v1.`n.b.a.s.s$a.c` @type ^`n.b.a.f` @kind object;
  #L3fd568.  call temp:= `a`(v0, v2) @signature `Ln/b/a/f;.a:(J)J` @kind virtual;
  #L3fd56e.  v2:= temp @kind wide;
  #L3fd570.  v0:= v1.`n.b.a.s.s$a.b` @type ^`n.b.a.c` @kind object;
  #L3fd574.  call temp:= `a`(v0, v2) @signature `Ln/b/a/c;.a:(J)I` @kind virtual;
  #L3fd57a.  v2:= temp;
  #L3fd57c.  return v2;
}
procedure `int` `a`(`n.b.a.s.s$a` v1 @kind this, `java.util.Locale` v2 @kind object) @signature `Ln/b/a/s/s$a;.a:(Ljava/util/Locale;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd590.  v0:= v1.`n.b.a.s.s$a.b` @type ^`n.b.a.c` @kind object;
  #L3fd594.  call temp:= `a`(v0, v2) @signature `Ln/b/a/c;.a:(Ljava/util/Locale;)I` @kind virtual;
  #L3fd59a.  v2:= temp;
  #L3fd59c.  return v2;
}
procedure `long` `a`(`n.b.a.s.s$a` v9 @kind this, `long` v10 , `int` v12 ) @signature `Ln/b/a/s/s$a;.a:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3fd704.  v0:= v9.`n.b.a.s.s$a.e` @type ^`boolean` @kind boolean;
  #L3fd708.  if v0 == 0 then goto L3fd728;
  #L3fd70c.  call temp:= `j`(v9, v10) @signature `Ln/b/a/s/s$a;.j:(J)I` @kind direct;
  #L3fd712.  v0:= temp;
  #L3fd714.  v1:= v9.`n.b.a.s.s$a.b` @type ^`n.b.a.c` @kind object;
  #L3fd718.  v2:= (`long`) v0 @kind i2l;
  #L3fd71a.  v10:= v10 + v2 @kind long;
  #L3fd71c.  call temp:= `a`(v1, v10, v12) @signature `Ln/b/a/c;.a:(JI)J` @kind virtual;
  #L3fd722.  v10:= temp @kind wide;
  #L3fd724.  v10:= v10 - v2 @kind long;
  #L3fd726.  return v10 @kind wide;
  #L3fd728.  v0:= v9.`n.b.a.s.s$a.c` @type ^`n.b.a.f` @kind object;
  #L3fd72c.  call temp:= `a`(v0, v10) @signature `Ln/b/a/f;.a:(J)J` @kind virtual;
  #L3fd732.  v0:= temp @kind wide;
  #L3fd734.  v2:= v9.`n.b.a.s.s$a.b` @type ^`n.b.a.c` @kind object;
  #L3fd738.  call temp:= `a`(v2, v0, v12) @signature `Ln/b/a/c;.a:(JI)J` @kind virtual;
  #L3fd73e.  v4:= temp @kind wide;
  #L3fd740.  v3:= v9.`n.b.a.s.s$a.c` @type ^`n.b.a.f` @kind object;
  #L3fd744.  v6:= 0I;
  #L3fd746.  v7:= v10 @kind wide;
  #L3fd748.  call temp:= `a`(v3, v4, v6, v7) @signature `Ln/b/a/f;.a:(JZJ)J` @kind virtual;
  #L3fd74e.  v10:= temp @kind wide;
  #L3fd750.  return v10 @kind wide;
}
procedure `long` `a`(`n.b.a.s.s$a` v9 @kind this, `long` v10 , `java.lang.String` v12 @kind object, `java.util.Locale` v13 @kind object) @signature `Ln/b/a/s/s$a;.a:(JLjava/lang/String;Ljava/util/Locale;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3fd8dc.  v0:= v9.`n.b.a.s.s$a.c` @type ^`n.b.a.f` @kind object;
  #L3fd8e0.  call temp:= `a`(v0, v10) @signature `Ln/b/a/f;.a:(J)J` @kind virtual;
  #L3fd8e6.  v0:= temp @kind wide;
  #L3fd8e8.  v2:= v9.`n.b.a.s.s$a.b` @type ^`n.b.a.c` @kind object;
  #L3fd8ec.  call temp:= `a`(v2, v0, v12, v13) @signature `Ln/b/a/c;.a:(JLjava/lang/String;Ljava/util/Locale;)J` @kind virtual;
  #L3fd8f2.  v4:= temp @kind wide;
  #L3fd8f4.  v3:= v9.`n.b.a.s.s$a.c` @type ^`n.b.a.f` @kind object;
  #L3fd8f8.  v6:= 0I;
  #L3fd8fa.  v7:= v10 @kind wide;
  #L3fd8fc.  call temp:= `a`(v3, v4, v6, v7) @signature `Ln/b/a/f;.a:(JZJ)J` @kind virtual;
  #L3fd902.  v10:= temp @kind wide;
  #L3fd904.  return v10 @kind wide;
}
procedure `java.lang.String` `a`(`n.b.a.s.s$a` v1 @kind this, `int` v2 , `java.util.Locale` v3 @kind object) @signature `Ln/b/a/s/s$a;.a:(ILjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd66c.  v0:= v1.`n.b.a.s.s$a.b` @type ^`n.b.a.c` @kind object;
  #L3fd670.  call temp:= `a`(v0, v2, v3) @signature `Ln/b/a/c;.a:(ILjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3fd676.  v2:= temp @kind object;
  #L3fd678.  return v2 @kind object;
}
procedure `java.lang.String` `a`(`n.b.a.s.s$a` v1 @kind this, `long` v2 , `java.util.Locale` v4 @kind object) @signature `Ln/b/a/s/s$a;.a:(JLjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd68c.  v0:= v1.`n.b.a.s.s$a.c` @type ^`n.b.a.f` @kind object;
  #L3fd690.  call temp:= `a`(v0, v2) @signature `Ln/b/a/f;.a:(J)J` @kind virtual;
  #L3fd696.  v2:= temp @kind wide;
  #L3fd698.  v0:= v1.`n.b.a.s.s$a.b` @type ^`n.b.a.c` @kind object;
  #L3fd69c.  call temp:= `a`(v0, v2, v4) @signature `Ln/b/a/c;.a:(JLjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3fd6a2.  v2:= temp @kind object;
  #L3fd6a4.  return v2 @kind object;
}
procedure `n.b.a.g` `a`(`n.b.a.s.s$a` v1 @kind this) @signature `Ln/b/a/s/s$a;.a:()Ln/b/a/g;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fd918.  v0:= v1.`n.b.a.s.s$a.d` @type ^`n.b.a.g` @kind object;
  #L3fd91c.  return v0 @kind object;
}
procedure `long` `b`(`n.b.a.s.s$a` v9 @kind this, `long` v10 , `int` v12 ) @signature `Ln/b/a/s/s$a;.b:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3fd850.  v0:= v9.`n.b.a.s.s$a.c` @type ^`n.b.a.f` @kind object;
  #L3fd854.  call temp:= `a`(v0, v10) @signature `Ln/b/a/f;.a:(J)J` @kind virtual;
  #L3fd85a.  v0:= temp @kind wide;
  #L3fd85c.  v2:= v9.`n.b.a.s.s$a.b` @type ^`n.b.a.c` @kind object;
  #L3fd860.  call temp:= `b`(v2, v0, v12) @signature `Ln/b/a/c;.b:(JI)J` @kind virtual;
  #L3fd866.  v0:= temp @kind wide;
  #L3fd868.  v3:= v9.`n.b.a.s.s$a.c` @type ^`n.b.a.f` @kind object;
  #L3fd86c.  v6:= 0I;
  #L3fd86e.  v4:= v0 @kind wide;
  #L3fd870.  v7:= v10 @kind wide;
  #L3fd872.  call temp:= `a`(v3, v4, v6, v7) @signature `Ln/b/a/f;.a:(JZJ)J` @kind virtual;
  #L3fd878.  v10:= temp @kind wide;
  #L3fd87a.  call temp:= `a`(v9, v10) @signature `Ln/b/a/s/s$a;.a:(J)I` @kind virtual;
  #L3fd880.  v2:= temp;
  #L3fd882.  if v2 != v12 then goto L3fd888;
  #L3fd886.  return v10 @kind wide;
  #L3fd888.  v10:= new `n.b.a.j`;
  #L3fd88c.  v11:= v9.`n.b.a.s.s$a.c` @type ^`n.b.a.f` @kind object;
  #L3fd890.  call temp:= `a`(v11) @signature `Ln/b/a/f;.a:()Ljava/lang/String;` @kind virtual;
  #L3fd896.  v11:= temp @kind object;
  #L3fd898.  call `<init>`(v10, v0, v11) @signature `Ln/b/a/j;.<init>:(JLjava/lang/String;)V` @kind direct;
  #L3fd89e.  v11:= new `n.b.a.i`;
  #L3fd8a2.  v0:= v9.`n.b.a.s.s$a.b` @type ^`n.b.a.c` @kind object;
  #L3fd8a6.  call temp:= `g`(v0) @signature `Ln/b/a/c;.g:()Ln/b/a/d;` @kind virtual;
  #L3fd8ac.  v0:= temp @kind object;
  #L3fd8ae.  call temp:= `valueOf`(v12) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3fd8b4.  v12:= temp @kind object;
  #L3fd8b6.  call temp:= `getMessage`(v10) @signature `Ljava/lang/IllegalArgumentException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3fd8bc.  v1:= temp @kind object;
  #L3fd8be.  call `<init>`(v11, v0, v12, v1) @signature `Ln/b/a/i;.<init>:(Ln/b/a/d;Ljava/lang/Number;Ljava/lang/String;)V` @kind direct;
  #L3fd8c4.  call temp:= `initCause`(v11, v10) @signature `Ljava/lang/IllegalArgumentException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L3fd8ca.  throw v11;
}
procedure `java.lang.String` `b`(`n.b.a.s.s$a` v1 @kind this, `int` v2 , `java.util.Locale` v3 @kind object) @signature `Ln/b/a/s/s$a;.b:(ILjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd6b8.  v0:= v1.`n.b.a.s.s$a.b` @type ^`n.b.a.c` @kind object;
  #L3fd6bc.  call temp:= `b`(v0, v2, v3) @signature `Ln/b/a/c;.b:(ILjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3fd6c2.  v2:= temp @kind object;
  #L3fd6c4.  return v2 @kind object;
}
procedure `java.lang.String` `b`(`n.b.a.s.s$a` v1 @kind this, `long` v2 , `java.util.Locale` v4 @kind object) @signature `Ln/b/a/s/s$a;.b:(JLjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd6d8.  v0:= v1.`n.b.a.s.s$a.c` @type ^`n.b.a.f` @kind object;
  #L3fd6dc.  call temp:= `a`(v0, v2) @signature `Ln/b/a/f;.a:(J)J` @kind virtual;
  #L3fd6e2.  v2:= temp @kind wide;
  #L3fd6e4.  v0:= v1.`n.b.a.s.s$a.b` @type ^`n.b.a.c` @kind object;
  #L3fd6e8.  call temp:= `b`(v0, v2, v4) @signature `Ln/b/a/c;.b:(JLjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3fd6ee.  v2:= temp @kind object;
  #L3fd6f0.  return v2 @kind object;
}
procedure `n.b.a.g` `b`(`n.b.a.s.s$a` v1 @kind this) @signature `Ln/b/a/s/s$a;.b:()Ln/b/a/g;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fd930.  v0:= v1.`n.b.a.s.s$a.g` @type ^`n.b.a.g` @kind object;
  #L3fd934.  return v0 @kind object;
}
procedure `boolean` `b`(`n.b.a.s.s$a` v1 @kind this, `long` v2 ) @signature `Ln/b/a/s/s$a;.b:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd518.  v0:= v1.`n.b.a.s.s$a.c` @type ^`n.b.a.f` @kind object;
  #L3fd51c.  call temp:= `a`(v0, v2) @signature `Ln/b/a/f;.a:(J)J` @kind virtual;
  #L3fd522.  v2:= temp @kind wide;
  #L3fd524.  v0:= v1.`n.b.a.s.s$a.b` @type ^`n.b.a.c` @kind object;
  #L3fd528.  call temp:= `b`(v0, v2) @signature `Ln/b/a/c;.b:(J)Z` @kind virtual;
  #L3fd52e.  v2:= temp;
  #L3fd530.  return v2;
}
procedure `int` `c`(`n.b.a.s.s$a` v1 @kind this) @signature `Ln/b/a/s/s$a;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd5b0.  v0:= v1.`n.b.a.s.s$a.b` @type ^`n.b.a.c` @kind object;
  #L3fd5b4.  call temp:= `c`(v0) @signature `Ln/b/a/c;.c:()I` @kind virtual;
  #L3fd5ba.  v0:= temp;
  #L3fd5bc.  return v0;
}
procedure `long` `c`(`n.b.a.s.s$a` v1 @kind this, `long` v2 ) @signature `Ln/b/a/s/s$a;.c:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd764.  v0:= v1.`n.b.a.s.s$a.c` @type ^`n.b.a.f` @kind object;
  #L3fd768.  call temp:= `a`(v0, v2) @signature `Ln/b/a/f;.a:(J)J` @kind virtual;
  #L3fd76e.  v2:= temp @kind wide;
  #L3fd770.  v0:= v1.`n.b.a.s.s$a.b` @type ^`n.b.a.c` @kind object;
  #L3fd774.  call temp:= `c`(v0, v2) @signature `Ln/b/a/c;.c:(J)J` @kind virtual;
  #L3fd77a.  v2:= temp @kind wide;
  #L3fd77c.  return v2 @kind wide;
}
procedure `int` `d`(`n.b.a.s.s$a` v1 @kind this) @signature `Ln/b/a/s/s$a;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd5d0.  v0:= v1.`n.b.a.s.s$a.b` @type ^`n.b.a.c` @kind object;
  #L3fd5d4.  call temp:= `d`(v0) @signature `Ln/b/a/c;.d:()I` @kind virtual;
  #L3fd5da.  v0:= temp;
  #L3fd5dc.  return v0;
}
procedure `long` `d`(`n.b.a.s.s$a` v9 @kind this, `long` v10 ) @signature `Ln/b/a/s/s$a;.d:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3fd790.  v0:= v9.`n.b.a.s.s$a.e` @type ^`boolean` @kind boolean;
  #L3fd794.  if v0 == 0 then goto L3fd7b4;
  #L3fd798.  call temp:= `j`(v9, v10) @signature `Ln/b/a/s/s$a;.j:(J)I` @kind direct;
  #L3fd79e.  v0:= temp;
  #L3fd7a0.  v1:= v9.`n.b.a.s.s$a.b` @type ^`n.b.a.c` @kind object;
  #L3fd7a4.  v2:= (`long`) v0 @kind i2l;
  #L3fd7a6.  v10:= v10 + v2 @kind long;
  #L3fd7a8.  call temp:= `d`(v1, v10) @signature `Ln/b/a/c;.d:(J)J` @kind virtual;
  #L3fd7ae.  v10:= temp @kind wide;
  #L3fd7b0.  v10:= v10 - v2 @kind long;
  #L3fd7b2.  return v10 @kind wide;
  #L3fd7b4.  v0:= v9.`n.b.a.s.s$a.c` @type ^`n.b.a.f` @kind object;
  #L3fd7b8.  call temp:= `a`(v0, v10) @signature `Ln/b/a/f;.a:(J)J` @kind virtual;
  #L3fd7be.  v0:= temp @kind wide;
  #L3fd7c0.  v2:= v9.`n.b.a.s.s$a.b` @type ^`n.b.a.c` @kind object;
  #L3fd7c4.  call temp:= `d`(v2, v0) @signature `Ln/b/a/c;.d:(J)J` @kind virtual;
  #L3fd7ca.  v4:= temp @kind wide;
  #L3fd7cc.  v3:= v9.`n.b.a.s.s$a.c` @type ^`n.b.a.f` @kind object;
  #L3fd7d0.  v6:= 0I;
  #L3fd7d2.  v7:= v10 @kind wide;
  #L3fd7d4.  call temp:= `a`(v3, v4, v6, v7) @signature `Ln/b/a/f;.a:(JZJ)J` @kind virtual;
  #L3fd7da.  v10:= temp @kind wide;
  #L3fd7dc.  return v10 @kind wide;
}
procedure `long` `e`(`n.b.a.s.s$a` v9 @kind this, `long` v10 ) @signature `Ln/b/a/s/s$a;.e:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3fd7f0.  v0:= v9.`n.b.a.s.s$a.e` @type ^`boolean` @kind boolean;
  #L3fd7f4.  if v0 == 0 then goto L3fd814;
  #L3fd7f8.  call temp:= `j`(v9, v10) @signature `Ln/b/a/s/s$a;.j:(J)I` @kind direct;
  #L3fd7fe.  v0:= temp;
  #L3fd800.  v1:= v9.`n.b.a.s.s$a.b` @type ^`n.b.a.c` @kind object;
  #L3fd804.  v2:= (`long`) v0 @kind i2l;
  #L3fd806.  v10:= v10 + v2 @kind long;
  #L3fd808.  call temp:= `e`(v1, v10) @signature `Ln/b/a/c;.e:(J)J` @kind virtual;
  #L3fd80e.  v10:= temp @kind wide;
  #L3fd810.  v10:= v10 - v2 @kind long;
  #L3fd812.  return v10 @kind wide;
  #L3fd814.  v0:= v9.`n.b.a.s.s$a.c` @type ^`n.b.a.f` @kind object;
  #L3fd818.  call temp:= `a`(v0, v10) @signature `Ln/b/a/f;.a:(J)J` @kind virtual;
  #L3fd81e.  v0:= temp @kind wide;
  #L3fd820.  v2:= v9.`n.b.a.s.s$a.b` @type ^`n.b.a.c` @kind object;
  #L3fd824.  call temp:= `e`(v2, v0) @signature `Ln/b/a/c;.e:(J)J` @kind virtual;
  #L3fd82a.  v4:= temp @kind wide;
  #L3fd82c.  v3:= v9.`n.b.a.s.s$a.c` @type ^`n.b.a.f` @kind object;
  #L3fd830.  v6:= 0I;
  #L3fd832.  v7:= v10 @kind wide;
  #L3fd834.  call temp:= `a`(v3, v4, v6, v7) @signature `Ln/b/a/f;.a:(JZJ)J` @kind virtual;
  #L3fd83a.  v10:= temp @kind wide;
  #L3fd83c.  return v10 @kind wide;
}
procedure `boolean` `equals`(`n.b.a.s.s$a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Ln/b/a/s/s$a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fd498.  v0:= 1I;
  #L3fd49a.  if v4 != v5 then goto L3fd4a0;
  #L3fd49e.  return v0;
  #L3fd4a0.  v1:= instanceof @variable v5 @type ^`n.b.a.s.s$a` @kind boolean;
  #L3fd4a4.  v2:= 0I;
  #L3fd4a6.  if v1 == 0 then goto L3fd504;
  #L3fd4aa.  v5:= (`n.b.a.s.s$a`) v5 @kind object;
  #L3fd4ae.  v1:= v4.`n.b.a.s.s$a.b` @type ^`n.b.a.c` @kind object;
  #L3fd4b2.  v3:= v5.`n.b.a.s.s$a.b` @type ^`n.b.a.c` @kind object;
  #L3fd4b6.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fd4bc.  v1:= temp;
  #L3fd4be.  if v1 == 0 then goto L3fd500;
  #L3fd4c2.  v1:= v4.`n.b.a.s.s$a.c` @type ^`n.b.a.f` @kind object;
  #L3fd4c6.  v3:= v5.`n.b.a.s.s$a.c` @type ^`n.b.a.f` @kind object;
  #L3fd4ca.  call temp:= `equals`(v1, v3) @signature `Ln/b/a/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fd4d0.  v1:= temp;
  #L3fd4d2.  if v1 == 0 then goto L3fd500;
  #L3fd4d6.  v1:= v4.`n.b.a.s.s$a.d` @type ^`n.b.a.g` @kind object;
  #L3fd4da.  v3:= v5.`n.b.a.s.s$a.d` @type ^`n.b.a.g` @kind object;
  #L3fd4de.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fd4e4.  v1:= temp;
  #L3fd4e6.  if v1 == 0 then goto L3fd500;
  #L3fd4ea.  v1:= v4.`n.b.a.s.s$a.f` @type ^`n.b.a.g` @kind object;
  #L3fd4ee.  v5:= v5.`n.b.a.s.s$a.f` @type ^`n.b.a.g` @kind object;
  #L3fd4f2.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fd4f8.  v5:= temp;
  #L3fd4fa.  if v5 == 0 then goto L3fd500;
  #L3fd4fe.  goto L3fd502;
  #L3fd500.  v0:= 0I;
  #L3fd502.  return v0;
  #L3fd504.  return v2;
}
procedure `n.b.a.g` `f`(`n.b.a.s.s$a` v1 @kind this) @signature `Ln/b/a/s/s$a;.f:()Ln/b/a/g;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3fd948.  v0:= v1.`n.b.a.s.s$a.f` @type ^`n.b.a.g` @kind object;
  #L3fd94c.  return v0 @kind object;
}
procedure `boolean` `h`(`n.b.a.s.s$a` v1 @kind this) @signature `Ln/b/a/s/s$a;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd544.  v0:= v1.`n.b.a.s.s$a.b` @type ^`n.b.a.c` @kind object;
  #L3fd548.  call temp:= `h`(v0) @signature `Ln/b/a/c;.h:()Z` @kind virtual;
  #L3fd54e.  v0:= temp;
  #L3fd550.  return v0;
}
procedure `int` `hashCode`(`n.b.a.s.s$a` v2 @kind this) @signature `Ln/b/a/s/s$a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fd640.  v0:= v2.`n.b.a.s.s$a.b` @type ^`n.b.a.c` @kind object;
  #L3fd644.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3fd64a.  v0:= temp;
  #L3fd64c.  v1:= v2.`n.b.a.s.s$a.c` @type ^`n.b.a.f` @kind object;
  #L3fd650.  call temp:= `hashCode`(v1) @signature `Ln/b/a/f;.hashCode:()I` @kind virtual;
  #L3fd656.  v1:= temp;
  #L3fd658.  v0:= v0 ^~ v1 @kind int;
  #L3fd65a.  return v0;
}
