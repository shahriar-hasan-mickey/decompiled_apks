record `n.b.a.s.s` @kind class @AccessFlag PUBLIC_FINAL extends `n.b.a.s.a` @kind class {
}
procedure `void` `<init>`(`n.b.a.s.s` v0 @kind this, `n.b.a.a` v1 @kind object, `n.b.a.f` v2 @kind object) @signature `Ln/b/a/s/s;.<init>:(Ln/b/a/a;Ln/b/a/f;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3fdf30.  call `<init>`(v0, v1, v2) @signature `Ln/b/a/s/a;.<init>:(Ln/b/a/a;Ljava/lang/Object;)V` @kind direct;
  #L3fdf36.  return @kind void;
}
procedure `n.b.a.c` `a`(`n.b.a.s.s` v7 @kind this, `n.b.a.c` v8 @kind object, `java.util.HashMap` v9 @kind object) @signature `Ln/b/a/s/s;.a:(Ln/b/a/c;Ljava/util/HashMap;)Ln/b/a/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fddcc.  if v8 == 0 then goto L3fde46;
  #L3fddd0.  call temp:= `i`(v8) @signature `Ln/b/a/c;.i:()Z` @kind virtual;
  #L3fddd6.  v0:= temp;
  #L3fddd8.  if v0 != 0 then goto L3fddde;
  #L3fdddc.  goto L3fde46;
  #L3fddde.  call temp:= `containsKey`(v9, v8) @signature `Ljava/util/HashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fdde4.  v0:= temp;
  #L3fdde6.  if v0 == 0 then goto L3fddf8;
  #L3fddea.  call temp:= `get`(v9, v8) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3fddf0.  v8:= temp @kind object;
  #L3fddf2.  v8:= (`n.b.a.c`) v8 @kind object;
  #L3fddf6.  return v8 @kind object;
  #L3fddf8.  v6:= new `n.b.a.s.s$a`;
  #L3fddfc.  call temp:= `k`(v7) @signature `Ln/b/a/s/s;.k:()Ln/b/a/f;` @kind virtual;
  #L3fde02.  v2:= temp @kind object;
  #L3fde04.  call temp:= `a`(v8) @signature `Ln/b/a/c;.a:()Ln/b/a/g;` @kind virtual;
  #L3fde0a.  v0:= temp @kind object;
  #L3fde0c.  call temp:= `a`(v7, v0, v9) @signature `Ln/b/a/s/s;.a:(Ln/b/a/g;Ljava/util/HashMap;)Ln/b/a/g;` @kind direct;
  #L3fde12.  v3:= temp @kind object;
  #L3fde14.  call temp:= `f`(v8) @signature `Ln/b/a/c;.f:()Ln/b/a/g;` @kind virtual;
  #L3fde1a.  v0:= temp @kind object;
  #L3fde1c.  call temp:= `a`(v7, v0, v9) @signature `Ln/b/a/s/s;.a:(Ln/b/a/g;Ljava/util/HashMap;)Ln/b/a/g;` @kind direct;
  #L3fde22.  v4:= temp @kind object;
  #L3fde24.  call temp:= `b`(v8) @signature `Ln/b/a/c;.b:()Ln/b/a/g;` @kind virtual;
  #L3fde2a.  v0:= temp @kind object;
  #L3fde2c.  call temp:= `a`(v7, v0, v9) @signature `Ln/b/a/s/s;.a:(Ln/b/a/g;Ljava/util/HashMap;)Ln/b/a/g;` @kind direct;
  #L3fde32.  v5:= temp @kind object;
  #L3fde34.  v0:= v6 @kind object;
  #L3fde36.  v1:= v8 @kind object;
  #L3fde38.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Ln/b/a/s/s$a;.<init>:(Ln/b/a/c;Ln/b/a/f;Ln/b/a/g;Ln/b/a/g;Ln/b/a/g;)V` @kind direct;
  #L3fde3e.  call temp:= `put`(v9, v8, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3fde44.  return v6 @kind object;
  #L3fde46.  return v8 @kind object;
}
procedure `n.b.a.g` `a`(`n.b.a.s.s` v2 @kind this, `n.b.a.g` v3 @kind object, `java.util.HashMap` v4 @kind object) @signature `Ln/b/a/s/s;.a:(Ln/b/a/g;Ljava/util/HashMap;)Ln/b/a/g;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3fde78.  if v3 == 0 then goto L3fdebe;
  #L3fde7c.  call temp:= `k`(v3) @signature `Ln/b/a/g;.k:()Z` @kind virtual;
  #L3fde82.  v0:= temp;
  #L3fde84.  if v0 != 0 then goto L3fde8a;
  #L3fde88.  goto L3fdebe;
  #L3fde8a.  call temp:= `containsKey`(v4, v3) @signature `Ljava/util/HashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fde90.  v0:= temp;
  #L3fde92.  if v0 == 0 then goto L3fdea4;
  #L3fde96.  call temp:= `get`(v4, v3) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3fde9c.  v3:= temp @kind object;
  #L3fde9e.  v3:= (`n.b.a.g`) v3 @kind object;
  #L3fdea2.  return v3 @kind object;
  #L3fdea4.  v0:= new `n.b.a.s.s$b`;
  #L3fdea8.  call temp:= `k`(v2) @signature `Ln/b/a/s/s;.k:()Ln/b/a/f;` @kind virtual;
  #L3fdeae.  v1:= temp @kind object;
  #L3fdeb0.  call `<init>`(v0, v3, v1) @signature `Ln/b/a/s/s$b;.<init>:(Ln/b/a/g;Ln/b/a/f;)V` @kind direct;
  #L3fdeb6.  call temp:= `put`(v4, v3, v0) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3fdebc.  return v0 @kind object;
  #L3fdebe.  return v3 @kind object;
}
procedure `n.b.a.s.s` `a`(`n.b.a.a` v1 @kind object, `n.b.a.f` v2 @kind object) @signature `Ln/b/a/s/s;.a:(Ln/b/a/a;Ln/b/a/f;)Ln/b/a/s/s;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3fded0.  if v1 == 0 then goto L3fdf10;
  #L3fded4.  call temp:= `G`(v1) @signature `Ln/b/a/a;.G:()Ln/b/a/a;` @kind virtual;
  #L3fdeda.  v1:= temp @kind object;
  #L3fdedc.  if v1 == 0 then goto L3fdf00;
  #L3fdee0.  if v2 == 0 then goto L3fdef0;
  #L3fdee4.  v0:= new `n.b.a.s.s`;
  #L3fdee8.  call `<init>`(v0, v1, v2) @signature `Ln/b/a/s/s;.<init>:(Ln/b/a/a;Ln/b/a/f;)V` @kind direct;
  #L3fdeee.  return v0 @kind object;
  #L3fdef0.  v1:= new `java.lang.IllegalArgumentException`;
  #L3fdef4.  v2:= "DateTimeZone must not be null" @kind object;
  #L3fdef8.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fdefe.  throw v1;
  #L3fdf00.  v1:= new `java.lang.IllegalArgumentException`;
  #L3fdf04.  v2:= "UTC chronology must not be null" @kind object;
  #L3fdf08.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fdf0e.  throw v1;
  #L3fdf10.  v1:= new `java.lang.IllegalArgumentException`;
  #L3fdf14.  v2:= "Must supply a chronology" @kind object;
  #L3fdf18.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fdf1e.  throw v1;
}
procedure `boolean` `a`(`n.b.a.g` v4 @kind object) @signature `Ln/b/a/s/s;.a:(Ln/b/a/g;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fdc80.  if v4 == 0 then goto L3fdc9e;
  #L3fdc84.  call temp:= `e`(v4) @signature `Ln/b/a/g;.e:()J` @kind virtual;
  #L3fdc8a.  v0:= temp @kind wide;
  #L3fdc8c.  v2:= 43200000L;
  #L3fdc92.  v4:= lcmp(v0, v2);
  #L3fdc96.  if v4 >= 0 then goto L3fdc9e;
  #L3fdc9a.  v4:= 1I;
  #L3fdc9c.  goto L3fdca0;
  #L3fdc9e.  v4:= 0I;
  #L3fdca0.  return v4;
}
procedure `n.b.a.a` `G`(`n.b.a.s.s` v1 @kind this) @signature `Ln/b/a/s/s;.G:()Ln/b/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fdd60.  call temp:= `L`(v1) @signature `Ln/b/a/s/a;.L:()Ln/b/a/a;` @kind virtual;
  #L3fdd66.  v0:= temp @kind object;
  #L3fdd68.  return v0 @kind object;
}
procedure `n.b.a.a` `a`(`n.b.a.s.s` v2 @kind this, `n.b.a.f` v3 @kind object) @signature `Ln/b/a/s/s;.a:(Ln/b/a/f;)Ln/b/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fdd7c.  if v3 != 0 then goto L3fdd88;
  #L3fdd80.  call temp:= `d`() @signature `Ln/b/a/f;.d:()Ln/b/a/f;` @kind static;
  #L3fdd86.  v3:= temp @kind object;
  #L3fdd88.  call temp:= `M`(v2) @signature `Ln/b/a/s/a;.M:()Ljava/lang/Object;` @kind virtual;
  #L3fdd8e.  v0:= temp @kind object;
  #L3fdd90.  if v3 != v0 then goto L3fdd96;
  #L3fdd94.  return v2 @kind object;
  #L3fdd96.  v0:= `@@n.b.a.f.c` @type ^`n.b.a.f` @kind object;
  #L3fdd9a.  if v3 != v0 then goto L3fdda8;
  #L3fdd9e.  call temp:= `L`(v2) @signature `Ln/b/a/s/a;.L:()Ln/b/a/a;` @kind virtual;
  #L3fdda4.  v3:= temp @kind object;
  #L3fdda6.  return v3 @kind object;
  #L3fdda8.  v0:= new `n.b.a.s.s`;
  #L3fddac.  call temp:= `L`(v2) @signature `Ln/b/a/s/a;.L:()Ln/b/a/a;` @kind virtual;
  #L3fddb2.  v1:= temp @kind object;
  #L3fddb4.  call `<init>`(v0, v1, v3) @signature `Ln/b/a/s/s;.<init>:(Ln/b/a/a;Ln/b/a/f;)V` @kind direct;
  #L3fddba.  return v0 @kind object;
}
procedure `void` `a`(`n.b.a.s.s` v2 @kind this, `n.b.a.s.a$a` v3 @kind object) @signature `Ln/b/a/s/s;.a:(Ln/b/a/s/a$a;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3fdf48.  v0:= new `java.util.HashMap`;
  #L3fdf4c.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3fdf52.  v1:= v3.`n.b.a.s.a$a.l` @type ^`n.b.a.g` @kind object;
  #L3fdf56.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/g;Ljava/util/HashMap;)Ln/b/a/g;` @kind direct;
  #L3fdf5c.  v1:= temp @kind object;
  #L3fdf5e.  v3.`n.b.a.s.a$a.l` @type ^`n.b.a.g` := v1 @kind object;
  #L3fdf62.  v1:= v3.`n.b.a.s.a$a.k` @type ^`n.b.a.g` @kind object;
  #L3fdf66.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/g;Ljava/util/HashMap;)Ln/b/a/g;` @kind direct;
  #L3fdf6c.  v1:= temp @kind object;
  #L3fdf6e.  v3.`n.b.a.s.a$a.k` @type ^`n.b.a.g` := v1 @kind object;
  #L3fdf72.  v1:= v3.`n.b.a.s.a$a.j` @type ^`n.b.a.g` @kind object;
  #L3fdf76.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/g;Ljava/util/HashMap;)Ln/b/a/g;` @kind direct;
  #L3fdf7c.  v1:= temp @kind object;
  #L3fdf7e.  v3.`n.b.a.s.a$a.j` @type ^`n.b.a.g` := v1 @kind object;
  #L3fdf82.  v1:= v3.`n.b.a.s.a$a.i` @type ^`n.b.a.g` @kind object;
  #L3fdf86.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/g;Ljava/util/HashMap;)Ln/b/a/g;` @kind direct;
  #L3fdf8c.  v1:= temp @kind object;
  #L3fdf8e.  v3.`n.b.a.s.a$a.i` @type ^`n.b.a.g` := v1 @kind object;
  #L3fdf92.  v1:= v3.`n.b.a.s.a$a.h` @type ^`n.b.a.g` @kind object;
  #L3fdf96.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/g;Ljava/util/HashMap;)Ln/b/a/g;` @kind direct;
  #L3fdf9c.  v1:= temp @kind object;
  #L3fdf9e.  v3.`n.b.a.s.a$a.h` @type ^`n.b.a.g` := v1 @kind object;
  #L3fdfa2.  v1:= v3.`n.b.a.s.a$a.g` @type ^`n.b.a.g` @kind object;
  #L3fdfa6.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/g;Ljava/util/HashMap;)Ln/b/a/g;` @kind direct;
  #L3fdfac.  v1:= temp @kind object;
  #L3fdfae.  v3.`n.b.a.s.a$a.g` @type ^`n.b.a.g` := v1 @kind object;
  #L3fdfb2.  v1:= v3.`n.b.a.s.a$a.f` @type ^`n.b.a.g` @kind object;
  #L3fdfb6.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/g;Ljava/util/HashMap;)Ln/b/a/g;` @kind direct;
  #L3fdfbc.  v1:= temp @kind object;
  #L3fdfbe.  v3.`n.b.a.s.a$a.f` @type ^`n.b.a.g` := v1 @kind object;
  #L3fdfc2.  v1:= v3.`n.b.a.s.a$a.e` @type ^`n.b.a.g` @kind object;
  #L3fdfc6.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/g;Ljava/util/HashMap;)Ln/b/a/g;` @kind direct;
  #L3fdfcc.  v1:= temp @kind object;
  #L3fdfce.  v3.`n.b.a.s.a$a.e` @type ^`n.b.a.g` := v1 @kind object;
  #L3fdfd2.  v1:= v3.`n.b.a.s.a$a.d` @type ^`n.b.a.g` @kind object;
  #L3fdfd6.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/g;Ljava/util/HashMap;)Ln/b/a/g;` @kind direct;
  #L3fdfdc.  v1:= temp @kind object;
  #L3fdfde.  v3.`n.b.a.s.a$a.d` @type ^`n.b.a.g` := v1 @kind object;
  #L3fdfe2.  v1:= v3.`n.b.a.s.a$a.c` @type ^`n.b.a.g` @kind object;
  #L3fdfe6.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/g;Ljava/util/HashMap;)Ln/b/a/g;` @kind direct;
  #L3fdfec.  v1:= temp @kind object;
  #L3fdfee.  v3.`n.b.a.s.a$a.c` @type ^`n.b.a.g` := v1 @kind object;
  #L3fdff2.  v1:= v3.`n.b.a.s.a$a.b` @type ^`n.b.a.g` @kind object;
  #L3fdff6.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/g;Ljava/util/HashMap;)Ln/b/a/g;` @kind direct;
  #L3fdffc.  v1:= temp @kind object;
  #L3fdffe.  v3.`n.b.a.s.a$a.b` @type ^`n.b.a.g` := v1 @kind object;
  #L3fe002.  v1:= v3.`n.b.a.s.a$a.a` @type ^`n.b.a.g` @kind object;
  #L3fe006.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/g;Ljava/util/HashMap;)Ln/b/a/g;` @kind direct;
  #L3fe00c.  v1:= temp @kind object;
  #L3fe00e.  v3.`n.b.a.s.a$a.a` @type ^`n.b.a.g` := v1 @kind object;
  #L3fe012.  v1:= v3.`n.b.a.s.a$a.E` @type ^`n.b.a.c` @kind object;
  #L3fe016.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/c;Ljava/util/HashMap;)Ln/b/a/c;` @kind direct;
  #L3fe01c.  v1:= temp @kind object;
  #L3fe01e.  v3.`n.b.a.s.a$a.E` @type ^`n.b.a.c` := v1 @kind object;
  #L3fe022.  v1:= v3.`n.b.a.s.a$a.F` @type ^`n.b.a.c` @kind object;
  #L3fe026.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/c;Ljava/util/HashMap;)Ln/b/a/c;` @kind direct;
  #L3fe02c.  v1:= temp @kind object;
  #L3fe02e.  v3.`n.b.a.s.a$a.F` @type ^`n.b.a.c` := v1 @kind object;
  #L3fe032.  v1:= v3.`n.b.a.s.a$a.G` @type ^`n.b.a.c` @kind object;
  #L3fe036.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/c;Ljava/util/HashMap;)Ln/b/a/c;` @kind direct;
  #L3fe03c.  v1:= temp @kind object;
  #L3fe03e.  v3.`n.b.a.s.a$a.G` @type ^`n.b.a.c` := v1 @kind object;
  #L3fe042.  v1:= v3.`n.b.a.s.a$a.H` @type ^`n.b.a.c` @kind object;
  #L3fe046.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/c;Ljava/util/HashMap;)Ln/b/a/c;` @kind direct;
  #L3fe04c.  v1:= temp @kind object;
  #L3fe04e.  v3.`n.b.a.s.a$a.H` @type ^`n.b.a.c` := v1 @kind object;
  #L3fe052.  v1:= v3.`n.b.a.s.a$a.I` @type ^`n.b.a.c` @kind object;
  #L3fe056.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/c;Ljava/util/HashMap;)Ln/b/a/c;` @kind direct;
  #L3fe05c.  v1:= temp @kind object;
  #L3fe05e.  v3.`n.b.a.s.a$a.I` @type ^`n.b.a.c` := v1 @kind object;
  #L3fe062.  v1:= v3.`n.b.a.s.a$a.x` @type ^`n.b.a.c` @kind object;
  #L3fe066.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/c;Ljava/util/HashMap;)Ln/b/a/c;` @kind direct;
  #L3fe06c.  v1:= temp @kind object;
  #L3fe06e.  v3.`n.b.a.s.a$a.x` @type ^`n.b.a.c` := v1 @kind object;
  #L3fe072.  v1:= v3.`n.b.a.s.a$a.y` @type ^`n.b.a.c` @kind object;
  #L3fe076.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/c;Ljava/util/HashMap;)Ln/b/a/c;` @kind direct;
  #L3fe07c.  v1:= temp @kind object;
  #L3fe07e.  v3.`n.b.a.s.a$a.y` @type ^`n.b.a.c` := v1 @kind object;
  #L3fe082.  v1:= v3.`n.b.a.s.a$a.z` @type ^`n.b.a.c` @kind object;
  #L3fe086.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/c;Ljava/util/HashMap;)Ln/b/a/c;` @kind direct;
  #L3fe08c.  v1:= temp @kind object;
  #L3fe08e.  v3.`n.b.a.s.a$a.z` @type ^`n.b.a.c` := v1 @kind object;
  #L3fe092.  v1:= v3.`n.b.a.s.a$a.D` @type ^`n.b.a.c` @kind object;
  #L3fe096.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/c;Ljava/util/HashMap;)Ln/b/a/c;` @kind direct;
  #L3fe09c.  v1:= temp @kind object;
  #L3fe09e.  v3.`n.b.a.s.a$a.D` @type ^`n.b.a.c` := v1 @kind object;
  #L3fe0a2.  v1:= v3.`n.b.a.s.a$a.A` @type ^`n.b.a.c` @kind object;
  #L3fe0a6.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/c;Ljava/util/HashMap;)Ln/b/a/c;` @kind direct;
  #L3fe0ac.  v1:= temp @kind object;
  #L3fe0ae.  v3.`n.b.a.s.a$a.A` @type ^`n.b.a.c` := v1 @kind object;
  #L3fe0b2.  v1:= v3.`n.b.a.s.a$a.B` @type ^`n.b.a.c` @kind object;
  #L3fe0b6.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/c;Ljava/util/HashMap;)Ln/b/a/c;` @kind direct;
  #L3fe0bc.  v1:= temp @kind object;
  #L3fe0be.  v3.`n.b.a.s.a$a.B` @type ^`n.b.a.c` := v1 @kind object;
  #L3fe0c2.  v1:= v3.`n.b.a.s.a$a.C` @type ^`n.b.a.c` @kind object;
  #L3fe0c6.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/c;Ljava/util/HashMap;)Ln/b/a/c;` @kind direct;
  #L3fe0cc.  v1:= temp @kind object;
  #L3fe0ce.  v3.`n.b.a.s.a$a.C` @type ^`n.b.a.c` := v1 @kind object;
  #L3fe0d2.  v1:= v3.`n.b.a.s.a$a.m` @type ^`n.b.a.c` @kind object;
  #L3fe0d6.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/c;Ljava/util/HashMap;)Ln/b/a/c;` @kind direct;
  #L3fe0dc.  v1:= temp @kind object;
  #L3fe0de.  v3.`n.b.a.s.a$a.m` @type ^`n.b.a.c` := v1 @kind object;
  #L3fe0e2.  v1:= v3.`n.b.a.s.a$a.n` @type ^`n.b.a.c` @kind object;
  #L3fe0e6.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/c;Ljava/util/HashMap;)Ln/b/a/c;` @kind direct;
  #L3fe0ec.  v1:= temp @kind object;
  #L3fe0ee.  v3.`n.b.a.s.a$a.n` @type ^`n.b.a.c` := v1 @kind object;
  #L3fe0f2.  v1:= v3.`n.b.a.s.a$a.o` @type ^`n.b.a.c` @kind object;
  #L3fe0f6.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/c;Ljava/util/HashMap;)Ln/b/a/c;` @kind direct;
  #L3fe0fc.  v1:= temp @kind object;
  #L3fe0fe.  v3.`n.b.a.s.a$a.o` @type ^`n.b.a.c` := v1 @kind object;
  #L3fe102.  v1:= v3.`n.b.a.s.a$a.p` @type ^`n.b.a.c` @kind object;
  #L3fe106.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/c;Ljava/util/HashMap;)Ln/b/a/c;` @kind direct;
  #L3fe10c.  v1:= temp @kind object;
  #L3fe10e.  v3.`n.b.a.s.a$a.p` @type ^`n.b.a.c` := v1 @kind object;
  #L3fe112.  v1:= v3.`n.b.a.s.a$a.q` @type ^`n.b.a.c` @kind object;
  #L3fe116.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/c;Ljava/util/HashMap;)Ln/b/a/c;` @kind direct;
  #L3fe11c.  v1:= temp @kind object;
  #L3fe11e.  v3.`n.b.a.s.a$a.q` @type ^`n.b.a.c` := v1 @kind object;
  #L3fe122.  v1:= v3.`n.b.a.s.a$a.r` @type ^`n.b.a.c` @kind object;
  #L3fe126.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/c;Ljava/util/HashMap;)Ln/b/a/c;` @kind direct;
  #L3fe12c.  v1:= temp @kind object;
  #L3fe12e.  v3.`n.b.a.s.a$a.r` @type ^`n.b.a.c` := v1 @kind object;
  #L3fe132.  v1:= v3.`n.b.a.s.a$a.s` @type ^`n.b.a.c` @kind object;
  #L3fe136.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/c;Ljava/util/HashMap;)Ln/b/a/c;` @kind direct;
  #L3fe13c.  v1:= temp @kind object;
  #L3fe13e.  v3.`n.b.a.s.a$a.s` @type ^`n.b.a.c` := v1 @kind object;
  #L3fe142.  v1:= v3.`n.b.a.s.a$a.u` @type ^`n.b.a.c` @kind object;
  #L3fe146.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/c;Ljava/util/HashMap;)Ln/b/a/c;` @kind direct;
  #L3fe14c.  v1:= temp @kind object;
  #L3fe14e.  v3.`n.b.a.s.a$a.u` @type ^`n.b.a.c` := v1 @kind object;
  #L3fe152.  v1:= v3.`n.b.a.s.a$a.t` @type ^`n.b.a.c` @kind object;
  #L3fe156.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/c;Ljava/util/HashMap;)Ln/b/a/c;` @kind direct;
  #L3fe15c.  v1:= temp @kind object;
  #L3fe15e.  v3.`n.b.a.s.a$a.t` @type ^`n.b.a.c` := v1 @kind object;
  #L3fe162.  v1:= v3.`n.b.a.s.a$a.v` @type ^`n.b.a.c` @kind object;
  #L3fe166.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/c;Ljava/util/HashMap;)Ln/b/a/c;` @kind direct;
  #L3fe16c.  v1:= temp @kind object;
  #L3fe16e.  v3.`n.b.a.s.a$a.v` @type ^`n.b.a.c` := v1 @kind object;
  #L3fe172.  v1:= v3.`n.b.a.s.a$a.w` @type ^`n.b.a.c` @kind object;
  #L3fe176.  call temp:= `a`(v2, v1, v0) @signature `Ln/b/a/s/s;.a:(Ln/b/a/c;Ljava/util/HashMap;)Ln/b/a/c;` @kind direct;
  #L3fe17c.  v0:= temp @kind object;
  #L3fe17e.  v3.`n.b.a.s.a$a.w` @type ^`n.b.a.c` := v0 @kind object;
  #L3fe182.  return @kind void;
}
procedure `boolean` `equals`(`n.b.a.s.s` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Ln/b/a/s/s;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fdc18.  v0:= 1I;
  #L3fdc1a.  if v4 != v5 then goto L3fdc20;
  #L3fdc1e.  return v0;
  #L3fdc20.  v1:= instanceof @variable v5 @type ^`n.b.a.s.s` @kind boolean;
  #L3fdc24.  v2:= 0I;
  #L3fdc26.  if v1 != 0 then goto L3fdc2c;
  #L3fdc2a.  return v2;
  #L3fdc2c.  v5:= (`n.b.a.s.s`) v5 @kind object;
  #L3fdc30.  call temp:= `L`(v4) @signature `Ln/b/a/s/a;.L:()Ln/b/a/a;` @kind virtual;
  #L3fdc36.  v1:= temp @kind object;
  #L3fdc38.  call temp:= `L`(v5) @signature `Ln/b/a/s/a;.L:()Ln/b/a/a;` @kind virtual;
  #L3fdc3e.  v3:= temp @kind object;
  #L3fdc40.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fdc46.  v1:= temp;
  #L3fdc48.  if v1 == 0 then goto L3fdc6a;
  #L3fdc4c.  call temp:= `k`(v4) @signature `Ln/b/a/s/s;.k:()Ln/b/a/f;` @kind virtual;
  #L3fdc52.  v1:= temp @kind object;
  #L3fdc54.  call temp:= `k`(v5) @signature `Ln/b/a/s/s;.k:()Ln/b/a/f;` @kind virtual;
  #L3fdc5a.  v5:= temp @kind object;
  #L3fdc5c.  call temp:= `equals`(v1, v5) @signature `Ln/b/a/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fdc62.  v5:= temp;
  #L3fdc64.  if v5 == 0 then goto L3fdc6a;
  #L3fdc68.  goto L3fdc6c;
  #L3fdc6a.  v0:= 0I;
  #L3fdc6c.  return v0;
}
procedure `int` `hashCode`(`n.b.a.s.s` v2 @kind this) @signature `Ln/b/a/s/s;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fdcb4.  call temp:= `k`(v2) @signature `Ln/b/a/s/s;.k:()Ln/b/a/f;` @kind virtual;
  #L3fdcba.  v0:= temp @kind object;
  #L3fdcbc.  call temp:= `hashCode`(v0) @signature `Ln/b/a/f;.hashCode:()I` @kind virtual;
  #L3fdcc2.  v0:= temp;
  #L3fdcc4.  v0:= v0 * 11;
  #L3fdcc8.  v1:= 326565I;
  #L3fdcce.  v0:= v0 + v1 @kind int;
  #L3fdcd0.  call temp:= `L`(v2) @signature `Ln/b/a/s/a;.L:()Ln/b/a/a;` @kind virtual;
  #L3fdcd6.  v1:= temp @kind object;
  #L3fdcd8.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3fdcde.  v1:= temp;
  #L3fdce0.  v1:= v1 * 7;
  #L3fdce4.  v0:= v0 + v1 @kind int;
  #L3fdce6.  return v0;
}
procedure `n.b.a.f` `k`(`n.b.a.s.s` v1 @kind this) @signature `Ln/b/a/s/s;.k:()Ln/b/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fde58.  call temp:= `M`(v1) @signature `Ln/b/a/s/a;.M:()Ljava/lang/Object;` @kind virtual;
  #L3fde5e.  v0:= temp @kind object;
  #L3fde60.  v0:= (`n.b.a.f`) v0 @kind object;
  #L3fde64.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`n.b.a.s.s` v2 @kind this) @signature `Ln/b/a/s/s;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fdcf8.  v0:= new `java.lang.StringBuilder`;
  #L3fdcfc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fdd02.  v1:= "ZonedChronology[" @kind object;
  #L3fdd06.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fdd0c.  call temp:= `L`(v2) @signature `Ln/b/a/s/a;.L:()Ln/b/a/a;` @kind virtual;
  #L3fdd12.  v1:= temp @kind object;
  #L3fdd14.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fdd1a.  v1:= ", " @kind object;
  #L3fdd1e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fdd24.  call temp:= `k`(v2) @signature `Ln/b/a/s/s;.k:()Ln/b/a/f;` @kind virtual;
  #L3fdd2a.  v1:= temp @kind object;
  #L3fdd2c.  call temp:= `a`(v1) @signature `Ln/b/a/f;.a:()Ljava/lang/String;` @kind virtual;
  #L3fdd32.  v1:= temp @kind object;
  #L3fdd34.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fdd3a.  v1:= 93I;
  #L3fdd3e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fdd44.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fdd4a.  v0:= temp @kind object;
  #L3fdd4c.  return v0 @kind object;
}
