record `n.b.a.s.j` @kind class @AccessFlag  extends `n.b.a.t.h` @kind class {
  `n.b.a.s.c` `n.b.a.s.j.d` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`n.b.a.s.j` v3 @kind this, `n.b.a.s.c` v4 @kind object) @signature `Ln/b/a/s/j;.<init>:(Ln/b/a/s/c;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3fc200.  call temp:= `w`() @signature `Ln/b/a/d;.w:()Ln/b/a/d;` @kind static;
  #L3fc206.  v0:= temp @kind object;
  #L3fc208.  call temp:= `P`(v4) @signature `Ln/b/a/s/c;.P:()J` @kind virtual;
  #L3fc20e.  v1:= temp @kind wide;
  #L3fc210.  call `<init>`(v3, v0, v1) @signature `Ln/b/a/t/h;.<init>:(Ln/b/a/d;J)V` @kind direct;
  #L3fc216.  v3.`n.b.a.s.j.d` @type ^`n.b.a.s.c` := v4 @kind object;
  #L3fc21a.  return @kind void;
}
procedure `int` `a`(`n.b.a.s.j` v1 @kind this, `long` v2 ) @signature `Ln/b/a/s/j;.a:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fc014.  v0:= v1.`n.b.a.s.j.d` @type ^`n.b.a.s.c` @kind object;
  #L3fc018.  call temp:= `i`(v0, v2) @signature `Ln/b/a/s/c;.i:(J)I` @kind virtual;
  #L3fc01e.  v2:= temp;
  #L3fc020.  return v2;
}
procedure `long` `a`(`n.b.a.s.j` v1 @kind this, `long` v2 , `int` v4 ) @signature `Ln/b/a/s/j;.a:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fc074.  if v4 != 0 then goto L3fc07a;
  #L3fc078.  return v2 @kind wide;
  #L3fc07a.  call temp:= `a`(v1, v2) @signature `Ln/b/a/s/j;.a:(J)I` @kind virtual;
  #L3fc080.  v0:= temp;
  #L3fc082.  call temp:= `a`(v0, v4) @signature `Ln/b/a/t/g;.a:(II)I` @kind static;
  #L3fc088.  v4:= temp;
  #L3fc08a.  call temp:= `b`(v1, v2, v4) @signature `Ln/b/a/s/j;.b:(JI)J` @kind virtual;
  #L3fc090.  v2:= temp @kind wide;
  #L3fc092.  return v2 @kind wide;
}
procedure `long` `a`(`n.b.a.s.j` v0 @kind this, `long` v1 , `long` v3 ) @signature `Ln/b/a/s/j;.a:(JJ)J` @AccessFlag PUBLIC {
    temp;

  #L3fc0a4.  call temp:= `a`(v3) @signature `Ln/b/a/t/g;.a:(J)I` @kind static;
  #L3fc0aa.  v3:= temp;
  #L3fc0ac.  call temp:= `a`(v0, v1, v3) @signature `Ln/b/a/s/j;.a:(JI)J` @kind virtual;
  #L3fc0b2.  v1:= temp @kind wide;
  #L3fc0b4.  return v1 @kind wide;
}
procedure `long` `b`(`n.b.a.s.j` v2 @kind this, `long` v3 , `int` v5 ) @signature `Ln/b/a/s/j;.b:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fc14c.  v0:= v2.`n.b.a.s.j.d` @type ^`n.b.a.s.c` @kind object;
  #L3fc150.  call temp:= `V`(v0) @signature `Ln/b/a/s/c;.V:()I` @kind virtual;
  #L3fc156.  v0:= temp;
  #L3fc158.  v1:= v2.`n.b.a.s.j.d` @type ^`n.b.a.s.c` @kind object;
  #L3fc15c.  call temp:= `U`(v1) @signature `Ln/b/a/s/c;.U:()I` @kind virtual;
  #L3fc162.  v1:= temp;
  #L3fc164.  call `a`(v2, v5, v0, v1) @signature `Ln/b/a/t/g;.a:(Ln/b/a/c;III)V` @kind static;
  #L3fc16a.  v0:= v2.`n.b.a.s.j.d` @type ^`n.b.a.s.c` @kind object;
  #L3fc16e.  call temp:= `f`(v0, v3, v5) @signature `Ln/b/a/s/c;.f:(JI)J` @kind virtual;
  #L3fc174.  v3:= temp @kind wide;
  #L3fc176.  return v3 @kind wide;
}
procedure `n.b.a.g` `b`(`n.b.a.s.j` v1 @kind this) @signature `Ln/b/a/s/j;.b:()Ln/b/a/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fc1cc.  v0:= v1.`n.b.a.s.j.d` @type ^`n.b.a.s.c` @kind object;
  #L3fc1d0.  call temp:= `h`(v0) @signature `Ln/b/a/s/a;.h:()Ln/b/a/g;` @kind virtual;
  #L3fc1d6.  v0:= temp @kind object;
  #L3fc1d8.  return v0 @kind object;
}
procedure `boolean` `b`(`n.b.a.s.j` v1 @kind this, `long` v2 ) @signature `Ln/b/a/s/j;.b:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fbfd8.  v0:= v1.`n.b.a.s.j.d` @type ^`n.b.a.s.c` @kind object;
  #L3fbfdc.  call temp:= `a`(v1, v2) @signature `Ln/b/a/s/j;.a:(J)I` @kind virtual;
  #L3fbfe2.  v2:= temp;
  #L3fbfe4.  call temp:= `f`(v0, v2) @signature `Ln/b/a/s/c;.f:(I)Z` @kind virtual;
  #L3fbfea.  v2:= temp;
  #L3fbfec.  return v2;
}
procedure `int` `c`(`n.b.a.s.j` v1 @kind this) @signature `Ln/b/a/s/j;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fc034.  v0:= v1.`n.b.a.s.j.d` @type ^`n.b.a.s.c` @kind object;
  #L3fc038.  call temp:= `U`(v0) @signature `Ln/b/a/s/c;.U:()I` @kind virtual;
  #L3fc03e.  v0:= temp;
  #L3fc040.  return v0;
}
procedure `long` `c`(`n.b.a.s.j` v2 @kind this, `long` v3 ) @signature `Ln/b/a/s/j;.c:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fc0c8.  call temp:= `e`(v2, v3) @signature `Ln/b/a/s/j;.e:(J)J` @kind virtual;
  #L3fc0ce.  v0:= temp @kind wide;
  #L3fc0d0.  v3:= v3 - v0 @kind long;
  #L3fc0d2.  return v3 @kind wide;
}
procedure `long` `c`(`n.b.a.s.j` v2 @kind this, `long` v3 , `int` v5 ) @signature `Ln/b/a/s/j;.c:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fc188.  v0:= v2.`n.b.a.s.j.d` @type ^`n.b.a.s.c` @kind object;
  #L3fc18c.  call temp:= `V`(v0) @signature `Ln/b/a/s/c;.V:()I` @kind virtual;
  #L3fc192.  v0:= temp;
  #L3fc194.  v0:= v0 + -1;
  #L3fc198.  v1:= v2.`n.b.a.s.j.d` @type ^`n.b.a.s.c` @kind object;
  #L3fc19c.  call temp:= `U`(v1) @signature `Ln/b/a/s/c;.U:()I` @kind virtual;
  #L3fc1a2.  v1:= temp;
  #L3fc1a4.  v1:= v1 + 1;
  #L3fc1a8.  call `a`(v2, v5, v0, v1) @signature `Ln/b/a/t/g;.a:(Ln/b/a/c;III)V` @kind static;
  #L3fc1ae.  v0:= v2.`n.b.a.s.j.d` @type ^`n.b.a.s.c` @kind object;
  #L3fc1b2.  call temp:= `f`(v0, v3, v5) @signature `Ln/b/a/s/c;.f:(JI)J` @kind virtual;
  #L3fc1b8.  v3:= temp @kind wide;
  #L3fc1ba.  return v3 @kind wide;
}
procedure `int` `d`(`n.b.a.s.j` v1 @kind this) @signature `Ln/b/a/s/j;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fc054.  v0:= v1.`n.b.a.s.j.d` @type ^`n.b.a.s.c` @kind object;
  #L3fc058.  call temp:= `V`(v0) @signature `Ln/b/a/s/c;.V:()I` @kind virtual;
  #L3fc05e.  v0:= temp;
  #L3fc060.  return v0;
}
procedure `long` `d`(`n.b.a.s.j` v4 @kind this, `long` v5 ) @signature `Ln/b/a/s/j;.d:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fc0e4.  call temp:= `a`(v4, v5) @signature `Ln/b/a/s/j;.a:(J)I` @kind virtual;
  #L3fc0ea.  v0:= temp;
  #L3fc0ec.  v1:= v4.`n.b.a.s.j.d` @type ^`n.b.a.s.c` @kind object;
  #L3fc0f0.  call temp:= `e`(v1, v0) @signature `Ln/b/a/s/c;.e:(I)J` @kind virtual;
  #L3fc0f6.  v1:= temp @kind wide;
  #L3fc0f8.  v3:= lcmp(v5, v1);
  #L3fc0fc.  if v3 == 0 then goto L3fc110;
  #L3fc100.  v5:= v4.`n.b.a.s.j.d` @type ^`n.b.a.s.c` @kind object;
  #L3fc104.  v0:= v0 + 1;
  #L3fc108.  call temp:= `e`(v5, v0) @signature `Ln/b/a/s/c;.e:(I)J` @kind virtual;
  #L3fc10e.  v5:= temp @kind wide;
  #L3fc110.  return v5 @kind wide;
}
procedure `long` `e`(`n.b.a.s.j` v1 @kind this, `long` v2 ) @signature `Ln/b/a/s/j;.e:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fc124.  v0:= v1.`n.b.a.s.j.d` @type ^`n.b.a.s.c` @kind object;
  #L3fc128.  call temp:= `a`(v1, v2) @signature `Ln/b/a/s/j;.a:(J)I` @kind virtual;
  #L3fc12e.  v2:= temp;
  #L3fc130.  call temp:= `e`(v0, v2) @signature `Ln/b/a/s/c;.e:(I)J` @kind virtual;
  #L3fc136.  v2:= temp @kind wide;
  #L3fc138.  return v2 @kind wide;
}
procedure `n.b.a.g` `f`(`n.b.a.s.j` v1 @kind this) @signature `Ln/b/a/s/j;.f:()Ln/b/a/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fc1ec.  v0:= 0I;
  #L3fc1ee.  return v0 @kind object;
}
procedure `boolean` `h`(`n.b.a.s.j` v1 @kind this) @signature `Ln/b/a/s/j;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fc000.  v0:= 0I;
  #L3fc002.  return v0;
}
