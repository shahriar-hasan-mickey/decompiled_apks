record `n.b.a.s.o` @kind class @AccessFlag FINAL extends `n.b.a.t.d` @kind class {
  `n.b.a.s.c` `n.b.a.s.o.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`n.b.a.s.o` v1 @kind this, `n.b.a.c` v2 @kind object, `n.b.a.s.c` v3 @kind object) @signature `Ln/b/a/s/o;.<init>:(Ln/b/a/c;Ln/b/a/s/c;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3fccfc.  call temp:= `y`() @signature `Ln/b/a/d;.y:()Ln/b/a/d;` @kind static;
  #L3fcd02.  v0:= temp @kind object;
  #L3fcd04.  call `<init>`(v1, v2, v0) @signature `Ln/b/a/t/d;.<init>:(Ln/b/a/c;Ln/b/a/d;)V` @kind direct;
  #L3fcd0a.  v1.`n.b.a.s.o.c` @type ^`n.b.a.s.c` := v3 @kind object;
  #L3fcd0e.  return @kind void;
}
procedure `int` `a`(`n.b.a.s.o` v1 @kind this, `long` v2 ) @signature `Ln/b/a/s/o;.a:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fcba8.  call temp:= `j`(v1) @signature `Ln/b/a/t/d;.j:()Ln/b/a/c;` @kind virtual;
  #L3fcbae.  v0:= temp @kind object;
  #L3fcbb0.  call temp:= `a`(v0, v2) @signature `Ln/b/a/c;.a:(J)I` @kind virtual;
  #L3fcbb6.  v2:= temp;
  #L3fcbb8.  if v2 > 0 then goto L3fcbc0;
  #L3fcbbc.  v2:= v2 - 1;
  #L3fcbc0.  return v2;
}
procedure `long` `a`(`n.b.a.s.o` v1 @kind this, `long` v2 , `int` v4 ) @signature `Ln/b/a/s/o;.a:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fcc0c.  call temp:= `j`(v1) @signature `Ln/b/a/t/d;.j:()Ln/b/a/c;` @kind virtual;
  #L3fcc12.  v0:= temp @kind object;
  #L3fcc14.  call temp:= `a`(v0, v2, v4) @signature `Ln/b/a/c;.a:(JI)J` @kind virtual;
  #L3fcc1a.  v2:= temp @kind wide;
  #L3fcc1c.  return v2 @kind wide;
}
procedure `long` `b`(`n.b.a.s.o` v2 @kind this, `long` v3 , `int` v5 ) @signature `Ln/b/a/s/o;.b:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fcc9c.  call temp:= `c`(v2) @signature `Ln/b/a/s/o;.c:()I` @kind virtual;
  #L3fcca2.  v0:= temp;
  #L3fcca4.  v1:= 1I;
  #L3fcca6.  call `a`(v2, v5, v1, v0) @signature `Ln/b/a/t/g;.a:(Ln/b/a/c;III)V` @kind static;
  #L3fccac.  v0:= v2.`n.b.a.s.o.c` @type ^`n.b.a.s.c` @kind object;
  #L3fccb0.  call temp:= `i`(v0, v3) @signature `Ln/b/a/s/c;.i:(J)I` @kind virtual;
  #L3fccb6.  v0:= temp;
  #L3fccb8.  if v0 > 0 then goto L3fccc0;
  #L3fccbc.  v5:= v5 - 1;
  #L3fccc0.  call temp:= `b`(v2, v3, v5) @signature `Ln/b/a/t/d;.b:(JI)J` @kind super;
  #L3fccc6.  v3:= temp @kind wide;
  #L3fccc8.  return v3 @kind wide;
}
procedure `int` `c`(`n.b.a.s.o` v1 @kind this) @signature `Ln/b/a/s/o;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fcbd4.  call temp:= `j`(v1) @signature `Ln/b/a/t/d;.j:()Ln/b/a/c;` @kind virtual;
  #L3fcbda.  v0:= temp @kind object;
  #L3fcbdc.  call temp:= `c`(v0) @signature `Ln/b/a/c;.c:()I` @kind virtual;
  #L3fcbe2.  v0:= temp;
  #L3fcbe4.  return v0;
}
procedure `long` `c`(`n.b.a.s.o` v1 @kind this, `long` v2 ) @signature `Ln/b/a/s/o;.c:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fcc30.  call temp:= `j`(v1) @signature `Ln/b/a/t/d;.j:()Ln/b/a/c;` @kind virtual;
  #L3fcc36.  v0:= temp @kind object;
  #L3fcc38.  call temp:= `c`(v0, v2) @signature `Ln/b/a/c;.c:(J)J` @kind virtual;
  #L3fcc3e.  v2:= temp @kind wide;
  #L3fcc40.  return v2 @kind wide;
}
procedure `int` `d`(`n.b.a.s.o` v1 @kind this) @signature `Ln/b/a/s/o;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fcbf8.  v0:= 1I;
  #L3fcbfa.  return v0;
}
procedure `long` `d`(`n.b.a.s.o` v1 @kind this, `long` v2 ) @signature `Ln/b/a/s/o;.d:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fcc54.  call temp:= `j`(v1) @signature `Ln/b/a/t/d;.j:()Ln/b/a/c;` @kind virtual;
  #L3fcc5a.  v0:= temp @kind object;
  #L3fcc5c.  call temp:= `d`(v0, v2) @signature `Ln/b/a/c;.d:(J)J` @kind virtual;
  #L3fcc62.  v2:= temp @kind wide;
  #L3fcc64.  return v2 @kind wide;
}
procedure `long` `e`(`n.b.a.s.o` v1 @kind this, `long` v2 ) @signature `Ln/b/a/s/o;.e:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fcc78.  call temp:= `j`(v1) @signature `Ln/b/a/t/d;.j:()Ln/b/a/c;` @kind virtual;
  #L3fcc7e.  v0:= temp @kind object;
  #L3fcc80.  call temp:= `e`(v0, v2) @signature `Ln/b/a/c;.e:(J)J` @kind virtual;
  #L3fcc86.  v2:= temp @kind wide;
  #L3fcc88.  return v2 @kind wide;
}
procedure `n.b.a.g` `f`(`n.b.a.s.o` v1 @kind this) @signature `Ln/b/a/s/o;.f:()Ln/b/a/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fccdc.  v0:= v1.`n.b.a.s.o.c` @type ^`n.b.a.s.c` @kind object;
  #L3fcce0.  call temp:= `j`(v0) @signature `Ln/b/a/s/a;.j:()Ln/b/a/g;` @kind virtual;
  #L3fcce6.  v0:= temp @kind object;
  #L3fcce8.  return v0 @kind object;
}
