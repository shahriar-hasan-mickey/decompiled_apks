record `n.b.a.s.h` @kind class @AccessFlag FINAL extends `n.b.a.t.l` @kind class {
  `n.b.a.s.c` `n.b.a.s.h.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`n.b.a.s.h` v1 @kind this, `n.b.a.s.c` v2 @kind object, `n.b.a.g` v3 @kind object) @signature `Ln/b/a/s/h;.<init>:(Ln/b/a/s/c;Ln/b/a/g;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3fbd20.  call temp:= `t`() @signature `Ln/b/a/d;.t:()Ln/b/a/d;` @kind static;
  #L3fbd26.  v0:= temp @kind object;
  #L3fbd28.  call `<init>`(v1, v0, v3) @signature `Ln/b/a/t/l;.<init>:(Ln/b/a/d;Ln/b/a/g;)V` @kind direct;
  #L3fbd2e.  v1.`n.b.a.s.h.d` @type ^`n.b.a.s.c` := v2 @kind object;
  #L3fbd32.  return @kind void;
}
procedure `int` `a`(`n.b.a.s.h` v1 @kind this, `long` v2 ) @signature `Ln/b/a/s/h;.a:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fbbf8.  v0:= v1.`n.b.a.s.h.d` @type ^`n.b.a.s.c` @kind object;
  #L3fbbfc.  call temp:= `g`(v0, v2) @signature `Ln/b/a/s/c;.g:(J)I` @kind virtual;
  #L3fbc02.  v2:= temp;
  #L3fbc04.  return v2;
}
procedure `int` `c`(`n.b.a.s.h` v1 @kind this) @signature `Ln/b/a/s/h;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fbc18.  v0:= 53I;
  #L3fbc1c.  return v0;
}
procedure `long` `c`(`n.b.a.s.h` v2 @kind this, `long` v3 ) @signature `Ln/b/a/s/h;.c:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fbc94.  v0:= 259200000L;
  #L3fbc9a.  v3:= v3 + v0 @kind long;
  #L3fbc9c.  call temp:= `c`(v2, v3) @signature `Ln/b/a/t/l;.c:(J)J` @kind super;
  #L3fbca2.  v3:= temp @kind wide;
  #L3fbca4.  return v3 @kind wide;
}
procedure `int` `d`(`n.b.a.s.h` v1 @kind this) @signature `Ln/b/a/s/h;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fbc80.  v0:= 1I;
  #L3fbc82.  return v0;
}
procedure `int` `d`(`n.b.a.s.h` v1 @kind this, `long` v2 , `int` v4 ) @signature `Ln/b/a/s/h;.d:(JI)I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3fbc5c.  v0:= 52I;
  #L3fbc60.  if v4 <= v0 then goto L3fbc6c;
  #L3fbc64.  call temp:= `i`(v1, v2) @signature `Ln/b/a/s/h;.i:(J)I` @kind virtual;
  #L3fbc6a.  v0:= temp;
  #L3fbc6c.  return v0;
}
procedure `long` `d`(`n.b.a.s.h` v2 @kind this, `long` v3 ) @signature `Ln/b/a/s/h;.d:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fbcb8.  v0:= 259200000L;
  #L3fbcbe.  v3:= v3 + v0 @kind long;
  #L3fbcc0.  call temp:= `d`(v2, v3) @signature `Ln/b/a/t/l;.d:(J)J` @kind super;
  #L3fbcc6.  v3:= temp @kind wide;
  #L3fbcc8.  v3:= v3 - v0 @kind long;
  #L3fbcca.  return v3 @kind wide;
}
procedure `long` `e`(`n.b.a.s.h` v2 @kind this, `long` v3 ) @signature `Ln/b/a/s/h;.e:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fbcdc.  v0:= 259200000L;
  #L3fbce2.  v3:= v3 + v0 @kind long;
  #L3fbce4.  call temp:= `e`(v2, v3) @signature `Ln/b/a/t/l;.e:(J)J` @kind super;
  #L3fbcea.  v3:= temp @kind wide;
  #L3fbcec.  v3:= v3 - v0 @kind long;
  #L3fbcee.  return v3 @kind wide;
}
procedure `n.b.a.g` `f`(`n.b.a.s.h` v1 @kind this) @signature `Ln/b/a/s/h;.f:()Ln/b/a/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fbd00.  v0:= v1.`n.b.a.s.h.d` @type ^`n.b.a.s.c` @kind object;
  #L3fbd04.  call temp:= `F`(v0) @signature `Ln/b/a/s/a;.F:()Ln/b/a/g;` @kind virtual;
  #L3fbd0a.  v0:= temp @kind object;
  #L3fbd0c.  return v0 @kind object;
}
procedure `int` `i`(`n.b.a.s.h` v1 @kind this, `long` v2 ) @signature `Ln/b/a/s/h;.i:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fbc30.  v0:= v1.`n.b.a.s.h.d` @type ^`n.b.a.s.c` @kind object;
  #L3fbc34.  call temp:= `h`(v0, v2) @signature `Ln/b/a/s/c;.h:(J)I` @kind virtual;
  #L3fbc3a.  v2:= temp;
  #L3fbc3c.  v3:= v1.`n.b.a.s.h.d` @type ^`n.b.a.s.c` @kind object;
  #L3fbc40.  call temp:= `d`(v3, v2) @signature `Ln/b/a/s/c;.d:(I)I` @kind virtual;
  #L3fbc46.  v2:= temp;
  #L3fbc48.  return v2;
}
