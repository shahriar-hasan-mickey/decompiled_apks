record `n.b.a.s.r` @kind class @AccessFlag  extends `n.b.a.t.d` @kind class {
}
global `n.b.a.c` `@@n.b.a.s.r.c` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/b/a/s/r;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3fd448.  v0:= new `n.b.a.s.r`;
  #L3fd44c.  call `<init>`(v0) @signature `Ln/b/a/s/r;.<init>:()V` @kind direct;
  #L3fd452.  `@@n.b.a.s.r.c` @type ^`n.b.a.c` := v0 @kind object;
  #L3fd456.  return @kind void;
}
procedure `void` `<init>`(`n.b.a.s.r` v2 @kind this) @signature `Ln/b/a/s/r;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3fd468.  call temp:= `Z`() @signature `Ln/b/a/s/p;.Z:()Ln/b/a/s/p;` @kind static;
  #L3fd46e.  v0:= temp @kind object;
  #L3fd470.  call temp:= `H`(v0) @signature `Ln/b/a/s/a;.H:()Ln/b/a/c;` @kind virtual;
  #L3fd476.  v0:= temp @kind object;
  #L3fd478.  call temp:= `y`() @signature `Ln/b/a/d;.y:()Ln/b/a/d;` @kind static;
  #L3fd47e.  v1:= temp @kind object;
  #L3fd480.  call `<init>`(v2, v0, v1) @signature `Ln/b/a/t/d;.<init>:(Ln/b/a/c;Ln/b/a/d;)V` @kind direct;
  #L3fd486.  return @kind void;
}
procedure `int` `a`(`n.b.a.s.r` v1 @kind this, `long` v2 ) @signature `Ln/b/a/s/r;.a:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd2f4.  call temp:= `j`(v1) @signature `Ln/b/a/t/d;.j:()Ln/b/a/c;` @kind virtual;
  #L3fd2fa.  v0:= temp @kind object;
  #L3fd2fc.  call temp:= `a`(v0, v2) @signature `Ln/b/a/c;.a:(J)I` @kind virtual;
  #L3fd302.  v2:= temp;
  #L3fd304.  if v2 >= 0 then goto L3fd30a;
  #L3fd308.  v2:= -v2 @kind int;
  #L3fd30a.  return v2;
}
procedure `long` `a`(`n.b.a.s.r` v1 @kind this, `long` v2 , `int` v4 ) @signature `Ln/b/a/s/r;.a:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd354.  call temp:= `j`(v1) @signature `Ln/b/a/t/d;.j:()Ln/b/a/c;` @kind virtual;
  #L3fd35a.  v0:= temp @kind object;
  #L3fd35c.  call temp:= `a`(v0, v2, v4) @signature `Ln/b/a/c;.a:(JI)J` @kind virtual;
  #L3fd362.  v2:= temp @kind wide;
  #L3fd364.  return v2 @kind wide;
}
procedure `long` `b`(`n.b.a.s.r` v2 @kind this, `long` v3 , `int` v5 ) @signature `Ln/b/a/s/r;.b:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fd3e4.  call temp:= `c`(v2) @signature `Ln/b/a/s/r;.c:()I` @kind virtual;
  #L3fd3ea.  v0:= temp;
  #L3fd3ec.  v1:= 0I;
  #L3fd3ee.  call `a`(v2, v5, v1, v0) @signature `Ln/b/a/t/g;.a:(Ln/b/a/c;III)V` @kind static;
  #L3fd3f4.  call temp:= `j`(v2) @signature `Ln/b/a/t/d;.j:()Ln/b/a/c;` @kind virtual;
  #L3fd3fa.  v0:= temp @kind object;
  #L3fd3fc.  call temp:= `a`(v0, v3) @signature `Ln/b/a/c;.a:(J)I` @kind virtual;
  #L3fd402.  v0:= temp;
  #L3fd404.  if v0 >= 0 then goto L3fd40a;
  #L3fd408.  v5:= -v5 @kind int;
  #L3fd40a.  call temp:= `b`(v2, v3, v5) @signature `Ln/b/a/t/d;.b:(JI)J` @kind super;
  #L3fd410.  v3:= temp @kind wide;
  #L3fd412.  return v3 @kind wide;
}
procedure `int` `c`(`n.b.a.s.r` v1 @kind this) @signature `Ln/b/a/s/r;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd31c.  call temp:= `j`(v1) @signature `Ln/b/a/t/d;.j:()Ln/b/a/c;` @kind virtual;
  #L3fd322.  v0:= temp @kind object;
  #L3fd324.  call temp:= `c`(v0) @signature `Ln/b/a/c;.c:()I` @kind virtual;
  #L3fd32a.  v0:= temp;
  #L3fd32c.  return v0;
}
procedure `long` `c`(`n.b.a.s.r` v1 @kind this, `long` v2 ) @signature `Ln/b/a/s/r;.c:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd378.  call temp:= `j`(v1) @signature `Ln/b/a/t/d;.j:()Ln/b/a/c;` @kind virtual;
  #L3fd37e.  v0:= temp @kind object;
  #L3fd380.  call temp:= `c`(v0, v2) @signature `Ln/b/a/c;.c:(J)J` @kind virtual;
  #L3fd386.  v2:= temp @kind wide;
  #L3fd388.  return v2 @kind wide;
}
procedure `int` `d`(`n.b.a.s.r` v1 @kind this) @signature `Ln/b/a/s/r;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd340.  v0:= 0I;
  #L3fd342.  return v0;
}
procedure `long` `d`(`n.b.a.s.r` v1 @kind this, `long` v2 ) @signature `Ln/b/a/s/r;.d:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd39c.  call temp:= `j`(v1) @signature `Ln/b/a/t/d;.j:()Ln/b/a/c;` @kind virtual;
  #L3fd3a2.  v0:= temp @kind object;
  #L3fd3a4.  call temp:= `d`(v0, v2) @signature `Ln/b/a/c;.d:(J)J` @kind virtual;
  #L3fd3aa.  v2:= temp @kind wide;
  #L3fd3ac.  return v2 @kind wide;
}
procedure `long` `e`(`n.b.a.s.r` v1 @kind this, `long` v2 ) @signature `Ln/b/a/s/r;.e:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd3c0.  call temp:= `j`(v1) @signature `Ln/b/a/t/d;.j:()Ln/b/a/c;` @kind virtual;
  #L3fd3c6.  v0:= temp @kind object;
  #L3fd3c8.  call temp:= `e`(v0, v2) @signature `Ln/b/a/c;.e:(J)J` @kind virtual;
  #L3fd3ce.  v2:= temp @kind wide;
  #L3fd3d0.  return v2 @kind wide;
}
procedure `n.b.a.g` `f`(`n.b.a.s.r` v1 @kind this) @signature `Ln/b/a/s/r;.f:()Ln/b/a/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fd424.  call temp:= `Z`() @signature `Ln/b/a/s/p;.Z:()Ln/b/a/s/p;` @kind static;
  #L3fd42a.  v0:= temp @kind object;
  #L3fd42c.  call temp:= `j`(v0) @signature `Ln/b/a/s/a;.j:()Ln/b/a/g;` @kind virtual;
  #L3fd432.  v0:= temp @kind object;
  #L3fd434.  return v0 @kind object;
}
