record `n.b.a.k` @kind class @AccessFlag PUBLIC_FINAL extends `n.b.a.r.b` @kind class, `n.b.a.p` @kind interface, `java.io.Serializable` @kind interface {
  `long` `n.b.a.k.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<clinit>`() @signature `Ln/b/a/k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3f8dd4.  v0:= new `n.b.a.k`;
  #L3f8dd8.  v1:= 0L;
  #L3f8ddc.  call `<init>`(v0, v1) @signature `Ln/b/a/k;.<init>:(J)V` @kind direct;
  #L3f8de2.  return @kind void;
}
procedure `void` `<init>`(`n.b.a.k` v0 @kind this, `long` v1 ) @signature `Ln/b/a/k;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f8df4.  call `<init>`(v0) @signature `Ln/b/a/r/b;.<init>:()V` @kind direct;
  #L3f8dfa.  v0.`n.b.a.k.b` @type ^`long` := v1 @kind wide;
  #L3f8dfe.  return @kind void;
}
procedure `long` `f`(`n.b.a.k` v2 @kind this) @signature `Ln/b/a/k;.f:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f8da0.  v0:= v2.`n.b.a.k.b` @type ^`long` @kind wide;
  #L3f8da4.  return v0 @kind wide;
}
procedure `n.b.a.a` `g`(`n.b.a.k` v1 @kind this) @signature `Ln/b/a/k;.g:()Ln/b/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f8db8.  call temp:= `O`() @signature `Ln/b/a/s/q;.O:()Ln/b/a/s/q;` @kind static;
  #L3f8dbe.  v0:= temp @kind object;
  #L3f8dc0.  return v0 @kind object;
}
