record `n.b.a.l$a` @kind class @AccessFlag PUBLIC_FINAL extends `n.b.a.t.a` @kind class {
  `n.b.a.l` `n.b.a.l$a.b` @AccessFlag PRIVATE;
  `n.b.a.c` `n.b.a.l$a.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`n.b.a.l$a` v0 @kind this, `n.b.a.l` v1 @kind object, `n.b.a.c` v2 @kind object) @signature `Ln/b/a/l$a;.<init>:(Ln/b/a/l;Ln/b/a/c;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3f8ea4.  call `<init>`(v0) @signature `Ln/b/a/t/a;.<init>:()V` @kind direct;
  #L3f8eaa.  v0.`n.b.a.l$a.b` @type ^`n.b.a.l` := v1 @kind object;
  #L3f8eae.  v0.`n.b.a.l$a.c` @type ^`n.b.a.c` := v2 @kind object;
  #L3f8eb2.  return @kind void;
}
procedure `n.b.a.l` `a`(`n.b.a.l$a` v4 @kind this, `int` v5 ) @signature `Ln/b/a/l$a;.a:(I)Ln/b/a/l;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f8e68.  v0:= v4.`n.b.a.l$a.b` @type ^`n.b.a.l` @kind object;
  #L3f8e6c.  call temp:= `c`(v4) @signature `Ln/b/a/l$a;.c:()Ln/b/a/c;` @kind virtual;
  #L3f8e72.  v1:= temp @kind object;
  #L3f8e74.  v2:= v4.`n.b.a.l$a.b` @type ^`n.b.a.l` @kind object;
  #L3f8e78.  call temp:= `f`(v2) @signature `Ln/b/a/r/c;.f:()J` @kind virtual;
  #L3f8e7e.  v2:= temp @kind wide;
  #L3f8e80.  call temp:= `b`(v1, v2, v5) @signature `Ln/b/a/c;.b:(JI)J` @kind virtual;
  #L3f8e86.  v1:= temp @kind wide;
  #L3f8e88.  call `a`(v0, v1) @signature `Ln/b/a/l;.a:(J)V` @kind virtual;
  #L3f8e8e.  v5:= v4.`n.b.a.l$a.b` @type ^`n.b.a.l` @kind object;
  #L3f8e92.  return v5 @kind object;
}
procedure `n.b.a.a` `b`(`n.b.a.l$a` v1 @kind this) @signature `Ln/b/a/l$a;.b:()Ln/b/a/a;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3f8e30.  v0:= v1.`n.b.a.l$a.b` @type ^`n.b.a.l` @kind object;
  #L3f8e34.  call temp:= `g`(v0) @signature `Ln/b/a/r/c;.g:()Ln/b/a/a;` @kind virtual;
  #L3f8e3a.  v0:= temp @kind object;
  #L3f8e3c.  return v0 @kind object;
}
procedure `n.b.a.c` `c`(`n.b.a.l$a` v1 @kind this) @signature `Ln/b/a/l$a;.c:()Ln/b/a/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f8e50.  v0:= v1.`n.b.a.l$a.c` @type ^`n.b.a.c` @kind object;
  #L3f8e54.  return v0 @kind object;
}
procedure `long` `f`(`n.b.a.l$a` v2 @kind this) @signature `Ln/b/a/l$a;.f:()J` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3f8e10.  v0:= v2.`n.b.a.l$a.b` @type ^`n.b.a.l` @kind object;
  #L3f8e14.  call temp:= `f`(v0) @signature `Ln/b/a/r/c;.f:()J` @kind virtual;
  #L3f8e1a.  v0:= temp @kind wide;
  #L3f8e1c.  return v0 @kind wide;
}
