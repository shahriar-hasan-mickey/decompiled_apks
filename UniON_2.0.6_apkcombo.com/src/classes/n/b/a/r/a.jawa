record `n.b.a.r.a` @kind class @AccessFlag PUBLIC_ABSTRACT extends `n.b.a.r.b` @kind class, `n.b.a.o` @kind interface {
}
procedure `void` `<init>`(`n.b.a.r.a` v0 @kind this) @signature `Ln/b/a/r/a;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3f9214.  call `<init>`(v0) @signature `Ln/b/a/r/b;.<init>:()V` @kind direct;
  #L3f921a.  return @kind void;
}
procedure `int` `d`(`n.b.a.r.a` v3 @kind this) @signature `Ln/b/a/r/a;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f9128.  call temp:= `g`(v3) @signature `Ln/b/a/p;.g:()Ln/b/a/a;` @kind interface;
  #L3f912e.  v0:= temp @kind object;
  #L3f9130.  call temp:= `e`(v0) @signature `Ln/b/a/a;.e:()Ln/b/a/c;` @kind virtual;
  #L3f9136.  v0:= temp @kind object;
  #L3f9138.  call temp:= `f`(v3) @signature `Ln/b/a/p;.f:()J` @kind interface;
  #L3f913e.  v1:= temp @kind wide;
  #L3f9140.  call temp:= `a`(v0, v1) @signature `Ln/b/a/c;.a:(J)I` @kind virtual;
  #L3f9146.  v0:= temp;
  #L3f9148.  return v0;
}
procedure `int` `e`(`n.b.a.r.a` v3 @kind this) @signature `Ln/b/a/r/a;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f915c.  call temp:= `g`(v3) @signature `Ln/b/a/p;.g:()Ln/b/a/a;` @kind interface;
  #L3f9162.  v0:= temp @kind object;
  #L3f9164.  call temp:= `w`(v0) @signature `Ln/b/a/a;.w:()Ln/b/a/c;` @kind virtual;
  #L3f916a.  v0:= temp @kind object;
  #L3f916c.  call temp:= `f`(v3) @signature `Ln/b/a/p;.f:()J` @kind interface;
  #L3f9172.  v1:= temp @kind wide;
  #L3f9174.  call temp:= `a`(v0, v1) @signature `Ln/b/a/c;.a:(J)I` @kind virtual;
  #L3f917a.  v0:= temp;
  #L3f917c.  return v0;
}
procedure `int` `h`(`n.b.a.r.a` v3 @kind this) @signature `Ln/b/a/r/a;.h:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f9190.  call temp:= `g`(v3) @signature `Ln/b/a/p;.g:()Ln/b/a/a;` @kind interface;
  #L3f9196.  v0:= temp @kind object;
  #L3f9198.  call temp:= `D`(v0) @signature `Ln/b/a/a;.D:()Ln/b/a/c;` @kind virtual;
  #L3f919e.  v0:= temp @kind object;
  #L3f91a0.  call temp:= `f`(v3) @signature `Ln/b/a/p;.f:()J` @kind interface;
  #L3f91a6.  v1:= temp @kind wide;
  #L3f91a8.  call temp:= `a`(v0, v1) @signature `Ln/b/a/c;.a:(J)I` @kind virtual;
  #L3f91ae.  v0:= temp;
  #L3f91b0.  return v0;
}
procedure `int` `i`(`n.b.a.r.a` v3 @kind this) @signature `Ln/b/a/r/a;.i:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f91c4.  call temp:= `g`(v3) @signature `Ln/b/a/p;.g:()Ln/b/a/a;` @kind interface;
  #L3f91ca.  v0:= temp @kind object;
  #L3f91cc.  call temp:= `H`(v0) @signature `Ln/b/a/a;.H:()Ln/b/a/c;` @kind virtual;
  #L3f91d2.  v0:= temp @kind object;
  #L3f91d4.  call temp:= `f`(v3) @signature `Ln/b/a/p;.f:()J` @kind interface;
  #L3f91da.  v1:= temp @kind wide;
  #L3f91dc.  call temp:= `a`(v0, v1) @signature `Ln/b/a/c;.a:(J)I` @kind virtual;
  #L3f91e2.  v0:= temp;
  #L3f91e4.  return v0;
}
procedure `java.lang.String` `toString`(`n.b.a.r.a` v1 @kind this) @signature `Ln/b/a/r/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f91f8.  call temp:= `toString`(v1) @signature `Ln/b/a/r/b;.toString:()Ljava/lang/String;` @kind super;
  #L3f91fe.  v0:= temp @kind object;
  #L3f9200.  return v0 @kind object;
}
