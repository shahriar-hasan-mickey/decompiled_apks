record `n.b.a.r.b` @kind class @AccessFlag PUBLIC_ABSTRACT extends `n.b.a.p` @kind interface {
}
procedure `void` `<init>`(`n.b.a.r.b` v0 @kind this) @signature `Ln/b/a/r/b;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3f9378.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f937e.  return @kind void;
}
procedure `int` `a`(`n.b.a.r.b` v5 @kind this, `n.b.a.p` v6 @kind object) @signature `Ln/b/a/r/b;.a:(Ln/b/a/p;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3f92b0.  v0:= 0I;
  #L3f92b2.  if v5 != v6 then goto L3f92b8;
  #L3f92b6.  return v0;
  #L3f92b8.  call temp:= `f`(v6) @signature `Ln/b/a/p;.f:()J` @kind interface;
  #L3f92be.  v1:= temp @kind wide;
  #L3f92c0.  call temp:= `f`(v5) @signature `Ln/b/a/p;.f:()J` @kind interface;
  #L3f92c6.  v3:= temp @kind wide;
  #L3f92c8.  v6:= lcmp(v3, v1);
  #L3f92cc.  if v6 != 0 then goto L3f92d2;
  #L3f92d0.  return v0;
  #L3f92d2.  if v6 >= 0 then goto L3f92da;
  #L3f92d6.  v6:= -1I;
  #L3f92d8.  return v6;
  #L3f92da.  v6:= 1I;
  #L3f92dc.  return v6;
}
procedure `java.util.Date` `c`(`n.b.a.r.b` v3 @kind this) @signature `Ln/b/a/r/b;.c:()Ljava/util/Date;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f9354.  v0:= new `java.util.Date`;
  #L3f9358.  call temp:= `f`(v3) @signature `Ln/b/a/p;.f:()J` @kind interface;
  #L3f935e.  v1:= temp @kind wide;
  #L3f9360.  call `<init>`(v0, v1) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L3f9366.  return v0 @kind object;
}
procedure `int` `compareTo`(`n.b.a.r.b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Ln/b/a/r/b;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3f9290.  v1:= (`n.b.a.p`) v1 @kind object;
  #L3f9294.  call temp:= `a`(v0, v1) @signature `Ln/b/a/r/b;.a:(Ln/b/a/p;)I` @kind virtual;
  #L3f929a.  v1:= temp;
  #L3f929c.  return v1;
}
procedure `boolean` `equals`(`n.b.a.r.b` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Ln/b/a/r/b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3f922c.  v0:= 1I;
  #L3f922e.  if v7 != v8 then goto L3f9234;
  #L3f9232.  return v0;
  #L3f9234.  v1:= instanceof @variable v8 @type ^`n.b.a.p` @kind boolean;
  #L3f9238.  v2:= 0I;
  #L3f923a.  if v1 != 0 then goto L3f9240;
  #L3f923e.  return v2;
  #L3f9240.  v8:= (`n.b.a.p`) v8 @kind object;
  #L3f9244.  call temp:= `f`(v7) @signature `Ln/b/a/p;.f:()J` @kind interface;
  #L3f924a.  v3:= temp @kind wide;
  #L3f924c.  call temp:= `f`(v8) @signature `Ln/b/a/p;.f:()J` @kind interface;
  #L3f9252.  v5:= temp @kind wide;
  #L3f9254.  v1:= lcmp(v3, v5);
  #L3f9258.  if v1 != 0 then goto L3f927a;
  #L3f925c.  call temp:= `g`(v7) @signature `Ln/b/a/p;.g:()Ln/b/a/a;` @kind interface;
  #L3f9262.  v1:= temp @kind object;
  #L3f9264.  call temp:= `g`(v8) @signature `Ln/b/a/p;.g:()Ln/b/a/a;` @kind interface;
  #L3f926a.  v8:= temp @kind object;
  #L3f926c.  call temp:= `a`(v1, v8) @signature `Ln/b/a/t/g;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3f9272.  v8:= temp;
  #L3f9274.  if v8 == 0 then goto L3f927a;
  #L3f9278.  goto L3f927c;
  #L3f927a.  v0:= 0I;
  #L3f927c.  return v0;
}
procedure `int` `hashCode`(`n.b.a.r.b` v5 @kind this) @signature `Ln/b/a/r/b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3f92f0.  call temp:= `f`(v5) @signature `Ln/b/a/p;.f:()J` @kind interface;
  #L3f92f6.  v0:= temp @kind wide;
  #L3f92f8.  call temp:= `f`(v5) @signature `Ln/b/a/p;.f:()J` @kind interface;
  #L3f92fe.  v2:= temp @kind wide;
  #L3f9300.  v4:= 32I;
  #L3f9304.  v2:= v2 ^>> v4 @kind long;
  #L3f9306.  v0:= v0 ^~ v2 @kind long;
  #L3f9308.  v1:= (`int`) v0 @kind l2i;
  #L3f930a.  call temp:= `g`(v5) @signature `Ln/b/a/p;.g:()Ln/b/a/a;` @kind interface;
  #L3f9310.  v0:= temp @kind object;
  #L3f9312.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3f9318.  v0:= temp;
  #L3f931a.  v1:= v1 + v0 @kind int;
  #L3f931c.  return v1;
}
procedure `java.lang.String` `toString`(`n.b.a.r.b` v1 @kind this) @signature `Ln/b/a/r/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f9330.  call temp:= `c`() @signature `Ln/b/a/u/j;.c:()Ln/b/a/u/b;` @kind static;
  #L3f9336.  v0:= temp @kind object;
  #L3f9338.  call temp:= `a`(v0, v1) @signature `Ln/b/a/u/b;.a:(Ln/b/a/p;)Ljava/lang/String;` @kind virtual;
  #L3f933e.  v0:= temp @kind object;
  #L3f9340.  return v0 @kind object;
}
