record `n.b.a.e` @kind class @AccessFlag PUBLIC {
}
global `n.b.a.e$a` `@@n.b.a.e.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `n.b.a.e$a` `@@n.b.a.e.b` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `java.util.concurrent.atomic.AtomicReference` `@@n.b.a.e.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ln/b/a/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3f76bc.  v0:= new `n.b.a.e$b`;
  #L3f76c0.  call `<init>`(v0) @signature `Ln/b/a/e$b;.<init>:()V` @kind direct;
  #L3f76c6.  `@@n.b.a.e.a` @type ^`n.b.a.e$a` := v0 @kind object;
  #L3f76ca.  v0:= `@@n.b.a.e.a` @type ^`n.b.a.e$a` @kind object;
  #L3f76ce.  `@@n.b.a.e.b` @type ^`n.b.a.e$a` := v0 @kind object;
  #L3f76d2.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L3f76d6.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L3f76dc.  `@@n.b.a.e.c` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L3f76e0.  return @kind void;
}
procedure `java.text.DateFormatSymbols` `a`(`java.util.Locale` v5 @kind object) @signature `Ln/b/a/e;.a:(Ljava/util/Locale;)Ljava/text/DateFormatSymbols;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3f74b4.  v0:= constclass @type ^`java.text.DateFormatSymbols` @kind object;
  #L3f74b8.  v1:= 1I;
  #L3f74ba.  v2:= new `java.lang.Class`[v1];
  #L3f74be.  v3:= constclass @type ^`java.util.Locale` @kind object;
  #L3f74c2.  v4:= 0I;
  #L3f74c4.  v2[v4]:= v3 @kind object;
  #L3f74c8.  v3:= "getInstance" @kind object;
  #L3f74cc.  call temp:= `getMethod`(v0, v3, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L3f74d2.  v0:= temp @kind object;
  #L3f74d4.  v2:= 0I;
  #L3f74d6.  v1:= new `java.lang.Object`[v1];
  #L3f74da.  v1[v4]:= v5 @kind object;
  #L3f74de.  call temp:= `invoke`(v0, v2, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f74e4.  v0:= temp @kind object;
  #L3f74e6.  v0:= (`java.text.DateFormatSymbols`) v0 @kind object;
  #L3f74ea.  return v0 @kind object;
  #L3f74ec.  v0:= new `java.text.DateFormatSymbols`;
  #L3f74f0.  call `<init>`(v0, v5) @signature `Ljava/text/DateFormatSymbols;.<init>:(Ljava/util/Locale;)V` @kind direct;
  #L3f74f6.  return v0 @kind object;
  catch `java.lang.Exception` @[L3f74b4..L3f74c8] goto L3f74ec;
  catch `java.lang.Exception` @[L3f74cc..L3f74ea] goto L3f74ec;
}
procedure `java.util.Map` `a`() @signature `Ln/b/a/e;.a:()Ljava/util/Map;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3f7520.  v0:= new `java.util.LinkedHashMap`;
  #L3f7524.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L3f752a.  v1:= `@@n.b.a.f.c` @type ^`n.b.a.f` @kind object;
  #L3f752e.  v2:= "UT" @kind object;
  #L3f7532.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3f7538.  v1:= `@@n.b.a.f.c` @type ^`n.b.a.f` @kind object;
  #L3f753c.  v2:= "UTC" @kind object;
  #L3f7540.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3f7546.  v1:= `@@n.b.a.f.c` @type ^`n.b.a.f` @kind object;
  #L3f754a.  v2:= "GMT" @kind object;
  #L3f754e.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3f7554.  v1:= "America/New_York" @kind object;
  #L3f7558.  v2:= "EST" @kind object;
  #L3f755c.  call `a`(v0, v2, v1) @signature `Ln/b/a/e;.a:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3f7562.  v2:= "EDT" @kind object;
  #L3f7566.  call `a`(v0, v2, v1) @signature `Ln/b/a/e;.a:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3f756c.  v1:= "America/Chicago" @kind object;
  #L3f7570.  v2:= "CST" @kind object;
  #L3f7574.  call `a`(v0, v2, v1) @signature `Ln/b/a/e;.a:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3f757a.  v2:= "CDT" @kind object;
  #L3f757e.  call `a`(v0, v2, v1) @signature `Ln/b/a/e;.a:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3f7584.  v1:= "America/Denver" @kind object;
  #L3f7588.  v2:= "MST" @kind object;
  #L3f758c.  call `a`(v0, v2, v1) @signature `Ln/b/a/e;.a:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3f7592.  v2:= "MDT" @kind object;
  #L3f7596.  call `a`(v0, v2, v1) @signature `Ln/b/a/e;.a:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3f759c.  v1:= "America/Los_Angeles" @kind object;
  #L3f75a0.  v2:= "PST" @kind object;
  #L3f75a4.  call `a`(v0, v2, v1) @signature `Ln/b/a/e;.a:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3f75aa.  v2:= "PDT" @kind object;
  #L3f75ae.  call `a`(v0, v2, v1) @signature `Ln/b/a/e;.a:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3f75b4.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L3f75ba.  v0:= temp @kind object;
  #L3f75bc.  return v0 @kind object;
}
procedure `n.b.a.a` `a`(`n.b.a.a` v0 @kind object) @signature `Ln/b/a/e;.a:(Ln/b/a/a;)Ln/b/a/a;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L3f7668.  if v0 != 0 then goto L3f7674;
  #L3f766c.  call temp:= `N`() @signature `Ln/b/a/s/q;.N:()Ln/b/a/s/q;` @kind static;
  #L3f7672.  v0:= temp @kind object;
  #L3f7674.  return v0 @kind object;
}
procedure `n.b.a.a` `a`(`n.b.a.p` v0 @kind object) @signature `Ln/b/a/e;.a:(Ln/b/a/p;)Ln/b/a/a;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;

  #L3f7688.  if v0 != 0 then goto L3f7696;
  #L3f768c.  call temp:= `N`() @signature `Ln/b/a/s/q;.N:()Ln/b/a/s/q;` @kind static;
  #L3f7692.  v0:= temp @kind object;
  #L3f7694.  return v0 @kind object;
  #L3f7696.  call temp:= `g`(v0) @signature `Ln/b/a/p;.g:()Ln/b/a/a;` @kind interface;
  #L3f769c.  v0:= temp @kind object;
  #L3f769e.  if v0 != 0 then goto L3f76aa;
  #L3f76a2.  call temp:= `N`() @signature `Ln/b/a/s/q;.N:()Ln/b/a/s/q;` @kind static;
  #L3f76a8.  v0:= temp @kind object;
  #L3f76aa.  return v0 @kind object;
}
procedure `void` `a`(`java.util.Map` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Ln/b/a/e;.a:(Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3f76f4.  call temp:= `b`(v2) @signature `Ln/b/a/f;.b:(Ljava/lang/String;)Ln/b/a/f;` @kind static;
  #L3f76fa.  v2:= temp @kind object;
  #L3f76fc.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3f7702.  return @kind void;
  catch `java.lang.RuntimeException` @[L3f76f4..L3f7702] goto L3f7702;
}
procedure `long` `b`() @signature `Ln/b/a/e;.b:()J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L3f7620.  v0:= `@@n.b.a.e.b` @type ^`n.b.a.e$a` @kind object;
  #L3f7624.  call temp:= `f`(v0) @signature `Ln/b/a/e$a;.f:()J` @kind interface;
  #L3f762a.  v0:= temp @kind wide;
  #L3f762c.  return v0 @kind wide;
}
procedure `long` `b`(`n.b.a.p` v2 @kind object) @signature `Ln/b/a/e;.b:(Ln/b/a/p;)J` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L3f7640.  if v2 != 0 then goto L3f764e;
  #L3f7644.  call temp:= `b`() @signature `Ln/b/a/e;.b:()J` @kind static;
  #L3f764a.  v0:= temp @kind wide;
  #L3f764c.  return v0 @kind wide;
  #L3f764e.  call temp:= `f`(v2) @signature `Ln/b/a/p;.f:()J` @kind interface;
  #L3f7654.  v0:= temp @kind wide;
  #L3f7656.  return v0 @kind wide;
}
procedure `java.util.Map` `c`() @signature `Ln/b/a/e;.c:()Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3f75d0.  v0:= `@@n.b.a.e.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L3f75d4.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3f75da.  v0:= temp @kind object;
  #L3f75dc.  v0:= (`java.util.Map`) v0 @kind object;
  #L3f75e0.  if v0 != 0 then goto L3f760e;
  #L3f75e4.  call temp:= `a`() @signature `Ln/b/a/e;.a:()Ljava/util/Map;` @kind static;
  #L3f75ea.  v0:= temp @kind object;
  #L3f75ec.  v1:= `@@n.b.a.e.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L3f75f0.  v2:= 0I;
  #L3f75f2.  call temp:= `compareAndSet`(v1, v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L3f75f8.  v1:= temp;
  #L3f75fa.  if v1 != 0 then goto L3f760e;
  #L3f75fe.  v0:= `@@n.b.a.e.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L3f7602.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3f7608.  v0:= temp @kind object;
  #L3f760a.  v0:= (`java.util.Map`) v0 @kind object;
  #L3f760e.  return v0 @kind object;
}
