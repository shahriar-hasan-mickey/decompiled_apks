record `n.b.a.u.c$d` @kind class @AccessFlag  extends `n.b.a.u.m` @kind interface, `n.b.a.u.k` @kind interface {
  `n.b.a.d` `n.b.a.u.c$d.b` @AccessFlag PRIVATE_FINAL;
  `int` `n.b.a.u.c$d.c` @AccessFlag PROTECTED;
  `int` `n.b.a.u.c$d.d` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`n.b.a.u.c$d` v0 @kind this, `n.b.a.d` v1 @kind object, `int` v2 , `int` v3 ) @signature `Ln/b/a/u/c$d;.<init>:(Ln/b/a/d;II)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L400e30.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L400e36.  v0.`n.b.a.u.c$d.b` @type ^`n.b.a.d` := v1 @kind object;
  #L400e3a.  v1:= 18I;
  #L400e3e.  if v3 <= v1 then goto L400e44;
  #L400e42.  goto L400e46;
  #L400e44.  v1:= v3;
  #L400e46.  v0.`n.b.a.u.c$d.c` @type ^`int` := v2;
  #L400e4a.  v0.`n.b.a.u.c$d.d` @type ^`int` := v1;
  #L400e4e.  return @kind void;
}
procedure `long`[] `a`(`n.b.a.u.c$d` v7 @kind this, `long` v8 , `n.b.a.c` v10 @kind object) @signature `Ln/b/a/u/c$d;.a:(JLn/b/a/c;)[J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L400cd4.  call temp:= `a`(v10) @signature `Ln/b/a/c;.a:()Ln/b/a/g;` @kind virtual;
  #L400cda.  v10:= temp @kind object;
  #L400cdc.  call temp:= `e`(v10) @signature `Ln/b/a/g;.e:()J` @kind virtual;
  #L400ce2.  v0:= temp @kind wide;
  #L400ce4.  v10:= v7.`n.b.a.u.c$d.d` @type ^`int`;
  #L400ce8.  goto L400dd0;
  #L400cee.  v2:= 1L;
  #L400cf2.  goto L400d9e;
  #L400cf4.  v2:= 1000000000000000000L;
  #L400cfe.  goto L400d9e;
  #L400d00.  v2:= 100000000000000000L;
  #L400d0a.  goto L400d9e;
  #L400d0c.  v2:= 10000000000000000L;
  #L400d16.  goto L400d9e;
  #L400d18.  v2:= 1000000000000000L;
  #L400d22.  goto L400d9e;
  #L400d24.  v2:= 100000000000000L;
  #L400d2e.  goto L400d9e;
  #L400d30.  v2:= 10000000000000L;
  #L400d3a.  goto L400d9e;
  #L400d3c.  v2:= 1000000000000L;
  #L400d46.  goto L400d9e;
  #L400d48.  v2:= 100000000000L;
  #L400d52.  goto L400d9e;
  #L400d54.  v2:= 10000000000L;
  #L400d5e.  goto L400d9e;
  #L400d60.  v2:= 1000000000L;
  #L400d66.  goto L400d9e;
  #L400d68.  v2:= 100000000L;
  #L400d6e.  goto L400d9e;
  #L400d70.  v2:= 10000000L;
  #L400d76.  goto L400d9e;
  #L400d78.  v2:= 1000000L;
  #L400d7e.  goto L400d9e;
  #L400d80.  v2:= 100000L;
  #L400d86.  goto L400d9e;
  #L400d88.  v2:= 10000L;
  #L400d8c.  goto L400d9e;
  #L400d8e.  v2:= 1000L;
  #L400d92.  goto L400d9e;
  #L400d94.  v2:= 100L;
  #L400d98.  goto L400d9e;
  #L400d9a.  v2:= 10L;
  #L400d9e.  v4:= v0 * v2 @kind long;
  #L400da2.  v4:= v4 / v2 @kind long;
  #L400da4.  v6:= lcmp(v4, v0);
  #L400da8.  if v6 != 0 then goto L400dc8;
  #L400dac.  v4:= 2I;
  #L400dae.  v4:= new `long`[v4];
  #L400db2.  v5:= 0I;
  #L400db4.  v8:= v8 * v2 @kind long;
  #L400db8.  v8:= v8 / v0 @kind long;
  #L400dba.  v4[v5]:= v8 @kind wide;
  #L400dbe.  v8:= 1I;
  #L400dc0.  v9:= (`long`) v10 @kind i2l;
  #L400dc2.  v4[v8]:= v9 @kind wide;
  #L400dc6.  return v4 @kind object;
  #L400dc8.  v10:= v10 + -1;
  #L400dcc.  goto L400ce8;
  #L400dce.  
  #L400dd0.  switch v10
                  | 1 => goto L400d9a
                  | 2 => goto L400d94
                  | 3 => goto L400d8e
                  | 4 => goto L400d88
                  | 5 => goto L400d80
                  | 6 => goto L400d78
                  | 7 => goto L400d70
                  | 8 => goto L400d68
                  | 9 => goto L400d60
                  | 10 => goto L400d54
                  | 11 => goto L400d48
                  | 12 => goto L400d3c
                  | 13 => goto L400d30
                  | 14 => goto L400d24
                  | 15 => goto L400d18
                  | 16 => goto L400d0c
                  | 17 => goto L400d00
                  | 18 => goto L400cf4
                  | else => goto L400cee;
}
procedure `int` `a`(`n.b.a.u.c$d` v11 @kind this, `n.b.a.u.e` v12 @kind object, `java.lang.CharSequence` v13 @kind object, `int` v14 ) @signature `Ln/b/a/u/c$d;.a:(Ln/b/a/u/e;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L400c00.  v0:= v11.`n.b.a.u.c$d.b` @type ^`n.b.a.d` @kind object;
  #L400c04.  call temp:= `a`(v12) @signature `Ln/b/a/u/e;.a:()Ln/b/a/a;` @kind virtual;
  #L400c0a.  v1:= temp @kind object;
  #L400c0c.  call temp:= `a`(v0, v1) @signature `Ln/b/a/d;.a:(Ln/b/a/a;)Ln/b/a/c;` @kind virtual;
  #L400c12.  v0:= temp @kind object;
  #L400c14.  v1:= v11.`n.b.a.u.c$d.d` @type ^`int`;
  #L400c18.  call temp:= `length`(v13) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L400c1e.  v2:= temp;
  #L400c20.  v2:= v2 - v14 @kind int;
  #L400c22.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L400c28.  v1:= temp;
  #L400c2a.  call temp:= `a`(v0) @signature `Ln/b/a/c;.a:()Ln/b/a/g;` @kind virtual;
  #L400c30.  v2:= temp @kind object;
  #L400c32.  call temp:= `e`(v2) @signature `Ln/b/a/g;.e:()J` @kind virtual;
  #L400c38.  v2:= temp @kind wide;
  #L400c3a.  v4:= 10L;
  #L400c3e.  v2:= v2 * v4 @kind long;
  #L400c42.  v6:= 0L;
  #L400c46.  v8:= 0I;
  #L400c48.  if v8 >= v1 then goto L400c7e;
  #L400c4c.  v9:= v14 + v8 @kind int;
  #L400c50.  call temp:= `charAt`(v13, v9) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L400c56.  v9:= temp;
  #L400c58.  v10:= 48I;
  #L400c5c.  if v9 < v10 then goto L400c7e;
  #L400c60.  v10:= 57I;
  #L400c64.  if v9 <= v10 then goto L400c6a;
  #L400c68.  goto L400c7e;
  #L400c6a.  v8:= v8 + 1;
  #L400c6e.  v2:= v2 / v4 @kind long;
  #L400c70.  v9:= v9 + -48;
  #L400c74.  v9:= (`long`) v9 @kind i2l;
  #L400c76.  v9:= v9 * v2 @kind long;
  #L400c7a.  v6:= v6 + v9 @kind long;
  #L400c7c.  goto L400c48;
  #L400c7e.  v6:= v6 / v4 @kind long;
  #L400c80.  if v8 != 0 then goto L400c88;
  #L400c84.  v12:= ~v14 @kind int;
  #L400c86.  return v12;
  #L400c88.  v1:= 2147483647L;
  #L400c8e.  v13:= lcmp(v6, v1);
  #L400c92.  if v13 <= 0 then goto L400c9a;
  #L400c96.  v12:= ~v14 @kind int;
  #L400c98.  return v12;
  #L400c9a.  v13:= new `n.b.a.t.k`;
  #L400c9e.  call temp:= `n`() @signature `Ln/b/a/d;.n:()Ln/b/a/d;` @kind static;
  #L400ca4.  v1:= temp @kind object;
  #L400ca6.  v2:= `@@n.b.a.t.i.b` @type ^`n.b.a.g` @kind object;
  #L400caa.  call temp:= `a`(v0) @signature `Ln/b/a/c;.a:()Ln/b/a/g;` @kind virtual;
  #L400cb0.  v0:= temp @kind object;
  #L400cb2.  call `<init>`(v13, v1, v2, v0) @signature `Ln/b/a/t/k;.<init>:(Ln/b/a/d;Ln/b/a/g;Ln/b/a/g;)V` @kind direct;
  #L400cb8.  v0:= (`int`) v6 @kind l2i;
  #L400cba.  call `a`(v12, v13, v0) @signature `Ln/b/a/u/e;.a:(Ln/b/a/c;I)V` @kind virtual;
  #L400cc0.  v14:= v14 + v8 @kind int;
  #L400cc2.  return v14;
}
procedure `void` `a`(`n.b.a.u.c$d` v7 @kind this, `java.lang.Appendable` v8 @kind object, `long` v9 , `n.b.a.a` v11 @kind object) @signature `Ln/b/a/u/c$d;.a:(Ljava/lang/Appendable;JLn/b/a/a;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L400e60.  v0:= v7.`n.b.a.u.c$d.b` @type ^`n.b.a.d` @kind object;
  #L400e64.  call temp:= `a`(v0, v11) @signature `Ln/b/a/d;.a:(Ln/b/a/a;)Ln/b/a/c;` @kind virtual;
  #L400e6a.  v11:= temp @kind object;
  #L400e6c.  v0:= v7.`n.b.a.u.c$d.c` @type ^`int`;
  #L400e70.  call temp:= `c`(v11, v9) @signature `Ln/b/a/c;.c:(J)J` @kind virtual;
  #L400e76.  v9:= temp @kind wide;
  #L400e78.  v1:= 0L;
  #L400e7c.  v3:= 48I;
  #L400e80.  v4:= lcmp(v9, v1);
  #L400e84.  if v4 != 0 then goto L400e9a;
  #L400e88.  v0:= v0 + -1;
  #L400e8c.  if v0 < 0 then goto L400e98;
  #L400e90.  call temp:= `append`(v8, v3) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L400e96.  goto L400e88;
  #L400e98.  return @kind void;
  #L400e9a.  call temp:= `a`(v7, v9, v11) @signature `Ln/b/a/u/c$d;.a:(JLn/b/a/c;)[J` @kind direct;
  #L400ea0.  v9:= temp @kind object;
  #L400ea2.  v10:= 0I;
  #L400ea4.  v1:= v9[v10] @kind wide;
  #L400ea8.  v11:= 1I;
  #L400eaa.  v4:= v9[v11] @kind wide;
  #L400eae.  v9:= (`int`) v4 @kind l2i;
  #L400eb0.  v4:= 2147483647L;
  #L400eb6.  v4:= v4 ^& v1 @kind long;
  #L400eb8.  v6:= lcmp(v4, v1);
  #L400ebc.  if v6 != 0 then goto L400ecc;
  #L400ec0.  v2:= (`int`) v1 @kind l2i;
  #L400ec2.  call temp:= `toString`(v2) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L400ec8.  v1:= temp @kind object;
  #L400eca.  goto L400ed4;
  #L400ecc.  call temp:= `toString`(v1) @signature `Ljava/lang/Long;.toString:(J)Ljava/lang/String;` @kind static;
  #L400ed2.  v1:= temp @kind object;
  #L400ed4.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L400eda.  v2:= temp;
  #L400edc.  if v2 >= v9 then goto L400ef0;
  #L400ee0.  call temp:= `append`(v8, v3) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L400ee6.  v0:= v0 + -1;
  #L400eea.  v9:= v9 + -1;
  #L400eee.  goto L400edc;
  #L400ef0.  if v0 >= v9 then goto L400f3e;
  #L400ef4.  if v0 >= v9 then goto L400f18;
  #L400ef8.  if v2 <= v11 then goto L400f18;
  #L400efc.  v4:= v2 + -1;
  #L400f00.  call temp:= `charAt`(v1, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L400f06.  v4:= temp;
  #L400f08.  if v4 == v3 then goto L400f0e;
  #L400f0c.  goto L400f18;
  #L400f0e.  v9:= v9 + -1;
  #L400f12.  v2:= v2 + -1;
  #L400f16.  goto L400ef4;
  #L400f18.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L400f1e.  v9:= temp;
  #L400f20.  if v2 >= v9 then goto L400f3e;
  #L400f24.  if v10 >= v2 then goto L400f3c;
  #L400f28.  call temp:= `charAt`(v1, v10) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L400f2e.  v9:= temp;
  #L400f30.  call temp:= `append`(v8, v9) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L400f36.  v10:= v10 + 1;
  #L400f3a.  goto L400f24;
  #L400f3c.  return @kind void;
  #L400f3e.  call temp:= `append`(v8, v1) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L400f44.  return @kind void;
  #L400f46.  call `a`(v8, v0) @signature `Ln/b/a/u/c;.a:(Ljava/lang/Appendable;I)V` @kind static;
  #L400f4c.  return @kind void;
  catch `java.lang.RuntimeException` @[L400e70..L400e78] goto L400f46;
}
procedure `void` `a`(`n.b.a.u.c$d` v0 @kind this, `java.lang.Appendable` v1 @kind object, `long` v2 , `n.b.a.a` v4 @kind object, `int` v5 , `n.b.a.f` v6 @kind object, `java.util.Locale` v7 @kind object) @signature `Ln/b/a/u/c$d;.a:(Ljava/lang/Appendable;JLn/b/a/a;ILn/b/a/f;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;

  #L400f70.  call `a`(v0, v1, v2, v4) @signature `Ln/b/a/u/c$d;.a:(Ljava/lang/Appendable;JLn/b/a/a;)V` @kind virtual;
  #L400f76.  return @kind void;
}
procedure `int` `b`(`n.b.a.u.c$d` v1 @kind this) @signature `Ln/b/a/u/c$d;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L400bd0.  v0:= v1.`n.b.a.u.c$d.d` @type ^`int`;
  #L400bd4.  return v0;
}
procedure `int` `e`(`n.b.a.u.c$d` v1 @kind this) @signature `Ln/b/a/u/c$d;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L400be8.  v0:= v1.`n.b.a.u.c$d.d` @type ^`int`;
  #L400bec.  return v0;
}
