record `n.b.a.u.e` @kind class @AccessFlag PUBLIC {
  `n.b.a.a` `n.b.a.u.e.a` @AccessFlag PRIVATE_FINAL;
  `long` `n.b.a.u.e.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Locale` `n.b.a.u.e.c` @AccessFlag PRIVATE_FINAL;
  `int` `n.b.a.u.e.d` @AccessFlag PRIVATE_FINAL;
  `n.b.a.f` `n.b.a.u.e.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.Integer` `n.b.a.u.e.f` @AccessFlag PRIVATE_FINAL;
  `n.b.a.f` `n.b.a.u.e.g` @AccessFlag PRIVATE;
  `java.lang.Integer` `n.b.a.u.e.h` @AccessFlag PRIVATE;
  `java.lang.Integer` `n.b.a.u.e.i` @AccessFlag PRIVATE;
  `n.b.a.u.e$a`[] `n.b.a.u.e.j` @AccessFlag PRIVATE;
  `int` `n.b.a.u.e.k` @AccessFlag PRIVATE;
  `boolean` `n.b.a.u.e.l` @AccessFlag PRIVATE;
  `java.lang.Object` `n.b.a.u.e.m` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`n.b.a.u.e` v0 @kind this, `long` v1 , `n.b.a.a` v3 @kind object, `java.util.Locale` v4 @kind object, `java.lang.Integer` v5 @kind object, `int` v6 ) @signature `Ln/b/a/u/e;.<init>:(JLn/b/a/a;Ljava/util/Locale;Ljava/lang/Integer;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L403ce4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L403cea.  call temp:= `a`(v3) @signature `Ln/b/a/e;.a:(Ln/b/a/a;)Ln/b/a/a;` @kind static;
  #L403cf0.  v3:= temp @kind object;
  #L403cf2.  v0.`n.b.a.u.e.b` @type ^`long` := v1 @kind wide;
  #L403cf6.  call temp:= `k`(v3) @signature `Ln/b/a/a;.k:()Ln/b/a/f;` @kind virtual;
  #L403cfc.  v1:= temp @kind object;
  #L403cfe.  v0.`n.b.a.u.e.e` @type ^`n.b.a.f` := v1 @kind object;
  #L403d02.  call temp:= `G`(v3) @signature `Ln/b/a/a;.G:()Ln/b/a/a;` @kind virtual;
  #L403d08.  v1:= temp @kind object;
  #L403d0a.  v0.`n.b.a.u.e.a` @type ^`n.b.a.a` := v1 @kind object;
  #L403d0e.  if v4 != 0 then goto L403d1a;
  #L403d12.  call temp:= `getDefault`() @signature `Ljava/util/Locale;.getDefault:()Ljava/util/Locale;` @kind static;
  #L403d18.  v4:= temp @kind object;
  #L403d1a.  v0.`n.b.a.u.e.c` @type ^`java.util.Locale` := v4 @kind object;
  #L403d1e.  v0.`n.b.a.u.e.d` @type ^`int` := v6;
  #L403d22.  v0.`n.b.a.u.e.f` @type ^`java.lang.Integer` := v5 @kind object;
  #L403d26.  v1:= v0.`n.b.a.u.e.e` @type ^`n.b.a.f` @kind object;
  #L403d2a.  v0.`n.b.a.u.e.g` @type ^`n.b.a.f` := v1 @kind object;
  #L403d2e.  v1:= v0.`n.b.a.u.e.f` @type ^`java.lang.Integer` @kind object;
  #L403d32.  v0.`n.b.a.u.e.i` @type ^`java.lang.Integer` := v1 @kind object;
  #L403d36.  v1:= 8I;
  #L403d3a.  v1:= new `n.b.a.u.e$a`[v1];
  #L403d3e.  v0.`n.b.a.u.e.j` @type ^`n.b.a.u.e$a`[] := v1 @kind object;
  #L403d42.  return @kind void;
}
procedure `int` `a`(`n.b.a.g` v1 @kind object, `n.b.a.g` v2 @kind object) @signature `Ln/b/a/u/e;.a:(Ln/b/a/g;Ln/b/a/g;)I` @AccessFlag STATIC {
    temp;
    v0;

  #L403874.  if v1 == 0 then goto L4038a8;
  #L403878.  call temp:= `k`(v1) @signature `Ln/b/a/g;.k:()Z` @kind virtual;
  #L40387e.  v0:= temp;
  #L403880.  if v0 != 0 then goto L403886;
  #L403884.  goto L4038a8;
  #L403886.  if v2 == 0 then goto L4038a4;
  #L40388a.  call temp:= `k`(v2) @signature `Ln/b/a/g;.k:()Z` @kind virtual;
  #L403890.  v0:= temp;
  #L403892.  if v0 != 0 then goto L403898;
  #L403896.  goto L4038a4;
  #L403898.  call temp:= `compareTo`(v1, v2) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L40389e.  v1:= temp;
  #L4038a0.  v1:= -v1 @kind int;
  #L4038a2.  return v1;
  #L4038a4.  v1:= 1I;
  #L4038a6.  return v1;
  #L4038a8.  if v2 == 0 then goto L4038be;
  #L4038ac.  call temp:= `k`(v2) @signature `Ln/b/a/g;.k:()Z` @kind virtual;
  #L4038b2.  v1:= temp;
  #L4038b4.  if v1 != 0 then goto L4038ba;
  #L4038b8.  goto L4038be;
  #L4038ba.  v1:= -1I;
  #L4038bc.  return v1;
  #L4038be.  v1:= 0I;
  #L4038c0.  return v1;
}
procedure `int` `a`(`n.b.a.u.e` v0 @kind object, `int` v1 ) @signature `Ln/b/a/u/e;.a:(Ln/b/a/u/e;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L40385c.  v0.`n.b.a.u.e.k` @type ^`int` := v1;
  #L403860.  return v1;
}
procedure `java.lang.Integer` `a`(`n.b.a.u.e` v0 @kind object, `java.lang.Integer` v1 @kind object) @signature `Ln/b/a/u/e;.a:(Ln/b/a/u/e;Ljava/lang/Integer;)Ljava/lang/Integer;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4038ec.  v0.`n.b.a.u.e.h` @type ^`java.lang.Integer` := v1 @kind object;
  #L4038f0.  return v1 @kind object;
}
procedure `n.b.a.f` `a`(`n.b.a.u.e` v0 @kind object) @signature `Ln/b/a/u/e;.a:(Ln/b/a/u/e;)Ln/b/a/f;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L403bfc.  v0:= v0.`n.b.a.u.e.g` @type ^`n.b.a.f` @kind object;
  #L403c00.  return v0 @kind object;
}
procedure `n.b.a.f` `a`(`n.b.a.u.e` v0 @kind object, `n.b.a.f` v1 @kind object) @signature `Ln/b/a/u/e;.a:(Ln/b/a/u/e;Ln/b/a/f;)Ln/b/a/f;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L403c14.  v0.`n.b.a.u.e.g` @type ^`n.b.a.f` := v1 @kind object;
  #L403c18.  return v1 @kind object;
}
procedure `void` `a`(`n.b.a.u.e$a`[] v5 @kind object, `int` v6 ) @signature `Ln/b/a/u/e;.a:([Ln/b/a/u/e$a;I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L403e04.  v0:= 0I;
  #L403e06.  v1:= 10I;
  #L403e0a.  if v6 <= v1 then goto L403e16;
  #L403e0e.  call `sort`(v5, v0, v6) @signature `Ljava/util/Arrays;.sort:([Ljava/lang/Object;II)V` @kind static;
  #L403e14.  goto L403e54;
  #L403e16.  if v0 >= v6 then goto L403e54;
  #L403e1a.  v1:= v0;
  #L403e1c.  if v1 <= 0 then goto L403e4e;
  #L403e20.  v2:= v1 + -1;
  #L403e24.  v3:= v5[v2] @kind object;
  #L403e28.  v4:= v5[v1] @kind object;
  #L403e2c.  call temp:= `a`(v3, v4) @signature `Ln/b/a/u/e$a;.a:(Ln/b/a/u/e$a;)I` @kind virtual;
  #L403e32.  v3:= temp;
  #L403e34.  if v3 <= 0 then goto L403e4e;
  #L403e38.  v3:= v5[v1] @kind object;
  #L403e3c.  v4:= v5[v2] @kind object;
  #L403e40.  v5[v1]:= v4 @kind object;
  #L403e44.  v5[v2]:= v3 @kind object;
  #L403e48.  v1:= v1 + -1;
  #L403e4c.  goto L403e1c;
  #L403e4e.  v0:= v0 + 1;
  #L403e52.  goto L403e16;
  #L403e54.  return @kind void;
}
procedure `boolean` `a`(`n.b.a.u.e` v0 @kind object, `boolean` v1 ) @signature `Ln/b/a/u/e;.a:(Ln/b/a/u/e;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4037f4.  v0.`n.b.a.u.e.l` @type ^`boolean` := v1 @kind boolean;
  #L4037f8.  return v1;
}
procedure `n.b.a.u.e$a`[] `a`(`n.b.a.u.e` v0 @kind object, `n.b.a.u.e$a`[] v1 @kind object) @signature `Ln/b/a/u/e;.a:(Ln/b/a/u/e;[Ln/b/a/u/e$a;)[Ln/b/a/u/e$a;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L403ccc.  v0.`n.b.a.u.e.j` @type ^`n.b.a.u.e$a`[] := v1 @kind object;
  #L403cd0.  return v1 @kind object;
}
procedure `java.lang.Integer` `b`(`n.b.a.u.e` v0 @kind object) @signature `Ln/b/a/u/e;.b:(Ln/b/a/u/e;)Ljava/lang/Integer;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4038d4.  v0:= v0.`n.b.a.u.e.h` @type ^`java.lang.Integer` @kind object;
  #L4038d8.  return v0 @kind object;
}
procedure `n.b.a.u.e$a`[] `c`(`n.b.a.u.e` v0 @kind object) @signature `Ln/b/a/u/e;.c:(Ln/b/a/u/e;)[Ln/b/a/u/e$a;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L403cb4.  v0:= v0.`n.b.a.u.e.j` @type ^`n.b.a.u.e$a`[] @kind object;
  #L403cb8.  return v0 @kind object;
}
procedure `int` `d`(`n.b.a.u.e` v0 @kind object) @signature `Ln/b/a/u/e;.d:(Ln/b/a/u/e;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L403844.  v0:= v0.`n.b.a.u.e.k` @type ^`int`;
  #L403848.  return v0;
}
procedure `n.b.a.u.e$a` `g`(`n.b.a.u.e` v4 @kind this) @signature `Ln/b/a/u/e;.g:()Ln/b/a/u/e$a;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L403c44.  v0:= v4.`n.b.a.u.e.j` @type ^`n.b.a.u.e$a`[] @kind object;
  #L403c48.  v1:= v4.`n.b.a.u.e.k` @type ^`int`;
  #L403c4c.  v2:= length @variable v0;
  #L403c4e.  if v1 == v2 then goto L403c5a;
  #L403c52.  v2:= v4.`n.b.a.u.e.l` @type ^`boolean` @kind boolean;
  #L403c56.  if v2 == 0 then goto L403c7e;
  #L403c5a.  v2:= length @variable v0;
  #L403c5c.  if v1 != v2 then goto L403c66;
  #L403c60.  v2:= v1 * 2;
  #L403c64.  goto L403c68;
  #L403c66.  v2:= length @variable v0;
  #L403c68.  v2:= new `n.b.a.u.e$a`[v2];
  #L403c6c.  v3:= 0I;
  #L403c6e.  call `arraycopy`(v0, v3, v2, v3, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L403c74.  v4.`n.b.a.u.e.j` @type ^`n.b.a.u.e$a`[] := v2 @kind object;
  #L403c78.  v4.`n.b.a.u.e.l` @type ^`boolean` := v3 @kind boolean;
  #L403c7c.  v0:= v2 @kind object;
  #L403c7e.  v2:= 0I;
  #L403c80.  v4.`n.b.a.u.e.m` @type ^`java.lang.Object` := v2 @kind object;
  #L403c84.  v2:= v0[v1] @kind object;
  #L403c88.  if v2 != 0 then goto L403c9a;
  #L403c8c.  v2:= new `n.b.a.u.e$a`;
  #L403c90.  call `<init>`(v2) @signature `Ln/b/a/u/e$a;.<init>:()V` @kind direct;
  #L403c96.  v0[v1]:= v2 @kind object;
  #L403c9a.  v1:= v1 + 1;
  #L403c9e.  v4.`n.b.a.u.e.k` @type ^`int` := v1;
  #L403ca2.  return v2 @kind object;
}
procedure `long` `a`(`n.b.a.u.e` v1 @kind this, `n.b.a.u.k` v2 @kind object, `java.lang.CharSequence` v3 @kind object) @signature `Ln/b/a/u/e;.a:(Ln/b/a/u/k;Ljava/lang/CharSequence;)J` @AccessFlag  {
    temp;
    v0;

  #L403b90.  v0:= 0I;
  #L403b92.  call temp:= `a`(v2, v1, v3, v0) @signature `Ln/b/a/u/k;.a:(Ln/b/a/u/e;Ljava/lang/CharSequence;I)I` @kind interface;
  #L403b98.  v2:= temp;
  #L403b9a.  if v2 < 0 then goto L403bb6;
  #L403b9e.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L403ba4.  v0:= temp;
  #L403ba6.  if v2 < v0 then goto L403bb8;
  #L403baa.  v2:= 1I;
  #L403bac.  call temp:= `a`(v1, v2, v3) @signature `Ln/b/a/u/e;.a:(ZLjava/lang/CharSequence;)J` @kind virtual;
  #L403bb2.  v2:= temp @kind wide;
  #L403bb4.  return v2 @kind wide;
  #L403bb6.  v2:= ~v2 @kind int;
  #L403bb8.  v0:= new `java.lang.IllegalArgumentException`;
  #L403bbc.  call temp:= `toString`(v3) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L403bc2.  v3:= temp @kind object;
  #L403bc4.  call temp:= `a`(v3, v2) @signature `Ln/b/a/u/i;.a:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L403bca.  v2:= temp @kind object;
  #L403bcc.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L403bd2.  throw v0;
}
procedure `long` `a`(`n.b.a.u.e` v8 @kind this, `boolean` v9 , `java.lang.CharSequence` v10 @kind object) @signature `Ln/b/a/u/e;.a:(ZLjava/lang/CharSequence;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L403978.  v0:= v8.`n.b.a.u.e.j` @type ^`n.b.a.u.e$a`[] @kind object;
  #L40397c.  v1:= v8.`n.b.a.u.e.k` @type ^`int`;
  #L403980.  v2:= v8.`n.b.a.u.e.l` @type ^`boolean` @kind boolean;
  #L403984.  v3:= 0I;
  #L403986.  if v2 == 0 then goto L40399e;
  #L40398a.  call temp:= `clone`(v0) @signature `[Ln/b/a/u/e$a;.clone:()Ljava/lang/Object;` @kind virtual;
  #L403990.  v0:= temp @kind object;
  #L403992.  v0:= (`n.b.a.u.e$a`[]) v0 @kind object;
  #L403996.  v8.`n.b.a.u.e.j` @type ^`n.b.a.u.e$a`[] := v0 @kind object;
  #L40399a.  v8.`n.b.a.u.e.l` @type ^`boolean` := v3 @kind boolean;
  #L40399e.  call `a`(v0, v1) @signature `Ln/b/a/u/e;.a:([Ln/b/a/u/e$a;I)V` @kind static;
  #L4039a4.  if v1 <= 0 then goto L403a14;
  #L4039a8.  call temp:= `i`() @signature `Ln/b/a/h;.i:()Ln/b/a/h;` @kind static;
  #L4039ae.  v2:= temp @kind object;
  #L4039b0.  v4:= v8.`n.b.a.u.e.a` @type ^`n.b.a.a` @kind object;
  #L4039b4.  call temp:= `a`(v2, v4) @signature `Ln/b/a/h;.a:(Ln/b/a/a;)Ln/b/a/g;` @kind virtual;
  #L4039ba.  v2:= temp @kind object;
  #L4039bc.  call temp:= `c`() @signature `Ln/b/a/h;.c:()Ln/b/a/h;` @kind static;
  #L4039c2.  v4:= temp @kind object;
  #L4039c4.  v5:= v8.`n.b.a.u.e.a` @type ^`n.b.a.a` @kind object;
  #L4039c8.  call temp:= `a`(v4, v5) @signature `Ln/b/a/h;.a:(Ln/b/a/a;)Ln/b/a/g;` @kind virtual;
  #L4039ce.  v4:= temp @kind object;
  #L4039d0.  v5:= v0[v3] @kind object;
  #L4039d4.  v5:= v5.`n.b.a.u.e$a.b` @type ^`n.b.a.c` @kind object;
  #L4039d8.  call temp:= `a`(v5) @signature `Ln/b/a/c;.a:()Ln/b/a/g;` @kind virtual;
  #L4039de.  v5:= temp @kind object;
  #L4039e0.  call temp:= `a`(v5, v2) @signature `Ln/b/a/u/e;.a:(Ln/b/a/g;Ln/b/a/g;)I` @kind static;
  #L4039e6.  v2:= temp;
  #L4039e8.  if v2 < 0 then goto L403a14;
  #L4039ec.  call temp:= `a`(v5, v4) @signature `Ln/b/a/u/e;.a:(Ln/b/a/g;Ln/b/a/g;)I` @kind static;
  #L4039f2.  v2:= temp;
  #L4039f4.  if v2 > 0 then goto L403a14;
  #L4039f8.  call temp:= `w`() @signature `Ln/b/a/d;.w:()Ln/b/a/d;` @kind static;
  #L4039fe.  v0:= temp @kind object;
  #L403a00.  v1:= v8.`n.b.a.u.e.d` @type ^`int`;
  #L403a04.  call `a`(v8, v0, v1) @signature `Ln/b/a/u/e;.a:(Ln/b/a/d;I)V` @kind virtual;
  #L403a0a.  call temp:= `a`(v8, v9, v10) @signature `Ln/b/a/u/e;.a:(ZLjava/lang/CharSequence;)J` @kind virtual;
  #L403a10.  v9:= temp @kind wide;
  #L403a12.  return v9 @kind wide;
  #L403a14.  v4:= v8.`n.b.a.u.e.b` @type ^`long` @kind wide;
  #L403a18.  v2:= 0I;
  #L403a1a.  v6:= "Cannot parse \"" @kind object;
  #L403a1e.  if v2 >= v1 then goto L403a38;
  #L403a22.  v7:= v0[v2] @kind object;
  #L403a26.  call temp:= `a`(v7, v4, v9) @signature `Ln/b/a/u/e$a;.a:(JZ)J` @kind virtual;
  #L403a2c.  v4:= temp @kind wide;
  #L403a2e.  v2:= v2 + 1;
  #L403a32.  goto L403a1a;
  #L403a34.  v9:= Exception @type ^`n.b.a.i` @kind object;
  #L403a36.  goto L403a76;
  #L403a38.  if v9 == 0 then goto L403aaa;
  #L403a3c.  v9:= 0I;
  #L403a3e.  if v9 >= v1 then goto L403aaa;
  #L403a42.  v2:= v0[v9] @kind object;
  #L403a46.  v2:= v2.`n.b.a.u.e$a.b` @type ^`n.b.a.c` @kind object;
  #L403a4a.  call temp:= `h`(v2) @signature `Ln/b/a/c;.h:()Z` @kind virtual;
  #L403a50.  v2:= temp;
  #L403a52.  if v2 != 0 then goto L403a70;
  #L403a56.  v2:= v0[v9] @kind object;
  #L403a5a.  v7:= v1 + -1;
  #L403a5e.  if v9 != v7 then goto L403a66;
  #L403a62.  v7:= 1I;
  #L403a64.  goto L403a68;
  #L403a66.  v7:= 0I;
  #L403a68.  call temp:= `a`(v2, v4, v7) @signature `Ln/b/a/u/e$a;.a:(JZ)J` @kind virtual;
  #L403a6e.  v4:= temp @kind wide;
  #L403a70.  v9:= v9 + 1;
  #L403a74.  goto L403a3e;
  #L403a76.  if v10 == 0 then goto L403aa8;
  #L403a7a.  v0:= new `java.lang.StringBuilder`;
  #L403a7e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L403a84.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L403a8a.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L403a90.  v10:= 34I;
  #L403a94.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L403a9a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L403aa0.  v10:= temp @kind object;
  #L403aa2.  call `a`(v9, v10) @signature `Ln/b/a/i;.a:(Ljava/lang/String;)V` @kind virtual;
  #L403aa8.  throw v9;
  #L403aaa.  v9:= v8.`n.b.a.u.e.h` @type ^`java.lang.Integer` @kind object;
  #L403aae.  if v9 == 0 then goto L403ac0;
  #L403ab2.  call temp:= `intValue`(v9) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L403ab8.  v9:= temp;
  #L403aba.  v9:= (`long`) v9 @kind i2l;
  #L403abc.  v4:= v4 - v9 @kind long;
  #L403abe.  goto L403b52;
  #L403ac0.  v9:= v8.`n.b.a.u.e.g` @type ^`n.b.a.f` @kind object;
  #L403ac4.  if v9 == 0 then goto L403b52;
  #L403ac8.  call temp:= `d`(v9, v4) @signature `Ln/b/a/f;.d:(J)I` @kind virtual;
  #L403ace.  v9:= temp;
  #L403ad0.  v0:= (`long`) v9 @kind i2l;
  #L403ad2.  v4:= v4 - v0 @kind long;
  #L403ad4.  v0:= v8.`n.b.a.u.e.g` @type ^`n.b.a.f` @kind object;
  #L403ad8.  call temp:= `c`(v0, v4) @signature `Ln/b/a/f;.c:(J)I` @kind virtual;
  #L403ade.  v0:= temp;
  #L403ae0.  if v9 == v0 then goto L403b52;
  #L403ae4.  v9:= new `java.lang.StringBuilder`;
  #L403ae8.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L403aee.  v0:= "Illegal instant due to time zone offset transition (" @kind object;
  #L403af2.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L403af8.  v0:= v8.`n.b.a.u.e.g` @type ^`n.b.a.f` @kind object;
  #L403afc.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L403b02.  v0:= 41I;
  #L403b06.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L403b0c.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L403b12.  v9:= temp @kind object;
  #L403b14.  if v10 == 0 then goto L403b46;
  #L403b18.  v0:= new `java.lang.StringBuilder`;
  #L403b1c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L403b22.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L403b28.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L403b2e.  v10:= "\": " @kind object;
  #L403b32.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L403b38.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L403b3e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L403b44.  v9:= temp @kind object;
  #L403b46.  v10:= new `n.b.a.j`;
  #L403b4a.  call `<init>`(v10, v9) @signature `Ln/b/a/j;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L403b50.  throw v10;
  #L403b52.  return v4 @kind wide;
  catch `n.b.a.i` @[L403a22..L403a70] goto L403a34;
}
procedure `long` `a`(`n.b.a.u.e` v0 @kind this, `boolean` v1 , `java.lang.String` v2 @kind object) @signature `Ln/b/a/u/e;.a:(ZLjava/lang/String;)J` @AccessFlag PUBLIC {
    temp;

  #L403b74.  call temp:= `a`(v0, v1, v2) @signature `Ln/b/a/u/e;.a:(ZLjava/lang/CharSequence;)J` @kind virtual;
  #L403b7a.  v1:= temp @kind wide;
  #L403b7c.  return v1 @kind wide;
}
procedure `n.b.a.a` `a`(`n.b.a.u.e` v1 @kind this) @signature `Ln/b/a/u/e;.a:()Ln/b/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403be4.  v0:= v1.`n.b.a.u.e.a` @type ^`n.b.a.a` @kind object;
  #L403be8.  return v0 @kind object;
}
procedure `void` `a`(`n.b.a.u.e` v1 @kind this, `java.lang.Integer` v2 @kind object) @signature `Ln/b/a/u/e;.a:(Ljava/lang/Integer;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403dcc.  v0:= 0I;
  #L403dce.  v1.`n.b.a.u.e.m` @type ^`java.lang.Object` := v0 @kind object;
  #L403dd2.  v1.`n.b.a.u.e.h` @type ^`java.lang.Integer` := v2 @kind object;
  #L403dd6.  return @kind void;
}
procedure `void` `a`(`n.b.a.u.e` v1 @kind this, `n.b.a.c` v2 @kind object, `int` v3 ) @signature `Ln/b/a/u/e;.a:(Ln/b/a/c;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403d54.  call temp:= `g`(v1) @signature `Ln/b/a/u/e;.g:()Ln/b/a/u/e$a;` @kind direct;
  #L403d5a.  v0:= temp @kind object;
  #L403d5c.  call `a`(v0, v2, v3) @signature `Ln/b/a/u/e$a;.a:(Ln/b/a/c;I)V` @kind virtual;
  #L403d62.  return @kind void;
}
procedure `void` `a`(`n.b.a.u.e` v2 @kind this, `n.b.a.d` v3 @kind object, `int` v4 ) @signature `Ln/b/a/u/e;.a:(Ln/b/a/d;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L403d74.  call temp:= `g`(v2) @signature `Ln/b/a/u/e;.g:()Ln/b/a/u/e$a;` @kind direct;
  #L403d7a.  v0:= temp @kind object;
  #L403d7c.  v1:= v2.`n.b.a.u.e.a` @type ^`n.b.a.a` @kind object;
  #L403d80.  call temp:= `a`(v3, v1) @signature `Ln/b/a/d;.a:(Ln/b/a/a;)Ln/b/a/c;` @kind virtual;
  #L403d86.  v3:= temp @kind object;
  #L403d88.  call `a`(v0, v3, v4) @signature `Ln/b/a/u/e$a;.a:(Ln/b/a/c;I)V` @kind virtual;
  #L403d8e.  return @kind void;
}
procedure `void` `a`(`n.b.a.u.e` v2 @kind this, `n.b.a.d` v3 @kind object, `java.lang.String` v4 @kind object, `java.util.Locale` v5 @kind object) @signature `Ln/b/a/u/e;.a:(Ln/b/a/d;Ljava/lang/String;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L403da0.  call temp:= `g`(v2) @signature `Ln/b/a/u/e;.g:()Ln/b/a/u/e$a;` @kind direct;
  #L403da6.  v0:= temp @kind object;
  #L403da8.  v1:= v2.`n.b.a.u.e.a` @type ^`n.b.a.a` @kind object;
  #L403dac.  call temp:= `a`(v3, v1) @signature `Ln/b/a/d;.a:(Ln/b/a/a;)Ln/b/a/c;` @kind virtual;
  #L403db2.  v3:= temp @kind object;
  #L403db4.  call `a`(v0, v3, v4, v5) @signature `Ln/b/a/u/e$a;.a:(Ln/b/a/c;Ljava/lang/String;Ljava/util/Locale;)V` @kind virtual;
  #L403dba.  return @kind void;
}
procedure `void` `a`(`n.b.a.u.e` v1 @kind this, `n.b.a.f` v2 @kind object) @signature `Ln/b/a/u/e;.a:(Ln/b/a/f;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403de8.  v0:= 0I;
  #L403dea.  v1.`n.b.a.u.e.m` @type ^`java.lang.Object` := v0 @kind object;
  #L403dee.  v1.`n.b.a.u.e.g` @type ^`n.b.a.f` := v2 @kind object;
  #L403df2.  return @kind void;
}
procedure `boolean` `a`(`n.b.a.u.e` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Ln/b/a/u/e;.a:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40380c.  v0:= instanceof @variable v2 @type ^`n.b.a.u.e$b` @kind boolean;
  #L403810.  if v0 == 0 then goto L40382e;
  #L403814.  v0:= v2 @kind object;
  #L403816.  v0:= (`n.b.a.u.e$b`) v0 @kind object;
  #L40381a.  call temp:= `a`(v0, v1) @signature `Ln/b/a/u/e$b;.a:(Ln/b/a/u/e;)Z` @kind virtual;
  #L403820.  v0:= temp;
  #L403822.  if v0 == 0 then goto L40382e;
  #L403826.  v1.`n.b.a.u.e.m` @type ^`java.lang.Object` := v2 @kind object;
  #L40382a.  v2:= 1I;
  #L40382c.  return v2;
  #L40382e.  v2:= 0I;
  #L403830.  return v2;
}
procedure `java.util.Locale` `b`(`n.b.a.u.e` v1 @kind this) @signature `Ln/b/a/u/e;.b:()Ljava/util/Locale;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403960.  v0:= v1.`n.b.a.u.e.c` @type ^`java.util.Locale` @kind object;
  #L403964.  return v0 @kind object;
}
procedure `java.lang.Integer` `c`(`n.b.a.u.e` v1 @kind this) @signature `Ln/b/a/u/e;.c:()Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403904.  v0:= v1.`n.b.a.u.e.h` @type ^`java.lang.Integer` @kind object;
  #L403908.  return v0 @kind object;
}
procedure `java.lang.Integer` `d`(`n.b.a.u.e` v1 @kind this) @signature `Ln/b/a/u/e;.d:()Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40391c.  v0:= v1.`n.b.a.u.e.i` @type ^`java.lang.Integer` @kind object;
  #L403920.  return v0 @kind object;
}
procedure `n.b.a.f` `e`(`n.b.a.u.e` v1 @kind this) @signature `Ln/b/a/u/e;.e:()Ln/b/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403c2c.  v0:= v1.`n.b.a.u.e.g` @type ^`n.b.a.f` @kind object;
  #L403c30.  return v0 @kind object;
}
procedure `java.lang.Object` `f`(`n.b.a.u.e` v1 @kind this) @signature `Ln/b/a/u/e;.f:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403934.  v0:= v1.`n.b.a.u.e.m` @type ^`java.lang.Object` @kind object;
  #L403938.  if v0 != 0 then goto L40394a;
  #L40393c.  v0:= new `n.b.a.u.e$b`;
  #L403940.  call `<init>`(v0, v1) @signature `Ln/b/a/u/e$b;.<init>:(Ln/b/a/u/e;)V` @kind direct;
  #L403946.  v1.`n.b.a.u.e.m` @type ^`java.lang.Object` := v0 @kind object;
  #L40394a.  v0:= v1.`n.b.a.u.e.m` @type ^`java.lang.Object` @kind object;
  #L40394e.  return v0 @kind object;
}
