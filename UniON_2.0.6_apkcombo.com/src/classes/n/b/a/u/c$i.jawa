record `n.b.a.u.c$i` @kind class @AccessFlag  extends `n.b.a.u.m` @kind interface, `n.b.a.u.k` @kind interface {
  `n.b.a.d` `n.b.a.u.c$i.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `n.b.a.u.c$i.c` @AccessFlag PRIVATE_FINAL;
}
global `java.util.Map` `@@n.b.a.u.c$i.d` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Ln/b/a/u/c$i;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L401644.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L401648.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L40164e.  `@@n.b.a.u.c$i.d` @type ^`java.util.Map` := v0 @kind object;
  #L401652.  return @kind void;
}
procedure `void` `<init>`(`n.b.a.u.c$i` v0 @kind this, `n.b.a.d` v1 @kind object, `boolean` v2 ) @signature `Ln/b/a/u/c$i;.<init>:(Ln/b/a/d;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L401664.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40166a.  v0.`n.b.a.u.c$i.b` @type ^`n.b.a.d` := v1 @kind object;
  #L40166e.  v0.`n.b.a.u.c$i.c` @type ^`boolean` := v2 @kind boolean;
  #L401672.  return @kind void;
}
procedure `java.lang.String` `a`(`n.b.a.u.c$i` v1 @kind this, `long` v2 , `n.b.a.a` v4 @kind object, `java.util.Locale` v5 @kind object) @signature `Ln/b/a/u/c$i;.a:(JLn/b/a/a;Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L40160c.  v0:= v1.`n.b.a.u.c$i.b` @type ^`n.b.a.d` @kind object;
  #L401610.  call temp:= `a`(v0, v4) @signature `Ln/b/a/d;.a:(Ln/b/a/a;)Ln/b/a/c;` @kind virtual;
  #L401616.  v4:= temp @kind object;
  #L401618.  v0:= v1.`n.b.a.u.c$i.c` @type ^`boolean` @kind boolean;
  #L40161c.  if v0 == 0 then goto L40162a;
  #L401620.  call temp:= `a`(v4, v2, v5) @signature `Ln/b/a/c;.a:(JLjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L401626.  v2:= temp @kind object;
  #L401628.  return v2 @kind object;
  #L40162a.  call temp:= `b`(v4, v2, v5) @signature `Ln/b/a/c;.b:(JLjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L401630.  v2:= temp @kind object;
  #L401632.  return v2 @kind object;
}
procedure `int` `a`(`n.b.a.u.c$i` v11 @kind this, `n.b.a.u.e` v12 @kind object, `java.lang.CharSequence` v13 @kind object, `int` v14 ) @signature `Ln/b/a/u/c$i;.a:(Ln/b/a/u/e;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4013e0.  call temp:= `b`(v12) @signature `Ln/b/a/u/e;.b:()Ljava/util/Locale;` @kind virtual;
  #L4013e6.  v0:= temp @kind object;
  #L4013e8.  v1:= `@@n.b.a.u.c$i.d` @type ^`java.util.Map` @kind object;
  #L4013ec.  call temp:= `get`(v1, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4013f2.  v1:= temp @kind object;
  #L4013f4.  v1:= (`java.util.Map`) v1 @kind object;
  #L4013f8.  if v1 != 0 then goto L401410;
  #L4013fc.  v1:= new `java.util.concurrent.ConcurrentHashMap`;
  #L401400.  call `<init>`(v1) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L401406.  v2:= `@@n.b.a.u.c$i.d` @type ^`java.util.Map` @kind object;
  #L40140a.  call temp:= `put`(v2, v0, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L401410.  v2:= v11.`n.b.a.u.c$i.b` @type ^`n.b.a.d` @kind object;
  #L401414.  call temp:= `get`(v1, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40141a.  v2:= temp @kind object;
  #L40141c.  v2:= (`java.lang.Object`[]) v2 @kind object;
  #L401420.  v3:= 0I;
  #L401422.  v4:= 1I;
  #L401424.  if v2 != 0 then goto L40159a;
  #L401428.  v2:= new `java.util.concurrent.ConcurrentHashMap`;
  #L40142c.  v5:= 32I;
  #L401430.  call `<init>`(v2, v5) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:(I)V` @kind direct;
  #L401436.  v6:= new `n.b.a.l`;
  #L40143a.  v7:= 0L;
  #L40143e.  v9:= `@@n.b.a.f.c` @type ^`n.b.a.f` @kind object;
  #L401442.  call `<init>`(v6, v7, v9) @signature `Ln/b/a/l;.<init>:(JLn/b/a/f;)V` @kind direct;
  #L401448.  v7:= v11.`n.b.a.u.c$i.b` @type ^`n.b.a.d` @kind object;
  #L40144c.  call temp:= `a`(v6, v7) @signature `Ln/b/a/l;.a:(Ln/b/a/d;)Ln/b/a/l$a;` @kind virtual;
  #L401452.  v6:= temp @kind object;
  #L401454.  call temp:= `g`(v6) @signature `Ln/b/a/t/a;.g:()I` @kind virtual;
  #L40145a.  v7:= temp;
  #L40145c.  call temp:= `e`(v6) @signature `Ln/b/a/t/a;.e:()I` @kind virtual;
  #L401462.  v8:= temp;
  #L401464.  v9:= v8 - v7 @kind int;
  #L401468.  if v9 <= v5 then goto L401470;
  #L40146c.  v12:= ~v14 @kind int;
  #L40146e.  return v12;
  #L401470.  call temp:= `c`(v6, v0) @signature `Ln/b/a/t/a;.c:(Ljava/util/Locale;)I` @kind virtual;
  #L401476.  v5:= temp;
  #L401478.  if v7 > v8 then goto L401514;
  #L40147c.  call temp:= `a`(v6, v7) @signature `Ln/b/a/l$a;.a:(I)Ln/b/a/l;` @kind virtual;
  #L401482.  call temp:= `a`(v6, v0) @signature `Ln/b/a/t/a;.a:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L401488.  v9:= temp @kind object;
  #L40148a.  v10:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L40148e.  call temp:= `put`(v2, v9, v10) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L401494.  call temp:= `a`(v6, v0) @signature `Ln/b/a/t/a;.a:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L40149a.  v9:= temp @kind object;
  #L40149c.  call temp:= `toLowerCase`(v9, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L4014a2.  v9:= temp @kind object;
  #L4014a4.  v10:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L4014a8.  call temp:= `put`(v2, v9, v10) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4014ae.  call temp:= `a`(v6, v0) @signature `Ln/b/a/t/a;.a:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L4014b4.  v9:= temp @kind object;
  #L4014b6.  call temp:= `toUpperCase`(v9, v0) @signature `Ljava/lang/String;.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L4014bc.  v9:= temp @kind object;
  #L4014be.  v10:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L4014c2.  call temp:= `put`(v2, v9, v10) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4014c8.  call temp:= `b`(v6, v0) @signature `Ln/b/a/t/a;.b:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L4014ce.  v9:= temp @kind object;
  #L4014d0.  v10:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L4014d4.  call temp:= `put`(v2, v9, v10) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4014da.  call temp:= `b`(v6, v0) @signature `Ln/b/a/t/a;.b:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L4014e0.  v9:= temp @kind object;
  #L4014e2.  call temp:= `toLowerCase`(v9, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L4014e8.  v9:= temp @kind object;
  #L4014ea.  v10:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L4014ee.  call temp:= `put`(v2, v9, v10) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4014f4.  call temp:= `b`(v6, v0) @signature `Ln/b/a/t/a;.b:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L4014fa.  v9:= temp @kind object;
  #L4014fc.  call temp:= `toUpperCase`(v9, v0) @signature `Ljava/lang/String;.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L401502.  v9:= temp @kind object;
  #L401504.  v10:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L401508.  call temp:= `put`(v2, v9, v10) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40150e.  v7:= v7 + 1;
  #L401512.  goto L401478;
  #L401514.  call temp:= `getLanguage`(v0) @signature `Ljava/util/Locale;.getLanguage:()Ljava/lang/String;` @kind virtual;
  #L40151a.  v6:= temp @kind object;
  #L40151c.  v7:= "en" @kind object;
  #L401520.  call temp:= `equals`(v7, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L401526.  v6:= temp;
  #L401528.  if v6 == 0 then goto L401576;
  #L40152c.  v6:= v11.`n.b.a.u.c$i.b` @type ^`n.b.a.d` @kind object;
  #L401530.  call temp:= `i`() @signature `Ln/b/a/d;.i:()Ln/b/a/d;` @kind static;
  #L401536.  v7:= temp @kind object;
  #L401538.  if v6 != v7 then goto L401576;
  #L40153c.  v5:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L401540.  v6:= "BCE" @kind object;
  #L401544.  call temp:= `put`(v2, v6, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40154a.  v5:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L40154e.  v6:= "bce" @kind object;
  #L401552.  call temp:= `put`(v2, v6, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L401558.  v5:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L40155c.  v6:= "CE" @kind object;
  #L401560.  call temp:= `put`(v2, v6, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L401566.  v5:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L40156a.  v6:= "ce" @kind object;
  #L40156e.  call temp:= `put`(v2, v6, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L401574.  v5:= 3I;
  #L401576.  v6:= 2I;
  #L401578.  v6:= new `java.lang.Object`[v6];
  #L40157c.  v6[v3]:= v2 @kind object;
  #L401580.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L401586.  v3:= temp @kind object;
  #L401588.  v6[v4]:= v3 @kind object;
  #L40158c.  v3:= v11.`n.b.a.u.c$i.b` @type ^`n.b.a.d` @kind object;
  #L401590.  call temp:= `put`(v1, v3, v6) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L401596.  v1:= v2 @kind object;
  #L401598.  goto L4015b2;
  #L40159a.  v1:= v2[v3] @kind object;
  #L40159e.  v1:= (`java.util.Map`) v1 @kind object;
  #L4015a2.  v2:= v2[v4] @kind object;
  #L4015a6.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L4015aa.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L4015b0.  v5:= temp;
  #L4015b2.  call temp:= `length`(v13) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L4015b8.  v2:= temp;
  #L4015ba.  v5:= v5 + v14 @kind int;
  #L4015bc.  call temp:= `min`(v2, v5) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L4015c2.  v2:= temp;
  #L4015c4.  if v2 <= v14 then goto L4015f6;
  #L4015c8.  call temp:= `subSequence`(v13, v14, v2) @signature `Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L4015ce.  v3:= temp @kind object;
  #L4015d0.  call temp:= `toString`(v3) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L4015d6.  v3:= temp @kind object;
  #L4015d8.  call temp:= `containsKey`(v1, v3) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L4015de.  v4:= temp;
  #L4015e0.  if v4 == 0 then goto L4015f0;
  #L4015e4.  v13:= v11.`n.b.a.u.c$i.b` @type ^`n.b.a.d` @kind object;
  #L4015e8.  call `a`(v12, v13, v3, v0) @signature `Ln/b/a/u/e;.a:(Ln/b/a/d;Ljava/lang/String;Ljava/util/Locale;)V` @kind virtual;
  #L4015ee.  return v2;
  #L4015f0.  v2:= v2 + -1;
  #L4015f4.  goto L4015c4;
  #L4015f6.  v12:= ~v14 @kind int;
  #L4015f8.  return v12;
}
procedure `void` `a`(`n.b.a.u.c$i` v0 @kind this, `java.lang.Appendable` v1 @kind object, `long` v2 , `n.b.a.a` v4 @kind object, `int` v5 , `n.b.a.f` v6 @kind object, `java.util.Locale` v7 @kind object) @signature `Ln/b/a/u/c$i;.a:(Ljava/lang/Appendable;JLn/b/a/a;ILn/b/a/f;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;

  #L401684.  call temp:= `a`(v0, v2, v4, v7) @signature `Ln/b/a/u/c$i;.a:(JLn/b/a/a;Ljava/util/Locale;)Ljava/lang/String;` @kind direct;
  #L40168a.  v2:= temp @kind object;
  #L40168c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L401692.  goto L4016a0;
  #L401694.  v2:= 65533I;
  #L40169a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L4016a0.  return @kind void;
  catch `java.lang.RuntimeException` @[L401684..L401692] goto L401694;
}
procedure `int` `b`(`n.b.a.u.c$i` v1 @kind this) @signature `Ln/b/a/u/c$i;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4013a0.  call temp:= `e`(v1) @signature `Ln/b/a/u/c$i;.e:()I` @kind virtual;
  #L4013a6.  v0:= temp;
  #L4013a8.  return v0;
}
procedure `int` `e`(`n.b.a.u.c$i` v1 @kind this) @signature `Ln/b/a/u/c$i;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4013bc.  v0:= v1.`n.b.a.u.c$i.c` @type ^`boolean` @kind boolean;
  #L4013c0.  if v0 == 0 then goto L4013c8;
  #L4013c4.  v0:= 6I;
  #L4013c6.  goto L4013cc;
  #L4013c8.  v0:= 20I;
  #L4013cc.  return v0;
}
