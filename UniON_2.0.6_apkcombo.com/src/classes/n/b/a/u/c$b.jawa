record `n.b.a.u.c$b` @kind class @AccessFlag  extends `n.b.a.u.m` @kind interface, `n.b.a.u.k` @kind interface {
  `n.b.a.u.m`[] `n.b.a.u.c$b.b` @AccessFlag PRIVATE_FINAL;
  `n.b.a.u.k`[] `n.b.a.u.c$b.c` @AccessFlag PRIVATE_FINAL;
  `int` `n.b.a.u.c$b.d` @AccessFlag PRIVATE_FINAL;
  `int` `n.b.a.u.c$b.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`n.b.a.u.c$b` v8 @kind this, `java.util.List` v9 @kind object) @signature `Ln/b/a/u/c$b;.<init>:(Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L40094c.  call `<init>`(v8) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L400952.  v0:= new `java.util.ArrayList`;
  #L400956.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L40095c.  v1:= new `java.util.ArrayList`;
  #L400960.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L400966.  call `a`(v8, v9, v0, v1) @signature `Ln/b/a/u/c$b;.a:(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V` @kind direct;
  #L40096c.  v9:= 0I;
  #L40096e.  call temp:= `contains`(v0, v9) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L400974.  v2:= temp;
  #L400976.  v3:= 0I;
  #L400978.  if v2 != 0 then goto L4009cc;
  #L40097c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L400982.  v2:= temp;
  #L400984.  if v2 == 0 then goto L40098a;
  #L400988.  goto L4009cc;
  #L40098a.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L400990.  v2:= temp;
  #L400992.  v4:= new `n.b.a.u.m`[v2];
  #L400996.  v8.`n.b.a.u.c$b.b` @type ^`n.b.a.u.m`[] := v4 @kind object;
  #L40099a.  v4:= 0I;
  #L40099c.  v5:= 0I;
  #L40099e.  if v4 >= v2 then goto L4009c6;
  #L4009a2.  call temp:= `get`(v0, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4009a8.  v6:= temp @kind object;
  #L4009aa.  v6:= (`n.b.a.u.m`) v6 @kind object;
  #L4009ae.  call temp:= `e`(v6) @signature `Ln/b/a/u/m;.e:()I` @kind interface;
  #L4009b4.  v7:= temp;
  #L4009b6.  v5:= v5 + v7 @kind int;
  #L4009b8.  v7:= v8.`n.b.a.u.c$b.b` @type ^`n.b.a.u.m`[] @kind object;
  #L4009bc.  v7[v4]:= v6 @kind object;
  #L4009c0.  v4:= v4 + 1;
  #L4009c4.  goto L40099e;
  #L4009c6.  v8.`n.b.a.u.c$b.d` @type ^`int` := v5;
  #L4009ca.  goto L4009d4;
  #L4009cc.  v8.`n.b.a.u.c$b.b` @type ^`n.b.a.u.m`[] := v9 @kind object;
  #L4009d0.  v8.`n.b.a.u.c$b.d` @type ^`int` := v3;
  #L4009d4.  call temp:= `contains`(v1, v9) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L4009da.  v0:= temp;
  #L4009dc.  if v0 != 0 then goto L400a2e;
  #L4009e0.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L4009e6.  v0:= temp;
  #L4009e8.  if v0 == 0 then goto L4009ee;
  #L4009ec.  goto L400a2e;
  #L4009ee.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4009f4.  v9:= temp;
  #L4009f6.  v0:= new `n.b.a.u.k`[v9];
  #L4009fa.  v8.`n.b.a.u.c$b.c` @type ^`n.b.a.u.k`[] := v0 @kind object;
  #L4009fe.  v0:= 0I;
  #L400a00.  if v3 >= v9 then goto L400a28;
  #L400a04.  call temp:= `get`(v1, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L400a0a.  v2:= temp @kind object;
  #L400a0c.  v2:= (`n.b.a.u.k`) v2 @kind object;
  #L400a10.  call temp:= `b`(v2) @signature `Ln/b/a/u/k;.b:()I` @kind interface;
  #L400a16.  v4:= temp;
  #L400a18.  v0:= v0 + v4 @kind int;
  #L400a1a.  v4:= v8.`n.b.a.u.c$b.c` @type ^`n.b.a.u.k`[] @kind object;
  #L400a1e.  v4[v3]:= v2 @kind object;
  #L400a22.  v3:= v3 + 1;
  #L400a26.  goto L400a00;
  #L400a28.  v8.`n.b.a.u.c$b.e` @type ^`int` := v0;
  #L400a2c.  goto L400a36;
  #L400a2e.  v8.`n.b.a.u.c$b.c` @type ^`n.b.a.u.k`[] := v9 @kind object;
  #L400a32.  v8.`n.b.a.u.c$b.e` @type ^`int` := v3;
  #L400a36.  return @kind void;
}
procedure `void` `a`(`n.b.a.u.c$b` v4 @kind this, `java.util.List` v5 @kind object, `java.util.List` v6 @kind object, `java.util.List` v7 @kind object) @signature `Ln/b/a/u/c$b;.a:(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L400a78.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L400a7e.  v0:= temp;
  #L400a80.  v1:= 0I;
  #L400a82.  if v1 >= v0 then goto L400adc;
  #L400a86.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L400a8c.  v2:= temp @kind object;
  #L400a8e.  v3:= instanceof @variable v2 @type ^`n.b.a.u.c$b` @kind boolean;
  #L400a92.  if v3 == 0 then goto L400aa6;
  #L400a96.  v2:= (`n.b.a.u.c$b`) v2 @kind object;
  #L400a9a.  v2:= v2.`n.b.a.u.c$b.b` @type ^`n.b.a.u.m`[] @kind object;
  #L400a9e.  call `a`(v4, v6, v2) @signature `Ln/b/a/u/c$b;.a:(Ljava/util/List;[Ljava/lang/Object;)V` @kind direct;
  #L400aa4.  goto L400aac;
  #L400aa6.  call temp:= `add`(v6, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L400aac.  v2:= v1 + 1;
  #L400ab0.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L400ab6.  v2:= temp @kind object;
  #L400ab8.  v3:= instanceof @variable v2 @type ^`n.b.a.u.c$b` @kind boolean;
  #L400abc.  if v3 == 0 then goto L400ad0;
  #L400ac0.  v2:= (`n.b.a.u.c$b`) v2 @kind object;
  #L400ac4.  v2:= v2.`n.b.a.u.c$b.c` @type ^`n.b.a.u.k`[] @kind object;
  #L400ac8.  call `a`(v4, v7, v2) @signature `Ln/b/a/u/c$b;.a:(Ljava/util/List;[Ljava/lang/Object;)V` @kind direct;
  #L400ace.  goto L400ad6;
  #L400ad0.  call temp:= `add`(v7, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L400ad6.  v1:= v1 + 2;
  #L400ada.  goto L400a82;
  #L400adc.  return @kind void;
}
procedure `void` `a`(`n.b.a.u.c$b` v2 @kind this, `java.util.List` v3 @kind object, `java.lang.Object`[] v4 @kind object) @signature `Ln/b/a/u/c$b;.a:(Ljava/util/List;[Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L400a48.  if v4 == 0 then goto L400a64;
  #L400a4c.  v0:= 0I;
  #L400a4e.  v1:= length @variable v4;
  #L400a50.  if v0 >= v1 then goto L400a64;
  #L400a54.  v1:= v4[v0] @kind object;
  #L400a58.  call temp:= `add`(v3, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L400a5e.  v0:= v0 + 1;
  #L400a62.  goto L400a4e;
  #L400a64.  return @kind void;
}
procedure `int` `a`(`n.b.a.u.c$b` v4 @kind this, `n.b.a.u.e` v5 @kind object, `java.lang.CharSequence` v6 @kind object, `int` v7 ) @signature `Ln/b/a/u/c$b;.a:(Ln/b/a/u/e;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L400908.  v0:= v4.`n.b.a.u.c$b.c` @type ^`n.b.a.u.k`[] @kind object;
  #L40090c.  if v0 == 0 then goto L400930;
  #L400910.  v1:= length @variable v0;
  #L400912.  v2:= 0I;
  #L400914.  if v2 >= v1 then goto L40092e;
  #L400918.  if v7 < 0 then goto L40092e;
  #L40091c.  v3:= v0[v2] @kind object;
  #L400920.  call temp:= `a`(v3, v5, v6, v7) @signature `Ln/b/a/u/k;.a:(Ln/b/a/u/e;Ljava/lang/CharSequence;I)I` @kind interface;
  #L400926.  v7:= temp;
  #L400928.  v2:= v2 + 1;
  #L40092c.  goto L400914;
  #L40092e.  return v7;
  #L400930.  v5:= new `java.lang.UnsupportedOperationException`;
  #L400934.  call `<init>`(v5) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L40093a.  throw v5;
}
procedure `void` `a`(`n.b.a.u.c$b` v13 @kind this, `java.lang.Appendable` v14 @kind object, `long` v15 , `n.b.a.a` v17 @kind object, `int` v18 , `n.b.a.f` v19 @kind object, `java.util.Locale` v20 @kind object) @signature `Ln/b/a/u/c$b;.a:(Ljava/lang/Appendable;JLn/b/a/a;ILn/b/a/f;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L400af0.  v0:= v13 @kind object;
  #L400af2.  v1:= v0.`n.b.a.u.c$b.b` @type ^`n.b.a.u.m`[] @kind object;
  #L400af6.  if v1 == 0 then goto L400b3a;
  #L400afa.  if v20 != 0 then goto L400b08;
  #L400afe.  call temp:= `getDefault`() @signature `Ljava/util/Locale;.getDefault:()Ljava/util/Locale;` @kind static;
  #L400b04.  v2:= temp @kind object;
  #L400b06.  goto L400b0c;
  #L400b08.  v2:= v20 @kind object;
  #L400b0c.  v11:= length @variable v1;
  #L400b0e.  v3:= 0I;
  #L400b10.  v12:= 0I;
  #L400b12.  if v12 >= v11 then goto L400b38;
  #L400b16.  v3:= v1[v12] @kind object;
  #L400b1a.  v4:= v14 @kind object;
  #L400b1c.  v5:= v15 @kind wide;
  #L400b1e.  v7:= v17 @kind object;
  #L400b22.  v8:= v18;
  #L400b26.  v9:= v19 @kind object;
  #L400b2a.  v10:= v2 @kind object;
  #L400b2c.  call `a`(v3, v4, v5, v7, v8, v9, v10) @signature `Ln/b/a/u/m;.a:(Ljava/lang/Appendable;JLn/b/a/a;ILn/b/a/f;Ljava/util/Locale;)V` @kind interface;
  #L400b32.  v12:= v12 + 1;
  #L400b36.  goto L400b12;
  #L400b38.  return @kind void;
  #L400b3a.  v1:= new `java.lang.UnsupportedOperationException`;
  #L400b3e.  call `<init>`(v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L400b44.  throw v1;
}
procedure `boolean` `a`(`n.b.a.u.c$b` v1 @kind this) @signature `Ln/b/a/u/c$b;.a:()Z` @AccessFlag  {
    temp;
    v0;

  #L400898.  v0:= v1.`n.b.a.u.c$b.c` @type ^`n.b.a.u.k`[] @kind object;
  #L40089c.  if v0 == 0 then goto L4008a4;
  #L4008a0.  v0:= 1I;
  #L4008a2.  goto L4008a6;
  #L4008a4.  v0:= 0I;
  #L4008a6.  return v0;
}
procedure `int` `b`(`n.b.a.u.c$b` v1 @kind this) @signature `Ln/b/a/u/c$b;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4008d8.  v0:= v1.`n.b.a.u.c$b.e` @type ^`int`;
  #L4008dc.  return v0;
}
procedure `boolean` `c`(`n.b.a.u.c$b` v1 @kind this) @signature `Ln/b/a/u/c$b;.c:()Z` @AccessFlag  {
    temp;
    v0;

  #L4008b8.  v0:= v1.`n.b.a.u.c$b.b` @type ^`n.b.a.u.m`[] @kind object;
  #L4008bc.  if v0 == 0 then goto L4008c4;
  #L4008c0.  v0:= 1I;
  #L4008c2.  goto L4008c6;
  #L4008c4.  v0:= 0I;
  #L4008c6.  return v0;
}
procedure `int` `e`(`n.b.a.u.c$b` v1 @kind this) @signature `Ln/b/a/u/c$b;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4008f0.  v0:= v1.`n.b.a.u.c$b.d` @type ^`int`;
  #L4008f4.  return v0;
}
