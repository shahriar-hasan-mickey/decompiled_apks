record `n.b.a.u.c$k` @kind class @AccessFlag  extends `n.b.a.u.m` @kind interface, `n.b.a.u.k` @kind interface {
  `java.util.Map` `n.b.a.u.c$k.b` @AccessFlag PRIVATE_FINAL;
  `int` `n.b.a.u.c$k.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`n.b.a.u.c$k` v0 @kind this, `int` v1 , `java.util.Map` v2 @kind object) @signature `Ln/b/a/u/c$k;.<init>:(ILjava/util/Map;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L401b14.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L401b1a.  v0.`n.b.a.u.c$k.c` @type ^`int` := v1;
  #L401b1e.  v0.`n.b.a.u.c$k.b` @type ^`java.util.Map` := v2 @kind object;
  #L401b22.  return @kind void;
}
procedure `java.lang.String` `a`(`n.b.a.u.c$k` v3 @kind this, `long` v4 , `n.b.a.f` v6 @kind object, `java.util.Locale` v7 @kind object) @signature `Ln/b/a/u/c$k;.a:(JLn/b/a/f;Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L401ad4.  v0:= "" @kind object;
  #L401ad8.  if v6 != 0 then goto L401ade;
  #L401adc.  return v0 @kind object;
  #L401ade.  v1:= v3.`n.b.a.u.c$k.c` @type ^`int`;
  #L401ae2.  if v1 == 0 then goto L401af8;
  #L401ae6.  v2:= 1I;
  #L401ae8.  if v1 == v2 then goto L401aee;
  #L401aec.  return v0 @kind object;
  #L401aee.  call temp:= `b`(v6, v4, v7) @signature `Ln/b/a/f;.b:(JLjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L401af4.  v4:= temp @kind object;
  #L401af6.  return v4 @kind object;
  #L401af8.  call temp:= `a`(v6, v4, v7) @signature `Ln/b/a/f;.a:(JLjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L401afe.  v4:= temp @kind object;
  #L401b00.  return v4 @kind object;
}
procedure `int` `a`(`n.b.a.u.c$k` v6 @kind this, `n.b.a.u.e` v7 @kind object, `java.lang.CharSequence` v8 @kind object, `int` v9 ) @signature `Ln/b/a/u/c$k;.a:(Ln/b/a/u/e;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L401a38.  v0:= v6.`n.b.a.u.c$k.b` @type ^`java.util.Map` @kind object;
  #L401a3c.  if v0 == 0 then goto L401a42;
  #L401a40.  goto L401a4a;
  #L401a42.  call temp:= `c`() @signature `Ln/b/a/e;.c:()Ljava/util/Map;` @kind static;
  #L401a48.  v0:= temp @kind object;
  #L401a4a.  v1:= 0I;
  #L401a4c.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L401a52.  v2:= temp @kind object;
  #L401a54.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L401a5a.  v2:= temp @kind object;
  #L401a5c.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L401a62.  v3:= temp;
  #L401a64.  if v3 == 0 then goto L401a9c;
  #L401a68.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L401a6e.  v3:= temp @kind object;
  #L401a70.  v3:= (`java.lang.String`) v3 @kind object;
  #L401a74.  call temp:= `a`(v8, v9, v3) @signature `Ln/b/a/u/c;.a:(Ljava/lang/CharSequence;ILjava/lang/String;)Z` @kind static;
  #L401a7a.  v4:= temp;
  #L401a7c.  if v4 == 0 then goto L401a5c;
  #L401a80.  if v1 == 0 then goto L401a98;
  #L401a84.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L401a8a.  v4:= temp;
  #L401a8c.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L401a92.  v5:= temp;
  #L401a94.  if v4 <= v5 then goto L401a5c;
  #L401a98.  v1:= v3 @kind object;
  #L401a9a.  goto L401a5c;
  #L401a9c.  if v1 == 0 then goto L401abe;
  #L401aa0.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L401aa6.  v8:= temp @kind object;
  #L401aa8.  v8:= (`n.b.a.f`) v8 @kind object;
  #L401aac.  call `a`(v7, v8) @signature `Ln/b/a/u/e;.a:(Ln/b/a/f;)V` @kind virtual;
  #L401ab2.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L401ab8.  v7:= temp;
  #L401aba.  v9:= v9 + v7 @kind int;
  #L401abc.  return v9;
  #L401abe.  v7:= ~v9 @kind int;
  #L401ac0.  return v7;
}
procedure `void` `a`(`n.b.a.u.c$k` v0 @kind this, `java.lang.Appendable` v1 @kind object, `long` v2 , `n.b.a.a` v4 @kind object, `int` v5 , `n.b.a.f` v6 @kind object, `java.util.Locale` v7 @kind object) @signature `Ln/b/a/u/c$k;.a:(Ljava/lang/Appendable;JLn/b/a/a;ILn/b/a/f;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;

  #L401b34.  v4:= (`long`) v5 @kind i2l;
  #L401b36.  v2:= v2 - v4 @kind long;
  #L401b38.  call temp:= `a`(v0, v2, v6, v7) @signature `Ln/b/a/u/c$k;.a:(JLn/b/a/f;Ljava/util/Locale;)Ljava/lang/String;` @kind direct;
  #L401b3e.  v2:= temp @kind object;
  #L401b40.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L401b46.  return @kind void;
}
procedure `int` `b`(`n.b.a.u.c$k` v2 @kind this) @signature `Ln/b/a/u/c$k;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4019f0.  v0:= v2.`n.b.a.u.c$k.c` @type ^`int`;
  #L4019f4.  v1:= 1I;
  #L4019f6.  if v0 != v1 then goto L4019fe;
  #L4019fa.  v0:= 4I;
  #L4019fc.  goto L401a02;
  #L4019fe.  v0:= 20I;
  #L401a02.  return v0;
}
procedure `int` `e`(`n.b.a.u.c$k` v2 @kind this) @signature `Ln/b/a/u/c$k;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L401a14.  v0:= v2.`n.b.a.u.c$k.c` @type ^`int`;
  #L401a18.  v1:= 1I;
  #L401a1a.  if v0 != v1 then goto L401a22;
  #L401a1e.  v0:= 4I;
  #L401a20.  goto L401a26;
  #L401a22.  v0:= 20I;
  #L401a26.  return v0;
}
