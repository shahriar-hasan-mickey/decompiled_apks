record `n.b.a.u.l` @kind class @AccessFlag  extends `n.b.a.u.d` @kind interface, `n.b.a.u.k` @kind interface {
  `n.b.a.u.k` `n.b.a.u.l.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`n.b.a.u.l` v0 @kind this, `n.b.a.u.k` v1 @kind object) @signature `Ln/b/a/u/l;.<init>:(Ln/b/a/u/k;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L405c08.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L405c0e.  v0.`n.b.a.u.l.b` @type ^`n.b.a.u.k` := v1 @kind object;
  #L405c12.  return @kind void;
}
procedure `n.b.a.u.d` `a`(`n.b.a.u.k` v1 @kind object) @signature `Ln/b/a/u/l;.a:(Ln/b/a/u/k;)Ln/b/a/u/d;` @AccessFlag STATIC {
    temp;
    v0;

  #L405bc0.  v0:= instanceof @variable v1 @type ^`n.b.a.u.f` @kind boolean;
  #L405bc4.  if v0 == 0 then goto L405bd6;
  #L405bc8.  v1:= (`n.b.a.u.f`) v1 @kind object;
  #L405bcc.  call temp:= `a`(v1) @signature `Ln/b/a/u/f;.a:()Ln/b/a/u/d;` @kind virtual;
  #L405bd2.  v1:= temp @kind object;
  #L405bd4.  return v1 @kind object;
  #L405bd6.  v0:= instanceof @variable v1 @type ^`n.b.a.u.d` @kind boolean;
  #L405bda.  if v0 == 0 then goto L405be4;
  #L405bde.  v1:= (`n.b.a.u.d`) v1 @kind object;
  #L405be2.  return v1 @kind object;
  #L405be4.  if v1 != 0 then goto L405bec;
  #L405be8.  v1:= 0I;
  #L405bea.  return v1 @kind object;
  #L405bec.  v0:= new `n.b.a.u.l`;
  #L405bf0.  call `<init>`(v0, v1) @signature `Ln/b/a/u/l;.<init>:(Ln/b/a/u/k;)V` @kind direct;
  #L405bf6.  return v0 @kind object;
}
procedure `int` `a`(`n.b.a.u.l` v1 @kind this, `n.b.a.u.e` v2 @kind object, `java.lang.CharSequence` v3 @kind object, `int` v4 ) @signature `Ln/b/a/u/l;.a:(Ln/b/a/u/e;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L405b80.  v0:= v1.`n.b.a.u.l.b` @type ^`n.b.a.u.k` @kind object;
  #L405b84.  call temp:= `a`(v0, v2, v3, v4) @signature `Ln/b/a/u/k;.a:(Ln/b/a/u/e;Ljava/lang/CharSequence;I)I` @kind interface;
  #L405b8a.  v2:= temp;
  #L405b8c.  return v2;
}
procedure `int` `a`(`n.b.a.u.l` v1 @kind this, `n.b.a.u.e` v2 @kind object, `java.lang.String` v3 @kind object, `int` v4 ) @signature `Ln/b/a/u/l;.a:(Ln/b/a/u/e;Ljava/lang/String;I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L405ba0.  v0:= v1.`n.b.a.u.l.b` @type ^`n.b.a.u.k` @kind object;
  #L405ba4.  call temp:= `a`(v0, v2, v3, v4) @signature `Ln/b/a/u/k;.a:(Ln/b/a/u/e;Ljava/lang/CharSequence;I)I` @kind interface;
  #L405baa.  v2:= temp;
  #L405bac.  return v2;
}
procedure `int` `b`(`n.b.a.u.l` v1 @kind this) @signature `Ln/b/a/u/l;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L405b60.  v0:= v1.`n.b.a.u.l.b` @type ^`n.b.a.u.k` @kind object;
  #L405b64.  call temp:= `b`(v0) @signature `Ln/b/a/u/k;.b:()I` @kind interface;
  #L405b6a.  v0:= temp;
  #L405b6c.  return v0;
}
procedure `boolean` `equals`(`n.b.a.u.l` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Ln/b/a/u/l;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L405b24.  if v2 != v1 then goto L405b2c;
  #L405b28.  v2:= 1I;
  #L405b2a.  return v2;
  #L405b2c.  v0:= instanceof @variable v2 @type ^`n.b.a.u.l` @kind boolean;
  #L405b30.  if v0 == 0 then goto L405b4a;
  #L405b34.  v2:= (`n.b.a.u.l`) v2 @kind object;
  #L405b38.  v0:= v1.`n.b.a.u.l.b` @type ^`n.b.a.u.k` @kind object;
  #L405b3c.  v2:= v2.`n.b.a.u.l.b` @type ^`n.b.a.u.k` @kind object;
  #L405b40.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L405b46.  v2:= temp;
  #L405b48.  return v2;
  #L405b4a.  v2:= 0I;
  #L405b4c.  return v2;
}
