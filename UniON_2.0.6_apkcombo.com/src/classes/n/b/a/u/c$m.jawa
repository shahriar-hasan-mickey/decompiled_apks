record `n.b.a.u.c$m` @kind class @AccessFlag  extends `n.b.a.u.m` @kind interface, `n.b.a.u.k` @kind interface {
  `n.b.a.d` `n.b.a.u.c$m.b` @AccessFlag PRIVATE_FINAL;
  `int` `n.b.a.u.c$m.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `n.b.a.u.c$m.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`n.b.a.u.c$m` v0 @kind this, `n.b.a.d` v1 @kind object, `int` v2 , `boolean` v3 ) @signature `Ln/b/a/u/c$m;.<init>:(Ln/b/a/d;IZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L402218.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40221e.  v0.`n.b.a.u.c$m.b` @type ^`n.b.a.d` := v1 @kind object;
  #L402222.  v0.`n.b.a.u.c$m.c` @type ^`int` := v2;
  #L402226.  v0.`n.b.a.u.c$m.d` @type ^`boolean` := v3 @kind boolean;
  #L40222a.  return @kind void;
}
procedure `int` `a`(`n.b.a.u.c$m` v1 @kind this, `long` v2 , `n.b.a.a` v4 @kind object) @signature `Ln/b/a/u/c$m;.a:(JLn/b/a/a;)I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L402000.  v0:= v1.`n.b.a.u.c$m.b` @type ^`n.b.a.d` @kind object;
  #L402004.  call temp:= `a`(v0, v4) @signature `Ln/b/a/d;.a:(Ln/b/a/a;)Ln/b/a/c;` @kind virtual;
  #L40200a.  v4:= temp @kind object;
  #L40200c.  call temp:= `a`(v4, v2) @signature `Ln/b/a/c;.a:(J)I` @kind virtual;
  #L402012.  v2:= temp;
  #L402014.  if v2 >= 0 then goto L40201a;
  #L402018.  v2:= -v2 @kind int;
  #L40201a.  v2:= v2 %% 100;
  #L40201e.  return v2;
  #L402020.  v2:= -1I;
  #L402022.  return v2;
  catch `java.lang.RuntimeException` @[L402000..L40201e] goto L402020;
}
procedure `int` `a`(`n.b.a.u.c$m` v12 @kind this, `n.b.a.u.e` v13 @kind object, `java.lang.CharSequence` v14 @kind object, `int` v15 ) @signature `Ln/b/a/u/c$m;.a:(Ln/b/a/u/e;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L402044.  call temp:= `length`(v14) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L40204a.  v0:= temp;
  #L40204c.  v0:= v0 - v15 @kind int;
  #L40204e.  v1:= v12.`n.b.a.u.c$m.d` @type ^`boolean` @kind boolean;
  #L402052.  v2:= 57I;
  #L402056.  v3:= 2I;
  #L402058.  v4:= 0I;
  #L40205a.  v5:= 48I;
  #L40205e.  v6:= 1I;
  #L402060.  if v1 != 0 then goto L402074;
  #L402064.  call temp:= `min`(v3, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L40206a.  v0:= temp;
  #L40206c.  if v0 >= v3 then goto L4020e4;
  #L402070.  v13:= ~v15 @kind int;
  #L402072.  return v13;
  #L402074.  v1:= v15;
  #L402076.  v15:= 0I;
  #L402078.  v7:= 0I;
  #L40207a.  v8:= 0I;
  #L40207c.  if v15 >= v0 then goto L4020d0;
  #L402080.  v9:= v1 + v15 @kind int;
  #L402084.  call temp:= `charAt`(v14, v9) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L40208a.  v9:= temp;
  #L40208c.  if v15 != 0 then goto L4020c0;
  #L402090.  v10:= 45I;
  #L402094.  if v9 == v10 then goto L4020a0;
  #L402098.  v11:= 43I;
  #L40209c.  if v9 != v11 then goto L4020c0;
  #L4020a0.  if v9 != v10 then goto L4020a8;
  #L4020a4.  v8:= 1I;
  #L4020a6.  goto L4020aa;
  #L4020a8.  v8:= 0I;
  #L4020aa.  if v8 == 0 then goto L4020b4;
  #L4020ae.  v15:= v15 + 1;
  #L4020b2.  goto L4020bc;
  #L4020b4.  v1:= v1 + 1;
  #L4020b8.  v0:= v0 + -1;
  #L4020bc.  v7:= 1I;
  #L4020be.  goto L40207c;
  #L4020c0.  if v9 < v5 then goto L4020d0;
  #L4020c4.  if v9 <= v2 then goto L4020ca;
  #L4020c8.  goto L4020d0;
  #L4020ca.  v15:= v15 + 1;
  #L4020ce.  goto L40207c;
  #L4020d0.  if v15 != 0 then goto L4020d8;
  #L4020d4.  v13:= ~v1 @kind int;
  #L4020d6.  return v13;
  #L4020d8.  if v7 != 0 then goto L40217a;
  #L4020dc.  if v15 == v3 then goto L4020e2;
  #L4020e0.  goto L40217a;
  #L4020e2.  v15:= v1;
  #L4020e4.  call temp:= `charAt`(v14, v15) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L4020ea.  v0:= temp;
  #L4020ec.  if v0 < v5 then goto L402176;
  #L4020f0.  if v0 <= v2 then goto L4020f6;
  #L4020f4.  goto L402176;
  #L4020f6.  v0:= v0 - v5 @kind int;
  #L4020f8.  v1:= v15 + 1;
  #L4020fc.  call temp:= `charAt`(v14, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L402102.  v14:= temp;
  #L402104.  if v14 < v5 then goto L402172;
  #L402108.  if v14 <= v2 then goto L40210e;
  #L40210c.  goto L402172;
  #L40210e.  v1:= v0 ^< 3;
  #L402112.  v0:= v0 ^< v6 @kind int;
  #L402114.  v1:= v1 + v0 @kind int;
  #L402116.  v1:= v1 + v14 @kind int;
  #L402118.  v1:= v1 - v5 @kind int;
  #L40211a.  v14:= v12.`n.b.a.u.c$m.c` @type ^`int`;
  #L40211e.  call temp:= `d`(v13) @signature `Ln/b/a/u/e;.d:()Ljava/lang/Integer;` @kind virtual;
  #L402124.  v0:= temp @kind object;
  #L402126.  if v0 == 0 then goto L40213a;
  #L40212a.  call temp:= `d`(v13) @signature `Ln/b/a/u/e;.d:()Ljava/lang/Integer;` @kind virtual;
  #L402130.  v14:= temp @kind object;
  #L402132.  call temp:= `intValue`(v14) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L402138.  v14:= temp;
  #L40213a.  v14:= v14 + -50;
  #L40213e.  v0:= 100I;
  #L402142.  if v14 < 0 then goto L40214c;
  #L402146.  v2:= v14 %% 100;
  #L40214a.  goto L402156;
  #L40214c.  v2:= v14 + 1;
  #L402150.  v2:= v2 %% v0 @kind int;
  #L402152.  v2:= v2 + 99;
  #L402156.  if v1 >= v2 then goto L40215c;
  #L40215a.  goto L40215e;
  #L40215c.  v0:= 0I;
  #L40215e.  v14:= v14 + v0 @kind int;
  #L402160.  v14:= v14 - v2 @kind int;
  #L402162.  v1:= v1 + v14 @kind int;
  #L402164.  v14:= v12.`n.b.a.u.c$m.b` @type ^`n.b.a.d` @kind object;
  #L402168.  call `a`(v13, v14, v1) @signature `Ln/b/a/u/e;.a:(Ln/b/a/d;I)V` @kind virtual;
  #L40216e.  v15:= v15 + v3 @kind int;
  #L402170.  return v15;
  #L402172.  v13:= ~v15 @kind int;
  #L402174.  return v13;
  #L402176.  v13:= ~v15 @kind int;
  #L402178.  return v13;
  #L40217a.  v0:= 9I;
  #L40217e.  if v15 < v0 then goto L40219e;
  #L402182.  v15:= v15 + v1 @kind int;
  #L402184.  call temp:= `subSequence`(v14, v1, v15) @signature `Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L40218a.  v14:= temp @kind object;
  #L40218c.  call temp:= `toString`(v14) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L402192.  v14:= temp @kind object;
  #L402194.  call temp:= `parseInt`(v14) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L40219a.  v14:= temp;
  #L40219c.  goto L4021e8;
  #L40219e.  if v8 == 0 then goto L4021a8;
  #L4021a2.  v0:= v1 + 1;
  #L4021a6.  goto L4021aa;
  #L4021a8.  v0:= v1;
  #L4021aa.  v2:= v0 + 1;
  #L4021ae.  call temp:= `charAt`(v14, v0) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L4021b4.  v0:= temp;
  #L4021b6.  v0:= v0 - v5 @kind int;
  #L4021b8.  v15:= v15 + v1 @kind int;
  #L4021ba.  if v2 >= v15 then goto L4021de;
  #L4021be.  v1:= v0 ^< 3;
  #L4021c2.  v0:= v0 ^< 1;
  #L4021c6.  v1:= v1 + v0 @kind int;
  #L4021c8.  v0:= v2 + 1;
  #L4021cc.  call temp:= `charAt`(v14, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L4021d2.  v2:= temp;
  #L4021d4.  v1:= v1 + v2 @kind int;
  #L4021d6.  v1:= v1 - v5 @kind int;
  #L4021d8.  v2:= v0;
  #L4021da.  v0:= v1;
  #L4021dc.  goto L4021ba;
  #L4021de.  if v8 == 0 then goto L4021e6;
  #L4021e2.  v14:= -v0 @kind int;
  #L4021e4.  goto L4021e8;
  #L4021e6.  v14:= v0;
  #L4021e8.  v0:= v12.`n.b.a.u.c$m.b` @type ^`n.b.a.d` @kind object;
  #L4021ec.  call `a`(v13, v0, v14) @signature `Ln/b/a/u/e;.a:(Ln/b/a/d;I)V` @kind virtual;
  #L4021f2.  return v15;
  #L4021f4.  v13:= ~v1 @kind int;
  #L4021f6.  return v13;
  catch `java.lang.StringIndexOutOfBoundsException` @[L4021ae..L4021b6] goto L4021f4;
}
procedure `void` `a`(`n.b.a.u.c$m` v0 @kind this, `java.lang.Appendable` v1 @kind object, `long` v2 , `n.b.a.a` v4 @kind object, `int` v5 , `n.b.a.f` v6 @kind object, `java.util.Locale` v7 @kind object) @signature `Ln/b/a/u/c$m;.a:(Ljava/lang/Appendable;JLn/b/a/a;ILn/b/a/f;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;

  #L40223c.  call temp:= `a`(v0, v2, v4) @signature `Ln/b/a/u/c$m;.a:(JLn/b/a/a;)I` @kind direct;
  #L402242.  v2:= temp;
  #L402244.  if v2 >= 0 then goto L40225c;
  #L402248.  v2:= 65533I;
  #L40224e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L402254.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L40225a.  goto L402264;
  #L40225c.  v3:= 2I;
  #L40225e.  call `a`(v1, v2, v3) @signature `Ln/b/a/u/i;.a:(Ljava/lang/Appendable;II)V` @kind static;
  #L402264.  return @kind void;
}
procedure `int` `b`(`n.b.a.u.c$m` v1 @kind this) @signature `Ln/b/a/u/c$m;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L401fcc.  v0:= v1.`n.b.a.u.c$m.d` @type ^`boolean` @kind boolean;
  #L401fd0.  if v0 == 0 then goto L401fd8;
  #L401fd4.  v0:= 4I;
  #L401fd6.  goto L401fda;
  #L401fd8.  v0:= 2I;
  #L401fda.  return v0;
}
procedure `int` `e`(`n.b.a.u.c$m` v1 @kind this) @signature `Ln/b/a/u/c$m;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L401fec.  v0:= 2I;
  #L401fee.  return v0;
}
