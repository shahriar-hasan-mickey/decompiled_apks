record `n.a.a.a.a` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<clinit>`() @signature `Ln/a/a/a/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f69dc.  v0:= `@@java.io.File.separatorChar` @type ^`char` @kind char;
  #L3f69e0.  v0:= new `n.a.a.a.b.a`;
  #L3f69e4.  v1:= 4I;
  #L3f69e6.  call `<init>`(v0, v1) @signature `Ln/a/a/a/b/a;.<init>:(I)V` @kind direct;
  #L3f69ec.  v1:= new `java.io.PrintWriter`;
  #L3f69f0.  call `<init>`(v1, v0) @signature `Ljava/io/PrintWriter;.<init>:(Ljava/io/Writer;)V` @kind direct;
  #L3f69f6.  call `println`(v1) @signature `Ljava/io/PrintWriter;.println:()V` @kind virtual;
  #L3f69fc.  call temp:= `toString`(v0) @signature `Ln/a/a/a/b/a;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f6a02.  call `close`(v1) @signature `Ljava/io/PrintWriter;.close:()V` @kind virtual;
  #L3f6a08.  call `close`(v0) @signature `Ln/a/a/a/b/a;.close:()V` @kind virtual;
  #L3f6a0e.  return @kind void;
  #L3f6a10.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f6a12.  throw v2;
  #L3f6a14.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f6a16.  call `close`(v1) @signature `Ljava/io/PrintWriter;.close:()V` @kind virtual;
  #L3f6a1c.  goto L3f6a26;
  #L3f6a1e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f6a20.  call `addSuppressed`(v2, v1) @signature `Ljava/lang/Throwable;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L3f6a26.  throw v3;
  #L3f6a28.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f6a2a.  throw v1;
  #L3f6a2c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f6a2e.  call `close`(v0) @signature `Ln/a/a/a/b/a;.close:()V` @kind virtual;
  #L3f6a34.  goto L3f6a3e;
  #L3f6a36.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f6a38.  call `addSuppressed`(v1, v0) @signature `Ljava/lang/Throwable;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L3f6a3e.  throw v2;
  catch `java.lang.Throwable` @[L3f69ec..L3f69f6] goto L3f6a28;
  catch `java.lang.Throwable` @[L3f69f6..L3f6a02] goto L3f6a10;
  catch `java.lang.Throwable` @[L3f6a02..L3f6a08] goto L3f6a28;
  catch `java.lang.Throwable` @[L3f6a12..L3f6a14] goto L3f6a14;
  catch `java.lang.Throwable` @[L3f6a16..L3f6a1c] goto L3f6a1e;
  catch `java.lang.Throwable` @[L3f6a20..L3f6a28] goto L3f6a28;
  catch `java.lang.Throwable` @[L3f6a2a..L3f6a2c] goto L3f6a2c;
  catch `java.lang.Throwable` @[L3f6a2e..L3f6a34] goto L3f6a36;
}
procedure `int` `a`(`java.io.InputStream` v3 @kind object, `java.io.OutputStream` v4 @kind object) @signature `Ln/a/a/a/a;.a:(Ljava/io/InputStream;Ljava/io/OutputStream;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3f6938.  call temp:= `b`(v3, v4) @signature `Ln/a/a/a/a;.b:(Ljava/io/InputStream;Ljava/io/OutputStream;)J` @kind static;
  #L3f693e.  v3:= temp @kind wide;
  #L3f6940.  v0:= 2147483647L;
  #L3f6946.  v2:= lcmp(v3, v0);
  #L3f694a.  if v2 <= 0 then goto L3f6952;
  #L3f694e.  v3:= -1I;
  #L3f6950.  return v3;
  #L3f6952.  v4:= (`int`) v3 @kind l2i;
  #L3f6954.  return v4;
}
procedure `long` `a`(`java.io.InputStream` v0 @kind object, `java.io.OutputStream` v1 @kind object, `int` v2 ) @signature `Ln/a/a/a/a;.a:(Ljava/io/InputStream;Ljava/io/OutputStream;I)J` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3f6968.  v2:= new `byte`[v2];
  #L3f696c.  call temp:= `a`(v0, v1, v2) @signature `Ln/a/a/a/a;.a:(Ljava/io/InputStream;Ljava/io/OutputStream;[B)J` @kind static;
  #L3f6972.  v0:= temp @kind wide;
  #L3f6974.  return v0 @kind wide;
}
procedure `long` `a`(`java.io.InputStream` v4 @kind object, `java.io.OutputStream` v5 @kind object, `byte`[] v6 @kind object) @signature `Ln/a/a/a/a;.a:(Ljava/io/InputStream;Ljava/io/OutputStream;[B)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f69a8.  v0:= 0L;
  #L3f69ac.  v2:= -1I;
  #L3f69ae.  call temp:= `read`(v4, v6) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L3f69b4.  v3:= temp;
  #L3f69b6.  if v2 == v3 then goto L3f69c8;
  #L3f69ba.  v2:= 0I;
  #L3f69bc.  call `write`(v5, v6, v2, v3) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L3f69c2.  v2:= (`long`) v3 @kind i2l;
  #L3f69c4.  v0:= v0 + v2 @kind long;
  #L3f69c6.  goto L3f69ac;
  #L3f69c8.  return v0 @kind wide;
}
procedure `void` `a`(`byte`[] v0 @kind object, `java.io.OutputStream` v1 @kind object) @signature `Ln/a/a/a/a;.a:([BLjava/io/OutputStream;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3f6aa0.  if v0 == 0 then goto L3f6aaa;
  #L3f6aa4.  call `write`(v1, v0) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L3f6aaa.  return @kind void;
}
procedure `long` `b`(`java.io.InputStream` v1 @kind object, `java.io.OutputStream` v2 @kind object) @signature `Ln/a/a/a/a;.b:(Ljava/io/InputStream;Ljava/io/OutputStream;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f6988.  v0:= 4096I;
  #L3f698c.  call temp:= `a`(v1, v2, v0) @signature `Ln/a/a/a/a;.a:(Ljava/io/InputStream;Ljava/io/OutputStream;I)J` @kind static;
  #L3f6992.  v1:= temp @kind wide;
  #L3f6994.  return v1 @kind wide;
}
