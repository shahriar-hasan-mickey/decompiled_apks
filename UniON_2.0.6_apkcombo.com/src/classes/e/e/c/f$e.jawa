record `e.e.c.f$e` @kind class @AccessFlag  extends `e.e.c.v` @kind class {
  `e.e.c.v` `e.e.c.f$e.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.c.f$e` v0 @kind this, `e.e.c.v` v1 @kind object) @signature `Le/e/c/f$e;.<init>:(Le/e/c/v;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L372abc.  v0.`e.e.c.f$e.a` @type ^`e.e.c.v` := v1 @kind object;
  #L372ac0.  call `<init>`(v0) @signature `Le/e/c/v;.<init>:()V` @kind direct;
  #L372ac6.  return @kind void;
}
procedure `java.lang.Object` `a`(`e.e.c.f$e` v0 @kind this, `e.e.c.a0.a` v1 @kind object) @signature `Le/e/c/f$e;.a:(Le/e/c/a0/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L372a0c.  call temp:= `a`(v0, v1) @signature `Le/e/c/f$e;.a:(Le/e/c/a0/a;)Ljava/util/concurrent/atomic/AtomicLongArray;` @kind virtual;
  #L372a12.  v1:= temp @kind object;
  #L372a14.  return v1 @kind object;
}
procedure `java.util.concurrent.atomic.AtomicLongArray` `a`(`e.e.c.f$e` v5 @kind this, `e.e.c.a0.a` v6 @kind object) @signature `Le/e/c/f$e;.a:(Le/e/c/a0/a;)Ljava/util/concurrent/atomic/AtomicLongArray;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L372a28.  v0:= new `java.util.ArrayList`;
  #L372a2c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L372a32.  call `k`(v6) @signature `Le/e/c/a0/a;.k:()V` @kind virtual;
  #L372a38.  call temp:= `q`(v6) @signature `Le/e/c/a0/a;.q:()Z` @kind virtual;
  #L372a3e.  v1:= temp;
  #L372a40.  if v1 == 0 then goto L372a6c;
  #L372a44.  v1:= v5.`e.e.c.f$e.a` @type ^`e.e.c.v` @kind object;
  #L372a48.  call temp:= `a`(v1, v6) @signature `Le/e/c/v;.a:(Le/e/c/a0/a;)Ljava/lang/Object;` @kind virtual;
  #L372a4e.  v1:= temp @kind object;
  #L372a50.  v1:= (`java.lang.Number`) v1 @kind object;
  #L372a54.  call temp:= `longValue`(v1) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L372a5a.  v1:= temp @kind wide;
  #L372a5c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L372a62.  v1:= temp @kind object;
  #L372a64.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L372a6a.  goto L372a38;
  #L372a6c.  call `n`(v6) @signature `Le/e/c/a0/a;.n:()V` @kind virtual;
  #L372a72.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L372a78.  v6:= temp;
  #L372a7a.  v1:= new `java.util.concurrent.atomic.AtomicLongArray`;
  #L372a7e.  call `<init>`(v1, v6) @signature `Ljava/util/concurrent/atomic/AtomicLongArray;.<init>:(I)V` @kind direct;
  #L372a84.  v2:= 0I;
  #L372a86.  if v2 >= v6 then goto L372aaa;
  #L372a8a.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L372a90.  v3:= temp @kind object;
  #L372a92.  v3:= (`java.lang.Long`) v3 @kind object;
  #L372a96.  call temp:= `longValue`(v3) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L372a9c.  v3:= temp @kind wide;
  #L372a9e.  call `set`(v1, v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicLongArray;.set:(IJ)V` @kind virtual;
  #L372aa4.  v2:= v2 + 1;
  #L372aa8.  goto L372a86;
  #L372aaa.  return v1 @kind object;
}
procedure `void` `a`(`e.e.c.f$e` v0 @kind this, `e.e.c.a0.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Le/e/c/f$e;.a:(Le/e/c/a0/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L372ad8.  v2:= (`java.util.concurrent.atomic.AtomicLongArray`) v2 @kind object;
  #L372adc.  call `a`(v0, v1, v2) @signature `Le/e/c/f$e;.a:(Le/e/c/a0/c;Ljava/util/concurrent/atomic/AtomicLongArray;)V` @kind virtual;
  #L372ae2.  return @kind void;
}
procedure `void` `a`(`e.e.c.f$e` v5 @kind this, `e.e.c.a0.c` v6 @kind object, `java.util.concurrent.atomic.AtomicLongArray` v7 @kind object) @signature `Le/e/c/f$e;.a:(Le/e/c/a0/c;Ljava/util/concurrent/atomic/AtomicLongArray;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L372af4.  call temp:= `k`(v6) @signature `Le/e/c/a0/c;.k:()Le/e/c/a0/c;` @kind virtual;
  #L372afa.  call temp:= `length`(v7) @signature `Ljava/util/concurrent/atomic/AtomicLongArray;.length:()I` @kind virtual;
  #L372b00.  v0:= temp;
  #L372b02.  v1:= 0I;
  #L372b04.  if v1 >= v0 then goto L372b28;
  #L372b08.  v2:= v5.`e.e.c.f$e.a` @type ^`e.e.c.v` @kind object;
  #L372b0c.  call temp:= `get`(v7, v1) @signature `Ljava/util/concurrent/atomic/AtomicLongArray;.get:(I)J` @kind virtual;
  #L372b12.  v3:= temp @kind wide;
  #L372b14.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L372b1a.  v3:= temp @kind object;
  #L372b1c.  call `a`(v2, v6, v3) @signature `Le/e/c/v;.a:(Le/e/c/a0/c;Ljava/lang/Object;)V` @kind virtual;
  #L372b22.  v1:= v1 + 1;
  #L372b26.  goto L372b04;
  #L372b28.  call temp:= `m`(v6) @signature `Le/e/c/a0/c;.m:()Le/e/c/a0/c;` @kind virtual;
  #L372b2e.  return @kind void;
}
