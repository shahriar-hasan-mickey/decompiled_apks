record `e.e.c.q` @kind class @AccessFlag PUBLIC_FINAL extends `e.e.c.l` @kind class {
  `java.lang.Object` `e.e.c.q.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.c.q` v0 @kind this, `java.lang.Boolean` v1 @kind object) @signature `Le/e/c/q;.<init>:(Ljava/lang/Boolean;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L374274.  call `<init>`(v0) @signature `Le/e/c/l;.<init>:()V` @kind direct;
  #L37427a.  call temp:= `a`(v1) @signature `Le/e/c/y/a;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L374280.  v0.`e.e.c.q.a` @type ^`java.lang.Object` := v1 @kind object;
  #L374284.  return @kind void;
}
procedure `void` `<init>`(`e.e.c.q` v0 @kind this, `java.lang.Number` v1 @kind object) @signature `Le/e/c/q;.<init>:(Ljava/lang/Number;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L374298.  call `<init>`(v0) @signature `Le/e/c/l;.<init>:()V` @kind direct;
  #L37429e.  call temp:= `a`(v1) @signature `Le/e/c/y/a;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3742a4.  v0.`e.e.c.q.a` @type ^`java.lang.Object` := v1 @kind object;
  #L3742a8.  return @kind void;
}
procedure `void` `<init>`(`e.e.c.q` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Le/e/c/q;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3742bc.  call `<init>`(v0) @signature `Le/e/c/l;.<init>:()V` @kind direct;
  #L3742c2.  call temp:= `a`(v1) @signature `Le/e/c/y/a;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3742c8.  v0.`e.e.c.q.a` @type ^`java.lang.Object` := v1 @kind object;
  #L3742cc.  return @kind void;
}
procedure `boolean` `a`(`e.e.c.q` v2 @kind object) @signature `Le/e/c/q;.a:(Le/e/c/q;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L374028.  v2:= v2.`e.e.c.q.a` @type ^`java.lang.Object` @kind object;
  #L37402c.  v0:= instanceof @variable v2 @type ^`java.lang.Number` @kind boolean;
  #L374030.  v1:= 0I;
  #L374032.  if v0 == 0 then goto L374064;
  #L374036.  v2:= (`java.lang.Number`) v2 @kind object;
  #L37403a.  v0:= instanceof @variable v2 @type ^`java.math.BigInteger` @kind boolean;
  #L37403e.  if v0 != 0 then goto L374062;
  #L374042.  v0:= instanceof @variable v2 @type ^`java.lang.Long` @kind boolean;
  #L374046.  if v0 != 0 then goto L374062;
  #L37404a.  v0:= instanceof @variable v2 @type ^`java.lang.Integer` @kind boolean;
  #L37404e.  if v0 != 0 then goto L374062;
  #L374052.  v0:= instanceof @variable v2 @type ^`java.lang.Short` @kind boolean;
  #L374056.  if v0 != 0 then goto L374062;
  #L37405a.  v2:= instanceof @variable v2 @type ^`java.lang.Byte` @kind boolean;
  #L37405e.  if v2 == 0 then goto L374064;
  #L374062.  v1:= 1I;
  #L374064.  return v1;
}
procedure `boolean` `A`(`e.e.c.q` v1 @kind this) @signature `Le/e/c/q;.A:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L374078.  v0:= v1.`e.e.c.q.a` @type ^`java.lang.Object` @kind object;
  #L37407c.  v0:= instanceof @variable v0 @type ^`java.lang.Number` @kind boolean;
  #L374080.  return v0;
}
procedure `boolean` `B`(`e.e.c.q` v1 @kind this) @signature `Le/e/c/q;.B:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L374094.  v0:= v1.`e.e.c.q.a` @type ^`java.lang.Object` @kind object;
  #L374098.  v0:= instanceof @variable v0 @type ^`java.lang.String` @kind boolean;
  #L37409c.  return v0;
}
procedure `boolean` `equals`(`e.e.c.q` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Le/e/c/q;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L373ec8.  v0:= 1I;
  #L373eca.  if v6 != v7 then goto L373ed0;
  #L373ece.  return v0;
  #L373ed0.  v1:= 0I;
  #L373ed2.  if v7 == 0 then goto L373fb8;
  #L373ed6.  v2:= constclass @type ^`e.e.c.q` @kind object;
  #L373eda.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L373ee0.  v3:= temp @kind object;
  #L373ee2.  if v2 == v3 then goto L373ee8;
  #L373ee6.  goto L373fb8;
  #L373ee8.  v7:= (`e.e.c.q`) v7 @kind object;
  #L373eec.  v2:= v6.`e.e.c.q.a` @type ^`java.lang.Object` @kind object;
  #L373ef0.  if v2 != 0 then goto L373f02;
  #L373ef4.  v7:= v7.`e.e.c.q.a` @type ^`java.lang.Object` @kind object;
  #L373ef8.  if v7 != 0 then goto L373efe;
  #L373efc.  goto L373f00;
  #L373efe.  v0:= 0I;
  #L373f00.  return v0;
  #L373f02.  call temp:= `a`(v6) @signature `Le/e/c/q;.a:(Le/e/c/q;)Z` @kind static;
  #L373f08.  v2:= temp;
  #L373f0a.  if v2 == 0 then goto L373f48;
  #L373f0e.  call temp:= `a`(v7) @signature `Le/e/c/q;.a:(Le/e/c/q;)Z` @kind static;
  #L373f14.  v2:= temp;
  #L373f16.  if v2 == 0 then goto L373f48;
  #L373f1a.  call temp:= `r`(v6) @signature `Le/e/c/q;.r:()Ljava/lang/Number;` @kind virtual;
  #L373f20.  v2:= temp @kind object;
  #L373f22.  call temp:= `longValue`(v2) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L373f28.  v2:= temp @kind wide;
  #L373f2a.  call temp:= `r`(v7) @signature `Le/e/c/q;.r:()Ljava/lang/Number;` @kind virtual;
  #L373f30.  v7:= temp @kind object;
  #L373f32.  call temp:= `longValue`(v7) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L373f38.  v4:= temp @kind wide;
  #L373f3a.  v7:= lcmp(v2, v4);
  #L373f3e.  if v7 != 0 then goto L373f44;
  #L373f42.  goto L373f46;
  #L373f44.  v0:= 0I;
  #L373f46.  return v0;
  #L373f48.  v2:= v6.`e.e.c.q.a` @type ^`java.lang.Object` @kind object;
  #L373f4c.  v2:= instanceof @variable v2 @type ^`java.lang.Number` @kind boolean;
  #L373f50.  if v2 == 0 then goto L373fa6;
  #L373f54.  v2:= v7.`e.e.c.q.a` @type ^`java.lang.Object` @kind object;
  #L373f58.  v2:= instanceof @variable v2 @type ^`java.lang.Number` @kind boolean;
  #L373f5c.  if v2 == 0 then goto L373fa6;
  #L373f60.  call temp:= `r`(v6) @signature `Le/e/c/q;.r:()Ljava/lang/Number;` @kind virtual;
  #L373f66.  v2:= temp @kind object;
  #L373f68.  call temp:= `doubleValue`(v2) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L373f6e.  v2:= temp @kind wide;
  #L373f70.  call temp:= `r`(v7) @signature `Le/e/c/q;.r:()Ljava/lang/Number;` @kind virtual;
  #L373f76.  v7:= temp @kind object;
  #L373f78.  call temp:= `doubleValue`(v7) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L373f7e.  v4:= temp @kind wide;
  #L373f80.  v7:= dcmpl(v2, v4);
  #L373f84.  if v7 == 0 then goto L373fa4;
  #L373f88.  call temp:= `isNaN`(v2) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L373f8e.  v7:= temp;
  #L373f90.  if v7 == 0 then goto L373fa2;
  #L373f94.  call temp:= `isNaN`(v4) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L373f9a.  v7:= temp;
  #L373f9c.  if v7 == 0 then goto L373fa2;
  #L373fa0.  goto L373fa4;
  #L373fa2.  v0:= 0I;
  #L373fa4.  return v0;
  #L373fa6.  v0:= v6.`e.e.c.q.a` @type ^`java.lang.Object` @kind object;
  #L373faa.  v7:= v7.`e.e.c.q.a` @type ^`java.lang.Object` @kind object;
  #L373fae.  call temp:= `equals`(v0, v7) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L373fb4.  v7:= temp;
  #L373fb6.  return v7;
  #L373fb8.  return v1;
}
procedure `int` `hashCode`(`e.e.c.q` v4 @kind this) @signature `Le/e/c/q;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L374130.  v0:= v4.`e.e.c.q.a` @type ^`java.lang.Object` @kind object;
  #L374134.  if v0 != 0 then goto L37413e;
  #L374138.  v0:= 31I;
  #L37413c.  return v0;
  #L37413e.  call temp:= `a`(v4) @signature `Le/e/c/q;.a:(Le/e/c/q;)Z` @kind static;
  #L374144.  v0:= temp;
  #L374146.  v1:= 32I;
  #L37414a.  if v0 == 0 then goto L374168;
  #L37414e.  call temp:= `r`(v4) @signature `Le/e/c/q;.r:()Ljava/lang/Number;` @kind virtual;
  #L374154.  v0:= temp @kind object;
  #L374156.  call temp:= `longValue`(v0) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L37415c.  v2:= temp @kind wide;
  #L37415e.  v0:= v2 ^>> v1 @kind long;
  #L374162.  v0:= v0 ^~ v2 @kind long;
  #L374164.  v1:= (`int`) v0 @kind l2i;
  #L374166.  return v1;
  #L374168.  v0:= v4.`e.e.c.q.a` @type ^`java.lang.Object` @kind object;
  #L37416c.  v2:= instanceof @variable v0 @type ^`java.lang.Number` @kind boolean;
  #L374170.  if v2 == 0 then goto L37418e;
  #L374174.  call temp:= `r`(v4) @signature `Le/e/c/q;.r:()Ljava/lang/Number;` @kind virtual;
  #L37417a.  v0:= temp @kind object;
  #L37417c.  call temp:= `doubleValue`(v0) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L374182.  v2:= temp @kind wide;
  #L374184.  call temp:= `doubleToLongBits`(v2) @signature `Ljava/lang/Double;.doubleToLongBits:(D)J` @kind static;
  #L37418a.  v2:= temp @kind wide;
  #L37418c.  goto L37415e;
  #L37418e.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L374194.  v0:= temp;
  #L374196.  return v0;
}
procedure `java.lang.String` `i`(`e.e.c.q` v1 @kind this) @signature `Le/e/c/q;.i:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3741dc.  call temp:= `A`(v1) @signature `Le/e/c/q;.A:()Z` @kind virtual;
  #L3741e2.  v0:= temp;
  #L3741e4.  if v0 == 0 then goto L3741fa;
  #L3741e8.  call temp:= `r`(v1) @signature `Le/e/c/q;.r:()Ljava/lang/Number;` @kind virtual;
  #L3741ee.  v0:= temp @kind object;
  #L3741f0.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3741f6.  v0:= temp @kind object;
  #L3741f8.  return v0 @kind object;
  #L3741fa.  call temp:= `z`(v1) @signature `Le/e/c/q;.z:()Z` @kind virtual;
  #L374200.  v0:= temp;
  #L374202.  if v0 == 0 then goto L374218;
  #L374206.  v0:= v1.`e.e.c.q.a` @type ^`java.lang.Object` @kind object;
  #L37420a.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L37420e.  call temp:= `toString`(v0) @signature `Ljava/lang/Boolean;.toString:()Ljava/lang/String;` @kind virtual;
  #L374214.  v0:= temp @kind object;
  #L374216.  return v0 @kind object;
  #L374218.  v0:= v1.`e.e.c.q.a` @type ^`java.lang.Object` @kind object;
  #L37421c.  v0:= (`java.lang.String`) v0 @kind object;
  #L374220.  return v0 @kind object;
}
procedure `boolean` `n`(`e.e.c.q` v1 @kind this) @signature `Le/e/c/q;.n:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L373fcc.  call temp:= `z`(v1) @signature `Le/e/c/q;.z:()Z` @kind virtual;
  #L373fd2.  v0:= temp;
  #L373fd4.  if v0 == 0 then goto L373fea;
  #L373fd8.  v0:= v1.`e.e.c.q.a` @type ^`java.lang.Object` @kind object;
  #L373fdc.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L373fe0.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L373fe6.  v0:= temp;
  #L373fe8.  return v0;
  #L373fea.  call temp:= `i`(v1) @signature `Le/e/c/q;.i:()Ljava/lang/String;` @kind virtual;
  #L373ff0.  v0:= temp @kind object;
  #L373ff2.  call temp:= `parseBoolean`(v0) @signature `Ljava/lang/Boolean;.parseBoolean:(Ljava/lang/String;)Z` @kind static;
  #L373ff8.  v0:= temp;
  #L373ffa.  return v0;
}
procedure `double` `o`(`e.e.c.q` v2 @kind this) @signature `Le/e/c/q;.o:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3740b0.  call temp:= `A`(v2) @signature `Le/e/c/q;.A:()Z` @kind virtual;
  #L3740b6.  v0:= temp;
  #L3740b8.  if v0 == 0 then goto L3740ce;
  #L3740bc.  call temp:= `r`(v2) @signature `Le/e/c/q;.r:()Ljava/lang/Number;` @kind virtual;
  #L3740c2.  v0:= temp @kind object;
  #L3740c4.  call temp:= `doubleValue`(v0) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L3740ca.  v0:= temp @kind wide;
  #L3740cc.  goto L3740de;
  #L3740ce.  call temp:= `i`(v2) @signature `Le/e/c/q;.i:()Ljava/lang/String;` @kind virtual;
  #L3740d4.  v0:= temp @kind object;
  #L3740d6.  call temp:= `parseDouble`(v0) @signature `Ljava/lang/Double;.parseDouble:(Ljava/lang/String;)D` @kind static;
  #L3740dc.  v0:= temp @kind wide;
  #L3740de.  return v0 @kind wide;
}
procedure `int` `p`(`e.e.c.q` v1 @kind this) @signature `Le/e/c/q;.p:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3740f0.  call temp:= `A`(v1) @signature `Le/e/c/q;.A:()Z` @kind virtual;
  #L3740f6.  v0:= temp;
  #L3740f8.  if v0 == 0 then goto L37410e;
  #L3740fc.  call temp:= `r`(v1) @signature `Le/e/c/q;.r:()Ljava/lang/Number;` @kind virtual;
  #L374102.  v0:= temp @kind object;
  #L374104.  call temp:= `intValue`(v0) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L37410a.  v0:= temp;
  #L37410c.  goto L37411e;
  #L37410e.  call temp:= `i`(v1) @signature `Le/e/c/q;.i:()Ljava/lang/String;` @kind virtual;
  #L374114.  v0:= temp @kind object;
  #L374116.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L37411c.  v0:= temp;
  #L37411e.  return v0;
}
procedure `long` `q`(`e.e.c.q` v2 @kind this) @signature `Le/e/c/q;.q:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L374234.  call temp:= `A`(v2) @signature `Le/e/c/q;.A:()Z` @kind virtual;
  #L37423a.  v0:= temp;
  #L37423c.  if v0 == 0 then goto L374252;
  #L374240.  call temp:= `r`(v2) @signature `Le/e/c/q;.r:()Ljava/lang/Number;` @kind virtual;
  #L374246.  v0:= temp @kind object;
  #L374248.  call temp:= `longValue`(v0) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L37424e.  v0:= temp @kind wide;
  #L374250.  goto L374262;
  #L374252.  call temp:= `i`(v2) @signature `Le/e/c/q;.i:()Ljava/lang/String;` @kind virtual;
  #L374258.  v0:= temp @kind object;
  #L37425a.  call temp:= `parseLong`(v0) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L374260.  v0:= temp @kind wide;
  #L374262.  return v0 @kind wide;
}
procedure `java.lang.Number` `r`(`e.e.c.q` v2 @kind this) @signature `Le/e/c/q;.r:()Ljava/lang/Number;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3741a8.  v0:= v2.`e.e.c.q.a` @type ^`java.lang.Object` @kind object;
  #L3741ac.  v1:= instanceof @variable v0 @type ^`java.lang.String` @kind boolean;
  #L3741b0.  if v1 == 0 then goto L3741c4;
  #L3741b4.  v1:= new `e.e.c.y.g`;
  #L3741b8.  v0:= (`java.lang.String`) v0 @kind object;
  #L3741bc.  call `<init>`(v1, v0) @signature `Le/e/c/y/g;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3741c2.  goto L3741ca;
  #L3741c4.  v1:= v0 @kind object;
  #L3741c6.  v1:= (`java.lang.Number`) v1 @kind object;
  #L3741ca.  return v1 @kind object;
}
procedure `boolean` `z`(`e.e.c.q` v1 @kind this) @signature `Le/e/c/q;.z:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37400c.  v0:= v1.`e.e.c.q.a` @type ^`java.lang.Object` @kind object;
  #L374010.  v0:= instanceof @variable v0 @type ^`java.lang.Boolean` @kind boolean;
  #L374014.  return v0;
}
