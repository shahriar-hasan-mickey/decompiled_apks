record `e.e.c.f$b` @kind class @AccessFlag  extends `e.e.c.v` @kind class {
}
procedure `void` `<init>`(`e.e.c.f$b` v0 @kind this, `e.e.c.f` v1 @kind object) @signature `Le/e/c/f$b;.<init>:(Le/e/c/f;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L372838.  call `<init>`(v0) @signature `Le/e/c/v;.<init>:()V` @kind direct;
  #L37283e.  return @kind void;
}
procedure `java.lang.Float` `a`(`e.e.c.f$b` v2 @kind this, `e.e.c.a0.a` v3 @kind object) @signature `Le/e/c/f$b;.a:(Le/e/c/a0/a;)Ljava/lang/Float;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3727dc.  call temp:= `A`(v3) @signature `Le/e/c/a0/a;.A:()Le/e/c/a0/b;` @kind virtual;
  #L3727e2.  v0:= temp @kind object;
  #L3727e4.  v1:= `@@e.e.c.a0.b.j` @type ^`e.e.c.a0.b` @kind object;
  #L3727e8.  if v0 != v1 then goto L3727f6;
  #L3727ec.  call `y`(v3) @signature `Le/e/c/a0/a;.y:()V` @kind virtual;
  #L3727f2.  v3:= 0I;
  #L3727f4.  return v3 @kind object;
  #L3727f6.  call temp:= `u`(v3) @signature `Le/e/c/a0/a;.u:()D` @kind virtual;
  #L3727fc.  v0:= temp @kind wide;
  #L3727fe.  v3:= (`float`) v0 @kind d2f;
  #L372800.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L372806.  v3:= temp @kind object;
  #L372808.  return v3 @kind object;
}
procedure `java.lang.Object` `a`(`e.e.c.f$b` v0 @kind this, `e.e.c.a0.a` v1 @kind object) @signature `Le/e/c/f$b;.a:(Le/e/c/a0/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L37281c.  call temp:= `a`(v0, v1) @signature `Le/e/c/f$b;.a:(Le/e/c/a0/a;)Ljava/lang/Float;` @kind virtual;
  #L372822.  v1:= temp @kind object;
  #L372824.  return v1 @kind object;
}
procedure `void` `a`(`e.e.c.f$b` v2 @kind this, `e.e.c.a0.c` v3 @kind object, `java.lang.Number` v4 @kind object) @signature `Le/e/c/f$b;.a:(Le/e/c/a0/c;Ljava/lang/Number;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L372850.  if v4 != 0 then goto L37285c;
  #L372854.  call temp:= `r`(v3) @signature `Le/e/c/a0/c;.r:()Le/e/c/a0/c;` @kind virtual;
  #L37285a.  return @kind void;
  #L37285c.  call temp:= `floatValue`(v4) @signature `Ljava/lang/Number;.floatValue:()F` @kind virtual;
  #L372862.  v0:= temp;
  #L372864.  v0:= (`double`) v0 @kind f2d;
  #L372866.  call `a`(v0) @signature `Le/e/c/f;.a:(D)V` @kind static;
  #L37286c.  call temp:= `a`(v3, v4) @signature `Le/e/c/a0/c;.a:(Ljava/lang/Number;)Le/e/c/a0/c;` @kind virtual;
  #L372872.  return @kind void;
}
procedure `void` `a`(`e.e.c.f$b` v0 @kind this, `e.e.c.a0.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Le/e/c/f$b;.a:(Le/e/c/a0/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L372884.  v2:= (`java.lang.Number`) v2 @kind object;
  #L372888.  call `a`(v0, v1, v2) @signature `Le/e/c/f$b;.a:(Le/e/c/a0/c;Ljava/lang/Number;)V` @kind virtual;
  #L37288e.  return @kind void;
}
