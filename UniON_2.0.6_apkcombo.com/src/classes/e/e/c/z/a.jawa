record `e.e.c.z.a` @kind class @AccessFlag PUBLIC {
  `java.lang.Class` `e.e.c.z.a.a` @AccessFlag FINAL;
  `java.lang.reflect.Type` `e.e.c.z.a.b` @AccessFlag FINAL;
  `int` `e.e.c.z.a.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`e.e.c.z.a` v1 @kind this) @signature `Le/e/c/z/a;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L37d148.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L37d14e.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L37d154.  v0:= temp @kind object;
  #L37d156.  call temp:= `b`(v0) @signature `Le/e/c/z/a;.b:(Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L37d15c.  v0:= temp @kind object;
  #L37d15e.  v1.`e.e.c.z.a.b` @type ^`java.lang.reflect.Type` := v0 @kind object;
  #L37d162.  v0:= v1.`e.e.c.z.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L37d166.  call temp:= `e`(v0) @signature `Le/e/c/y/b;.e:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L37d16c.  v0:= temp @kind object;
  #L37d16e.  v1.`e.e.c.z.a.a` @type ^`java.lang.Class` := v0 @kind object;
  #L37d172.  v0:= v1.`e.e.c.z.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L37d176.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L37d17c.  v0:= temp;
  #L37d17e.  v1.`e.e.c.z.a.c` @type ^`int` := v0;
  #L37d182.  return @kind void;
}
procedure `void` `<init>`(`e.e.c.z.a` v0 @kind this, `java.lang.reflect.Type` v1 @kind object) @signature `Le/e/c/z/a;.<init>:(Ljava/lang/reflect/Type;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L37d194.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L37d19a.  call temp:= `a`(v1) @signature `Le/e/c/y/a;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L37d1a0.  v1:= (`java.lang.reflect.Type`) v1 @kind object;
  #L37d1a4.  call temp:= `b`(v1) @signature `Le/e/c/y/b;.b:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L37d1aa.  v1:= temp @kind object;
  #L37d1ac.  v0.`e.e.c.z.a.b` @type ^`java.lang.reflect.Type` := v1 @kind object;
  #L37d1b0.  v1:= v0.`e.e.c.z.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L37d1b4.  call temp:= `e`(v1) @signature `Le/e/c/y/b;.e:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L37d1ba.  v1:= temp @kind object;
  #L37d1bc.  v0.`e.e.c.z.a.a` @type ^`java.lang.Class` := v1 @kind object;
  #L37d1c0.  v1:= v0.`e.e.c.z.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L37d1c4.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L37d1ca.  v1:= temp;
  #L37d1cc.  v0.`e.e.c.z.a.c` @type ^`int` := v1;
  #L37d1d0.  return @kind void;
}
procedure `e.e.c.z.a` `a`(`java.lang.Class` v1 @kind object) @signature `Le/e/c/z/a;.a:(Ljava/lang/Class;)Le/e/c/z/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L37d05c.  v0:= new `e.e.c.z.a`;
  #L37d060.  call `<init>`(v0, v1) @signature `Le/e/c/z/a;.<init>:(Ljava/lang/reflect/Type;)V` @kind direct;
  #L37d066.  return v0 @kind object;
}
procedure `e.e.c.z.a` `a`(`java.lang.reflect.Type` v1 @kind object) @signature `Le/e/c/z/a;.a:(Ljava/lang/reflect/Type;)Le/e/c/z/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L37d078.  v0:= new `e.e.c.z.a`;
  #L37d07c.  call `<init>`(v0, v1) @signature `Le/e/c/z/a;.<init>:(Ljava/lang/reflect/Type;)V` @kind direct;
  #L37d082.  return v0 @kind object;
}
procedure `java.lang.reflect.Type` `b`(`java.lang.Class` v1 @kind object) @signature `Le/e/c/z/a;.b:(Ljava/lang/Class;)Ljava/lang/reflect/Type;` @AccessFlag STATIC {
    temp;
    v0;

  #L37d0e4.  call temp:= `getGenericSuperclass`(v1) @signature `Ljava/lang/Class;.getGenericSuperclass:()Ljava/lang/reflect/Type;` @kind virtual;
  #L37d0ea.  v1:= temp @kind object;
  #L37d0ec.  v0:= instanceof @variable v1 @type ^`java.lang.Class` @kind boolean;
  #L37d0f0.  if v0 != 0 then goto L37d110;
  #L37d0f4.  v1:= (`java.lang.reflect.ParameterizedType`) v1 @kind object;
  #L37d0f8.  call temp:= `getActualTypeArguments`(v1) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L37d0fe.  v1:= temp @kind object;
  #L37d100.  v0:= 0I;
  #L37d102.  v1:= v1[v0] @kind object;
  #L37d106.  call temp:= `b`(v1) @signature `Le/e/c/y/b;.b:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L37d10c.  v1:= temp @kind object;
  #L37d10e.  return v1 @kind object;
  #L37d110.  v1:= new `java.lang.RuntimeException`;
  #L37d114.  v0:= "Missing type parameter." @kind object;
  #L37d118.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L37d11e.  throw v1;
}
procedure `java.lang.Class` `a`(`e.e.c.z.a` v1 @kind this) @signature `Le/e/c/z/a;.a:()Ljava/lang/Class;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L37d0ac.  v0:= v1.`e.e.c.z.a.a` @type ^`java.lang.Class` @kind object;
  #L37d0b0.  return v0 @kind object;
}
procedure `java.lang.reflect.Type` `b`(`e.e.c.z.a` v1 @kind this) @signature `Le/e/c/z/a;.b:()Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L37d130.  v0:= v1.`e.e.c.z.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L37d134.  return v0 @kind object;
}
procedure `boolean` `equals`(`e.e.c.z.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/c/z/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L37d024.  v0:= instanceof @variable v2 @type ^`e.e.c.z.a` @kind boolean;
  #L37d028.  if v0 == 0 then goto L37d048;
  #L37d02c.  v0:= v1.`e.e.c.z.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L37d030.  v2:= (`e.e.c.z.a`) v2 @kind object;
  #L37d034.  v2:= v2.`e.e.c.z.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L37d038.  call temp:= `a`(v0, v2) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z` @kind static;
  #L37d03e.  v2:= temp;
  #L37d040.  if v2 == 0 then goto L37d048;
  #L37d044.  v2:= 1I;
  #L37d046.  goto L37d04a;
  #L37d048.  v2:= 0I;
  #L37d04a.  return v2;
}
procedure `int` `hashCode`(`e.e.c.z.a` v1 @kind this) @signature `Le/e/c/z/a;.hashCode:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L37d094.  v0:= v1.`e.e.c.z.a.c` @type ^`int`;
  #L37d098.  return v0;
}
procedure `java.lang.String` `toString`(`e.e.c.z.a` v1 @kind this) @signature `Le/e/c/z/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L37d0c4.  v0:= v1.`e.e.c.z.a.b` @type ^`java.lang.reflect.Type` @kind object;
  #L37d0c8.  call temp:= `h`(v0) @signature `Le/e/c/y/b;.h:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @kind static;
  #L37d0ce.  v0:= temp @kind object;
  #L37d0d0.  return v0 @kind object;
}
