record `e.e.c.f$f` @kind class @AccessFlag  extends `e.e.c.v` @kind class {
  `e.e.c.v` `e.e.c.f$f.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.c.f$f` v0 @kind this) @signature `Le/e/c/f$f;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L372b70.  call `<init>`(v0) @signature `Le/e/c/v;.<init>:()V` @kind direct;
  #L372b76.  return @kind void;
}
procedure `java.lang.Object` `a`(`e.e.c.f$f` v1 @kind this, `e.e.c.a0.a` v2 @kind object) @signature `Le/e/c/f$f;.a:(Le/e/c/a0/a;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L372b40.  v0:= v1.`e.e.c.f$f.a` @type ^`e.e.c.v` @kind object;
  #L372b44.  if v0 == 0 then goto L372b52;
  #L372b48.  call temp:= `a`(v0, v2) @signature `Le/e/c/v;.a:(Le/e/c/a0/a;)Ljava/lang/Object;` @kind virtual;
  #L372b4e.  v2:= temp @kind object;
  #L372b50.  return v2 @kind object;
  #L372b52.  v2:= new `java.lang.IllegalStateException`;
  #L372b56.  call `<init>`(v2) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L372b5c.  throw v2;
}
procedure `void` `a`(`e.e.c.f$f` v1 @kind this, `e.e.c.a0.c` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Le/e/c/f$f;.a:(Le/e/c/a0/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L372bb4.  v0:= v1.`e.e.c.f$f.a` @type ^`e.e.c.v` @kind object;
  #L372bb8.  if v0 == 0 then goto L372bc4;
  #L372bbc.  call `a`(v0, v2, v3) @signature `Le/e/c/v;.a:(Le/e/c/a0/c;Ljava/lang/Object;)V` @kind virtual;
  #L372bc2.  return @kind void;
  #L372bc4.  v2:= new `java.lang.IllegalStateException`;
  #L372bc8.  call `<init>`(v2) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L372bce.  throw v2;
}
procedure `void` `a`(`e.e.c.f$f` v1 @kind this, `e.e.c.v` v2 @kind object) @signature `Le/e/c/f$f;.a:(Le/e/c/v;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L372b88.  v0:= v1.`e.e.c.f$f.a` @type ^`e.e.c.v` @kind object;
  #L372b8c.  if v0 != 0 then goto L372b96;
  #L372b90.  v1.`e.e.c.f$f.a` @type ^`e.e.c.v` := v2 @kind object;
  #L372b94.  return @kind void;
  #L372b96.  v2:= new `java.lang.AssertionError`;
  #L372b9a.  call `<init>`(v2) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L372ba0.  throw v2;
}
