record `e.e.c.y.b$b` @kind class @AccessFlag FINAL extends `java.lang.reflect.ParameterizedType` @kind interface, `java.io.Serializable` @kind interface {
  `java.lang.reflect.Type` `e.e.c.y.b$b.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Type` `e.e.c.y.b$b.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Type`[] `e.e.c.y.b$b.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.c.y.b$b` v4 @kind this, `java.lang.reflect.Type` v5 @kind object, `java.lang.reflect.Type` v6 @kind object, `java.lang.reflect.Type`[] v7 @kind object) @signature `Le/e/c/y/b$b;.<init>:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3747ec.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3747f2.  v0:= instanceof @variable v6 @type ^`java.lang.Class` @kind boolean;
  #L3747f6.  v1:= 0I;
  #L3747f8.  if v0 == 0 then goto L37483e;
  #L3747fc.  v0:= v6 @kind object;
  #L3747fe.  v0:= (`java.lang.Class`) v0 @kind object;
  #L374802.  call temp:= `getModifiers`(v0) @signature `Ljava/lang/Class;.getModifiers:()I` @kind virtual;
  #L374808.  v2:= temp;
  #L37480a.  call temp:= `isStatic`(v2) @signature `Ljava/lang/reflect/Modifier;.isStatic:(I)Z` @kind static;
  #L374810.  v2:= temp;
  #L374812.  v3:= 1I;
  #L374814.  if v2 != 0 then goto L37482a;
  #L374818.  call temp:= `getEnclosingClass`(v0) @signature `Ljava/lang/Class;.getEnclosingClass:()Ljava/lang/Class;` @kind virtual;
  #L37481e.  v0:= temp @kind object;
  #L374820.  if v0 != 0 then goto L374826;
  #L374824.  goto L37482a;
  #L374826.  v0:= 0I;
  #L374828.  goto L37482c;
  #L37482a.  v0:= 1I;
  #L37482c.  if v5 != 0 then goto L374838;
  #L374830.  if v0 == 0 then goto L374836;
  #L374834.  goto L374838;
  #L374836.  v3:= 0I;
  #L374838.  call `a`(v3) @signature `Le/e/c/y/a;.a:(Z)V` @kind static;
  #L37483e.  if v5 != 0 then goto L374846;
  #L374842.  v5:= 0I;
  #L374844.  goto L37484e;
  #L374846.  call temp:= `b`(v5) @signature `Le/e/c/y/b;.b:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L37484c.  v5:= temp @kind object;
  #L37484e.  v4.`e.e.c.y.b$b.b` @type ^`java.lang.reflect.Type` := v5 @kind object;
  #L374852.  call temp:= `b`(v6) @signature `Le/e/c/y/b;.b:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L374858.  v5:= temp @kind object;
  #L37485a.  v4.`e.e.c.y.b$b.c` @type ^`java.lang.reflect.Type` := v5 @kind object;
  #L37485e.  call temp:= `clone`(v7) @signature `[Ljava/lang/reflect/Type;.clone:()Ljava/lang/Object;` @kind virtual;
  #L374864.  v5:= temp @kind object;
  #L374866.  v5:= (`java.lang.reflect.Type`[]) v5 @kind object;
  #L37486a.  v4.`e.e.c.y.b$b.d` @type ^`java.lang.reflect.Type`[] := v5 @kind object;
  #L37486e.  v5:= v4.`e.e.c.y.b$b.d` @type ^`java.lang.reflect.Type`[] @kind object;
  #L374872.  v5:= length @variable v5;
  #L374874.  if v1 >= v5 then goto L3748ae;
  #L374878.  v6:= v4.`e.e.c.y.b$b.d` @type ^`java.lang.reflect.Type`[] @kind object;
  #L37487c.  v6:= v6[v1] @kind object;
  #L374880.  call temp:= `a`(v6) @signature `Le/e/c/y/a;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L374886.  v6:= v4.`e.e.c.y.b$b.d` @type ^`java.lang.reflect.Type`[] @kind object;
  #L37488a.  v6:= v6[v1] @kind object;
  #L37488e.  call `c`(v6) @signature `Le/e/c/y/b;.c:(Ljava/lang/reflect/Type;)V` @kind static;
  #L374894.  v6:= v4.`e.e.c.y.b$b.d` @type ^`java.lang.reflect.Type`[] @kind object;
  #L374898.  v7:= v6[v1] @kind object;
  #L37489c.  call temp:= `b`(v7) @signature `Le/e/c/y/b;.b:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L3748a2.  v7:= temp @kind object;
  #L3748a4.  v6[v1]:= v7 @kind object;
  #L3748a8.  v1:= v1 + 1;
  #L3748ac.  goto L374874;
  #L3748ae.  return @kind void;
}
procedure `boolean` `equals`(`e.e.c.y.b$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/c/y/b$b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37467c.  v0:= instanceof @variable v2 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L374680.  if v0 == 0 then goto L374698;
  #L374684.  v2:= (`java.lang.reflect.ParameterizedType`) v2 @kind object;
  #L374688.  call temp:= `a`(v1, v2) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z` @kind static;
  #L37468e.  v2:= temp;
  #L374690.  if v2 == 0 then goto L374698;
  #L374694.  v2:= 1I;
  #L374696.  goto L37469a;
  #L374698.  v2:= 0I;
  #L37469a.  return v2;
}
procedure `java.lang.reflect.Type`[] `getActualTypeArguments`(`e.e.c.y.b$b` v1 @kind this) @signature `Le/e/c/y/b$b;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3747c8.  v0:= v1.`e.e.c.y.b$b.d` @type ^`java.lang.reflect.Type`[] @kind object;
  #L3747cc.  call temp:= `clone`(v0) @signature `[Ljava/lang/reflect/Type;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3747d2.  v0:= temp @kind object;
  #L3747d4.  v0:= (`java.lang.reflect.Type`[]) v0 @kind object;
  #L3747d8.  return v0 @kind object;
}
procedure `java.lang.reflect.Type` `getOwnerType`(`e.e.c.y.b$b` v1 @kind this) @signature `Le/e/c/y/b$b;.getOwnerType:()Ljava/lang/reflect/Type;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L374798.  v0:= v1.`e.e.c.y.b$b.b` @type ^`java.lang.reflect.Type` @kind object;
  #L37479c.  return v0 @kind object;
}
procedure `java.lang.reflect.Type` `getRawType`(`e.e.c.y.b$b` v1 @kind this) @signature `Le/e/c/y/b$b;.getRawType:()Ljava/lang/reflect/Type;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3747b0.  v0:= v1.`e.e.c.y.b$b.c` @type ^`java.lang.reflect.Type` @kind object;
  #L3747b4.  return v0 @kind object;
}
procedure `int` `hashCode`(`e.e.c.y.b$b` v2 @kind this) @signature `Le/e/c/y/b$b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3746ac.  v0:= v2.`e.e.c.y.b$b.d` @type ^`java.lang.reflect.Type`[] @kind object;
  #L3746b0.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L3746b6.  v0:= temp;
  #L3746b8.  v1:= v2.`e.e.c.y.b$b.c` @type ^`java.lang.reflect.Type` @kind object;
  #L3746bc.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3746c2.  v1:= temp;
  #L3746c4.  v0:= v0 ^~ v1 @kind int;
  #L3746c6.  v1:= v2.`e.e.c.y.b$b.b` @type ^`java.lang.reflect.Type` @kind object;
  #L3746ca.  call temp:= `a`(v1) @signature `Le/e/c/y/b;.a:(Ljava/lang/Object;)I` @kind static;
  #L3746d0.  v1:= temp;
  #L3746d2.  v0:= v0 ^~ v1 @kind int;
  #L3746d4.  return v0;
}
procedure `java.lang.String` `toString`(`e.e.c.y.b$b` v4 @kind this) @signature `Le/e/c/y/b$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3746e8.  v0:= v4.`e.e.c.y.b$b.d` @type ^`java.lang.reflect.Type`[] @kind object;
  #L3746ec.  v0:= length @variable v0;
  #L3746ee.  if v0 != 0 then goto L374700;
  #L3746f2.  v0:= v4.`e.e.c.y.b$b.c` @type ^`java.lang.reflect.Type` @kind object;
  #L3746f6.  call temp:= `h`(v0) @signature `Le/e/c/y/b;.h:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @kind static;
  #L3746fc.  v0:= temp @kind object;
  #L3746fe.  return v0 @kind object;
  #L374700.  v1:= new `java.lang.StringBuilder`;
  #L374704.  v2:= v0 + 1;
  #L374708.  v2:= v2 * 30;
  #L37470c.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L374712.  v2:= v4.`e.e.c.y.b$b.c` @type ^`java.lang.reflect.Type` @kind object;
  #L374716.  call temp:= `h`(v2) @signature `Le/e/c/y/b;.h:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @kind static;
  #L37471c.  v2:= temp @kind object;
  #L37471e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L374724.  v2:= "<" @kind object;
  #L374728.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37472e.  v2:= v4.`e.e.c.y.b$b.d` @type ^`java.lang.reflect.Type`[] @kind object;
  #L374732.  v3:= 0I;
  #L374734.  v2:= v2[v3] @kind object;
  #L374738.  call temp:= `h`(v2) @signature `Le/e/c/y/b;.h:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @kind static;
  #L37473e.  v2:= temp @kind object;
  #L374740.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L374746.  v2:= 1I;
  #L374748.  if v2 >= v0 then goto L374772;
  #L37474c.  v3:= ", " @kind object;
  #L374750.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L374756.  v3:= v4.`e.e.c.y.b$b.d` @type ^`java.lang.reflect.Type`[] @kind object;
  #L37475a.  v3:= v3[v2] @kind object;
  #L37475e.  call temp:= `h`(v3) @signature `Le/e/c/y/b;.h:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @kind static;
  #L374764.  v3:= temp @kind object;
  #L374766.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37476c.  v2:= v2 + 1;
  #L374770.  goto L374748;
  #L374772.  v0:= ">" @kind object;
  #L374776.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37477c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L374782.  v0:= temp @kind object;
  #L374784.  return v0 @kind object;
}
