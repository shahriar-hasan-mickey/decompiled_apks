record `e.e.c.y.h$e` @kind class @AccessFlag FINAL extends `java.util.Map$Entry` @kind interface {
  `e.e.c.y.h$e` `e.e.c.y.h$e.b` @AccessFlag ;
  `e.e.c.y.h$e` `e.e.c.y.h$e.c` @AccessFlag ;
  `e.e.c.y.h$e` `e.e.c.y.h$e.d` @AccessFlag ;
  `e.e.c.y.h$e` `e.e.c.y.h$e.e` @AccessFlag ;
  `e.e.c.y.h$e` `e.e.c.y.h$e.f` @AccessFlag ;
  `java.lang.Object` `e.e.c.y.h$e.g` @AccessFlag FINAL;
  `java.lang.Object` `e.e.c.y.h$e.h` @AccessFlag ;
  `int` `e.e.c.y.h$e.i` @AccessFlag ;
}
procedure `void` `<init>`(`e.e.c.y.h$e` v1 @kind this) @signature `Le/e/c/y/h$e;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3768c0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3768c6.  v0:= 0I;
  #L3768c8.  v1.`e.e.c.y.h$e.g` @type ^`java.lang.Object` := v0 @kind object;
  #L3768cc.  v1.`e.e.c.y.h$e.f` @type ^`e.e.c.y.h$e` := v1 @kind object;
  #L3768d0.  v1.`e.e.c.y.h$e.e` @type ^`e.e.c.y.h$e` := v1 @kind object;
  #L3768d4.  return @kind void;
}
procedure `void` `<init>`(`e.e.c.y.h$e` v0 @kind this, `e.e.c.y.h$e` v1 @kind object, `java.lang.Object` v2 @kind object, `e.e.c.y.h$e` v3 @kind object, `e.e.c.y.h$e` v4 @kind object) @signature `Le/e/c/y/h$e;.<init>:(Le/e/c/y/h$e;Ljava/lang/Object;Le/e/c/y/h$e;Le/e/c/y/h$e;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3768e8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3768ee.  v0.`e.e.c.y.h$e.b` @type ^`e.e.c.y.h$e` := v1 @kind object;
  #L3768f2.  v0.`e.e.c.y.h$e.g` @type ^`java.lang.Object` := v2 @kind object;
  #L3768f6.  v1:= 1I;
  #L3768f8.  v0.`e.e.c.y.h$e.i` @type ^`int` := v1;
  #L3768fc.  v0.`e.e.c.y.h$e.e` @type ^`e.e.c.y.h$e` := v3 @kind object;
  #L376900.  v0.`e.e.c.y.h$e.f` @type ^`e.e.c.y.h$e` := v4 @kind object;
  #L376904.  v4.`e.e.c.y.h$e.e` @type ^`e.e.c.y.h$e` := v0 @kind object;
  #L376908.  v3.`e.e.c.y.h$e.f` @type ^`e.e.c.y.h$e` := v0 @kind object;
  #L37690c.  return @kind void;
}
procedure `e.e.c.y.h$e` `a`(`e.e.c.y.h$e` v3 @kind this) @signature `Le/e/c/y/h$e;.a:()Le/e/c/y/h$e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3767a4.  v0:= v3.`e.e.c.y.h$e.c` @type ^`e.e.c.y.h$e` @kind object;
  #L3767a8.  v1:= v3 @kind object;
  #L3767aa.  if v0 == 0 then goto L3767ba;
  #L3767ae.  v1:= v0.`e.e.c.y.h$e.c` @type ^`e.e.c.y.h$e` @kind object;
  #L3767b2.  v2:= v1 @kind object;
  #L3767b4.  v1:= v0 @kind object;
  #L3767b6.  v0:= v2 @kind object;
  #L3767b8.  goto L3767aa;
  #L3767ba.  return v1 @kind object;
}
procedure `e.e.c.y.h$e` `b`(`e.e.c.y.h$e` v3 @kind this) @signature `Le/e/c/y/h$e;.b:()Le/e/c/y/h$e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3767cc.  v0:= v3.`e.e.c.y.h$e.d` @type ^`e.e.c.y.h$e` @kind object;
  #L3767d0.  v1:= v3 @kind object;
  #L3767d2.  if v0 == 0 then goto L3767e2;
  #L3767d6.  v1:= v0.`e.e.c.y.h$e.d` @type ^`e.e.c.y.h$e` @kind object;
  #L3767da.  v2:= v1 @kind object;
  #L3767dc.  v1:= v0 @kind object;
  #L3767de.  v0:= v2 @kind object;
  #L3767e0.  goto L3767d2;
  #L3767e2.  return v1 @kind object;
}
procedure `boolean` `equals`(`e.e.c.y.h$e` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Le/e/c/y/h$e;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L376734.  v0:= instanceof @variable v4 @type ^`java.util.Map$Entry` @kind boolean;
  #L376738.  v1:= 0I;
  #L37673a.  if v0 == 0 then goto L376790;
  #L37673e.  v4:= (`java.util.Map$Entry`) v4 @kind object;
  #L376742.  v0:= v3.`e.e.c.y.h$e.g` @type ^`java.lang.Object` @kind object;
  #L376746.  if v0 != 0 then goto L376758;
  #L37674a.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L376750.  v0:= temp @kind object;
  #L376752.  if v0 != 0 then goto L376790;
  #L376756.  goto L37676c;
  #L376758.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L37675e.  v2:= temp @kind object;
  #L376760.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L376766.  v0:= temp;
  #L376768.  if v0 == 0 then goto L376790;
  #L37676c.  v0:= v3.`e.e.c.y.h$e.h` @type ^`java.lang.Object` @kind object;
  #L376770.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L376776.  v4:= temp @kind object;
  #L376778.  if v0 != 0 then goto L376782;
  #L37677c.  if v4 != 0 then goto L376790;
  #L376780.  goto L37678e;
  #L376782.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L376788.  v4:= temp;
  #L37678a.  if v4 == 0 then goto L376790;
  #L37678e.  v1:= 1I;
  #L376790.  return v1;
}
procedure `java.lang.Object` `getKey`(`e.e.c.y.h$e` v1 @kind this) @signature `Le/e/c/y/h$e;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L376830.  v0:= v1.`e.e.c.y.h$e.g` @type ^`java.lang.Object` @kind object;
  #L376834.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`e.e.c.y.h$e` v1 @kind this) @signature `Le/e/c/y/h$e;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L376848.  v0:= v1.`e.e.c.y.h$e.h` @type ^`java.lang.Object` @kind object;
  #L37684c.  return v0 @kind object;
}
procedure `int` `hashCode`(`e.e.c.y.h$e` v3 @kind this) @signature `Le/e/c/y/h$e;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3767f4.  v0:= v3.`e.e.c.y.h$e.g` @type ^`java.lang.Object` @kind object;
  #L3767f8.  v1:= 0I;
  #L3767fa.  if v0 != 0 then goto L376802;
  #L3767fe.  v0:= 0I;
  #L376800.  goto L37680a;
  #L376802.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L376808.  v0:= temp;
  #L37680a.  v2:= v3.`e.e.c.y.h$e.h` @type ^`java.lang.Object` @kind object;
  #L37680e.  if v2 != 0 then goto L376814;
  #L376812.  goto L37681c;
  #L376814.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L37681a.  v1:= temp;
  #L37681c.  v0:= v0 ^~ v1 @kind int;
  #L37681e.  return v0;
}
procedure `java.lang.Object` `setValue`(`e.e.c.y.h$e` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/c/y/h$e;.setValue:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L376860.  v0:= v1.`e.e.c.y.h$e.h` @type ^`java.lang.Object` @kind object;
  #L376864.  v1.`e.e.c.y.h$e.h` @type ^`java.lang.Object` := v2 @kind object;
  #L376868.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.c.y.h$e` v2 @kind this) @signature `Le/e/c/y/h$e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L37687c.  v0:= new `java.lang.StringBuilder`;
  #L376880.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L376886.  v1:= v2.`e.e.c.y.h$e.g` @type ^`java.lang.Object` @kind object;
  #L37688a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L376890.  v1:= "=" @kind object;
  #L376894.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37689a.  v1:= v2.`e.e.c.y.h$e.h` @type ^`java.lang.Object` @kind object;
  #L37689e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3768a4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3768aa.  v0:= temp @kind object;
  #L3768ac.  return v0 @kind object;
}
