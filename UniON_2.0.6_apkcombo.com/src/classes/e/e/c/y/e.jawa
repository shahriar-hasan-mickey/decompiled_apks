record `e.e.c.y.e` @kind class @AccessFlag PUBLIC_FINAL {
}
global `int` `@@e.e.c.y.e.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/c/y/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3761f4.  call temp:= `a`() @signature `Le/e/c/y/e;.a:()I` @kind static;
  #L3761fa.  v0:= temp;
  #L3761fc.  `@@e.e.c.y.e.a` @type ^`int` := v0;
  #L376200.  return @kind void;
}
procedure `int` `a`() @signature `Le/e/c/y/e;.a:()I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3760b8.  v0:= "java.version" @kind object;
  #L3760bc.  call temp:= `getProperty`(v0) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3760c2.  v0:= temp @kind object;
  #L3760c4.  call temp:= `b`(v0) @signature `Le/e/c/y/e;.b:(Ljava/lang/String;)I` @kind static;
  #L3760ca.  v0:= temp;
  #L3760cc.  return v0;
}
procedure `int` `a`(`java.lang.String` v4 @kind object) @signature `Le/e/c/y/e;.a:(Ljava/lang/String;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3760e0.  v0:= new `java.lang.StringBuilder`;
  #L3760e4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3760ea.  v1:= 0I;
  #L3760ec.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3760f2.  v2:= temp;
  #L3760f4.  if v1 >= v2 then goto L376118;
  #L3760f8.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3760fe.  v2:= temp;
  #L376100.  call temp:= `isDigit`(v2) @signature `Ljava/lang/Character;.isDigit:(C)Z` @kind static;
  #L376106.  v3:= temp;
  #L376108.  if v3 == 0 then goto L376118;
  #L37610c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L376112.  v1:= v1 + 1;
  #L376116.  goto L3760ec;
  #L376118.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37611e.  v4:= temp @kind object;
  #L376120.  call temp:= `parseInt`(v4) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L376126.  v4:= temp;
  #L376128.  return v4;
  #L37612a.  v4:= -1I;
  #L37612c.  return v4;
  catch `java.lang.NumberFormatException` @[L3760e0..L376128] goto L37612a;
}
procedure `int` `b`() @signature `Le/e/c/y/e;.b:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L376150.  v0:= `@@e.e.c.y.e.a` @type ^`int`;
  #L376154.  return v0;
}
procedure `int` `b`(`java.lang.String` v2 @kind object) @signature `Le/e/c/y/e;.b:(Ljava/lang/String;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L376168.  call temp:= `c`(v2) @signature `Le/e/c/y/e;.c:(Ljava/lang/String;)I` @kind static;
  #L37616e.  v0:= temp;
  #L376170.  v1:= -1I;
  #L376172.  if v0 != v1 then goto L37617e;
  #L376176.  call temp:= `a`(v2) @signature `Le/e/c/y/e;.a:(Ljava/lang/String;)I` @kind static;
  #L37617c.  v0:= temp;
  #L37617e.  if v0 != v1 then goto L376186;
  #L376182.  v2:= 6I;
  #L376184.  return v2;
  #L376186.  return v0;
}
procedure `int` `c`(`java.lang.String` v3 @kind object) @signature `Le/e/c/y/e;.c:(Ljava/lang/String;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L376198.  v0:= "[._]" @kind object;
  #L37619c.  call temp:= `split`(v3, v0) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L3761a2.  v3:= temp @kind object;
  #L3761a4.  v0:= 0I;
  #L3761a6.  v0:= v3[v0] @kind object;
  #L3761aa.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3761b0.  v0:= temp;
  #L3761b2.  v1:= 1I;
  #L3761b4.  if v0 != v1 then goto L3761cc;
  #L3761b8.  v2:= length @variable v3;
  #L3761ba.  if v2 <= v1 then goto L3761cc;
  #L3761be.  v3:= v3[v1] @kind object;
  #L3761c2.  call temp:= `parseInt`(v3) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3761c8.  v3:= temp;
  #L3761ca.  return v3;
  #L3761cc.  return v0;
  #L3761ce.  v3:= -1I;
  #L3761d0.  return v3;
  catch `java.lang.NumberFormatException` @[L376198..L3761ca] goto L3761ce;
}
procedure `boolean` `c`() @signature `Le/e/c/y/e;.c:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L376094.  v0:= `@@e.e.c.y.e.a` @type ^`int`;
  #L376098.  v1:= 9I;
  #L37609c.  if v0 < v1 then goto L3760a4;
  #L3760a0.  v0:= 1I;
  #L3760a2.  goto L3760a6;
  #L3760a4.  v0:= 0I;
  #L3760a6.  return v0;
}
