record `e.e.c.y.o.b` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `e.e.c.y.o.b` `@@e.e.c.y.o.b.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/c/y/o/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L37cdc8.  call temp:= `b`() @signature `Le/e/c/y/e;.b:()I` @kind static;
  #L37cdce.  v0:= temp;
  #L37cdd0.  v1:= 9I;
  #L37cdd4.  if v0 >= v1 then goto L37cde4;
  #L37cdd8.  v0:= new `e.e.c.y.o.a`;
  #L37cddc.  call `<init>`(v0) @signature `Le/e/c/y/o/a;.<init>:()V` @kind direct;
  #L37cde2.  goto L37cdee;
  #L37cde4.  v0:= new `e.e.c.y.o.c`;
  #L37cde8.  call `<init>`(v0) @signature `Le/e/c/y/o/c;.<init>:()V` @kind direct;
  #L37cdee.  `@@e.e.c.y.o.b.a` @type ^`e.e.c.y.o.b` := v0 @kind object;
  #L37cdf2.  return @kind void;
}
procedure `void` `<init>`(`e.e.c.y.o.b` v0 @kind this) @signature `Le/e/c/y/o/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L37ce04.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L37ce0a.  return @kind void;
}
procedure `e.e.c.y.o.b` `a`() @signature `Le/e/c/y/o/b;.a:()Le/e/c/y/o/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L37cdb0.  v0:= `@@e.e.c.y.o.b.a` @type ^`e.e.c.y.o.b` @kind object;
  #L37cdb4.  return v0 @kind object;
}
procedure `void` `a`(`java.lang.reflect.AccessibleObject` v0 @kind object) @signature `Le/e/c/y/o/b;.a:(Ljava/lang/reflect/AccessibleObject;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
