record `e.e.c.y.h$b` @kind class @AccessFlag  extends `java.util.AbstractSet` @kind class {
  `e.e.c.y.h` `e.e.c.y.h$b.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.c.y.h$b` v0 @kind this, `e.e.c.y.h` v1 @kind object) @signature `Le/e/c/y/h$b;.<init>:(Le/e/c/y/h;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L37650c.  v0.`e.e.c.y.h$b.b` @type ^`e.e.c.y.h` := v1 @kind object;
  #L376510.  call `<init>`(v0) @signature `Ljava/util/AbstractSet;.<init>:()V` @kind direct;
  #L376516.  return @kind void;
}
procedure `void` `clear`(`e.e.c.y.h$b` v1 @kind this) @signature `Le/e/c/y/h$b;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L376528.  v0:= v1.`e.e.c.y.h$b.b` @type ^`e.e.c.y.h` @kind object;
  #L37652c.  call `clear`(v0) @signature `Le/e/c/y/h;.clear:()V` @kind virtual;
  #L376532.  return @kind void;
}
procedure `boolean` `contains`(`e.e.c.y.h$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Le/e/c/y/h$b;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L376460.  v0:= instanceof @variable v2 @type ^`java.util.Map$Entry` @kind boolean;
  #L376464.  if v0 == 0 then goto L376480;
  #L376468.  v0:= v1.`e.e.c.y.h$b.b` @type ^`e.e.c.y.h` @kind object;
  #L37646c.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L376470.  call temp:= `a`(v0, v2) @signature `Le/e/c/y/h;.a:(Ljava/util/Map$Entry;)Le/e/c/y/h$e;` @kind virtual;
  #L376476.  v2:= temp @kind object;
  #L376478.  if v2 == 0 then goto L376480;
  #L37647c.  v2:= 1I;
  #L37647e.  goto L376482;
  #L376480.  v2:= 0I;
  #L376482.  return v2;
}
procedure `java.util.Iterator` `iterator`(`e.e.c.y.h$b` v1 @kind this) @signature `Le/e/c/y/h$b;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3764f0.  v0:= new `e.e.c.y.h$b$a`;
  #L3764f4.  call `<init>`(v0, v1) @signature `Le/e/c/y/h$b$a;.<init>:(Le/e/c/y/h$b;)V` @kind direct;
  #L3764fa.  return v0 @kind object;
}
procedure `boolean` `remove`(`e.e.c.y.h$b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Le/e/c/y/h$b;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L376494.  v0:= instanceof @variable v3 @type ^`java.util.Map$Entry` @kind boolean;
  #L376498.  v1:= 0I;
  #L37649a.  if v0 != 0 then goto L3764a0;
  #L37649e.  return v1;
  #L3764a0.  v0:= v2.`e.e.c.y.h$b.b` @type ^`e.e.c.y.h` @kind object;
  #L3764a4.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L3764a8.  call temp:= `a`(v0, v3) @signature `Le/e/c/y/h;.a:(Ljava/util/Map$Entry;)Le/e/c/y/h$e;` @kind virtual;
  #L3764ae.  v3:= temp @kind object;
  #L3764b0.  if v3 != 0 then goto L3764b6;
  #L3764b4.  return v1;
  #L3764b6.  v0:= v2.`e.e.c.y.h$b.b` @type ^`e.e.c.y.h` @kind object;
  #L3764ba.  v1:= 1I;
  #L3764bc.  call `a`(v0, v3, v1) @signature `Le/e/c/y/h;.a:(Le/e/c/y/h$e;Z)V` @kind virtual;
  #L3764c2.  return v1;
}
procedure `int` `size`(`e.e.c.y.h$b` v1 @kind this) @signature `Le/e/c/y/h$b;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3764d4.  v0:= v1.`e.e.c.y.h$b.b` @type ^`e.e.c.y.h` @kind object;
  #L3764d8.  v0:= v0.`e.e.c.y.h.d` @type ^`int`;
  #L3764dc.  return v0;
}
