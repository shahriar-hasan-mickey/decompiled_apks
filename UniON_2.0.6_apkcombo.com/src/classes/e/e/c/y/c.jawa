record `e.e.c.y.c` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Map` `e.e.c.y.c.a` @AccessFlag PRIVATE_FINAL;
  `e.e.c.y.o.b` `e.e.c.y.c.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.c.y.c` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Le/e/c/y/c;.<init>:(Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L375b14.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L375b1a.  call temp:= `a`() @signature `Le/e/c/y/o/b;.a:()Le/e/c/y/o/b;` @kind static;
  #L375b20.  v0:= temp @kind object;
  #L375b22.  v1.`e.e.c.y.c.b` @type ^`e.e.c.y.o.b` := v0 @kind object;
  #L375b26.  v1.`e.e.c.y.c.a` @type ^`java.util.Map` := v2 @kind object;
  #L375b2a.  return @kind void;
}
procedure `e.e.c.y.i` `a`(`e.e.c.y.c` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Le/e/c/y/c;.a:(Ljava/lang/Class;)Le/e/c/y/i;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L37592c.  v0:= 0I;
  #L37592e.  v0:= new `java.lang.Class`[v0];
  #L375932.  call temp:= `getDeclaredConstructor`(v2, v0) @signature `Ljava/lang/Class;.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L375938.  v2:= temp @kind object;
  #L37593a.  call temp:= `isAccessible`(v2) @signature `Ljava/lang/reflect/Constructor;.isAccessible:()Z` @kind virtual;
  #L375940.  v0:= temp;
  #L375942.  if v0 != 0 then goto L375950;
  #L375946.  v0:= v1.`e.e.c.y.c.b` @type ^`e.e.c.y.o.b` @kind object;
  #L37594a.  call `a`(v0, v2) @signature `Le/e/c/y/o/b;.a:(Ljava/lang/reflect/AccessibleObject;)V` @kind virtual;
  #L375950.  v0:= new `e.e.c.y.c$h`;
  #L375954.  call `<init>`(v0, v1, v2) @signature `Le/e/c/y/c$h;.<init>:(Le/e/c/y/c;Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L37595a.  return v0 @kind object;
  #L37595c.  v2:= 0I;
  #L37595e.  return v2 @kind object;
  catch `java.lang.NoSuchMethodException` @[L37592e..L37595a] goto L37595c;
}
procedure `e.e.c.y.i` `a`(`e.e.c.y.c` v1 @kind this, `java.lang.reflect.Type` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Le/e/c/y/c;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Le/e/c/y/i;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L375980.  v0:= constclass @type ^`java.util.Collection` @kind object;
  #L375984.  call temp:= `isAssignableFrom`(v0, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L37598a.  v0:= temp;
  #L37598c.  if v0 == 0 then goto L375a0c;
  #L375990.  v0:= constclass @type ^`java.util.SortedSet` @kind object;
  #L375994.  call temp:= `isAssignableFrom`(v0, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L37599a.  v0:= temp;
  #L37599c.  if v0 == 0 then goto L3759ac;
  #L3759a0.  v2:= new `e.e.c.y.c$i`;
  #L3759a4.  call `<init>`(v2, v1) @signature `Le/e/c/y/c$i;.<init>:(Le/e/c/y/c;)V` @kind direct;
  #L3759aa.  return v2 @kind object;
  #L3759ac.  v0:= constclass @type ^`java.util.EnumSet` @kind object;
  #L3759b0.  call temp:= `isAssignableFrom`(v0, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3759b6.  v0:= temp;
  #L3759b8.  if v0 == 0 then goto L3759c8;
  #L3759bc.  v3:= new `e.e.c.y.c$j`;
  #L3759c0.  call `<init>`(v3, v1, v2) @signature `Le/e/c/y/c$j;.<init>:(Le/e/c/y/c;Ljava/lang/reflect/Type;)V` @kind direct;
  #L3759c6.  return v3 @kind object;
  #L3759c8.  v2:= constclass @type ^`java.util.Set` @kind object;
  #L3759cc.  call temp:= `isAssignableFrom`(v2, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3759d2.  v2:= temp;
  #L3759d4.  if v2 == 0 then goto L3759e4;
  #L3759d8.  v2:= new `e.e.c.y.c$k`;
  #L3759dc.  call `<init>`(v2, v1) @signature `Le/e/c/y/c$k;.<init>:(Le/e/c/y/c;)V` @kind direct;
  #L3759e2.  return v2 @kind object;
  #L3759e4.  v2:= constclass @type ^`java.util.Queue` @kind object;
  #L3759e8.  call temp:= `isAssignableFrom`(v2, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3759ee.  v2:= temp;
  #L3759f0.  if v2 == 0 then goto L375a00;
  #L3759f4.  v2:= new `e.e.c.y.c$l`;
  #L3759f8.  call `<init>`(v2, v1) @signature `Le/e/c/y/c$l;.<init>:(Le/e/c/y/c;)V` @kind direct;
  #L3759fe.  return v2 @kind object;
  #L375a00.  v2:= new `e.e.c.y.c$m`;
  #L375a04.  call `<init>`(v2, v1) @signature `Le/e/c/y/c$m;.<init>:(Le/e/c/y/c;)V` @kind direct;
  #L375a0a.  return v2 @kind object;
  #L375a0c.  v0:= constclass @type ^`java.util.Map` @kind object;
  #L375a10.  call temp:= `isAssignableFrom`(v0, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L375a16.  v0:= temp;
  #L375a18.  if v0 == 0 then goto L375ac2;
  #L375a1c.  v0:= constclass @type ^`java.util.concurrent.ConcurrentNavigableMap` @kind object;
  #L375a20.  call temp:= `isAssignableFrom`(v0, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L375a26.  v0:= temp;
  #L375a28.  if v0 == 0 then goto L375a38;
  #L375a2c.  v2:= new `e.e.c.y.c$n`;
  #L375a30.  call `<init>`(v2, v1) @signature `Le/e/c/y/c$n;.<init>:(Le/e/c/y/c;)V` @kind direct;
  #L375a36.  return v2 @kind object;
  #L375a38.  v0:= constclass @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L375a3c.  call temp:= `isAssignableFrom`(v0, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L375a42.  v0:= temp;
  #L375a44.  if v0 == 0 then goto L375a54;
  #L375a48.  v2:= new `e.e.c.y.c$a`;
  #L375a4c.  call `<init>`(v2, v1) @signature `Le/e/c/y/c$a;.<init>:(Le/e/c/y/c;)V` @kind direct;
  #L375a52.  return v2 @kind object;
  #L375a54.  v0:= constclass @type ^`java.util.SortedMap` @kind object;
  #L375a58.  call temp:= `isAssignableFrom`(v0, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L375a5e.  v3:= temp;
  #L375a60.  if v3 == 0 then goto L375a70;
  #L375a64.  v2:= new `e.e.c.y.c$b`;
  #L375a68.  call `<init>`(v2, v1) @signature `Le/e/c/y/c$b;.<init>:(Le/e/c/y/c;)V` @kind direct;
  #L375a6e.  return v2 @kind object;
  #L375a70.  v3:= instanceof @variable v2 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L375a74.  if v3 == 0 then goto L375ab6;
  #L375a78.  v3:= constclass @type ^`java.lang.String` @kind object;
  #L375a7c.  v2:= (`java.lang.reflect.ParameterizedType`) v2 @kind object;
  #L375a80.  call temp:= `getActualTypeArguments`(v2) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L375a86.  v2:= temp @kind object;
  #L375a88.  v0:= 0I;
  #L375a8a.  v2:= v2[v0] @kind object;
  #L375a8e.  call temp:= `a`(v2) @signature `Le/e/c/z/a;.a:(Ljava/lang/reflect/Type;)Le/e/c/z/a;` @kind static;
  #L375a94.  v2:= temp @kind object;
  #L375a96.  call temp:= `a`(v2) @signature `Le/e/c/z/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L375a9c.  v2:= temp @kind object;
  #L375a9e.  call temp:= `isAssignableFrom`(v3, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L375aa4.  v2:= temp;
  #L375aa6.  if v2 != 0 then goto L375ab6;
  #L375aaa.  v2:= new `e.e.c.y.c$c`;
  #L375aae.  call `<init>`(v2, v1) @signature `Le/e/c/y/c$c;.<init>:(Le/e/c/y/c;)V` @kind direct;
  #L375ab4.  return v2 @kind object;
  #L375ab6.  v2:= new `e.e.c.y.c$d`;
  #L375aba.  call `<init>`(v2, v1) @signature `Le/e/c/y/c$d;.<init>:(Le/e/c/y/c;)V` @kind direct;
  #L375ac0.  return v2 @kind object;
  #L375ac2.  v2:= 0I;
  #L375ac4.  return v2 @kind object;
}
procedure `e.e.c.y.i` `b`(`e.e.c.y.c` v1 @kind this, `java.lang.reflect.Type` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Le/e/c/y/c;.b:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Le/e/c/y/i;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L375ad8.  v0:= new `e.e.c.y.c$e`;
  #L375adc.  call `<init>`(v0, v1, v3, v2) @signature `Le/e/c/y/c$e;.<init>:(Le/e/c/y/c;Ljava/lang/Class;Ljava/lang/reflect/Type;)V` @kind direct;
  #L375ae2.  return v0 @kind object;
}
procedure `e.e.c.y.i` `a`(`e.e.c.y.c` v2 @kind this, `e.e.c.z.a` v3 @kind object) @signature `Le/e/c/y/c;.a:(Le/e/c/z/a;)Le/e/c/y/i;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3758a4.  call temp:= `b`(v3) @signature `Le/e/c/z/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L3758aa.  v0:= temp @kind object;
  #L3758ac.  call temp:= `a`(v3) @signature `Le/e/c/z/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L3758b2.  v3:= temp @kind object;
  #L3758b4.  v1:= v2.`e.e.c.y.c.a` @type ^`java.util.Map` @kind object;
  #L3758b8.  call temp:= `get`(v1, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3758be.  v1:= temp @kind object;
  #L3758c0.  v1:= (`e.e.c.h`) v1 @kind object;
  #L3758c4.  if v1 == 0 then goto L3758d4;
  #L3758c8.  v3:= new `e.e.c.y.c$f`;
  #L3758cc.  call `<init>`(v3, v2, v1, v0) @signature `Le/e/c/y/c$f;.<init>:(Le/e/c/y/c;Le/e/c/h;Ljava/lang/reflect/Type;)V` @kind direct;
  #L3758d2.  return v3 @kind object;
  #L3758d4.  v1:= v2.`e.e.c.y.c.a` @type ^`java.util.Map` @kind object;
  #L3758d8.  call temp:= `get`(v1, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3758de.  v1:= temp @kind object;
  #L3758e0.  v1:= (`e.e.c.h`) v1 @kind object;
  #L3758e4.  if v1 == 0 then goto L3758f4;
  #L3758e8.  v3:= new `e.e.c.y.c$g`;
  #L3758ec.  call `<init>`(v3, v2, v1, v0) @signature `Le/e/c/y/c$g;.<init>:(Le/e/c/y/c;Le/e/c/h;Ljava/lang/reflect/Type;)V` @kind direct;
  #L3758f2.  return v3 @kind object;
  #L3758f4.  call temp:= `a`(v2, v3) @signature `Le/e/c/y/c;.a:(Ljava/lang/Class;)Le/e/c/y/i;` @kind direct;
  #L3758fa.  v1:= temp @kind object;
  #L3758fc.  if v1 == 0 then goto L375902;
  #L375900.  return v1 @kind object;
  #L375902.  call temp:= `a`(v2, v0, v3) @signature `Le/e/c/y/c;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Le/e/c/y/i;` @kind direct;
  #L375908.  v1:= temp @kind object;
  #L37590a.  if v1 == 0 then goto L375910;
  #L37590e.  return v1 @kind object;
  #L375910.  call temp:= `b`(v2, v0, v3) @signature `Le/e/c/y/c;.b:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Le/e/c/y/i;` @kind direct;
  #L375916.  v3:= temp @kind object;
  #L375918.  return v3 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.c.y.c` v1 @kind this) @signature `Le/e/c/y/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L375af4.  v0:= v1.`e.e.c.y.c.a` @type ^`java.util.Map` @kind object;
  #L375af8.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L375afe.  v0:= temp @kind object;
  #L375b00.  return v0 @kind object;
}
