record `e.e.c.y.b` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.reflect.Type`[] `@@e.e.c.y.b.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/c/y/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3753ac.  v0:= 0I;
  #L3753ae.  v0:= new `java.lang.reflect.Type`[v0];
  #L3753b2.  `@@e.e.c.y.b.a` @type ^`java.lang.reflect.Type`[] := v0 @kind object;
  #L3753b6.  return @kind void;
}
procedure `int` `a`(`java.lang.Object` v0 @kind object) @signature `Le/e/c/y/b;.a:(Ljava/lang/Object;)I` @AccessFlag STATIC {
    temp;

  #L374c50.  if v0 == 0 then goto L374c5e;
  #L374c54.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L374c5a.  v0:= temp;
  #L374c5c.  goto L374c60;
  #L374c5e.  v0:= 0I;
  #L374c60.  return v0;
}
procedure `int` `a`(`java.lang.Object`[] v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Le/e/c/y/b;.a:([Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L374c74.  v0:= length @variable v3;
  #L374c76.  v1:= 0I;
  #L374c78.  if v1 >= v0 then goto L374c94;
  #L374c7c.  v2:= v3[v1] @kind object;
  #L374c80.  call temp:= `equals`(v4, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L374c86.  v2:= temp;
  #L374c88.  if v2 == 0 then goto L374c8e;
  #L374c8c.  return v1;
  #L374c8e.  v1:= v1 + 1;
  #L374c92.  goto L374c78;
  #L374c94.  v3:= new `java.util.NoSuchElementException`;
  #L374c98.  call `<init>`(v3) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L374c9e.  throw v3;
}
procedure `java.lang.Class` `a`(`java.lang.reflect.TypeVariable` v1 @kind object) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/TypeVariable;)Ljava/lang/Class;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L374cb0.  call temp:= `getGenericDeclaration`(v1) @signature `Ljava/lang/reflect/TypeVariable;.getGenericDeclaration:()Ljava/lang/reflect/GenericDeclaration;` @kind interface;
  #L374cb6.  v1:= temp @kind object;
  #L374cb8.  v0:= instanceof @variable v1 @type ^`java.lang.Class` @kind boolean;
  #L374cbc.  if v0 == 0 then goto L374cc6;
  #L374cc0.  v1:= (`java.lang.Class`) v1 @kind object;
  #L374cc4.  goto L374cc8;
  #L374cc6.  v1:= 0I;
  #L374cc8.  return v1 @kind object;
}
procedure `java.lang.reflect.GenericArrayType` `a`(`java.lang.reflect.Type` v1 @kind object) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/GenericArrayType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L374e08.  v0:= new `e.e.c.y.b$a`;
  #L374e0c.  call `<init>`(v0, v1) @signature `Le/e/c/y/b$a;.<init>:(Ljava/lang/reflect/Type;)V` @kind direct;
  #L374e12.  return v0 @kind object;
}
procedure `java.lang.reflect.ParameterizedType` `a`(`java.lang.reflect.Type` v1 @kind object, `java.lang.reflect.Type` v2 @kind object, `java.lang.reflect.Type`[] v3 @kind object) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L374e24.  v0:= new `e.e.c.y.b$b`;
  #L374e28.  call `<init>`(v0, v1, v2, v3) @signature `Le/e/c/y/b$b;.<init>:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @kind direct;
  #L374e2e.  return v0 @kind object;
}
procedure `java.lang.reflect.Type` `a`(`java.lang.reflect.Type` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L374f34.  v0:= constclass @type ^`java.util.Collection` @kind object;
  #L374f38.  call temp:= `b`(v1, v2, v0) @signature `Le/e/c/y/b;.b:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L374f3e.  v1:= temp @kind object;
  #L374f40.  v2:= instanceof @variable v1 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L374f44.  v0:= 0I;
  #L374f46.  if v2 == 0 then goto L374f5a;
  #L374f4a.  v1:= (`java.lang.reflect.WildcardType`) v1 @kind object;
  #L374f4e.  call temp:= `getUpperBounds`(v1) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L374f54.  v1:= temp @kind object;
  #L374f56.  v1:= v1[v0] @kind object;
  #L374f5a.  v2:= instanceof @variable v1 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L374f5e.  if v2 == 0 then goto L374f74;
  #L374f62.  v1:= (`java.lang.reflect.ParameterizedType`) v1 @kind object;
  #L374f66.  call temp:= `getActualTypeArguments`(v1) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L374f6c.  v1:= temp @kind object;
  #L374f6e.  v1:= v1[v0] @kind object;
  #L374f72.  return v1 @kind object;
  #L374f74.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L374f78.  return v1 @kind object;
}
procedure `java.lang.reflect.Type` `a`(`java.lang.reflect.Type` v3 @kind object, `java.lang.Class` v4 @kind object, `java.lang.Class` v5 @kind object) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L374f8c.  if v5 != v4 then goto L374f92;
  #L374f90.  return v3 @kind object;
  #L374f92.  call temp:= `isInterface`(v5) @signature `Ljava/lang/Class;.isInterface:()Z` @kind virtual;
  #L374f98.  v3:= temp;
  #L374f9a.  if v3 == 0 then goto L374ff4;
  #L374f9e.  call temp:= `getInterfaces`(v4) @signature `Ljava/lang/Class;.getInterfaces:()[Ljava/lang/Class;` @kind virtual;
  #L374fa4.  v3:= temp @kind object;
  #L374fa6.  v0:= 0I;
  #L374fa8.  v1:= length @variable v3;
  #L374faa.  if v0 >= v1 then goto L374ff4;
  #L374fae.  v2:= v3[v0] @kind object;
  #L374fb2.  if v2 != v5 then goto L374fc4;
  #L374fb6.  call temp:= `getGenericInterfaces`(v4) @signature `Ljava/lang/Class;.getGenericInterfaces:()[Ljava/lang/reflect/Type;` @kind virtual;
  #L374fbc.  v3:= temp @kind object;
  #L374fbe.  v3:= v3[v0] @kind object;
  #L374fc2.  return v3 @kind object;
  #L374fc4.  v2:= v3[v0] @kind object;
  #L374fc8.  call temp:= `isAssignableFrom`(v5, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L374fce.  v2:= temp;
  #L374fd0.  if v2 == 0 then goto L374fee;
  #L374fd4.  call temp:= `getGenericInterfaces`(v4) @signature `Ljava/lang/Class;.getGenericInterfaces:()[Ljava/lang/reflect/Type;` @kind virtual;
  #L374fda.  v4:= temp @kind object;
  #L374fdc.  v4:= v4[v0] @kind object;
  #L374fe0.  v3:= v3[v0] @kind object;
  #L374fe4.  call temp:= `a`(v4, v3, v5) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L374fea.  v3:= temp @kind object;
  #L374fec.  return v3 @kind object;
  #L374fee.  v0:= v0 + 1;
  #L374ff2.  goto L374faa;
  #L374ff4.  call temp:= `isInterface`(v4) @signature `Ljava/lang/Class;.isInterface:()Z` @kind virtual;
  #L374ffa.  v3:= temp;
  #L374ffc.  if v3 != 0 then goto L375040;
  #L375000.  v3:= constclass @type ^`java.lang.Object` @kind object;
  #L375004.  if v4 == v3 then goto L375040;
  #L375008.  call temp:= `getSuperclass`(v4) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L37500e.  v3:= temp @kind object;
  #L375010.  if v3 != v5 then goto L37501e;
  #L375014.  call temp:= `getGenericSuperclass`(v4) @signature `Ljava/lang/Class;.getGenericSuperclass:()Ljava/lang/reflect/Type;` @kind virtual;
  #L37501a.  v3:= temp @kind object;
  #L37501c.  return v3 @kind object;
  #L37501e.  call temp:= `isAssignableFrom`(v5, v3) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L375024.  v0:= temp;
  #L375026.  if v0 == 0 then goto L37503c;
  #L37502a.  call temp:= `getGenericSuperclass`(v4) @signature `Ljava/lang/Class;.getGenericSuperclass:()Ljava/lang/reflect/Type;` @kind virtual;
  #L375030.  v4:= temp @kind object;
  #L375032.  call temp:= `a`(v4, v3, v5) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L375038.  v3:= temp @kind object;
  #L37503a.  return v3 @kind object;
  #L37503c.  v4:= v3 @kind object;
  #L37503e.  goto L375000;
  #L375040.  return v5 @kind object;
}
procedure `java.lang.reflect.Type` `a`(`java.lang.reflect.Type` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.reflect.Type` v3 @kind object) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3750a0.  v0:= new `java.util.HashSet`;
  #L3750a4.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L3750aa.  call temp:= `a`(v1, v2, v3, v0) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;Ljava/util/Collection;)Ljava/lang/reflect/Type;` @kind static;
  #L3750b0.  v1:= temp @kind object;
  #L3750b2.  return v1 @kind object;
}
procedure `java.lang.reflect.Type` `a`(`java.lang.reflect.Type` v8 @kind object, `java.lang.Class` v9 @kind object, `java.lang.reflect.Type` v10 @kind object, `java.util.Collection` v11 @kind object) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;Ljava/util/Collection;)Ljava/lang/reflect/Type;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3750c4.  v0:= instanceof @variable v10 @type ^`java.lang.reflect.TypeVariable` @kind boolean;
  #L3750c8.  if v0 == 0 then goto L3750f4;
  #L3750cc.  v0:= v10 @kind object;
  #L3750ce.  v0:= (`java.lang.reflect.TypeVariable`) v0 @kind object;
  #L3750d2.  call temp:= `contains`(v11, v0) @signature `Ljava/util/Collection;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3750d8.  v1:= temp;
  #L3750da.  if v1 == 0 then goto L3750e0;
  #L3750de.  return v10 @kind object;
  #L3750e0.  call temp:= `add`(v11, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3750e6.  call temp:= `a`(v8, v9, v0) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/TypeVariable;)Ljava/lang/reflect/Type;` @kind static;
  #L3750ec.  v10:= temp @kind object;
  #L3750ee.  if v10 != v0 then goto L3750c4;
  #L3750f2.  return v10 @kind object;
  #L3750f4.  v0:= instanceof @variable v10 @type ^`java.lang.Class` @kind boolean;
  #L3750f8.  if v0 == 0 then goto L37512e;
  #L3750fc.  v0:= v10 @kind object;
  #L3750fe.  v0:= (`java.lang.Class`) v0 @kind object;
  #L375102.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L375108.  v1:= temp;
  #L37510a.  if v1 == 0 then goto L37512e;
  #L37510e.  call temp:= `getComponentType`(v0) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L375114.  v10:= temp @kind object;
  #L375116.  call temp:= `a`(v8, v9, v10, v11) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;Ljava/util/Collection;)Ljava/lang/reflect/Type;` @kind static;
  #L37511c.  v8:= temp @kind object;
  #L37511e.  if v10 != v8 then goto L375124;
  #L375122.  goto L37512c;
  #L375124.  call temp:= `a`(v8) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/GenericArrayType;` @kind static;
  #L37512a.  v0:= temp @kind object;
  #L37512c.  return v0 @kind object;
  #L37512e.  v0:= instanceof @variable v10 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L375132.  if v0 == 0 then goto L37515a;
  #L375136.  v10:= (`java.lang.reflect.GenericArrayType`) v10 @kind object;
  #L37513a.  call temp:= `getGenericComponentType`(v10) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L375140.  v0:= temp @kind object;
  #L375142.  call temp:= `a`(v8, v9, v0, v11) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;Ljava/util/Collection;)Ljava/lang/reflect/Type;` @kind static;
  #L375148.  v8:= temp @kind object;
  #L37514a.  if v0 != v8 then goto L375150;
  #L37514e.  goto L375158;
  #L375150.  call temp:= `a`(v8) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/GenericArrayType;` @kind static;
  #L375156.  v10:= temp @kind object;
  #L375158.  return v10 @kind object;
  #L37515a.  v0:= instanceof @variable v10 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L37515e.  v1:= 1I;
  #L375160.  v2:= 0I;
  #L375162.  if v0 == 0 then goto L3751da;
  #L375166.  v10:= (`java.lang.reflect.ParameterizedType`) v10 @kind object;
  #L37516a.  call temp:= `getOwnerType`(v10) @signature `Ljava/lang/reflect/ParameterizedType;.getOwnerType:()Ljava/lang/reflect/Type;` @kind interface;
  #L375170.  v0:= temp @kind object;
  #L375172.  call temp:= `a`(v8, v9, v0, v11) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;Ljava/util/Collection;)Ljava/lang/reflect/Type;` @kind static;
  #L375178.  v3:= temp @kind object;
  #L37517a.  if v3 == v0 then goto L375182;
  #L37517e.  v0:= 1I;
  #L375180.  goto L375184;
  #L375182.  v0:= 0I;
  #L375184.  call temp:= `getActualTypeArguments`(v10) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L37518a.  v4:= temp @kind object;
  #L37518c.  v5:= length @variable v4;
  #L37518e.  if v2 >= v5 then goto L3751c4;
  #L375192.  v6:= v4[v2] @kind object;
  #L375196.  call temp:= `a`(v8, v9, v6, v11) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;Ljava/util/Collection;)Ljava/lang/reflect/Type;` @kind static;
  #L37519c.  v6:= temp @kind object;
  #L37519e.  v7:= v4[v2] @kind object;
  #L3751a2.  if v6 == v7 then goto L3751be;
  #L3751a6.  if v0 != 0 then goto L3751ba;
  #L3751aa.  call temp:= `clone`(v4) @signature `[Ljava/lang/reflect/Type;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3751b0.  v0:= temp @kind object;
  #L3751b2.  v4:= v0 @kind object;
  #L3751b4.  v4:= (`java.lang.reflect.Type`[]) v4 @kind object;
  #L3751b8.  v0:= 1I;
  #L3751ba.  v4[v2]:= v6 @kind object;
  #L3751be.  v2:= v2 + 1;
  #L3751c2.  goto L37518e;
  #L3751c4.  if v0 == 0 then goto L3751d8;
  #L3751c8.  call temp:= `getRawType`(v10) @signature `Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;` @kind interface;
  #L3751ce.  v8:= temp @kind object;
  #L3751d0.  call temp:= `a`(v3, v8, v4) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;` @kind static;
  #L3751d6.  v10:= temp @kind object;
  #L3751d8.  return v10 @kind object;
  #L3751da.  v0:= instanceof @variable v10 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L3751de.  if v0 == 0 then goto L37523e;
  #L3751e2.  v10:= (`java.lang.reflect.WildcardType`) v10 @kind object;
  #L3751e6.  call temp:= `getLowerBounds`(v10) @signature `Ljava/lang/reflect/WildcardType;.getLowerBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L3751ec.  v0:= temp @kind object;
  #L3751ee.  call temp:= `getUpperBounds`(v10) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L3751f4.  v3:= temp @kind object;
  #L3751f6.  v4:= length @variable v0;
  #L3751f8.  if v4 != v1 then goto L37521a;
  #L3751fc.  v1:= v0[v2] @kind object;
  #L375200.  call temp:= `a`(v8, v9, v1, v11) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;Ljava/util/Collection;)Ljava/lang/reflect/Type;` @kind static;
  #L375206.  v8:= temp @kind object;
  #L375208.  v9:= v0[v2] @kind object;
  #L37520c.  if v8 == v9 then goto L37523e;
  #L375210.  call temp:= `g`(v8) @signature `Le/e/c/y/b;.g:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;` @kind static;
  #L375216.  v8:= temp @kind object;
  #L375218.  return v8 @kind object;
  #L37521a.  v0:= length @variable v3;
  #L37521c.  if v0 != v1 then goto L37523e;
  #L375220.  v0:= v3[v2] @kind object;
  #L375224.  call temp:= `a`(v8, v9, v0, v11) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;Ljava/util/Collection;)Ljava/lang/reflect/Type;` @kind static;
  #L37522a.  v8:= temp @kind object;
  #L37522c.  v9:= v3[v2] @kind object;
  #L375230.  if v8 == v9 then goto L37523e;
  #L375234.  call temp:= `f`(v8) @signature `Le/e/c/y/b;.f:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;` @kind static;
  #L37523a.  v8:= temp @kind object;
  #L37523c.  return v8 @kind object;
  #L37523e.  return v10 @kind object;
  #L375240.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L375242.  throw v8;
  catch `java.lang.Throwable` @[L375224..L37522c] goto L375240;
}
procedure `java.lang.reflect.Type` `a`(`java.lang.reflect.Type` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.reflect.TypeVariable` v3 @kind object) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/TypeVariable;)Ljava/lang/reflect/Type;` @AccessFlag STATIC {
    temp;
    v0;

  #L375260.  call temp:= `a`(v3) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/TypeVariable;)Ljava/lang/Class;` @kind static;
  #L375266.  v0:= temp @kind object;
  #L375268.  if v0 != 0 then goto L37526e;
  #L37526c.  return v3 @kind object;
  #L37526e.  call temp:= `a`(v1, v2, v0) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L375274.  v1:= temp @kind object;
  #L375276.  v2:= instanceof @variable v1 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L37527a.  if v2 == 0 then goto L3752a0;
  #L37527e.  call temp:= `getTypeParameters`(v0) @signature `Ljava/lang/Class;.getTypeParameters:()[Ljava/lang/reflect/TypeVariable;` @kind virtual;
  #L375284.  v2:= temp @kind object;
  #L375286.  call temp:= `a`(v2, v3) @signature `Le/e/c/y/b;.a:([Ljava/lang/Object;Ljava/lang/Object;)I` @kind static;
  #L37528c.  v2:= temp;
  #L37528e.  v1:= (`java.lang.reflect.ParameterizedType`) v1 @kind object;
  #L375292.  call temp:= `getActualTypeArguments`(v1) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L375298.  v1:= temp @kind object;
  #L37529a.  v1:= v1[v2] @kind object;
  #L37529e.  return v1 @kind object;
  #L3752a0.  return v3 @kind object;
}
procedure `boolean` `a`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Le/e/c/y/b;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag STATIC {
    temp;

  #L374aa0.  if v0 == v1 then goto L374aba;
  #L374aa4.  if v0 == 0 then goto L374ab6;
  #L374aa8.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L374aae.  v0:= temp;
  #L374ab0.  if v0 == 0 then goto L374ab6;
  #L374ab4.  goto L374aba;
  #L374ab6.  v0:= 0I;
  #L374ab8.  goto L374abc;
  #L374aba.  v0:= 1I;
  #L374abc.  return v0;
}
procedure `boolean` `a`(`java.lang.reflect.Type` v4 @kind object, `java.lang.reflect.Type` v5 @kind object) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L374ad0.  v0:= 1I;
  #L374ad2.  if v4 != v5 then goto L374ad8;
  #L374ad6.  return v0;
  #L374ad8.  v1:= instanceof @variable v4 @type ^`java.lang.Class` @kind boolean;
  #L374adc.  if v1 == 0 then goto L374aea;
  #L374ae0.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L374ae6.  v4:= temp;
  #L374ae8.  return v4;
  #L374aea.  v1:= instanceof @variable v4 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L374aee.  v2:= 0I;
  #L374af0.  if v1 == 0 then goto L374b60;
  #L374af4.  v1:= instanceof @variable v5 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L374af8.  if v1 != 0 then goto L374afe;
  #L374afc.  return v2;
  #L374afe.  v4:= (`java.lang.reflect.ParameterizedType`) v4 @kind object;
  #L374b02.  v5:= (`java.lang.reflect.ParameterizedType`) v5 @kind object;
  #L374b06.  call temp:= `getOwnerType`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getOwnerType:()Ljava/lang/reflect/Type;` @kind interface;
  #L374b0c.  v1:= temp @kind object;
  #L374b0e.  call temp:= `getOwnerType`(v5) @signature `Ljava/lang/reflect/ParameterizedType;.getOwnerType:()Ljava/lang/reflect/Type;` @kind interface;
  #L374b14.  v3:= temp @kind object;
  #L374b16.  call temp:= `a`(v1, v3) @signature `Le/e/c/y/b;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L374b1c.  v1:= temp;
  #L374b1e.  if v1 == 0 then goto L374b5c;
  #L374b22.  call temp:= `getRawType`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;` @kind interface;
  #L374b28.  v1:= temp @kind object;
  #L374b2a.  call temp:= `getRawType`(v5) @signature `Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;` @kind interface;
  #L374b30.  v3:= temp @kind object;
  #L374b32.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L374b38.  v1:= temp;
  #L374b3a.  if v1 == 0 then goto L374b5c;
  #L374b3e.  call temp:= `getActualTypeArguments`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L374b44.  v4:= temp @kind object;
  #L374b46.  call temp:= `getActualTypeArguments`(v5) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L374b4c.  v5:= temp @kind object;
  #L374b4e.  call temp:= `equals`(v4, v5) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L374b54.  v4:= temp;
  #L374b56.  if v4 == 0 then goto L374b5c;
  #L374b5a.  goto L374b5e;
  #L374b5c.  v0:= 0I;
  #L374b5e.  return v0;
  #L374b60.  v1:= instanceof @variable v4 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L374b64.  if v1 == 0 then goto L374b94;
  #L374b68.  v0:= instanceof @variable v5 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L374b6c.  if v0 != 0 then goto L374b72;
  #L374b70.  return v2;
  #L374b72.  v4:= (`java.lang.reflect.GenericArrayType`) v4 @kind object;
  #L374b76.  v5:= (`java.lang.reflect.GenericArrayType`) v5 @kind object;
  #L374b7a.  call temp:= `getGenericComponentType`(v4) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L374b80.  v4:= temp @kind object;
  #L374b82.  call temp:= `getGenericComponentType`(v5) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L374b88.  v5:= temp @kind object;
  #L374b8a.  call temp:= `a`(v4, v5) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z` @kind static;
  #L374b90.  v4:= temp;
  #L374b92.  return v4;
  #L374b94.  v1:= instanceof @variable v4 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L374b98.  if v1 == 0 then goto L374bec;
  #L374b9c.  v1:= instanceof @variable v5 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L374ba0.  if v1 != 0 then goto L374ba6;
  #L374ba4.  return v2;
  #L374ba6.  v4:= (`java.lang.reflect.WildcardType`) v4 @kind object;
  #L374baa.  v5:= (`java.lang.reflect.WildcardType`) v5 @kind object;
  #L374bae.  call temp:= `getUpperBounds`(v4) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L374bb4.  v1:= temp @kind object;
  #L374bb6.  call temp:= `getUpperBounds`(v5) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L374bbc.  v3:= temp @kind object;
  #L374bbe.  call temp:= `equals`(v1, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L374bc4.  v1:= temp;
  #L374bc6.  if v1 == 0 then goto L374be8;
  #L374bca.  call temp:= `getLowerBounds`(v4) @signature `Ljava/lang/reflect/WildcardType;.getLowerBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L374bd0.  v4:= temp @kind object;
  #L374bd2.  call temp:= `getLowerBounds`(v5) @signature `Ljava/lang/reflect/WildcardType;.getLowerBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L374bd8.  v5:= temp @kind object;
  #L374bda.  call temp:= `equals`(v4, v5) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L374be0.  v4:= temp;
  #L374be2.  if v4 == 0 then goto L374be8;
  #L374be6.  goto L374bea;
  #L374be8.  v0:= 0I;
  #L374bea.  return v0;
  #L374bec.  v1:= instanceof @variable v4 @type ^`java.lang.reflect.TypeVariable` @kind boolean;
  #L374bf0.  if v1 == 0 then goto L374c3c;
  #L374bf4.  v1:= instanceof @variable v5 @type ^`java.lang.reflect.TypeVariable` @kind boolean;
  #L374bf8.  if v1 != 0 then goto L374bfe;
  #L374bfc.  return v2;
  #L374bfe.  v4:= (`java.lang.reflect.TypeVariable`) v4 @kind object;
  #L374c02.  v5:= (`java.lang.reflect.TypeVariable`) v5 @kind object;
  #L374c06.  call temp:= `getGenericDeclaration`(v4) @signature `Ljava/lang/reflect/TypeVariable;.getGenericDeclaration:()Ljava/lang/reflect/GenericDeclaration;` @kind interface;
  #L374c0c.  v1:= temp @kind object;
  #L374c0e.  call temp:= `getGenericDeclaration`(v5) @signature `Ljava/lang/reflect/TypeVariable;.getGenericDeclaration:()Ljava/lang/reflect/GenericDeclaration;` @kind interface;
  #L374c14.  v3:= temp @kind object;
  #L374c16.  if v1 != v3 then goto L374c38;
  #L374c1a.  call temp:= `getName`(v4) @signature `Ljava/lang/reflect/TypeVariable;.getName:()Ljava/lang/String;` @kind interface;
  #L374c20.  v4:= temp @kind object;
  #L374c22.  call temp:= `getName`(v5) @signature `Ljava/lang/reflect/TypeVariable;.getName:()Ljava/lang/String;` @kind interface;
  #L374c28.  v5:= temp @kind object;
  #L374c2a.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L374c30.  v4:= temp;
  #L374c32.  if v4 == 0 then goto L374c38;
  #L374c36.  goto L374c3a;
  #L374c38.  v0:= 0I;
  #L374c3a.  return v0;
  #L374c3c.  return v2;
}
procedure `java.lang.reflect.Type` `b`(`java.lang.reflect.Type` v3 @kind object) @signature `Le/e/c/y/b;.b:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L374e40.  v0:= instanceof @variable v3 @type ^`java.lang.Class` @kind boolean;
  #L374e44.  if v0 == 0 then goto L374e76;
  #L374e48.  v3:= (`java.lang.Class`) v3 @kind object;
  #L374e4c.  call temp:= `isArray`(v3) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L374e52.  v0:= temp;
  #L374e54.  if v0 == 0 then goto L374e74;
  #L374e58.  v0:= new `e.e.c.y.b$a`;
  #L374e5c.  call temp:= `getComponentType`(v3) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L374e62.  v3:= temp @kind object;
  #L374e64.  call temp:= `b`(v3) @signature `Le/e/c/y/b;.b:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L374e6a.  v3:= temp @kind object;
  #L374e6c.  call `<init>`(v0, v3) @signature `Le/e/c/y/b$a;.<init>:(Ljava/lang/reflect/Type;)V` @kind direct;
  #L374e72.  v3:= v0 @kind object;
  #L374e74.  return v3 @kind object;
  #L374e76.  v0:= instanceof @variable v3 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L374e7a.  if v0 == 0 then goto L374ea6;
  #L374e7e.  v3:= (`java.lang.reflect.ParameterizedType`) v3 @kind object;
  #L374e82.  v0:= new `e.e.c.y.b$b`;
  #L374e86.  call temp:= `getOwnerType`(v3) @signature `Ljava/lang/reflect/ParameterizedType;.getOwnerType:()Ljava/lang/reflect/Type;` @kind interface;
  #L374e8c.  v1:= temp @kind object;
  #L374e8e.  call temp:= `getRawType`(v3) @signature `Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;` @kind interface;
  #L374e94.  v2:= temp @kind object;
  #L374e96.  call temp:= `getActualTypeArguments`(v3) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L374e9c.  v3:= temp @kind object;
  #L374e9e.  call `<init>`(v0, v1, v2, v3) @signature `Le/e/c/y/b$b;.<init>:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @kind direct;
  #L374ea4.  return v0 @kind object;
  #L374ea6.  v0:= instanceof @variable v3 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L374eaa.  if v0 == 0 then goto L374ec6;
  #L374eae.  v3:= (`java.lang.reflect.GenericArrayType`) v3 @kind object;
  #L374eb2.  v0:= new `e.e.c.y.b$a`;
  #L374eb6.  call temp:= `getGenericComponentType`(v3) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L374ebc.  v3:= temp @kind object;
  #L374ebe.  call `<init>`(v0, v3) @signature `Le/e/c/y/b$a;.<init>:(Ljava/lang/reflect/Type;)V` @kind direct;
  #L374ec4.  return v0 @kind object;
  #L374ec6.  v0:= instanceof @variable v3 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L374eca.  if v0 == 0 then goto L374eee;
  #L374ece.  v3:= (`java.lang.reflect.WildcardType`) v3 @kind object;
  #L374ed2.  v0:= new `e.e.c.y.b$c`;
  #L374ed6.  call temp:= `getUpperBounds`(v3) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L374edc.  v1:= temp @kind object;
  #L374ede.  call temp:= `getLowerBounds`(v3) @signature `Ljava/lang/reflect/WildcardType;.getLowerBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L374ee4.  v3:= temp @kind object;
  #L374ee6.  call `<init>`(v0, v1, v3) @signature `Le/e/c/y/b$c;.<init>:([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @kind direct;
  #L374eec.  return v0 @kind object;
  #L374eee.  return v3 @kind object;
}
procedure `java.lang.reflect.Type` `b`(`java.lang.reflect.Type` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Le/e/c/y/b;.b:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @AccessFlag STATIC {
    temp;
    v0;

  #L375054.  v0:= instanceof @variable v1 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L375058.  if v0 == 0 then goto L37506e;
  #L37505c.  v1:= (`java.lang.reflect.WildcardType`) v1 @kind object;
  #L375060.  call temp:= `getUpperBounds`(v1) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L375066.  v1:= temp @kind object;
  #L375068.  v0:= 0I;
  #L37506a.  v1:= v1[v0] @kind object;
  #L37506e.  call temp:= `isAssignableFrom`(v3, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L375074.  v0:= temp;
  #L375076.  call `a`(v0) @signature `Le/e/c/y/a;.a:(Z)V` @kind static;
  #L37507c.  call temp:= `a`(v1, v2, v3) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L375082.  v3:= temp @kind object;
  #L375084.  call temp:= `a`(v1, v2, v3) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L37508a.  v1:= temp @kind object;
  #L37508c.  return v1 @kind object;
}
procedure `java.lang.reflect.Type`[] `b`(`java.lang.reflect.Type` v5 @kind object, `java.lang.Class` v6 @kind object) @signature `Le/e/c/y/b;.b:(Ljava/lang/reflect/Type;Ljava/lang/Class;)[Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3752b4.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L3752b8.  v1:= constclass @type ^`java.util.Properties` @kind object;
  #L3752bc.  v2:= 1I;
  #L3752be.  v3:= 0I;
  #L3752c0.  v4:= 2I;
  #L3752c2.  if v5 != v1 then goto L3752dc;
  #L3752c6.  v5:= new `java.lang.reflect.Type`[v4];
  #L3752ca.  v6:= constclass @type ^`java.lang.String` @kind object;
  #L3752ce.  v5[v3]:= v6 @kind object;
  #L3752d2.  v6:= constclass @type ^`java.lang.String` @kind object;
  #L3752d6.  v5[v2]:= v6 @kind object;
  #L3752da.  return v5 @kind object;
  #L3752dc.  v1:= constclass @type ^`java.util.Map` @kind object;
  #L3752e0.  call temp:= `b`(v5, v6, v1) @signature `Le/e/c/y/b;.b:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L3752e6.  v5:= temp @kind object;
  #L3752e8.  v6:= instanceof @variable v5 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L3752ec.  if v6 == 0 then goto L3752fe;
  #L3752f0.  v5:= (`java.lang.reflect.ParameterizedType`) v5 @kind object;
  #L3752f4.  call temp:= `getActualTypeArguments`(v5) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L3752fa.  v5:= temp @kind object;
  #L3752fc.  return v5 @kind object;
  #L3752fe.  v5:= new `java.lang.reflect.Type`[v4];
  #L375302.  v5[v3]:= v0 @kind object;
  #L375306.  v5[v2]:= v0 @kind object;
  #L37530a.  return v5 @kind object;
}
procedure `void` `c`(`java.lang.reflect.Type` v1 @kind object) @signature `Le/e/c/y/b;.c:(Ljava/lang/reflect/Type;)V` @AccessFlag STATIC {
    temp;
    v0;

  #L3753c8.  v0:= instanceof @variable v1 @type ^`java.lang.Class` @kind boolean;
  #L3753cc.  if v0 == 0 then goto L3753e6;
  #L3753d0.  v1:= (`java.lang.Class`) v1 @kind object;
  #L3753d4.  call temp:= `isPrimitive`(v1) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L3753da.  v1:= temp;
  #L3753dc.  if v1 != 0 then goto L3753e2;
  #L3753e0.  goto L3753e6;
  #L3753e2.  v1:= 0I;
  #L3753e4.  goto L3753e8;
  #L3753e6.  v1:= 1I;
  #L3753e8.  call `a`(v1) @signature `Le/e/c/y/a;.a:(Z)V` @kind static;
  #L3753ee.  return @kind void;
}
procedure `java.lang.reflect.Type` `d`(`java.lang.reflect.Type` v1 @kind object) @signature `Le/e/c/y/b;.d:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L374f00.  v0:= instanceof @variable v1 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L374f04.  if v0 == 0 then goto L374f16;
  #L374f08.  v1:= (`java.lang.reflect.GenericArrayType`) v1 @kind object;
  #L374f0c.  call temp:= `getGenericComponentType`(v1) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L374f12.  v1:= temp @kind object;
  #L374f14.  goto L374f22;
  #L374f16.  v1:= (`java.lang.Class`) v1 @kind object;
  #L374f1a.  call temp:= `getComponentType`(v1) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L374f20.  v1:= temp @kind object;
  #L374f22.  return v1 @kind object;
}
procedure `java.lang.Class` `e`(`java.lang.reflect.Type` v4 @kind object) @signature `Le/e/c/y/b;.e:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L374cdc.  v0:= instanceof @variable v4 @type ^`java.lang.Class` @kind boolean;
  #L374ce0.  if v0 == 0 then goto L374cea;
  #L374ce4.  v4:= (`java.lang.Class`) v4 @kind object;
  #L374ce8.  return v4 @kind object;
  #L374cea.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L374cee.  if v0 == 0 then goto L374d0e;
  #L374cf2.  v4:= (`java.lang.reflect.ParameterizedType`) v4 @kind object;
  #L374cf6.  call temp:= `getRawType`(v4) @signature `Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;` @kind interface;
  #L374cfc.  v4:= temp @kind object;
  #L374cfe.  v0:= instanceof @variable v4 @type ^`java.lang.Class` @kind boolean;
  #L374d02.  call `a`(v0) @signature `Le/e/c/y/a;.a:(Z)V` @kind static;
  #L374d08.  v4:= (`java.lang.Class`) v4 @kind object;
  #L374d0c.  return v4 @kind object;
  #L374d0e.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.GenericArrayType` @kind boolean;
  #L374d12.  v1:= 0I;
  #L374d14.  if v0 == 0 then goto L374d3e;
  #L374d18.  v4:= (`java.lang.reflect.GenericArrayType`) v4 @kind object;
  #L374d1c.  call temp:= `getGenericComponentType`(v4) @signature `Ljava/lang/reflect/GenericArrayType;.getGenericComponentType:()Ljava/lang/reflect/Type;` @kind interface;
  #L374d22.  v4:= temp @kind object;
  #L374d24.  call temp:= `e`(v4) @signature `Le/e/c/y/b;.e:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L374d2a.  v4:= temp @kind object;
  #L374d2c.  call temp:= `newInstance`(v4, v1) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L374d32.  v4:= temp @kind object;
  #L374d34.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L374d3a.  v4:= temp @kind object;
  #L374d3c.  return v4 @kind object;
  #L374d3e.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.TypeVariable` @kind boolean;
  #L374d42.  if v0 == 0 then goto L374d4c;
  #L374d46.  v4:= constclass @type ^`java.lang.Object` @kind object;
  #L374d4a.  return v4 @kind object;
  #L374d4c.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L374d50.  if v0 == 0 then goto L374d6e;
  #L374d54.  v4:= (`java.lang.reflect.WildcardType`) v4 @kind object;
  #L374d58.  call temp:= `getUpperBounds`(v4) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L374d5e.  v4:= temp @kind object;
  #L374d60.  v4:= v4[v1] @kind object;
  #L374d64.  call temp:= `e`(v4) @signature `Le/e/c/y/b;.e:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L374d6a.  v4:= temp @kind object;
  #L374d6c.  return v4 @kind object;
  #L374d6e.  if v4 != 0 then goto L374d78;
  #L374d72.  v0:= "null" @kind object;
  #L374d76.  goto L374d88;
  #L374d78.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L374d7e.  v0:= temp @kind object;
  #L374d80.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L374d86.  v0:= temp @kind object;
  #L374d88.  v1:= new `java.lang.IllegalArgumentException`;
  #L374d8c.  v2:= new `java.lang.StringBuilder`;
  #L374d90.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L374d96.  v3:= "Expected a Class, ParameterizedType, or GenericArrayType, but <" @kind object;
  #L374d9a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L374da0.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L374da6.  v4:= "> is of type " @kind object;
  #L374daa.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L374db0.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L374db6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L374dbc.  v4:= temp @kind object;
  #L374dbe.  call `<init>`(v1, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L374dc4.  throw v1;
}
procedure `java.lang.reflect.WildcardType` `f`(`java.lang.reflect.Type` v2 @kind object) @signature `Le/e/c/y/b;.f:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L37531c.  v0:= instanceof @variable v2 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L375320.  if v0 == 0 then goto L375332;
  #L375324.  v2:= (`java.lang.reflect.WildcardType`) v2 @kind object;
  #L375328.  call temp:= `getUpperBounds`(v2) @signature `Ljava/lang/reflect/WildcardType;.getUpperBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L37532e.  v2:= temp @kind object;
  #L375330.  goto L375340;
  #L375332.  v0:= 1I;
  #L375334.  v0:= new `java.lang.reflect.Type`[v0];
  #L375338.  v1:= 0I;
  #L37533a.  v0[v1]:= v2 @kind object;
  #L37533e.  v2:= v0 @kind object;
  #L375340.  v0:= new `e.e.c.y.b$c`;
  #L375344.  v1:= `@@e.e.c.y.b.a` @type ^`java.lang.reflect.Type`[] @kind object;
  #L375348.  call `<init>`(v0, v2, v1) @signature `Le/e/c/y/b$c;.<init>:([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @kind direct;
  #L37534e.  return v0 @kind object;
}
procedure `java.lang.reflect.WildcardType` `g`(`java.lang.reflect.Type` v4 @kind object) @signature `Le/e/c/y/b;.g:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L375360.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.WildcardType` @kind boolean;
  #L375364.  v1:= 0I;
  #L375366.  v2:= 1I;
  #L375368.  if v0 == 0 then goto L37537a;
  #L37536c.  v4:= (`java.lang.reflect.WildcardType`) v4 @kind object;
  #L375370.  call temp:= `getLowerBounds`(v4) @signature `Ljava/lang/reflect/WildcardType;.getLowerBounds:()[Ljava/lang/reflect/Type;` @kind interface;
  #L375376.  v4:= temp @kind object;
  #L375378.  goto L375384;
  #L37537a.  v0:= new `java.lang.reflect.Type`[v2];
  #L37537e.  v0[v1]:= v4 @kind object;
  #L375382.  v4:= v0 @kind object;
  #L375384.  v0:= new `e.e.c.y.b$c`;
  #L375388.  v2:= new `java.lang.reflect.Type`[v2];
  #L37538c.  v3:= constclass @type ^`java.lang.Object` @kind object;
  #L375390.  v2[v1]:= v3 @kind object;
  #L375394.  call `<init>`(v0, v2, v4) @signature `Le/e/c/y/b$c;.<init>:([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V` @kind direct;
  #L37539a.  return v0 @kind object;
}
procedure `java.lang.String` `h`(`java.lang.reflect.Type` v1 @kind object) @signature `Le/e/c/y/b;.h:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L374dd8.  v0:= instanceof @variable v1 @type ^`java.lang.Class` @kind boolean;
  #L374ddc.  if v0 == 0 then goto L374dee;
  #L374de0.  v1:= (`java.lang.Class`) v1 @kind object;
  #L374de4.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L374dea.  v1:= temp @kind object;
  #L374dec.  goto L374df6;
  #L374dee.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L374df4.  v1:= temp @kind object;
  #L374df6.  return v1 @kind object;
}
