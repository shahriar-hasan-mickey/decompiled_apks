record `e.e.c.y.n.o.a` @kind class @AccessFlag PUBLIC {
}
global `java.util.TimeZone` `@@e.e.c.y.n.o.a.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/c/y/n/o/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L37cd58.  v0:= "UTC" @kind object;
  #L37cd5c.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L37cd62.  v0:= temp @kind object;
  #L37cd64.  `@@e.e.c.y.n.o.a.a` @type ^`java.util.TimeZone` := v0 @kind object;
  #L37cd68.  return @kind void;
}
procedure `int` `a`(`java.lang.String` v2 @kind object, `int` v3 ) @signature `Le/e/c/y/n/o/a;.a:(Ljava/lang/String;I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L37c7b4.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L37c7ba.  v0:= temp;
  #L37c7bc.  if v3 >= v0 then goto L37c7e2;
  #L37c7c0.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L37c7c6.  v0:= temp;
  #L37c7c8.  v1:= 48I;
  #L37c7cc.  if v0 < v1 then goto L37c7e0;
  #L37c7d0.  v1:= 57I;
  #L37c7d4.  if v0 <= v1 then goto L37c7da;
  #L37c7d8.  goto L37c7e0;
  #L37c7da.  v3:= v3 + 1;
  #L37c7de.  goto L37c7b4;
  #L37c7e0.  return v3;
  #L37c7e2.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L37c7e8.  v2:= temp;
  #L37c7ea.  return v2;
}
procedure `int` `a`(`java.lang.String` v5 @kind object, `int` v6 , `int` v7 ) @signature `Le/e/c/y/n/o/a;.a:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L37c7fc.  if v6 < 0 then goto L37c8cc;
  #L37c800.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L37c806.  v0:= temp;
  #L37c808.  if v7 > v0 then goto L37c8cc;
  #L37c80c.  if v6 > v7 then goto L37c8cc;
  #L37c810.  v0:= 0I;
  #L37c812.  v1:= "Invalid number: " @kind object;
  #L37c816.  v2:= 10I;
  #L37c81a.  if v6 >= v7 then goto L37c86c;
  #L37c81e.  v0:= v6 + 1;
  #L37c822.  call temp:= `charAt`(v5, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L37c828.  v3:= temp;
  #L37c82a.  call temp:= `digit`(v3, v2) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L37c830.  v3:= temp;
  #L37c832.  if v3 < 0 then goto L37c83a;
  #L37c836.  v3:= -v3 @kind int;
  #L37c838.  goto L37c870;
  #L37c83a.  v0:= new `java.lang.NumberFormatException`;
  #L37c83e.  v2:= new `java.lang.StringBuilder`;
  #L37c842.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37c848.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c84e.  call temp:= `substring`(v5, v6, v7) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L37c854.  v5:= temp @kind object;
  #L37c856.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c85c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37c862.  v5:= temp @kind object;
  #L37c864.  call `<init>`(v0, v5) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L37c86a.  throw v0;
  #L37c86c.  v0:= v6;
  #L37c86e.  v3:= 0I;
  #L37c870.  if v0 >= v7 then goto L37c8c8;
  #L37c874.  v4:= v0 + 1;
  #L37c878.  call temp:= `charAt`(v5, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L37c87e.  v0:= temp;
  #L37c880.  call temp:= `digit`(v0, v2) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L37c886.  v0:= temp;
  #L37c888.  if v0 < 0 then goto L37c896;
  #L37c88c.  v3:= v3 * 10;
  #L37c890.  v3:= v3 - v0 @kind int;
  #L37c892.  v0:= v4;
  #L37c894.  goto L37c870;
  #L37c896.  v0:= new `java.lang.NumberFormatException`;
  #L37c89a.  v2:= new `java.lang.StringBuilder`;
  #L37c89e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37c8a4.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c8aa.  call temp:= `substring`(v5, v6, v7) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L37c8b0.  v5:= temp @kind object;
  #L37c8b2.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c8b8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37c8be.  v5:= temp @kind object;
  #L37c8c0.  call `<init>`(v0, v5) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L37c8c6.  throw v0;
  #L37c8c8.  v5:= -v3 @kind int;
  #L37c8ca.  return v5;
  #L37c8cc.  v6:= new `java.lang.NumberFormatException`;
  #L37c8d0.  call `<init>`(v6, v5) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L37c8d6.  throw v6;
}
procedure `java.util.Date` `a`(`java.lang.String` v17 @kind object, `java.text.ParsePosition` v18 @kind object) @signature `Le/e/c/y/n/o/a;.a:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L37c8e8.  v1:= v17 @kind object;
  #L37c8ec.  v2:= v18 @kind object;
  #L37c8f0.  call temp:= `getIndex`(v18) @signature `Ljava/text/ParsePosition;.getIndex:()I` @kind virtual;
  #L37c8f6.  v0:= temp;
  #L37c8f8.  v3:= v0 + 4;
  #L37c8fc.  call temp:= `a`(v1, v0, v3) @signature `Le/e/c/y/n/o/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L37c902.  v0:= temp;
  #L37c904.  v4:= 45I;
  #L37c908.  call temp:= `a`(v1, v3, v4) @signature `Le/e/c/y/n/o/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L37c90e.  v5:= temp;
  #L37c910.  if v5 == 0 then goto L37c918;
  #L37c914.  v3:= v3 + 1;
  #L37c918.  v5:= v3 + 2;
  #L37c91c.  call temp:= `a`(v1, v3, v5) @signature `Le/e/c/y/n/o/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L37c922.  v3:= temp;
  #L37c924.  call temp:= `a`(v1, v5, v4) @signature `Le/e/c/y/n/o/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L37c92a.  v6:= temp;
  #L37c92c.  if v6 == 0 then goto L37c934;
  #L37c930.  v5:= v5 + 1;
  #L37c934.  v6:= v5 + 2;
  #L37c938.  call temp:= `a`(v1, v5, v6) @signature `Le/e/c/y/n/o/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L37c93e.  v5:= temp;
  #L37c940.  v7:= 84I;
  #L37c944.  call temp:= `a`(v1, v6, v7) @signature `Le/e/c/y/n/o/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L37c94a.  v7:= temp;
  #L37c94c.  v8:= 1I;
  #L37c94e.  if v7 != 0 then goto L37c97a;
  #L37c952.  call temp:= `length`(v17) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L37c958.  v9:= temp;
  #L37c95a.  if v9 > v6 then goto L37c97a;
  #L37c95e.  v4:= new `java.util.GregorianCalendar`;
  #L37c962.  v3:= v3 - v8 @kind int;
  #L37c964.  call `<init>`(v4, v0, v3, v5) @signature `Ljava/util/GregorianCalendar;.<init>:(III)V` @kind direct;
  #L37c96a.  call `setIndex`(v2, v6) @signature `Ljava/text/ParsePosition;.setIndex:(I)V` @kind virtual;
  #L37c970.  call temp:= `getTime`(v4) @signature `Ljava/util/Calendar;.getTime:()Ljava/util/Date;` @kind virtual;
  #L37c976.  v0:= temp @kind object;
  #L37c978.  return v0 @kind object;
  #L37c97a.  v9:= 43I;
  #L37c97e.  v10:= 90I;
  #L37c982.  v12:= 2I;
  #L37c984.  if v7 == 0 then goto L37ca66;
  #L37c988.  v6:= v6 + 1;
  #L37c98c.  v7:= v6 + 2;
  #L37c990.  call temp:= `a`(v1, v6, v7) @signature `Le/e/c/y/n/o/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L37c996.  v6:= temp;
  #L37c998.  v13:= 58I;
  #L37c99c.  call temp:= `a`(v1, v7, v13) @signature `Le/e/c/y/n/o/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L37c9a2.  v14:= temp;
  #L37c9a4.  if v14 == 0 then goto L37c9ac;
  #L37c9a8.  v7:= v7 + 1;
  #L37c9ac.  v14:= v7 + 2;
  #L37c9b0.  call temp:= `a`(v1, v7, v14) @signature `Le/e/c/y/n/o/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L37c9b6.  v7:= temp;
  #L37c9b8.  call temp:= `a`(v1, v14, v13) @signature `Le/e/c/y/n/o/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L37c9be.  v13:= temp;
  #L37c9c0.  if v13 == 0 then goto L37c9c8;
  #L37c9c4.  v14:= v14 + 1;
  #L37c9c8.  call temp:= `length`(v17) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L37c9ce.  v13:= temp;
  #L37c9d0.  if v13 <= v14 then goto L37ca6c;
  #L37c9d4.  call temp:= `charAt`(v1, v14) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L37c9da.  v13:= temp;
  #L37c9dc.  if v13 == v10 then goto L37ca6c;
  #L37c9e0.  if v13 == v9 then goto L37ca6c;
  #L37c9e4.  if v13 == v4 then goto L37ca6c;
  #L37c9e8.  v13:= v14 + 2;
  #L37c9ec.  call temp:= `a`(v1, v14, v13) @signature `Le/e/c/y/n/o/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L37c9f2.  v14:= temp;
  #L37c9f4.  v15:= 59I;
  #L37c9f8.  if v14 <= v15 then goto L37ca08;
  #L37c9fc.  v15:= 63I;
  #L37ca00.  if v14 >= v15 then goto L37ca08;
  #L37ca04.  v14:= 59I;
  #L37ca08.  v15:= 46I;
  #L37ca0c.  call temp:= `a`(v1, v13, v15) @signature `Le/e/c/y/n/o/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L37ca12.  v15:= temp;
  #L37ca14.  if v15 == 0 then goto L37ca60;
  #L37ca18.  v13:= v13 + 1;
  #L37ca1c.  v15:= v13 + 1;
  #L37ca20.  call temp:= `a`(v1, v15) @signature `Le/e/c/y/n/o/a;.a:(Ljava/lang/String;I)I` @kind static;
  #L37ca26.  v15:= temp;
  #L37ca28.  v11:= v13 + 3;
  #L37ca2c.  call temp:= `min`(v15, v11) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L37ca32.  v11:= temp;
  #L37ca34.  call temp:= `a`(v1, v13, v11) @signature `Le/e/c/y/n/o/a;.a:(Ljava/lang/String;II)I` @kind static;
  #L37ca3a.  v16:= temp;
  #L37ca3c.  v11:= v11 - v13 @kind int;
  #L37ca3e.  if v11 == v8 then goto L37ca52;
  #L37ca42.  if v11 == v12 then goto L37ca4c;
  #L37ca46.  v11:= v16;
  #L37ca4a.  goto L37ca58;
  #L37ca4c.  v16:= v16 * 10;
  #L37ca50.  goto L37ca46;
  #L37ca52.  v16:= v16 * 100;
  #L37ca56.  goto L37ca46;
  #L37ca58.  v13:= v11;
  #L37ca5a.  v11:= v14;
  #L37ca5c.  v14:= v15;
  #L37ca5e.  goto L37ca70;
  #L37ca60.  v11:= v14;
  #L37ca62.  v14:= v13;
  #L37ca64.  goto L37ca6e;
  #L37ca66.  v14:= v6;
  #L37ca68.  v6:= 0I;
  #L37ca6a.  v7:= 0I;
  #L37ca6c.  v11:= 0I;
  #L37ca6e.  v13:= 0I;
  #L37ca70.  call temp:= `length`(v17) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L37ca76.  v15:= temp;
  #L37ca78.  if v15 <= v14 then goto L37cc46;
  #L37ca7c.  call temp:= `charAt`(v1, v14) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L37ca82.  v15:= temp;
  #L37ca84.  v12:= 5I;
  #L37ca86.  if v15 != v10 then goto L37ca94;
  #L37ca8a.  v4:= `@@e.e.c.y.n.o.a.a` @type ^`java.util.TimeZone` @kind object;
  #L37ca8e.  v14:= v14 + v8 @kind int;
  #L37ca90.  goto L37cbe4;
  #L37ca94.  if v15 == v9 then goto L37cad6;
  #L37ca98.  if v15 != v4 then goto L37ca9e;
  #L37ca9c.  goto L37cad6;
  #L37ca9e.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L37caa2.  v3:= new `java.lang.StringBuilder`;
  #L37caa6.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37caac.  v4:= "Invalid time zone indicator '" @kind object;
  #L37cab0.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37cab6.  call temp:= `append`(v3, v15) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L37cabc.  v4:= "'" @kind object;
  #L37cac0.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37cac6.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37cacc.  v3:= temp @kind object;
  #L37cace.  call `<init>`(v0, v3) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L37cad4.  throw v0;
  #L37cad6.  call temp:= `substring`(v1, v14) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L37cadc.  v4:= temp @kind object;
  #L37cade.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L37cae4.  v9:= temp;
  #L37cae6.  if v9 < v12 then goto L37caec;
  #L37caea.  goto L37cb0e;
  #L37caec.  v9:= new `java.lang.StringBuilder`;
  #L37caf0.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37caf6.  call temp:= `append`(v9, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37cafc.  v4:= "00" @kind object;
  #L37cb00.  call temp:= `append`(v9, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37cb06.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37cb0c.  v4:= temp @kind object;
  #L37cb0e.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L37cb14.  v9:= temp;
  #L37cb16.  v14:= v14 + v9 @kind int;
  #L37cb18.  v9:= "+0000" @kind object;
  #L37cb1c.  call temp:= `equals`(v9, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L37cb22.  v9:= temp;
  #L37cb24.  if v9 != 0 then goto L37cbe0;
  #L37cb28.  v9:= "+00:00" @kind object;
  #L37cb2c.  call temp:= `equals`(v9, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L37cb32.  v9:= temp;
  #L37cb34.  if v9 == 0 then goto L37cb3a;
  #L37cb38.  goto L37cbe0;
  #L37cb3a.  v9:= new `java.lang.StringBuilder`;
  #L37cb3e.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37cb44.  v10:= "GMT" @kind object;
  #L37cb48.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37cb4e.  call temp:= `append`(v9, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37cb54.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37cb5a.  v4:= temp @kind object;
  #L37cb5c.  call temp:= `getTimeZone`(v4) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L37cb62.  v9:= temp @kind object;
  #L37cb64.  call temp:= `getID`(v9) @signature `Ljava/util/TimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L37cb6a.  v10:= temp @kind object;
  #L37cb6c.  call temp:= `equals`(v10, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L37cb72.  v15:= temp;
  #L37cb74.  if v15 != 0 then goto L37cbdc;
  #L37cb78.  v15:= ":" @kind object;
  #L37cb7c.  v12:= "" @kind object;
  #L37cb80.  call temp:= `replace`(v10, v15, v12) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L37cb86.  v10:= temp @kind object;
  #L37cb88.  call temp:= `equals`(v10, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L37cb8e.  v10:= temp;
  #L37cb90.  if v10 == 0 then goto L37cb96;
  #L37cb94.  goto L37cbdc;
  #L37cb96.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L37cb9a.  v3:= new `java.lang.StringBuilder`;
  #L37cb9e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37cba4.  v5:= "Mismatching time zone indicator: " @kind object;
  #L37cba8.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37cbae.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37cbb4.  v4:= " given, resolves to " @kind object;
  #L37cbb8.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37cbbe.  call temp:= `getID`(v9) @signature `Ljava/util/TimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L37cbc4.  v4:= temp @kind object;
  #L37cbc6.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37cbcc.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37cbd2.  v3:= temp @kind object;
  #L37cbd4.  call `<init>`(v0, v3) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L37cbda.  throw v0;
  #L37cbdc.  v4:= v9 @kind object;
  #L37cbde.  goto L37cbe4;
  #L37cbe0.  v4:= `@@e.e.c.y.n.o.a.a` @type ^`java.util.TimeZone` @kind object;
  #L37cbe4.  v9:= new `java.util.GregorianCalendar`;
  #L37cbe8.  call `<init>`(v9, v4) @signature `Ljava/util/GregorianCalendar;.<init>:(Ljava/util/TimeZone;)V` @kind direct;
  #L37cbee.  v4:= 0I;
  #L37cbf0.  call `setLenient`(v9, v4) @signature `Ljava/util/Calendar;.setLenient:(Z)V` @kind virtual;
  #L37cbf6.  call `set`(v9, v8, v0) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L37cbfc.  v3:= v3 - v8 @kind int;
  #L37cbfe.  v0:= 2I;
  #L37cc00.  call `set`(v9, v0, v3) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L37cc06.  v0:= 5I;
  #L37cc08.  call `set`(v9, v0, v5) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L37cc0e.  v0:= 11I;
  #L37cc12.  call `set`(v9, v0, v6) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L37cc18.  v0:= 12I;
  #L37cc1c.  call `set`(v9, v0, v7) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L37cc22.  v0:= 13I;
  #L37cc26.  call `set`(v9, v0, v11) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L37cc2c.  v0:= 14I;
  #L37cc30.  call `set`(v9, v0, v13) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L37cc36.  call `setIndex`(v2, v14) @signature `Ljava/text/ParsePosition;.setIndex:(I)V` @kind virtual;
  #L37cc3c.  call temp:= `getTime`(v9) @signature `Ljava/util/Calendar;.getTime:()Ljava/util/Date;` @kind virtual;
  #L37cc42.  v0:= temp @kind object;
  #L37cc44.  return v0 @kind object;
  #L37cc46.  v0:= new `java.lang.IllegalArgumentException`;
  #L37cc4a.  v3:= "No time zone indicator" @kind object;
  #L37cc4e.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L37cc54.  throw v0;
  #L37cc56.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L37cc58.  goto L37cc60;
  #L37cc5a.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L37cc5c.  goto L37cc60;
  #L37cc5e.  v0:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L37cc60.  if v1 != 0 then goto L37cc68;
  #L37cc64.  v1:= 0I;
  #L37cc66.  goto L37cc90;
  #L37cc68.  v3:= new `java.lang.StringBuilder`;
  #L37cc6c.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37cc72.  v4:= 34I;
  #L37cc76.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L37cc7c.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37cc82.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L37cc88.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37cc8e.  v1:= temp @kind object;
  #L37cc90.  call temp:= `getMessage`(v0) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L37cc96.  v3:= temp @kind object;
  #L37cc98.  if v3 == 0 then goto L37cca8;
  #L37cc9c.  call temp:= `isEmpty`(v3) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L37cca2.  v4:= temp;
  #L37cca4.  if v4 == 0 then goto L37cce4;
  #L37cca8.  v3:= new `java.lang.StringBuilder`;
  #L37ccac.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37ccb2.  v4:= "(" @kind object;
  #L37ccb6.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37ccbc.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L37ccc2.  v4:= temp @kind object;
  #L37ccc4.  call temp:= `getName`(v4) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L37ccca.  v4:= temp @kind object;
  #L37cccc.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37ccd2.  v4:= ")" @kind object;
  #L37ccd6.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37ccdc.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37cce2.  v3:= temp @kind object;
  #L37cce4.  v4:= new `java.text.ParseException`;
  #L37cce8.  v5:= new `java.lang.StringBuilder`;
  #L37ccec.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37ccf2.  v6:= "Failed to parse date [" @kind object;
  #L37ccf6.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37ccfc.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37cd02.  v1:= "]: " @kind object;
  #L37cd06.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37cd0c.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37cd12.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37cd18.  v1:= temp @kind object;
  #L37cd1a.  call temp:= `getIndex`(v18) @signature `Ljava/text/ParsePosition;.getIndex:()I` @kind virtual;
  #L37cd20.  v2:= temp;
  #L37cd22.  call `<init>`(v4, v1, v2) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L37cd28.  call temp:= `initCause`(v4, v0) @signature `Ljava/text/ParseException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L37cd2e.  throw v4;
  catch `java.lang.IndexOutOfBoundsException` @[L37c8f0..L37cc56] goto L37cc5e;
  catch `java.lang.NumberFormatException` @[L37c8f0..L37cc56] goto L37cc5a;
  catch `java.lang.IllegalArgumentException` @[L37c8f0..L37cc56] goto L37cc56;
}
procedure `boolean` `a`(`java.lang.String` v1 @kind object, `int` v2 , `char` v3 ) @signature `Le/e/c/y/n/o/a;.a:(Ljava/lang/String;IC)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L37c784.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L37c78a.  v0:= temp;
  #L37c78c.  if v2 >= v0 then goto L37c7a0;
  #L37c790.  call temp:= `charAt`(v1, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L37c796.  v1:= temp;
  #L37c798.  if v1 != v3 then goto L37c7a0;
  #L37c79c.  v1:= 1I;
  #L37c79e.  goto L37c7a2;
  #L37c7a0.  v1:= 0I;
  #L37c7a2.  return v1;
}
