record `e.e.c.y.n.i` @kind class @AccessFlag PUBLIC_FINAL extends `e.e.c.w` @kind interface {
  `e.e.c.y.c` `e.e.c.y.n.i.b` @AccessFlag PRIVATE_FINAL;
  `e.e.c.e` `e.e.c.y.n.i.c` @AccessFlag PRIVATE_FINAL;
  `e.e.c.y.d` `e.e.c.y.n.i.d` @AccessFlag PRIVATE_FINAL;
  `e.e.c.y.n.d` `e.e.c.y.n.i.e` @AccessFlag PRIVATE_FINAL;
  `e.e.c.y.o.b` `e.e.c.y.n.i.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e.e.c.y.n.i` v1 @kind this, `e.e.c.y.c` v2 @kind object, `e.e.c.e` v3 @kind object, `e.e.c.y.d` v4 @kind object, `e.e.c.y.n.d` v5 @kind object) @signature `Le/e/c/y/n/i;.<init>:(Le/e/c/y/c;Le/e/c/e;Le/e/c/y/d;Le/e/c/y/n/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L379b28.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L379b2e.  call temp:= `a`() @signature `Le/e/c/y/o/b;.a:()Le/e/c/y/o/b;` @kind static;
  #L379b34.  v0:= temp @kind object;
  #L379b36.  v1.`e.e.c.y.n.i.f` @type ^`e.e.c.y.o.b` := v0 @kind object;
  #L379b3a.  v1.`e.e.c.y.n.i.b` @type ^`e.e.c.y.c` := v2 @kind object;
  #L379b3e.  v1.`e.e.c.y.n.i.c` @type ^`e.e.c.e` := v3 @kind object;
  #L379b42.  v1.`e.e.c.y.n.i.d` @type ^`e.e.c.y.d` := v4 @kind object;
  #L379b46.  v1.`e.e.c.y.n.i.e` @type ^`e.e.c.y.n.d` := v5 @kind object;
  #L379b4a.  return @kind void;
}
procedure `e.e.c.y.n.i$c` `a`(`e.e.c.y.n.i` v13 @kind this, `e.e.c.f` v14 @kind object, `java.lang.reflect.Field` v15 @kind object, `java.lang.String` v16 @kind object, `e.e.c.z.a` v17 @kind object, `boolean` v18 , `boolean` v19 ) @signature `Le/e/c/y/n/i;.a:(Le/e/c/f;Ljava/lang/reflect/Field;Ljava/lang/String;Le/e/c/z/a;ZZ)Le/e/c/y/n/i$c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L379854.  v11:= v13 @kind object;
  #L379856.  v8:= v14 @kind object;
  #L379858.  v9:= v17 @kind object;
  #L37985c.  call temp:= `a`(v17) @signature `Le/e/c/z/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L379862.  v0:= temp @kind object;
  #L379864.  call temp:= `a`(v0) @signature `Le/e/c/y/k;.a:(Ljava/lang/reflect/Type;)Z` @kind static;
  #L37986a.  v10:= temp;
  #L37986c.  v0:= constclass @type ^`e.e.c.x.b` @kind object;
  #L379870.  v5:= v15 @kind object;
  #L379872.  call temp:= `getAnnotation`(v15, v0) @signature `Ljava/lang/reflect/Field;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L379878.  v0:= temp @kind object;
  #L37987a.  v0:= (`e.e.c.x.b`) v0 @kind object;
  #L37987e.  if v0 == 0 then goto L379894;
  #L379882.  v1:= v11.`e.e.c.y.n.i.e` @type ^`e.e.c.y.n.d` @kind object;
  #L379886.  v2:= v11.`e.e.c.y.n.i.b` @type ^`e.e.c.y.c` @kind object;
  #L37988a.  call temp:= `a`(v1, v2, v14, v9, v0) @signature `Le/e/c/y/n/d;.a:(Le/e/c/y/c;Le/e/c/f;Le/e/c/z/a;Le/e/c/x/b;)Le/e/c/v;` @kind virtual;
  #L379890.  v0:= temp @kind object;
  #L379892.  goto L379896;
  #L379894.  v0:= 0I;
  #L379896.  if v0 == 0 then goto L3798a0;
  #L37989a.  v1:= 1I;
  #L37989c.  v6:= 1I;
  #L37989e.  goto L3798a4;
  #L3798a0.  v1:= 0I;
  #L3798a2.  v6:= 0I;
  #L3798a4.  if v0 != 0 then goto L3798b0;
  #L3798a8.  call temp:= `a`(v14, v9) @signature `Le/e/c/f;.a:(Le/e/c/z/a;)Le/e/c/v;` @kind virtual;
  #L3798ae.  v0:= temp @kind object;
  #L3798b0.  v7:= v0 @kind object;
  #L3798b2.  v12:= new `e.e.c.y.n.i$a`;
  #L3798b6.  v0:= v12 @kind object;
  #L3798b8.  v1:= v13 @kind object;
  #L3798ba.  v2:= v16 @kind object;
  #L3798be.  v3:= v18;
  #L3798c2.  v4:= v19;
  #L3798c6.  v5:= v15 @kind object;
  #L3798c8.  v8:= v14 @kind object;
  #L3798ca.  v9:= v17 @kind object;
  #L3798ce.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Le/e/c/y/n/i$a;.<init>:(Le/e/c/y/n/i;Ljava/lang/String;ZZLjava/lang/reflect/Field;ZLe/e/c/v;Le/e/c/f;Le/e/c/z/a;Z)V` @kind direct;
  #L3798d4.  return v12 @kind object;
}
procedure `java.util.List` `a`(`e.e.c.y.n.i` v4 @kind this, `java.lang.reflect.Field` v5 @kind object) @signature `Le/e/c/y/n/i;.a:(Ljava/lang/reflect/Field;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3798e8.  v0:= constclass @type ^`e.e.c.x.c` @kind object;
  #L3798ec.  call temp:= `getAnnotation`(v5, v0) @signature `Ljava/lang/reflect/Field;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L3798f2.  v0:= temp @kind object;
  #L3798f4.  v0:= (`e.e.c.x.c`) v0 @kind object;
  #L3798f8.  if v0 != 0 then goto L379912;
  #L3798fc.  v0:= v4.`e.e.c.y.n.i.c` @type ^`e.e.c.e` @kind object;
  #L379900.  call temp:= `a`(v0, v5) @signature `Le/e/c/e;.a:(Ljava/lang/reflect/Field;)Ljava/lang/String;` @kind interface;
  #L379906.  v5:= temp @kind object;
  #L379908.  call temp:= `singletonList`(v5) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L37990e.  v5:= temp @kind object;
  #L379910.  return v5 @kind object;
  #L379912.  call temp:= `value`(v0) @signature `Le/e/c/x/c;.value:()Ljava/lang/String;` @kind interface;
  #L379918.  v5:= temp @kind object;
  #L37991a.  call temp:= `alternate`(v0) @signature `Le/e/c/x/c;.alternate:()[Ljava/lang/String;` @kind interface;
  #L379920.  v0:= temp @kind object;
  #L379922.  v1:= length @variable v0;
  #L379924.  if v1 != 0 then goto L379932;
  #L379928.  call temp:= `singletonList`(v5) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L37992e.  v5:= temp @kind object;
  #L379930.  return v5 @kind object;
  #L379932.  v1:= new `java.util.ArrayList`;
  #L379936.  v2:= length @variable v0;
  #L379938.  v2:= v2 + 1;
  #L37993c.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L379942.  call temp:= `add`(v1, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L379948.  v5:= length @variable v0;
  #L37994a.  v2:= 0I;
  #L37994c.  if v2 >= v5 then goto L379960;
  #L379950.  v3:= v0[v2] @kind object;
  #L379954.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L37995a.  v2:= v2 + 1;
  #L37995e.  goto L37994c;
  #L379960.  return v1 @kind object;
}
procedure `java.util.Map` `a`(`e.e.c.y.n.i` v23 @kind this, `e.e.c.f` v24 @kind object, `e.e.c.z.a` v25 @kind object, `java.lang.Class` v26 @kind object) @signature `Le/e/c/y/n/i;.a:(Le/e/c/f;Le/e/c/z/a;Ljava/lang/Class;)Ljava/util/Map;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;

  #L379974.  v7:= v23 @kind object;
  #L379978.  v8:= new `java.util.LinkedHashMap`;
  #L37997c.  call `<init>`(v8) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L379982.  call temp:= `isInterface`(v26) @signature `Ljava/lang/Class;.isInterface:()Z` @kind virtual;
  #L379988.  v0:= temp;
  #L37998a.  if v0 == 0 then goto L379990;
  #L37998e.  return v8 @kind object;
  #L379990.  call temp:= `b`(v25) @signature `Le/e/c/z/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L379996.  v9:= temp @kind object;
  #L379998.  v11:= v25 @kind object;
  #L37999c.  v10:= v26 @kind object;
  #L3799a0.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L3799a4.  if v10 == v0 then goto L379b16;
  #L3799a8.  call temp:= `getDeclaredFields`(v10) @signature `Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;` @kind virtual;
  #L3799ae.  v12:= temp @kind object;
  #L3799b0.  v13:= length @variable v12;
  #L3799b2.  v14:= 0I;
  #L3799b4.  v15:= 0I;
  #L3799b6.  if v15 >= v13 then goto L379aea;
  #L3799ba.  v6:= v12[v15] @kind object;
  #L3799be.  v0:= 1I;
  #L3799c0.  call temp:= `a`(v7, v6, v0) @signature `Le/e/c/y/n/i;.a:(Ljava/lang/reflect/Field;Z)Z` @kind virtual;
  #L3799c6.  v0:= temp;
  #L3799c8.  call temp:= `a`(v7, v6, v14) @signature `Le/e/c/y/n/i;.a:(Ljava/lang/reflect/Field;Z)Z` @kind virtual;
  #L3799ce.  v16:= temp;
  #L3799d0.  if v0 != 0 then goto L3799dc;
  #L3799d4.  if v16 != 0 then goto L3799dc;
  #L3799d8.  goto L379aaa;
  #L3799dc.  v1:= v7.`e.e.c.y.n.i.f` @type ^`e.e.c.y.o.b` @kind object;
  #L3799e0.  call `a`(v1, v6) @signature `Le/e/c/y/o/b;.a:(Ljava/lang/reflect/AccessibleObject;)V` @kind virtual;
  #L3799e6.  call temp:= `b`(v11) @signature `Le/e/c/z/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L3799ec.  v1:= temp @kind object;
  #L3799ee.  call temp:= `getGenericType`(v6) @signature `Ljava/lang/reflect/Field;.getGenericType:()Ljava/lang/reflect/Type;` @kind virtual;
  #L3799f4.  v2:= temp @kind object;
  #L3799f6.  call temp:= `a`(v1, v10, v2) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L3799fc.  v17:= temp @kind object;
  #L3799fe.  call temp:= `a`(v7, v6) @signature `Le/e/c/y/n/i;.a:(Ljava/lang/reflect/Field;)Ljava/util/List;` @kind direct;
  #L379a04.  v5:= temp @kind object;
  #L379a06.  v1:= 0I;
  #L379a08.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L379a0e.  v4:= temp;
  #L379a10.  v2:= v1 @kind object;
  #L379a12.  v3:= 0I;
  #L379a14.  if v3 >= v4 then goto L379aa4;
  #L379a18.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L379a1e.  v1:= temp @kind object;
  #L379a20.  v1:= (`java.lang.String`) v1 @kind object;
  #L379a24.  if v3 == 0 then goto L379a2e;
  #L379a28.  v18:= 0I;
  #L379a2c.  goto L379a32;
  #L379a2e.  v18:= v0;
  #L379a32.  call temp:= `a`(v17) @signature `Le/e/c/z/a;.a:(Ljava/lang/reflect/Type;)Le/e/c/z/a;` @kind static;
  #L379a38.  v19:= temp @kind object;
  #L379a3a.  v0:= v23 @kind object;
  #L379a3e.  v25:= v1 @kind object;
  #L379a42.  v1:= v24 @kind object;
  #L379a46.  v14:= v2 @kind object;
  #L379a48.  v2:= v6 @kind object;
  #L379a4a.  v20:= v3;
  #L379a4e.  v3:= v25 @kind object;
  #L379a52.  v21:= v4;
  #L379a56.  v4:= v19 @kind object;
  #L379a5a.  v19:= v5 @kind object;
  #L379a5e.  v5:= v18;
  #L379a62.  v22:= v6 @kind object;
  #L379a66.  v6:= v16;
  #L379a6a.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Le/e/c/y/n/i;.a:(Le/e/c/f;Ljava/lang/reflect/Field;Ljava/lang/String;Le/e/c/z/a;ZZ)Le/e/c/y/n/i$c;` @kind direct;
  #L379a70.  v0:= temp @kind object;
  #L379a72.  v1:= v25 @kind object;
  #L379a76.  call temp:= `put`(v8, v1, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L379a7c.  v0:= temp @kind object;
  #L379a7e.  v0:= (`e.e.c.y.n.i$c`) v0 @kind object;
  #L379a82.  if v14 != 0 then goto L379a8a;
  #L379a86.  v2:= v0 @kind object;
  #L379a88.  goto L379a8c;
  #L379a8a.  v2:= v14 @kind object;
  #L379a8c.  v3:= v20 + 1;
  #L379a90.  v0:= v18;
  #L379a94.  v5:= v19 @kind object;
  #L379a98.  v4:= v21;
  #L379a9c.  v6:= v22 @kind object;
  #L379aa0.  v14:= 0I;
  #L379aa2.  goto L379a14;
  #L379aa4.  v14:= v2 @kind object;
  #L379aa6.  if v14 != 0 then goto L379ab2;
  #L379aaa.  v15:= v15 + 1;
  #L379aae.  v14:= 0I;
  #L379ab0.  goto L3799b6;
  #L379ab2.  v0:= new `java.lang.IllegalArgumentException`;
  #L379ab6.  v1:= new `java.lang.StringBuilder`;
  #L379aba.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L379ac0.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L379ac6.  v2:= " declares multiple JSON fields named " @kind object;
  #L379aca.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L379ad0.  v2:= v14.`e.e.c.y.n.i$c.a` @type ^`java.lang.String` @kind object;
  #L379ad4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L379ada.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L379ae0.  v1:= temp @kind object;
  #L379ae2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L379ae8.  throw v0;
  #L379aea.  call temp:= `b`(v11) @signature `Le/e/c/z/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L379af0.  v0:= temp @kind object;
  #L379af2.  call temp:= `getGenericSuperclass`(v10) @signature `Ljava/lang/Class;.getGenericSuperclass:()Ljava/lang/reflect/Type;` @kind virtual;
  #L379af8.  v1:= temp @kind object;
  #L379afa.  call temp:= `a`(v0, v10, v1) @signature `Le/e/c/y/b;.a:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L379b00.  v0:= temp @kind object;
  #L379b02.  call temp:= `a`(v0) @signature `Le/e/c/z/a;.a:(Ljava/lang/reflect/Type;)Le/e/c/z/a;` @kind static;
  #L379b08.  v11:= temp @kind object;
  #L379b0a.  call temp:= `a`(v11) @signature `Le/e/c/z/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L379b10.  v10:= temp @kind object;
  #L379b12.  goto L3799a0;
  #L379b16.  return v8 @kind object;
}
procedure `boolean` `a`(`java.lang.reflect.Field` v1 @kind object, `boolean` v2 , `e.e.c.y.d` v3 @kind object) @signature `Le/e/c/y/n/i;.a:(Ljava/lang/reflect/Field;ZLe/e/c/y/d;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L3797d0.  call temp:= `getType`(v1) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L3797d6.  v0:= temp @kind object;
  #L3797d8.  call temp:= `a`(v3, v0, v2) @signature `Le/e/c/y/d;.a:(Ljava/lang/Class;Z)Z` @kind virtual;
  #L3797de.  v0:= temp;
  #L3797e0.  if v0 != 0 then goto L3797f4;
  #L3797e4.  call temp:= `a`(v3, v1, v2) @signature `Le/e/c/y/d;.a:(Ljava/lang/reflect/Field;Z)Z` @kind virtual;
  #L3797ea.  v1:= temp;
  #L3797ec.  if v1 != 0 then goto L3797f4;
  #L3797f0.  v1:= 1I;
  #L3797f2.  goto L3797f6;
  #L3797f4.  v1:= 0I;
  #L3797f6.  return v1;
}
procedure `boolean` `a`(`e.e.c.y.n.i` v1 @kind this, `java.lang.reflect.Field` v2 @kind object, `boolean` v3 ) @signature `Le/e/c/y/n/i;.a:(Ljava/lang/reflect/Field;Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3797b0.  v0:= v1.`e.e.c.y.n.i.d` @type ^`e.e.c.y.d` @kind object;
  #L3797b4.  call temp:= `a`(v2, v3, v0) @signature `Le/e/c/y/n/i;.a:(Ljava/lang/reflect/Field;ZLe/e/c/y/d;)Z` @kind static;
  #L3797ba.  v2:= temp;
  #L3797bc.  return v2;
}
procedure `e.e.c.v` `create`(`e.e.c.y.n.i` v3 @kind this, `e.e.c.f` v4 @kind object, `e.e.c.z.a` v5 @kind object) @signature `Le/e/c/y/n/i;.create:(Le/e/c/f;Le/e/c/z/a;)Le/e/c/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L379808.  call temp:= `a`(v5) @signature `Le/e/c/z/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L37980e.  v0:= temp @kind object;
  #L379810.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L379814.  call temp:= `isAssignableFrom`(v1, v0) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L37981a.  v1:= temp;
  #L37981c.  if v1 != 0 then goto L379824;
  #L379820.  v4:= 0I;
  #L379822.  return v4 @kind object;
  #L379824.  v1:= v3.`e.e.c.y.n.i.b` @type ^`e.e.c.y.c` @kind object;
  #L379828.  call temp:= `a`(v1, v5) @signature `Le/e/c/y/c;.a:(Le/e/c/z/a;)Le/e/c/y/i;` @kind virtual;
  #L37982e.  v1:= temp @kind object;
  #L379830.  v2:= new `e.e.c.y.n.i$b`;
  #L379834.  call temp:= `a`(v3, v4, v5, v0) @signature `Le/e/c/y/n/i;.a:(Le/e/c/f;Le/e/c/z/a;Ljava/lang/Class;)Ljava/util/Map;` @kind direct;
  #L37983a.  v4:= temp @kind object;
  #L37983c.  call `<init>`(v2, v1, v4) @signature `Le/e/c/y/n/i$b;.<init>:(Le/e/c/y/i;Ljava/util/Map;)V` @kind direct;
  #L379842.  return v2 @kind object;
}
