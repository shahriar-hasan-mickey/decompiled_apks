record `e.e.c.y.n.n$a0$a` @kind class @AccessFlag  extends `e.e.c.v` @kind class {
  `java.lang.Class` `e.e.c.y.n.n$a0$a.a` @AccessFlag FINAL_SYNTHETIC;
  `e.e.c.y.n.n$a0` `e.e.c.y.n.n$a0$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.c.y.n.n$a0$a` v0 @kind this, `e.e.c.y.n.n$a0` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Le/e/c/y/n/n$a0$a;.<init>:(Le/e/c/y/n/n$a0;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L37ba44.  v0.`e.e.c.y.n.n$a0$a.b` @type ^`e.e.c.y.n.n$a0` := v1 @kind object;
  #L37ba48.  v0.`e.e.c.y.n.n$a0$a.a` @type ^`java.lang.Class` := v2 @kind object;
  #L37ba4c.  call `<init>`(v0) @signature `Le/e/c/v;.<init>:()V` @kind direct;
  #L37ba52.  return @kind void;
}
procedure `java.lang.Object` `a`(`e.e.c.y.n.n$a0$a` v3 @kind this, `e.e.c.a0.a` v4 @kind object) @signature `Le/e/c/y/n/n$a0$a;.a:(Le/e/c/a0/a;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L37b9b0.  v0:= v3.`e.e.c.y.n.n$a0$a.b` @type ^`e.e.c.y.n.n$a0` @kind object;
  #L37b9b4.  v0:= v0.`e.e.c.y.n.n$a0.c` @type ^`e.e.c.v` @kind object;
  #L37b9b8.  call temp:= `a`(v0, v4) @signature `Le/e/c/v;.a:(Le/e/c/a0/a;)Ljava/lang/Object;` @kind virtual;
  #L37b9be.  v4:= temp @kind object;
  #L37b9c0.  if v4 == 0 then goto L37ba30;
  #L37b9c4.  v0:= v3.`e.e.c.y.n.n$a0$a.a` @type ^`java.lang.Class` @kind object;
  #L37b9c8.  call temp:= `isInstance`(v0, v4) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L37b9ce.  v0:= temp;
  #L37b9d0.  if v0 == 0 then goto L37b9d6;
  #L37b9d4.  goto L37ba30;
  #L37b9d6.  v0:= new `e.e.c.t`;
  #L37b9da.  v1:= new `java.lang.StringBuilder`;
  #L37b9de.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37b9e4.  v2:= "Expected a " @kind object;
  #L37b9e8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37b9ee.  v2:= v3.`e.e.c.y.n.n$a0$a.a` @type ^`java.lang.Class` @kind object;
  #L37b9f2.  call temp:= `getName`(v2) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L37b9f8.  v2:= temp @kind object;
  #L37b9fa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37ba00.  v2:= " but was " @kind object;
  #L37ba04.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37ba0a.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L37ba10.  v4:= temp @kind object;
  #L37ba12.  call temp:= `getName`(v4) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L37ba18.  v4:= temp @kind object;
  #L37ba1a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37ba20.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37ba26.  v4:= temp @kind object;
  #L37ba28.  call `<init>`(v0, v4) @signature `Le/e/c/t;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L37ba2e.  throw v0;
  #L37ba30.  return v4 @kind object;
}
procedure `void` `a`(`e.e.c.y.n.n$a0$a` v1 @kind this, `e.e.c.a0.c` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Le/e/c/y/n/n$a0$a;.a:(Le/e/c/a0/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37ba64.  v0:= v1.`e.e.c.y.n.n$a0$a.b` @type ^`e.e.c.y.n.n$a0` @kind object;
  #L37ba68.  v0:= v0.`e.e.c.y.n.n$a0.c` @type ^`e.e.c.v` @kind object;
  #L37ba6c.  call `a`(v0, v2, v3) @signature `Le/e/c/v;.a:(Le/e/c/a0/c;Ljava/lang/Object;)V` @kind virtual;
  #L37ba72.  return @kind void;
}
