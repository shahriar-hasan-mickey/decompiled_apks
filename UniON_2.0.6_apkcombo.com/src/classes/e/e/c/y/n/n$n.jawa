record `e.e.c.y.n.n$n` @kind class @AccessFlag  extends `e.e.c.v` @kind class {
}
procedure `void` `<init>`(`e.e.c.y.n.n$n` v0 @kind this) @signature `Le/e/c/y/n/n$n;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L37abbc.  call `<init>`(v0) @signature `Le/e/c/v;.<init>:()V` @kind direct;
  #L37abc2.  return @kind void;
}
procedure `java.lang.Object` `a`(`e.e.c.y.n.n$n` v0 @kind this, `e.e.c.a0.a` v1 @kind object) @signature `Le/e/c/y/n/n$n;.a:(Le/e/c/a0/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L37ab30.  call temp:= `a`(v0, v1) @signature `Le/e/c/y/n/n$n;.a:(Le/e/c/a0/a;)Ljava/net/URI;` @kind virtual;
  #L37ab36.  v1:= temp @kind object;
  #L37ab38.  return v1 @kind object;
}
procedure `java.net.URI` `a`(`e.e.c.y.n.n$n` v3 @kind this, `e.e.c.a0.a` v4 @kind object) @signature `Le/e/c/y/n/n$n;.a:(Le/e/c/a0/a;)Ljava/net/URI;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L37ab4c.  call temp:= `A`(v4) @signature `Le/e/c/a0/a;.A:()Le/e/c/a0/b;` @kind virtual;
  #L37ab52.  v0:= temp @kind object;
  #L37ab54.  v1:= `@@e.e.c.a0.b.j` @type ^`e.e.c.a0.b` @kind object;
  #L37ab58.  v2:= 0I;
  #L37ab5a.  if v0 != v1 then goto L37ab66;
  #L37ab5e.  call `y`(v4) @signature `Le/e/c/a0/a;.y:()V` @kind virtual;
  #L37ab64.  return v2 @kind object;
  #L37ab66.  call temp:= `z`(v4) @signature `Le/e/c/a0/a;.z:()Ljava/lang/String;` @kind virtual;
  #L37ab6c.  v4:= temp @kind object;
  #L37ab6e.  v0:= "null" @kind object;
  #L37ab72.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L37ab78.  v0:= temp;
  #L37ab7a.  if v0 == 0 then goto L37ab80;
  #L37ab7e.  goto L37ab8a;
  #L37ab80.  v2:= new `java.net.URI`;
  #L37ab84.  call `<init>`(v2, v4) @signature `Ljava/net/URI;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L37ab8a.  return v2 @kind object;
  #L37ab8c.  v4:= Exception @type ^`java.net.URISyntaxException` @kind object;
  #L37ab8e.  v0:= new `e.e.c.m`;
  #L37ab92.  call `<init>`(v0, v4) @signature `Le/e/c/m;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L37ab98.  throw v0;
  catch `java.net.URISyntaxException` @[L37ab66..L37ab8a] goto L37ab8c;
}
procedure `void` `a`(`e.e.c.y.n.n$n` v0 @kind this, `e.e.c.a0.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Le/e/c/y/n/n$n;.a:(Le/e/c/a0/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L37abd4.  v2:= (`java.net.URI`) v2 @kind object;
  #L37abd8.  call `a`(v0, v1, v2) @signature `Le/e/c/y/n/n$n;.a:(Le/e/c/a0/c;Ljava/net/URI;)V` @kind virtual;
  #L37abde.  return @kind void;
}
procedure `void` `a`(`e.e.c.y.n.n$n` v0 @kind this, `e.e.c.a0.c` v1 @kind object, `java.net.URI` v2 @kind object) @signature `Le/e/c/y/n/n$n;.a:(Le/e/c/a0/c;Ljava/net/URI;)V` @AccessFlag PUBLIC {
    temp;

  #L37abf0.  if v2 != 0 then goto L37abf8;
  #L37abf4.  v2:= 0I;
  #L37abf6.  goto L37ac00;
  #L37abf8.  call temp:= `toASCIIString`(v2) @signature `Ljava/net/URI;.toASCIIString:()Ljava/lang/String;` @kind virtual;
  #L37abfe.  v2:= temp @kind object;
  #L37ac00.  call temp:= `d`(v1, v2) @signature `Le/e/c/a0/c;.d:(Ljava/lang/String;)Le/e/c/a0/c;` @kind virtual;
  #L37ac06.  return @kind void;
}
