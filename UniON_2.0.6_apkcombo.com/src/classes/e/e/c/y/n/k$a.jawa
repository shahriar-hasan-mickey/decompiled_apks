record `e.e.c.y.n.k$a` @kind class @AccessFlag  extends `e.e.c.w` @kind interface {
}
procedure `void` `<init>`(`e.e.c.y.n.k$a` v0 @kind this) @signature `Le/e/c/y/n/k$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L379d28.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L379d2e.  return @kind void;
}
procedure `e.e.c.v` `create`(`e.e.c.y.n.k$a` v0 @kind this, `e.e.c.f` v1 @kind object, `e.e.c.z.a` v2 @kind object) @signature `Le/e/c/y/n/k$a;.create:(Le/e/c/f;Le/e/c/z/a;)Le/e/c/v;` @AccessFlag PUBLIC {
    temp;

  #L379cf8.  call temp:= `a`(v2) @signature `Le/e/c/z/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L379cfe.  v1:= temp @kind object;
  #L379d00.  v2:= constclass @type ^`java.sql.Time` @kind object;
  #L379d04.  if v1 != v2 then goto L379d14;
  #L379d08.  v1:= new `e.e.c.y.n.k`;
  #L379d0c.  call `<init>`(v1) @signature `Le/e/c/y/n/k;.<init>:()V` @kind direct;
  #L379d12.  goto L379d16;
  #L379d14.  v1:= 0I;
  #L379d16.  return v1 @kind object;
}
