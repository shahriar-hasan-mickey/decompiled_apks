record `e.e.c.y.n.n$z` @kind class @AccessFlag  extends `e.e.c.w` @kind interface {
  `java.lang.Class` `e.e.c.y.n.n$z.b` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Class` `e.e.c.y.n.n$z.c` @AccessFlag FINAL_SYNTHETIC;
  `e.e.c.v` `e.e.c.y.n.n$z.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.c.y.n.n$z` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `e.e.c.v` v3 @kind object) @signature `Le/e/c/y/n/n$z;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Le/e/c/v;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L37b98c.  v0.`e.e.c.y.n.n$z.b` @type ^`java.lang.Class` := v1 @kind object;
  #L37b990.  v0.`e.e.c.y.n.n$z.c` @type ^`java.lang.Class` := v2 @kind object;
  #L37b994.  v0.`e.e.c.y.n.n$z.d` @type ^`e.e.c.v` := v3 @kind object;
  #L37b998.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L37b99e.  return @kind void;
}
procedure `e.e.c.v` `create`(`e.e.c.y.n.n$z` v0 @kind this, `e.e.c.f` v1 @kind object, `e.e.c.z.a` v2 @kind object) @signature `Le/e/c/y/n/n$z;.create:(Le/e/c/f;Le/e/c/z/a;)Le/e/c/v;` @AccessFlag PUBLIC {
    temp;

  #L37b8dc.  call temp:= `a`(v2) @signature `Le/e/c/z/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L37b8e2.  v1:= temp @kind object;
  #L37b8e4.  v2:= v0.`e.e.c.y.n.n$z.b` @type ^`java.lang.Class` @kind object;
  #L37b8e8.  if v1 == v2 then goto L37b8fa;
  #L37b8ec.  v2:= v0.`e.e.c.y.n.n$z.c` @type ^`java.lang.Class` @kind object;
  #L37b8f0.  if v1 != v2 then goto L37b8f6;
  #L37b8f4.  goto L37b8fa;
  #L37b8f6.  v1:= 0I;
  #L37b8f8.  goto L37b8fe;
  #L37b8fa.  v1:= v0.`e.e.c.y.n.n$z.d` @type ^`e.e.c.v` @kind object;
  #L37b8fe.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.c.y.n.n$z` v2 @kind this) @signature `Le/e/c/y/n/n$z;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L37b910.  v0:= new `java.lang.StringBuilder`;
  #L37b914.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37b91a.  v1:= "Factory[type=" @kind object;
  #L37b91e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37b924.  v1:= v2.`e.e.c.y.n.n$z.b` @type ^`java.lang.Class` @kind object;
  #L37b928.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L37b92e.  v1:= temp @kind object;
  #L37b930.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37b936.  v1:= "+" @kind object;
  #L37b93a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37b940.  v1:= v2.`e.e.c.y.n.n$z.c` @type ^`java.lang.Class` @kind object;
  #L37b944.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L37b94a.  v1:= temp @kind object;
  #L37b94c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37b952.  v1:= ",adapter=" @kind object;
  #L37b956.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37b95c.  v1:= v2.`e.e.c.y.n.n$z.d` @type ^`e.e.c.v` @kind object;
  #L37b960.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37b966.  v1:= "]" @kind object;
  #L37b96a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37b970.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37b976.  v0:= temp @kind object;
  #L37b978.  return v0 @kind object;
}
