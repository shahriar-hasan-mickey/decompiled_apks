record `e.e.c.y.n.n$e` @kind class @AccessFlag  extends `e.e.c.v` @kind class {
}
procedure `void` `<init>`(`e.e.c.y.n.n$e` v0 @kind this) @signature `Le/e/c/y/n/n$e;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L37a4ac.  call `<init>`(v0) @signature `Le/e/c/v;.<init>:()V` @kind direct;
  #L37a4b2.  return @kind void;
}
procedure `java.lang.Number` `a`(`e.e.c.y.n.n$e` v3 @kind this, `e.e.c.a0.a` v4 @kind object) @signature `Le/e/c/y/n/n$e;.a:(Le/e/c/a0/a;)Ljava/lang/Number;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L37a408.  call temp:= `A`(v4) @signature `Le/e/c/a0/a;.A:()Le/e/c/a0/b;` @kind virtual;
  #L37a40e.  v0:= temp @kind object;
  #L37a410.  v1:= `@@e.e.c.y.n.n$b0.a` @type ^`int`[] @kind object;
  #L37a414.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L37a41a.  v2:= temp;
  #L37a41c.  v1:= v1[v2];
  #L37a420.  v2:= 1I;
  #L37a422.  if v1 == v2 then goto L37a46a;
  #L37a426.  v2:= 3I;
  #L37a428.  if v1 == v2 then goto L37a46a;
  #L37a42c.  v2:= 4I;
  #L37a42e.  if v1 != v2 then goto L37a43c;
  #L37a432.  call `y`(v4) @signature `Le/e/c/a0/a;.y:()V` @kind virtual;
  #L37a438.  v4:= 0I;
  #L37a43a.  return v4 @kind object;
  #L37a43c.  v4:= new `e.e.c.t`;
  #L37a440.  v1:= new `java.lang.StringBuilder`;
  #L37a444.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37a44a.  v2:= "Expecting number, got: " @kind object;
  #L37a44e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37a454.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37a45a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37a460.  v0:= temp @kind object;
  #L37a462.  call `<init>`(v4, v0) @signature `Le/e/c/t;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L37a468.  throw v4;
  #L37a46a.  v0:= new `e.e.c.y.g`;
  #L37a46e.  call temp:= `z`(v4) @signature `Le/e/c/a0/a;.z:()Ljava/lang/String;` @kind virtual;
  #L37a474.  v4:= temp @kind object;
  #L37a476.  call `<init>`(v0, v4) @signature `Le/e/c/y/g;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L37a47c.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`e.e.c.y.n.n$e` v0 @kind this, `e.e.c.a0.a` v1 @kind object) @signature `Le/e/c/y/n/n$e;.a:(Le/e/c/a0/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L37a490.  call temp:= `a`(v0, v1) @signature `Le/e/c/y/n/n$e;.a:(Le/e/c/a0/a;)Ljava/lang/Number;` @kind virtual;
  #L37a496.  v1:= temp @kind object;
  #L37a498.  return v1 @kind object;
}
procedure `void` `a`(`e.e.c.y.n.n$e` v0 @kind this, `e.e.c.a0.c` v1 @kind object, `java.lang.Number` v2 @kind object) @signature `Le/e/c/y/n/n$e;.a:(Le/e/c/a0/c;Ljava/lang/Number;)V` @AccessFlag PUBLIC {
    temp;

  #L37a4c4.  call temp:= `a`(v1, v2) @signature `Le/e/c/a0/c;.a:(Ljava/lang/Number;)Le/e/c/a0/c;` @kind virtual;
  #L37a4ca.  return @kind void;
}
procedure `void` `a`(`e.e.c.y.n.n$e` v0 @kind this, `e.e.c.a0.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Le/e/c/y/n/n$e;.a:(Le/e/c/a0/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L37a4dc.  v2:= (`java.lang.Number`) v2 @kind object;
  #L37a4e0.  call `a`(v0, v1, v2) @signature `Le/e/c/y/n/n$e;.a:(Le/e/c/a0/c;Ljava/lang/Number;)V` @kind virtual;
  #L37a4e6.  return @kind void;
}
