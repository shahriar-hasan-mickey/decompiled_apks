record `e.e.c.y.n.e$a` @kind class @AccessFlag  extends `java.io.Reader` @kind class {
}
procedure `void` `<init>`(`e.e.c.y.n.e$a` v0 @kind this) @signature `Le/e/c/y/n/e$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L377e08.  call `<init>`(v0) @signature `Ljava/io/Reader;.<init>:()V` @kind direct;
  #L377e0e.  return @kind void;
}
procedure `void` `close`(`e.e.c.y.n.e$a` v1 @kind this) @signature `Le/e/c/y/n/e$a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L377e20.  v0:= new `java.lang.AssertionError`;
  #L377e24.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L377e2a.  throw v0;
}
procedure `int` `read`(`e.e.c.y.n.e$a` v0 @kind this, `char`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Le/e/c/y/n/e$a;.read:([CII)I` @AccessFlag PUBLIC {
    temp;

  #L377dec.  v1:= new `java.lang.AssertionError`;
  #L377df0.  call `<init>`(v1) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L377df6.  throw v1;
}
