record `e.e.c.y.n.n$v` @kind class @AccessFlag  extends `e.e.c.v` @kind class {
}
procedure `void` `<init>`(`e.e.c.y.n.n$v` v0 @kind this) @signature `Le/e/c/y/n/n$v;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L37b674.  call `<init>`(v0) @signature `Le/e/c/v;.<init>:()V` @kind direct;
  #L37b67a.  return @kind void;
}
procedure `java.lang.Object` `a`(`e.e.c.y.n.n$v` v0 @kind this, `e.e.c.a0.a` v1 @kind object) @signature `Le/e/c/y/n/n$v;.a:(Le/e/c/a0/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L37b544.  call temp:= `a`(v0, v1) @signature `Le/e/c/y/n/n$v;.a:(Le/e/c/a0/a;)Ljava/util/BitSet;` @kind virtual;
  #L37b54a.  v1:= temp @kind object;
  #L37b54c.  return v1 @kind object;
}
procedure `java.util.BitSet` `a`(`e.e.c.y.n.n$v` v7 @kind this, `e.e.c.a0.a` v8 @kind object) @signature `Le/e/c/y/n/n$v;.a:(Le/e/c/a0/a;)Ljava/util/BitSet;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L37b560.  v0:= new `java.util.BitSet`;
  #L37b564.  call `<init>`(v0) @signature `Ljava/util/BitSet;.<init>:()V` @kind direct;
  #L37b56a.  call `k`(v8) @signature `Le/e/c/a0/a;.k:()V` @kind virtual;
  #L37b570.  call temp:= `A`(v8) @signature `Le/e/c/a0/a;.A:()Le/e/c/a0/b;` @kind virtual;
  #L37b576.  v1:= temp @kind object;
  #L37b578.  v2:= 0I;
  #L37b57a.  v3:= 0I;
  #L37b57c.  v4:= `@@e.e.c.a0.b.c` @type ^`e.e.c.a0.b` @kind object;
  #L37b580.  if v1 == v4 then goto L37b64a;
  #L37b584.  v4:= `@@e.e.c.y.n.n$b0.a` @type ^`int`[] @kind object;
  #L37b588.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L37b58e.  v5:= temp;
  #L37b590.  v4:= v4[v5];
  #L37b594.  v5:= 1I;
  #L37b596.  if v4 == v5 then goto L37b626;
  #L37b59a.  v6:= 2I;
  #L37b59c.  if v4 == v6 then goto L37b61c;
  #L37b5a0.  v6:= 3I;
  #L37b5a2.  if v4 != v6 then goto L37b5ee;
  #L37b5a6.  call temp:= `z`(v8) @signature `Le/e/c/a0/a;.z:()Ljava/lang/String;` @kind virtual;
  #L37b5ac.  v1:= temp @kind object;
  #L37b5ae.  call temp:= `parseInt`(v1) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L37b5b4.  v1:= temp;
  #L37b5b6.  if v1 == 0 then goto L37b5bc;
  #L37b5ba.  goto L37b632;
  #L37b5bc.  v5:= 0I;
  #L37b5be.  goto L37b632;
  #L37b5c0.  v8:= new `e.e.c.t`;
  #L37b5c4.  v0:= new `java.lang.StringBuilder`;
  #L37b5c8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37b5ce.  v2:= "Error: Expecting: bitset number value (1, 0), Found: " @kind object;
  #L37b5d2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37b5d8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37b5de.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37b5e4.  v0:= temp @kind object;
  #L37b5e6.  call `<init>`(v8, v0) @signature `Le/e/c/t;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L37b5ec.  throw v8;
  #L37b5ee.  v8:= new `e.e.c.t`;
  #L37b5f2.  v0:= new `java.lang.StringBuilder`;
  #L37b5f6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37b5fc.  v2:= "Invalid bitset value type: " @kind object;
  #L37b600.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37b606.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37b60c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37b612.  v0:= temp @kind object;
  #L37b614.  call `<init>`(v8, v0) @signature `Le/e/c/t;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L37b61a.  throw v8;
  #L37b61c.  call temp:= `t`(v8) @signature `Le/e/c/a0/a;.t:()Z` @kind virtual;
  #L37b622.  v5:= temp;
  #L37b624.  goto L37b632;
  #L37b626.  call temp:= `v`(v8) @signature `Le/e/c/a0/a;.v:()I` @kind virtual;
  #L37b62c.  v1:= temp;
  #L37b62e.  if v1 == 0 then goto L37b5bc;
  #L37b632.  if v5 == 0 then goto L37b63c;
  #L37b636.  call `set`(v0, v3) @signature `Ljava/util/BitSet;.set:(I)V` @kind virtual;
  #L37b63c.  v3:= v3 + 1;
  #L37b640.  call temp:= `A`(v8) @signature `Le/e/c/a0/a;.A:()Le/e/c/a0/b;` @kind virtual;
  #L37b646.  v1:= temp @kind object;
  #L37b648.  goto L37b57c;
  #L37b64a.  call `n`(v8) @signature `Le/e/c/a0/a;.n:()V` @kind virtual;
  #L37b650.  return v0 @kind object;
  catch `java.lang.NumberFormatException` @[L37b5ae..L37b5b6] goto L37b5c0;
}
procedure `void` `a`(`e.e.c.y.n.n$v` v0 @kind this, `e.e.c.a0.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Le/e/c/y/n/n$v;.a:(Le/e/c/a0/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L37b68c.  v2:= (`java.util.BitSet`) v2 @kind object;
  #L37b690.  call `a`(v0, v1, v2) @signature `Le/e/c/y/n/n$v;.a:(Le/e/c/a0/c;Ljava/util/BitSet;)V` @kind virtual;
  #L37b696.  return @kind void;
}
procedure `void` `a`(`e.e.c.y.n.n$v` v4 @kind this, `e.e.c.a0.c` v5 @kind object, `java.util.BitSet` v6 @kind object) @signature `Le/e/c/y/n/n$v;.a:(Le/e/c/a0/c;Ljava/util/BitSet;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L37b6a8.  call temp:= `k`(v5) @signature `Le/e/c/a0/c;.k:()Le/e/c/a0/c;` @kind virtual;
  #L37b6ae.  call temp:= `length`(v6) @signature `Ljava/util/BitSet;.length:()I` @kind virtual;
  #L37b6b4.  v0:= temp;
  #L37b6b6.  v1:= 0I;
  #L37b6b8.  if v1 >= v0 then goto L37b6d2;
  #L37b6bc.  call temp:= `get`(v6, v1) @signature `Ljava/util/BitSet;.get:(I)Z` @kind virtual;
  #L37b6c2.  v2:= temp;
  #L37b6c4.  v2:= (`long`) v2 @kind i2l;
  #L37b6c6.  call temp:= `f`(v5, v2) @signature `Le/e/c/a0/c;.f:(J)Le/e/c/a0/c;` @kind virtual;
  #L37b6cc.  v1:= v1 + 1;
  #L37b6d0.  goto L37b6b8;
  #L37b6d2.  call temp:= `m`(v5) @signature `Le/e/c/a0/c;.m:()Le/e/c/a0/c;` @kind virtual;
  #L37b6d8.  return @kind void;
}
