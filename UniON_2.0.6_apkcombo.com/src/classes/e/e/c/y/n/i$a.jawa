record `e.e.c.y.n.i$a` @kind class @AccessFlag  extends `e.e.c.y.n.i$c` @kind class {
  `java.lang.reflect.Field` `e.e.c.y.n.i$a.d` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `e.e.c.y.n.i$a.e` @AccessFlag FINAL_SYNTHETIC;
  `e.e.c.v` `e.e.c.y.n.i$a.f` @AccessFlag FINAL_SYNTHETIC;
  `e.e.c.f` `e.e.c.y.n.i$a.g` @AccessFlag FINAL_SYNTHETIC;
  `e.e.c.z.a` `e.e.c.y.n.i$a.h` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `e.e.c.y.n.i$a.i` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`e.e.c.y.n.i$a` v0 @kind this, `e.e.c.y.n.i` v1 @kind object, `java.lang.String` v2 @kind object, `boolean` v3 , `boolean` v4 , `java.lang.reflect.Field` v5 @kind object, `boolean` v6 , `e.e.c.v` v7 @kind object, `e.e.c.f` v8 @kind object, `e.e.c.z.a` v9 @kind object, `boolean` v10 ) @signature `Le/e/c/y/n/i$a;.<init>:(Le/e/c/y/n/i;Ljava/lang/String;ZZLjava/lang/reflect/Field;ZLe/e/c/v;Le/e/c/f;Le/e/c/z/a;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L379570.  v0.`e.e.c.y.n.i$a.d` @type ^`java.lang.reflect.Field` := v5 @kind object;
  #L379574.  v0.`e.e.c.y.n.i$a.e` @type ^`boolean` := v6 @kind boolean;
  #L379578.  v0.`e.e.c.y.n.i$a.f` @type ^`e.e.c.v` := v7 @kind object;
  #L37957c.  v0.`e.e.c.y.n.i$a.g` @type ^`e.e.c.f` := v8 @kind object;
  #L379580.  v0.`e.e.c.y.n.i$a.h` @type ^`e.e.c.z.a` := v9 @kind object;
  #L379584.  v0.`e.e.c.y.n.i$a.i` @type ^`boolean` := v10 @kind boolean;
  #L379588.  call `<init>`(v0, v2, v3, v4) @signature `Le/e/c/y/n/i$c;.<init>:(Ljava/lang/String;ZZ)V` @kind direct;
  #L37958e.  return @kind void;
}
procedure `void` `a`(`e.e.c.y.n.i$a` v1 @kind this, `e.e.c.a0.a` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Le/e/c/y/n/i$a;.a:(Le/e/c/a0/a;Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;

  #L3795a0.  v0:= v1.`e.e.c.y.n.i$a.f` @type ^`e.e.c.v` @kind object;
  #L3795a4.  call temp:= `a`(v0, v2) @signature `Le/e/c/v;.a:(Le/e/c/a0/a;)Ljava/lang/Object;` @kind virtual;
  #L3795aa.  v2:= temp @kind object;
  #L3795ac.  if v2 != 0 then goto L3795b8;
  #L3795b0.  v0:= v1.`e.e.c.y.n.i$a.i` @type ^`boolean` @kind boolean;
  #L3795b4.  if v0 != 0 then goto L3795c2;
  #L3795b8.  v0:= v1.`e.e.c.y.n.i$a.d` @type ^`java.lang.reflect.Field` @kind object;
  #L3795bc.  call `set`(v0, v3, v2) @signature `Ljava/lang/reflect/Field;.set:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L3795c2.  return @kind void;
}
procedure `void` `a`(`e.e.c.y.n.i$a` v4 @kind this, `e.e.c.a0.c` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Le/e/c/y/n/i$a;.a:(Le/e/c/a0/c;Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3795d4.  v0:= v4.`e.e.c.y.n.i$a.d` @type ^`java.lang.reflect.Field` @kind object;
  #L3795d8.  call temp:= `get`(v0, v6) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3795de.  v6:= temp @kind object;
  #L3795e0.  v0:= v4.`e.e.c.y.n.i$a.e` @type ^`boolean` @kind boolean;
  #L3795e4.  if v0 == 0 then goto L3795ee;
  #L3795e8.  v0:= v4.`e.e.c.y.n.i$a.f` @type ^`e.e.c.v` @kind object;
  #L3795ec.  goto L37960c;
  #L3795ee.  v0:= new `e.e.c.y.n.m`;
  #L3795f2.  v1:= v4.`e.e.c.y.n.i$a.g` @type ^`e.e.c.f` @kind object;
  #L3795f6.  v2:= v4.`e.e.c.y.n.i$a.f` @type ^`e.e.c.v` @kind object;
  #L3795fa.  v3:= v4.`e.e.c.y.n.i$a.h` @type ^`e.e.c.z.a` @kind object;
  #L3795fe.  call temp:= `b`(v3) @signature `Le/e/c/z/a;.b:()Ljava/lang/reflect/Type;` @kind virtual;
  #L379604.  v3:= temp @kind object;
  #L379606.  call `<init>`(v0, v1, v2, v3) @signature `Le/e/c/y/n/m;.<init>:(Le/e/c/f;Le/e/c/v;Ljava/lang/reflect/Type;)V` @kind direct;
  #L37960c.  call `a`(v0, v5, v6) @signature `Le/e/c/v;.a:(Le/e/c/a0/c;Ljava/lang/Object;)V` @kind virtual;
  #L379612.  return @kind void;
}
procedure `boolean` `a`(`e.e.c.y.n.i$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Le/e/c/y/n/i$a;.a:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L379540.  v0:= v2.`e.e.c.y.n.i$c.b` @type ^`boolean` @kind boolean;
  #L379544.  v1:= 0I;
  #L379546.  if v0 != 0 then goto L37954c;
  #L37954a.  return v1;
  #L37954c.  v0:= v2.`e.e.c.y.n.i$a.d` @type ^`java.lang.reflect.Field` @kind object;
  #L379550.  call temp:= `get`(v0, v3) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L379556.  v0:= temp @kind object;
  #L379558.  if v0 == v3 then goto L37955e;
  #L37955c.  v1:= 1I;
  #L37955e.  return v1;
}
