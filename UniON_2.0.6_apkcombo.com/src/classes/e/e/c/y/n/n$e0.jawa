record `e.e.c.y.n.n$e0` @kind class @AccessFlag  extends `e.e.c.v` @kind class {
}
procedure `void` `<init>`(`e.e.c.y.n.n$e0` v0 @kind this) @signature `Le/e/c/y/n/n$e0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L37beb8.  call `<init>`(v0) @signature `Le/e/c/v;.<init>:()V` @kind direct;
  #L37bebe.  return @kind void;
}
procedure `java.lang.Number` `a`(`e.e.c.y.n.n$e0` v2 @kind this, `e.e.c.a0.a` v3 @kind object) @signature `Le/e/c/y/n/n$e0;.a:(Le/e/c/a0/a;)Ljava/lang/Number;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L37be40.  call temp:= `A`(v3) @signature `Le/e/c/a0/a;.A:()Le/e/c/a0/b;` @kind virtual;
  #L37be46.  v0:= temp @kind object;
  #L37be48.  v1:= `@@e.e.c.a0.b.j` @type ^`e.e.c.a0.b` @kind object;
  #L37be4c.  if v0 != v1 then goto L37be5a;
  #L37be50.  call `y`(v3) @signature `Le/e/c/a0/a;.y:()V` @kind virtual;
  #L37be56.  v3:= 0I;
  #L37be58.  return v3 @kind object;
  #L37be5a.  call temp:= `v`(v3) @signature `Le/e/c/a0/a;.v:()I` @kind virtual;
  #L37be60.  v3:= temp;
  #L37be62.  v3:= (`byte`) v3 @kind i2b;
  #L37be64.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L37be6a.  v3:= temp @kind object;
  #L37be6c.  return v3 @kind object;
  #L37be6e.  v3:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L37be70.  v0:= new `e.e.c.t`;
  #L37be74.  call `<init>`(v0, v3) @signature `Le/e/c/t;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L37be7a.  throw v0;
  catch `java.lang.NumberFormatException` @[L37be5a..L37be6c] goto L37be6e;
}
procedure `java.lang.Object` `a`(`e.e.c.y.n.n$e0` v0 @kind this, `e.e.c.a0.a` v1 @kind object) @signature `Le/e/c/y/n/n$e0;.a:(Le/e/c/a0/a;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L37be9c.  call temp:= `a`(v0, v1) @signature `Le/e/c/y/n/n$e0;.a:(Le/e/c/a0/a;)Ljava/lang/Number;` @kind virtual;
  #L37bea2.  v1:= temp @kind object;
  #L37bea4.  return v1 @kind object;
}
procedure `void` `a`(`e.e.c.y.n.n$e0` v0 @kind this, `e.e.c.a0.c` v1 @kind object, `java.lang.Number` v2 @kind object) @signature `Le/e/c/y/n/n$e0;.a:(Le/e/c/a0/c;Ljava/lang/Number;)V` @AccessFlag PUBLIC {
    temp;

  #L37bed0.  call temp:= `a`(v1, v2) @signature `Le/e/c/a0/c;.a:(Ljava/lang/Number;)Le/e/c/a0/c;` @kind virtual;
  #L37bed6.  return @kind void;
}
procedure `void` `a`(`e.e.c.y.n.n$e0` v0 @kind this, `e.e.c.a0.c` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Le/e/c/y/n/n$e0;.a:(Le/e/c/a0/c;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L37bee8.  v2:= (`java.lang.Number`) v2 @kind object;
  #L37beec.  call `a`(v0, v1, v2) @signature `Le/e/c/y/n/n$e0;.a:(Le/e/c/a0/c;Ljava/lang/Number;)V` @kind virtual;
  #L37bef2.  return @kind void;
}
