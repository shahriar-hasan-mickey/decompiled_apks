record `e.e.c.y.n.n$w` @kind class @AccessFlag  extends `e.e.c.w` @kind interface {
}
procedure `void` `<init>`(`e.e.c.y.n.n$w` v0 @kind this) @signature `Le/e/c/y/n/n$w;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L37b744.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L37b74a.  return @kind void;
}
procedure `e.e.c.v` `create`(`e.e.c.y.n.n$w` v0 @kind this, `e.e.c.f` v1 @kind object, `e.e.c.z.a` v2 @kind object) @signature `Le/e/c/y/n/n$w;.create:(Le/e/c/f;Le/e/c/z/a;)Le/e/c/v;` @AccessFlag PUBLIC {
    temp;

  #L37b6ec.  call temp:= `a`(v2) @signature `Le/e/c/z/a;.a:()Ljava/lang/Class;` @kind virtual;
  #L37b6f2.  v1:= temp @kind object;
  #L37b6f4.  v2:= constclass @type ^`java.lang.Enum` @kind object;
  #L37b6f8.  call temp:= `isAssignableFrom`(v2, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L37b6fe.  v2:= temp;
  #L37b700.  if v2 == 0 then goto L37b72e;
  #L37b704.  v2:= constclass @type ^`java.lang.Enum` @kind object;
  #L37b708.  if v1 != v2 then goto L37b70e;
  #L37b70c.  goto L37b72e;
  #L37b70e.  call temp:= `isEnum`(v1) @signature `Ljava/lang/Class;.isEnum:()Z` @kind virtual;
  #L37b714.  v2:= temp;
  #L37b716.  if v2 != 0 then goto L37b722;
  #L37b71a.  call temp:= `getSuperclass`(v1) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L37b720.  v1:= temp @kind object;
  #L37b722.  v2:= new `e.e.c.y.n.n$j0`;
  #L37b726.  call `<init>`(v2, v1) @signature `Le/e/c/y/n/n$j0;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L37b72c.  return v2 @kind object;
  #L37b72e.  v1:= 0I;
  #L37b730.  return v1 @kind object;
}
