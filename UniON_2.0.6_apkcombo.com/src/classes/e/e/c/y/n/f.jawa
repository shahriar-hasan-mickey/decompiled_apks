record `e.e.c.y.n.f` @kind class @AccessFlag PUBLIC_FINAL extends `e.e.c.a0.c` @kind class {
  `java.util.List` `e.e.c.y.n.f.m` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `e.e.c.y.n.f.n` @AccessFlag PRIVATE;
  `e.e.c.l` `e.e.c.y.n.f.o` @AccessFlag PRIVATE;
}
global `java.io.Writer` `@@e.e.c.y.n.f.p` @AccessFlag PRIVATE_STATIC_FINAL;
global `e.e.c.q` `@@e.e.c.y.n.f.q` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/c/y/n/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L378c38.  v0:= new `e.e.c.y.n.f$a`;
  #L378c3c.  call `<init>`(v0) @signature `Le/e/c/y/n/f$a;.<init>:()V` @kind direct;
  #L378c42.  `@@e.e.c.y.n.f.p` @type ^`java.io.Writer` := v0 @kind object;
  #L378c46.  v0:= new `e.e.c.q`;
  #L378c4a.  v1:= "closed" @kind object;
  #L378c4e.  call `<init>`(v0, v1) @signature `Le/e/c/q;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L378c54.  `@@e.e.c.y.n.f.q` @type ^`e.e.c.q` := v0 @kind object;
  #L378c58.  return @kind void;
}
procedure `void` `<init>`(`e.e.c.y.n.f` v1 @kind this) @signature `Le/e/c/y/n/f;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L378c6c.  v0:= `@@e.e.c.y.n.f.p` @type ^`java.io.Writer` @kind object;
  #L378c70.  call `<init>`(v1, v0) @signature `Le/e/c/a0/c;.<init>:(Ljava/io/Writer;)V` @kind direct;
  #L378c76.  v0:= new `java.util.ArrayList`;
  #L378c7a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L378c80.  v1.`e.e.c.y.n.f.m` @type ^`java.util.List` := v0 @kind object;
  #L378c84.  v0:= `@@e.e.c.n.a` @type ^`e.e.c.n` @kind object;
  #L378c88.  v1.`e.e.c.y.n.f.o` @type ^`e.e.c.l` := v0 @kind object;
  #L378c8c.  return @kind void;
}
procedure `void` `a`(`e.e.c.y.n.f` v2 @kind this, `e.e.c.l` v3 @kind object) @signature `Le/e/c/y/n/f;.a:(Le/e/c/l;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L378cf4.  v0:= v2.`e.e.c.y.n.f.n` @type ^`java.lang.String` @kind object;
  #L378cf8.  if v0 == 0 then goto L378d32;
  #L378cfc.  call temp:= `k`(v3) @signature `Le/e/c/l;.k:()Z` @kind virtual;
  #L378d02.  v0:= temp;
  #L378d04.  if v0 == 0 then goto L378d14;
  #L378d08.  call temp:= `o`(v2) @signature `Le/e/c/a0/c;.o:()Z` @kind virtual;
  #L378d0e.  v0:= temp;
  #L378d10.  if v0 == 0 then goto L378d2a;
  #L378d14.  call temp:= `t`(v2) @signature `Le/e/c/y/n/f;.t:()Le/e/c/l;` @kind direct;
  #L378d1a.  v0:= temp @kind object;
  #L378d1c.  v0:= (`e.e.c.o`) v0 @kind object;
  #L378d20.  v1:= v2.`e.e.c.y.n.f.n` @type ^`java.lang.String` @kind object;
  #L378d24.  call `a`(v0, v1, v3) @signature `Le/e/c/o;.a:(Ljava/lang/String;Le/e/c/l;)V` @kind virtual;
  #L378d2a.  v3:= 0I;
  #L378d2c.  v2.`e.e.c.y.n.f.n` @type ^`java.lang.String` := v3 @kind object;
  #L378d30.  goto L378d62;
  #L378d32.  v0:= v2.`e.e.c.y.n.f.m` @type ^`java.util.List` @kind object;
  #L378d36.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L378d3c.  v0:= temp;
  #L378d3e.  if v0 == 0 then goto L378d48;
  #L378d42.  v2.`e.e.c.y.n.f.o` @type ^`e.e.c.l` := v3 @kind object;
  #L378d46.  goto L378d62;
  #L378d48.  call temp:= `t`(v2) @signature `Le/e/c/y/n/f;.t:()Le/e/c/l;` @kind direct;
  #L378d4e.  v0:= temp @kind object;
  #L378d50.  v1:= instanceof @variable v0 @type ^`e.e.c.i` @kind boolean;
  #L378d54.  if v1 == 0 then goto L378d64;
  #L378d58.  v0:= (`e.e.c.i`) v0 @kind object;
  #L378d5c.  call `a`(v0, v3) @signature `Le/e/c/i;.a:(Le/e/c/l;)V` @kind virtual;
  #L378d62.  return @kind void;
  #L378d64.  v3:= new `java.lang.IllegalStateException`;
  #L378d68.  call `<init>`(v3) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L378d6e.  throw v3;
}
procedure `e.e.c.l` `t`(`e.e.c.y.n.f` v2 @kind this) @signature `Le/e/c/y/n/f;.t:()Le/e/c/l;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L378928.  v0:= v2.`e.e.c.y.n.f.m` @type ^`java.util.List` @kind object;
  #L37892c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L378932.  v1:= temp;
  #L378934.  v1:= v1 + -1;
  #L378938.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L37893e.  v0:= temp @kind object;
  #L378940.  v0:= (`e.e.c.l`) v0 @kind object;
  #L378944.  return v0 @kind object;
}
procedure `e.e.c.a0.c` `a`(`e.e.c.y.n.f` v1 @kind this, `java.lang.Boolean` v2 @kind object) @signature `Le/e/c/y/n/f;.a:(Ljava/lang/Boolean;)Le/e/c/a0/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L378b20.  if v2 != 0 then goto L378b2c;
  #L378b24.  call temp:= `r`(v1) @signature `Le/e/c/y/n/f;.r:()Le/e/c/a0/c;` @kind virtual;
  #L378b2a.  return v1 @kind object;
  #L378b2c.  v0:= new `e.e.c.q`;
  #L378b30.  call `<init>`(v0, v2) @signature `Le/e/c/q;.<init>:(Ljava/lang/Boolean;)V` @kind direct;
  #L378b36.  call `a`(v1, v0) @signature `Le/e/c/y/n/f;.a:(Le/e/c/l;)V` @kind direct;
  #L378b3c.  return v1 @kind object;
}
procedure `e.e.c.a0.c` `a`(`e.e.c.y.n.f` v3 @kind this, `java.lang.Number` v4 @kind object) @signature `Le/e/c/y/n/f;.a:(Ljava/lang/Number;)Le/e/c/a0/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L378b50.  if v4 != 0 then goto L378b5c;
  #L378b54.  call temp:= `r`(v3) @signature `Le/e/c/y/n/f;.r:()Le/e/c/a0/c;` @kind virtual;
  #L378b5a.  return v3 @kind object;
  #L378b5c.  call temp:= `q`(v3) @signature `Le/e/c/a0/c;.q:()Z` @kind virtual;
  #L378b62.  v0:= temp;
  #L378b64.  if v0 != 0 then goto L378bb8;
  #L378b68.  call temp:= `doubleValue`(v4) @signature `Ljava/lang/Number;.doubleValue:()D` @kind virtual;
  #L378b6e.  v0:= temp @kind wide;
  #L378b70.  call temp:= `isNaN`(v0) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L378b76.  v2:= temp;
  #L378b78.  if v2 != 0 then goto L378b8a;
  #L378b7c.  call temp:= `isInfinite`(v0) @signature `Ljava/lang/Double;.isInfinite:(D)Z` @kind static;
  #L378b82.  v0:= temp;
  #L378b84.  if v0 != 0 then goto L378b8a;
  #L378b88.  goto L378bb8;
  #L378b8a.  v0:= new `java.lang.IllegalArgumentException`;
  #L378b8e.  v1:= new `java.lang.StringBuilder`;
  #L378b92.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L378b98.  v2:= "JSON forbids NaN and infinities: " @kind object;
  #L378b9c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L378ba2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L378ba8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L378bae.  v4:= temp @kind object;
  #L378bb0.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L378bb6.  throw v0;
  #L378bb8.  v0:= new `e.e.c.q`;
  #L378bbc.  call `<init>`(v0, v4) @signature `Le/e/c/q;.<init>:(Ljava/lang/Number;)V` @kind direct;
  #L378bc2.  call `a`(v3, v0) @signature `Le/e/c/y/n/f;.a:(Le/e/c/l;)V` @kind direct;
  #L378bc8.  return v3 @kind object;
}
procedure `e.e.c.a0.c` `b`(`e.e.c.y.n.f` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le/e/c/y/n/f;.b:(Ljava/lang/String;)Le/e/c/a0/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L378a80.  v0:= v1.`e.e.c.y.n.f.m` @type ^`java.util.List` @kind object;
  #L378a84.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L378a8a.  v0:= temp;
  #L378a8c.  if v0 != 0 then goto L378aba;
  #L378a90.  v0:= v1.`e.e.c.y.n.f.n` @type ^`java.lang.String` @kind object;
  #L378a94.  if v0 != 0 then goto L378aba;
  #L378a98.  call temp:= `t`(v1) @signature `Le/e/c/y/n/f;.t:()Le/e/c/l;` @kind direct;
  #L378a9e.  v0:= temp @kind object;
  #L378aa0.  v0:= instanceof @variable v0 @type ^`e.e.c.o` @kind boolean;
  #L378aa4.  if v0 == 0 then goto L378aae;
  #L378aa8.  v1.`e.e.c.y.n.f.n` @type ^`java.lang.String` := v2 @kind object;
  #L378aac.  return v1 @kind object;
  #L378aae.  v2:= new `java.lang.IllegalStateException`;
  #L378ab2.  call `<init>`(v2) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L378ab8.  throw v2;
  #L378aba.  v2:= new `java.lang.IllegalStateException`;
  #L378abe.  call `<init>`(v2) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L378ac4.  throw v2;
}
procedure `void` `close`(`e.e.c.y.n.f` v2 @kind this) @signature `Le/e/c/y/n/f;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L378ca0.  v0:= v2.`e.e.c.y.n.f.m` @type ^`java.util.List` @kind object;
  #L378ca4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L378caa.  v0:= temp;
  #L378cac.  if v0 == 0 then goto L378cc0;
  #L378cb0.  v0:= v2.`e.e.c.y.n.f.m` @type ^`java.util.List` @kind object;
  #L378cb4.  v1:= `@@e.e.c.y.n.f.q` @type ^`e.e.c.q` @kind object;
  #L378cb8.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L378cbe.  return @kind void;
  #L378cc0.  v0:= new `java.io.IOException`;
  #L378cc4.  v1:= "Incomplete document" @kind object;
  #L378cc8.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L378cce.  throw v0;
}
procedure `e.e.c.a0.c` `d`(`e.e.c.y.n.f` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le/e/c/y/n/f;.d:(Ljava/lang/String;)Le/e/c/a0/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L378bdc.  if v2 != 0 then goto L378be8;
  #L378be0.  call temp:= `r`(v1) @signature `Le/e/c/y/n/f;.r:()Le/e/c/a0/c;` @kind virtual;
  #L378be6.  return v1 @kind object;
  #L378be8.  v0:= new `e.e.c.q`;
  #L378bec.  call `<init>`(v0, v2) @signature `Le/e/c/q;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L378bf2.  call `a`(v1, v0) @signature `Le/e/c/y/n/f;.a:(Le/e/c/l;)V` @kind direct;
  #L378bf8.  return v1 @kind object;
}
procedure `e.e.c.a0.c` `d`(`e.e.c.y.n.f` v1 @kind this, `boolean` v2 ) @signature `Le/e/c/y/n/f;.d:(Z)Le/e/c/a0/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L378af4.  v0:= new `e.e.c.q`;
  #L378af8.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L378afe.  v2:= temp @kind object;
  #L378b00.  call `<init>`(v0, v2) @signature `Le/e/c/q;.<init>:(Ljava/lang/Boolean;)V` @kind direct;
  #L378b06.  call `a`(v1, v0) @signature `Le/e/c/y/n/f;.a:(Le/e/c/l;)V` @kind direct;
  #L378b0c.  return v1 @kind object;
}
procedure `e.e.c.a0.c` `f`(`e.e.c.y.n.f` v1 @kind this, `long` v2 ) @signature `Le/e/c/y/n/f;.f:(J)Le/e/c/a0/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L378c0c.  v0:= new `e.e.c.q`;
  #L378c10.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L378c16.  v2:= temp @kind object;
  #L378c18.  call `<init>`(v0, v2) @signature `Le/e/c/q;.<init>:(Ljava/lang/Number;)V` @kind direct;
  #L378c1e.  call `a`(v1, v0) @signature `Le/e/c/y/n/f;.a:(Le/e/c/l;)V` @kind direct;
  #L378c24.  return v1 @kind object;
}
procedure `void` `flush`(`e.e.c.y.n.f` v0 @kind this) @signature `Le/e/c/y/n/f;.flush:()V` @AccessFlag PUBLIC {
    temp;

  #L378ce0.  return @kind void;
}
procedure `e.e.c.a0.c` `k`(`e.e.c.y.n.f` v2 @kind this) @signature `Le/e/c/y/n/f;.k:()Le/e/c/a0/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L378958.  v0:= new `e.e.c.i`;
  #L37895c.  call `<init>`(v0) @signature `Le/e/c/i;.<init>:()V` @kind direct;
  #L378962.  call `a`(v2, v0) @signature `Le/e/c/y/n/f;.a:(Le/e/c/l;)V` @kind direct;
  #L378968.  v1:= v2.`e.e.c.y.n.f.m` @type ^`java.util.List` @kind object;
  #L37896c.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L378972.  return v2 @kind object;
}
procedure `e.e.c.a0.c` `l`(`e.e.c.y.n.f` v2 @kind this) @signature `Le/e/c/y/n/f;.l:()Le/e/c/a0/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L378984.  v0:= new `e.e.c.o`;
  #L378988.  call `<init>`(v0) @signature `Le/e/c/o;.<init>:()V` @kind direct;
  #L37898e.  call `a`(v2, v0) @signature `Le/e/c/y/n/f;.a:(Le/e/c/l;)V` @kind direct;
  #L378994.  v1:= v2.`e.e.c.y.n.f.m` @type ^`java.util.List` @kind object;
  #L378998.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L37899e.  return v2 @kind object;
}
procedure `e.e.c.a0.c` `m`(`e.e.c.y.n.f` v2 @kind this) @signature `Le/e/c/y/n/f;.m:()Le/e/c/a0/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3789b0.  v0:= v2.`e.e.c.y.n.f.m` @type ^`java.util.List` @kind object;
  #L3789b4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3789ba.  v0:= temp;
  #L3789bc.  if v0 != 0 then goto L3789fc;
  #L3789c0.  v0:= v2.`e.e.c.y.n.f.n` @type ^`java.lang.String` @kind object;
  #L3789c4.  if v0 != 0 then goto L3789fc;
  #L3789c8.  call temp:= `t`(v2) @signature `Le/e/c/y/n/f;.t:()Le/e/c/l;` @kind direct;
  #L3789ce.  v0:= temp @kind object;
  #L3789d0.  v0:= instanceof @variable v0 @type ^`e.e.c.i` @kind boolean;
  #L3789d4.  if v0 == 0 then goto L3789f0;
  #L3789d8.  v0:= v2.`e.e.c.y.n.f.m` @type ^`java.util.List` @kind object;
  #L3789dc.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3789e2.  v1:= temp;
  #L3789e4.  v1:= v1 + -1;
  #L3789e8.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L3789ee.  return v2 @kind object;
  #L3789f0.  v0:= new `java.lang.IllegalStateException`;
  #L3789f4.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L3789fa.  throw v0;
  #L3789fc.  v0:= new `java.lang.IllegalStateException`;
  #L378a00.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L378a06.  throw v0;
}
procedure `e.e.c.a0.c` `n`(`e.e.c.y.n.f` v2 @kind this) @signature `Le/e/c/y/n/f;.n:()Le/e/c/a0/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L378a18.  v0:= v2.`e.e.c.y.n.f.m` @type ^`java.util.List` @kind object;
  #L378a1c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L378a22.  v0:= temp;
  #L378a24.  if v0 != 0 then goto L378a64;
  #L378a28.  v0:= v2.`e.e.c.y.n.f.n` @type ^`java.lang.String` @kind object;
  #L378a2c.  if v0 != 0 then goto L378a64;
  #L378a30.  call temp:= `t`(v2) @signature `Le/e/c/y/n/f;.t:()Le/e/c/l;` @kind direct;
  #L378a36.  v0:= temp @kind object;
  #L378a38.  v0:= instanceof @variable v0 @type ^`e.e.c.o` @kind boolean;
  #L378a3c.  if v0 == 0 then goto L378a58;
  #L378a40.  v0:= v2.`e.e.c.y.n.f.m` @type ^`java.util.List` @kind object;
  #L378a44.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L378a4a.  v1:= temp;
  #L378a4c.  v1:= v1 + -1;
  #L378a50.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L378a56.  return v2 @kind object;
  #L378a58.  v0:= new `java.lang.IllegalStateException`;
  #L378a5c.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L378a62.  throw v0;
  #L378a64.  v0:= new `java.lang.IllegalStateException`;
  #L378a68.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L378a6e.  throw v0;
}
procedure `e.e.c.a0.c` `r`(`e.e.c.y.n.f` v1 @kind this) @signature `Le/e/c/y/n/f;.r:()Le/e/c/a0/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L378ad8.  v0:= `@@e.e.c.n.a` @type ^`e.e.c.n` @kind object;
  #L378adc.  call `a`(v1, v0) @signature `Le/e/c/y/n/f;.a:(Le/e/c/l;)V` @kind direct;
  #L378ae2.  return v1 @kind object;
}
procedure `e.e.c.l` `s`(`e.e.c.y.n.f` v3 @kind this) @signature `Le/e/c/y/n/f;.s:()Le/e/c/l;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3788d0.  v0:= v3.`e.e.c.y.n.f.m` @type ^`java.util.List` @kind object;
  #L3788d4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3788da.  v0:= temp;
  #L3788dc.  if v0 == 0 then goto L3788e6;
  #L3788e0.  v0:= v3.`e.e.c.y.n.f.o` @type ^`e.e.c.l` @kind object;
  #L3788e4.  return v0 @kind object;
  #L3788e6.  v0:= new `java.lang.IllegalStateException`;
  #L3788ea.  v1:= new `java.lang.StringBuilder`;
  #L3788ee.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3788f4.  v2:= "Expected one JSON element but was " @kind object;
  #L3788f8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3788fe.  v2:= v3.`e.e.c.y.n.f.m` @type ^`java.util.List` @kind object;
  #L378902.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L378908.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37890e.  v1:= temp @kind object;
  #L378910.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L378916.  throw v0;
}
