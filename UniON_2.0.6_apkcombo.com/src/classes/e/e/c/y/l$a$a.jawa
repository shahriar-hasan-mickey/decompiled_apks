record `e.e.c.y.l$a$a` @kind class @AccessFlag  extends `java.lang.CharSequence` @kind interface {
  `char`[] `e.e.c.y.l$a$a.b` @AccessFlag ;
}
procedure `void` `<init>`(`e.e.c.y.l$a$a` v0 @kind this) @signature `Le/e/c/y/l$a$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3771cc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3771d2.  return @kind void;
}
procedure `char` `charAt`(`e.e.c.y.l$a$a` v1 @kind this, `int` v2 ) @signature `Le/e/c/y/l$a$a;.charAt:(I)C` @AccessFlag PUBLIC {
    temp;
    v0;

  #L377174.  v0:= v1.`e.e.c.y.l$a$a.b` @type ^`char`[] @kind object;
  #L377178.  v2:= v0[v2] @kind char;
  #L37717c.  return v2;
}
procedure `int` `length`(`e.e.c.y.l$a$a` v1 @kind this) @signature `Le/e/c/y/l$a$a;.length:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L377190.  v0:= v1.`e.e.c.y.l$a$a.b` @type ^`char`[] @kind object;
  #L377194.  v0:= length @variable v0;
  #L377196.  return v0;
}
procedure `java.lang.CharSequence` `subSequence`(`e.e.c.y.l$a$a` v2 @kind this, `int` v3 , `int` v4 ) @signature `Le/e/c/y/l$a$a;.subSequence:(II)Ljava/lang/CharSequence;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3771a8.  v0:= new `java.lang.String`;
  #L3771ac.  v1:= v2.`e.e.c.y.l$a$a.b` @type ^`char`[] @kind object;
  #L3771b0.  v4:= v4 - v3 @kind int;
  #L3771b2.  call `<init>`(v0, v1, v3, v4) @signature `Ljava/lang/String;.<init>:([CII)V` @kind direct;
  #L3771b8.  return v0 @kind object;
}
