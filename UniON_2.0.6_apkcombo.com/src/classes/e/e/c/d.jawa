record `e.e.c.d` @kind class @AccessFlag PUBLIC_ABSTRACT_ENUM extends `java.lang.Enum` @kind class, `e.e.c.e` @kind interface {
}
global `e.e.c.d` `@@e.e.c.d.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.c.d` `@@e.e.c.d.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.c.d` `@@e.e.c.d.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.c.d` `@@e.e.c.d.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.c.d` `@@e.e.c.d.f` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.c.d` `@@e.e.c.d.g` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `e.e.c.d`[] `@@e.e.c.d.h` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Le/e/c/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L372628.  v0:= new `e.e.c.d$a`;
  #L37262c.  v1:= 0I;
  #L37262e.  v2:= "IDENTITY" @kind object;
  #L372632.  call `<init>`(v0, v2, v1) @signature `Le/e/c/d$a;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L372638.  `@@e.e.c.d.b` @type ^`e.e.c.d` := v0 @kind object;
  #L37263c.  v0:= new `e.e.c.d$b`;
  #L372640.  v2:= 1I;
  #L372642.  v3:= "UPPER_CAMEL_CASE" @kind object;
  #L372646.  call `<init>`(v0, v3, v2) @signature `Le/e/c/d$b;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L37264c.  `@@e.e.c.d.c` @type ^`e.e.c.d` := v0 @kind object;
  #L372650.  v0:= new `e.e.c.d$c`;
  #L372654.  v3:= 2I;
  #L372656.  v4:= "UPPER_CAMEL_CASE_WITH_SPACES" @kind object;
  #L37265a.  call `<init>`(v0, v4, v3) @signature `Le/e/c/d$c;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L372660.  `@@e.e.c.d.d` @type ^`e.e.c.d` := v0 @kind object;
  #L372664.  v0:= new `e.e.c.d$d`;
  #L372668.  v4:= 3I;
  #L37266a.  v5:= "LOWER_CASE_WITH_UNDERSCORES" @kind object;
  #L37266e.  call `<init>`(v0, v5, v4) @signature `Le/e/c/d$d;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L372674.  `@@e.e.c.d.e` @type ^`e.e.c.d` := v0 @kind object;
  #L372678.  v0:= new `e.e.c.d$e`;
  #L37267c.  v5:= 4I;
  #L37267e.  v6:= "LOWER_CASE_WITH_DASHES" @kind object;
  #L372682.  call `<init>`(v0, v6, v5) @signature `Le/e/c/d$e;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L372688.  `@@e.e.c.d.f` @type ^`e.e.c.d` := v0 @kind object;
  #L37268c.  v0:= new `e.e.c.d$f`;
  #L372690.  v6:= 5I;
  #L372692.  v7:= "LOWER_CASE_WITH_DOTS" @kind object;
  #L372696.  call `<init>`(v0, v7, v6) @signature `Le/e/c/d$f;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L37269c.  `@@e.e.c.d.g` @type ^`e.e.c.d` := v0 @kind object;
  #L3726a0.  v0:= 6I;
  #L3726a2.  v0:= new `e.e.c.d`[v0];
  #L3726a6.  v7:= `@@e.e.c.d.b` @type ^`e.e.c.d` @kind object;
  #L3726aa.  v0[v1]:= v7 @kind object;
  #L3726ae.  v1:= `@@e.e.c.d.c` @type ^`e.e.c.d` @kind object;
  #L3726b2.  v0[v2]:= v1 @kind object;
  #L3726b6.  v1:= `@@e.e.c.d.d` @type ^`e.e.c.d` @kind object;
  #L3726ba.  v0[v3]:= v1 @kind object;
  #L3726be.  v1:= `@@e.e.c.d.e` @type ^`e.e.c.d` @kind object;
  #L3726c2.  v0[v4]:= v1 @kind object;
  #L3726c6.  v1:= `@@e.e.c.d.f` @type ^`e.e.c.d` @kind object;
  #L3726ca.  v0[v5]:= v1 @kind object;
  #L3726ce.  v1:= `@@e.e.c.d.g` @type ^`e.e.c.d` @kind object;
  #L3726d2.  v0[v6]:= v1 @kind object;
  #L3726d6.  `@@e.e.c.d.h` @type ^`e.e.c.d`[] := v0 @kind object;
  #L3726da.  return @kind void;
}
procedure `void` `<init>`(`e.e.c.d` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Le/e/c/d;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3726ec.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3726f2.  return @kind void;
}
procedure `void` `<init>`(`e.e.c.d` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `e.e.c.d$a` v3 @kind object) @signature `Le/e/c/d;.<init>:(Ljava/lang/String;ILe/e/c/d$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L372704.  call `<init>`(v0, v1, v2) @signature `Le/e/c/d;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L37270a.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.String` v5 @kind object) @signature `Le/e/c/d;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L372568.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L37256e.  v0:= temp;
  #L372570.  v1:= 1I;
  #L372572.  v0:= v0 - v1 @kind int;
  #L372574.  v2:= 0I;
  #L372576.  v3:= 0I;
  #L372578.  call temp:= `charAt`(v5, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L37257e.  v4:= temp;
  #L372580.  call temp:= `isLetter`(v4) @signature `Ljava/lang/Character;.isLetter:(C)Z` @kind static;
  #L372586.  v4:= temp;
  #L372588.  if v4 != 0 then goto L372596;
  #L37258c.  if v3 >= v0 then goto L372596;
  #L372590.  v3:= v3 + 1;
  #L372594.  goto L372578;
  #L372596.  call temp:= `charAt`(v5, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L37259c.  v0:= temp;
  #L37259e.  call temp:= `isUpperCase`(v0) @signature `Ljava/lang/Character;.isUpperCase:(C)Z` @kind static;
  #L3725a4.  v4:= temp;
  #L3725a6.  if v4 == 0 then goto L3725ac;
  #L3725aa.  return v5 @kind object;
  #L3725ac.  call temp:= `toUpperCase`(v0) @signature `Ljava/lang/Character;.toUpperCase:(C)C` @kind static;
  #L3725b2.  v0:= temp;
  #L3725b4.  if v3 != 0 then goto L3725e0;
  #L3725b8.  v2:= new `java.lang.StringBuilder`;
  #L3725bc.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3725c2.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3725c8.  call temp:= `substring`(v5, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L3725ce.  v5:= temp @kind object;
  #L3725d0.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3725d6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3725dc.  v5:= temp @kind object;
  #L3725de.  return v5 @kind object;
  #L3725e0.  v4:= new `java.lang.StringBuilder`;
  #L3725e4.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3725ea.  call temp:= `substring`(v5, v2, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3725f0.  v2:= temp @kind object;
  #L3725f2.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3725f8.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3725fe.  v3:= v3 + v1 @kind int;
  #L372600.  call temp:= `substring`(v5, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L372606.  v5:= temp @kind object;
  #L372608.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37260e.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L372614.  v5:= temp @kind object;
  #L372616.  return v5 @kind object;
}
procedure `java.lang.String` `a`(`java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Le/e/c/d;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L372504.  v0:= new `java.lang.StringBuilder`;
  #L372508.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37250e.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L372514.  v1:= temp;
  #L372516.  v2:= 0I;
  #L372518.  if v2 >= v1 then goto L37254e;
  #L37251c.  call temp:= `charAt`(v5, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L372522.  v3:= temp;
  #L372524.  call temp:= `isUpperCase`(v3) @signature `Ljava/lang/Character;.isUpperCase:(C)Z` @kind static;
  #L37252a.  v4:= temp;
  #L37252c.  if v4 == 0 then goto L372542;
  #L372530.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L372536.  v4:= temp;
  #L372538.  if v4 == 0 then goto L372542;
  #L37253c.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L372542.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L372548.  v2:= v2 + 1;
  #L37254c.  goto L372518;
  #L37254e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L372554.  v5:= temp @kind object;
  #L372556.  return v5 @kind object;
}
procedure `e.e.c.d` `valueOf`(`java.lang.String` v1 @kind object) @signature `Le/e/c/d;.valueOf:(Ljava/lang/String;)Le/e/c/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3724bc.  v0:= constclass @type ^`e.e.c.d` @kind object;
  #L3724c0.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L3724c6.  v1:= temp @kind object;
  #L3724c8.  v1:= (`e.e.c.d`) v1 @kind object;
  #L3724cc.  return v1 @kind object;
}
procedure `e.e.c.d`[] `values`() @signature `Le/e/c/d;.values:()[Le/e/c/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3724e0.  v0:= `@@e.e.c.d.h` @type ^`e.e.c.d`[] @kind object;
  #L3724e4.  call temp:= `clone`(v0) @signature `[Le/e/c/d;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3724ea.  v0:= temp @kind object;
  #L3724ec.  v0:= (`e.e.c.d`[]) v0 @kind object;
  #L3724f0.  return v0 @kind object;
}
