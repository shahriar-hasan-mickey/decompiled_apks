record `e.e.d.a.n` @kind class @AccessFlag PUBLIC extends `java.io.Externalizable` @kind interface {
  `boolean` `e.e.d.a.n.b` @AccessFlag PRIVATE;
  `java.lang.String` `e.e.d.a.n.c` @AccessFlag PRIVATE;
  `java.util.List` `e.e.d.a.n.d` @AccessFlag PRIVATE;
  `java.util.List` `e.e.d.a.n.e` @AccessFlag PRIVATE;
  `boolean` `e.e.d.a.n.f` @AccessFlag PRIVATE;
  `java.lang.String` `e.e.d.a.n.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.d.a.n` v2 @kind this) @signature `Le/e/d/a/n;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L387434.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38743a.  v0:= "" @kind object;
  #L38743e.  v2.`e.e.d.a.n.c` @type ^`java.lang.String` := v0 @kind object;
  #L387442.  v1:= new `java.util.ArrayList`;
  #L387446.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L38744c.  v2.`e.e.d.a.n.d` @type ^`java.util.List` := v1 @kind object;
  #L387450.  v1:= new `java.util.ArrayList`;
  #L387454.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L38745a.  v2.`e.e.d.a.n.e` @type ^`java.util.List` := v1 @kind object;
  #L38745e.  v2.`e.e.d.a.n.g` @type ^`java.lang.String` := v0 @kind object;
  #L387462.  return @kind void;
}
procedure `int` `a`(`e.e.d.a.n` v1 @kind this, `int` v2 ) @signature `Le/e/d/a/n;.a:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L387380.  v0:= v1.`e.e.d.a.n.d` @type ^`java.util.List` @kind object;
  #L387384.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L38738a.  v2:= temp @kind object;
  #L38738c.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L387390.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L387396.  v2:= temp;
  #L387398.  return v2;
}
procedure `e.e.d.a.n` `a`(`e.e.d.a.n` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le/e/d/a/n;.a:(Ljava/lang/String;)Le/e/d/a/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L387348.  v0:= 1I;
  #L38734a.  v1.`e.e.d.a.n.f` @type ^`boolean` := v0 @kind boolean;
  #L38734e.  v1.`e.e.d.a.n.g` @type ^`java.lang.String` := v2 @kind object;
  #L387352.  return v1 @kind object;
}
procedure `java.lang.String` `a`(`e.e.d.a.n` v1 @kind this) @signature `Le/e/d/a/n;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3873ec.  v0:= v1.`e.e.d.a.n.c` @type ^`java.lang.String` @kind object;
  #L3873f0.  return v0 @kind object;
}
procedure `int` `b`(`e.e.d.a.n` v1 @kind this) @signature `Le/e/d/a/n;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3873ac.  v0:= v1.`e.e.d.a.n.d` @type ^`java.util.List` @kind object;
  #L3873b0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3873b6.  v0:= temp;
  #L3873b8.  return v0;
}
procedure `e.e.d.a.n` `b`(`e.e.d.a.n` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le/e/d/a/n;.b:(Ljava/lang/String;)Le/e/d/a/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L387364.  v0:= 1I;
  #L387366.  v1.`e.e.d.a.n.b` @type ^`boolean` := v0 @kind boolean;
  #L38736a.  v1.`e.e.d.a.n.c` @type ^`java.lang.String` := v2 @kind object;
  #L38736e.  return v1 @kind object;
}
procedure `java.util.List` `c`(`e.e.d.a.n` v1 @kind this) @signature `Le/e/d/a/n;.c:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L387404.  v0:= v1.`e.e.d.a.n.d` @type ^`java.util.List` @kind object;
  #L387408.  return v0 @kind object;
}
procedure `int` `d`(`e.e.d.a.n` v1 @kind this) @signature `Le/e/d/a/n;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3873cc.  v0:= v1.`e.e.d.a.n.e` @type ^`java.util.List` @kind object;
  #L3873d0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3873d6.  v0:= temp;
  #L3873d8.  return v0;
}
procedure `java.util.List` `e`(`e.e.d.a.n` v1 @kind this) @signature `Le/e/d/a/n;.e:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38741c.  v0:= v1.`e.e.d.a.n.e` @type ^`java.util.List` @kind object;
  #L387420.  return v0 @kind object;
}
procedure `void` `readExternal`(`e.e.d.a.n` v5 @kind this, `java.io.ObjectInput` v6 @kind object) @signature `Le/e/d/a/n;.readExternal:(Ljava/io/ObjectInput;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L387474.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L38747a.  v0:= temp;
  #L38747c.  if v0 == 0 then goto L38748e;
  #L387480.  call temp:= `readUTF`(v6) @signature `Ljava/io/ObjectInput;.readUTF:()Ljava/lang/String;` @kind interface;
  #L387486.  v0:= temp @kind object;
  #L387488.  call temp:= `b`(v5, v0) @signature `Le/e/d/a/n;.b:(Ljava/lang/String;)Le/e/d/a/n;` @kind virtual;
  #L38748e.  call temp:= `readInt`(v6) @signature `Ljava/io/ObjectInput;.readInt:()I` @kind interface;
  #L387494.  v0:= temp;
  #L387496.  v1:= 0I;
  #L387498.  v2:= 0I;
  #L38749a.  if v2 >= v0 then goto L3874be;
  #L38749e.  v3:= v5.`e.e.d.a.n.d` @type ^`java.util.List` @kind object;
  #L3874a2.  call temp:= `readInt`(v6) @signature `Ljava/io/ObjectInput;.readInt:()I` @kind interface;
  #L3874a8.  v4:= temp;
  #L3874aa.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3874b0.  v4:= temp @kind object;
  #L3874b2.  call temp:= `add`(v3, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3874b8.  v2:= v2 + 1;
  #L3874bc.  goto L38749a;
  #L3874be.  call temp:= `readInt`(v6) @signature `Ljava/io/ObjectInput;.readInt:()I` @kind interface;
  #L3874c4.  v0:= temp;
  #L3874c6.  if v1 >= v0 then goto L3874ea;
  #L3874ca.  v2:= v5.`e.e.d.a.n.e` @type ^`java.util.List` @kind object;
  #L3874ce.  call temp:= `readInt`(v6) @signature `Ljava/io/ObjectInput;.readInt:()I` @kind interface;
  #L3874d4.  v3:= temp;
  #L3874d6.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3874dc.  v3:= temp @kind object;
  #L3874de.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3874e4.  v1:= v1 + 1;
  #L3874e8.  goto L3874c6;
  #L3874ea.  call temp:= `readBoolean`(v6) @signature `Ljava/io/ObjectInput;.readBoolean:()Z` @kind interface;
  #L3874f0.  v0:= temp;
  #L3874f2.  if v0 == 0 then goto L387504;
  #L3874f6.  call temp:= `readUTF`(v6) @signature `Ljava/io/ObjectInput;.readUTF:()Ljava/lang/String;` @kind interface;
  #L3874fc.  v6:= temp @kind object;
  #L3874fe.  call temp:= `a`(v5, v6) @signature `Le/e/d/a/n;.a:(Ljava/lang/String;)Le/e/d/a/n;` @kind virtual;
  #L387504.  return @kind void;
}
procedure `void` `writeExternal`(`e.e.d.a.n` v4 @kind this, `java.io.ObjectOutput` v5 @kind object) @signature `Le/e/d/a/n;.writeExternal:(Ljava/io/ObjectOutput;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L387518.  v0:= v4.`e.e.d.a.n.b` @type ^`boolean` @kind boolean;
  #L38751c.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L387522.  v0:= v4.`e.e.d.a.n.b` @type ^`boolean` @kind boolean;
  #L387526.  if v0 == 0 then goto L387534;
  #L38752a.  v0:= v4.`e.e.d.a.n.c` @type ^`java.lang.String` @kind object;
  #L38752e.  call `writeUTF`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeUTF:(Ljava/lang/String;)V` @kind interface;
  #L387534.  call temp:= `b`(v4) @signature `Le/e/d/a/n;.b:()I` @kind virtual;
  #L38753a.  v0:= temp;
  #L38753c.  call `writeInt`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeInt:(I)V` @kind interface;
  #L387542.  v1:= 0I;
  #L387544.  v2:= 0I;
  #L387546.  if v2 >= v0 then goto L38756e;
  #L38754a.  v3:= v4.`e.e.d.a.n.d` @type ^`java.util.List` @kind object;
  #L38754e.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L387554.  v3:= temp @kind object;
  #L387556.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L38755a.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L387560.  v3:= temp;
  #L387562.  call `writeInt`(v5, v3) @signature `Ljava/io/ObjectOutput;.writeInt:(I)V` @kind interface;
  #L387568.  v2:= v2 + 1;
  #L38756c.  goto L387546;
  #L38756e.  call temp:= `d`(v4) @signature `Le/e/d/a/n;.d:()I` @kind virtual;
  #L387574.  v0:= temp;
  #L387576.  call `writeInt`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeInt:(I)V` @kind interface;
  #L38757c.  if v1 >= v0 then goto L3875a4;
  #L387580.  v2:= v4.`e.e.d.a.n.e` @type ^`java.util.List` @kind object;
  #L387584.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L38758a.  v2:= temp @kind object;
  #L38758c.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L387590.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L387596.  v2:= temp;
  #L387598.  call `writeInt`(v5, v2) @signature `Ljava/io/ObjectOutput;.writeInt:(I)V` @kind interface;
  #L38759e.  v1:= v1 + 1;
  #L3875a2.  goto L38757c;
  #L3875a4.  v0:= v4.`e.e.d.a.n.f` @type ^`boolean` @kind boolean;
  #L3875a8.  call `writeBoolean`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeBoolean:(Z)V` @kind interface;
  #L3875ae.  v0:= v4.`e.e.d.a.n.f` @type ^`boolean` @kind boolean;
  #L3875b2.  if v0 == 0 then goto L3875c0;
  #L3875b6.  v0:= v4.`e.e.d.a.n.g` @type ^`java.lang.String` @kind object;
  #L3875ba.  call `writeUTF`(v5, v0) @signature `Ljava/io/ObjectOutput;.writeUTF:(Ljava/lang/String;)V` @kind interface;
  #L3875c0.  return @kind void;
}
