record `e.e.d.a.m` @kind class @AccessFlag PUBLIC extends `java.io.Externalizable` @kind interface {
  `java.util.List` `e.e.d.a.m.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`e.e.d.a.m` v1 @kind this) @signature `Le/e/d/a/m;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L386404.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38640a.  v0:= new `java.util.ArrayList`;
  #L38640e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L386414.  v1.`e.e.d.a.m.b` @type ^`java.util.List` := v0 @kind object;
  #L386418.  return @kind void;
}
procedure `int` `a`(`e.e.d.a.m` v1 @kind this) @signature `Le/e/d/a/m;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3863cc.  v0:= v1.`e.e.d.a.m.b` @type ^`java.util.List` @kind object;
  #L3863d0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3863d6.  v0:= temp;
  #L3863d8.  return v0;
}
procedure `java.util.List` `b`(`e.e.d.a.m` v1 @kind this) @signature `Le/e/d/a/m;.b:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3863ec.  v0:= v1.`e.e.d.a.m.b` @type ^`java.util.List` @kind object;
  #L3863f0.  return v0 @kind object;
}
procedure `void` `readExternal`(`e.e.d.a.m` v4 @kind this, `java.io.ObjectInput` v5 @kind object) @signature `Le/e/d/a/m;.readExternal:(Ljava/io/ObjectInput;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L38642c.  call temp:= `readInt`(v5) @signature `Ljava/io/ObjectInput;.readInt:()I` @kind interface;
  #L386432.  v0:= temp;
  #L386434.  v1:= 0I;
  #L386436.  if v1 >= v0 then goto L38645a;
  #L38643a.  v2:= new `e.e.d.a.l`;
  #L38643e.  call `<init>`(v2) @signature `Le/e/d/a/l;.<init>:()V` @kind direct;
  #L386444.  call `readExternal`(v2, v5) @signature `Le/e/d/a/l;.readExternal:(Ljava/io/ObjectInput;)V` @kind virtual;
  #L38644a.  v3:= v4.`e.e.d.a.m.b` @type ^`java.util.List` @kind object;
  #L38644e.  call temp:= `add`(v3, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L386454.  v1:= v1 + 1;
  #L386458.  goto L386436;
  #L38645a.  return @kind void;
}
procedure `void` `writeExternal`(`e.e.d.a.m` v3 @kind this, `java.io.ObjectOutput` v4 @kind object) @signature `Le/e/d/a/m;.writeExternal:(Ljava/io/ObjectOutput;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L38646c.  call temp:= `a`(v3) @signature `Le/e/d/a/m;.a:()I` @kind virtual;
  #L386472.  v0:= temp;
  #L386474.  call `writeInt`(v4, v0) @signature `Ljava/io/ObjectOutput;.writeInt:(I)V` @kind interface;
  #L38647a.  v1:= 0I;
  #L38647c.  if v1 >= v0 then goto L38649c;
  #L386480.  v2:= v3.`e.e.d.a.m.b` @type ^`java.util.List` @kind object;
  #L386484.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L38648a.  v2:= temp @kind object;
  #L38648c.  v2:= (`e.e.d.a.l`) v2 @kind object;
  #L386490.  call `writeExternal`(v2, v4) @signature `Le/e/d/a/l;.writeExternal:(Ljava/io/ObjectOutput;)V` @kind virtual;
  #L386496.  v1:= v1 + 1;
  #L38649a.  goto L38647c;
  #L38649c.  return @kind void;
}
