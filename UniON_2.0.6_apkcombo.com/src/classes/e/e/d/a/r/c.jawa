record `e.e.d.a.r.c` @kind class @AccessFlag PUBLIC extends `java.io.Externalizable` @kind interface {
  `int` `e.e.d.a.r.c.b` @AccessFlag PRIVATE;
  `int`[] `e.e.d.a.r.c.c` @AccessFlag PRIVATE;
  `java.util.List` `e.e.d.a.r.c.d` @AccessFlag PRIVATE;
}
global `java.util.Map` `@@e.e.d.a.r.c.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/d/a/r/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L388f7c.  v0:= new `java.util.HashMap`;
  #L388f80.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L388f86.  v1:= "zh_Hant" @kind object;
  #L388f8a.  v2:= "zh_TW" @kind object;
  #L388f8e.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L388f94.  v2:= "zh_HK" @kind object;
  #L388f98.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L388f9e.  v2:= "zh_MO" @kind object;
  #L388fa2.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L388fa8.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L388fae.  v0:= temp @kind object;
  #L388fb0.  `@@e.e.d.a.r.c.e` @type ^`java.util.Map` := v0 @kind object;
  #L388fb4.  return @kind void;
}
procedure `void` `<init>`(`e.e.d.a.r.c` v1 @kind this) @signature `Le/e/d/a/r/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L388fc8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L388fce.  v0:= 0I;
  #L388fd0.  v1.`e.e.d.a.r.c.b` @type ^`int` := v0;
  #L388fd4.  return @kind void;
}
procedure `java.lang.String` `a`(`e.e.d.a.r.c` v3 @kind this, `java.util.Set` v4 @kind object, `java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object, `java.lang.String` v7 @kind object) @signature `Le/e/d/a/r/c;.a:(Ljava/util/Set;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L388d2c.  call temp:= `a`(v3, v5, v6, v7) @signature `Le/e/d/a/r/c;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind direct;
  #L388d32.  v0:= temp @kind object;
  #L388d34.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L388d3a.  v0:= temp @kind object;
  #L388d3c.  v1:= `@@e.e.d.a.r.c.e` @type ^`java.util.Map` @kind object;
  #L388d40.  call temp:= `get`(v1, v0) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L388d46.  v1:= temp @kind object;
  #L388d48.  v1:= (`java.lang.String`) v1 @kind object;
  #L388d4c.  if v1 == 0 then goto L388d5e;
  #L388d50.  call temp:= `contains`(v4, v1) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L388d56.  v2:= temp;
  #L388d58.  if v2 == 0 then goto L388d5e;
  #L388d5c.  return v1 @kind object;
  #L388d5e.  call temp:= `contains`(v4, v0) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L388d64.  v1:= temp;
  #L388d66.  if v1 == 0 then goto L388d6c;
  #L388d6a.  return v0 @kind object;
  #L388d6c.  call temp:= `a`(v3, v6, v7) @signature `Le/e/d/a/r/c;.a:(Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L388d72.  v0:= temp;
  #L388d74.  if v0 == 0 then goto L388d86;
  #L388d78.  call temp:= `contains`(v4, v5) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L388d7e.  v4:= temp;
  #L388d80.  if v4 == 0 then goto L388e08;
  #L388d84.  return v5 @kind object;
  #L388d86.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L388d8c.  v0:= temp;
  #L388d8e.  if v0 <= 0 then goto L388e08;
  #L388d92.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L388d98.  v0:= temp;
  #L388d9a.  if v0 <= 0 then goto L388e08;
  #L388d9e.  v0:= new `java.lang.StringBuilder`;
  #L388da2.  call `<init>`(v0, v5) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L388da8.  v1:= 95I;
  #L388dac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L388db2.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L388db8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L388dbe.  v6:= temp @kind object;
  #L388dc0.  call temp:= `contains`(v4, v6) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L388dc6.  v0:= temp;
  #L388dc8.  if v0 == 0 then goto L388dce;
  #L388dcc.  return v6 @kind object;
  #L388dce.  v6:= new `java.lang.StringBuilder`;
  #L388dd2.  call `<init>`(v6, v5) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L388dd8.  call temp:= `append`(v6, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L388dde.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L388de4.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L388dea.  v6:= temp @kind object;
  #L388dec.  call temp:= `contains`(v4, v6) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L388df2.  v7:= temp;
  #L388df4.  if v7 == 0 then goto L388dfa;
  #L388df8.  return v6 @kind object;
  #L388dfa.  call temp:= `contains`(v4, v5) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L388e00.  v4:= temp;
  #L388e02.  if v4 == 0 then goto L388e08;
  #L388e06.  return v5 @kind object;
  #L388e08.  v4:= "" @kind object;
  #L388e0c.  return v4 @kind object;
}
procedure `java.lang.StringBuilder` `a`(`e.e.d.a.r.c` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Le/e/d/a/r/c;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/StringBuilder;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L388f54.  v0:= new `java.lang.StringBuilder`;
  #L388f58.  call `<init>`(v0, v2) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L388f5e.  call `a`(v1, v3, v0) @signature `Le/e/d/a/r/c;.a:(Ljava/lang/String;Ljava/lang/StringBuilder;)V` @kind direct;
  #L388f64.  call `a`(v1, v4, v0) @signature `Le/e/d/a/r/c;.a:(Ljava/lang/String;Ljava/lang/StringBuilder;)V` @kind direct;
  #L388f6a.  return v0 @kind object;
}
procedure `void` `a`(`e.e.d.a.r.c` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.StringBuilder` v3 @kind object) @signature `Le/e/d/a/r/c;.a:(Ljava/lang/String;Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L388fe8.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L388fee.  v0:= temp;
  #L388ff0.  if v0 <= 0 then goto L389004;
  #L388ff4.  v0:= 95I;
  #L388ff8.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L388ffe.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L389004.  return @kind void;
}
procedure `boolean` `a`(`e.e.d.a.r.c` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Le/e/d/a/r/c;.a:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L388ce4.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L388cea.  v0:= temp;
  #L388cec.  if v0 != 0 then goto L388cfc;
  #L388cf0.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L388cf6.  v0:= temp;
  #L388cf8.  if v0 > 0 then goto L388d14;
  #L388cfc.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L388d02.  v3:= temp;
  #L388d04.  if v3 != 0 then goto L388d18;
  #L388d08.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L388d0e.  v2:= temp;
  #L388d10.  if v2 <= 0 then goto L388d18;
  #L388d14.  v2:= 1I;
  #L388d16.  goto L388d1a;
  #L388d18.  v2:= 0I;
  #L388d1a.  return v2;
}
procedure `java.lang.String` `a`(`e.e.d.a.r.c` v3 @kind this, `int` v4 , `java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object, `java.lang.String` v7 @kind object) @signature `Le/e/d/a/r/c;.a:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L388e20.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L388e26.  v0:= temp;
  #L388e28.  v1:= "" @kind object;
  #L388e2c.  if v0 != 0 then goto L388e32;
  #L388e30.  return v1 @kind object;
  #L388e32.  v0:= v3.`e.e.d.a.r.c.c` @type ^`int`[] @kind object;
  #L388e36.  call temp:= `binarySearch`(v0, v4) @signature `Ljava/util/Arrays;.binarySearch:([II)I` @kind static;
  #L388e3c.  v0:= temp;
  #L388e3e.  if v0 >= 0 then goto L388e44;
  #L388e42.  return v1 @kind object;
  #L388e44.  v2:= v3.`e.e.d.a.r.c.d` @type ^`java.util.List` @kind object;
  #L388e48.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L388e4e.  v0:= temp @kind object;
  #L388e50.  v0:= (`java.util.Set`) v0 @kind object;
  #L388e54.  call temp:= `size`(v0) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L388e5a.  v2:= temp;
  #L388e5c.  if v2 <= 0 then goto L388e9e;
  #L388e60.  call temp:= `a`(v3, v0, v5, v6, v7) @signature `Le/e/d/a/r/c;.a:(Ljava/util/Set;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L388e66.  v5:= temp @kind object;
  #L388e68.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L388e6e.  v6:= temp;
  #L388e70.  if v6 <= 0 then goto L388e9e;
  #L388e74.  v6:= new `java.lang.StringBuilder`;
  #L388e78.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L388e7e.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L388e84.  v4:= 95I;
  #L388e88.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L388e8e.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L388e94.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L388e9a.  v4:= temp @kind object;
  #L388e9c.  return v4 @kind object;
  #L388e9e.  return v1 @kind object;
}
procedure `void` `readExternal`(`e.e.d.a.r.c` v6 @kind this, `java.io.ObjectInput` v7 @kind object) @signature `Le/e/d/a/r/c;.readExternal:(Ljava/io/ObjectInput;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L389018.  call temp:= `readInt`(v7) @signature `Ljava/io/ObjectInput;.readInt:()I` @kind interface;
  #L38901e.  v0:= temp;
  #L389020.  v6.`e.e.d.a.r.c.b` @type ^`int` := v0;
  #L389024.  v0:= v6.`e.e.d.a.r.c.c` @type ^`int`[] @kind object;
  #L389028.  if v0 == 0 then goto L389036;
  #L38902c.  v0:= length @variable v0;
  #L38902e.  v1:= v6.`e.e.d.a.r.c.b` @type ^`int`;
  #L389032.  if v0 >= v1 then goto L389042;
  #L389036.  v0:= v6.`e.e.d.a.r.c.b` @type ^`int`;
  #L38903a.  v0:= new `int`[v0];
  #L38903e.  v6.`e.e.d.a.r.c.c` @type ^`int`[] := v0 @kind object;
  #L389042.  v0:= v6.`e.e.d.a.r.c.d` @type ^`java.util.List` @kind object;
  #L389046.  if v0 != 0 then goto L389058;
  #L38904a.  v0:= new `java.util.ArrayList`;
  #L38904e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L389054.  v6.`e.e.d.a.r.c.d` @type ^`java.util.List` := v0 @kind object;
  #L389058.  v0:= 0I;
  #L38905a.  v1:= 0I;
  #L38905c.  v2:= v6.`e.e.d.a.r.c.b` @type ^`int`;
  #L389060.  if v1 >= v2 then goto L3890b0;
  #L389064.  v2:= v6.`e.e.d.a.r.c.c` @type ^`int`[] @kind object;
  #L389068.  call temp:= `readInt`(v7) @signature `Ljava/io/ObjectInput;.readInt:()I` @kind interface;
  #L38906e.  v3:= temp;
  #L389070.  v2[v1]:= v3;
  #L389074.  call temp:= `readInt`(v7) @signature `Ljava/io/ObjectInput;.readInt:()I` @kind interface;
  #L38907a.  v2:= temp;
  #L38907c.  v3:= new `java.util.HashSet`;
  #L389080.  call `<init>`(v3) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L389086.  v4:= 0I;
  #L389088.  if v4 >= v2 then goto L3890a0;
  #L38908c.  call temp:= `readUTF`(v7) @signature `Ljava/io/ObjectInput;.readUTF:()Ljava/lang/String;` @kind interface;
  #L389092.  v5:= temp @kind object;
  #L389094.  call temp:= `add`(v3, v5) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38909a.  v4:= v4 + 1;
  #L38909e.  goto L389088;
  #L3890a0.  v2:= v6.`e.e.d.a.r.c.d` @type ^`java.util.List` @kind object;
  #L3890a4.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3890aa.  v1:= v1 + 1;
  #L3890ae.  goto L38905c;
  #L3890b0.  return @kind void;
}
procedure `java.lang.String` `toString`(`e.e.d.a.r.c` v4 @kind this) @signature `Le/e/d/a/r/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L388eb0.  v0:= new `java.lang.StringBuilder`;
  #L388eb4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L388eba.  v1:= 0I;
  #L388ebc.  v2:= v4.`e.e.d.a.r.c.b` @type ^`int`;
  #L388ec0.  if v1 >= v2 then goto L388f38;
  #L388ec4.  v2:= v4.`e.e.d.a.r.c.c` @type ^`int`[] @kind object;
  #L388ec8.  v2:= v2[v1];
  #L388ecc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L388ed2.  v2:= 124I;
  #L388ed6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L388edc.  v2:= new `java.util.TreeSet`;
  #L388ee0.  v3:= v4.`e.e.d.a.r.c.d` @type ^`java.util.List` @kind object;
  #L388ee4.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L388eea.  v3:= temp @kind object;
  #L388eec.  v3:= (`java.util.Collection`) v3 @kind object;
  #L388ef0.  call `<init>`(v2, v3) @signature `Ljava/util/TreeSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L388ef6.  call temp:= `iterator`(v2) @signature `Ljava/util/SortedSet;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L388efc.  v2:= temp @kind object;
  #L388efe.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L388f04.  v3:= temp;
  #L388f06.  if v3 == 0 then goto L388f28;
  #L388f0a.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L388f10.  v3:= temp @kind object;
  #L388f12.  v3:= (`java.lang.String`) v3 @kind object;
  #L388f16.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L388f1c.  v3:= 44I;
  #L388f20.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L388f26.  goto L388efe;
  #L388f28.  v2:= 10I;
  #L388f2c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L388f32.  v1:= v1 + 1;
  #L388f36.  goto L388ebc;
  #L388f38.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L388f3e.  v0:= temp @kind object;
  #L388f40.  return v0 @kind object;
}
procedure `void` `writeExternal`(`e.e.d.a.r.c` v3 @kind this, `java.io.ObjectOutput` v4 @kind object) @signature `Le/e/d/a/r/c;.writeExternal:(Ljava/io/ObjectOutput;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3890c4.  v0:= v3.`e.e.d.a.r.c.b` @type ^`int`;
  #L3890c8.  call `writeInt`(v4, v0) @signature `Ljava/io/ObjectOutput;.writeInt:(I)V` @kind interface;
  #L3890ce.  v0:= 0I;
  #L3890d0.  v1:= v3.`e.e.d.a.r.c.b` @type ^`int`;
  #L3890d4.  if v0 >= v1 then goto L389132;
  #L3890d8.  v1:= v3.`e.e.d.a.r.c.c` @type ^`int`[] @kind object;
  #L3890dc.  v1:= v1[v0];
  #L3890e0.  call `writeInt`(v4, v1) @signature `Ljava/io/ObjectOutput;.writeInt:(I)V` @kind interface;
  #L3890e6.  v1:= v3.`e.e.d.a.r.c.d` @type ^`java.util.List` @kind object;
  #L3890ea.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3890f0.  v1:= temp @kind object;
  #L3890f2.  v1:= (`java.util.Set`) v1 @kind object;
  #L3890f6.  call temp:= `size`(v1) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L3890fc.  v2:= temp;
  #L3890fe.  call `writeInt`(v4, v2) @signature `Ljava/io/ObjectOutput;.writeInt:(I)V` @kind interface;
  #L389104.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L38910a.  v1:= temp @kind object;
  #L38910c.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L389112.  v2:= temp;
  #L389114.  if v2 == 0 then goto L38912c;
  #L389118.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L38911e.  v2:= temp @kind object;
  #L389120.  v2:= (`java.lang.String`) v2 @kind object;
  #L389124.  call `writeUTF`(v4, v2) @signature `Ljava/io/ObjectOutput;.writeUTF:(Ljava/lang/String;)V` @kind interface;
  #L38912a.  goto L38910c;
  #L38912c.  v0:= v0 + 1;
  #L389130.  goto L3890d0;
  #L389132.  return @kind void;
}
