record `e.e.d.a.r.f` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `e.e.d.a.r.f.a` @AccessFlag PRIVATE_FINAL;
  `e.e.d.a.r.c` `e.e.d.a.r.f.b` @AccessFlag PRIVATE;
  `java.util.Map` `e.e.d.a.r.f.c` @AccessFlag PRIVATE;
}
global `java.util.logging.Logger` `@@e.e.d.a.r.f.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Le/e/d/a/r/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L389570.  v0:= constclass @type ^`e.e.d.a.r.f` @kind object;
  #L389574.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L38957a.  v0:= temp @kind object;
  #L38957c.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L389582.  v0:= temp @kind object;
  #L389584.  `@@e.e.d.a.r.f.d` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L389588.  return @kind void;
}
procedure `void` `<init>`(`e.e.d.a.r.f` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le/e/d/a/r/f;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L38959c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3895a2.  v0:= new `e.e.d.a.r.c`;
  #L3895a6.  call `<init>`(v0) @signature `Le/e/d/a/r/c;.<init>:()V` @kind direct;
  #L3895ac.  v1.`e.e.d.a.r.f.b` @type ^`e.e.d.a.r.c` := v0 @kind object;
  #L3895b0.  v0:= new `java.util.HashMap`;
  #L3895b4.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3895ba.  v1.`e.e.d.a.r.f.c` @type ^`java.util.Map` := v0 @kind object;
  #L3895be.  v1.`e.e.d.a.r.f.a` @type ^`java.lang.String` := v2 @kind object;
  #L3895c2.  call `a`(v1) @signature `Le/e/d/a/r/f;.a:()V` @kind direct;
  #L3895c8.  return @kind void;
}
procedure `e.e.d.a.r.d` `a`(`e.e.d.a.r.f` v1 @kind this, `int` v2 , `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Le/e/d/a/r/f;.a:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Le/e/d/a/r/d;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L389488.  v0:= v1.`e.e.d.a.r.f.b` @type ^`e.e.d.a.r.c` @kind object;
  #L38948c.  call temp:= `a`(v0, v2, v3, v4, v5) @signature `Le/e/d/a/r/c;.a:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L389492.  v2:= temp @kind object;
  #L389494.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L38949a.  v3:= temp;
  #L38949c.  if v3 != 0 then goto L3894a4;
  #L3894a0.  v2:= 0I;
  #L3894a2.  return v2 @kind object;
  #L3894a4.  v3:= v1.`e.e.d.a.r.f.c` @type ^`java.util.Map` @kind object;
  #L3894a8.  call temp:= `containsKey`(v3, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L3894ae.  v3:= temp;
  #L3894b0.  if v3 != 0 then goto L3894ba;
  #L3894b4.  call `a`(v1, v2) @signature `Le/e/d/a/r/f;.a:(Ljava/lang/String;)V` @kind direct;
  #L3894ba.  v3:= v1.`e.e.d.a.r.f.c` @type ^`java.util.Map` @kind object;
  #L3894be.  call temp:= `get`(v3, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3894c4.  v2:= temp @kind object;
  #L3894c6.  v2:= (`e.e.d.a.r.d`) v2 @kind object;
  #L3894ca.  return v2 @kind object;
}
procedure `void` `a`(`e.e.d.a.r.f` v4 @kind this) @signature `Le/e/d/a/r/f;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L389624.  v0:= constclass @type ^`e.e.d.a.r.f` @kind object;
  #L389628.  v1:= new `java.lang.StringBuilder`;
  #L38962c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L389632.  v2:= v4.`e.e.d.a.r.f.a` @type ^`java.lang.String` @kind object;
  #L389636.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38963c.  v2:= "config" @kind object;
  #L389640.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L389646.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L38964c.  v1:= temp @kind object;
  #L38964e.  call temp:= `getResourceAsStream`(v0, v1) @signature `Ljava/lang/Class;.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;` @kind virtual;
  #L389654.  v0:= temp @kind object;
  #L389656.  v1:= 0I;
  #L389658.  v2:= new `java.io.ObjectInputStream`;
  #L38965c.  call `<init>`(v2, v0) @signature `Ljava/io/ObjectInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L389662.  v0:= v4.`e.e.d.a.r.f.b` @type ^`e.e.d.a.r.c` @kind object;
  #L389666.  call `readExternal`(v0, v2) @signature `Le/e/d/a/r/c;.readExternal:(Ljava/io/ObjectInput;)V` @kind virtual;
  #L38966c.  call `a`(v2) @signature `Le/e/d/a/r/f;.a:(Ljava/io/InputStream;)V` @kind static;
  #L389672.  goto L3896a2;
  #L389674.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L389676.  v1:= v2 @kind object;
  #L389678.  goto L3896a4;
  #L38967a.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L38967c.  v1:= v2 @kind object;
  #L38967e.  goto L389686;
  #L389680.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L389682.  goto L3896a4;
  #L389684.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L389686.  v2:= `@@e.e.d.a.r.f.d` @type ^`java.util.logging.Logger` @kind object;
  #L38968a.  v3:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L38968e.  call temp:= `toString`(v0) @signature `Ljava/io/IOException;.toString:()Ljava/lang/String;` @kind virtual;
  #L389694.  v0:= temp @kind object;
  #L389696.  call `log`(v2, v3, v0) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V` @kind virtual;
  #L38969c.  call `a`(v1) @signature `Le/e/d/a/r/f;.a:(Ljava/io/InputStream;)V` @kind static;
  #L3896a2.  return @kind void;
  #L3896a4.  call `a`(v1) @signature `Le/e/d/a/r/f;.a:(Ljava/io/InputStream;)V` @kind static;
  #L3896aa.  throw v0;
  catch `java.io.IOException` @[L389658..L389662] goto L389684;
  catch `java.lang.Throwable` @[L389658..L389662] goto L389680;
  catch `java.io.IOException` @[L389662..L38966c] goto L38967a;
  catch `java.lang.Throwable` @[L389662..L38966c] goto L389674;
  catch `java.lang.Throwable` @[L389686..L38969c] goto L389680;
}
procedure `void` `a`(`java.io.InputStream` v2 @kind object) @signature `Le/e/d/a/r/f;.a:(Ljava/io/InputStream;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3895dc.  if v2 == 0 then goto L389600;
  #L3895e0.  call `close`(v2) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L3895e6.  goto L389600;
  #L3895e8.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L3895ea.  v0:= `@@e.e.d.a.r.f.d` @type ^`java.util.logging.Logger` @kind object;
  #L3895ee.  v1:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L3895f2.  call temp:= `toString`(v2) @signature `Ljava/io/IOException;.toString:()Ljava/lang/String;` @kind virtual;
  #L3895f8.  v2:= temp @kind object;
  #L3895fa.  call `log`(v0, v1, v2) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V` @kind virtual;
  #L389600.  return @kind void;
  catch `java.io.IOException` @[L3895e0..L3895e6] goto L3895e8;
}
procedure `void` `a`(`e.e.d.a.r.f` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Le/e/d/a/r/f;.a:(Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3896e4.  v0:= constclass @type ^`e.e.d.a.r.f` @kind object;
  #L3896e8.  v1:= new `java.lang.StringBuilder`;
  #L3896ec.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3896f2.  v2:= v3.`e.e.d.a.r.f.a` @type ^`java.lang.String` @kind object;
  #L3896f6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3896fc.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L389702.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L389708.  v1:= temp @kind object;
  #L38970a.  call temp:= `getResourceAsStream`(v0, v1) @signature `Ljava/lang/Class;.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;` @kind virtual;
  #L389710.  v0:= temp @kind object;
  #L389712.  v1:= 0I;
  #L389714.  v2:= new `java.io.ObjectInputStream`;
  #L389718.  call `<init>`(v2, v0) @signature `Ljava/io/ObjectInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L38971e.  v0:= new `e.e.d.a.r.d`;
  #L389722.  call `<init>`(v0) @signature `Le/e/d/a/r/d;.<init>:()V` @kind direct;
  #L389728.  call `readExternal`(v0, v2) @signature `Le/e/d/a/r/d;.readExternal:(Ljava/io/ObjectInput;)V` @kind virtual;
  #L38972e.  v1:= v3.`e.e.d.a.r.f.c` @type ^`java.util.Map` @kind object;
  #L389732.  call temp:= `put`(v1, v4, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L389738.  call `a`(v2) @signature `Le/e/d/a/r/f;.a:(Ljava/io/InputStream;)V` @kind static;
  #L38973e.  goto L38976e;
  #L389740.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L389742.  v1:= v2 @kind object;
  #L389744.  goto L389770;
  #L389746.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L389748.  v1:= v2 @kind object;
  #L38974a.  goto L389752;
  #L38974c.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38974e.  goto L389770;
  #L389750.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L389752.  v0:= `@@e.e.d.a.r.f.d` @type ^`java.util.logging.Logger` @kind object;
  #L389756.  v2:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L38975a.  call temp:= `toString`(v4) @signature `Ljava/io/IOException;.toString:()Ljava/lang/String;` @kind virtual;
  #L389760.  v4:= temp @kind object;
  #L389762.  call `log`(v0, v2, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;)V` @kind virtual;
  #L389768.  call `a`(v1) @signature `Le/e/d/a/r/f;.a:(Ljava/io/InputStream;)V` @kind static;
  #L38976e.  return @kind void;
  #L389770.  call `a`(v1) @signature `Le/e/d/a/r/f;.a:(Ljava/io/InputStream;)V` @kind static;
  #L389776.  throw v4;
  catch `java.io.IOException` @[L389714..L38971e] goto L389750;
  catch `java.lang.Throwable` @[L389714..L38971e] goto L38974c;
  catch `java.io.IOException` @[L38971e..L389738] goto L389746;
  catch `java.lang.Throwable` @[L38971e..L389738] goto L389740;
  catch `java.lang.Throwable` @[L389752..L389768] goto L38974c;
}
procedure `boolean` `b`(`e.e.d.a.r.f` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le/e/d/a/r/f;.b:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L389440.  v0:= "zh" @kind object;
  #L389444.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L38944a.  v0:= temp;
  #L38944c.  if v0 != 0 then goto L389474;
  #L389450.  v0:= "ja" @kind object;
  #L389454.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L38945a.  v0:= temp;
  #L38945c.  if v0 != 0 then goto L389474;
  #L389460.  v0:= "ko" @kind object;
  #L389464.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L38946a.  v2:= temp;
  #L38946c.  if v2 != 0 then goto L389474;
  #L389470.  v2:= 1I;
  #L389472.  goto L389476;
  #L389474.  v2:= 0I;
  #L389476.  return v2;
}
procedure `java.lang.String` `a`(`e.e.d.a.r.f` v4 @kind this, `e.e.d.a.o` v5 @kind object, `java.lang.String` v6 @kind object, `java.lang.String` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Le/e/d/a/r/f;.a:(Le/e/d/a/o;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3894dc.  call temp:= `b`(v5) @signature `Le/e/d/a/o;.b:()I` @kind virtual;
  #L3894e2.  v0:= temp;
  #L3894e4.  v1:= 1I;
  #L3894e6.  if v0 == v1 then goto L3894ec;
  #L3894ea.  goto L389502;
  #L3894ec.  call temp:= `e`(v5) @signature `Le/e/d/a/o;.e:()J` @kind virtual;
  #L3894f2.  v0:= temp @kind wide;
  #L3894f4.  v2:= 10000000L;
  #L3894fa.  v0:= v0 / v2 @kind long;
  #L3894fc.  v1:= (`int`) v0 @kind l2i;
  #L3894fe.  v0:= v1 + 1000;
  #L389502.  call temp:= `a`(v4, v0, v6, v7, v8) @signature `Le/e/d/a/r/f;.a:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Le/e/d/a/r/d;` @kind direct;
  #L389508.  v7:= temp @kind object;
  #L38950a.  if v7 == 0 then goto L389518;
  #L38950e.  call temp:= `a`(v7, v5) @signature `Le/e/d/a/r/d;.a:(Le/e/d/a/o;)Ljava/lang/String;` @kind virtual;
  #L389514.  v7:= temp @kind object;
  #L389516.  goto L38951a;
  #L389518.  v7:= 0I;
  #L38951a.  v8:= "" @kind object;
  #L38951e.  if v7 == 0 then goto L38952e;
  #L389522.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L389528.  v1:= temp;
  #L38952a.  if v1 != 0 then goto L389554;
  #L38952e.  call temp:= `b`(v4, v6) @signature `Le/e/d/a/r/f;.b:(Ljava/lang/String;)Z` @kind direct;
  #L389534.  v6:= temp;
  #L389536.  if v6 == 0 then goto L389554;
  #L38953a.  v6:= "en" @kind object;
  #L38953e.  call temp:= `a`(v4, v0, v6, v8, v8) @signature `Le/e/d/a/r/f;.a:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)Le/e/d/a/r/d;` @kind direct;
  #L389544.  v6:= temp @kind object;
  #L389546.  if v6 != 0 then goto L38954c;
  #L38954a.  return v8 @kind object;
  #L38954c.  call temp:= `a`(v6, v5) @signature `Le/e/d/a/r/d;.a:(Le/e/d/a/o;)Ljava/lang/String;` @kind virtual;
  #L389552.  v7:= temp @kind object;
  #L389554.  if v7 == 0 then goto L38955a;
  #L389558.  goto L38955c;
  #L38955a.  v7:= v8 @kind object;
  #L38955c.  return v7 @kind object;
}
