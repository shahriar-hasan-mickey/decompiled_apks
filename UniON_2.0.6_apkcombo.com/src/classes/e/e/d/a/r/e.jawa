record `e.e.d.a.r.e` @kind class @AccessFlag ABSTRACT {
  `int` `e.e.d.a.r.e.a` @AccessFlag PROTECTED;
  `java.util.TreeSet` `e.e.d.a.r.e.b` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`e.e.d.a.r.e` v1 @kind this) @signature `Le/e/d/a/r/e;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3891dc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3891e2.  v0:= 0I;
  #L3891e4.  v1.`e.e.d.a.r.e.a` @type ^`int` := v0;
  #L3891e8.  v0:= new `java.util.TreeSet`;
  #L3891ec.  call `<init>`(v0) @signature `Ljava/util/TreeSet;.<init>:()V` @kind direct;
  #L3891f2.  v1.`e.e.d.a.r.e.b` @type ^`java.util.TreeSet` := v0 @kind object;
  #L3891f6.  return @kind void;
}
procedure `int` `a`(`e.e.d.a.r.e` v1 @kind this) @signature `Le/e/d/a/r/e;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L389144.  v0:= v1.`e.e.d.a.r.e.a` @type ^`int`;
  #L389148.  return v0;
}
procedure `java.lang.String` `a`(`int` v0 ) @signature `Le/e/d/a/r/e;.a:(I)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`java.io.ObjectInput` v0 @kind object) @signature `Le/e/d/a/r/e;.a:(Ljava/io/ObjectInput;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`java.io.ObjectOutput` v0 @kind object) @signature `Le/e/d/a/r/e;.a:(Ljava/io/ObjectOutput;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `b`(`int` v0 ) @signature `Le/e/d/a/r/e;.b:(I)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.TreeSet` `b`(`e.e.d.a.r.e` v1 @kind this) @signature `Le/e/d/a/r/e;.b:()Ljava/util/TreeSet;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3891c4.  v0:= v1.`e.e.d.a.r.e.b` @type ^`java.util.TreeSet` @kind object;
  #L3891c8.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`e.e.d.a.r.e` v4 @kind this) @signature `Le/e/d/a/r/e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L38915c.  v0:= new `java.lang.StringBuilder`;
  #L389160.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L389166.  call temp:= `a`(v4) @signature `Le/e/d/a/r/e;.a:()I` @kind virtual;
  #L38916c.  v1:= temp;
  #L38916e.  v2:= 0I;
  #L389170.  if v2 >= v1 then goto L3891aa;
  #L389174.  call temp:= `b`(v4, v2) @signature `Le/e/d/a/r/e;.b:(I)I` @kind virtual;
  #L38917a.  v3:= temp;
  #L38917c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L389182.  v3:= "|" @kind object;
  #L389186.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38918c.  call temp:= `a`(v4, v2) @signature `Le/e/d/a/r/e;.a:(I)Ljava/lang/String;` @kind virtual;
  #L389192.  v3:= temp @kind object;
  #L389194.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38919a.  v3:= "\n" @kind object;
  #L38919e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3891a4.  v2:= v2 + 1;
  #L3891a8.  goto L389170;
  #L3891aa.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3891b0.  v0:= temp @kind object;
  #L3891b2.  return v0 @kind object;
}
